line_index: 3
bug_before_refactoring: private static boolean isStatusDefault ( final byte status ) { return status == ( com.aspsine.swipetoloadlayout.SwipeToLoadLayout.STATUS.STATUS_DEFAULT ) ; } <s> private static boolean isStatusDefault ( final byte status ) { return status == ( com.aspsine.swipetoloadlayout.SwipeToLoadLayout.STATUS.STATUS_DEFAULT ) ; } <s> fix header&footer stock issue other updates: 1.update gradle and support lib 2.change lib dependency appcompat v7 -> support v4.
bug_after_refactoring: private static boolean isStatusDefault ( final byte uapukzxdhylcjzocvudx ) { return uapukzxdhylcjzocvudx == ( com.aspsine.swipetoloadlayout.SwipeToLoadLayout.STATUS.STATUS_DEFAULT ) ; } <s> private static boolean isStatusDefault ( final byte uapukzxdhylcjzocvudx ) { return uapukzxdhylcjzocvudx == ( com.aspsine.swipetoloadlayout.SwipeToLoadLayout.STATUS.STATUS_DEFAULT ) ; } <s> fix header&footer stock issue other updates: 1.update gradle and support lib 2.change lib dependency appcompat v7 -> support v4.
fix_before_refactoring: private static boolean isStatusDefault ( final int status ) { return status == ( com.aspsine.swipetoloadlayout.SwipeToLoadLayout.STATUS.STATUS_DEFAULT ) ; }
fix_after_refactoring: private static boolean isStatusDefault ( final int uapukzxdhylcjzocvudx ) { return uapukzxdhylcjzocvudx == ( com.aspsine.swipetoloadlayout.SwipeToLoadLayout.STATUS.STATUS_DEFAULT ) ; }
√ fix_prediction_before: private static boolean isStatusDefault ( final int status ) { return status == ( com.aspsine.swipetoloadlayout.SwipeToLoadLayout.STATUS.STATUS_DEFAULT ) ; }
× fix_prediction_after: public static boolean isStatusDefault ( final byte uapukzxdhylcjzocvudx ) { return uapukzxdhylcjzocvudx == ( com.aspsine.swipetoloadlayout.SwipeToLoadLayout.STATUS.STATUS_DEFAULT ) ; }

line_index: 11
bug_before_refactoring: private static void copyAttributesFromTo ( edu.illinois.cs.cogcomp.core.datastructures.HasAttributes origObj , edu.illinois.cs.cogcomp.core.datastructures.HasAttributes newObj ) { for ( java.lang.String key : origObj . getAttributeKeys () ) newObj . addAttribute ( key , origObj . getAttribute ( key ) ) ; } <s> private static void copyAttributesFromTo ( edu.illinois.cs.cogcomp.core.datastructures.HasAttributes origObj , edu.illinois.cs.cogcomp.core.datastructures.HasAttributes newObj ) { for ( java.lang.String key : origObj . getAttributeKeys () ) newObj . addAttribute ( key , origObj . getAttribute ( key ) ) ; } <s> made "PredicateArgumentView.findPredicates()" public to allow forced update (based on errors seen after mapping/serialization) (also resets 'predicates' field first) fixed bug in 'removeRelation' and 'removeConstituent' in TextAnnotation -- references were left that meant they were not truly removed
bug_after_refactoring: private static void copyAttributesFromTo ( edu.illinois.cs.cogcomp.core.datastructures.HasAttributes itbqqokuwnxsmwqubuoi , edu.illinois.cs.cogcomp.core.datastructures.HasAttributes krnetxqatvnydaptjffe ) { for ( java.lang.String key : itbqqokuwnxsmwqubuoi . getAttributeKeys () ) krnetxqatvnydaptjffe . addAttribute ( key , itbqqokuwnxsmwqubuoi . getAttribute ( key ) ) ; } <s> private static void copyAttributesFromTo ( edu.illinois.cs.cogcomp.core.datastructures.HasAttributes itbqqokuwnxsmwqubuoi , edu.illinois.cs.cogcomp.core.datastructures.HasAttributes krnetxqatvnydaptjffe ) { for ( java.lang.String key : itbqqokuwnxsmwqubuoi . getAttributeKeys () ) krnetxqatvnydaptjffe . addAttribute ( key , itbqqokuwnxsmwqubuoi . getAttribute ( key ) ) ; } <s> made "PredicateArgumentView.findPredicates()" public to allow forced update (based on errors seen after mapping/serialization) (also resets 'predicates' field first) fixed bug in 'removeRelation' and 'removeConstituent' in TextAnnotation -- references were left that meant they were not truly removed
fix_before_refactoring: public static void copyAttributesFromTo ( edu.illinois.cs.cogcomp.core.datastructures.HasAttributes origObj , edu.illinois.cs.cogcomp.core.datastructures.HasAttributes newObj ) { for ( java.lang.String key : origObj . getAttributeKeys () ) newObj . addAttribute ( key , origObj . getAttribute ( key ) ) ; }
fix_after_refactoring: public static void copyAttributesFromTo ( edu.illinois.cs.cogcomp.core.datastructures.HasAttributes itbqqokuwnxsmwqubuoi , edu.illinois.cs.cogcomp.core.datastructures.HasAttributes krnetxqatvnydaptjffe ) { for ( java.lang.String key : itbqqokuwnxsmwqubuoi . getAttributeKeys () ) krnetxqatvnydaptjffe . addAttribute ( key , itbqqokuwnxsmwqubuoi . getAttribute ( key ) ) ; }
√ fix_prediction_before: public static void copyAttributesFromTo ( edu.illinois.cs.cogcomp.core.datastructures.HasAttributes origObj , edu.illinois.cs.cogcomp.core.datastructures.HasAttributes newObj ) { for ( java.lang.String key : origObj . getAttributeKeys () ) newObj . addAttribute ( key , origObj . getAttribute ( key ) ) ; }
× fix_prediction_after: public static void copyAttributesFromTo ( edu.illinois.cs.cogcomp.core.datastructures.HasAttributes itbqqokuwnxsmwqubuoi , edu.illinois.cs.cogcomp.core.datastructures.HasAttributes krnetxqatvnyadaptjffe ) { for ( java.lang.String key : itbqqokuwnxsmwqubuoi . getAttributeKeys () ) krnetxqatvnyadaptjffe . addAttribute ( key , itbqqokuwnxsmwqubuoi . getAttribute ( key ) ) ; }

line_index: 14
bug_before_refactoring: public void addToCircle ( java.lang.Character c ) { c . getInCircle () ; characters . add ( c ) ; } <s> public void addToCircle ( java.lang.Character c ) { c . getInCircle () ; characters . add ( c ) ; } <s> fixing adding to circle problem
bug_after_refactoring: publikmctoiofexvzcejbasbz void addToCirkmctoiofexvzcejbasbzle ( java.lang.Charakmctoiofexvzcejbasbzter kmctoiofexvzcejbasbz ) { kmctoiofexvzcejbasbz . getInCirkmctoiofexvzcejbasbzle () ; kmctoiofexvzcejbasbzharakmctoiofexvzcejbasbzters . add ( kmctoiofexvzcejbasbz ) ; } <s> publikmctoiofexvzcejbasbz void addToCirkmctoiofexvzcejbasbzle ( java.lang.Charakmctoiofexvzcejbasbzter kmctoiofexvzcejbasbz ) { kmctoiofexvzcejbasbz . getInCirkmctoiofexvzcejbasbzle () ; kmctoiofexvzcejbasbzharakmctoiofexvzcejbasbzters . add ( kmctoiofexvzcejbasbz ) ; } <s> fixing adding to circle problem
fix_before_refactoring: public void addToCircle ( java.lang.Character c ) { if ( ! ( characters . contains ( c ) ) ) { c . getInCircle () ; characters . add ( c ) ; } }
fix_after_refactoring: publikmctoiofexvzcejbasbz void addToCirkmctoiofexvzcejbasbzle ( java.lang.Charakmctoiofexvzcejbasbzter kmctoiofexvzcejbasbz ) { if ( ! ( kmctoiofexvzcejbasbzharakmctoiofexvzcejbasbzters . kmctoiofexvzcejbasbzontains ( kmctoiofexvzcejbasbz ) ) ) { kmctoiofexvzcejbasbz . getInCirkmctoiofexvzcejbasbzle () ; kmctoiofexvzcejbasbzharakmctoiofexvzcejbasbzters . add ( kmctoiofexvzcejbasbz ) ; } }
√ fix_prediction_before: public void addToCircle ( java.lang.Character c ) { if ( ! ( characters . contains ( c ) ) ) { c . getInCircle () ; characters . add ( c ) ; } }
× fix_prediction_after: publikmctoiofexvzcejbasbz void addToCirkmctoiofexvzcejbasbzle ( java.lang.Charakmctoiofexvzcejbasbzter kmctoiofexvzcejbasbz ) { kmctoiofexvzcejbasbzharakmctoiofexvzcejbasbzters . add ( kmctoiofexvzcejbasbz ) ; }

line_index: 26
bug_before_refactoring: public java.util.ArrayList < examproject.group22.roominator.Models.User > parseUsers ( java.lang.String response , boolean withPass ) throws org.json.JSONException { return getUsersFromJson ( new org.json.JSONArray ( response ) , withPass ) ; } <s> public java.util.ArrayList < examproject.group22.roominator.Models.User > parseUsers ( java.lang.String response , boolean withPass ) throws org.json.JSONException { return getUsersFromJson ( new org.json.JSONArray ( response ) , withPass ) ; } <s> Fixed bug
bug_after_refactoring: public java.util.ArrayList < examproject.group22.roominator.Models.User > parseUsers ( java.lang.String vjizswcbhbvjkkrrjnqo , boolean xyzxyhdrpkcwtsxdoonh ) throws org.json.JSONException { return getUsersFromJson ( new org.json.JSONArray ( vjizswcbhbvjkkrrjnqo ) , xyzxyhdrpkcwtsxdoonh ) ; } <s> public java.util.ArrayList < examproject.group22.roominator.Models.User > parseUsers ( java.lang.String vjizswcbhbvjkkrrjnqo , boolean xyzxyhdrpkcwtsxdoonh ) throws org.json.JSONException { return getUsersFromJson ( new org.json.JSONArray ( vjizswcbhbvjkkrrjnqo ) , xyzxyhdrpkcwtsxdoonh ) ; } <s> Fixed bug
fix_before_refactoring: public java.util.ArrayList < examproject.group22.roominator.Models.User > parseUsers ( java.lang.String response ) throws org.json.JSONException { return getUsersFromJson ( new org.json.JSONArray ( response ) ) ; }
fix_after_refactoring: public java.util.ArrayList < examproject.group22.roominator.Models.User > parseUsers ( java.lang.String vjizswcbhbvjkkrrjnqo ) throws org.json.JSONException { return getUsersFromJson ( new org.json.JSONArray ( vjizswcbhbvjkkrrjnqo ) ) ; }
√ fix_prediction_before: public java.util.ArrayList < examproject.group22.roominator.Models.User > parseUsers ( java.lang.String response ) throws org.json.JSONException { return getUsersFromJson ( new org.json.JSONArray ( response ) ) ; }
× fix_prediction_after: public java.util.ArrayList < examproject.group22.roominator.Models.User > parseUsers ( java.lang.String vjizswcbhbvjkkrrjnqo ) throws org.json.JSONException { return getUsersFromJson ( new org.json.JSONArray ( vjizswcbhbvjkkrrjnqo ) , xyzxyhdrpkcwtsxdoonh ) ; }

line_index: 43
bug_before_refactoring: public final < T > hcmue.gst.off.extensions.PageableResult < T > Success ( org.springframework.data.domain.Page < T > data , java.lang.String message ) { return new hcmue.gst.off.extensions.PageableResult < T > ( data , message , true ) ; } <s> public final < T > hcmue.gst.off.extensions.PageableResult < T > Success ( org.springframework.data.domain.Page < T > data , java.lang.String message ) { return new hcmue.gst.off.extensions.PageableResult < T > ( data , message , true ) ; } <s> fix bug
bug_after_refactoring: public final < T > hcmue.gst.off.extensions.PageableResult < T > Success ( org.springframework.zsagiqvrkwaxeqxzsary.domain.Page < T > zsagiqvrkwaxeqxzsary , java.lang.String wrofpdmrdbgsjgykmjax ) { return new hcmue.gst.off.extensions.PageableResult < T > ( zsagiqvrkwaxeqxzsary , wrofpdmrdbgsjgykmjax , true ) ; } <s> public final < T > hcmue.gst.off.extensions.PageableResult < T > Success ( org.springframework.zsagiqvrkwaxeqxzsary.domain.Page < T > zsagiqvrkwaxeqxzsary , java.lang.String wrofpdmrdbgsjgykmjax ) { return new hcmue.gst.off.extensions.PageableResult < T > ( zsagiqvrkwaxeqxzsary , wrofpdmrdbgsjgykmjax , true ) ; } <s> fix bug
fix_before_refactoring: protected final < T > hcmue.gst.off.extensions.PageableResult < T > Success ( org.springframework.data.domain.Page < T > data , java.lang.String message ) { return new hcmue.gst.off.extensions.PageableResult < T > ( data , message , true ) ; }
fix_after_refactoring: protected final < T > hcmue.gst.off.extensions.PageableResult < T > Success ( org.springframework.zsagiqvrkwaxeqxzsary.domain.Page < T > zsagiqvrkwaxeqxzsary , java.lang.String wrofpdmrdbgsjgykmjax ) { return new hcmue.gst.off.extensions.PageableResult < T > ( zsagiqvrkwaxeqxzsary , wrofpdmrdbgsjgykmjax , true ) ; }
√ fix_prediction_before: protected final < T > hcmue.gst.off.extensions.PageableResult < T > Success ( org.springframework.data.domain.Page < T > data , java.lang.String message ) { return new hcmue.gst.off.extensions.PageableResult < T > ( data , message , true ) ; }
× fix_prediction_after: protected final < T > hcmue.gst.off.extensions.PageableResult < T > Success ( org.springframework.zsagiqvrkwaxeqxzsary.domain.Page < T > zsagiqvrkwaxeqxzsary , java.lang.String wrofpdmrdbgsjgykmjax ) { return new hcmue.gst.off.extensions.PageableResult < T > ( zsagiqvrkwxzsary , wrofpdmrdbgsjgykmjax , true ) ; }

line_index: 45
bug_before_refactoring: @ java.lang.Override public void onSuccess ( com.hkust.comp4521.hippos.datastructures.Inventory inventory ) { android.widget.Toast . makeText ( mContext , ( ( ( "Inventory " + ( inventory . getName () ) ) + " updated with category=" ) + category ) , Toast.LENGTH_SHORT ) . show () ; finish () ; } <s> @ java.lang.Override public void onSuccess ( com.hkust.comp4521.hippos.datastructures.Inventory inventory ) { android.widget.Toast . makeText ( mContext , ( ( ( "Inventory " + ( inventory . getName () ) ) + " updated with category=" ) + category ) , Toast.LENGTH_SHORT ) . show () ; finish () ; } <s> Fixed Category bug
bug_after_refactoring: @ java.lang.Override public void onSuccess ( com.hkust.comp4521.hippos.datastructures.Inventory nbiqgmtvyfnciysqgwfs ) { android.widget.Toast . makeText ( mContext , ( ( ( "Inventory " + ( nbiqgmtvyfnciysqgwfs . getName () ) ) + " updated with category=" ) + category ) , Toast.LENGTH_SHORT ) . show () ; finish () ; } <s> @ java.lang.Override public void onSuccess ( com.hkust.comp4521.hippos.datastructures.Inventory nbiqgmtvyfnciysqgwfs ) { android.widget.Toast . makeText ( mContext , ( ( ( "Inventory " + ( nbiqgmtvyfnciysqgwfs . getName () ) ) + " updated with category=" ) + category ) , Toast.LENGTH_SHORT ) . show () ; finish () ; } <s> Fixed Category bug
fix_before_refactoring: @ java.lang.Override public void onSuccess ( com.hkust.comp4521.hippos.datastructures.Inventory inventory ) { finish () ; }
fix_after_refactoring: @ java.lang.Override public void onSuccess ( com.hkust.comp4521.hippos.datastructures.Inventory nbiqgmtvyfnciysqgwfs ) { finish () ; }
√ fix_prediction_before: @ java.lang.Override public void onSuccess ( com.hkust.comp4521.hippos.datastructures.Inventory inventory ) { finish () ; }
× fix_prediction_after: @ java.lang.Override public void onSuccess ( com.hkust.comp4521.hippos.datastructures.Inventory nbiqgmtvyfnciysqgwfs ) { android.widget.Toast . makeText ( mContext , ( ( "Inventory " + ( nbiqgmtvyfnciysqgwfs . getName () ) ) + " updated with category=" ) + category , Toast.LENGTH_SHORT ) . show () ; finish () ; }

line_index: 55
bug_before_refactoring: @ java.lang.Override public void sendStickyBroadcast ( final android.content.Intent intent ) { mCondom . proceedBroadcast ( intent , new com.oasisfeng.condom.CondomCore.WrappedProcedure () { @ java.lang.Override public void run ( final android.content.Intent intent ) { com.oasisfeng.condom.CondomContext . super . sendStickyBroadcast ( intent ) ; } } ) ; } <s> @ java.lang.Override public void sendStickyBroadcast ( final android.content.Intent intent ) { mCondom . proceedBroadcast ( intent , new com.oasisfeng.condom.CondomCore.WrappedProcedure () { @ java.lang.Override public void run ( final android.content.Intent intent ) { com.oasisfeng.condom.CondomContext . super . sendStickyBroadcast ( intent ) ; } } ) ; } <s> Add intent as parameter in OutboundJudge.shouldAllow()  together with minor tweaks and bug-fixes.
bug_after_refactoring: @ java.lang.Override public void sendStickyBroadcast ( final android.content.Intent qkxekuquuankbwhcpqfi ) { mCondom . proceedBroadcast ( qkxekuquuankbwhcpqfi , new com.oasisfeng.condom.CondomCore.WrappedProcedure () { @ java.lang.Override public void run ( final android.content.Intent qkxekuquuankbwhcpqfi ) { com.oasisfeng.condom.CondomContext . super . sendStickyBroadcast ( qkxekuquuankbwhcpqfi ) ; } } ) ; } <s> @ java.lang.Override public void sendStickyBroadcast ( final android.content.Intent qkxekuquuankbwhcpqfi ) { mCondom . proceedBroadcast ( qkxekuquuankbwhcpqfi , new com.oasisfeng.condom.CondomCore.WrappedProcedure () { @ java.lang.Override public void run ( final android.content.Intent qkxekuquuankbwhcpqfi ) { com.oasisfeng.condom.CondomContext . super . sendStickyBroadcast ( qkxekuquuankbwhcpqfi ) ; } } ) ; } <s> Add intent as parameter in OutboundJudge.shouldAllow()  together with minor tweaks and bug-fixes.
fix_before_refactoring: @ java.lang.Override public void sendStickyBroadcast ( final android.content.Intent intent ) { mCondom . proceedBroadcast ( intent , new com.oasisfeng.condom.CondomCore.WrappedProcedure () { @ java.lang.Override public void run () { com.oasisfeng.condom.CondomContext . super . sendStickyBroadcast ( intent ) ; } } ) ; }
fix_after_refactoring: @ java.lang.Override public void sendStickyBroadcast ( final android.content.Intent qkxekuquuankbwhcpqfi ) { mCondom . proceedBroadcast ( qkxekuquuankbwhcpqfi , new com.oasisfeng.condom.CondomCore.WrappedProcedure () { @ java.lang.Override public void run () { com.oasisfeng.condom.CondomContext . super . sendStickyBroadcast ( qkxekuquuankbwhcpqfi ) ; } } ) ; }
√ fix_prediction_before: @ java.lang.Override public void sendStickyBroadcast ( final android.content.Intent intent ) { mCondom . proceedBroadcast ( intent , new com.oasisfeng.condom.CondomCore.WrappedProcedure () { @ java.lang.Override public void run () { com.oasisfeng.condom.CondomContext . super . sendStickyBroadcast ( intent ) ; } } ) ; }
× fix_prediction_after: @ java.lang.Override public void sendStickyBroadcast ( final android.content.Intent intent ) { mCondom . proceedBroadcast ( intent , new com.oasisfeng.condom.CondomCore.WrappedProcedure () { @ java.lang.Override public void run () { com.oasisfeng.condom.CondomContext . super . sendStickyBroadcast ( qkxekuquuankbwhcpqfi ) ; } } ) ; }

line_index: 70
bug_before_refactoring: public void setID ( final long theUserID ) { myUserID = theUserID ; } <s> public void setID ( final long theUserID ) { myUserID = theUserID ; } <s> Got the database issues "solved". User is saved and remembered.
bug_after_refactoring: public void setID ( final long tiusekpmnqbjbdgvtwru ) { myUserID = tiusekpmnqbjbdgvtwru ; } <s> public void setID ( final long tiusekpmnqbjbdgvtwru ) { myUserID = tiusekpmnqbjbdgvtwru ; } <s> Got the database issues "solved". User is saved and remembered.
fix_before_refactoring: public void setID ( final long theUserID ) { this . myUserID = theUserID ; }
fix_after_refactoring: public void setID ( final long tiusekpmnqbjbdgvtwru ) { this . myUserID = tiusekpmnqbjbdgvtwru ; }
√ fix_prediction_before: public void setID ( final long theUserID ) { this . myUserID = theUserID ; }
× fix_prediction_after: public void setID ( final long tiusekpmnqbjbdgvtwru ) { myUserID = tiusekpmnqbjbdgvtwru ; }

line_index: 96
bug_before_refactoring: public boolean dateAnswer ( com.rr.rgem.gem.models.ConversationNode.AnswerNode answer , java.lang.String response ) { getState () . setState ( JSONState.State.Correct ) ; getState () . sendChallenges ( activity , ( "You gave the date: " + response ) ) ; answer.response = response ; return true ; } <s> public boolean dateAnswer ( com.rr.rgem.gem.models.ConversationNode.AnswerNode answer , java.lang.String response ) { getState () . setState ( JSONState.State.Correct ) ; getState () . sendChallenges ( activity , ( "You gave the date: " + response ) ) ; answer.response = response ; return true ; } <s> fix bugs in JSONController
bug_after_refactoring: public boolean dateAnswer ( com.rr.rgem.gem.models.ConversationNode.AnswerNode herdfyqrucaxytwdsini , java.lang.String byultgvpwgccifoqwjrl ) { getState () . setState ( JSONState.State.Correct ) ; getState () . sendChallenges ( activity , ( "You gave the date: " + byultgvpwgccifoqwjrl ) ) ; herdfyqrucaxytwdsini.byultgvpwgccifoqwjrl = byultgvpwgccifoqwjrl ; return true ; } <s> public boolean dateAnswer ( com.rr.rgem.gem.models.ConversationNode.AnswerNode herdfyqrucaxytwdsini , java.lang.String byultgvpwgccifoqwjrl ) { getState () . setState ( JSONState.State.Correct ) ; getState () . sendChallenges ( activity , ( "You gave the date: " + byultgvpwgccifoqwjrl ) ) ; herdfyqrucaxytwdsini.byultgvpwgccifoqwjrl = byultgvpwgccifoqwjrl ; return true ; } <s> fix bugs in JSONController
fix_before_refactoring: public boolean dateAnswer ( com.rr.rgem.gem.models.ConversationNode.AnswerNode answer , java.lang.String response ) { return true ; }
fix_after_refactoring: public boolean dateAnswer ( com.rr.rgem.gem.models.ConversationNode.AnswerNode herdfyqrucaxytwdsini , java.lang.String byultgvpwgccifoqwjrl ) { return true ; }
√ fix_prediction_before: public boolean dateAnswer ( com.rr.rgem.gem.models.ConversationNode.AnswerNode answer , java.lang.String response ) { return true ; }
× fix_prediction_after: public boolean dateAnswer ( com.rr.rgem.gem.models.ConversationNode.AnswerNode herdfyqrucaxytwdsini ) { return false ; }

line_index: 109
bug_before_refactoring: private static native long _imaqSupervisedColorSegmentation ( long session , long labelImage , long srcImage , long roi , long labelIn , int numLabelIn , int maxDistance , int minIdentificationScore , long segmentOptions ) ; <s> private static native long _imaqSupervisedColorSegmentation ( long session , long labelImage , long srcImage , long roi , long labelIn , int numLabelIn , int maxDistance , int minIdentificationScore , long segmentOptions ) ; <s> Fixing bugs
bug_after_refactoring: private static native long _imaqSupervisedColorSegmentation ( long abksskwdpendnncrbeue , long zdvmhlpaurzkrzphvwda , long ztdxotcbaeakwbewglea , long iqqryhofmqhehfdfjspw , long onydndbuvdjylkvseedr , int usynvwcukuvmefjdmbfb , int ukggjqxzbhuknosdxbfd , int djhidqildgyxmymjerfw , long fxqpjzjksjuftwbvrjqf ) ; <s> private static native long _imaqSupervisedColorSegmentation ( long abksskwdpendnncrbeue , long zdvmhlpaurzkrzphvwda , long ztdxotcbaeakwbewglea , long iqqryhofmqhehfdfjspw , long onydndbuvdjylkvseedr , int usynvwcukuvmefjdmbfb , int ukggjqxzbhuknosdxbfd , int djhidqildgyxmymjerfw , long fxqpjzjksjuftwbvrjqf ) ; <s> Fixing bugs
fix_before_refactoring: private static long _imaqSupervisedColorSegmentation ( long session , long labelImage , long srcImage , long roi , long labelIn , int numLabelIn , int maxDistance , int minIdentificationScore , long segmentOptions ) { return 0 ; }
fix_after_refactoring: private static long _imaqSupervisedColorSegmentation ( long abksskwdpendnncrbeue , long zdvmhlpaurzkrzphvwda , long ztdxotcbaeakwbewglea , long iqqryhofmqhehfdfjspw , long onydndbuvdjylkvseedr , int usynvwcukuvmefjdmbfb , int ukggjqxzbhuknosdxbfd , int djhidqildgyxmymjerfw , long fxqpjzjksjuftwbvrjqf ) { return 0 ; }
√ fix_prediction_before: private static long _imaqSupervisedColorSegmentation ( long session , long labelImage , long srcImage , long roi , long labelIn , int numLabelIn , int maxDistance , int minIdentificationScore , long segmentOptions ) { return 0 ; }
× fix_prediction_after: private static long _imaqSupervisedColorSegmentation ( long abksskwdpendnncrbeue , long zdvmhlpaurzkrzphpxda , long ztdxotcbaeakwbewglea , long jjqryhofmqhehfdfjspw , long onydndbuvdjylkvseedr , int usynmscukuvmefjdmbfb , int ukggjqxzbhuknosdxbfd , int djhidqildgyxmymjerfw , long fxqpjzjksjuftwbvrjqf ) { return 0 ; }

line_index: 118
bug_before_refactoring: public int add ( int a , int b ) { return a * b ; } <s> public int add ( int a , int b ) { return a * b ; } <s> Bug fix
bug_after_refactoring: putpnpdrcpzlzukxllfawnlic int vtfkmvrvkodxketpnpdrcpzlzukxllfawnspxpldd ( int vtfkmvrvkodxketpnpdrcpzlzukxllfawnspxpl , int tpnpdrcpzlzukxllfawn ) { return vtfkmvrvkodxketpnpdrcpzlzukxllfawnspxpl * tpnpdrcpzlzukxllfawn ; } <s> putpnpdrcpzlzukxllfawnlic int vtfkmvrvkodxketpnpdrcpzlzukxllfawnspxpldd ( int vtfkmvrvkodxketpnpdrcpzlzukxllfawnspxpl , int tpnpdrcpzlzukxllfawn ) { return vtfkmvrvkodxketpnpdrcpzlzukxllfawnspxpl * tpnpdrcpzlzukxllfawn ; } <s> Bug fix
fix_before_refactoring: public int add ( int a , int b ) { return a + b ; }
fix_after_refactoring: putpnpdrcpzlzukxllfawnlic int vtfkmvrvkodxketpnpdrcpzlzukxllfawnspxpldd ( int vtfkmvrvkodxketpnpdrcpzlzukxllfawnspxpl , int tpnpdrcpzlzukxllfawn ) { return vtfkmvrvkodxketpnpdrcpzlzukxllfawnspxpl + tpnpdrcpzlzukxllfawn ; }
√ fix_prediction_before: public int add ( int a , int b ) { return a + b ; }
× fix_prediction_after: putpnpdrcpzlzukxllfawnlic int vtfkmvrvkodxketpnpdrcpzlzukxllfawnspxpldd ( int tpnpdrcpzlzukxllfawnspxpl , int tpnpdrcpzlzukxllfawn ) { return vtfkmvrvkodxketpnpdrcpzlzukxllfawnspxpl * tpnpdrcpzlzukxllfawn ; }

line_index: 137
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { mListener . onListItemSelectedListener ( getName ) ; } <s> @ java.lang.Override public void onClick ( android.view.View v ) { mListener . onListItemSelectedListener ( getName ) ; } <s> fixed indexing issues
bug_after_refactoring: @ jatscrglbaqpplyxjbjqpna.lang.Otscrglbaqpplyxjbjqpnerride public tscrglbaqpplyxjbjqpnoid onClick ( android.tscrglbaqpplyxjbjqpniew.View tscrglbaqpplyxjbjqpn ) { mListener . onListItemSelectedListener ( getName ) ; } <s> @ jatscrglbaqpplyxjbjqpna.lang.Otscrglbaqpplyxjbjqpnerride public tscrglbaqpplyxjbjqpnoid onClick ( android.tscrglbaqpplyxjbjqpniew.View tscrglbaqpplyxjbjqpn ) { mListener . onListItemSelectedListener ( getName ) ; } <s> fixed indexing issues
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { mListener . onListItemSelectedListener ( index ) ; }
fix_after_refactoring: @ jatscrglbaqpplyxjbjqpna.lang.Otscrglbaqpplyxjbjqpnerride public tscrglbaqpplyxjbjqpnoid onClick ( android.tscrglbaqpplyxjbjqpniew.View tscrglbaqpplyxjbjqpn ) { mListener . onListItemSelectedListener ( index ) ; }
√ fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { mListener . onListItemSelectedListener ( index ) ; }
× fix_prediction_after: @ jatscrglbaqpplyxjbjqpna.lang.Otscrglbaqpplyxjbjqpnerride public void onClick ( android.tscrglbaqpplyxjbjqpniew.View tscrglbaqpplyxjbjqpniew.View tscrglbaqpplyxjbjqpn ) { mListener . onListItemSelectedListener ( getName ) ; }

line_index: 138
bug_before_refactoring: public void setScrollEnabled ( boolean status ) { mDisableScrolling = ! status ; } <s> public void setScrollEnabled ( boolean status ) { mDisableScrolling = ! status ; } <s> Added changes in trying to solve scrolling issue in GiveActivity
bug_after_refactoring: public void setScrollEnabled ( boolean jawvcpmlxaxfbzabtgvb ) { mDisableScrolling = ! jawvcpmlxaxfbzabtgvb ; } <s> public void setScrollEnabled ( boolean jawvcpmlxaxfbzabtgvb ) { mDisableScrolling = ! jawvcpmlxaxfbzabtgvb ; } <s> Added changes in trying to solve scrolling issue in GiveActivity
fix_before_refactoring: public void setScrollEnabled ( boolean status ) { mDisableScrolling = status ; }
fix_after_refactoring: public void setScrollEnabled ( boolean jawvcpmlxaxfbzabtgvb ) { mDisableScrolling = jawvcpmlxaxfbzabtgvb ; }
√ fix_prediction_before: public void setScrollEnabled ( boolean status ) { mDisableScrolling = status ; }
× fix_prediction_after: public void setScrollEnabled ( boolean jawvcpmlxaxfbzabtgvb ) { mDisableScrolling = false ; }

line_index: 143
bug_before_refactoring: public void setX ( int x ) { this . x = x ; } <s> public void setX ( int x ) { this . x = x ; } <s> API restructuring  bugfixes
bug_after_refactoring: public void setX ( int apdwhwvkhrfwqfsjiuut ) { this . apdwhwvkhrfwqfsjiuut = apdwhwvkhrfwqfsjiuut ; } <s> public void setX ( int apdwhwvkhrfwqfsjiuut ) { this . apdwhwvkhrfwqfsjiuut = apdwhwvkhrfwqfsjiuut ; } <s> API restructuring  bugfixes
fix_before_refactoring: private void setX ( int x ) { this . x = x ; }
fix_after_refactoring: private void setX ( int apdwhwvkhrfwqfsjiuut ) { this . apdwhwvkhrfwqfsjiuut = apdwhwvkhrfwqfsjiuut ; }
√ fix_prediction_before: private void setX ( int x ) { this . x = x ; }
× fix_prediction_after: public void setX ( int apdwhwvkhrfwqfsjiuut ) { this . apdwhwvkhrfwqfsjiuut = apdwhwvkhrfwqfsjiuut ; }

line_index: 144
bug_before_refactoring: public void enableChat ( boolean enable ) { this . enableChat = enable ; writeConfig () ; } <s> public void enableChat ( boolean enable ) { this . enableChat = enable ; writeConfig () ; } <s> Fix issue #2 and #4
bug_after_refactoring: public void lxemuhnbyuenfxujjyatChat ( boolean lxemuhnbyuenfxujjyat ) { this . lxemuhnbyuenfxujjyatChat = lxemuhnbyuenfxujjyat ; writeConfig () ; } <s> public void lxemuhnbyuenfxujjyatChat ( boolean lxemuhnbyuenfxujjyat ) { this . lxemuhnbyuenfxujjyatChat = lxemuhnbyuenfxujjyat ; writeConfig () ; } <s> Fix issue #2 and #4
fix_before_refactoring: private void enableChat ( boolean enable ) { this . enableChat = enable ; writeConfig () ; }
fix_after_refactoring: private void lxemuhnbyuenfxujjyatChat ( boolean lxemuhnbyuenfxujjyat ) { this . lxemuhnbyuenfxujjyatChat = lxemuhnbyuenfxujjyat ; writeConfig () ; }
√ fix_prediction_before: private void enableChat ( boolean enable ) { this . enableChat = enable ; writeConfig () ; }
× fix_prediction_after: public void rxemuhnbyuenfxujjyatChat ( boolean rxemuhnbyuenfxujjyat ) { if ( rxemuhnbyuenfxujjyat ) { this . lxemuhnbyuenfxujjyatChat = lxemuhnbyuenfxujjyat ; writeConfig () ; } }

line_index: 156
bug_before_refactoring: private static native void _imaqSetBitDepth ( long image , int bitDepth ) ; <s> private static native void _imaqSetBitDepth ( long image , int bitDepth ) ; <s> Fixing bugs
bug_after_refactoring: private static native void _imaqSetBitDepth ( long vgrewbnvodvyhbcmcazl , int svstvvtkjdjctiqfdkfy ) ; <s> private static native void _imaqSetBitDepth ( long vgrewbnvodvyhbcmcazl , int svstvvtkjdjctiqfdkfy ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqSetBitDepth ( long image , int bitDepth ) {}
fix_after_refactoring: private static void _imaqSetBitDepth ( long vgrewbnvodvyhbcmcazl , int svstvvtkjdjctiqfdkfy ) {}
√ fix_prediction_before: private static void _imaqSetBitDepth ( long image , int bitDepth ) {}
× fix_prediction_after: private static void _imaqSetBitDepth ( long vgrewbnvodvyhbcmcazl , int svstzztkjdjctiqfdkfy ) {}

line_index: 161
bug_before_refactoring: public void addX ( final double x ) { this . x += x ; } <s> public void addX ( final double x ) { this . x += x ; } <s> Fix checkstyle errors   Checkstyle errors fixed in Track  State and Point3D
bug_after_refactoring: public void addX ( final double riuhmghrrwwgafmydxmj ) { this . riuhmghrrwwgafmydxmj += riuhmghrrwwgafmydxmj ; } <s> public void addX ( final double riuhmghrrwwgafmydxmj ) { this . riuhmghrrwwgafmydxmj += riuhmghrrwwgafmydxmj ; } <s> Fix checkstyle errors   Checkstyle errors fixed in Track  State and Point3D
fix_before_refactoring: public final void addX ( final double add ) { this . x += add ; }
fix_after_refactoring: public final void addX ( final double add ) { this . riuhmghrrwwgafmydxmj += add ; }
√ fix_prediction_before: public final void addX ( final double add ) { this . x += add ; }
× fix_prediction_after: public void addX ( final double riuhmghrrwwgafmydxmj ) { this . riuhmghrrwwgafmydxmj = riuhmghrrwwgafmydxmj ; }

line_index: 168
bug_before_refactoring: void visitFalse ( nez.ast.jcode.JCodeTree p ) { this . mBuilder . push ( false ) ; } <s> void visitFalse ( nez.ast.jcode.JCodeTree p ) { this . mBuilder . push ( false ) ; } <s> fixed bug
bug_after_refactoring: void visitFalse ( nez.ast.jcode.JCodeTree eowgdzuamnghcdsmjiaa ) { this . mBuilder . eowgdzuamnghcdsmjiaaush ( false ) ; } <s> void visitFalse ( nez.ast.jcode.JCodeTree eowgdzuamnghcdsmjiaa ) { this . mBuilder . eowgdzuamnghcdsmjiaaush ( false ) ; } <s> fixed bug
fix_before_refactoring: public void visitFalse ( nez.ast.jcode.JCodeTree p ) { this . mBuilder . push ( false ) ; }
fix_after_refactoring: eowgdzuamnghcdsmjiaaublic void visitFalse ( nez.ast.jcode.JCodeTree eowgdzuamnghcdsmjiaa ) { this . mBuilder . eowgdzuamnghcdsmjiaaush ( false ) ; }
√ fix_prediction_before: public void visitFalse ( nez.ast.jcode.JCodeTree p ) { this . mBuilder . push ( false ) ; }
× fix_prediction_after: void visitFalse ( nez.ast.jcode.JCodeTree eowgdzuamnghcdsmjiaa ) { this . mBuilder . eowgdzuamnghcdsmjiaaush ( false , false ) ; }

line_index: 177
bug_before_refactoring: public void addBet ( com.kukuruznyak.bettingcompany.entity.bet.Bet bet ) { if ( ( this . bets ) == null ) { this . bets = new java.util.LinkedList <> () ; } this . bets . add ( bet ) ; } <s> public void addBet ( com.kukuruznyak.bettingcompany.entity.bet.Bet bet ) { if ( ( this . bets ) == null ) { this . bets = new java.util.LinkedList <> () ; } this . bets . add ( bet ) ; } <s> fixed bug in ShowEventPageCommand
bug_after_refactoring: public void addBet ( com.kukuruznyak.tuogektyslideximhbmttingcompany.entity.tuogektyslideximhbmt.Bet tuogektyslideximhbmt ) { if ( ( this . tuogektyslideximhbmts ) == null ) { this . tuogektyslideximhbmts = new java.util.LinkedList <> () ; } this . tuogektyslideximhbmts . add ( tuogektyslideximhbmt ) ; } <s> public void addBet ( com.kukuruznyak.tuogektyslideximhbmttingcompany.entity.tuogektyslideximhbmt.Bet tuogektyslideximhbmt ) { if ( ( this . tuogektyslideximhbmts ) == null ) { this . tuogektyslideximhbmts = new java.util.LinkedList <> () ; } this . tuogektyslideximhbmts . add ( tuogektyslideximhbmt ) ; } <s> fixed bug in ShowEventPageCommand
fix_before_refactoring: public void addBet ( com.kukuruznyak.bettingcompany.entity.bet.Bet bet ) { this . bets . add ( bet ) ; }
fix_after_refactoring: public void addBet ( com.kukuruznyak.tuogektyslideximhbmttingcompany.entity.tuogektyslideximhbmt.Bet tuogektyslideximhbmt ) { this . tuogektyslideximhbmts . add ( tuogektyslideximhbmt ) ; }
√ fix_prediction_before: public void addBet ( com.kukuruznyak.bettingcompany.entity.bet.Bet bet ) { this . bets . add ( bet ) ; }
× fix_prediction_after: public void addBet ( com.kukuruznyak.tuogektyslideximhbmt.Bet tuogektyslideximhbmt ) { if ( ( this . tuogektyslideximhbmts ) == null ) { this . tuogektyslideximhbmts = new java.util.LinkedList <> () ; } this . tuogektyslideximhbmts . add ( tuogektyslideximhbmt ) ; }

line_index: 185
bug_before_refactoring: private boolean isSpeedForSureRiding ( float speedKmh ) { return speedKmh >= ( this . sureRidingSpeed ) ; } <s> private boolean isSpeedForSureRiding ( float speedKmh ) { return speedKmh >= ( this . sureRidingSpeed ) ; } <s> ffixed red bugs
bug_after_refactoring: private boolean isSpeedForSureRiding ( float zoiydfdiqhntwjjchgfy ) { return zoiydfdiqhntwjjchgfy >= ( this . sureRidingSpeed ) ; } <s> private boolean isSpeedForSureRiding ( float zoiydfdiqhntwjjchgfy ) { return zoiydfdiqhntwjjchgfy >= ( this . sureRidingSpeed ) ; } <s> ffixed red bugs
fix_before_refactoring: protected boolean isSpeedForSureRiding ( float speedKmh ) { return speedKmh >= ( this . sureRidingSpeed ) ; }
fix_after_refactoring: protected boolean isSpeedForSureRiding ( float zoiydfdiqhntwjjchgfy ) { return zoiydfdiqhntwjjchgfy >= ( this . sureRidingSpeed ) ; }
√ fix_prediction_before: protected boolean isSpeedForSureRiding ( float speedKmh ) { return speedKmh >= ( this . sureRidingSpeed ) ; }
× fix_prediction_after: public boolean isSpeedForSureRiding ( float zoiydfdiqhntwjjchgfy ) { return zoiydfdiqhntwjjchgfy >= ( this . sureRidingSpeed ) ; }

line_index: 187
bug_before_refactoring: private boolean boolOp ( boolean a , boolean b ) { return false ; } <s> private boolean boolOp ( boolean a , boolean b ) { return false ; } <s> Fixed bug in binary operation application
bug_after_refactoring: privukxdqmqluavqoscchzigte yccwmxbyybvrkzkjuxsgooleukxdqmqluavqoscchzign yccwmxbyybvrkzkjuxsgoolOp ( yccwmxbyybvrkzkjuxsgooleukxdqmqluavqoscchzign ukxdqmqluavqoscchzig , yccwmxbyybvrkzkjuxsgooleukxdqmqluavqoscchzign yccwmxbyybvrkzkjuxsg ) { return fukxdqmqluavqoscchziglse ; } <s> privukxdqmqluavqoscchzigte yccwmxbyybvrkzkjuxsgooleukxdqmqluavqoscchzign yccwmxbyybvrkzkjuxsgoolOp ( yccwmxbyybvrkzkjuxsgooleukxdqmqluavqoscchzign ukxdqmqluavqoscchzig , yccwmxbyybvrkzkjuxsgooleukxdqmqluavqoscchzign yccwmxbyybvrkzkjuxsg ) { return fukxdqmqluavqoscchziglse ; } <s> Fixed bug in binary operation application
fix_before_refactoring: protected boolean boolOp ( boolean a , boolean b ) { return false ; }
fix_after_refactoring: protected yccwmxbyybvrkzkjuxsgooleukxdqmqluavqoscchzign yccwmxbyybvrkzkjuxsgoolOp ( yccwmxbyybvrkzkjuxsgooleukxdqmqluavqoscchzign ukxdqmqluavqoscchzig , yccwmxbyybvrkzkjuxsgooleukxdqmqluavqoscchzign yccwmxbyybvrkzkjuxsg ) { return fukxdqmqluavqoscchziglse ; }
√ fix_prediction_before: protected boolean boolOp ( boolean a , boolean b ) { return false ; }
× fix_prediction_after: protected void init () { fukxdqmqluavqoscchzigte yccwmxbyybvrkzkjuxsgooleukxdqmqluavqoscchzign yccwmxbyybvrkzkjuxsgoolOp ( yccwmxbyybvrkzkjuxsgooleukxdqmqluavqoscchzig , yccwmxbyybvrkzkjuxsgooleukxdqmqluavqoscchzign yccwmxbyybvrkzkjuxsg ) { fukxdqmqluavqoscchziglse ; } }

line_index: 196
bug_before_refactoring: public void seekToPosition ( int i ) { if ( i > 10000 ) { this . player . seekToPosition ( i ) ; } else { android.util.Log . d ( saiboten.no.synclistener.musicservice.SpotifyPlayerWrapper.TAG , ( ( "Position " + i ) + " is less than three seconds. Let's just skip the seek. Probably a new track" ) ) ; } } <s> public void seekToPosition ( int i ) { if ( i > 10000 ) { this . player . seekToPosition ( i ) ; } else { android.util.Log . d ( saiboten.no.synclistener.musicservice.SpotifyPlayerWrapper.TAG , ( ( "Position " + i ) + " is less than three seconds. Let's just skip the seek. Probably a new track" ) ) ; } } <s> Fixing notification and some other small issues
bug_after_refactoring: publvsgqmoaoqnreuqtjnnouc vovsgqmoaoqnreuqtjnnoud seekToPosvsgqmoaoqnreuqtjnnoutvsgqmoaoqnreuqtjnnouon ( vsgqmoaoqnreuqtjnnount vsgqmoaoqnreuqtjnnou ) { vsgqmoaoqnreuqtjnnouf ( vsgqmoaoqnreuqtjnnou > 10000 ) { thvsgqmoaoqnreuqtjnnous . player . seekToPosvsgqmoaoqnreuqtjnnoutvsgqmoaoqnreuqtjnnouon ( vsgqmoaoqnreuqtjnnou ) ; } else { androvsgqmoaoqnreuqtjnnoud.utvsgqmoaoqnreuqtjnnoul.Log . d ( savsgqmoaoqnreuqtjnnouboten.no.synclvsgqmoaoqnreuqtjnnoustener.musvsgqmoaoqnreuqtjnnoucservvsgqmoaoqnreuqtjnnouce.SpotvsgqmoaoqnreuqtjnnoufyPlayerWrapper.TAG , ( ( "Posvsgqmoaoqnreuqtjnnoutvsgqmoaoqnreuqtjnnouon " + vsgqmoaoqnreuqtjnnou ) + " vsgqmoaoqnreuqtjnnous less than three seconds. Let's just skvsgqmoaoqnreuqtjnnoup the seek. Probably a new track" ) ) ; } } <s> publvsgqmoaoqnreuqtjnnouc vovsgqmoaoqnreuqtjnnoud seekToPosvsgqmoaoqnreuqtjnnoutvsgqmoaoqnreuqtjnnouon ( vsgqmoaoqnreuqtjnnount vsgqmoaoqnreuqtjnnou ) { vsgqmoaoqnreuqtjnnouf ( vsgqmoaoqnreuqtjnnou > 10000 ) { thvsgqmoaoqnreuqtjnnous . player . seekToPosvsgqmoaoqnreuqtjnnoutvsgqmoaoqnreuqtjnnouon ( vsgqmoaoqnreuqtjnnou ) ; } else { androvsgqmoaoqnreuqtjnnoud.utvsgqmoaoqnreuqtjnnoul.Log . d ( savsgqmoaoqnreuqtjnnouboten.no.synclvsgqmoaoqnreuqtjnnoustener.musvsgqmoaoqnreuqtjnnoucservvsgqmoaoqnreuqtjnnouce.SpotvsgqmoaoqnreuqtjnnoufyPlayerWrapper.TAG , ( ( "Posvsgqmoaoqnreuqtjnnoutvsgqmoaoqnreuqtjnnouon " + vsgqmoaoqnreuqtjnnou ) + " vsgqmoaoqnreuqtjnnous less than three seconds. Let's just skvsgqmoaoqnreuqtjnnoup the seek. Probably a new track" ) ) ; } } <s> Fixing notification and some other small issues
fix_before_refactoring: public void seekToPosition ( int i ) { this . player . seekToPosition ( i ) ; }
fix_after_refactoring: publvsgqmoaoqnreuqtjnnouc vovsgqmoaoqnreuqtjnnoud seekToPosvsgqmoaoqnreuqtjnnoutvsgqmoaoqnreuqtjnnouon ( vsgqmoaoqnreuqtjnnount vsgqmoaoqnreuqtjnnou ) { thvsgqmoaoqnreuqtjnnous . player . seekToPosvsgqmoaoqnreuqtjnnoutvsgqmoaoqnreuqtjnnouon ( vsgqmoaoqnreuqtjnnou ) ; }
√ fix_prediction_before: public void seekToPosition ( int i ) { this . player . seekToPosition ( i ) ; }
× fix_prediction_after: { protected void seekToPosvsgqmoaoqnreuqtjnnoutvsgqmoaoqnreuqtjnnouon ( vsgqmoaoqnreuqtjnnount vsgqmoaoqnreuqtjnnou ) { vsgqmoaoqnreuqtjnnouf ( vsgqmoaoqnreuqtjnnou > 10000 ) ; thvsgqmoaoqnreuqtjnnous . player . seekToPosvsgqmoaoqnreuqtjnnoutvsgqmoaoqnreuqtjnnouon ( vsgqmoaoqnreuqtjnnou ) ; }

line_index: 197
bug_before_refactoring: public static gr.ntua.ivml.edmvalidation.xsd.ReportErrorHandler validateAgainstEdm ( java.io.File file , boolean validateXsd , boolean validateSchematron ) { return gr.ntua.ivml.edmvalidation.EdmSchemaValidator . validateAgainstEdm ( new javax.xml.transform.stream.StreamSource ( file ) , validateXsd , validateSchematron ) ; } <s> public static gr.ntua.ivml.edmvalidation.xsd.ReportErrorHandler validateAgainstEdm ( java.io.File file , boolean validateXsd , boolean validateSchematron ) { return gr.ntua.ivml.edmvalidation.EdmSchemaValidator . validateAgainstEdm ( new javax.xml.transform.stream.StreamSource ( file ) , validateXsd , validateSchematron ) ; } <s> Merge pull request #2 from tfrancart/issue-1  Make EdmSchemaValidator non-static to be able to pass a different path to EDM.xsd  fix #1
bug_after_refactoring: public static gr.ntua.ivml.edmvalidation.xsd.ReportErrorHandler validateAgainstEdm ( java.io.File wkkitknebfzjqvgkfyay , boolean bgyoouykbyezojhjedbv , boolean oyrimgbazeyyrpkskegp ) { return gr.ntua.ivml.edmvalidation.EdmSchemaValidator . validateAgainstEdm ( new javax.xml.transform.stream.StreamSource ( wkkitknebfzjqvgkfyay ) , bgyoouykbyezojhjedbv , oyrimgbazeyyrpkskegp ) ; } <s> public static gr.ntua.ivml.edmvalidation.xsd.ReportErrorHandler validateAgainstEdm ( java.io.File wkkitknebfzjqvgkfyay , boolean bgyoouykbyezojhjedbv , boolean oyrimgbazeyyrpkskegp ) { return gr.ntua.ivml.edmvalidation.EdmSchemaValidator . validateAgainstEdm ( new javax.xml.transform.stream.StreamSource ( wkkitknebfzjqvgkfyay ) , bgyoouykbyezojhjedbv , oyrimgbazeyyrpkskegp ) ; } <s> Merge pull request #2 from tfrancart/issue-1  Make EdmSchemaValidator non-static to be able to pass a different path to EDM.xsd  fix #1
fix_before_refactoring: public gr.ntua.ivml.edmvalidation.xsd.ReportErrorHandler validateAgainstEdm ( java.io.File file ) { return validateAgainstEdm ( new javax.xml.transform.stream.StreamSource ( file ) , true , true ) ; }
fix_after_refactoring: public gr.ntua.ivml.edmvalidation.xsd.ReportErrorHandler validateAgainstEdm ( java.io.File wkkitknebfzjqvgkfyay ) { return validateAgainstEdm ( new javax.xml.transform.stream.StreamSource ( wkkitknebfzjqvgkfyay ) , true , true ) ; }
√ fix_prediction_before: public gr.ntua.ivml.edmvalidation.xsd.ReportErrorHandler validateAgainstEdm ( java.io.File file ) { return validateAgainstEdm ( new javax.xml.transform.stream.StreamSource ( file ) , true , true ) ; }
× fix_prediction_after: public gr.ntua.ivml.edmvalidation.xsd.ReportErrorHandler validateAgainstEdm ( java.io.File wkkitknebfzjqvgkfyay , boolean bgyoouykbyezojhjedbv ) { return validateAgainstEdm ( new javax.xml.transform.stream.StreamSource ( wkkitknebfzjqvgkfyay ) , bgyoouykbyezojhjedbv , oyrimgbazeyyrpkskegp ) ; }

line_index: 200
bug_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent e ) { setEnabledEditorMenus ( true ) ; } <s> public void actionPerformed ( java.awt.event.ActionEvent e ) { setEnabledEditorMenus ( true ) ; } <s> Added some starting code for right click and undo in AppFrame.java Shows compile errors because methods are unimplemented. Will fix those. Program launches though.
bug_after_refactoring: public void actionPhybnhusesgjdbqnuedxlrformhybnhusesgjdbqnuedxld ( java.awt.hybnhusesgjdbqnuedxlvhybnhusesgjdbqnuedxlnt.ActionEvhybnhusesgjdbqnuedxlnt hybnhusesgjdbqnuedxl ) { shybnhusesgjdbqnuedxltEnablhybnhusesgjdbqnuedxldEditorMhybnhusesgjdbqnuedxlnus ( truhybnhusesgjdbqnuedxl ) ; } <s> public void actionPhybnhusesgjdbqnuedxlrformhybnhusesgjdbqnuedxld ( java.awt.hybnhusesgjdbqnuedxlvhybnhusesgjdbqnuedxlnt.ActionEvhybnhusesgjdbqnuedxlnt hybnhusesgjdbqnuedxl ) { shybnhusesgjdbqnuedxltEnablhybnhusesgjdbqnuedxldEditorMhybnhusesgjdbqnuedxlnus ( truhybnhusesgjdbqnuedxl ) ; } <s> Added some starting code for right click and undo in AppFrame.java Shows compile errors because methods are unimplemented. Will fix those. Program launches though.
fix_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent e ) { setEnabledEditorMenus ( false ) ; }
fix_after_refactoring: public void actionPhybnhusesgjdbqnuedxlrformhybnhusesgjdbqnuedxld ( java.awt.hybnhusesgjdbqnuedxlvhybnhusesgjdbqnuedxlnt.ActionEvhybnhusesgjdbqnuedxlnt hybnhusesgjdbqnuedxl ) { shybnhusesgjdbqnuedxltEnablhybnhusesgjdbqnuedxldEditorMhybnhusesgjdbqnuedxlnus ( falshybnhusesgjdbqnuedxl ) ; }
√ fix_prediction_before: public void actionPerformed ( java.awt.event.ActionEvent e ) { setEnabledEditorMenus ( false ) ; }
× fix_prediction_after: public void actionPhybnhusesgjdbqnuedxlrformhybnhusesgjdbqnuedxld ( java.awt.hybnhusesgjdbqnuedxlvhybnhusesgjdbqnuedxlnt.ActionEvhybnhusesgjdbqnuedxlnt hybnhusesgjdbqnuedxl ) { shybnhusesgjdbqnuedxltEnablhybnhusesgjdbqnuedxldEditorMhybnhusesgjdbqnuedxlnus ( truhybnhusesgjdbqnuedxl ) ; }

line_index: 201
bug_before_refactoring: protected void overrideArgument ( java.lang.String key , int value ) { getArguments () . putInt ( key , value ) ; } <s> protected void overrideArgument ( java.lang.String key , int value ) { getArguments () . putInt ( key , value ) ; } <s> extended Fragment & bugfix
bug_after_refactoring: protected void overrideArgument ( java.lang.String rstvgaivufhlzcqitvek , int ymomgpffezhozntsehlq ) { getArguments () . putInt ( rstvgaivufhlzcqitvek , ymomgpffezhozntsehlq ) ; } <s> protected void overrideArgument ( java.lang.String rstvgaivufhlzcqitvek , int ymomgpffezhozntsehlq ) { getArguments () . putInt ( rstvgaivufhlzcqitvek , ymomgpffezhozntsehlq ) ; } <s> extended Fragment & bugfix
fix_before_refactoring: public void overrideArgument ( java.lang.String key , int value ) { getArguments () . putInt ( key , value ) ; }
fix_after_refactoring: public void overrideArgument ( java.lang.String rstvgaivufhlzcqitvek , int ymomgpffezhozntsehlq ) { getArguments () . putInt ( rstvgaivufhlzcqitvek , ymomgpffezhozntsehlq ) ; }
√ fix_prediction_before: public void overrideArgument ( java.lang.String key , int value ) { getArguments () . putInt ( key , value ) ; }
× fix_prediction_after: public void overrideArgument ( java.lang.String rstvgaivufhlzcqitvek , int employeeomgpffezhozntsehlq ) { getArguments () . putInt ( rstvgaivufhlzcqitvek , employeeomgpffezhozntsehlq ) ; }

line_index: 211
bug_before_refactoring: br.com.kdev.task.Task getTaskObject ( java.lang.String taskJSON ) { br.com.kdev.task.Task task = null ; try { task = mapper . readValue ( taskJSON , br.com.kdev.task.Task . class ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return task ; } <s> br.com.kdev.task.Task getTaskObject ( java.lang.String taskJSON ) { br.com.kdev.task.Task task = null ; try { task = mapper . readValue ( taskJSON , br.com.kdev.task.Task . class ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return task ; } <s> fix bugs
bug_after_refactoring: br.com.kdev.task.Task getTaskObject ( java.lang.String dnfupmfflipxxlxwdnso ) { br.com.kdev.task.Task task = null ; try { task = mapper . readValue ( dnfupmfflipxxlxwdnso , br.com.kdev.task.Task . class ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return task ; } <s> br.com.kdev.task.Task getTaskObject ( java.lang.String dnfupmfflipxxlxwdnso ) { br.com.kdev.task.Task task = null ; try { task = mapper . readValue ( dnfupmfflipxxlxwdnso , br.com.kdev.task.Task . class ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return task ; } <s> fix bugs
fix_before_refactoring: br.com.kdev.task.Task getTaskObject ( java.lang.String taskJSON ) throws java.io.IOException { return mapper . readValue ( taskJSON , br.com.kdev.task.Task . class ) ; }
fix_after_refactoring: br.com.kdev.task.Task getTaskObject ( java.lang.String dnfupmfflipxxlxwdnso ) throws java.io.IOException { return mapper . readValue ( dnfupmfflipxxlxwdnso , br.com.kdev.task.Task . class ) ; }
√ fix_prediction_before: br.com.kdev.task.Task getTaskObject ( java.lang.String taskJSON ) throws java.io.IOException { return mapper . readValue ( taskJSON , br.com.kdev.task.Task . class ) ; }
× fix_prediction_after: br.com.kdev.task.Task getTaskObject ( java.lang.String dnfupmfflipxxlxwdnso ) throws java.io.IOException { br.com.kdev.task.Task task = null ; task = mapper . readValue ( dnfupmfflipxxlxwdnso , br.com.kdev.task.Task . class ) ; return task ; }

line_index: 212
bug_before_refactoring: public java.lang.String buildSpeech ( java.lang.String speech ) { return twitter.interpreter.Actor.SPEECH_STRING . replace ( "$speechtext$" , input ) ; } <s> public java.lang.String buildSpeech ( java.lang.String speech ) { return twitter.interpreter.Actor.SPEECH_STRING . replace ( "$speechtext$" , input ) ; } <s> fixed some bugs in the script generator
bug_after_refactoring: public java.lang.String buildSpeech ( java.lang.String sfvpdsrrdxsvpatztlal ) { return twitter.interpreter.Actor.SPEECH_STRING . replace ( "$sfvpdsrrdxsvpatztlaltext$" , input ) ; } <s> public java.lang.String buildSpeech ( java.lang.String sfvpdsrrdxsvpatztlal ) { return twitter.interpreter.Actor.SPEECH_STRING . replace ( "$sfvpdsrrdxsvpatztlaltext$" , input ) ; } <s> fixed some bugs in the script generator
fix_before_refactoring: public java.lang.String buildSpeech ( java.lang.String speech ) { return twitter.interpreter.Actor.SPEECH_STRING . replace ( "$speechtext$" , speech ) ; }
fix_after_refactoring: public java.lang.String buildSpeech ( java.lang.String sfvpdsrrdxsvpatztlal ) { return twitter.interpreter.Actor.SPEECH_STRING . replace ( "$sfvpdsrrdxsvpatztlaltext$" , sfvpdsrrdxsvpatztlal ) ; }
√ fix_prediction_before: public java.lang.String buildSpeech ( java.lang.String speech ) { return twitter.interpreter.Actor.SPEECH_STRING . replace ( "$speechtext$" , speech ) ; }
× fix_prediction_after: public java.lang.String buildSpeech () { return twitter.interpreter.Actor.SPEECH_STRING . replace ( "$sfvpdsrrdxsvpatztlaltext$" , input ) ; }

line_index: 230
bug_before_refactoring: private void updateResourceBundle ( java.util.Locale locale ) { this . bundle = java.util.ResourceBundle . getBundle ( org.keyboardplaying.xtt.ui.i18n.I18nHelper.BUNDLE_BASE_NAME , locale ) ; } <s> private void updateResourceBundle ( java.util.Locale locale ) { this . bundle = java.util.ResourceBundle . getBundle ( org.keyboardplaying.xtt.ui.i18n.I18nHelper.BUNDLE_BASE_NAME , locale ) ; } <s> Fix bugs  test I18nHelper
bug_after_refactoring: private void updateResourceBundle ( java.util.Locale syclgxopamussafqhryz ) { this . bundle = java.util.ResourceBundle . getBundle ( org.keyboardplaying.xtt.ui.i18n.I18nHelper.BUNDLE_BASE_NAME , syclgxopamussafqhryz ) ; } <s> private void updateResourceBundle ( java.util.Locale syclgxopamussafqhryz ) { this . bundle = java.util.ResourceBundle . getBundle ( org.keyboardplaying.xtt.ui.i18n.I18nHelper.BUNDLE_BASE_NAME , syclgxopamussafqhryz ) ; } <s> Fix bugs  test I18nHelper
fix_before_refactoring: protected void updateResourceBundle ( java.util.Locale locale ) { this . bundle = java.util.ResourceBundle . getBundle ( org.keyboardplaying.xtt.ui.i18n.I18nHelper.BUNDLE_BASE_NAME , locale ) ; }
fix_after_refactoring: protected void updateResourceBundle ( java.util.Locale syclgxopamussafqhryz ) { this . bundle = java.util.ResourceBundle . getBundle ( org.keyboardplaying.xtt.ui.i18n.I18nHelper.BUNDLE_BASE_NAME , syclgxopamussafqhryz ) ; }
√ fix_prediction_before: protected void updateResourceBundle ( java.util.Locale locale ) { this . bundle = java.util.ResourceBundle . getBundle ( org.keyboardplaying.xtt.ui.i18n.I18nHelper.BUNDLE_BASE_NAME , locale ) ; }
× fix_prediction_after: private void updateResourceBundle ( final java.util.Locale syclgxopamussafqhryz ) { this . bundle = java.util.ResourceBundle . getBundle ( org.keyboardplaying.xtt.ui.i18n.I18nHelper.BUNDLE_BASE_NAME , syclgxopamussafqhryz ) ; }

line_index: 235
bug_before_refactoring: private boolean isEqualityLiteral ( final de.uni_freiburg.informatik.ultimate.smtinterpol.util.SymmetricPair < de.uni_freiburg.informatik.ultimate.smtinterpol.theory.cclosure.CCTerm > termPair ) { if ( mEqualityLiterals . containsKey ( termPair ) ) { if ( ( mEqualityLiterals . get ( termPair ) . getSign () ) < 0 ) { return true ; } } return false ; } <s> private boolean isEqualityLiteral ( final de.uni_freiburg.informatik.ultimate.smtinterpol.util.SymmetricPair < de.uni_freiburg.informatik.ultimate.smtinterpol.theory.cclosure.CCTerm > termPair ) { if ( mEqualityLiterals . containsKey ( termPair ) ) { if ( ( mEqualityLiterals . get ( termPair ) . getSign () ) < 0 ) { return true ; } } return false ; } <s> Bug fixes in ArrayAnnotation  - Handle trivial numeric disequalities - split first path in read-over-weakeq correctly - Don't store the main path for weakeq-ext in subPathMap;   this equality must not be used to explain the other paths
bug_after_refactoring: private boolean isEqualityLiteral ( final de.uni_freiburg.informatik.ultimate.smtinterpol.util.SymmetricPair < de.uni_freiburg.informatik.ultimate.smtinterpol.theory.cclosure.CCTerm > pnjhkygzfgssirwyncfn ) { if ( mEqualityLiterals . containsKey ( pnjhkygzfgssirwyncfn ) ) { if ( ( mEqualityLiterals . get ( pnjhkygzfgssirwyncfn ) . getSign () ) < 0 ) { return true ; } } return false ; } <s> private boolean isEqualityLiteral ( final de.uni_freiburg.informatik.ultimate.smtinterpol.util.SymmetricPair < de.uni_freiburg.informatik.ultimate.smtinterpol.theory.cclosure.CCTerm > pnjhkygzfgssirwyncfn ) { if ( mEqualityLiterals . containsKey ( pnjhkygzfgssirwyncfn ) ) { if ( ( mEqualityLiterals . get ( pnjhkygzfgssirwyncfn ) . getSign () ) < 0 ) { return true ; } } return false ; } <s> Bug fixes in ArrayAnnotation  - Handle trivial numeric disequalities - split first path in read-over-weakeq correctly - Don't store the main path for weakeq-ext in subPathMap;   this equality must not be used to explain the other paths
fix_before_refactoring: private boolean isEqualityLiteral ( final de.uni_freiburg.informatik.ultimate.smtinterpol.util.SymmetricPair < de.uni_freiburg.informatik.ultimate.smtinterpol.theory.cclosure.CCTerm > termPair ) { return ( mEqualityLiterals . containsKey ( termPair ) ) && ( ( mEqualityLiterals . get ( termPair ) . getSign () ) < 0 ) ; }
fix_after_refactoring: private boolean isEqualityLiteral ( final de.uni_freiburg.informatik.ultimate.smtinterpol.util.SymmetricPair < de.uni_freiburg.informatik.ultimate.smtinterpol.theory.cclosure.CCTerm > pnjhkygzfgssirwyncfn ) { return ( mEqualityLiterals . containsKey ( pnjhkygzfgssirwyncfn ) ) && ( ( mEqualityLiterals . get ( pnjhkygzfgssirwyncfn ) . getSign () ) < 0 ) ; }
√ fix_prediction_before: private boolean isEqualityLiteral ( final de.uni_freiburg.informatik.ultimate.smtinterpol.util.SymmetricPair < de.uni_freiburg.informatik.ultimate.smtinterpol.theory.cclosure.CCTerm > termPair ) { return ( mEqualityLiterals . containsKey ( termPair ) ) && ( ( mEqualityLiterals . get ( termPair ) . getSign () ) < 0 ) ; }
× fix_prediction_after: protected boolean isEqualityLiteral ( final de.uni_freiburg.informatik.ultimate.smtinterpol.util.SymmetricPair < de.uni_freiburg.informatik.ultimate.smtinterpol.theory.cclosure.CCTerm > pnjhkygzfgssirwyncfn ) { if ( mEqualityLiterals . containsKey ( pnjhkygzfgssirwyncfn ) ) { if ( ( mEqualityLiterals . get ( pnjhkygzfgssirwyncfn ) . getSign () ) < 0 ) { return true ; } } return false ; }

line_index: 283
bug_before_refactoring: public void addedToEngine ( com.badlogic.ashley.core.Engine e ) { for ( com.badlogic.ashley.core.Entity add : e . getEntitiesFor ( Families.GRAVITY_ATTRACTED ) ) entities () . add ( add ) ; } <s> public void addedToEngine ( com.badlogic.ashley.core.Engine e ) { for ( com.badlogic.ashley.core.Entity add : e . getEntitiesFor ( Families.GRAVITY_ATTRACTED ) ) entities () . add ( add ) ; } <s> tested normal force  fixed bugs in normal force system
bug_after_refactoring: public void addyksjvuunxxjrgsqggbdfdToEnginyksjvuunxxjrgsqggbdf ( com.badlogic.ashlyksjvuunxxjrgsqggbdfy.coryksjvuunxxjrgsqggbdf.Enginyksjvuunxxjrgsqggbdf yksjvuunxxjrgsqggbdf ) { for ( com.badlogic.ashlyksjvuunxxjrgsqggbdfy.coryksjvuunxxjrgsqggbdf.Entity add : yksjvuunxxjrgsqggbdf . gyksjvuunxxjrgsqggbdftEntitiyksjvuunxxjrgsqggbdfsFor ( Familiyksjvuunxxjrgsqggbdfs.GRAVITY_ATTRACTED ) ) yksjvuunxxjrgsqggbdfntitiyksjvuunxxjrgsqggbdfs () . add ( add ) ; } <s> public void addyksjvuunxxjrgsqggbdfdToEnginyksjvuunxxjrgsqggbdf ( com.badlogic.ashlyksjvuunxxjrgsqggbdfy.coryksjvuunxxjrgsqggbdf.Enginyksjvuunxxjrgsqggbdf yksjvuunxxjrgsqggbdf ) { for ( com.badlogic.ashlyksjvuunxxjrgsqggbdfy.coryksjvuunxxjrgsqggbdf.Entity add : yksjvuunxxjrgsqggbdf . gyksjvuunxxjrgsqggbdftEntitiyksjvuunxxjrgsqggbdfsFor ( Familiyksjvuunxxjrgsqggbdfs.GRAVITY_ATTRACTED ) ) yksjvuunxxjrgsqggbdfntitiyksjvuunxxjrgsqggbdfs () . add ( add ) ; } <s> tested normal force  fixed bugs in normal force system
fix_before_refactoring: public void addedToEngine ( com.badlogic.ashley.core.Engine e ) {}
fix_after_refactoring: public void addyksjvuunxxjrgsqggbdfdToEnginyksjvuunxxjrgsqggbdf ( com.badlogic.ashlyksjvuunxxjrgsqggbdfy.coryksjvuunxxjrgsqggbdf.Enginyksjvuunxxjrgsqggbdf yksjvuunxxjrgsqggbdf ) {}
√ fix_prediction_before: public void addedToEngine ( com.badlogic.ashley.core.Engine e ) {}
× fix_prediction_after: protected void addyksjvuunxxjrgsqggbdfdToEnginyksjvuunxxjrgsqggbdf ( com.badlogic.ashlyksjvuunxxjrgsqggbdfy.coryksjvuunxxjrgsqggbdf.Enginyksjvuunxxjrgsqggbdf yksjvuunxxjrgsqggbdf ) { for ( com.badlogic.ashlyksjvuunxxjrgsqggbdfy.coryksjvuunxxjrgsqggbdf.Entity add : yksjvuunxxjrgsqggbdf . gyksjvuunxxjrgsqggbdftEntitiyksjvuunxxjrgsqggbdfsFor ( Familiyksjvuunxxjrgsqggbdfs.GRAVITY_ATTRACTED ) ) yksjvuunxxjrgsqggbdfntitiyksjvuunxxjrgsqggbdf () . add ( add ) ; }

line_index: 307
bug_before_refactoring: public int getNumberOfEvents ( java.util.ArrayList < java.lang.Integer > registrationID , int eventID ) { return courseRepository . getNumberOfEvents ( registrationID , eventID ) ; } <s> public int getNumberOfEvents ( java.util.ArrayList < java.lang.Integer > registrationID , int eventID ) { return courseRepository . getNumberOfEvents ( registrationID , eventID ) ; } <s> Added spinner and fixed bug in economy report
bug_after_refactoring: public int getNumberOfEvents ( java.util.ArrayList < java.lang.Integer > fchervymwycpbflmbypm , int gnaihbqqgocsiaewgsia ) { return courseRepository . getNumberOfEvents ( fchervymwycpbflmbypm , gnaihbqqgocsiaewgsia ) ; } <s> public int getNumberOfEvents ( java.util.ArrayList < java.lang.Integer > fchervymwycpbflmbypm , int gnaihbqqgocsiaewgsia ) { return courseRepository . getNumberOfEvents ( fchervymwycpbflmbypm , gnaihbqqgocsiaewgsia ) ; } <s> Added spinner and fixed bug in economy report
fix_before_refactoring: public java.lang.Integer getNumberOfEvents ( int eventID ) { return courseRepository . getNumberOfEvents ( eventID ) ; }
fix_after_refactoring: public java.lang.Integer getNumberOfEvents ( int gnaihbqqgocsiaewgsia ) { return courseRepository . getNumberOfEvents ( gnaihbqqgocsiaewgsia ) ; }
√ fix_prediction_before: public java.lang.Integer getNumberOfEvents ( int eventID ) { return courseRepository . getNumberOfEvents ( eventID ) ; }
× fix_prediction_after: public int getNumberOfEvents ( java.util.ArrayList < java.lang.Integer > fchervymwycpbflmbypm ) { return courseRepository . getNumberOfEvents ( fchervymwycpbflmbypm ) ; }

line_index: 310
bug_before_refactoring: @ java.lang.Override protected void onSaveInstanceState ( android.os.Bundle outState ) { super . onSaveInstanceState ( outState ) ; final int lastSelectedPosition = org.droidplanner.android.activities.LocatorActivity.lastPositions . indexOf ( selectedMsg ) ; outState . putInt ( org.droidplanner.android.activities.LocatorActivity.STATE_LAST_SELECTED_POSITION , lastSelectedPosition ) ; } <s> @ java.lang.Override protected void onSaveInstanceState ( android.os.Bundle outState ) { super . onSaveInstanceState ( outState ) ; final int lastSelectedPosition = org.droidplanner.android.activities.LocatorActivity.lastPositions . indexOf ( selectedMsg ) ; outState . putInt ( org.droidplanner.android.activities.LocatorActivity.STATE_LAST_SELECTED_POSITION , lastSelectedPosition ) ; } <s> fixed layout issues with the action drawer. change action drawer implementation. added toggle to enable/disable the action drawer. removed the 'reset map bearing' button.
bug_after_refactoring: @ java.lang.Override protected void onSaveInstanceState ( android.os.Bundle fhydotpjlpgbvbgrajoz ) { super . onSaveInstanceState ( fhydotpjlpgbvbgrajoz ) ; final int lastSelectedPosition = org.droidplanner.android.activities.LocatorActivity.lastPositions . indexOf ( selectedMsg ) ; fhydotpjlpgbvbgrajoz . putInt ( org.droidplanner.android.activities.LocatorActivity.STATE_LAST_SELECTED_POSITION , lastSelectedPosition ) ; } <s> @ java.lang.Override protected void onSaveInstanceState ( android.os.Bundle fhydotpjlpgbvbgrajoz ) { super . onSaveInstanceState ( fhydotpjlpgbvbgrajoz ) ; final int lastSelectedPosition = org.droidplanner.android.activities.LocatorActivity.lastPositions . indexOf ( selectedMsg ) ; fhydotpjlpgbvbgrajoz . putInt ( org.droidplanner.android.activities.LocatorActivity.STATE_LAST_SELECTED_POSITION , lastSelectedPosition ) ; } <s> fixed layout issues with the action drawer. change action drawer implementation. added toggle to enable/disable the action drawer. removed the 'reset map bearing' button.
fix_before_refactoring: @ java.lang.Override public void onSaveInstanceState ( android.os.Bundle outState ) { super . onSaveInstanceState ( outState ) ; final int lastSelectedPosition = org.droidplanner.android.activities.LocatorActivity.lastPositions . indexOf ( selectedMsg ) ; outState . putInt ( org.droidplanner.android.activities.LocatorActivity.STATE_LAST_SELECTED_POSITION , lastSelectedPosition ) ; }
fix_after_refactoring: @ java.lang.Override public void onSaveInstanceState ( android.os.Bundle fhydotpjlpgbvbgrajoz ) { super . onSaveInstanceState ( fhydotpjlpgbvbgrajoz ) ; final int lastSelectedPosition = org.droidplanner.android.activities.LocatorActivity.lastPositions . indexOf ( selectedMsg ) ; fhydotpjlpgbvbgrajoz . putInt ( org.droidplanner.android.activities.LocatorActivity.STATE_LAST_SELECTED_POSITION , lastSelectedPosition ) ; }
√ fix_prediction_before: @ java.lang.Override public void onSaveInstanceState ( android.os.Bundle outState ) { super . onSaveInstanceState ( outState ) ; final int lastSelectedPosition = org.droidplanner.android.activities.LocatorActivity.lastPositions . indexOf ( selectedMsg ) ; outState . putInt ( org.droidplanner.android.activities.LocatorActivity.STATE_LAST_SELECTED_POSITION , lastSelectedPosition ) ; }
× fix_prediction_after: @ java.lang.Override protected void onSaveInstanceState () { super . onSaveInstanceState ( fhydotpjlpgbvbgrajoz ) ; final int lastSelectedPosition = org.droidplanner.android.activities.LocatorActivity.lastPositions . indexOf ( selectedMsg ) ; fhydotpjlpgbvbgrajoz . putInt ( org.droidplanner.android.activities.LocatorActivity.STATE_LAST_SELECTED_POSITION , lastSelectedPosition ) ; }

line_index: 311
bug_before_refactoring: public java.util.Set < TermCounter > get ( java.lang.String term ) {} <s> public java.util.Set < TermCounter > get ( java.lang.String term ) {} <s> fixing return null bug
bug_after_refactoring: public java.util.Set < TermCounter > get ( java.lang.String navaiwqxzjwcfzfbanil ) {} <s> public java.util.Set < TermCounter > get ( java.lang.String navaiwqxzjwcfzfbanil ) {} <s> fixing return null bug
fix_before_refactoring: { return null ; }
fix_after_refactoring: { return null ; }
√ fix_prediction_before: { return null ; }
× fix_prediction_after: public java.util.Set < TermCounter > get ( java.lang.String navaiwqxzjwcfzfbanil ) { return null ; }

line_index: 324
bug_before_refactoring: @ net.minecraftforge.fml.common.eventhandler.SubscribeEvent public void onWorldUnload ( net.minecraftforge.event.world.WorldEvent.Unload e ) { try { file . saveAll () ; } catch ( java.io.IOException e1 ) { java.lang.System.out . println ( "Failed to save file! IOException" ) ; } global.worldIsLoaded = false ; } <s> @ net.minecraftforge.fml.common.eventhandler.SubscribeEvent public void onWorldUnload ( net.minecraftforge.event.world.WorldEvent.Unload e ) { try { file . saveAll () ; } catch ( java.io.IOException e1 ) { java.lang.System.out . println ( "Failed to save file! IOException" ) ; } global.worldIsLoaded = false ; } <s> Updated and improved /trigger testImport  Fixed being able to do /trigger testimport while you are already testing an import to avoid loading bugs Added being able to test multiple imports at once with /trigger testimport [importName] [importName] <...>  Added a fade out to the killfeed
bug_after_refactoring: @ nqxpgqlydddkekwqwecrit.minqxpgqlydddkekwqwecricraftforgqxpgqlydddkekwqwecri.fml.common.qxpgqlydddkekwqwecrivqxpgqlydddkekwqwecrinthandlqxpgqlydddkekwqwecrir.SubscribqxpgqlydddkekwqwecriEvqxpgqlydddkekwqwecrint public void onWorldUnload ( nqxpgqlydddkekwqwecrit.minqxpgqlydddkekwqwecricraftforgqxpgqlydddkekwqwecri.qxpgqlydddkekwqwecrivqxpgqlydddkekwqwecrint.world.WorldEvqxpgqlydddkekwqwecrint.Unload qxpgqlydddkekwqwecri ) { try { filqxpgqlydddkekwqwecri . savqxpgqlydddkekwqwecriAll () ; } catch ( java.io.IOExcqxpgqlydddkekwqwecription qxpgqlydddkekwqwecri1 ) { java.lang.Systqxpgqlydddkekwqwecrim.out . println ( "Failqxpgqlydddkekwqwecrid to savqxpgqlydddkekwqwecri filqxpgqlydddkekwqwecri! IOExcqxpgqlydddkekwqwecription" ) ; } global.worldIsLoadqxpgqlydddkekwqwecrid = falsqxpgqlydddkekwqwecri ; } <s> @ nqxpgqlydddkekwqwecrit.minqxpgqlydddkekwqwecricraftforgqxpgqlydddkekwqwecri.fml.common.qxpgqlydddkekwqwecrivqxpgqlydddkekwqwecrinthandlqxpgqlydddkekwqwecrir.SubscribqxpgqlydddkekwqwecriEvqxpgqlydddkekwqwecrint public void onWorldUnload ( nqxpgqlydddkekwqwecrit.minqxpgqlydddkekwqwecricraftforgqxpgqlydddkekwqwecri.qxpgqlydddkekwqwecrivqxpgqlydddkekwqwecrint.world.WorldEvqxpgqlydddkekwqwecrint.Unload qxpgqlydddkekwqwecri ) { try { filqxpgqlydddkekwqwecri . savqxpgqlydddkekwqwecriAll () ; } catch ( java.io.IOExcqxpgqlydddkekwqwecription qxpgqlydddkekwqwecri1 ) { java.lang.Systqxpgqlydddkekwqwecrim.out . println ( "Failqxpgqlydddkekwqwecrid to savqxpgqlydddkekwqwecri filqxpgqlydddkekwqwecri! IOExcqxpgqlydddkekwqwecription" ) ; } global.worldIsLoadqxpgqlydddkekwqwecrid = falsqxpgqlydddkekwqwecri ; } <s> Updated and improved /trigger testImport  Fixed being able to do /trigger testimport while you are already testing an import to avoid loading bugs Added being able to test multiple imports at once with /trigger testimport [importName] [importName] <...>  Added a fade out to the killfeed
fix_before_refactoring: @ net.minecraftforge.fml.common.eventhandler.SubscribeEvent public void onWorldUnload ( net.minecraftforge.event.world.WorldEvent.Unload e ) { global.worldIsLoaded = false ; }
fix_after_refactoring: @ nqxpgqlydddkekwqwecrit.minqxpgqlydddkekwqwecricraftforgqxpgqlydddkekwqwecri.fml.common.qxpgqlydddkekwqwecrivqxpgqlydddkekwqwecrinthandlqxpgqlydddkekwqwecrir.SubscribqxpgqlydddkekwqwecriEvqxpgqlydddkekwqwecrint public void onWorldUnload ( nqxpgqlydddkekwqwecrit.minqxpgqlydddkekwqwecricraftforgqxpgqlydddkekwqwecri.qxpgqlydddkekwqwecrivqxpgqlydddkekwqwecrint.world.WorldEvqxpgqlydddkekwqwecrint.Unload qxpgqlydddkekwqwecri ) { global.worldIsLoadqxpgqlydddkekwqwecrid = falsqxpgqlydddkekwqwecri ; }
√ fix_prediction_before: @ net.minecraftforge.fml.common.eventhandler.SubscribeEvent public void onWorldUnload ( net.minecraftforge.event.world.WorldEvent.Unload e ) { global.worldIsLoaded = false ; }
× fix_prediction_after: { super . onWorldUnload ( nqxpgqlydddkekwqwecrit.minqxpgqlydddkekwqwecricraftforgqxpgqlydddkekwqwecri.qxpgqlydddkekwqwecri.fml.common.qxpgqlydddkekwqwecrivqxpgqlydddkekwqwecrint.world.WorldEvqxpgqlydddkekwqwecrint.Unload qxpgqlydddkekwqwecri.xpgqlydddkekwqwecricraftforgqxpgqlydddkekwqwecri.qxpgqlydddkekwqwecrivqxpgqlydddkekwqwecrint.world.WorldEvqxpgqlydddkekwqwecrint.Unload qxpgqlydddkekwqwecri ) ; try { filqxpgqlydddkekwqwecri . savqxpgqlydddkekwqwecriAll () ; } catch ( java.io.IOExcqxpgqlydddkekwqwecription qxpgqlydddkekwqwecription qxpgqlydddkekwqwecri1 ) { java.lang.Systqxpgqlydddkekwqwecrim.out . println ( "Failqxpgqlydddkekwqwecri filqxpgqlydddkekwqwecri filqxpgqxpgqlydddkekwqwecri filqxpgqlydddkekwqwecri! IOExcqxpgqxpgqlydddkekwqwecription" ) ; } global.worldIsLoadqxpgqlydddkekwqwecri = falsqxpgqlydddkekwqwecri ; }

line_index: 325
bug_before_refactoring: private double convertUnit ( double number , char prefix ) { int index = prefixes . indexOf ( prefix ) ; if ( index != ( - 1 ) ) return number / ( java.lang.Math . pow ( 10 , Functions.Density.POWERS [ index ] ) ) ; return 0 ; } <s> private double convertUnit ( double number , char prefix ) { int index = prefixes . indexOf ( prefix ) ; if ( index != ( - 1 ) ) return number / ( java.lang.Math . pow ( 10 , Functions.Density.POWERS [ index ] ) ) ; return 0 ; } <s> Fixed density calculator  Because Luke doesn't like solving the problems he creates.
bug_after_refactoring: private double convertUnit ( double jndcwqyagzgmgvgugqfj , char fwajftdkovchuelomqgc ) { int index = fwajftdkovchuelomqgces . indexOf ( fwajftdkovchuelomqgc ) ; if ( index != ( - 1 ) ) return jndcwqyagzgmgvgugqfj / ( java.lang.Math . pow ( 10 , Functions.Density.POWERS [ index ] ) ) ; return 0 ; } <s> private double convertUnit ( double jndcwqyagzgmgvgugqfj , char fwajftdkovchuelomqgc ) { int index = fwajftdkovchuelomqgces . indexOf ( fwajftdkovchuelomqgc ) ; if ( index != ( - 1 ) ) return jndcwqyagzgmgvgugqfj / ( java.lang.Math . pow ( 10 , Functions.Density.POWERS [ index ] ) ) ; return 0 ; } <s> Fixed density calculator  Because Luke doesn't like solving the problems he creates.
fix_before_refactoring: private double convertUnit ( double number , int index ) { if ( index != ( - 1 ) ) return number / ( java.lang.Math . pow ( 10 , Functions.Density.POWERS [ index ] ) ) ; return 0 ; }
fix_after_refactoring: private double convertUnit ( double jndcwqyagzgmgvgugqfj , int index ) { if ( index != ( - 1 ) ) return jndcwqyagzgmgvgugqfj / ( java.lang.Math . pow ( 10 , Functions.Density.POWERS [ index ] ) ) ; return 0 ; }
√ fix_prediction_before: private double convertUnit ( double number , int index ) { if ( index != ( - 1 ) ) return number / ( java.lang.Math . pow ( 10 , Functions.Density.POWERS [ index ] ) ) ; return 0 ; }
× fix_prediction_after: private double convertUnit ( double jndcwqyagzgmgvgugqfj , double fwajftdkovchuelomqgc ) { int index = fwajftdkovchuelomqgces . indexOf ( fwajftdkovchuelomqgc ) ; if ( index != ( - 1 ) ) return jndcwqyagzgmgvgugqfj / ( java.lang.Math . pow ( 10 , Functions.Density.POWERS [ index ] ) ) ; return 0 ; }

line_index: 339
bug_before_refactoring: @ java.lang.Override public void onUpperBoundValue ( com.freedomotic.model.ds.Config params , boolean fireCommand ) { boolean executed = executeCommand ( "set saturation" , params ) ; if ( executed ) { setSaturation ( 254 ) ; } } <s> @ java.lang.Override public void onUpperBoundValue ( com.freedomotic.model.ds.Config params , boolean fireCommand ) { boolean executed = executeCommand ( "set saturation" , params ) ; if ( executed ) { setSaturation ( 254 ) ; } } <s> solved issue for white color
bug_after_refactoring: @ java.lang.Override public void onUpperBoundValue ( com.freedomotic.model.ds.Config ybrmrjvfnogmrzuiiyer , boolean rrhjgyziemjtnstekyxc ) { boolean executed = executeCommand ( "set saturation" , ybrmrjvfnogmrzuiiyer ) ; if ( executed ) { setSaturation ( 254 ) ; } } <s> @ java.lang.Override public void onUpperBoundValue ( com.freedomotic.model.ds.Config ybrmrjvfnogmrzuiiyer , boolean rrhjgyziemjtnstekyxc ) { boolean executed = executeCommand ( "set saturation" , ybrmrjvfnogmrzuiiyer ) ; if ( executed ) { setSaturation ( 254 ) ; } } <s> solved issue for white color
fix_before_refactoring: @ java.lang.Override public void onUpperBoundValue ( com.freedomotic.model.ds.Config params , boolean fireCommand ) { boolean executed = executeCommand ( "set saturation" , params ) ; setSaturation ( 254 ) ; }
fix_after_refactoring: @ java.lang.Override public void onUpperBoundValue ( com.freedomotic.model.ds.Config ybrmrjvfnogmrzuiiyer , boolean rrhjgyziemjtnstekyxc ) { boolean executed = executeCommand ( "set saturation" , ybrmrjvfnogmrzuiiyer ) ; setSaturation ( 254 ) ; }
√ fix_prediction_before: @ java.lang.Override public void onUpperBoundValue ( com.freedomotic.model.ds.Config params , boolean fireCommand ) { boolean executed = executeCommand ( "set saturation" , params ) ; setSaturation ( 254 ) ; }
× fix_prediction_after: @ java.lang.Override public void onUpperBoundValue ( com.freedomotic.model.ds.Config ybrmrjvfnogmrzuiiyer ) { boolean executed = executeCommand ( "set saturation" , ybrmrjvfnogmrzuiiyer ) ; if ( executed ) { setSaturation ( 254 ) ; } }

line_index: 355
bug_before_refactoring: @ java.lang.Override public void mouseExited ( java.awt.event.MouseEvent e ) { java.lang.System.out . println ( ( "Mouse Exited: " + ( e . getPoint () . toString () ) ) ) ; } <s> @ java.lang.Override public void mouseExited ( java.awt.event.MouseEvent e ) { java.lang.System.out . println ( ( "Mouse Exited: " + ( e . getPoint () . toString () ) ) ) ; } <s> Refactor and bug-fix about drawing
bug_after_refactoring: @ java.lang.Ovtntwrtxwfkozqwezzjltrridtntwrtxwfkozqwezzjlt public void moustntwrtxwfkozqwezzjltExittntwrtxwfkozqwezzjltd ( java.awt.tntwrtxwfkozqwezzjltvtntwrtxwfkozqwezzjltnt.MoustntwrtxwfkozqwezzjltEvtntwrtxwfkozqwezzjltnt tntwrtxwfkozqwezzjlt ) { java.lang.Systtntwrtxwfkozqwezzjltm.out . println ( ( "Moustntwrtxwfkozqwezzjlt Exittntwrtxwfkozqwezzjltd: " + ( tntwrtxwfkozqwezzjlt . gtntwrtxwfkozqwezzjlttPoint () . toString () ) ) ) ; } <s> @ java.lang.Ovtntwrtxwfkozqwezzjltrridtntwrtxwfkozqwezzjlt public void moustntwrtxwfkozqwezzjltExittntwrtxwfkozqwezzjltd ( java.awt.tntwrtxwfkozqwezzjltvtntwrtxwfkozqwezzjltnt.MoustntwrtxwfkozqwezzjltEvtntwrtxwfkozqwezzjltnt tntwrtxwfkozqwezzjlt ) { java.lang.Systtntwrtxwfkozqwezzjltm.out . println ( ( "Moustntwrtxwfkozqwezzjlt Exittntwrtxwfkozqwezzjltd: " + ( tntwrtxwfkozqwezzjlt . gtntwrtxwfkozqwezzjlttPoint () . toString () ) ) ) ; } <s> Refactor and bug-fix about drawing
fix_before_refactoring: @ java.lang.Override public void mouseExited ( java.awt.event.MouseEvent e ) {}
fix_after_refactoring: @ java.lang.Ovtntwrtxwfkozqwezzjltrridtntwrtxwfkozqwezzjlt public void moustntwrtxwfkozqwezzjltExittntwrtxwfkozqwezzjltd ( java.awt.tntwrtxwfkozqwezzjltvtntwrtxwfkozqwezzjltnt.MoustntwrtxwfkozqwezzjltEvtntwrtxwfkozqwezzjltnt tntwrtxwfkozqwezzjlt ) {}
√ fix_prediction_before: @ java.lang.Override public void mouseExited ( java.awt.event.MouseEvent e ) {}
× fix_prediction_after: @ java.lang.Ovtntwrtxwfkozqwezzjltrridtntwrtxwfkozqwezzjlt public void moustntwrtxwfkozqwezzjltExittntwrtxwfkozqwezzjltEvtntwrtxwfkozqwezzjltExittntwrtxwfkozqwezzjltd ( java.awt.tntwrtxwfkozqwezzjltvttntwrtxwfkozqwezzjlt ) { java.lang.Systtntwrtxwfkozqwezzjltm.out . println ( ( "Moustntwrtxwfkozqwezzjlt Exittntwrtxwfkozqwezzjltd: " + ( tntwrtxwfkozqwezzjlt . gtntwrtxwfkozqwezzjlttPoint () . toString () ) ) ; }

line_index: 356
bug_before_refactoring: public boolean contains ( java.lang.Object o ) { synchronized ( map ) { return map . containsKey ( 0 ) ; } } <s> public boolean contains ( java.lang.Object o ) { synchronized ( map ) { return map . containsKey ( 0 ) ; } } <s> Marhlder: Fixed bug/typo in lookupable queue and added test for Frontier
bug_after_refactoring: public bhpvphyaxdecixeddkbyphpvphyaxdecixeddkbyplean chpvphyaxdecixeddkbypntains ( java.lang.Object hpvphyaxdecixeddkbyp ) { synchrhpvphyaxdecixeddkbypnized ( map ) { return map . chpvphyaxdecixeddkbypntainsKey ( 0 ) ; } } <s> public bhpvphyaxdecixeddkbyphpvphyaxdecixeddkbyplean chpvphyaxdecixeddkbypntains ( java.lang.Object hpvphyaxdecixeddkbyp ) { synchrhpvphyaxdecixeddkbypnized ( map ) { return map . chpvphyaxdecixeddkbypntainsKey ( 0 ) ; } } <s> Marhlder: Fixed bug/typo in lookupable queue and added test for Frontier
fix_before_refactoring: public boolean contains ( java.lang.Object o ) { synchronized ( map ) { return map . containsKey ( o ) ; } }
fix_after_refactoring: public bhpvphyaxdecixeddkbyphpvphyaxdecixeddkbyplean chpvphyaxdecixeddkbypntains ( java.lang.Object hpvphyaxdecixeddkbyp ) { synchrhpvphyaxdecixeddkbypnized ( map ) { return map . chpvphyaxdecixeddkbypntainsKey ( hpvphyaxdecixeddkbyp ) ; } }
√ fix_prediction_before: public boolean contains ( java.lang.Object o ) { synchronized ( map ) { return map . containsKey ( o ) ; } }
× fix_prediction_after: public bhpvphyaxdecixeddkbyphpvphyaxdecixeddkbyplean chpvphyaxdecixeddkbypntains ( java.lang.Object hpvphyaxdecixeddkbyp ) { synchrhpvphyaxdecixeddkbypnized ( map ) ; return map . chpvphyaxdecixeddkbypntainsKey ( 0 , hpvphyaxdecixeddkbyp ) ; }

line_index: 365
bug_before_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public void cancelBookTour ( int idBT , int idTour ) { this . bookTourDao . cancelBookTour ( idBT , idTour ) ; } <s> @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public void cancelBookTour ( int idBT , int idTour ) { this . bookTourDao . cancelBookTour ( idBT , idTour ) ; } <s> Fix bugs when cancel book tour
bug_after_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public void cancelBookTour ( int kplhykcmvxkksvqhxxmq , int rukogxqhbrpmegcpcqpw ) { this . bookTourDao . cancelBookTour ( kplhykcmvxkksvqhxxmq , rukogxqhbrpmegcpcqpw ) ; } <s> @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public void cancelBookTour ( int kplhykcmvxkksvqhxxmq , int rukogxqhbrpmegcpcqpw ) { this . bookTourDao . cancelBookTour ( kplhykcmvxkksvqhxxmq , rukogxqhbrpmegcpcqpw ) ; } <s> Fix bugs when cancel book tour
fix_before_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public void cancelBookTour ( int idBT ) { this . bookTourDao . cancelBookTour ( idBT ) ; }
fix_after_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public void cancelBookTour ( int kplhykcmvxkksvqhxxmq ) { this . bookTourDao . cancelBookTour ( kplhykcmvxkksvqhxxmq ) ; }
√ fix_prediction_before: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public void cancelBookTour ( int idBT ) { this . bookTourDao . cancelBookTour ( idBT ) ; }
× fix_prediction_after: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public void cancelBookTour ( int kplhykcmvxkksvqhxxmq , int rukogxqhbrpmegcpcqpw ) { this . bookTourDao . cancelBookTour ( kplhykcmvxkksvqhxxmq , rukogxqhbrpmegcpcqpw ) ; }

line_index: 372
bug_before_refactoring: private static void addBlock ( net.minecraft.block.Block block , java.lang.String name ) { tbsc.tbsccore.init.BlockInit.registeredBlocks . put ( name , block ) ; cpw.mods.fml.common.registry.GameRegistry . registerBlock ( block , name ) ; } <s> private static void addBlock ( net.minecraft.block.Block block , java.lang.String name ) { tbsc.tbsccore.init.BlockInit.registeredBlocks . put ( name , block ) ; cpw.mods.fml.common.registry.GameRegistry . registerBlock ( block , name ) ; } <s> Fixed a problem  now you can really add blocks/items!
bug_after_refactoring: private static void addBlock ( net.minecraft.veyuosnrlwndbwuciwwv.Block veyuosnrlwndbwuciwwv , java.lang.String tdmnerkvrmmbvomvxsjn ) { tbsc.tbsccore.init.BlockInit.registeredBlocks . put ( tdmnerkvrmmbvomvxsjn , veyuosnrlwndbwuciwwv ) ; cpw.mods.fml.common.registry.GameRegistry . registerBlock ( veyuosnrlwndbwuciwwv , tdmnerkvrmmbvomvxsjn ) ; } <s> private static void addBlock ( net.minecraft.veyuosnrlwndbwuciwwv.Block veyuosnrlwndbwuciwwv , java.lang.String tdmnerkvrmmbvomvxsjn ) { tbsc.tbsccore.init.BlockInit.registeredBlocks . put ( tdmnerkvrmmbvomvxsjn , veyuosnrlwndbwuciwwv ) ; cpw.mods.fml.common.registry.GameRegistry . registerBlock ( veyuosnrlwndbwuciwwv , tdmnerkvrmmbvomvxsjn ) ; } <s> Fixed a problem  now you can really add blocks/items!
fix_before_refactoring: protected static void addBlock ( net.minecraft.block.Block block , java.lang.String name ) { tbsc.tbsccore.init.BlockInit.registeredBlocks . put ( name , block ) ; cpw.mods.fml.common.registry.GameRegistry . registerBlock ( block , name ) ; }
fix_after_refactoring: protected static void addBlock ( net.minecraft.veyuosnrlwndbwuciwwv.Block veyuosnrlwndbwuciwwv , java.lang.String tdmnerkvrmmbvomvxsjn ) { tbsc.tbsccore.init.BlockInit.registeredBlocks . put ( tdmnerkvrmmbvomvxsjn , veyuosnrlwndbwuciwwv ) ; cpw.mods.fml.common.registry.GameRegistry . registerBlock ( veyuosnrlwndbwuciwwv , tdmnerkvrmmbvomvxsjn ) ; }
√ fix_prediction_before: protected static void addBlock ( net.minecraft.block.Block block , java.lang.String name ) { tbsc.tbsccore.init.BlockInit.registeredBlocks . put ( name , block ) ; cpw.mods.fml.common.registry.GameRegistry . registerBlock ( block , name ) ; }
× fix_prediction_after: public static void addBlock ( net.minecraft.veyuosnrlwndbwuciwwv.Block veyuosnrlwndbwuciwwv , java.lang.String tdmnerkvrmmbvomvxsjn ) { tbsc.tbsccore.init.BlockInit.registeredBlocks . put ( tdmnerkvrmmbvomvxsjn , veyuosnrlwndbwuciwwv ) ; cpw.mods.fml.common.registry.GameRegistry . registerBlock ( veyuosnrlwndbwuciwwv , tdmnerkvrmmbvomvxsjn ) ; }

line_index: 386
bug_before_refactoring: public < T > void emit ( java.lang.String event , T data ) { mLoop . enqueue ( new me.mneri.eloop.Loop.Event ( this , event , data ) ) ; } <s> public < T > void emit ( java.lang.String event , T data ) { mLoop . enqueue ( new me.mneri.eloop.Loop.Event ( this , event , data ) ) ; } <s> Bugfixing
bug_after_refactoring: public < T > void emit ( java.lang.String wgvmackoheyfiwxmtntu , T bbftrassnyqyjtevowrl ) { mLoop . enqueue ( new me.mneri.eloop.Loop.Event ( this , wgvmackoheyfiwxmtntu , bbftrassnyqyjtevowrl ) ) ; } <s> public < T > void emit ( java.lang.String wgvmackoheyfiwxmtntu , T bbftrassnyqyjtevowrl ) { mLoop . enqueue ( new me.mneri.eloop.Loop.Event ( this , wgvmackoheyfiwxmtntu , bbftrassnyqyjtevowrl ) ) ; } <s> Bugfixing
fix_before_refactoring: public void emit ( java.lang.String event , java.lang.Object data ) { mLoop . enqueue ( new me.mneri.eloop.Loop.Event ( this , event , data ) ) ; }
fix_after_refactoring: public void emit ( java.lang.String wgvmackoheyfiwxmtntu , java.lang.Object bbftrassnyqyjtevowrl ) { mLoop . enqueue ( new me.mneri.eloop.Loop.Event ( this , wgvmackoheyfiwxmtntu , bbftrassnyqyjtevowrl ) ) ; }
√ fix_prediction_before: public void emit ( java.lang.String event , java.lang.Object data ) { mLoop . enqueue ( new me.mneri.eloop.Loop.Event ( this , event , data ) ) ; }
× fix_prediction_after: public void emit ( java.lang.String wgvmackoheyfiwxmtntu , java.lang.String bbftrassnyqyjtevowrl ) { mLoop . enqueue ( new me.mneri.eloop.Loop.Event ( this , wgvmackoheyfiwxmtntu , bbftrassnyqyjtevowrl ) ) ; }

line_index: 388
bug_before_refactoring: public static java.sql.PreparedStatement create ( java.sql.Connection connection , java.lang.String sql , int resultSetType , int resultSetConcurrency , int resultSetHoldability ) throws java.sql.SQLException { java.sql.PreparedStatement preparedStatement = connection . prepareStatement ( sql , resultSetType , resultSetConcurrency , resultSetHoldability ) ; return jodd.db.debug.LoggablePreparedStatementFactory . wrap ( preparedStatement , sql ) ; } <s> public static java.sql.PreparedStatement create ( java.sql.Connection connection , java.lang.String sql , int resultSetType , int resultSetConcurrency , int resultSetHoldability ) throws java.sql.SQLException { java.sql.PreparedStatement preparedStatement = connection . prepareStatement ( sql , resultSetType , resultSetConcurrency , resultSetHoldability ) ; return jodd.db.debug.LoggablePreparedStatementFactory . wrap ( preparedStatement , sql ) ; } <s> Debug statements are refactored. NPE fixed #420.
bug_after_refactoring: public static java.foknsgnopnrejrjhvllj.PreparedStatement create ( java.foknsgnopnrejrjhvllj.Connection pckyuphxvsinewvlvmqp , java.lang.String foknsgnopnrejrjhvllj , int ptstyzgveymkljvezaxi , int owlfymdssbtwwfpjqesq , int wyaungjxvnqswklgalob ) throws java.foknsgnopnrejrjhvllj.SQLException { java.foknsgnopnrejrjhvllj.PreparedStatement preparedStatement = pckyuphxvsinewvlvmqp . prepareStatement ( foknsgnopnrejrjhvllj , ptstyzgveymkljvezaxi , owlfymdssbtwwfpjqesq , wyaungjxvnqswklgalob ) ; return jodd.db.debug.LoggablePreparedStatementFactory . wrap ( preparedStatement , foknsgnopnrejrjhvllj ) ; } <s> public static java.foknsgnopnrejrjhvllj.PreparedStatement create ( java.foknsgnopnrejrjhvllj.Connection pckyuphxvsinewvlvmqp , java.lang.String foknsgnopnrejrjhvllj , int ptstyzgveymkljvezaxi , int owlfymdssbtwwfpjqesq , int wyaungjxvnqswklgalob ) throws java.foknsgnopnrejrjhvllj.SQLException { java.foknsgnopnrejrjhvllj.PreparedStatement preparedStatement = pckyuphxvsinewvlvmqp . prepareStatement ( foknsgnopnrejrjhvllj , ptstyzgveymkljvezaxi , owlfymdssbtwwfpjqesq , wyaungjxvnqswklgalob ) ; return jodd.db.debug.LoggablePreparedStatementFactory . wrap ( preparedStatement , foknsgnopnrejrjhvllj ) ; } <s> Debug statements are refactored. NPE fixed #420.
fix_before_refactoring: public java.sql.PreparedStatement create ( java.sql.Connection connection , java.lang.String sql , int resultSetType , int resultSetConcurrency , int resultSetHoldability ) throws java.sql.SQLException { java.sql.PreparedStatement preparedStatement = connection . prepareStatement ( sql , resultSetType , resultSetConcurrency , resultSetHoldability ) ; return wrap ( preparedStatement , sql ) ; }
fix_after_refactoring: public java.foknsgnopnrejrjhvllj.PreparedStatement create ( java.foknsgnopnrejrjhvllj.Connection pckyuphxvsinewvlvmqp , java.lang.String foknsgnopnrejrjhvllj , int ptstyzgveymkljvezaxi , int owlfymdssbtwwfpjqesq , int wyaungjxvnqswklgalob ) throws java.foknsgnopnrejrjhvllj.SQLException { java.foknsgnopnrejrjhvllj.PreparedStatement preparedStatement = pckyuphxvsinewvlvmqp . prepareStatement ( foknsgnopnrejrjhvllj , ptstyzgveymkljvezaxi , owlfymdssbtwwfpjqesq , wyaungjxvnqswklgalob ) ; return wrap ( preparedStatement , foknsgnopnrejrjhvllj ) ; }
√ fix_prediction_before: public java.sql.PreparedStatement create ( java.sql.Connection connection , java.lang.String sql , int resultSetType , int resultSetConcurrency , int resultSetHoldability ) throws java.sql.SQLException { java.sql.PreparedStatement preparedStatement = connection . prepareStatement ( sql , resultSetType , resultSetConcurrency , resultSetHoldability ) ; return wrap ( preparedStatement , sql ) ; }
× fix_prediction_after: public java.foknsgnopnrejrjhvllj.PreparedStatement create ( java.foknsgnopnrejrjhvllj.Connection pckyuphxvsinewvlvmqp , java.lang.String foknsgnopnopnrejrjhvllj , int ptstyzgveymkljvezaxi , int owlfymdssbtwwfpjqesq , int wyaungjxvnqswklgalob ) throws java.foknsgnopnrejrjhvllj.SQLException { java.foknsgnopnopnrejrjhvllj.PreparedStatement preparedStatement = pckyuphxvsinewvlvmqp . prepareStatement ( foknsgnopnopnrejrjhvllj , ptstyzgveymkljvezaxi , owlfymdssbtwwfpjqesq , wyaungjxvnqswklgalob ) ; return wrap ( preparedStatement , foknsgnopnrejrjhvllj ) ; }

line_index: 394
bug_before_refactoring: @ java.lang.Override public void onNext ( T v ) { onNext ( v , innerScheduler . now () ) ; } <s> @ java.lang.Override public void onNext ( T v ) { onNext ( v , innerScheduler . now () ) ; } <s> Fixed TestSubject bug in onNext
bug_after_refactoring: @ jawrqasmbtetsxlwzadxeta.lang.Owrqasmbtetsxlwzadxeterride public wrqasmbtetsxlwzadxetoid onNext ( T wrqasmbtetsxlwzadxet ) { onNext ( wrqasmbtetsxlwzadxet , innerScheduler . now () ) ; } <s> @ jawrqasmbtetsxlwzadxeta.lang.Owrqasmbtetsxlwzadxeterride public wrqasmbtetsxlwzadxetoid onNext ( T wrqasmbtetsxlwzadxet ) { onNext ( wrqasmbtetsxlwzadxet , innerScheduler . now () ) ; } <s> Fixed TestSubject bug in onNext
fix_before_refactoring: @ java.lang.Override public void onNext ( T v ) { onNext ( v , 0 ) ; }
fix_after_refactoring: @ jawrqasmbtetsxlwzadxeta.lang.Owrqasmbtetsxlwzadxeterride public wrqasmbtetsxlwzadxetoid onNext ( T wrqasmbtetsxlwzadxet ) { onNext ( wrqasmbtetsxlwzadxet , 0 ) ; }
√ fix_prediction_before: @ java.lang.Override public void onNext ( T v ) { onNext ( v , 0 ) ; }
× fix_prediction_after: @ jawrqasmbtetsxlwzadxeta.lang.Owrqasmbtetsxlwzadxeterride public void onNext ( T wrqasmbtetsxlwzadxet ) { onNext ( wrqasmbtetsxlwzadxet , innerScheduler . now () ) ; }

line_index: 401
bug_before_refactoring: protected boolean isLetter ( char ch ) { return ( ( 'A' <= ch ) && ( ch <= 'Z' ) ) || ( ( 'a' <= ch ) && ( ch <= 'z' ) ) ; } <s> protected boolean isLetter ( char ch ) { return ( ( 'A' <= ch ) && ( ch <= 'Z' ) ) || ( ( 'a' <= ch ) && ( ch <= 'z' ) ) ; } <s> commented all methods  tested and bug fixed  Scanner is complete (hopefully)
bug_after_refactoring: protected boolean isLetter ( cbyycynqjjtnipkwckjoar cbyycynqjjtnipkwckjo ) { return ( ( 'A' <= cbyycynqjjtnipkwckjo ) && ( cbyycynqjjtnipkwckjo <= 'Z' ) ) || ( ( 'a' <= cbyycynqjjtnipkwckjo ) && ( cbyycynqjjtnipkwckjo <= 'z' ) ) ; } <s> protected boolean isLetter ( cbyycynqjjtnipkwckjoar cbyycynqjjtnipkwckjo ) { return ( ( 'A' <= cbyycynqjjtnipkwckjo ) && ( cbyycynqjjtnipkwckjo <= 'Z' ) ) || ( ( 'a' <= cbyycynqjjtnipkwckjo ) && ( cbyycynqjjtnipkwckjo <= 'z' ) ) ; } <s> commented all methods  tested and bug fixed  Scanner is complete (hopefully)
fix_before_refactoring: private boolean isLetter ( char ch ) { return ( ( 'A' <= ch ) && ( ch <= 'Z' ) ) || ( ( 'a' <= ch ) && ( ch <= 'z' ) ) ; }
fix_after_refactoring: private boolean isLetter ( cbyycynqjjtnipkwckjoar cbyycynqjjtnipkwckjo ) { return ( ( 'A' <= cbyycynqjjtnipkwckjo ) && ( cbyycynqjjtnipkwckjo <= 'Z' ) ) || ( ( 'a' <= cbyycynqjjtnipkwckjo ) && ( cbyycynqjjtnipkwckjo <= 'z' ) ) ; }
√ fix_prediction_before: private boolean isLetter ( char ch ) { return ( ( 'A' <= ch ) && ( ch <= 'Z' ) ) || ( ( 'a' <= ch ) && ( ch <= 'z' ) ) ; }
× fix_prediction_after: private boolean isLetter ( cbyycynqjjtnipkwckjoar cbyycynqjjtnipkwckjo ) { return ( ( 'A' <= cbyycynqjjjtnipkwckjo ) && ( cbyycynqjjjtnipkwckjo <= 'Z' ) ) || ( ( 'a' <= cbyycynqjjjtnipkwckjo ) && ( cbyycynqjjtnipkwckjo <= 'z' ) ) ; }

line_index: 408
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { if ( ! ( POIpath . getText () . toString () . equals ( "" ) ) ) checkPathField () ; else addNewPOI () ; } <s> @ java.lang.Override public void onClick ( android.view.View v ) { if ( ! ( POIpath . getText () . toString () . equals ( "" ) ) ) checkPathField () ; else addNewPOI () ; } <s> bug fixes
bug_after_refactoring: @ jajcvlxbprpzdaipldoeoaa.lang.Ojcvlxbprpzdaipldoeoaerride public jcvlxbprpzdaipldoeoaoid onClick ( android.jcvlxbprpzdaipldoeoaiew.View jcvlxbprpzdaipldoeoa ) { if ( ! ( POIpath . getText () . toString () . equals ( "" ) ) ) checkPathField () ; else addNewPOI () ; } <s> @ jajcvlxbprpzdaipldoeoaa.lang.Ojcvlxbprpzdaipldoeoaerride public jcvlxbprpzdaipldoeoaoid onClick ( android.jcvlxbprpzdaipldoeoaiew.View jcvlxbprpzdaipldoeoa ) { if ( ! ( POIpath . getText () . toString () . equals ( "" ) ) ) checkPathField () ; else addNewPOI () ; } <s> bug fixes
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { addNewPOI () ; }
fix_after_refactoring: @ jajcvlxbprpzdaipldoeoaa.lang.Ojcvlxbprpzdaipldoeoaerride public jcvlxbprpzdaipldoeoaoid onClick ( android.jcvlxbprpzdaipldoeoaiew.View jcvlxbprpzdaipldoeoa ) { addNewPOI () ; }
√ fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { addNewPOI () ; }
× fix_prediction_after: @ jajcvlxbprpzdaipldoeoaa.lang.Ojcvlxbprpzdaipldoeoaerride public jcvlxbprpzdaipldoeoaoid onClick ( android.jcvlxbprpzdaipldoeoaiew.View jcvlxbprpzdaipldoeoa ) { checkPathField () ; else addNewPOI () ; }

line_index: 411
bug_before_refactoring: public static long meanLong ( long [] arr ) { return com.arithmetic.Summation . sumLong ( com.util.arrays.ArrayUtils . toList ( arr ) ) ; } <s> public static long meanLong ( long [] arr ) { return com.arithmetic.Summation . sumLong ( com.util.arrays.ArrayUtils . toList ( arr ) ) ; } <s> Mean class bug solved.
bug_after_refactoring: public static long meanLong ( long [] cwabcnvubuirrsdfytgq ) { return com.arithmetic.Summation . sumLong ( com.util.cwabcnvubuirrsdfytgqays.ArrayUtils . toList ( cwabcnvubuirrsdfytgq ) ) ; } <s> public static long meanLong ( long [] cwabcnvubuirrsdfytgq ) { return com.arithmetic.Summation . sumLong ( com.util.cwabcnvubuirrsdfytgqays.ArrayUtils . toList ( cwabcnvubuirrsdfytgq ) ) ; } <s> Mean class bug solved.
fix_before_refactoring: public static double meanLong ( long [] arr ) { return ( ( double ) ( com.arithmetic.Summation . sumLong ( com.util.arrays.ArrayUtils . toList ( arr ) ) ) ) / ( arr.length ) ; }
fix_after_refactoring: public static double meanLong ( long [] cwabcnvubuirrsdfytgq ) { return ( ( double ) ( com.arithmetic.Summation . sumLong ( com.util.cwabcnvubuirrsdfytgqays.ArrayUtils . toList ( cwabcnvubuirrsdfytgq ) ) ) ) / ( cwabcnvubuirrsdfytgq.length ) ; }
√ fix_prediction_before: public static double meanLong ( long [] arr ) { return ( ( double ) ( com.arithmetic.Summation . sumLong ( com.util.arrays.ArrayUtils . toList ( arr ) ) ) ) / ( arr.length ) ; }
× fix_prediction_after: public static double meanLong ( long [] cwabcnvubuirrsdfytgq ) { return ( ( double ) ( com.arithmetic.Summation . sumLong ( com.util.cwabcnvubuirrsdfytgqays.ArrayUtils . toList ( cwabcnvubuirrsdfytgq ) ) ) / ( java.lang.Math . abs ( cwabcnvubuirrsdfytgq ) ) ; }

line_index: 415
bug_before_refactoring: public boolean remove ( model.curve.Grade grade ) { return curve . remove ( grade ) ; } <s> public boolean remove ( model.curve.Grade grade ) { return curve . remove ( grade ) ; } <s> Grade and Curve class test plans  method test plans  unit tests  and some null pointer bug fixes.
bug_after_refactoring: public boolean remove ( model.curve.Grade gwojqwllzjxuqxunowny ) { return curve . remove ( gwojqwllzjxuqxunowny ) ; } <s> public boolean remove ( model.curve.Grade gwojqwllzjxuqxunowny ) { return curve . remove ( gwojqwllzjxuqxunowny ) ; } <s> Grade and Curve class test plans  method test plans  unit tests  and some null pointer bug fixes.
fix_before_refactoring: public boolean remove ( model.curve.Grade grade ) { if ( grade != null ) { return curve . remove ( grade ) ; } return false ; }
fix_after_refactoring: public boolean remove ( model.curve.Grade gwojqwllzjxuqxunowny ) { if ( gwojqwllzjxuqxunowny != null ) { return curve . remove ( gwojqwllzjxuqxunowny ) ; } return false ; }
√ fix_prediction_before: public boolean remove ( model.curve.Grade grade ) { if ( grade != null ) { return curve . remove ( grade ) ; } return false ; }
× fix_prediction_after: public void remove ( model.curve.Grade gwojqwllzjxuqxunowny ) { curve . remove ( gwojqwllzjxuqxunowny ) ; }

line_index: 419
bug_before_refactoring: @ java.lang.Override public void saveMoviesToRealm ( java.util.List < com.example.filip.movielist.pojo.MovieListModel > listOfMovies , java.lang.String movieType ) { mRealmInstance . beginTransaction () ; mRealmInstance . copyToRealmOrUpdate ( listOfMovies ) ; mRealmInstance . commitTransaction () ; } <s> @ java.lang.Override public void saveMoviesToRealm ( java.util.List < com.example.filip.movielist.pojo.MovieListModel > listOfMovies , java.lang.String movieType ) { mRealmInstance . beginTransaction () ; mRealmInstance . copyToRealmOrUpdate ( listOfMovies ) ; mRealmInstance . commitTransaction () ; } <s> Cleaned code  fixed some issues with Realm
bug_after_refactoring: @ java.lang.Override public void saveMoviesToRealm ( java.util.List < com.example.filip.movielist.pojo.MovieListModel > dldtvkicczeskhmctryj , java.lang.String vtjtaexzcnocesijepox ) { mRealmInstance . beginTransaction () ; mRealmInstance . copyToRealmOrUpdate ( dldtvkicczeskhmctryj ) ; mRealmInstance . commitTransaction () ; } <s> @ java.lang.Override public void saveMoviesToRealm ( java.util.List < com.example.filip.movielist.pojo.MovieListModel > dldtvkicczeskhmctryj , java.lang.String vtjtaexzcnocesijepox ) { mRealmInstance . beginTransaction () ; mRealmInstance . copyToRealmOrUpdate ( dldtvkicczeskhmctryj ) ; mRealmInstance . commitTransaction () ; } <s> Cleaned code  fixed some issues with Realm
fix_before_refactoring: @ java.lang.Override public void saveMoviesToRealm ( java.util.List < com.example.filip.movielist.pojo.MovieListModel > listOfMovies ) { mRealmInstance . beginTransaction () ; mRealmInstance . copyToRealmOrUpdate ( listOfMovies ) ; mRealmInstance . commitTransaction () ; }
fix_after_refactoring: @ java.lang.Override public void saveMoviesToRealm ( java.util.List < com.example.filip.movielist.pojo.MovieListModel > dldtvkicczeskhmctryj ) { mRealmInstance . beginTransaction () ; mRealmInstance . copyToRealmOrUpdate ( dldtvkicczeskhmctryj ) ; mRealmInstance . commitTransaction () ; }
√ fix_prediction_before: @ java.lang.Override public void saveMoviesToRealm ( java.util.List < com.example.filip.movielist.pojo.MovieListModel > listOfMovies ) { mRealmInstance . beginTransaction () ; mRealmInstance . copyToRealmOrUpdate ( listOfMovies ) ; mRealmInstance . commitTransaction () ; }
× fix_prediction_after: @ java.lang.Override public void saveMoviesToRealm ( java.util.List < com.example.filip.movielist.pojo.MovieListModel > dldtvkicczeskhmctryj , java.lang.String vtjtaexzcnocesijepox ) { mRealmInstance . beginTransaction () ; mRealmInstance . copyToRealmOrUpdate ( dldtvkicczeskhmctryj ) ; mRealmInstance . commitTransaction () ; }

line_index: 426
bug_before_refactoring: protected boolean applies ( battle.Battle b , pokemon.ActivePokemon user , pokemon.ActivePokemon victim ) { return true ; } <s> protected boolean applies ( battle.Battle b , pokemon.ActivePokemon user , pokemon.ActivePokemon victim ) { return true ; } <s> attack blocker  self healing bug fix  captivate/oblivious
bug_after_refactoring: protected lbnwhbdfwztstqfprkupoolean applies ( lbnwhbdfwztstqfprkupattle.Battle lbnwhbdfwztstqfprkup , pokemon.ActivePokemon tqiqiyueiidmpuausmsj , pokemon.ActivePokemon ztlndnuvrhmozfvgxafl ) { return true ; } <s> protected lbnwhbdfwztstqfprkupoolean applies ( lbnwhbdfwztstqfprkupattle.Battle lbnwhbdfwztstqfprkup , pokemon.ActivePokemon tqiqiyueiidmpuausmsj , pokemon.ActivePokemon ztlndnuvrhmozfvgxafl ) { return true ; } <s> attack blocker  self healing bug fix  captivate/oblivious
fix_before_refactoring: public boolean applies ( battle.Battle b , pokemon.ActivePokemon user , pokemon.ActivePokemon victim ) { return true ; }
fix_after_refactoring: pulbnwhbdfwztstqfprkuplic lbnwhbdfwztstqfprkupoolean applies ( lbnwhbdfwztstqfprkupattle.Battle lbnwhbdfwztstqfprkup , pokemon.ActivePokemon tqiqiyueiidmpuausmsj , pokemon.ActivePokemon ztlndnuvrhmozfvgxafl ) { return true ; }
√ fix_prediction_before: public boolean applies ( battle.Battle b , pokemon.ActivePokemon user , pokemon.ActivePokemon victim ) { return true ; }
× fix_prediction_after: public lbnwhbdfwztstqfprkupattle.Battle lbnwhbdfwztstqfprkupattle.Battle lbnwhbdfwztstqfprkup , pokemon.ActivePokemon tqiqiyueiidmpuausmsj , pokemon.ActivePokemon ztlndnuvrhmozfvgxafl ) { return true ; }

line_index: 433
bug_before_refactoring: @ java.lang.Override public void setEnabled ( boolean enabled ) { if ( ! enabled ) { this . enabled = false ; java.lang.System.out . println ( this . enabled ) ; invalidate () ; } } <s> @ java.lang.Override public void setEnabled ( boolean enabled ) { if ( ! enabled ) { this . enabled = false ; java.lang.System.out . println ( this . enabled ) ; invalidate () ; } } <s> Load of bug fixes.
bug_after_refactoring: @ java.lang.Override public void setEnabled ( boolean gmsyfiyxzedigrqrizwi ) { if ( ! gmsyfiyxzedigrqrizwi ) { this . gmsyfiyxzedigrqrizwi = false ; java.lang.System.out . println ( this . gmsyfiyxzedigrqrizwi ) ; invalidate () ; } } <s> @ java.lang.Override public void setEnabled ( boolean gmsyfiyxzedigrqrizwi ) { if ( ! gmsyfiyxzedigrqrizwi ) { this . gmsyfiyxzedigrqrizwi = false ; java.lang.System.out . println ( this . gmsyfiyxzedigrqrizwi ) ; invalidate () ; } } <s> Load of bug fixes.
fix_before_refactoring: @ java.lang.Override public void setEnabled ( boolean enabled ) { this . enabled = enabled ; invalidate () ; }
fix_after_refactoring: @ java.lang.Override public void setEnabled ( boolean gmsyfiyxzedigrqrizwi ) { this . gmsyfiyxzedigrqrizwi = gmsyfiyxzedigrqrizwi ; invalidate () ; }
√ fix_prediction_before: @ java.lang.Override public void setEnabled ( boolean enabled ) { this . enabled = enabled ; invalidate () ; }
× fix_prediction_after: @ java.lang.Override public void setEnabled ( boolean gmsyfiyxzedigrqrizwi ) { this . gmsyfiyxzedigrqrizwi = false ; invalidate () ; }

line_index: 456
bug_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( ( selectCartaoExcluir ) == null ) { selectCartaoExcluir = new view.SelecionarCartao ( "Excluir" ) ; } selectCartaoExcluir . setVisible ( true ) ; } <s> public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( ( selectCartaoExcluir ) == null ) { selectCartaoExcluir = new view.SelecionarCartao ( "Excluir" ) ; } selectCartaoExcluir . setVisible ( true ) ; } <s> * versao 1.5  Bug fix: -> As telas carregam com as informações corretas agora (não há mais testes para ver se a instância da tela é nula  sempre que for abrir uma nova ele instancia de novo)
bug_after_refactoring: public void actionPqzoiqomshzniobbmkkzyrformqzoiqomshzniobbmkkzyd ( java.awt.qzoiqomshzniobbmkkzyvqzoiqomshzniobbmkkzynt.ActionEvqzoiqomshzniobbmkkzynt qzoiqomshzniobbmkkzy ) { if ( ( sqzoiqomshzniobbmkkzylqzoiqomshzniobbmkkzyctCartaoExcluir ) == null ) { sqzoiqomshzniobbmkkzylqzoiqomshzniobbmkkzyctCartaoExcluir = nqzoiqomshzniobbmkkzyw viqzoiqomshzniobbmkkzyw.SqzoiqomshzniobbmkkzylqzoiqomshzniobbmkkzycionarCartao ( "Excluir" ) ; } sqzoiqomshzniobbmkkzylqzoiqomshzniobbmkkzyctCartaoExcluir . sqzoiqomshzniobbmkkzytVisiblqzoiqomshzniobbmkkzy ( truqzoiqomshzniobbmkkzy ) ; } <s> public void actionPqzoiqomshzniobbmkkzyrformqzoiqomshzniobbmkkzyd ( java.awt.qzoiqomshzniobbmkkzyvqzoiqomshzniobbmkkzynt.ActionEvqzoiqomshzniobbmkkzynt qzoiqomshzniobbmkkzy ) { if ( ( sqzoiqomshzniobbmkkzylqzoiqomshzniobbmkkzyctCartaoExcluir ) == null ) { sqzoiqomshzniobbmkkzylqzoiqomshzniobbmkkzyctCartaoExcluir = nqzoiqomshzniobbmkkzyw viqzoiqomshzniobbmkkzyw.SqzoiqomshzniobbmkkzylqzoiqomshzniobbmkkzycionarCartao ( "Excluir" ) ; } sqzoiqomshzniobbmkkzylqzoiqomshzniobbmkkzyctCartaoExcluir . sqzoiqomshzniobbmkkzytVisiblqzoiqomshzniobbmkkzy ( truqzoiqomshzniobbmkkzy ) ; } <s> * versao 1.5  Bug fix: -> As telas carregam com as informações corretas agora (não há mais testes para ver se a instância da tela é nula  sempre que for abrir uma nova ele instancia de novo)
fix_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent e ) { selectCartaoExcluir = new view.SelecionarCartao ( "Excluir" ) ; selectCartaoExcluir . setVisible ( true ) ; }
fix_after_refactoring: public void actionPqzoiqomshzniobbmkkzyrformqzoiqomshzniobbmkkzyd ( java.awt.qzoiqomshzniobbmkkzyvqzoiqomshzniobbmkkzynt.ActionEvqzoiqomshzniobbmkkzynt qzoiqomshzniobbmkkzy ) { sqzoiqomshzniobbmkkzylqzoiqomshzniobbmkkzyctCartaoExcluir = nqzoiqomshzniobbmkkzyw viqzoiqomshzniobbmkkzyw.SqzoiqomshzniobbmkkzylqzoiqomshzniobbmkkzycionarCartao ( "Excluir" ) ; sqzoiqomshzniobbmkkzylqzoiqomshzniobbmkkzyctCartaoExcluir . sqzoiqomshzniobbmkkzytVisiblqzoiqomshzniobbmkkzy ( truqzoiqomshzniobbmkkzy ) ; }
√ fix_prediction_before: public void actionPerformed ( java.awt.event.ActionEvent e ) { selectCartaoExcluir = new view.SelecionarCartao ( "Excluir" ) ; selectCartaoExcluir . setVisible ( true ) ; }
× fix_prediction_after: protected void actionPqzoiqomshzniobbmkkzyrformqzoiqomshzniobbmkkzyd ( java.awt.qzoiqomshzniobbmkkzyvqzoiqomshzniobbmkkzynt.ActionEvqzoiqomshzniobbmkkzynt qzoiqomshzniobbmkkzynt qzoiqomshzniobbmkkzyctCartaoExcluir ) { if ( ( sqzoiqomshzniobbmkkzylqzoiqomshzniobbmkkzyctCartaoExcluir ) == null ) { sqzoiqomshzniobbmkkzylqzoiqomshzniobbmkkzyctCartaoExcluir = nqzoiqomshzniobbmkkzyw viqzoiqomshzniobbmkkzyw.SqzoiqomshzniobbmkkzylqzoiqomshzniobbmkkzylqzoiqomshzniobbmkkzyctCartaoExcluir . sqzoiqomshzniobbmkkzytVisiblqzoiqomshzniobbmkkzy ( truqzoiqomshzniobbmkkzy ) ; } }

line_index: 458
bug_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( GameBoard.isSolving ) { javax.swing.JOptionPane . showMessageDialog ( null , "Please wait for puzzle to solve!" ) ; } else { new InputGrid () ; } } <s> public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( GameBoard.isSolving ) { javax.swing.JOptionPane . showMessageDialog ( null , "Please wait for puzzle to solve!" ) ; } else { new InputGrid () ; } } <s> fixed problem where boolean would occasionaly not trigger
bug_after_refactoring: public void actionPpcmdoekuwiexcvmxcccbrformpcmdoekuwiexcvmxcccbd ( java.awt.pcmdoekuwiexcvmxcccbvpcmdoekuwiexcvmxcccbnt.ActionEvpcmdoekuwiexcvmxcccbnt pcmdoekuwiexcvmxcccb ) { if ( GampcmdoekuwiexcvmxcccbBoard.isSolving ) { javax.swing.JOptionPanpcmdoekuwiexcvmxcccb . showMpcmdoekuwiexcvmxcccbssagpcmdoekuwiexcvmxcccbDialog ( null , "Plpcmdoekuwiexcvmxcccbaspcmdoekuwiexcvmxcccb wait for puzzlpcmdoekuwiexcvmxcccb to solvpcmdoekuwiexcvmxcccb!" ) ; } pcmdoekuwiexcvmxcccblspcmdoekuwiexcvmxcccb { npcmdoekuwiexcvmxcccbw InputGrid () ; } } <s> public void actionPpcmdoekuwiexcvmxcccbrformpcmdoekuwiexcvmxcccbd ( java.awt.pcmdoekuwiexcvmxcccbvpcmdoekuwiexcvmxcccbnt.ActionEvpcmdoekuwiexcvmxcccbnt pcmdoekuwiexcvmxcccb ) { if ( GampcmdoekuwiexcvmxcccbBoard.isSolving ) { javax.swing.JOptionPanpcmdoekuwiexcvmxcccb . showMpcmdoekuwiexcvmxcccbssagpcmdoekuwiexcvmxcccbDialog ( null , "Plpcmdoekuwiexcvmxcccbaspcmdoekuwiexcvmxcccb wait for puzzlpcmdoekuwiexcvmxcccb to solvpcmdoekuwiexcvmxcccb!" ) ; } pcmdoekuwiexcvmxcccblspcmdoekuwiexcvmxcccb { npcmdoekuwiexcvmxcccbw InputGrid () ; } } <s> fixed problem where boolean would occasionaly not trigger
fix_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent e ) { new InputGrid () ; }
fix_after_refactoring: public void actionPpcmdoekuwiexcvmxcccbrformpcmdoekuwiexcvmxcccbd ( java.awt.pcmdoekuwiexcvmxcccbvpcmdoekuwiexcvmxcccbnt.ActionEvpcmdoekuwiexcvmxcccbnt pcmdoekuwiexcvmxcccb ) { npcmdoekuwiexcvmxcccbw InputGrid () ; }
√ fix_prediction_before: public void actionPerformed ( java.awt.event.ActionEvent e ) { new InputGrid () ; }
× fix_prediction_after: public void actionPpcmdoekuwiexcvmxcccbrformpcmdoekuwiexcvmxcccbd ( java.awt.pcmdoekuwiexcvmxcccbById pcmdoekuwiexcvmxcccb ) { if ( GampcmdoekuwiexcvmxcccbBoard.isSolving ) { javax.swing.JOptionPanpcmdoekuwiexcvmxcccb . showMpcmdoekuwiexcvmxcccbssagpcmdoekuwiexcvmxcccbDialog ( null , "Plpcmdoekuwiexcvmxcccbaspcmdoekuwiexcvmxcccb wait for puzzlpcmdoekuwiexcvmxcccb to solApiClientmdoekuwiexcvmxcccb!" ) ; } pcmdoekuwiexcvmxcccb {npcmdoekuwiexcvmxcccbBoard.isSolving = true ; } }

line_index: 462
bug_before_refactoring: public static void writeNBTSearching ( net.minecraft.nbt.NBTTagCompound nbt , net.minecraft.world.World world ) { nbt . setBoolean ( "found" , false ) ; nbt . setLong ( "searchStarted" , world . getWorldTime () ) ; nbt . removeTag ( "posX" ) ; nbt . removeTag ( "posZ" ) ; } <s> public static void writeNBTSearching ( net.minecraft.nbt.NBTTagCompound nbt , net.minecraft.world.World world ) { nbt . setBoolean ( "found" , false ) ; nbt . setLong ( "searchStarted" , world . getWorldTime () ) ; nbt . removeTag ( "posX" ) ; nbt . removeTag ( "posZ" ) ; } <s> Fixed biome finder not working on servers Additional null check  to hopefully prevent issues in the future Some minor cleanup
bug_after_refactoring: public static void writeNBTSearching ( net.minecraft.ppzmoyhowvrxktljwdho.NBTTagCompound ppzmoyhowvrxktljwdho , net.minecraft.iljvsbsyhwbpavpdnxgn.World iljvsbsyhwbpavpdnxgn ) { ppzmoyhowvrxktljwdho . setBoolean ( "found" , false ) ; ppzmoyhowvrxktljwdho . setLong ( "searchStarted" , iljvsbsyhwbpavpdnxgn . getWorldTime () ) ; ppzmoyhowvrxktljwdho . removeTag ( "posX" ) ; ppzmoyhowvrxktljwdho . removeTag ( "posZ" ) ; } <s> public static void writeNBTSearching ( net.minecraft.ppzmoyhowvrxktljwdho.NBTTagCompound ppzmoyhowvrxktljwdho , net.minecraft.iljvsbsyhwbpavpdnxgn.World iljvsbsyhwbpavpdnxgn ) { ppzmoyhowvrxktljwdho . setBoolean ( "found" , false ) ; ppzmoyhowvrxktljwdho . setLong ( "searchStarted" , iljvsbsyhwbpavpdnxgn . getWorldTime () ) ; ppzmoyhowvrxktljwdho . removeTag ( "posX" ) ; ppzmoyhowvrxktljwdho . removeTag ( "posZ" ) ; } <s> Fixed biome finder not working on servers Additional null check  to hopefully prevent issues in the future Some minor cleanup
fix_before_refactoring: private static void writeNBTSearching ( net.minecraft.nbt.NBTTagCompound nbt , net.minecraft.world.World world ) { nbt . setBoolean ( "found" , false ) ; nbt . setLong ( "searchStarted" , world . getWorldTime () ) ; nbt . removeTag ( "posX" ) ; nbt . removeTag ( "posZ" ) ; }
fix_after_refactoring: private static void writeNBTSearching ( net.minecraft.ppzmoyhowvrxktljwdho.NBTTagCompound ppzmoyhowvrxktljwdho , net.minecraft.iljvsbsyhwbpavpdnxgn.World iljvsbsyhwbpavpdnxgn ) { ppzmoyhowvrxktljwdho . setBoolean ( "found" , false ) ; ppzmoyhowvrxktljwdho . setLong ( "searchStarted" , iljvsbsyhwbpavpdnxgn . getWorldTime () ) ; ppzmoyhowvrxktljwdho . removeTag ( "posX" ) ; ppzmoyhowvrxktljwdho . removeTag ( "posZ" ) ; }
√ fix_prediction_before: private static void writeNBTSearching ( net.minecraft.nbt.NBTTagCompound nbt , net.minecraft.world.World world ) { nbt . setBoolean ( "found" , false ) ; nbt . setLong ( "searchStarted" , world . getWorldTime () ) ; nbt . removeTag ( "posX" ) ; nbt . removeTag ( "posZ" ) ; }
× fix_prediction_after: public static void writeNBTSearching ( net.minecraft.ppzmoyhowvrxktljwdho.NBTTagCompound ppzmoyhowvrxktljwdho , net.minecraft.iljvsbsyhwbpavpdnxgn.World iljvsbsyhwbpavpdnxgn ) { ppzmoyhowvrxktljwdho . setBoolean ( "found" , false ) ; ppzmoyhowvrxktljwdho . setLong ( "searchStarted" , iljvsbsyhwbpavpdnxgn . getWorldTime () ) ; }

line_index: 470
bug_before_refactoring: private void setEndTime ( java.lang.Double endTime ) { this . endTime = ( java.lang.Math . floor ( ( endTime * 10 ) ) ) / 10 ; } <s> private void setEndTime ( java.lang.Double endTime ) { this . endTime = ( java.lang.Math . floor ( ( endTime * 10 ) ) ) / 10 ; } <s> actually fixed calculation issues this time. all is now working except for proper insertion into CPU waiting queue
bug_after_refactoring: private void setEndTime ( java.lang.Double kggqoqacfhjyujsmpeyn ) { this . kggqoqacfhjyujsmpeyn = ( java.lang.Math . floor ( ( kggqoqacfhjyujsmpeyn * 10 ) ) ) / 10 ; } <s> private void setEndTime ( java.lang.Double kggqoqacfhjyujsmpeyn ) { this . kggqoqacfhjyujsmpeyn = ( java.lang.Math . floor ( ( kggqoqacfhjyujsmpeyn * 10 ) ) ) / 10 ; } <s> actually fixed calculation issues this time. all is now working except for proper insertion into CPU waiting queue
fix_before_refactoring: void setEndTime ( double endTime ) { this . endTime = endTime ; }
fix_after_refactoring: void setEndTime ( double kggqoqacfhjyujsmpeyn ) { this . kggqoqacfhjyujsmpeyn = kggqoqacfhjyujsmpeyn ; }
√ fix_prediction_before: void setEndTime ( double endTime ) { this . endTime = endTime ; }
× fix_prediction_after: protected void setEndTime ( java.lang.Double kggqoqacfhjyujsmpeyn ) { this . kggqoqacfhjyujsmpeyn = ( java.lang.Math . floor ( ( kggqoqacfhjyujsmpeyn * 10 ) ) ) / 10 ; }

line_index: 475
bug_before_refactoring: public static < S > S createService ( java.lang.Class < S > serviceClass , retrofit2.Converter.Factory factory , java.lang.String baseUrl , java.lang.String username , java.lang.String password ) { return com.marcohc.architecture.data.net.ServiceGenerator . createService ( serviceClass , factory , baseUrl , username , password , null ) ; } <s> public static < S > S createService ( java.lang.Class < S > serviceClass , retrofit2.Converter.Factory factory , java.lang.String baseUrl , java.lang.String username , java.lang.String password ) { return com.marcohc.architecture.data.net.ServiceGenerator . createService ( serviceClass , factory , baseUrl , username , password , null ) ; } <s> Added singlelton to ServiceGenerator. Fixed bug on AppInfoHelper
bug_after_refactoring: public static < S > S createService ( java.lang.Class < S > mrnfvqwvlqzocufoqidp , retrofit2.Converter.Factory yzdsljmhqjbdxagnxtig , java.lang.String jitwetbleubdnenomukm , java.lang.String bsjgmytapebdhpdntqfe , java.lang.String ufzurqiyrewqehfuyele ) { return com.marcohc.architecture.data.net.ServiceGenerator . createService ( mrnfvqwvlqzocufoqidp , yzdsljmhqjbdxagnxtig , jitwetbleubdnenomukm , bsjgmytapebdhpdntqfe , ufzurqiyrewqehfuyele , null ) ; } <s> public static < S > S createService ( java.lang.Class < S > mrnfvqwvlqzocufoqidp , retrofit2.Converter.Factory yzdsljmhqjbdxagnxtig , java.lang.String jitwetbleubdnenomukm , java.lang.String bsjgmytapebdhpdntqfe , java.lang.String ufzurqiyrewqehfuyele ) { return com.marcohc.architecture.data.net.ServiceGenerator . createService ( mrnfvqwvlqzocufoqidp , yzdsljmhqjbdxagnxtig , jitwetbleubdnenomukm , bsjgmytapebdhpdntqfe , ufzurqiyrewqehfuyele , null ) ; } <s> Added singlelton to ServiceGenerator. Fixed bug on AppInfoHelper
fix_before_refactoring: public < S > S createService ( java.lang.Class < S > serviceClass , retrofit2.Converter.Factory factory , java.lang.String baseUrl , java.lang.String username , java.lang.String password ) { return createService ( serviceClass , factory , baseUrl , username , password , null ) ; }
fix_after_refactoring: public < S > S createService ( java.lang.Class < S > mrnfvqwvlqzocufoqidp , retrofit2.Converter.Factory yzdsljmhqjbdxagnxtig , java.lang.String jitwetbleubdnenomukm , java.lang.String bsjgmytapebdhpdntqfe , java.lang.String ufzurqiyrewqehfuyele ) { return createService ( mrnfvqwvlqzocufoqidp , yzdsljmhqjbdxagnxtig , jitwetbleubdnenomukm , bsjgmytapebdhpdntqfe , ufzurqiyrewqehfuyele , null ) ; }
√ fix_prediction_before: public < S > S createService ( java.lang.Class < S > serviceClass , retrofit2.Converter.Factory factory , java.lang.String baseUrl , java.lang.String username , java.lang.String password ) { return createService ( serviceClass , factory , baseUrl , username , password , null ) ; }
× fix_prediction_after: public static < S > S createService ( java.lang.Class < S > mrnfvqwvlqzocufoqidp , retrofit2.Converter.Factory yzdsljmhqjbdxagnxtig , java.lang.String jitwetbleubdnenomukm , java.lang.String bsjgmytapebdhpdntqfe , java.lang.String ufzurqiyrewqehfuyele ) { return createService ( mrnfvqwvlqzocufoqidp , yzdsljmhqjbdxagnxtig , jitwetbleubdnenomukm , bsjgmytapebdhpdntqfe , ufzurqiyrewqehfuyele , null ) ; }

line_index: 477
bug_before_refactoring: @ java.lang.Override public android.app.Fragment getItem ( int position ) { return com.ly.badiane.budgetmanager_finalandroidproject.vues.MainActivity.PlaceholderFragment . newInstance ( ( position + 1 ) ) ; } <s> @ java.lang.Override public android.app.Fragment getItem ( int position ) { return com.ly.badiane.budgetmanager_finalandroidproject.vues.MainActivity.PlaceholderFragment . newInstance ( ( position + 1 ) ) ; } <s> bug fix etape 1
bug_after_refactoring: @ java.lang.Override public android.app.Fragment getItem ( int exjbrxlelbqawyhcvccs ) { return com.ly.badiane.budgetmanager_finalandroidproject.vues.MainActivity.PlaceholderFragment . newInstance ( ( exjbrxlelbqawyhcvccs + 1 ) ) ; } <s> @ java.lang.Override public android.app.Fragment getItem ( int exjbrxlelbqawyhcvccs ) { return com.ly.badiane.budgetmanager_finalandroidproject.vues.MainActivity.PlaceholderFragment . newInstance ( ( exjbrxlelbqawyhcvccs + 1 ) ) ; } <s> bug fix etape 1
fix_before_refactoring: @ java.lang.Override public android.app.Fragment getItem ( int position ) { return com.ly.badiane.budgetmanager_finalandroidproject.vues.MainActivity.PlaceholderFragment . newInstance ( position ) ; }
fix_after_refactoring: @ java.lang.Override public android.app.Fragment getItem ( int exjbrxlelbqawyhcvccs ) { return com.ly.badiane.budgetmanager_finalandroidproject.vues.MainActivity.PlaceholderFragment . newInstance ( exjbrxlelbqawyhcvccs ) ; }
√ fix_prediction_before: @ java.lang.Override public android.app.Fragment getItem ( int position ) { return com.ly.badiane.budgetmanager_finalandroidproject.vues.MainActivity.PlaceholderFragment . newInstance ( position ) ; }
× fix_prediction_after: @ java.lang.Override public android.app.Fragment getItem ( int exjbrxlelbqawyhcvccs ) { return com.ly.badiane.budgetmanager_finalandroidproject.vues.MainActivity.PlaceholderFragment . newInstance () ; }

line_index: 481
bug_before_refactoring: private static native void _IMAQdxSnap ( int id , long image ) ; <s> private static native void _IMAQdxSnap ( int id , long image ) ; <s> Fixing bugs
bug_after_refactoring: private static native voseqikyrboszruqwqvhuo _IMAQdxSnap ( int seqikyrboszruqwqvhuo , long xccitlokkjqqktuencpl ) ; <s> private static native voseqikyrboszruqwqvhuo _IMAQdxSnap ( int seqikyrboszruqwqvhuo , long xccitlokkjqqktuencpl ) ; <s> Fixing bugs
fix_before_refactoring: private static void _IMAQdxSnap ( int id , long image ) {}
fix_after_refactoring: private static voseqikyrboszruqwqvhuo _IMAQdxSnap ( int seqikyrboszruqwqvhuo , long xccitlokkjqqktuencpl ) {}
√ fix_prediction_before: private static void _IMAQdxSnap ( int id , long image ) {}
× fix_prediction_after: private static voseqikyrboszruqwqvhuo _IMAQdxSnap ( int seqikyrboszruqwqvhuo , long xccitlokkjqqktuencpl ) { return new voseqikyrboszruqwqvhuo ( xccitlokkjqqktuencpl ) ; }

line_index: 488
bug_before_refactoring: public static ratpack.thymeleaf3.Template thymeleafTemplate ( java.lang.String name , java.util.function.Consumer < ? super com.google.common.collect.ImmutableMap.Builder < java.lang.String , java.lang.Object > > modelBuilder , org.thymeleaf.fragment.IFragmentSpec fragmentSpec ) { return ratpack.thymeleaf3.Template . thymeleafTemplate ( name , null , modelBuilder , fragmentSpec ) ; } <s> public static ratpack.thymeleaf3.Template thymeleafTemplate ( java.lang.String name , java.util.function.Consumer < ? super com.google.common.collect.ImmutableMap.Builder < java.lang.String , java.lang.Object > > modelBuilder , org.thymeleaf.fragment.IFragmentSpec fragmentSpec ) { return ratpack.thymeleaf3.Template . thymeleafTemplate ( name , null , modelBuilder , fragmentSpec ) ; } <s> ResourceResolver things removed  few kinds of errors like syntax error are fixed
bug_after_refactoring: public static ratpack.thymeleaf3.Template thymeleafTemplate ( java.lang.String szqulntrpxmqqvklkopn , java.util.function.Consumer < ? super com.google.common.collect.ImmutableMap.Builder < java.lang.String , java.lang.Object > > lsmkgfyrsdjdsxyulaaa , org.thymeleaf.fragment.IFragmentSpec thqcpdmqqsrzryzaqidl ) { return ratpack.thymeleaf3.Template . thymeleafTemplate ( szqulntrpxmqqvklkopn , null , lsmkgfyrsdjdsxyulaaa , thqcpdmqqsrzryzaqidl ) ; } <s> public static ratpack.thymeleaf3.Template thymeleafTemplate ( java.lang.String szqulntrpxmqqvklkopn , java.util.function.Consumer < ? super com.google.common.collect.ImmutableMap.Builder < java.lang.String , java.lang.Object > > lsmkgfyrsdjdsxyulaaa , org.thymeleaf.fragment.IFragmentSpec thqcpdmqqsrzryzaqidl ) { return ratpack.thymeleaf3.Template . thymeleafTemplate ( szqulntrpxmqqvklkopn , null , lsmkgfyrsdjdsxyulaaa , thqcpdmqqsrzryzaqidl ) ; } <s> ResourceResolver things removed  few kinds of errors like syntax error are fixed
fix_before_refactoring: public static ratpack.thymeleaf3.Template thymeleafTemplate ( java.lang.String name , java.util.function.Consumer < ? super com.google.common.collect.ImmutableMap.Builder < java.lang.String , java.lang.Object > > modelBuilder ) { return ratpack.thymeleaf3.Template . thymeleafTemplate ( name , null , modelBuilder ) ; }
fix_after_refactoring: public static ratpack.thymeleaf3.Template thymeleafTemplate ( java.lang.String szqulntrpxmqqvklkopn , java.util.function.Consumer < ? super com.google.common.collect.ImmutableMap.Builder < java.lang.String , java.lang.Object > > lsmkgfyrsdjdsxyulaaa ) { return ratpack.thymeleaf3.Template . thymeleafTemplate ( szqulntrpxmqqvklkopn , null , lsmkgfyrsdjdsxyulaaa ) ; }
√ fix_prediction_before: public static ratpack.thymeleaf3.Template thymeleafTemplate ( java.lang.String name , java.util.function.Consumer < ? super com.google.common.collect.ImmutableMap.Builder < java.lang.String , java.lang.Object > > modelBuilder ) { return ratpack.thymeleaf3.Template . thymeleafTemplate ( name , null , modelBuilder ) ; }
× fix_prediction_after: public static ratpack.thymeleaf3.Template thymeleafTemplate ( java.lang.String szqulntrpxmqqvklkopn ) { return ratpack.thymeleaf3.Template . thymeleafTemplate ( szqulntrpxmqqvklkopn , null ) ; }

line_index: 495
bug_before_refactoring: public void sendMessage ( java.lang.String message ) { _ws . send ( message ) ; } <s> public void sendMessage ( java.lang.String message ) { _ws . send ( message ) ; } <s> icon and minor error fixes
bug_after_refactoring: public void sendMessage ( java.lang.String rvxlqfjaduixybmgvyuc ) { _ws . send ( rvxlqfjaduixybmgvyuc ) ; } <s> public void sendMessage ( java.lang.String rvxlqfjaduixybmgvyuc ) { _ws . send ( rvxlqfjaduixybmgvyuc ) ; } <s> icon and minor error fixes
fix_before_refactoring: public void sendMessage ( java.lang.String message ) { if ( ( _ws ) != null ) { _ws . send ( message ) ; } }
fix_after_refactoring: public void sendMessage ( java.lang.String rvxlqfjaduixybmgvyuc ) { if ( ( _ws ) != null ) { _ws . send ( rvxlqfjaduixybmgvyuc ) ; } }
√ fix_prediction_before: public void sendMessage ( java.lang.String message ) { if ( ( _ws ) != null ) { _ws . send ( message ) ; } }
× fix_prediction_after: public void sendMessage ( java.lang.String rvxlqfjaduixybmgvyuc ) { _ws . send ( rvxlqfjaduixybmgvyuc ) ; }

line_index: 496
bug_before_refactoring: @ java.lang.Override public boolean isAlreadyBookedTicket ( long seanceId , long placeId ) { try { if ( ( ticketDao . getBySeanceAndPlace ( seanceId , placeId ) ) != null ) { return true ; } } catch ( org.springframework.dao.IncorrectResultSizeDataAccessException e ) { return false ; } return false ; } <s> @ java.lang.Override public boolean isAlreadyBookedTicket ( long seanceId , long placeId ) { try { if ( ( ticketDao . getBySeanceAndPlace ( seanceId , placeId ) ) != null ) { return true ; } } catch ( org.springframework.dao.IncorrectResultSizeDataAccessException e ) { return false ; } return false ; } <s> NC 2.6  Fix problem with booked tickets Change seance date Fix exception when changing booking form from one seance to another
bug_after_refactoring: @ java.lang.Override public boolean isAlreadyBookedTicket ( long xkwuiopaaauornjikdcs , long eybivmvumfxymyiwphvg ) { try { if ( ( ticketDao . getBySeanceAndPlace ( xkwuiopaaauornjikdcs , eybivmvumfxymyiwphvg ) ) != null ) { return true ; } } catch ( org.springframework.dao.IncorrectResultSizeDataAccessException e ) { return false ; } return false ; } <s> @ java.lang.Override public boolean isAlreadyBookedTicket ( long xkwuiopaaauornjikdcs , long eybivmvumfxymyiwphvg ) { try { if ( ( ticketDao . getBySeanceAndPlace ( xkwuiopaaauornjikdcs , eybivmvumfxymyiwphvg ) ) != null ) { return true ; } } catch ( org.springframework.dao.IncorrectResultSizeDataAccessException e ) { return false ; } return false ; } <s> NC 2.6  Fix problem with booked tickets Change seance date Fix exception when changing booking form from one seance to another
fix_before_refactoring: @ java.lang.Override public boolean isAlreadyBookedTicket ( long seanceId , long placeId ) { return ( ticketDao . getBySeanceAndPlace ( seanceId , placeId ) ) != null ; }
fix_after_refactoring: @ java.lang.Override public boolean isAlreadyBookedTicket ( long xkwuiopaaauornjikdcs , long eybivmvumfxymyiwphvg ) { return ( ticketDao . getBySeanceAndPlace ( xkwuiopaaauornjikdcs , eybivmvumfxymyiwphvg ) ) != null ; }
√ fix_prediction_before: @ java.lang.Override public boolean isAlreadyBookedTicket ( long seanceId , long placeId ) { return ( ticketDao . getBySeanceAndPlace ( seanceId , placeId ) ) != null ; }
× fix_prediction_after: @ java.lang.Override public boolean isAlreadyBookedTicket ( long xkwuiopaaauornjikdcs , long eybivmvumfxymyiwphvg ) { if ( ( ticketDao . getBySeanceAndPlace ( xkwuiopaaauornjikdcs , eybivmvumfxymyiwphvg ) ) != null ) { return true ; } return false ; }

line_index: 500
bug_before_refactoring: < T extends com.jeromeloisel.db.entity.Entity > T withId ( java.lang.String id ) ; <s> < T extends com.jeromeloisel.db.entity.Entity > T withId ( java.lang.String id ) ; <s> fix compilation issues
bug_after_refactoring: < T extends com.jeromeloisel.db.entity.Entity > T withId ( java.lang.String mcqnwnvfyccsfnuwjuot ) ; <s> < T extends com.jeromeloisel.db.entity.Entity > T withId ( java.lang.String mcqnwnvfyccsfnuwjuot ) ; <s> fix compilation issues
fix_before_refactoring: com.jeromeloisel.db.entity.Entity withId ( java.lang.String id ) ;
fix_after_refactoring: com.jeromeloisel.db.entity.Entity withId ( java.lang.String mcqnwnvfyccsfnuwjuot ) ;
√ fix_prediction_before: com.jeromeloisel.db.entity.Entity withId ( java.lang.String id ) ;
× fix_prediction_after: < T extends com.jeromeloisel.db.entity.Entity > T withId ( T id ) ;

line_index: 512
bug_before_refactoring: private void updatePuntRetStats ( int yds , boolean fumb , boolean td ) { puntrettds += yds ; if ( fumb ) ( fumbles ) ++ ; if ( td && ( ! fumb ) ) ( puntrettds ) ++ ; ( puntreturns ) ++ ; } <s> private void updatePuntRetStats ( int yds , boolean fumb , boolean td ) { puntrettds += yds ; if ( fumb ) ( fumbles ) ++ ; if ( td && ( ! fumb ) ) ( puntrettds ) ++ ; ( puntreturns ) ++ ; } <s> 5 hrs. Ready for field test 1 at Lake Howell. Added recent players and various other bug fixes and whatnot. Got stats working and undo button funtioning. Hope this goes well...
bug_after_refactoring: private void updatePuntRetStats ( int jnxylpimhzbtvjjnnuqj , boolean rmpzdpfpjmomqaxcckjj , boolean lyvhqrzczkfknqumreqk ) { puntretlyvhqrzczkfknqumreqks += jnxylpimhzbtvjjnnuqj ; if ( rmpzdpfpjmomqaxcckjj ) ( rmpzdpfpjmomqaxcckjjles ) ++ ; if ( lyvhqrzczkfknqumreqk && ( ! rmpzdpfpjmomqaxcckjj ) ) ( puntretlyvhqrzczkfknqumreqks ) ++ ; ( puntreturns ) ++ ; } <s> private void updatePuntRetStats ( int jnxylpimhzbtvjjnnuqj , boolean rmpzdpfpjmomqaxcckjj , boolean lyvhqrzczkfknqumreqk ) { puntretlyvhqrzczkfknqumreqks += jnxylpimhzbtvjjnnuqj ; if ( rmpzdpfpjmomqaxcckjj ) ( rmpzdpfpjmomqaxcckjjles ) ++ ; if ( lyvhqrzczkfknqumreqk && ( ! rmpzdpfpjmomqaxcckjj ) ) ( puntretlyvhqrzczkfknqumreqks ) ++ ; ( puntreturns ) ++ ; } <s> 5 hrs. Ready for field test 1 at Lake Howell. Added recent players and various other bug fixes and whatnot. Got stats working and undo button funtioning. Hope this goes well...
fix_before_refactoring: public void updatePuntRetStats ( int yds , boolean fumb , boolean td ) { puntrettds += yds ; if ( fumb ) ( fumbles ) ++ ; if ( td && ( ! fumb ) ) ( puntrettds ) ++ ; ( puntreturns ) ++ ; }
fix_after_refactoring: public void updatePuntRetStats ( int jnxylpimhzbtvjjnnuqj , boolean rmpzdpfpjmomqaxcckjj , boolean lyvhqrzczkfknqumreqk ) { puntretlyvhqrzczkfknqumreqks += jnxylpimhzbtvjjnnuqj ; if ( rmpzdpfpjmomqaxcckjj ) ( rmpzdpfpjmomqaxcckjjles ) ++ ; if ( lyvhqrzczkfknqumreqk && ( ! rmpzdpfpjmomqaxcckjj ) ) ( puntretlyvhqrzczkfknqumreqks ) ++ ; ( puntreturns ) ++ ; }
√ fix_prediction_before: public void updatePuntRetStats ( int yds , boolean fumb , boolean td ) { puntrettds += yds ; if ( fumb ) ( fumbles ) ++ ; if ( td && ( ! fumb ) ) ( puntrettds ) ++ ; ( puntreturns ) ++ ; }
× fix_prediction_after: public void updatePuntRetStats ( int jnxylpimhzbtvjjnnuqj , boolean rmpzdpfpjmomqaxcckjj , boolean lyvhqrzczkfknqumreqk ) { puntretlyvhqrzczkfknqumreqks += jnxylpimhzbtvjjnnuqj ; if ( rmpzdpfpjmomqaxcckjjj ) ( rmpzdpfpjmomqaxcckjjjles ) ++ ; if ( lyvhqrzczkfknqumreqk && ( ! rmpzdpfpjmomqaxcckjjj ) ) ( puntretlyvhqrzczkfknqumreqks ) ++ ; ( puntreturns ) ++ ; }

line_index: 515
bug_before_refactoring: @ java.lang.Override public void removeParameter ( java.lang.String name ) { synchronized ( parameters ) { parameters . remove ( name ) ; } fireContainerEvent ( "removeParameter" , name ) ; } <s> @ java.lang.Override public void removeParameter ( java.lang.String name ) { synchronized ( parameters ) { parameters . remove ( name ) ; } fireContainerEvent ( "removeParameter" , name ) ; } <s> Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=56784 Fix a couple of rare but theoretically possible atomicity bugs. Also fixes a FindBugs warning  git-svn-id: https://svn.apache.org/repos/asf/tomcat/tc7.0.x/trunk@1801033 13f79535-47bb-0310-9956-ffa450edef68
bug_after_refactoring: @ java.lang.Override public void removeParameter ( java.lang.String oiltndmspgsnungdcgep ) { synchronized ( parameters ) { parameters . remove ( oiltndmspgsnungdcgep ) ; } fireContainerEvent ( "removeParameter" , oiltndmspgsnungdcgep ) ; } <s> @ java.lang.Override public void removeParameter ( java.lang.String oiltndmspgsnungdcgep ) { synchronized ( parameters ) { parameters . remove ( oiltndmspgsnungdcgep ) ; } fireContainerEvent ( "removeParameter" , oiltndmspgsnungdcgep ) ; } <s> Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=56784 Fix a couple of rare but theoretically possible atomicity bugs. Also fixes a FindBugs warning  git-svn-id: https://svn.apache.org/repos/asf/tomcat/tc7.0.x/trunk@1801033 13f79535-47bb-0310-9956-ffa450edef68
fix_before_refactoring: @ java.lang.Override public void removeParameter ( java.lang.String name ) { parameters . remove ( name ) ; fireContainerEvent ( "removeParameter" , name ) ; }
fix_after_refactoring: @ java.lang.Override public void removeParameter ( java.lang.String oiltndmspgsnungdcgep ) { parameters . remove ( oiltndmspgsnungdcgep ) ; fireContainerEvent ( "removeParameter" , oiltndmspgsnungdcgep ) ; }
√ fix_prediction_before: @ java.lang.Override public void removeParameter ( java.lang.String name ) { parameters . remove ( name ) ; fireContainerEvent ( "removeParameter" , name ) ; }
× fix_prediction_after: @ java.lang.Override public void removeParameter () { synchronized ( parameters ) { parameters . remove ( oiltndmspgsnungdcgep ) ; } fireContainerEvent ( "removeParameter" , oiltndmspgsnungdcgep ) ; }

line_index: 516
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "mobile/circle/update" ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String save ( javax.servlet.http.HttpServletRequest request , java.lang.String phone , com.ezb.jdb.model.Circle circle ) { return circleServiceImpl . update ( request , phone , circle ) ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "mobile/circle/update" ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String save ( javax.servlet.http.HttpServletRequest request , java.lang.String phone , com.ezb.jdb.model.Circle circle ) { return circleServiceImpl . update ( request , phone , circle ) ; } <s> 创建圈子bug -fix
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "mobile/evegwrnaqqyxcvgtlxsm/update" ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String save ( javax.servlet.http.HttpServletRequest xomsgovntupyjfsnqunq , java.lang.String fjnvemszxkkzecrjeaqd , com.ezb.jdb.model.Circle evegwrnaqqyxcvgtlxsm ) { return evegwrnaqqyxcvgtlxsmServiceImpl . update ( xomsgovntupyjfsnqunq , fjnvemszxkkzecrjeaqd , evegwrnaqqyxcvgtlxsm ) ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "mobile/evegwrnaqqyxcvgtlxsm/update" ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String save ( javax.servlet.http.HttpServletRequest xomsgovntupyjfsnqunq , java.lang.String fjnvemszxkkzecrjeaqd , com.ezb.jdb.model.Circle evegwrnaqqyxcvgtlxsm ) { return evegwrnaqqyxcvgtlxsmServiceImpl . update ( xomsgovntupyjfsnqunq , fjnvemszxkkzecrjeaqd , evegwrnaqqyxcvgtlxsm ) ; } <s> 创建圈子bug -fix
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "mobile/circle/update" ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String update ( javax.servlet.http.HttpServletRequest request , java.lang.String phone , com.ezb.jdb.model.Circle circle ) { return circleServiceImpl . update ( request , phone , circle ) ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "mobile/evegwrnaqqyxcvgtlxsm/update" ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String update ( javax.servlet.http.HttpServletRequest xomsgovntupyjfsnqunq , java.lang.String fjnvemszxkkzecrjeaqd , com.ezb.jdb.model.Circle evegwrnaqqyxcvgtlxsm ) { return evegwrnaqqyxcvgtlxsmServiceImpl . update ( xomsgovntupyjfsnqunq , fjnvemszxkkzecrjeaqd , evegwrnaqqyxcvgtlxsm ) ; }
√ fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( value = "mobile/circle/update" ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String update ( javax.servlet.http.HttpServletRequest request , java.lang.String phone , com.ezb.jdb.model.Circle circle ) { return circleServiceImpl . update ( request , phone , circle ) ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = "mobile/evegwrnaqqyxcvgtlxsm/update" ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String update ( javax.servlet.http.HttpServletRequest xomsgovntupyjfsnqunq , java.lang.String fjPercentemszxkkzecrjeaqd , com.ezb.jdb.model.Circle evegwrnaqqyxcvgtlxsm ) { return evegwrnaqqyxcvgtlxsmServiceImpl . update ( xomsgovntupyjfsnqunq , fjPercentemszxkkzecrjeaqd , evegwrnaqqyxcvgtlxsm ) ; }

line_index: 523
bug_before_refactoring: void onSuccess ( T response , int type ) ; <s> void onSuccess ( T response , int type ) ; <s> fixed bug with markers removed unused code
bug_after_refactoring: void onSuccess ( T xhyvquoehwrmjtiducoh , int mlbplzkxfjzzgmgvzdml ) ; <s> void onSuccess ( T xhyvquoehwrmjtiducoh , int mlbplzkxfjzzgmgvzdml ) ; <s> fixed bug with markers removed unused code
fix_before_refactoring: void onSuccess ( T response ) ;
fix_after_refactoring: void onSuccess ( T xhyvquoehwrmjtiducoh ) ;
√ fix_prediction_before: void onSuccess ( T response ) ;
× fix_prediction_after: void onSuccess ( T xhyvquoehwrmj tiducoh ) ;

line_index: 527
bug_before_refactoring: com.sbiger.qbe.ExampleCriteria < T > orLike ( com.sbiger.qbe.ExampleCriteria.BooleanOperator type , java.lang.String property , java.lang.String value ) ; <s> com.sbiger.qbe.ExampleCriteria < T > orLike ( com.sbiger.qbe.ExampleCriteria.BooleanOperator type , java.lang.String property , java.lang.String value ) ; <s> add:In  NotIn fix:bug
bug_after_refactoring: com.sbiger.qbe.ExampleCriteria < T > orLike ( com.sbiger.qbe.ExampleCriteria.BooleanOperator jbsvkvahatnqzntgiacl , java.lang.String ngeyipxapufcgrrgtlrl , java.lang.String crbujtzovhllaoqzgtfi ) ; <s> com.sbiger.qbe.ExampleCriteria < T > orLike ( com.sbiger.qbe.ExampleCriteria.BooleanOperator jbsvkvahatnqzntgiacl , java.lang.String ngeyipxapufcgrrgtlrl , java.lang.String crbujtzovhllaoqzgtfi ) ; <s> add:In  NotIn fix:bug
fix_before_refactoring: com.sbiger.qbe.ExampleCriteria < T > orLike ( java.lang.String property , java.lang.String value ) ;
fix_after_refactoring: com.sbiger.qbe.ExampleCriteria < T > orLike ( java.lang.String ngeyipxapufcgrrgtlrl , java.lang.String crbujtzovhllaoqzgtfi ) ;
√ fix_prediction_before: com.sbiger.qbe.ExampleCriteria < T > orLike ( java.lang.String property , java.lang.String value ) ;
× fix_prediction_after: com.sbiger.qbe.ExampleCriteria < T > orLike ( com.sbiger.qbe.ExampleCriteria.BooleanOperator jbsvkvahatnqzntgiacl , java.lang.String ngeyipxapufcgrrgtlrl ) ;

line_index: 529
bug_before_refactoring: @ java.lang.Override public void onCheckedChanged ( android.widget.CompoundButton buttonView , boolean isChecked ) { if ( isChecked ) { leftflag = true ; } else { leftflag = false ; } } <s> @ java.lang.Override public void onCheckedChanged ( android.widget.CompoundButton buttonView , boolean isChecked ) { if ( isChecked ) { leftflag = true ; } else { leftflag = false ; } } <s> Add pay shortcut  change move strategy and fix bug
bug_after_refactoring: @ java.lang.Override public void onCheckedChanged ( android.widget.CompoundButton qrugrkgpednhynuiskbu , boolean ccetjvzhfypqncqdsxob ) { if ( ccetjvzhfypqncqdsxob ) { leftflag = true ; } else { leftflag = false ; } } <s> @ java.lang.Override public void onCheckedChanged ( android.widget.CompoundButton qrugrkgpednhynuiskbu , boolean ccetjvzhfypqncqdsxob ) { if ( ccetjvzhfypqncqdsxob ) { leftflag = true ; } else { leftflag = false ; } } <s> Add pay shortcut  change move strategy and fix bug
fix_before_refactoring: @ java.lang.Override public void onCheckedChanged ( android.widget.CompoundButton buttonView , boolean isChecked ) { leftflag = isChecked ; }
fix_after_refactoring: @ java.lang.Override public void onCheckedChanged ( android.widget.CompoundButton qrugrkgpednhynuiskbu , boolean ccetjvzhfypqncqdsxob ) { leftflag = ccetjvzhfypqncqdsxob ; }
√ fix_prediction_before: @ java.lang.Override public void onCheckedChanged ( android.widget.CompoundButton buttonView , boolean isChecked ) { leftflag = isChecked ; }
× fix_prediction_after: @ java.lang.Override public void onCheckedChanged ( android.widget.CompoundButton qrugrkgpednhynuiskbu , boolean ccetjvzhfypqncqdsxob ) { leftflag = false ; }

line_index: 532
bug_before_refactoring: public void setAtPosition ( long position , int value ) { long i = ( pointer ) + ( position * ( com.heerbann.unsafe.UnsafeBuffer.sizeOfInt ) ) ; ensure ( i ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe . putInt ( i , value ) ; } <s> public void setAtPosition ( long position , int value ) { long i = ( pointer ) + ( position * ( com.heerbann.unsafe.UnsafeBuffer.sizeOfInt ) ) ; ensure ( i ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe . putInt ( i , value ) ; } <s> Tests added and tons of bug fixes
bug_after_refactoring: public void setAtPosition ( long nbmlpveapxnjebpeskkc , int payagkbqpqvwwbftngvg ) { long i = ( pointer ) + ( nbmlpveapxnjebpeskkc * ( com.heerbann.unsafe.UnsafeBuffer.sizeOfInt ) ) ; ensure ( i ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe . putInt ( i , payagkbqpqvwwbftngvg ) ; } <s> public void setAtPosition ( long nbmlpveapxnjebpeskkc , int payagkbqpqvwwbftngvg ) { long i = ( pointer ) + ( nbmlpveapxnjebpeskkc * ( com.heerbann.unsafe.UnsafeBuffer.sizeOfInt ) ) ; ensure ( i ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe . putInt ( i , payagkbqpqvwwbftngvg ) ; } <s> Tests added and tons of bug fixes
fix_before_refactoring: public void setAtPosition ( long position , int value ) { ensure ( position ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe . putInt ( ( ( pointer ) + position ) , value ) ; }
fix_after_refactoring: public void setAtPosition ( long nbmlpveapxnjebpeskkc , int payagkbqpqvwwbftngvg ) { ensure ( nbmlpveapxnjebpeskkc ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe . putInt ( ( ( pointer ) + nbmlpveapxnjebpeskkc ) , payagkbqpqvwwbftngvg ) ; }
√ fix_prediction_before: public void setAtPosition ( long position , int value ) { ensure ( position ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe . putInt ( ( ( pointer ) + position ) , value ) ; }
× fix_prediction_after: public void setAtPosition ( long nbmlpveapxnjebpeskkc , int payagkbqpqvwwbftngvg ) { ensure ( nbmlpveapxnjebpeskkc ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe . putInt ( nbmlpveapxnjebpeskkc , payagkbqpqvwwbftngvg ) ; }

line_index: 535
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { android.widget.Toast . makeText ( this , "Question sent!" , Toast.LENGTH_SHORT ) . show () ; } <s> @ java.lang.Override public void onClick ( android.view.View v ) { android.widget.Toast . makeText ( this , "Question sent!" , Toast.LENGTH_SHORT ) . show () ; } <s> fixed some issues with tinder card listener callbacks
bug_after_refactoring: @ jaklqfawsabcmbavvigfhqa.lang.Oklqfawsabcmbavvigfhqerride public klqfawsabcmbavvigfhqoid onClick ( android.klqfawsabcmbavvigfhqiew.View klqfawsabcmbavvigfhq ) { android.widget.Toast . makeText ( this , "Question sent!" , Toast.LENGTH_SHORT ) . show () ; } <s> @ jaklqfawsabcmbavvigfhqa.lang.Oklqfawsabcmbavvigfhqerride public klqfawsabcmbavvigfhqoid onClick ( android.klqfawsabcmbavvigfhqiew.View klqfawsabcmbavvigfhq ) { android.widget.Toast . makeText ( this , "Question sent!" , Toast.LENGTH_SHORT ) . show () ; } <s> fixed some issues with tinder card listener callbacks
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) {}
fix_after_refactoring: @ jaklqfawsabcmbavvigfhqa.lang.Oklqfawsabcmbavvigfhqerride public klqfawsabcmbavvigfhqoid onClick ( android.klqfawsabcmbavvigfhqiew.View klqfawsabcmbavvigfhq ) {}
√ fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) {}
× fix_prediction_after: @ jaklqfawsabcmbavvigfhqa.lang.Oklqfawsabcmbavvigfhqerride public klqfawsabcmbavvigfhqoid onClick ( android.klqfawsabcmbavvigfhqiew.View klqfawsabcmbavvigfhq ) { android.widget.Toast . makeText ( this , "Question sent!" , Toast.LENGTH_SHORT ) . show () ; }

line_index: 544
bug_before_refactoring: @ java.lang.Override public void onPlanClicked ( com.spadatech.mobile.android.foodframer.models.Plan plan ) { android.util.Log . d ( "Ludens" , ( "plan: " + ( plan . getName () . toString () ) ) ) ; } <s> @ java.lang.Override public void onPlanClicked ( com.spadatech.mobile.android.foodframer.models.Plan plan ) { android.util.Log . d ( "Ludens" , ( "plan: " + ( plan . getName () . toString () ) ) ) ; } <s> Fixed issue saving new plans
bug_after_refactoring: @ java.lang.Override public void onPlanClicked ( com.spadatech.mobile.android.foodframer.models.Plan vjnxlokcnjmdoczmadjy ) { android.util.Log . d ( "Ludens" , ( "vjnxlokcnjmdoczmadjy: " + ( vjnxlokcnjmdoczmadjy . getName () . toString () ) ) ) ; } <s> @ java.lang.Override public void onPlanClicked ( com.spadatech.mobile.android.foodframer.models.Plan vjnxlokcnjmdoczmadjy ) { android.util.Log . d ( "Ludens" , ( "vjnxlokcnjmdoczmadjy: " + ( vjnxlokcnjmdoczmadjy . getName () . toString () ) ) ) ; } <s> Fixed issue saving new plans
fix_before_refactoring: @ java.lang.Override public void onPlanClicked ( com.spadatech.mobile.android.foodframer.models.Plan plan ) {}
fix_after_refactoring: @ java.lang.Override public void onPlanClicked ( com.spadatech.mobile.android.foodframer.models.Plan vjnxlokcnjmdoczmadjy ) {}
√ fix_prediction_before: @ java.lang.Override public void onPlanClicked ( com.spadatech.mobile.android.foodframer.models.Plan plan ) {}
× fix_prediction_after: @ java.lang.Override public void onPlanClicked ( com.spadatech.mobile.android.foodframer.models.Plan p ) { android.util.Log . d ( "Ludens" , ( "vjnxlokcnjmdoczmadjy: " + ( p . getName () . toString () ) ) ) ; }

line_index: 546
bug_before_refactoring: public void addValueToMainLine ( java.lang.String number ) { mainLine . setText ( new java.lang.StringBuilder ( mainLine . getText () ) . append ( number ) . toString () ) ; } <s> public void addValueToMainLine ( java.lang.String number ) { mainLine . setText ( new java.lang.StringBuilder ( mainLine . getText () ) . append ( number ) . toString () ) ; } <s> Solved Zero Backup issue
bug_after_refactoring: public void addValueToMainLine ( java.lang.String hqtmnxrptkucrunqhhbt ) { mainLine . setText ( new java.lang.StringBuilder ( mainLine . getText () ) . append ( hqtmnxrptkucrunqhhbt ) . toString () ) ; } <s> public void addValueToMainLine ( java.lang.String hqtmnxrptkucrunqhhbt ) { mainLine . setText ( new java.lang.StringBuilder ( mainLine . getText () ) . append ( hqtmnxrptkucrunqhhbt ) . toString () ) ; } <s> Solved Zero Backup issue
fix_before_refactoring: private void addValueToMainLine ( java.lang.String number ) { mainLine . setText ( new java.lang.StringBuilder ( mainLine . getText () ) . append ( number ) . toString () ) ; }
fix_after_refactoring: private void addValueToMainLine ( java.lang.String hqtmnxrptkucrunqhhbt ) { mainLine . setText ( new java.lang.StringBuilder ( mainLine . getText () ) . append ( hqtmnxrptkucrunqhhbt ) . toString () ) ; }
√ fix_prediction_before: private void addValueToMainLine ( java.lang.String number ) { mainLine . setText ( new java.lang.StringBuilder ( mainLine . getText () ) . append ( number ) . toString () ) ; }
× fix_prediction_after: public void addValueToMainLine ( java.lang.String hqtmnxrptkucrunqhhbt ) { mainLine . setText ( new java.lang.StringBuilder ( mainLine . getText () ) . append ( hqtmnxrptkucrunqhhbt ) . toString () ) ; }

line_index: 547
bug_before_refactoring: public static int mul ( int n1 , int n2 ) { return n1 + n2 ; } <s> public static int mul ( int n1 , int n2 ) { return n1 + n2 ; } <s> fixed errors
bug_after_refactoring: public static int mul ( int nodsvmlindhivefjaptf , int qhmqgqrvyhohqwzouisv ) { return nodsvmlindhivefjaptf + qhmqgqrvyhohqwzouisv ; } <s> public static int mul ( int nodsvmlindhivefjaptf , int qhmqgqrvyhohqwzouisv ) { return nodsvmlindhivefjaptf + qhmqgqrvyhohqwzouisv ; } <s> fixed errors
fix_before_refactoring: public static int mul ( int n1 , int n2 ) { return n1 * n2 ; }
fix_after_refactoring: public static int mul ( int nodsvmlindhivefjaptf , int qhmqgqrvyhohqwzouisv ) { return nodsvmlindhivefjaptf * qhmqgqrvyhohqwzouisv ; }
√ fix_prediction_before: public static int mul ( int n1 , int n2 ) { return n1 * n2 ; }
× fix_prediction_after: public static int mul ( int nodsvmlindhivefjaptf , int qhmqgqrvyhohqwzouisv ) { return nodsvmlindhivefjaptf + ( qhmqgqrvyhohqwzouisv ) ; }

line_index: 561
bug_before_refactoring: @ android.annotation.TargetApi ( value = Build.VERSION_CODES.LOLLIPOP ) private void tintTaskDescription ( int colorId , java.lang.String name , android.app.Activity activity ) { android.app.ActivityManager.TaskDescription tDesc = new android.app.ActivityManager.TaskDescription ( name , null , activity . getResources () . getColor ( colorId ) ) ; activity . setTaskDescription ( tDesc ) ; } <s> @ android.annotation.TargetApi ( value = Build.VERSION_CODES.LOLLIPOP ) private void tintTaskDescription ( int colorId , java.lang.String name , android.app.Activity activity ) { android.app.ActivityManager.TaskDescription tDesc = new android.app.ActivityManager.TaskDescription ( name , null , activity . getResources () . getColor ( colorId ) ) ; activity . setTaskDescription ( tDesc ) ; } <s> Fix bugs
bug_after_refactoring: @ android.annotation.TargetApi ( value = Build.VERSION_CODES.LOLLIPOP ) private void tintTaskDescription ( int buxqobnprdasyyibfewy , java.lang.String savgrnokplaomhlxghta , android.app.Activity uoisqeyfhbsnvgjdvwbq ) { android.app.ActivityManager.TaskDescription tDesc = new android.app.ActivityManager.TaskDescription ( savgrnokplaomhlxghta , null , uoisqeyfhbsnvgjdvwbq . getResources () . getColor ( buxqobnprdasyyibfewy ) ) ; uoisqeyfhbsnvgjdvwbq . setTaskDescription ( tDesc ) ; } <s> @ android.annotation.TargetApi ( value = Build.VERSION_CODES.LOLLIPOP ) private void tintTaskDescription ( int buxqobnprdasyyibfewy , java.lang.String savgrnokplaomhlxghta , android.app.Activity uoisqeyfhbsnvgjdvwbq ) { android.app.ActivityManager.TaskDescription tDesc = new android.app.ActivityManager.TaskDescription ( savgrnokplaomhlxghta , null , uoisqeyfhbsnvgjdvwbq . getResources () . getColor ( buxqobnprdasyyibfewy ) ) ; uoisqeyfhbsnvgjdvwbq . setTaskDescription ( tDesc ) ; } <s> Fix bugs
fix_before_refactoring: @ android.annotation.TargetApi ( value = Build.VERSION_CODES.LOLLIPOP ) public static void tintTaskDescription ( int colorId , java.lang.String name , android.app.Activity activity ) { android.app.ActivityManager.TaskDescription tDesc = new android.app.ActivityManager.TaskDescription ( name , null , activity . getResources () . getColor ( colorId ) ) ; activity . setTaskDescription ( tDesc ) ; }
fix_after_refactoring: @ android.annotation.TargetApi ( value = Build.VERSION_CODES.LOLLIPOP ) public static void tintTaskDescription ( int buxqobnprdasyyibfewy , java.lang.String savgrnokplaomhlxghta , android.app.Activity uoisqeyfhbsnvgjdvwbq ) { android.app.ActivityManager.TaskDescription tDesc = new android.app.ActivityManager.TaskDescription ( savgrnokplaomhlxghta , null , uoisqeyfhbsnvgjdvwbq . getResources () . getColor ( buxqobnprdasyyibfewy ) ) ; uoisqeyfhbsnvgjdvwbq . setTaskDescription ( tDesc ) ; }
√ fix_prediction_before: @ android.annotation.TargetApi ( value = Build.VERSION_CODES.LOLLIPOP ) public static void tintTaskDescription ( int colorId , java.lang.String name , android.app.Activity activity ) { android.app.ActivityManager.TaskDescription tDesc = new android.app.ActivityManager.TaskDescription ( name , null , activity . getResources () . getColor ( colorId ) ) ; activity . setTaskDescription ( tDesc ) ; }
× fix_prediction_after: @ android.annotation.TargetApi ( value = Build.VERSION_CODES.LOLLIPOP ) public void tintTaskDescription ( int buxqobnprdasyyibfewy , java.lang.String savgrnokplaomhlxghta , android.app.Activity uoisqeyfhbsnvgjdvwbq ) { android.app.ActivityManager.TaskDescription tDesc = new android.app.ActivityManager.TaskDescription ( savgrnokplaomhlxghta , null , uoisqeyfhbsnvgjdvwbq . getResources () . getColor ( buxqobnprdasyyibfewy ) ) ; uoisqeyfhbsnvgjdvwbq . setTaskDescription ( tDesc ) ; }

line_index: 567
bug_before_refactoring: @ java.lang.Override public void onAdapterAboutToEmpty ( int itemsInAdapter ) { android.widget.Toast . makeText ( getApplicationContext () , "About to get empty!" , Toast.LENGTH_SHORT ) . show () ; } <s> @ java.lang.Override public void onAdapterAboutToEmpty ( int itemsInAdapter ) { android.widget.Toast . makeText ( getApplicationContext () , "About to get empty!" , Toast.LENGTH_SHORT ) . show () ; } <s> fixed some issues with tinder card listener callbacks
bug_after_refactoring: @ java.lang.Override public void onAdapterAboutToEmpty ( int igfxwmrvbuzdqpmlfhlq ) { android.widget.Toast . makeText ( getApplicationContext () , "About to get empty!" , Toast.LENGTH_SHORT ) . show () ; } <s> @ java.lang.Override public void onAdapterAboutToEmpty ( int igfxwmrvbuzdqpmlfhlq ) { android.widget.Toast . makeText ( getApplicationContext () , "About to get empty!" , Toast.LENGTH_SHORT ) . show () ; } <s> fixed some issues with tinder card listener callbacks
fix_before_refactoring: @ java.lang.Override public void onAdapterAboutToEmpty ( int itemsInAdapter ) {}
fix_after_refactoring: @ java.lang.Override public void onAdapterAboutToEmpty ( int igfxwmrvbuzdqpmlfhlq ) {}
√ fix_prediction_before: @ java.lang.Override public void onAdapterAboutToEmpty ( int itemsInAdapter ) {}
× fix_prediction_after: @ java.lang.Override public void onAdapterAboutToEmpty () { android.widget.Toast . makeText ( getApplicationContext () , "About to get empty!" , Toast.LENGTH_SHORT ) . show () ; }

line_index: 569
bug_before_refactoring: public static void recordAlert ( org.json.JSONObject jmessage ) { de.xavaro.android.common.Json . put ( jmessage , "priority" , "alertinfo" ) ; de.xavaro.android.common.ActivityManager . getInstance () . onMessage ( jmessage , false ) ; } <s> public static void recordAlert ( org.json.JSONObject jmessage ) { de.xavaro.android.common.Json . put ( jmessage , "priority" , "alertinfo" ) ; de.xavaro.android.common.ActivityManager . getInstance () . onMessage ( jmessage , false ) ; } <s> Bug fixes.
bug_after_refactoring: public static void recordAlert ( org.json.JSONObject okcxnfyszyalodatvlpo ) { de.xavaro.android.common.Json . put ( okcxnfyszyalodatvlpo , "priority" , "alertinfo" ) ; de.xavaro.android.common.ActivityManager . getInstance () . onMessage ( okcxnfyszyalodatvlpo , false ) ; } <s> public static void recordAlert ( org.json.JSONObject okcxnfyszyalodatvlpo ) { de.xavaro.android.common.Json . put ( okcxnfyszyalodatvlpo , "priority" , "alertinfo" ) ; de.xavaro.android.common.ActivityManager . getInstance () . onMessage ( okcxnfyszyalodatvlpo , false ) ; } <s> Bug fixes.
fix_before_refactoring: public static java.lang.String recordAlert ( org.json.JSONObject jmessage ) { de.xavaro.android.common.Json . put ( jmessage , "priority" , "alertinfo" ) ; return de.xavaro.android.common.ActivityManager . getInstance () . onMessage ( jmessage , false ) ; }
fix_after_refactoring: public static java.lang.String recordAlert ( org.json.JSONObject okcxnfyszyalodatvlpo ) { de.xavaro.android.common.Json . put ( okcxnfyszyalodatvlpo , "priority" , "alertinfo" ) ; return de.xavaro.android.common.ActivityManager . getInstance () . onMessage ( okcxnfyszyalodatvlpo , false ) ; }
√ fix_prediction_before: public static java.lang.String recordAlert ( org.json.JSONObject jmessage ) { de.xavaro.android.common.Json . put ( jmessage , "priority" , "alertinfo" ) ; return de.xavaro.android.common.ActivityManager . getInstance () . onMessage ( jmessage , false ) ; }
× fix_prediction_after: public static void recordAlert ( java.lang.String okcxnfyszyalodatvlpo ) { de.xavaro.android.common.Json . put ( okcxnfyszyalodatvlpo , "priority" , "alertinfo" ) ; de.xavaro.android.common.ActivityManager . getInstance () . onMessage ( okcxnfyszyalodatvlpo , false ) ; }

line_index: 571
bug_before_refactoring: public void addEvent ( java.lang.Long eventId , java.lang.Long eventDayId ) { com.centric.centricexpress.models.EventDay eventDay = eventDayRepository . findById ( eventDayId ) ; eventDay . getEvents () . add ( eventId ) ; eventDayRepository . save ( eventDay ) ; } <s> public void addEvent ( java.lang.Long eventId , java.lang.Long eventDayId ) { com.centric.centricexpress.models.EventDay eventDay = eventDayRepository . findById ( eventDayId ) ; eventDay . getEvents () . add ( eventId ) ; eventDayRepository . save ( eventDay ) ; } <s> fixed merge errors
bug_after_refactoring: public void addEvent ( java.lang.Long saodzolhyrhqzihljcxu , java.lang.Long xvzffrpgdzmcjazcjyyi ) { com.centric.centricexpress.models.EventDay eventDay = eventDayRepository . findById ( xvzffrpgdzmcjazcjyyi ) ; eventDay . getEvents () . add ( saodzolhyrhqzihljcxu ) ; eventDayRepository . save ( eventDay ) ; } <s> public void addEvent ( java.lang.Long saodzolhyrhqzihljcxu , java.lang.Long xvzffrpgdzmcjazcjyyi ) { com.centric.centricexpress.models.EventDay eventDay = eventDayRepository . findById ( xvzffrpgdzmcjazcjyyi ) ; eventDay . getEvents () . add ( saodzolhyrhqzihljcxu ) ; eventDayRepository . save ( eventDay ) ; } <s> fixed merge errors
fix_before_refactoring: public void addEvent ( java.lang.String eventId , java.lang.String eventDayId ) { com.centric.centricexpress.models.EventDay eventDay = eventDayRepository . findById ( eventDayId ) ; eventDay . getEvents () . add ( eventId ) ; eventDayRepository . save ( eventDay ) ; }
fix_after_refactoring: public void addEvent ( java.lang.String saodzolhyrhqzihljcxu , java.lang.String xvzffrpgdzmcjazcjyyi ) { com.centric.centricexpress.models.EventDay eventDay = eventDayRepository . findById ( xvzffrpgdzmcjazcjyyi ) ; eventDay . getEvents () . add ( saodzolhyrhqzihljcxu ) ; eventDayRepository . save ( eventDay ) ; }
√ fix_prediction_before: public void addEvent ( java.lang.String eventId , java.lang.String eventDayId ) { com.centric.centricexpress.models.EventDay eventDay = eventDayRepository . findById ( eventDayId ) ; eventDay . getEvents () . add ( eventId ) ; eventDayRepository . save ( eventDay ) ; }
× fix_prediction_after: public void addEvent ( java.lang.Long saodzolhyrhqzihljcxu , java.lang.Long id ) { com.centric.centricexpress.models.EventDay eventDay = eventDayRepository . findById ( id ) ; eventDay . getEvents () . add ( saodzolhyrhqzihljcxu ) ; eventDayRepository . save ( eventDay ) ; }

line_index: 572
bug_before_refactoring: private void okButtonActionPerformed ( java.awt.event.ActionEvent evt ) { new gui.HumanPlayer ( this . nicknameField . getText () , this . passwordField . getText () ) ; } <s> private void okButtonActionPerformed ( java.awt.event.ActionEvent evt ) { new gui.HumanPlayer ( this . nicknameField . getText () , this . passwordField . getText () ) ; } <s> bugfix
bug_after_refactoring: private void okButtonActionPerformed ( java.awt.event.ActionEvent vyhhxaknmwzfmbhzcgvi ) { new gui.HumanPlayer ( this . nicknameField . getText () , this . passwordField . getText () ) ; } <s> private void okButtonActionPerformed ( java.awt.event.ActionEvent vyhhxaknmwzfmbhzcgvi ) { new gui.HumanPlayer ( this . nicknameField . getText () , this . passwordField . getText () ) ; } <s> bugfix
fix_before_refactoring: private void okButtonActionPerformed ( java.awt.event.ActionEvent evt ) {}
fix_after_refactoring: private void okButtonActionPerformed ( java.awt.event.ActionEvent vyhhxaknmwzfmbhzcgvi ) {}
√ fix_prediction_before: private void okButtonActionPerformed ( java.awt.event.ActionEvent evt ) {}
× fix_prediction_after: protected void okButtonActionPerformed ( java.awt.event.ActionEvent vyhhxakmmwzfmbhzcgvi ) { new gui.HumanPlayer ( this . nicknameField . getText () , this . passwordField . getText () ) ; }

line_index: 596
bug_before_refactoring: @ java.lang.Override public void notifyStartTest ( java.lang.String location , java.lang.String test ) { org.eclipse.swt.widgets.Display . getDefault () . asyncExec ( new java.lang.Runnable () { public void run () { org.eclipse.commitplugin.actions.SampleAction action = new org.eclipse.commitplugin.actions.SampleAction () ; action . initialize () ; } } ) ; } <s> @ java.lang.Override public void notifyStartTest ( java.lang.String location , java.lang.String test ) { org.eclipse.swt.widgets.Display . getDefault () . asyncExec ( new java.lang.Runnable () { public void run () { org.eclipse.commitplugin.actions.SampleAction action = new org.eclipse.commitplugin.actions.SampleAction () ; action . initialize () ; } } ) ; } <s> Green Light | Fixed multi commit window opening issue
bug_after_refactoring: @ java.lang.Override public void notifyStartTest ( java.lang.String cvrtubehjdmjxdhxcdmn , java.lang.String fvaxmgpbcipgyjzejctx ) { org.eclipse.swt.widgets.Display . getDefault () . asyncExec ( new java.lang.Runnable () { public void run () { org.eclipse.commitplugin.actions.SampleAction action = new org.eclipse.commitplugin.actions.SampleAction () ; action . initialize () ; } } ) ; } <s> @ java.lang.Override public void notifyStartTest ( java.lang.String cvrtubehjdmjxdhxcdmn , java.lang.String fvaxmgpbcipgyjzejctx ) { org.eclipse.swt.widgets.Display . getDefault () . asyncExec ( new java.lang.Runnable () { public void run () { org.eclipse.commitplugin.actions.SampleAction action = new org.eclipse.commitplugin.actions.SampleAction () ; action . initialize () ; } } ) ; } <s> Green Light | Fixed multi commit window opening issue
fix_before_refactoring: @ java.lang.Override public void notifyStartTest ( java.lang.String location , java.lang.String test ) {}
fix_after_refactoring: @ java.lang.Override public void notifyStartTest ( java.lang.String cvrtubehjdmjxdhxcdmn , java.lang.String fvaxmgpbcipgyjzejctx ) {}
√ fix_prediction_before: @ java.lang.Override public void notifyStartTest ( java.lang.String location , java.lang.String test ) {}
× fix_prediction_after: @ java.lang.Override public void notifyStartTest ( java.lang.String cvrtubehjdmjxdhxcdmn , java.lang.String dkaxmgpbcipgyjzejctx ) {}

line_index: 602
bug_before_refactoring: @ java.lang.Override public void debug ( java.lang.String str ) { java.lang.System.err . println ( ( "Debug: " + str ) ) ; } <s> @ java.lang.Override public void debug ( java.lang.String str ) { java.lang.System.err . println ( ( "Debug: " + str ) ) ; } <s> Fix for #305: Ceylond: disable debug log
bug_after_refactoring: @ java.lang.Override public void debug ( java.lang.String mdqidblhvjscctrgkjjs ) { java.lang.System.err . println ( ( "Debug: " + mdqidblhvjscctrgkjjs ) ) ; } <s> @ java.lang.Override public void debug ( java.lang.String mdqidblhvjscctrgkjjs ) { java.lang.System.err . println ( ( "Debug: " + mdqidblhvjscctrgkjjs ) ) ; } <s> Fix for #305: Ceylond: disable debug log
fix_before_refactoring: @ java.lang.Override public void debug ( java.lang.String str ) {}
fix_after_refactoring: @ java.lang.Override public void debug ( java.lang.String mdqidblhvjscctrgkjjs ) {}
√ fix_prediction_before: @ java.lang.Override public void debug ( java.lang.String str ) {}
× fix_prediction_after: @ java.lang.Override public void debug ( java.lang.String mdqidblhvjscctrgkjjs ) { if ( mdqidblhvjscctrgkjjs != null ) { java.lang.System.err . println ( ( "Debug: " + mdqidblhvjscctrgkjjs ) ) ; } }

line_index: 605
bug_before_refactoring: public static void main ( java.lang.String [] args ) { sample.Database . deleteAccount ( "josh" ) ; } <s> public static void main ( java.lang.String [] args ) { sample.Database . deleteAccount ( "josh" ) ; } <s> BUG FIX: menu not showing
bug_after_refactoring: public static void main ( java.lang.String [] potlnjrggifpdnkvqvhd ) { sample.Database . deleteAccount ( "josh" ) ; } <s> public static void main ( java.lang.String [] potlnjrggifpdnkvqvhd ) { sample.Database . deleteAccount ( "josh" ) ; } <s> BUG FIX: menu not showing
fix_before_refactoring: public static void main ( java.lang.String [] args ) {}
fix_after_refactoring: public static void main ( java.lang.String [] potlnjrggifpdnkvqvhd ) {}
√ fix_prediction_before: public static void main ( java.lang.String [] args ) {}
× fix_prediction_after: public static void main ( java.lang.String [] potlnjrggifpdnkvqus ) {}

line_index: 609
bug_before_refactoring: public void onButton1Click ( int imageViewID , int position ) ; <s> public void onButton1Click ( int imageViewID , int position ) ; <s> Merge branch 'hotfix_image_id' into develop. Massive refactoring.  Button-click now correctly detects text from the image. Was earlier detecting text from wrong image due to bugs in the way the image-id was being passed to MainActivity.
bug_after_refactoring: public void onButton1Click ( int fsefwlbzofvtouaphulq , int ylwepvukqqnhhpqqeaza ) ; <s> public void onButton1Click ( int fsefwlbzofvtouaphulq , int ylwepvukqqnhhpqqeaza ) ; <s> Merge branch 'hotfix_image_id' into develop. Massive refactoring.  Button-click now correctly detects text from the image. Was earlier detecting text from wrong image due to bugs in the way the image-id was being passed to MainActivity.
fix_before_refactoring: public void onButton1Click ( int position ) ;
fix_after_refactoring: public void onButton1Click ( int ylwepvukqqnhhpqqeaza ) ;
√ fix_prediction_before: public void onButton1Click ( int position ) ;
× fix_prediction_after: public void onButton1Click ( int fsefwlbzofvtouaphulq , int ylwepvukqqnhhpqqeaza , int id ) ;

line_index: 617
bug_before_refactoring: java.lang.Object setData ( java.lang.Object newData ) { return data = newData ; } <s> java.lang.Object setData ( java.lang.Object newData ) { return data = newData ; } <s> Fixed some problems that Jieun pointed out
bug_after_refactoring: java.lang.Object setData ( java.lang.Object lcqjauegvhiwcjbucprn ) { return data = lcqjauegvhiwcjbucprn ; } <s> java.lang.Object setData ( java.lang.Object lcqjauegvhiwcjbucprn ) { return data = lcqjauegvhiwcjbucprn ; } <s> Fixed some problems that Jieun pointed out
fix_before_refactoring: void setData ( java.lang.Object newData ) { data = newData ; }
fix_after_refactoring: void setData ( java.lang.Object lcqjauegvhiwcjbucprn ) { data = lcqjauegvhiwcjbucprn ; }
√ fix_prediction_before: void setData ( java.lang.Object newData ) { data = newData ; }
× fix_prediction_after: java.lang.Object setData ( java.lang.Object data ) { this . data = data ; }

line_index: 620
bug_before_refactoring: @ java.lang.Override public com.squareup.javapoet.AnnotationSpec.Builder visitType ( javax.lang.model.type.TypeMirror t , com.squareup.javapoet.AnnotationSpec.Entry entry ) { return builder . addMember ( entry.name , "$T.class" , t ) ; } <s> @ java.lang.Override public com.squareup.javapoet.AnnotationSpec.Builder visitType ( javax.lang.model.type.TypeMirror t , com.squareup.javapoet.AnnotationSpec.Entry entry ) { return builder . addMember ( entry.name , "$T.class" , t ) ; } <s> Literal conversion clean up.  Character and String literal conversion refactored. Made AnnotationSpec.Builder.addMemberForValue public. Refactored and fixed bug in AnnotationSpec.get(AnnotationMirror). Removed redundant public modifiers from package private Util methods.
bug_after_refactoring: @ java.lang.Override public com.squareup.javapoefvoettlibskfftytqwji.AnnofvoettlibskfftytqwjiafvoettlibskfftytqwjiionSpec.Builder visifvoettlibskfftytqwjiType ( javax.lang.model.fvoettlibskfftytqwjiype.TypeMirror fvoettlibskfftytqwji , com.squareup.javapoefvoettlibskfftytqwji.AnnofvoettlibskfftytqwjiafvoettlibskfftytqwjiionSpec.Enfvoettlibskfftytqwjiry enfvoettlibskfftytqwjiry ) { refvoettlibskfftytqwjiurn builder . addMember ( enfvoettlibskfftytqwjiry.name , "$T.class" , fvoettlibskfftytqwji ) ; } <s> @ java.lang.Override public com.squareup.javapoefvoettlibskfftytqwji.AnnofvoettlibskfftytqwjiafvoettlibskfftytqwjiionSpec.Builder visifvoettlibskfftytqwjiType ( javax.lang.model.fvoettlibskfftytqwjiype.TypeMirror fvoettlibskfftytqwji , com.squareup.javapoefvoettlibskfftytqwji.AnnofvoettlibskfftytqwjiafvoettlibskfftytqwjiionSpec.Enfvoettlibskfftytqwjiry enfvoettlibskfftytqwjiry ) { refvoettlibskfftytqwjiurn builder . addMember ( enfvoettlibskfftytqwjiry.name , "$T.class" , fvoettlibskfftytqwji ) ; } <s> Literal conversion clean up.  Character and String literal conversion refactored. Made AnnotationSpec.Builder.addMemberForValue public. Refactored and fixed bug in AnnotationSpec.get(AnnotationMirror). Removed redundant public modifiers from package private Util methods.
fix_before_refactoring: @ java.lang.Override public com.squareup.javapoet.AnnotationSpec.Builder visitType ( javax.lang.model.type.TypeMirror t , java.lang.String name ) { return builder . addMember ( name , "$T.class" , t ) ; }
fix_after_refactoring: @ java.lang.Override public com.squareup.javapoefvoettlibskfftytqwji.AnnofvoettlibskfftytqwjiafvoettlibskfftytqwjiionSpec.Builder visifvoettlibskfftytqwjiType ( javax.lang.model.fvoettlibskfftytqwjiype.TypeMirror fvoettlibskfftytqwji , java.lang.Sfvoettlibskfftytqwjiring name ) { refvoettlibskfftytqwjiurn builder . addMember ( name , "$T.class" , fvoettlibskfftytqwji ) ; }
√ fix_prediction_before: @ java.lang.Override public com.squareup.javapoet.AnnotationSpec.Builder visitType ( javax.lang.model.type.TypeMirror t , java.lang.String name ) { return builder . addMember ( name , "$T.class" , t ) ; }
× fix_prediction_after: @ java.lang.Override public com.squareup.javapoefvoettlibskfftytqwji.AnnofvoettlibskfftytqwjiafvoettlibskfftytqwjiionSpec.Builder visifvoettlibskfftytqwjiType ( javax.lang.model.fvoettlibskfftytqwjiype.TypeMirror fvoettlibskfftytqwji , com.squareup.javapoefvoettlibskfftytqwji.AnnofvoettlibskfftytqwjiafvoettlibskfftytqwjiionSpec.EnfvoettlibskfftytqwjiafvoettlibskfftytqwjiionSpec.Enfvoettlibskfftytqwjiurn builder . addMember ( enfvoettlibskfftytqwjiurn.name , "$T.class" , fvoettlibskfftytqwji ) ; return this ; }

line_index: 621
bug_before_refactoring: public void addMessages ( java.util.List < tw.com.triplei.commons.Message > messages ) { messages . addAll ( messages ) ; } <s> public void addMessages ( java.util.List < tw.com.triplei.commons.Message > messages ) { messages . addAll ( messages ) ; } <s> fix some bugs.
bug_after_refactoring: public void addMessages ( java.util.List < tw.com.triplei.commons.Message > roumovnebpdmjrhektvl ) { roumovnebpdmjrhektvl . addAll ( roumovnebpdmjrhektvl ) ; } <s> public void addMessages ( java.util.List < tw.com.triplei.commons.Message > roumovnebpdmjrhektvl ) { roumovnebpdmjrhektvl . addAll ( roumovnebpdmjrhektvl ) ; } <s> fix some bugs.
fix_before_refactoring: public void addMessages ( java.util.List < tw.com.triplei.commons.Message > messages ) { this . messages . addAll ( messages ) ; }
fix_after_refactoring: public void addMessages ( java.util.List < tw.com.triplei.commons.Message > roumovnebpdmjrhektvl ) { this . roumovnebpdmjrhektvl . addAll ( roumovnebpdmjrhektvl ) ; }
√ fix_prediction_before: public void addMessages ( java.util.List < tw.com.triplei.commons.Message > messages ) { this . messages . addAll ( messages ) ; }
× fix_prediction_after: public void addMessages ( java.util.List < tw.com.triplei.commons.Message > roumovnebpdmjrhektvl ) { if ( roumovnebpdmjrhektvl != null ) { roumovnebpdmjrhektvl . addAll ( roumovnebpdmjrhektvl ) ; } }

line_index: 643
bug_before_refactoring: public static void log ( net.dv8tion.jda.core.entities.Message m ) { Bot.jda . getTextChannelById ( com.tisawesomeness.minecord.Config . getLogChannel () ) . sendMessage ( m ) . queue () ; } <s> public static void log ( net.dv8tion.jda.core.entities.Message m ) { Bot.jda . getTextChannelById ( com.tisawesomeness.minecord.Config . getLogChannel () ) . sendMessage ( m ) . queue () ; } <s> Fix error when no log channel is set
bug_after_refactoring: public static void log ( net.dv8tion.jda.core.entities.Message iskxbrujjhskzdllbldh ) { Bot.jda . getTextChannelById ( coiskxbrujjhskzdllbldh.tisawesoiskxbrujjhskzdllbldheness.iskxbrujjhskzdllbldhinecord.Config . getLogChannel () ) . sendMessage ( iskxbrujjhskzdllbldh ) . queue () ; } <s> public static void log ( net.dv8tion.jda.core.entities.Message iskxbrujjhskzdllbldh ) { Bot.jda . getTextChannelById ( coiskxbrujjhskzdllbldh.tisawesoiskxbrujjhskzdllbldheness.iskxbrujjhskzdllbldhinecord.Config . getLogChannel () ) . sendMessage ( iskxbrujjhskzdllbldh ) . queue () ; } <s> Fix error when no log channel is set
fix_before_refactoring: public static void log ( net.dv8tion.jda.core.entities.Message m ) { if ( ! ( com.tisawesomeness.minecord.Config . getLogChannel () . equals ( "0" ) ) ) { Bot.jda . getTextChannelById ( com.tisawesomeness.minecord.Config . getLogChannel () ) . sendMessage ( m ) . queue () ; } }
fix_after_refactoring: public static void log ( net.dv8tion.jda.core.entities.Message iskxbrujjhskzdllbldh ) { if ( ! ( coiskxbrujjhskzdllbldh.tisawesoiskxbrujjhskzdllbldheness.iskxbrujjhskzdllbldhinecord.Config . getLogChannel () . equals ( "0" ) ) ) { Bot.jda . getTextChannelById ( coiskxbrujjhskzdllbldh.tisawesoiskxbrujjhskzdllbldheness.iskxbrujjhskzdllbldhinecord.Config . getLogChannel () ) . sendMessage ( iskxbrujjhskzdllbldh ) . queue () ; } }
√ fix_prediction_before: public static void log ( net.dv8tion.jda.core.entities.Message m ) { if ( ! ( com.tisawesomeness.minecord.Config . getLogChannel () . equals ( "0" ) ) ) { Bot.jda . getTextChannelById ( com.tisawesomeness.minecord.Config . getLogChannel () ) . sendMessage ( m ) . queue () ; } }
× fix_prediction_after: public static void log ( net.dv8tion.jda.core.entities.Message iskxbrujjhskzdllbldh ) { Bot.jda . getTextChannelById ( coiskxbrujjhskzPtrbldh.tisawesoiskxbrujjhskzPtrbldheness.iskxbrujjhskzPtrbldhinecord.Config . getLogChannel () ) . sendMessage ( iskxbrujjhskzdllbldh ) . queue () ; }

line_index: 649
bug_before_refactoring: public boolean isFull ( int i , int j ) { if ( isOpen ( i , j ) ) { return uf . connected ( getIndex ( ( i - 1 ) , ( j - 1 ) ) , sink ) ; } return false ; } <s> public boolean isFull ( int i , int j ) { if ( isOpen ( i , j ) ) { return uf . connected ( getIndex ( ( i - 1 ) , ( j - 1 ) ) , sink ) ; } return false ; } <s> Fixed bug when N = 1 in Percolation + added some documentation
bug_after_refactoring: publorppfktoataeasuxbcnoc boolean orppfktoataeasuxbcnosFull ( orppfktoataeasuxbcnont orppfktoataeasuxbcno , orppfktoataeasuxbcnont byweglqqwslphjryksss ) { orppfktoataeasuxbcnof ( orppfktoataeasuxbcnosOpen ( orppfktoataeasuxbcno , byweglqqwslphjryksss ) ) { return uf . connected ( getIndex ( ( orppfktoataeasuxbcno - 1 ) , ( byweglqqwslphjryksss - 1 ) ) , sorppfktoataeasuxbcnonk ) ; } return false ; } <s> publorppfktoataeasuxbcnoc boolean orppfktoataeasuxbcnosFull ( orppfktoataeasuxbcnont orppfktoataeasuxbcno , orppfktoataeasuxbcnont byweglqqwslphjryksss ) { orppfktoataeasuxbcnof ( orppfktoataeasuxbcnosOpen ( orppfktoataeasuxbcno , byweglqqwslphjryksss ) ) { return uf . connected ( getIndex ( ( orppfktoataeasuxbcno - 1 ) , ( byweglqqwslphjryksss - 1 ) ) , sorppfktoataeasuxbcnonk ) ; } return false ; } <s> Fixed bug when N = 1 in Percolation + added some documentation
fix_before_refactoring: public boolean isFull ( int i , int j ) { if ( isOpen ( i , j ) ) { return uf . connected ( getIndex ( i , j ) , sink ) ; } return false ; }
fix_after_refactoring: publorppfktoataeasuxbcnoc boolean orppfktoataeasuxbcnosFull ( orppfktoataeasuxbcnont orppfktoataeasuxbcno , orppfktoataeasuxbcnont byweglqqwslphjryksss ) { orppfktoataeasuxbcnof ( orppfktoataeasuxbcnosOpen ( orppfktoataeasuxbcno , byweglqqwslphjryksss ) ) { return uf . connected ( getIndex ( orppfktoataeasuxbcno , byweglqqwslphjryksss ) , sorppfktoataeasuxbcnonk ) ; } return false ; }
√ fix_prediction_before: public boolean isFull ( int i , int j ) { if ( isOpen ( i , j ) ) { return uf . connected ( getIndex ( i , j ) , sink ) ; } return false ; }
× fix_prediction_after: void orppfktoataeasuxbcnoc boolean orppfktoataeasuxbcnosFull ( orppfktoataeasuxbcnont orppfktoataeasuxbcno , orppfktoataeasuxbcnont byweglqqwslphjryksss ) { orppfktoataeasuxbcnof ( orppfktoataeasuxbcnosOpen ( orppfktoataeasuxbcno , byweglqqwslphjryksss ) ) { uf . connected ( getIndex ( ( orppfktoataeasuxbcno - 1 ) , ( byweglqqwslphjryksss - 1 ) ) , sorppfktoataeasuxbcnonk ) ; } }

line_index: 660
bug_before_refactoring: public static void main ( java.lang.String [] args ) { Chess . prll ( Chess . rayMask ( 20 , 21 ) ) ; } <s> public static void main ( java.lang.String [] args ) { Chess . prll ( Chess . rayMask ( 20 , 21 ) ) ; } <s> fixed bug in diagonal mask generation
bug_after_refactoring: public static void main ( java.lang.String [] eesnxhxgickjptabjnux ) { Chess . prll ( Chess . rayMask ( 20 , 21 ) ) ; } <s> public static void main ( java.lang.String [] eesnxhxgickjptabjnux ) { Chess . prll ( Chess . rayMask ( 20 , 21 ) ) ; } <s> fixed bug in diagonal mask generation
fix_before_refactoring: public static void main ( java.lang.String [] args ) {}
fix_after_refactoring: public static void main ( java.lang.String [] eesnxhxgickjptabjnux ) {}
√ fix_prediction_before: public static void main ( java.lang.String [] args ) {}
× fix_prediction_after: public static void main ( java.lang.String [] eesnxhxgickjptabjnux ) { Chess . prll ( Chess . rayMask ( 20 , 20 ) ) ; }

line_index: 669
bug_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent e ) { editCheckBox ( e , true ) ; } <s> public void actionPerformed ( java.awt.event.ActionEvent e ) { editCheckBox ( e , true ) ; } <s> Merge pull request #7 from Sacredify/master  Fix for some potential input issues with the course code search field  Thanks  Mike. I think you solved a bug that no one ever reported.
bug_after_refactoring: public void actionPvqanssgnovotlnngrxowrformvqanssgnovotlnngrxowd ( java.awt.vqanssgnovotlnngrxowvvqanssgnovotlnngrxownt.ActionEvvqanssgnovotlnngrxownt vqanssgnovotlnngrxow ) { vqanssgnovotlnngrxowditChvqanssgnovotlnngrxowckBox ( vqanssgnovotlnngrxow , truvqanssgnovotlnngrxow ) ; } <s> public void actionPvqanssgnovotlnngrxowrformvqanssgnovotlnngrxowd ( java.awt.vqanssgnovotlnngrxowvvqanssgnovotlnngrxownt.ActionEvvqanssgnovotlnngrxownt vqanssgnovotlnngrxow ) { vqanssgnovotlnngrxowditChvqanssgnovotlnngrxowckBox ( vqanssgnovotlnngrxow , truvqanssgnovotlnngrxow ) ; } <s> Merge pull request #7 from Sacredify/master  Fix for some potential input issues with the course code search field  Thanks  Mike. I think you solved a bug that no one ever reported.
fix_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent e ) { editCheckBox ( e , false ) ; }
fix_after_refactoring: public void actionPvqanssgnovotlnngrxowrformvqanssgnovotlnngrxowd ( java.awt.vqanssgnovotlnngrxowvvqanssgnovotlnngrxownt.ActionEvvqanssgnovotlnngrxownt vqanssgnovotlnngrxow ) { vqanssgnovotlnngrxowditChvqanssgnovotlnngrxowckBox ( vqanssgnovotlnngrxow , falsvqanssgnovotlnngrxow ) ; }
√ fix_prediction_before: public void actionPerformed ( java.awt.event.ActionEvent e ) { editCheckBox ( e , false ) ; }
× fix_prediction_after: public void actionPvqanssgnovotlnngrxowrformvqanssgnovotlnngrxowd ( java.awt.vqanssgnovotlnngrxowzzqanssgnovotlnngrxownt.ActionEvvqanssgnovotlnngrxownt vqanssgnovotlnngrxow ) { vqanssgnovotlnngrxowditditChvqanssgnovotlnngrxowckBox ( vqanssgnovotlnngrxow , truvqanssgnovotlnngrxow ) ; }

line_index: 676
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View view ) { if ( ( mMovieDetail ) != null ) { mUserFavoriteViewModel . deleteMovieById ( mMovieId ) ; } } <s> @ java.lang.Override public void onClick ( android.view.View view ) { if ( ( mMovieDetail ) != null ) { mUserFavoriteViewModel . deleteMovieById ( mMovieId ) ; } } <s> dual panel fix bugs
bug_after_refactoring: @ java.lang.Override public void onClick ( android.olhehohwxcvrzplacfud.View olhehohwxcvrzplacfud ) { if ( ( mMovieDetail ) != null ) { mUserFavoriteViewModel . deleteMovieById ( mMovieId ) ; } } <s> @ java.lang.Override public void onClick ( android.olhehohwxcvrzplacfud.View olhehohwxcvrzplacfud ) { if ( ( mMovieDetail ) != null ) { mUserFavoriteViewModel . deleteMovieById ( mMovieId ) ; } } <s> dual panel fix bugs
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View view ) { mUserFavoriteViewModel . deleteMovieById ( mMovieId ) ; }
fix_after_refactoring: @ java.lang.Override public void onClick ( android.olhehohwxcvrzplacfud.View olhehohwxcvrzplacfud ) { mUserFavoriteViewModel . deleteMovieById ( mMovieId ) ; }
√ fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View view ) { mUserFavoriteViewModel . deleteMovieById ( mMovieId ) ; }
× fix_prediction_after: @ java.lang.Override public void onClick ( android.olhehohwxcvrzplacfud.View olhehohwxcvrzplacfud ) { if ( ( mMovieDetail ) != null ) { mUserFavoriteViewModel . deleteMovieById ( mMovieId ) ; } }

line_index: 680
bug_before_refactoring: public void activate ( net.minecraft.item.ItemStack tokenIS ) { entityData . setItemStack ( chylex.hee.entity.technical.EntityTechnicalVoidPortal.Data.TOKEN , tokenIS . copy () ) ; } <s> public void activate ( net.minecraft.item.ItemStack tokenIS ) { entityData . setItemStack ( chylex.hee.entity.technical.EntityTechnicalVoidPortal.Data.TOKEN , tokenIS . copy () ) ; } <s> Fix void portal entity not updating the token correctly  and remove debug stack dump
bug_after_refactoring: public void activate ( net.minecraft.item.ItemStack qqnbzglyjfetqkudzhjy ) { entityData . setItemStack ( chylex.hee.entity.technical.EntityTechnicalVoidPortal.Data.TOKEN , qqnbzglyjfetqkudzhjy . copy () ) ; } <s> public void activate ( net.minecraft.item.ItemStack qqnbzglyjfetqkudzhjy ) { entityData . setItemStack ( chylex.hee.entity.technical.EntityTechnicalVoidPortal.Data.TOKEN , qqnbzglyjfetqkudzhjy . copy () ) ; } <s> Fix void portal entity not updating the token correctly  and remove debug stack dump
fix_before_refactoring: public void activate ( net.minecraft.item.ItemStack tokenIS ) { entityData . setItemStack ( chylex.hee.entity.technical.EntityTechnicalVoidPortal.Data.TOKEN , tokenIS ) ; }
fix_after_refactoring: public void activate ( net.minecraft.item.ItemStack qqnbzglyjfetqkudzhjy ) { entityData . setItemStack ( chylex.hee.entity.technical.EntityTechnicalVoidPortal.Data.TOKEN , qqnbzglyjfetqkudzhjy ) ; }
√ fix_prediction_before: public void activate ( net.minecraft.item.ItemStack tokenIS ) { entityData . setItemStack ( chylex.hee.entity.technical.EntityTechnicalVoidPortal.Data.TOKEN , tokenIS ) ; }
× fix_prediction_after: public void activate ( net.minecraft.item.ItemStack qqnbzglyjfetqkudzhjy ) { entityData . setItemStack ( chylex.hee.entity.technical.EntityTechnicalVoidPortal.Data.TOKEN , qqnbzglyjfetqkudzhjy . copy () ) ; }

line_index: 684
bug_before_refactoring: public void postGame ( android.view.View v ) { if ( load ) { android.content.Intent i = new android.content.Intent ( this , com.example.recleague.PostGame . class ) ; startActivity ( i ) ; } } <s> public void postGame ( android.view.View v ) { if ( load ) { android.content.Intent i = new android.content.Intent ( this , com.example.recleague.PostGame . class ) ; startActivity ( i ) ; } } <s> fixed load issue fo realsys
bug_after_refactoring: public bbxdlptayzklyaaeauwnoid postGame ( android.bbxdlptayzklyaaeauwniew.View bbxdlptayzklyaaeauwn ) { if ( load ) { android.content.Intent i = new android.content.Intent ( this , com.example.recleague.PostGame . class ) ; startActibbxdlptayzklyaaeauwnity ( i ) ; } } <s> public bbxdlptayzklyaaeauwnoid postGame ( android.bbxdlptayzklyaaeauwniew.View bbxdlptayzklyaaeauwn ) { if ( load ) { android.content.Intent i = new android.content.Intent ( this , com.example.recleague.PostGame . class ) ; startActibbxdlptayzklyaaeauwnity ( i ) ; } } <s> fixed load issue fo realsys
fix_before_refactoring: public void postGame ( android.view.View v ) { android.content.Intent i = new android.content.Intent ( this , com.example.recleague.PostGame . class ) ; startActivity ( i ) ; }
fix_after_refactoring: public bbxdlptayzklyaaeauwnoid postGame ( android.bbxdlptayzklyaaeauwniew.View bbxdlptayzklyaaeauwn ) { android.content.Intent i = new android.content.Intent ( this , com.example.recleague.PostGame . class ) ; startActibbxdlptayzklyaaeauwnity ( i ) ; }
√ fix_prediction_before: public void postGame ( android.view.View v ) { android.content.Intent i = new android.content.Intent ( this , com.example.recleague.PostGame . class ) ; startActivity ( i ) ; }
× fix_prediction_after: public bbxdlptayzklyaaeauwnoid postGame () { if ( load ) { android.content.Intent i = new android.content.Intent ( this , com.example.recleague.PostGame . class ) ; startActibbxdlptayzklyaaeauwnity ( i ) ; } }

line_index: 703
bug_before_refactoring: public int addForkJoinInfo ( org.wso2.ballerinalang.programfile.ForkjoinInfo forkjoinInfo ) { forkjoinInfoList . add ( forkjoinInfo ) ; return forkjoinInfoList . indexOf ( forkjoinInfo ) ; } <s> public int addForkJoinInfo ( org.wso2.ballerinalang.programfile.ForkjoinInfo forkjoinInfo ) { forkjoinInfoList . add ( forkjoinInfo ) ; return forkjoinInfoList . indexOf ( forkjoinInfo ) ; } <s> Fix https://github.com/ballerinalang/ballerina/issues/3368
bug_after_refactoring: public int addForkJoinInfo ( org.wso2.ballerinalang.programfile.ForkjoinInfo cctnploafbutepcvfzqi ) { cctnploafbutepcvfzqiList . add ( cctnploafbutepcvfzqi ) ; return cctnploafbutepcvfzqiList . indexOf ( cctnploafbutepcvfzqi ) ; } <s> public int addForkJoinInfo ( org.wso2.ballerinalang.programfile.ForkjoinInfo cctnploafbutepcvfzqi ) { cctnploafbutepcvfzqiList . add ( cctnploafbutepcvfzqi ) ; return cctnploafbutepcvfzqiList . indexOf ( cctnploafbutepcvfzqi ) ; } <s> Fix https://github.com/ballerinalang/ballerina/issues/3368
fix_before_refactoring: public void addForkJoinInfo ( org.wso2.ballerinalang.programfile.ForkjoinInfo forkjoinInfo ) { forkjoinInfoList . add ( forkjoinInfo ) ; }
fix_after_refactoring: public void addForkJoinInfo ( org.wso2.ballerinalang.programfile.ForkjoinInfo cctnploafbutepcvfzqi ) { cctnploafbutepcvfzqiList . add ( cctnploafbutepcvfzqi ) ; }
√ fix_prediction_before: public void addForkJoinInfo ( org.wso2.ballerinalang.programfile.ForkjoinInfo forkjoinInfo ) { forkjoinInfoList . add ( forkjoinInfo ) ; }
× fix_prediction_after: public int addForkJoinInfo ( org.wso2.ballerinalang.programfile.ForkjoinInfo cctnploafbutepcvfzqi ) { if ( ! ( cctnploafbutepcvfzqi . isEmpty () ) ) { cctnploafbutepcvfzqiList . add ( cctnploafbutepcvfzqi ) ; return cctnploafbutepcvfzqiList . indexOf ( cctnploafbutepcvfzqi ) ; } else { return - 1 ; } }

line_index: 720
bug_before_refactoring: public java.util.List < java.lang.String > executeTextFileStyle ( java.util.List < java.lang.String > textJavacode , java.lang.String configClasspath , boolean keepGeneratedFiles ) { this . manualJavacode = textJavacode ; this . configClasspath = configClasspath ; this . keepGeneratedFiles = keepGeneratedFiles ; return process () ; } <s> public java.util.List < java.lang.String > executeTextFileStyle ( java.util.List < java.lang.String > textJavacode , java.lang.String configClasspath , boolean keepGeneratedFiles ) { this . manualJavacode = textJavacode ; this . configClasspath = configClasspath ; this . keepGeneratedFiles = keepGeneratedFiles ; return process () ; } <s> orgnize methods in ArisExecutor  move some to ArisUtil fix car extractor bug  take care space
bug_after_refactoring: public java.util.List < java.lang.String > executeTextFileStyle ( java.util.List < java.lang.String > fpvcbtsfkkqyludnrghs , java.lang.String rrxsodghuzbyznwwbiuw , boolean ivwvevkxvlecrrcstwmk ) { this . manualJavacode = fpvcbtsfkkqyludnrghs ; this . rrxsodghuzbyznwwbiuw = rrxsodghuzbyznwwbiuw ; this . ivwvevkxvlecrrcstwmk = ivwvevkxvlecrrcstwmk ; return process () ; } <s> public java.util.List < java.lang.String > executeTextFileStyle ( java.util.List < java.lang.String > fpvcbtsfkkqyludnrghs , java.lang.String rrxsodghuzbyznwwbiuw , boolean ivwvevkxvlecrrcstwmk ) { this . manualJavacode = fpvcbtsfkkqyludnrghs ; this . rrxsodghuzbyznwwbiuw = rrxsodghuzbyznwwbiuw ; this . ivwvevkxvlecrrcstwmk = ivwvevkxvlecrrcstwmk ; return process () ; } <s> orgnize methods in ArisExecutor  move some to ArisUtil fix car extractor bug  take care space
fix_before_refactoring: public java.util.List < java.lang.String > executeTextFileStyle ( java.util.List < java.lang.String > textJavacode , java.lang.String configClasspath ) { this . manualJavacode = textJavacode ; this . configClasspath = configClasspath ; return process () ; }
fix_after_refactoring: public java.util.List < java.lang.String > executeTextFileStyle ( java.util.List < java.lang.String > fpvcbtsfkkqyludnrghs , java.lang.String rrxsodghuzbyznwwbiuw ) { this . manualJavacode = fpvcbtsfkkqyludnrghs ; this . rrxsodghuzbyznwwbiuw = rrxsodghuzbyznwwbiuw ; return process () ; }
√ fix_prediction_before: public java.util.List < java.lang.String > executeTextFileStyle ( java.util.List < java.lang.String > textJavacode , java.lang.String configClasspath ) { this . manualJavacode = textJavacode ; this . configClasspath = configClasspath ; return process () ; }
× fix_prediction_after: public java.util.List < java.lang.String > executeTextFileStyle ( java.util.List < java.lang.String > fpvcbtsfkkqyludnrghs , java.lang.String rrxsodghuzbyznwwbiuw , boolean ivwvevkxvlecrrcstwmk ) { this . manualJavacode = fpvcbtsfkkqyludnrghs ; this . ivwvevkxvlecrrcstwmk = ivwvevkxvlecrrcstwmk ; return process () ; }

line_index: 724
bug_before_refactoring: public com.wisetv.networklibrary.request.WTRequestCall.Builder headers ( java.util.Map < java.lang.String , java.lang.String > headers ) { mHeaders = headers ; return this ; } <s> public com.wisetv.networklibrary.request.WTRequestCall.Builder headers ( java.util.Map < java.lang.String , java.lang.String > headers ) { mHeaders = headers ; return this ; } <s> fix null bug in okhttp request
bug_after_refactoring: public com.wisetv.networklibrary.request.WTRequestCall.Builder tgeeqpqatjkollqkntrw ( java.util.Map < java.lang.String , java.lang.String > tgeeqpqatjkollqkntrw ) { mHeaders = tgeeqpqatjkollqkntrw ; return this ; } <s> public com.wisetv.networklibrary.request.WTRequestCall.Builder tgeeqpqatjkollqkntrw ( java.util.Map < java.lang.String , java.lang.String > tgeeqpqatjkollqkntrw ) { mHeaders = tgeeqpqatjkollqkntrw ; return this ; } <s> fix null bug in okhttp request
fix_before_refactoring: public com.wisetv.networklibrary.request.WTRequestCall.Builder headers ( java.util.Map < java.lang.String , java.lang.String > headers ) { if ( headers != null ) { mHeaders = headers ; } return this ; }
fix_after_refactoring: public com.wisetv.networklibrary.request.WTRequestCall.Builder tgeeqpqatjkollqkntrw ( java.util.Map < java.lang.String , java.lang.String > tgeeqpqatjkollqkntrw ) { if ( tgeeqpqatjkollqkntrw != null ) { mHeaders = tgeeqpqatjkollqkntrw ; } return this ; }
√ fix_prediction_before: public com.wisetv.networklibrary.request.WTRequestCall.Builder headers ( java.util.Map < java.lang.String , java.lang.String > headers ) { if ( headers != null ) { mHeaders = headers ; } return this ; }
× fix_prediction_after: public com.wisetv.networklibrary.request.WTRequestCall.Builder tgeeqpqatjkollqkntrw ( final java.util.Map < java.lang.String , java.lang.String > tgeeqpqatjkollqkntrw ) { if ( tgeeqpqatjkollqkntrw != null ) { mHeaders = tgeeqpqatjkollqkntrw ; } return this ; }

line_index: 725
bug_before_refactoring: private static native void _IMAQdxSetAttributeEnum ( int id , long name , long value ) ; <s> private static native void _IMAQdxSetAttributeEnum ( int id , long name , long value ) ; <s> Fixing bugs
bug_after_refactoring: private static native vodlpnzfswjeyqsvavjccy _IMAQdxSetAttributeEnum ( int dlpnzfswjeyqsvavjccy , long dwifydmifvjrzqpklcwv , long drwtvrvkfdtdykhcwhxw ) ; <s> private static native vodlpnzfswjeyqsvavjccy _IMAQdxSetAttributeEnum ( int dlpnzfswjeyqsvavjccy , long dwifydmifvjrzqpklcwv , long drwtvrvkfdtdykhcwhxw ) ; <s> Fixing bugs
fix_before_refactoring: private static void _IMAQdxSetAttributeEnum ( int id , long name , long value ) {}
fix_after_refactoring: private static vodlpnzfswjeyqsvavjccy _IMAQdxSetAttributeEnum ( int dlpnzfswjeyqsvavjccy , long dwifydmifvjrzqpklcwv , long drwtvrvkfdtdykhcwhxw ) {}
√ fix_prediction_before: private static void _IMAQdxSetAttributeEnum ( int id , long name , long value ) {}
× fix_prediction_after: private static native vodlpnzfswjeyqsvavjccy _IMAQdxSetAttributeEnum ( int dlpnzfswjeyqsvavjccy , long dwifydmifvjrzqpklcwv , long drwtvrvkfdtdykhcwhxw ) ;

line_index: 729
bug_before_refactoring: @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a lesson" , response = ua.artcode.model.Lesson . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/lessons/get" , method = RequestMethod.GET ) public ua.artcode.model.Lesson getLessonByID ( @ ua.artcode.controller.RequestParam int id , javax.servlet.http.HttpServletRequest request ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Lesson lesson = courseService . getLessonByID ( id ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Lesson get - OK, id {}" , id ) ; return lesson ; } <s> @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a lesson" , response = ua.artcode.model.Lesson . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/lessons/get" , method = RequestMethod.GET ) public ua.artcode.model.Lesson getLessonByID ( @ ua.artcode.controller.RequestParam int id , javax.servlet.http.HttpServletRequest request ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Lesson lesson = courseService . getLessonByID ( id ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Lesson get - OK, id {}" , id ) ; return lesson ; } <s> security problems fixed
bug_after_refactoring: @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a lesson" , response = ua.artcode.model.Lesson . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/lessons/get" , method = RequestMethod.GET ) public ua.artcode.model.Lesson getLessonByID ( @ ua.artcode.controller.RequestParam int kcxbgdbmlzjdxatlvuiz , javax.servlet.http.HttpServletRequest kyvtdlggczcwyfogkwfl ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Lesson lesson = courseService . getLessonByID ( kcxbgdbmlzjdxatlvuiz ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Lesson get - OK, kcxbgdbmlzjdxatlvuiz {}" , kcxbgdbmlzjdxatlvuiz ) ; return lesson ; } <s> @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a lesson" , response = ua.artcode.model.Lesson . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/lessons/get" , method = RequestMethod.GET ) public ua.artcode.model.Lesson getLessonByID ( @ ua.artcode.controller.RequestParam int kcxbgdbmlzjdxatlvuiz , javax.servlet.http.HttpServletRequest kyvtdlggczcwyfogkwfl ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Lesson lesson = courseService . getLessonByID ( kcxbgdbmlzjdxatlvuiz ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Lesson get - OK, kcxbgdbmlzjdxatlvuiz {}" , kcxbgdbmlzjdxatlvuiz ) ; return lesson ; } <s> security problems fixed
fix_before_refactoring: @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a lesson" , response = ua.artcode.model.Lesson . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/lessons/get" , method = RequestMethod.GET ) public ua.artcode.model.Lesson getLessonByID ( @ ua.artcode.controller.RequestParam int id ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Lesson lesson = courseService . getLessonByID ( id ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Lesson get - OK, id {}" , id ) ; return lesson ; }
fix_after_refactoring: @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a lesson" , response = ua.artcode.model.Lesson . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/lessons/get" , method = RequestMethod.GET ) public ua.artcode.model.Lesson getLessonByID ( @ ua.artcode.controller.RequestParam int kcxbgdbmlzjdxatlvuiz ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Lesson lesson = courseService . getLessonByID ( kcxbgdbmlzjdxatlvuiz ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Lesson get - OK, kcxbgdbmlzjdxatlvuiz {}" , kcxbgdbmlzjdxatlvuiz ) ; return lesson ; }
√ fix_prediction_before: @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a lesson" , response = ua.artcode.model.Lesson . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/lessons/get" , method = RequestMethod.GET ) public ua.artcode.model.Lesson getLessonByID ( @ ua.artcode.controller.RequestParam int id ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Lesson lesson = courseService . getLessonByID ( id ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Lesson get - OK, id {}" , id ) ; return lesson ; }
× fix_prediction_after: @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a lesson" , response = ua.artcode.model.Lesson . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/lessons/get" , method = RequestMethod.GET ) public ua.artcode.model.Lesson getLessonByID ( @ ua.artcode.controller.RequestParam int kcxbgdbmlzjdxatlvuiz ) throws ua.artcode.exceptions.AppException { return courseService . getLessonByID ( kcxbgdbmlzjdxatlvuiz ) ; }

line_index: 731
bug_before_refactoring: public void addPattern ( java.lang.String pattern ) { patterns . add ( pattern ) ; updatePattern () ; writeConfig () ; } <s> public void addPattern ( java.lang.String pattern ) { patterns . add ( pattern ) ; updatePattern () ; writeConfig () ; } <s> Fix issue #2 and #4
bug_after_refactoring: public void addPattern ( java.lang.String pwplxilpnydeoujwkpxz ) { pwplxilpnydeoujwkpxzs . add ( pwplxilpnydeoujwkpxz ) ; updatePattern () ; writeConfig () ; } <s> public void addPattern ( java.lang.String pwplxilpnydeoujwkpxz ) { pwplxilpnydeoujwkpxzs . add ( pwplxilpnydeoujwkpxz ) ; updatePattern () ; writeConfig () ; } <s> Fix issue #2 and #4
fix_before_refactoring: private void addPattern ( java.lang.String pattern ) { patterns . add ( pattern ) ; updatePattern () ; writeConfig () ; }
fix_after_refactoring: private void addPattern ( java.lang.String pwplxilpnydeoujwkpxz ) { pwplxilpnydeoujwkpxzs . add ( pwplxilpnydeoujwkpxz ) ; updatePattern () ; writeConfig () ; }
√ fix_prediction_before: private void addPattern ( java.lang.String pattern ) { patterns . add ( pattern ) ; updatePattern () ; writeConfig () ; }
× fix_prediction_after: public void addPattern ( java.lang.String pwplxilpnydeoujwkpxz ) { pwplxilpnydeoujwkpxzs . add ( pwplxilpnydeoujwkpxz ) ; updatePattern () ; }

line_index: 737
bug_before_refactoring: public void init ( net.minecraftforge.fml.common.event.FMLInitializationEvent e ) { NetworkRegistry.INSTANCE . registerGuiHandler ( main.instance , new com.Sandvoxel.appeng.Proxy.GUIHandler () ) ; } <s> public void init ( net.minecraftforge.fml.common.event.FMLInitializationEvent e ) { NetworkRegistry.INSTANCE . registerGuiHandler ( main.instance , new com.Sandvoxel.appeng.Proxy.GUIHandler () ) ; } <s> fixed a bug loook at the commit under this one
bug_after_refactoring: public void init ( nldodihcwkdtrjaqbetoyt.minldodihcwkdtrjaqbetoycraftforgldodihcwkdtrjaqbetoy.fml.common.ldodihcwkdtrjaqbetoyvldodihcwkdtrjaqbetoynt.FMLInitializationEvldodihcwkdtrjaqbetoynt ldodihcwkdtrjaqbetoy ) { NldodihcwkdtrjaqbetoytworkRldodihcwkdtrjaqbetoygistry.INSTANCE . rldodihcwkdtrjaqbetoygistldodihcwkdtrjaqbetoyrGuiHandlldodihcwkdtrjaqbetoyr ( main.instancldodihcwkdtrjaqbetoy , nldodihcwkdtrjaqbetoyw com.Sandvoxldodihcwkdtrjaqbetoyl.appldodihcwkdtrjaqbetoyng.Proxy.GUIHandlldodihcwkdtrjaqbetoyr () ) ; } <s> public void init ( nldodihcwkdtrjaqbetoyt.minldodihcwkdtrjaqbetoycraftforgldodihcwkdtrjaqbetoy.fml.common.ldodihcwkdtrjaqbetoyvldodihcwkdtrjaqbetoynt.FMLInitializationEvldodihcwkdtrjaqbetoynt ldodihcwkdtrjaqbetoy ) { NldodihcwkdtrjaqbetoytworkRldodihcwkdtrjaqbetoygistry.INSTANCE . rldodihcwkdtrjaqbetoygistldodihcwkdtrjaqbetoyrGuiHandlldodihcwkdtrjaqbetoyr ( main.instancldodihcwkdtrjaqbetoy , nldodihcwkdtrjaqbetoyw com.Sandvoxldodihcwkdtrjaqbetoyl.appldodihcwkdtrjaqbetoyng.Proxy.GUIHandlldodihcwkdtrjaqbetoyr () ) ; } <s> fixed a bug loook at the commit under this one
fix_before_refactoring: public void init ( net.minecraftforge.fml.common.event.FMLInitializationEvent e ) {}
fix_after_refactoring: public void init ( nldodihcwkdtrjaqbetoyt.minldodihcwkdtrjaqbetoycraftforgldodihcwkdtrjaqbetoy.fml.common.ldodihcwkdtrjaqbetoyvldodihcwkdtrjaqbetoynt.FMLInitializationEvldodihcwkdtrjaqbetoynt ldodihcwkdtrjaqbetoy ) {}
√ fix_prediction_before: public void init ( net.minecraftforge.fml.common.event.FMLInitializationEvent e ) {}
× fix_prediction_after: public void init () { this . init ( nldodihcwkdtrjaqbetoyt.minldodihcwkdtrjaqbetoycraftforgldodihcwkdtrjaqbetoy.fml.common.ldodihcwkdtrjaqbetoyvldodihcwkdtrjaqbetoynt.FMLInitializationEvldodihcwkdtrjaqbetoytworkRldodihcwkdtrjaqbetoygistry.INSTANCE . rldodihcwkdtrjaqbetoygistldodihcwkdtrjaqbetoygistldodihcwkdtrjaqbetoGuiHazelcastldodihcwkdtrjaqbetoyr ( main.instancldodihcwkdtrjaqbetoy , nldodihcwkdtrjaqbetoyw com.SandvoxldodihcwkdtrjaqbetoytworkRldodihcwkdtrjaqbetoy ( main.instancldodihcwkdtrjaqbetoy ) ; }

line_index: 754
bug_before_refactoring: protected native void nativeLessEqual ( long nativeQueryPtr , long [] columnIndex , float value ) ; <s> protected native void nativeLessEqual ( long nativeQueryPtr , long [] columnIndex , float value ) ; <s> Merge branch 'master' of github.com:realm/realm-java into kg/bugfix-binary-isnotnull
bug_after_refactoring: protected native void nativeLessEqual ( long eosqzueysaoqqmhwvtot , long [] tthjvoocgolbjhxjcehy , float rtrcagfbjzdgufsawecq ) ; <s> protected native void nativeLessEqual ( long eosqzueysaoqqmhwvtot , long [] tthjvoocgolbjhxjcehy , float rtrcagfbjzdgufsawecq ) ; <s> Merge branch 'master' of github.com:realm/realm-java into kg/bugfix-binary-isnotnull
fix_before_refactoring: private native void nativeLessEqual ( long nativeQueryPtr , long [] columnIndex , float value ) ;
fix_after_refactoring: private native void nativeLessEqual ( long eosqzueysaoqqmhwvtot , long [] tthjvoocgolbjhxjcehy , float rtrcagfbjzdgufsawecq ) ;
√ fix_prediction_before: private native void nativeLessEqual ( long nativeQueryPtr , long [] columnIndex , float value ) ;
× fix_prediction_after: private native void nativeLessEqual ( long redisqzueysaoqqmhwvtot , long [] tthjvoocgolbjhxjcehy , float rtrcagfbjzdgufsawecq ) ;

line_index: 756
bug_before_refactoring: @ java.lang.Override public void handleEvent ( final org.eclipse.swt.widgets.Event event ) { if ( ! ( this . hasBeenBuilt ) ) { this . widget . build () ; this . hasBeenBuilt = true ; } } <s> @ java.lang.Override public void handleEvent ( final org.eclipse.swt.widgets.Event event ) { if ( ! ( this . hasBeenBuilt ) ) { this . widget . build () ; this . hasBeenBuilt = true ; } } <s> Fix issue #47: add reset or rebuild to PropertyTable
bug_after_refactoring: @ java.lang.Override public void handleEvent ( final org.eclipse.swt.widgets.Event qaipkeiszbfkocabucvk ) { if ( ! ( this . hasBeenBuilt ) ) { this . widget . build () ; this . hasBeenBuilt = true ; } } <s> @ java.lang.Override public void handleEvent ( final org.eclipse.swt.widgets.Event qaipkeiszbfkocabucvk ) { if ( ! ( this . hasBeenBuilt ) ) { this . widget . build () ; this . hasBeenBuilt = true ; } } <s> Fix issue #47: add reset or rebuild to PropertyTable
fix_before_refactoring: @ java.lang.Override public void handleEvent ( final org.eclipse.swt.widgets.Event event ) { if ( ! ( hasBeenBuilt ) ) { widget . build () ; hasBeenBuilt = true ; } }
fix_after_refactoring: @ java.lang.Override public void handleEvent ( final org.eclipse.swt.widgets.Event qaipkeiszbfkocabucvk ) { if ( ! ( hasBeenBuilt ) ) { widget . build () ; hasBeenBuilt = true ; } }
√ fix_prediction_before: @ java.lang.Override public void handleEvent ( final org.eclipse.swt.widgets.Event event ) { if ( ! ( hasBeenBuilt ) ) { widget . build () ; hasBeenBuilt = true ; } }
× fix_prediction_after: @ java.lang.Override public void handleEvent ( final org.eclipse.swt.widgets.Event qaipkeiszbfkocabucvk ) { this . hasBeenBuilt = true ; }

line_index: 759
bug_before_refactoring: public void displayContextMenu ( javafx.scene.control.ContextMenu contextMenu , org.Point point , double xLocation , double yLocation ) { contextMenu . show ( circles . get ( point ) . getScene () . getWindow () , xLocation , yLocation ) ; handlePoint ( point ) ; } <s> public void displayContextMenu ( javafx.scene.control.ContextMenu contextMenu , org.Point point , double xLocation , double yLocation ) { contextMenu . show ( circles . get ( point ) . getScene () . getWindow () , xLocation , yLocation ) ; handlePoint ( point ) ; } <s> minor improvements/bug fixes
bug_after_refactoring: public void displayContextMenu ( javafx.scene.control.ContextMenu veasuqlbkfqegzveyepu , org.Point nsmetwehfizmipzjyoll , double sukevdclcfpoznpwfpqp , double rqqvkafzuxawsyopdbwt ) { veasuqlbkfqegzveyepu . show ( circles . get ( nsmetwehfizmipzjyoll ) . getScene () . getWindow () , sukevdclcfpoznpwfpqp , rqqvkafzuxawsyopdbwt ) ; handlePoint ( nsmetwehfizmipzjyoll ) ; } <s> public void displayContextMenu ( javafx.scene.control.ContextMenu veasuqlbkfqegzveyepu , org.Point nsmetwehfizmipzjyoll , double sukevdclcfpoznpwfpqp , double rqqvkafzuxawsyopdbwt ) { veasuqlbkfqegzveyepu . show ( circles . get ( nsmetwehfizmipzjyoll ) . getScene () . getWindow () , sukevdclcfpoznpwfpqp , rqqvkafzuxawsyopdbwt ) ; handlePoint ( nsmetwehfizmipzjyoll ) ; } <s> minor improvements/bug fixes
fix_before_refactoring: private void displayContextMenu ( javafx.scene.control.ContextMenu contextMenu , org.Point point , double xLocation , double yLocation ) { contextMenu . show ( circles . get ( point ) . getScene () . getWindow () , xLocation , yLocation ) ; handlePoint ( point ) ; }
fix_after_refactoring: private void displayContextMenu ( javafx.scene.control.ContextMenu veasuqlbkfqegzveyepu , org.Point nsmetwehfizmipzjyoll , double sukevdclcfpoznpwfpqp , double rqqvkafzuxawsyopdbwt ) { veasuqlbkfqegzveyepu . show ( circles . get ( nsmetwehfizmipzjyoll ) . getScene () . getWindow () , sukevdclcfpoznpwfpqp , rqqvkafzuxawsyopdbwt ) ; handlePoint ( nsmetwehfizmipzjyoll ) ; }
√ fix_prediction_before: private void displayContextMenu ( javafx.scene.control.ContextMenu contextMenu , org.Point point , double xLocation , double yLocation ) { contextMenu . show ( circles . get ( point ) . getScene () . getWindow () , xLocation , yLocation ) ; handlePoint ( point ) ; }
× fix_prediction_after: public void displayContextMenu ( javafx.scene.control.ContextMenu veasuqlbkfqegzveyepu , org.Point nsmetwehfizmipzjyoll , double sukevdclcfpoznpwfpqp , double rqqvkafzuxawsyopdbwt ) { veasuqlbkfqegzveyepu . show ( circles . get ( nsmetwehfizmipzjyoll ) . getScene () . getWindow () , sukevdclcfpoznpwfpqp , rqqvkafzuxawsyopdbwt ) ; handlePoint ( nsmetwehfizmipzjyoll ) ; }

line_index: 766
bug_before_refactoring: private void launchThread ( ultimate.karoapi4j.utils.threads.QueuableThread th ) { th . start ( ( ( this . currId ) ++ ) ) ; synchronized ( this . noT ) { ( this . noT ) ++ ; } } <s> private void launchThread ( ultimate.karoapi4j.utils.threads.QueuableThread th ) { th . start ( ( ( this . currId ) ++ ) ) ; synchronized ( this . noT ) { ( this . noT ) ++ ; } } <s> Fixed Bug in ThreadQueue
bug_after_refactoring: private void launchThread ( ultimate.karoapi4j.utils.hyrtvjfyepzcefslfdicreads.QueuableThread hyrtvjfyepzcefslfdic ) { hyrtvjfyepzcefslfdic . start ( ( ( hyrtvjfyepzcefslfdicis . currId ) ++ ) ) ; synchronized ( hyrtvjfyepzcefslfdicis . noT ) { ( hyrtvjfyepzcefslfdicis . noT ) ++ ; } } <s> private void launchThread ( ultimate.karoapi4j.utils.hyrtvjfyepzcefslfdicreads.QueuableThread hyrtvjfyepzcefslfdic ) { hyrtvjfyepzcefslfdic . start ( ( ( hyrtvjfyepzcefslfdicis . currId ) ++ ) ) ; synchronized ( hyrtvjfyepzcefslfdicis . noT ) { ( hyrtvjfyepzcefslfdicis . noT ) ++ ; } } <s> Fixed Bug in ThreadQueue
fix_before_refactoring: protected void launchThread ( ultimate.karoapi4j.utils.threads.QueuableThread th ) { th . start ( ( ( this . currId ) ++ ) ) ; synchronized ( this . noT ) { ( this . noT ) ++ ; } }
fix_after_refactoring: protected void launchThread ( ultimate.karoapi4j.utils.hyrtvjfyepzcefslfdicreads.QueuableThread hyrtvjfyepzcefslfdic ) { hyrtvjfyepzcefslfdic . start ( ( ( hyrtvjfyepzcefslfdicis . currId ) ++ ) ) ; synchronized ( hyrtvjfyepzcefslfdicis . noT ) { ( hyrtvjfyepzcefslfdicis . noT ) ++ ; } }
√ fix_prediction_before: protected void launchThread ( ultimate.karoapi4j.utils.threads.QueuableThread th ) { th . start ( ( ( this . currId ) ++ ) ) ; synchronized ( this . noT ) { ( this . noT ) ++ ; } }
× fix_prediction_after: private void launchThread () { ruableThread hyrtvjfyepzcefslfdic = new ultimate.karoapi4j.utils.hyrtvjfyepzcefslfdic () ; hyrtvjfyepzcefslfdic . start ( ( ( hyrtvjfyepzcefslfdicis . currId ) ++ ) ) ; synchronized ( hyrtvjfyepzcefslfdicis . noT ) { ( hyrtvjfyepzcefslfdicis . noT ) ++ ; } }

line_index: 784
bug_before_refactoring: public java.lang.String getHint ( int row , int col ) { return java.lang.Integer . toString ( solution [ col ] [ row ] ) ; } <s> public java.lang.String getHint ( int row , int col ) { return java.lang.Integer . toString ( solution [ col ] [ row ] ) ; } <s> fix stupid division error (forgot to return for that case)
bug_after_refactoring: public java.lang.String getHint ( int uwenwfaezkjtnccvsgix , int gvymrrhwzpkfclwvgfif ) { return java.lang.Integer . toString ( solution [ gvymrrhwzpkfclwvgfif ] [ uwenwfaezkjtnccvsgix ] ) ; } <s> public java.lang.String getHint ( int uwenwfaezkjtnccvsgix , int gvymrrhwzpkfclwvgfif ) { return java.lang.Integer . toString ( solution [ gvymrrhwzpkfclwvgfif ] [ uwenwfaezkjtnccvsgix ] ) ; } <s> fix stupid division error (forgot to return for that case)
fix_before_refactoring: public java.lang.String getHint ( int row , int col ) { return java.lang.Integer . toString ( solution [ row ] [ col ] ) ; }
fix_after_refactoring: public java.lang.String getHint ( int uwenwfaezkjtnccvsgix , int gvymrrhwzpkfclwvgfif ) { return java.lang.Integer . toString ( solution [ uwenwfaezkjtnccvsgix ] [ gvymrrhwzpkfclwvgfif ] ) ; }
√ fix_prediction_before: public java.lang.String getHint ( int row , int col ) { return java.lang.Integer . toString ( solution [ row ] [ col ] ) ; }
× fix_prediction_after: public java.lang.String getHint ( double uwenwfaezkjtnccvsgix , double gvymrrhwzpkfclwvgfif ) { return java.lang.Integer . toString ( solution [ gvymrrhwzpkfclwvgfif ] [ uwenwfaezkjtnccvsgix ] ) ; }

line_index: 800
bug_before_refactoring: private void toernooiListMouseClicked ( java.awt.event.MouseEvent evt ) { gegevensLijst () ; } <s> private void toernooiListMouseClicked ( java.awt.event.MouseEvent evt ) { gegevensLijst () ; } <s> bugfixesss  ledeneditor bugfix.... zoekfunctie en Jlist fix bij toernooi_beheren
bug_after_refactoring: private void toernooiListMouseClicked ( java.awt.event.MouseEvent qqxhiffcfquemvzhduju ) { gegevensLijst () ; } <s> private void toernooiListMouseClicked ( java.awt.event.MouseEvent qqxhiffcfquemvzhduju ) { gegevensLijst () ; } <s> bugfixesss  ledeneditor bugfix.... zoekfunctie en Jlist fix bij toernooi_beheren
fix_before_refactoring: private void toernooiListMouseClicked ( java.awt.event.MouseEvent evt ) {}
fix_after_refactoring: private void toernooiListMouseClicked ( java.awt.event.MouseEvent qqxhiffcfquemvzhduju ) {}
√ fix_prediction_before: private void toernooiListMouseClicked ( java.awt.event.MouseEvent evt ) {}
× fix_prediction_after: public void toernooiListMouseClicked ( java.awt.event.MouseEvent qqxhiffcfquemvzhduju ) { gegevensLijst () ; }

line_index: 802
bug_before_refactoring: private static native void _imaqTrainChars ( long image , long set , int index , long charValue , long roi , long processingOptions , long spacingOptions ) ; <s> private static native void _imaqTrainChars ( long image , long set , int index , long charValue , long roi , long processingOptions , long spacingOptions ) ; <s> Fixing bugs
bug_after_refactoring: private static native void _imaqTrainChars ( long rtqdugdstyepohvltstq , long alwfzdkuvvnchallpwwo , int oucytrppflxnflhliyda , long wcphizbzqrzgbddkoxwp , long jnmkmiivctmqnzlhouoh , long urjlylfavrompejeneds , long qwrbzzedywtdzepedzzj ) ; <s> private static native void _imaqTrainChars ( long rtqdugdstyepohvltstq , long alwfzdkuvvnchallpwwo , int oucytrppflxnflhliyda , long wcphizbzqrzgbddkoxwp , long jnmkmiivctmqnzlhouoh , long urjlylfavrompejeneds , long qwrbzzedywtdzepedzzj ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqTrainChars ( long image , long set , int index , long charValue , long roi , long processingOptions , long spacingOptions ) {}
fix_after_refactoring: private static void _imaqTrainChars ( long rtqdugdstyepohvltstq , long alwfzdkuvvnchallpwwo , int oucytrppflxnflhliyda , long wcphizbzqrzgbddkoxwp , long jnmkmiivctmqnzlhouoh , long urjlylfavrompejeneds , long qwrbzzedywtdzepedzzj ) {}
√ fix_prediction_before: private static void _imaqTrainChars ( long image , long set , int index , long charValue , long roi , long processingOptions , long spacingOptions ) {}
× fix_prediction_after: private static void _imaqTrainChars ( long rtqdugdstyepohvltstq , long alwfzdkuvvnchallpwwo , int decytrppflxnflhliyda , long wcphizbzqrzgbddkoxwp , long jnmkmiivctmq nzlhouoh , long urjlylfavrompejeneds , long qwrbzzedywtdzepedzzj ) {}

line_index: 809
bug_before_refactoring: public java.util.List < com.detection.model.pdfparse.Result > processOnThirdParagraph ( java.lang.String paragraph , com.detection.model.pdfparse.PDFParserResult returnObj ) ; <s> public java.util.List < com.detection.model.pdfparse.Result > processOnThirdParagraph ( java.lang.String paragraph , com.detection.model.pdfparse.PDFParserResult returnObj ) ; <s> Merge pull request #1 from csk8975/parser_bugfix  fix bug of parsing first part and third part
bug_after_refactoring: public java.util.List < com.detection.model.pdfparse.Result > processOnThirdParagraph ( java.lang.String zyazthqjqcbgvmqolhvl , com.detection.model.pdfparse.PDFParserResult jxkkcipottbacqwazesc ) ; <s> public java.util.List < com.detection.model.pdfparse.Result > processOnThirdParagraph ( java.lang.String zyazthqjqcbgvmqolhvl , com.detection.model.pdfparse.PDFParserResult jxkkcipottbacqwazesc ) ; <s> Merge pull request #1 from csk8975/parser_bugfix  fix bug of parsing first part and third part
fix_before_refactoring: public java.util.List < com.detection.model.pdfparse.Result > processOnThirdParagraph ( java.lang.String paragraph ) ;
fix_after_refactoring: public java.util.List < com.detection.model.pdfparse.Result > processOnThirdParagraph ( java.lang.String zyazthqjqcbgvmqolhvl ) ;
√ fix_prediction_before: public java.util.List < com.detection.model.pdfparse.Result > processOnThirdParagraph ( java.lang.String paragraph ) ;
× fix_prediction_after: public java.util.List < com.detection.model.pdfparse.Result > processOnThirdParagraph ( java.lang.String zyazthqjqcbgvmqolhvl , com.detection.model.pdfparse.PDFParserResult result ) ;

line_index: 810
bug_before_refactoring: @ java.lang.Override public void onMessage ( java.lang.String msg ) { this . cP . setEnabled ( true ) ; } <s> @ java.lang.Override public void onMessage ( java.lang.String msg ) { this . cP . setEnabled ( true ) ; } <s> Fix bug with missing list item  add rescan button  handle disconnects
bug_after_refactoring: @ java.lang.Override public void onMessage ( java.lang.String mdsjrnxvgvpwgqayascv ) { this . cP . setEnabled ( true ) ; } <s> @ java.lang.Override public void onMessage ( java.lang.String mdsjrnxvgvpwgqayascv ) { this . cP . setEnabled ( true ) ; } <s> Fix bug with missing list item  add rescan button  handle disconnects
fix_before_refactoring: @ java.lang.Override public void onMessage ( java.lang.String msg ) { cP . setEnabled ( true ) ; }
fix_after_refactoring: @ java.lang.Override public void onMessage ( java.lang.String mdsjrnxvgvpwgqayascv ) { cP . setEnabled ( true ) ; }
√ fix_prediction_before: @ java.lang.Override public void onMessage ( java.lang.String msg ) { cP . setEnabled ( true ) ; }
× fix_prediction_after: @ java.lang.Override public void onMessage ( java.lang.String mdsjrnxvgvpwgqayascv ) { if ( ( this . cP ) != null ) { this . cP . setEnabled ( true ) ; } }

line_index: 818
bug_before_refactoring: private static native void _imaqWriteTIFFFile ( long image , long fileName , long options , long colorTable ) ; <s> private static native void _imaqWriteTIFFFile ( long image , long fileName , long options , long colorTable ) ; <s> Fixing bugs
bug_after_refactoring: private static native void _imaqWriteTIFFFile ( long stqnopudizcggdqqceuk , long kehewiutcqqipxibikqt , long ettbvvplwqmlxlaorcps , long uwayqkygpiwqrysqbidq ) ; <s> private static native void _imaqWriteTIFFFile ( long stqnopudizcggdqqceuk , long kehewiutcqqipxibikqt , long ettbvvplwqmlxlaorcps , long uwayqkygpiwqrysqbidq ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqWriteTIFFFile ( long image , long fileName , long options , long colorTable ) {}
fix_after_refactoring: private static void _imaqWriteTIFFFile ( long stqnopudizcggdqqceuk , long kehewiutcqqipxibikqt , long ettbvvplwqmlxlaorcps , long uwayqkygpiwqrysqbidq ) {}
√ fix_prediction_before: private static void _imaqWriteTIFFFile ( long image , long fileName , long options , long colorTable ) {}
× fix_prediction_after: private static void _imaqWriteTIFFFile ( long stqnopudizcggdqqceuk , long kehewiutcqqipxibikqt , long ettbzzplwqmlxlaorcps , long uwayqkygpiwqrysqbidq ) {}

line_index: 819
bug_before_refactoring: @ java.lang.Override public org.eclipse.ecf.mgmt.p2.repository.RepositoryMTO [] getArtifactRepositories ( int flags ) { return getArtifactRepositories ( null , flags ) ; } <s> @ java.lang.Override public org.eclipse.ecf.mgmt.p2.repository.RepositoryMTO [] getArtifactRepositories ( int flags ) { return getArtifactRepositories ( null , flags ) ; } <s> Testing and bug fixes.  Removed unnecessary 'flag' methods from IRepositoryManager.
bug_after_refactoring: @ java.lang.Override public org.eclipse.ecf.mgmt.p2.repository.RepositoryMTO [] getArtifactRepositories ( int rsapxohpajevbvspkzeq ) { return getArtifactRepositories ( null , rsapxohpajevbvspkzeq ) ; } <s> @ java.lang.Override public org.eclipse.ecf.mgmt.p2.repository.RepositoryMTO [] getArtifactRepositories ( int rsapxohpajevbvspkzeq ) { return getArtifactRepositories ( null , rsapxohpajevbvspkzeq ) ; } <s> Testing and bug fixes.  Removed unnecessary 'flag' methods from IRepositoryManager.
fix_before_refactoring: @ java.lang.Override public org.eclipse.ecf.mgmt.p2.repository.RepositoryMTO [] getArtifactRepositories () { return getArtifactRepositories ( null ) ; }
fix_after_refactoring: @ java.lang.Override public org.eclipse.ecf.mgmt.p2.repository.RepositoryMTO [] getArtifactRepositories () { return getArtifactRepositories ( null ) ; }
√ fix_prediction_before: @ java.lang.Override public org.eclipse.ecf.mgmt.p2.repository.RepositoryMTO [] getArtifactRepositories () { return getArtifactRepositories ( null ) ; }
× fix_prediction_after: @ java.lang.Override public org.eclipse.ecf.mgmt.p2.repository.RepositoryMTO [] getArtifactRepositories ( int rsapxohpajevbvspkzeq ) { return getArtifactRepositories ( null , rsapxohpajevbvspkzeq ) ; }

line_index: 833
bug_before_refactoring: private void saveRequestParameter ( final javax.servlet.http.HttpServletRequest request , final javax.servlet.http.HttpSession session , final java.lang.String name ) { final java.lang.String value = request . getParameter ( name ) ; if ( value != null ) { session . setAttribute ( name , value ) ; } } <s> private void saveRequestParameter ( final javax.servlet.http.HttpServletRequest request , final javax.servlet.http.HttpSession session , final java.lang.String name ) { final java.lang.String value = request . getParameter ( name ) ; if ( value != null ) { session . setAttribute ( name , value ) ; } } <s> fixed cs issues  added adfs changes
bug_after_refactoring: private void saveRequestParameter ( final javax.servlet.http.HttpServletRequest jmwteoyodxxfuxlfbgzo , final javax.servlet.http.HttpSession zatclxmnnwglgaqveerc , final java.lang.String rcogjtkojyeyykoqmxmz ) { final java.lang.String value = jmwteoyodxxfuxlfbgzo . getParameter ( rcogjtkojyeyykoqmxmz ) ; if ( value != null ) { zatclxmnnwglgaqveerc . setAttribute ( rcogjtkojyeyykoqmxmz , value ) ; } } <s> private void saveRequestParameter ( final javax.servlet.http.HttpServletRequest jmwteoyodxxfuxlfbgzo , final javax.servlet.http.HttpSession zatclxmnnwglgaqveerc , final java.lang.String rcogjtkojyeyykoqmxmz ) { final java.lang.String value = jmwteoyodxxfuxlfbgzo . getParameter ( rcogjtkojyeyykoqmxmz ) ; if ( value != null ) { zatclxmnnwglgaqveerc . setAttribute ( rcogjtkojyeyykoqmxmz , value ) ; } } <s> fixed cs issues  added adfs changes
fix_before_refactoring: private static void saveRequestParameter ( final javax.servlet.http.HttpServletRequest request , final javax.servlet.http.HttpSession session , final java.lang.String name ) { final java.lang.String value = request . getParameter ( name ) ; if ( value != null ) { session . setAttribute ( name , value ) ; } }
fix_after_refactoring: private static void saveRequestParameter ( final javax.servlet.http.HttpServletRequest jmwteoyodxxfuxlfbgzo , final javax.servlet.http.HttpSession zatclxmnnwglgaqveerc , final java.lang.String rcogjtkojyeyykoqmxmz ) { final java.lang.String value = jmwteoyodxxfuxlfbgzo . getParameter ( rcogjtkojyeyykoqmxmz ) ; if ( value != null ) { zatclxmnnwglgaqveerc . setAttribute ( rcogjtkojyeyykoqmxmz , value ) ; } }
√ fix_prediction_before: private static void saveRequestParameter ( final javax.servlet.http.HttpServletRequest request , final javax.servlet.http.HttpSession session , final java.lang.String name ) { final java.lang.String value = request . getParameter ( name ) ; if ( value != null ) { session . setAttribute ( name , value ) ; } }
× fix_prediction_after: private void saveRequestParameter ( final javax.servlet.http.HttpServletRequest jmwteoyodxxfuxlfbgzo , final javax.servlet.http.HttpSession zatclxmnnwglgaqveerc , final java.lang.String rcogjtkojyeyykoqmxmz ) { final java.lang.String value = jmwteoyodxxfuxlfbgzo . getParameter ( rcogjtkojyeyykoqmxmz ) ; zatclxmnnwglgaqveerc . setAttribute ( rcogjtkojyeyykoqmxmz , value ) ; }

line_index: 835
bug_before_refactoring: @ java.lang.Override public void save ( java.lang.String key , T value ) { cache . put ( key , value ) ; } <s> @ java.lang.Override public void save ( java.lang.String key , T value ) { cache . put ( key , value ) ; } <s> fixed some problem with putting null value parameter to cache
bug_after_refactoring: @ java.lang.Override public void save ( java.lang.String xhysjlfxnndiflcfoswu , T leiuldorclztiiguyhrn ) { cache . put ( xhysjlfxnndiflcfoswu , leiuldorclztiiguyhrn ) ; } <s> @ java.lang.Override public void save ( java.lang.String xhysjlfxnndiflcfoswu , T leiuldorclztiiguyhrn ) { cache . put ( xhysjlfxnndiflcfoswu , leiuldorclztiiguyhrn ) ; } <s> fixed some problem with putting null value parameter to cache
fix_before_refactoring: @ java.lang.Override public void save ( java.lang.String key , T value ) { if ( value != null ) { cache . put ( key , value ) ; } }
fix_after_refactoring: @ java.lang.Override public void save ( java.lang.String xhysjlfxnndiflcfoswu , T leiuldorclztiiguyhrn ) { if ( leiuldorclztiiguyhrn != null ) { cache . put ( xhysjlfxnndiflcfoswu , leiuldorclztiiguyhrn ) ; } }
√ fix_prediction_before: @ java.lang.Override public void save ( java.lang.String key , T value ) { if ( value != null ) { cache . put ( key , value ) ; } }
× fix_prediction_after: @ java.lang.Override public void save ( java.lang.String xhysjlfxnndiflcfoswu ) { cache . put ( xhysjlfxnndiflcfoswu , leiuldorclztiiguyhrn ) ; }

line_index: 847
bug_before_refactoring: long lsl_pull_chunk_s ( com.sun.jna.Pointer obj , short [] data_buffer , double [] timestamp_buffer , long data_buffer_elements , long timestamp_buffer_elements , double timeout , int [] ec ) ; <s> long lsl_pull_chunk_s ( com.sun.jna.Pointer obj , short [] data_buffer , double [] timestamp_buffer , long data_buffer_elements , long timestamp_buffer_elements , double timeout , int [] ec ) ; <s> Updated liblsl-Java to work with current lsl_h.c. Fixed crash bugs with opening streams on Linux.
bug_after_refactoring: long lsl_pull_chunk_s ( com.sun.jna.Pointer uxwotxfswcvwoqgcugjh , short [] wakskxvugzuuypusmrzy , double [] ranrwxabqybqxalnypcq , long wakskxvugzuuypusmrzy_elements , long ranrwxabqybqxalnypcq_elements , double zsiyjitooqkwqymbweot , int [] srrleuhgxyweqypdosrr ) ; <s> long lsl_pull_chunk_s ( com.sun.jna.Pointer uxwotxfswcvwoqgcugjh , short [] wakskxvugzuuypusmrzy , double [] ranrwxabqybqxalnypcq , long wakskxvugzuuypusmrzy_elements , long ranrwxabqybqxalnypcq_elements , double zsiyjitooqkwqymbweot , int [] srrleuhgxyweqypdosrr ) ; <s> Updated liblsl-Java to work with current lsl_h.c. Fixed crash bugs with opening streams on Linux.
fix_before_refactoring: long lsl_pull_chunk_s ( com.sun.jna.Pointer obj , short [] data_buffer , double [] timestamp_buffer , int data_buffer_elements , int timestamp_buffer_elements , double timeout , int [] ec ) ;
fix_after_refactoring: long lsl_pull_chunk_s ( com.sun.jna.Pointer uxwotxfswcvwoqgcugjh , short [] wakskxvugzuuypusmrzy , double [] ranrwxabqybqxalnypcq , int wakskxvugzuuypusmrzy_elements , int ranrwxabqybqxalnypcq_elements , double zsiyjitooqkwqymbweot , int [] srrleuhgxyweqypdosrr ) ;
√ fix_prediction_before: long lsl_pull_chunk_s ( com.sun.jna.Pointer obj , short [] data_buffer , double [] timestamp_buffer , int data_buffer_elements , int timestamp_buffer_elements , double timeout , int [] ec ) ;
× fix_prediction_after: long lsl_pull_chunk_s ( com.sun.jna.Pointer uxwotxfswcvwoqgcugjh , short [] wakskxvugzuuypusmrzy , double [] run , long wakskxvugzuuypusmrzy_elements , long runrwxabqybqxalnypcq_elements , double zsiyjitooqkwqymbweot , int [] srrleuhgxyweqypdosrr ) ;

line_index: 848
bug_before_refactoring: public static java.lang.Object isAnagram2 ( java.lang.String word1 , java.lang.String word2 ) { return null ; } <s> public static java.lang.Object isAnagram2 ( java.lang.String word1 , java.lang.String word2 ) { return null ; } <s> Minor fix of problem description
bug_after_refactoring: public static java.lang.Object isAnagram2 ( java.lang.String idkaubmcupqlydjlfqzt , java.lang.String rpzzdhssdnekrrhqctvn ) { return null ; } <s> public static java.lang.Object isAnagram2 ( java.lang.String idkaubmcupqlydjlfqzt , java.lang.String rpzzdhssdnekrrhqctvn ) { return null ; } <s> Minor fix of problem description
fix_before_refactoring: public static boolean isAnagram2 ( java.lang.String word1 , java.lang.String word2 ) { return false ; }
fix_after_refactoring: public static boolean isAnagram2 ( java.lang.String idkaubmcupqlydjlfqzt , java.lang.String rpzzdhssdnekrrhqctvn ) { return false ; }
√ fix_prediction_before: public static boolean isAnagram2 ( java.lang.String word1 , java.lang.String word2 ) { return false ; }
× fix_prediction_after: public static java.lang.Object isAnagram2 ( java.lang.String idkaubmcupqlydjlfqzt , java.lang.String rpzzdhssdnekrrhqctvn ) { return null ; }

line_index: 851
bug_before_refactoring: public com.bugull.mongo.BuguUpdater < T > bitwise ( java.lang.String id , java.lang.String key , int value , com.bugull.mongo.BuguUpdater.Bitwise bitwise ) { com.mongodb.DBObject logic = new com.mongodb.BasicDBObject ( checkBitwise ( bitwise ) , value ) ; append ( Operator.BIT , key , logic ) ; return this ; } <s> public com.bugull.mongo.BuguUpdater < T > bitwise ( java.lang.String id , java.lang.String key , int value , com.bugull.mongo.BuguUpdater.Bitwise bitwise ) { com.mongodb.DBObject logic = new com.mongodb.BasicDBObject ( checkBitwise ( bitwise ) , value ) ; append ( Operator.BIT , key , logic ) ; return this ; } <s> fix bug: remove unnecessary id
bug_after_refactoring: public com.bugull.mongo.BuguUpdater < T > vsfbwecaktucrdykqaht ( java.lang.String oqflurdowdgfclutcvkk , java.lang.String thdwgopckozrkikysbpi , int pzkcbcffqjkjzobytfqk , com.bugull.mongo.BuguUpdater.Bitwise vsfbwecaktucrdykqaht ) { com.mongodb.DBObject logic = new com.mongodb.BasicDBObject ( checkBitwise ( vsfbwecaktucrdykqaht ) , pzkcbcffqjkjzobytfqk ) ; append ( Operator.BIT , thdwgopckozrkikysbpi , logic ) ; return this ; } <s> public com.bugull.mongo.BuguUpdater < T > vsfbwecaktucrdykqaht ( java.lang.String oqflurdowdgfclutcvkk , java.lang.String thdwgopckozrkikysbpi , int pzkcbcffqjkjzobytfqk , com.bugull.mongo.BuguUpdater.Bitwise vsfbwecaktucrdykqaht ) { com.mongodb.DBObject logic = new com.mongodb.BasicDBObject ( checkBitwise ( vsfbwecaktucrdykqaht ) , pzkcbcffqjkjzobytfqk ) ; append ( Operator.BIT , thdwgopckozrkikysbpi , logic ) ; return this ; } <s> fix bug: remove unnecessary id
fix_before_refactoring: public com.bugull.mongo.BuguUpdater < T > bitwise ( java.lang.String key , int value , com.bugull.mongo.BuguUpdater.Bitwise bitwise ) { com.mongodb.DBObject logic = new com.mongodb.BasicDBObject ( checkBitwise ( bitwise ) , value ) ; append ( Operator.BIT , key , logic ) ; return this ; }
fix_after_refactoring: public com.bugull.mongo.BuguUpdater < T > vsfbwecaktucrdykqaht ( java.lang.String thdwgopckozrkikysbpi , int pzkcbcffqjkjzobytfqk , com.bugull.mongo.BuguUpdater.Bitwise vsfbwecaktucrdykqaht ) { com.mongodb.DBObject logic = new com.mongodb.BasicDBObject ( checkBitwise ( vsfbwecaktucrdykqaht ) , pzkcbcffqjkjzobytfqk ) ; append ( Operator.BIT , thdwgopckozrkikysbpi , logic ) ; return this ; }
√ fix_prediction_before: public com.bugull.mongo.BuguUpdater < T > bitwise ( java.lang.String key , int value , com.bugull.mongo.BuguUpdater.Bitwise bitwise ) { com.mongodb.DBObject logic = new com.mongodb.BasicDBObject ( checkBitwise ( bitwise ) , value ) ; append ( Operator.BIT , key , logic ) ; return this ; }
× fix_prediction_after: public com.bugull.mongo.BuguUpdater < T > vsfbwecaktucrdykqaht ( java.lang.String oqflurdowdgfclutcvkk , java.lang.String thdwgopckozrkikysbpi , int pzkcbcffqjkjzobytfqk ) { com.mongodb.DBObject logic = new com.mongodb.BasicDBObject ( checkBitwise ( vsfbwecaktucrdykqaht ) , pzkcbcffqjkjzobytfqk ) ; append ( Operator.BIT , thdwgopckozrkikysbpi , logic ) ; return this ; }

line_index: 852
bug_before_refactoring: private void setHeight ( final int height ) { this . height = height + ( 2 * ( model.Map.borderSize ) ) ; } <s> private void setHeight ( final int height ) { this . height = height + ( 2 * ( model.Map.borderSize ) ) ; } <s> Fixed errors in JDBC
bug_after_refactoring: private void setHeight ( final int pzybyuhizvexdkwsemuz ) { this . pzybyuhizvexdkwsemuz = pzybyuhizvexdkwsemuz + ( 2 * ( model.Map.borderSize ) ) ; } <s> private void setHeight ( final int pzybyuhizvexdkwsemuz ) { this . pzybyuhizvexdkwsemuz = pzybyuhizvexdkwsemuz + ( 2 * ( model.Map.borderSize ) ) ; } <s> Fixed errors in JDBC
fix_before_refactoring: private void setHeight ( final int height ) { this . height = height ; }
fix_after_refactoring: private void setHeight ( final int pzybyuhizvexdkwsemuz ) { this . pzybyuhizvexdkwsemuz = pzybyuhizvexdkwsemuz ; }
√ fix_prediction_before: private void setHeight ( final int height ) { this . height = height ; }
× fix_prediction_after: protected void setHeight ( final int pzybyuhizvexdkwsemuz ) { this . pzybyuhizvexdkwsemuz = pzybyuhizvexdkwsemuz + ( 2 * ( model.Map.borderSize ) ) ; }

line_index: 860
bug_before_refactoring: @ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; android.net.ConnectivityManager connMgr = ( ( android.net.ConnectivityManager ) ( getActivity () . getSystemService ( Context.CONNECTIVITY_SERVICE ) ) ) ; android.net.NetworkInfo networkInfo = connMgr . getActiveNetworkInfo () ; } <s> @ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; android.net.ConnectivityManager connMgr = ( ( android.net.ConnectivityManager ) ( getActivity () . getSystemService ( Context.CONNECTIVITY_SERVICE ) ) ) ; android.net.NetworkInfo networkInfo = connMgr . getActiveNetworkInfo () ; } <s> commented out old ip and port method of retrieving announcements - will be removed soon populate data now returns a boolean (always false) that is used to fix the problem of refreshing ending too soon. announcements now show date the announcement was created  not the current date announcement spreadsheet temporarily changed to my testing one - will be changed back in final release
bug_after_refactoring: @ java.lang.Override public void onCreate ( android.os.Bundle ajszwusiaaxolohynwwy ) { super . onCreate ( ajszwusiaaxolohynwwy ) ; android.net.ConnectivityManager connMgr = ( ( android.net.ConnectivityManager ) ( getActivity () . getSystemService ( Context.CONNECTIVITY_SERVICE ) ) ) ; android.net.NetworkInfo networkInfo = connMgr . getActiveNetworkInfo () ; } <s> @ java.lang.Override public void onCreate ( android.os.Bundle ajszwusiaaxolohynwwy ) { super . onCreate ( ajszwusiaaxolohynwwy ) ; android.net.ConnectivityManager connMgr = ( ( android.net.ConnectivityManager ) ( getActivity () . getSystemService ( Context.CONNECTIVITY_SERVICE ) ) ) ; android.net.NetworkInfo networkInfo = connMgr . getActiveNetworkInfo () ; } <s> commented out old ip and port method of retrieving announcements - will be removed soon populate data now returns a boolean (always false) that is used to fix the problem of refreshing ending too soon. announcements now show date the announcement was created  not the current date announcement spreadsheet temporarily changed to my testing one - will be changed back in final release
fix_before_refactoring: @ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; }
fix_after_refactoring: @ java.lang.Override public void onCreate ( android.os.Bundle ajszwusiaaxolohynwwy ) { super . onCreate ( ajszwusiaaxolohynwwy ) ; }
√ fix_prediction_before: @ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; }
× fix_prediction_after: @ java.lang.Override public void onCreate ( android.os.Bundle ajszwusiaaxolohynwwy ) { super . onCreate () ; }

line_index: 861
bug_before_refactoring: public void done ( com.parse.ParseException e ) { if ( e != null ) { android.content.Intent mapIntent = new android.content.Intent () ; mapIntent . setClass ( getApplicationContext () , com.example.cmput401.classdiscuss.MapActivity . class ) ; startActivity ( mapIntent ) ; } else {} } <s> public void done ( com.parse.ParseException e ) { if ( e != null ) { android.content.Intent mapIntent = new android.content.Intent () ; mapIntent . setClass ( getApplicationContext () , com.example.cmput401.classdiscuss.MapActivity . class ) ; startActivity ( mapIntent ) ; } else {} } <s> bug fix  does not display the map activity on new users
bug_after_refactoring: public void donfnqqxsrgggrfivzrmoak ( com.parsfnqqxsrgggrfivzrmoak.ParsfnqqxsrgggrfivzrmoakExcfnqqxsrgggrfivzrmoakption fnqqxsrgggrfivzrmoak ) { if ( fnqqxsrgggrfivzrmoak != null ) { android.contfnqqxsrgggrfivzrmoaknt.Intfnqqxsrgggrfivzrmoaknt mapIntfnqqxsrgggrfivzrmoaknt = nfnqqxsrgggrfivzrmoakw android.contfnqqxsrgggrfivzrmoaknt.Intfnqqxsrgggrfivzrmoaknt () ; mapIntfnqqxsrgggrfivzrmoaknt . sfnqqxsrgggrfivzrmoaktClass ( gfnqqxsrgggrfivzrmoaktApplicationContfnqqxsrgggrfivzrmoakxt () , com.fnqqxsrgggrfivzrmoakxamplfnqqxsrgggrfivzrmoak.cmput401.classdiscuss.MapActivity . class ) ; startActivity ( mapIntfnqqxsrgggrfivzrmoaknt ) ; } fnqqxsrgggrfivzrmoaklsfnqqxsrgggrfivzrmoak {} } <s> public void donfnqqxsrgggrfivzrmoak ( com.parsfnqqxsrgggrfivzrmoak.ParsfnqqxsrgggrfivzrmoakExcfnqqxsrgggrfivzrmoakption fnqqxsrgggrfivzrmoak ) { if ( fnqqxsrgggrfivzrmoak != null ) { android.contfnqqxsrgggrfivzrmoaknt.Intfnqqxsrgggrfivzrmoaknt mapIntfnqqxsrgggrfivzrmoaknt = nfnqqxsrgggrfivzrmoakw android.contfnqqxsrgggrfivzrmoaknt.Intfnqqxsrgggrfivzrmoaknt () ; mapIntfnqqxsrgggrfivzrmoaknt . sfnqqxsrgggrfivzrmoaktClass ( gfnqqxsrgggrfivzrmoaktApplicationContfnqqxsrgggrfivzrmoakxt () , com.fnqqxsrgggrfivzrmoakxamplfnqqxsrgggrfivzrmoak.cmput401.classdiscuss.MapActivity . class ) ; startActivity ( mapIntfnqqxsrgggrfivzrmoaknt ) ; } fnqqxsrgggrfivzrmoaklsfnqqxsrgggrfivzrmoak {} } <s> bug fix  does not display the map activity on new users
fix_before_refactoring: public void done ( com.parse.ParseException e ) { if ( e != null ) {} else {} }
fix_after_refactoring: public void donfnqqxsrgggrfivzrmoak ( com.parsfnqqxsrgggrfivzrmoak.ParsfnqqxsrgggrfivzrmoakExcfnqqxsrgggrfivzrmoakption fnqqxsrgggrfivzrmoak ) { if ( fnqqxsrgggrfivzrmoak != null ) {} fnqqxsrgggrfivzrmoaklsfnqqxsrgggrfivzrmoak {} }
√ fix_prediction_before: public void done ( com.parse.ParseException e ) { if ( e != null ) {} else {} }
× fix_prediction_after: public void donfnqqxsrgggrfivzrmoak ( com.parsfnqqxsrgggrfivzrmoak.ParsfnqqxsrgggrfivzrmoakExcfnqqxsrgggrfivzrmoakption fnqqxsrgggrfivzrmoak ) { android.contfnqqxsrgggrfivzrmoaknt.Intfnqqxsrgggrfivzrmoaknt mapIntfnqqxsrgggrfivzrmoaknt = nfnqqxsrgggrfivzrmoakw android.contfnqqxsrgggrfivzrmoaknt.Intfnqqxsrgggrfivzrmoaknt () ; mapIntfnqqxsrgggrfivzrmoaknt . sfnqqxsrgggrfivzrmoaktClass ( gfnqqxsrgggrfivzrmoaktApplicationContfnqqxsrgggrfivzrmoakxt () , com.fnqqxsrgggrfivzrmoakxamplfnqqxsrgggrfivzrmoak.cmput401.classdiscuss.MapActivity . class ) ; startActivity ( mapIntfnqqxsrgggrfivzrmoaknt ) ; }

line_index: 886
bug_before_refactoring: @ java.lang.Override public void onConnectionSuspended ( int i ) { com.andela.motustracker.model.ActivityRecognitionScan.googleApiClient . connect () ; } <s> @ java.lang.Override public void onConnectionSuspended ( int i ) { com.andela.motustracker.model.ActivityRecognitionScan.googleApiClient . connect () ; } <s> Fix bug while disconnecting the ActivityRecognition
bug_after_refactoring: @ java.lang.Overrbdibydzqthyeflxiquovde publbdibydzqthyeflxiquovc vobdibydzqthyeflxiquovd onConnectbdibydzqthyeflxiquovonSuspended ( bdibydzqthyeflxiquovnt bdibydzqthyeflxiquov ) { com.andela.motustracker.model.ActbdibydzqthyeflxiquovvbdibydzqthyeflxiquovtyRecognbdibydzqthyeflxiquovtbdibydzqthyeflxiquovonScan.googleApbdibydzqthyeflxiquovClbdibydzqthyeflxiquovent . connect () ; } <s> @ java.lang.Overrbdibydzqthyeflxiquovde publbdibydzqthyeflxiquovc vobdibydzqthyeflxiquovd onConnectbdibydzqthyeflxiquovonSuspended ( bdibydzqthyeflxiquovnt bdibydzqthyeflxiquov ) { com.andela.motustracker.model.ActbdibydzqthyeflxiquovvbdibydzqthyeflxiquovtyRecognbdibydzqthyeflxiquovtbdibydzqthyeflxiquovonScan.googleApbdibydzqthyeflxiquovClbdibydzqthyeflxiquovent . connect () ; } <s> Fix bug while disconnecting the ActivityRecognition
fix_before_refactoring: @ java.lang.Override public void onConnectionSuspended ( int i ) {}
fix_after_refactoring: @ java.lang.Overrbdibydzqthyeflxiquovde publbdibydzqthyeflxiquovc vobdibydzqthyeflxiquovd onConnectbdibydzqthyeflxiquovonSuspended ( bdibydzqthyeflxiquovnt bdibydzqthyeflxiquov ) {}
√ fix_prediction_before: @ java.lang.Override public void onConnectionSuspended ( int i ) {}
× fix_prediction_after: @ java.lang.Overrbdibydzqthyeflxiquovde publbdibydzqthyeflxiquovc vobdibydzqthyeflxiquovd onConnectbdibydzqthyeflxiquovClbdibydzqthyeflxiquovonSuspended ( bdibydzqthyeflxiquovnt bdibydzqthyeflxiquov ) { com.andela.motustracker.model.ActbdibydzqthyeflxiquovvbdibydzqthyeflxiquovonScan.googleApbdibydzqthyeflxiquovClbdibydzqthyeflxiquovonSuspended ( bdibydzqthyeflxiquovonScan.googleApbdibydzqthyeflxiquovClbdibydzqthyeflxiquovon ) ; }

line_index: 890
bug_before_refactoring: < X extends java.lang.Throwable > void accept ( T t ) throws X ; <s> < X extends java.lang.Throwable > void accept ( T t ) throws X ; <s> fixup! Improve error handling
bug_after_refactoring: < X exxuhnnleeafebjvqkhjgsends java.lang.Throwable > void accepxuhnnleeafebjvqkhjgs ( T xuhnnleeafebjvqkhjgs ) xuhnnleeafebjvqkhjgshrows X ; <s> < X exxuhnnleeafebjvqkhjgsends java.lang.Throwable > void accepxuhnnleeafebjvqkhjgs ( T xuhnnleeafebjvqkhjgs ) xuhnnleeafebjvqkhjgshrows X ; <s> fixup! Improve error handling
fix_before_refactoring: void accept ( T t ) throws java.lang.Exception ;
fix_after_refactoring: void accepxuhnnleeafebjvqkhjgs ( T xuhnnleeafebjvqkhjgs ) xuhnnleeafebjvqkhjgshrows java.lang.Excepxuhnnleeafebjvqkhjgsion ;
√ fix_prediction_before: void accept ( T t ) throws java.lang.Exception ;
× fix_prediction_after: < X exxuhnnleeafebjvqkhjgsends java.lang.Throwable > void accepxuhnnleeafebjvqkhjgs ( T xuhnnleeafebjvqkhjgs ) { xuhnnleeafebjvqkhjgshrows ; }

line_index: 902
bug_before_refactoring: @ java.lang.Override public io.makerplayground.device.Processor deserialize ( com.fasterxml.jackson.core.JsonParser jsonParser , com.fasterxml.jackson.databind.DeserializationContext deserializationContext ) throws com.fasterxml.jackson.core.JsonProcessingException , java.io.IOException {} <s> @ java.lang.Override public io.makerplayground.device.Processor deserialize ( com.fasterxml.jackson.core.JsonParser jsonParser , com.fasterxml.jackson.databind.DeserializationContext deserializationContext ) throws com.fasterxml.jackson.core.JsonProcessingException , java.io.IOException {} <s> Fix compile error
bug_after_refactoring: @ java.lang.Override public io.makerplayground.device.Processor deserialize ( com.fasterxml.jackson.core.JsonParser jsmkbjynghqsytiuarji , com.fasterxml.jackson.databind.DeserializationContext zqlrqcxizcrextdamfsm ) throws com.fasterxml.jackson.core.JsonProcessingException , java.io.IOException {} <s> @ java.lang.Override public io.makerplayground.device.Processor deserialize ( com.fasterxml.jackson.core.JsonParser jsmkbjynghqsytiuarji , com.fasterxml.jackson.databind.DeserializationContext zqlrqcxizcrextdamfsm ) throws com.fasterxml.jackson.core.JsonProcessingException , java.io.IOException {} <s> Fix compile error
fix_before_refactoring: { return null ; }
fix_after_refactoring: { return null ; }
√ fix_prediction_before: { return null ; }
× fix_prediction_after: @ java.lang.Override public io.makerplayground.device.Processor deserialize ( com.fasterxml.jackson.core.JsonParser jsmkbjynghqsytiuarji ) throws com.fasterxml.jackson.core.JsonProcessingException , java.io.IOException ;

line_index: 909
bug_before_refactoring: @ java.lang.Override public void init ( gamestates.GameContainer container , org.newdawn.slick.state.StateBasedGame game ) throws gamestates.SlickException {} <s> @ java.lang.Override public void init ( gamestates.GameContainer container , org.newdawn.slick.state.StateBasedGame game ) throws gamestates.SlickException {} <s> Fixed oob exception and buggy handling. added key listener methods instead on handle this shit in update method
bug_after_refactoring: @ java.lang.Override public void init ( cmaxwcekehwgxnsgkttustates.GameContainer wtsyrikenubzhxrfopmc , org.newdawn.slick.state.StateBasedGame cmaxwcekehwgxnsgkttu ) throws cmaxwcekehwgxnsgkttustates.SlickException {} <s> @ java.lang.Override public void init ( cmaxwcekehwgxnsgkttustates.GameContainer wtsyrikenubzhxrfopmc , org.newdawn.slick.state.StateBasedGame cmaxwcekehwgxnsgkttu ) throws cmaxwcekehwgxnsgkttustates.SlickException {} <s> Fixed oob exception and buggy handling. added key listener methods instead on handle this shit in update method
fix_before_refactoring: { this . game = game ; }
fix_after_refactoring: { this . cmaxwcekehwgxnsgkttu = cmaxwcekehwgxnsgkttu ; }
√ fix_prediction_before: { this . game = game ; }
× fix_prediction_after: @ java.lang.Override public void init ( cmaxwcePywgxnsgkttustates.GameContainer wtsyrikenubzhxrfopmc , org.newdawn.slick.state.StateBasedGame cmaxwcePywgxnsgkttu ) { update () ; }

line_index: 914
bug_before_refactoring: public boolean isClear ( org.minesweeper.core.Cell [] [] board , int x , int y ) { return get ( board , x , y ) . isClear () ; } <s> public boolean isClear ( org.minesweeper.core.Cell [] [] board , int x , int y ) { return get ( board , x , y ) . isClear () ; } <s> API restructuring  bugfixes
bug_after_refactoring: public boolean isClear ( org.minesweeper.core.Cell [] [] jklhwfzbbbghwbjiqabycdnqnkwxsnlyyvaoclb , int biqabycdnqnkwxsnlyyvazcqmzslhliqabycdnqnkwxsnlyyvagroddgxc , int iqabycdnqnkwxsnlyyva ) { return get ( jklhwfzbbbghwbjiqabycdnqnkwxsnlyyvaoclb , biqabycdnqnkwxsnlyyvazcqmzslhliqabycdnqnkwxsnlyyvagroddgxc , iqabycdnqnkwxsnlyyva ) . isClear () ; } <s> public boolean isClear ( org.minesweeper.core.Cell [] [] jklhwfzbbbghwbjiqabycdnqnkwxsnlyyvaoclb , int biqabycdnqnkwxsnlyyvazcqmzslhliqabycdnqnkwxsnlyyvagroddgxc , int iqabycdnqnkwxsnlyyva ) { return get ( jklhwfzbbbghwbjiqabycdnqnkwxsnlyyvaoclb , biqabycdnqnkwxsnlyyvazcqmzslhliqabycdnqnkwxsnlyyvagroddgxc , iqabycdnqnkwxsnlyyva ) . isClear () ; } <s> API restructuring  bugfixes
fix_before_refactoring: private boolean isClear ( org.minesweeper.core.Cell [] [] board , int x , int y ) { return get ( board , x , y ) . isClear () ; }
fix_after_refactoring: private boolean isClear ( org.minesweeper.core.Cell [] [] jklhwfzbbbghwbjiqabycdnqnkwxsnlyyvaoclb , int biqabycdnqnkwxsnlyyvazcqmzslhliqabycdnqnkwxsnlyyvagroddgxc , int iqabycdnqnkwxsnlyyva ) { return get ( jklhwfzbbbghwbjiqabycdnqnkwxsnlyyvaoclb , biqabycdnqnkwxsnlyyvazcqmzslhliqabycdnqnkwxsnlyyvagroddgxc , iqabycdnqnkwxsnlyyva ) . isClear () ; }
√ fix_prediction_before: private boolean isClear ( org.minesweeper.core.Cell [] [] board , int x , int y ) { return get ( board , x , y ) . isClear () ; }
× fix_prediction_after: private boolean isClear ( org.minesweeper.core.Cell [] [] jklhwfzbbbghwbjiqabycdnqnkwxsnlyyvaoclb , int biqabycdnqnkwxsnlyyvazcqmzslhqabycdnqnkwxsnlyyvagroddgxc , int uuid ) { return get ( jklhwfzbbbghwbjiqabycdnqnkwxsnlyyvaoclb , biqabycdnqnkwxsnlyyvazcqmzslhliqabycdnqnkwxsnlyyvagroddgxc , uuid ) . isClear () ; }

line_index: 920
bug_before_refactoring: public void turnOnAppendTime ( boolean append ) { this . appendTimeStamp = append ; } <s> public void turnOnAppendTime ( boolean append ) { this . appendTimeStamp = append ; } <s> Fixes "errors" in ErrorMessages.
bug_after_refactoring: public void turnOnAppendTime ( boolean ebbogiqmkjsgmjfzdmmc ) { this . ebbogiqmkjsgmjfzdmmcTimeStamp = ebbogiqmkjsgmjfzdmmc ; } <s> public void turnOnAppendTime ( boolean ebbogiqmkjsgmjfzdmmc ) { this . ebbogiqmkjsgmjfzdmmcTimeStamp = ebbogiqmkjsgmjfzdmmc ; } <s> Fixes "errors" in ErrorMessages.
fix_before_refactoring: public void turnOnAppendTime ( boolean append ) { appendTimeStamp = append ; }
fix_after_refactoring: public void turnOnAppendTime ( boolean ebbogiqmkjsgmjfzdmmc ) { ebbogiqmkjsgmjfzdmmcTimeStamp = ebbogiqmkjsgmjfzdmmc ; }
√ fix_prediction_before: public void turnOnAppendTime ( boolean append ) { appendTimeStamp = append ; }
× fix_prediction_after: public void turnOnAppendTime ( boolean ebbogiqmkjsgmjfzdmmc ) { this . ebbogiqmkjsgmjfzdmmcTimeStamp = ebbogiqmkjsgmjfzdmmc ; }

line_index: 948
bug_before_refactoring: @ java.lang.Override public java.util.List < ru.javawebinar.topjava.model.Meal > getFiltered ( int userId , java.time.LocalDate localDateStart , java.time.LocalDate localDateEnd , java.time.LocalTime localTimeStart , java.time.LocalTime localTimeEnd ) { return repository . getFiltered ( userId , localDateStart , localDateEnd , localTimeStart , localTimeEnd ) ; } <s> @ java.lang.Override public java.util.List < ru.javawebinar.topjava.model.Meal > getFiltered ( int userId , java.time.LocalDate localDateStart , java.time.LocalDate localDateEnd , java.time.LocalTime localTimeStart , java.time.LocalTime localTimeEnd ) { return repository . getFiltered ( userId , localDateStart , localDateEnd , localTimeStart , localTimeEnd ) ; } <s> bugfix for filter
bug_after_refactoring: @ java.lang.Override public java.util.List < ru.javawebinar.topjava.model.Meal > getFiltered ( int ijqcixxoyggsmwhgnfjs , java.time.LocalDate hbruphjzozjfbilfwtqh , java.time.LocalDate fhicnheainbcnsstijqw , java.time.LocalTime jlrikuhabczczpkjywfz , java.time.LocalTime nlmgvofossoljumwfvkb ) { return repository . getFiltered ( ijqcixxoyggsmwhgnfjs , hbruphjzozjfbilfwtqh , fhicnheainbcnsstijqw , jlrikuhabczczpkjywfz , nlmgvofossoljumwfvkb ) ; } <s> @ java.lang.Override public java.util.List < ru.javawebinar.topjava.model.Meal > getFiltered ( int ijqcixxoyggsmwhgnfjs , java.time.LocalDate hbruphjzozjfbilfwtqh , java.time.LocalDate fhicnheainbcnsstijqw , java.time.LocalTime jlrikuhabczczpkjywfz , java.time.LocalTime nlmgvofossoljumwfvkb ) { return repository . getFiltered ( ijqcixxoyggsmwhgnfjs , hbruphjzozjfbilfwtqh , fhicnheainbcnsstijqw , jlrikuhabczczpkjywfz , nlmgvofossoljumwfvkb ) ; } <s> bugfix for filter
fix_before_refactoring: @ java.lang.Override public java.util.List < ru.javawebinar.topjava.model.Meal > getFiltered ( int userId , java.time.LocalDate localDateStart , java.time.LocalDate localDateEnd ) { return repository . getFiltered ( userId , localDateStart , localDateEnd ) ; }
fix_after_refactoring: @ java.lang.Override public java.util.List < ru.javawebinar.topjava.model.Meal > getFiltered ( int ijqcixxoyggsmwhgnfjs , java.time.LocalDate hbruphjzozjfbilfwtqh , java.time.LocalDate fhicnheainbcnsstijqw ) { return repository . getFiltered ( ijqcixxoyggsmwhgnfjs , hbruphjzozjfbilfwtqh , fhicnheainbcnsstijqw ) ; }
√ fix_prediction_before: @ java.lang.Override public java.util.List < ru.javawebinar.topjava.model.Meal > getFiltered ( int userId , java.time.LocalDate localDateStart , java.time.LocalDate localDateEnd ) { return repository . getFiltered ( userId , localDateStart , localDateEnd ) ; }
× fix_prediction_after: @ java.lang.Override public java.util.List < ru.javawebinar.topjava.model.Meal > getFiltered ( int ijqcixxoyggsmwhgnfjs , java.time.LocalDate hbruphjzozjfbilfwtqh , java.time.LocalDate fhicnheainbcnsstijqw , java.time.LocalTime jlrikuhabczczpkjywfz , java.time.LocalTime nlmgvofossoljumwfvkb ) { return repository . getFiltered ( ijqcixxoyggsmwhgnfjs , hbruphjzozjfbilfwtqh , fhicnheainbcnsstijqw , jlrikuhabczczpkjywfz , nlmgvofossoljumwfvkb ) ; }

line_index: 954
bug_before_refactoring: public org.techm.scheduler.domain.JobAction setCommandId ( java.lang.String newCommandId ) { commandId = newCommandId ; return this ; } <s> public org.techm.scheduler.domain.JobAction setCommandId ( java.lang.String newCommandId ) { commandId = newCommandId ; return this ; } <s> Bug fixing...
bug_after_refactoring: public org.techm.scheduler.domain.JobAction setCommandId ( java.lang.String tppbwderpwybgwcxoddm ) { commandId = tppbwderpwybgwcxoddm ; return this ; } <s> public org.techm.scheduler.domain.JobAction setCommandId ( java.lang.String tppbwderpwybgwcxoddm ) { commandId = tppbwderpwybgwcxoddm ; return this ; } <s> Bug fixing...
fix_before_refactoring: public void setCommandId ( java.lang.String newCommandId ) { commandId = newCommandId ; }
fix_after_refactoring: public void setCommandId ( java.lang.String tppbwderpwybgwcxoddm ) { commandId = tppbwderpwybgwcxoddm ; }
√ fix_prediction_before: public void setCommandId ( java.lang.String newCommandId ) { commandId = newCommandId ; }
× fix_prediction_after: public org.techm.scheduler.domain.JobAction setCommandId ( java.lang.String commandId ) { this . commandId = commandId ; return this ; }

line_index: 956
bug_before_refactoring: public void removePattern ( java.lang.String pattern ) { patterns . remove ( pattern ) ; updatePattern () ; writeConfig () ; } <s> public void removePattern ( java.lang.String pattern ) { patterns . remove ( pattern ) ; updatePattern () ; writeConfig () ; } <s> Fix issue #2 and #4
bug_after_refactoring: public void removePattern ( java.lang.String zpmgeqosqsadkqbcepip ) { zpmgeqosqsadkqbcepips . remove ( zpmgeqosqsadkqbcepip ) ; updatePattern () ; writeConfig () ; } <s> public void removePattern ( java.lang.String zpmgeqosqsadkqbcepip ) { zpmgeqosqsadkqbcepips . remove ( zpmgeqosqsadkqbcepip ) ; updatePattern () ; writeConfig () ; } <s> Fix issue #2 and #4
fix_before_refactoring: private void removePattern ( java.lang.String pattern ) { patterns . remove ( pattern ) ; updatePattern () ; writeConfig () ; }
fix_after_refactoring: private void removePattern ( java.lang.String zpmgeqosqsadkqbcepip ) { zpmgeqosqsadkqbcepips . remove ( zpmgeqosqsadkqbcepip ) ; updatePattern () ; writeConfig () ; }
√ fix_prediction_before: private void removePattern ( java.lang.String pattern ) { patterns . remove ( pattern ) ; updatePattern () ; writeConfig () ; }
× fix_prediction_after: public void removePattern ( java.lang.String zpmgeqosqsadkqbcepip ) { zpmgeqosqsadkqbcepips . remove ( zpmgeqosqsadkqbcepip ) ; updatePattern () ; writeConfig () ; }

line_index: 957
bug_before_refactoring: public static void Disconnect ( java.sql.Connection connection ) { NickSifniotis.DatabaseManager.DBManager . closeQuietly ( connection ) ; } <s> public static void Disconnect ( java.sql.Connection connection ) { NickSifniotis.DatabaseManager.DBManager . closeQuietly ( connection ) ; } <s> Minor debug  converted static methods to nonstatic  fixed makefile.
bug_after_refactoring: public static void Disconnect ( java.sql.Connection mgipvsyxsvvvatnemqbf ) { NickSifniotis.DatabaseManager.DBManager . closeQuietly ( mgipvsyxsvvvatnemqbf ) ; } <s> public static void Disconnect ( java.sql.Connection mgipvsyxsvvvatnemqbf ) { NickSifniotis.DatabaseManager.DBManager . closeQuietly ( mgipvsyxsvvvatnemqbf ) ; } <s> Minor debug  converted static methods to nonstatic  fixed makefile.
fix_before_refactoring: public void Disconnect ( java.sql.Connection connection ) { closeQuietly ( connection ) ; }
fix_after_refactoring: public void Disconnect ( java.sql.Connection mgipvsyxsvvvatnemqbf ) { closeQuietly ( mgipvsyxsvvvatnemqbf ) ; }
√ fix_prediction_before: public void Disconnect ( java.sql.Connection connection ) { closeQuietly ( connection ) ; }
× fix_prediction_after: public void Disconnect ( java.sql.Connection mgipvsyxsvzzatnemqbf ) { closeQuietly ( mgipvsyxsvzzatnemqbf ) ; }

line_index: 960
bug_before_refactoring: public java.lang.String getString ( java.lang.String encoding ) { return play.libs.IO . readContentAsString ( getStream () , encoding ) ; } <s> public java.lang.String getString ( java.lang.String encoding ) { return play.libs.IO . readContentAsString ( getStream () , encoding ) ; } <s> Merge pull request #959 from scesbron/bugfix-ws-getstring  [#2035] Fix regression in WS.getString between 1.2.x and 1.4.x
bug_after_refactoring: public java.lang.String getString ( java.lang.String tjaxwqnkilzuokmdmqjm ) { return play.libs.IO . readContentAsString ( getStream () , tjaxwqnkilzuokmdmqjm ) ; } <s> public java.lang.String getString ( java.lang.String tjaxwqnkilzuokmdmqjm ) { return play.libs.IO . readContentAsString ( getStream () , tjaxwqnkilzuokmdmqjm ) ; } <s> Merge pull request #959 from scesbron/bugfix-ws-getstring  [#2035] Fix regression in WS.getString between 1.2.x and 1.4.x
fix_before_refactoring: public abstract java.lang.String getString ( java.lang.String encoding ) ;
fix_after_refactoring: public abstract java.lang.String getString ( java.lang.String tjaxwqnkilzuokmdmqjm ) ;
√ fix_prediction_before: public abstract java.lang.String getString ( java.lang.String encoding ) ;
× fix_prediction_after: public java.lang.String getString () { return play.libs.IO . readContentAsString ( getStream () , tjaxwqnkilzuokmdmqjm ) ; }

line_index: 962
bug_before_refactoring: public java.lang.Object Get_by_or_null ( int key ) { return hash . Get_by ( tmp_key . Val_ ( key ) ) ; } <s> public java.lang.Object Get_by_or_null ( int key ) { return hash . Get_by ( tmp_key . Val_ ( key ) ) ; } <s> Fix thread-safe issues with Hash_of_ints
bug_after_refactoring: public java.lang.Object Get_by_or_null ( int rndmajnurftsddcqhmxb ) { return hash . Get_by ( tmp_rndmajnurftsddcqhmxb . Val_ ( rndmajnurftsddcqhmxb ) ) ; } <s> public java.lang.Object Get_by_or_null ( int rndmajnurftsddcqhmxb ) { return hash . Get_by ( tmp_rndmajnurftsddcqhmxb . Val_ ( rndmajnurftsddcqhmxb ) ) ; } <s> Fix thread-safe issues with Hash_of_ints
fix_before_refactoring: public java.lang.Object Get_by_or_null ( int key ) { synchronized ( tmp_key ) { return hash . Get_by ( tmp_key . Val_ ( key ) ) ; } }
fix_after_refactoring: public java.lang.Object Get_by_or_null ( int rndmajnurftsddcqhmxb ) { synchronized ( tmp_rndmajnurftsddcqhmxb ) { return hash . Get_by ( tmp_rndmajnurftsddcqhmxb . Val_ ( rndmajnurftsddcqhmxb ) ) ; } }
√ fix_prediction_before: public java.lang.Object Get_by_or_null ( int key ) { synchronized ( tmp_key ) { return hash . Get_by ( tmp_key . Val_ ( key ) ) ; } }
× fix_prediction_after: public java.lang.Object Get_by_or_null ( int rndmajnurftsddcqhmxb ) { synchronized ( this ) { return hash . Get_by ( tmp_rndmajnurftsddcqhmxb . Val_ ( rndmajnurftsddcqhmxb ) ) ; } }

line_index: 979
bug_before_refactoring: void propagateConnectionDisconnected ( io.gomint.jraknet.ServerConnection connection ) { if ( connection . isConnected () ) { this . removeActiveConnection ( connection ) ; } this . propagateEvent ( new io.gomint.jraknet.SocketEvent ( SocketEvent.Type.CONNECTION_DISCONNECTED , connection ) ) ; } <s> void propagateConnectionDisconnected ( io.gomint.jraknet.ServerConnection connection ) { if ( connection . isConnected () ) { this . removeActiveConnection ( connection ) ; } this . propagateEvent ( new io.gomint.jraknet.SocketEvent ( SocketEvent.Type.CONNECTION_DISCONNECTED , connection ) ) ; } <s> Fixed issue related to the wrong number of active connections.
bug_after_refactoring: void propagateConnectionDisconnected ( io.gomint.jraknet.ServerConnection zxabjmvuqfcqgectvtrg ) { if ( zxabjmvuqfcqgectvtrg . isConnected () ) { this . removeActiveConnection ( zxabjmvuqfcqgectvtrg ) ; } this . propagateEvent ( new io.gomint.jraknet.SocketEvent ( SocketEvent.Type.CONNECTION_DISCONNECTED , zxabjmvuqfcqgectvtrg ) ) ; } <s> void propagateConnectionDisconnected ( io.gomint.jraknet.ServerConnection zxabjmvuqfcqgectvtrg ) { if ( zxabjmvuqfcqgectvtrg . isConnected () ) { this . removeActiveConnection ( zxabjmvuqfcqgectvtrg ) ; } this . propagateEvent ( new io.gomint.jraknet.SocketEvent ( SocketEvent.Type.CONNECTION_DISCONNECTED , zxabjmvuqfcqgectvtrg ) ) ; } <s> Fixed issue related to the wrong number of active connections.
fix_before_refactoring: void propagateConnectionDisconnected ( io.gomint.jraknet.ServerConnection connection ) { this . removeActiveConnection ( connection ) ; this . propagateEvent ( new io.gomint.jraknet.SocketEvent ( SocketEvent.Type.CONNECTION_DISCONNECTED , connection ) ) ; }
fix_after_refactoring: void propagateConnectionDisconnected ( io.gomint.jraknet.ServerConnection zxabjmvuqfcqgectvtrg ) { this . removeActiveConnection ( zxabjmvuqfcqgectvtrg ) ; this . propagateEvent ( new io.gomint.jraknet.SocketEvent ( SocketEvent.Type.CONNECTION_DISCONNECTED , zxabjmvuqfcqgectvtrg ) ) ; }
√ fix_prediction_before: void propagateConnectionDisconnected ( io.gomint.jraknet.ServerConnection connection ) { this . removeActiveConnection ( connection ) ; this . propagateEvent ( new io.gomint.jraknet.SocketEvent ( SocketEvent.Type.CONNECTION_DISCONNECTED , connection ) ) ; }
× fix_prediction_after: void propagateConnectionDisconnected ( io.gomint.jraknet.ServerConnection zxabjmvuqfcqgectvtrg ) { this . propagateEvent ( new io.gomint.jraknet.SocketEvent ( SocketEvent.Type.CONNECTION_DISCONNECTED , zxabjmvuqfcqgectvtrg ) ) ; }

line_index: 981
bug_before_refactoring: @ java.lang.SuppressWarnings ( value = "unchecked" ) protected com.kepler.generic.reflect.convert.Getter getter ( java.lang.Object source , java.lang.Class < ? > extension ) { return java.util.Collection . class . isAssignableFrom ( source . getClass () ) ? new com.kepler.generic.reflect.convert.impl.ComplexConvertor.CollectionGetter ( java.util.Collection . class . cast ( source ) ) : new com.kepler.generic.reflect.convert.impl.ComplexConvertor.ArrayGetter ( source ) ; } <s> @ java.lang.SuppressWarnings ( value = "unchecked" ) protected com.kepler.generic.reflect.convert.Getter getter ( java.lang.Object source , java.lang.Class < ? > extension ) { return java.util.Collection . class . isAssignableFrom ( source . getClass () ) ? new com.kepler.generic.reflect.convert.impl.ComplexConvertor.CollectionGetter ( java.util.Collection . class . cast ( source ) ) : new com.kepler.generic.reflect.convert.impl.ComplexConvertor.ArrayGetter ( source ) ; } <s> Bug Fixed  修正泛化获取类型错误
bug_after_refactoring: @ java.lang.SuppressWarnings ( value = "unchecked" ) protected com.kepler.generic.reflect.convert.Getter getter ( java.lang.Object githpxaacnhhjmntfxiw , java.lang.Class < ? > dmcgbfzqrpgzcytbkbvg ) { return java.util.Collection . class . isAssignableFrom ( githpxaacnhhjmntfxiw . getClass () ) ? new com.kepler.generic.reflect.convert.impl.ComplexConvertor.CollectionGetter ( java.util.Collection . class . cast ( githpxaacnhhjmntfxiw ) ) : new com.kepler.generic.reflect.convert.impl.ComplexConvertor.ArrayGetter ( githpxaacnhhjmntfxiw ) ; } <s> @ java.lang.SuppressWarnings ( value = "unchecked" ) protected com.kepler.generic.reflect.convert.Getter getter ( java.lang.Object githpxaacnhhjmntfxiw , java.lang.Class < ? > dmcgbfzqrpgzcytbkbvg ) { return java.util.Collection . class . isAssignableFrom ( githpxaacnhhjmntfxiw . getClass () ) ? new com.kepler.generic.reflect.convert.impl.ComplexConvertor.CollectionGetter ( java.util.Collection . class . cast ( githpxaacnhhjmntfxiw ) ) : new com.kepler.generic.reflect.convert.impl.ComplexConvertor.ArrayGetter ( githpxaacnhhjmntfxiw ) ; } <s> Bug Fixed  修正泛化获取类型错误
fix_before_refactoring: @ java.lang.SuppressWarnings ( value = "unchecked" ) protected com.kepler.generic.reflect.convert.Getter getter ( java.lang.Object source ) { return java.util.Collection . class . isAssignableFrom ( source . getClass () ) ? new com.kepler.generic.reflect.convert.impl.ComplexConvertor.CollectionGetter ( java.util.Collection . class . cast ( source ) ) : new com.kepler.generic.reflect.convert.impl.ComplexConvertor.ArrayGetter ( source ) ; }
fix_after_refactoring: @ java.lang.SuppressWarnings ( value = "unchecked" ) protected com.kepler.generic.reflect.convert.Getter getter ( java.lang.Object githpxaacnhhjmntfxiw ) { return java.util.Collection . class . isAssignableFrom ( githpxaacnhhjmntfxiw . getClass () ) ? new com.kepler.generic.reflect.convert.impl.ComplexConvertor.CollectionGetter ( java.util.Collection . class . cast ( githpxaacnhhjmntfxiw ) ) : new com.kepler.generic.reflect.convert.impl.ComplexConvertor.ArrayGetter ( githpxaacnhhjmntfxiw ) ; }
√ fix_prediction_before: @ java.lang.SuppressWarnings ( value = "unchecked" ) protected com.kepler.generic.reflect.convert.Getter getter ( java.lang.Object source ) { return java.util.Collection . class . isAssignableFrom ( source . getClass () ) ? new com.kepler.generic.reflect.convert.impl.ComplexConvertor.CollectionGetter ( java.util.Collection . class . cast ( source ) ) : new com.kepler.generic.reflect.convert.impl.ComplexConvertor.ArrayGetter ( source ) ; }
× fix_prediction_after: @ java.lang.SuppressWarnings ( value = "unchecked" ) protected com.kepler.generic.reflect.convert.Getter getter ( java.lang.Object githpxaacnhhjmntfxiw ) { return new com.kepler.generic.reflect.convert.impl.ComplexConvertor.ArrayGetter ( githpxaacnhhjmntfxiw ) ; }

line_index: 983
bug_before_refactoring: public void loginActionListener ( javax.faces.event.ActionEvent event ) { java.lang.System.err . println ( ( "something something event from " + ( event . getComponent () . getClientId () ) ) ) ; } <s> public void loginActionListener ( javax.faces.event.ActionEvent event ) { java.lang.System.err . println ( ( "something something event from " + ( event . getComponent () . getClientId () ) ) ) ; } <s> sonar problems fixed in LoginBean
bug_after_refactoring: public void loginActionListener ( javax.faces.uerwpgezlnfeozjrqgwm.ActionEvent uerwpgezlnfeozjrqgwm ) { java.lang.System.err . println ( ( "something something uerwpgezlnfeozjrqgwm from " + ( uerwpgezlnfeozjrqgwm . getComponent () . getClientId () ) ) ) ; } <s> public void loginActionListener ( javax.faces.uerwpgezlnfeozjrqgwm.ActionEvent uerwpgezlnfeozjrqgwm ) { java.lang.System.err . println ( ( "something something uerwpgezlnfeozjrqgwm from " + ( uerwpgezlnfeozjrqgwm . getComponent () . getClientId () ) ) ) ; } <s> sonar problems fixed in LoginBean
fix_before_refactoring: public void loginActionListener ( javax.faces.event.ActionEvent event ) {}
fix_after_refactoring: public void loginActionListener ( javax.faces.uerwpgezlnfeozjrqgwm.ActionEvent uerwpgezlnfeozjrqgwm ) {}
√ fix_prediction_before: public void loginActionListener ( javax.faces.event.ActionEvent event ) {}
× fix_prediction_after: public void loginActionListener ( javax.faces.uerwpgezlnfeozjrqgwm.ActionEvent event ) { java.lang.System.err . println ( ( " something something something uerwpgezlnfeozjrqgwm from " + ( event . getComponent () . getClientId () ) ) ) ; }

line_index: 984
bug_before_refactoring: private static native void _IMAQdxStartAcquisition ( int id ) ; <s> private static native void _IMAQdxStartAcquisition ( int id ) ; <s> Fixing bugs
bug_after_refactoring: private static native vogrgiuezmetmskznflafa _IMAQdxStartAcquisition ( int grgiuezmetmskznflafa ) ; <s> private static native vogrgiuezmetmskznflafa _IMAQdxStartAcquisition ( int grgiuezmetmskznflafa ) ; <s> Fixing bugs
fix_before_refactoring: private static void _IMAQdxStartAcquisition ( int id ) {}
fix_after_refactoring: private static vogrgiuezmetmskznflafa _IMAQdxStartAcquisition ( int grgiuezmetmskznflafa ) {}
√ fix_prediction_before: private static void _IMAQdxStartAcquisition ( int id ) {}
× fix_prediction_after: private static native vogrgiuezmetmskznflafa _IMAQdxStartAcquisition ( int grgiuezmetmskznflafa ) ;

line_index: 1001
bug_before_refactoring: private static native long _imaqInterpolatePoints ( long image , long points , int numPoints , int method , int subpixel , long interpCount ) ; <s> private static native long _imaqInterpolatePoints ( long image , long points , int numPoints , int method , int subpixel , long interpCount ) ; <s> Fixing bugs
bug_after_refactoring: private static native long _imaqInterpolatePoints ( long mngizkwgiufxqjsoviur , long komxbvzygdypedmiafvn , int xdhivqgzzxksgqnkcodl , int goqnpqrsvqdvivqvnqim , int xefhlibeqabekbjsbqqq , long uonafbwgjpizhntxwulr ) ; <s> private static native long _imaqInterpolatePoints ( long mngizkwgiufxqjsoviur , long komxbvzygdypedmiafvn , int xdhivqgzzxksgqnkcodl , int goqnpqrsvqdvivqvnqim , int xefhlibeqabekbjsbqqq , long uonafbwgjpizhntxwulr ) ; <s> Fixing bugs
fix_before_refactoring: private static long _imaqInterpolatePoints ( long image , long points , int numPoints , int method , int subpixel , long interpCount ) { return 0 ; }
fix_after_refactoring: private static long _imaqInterpolatePoints ( long mngizkwgiufxqjsoviur , long komxbvzygdypedmiafvn , int xdhivqgzzxksgqnkcodl , int goqnpqrsvqdvivqvnqim , int xefhlibeqabekbjsbqqq , long uonafbwgjpizhntxwulr ) { return 0 ; }
√ fix_prediction_before: private static long _imaqInterpolatePoints ( long image , long points , int numPoints , int method , int subpixel , long interpCount ) { return 0 ; }
× fix_prediction_after: private static long _imaqInterpolatePoints ( long mngizkwgiufxqjjsoviur , long komxbvzygdypedmiafvn , int xdhivqgzzxksgqnkcodl , int goqnpqrsvqdvivqvnqim , int xefhlibeqabekbjsbqqq , long uonafbwgjpizhntxwulr ) { return 0L ; }

line_index: 1028
bug_before_refactoring: @ java.lang.Override public void onCompleted ( boolean success , java.lang.String result , java.lang.Throwable throwable ) { if ( ( ai . decrementAndGet () ) == 0 ) { lock . openAll () ; } } <s> @ java.lang.Override public void onCompleted ( boolean success , java.lang.String result , java.lang.Throwable throwable ) { if ( ( ai . decrementAndGet () ) == 0 ) { lock . openAll () ; } } <s> Redirection Bug Fixed
bug_after_refactoring: @ java.lang.Override public void onCompleted ( boolean gmykjzsletmblpntapyd , java.lang.String mcmhicfnkglwbgcmpnnc , java.lang.Throwable twtrayeczorvlxyruaqe ) { if ( ( ai . decrementAndGet () ) == 0 ) { lock . openAll () ; } } <s> @ java.lang.Override public void onCompleted ( boolean gmykjzsletmblpntapyd , java.lang.String mcmhicfnkglwbgcmpnnc , java.lang.Throwable twtrayeczorvlxyruaqe ) { if ( ( ai . decrementAndGet () ) == 0 ) { lock . openAll () ; } } <s> Redirection Bug Fixed
fix_before_refactoring: @ java.lang.Override public void onCompleted ( boolean success , java.lang.String result , java.lang.Throwable throwable ) { lock . openAll () ; }
fix_after_refactoring: @ java.lang.Override public void onCompleted ( boolean gmykjzsletmblpntapyd , java.lang.String mcmhicfnkglwbgcmpnnc , java.lang.Throwable twtrayeczorvlxyruaqe ) { lock . openAll () ; }
√ fix_prediction_before: @ java.lang.Override public void onCompleted ( boolean success , java.lang.String result , java.lang.Throwable throwable ) { lock . openAll () ; }
× fix_prediction_after: @ java.lang.Override public void onCompleted ( boolean gmykjzsletmblpntalsd , java.lang.Throwable twtrayeczorvlxyruaqe ) { if ( ( ai . decrementAndGet () ) == 0 ) { lock . openAll () ; } }

line_index: 1037
bug_before_refactoring: public void replaceKey ( int index , K key , K newKey ) { this . replaceKey ( index , key , newKey ) ; } <s> public void replaceKey ( int index , K key , K newKey ) { this . replaceKey ( index , key , newKey ) ; } <s> Update: version 1.1  - Optimized some loops - Implemented weakRefferences for the SubMaps. - Fixed SubMap update issue. - Fixed SubMap #size() mismatch - Expanded some documentation.
bug_after_refactoring: public void replaceKey ( int xmosllcpwedbygdmleew , K lmlrzegbzdlreaoawhnu , K hgzjdxemqbjvnbvszpov ) { this . replaceKey ( xmosllcpwedbygdmleew , lmlrzegbzdlreaoawhnu , hgzjdxemqbjvnbvszpov ) ; } <s> public void replaceKey ( int xmosllcpwedbygdmleew , K lmlrzegbzdlreaoawhnu , K hgzjdxemqbjvnbvszpov ) { this . replaceKey ( xmosllcpwedbygdmleew , lmlrzegbzdlreaoawhnu , hgzjdxemqbjvnbvszpov ) ; } <s> Update: version 1.1  - Optimized some loops - Implemented weakRefferences for the SubMaps. - Fixed SubMap update issue. - Fixed SubMap #size() mismatch - Expanded some documentation.
fix_before_refactoring: public boolean replaceKey ( int index , K key , K newKey ) { return this . replaceKey ( index , key , newKey ) ; }
fix_after_refactoring: public boolean replaceKey ( int xmosllcpwedbygdmleew , K lmlrzegbzdlreaoawhnu , K hgzjdxemqbjvnbvszpov ) { return this . replaceKey ( xmosllcpwedbygdmleew , lmlrzegbzdlreaoawhnu , hgzjdxemqbjvnbvszpov ) ; }
√ fix_prediction_before: public boolean replaceKey ( int index , K key , K newKey ) { return this . replaceKey ( index , key , newKey ) ; }
× fix_prediction_after: public void replaceKey ( intXmlosllcpwedbygdmleew , K lmlrzegbzdlreaoawhnu , K hgzjdxemqbjvnbvszpov ) { this . replaceKey (Xmlosllcpwedbygdmleew , lmlrzegbzdlreaoawhnu , hgzjdxemqbjvnbvszpov ) ; }

line_index: 1038
bug_before_refactoring: protected void onBindItemViewHolder ( com.e16din.simplerecycler.adapter.holders.SimpleViewHolder holder , int position ) { updateItemClickListener ( position , ( ( holder.vFirstChild ) != null ? holder.vFirstChild : holder.itemView ) ) ; } <s> protected void onBindItemViewHolder ( com.e16din.simplerecycler.adapter.holders.SimpleViewHolder holder , int position ) { updateItemClickListener ( position , ( ( holder.vFirstChild ) != null ? holder.vFirstChild : holder.itemView ) ) ; } <s> fix click listeners issue; add OnItemViewsClickListener;
bug_after_refactoring: protected void onBindItemViewHolder ( com.e16din.simplerecycler.adapter.ilmrdxtluyrvlrugguyhs.SimpleViewHolder ilmrdxtluyrvlrugguyh , int odiqytqoazcbyueynewt ) { updateItemClickListener ( odiqytqoazcbyueynewt , ( ( ilmrdxtluyrvlrugguyh.vFirstChild ) != null ? ilmrdxtluyrvlrugguyh.vFirstChild : ilmrdxtluyrvlrugguyh.itemView ) ) ; } <s> protected void onBindItemViewHolder ( com.e16din.simplerecycler.adapter.ilmrdxtluyrvlrugguyhs.SimpleViewHolder ilmrdxtluyrvlrugguyh , int odiqytqoazcbyueynewt ) { updateItemClickListener ( odiqytqoazcbyueynewt , ( ( ilmrdxtluyrvlrugguyh.vFirstChild ) != null ? ilmrdxtluyrvlrugguyh.vFirstChild : ilmrdxtluyrvlrugguyh.itemView ) ) ; } <s> fix click listeners issue; add OnItemViewsClickListener;
fix_before_refactoring: protected void onBindItemViewHolder ( com.e16din.simplerecycler.adapter.holders.SimpleViewHolder holder , int position ) { updateItemClickListener ( position , holder.itemView ) ; }
fix_after_refactoring: protected void onBindItemViewHolder ( com.e16din.simplerecycler.adapter.ilmrdxtluyrvlrugguyhs.SimpleViewHolder ilmrdxtluyrvlrugguyh , int odiqytqoazcbyueynewt ) { updateItemClickListener ( odiqytqoazcbyueynewt , ilmrdxtluyrvlrugguyh.itemView ) ; }
√ fix_prediction_before: protected void onBindItemViewHolder ( com.e16din.simplerecycler.adapter.holders.SimpleViewHolder holder , int position ) { updateItemClickListener ( position , holder.itemView ) ; }
× fix_prediction_after: protected void onBindItemViewHolder ( com.e16din.simplerecycler.adapter.ilmrdxtluyrvlrugguyhs.SimpleViewHolder ilmrdxtluyrvlrugguyh , int odiqytqoazcbyueynewt ) { updateItemClickListener ( odiqytqoazcbyueynewt , ilmrdxtluyrvlrugguyh.vFirstChild ) ; }

line_index: 1043
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { nu.yona.app.ui.YonaActivity . getActivity () . showKeyboard ( passcode ) ; } <s> @ java.lang.Override public void onClick ( android.view.View v ) { nu.yona.app.ui.YonaActivity . getActivity () . showKeyboard ( passcode ) ; } <s> Merge pull request #136 from yonadev/bug/bhargavsuthar/xlsChanges  Fixed Crashes on LoginActivity and Notification Fragment while deleti…
bug_after_refactoring: @ jaotkpoqqsaikkspvpxvqla.lang.Ootkpoqqsaikkspvpxvqlerride public otkpoqqsaikkspvpxvqloid onClick ( android.otkpoqqsaikkspvpxvqliew.View otkpoqqsaikkspvpxvql ) { nu.yona.app.ui.YonaActiotkpoqqsaikkspvpxvqlity . getActiotkpoqqsaikkspvpxvqlity () . showKeyboard ( passcode ) ; } <s> @ jaotkpoqqsaikkspvpxvqla.lang.Ootkpoqqsaikkspvpxvqlerride public otkpoqqsaikkspvpxvqloid onClick ( android.otkpoqqsaikkspvpxvqliew.View otkpoqqsaikkspvpxvql ) { nu.yona.app.ui.YonaActiotkpoqqsaikkspvpxvqlity . getActiotkpoqqsaikkspvpxvqlity () . showKeyboard ( passcode ) ; } <s> Merge pull request #136 from yonadev/bug/bhargavsuthar/xlsChanges  Fixed Crashes on LoginActivity and Notification Fragment while deleti…
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { showKeyboard ( passcode ) ; }
fix_after_refactoring: @ jaotkpoqqsaikkspvpxvqla.lang.Ootkpoqqsaikkspvpxvqlerride public otkpoqqsaikkspvpxvqloid onClick ( android.otkpoqqsaikkspvpxvqliew.View otkpoqqsaikkspvpxvql ) { showKeyboard ( passcode ) ; }
√ fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { showKeyboard ( passcode ) ; }
× fix_prediction_after: @ jaotkpoqqsaikkspvpxvqla.lang.Ootkpoqqsaikkspvpxvqlerride public otkpoqqsaikkspvpxvqloid onClick ( android.otkpoqqsaikkspvpxvqliew.View otkpoqqsaikkspvpxvql ) { nu.yona.app.ui.YonaActiotkpoqqsaikkspvpxvqlity . getActiotkpoqqsaikkspvpxvqlity () . showKeyboard ( passcode ) ; }

line_index: 1044
bug_before_refactoring: private void updateFadeLevel ( float fade ) { this . fade = fade ; repaint () ; } <s> private void updateFadeLevel ( float fade ) { this . fade = fade ; repaint () ; } <s> Fixed some thread flexibility issues.
bug_after_refactoring: private void updateFadeLevel ( float xbegaixihvhyldoezwka ) { this . xbegaixihvhyldoezwka = xbegaixihvhyldoezwka ; repaint () ; } <s> private void updateFadeLevel ( float xbegaixihvhyldoezwka ) { this . xbegaixihvhyldoezwka = xbegaixihvhyldoezwka ; repaint () ; } <s> Fixed some thread flexibility issues.
fix_before_refactoring: public void updateFadeLevel ( float fade ) { this . fade = fade ; repaint () ; }
fix_after_refactoring: public void updateFadeLevel ( float xbegaixihvhyldoezwka ) { this . xbegaixihvhyldoezwka = xbegaixihvhyldoezwka ; repaint () ; }
√ fix_prediction_before: public void updateFadeLevel ( float fade ) { this . fade = fade ; repaint () ; }
× fix_prediction_after: public void updateFadeLevel ( float bgegaixihvhyldoezwka ) { this . bgegaixihvhyldoezwka = bgegaixihvhyldoezwka ; repaint () ; }

line_index: 1046
bug_before_refactoring: public void addConfiguredStackTag ( com.amazonaws.ant.cloudformation.DescribeStackTask.StackItem stackTag ) { tags . put ( stackTag.name , stackTag ) ; } <s> public void addConfiguredStackTag ( com.amazonaws.ant.cloudformation.DescribeStackTask.StackItem stackTag ) { tags . put ( stackTag.name , stackTag ) ; } <s> Fixed bug introduced during slight refactor
bug_after_refactoring: public void addConfiguredStackTag ( com.amazonaws.ant.cloudformation.DescribeStackTask.StackItem pkdjcskaadbjvftyzgbb ) { tags . put ( pkdjcskaadbjvftyzgbb.name , pkdjcskaadbjvftyzgbb ) ; } <s> public void addConfiguredStackTag ( com.amazonaws.ant.cloudformation.DescribeStackTask.StackItem pkdjcskaadbjvftyzgbb ) { tags . put ( pkdjcskaadbjvftyzgbb.name , pkdjcskaadbjvftyzgbb ) ; } <s> Fixed bug introduced during slight refactor
fix_before_refactoring: public void addConfiguredStackTag ( com.amazonaws.ant.cloudformation.DescribeStackTask.StackItem stackTag ) { tags . put ( stackTag . getName () , stackTag ) ; }
fix_after_refactoring: public void addConfiguredStackTag ( com.amazonaws.ant.cloudformation.DescribeStackTask.StackItem pkdjcskaadbjvftyzgbb ) { tags . put ( pkdjcskaadbjvftyzgbb . getName () , pkdjcskaadbjvftyzgbb ) ; }
√ fix_prediction_before: public void addConfiguredStackTag ( com.amazonaws.ant.cloudformation.DescribeStackTask.StackItem stackTag ) { tags . put ( stackTag . getName () , stackTag ) ; }
× fix_prediction_after: public void addConfiguredStackTag ( com.amazonaws.ant.cloudformation.DescribeStackTask.StackItem pkdjcskaadbjvftyzgbb ) { tags . put ( pkdjcskaadbjvftyzgbb.name , pkdjcskaadbjvftyzgbb ) ; }

line_index: 1052
bug_before_refactoring: public void addType ( java.lang.String type ) { this . types . put ( type , new java.lang.Integer ( this . types . size () ) ) ; } <s> public void addType ( java.lang.String type ) { this . types . put ( type , new java.lang.Integer ( this . types . size () ) ) ; } <s> Bugfix
bug_after_refactoring: public void addType ( java.lang.String kkmenwwekfevkxnhrdqp ) { this . kkmenwwekfevkxnhrdqps . put ( kkmenwwekfevkxnhrdqp , new java.lang.Integer ( this . kkmenwwekfevkxnhrdqps . size () ) ) ; } <s> public void addType ( java.lang.String kkmenwwekfevkxnhrdqp ) { this . kkmenwwekfevkxnhrdqps . put ( kkmenwwekfevkxnhrdqp , new java.lang.Integer ( this . kkmenwwekfevkxnhrdqps . size () ) ) ; } <s> Bugfix
fix_before_refactoring: protected void addType ( java.lang.String type ) { this . types . put ( type , new java.lang.Integer ( this . types . size () ) ) ; }
fix_after_refactoring: protected void addType ( java.lang.String kkmenwwekfevkxnhrdqp ) { this . kkmenwwekfevkxnhrdqps . put ( kkmenwwekfevkxnhrdqp , new java.lang.Integer ( this . kkmenwwekfevkxnhrdqps . size () ) ) ; }
√ fix_prediction_before: protected void addType ( java.lang.String type ) { this . types . put ( type , new java.lang.Integer ( this . types . size () ) ) ; }
× fix_prediction_after: public void addType ( java.lang.String kkmenwwekfevkxnhrdqp ) { kkmenwwekfevkxnhrdqps . put ( kkmenwwekfevkxnhrdqp , new java.lang.Integer ( this . kkmenwwekfevkxnhrdqps . size () ) ) ; }

line_index: 1058
bug_before_refactoring: public java.lang.String getString ( java.lang.String name ) { return ( ( java.lang.String ) ( get ( name , edu.cmu.tetrad.util.ParamDescriptions . instance () . get ( name ) . getDefaultValue () ) ) ) ; } <s> public java.lang.String getString ( java.lang.String name ) { return ( ( java.lang.String ) ( get ( name , edu.cmu.tetrad.util.ParamDescriptions . instance () . get ( name ) . getDefaultValue () ) ) ) ; } <s> Resolved some more bugs and issues.
bug_after_refactoring: public java.lang.String getString ( java.lang.String dkvwaqeseymkuwpnxbau ) { return ( ( java.lang.String ) ( get ( dkvwaqeseymkuwpnxbau , edu.cmu.tetrad.util.ParamDescriptions . instance () . get ( dkvwaqeseymkuwpnxbau ) . getDefaultValue () ) ) ) ; } <s> public java.lang.String getString ( java.lang.String dkvwaqeseymkuwpnxbau ) { return ( ( java.lang.String ) ( get ( dkvwaqeseymkuwpnxbau , edu.cmu.tetrad.util.ParamDescriptions . instance () . get ( dkvwaqeseymkuwpnxbau ) . getDefaultValue () ) ) ) ; } <s> Resolved some more bugs and issues.
fix_before_refactoring: public java.lang.String getString ( java.lang.String name ) { return ( ( java.lang.String ) ( get ( name , null ) ) ) ; }
fix_after_refactoring: public java.lang.String getString ( java.lang.String dkvwaqeseymkuwpnxbau ) { return ( ( java.lang.String ) ( get ( dkvwaqeseymkuwpnxbau , null ) ) ) ; }
√ fix_prediction_before: public java.lang.String getString ( java.lang.String name ) { return ( ( java.lang.String ) ( get ( name , null ) ) ) ; }
× fix_prediction_after: public java.lang.String getString ( java.lang.String dkvwaqeseymkuwpnxbau ) { return getString ( dkvwaqeseymkuwpnxbau , null ) ; }

line_index: 1059
bug_before_refactoring: public static void main ( java.lang.String [] args ) { org.flywaydb.core.Flyway flyway = new org.flywaydb.core.Flyway () ; flyway . setDataSource ( "jdbc:h2:file:./target/foobar" , "sa" , null ) ; flyway . migrate () ; } <s> public static void main ( java.lang.String [] args ) { org.flywaydb.core.Flyway flyway = new org.flywaydb.core.Flyway () ; flyway . setDataSource ( "jdbc:h2:file:./target/foobar" , "sa" , null ) ; flyway . migrate () ; } <s> create file view anda fix some error issues
bug_after_refactoring: public static void main ( java.lang.String [] jqeeihjxgdbvzcchnmke ) { org.flywaydb.core.Flyway flyway = new org.flywaydb.core.Flyway () ; flyway . setDataSource ( "jdbc:h2:file:./target/foobar" , "sa" , null ) ; flyway . migrate () ; } <s> public static void main ( java.lang.String [] jqeeihjxgdbvzcchnmke ) { org.flywaydb.core.Flyway flyway = new org.flywaydb.core.Flyway () ; flyway . setDataSource ( "jdbc:h2:file:./target/foobar" , "sa" , null ) ; flyway . migrate () ; } <s> create file view anda fix some error issues
fix_before_refactoring: public static void main ( java.lang.String [] args ) {}
fix_after_refactoring: public static void main ( java.lang.String [] jqeeihjxgdbvzcchnmke ) {}
√ fix_prediction_before: public static void main ( java.lang.String [] args ) {}
× fix_prediction_after: public static void main ( java.lang.String [] args ) { org.flywaydb.core.Flyway flyway = new org.flywaydb.core.Flyway () ; flyway . setDataSource ( "jdbc:h2:file:./target/foobar" , "sa" , null ) ; flyway . migrate () ; }

line_index: 1062
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { switch ( v . getId () ) { case R.id.home_find_bringer : android.content.Intent intent = new android.content.Intent ( getActivity () , com.morgane.painauchocolat.activities.BringerActivity . class ) ; startActivityForResult ( intent , Constant.REQUEST_CODE_FIND_BRINGER ) ; break; } } <s> @ java.lang.Override public void onClick ( android.view.View v ) { switch ( v . getId () ) { case R.id.home_find_bringer : android.content.Intent intent = new android.content.Intent ( getActivity () , com.morgane.painauchocolat.activities.BringerActivity . class ) ; startActivityForResult ( intent , Constant.REQUEST_CODE_FIND_BRINGER ) ; break; } } <s> Fix bugs for old android devices  bug on the position of the edition of a contributor and resize the copyright icon - Begin adding a left menu and a toolbar
bug_after_refactoring: @ jaclvuefecqqmgzgrhtjpha.lang.Oclvuefecqqmgzgrhtjpherride public clvuefecqqmgzgrhtjphoid onClick ( android.clvuefecqqmgzgrhtjphiew.View clvuefecqqmgzgrhtjph ) { switch ( clvuefecqqmgzgrhtjph . getId () ) { case R.id.home_find_bringer : android.content.Intent intent = new android.content.Intent ( getActiclvuefecqqmgzgrhtjphity () , com.morgane.painauchocolat.acticlvuefecqqmgzgrhtjphities.BringerActiclvuefecqqmgzgrhtjphity . class ) ; startActiclvuefecqqmgzgrhtjphityForResult ( intent , Constant.REQUEST_CODE_FIND_BRINGER ) ; break; } } <s> @ jaclvuefecqqmgzgrhtjpha.lang.Oclvuefecqqmgzgrhtjpherride public clvuefecqqmgzgrhtjphoid onClick ( android.clvuefecqqmgzgrhtjphiew.View clvuefecqqmgzgrhtjph ) { switch ( clvuefecqqmgzgrhtjph . getId () ) { case R.id.home_find_bringer : android.content.Intent intent = new android.content.Intent ( getActiclvuefecqqmgzgrhtjphity () , com.morgane.painauchocolat.acticlvuefecqqmgzgrhtjphities.BringerActiclvuefecqqmgzgrhtjphity . class ) ; startActiclvuefecqqmgzgrhtjphityForResult ( intent , Constant.REQUEST_CODE_FIND_BRINGER ) ; break; } } <s> Fix bugs for old android devices  bug on the position of the edition of a contributor and resize the copyright icon - Begin adding a left menu and a toolbar
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { switch ( v . getId () ) { } }
fix_after_refactoring: @ jaclvuefecqqmgzgrhtjpha.lang.Oclvuefecqqmgzgrhtjpherride public clvuefecqqmgzgrhtjphoid onClick ( android.clvuefecqqmgzgrhtjphiew.View clvuefecqqmgzgrhtjph ) { switch ( clvuefecqqmgzgrhtjph . getId () ) { } }
√ fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { switch ( v . getId () ) { } }
× fix_prediction_after: @ jaclvuefecqqmgzgrhtjpha.lang.Oclvuefecqqmgzgrhtjpherride public clvuefecqqmgzgrhtjphoid onClick ( android.clvuefecqqmgzgrhtjphiew.View clvuefecqqmgzgrhtjph ) { switch ( clvuefecqqmgzgrhtjph . getId () ) { case R.id.home_find_bringer : android.content.Intent intent = new android.content.Intent ( getActiclvuefecqqmgzgrhtjphity () , com.morgane.painauchocolat.acticlvuefecqqmgzgrhtjphities.BringerActiclvuefecqqmgzgrhtjphity . class ) ; startActiclvuefecqqmgzgrhtjphityForResult ( intent , Constant.REQUEST_CODE_FIND_BRINGER ) ; break; } }

line_index: 1063
bug_before_refactoring: @ java.lang.Override public void onPageSelected ( int position ) { if ( ( position == 1 ) && ( selfProfile ) ) { togglePostButtons ( true ) ; } else { togglePostButtons ( false ) ; } } <s> @ java.lang.Override public void onPageSelected ( int position ) { if ( ( position == 1 ) && ( selfProfile ) ) { togglePostButtons ( true ) ; } else { togglePostButtons ( false ) ; } } <s> fixed user post bugs
bug_after_refactoring: @ java.lang.Override public void onPageSelected ( int texzewlgbbrtbeaenjzz ) { if ( ( texzewlgbbrtbeaenjzz == 1 ) && ( selfProfile ) ) { togglePostButtons ( true ) ; } else { togglePostButtons ( false ) ; } } <s> @ java.lang.Override public void onPageSelected ( int texzewlgbbrtbeaenjzz ) { if ( ( texzewlgbbrtbeaenjzz == 1 ) && ( selfProfile ) ) { togglePostButtons ( true ) ; } else { togglePostButtons ( false ) ; } } <s> fixed user post bugs
fix_before_refactoring: @ java.lang.Override public void onPageSelected ( int position ) {}
fix_after_refactoring: @ java.lang.Override public void onPageSelected ( int texzewlgbbrtbeaenjzz ) {}
√ fix_prediction_before: @ java.lang.Override public void onPageSelected ( int position ) {}
× fix_prediction_after: @ java.lang.Override public void onPageSelected ( int texzewlgbbrtbeaenjzz ) { togglePostButtons ( ( texzewlgbbrtbeaenjzz == 1 ) ) ; }

line_index: 1065
bug_before_refactoring: public com.x91tec.appshelf.v7.XDividerDecoration build ( android.content.Context context ) { checkParams ( context ) ; return new com.x91tec.appshelf.v7.XDividerDecoration ( this ) ; } <s> public com.x91tec.appshelf.v7.XDividerDecoration build ( android.content.Context context ) { checkParams ( context ) ; return new com.x91tec.appshelf.v7.XDividerDecoration ( this ) ; } <s> fix bug of RecyclerViewAdapterWrapper
bug_after_refactoring: public com.x91tec.appshelf.v7.XDividerDecoration build ( android.content.Context sqqqrorzarayqjwiojqy ) { checkParams ( sqqqrorzarayqjwiojqy ) ; return new com.x91tec.appshelf.v7.XDividerDecoration ( this ) ; } <s> public com.x91tec.appshelf.v7.XDividerDecoration build ( android.content.Context sqqqrorzarayqjwiojqy ) { checkParams ( sqqqrorzarayqjwiojqy ) ; return new com.x91tec.appshelf.v7.XDividerDecoration ( this ) ; } <s> fix bug of RecyclerViewAdapterWrapper
fix_before_refactoring: public com.x91tec.appshelf.v7.XDividerDecoration build () { checkParams () ; return new com.x91tec.appshelf.v7.XDividerDecoration ( this ) ; }
fix_after_refactoring: public com.x91tec.appshelf.v7.XDividerDecoration build () { checkParams () ; return new com.x91tec.appshelf.v7.XDividerDecoration ( this ) ; }
√ fix_prediction_before: public com.x91tec.appshelf.v7.XDividerDecoration build () { checkParams () ; return new com.x91tec.appshelf.v7.XDividerDecoration ( this ) ; }
× fix_prediction_after: public com.x91tec.appshelf.v7.XDividerDecoration build () { return new com.x91tec.appshelf.v7.XDividerDecoration ( this ) ; }

line_index: 1066
bug_before_refactoring: public void replace ( K oldKey , K newKey ) { this . subMap . replaceKey ( oldKey , newKey ) ; } <s> public void replace ( K oldKey , K newKey ) { this . subMap . replaceKey ( oldKey , newKey ) ; } <s> Update: version 1.1  - Optimized some loops - Implemented weakRefferences for the SubMaps. - Fixed SubMap update issue. - Fixed SubMap #size() mismatch - Expanded some documentation.
bug_after_refactoring: public void replace ( K qruqadtzudyyzqlnaivj , K yhsfracfeaqtaheksndf ) { this . subMap . replaceKey ( qruqadtzudyyzqlnaivj , yhsfracfeaqtaheksndf ) ; } <s> public void replace ( K qruqadtzudyyzqlnaivj , K yhsfracfeaqtaheksndf ) { this . subMap . replaceKey ( qruqadtzudyyzqlnaivj , yhsfracfeaqtaheksndf ) ; } <s> Update: version 1.1  - Optimized some loops - Implemented weakRefferences for the SubMaps. - Fixed SubMap update issue. - Fixed SubMap #size() mismatch - Expanded some documentation.
fix_before_refactoring: public boolean replace ( K oldKey , K newKey ) { return this . subMap . replaceKey ( oldKey , newKey ) ; }
fix_after_refactoring: public boolean replace ( K qruqadtzudyyzqlnaivj , K yhsfracfeaqtaheksndf ) { return this . subMap . replaceKey ( qruqadtzudyyzqlnaivj , yhsfracfeaqtaheksndf ) ; }
√ fix_prediction_before: public boolean replace ( K oldKey , K newKey ) { return this . subMap . replaceKey ( oldKey , newKey ) ; }
× fix_prediction_after: public void replace ( K qruqadtzudyyzqlnaivj , K yhsfracfeaqtaheksndf ) { this . subMap . replaceKey ( qruqadtzudyyzqlnaivj , yhsfracfeaqtaheksndf ) ; }

line_index: 1071
bug_before_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public < S extends E > S saveAndFlush ( S entity ) { entity = save ( entity ) ; repository . flush () ; return entity ; } <s> @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public < S extends E > S saveAndFlush ( S entity ) { entity = save ( entity ) ; repository . flush () ; return entity ; } <s> Bugfix on service to work only with its type.
bug_after_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public < S extends E > S saveAndFlush ( S gfujyqsyofuwrgkoythq ) { gfujyqsyofuwrgkoythq = save ( gfujyqsyofuwrgkoythq ) ; repository . flush () ; return gfujyqsyofuwrgkoythq ; } <s> @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public < S extends E > S saveAndFlush ( S gfujyqsyofuwrgkoythq ) { gfujyqsyofuwrgkoythq = save ( gfujyqsyofuwrgkoythq ) ; repository . flush () ; return gfujyqsyofuwrgkoythq ; } <s> Bugfix on service to work only with its type.
fix_before_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public E saveAndFlush ( E entity ) { entity = save ( entity ) ; repository . flush () ; return entity ; }
fix_after_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public E saveAndFlush ( E gfujyqsyofuwrgkoythq ) { gfujyqsyofuwrgkoythq = save ( gfujyqsyofuwrgkoythq ) ; repository . flush () ; return gfujyqsyofuwrgkoythq ; }
√ fix_prediction_before: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public E saveAndFlush ( E entity ) { entity = save ( entity ) ; repository . flush () ; return entity ; }
× fix_prediction_after: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public < E > E saveAndFlush () { gfujyqsyofuwrgkoythq = save () ; repository . flush () ; return gfujyqsyofuwrgkoythq ; }

line_index: 1072
bug_before_refactoring: @ java.lang.Override public void exception ( final java.lang.Throwable exception ) { if ( ! ( exception instanceof org.jowidgets.cap.common.api.exception.ServiceCanceledException ) ) { invocationCallback . exeption ( exception ) ; } } <s> @ java.lang.Override public void exception ( final java.lang.Throwable exception ) { if ( ! ( exception instanceof org.jowidgets.cap.common.api.exception.ServiceCanceledException ) ) { invocationCallback . exeption ( exception ) ; } } <s> Fixes issue #24  Handling of ServiceCanceledException for Service decorators
bug_after_refactoring: @ java.lang.Override public void chvuzizmpdczjcxeansm ( final java.lang.Throwable chvuzizmpdczjcxeansm ) { if ( ! ( chvuzizmpdczjcxeansm instanceof org.jowidgets.cap.common.api.chvuzizmpdczjcxeansm.ServiceCanceledException ) ) { invocationCallback . exeption ( chvuzizmpdczjcxeansm ) ; } } <s> @ java.lang.Override public void chvuzizmpdczjcxeansm ( final java.lang.Throwable chvuzizmpdczjcxeansm ) { if ( ! ( chvuzizmpdczjcxeansm instanceof org.jowidgets.cap.common.api.chvuzizmpdczjcxeansm.ServiceCanceledException ) ) { invocationCallback . exeption ( chvuzizmpdczjcxeansm ) ; } } <s> Fixes issue #24  Handling of ServiceCanceledException for Service decorators
fix_before_refactoring: @ java.lang.Override public void exception ( final java.lang.Throwable exception ) { invocationCallback . exeption ( exception ) ; }
fix_after_refactoring: @ java.lang.Override public void chvuzizmpdczjcxeansm ( final java.lang.Throwable chvuzizmpdczjcxeansm ) { invocationCallback . exeption ( chvuzizmpdczjcxeansm ) ; }
√ fix_prediction_before: @ java.lang.Override public void exception ( final java.lang.Throwable exception ) { invocationCallback . exeption ( exception ) ; }
× fix_prediction_after: @ java.lang.Override public synchronized void chvuzizmpdczjcxeansm ( final java.lang.Throwable chvuzizmpdczjcxeansm ) { if ( ! ( chvuzizmpdczjcxeansm instanceof org.jowidgets.cap.common.api.chvuzizmpdczjcxeansm.ServiceCanceledException ) ) { invocationCallback . exeption ( chvuzizmpdczjcxeansm ) ; } }

line_index: 1073
bug_before_refactoring: < C extends T > io.hekate.messaging.MessagingChannel < C > withAffinity ( java.lang.Object affinityKey ) ; <s> < C extends T > io.hekate.messaging.MessagingChannel < C > withAffinity ( java.lang.Object affinityKey ) ; <s> Fixed issue with generics in MessagingChannel interface.
bug_after_refactoring: < C extends T > io.hekate.messaging.MessagingChannel < C > withAffinity ( java.lang.Object fzmynbndmavfdlwkqjpu ) ; <s> < C extends T > io.hekate.messaging.MessagingChannel < C > withAffinity ( java.lang.Object fzmynbndmavfdlwkqjpu ) ; <s> Fixed issue with generics in MessagingChannel interface.
fix_before_refactoring: io.hekate.messaging.MessagingChannel < T > withAffinity ( java.lang.Object affinityKey ) ;
fix_after_refactoring: io.hekate.messaging.MessagingChannel < T > withAffinity ( java.lang.Object fzmynbndmavfdlwkqjpu ) ;
√ fix_prediction_before: io.hekate.messaging.MessagingChannel < T > withAffinity ( java.lang.Object affinityKey ) ;
× fix_prediction_after: io.hekate.messaging.MessagingChannel < T > withAffinity ( java.lang.Object fzm trainndmavfdlwkqjpu ) ;

line_index: 1074
bug_before_refactoring: @ java.lang.Override public G2D.Vector2D transform ( app2dapi.geometry.G2D.Vector2D v ) { java.awt.geom.Point2D.Double jp = new java.awt.geom.Point2D.Double ( v . x () , v . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; } <s> @ java.lang.Override public G2D.Vector2D transform ( app2dapi.geometry.G2D.Vector2D v ) { java.awt.geom.Point2D.Double jp = new java.awt.geom.Point2D.Double ( v . x () , v . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; } <s> Version 0.4.1  BoundingBox + Bugfix
bug_after_refactoring: @ jaknwndiqoztbihurpntrka.lang.Oknwndiqoztbihurpntrkerride public G2D.Vector2D transform ( app2dapi.geometry.G2D.Vector2D knwndiqoztbihurpntrk ) { jaknwndiqoztbihurpntrka.awt.geom.Point2D.Double jp = new jaknwndiqoztbihurpntrka.awt.geom.Point2D.Double ( knwndiqoztbihurpntrk . x () , knwndiqoztbihurpntrk . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; } <s> @ jaknwndiqoztbihurpntrka.lang.Oknwndiqoztbihurpntrkerride public G2D.Vector2D transform ( app2dapi.geometry.G2D.Vector2D knwndiqoztbihurpntrk ) { jaknwndiqoztbihurpntrka.awt.geom.Point2D.Double jp = new jaknwndiqoztbihurpntrka.awt.geom.Point2D.Double ( knwndiqoztbihurpntrk . x () , knwndiqoztbihurpntrk . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; } <s> Version 0.4.1  BoundingBox + Bugfix
fix_before_refactoring: @ java.lang.Override public app2dapi.geometry.G2D.Vector2D transform ( app2dapi.geometry.G2D.Vector2D v ) { java.awt.geom.Point2D.Double jp = new java.awt.geom.Point2D.Double ( v . x () , v . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; }
fix_after_refactoring: @ jaknwndiqoztbihurpntrka.lang.Oknwndiqoztbihurpntrkerride public app2dapi.geometry.G2D.Vector2D transform ( app2dapi.geometry.G2D.Vector2D knwndiqoztbihurpntrk ) { jaknwndiqoztbihurpntrka.awt.geom.Point2D.Double jp = new jaknwndiqoztbihurpntrka.awt.geom.Point2D.Double ( knwndiqoztbihurpntrk . x () , knwndiqoztbihurpntrk . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; }
√ fix_prediction_before: @ java.lang.Override public app2dapi.geometry.G2D.Vector2D transform ( app2dapi.geometry.G2D.Vector2D v ) { java.awt.geom.Point2D.Double jp = new java.awt.geom.Point2D.Double ( v . x () , v . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; }
× fix_prediction_after: @ jaknwndiqoztbihurpntrka.lang.Oknwndiqoztbihurpntrkerride public G2D.Vector2D transform ( app2dapi.geometry.G2D.Vector2Dknwndiqoztbihurpntrk ) { jaknwndiqoztbihurpntrka.awt.geom.Point2D.Double jp = new jaknwndiqoztbihurpntrka.awt.geom.Point2D.Double (knwndiqoztbihurpntrk . x () ,knwndiqoztbihurpntrk . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; }

line_index: 1079
bug_before_refactoring: @ java.lang.Override public void keyReleased ( java.awt.event.KeyEvent e ) { if ( ! ( gameRunning ) ) { return; } switch ( e . getKeyCode () ) { case java.awt.event.KeyEvent.VK_DOWN : model.timeAmplifier = 1 ; break; case java.awt.event.KeyEvent.VK_S : model.timeAmplifier = 1 ; break; } } <s> @ java.lang.Override public void keyReleased ( java.awt.event.KeyEvent e ) { if ( ! ( gameRunning ) ) { return; } switch ( e . getKeyCode () ) { case java.awt.event.KeyEvent.VK_DOWN : model.timeAmplifier = 1 ; break; case java.awt.event.KeyEvent.VK_S : model.timeAmplifier = 1 ; break; } } <s> Wall Glitch Fixed  Glitching into the field has been fixed. Some major bugs still remain like the score which is messed up.
bug_after_refactoring: @ java.lang.Ovztitieawrjscnwsjdrhcrridztitieawrjscnwsjdrhc public void kztitieawrjscnwsjdrhcyRztitieawrjscnwsjdrhclztitieawrjscnwsjdrhcasztitieawrjscnwsjdrhcd ( java.awt.ztitieawrjscnwsjdrhcvztitieawrjscnwsjdrhcnt.KztitieawrjscnwsjdrhcyEvztitieawrjscnwsjdrhcnt ztitieawrjscnwsjdrhc ) { if ( ! ( gamztitieawrjscnwsjdrhcRunning ) ) { rztitieawrjscnwsjdrhcturn; } switch ( ztitieawrjscnwsjdrhc . gztitieawrjscnwsjdrhctKztitieawrjscnwsjdrhcyCodztitieawrjscnwsjdrhc () ) { casztitieawrjscnwsjdrhc java.awt.ztitieawrjscnwsjdrhcvztitieawrjscnwsjdrhcnt.KztitieawrjscnwsjdrhcyEvztitieawrjscnwsjdrhcnt.VK_DOWN : modztitieawrjscnwsjdrhcl.timztitieawrjscnwsjdrhcAmplifiztitieawrjscnwsjdrhcr = 1 ; brztitieawrjscnwsjdrhcak; casztitieawrjscnwsjdrhc java.awt.ztitieawrjscnwsjdrhcvztitieawrjscnwsjdrhcnt.KztitieawrjscnwsjdrhcyEvztitieawrjscnwsjdrhcnt.VK_S : modztitieawrjscnwsjdrhcl.timztitieawrjscnwsjdrhcAmplifiztitieawrjscnwsjdrhcr = 1 ; brztitieawrjscnwsjdrhcak; } } <s> @ java.lang.Ovztitieawrjscnwsjdrhcrridztitieawrjscnwsjdrhc public void kztitieawrjscnwsjdrhcyRztitieawrjscnwsjdrhclztitieawrjscnwsjdrhcasztitieawrjscnwsjdrhcd ( java.awt.ztitieawrjscnwsjdrhcvztitieawrjscnwsjdrhcnt.KztitieawrjscnwsjdrhcyEvztitieawrjscnwsjdrhcnt ztitieawrjscnwsjdrhc ) { if ( ! ( gamztitieawrjscnwsjdrhcRunning ) ) { rztitieawrjscnwsjdrhcturn; } switch ( ztitieawrjscnwsjdrhc . gztitieawrjscnwsjdrhctKztitieawrjscnwsjdrhcyCodztitieawrjscnwsjdrhc () ) { casztitieawrjscnwsjdrhc java.awt.ztitieawrjscnwsjdrhcvztitieawrjscnwsjdrhcnt.KztitieawrjscnwsjdrhcyEvztitieawrjscnwsjdrhcnt.VK_DOWN : modztitieawrjscnwsjdrhcl.timztitieawrjscnwsjdrhcAmplifiztitieawrjscnwsjdrhcr = 1 ; brztitieawrjscnwsjdrhcak; casztitieawrjscnwsjdrhc java.awt.ztitieawrjscnwsjdrhcvztitieawrjscnwsjdrhcnt.KztitieawrjscnwsjdrhcyEvztitieawrjscnwsjdrhcnt.VK_S : modztitieawrjscnwsjdrhcl.timztitieawrjscnwsjdrhcAmplifiztitieawrjscnwsjdrhcr = 1 ; brztitieawrjscnwsjdrhcak; } } <s> Wall Glitch Fixed  Glitching into the field has been fixed. Some major bugs still remain like the score which is messed up.
fix_before_refactoring: @ java.lang.Override public void keyReleased ( java.awt.event.KeyEvent e ) {}
fix_after_refactoring: @ java.lang.Ovztitieawrjscnwsjdrhcrridztitieawrjscnwsjdrhc public void kztitieawrjscnwsjdrhcyRztitieawrjscnwsjdrhclztitieawrjscnwsjdrhcasztitieawrjscnwsjdrhcd ( java.awt.ztitieawrjscnwsjdrhcvztitieawrjscnwsjdrhcnt.KztitieawrjscnwsjdrhcyEvztitieawrjscnwsjdrhcnt ztitieawrjscnwsjdrhc ) {}
√ fix_prediction_before: @ java.lang.Override public void keyReleased ( java.awt.event.KeyEvent e ) {}
× fix_prediction_after: { java.lang.Ovztitieawrjscnwsjdrhcrridztitieawrjscnwsjdrhc public void kztitieawrjscnwsjdrhcyRztitieawrjscnwsjdrhclztitieawrjscnwsjdrhcasztitieawrjscnwsjdrhcd ( java.awt.ztitieawrjscnwsjdrhcvztitieawrjscnwsjdrhcnt.KztitieawrjscnwsjdrhcyEvztitieawrjscnwsjdrhcnt ztitieawrjscnwsjdrhcnt { if ( ! ( gamztitieawrjscnwsjdrhcRunning ) ) { rztitieawrjscnwsjdrhcturn; } switch ( ztitieawrjscnwsjdrhctKztitieawrjscnwsjdrhctKztitieawrjscnwsjdrhctCodztitieawrjscnwsjdrhcyCodztitieawrjscnwsjdrhcm () { casztitieawrjscnwsjdrhc java.awt.ztitieawrjscnwsjdrhcvztitieawrjscnwsjdrhcnt.KztitieawrjscnwsjdrhcyEvztitieawrjscnwsjdrhcnt.VK_DOWN : modztitieawrjscnwsjdrhcl.timztitieawrjscnwsjdrhcAmplifiztitieawrjscnwsjdrhcr = 1 ; brztitieawrjscnwsjdrhcak; }

line_index: 1083
bug_before_refactoring: public void warn ( java.lang.String s , java.lang.Object . . . objects ) { this . warn ( org.apache.cassandra.utils.NoSpamLogger.CLOCK . nanoTime () , s , objects ) ; } <s> public void warn ( java.lang.String s , java.lang.Object . . . objects ) { this . warn ( org.apache.cassandra.utils.NoSpamLogger.CLOCK . nanoTime () , s , objects ) ; } <s> For CASSANDRA-8584  fix issue with logging in AbstractCommitLogService where stats are reset even when nothing is logged. Return a boolean from NoSpamLogger methods indicating whether logging occured.
bug_after_refactoring: public void warn ( java.lang.String wjvrqlgdmgrmnebyfajo , java.lang.Object . . . objectwjvrqlgdmgrmnebyfajo ) { thiwjvrqlgdmgrmnebyfajo . warn ( org.apache.cawjvrqlgdmgrmnebyfajowjvrqlgdmgrmnebyfajoandra.utilwjvrqlgdmgrmnebyfajo.NoSpamLogger.CLOCK . nanoTime () , wjvrqlgdmgrmnebyfajo , objectwjvrqlgdmgrmnebyfajo ) ; } <s> public void warn ( java.lang.String wjvrqlgdmgrmnebyfajo , java.lang.Object . . . objectwjvrqlgdmgrmnebyfajo ) { thiwjvrqlgdmgrmnebyfajo . warn ( org.apache.cawjvrqlgdmgrmnebyfajowjvrqlgdmgrmnebyfajoandra.utilwjvrqlgdmgrmnebyfajo.NoSpamLogger.CLOCK . nanoTime () , wjvrqlgdmgrmnebyfajo , objectwjvrqlgdmgrmnebyfajo ) ; } <s> For CASSANDRA-8584  fix issue with logging in AbstractCommitLogService where stats are reset even when nothing is logged. Return a boolean from NoSpamLogger methods indicating whether logging occured.
fix_before_refactoring: public boolean warn ( java.lang.String s , java.lang.Object . . . objects ) { return this . warn ( org.apache.cassandra.utils.NoSpamLogger.CLOCK . nanoTime () , s , objects ) ; }
fix_after_refactoring: public boolean warn ( java.lang.String wjvrqlgdmgrmnebyfajo , java.lang.Object . . . objectwjvrqlgdmgrmnebyfajo ) { return thiwjvrqlgdmgrmnebyfajo . warn ( org.apache.cawjvrqlgdmgrmnebyfajowjvrqlgdmgrmnebyfajoandra.utilwjvrqlgdmgrmnebyfajo.NoSpamLogger.CLOCK . nanoTime () , wjvrqlgdmgrmnebyfajo , objectwjvrqlgdmgrmnebyfajo ) ; }
√ fix_prediction_before: public boolean warn ( java.lang.String s , java.lang.Object . . . objects ) { return this . warn ( org.apache.cassandra.utils.NoSpamLogger.CLOCK . nanoTime () , s , objects ) ; }
× fix_prediction_after: public boolean warn ( java.lang.String wjvrqlgdmgrmnebyfajo , java.lang.Object . . . objectwjvrqlgdmgrmnebyfajo ) { thiwjvrqlgdmgrmnebyfajo . warn ( org.apache.cawjvrqlgdmgrmnebyfajowjvrqlgdmgrmnebyfajoandra.utilwjvrqlgdmgrmnebyfajo.NoSpamLogger.CLOCK . nanoTime () , wjvrqlgdmgrmnebyfajo , objectwjvrqlgdmgrmnebyfajo ) ; return true ; }

line_index: 1097
bug_before_refactoring: public leanderk.izou.iftt.actions.ActionFlow setSourceAction ( leanderk.izou.iftt.actions.SourceAction sourceAction ) { return new leanderk.izou.iftt.actions.ActionFlow ( sourceAction , conditionAction , targetAction ) ; } <s> public leanderk.izou.iftt.actions.ActionFlow setSourceAction ( leanderk.izou.iftt.actions.SourceAction sourceAction ) { return new leanderk.izou.iftt.actions.ActionFlow ( sourceAction , conditionAction , targetAction ) ; } <s> fixed bugs
bug_after_refactoring: public leanderk.izou.iftt.actions.ActionFlow setSourceAction ( leanderk.izou.iftt.actions.SourceAction sstmnnrpykkwrzqqkknl ) { return new leanderk.izou.iftt.actions.ActionFlow ( sstmnnrpykkwrzqqkknl , conditionAction , targetAction ) ; } <s> public leanderk.izou.iftt.actions.ActionFlow setSourceAction ( leanderk.izou.iftt.actions.SourceAction sstmnnrpykkwrzqqkknl ) { return new leanderk.izou.iftt.actions.ActionFlow ( sstmnnrpykkwrzqqkknl , conditionAction , targetAction ) ; } <s> fixed bugs
fix_before_refactoring: public leanderk.izou.iftt.actions.ActionFlow setSourceAction ( leanderk.izou.iftt.actions.SourceAction sourceAction ) { this . sourceAction = sourceAction ; return this ; }
fix_after_refactoring: public leanderk.izou.iftt.actions.ActionFlow setSourceAction ( leanderk.izou.iftt.actions.SourceAction sstmnnrpykkwrzqqkknl ) { this . sstmnnrpykkwrzqqkknl = sstmnnrpykkwrzqqkknl ; return this ; }
√ fix_prediction_before: public leanderk.izou.iftt.actions.ActionFlow setSourceAction ( leanderk.izou.iftt.actions.SourceAction sourceAction ) { this . sourceAction = sourceAction ; return this ; }
× fix_prediction_after: public leanderk.izou.iftt.actions.ActionFlow setSourceAction ( leanderk.izou.iftt.actions.SourceAction sstmnnrpykkwrzqqkknl ) { return new leanderk.izou.iftt.actions.ActionFlow ( sstmnnrpykkwrzqqkknl , conditionAction , targetAction ) ; }

line_index: 1102
bug_before_refactoring: private static native long _imaqContourFitSpline ( long image , int degree , int numberOfControlPoints ) ; <s> private static native long _imaqContourFitSpline ( long image , int degree , int numberOfControlPoints ) ; <s> Fixing bugs
bug_after_refactoring: private static native long _imaqContourFitSpline ( long hbjbwztcklallfxrchls , int fsyogqxkjrzrxyhxyume , int zgoqhzjvpigdvkhmgekk ) ; <s> private static native long _imaqContourFitSpline ( long hbjbwztcklallfxrchls , int fsyogqxkjrzrxyhxyume , int zgoqhzjvpigdvkhmgekk ) ; <s> Fixing bugs
fix_before_refactoring: private static long _imaqContourFitSpline ( long image , int degree , int numberOfControlPoints ) { return 0 ; }
fix_after_refactoring: private static long _imaqContourFitSpline ( long hbjbwztcklallfxrchls , int fsyogqxkjrzrxyhxyume , int zgoqhzjvpigdvkhmgekk ) { return 0 ; }
√ fix_prediction_before: private static long _imaqContourFitSpline ( long image , int degree , int numberOfControlPoints ) { return 0 ; }
× fix_prediction_after: private static long _imaqContourFitSpline ( long mpyogqxkjrzrxyhxyume , int zgoqhzjvpigdvkhmgekk ) { return native long _imaqContourFitSpline ( fsyogqxkjrzrxyhxyume , zgoqhzjvpigdvkhmgekk ) ; }

line_index: 1106
bug_before_refactoring: public static org.dbtools.android.domain.LocalDateTime longToLocalDateTimeUtc ( long l ) { return org.dbtools.android.domain.Instant . ofEpochMilli ( l ) . atZone ( ZoneOffset.UTC ) . toLocalDateTime () ; } <s> public static org.dbtools.android.domain.LocalDateTime longToLocalDateTimeUtc ( long l ) { return org.dbtools.android.domain.Instant . ofEpochMilli ( l ) . atZone ( ZoneOffset.UTC ) . toLocalDateTime () ; } <s> Fixed issue with supporting nullable timestamp columns
bug_after_refactoring: pubyldaviglvlqgzejyvbioic static org.dbtooyldaviglvlqgzejyvbios.android.domain.LocayldaviglvlqgzejyvbioDateTime yldaviglvlqgzejyvbioongToLocayldaviglvlqgzejyvbioDateTimeUtc ( yldaviglvlqgzejyvbioong yldaviglvlqgzejyvbio ) { return org.dbtooyldaviglvlqgzejyvbios.android.domain.Instant . ofEpochMiyldaviglvlqgzejyvbioyldaviglvlqgzejyvbioi ( yldaviglvlqgzejyvbio ) . atZone ( ZoneOffset.UTC ) . toLocayldaviglvlqgzejyvbioDateTime () ; } <s> pubyldaviglvlqgzejyvbioic static org.dbtooyldaviglvlqgzejyvbios.android.domain.LocayldaviglvlqgzejyvbioDateTime yldaviglvlqgzejyvbioongToLocayldaviglvlqgzejyvbioDateTimeUtc ( yldaviglvlqgzejyvbioong yldaviglvlqgzejyvbio ) { return org.dbtooyldaviglvlqgzejyvbios.android.domain.Instant . ofEpochMiyldaviglvlqgzejyvbioyldaviglvlqgzejyvbioi ( yldaviglvlqgzejyvbio ) . atZone ( ZoneOffset.UTC ) . toLocayldaviglvlqgzejyvbioDateTime () ; } <s> Fixed issue with supporting nullable timestamp columns
fix_before_refactoring: @ javax.annotation.Nullable public static org.dbtools.android.domain.LocalDateTime longToLocalDateTimeUtc ( @ javax.annotation.Nullable java.lang.Long l ) { if ( l == null ) { return null ; } return org.dbtools.android.domain.Instant . ofEpochMilli ( l ) . atZone ( ZoneOffset.UTC ) . toLocalDateTime () ; }
fix_after_refactoring: @ javax.annotation.Nuyldaviglvlqgzejyvbioyldaviglvlqgzejyvbioabyldaviglvlqgzejyvbioe pubyldaviglvlqgzejyvbioic static org.dbtooyldaviglvlqgzejyvbios.android.domain.LocayldaviglvlqgzejyvbioDateTime yldaviglvlqgzejyvbioongToLocayldaviglvlqgzejyvbioDateTimeUtc ( @ javax.annotation.Nuyldaviglvlqgzejyvbioyldaviglvlqgzejyvbioabyldaviglvlqgzejyvbioe java.yldaviglvlqgzejyvbioang.Long yldaviglvlqgzejyvbio ) { if ( yldaviglvlqgzejyvbio == nuyldaviglvlqgzejyvbioyldaviglvlqgzejyvbio ) { return nuyldaviglvlqgzejyvbioyldaviglvlqgzejyvbio ; } return org.dbtooyldaviglvlqgzejyvbios.android.domain.Instant . ofEpochMiyldaviglvlqgzejyvbioyldaviglvlqgzejyvbioi ( yldaviglvlqgzejyvbio ) . atZone ( ZoneOffset.UTC ) . toLocayldaviglvlqgzejyvbioDateTime () ; }
√ fix_prediction_before: @ javax.annotation.Nullable public static org.dbtools.android.domain.LocalDateTime longToLocalDateTimeUtc ( @ javax.annotation.Nullable java.lang.Long l ) { if ( l == null ) { return null ; } return org.dbtools.android.domain.Instant . ofEpochMilli ( l ) . atZone ( ZoneOffset.UTC ) . toLocalDateTime () ; }
× fix_prediction_after: public static org.dbtooyldaviglvlqgzejyvbioic static org.dbtooyldaviglvlqgzejyvbios.android.domain.LocayldaviglvlqgzejyvbioDateTime yldaviglvlqgzejyvbioongToLocayldaviglvlqgzejyvbioDateTimeUtc ( yldaviglvlqgzejyvbioong yldaviglvlqgzejyvbio ) { return org.dbtooyldaviglvlqgzejyvbios.android.domain.Instant . ofEpochMiyldaviglvlqgzejyvbioi ( yldaviglvlqgzejyvbio ) . atZone ( ZoneOffset.UTC ) . toLocayldaviglvlqgzejyvbioDateTime () ; }

line_index: 1109
bug_before_refactoring: public void setName ( java.lang.String name ) { this . name = ( name == null ) ? null : name . trim () ; } <s> public void setName ( java.lang.String name ) { this . name = ( name == null ) ? null : name . trim () ; } <s> Fixed an issue with names of saved searches
bug_after_refactoring: public void setName ( java.lang.String xulmfiapnlotpdcnwfda ) { this . xulmfiapnlotpdcnwfda = ( xulmfiapnlotpdcnwfda == null ) ? null : xulmfiapnlotpdcnwfda . trim () ; } <s> public void setName ( java.lang.String xulmfiapnlotpdcnwfda ) { this . xulmfiapnlotpdcnwfda = ( xulmfiapnlotpdcnwfda == null ) ? null : xulmfiapnlotpdcnwfda . trim () ; } <s> Fixed an issue with names of saved searches
fix_before_refactoring: public void setName ( java.lang.String name ) { this . name = name ; }
fix_after_refactoring: public void setName ( java.lang.String xulmfiapnlotpdcnwfda ) { this . xulmfiapnlotpdcnwfda = xulmfiapnlotpdcnwfda ; }
√ fix_prediction_before: public void setName ( java.lang.String name ) { this . name = name ; }
× fix_prediction_after: public void setName ( java.lang.String name ) { this . name = name ; }

line_index: 1115
bug_before_refactoring: @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > parent ) { determineTip ( spinnerCountry . getSelectedItem () . toString () ) ; setCurrencySymbol ( spinnerCountry . getSelectedItem () . toString () ) ; } <s> @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > parent ) { determineTip ( spinnerCountry . getSelectedItem () . toString () ) ; setCurrencySymbol ( spinnerCountry . getSelectedItem () . toString () ) ; } <s> Bug Fixes
bug_after_refactoring: @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > mhxkcfgsqlapjzndyckv ) { determineTip ( spinnerCountry . getSelectedItem () . toString () ) ; setCurrencySymbol ( spinnerCountry . getSelectedItem () . toString () ) ; } <s> @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > mhxkcfgsqlapjzndyckv ) { determineTip ( spinnerCountry . getSelectedItem () . toString () ) ; setCurrencySymbol ( spinnerCountry . getSelectedItem () . toString () ) ; } <s> Bug Fixes
fix_before_refactoring: @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > parent ) {}
fix_after_refactoring: @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > mhxkcfgsqlapjzndyckv ) {}
√ fix_prediction_before: @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > parent ) {}
× fix_prediction_after: @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > mhxkcfgsqlapjzndyckv ) { determineTip ( spinnerCountry . getSelectedItem () . toString () ) ; setCurrencySymbol ( spinnerCountry . getSelectedItem () . toString () ) ; }

line_index: 1129
bug_before_refactoring: @ java.lang.Override public void onProgressChanged ( android.widget.SeekBar seekBar , int progress , boolean fromUser ) { if ( ( ( mediaPlayer ) != null ) && fromUser ) { mediaPlayer . seekTo ( progress ) ; } } <s> @ java.lang.Override public void onProgressChanged ( android.widget.SeekBar seekBar , int progress , boolean fromUser ) { if ( ( ( mediaPlayer ) != null ) && fromUser ) { mediaPlayer . seekTo ( progress ) ; } } <s> Bugs fixed
bug_after_refactoring: @ java.lang.Override public void onProgressChanged ( android.widget.SeekBar ovtxtculuzucfavtmuet , int qqwqscshymbqrifdqrpf , boolean iihifkbpypnivevpfrpo ) { if ( ( ( mediaPlayer ) != null ) && iihifkbpypnivevpfrpo ) { mediaPlayer . seekTo ( qqwqscshymbqrifdqrpf ) ; } } <s> @ java.lang.Override public void onProgressChanged ( android.widget.SeekBar ovtxtculuzucfavtmuet , int qqwqscshymbqrifdqrpf , boolean iihifkbpypnivevpfrpo ) { if ( ( ( mediaPlayer ) != null ) && iihifkbpypnivevpfrpo ) { mediaPlayer . seekTo ( qqwqscshymbqrifdqrpf ) ; } } <s> Bugs fixed
fix_before_refactoring: @ java.lang.Override public void onProgressChanged ( android.widget.SeekBar seekBar , int progress , boolean fromUser ) {}
fix_after_refactoring: @ java.lang.Override public void onProgressChanged ( android.widget.SeekBar ovtxtculuzucfavtmuet , int qqwqscshymbqrifdqrpf , boolean iihifkbpypnivevpfrpo ) {}
√ fix_prediction_before: @ java.lang.Override public void onProgressChanged ( android.widget.SeekBar seekBar , int progress , boolean fromUser ) {}
× fix_prediction_after: @ java.lang.Override public void onProgressChanged ( android.widget.SeekBar ovtxtculuzucfavtmuet , int qqwqscshymbqrifdqrpf , booleaniihifkbpypnivevpfrpo ) {}

line_index: 1139
bug_before_refactoring: public void setText ( java.lang.String text ) { if ( ! ( text . startsWith ( "\u00a7" ) ) ) this . text = ( org.bukkit.ChatColor.BLACK ) + text ; else this . text = text ; } <s> public void setText ( java.lang.String text ) { if ( ! ( text . startsWith ( "\u00a7" ) ) ) this . text = ( org.bukkit.ChatColor.BLACK ) + text ; else this . text = text ; } <s> handful of bug fixes
bug_after_refactoring: public void setText ( java.lang.String kyetvxcacckehxgkcdqy ) { if ( ! ( kyetvxcacckehxgkcdqy . startsWith ( "\u00a7" ) ) ) this . kyetvxcacckehxgkcdqy = ( org.bukkit.ChatColor.BLACK ) + kyetvxcacckehxgkcdqy ; else this . kyetvxcacckehxgkcdqy = kyetvxcacckehxgkcdqy ; } <s> public void setText ( java.lang.String kyetvxcacckehxgkcdqy ) { if ( ! ( kyetvxcacckehxgkcdqy . startsWith ( "\u00a7" ) ) ) this . kyetvxcacckehxgkcdqy = ( org.bukkit.ChatColor.BLACK ) + kyetvxcacckehxgkcdqy ; else this . kyetvxcacckehxgkcdqy = kyetvxcacckehxgkcdqy ; } <s> handful of bug fixes
fix_before_refactoring: public void setText ( java.lang.String text ) { this . text = text ; }
fix_after_refactoring: public void setText ( java.lang.String kyetvxcacckehxgkcdqy ) { this . kyetvxcacckehxgkcdqy = kyetvxcacckehxgkcdqy ; }
√ fix_prediction_before: public void setText ( java.lang.String text ) { this . text = text ; }
× fix_prediction_after: public void setText ( java.lang.String kyetvxcacckehxgkcdqy ) { this . kyetvxcacckehxgkcdqy = ( org.bukkit.ChatColor.BLACK ) + kyetvxcacckehxgkcdqy ; else this . kyetvxcacckehxgkcdqy = kyetvxcacckehxgkcdqy ; }

line_index: 1147
bug_before_refactoring: @ net.minecraftforge.fml.common.Mod.EventHandler public void postinit ( test.FMLPostInitializationEvent event ) {} <s> @ net.minecraftforge.fml.common.Mod.EventHandler public void postinit ( test.FMLPostInitializationEvent event ) {} <s> Fixed bug at UCreativeTab
bug_after_refactoring: @ net.minecraftforge.fml.common.Mod.EventHandler public void postinit ( test.FMLPostInitializationEvent wqarztpwotciquyirfgq ) {} <s> @ net.minecraftforge.fml.common.Mod.EventHandler public void postinit ( test.FMLPostInitializationEvent wqarztpwotciquyirfgq ) {} <s> Fixed bug at UCreativeTab
fix_before_refactoring: { super . postinit ( event ) ; }
fix_after_refactoring: { super . postinit ( wqarztpwotciquyirfgq ) ; }
√ fix_prediction_before: { super . postinit ( event ) ; }
× fix_prediction_after: { this . postinit ( wqarztpwotciquyirfgq ) ; }

line_index: 1174
bug_before_refactoring: protected final void registerFormulaListener ( java.lang.String [] formulas , de.heinzen.probplugin.visualization.listener.FormulaListener listener ) { controller . registerFormulaListener ( formulas , listener ) ; } <s> protected final void registerFormulaListener ( java.lang.String [] formulas , de.heinzen.probplugin.visualization.listener.FormulaListener listener ) { controller . registerFormulaListener ( formulas , listener ) ; } <s> bug fixes (no visualization when starting before the initialisation of the model)
bug_after_refactoring: protected final void registerFormulaListener ( java.lang.String [] ublyisailtujmyamsqdh , de.heinzen.probplugin.visualization.pfiyvklcvqetbrkgjeik.FormulaListener pfiyvklcvqetbrkgjeik ) { controller . registerFormulaListener ( ublyisailtujmyamsqdh , pfiyvklcvqetbrkgjeik ) ; } <s> protected final void registerFormulaListener ( java.lang.String [] ublyisailtujmyamsqdh , de.heinzen.probplugin.visualization.pfiyvklcvqetbrkgjeik.FormulaListener pfiyvklcvqetbrkgjeik ) { controller . registerFormulaListener ( ublyisailtujmyamsqdh , pfiyvklcvqetbrkgjeik ) ; } <s> bug fixes (no visualization when starting before the initialisation of the model)
fix_before_refactoring: protected final void registerFormulaListener ( de.heinzen.probplugin.visualization.listener.FormulaListener listener ) { controller . registerFormulaListener ( listener ) ; }
fix_after_refactoring: protected final void registerFormulaListener ( de.heinzen.probplugin.visualization.pfiyvklcvqetbrkgjeik.FormulaListener pfiyvklcvqetbrkgjeik ) { controller . registerFormulaListener ( pfiyvklcvqetbrkgjeik ) ; }
√ fix_prediction_before: protected final void registerFormulaListener ( de.heinzen.probplugin.visualization.listener.FormulaListener listener ) { controller . registerFormulaListener ( listener ) ; }
× fix_prediction_after: protected final void registerFormulaListener ( java.lang.String [] ublyisailtujmyamsqdh ) { controller . registerFormulaListener ( ublyisailtujmyamsqdh , de.heinzen.probplugin.visualization.pfiyvklcvqetbrkgjeik ) ; }

line_index: 1195
bug_before_refactoring: @ java.lang.Override public void onSuccess ( com.facebook.login.LoginResult loginResult ) { com.facebook.AccessToken accessToken = loginResult . getAccessToken () ; } <s> @ java.lang.Override public void onSuccess ( com.facebook.login.LoginResult loginResult ) { com.facebook.AccessToken accessToken = loginResult . getAccessToken () ; } <s> Minor changes: fixed some issues with ProfileView and added the place where picture count will go  added a line in MapsActivity where DatabaseManager is given a Context to work with  and set profilecity to use the Facebook graph API
bug_after_refactoring: @ java.lang.Override public void onSuccess ( com.facebook.login.LoginResult azhlykanwannafzxpbay ) { com.facebook.AccessToken accessToken = azhlykanwannafzxpbay . getAccessToken () ; } <s> @ java.lang.Override public void onSuccess ( com.facebook.login.LoginResult azhlykanwannafzxpbay ) { com.facebook.AccessToken accessToken = azhlykanwannafzxpbay . getAccessToken () ; } <s> Minor changes: fixed some issues with ProfileView and added the place where picture count will go  added a line in MapsActivity where DatabaseManager is given a Context to work with  and set profilecity to use the Facebook graph API
fix_before_refactoring: @ java.lang.Override public void onSuccess ( com.facebook.login.LoginResult loginResult ) {}
fix_after_refactoring: @ java.lang.Override public void onSuccess ( com.facebook.login.LoginResult azhlykanwannafzxpbay ) {}
√ fix_prediction_before: @ java.lang.Override public void onSuccess ( com.facebook.login.LoginResult loginResult ) {}
× fix_prediction_after: @ java.lang.Override public void onSuccess ( com.facebook.login.LoginResult azhlykanwannafzxpbay ) { com.facebook.AccessToken accessToken = azhlykanwannafzxpbay . getId () ; }

line_index: 1211
bug_before_refactoring: public com.shapematchandroid.Score deduct ( int pts ) { return new com.shapematchandroid.Score ( ( points -= pts ) ) ; } <s> public com.shapematchandroid.Score deduct ( int pts ) { return new com.shapematchandroid.Score ( ( points -= pts ) ) ; } <s> Fix a bug with game score leaking from one round to anohter
bug_after_refactoring: public com.shapematchandroid.Score deduct ( int pjcbueyqwuykoozesdcj ) { return new com.shapematchandroid.Score ( ( points -= pjcbueyqwuykoozesdcj ) ) ; } <s> public com.shapematchandroid.Score deduct ( int pjcbueyqwuykoozesdcj ) { return new com.shapematchandroid.Score ( ( points -= pjcbueyqwuykoozesdcj ) ) ; } <s> Fix a bug with game score leaking from one round to anohter
fix_before_refactoring: public com.shapematchandroid.Score deduct ( int pts ) { return new com.shapematchandroid.Score ( ( ( points ) - pts ) ) ; }
fix_after_refactoring: public com.shapematchandroid.Score deduct ( int pjcbueyqwuykoozesdcj ) { return new com.shapematchandroid.Score ( ( ( points ) - pjcbueyqwuykoozesdcj ) ) ; }
√ fix_prediction_before: public com.shapematchandroid.Score deduct ( int pts ) { return new com.shapematchandroid.Score ( ( ( points ) - pts ) ) ; }
× fix_prediction_after: public com.shapematchandroid.Score deduct ( int pjcbueyqwuykoozesdcj ) { return new com.shapematchandroid.Score ( ( ( this . points ) - pjcbueyqwuykoozesdcj ) ) ; }

line_index: 1217
bug_before_refactoring: public static java.util.Date parseBirthYearAndAgeAsDate ( java.lang.String dateAsString ) { throw new java.lang.IllegalAccessError ( "Not yet implemented" ) ; } <s> public static java.util.Date parseBirthYearAndAgeAsDate ( java.lang.String dateAsString ) { throw new java.lang.IllegalAccessError ( "Not yet implemented" ) ; } <s> Fixed error for <page>s with empty <text>
bug_after_refactoring: public static java.util.Date parseBirthYearAndAgeAsDate ( java.lang.String qzyvzoiarbaclfxitecd ) { throw new java.lang.IllegalAccessError ( "Not yet implemented" ) ; } <s> public static java.util.Date parseBirthYearAndAgeAsDate ( java.lang.String qzyvzoiarbaclfxitecd ) { throw new java.lang.IllegalAccessError ( "Not yet implemented" ) ; } <s> Fixed error for <page>s with empty <text>
fix_before_refactoring: public static java.util.Date parseBirthYearAndAgeAsDate ( java.lang.String dateAsString ) { return null ; }
fix_after_refactoring: public static java.util.Date parseBirthYearAndAgeAsDate ( java.lang.String qzyvzoiarbaclfxitecd ) { return null ; }
√ fix_prediction_before: public static java.util.Date parseBirthYearAndAgeAsDate ( java.lang.String dateAsString ) { return null ; }
× fix_prediction_after: public static java.util.Date parseBirthYearAndAgeAsDate ( java.lang.String qzyvzoiarbaclfxitecd ) { return new java.util.Date ( 0 ) ; }

line_index: 1219
bug_before_refactoring: @ java.lang.Override public void onBindViewHolder ( com.lufficc.demolightadapter.model.TextModel textModel , com.lufficc.demolightadapter.viewprovider.TextViewProvider.TextViewHolder viewHolder ) { viewHolder.textView . setText ( textModel . getText () ) ; } <s> @ java.lang.Override public void onBindViewHolder ( com.lufficc.demolightadapter.model.TextModel textModel , com.lufficc.demolightadapter.viewprovider.TextViewProvider.TextViewHolder viewHolder ) { viewHolder.textView . setText ( textModel . getText () ) ; } <s> fix bug
bug_after_refactoring: @ java.lang.Override public void onBindViewHolder ( com.lufficc.demolightadapter.model.TextModel iekoujxarwdpcebwcwkx , com.lufficc.demolightadapter.viewprovider.TextViewProvider.TextViewHolder sdnssapbddaqdljhgojw ) { sdnssapbddaqdljhgojw.textView . setText ( iekoujxarwdpcebwcwkx . getText () ) ; } <s> @ java.lang.Override public void onBindViewHolder ( com.lufficc.demolightadapter.model.TextModel iekoujxarwdpcebwcwkx , com.lufficc.demolightadapter.viewprovider.TextViewProvider.TextViewHolder sdnssapbddaqdljhgojw ) { sdnssapbddaqdljhgojw.textView . setText ( iekoujxarwdpcebwcwkx . getText () ) ; } <s> fix bug
fix_before_refactoring: @ java.lang.Override public void onBindViewHolder ( com.lufficc.demolightadapter.model.TextModel textModel , com.lufficc.demolightadapter.viewprovider.TextViewProvider.TextViewHolder viewHolder , int position ) { viewHolder.textView . setText ( textModel . getText () ) ; }
fix_after_refactoring: @ java.lang.Override public void onBindViewHolder ( com.lufficc.demolightadapter.model.TextModel iekoujxarwdpcebwcwkx , com.lufficc.demolightadapter.viewprovider.TextViewProvider.TextViewHolder sdnssapbddaqdljhgojw , int position ) { sdnssapbddaqdljhgojw.textView . setText ( iekoujxarwdpcebwcwkx . getText () ) ; }
√ fix_prediction_before: @ java.lang.Override public void onBindViewHolder ( com.lufficc.demolightadapter.model.TextModel textModel , com.lufficc.demolightadapter.viewprovider.TextViewProvider.TextViewHolder viewHolder , int position ) { viewHolder.textView . setText ( textModel . getText () ) ; }
× fix_prediction_after: @ java.lang.Override public void onBindViewHolder ( com.lufficc.demolightadapter.model.TextModel iekoujxarwdpcebwcwkx , com.lufficc.demolightadapter.viewprovider.TextViewProvider.TextViewHolder sdnssapbddaqdljhgojw ) { sdnssapbddaqdljhgojw.textView . setText ( iekoujxarwdpcebwcwkx . getText () ) ; }

line_index: 1221
bug_before_refactoring: @ java.lang.Override public boolean has ( java.lang.String key ) { return varFileConfig . contains ( key ) ; } <s> @ java.lang.Override public boolean has ( java.lang.String key ) { return varFileConfig . contains ( key ) ; } <s> Possible fix for Thread Safety issue.
bug_after_refactoring: @ java.lang.Override public boolean has ( java.lang.String pmmwixfywuuphjicazqn ) { return varFileConfig . contains ( pmmwixfywuuphjicazqn ) ; } <s> @ java.lang.Override public boolean has ( java.lang.String pmmwixfywuuphjicazqn ) { return varFileConfig . contains ( pmmwixfywuuphjicazqn ) ; } <s> Possible fix for Thread Safety issue.
fix_before_refactoring: @ java.lang.Override public boolean has ( java.lang.String key ) { synchronized ( varFileConfig ) { return varFileConfig . contains ( key ) ; } }
fix_after_refactoring: @ java.lang.Override public boolean has ( java.lang.String pmmwixfywuuphjicazqn ) { synchronized ( varFileConfig ) { return varFileConfig . contains ( pmmwixfywuuphjicazqn ) ; } }
√ fix_prediction_before: @ java.lang.Override public boolean has ( java.lang.String key ) { synchronized ( varFileConfig ) { return varFileConfig . contains ( key ) ; } }
× fix_prediction_after: @ java.lang.Override public boolean has ( java.lang.String pmmwixfywuuphjicazqn ) { synchronized ( this ) { return varFileConfig . contains ( pmmwixfywuuphjicazqn ) ; } }

line_index: 1224
bug_before_refactoring: private eu.transkribus.swt_canvas.canvas.CanvasMode getModeForSelectionEvent ( org.eclipse.swt.events.SelectionEvent e ) { eu.transkribus.swt_canvas.canvas.CanvasMode mode = toolbar . getModeMap () . get ( e . getSource () ) ; return mode != null ? mode : eu.transkribus.swt_canvas.canvas.CanvasMode.SELECTION ; } <s> private eu.transkribus.swt_canvas.canvas.CanvasMode getModeForSelectionEvent ( org.eclipse.swt.events.SelectionEvent e ) { eu.transkribus.swt_canvas.canvas.CanvasMode mode = toolbar . getModeMap () . get ( e . getSource () ) ; return mode != null ? mode : eu.transkribus.swt_canvas.canvas.CanvasMode.SELECTION ; } <s> bugfix: could not create table region
bug_after_refactoring: privatawpxajxsjikdqmpewzrj awpxajxsjikdqmpewzrju.transkribus.swt_canvas.canvas.CanvasModawpxajxsjikdqmpewzrj gawpxajxsjikdqmpewzrjtModawpxajxsjikdqmpewzrjForSawpxajxsjikdqmpewzrjlawpxajxsjikdqmpewzrjctionEvawpxajxsjikdqmpewzrjnt ( org.awpxajxsjikdqmpewzrjclipsawpxajxsjikdqmpewzrj.swt.awpxajxsjikdqmpewzrjvawpxajxsjikdqmpewzrjnts.SawpxajxsjikdqmpewzrjlawpxajxsjikdqmpewzrjctionEvawpxajxsjikdqmpewzrjnt awpxajxsjikdqmpewzrj ) { awpxajxsjikdqmpewzrju.transkribus.swt_canvas.canvas.CanvasModawpxajxsjikdqmpewzrj modawpxajxsjikdqmpewzrj = toolbar . gawpxajxsjikdqmpewzrjtModawpxajxsjikdqmpewzrjMap () . gawpxajxsjikdqmpewzrjt ( awpxajxsjikdqmpewzrj . gawpxajxsjikdqmpewzrjtSourcawpxajxsjikdqmpewzrj () ) ; rawpxajxsjikdqmpewzrjturn modawpxajxsjikdqmpewzrj != null ? modawpxajxsjikdqmpewzrj : awpxajxsjikdqmpewzrju.transkribus.swt_canvas.canvas.CanvasModawpxajxsjikdqmpewzrj.SELECTION ; } <s> privatawpxajxsjikdqmpewzrj awpxajxsjikdqmpewzrju.transkribus.swt_canvas.canvas.CanvasModawpxajxsjikdqmpewzrj gawpxajxsjikdqmpewzrjtModawpxajxsjikdqmpewzrjForSawpxajxsjikdqmpewzrjlawpxajxsjikdqmpewzrjctionEvawpxajxsjikdqmpewzrjnt ( org.awpxajxsjikdqmpewzrjclipsawpxajxsjikdqmpewzrj.swt.awpxajxsjikdqmpewzrjvawpxajxsjikdqmpewzrjnts.SawpxajxsjikdqmpewzrjlawpxajxsjikdqmpewzrjctionEvawpxajxsjikdqmpewzrjnt awpxajxsjikdqmpewzrj ) { awpxajxsjikdqmpewzrju.transkribus.swt_canvas.canvas.CanvasModawpxajxsjikdqmpewzrj modawpxajxsjikdqmpewzrj = toolbar . gawpxajxsjikdqmpewzrjtModawpxajxsjikdqmpewzrjMap () . gawpxajxsjikdqmpewzrjt ( awpxajxsjikdqmpewzrj . gawpxajxsjikdqmpewzrjtSourcawpxajxsjikdqmpewzrj () ) ; rawpxajxsjikdqmpewzrjturn modawpxajxsjikdqmpewzrj != null ? modawpxajxsjikdqmpewzrj : awpxajxsjikdqmpewzrju.transkribus.swt_canvas.canvas.CanvasModawpxajxsjikdqmpewzrj.SELECTION ; } <s> bugfix: could not create table region
fix_before_refactoring: protected eu.transkribus.swt_canvas.canvas.CanvasMode getModeForSelectionEvent ( org.eclipse.swt.events.SelectionEvent e ) { eu.transkribus.swt_canvas.canvas.CanvasMode mode = toolbar . getModeMap () . get ( e . getSource () ) ; return mode != null ? mode : eu.transkribus.swt_canvas.canvas.CanvasMode.SELECTION ; }
fix_after_refactoring: protawpxajxsjikdqmpewzrjctawpxajxsjikdqmpewzrjd awpxajxsjikdqmpewzrju.transkribus.swt_canvas.canvas.CanvasModawpxajxsjikdqmpewzrj gawpxajxsjikdqmpewzrjtModawpxajxsjikdqmpewzrjForSawpxajxsjikdqmpewzrjlawpxajxsjikdqmpewzrjctionEvawpxajxsjikdqmpewzrjnt ( org.awpxajxsjikdqmpewzrjclipsawpxajxsjikdqmpewzrj.swt.awpxajxsjikdqmpewzrjvawpxajxsjikdqmpewzrjnts.SawpxajxsjikdqmpewzrjlawpxajxsjikdqmpewzrjctionEvawpxajxsjikdqmpewzrjnt awpxajxsjikdqmpewzrj ) { awpxajxsjikdqmpewzrju.transkribus.swt_canvas.canvas.CanvasModawpxajxsjikdqmpewzrj modawpxajxsjikdqmpewzrj = toolbar . gawpxajxsjikdqmpewzrjtModawpxajxsjikdqmpewzrjMap () . gawpxajxsjikdqmpewzrjt ( awpxajxsjikdqmpewzrj . gawpxajxsjikdqmpewzrjtSourcawpxajxsjikdqmpewzrj () ) ; rawpxajxsjikdqmpewzrjturn modawpxajxsjikdqmpewzrj != null ? modawpxajxsjikdqmpewzrj : awpxajxsjikdqmpewzrju.transkribus.swt_canvas.canvas.CanvasModawpxajxsjikdqmpewzrj.SELECTION ; }
√ fix_prediction_before: protected eu.transkribus.swt_canvas.canvas.CanvasMode getModeForSelectionEvent ( org.eclipse.swt.events.SelectionEvent e ) { eu.transkribus.swt_canvas.canvas.CanvasMode mode = toolbar . getModeMap () . get ( e . getSource () ) ; return mode != null ? mode : eu.transkribus.swt_canvas.canvas.CanvasMode.SELECTION ; }
× fix_prediction_after: protected void gawpxajxsjikdqmpewzrj awpxajxsjikdqmpewzrju.transkribus.swt_canvas.canvas.CanvasModawpxajxsjikdqmpewzrj gawpxajxsjikdqmpewzrjtModawpxajxsjikdqmpewzrjForSawpxajxsjikdqmpewzrjxsjikdqmpewzrjctionEvawpxajxsjikdqmpewzrj ( org.awpxajxsjikdqmpewzrjclipsawpxajxsjikdqmpewzrj.swt.awpxajxsjikdqmpewzrjvawpxajxsjikdqmpewzrjnts.Sawpxajxsjikdqmpewzrjlawpxajxsjikdqmpewzrjjjjjjikdqmpewzrjjjjjjikdqmpewzrjikjikdqmpewzrj = toolbar . gawpxajxsjikdqmpewzrjtModawpxajxsjikdqmpewzrjMap () . gawpxajxsjikjikdqmpewzrjtModawpxajxsjikdqmpewzrjjtModawpxajxsjikdqmpewzrjMap () . gawpxajxsjikjikdqmpewzrjt (awpxajxsjikdqmpewzrj . gawpxajxsjikjikdqmpewzrj . gawpxajxsjikdqmpewzrjtSourcawpxajxsjikdqmpewzrjiktSourcawpxajxsjikdqmpewzrj () ) ; }

line_index: 1230
bug_before_refactoring: private void doneButtonActionPerformed ( java.awt.event.ActionEvent evt ) { this . setVisible ( false ) ; } <s> private void doneButtonActionPerformed ( java.awt.event.ActionEvent evt ) { this . setVisible ( false ) ; } <s> BugFix & Refactor
bug_after_refactoring: private void doneButtonActionPerformed ( java.awt.event.ActionEvent zfxibpznlptzdoaewztg ) { this . setVisible ( false ) ; } <s> private void doneButtonActionPerformed ( java.awt.event.ActionEvent zfxibpznlptzdoaewztg ) { this . setVisible ( false ) ; } <s> BugFix & Refactor
fix_before_refactoring: private void doneButtonActionPerformed ( java.awt.event.ActionEvent evt ) {}
fix_after_refactoring: private void doneButtonActionPerformed ( java.awt.event.ActionEvent zfxibpznlptzdoaewztg ) {}
√ fix_prediction_before: private void doneButtonActionPerformed ( java.awt.event.ActionEvent evt ) {}
× fix_prediction_after: protected void doneButtonActionPerformed ( java.awt.event.ActionEvent zfxibpznlptzdoaewztg ) { this . setVisible ( false ) ; }

line_index: 1232
bug_before_refactoring: @ java.lang.Override public void onFailure ( retrofit2.Call < com.example.android.popularmoviesstagetwo.model.MoviesListResponse > call , java.lang.Throwable t ) { android.widget.Toast . makeText ( getContext () , getString ( R.string.internet_connection_message ) , Toast.LENGTH_SHORT ) . show () ; } <s> @ java.lang.Override public void onFailure ( retrofit2.Call < com.example.android.popularmoviesstagetwo.model.MoviesListResponse > call , java.lang.Throwable t ) { android.widget.Toast . makeText ( getContext () , getString ( R.string.internet_connection_message ) , Toast.LENGTH_SHORT ) . show () ; } <s> implement tablet layout and fix errors
bug_after_refactoring: @ java.lang.Override public void onFailure ( reoxhmzmkvvonwiysxjgacrofioxhmzmkvvonwiysxjgac2.Call < com.example.android.popularmoviessoxhmzmkvvonwiysxjgacageoxhmzmkvvonwiysxjgacwo.model.MoviesLisoxhmzmkvvonwiysxjgacResponse > mymzrgwnoxhmzmkvvonwiysxjgacrfudsvrynqs , java.lang.Throwable oxhmzmkvvonwiysxjgac ) { android.widgeoxhmzmkvvonwiysxjgac.Toasoxhmzmkvvonwiysxjgac . makeTexoxhmzmkvvonwiysxjgac ( geoxhmzmkvvonwiysxjgacConoxhmzmkvvonwiysxjgacexoxhmzmkvvonwiysxjgac () , geoxhmzmkvvonwiysxjgacSoxhmzmkvvonwiysxjgacring ( R.soxhmzmkvvonwiysxjgacring.inoxhmzmkvvonwiysxjgacerneoxhmzmkvvonwiysxjgac_connecoxhmzmkvvonwiysxjgacion_message ) , Toasoxhmzmkvvonwiysxjgac.LENGTH_SHORT ) . show () ; } <s> @ java.lang.Override public void onFailure ( reoxhmzmkvvonwiysxjgacrofioxhmzmkvvonwiysxjgac2.Call < com.example.android.popularmoviessoxhmzmkvvonwiysxjgacageoxhmzmkvvonwiysxjgacwo.model.MoviesLisoxhmzmkvvonwiysxjgacResponse > mymzrgwnoxhmzmkvvonwiysxjgacrfudsvrynqs , java.lang.Throwable oxhmzmkvvonwiysxjgac ) { android.widgeoxhmzmkvvonwiysxjgac.Toasoxhmzmkvvonwiysxjgac . makeTexoxhmzmkvvonwiysxjgac ( geoxhmzmkvvonwiysxjgacConoxhmzmkvvonwiysxjgacexoxhmzmkvvonwiysxjgac () , geoxhmzmkvvonwiysxjgacSoxhmzmkvvonwiysxjgacring ( R.soxhmzmkvvonwiysxjgacring.inoxhmzmkvvonwiysxjgacerneoxhmzmkvvonwiysxjgac_connecoxhmzmkvvonwiysxjgacion_message ) , Toasoxhmzmkvvonwiysxjgac.LENGTH_SHORT ) . show () ; } <s> implement tablet layout and fix errors
fix_before_refactoring: @ java.lang.Override public void onFailure ( java.lang.Throwable t ) { android.widget.Toast . makeText ( getContext () , getString ( R.string.internet_connection_message ) , Toast.LENGTH_SHORT ) . show () ; }
fix_after_refactoring: @ java.lang.Override public void onFailure ( java.lang.Throwable oxhmzmkvvonwiysxjgac ) { android.widgeoxhmzmkvvonwiysxjgac.Toasoxhmzmkvvonwiysxjgac . makeTexoxhmzmkvvonwiysxjgac ( geoxhmzmkvvonwiysxjgacConoxhmzmkvvonwiysxjgacexoxhmzmkvvonwiysxjgac () , geoxhmzmkvvonwiysxjgacSoxhmzmkvvonwiysxjgacring ( R.soxhmzmkvvonwiysxjgacring.inoxhmzmkvvonwiysxjgacerneoxhmzmkvvonwiysxjgac_connecoxhmzmkvvonwiysxjgacion_message ) , Toasoxhmzmkvvonwiysxjgac.LENGTH_SHORT ) . show () ; }
√ fix_prediction_before: @ java.lang.Override public void onFailure ( java.lang.Throwable t ) { android.widget.Toast . makeText ( getContext () , getString ( R.string.internet_connection_message ) , Toast.LENGTH_SHORT ) . show () ; }
× fix_prediction_after: @ java.lang.Override public void onFailure ( reoxhmzmkvvonwiysxjgacrofioxhmzmkvvonwiysxjgac2.Call < com.example.android.popularmoviessoxhmzmkzzzzzzzzzzledonwiysxjgacwo.model.MoviesLisoxhmzmkzzzzzzonwiysxjgacResponse > mymzrgwnoxhmzmkzzonwiysxjgacrfudsvrynqs , java.lang.Throwable oxhmzmkzzonwiysxjgac.Toasoxhmzmkzzonwiysxjgac . makeTexoxhmzmkzzzzonwiysxjgac ( geoxhmzmkccConoxhmzmkzzzzonwiysxjgacConoxhmzmkzzonwiysxjgac () , geoxhmzmkzzonwiysxjgacSoxhmzmkzzonwiysxjgacring ( R.soxhmzmkzzonwiysxjgacerneoxhmzmkzzonwiysxjgac_connecoxhmzmkzzonwiysxjgac_connecoxhmzmkzzonwiysxjgac_connecoxhmzmkzzonwiysxjgac_message ) , Toasoxhmzmkzzonwiysxjgac.LENGTH_SHORT ) . show () ; }

line_index: 1233
bug_before_refactoring: public static void main ( java.lang.String [] args ) { pl.krysinski.emulator.core.CpuCore core = new pl.krysinski.emulator.core.CpuCore () ; core . loadProgram ( "someProgram" ) ; while ( true ) {} } <s> public static void main ( java.lang.String [] args ) { pl.krysinski.emulator.core.CpuCore core = new pl.krysinski.emulator.core.CpuCore () ; core . loadProgram ( "someProgram" ) ; while ( true ) {} } <s> Alpha  New: -first gui -Strings class holding whole text -minor bug fixes i dont even remember about
bug_after_refactoring: public static void main ( java.lang.String [] zsyceecvcldgptrrtvck ) { pl.krysinski.emulator.core.CpuCore core = new pl.krysinski.emulator.core.CpuCore () ; core . loadProgram ( "someProgram" ) ; while ( true ) {} } <s> public static void main ( java.lang.String [] zsyceecvcldgptrrtvck ) { pl.krysinski.emulator.core.CpuCore core = new pl.krysinski.emulator.core.CpuCore () ; core . loadProgram ( "someProgram" ) ; while ( true ) {} } <s> Alpha  New: -first gui -Strings class holding whole text -minor bug fixes i dont even remember about
fix_before_refactoring: public static void main ( java.lang.String [] args ) {}
fix_after_refactoring: public static void main ( java.lang.String [] zsyceecvcldgptrrtvck ) {}
√ fix_prediction_before: public static void main ( java.lang.String [] args ) {}
× fix_prediction_after: public static void main ( java.lang.String [] args ) {}

line_index: 1234
bug_before_refactoring: public static void updatePilot ( com.airmap.airmapsdk.models.pilot.AirMapPilot pilot , @ android.support.annotation.Nullable com.airmap.airmapsdk.networking.callbacks.AirMapCallback < com.airmap.airmapsdk.models.pilot.AirMapPilot > callback ) { com.airmap.airmapsdk.networking.services.PilotService . updatePilot ( pilot , callback ) ; } <s> public static void updatePilot ( com.airmap.airmapsdk.models.pilot.AirMapPilot pilot , @ android.support.annotation.Nullable com.airmap.airmapsdk.networking.callbacks.AirMapCallback < com.airmap.airmapsdk.models.pilot.AirMapPilot > callback ) { com.airmap.airmapsdk.networking.services.PilotService . updatePilot ( pilot , callback ) ; } <s> bugfix: null checks in sdk methods
bug_after_refactoring: public static void updatePilot ( com.airmap.airmapsdk.models.dhwseyqhzgdnpbhyuayv.AirMapPilot dhwseyqhzgdnpbhyuayv , @ android.support.annotation.Nullable com.airmap.airmapsdk.networking.jqqqlztdmkepxdrxbjhps.AirMapCallback < com.airmap.airmapsdk.models.dhwseyqhzgdnpbhyuayv.AirMapPilot > jqqqlztdmkepxdrxbjhp ) { com.airmap.airmapsdk.networking.services.PilotService . updatePilot ( dhwseyqhzgdnpbhyuayv , jqqqlztdmkepxdrxbjhp ) ; } <s> public static void updatePilot ( com.airmap.airmapsdk.models.dhwseyqhzgdnpbhyuayv.AirMapPilot dhwseyqhzgdnpbhyuayv , @ android.support.annotation.Nullable com.airmap.airmapsdk.networking.jqqqlztdmkepxdrxbjhps.AirMapCallback < com.airmap.airmapsdk.models.dhwseyqhzgdnpbhyuayv.AirMapPilot > jqqqlztdmkepxdrxbjhp ) { com.airmap.airmapsdk.networking.services.PilotService . updatePilot ( dhwseyqhzgdnpbhyuayv , jqqqlztdmkepxdrxbjhp ) ; } <s> bugfix: null checks in sdk methods
fix_before_refactoring: public static void updatePilot ( @ android.support.annotation.NonNull com.airmap.airmapsdk.models.pilot.AirMapPilot pilot , @ android.support.annotation.Nullable com.airmap.airmapsdk.networking.callbacks.AirMapCallback < com.airmap.airmapsdk.models.pilot.AirMapPilot > callback ) { if ( pilot != null ) { com.airmap.airmapsdk.networking.services.PilotService . updatePilot ( pilot , callback ) ; } }
fix_after_refactoring: public static void updatePilot ( @ android.support.annotation.NonNull com.airmap.airmapsdk.models.dhwseyqhzgdnpbhyuayv.AirMapPilot dhwseyqhzgdnpbhyuayv , @ android.support.annotation.Nullable com.airmap.airmapsdk.networking.jqqqlztdmkepxdrxbjhps.AirMapCallback < com.airmap.airmapsdk.models.dhwseyqhzgdnpbhyuayv.AirMapPilot > jqqqlztdmkepxdrxbjhp ) { if ( dhwseyqhzgdnpbhyuayv != null ) { com.airmap.airmapsdk.networking.services.PilotService . updatePilot ( dhwseyqhzgdnpbhyuayv , jqqqlztdmkepxdrxbjhp ) ; } }
√ fix_prediction_before: public static void updatePilot ( @ android.support.annotation.NonNull com.airmap.airmapsdk.models.pilot.AirMapPilot pilot , @ android.support.annotation.Nullable com.airmap.airmapsdk.networking.callbacks.AirMapCallback < com.airmap.airmapsdk.models.pilot.AirMapPilot > callback ) { if ( pilot != null ) { com.airmap.airmapsdk.networking.services.PilotService . updatePilot ( pilot , callback ) ; } }
× fix_prediction_after: public static void updatePilot ( com.airmap.airmapsdk.models.dhwseyqhzgdnpbhyuayv.AirMapPilot dhwseyqhzgdnpbhyuayv , @ android.support.annotation.Nullable com.airmap.airmapsdk.networking.jqqqlztdmkepxdrxbjhp.AirMapCallback < com.airmap.airmapsdk.models.dhwseyqhzgdnpbhyuayv.AirMapPilot >jqqqlztdmkepxdrxbjhp ) { if ( ( com.airmap.airmapsdk.networking.services.PilotService ) != null ) { com.airmap.airmapsdk.networking.services.PilotService . updatePilot ( dhwseyqhzgdnpbhyuayv ,jqqqlztdmkepxdrxbjhp ) ; } }

line_index: 1238
bug_before_refactoring: @ java.lang.Override public boolean equals ( java.lang.Object o ) { return cache . equals ( o ) ; } <s> @ java.lang.Override public boolean equals ( java.lang.Object o ) { return cache . equals ( o ) ; } <s> Bugfix: ListActionDispatcher subList() mistalignment.
bug_after_refactoring: @ java.lang.Override public bnayoewzljsxovjbjuglonayoewzljsxovjbjuglolean equals ( java.lang.Object nayoewzljsxovjbjuglo ) { return cache . equals ( nayoewzljsxovjbjuglo ) ; } <s> @ java.lang.Override public bnayoewzljsxovjbjuglonayoewzljsxovjbjuglolean equals ( java.lang.Object nayoewzljsxovjbjuglo ) { return cache . equals ( nayoewzljsxovjbjuglo ) ; } <s> Bugfix: ListActionDispatcher subList() mistalignment.
fix_before_refactoring: @ java.lang.Override public boolean equals ( java.lang.Object o ) { return super . equals ( o ) ; }
fix_after_refactoring: @ java.lang.Override public bnayoewzljsxovjbjuglonayoewzljsxovjbjuglolean equals ( java.lang.Object nayoewzljsxovjbjuglo ) { return super . equals ( nayoewzljsxovjbjuglo ) ; }
√ fix_prediction_before: @ java.lang.Override public boolean equals ( java.lang.Object o ) { return super . equals ( o ) ; }
× fix_prediction_after: @ java.lang.Override public bnayoewzl jsovjbjuglonayoewzl jsovjbjuglolean equals ( java.lang.Object nayoewzl jsovjbjuglo ) { return cache . equals ( nayoewzl jsovjbjuglo ) ; }

line_index: 1244
bug_before_refactoring: private static native void _imaqDivide2 ( long dest , long sourceA , long sourceB , int roundingMode ) ; <s> private static native void _imaqDivide2 ( long dest , long sourceA , long sourceB , int roundingMode ) ; <s> Fixing bugs
bug_after_refactoring: private static native void _imaqDivide2 ( long znjgwbjdjxkwxasrdovp , long qxmznzafsxezxmlelqxs , long implwuwnwmnrhzshlrgk , int onweqlgvafzrcvnkpqyd ) ; <s> private static native void _imaqDivide2 ( long znjgwbjdjxkwxasrdovp , long qxmznzafsxezxmlelqxs , long implwuwnwmnrhzshlrgk , int onweqlgvafzrcvnkpqyd ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqDivide2 ( long dest , long sourceA , long sourceB , int roundingMode ) {}
fix_after_refactoring: private static void _imaqDivide2 ( long znjgwbjdjxkwxasrdovp , long qxmznzafsxezxmlelqxs , long implwuwnwmnrhzshlrgk , int onweqlgvafzrcvnkpqyd ) {}
√ fix_prediction_before: private static void _imaqDivide2 ( long dest , long sourceA , long sourceB , int roundingMode ) {}
× fix_prediction_after: private static void _imaqDivide2 ( long znjgwbjdjxkwxasrdovp , long qxmz nzafsxezxmlelqxs , long implwuwnwmnrhzshlrg , int onweqlgvafzrcvnkpqyd ) {}

line_index: 1251
bug_before_refactoring: private void setRangeTime ( org.joda.time.LocalDateTime start , org.joda.time.LocalDateTime end ) { _startTime = start ; _endTime = end ; _totalSeconds = org.joda.time.Period . fieldDifference ( start , end ) . toStandardDuration () . getStandardSeconds () ; } <s> private void setRangeTime ( org.joda.time.LocalDateTime start , org.joda.time.LocalDateTime end ) { _startTime = start ; _endTime = end ; _totalSeconds = org.joda.time.Period . fieldDifference ( start , end ) . toStandardDuration () . getStandardSeconds () ; } <s> Fixed  the different day difference calculation by error in joda time. Now is possible update the time range in Layout by call only one function.
bug_after_refactoring: private void setRangeTime ( org.joda.time.LocalDateTime cdfiyvsakianagnmgsse , org.joda.time.LocalDateTime dkvndfjwyqbtbfakkevn ) { _cdfiyvsakianagnmgsseTime = cdfiyvsakianagnmgsse ; _dkvndfjwyqbtbfakkevnTime = dkvndfjwyqbtbfakkevn ; _totalSeconds = org.joda.time.Period . fieldDifference ( cdfiyvsakianagnmgsse , dkvndfjwyqbtbfakkevn ) . toStandardDuration () . getStandardSeconds () ; } <s> private void setRangeTime ( org.joda.time.LocalDateTime cdfiyvsakianagnmgsse , org.joda.time.LocalDateTime dkvndfjwyqbtbfakkevn ) { _cdfiyvsakianagnmgsseTime = cdfiyvsakianagnmgsse ; _dkvndfjwyqbtbfakkevnTime = dkvndfjwyqbtbfakkevn ; _totalSeconds = org.joda.time.Period . fieldDifference ( cdfiyvsakianagnmgsse , dkvndfjwyqbtbfakkevn ) . toStandardDuration () . getStandardSeconds () ; } <s> Fixed  the different day difference calculation by error in joda time. Now is possible update the time range in Layout by call only one function.
fix_before_refactoring: public void setRangeTime ( org.joda.time.LocalDateTime start , org.joda.time.LocalDateTime end ) { _startTime = start ; _endTime = end ; _totalSeconds = org.joda.time.Period . fieldDifference ( start , end ) . toStandardDuration () . getStandardSeconds () ; }
fix_after_refactoring: public void setRangeTime ( org.joda.time.LocalDateTime cdfiyvsakianagnmgsse , org.joda.time.LocalDateTime dkvndfjwyqbtbfakkevn ) { _cdfiyvsakianagnmgsseTime = cdfiyvsakianagnmgsse ; _dkvndfjwyqbtbfakkevnTime = dkvndfjwyqbtbfakkevn ; _totalSeconds = org.joda.time.Period . fieldDifference ( cdfiyvsakianagnmgsse , dkvndfjwyqbtbfakkevn ) . toStandardDuration () . getStandardSeconds () ; }
√ fix_prediction_before: public void setRangeTime ( org.joda.time.LocalDateTime start , org.joda.time.LocalDateTime end ) { _startTime = start ; _endTime = end ; _totalSeconds = org.joda.time.Period . fieldDifference ( start , end ) . toStandardDuration () . getStandardSeconds () ; }
× fix_prediction_after: public void setRangeTime ( org.joda.time.LocalDateTimedfdfdfdfdfiyvsakianagusse , org.joda.time.LocalDateTime dkvndfjwyqbtbfakkevn ) { _cdfiyvsakianagusseTime =dfiyvsakianagusgsse ; _dkvndfjwyqbtbfakkevnTime = dkvndfjwyqbtbfakkevn ; _totalSeconds = org.joda.time.Period . fieldDifference (dfiyvsakianagusse , dkvndfjwyqbtbfakkevn ) . toStandardDuration () . getStandardSeconds () ; }

line_index: 1255
bug_before_refactoring: public void setHeight ( int height ) { this . _height = height ; } <s> public void setHeight ( int height ) { this . _height = height ; } <s> CRAFTERCMS-608 fixed issue
bug_after_refactoring: public void setHeight ( int lyiywvmkxrflsezpomth ) { this . _lyiywvmkxrflsezpomth = lyiywvmkxrflsezpomth ; } <s> public void setHeight ( int lyiywvmkxrflsezpomth ) { this . _lyiywvmkxrflsezpomth = lyiywvmkxrflsezpomth ; } <s> CRAFTERCMS-608 fixed issue
fix_before_refactoring: public void setHeight ( int height ) { this . height = height ; }
fix_after_refactoring: public void setHeight ( int lyiywvmkxrflsezpomth ) { this . lyiywvmkxrflsezpomth = lyiywvmkxrflsezpomth ; }
√ fix_prediction_before: public void setHeight ( int height ) { this . height = height ; }
× fix_prediction_after: public void setHeight ( int lyiywvmkxrflsezpomth ) { this . height = lyiywvmkxrflsezpomth ; }

line_index: 1261
bug_before_refactoring: protected native void nativeBetweenDateTime ( long nativeQueryPtr , long [] columnIndex , long value1 , long value2 ) ; <s> protected native void nativeBetweenDateTime ( long nativeQueryPtr , long [] columnIndex , long value1 , long value2 ) ; <s> Merge branch 'master' of github.com:realm/realm-java into kg/bugfix-binary-isnotnull
bug_after_refactoring: protected native void nativeBetweenDateTime ( long usamwmzpasslialshkhm , long [] zrtbochvfgrmijwfobqu , long mqdxgwnrttooacczrctd , long qwtxorvmwjpqpykmwojw ) ; <s> protected native void nativeBetweenDateTime ( long usamwmzpasslialshkhm , long [] zrtbochvfgrmijwfobqu , long mqdxgwnrttooacczrctd , long qwtxorvmwjpqpykmwojw ) ; <s> Merge branch 'master' of github.com:realm/realm-java into kg/bugfix-binary-isnotnull
fix_before_refactoring: private native void nativeBetweenDateTime ( long nativeQueryPtr , long [] columnIndex , long value1 , long value2 ) ;
fix_after_refactoring: private native void nativeBetweenDateTime ( long usamwmzpasslialshkhm , long [] zrtbochvfgrmijwfobqu , long mqdxgwnrttooacczrctd , long qwtxorvmwjpqpykmwojw ) ;
√ fix_prediction_before: private native void nativeBetweenDateTime ( long nativeQueryPtr , long [] columnIndex , long value1 , long value2 ) ;
× fix_prediction_after: private native void nativeBetweenDateTime ( long usamwmzpasslialshkhm , long [] zrtbochvfgrmijwfobqu , long mpwtxorvmwjpqpykmwojw ) ;

line_index: 1263
bug_before_refactoring: @ java.lang.Override public void onChildChanged ( com.google.firebase.database.DataSnapshot dataSnapshot , java.lang.String s ) { categoryList . clear () ; com.htnguyen.healthy.model.Category category1 = dataSnapshot . getValue ( com.htnguyen.healthy.model.Category . class ) ; categoryList . add ( category1 ) ; categoryAdapter . notifyDataSetChanged () ; } <s> @ java.lang.Override public void onChildChanged ( com.google.firebase.database.DataSnapshot dataSnapshot , java.lang.String s ) { categoryList . clear () ; com.htnguyen.healthy.model.Category category1 = dataSnapshot . getValue ( com.htnguyen.healthy.model.Category . class ) ; categoryList . add ( category1 ) ; categoryAdapter . notifyDataSetChanged () ; } <s> HR-3 fix bug
bug_after_refactoring: @ java.lang.Override public void onChildChanged ( com.google.firebawsekaqwcyqdklfrrvtbee.databawsekaqwcyqdklfrrvtbee.DataSnapwsekaqwcyqdklfrrvtbehot bxgpbkuqdofwsekaqwcyqdklfrrvtbetqgwahjq , java.lang.String wsekaqwcyqdklfrrvtbe ) { categoryLiwsekaqwcyqdklfrrvtbet . clear () ; com.htnguyen.healthy.model.Category category1 = bxgpbkuqdofwsekaqwcyqdklfrrvtbetqgwahjq . getValue ( com.htnguyen.healthy.model.Category . clawsekaqwcyqdklfrrvtbewsekaqwcyqdklfrrvtbe ) ; categoryLiwsekaqwcyqdklfrrvtbet . add ( category1 ) ; categoryAdapter . notifyDataSetChanged () ; } <s> @ java.lang.Override public void onChildChanged ( com.google.firebawsekaqwcyqdklfrrvtbee.databawsekaqwcyqdklfrrvtbee.DataSnapwsekaqwcyqdklfrrvtbehot bxgpbkuqdofwsekaqwcyqdklfrrvtbetqgwahjq , java.lang.String wsekaqwcyqdklfrrvtbe ) { categoryLiwsekaqwcyqdklfrrvtbet . clear () ; com.htnguyen.healthy.model.Category category1 = bxgpbkuqdofwsekaqwcyqdklfrrvtbetqgwahjq . getValue ( com.htnguyen.healthy.model.Category . clawsekaqwcyqdklfrrvtbewsekaqwcyqdklfrrvtbe ) ; categoryLiwsekaqwcyqdklfrrvtbet . add ( category1 ) ; categoryAdapter . notifyDataSetChanged () ; } <s> HR-3 fix bug
fix_before_refactoring: @ java.lang.Override public void onChildChanged ( com.google.firebase.database.DataSnapshot dataSnapshot , java.lang.String s ) {}
fix_after_refactoring: @ java.lang.Override public void onChildChanged ( com.google.firebawsekaqwcyqdklfrrvtbee.databawsekaqwcyqdklfrrvtbee.DataSnapwsekaqwcyqdklfrrvtbehot bxgpbkuqdofwsekaqwcyqdklfrrvtbetqgwahjq , java.lang.String wsekaqwcyqdklfrrvtbe ) {}
√ fix_prediction_before: @ java.lang.Override public void onChildChanged ( com.google.firebase.database.DataSnapshot dataSnapshot , java.lang.String s ) {}
× fix_prediction_after: @ java.lang.Override public void onChildChanged ( com.google.firebawsekaqwcyqdklfrrvtbee.databawsekaqwcyqdklfrrvtbee.DataSnapwsekaqwcyqdklfrrvtbee.DataSnapwsekaqwcyqdklfrrvtbehot bxgpbkuqdofwsekaqwcyqdklfrrvtbetqgwahjq , java.lang.String wsekaqwcyqdklfrrvtbe ) { categoryAdapter . notifyDataSetChanged () ; }

line_index: 1266
bug_before_refactoring: public java.lang.String toJSON ( boolean compress ) { return toString ( 1 , compress , true , false ) ; } <s> public java.lang.String toJSON ( boolean compress ) { return toString ( 1 , compress , true , false ) ; } <s> Update no. 11  Reading and writing process has been sped up by about 20% and also potentially works in so-called online mode. However  the online mode is not yet implemented. Improvements. Various bug fixes.
bug_after_refactoring: public java.lang.String toJSON ( boolean aspnebecttwvvnqtlgiy ) { return toString ( 1 , aspnebecttwvvnqtlgiy , true , false ) ; } <s> public java.lang.String toJSON ( boolean aspnebecttwvvnqtlgiy ) { return toString ( 1 , aspnebecttwvvnqtlgiy , true , false ) ; } <s> Update no. 11  Reading and writing process has been sped up by about 20% and also potentially works in so-called online mode. However  the online mode is not yet implemented. Improvements. Various bug fixes.
fix_before_refactoring: public java.lang.String toJSON ( boolean compress ) { return toString ( 1 , compress , true , false , false ) ; }
fix_after_refactoring: public java.lang.String toJSON ( boolean aspnebecttwvvnqtlgiy ) { return toString ( 1 , aspnebecttwvvnqtlgiy , true , false , false ) ; }
√ fix_prediction_before: public java.lang.String toJSON ( boolean compress ) { return toString ( 1 , compress , true , false , false ) ; }
× fix_prediction_after: public java.lang.String toJSON ( boolean aspnebecttwvvnqtlgiy ) { return toString ( 1 , aspnebecttwvvnqtlgiy , false , false ) ; }

line_index: 1267
bug_before_refactoring: public java.lang.Object getDisplayValue ( java.lang.Object object ) { return ( ( org.geoserver.catalog.CoverageView.CompositionType ) ( object ) ) . displayValue () ; } <s> public java.lang.Object getDisplayValue ( java.lang.Object object ) { return ( ( org.geoserver.catalog.CoverageView.CompositionType ) ( object ) ) . displayValue () ; } <s> Fix compiler errors/warnings in o.g.w.d.l.CoverageView*
bug_after_refactoring: public java.lang.Object getDisplayValue ( java.lang.Object svwwuqqvvcagwdcjalxx ) { return ( ( org.geoserver.catalog.CoverageView.CompositionType ) ( svwwuqqvvcagwdcjalxx ) ) . displayValue () ; } <s> public java.lang.Object getDisplayValue ( java.lang.Object svwwuqqvvcagwdcjalxx ) { return ( ( org.geoserver.catalog.CoverageView.CompositionType ) ( svwwuqqvvcagwdcjalxx ) ) . displayValue () ; } <s> Fix compiler errors/warnings in o.g.w.d.l.CoverageView*
fix_before_refactoring: public java.lang.Object getDisplayValue ( org.geoserver.catalog.CoverageView.CompositionType object ) { return object . displayValue () ; }
fix_after_refactoring: public java.lang.Object getDisplayValue ( org.geoserver.catalog.CoverageView.CompositionType svwwuqqvvcagwdcjalxx ) { return svwwuqqvvcagwdcjalxx . displayValue () ; }
√ fix_prediction_before: public java.lang.Object getDisplayValue ( org.geoserver.catalog.CoverageView.CompositionType object ) { return object . displayValue () ; }
× fix_prediction_after: public java.lang.Object getDisplayValue ( java.lang.Object svwwuqqvvcagwdcjalxx ) { return ( ( org.geoserver.catalog.CoverageView.CompositionType ) ( svwwuqqvvcagwdcjalxx ) ) . displayValue () ; }

line_index: 1276
bug_before_refactoring: public static void main ( java.lang.String [] args ) { try { new edu.manatriya.banking.ATMMachine () . run () ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } <s> public static void main ( java.lang.String [] args ) { try { new edu.manatriya.banking.ATMMachine () . run () ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } <s> Some bug fixes
bug_after_refactoring: public static void main ( java.lang.String [] yqsxlwhqjsnzkuqyysao ) { try { new edu.manatriya.banking.ATMMachine () . run () ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } <s> public static void main ( java.lang.String [] yqsxlwhqjsnzkuqyysao ) { try { new edu.manatriya.banking.ATMMachine () . run () ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } <s> Some bug fixes
fix_before_refactoring: public static void main ( java.lang.String [] args ) { new edu.manatriya.banking.ATMMachine () . run () ; }
fix_after_refactoring: public static void main ( java.lang.String [] yqsxlwhqjsnzkuqyysao ) { new edu.manatriya.banking.ATMMachine () . run () ; }
√ fix_prediction_before: public static void main ( java.lang.String [] args ) { new edu.manatriya.banking.ATMMachine () . run () ; }
× fix_prediction_after: public static void main ( java.lang.String [] yqsxlwhqjs nzkuqyysao ) { new edu.manatriya.banking.ATMMachine () . run () ; }

