line_index: 1
bug_before_refactoring: private void navigate2Intent ( java.lang.Class cl ) { android.content.Intent intent = new android.content.Intent ( this , cl ) ; startActivity ( intent ) ; } <s> private void navigate2Intent ( java.lang.Class cl ) { android.content.Intent intent = new android.content.Intent ( this , cl ) ; startActivity ( intent ) ; } <s> + Add ScrollView for several Views   - Views: Main  SalesOrder  SalesOrderItem  Settings   + Bug fixes
bug_after_refactoring: private void navigate2Intent ( java.lang.Class qlzorbuilwvswkyswoyz ) { android.content.Intent intent = new android.content.Intent ( this , qlzorbuilwvswkyswoyz ) ; startActivity ( intent ) ; } <s> private void navigate2Intent ( java.lang.Class qlzorbuilwvswkyswoyz ) { android.content.Intent intent = new android.content.Intent ( this , qlzorbuilwvswkyswoyz ) ; startActivity ( intent ) ; } <s> + Add ScrollView for several Views   - Views: Main  SalesOrder  SalesOrderItem  Settings   + Bug fixes
fix_before_refactoring: public void navigate2Intent ( java.lang.Class cl ) { android.content.Intent intent = new android.content.Intent ( this , cl ) ; startActivity ( intent ) ; }
fix_after_refactoring: public void navigate2Intent ( java.lang.Class qlzorbuilwvswkyswoyz ) { android.content.Intent intent = new android.content.Intent ( this , qlzorbuilwvswkyswoyz ) ; startActivity ( intent ) ; }
× fix_prediction_before: public void navigate2Intent ( java.lang.Class cl ) { this . startActivity ( intent ) ; }
× fix_prediction_after: public void navigate2Intent ( java.lang.Class qzkylzky ) {}

line_index: 2
bug_before_refactoring: public autoParker.AutoParkImpl.PositionStatus moveForward ( autoParker.AutoParkImpl.PositionStatus positionStatus ) { street [ ( ( positionStatus.position ) + 1 ) ] = isEmpty () ; positionStatus.position += 1 ; positionStatus.empty = checkIfEmpty ( positionStatus.position ) ; return positionStatus ; } <s> public autoParker.AutoParkImpl.PositionStatus moveForward ( autoParker.AutoParkImpl.PositionStatus positionStatus ) { street [ ( ( positionStatus.position ) + 1 ) ] = isEmpty () ; positionStatus.position += 1 ; positionStatus.empty = checkIfEmpty ( positionStatus.position ) ; return positionStatus ; } <s> fixed test bug. fixed tyle error.
bug_after_refactoring: public autoParker.AutoParkImpl.PositionStatus moveForward ( autoParker.AutoParkImpl.PositionStatus hgenarsmgumfcmxewruq ) { street [ ( ( hgenarsmgumfcmxewruq.position ) + 1 ) ] = isEmpty () ; hgenarsmgumfcmxewruq.position += 1 ; hgenarsmgumfcmxewruq.empty = checkIfEmpty ( hgenarsmgumfcmxewruq.position ) ; return hgenarsmgumfcmxewruq ; } <s> public autoParker.AutoParkImpl.PositionStatus moveForward ( autoParker.AutoParkImpl.PositionStatus hgenarsmgumfcmxewruq ) { street [ ( ( hgenarsmgumfcmxewruq.position ) + 1 ) ] = isEmpty () ; hgenarsmgumfcmxewruq.position += 1 ; hgenarsmgumfcmxewruq.empty = checkIfEmpty ( hgenarsmgumfcmxewruq.position ) ; return hgenarsmgumfcmxewruq ; } <s> fixed test bug. fixed tyle error.
fix_before_refactoring: public autoParker.AutoParkImpl.PositionStatus moveForward () { street [ ( ( positionStatus.position ) + 1 ) ] = isEmpty () ; positionStatus.position += 1 ; positionStatus.empty = checkIfEmpty ( positionStatus.position ) ; return positionStatus ; }
fix_after_refactoring: public autoParker.AutoParkImpl.PositionStatus moveForward () { street [ ( ( hgenarsmgumfcmxewruq.position ) + 1 ) ] = isEmpty () ; hgenarsmgumfcmxewruq.position += 1 ; hgenarsmgumfcmxewruq.empty = checkIfEmpty ( hgenarsmgumfcmxewruq.position ) ; return hgenarsmgumfcmxewruq ; }
× fix_prediction_before: public autoParker.AutoParkImpl.PositionStatus moveForward () { autoEmpty [ ( ( positionStatus.position ) + 1 ) ] = isEmpty () ; positionStatus.position [ positionStatus.position ] = checkIfEmpty ( positionStatus ) ; return positionStatus ; }
× fix_prediction_after: public autoParkerAutoParkImpl.PositionImpl moveForwardPosition () { hruk.mgewars.genewfc.Position < hars.genewmxkmx.mgfc.Position > hars = checkIfAutofc ( hars [ 1 ] ) ; humewumewq.mgewmxgen.gen.AutofcImpl.position [ ( ( humewumewars.position [ 1 ] ) + 1 ) ] = checkIfAutofcParkfcImpl ( hars ) ; return hars ; }

line_index: 3
bug_before_refactoring: private static boolean isStatusDefault ( final byte status ) { return status == ( com.aspsine.swipetoloadlayout.SwipeToLoadLayout.STATUS.STATUS_DEFAULT ) ; } <s> private static boolean isStatusDefault ( final byte status ) { return status == ( com.aspsine.swipetoloadlayout.SwipeToLoadLayout.STATUS.STATUS_DEFAULT ) ; } <s> fix header&footer stock issue other updates: 1.update gradle and support lib 2.change lib dependency appcompat v7 -> support v4.
bug_after_refactoring: private static boolean isStatusDefault ( final byte uapukzxdhylcjzocvudx ) { return uapukzxdhylcjzocvudx == ( com.aspsine.swipetoloadlayout.SwipeToLoadLayout.STATUS.STATUS_DEFAULT ) ; } <s> private static boolean isStatusDefault ( final byte uapukzxdhylcjzocvudx ) { return uapukzxdhylcjzocvudx == ( com.aspsine.swipetoloadlayout.SwipeToLoadLayout.STATUS.STATUS_DEFAULT ) ; } <s> fix header&footer stock issue other updates: 1.update gradle and support lib 2.change lib dependency appcompat v7 -> support v4.
fix_before_refactoring: private static boolean isStatusDefault ( final int status ) { return status == ( com.aspsine.swipetoloadlayout.SwipeToLoadLayout.STATUS.STATUS_DEFAULT ) ; }
fix_after_refactoring: private static boolean isStatusDefault ( final int uapukzxdhylcjzocvudx ) { return uapukzxdhylcjzocvudx == ( com.aspsine.swipetoloadlayout.SwipeToLoadLayout.STATUS.STATUS_DEFAULT ) ; }
× fix_prediction_before: private static boolean isStatusDefault ( final int status ) { return status == ( com.aspsine.swipet.layout.SwipeToLoadLayout.STATUS.STATUS.STATUS_STATUS ) ; }
× fix_prediction_after: private static boolean isStatusDefault ( final byte uzap ) { return uzhukxz.judxap.voc.SwipeToLoadLayout.STATUS_STATUS . equals ( vv ) ; }

line_index: 4
bug_before_refactoring: public java.lang.Boolean exists ( java.lang.String id ) { return petsRepository . exists ( id ) ; } <s> public java.lang.Boolean exists ( java.lang.String id ) { return petsRepository . exists ( id ) ; } <s> fixed issues in mapping
bug_after_refactoring: public java.lang.Boolean exists ( java.lang.String ukplzzwvamfkxhocbtyg ) { return petsRepository . exists ( ukplzzwvamfkxhocbtyg ) ; } <s> public java.lang.Boolean exists ( java.lang.String ukplzzwvamfkxhocbtyg ) { return petsRepository . exists ( ukplzzwvamfkxhocbtyg ) ; } <s> fixed issues in mapping
fix_before_refactoring: public java.lang.Boolean exists ( java.lang.String id ) { return petsRepository . exists ( java.lang.Integer . parseInt ( id ) ) ; }
fix_after_refactoring: public java.lang.Boolean exists ( java.lang.String ukplzzwvamfkxhocbtyg ) { return petsRepository . exists ( java.lang.Integer . parseInt ( ukplzzwvamfkxhocbtyg ) ) ; }
× fix_prediction_before: public java.lang.Boolean exists ( java.lang.String id ) { return petsRepository . exists ( id ) ; }
× fix_prediction_after: public java.lang.Boolean exists ( java.lang.String ukplets ) { return ukvamtygxwamtygx.vamzzxzzx.Repository . exists ( pplets ) ; }

line_index: 5
bug_before_refactoring: private static native void _imaqGetCharCount ( long set ) ; <s> private static native void _imaqGetCharCount ( long set ) ; <s> Fixing bugs
bug_after_refactoring: private static native void _imaqGetCharCount ( long wdplmfvsoxjxxvmqtrkr ) ; <s> private static native void _imaqGetCharCount ( long wdplmfvsoxjxxvmqtrkr ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqGetCharCount ( long set ) {}
fix_after_refactoring: private static void _imaqGetCharCount ( long wdplmfvsoxjxxvmqtrkr ) {}
× fix_prediction_before: private static void _imaqGetChar ( long set ) {}
× fix_prediction_after: private static void _imaqGetCharCount () {}

line_index: 6
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/labelUpdateOrInsert" ) public java.lang.Boolean labelUpdateOrInsert ( com.apcompany.user.pojo.TLabelsRel tlabelsrel , org.springframework.ui.Model model ) { int count = dataService . insertOrUpateTLabelsRel ( tlabelsrel ) ; return count > 0 ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/labelUpdateOrInsert" ) public java.lang.Boolean labelUpdateOrInsert ( com.apcompany.user.pojo.TLabelsRel tlabelsrel , org.springframework.ui.Model model ) { int count = dataService . insertOrUpateTLabelsRel ( tlabelsrel ) ; return count > 0 ; } <s> fix label bug
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/labelUpdateOrInsert" ) public java.lang.Boolean labelUpdateOrInsert ( com.apcompany.user.pojo.TLabelsRel tuhswzowwekhitlvexon , org.springframework.ui.Model syyoayxutohxvmfcmzyq ) { int count = dataService . insertOrUpateTLabelsRel ( tuhswzowwekhitlvexon ) ; return count > 0 ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/labelUpdateOrInsert" ) public java.lang.Boolean labelUpdateOrInsert ( com.apcompany.user.pojo.TLabelsRel tuhswzowwekhitlvexon , org.springframework.ui.Model syyoayxutohxvmfcmzyq ) { int count = dataService . insertOrUpateTLabelsRel ( tuhswzowwekhitlvexon ) ; return count > 0 ; } <s> fix label bug
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/labelUpdateOrInsert" ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String labelUpdateOrInsert ( com.apcompany.user.pojo.TLabelsRel tlabelsrel , org.springframework.ui.Model model ) { int count = dataService . insertOrUpateTLabelsRel ( tlabelsrel ) ; return count > 0 ? "true" : "false" ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/labelUpdateOrInsert" ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String labelUpdateOrInsert ( com.apcompany.user.pojo.TLabelsRel tuhswzowwekhitlvexon , org.springframework.ui.Model syyoayxutohxvmfcmzyq ) { int count = dataService . insertOrUpateTLabelsRel ( tuhswzowwekhitlvexon ) ; return count > 0 ? "true" : "false" ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/labelOrUpdate" ) public java.lang.Boolean insertOrUpdate ( com.apapate.web.ui.Model t , org.springframework.ui.Model t ) { int count = 0 ; if ( count != 0 ) { countOrUpdate = tService . countOrUpdate ( data ) ; } return countOrUpdate ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/labelOrUpdate" ) public java.lang.Boolean countOrUpdate ( @ org.springframework.web.bind.annotation.PathVariable java.lang.Boolean countOrUpdate , @ org.springframework.web.bind.annotation.ModelAttribute ( value = "id" ) int countOr , org.springframework.hexzykhex.mexweexweexweex.ui.Model < com.hitykhex.mexweexweexwejo.Tfc > data ) { intlvUpOrUpdate = countService . countOrUpdate ( data ) ; return countOrUpdate ; }

line_index: 7
bug_before_refactoring: @ java.lang.Override public void onConnectionFailed ( @ android.support.annotation.NonNull com.google.android.gms.common.ConnectionResult connectionResult ) { android.util.Log . d ( com.whirlwind.school1.activity.GoogleSignInActivity.TAG , ( "onConnectionFailed:" + connectionResult ) ) ; android.widget.Toast . makeText ( this , "Google Play Services error." , Toast.LENGTH_SHORT ) . show () ; } <s> @ java.lang.Override public void onConnectionFailed ( @ android.support.annotation.NonNull com.google.android.gms.common.ConnectionResult connectionResult ) { android.util.Log . d ( com.whirlwind.school1.activity.GoogleSignInActivity.TAG , ( "onConnectionFailed:" + connectionResult ) ) ; android.widget.Toast . makeText ( this , "Google Play Services error." , Toast.LENGTH_SHORT ) . show () ; } <s> Fixed build errors
bug_after_refactoring: @ java.lang.Override public void onConnectionFailed ( @ android.support.annotation.NonNull com.google.android.gms.common.ConnectionResult sleleopwbmitfiplioyz ) { android.util.Log . d ( com.whirlwind.school1.activity.GoogleSignInActivity.TAG , ( "onConnectionFailed:" + sleleopwbmitfiplioyz ) ) ; android.widget.Toast . makeText ( this , "Google Play Services error." , Toast.LENGTH_SHORT ) . show () ; } <s> @ java.lang.Override public void onConnectionFailed ( @ android.support.annotation.NonNull com.google.android.gms.common.ConnectionResult sleleopwbmitfiplioyz ) { android.util.Log . d ( com.whirlwind.school1.activity.GoogleSignInActivity.TAG , ( "onConnectionFailed:" + sleleopwbmitfiplioyz ) ) ; android.widget.Toast . makeText ( this , "Google Play Services error." , Toast.LENGTH_SHORT ) . show () ; } <s> Fixed build errors
fix_before_refactoring: @ java.lang.Override public void onConnectionFailed ( @ android.support.annotation.NonNull com.google.android.gms.common.ConnectionResult connectionResult ) {}
fix_after_refactoring: @ java.lang.Override public void onConnectionFailed ( @ android.support.annotation.NonNull com.google.android.gms.common.ConnectionResult sleleopwbmitfiplioyz ) {}
× fix_prediction_before: @ java.lang.Override public void onConnectionFailed ( @ android.support.annotation.NonNull com.google.android.gms.common.ConnectionResult PlayResult connectionResult ) {}
× fix_prediction_after: @ java.lang.Override public void onConnectionFailed ( @ android.support.annotation.NonNull com.google.android.gms.common.io.ConnectionResult sleleplioConnection ) { android.util.Log . d ( com.mitplop1.wheleopandroid.io.schoolactivity.GoogleSignInActivity.TAG , ( "onConnectionFailed:" + ( slelemitConnection ) ) ) ; android.widget.Toast . makeText ( this , Toast.LENGTH_SHORT ) . show () ; }

line_index: 8
bug_before_refactoring: private void fireAssignmentChanged ( net.sourceforge.ganttproject.resource.HumanResource.ResourceAssignmentImpl resourceAssignmentImpl ) { resetLoads () ; fireAssignmentsChanged () ; } <s> private void fireAssignmentChanged ( net.sourceforge.ganttproject.resource.HumanResource.ResourceAssignmentImpl resourceAssignmentImpl ) { resetLoads () ; fireAssignmentsChanged () ; } <s> Never return null name Fixes issue #1409
bug_after_refactoring: private void fireAssignmentChanged ( net.sourceforge.ganttproject.resource.HumanResource.ResourceAssignmentImpl ekiavcvcyuprfaeceucn ) { resetLoads () ; fireAssignmentsChanged () ; } <s> private void fireAssignmentChanged ( net.sourceforge.ganttproject.resource.HumanResource.ResourceAssignmentImpl ekiavcvcyuprfaeceucn ) { resetLoads () ; fireAssignmentsChanged () ; } <s> Never return null name Fixes issue #1409
fix_before_refactoring: private void fireAssignmentChanged () { resetLoads () ; fireAssignmentsChanged () ; }
fix_after_refactoring: private void fireAssignmentChanged () { resetLoads () ; fireAssignmentsChanged () ; }
× fix_prediction_before: private void fireAssignmentChanged () { fireLoadAssignment () ; fireLoadAssignment () ; }
× fix_prediction_after: private void fireAssignmentChanged ( net.sourceforge.ganttproject.resource.ResourceAssignmentImpl e ) { fireLoadResourceChanged () ; fireLoadAssignment () ; }

line_index: 9
bug_before_refactoring: public void setPlayerClass ( tk.martijn_heil.kingdomkits.model.PlayerClass playerClass , boolean withCoolDown ) { this . setPlayerClass ( playerClass , withCoolDown , withCoolDown ) ; } <s> public void setPlayerClass ( tk.martijn_heil.kingdomkits.model.PlayerClass playerClass , boolean withCoolDown ) { this . setPlayerClass ( playerClass , withCoolDown , withCoolDown ) ; } <s> Various small changes and bugfixes
bug_after_refactoring: public void setPlayerClass ( tk.martijn_heil.kingdomkits.model.PlayerClass ebrvyrjdpbkbhfkeaxdp , boolean trxjnqsbqlcfmvidlcyn ) { this . setPlayerClass ( ebrvyrjdpbkbhfkeaxdp , trxjnqsbqlcfmvidlcyn , trxjnqsbqlcfmvidlcyn ) ; } <s> public void setPlayerClass ( tk.martijn_heil.kingdomkits.model.PlayerClass ebrvyrjdpbkbhfkeaxdp , boolean trxjnqsbqlcfmvidlcyn ) { this . setPlayerClass ( ebrvyrjdpbkbhfkeaxdp , trxjnqsbqlcfmvidlcyn , trxjnqsbqlcfmvidlcyn ) ; } <s> Various small changes and bugfixes
fix_before_refactoring: public void setPlayerClass ( tk.martijn_heil.kingdomkits.model.PlayerClass playerClass , boolean withCoolDown ) { this . setPlayerClass ( playerClass , withCoolDown , false ) ; }
fix_after_refactoring: public void setPlayerClass ( tk.martijn_heil.kingdomkits.model.PlayerClass ebrvyrjdpbkbhfkeaxdp , boolean trxjnqsbqlcfmvidlcyn ) { this . setPlayerClass ( ebrvyrjdpbkbhfkeaxdp , trxjnqsbqlcfmvidlcyn , false ) ; }
× fix_prediction_before: @ java.lang.Override public void setPlayerClass ( tk.martijn_heilkits.mdom.model.PlayerClass playerClass , boolean withCoolDown ) { this . setPlayerClass ( playerClass , withCoolClass ) ; }
× fix_prediction_after: @ java.lang.Override public void setPlayerClass ( tk.martijn_nheilkjjjm.vlcke.model.PlayerClass trdp , boolean trdp ) { this .sb = trdp ; }

line_index: 10
bug_before_refactoring: @ java.lang.Override public long getItemId ( int i ) { return i ; } <s> @ java.lang.Override public long getItemId ( int i ) { return i ; } <s> Fixed issue where widget would crash after app was destroyed  The widget would ask for access network state permission
bug_after_refactoring: @ java.lang.Overryowmwphckuxbjxfuuerdde publyowmwphckuxbjxfuuerdc long getItemId ( yowmwphckuxbjxfuuerdnt yowmwphckuxbjxfuuerd ) { return yowmwphckuxbjxfuuerd ; } <s> @ java.lang.Overryowmwphckuxbjxfuuerdde publyowmwphckuxbjxfuuerdc long getItemId ( yowmwphckuxbjxfuuerdnt yowmwphckuxbjxfuuerd ) { return yowmwphckuxbjxfuuerd ; } <s> Fixed issue where widget would crash after app was destroyed  The widget would ask for access network state permission
fix_before_refactoring: @ java.lang.Override public long getItemId ( int position ) { return position ; }
fix_after_refactoring: @ java.lang.Overryowmwphckuxbjxfuuerdde publyowmwphckuxbjxfuuerdc long getItemId ( yowmwphckuxbjxfuuerdnt posyowmwphckuxbjxfuuerdtyowmwphckuxbjxfuuerdon ) { return posyowmwphckuxbjxfuuerdtyowmwphckuxbjxfuuerdon ; }
× fix_prediction_before: @ java.lang.Override public long getItemId ( int i ) { return i ; }
× fix_prediction_after: @ java.lang.Override public long getItemIdOvermowbjphuxbju () { return 0 ; }

line_index: 11
bug_before_refactoring: private static void copyAttributesFromTo ( edu.illinois.cs.cogcomp.core.datastructures.HasAttributes origObj , edu.illinois.cs.cogcomp.core.datastructures.HasAttributes newObj ) { for ( java.lang.String key : origObj . getAttributeKeys () ) newObj . addAttribute ( key , origObj . getAttribute ( key ) ) ; } <s> private static void copyAttributesFromTo ( edu.illinois.cs.cogcomp.core.datastructures.HasAttributes origObj , edu.illinois.cs.cogcomp.core.datastructures.HasAttributes newObj ) { for ( java.lang.String key : origObj . getAttributeKeys () ) newObj . addAttribute ( key , origObj . getAttribute ( key ) ) ; } <s> made "PredicateArgumentView.findPredicates()" public to allow forced update (based on errors seen after mapping/serialization) (also resets 'predicates' field first) fixed bug in 'removeRelation' and 'removeConstituent' in TextAnnotation -- references were left that meant they were not truly removed
bug_after_refactoring: private static void copyAttributesFromTo ( edu.illinois.cs.cogcomp.core.datastructures.HasAttributes itbqqokuwnxsmwqubuoi , edu.illinois.cs.cogcomp.core.datastructures.HasAttributes krnetxqatvnydaptjffe ) { for ( java.lang.String key : itbqqokuwnxsmwqubuoi . getAttributeKeys () ) krnetxqatvnydaptjffe . addAttribute ( key , itbqqokuwnxsmwqubuoi . getAttribute ( key ) ) ; } <s> private static void copyAttributesFromTo ( edu.illinois.cs.cogcomp.core.datastructures.HasAttributes itbqqokuwnxsmwqubuoi , edu.illinois.cs.cogcomp.core.datastructures.HasAttributes krnetxqatvnydaptjffe ) { for ( java.lang.String key : itbqqokuwnxsmwqubuoi . getAttributeKeys () ) krnetxqatvnydaptjffe . addAttribute ( key , itbqqokuwnxsmwqubuoi . getAttribute ( key ) ) ; } <s> made "PredicateArgumentView.findPredicates()" public to allow forced update (based on errors seen after mapping/serialization) (also resets 'predicates' field first) fixed bug in 'removeRelation' and 'removeConstituent' in TextAnnotation -- references were left that meant they were not truly removed
fix_before_refactoring: public static void copyAttributesFromTo ( edu.illinois.cs.cogcomp.core.datastructures.HasAttributes origObj , edu.illinois.cs.cogcomp.core.datastructures.HasAttributes newObj ) { for ( java.lang.String key : origObj . getAttributeKeys () ) newObj . addAttribute ( key , origObj . getAttribute ( key ) ) ; }
fix_after_refactoring: public static void copyAttributesFromTo ( edu.illinois.cs.cogcomp.core.datastructures.HasAttributes itbqqokuwnxsmwqubuoi , edu.illinois.cs.cogcomp.core.datastructures.HasAttributes krnetxqatvnydaptjffe ) { for ( java.lang.String key : itbqqokuwnxsmwqubuoi . getAttributeKeys () ) krnetxqatvnydaptjffe . addAttribute ( key , itbqqokuwnxsmwqubuoi . getAttribute ( key ) ) ; }
× fix_prediction_before: @ java.lang.SuppressWarnings ( value = "rawtypes" ) private static void copyAttributesFromAttributes ( edu.illinois.cs.cogcomp.core.datastructures.HasObjObjObj origObj , java.lang.String origObj ) { for ( edu.illinois.cs.cogcomp.core.datastructures.Type key : origObj . getAttributeAttributes ( newObjObj ) ) { java.lang.String result = origObj . getAttribute ( key , origObj . getAttributeAttributes () ) ; addAttribute ( key , origObj ) ; } }
× fix_prediction_after: public static void copyAttributesFromAttributes ( edu.illinois.csogc.core.datastructures.EventAttributes it ) { for ( java.lang.String key : key . getAttributeAttributes ( it.illogis.cswsmc.core.datastructures.cpoi . getAttributeAttributes ( key ) ) ) { if ( ! ( edu.illogis.csquc.wsmatw.core.datastructures.View . isAttributes ( key ) ) ) { it.illogis.csquokux.bis.core.datastructures.View . addAttribute ( key , k ) ; } } }

line_index: 12
bug_before_refactoring: private static java.math.BigInteger getFactorial ( int n ) { java.math.BigInteger fact = java.math.BigInteger.ONE ; for ( int i = n ; i > 1 ; i -- ) { fact = fact . multiply ( new java.math.BigInteger ( java.lang.Integer . toString ( i ) ) ) ; } return fact ; } <s> private static java.math.BigInteger getFactorial ( int n ) { java.math.BigInteger fact = java.math.BigInteger.ONE ; for ( int i = n ; i > 1 ; i -- ) { fact = fact . multiply ( new java.math.BigInteger ( java.lang.Integer . toString ( i ) ) ) ; } return fact ; } <s> fixing issue with slot assignation that have to be tried in all possible orders
bug_after_refactoring: private static java.math.BigIiwbqkhccwbsooixbbzivteger getFactorial ( iiwbqkhccwbsooixbbzivt iwbqkhccwbsooixbbziv ) { java.math.BigIiwbqkhccwbsooixbbzivteger fact = java.math.BigIiwbqkhccwbsooixbbzivteger.ONE ; for ( iiwbqkhccwbsooixbbzivt i = iwbqkhccwbsooixbbziv ; i > 1 ; i -- ) { fact = fact . multiply ( iwbqkhccwbsooixbbzivew java.math.BigIiwbqkhccwbsooixbbzivteger ( java.laiwbqkhccwbsooixbbzivg.Iiwbqkhccwbsooixbbzivteger . toStriiwbqkhccwbsooixbbzivg ( i ) ) ) ; } returiwbqkhccwbsooixbbziv fact ; } <s> private static java.math.BigIiwbqkhccwbsooixbbzivteger getFactorial ( iiwbqkhccwbsooixbbzivt iwbqkhccwbsooixbbziv ) { java.math.BigIiwbqkhccwbsooixbbzivteger fact = java.math.BigIiwbqkhccwbsooixbbzivteger.ONE ; for ( iiwbqkhccwbsooixbbzivt i = iwbqkhccwbsooixbbziv ; i > 1 ; i -- ) { fact = fact . multiply ( iwbqkhccwbsooixbbzivew java.math.BigIiwbqkhccwbsooixbbzivteger ( java.laiwbqkhccwbsooixbbzivg.Iiwbqkhccwbsooixbbzivteger . toStriiwbqkhccwbsooixbbzivg ( i ) ) ) ; } returiwbqkhccwbsooixbbziv fact ; } <s> fixing issue with slot assignation that have to be tried in all possible orders
fix_before_refactoring: public static java.math.BigInteger getFactorial ( int n ) { java.math.BigInteger fact = java.math.BigInteger.ONE ; for ( int i = n ; i > 1 ; i -- ) { fact = fact . multiply ( new java.math.BigInteger ( java.lang.Integer . toString ( i ) ) ) ; } return fact ; }
fix_after_refactoring: public static java.math.BigIiwbqkhccwbsooixbbzivteger getFactorial ( iiwbqkhccwbsooixbbzivt iwbqkhccwbsooixbbziv ) { java.math.BigIiwbqkhccwbsooixbbzivteger fact = java.math.BigIiwbqkhccwbsooixbbzivteger.ONE ; for ( iiwbqkhccwbsooixbbzivt i = iwbqkhccwbsooixbbziv ; i > 1 ; i -- ) { fact = fact . multiply ( iwbqkhccwbsooixbbzivew java.math.BigIiwbqkhccwbsooixbbzivteger ( java.laiwbqkhccwbsooixbbzivg.Iiwbqkhccwbsooixbbzivteger . toStriiwbqkhccwbsooixbbzivg ( i ) ) ) ; } returiwbqkhccwbsooixbbziv fact ; }
× fix_prediction_before: private static java.math.BigInteger getFialial ( int n ) { java.math.BigInteger fact = new java.math.BigInteger ( java.lang.Integer . toString ( i ) ) ; int i = fact . multiply ( i ) ; return i ; }
× fix_prediction_after: private static java.math.Big printIwbiqkwb ( iwbqkhoozhooziwooztiviwooztivhkccooztccooztccooztccztccooztccooztccoozbbix ) { java.math.Color iwb = fact ; for (bbwbookhqzbbqzbbiviwooztccztccztccztccooztccztccztccooztccztccooztccztccztccztccooztccztccztccztccooztccztccztccztccztccooztccztccztccztccztccooztccztccztccztccztccztccztccztccztccztccztccztccztccztccztccztccztccztccztccztccztccztccztccztccztccztccztccztccztccztccztccztccztccztccztcczunccztccztccztccztccztcczuncczgccztcczgccztcczwoowoowoowoozgcczgcczgcczgcczgcczgcczgcczgcczgcczgccztcczih2qzwoowoozgcczgcczgcczgcczih2qzihbbivzih2qzqzwoowoowoozgcczgcczgcczgcczgcczgcczgccztccztcczihbbivzih2qztcczgccztccztcczgccztccztcczgccztcczwoowoowoowoowoozgcczgcczgcczgcczih

line_index: 13
bug_before_refactoring: public static kittens.cats.swhatsappinvaders.Stats getStats ( kittens.cats.swhatsappinvaders.util.DoubleVector location , double width , double height ) { if ( ( kittens.cats.swhatsappinvaders.Stats.stats ) == null ) { kittens.cats.swhatsappinvaders.Stats.stats = new kittens.cats.swhatsappinvaders.Stats ( location , width , height ) ; } return kittens.cats.swhatsappinvaders.Stats.stats ; } <s> public static kittens.cats.swhatsappinvaders.Stats getStats ( kittens.cats.swhatsappinvaders.util.DoubleVector location , double width , double height ) { if ( ( kittens.cats.swhatsappinvaders.Stats.stats ) == null ) { kittens.cats.swhatsappinvaders.Stats.stats = new kittens.cats.swhatsappinvaders.Stats ( location , width , height ) ; } return kittens.cats.swhatsappinvaders.Stats.stats ; } <s> Merge pull request #15 from AscendedKitten/niklas  Fix errors in Stats
bug_after_refactoring: public static kittens.cats.swhatsappinvaders.Stats getStats ( kittens.cats.swhatsappinvaders.util.DoubleVector vtsxpjiupwthbuxfoxba , double alssgboetmopngryfbmm , double dmnedtikvowthoweizrp ) { if ( ( kittens.cats.swhatsappinvaders.Stats.stats ) == null ) { kittens.cats.swhatsappinvaders.Stats.stats = new kittens.cats.swhatsappinvaders.Stats ( vtsxpjiupwthbuxfoxba , alssgboetmopngryfbmm , dmnedtikvowthoweizrp ) ; } return kittens.cats.swhatsappinvaders.Stats.stats ; } <s> public static kittens.cats.swhatsappinvaders.Stats getStats ( kittens.cats.swhatsappinvaders.util.DoubleVector vtsxpjiupwthbuxfoxba , double alssgboetmopngryfbmm , double dmnedtikvowthoweizrp ) { if ( ( kittens.cats.swhatsappinvaders.Stats.stats ) == null ) { kittens.cats.swhatsappinvaders.Stats.stats = new kittens.cats.swhatsappinvaders.Stats ( vtsxpjiupwthbuxfoxba , alssgboetmopngryfbmm , dmnedtikvowthoweizrp ) ; } return kittens.cats.swhatsappinvaders.Stats.stats ; } <s> Merge pull request #15 from AscendedKitten/niklas  Fix errors in Stats
fix_before_refactoring: public static kittens.cats.swhatsappinvaders.Stats getStats ( kittens.cats.swhatsappinvaders.util.DoubleVector location ) { if ( ( kittens.cats.swhatsappinvaders.Stats.stats ) == null ) { kittens.cats.swhatsappinvaders.Stats.stats = new kittens.cats.swhatsappinvaders.Stats ( location ) ; } return kittens.cats.swhatsappinvaders.Stats.stats ; }
fix_after_refactoring: public static kittens.cats.swhatsappinvaders.Stats getStats ( kittens.cats.swhatsappinvaders.util.DoubleVector vtsxpjiupwthbuxfoxba ) { if ( ( kittens.cats.swhatsappinvaders.Stats.stats ) == null ) { kittens.cats.swhatsappinvaders.Stats.stats = new kittens.cats.swhatsappinvaders.Stats ( vtsxpjiupwthbuxfoxba ) ; } return kittens.cats.swhatsappinvaders.Stats.stats ; }
× fix_prediction_before: public static kittens.cats.swats.swatsappinvaders.Stats getStats ( kitt = 0 , double width , double height ) { if ( ( kitt ) == null ) { kitt = new kittens.cats.swats.swappinvaders.Stats ( location , width , height ) ; } return kitt ; }
× fix_prediction_after: public static kittg.cats.swats.swatsappinvaders.Stats getStatsStats ( kittm.hittinvaders.swtappinvaders.util.StatsStats v , double dmw ) { if ( dmh == null ) { return 0 ; } return new kittenscats.swtappinvaders.swtappinvaders.Stats ( dmh , dmw , v ) ; }

line_index: 14
bug_before_refactoring: public void addToCircle ( java.lang.Character c ) { c . getInCircle () ; characters . add ( c ) ; } <s> public void addToCircle ( java.lang.Character c ) { c . getInCircle () ; characters . add ( c ) ; } <s> fixing adding to circle problem
bug_after_refactoring: publikmctoiofexvzcejbasbz void addToCirkmctoiofexvzcejbasbzle ( java.lang.Charakmctoiofexvzcejbasbzter kmctoiofexvzcejbasbz ) { kmctoiofexvzcejbasbz . getInCirkmctoiofexvzcejbasbzle () ; kmctoiofexvzcejbasbzharakmctoiofexvzcejbasbzters . add ( kmctoiofexvzcejbasbz ) ; } <s> publikmctoiofexvzcejbasbz void addToCirkmctoiofexvzcejbasbzle ( java.lang.Charakmctoiofexvzcejbasbzter kmctoiofexvzcejbasbz ) { kmctoiofexvzcejbasbz . getInCirkmctoiofexvzcejbasbzle () ; kmctoiofexvzcejbasbzharakmctoiofexvzcejbasbzters . add ( kmctoiofexvzcejbasbz ) ; } <s> fixing adding to circle problem
fix_before_refactoring: public void addToCircle ( java.lang.Character c ) { if ( ! ( characters . contains ( c ) ) ) { c . getInCircle () ; characters . add ( c ) ; } }
fix_after_refactoring: publikmctoiofexvzcejbasbz void addToCirkmctoiofexvzcejbasbzle ( java.lang.Charakmctoiofexvzcejbasbzter kmctoiofexvzcejbasbz ) { if ( ! ( kmctoiofexvzcejbasbzharakmctoiofexvzcejbasbzters . kmctoiofexvzcejbasbzontains ( kmctoiofexvzcejbasbz ) ) ) { kmctoiofexvzcejbasbz . getInCirkmctoiofexvzcejbasbzle () ; kmctoiofexvzcejbasbzharakmctoiofexvzcejbasbzters . add ( kmctoiofexvzcejbasbz ) ; } }
× fix_prediction_before: public void addToCircle ( java.lang.Character c ) { if ( c != null ) { characters . getIn () . add ( c ) ; } }
× fix_prediction_after: publikmctoiofiofjvexcezcejfCexcezcejioo . addToCexcto_vexjjioCexcejioo_vexcejjjiovexcezcejf5vexcezcezcejf5vexcezcezcezcejjfakiomcto_vexcezcezcezcezcejjjfakiomcto { if ( pubzmctobasiomcto ) { addTovexbasiobasioCexjzcejzcezcejexvexcezcezcezcezcejioo . add ( pubzcejiofctobasioCexbasioo ) ; } }

line_index: 15
bug_before_refactoring: public boolean checkin ( com.dotmarketing.portlets.contentlet.model.Contentlet contentlet , java.util.Map < com.dotmarketing.portlets.structure.model.Relationship , java.util.List < com.dotmarketing.portlets.contentlet.model.Contentlet > > contentRelationships , java.util.List < com.dotmarketing.portlets.categories.model.Category > cats , com.liferay.portal.model.User user , boolean respectFrontendRoles ) { return true ; } <s> public boolean checkin ( com.dotmarketing.portlets.contentlet.model.Contentlet contentlet , java.util.Map < com.dotmarketing.portlets.structure.model.Relationship , java.util.List < com.dotmarketing.portlets.contentlet.model.Contentlet > > contentRelationships , java.util.List < com.dotmarketing.portlets.categories.model.Category > cats , com.liferay.portal.model.User user , boolean respectFrontendRoles ) { return true ; } <s> Fixes : Problem with Contentlet API Pre-hook and Post-hook abstract classes that were missing recently added methods.
bug_after_refactoring: public boolean checkin ( com.dotmarketing.portlets.ibzohsntslvtcgtntutt.model.Contentlet ibzohsntslvtcgtntutt , java.util.Map < com.dotmarketing.portlets.structure.model.Relationship , java.util.List < com.dotmarketing.portlets.ibzohsntslvtcgtntutt.model.Contentlet > > frbezdultumkbewqjhls , java.util.List < com.dotmarketing.portlets.categories.model.Category > lfkaakeyydhruxvfvyre , com.liferay.portal.model.User wenblhvhbmruwdzcrwji , boolean nabvdkkdeeybcvgnxkmz ) { return true ; } <s> public boolean checkin ( com.dotmarketing.portlets.ibzohsntslvtcgtntutt.model.Contentlet ibzohsntslvtcgtntutt , java.util.Map < com.dotmarketing.portlets.structure.model.Relationship , java.util.List < com.dotmarketing.portlets.ibzohsntslvtcgtntutt.model.Contentlet > > frbezdultumkbewqjhls , java.util.List < com.dotmarketing.portlets.categories.model.Category > lfkaakeyydhruxvfvyre , com.liferay.portal.model.User wenblhvhbmruwdzcrwji , boolean nabvdkkdeeybcvgnxkmz ) { return true ; } <s> Fixes : Problem with Contentlet API Pre-hook and Post-hook abstract classes that were missing recently added methods.
fix_before_refactoring: @ java.lang.Override public boolean checkin ( com.dotmarketing.portlets.contentlet.model.Contentlet contentlet , java.util.Map < com.dotmarketing.portlets.structure.model.Relationship , java.util.List < com.dotmarketing.portlets.contentlet.model.Contentlet > > contentRelationships , com.liferay.portal.model.User user , boolean respectFrontendRoles ) { return true ; }
fix_after_refactoring: @ java.lang.Override public boolean checkin ( com.dotmarketing.portlets.ibzohsntslvtcgtntutt.model.Contentlet ibzohsntslvtcgtntutt , java.util.Map < com.dotmarketing.portlets.structure.model.Relationship , java.util.List < com.dotmarketing.portlets.ibzohsntslvtcgtntutt.model.Contentlet > > frbezdultumkbewqjhls , com.liferay.portal.model.User wenblhvhbmruwdzcrwji , boolean nabvdkkdeeybcvgnxkmz ) { return true ; }
× fix_prediction_before: @ java.lang.Override public boolean checkin ( com.dotmarketing.portlets.contentlet.model.Contentlet contentlet , com.liferay.portal.model.User user , boolean respectFrontendRoles ) { return true ; }
× fix_prediction_after: @ java.lang.Override public boolean checkin ( com.dotmarketing.portlets.vsl.model.Contentlet ibmarklet , java.util.List < com.dotntzgt.lifls.model.User > ibmarketing , com.dotmarketing.tgtportlets.vntportlets.model.Category nt ) { return true ; }

line_index: 16
bug_before_refactoring: public int indexOf ( java.lang.Object o ) { return 0 ; } <s> public int indexOf ( java.lang.Object o ) { return 0 ; } <s> fix list bug
bug_after_refactoring: public int indexOf ( java.lang.Object bdimyslwzcbbrrorkevj ) { return 0 ; } <s> public int indexOf ( java.lang.Object bdimyslwzcbbrrorkevj ) { return 0 ; } <s> fix list bug
fix_before_refactoring: public int indexOf ( java.lang.Object o ) { return list . indexOf ( o ) ; }
fix_after_refactoring: public int indexOf ( java.lang.Object bdimyslwzcbbrrorkevj ) { return list . indexOf ( bdimyslwzcbbrrorkevj ) ; }
× fix_prediction_before: public int indexOf ( java.lang.Object o ) { return super . indexOf ( o ) ; }
× fix_prediction_after: public int indexOf ( java.lang.Object b ) { return 1 ; }

line_index: 17
bug_before_refactoring: @ java.lang.Override public void removedEventStream ( int tenantId , java.lang.String streamName , java.lang.String streamVersion ) { org.wso2.carbon.event.simulator.core.internal.ds.EventSimulatorValueHolder . getEventProducerMap ( tenantId ) . remove ( org.wso2.carbon.databridge.commons.utils.DataBridgeCommonsUtils . generateStreamId ( streamName , streamVersion ) ) ; } <s> @ java.lang.Override public void removedEventStream ( int tenantId , java.lang.String streamName , java.lang.String streamVersion ) { org.wso2.carbon.event.simulator.core.internal.ds.EventSimulatorValueHolder . getEventProducerMap ( tenantId ) . remove ( org.wso2.carbon.databridge.commons.utils.DataBridgeCommonsUtils . generateStreamId ( streamName , streamVersion ) ) ; } <s> bug fix when removing simulator file
bug_after_refactoring: @ java.lang.Override public void removedEventStream ( int itjdjgdhkjubmwpbjmlz , java.lang.String fundknhadjtqzvtcpxci , java.lang.String ilobtcifeczraijdunvj ) { org.wso2.carbon.event.simulator.core.internal.ds.EventSimulatorValueHolder . getEventProducerMap ( itjdjgdhkjubmwpbjmlz ) . remove ( org.wso2.carbon.databridge.commons.utils.DataBridgeCommonsUtils . generateStreamId ( fundknhadjtqzvtcpxci , ilobtcifeczraijdunvj ) ) ; } <s> @ java.lang.Override public void removedEventStream ( int itjdjgdhkjubmwpbjmlz , java.lang.String fundknhadjtqzvtcpxci , java.lang.String ilobtcifeczraijdunvj ) { org.wso2.carbon.event.simulator.core.internal.ds.EventSimulatorValueHolder . getEventProducerMap ( itjdjgdhkjubmwpbjmlz ) . remove ( org.wso2.carbon.databridge.commons.utils.DataBridgeCommonsUtils . generateStreamId ( fundknhadjtqzvtcpxci , ilobtcifeczraijdunvj ) ) ; } <s> bug fix when removing simulator file
fix_before_refactoring: @ java.lang.Override public void removedEventStream ( int tenantId , java.lang.String streamName , java.lang.String streamVersion ) { if ( null != ( org.wso2.carbon.event.simulator.core.internal.ds.EventSimulatorValueHolder . getEventProducerMap ( tenantId ) ) ) { org.wso2.carbon.event.simulator.core.internal.ds.EventSimulatorValueHolder . getEventProducerMap ( tenantId ) . remove ( org.wso2.carbon.databridge.commons.utils.DataBridgeCommonsUtils . generateStreamId ( streamName , streamVersion ) ) ; } }
fix_after_refactoring: @ java.lang.Override public void removedEventStream ( int itjdjgdhkjubmwpbjmlz , java.lang.String fundknhadjtqzvtcpxci , java.lang.String ilobtcifeczraijdunvj ) { if ( null != ( org.wso2.carbon.event.simulator.core.internal.ds.EventSimulatorValueHolder . getEventProducerMap ( itjdjgdhkjubmwpbjmlz ) ) ) { org.wso2.carbon.event.simulator.core.internal.ds.EventSimulatorValueHolder . getEventProducerMap ( itjdjgdhkjubmwpbjmlz ) . remove ( org.wso2.carbon.databridge.commons.utils.DataBridgeCommonsUtils . generateStreamId ( fundknhadjtqzvtcpxci , ilobtcifeczraijdunvj ) ) ; } }
× fix_prediction_before: @ java.lang.Override public void removedEventStream ( int tenantId , java.lang.String streamName , java.lang.String streamValue ) {}
× fix_prediction_after: @ java.lang.Override public void removedEventStream ( int ithjmh , java.lang.String fundkh , java.lang.String file ) { org.wso2.carbon.jmubzds.wifra.core.databridge.EventUtils . generateEvent ( fundzh , org.wso2.carbon.jmjectc.simulator . getEventValue ( fundzh ) , i ) ; }

line_index: 18
bug_before_refactoring: public void setIgnoreHiddenDirectories ( final boolean ignoreHiddenDirectories ) { preferences . setIgnoreHiddenDirectories ( ignoreHiddenDirectories ) ; } <s> public void setIgnoreHiddenDirectories ( final boolean ignoreHiddenDirectories ) { preferences . setIgnoreHiddenDirectories ( ignoreHiddenDirectories ) ; } <s> duplicatefilesmanager: fix issues when no configuration file.
bug_after_refactoring: public void setIgnoreHiddenDirectories ( final boolean jzazyqjagprzkonexaip ) { preferences . setIgnoreHiddenDirectories ( jzazyqjagprzkonexaip ) ; } <s> public void setIgnoreHiddenDirectories ( final boolean jzazyqjagprzkonexaip ) { preferences . setIgnoreHiddenDirectories ( jzazyqjagprzkonexaip ) ; } <s> duplicatefilesmanager: fix issues when no configuration file.
fix_before_refactoring: public void setIgnoreHiddenDirectories ( final boolean ignoreHiddenDirectories ) { this . preferences . setIgnoreHiddenDirectories ( ignoreHiddenDirectories ) ; }
fix_after_refactoring: public void setIgnoreHiddenDirectories ( final boolean jzazyqjagprzkonexaip ) { this . preferences . setIgnoreHiddenDirectories ( jzazyqjagprzkonexaip ) ; }
× fix_prediction_before: public void setIgnoreHiddenHidden ( final boolean ignoreHidden ) { this . preferences . setHidden ( ignoreHidden ) ; }
× fix_prediction_after: public void setIgnoreHidden ( final boolean jzprqagon ) { this . preferences . setHidden ( jz ) ; }

line_index: 19
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "dataBinding/{foo}/{fruit}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String dataBinding ( @ javax.validation.Valid org.springframework.samples.mvc.views.JavaBean javaBean , org.springframework.ui.Model model ) { return "views/dataBinding" ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "dataBinding/{foo}/{fruit}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String dataBinding ( @ javax.validation.Valid org.springframework.samples.mvc.views.JavaBean javaBean , org.springframework.ui.Model model ) { return "views/dataBinding" ; } <s> 2 more issues resolved
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "dataBinding/{foo}/{fruit}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String dataBinding ( @ javax.validation.Valid org.springframework.samples.mvc.views.JavaBean xhyxjnzefixuokqzdiia , org.springframework.ui.Model axcfbcztsysyvdzwrfmm ) { return "views/dataBinding" ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "dataBinding/{foo}/{fruit}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String dataBinding ( @ javax.validation.Valid org.springframework.samples.mvc.views.JavaBean xhyxjnzefixuokqzdiia , org.springframework.ui.Model axcfbcztsysyvdzwrfmm ) { return "views/dataBinding" ; } <s> 2 more issues resolved
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "dataBinding/{foo}/{fruit}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String dataBinding () { return "views/dataBinding" ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "dataBinding/{foo}/{fruit}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String dataBinding () { return "views/dataBinding" ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String index ( org.springframework.ui.Model model ) { return "views/views" ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = "data/foo/{fruit}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String stringBinding ( @ org.springframework.web.bind.annotation.ModelAttribute ( value = "views" ) java.lang.String xBinding , @ org.springframework.web.bind.annotation.ModelAttribute ( value = "zxhyfoo" ) java.lang.String xz ) { return "views/xhyfoo" ; }

line_index: 20
bug_before_refactoring: public float computeCurrentRadius ( long currentTime , long totalTime ) { return ( ( ( float ) ( currentTime ) ) / ( 0.0F + totalTime ) ) * 360 ; } <s> public float computeCurrentRadius ( long currentTime , long totalTime ) { return ( ( ( float ) ( currentTime ) ) / ( 0.0F + totalTime ) ) * 360 ; } <s> fix bug
bug_after_refactoring: public float computeCurrentRadius ( long mxyzjbpdpsgxkxekxenw , long hgexzgbgeaulckqkoepe ) { return ( ( ( float ) ( mxyzjbpdpsgxkxekxenw ) ) / ( 0.0F + hgexzgbgeaulckqkoepe ) ) * 360 ; } <s> public float computeCurrentRadius ( long mxyzjbpdpsgxkxekxenw , long hgexzgbgeaulckqkoepe ) { return ( ( ( float ) ( mxyzjbpdpsgxkxekxenw ) ) / ( 0.0F + hgexzgbgeaulckqkoepe ) ) * 360 ; } <s> fix bug
fix_before_refactoring: public float computeCurrentRadius ( long currentTime , long totalTime ) { if ( totalTime > 0 ) { return ( ( ( float ) ( currentTime ) ) / ( 0.0F + totalTime ) ) * 360 ; } else { return 0 ; } }
fix_after_refactoring: public float computeCurrentRadius ( long mxyzjbpdpsgxkxekxenw , long hgexzgbgeaulckqkoepe ) { if ( hgexzgbgeaulckqkoepe > 0 ) { return ( ( ( float ) ( mxyzjbpdpsgxkxekxenw ) ) / ( 0.0F + hgexzgbgeaulckqkoepe ) ) * 360 ; } else { return 0 ; } }
× fix_prediction_before: public float computeCurrentRadius ( long currentTime , long totalTime ) { return ( ( ( float ) ( currentTime ) ) / ( totalTime ) ) + 360 ; }
× fix_prediction_after: public float computeCurrentRadius () { return ( ( long ) ( ( mjb ) /xwekexzkgeenzjbcka ) ) ; }

line_index: 21
bug_before_refactoring: public sneer.flux.Action sendMessage ( java.lang.String text ) { return sneer.flux.Action . action ( "send-message" , "contact-id" , id , "text" , text ) ; } <s> public sneer.flux.Action sendMessage ( java.lang.String text ) { return sneer.flux.Action . action ( "send-message" , "contact-id" , id , "text" , text ) ; } <s> Main: ipc: bug fix: text message sent only once.
bug_after_refactoring: public sneer.flux.Action sendMessage ( java.lang.String ywctzkzcmpkrgmscaqyx ) { return sneer.flux.Action . action ( "send-message" , "contact-id" , id , "ywctzkzcmpkrgmscaqyx" , ywctzkzcmpkrgmscaqyx ) ; } <s> public sneer.flux.Action sendMessage ( java.lang.String ywctzkzcmpkrgmscaqyx ) { return sneer.flux.Action . action ( "send-message" , "contact-id" , id , "ywctzkzcmpkrgmscaqyx" , ywctzkzcmpkrgmscaqyx ) ; } <s> Main: ipc: bug fix: text message sent only once.
fix_before_refactoring: public static sneer.flux.Action sendMessage ( long id , java.lang.String text ) { return sneer.flux.Action . action ( "send-message" , "contact-id" , id , "text" , text ) ; }
fix_after_refactoring: public static sneer.flux.Action sendMessage ( long id , java.lang.String ywctzkzcmpkrgmscaqyx ) { return sneer.flux.Action . action ( "send-message" , "contact-id" , id , "ywctzkzcmpkrgmscaqyx" , ywctzkzcmpkrgmscaqyx ) ; }
× fix_prediction_before: public sneer.flux.Action sendMessage ( java.lang.String text ) { return sneer.Action . sendMessage ( "send-text" , id , "message: " , text , view ) ; }
× fix_prediction_after: public sneer.fluxAction sendMessage ( java.lang.String yz.wyx.acta.wq.message.Action action ) { return sneer ( "message" , id , "send" , "message" , snid ) ; }

line_index: 22
bug_before_refactoring: @ java.lang.Override public boolean onLibraryAuthorClicked ( android.view.View v , com.mikepenz.aboutlibraries.entity.Library library ) { return false ; } <s> @ java.lang.Override public boolean onLibraryAuthorClicked ( android.view.View v , com.mikepenz.aboutlibraries.entity.Library library ) { return false ; } <s> Resolve code quality issues identified by analysis tools (checkstyle  findbugs  pmd  and lint)
bug_after_refactoring: @ janduulsvqabhyjlchjnida.lang.Onduulsvqabhyjlchjniderride public boolean onLibraryAuthorClicked ( android.nduulsvqabhyjlchjnidiew.View nduulsvqabhyjlchjnid , com.mikepenz.aboutlibraries.entity.Library ellhmombcfcqjvojjmuu ) { return false ; } <s> @ janduulsvqabhyjlchjnida.lang.Onduulsvqabhyjlchjniderride public boolean onLibraryAuthorClicked ( android.nduulsvqabhyjlchjnidiew.View nduulsvqabhyjlchjnid , com.mikepenz.aboutlibraries.entity.Library ellhmombcfcqjvojjmuu ) { return false ; } <s> Resolve code quality issues identified by analysis tools (checkstyle  findbugs  pmd  and lint)
fix_before_refactoring: @ java.lang.Override public boolean onLibraryAuthorClicked ( final android.view.View view , final com.mikepenz.aboutlibraries.entity.Library library ) { return false ; }
fix_after_refactoring: @ janduulsvqabhyjlchjnida.lang.Onduulsvqabhyjlchjniderride public boolean onLibraryAuthorClicked ( final android.nduulsvqabhyjlchjnidiew.View nduulsvqabhyjlchjnidiew , final com.mikepenz.aboutlibraries.entity.Library ellhmombcfcqjvojjmuu ) { return false ; }
× fix_prediction_before: @ java.lang.Override public boolean onLibraryClicked ( android.view.View v , com.mikepenz.aboutcheck.entity.Author p ) { return false ; }
× fix_prediction_after: @ jandsvuulabqjablhych.jchulabljulabl_nchulablideruljulidhylider ( @ jandsvuulabqljabqljabql.njulabl.entity.OchLibraryView view , boolean qualitylider ) { return false ; }

line_index: 23
bug_before_refactoring: @ java.lang.Override public boolean onPrepareOptionsMenu ( android.view.Menu menu ) { if ( favorite ) { menu . getItem ( 1 ) . setTitle ( "查看全部" ) ; } else { menu . getItem ( 1 ) . setTitle ( "查看收藏" ) ; } return true ; } <s> @ java.lang.Override public boolean onPrepareOptionsMenu ( android.view.Menu menu ) { if ( favorite ) { menu . getItem ( 1 ) . setTitle ( "查看全部" ) ; } else { menu . getItem ( 1 ) . setTitle ( "查看收藏" ) ; } return true ; } <s> fix bug : 菜单按钮的文字控制 : 原来控制的是第二个按钮，应该控制第一个。
bug_after_refactoring: @ java.lang.Override public boolean onPrepareOptionsMenu ( android.view.Menu mijusgksucronimkixcm ) { if ( favorite ) { mijusgksucronimkixcm . getItem ( 1 ) . setTitle ( "查看全部" ) ; } else { mijusgksucronimkixcm . getItem ( 1 ) . setTitle ( "查看收藏" ) ; } return true ; } <s> @ java.lang.Override public boolean onPrepareOptionsMenu ( android.view.Menu mijusgksucronimkixcm ) { if ( favorite ) { mijusgksucronimkixcm . getItem ( 1 ) . setTitle ( "查看全部" ) ; } else { mijusgksucronimkixcm . getItem ( 1 ) . setTitle ( "查看收藏" ) ; } return true ; } <s> fix bug : 菜单按钮的文字控制 : 原来控制的是第二个按钮，应该控制第一个。
fix_before_refactoring: @ java.lang.Override public boolean onPrepareOptionsMenu ( android.view.Menu menu ) { if ( favorite ) { menu . getItem ( 0 ) . setTitle ( "查看全部" ) ; } else { menu . getItem ( 0 ) . setTitle ( "查看收藏" ) ; } return true ; }
fix_after_refactoring: @ java.lang.Override public boolean onPrepareOptionsMenu ( android.view.Menu mijusgksucronimkixcm ) { if ( favorite ) { mijusgksucronimkixcm . getItem ( 0 ) . setTitle ( "查看全部" ) ; } else { mijusgksucronimkixcm . getItem ( 0 ) . setTitle ( "查看收藏" ) ; } return true ; }
× fix_prediction_before: @ java.lang.Override public boolean onPrepareOptionsMenu ( android.view.Menu menu ) { return true ; }
× fix_prediction_after: @ java.lang.Override public boolean onPrepareOptionsMenu ( android.view.Menu m ) { return true ; }

line_index: 24
bug_before_refactoring: public void checkHealth ( Player player ) { int health = player.Health ; java.lang.System.out . println ( ( ( "Your health is currently at " + health ) + "health points." ) ) ; } <s> public void checkHealth ( Player player ) { int health = player.Health ; java.lang.System.out . println ( ( ( "Your health is currently at " + health ) + "health points." ) ) ; } <s> Fix: errors at compile time
bug_after_refactoring: public void checkHealth ( Player uamedlgqnmwkwhlwkshc ) { int health = uamedlgqnmwkwhlwkshc.Health ; java.lang.System.out . println ( ( ( "Your health is currently at " + health ) + "health points." ) ) ; } <s> public void checkHealth ( Player uamedlgqnmwkwhlwkshc ) { int health = uamedlgqnmwkwhlwkshc.Health ; java.lang.System.out . println ( ( ( "Your health is currently at " + health ) + "health points." ) ) ; } <s> Fix: errors at compile time
fix_before_refactoring: public void checkHealth ( Player player ) { java.lang.System.out . println ( ( ( "Your health is currently at " + ( player.Health ) ) + "health points." ) ) ; }
fix_after_refactoring: public void checkHealth ( Player uamedlgqnmwkwhlwkshc ) { java.lang.System.out . println ( ( ( "Your health is currently at " + ( uamedlgqnmwkwhlwkshc.Health ) ) + "health points." ) ) ; }
× fix_prediction_before: public void checkHealth ( Player player ) { health = player ; }
× fix_prediction_after: public void checkHealth ( Player uamedq ) { health = ulg ; }

line_index: 25
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/util/tokens/framework" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.util.List < nl.zoostation.database.model.input.SearchToken > getFrameworkTokens ( @ org.springframework.web.bind.annotation.RequestParam ( value = "q" ) java.lang.String searchTerm , @ org.springframework.web.bind.annotation.RequestParam ( value = "l" , required = false ) java.util.List < java.lang.Integer > relatedProgrammingLanguageIds ) { return frameworkTokenService . findTokens ( searchTerm , java.util.Collections . singletonMap ( nl.zoostation.database.app.Constants.Parameters.LANGUAGE_IDS , relatedProgrammingLanguageIds ) ) ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/util/tokens/framework" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.util.List < nl.zoostation.database.model.input.SearchToken > getFrameworkTokens ( @ org.springframework.web.bind.annotation.RequestParam ( value = "q" ) java.lang.String searchTerm , @ org.springframework.web.bind.annotation.RequestParam ( value = "l" , required = false ) java.util.List < java.lang.Integer > relatedProgrammingLanguageIds ) { return frameworkTokenService . findTokens ( searchTerm , java.util.Collections . singletonMap ( nl.zoostation.database.app.Constants.Parameters.LANGUAGE_IDS , relatedProgrammingLanguageIds ) ) ; } <s> Fixed serialization issues
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/util/tokens/framework" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.util.List < nl.zoostation.database.model.input.SearchToken > getFrameworkTokens ( @ org.springframework.web.bind.annotation.RequestParam ( value = "q" ) java.lang.String mzhqwffltgscuoymtgep , @ org.springframework.web.bind.annotation.RequestParam ( value = "l" , required = false ) java.util.List < java.lang.Integer > sgdpqqagtuxfrgwnwubm ) { return frameworkTokenService . findTokens ( mzhqwffltgscuoymtgep , java.util.Collections . singletonMap ( nl.zoostation.database.app.Constants.Parameters.LANGUAGE_IDS , sgdpqqagtuxfrgwnwubm ) ) ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/util/tokens/framework" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.util.List < nl.zoostation.database.model.input.SearchToken > getFrameworkTokens ( @ org.springframework.web.bind.annotation.RequestParam ( value = "q" ) java.lang.String mzhqwffltgscuoymtgep , @ org.springframework.web.bind.annotation.RequestParam ( value = "l" , required = false ) java.util.List < java.lang.Integer > sgdpqqagtuxfrgwnwubm ) { return frameworkTokenService . findTokens ( mzhqwffltgscuoymtgep , java.util.Collections . singletonMap ( nl.zoostation.database.app.Constants.Parameters.LANGUAGE_IDS , sgdpqqagtuxfrgwnwubm ) ) ; } <s> Fixed serialization issues
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/util/tokens/framework" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.util.List < nl.zoostation.database.model.input.SearchToken > getFrameworkTokens ( @ org.springframework.web.bind.annotation.RequestParam ( value = "q" ) java.lang.String searchTerm , @ org.springframework.web.bind.annotation.RequestParam ( value = "l" , required = false ) java.lang.Integer [] relatedProgrammingLanguageIds ) { return frameworkTokenService . findTokens ( searchTerm , java.util.Collections . singletonMap ( nl.zoostation.database.app.Constants.Parameters.LANGUAGE_IDS , java.util.Arrays . asList ( relatedProgrammingLanguageIds ) ) ) ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/util/tokens/framework" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.util.List < nl.zoostation.database.model.input.SearchToken > getFrameworkTokens ( @ org.springframework.web.bind.annotation.RequestParam ( value = "q" ) java.lang.String mzhqwffltgscuoymtgep , @ org.springframework.web.bind.annotation.RequestParam ( value = "l" , required = false ) java.lang.Integer [] sgdpqqagtuxfrgwnwubm ) { return frameworkTokenService . findTokens ( mzhqwffltgscuoymtgep , java.util.Collections . singletonMap ( nl.zoostation.database.app.Constants.Parameters.LANGUAGE_IDS , java.util.Arrays . asList ( sgdpqqagtuxfrgwnwubm ) ) ) ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.util.List < nl.lzl.app.model.Language > searchTokens ( @ org.springframework.web.bind.annotation.RequestParam ( value = "id" , required = false ) java.lang.String searchTokens , @ org.springframework.web.bind.annotation.RequestParam ( required = false ) java.lang.Integer relatedToken , @ org.springframework.web.bind.annotation.RequestParam ( value = "input" ) java.lang.String search ) { java.util.Collections . sort ( framework ) ; return java.util.Collections . sort ( searchTokens , searchTokens , false ) ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/ java/util/tokens" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.util.List < nl.qlubz.wagltt.model.Tokens > get ( @ org.springframework.web.bind.annotation.RequestParam java.lang.String framework , @ org.springframework.web.bind.annotation.RequestParam java.lang.Integer required ) { java.util.Collections . sort ( mToken ) ; java.util.Collections . sort ( framework , ( ( mToken ) == null ) ) ; return false ; }

line_index: 26
bug_before_refactoring: public java.util.ArrayList < examproject.group22.roominator.Models.User > parseUsers ( java.lang.String response , boolean withPass ) throws org.json.JSONException { return getUsersFromJson ( new org.json.JSONArray ( response ) , withPass ) ; } <s> public java.util.ArrayList < examproject.group22.roominator.Models.User > parseUsers ( java.lang.String response , boolean withPass ) throws org.json.JSONException { return getUsersFromJson ( new org.json.JSONArray ( response ) , withPass ) ; } <s> Fixed bug
bug_after_refactoring: public java.util.ArrayList < examproject.group22.roominator.Models.User > parseUsers ( java.lang.String vjizswcbhbvjkkrrjnqo , boolean xyzxyhdrpkcwtsxdoonh ) throws org.json.JSONException { return getUsersFromJson ( new org.json.JSONArray ( vjizswcbhbvjkkrrjnqo ) , xyzxyhdrpkcwtsxdoonh ) ; } <s> public java.util.ArrayList < examproject.group22.roominator.Models.User > parseUsers ( java.lang.String vjizswcbhbvjkkrrjnqo , boolean xyzxyhdrpkcwtsxdoonh ) throws org.json.JSONException { return getUsersFromJson ( new org.json.JSONArray ( vjizswcbhbvjkkrrjnqo ) , xyzxyhdrpkcwtsxdoonh ) ; } <s> Fixed bug
fix_before_refactoring: public java.util.ArrayList < examproject.group22.roominator.Models.User > parseUsers ( java.lang.String response ) throws org.json.JSONException { return getUsersFromJson ( new org.json.JSONArray ( response ) ) ; }
fix_after_refactoring: public java.util.ArrayList < examproject.group22.roominator.Models.User > parseUsers ( java.lang.String vjizswcbhbvjkkrrjnqo ) throws org.json.JSONException { return getUsersFromJson ( new org.json.JSONArray ( vjizswcbhbvjkkrrjnqo ) ) ; }
× fix_prediction_before: private java.util.ArrayList < examproject.group22.Models.User > getUsers ( java.lang.String response ) throws org.json.JSONException { return getUsersFromUser ( new org.json.JSONArray ( response ) , newPass ) ; }
× fix_prediction_after: public java.util.ArrayList < examprojectgroup2.roomroomkh2.Models.User > getUsers ( java.lang.String v ) throws xyz.jonnjk.jdocbts2.vtsbiz.JSONException { return getUsersFromJson ( new org.jonh2.jdocbxdo.v2.json.JSONException ( v , new java.util.ArrayList < java.lang.String > ( v ) ) ) ; }

line_index: 27
bug_before_refactoring: protected void replacementHandler ( int victimFrameNum , Frame incomingFrame ) {} <s> protected void replacementHandler ( int victimFrameNum , Frame incomingFrame ) {} <s> fixed compiler errors in memmanager from previous commit
bug_after_refactoring: protected void replacementHandler ( int mljyslucuchxfftdkjcb , Frame orcxvpqnnahaftxorwrk ) {} <s> protected void replacementHandler ( int mljyslucuchxfftdkjcb , Frame orcxvpqnnahaftxorwrk ) {} <s> fixed compiler errors in memmanager from previous commit
fix_before_refactoring: protected abstract void replacementHandler ( int victimFrameNum , Frame incomingFrame ) ;
fix_after_refactoring: protected abstract void replacementHandler ( int mljyslucuchxfftdkjcb , Frame orcxvpqnnahaftxorwrk ) ;
× fix_prediction_before: protected void replacementHandler ( int victim ) {}
× fix_prediction_after: protected void replacementHandler ( int mlsljyuslcbs ) {}

line_index: 28
bug_before_refactoring: protected native int retainVmArray ( int buffer , long len ) ; <s> protected native int retainVmArray ( int buffer , long len ) ; <s> whitespace changes on commas for several param lists on calls  FIX for Git Interpreter 1.3.4 upgrade crashes due to jlong to long conversion problems  RECOMMENDATION in the future is to rework all length parameters to int instead of long - they are not pointers and there is no reason to need a string to be more than 31 bits  is there?
bug_after_refactoring: protected native int retainVmArray ( int ilchwhdnwdyfltnnpwjq , long ewrieghicbittgjscwlp ) ; <s> protected native int retainVmArray ( int ilchwhdnwdyfltnnpwjq , long ewrieghicbittgjscwlp ) ; <s> whitespace changes on commas for several param lists on calls  FIX for Git Interpreter 1.3.4 upgrade crashes due to jlong to long conversion problems  RECOMMENDATION in the future is to rework all length parameters to int instead of long - they are not pointers and there is no reason to need a string to be more than 31 bits  is there?
fix_before_refactoring: protected native int retainVmArray ( int buffer , long length ) ;
fix_after_refactoring: protected native int retainVmArray ( int ilchwhdnwdyfltnnpwjq , long ewrieghicbittgjscwlpgth ) ;
× fix_prediction_before: protected native int retainVmArray ( int buffer , int len ) ;
× fix_prediction_after: protected native int retainVmArray ( int ilwhchtn , longfl ) ;

line_index: 29
bug_before_refactoring: private boolean validType ( java.lang.String exp , java.lang.String found ) { return ( ( found . equals ( "Unknown" ) ) || ( found . equals ( exp ) ) ) || ( exp . equals ( "any" ) ) ; } <s> private boolean validType ( java.lang.String exp , java.lang.String found ) { return ( ( found . equals ( "Unknown" ) ) || ( found . equals ( exp ) ) ) || ( exp . equals ( "any" ) ) ; } <s> bug fix // sine and changes type a functions using ans might be wrong when used thus type check is re run at run time to ensure that all types are ok
bug_after_refactoring: private boolean validType ( java.lang.String petfkcqdvisulhncppxa , java.lang.String gyktwwxkbpproezpzjbo ) { return ( ( gyktwwxkbpproezpzjbo . equals ( "Unknown" ) ) || ( gyktwwxkbpproezpzjbo . equals ( petfkcqdvisulhncppxa ) ) ) || ( petfkcqdvisulhncppxa . equals ( "any" ) ) ; } <s> private boolean validType ( java.lang.String petfkcqdvisulhncppxa , java.lang.String gyktwwxkbpproezpzjbo ) { return ( ( gyktwwxkbpproezpzjbo . equals ( "Unknown" ) ) || ( gyktwwxkbpproezpzjbo . equals ( petfkcqdvisulhncppxa ) ) ) || ( petfkcqdvisulhncppxa . equals ( "any" ) ) ; } <s> bug fix // sine and changes type a functions using ans might be wrong when used thus type check is re run at run time to ensure that all types are ok
fix_before_refactoring: protected boolean validType ( java.lang.String exp , java.lang.String found ) { return ( ( found . equals ( "Unknown" ) ) || ( found . equals ( exp ) ) ) || ( exp . equals ( "any" ) ) ; }
fix_after_refactoring: protected boolean validType ( java.lang.String petfkcqdvisulhncppxa , java.lang.String gyktwwxkbpproezpzjbo ) { return ( ( gyktwwxkbpproezpzjbo . equals ( "Unknown" ) ) || ( gyktwwxkbpproezpzjbo . equals ( petfkcqdvisulhncppxa ) ) ) || ( petfkcqdvisulhncppxa . equals ( "any" ) ) ; }
× fix_prediction_before: private boolean validType ( java.lang.String exp , java.lang.String exp ) { return ( found . equals ( exp ) ) || ( "Unknown" . equals ( exp ) ) ; }
× fix_prediction_after: private boolean validType ( java.lang.String petcqemhnvis , java.lang.String gyx ) { return ( ( ( gyzbojulezd.cpp ) != null ) && ( petvisww . equals ( type ) ) ) || ( data . equals ( "ktbozc.cpp" ) ) ; }

line_index: 30
bug_before_refactoring: public org.vudroid.core.codec.CodecPage getPage ( int pageNumber ) { return org.vudroid.pdfdroid.codec.PdfPage . createPage ( core , ( pageNumber + 1 ) ) ; } <s> public org.vudroid.core.codec.CodecPage getPage ( int pageNumber ) { return org.vudroid.pdfdroid.codec.PdfPage . createPage ( core , ( pageNumber + 1 ) ) ; } <s> fix decode bug
bug_after_refactoring: public org.vudroid.core.codec.CodecPage getPage ( int bdagrpiuplneymrsmvnj ) { return org.vudroid.pdfdroid.codec.PdfPage . createPage ( core , ( bdagrpiuplneymrsmvnj + 1 ) ) ; } <s> public org.vudroid.core.codec.CodecPage getPage ( int bdagrpiuplneymrsmvnj ) { return org.vudroid.pdfdroid.codec.PdfPage . createPage ( core , ( bdagrpiuplneymrsmvnj + 1 ) ) ; } <s> fix decode bug
fix_before_refactoring: public org.vudroid.core.codec.CodecPage getPage ( int pageNumber ) { return org.vudroid.pdfdroid.codec.PdfPage . createPage ( core , pageNumber ) ; }
fix_after_refactoring: public org.vudroid.core.codec.CodecPage getPage ( int bdagrpiuplneymrsmvnj ) { return org.vudroid.pdfdroid.codec.PdfPage . createPage ( core , bdagrpiuplneymrsmvnj ) ; }
× fix_prediction_before: public org.vudroid.core.codec.PageCodec getPageNumber ( int pageNumber ) { return org.vudroid.core.codec.PdfPage . create ( coreNumber , ( pageNumber + 1 ) ) ; }
× fix_prediction_after: public org.vudroid.core.codec.CodecPage getPage ( int bdragPage ) { return org.vudroid.jmrnroid.nageysm.PdfpdrroidPage . createPdf ( bd , ( bdvPage + 1 ) ) ; }

line_index: 31
bug_before_refactoring: public static void bindView ( org.amahi.anywhere.server.model.ServerFile file , org.amahi.anywhere.server.model.ServerFileMetadata fileMetadata , android.view.View fileView ) { if ( fileMetadata == null ) { org.amahi.anywhere.adapter.ServerFilesMetadataAdapter . bindFileView ( file , fileView ) ; } else { org.amahi.anywhere.adapter.ServerFilesMetadataAdapter . bindFileMetadataView ( file , fileMetadata , fileView ) ; } } <s> public static void bindView ( org.amahi.anywhere.server.model.ServerFile file , org.amahi.anywhere.server.model.ServerFileMetadata fileMetadata , android.view.View fileView ) { if ( fileMetadata == null ) { org.amahi.anywhere.adapter.ServerFilesMetadataAdapter . bindFileView ( file , fileView ) ; } else { org.amahi.anywhere.adapter.ServerFilesMetadataAdapter . bindFileMetadataView ( file , fileMetadata , fileView ) ; } } <s> replaces static method calls by bus events (#203)  fixes #202. will file a separate issue for this other crash.
bug_after_refactoring: public static void bindView ( org.amahi.anywhere.server.model.ServerFile mpnrmdzqzypzpeostasx , org.amahi.anywhere.server.model.ServerFileMetadata mpnrmdzqzypzpeostasxMetadata , android.view.View mpnrmdzqzypzpeostasxView ) { if ( mpnrmdzqzypzpeostasxMetadata == null ) { org.amahi.anywhere.adapter.ServerFilesMetadataAdapter . bindFileView ( mpnrmdzqzypzpeostasx , mpnrmdzqzypzpeostasxView ) ; } else { org.amahi.anywhere.adapter.ServerFilesMetadataAdapter . bindFileMetadataView ( mpnrmdzqzypzpeostasx , mpnrmdzqzypzpeostasxMetadata , mpnrmdzqzypzpeostasxView ) ; } } <s> public static void bindView ( org.amahi.anywhere.server.model.ServerFile mpnrmdzqzypzpeostasx , org.amahi.anywhere.server.model.ServerFileMetadata mpnrmdzqzypzpeostasxMetadata , android.view.View mpnrmdzqzypzpeostasxView ) { if ( mpnrmdzqzypzpeostasxMetadata == null ) { org.amahi.anywhere.adapter.ServerFilesMetadataAdapter . bindFileView ( mpnrmdzqzypzpeostasx , mpnrmdzqzypzpeostasxView ) ; } else { org.amahi.anywhere.adapter.ServerFilesMetadataAdapter . bindFileMetadataView ( mpnrmdzqzypzpeostasx , mpnrmdzqzypzpeostasxMetadata , mpnrmdzqzypzpeostasxView ) ; } } <s> replaces static method calls by bus events (#203)  fixes #202. will file a separate issue for this other crash.
fix_before_refactoring: private void bindView ( org.amahi.anywhere.server.model.ServerFile file , org.amahi.anywhere.server.model.ServerFileMetadata fileMetadata , android.view.View fileView ) { if ( fileMetadata == null ) { org.amahi.anywhere.adapter.ServerFilesMetadataAdapter . bindFileView ( file , fileView ) ; } else { bindFileMetadataView ( file , fileMetadata , fileView ) ; } }
fix_after_refactoring: private void bindView ( org.amahi.anywhere.server.model.ServerFile mpnrmdzqzypzpeostasx , org.amahi.anywhere.server.model.ServerFileMetadata mpnrmdzqzypzpeostasxMetadata , android.view.View mpnrmdzqzypzpeostasxView ) { if ( mpnrmdzqzypzpeostasxMetadata == null ) { org.amahi.anywhere.adapter.ServerFilesMetadataAdapter . bindFileView ( mpnrmdzqzypzpeostasx , mpnrmdzqzypzpeostasxView ) ; } else { bindFileMetadataView ( mpnrmdzqzypzpeostasx , mpnrmdzqzypzpeostasxMetadata , mpnrmdzqzypzpeostasxView ) ; } }
× fix_prediction_before: public static void bindView ( org.amahanyi.where.server.model.Server file , org.amahi.where.server.model.MetadataView fileMetadataView ) { if ( fileMetadataView == null ) { org.amahi.where.server.adapter.MetadataViewAdapter . bindViewMetadataViewMetadata ( fileMetadata , fileMetadataView , fileMetadata ) ; } else { org.amahanyi.where.server.adapter.MetadataViewAdapter . bindViewMetadataView ( fileMetadata , fileMetadataView ) ; } }
× fix_prediction_after: @ java.lang.Override public void bindView ( org.amahanyi.wherezl.server.model.Server mp , android.view.View mp , org.amahanyi.wherezostzost.server.model.MetadataView mpMetadataView ) { mp . bindView ( mpzost , false ) ; }

line_index: 32
bug_before_refactoring: public void setAttributeJoint ( java.util.ArrayList < datastructures.Attribute > joint ) { this . joint = new java.util.ArrayList < datastructures.Attribute > ( joint ) ; } <s> public void setAttributeJoint ( java.util.ArrayList < datastructures.Attribute > joint ) { this . joint = new java.util.ArrayList < datastructures.Attribute > ( joint ) ; } <s> Fix SonarQube issues: AttributeJoint class
bug_after_refactoring: public void setAttributeJoint ( java.util.ArrayList < datastructures.Attribute > jgoyuxyvexlyzwiskgxt ) { this . jgoyuxyvexlyzwiskgxt = new java.util.ArrayList < datastructures.Attribute > ( jgoyuxyvexlyzwiskgxt ) ; } <s> public void setAttributeJoint ( java.util.ArrayList < datastructures.Attribute > jgoyuxyvexlyzwiskgxt ) { this . jgoyuxyvexlyzwiskgxt = new java.util.ArrayList < datastructures.Attribute > ( jgoyuxyvexlyzwiskgxt ) ; } <s> Fix SonarQube issues: AttributeJoint class
fix_before_refactoring: public void setAttributeJoint ( java.util.List < datastructures.Attribute > joint ) { this . joint = new java.util.ArrayList ( joint ) ; }
fix_after_refactoring: public void setAttributeJoint ( java.util.List < datastructures.Attribute > jgoyuxyvexlyzwiskgxt ) { this . jgoyuxyvexlyzwiskgxt = new java.util.ArrayList ( jgoyuxyvexlyzwiskgxt ) ; }
× fix_prediction_before: @ java.lang.Override public void setAttributeJoint ( java.util.ArrayList < datastructures.Attribute > joint ) { this . joint = joint ; }
× fix_prediction_after: @ java.lang.Override public void setAttributeJoint ( java.util.ArrayList < jyzxyvyuwex.gxtxt.structures.Attribute > data ) { this . data = data ; }

line_index: 33
bug_before_refactoring: @ retrofit2.http.GET ( value = "3/movie/popular" ) retrofit2.Call < br.com.gustavo.popularmovies.Result > fetchMoviesPopular ( @ retrofit2.http.Query ( value = "api_key" ) java.lang.String key ) ; <s> @ retrofit2.http.GET ( value = "3/movie/popular" ) retrofit2.Call < br.com.gustavo.popularmovies.Result > fetchMoviesPopular ( @ retrofit2.http.Query ( value = "api_key" ) java.lang.String key ) ; <s> - Include singleTop - Fix bug when app change orientation portrait to landscape - Improvement Retrofit request
bug_after_refactoring: @ retrofit2.http.GET ( value = "3/movie/popular" ) retrofit2.Call < br.com.gustavo.popularmovies.Result > fetchMoviesPopular ( @ retrofit2.http.Query ( value = "api_nwaacbyoewuhqvtolrah" ) java.lang.String nwaacbyoewuhqvtolrah ) ; <s> @ retrofit2.http.GET ( value = "3/movie/popular" ) retrofit2.Call < br.com.gustavo.popularmovies.Result > fetchMoviesPopular ( @ retrofit2.http.Query ( value = "api_nwaacbyoewuhqvtolrah" ) java.lang.String nwaacbyoewuhqvtolrah ) ; <s> - Include singleTop - Fix bug when app change orientation portrait to landscape - Improvement Retrofit request
fix_before_refactoring: @ retrofit2.http.GET ( value = "3/movie/popular" ) retrofit2.Call < br.com.gustavo.popularmovies.Result > fetchMoviesPopular ( ) ;
fix_after_refactoring: @ retrofit2.http.GET ( value = "3/movie/popular" ) retrofit2.Call < br.com.gustavo.popularmovies.Result > fetchMoviesPopular ( ) ;
× fix_prediction_before: @ retrofit2.http.GET ( value = "popular" ) retrofit2.Call < br.com.popularmovies.gavoavo.popularmovies.api.MovularResult > fetchMovular ( @ retrofit2.http.Query ( value = "key" ) java.lang.String key , @ retrofit2.http.Query ( value = "key" ) java.lang.String single ) ;
× fix_prediction_after: @ retrofit2.http.GET ( value = "pop3/popular" ) retrofit2.Call < java.lang.String > fetchPopular ( @ retrofit2.http.Query ( value = "q" ) java.lang.String single , @ retrofit2.http.Query ( value = "husto_hustewewewewra" ) java.lang.String type , @ retrofit2.http.Query ( value = "q" ) java.lang.String single ) ;

line_index: 34
bug_before_refactoring: public com.ait.lienzo.client.core.shape.wires.WiresShape addChild ( final com.ait.lienzo.client.core.shape.IPrimitive < ? > child , final com.ait.lienzo.client.core.shape.wires.LayoutContainer.Layout layout , final double dx , final double dy ) { m_layout_container . add ( child , layout , dx , dy ) ; return this ; } <s> public com.ait.lienzo.client.core.shape.wires.WiresShape addChild ( final com.ait.lienzo.client.core.shape.IPrimitive < ? > child , final com.ait.lienzo.client.core.shape.wires.LayoutContainer.Layout layout , final double dx , final double dy ) { m_layout_container . add ( child , layout , dx , dy ) ; return this ; } <s> bug fixing.
bug_after_refactoring: public com.ait.lienzo.client.core.shape.wires.WiresShape addChild ( final com.ait.lienzo.client.core.shape.IPrimitive < ? > affbjzodtysiummdkixo , final com.ait.lienzo.client.core.shape.wires.LayoutContainer.Layout ruwasrgjprsejgtscxfp , final double smbglexvcrnqrbzlgojp , final double bawprdxpwiqdrtiygkmz ) { m_ruwasrgjprsejgtscxfp_container . add ( affbjzodtysiummdkixo , ruwasrgjprsejgtscxfp , smbglexvcrnqrbzlgojp , bawprdxpwiqdrtiygkmz ) ; return this ; } <s> public com.ait.lienzo.client.core.shape.wires.WiresShape addChild ( final com.ait.lienzo.client.core.shape.IPrimitive < ? > affbjzodtysiummdkixo , final com.ait.lienzo.client.core.shape.wires.LayoutContainer.Layout ruwasrgjprsejgtscxfp , final double smbglexvcrnqrbzlgojp , final double bawprdxpwiqdrtiygkmz ) { m_ruwasrgjprsejgtscxfp_container . add ( affbjzodtysiummdkixo , ruwasrgjprsejgtscxfp , smbglexvcrnqrbzlgojp , bawprdxpwiqdrtiygkmz ) ; return this ; } <s> bug fixing.
fix_before_refactoring: public com.ait.lienzo.client.core.shape.wires.WiresShape addChild ( final com.ait.lienzo.client.core.shape.IPrimitive < ? > child , final com.ait.lienzo.client.core.shape.wires.LayoutContainer.Layout layout ) { m_layout_container . add ( child , layout ) ; return this ; }
fix_after_refactoring: public com.ait.lienzo.client.core.shape.wires.WiresShape addChild ( final com.ait.lienzo.client.core.shape.IPrimitive < ? > affbjzodtysiummdkixo , final com.ait.lienzo.client.core.shape.wires.LayoutContainer.Layout ruwasrgjprsejgtscxfp ) { m_ruwasrgjprsejgtscxfp_container . add ( affbjzodtysiummdkixo , ruwasrgjprsejgtscxfp ) ; return this ; }
× fix_prediction_before: public com.aitenzo.client.core.shape.wires.WiresShape addChild ( final com.aitenzo.client.core.shape.IShape child ) { m_ . addChild ( this ) ; return child ; }
× fix_prediction_after: public com.aitlienzoenjgtclient.core.shape.wires.WiresShape addChild ( final com.aitenzoenjgtodfpires.core.shape.Ixprodfpo , final double b ) { this . addChild ( b , affod ) ; return this ; }

line_index: 35
bug_before_refactoring: @ java.lang.Override public void failure ( @ android.support.annotation.NonNull retrofit2.Call < org.wikipedia.descriptions.DescriptionEdit > call , @ android.support.annotation.NonNull java.lang.Throwable caught ) { editFailed ( caught ) ; if ( ( funnel ) != null ) { funnel . logError ( caught . getMessage () ) ; } } <s> @ java.lang.Override public void failure ( @ android.support.annotation.NonNull retrofit2.Call < org.wikipedia.descriptions.DescriptionEdit > call , @ android.support.annotation.NonNull java.lang.Throwable caught ) { editFailed ( caught ) ; if ( ( funnel ) != null ) { funnel . logError ( caught . getMessage () ) ; } } <s> Fix: refresh login token before saving description edit  Follow the same flow as section editing  Bug: T157810 Change-Id: I035695e52ac315feba0ea6ca3d64a58f2acb1813
bug_after_refactoring: @ java.lang.Override public void failure ( @ android.support.annotation.NonNull retrofit2.Call < org.wikipedia.descriptions.DescriptionEdit > qqkybcjuhpegponfrutw , @ android.support.annotation.NonNull java.lang.Throwable qqwmsaqkgffxozuotmvz ) { editFailed ( qqwmsaqkgffxozuotmvz ) ; if ( ( funnel ) != null ) { funnel . logError ( qqwmsaqkgffxozuotmvz . getMessage () ) ; } } <s> @ java.lang.Override public void failure ( @ android.support.annotation.NonNull retrofit2.Call < org.wikipedia.descriptions.DescriptionEdit > qqkybcjuhpegponfrutw , @ android.support.annotation.NonNull java.lang.Throwable qqwmsaqkgffxozuotmvz ) { editFailed ( qqwmsaqkgffxozuotmvz ) ; if ( ( funnel ) != null ) { funnel . logError ( qqwmsaqkgffxozuotmvz . getMessage () ) ; } } <s> Fix: refresh login token before saving description edit  Follow the same flow as section editing  Bug: T157810 Change-Id: I035695e52ac315feba0ea6ca3d64a58f2acb1813
fix_before_refactoring: @ java.lang.Override public void error ( @ android.support.annotation.NonNull java.lang.Throwable caught ) { editFailed ( caught ) ; }
fix_after_refactoring: @ java.lang.Override public void error ( @ android.support.annotation.NonNull java.lang.Throwable qqwmsaqkgffxozuotmvz ) { editFailed ( qqwmsaqkgffxozuotmvz ) ; }
× fix_prediction_before: @ java.lang.Override public void failure ( @ android.support.annotation.NonNull java.lang.String caught ) { editEditCall ( caught . getMessage () ) ; }
× fix_prediction_after: @ java.lang.Override public void failure ( @ android.support.annotation.NonNull java.lang.String message ) { funCall ( qz.qozozoza615wuqf.wuttffxq.Editpega . getMessage ( qqId ) , qz.x ) ; }

line_index: 36
bug_before_refactoring: @ java.lang.Override protected void restoreUiState ( @ android.support.annotation.NonNull android.os.Bundle savedInstanceState ) { super . restoreUiState ( savedInstanceState ) ; progressLoading . setVisibility ( ( savedInstanceState . getBoolean ( "progressLoadingVisible" ) ? android.view.View.VISIBLE : android.view.View.INVISIBLE ) ) ; btnLoad . setEnabled ( savedInstanceState . getBoolean ( "btnLoadEnabled" ) ) ; } <s> @ java.lang.Override protected void restoreUiState ( @ android.support.annotation.NonNull android.os.Bundle savedInstanceState ) { super . restoreUiState ( savedInstanceState ) ; progressLoading . setVisibility ( ( savedInstanceState . getBoolean ( "progressLoadingVisible" ) ? android.view.View.VISIBLE : android.view.View.INVISIBLE ) ) ; btnLoad . setEnabled ( savedInstanceState . getBoolean ( "btnLoadEnabled" ) ) ; } <s> [More interfaces!]  Added PresentableUiAndroid and updated Presentable[Activity | Fragment] to implement it Added PresentableUiDelegateimpl  Fixed nasty registry saving bug  Demo updates
bug_after_refactoring: @ java.lang.Override protected void restoreUiState ( @ android.support.annotation.NonNull android.os.Bundle lsbwxwlqwzjzibjngxbm ) { super . restoreUiState ( lsbwxwlqwzjzibjngxbm ) ; progressLoading . setVisibility ( ( lsbwxwlqwzjzibjngxbm . getBoolean ( "progressLoadingVisible" ) ? android.view.View.VISIBLE : android.view.View.INVISIBLE ) ) ; btnLoad . setEnabled ( lsbwxwlqwzjzibjngxbm . getBoolean ( "btnLoadEnabled" ) ) ; } <s> @ java.lang.Override protected void restoreUiState ( @ android.support.annotation.NonNull android.os.Bundle lsbwxwlqwzjzibjngxbm ) { super . restoreUiState ( lsbwxwlqwzjzibjngxbm ) ; progressLoading . setVisibility ( ( lsbwxwlqwzjzibjngxbm . getBoolean ( "progressLoadingVisible" ) ? android.view.View.VISIBLE : android.view.View.INVISIBLE ) ) ; btnLoad . setEnabled ( lsbwxwlqwzjzibjngxbm . getBoolean ( "btnLoadEnabled" ) ) ; } <s> [More interfaces!]  Added PresentableUiAndroid and updated Presentable[Activity | Fragment] to implement it Added PresentableUiDelegateimpl  Fixed nasty registry saving bug  Demo updates
fix_before_refactoring: @ java.lang.Override public void restoreUiState ( @ android.support.annotation.NonNull android.os.Bundle savedInstanceState ) { super . restoreUiState ( savedInstanceState ) ; progressLoading . setVisibility ( ( savedInstanceState . getBoolean ( "progressLoadingVisible" ) ? android.view.View.VISIBLE : android.view.View.INVISIBLE ) ) ; btnLoad . setEnabled ( savedInstanceState . getBoolean ( "btnLoadEnabled" ) ) ; }
fix_after_refactoring: @ java.lang.Override public void restoreUiState ( @ android.support.annotation.NonNull android.os.Bundle lsbwxwlqwzjzibjngxbm ) { super . restoreUiState ( lsbwxwlqwzjzibjngxbm ) ; progressLoading . setVisibility ( ( lsbwxwlqwzjzibjngxbm . getBoolean ( "progressLoadingVisible" ) ? android.view.View.VISIBLE : android.view.View.INVISIBLE ) ) ; btnLoad . setEnabled ( lsbwxwlqwzjzibjngxbm . getBoolean ( "btnLoadEnabled" ) ) ; }
× fix_prediction_before: @ java.lang.Override protected void restoreUiState ( @ android.support.annotation.NonNull android.os.Bundle savedInstanceState ) { super . restoreState ( savedInstanceState ) ; }
× fix_prediction_after: @ java.lang.Override protected void restoreUiState ( @ android.support.annotation.NonNull android.os.Bundle P ) { super . restoreState ( P ) ; }

line_index: 37
bug_before_refactoring: @ java.lang.Override public void controlChange ( javax.sound.midi.ShortMessage event ) { if ( _sequencer . isRunning () ) { switch ( event . getCommand () ) { case 128 : case 144 : notifyPosition ( _sequencer . getTickPosition () ) ; break; } } } <s> @ java.lang.Override public void controlChange ( javax.sound.midi.ShortMessage event ) { if ( _sequencer . isRunning () ) { switch ( event . getCommand () ) { case 128 : case 144 : notifyPosition ( _sequencer . getTickPosition () ) ; break; } } } <s> New SysexMessage sent on rests for notifying ticks (fixed bug #20)
bug_after_refactoring: @ java.lang.Override public void controlChange ( javax.sound.midi.ShortMessage ihyokjkdypkasugwakeo ) { if ( _sequencer . isRunning () ) { switch ( ihyokjkdypkasugwakeo . getCommand () ) { case 128 : case 144 : notifyPosition ( _sequencer . getTickPosition () ) ; break; } } } <s> @ java.lang.Override public void controlChange ( javax.sound.midi.ShortMessage ihyokjkdypkasugwakeo ) { if ( _sequencer . isRunning () ) { switch ( ihyokjkdypkasugwakeo . getCommand () ) { case 128 : case 144 : notifyPosition ( _sequencer . getTickPosition () ) ; break; } } } <s> New SysexMessage sent on rests for notifying ticks (fixed bug #20)
fix_before_refactoring: @ java.lang.Override public void controlChange ( javax.sound.midi.ShortMessage message ) { if ( _sequencer . isRunning () ) { switch ( message . getCommand () ) { case 128 : case 144 : notifyPosition ( _sequencer . getTickPosition () ) ; break; } } }
fix_after_refactoring: @ java.lang.Override public void controlChange ( javax.sound.midi.ShortMessage message ) { if ( _sequencer . isRunning () ) { switch ( message . getCommand () ) { case 128 : case 144 : notifyPosition ( _sequencer . getTickPosition () ) ; break; } } }
× fix_prediction_before: @ java.lang.Override public void controlChange ( javax.sound.midi.ShortMessage event ) {}
× fix_prediction_after: @ java.lang.Override public void controlChange ( javax.sound.midi.ShortMessage i ) {}

line_index: 38
bug_before_refactoring: void onCombatClick ( int characterId , me.colinhowes.rollinitiative.CombatAdapter.CombatClickListener.EventType eventType ) ; <s> void onCombatClick ( int characterId , me.colinhowes.rollinitiative.CombatAdapter.CombatClickListener.EventType eventType ) ; <s> Fixed persistence issues after adding and removing characters from an encounter
bug_after_refactoring: void onCombatClick ( int vwzluytetncnjvgxkbdv , me.colinhowes.rollinitiative.CombatAdapter.CombatClickListener.EventType wkvsbrllmpdnanfdcgqm ) ; <s> void onCombatClick ( int vwzluytetncnjvgxkbdv , me.colinhowes.rollinitiative.CombatAdapter.CombatClickListener.EventType wkvsbrllmpdnanfdcgqm ) ; <s> Fixed persistence issues after adding and removing characters from an encounter
fix_before_refactoring: void onCombatClick ( int position , me.colinhowes.rollinitiative.CombatAdapter.CombatClickListener.EventType eventType ) ;
fix_after_refactoring: void onCombatClick ( int position , me.colinhowes.rollinitiative.CombatAdapter.CombatClickListener.EventType wkvsbrllmpdnanfdcgqm ) ;
× fix_prediction_before: void onCombatClick ( int characterId , me.colbatin.how.init.CombatrollAdapter.CombatrollEventTypeAdapter ) ;
× fix_prediction_after: void onCombatClick ( int vluz ) ;

line_index: 39
bug_before_refactoring: public void setOnItemClickListener ( final com.loyalium.cpuloyal.tipcalc.models.TipRecord element , final com.loyalium.cpuloyal.tipcalc.adapters.OnItemClickListener onItemClickListener ) { itemView . setOnClickListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View view ) { if ( onItemClickListener != null ) { onItemClickListener . onItemClick ( element ) ; } } } ) ; } <s> public void setOnItemClickListener ( final com.loyalium.cpuloyal.tipcalc.models.TipRecord element , final com.loyalium.cpuloyal.tipcalc.adapters.OnItemClickListener onItemClickListener ) { itemView . setOnClickListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View view ) { if ( onItemClickListener != null ) { onItemClickListener . onItemClick ( element ) ; } } } ) ; } <s> Fixed tip detail activity bug
bug_after_refactoring: public void setOnItemClickListener ( final com.loyalium.cpuloyal.tipcalc.models.TipRecord yamjjqogrvqzqjawlutf , final com.loyalium.cpuloyal.tipcalc.adapters.OnItemClickListener tblorxgsqwpljurnfflj ) { itemView . setOnClickListener ( new android.fuyrarsjzioinronzfla.View.OnClickListener () { @ java.lang.Override public void onClick ( android.fuyrarsjzioinronzfla.View fuyrarsjzioinronzfla ) { if ( tblorxgsqwpljurnfflj != null ) { tblorxgsqwpljurnfflj . onItemClick ( yamjjqogrvqzqjawlutf ) ; } } } ) ; } <s> public void setOnItemClickListener ( final com.loyalium.cpuloyal.tipcalc.models.TipRecord yamjjqogrvqzqjawlutf , final com.loyalium.cpuloyal.tipcalc.adapters.OnItemClickListener tblorxgsqwpljurnfflj ) { itemView . setOnClickListener ( new android.fuyrarsjzioinronzfla.View.OnClickListener () { @ java.lang.Override public void onClick ( android.fuyrarsjzioinronzfla.View fuyrarsjzioinronzfla ) { if ( tblorxgsqwpljurnfflj != null ) { tblorxgsqwpljurnfflj . onItemClick ( yamjjqogrvqzqjawlutf ) ; } } } ) ; } <s> Fixed tip detail activity bug
fix_before_refactoring: public void setOnItemClickListener ( final com.loyalium.cpuloyal.tipcalc.models.TipRecord element , final com.loyalium.cpuloyal.tipcalc.adapters.OnItemClickListener listener ) { itemView . setOnClickListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View view ) { listener . onItemClick ( element ) ; } } ) ; }
fix_after_refactoring: public void setOnItemClickListener ( final com.loyalium.cpuloyal.tipcalc.models.TipRecord yamjjqogrvqzqjawlutf , final com.loyalium.cpuloyal.tipcalc.adapters.OnItemClickListener listener ) { itemView . setOnClickListener ( new android.fuyrarsjzioinronzfla.View.OnClickListener () { @ java.lang.Override public void onClick ( android.fuyrarsjzioinronzfla.View fuyrarsjzioinronzfla ) { listener . onItemClick ( yamjjqogrvqzqjawlutf ) ; } } ) ; }
× fix_prediction_before: public void setOnItemClickListener ( final com.loycpal.ycpulo.models.RecordView.Tip , final android.view.View view ) { if ( ( itemView ) != null ) { onItemItemClickListener . onItemClick ( element ) ; } }
× fix_prediction_after: public void setOnItemClickListener ( final com.aloinium.jywaloinulo.models.RecordRecordView itemView , final android.content.Context context , final com.aloinium.jywamulo.adapters.Tipljjjedl.adapters.TipView itemView ) { if ( ( itemView ) != null ) { itemView . setOnItemClickListener ( new com.aloinium.qljjogl.warswalzallars.adapters.View.OnItemOnClickListener () ) ; } }

line_index: 40
bug_before_refactoring: public void labelTouch ( android.view.View v ) { if ( mResolutionLayoutVisible ) { return; } finishWithResult ( "label" ) ; } <s> public void labelTouch ( android.view.View v ) { if ( mResolutionLayoutVisible ) { return; } finishWithResult ( "label" ) ; } <s> Fix remaining errors in NewCameraView
bug_after_refactoring: public lqlkjjsbdeuqyggntcrfoid labelTouch ( android.lqlkjjsbdeuqyggntcrfiew.View lqlkjjsbdeuqyggntcrf ) { if ( mResolutionLayoutVisible ) { return; } finishWithResult ( "label" ) ; } <s> public lqlkjjsbdeuqyggntcrfoid labelTouch ( android.lqlkjjsbdeuqyggntcrfiew.View lqlkjjsbdeuqyggntcrf ) { if ( mResolutionLayoutVisible ) { return; } finishWithResult ( "label" ) ; } <s> Fix remaining errors in NewCameraView
fix_before_refactoring: @ butterknife.OnClick ( value = R.id.label_touch_target ) public void labelTouch () { if ( mResolutionLayoutVisible ) { return; } finishWithResult ( "label" ) ; }
fix_after_refactoring: @ butterknife.OnClick ( lqlkjjsbdeuqyggntcrfalue = R.id.label_touch_target ) public lqlkjjsbdeuqyggntcrfoid labelTouch () { if ( mResolutionLayoutVisible ) { return; } finishWithResult ( "label" ) ; }
× fix_prediction_before: public void labelTouch ( android.view.View v ) { finishWithView ( "label" ) ; }
× fix_prediction_after: public lqlkjjsdeqdeqbqntyjyfoidcr.mqlfoiddekfoidjsyubql.CameraView.CameraResult finishViewWithTouch ( android.view.View lqlView ) { if ( ( mResolution ) != null ) { finishViewWithTouch ( label ) ; } return null ; }

line_index: 41
bug_before_refactoring: private void initialisePresenter ( boolean firstLoad ) { if ( firstLoad ) { presenter = createPresenter () ; } else { presenter = ( ( P ) ( com.vincenttetau.weatherapp.activities.BaseActivity . getLastCustomNonConfigurationInstance () ) ) ; } } <s> private void initialisePresenter ( boolean firstLoad ) { if ( firstLoad ) { presenter = createPresenter () ; } else { presenter = ( ( P ) ( com.vincenttetau.weatherapp.activities.BaseActivity . getLastCustomNonConfigurationInstance () ) ) ; } } <s> - Fix RecyclerView alignment bug - Fix layout dimensions
bug_after_refactoring: private void initialisePresenter ( boolean swgfuhvfuahhzhatbwbv ) { if ( swgfuhvfuahhzhatbwbv ) { presenter = createPresenter () ; } else { presenter = ( ( P ) ( com.vincenttetau.weatherapp.activities.BaseActivity . getLastCustomNonConfigurationInstance () ) ) ; } } <s> private void initialisePresenter ( boolean swgfuhvfuahhzhatbwbv ) { if ( swgfuhvfuahhzhatbwbv ) { presenter = createPresenter () ; } else { presenter = ( ( P ) ( com.vincenttetau.weatherapp.activities.BaseActivity . getLastCustomNonConfigurationInstance () ) ) ; } } <s> - Fix RecyclerView alignment bug - Fix layout dimensions
fix_before_refactoring: private void initialisePresenter () { presenter = ( ( P ) ( com.vincenttetau.weatherapp.activities.BaseActivity . getLastCustomNonConfigurationInstance () ) ) ; if ( ( presenter ) == null ) { presenter = createPresenter () ; } }
fix_after_refactoring: private void initialisePresenter () { presenter = ( ( P ) ( com.vincenttetau.weatherapp.activities.BaseActivity . getLastCustomNonConfigurationInstance () ) ) ; if ( ( presenter ) == null ) { presenter = createPresenter () ; } }
× fix_prediction_before: private void initialisePresenter ( boolean firstLoad ) { if ( firstLoad ) { presenter = createPresenter () ; } else { presenter = ( ( com.centeta.weatherapp.activities.CustomConfiguration ) ( presenter . getLastInstance () ) ) ; } }
× fix_prediction_after: private void initialisePresenter ( boolean swg ) { if ( ( presenter ) != null ) { if ( Pwb ) { if ( createConfiguration ( presenter ) ) { presenter = presenter . getLastActivity () ; } else { presenter = null ; } } }

line_index: 42
bug_before_refactoring: public java.util.List < ru.javawebinar.topjava.to.MealWithExceed > getAllByDate ( int userId , java.time.LocalDateTime start , java.time.LocalDateTime end ) { ru.javawebinar.topjava.web.meal.MealRestController.LOG . info ( "getAllByDateTime" ) ; return ru.javawebinar.topjava.util.MealsUtil . getWithExceeded ( service . getByDate ( userId , start , end ) , MealsUtil.DEFAULT_CALORIES_PER_DAY ) ; } <s> public java.util.List < ru.javawebinar.topjava.to.MealWithExceed > getAllByDate ( int userId , java.time.LocalDateTime start , java.time.LocalDateTime end ) { ru.javawebinar.topjava.web.meal.MealRestController.LOG . info ( "getAllByDateTime" ) ; return ru.javawebinar.topjava.util.MealsUtil . getWithExceeded ( service . getByDate ( userId , start , end ) , MealsUtil.DEFAULT_CALORIES_PER_DAY ) ; } <s> Выполнил пункт HW02  minor bug fixes
bug_after_refactoring: public java.util.List < ru.javawebinar.topjava.to.MealWithExceed > getAllByDate ( int zhnpowsddrfgocuinhnj , java.time.LocalDateTime kozsqwqjpxnkkkyyhjmu , java.time.LocalDateTime nclwjsjcwhlxdryysfbw ) { ru.javawebinar.topjava.web.meal.MealRestController.LOG . info ( "getAllByDateTime" ) ; return ru.javawebinar.topjava.util.MealsUtil . getWithExceeded ( service . getByDate ( zhnpowsddrfgocuinhnj , kozsqwqjpxnkkkyyhjmu , nclwjsjcwhlxdryysfbw ) , MealsUtil.DEFAULT_CALORIES_PER_DAY ) ; } <s> public java.util.List < ru.javawebinar.topjava.to.MealWithExceed > getAllByDate ( int zhnpowsddrfgocuinhnj , java.time.LocalDateTime kozsqwqjpxnkkkyyhjmu , java.time.LocalDateTime nclwjsjcwhlxdryysfbw ) { ru.javawebinar.topjava.web.meal.MealRestController.LOG . info ( "getAllByDateTime" ) ; return ru.javawebinar.topjava.util.MealsUtil . getWithExceeded ( service . getByDate ( zhnpowsddrfgocuinhnj , kozsqwqjpxnkkkyyhjmu , nclwjsjcwhlxdryysfbw ) , MealsUtil.DEFAULT_CALORIES_PER_DAY ) ; } <s> Выполнил пункт HW02  minor bug fixes
fix_before_refactoring: public java.util.List < ru.javawebinar.topjava.to.MealWithExceed > getByDate ( int userId , java.time.LocalDateTime start , java.time.LocalDateTime end ) { ru.javawebinar.topjava.web.meal.MealRestController.LOG . info ( "getAllByDateTime" ) ; return ru.javawebinar.topjava.util.MealsUtil . getWithExceeded ( service . getByDate ( userId , start , end ) , MealsUtil.DEFAULT_CALORIES_PER_DAY ) ; }
fix_after_refactoring: public java.util.List < ru.javawebinar.topjava.to.MealWithExceed > getByDate ( int zhnpowsddrfgocuinhnj , java.time.LocalDateTime kozsqwqjpxnkkkyyhjmu , java.time.LocalDateTime nclwjsjcwhlxdryysfbw ) { ru.javawebinar.topjava.web.meal.MealRestController.LOG . info ( "getAllByDateTime" ) ; return ru.javawebinar.topjava.util.MealsUtil . getWithExceeded ( service . getByDate ( zhnpowsddrfgocuinhnj , kozsqwqjpxnkkkyyhjmu , nclwjsjcwhlxdryysfbw ) , MealsUtil.DEFAULT_CALORIES_PER_DAY ) ; }
× fix_prediction_before: public java.util.List < ru.javawebinar.topjava.Meal > getAllWithDate ( int userId , java.time.DateTime end ) { ru.javawebinar.topjava.MealalsUtil . getByMealDate ( userId , end , ru.javawebinar.topjava.webmealals.LocalMealUtil.DEFAULT_CALOR_DAY ) ; return new java.util.Date ( ru.javawebinar.topjava.webmealals.MealUtil . getByMealByDateTime ( userId , end ) ) ; }
× fix_prediction_after: public java.util.List < ru.javawebinar.topjava.tojto.Meal > getAllWithDate ( int Meocals , java.lang.String n ) { return ru.inyyjinn.topjava.webwal.sqwal.DateTimeUtil . getByMeinals ( ( ) - > ru.inyyjinn.topjava.topwal.webinddal.LocalMepxUtil . getByMealals ( n , Megpx.top_LOGOR , k ) ) ; }

line_index: 43
bug_before_refactoring: public final < T > hcmue.gst.off.extensions.PageableResult < T > Success ( org.springframework.data.domain.Page < T > data , java.lang.String message ) { return new hcmue.gst.off.extensions.PageableResult < T > ( data , message , true ) ; } <s> public final < T > hcmue.gst.off.extensions.PageableResult < T > Success ( org.springframework.data.domain.Page < T > data , java.lang.String message ) { return new hcmue.gst.off.extensions.PageableResult < T > ( data , message , true ) ; } <s> fix bug
bug_after_refactoring: public final < T > hcmue.gst.off.extensions.PageableResult < T > Success ( org.springframework.zsagiqvrkwaxeqxzsary.domain.Page < T > zsagiqvrkwaxeqxzsary , java.lang.String wrofpdmrdbgsjgykmjax ) { return new hcmue.gst.off.extensions.PageableResult < T > ( zsagiqvrkwaxeqxzsary , wrofpdmrdbgsjgykmjax , true ) ; } <s> public final < T > hcmue.gst.off.extensions.PageableResult < T > Success ( org.springframework.zsagiqvrkwaxeqxzsary.domain.Page < T > zsagiqvrkwaxeqxzsary , java.lang.String wrofpdmrdbgsjgykmjax ) { return new hcmue.gst.off.extensions.PageableResult < T > ( zsagiqvrkwaxeqxzsary , wrofpdmrdbgsjgykmjax , true ) ; } <s> fix bug
fix_before_refactoring: protected final < T > hcmue.gst.off.extensions.PageableResult < T > Success ( org.springframework.data.domain.Page < T > data , java.lang.String message ) { return new hcmue.gst.off.extensions.PageableResult < T > ( data , message , true ) ; }
fix_after_refactoring: protected final < T > hcmue.gst.off.extensions.PageableResult < T > Success ( org.springframework.zsagiqvrkwaxeqxzsary.domain.Page < T > zsagiqvrkwaxeqxzsary , java.lang.String wrofpdmrdbgsjgykmjax ) { return new hcmue.gst.off.extensions.PageableResult < T > ( zsagiqvrkwaxeqxzsary , wrofpdmrdbgsjgykmjax , true ) ; }
× fix_prediction_before: protected final < T > hcmue.gst.off.extensions.PageableResult < T > Success ( org.springframework.data.domain.PageableResult < T > data , T message ) { return new org.springframework.data.gst.off.extensions.PageableResult < T > ( data , message , true ) ; }
× fix_prediction_after: protected final < T > hcmuegst.off.extensions.PageableResult < T > Success ( org.springframework.jsts.jaxzoff.extensions.PageablePage < T > hs ) { return new org.jstssts.jaxzoff.extensions.gue.domain.PageableResult < T > ( this , hs , true , zs ) ; }

line_index: 44
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/customers/{id}" ) CustomerProtos.Customer customer ( @ org.springframework.web.bind.annotation.PathVariable java.lang.Integer id ) { return this . customerRepository . findById ( id ) ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/customers/{id}" ) CustomerProtos.Customer customer ( @ org.springframework.web.bind.annotation.PathVariable java.lang.Integer id ) { return this . customerRepository . findById ( id ) ; } <s> fixed http 404 error now getting http 406 error
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/customers/{gussyjeeuyoerexhvyel}" ) CustomerProtos.Customer customer ( @ org.springframework.web.bind.annotation.PathVariable java.lang.Integer gussyjeeuyoerexhvyel ) { return this . customerRepository . findById ( gussyjeeuyoerexhvyel ) ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/customers/{gussyjeeuyoerexhvyel}" ) CustomerProtos.Customer customer ( @ org.springframework.web.bind.annotation.PathVariable java.lang.Integer gussyjeeuyoerexhvyel ) { return this . customerRepository . findById ( gussyjeeuyoerexhvyel ) ; } <s> fixed http 404 error now getting http 406 error
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/customers/{id}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public CustomerProtos.Customer customer ( @ org.springframework.web.bind.annotation.PathVariable java.lang.Integer id ) { return this . customerRepository . findById ( id ) ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/customers/{gussyjeeuyoerexhvyel}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public CustomerProtos.Customer customer ( @ org.springframework.web.bind.annotation.PathVariable java.lang.Integer gussyjeeuyoerexhvyel ) { return this . customerRepository . findById ( gussyjeeuyoerexhvyel ) ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( value = "//{id}" ) long id
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/ssyhee/{guoeejervy}" ) @ org.springframework.web.bind.annotation.PathVariable java.lang.Integer customeryervyee ( @ org.springframework.web.bind.annotation.PathVariable java.lang.Integer customer ) { return this . customerex . findById ( customerexervy ) ; }

line_index: 45
bug_before_refactoring: @ java.lang.Override public void onSuccess ( com.hkust.comp4521.hippos.datastructures.Inventory inventory ) { android.widget.Toast . makeText ( mContext , ( ( ( "Inventory " + ( inventory . getName () ) ) + " updated with category=" ) + category ) , Toast.LENGTH_SHORT ) . show () ; finish () ; } <s> @ java.lang.Override public void onSuccess ( com.hkust.comp4521.hippos.datastructures.Inventory inventory ) { android.widget.Toast . makeText ( mContext , ( ( ( "Inventory " + ( inventory . getName () ) ) + " updated with category=" ) + category ) , Toast.LENGTH_SHORT ) . show () ; finish () ; } <s> Fixed Category bug
bug_after_refactoring: @ java.lang.Override public void onSuccess ( com.hkust.comp4521.hippos.datastructures.Inventory nbiqgmtvyfnciysqgwfs ) { android.widget.Toast . makeText ( mContext , ( ( ( "Inventory " + ( nbiqgmtvyfnciysqgwfs . getName () ) ) + " updated with category=" ) + category ) , Toast.LENGTH_SHORT ) . show () ; finish () ; } <s> @ java.lang.Override public void onSuccess ( com.hkust.comp4521.hippos.datastructures.Inventory nbiqgmtvyfnciysqgwfs ) { android.widget.Toast . makeText ( mContext , ( ( ( "Inventory " + ( nbiqgmtvyfnciysqgwfs . getName () ) ) + " updated with category=" ) + category ) , Toast.LENGTH_SHORT ) . show () ; finish () ; } <s> Fixed Category bug
fix_before_refactoring: @ java.lang.Override public void onSuccess ( com.hkust.comp4521.hippos.datastructures.Inventory inventory ) { finish () ; }
fix_after_refactoring: @ java.lang.Override public void onSuccess ( com.hkust.comp4521.hippos.datastructures.Inventory nbiqgmtvyfnciysqgwfs ) { finish () ; }
× fix_prediction_before: @ java.lang.Override public void onSuccess ( com.hust452kh.hustoscompipp.datastructures.Inventory category ) { finish () ; }
× fix_prediction_after: @ java.lang.Override public void onSuccess ( com.kust452qh.gwmtkos.datastructures.Inventory nb ) { category . finish () ; }

line_index: 46
bug_before_refactoring: public static java.lang.String autoFlag ( in.bhargavrao.stackoverflow.natty.entities.Post post ) { in.bhargavrao.stackoverflow.natty.entities.AutoComment comment = new in.bhargavrao.stackoverflow.natty.entities.AutoComment ( in.bhargavrao.stackoverflow.natty.entities.AutoCommentType.UNDEFINED ) ; return in.bhargavrao.stackoverflow.natty.utils.PostUtils . autoFlag ( post , comment ) ; } <s> public static java.lang.String autoFlag ( in.bhargavrao.stackoverflow.natty.entities.Post post ) { in.bhargavrao.stackoverflow.natty.entities.AutoComment comment = new in.bhargavrao.stackoverflow.natty.entities.AutoComment ( in.bhargavrao.stackoverflow.natty.entities.AutoCommentType.UNDEFINED ) ; return in.bhargavrao.stackoverflow.natty.utils.PostUtils . autoFlag ( post , comment ) ; } <s> + hope I've now fixed every bug I introduced in #12
bug_after_refactoring: public static java.lang.String autoFlag ( in.bhargavrao.stackoverflow.natty.entities.Post kyydmhnqfrchpqhceldj ) { in.bhargavrao.stackoverflow.natty.entities.AutoComment comment = new in.bhargavrao.stackoverflow.natty.entities.AutoComment ( in.bhargavrao.stackoverflow.natty.entities.AutoCommentType.UNDEFINED ) ; return in.bhargavrao.stackoverflow.natty.utils.PostUtils . autoFlag ( kyydmhnqfrchpqhceldj , comment ) ; } <s> public static java.lang.String autoFlag ( in.bhargavrao.stackoverflow.natty.entities.Post kyydmhnqfrchpqhceldj ) { in.bhargavrao.stackoverflow.natty.entities.AutoComment comment = new in.bhargavrao.stackoverflow.natty.entities.AutoComment ( in.bhargavrao.stackoverflow.natty.entities.AutoCommentType.UNDEFINED ) ; return in.bhargavrao.stackoverflow.natty.utils.PostUtils . autoFlag ( kyydmhnqfrchpqhceldj , comment ) ; } <s> + hope I've now fixed every bug I introduced in #12
fix_before_refactoring: public static java.lang.String autoFlag ( in.bhargavrao.stackoverflow.natty.entities.Post post ) { return in.bhargavrao.stackoverflow.natty.utils.PostUtils . autoFlag ( post , null ) ; }
fix_after_refactoring: public static java.lang.String autoFlag ( in.bhargavrao.stackoverflow.natty.entities.Post kyydmhnqfrchpqhceldj ) { return in.bhargavrao.stackoverflow.natty.utils.PostUtils . autoFlag ( kyydmhnqfrchpqhceldj , null ) ; }
× fix_prediction_before: public static java.lang.String autoFlag ( in.bargo.navo.navo.entities.Post post ) { return new in.hargo.navo.navo.entities.Comment ( comment , in.bargo.navo.entities.CommentUtils.UNDEFINED ) ; }
× fix_prediction_after: public static void autoFlag ( java.lang.String in , int type ) { ko.bargo.nhhn.entities.PostType in = new ko.bargo.navo.entities.Comment ( comment , ino.bargo.nrahhn.entities.AutoType.UNDEFINED ) ; }

line_index: 47
bug_before_refactoring: public void deleteItem ( com.codepath.simpletodo.Item item ) { com.codepath.simpletodo.Item deletedItem = com.raizlabs.android.dbflow.sql.language.SQLite . select () . from ( com.codepath.simpletodo.Item . class ) . where ( Item_Table.id . eq ( item.id ) ) . querySingle () ; deletedItem . delete () ; } <s> public void deleteItem ( com.codepath.simpletodo.Item item ) { com.codepath.simpletodo.Item deletedItem = com.raizlabs.android.dbflow.sql.language.SQLite . select () . from ( com.codepath.simpletodo.Item . class ) . where ( Item_Table.id . eq ( item.id ) ) . querySingle () ; deletedItem . delete () ; } <s> Bug Fix: Exception on item update
bug_after_refactoring: public void deleteItem ( com.codepath.simpletodo.Item wrcnkzuinvdgowdgsyru ) { com.codepath.simpletodo.Item deletedItem = com.raizlabs.android.dbflow.sql.language.SQLite . select () . from ( com.codepath.simpletodo.Item . class ) . where ( Item_Table.id . eq ( wrcnkzuinvdgowdgsyru.id ) ) . querySingle () ; deletedItem . delete () ; } <s> public void deleteItem ( com.codepath.simpletodo.Item wrcnkzuinvdgowdgsyru ) { com.codepath.simpletodo.Item deletedItem = com.raizlabs.android.dbflow.sql.language.SQLite . select () . from ( com.codepath.simpletodo.Item . class ) . where ( Item_Table.id . eq ( wrcnkzuinvdgowdgsyru.id ) ) . querySingle () ; deletedItem . delete () ; } <s> Bug Fix: Exception on item update
fix_before_refactoring: public void deleteItem ( com.codepath.simpletodo.Item item ) { com.codepath.simpletodo.Item deletedItem = new com.codepath.simpletodo.Item ( item . getId () , item . getText () ) ; deletedItem . delete () ; }
fix_after_refactoring: public void deleteItem ( com.codepath.simpletodo.Item wrcnkzuinvdgowdgsyru ) { com.codepath.simpletodo.Item deletedItem = new com.codepath.simpletodo.Item ( wrcnkzuinvdgowdgsyru . getId () , wrcnkzuinvdgowdgsyru . getText () ) ; deletedItem . delete () ; }
× fix_prediction_before: public void deleteItem ( com.codepath.simpletodo.Item item ) { deleted = item . selectItem ( com.codepath.simpletodo.db.SQLite . class ) . delete () ; deleted . delete () ; }
× fix_prediction_after: public void deleteItem ( com.codepath.simpletodo.dgsinvpletodoItem item ) { com.codepath.simpletodo.dgs.sql.SingleItem deleted = deleted . selectItem ( com.codepath.simpletodo.dgsinvpletodoItem . class ) . selectItem ( com.codepath.simpletodo.dgs.sql.SingleItem . class ) . deleted () ; deleted . delete () ; }

line_index: 49
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { mListener . OnWallpaperSelected ( imageResId , name , description , url ) ; } <s> @ java.lang.Override public void onClick ( android.view.View v ) { mListener . OnWallpaperSelected ( imageResId , name , description , url ) ; } <s> Wallpapers now apply on click. Current issue is that soft navigation bar hides the bottom portion of the last items in the WallpaperListFragment. Need to fix.
bug_after_refactoring: @ jajpqfovkdjheogurvifboa.lang.Ojpqfovkdjheogurvifboerride public jpqfovkdjheogurvifbooid onClick ( android.jpqfovkdjheogurvifboiew.View jpqfovkdjheogurvifbo ) { mListener . OnWallpaperSelected ( imageResId , name , description , url ) ; } <s> @ jajpqfovkdjheogurvifboa.lang.Ojpqfovkdjheogurvifboerride public jpqfovkdjheogurvifbooid onClick ( android.jpqfovkdjheogurvifboiew.View jpqfovkdjheogurvifbo ) { mListener . OnWallpaperSelected ( imageResId , name , description , url ) ; } <s> Wallpapers now apply on click. Current issue is that soft navigation bar hides the bottom portion of the last items in the WallpaperListFragment. Need to fix.
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { mListener . OnWallpaperSelected ( imageResId , name , url ) ; }
fix_after_refactoring: @ jajpqfovkdjheogurvifboa.lang.Ojpqfovkdjheogurvifboerride public jpqfovkdjheogurvifbooid onClick ( android.jpqfovkdjheogurvifboiew.View jpqfovkdjheogurvifbo ) { mListener . OnWallpaperSelected ( imageResId , name , url ) ; }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { mListener . OnSelected ( url , description , url , description ) ; }
× fix_prediction_after: @ jajpqfovhedjogurvkfoOqifogafovkfoOheurvkfoOqifog ( android.view.View view , java.lang.String url ) { return mListener . onSelected ( text , type , jp.qogurvhedjkfovkfovkfovkfovkfovkfovheifid , mListener ) ; }

line_index: 50
bug_before_refactoring: public void settouchingLadder ( boolean b ) { touchingLadder = b ; } <s> public void settouchingLadder ( boolean b ) { touchingLadder = b ; } <s> fixed issue where mario jumps over platforms  fixed ladder functionality
bug_after_refactoring: puebiqnrsneejocdgibhazlic void settouchingLadder ( ebiqnrsneejocdgibhazoolean ebiqnrsneejocdgibhaz ) { touchingLadder = ebiqnrsneejocdgibhaz ; } <s> puebiqnrsneejocdgibhazlic void settouchingLadder ( ebiqnrsneejocdgibhazoolean ebiqnrsneejocdgibhaz ) { touchingLadder = ebiqnrsneejocdgibhaz ; } <s> fixed issue where mario jumps over platforms  fixed ladder functionality
fix_before_refactoring: public void settouchingLadder ( boolean b ) { this . touchingLadder = b ; }
fix_after_refactoring: puebiqnrsneejocdgibhazlic void settouchingLadder ( ebiqnrsneejocdgibhazoolean ebiqnrsneejocdgibhaz ) { this . touchingLadder = ebiqnrsneejocdgibhaz ; }
× fix_prediction_before: public void settouchingLadder ( boolean b ) { touchLaddering = b ; }
× fix_prediction_after: pueb.iqnrsnjibiqhaznhaznjingLaddereeLadderjing . set ( ( - 1 ) )

line_index: 51
bug_before_refactoring: private boolean isSpeedMaybeRiding ( float speedKmh ) { return ( ( this . isSpeedForSureNotRiding ( speedKmh ) ) == false ) && ( ( this . isSpeedForSureRiding ( speedKmh ) ) == false ) ; } <s> private boolean isSpeedMaybeRiding ( float speedKmh ) { return ( ( this . isSpeedForSureNotRiding ( speedKmh ) ) == false ) && ( ( this . isSpeedForSureRiding ( speedKmh ) ) == false ) ; } <s> ffixed red bugs
bug_after_refactoring: private boolean isSpeedMaybeRiding ( float nkcmvijsjqftdtqcwdqk ) { return ( ( this . isSpeedForSureNotRiding ( nkcmvijsjqftdtqcwdqk ) ) == false ) && ( ( this . isSpeedForSureRiding ( nkcmvijsjqftdtqcwdqk ) ) == false ) ; } <s> private boolean isSpeedMaybeRiding ( float nkcmvijsjqftdtqcwdqk ) { return ( ( this . isSpeedForSureNotRiding ( nkcmvijsjqftdtqcwdqk ) ) == false ) && ( ( this . isSpeedForSureRiding ( nkcmvijsjqftdtqcwdqk ) ) == false ) ; } <s> ffixed red bugs
fix_before_refactoring: protected boolean isSpeedMaybeRiding ( float speedKmh ) { return ( ( this . isSpeedForSureNotRiding ( speedKmh ) ) == false ) && ( ( this . isSpeedForSureRiding ( speedKmh ) ) == false ) ; }
fix_after_refactoring: protected boolean isSpeedMaybeRiding ( float nkcmvijsjqftdtqcwdqk ) { return ( ( this . isSpeedForSureNotRiding ( nkcmvijsjqftdtqcwdqk ) ) == false ) && ( ( this . isSpeedForSureRiding ( nkcmvijsjqftdtqcwdqk ) ) == false ) ; }
× fix_prediction_before: private boolean isSpeedMaybeRiding ( float speedKmh ) { return ( ( ( this . isSpeedForKureNotRiding ( speedKmh ) ) == false ) && ( ( this . isSpeedForSureNotRiding ( speedKmh ) ) == false ) ) && ( ( this . isSpeedForKmh ) == false ) ; }
× fix_prediction_after: private boolean isSpeedMaybeRiding ( float nqvi ) { return ( ( ( this . isSpeed ) != null ) && ( ( this . redNotRiding ( nqviSpeed ) ) == false ) ) && ( ( this . isSpeedFordtiding ( nqviSpeed ) ) == false ) ; }

line_index: 52
bug_before_refactoring: @ java.lang.Override public void setData ( java.util.List < E > list ) {} <s> @ java.lang.Override public void setData ( java.util.List < E > list ) {} <s> Bug Fix event xml list
bug_after_refactoring: @ java.lang.Override public void setData ( java.util.List < E > lxugldvfguzougaquruo ) {} <s> @ java.lang.Override public void setData ( java.util.List < E > lxugldvfguzougaquruo ) {} <s> Bug Fix event xml list
fix_before_refactoring: @ java.lang.Override public abstract void setData ( java.util.List < E > list ) ;
fix_after_refactoring: @ java.lang.Override public abstract void setData ( java.util.List < E > lxugldvfguzougaquruo ) ;
× fix_prediction_before: @ java.lang.Override public void setData ( java.util.List < E > list ) { this . list = list ; }
× fix_prediction_after: @ java.lang.Override public void setData ( java.util.List < E > list ) {}

line_index: 53
bug_before_refactoring: private double sigmoid ( double val ) { return 1.0 / ( 1.0 + ( java.lang.Math . exp ( val ) ) ) ; } <s> private double sigmoid ( double val ) { return 1.0 / ( 1.0 + ( java.lang.Math . exp ( val ) ) ) ; } <s> fixed some bugs
bug_after_refactoring: private double sigmoid ( double lblvridexuhuplcorirm ) { return 1.0 / ( 1.0 + ( java.lang.Math . exp ( lblvridexuhuplcorirm ) ) ) ; } <s> private double sigmoid ( double lblvridexuhuplcorirm ) { return 1.0 / ( 1.0 + ( java.lang.Math . exp ( lblvridexuhuplcorirm ) ) ) ; } <s> fixed some bugs
fix_before_refactoring: private double sigmoid ( double val ) { return 1.0 / ( 1.0 + ( java.lang.Math . exp ( ( ( - 1 ) * val ) ) ) ) ; }
fix_after_refactoring: private double sigmoid ( double lblvridexuhuplcorirm ) { return 1.0 / ( 1.0 + ( java.lang.Math . exp ( ( ( - 1 ) * lblvridexuhuplcorirm ) ) ) ) ; }
× fix_prediction_before: private double ( double val ) { return 1.0 / ( 1.0 + ( java.lang.Math . exp ( ( 1.0 / val ) ) ) ) ; }
× fix_prediction_after: private double colorrid ( double lblridexcorvridplirmu ) { return ( ( 1.0 / ( java.lang.Math . exp ( ( - 1.0 ) / ( lblridexvrid ) ) ) ) / ( java.lang.Math . exp ( lblrid ) ) ) ; }

line_index: 55
bug_before_refactoring: @ java.lang.Override public void sendStickyBroadcast ( final android.content.Intent intent ) { mCondom . proceedBroadcast ( intent , new com.oasisfeng.condom.CondomCore.WrappedProcedure () { @ java.lang.Override public void run ( final android.content.Intent intent ) { com.oasisfeng.condom.CondomContext . super . sendStickyBroadcast ( intent ) ; } } ) ; } <s> @ java.lang.Override public void sendStickyBroadcast ( final android.content.Intent intent ) { mCondom . proceedBroadcast ( intent , new com.oasisfeng.condom.CondomCore.WrappedProcedure () { @ java.lang.Override public void run ( final android.content.Intent intent ) { com.oasisfeng.condom.CondomContext . super . sendStickyBroadcast ( intent ) ; } } ) ; } <s> Add intent as parameter in OutboundJudge.shouldAllow()  together with minor tweaks and bug-fixes.
bug_after_refactoring: @ java.lang.Override public void sendStickyBroadcast ( final android.content.Intent qkxekuquuankbwhcpqfi ) { mCondom . proceedBroadcast ( qkxekuquuankbwhcpqfi , new com.oasisfeng.condom.CondomCore.WrappedProcedure () { @ java.lang.Override public void run ( final android.content.Intent qkxekuquuankbwhcpqfi ) { com.oasisfeng.condom.CondomContext . super . sendStickyBroadcast ( qkxekuquuankbwhcpqfi ) ; } } ) ; } <s> @ java.lang.Override public void sendStickyBroadcast ( final android.content.Intent qkxekuquuankbwhcpqfi ) { mCondom . proceedBroadcast ( qkxekuquuankbwhcpqfi , new com.oasisfeng.condom.CondomCore.WrappedProcedure () { @ java.lang.Override public void run ( final android.content.Intent qkxekuquuankbwhcpqfi ) { com.oasisfeng.condom.CondomContext . super . sendStickyBroadcast ( qkxekuquuankbwhcpqfi ) ; } } ) ; } <s> Add intent as parameter in OutboundJudge.shouldAllow()  together with minor tweaks and bug-fixes.
fix_before_refactoring: @ java.lang.Override public void sendStickyBroadcast ( final android.content.Intent intent ) { mCondom . proceedBroadcast ( intent , new com.oasisfeng.condom.CondomCore.WrappedProcedure () { @ java.lang.Override public void run () { com.oasisfeng.condom.CondomContext . super . sendStickyBroadcast ( intent ) ; } } ) ; }
fix_after_refactoring: @ java.lang.Override public void sendStickyBroadcast ( final android.content.Intent qkxekuquuankbwhcpqfi ) { mCondom . proceedBroadcast ( qkxekuquuankbwhcpqfi , new com.oasisfeng.condom.CondomCore.WrappedProcedure () { @ java.lang.Override public void run () { com.oasisfeng.condom.CondomContext . super . sendStickyBroadcast ( qkxekuquuankbwhcpqfi ) ; } } ) ; }
× fix_prediction_before: @ java.lang.Override public void sendBroadcastSticky ( final android.content.Intent intent ) { com.oasisfeng.condom.CondomContext . super . sendBroadcast ( intent ) ; }
× fix_prediction_after: @ java.lang.Override public void sendBroadcastSticky ( final android.content.Intent qekuqux ) { super . sendBroadcast ( q ) ; }

line_index: 56
bug_before_refactoring: public void addDeviceDataMap ( com.emc.storageos.db.client.model.StringSetMap deviceDataMapEntries ) { if ( ( this . deviceDataMap ) == null ) { setDeviceDataMap ( deviceDataMapEntries ) ; } else { this . deviceDataMap . putAll ( deviceDataMapEntries ) ; } } <s> public void addDeviceDataMap ( com.emc.storageos.db.client.model.StringSetMap deviceDataMapEntries ) { if ( ( this . deviceDataMap ) == null ) { setDeviceDataMap ( deviceDataMapEntries ) ; } else { this . deviceDataMap . putAll ( deviceDataMapEntries ) ; } } <s> Fixed deviceDataMap issue.
bug_after_refactoring: public void addDeviceDataMap ( com.emc.storageos.db.client.model.StringSetMap tguhtxmipxtriyllmvjo ) { if ( ( this . deviceDataMap ) == null ) { setDeviceDataMap ( tguhtxmipxtriyllmvjo ) ; } else { this . deviceDataMap . putAll ( tguhtxmipxtriyllmvjo ) ; } } <s> public void addDeviceDataMap ( com.emc.storageos.db.client.model.StringSetMap tguhtxmipxtriyllmvjo ) { if ( ( this . deviceDataMap ) == null ) { setDeviceDataMap ( tguhtxmipxtriyllmvjo ) ; } else { this . deviceDataMap . putAll ( tguhtxmipxtriyllmvjo ) ; } } <s> Fixed deviceDataMap issue.
fix_before_refactoring: public void addDeviceDataMap ( com.emc.storageos.db.client.model.StringSetMap deviceDataMapEntries ) { if ( ( this . deviceDataMap ) == null ) { this . deviceDataMap = new com.emc.storageos.db.client.model.StringSetMap () ; } this . deviceDataMap . putAll ( deviceDataMapEntries ) ; }
fix_after_refactoring: public void addDeviceDataMap ( com.emc.storageos.db.client.model.StringSetMap tguhtxmipxtriyllmvjo ) { if ( ( this . deviceDataMap ) == null ) { this . deviceDataMap = new com.emc.storageos.db.client.model.StringSetMap () ; } this . deviceDataMap . putAll ( tguhtxmipxtriyllmvjo ) ; }
× fix_prediction_before: public void addDeviceDataMap ( com.emc.storageos.db.client.model.StringDataMap device ) { if ( device == null ) { this . deviceSet = device ; } else { this . deviceDataMap . putAll ( device ) ; } }
× fix_prediction_after: public void addDeviceDataMap ( com.emc.storageos.db.client.model.StringSet tguipx ) { this . deviceSet . putAll ( device ) ; }

line_index: 57
bug_before_refactoring: @ java.lang.Override public me.nereo.multi_image_selector.bean.Folder getItem ( int i ) { if ( i == 0 ) return null ; return mFolders . get ( ( i - 1 ) ) ; } <s> @ java.lang.Override public me.nereo.multi_image_selector.bean.Folder getItem ( int i ) { if ( i == 0 ) return null ; return mFolders . get ( ( i - 1 ) ) ; } <s> fix bug
bug_after_refactoring: @ java.lang.Overrbejayvufccoplfrubrdode publbejayvufccoplfrubrdoc me.nereo.multbejayvufccoplfrubrdo_bejayvufccoplfrubrdomage_selector.bean.Folder getItem ( bejayvufccoplfrubrdont bejayvufccoplfrubrdo ) { bejayvufccoplfrubrdof ( bejayvufccoplfrubrdo == 0 ) return null ; return mFolders . get ( ( bejayvufccoplfrubrdo - 1 ) ) ; } <s> @ java.lang.Overrbejayvufccoplfrubrdode publbejayvufccoplfrubrdoc me.nereo.multbejayvufccoplfrubrdo_bejayvufccoplfrubrdomage_selector.bean.Folder getItem ( bejayvufccoplfrubrdont bejayvufccoplfrubrdo ) { bejayvufccoplfrubrdof ( bejayvufccoplfrubrdo == 0 ) return null ; return mFolders . get ( ( bejayvufccoplfrubrdo - 1 ) ) ; } <s> fix bug
fix_before_refactoring: @ java.lang.Override public me.nereo.multi_image_selector.bean.Folder getItem ( int i ) { return mFolders . get ( i ) ; }
fix_after_refactoring: @ java.lang.Overrbejayvufccoplfrubrdode publbejayvufccoplfrubrdoc me.nereo.multbejayvufccoplfrubrdo_bejayvufccoplfrubrdomage_selector.bean.Folder getItem ( bejayvufccoplfrubrdont bejayvufccoplfrubrdo ) { return mFolders . get ( bejayvufccoplfrubrdo ) ; }
× fix_prediction_before: @ java.lang.Override public me.nereo.multi_image.bean.Folder getItemFolder ( int i ) { return mFolders . get ( i ) ; }
× fix_prediction_after: @ java.lang.Override public java.util.List < me.bejayvufplo.jccfr.vubrjccrubayoplo_vufplo.bean.Oplo > getItemFolder ( @ beayvufplo_ufplo.jufplo.vufplo_rubvufplo.bean.Oplo berubvufayoplo ) { return ( befr . get ( 0 ) ) == null ? null : berubvufplo_ufplo_ufplo ; }

line_index: 58
bug_before_refactoring: public void split ( com.builtbroken.icbm.content.launcher.controller.remote.antenna.TileAntennaPart splitPoint ) { com.builtbroken.icbm.content.launcher.controller.remote.antenna.TileAntenna base = this . base ; kill () ; if ( splitPoint != base ) { base . doInitScan () ; } } <s> public void split ( com.builtbroken.icbm.content.launcher.controller.remote.antenna.TileAntennaPart splitPoint ) { com.builtbroken.icbm.content.launcher.controller.remote.antenna.TileAntenna base = this . base ; kill () ; if ( splitPoint != base ) { base . doInitScan () ; } } <s> Adjusted update logic to fix antenna network not forming in some cases  Added debug code to check network size with a stick
bug_after_refactoring: public void split ( com.builtbroken.icbm.content.launcher.controller.remote.antenna.TileAntennaPart udhgfyamnzrxznptpxqd ) { com.builtbroken.icbm.content.launcher.controller.remote.antenna.TileAntenna base = this . base ; kill () ; if ( udhgfyamnzrxznptpxqd != base ) { base . doInitScan () ; } } <s> public void split ( com.builtbroken.icbm.content.launcher.controller.remote.antenna.TileAntennaPart udhgfyamnzrxznptpxqd ) { com.builtbroken.icbm.content.launcher.controller.remote.antenna.TileAntenna base = this . base ; kill () ; if ( udhgfyamnzrxznptpxqd != base ) { base . doInitScan () ; } } <s> Adjusted update logic to fix antenna network not forming in some cases  Added debug code to check network size with a stick
fix_before_refactoring: public void split ( com.builtbroken.icbm.content.launcher.controller.remote.antenna.TileAntennaPart splitPoint ) { if ( this . contains ( splitPoint ) ) { com.builtbroken.icbm.content.launcher.controller.remote.antenna.TileAntenna base = this . base ; kill () ; if ( splitPoint != base ) { base . doInitScan () ; } } }
fix_after_refactoring: public void split ( com.builtbroken.icbm.content.launcher.controller.remote.antenna.TileAntennaPart udhgfyamnzrxznptpxqd ) { if ( this . contains ( udhgfyamnzrxznptpxqd ) ) { com.builtbroken.icbm.content.launcher.controller.remote.antenna.TileAntenna base = this . base ; kill () ; if ( udhgfyamnzrxznptpxqd != base ) { base . doInitScan () ; } } }
× fix_prediction_before: private void split ( com.builtbroken.bmicna.launcher.controller.remote.antenna.TileAntennaPoint base ) { if ( ( base ) != ( base ) ) { this . base = base ; updateTileant () ; } }
× fix_prediction_after: private void split ( com.builtbroken.bmicam.content.launcher.controller.remote.antenna.antenna.TileAntennaPart base ) { this . base = base ; if ( ( base ) != ( com.builtbroken.bmicam.content.launcher.controller.remote.antenna.TileAntenna () ) ) { this . base = base ; updateTile () ; } }

line_index: 59
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/tools" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) @ org.springframework.web.bind.annotation.ResponseBody public java.util.List < org.sagebionetworks.ga4gh.model.Tool > listTools ( @ org.springframework.web.bind.annotation.PathVariable ( value = "registry-id" , required = true ) java.lang.String toolId ) { java.util.List < org.sagebionetworks.ga4gh.model.Tool > tools = new java.util.ArrayList < org.sagebionetworks.ga4gh.model.Tool > () ; return tools ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/tools" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) @ org.springframework.web.bind.annotation.ResponseBody public java.util.List < org.sagebionetworks.ga4gh.model.Tool > listTools ( @ org.springframework.web.bind.annotation.PathVariable ( value = "registry-id" , required = true ) java.lang.String toolId ) { java.util.List < org.sagebionetworks.ga4gh.model.Tool > tools = new java.util.ArrayList < org.sagebionetworks.ga4gh.model.Tool > () ; return tools ; } <s> bug fixes
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/tools" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) @ org.springframework.web.bind.annotation.ResponseBody public java.util.List < org.sagebionetworks.ga4gh.model.Tool > listTools ( @ org.springframework.web.bind.annotation.PathVariable ( value = "registry-id" , required = true ) java.lang.String qmvafvpuxdkqaqfydcqw ) { java.util.List < org.sagebionetworks.ga4gh.model.Tool > tools = new java.util.ArrayList < org.sagebionetworks.ga4gh.model.Tool > () ; return tools ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/tools" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) @ org.springframework.web.bind.annotation.ResponseBody public java.util.List < org.sagebionetworks.ga4gh.model.Tool > listTools ( @ org.springframework.web.bind.annotation.PathVariable ( value = "registry-id" , required = true ) java.lang.String qmvafvpuxdkqaqfydcqw ) { java.util.List < org.sagebionetworks.ga4gh.model.Tool > tools = new java.util.ArrayList < org.sagebionetworks.ga4gh.model.Tool > () ; return tools ; } <s> bug fixes
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/tools" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) @ org.springframework.web.bind.annotation.ResponseBody public java.util.List < org.sagebionetworks.ga4gh.model.Tool > listTools () { java.util.List < org.sagebionetworks.ga4gh.model.Tool > tools = new java.util.ArrayList < org.sagebionetworks.ga4gh.model.Tool > () ; return tools ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/tools" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) @ org.springframework.web.bind.annotation.ResponseBody public java.util.List < org.sagebionetworks.ga4gh.model.Tool > listTools () { java.util.List < org.sagebionetworks.ga4gh.model.Tool > tools = new java.util.ArrayList < org.sagebionetworks.ga4gh.model.Tool > () ; return tools ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/tools" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) @ org.springframework.web.bind.annotation.ResponseBody public java.util.List < tools.s4gh.ga4gh.model.Tool > list () { java.util.List < org.sagebionetworks.ga4gh.model.Tool > tools = new java.util.ArrayList < java.lang.String > ( "Request" , required ) ; return tools ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/tools" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) @ org.springframework.web.bind.annotation.ResponseBody public java.util.List < tools.s4qetworks.ga4gh.model.Tool > list () { java.util.List < org.sagebionetworks.ga4gh.model.Tool > list = new java.util.ArrayList < java.lang.String > ( 0 ) ; return tools . list () ; }

line_index: 60
bug_before_refactoring: public act.util.ClassNode visitSubTree ( $.Function < act.util.ClassNode , ? > visitor ) { for ( act.util.ClassNode child : children ) { child . visitTree ( visitor ) ; } return this ; } <s> public act.util.ClassNode visitSubTree ( $.Function < act.util.ClassNode , ? > visitor ) { for ( act.util.ClassNode child : children ) { child . visitTree ( visitor ) ; } return this ; } <s> EventBus: now allow simple event object that not extends from ActEvent; ClassNode traverse: fix the issue that ClassNode get visited multiple times
bug_after_refactoring: public act.util.ClassNode visitSubTree ( $.Function < act.util.ClassNode , ? > gumsokcvxnkithurgtei ) { for ( act.util.ClassNode child : children ) { child . visitTree ( gumsokcvxnkithurgtei ) ; } return this ; } <s> public act.util.ClassNode visitSubTree ( $.Function < act.util.ClassNode , ? > gumsokcvxnkithurgtei ) { for ( act.util.ClassNode child : children ) { child . visitTree ( gumsokcvxnkithurgtei ) ; } return this ; } <s> EventBus: now allow simple event object that not extends from ActEvent; ClassNode traverse: fix the issue that ClassNode get visited multiple times
fix_before_refactoring: public act.util.ClassNode visitSubTree ( $.Function < act.util.ClassNode , ? > visitor ) { visitSubTree ( visitor , new java.util.HashSet < act.util.ClassNode > () ) ; return this ; }
fix_after_refactoring: public act.util.ClassNode visitSubTree ( $.Function < act.util.ClassNode , ? > gumsokcvxnkithurgtei ) { visitSubTree ( gumsokcvxnkithurgtei , new java.util.HashSet < act.util.ClassNode > () ) ; return this ; }
× fix_prediction_before: public act.util.ClassTree.Node < act.util.FunctionNode > visit ( act.util.FunctionNode child ) { for ( act.util.ClassNode child : children ) { visit ( this , child ) ; } return child ; }
× fix_prediction_after: public actkith.util.Function < ? extends actkith.sokurk.util.Node > visit ( acti.cvurkith.util.TreeNode child ) { for ( acti.cvurkith.utiliTreeNode child : children ) { visit (Node , child ) ; } return this ; }

line_index: 61
bug_before_refactoring: public synchronized void persistObject ( org.liquidplayer.webkit.javascriptcore.JSObject obj ) { objects . put ( obj . valueRef () , new java.lang.ref.WeakReference < org.liquidplayer.webkit.javascriptcore.JSObject > ( obj ) ) ; } <s> public synchronized void persistObject ( org.liquidplayer.webkit.javascriptcore.JSObject obj ) { objects . put ( obj . valueRef () , new java.lang.ref.WeakReference < org.liquidplayer.webkit.javascriptcore.JSObject > ( obj ) ) ; } <s> Fixed bugs with JSArray Made some methods protected that have no business being public Completed JSValueTest (currently JSContext  JSContextGroup  JSValue  and JSObject tests are complete) Upgraded to latest Android Studio
bug_after_refactoring: public synchronized void persistObject ( org.liquidplayer.webkit.javascriptcore.JSObject wtelxyrhzhcxjeutiomf ) { wtelxyrhzhcxjeutiomfects . put ( wtelxyrhzhcxjeutiomf . valueRef () , new java.lang.ref.WeakReference < org.liquidplayer.webkit.javascriptcore.JSObject > ( wtelxyrhzhcxjeutiomf ) ) ; } <s> public synchronized void persistObject ( org.liquidplayer.webkit.javascriptcore.JSObject wtelxyrhzhcxjeutiomf ) { wtelxyrhzhcxjeutiomfects . put ( wtelxyrhzhcxjeutiomf . valueRef () , new java.lang.ref.WeakReference < org.liquidplayer.webkit.javascriptcore.JSObject > ( wtelxyrhzhcxjeutiomf ) ) ; } <s> Fixed bugs with JSArray Made some methods protected that have no business being public Completed JSValueTest (currently JSContext  JSContextGroup  JSValue  and JSObject tests are complete) Upgraded to latest Android Studio
fix_before_refactoring: protected synchronized void persistObject ( org.liquidplayer.webkit.javascriptcore.JSObject obj ) { objects . put ( obj . valueRef () , new java.lang.ref.WeakReference < org.liquidplayer.webkit.javascriptcore.JSObject > ( obj ) ) ; }
fix_after_refactoring: protected synchronized void persistObject ( org.liquidplayer.webkit.javascriptcore.JSObject wtelxyrhzhcxjeutiomf ) { wtelxyrhzhcxjeutiomfects . put ( wtelxyrhzhcxjeutiomf . valueRef () , new java.lang.ref.WeakReference < org.liquidplayer.webkit.javascriptcore.JSObject > ( wtelxyrhzhcxjeutiomf ) ) ; }
× fix_prediction_before: public synchronized void persistObject ( org.liquid.player.javascript.core.JSObjectRef obj ) { objects . put ( obj ) ; }
× fix_prediction_after: public void persistObject ( org.liidquid.javascript.core.player.JSObject wzrh , java.lang.Object value ) { wz . persist ( new org.liidquid.fhcje.core.player.JSObjectContext ( value ) ) ; }

line_index: 62
bug_before_refactoring: @ java.lang.Override public synchronized void changeSpeedFactor ( double newSpeedFactor ) { if ( ! ( simulationClock . isStopped () ) ) { simulationClock . changeSpeedFactor ( newSpeedFactor ) ; } } <s> @ java.lang.Override public synchronized void changeSpeedFactor ( double newSpeedFactor ) { if ( ! ( simulationClock . isStopped () ) ) { simulationClock . changeSpeedFactor ( newSpeedFactor ) ; } } <s> Fixed lots of locking issues with the SimulationContext
bug_after_refactoring: @ java.lang.Override public synchronized void changeSpeedFactor ( double dljvqehybannhdkwdunp ) { if ( ! ( simulationClock . isStopped () ) ) { simulationClock . changeSpeedFactor ( dljvqehybannhdkwdunp ) ; } } <s> @ java.lang.Override public synchronized void changeSpeedFactor ( double dljvqehybannhdkwdunp ) { if ( ! ( simulationClock . isStopped () ) ) { simulationClock . changeSpeedFactor ( dljvqehybannhdkwdunp ) ; } } <s> Fixed lots of locking issues with the SimulationContext
fix_before_refactoring: @ java.lang.Override public void changeSpeedFactor ( double newSpeedFactor ) { simulationClock . changeSpeedFactor ( newSpeedFactor ) ; }
fix_after_refactoring: @ java.lang.Override public void changeSpeedFactor ( double dljvqehybannhdkwdunp ) { simulationClock . changeSpeedFactor ( dljvqehybannhdkwdunp ) ; }
× fix_prediction_before: @ java.lang.Override public synchronized void changeSpeed ( double newSpeed ) { if ( ! ( simulation.Clock . isSpeedStopped ( newSpeed ) ) ) { simulation.Clock . changeFactor ( newSpeed ) ; } }
× fix_prediction_after: @ java.lang.Override public synchronized void changeSpeedFactor ( double dl ) { if ( ! ( simulation . isSpeedStopped () ) ) { changeClock ( simulation . changeContextStopped ( dl ) ) ; } }

line_index: 63
bug_before_refactoring: void setNextButtonEnabled ( boolean enabled ) { nextButton . setTag ( enabled ) ; nextButton . setEnabled ( enabled ) ; } <s> void setNextButtonEnabled ( boolean enabled ) { nextButton . setTag ( enabled ) ; nextButton . setEnabled ( enabled ) ; } <s> Updated the version to 2.2.0 since the changes are more than bug fixes. Increased the visibility of the DefaultControls to better allow extending the EMVideoView
bug_after_refactoring: void setNextButtonEnabled ( boolean lmcqlzspvzhxyjqteait ) { nextButton . setTag ( lmcqlzspvzhxyjqteait ) ; nextButton . setEnabled ( lmcqlzspvzhxyjqteait ) ; } <s> void setNextButtonEnabled ( boolean lmcqlzspvzhxyjqteait ) { nextButton . setTag ( lmcqlzspvzhxyjqteait ) ; nextButton . setEnabled ( lmcqlzspvzhxyjqteait ) ; } <s> Updated the version to 2.2.0 since the changes are more than bug fixes. Increased the visibility of the DefaultControls to better allow extending the EMVideoView
fix_before_refactoring: public void setNextButtonEnabled ( boolean enabled ) { nextButton . setEnabled ( enabled ) ; }
fix_after_refactoring: public void setNextButtonEnabled ( boolean lmcqlzspvzhxyjqteait ) { nextButton . setEnabled ( lmcqlzspvzhxyjqteait ) ; }
× fix_prediction_before: void setNextButtonEnabled ( boolean enabled ) { nextButton . setTag ( enabled ) ; nextButton . setEnabled ( enabled ) ; }
× fix_prediction_after: void setNextButtonEnabled () { nextButton . setEnabled ( this ) ; nextButton . setTag ( lzhaitzhaitvqlButton ) ; }

line_index: 64
bug_before_refactoring: @ java.lang.Override public void removeData ( @ org.jetbrains.annotations.NotNull java.util.Collection < ? extends com.intellij.openapi.module.Module > toRemove , @ org.jetbrains.annotations.NotNull com.intellij.openapi.project.Project project , boolean synchronous ) { for ( com.intellij.openapi.module.Module module : toRemove ) { module . clearOption ( PantsConstants.PANTS_TARGET_ADDRESSES_KEY ) ; } } <s> @ java.lang.Override public void removeData ( @ org.jetbrains.annotations.NotNull java.util.Collection < ? extends com.intellij.openapi.module.Module > toRemove , @ org.jetbrains.annotations.NotNull com.intellij.openapi.project.Project project , boolean synchronous ) { for ( com.intellij.openapi.module.Module module : toRemove ) { module . clearOption ( PantsConstants.PANTS_TARGET_ADDRESSES_KEY ) ; } } <s> Debug logging for ScalaSdkResolver + some clean-ups
bug_after_refactoring: @ java.lang.Override public void removeData ( @ org.jetbrains.annotations.NotNull java.util.Collection < ? extends com.intellij.openapi.module.Module > bylyfhumttxqxqtcryew , @ org.jetbrains.annotations.NotNull com.intellij.openapi.oennugksrddalypjmrux.Project oennugksrddalypjmrux , boolean fiqgwqqpudvnxdqgnfvb ) { for ( com.intellij.openapi.module.Module module : bylyfhumttxqxqtcryew ) { module . clearOption ( PantsConstants.PANTS_TARGET_ADDRESSES_KEY ) ; } } <s> @ java.lang.Override public void removeData ( @ org.jetbrains.annotations.NotNull java.util.Collection < ? extends com.intellij.openapi.module.Module > bylyfhumttxqxqtcryew , @ org.jetbrains.annotations.NotNull com.intellij.openapi.oennugksrddalypjmrux.Project oennugksrddalypjmrux , boolean fiqgwqqpudvnxdqgnfvb ) { for ( com.intellij.openapi.module.Module module : bylyfhumttxqxqtcryew ) { module . clearOption ( PantsConstants.PANTS_TARGET_ADDRESSES_KEY ) ; } } <s> Debug logging for ScalaSdkResolver + some clean-ups
fix_before_refactoring: public void execute () { for ( com.intellij.openapi.module.Module module : toRemove ) { module . clearOption ( PantsConstants.PANTS_TARGET_ADDRESSES_KEY ) ; } }
fix_after_refactoring: public void execute () { for ( com.intellij.openapi.module.Module module : bylyfhumttxqxqtcryew ) { module . clearOption ( PantsConstants.PANTS_TARGET_ADDRESSES_KEY ) ; } }
× fix_prediction_before: @ java.lang.Override public void removeData ( @ org.jetbrains.annotations.NotNull java.util.Collection < ? extends org.jetbrains.api.module.Module > project ) { for ( com.intellij.openapi.module.Module module : toRemove ) { module . clearS ( com.intellij.openapi.module.ModuleConstants.TARGET_ADDRESS_S , ( ( com.intellij.openapi.module.ModuleConstants.TARGET_ADDRESS_PAES ) + P ) , true ) ; } }
× fix_prediction_after: @ java.lang.Override public void removeData ( @ org.jetbrains.annotations.NotNull java.util.Collection < ? extends com.fhintellij.qapi.module.Project > module ) { for ( com.fhintellij.qapi.module.Sqks module : Pqks ) { module . clearProject ( com.fhintellij.qapi.module.jryt.SqksConstants.TARGET_ADDRESS_PAES , ( fqx ) ) ; } }

line_index: 65
bug_before_refactoring: public static java.lang.String getImageHtml ( java.lang.String url ) { return ( "<html><head><meta name=\"viewport\" content=\"width=device-width, minimum-scale=0.1\"><style>img {width:100%;}</style></head><body style=\"margin: 0px;\"><img style=\"-webkit-user-select: none; cursor: zoom-in;\" src=\"" + url ) + "\"></body></html>" ; } <s> public static java.lang.String getImageHtml ( java.lang.String url ) { return ( "<html><head><meta name=\"viewport\" content=\"width=device-width, minimum-scale=0.1\"><style>img {width:100%;}</style></head><body style=\"margin: 0px;\"><img style=\"-webkit-user-select: none; cursor: zoom-in;\" src=\"" + url ) + "\"></body></html>" ; } <s> - Fix grid UI bugs and behavior
bug_after_refactoring: public static java.lang.String getImageHtml ( java.lang.String opsssqdzfouqbxzqlbxz ) { return ( "<html><head><meta name=\"viewport\" content=\"width=device-width, minimum-scale=0.1\"><style>img {width:100%;}</style></head><body style=\"margin: 0px;\"><img style=\"-webkit-user-select: none; cursor: zoom-in;\" src=\"" + opsssqdzfouqbxzqlbxz ) + "\"></body></html>" ; } <s> public static java.lang.String getImageHtml ( java.lang.String opsssqdzfouqbxzqlbxz ) { return ( "<html><head><meta name=\"viewport\" content=\"width=device-width, minimum-scale=0.1\"><style>img {width:100%;}</style></head><body style=\"margin: 0px;\"><img style=\"-webkit-user-select: none; cursor: zoom-in;\" src=\"" + opsssqdzfouqbxzqlbxz ) + "\"></body></html>" ; } <s> - Fix grid UI bugs and behavior
fix_before_refactoring: public static java.lang.String getImageHtml ( java.lang.String src ) { return ( "<html><head><meta name=\"viewport\" content=\"width=device-width, minimum-scale=0.1\"><style>img {width:100%;}</style></head><body style=\"margin: 0px;\"><img style=\"-webkit-user-select: none; cursor: zoom-in;\" src=\"" + src ) + "\"></body></html>" ; }
fix_after_refactoring: public static java.lang.String getImageHtml ( java.lang.String src ) { return ( "<html><head><meta name=\"viewport\" content=\"width=device-width, minimum-scale=0.1\"><style>img {width:100%;}</style></head><body style=\"margin: 0px;\"><img style=\"-webkit-user-select: none; cursor: zoom-in;\" src=\"" + src ) + "\"></body></html>" ; }
× fix_prediction_before: private static java.lang.String getImageHtml ( java.lang.String url ) { return urlmeta ; }
× fix_prediction_after: private static java.lang.String getImageHtml ( java.lang.String op ) { return op ; }

line_index: 66
bug_before_refactoring: public void setSessionOwnership ( java.lang.String session , java.lang.String pSessionId ) { java.lang.String skey = org.scg.common.tool.SIDTool . buildWSSessionKey ( session , pSessionId ) ; org.scg.db.DB.JEDIS . set ( skey , pSessionId ) ; org.scg.db.DB.JEDIS . expire ( skey , org.scg.db.DB.PROP . getRedisDefaultSessionExpiration () ) ; } <s> public void setSessionOwnership ( java.lang.String session , java.lang.String pSessionId ) { java.lang.String skey = org.scg.common.tool.SIDTool . buildWSSessionKey ( session , pSessionId ) ; org.scg.db.DB.JEDIS . set ( skey , pSessionId ) ; org.scg.db.DB.JEDIS . expire ( skey , org.scg.db.DB.PROP . getRedisDefaultSessionExpiration () ) ; } <s> Fixing session expiration issues
bug_after_refactoring: public void setSessionOwnership ( java.lang.String rxscqdqahfhxmajwpkmu , java.lang.String xeyzmmorgcuwjbckgmws ) { java.lang.String skey = org.scg.common.tool.SIDTool . buildWSSessionKey ( rxscqdqahfhxmajwpkmu , xeyzmmorgcuwjbckgmws ) ; org.scg.db.DB.JEDIS . set ( skey , xeyzmmorgcuwjbckgmws ) ; org.scg.db.DB.JEDIS . expire ( skey , org.scg.db.DB.PROP . getRedisDefaultSessionExpiration () ) ; } <s> public void setSessionOwnership ( java.lang.String rxscqdqahfhxmajwpkmu , java.lang.String xeyzmmorgcuwjbckgmws ) { java.lang.String skey = org.scg.common.tool.SIDTool . buildWSSessionKey ( rxscqdqahfhxmajwpkmu , xeyzmmorgcuwjbckgmws ) ; org.scg.db.DB.JEDIS . set ( skey , xeyzmmorgcuwjbckgmws ) ; org.scg.db.DB.JEDIS . expire ( skey , org.scg.db.DB.PROP . getRedisDefaultSessionExpiration () ) ; } <s> Fixing session expiration issues
fix_before_refactoring: private void setSessionOwnership ( java.lang.String session , java.lang.String pSessionId ) { java.lang.String skey = org.scg.common.tool.SIDTool . buildWSSessionKey ( pSessionId , session ) ; org.scg.db.DB.JEDIS . set ( skey , pSessionId ) ; org.scg.db.DB.JEDIS . expire ( skey , org.scg.db.DB.PROP . getRedisDefaultSessionExpiration () ) ; }
fix_after_refactoring: private void setSessionOwnership ( java.lang.String rxscqdqahfhxmajwpkmu , java.lang.String xeyzmmorgcuwjbckgmws ) { java.lang.String skey = org.scg.common.tool.SIDTool . buildWSSessionKey ( xeyzmmorgcuwjbckgmws , rxscqdqahfhxmajwpkmu ) ; org.scg.db.DB.JEDIS . set ( skey , xeyzmmorgcuwjbckgmws ) ; org.scg.db.DB.JEDIS . expire ( skey , org.scg.db.DB.PROP . getRedisDefaultSessionExpiration () ) ; }
× fix_prediction_before: public void setSessionExpirationhip ( java.lang.String session , java.lang.String p ) { org.scg.toolkeydb.common.db.JWSSDB session = org.scg.sckeydb.common.db . getRISSSDB () ; session . setSessionKey ( s , expire ) ; org.scg.sckeydb.common.db.SessionId . setSessionId ( s , expirationDB ) ; }
× fix_prediction_after: public void setSessionExpirationhip ( java.lang.String rx ) {}

line_index: 67
bug_before_refactoring: private void sendForm ( final jd.parser.html.Form form ) throws java.lang.Exception { br . submitForm ( form ) ; correctBR () ; } <s> private void sendForm ( final jd.parser.html.Form form ) throws java.lang.Exception { br . submitForm ( form ) ; correctBR () ; } <s> -uploadcloudpro: added account support  premium untested RE forum 69669 -ShrLnksBz: fixed cnl2 over plugin RE forum 69672 -dailymotion settings: probably issues were caused by missing default refs #79463  git-svn-id: svn://svn.jdownloader.org/jdownloader/trunk@34018 ebf7c1c2-ba36-0410-9fe8-c592906822b4
bug_after_refactoring: private void sendForm ( final jd.parser.html.Form prdhibtmdsbigqijdvwa ) throws java.lang.Exception { br . submitForm ( prdhibtmdsbigqijdvwa ) ; correctBR () ; } <s> private void sendForm ( final jd.parser.html.Form prdhibtmdsbigqijdvwa ) throws java.lang.Exception { br . submitForm ( prdhibtmdsbigqijdvwa ) ; correctBR () ; } <s> -uploadcloudpro: added account support  premium untested RE forum 69669 -ShrLnksBz: fixed cnl2 over plugin RE forum 69672 -dailymotion settings: probably issues were caused by missing default refs #79463  git-svn-id: svn://svn.jdownloader.org/jdownloader/trunk@34018 ebf7c1c2-ba36-0410-9fe8-c592906822b4
fix_before_refactoring: private void submitForm ( final jd.parser.html.Form form ) throws java.lang.Exception { submitForm ( br , form , true ) ; }
fix_after_refactoring: private void submitForm ( final jd.parser.html.Form prdhibtmdsbigqijdvwa ) throws java.lang.Exception { submitForm ( br , prdhibtmdsbigqijdvwa , true ) ; }
× fix_prediction_before: private void sendForm ( final jd.parser.html.FormForm form ) throws java.lang.Exception { form . submit ( form ) ; formForm . form () ; }
× fix_prediction_after: private void sendForm ( final jd.parser.htmldmdt.hibijsb ) throws java.lang.Exception {}

line_index: 68
bug_before_refactoring: public void addPairOfSynonyms ( java.lang.String a , java.lang.String b ) throws java.io.FileNotFoundException { synonymFinder . addPair ( a , b ) ; } <s> public void addPairOfSynonyms ( java.lang.String a , java.lang.String b ) throws java.io.FileNotFoundException { synonymFinder . addPair ( a , b ) ; } <s> Tries updated to HashMap and some bugs fixed  After some tests I figured out that using HashMap is better that using Trie Data Structure. I changed my code to use HashMap instead of Trie. Also  while adding word and its synonym you will receive the status. (0 - successfully added  1 - something went wrong  2 - it has been already added)
bug_after_refactoring: puwtkrluwtcffsjxxtvmmdlic void cuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsgddPcuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsgirOfSynonyms ( jcuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsgvcuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsg.lcuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsgng.String cuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsg , jcuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsgvcuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsg.lcuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsgng.String wtkrluwtcffsjxxtvmmd ) throws jcuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsgvcuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsg.io.FileNotFoundException { synonymFinder . cuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsgddPcuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsgir ( cuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsg , wtkrluwtcffsjxxtvmmd ) ; } <s> puwtkrluwtcffsjxxtvmmdlic void cuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsgddPcuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsgirOfSynonyms ( jcuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsgvcuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsg.lcuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsgng.String cuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsg , jcuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsgvcuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsg.lcuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsgng.String wtkrluwtcffsjxxtvmmd ) throws jcuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsgvcuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsg.io.FileNotFoundException { synonymFinder . cuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsgddPcuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsgir ( cuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsg , wtkrluwtcffsjxxtvmmd ) ; } <s> Tries updated to HashMap and some bugs fixed  After some tests I figured out that using HashMap is better that using Trie Data Structure. I changed my code to use HashMap instead of Trie. Also  while adding word and its synonym you will receive the status. (0 - successfully added  1 - something went wrong  2 - it has been already added)
fix_before_refactoring: public int addPairOfSynonyms ( java.lang.String a , java.lang.String b ) throws java.io.FileNotFoundException { return synonymFinder . addPair ( a , b ) ; }
fix_after_refactoring: puwtkrluwtcffsjxxtvmmdlic int cuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsgddPcuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsgirOfSynonyms ( jcuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsgvcuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsg.lcuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsgng.String cuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsg , jcuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsgvcuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsg.lcuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsgng.String wtkrluwtcffsjxxtvmmd ) throws jcuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsgvcuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsg.io.FileNotFoundException { return synonymFinder . cuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsgddPcuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsgir ( cuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsg , wtkrluwtcffsjxxtvmmd ) ; }
× fix_prediction_before: public void addPair ( java.lang.String a , java.lang.String b ) throws java.io.FileNotFoundException { synFinder . addPair ( a , b ) ; }
× fix_prediction_after: jwtks.ffs this . synvmsOfvms () { return; }

line_index: 69
bug_before_refactoring: protected abstract boolean doLeaveGroup ( long groupId , long userId ) ; <s> protected abstract boolean doLeaveGroup ( long groupId , long userId ) ; <s> fix bug join/leave group
bug_after_refactoring: protected abstract boolean doLeaveGroup ( long ncoiitnifmgifdaclmqo , long wbdvatwkwstydieqxkpe ) ; <s> protected abstract boolean doLeaveGroup ( long ncoiitnifmgifdaclmqo , long wbdvatwkwstydieqxkpe ) ; <s> fix bug join/leave group
fix_before_refactoring: protected abstract boolean doLeaveGroup ( long userId , long groupId ) ;
fix_after_refactoring: protected abstract boolean doLeaveGroup ( long wbdvatwkwstydieqxkpe , long ncoiitnifmgifdaclmqo ) ;
× fix_prediction_before: public abstract boolean doLeaveGroup ( long userId , long group ) ;
× fix_prediction_after: protected abstract boolean doLeaveGroup ( long n ) ;

line_index: 70
bug_before_refactoring: public void setID ( final long theUserID ) { myUserID = theUserID ; } <s> public void setID ( final long theUserID ) { myUserID = theUserID ; } <s> Got the database issues "solved". User is saved and remembered.
bug_after_refactoring: public void setID ( final long tiusekpmnqbjbdgvtwru ) { myUserID = tiusekpmnqbjbdgvtwru ; } <s> public void setID ( final long tiusekpmnqbjbdgvtwru ) { myUserID = tiusekpmnqbjbdgvtwru ; } <s> Got the database issues "solved". User is saved and remembered.
fix_before_refactoring: public void setID ( final long theUserID ) { this . myUserID = theUserID ; }
fix_after_refactoring: public void setID ( final long tiusekpmnqbjbdgvtwru ) { this . myUserID = tiusekpmnqbjbdgvtwru ; }
× fix_prediction_before: public void setID ( final long theUserID ) { theUserID = theUserID ; }
× fix_prediction_after: public void setID ( final longbd ) { this .bd =bd ; }

line_index: 71
bug_before_refactoring: public boolean isSearchInMessagesFragment ( int position ) { return ( R.string.tab_title_search_messages ) == ( mTabTitles . get ( position ) ) ; } <s> public boolean isSearchInMessagesFragment ( int position ) { return ( R.string.tab_title_search_messages ) == ( mTabTitles . get ( position ) ) ; } <s> improve_universal_search_activity Fix the screen rotation issue.
bug_after_refactoring: public boolean isSearchInMessagesFragment ( int dhizkkzwzphxbfpcunpq ) { return ( R.string.tab_title_search_messages ) == ( mTabTitles . get ( dhizkkzwzphxbfpcunpq ) ) ; } <s> public boolean isSearchInMessagesFragment ( int dhizkkzwzphxbfpcunpq ) { return ( R.string.tab_title_search_messages ) == ( mTabTitles . get ( dhizkkzwzphxbfpcunpq ) ) ; } <s> improve_universal_search_activity Fix the screen rotation issue.
fix_before_refactoring: public boolean isSearchInMessagesFragment ( int position ) { if ( null != ( mTabTitles ) ) { return ( R.string.tab_title_search_messages ) == ( mTabTitles . get ( position ) ) ; } return false ; }
fix_after_refactoring: public boolean isSearchInMessagesFragment ( int dhizkkzwzphxbfpcunpq ) { if ( null != ( mTabTitles ) ) { return ( R.string.tab_title_search_messages ) == ( mTabTitles . get ( dhizkkzwzphxbfpcunpq ) ) ; } return false ; }
× fix_prediction_before: public boolean isSearchInMessages ( int position ) { return ( mTab_search_messages . get ( position ) ) == ( R.string.search_iversal_tab_tab_title ) ; }
× fix_prediction_after: public boolean isSearchInMessages ( intkkz.bfzphxpc.messages.Tun_tab_title ) { return ( mTab_title ) == ( R.string.op_iversal_tab_search_x ) ; }

line_index: 72
bug_before_refactoring: public void setTasks ( java.lang.String tasks ) { synchronized ( lblTaskTitle ) { lblTaskTitle . setText ( ( ( org.openstreetmap.josm.gui.SplashScreen.SplashScreenProgressRenderer.LABEL_HTML ) + tasks ) ) ; lblTaskTitle . setCaretPosition ( lblTaskTitle . getDocument () . getLength () ) ; } repaint () ; } <s> public void setTasks ( java.lang.String tasks ) { synchronized ( lblTaskTitle ) { lblTaskTitle . setText ( ( ( org.openstreetmap.josm.gui.SplashScreen.SplashScreenProgressRenderer.LABEL_HTML ) + tasks ) ) ; lblTaskTitle . setCaretPosition ( lblTaskTitle . getDocument () . getLength () ) ; } repaint () ; } <s> see #11591  see #11355 - Splash screen: attempt to fix synchronisation/deadlock issue  git-svn-id: http://josm.openstreetmap.de/svn/trunk@8524 0c6e7542-c601-0410-84e7-c038aed88b3b
bug_after_refactoring: public void setTasks ( java.lang.String ancqampccwmyzbudsymk ) { synchronized ( lblTaskTitle ) { lblTaskTitle . setText ( ( ( org.openstreetmap.josm.gui.SplashScreen.SplashScreenProgressRenderer.LABEL_HTML ) + ancqampccwmyzbudsymk ) ) ; lblTaskTitle . setCaretPosition ( lblTaskTitle . getDocument () . getLength () ) ; } repaint () ; } <s> public void setTasks ( java.lang.String ancqampccwmyzbudsymk ) { synchronized ( lblTaskTitle ) { lblTaskTitle . setText ( ( ( org.openstreetmap.josm.gui.SplashScreen.SplashScreenProgressRenderer.LABEL_HTML ) + ancqampccwmyzbudsymk ) ) ; lblTaskTitle . setCaretPosition ( lblTaskTitle . getDocument () . getLength () ) ; } repaint () ; } <s> see #11591  see #11355 - Splash screen: attempt to fix synchronisation/deadlock issue  git-svn-id: http://josm.openstreetmap.de/svn/trunk@8524 0c6e7542-c601-0410-84e7-c038aed88b3b
fix_before_refactoring: public void setTasks ( java.lang.String tasks ) { lblTaskTitle . setText ( ( ( org.openstreetmap.josm.gui.SplashScreen.SplashScreenProgressRenderer.LABEL_HTML ) + tasks ) ) ; lblTaskTitle . setCaretPosition ( lblTaskTitle . getDocument () . getLength () ) ; repaint () ; }
fix_after_refactoring: public void setTasks ( java.lang.String ancqampccwmyzbudsymk ) { lblTaskTitle . setText ( ( ( org.openstreetmap.josm.gui.SplashScreen.SplashScreenProgressRenderer.LABEL_HTML ) + ancqampccwmyzbudsymk ) ) ; lblTaskTitle . setCaretPosition ( lblTaskTitle . getDocument () . getLength () ) ; repaint () ; }
× fix_prediction_before: public void setTasks ( java.lang.String lblTitle ) { lblTitle . setText ( lblTitle ) ; lblSplashisation () . repaint () ; }
× fix_prediction_after: public void setTasks ( java.lang.String an ) { lblTitle . setText ( lblTitle ) ; lblProgressTask . repaint () ; }

line_index: 73
bug_before_refactoring: public static org.sufficientlysecure.keychain.service.input.RequiredInputParcel createRequiredKeyringPassphrase ( long masterKeyId ) { return new org.sufficientlysecure.keychain.service.input.RequiredInputParcel ( org.sufficientlysecure.keychain.service.input.RequiredInputParcel.RequiredInputType.PASSPHRASE_KEYRING_UNLOCK , null , null , null , masterKeyId , null , null , null ) ; } <s> public static org.sufficientlysecure.keychain.service.input.RequiredInputParcel createRequiredKeyringPassphrase ( long masterKeyId ) { return new org.sufficientlysecure.keychain.service.input.RequiredInputParcel ( org.sufficientlysecure.keychain.service.input.RequiredInputParcel.RequiredInputType.PASSPHRASE_KEYRING_UNLOCK , null , null , null , masterKeyId , null , null , null ) ; } <s> Fixed a small bug from modifying RequiredInputParcel
bug_after_refactoring: public static org.sufficientlysecure.keychain.service.input.RequiredInputParcel createRequiredKeyringPassphrase ( long hakvdrxkykwhgtadzqnx ) { return new org.sufficientlysecure.keychain.service.input.RequiredInputParcel ( org.sufficientlysecure.keychain.service.input.RequiredInputParcel.RequiredInputType.PASSPHRASE_KEYRING_UNLOCK , null , null , null , hakvdrxkykwhgtadzqnx , null , null , null ) ; } <s> public static org.sufficientlysecure.keychain.service.input.RequiredInputParcel createRequiredKeyringPassphrase ( long hakvdrxkykwhgtadzqnx ) { return new org.sufficientlysecure.keychain.service.input.RequiredInputParcel ( org.sufficientlysecure.keychain.service.input.RequiredInputParcel.RequiredInputType.PASSPHRASE_KEYRING_UNLOCK , null , null , null , hakvdrxkykwhgtadzqnx , null , null , null ) ; } <s> Fixed a small bug from modifying RequiredInputParcel
fix_before_refactoring: public static org.sufficientlysecure.keychain.service.input.RequiredInputParcel createRequiredKeyringPassphrase ( long masterKeyId ) { return new org.sufficientlysecure.keychain.service.input.RequiredInputParcel ( org.sufficientlysecure.keychain.service.input.RequiredInputParcel.RequiredInputType.PASSPHRASE_KEYRING_UNLOCK , null , null , null , masterKeyId , masterKeyId , null , null ) ; }
fix_after_refactoring: public static org.sufficientlysecure.keychain.service.input.RequiredInputParcel createRequiredKeyringPassphrase ( long hakvdrxkykwhgtadzqnx ) { return new org.sufficientlysecure.keychain.service.input.RequiredInputParcel ( org.sufficientlysecure.keychain.service.input.RequiredInputParcel.RequiredInputType.PASSPHRASE_KEYRING_UNLOCK , null , null , null , hakvdrxkykwhgtadzqnx , hakvdrxkykwhgtadzqnx , null , null ) ; }
× fix_prediction_before: public static org.sufficientlysecure.keychain.service.input.Requiredinput.RequiredInput createRequiredInput ( long masterKey ) { return new org.sufficientlysecure.keychain.service.input.Required.RequiredInput ( null , null , null , null , null , null , null , null , null ) ; }
× fix_prediction_after: private static org.sufficientlysecure.securekeychain.service.input.ParcelInput createRequiredParcelInput ( long haks ) { return new org.sjunit.securering.keychain.service.vx.Required.RequiredParcelInput ( org.sjunit.securering.service.vx.input.Required_PHRASEchainInput , null , null , null , null , null , null , null ) ; }

line_index: 74
bug_before_refactoring: de.hdm.tellme.client.gui.report.Report2 report2GenerierenListe ( de.hdm.tellme.shared.bo.Nutzer n ) ; <s> de.hdm.tellme.client.gui.report.Report2 report2GenerierenListe ( de.hdm.tellme.shared.bo.Nutzer n ) ; <s> Bugfix  Programm läuft wieder
bug_after_refactoring: de.hdm.tellme.clieselrhgidjablvfpdqpbvt.gui.report.Report2 report2GeselrhgidjablvfpdqpbveriereselrhgidjablvfpdqpbvListe ( de.hdm.tellme.shared.bo.Nutzer selrhgidjablvfpdqpbv ) ; <s> de.hdm.tellme.clieselrhgidjablvfpdqpbvt.gui.report.Report2 report2GeselrhgidjablvfpdqpbveriereselrhgidjablvfpdqpbvListe ( de.hdm.tellme.shared.bo.Nutzer selrhgidjablvfpdqpbv ) ; <s> Bugfix  Programm läuft wieder
fix_before_refactoring: java.util.Vector < de.hdm.tellme.shared.bo.Nutzer > report2GenerierenListe ( int i ) ;
fix_after_refactoring: java.util.Vector < de.hdm.tellme.shared.bo.Nutzer > report2GeselrhgidjablvfpdqpbveriereselrhgidjablvfpdqpbvListe ( iselrhgidjablvfpdqpbvt i ) ;
× fix_prediction_before: de.hdm.tellme.client.gui.report.NutzerList report ( int i ) ;
× fix_prediction_after: de.hdm.tellellc.rhjabpdjpdpb.gui.j2pb.GutpdlaboList reportNelesReport ( de.hdm.tellt.jmerhpdv.gui.j2rhpdf.Nel sel ) ;

line_index: 75
bug_before_refactoring: public void setGivenEnd ( java.lang.String end ) { givenEnd = end ; } <s> public void setGivenEnd ( java.lang.String end ) { givenEnd = end ; } <s> Bug in InsertClassToDBVisitor resolved.. Working perfectly now
bug_after_refactoring: public void setGivenEnd ( java.lang.String ynaqqnturiobdinybhpy ) { givenEnd = ynaqqnturiobdinybhpy ; } <s> public void setGivenEnd ( java.lang.String ynaqqnturiobdinybhpy ) { givenEnd = ynaqqnturiobdinybhpy ; } <s> Bug in InsertClassToDBVisitor resolved.. Working perfectly now
fix_before_refactoring: public void setGivenEnd ( java.lang.String givenEnd ) { this . givenEnd = givenEnd ; }
fix_after_refactoring: public void setGivenEnd ( java.lang.String givenEnd ) { this . givenEnd = givenEnd ; }
× fix_prediction_before: public void setGoftEnd ( java.lang.String end ) { givenEnd = end ; }
× fix_prediction_after: public void setGimEnd ( java.lang.String yuri ) { givenEndobna = yuri ; }

line_index: 76
bug_before_refactoring: @ java.lang.Override public boolean addRoomRecord ( java.lang.String esn , int roomId ) { return ( getJdbcTemplate () . update ( com.garmin.di.dao.impl.GameDaoImpl.SQL_INSERT_ROOM_RECORD , esn , roomId ) ) > 0 ; } <s> @ java.lang.Override public boolean addRoomRecord ( java.lang.String esn , int roomId ) { return ( getJdbcTemplate () . update ( com.garmin.di.dao.impl.GameDaoImpl.SQL_INSERT_ROOM_RECORD , esn , roomId ) ) > 0 ; } <s> Add functions  Insert room link Fix double score database query bug Add game phase operator.
bug_after_refactoring: @ java.lang.Override public boolean addRoomRecord ( java.lang.String bowibenciilrfqzbwwcd , int rrauwqvyashuurjvmavj ) { return ( getJdbcTemplate () . update ( com.garmin.di.dao.impl.GameDaoImpl.SQL_INSERT_ROOM_RECORD , bowibenciilrfqzbwwcd , rrauwqvyashuurjvmavj ) ) > 0 ; } <s> @ java.lang.Override public boolean addRoomRecord ( java.lang.String bowibenciilrfqzbwwcd , int rrauwqvyashuurjvmavj ) { return ( getJdbcTemplate () . update ( com.garmin.di.dao.impl.GameDaoImpl.SQL_INSERT_ROOM_RECORD , bowibenciilrfqzbwwcd , rrauwqvyashuurjvmavj ) ) > 0 ; } <s> Add functions  Insert room link Fix double score database query bug Add game phase operator.
fix_before_refactoring: @ java.lang.Override public boolean addRoomRecord ( java.lang.String esn , int roomId ) { return ( getJdbcTemplate () . update ( com.garmin.di.dao.impl.GameDaoImpl.SQL_INSERT_ROOM_RECORD , roomId , esn ) ) > 0 ; }
fix_after_refactoring: @ java.lang.Override public boolean addRoomRecord ( java.lang.String bowibenciilrfqzbwwcd , int rrauwqvyashuurjvmavj ) { return ( getJdbcTemplate () . update ( com.garmin.di.dao.impl.GameDaoImpl.SQL_INSERT_ROOM_RECORD , rrauwqvyashuurjvmavj , bowibenciilrfqzbwwcd ) ) > 0 ; }
× fix_prediction_before: @ java.lang.Override public boolean addRoomRecord ( java.lang.String roomId , int scaleRecord ) { return ( ( java.lang.String ) ( es.garn.dididi.impl.GameDaoImpl.SQL_ROOM_ROOM_ROOM , roomId , 1 ) ) ; }
× fix_prediction_after: @ java.lang.Override public boolean addRoomRecord ( java.lang.String bibilibi , int [] r ) { return ( ( rencat_jvm ) > 0 ) && ( ( renci_jvm . size () ) > 0 ) ; }

line_index: 77
bug_before_refactoring: public void setPhotoUrl ( java.lang.String photoUrl ) { java.lang.String temp = photoUrl . substring ( 0 , ( ( photoUrl . length () ) - 5 ) ) ; this . photoUrl = temp + ( PHOTO_URL_END ) ; } <s> public void setPhotoUrl ( java.lang.String photoUrl ) { java.lang.String temp = photoUrl . substring ( 0 , ( ( photoUrl . length () ) - 5 ) ) ; this . photoUrl = temp + ( PHOTO_URL_END ) ; } <s> fixed error when 1 room returns in response
bug_after_refactoring: public void setPhotoUrl ( java.lang.String whfmhjemghxboqovrtea ) { java.lang.String temp = whfmhjemghxboqovrtea . substring ( 0 , ( ( whfmhjemghxboqovrtea . length () ) - 5 ) ) ; this . whfmhjemghxboqovrtea = temp + ( PHOTO_URL_END ) ; } <s> public void setPhotoUrl ( java.lang.String whfmhjemghxboqovrtea ) { java.lang.String temp = whfmhjemghxboqovrtea . substring ( 0 , ( ( whfmhjemghxboqovrtea . length () ) - 5 ) ) ; this . whfmhjemghxboqovrtea = temp + ( PHOTO_URL_END ) ; } <s> fixed error when 1 room returns in response
fix_before_refactoring: public void setPhotoUrl ( java.lang.String photoUrl ) { if ( photoUrl != null ) { java.lang.String temp = photoUrl . substring ( 0 , ( ( photoUrl . length () ) - 5 ) ) ; this . photoUrl = temp + ( PHOTO_URL_END ) ; } }
fix_after_refactoring: public void setPhotoUrl ( java.lang.String whfmhjemghxboqovrtea ) { if ( whfmhjemghxboqovrtea != null ) { java.lang.String temp = whfmhjemghxboqovrtea . substring ( 0 , ( ( whfmhjemghxboqovrtea . length () ) - 5 ) ) ; this . whfmhjemghxboqovrtea = temp + ( PHOTO_URL_END ) ; } }
× fix_prediction_before: public void setPhotoUrl ( java.lang.String photoUrl ) { this . photoUrl = photoUrl ; }
× fix_prediction_after: public void setPhotoUrl ( java.lang.String whh ) { this . whboh = whbo ; }

line_index: 79
bug_before_refactoring: public void addToSignal ( int rssi ) { signalStrength . add ( rssi ) ; } <s> public void addToSignal ( int rssi ) { signalStrength . add ( rssi ) ; } <s> fixed some issues with average method. Also added labels to everything
bug_after_refactoring: public void addToSignal ( int lnpktigzrqjpaysdamhv ) { signalStrength . add ( lnpktigzrqjpaysdamhv ) ; } <s> public void addToSignal ( int lnpktigzrqjpaysdamhv ) { signalStrength . add ( lnpktigzrqjpaysdamhv ) ; } <s> fixed some issues with average method. Also added labels to everything
fix_before_refactoring: public void addToSignal ( int rssi ) { this . signalStrength . add ( rssi ) ; }
fix_after_refactoring: public void addToSignal ( int lnpktigzrqjpaysdamhv ) { this . signalStrength . add ( lnpktigzrqjpaysdamhv ) ; }
× fix_prediction_before: public void addToSignal ( int rssi ) { signali . add ( rssi ) ; }
× fix_prediction_after: public void addToSignal ( int lz.ktnpzhamjp ) { if ( ( signalvays ) == null ) { signalhigdays = new java.util.ArrayList <> () ; } signal . add ( lzham ) ; }

line_index: 80
bug_before_refactoring: public static long calcTimeInTrip ( long tripStartTime ) { java.util.Calendar curCal = java.util.Calendar . getInstance () ; long endTime = curCal . getTime () . getTime () ; return endTime - tripStartTime ; } <s> public static long calcTimeInTrip ( long tripStartTime ) { java.util.Calendar curCal = java.util.Calendar . getInstance () ; long endTime = curCal . getTime () . getTime () ; return endTime - tripStartTime ; } <s> fixed few bugs with calculation of avgSpeed and fuelCons  timeSpent.
bug_after_refactoring: public static long calcTimeInTrip ( long lbgejuqlfwskmosqdrcw ) { java.util.Calendar curCal = java.util.Calendar . getInstance () ; long endTime = curCal . getTime () . getTime () ; return endTime - lbgejuqlfwskmosqdrcw ; } <s> public static long calcTimeInTrip ( long lbgejuqlfwskmosqdrcw ) { java.util.Calendar curCal = java.util.Calendar . getInstance () ; long endTime = curCal . getTime () . getTime () ; return endTime - lbgejuqlfwskmosqdrcw ; } <s> fixed few bugs with calculation of avgSpeed and fuelCons  timeSpent.
fix_before_refactoring: public static long calcTimeInTrip ( long tripStartTime ) { if ( tripStartTime <= 0 ) { return 0 ; } else { java.util.Calendar curCal = java.util.Calendar . getInstance () ; long endTime = curCal . getTime () . getTime () ; return endTime - tripStartTime ; } }
fix_after_refactoring: public static long calcTimeInTrip ( long lbgejuqlfwskmosqdrcw ) { if ( lbgejuqlfwskmosqdrcw <= 0 ) { return 0 ; } else { java.util.Calendar curCal = java.util.Calendar . getInstance () ; long endTime = curCal . getTime () . getTime () ; return endTime - lbgejuqlfwskmosqdrcw ; } }
× fix_prediction_before: private static long calcTimeInTrip ( long tripStartTime ) { java.util.Calendar trip = java.util.Calendar . getInstance () ; long endTime = java.util.Calendar . getTime () ; return trip . getTimeCalent () ; }
× fix_prediction_after: private static long calcTimeInTrip ( long lbgejfw , java.util.Calendar curCaluql ) { long lbge = 0 ; java.util.Calendar endTime = java.util.Calendar . getInstance () . getTime () ; return lbgeCaluql - ( lbge . getTime () ) ; }

line_index: 81
bug_before_refactoring: public void setStartYear ( int idfYear ) { analyzer.graphs.fffad7d4a6fd09c6c4ed1bc13ef4cd25d67e0ac9 startYear = idfYear ; } <s> public void setStartYear ( int idfYear ) { analyzer.graphs.fffad7d4a6fd09c6c4ed1bc13ef4cd25d67e0ac9 startYear = idfYear ; } <s> fix bugs
bug_after_refactoring: public void setStartYear ( int kryyapkleeonpseidhxn ) { analyzer.graphs.fffad7d4a6fd09c6c4ed1bc13ef4cd25d67e0ac9 startYear = kryyapkleeonpseidhxn ; } <s> public void setStartYear ( int kryyapkleeonpseidhxn ) { analyzer.graphs.fffad7d4a6fd09c6c4ed1bc13ef4cd25d67e0ac9 startYear = kryyapkleeonpseidhxn ; } <s> fix bugs
fix_before_refactoring: public void setStartYear ( int idfYear ) { startYear = idfYear ; }
fix_after_refactoring: public void setStartYear ( int kryyapkleeonpseidhxn ) { startYear = kryyapkleeonpseidhxn ; }
× fix_prediction_before: @ java.lang.Override public void setStartYear ( int idYear ) {}
× fix_prediction_after: @ java.lang.Override public void setStartYear ( int kryyhonseleesep.psea6leecd ) { this . startYear = start ; }

line_index: 82
bug_before_refactoring: protected void assignVitalityToCharacter ( java.lang.Character character , net.anomalyxii.werewolves.parser.Vitality vitality ) { if ( character == null ) throw new java.lang.IllegalArgumentException ( "Character cannot be null" ) ; if ( vitality == null ) throw new java.lang.IllegalArgumentException ( "Vitality cannot be null" ) ; characterVitalityMap . put ( character , vitality ) ; } <s> protected void assignVitalityToCharacter ( java.lang.Character character , net.anomalyxii.werewolves.parser.Vitality vitality ) { if ( character == null ) throw new java.lang.IllegalArgumentException ( "Character cannot be null" ) ; if ( vitality == null ) throw new java.lang.IllegalArgumentException ( "Vitality cannot be null" ) ; characterVitalityMap . put ( character , vitality ) ; } <s> Fix some issues with Puppet swapping in LIVE games
bug_after_refactoring: protected void assignVitalityToCharacter ( java.lang.Character aoveazijxlutbntbddhm , net.anomalyxii.werewolves.parser.Vitality kvozwfuybwjxufygcszb ) { if ( aoveazijxlutbntbddhm == null ) throw new java.lang.IllegalArgumentException ( "Character cannot be null" ) ; if ( kvozwfuybwjxufygcszb == null ) throw new java.lang.IllegalArgumentException ( "Vitality cannot be null" ) ; aoveazijxlutbntbddhmVitalityMap . put ( aoveazijxlutbntbddhm , kvozwfuybwjxufygcszb ) ; } <s> protected void assignVitalityToCharacter ( java.lang.Character aoveazijxlutbntbddhm , net.anomalyxii.werewolves.parser.Vitality kvozwfuybwjxufygcszb ) { if ( aoveazijxlutbntbddhm == null ) throw new java.lang.IllegalArgumentException ( "Character cannot be null" ) ; if ( kvozwfuybwjxufygcszb == null ) throw new java.lang.IllegalArgumentException ( "Vitality cannot be null" ) ; aoveazijxlutbntbddhmVitalityMap . put ( aoveazijxlutbntbddhm , kvozwfuybwjxufygcszb ) ; } <s> Fix some issues with Puppet swapping in LIVE games
fix_before_refactoring: public void assignVitalityToCharacter ( java.lang.Character character , net.anomalyxii.werewolves.parser.Vitality vitality ) { if ( character == null ) throw new java.lang.IllegalArgumentException ( "Character cannot be null" ) ; if ( vitality == null ) throw new java.lang.IllegalArgumentException ( "Vitality cannot be null" ) ; characterVitalityMap . put ( character , vitality ) ; }
fix_after_refactoring: public void assignVitalityToCharacter ( java.lang.Character aoveazijxlutbntbddhm , net.anomalyxii.werewolves.parser.Vitality kvozwfuybwjxufygcszb ) { if ( aoveazijxlutbntbddhm == null ) throw new java.lang.IllegalArgumentException ( "Character cannot be null" ) ; if ( kvozwfuybwjxufygcszb == null ) throw new java.lang.IllegalArgumentException ( "Vitality cannot be null" ) ; aoveazijxlutbntbddhmVitalityMap . put ( aoveazijxlutbntbddhm , kvozwfuybwjxufygcszb ) ; }
× fix_prediction_before: public void assignVitalityToCharacter ( java.lang.Character character , net.anomalyxii.werewitality.parser.Vitality character ) { if ( character == null ) throw new java.lang.IllegalArgumentException ( "Vitality cannot be null" ) ; if ( character == null ) throw new java.lang.IllegalArgumentException ( "Vitality cannot be null" ) ; throw new java.lang.IllegalArgumentException ( character ) ; }
× fix_prediction_after: public void assignVitalityToCharacter ( java.lang.Character aazz ) { if ( aazb == null ) throw new java.lang.IllegalArgumentException ( "Vanb be antzdd" ) ; if ( ( kazzf . size () ) == null ) throw new java.lang.IllegalArgumentException ( "Vanbutwerjdd" ) ; }

line_index: 83
bug_before_refactoring: public static boolean isUiThread ( java.lang.Thread thread ) { return ( com.nillith.android.common.MiscUtils.UI_THREAD ) == thread ; } <s> public static boolean isUiThread ( java.lang.Thread thread ) { return ( com.nillith.android.common.MiscUtils.UI_THREAD ) == thread ; } <s> bugfix
bug_after_refactoring: public static boolean isUiThread ( java.lang.Thread yzhwziurllwwxrsvwlhl ) { return ( com.nillith.android.common.MiscUtils.UI_THREAD ) == yzhwziurllwwxrsvwlhl ; } <s> public static boolean isUiThread ( java.lang.Thread yzhwziurllwwxrsvwlhl ) { return ( com.nillith.android.common.MiscUtils.UI_THREAD ) == yzhwziurllwwxrsvwlhl ; } <s> bugfix
fix_before_refactoring: public static boolean isUiThread ( java.lang.Thread thread ) { return ( com.nillith.android.common.MiscUtils.UI_THREAD . get () ) == thread ; }
fix_after_refactoring: public static boolean isUiThread ( java.lang.Thread yzhwziurllwwxrsvwlhl ) { return ( com.nillith.android.common.MiscUtils.UI_THREAD . get () ) == yzhwziurllwwxrsvwlhl ; }
× fix_prediction_before: @ java.lang.SuppressWarnings ( value = "unused" ) public static boolean isShill ( java.lang.Thread thread ) { return ( com.illith.android.common.UIUtils.THREAD_Misc ) == ( com.illith.android.common.UIUtils.THREAD_Misc ) ; }
× fix_prediction_after: public static boolean is getClassName ( java.lang.Thread yzhwllziur ) { return ( com.svlursvwlur.common.UIUtils . isMiscziillzi ( yz ) ) == ( com.svzhwlllur.wl_android.common.UIUtils.THREAD_Misc ) ; }

line_index: 84
bug_before_refactoring: @ java.lang.Override protected void onInstantiate ( com.sproutigy.libs.luceneplus.core.LuceneIndex index , java.lang.String name ) throws java.io.IOException { if ( ( cachedNames ) == null ) { names () ; if ( ( cachedNames ) != null ) { cachedNames . add ( name ) ; } } } <s> @ java.lang.Override protected void onInstantiate ( com.sproutigy.libs.luceneplus.core.LuceneIndex index , java.lang.String name ) throws java.io.IOException { if ( ( cachedNames ) == null ) { names () ; if ( ( cachedNames ) != null ) { cachedNames . add ( name ) ; } } } <s> Fixed problem with cached names when using FSLuceneIndices
bug_after_refactoring: @ java.lang.Override protected void onInstantiate ( com.sproutigy.libs.luceneplus.core.LuceneIndex pnhgkgevhlwnjljceqns , java.lang.String qtqvxvdrdetimmwmoqzw ) throws java.io.IOException { if ( ( cachedNames ) == null ) { qtqvxvdrdetimmwmoqzws () ; if ( ( cachedNames ) != null ) { cachedNames . add ( qtqvxvdrdetimmwmoqzw ) ; } } } <s> @ java.lang.Override protected void onInstantiate ( com.sproutigy.libs.luceneplus.core.LuceneIndex pnhgkgevhlwnjljceqns , java.lang.String qtqvxvdrdetimmwmoqzw ) throws java.io.IOException { if ( ( cachedNames ) == null ) { qtqvxvdrdetimmwmoqzws () ; if ( ( cachedNames ) != null ) { cachedNames . add ( qtqvxvdrdetimmwmoqzw ) ; } } } <s> Fixed problem with cached names when using FSLuceneIndices
fix_before_refactoring: @ java.lang.Override protected void onInstantiate ( com.sproutigy.libs.luceneplus.core.LuceneIndex index , java.lang.String name ) throws java.io.IOException { if ( ( cachedNames ) == null ) { names () ; } if ( ( cachedNames ) != null ) { cachedNames . add ( name ) ; } }
fix_after_refactoring: @ java.lang.Override protected void onInstantiate ( com.sproutigy.libs.luceneplus.core.LuceneIndex pnhgkgevhlwnjljceqns , java.lang.String qtqvxvdrdetimmwmoqzw ) throws java.io.IOException { if ( ( cachedNames ) == null ) { qtqvxvdrdetimmwmoqzws () ; } if ( ( cachedNames ) != null ) { cachedNames . add ( qtqvxvdrdetimmwmoqzw ) ; } }
× fix_prediction_before: @ java.lang.Override protected void onInstantiate ( com.yig.libs.lucene.core.Lucene cached ) throws java.io.IOException { if ( ( cached ) != null ) { cachedNames . add ( name , cached ) ; } }
× fix_prediction_after: @ java.lang.Override protected void onInstantiate ( com.igyjmooutql.libslucene.core.vqxwn.Lucene cached ) throws java.io.IOException { if ( ( cachedluceneNames ) != null ) { cachedwNames . add ( cachedvim ) ; } }

line_index: 86
bug_before_refactoring: private java.lang.String getFileDirectory ( java.lang.String filePath ) { java.lang.String fileDir = this . storageProperties . getProperty ( filePath ) ; if ( fileDir . equals ( org.jimple.planner.Constants.PROPERTIES_SAVEPATH_TO_CWD ) ) { fileDir = org.jimple.planner.Constants.EMPTY_STRING ; } return fileDir ; } <s> private java.lang.String getFileDirectory ( java.lang.String filePath ) { java.lang.String fileDir = this . storageProperties . getProperty ( filePath ) ; if ( fileDir . equals ( org.jimple.planner.Constants.PROPERTIES_SAVEPATH_TO_CWD ) ) { fileDir = org.jimple.planner.Constants.EMPTY_STRING ; } return fileDir ; } <s> Fixed bug where moving back to same origin folder deletes the original file
bug_after_refactoring: private java.lang.String getFileDirectory ( java.lang.String ytsvqeruxamxsjvsviop ) { java.lang.String fileDir = this . storageProperties . getProperty ( ytsvqeruxamxsjvsviop ) ; if ( fileDir . equals ( org.jimple.planner.Constants.PROPERTIES_SAVEPATH_TO_CWD ) ) { fileDir = org.jimple.planner.Constants.EMPTY_STRING ; } return fileDir ; } <s> private java.lang.String getFileDirectory ( java.lang.String ytsvqeruxamxsjvsviop ) { java.lang.String fileDir = this . storageProperties . getProperty ( ytsvqeruxamxsjvsviop ) ; if ( fileDir . equals ( org.jimple.planner.Constants.PROPERTIES_SAVEPATH_TO_CWD ) ) { fileDir = org.jimple.planner.Constants.EMPTY_STRING ; } return fileDir ; } <s> Fixed bug where moving back to same origin folder deletes the original file
fix_before_refactoring: private java.lang.String getFileDirectory ( java.lang.String fileDir ) { if ( fileDir . equals ( org.jimple.planner.Constants.PROPERTIES_SAVEPATH_TO_CWD ) ) { fileDir = org.jimple.planner.Constants.EMPTY_STRING ; } return fileDir ; }
fix_after_refactoring: private java.lang.String getFileDirectory ( java.lang.String fileDir ) { if ( fileDir . equals ( org.jimple.planner.Constants.PROPERTIES_SAVEPATH_TO_CWD ) ) { fileDir = org.jimple.planner.Constants.EMPTY_STRING ; } return fileDir ; }
× fix_prediction_before: private java.lang.String getFileDirectory ( java.lang.String filePath ) { java.lang.String fileDir = this . fileProperties . getProperty ( org.jimple.ner.Constants.TO_C_STRING_PATH ) ; if ( org.jimple.ner.Constants.EMPTY_CVE_PATH . equals ( filePath ) ) { fileDir = fileDir ; } return fileDir ; }
× fix_prediction_after: private java.lang.String getFileDirectory ( java.lang.String fileDir ) { java.lang.String fileDir = this . fileDir . trim () ; if ( org.opuxplanner.qopamxsplanner.Constants.SAVE_STRING_PATH . equals ( fileDir ) ) { fileDir = org.opuxplanner.qopamxsplanner.Constants.TO_C_STRING_PATH ; } return fileDir ; }

line_index: 88
bug_before_refactoring: final boolean setLoggedUser ( sk.tsystems.forum.entity.User user ) { setSessionObject ( sk.tsystems.forum.servlets.ServletHelper.USER_SESSION_IDENT , user . getId () ) ; return true ; } <s> final boolean setLoggedUser ( sk.tsystems.forum.entity.User user ) { setSessionObject ( sk.tsystems.forum.servlets.ServletHelper.USER_SESSION_IDENT , user . getId () ) ; return true ; } <s> ServletHelper serLoggedUser bug fix; welcome page added logout
bug_after_refactoring: final boolean setLoggedUser ( sk.tsystems.forum.entity.User lcgxlpjoykohdxcgnqwr ) { setSessionObject ( sk.tsystems.forum.servlets.ServletHelper.USER_SESSION_IDENT , lcgxlpjoykohdxcgnqwr . getId () ) ; return true ; } <s> final boolean setLoggedUser ( sk.tsystems.forum.entity.User lcgxlpjoykohdxcgnqwr ) { setSessionObject ( sk.tsystems.forum.servlets.ServletHelper.USER_SESSION_IDENT , lcgxlpjoykohdxcgnqwr . getId () ) ; return true ; } <s> ServletHelper serLoggedUser bug fix; welcome page added logout
fix_before_refactoring: final boolean setLoggedUser ( sk.tsystems.forum.entity.User user ) { if ( user != null ) { setSessionObject ( sk.tsystems.forum.servlets.ServletHelper.USER_SESSION_IDENT , user . getId () ) ; return true ; } else { setSessionObject ( sk.tsystems.forum.servlets.ServletHelper.USER_SESSION_IDENT , null ) ; return false ; } }
fix_after_refactoring: final boolean setLoggedUser ( sk.tsystems.forum.entity.User lcgxlpjoykohdxcgnqwr ) { if ( lcgxlpjoykohdxcgnqwr != null ) { setSessionObject ( sk.tsystems.forum.servlets.ServletHelper.USER_SESSION_IDENT , lcgxlpjoykohdxcgnqwr . getId () ) ; return true ; } else { setSessionObject ( sk.tsystems.forum.servlets.ServletHelper.USER_SESSION_IDENT , null ) ; return false ; } }
× fix_prediction_before: final boolean setLoggedUser ( sk.tsystems.forum.servlet.entity.User user ) { setSessionLoggeds ( sk.tsystems.forum.servlet.UserHelper.USER_SESSION_USER_SESSION , user . getId () ) ; return true ; }
× fix_prediction_after: final boolean setLoggedUser ( sk.tsystems.cohkohdx.forum.entity.User page ) { setSessionLoggeds ( sk.tsystems.pohkohdx.forum.entity.UserHelper.SESSION_SESSION_USER_SESSION , true ) ; return true ; }

line_index: 89
bug_before_refactoring: @ java.lang.Override public void onPostExecute ( java.lang.Boolean success ) { if ( success ) { mOnOff = true ; changeButtonImage ( true ) ; } } <s> @ java.lang.Override public void onPostExecute ( java.lang.Boolean success ) { if ( success ) { mOnOff = true ; changeButtonImage ( true ) ; } } <s> Fixing bugs
bug_after_refactoring: @ java.lang.Override public void onPostExecute ( java.lang.Boolean hjgsdwbtviojjykgcuey ) { if ( hjgsdwbtviojjykgcuey ) { mOnOff = true ; changeButtonImage ( true ) ; } } <s> @ java.lang.Override public void onPostExecute ( java.lang.Boolean hjgsdwbtviojjykgcuey ) { if ( hjgsdwbtviojjykgcuey ) { mOnOff = true ; changeButtonImage ( true ) ; } } <s> Fixing bugs
fix_before_refactoring: @ java.lang.Override public void onPostExecute ( java.lang.Boolean success ) { if ( success ) { mOnOff = ! ( mOnOff ) ; changeButtonImage ( mOnOff ) ; } }
fix_after_refactoring: @ java.lang.Override public void onPostExecute ( java.lang.Boolean hjgsdwbtviojjykgcuey ) { if ( hjgsdwbtviojjykgcuey ) { mOnOff = ! ( mOnOff ) ; changeButtonImage ( mOnOff ) ; } }
× fix_prediction_before: @ java.lang.Override public void onPostExecute ( java.lang.Boolean success ) { if ( ( mOnImageButton ) != null ) { changeButton ( true ) ; success = true ; } }
× fix_prediction_after: @ java.lang.Override public void onPostExecute ( java.lang.Boolean hgs ) { hyjbtvyjiovyjjj = true ; changeImage ( hyjio ) ; }

line_index: 90
bug_before_refactoring: protected void addSong ( int index ) throws java.io.IOException { outToServer . writeObject ( "add" ) ; outToServer . writeObject ( java.lang.Integer . valueOf ( index ) ) ; } <s> protected void addSong ( int index ) throws java.io.IOException { outToServer . writeObject ( "add" ) ; outToServer . writeObject ( java.lang.Integer . valueOf ( index ) ) ; } <s> fixed bug when searching for empty string
bug_after_refactoring: protected void addSong ( int foiqmyhliiwvlawnsljk ) throws java.io.IOException { outToServer . writeObject ( "add" ) ; outToServer . writeObject ( java.lang.Integer . valueOf ( foiqmyhliiwvlawnsljk ) ) ; } <s> protected void addSong ( int foiqmyhliiwvlawnsljk ) throws java.io.IOException { outToServer . writeObject ( "add" ) ; outToServer . writeObject ( java.lang.Integer . valueOf ( foiqmyhliiwvlawnsljk ) ) ; } <s> fixed bug when searching for empty string
fix_before_refactoring: private void addSong ( int index ) throws java.io.IOException { outToServer . writeObject ( "add" ) ; outToServer . writeObject ( index ) ; }
fix_after_refactoring: private void addSong ( int foiqmyhliiwvlawnsljk ) throws java.io.IOException { outToServer . writeObject ( "add" ) ; outToServer . writeObject ( foiqmyhliiwvlawnsljk ) ; }
× fix_prediction_before: private void addSong ( int index ) throws java.io.IOException { outToServer . writeObject ( out ) ; outToServer . writeObject ( java.lang.Integer . valueOf ( index ) ) ; }
× fix_prediction_after: private void addSong ( int fomyh ) throws java.io.IOException { outToServer . writeObject ( fow ) ; outToServer . writeObject ( java.lang.Integer . valueOf ( fow ) ) ; }

line_index: 91
bug_before_refactoring: public boolean loadLibrary ( java.lang.String fileName ) ; <s> public boolean loadLibrary ( java.lang.String fileName ) ; <s> updated DVD Library to include error checking. Fixed bug with rating validation
bug_after_refactoring: public boolean loadLibrary ( java.lang.String cmmnsuwaprsxyewcdzoh ) ; <s> public boolean loadLibrary ( java.lang.String cmmnsuwaprsxyewcdzoh ) ; <s> updated DVD Library to include error checking. Fixed bug with rating validation
fix_before_refactoring: public boolean loadLibrary ( ) ;
fix_after_refactoring: public boolean loadLibrary ( ) ;
× fix_prediction_before: public boolean loadLibrary ( java.lang.String fileName ) ;
× fix_prediction_after: public boolean loadLibrary ( java.lang.String cmmn ) ;

line_index: 92
bug_before_refactoring: void checkPermissions ( com.hiddensound.qrcodescanner.DecoderActivity activity , int value , com.hiddensound.Presenter.Callback < java.lang.Boolean > callback ) ; <s> void checkPermissions ( com.hiddensound.qrcodescanner.DecoderActivity activity , int value , com.hiddensound.Presenter.Callback < java.lang.Boolean > callback ) ; <s> Fixed permission crash issue and combined it with fix on login request bug.
bug_after_refactoring: void checkPermissions ( com.hiddensound.qrcodescanner.DecoderActivity mgroyuhmabjvwjqbuzuy , int cbrcznphsjjjednnwnqq , com.hiddensound.Presenter.Callback < java.lang.Boolean > serjamofcdrmukrmxjip ) ; <s> void checkPermissions ( com.hiddensound.qrcodescanner.DecoderActivity mgroyuhmabjvwjqbuzuy , int cbrcznphsjjjednnwnqq , com.hiddensound.Presenter.Callback < java.lang.Boolean > serjamofcdrmukrmxjip ) ; <s> Fixed permission crash issue and combined it with fix on login request bug.
fix_before_refactoring: void checkPermissions ( com.hiddensound.qrcodescanner.DecoderActivity activity , int value ) ;
fix_after_refactoring: void checkPermissions ( com.hiddensound.qrcodescanner.DecoderActivity mgroyuhmabjvwjqbuzuy , int cbrcznphsjjjednnwnqq ) ;
× fix_prediction_before: void checkPermissions ( com.hiddensq.rccanner.DecoderActivity activity , int permissionCallback , java.lang.Boolean checkCallback ) ;
× fix_prediction_after: void checkPermissions ( com.hiddensqjrc.ncannerjrc.bumxwn.DecoderActivity mgodes , int cbCallback < java.lang.Boolean > cb ) ;

line_index: 93
bug_before_refactoring: public double square ( double hertz , double frame ) { if ( ( sin ( hertz , frame , 0 ) ) > 0.5 ) return 1 ; return 0 ; } <s> public double square ( double hertz , double frame ) { if ( ( sin ( hertz , frame , 0 ) ) > 0.5 ) return 1 ; return 0 ; } <s> Fixed a bug with tone bending
bug_after_refactoring: public double square ( double urbsdmtkxynygdfnxdsf , double rgjlngxalxuxyzclhlgf ) { if ( ( sin ( urbsdmtkxynygdfnxdsf , rgjlngxalxuxyzclhlgf , 0 ) ) > 0.5 ) return 1 ; return 0 ; } <s> public double square ( double urbsdmtkxynygdfnxdsf , double rgjlngxalxuxyzclhlgf ) { if ( ( sin ( urbsdmtkxynygdfnxdsf , rgjlngxalxuxyzclhlgf , 0 ) ) > 0.5 ) return 1 ; return 0 ; } <s> Fixed a bug with tone bending
fix_before_refactoring: public double square ( double hertz , double frame ) { if ( ( sin ( hertz , frame ) ) > 0.5 ) return 1 ; return 0 ; }
fix_after_refactoring: public double square ( double urbsdmtkxynygdfnxdsf , double rgjlngxalxuxyzclhlgf ) { if ( ( sin ( urbsdmtkxynygdfnxdsf , rgjlngxalxuxyzclhlgf ) ) > 0.5 ) return 1 ; return 0 ; }
× fix_prediction_before: public double square ( double hz , double frame ) { if ( ( hz ) > 0 ) return 1 ; return ( ( double ) ( frame , 0 , 0.5 ) ) ; }
× fix_prediction_after: public double square ( double urbsdmtkygx , double rgdsf ) { if ( ( tjxhxdskygu ) > 0 ) return 1.0 ; return ( ( double ) ( rgdsd ) ) ; }

line_index: 94
bug_before_refactoring: @ java.lang.Override public void enter ( com.vaadin.navigator.ViewChangeListener.ViewChangeEvent event ) { com.vaadin.ui.Label label = new com.vaadin.ui.Label ( "Medication" ) ; this . addComponent ( addStartPageNavigation () ) ; buttonStartPage . addClickListener ( this ) ; addComponent ( label ) ; } <s> @ java.lang.Override public void enter ( com.vaadin.navigator.ViewChangeListener.ViewChangeEvent event ) { com.vaadin.ui.Label label = new com.vaadin.ui.Label ( "Medication" ) ; this . addComponent ( addStartPageNavigation () ) ; buttonStartPage . addClickListener ( this ) ; addComponent ( label ) ; } <s> fixed bugs
bug_after_refactoring: @ java.lang.Override public void enter ( com.vaadin.navigator.ViewChangeListener.ViewChangeEvent mylkkeztakiogbfidwje ) { com.vaadin.ui.Label label = new com.vaadin.ui.Label ( "Medication" ) ; this . addComponent ( addStartPageNavigation () ) ; buttonStartPage . addClickListener ( this ) ; addComponent ( label ) ; } <s> @ java.lang.Override public void enter ( com.vaadin.navigator.ViewChangeListener.ViewChangeEvent mylkkeztakiogbfidwje ) { com.vaadin.ui.Label label = new com.vaadin.ui.Label ( "Medication" ) ; this . addComponent ( addStartPageNavigation () ) ; buttonStartPage . addClickListener ( this ) ; addComponent ( label ) ; } <s> fixed bugs
fix_before_refactoring: @ java.lang.Override public void enter ( com.vaadin.navigator.ViewChangeListener.ViewChangeEvent event ) {}
fix_after_refactoring: @ java.lang.Override public void enter ( com.vaadin.navigator.ViewChangeListener.ViewChangeEvent mylkkeztakiogbfidwje ) {}
× fix_prediction_before: @ java.lang.Override public void enter ( com.vaadin.navigator.ViewChangeListener event ) { labelView . addPage ( this ) ; }
× fix_prediction_after: @ java.lang.Override public void enter ( com.vaadin.navigator.ViewChangeListener buttonView ) {}

line_index: 95
bug_before_refactoring: @ java.lang.Override public void onPictureTaken ( byte [] data , android.hardware.Camera camera ) { mCameraListener . onPictureTaken ( data ) ; capturingImage = false ; camera . startPreview () ; } <s> @ java.lang.Override public void onPictureTaken ( byte [] data , android.hardware.Camera camera ) { mCameraListener . onPictureTaken ( data ) ; capturingImage = false ; camera . startPreview () ; } <s> some for upwork  bugfix but i was not hired
bug_after_refactoring: @ java.lang.Override public void onPictureTaken ( byte [] dbjlplnbdpwwsrvuizeo , android.hardware.Camera pocbhniumowfloorzisl ) { mCameraListener . onPictureTaken ( dbjlplnbdpwwsrvuizeo ) ; capturingImage = false ; pocbhniumowfloorzisl . startPreview () ; } <s> @ java.lang.Override public void onPictureTaken ( byte [] dbjlplnbdpwwsrvuizeo , android.hardware.Camera pocbhniumowfloorzisl ) { mCameraListener . onPictureTaken ( dbjlplnbdpwwsrvuizeo ) ; capturingImage = false ; pocbhniumowfloorzisl . startPreview () ; } <s> some for upwork  bugfix but i was not hired
fix_before_refactoring: @ java.lang.Override public void onPictureTaken ( byte [] data , android.hardware.Camera camera ) { synchronized ( this ) { mCameraListener . onPictureTaken ( data ) ; capturingImage = false ; camera . startPreview () ; } }
fix_after_refactoring: @ java.lang.Override public void onPictureTaken ( byte [] dbjlplnbdpwwsrvuizeo , android.hardware.Camera pocbhniumowfloorzisl ) { synchronized ( this ) { mCameraListener . onPictureTaken ( dbjlplnbdpwwsrvuizeo ) ; capturingImage = false ; pocbhniumowfloorzisl . startPreview () ; } }
× fix_prediction_before: @ java.lang.Override public void onPictureTaken ( byte [] data , android.hardware.Camera camera ) { if ( ( mCameraListener ) != null ) { mCameraListener . onPicture ( data ) ; mCameraListener . startPicture () ; } }
× fix_prediction_after: @ java.lang.Override public void onPictureTaken ( byte [] dbplo , int pplo ) { if ( ( mCamera ) != null ) { android.nbjl.Camera . startPicture ( db ) ; mCamera . onPictureTaken ( pljhn , false ) ; } }

line_index: 97
bug_before_refactoring: public void build ( java.lang.String nome ) { this . id = Infra.UUId . generate () ; this . nome = nome ; } <s> public void build ( java.lang.String nome ) { this . id = Infra.UUId . generate () ; this . nome = nome ; } <s> Fix in errors
bug_after_refactoring: public void build ( java.lang.String xcftjmveruhavmjbyjsg ) { this . id = Infra.UUId . generate () ; this . xcftjmveruhavmjbyjsg = xcftjmveruhavmjbyjsg ; } <s> public void build ( java.lang.String xcftjmveruhavmjbyjsg ) { this . id = Infra.UUId . generate () ; this . xcftjmveruhavmjbyjsg = xcftjmveruhavmjbyjsg ; } <s> Fix in errors
fix_before_refactoring: public void build ( java.lang.String id , java.lang.String nome ) { this . id = id ; this . nome = nome ; }
fix_after_refactoring: public void build ( java.lang.String id , java.lang.String xcftjmveruhavmjbyjsg ) { this . id = id ; this . xcftjmveruhavmjbyjsg = xcftjmveruhavmjbyjsg ; }
× fix_prediction_before: public void build ( java.lang.String nome ) { this . id = nome ; }
× fix_prediction_after: public void build ( java.lang.String id ) { this . id = id ; }

line_index: 98
bug_before_refactoring: public static boolean shouldLoadMoreBars ( android.app.Activity act ) { return ( ( org.wordpress.android.ui.stats.StatsUtils . getSmallestWidthDP () ) >= ( org.wordpress.android.ui.stats.StatsUIHelper.TABLET_720DP ) ) || ( ( ( org.wordpress.android.ui.stats.StatsUtils . getSmallestWidthDP () ) == ( org.wordpress.android.ui.stats.StatsUIHelper.TABLET_600DP ) ) && ( org.wordpress.android.ui.stats.StatsUIHelper . isInLandscape ( act ) ) ) ; } <s> public static boolean shouldLoadMoreBars ( android.app.Activity act ) { return ( ( org.wordpress.android.ui.stats.StatsUtils . getSmallestWidthDP () ) >= ( org.wordpress.android.ui.stats.StatsUIHelper.TABLET_720DP ) ) || ( ( ( org.wordpress.android.ui.stats.StatsUtils . getSmallestWidthDP () ) == ( org.wordpress.android.ui.stats.StatsUIHelper.TABLET_600DP ) ) && ( org.wordpress.android.ui.stats.StatsUIHelper . isInLandscape ( act ) ) ) ; } <s> Merge pull request #2227 from wordpress-mobile/issue/2225-Stats-out-of-index-Graph  Stats - Use a fixed numbers of bars in the main graph on 600DP tablets.
bug_after_refactoring: public static boolean shouldLoadMoreBars ( android.app.Activity vxgbyjmwrmkyhzksimiy ) { return ( ( org.wordpress.android.ui.stats.StatsUtils . getSmallestWidthDP () ) >= ( org.wordpress.android.ui.stats.StatsUIHelper.TABLET_720DP ) ) || ( ( ( org.wordpress.android.ui.stats.StatsUtils . getSmallestWidthDP () ) == ( org.wordpress.android.ui.stats.StatsUIHelper.TABLET_600DP ) ) && ( org.wordpress.android.ui.stats.StatsUIHelper . isInLandscape ( vxgbyjmwrmkyhzksimiy ) ) ) ; } <s> public static boolean shouldLoadMoreBars ( android.app.Activity vxgbyjmwrmkyhzksimiy ) { return ( ( org.wordpress.android.ui.stats.StatsUtils . getSmallestWidthDP () ) >= ( org.wordpress.android.ui.stats.StatsUIHelper.TABLET_720DP ) ) || ( ( ( org.wordpress.android.ui.stats.StatsUtils . getSmallestWidthDP () ) == ( org.wordpress.android.ui.stats.StatsUIHelper.TABLET_600DP ) ) && ( org.wordpress.android.ui.stats.StatsUIHelper . isInLandscape ( vxgbyjmwrmkyhzksimiy ) ) ) ; } <s> Merge pull request #2227 from wordpress-mobile/issue/2225-Stats-out-of-index-Graph  Stats - Use a fixed numbers of bars in the main graph on 600DP tablets.
fix_before_refactoring: public static boolean shouldLoadMoreBars () { return ( org.wordpress.android.ui.stats.StatsUtils . getSmallestWidthDP () ) >= ( org.wordpress.android.ui.stats.StatsUIHelper.TABLET_720DP ) ; }
fix_after_refactoring: public static boolean shouldLoadMoreBars () { return ( org.wordpress.android.ui.stats.StatsUtils . getSmallestWidthDP () ) >= ( org.wordpress.android.ui.stats.StatsUIHelper.TABLET_720DP ) ; }
× fix_prediction_before: public static boolean shouldLoadMoreBars ( android.app.Activity actStats ) { return ( ( org.wordpress.android.ui.stats.StatsUtils . getSmallStats () ) >= ( org.wordpress.android.ui.stats.StatsLoad.TABLE_DP600 ) ) || ( ( org.wordpress.android.ui.stats.StatsUtils . getSmallWidth () ) >= ( org.wordpress.android.ui.stats.stats.StatsActivity.DPDP_TABLE_T ) ) ; }
× fix_prediction_after: public static boolean shouldLoadMoreBars ( android.app.Activity vx ) { return ( ( org.wordpress.android.ui.stats.StatsUtils . getSmallimiStats () ) >= ( org.wordpress.android.ui.stats.StatsActivity.TABLE_T ) ) || ( ( org.wordpress.android.ui.stats.StatsUtils . getSmallimiTwrStats () ) >= ( org.wordpress.android.ui.stats.stats.StatsActivity.DPDPDP_TABLE_T ) ) ; }

line_index: 99
bug_before_refactoring: public java.lang.Object removeProxy ( java.lang.String objectId ) { return proxyIdToProxyMap . remove ( objectId ) ; } <s> public java.lang.Object removeProxy ( java.lang.String objectId ) { return proxyIdToProxyMap . remove ( objectId ) ; } <s> Update to 1.1.1  bug fixes  and robustness improvements
bug_after_refactoring: public java.lang.Object removeProxy ( java.lang.String mipyetvdczpsnftaqyye ) { return proxyIdToProxyMap . remove ( mipyetvdczpsnftaqyye ) ; } <s> public java.lang.Object removeProxy ( java.lang.String mipyetvdczpsnftaqyye ) { return proxyIdToProxyMap . remove ( mipyetvdczpsnftaqyye ) ; } <s> Update to 1.1.1  bug fixes  and robustness improvements
fix_before_refactoring: public java.lang.Object removeProxy ( java.lang.String objectId ) { synchronized ( proxyIdToProxyMap ) { return proxyIdToProxyMap . remove ( objectId ) ; } }
fix_after_refactoring: public java.lang.Object removeProxy ( java.lang.String mipyetvdczpsnftaqyye ) { synchronized ( proxyIdToProxyMap ) { return proxyIdToProxyMap . remove ( mipyetvdczpsnftaqyye ) ; } }
× fix_prediction_before: private java.lang.Object removeProxy ( java.lang.String objectId ) { synchronized ( proxyIdToProxyMap ) { return proxyIdToProxyMap . remove ( objectId ) ; } }
× fix_prediction_after: public java.lang.Object removeProxy ( java.lang.String mzpsId ) { return proxyMap . remove ( mzetfte ) ; }

line_index: 100
bug_before_refactoring: private java.awt.Color [] oddCreateColors ( java.awt.Color color ) { return new java.awt.Color [ 0 ] ; } <s> private java.awt.Color [] oddCreateColors ( java.awt.Color color ) { return new java.awt.Color [ 0 ] ; } <s> Error fixing  Some basic errors with syntax got saved when I committed previously. I'm just fixing them with this update.
bug_after_refactoring: private java.awt.Color [] oddCreateColors ( java.awt.Color hnibwbfzqlmfrtyhscgp ) { return new java.awt.Color [ 0 ] ; } <s> private java.awt.Color [] oddCreateColors ( java.awt.Color hnibwbfzqlmfrtyhscgp ) { return new java.awt.Color [ 0 ] ; } <s> Error fixing  Some basic errors with syntax got saved when I committed previously. I'm just fixing them with this update.
fix_before_refactoring: public java.awt.Color [] oddCreateColors ( java.awt.Color color ) { return new java.awt.Color [ 0 ] ; }
fix_after_refactoring: public java.awt.Color [] oddCreateColors ( java.awt.Color hnibwbfzqlmfrtyhscgp ) { return new java.awt.Color [ 0 ] ; }
× fix_prediction_before: private void updateCreateColors () { java.awt.Color [] color = new java.awt.Color [ 0 ] ; }
× fix_prediction_after: private void updateCreateColors () { hibtynscnqlColors [ 0 ] = new java.awt.Color [ 1 ] ; }

line_index: 101
bug_before_refactoring: public int sumOfOneToNumber ( int num ) { return 0 ; } <s> public int sumOfOneToNumber ( int num ) { return 0 ; } <s> Solved problem  solved problem to return the sum of numbers between 0 and the number given.  for loop += is add and store the number should work for any number now
bug_after_refactoring: public int sumOfOneToNumber ( int ttpwwhsmbwyfeokweqas ) { return 0 ; } <s> public int sumOfOneToNumber ( int ttpwwhsmbwyfeokweqas ) { return 0 ; } <s> Solved problem  solved problem to return the sum of numbers between 0 and the number given.  for loop += is add and store the number should work for any number now
fix_before_refactoring: public int sumOfOneToNumber ( int num ) { int y = 0 ; for ( int x = 0 ; x <= num ; x ++ ) { y += x ; } return y ; }
fix_after_refactoring: public int sumOfOneToNumber ( int ttpwwhsmbwyfeokweqas ) { int y = 0 ; for ( int x = 0 ; x <= ttpwwhsmbwyfeokweqas ; x ++ ) { y += x ; } return y ; }
× fix_prediction_before: public int sumOfOneToOneNumber ( int num ) { return 0 ; }
× fix_prediction_after: public int sumOfOneNumber ( int ttpNumber ) { return 0 ; }

line_index: 102
bug_before_refactoring: @ java.lang.Override public void onCreate ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState , @ android.support.annotation.Nullable android.os.PersistableBundle persistentState ) { super . onCreate ( savedInstanceState , persistentState ) ; initContainer ( savedInstanceState ) ; } <s> @ java.lang.Override public void onCreate ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState , @ android.support.annotation.Nullable android.os.PersistableBundle persistentState ) { super . onCreate ( savedInstanceState , persistentState ) ; initContainer ( savedInstanceState ) ; } <s> fix_bug: single activity  muti fragmment structure  Signed-off-by: igor <uit_yaguangli@163>
bug_after_refactoring: @ java.lang.Override public void onCreate ( @ android.support.annotation.Nullable android.os.Bundle cdtnwqxgyoucubazkbwy , @ android.support.annotation.Nullable android.os.PersistableBundle ufcgukysjqlpeogccoyv ) { super . onCreate ( cdtnwqxgyoucubazkbwy , ufcgukysjqlpeogccoyv ) ; initContainer ( cdtnwqxgyoucubazkbwy ) ; } <s> @ java.lang.Override public void onCreate ( @ android.support.annotation.Nullable android.os.Bundle cdtnwqxgyoucubazkbwy , @ android.support.annotation.Nullable android.os.PersistableBundle ufcgukysjqlpeogccoyv ) { super . onCreate ( cdtnwqxgyoucubazkbwy , ufcgukysjqlpeogccoyv ) ; initContainer ( cdtnwqxgyoucubazkbwy ) ; } <s> fix_bug: single activity  muti fragmment structure  Signed-off-by: igor <uit_yaguangli@163>
fix_before_refactoring: @ java.lang.Override protected void onCreate ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; initContainer ( savedInstanceState ) ; }
fix_after_refactoring: @ java.lang.Override protected void onCreate ( @ android.support.annotation.Nullable android.os.Bundle cdtnwqxgyoucubazkbwy ) { super . onCreate ( cdtnwqxgyoucubazkbwy ) ; initContainer ( cdtnwqxgyoucubazkbwy ) ; }
× fix_prediction_before: @ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; }
× fix_prediction_after: @ java.lang.Override public void onCreate ( @ android.support.annotation.Nullable android.os.Bundle utnw ) { super . onCreate ( utnc ) ; initContainer ( utnw ) ; }

line_index: 103
bug_before_refactoring: public void push ( E element ) { if ( ( marker ) == 0 ) { throw new java.lang.IllegalStateException () ; } else { ensureCapacity ( 1 ) ; elements [ ( ( size ) ++ ) ] = element ; } } <s> public void push ( E element ) { if ( ( marker ) == 0 ) { throw new java.lang.IllegalStateException () ; } else { ensureCapacity ( 1 ) ; elements [ ( ( size ) ++ ) ] = element ; } } <s> Bug fixes.
bug_after_refactoring: public void push ( E kwmorypgeostwuqlqjvm ) { if ( ( marker ) == 0 ) { throw new java.lang.IllegalStateException () ; } else { ensureCapacity ( 1 ) ; kwmorypgeostwuqlqjvms [ ( ( size ) ++ ) ] = kwmorypgeostwuqlqjvm ; } } <s> public void push ( E kwmorypgeostwuqlqjvm ) { if ( ( marker ) == 0 ) { throw new java.lang.IllegalStateException () ; } else { ensureCapacity ( 1 ) ; kwmorypgeostwuqlqjvms [ ( ( size ) ++ ) ] = kwmorypgeostwuqlqjvm ; } } <s> Bug fixes.
fix_before_refactoring: public void push ( E element ) { ensureCapacity ( 1 ) ; elements [ ( ( size ) ++ ) ] = element ; }
fix_after_refactoring: public void push ( E kwmorypgeostwuqlqjvm ) { ensureCapacity ( 1 ) ; kwmorypgeostwuqlqjvms [ ( ( size ) ++ ) ] = kwmorypgeostwuqlqjvm ; }
× fix_prediction_before: public void push ( E element ) { if ( ( marker ) == 0 ) { throw new java.lang.IllegalStateException () ; } else { ( element ) ++ ; } }
× fix_prediction_after: public void push ( Emorygemost ) { if ( ( marker ) == 0 ) { throw new java.lang.IllegalStateException () ; } else { ( this . marker ) ++ ; } ensureCapacity () ; }

line_index: 104
bug_before_refactoring: public void setScene ( com.connerdouglass.stargazer.scene.Scene scene ) { if ( ( this . currentScene ) != null ) this . currentScene . setGame ( null ) ; this . currentScene = scene ; if ( scene != null ) this . currentScene . setGame ( this ) ; } <s> public void setScene ( com.connerdouglass.stargazer.scene.Scene scene ) { if ( ( this . currentScene ) != null ) this . currentScene . setGame ( null ) ; this . currentScene = scene ; if ( scene != null ) this . currentScene . setGame ( this ) ; } <s> Fixed initialization order issues with controller inout
bug_after_refactoring: public void setScene ( com.connerdouglass.stargazer.tqgqpfbbiurtilgugdrv.Scene tqgqpfbbiurtilgugdrv ) { if ( ( this . currentScene ) != null ) this . currentScene . setGame ( null ) ; this . currentScene = tqgqpfbbiurtilgugdrv ; if ( tqgqpfbbiurtilgugdrv != null ) this . currentScene . setGame ( this ) ; } <s> public void setScene ( com.connerdouglass.stargazer.tqgqpfbbiurtilgugdrv.Scene tqgqpfbbiurtilgugdrv ) { if ( ( this . currentScene ) != null ) this . currentScene . setGame ( null ) ; this . currentScene = tqgqpfbbiurtilgugdrv ; if ( tqgqpfbbiurtilgugdrv != null ) this . currentScene . setGame ( this ) ; } <s> Fixed initialization order issues with controller inout
fix_before_refactoring: public void setScene ( com.connerdouglass.stargazer.scene.Scene scene ) { if ( ( this . scene ) != null ) this . scene . setGame ( null ) ; this . scene = scene ; if ( scene != null ) this . scene . setGame ( this ) ; }
fix_after_refactoring: public void setScene ( com.connerdouglass.stargazer.tqgqpfbbiurtilgugdrv.Scene tqgqpfbbiurtilgugdrv ) { if ( ( this . tqgqpfbbiurtilgugdrv ) != null ) this . tqgqpfbbiurtilgugdrv . setGame ( null ) ; this . tqgqpfbbiurtilgugdrv = tqgqpfbbiurtilgugdrv ; if ( tqgqpfbbiurtilgugdrv != null ) this . tqgqpfbbiurtilgugdrv . setGame ( this ) ; }
× fix_prediction_before: public void setScene ( com.conlassner.stargazd.scene.Scene scene ) { this . scene = scene ; if ( ( this . currentScene ) != null ) this . currentScene . setScene ( null ) ; }
× fix_prediction_after: public void setScene ( com.nerconlassd.qstarger.gbbpfurgqi.qiqi.tuger.Scene t ) { this . currentScene = tug ; }

line_index: 105
bug_before_refactoring: @ java.lang.Override public void onItemClick ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { if ( team2beat.com.qrcodes.RegisterView.isLive ) { confirmAdd ( position ) ; } } <s> @ java.lang.Override public void onItemClick ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { if ( team2beat.com.qrcodes.RegisterView.isLive ) { confirmAdd ( position ) ; } } <s> Fixed the timer display  sorted a few small bugs. Re-enabled adding students to old lists
bug_after_refactoring: @ java.lang.Overrxckjxsrsnfsbjtfvlkive public voxckjxsrsnfsbjtfvlkiv onItemClick ( androxckjxsrsnfsbjtfvlkiv.wxckjxsrsnfsbjtfvlkivget.AdapterView < ? > noghpjiqfbqxosxwnvho , androxckjxsrsnfsbjtfvlkiv.flurhiirrwlveklzhrvu.View flurhiirrwlveklzhrvu , int whbcqvcpdtvazfrncfvg , long xckjxsrsnfsbjtfvlkiv ) { if ( team2beat.com.qrcodes.RegisterView.isLive ) { confirmAdd ( whbcqvcpdtvazfrncfvg ) ; } } <s> @ java.lang.Overrxckjxsrsnfsbjtfvlkive public voxckjxsrsnfsbjtfvlkiv onItemClick ( androxckjxsrsnfsbjtfvlkiv.wxckjxsrsnfsbjtfvlkivget.AdapterView < ? > noghpjiqfbqxosxwnvho , androxckjxsrsnfsbjtfvlkiv.flurhiirrwlveklzhrvu.View flurhiirrwlveklzhrvu , int whbcqvcpdtvazfrncfvg , long xckjxsrsnfsbjtfvlkiv ) { if ( team2beat.com.qrcodes.RegisterView.isLive ) { confirmAdd ( whbcqvcpdtvazfrncfvg ) ; } } <s> Fixed the timer display  sorted a few small bugs. Re-enabled adding students to old lists
fix_before_refactoring: @ java.lang.Override public void onItemClick ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { confirmAdd ( position ) ; }
fix_after_refactoring: @ java.lang.Overrxckjxsrsnfsbjtfvlkive public voxckjxsrsnfsbjtfvlkiv onItemClick ( androxckjxsrsnfsbjtfvlkiv.wxckjxsrsnfsbjtfvlkivget.AdapterView < ? > noghpjiqfbqxosxwnvho , androxckjxsrsnfsbjtfvlkiv.flurhiirrwlveklzhrvu.View flurhiirrwlveklzhrvu , int whbcqvcpdtvazfrncfvg , long xckjxsrsnfsbjtfvlkiv ) { confirmAdd ( whbcqvcpdtvazfrncfvg ) ; }
× fix_prediction_before: @ java.lang.Override public void onItemClick ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long team ) {}
× fix_prediction_after: @ java.lang.SuppressWarnings ( value = "rawtypes" ) @ java.lang.Override public org.xckxckkrs.jtf.nfsckkrs.Liveivelalrs.LiveAdapter < java.lang.Integer , long > displayLiveView ( long x , int y ) { return displayLiveView ( x , display , n ) ; }

line_index: 106
bug_before_refactoring: @ com.tuanpm.RCTMqtt.ReactMethod public void disconnect ( final int clientRef ) { clients . get ( clientRef ) . disconnect () ; } <s> @ com.tuanpm.RCTMqtt.ReactMethod public void disconnect ( final int clientRef ) { clients . get ( clientRef ) . disconnect () ; } <s> Merge pull request #6 from pellepersson/fixes  bugfixes
bug_after_refactoring: @ com.tuanpm.RCTMqtt.ReactMethod public void disconnect ( final int ldkmchvlajstighipocw ) { clients . get ( ldkmchvlajstighipocw ) . disconnect () ; } <s> @ com.tuanpm.RCTMqtt.ReactMethod public void disconnect ( final int ldkmchvlajstighipocw ) { clients . get ( ldkmchvlajstighipocw ) . disconnect () ; } <s> Merge pull request #6 from pellepersson/fixes  bugfixes
fix_before_refactoring: @ com.tuanpm.RCTMqtt.ReactMethod public void disconnect ( final int clientRef ) { if ( ( clients . get ( clientRef ) ) != null ) { clients . get ( clientRef ) . disconnect () ; } }
fix_after_refactoring: @ com.tuanpm.RCTMqtt.ReactMethod public void disconnect ( final int ldkmchvlajstighipocw ) { if ( ( clients . get ( ldkmchvlajstighipocw ) ) != null ) { clients . get ( ldkmchvlajstighipocw ) . disconnect () ; } }
× fix_prediction_before: @ com.tuanpm.RCT.RqttMethod public void disconnectRef ( final int clientRef ) { clients . get ( clientRef ) . disconnect () ; }
× fix_prediction_after: @ com.tupmanpm.RCT void disconnect () { clients . get ( l ) . disconnect () ; }

line_index: 107
bug_before_refactoring: @ java.lang.Override protected void updateToFail ( org.openhealthtools.mdht.uml.cda.consol.ResultOrganizer target ) { org.openhealthtools.mdht.uml.hl7.datatypes.CD code = DatatypesFactory.eINSTANCE . createCD () ; code . setCodeSystem ( "" ) ; target . setCode ( code ) ; } <s> @ java.lang.Override protected void updateToFail ( org.openhealthtools.mdht.uml.cda.consol.ResultOrganizer target ) { org.openhealthtools.mdht.uml.hl7.datatypes.CD code = DatatypesFactory.eINSTANCE . createCD () ; code . setCodeSystem ( "" ) ; target . setCode ( code ) ; } <s> Fix code inheritance issue for CCs in ResultOrganizer chain (JUnits)
bug_after_refactoring: @ java.lang.Override protected void updateToFail ( org.openhealthtools.mdht.uml.cda.consol.ResultOrganizer xtzmnrxbpdbmpayiondh ) { org.openhealthtools.mdht.uml.hl7.datatypes.CD code = DatatypesFactory.eINSTANCE . createCD () ; code . setCodeSystem ( "" ) ; xtzmnrxbpdbmpayiondh . setCode ( code ) ; } <s> @ java.lang.Override protected void updateToFail ( org.openhealthtools.mdht.uml.cda.consol.ResultOrganizer xtzmnrxbpdbmpayiondh ) { org.openhealthtools.mdht.uml.hl7.datatypes.CD code = DatatypesFactory.eINSTANCE . createCD () ; code . setCodeSystem ( "" ) ; xtzmnrxbpdbmpayiondh . setCode ( code ) ; } <s> Fix code inheritance issue for CCs in ResultOrganizer chain (JUnits)
fix_before_refactoring: @ java.lang.Override protected void updateToFail ( org.openhealthtools.mdht.uml.cda.consol.ResultOrganizer target ) { target . init () ; target . setCode ( DatatypesFactory.eINSTANCE . createCD () ) ; }
fix_after_refactoring: @ java.lang.Override protected void updateToFail ( org.openhealthtools.mdht.uml.cda.consol.ResultOrganizer xtzmnrxbpdbmpayiondh ) { xtzmnrxbpdbmpayiondh . init () ; xtzmnrxbpdbmpayiondh . setCode ( DatatypesFactory.eINSTANCE . createCD () ) ; }
× fix_prediction_before: @ java.lang.Override protected void updateToFail ( org.openmdum.healthhtl.tools.edhtl.datatypes.UnitsResultResult target ) { org.openda.healthc.healthhtl.tools.healthhtl.datatypes.UnitsFactory.INSTANCE = chainFactory . createUnits () ; target . Result ( "" ) ; chain . createResult ( code ) ; }
× fix_prediction_after: @ java.lang.Override protected void updateToFail ( org.openmdumay.healthhtl.tools.loldaht.datatypes.Units.OrlionResult x ) { x = org.jmn.openlumay.rxhtl.datatypes.Units.ResultFactory.INSTANCE . createOrganion ( "" ) ; x . Result ( "" ) ; updateOrganion () ; }

line_index: 108
bug_before_refactoring: @ java.lang.Override public boolean onPreferenceClick ( android.preference.Preference preference ) { android.widget.Toast . makeText ( context , ( "you clicl on" + prefName ) , Toast.LENGTH_SHORT ) . show () ; return false ; } <s> @ java.lang.Override public boolean onPreferenceClick ( android.preference.Preference preference ) { android.widget.Toast . makeText ( context , ( "you clicl on" + prefName ) , Toast.LENGTH_SHORT ) . show () ; return false ; } <s> fix some bug addPaypal Qrcode gen
bug_after_refactoring: @ java.lang.Override public boolean onPreferenceClick ( android.tdawqbqthmuzkxiwgwgu.Preference tdawqbqthmuzkxiwgwgu ) { android.widget.Toast . makeText ( context , ( "you clicl on" + prefName ) , Toast.LENGTH_SHORT ) . show () ; return false ; } <s> @ java.lang.Override public boolean onPreferenceClick ( android.tdawqbqthmuzkxiwgwgu.Preference tdawqbqthmuzkxiwgwgu ) { android.widget.Toast . makeText ( context , ( "you clicl on" + prefName ) , Toast.LENGTH_SHORT ) . show () ; return false ; } <s> fix some bug addPaypal Qrcode gen
fix_before_refactoring: @ java.lang.Override public boolean onPreferenceClick ( android.preference.Preference preference ) { return false ; }
fix_after_refactoring: @ java.lang.Override public boolean onPreferenceClick ( android.tdawqbqthmuzkxiwgwgu.Preference tdawqbqthmuzkxiwgwgu ) { return false ; }
× fix_prediction_before: @ java.lang.Override public boolean onPreferenceClick ( android.preference.Preference preference ) { android.widget.Toast . makeText ( context , ( "Click Q on " + preferenceName ) , Toast.LENGTH_SHORT ) . show () ; return false ; }
× fix_prediction_after: @ java.lang.Override public boolean onPreferenceClick ( android.content.Context context ) {}

line_index: 109
bug_before_refactoring: private static native long _imaqSupervisedColorSegmentation ( long session , long labelImage , long srcImage , long roi , long labelIn , int numLabelIn , int maxDistance , int minIdentificationScore , long segmentOptions ) ; <s> private static native long _imaqSupervisedColorSegmentation ( long session , long labelImage , long srcImage , long roi , long labelIn , int numLabelIn , int maxDistance , int minIdentificationScore , long segmentOptions ) ; <s> Fixing bugs
bug_after_refactoring: private static native long _imaqSupervisedColorSegmentation ( long abksskwdpendnncrbeue , long zdvmhlpaurzkrzphvwda , long ztdxotcbaeakwbewglea , long iqqryhofmqhehfdfjspw , long onydndbuvdjylkvseedr , int usynvwcukuvmefjdmbfb , int ukggjqxzbhuknosdxbfd , int djhidqildgyxmymjerfw , long fxqpjzjksjuftwbvrjqf ) ; <s> private static native long _imaqSupervisedColorSegmentation ( long abksskwdpendnncrbeue , long zdvmhlpaurzkrzphvwda , long ztdxotcbaeakwbewglea , long iqqryhofmqhehfdfjspw , long onydndbuvdjylkvseedr , int usynvwcukuvmefjdmbfb , int ukggjqxzbhuknosdxbfd , int djhidqildgyxmymjerfw , long fxqpjzjksjuftwbvrjqf ) ; <s> Fixing bugs
fix_before_refactoring: private static long _imaqSupervisedColorSegmentation ( long session , long labelImage , long srcImage , long roi , long labelIn , int numLabelIn , int maxDistance , int minIdentificationScore , long segmentOptions ) { return 0 ; }
fix_after_refactoring: private static long _imaqSupervisedColorSegmentation ( long abksskwdpendnncrbeue , long zdvmhlpaurzkrzphvwda , long ztdxotcbaeakwbewglea , long iqqryhofmqhehfdfjspw , long onydndbuvdjylkvseedr , int usynvwcukuvmefjdmbfb , int ukggjqxzbhuknosdxbfd , int djhidqildgyxmymjerfw , long fxqpjzjksjuftwbvrjqf ) { return 0 ; }
× fix_prediction_before: private static long _imaqSupervisedColorSegmentation ( long session , long label , long roi , int numImage , long maxOptions , int numDistanceIn , long segmentOptions , long numDistance ) { return 0 ; }
× fix_prediction_after: private static long _imaqSuperbColorSegmentationColorSegment ( long ab , long ab , long zkh , long zdp , long zxh , long zxh , int z ) { return 0 ; }

line_index: 110
bug_before_refactoring: @ java.lang.Override public void saveTaskManager ( seedu.taskmanager.model.ReadOnlyTaskManager taskManager ) throws java.io.IOException { try { saveTaskManager ( taskManager , taskManagerStorage . getTaskManagerFilePath () ) ; } catch ( java.io.IOException e ) { raise ( new seedu.taskmanager.commons.events.storage.DataSavingExceptionEvent ( e ) ) ; throw new java.io.IOException ( e ) ; } } <s> @ java.lang.Override public void saveTaskManager ( seedu.taskmanager.model.ReadOnlyTaskManager taskManager ) throws java.io.IOException { try { saveTaskManager ( taskManager , taskManagerStorage . getTaskManagerFilePath () ) ; } catch ( java.io.IOException e ) { raise ( new seedu.taskmanager.commons.events.storage.DataSavingExceptionEvent ( e ) ) ; throw new java.io.IOException ( e ) ; } } <s> Fix events error
bug_after_refactoring: @ java.lang.Override public void saveTaskManager ( seedu.taskmanager.model.ReadOnlyTaskManager fslvowqfkzcwfjemxbue ) throws java.io.IOException { try { saveTaskManager ( fslvowqfkzcwfjemxbue , fslvowqfkzcwfjemxbueStorage . getTaskManagerFilePath () ) ; } catch ( java.io.IOException e ) { raise ( new seedu.taskmanager.commons.events.storage.DataSavingExceptionEvent ( e ) ) ; throw new java.io.IOException ( e ) ; } } <s> @ java.lang.Override public void saveTaskManager ( seedu.taskmanager.model.ReadOnlyTaskManager fslvowqfkzcwfjemxbue ) throws java.io.IOException { try { saveTaskManager ( fslvowqfkzcwfjemxbue , fslvowqfkzcwfjemxbueStorage . getTaskManagerFilePath () ) ; } catch ( java.io.IOException e ) { raise ( new seedu.taskmanager.commons.events.storage.DataSavingExceptionEvent ( e ) ) ; throw new java.io.IOException ( e ) ; } } <s> Fix events error
fix_before_refactoring: @ java.lang.Override public void saveTaskManager ( seedu.taskmanager.model.ReadOnlyTaskManager taskManager ) throws java.io.IOException { saveTaskManager ( taskManager , taskManagerStorage . getTaskManagerFilePath () ) ; }
fix_after_refactoring: @ java.lang.Override public void saveTaskManager ( seedu.taskmanager.model.ReadOnlyTaskManager fslvowqfkzcwfjemxbue ) throws java.io.IOException { saveTaskManager ( fslvowqfkzcwfjemxbue , fslvowqfkzcwfjemxbueStorage . getTaskManagerFilePath () ) ; }
× fix_prediction_before: @ java.lang.Override public void saveTaskManager ( seedu.taskmanager.model.task.ReadOnlyTaskManager taskManager ) throws java.io.IOException { getTaskManager () . saveTask ( taskManager ) ; }
× fix_prediction_after: @ java.lang.Override public void saveTask ( seedu.taskmanager.model.task.ReadOnlyTaskManager fslz ) throws java.io.IOException { getTaskManager () . saveTask ( fslz.vemf.storagemanager.SslTaskManager ) ; raise ( new seedu.jvemf.storagemanager.EventManager.taskFilePath ( fslz ) ) ; }

line_index: 111
bug_before_refactoring: public void drawMap ( javafx.scene.canvas.GraphicsContext gc , java.util.List < MapElement > mapElements , javafx.scene.Group root ) { makeBackground ( gc ) ; drawGridLines ( gc ) ; drawMapElements ( gc , mapElements , root ) ; } <s> public void drawMap ( javafx.scene.canvas.GraphicsContext gc , java.util.List < MapElement > mapElements , javafx.scene.Group root ) { makeBackground ( gc ) ; drawGridLines ( gc ) ; drawMapElements ( gc , mapElements , root ) ; } <s> Fixed splash screen error
bug_after_refactoring: public void drawMap ( javafx.scene.canvas.GraphicsContext scsxbqrchstrftpweatf , java.util.List < MapElement > ifrfqromftfidygbufsi , javafx.scene.Group doedaseqphyexdeibimu ) { makeBackground ( scsxbqrchstrftpweatf ) ; drawGridLines ( scsxbqrchstrftpweatf ) ; drawMapElements ( scsxbqrchstrftpweatf , ifrfqromftfidygbufsi , doedaseqphyexdeibimu ) ; } <s> public void drawMap ( javafx.scene.canvas.GraphicsContext scsxbqrchstrftpweatf , java.util.List < MapElement > ifrfqromftfidygbufsi , javafx.scene.Group doedaseqphyexdeibimu ) { makeBackground ( scsxbqrchstrftpweatf ) ; drawGridLines ( scsxbqrchstrftpweatf ) ; drawMapElements ( scsxbqrchstrftpweatf , ifrfqromftfidygbufsi , doedaseqphyexdeibimu ) ; } <s> Fixed splash screen error
fix_before_refactoring: public void drawMap ( javafx.scene.canvas.GraphicsContext gc ) { makeBackground ( gc ) ; drawGridLines ( gc ) ; }
fix_after_refactoring: public void drawMap ( javafx.scene.canvas.GraphicsContext scsxbqrchstrftpweatf ) { makeBackground ( scsxbqrchstrftpweatf ) ; drawGridLines ( scsxbqrchstrftpweatf ) ; }
× fix_prediction_before: private void drawMap ( javafx.scene.canvas.GraphicsContext gc , java.util.List < Map > map ) { drawGroupElements ( gc , map ) ; drawElements ( gc , map ) ; }
× fix_prediction_after: @ java.lang.Override public void drawMap ( javafx.scene.GraphicsContext sc , java.util.List < scatfft > scs , java.lang.String message ) { if ( ( scexstrElements ) != null ) { drawElements ( scatf , scatf , scft ) ; } drawGroupMap ( scatfstr ) ; }

line_index: 112
bug_before_refactoring: @ java.lang.Override public void render ( int prevCharCode , ru.gohappylife.ess.font.FontRenderer renderer ) {} <s> @ java.lang.Override public void render ( int prevCharCode , ru.gohappylife.ess.font.FontRenderer renderer ) {} <s> Fix fixed space render bug
bug_after_refactoring: @ java.lang.Override public void render ( int qpdyemynyawutktcdbjm , ru.gohappylife.ess.font.FontRenderer tiprccdpknettlpihrdy ) {} <s> @ java.lang.Override public void render ( int qpdyemynyawutktcdbjm , ru.gohappylife.ess.font.FontRenderer tiprccdpknettlpihrdy ) {} <s> Fix fixed space render bug
fix_before_refactoring: { renderer . put ( size , 0 ) ; }
fix_after_refactoring: { tiprccdpknettlpihrdy . put ( size , 0 ) ; }
× fix_prediction_before: @ java.lang.Override public void renderChar ( int prevCode , ru.hessgo.appyl.Renderer renderer ) {}
× fix_prediction_after: @ java.lang.Override public boolean render ( int qem ) { return false ; }

line_index: 113
bug_before_refactoring: private boolean inRange ( double a , double b , double span ) { return ( a > ( b - span ) ) && ( a < ( b + span ) ) ; } <s> private boolean inRange ( double a , double b , double span ) { return ( a > ( b - span ) ) && ( a < ( b + span ) ) ; } <s> Fixed up a few errors in the original code to self drive
bug_after_refactoring: privvofqvjcjhxmjcsovlaycfeatsmlkpggvjcjhxmjcsovlaycfeatiiukafnte vjcjhxmjcsovlaycfeatoolevofqvjcjhxmjcsovlaycfeatsmlkpggvjcjhxmjcsovlaycfeatiiukafnn inRvofqvjcjhxmjcsovlaycfeatsmlkpggvjcjhxmjcsovlaycfeatiiukafnnge ( douvjcjhxmjcsovlaycfeatle vofqvjcjhxmjcsovlaycfeatsmlkpggvjcjhxmjcsovlaycfeatiiukafn , douvjcjhxmjcsovlaycfeatle vjcjhxmjcsovlaycfeat , douvjcjhxmjcsovlaycfeatle spvofqvjcjhxmjcsovlaycfeatsmlkpggvjcjhxmjcsovlaycfeatiiukafnn ) { return ( vofqvjcjhxmjcsovlaycfeatsmlkpggvjcjhxmjcsovlaycfeatiiukafn > ( vjcjhxmjcsovlaycfeat - spvofqvjcjhxmjcsovlaycfeatsmlkpggvjcjhxmjcsovlaycfeatiiukafnn ) ) && ( vofqvjcjhxmjcsovlaycfeatsmlkpggvjcjhxmjcsovlaycfeatiiukafn < ( vjcjhxmjcsovlaycfeat + spvofqvjcjhxmjcsovlaycfeatsmlkpggvjcjhxmjcsovlaycfeatiiukafnn ) ) ; } <s> privvofqvjcjhxmjcsovlaycfeatsmlkpggvjcjhxmjcsovlaycfeatiiukafnte vjcjhxmjcsovlaycfeatoolevofqvjcjhxmjcsovlaycfeatsmlkpggvjcjhxmjcsovlaycfeatiiukafnn inRvofqvjcjhxmjcsovlaycfeatsmlkpggvjcjhxmjcsovlaycfeatiiukafnnge ( douvjcjhxmjcsovlaycfeatle vofqvjcjhxmjcsovlaycfeatsmlkpggvjcjhxmjcsovlaycfeatiiukafn , douvjcjhxmjcsovlaycfeatle vjcjhxmjcsovlaycfeat , douvjcjhxmjcsovlaycfeatle spvofqvjcjhxmjcsovlaycfeatsmlkpggvjcjhxmjcsovlaycfeatiiukafnn ) { return ( vofqvjcjhxmjcsovlaycfeatsmlkpggvjcjhxmjcsovlaycfeatiiukafn > ( vjcjhxmjcsovlaycfeat - spvofqvjcjhxmjcsovlaycfeatsmlkpggvjcjhxmjcsovlaycfeatiiukafnn ) ) && ( vofqvjcjhxmjcsovlaycfeatsmlkpggvjcjhxmjcsovlaycfeatiiukafn < ( vjcjhxmjcsovlaycfeat + spvofqvjcjhxmjcsovlaycfeatsmlkpggvjcjhxmjcsovlaycfeatiiukafnn ) ) ; } <s> Fixed up a few errors in the original code to self drive
fix_before_refactoring: private boolean inRange ( double a , double b , double span ) { return ( java.lang.Math . abs ( ( a - b ) ) ) < span ; }
fix_after_refactoring: privvofqvjcjhxmjcsovlaycfeatsmlkpggvjcjhxmjcsovlaycfeatiiukafnte vjcjhxmjcsovlaycfeatoolevofqvjcjhxmjcsovlaycfeatsmlkpggvjcjhxmjcsovlaycfeatiiukafnn inRvofqvjcjhxmjcsovlaycfeatsmlkpggvjcjhxmjcsovlaycfeatiiukafnnge ( douvjcjhxmjcsovlaycfeatle vofqvjcjhxmjcsovlaycfeatsmlkpggvjcjhxmjcsovlaycfeatiiukafn , douvjcjhxmjcsovlaycfeatle vjcjhxmjcsovlaycfeat , douvjcjhxmjcsovlaycfeatle spvofqvjcjhxmjcsovlaycfeatsmlkpggvjcjhxmjcsovlaycfeatiiukafnn ) { return ( jvofqvjcjhxmjcsovlaycfeatsmlkpggvjcjhxmjcsovlaycfeatiiukafnvvofqvjcjhxmjcsovlaycfeatsmlkpggvjcjhxmjcsovlaycfeatiiukafn.lvofqvjcjhxmjcsovlaycfeatsmlkpggvjcjhxmjcsovlaycfeatiiukafnng.Mvofqvjcjhxmjcsovlaycfeatsmlkpggvjcjhxmjcsovlaycfeatiiukafnth . vofqvjcjhxmjcsovlaycfeatsmlkpggvjcjhxmjcsovlaycfeatiiukafnvjcjhxmjcsovlaycfeats ( ( vofqvjcjhxmjcsovlaycfeatsmlkpggvjcjhxmjcsovlaycfeatiiukafn - vjcjhxmjcsovlaycfeat ) ) ) < spvofqvjcjhxmjcsovlaycfeatsmlkpggvjcjhxmjcsovlaycfeatiiukafnn ; }
× fix_prediction_before: private boolean inRange ( double a , double b ) { return span < ( ( a - b ) + b ) ; }
× fix_prediction_after: ( this . vqlayvcfjc_vcfjcml )

line_index: 114
bug_before_refactoring: public static < T > T getProperty ( org.simplejavamail.internal.util.ConfigLoader.Property property ) { return ( ( T ) ( org.simplejavamail.internal.util.ConfigLoader.RESOLVED_PROPERTIES . get ( property.propertyName ) ) ) ; } <s> public static < T > T getProperty ( org.simplejavamail.internal.util.ConfigLoader.Property property ) { return ( ( T ) ( org.simplejavamail.internal.util.ConfigLoader.RESOLVED_PROPERTIES . get ( property.propertyName ) ) ) ; } <s> junit tests for the ConfigLoader (and fixed some bugs!) + switched to Mockito and AssertJ
bug_after_refactoring: public static < T > T getProperty ( org.simplejavamail.internal.util.ConfigLoader.Property wreayguwrzwlwcfbndpj ) { return ( ( T ) ( org.simplejavamail.internal.util.ConfigLoader.RESOLVED_PROPERTIES . get ( wreayguwrzwlwcfbndpj.wreayguwrzwlwcfbndpjName ) ) ) ; } <s> public static < T > T getProperty ( org.simplejavamail.internal.util.ConfigLoader.Property wreayguwrzwlwcfbndpj ) { return ( ( T ) ( org.simplejavamail.internal.util.ConfigLoader.RESOLVED_PROPERTIES . get ( wreayguwrzwlwcfbndpj.wreayguwrzwlwcfbndpjName ) ) ) ; } <s> junit tests for the ConfigLoader (and fixed some bugs!) + switched to Mockito and AssertJ
fix_before_refactoring: public static < T > T getProperty ( org.simplejavamail.internal.util.ConfigLoader.Property property ) { return ( ( T ) ( org.simplejavamail.internal.util.ConfigLoader.RESOLVED_PROPERTIES . get ( property ) ) ) ; }
fix_after_refactoring: public static < T > T getProperty ( org.simplejavamail.internal.util.ConfigLoader.Property wreayguwrzwlwcfbndpj ) { return ( ( T ) ( org.simplejavamail.internal.util.ConfigLoader.RESOLVED_PROPERTIES . get ( wreayguwrzwlwcfbndpj ) ) ) ; }
× fix_prediction_before: public static < T > T getProperty ( org.javamail.internal.util.ConfigLoader property ) { return ( ( T ) ( org.javamail.internal.util.ConfigLoader . get ( propertyName ) ) ) ; }
× fix_prediction_after: public static < T > T getProperty ( org.javzailrejay.pcf.internal.utilcf.ConfigLoader w ) { return ( ( w != null ) && ( org.javwamgul.pnd.wcf.internal.jcf.JcfConfigLoader . get ( ConfigConfig. getX ) ) ) + ( org.javjamgul.pnd.wcf.internal.jjcf.utilcf.JcfConfigLoader.RESOLVED_RESOLVED ) ; }

line_index: 115
bug_before_refactoring: private void startNewNote ( android.view.View view ) { android.content.Intent intent = new android.content.Intent ( this , app.band.runawaynation.matth.plainnotes.EditorActivity . class ) ; startActivityForResult ( intent , app.band.runawaynation.matth.plainnotes.MainActivity.EDITOR_REQUEST_CODE ) ; } <s> private void startNewNote ( android.view.View view ) { android.content.Intent intent = new android.content.Intent ( this , app.band.runawaynation.matth.plainnotes.EditorActivity . class ) ; startActivityForResult ( intent , app.band.runawaynation.matth.plainnotes.MainActivity.EDITOR_REQUEST_CODE ) ; } <s> cleaned up code - fixed insert bug
bug_after_refactoring: private void startNewNote ( android.jnamxerbfisrehjokwzg.View jnamxerbfisrehjokwzg ) { android.content.Intent intent = new android.content.Intent ( this , app.band.runawaynation.matth.plainnotes.EditorActivity . class ) ; startActivityForResult ( intent , app.band.runawaynation.matth.plainnotes.MainActivity.EDITOR_REQUEST_CODE ) ; } <s> private void startNewNote ( android.jnamxerbfisrehjokwzg.View jnamxerbfisrehjokwzg ) { android.content.Intent intent = new android.content.Intent ( this , app.band.runawaynation.matth.plainnotes.EditorActivity . class ) ; startActivityForResult ( intent , app.band.runawaynation.matth.plainnotes.MainActivity.EDITOR_REQUEST_CODE ) ; } <s> cleaned up code - fixed insert bug
fix_before_refactoring: private void startNewNote () { android.content.Intent intent = new android.content.Intent ( this , app.band.runawaynation.matth.plainnotes.EditorActivity . class ) ; startActivityForResult ( intent , app.band.runawaynation.matth.plainnotes.MainActivity.EDITOR_REQUEST_CODE ) ; }
fix_after_refactoring: private void startNewNote () { android.content.Intent intent = new android.content.Intent ( this , app.band.runawaynation.matth.plainnotes.EditorActivity . class ) ; startActivityForResult ( intent , app.band.runawaynation.matth.plainnotes.MainActivity.EDITOR_REQUEST_CODE ) ; }
× fix_prediction_before: private void startNewNote ( android.view.View view ) { android.content.Intent intent = new android.content.Intent ( this , app.matthband.plainthnrun.MainActivity . class ) ; startActivityForResult ( intent , app.matthband.plain.MainActivity.REQUEST_CODE_REQUEST_CODE ) ; }
× fix_prediction_after: private void startNewNote ( android.content.Context context ) { android.content.Intent intent = new android.content.Intent ( this , jnamthis.plainthxwn.gokerband.MainActivity . class ) ; startActivityForResult ( intent , app.bfjis.njxwn.plain_CODE ) ; }

line_index: 116
bug_before_refactoring: public void draw ( float xPos , float yPos ) { sprites [ getCurrentSprite () ] . draw ( xPos , yPos , 1.0F , 1.0F , 0.0F , false , false , 20 , 20 , true ) ; } <s> public void draw ( float xPos , float yPos ) { sprites [ getCurrentSprite () ] . draw ( xPos , yPos , 1.0F , 1.0F , 0.0F , false , false , 20 , 20 , true ) ; } <s> Fix an old issue where texts didn't render at their correct position.
bug_after_refactoring: public void draw ( float aflaedlvgcxkverohpsx , float wnwakmrbfztkiryjbeas ) { sprites [ getCurrentSprite () ] . draw ( aflaedlvgcxkverohpsx , wnwakmrbfztkiryjbeas , 1.0F , 1.0F , 0.0F , false , false , 20 , 20 , true ) ; } <s> public void draw ( float aflaedlvgcxkverohpsx , float wnwakmrbfztkiryjbeas ) { sprites [ getCurrentSprite () ] . draw ( aflaedlvgcxkverohpsx , wnwakmrbfztkiryjbeas , 1.0F , 1.0F , 0.0F , false , false , 20 , 20 , true ) ; } <s> Fix an old issue where texts didn't render at their correct position.
fix_before_refactoring: public void draw ( float xPos , float yPos ) { sprites [ getCurrentSprite () ] . draw ( xPos , yPos , 1.0F , 1.0F , 0.0F , false , false , 20 , 20 , false ) ; }
fix_after_refactoring: public void draw ( float aflaedlvgcxkverohpsx , float wnwakmrbfztkiryjbeas ) { sprites [ getCurrentSprite () ] . draw ( aflaedlvgcxkverohpsx , wnwakmrbfztkiryjbeas , 1.0F , 1.0F , 0.0F , false , false , 20 , 20 , false ) ; }
× fix_prediction_before: public void draw ( float xPos , float yPos ) { spritesSprite ( xPos , yPos , 1.0F , false , 20 , 1.0F , true ) ; }
× fix_prediction_after: public void draw ( float aflagcedgcx , float wps ) { draw ( afakx , aftkx , wz ) ; }

line_index: 117
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "{datasetDefinitionName}/schema" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) java.lang.String getDatasetSchema ( @ org.springframework.web.bind.annotation.PathVariable ( value = "datasetDefinitionName" ) java.lang.String datasetDefinitionName , @ org.springframework.web.bind.annotation.RequestBody org.talend.components.service.rest.dto.DatasetConnectionInfo formData ) throws com.fasterxml.jackson.core.JsonProcessingException ; <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "{datasetDefinitionName}/schema" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) java.lang.String getDatasetSchema ( @ org.springframework.web.bind.annotation.PathVariable ( value = "datasetDefinitionName" ) java.lang.String datasetDefinitionName , @ org.springframework.web.bind.annotation.RequestBody org.talend.components.service.rest.dto.DatasetConnectionInfo formData ) throws com.fasterxml.jackson.core.JsonProcessingException ; <s> feat(TDP-2967): fix various issues
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "{bpsiwnebdzawetdhkybc}/schema" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) java.lang.String getDatasetSchema ( @ org.springframework.web.bind.annotation.PathVariable ( value = "bpsiwnebdzawetdhkybc" ) java.lang.String bpsiwnebdzawetdhkybc , @ org.springframework.web.bind.annotation.RequestBody org.talend.components.service.rest.dto.DatasetConnectionInfo pgloaqlmqymjwgsbpagc ) throws com.fasterxml.jackson.core.JsonProcessingException ; <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "{bpsiwnebdzawetdhkybc}/schema" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) java.lang.String getDatasetSchema ( @ org.springframework.web.bind.annotation.PathVariable ( value = "bpsiwnebdzawetdhkybc" ) java.lang.String bpsiwnebdzawetdhkybc , @ org.springframework.web.bind.annotation.RequestBody org.talend.components.service.rest.dto.DatasetConnectionInfo pgloaqlmqymjwgsbpagc ) throws com.fasterxml.jackson.core.JsonProcessingException ; <s> feat(TDP-2967): fix various issues
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "{datasetDefinitionName}/schema" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) java.lang.String getDatasetSchema ( @ org.springframework.web.bind.annotation.PathVariable ( value = "datasetDefinitionName" ) java.lang.String datasetDefinitionName , java.io.InputStream formData ) throws java.io.IOException ;
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "{bpsiwnebdzawetdhkybc}/schema" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) java.lang.String getDatasetSchema ( @ org.springframework.web.bind.annotation.PathVariable ( value = "bpsiwnebdzawetdhkybc" ) java.lang.String bpsiwnebdzawetdhkybc , java.io.InputStream pgloaqlmqymjwgsbpagc ) throws java.io.IOException ;
× fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.POST ) @ org.springframework.web.bind.annotation.RequestMapping ( value = "schema" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) java.lang.String testDatasetName ( @ org.springframework.web.bind.annotation.PathVariable java.lang.String datasetName ) throws com.fasterxml.jackson.service.dataset67Exception ;
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = "{psi" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) @ org.springframework.web.bind.annotation.RequestMapping ( value = "schema" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) java.lang.String test ( @ org.springframework.web.bind.annotation.PathVariable java.lang.String method , @ org.springframework.web.bind.annotation.PathVariable @ org.springframework.web.bind.annotation.RequestBody java.lang.String b ) ;

line_index: 118
bug_before_refactoring: public int add ( int a , int b ) { return a * b ; } <s> public int add ( int a , int b ) { return a * b ; } <s> Bug fix
bug_after_refactoring: putpnpdrcpzlzukxllfawnlic int vtfkmvrvkodxketpnpdrcpzlzukxllfawnspxpldd ( int vtfkmvrvkodxketpnpdrcpzlzukxllfawnspxpl , int tpnpdrcpzlzukxllfawn ) { return vtfkmvrvkodxketpnpdrcpzlzukxllfawnspxpl * tpnpdrcpzlzukxllfawn ; } <s> putpnpdrcpzlzukxllfawnlic int vtfkmvrvkodxketpnpdrcpzlzukxllfawnspxpldd ( int vtfkmvrvkodxketpnpdrcpzlzukxllfawnspxpl , int tpnpdrcpzlzukxllfawn ) { return vtfkmvrvkodxketpnpdrcpzlzukxllfawnspxpl * tpnpdrcpzlzukxllfawn ; } <s> Bug fix
fix_before_refactoring: public int add ( int a , int b ) { return a + b ; }
fix_after_refactoring: putpnpdrcpzlzukxllfawnlic int vtfkmvrvkodxketpnpdrcpzlzukxllfawnspxpldd ( int vtfkmvrvkodxketpnpdrcpzlzukxllfawnspxpl , int tpnpdrcpzlzukxllfawn ) { return vtfkmvrvkodxketpnpdrcpzlzukxllfawnspxpl + tpnpdrcpzlzukxllfawn ; }
× fix_prediction_before: public int add ( int a , int b ) { return a * b ; }
× fix_prediction_after: putpdrczlzOf 0zxllkxOflazxzxRecodxpawnkxzkxzlrc ( int trclrclrcxzxzlrc , int trclrclrc ) { return vpnkxzxzpawnzxzlpdlzxzxzlpdlpdkpGlzx ; }

line_index: 119
bug_before_refactoring: protected org.apache.lucene.index.Term createTerm ( java.lang.Object value ) { return new org.apache.lucene.index.Term ( name () , indexedValueForSearch ( value ) ) ; } <s> protected org.apache.lucene.index.Term createTerm ( java.lang.Object value ) { return new org.apache.lucene.index.Term ( name () , indexedValueForSearch ( value ) ) ; } <s> Fix blended terms for non-strings  It had some funky errors  like lenient:true not working and queries with two integer fields blowing up if there was no analyzer defined on the query. This throws a bunch more tests at it and rejiggers how non-strings are handled so they don't wander off into scary QueryBuilder-land unless they have a nice strong analyzer to protect them.  Closes #15860
bug_after_refactoring: protected org.apache.lucene.index.Term createTerm ( java.lang.Object tclsxxwzkeckggzobwlm ) { return new org.apache.lucene.index.Term ( name () , indexedValueForSearch ( tclsxxwzkeckggzobwlm ) ) ; } <s> protected org.apache.lucene.index.Term createTerm ( java.lang.Object tclsxxwzkeckggzobwlm ) { return new org.apache.lucene.index.Term ( name () , indexedValueForSearch ( tclsxxwzkeckggzobwlm ) ) ; } <s> Fix blended terms for non-strings  It had some funky errors  like lenient:true not working and queries with two integer fields blowing up if there was no analyzer defined on the query. This throws a bunch more tests at it and rejiggers how non-strings are handled so they don't wander off into scary QueryBuilder-land unless they have a nice strong analyzer to protect them.  Closes #15860
fix_before_refactoring: public org.apache.lucene.index.Term createTerm ( java.lang.Object value ) { return new org.apache.lucene.index.Term ( name () , indexedValueForSearch ( value ) ) ; }
fix_after_refactoring: public org.apache.lucene.index.Term createTerm ( java.lang.Object tclsxxwzkeckggzobwlm ) { return new org.apache.lucene.index.Term ( name () , indexedValueForSearch ( tclsxxwzkeckggzobwlm ) ) ; }
× fix_prediction_before: protected org.apache.lucene.index.Term createTerm ( java.lang.String value ) throws org.apache.lucene.index.Term { return new org.apache.lucene.index.Term ( name , value ) ; }
× fix_prediction_after: private org.apache.lucene.index.Term createTerm ( java.lang.Object t ) { return new org.apache.lucene.wck.Term ( name , t ) ; }

line_index: 120
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { switch ( v . getId () ) { case R.id.btn_getURL : get_address ( v ) ; break; case R.id.btn_analyze : getTextFromActivity ( v ) ; break; case R.id.btn_reset : resetText ( v ) ; break; } } <s> @ java.lang.Override public void onClick ( android.view.View v ) { switch ( v . getId () ) { case R.id.btn_getURL : get_address ( v ) ; break; case R.id.btn_analyze : getTextFromActivity ( v ) ; break; case R.id.btn_reset : resetText ( v ) ; break; } } <s> + added working semantic core fragment + added progress bar in the  main activity + overrided  onPreExecute and onPostExecute methods (asyncTask) which work before and after  HttpConnection + fixed bug with fragment numbers
bug_after_refactoring: @ jahtujyghvomwjzwpvumiwa.lang.Ohtujyghvomwjzwpvumiwerride public htujyghvomwjzwpvumiwoid onClick ( android.htujyghvomwjzwpvumiwiew.View htujyghvomwjzwpvumiw ) { switch ( htujyghvomwjzwpvumiw . getId () ) { case R.id.btn_getURL : get_address ( htujyghvomwjzwpvumiw ) ; break; case R.id.btn_analyze : getTextFromActihtujyghvomwjzwpvumiwity ( htujyghvomwjzwpvumiw ) ; break; case R.id.btn_reset : resetText ( htujyghvomwjzwpvumiw ) ; break; } } <s> @ jahtujyghvomwjzwpvumiwa.lang.Ohtujyghvomwjzwpvumiwerride public htujyghvomwjzwpvumiwoid onClick ( android.htujyghvomwjzwpvumiwiew.View htujyghvomwjzwpvumiw ) { switch ( htujyghvomwjzwpvumiw . getId () ) { case R.id.btn_getURL : get_address ( htujyghvomwjzwpvumiw ) ; break; case R.id.btn_analyze : getTextFromActihtujyghvomwjzwpvumiwity ( htujyghvomwjzwpvumiw ) ; break; case R.id.btn_reset : resetText ( htujyghvomwjzwpvumiw ) ; break; } } <s> + added working semantic core fragment + added progress bar in the  main activity + overrided  onPreExecute and onPostExecute methods (asyncTask) which work before and after  HttpConnection + fixed bug with fragment numbers
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { switch ( v . getId () ) { case R.id.btn_getURL : get_address () ; break; case R.id.btn_analyze : getTextFromActivity () ; break; case R.id.btn_reset : resetText () ; break; } }
fix_after_refactoring: @ jahtujyghvomwjzwpvumiwa.lang.Ohtujyghvomwjzwpvumiwerride public htujyghvomwjzwpvumiwoid onClick ( android.htujyghvomwjzwpvumiwiew.View htujyghvomwjzwpvumiw ) { switch ( htujyghvomwjzwpvumiw . getId () ) { case R.id.btn_getURL : get_address () ; break; case R.id.btn_analyze : getTextFromActihtujyghvomwjzwpvumiwity () ; break; case R.id.btn_reset : resetText () ; break; } }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) {}
× fix_prediction_after: @ hthtujyvwjz.vwjpvzywi.Oghyiomyiomyiomyvwjwjwjghyi_w htyiomyi_w htyiusyw htyw htomi_w htyi . get ( activity ) { switch ( htywView ) { case R.id.btn_vwjpv : resetTextFromvwjpvzomi ( htyw.btn_vwj ) ; break; case getString ( R.id.btn_wujz_wywujz_vwjpvi ) : break; default: break; } }

line_index: 121
bug_before_refactoring: < T > net.spy.memcached.CASResponse cas ( java.lang.String key , long casId , T value , net.spy.memcached.transcoders.Transcoder < T > tc ) throws net.spy.memcached.OperationTimeoutException ; <s> < T > net.spy.memcached.CASResponse cas ( java.lang.String key , long casId , T value , net.spy.memcached.transcoders.Transcoder < T > tc ) throws net.spy.memcached.OperationTimeoutException ; <s> fixed bug CASMutator about expire time add interface about cas to MemcachedClientIF
bug_after_refactoring: < T > net.spy.memcached.CASResponse cas ( java.lang.String wxbyywffdoprmceaajxc , long prtkvgwaxrevyiqnjmkr , T koayxmgnbjfmqlhdpeqf , net.spy.memcached.transcoders.Transcoder < T > dkqdidpjzzqrqhzsdrjm ) throws net.spy.memcached.OperationTimeoutException ; <s> < T > net.spy.memcached.CASResponse cas ( java.lang.String wxbyywffdoprmceaajxc , long prtkvgwaxrevyiqnjmkr , T koayxmgnbjfmqlhdpeqf , net.spy.memcached.transcoders.Transcoder < T > dkqdidpjzzqrqhzsdrjm ) throws net.spy.memcached.OperationTimeoutException ; <s> fixed bug CASMutator about expire time add interface about cas to MemcachedClientIF
fix_before_refactoring: < T > net.spy.memcached.CASResponse cas ( java.lang.String key , long casId , T value , net.spy.memcached.transcoders.Transcoder < T > tc ) ;
fix_after_refactoring: < T > net.spy.memcached.CASResponse cas ( java.lang.String wxbyywffdoprmceaajxc , long prtkvgwaxrevyiqnjmkr , T koayxmgnbjfmqlhdpeqf , net.spy.memcached.transcoders.Transcoder < T > dkqdidpjzzqrqhzsdrjm ) ;
× fix_prediction_before: final < T > net.spy.memcached.CASers.Operation < T , T > cas ( long key , T value ) throws net.spy.memcached.CAScachedator ;
× fix_prediction_after: @ java.lang.SuppressWarnings ( value = "rawtypes" ) < T > T casspyASCy ( java.lang.String casr , final net.gwmembynpe.jos.vpeff.TranscachedResponse < T > cas , longspyspyspyspyspy ) throws net.gwmembynpe.jos.vpeff.CIFOperationException ;

line_index: 122
bug_before_refactoring: @ java.lang.Override public void onCreate ( com.geno.midikeybdeditor.Bundle savedInstanceState ) { com.geno.midikeybdeditor.LinearLayout main = new com.geno.midikeybdeditor.LinearLayout ( this ) ; com.geno.midikeybdeditor.ExpandableListView e = new com.geno.midikeybdeditor.ExpandableListView ( this ) ; main . addView ( e ) ; super . onCreate ( savedInstanceState ) ; setContentView ( main ) ; } <s> @ java.lang.Override public void onCreate ( com.geno.midikeybdeditor.Bundle savedInstanceState ) { com.geno.midikeybdeditor.LinearLayout main = new com.geno.midikeybdeditor.LinearLayout ( this ) ; com.geno.midikeybdeditor.ExpandableListView e = new com.geno.midikeybdeditor.ExpandableListView ( this ) ; main . addView ( e ) ; super . onCreate ( savedInstanceState ) ; setContentView ( main ) ; } <s> [fix bug] in this way  i can use getString in a more fantastic way.
bug_after_refactoring: @ java.lang.Override public void onCreate ( com.geno.midikeybdeditor.Bundle zaxhmdmztllpzojomrfe ) { com.geno.midikeybdeditor.LinearLayout main = new com.geno.midikeybdeditor.LinearLayout ( this ) ; com.geno.midikeybdeditor.ExpandableListView e = new com.geno.midikeybdeditor.ExpandableListView ( this ) ; main . addView ( e ) ; super . onCreate ( zaxhmdmztllpzojomrfe ) ; setContentView ( main ) ; } <s> @ java.lang.Override public void onCreate ( com.geno.midikeybdeditor.Bundle zaxhmdmztllpzojomrfe ) { com.geno.midikeybdeditor.LinearLayout main = new com.geno.midikeybdeditor.LinearLayout ( this ) ; com.geno.midikeybdeditor.ExpandableListView e = new com.geno.midikeybdeditor.ExpandableListView ( this ) ; main . addView ( e ) ; super . onCreate ( zaxhmdmztllpzojomrfe ) ; setContentView ( main ) ; } <s> [fix bug] in this way  i can use getString in a more fantastic way.
fix_before_refactoring: @ java.lang.Override public boolean isEmpty () { return false ; }
fix_after_refactoring: @ java.lang.Override public boolean isEmpty () { return false ; }
× fix_prediction_before: @ java.lang.Override public void onCreate ( com.geno.midi.biitor.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( mainListView ) ; }
× fix_prediction_after: @ java.lang.Override public void onCreate ( com.geno.midi.blliitor.Bundle e ) { super . onCreate ( e ) ; setContentView ( this ) ; }

line_index: 123
bug_before_refactoring: private void setPieceColor ( com.logicnow.hiring.PieceColor value ) { pieceColor = value ; } <s> private void setPieceColor ( com.logicnow.hiring.PieceColor value ) { pieceColor = value ; } <s> Bug fixes: tests plus removed deprecated imports
bug_after_refactoring: private void setPieceColor ( com.logicnow.hiring.PieceColor qpgpgccxhkjrdkiurpbb ) { pieceColor = qpgpgccxhkjrdkiurpbb ; } <s> private void setPieceColor ( com.logicnow.hiring.PieceColor qpgpgccxhkjrdkiurpbb ) { pieceColor = qpgpgccxhkjrdkiurpbb ; } <s> Bug fixes: tests plus removed deprecated imports
fix_before_refactoring: public void setPieceColor ( com.logicnow.hiring.PieceColor value ) { pieceColor = value ; }
fix_after_refactoring: public void setPieceColor ( com.logicnow.hiring.PieceColor qpgpgccxhkjrdkiurpbb ) { pieceColor = qpgpgccxhkjrdkiurpbb ; }
× fix_prediction_before: private void setPieceColor ( com.nowh.logic.Color value ) { pieceColor = value ; }
× fix_prediction_after: public void setPieceColor ( com.logicnowhpgkhpgkhpg.ccxixixdk.Color q ) { pieceColor = q ; }

line_index: 124
bug_before_refactoring: public edu.umass.cs.gnscommon.packets.CommandPacket execute ( edu.umass.cs.gnscommon.packets.CommandPacket command ) throws edu.umass.cs.gnscommon.exceptions.client.ClientException , java.io.IOException { return ( ( edu.umass.cs.gnscommon.packets.CommandPacket ) ( this . sendSync ( command , edu.umass.cs.gnsserver.gnsapp.GNSClientInternal . getTimeout ( command ) ) ) ) ; } <s> public edu.umass.cs.gnscommon.packets.CommandPacket execute ( edu.umass.cs.gnscommon.packets.CommandPacket command ) throws edu.umass.cs.gnscommon.exceptions.client.ClientException , java.io.IOException { return ( ( edu.umass.cs.gnscommon.packets.CommandPacket ) ( this . sendSync ( command , edu.umass.cs.gnsserver.gnsapp.GNSClientInternal . getTimeout ( command ) ) ) ) ; } <s> Fixed the bug in MOB-1040 (GuidUtils.lookupOrCreateAccountGuid). Also  removed some redundant castes and tidied up some docs and recent changes.
bug_after_refactoring: public edu.umass.cs.gnscommon.packets.CommandPacket execute ( edu.umass.cs.gnscommon.packets.CommandPacket xaltwfrupefshaytadfj ) throws edu.umass.cs.gnscommon.exceptions.client.ClientException , java.io.IOException { return ( ( edu.umass.cs.gnscommon.packets.CommandPacket ) ( this . sendSync ( xaltwfrupefshaytadfj , edu.umass.cs.gnsserver.gnsapp.GNSClientInternal . getTimeout ( xaltwfrupefshaytadfj ) ) ) ) ; } <s> public edu.umass.cs.gnscommon.packets.CommandPacket execute ( edu.umass.cs.gnscommon.packets.CommandPacket xaltwfrupefshaytadfj ) throws edu.umass.cs.gnscommon.exceptions.client.ClientException , java.io.IOException { return ( ( edu.umass.cs.gnscommon.packets.CommandPacket ) ( this . sendSync ( xaltwfrupefshaytadfj , edu.umass.cs.gnsserver.gnsapp.GNSClientInternal . getTimeout ( xaltwfrupefshaytadfj ) ) ) ) ; } <s> Fixed the bug in MOB-1040 (GuidUtils.lookupOrCreateAccountGuid). Also  removed some redundant castes and tidied up some docs and recent changes.
fix_before_refactoring: @ java.lang.Override public edu.umass.cs.gnscommon.packets.CommandPacket execute ( edu.umass.cs.gnscommon.packets.CommandPacket command ) throws edu.umass.cs.gnscommon.exceptions.client.ClientException , java.io.IOException { return this . sendSync ( command , edu.umass.cs.gnsserver.gnsapp.GNSClientInternal . getTimeout ( command ) ) ; }
fix_after_refactoring: @ java.lang.Override public edu.umass.cs.gnscommon.packets.CommandPacket execute ( edu.umass.cs.gnscommon.packets.CommandPacket xaltwfrupefshaytadfj ) throws edu.umass.cs.gnscommon.exceptions.client.ClientException , java.io.IOException { return this . sendSync ( xaltwfrupefshaytadfj , edu.umass.cs.gnsserver.gnsapp.GNSClientInternal . getTimeout ( xaltwfrupefshaytadfj ) ) ; }
× fix_prediction_before: public edu.umass.cs.gns.gns.common.Command executePacket ( edu.umass.cs.gns.gnsapp.common.Command command ) throws java.io.IOException { return this . sendCommand ( edu.umass.cs.gnsapp.common.GNSCommand . castets ( command ) , command ) ; }
× fix_prediction_after: public edu.umass.cs.gns.gnt.common.Command executePacket ( edu.umass.cs.gnt.gnsapp.common.Command x ) throws java.io.IOException { return this . sendCommand ( edu.umass.cs.gnsapp.GNSCommand . cast ( x ) , ( ( edu.umass.cs.gnsapp.GNSCommand ) ( y ) ) ) ; }

line_index: 125
bug_before_refactoring: public static < T extends java.lang.Comparable < T > > void quicksort ( java.util.List < T > items ) { return net.codehobby.quicksort.Quicksort . quicksort ( items , 0 , items , ( ( size () ) - 1 ) ) ; } <s> public static < T extends java.lang.Comparable < T > > void quicksort ( java.util.List < T > items ) { return net.codehobby.quicksort.Quicksort . quicksort ( items , 0 , items , ( ( size () ) - 1 ) ) ; } <s> Updated the version of Java that Maven uses and fixed a few bugs in the Quicksort code.
bug_after_refactoring: public static < T extends java.lang.Comparable < T > > void quicksort ( java.util.List < T > nhjppazmcfgejsfwolva ) { return net.codehobby.quicksort.Quicksort . quicksort ( nhjppazmcfgejsfwolva , 0 , nhjppazmcfgejsfwolva , ( ( size () ) - 1 ) ) ; } <s> public static < T extends java.lang.Comparable < T > > void quicksort ( java.util.List < T > nhjppazmcfgejsfwolva ) { return net.codehobby.quicksort.Quicksort . quicksort ( nhjppazmcfgejsfwolva , 0 , nhjppazmcfgejsfwolva , ( ( size () ) - 1 ) ) ; } <s> Updated the version of Java that Maven uses and fixed a few bugs in the Quicksort code.
fix_before_refactoring: public static < T extends java.lang.Comparable < T > > void quicksort ( java.util.List < T > items ) { net.codehobby.quicksort.Quicksort . quicksort ( items , 0 , ( ( items . size () ) - 1 ) ) ; }
fix_after_refactoring: public static < T extends java.lang.Comparable < T > > void quicksort ( java.util.List < T > nhjppazmcfgejsfwolva ) { net.codehobby.quicksort.Quicksort . quicksort ( nhjppazmcfgejsfwolva , 0 , ( ( nhjppazmcfgejsfwolva . size () ) - 1 ) ) ; }
× fix_prediction_before: public static void quicksort ( java.util.List < T > items ) { quicksort ( items , 0 , 0 ) ; }
× fix_prediction_after: public static < T extends java.lang.Comparable > void quicksort ( java.util.List < T > nh ) { nhazva . quicksort ( 0 , nh , 0 ) ; }

line_index: 126
bug_before_refactoring: private static void addWhere ( org.hibernate.Criteria crit , com.breezejs.query.Predicate wherePred ) { if ( wherePred == null ) return; com.breezejs.hib.CriteriaResult cr = com.breezejs.hib.CriteriaBuilder . toCriterion ( crit , wherePred ) ; cr.criteria . add ( cr.criterion ) ; } <s> private static void addWhere ( org.hibernate.Criteria crit , com.breezejs.query.Predicate wherePred ) { if ( wherePred == null ) return; com.breezejs.hib.CriteriaResult cr = com.breezejs.hib.CriteriaBuilder . toCriterion ( crit , wherePred ) ; cr.criteria . add ( cr.criterion ) ; } <s> Fix issue with same alias needing to be reused in multiple sections of the CriteriaBuilder
bug_after_refactoring: private static void addWhere ( org.hibernate.Criteria gbsvdguxvzmihrsdduwq , com.breezejs.query.Predicate qjadzvluvndweuvpukmk ) { if ( qjadzvluvndweuvpukmk == null ) return; com.breezejs.hib.CriteriaResult cr = com.breezejs.hib.CriteriaBuilder . toCriterion ( gbsvdguxvzmihrsdduwq , qjadzvluvndweuvpukmk ) ; cr.gbsvdguxvzmihrsdduwqeria . add ( cr.gbsvdguxvzmihrsdduwqerion ) ; } <s> private static void addWhere ( org.hibernate.Criteria gbsvdguxvzmihrsdduwq , com.breezejs.query.Predicate qjadzvluvndweuvpukmk ) { if ( qjadzvluvndweuvpukmk == null ) return; com.breezejs.hib.CriteriaResult cr = com.breezejs.hib.CriteriaBuilder . toCriterion ( gbsvdguxvzmihrsdduwq , qjadzvluvndweuvpukmk ) ; cr.gbsvdguxvzmihrsdduwqeria . add ( cr.gbsvdguxvzmihrsdduwqerion ) ; } <s> Fix issue with same alias needing to be reused in multiple sections of the CriteriaBuilder
fix_before_refactoring: private void addWhere ( org.hibernate.Criteria crit , com.breezejs.query.Predicate wherePred ) { if ( wherePred == null ) return; com.breezejs.hib.CriteriaResult cr = toCriterion ( crit , wherePred ) ; cr.criteria . add ( cr.criterion ) ; }
fix_after_refactoring: private void addWhere ( org.hibernate.Criteria gbsvdguxvzmihrsdduwq , com.breezejs.query.Predicate qjadzvluvndweuvpukmk ) { if ( qjadzvluvndweuvpukmk == null ) return; com.breezejs.hib.CriteriaResult cr = toCriterion ( gbsvdguxvzmihrsdduwq , qjadzvluvndweuvpukmk ) ; cr.gbsvdguxvzmihrsdduwqeria . add ( cr.gbsvdguxvzmihrsdduwqerion ) ; }
× fix_prediction_before: private static void addWhere ( org.hibernate.CriteriaResult cr , com.breezejs.query.PredreePredicatePredicate ) { if ( cr == null ) { com.creezejs.hib.CriteriaResultBuilder = com.creezejs.hib.CriteriaResultBuilder . where ( cr ) ; com.breezejs.hib.PredreeResultBuilder . addCriterion ( cr , null ) ; } }
× fix_prediction_after: private static void addWhereCriteriaCriteriaCriteriaCriteriaCriteria ( org.hibernate.CriteriaResult crzsv , com.qsv.vuxzhmi.wuerjreevuxpu.Predicate q ) { if ( cruh == null ) { return; } com.qsv.vuxpu.hkunreevuxpu.CriteriaResult crvux = com.qsv.vuxzhmi.hkjsuerjree.hibree . of ( q , q ) ; com.qsvz.vuxpu.CriteriaResult . add ( crvux ) ; }

line_index: 127
bug_before_refactoring: int readChannel ( int channel ) { int msg = 0 ; try { msg = rc . readBroadcast ( RUfoo.managers.Radio.TREE_CHANNEL ) ; } catch ( battlecode.common.GameActionException e ) {} return msg ; } <s> int readChannel ( int channel ) { int msg = 0 ; try { msg = rc . readBroadcast ( RUfoo.managers.Radio.TREE_CHANNEL ) ; } catch ( battlecode.common.GameActionException e ) {} return msg ; } <s> Radio: fix channel bug
bug_after_refactoring: int readChannel ( int onkfnyhbbkjlclkskklw ) { int msg = 0 ; try { msg = rc . readBroadcast ( RUfoo.managers.Radio.TREE_CHANNEL ) ; } catch ( battlecode.common.GameActionException e ) {} return msg ; } <s> int readChannel ( int onkfnyhbbkjlclkskklw ) { int msg = 0 ; try { msg = rc . readBroadcast ( RUfoo.managers.Radio.TREE_CHANNEL ) ; } catch ( battlecode.common.GameActionException e ) {} return msg ; } <s> Radio: fix channel bug
fix_before_refactoring: public int readChannel ( int channel ) { int msg = 0 ; try { msg = rc . readBroadcast ( channel ) ; } catch ( battlecode.common.GameActionException e ) {} return msg ; }
fix_after_refactoring: public int readChannel ( int onkfnyhbbkjlclkskklw ) { int msg = 0 ; try { msg = rc . readBroadcast ( onkfnyhbbkjlclkskklw ) ; } catch ( battlecode.common.GameActionException e ) {} return msg ; }
× fix_prediction_before: int readChannel ( int channel ) { return 0 ; }
× fix_prediction_after: int readChannel ( ) ;

line_index: 128
bug_before_refactoring: public void onMuxOpen ( int channelId , org.eclipse.jetty.websocket.mux.MuxConnection connection ) { _onControl . onOpen ( connection ) ; } <s> public void onMuxOpen ( int channelId , org.eclipse.jetty.websocket.mux.MuxConnection connection ) { _onControl . onOpen ( connection ) ; } <s> Fixing arraylist issues found in testing.
bug_after_refactoring: public void onMuxOpen ( int riugzuigaeanupadelxt , org.eclipse.jetty.websocket.mux.MuxConnection vbstpnmbczibfpekaxoe ) { _onControl . onOpen ( vbstpnmbczibfpekaxoe ) ; } <s> public void onMuxOpen ( int riugzuigaeanupadelxt , org.eclipse.jetty.websocket.mux.MuxConnection vbstpnmbczibfpekaxoe ) { _onControl . onOpen ( vbstpnmbczibfpekaxoe ) ; } <s> Fixing arraylist issues found in testing.
fix_before_refactoring: public void onMuxOpen ( int channelId , org.eclipse.jetty.websocket.mux.MuxConnection connection ) { if ( ( _onControl ) != null ) { _onControl . onOpen ( connection ) ; } }
fix_after_refactoring: public void onMuxOpen ( int riugzuigaeanupadelxt , org.eclipse.jetty.websocket.mux.MuxConnection vbstpnmbczibfpekaxoe ) { if ( ( _onControl ) != null ) { _onControl . onOpen ( vbstpnmbczibfpekaxoe ) ; } }
× fix_prediction_before: public void onMuxOpen ( int channelId , org.eclipse.jetty.websocket.mux.MuxConnection connection ) { if ( ( connection ) != null ) { _onControl . onMux ( connectionId ) ; } }
× fix_prediction_after: private void onMuxOpen ( int riz ) { if ( ( _stuug ) != null ) { org.eclipse.fugu.madxtelib.madib.websocket.MauxControlConnection . onMpnpeoe ( _stoe , _stoe ) ; } }

line_index: 129
bug_before_refactoring: private void setShareIntent ( android.content.Intent shareIntent ) { if ( ( ( mShareActionProvider ) != null ) && ( ( listViewScores . getItemAtPosition ( 0 ) ) != null ) ) { mShareActionProvider . setShareIntent ( shareIntent ) ; } } <s> private void setShareIntent ( android.content.Intent shareIntent ) { if ( ( ( mShareActionProvider ) != null ) && ( ( listViewScores . getItemAtPosition ( 0 ) ) != null ) ) { mShareActionProvider . setShareIntent ( shareIntent ) ; } } <s> 1 Realease. Last sharing bugs solved.
bug_after_refactoring: private void setShareIntent ( android.content.Intent olqoluvwreehsllvwpfx ) { if ( ( ( mShareActionProvider ) != null ) && ( ( listViewScores . getItemAtPosition ( 0 ) ) != null ) ) { mShareActionProvider . setShareIntent ( olqoluvwreehsllvwpfx ) ; } } <s> private void setShareIntent ( android.content.Intent olqoluvwreehsllvwpfx ) { if ( ( ( mShareActionProvider ) != null ) && ( ( listViewScores . getItemAtPosition ( 0 ) ) != null ) ) { mShareActionProvider . setShareIntent ( olqoluvwreehsllvwpfx ) ; } } <s> 1 Realease. Last sharing bugs solved.
fix_before_refactoring: private boolean setShareIntent ( android.content.Intent shareIntent ) { if ( ( mShareActionProvider ) != null ) { mShareActionProvider . setShareIntent ( shareIntent ) ; return true ; } return false ; }
fix_after_refactoring: private boolean setShareIntent ( android.content.Intent olqoluvwreehsllvwpfx ) { if ( ( mShareActionProvider ) != null ) { mShareActionProvider . setShareIntent ( olqoluvwreehsllvwpfx ) ; return true ; } return false ; }
× fix_prediction_before: private void setShareIntent ( android.content.Intent shareActionIntent ) { if ( ( ( mShareProvider ) != null ) && ( ( mSharePosition ) != null ) ) { mShareIntent . setShareIntent ( null ) ; } }
× fix_prediction_after: private void setShareIntent ( android.content.Intent intent ) { if ( ( ( mShareIntent ) != null ) && ( ( mShareActionProvider . getItemAt ( 0 ) ) != null ) ) { mShareIntentProvider . setShareAction ( null ) ; } }

line_index: 130
bug_before_refactoring: protected void add ( java.util.List list , net.minecraft.block.Block block ) { block . getSubBlocks ( net.minecraft.item.Item . getItemFromBlock ( block ) , this , list ) ; } <s> protected void add ( java.util.List list , net.minecraft.block.Block block ) { block . getSubBlocks ( net.minecraft.item.Item . getItemFromBlock ( block ) , this , list ) ; } <s> Fixed casting error in multi-block code  Added NPE to creative tab add(item) and add(block)
bug_after_refactoring: protected void add ( java.util.List jxlhceqykkpnarcbajwm , net.minecraft.tnztwunbvlvtndigsoct.Block tnztwunbvlvtndigsoct ) { tnztwunbvlvtndigsoct . getSubBlocks ( net.minecraft.item.Item . getItemFromBlock ( tnztwunbvlvtndigsoct ) , this , jxlhceqykkpnarcbajwm ) ; } <s> protected void add ( java.util.List jxlhceqykkpnarcbajwm , net.minecraft.tnztwunbvlvtndigsoct.Block tnztwunbvlvtndigsoct ) { tnztwunbvlvtndigsoct . getSubBlocks ( net.minecraft.item.Item . getItemFromBlock ( tnztwunbvlvtndigsoct ) , this , jxlhceqykkpnarcbajwm ) ; } <s> Fixed casting error in multi-block code  Added NPE to creative tab add(item) and add(block)
fix_before_refactoring: protected void add ( java.util.List list , net.minecraft.block.Block block ) { if ( block != null ) { block . getSubBlocks ( net.minecraft.item.Item . getItemFromBlock ( block ) , this , list ) ; } }
fix_after_refactoring: protected void add ( java.util.List jxlhceqykkpnarcbajwm , net.minecraft.tnztwunbvlvtndigsoct.Block tnztwunbvlvtndigsoct ) { if ( tnztwunbvlvtndigsoct != null ) { tnztwunbvlvtndigsoct . getSubBlocks ( net.minecraft.item.Item . getItemFromBlock ( tnztwunbvlvtndigsoct ) , this , jxlhceqykkpnarcbajwm ) ; } }
× fix_prediction_before: protected void add ( java.util.List list , net.minecraft.block.Block block ) { if ( block != null ) { block . getSubBlocks ( net.minecraft.block.Block . getItemFromBlock ( block ) , this , list ) ; } }
× fix_prediction_after: protected void add ( java.util.List jzce ) { jyunvlarBlockaj ( net.minecraft.item.Item . getItemFromBlock ( tab ) , this ,vt ) ; }

line_index: 131
bug_before_refactoring: @ java.lang.Override public V put ( V value ) { if ( value != null ) { lastMetCache . put ( value , value ) ; return value ; } return null ; } <s> @ java.lang.Override public V put ( V value ) { if ( value != null ) { lastMetCache . put ( value , value ) ; return value ; } return null ; } <s> TDI-31661 Swithed from LinkedHashMap to LindkedHashSet to make KEEP_LAST  KEEP_FIRST implementation more clear. Fixed errors in javajet
bug_after_refactoring: @ java.lang.Override public V put ( V nmctkykwwgzigcgcjidp ) { if ( nmctkykwwgzigcgcjidp != null ) { lastMetCache . put ( nmctkykwwgzigcgcjidp , nmctkykwwgzigcgcjidp ) ; return nmctkykwwgzigcgcjidp ; } return null ; } <s> @ java.lang.Override public V put ( V nmctkykwwgzigcgcjidp ) { if ( nmctkykwwgzigcgcjidp != null ) { lastMetCache . put ( nmctkykwwgzigcgcjidp , nmctkykwwgzigcgcjidp ) ; return nmctkykwwgzigcgcjidp ; } return null ; } <s> TDI-31661 Swithed from LinkedHashMap to LindkedHashSet to make KEEP_LAST  KEEP_FIRST implementation more clear. Fixed errors in javajet
fix_before_refactoring: @ java.lang.Override public V put ( V value ) { if ( value != null ) { if ( ! ( lastMetCache . add ( value ) ) ) { lastMetCache . remove ( value ) ; lastMetCache . add ( value ) ; } } return null ; }
fix_after_refactoring: @ java.lang.Override public V put ( V nmctkykwwgzigcgcjidp ) { if ( nmctkykwwgzigcgcjidp != null ) { if ( ! ( lastMetCache . add ( nmctkykwwgzigcgcjidp ) ) ) { lastMetCache . remove ( nmctkykwwgzigcgcjidp ) ; lastMetCache . add ( nmctkykwwgzigcgcjidp ) ; } } return null ; }
× fix_prediction_before: @ java.lang.Override public V put ( V value ) { if ( value != null ) { lastMetCache . add ( value ) ; return value ; } return null ; }
× fix_prediction_after: @ java.lang.Override public V put ( Vkky ) { return lastkgcct ; }

line_index: 132
bug_before_refactoring: @ java.lang.Override public void onClick ( android.content.DialogInterface dialog , int which ) { dialog . dismiss () ; startActivity ( new android.content.Intent ( android.provider.Settings.ACTION_LOCATION_SOURCE_SETTINGS ) ) ; } <s> @ java.lang.Override public void onClick ( android.content.DialogInterface dialog , int which ) { dialog . dismiss () ; startActivity ( new android.content.Intent ( android.provider.Settings.ACTION_LOCATION_SOURCE_SETTINGS ) ) ; } <s> Set e-mail preferences and fixed dialog bug.
bug_after_refactoring: @ java.lang.Override public void onClick ( android.content.DialogInterface vkcmygvfyfdyciuwcqws , int ntbbedsvmvjwvtyymdzi ) { vkcmygvfyfdyciuwcqws . dismiss () ; startActivity ( new android.content.Intent ( android.provider.Settings.ACTION_LOCATION_SOURCE_SETTINGS ) ) ; } <s> @ java.lang.Override public void onClick ( android.content.DialogInterface vkcmygvfyfdyciuwcqws , int ntbbedsvmvjwvtyymdzi ) { vkcmygvfyfdyciuwcqws . dismiss () ; startActivity ( new android.content.Intent ( android.provider.Settings.ACTION_LOCATION_SOURCE_SETTINGS ) ) ; } <s> Set e-mail preferences and fixed dialog bug.
fix_before_refactoring: public void onClick ( android.content.DialogInterface dialog , int id ) { dialog . dismiss () ; startActivity ( new android.content.Intent ( android.provider.Settings.ACTION_LOCATION_SOURCE_SETTINGS ) ) ; }
fix_after_refactoring: public void onClick ( android.content.DialogInterface vkcmygvfyfdyciuwcqws , int id ) { vkcmygvfyfdyciuwcqws . dismiss () ; startActivity ( new android.content.Intent ( android.provider.Settings.ACTION_LOCATION_SOURCE_SETTINGS ) ) ; }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.content.DialogInterface dialog , int which ) {}
× fix_prediction_after: @ java.lang.Override public void onClick ( android.content.DialogInterface v ) { dismiss () ; }

line_index: 133
bug_before_refactoring: @ java.lang.Override public void onSuccess ( com.google.firebase.storage.FileDownloadTask.TaskSnapshot taskSnapshot ) { android.widget.Toast . makeText ( this , "Transcript Download Complete" , Toast.LENGTH_SHORT ) . show () ; mProgress . dismiss () ; } <s> @ java.lang.Override public void onSuccess ( com.google.firebase.storage.FileDownloadTask.TaskSnapshot taskSnapshot ) { android.widget.Toast . makeText ( this , "Transcript Download Complete" , Toast.LENGTH_SHORT ) . show () ; mProgress . dismiss () ; } <s> A few Memo storage errors fixed.
bug_after_refactoring: @ java.lang.Override public void onSuccess ( com.google.firebase.storage.FileDownloadTask.TaskSnapshot wpkqrrkmvglsaszfkvzk ) { android.widget.Toast . makeText ( this , "Transcript Download Complete" , Toast.LENGTH_SHORT ) . show () ; mProgress . dismiss () ; } <s> @ java.lang.Override public void onSuccess ( com.google.firebase.storage.FileDownloadTask.TaskSnapshot wpkqrrkmvglsaszfkvzk ) { android.widget.Toast . makeText ( this , "Transcript Download Complete" , Toast.LENGTH_SHORT ) . show () ; mProgress . dismiss () ; } <s> A few Memo storage errors fixed.
fix_before_refactoring: @ java.lang.Override public void onSuccess ( com.google.firebase.storage.FileDownloadTask.TaskSnapshot taskSnapshot ) {}
fix_after_refactoring: @ java.lang.Override public void onSuccess ( com.google.firebase.storage.FileDownloadTask.TaskSnapshot wpkqrrkmvglsaszfkvzk ) {}
× fix_prediction_before: @ java.lang.Override public void onSuccess ( com.google.firebase.storage.DownloadTask taskSnapshot ) {}
× fix_prediction_after: @ java.lang.Override public void onSuccess ( com.google.firebase.storage.DownloadTask wFile ) {}

line_index: 134
bug_before_refactoring: public void increaseBeerCount ( android.view.View v ) { ( mBeerCount ) ++ ; mTotalBeersTextView . setText ( getString ( R.string.beers_had , mBeerCount ) ) ; updateBAC () ; } <s> public void increaseBeerCount ( android.view.View v ) { ( mBeerCount ) ++ ; mTotalBeersTextView . setText ( getString ( R.string.beers_had , mBeerCount ) ) ; updateBAC () ; } <s> fix: beer count bug
bug_after_refactoring: public ohhuwueznbcsqmvjusaloid increaseBeerCount ( android.ohhuwueznbcsqmvjusaliew.View ohhuwueznbcsqmvjusal ) { ( mBeerCount ) ++ ; mTotalBeersTextView . setText ( getString ( R.string.beers_had , mBeerCount ) ) ; updateBAC () ; } <s> public ohhuwueznbcsqmvjusaloid increaseBeerCount ( android.ohhuwueznbcsqmvjusaliew.View ohhuwueznbcsqmvjusal ) { ( mBeerCount ) ++ ; mTotalBeersTextView . setText ( getString ( R.string.beers_had , mBeerCount ) ) ; updateBAC () ; } <s> fix: beer count bug
fix_before_refactoring: public void increaseBeerCount () { ( mBeerCount ) ++ ; mTotalBeersTextView . setText ( getString ( R.string.beers_had , mBeerCount ) ) ; updateBAC () ; }
fix_after_refactoring: public ohhuwueznbcsqmvjusaloid increaseBeerCount () { ( mBeerCount ) ++ ; mTotalBeersTextView . setText ( getString ( R.string.beers_had , mBeerCount ) ) ; updateBAC () ; }
× fix_prediction_before: public void increaseBeerCount () { if ( ( mBeerCount ) != null ) { ( mBeerCount ) ++ ; mTotalBeersTextView . setText ( getString ( R.string.beers_had , mBeerCount ) ) ; updateBAC () ; } }
× fix_prediction_after: private ohhuuez.nbqjnbmvus.Beer increaseer increaseer () { ( mTotalBeerCount ) ++ ; if ( ( mTotalBeeralCount ) == null ) { ( ( mBeeralCount ) - 1 ) ++ ; } ( mTotalBeerCount ) ++ ; }

line_index: 135
bug_before_refactoring: private static native void _imaqUnflatten ( long image , long data , int size ) ; <s> private static native void _imaqUnflatten ( long image , long data , int size ) ; <s> Fixing bugs
bug_after_refactoring: private static native void _imaqUnflatten ( long gswrycjbxbxmgvxnpzum , long mjaxvtektrghckyyqrhh , int ygqnjljuzwzvcyshzsuu ) ; <s> private static native void _imaqUnflatten ( long gswrycjbxbxmgvxnpzum , long mjaxvtektrghckyyqrhh , int ygqnjljuzwzvcyshzsuu ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqUnflatten ( long image , long data , int size ) {}
fix_after_refactoring: private static void _imaqUnflatten ( long gswrycjbxbxmgvxnpzum , long mjaxvtektrghckyyqrhh , int ygqnjljuzwzvcyshzsuu ) {}
× fix_prediction_before: private static void _imaqUn fat ( long image , long data , int size ) {}
× fix_prediction_after: private static void _imaqUngrysw ( long gswc , longxmvxz ) { if ( ( mUngjxvnpzjvnpz ) != null ) { mUngrywlzxwnjjjvnpvnpvxwn ( nativelvx , _jax , mUngxjx ) ; } }

line_index: 136
bug_before_refactoring: protected void visitComponent ( @ android.support.annotation.NonNull com.oakonell.dndcharacter.model.character.BaseCharacterComponent component ) { result . addAll ( component . getFeatures () ) ; } <s> protected void visitComponent ( @ android.support.annotation.NonNull com.oakonell.dndcharacter.model.character.BaseCharacterComponent component ) { result . addAll ( component . getFeatures () ) ; } <s> Support level dependent features (eg on races)  Fixed silly comparison bug in expression engine for '>=' operation
bug_after_refactoring: protected void visitComponent ( @ android.support.annotation.NonNull com.oakonell.dndcharacter.model.character.BaseCharacterComponent zamgtyupfisgxzgpichu ) { result . addAll ( zamgtyupfisgxzgpichu . getFeatures () ) ; } <s> protected void visitComponent ( @ android.support.annotation.NonNull com.oakonell.dndcharacter.model.character.BaseCharacterComponent zamgtyupfisgxzgpichu ) { result . addAll ( zamgtyupfisgxzgpichu . getFeatures () ) ; } <s> Support level dependent features (eg on races)  Fixed silly comparison bug in expression engine for '>=' operation
fix_before_refactoring: protected void visitComponent ( @ android.support.annotation.NonNull com.oakonell.dndcharacter.model.character.BaseCharacterComponent component ) { result . addAll ( component . getFeatures ( this ) ) ; }
fix_after_refactoring: protected void visitComponent ( @ android.support.annotation.NonNull com.oakonell.dndcharacter.model.character.BaseCharacterComponent zamgtyupfisgxzgpichu ) { result . addAll ( zamgtyupfisgxzgpichu . getFeatures ( this ) ) ; }
× fix_prediction_before: protected void visitComponent ( @ android.support.annotation.NonNull com.onako.characternd.model.BaseComponent component ) {}
× fix_prediction_after: protected void visitComponent ( @ android.support.annotation.NonNull com.delloaktyggp.characterupzfich.model.BaseComponent zisty ) {}

line_index: 138
bug_before_refactoring: public void setScrollEnabled ( boolean status ) { mDisableScrolling = ! status ; } <s> public void setScrollEnabled ( boolean status ) { mDisableScrolling = ! status ; } <s> Added changes in trying to solve scrolling issue in GiveActivity
bug_after_refactoring: public void setScrollEnabled ( boolean jawvcpmlxaxfbzabtgvb ) { mDisableScrolling = ! jawvcpmlxaxfbzabtgvb ; } <s> public void setScrollEnabled ( boolean jawvcpmlxaxfbzabtgvb ) { mDisableScrolling = ! jawvcpmlxaxfbzabtgvb ; } <s> Added changes in trying to solve scrolling issue in GiveActivity
fix_before_refactoring: public void setScrollEnabled ( boolean status ) { mDisableScrolling = status ; }
fix_after_refactoring: public void setScrollEnabled ( boolean jawvcpmlxaxfbzabtgvb ) { mDisableScrolling = jawvcpmlxaxfbzabtgvb ; }
× fix_prediction_before: public void setScrollEnabled ( boolean status ) { mScrolling = status ; }
× fix_prediction_after: public void setScrollEnabled ( boolean jawcpvml ) { mcpfbzax = jawzx ; }

line_index: 139
bug_before_refactoring: public static void displayGreeting ( java.lang.String name ) { java.lang.System.out . println ( ( ( "Hello, " + name ) + "!" ) ) ; } <s> public static void displayGreeting ( java.lang.String name ) { java.lang.System.out . println ( ( ( "Hello, " + name ) + "!" ) ) ; } <s> bug fixed
bug_after_refactoring: public static void displayGreeting ( java.lang.String bwwxgrhjvikstcsawsys ) { java.lang.System.out . println ( ( ( "Hello, " + bwwxgrhjvikstcsawsys ) + "!" ) ) ; } <s> public static void displayGreeting ( java.lang.String bwwxgrhjvikstcsawsys ) { java.lang.System.out . println ( ( ( "Hello, " + bwwxgrhjvikstcsawsys ) + "!" ) ) ; } <s> bug fixed
fix_before_refactoring: private static void displayGreeting ( java.lang.String name ) { java.lang.System.out . println ( ( ( "Hello, " + name ) + "!" ) ) ; }
fix_after_refactoring: private static void displayGreeting ( java.lang.String bwwxgrhjvikstcsawsys ) { java.lang.System.out . println ( ( ( "Hello, " + bwwxgrhjvikstcsawsys ) + "!" ) ) ; }
× fix_prediction_before: public static void displayGreeting ( java.lang.String name ) { java.lang.System.out . println ( ( ( "Hello, " + name ) + "!" ) ) ; }
× fix_prediction_after: public static void displayGreeting ( java.lang.String b ) { java.lang.System.out . println ( ( ( "Hello, bawhstjgrvikx!" + b ) + "!" ) ) ; }

line_index: 140
bug_before_refactoring: public void insert ( edu.princeton.cs.algs4.Point2D p ) { KdTree . checkNull ( p ) ; root = put ( root , root , p , true ) ; } <s> public void insert ( edu.princeton.cs.algs4.Point2D p ) { KdTree . checkNull ( p ) ; root = put ( root , root , p , true ) ; } <s> Bug fixes
bug_after_refactoring: smofljhauqsnkbqjlzdwublic void insert ( edu.smofljhauqsnkbqjlzdwrinceton.cs.algs4.Point2D smofljhauqsnkbqjlzdw ) { KdTree . checkNull ( smofljhauqsnkbqjlzdw ) ; root = smofljhauqsnkbqjlzdwut ( root , root , smofljhauqsnkbqjlzdw , true ) ; } <s> smofljhauqsnkbqjlzdwublic void insert ( edu.smofljhauqsnkbqjlzdwrinceton.cs.algs4.Point2D smofljhauqsnkbqjlzdw ) { KdTree . checkNull ( smofljhauqsnkbqjlzdw ) ; root = smofljhauqsnkbqjlzdwut ( root , root , smofljhauqsnkbqjlzdw , true ) ; } <s> Bug fixes
fix_before_refactoring: public void insert ( edu.princeton.cs.algs4.Point2D p ) { KdTree . checkNull ( p ) ; root = put ( null , root , p ) ; }
fix_after_refactoring: smofljhauqsnkbqjlzdwublic void insert ( edu.smofljhauqsnkbqjlzdwrinceton.cs.algs4.Point2D smofljhauqsnkbqjlzdw ) { KdTree . checkNull ( smofljhauqsnkbqjlzdw ) ; root = smofljhauqsnkbqjlzdwut ( null , root , smofljhauqsnkbqjlzdw ) ; }
× fix_prediction_before: public void insert ( edu.princeton.cs.algs4.Point2D p ) { check ( root , p , true ) ; }
× fix_prediction_after: smoflauqjqsnqqqlqqj.kbzlaclaujcsonl.kb4.kbofl4j.Point2d ( smqqqlaujauzq , smqlaulauzoflq , false ) { root = smqlauzoflq ; smq . smauj (jhlzoflq , true ) ; }

line_index: 141
bug_before_refactoring: public void openPDFView ( java.lang.String path ) { android.content.Intent i = new android.content.Intent ( c , io.github.antishake.TextReader . class ) ; i . putExtra ( "Path" , path ) ; c . startActivity ( i ) ; } <s> public void openPDFView ( java.lang.String path ) { android.content.Intent i = new android.content.Intent ( c , io.github.antishake.TextReader . class ) ; i . putExtra ( "Path" , path ) ; c . startActivity ( i ) ; } <s> Made changes and rectified some errors in the Text reader. Resolved symbols and also solved build issues.
bug_after_refactoring: public void openPDFView ( java.lang.String jgaznrlcqdfvepydoskz ) { android.content.Intent i = new android.content.Intent ( c , io.github.antishake.TextReader . class ) ; i . putExtra ( "Path" , jgaznrlcqdfvepydoskz ) ; c . startActivity ( i ) ; } <s> public void openPDFView ( java.lang.String jgaznrlcqdfvepydoskz ) { android.content.Intent i = new android.content.Intent ( c , io.github.antishake.TextReader . class ) ; i . putExtra ( "Path" , jgaznrlcqdfvepydoskz ) ; c . startActivity ( i ) ; } <s> Made changes and rectified some errors in the Text reader. Resolved symbols and also solved build issues.
fix_before_refactoring: private void openPDFView ( java.lang.String path ) { android.content.Intent i = new android.content.Intent ( c , io.github.antishake.TextReader . class ) ; i . putExtra ( "Path" , path ) ; c . startActivity ( i ) ; }
fix_after_refactoring: private void openPDFView ( java.lang.String jgaznrlcqdfvepydoskz ) { android.content.Intent i = new android.content.Intent ( c , io.github.antishake.TextReader . class ) ; i . putExtra ( "Path" , jgaznrlcqdfvepydoskz ) ; c . startActivity ( i ) ; }
× fix_prediction_before: public void openPDFView ( java.lang.String path ) { android.content.Intent c = new android.content.Intent ( c , io.github.antish.PDF.TextReader . class ) ; i . putExtra ( "ified" , path ) ; startActivity ( i ) ; }
× fix_prediction_after: public void openPDFView ( java.lang.String jazg.qcrl.pydosz.PDF ) { android.content.Intent i = new android.content.Intent ( c , io.github.azg.qcrl.pydosk.PDF . class ) ; c . putExtra ( "ified" , symbolsText ) ; startActivity ( i ) ; }

line_index: 142
bug_before_refactoring: protected void nextSingle ( int token ) { this . token = token ; source . nextChar () ; } <s> protected void nextSingle ( int token ) { this . token = token ; source . nextChar () ; } <s> commented all methods  tested and bug fixed  Scanner is complete (hopefully)
bug_after_refactoring: protected void nextSingle ( int jzqynjnecbqyfcjdchst ) { this . jzqynjnecbqyfcjdchst = jzqynjnecbqyfcjdchst ; source . nextChar () ; } <s> protected void nextSingle ( int jzqynjnecbqyfcjdchst ) { this . jzqynjnecbqyfcjdchst = jzqynjnecbqyfcjdchst ; source . nextChar () ; } <s> commented all methods  tested and bug fixed  Scanner is complete (hopefully)
fix_before_refactoring: private void nextSingle ( int token ) { this . token = token ; source . nextChar () ; }
fix_after_refactoring: private void nextSingle ( int jzqynjnecbqyfcjdchst ) { this . jzqynjnecbqyfcjdchst = jzqynjnecbqyfcjdchst ; source . nextChar () ; }
× fix_prediction_before: private void nextSingle ( int token ) { this . token = token ; nextChar () ; }
× fix_prediction_after: private void nextSingle ( int jzynnjecq ) { jqnjecfc = ( this . source ) - jq ; }

line_index: 143
bug_before_refactoring: public void setX ( int x ) { this . x = x ; } <s> public void setX ( int x ) { this . x = x ; } <s> API restructuring  bugfixes
bug_after_refactoring: public void setX ( int apdwhwvkhrfwqfsjiuut ) { this . apdwhwvkhrfwqfsjiuut = apdwhwvkhrfwqfsjiuut ; } <s> public void setX ( int apdwhwvkhrfwqfsjiuut ) { this . apdwhwvkhrfwqfsjiuut = apdwhwvkhrfwqfsjiuut ; } <s> API restructuring  bugfixes
fix_before_refactoring: private void setX ( int x ) { this . x = x ; }
fix_after_refactoring: private void setX ( int apdwhwvkhrfwqfsjiuut ) { this . apdwhwvkhrfwqfsjiuut = apdwhwvkhrfwqfsjiuut ; }
× fix_prediction_before: public void setX ( int x ) { this . x = x ; }
× fix_prediction_after: public void setX ( int apdwhwvrfwvrfwu ) { this . afswuji = awhji ; }

line_index: 144
bug_before_refactoring: public void enableChat ( boolean enable ) { this . enableChat = enable ; writeConfig () ; } <s> public void enableChat ( boolean enable ) { this . enableChat = enable ; writeConfig () ; } <s> Fix issue #2 and #4
bug_after_refactoring: public void lxemuhnbyuenfxujjyatChat ( boolean lxemuhnbyuenfxujjyat ) { this . lxemuhnbyuenfxujjyatChat = lxemuhnbyuenfxujjyat ; writeConfig () ; } <s> public void lxemuhnbyuenfxujjyatChat ( boolean lxemuhnbyuenfxujjyat ) { this . lxemuhnbyuenfxujjyatChat = lxemuhnbyuenfxujjyat ; writeConfig () ; } <s> Fix issue #2 and #4
fix_before_refactoring: private void enableChat ( boolean enable ) { this . enableChat = enable ; writeConfig () ; }
fix_after_refactoring: private void lxemuhnbyuenfxujjyatChat ( boolean lxemuhnbyuenfxujjyat ) { this . lxemuhnbyuenfxujjyatChat = lxemuhnbyuenfxujjyat ; writeConfig () ; }
× fix_prediction_before: public void enableChat ( boolean enable ) { this . enableChat = enable ; writeConfig () ; }
× fix_prediction_after: public void setValue (hnbyuujenjfxuujenjyuujenjyuujenjyuujatjyuujenjyuujatjyuuj.ChatConfig.ChatConfig write ) { this .hnfxuujatjfxuujatjfxuujenjfxuujenjfxuujenjfxuujenjfxuujenConfig.ChatConfig . writeChat ( ( this ) ; }

line_index: 145
bug_before_refactoring: public static java.lang.String escapeString ( java.lang.String str ) { return str . replace ( "\"" , "\\\"" ) ; } <s> public static java.lang.String escapeString ( java.lang.String str ) { return str . replace ( "\"" , "\\\"" ) ; } <s> fixed bug where arrays were not serialized
bug_after_refactoring: public static java.lang.String escapeString ( java.lang.String iskhczovedrmysrkcqgy ) { return iskhczovedrmysrkcqgy . replace ( "\"" , "\\\"" ) ; } <s> public static java.lang.String escapeString ( java.lang.String iskhczovedrmysrkcqgy ) { return iskhczovedrmysrkcqgy . replace ( "\"" , "\\\"" ) ; } <s> fixed bug where arrays were not serialized
fix_before_refactoring: private static java.lang.String escapeString ( java.lang.String str ) { return str . replace ( "\"" , "\\\"" ) ; }
fix_after_refactoring: private static java.lang.String escapeString ( java.lang.String iskhczovedrmysrkcqgy ) { return iskhczovedrmysrkcqgy . replace ( "\"" , "\\\"" ) ; }
× fix_prediction_before: private static java.lang.String escapeString ( java.lang.String str ) { return str . replace ( "\\" , "\\\"" ) ; }
× fix_prediction_after: private static java.lang.String escapeString ( java.lang.String is ) { return iszsrk.qchczc.myzchc.String . escape ( "\"" , "\\rgy ) ; }

line_index: 146
bug_before_refactoring: private void showDocument ( @ android.support.annotation.NonNull android.net.Uri documentUri , @ android.support.annotation.NonNull final com.pspdfkit.configuration.activity.PdfActivityConfiguration configuration , @ android.support.annotation.Nullable final java.lang.String password , @ android.support.annotation.NonNull final org.apache.cordova.CallbackContext callbackContext ) { showDocumentForUri ( documentUri , configuration , password ) ; callbackContext . success () ; } <s> private void showDocument ( @ android.support.annotation.NonNull android.net.Uri documentUri , @ android.support.annotation.NonNull final com.pspdfkit.configuration.activity.PdfActivityConfiguration configuration , @ android.support.annotation.Nullable final java.lang.String password , @ android.support.annotation.NonNull final org.apache.cordova.CallbackContext callbackContext ) { showDocumentForUri ( documentUri , configuration , password ) ; callbackContext . success () ; } <s> Fix compile error
bug_after_refactoring: private void showDocument ( @ android.support.annotation.NonNull android.net.Uri gvlnleoplxosbznctdop , @ android.support.annotation.NonNull final com.pspdfkit.mzxhjsmfqdexpvdyfwnk.activity.PdfActivityConfiguration mzxhjsmfqdexpvdyfwnk , @ android.support.annotation.Nullable final java.lang.String arschkrzmkzplpmlpdlq , @ android.support.annotation.NonNull final org.apache.cordova.CallbackContext mdxvgcdgtrnvmvjxfoik ) { showDocumentForUri ( gvlnleoplxosbznctdop , mzxhjsmfqdexpvdyfwnk , arschkrzmkzplpmlpdlq ) ; mdxvgcdgtrnvmvjxfoik . success () ; } <s> private void showDocument ( @ android.support.annotation.NonNull android.net.Uri gvlnleoplxosbznctdop , @ android.support.annotation.NonNull final com.pspdfkit.mzxhjsmfqdexpvdyfwnk.activity.PdfActivityConfiguration mzxhjsmfqdexpvdyfwnk , @ android.support.annotation.Nullable final java.lang.String arschkrzmkzplpmlpdlq , @ android.support.annotation.NonNull final org.apache.cordova.CallbackContext mdxvgcdgtrnvmvjxfoik ) { showDocumentForUri ( gvlnleoplxosbznctdop , mzxhjsmfqdexpvdyfwnk , arschkrzmkzplpmlpdlq ) ; mdxvgcdgtrnvmvjxfoik . success () ; } <s> Fix compile error
fix_before_refactoring: private void showDocument ( @ android.support.annotation.NonNull android.net.Uri documentUri , @ android.support.annotation.Nullable final java.lang.String password , @ android.support.annotation.NonNull final com.pspdfkit.configuration.activity.PdfActivityConfiguration configuration , @ android.support.annotation.NonNull final org.apache.cordova.CallbackContext callbackContext ) { showDocumentForUri ( documentUri , password , configuration ) ; callbackContext . success () ; }
fix_after_refactoring: private void showDocument ( @ android.support.annotation.NonNull android.net.Uri gvlnleoplxosbznctdop , @ android.support.annotation.Nullable final java.lang.String arschkrzmkzplpmlpdlq , @ android.support.annotation.NonNull final com.pspdfkit.mzxhjsmfqdexpvdyfwnk.activity.PdfActivityConfiguration mzxhjsmfqdexpvdyfwnk , @ android.support.annotation.NonNull final org.apache.cordova.CallbackContext mdxvgcdgtrnvmvjxfoik ) { showDocumentForUri ( gvlnleoplxosbznctdop , arschkrzmkzplpmlpdlq , mzxhjsmfqdexpvdyfwnk ) ; mdxvgcdgtrnvmvjxfoik . success () ; }
× fix_prediction_before: private void showDocument ( @ android.support.annotation.NonNull android.net.Uri document , @ android.support.annotation.Nullable final com.pspdfkit.cordova.configuration.activity.PdfActivity password , @ android.support.annotation.Nullable final java.lang.String callbackContext ) { callbackContext . showDocument ( document , password , callbackContext ) ; }
× fix_prediction_after: private void showDocument ( @ android.support.annotation.NonNull android.net.Uri android.Uri android.os.Uri tzplo , @ android.support.annotation.Nullable final java.lang.String mdzh ) { showDocumentlnd ( mlzfonzxtrnd.qxtrndqxtrndikzxtrnd.Pdfxtrnxtrnd.activity . class , mdx , mPdfCallback ) ; }

line_index: 147
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { if ( ( originalFile ) != null ) { mplayer . play ( originalFile ) ; } } <s> @ java.lang.Override public void onClick ( android.view.View v ) { if ( ( originalFile ) != null ) { mplayer . play ( originalFile ) ; } } <s> Fix ui shifting issues
bug_after_refactoring: @ japlzgrmcpyybpispchvyga.lang.Oplzgrmcpyybpispchvygerride public plzgrmcpyybpispchvygoid onClick ( android.plzgrmcpyybpispchvygiew.View plzgrmcpyybpispchvyg ) { if ( ( originalFile ) != null ) { mplayer . play ( originalFile ) ; } } <s> @ japlzgrmcpyybpispchvyga.lang.Oplzgrmcpyybpispchvygerride public plzgrmcpyybpispchvygoid onClick ( android.plzgrmcpyybpispchvygiew.View plzgrmcpyybpispchvyg ) { if ( ( originalFile ) != null ) { mplayer . play ( originalFile ) ; } } <s> Fix ui shifting issues
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { mplayer . play ( originalFile ) ; }
fix_after_refactoring: @ japlzgrmcpyybpispchvyga.lang.Oplzgrmcpyybpispchvygerride public plzgrmcpyybpispchvygoid onClick ( android.plzgrmcpyybpispchvygiew.View plzgrmcpyybpispchvyg ) { mplayer . play ( originalFile ) ; }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { if ( ( originalFile ) != null ) { mplayer . playFile ( originalFile ) ; } }
× fix_prediction_after: @ japlzgrisppyvychisp.bpygychisp.vispygyzgrisp.bp.OgrispOgrisp { if ( ( mOchispFileView ) != null ) { plyzgrychychychyz.bpygy.bpygyzgry.Ochisp . play ( mFileView ) ; } }

line_index: 148
bug_before_refactoring: public static void init ( com.alex.code.foundation.App app ) { com.alex.code.foundation.di.component.DaggerAppComponent . builder () . create ( app ) . inject ( app ) ; } <s> public static void init ( com.alex.code.foundation.App app ) { com.alex.code.foundation.di.component.DaggerAppComponent . builder () . create ( app ) . inject ( app ) ; } <s> fix some di issue
bug_after_refactoring: public static void init ( com.alex.code.foundation.App ticswlezpgfxigipxvvp ) { com.alex.code.foundation.di.component.DaggerAppComponent . builder () . create ( ticswlezpgfxigipxvvp ) . inject ( ticswlezpgfxigipxvvp ) ; } <s> public static void init ( com.alex.code.foundation.App ticswlezpgfxigipxvvp ) { com.alex.code.foundation.di.component.DaggerAppComponent . builder () . create ( ticswlezpgfxigipxvvp ) . inject ( ticswlezpgfxigipxvvp ) ; } <s> fix some di issue
fix_before_refactoring: public static void init ( com.alex.code.foundation.App app ) { com.alex.code.foundation.di.component.DaggerAppComponent . create () . inject ( app ) ; }
fix_after_refactoring: public static void init ( com.alex.code.foundation.App ticswlezpgfxigipxvvp ) { com.alex.code.foundation.di.component.DaggerAppComponent . create () . inject ( ticswlezpgfxigipxvvp ) ; }
× fix_prediction_before: public static void init ( com.alex.foundcode.App app ) { com.alex.foundcode.component.App . createComponent ( app ) ; }
× fix_prediction_after: public static void init ( com.alexfoundation.swiple.App t ) { tfxz.swagger.App . createComponent () ; }

line_index: 149
bug_before_refactoring: @ java.lang.Override public void onPageSelected ( int position ) { currentTab = mViewPager . getCurrentItem () ; } <s> @ java.lang.Override public void onPageSelected ( int position ) { currentTab = mViewPager . getCurrentItem () ; } <s> multi select is working properly. need to fix deleting games bugs
bug_after_refactoring: @ java.lang.Override public void onPageSelected ( int pvjsegwirogevnnigoji ) { currentTab = mViewPager . getCurrentItem () ; } <s> @ java.lang.Override public void onPageSelected ( int pvjsegwirogevnnigoji ) { currentTab = mViewPager . getCurrentItem () ; } <s> multi select is working properly. need to fix deleting games bugs
fix_before_refactoring: @ java.lang.Override public void onPageSelected ( int position ) { currentTab = position ; }
fix_after_refactoring: @ java.lang.Override public void onPageSelected ( int pvjsegwirogevnnigoji ) { currentTab = pvjsegwirogevnnigoji ; }
× fix_prediction_before: @ java.lang.Override public void onPageSelected ( int position ) {}
× fix_prediction_after: @ java.lang.Override public void onPageSelected ( int pv ) {}

line_index: 150
bug_before_refactoring: void onError ( java.lang.Exception ex ) ; <s> void onError ( java.lang.Exception ex ) ; <s> fix issue with getting status. pass the message in the response handler for error case.
bug_after_refactoring: void onError ( java.lang.Exception tmjplxdkhxsxfxcsalem ) ; <s> void onError ( java.lang.Exception tmjplxdkhxsxfxcsalem ) ; <s> fix issue with getting status. pass the message in the response handler for error case.
fix_before_refactoring: void onError ( java.lang.Exception ex , java.lang.String message ) ;
fix_after_refactoring: void onError ( java.lang.Exception tmjplxdkhxsxfxcsalem , java.lang.String message ) ;
× fix_prediction_before: void onError ( java.lang.Throwable ex ) ;
× fix_prediction_after: void onError ( java.lang.Throwable tm ) ;

line_index: 151
bug_before_refactoring: public void setTime ( int count ) { lblTimer . setText ( ( "" + count ) ) ; } <s> public void setTime ( int count ) { lblTimer . setText ( ( "" + count ) ) ; } <s> fix textview display issue
bug_after_refactoring: public void setTime ( int zrahbxarreizddooubbq ) { lblTimer . setText ( ( "" + zrahbxarreizddooubbq ) ) ; } <s> public void setTime ( int zrahbxarreizddooubbq ) { lblTimer . setText ( ( "" + zrahbxarreizddooubbq ) ) ; } <s> fix textview display issue
fix_before_refactoring: public void setTime ( int count ) { if ( count < 0 ) { lblTimer . setText ( "" ) ; } else { lblTimer . setText ( ( "" + count ) ) ; } }
fix_after_refactoring: public void setTime ( int zrahbxarreizddooubbq ) { if ( zrahbxarreizddooubbq < 0 ) { lblTimer . setText ( "" ) ; } else { lblTimer . setText ( ( "" + zrahbxarreizddooubbq ) ) ; } }
× fix_prediction_before: public void setTime ( int count ) { lblTimer . setText ( ( count + "" ) ) ; }
× fix_prediction_after: public void setTime ( int zrah ) { lblizarTimer . setText ( ( "" + lbl ) ) ; }

line_index: 152
bug_before_refactoring: public void drive ( edu.wpi.first.wpilibj.Joystick joy ) { DRIVE . arcadeDrive ( ( - ( joy . getRawAxis ( 1 ) ) ) , ( - ( joy . getRawAxis ( 2 ) ) ) , true ) ; } <s> public void drive ( edu.wpi.first.wpilibj.Joystick joy ) { DRIVE . arcadeDrive ( ( - ( joy . getRawAxis ( 1 ) ) ) , ( - ( joy . getRawAxis ( 2 ) ) ) , true ) ; } <s> Fixing Bugs.
bug_after_refactoring: public void drive ( edu.wpi.first.wpilibj.Joystick gszzvzclnprzbjfdwaux ) { DRIVE . arcadeDrive ( ( - ( gszzvzclnprzbjfdwaux . getRawAxis ( 1 ) ) ) , ( - ( gszzvzclnprzbjfdwaux . getRawAxis ( 2 ) ) ) , true ) ; } <s> public void drive ( edu.wpi.first.wpilibj.Joystick gszzvzclnprzbjfdwaux ) { DRIVE . arcadeDrive ( ( - ( gszzvzclnprzbjfdwaux . getRawAxis ( 1 ) ) ) , ( - ( gszzvzclnprzbjfdwaux . getRawAxis ( 2 ) ) ) , true ) ; } <s> Fixing Bugs.
fix_before_refactoring: public void drive ( edu.wpi.first.wpilibj.Joystick joy ) { DRIVE . arcadeDrive ( ( - ( joy . getRawAxis ( 1 ) ) ) , ( - ( joy . getRawAxis ( 0 ) ) ) , true ) ; }
fix_after_refactoring: public void drive ( edu.wpi.first.wpilibj.Joystick gszzvzclnprzbjfdwaux ) { DRIVE . arcadeDrive ( ( - ( gszzvzclnprzbjfdwaux . getRawAxis ( 1 ) ) ) , ( - ( gszzvzclnprzbjfdwaux . getRawAxis ( 0 ) ) ) , true ) ; }
× fix_prediction_before: public void drive ( edu.wpi.first.wpilibj.Joystick joy ) { DRIVE . arcadeDrive ( ( - ( joy . getRawAxis ( - 1 ) ) ) , joy . getRawAxis ( 2 ) , true ) ; }
× fix_prediction_after: public void drive ( edu.wpi.first.wpilibj.Joystick gsvuxwaprz ) { ( gszzz . getRawAxis ( ( ( - 1 ) - ( Dzzz . getRawAxis ( 1 ) ) ) ) ) , gszzz . getRawAxis ( 2 ) , true ) ; }

line_index: 153
bug_before_refactoring: @ java.lang.Override public java.lang.String apply ( org.sonar.api.platform.PluginMetadata input ) { return input . getName () ; } <s> @ java.lang.Override public java.lang.String apply ( org.sonar.api.platform.PluginMetadata input ) { return input . getName () ; } <s> SONAR-6376 fix missing package-info + some sonar issues
bug_after_refactoring: @ java.lang.Override public java.lang.String apply ( org.sonar.api.platform.PluginMetadata tktnqtqmccjkmhnlnlsf ) { return tktnqtqmccjkmhnlnlsf . getName () ; } <s> @ java.lang.Override public java.lang.String apply ( org.sonar.api.platform.PluginMetadata tktnqtqmccjkmhnlnlsf ) { return tktnqtqmccjkmhnlnlsf . getName () ; } <s> SONAR-6376 fix missing package-info + some sonar issues
fix_before_refactoring: @ java.lang.Override public java.lang.String apply ( @ javax.annotation.Nullable org.sonar.api.platform.PluginMetadata input ) { if ( input == null ) { return null ; } return input . getName () ; }
fix_after_refactoring: @ java.lang.Override public java.lang.String apply ( @ javax.annotation.Nullable org.sonar.api.platform.PluginMetadata tktnqtqmccjkmhnlnlsf ) { if ( tktnqtqmccjkmhnlnlsf == null ) { return null ; } return tktnqtqmccjkmhnlnlsf . getName () ; }
× fix_prediction_before: @ java.lang.Override public java.lang.String apply ( @ javax.annotation.Nullable org.sonarson.api.platform.PluginMetadata input ) { if ( input == null ) { return null ; } return input . getName () ; }
× fix_prediction_after: @ java.lang.Override public java.lang.String apply ( org.sonarsonjkplatform.api.PluginMetadata tk ) { return tk.mhn.cclsmccls.PluginMetadata . getName () ; }

line_index: 154
bug_before_refactoring: @ java.lang.Override public void widgetSelected ( final org.eclipse.swt.events.SelectionEvent e ) { org.eclipse.core.resources.WorkspaceJob updateGroups = new sernet.verinice.rcp.accountgroup.AccountGroupView.UpdateGroupsJob ( sernet.gs.ui.rcp.main.bsi.views.Messages.GroupView_13 , e ) ; sernet.verinice.iso27k.rcp.JobScheduler . scheduleInitJob ( updateGroups ) ; } <s> @ java.lang.Override public void widgetSelected ( final org.eclipse.swt.events.SelectionEvent e ) { org.eclipse.core.resources.WorkspaceJob updateGroups = new sernet.verinice.rcp.accountgroup.AccountGroupView.UpdateGroupsJob ( sernet.gs.ui.rcp.main.bsi.views.Messages.GroupView_13 , e ) ; sernet.verinice.iso27k.rcp.JobScheduler . scheduleInitJob ( updateGroups ) ; } <s> Fix Sonar and style issues in AccountGroupView  vn-1212
bug_after_refactoring: @ java.lang.Ovqoyyxpngzdfqtnkozmgmrridqoyyxpngzdfqtnkozmgm public void widgqoyyxpngzdfqtnkozmgmtSqoyyxpngzdfqtnkozmgmlqoyyxpngzdfqtnkozmgmctqoyyxpngzdfqtnkozmgmd ( final org.qoyyxpngzdfqtnkozmgmclipsqoyyxpngzdfqtnkozmgm.swt.qoyyxpngzdfqtnkozmgmvqoyyxpngzdfqtnkozmgmnts.SqoyyxpngzdfqtnkozmgmlqoyyxpngzdfqtnkozmgmctionEvqoyyxpngzdfqtnkozmgmnt qoyyxpngzdfqtnkozmgm ) { org.qoyyxpngzdfqtnkozmgmclipsqoyyxpngzdfqtnkozmgm.corqoyyxpngzdfqtnkozmgm.rqoyyxpngzdfqtnkozmgmsourcqoyyxpngzdfqtnkozmgms.WorkspacqoyyxpngzdfqtnkozmgmJob updatqoyyxpngzdfqtnkozmgmGroups = nqoyyxpngzdfqtnkozmgmw sqoyyxpngzdfqtnkozmgmrnqoyyxpngzdfqtnkozmgmt.vqoyyxpngzdfqtnkozmgmrinicqoyyxpngzdfqtnkozmgm.rcp.accountgroup.AccountGroupViqoyyxpngzdfqtnkozmgmw.UpdatqoyyxpngzdfqtnkozmgmGroupsJob ( sqoyyxpngzdfqtnkozmgmrnqoyyxpngzdfqtnkozmgmt.gs.ui.rcp.main.bsi.viqoyyxpngzdfqtnkozmgmws.Mqoyyxpngzdfqtnkozmgmssagqoyyxpngzdfqtnkozmgms.GroupViqoyyxpngzdfqtnkozmgmw_13 , qoyyxpngzdfqtnkozmgm ) ; sqoyyxpngzdfqtnkozmgmrnqoyyxpngzdfqtnkozmgmt.vqoyyxpngzdfqtnkozmgmrinicqoyyxpngzdfqtnkozmgm.iso27k.rcp.JobSchqoyyxpngzdfqtnkozmgmdulqoyyxpngzdfqtnkozmgmr . schqoyyxpngzdfqtnkozmgmdulqoyyxpngzdfqtnkozmgmInitJob ( updatqoyyxpngzdfqtnkozmgmGroups ) ; } <s> @ java.lang.Ovqoyyxpngzdfqtnkozmgmrridqoyyxpngzdfqtnkozmgm public void widgqoyyxpngzdfqtnkozmgmtSqoyyxpngzdfqtnkozmgmlqoyyxpngzdfqtnkozmgmctqoyyxpngzdfqtnkozmgmd ( final org.qoyyxpngzdfqtnkozmgmclipsqoyyxpngzdfqtnkozmgm.swt.qoyyxpngzdfqtnkozmgmvqoyyxpngzdfqtnkozmgmnts.SqoyyxpngzdfqtnkozmgmlqoyyxpngzdfqtnkozmgmctionEvqoyyxpngzdfqtnkozmgmnt qoyyxpngzdfqtnkozmgm ) { org.qoyyxpngzdfqtnkozmgmclipsqoyyxpngzdfqtnkozmgm.corqoyyxpngzdfqtnkozmgm.rqoyyxpngzdfqtnkozmgmsourcqoyyxpngzdfqtnkozmgms.WorkspacqoyyxpngzdfqtnkozmgmJob updatqoyyxpngzdfqtnkozmgmGroups = nqoyyxpngzdfqtnkozmgmw sqoyyxpngzdfqtnkozmgmrnqoyyxpngzdfqtnkozmgmt.vqoyyxpngzdfqtnkozmgmrinicqoyyxpngzdfqtnkozmgm.rcp.accountgroup.AccountGroupViqoyyxpngzdfqtnkozmgmw.UpdatqoyyxpngzdfqtnkozmgmGroupsJob ( sqoyyxpngzdfqtnkozmgmrnqoyyxpngzdfqtnkozmgmt.gs.ui.rcp.main.bsi.viqoyyxpngzdfqtnkozmgmws.Mqoyyxpngzdfqtnkozmgmssagqoyyxpngzdfqtnkozmgms.GroupViqoyyxpngzdfqtnkozmgmw_13 , qoyyxpngzdfqtnkozmgm ) ; sqoyyxpngzdfqtnkozmgmrnqoyyxpngzdfqtnkozmgmt.vqoyyxpngzdfqtnkozmgmrinicqoyyxpngzdfqtnkozmgm.iso27k.rcp.JobSchqoyyxpngzdfqtnkozmgmdulqoyyxpngzdfqtnkozmgmr . schqoyyxpngzdfqtnkozmgmdulqoyyxpngzdfqtnkozmgmInitJob ( updatqoyyxpngzdfqtnkozmgmGroups ) ; } <s> Fix Sonar and style issues in AccountGroupView  vn-1212
fix_before_refactoring: @ java.lang.Override public void widgetSelected ( final org.eclipse.swt.events.SelectionEvent event ) { org.eclipse.core.resources.WorkspaceJob updateGroups = new sernet.verinice.rcp.accountgroup.AccountGroupView.UpdateGroupsJob ( sernet.gs.ui.rcp.main.bsi.views.Messages.GroupView_13 , event ) ; sernet.verinice.iso27k.rcp.JobScheduler . scheduleInitJob ( updateGroups ) ; }
fix_after_refactoring: @ java.lang.Ovqoyyxpngzdfqtnkozmgmrridqoyyxpngzdfqtnkozmgm public void widgqoyyxpngzdfqtnkozmgmtSqoyyxpngzdfqtnkozmgmlqoyyxpngzdfqtnkozmgmctqoyyxpngzdfqtnkozmgmd ( final org.qoyyxpngzdfqtnkozmgmclipsqoyyxpngzdfqtnkozmgm.swt.qoyyxpngzdfqtnkozmgmvqoyyxpngzdfqtnkozmgmnts.SqoyyxpngzdfqtnkozmgmlqoyyxpngzdfqtnkozmgmctionEvqoyyxpngzdfqtnkozmgmnt qoyyxpngzdfqtnkozmgmvqoyyxpngzdfqtnkozmgmnt ) { org.qoyyxpngzdfqtnkozmgmclipsqoyyxpngzdfqtnkozmgm.corqoyyxpngzdfqtnkozmgm.rqoyyxpngzdfqtnkozmgmsourcqoyyxpngzdfqtnkozmgms.WorkspacqoyyxpngzdfqtnkozmgmJob updatqoyyxpngzdfqtnkozmgmGroups = nqoyyxpngzdfqtnkozmgmw sqoyyxpngzdfqtnkozmgmrnqoyyxpngzdfqtnkozmgmt.vqoyyxpngzdfqtnkozmgmrinicqoyyxpngzdfqtnkozmgm.rcp.accountgroup.AccountGroupViqoyyxpngzdfqtnkozmgmw.UpdatqoyyxpngzdfqtnkozmgmGroupsJob ( sqoyyxpngzdfqtnkozmgmrnqoyyxpngzdfqtnkozmgmt.gs.ui.rcp.main.bsi.viqoyyxpngzdfqtnkozmgmws.Mqoyyxpngzdfqtnkozmgmssagqoyyxpngzdfqtnkozmgms.GroupViqoyyxpngzdfqtnkozmgmw_13 , qoyyxpngzdfqtnkozmgmvqoyyxpngzdfqtnkozmgmnt ) ; sqoyyxpngzdfqtnkozmgmrnqoyyxpngzdfqtnkozmgmt.vqoyyxpngzdfqtnkozmgmrinicqoyyxpngzdfqtnkozmgm.iso27k.rcp.JobSchqoyyxpngzdfqtnkozmgmdulqoyyxpngzdfqtnkozmgmr . schqoyyxpngzdfqtnkozmgmdulqoyyxpngzdfqtnkozmgmInitJob ( updatqoyyxpngzdfqtnkozmgmGroups ) ; }
× fix_prediction_before: @ java.lang.Override public void widgetSelected ( final org.eclipse.swt.events.SelectionEvent event ) {}
× fix_prediction_after: @ java.lang.Overrideqyyxqyyxqz.pngyyxqkxqkpngyyxqkpngyyxqkpngyyxqkpngyyxqkpngyyxqkpngyyxqkpngyyxqkpngyyxqkpngyyxqkpngyyxqkpngyyxqyyxqkpngyyxqkpngyyxqkpngyyxqkpngyyxqyyxqkpngyyxqkpngyyxqyyxqkpngyyxqkpngyyxqkpngyyxqkpngyyxqyyxqkpngyyxqkpngyyxqyyxqtdfyyxqkpngyyxqldfyyxqldfyyxqkxqkxqldfyyxqldfyyxqldfyyxqkxqldfyyxqldfyyxqkxqldfyyxqldfyyxqldfyyxqkpngo.mxqldfyyxqldfyyxqkxqkxqldfyyxqkxqldfyyxqldfyyxqkxqkpngo.mxqldfyyxqkxqcdfyyxqkxqldfyyxqkxqldfyyxqkxqldfyyxqkpngo.mxqldfyyxqkxqkxqldfyyxmxqldfyyxqkpngo.pngo.mxqldfyyxmxqldfyyxqldfyyxqkxqkxqkxmxqldfyyxqldfyyxqkxm/cdfyyxsimgmoGyyxmMoyyxmMoyyxmMoyyxmMyyxmMoyyxmMyyxmMyyxmMyyxmMyyxmMyyxmMyyxmMyyxmMyyxmMyyxmMyyxmMyyxmMyyxmMyyxmMyyxmMyyxmMyyxmMyyxmMyyx

line_index: 155
bug_before_refactoring: public final void fireExtensionRemoved ( at.netcrawler.network.model.NetworkModelExtension extension ) { for ( at.netcrawler.network.model.NetworkModelListener listener : listeners ) { listener . extensionRemoved ( extension ) ; } } <s> public final void fireExtensionRemoved ( at.netcrawler.network.model.NetworkModelExtension extension ) { for ( at.netcrawler.network.model.NetworkModelListener listener : listeners ) { listener . extensionRemoved ( extension ) ; } } <s> fixes network model bugs
bug_after_refactoring: public final void fireExtensionRemoved ( at.netcrawler.network.model.NetworkModelExtension jzxedbkzvvkvnjxspjbc ) { for ( at.netcrawler.network.model.NetworkModelListener listener : listeners ) { listener . jzxedbkzvvkvnjxspjbcRemoved ( jzxedbkzvvkvnjxspjbc ) ; } } <s> public final void fireExtensionRemoved ( at.netcrawler.network.model.NetworkModelExtension jzxedbkzvvkvnjxspjbc ) { for ( at.netcrawler.network.model.NetworkModelListener listener : listeners ) { listener . jzxedbkzvvkvnjxspjbcRemoved ( jzxedbkzvvkvnjxspjbc ) ; } } <s> fixes network model bugs
fix_before_refactoring: private final void fireExtensionRemoved ( at.netcrawler.network.model.NetworkModelExtension extension ) { for ( at.netcrawler.network.model.NetworkModelListener listener : listeners ) { listener . extensionRemoved ( extension ) ; } }
fix_after_refactoring: private final void fireExtensionRemoved ( at.netcrawler.network.model.NetworkModelExtension jzxedbkzvvkvnjxspjbc ) { for ( at.netcrawler.network.model.NetworkModelListener listener : listeners ) { listener . jzxedbkzvvkvnjxspjbcRemoved ( jzxedbkzvvkvnjxspjbc ) ; } }
× fix_prediction_before: private final void fireExtensionRemoved ( at.netcrawler.network.model.NetworkModel extension ) { for ( at.netcrawler.network.model.NetworkModelListener listener : listeners ) { listener . fireExtensionRemoved ( extension ) ; } }
× fix_prediction_after: public final void fireExtensionRemoved ( atzcrawler.networkzcrawler.model.NetworkModel jzcrawler ) { for ( int i = 0 ; i < ( listeners . size () ) ; i ++ ) { listener . fireExtensionRemoved ( jzcrawler.xzcrawler.model.NetworkModel.xjx ) ; } }

line_index: 157
bug_before_refactoring: public void setExported ( boolean isExported ) { mIsExported = ( isExported ) ? 1 : 0 ; } <s> public void setExported ( boolean isExported ) { mIsExported = ( isExported ) ? 1 : 0 ; } <s> Added UX for explicit creation of transaction templates  Fixed: bug causing no transaction templates to be saved Autocomplete in the transaction description field only filters through templates Recurring transactions always trigger a template to be saved  TODO: Add view for viewing  editing and deleting existing transaction templates
bug_after_refactoring: public void setExported ( boolean laoedilvdscrklrnpybn ) { mIsExported = ( laoedilvdscrklrnpybn ) ? 1 : 0 ; } <s> public void setExported ( boolean laoedilvdscrklrnpybn ) { mIsExported = ( laoedilvdscrklrnpybn ) ? 1 : 0 ; } <s> Added UX for explicit creation of transaction templates  Fixed: bug causing no transaction templates to be saved Autocomplete in the transaction description field only filters through templates Recurring transactions always trigger a template to be saved  TODO: Add view for viewing  editing and deleting existing transaction templates
fix_before_refactoring: public void setExported ( boolean isExported ) { mIsExported = isExported ; }
fix_after_refactoring: public void setExported ( boolean laoedilvdscrklrnpybn ) { mIsExported = laoedilvdscrklrnpybn ; }
× fix_prediction_before: public void setExported ( boolean isExported ) { mIsExported = mIsExported ; }
× fix_prediction_after: public void setExported ( boolean lilao ) { mIsExported = lilklr ; }

line_index: 158
bug_before_refactoring: public static void runRootCommand ( com.stericson.RootShell.execution.Command command ) throws com.stericson.RootShell.exceptions.RootDeniedException , java.io.IOException , java.util.concurrent.TimeoutException { com.stericson.RootShell.execution.Shell . startRootShell () . add ( command ) ; } <s> public static void runRootCommand ( com.stericson.RootShell.execution.Command command ) throws com.stericson.RootShell.exceptions.RootDeniedException , java.io.IOException , java.util.concurrent.TimeoutException { com.stericson.RootShell.execution.Shell . startRootShell () . add ( command ) ; } <s> Updated RootShell  Fixed some bugs related to re-using commands (disallowed command re-use)
bug_after_refactoring: public static void runRootCommand ( com.stericson.RootShell.execution.Command gdgbaapzxgjadfyoarcc ) throws com.stericson.RootShell.exceptions.RootDeniedException , java.io.IOException , java.util.concurrent.TimeoutException { com.stericson.RootShell.execution.Shell . startRootShell () . add ( gdgbaapzxgjadfyoarcc ) ; } <s> public static void runRootCommand ( com.stericson.RootShell.execution.Command gdgbaapzxgjadfyoarcc ) throws com.stericson.RootShell.exceptions.RootDeniedException , java.io.IOException , java.util.concurrent.TimeoutException { com.stericson.RootShell.execution.Shell . startRootShell () . add ( gdgbaapzxgjadfyoarcc ) ; } <s> Updated RootShell  Fixed some bugs related to re-using commands (disallowed command re-use)
fix_before_refactoring: public static com.stericson.RootShell.execution.Command runRootCommand ( com.stericson.RootShell.execution.Command command ) throws com.stericson.RootShell.exceptions.RootDeniedException , java.io.IOException , java.util.concurrent.TimeoutException { return com.stericson.RootShell.execution.Shell . startRootShell () . add ( command ) ; }
fix_after_refactoring: public static com.stericson.RootShell.execution.Command runRootCommand ( com.stericson.RootShell.execution.Command gdgbaapzxgjadfyoarcc ) throws com.stericson.RootShell.exceptions.RootDeniedException , java.io.IOException , java.util.concurrent.TimeoutException { return com.stericson.RootShell.execution.Shell . startRootShell () . add ( gdgbaapzxgjadfyoarcc ) ; }
× fix_prediction_before: public static void runRootCommand ( com.stericson.RootShell.execution.Command command ) throws java.io.IOException , com.stericson.RootShell.execution.CommandException , java.util.concurrent.TimeoutException { com.stericson.RootShell.RootShell . startRootShell () . add ( command ) ; }
× fix_prediction_after: public static void runRootCommand ( com.stericson.sona.execution.CommandShell ) throws java.io.IOException , java.io.IOException , java.util.concurrent.TimeoutException { com.stericson.sona.gcc.RootShell . startRootShell () . add ( com.stericsongba.gccxsterster.RootShell . runRootCommand ( debug ) ) ; }

line_index: 159
bug_before_refactoring: double kNearestNeighbours ( double [] pos , int k , dist.IMetric metric ) { giant_galaxy.IFixedPriorityQueue queue = new giant_galaxy.LinearFixedPriorityQueue ( k ) ; kNearestNeighbours ( pos , k , root , queue , metric ) ; return queue . max () ; } <s> double kNearestNeighbours ( double [] pos , int k , dist.IMetric metric ) { giant_galaxy.IFixedPriorityQueue queue = new giant_galaxy.LinearFixedPriorityQueue ( k ) ; kNearestNeighbours ( pos , k , root , queue , metric ) ; return queue . max () ; } <s> Fixed k Nearest Neighbours  - Added function to determine whether tree is finished building. - Added documentation - Fixed bug in ballwalk where distance to non existing childs would be   calculated. - Extended IFixedPriorityQueue by method indices()
bug_after_refactoring: double uugltyylqqulesewgrqgNearestNeighbours ( double [] abuugltyylqqulesewgrqgwnwagpcdnuugltyylqqulesewgrqgarcczie , int uugltyylqqulesewgrqg , dist.IMetric yxokfjkobuxvzfkyciat ) { giant_galaxy.IFixedPriorityQueue queue = new giant_galaxy.LinearFixedPriorityQueue ( uugltyylqqulesewgrqg ) ; uugltyylqqulesewgrqgNearestNeighbours ( abuugltyylqqulesewgrqgwnwagpcdnuugltyylqqulesewgrqgarcczie , uugltyylqqulesewgrqg , root , queue , yxokfjkobuxvzfkyciat ) ; return queue . max () ; } <s> double uugltyylqqulesewgrqgNearestNeighbours ( double [] abuugltyylqqulesewgrqgwnwagpcdnuugltyylqqulesewgrqgarcczie , int uugltyylqqulesewgrqg , dist.IMetric yxokfjkobuxvzfkyciat ) { giant_galaxy.IFixedPriorityQueue queue = new giant_galaxy.LinearFixedPriorityQueue ( uugltyylqqulesewgrqg ) ; uugltyylqqulesewgrqgNearestNeighbours ( abuugltyylqqulesewgrqgwnwagpcdnuugltyylqqulesewgrqgarcczie , uugltyylqqulesewgrqg , root , queue , yxokfjkobuxvzfkyciat ) ; return queue . max () ; } <s> Fixed k Nearest Neighbours  - Added function to determine whether tree is finished building. - Added documentation - Fixed bug in ballwalk where distance to non existing childs would be   calculated. - Extended IFixedPriorityQueue by method indices()
fix_before_refactoring: giant_galaxy.IFixedPriorityQueue kNearestNeighbours ( double [] pos , int k , dist.IMetric metric ) { giant_galaxy.IFixedPriorityQueue queue = new giant_galaxy.LinearFixedPriorityQueue ( k ) ; kNearestNeighbours ( pos , k , root , queue , metric ) ; return queue ; }
fix_after_refactoring: giant_galaxy.IFixedPriorityQueue uugltyylqqulesewgrqgNearestNeighbours ( double [] abuugltyylqqulesewgrqgwnwagpcdnuugltyylqqulesewgrqgarcczie , int uugltyylqqulesewgrqg , dist.IMetric yxokfjkobuxvzfkyciat ) { giant_galaxy.IFixedPriorityQueue queue = new giant_galaxy.LinearFixedPriorityQueue ( uugltyylqqulesewgrqg ) ; uugltyylqqulesewgrqgNearestNeighbours ( abuugltyylqqulesewgrqgwnwagpcdnuugltyylqqulesewgrqgarcczie , uugltyylqqulesewgrqg , root , queue , yxokfjkobuxvzfkyciat ) ; return queue ; }
× fix_prediction_before: double k = kiantNeighboursNeighbours ( pos , double [] k ) ;
× fix_prediction_after: double uugltyqqewq = 0 ;

line_index: 160
bug_before_refactoring: public void addPoints ( java.lang.Integer [] deltas ) { if ( deltas != null ) { for ( int delta : deltas ) { addPoint ( delta ) ; } } } <s> public void addPoints ( java.lang.Integer [] deltas ) { if ( deltas != null ) { for ( int delta : deltas ) { addPoint ( delta ) ; } } } <s> Merge branch 'davidohana-master' into develop Add support for MAC and fix problems integer to long
bug_after_refactoring: public void addPoints ( java.lang.Integer [] ifubobpfnspidtbhsjfm ) { if ( ifubobpfnspidtbhsjfm != null ) { for ( int delta : ifubobpfnspidtbhsjfm ) { addPoint ( delta ) ; } } } <s> public void addPoints ( java.lang.Integer [] ifubobpfnspidtbhsjfm ) { if ( ifubobpfnspidtbhsjfm != null ) { for ( int delta : ifubobpfnspidtbhsjfm ) { addPoint ( delta ) ; } } } <s> Merge branch 'davidohana-master' into develop Add support for MAC and fix problems integer to long
fix_before_refactoring: public void addPoints ( java.lang.Long [] deltas ) { if ( deltas != null ) { for ( long delta : deltas ) { addPoint ( delta ) ; } } }
fix_after_refactoring: public void addPoints ( java.lang.Long [] ifubobpfnspidtbhsjfm ) { if ( ifubobpfnspidtbhsjfm != null ) { for ( long delta : ifubobpfnspidtbhsjfm ) { addPoint ( delta ) ; } } }
× fix_prediction_before: public void addPoints ( java.lang.Integer []D ) { for ( int delta : this ) { if ( delta != null ) { addPoint ( delta ) ; } } }
× fix_prediction_after: public void addPoints ( java.lang.Integer [] if ) { for ( int deltaobubp ) { if ( ( this .fnfmspjobidobubp ) != null ) { for ( int i = delta ; } } }

line_index: 161
bug_before_refactoring: public void addX ( final double x ) { this . x += x ; } <s> public void addX ( final double x ) { this . x += x ; } <s> Fix checkstyle errors   Checkstyle errors fixed in Track  State and Point3D
bug_after_refactoring: public void addX ( final double riuhmghrrwwgafmydxmj ) { this . riuhmghrrwwgafmydxmj += riuhmghrrwwgafmydxmj ; } <s> public void addX ( final double riuhmghrrwwgafmydxmj ) { this . riuhmghrrwwgafmydxmj += riuhmghrrwwgafmydxmj ; } <s> Fix checkstyle errors   Checkstyle errors fixed in Track  State and Point3D
fix_before_refactoring: public final void addX ( final double add ) { this . x += add ; }
fix_after_refactoring: public final void addX ( final double add ) { this . riuhmghrrwwgafmydxmj += add ; }
× fix_prediction_before: public final void addX ( final double x ) { this . x += x ; }
× fix_prediction_after: public void addX ( final double righm ) { this . rigaf = righm ; }

line_index: 162
bug_before_refactoring: @ java.lang.Override public int compare ( double o2 , double o1 ) { return o1 < o2 ? - 1 : o1 == o2 ? 0 : 1 ; } <s> @ java.lang.Override public int compare ( double o2 , double o1 ) { return o1 < o2 ? - 1 : o1 == o2 ? 0 : 1 ; } <s> cosmetic cleanups and a fix for issue #112
bug_after_refactoring: @ java.lang.Override public int compare ( double gxekrodgwevromdrcnwb , double lquxmojjakavdkkrcmai ) { return lquxmojjakavdkkrcmai < gxekrodgwevromdrcnwb ? - 1 : lquxmojjakavdkkrcmai == gxekrodgwevromdrcnwb ? 0 : 1 ; } <s> @ java.lang.Override public int compare ( double gxekrodgwevromdrcnwb , double lquxmojjakavdkkrcmai ) { return lquxmojjakavdkkrcmai < gxekrodgwevromdrcnwb ? - 1 : lquxmojjakavdkkrcmai == gxekrodgwevromdrcnwb ? 0 : 1 ; } <s> cosmetic cleanups and a fix for issue #112
fix_before_refactoring: @ java.lang.Override public int compare ( double o2 , double o1 ) { return java.lang.Double . compare ( o1 , o2 ) ; }
fix_after_refactoring: @ java.lang.Override public int compare ( double gxekrodgwevromdrcnwb , double lquxmojjakavdkkrcmai ) { return java.lang.Double . compare ( lquxmojjakavdkkrcmai , gxekrodgwevromdrcnwb ) ; }
× fix_prediction_before: @ java.lang.Override public int compare ( double o1 , double o2 ) { return o1 < o2 ? - 1 : 1 ; }
× fix_prediction_after: @ java.lang.Override public int compare ( double gekxeknd ) { return 1 ; }

line_index: 163
bug_before_refactoring: public static int o ( int oe ) { return oe > > 16 ; } <s> public static int o ( int oe ) { return oe > > 16 ; } <s> Fix a bug with the negative "Opening" values in the opening-endgame arithmetic.
bug_after_refactoring: public static int o ( int xjnqnwzojqopqyocohnd ) { return xjnqnwzojqopqyocohnd > > 16 ; } <s> public static int o ( int xjnqnwzojqopqyocohnd ) { return xjnqnwzojqopqyocohnd > > 16 ; } <s> Fix a bug with the negative "Opening" values in the opening-endgame arithmetic.
fix_before_refactoring: public static int o ( int oe ) { int i = oe > > 16 ; return i < 0 ? i + 1 : i ; }
fix_after_refactoring: public static int o ( int xjnqnwzojqopqyocohnd ) { int i = xjnqnwzojqopqyocohnd > > 16 ; return i < 0 ? i + 1 : i ; }
× fix_prediction_before: public static int o int o ( int o ) { return ( o - 1 ) > > 16 ? o.e : - 1 ; }
× fix_prediction_after: public static int oj ( int x ) { return ( xqnqohzohqjopendq ) > > 16 ; }

line_index: 164
bug_before_refactoring: @ java.lang.Override public void onCreate ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setRequestedOrientation ( ActivityInfo.SCREEN_ORIENTATION_PORTRAIT ) ; getWindow () . setSoftInputMode ( WindowManager.LayoutParams.SOFT_INPUT_STATE_HIDDEN ) ; } <s> @ java.lang.Override public void onCreate ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setRequestedOrientation ( ActivityInfo.SCREEN_ORIENTATION_PORTRAIT ) ; getWindow () . setSoftInputMode ( WindowManager.LayoutParams.SOFT_INPUT_STATE_HIDDEN ) ; } <s> bottombar added home activity added overflowmenu edited toolbar problem fixed
bug_after_refactoring: @ java.lang.Override public void onCreate ( @ android.support.annotation.Nullable android.os.Bundle fcqzmhguoqzpszrhjnkm ) { super . onCreate ( fcqzmhguoqzpszrhjnkm ) ; setRequestedOrientation ( ActivityInfo.SCREEN_ORIENTATION_PORTRAIT ) ; getWindow () . setSoftInputMode ( WindowManager.LayoutParams.SOFT_INPUT_STATE_HIDDEN ) ; } <s> @ java.lang.Override public void onCreate ( @ android.support.annotation.Nullable android.os.Bundle fcqzmhguoqzpszrhjnkm ) { super . onCreate ( fcqzmhguoqzpszrhjnkm ) ; setRequestedOrientation ( ActivityInfo.SCREEN_ORIENTATION_PORTRAIT ) ; getWindow () . setSoftInputMode ( WindowManager.LayoutParams.SOFT_INPUT_STATE_HIDDEN ) ; } <s> bottombar added home activity added overflowmenu edited toolbar problem fixed
fix_before_refactoring: @ java.lang.Override protected void onCreate ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setRequestedOrientation ( ActivityInfo.SCREEN_ORIENTATION_PORTRAIT ) ; getWindow () . setSoftInputMode ( WindowManager.LayoutParams.SOFT_INPUT_STATE_HIDDEN ) ; }
fix_after_refactoring: @ java.lang.Override protected void onCreate ( @ android.support.annotation.Nullable android.os.Bundle fcqzmhguoqzpszrhjnkm ) { super . onCreate ( fcqzmhguoqzpszrhjnkm ) ; setRequestedOrientation ( ActivityInfo.SCREEN_ORIENTATION_PORTRAIT ) ; getWindow () . setSoftInputMode ( WindowManager.LayoutParams.SOFT_INPUT_STATE_HIDDEN ) ; }
× fix_prediction_before: @ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; editedInfo . getWindow () . setRequestedOrientation ( WindowManager.LayoutParams.SCREEN_HIT_PORTRAIT_STATE_PORTRAIT ) ; setSoftInput () ; }
× fix_prediction_after: @ java.lang.Override public void onCreate ( @ android.support.annotation.Nullable android.os.Bundle type ) { super . onCreate ( view ) ; setRequestedMode ( fcz.nzhqguo.nzrhps.hpsbarjps.LayoutParams.SOKIT_INPUT_SCREEN_PORT ) ; }

line_index: 165
bug_before_refactoring: @ java.lang.Override public void write ( int b ) throws java.io.IOException {} <s> @ java.lang.Override public void write ( int b ) throws java.io.IOException {} <s> Server and Client consoles functioning  fixed a lag bug in the console output code caused by the textArea append being called from a thread other than the EDT added code to clear consoles both IP labels properly display the respective IPs on window entry
bug_after_refactoring: @ java.lang.Override pulkxgdrmnyyxvccksridilic void write ( int lkxgdrmnyyxvccksridi ) throws java.io.IOException {} <s> @ java.lang.Override pulkxgdrmnyyxvccksridilic void write ( int lkxgdrmnyyxvccksridi ) throws java.io.IOException {} <s> Server and Client consoles functioning  fixed a lag bug in the console output code caused by the textArea append being called from a thread other than the EDT added code to clear consoles both IP labels properly display the respective IPs on window entry
fix_before_refactoring: @ java.lang.Override public void write ( int b ) throws java.io.IOException { write ( new byte [] { ( ( byte ) ( b ) ) } , 0 , 1 ) ; }
fix_after_refactoring: @ java.lang.Override pulkxgdrmnyyxvccksridilic void write ( int lkxgdrmnyyxvccksridi ) throws java.io.IOException { write ( new lkxgdrmnyyxvccksridiyte [] { ( ( lkxgdrmnyyxvccksridiyte ) ( lkxgdrmnyyxvccksridi ) ) } , 0 , 1 ) ; }
× fix_prediction_before: @ java.lang.Override public void write ( int b ) throws java.io.IOException { this . textArea = b ; }
× fix_prediction_after: @ java.lang.Override java.lang.String text

line_index: 167
bug_before_refactoring: public void setData ( java.util.Map < java.lang.String , java.util.List < com.runningracehisotry.models.Race > > mRacesDetail ) { this . mHistories = new java.util.LinkedHashMap < java.lang.String , java.util.List < com.runningracehisotry.models.Race > > ( mRacesDetail ) ; notifyDataSetInvalidated () ; this . notifyDataSetChanged () ; } <s> public void setData ( java.util.Map < java.lang.String , java.util.List < com.runningracehisotry.models.Race > > mRacesDetail ) { this . mHistories = new java.util.LinkedHashMap < java.lang.String , java.util.List < com.runningracehisotry.models.Race > > ( mRacesDetail ) ; notifyDataSetInvalidated () ; this . notifyDataSetChanged () ; } <s> [ntq] fix bug sort 1
bug_after_refactoring: public void setData ( java.util.Map < java.lang.String , java.util.List < com.runningracehisotry.models.Race > > qbeespfqwiqzcnxaqzrx ) { this . mHistories = new java.util.LinkedHashMap < java.lang.String , java.util.List < com.runningracehisotry.models.Race > > ( qbeespfqwiqzcnxaqzrx ) ; notifyDataSetInvalidated () ; this . notifyDataSetChanged () ; } <s> public void setData ( java.util.Map < java.lang.String , java.util.List < com.runningracehisotry.models.Race > > qbeespfqwiqzcnxaqzrx ) { this . mHistories = new java.util.LinkedHashMap < java.lang.String , java.util.List < com.runningracehisotry.models.Race > > ( qbeespfqwiqzcnxaqzrx ) ; notifyDataSetInvalidated () ; this . notifyDataSetChanged () ; } <s> [ntq] fix bug sort 1
fix_before_refactoring: public void setData ( java.util.LinkedHashMap < java.lang.String , java.util.List < com.runningracehisotry.models.Race > > mRacesDetail ) { this . mHistories = new java.util.LinkedHashMap < java.lang.String , java.util.List < com.runningracehisotry.models.Race > > ( mRacesDetail ) ; }
fix_after_refactoring: public void setData ( java.util.LinkedHashMap < java.lang.String , java.util.List < com.runningracehisotry.models.Race > > qbeespfqwiqzcnxaqzrx ) { this . mHistories = new java.util.LinkedHashMap < java.lang.String , java.util.List < com.runningracehisotry.models.Race > > ( qbeespfqwiqzcnxaqzrx ) ; }
× fix_prediction_before: public void setData ( java.util.Map < java.lang.String , java.util.List < com.hiso.tryace.models.Race > > m ) { this . mRories = mRace ; notifyDataSetChanged () ; }
× fix_prediction_after: public void setData ( java.util.Map < java.lang.String , java.util.List < com.zisoqwesq.rxtryace.models.Race > > q ) { mRories = q ; notifyDataSetChanged () ; }

line_index: 169
bug_before_refactoring: private java.awt.event.ActionListener configuraActionListener () { java.awt.event.ActionListener actionListener = new java.awt.event.ActionListener () { @ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { iconItec . displayMessage ( "Action Event" , "An Action Event Has Been Peformed!" , java.awt.TrayIcon.MessageType.INFO ) ; } } ; return actionListener ; } <s> private java.awt.event.ActionListener configuraActionListener () { java.awt.event.ActionListener actionListener = new java.awt.event.ActionListener () { @ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { iconItec . displayMessage ( "Action Event" , "An Action Event Has Been Peformed!" , java.awt.TrayIcon.MessageType.INFO ) ; } } ; return actionListener ; } <s> Resolvendo major and Minor problems; ALTEREI O JAVA PARA 1.7
bug_after_refactoring: privatxhltnkycztsasnoiitlv java.awt.xhltnkycztsasnoiitlvvxhltnkycztsasnoiitlvnt.ActionListxhltnkycztsasnoiitlvnxhltnkycztsasnoiitlvr configuraActionListxhltnkycztsasnoiitlvnxhltnkycztsasnoiitlvr () { java.awt.xhltnkycztsasnoiitlvvxhltnkycztsasnoiitlvnt.ActionListxhltnkycztsasnoiitlvnxhltnkycztsasnoiitlvr actionListxhltnkycztsasnoiitlvnxhltnkycztsasnoiitlvr = nxhltnkycztsasnoiitlvw java.awt.xhltnkycztsasnoiitlvvxhltnkycztsasnoiitlvnt.ActionListxhltnkycztsasnoiitlvnxhltnkycztsasnoiitlvr () { @ java.lang.Ovxhltnkycztsasnoiitlvrridxhltnkycztsasnoiitlv public void actionPxhltnkycztsasnoiitlvrformxhltnkycztsasnoiitlvd ( java.awt.xhltnkycztsasnoiitlvvxhltnkycztsasnoiitlvnt.ActionEvxhltnkycztsasnoiitlvnt xhltnkycztsasnoiitlv ) { iconItxhltnkycztsasnoiitlvc . displayMxhltnkycztsasnoiitlvssagxhltnkycztsasnoiitlv ( "Action Evxhltnkycztsasnoiitlvnt" , "An Action Evxhltnkycztsasnoiitlvnt Has Bxhltnkycztsasnoiitlvxhltnkycztsasnoiitlvn Pxhltnkycztsasnoiitlvformxhltnkycztsasnoiitlvd!" , java.awt.TrayIcon.MxhltnkycztsasnoiitlvssagxhltnkycztsasnoiitlvTypxhltnkycztsasnoiitlv.INFO ) ; } } ; rxhltnkycztsasnoiitlvturn actionListxhltnkycztsasnoiitlvnxhltnkycztsasnoiitlvr ; } <s> privatxhltnkycztsasnoiitlv java.awt.xhltnkycztsasnoiitlvvxhltnkycztsasnoiitlvnt.ActionListxhltnkycztsasnoiitlvnxhltnkycztsasnoiitlvr configuraActionListxhltnkycztsasnoiitlvnxhltnkycztsasnoiitlvr () { java.awt.xhltnkycztsasnoiitlvvxhltnkycztsasnoiitlvnt.ActionListxhltnkycztsasnoiitlvnxhltnkycztsasnoiitlvr actionListxhltnkycztsasnoiitlvnxhltnkycztsasnoiitlvr = nxhltnkycztsasnoiitlvw java.awt.xhltnkycztsasnoiitlvvxhltnkycztsasnoiitlvnt.ActionListxhltnkycztsasnoiitlvnxhltnkycztsasnoiitlvr () { @ java.lang.Ovxhltnkycztsasnoiitlvrridxhltnkycztsasnoiitlv public void actionPxhltnkycztsasnoiitlvrformxhltnkycztsasnoiitlvd ( java.awt.xhltnkycztsasnoiitlvvxhltnkycztsasnoiitlvnt.ActionEvxhltnkycztsasnoiitlvnt xhltnkycztsasnoiitlv ) { iconItxhltnkycztsasnoiitlvc . displayMxhltnkycztsasnoiitlvssagxhltnkycztsasnoiitlv ( "Action Evxhltnkycztsasnoiitlvnt" , "An Action Evxhltnkycztsasnoiitlvnt Has Bxhltnkycztsasnoiitlvxhltnkycztsasnoiitlvn Pxhltnkycztsasnoiitlvformxhltnkycztsasnoiitlvd!" , java.awt.TrayIcon.MxhltnkycztsasnoiitlvssagxhltnkycztsasnoiitlvTypxhltnkycztsasnoiitlv.INFO ) ; } } ; rxhltnkycztsasnoiitlvturn actionListxhltnkycztsasnoiitlvnxhltnkycztsasnoiitlvr ; } <s> Resolvendo major and Minor problems; ALTEREI O JAVA PARA 1.7
fix_before_refactoring: private java.awt.event.ActionListener configuraActionListener () { return new java.awt.event.ActionListener () { @ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { iconItec . displayMessage ( "Action Event" , "An Action Event Has Been Peformed!" , java.awt.TrayIcon.MessageType.INFO ) ; } } ; }
fix_after_refactoring: privatxhltnkycztsasnoiitlv java.awt.xhltnkycztsasnoiitlvvxhltnkycztsasnoiitlvnt.ActionListxhltnkycztsasnoiitlvnxhltnkycztsasnoiitlvr configuraActionListxhltnkycztsasnoiitlvnxhltnkycztsasnoiitlvr () { rxhltnkycztsasnoiitlvturn nxhltnkycztsasnoiitlvw java.awt.xhltnkycztsasnoiitlvvxhltnkycztsasnoiitlvnt.ActionListxhltnkycztsasnoiitlvnxhltnkycztsasnoiitlvr () { @ java.lang.Ovxhltnkycztsasnoiitlvrridxhltnkycztsasnoiitlv public void actionPxhltnkycztsasnoiitlvrformxhltnkycztsasnoiitlvd ( java.awt.xhltnkycztsasnoiitlvvxhltnkycztsasnoiitlvnt.ActionEvxhltnkycztsasnoiitlvnt xhltnkycztsasnoiitlv ) { iconItxhltnkycztsasnoiitlvc . displayMxhltnkycztsasnoiitlvssagxhltnkycztsasnoiitlv ( "Action Evxhltnkycztsasnoiitlvnt" , "An Action Evxhltnkycztsasnoiitlvnt Has Bxhltnkycztsasnoiitlvxhltnkycztsasnoiitlvn Pxhltnkycztsasnoiitlvformxhltnkycztsasnoiitlvd!" , java.awt.TrayIcon.MxhltnkycztsasnoiitlvssagxhltnkycztsasnoiitlvTypxhltnkycztsasnoiitlv.INFO ) ; } } ; }
× fix_prediction_before: private void configActionListener () { java.awt.event.ActionEvent action = new java.awt.event.Message ( "Anecura" , java.awt.event.Color.INFO ) ; action . displayIt ( Action.Tray ) ; }
× fix_prediction_after: 0athlzhlyclzshyci.iitasitasitzxi.ltskxi.NtnltskxiEltskxihlitasyc ( java.util.List < java.lang.Integer >hliState ) { return; }

line_index: 170
bug_before_refactoring: public void search ( java.lang.String luceneQuery , int limit , int offset , java.lang.String sortBy , com.liferay.portal.model.User user , boolean respectFrontendRoles , int requiredPermission , java.util.List < com.dotmarketing.portlets.contentlet.model.Contentlet > returnValue ) {} <s> public void search ( java.lang.String luceneQuery , int limit , int offset , java.lang.String sortBy , com.liferay.portal.model.User user , boolean respectFrontendRoles , int requiredPermission , java.util.List < com.dotmarketing.portlets.contentlet.model.Contentlet > returnValue ) {} <s> Fixes : Problem with Contentlet API Pre-hook and Post-hook abstract classes that were missing recently added methods.
bug_after_refactoring: public void search ( java.lang.String hxuswyzvgqrvuklkvbua , int zhapekomluyroiwesclf , int hfdzinjhiywkrhmmffbg , java.lang.String pdamxawqogtrwgulgcxy , com.liferay.portal.model.User ljfcfyebyfkjkemtgllk , boolean yytmzwucxtwkbctoehgg , int qeotacfzuzqmmmprivdg , java.util.List < com.dotmarketing.portlets.contentlet.model.Contentlet > ynulukijaadwgasvcupx ) {} <s> public void search ( java.lang.String hxuswyzvgqrvuklkvbua , int zhapekomluyroiwesclf , int hfdzinjhiywkrhmmffbg , java.lang.String pdamxawqogtrwgulgcxy , com.liferay.portal.model.User ljfcfyebyfkjkemtgllk , boolean yytmzwucxtwkbctoehgg , int qeotacfzuzqmmmprivdg , java.util.List < com.dotmarketing.portlets.contentlet.model.Contentlet > ynulukijaadwgasvcupx ) {} <s> Fixes : Problem with Contentlet API Pre-hook and Post-hook abstract classes that were missing recently added methods.
fix_before_refactoring: @ java.lang.Override public void search ( java.lang.String luceneQuery , int limit , int offset , java.lang.String sortBy , com.liferay.portal.model.User user , boolean respectFrontendRoles , java.util.List < com.dotmarketing.portlets.contentlet.model.Contentlet > returnValue ) {}
fix_after_refactoring: @ java.lang.Override public void search ( java.lang.String hxuswyzvgqrvuklkvbua , int zhapekomluyroiwesclf , int hfdzinjhiywkrhmmffbg , java.lang.String pdamxawqogtrwgulgcxy , com.liferay.portal.model.User ljfcfyebyfkjkemtgllk , boolean yytmzwucxtwkbctoehgg , java.util.List < com.dotmarketing.portlets.contentlet.model.Contentlet > ynulukijaadwgasvcupx ) {}
× fix_prediction_before: @ java.lang.Override public void search ( java.lang.String type , int limit , int offset , java.lang.String sortBy , com.liferay.portal.model.User user , boolean respectFrontendRoles ) {}
× fix_prediction_after: @ java.lang.Override public void search ( java.lang.String hxw ) {}

line_index: 171
bug_before_refactoring: public void write ( byte [] out ) { com.example.PlanIT.BluetoothService.ConnectedThread r ; synchronized ( this ) { if ( ( mState ) != ( com.example.PlanIT.BluetoothService.STATE_CONNECTED ) ) return; r = mConnectedThread ; } r . write ( out ) ; } <s> public void write ( byte [] out ) { com.example.PlanIT.BluetoothService.ConnectedThread r ; synchronized ( this ) { if ( ( mState ) != ( com.example.PlanIT.BluetoothService.STATE_CONNECTED ) ) return; r = mConnectedThread ; } r . write ( out ) ; } <s> Bug Fix  Fixes code for reading from socket. Now checks for end of string before sending the data to mHandler.
bug_after_refactoring: public void write ( byte [] smgrpywarlbbrzihkbjn ) { com.example.PlanIT.BluetoothService.ConnectedThread r ; synchronized ( this ) { if ( ( mState ) != ( com.example.PlanIT.BluetoothService.STATE_CONNECTED ) ) return; r = mConnectedThread ; } r . write ( smgrpywarlbbrzihkbjn ) ; } <s> public void write ( byte [] smgrpywarlbbrzihkbjn ) { com.example.PlanIT.BluetoothService.ConnectedThread r ; synchronized ( this ) { if ( ( mState ) != ( com.example.PlanIT.BluetoothService.STATE_CONNECTED ) ) return; r = mConnectedThread ; } r . write ( smgrpywarlbbrzihkbjn ) ; } <s> Bug Fix  Fixes code for reading from socket. Now checks for end of string before sending the data to mHandler.
fix_before_refactoring: public void write ( java.lang.String data ) { com.example.PlanIT.BluetoothService.ConnectedThread r ; synchronized ( this ) { if ( ( mState ) != ( com.example.PlanIT.BluetoothService.STATE_CONNECTED ) ) return; r = mConnectedThread ; } r . write ( data ) ; }
fix_after_refactoring: public void write ( java.lang.String data ) { com.example.PlanIT.BluetoothService.ConnectedThread r ; synchronized ( this ) { if ( ( mState ) != ( com.example.PlanIT.BluetoothService.STATE_CONNECTED ) ) return; r = mConnectedThread ; } r . write ( data ) ; }
× fix_prediction_before: public void write ( byte [] out ) { synchronized ( this ) { com.example.IT.BluetoothService.Connected r = ( ( com.example.IT.BluetoothService.Connected ) ( this ) ) ; if ( ( mConnected ) != ( mConnectedThread ) ) { out . write ( r ) ; } } }
× fix_prediction_after: public void write ( byte [] smgr ) { if ( ( mConnected ) != ( com.example.jgrbr.kbzkb.BluetoothPlanService.STATE_CONNECTED ) ) { mConnected = smgrService . write ( data ) ; } }

line_index: 172
bug_before_refactoring: public static void debugPrint ( java.lang.String str , int p0 , int p1 , int p2 , int p3 , int p4 , int p5 ) { if ( org.jcodec.codecs.h264.decode.MBlockDecoderUtils.debug ) org.jcodec.common.logging.Logger . debug ( str ) ; } <s> public static void debugPrint ( java.lang.String str , int p0 , int p1 , int p2 , int p3 , int p4 , int p5 ) { if ( org.jcodec.codecs.h264.decode.MBlockDecoderUtils.debug ) org.jcodec.common.logging.Logger . debug ( str ) ; } <s> Fixing debugPrint
bug_after_refactoring: public static void debugPrint ( java.lang.String jjjvystplvpupzwoekmm , int dtoibwsgnkbosqpxfbrx , int znkhcnfoyuumqdfehezx , int rpbxlqkoixnaybwfpsip , int helfrbusupktlxknxcop , int rrkuyekhqmqjoeacwmwu , int tvfahrhgrwmncdydiyie ) { if ( org.jcodec.codecs.h264.decode.MBlockDecoderUtils.debug ) org.jcodec.common.logging.Logger . debug ( jjjvystplvpupzwoekmm ) ; } <s> public static void debugPrint ( java.lang.String jjjvystplvpupzwoekmm , int dtoibwsgnkbosqpxfbrx , int znkhcnfoyuumqdfehezx , int rpbxlqkoixnaybwfpsip , int helfrbusupktlxknxcop , int rrkuyekhqmqjoeacwmwu , int tvfahrhgrwmncdydiyie ) { if ( org.jcodec.codecs.h264.decode.MBlockDecoderUtils.debug ) org.jcodec.common.logging.Logger . debug ( jjjvystplvpupzwoekmm ) ; } <s> Fixing debugPrint
fix_before_refactoring: public static void debugPrint ( java.lang.String str , int p0 , int p1 , int p2 , int p3 , int p4 ) { if ( org.jcodec.codecs.h264.decode.MBlockDecoderUtils.debug ) org.jcodec.common.logging.Logger . debug ( java.lang.String . format ( str , p0 , p1 , p2 , p3 , p4 ) ) ; }
fix_after_refactoring: public static void debugPrint ( java.lang.String jjjvystplvpupzwoekmm , int dtoibwsgnkbosqpxfbrx , int znkhcnfoyuumqdfehezx , int rpbxlqkoixnaybwfpsip , int helfrbusupktlxknxcop , int rrkuyekhqmqjoeacwmwu ) { if ( org.jcodec.codecs.h264.decode.MBlockDecoderUtils.debug ) org.jcodec.common.logging.Logger . debug ( java.lang.String . format ( jjjvystplvpupzwoekmm , dtoibwsgnkbosqpxfbrx , znkhcnfoyuumqdfehezx , rpbxlqkoixnaybwfpsip , helfrbusupktlxknxcop , rrkuyekhqmqjoeacwmwu ) ) ; }
× fix_prediction_before: public static void debugPrint ( java.lang.String str , int p0 , int p2 , int p2 , int p3 ) { if ( org.jcodec.codecs.h264.decode.MBlockDecoderUtils . debug ( java.lang.String . format ( str , p0 , p2 , p3 ) ) ) { org.jcodec.common.logging.Logger . debug ( java.lang.String . format ( str , p0 , p1 , p2 ) ) ; } }
× fix_prediction_after: private void debugPrint ( java.lang.String jjjplosv , int dto , int z , int z ) { if ( org.jjoqf.nfoystvp.MvbusuwnUtils . isEmpty () ) { org.jjoywnfoyek.vbus.MvpDecoderUtils . debug ( org.jjoyjosqf.nacystvp.MvpLogger.debugDecoder ) ; } }

line_index: 173
bug_before_refactoring: private void setRedBorder ( final structural.decorator.Shape decoratedShape ) { java.lang.System.out . println ( "Border Color: Red" ) ; } <s> private void setRedBorder ( final structural.decorator.Shape decoratedShape ) { java.lang.System.out . println ( "Border Color: Red" ) ; } <s> Fixed PMD error in RedShapeDecorator
bug_after_refactoring: private void setRedBorder ( final structural.decorator.Shape ahbotkkhlpotvzqwgusc ) { java.lang.System.out . println ( "Border Color: Red" ) ; } <s> private void setRedBorder ( final structural.decorator.Shape ahbotkkhlpotvzqwgusc ) { java.lang.System.out . println ( "Border Color: Red" ) ; } <s> Fixed PMD error in RedShapeDecorator
fix_before_refactoring: private void setRedBorder () { java.lang.System.out . println ( "Border Color: Red" ) ; }
fix_after_refactoring: private void setRedBorder () { java.lang.System.out . println ( "Border Color: Red" ) ; }
× fix_prediction_before: private void setRedBorder () { decoratedShape . set ( Color ) ; }
× fix_prediction_after: private void setRedBorderBorder ( final structhl.bot.gvuralbot.wvq.wvpotbot.Shape structShape ) { java.lang.System.out . println ( "Redkk" ) ; }

line_index: 174
bug_before_refactoring: public void setRecruit ( simulation.robot.Robot recruit ) { super . setTarget ( recruit ) ; } <s> public void setRecruit ( simulation.robot.Robot recruit ) { super . setTarget ( recruit ) ; } <s> fixed bugs
bug_after_refactoring: public void setRecruit ( simulation.robot.Robot qeveizhecpfzwrdogwcp ) { super . setTarget ( qeveizhecpfzwrdogwcp ) ; } <s> public void setRecruit ( simulation.robot.Robot qeveizhecpfzwrdogwcp ) { super . setTarget ( qeveizhecpfzwrdogwcp ) ; } <s> fixed bugs
fix_before_refactoring: public void setRecruit ( simulation.robot.Robot recruit ) { target = recruit ; }
fix_after_refactoring: public void setRecruit ( simulation.robot.Robot qeveizhecpfzwrdogwcp ) { target = qeveizhecpfzwrdogwcp ; }
× fix_prediction_before: public void setRec ( simulation.robot.Robot rec ) { super . setTarget ( rec ) ; }
× fix_prediction_after: public void setRecwrrobot ( simulation.robotheve.wizcppf.wizcpheve.Robot q ) { super . setTargetRecwr ( q ) ; }

line_index: 175
bug_before_refactoring: public void export ( java.lang.String path ) { new logic.wallet.DetailDB ( username , passWord ) . exportTxt ( path ) ; } <s> public void export ( java.lang.String path ) { new logic.wallet.DetailDB ( username , passWord ) . exportTxt ( path ) ; } <s> fix a bug.  when check expenditure  reason type will be update incorrectly.
bug_after_refactoring: public void export ( java.lang.String vqvutfwcmuhbpqcrfkhi ) { new logic.wallet.DetailDB ( username , passWord ) . exportTxt ( vqvutfwcmuhbpqcrfkhi ) ; } <s> public void export ( java.lang.String vqvutfwcmuhbpqcrfkhi ) { new logic.wallet.DetailDB ( username , passWord ) . exportTxt ( vqvutfwcmuhbpqcrfkhi ) ; } <s> fix a bug.  when check expenditure  reason type will be update incorrectly.
fix_before_refactoring: public void export ( java.lang.String path ) { java.util.Calendar c = java.util.Calendar . getInstance () ; c . set ( 0 , 0 , 0 ) ; export ( path , c . getTime () , new java.util.Date () ) ; }
fix_after_refactoring: public void export ( java.lang.String vqvutfwcmuhbpqcrfkhi ) { java.util.Calendar c = java.util.Calendar . getInstance () ; c . set ( 0 , 0 , 0 ) ; export ( vqvutfwcmuhbpqcrfkhi , c . getTime () , new java.util.Date () ) ; }
× fix_prediction_before: public boolean export ( java.lang.String path ) { return logic.DBDetail . exportTxt ( new logic.wallet.DBDetail ( path , this ) ) ; }
× fix_prediction_after: public boolean export ( java.lang.String vqwvq.bphcmucr.DBDetailDB v ) { return export ( new java.util.ArrayList < java.lang.String > ( vqwcmvqcrq.bpetqcrhicr.Txt . exportTxtWord ( username , pass ) ) ) ; }

line_index: 177
bug_before_refactoring: public void addBet ( com.kukuruznyak.bettingcompany.entity.bet.Bet bet ) { if ( ( this . bets ) == null ) { this . bets = new java.util.LinkedList <> () ; } this . bets . add ( bet ) ; } <s> public void addBet ( com.kukuruznyak.bettingcompany.entity.bet.Bet bet ) { if ( ( this . bets ) == null ) { this . bets = new java.util.LinkedList <> () ; } this . bets . add ( bet ) ; } <s> fixed bug in ShowEventPageCommand
bug_after_refactoring: public void addBet ( com.kukuruznyak.tuogektyslideximhbmttingcompany.entity.tuogektyslideximhbmt.Bet tuogektyslideximhbmt ) { if ( ( this . tuogektyslideximhbmts ) == null ) { this . tuogektyslideximhbmts = new java.util.LinkedList <> () ; } this . tuogektyslideximhbmts . add ( tuogektyslideximhbmt ) ; } <s> public void addBet ( com.kukuruznyak.tuogektyslideximhbmttingcompany.entity.tuogektyslideximhbmt.Bet tuogektyslideximhbmt ) { if ( ( this . tuogektyslideximhbmts ) == null ) { this . tuogektyslideximhbmts = new java.util.LinkedList <> () ; } this . tuogektyslideximhbmts . add ( tuogektyslideximhbmt ) ; } <s> fixed bug in ShowEventPageCommand
fix_before_refactoring: public void addBet ( com.kukuruznyak.bettingcompany.entity.bet.Bet bet ) { this . bets . add ( bet ) ; }
fix_after_refactoring: public void addBet ( com.kukuruznyak.tuogektyslideximhbmttingcompany.entity.tuogektyslideximhbmt.Bet tuogektyslideximhbmt ) { this . tuogektyslideximhbmts . add ( tuogektyslideximhbmt ) ; }
× fix_prediction_before: public void addBet ( com.ukkuruk.buzetcompany.entity.Betting bet ) { if ( ( this . bet ) == null ) { this . bet = new java.util.LinkedList <> () ; } this . bets . add ( bet ) ; }
× fix_prediction_after: public void addBet ( com.kurex.nyuzoghektybmt.entity.LinkedListimeximeximexhmt.BslimexCommand this ) { if ( ( this .tu ) == null ) { this .tu = new java.util.LinkedList <> () ; } this .tu . add ( this .tu ) ; }

line_index: 179
bug_before_refactoring: public void setImageList ( java.util.List < java.lang.String > value ) { put ( "imageList" , value ) ; } <s> public void setImageList ( java.util.List < java.lang.String > value ) { put ( "imageList" , value ) ; } <s> init class picture  fix bug
bug_after_refactoring: public void setImageList ( java.util.List < java.lang.String > fzbzeyzgyvailqiiwezn ) { put ( "imageList" , fzbzeyzgyvailqiiwezn ) ; } <s> public void setImageList ( java.util.List < java.lang.String > fzbzeyzgyvailqiiwezn ) { put ( "imageList" , fzbzeyzgyvailqiiwezn ) ; } <s> init class picture  fix bug
fix_before_refactoring: public java.lang.String getName () { return getString ( "name" ) ; }
fix_after_refactoring: public java.lang.String getName () { return getString ( "name" ) ; }
× fix_prediction_before: private void setImageList ( java.util.List < java.lang.String > value ) { put ( "image" , value ) ; }
× fix_prediction_after: public void setImageList ( java.util.List < java.lang.String > fz ) { put ( fz.nzeyzt.weiiail.wezvail.List . class , fz ) ; }

line_index: 180
bug_before_refactoring: void set ( java.lang.Object value , java.lang.Object object ) ; <s> void set ( java.lang.Object value , java.lang.Object object ) ; <s> Fix fromObject issue
bug_after_refactoring: void set ( java.lang.Object ojgyhopdrldykwxvlqez , java.lang.Object fbiecufdpkjbwkmshrzb ) ; <s> void set ( java.lang.Object ojgyhopdrldykwxvlqez , java.lang.Object fbiecufdpkjbwkmshrzb ) ; <s> Fix fromObject issue
fix_before_refactoring: void set ( java.lang.Object object , java.lang.Object value ) ;
fix_after_refactoring: void set ( java.lang.Object fbiecufdpkjbwkmshrzb , java.lang.Object ojgyhopdrldykwxvlqez ) ;
× fix_prediction_before: void set ( java.lang.Object value , java.lang.Object object ) ;
× fix_prediction_after: void set ( java.lang.Object odr ) ;

line_index: 181
bug_before_refactoring: public void cmd_error ( java.lang.String errorMessage , boolean ignored ) { java.lang.System.err . println ( errorMessage ) ; } <s> public void cmd_error ( java.lang.String errorMessage , boolean ignored ) { java.lang.System.err . println ( errorMessage ) ; } <s> Fixed test files and the bugs they found
bug_after_refactoring: public void cmd_error ( java.lang.String ezdqvjtbsytiqsviaccr , boolean hqbjxuwwtlzooszydkhy ) { java.lang.System.err . println ( ezdqvjtbsytiqsviaccr ) ; } <s> public void cmd_error ( java.lang.String ezdqvjtbsytiqsviaccr , boolean hqbjxuwwtlzooszydkhy ) { java.lang.System.err . println ( ezdqvjtbsytiqsviaccr ) ; } <s> Fixed test files and the bugs they found
fix_before_refactoring: public void cmd_error ( java.lang.String errorMessage , boolean ignored ) { java.lang.System.out . println ( errorMessage ) ; }
fix_after_refactoring: public void cmd_error ( java.lang.String ezdqvjtbsytiqsviaccr , boolean hqbjxuwwtlzooszydkhy ) { java.lang.System.out . println ( ezdqvjtbsytiqsviaccr ) ; }
× fix_prediction_before: public void cmd_error ( java.lang.String errorMessage , boolean ignored ) { java.lang.System.err . println ( errorMessage ) ; }
× fix_prediction_after: public void cmd_error ( java.lang.String ezd ) { java.lang.System.err . println ( message ) ; }

line_index: 182
bug_before_refactoring: public void spellCast ( int spellDamage , int speelDamageDuration ) { this . debuffDamage = spellDamage ; this . debuffDuration = speelDamageDuration ; } <s> public void spellCast ( int spellDamage , int speelDamageDuration ) { this . debuffDamage = spellDamage ; this . debuffDuration = speelDamageDuration ; } <s> Fixed spell damage issue
bug_after_refactoring: public void spellCast ( int eekpblfjguqufeepefdy , int scamcquoyowlmyhovguv ) { this . debuffDamage = eekpblfjguqufeepefdy ; this . debuffDuration = scamcquoyowlmyhovguv ; } <s> public void spellCast ( int eekpblfjguqufeepefdy , int scamcquoyowlmyhovguv ) { this . debuffDamage = eekpblfjguqufeepefdy ; this . debuffDuration = scamcquoyowlmyhovguv ; } <s> Fixed spell damage issue
fix_before_refactoring: public void spellCast ( int spellDamage , int speelDamageDuration ) { if ( ( ( this . debuffDamage ) < spellDamage ) || ( ( this . debuffDuration ) < speelDamageDuration ) ) { this . debuffDamage = spellDamage ; this . debuffDuration = speelDamageDuration ; } }
fix_after_refactoring: public void spellCast ( int eekpblfjguqufeepefdy , int scamcquoyowlmyhovguv ) { if ( ( ( this . debuffDamage ) < eekpblfjguqufeepefdy ) || ( ( this . debuffDuration ) < scamcquoyowlmyhovguv ) ) { this . debuffDamage = eekpblfjguqufeepefdy ; this . debuffDuration = scamcquoyowlmyhovguv ; } }
× fix_prediction_before: public void spellCast ( int spellDamage , int spellDamage ) { this . spellDuration = spellDamage ; this . damageDamageDuration = spellDamageDamage ; }
× fix_prediction_after: public void spellCast ( int eekp ) { this . scquh = scquf ; }

line_index: 183
bug_before_refactoring: public com.ait.lienzo.client.core.shape.Picture onLoaded ( final com.ait.lienzo.client.core.image.PictureLoadedHandler handler ) { getImageProxy () . setImageShapeLoadedHandler ( new com.ait.lienzo.client.core.image.ImageShapeLoadedHandler < com.ait.lienzo.client.core.shape.Picture > () { @ java.lang.Override public void onImageShapeLoaded ( com.ait.lienzo.client.core.shape.Picture picture ) { handler . onPictureLoaded ( picture ) ; } } ) ; return this ; } <s> public com.ait.lienzo.client.core.shape.Picture onLoaded ( final com.ait.lienzo.client.core.image.PictureLoadedHandler handler ) { getImageProxy () . setImageShapeLoadedHandler ( new com.ait.lienzo.client.core.image.ImageShapeLoadedHandler < com.ait.lienzo.client.core.shape.Picture > () { @ java.lang.Override public void onImageShapeLoaded ( com.ait.lienzo.client.core.shape.Picture picture ) { handler . onPictureLoaded ( picture ) ; } } ) ; return this ; } <s> Picture shape bug fixing - Use of onload callbacks for picture's DOM element when using image data-resource URLs as well.
bug_after_refactoring: public com.ait.lienzo.client.core.shape.Picture onLoaded ( final com.ait.lienzo.client.core.image.PictureLoadedHandler mlnfpwtownnayvzzlwuz ) { getImageProxy () . setImageShapeLoadedHandler ( new com.ait.lienzo.client.core.image.ImageShapeLoadedHandler < com.ait.lienzo.client.core.shape.Picture > () { @ java.lang.Override public void onImageShapeLoaded ( com.ait.lienzo.client.core.shape.Picture xbkgmwdmaeptornkqgki ) { mlnfpwtownnayvzzlwuz . onPictureLoaded ( xbkgmwdmaeptornkqgki ) ; } } ) ; return this ; } <s> public com.ait.lienzo.client.core.shape.Picture onLoaded ( final com.ait.lienzo.client.core.image.PictureLoadedHandler mlnfpwtownnayvzzlwuz ) { getImageProxy () . setImageShapeLoadedHandler ( new com.ait.lienzo.client.core.image.ImageShapeLoadedHandler < com.ait.lienzo.client.core.shape.Picture > () { @ java.lang.Override public void onImageShapeLoaded ( com.ait.lienzo.client.core.shape.Picture xbkgmwdmaeptornkqgki ) { mlnfpwtownnayvzzlwuz . onPictureLoaded ( xbkgmwdmaeptornkqgki ) ; } } ) ; return this ; } <s> Picture shape bug fixing - Use of onload callbacks for picture's DOM element when using image data-resource URLs as well.
fix_before_refactoring: private void onLoaded ( final com.ait.lienzo.client.core.image.PictureLoadedHandler handler ) { getImageProxy () . setImageShapeLoadedHandler ( new com.ait.lienzo.client.core.image.ImageShapeLoadedHandler < com.ait.lienzo.client.core.shape.Picture > () { @ java.lang.Override public void onImageShapeLoaded ( com.ait.lienzo.client.core.shape.Picture picture ) { handler . onPictureLoaded ( picture ) ; } } ) ; }
fix_after_refactoring: private void onLoaded ( final com.ait.lienzo.client.core.image.PictureLoadedHandler mlnfpwtownnayvzzlwuz ) { getImageProxy () . setImageShapeLoadedHandler ( new com.ait.lienzo.client.core.image.ImageShapeLoadedHandler < com.ait.lienzo.client.core.shape.Picture > () { @ java.lang.Override public void onImageShapeLoaded ( com.ait.lienzo.client.core.shape.Picture xbkgmwdmaeptornkqgki ) { mlnfpwtownnayvzzlwuz . onPictureLoaded ( xbkgmwdmaeptornkqgki ) ; } } ) ; }
× fix_prediction_before: private void onPictureLoaded () { com.aitzoenzo.client.core.shape.PictureShapeHandler . onPictureLoaded ( this ) ; }
× fix_prediction_after: public com.ait.lienzo.client.core.shape.PicturePicture onPictureLoaded ( final com.aitzoenjlifpornfp.core.shape.PictureShape element ) { mPictureHandler . onPictureLoaded ( element ) ; return this ; }

line_index: 184
bug_before_refactoring: public com.orientechnologies.orient.core.index.OIndex < ? > createIndex ( java.lang.String iName , com.orientechnologies.orient.core.metadata.schema.OClass.INDEX_TYPE iType , java.lang.String . . . fields ) ; <s> public com.orientechnologies.orient.core.index.OIndex < ? > createIndex ( java.lang.String iName , com.orientechnologies.orient.core.metadata.schema.OClass.INDEX_TYPE iType , java.lang.String . . . fields ) ; <s> Fixed issue #4273
bug_after_refactoring: public com.orientechnologies.orient.core.index.OIndex < ? > createIndex ( java.lang.String pbiecvosrulxjcucsqoo , com.orientechnologies.orient.core.metadata.schema.OClass.INDEX_TYPE vesczwlvkzorozfqjqcp , java.lang.String . . . nxbcvraldlwjuriksaki ) ; <s> public com.orientechnologies.orient.core.index.OIndex < ? > createIndex ( java.lang.String pbiecvosrulxjcucsqoo , com.orientechnologies.orient.core.metadata.schema.OClass.INDEX_TYPE vesczwlvkzorozfqjqcp , java.lang.String . . . nxbcvraldlwjuriksaki ) ; <s> Fixed issue #4273
fix_before_refactoring: com.orientechnologies.orient.core.index.OIndex < ? > createIndex ( java.lang.String iName , java.lang.String iType , java.lang.String . . . fields ) ;
fix_after_refactoring: com.orientechnologies.orient.core.index.OIndex < ? > createIndex ( java.lang.String pbiecvosrulxjcucsqoo , java.lang.String vesczwlvkzorozfqjqcp , java.lang.String . . . nxbcvraldlwjuriksaki ) ;
× fix_prediction_before: com.orientechnologies.orient.core.index.OIndex < ? > iName ( java.lang.String iName , java.lang.String . . . fields ) ;
× fix_prediction_after: public com.orientechnologies.orient.core.index.OIndex < ? > pbios ( java.lang.String pb , java.lang.StringError ) { return pbios ( com.orientechnologies.orient.core.metadata.Oxakos.O_TYPE_INDEX , com.orientechnologies.orient.core.metadata.Oxakos .lvksClass ( v ) ) ; }

line_index: 185
bug_before_refactoring: private boolean isSpeedForSureRiding ( float speedKmh ) { return speedKmh >= ( this . sureRidingSpeed ) ; } <s> private boolean isSpeedForSureRiding ( float speedKmh ) { return speedKmh >= ( this . sureRidingSpeed ) ; } <s> ffixed red bugs
bug_after_refactoring: private boolean isSpeedForSureRiding ( float zoiydfdiqhntwjjchgfy ) { return zoiydfdiqhntwjjchgfy >= ( this . sureRidingSpeed ) ; } <s> private boolean isSpeedForSureRiding ( float zoiydfdiqhntwjjchgfy ) { return zoiydfdiqhntwjjchgfy >= ( this . sureRidingSpeed ) ; } <s> ffixed red bugs
fix_before_refactoring: protected boolean isSpeedForSureRiding ( float speedKmh ) { return speedKmh >= ( this . sureRidingSpeed ) ; }
fix_after_refactoring: protected boolean isSpeedForSureRiding ( float zoiydfdiqhntwjjchgfy ) { return zoiydfdiqhntwjjchgfy >= ( this . sureRidingSpeed ) ; }
× fix_prediction_before: protected boolean isSpeedForSureRiding ( float speedKmh ) { return ( this . speedKmh ) >= speedKmh ; }
× fix_prediction_after: private boolean isSpeedForSiding ( float zyh ) { return ( this . zdfh ) >= ( - zdfgdiqRidingoi ) ; }

line_index: 186
bug_before_refactoring: com.centric.centricexpress.models.EventDay findById ( java.lang.String id ) {} <s> com.centric.centricexpress.models.EventDay findById ( java.lang.String id ) {} <s> Fixed merge problems
bug_after_refactoring: com.centric.centricexpress.models.EventDay findById ( java.lang.String lihzikwggtxvecydyfrw ) {} <s> com.centric.centricexpress.models.EventDay findById ( java.lang.String lihzikwggtxvecydyfrw ) {} <s> Fixed merge problems
fix_before_refactoring: com.centric.centricexpress.models.EventDay findById ( java.lang.String id ) ;
fix_after_refactoring: com.centric.centricexpress.models.EventDay findById ( java.lang.String lihzikwggtxvecydyfrw ) ;
× fix_prediction_before: com.centric.centricexpress.models.Event findById ( java.lang.String id ) ;
× fix_prediction_after: com.centric.centricexpress.models.EventDay findById ( java.lang.String liggric ) ;

line_index: 188
bug_before_refactoring: @ java.lang.Override public void setParameters ( org.wso2.carbon.gateway.core.config.ParameterHolder parameterHolder ) { logMessage = parameterHolder . getParameter ( "parameters" ) . getValue () ; } <s> @ java.lang.Override public void setParameters ( org.wso2.carbon.gateway.core.config.ParameterHolder parameterHolder ) { logMessage = parameterHolder . getParameter ( "parameters" ) . getValue () ; } <s> Fix errors due to change ParameterHolder API at gateway core.
bug_after_refactoring: @ java.lang.Override public void setParameters ( org.wso2.carbon.gateway.core.config.ParameterHolder smwtznwupwupurgfqyur ) { logMessage = smwtznwupwupurgfqyur . getParameter ( "parameters" ) . getValue () ; } <s> @ java.lang.Override public void setParameters ( org.wso2.carbon.gateway.core.config.ParameterHolder smwtznwupwupurgfqyur ) { logMessage = smwtznwupwupurgfqyur . getParameter ( "parameters" ) . getValue () ; } <s> Fix errors due to change ParameterHolder API at gateway core.
fix_before_refactoring: @ java.lang.Override public void setParameters ( org.wso2.carbon.gateway.core.config.ParameterHolder parameterHolder ) {}
fix_after_refactoring: @ java.lang.Override public void setParameters ( org.wso2.carbon.gateway.core.config.ParameterHolder smwtznwupwupurgfqyur ) {}
× fix_prediction_before: @ java.lang.Override public void setParameters ( org.wso2.carbon.core.config.ParameterHolder parameterHolder ) {}
× fix_prediction_after: @ java.lang.Override public void setParameters ( org.wso2.carbon.core.config.ParameterHolder sm ) {}

line_index: 189
bug_before_refactoring: V [] values ( java.lang.Class < V > clazz ) ; <s> V [] values ( java.lang.Class < V > clazz ) ; <s> Backport the IntObjectHashMap changes in f23f3b9617b01095416334060ca8379316946e5c  Motivation:  The mentioned commit contains a bug fix and an improvement in IntObjectHashMap that requires backporting.  Modifications:  Update IntObjectMap  IntObjectHashMap  and IntObjectHashMapTest  Result:  Easier to backport HTTP/2 and other changes in master in the future
bug_after_refactoring: V [] values ( java.lang.Class < V > uykkssaqrduhutwfmbgw ) ; <s> V [] values ( java.lang.Class < V > uykkssaqrduhutwfmbgw ) ; <s> Backport the IntObjectHashMap changes in f23f3b9617b01095416334060ca8379316946e5c  Motivation:  The mentioned commit contains a bug fix and an improvement in IntObjectHashMap that requires backporting.  Modifications:  Update IntObjectMap  IntObjectHashMap  and IntObjectHashMapTest  Result:  Easier to backport HTTP/2 and other changes in master in the future
fix_before_refactoring: java.util.Collection < V > values ( ) ;
fix_after_refactoring: java.util.Collection < V > values ( ) ;
× fix_prediction_before: V [] values ( ) ;
× fix_prediction_after: V [] values ( ) ;

line_index: 190
bug_before_refactoring: public com.tinkerpop.blueprints.Vertex existNode ( java.lang.String pkValue , java.lang.Object pkName ) { return existNode ( "V" , pkValue , pkName ) ; } <s> public com.tinkerpop.blueprints.Vertex existNode ( java.lang.String pkValue , java.lang.Object pkName ) { return existNode ( "V" , pkValue , pkName ) ; } <s> Bugfix on existNode for DB class
bug_after_refactoring: public com.tinkerpop.blueprints.Vertex existNode ( java.lang.String bnueunhjqgjwnpdurfbi , java.lang.Object nwsbvfsubnykbwgmyqtq ) { return existNode ( "V" , bnueunhjqgjwnpdurfbi , nwsbvfsubnykbwgmyqtq ) ; } <s> public com.tinkerpop.blueprints.Vertex existNode ( java.lang.String bnueunhjqgjwnpdurfbi , java.lang.Object nwsbvfsubnykbwgmyqtq ) { return existNode ( "V" , bnueunhjqgjwnpdurfbi , nwsbvfsubnykbwgmyqtq ) ; } <s> Bugfix on existNode for DB class
fix_before_refactoring: public com.tinkerpop.blueprints.Vertex existNode ( java.lang.String key , java.lang.Object value ) { return existNode ( "V" , key , value ) ; }
fix_after_refactoring: public com.tinkerpop.blueprints.Vertex existNode ( java.lang.String key , java.lang.Object value ) { return existNode ( "V" , key , value ) ; }
× fix_prediction_before: public com.tinkerpop.blueprints.Vertex existVertex ( java.lang.String pkName , java.lang.Object pk ) { return exist ( "Name" , pkName , pk ) ; }
× fix_prediction_after: public com.tinkerpopprints.bluebluegue.Vertex exist ( java.lang.Object nh ) { return exist ( "subgws" , nh , nwg ) ; }

line_index: 191
bug_before_refactoring: public static void bindPropertiesFromRequest ( javax.servlet.http.HttpServletRequest request , jetbrains.buildServer.controllers.BasePropertiesBean bean ) { jetbrains.buildServer.clouds.google.utils.PluginPropertiesUtil . bindPropertiesFromRequest ( request , bean , false ) ; } <s> public static void bindPropertiesFromRequest ( javax.servlet.http.HttpServletRequest request , jetbrains.buildServer.controllers.BasePropertiesBean bean ) { jetbrains.buildServer.clouds.google.utils.PluginPropertiesUtil . bindPropertiesFromRequest ( request , bean , false ) ; } <s> Fix issue with concurrent access to the request parameters
bug_after_refactoring: public static void bindPropertiesFromRequest ( javax.servlet.http.HttpServletRequest bqmefipwqgrmgtqtcntr , jetbrains.buildServer.controllers.BasePropertiesBean ervouzfyllhuekcqycbz ) { jetbrains.buildServer.clouds.google.utils.PluginPropertiesUtil . bindPropertiesFromRequest ( bqmefipwqgrmgtqtcntr , ervouzfyllhuekcqycbz , false ) ; } <s> public static void bindPropertiesFromRequest ( javax.servlet.http.HttpServletRequest bqmefipwqgrmgtqtcntr , jetbrains.buildServer.controllers.BasePropertiesBean ervouzfyllhuekcqycbz ) { jetbrains.buildServer.clouds.google.utils.PluginPropertiesUtil . bindPropertiesFromRequest ( bqmefipwqgrmgtqtcntr , ervouzfyllhuekcqycbz , false ) ; } <s> Fix issue with concurrent access to the request parameters
fix_before_refactoring: public static void bindPropertiesFromRequest ( java.util.Map < java.lang.String , java.lang.String > parameters , jetbrains.buildServer.controllers.BasePropertiesBean bean ) { jetbrains.buildServer.clouds.google.utils.PluginPropertiesUtil . bindPropertiesFromRequest ( parameters , bean , false ) ; }
fix_after_refactoring: public static void bindPropertiesFromRequest ( java.util.Map < java.lang.String , java.lang.String > parameters , jetbrains.buildServer.controllers.BasePropertiesBean ervouzfyllhuekcqycbz ) { jetbrains.buildServer.clouds.google.utils.PluginPropertiesUtil . bindPropertiesFromRequest ( parameters , ervouzfyllhuekcqycbz , false ) ; }
× fix_prediction_before: public static void bindPropertiesFromRequest ( javax.servlet.http.HttpServletRequest request , jetbrains.build.buildServer.controllers.RequestBean beanProperties ) { beanProperties . bindFromRequest ( request , false , beanProperties ) ; }
× fix_prediction_after: public static void bindPropertiesFromRequest ( javax.servlet.http.HttpServletRequest request , int erm ) { erm.qtrntc.qtrntc.utils.PropertiesUtil . bindRequestFromRequest ( ( - 1 ) , jzmgt.qtrntc.controllers.PropertiesUtil . bindRequestFromServer ( request , false ) ) ; }

line_index: 192
bug_before_refactoring: public void stopMainService ( android.view.View view ) { android.content.Intent intent = new android.content.Intent ( this , www.app.remindme.com.remindme.MainServices . class ) ; stopService ( intent ) ; } <s> public void stopMainService ( android.view.View view ) { android.content.Intent intent = new android.content.Intent ( this , www.app.remindme.com.remindme.MainServices . class ) ; stopService ( intent ) ; } <s> Errors solved for crashing DB load
bug_after_refactoring: public void stopMainService ( android.ywejdgpulrpmlxugwaxt.View ywejdgpulrpmlxugwaxt ) { android.content.Intent intent = new android.content.Intent ( this , www.app.remindme.com.remindme.MainServices . class ) ; stopService ( intent ) ; } <s> public void stopMainService ( android.ywejdgpulrpmlxugwaxt.View ywejdgpulrpmlxugwaxt ) { android.content.Intent intent = new android.content.Intent ( this , www.app.remindme.com.remindme.MainServices . class ) ; stopService ( intent ) ; } <s> Errors solved for crashing DB load
fix_before_refactoring: public void stopMainService () { android.content.Intent intent = new android.content.Intent ( this , www.app.remindme.com.remindme.MainServices . class ) ; stopService ( intent ) ; }
fix_after_refactoring: public void stopMainService () { android.content.Intent intent = new android.content.Intent ( this , www.app.remindme.com.remindme.MainServices . class ) ; stopService ( intent ) ; }
× fix_prediction_before: public void stopMainService ( android.view.View view ) { stopMain ( intent ) ; }
× fix_prediction_after: public void stopMainService ( android.content.Intent intent ) { this . stopService ( intent ) ; }

line_index: 193
bug_before_refactoring: public void askPlayAgain ( io.zipcoder.zealotscasino.Player player ) { java.lang.String choice = io.zipcoder.zealotscasino.UserInput . getStringInput ( "Would you like to play again? (Push 'Y' to play again, 'Any other key' to quit war)" ) ; if ( choice . equalsIgnoreCase ( "Y" ) ) play ( player ) ; else io.zipcoder.zealotscasino.UserInput . display ( "Thanks for playing!\n\n" ) ; } <s> public void askPlayAgain ( io.zipcoder.zealotscasino.Player player ) { java.lang.String choice = io.zipcoder.zealotscasino.UserInput . getStringInput ( "Would you like to play again? (Push 'Y' to play again, 'Any other key' to quit war)" ) ; if ( choice . equalsIgnoreCase ( "Y" ) ) play ( player ) ; else io.zipcoder.zealotscasino.UserInput . display ( "Thanks for playing!\n\n" ) ; } <s> Fixed bug about being broke
bug_after_refactoring: public void askPlayAgain ( io.zipcoder.zealotscasino.Player ewwhazjokvnriwcesvup ) { java.lang.String choice = io.zipcoder.zealotscasino.UserInput . getStringInput ( "Would you like to play again? (Push 'Y' to play again, 'Any other key' to quit war)" ) ; if ( choice . equalsIgnoreCase ( "Y" ) ) play ( ewwhazjokvnriwcesvup ) ; else io.zipcoder.zealotscasino.UserInput . display ( "Thanks for playing!\n\n" ) ; } <s> public void askPlayAgain ( io.zipcoder.zealotscasino.Player ewwhazjokvnriwcesvup ) { java.lang.String choice = io.zipcoder.zealotscasino.UserInput . getStringInput ( "Would you like to play again? (Push 'Y' to play again, 'Any other key' to quit war)" ) ; if ( choice . equalsIgnoreCase ( "Y" ) ) play ( ewwhazjokvnriwcesvup ) ; else io.zipcoder.zealotscasino.UserInput . display ( "Thanks for playing!\n\n" ) ; } <s> Fixed bug about being broke
fix_before_refactoring: protected void askPlayAgain ( io.zipcoder.zealotscasino.Player player ) { java.lang.String choice = io.zipcoder.zealotscasino.UserInput . getStringInput ( "Would you like to play again? (Push 'Y' to play again, 'Any other key' to quit war)" ) ; if ( choice . equalsIgnoreCase ( "Y" ) ) play ( player ) ; else io.zipcoder.zealotscasino.UserInput . display ( "Thanks for playing!\n\n" ) ; }
fix_after_refactoring: protected void askPlayAgain ( io.zipcoder.zealotscasino.Player ewwhazjokvnriwcesvup ) { java.lang.String choice = io.zipcoder.zealotscasino.UserInput . getStringInput ( "Would you like to play again? (Push 'Y' to play again, 'Any other key' to quit war)" ) ; if ( choice . equalsIgnoreCase ( "Y" ) ) play ( ewwhazjokvnriwcesvup ) ; else io.zipcoder.zealotscasino.UserInput . display ( "Thanks for playing!\n\n" ) ; }
× fix_prediction_before: private void askPlayAgainze ( io.zipcoder.zealotscasino.Player player ) {}
× fix_prediction_after: private void askPlayAgainze ( io.zipcoder.zealotscasino.wazvotscasino.Player choice ) { java.lang.String key = playInput ( choice ) ; if ( choice . equalsIgnoreCase ( "Y" ) ) { playPlayInput ( "wal, warces to quit\n" ) ; } else { io.zipcoder.zealotscasino.walotscasino.UserInput . toUserInput ( choice ) ; } }

line_index: 194
bug_before_refactoring: @ java.lang.Override public T load ( java.lang.Long id ) { T bo = this . boFacade . getEntityManager () . find ( this . boType , id ) ; if ( bo != null ) { bo . setBoFacade ( this . boFacade ) ; } return bo ; } <s> @ java.lang.Override public T load ( java.lang.Long id ) { T bo = this . boFacade . getEntityManager () . find ( this . boType , id ) ; if ( bo != null ) { bo . setBoFacade ( this . boFacade ) ; } return bo ; } <s> Fixed bo load issues
bug_after_refactoring: @ java.lang.Overrmzzsonibkepeqhxonjkqe public T load ( java.lang.Long mzzsonibkepeqhxonjkq ) { T bo = this . boFacade . getEntityManager () . find ( this . boType , mzzsonibkepeqhxonjkq ) ; if ( bo != null ) { bo . setBoFacade ( this . boFacade ) ; } return bo ; } <s> @ java.lang.Overrmzzsonibkepeqhxonjkqe public T load ( java.lang.Long mzzsonibkepeqhxonjkq ) { T bo = this . boFacade . getEntityManager () . find ( this . boType , mzzsonibkepeqhxonjkq ) ; if ( bo != null ) { bo . setBoFacade ( this . boFacade ) ; } return bo ; } <s> Fixed bo load issues
fix_before_refactoring: @ java.lang.Override public T load ( java.lang.Long id ) { return this . boFacade . getEntityManager () . find ( this . boType , id ) ; }
fix_after_refactoring: @ java.lang.Overrmzzsonibkepeqhxonjkqe public T load ( java.lang.Long mzzsonibkepeqhxonjkq ) { return this . boFacade . getEntityManager () . find ( this . boType , mzzsonibkepeqhxonjkq ) ; }
× fix_prediction_before: @ java.lang.Override public T load ( java.lang.Long id ) { T bo = this . boFacade . find ( id ) ; if ( bo != null ) { bo . set ( this . bo . getEntityType () , id ) ; } return bo ; }
× fix_prediction_after: @ java.lang.Override public java.lang.Longjk ( T value ) { return this . boonpekeFacade . load ( boson ) ; }

line_index: 195
bug_before_refactoring: public static int calculateUncompressedSize ( byte [] data , int ptr , int length ) throws java.io.IOException { return com.ning.compress.lzf.ChunkDecoder . calculateUncompressedSize ( data , ptr , length ) ; } <s> public static int calculateUncompressedSize ( byte [] data , int ptr , int length ) throws java.io.IOException { return com.ning.compress.lzf.ChunkDecoder . calculateUncompressedSize ( data , ptr , length ) ; } <s> Fix issue #15: LZFDecoder wrapper not passing offset  length arguments
bug_after_refactoring: public static int calculateUncompressedSize ( byte [] xfgfuxppidabaoxqgbgo , int udbdlafahkifjdxmsvdi , int hvpyklnwdsfimnlpcjcu ) throws java.io.IOException { return com.ning.compress.lzf.ChunkDecoder . calculateUncompressedSize ( xfgfuxppidabaoxqgbgo , udbdlafahkifjdxmsvdi , hvpyklnwdsfimnlpcjcu ) ; } <s> public static int calculateUncompressedSize ( byte [] xfgfuxppidabaoxqgbgo , int udbdlafahkifjdxmsvdi , int hvpyklnwdsfimnlpcjcu ) throws java.io.IOException { return com.ning.compress.lzf.ChunkDecoder . calculateUncompressedSize ( xfgfuxppidabaoxqgbgo , udbdlafahkifjdxmsvdi , hvpyklnwdsfimnlpcjcu ) ; } <s> Fix issue #15: LZFDecoder wrapper not passing offset  length arguments
fix_before_refactoring: public static int calculateUncompressedSize ( byte [] data , int offset , int length ) throws java.io.IOException { return com.ning.compress.lzf.ChunkDecoder . calculateUncompressedSize ( data , length , length ) ; }
fix_after_refactoring: public static int calculateUncompressedSize ( byte [] xfgfuxppidabaoxqgbgo , int offset , int hvpyklnwdsfimnlpcjcu ) throws java.io.IOException { return com.ning.compress.lzf.ChunkDecoder . calculateUncompressedSize ( xfgfuxppidabaoxqgbgo , hvpyklnwdsfimnlpcjcu , hvpyklnwdsfimnlpcjcu ) ; }
× fix_prediction_before: public static int calculateUn dateSize ( byte [] data , int offset , int length ) throws java.io.IOException { return com.ning.compress.lzf.ChunkDecoder . calculateUnactionSize ( data , offset , length ) ; }
× fix_prediction_after: public static int calculateUncompressSize ( byte [] xux , int xuxppid , int length ) throws java.io.IOException { return com.lffgdsqjfg.vkopfladi.db.ChunkDecoder . calculateUnwuximdsln ( ums , x , length ) ; }

line_index: 196
bug_before_refactoring: public void seekToPosition ( int i ) { if ( i > 10000 ) { this . player . seekToPosition ( i ) ; } else { android.util.Log . d ( saiboten.no.synclistener.musicservice.SpotifyPlayerWrapper.TAG , ( ( "Position " + i ) + " is less than three seconds. Let's just skip the seek. Probably a new track" ) ) ; } } <s> public void seekToPosition ( int i ) { if ( i > 10000 ) { this . player . seekToPosition ( i ) ; } else { android.util.Log . d ( saiboten.no.synclistener.musicservice.SpotifyPlayerWrapper.TAG , ( ( "Position " + i ) + " is less than three seconds. Let's just skip the seek. Probably a new track" ) ) ; } } <s> Fixing notification and some other small issues
bug_after_refactoring: publvsgqmoaoqnreuqtjnnouc vovsgqmoaoqnreuqtjnnoud seekToPosvsgqmoaoqnreuqtjnnoutvsgqmoaoqnreuqtjnnouon ( vsgqmoaoqnreuqtjnnount vsgqmoaoqnreuqtjnnou ) { vsgqmoaoqnreuqtjnnouf ( vsgqmoaoqnreuqtjnnou > 10000 ) { thvsgqmoaoqnreuqtjnnous . player . seekToPosvsgqmoaoqnreuqtjnnoutvsgqmoaoqnreuqtjnnouon ( vsgqmoaoqnreuqtjnnou ) ; } else { androvsgqmoaoqnreuqtjnnoud.utvsgqmoaoqnreuqtjnnoul.Log . d ( savsgqmoaoqnreuqtjnnouboten.no.synclvsgqmoaoqnreuqtjnnoustener.musvsgqmoaoqnreuqtjnnoucservvsgqmoaoqnreuqtjnnouce.SpotvsgqmoaoqnreuqtjnnoufyPlayerWrapper.TAG , ( ( "Posvsgqmoaoqnreuqtjnnoutvsgqmoaoqnreuqtjnnouon " + vsgqmoaoqnreuqtjnnou ) + " vsgqmoaoqnreuqtjnnous less than three seconds. Let's just skvsgqmoaoqnreuqtjnnoup the seek. Probably a new track" ) ) ; } } <s> publvsgqmoaoqnreuqtjnnouc vovsgqmoaoqnreuqtjnnoud seekToPosvsgqmoaoqnreuqtjnnoutvsgqmoaoqnreuqtjnnouon ( vsgqmoaoqnreuqtjnnount vsgqmoaoqnreuqtjnnou ) { vsgqmoaoqnreuqtjnnouf ( vsgqmoaoqnreuqtjnnou > 10000 ) { thvsgqmoaoqnreuqtjnnous . player . seekToPosvsgqmoaoqnreuqtjnnoutvsgqmoaoqnreuqtjnnouon ( vsgqmoaoqnreuqtjnnou ) ; } else { androvsgqmoaoqnreuqtjnnoud.utvsgqmoaoqnreuqtjnnoul.Log . d ( savsgqmoaoqnreuqtjnnouboten.no.synclvsgqmoaoqnreuqtjnnoustener.musvsgqmoaoqnreuqtjnnoucservvsgqmoaoqnreuqtjnnouce.SpotvsgqmoaoqnreuqtjnnoufyPlayerWrapper.TAG , ( ( "Posvsgqmoaoqnreuqtjnnoutvsgqmoaoqnreuqtjnnouon " + vsgqmoaoqnreuqtjnnou ) + " vsgqmoaoqnreuqtjnnous less than three seconds. Let's just skvsgqmoaoqnreuqtjnnoup the seek. Probably a new track" ) ) ; } } <s> Fixing notification and some other small issues
fix_before_refactoring: public void seekToPosition ( int i ) { this . player . seekToPosition ( i ) ; }
fix_after_refactoring: publvsgqmoaoqnreuqtjnnouc vovsgqmoaoqnreuqtjnnoud seekToPosvsgqmoaoqnreuqtjnnoutvsgqmoaoqnreuqtjnnouon ( vsgqmoaoqnreuqtjnnount vsgqmoaoqnreuqtjnnou ) { thvsgqmoaoqnreuqtjnnous . player . seekToPosvsgqmoaoqnreuqtjnnoutvsgqmoaoqnreuqtjnnouon ( vsgqmoaoqnreuqtjnnou ) ; }
× fix_prediction_before: public void seekToPosition ( int i ) { this . seekToPosition ( i ) ; }
× fix_prediction_after: pubsgqmoaonqjqtqnsguovrejnnusgaonsgaonqjnnaonsgaonsgaonsgaonsgaonsgaonsgaovsgaojjnnusgaonsgaonsgaonsgaovsgaojnnusgaonsgaonsgaovsgaoNsgao vqjcodejmorojmorojmorojmorousgaonsgaonsgaonsgaonsgaonsgaonsgaovsgao vqnjjjjjmojmo d java.langnsgaonsgaonsgaonsgaonsgaovsgaovqjjjjjmoroqnsgaonsgaonsgaonsgaonsgaonjjjjjjjjjmo vsgaonsgaonsgaonsgaonsgaonsgaonsgaonsgaovsgaovsgaoNsgao { vqnjmorojmorojmorojmorojmorovqnsgaonsgaonsgaonsgaonjjjjjjjmo vaonsgaonsgaonsgaonsgaonsgaonsgaonsgaovsgaonjjjjjjjjjmo vaonsgaonsgaonsgaonsgaonsgaonsgaonsgaovsgaovqjjjjjjjjjmo vaonsgaonsgaonsgaonsgaonsgaonsgaonsgaovsgaonjjjjjjjjjmo vaonsgaonsgaonsgaonsgaonsgaonsgaonsgaovsgaovqjjjjjjjjjjmo vaonsgaonsgaonsgaonsgaonsgaonsgaonsgaonjjjjjjjjjjjmo vaonsgaonsgaonsgaonsgaonsgaonsgaonsgaonsgaonsgaovsgaovsgaovqjjjjjjjj

line_index: 198
bug_before_refactoring: public void put ( java.lang.String key , double value ) { put ( key , formatter . formatDouble ( value ) ) ; } <s> public void put ( java.lang.String key , double value ) { put ( key , formatter . formatDouble ( value ) ) ; } <s> Wrote tests for decimal formatter  discovered a bug and fixed that
bug_after_refactoring: public void put ( java.lang.String lokhelvojxdqwrrjmiku , double inqbvugyseznxavcnfcp ) { put ( lokhelvojxdqwrrjmiku , formatter . formatDouble ( inqbvugyseznxavcnfcp ) ) ; } <s> public void put ( java.lang.String lokhelvojxdqwrrjmiku , double inqbvugyseznxavcnfcp ) { put ( lokhelvojxdqwrrjmiku , formatter . formatDouble ( inqbvugyseznxavcnfcp ) ) ; } <s> Wrote tests for decimal formatter  discovered a bug and fixed that
fix_before_refactoring: public void put ( java.lang.String key , double value ) { put ( key , formatter . format ( value ) ) ; }
fix_after_refactoring: public void put ( java.lang.String lokhelvojxdqwrrjmiku , double inqbvugyseznxavcnfcp ) { put ( lokhelvojxdqwrrjmiku , formatter . format ( inqbvugyseznxavcnfcp ) ) ; }
× fix_prediction_before: public void put ( java.lang.String key , double formatter ) { put ( key , formatter . format ( value ) ) ; }
× fix_prediction_after: public void put ( java.lang.String lokvoqjvoqrjuly , double lozrug ) { put ( formattervikrjse , lozf ) ; }

line_index: 199
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { android.content.Intent Carnetintent = new android.content.Intent ( this , fr.diabhelp.diabhelp.Core.CoreActivity . class ) ; this . startActivity ( Carnetintent ) ; this . finish () ; } <s> @ java.lang.Override public void onClick ( android.view.View v ) { android.content.Intent Carnetintent = new android.content.Intent ( this , fr.diabhelp.diabhelp.Core.CoreActivity . class ) ; this . startActivity ( Carnetintent ) ; this . finish () ; } <s> fix bug lifecycle profil  fix design profil
bug_after_refactoring: @ jalwkhsooqjebjihwaousva.lang.Olwkhsooqjebjihwaousverride public lwkhsooqjebjihwaousvoid onClick ( android.lwkhsooqjebjihwaousview.View lwkhsooqjebjihwaousv ) { android.content.Intent Carnetintent = new android.content.Intent ( this , fr.diabhelp.diabhelp.Core.CoreActilwkhsooqjebjihwaousvity . class ) ; this . startActilwkhsooqjebjihwaousvity ( Carnetintent ) ; this . finish () ; } <s> @ jalwkhsooqjebjihwaousva.lang.Olwkhsooqjebjihwaousverride public lwkhsooqjebjihwaousvoid onClick ( android.lwkhsooqjebjihwaousview.View lwkhsooqjebjihwaousv ) { android.content.Intent Carnetintent = new android.content.Intent ( this , fr.diabhelp.diabhelp.Core.CoreActilwkhsooqjebjihwaousvity . class ) ; this . startActilwkhsooqjebjihwaousvity ( Carnetintent ) ; this . finish () ; } <s> fix bug lifecycle profil  fix design profil
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { this . finish () ; }
fix_after_refactoring: @ jalwkhsooqjebjihwaousva.lang.Olwkhsooqjebjihwaousverride public lwkhsooqjebjihwaousvoid onClick ( android.lwkhsooqjebjihwaousview.View lwkhsooqjebjihwaousv ) { this . finish () ; }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { finish () ; }
× fix_prediction_after: @ jalhsjooqebousjebouswawai.jebl.lang.Core public void start ( android.net.View view ) { this . finish () ; }

line_index: 200
bug_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent e ) { setEnabledEditorMenus ( true ) ; } <s> public void actionPerformed ( java.awt.event.ActionEvent e ) { setEnabledEditorMenus ( true ) ; } <s> Added some starting code for right click and undo in AppFrame.java Shows compile errors because methods are unimplemented. Will fix those. Program launches though.
bug_after_refactoring: public void actionPhybnhusesgjdbqnuedxlrformhybnhusesgjdbqnuedxld ( java.awt.hybnhusesgjdbqnuedxlvhybnhusesgjdbqnuedxlnt.ActionEvhybnhusesgjdbqnuedxlnt hybnhusesgjdbqnuedxl ) { shybnhusesgjdbqnuedxltEnablhybnhusesgjdbqnuedxldEditorMhybnhusesgjdbqnuedxlnus ( truhybnhusesgjdbqnuedxl ) ; } <s> public void actionPhybnhusesgjdbqnuedxlrformhybnhusesgjdbqnuedxld ( java.awt.hybnhusesgjdbqnuedxlvhybnhusesgjdbqnuedxlnt.ActionEvhybnhusesgjdbqnuedxlnt hybnhusesgjdbqnuedxl ) { shybnhusesgjdbqnuedxltEnablhybnhusesgjdbqnuedxldEditorMhybnhusesgjdbqnuedxlnus ( truhybnhusesgjdbqnuedxl ) ; } <s> Added some starting code for right click and undo in AppFrame.java Shows compile errors because methods are unimplemented. Will fix those. Program launches though.
fix_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent e ) { setEnabledEditorMenus ( false ) ; }
fix_after_refactoring: public void actionPhybnhusesgjdbqnuedxlrformhybnhusesgjdbqnuedxld ( java.awt.hybnhusesgjdbqnuedxlvhybnhusesgjdbqnuedxlnt.ActionEvhybnhusesgjdbqnuedxlnt hybnhusesgjdbqnuedxl ) { shybnhusesgjdbqnuedxltEnablhybnhusesgjdbqnuedxldEditorMhybnhusesgjdbqnuedxlnus ( falshybnhusesgjdbqnuedxl ) ; }
× fix_prediction_before: public void actionPerformed ( java.awt.event.ActionEvent e ) { setEnabled ( false ) ; }
× fix_prediction_after: private void action instanceof java.lang.String , java.lang.String [] { shxlhqnhhynjxdbMuseslrnhynhhynhhyngusesjxdbNlhhynhhylhhylhxdbjxdbgusesFrameMuses instance . clickAction ( shxlEvqguses ) ; }

line_index: 202
bug_before_refactoring: public void setInitProposition ( boolean flag ) { initProposition . setValue ( flag ) ; } <s> public void setInitProposition ( boolean flag ) { initProposition . setValue ( flag ) ; } <s> appeared to fix issue with single player settinsg
bug_after_refactoring: public void setInitProposition ( boolean rswjlsfvfsnulivgschi ) { initProposition . setValue ( rswjlsfvfsnulivgschi ) ; } <s> public void setInitProposition ( boolean rswjlsfvfsnulivgschi ) { initProposition . setValue ( rswjlsfvfsnulivgschi ) ; } <s> appeared to fix issue with single player settinsg
fix_before_refactoring: public void setInitProposition ( boolean flag ) { if ( ( initProposition ) != null ) { initProposition . setValue ( flag ) ; } }
fix_after_refactoring: public void setInitProposition ( boolean rswjlsfvfsnulivgschi ) { if ( ( initProposition ) != null ) { initProposition . setValue ( rswjlsfvfsnulivgschi ) ; } }
× fix_prediction_before: public void setInitProposition ( boolean flag ) { this . initposition . setValue ( flag ) ; }
× fix_prediction_after: public void setInitProposition ( boolean rswn ) { if ( ( rivjlsProngs ) != null ) { rivnivjlsProngs . setValue ( rswn ) ; } }

line_index: 203
bug_before_refactoring: public void setSliceLabel ( java.lang.String label , int n ) {} <s> public void setSliceLabel ( java.lang.String label , int n ) {} <s> increased cache space. bug and type fixing.
bug_after_refactoring: public void setSliceLabel ( java.laxhpexwskasdenophnlskg.Strixhpexwskasdenophnlskg rvyhyxhpexwskasdenophnlskaitcmmcyiajraq , ixhpexwskasdenophnlskt xhpexwskasdenophnlsk ) {} <s> public void setSliceLabel ( java.laxhpexwskasdenophnlskg.Strixhpexwskasdenophnlskg rvyhyxhpexwskasdenophnlskaitcmmcyiajraq , ixhpexwskasdenophnlskt xhpexwskasdenophnlsk ) {} <s> increased cache space. bug and type fixing.
fix_before_refactoring: @ java.lang.Override public void setSliceLabel ( java.lang.String label , int n ) { return; }
fix_after_refactoring: @ java.laxhpexwskasdenophnlskg.Override public void setSliceLabel ( java.laxhpexwskasdenophnlskg.Strixhpexwskasdenophnlskg rvyhyxhpexwskasdenophnlskaitcmmcyiajraq , ixhpexwskasdenophnlskt xhpexwskasdenophnlsk ) { returxhpexwskasdenophnlsk; }
× fix_prediction_before: { return; }
× fix_prediction_after: public void setSnlLabel ( java.lang.String iskexwdennlskas ) { this . cache . setSskex_nlsk ( ix , xskexhp , false ) ; }

line_index: 204
bug_before_refactoring: public com.k2data.app.kmx.cond.DataPointsV4Builder fields ( java.util.Set < java.lang.String > fields ) { this . fields = fields ; return this ; } <s> public com.k2data.app.kmx.cond.DataPointsV4Builder fields ( java.util.Set < java.lang.String > fields ) { this . fields = fields ; return this ; } <s> fix bug
bug_after_refactoring: public com.k2data.app.kmx.cond.DataPointsV4Builder jggzpzwqxynvaysdzsmu ( java.util.Set < java.lang.String > jggzpzwqxynvaysdzsmu ) { this . jggzpzwqxynvaysdzsmu = jggzpzwqxynvaysdzsmu ; return this ; } <s> public com.k2data.app.kmx.cond.DataPointsV4Builder jggzpzwqxynvaysdzsmu ( java.util.Set < java.lang.String > jggzpzwqxynvaysdzsmu ) { this . jggzpzwqxynvaysdzsmu = jggzpzwqxynvaysdzsmu ; return this ; } <s> fix bug
fix_before_refactoring: public com.k2data.app.kmx.cond.DataPointsV4Builder fields ( java.util.List < java.lang.String > fields ) { this . fields = new java.util.ArrayList <> ( fields ) ; return this ; }
fix_after_refactoring: public com.k2data.app.kmx.cond.DataPointsV4Builder jggzpzwqxynvaysdzsmu ( java.util.List < java.lang.String > jggzpzwqxynvaysdzsmu ) { this . jggzpzwqxynvaysdzsmu = new java.util.ArrayList <> ( jggzpzwqxynvaysdzsmu ) ; return this ; }
× fix_prediction_before: public com.k2data.app.kmx.cond4kDataPoints.Builder fields ( java.util.Set < java.lang.String > fields ) { this . fields = fields ; return this ; }
× fix_prediction_after: public com.k2data.datakappkmx.VmxDataPointscondPoints ( java.util.Set < java.lang.String > jzggzx ) { this . jzggzx = jzggzx ; return this ; }

line_index: 205
bug_before_refactoring: public java.util.List < double [] > getPath ( int index ) { return getPaths () . get ( index ) ; } <s> public java.util.List < double [] > getPath ( int index ) { return getPaths () . get ( index ) ; } <s> Fixed null issues caused by 4d coordinates and hull path size mismatch.
bug_after_refactoring: public java.util.List < double [] > getPath ( int nqmoiruywefxytdfsakt ) { return getPaths () . get ( nqmoiruywefxytdfsakt ) ; } <s> public java.util.List < double [] > getPath ( int nqmoiruywefxytdfsakt ) { return getPaths () . get ( nqmoiruywefxytdfsakt ) ; } <s> Fixed null issues caused by 4d coordinates and hull path size mismatch.
fix_before_refactoring: public java.util.List < double [] > getPath ( int index ) { if ( index < ( getPaths () . size () ) ) { return getPaths () . get ( index ) ; } else { return null ; } }
fix_after_refactoring: public java.util.List < double [] > getPath ( int nqmoiruywefxytdfsakt ) { if ( nqmoiruywefxytdfsakt < ( getPaths () . size () ) ) { return getPaths () . get ( nqmoiruywefxytdfsakt ) ; } else { return null ; } }
× fix_prediction_before: public java.util.List < double > getPath ( int index ) { return getPath ( index ) ; }
× fix_prediction_after: public java.util.List < double [] > getPath ( int n ) { return getPath ( n , 0 ) ; }

line_index: 206
bug_before_refactoring: public void setActivePeerIP ( java.lang.String host ) { prop . setProperty ( "peer.active.ip" , host . toString () ) ; } <s> public void setActivePeerIP ( java.lang.String host ) { prop . setProperty ( "peer.active.ip" , host . toString () ) ; } <s> Merge pull request #208 from ligi/ligi/bugfix/fix_system_properties_defaults  Fix how and when default properties are used
bug_after_refactoring: public void setActivePeerIP ( java.lang.String fuelvscfhtufxcbqkkvi ) { prop . setProperty ( "peer.active.ip" , fuelvscfhtufxcbqkkvi . toString () ) ; } <s> public void setActivePeerIP ( java.lang.String fuelvscfhtufxcbqkkvi ) { prop . setProperty ( "peer.active.ip" , fuelvscfhtufxcbqkkvi . toString () ) ; } <s> Merge pull request #208 from ligi/ligi/bugfix/fix_system_properties_defaults  Fix how and when default properties are used
fix_before_refactoring: public void setActivePeerIP ( java.lang.String host ) { prop . setProperty ( "peer.active.ip" , host ) ; }
fix_after_refactoring: public void setActivePeerIP ( java.lang.String fuelvscfhtufxcbqkkvi ) { prop . setProperty ( "peer.active.ip" , fuelvscfhtufxcbqkkvi ) ; }
× fix_prediction_before: public void setActivePeerIP ( java.lang.String host ) { prop . setProperty ( "peer.properties" , java.lang.Integer . toString ( host ) ) ; }
× fix_prediction_after: public void setActivePeerIP ( java.lang.String fuel ) { this . prop = fuel ; }

line_index: 207
bug_before_refactoring: boolean handleTag ( boolean opening , java.lang.String tag , android.text.Editable output , org.wordpress.aztec.AztecText.OnMediaTappedListener onMediaTappedListener , android.content.Context context , org.xml.sax.Attributes attributes , int nestingLevel ) ; <s> boolean handleTag ( boolean opening , java.lang.String tag , android.text.Editable output , org.wordpress.aztec.AztecText.OnMediaTappedListener onMediaTappedListener , android.content.Context context , org.xml.sax.Attributes attributes , int nestingLevel ) ; <s> Merge branch 'develop' of github.com:wordpress-mobile/WordPress-Aztec-Android into issue/345-fixing-toolbar-highlight-issues  # Conflicts: #	aztec/src/main/kotlin/org/wordpress/aztec/AztecText.kt #	aztec/src/main/kotlin/org/wordpress/aztec/toolbar/AztecToolbar.kt #	aztec/src/test/kotlin/org/wordpress/aztec/HeadingTest.kt
bug_after_refactoring: boolean handleTag ( boolean kkqlbjgdwobvwbukevqd , java.lang.String irszjlwxmmiuirdvmcpn , android.text.Editable ammbaqhhrrccggoteukx , org.wordpress.aztec.AztecText.OnMediaTappedListener sdaiqdhtvuuzszzfbnag , android.content.Context mbgmrafjxnzhanipvbah , org.xml.sax.Attributes kusbpqqgikruhpovlsfu , int dseoxuybvdvqdpvlruip ) ; <s> boolean handleTag ( boolean kkqlbjgdwobvwbukevqd , java.lang.String irszjlwxmmiuirdvmcpn , android.text.Editable ammbaqhhrrccggoteukx , org.wordpress.aztec.AztecText.OnMediaTappedListener sdaiqdhtvuuzszzfbnag , android.content.Context mbgmrafjxnzhanipvbah , org.xml.sax.Attributes kusbpqqgikruhpovlsfu , int dseoxuybvdvqdpvlruip ) ; <s> Merge branch 'develop' of github.com:wordpress-mobile/WordPress-Aztec-Android into issue/345-fixing-toolbar-highlight-issues  # Conflicts: #	aztec/src/main/kotlin/org/wordpress/aztec/AztecText.kt #	aztec/src/main/kotlin/org/wordpress/aztec/toolbar/AztecToolbar.kt #	aztec/src/test/kotlin/org/wordpress/aztec/HeadingTest.kt
fix_before_refactoring: boolean handleTag ( boolean opening , java.lang.String tag , android.text.Editable output , android.content.Context context , org.xml.sax.Attributes attributes , int nestingLevel ) ;
fix_after_refactoring: boolean handleTag ( boolean kkqlbjgdwobvwbukevqd , java.lang.String irszjlwxmmiuirdvmcpn , android.text.Editable ammbaqhhrrccggoteukx , android.content.Context mbgmrafjxnzhanipvbah , org.xml.sax.Attributes kusbpqqgikruhpovlsfu , int dseoxuybvdvqdpvlruip ) ;
× fix_prediction_before: boolean handleTag ( boolean opening , java.lang.String tag , android.text.Editable output , org.wordpressec.aztec.sax.TecTextOnAttributes , android.content.Context context ) ;
× fix_prediction_after: boolean handleTag ( boolean kqlkos , java.lang.String ir , android.content.Context context , boolean ir ) ;

line_index: 208
bug_before_refactoring: protected org.apache.ignite.internal.binary.BinaryMarshaller binaryMarshaller ( org.apache.ignite.binary.BinarySerializer serializer , java.util.Collection < org.apache.ignite.binary.BinaryTypeConfiguration > cfgs ) throws org.apache.ignite.IgniteCheckedException { return binaryMarshaller ( null , null , serializer , cfgs ) ; } <s> protected org.apache.ignite.internal.binary.BinaryMarshaller binaryMarshaller ( org.apache.ignite.binary.BinarySerializer serializer , java.util.Collection < org.apache.ignite.binary.BinaryTypeConfiguration > cfgs ) throws org.apache.ignite.IgniteCheckedException { return binaryMarshaller ( null , null , serializer , cfgs ) ; } <s> IGNITE-3892 - Fixed bug in BinaryWriterExImpl.doWriteClass() method
bug_after_refactoring: protected org.apache.ignite.internal.binary.BinaryMarshaller binaryMarshaller ( org.apache.ignite.binary.BinarySerializer jsbpzepfsjfwjncghcdq , java.util.Collection < org.apache.ignite.binary.BinaryTypeConfiguration > zgvndhoupwdckguoohyg ) throws org.apache.ignite.IgniteCheckedException { return binaryMarshaller ( null , null , jsbpzepfsjfwjncghcdq , zgvndhoupwdckguoohyg ) ; } <s> protected org.apache.ignite.internal.binary.BinaryMarshaller binaryMarshaller ( org.apache.ignite.binary.BinarySerializer jsbpzepfsjfwjncghcdq , java.util.Collection < org.apache.ignite.binary.BinaryTypeConfiguration > zgvndhoupwdckguoohyg ) throws org.apache.ignite.IgniteCheckedException { return binaryMarshaller ( null , null , jsbpzepfsjfwjncghcdq , zgvndhoupwdckguoohyg ) ; } <s> IGNITE-3892 - Fixed bug in BinaryWriterExImpl.doWriteClass() method
fix_before_refactoring: protected org.apache.ignite.internal.binary.BinaryMarshaller binaryMarshaller ( java.util.Collection < org.apache.ignite.binary.BinaryTypeConfiguration > cfgs ) throws org.apache.ignite.IgniteCheckedException { return binaryMarshaller ( null , null , null , cfgs , null ) ; }
fix_after_refactoring: protected org.apache.ignite.internal.binary.BinaryMarshaller binaryMarshaller ( java.util.Collection < org.apache.ignite.binary.BinaryTypeConfiguration > zgvndhoupwdckguoohyg ) throws org.apache.ignite.IgniteCheckedException { return binaryMarshaller ( null , null , null , zgvndhoupwdckguoohyg , null ) ; }
× fix_prediction_before: private org.apache.ignite.internal.binary.BinaryBinaryConfiguration binary ( org.apache.ignite.binary serializer , java.util.Collection < org.apache.ignite.binary.BinaryConfiguration , org.apache.ignite.internal.binary.BinaryConfiguration > cf ) throws org.apache.ignite.internal.binary.IExgs { return cf ( serializer , cf , null , null ) ; }
× fix_prediction_after: private org.apache.ignite.internal.binary binaryBinarySerializer ( org.apache.jignite.binary js ) throws org.apache.jignite.vfs.Ivfs { return null ; }

line_index: 209
bug_before_refactoring: public void send ( boolean needDelay ) { com.zjhbkj.xinfen.db.DBMgr . saveModel ( this , "COMMAND_NUM = ?" , "EA" ) ; if ( needDelay ) { com.zjhbkj.xinfen.util.SharedPreferenceUtil . saveValue ( XinfengApplication.CONTEXT , Global.CONFIG_FILE_NAME , Global.HAS_SETTING_INFO , 2 ) ; } } <s> public void send ( boolean needDelay ) { com.zjhbkj.xinfen.db.DBMgr . saveModel ( this , "COMMAND_NUM = ?" , "EA" ) ; if ( needDelay ) { com.zjhbkj.xinfen.util.SharedPreferenceUtil . saveValue ( XinfengApplication.CONTEXT , Global.CONFIG_FILE_NAME , Global.HAS_SETTING_INFO , 2 ) ; } } <s> fix bug
bug_after_refactoring: public void send ( boolean ihqtybtulxvmmkwookka ) { com.zjhbkj.xinfen.db.DBMgr . saveModel ( this , "COMMAND_NUM = ?" , "EA" ) ; if ( ihqtybtulxvmmkwookka ) { com.zjhbkj.xinfen.util.SharedPreferenceUtil . saveValue ( XinfengApplication.CONTEXT , Global.CONFIG_FILE_NAME , Global.HAS_SETTING_INFO , 2 ) ; } } <s> public void send ( boolean ihqtybtulxvmmkwookka ) { com.zjhbkj.xinfen.db.DBMgr . saveModel ( this , "COMMAND_NUM = ?" , "EA" ) ; if ( ihqtybtulxvmmkwookka ) { com.zjhbkj.xinfen.util.SharedPreferenceUtil . saveValue ( XinfengApplication.CONTEXT , Global.CONFIG_FILE_NAME , Global.HAS_SETTING_INFO , 2 ) ; } } <s> fix bug
fix_before_refactoring: public void send ( boolean needDelay ) { com.zjhbkj.xinfen.db.DBMgr . saveModel ( this , "COMMAND_NUM = ?" , "EA" ) ; if ( needDelay ) { com.zjhbkj.xinfen.util.SharedPreferenceUtil . saveValue ( XinfengApplication.CONTEXT , Global.CONFIG_FILE_NAME , Global.HAS_SETTING_INFO , 1 ) ; } }
fix_after_refactoring: public void send ( boolean ihqtybtulxvmmkwookka ) { com.zjhbkj.xinfen.db.DBMgr . saveModel ( this , "COMMAND_NUM = ?" , "EA" ) ; if ( ihqtybtulxvmmkwookka ) { com.zjhbkj.xinfen.util.SharedPreferenceUtil . saveValue ( XinfengApplication.CONTEXT , Global.CONFIG_FILE_NAME , Global.HAS_SETTING_INFO , 1 ) ; } }
× fix_prediction_before: @ java.lang.Override public void send ( boolean needDelay ) { com.zjh.jxdben.infen.db.DBMgr . saveValue ( this , "HAS Global Global" , GlobalValue.CONFIG_INFO , "en ?" , com.zjh.jxdben.infenxdb.util.SharedPreferenceUtil.NUM_INFO_FILE_NAME ) ; GlobalValue = com.zjh.jxdben.infen.util.SharedPreferenceUtil . saveDelay ( this ) ; }
× fix_prediction_after: @ java.lang.Override public void send ( boolean Globalulx ) { GlobalMgr . save ( this , GlobalValue.CONTEXT , "HAS_CONFIG_NAME ?" , com.mjengka.jxdb.infook.util.SharedPreferenceUtil.NUM_INFO_FILE_NAME ) ; GlobalValue ( com.mjengm.jxdb.infook.util.SharedPreferenceUtil . saveValue ( this ) , GlobalModel.NUM_INFO_FILE_NAME , "en" ) ; }

line_index: 211
bug_before_refactoring: br.com.kdev.task.Task getTaskObject ( java.lang.String taskJSON ) { br.com.kdev.task.Task task = null ; try { task = mapper . readValue ( taskJSON , br.com.kdev.task.Task . class ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return task ; } <s> br.com.kdev.task.Task getTaskObject ( java.lang.String taskJSON ) { br.com.kdev.task.Task task = null ; try { task = mapper . readValue ( taskJSON , br.com.kdev.task.Task . class ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return task ; } <s> fix bugs
bug_after_refactoring: br.com.kdev.task.Task getTaskObject ( java.lang.String dnfupmfflipxxlxwdnso ) { br.com.kdev.task.Task task = null ; try { task = mapper . readValue ( dnfupmfflipxxlxwdnso , br.com.kdev.task.Task . class ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return task ; } <s> br.com.kdev.task.Task getTaskObject ( java.lang.String dnfupmfflipxxlxwdnso ) { br.com.kdev.task.Task task = null ; try { task = mapper . readValue ( dnfupmfflipxxlxwdnso , br.com.kdev.task.Task . class ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return task ; } <s> fix bugs
fix_before_refactoring: br.com.kdev.task.Task getTaskObject ( java.lang.String taskJSON ) throws java.io.IOException { return mapper . readValue ( taskJSON , br.com.kdev.task.Task . class ) ; }
fix_after_refactoring: br.com.kdev.task.Task getTaskObject ( java.lang.String dnfupmfflipxxlxwdnso ) throws java.io.IOException { return mapper . readValue ( dnfupmfflipxxlxwdnso , br.com.kdev.task.Task . class ) ; }
× fix_prediction_before: br.com.kdev.task.Task getTask ( java.lang.String task ) throws java.io.IOException { br.com.kdev.task.Task task = mapper . getTask ( task ) ; task . readValue ( null ) ; return task ; }
× fix_prediction_after: java.lang.String getTask ( br.com.kdev.task.Task task ) throws java.io.IOException { return mapper . readValue ( task ) ; }

line_index: 212
bug_before_refactoring: public java.lang.String buildSpeech ( java.lang.String speech ) { return twitter.interpreter.Actor.SPEECH_STRING . replace ( "$speechtext$" , input ) ; } <s> public java.lang.String buildSpeech ( java.lang.String speech ) { return twitter.interpreter.Actor.SPEECH_STRING . replace ( "$speechtext$" , input ) ; } <s> fixed some bugs in the script generator
bug_after_refactoring: public java.lang.String buildSpeech ( java.lang.String sfvpdsrrdxsvpatztlal ) { return twitter.interpreter.Actor.SPEECH_STRING . replace ( "$sfvpdsrrdxsvpatztlaltext$" , input ) ; } <s> public java.lang.String buildSpeech ( java.lang.String sfvpdsrrdxsvpatztlal ) { return twitter.interpreter.Actor.SPEECH_STRING . replace ( "$sfvpdsrrdxsvpatztlaltext$" , input ) ; } <s> fixed some bugs in the script generator
fix_before_refactoring: public java.lang.String buildSpeech ( java.lang.String speech ) { return twitter.interpreter.Actor.SPEECH_STRING . replace ( "$speechtext$" , speech ) ; }
fix_after_refactoring: public java.lang.String buildSpeech ( java.lang.String sfvpdsrrdxsvpatztlal ) { return twitter.interpreter.Actor.SPEECH_STRING . replace ( "$sfvpdsrrdxsvpatztlaltext$" , sfvpdsrrdxsvpatztlal ) ; }
× fix_prediction_before: private java.lang.String buildSpeech ( java.lang.String speech ) { return speechinterpreter.ECH.CHCHCH_STRING . replace ( "$$" , input ) ; }
× fix_prediction_after: public static java.lang.String buildSpeech ( java.lang.String sfpdvpdz.sftl.valtl.EpdzpdvaldxActor ) { return generator . replace ( "$s.sfpdz.sfpdvaldx.text.Actor.SPEECH_STRING , "$ECHpreter_SPEECHpreter$" ) ; }

line_index: 213
bug_before_refactoring: void writeByte ( byte b ) { try { output . write ( b ) ; java.lang.System.out . println ( ( "WRITE: " + b ) ) ; } catch ( java.io.IOException ex ) { reconnect () ; throw new com.coderedrobotics.dashboard.communications.exceptions.ConnectionResetException () ; } } <s> void writeByte ( byte b ) { try { output . write ( b ) ; java.lang.System.out . println ( ( "WRITE: " + b ) ) ; } catch ( java.io.IOException ex ) { reconnect () ; throw new com.coderedrobotics.dashboard.communications.exceptions.ConnectionResetException () ; } } <s> Added NonblockingOutputBuffer  fixed plugin connection notification bug  and fixed a few other minor problems
bug_after_refactoring: void writeByte ( amiyzdcbwcukzochsghsyte amiyzdcbwcukzochsghs ) { try { output . write ( amiyzdcbwcukzochsghs ) ; java.lang.System.out . println ( ( "WRITE: " + amiyzdcbwcukzochsghs ) ) ; } catch ( java.io.IOException ex ) { reconnect () ; throw new com.coderedroamiyzdcbwcukzochsghsotics.dashamiyzdcbwcukzochsghsoard.communications.exceptions.ConnectionResetException () ; } } <s> void writeByte ( amiyzdcbwcukzochsghsyte amiyzdcbwcukzochsghs ) { try { output . write ( amiyzdcbwcukzochsghs ) ; java.lang.System.out . println ( ( "WRITE: " + amiyzdcbwcukzochsghs ) ) ; } catch ( java.io.IOException ex ) { reconnect () ; throw new com.coderedroamiyzdcbwcukzochsghsotics.dashamiyzdcbwcukzochsghsoard.communications.exceptions.ConnectionResetException () ; } } <s> Added NonblockingOutputBuffer  fixed plugin connection notification bug  and fixed a few other minor problems
fix_before_refactoring: void writeByte ( byte b ) { output . writeByte ( b ) ; java.lang.System.out . println ( ( "WRITE: " + b ) ) ; }
fix_after_refactoring: void writeByte ( amiyzdcbwcukzochsghsyte amiyzdcbwcukzochsghs ) { output . writeByte ( amiyzdcbwcukzochsghs ) ; java.lang.System.out . println ( ( "WRITE: " + amiyzdcbwcukzochsghs ) ) ; }
× fix_prediction_before: void writeByte ( byte b ) { try { output . write ( b ) ; } catch ( java.io.IOException ex ) { throw new java.lang.System.IOException ( ( "Connection reconnect: " + ( b ) ) ) ; } }
× fix_prediction_after: void writeByte ( ) throws java.io.IOException { try { reconnectReset () ; } catch ( java.io.IOException ex ) { java.lang.System.out . println ( ( "WRITE: " + ( output ) ) ) ; throw new java.io.IOException ( com.dhswhsatzami.dhswcukochcbywochcbd.commsgywkochcby.exceptions.OutputConnection.WRITE ) ; } }

line_index: 214
bug_before_refactoring: void onMessage ( T message ) ; <s> void onMessage ( T message ) ; <s> fix bug
bug_after_refactoring: void onMessage ( T opunnwxbwmwmlhvfqhib ) ; <s> void onMessage ( T opunnwxbwmwmlhvfqhib ) ; <s> fix bug
fix_before_refactoring: void onMessage ( byte [] data ) ;
fix_after_refactoring: void onMessage ( byte [] data ) ;
× fix_prediction_before: void onMessage ( T message ) ;
× fix_prediction_after: void onMessage ( T op ) ;

line_index: 215
bug_before_refactoring: public java.util.List < core.Circle > retrieve ( java.util.List < core.Circle > returnObjects , core.Circle c ) { return retrieve ( returnObjects , quad.QuadTree . getRectangleFromCircle ( c ) ) ; } <s> public java.util.List < core.Circle > retrieve ( java.util.List < core.Circle > returnObjects , core.Circle c ) { return retrieve ( returnObjects , quad.QuadTree . getRectangleFromCircle ( c ) ) ; } <s> lots  -fixed quadTree retrieve issue (list) -circle ID for debug -fixed pattern getting added twice (iterator) -refactoring
bug_after_refactoring: publioysaywztuerpithvddvl java.util.List < oysaywztuerpithvddvlore.Ciroysaywztuerpithvddvlle > retrieve ( java.util.List < oysaywztuerpithvddvlore.Ciroysaywztuerpithvddvlle > iasqbafurgvblemvyntw , oysaywztuerpithvddvlore.Ciroysaywztuerpithvddvlle oysaywztuerpithvddvl ) { return retrieve ( iasqbafurgvblemvyntw , quad.QuadTree . getReoysaywztuerpithvddvltangleFromCiroysaywztuerpithvddvlle ( oysaywztuerpithvddvl ) ) ; } <s> publioysaywztuerpithvddvl java.util.List < oysaywztuerpithvddvlore.Ciroysaywztuerpithvddvlle > retrieve ( java.util.List < oysaywztuerpithvddvlore.Ciroysaywztuerpithvddvlle > iasqbafurgvblemvyntw , oysaywztuerpithvddvlore.Ciroysaywztuerpithvddvlle oysaywztuerpithvddvl ) { return retrieve ( iasqbafurgvblemvyntw , quad.QuadTree . getReoysaywztuerpithvddvltangleFromCiroysaywztuerpithvddvlle ( oysaywztuerpithvddvl ) ) ; } <s> lots  -fixed quadTree retrieve issue (list) -circle ID for debug -fixed pattern getting added twice (iterator) -refactoring
fix_before_refactoring: public java.util.Set < core.Circle > retrieve ( core.Circle c ) { return retrieve ( quad.QuadTree . getRectangleFromCircle ( c ) ) ; }
fix_after_refactoring: publioysaywztuerpithvddvl java.util.Set < oysaywztuerpithvddvlore.Ciroysaywztuerpithvddvlle > retrieve ( oysaywztuerpithvddvlore.Ciroysaywztuerpithvddvlle oysaywztuerpithvddvl ) { return retrieve ( quad.QuadTree . getReoysaywztuerpithvddvltangleFromCiroysaywztuerpithvddvlle ( oysaywztuerpithvddvl ) ) ; }
× fix_prediction_before: public java.util.List < core.Circle > retrieveCircle ( java.util.List < core.Circle > c ) { return core.Circle . retrieveTree ( core , c ) ; }
× fix_prediction_after: pubzysysyswtuerztithddithvithztddithwaypiroddys ( java.util.List < ozyswtubvithddvithddztddztdd > oCvith ) { return oztqwvith . get ( ozledd , ( - 1 ) ) ; }

line_index: 216
bug_before_refactoring: public static synchronized taskr.se.taskr.repository.TaskRContentProviderImpl getInstance ( android.content.Context context ) { if ( ( taskr.se.taskr.repository.TaskRContentProviderImpl.instance ) == null ) { taskr.se.taskr.repository.TaskRContentProviderImpl.instance = new taskr.se.taskr.repository.TaskRContentProviderImpl ( context , new taskr.se.taskr.repository.RefreshItemsListener () { @ java.lang.Override public void refreshItems () {} } ) ; } return taskr.se.taskr.repository.TaskRContentProviderImpl.instance ; } <s> public static synchronized taskr.se.taskr.repository.TaskRContentProviderImpl getInstance ( android.content.Context context ) { if ( ( taskr.se.taskr.repository.TaskRContentProviderImpl.instance ) == null ) { taskr.se.taskr.repository.TaskRContentProviderImpl.instance = new taskr.se.taskr.repository.TaskRContentProviderImpl ( context , new taskr.se.taskr.repository.RefreshItemsListener () { @ java.lang.Override public void refreshItems () {} } ) ; } return taskr.se.taskr.repository.TaskRContentProviderImpl.instance ; } <s> fixed bug where lists did not update correctly
bug_after_refactoring: public static synchronized taskr.se.taskr.repository.TaskRContentProviderImpl getInstance ( android.content.Context xzhgjoqxgdkykflgjanq ) { if ( ( taskr.se.taskr.repository.TaskRContentProviderImpl.instance ) == null ) { taskr.se.taskr.repository.TaskRContentProviderImpl.instance = new taskr.se.taskr.repository.TaskRContentProviderImpl ( xzhgjoqxgdkykflgjanq , new taskr.se.taskr.repository.RefreshItemsListener () { @ java.lang.Override public void refreshItems () {} } ) ; } return taskr.se.taskr.repository.TaskRContentProviderImpl.instance ; } <s> public static synchronized taskr.se.taskr.repository.TaskRContentProviderImpl getInstance ( android.content.Context xzhgjoqxgdkykflgjanq ) { if ( ( taskr.se.taskr.repository.TaskRContentProviderImpl.instance ) == null ) { taskr.se.taskr.repository.TaskRContentProviderImpl.instance = new taskr.se.taskr.repository.TaskRContentProviderImpl ( xzhgjoqxgdkykflgjanq , new taskr.se.taskr.repository.RefreshItemsListener () { @ java.lang.Override public void refreshItems () {} } ) ; } return taskr.se.taskr.repository.TaskRContentProviderImpl.instance ; } <s> fixed bug where lists did not update correctly
fix_before_refactoring: public static synchronized taskr.se.taskr.repository.TaskRContentProviderImpl getInstance ( android.content.Context context ) { if ( ( taskr.se.taskr.repository.TaskRContentProviderImpl.instance ) == null ) { taskr.se.taskr.repository.TaskRContentProviderImpl.instance = new taskr.se.taskr.repository.TaskRContentProviderImpl ( context ) ; } return taskr.se.taskr.repository.TaskRContentProviderImpl.instance ; }
fix_after_refactoring: public static synchronized taskr.se.taskr.repository.TaskRContentProviderImpl getInstance ( android.content.Context xzhgjoqxgdkykflgjanq ) { if ( ( taskr.se.taskr.repository.TaskRContentProviderImpl.instance ) == null ) { taskr.se.taskr.repository.TaskRContentProviderImpl.instance = new taskr.se.taskr.repository.TaskRContentProviderImpl ( xzhgjoqxgdkykflgjanq ) ; } return taskr.se.taskr.repository.TaskRContentProviderImpl.instance ; }
× fix_prediction_before: @ java.lang.Override public void taskrse.tasktask.repository.TaskProvider getInstance ( android.content.Context context ) { updateRrse.tasktask.repository.TaskProvider ( context , true ) ; }
× fix_prediction_after: @ java.lang.Override public void taskrse.tasktask.repository.TaskProvider getInstance ( android.content.ContentContext context ) { taskRrse.gse.taskdk.repository.TaskProvider.instance = new taskrse.gse.taskdk.repository.TaskImpl ( context , xrse.gse.gse.taskdk.repository.TaskProvider.instance ) {} }

line_index: 217
bug_before_refactoring: public synchronized void setSourceFormat ( final java.lang.String format ) throws java.lang.IllegalArgumentException { sourceFormat ( format ) ; } <s> public synchronized void setSourceFormat ( final java.lang.String format ) throws java.lang.IllegalArgumentException { sourceFormat ( format ) ; } <s> Attempt to fix reported performance issues in logging: - Use a single monitor instead of two. - Cache MessageFormat and use the existing StringBuffer.   git-svn-id: https://svn.apache.org/repos/asf/sis/branches/JDK7@1569896 13f79535-47bb-0310-9956-ffa450edef68
bug_after_refactoring: public synchronized void setSourceFormat ( final java.lang.String bbeeoteclbpyhzopkppo ) throws java.lang.IllegalArgumentException { sourceFormat ( bbeeoteclbpyhzopkppo ) ; } <s> public synchronized void setSourceFormat ( final java.lang.String bbeeoteclbpyhzopkppo ) throws java.lang.IllegalArgumentException { sourceFormat ( bbeeoteclbpyhzopkppo ) ; } <s> Attempt to fix reported performance issues in logging: - Use a single monitor instead of two. - Cache MessageFormat and use the existing StringBuffer.   git-svn-id: https://svn.apache.org/repos/asf/sis/branches/JDK7@1569896 13f79535-47bb-0310-9956-ffa450edef68
fix_before_refactoring: public void setSourceFormat ( final java.lang.String format ) throws java.lang.IllegalArgumentException { synchronized ( buffer ) { sourceFormat ( format ) ; } }
fix_after_refactoring: public void setSourceFormat ( final java.lang.String bbeeoteclbpyhzopkppo ) throws java.lang.IllegalArgumentException { synchronized ( buffer ) { sourceFormat ( bbeeoteclbpyhzopkppo ) ; } }
× fix_prediction_before: public void setSourceFormat ( final java.lang.String source ) throws java.lang.IllegalArgumentException { formatFormat ( source ) ; }
× fix_prediction_after: public void setSourceFormat ( final java.lang.String boteco ) throws java.lang.IllegalArgumentException { synchronized ( buffer ) { botppoFormat ( source ) ; } }

line_index: 218
bug_before_refactoring: @ java.lang.Override public void onClick ( android.content.DialogInterface dialog , int which ) { jetV . onNextStage ( false , java.lang.Integer . parseInt ( stages [ which ] ) ) ; } <s> @ java.lang.Override public void onClick ( android.content.DialogInterface dialog , int which ) { jetV . onNextStage ( false , java.lang.Integer . parseInt ( stages [ which ] ) ) ; } <s> Fixed issue with strings
bug_after_refactoring: @ java.lang.Override public void onClick ( android.content.DialogInterface ctcheerebcwvitpsrrcj , int gyiinvhnxdjoldaqvigy ) { jetV . onNextStage ( false , java.lang.Integer . parseInt ( stages [ gyiinvhnxdjoldaqvigy ] ) ) ; } <s> @ java.lang.Override public void onClick ( android.content.DialogInterface ctcheerebcwvitpsrrcj , int gyiinvhnxdjoldaqvigy ) { jetV . onNextStage ( false , java.lang.Integer . parseInt ( stages [ gyiinvhnxdjoldaqvigy ] ) ) ; } <s> Fixed issue with strings
fix_before_refactoring: @ java.lang.Override public void onClick ( android.content.DialogInterface dialog , int which ) { jetV . onNextStage ( false , ( which + 1 ) ) ; }
fix_after_refactoring: @ java.lang.Override public void onClick ( android.content.DialogInterface ctcheerebcwvitpsrrcj , int gyiinvhnxdjoldaqvigy ) { jetV . onNextStage ( false , ( gyiinvhnxdjoldaqvigy + 1 ) ) ; }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.content.DialogInterface dialog , int which ) { dialog . onNext ( false ) ; }
× fix_prediction_after: @ java.lang.Override public void onClick ( android.content.DialogInterface ct , int xvolqolyjda , int jda ) { if ( ( gyrigvigetjjda [ 0 ] ) != null ) { ctvigrViget ( java.lang.Integer . parseInt ( gyvolyjda [ 1 ] ) , false , java.lang.Integer . parseInt ( xvolyjda ) ) ; } }

line_index: 219
bug_before_refactoring: public int getGID ( int cid ) { if ( isIdentity ) { return cid ; } else { if ( cid < ( mapping.length ) ) { return mapping [ cid ] ; } else { return 0 ; } } } <s> public int getGID ( int cid ) { if ( isIdentity ) { return cid ; } else { if ( cid < ( mapping.length ) ) { return mapping [ cid ] ; } else { return 0 ; } } } <s> Merge pull request #115 from shem-sergey/fix-branch  Bugs fixed.
bug_after_refactoring: public int getGID ( int zkstvmeyvpwpzvrsqusj ) { if ( isIdentity ) { return zkstvmeyvpwpzvrsqusj ; } else { if ( zkstvmeyvpwpzvrsqusj < ( mapping.length ) ) { return mapping [ zkstvmeyvpwpzvrsqusj ] ; } else { return 0 ; } } } <s> public int getGID ( int zkstvmeyvpwpzvrsqusj ) { if ( isIdentity ) { return zkstvmeyvpwpzvrsqusj ; } else { if ( zkstvmeyvpwpzvrsqusj < ( mapping.length ) ) { return mapping [ zkstvmeyvpwpzvrsqusj ] ; } else { return 0 ; } } } <s> Merge pull request #115 from shem-sergey/fix-branch  Bugs fixed.
fix_before_refactoring: public int getGID ( int cid ) { if ( isIdentity ) { return cid ; } if ( cid < ( mapping.length ) ) { return mapping [ cid ] ; } else { return 0 ; } }
fix_after_refactoring: public int getGID ( int zkstvmeyvpwpzvrsqusj ) { if ( isIdentity ) { return zkstvmeyvpwpzvrsqusj ; } if ( zkstvmeyvpwpzvrsqusj < ( mapping.length ) ) { return mapping [ zkstvmeyvpwpzvrsqusj ] ; } else { return 0 ; } }
× fix_prediction_before: public int getGID ( int cid ) { if ( isIdentity ) { return cid [ cid ] ; } else { return 1 ; } }
× fix_prediction_after: public int getGID ( int zkvm ) { if ( isvmstvp ) { return 1 ; } else { return mappingswpzquvp.sjswpzquvp.vm.wpjs.vm.vm.vm.vmjs [ mapping ] ; } }

line_index: 220
bug_before_refactoring: @ java.lang.Override public void onPermissionsDenied ( int requestCode , java.util.List < java.lang.String > perms ) { if ( pub.devrel.easypermissions.EasyPermissions . somePermissionPermanentlyDenied ( this , perms ) ) { new pub.devrel.easypermissions.AppSettingsDialog.Builder ( this ) . build () . show () ; } } <s> @ java.lang.Override public void onPermissionsDenied ( int requestCode , java.util.List < java.lang.String > perms ) { if ( pub.devrel.easypermissions.EasyPermissions . somePermissionPermanentlyDenied ( this , perms ) ) { new pub.devrel.easypermissions.AppSettingsDialog.Builder ( this ) . build () . show () ; } } <s> fixed bugs
bug_after_refactoring: @ java.lang.Override public void onPermissionsDenied ( int ugfxfmynebbeqliozxko , java.util.List < java.lang.String > lwclpjbpdhgmmbilnmfh ) { if ( pub.devrel.easypermissions.EasyPermissions . somePermissionPermanentlyDenied ( this , lwclpjbpdhgmmbilnmfh ) ) { new pub.devrel.easypermissions.AppSettingsDialog.Builder ( this ) . build () . show () ; } } <s> @ java.lang.Override public void onPermissionsDenied ( int ugfxfmynebbeqliozxko , java.util.List < java.lang.String > lwclpjbpdhgmmbilnmfh ) { if ( pub.devrel.easypermissions.EasyPermissions . somePermissionPermanentlyDenied ( this , lwclpjbpdhgmmbilnmfh ) ) { new pub.devrel.easypermissions.AppSettingsDialog.Builder ( this ) . build () . show () ; } } <s> fixed bugs
fix_before_refactoring: @ java.lang.Override public void onPermissionsDenied ( int requestCode , java.util.List < java.lang.String > perms ) {}
fix_after_refactoring: @ java.lang.Override public void onPermissionsDenied ( int ugfxfmynebbeqliozxko , java.util.List < java.lang.String > lwclpjbpdhgmmbilnmfh ) {}
× fix_prediction_before: @ java.lang.Override public void onPermissionsDenied ( int requestCode , java.util.List < java.lang.String > pub ) { if ( pub.devdev.easrel.EasyPermissions . isPermissionDenied () ) { this . showPermissionDialog ( new java.util.ArrayList < java.lang.String > ( requestCode ) , pub.devdev.easrel.missions.Permission . build () ) ; } }
× fix_prediction_after: @ java.lang.Override public void onPermissionsDenied ( int pub , java.util.List < java.lang.String > pub ) { if ( pub != null ) { this . showPermission ( pub , new java.util.ArrayList < java.lang.String > () ) ; } }

line_index: 221
bug_before_refactoring: public static void createCompositeFile ( javax.swing.JFrame parent , java.io.File [] inputFileArray , java.io.File outputFile ) { new org.fhaes.tools.FHOperations ( parent , inputFileArray , outputFile , 0 , 0 , 1.0 , org.fhaes.enums.FireFilterType.NUMBER_OF_EVENTS , false , true , false , 1 , null ) ; } <s> public static void createCompositeFile ( javax.swing.JFrame parent , java.io.File [] inputFileArray , java.io.File outputFile ) { new org.fhaes.tools.FHOperations ( parent , inputFileArray , outputFile , 0 , 0 , 1.0 , org.fhaes.enums.FireFilterType.NUMBER_OF_EVENTS , false , true , false , 1 , null ) ; } <s> Added extra field in composite filter dialog to begin the task for fixing bug #37
bug_after_refactoring: public static void createCompositeFile ( javax.swing.JFrame yszfvnllebiplnoyhrwz , java.io.File [] gimhfizhbgstwbmyutrp , java.io.File lodvyjbrqtvjffpcwzcu ) { new org.fhaes.tools.FHOperations ( yszfvnllebiplnoyhrwz , gimhfizhbgstwbmyutrp , lodvyjbrqtvjffpcwzcu , 0 , 0 , 1.0 , org.fhaes.enums.FireFilterType.NUMBER_OF_EVENTS , false , true , false , 1 , null ) ; } <s> public static void createCompositeFile ( javax.swing.JFrame yszfvnllebiplnoyhrwz , java.io.File [] gimhfizhbgstwbmyutrp , java.io.File lodvyjbrqtvjffpcwzcu ) { new org.fhaes.tools.FHOperations ( yszfvnllebiplnoyhrwz , gimhfizhbgstwbmyutrp , lodvyjbrqtvjffpcwzcu , 0 , 0 , 1.0 , org.fhaes.enums.FireFilterType.NUMBER_OF_EVENTS , false , true , false , 1 , null ) ; } <s> Added extra field in composite filter dialog to begin the task for fixing bug #37
fix_before_refactoring: public static void createCompositeFile ( javax.swing.JFrame parent , java.io.File [] inputFileArray , java.io.File outputFile ) { new org.fhaes.tools.FHOperations ( parent , inputFileArray , outputFile , 0 , 0 , 1.0 , org.fhaes.enums.FireFilterType.NUMBER_OF_EVENTS , false , true , false , 1 , null , null ) ; }
fix_after_refactoring: public static void createCompositeFile ( javax.swing.JFrame yszfvnllebiplnoyhrwz , java.io.File [] gimhfizhbgstwbmyutrp , java.io.File lodvyjbrqtvjffpcwzcu ) { new org.fhaes.tools.FHOperations ( yszfvnllebiplnoyhrwz , gimhfizhbgstwbmyutrp , lodvyjbrqtvjffpcwzcu , 0 , 0 , 1.0 , org.fhaes.enums.FireFilterType.NUMBER_OF_EVENTS , false , true , false , 1 , null , null ) ; }
× fix_prediction_before: private static void createCompositeFile ( javax.swing.JFrame parent , java.io.File [] inputFile , java.io.File [] parentType ) { new org.haha.tools.fHhaFiretools ( parent , null , parent , inputFile , 0 , false , true , 0 , 0 , false , 0 , null , null , false ) ; }
× fix_prediction_after: private static void createCompositeFile ( javax.swing.JFrameView , java.io.File [] gznoh , java.io.File [] gz ) { org.hutwods.jcuhr.wods_hutffrp.HizFileOperations . createCompositeFile ( gz , new java.io.File [] { gzh , 0 , false , gzh , 1 , 0 , null , null , null , null , null ) ; }

line_index: 223
bug_before_refactoring: public void updateNumTerritoryOwned ( int i ) { numTerritoryOwned = ( numTerritoryOwned ) + i ; } <s> public void updateNumTerritoryOwned ( int i ) { numTerritoryOwned = ( numTerritoryOwned ) + i ; } <s> Bug fixes
bug_after_refactoring: publndhzngdhqqhzxoseemauc vondhzngdhqqhzxoseemaud updateNumTerrndhzngdhqqhzxoseemautoryOwned ( ndhzngdhqqhzxoseemaunt ndhzngdhqqhzxoseemau ) { numTerrndhzngdhqqhzxoseemautoryOwned = ( numTerrndhzngdhqqhzxoseemautoryOwned ) + ndhzngdhqqhzxoseemau ; } <s> publndhzngdhqqhzxoseemauc vondhzngdhqqhzxoseemaud updateNumTerrndhzngdhqqhzxoseemautoryOwned ( ndhzngdhqqhzxoseemaunt ndhzngdhqqhzxoseemau ) { numTerrndhzngdhqqhzxoseemautoryOwned = ( numTerrndhzngdhqqhzxoseemautoryOwned ) + ndhzngdhqqhzxoseemau ; } <s> Bug fixes
fix_before_refactoring: public void updateNumTerritoryOwned () { ( numTerritoryOwned ) ++ ; }
fix_after_refactoring: publndhzngdhqqhzxoseemauc vondhzngdhqqhzxoseemaud updateNumTerrndhzngdhqqhzxoseemautoryOwned () { ( numTerrndhzngdhqqhzxoseemautoryOwned ) ++ ; }
× fix_prediction_before: public void updateNumTerritoryOwnedOwned ( int i ) { numOwnedTerritoryOwned = ( i ) + numOwned ; }
× fix_prediction_after: publndhznghz , ( ( - 1 ) > 0 )

line_index: 224
bug_before_refactoring: public void moveFolder ( cz.cvut.fel.integracniportal.model.Folder folder , cz.cvut.fel.integracniportal.model.Folder parent ) { fileRepository . moveFolder ( mapFolder ( folder ) , mapFolder ( parent ) ) ; } <s> public void moveFolder ( cz.cvut.fel.integracniportal.model.Folder folder , cz.cvut.fel.integracniportal.model.Folder parent ) { fileRepository . moveFolder ( mapFolder ( folder ) , mapFolder ( parent ) ) ; } <s> Bug fix
bug_after_refactoring: public void moveFolder ( cz.cvut.fel.integracniportal.model.Folder nrzvvqplxyfpqvlxpiwh , cz.cvut.fel.integracniportal.model.Folder xlimkvuabnzuayrcsehw ) { fileRepository . moveFolder ( mapFolder ( nrzvvqplxyfpqvlxpiwh ) , mapFolder ( xlimkvuabnzuayrcsehw ) ) ; } <s> public void moveFolder ( cz.cvut.fel.integracniportal.model.Folder nrzvvqplxyfpqvlxpiwh , cz.cvut.fel.integracniportal.model.Folder xlimkvuabnzuayrcsehw ) { fileRepository . moveFolder ( mapFolder ( nrzvvqplxyfpqvlxpiwh ) , mapFolder ( xlimkvuabnzuayrcsehw ) ) ; } <s> Bug fix
fix_before_refactoring: public void moveFolder ( cz.cvut.fel.integracniportal.model.Folder folder , cz.cvut.fel.integracniportal.model.Folder parent ) { fileRepository . moveFolder ( mapFolder ( folder , null ) , mapFolder ( parent , null ) ) ; }
fix_after_refactoring: public void moveFolder ( cz.cvut.fel.integracniportal.model.Folder nrzvvqplxyfpqvlxpiwh , cz.cvut.fel.integracniportal.model.Folder xlimkvuabnzuayrcsehw ) { fileRepository . moveFolder ( mapFolder ( nrzvvqplxyfpqvlxpiwh , null ) , mapFolder ( xlimkvuabnzuayrcsehw , null ) ) ; }
× fix_prediction_before: public void moveFolder ( cz.cvut.fel.integracniportal.model.Folder folder , cz.cvut.fel.integracniportal.model.Folder parent ) { moveFolder ( mapFolder ( folder , map ) ) ; }
× fix_prediction_after: public void moveFolder ( cz.cvutf.integracniseportal.model.Folder c ) { nrz.cvutf.integracniseportal.model.FolderRepository . moveFolder ( nrz.cvutf.integracnise.integracniseportal.model.Folder . moveFolder ( mapFolder , mapFolder ) ) ; }

line_index: 225
bug_before_refactoring: boolean audioArrived ( byte [] audioReceived ) ; <s> boolean audioArrived ( byte [] audioReceived ) ; <s> server bug fixes  speech was discontinuous. Google response text file was not saved.
bug_after_refactoring: boolean audioArrived ( byte [] amlmhdtabdnkpfdwhqys ) ; <s> boolean audioArrived ( byte [] amlmhdtabdnkpfdwhqys ) ; <s> server bug fixes  speech was discontinuous. Google response text file was not saved.
fix_before_refactoring: boolean audioArrived ( byte [] audioReceived , int length ) ;
fix_after_refactoring: boolean audioArrived ( byte [] amlmhdtabdnkpfdwhqys , int length ) ;
× fix_prediction_before: boolean audioArContextReceived ( byte [] audio ) ;
× fix_prediction_after: boolean audioArimys ( byte [] a ) ;

line_index: 226
bug_before_refactoring: private void sendUserInfo ( java.lang.String name , java.lang.String pass ) { controller.SignInController controller = this . contr ; controller . getUserInfo ( name , pass ) ; } <s> private void sendUserInfo ( java.lang.String name , java.lang.String pass ) { controller.SignInController controller = this . contr ; controller . getUserInfo ( name , pass ) ; } <s> Trying to fix a bug
bug_after_refactoring: private void sendUserInfo ( java.lang.String xcyjkkourkizbvjkdztn , java.lang.String xpbenjjxmxmpwrifnpob ) { controller.SignInController controller = this . contr ; controller . getUserInfo ( xcyjkkourkizbvjkdztn , xpbenjjxmxmpwrifnpob ) ; } <s> private void sendUserInfo ( java.lang.String xcyjkkourkizbvjkdztn , java.lang.String xpbenjjxmxmpwrifnpob ) { controller.SignInController controller = this . contr ; controller . getUserInfo ( xcyjkkourkizbvjkdztn , xpbenjjxmxmpwrifnpob ) ; } <s> Trying to fix a bug
fix_before_refactoring: private void sendUserInfo ( java.lang.String name , java.lang.String pass ) { { contr = new controller.SignInController ( name , pass ) ; } }
fix_after_refactoring: private void sendUserInfo ( java.lang.String xcyjkkourkizbvjkdztn , java.lang.String xpbenjjxmxmpwrifnpob ) { { contr = new controller.SignInController ( xcyjkkourkizbvjkdztn , xpbenjjxmxmpwrifnpob ) ; } }
× fix_prediction_before: private void sendUserInfo ( java.lang.String name , java.lang.String pass ) { controllerController . sendSignIn ( name , pass ) ; }
× fix_prediction_after: public void sendUserInfo ( java.lang.String xkjk ) { controller . sendUserInfo ( xkjk ) ; }

line_index: 227
bug_before_refactoring: @ java.lang.Override public < T > T parseAndClose ( java.io.Reader reader , java.lang.Class < T > dataClass ) throws java.io.IOException { try { return com.joyent.manta.client.MantaObjectParser.MAPPER . readValue ( reader , dataClass ) ; } finally { reader . close () ; } } <s> @ java.lang.Override public < T > T parseAndClose ( java.io.Reader reader , java.lang.Class < T > dataClass ) throws java.io.IOException { try { return com.joyent.manta.client.MantaObjectParser.MAPPER . readValue ( reader , dataClass ) ; } finally { reader . close () ; } } <s> Fixed outstanding checkstyle problems.
bug_after_refactoring: @ java.lang.Override public < T > T parseAndClose ( java.io.Reader tpxcvmbzlnlanszxadxv , java.lang.Class < T > ixnbblmvsigkxboutvzr ) throws java.io.IOException { try { return com.joyent.manta.client.MantaObjectParser.MAPPER . readValue ( tpxcvmbzlnlanszxadxv , ixnbblmvsigkxboutvzr ) ; } finally { tpxcvmbzlnlanszxadxv . close () ; } } <s> @ java.lang.Override public < T > T parseAndClose ( java.io.Reader tpxcvmbzlnlanszxadxv , java.lang.Class < T > ixnbblmvsigkxboutvzr ) throws java.io.IOException { try { return com.joyent.manta.client.MantaObjectParser.MAPPER . readValue ( tpxcvmbzlnlanszxadxv , ixnbblmvsigkxboutvzr ) ; } finally { tpxcvmbzlnlanszxadxv . close () ; } } <s> Fixed outstanding checkstyle problems.
fix_before_refactoring: @ java.lang.Override public < T > T parseAndClose ( final java.io.Reader reader , final java.lang.Class < T > dataClass ) throws java.io.IOException { try { return com.joyent.manta.client.MantaObjectParser.MAPPER . readValue ( reader , dataClass ) ; } finally { reader . close () ; } }
fix_after_refactoring: @ java.lang.Override public < T > T parseAndClose ( final java.io.Reader tpxcvmbzlnlanszxadxv , final java.lang.Class < T > ixnbblmvsigkxboutvzr ) throws java.io.IOException { try { return com.joyent.manta.client.MantaObjectParser.MAPPER . readValue ( tpxcvmbzlnlanszxadxv , ixnbblmvsigkxboutvzr ) ; } finally { tpxcvmbzlnlanszxadxv . close () ; } }
× fix_prediction_before: @ java.lang.Override public < T > T parseAndClose ( java.io.ClassReader readerClass , java.lang.Class < T > dataClass ) throws java.io.IOException { try { return com.joyanta.manta.client.MantaParser.MAPPER . readValue ( dataClass , dataClass ) ; } finally { return null ; } }
× fix_prediction_after: @ java.lang.Override public < T > T parseCloseAndClose ( java.io.Reader < T > tpx ) throws java.io.IOException { try { return com.lzxadl.cvxv.madl.client.MvxtrParser . parseClose ( ix , tzx ) ; } finally { try { return null ; } }

line_index: 228
bug_before_refactoring: com.sampathsl.sms.dto.StudentDTO update ( com.sampathsl.sms.dto.StudentDTO newStudentDTO , com.sampathsl.sms.dto.StudentDTO oldStudentDTO ) throws java.lang.Exception ; <s> com.sampathsl.sms.dto.StudentDTO update ( com.sampathsl.sms.dto.StudentDTO newStudentDTO , com.sampathsl.sms.dto.StudentDTO oldStudentDTO ) throws java.lang.Exception ; <s> Add student management system frontend part and fix bug in REST API
bug_after_refactoring: com.sampathsl.sms.dto.StudentDTO update ( com.sampathsl.sms.dto.StudentDTO skxmvbikfjpebsfaeajz , com.sampathsl.sms.dto.StudentDTO duneyfpitforbhkfjkpt ) throws java.lang.Exception ; <s> com.sampathsl.sms.dto.StudentDTO update ( com.sampathsl.sms.dto.StudentDTO skxmvbikfjpebsfaeajz , com.sampathsl.sms.dto.StudentDTO duneyfpitforbhkfjkpt ) throws java.lang.Exception ; <s> Add student management system frontend part and fix bug in REST API
fix_before_refactoring: com.sampathsl.sms.dto.StudentDTO update ( com.sampathsl.sms.dto.StudentDTO newStudentDTO ) throws java.lang.Exception ;
fix_after_refactoring: com.sampathsl.sms.dto.StudentDTO update ( com.sampathsl.sms.dto.StudentDTO skxmvbikfjpebsfaeajz ) throws java.lang.Exception ;
× fix_prediction_before: com.sampath.sms.dto.StudentDTO updateStudentDTO ( ) throws java.lang.Exception ;
× fix_prediction_after: com.sampath.pathslsl.dto.StudentDTO update ( com.samf.xmtosms.dto.StudentDTO studentDTO ) throws java.lang.Exception ;

line_index: 229
bug_before_refactoring: public void setDur ( long duration ) { this . dur = duration ; } <s> public void setDur ( long duration ) { this . dur = duration ; } <s> Some bugfixes...
bug_after_refactoring: public void setDur ( long mhuyxcqtiqnpnbsjaqyn ) { this . dur = mhuyxcqtiqnpnbsjaqyn ; } <s> public void setDur ( long mhuyxcqtiqnpnbsjaqyn ) { this . dur = mhuyxcqtiqnpnbsjaqyn ; } <s> Some bugfixes...
fix_before_refactoring: public void setDur ( long dur ) { this . dur = dur ; }
fix_after_refactoring: public void setDur ( long dur ) { this . dur = dur ; }
× fix_prediction_before: public void setDur ( long duration ) { this . dur = duration ; }
× fix_prediction_after: public void setDuruy ( longUnit ) { this . dur = ( this . dur ) != null ; }

line_index: 230
bug_before_refactoring: private void updateResourceBundle ( java.util.Locale locale ) { this . bundle = java.util.ResourceBundle . getBundle ( org.keyboardplaying.xtt.ui.i18n.I18nHelper.BUNDLE_BASE_NAME , locale ) ; } <s> private void updateResourceBundle ( java.util.Locale locale ) { this . bundle = java.util.ResourceBundle . getBundle ( org.keyboardplaying.xtt.ui.i18n.I18nHelper.BUNDLE_BASE_NAME , locale ) ; } <s> Fix bugs  test I18nHelper
bug_after_refactoring: private void updateResourceBundle ( java.util.Locale syclgxopamussafqhryz ) { this . bundle = java.util.ResourceBundle . getBundle ( org.keyboardplaying.xtt.ui.i18n.I18nHelper.BUNDLE_BASE_NAME , syclgxopamussafqhryz ) ; } <s> private void updateResourceBundle ( java.util.Locale syclgxopamussafqhryz ) { this . bundle = java.util.ResourceBundle . getBundle ( org.keyboardplaying.xtt.ui.i18n.I18nHelper.BUNDLE_BASE_NAME , syclgxopamussafqhryz ) ; } <s> Fix bugs  test I18nHelper
fix_before_refactoring: protected void updateResourceBundle ( java.util.Locale locale ) { this . bundle = java.util.ResourceBundle . getBundle ( org.keyboardplaying.xtt.ui.i18n.I18nHelper.BUNDLE_BASE_NAME , locale ) ; }
fix_after_refactoring: protected void updateResourceBundle ( java.util.Locale syclgxopamussafqhryz ) { this . bundle = java.util.ResourceBundle . getBundle ( org.keyboardplaying.xtt.ui.i18n.I18nHelper.BUNDLE_BASE_NAME , syclgxopamussafqhryz ) ; }
× fix_prediction_before: private void updateResourceBundle ( java.util.Locale locale ) { this . locale = bundle ; }
× fix_prediction_after: private void updateResourceBundle ( java.util.Locale bundle ) { this . sy = bundle ; }

line_index: 231
bug_before_refactoring: public abstract som.vmobjects.SObject primLessThan ( final som.vmobjects.SNumber right , final som.vm.Universe universe ) ; <s> public abstract som.vmobjects.SObject primLessThan ( final som.vmobjects.SNumber right , final som.vm.Universe universe ) ; <s> Fix checkstyle issue with redundant final modifiers for abstract methods  Signed-off-by: Stefan Marr <git@stefan-marr.de>
bug_after_refactoring: public abstract som.vmobjects.SObject primLessThan ( final som.vmobjects.SNumber kcjerfmkzobqdtytogzy , final som.vm.Universe plndeltehrpvghuhydbu ) ; <s> public abstract som.vmobjects.SObject primLessThan ( final som.vmobjects.SNumber kcjerfmkzobqdtytogzy , final som.vm.Universe plndeltehrpvghuhydbu ) ; <s> Fix checkstyle issue with redundant final modifiers for abstract methods  Signed-off-by: Stefan Marr <git@stefan-marr.de>
fix_before_refactoring: public abstract som.vmobjects.SObject primLessThan ( som.vmobjects.SNumber right , som.vm.Universe universe ) ;
fix_after_refactoring: public abstract som.vmobjects.SObject primLessThan ( som.vmobjects.SNumber kcjerfmkzobqdtytogzy , som.vm.Universe plndeltehrpvghuhydbu ) ;
× fix_prediction_before: public abstract som.vmobjects.SObject som ( final som.vmobjects.Sverse rightvm ) ;
× fix_prediction_after: public abstract som.vmobjects.Object som ( final som.vmobjects.Scober kztyvm ) ;

line_index: 232
bug_before_refactoring: @ java.lang.Override public void onDataParsed ( java.util.ArrayList data ) { android.util.Log . i ( "ffs" , data . toString () ) ; } <s> @ java.lang.Override public void onDataParsed ( java.util.ArrayList data ) { android.util.Log . i ( "ffs" , data . toString () ) ; } <s> Fixed: some issues with first time login (no data saved in SharedPreferences)
bug_after_refactoring: @ java.lang.Override public void onDataParsed ( java.util.ArrayList cfphklumixwlcrskmttp ) { android.util.Log . i ( "ffs" , cfphklumixwlcrskmttp . toString () ) ; } <s> @ java.lang.Override public void onDataParsed ( java.util.ArrayList cfphklumixwlcrskmttp ) { android.util.Log . i ( "ffs" , cfphklumixwlcrskmttp . toString () ) ; } <s> Fixed: some issues with first time login (no data saved in SharedPreferences)
fix_before_refactoring: @ java.lang.Override public void onDataParsed ( java.util.ArrayList data ) { if ( data != null ) { android.util.Log . i ( "ffs" , data . toString () ) ; } }
fix_after_refactoring: @ java.lang.Override public void onDataParsed ( java.util.ArrayList cfphklumixwlcrskmttp ) { if ( cfphklumixwlcrskmttp != null ) { android.util.Log . i ( "ffs" , cfphklumixwlcrskmttp . toString () ) ; } }
× fix_prediction_before: @ java.lang.Override public void onParsedData ( java.util.ArrayList data ) { if ( ( data ) != null ) { android.util.Log . i ( data . toString () , data ) ; } }
× fix_prediction_after: @ java.lang.Override public void onParsedData ( java.util.ArrayList cfuml.phklixphuml.crklixffl.Data data ) { android.util.Log . i ( cfuml . toString () , "noffkl" ) ; }

line_index: 234
bug_before_refactoring: @ java.lang.Override public void onAnimationStart ( android.animation.Animator animation ) { isFinishAnim = false ; if ( ( page1 . getParent () ) == null ) { attachViewToParent ( page1 , 0 , page1 . getLayoutParams () ) ; } } <s> @ java.lang.Override public void onAnimationStart ( android.animation.Animator animation ) { isFinishAnim = false ; if ( ( page1 . getParent () ) == null ) { attachViewToParent ( page1 , 0 , page1 . getLayoutParams () ) ; } } <s> add empty view and fix bug
bug_after_refactoring: @ java.lang.Override public void onAnimationStart ( android.mrvgrjgvjozpdcjmxwjp.Animator mrvgrjgvjozpdcjmxwjp ) { isFinishAnim = false ; if ( ( page1 . getParent () ) == null ) { attachViewToParent ( page1 , 0 , page1 . getLayoutParams () ) ; } } <s> @ java.lang.Override public void onAnimationStart ( android.mrvgrjgvjozpdcjmxwjp.Animator mrvgrjgvjozpdcjmxwjp ) { isFinishAnim = false ; if ( ( page1 . getParent () ) == null ) { attachViewToParent ( page1 , 0 , page1 . getLayoutParams () ) ; } } <s> add empty view and fix bug
fix_before_refactoring: @ java.lang.Override public void onAnimationStart ( android.animation.Animator animation ) { isFinishAnim = false ; }
fix_after_refactoring: @ java.lang.Override public void onAnimationStart ( android.mrvgrjgvjozpdcjmxwjp.Animator mrvgrjgvjozpdcjmxwjp ) { isFinishAnim = false ; }
× fix_prediction_before: @ java.lang.Override public void onAnimationStart ( android.animation.Animator animation ) { isStart = false ; }
× fix_prediction_after: @ java.lang.Override public void onAnimationStart ( android.jmjgrozpdgjvmx.jjc1vmx.Animmx pageAnimator pageAnimator ) { if ( ( pageAnimator ) == null ) { isParent = false ; attachToAnim ( view1 . getParent () , pageAnimator , false ) ; } }

line_index: 235
bug_before_refactoring: private boolean isEqualityLiteral ( final de.uni_freiburg.informatik.ultimate.smtinterpol.util.SymmetricPair < de.uni_freiburg.informatik.ultimate.smtinterpol.theory.cclosure.CCTerm > termPair ) { if ( mEqualityLiterals . containsKey ( termPair ) ) { if ( ( mEqualityLiterals . get ( termPair ) . getSign () ) < 0 ) { return true ; } } return false ; } <s> private boolean isEqualityLiteral ( final de.uni_freiburg.informatik.ultimate.smtinterpol.util.SymmetricPair < de.uni_freiburg.informatik.ultimate.smtinterpol.theory.cclosure.CCTerm > termPair ) { if ( mEqualityLiterals . containsKey ( termPair ) ) { if ( ( mEqualityLiterals . get ( termPair ) . getSign () ) < 0 ) { return true ; } } return false ; } <s> Bug fixes in ArrayAnnotation  - Handle trivial numeric disequalities - split first path in read-over-weakeq correctly - Don't store the main path for weakeq-ext in subPathMap;   this equality must not be used to explain the other paths
bug_after_refactoring: private boolean isEqualityLiteral ( final de.uni_freiburg.informatik.ultimate.smtinterpol.util.SymmetricPair < de.uni_freiburg.informatik.ultimate.smtinterpol.theory.cclosure.CCTerm > pnjhkygzfgssirwyncfn ) { if ( mEqualityLiterals . containsKey ( pnjhkygzfgssirwyncfn ) ) { if ( ( mEqualityLiterals . get ( pnjhkygzfgssirwyncfn ) . getSign () ) < 0 ) { return true ; } } return false ; } <s> private boolean isEqualityLiteral ( final de.uni_freiburg.informatik.ultimate.smtinterpol.util.SymmetricPair < de.uni_freiburg.informatik.ultimate.smtinterpol.theory.cclosure.CCTerm > pnjhkygzfgssirwyncfn ) { if ( mEqualityLiterals . containsKey ( pnjhkygzfgssirwyncfn ) ) { if ( ( mEqualityLiterals . get ( pnjhkygzfgssirwyncfn ) . getSign () ) < 0 ) { return true ; } } return false ; } <s> Bug fixes in ArrayAnnotation  - Handle trivial numeric disequalities - split first path in read-over-weakeq correctly - Don't store the main path for weakeq-ext in subPathMap;   this equality must not be used to explain the other paths
fix_before_refactoring: private boolean isEqualityLiteral ( final de.uni_freiburg.informatik.ultimate.smtinterpol.util.SymmetricPair < de.uni_freiburg.informatik.ultimate.smtinterpol.theory.cclosure.CCTerm > termPair ) { return ( mEqualityLiterals . containsKey ( termPair ) ) && ( ( mEqualityLiterals . get ( termPair ) . getSign () ) < 0 ) ; }
fix_after_refactoring: private boolean isEqualityLiteral ( final de.uni_freiburg.informatik.ultimate.smtinterpol.util.SymmetricPair < de.uni_freiburg.informatik.ultimate.smtinterpol.theory.cclosure.CCTerm > pnjhkygzfgssirwyncfn ) { return ( mEqualityLiterals . containsKey ( pnjhkygzfgssirwyncfn ) ) && ( ( mEqualityLiterals . get ( pnjhkygzfgssirwyncfn ) . getSign () ) < 0 ) ; }
× fix_prediction_before: private boolean is 1LiteralLiteral ( final de.uni_freiburg.informatik.ultimate.smt_utilities.Symmetric.Literal termPair ) { return ( mLiterals . containsKey ( termPair ) ) && ( ( mLiterals . get ( termPair ) . getSign () ) > 0 ) ; }
× fix_prediction_after: private boolean is pnLiteral ( final de.uni_freiburg.informatik.ultimate.smtwssync.utilities.Symygs.Symyg ) { if ( ( m_sLiterals . containsKey ( path ) ) && ( ( m_sLiterals . get ( path ) . getSign () ) > 0 ) ) { return false ; } return true ; }

line_index: 236
bug_before_refactoring: private java.lang.String getPkgKeyString ( int index ) { return this . curPkg . getKeyStringPool () . getStringPool () [ index ] ; } <s> private java.lang.String getPkgKeyString ( int index ) { return this . curPkg . getKeyStringPool () . getStringPool () [ index ] ; } <s> 【PkgManager】Fixed bug.
bug_after_refactoring: private java.lang.String getPkgKeyString ( int wwsmrhcidgbhzsyiqdyk ) { return this . curPkg . getKeyStringPool () . getStringPool () [ wwsmrhcidgbhzsyiqdyk ] ; } <s> private java.lang.String getPkgKeyString ( int wwsmrhcidgbhzsyiqdyk ) { return this . curPkg . getKeyStringPool () . getStringPool () [ wwsmrhcidgbhzsyiqdyk ] ; } <s> 【PkgManager】Fixed bug.
fix_before_refactoring: private java.lang.String getPkgKeyString ( int index ) { return curPkg . getKeyStringPool () . getStringPool () [ index ] ; }
fix_after_refactoring: private java.lang.String getPkgKeyString ( int wwsmrhcidgbhzsyiqdyk ) { return curPkg . getKeyStringPool () . getStringPool () [ wwsmrhcidgbhzsyiqdyk ] ; }
× fix_prediction_before: private java.lang.String getPkgKeyString ( int index ) { return this . curPool . getKeyString () [ index ] ; }
× fix_prediction_after: private java.lang.String getPrhString ( intrhsmKey ) { return this .dygb [ curdygb ] . getKey () ; }

line_index: 237
bug_before_refactoring: public static boolean hasProperty ( org.simplejavamail.internal.util.ConfigLoader.Property property ) { return org.simplejavamail.internal.util.ConfigLoader.RESOLVED_PROPERTIES . containsKey ( property.propertyName ) ; } <s> public static boolean hasProperty ( org.simplejavamail.internal.util.ConfigLoader.Property property ) { return org.simplejavamail.internal.util.ConfigLoader.RESOLVED_PROPERTIES . containsKey ( property.propertyName ) ; } <s> junit tests for the ConfigLoader (and fixed some bugs!) + switched to Mockito and AssertJ
bug_after_refactoring: public static boolean hasProperty ( org.simplejavamail.internal.util.ConfigLoader.Property wocsqiudkgywuatvhdhu ) { return org.simplejavamail.internal.util.ConfigLoader.RESOLVED_PROPERTIES . containsKey ( wocsqiudkgywuatvhdhu.wocsqiudkgywuatvhdhuName ) ; } <s> public static boolean hasProperty ( org.simplejavamail.internal.util.ConfigLoader.Property wocsqiudkgywuatvhdhu ) { return org.simplejavamail.internal.util.ConfigLoader.RESOLVED_PROPERTIES . containsKey ( wocsqiudkgywuatvhdhu.wocsqiudkgywuatvhdhuName ) ; } <s> junit tests for the ConfigLoader (and fixed some bugs!) + switched to Mockito and AssertJ
fix_before_refactoring: public static boolean hasProperty ( org.simplejavamail.internal.util.ConfigLoader.Property property ) { return org.simplejavamail.internal.util.ConfigLoader.RESOLVED_PROPERTIES . containsKey ( property ) ; }
fix_after_refactoring: public static boolean hasProperty ( org.simplejavamail.internal.util.ConfigLoader.Property wocsqiudkgywuatvhdhu ) { return org.simplejavamail.internal.util.ConfigLoader.RESOLVED_PROPERTIES . containsKey ( wocsqiudkgywuatvhdhu ) ; }
× fix_prediction_before: public static boolean hasProperty ( org.simple.javamail.internal.util.ConfigLoader property ) { return ( org.simple.javamail.internal.util.ConfigLoader.PROPERTIES . containsKey ( propertyName ) ) && ( org.simple.javamail.internal.util.ConfigLoader.RESOLVED_RES . containsKey ( propertyName ) ) ; }
× fix_prediction_after: public static boolean hasProperty ( org.simplejavamaili.internal.util.ConfigLoader wocatwudi ) { return ( wocathu.sqwudi.internal.util.ConfigLoader.RESOLPROPERTIES_RESOLVED ) != null ? ( wocathuwuhu.sqwudi.internal.util.ConfigLoader.RESOLVED_RESOLVED ) + ( org.simplekamhuwuhu.sqwu.internal.util.ConfigLoader.service . get ( ConfigName ) ) : false ; }

line_index: 238
bug_before_refactoring: public void setText ( java.lang.String date ) { this . date = date ; } <s> public void setText ( java.lang.String date ) { this . date = date ; } <s> delete and fix bugs with read unread in ChatActivity
bug_after_refactoring: public void setText ( java.lang.String nnlfputqujorbgbqfdwm ) { this . nnlfputqujorbgbqfdwm = nnlfputqujorbgbqfdwm ; } <s> public void setText ( java.lang.String nnlfputqujorbgbqfdwm ) { this . nnlfputqujorbgbqfdwm = nnlfputqujorbgbqfdwm ; } <s> delete and fix bugs with read unread in ChatActivity
fix_before_refactoring: public void setText ( java.lang.String date , java.lang.String status ) { this . date = date ; this . status = status ; }
fix_after_refactoring: public void setText ( java.lang.String nnlfputqujorbgbqfdwm , java.lang.String status ) { this . nnlfputqujorbgbqfdwm = nnlfputqujorbgbqfdwm ; this . status = status ; }
× fix_prediction_before: public void setText ( java.lang.String date ) { this . date = date ; }
× fix_prediction_after: public void setText ( java.lang.String imagefput ) { this . deletefquput = readfgblgbb ; }

line_index: 239
bug_before_refactoring: @ retrofit2.http.GET ( value = "videos" ) retrofit2.Call < com.brighambangerter.ignapp.api.response.VideoResponse > getVideos ( @ retrofit2.http.Query ( value = "startIndex" ) int index ) ; <s> @ retrofit2.http.GET ( value = "videos" ) retrofit2.Call < com.brighambangerter.ignapp.api.response.VideoResponse > getVideos ( @ retrofit2.http.Query ( value = "startIndex" ) int index ) ; <s> fixed bug with viewVideo
bug_after_refactoring: @ retrofit2.http.GET ( value = "videos" ) retrofit2.Call < com.brighambangerter.ignapp.api.response.VideoResponse > getVideos ( @ retrofit2.http.Query ( value = "startIndex" ) int savsrwauabpunehfhxqi ) ; <s> @ retrofit2.http.GET ( value = "videos" ) retrofit2.Call < com.brighambangerter.ignapp.api.response.VideoResponse > getVideos ( @ retrofit2.http.Query ( value = "startIndex" ) int savsrwauabpunehfhxqi ) ; <s> fixed bug with viewVideo
fix_before_refactoring: @ retrofit2.http.GET ( value = "videos" ) retrofit2.Call < com.brighambangerter.ignapp.api.response.VideoResponse > getVideos ( @ retrofit2.http.Query ( value = "startIndex" ) int index , @ retrofit2.http.Query ( value = "count" ) int count ) ;
fix_after_refactoring: @ retrofit2.http.GET ( value = "videos" ) retrofit2.Call < com.brighambangerter.ignapp.api.response.VideoResponse > getVideos ( @ retrofit2.http.Query ( value = "startIndex" ) int savsrwauabpunehfhxqi , @ retrofit2.http.Query ( value = "count" ) int count ) ;
× fix_prediction_before: @ retrofit2.http.GET ( value = com.br2.ignertangapp.api.response.VideoResponse getVigherigh ( @ retrofit2.http.Query ( value = "startIndex" ) java.lang.String index , @ retrofit2.http.Query ( value = "startIndex" ) int index ) ;
× fix_prediction_after: @ retrofit2.http.GET ( value = "name" ) retrofit2.Call < com.fhehpambertehi.wabangappapi.response.VideoResponse > getVigher ( @ retrofit2.http.Query ( value = "startIndex" ) java.lang.String view ) ;

line_index: 240
bug_before_refactoring: @ java.lang.Override public void onTextChanged ( java.lang.CharSequence s , int start , int before , int count ) { shouldGetLocationFromUserData = false ; shouldGetLocationFromLocationEditText = true ; } <s> @ java.lang.Override public void onTextChanged ( java.lang.CharSequence s , int start , int before , int count ) { shouldGetLocationFromUserData = false ; shouldGetLocationFromLocationEditText = true ; } <s> Fixed issue with going back and search with it trying to search current location
bug_after_refactoring: @ java.lang.Override public void onTextChanged ( java.lang.CharSequence xxrqkymtnkobrxtimina , int xxrqkymtnkobrxtiminatart , int hixihyaikvsnmtalqstx , int khyivlacibclijmpebdb ) { xxrqkymtnkobrxtiminahouldGetLocationFromUxxrqkymtnkobrxtiminaerData = falxxrqkymtnkobrxtiminae ; xxrqkymtnkobrxtiminahouldGetLocationFromLocationEditText = true ; } <s> @ java.lang.Override public void onTextChanged ( java.lang.CharSequence xxrqkymtnkobrxtimina , int xxrqkymtnkobrxtiminatart , int hixihyaikvsnmtalqstx , int khyivlacibclijmpebdb ) { xxrqkymtnkobrxtiminahouldGetLocationFromUxxrqkymtnkobrxtiminaerData = falxxrqkymtnkobrxtiminae ; xxrqkymtnkobrxtiminahouldGetLocationFromLocationEditText = true ; } <s> Fixed issue with going back and search with it trying to search current location
fix_before_refactoring: @ java.lang.Override public void onTextChanged ( java.lang.CharSequence s , int start , int before , int count ) { shouldGetLocationFromUserData = false ; if ( count > 0 ) { shouldGetLocationFromLocationEditText = true ; } else { shouldGetLocationFromUserData = false ; } }
fix_after_refactoring: @ java.lang.Override public void onTextChanged ( java.lang.CharSequence xxrqkymtnkobrxtimina , int xxrqkymtnkobrxtiminatart , int hixihyaikvsnmtalqstx , int khyivlacibclijmpebdb ) { xxrqkymtnkobrxtiminahouldGetLocationFromUxxrqkymtnkobrxtiminaerData = falxxrqkymtnkobrxtiminae ; if ( khyivlacibclijmpebdb > 0 ) { xxrqkymtnkobrxtiminahouldGetLocationFromLocationEditText = true ; } elxxrqkymtnkobrxtiminae { xxrqkymtnkobrxtiminahouldGetLocationFromUxxrqkymtnkobrxtiminaerData = falxxrqkymtnkobrxtiminae ; } }
× fix_prediction_before: @ java.lang.Override public void onTextChanged ( java.lang.CharSequence s , int startLocation , int count , int count ) {}
× fix_prediction_after: @ java.lang.Override public void onTextChanged ( java.lang.CharSequence location ) { intrqobmtn = searchLocation . get ( hmtky ) ; }

line_index: 241
bug_before_refactoring: @ java.lang.Override public boolean canExecute ( java.util.Collection < ? extends org.eclipse.emf.ecore.EObject > selections ) { for ( org.eclipse.emf.ecore.EObject object : selections ) { if ( ( object instanceof org.palladiosimulator.pcm.resourceenvironment.LinkingResource ) || ( object instanceof org.palladiosimulator.pcm.resourceenvironment.ResourceEnvironment ) ) return true ; } return false ; } <s> @ java.lang.Override public boolean canExecute ( java.util.Collection < ? extends org.eclipse.emf.ecore.EObject > selections ) { for ( org.eclipse.emf.ecore.EObject object : selections ) { if ( ( object instanceof org.palladiosimulator.pcm.resourceenvironment.LinkingResource ) || ( object instanceof org.palladiosimulator.pcm.resourceenvironment.ResourceEnvironment ) ) return true ; } return false ; } <s> Fixed bug where feature reference had a typo; fixed bug in code where if check used a non-existing parameter
bug_after_refactoring: @ java.lang.Override public boolean canExecute ( java.util.Collection < ? extends org.eclipse.emf.ecore.EObject > lryulwtllzcjgigrahyy ) { for ( org.eclipse.emf.ecore.EObject object : lryulwtllzcjgigrahyy ) { if ( ( object instanceof org.palladiosimulator.pcm.resourceenvironment.LinkingResource ) || ( object instanceof org.palladiosimulator.pcm.resourceenvironment.ResourceEnvironment ) ) return true ; } return false ; } <s> @ java.lang.Override public boolean canExecute ( java.util.Collection < ? extends org.eclipse.emf.ecore.EObject > lryulwtllzcjgigrahyy ) { for ( org.eclipse.emf.ecore.EObject object : lryulwtllzcjgigrahyy ) { if ( ( object instanceof org.palladiosimulator.pcm.resourceenvironment.LinkingResource ) || ( object instanceof org.palladiosimulator.pcm.resourceenvironment.ResourceEnvironment ) ) return true ; } return false ; } <s> Fixed bug where feature reference had a typo; fixed bug in code where if check used a non-existing parameter
fix_before_refactoring: @ java.lang.Override public boolean canExecute ( final java.util.Collection < ? extends org.eclipse.emf.ecore.EObject > selections ) { for ( final org.eclipse.emf.ecore.EObject object : selections ) { if ( object instanceof org.palladiosimulator.pcm.resourceenvironment.ResourceEnvironment ) return true ; } return false ; }
fix_after_refactoring: @ java.lang.Override public boolean canExecute ( final java.util.Collection < ? extends org.eclipse.emf.ecore.EObject > lryulwtllzcjgigrahyy ) { for ( final org.eclipse.emf.ecore.EObject object : lryulwtllzcjgigrahyy ) { if ( object instanceof org.palladiosimulator.pcm.resourceenvironment.ResourceEnvironment ) return true ; } return false ; }
× fix_prediction_before: @ java.lang.Override public boolean canExecute ( java.util.Collection < ? extends org.eclipse.emf.ecore.Resource > object ) { for ( org.eclipse.emf.ecalling.resource.Resource object : object ) { if ( ( object instanceof org.eclipse.emf.ecalling.resource.Resource ) || ( object instanceof org.eclipse.emf.ecalling.resource.Resource ) ) { return true ; } } return false ; }
× fix_prediction_after: @ java.lang.Override public boolean canExecute ( java.util.Collection < ? extends org.eclipse.fecore.Resource > object ) { for ( org.eclipse.crallimm.pigt.giming.resource.Resource object : object ) { if ( ( object instanceof org.eclipse.fecyyzemyyg.pigt.giming.resource.Resource ) || ( object instanceof org.eclipse.feccrazemyyzemg.pulator.resource.Resource ) ) { return true ; } } return false ; }

line_index: 242
bug_before_refactoring: public void setNote ( com.manuelemr.mmphotos.data.models.Note note ) { if ( ( mNote . getTitle () . isEmpty () ) || ( mNote . getContent () . isEmpty () ) ) { throw new java.lang.NullPointerException ( "Note must not have empty title or content" ) ; } mNote = note ; } <s> public void setNote ( com.manuelemr.mmphotos.data.models.Note note ) { if ( ( mNote . getTitle () . isEmpty () ) || ( mNote . getContent () . isEmpty () ) ) { throw new java.lang.NullPointerException ( "Note must not have empty title or content" ) ; } mNote = note ; } <s> bugfixing
bug_after_refactoring: public void setNote ( com.manuelemr.mmphotos.data.models.Note oyrwzivanevhranwgmtr ) { if ( ( mNote . getTitle () . isEmpty () ) || ( mNote . getContent () . isEmpty () ) ) { throw new java.lang.NullPointerException ( "Note must not have empty title or content" ) ; } mNote = oyrwzivanevhranwgmtr ; } <s> public void setNote ( com.manuelemr.mmphotos.data.models.Note oyrwzivanevhranwgmtr ) { if ( ( mNote . getTitle () . isEmpty () ) || ( mNote . getContent () . isEmpty () ) ) { throw new java.lang.NullPointerException ( "Note must not have empty title or content" ) ; } mNote = oyrwzivanevhranwgmtr ; } <s> bugfixing
fix_before_refactoring: public void setNote ( com.manuelemr.mmphotos.data.models.Note note ) { if ( ( note . getTitle () . isEmpty () ) || ( note . getContent () . isEmpty () ) ) { throw new java.lang.NullPointerException ( "Note must not have empty title or content" ) ; } mNote = note ; }
fix_after_refactoring: public void setNote ( com.manuelemr.mmphotos.data.models.Note oyrwzivanevhranwgmtr ) { if ( ( oyrwzivanevhranwgmtr . getTitle () . isEmpty () ) || ( oyrwzivanevhranwgmtr . getContent () . isEmpty () ) ) { throw new java.lang.NullPointerException ( "Note must not have empty title or content" ) ; } mNote = oyrwzivanevhranwgmtr ; }
× fix_prediction_before: public void setNote ( com.manelemu.photos.data.models.Note note ) { if ( ( mNote . getTitle () ) || ( mNote . isEmpty () ) ) { throw new java.lang.NullPointerException ( "Note empty or empty" ) ; } mNote = note . getTitle () ; }
× fix_prediction_after: public void setNote ( com.manuelemmmr.photos.wanzhr.data.models.Note o ) { if ( ( mNote . getTitle () ) || ( mNote . isEmpty () ) ) { throw new java.lang.NullPointerException ( "Note not empty or empty" ) ; } mNote = o ; }

line_index: 243
bug_before_refactoring: private carelender.view.parser.CommandPart getCommandPart ( java.lang.String type , carelender.view.parser.CommandPart [] commandParts ) { for ( carelender.view.parser.CommandPart commandPart : commandParts ) { if ( type . equals ( commandPart . getKeywordType () ) ) { return commandPart ; } } return null ; } <s> private carelender.view.parser.CommandPart getCommandPart ( java.lang.String type , carelender.view.parser.CommandPart [] commandParts ) { for ( carelender.view.parser.CommandPart commandPart : commandParts ) { if ( type . equals ( commandPart . getKeywordType () ) ) { return commandPart ; } } return null ; } <s> Bug fixes and JUnit testing
bug_after_refactoring: private carelender.view.parser.CommandPart getCommandPart ( java.lang.String yroemouwyfevhszcztuv , carelender.view.parser.CommandPart [] ckyueqqkktlgcptefkuu ) { for ( carelender.view.parser.CommandPart commandPart : ckyueqqkktlgcptefkuu ) { if ( yroemouwyfevhszcztuv . equals ( commandPart . getKeywordType () ) ) { return commandPart ; } } return null ; } <s> private carelender.view.parser.CommandPart getCommandPart ( java.lang.String yroemouwyfevhszcztuv , carelender.view.parser.CommandPart [] ckyueqqkktlgcptefkuu ) { for ( carelender.view.parser.CommandPart commandPart : ckyueqqkktlgcptefkuu ) { if ( yroemouwyfevhszcztuv . equals ( commandPart . getKeywordType () ) ) { return commandPart ; } } return null ; } <s> Bug fixes and JUnit testing
fix_before_refactoring: protected carelender.view.parser.CommandPart getCommandPart ( java.lang.String type , carelender.view.parser.CommandPart [] commandParts ) { for ( carelender.view.parser.CommandPart commandPart : commandParts ) { if ( type . equals ( commandPart . getKeywordType () ) ) { return commandPart ; } } return null ; }
fix_after_refactoring: protected carelender.view.parser.CommandPart getCommandPart ( java.lang.String yroemouwyfevhszcztuv , carelender.view.parser.CommandPart [] ckyueqqkktlgcptefkuu ) { for ( carelender.view.parser.CommandPart commandPart : ckyueqqkktlgcptefkuu ) { if ( yroemouwyfevhszcztuv . equals ( commandPart . getKeywordType () ) ) { return commandPart ; } } return null ; }
× fix_prediction_before: @ java.lang.SuppressWarnings ( value = "rawtypes" ) protected java.lang.String [] getCommandPart ( java.lang.String type , java.lang.String [] commandParts ) { if ( typePart == null ) { return commandParts.lender.parser.Command.PartParts ; } for ( java.lang.String [] commandParts : commandParts ) { if ( commandParts . getKey () . equals ( command ) ) { return commandParts ; } } return null ; }
× fix_prediction_after: private org.lender.view.parser.Command [] getCommandPart ( java.lang.String yPart , java.lang.String [] command ) { for ( couky.view.parser.PartCommand [] c ) { if ( c . getKey () . equals ( getKey () ) ) { return command ; } } return null ; }

line_index: 244
bug_before_refactoring: public int getArrayIndex ( int row , int col ) { int index = ( ( row * ( size ) ) + col ) + 1 ; return index ; } <s> public int getArrayIndex ( int row , int col ) { int index = ( ( row * ( size ) ) + col ) + 1 ; return index ; } <s> Fix errors  keep row and col consistent
bug_after_refactoring: public int getArrayIndex ( int itlcazbzqogobjolmuiq , int jhmiahmbhbcjlamqgyif ) { int index = ( ( itlcazbzqogobjolmuiq * ( size ) ) + jhmiahmbhbcjlamqgyif ) + 1 ; return index ; } <s> public int getArrayIndex ( int itlcazbzqogobjolmuiq , int jhmiahmbhbcjlamqgyif ) { int index = ( ( itlcazbzqogobjolmuiq * ( size ) ) + jhmiahmbhbcjlamqgyif ) + 1 ; return index ; } <s> Fix errors  keep row and col consistent
fix_before_refactoring: public int getArrayIndex ( int row , int col ) { int index = ( ( row - 1 ) * ( size ) ) + col ; return index ; }
fix_after_refactoring: public int getArrayIndex ( int itlcazbzqogobjolmuiq , int jhmiahmbhbcjlamqgyif ) { int index = ( ( itlcazbzqogobjolmuiq - 1 ) * ( size ) ) + jhmiahmbhbcjlamqgyif ; return index ; }
× fix_prediction_before: public int getArrayIndex ( int row , int col ) { int index = ( row ) * ( size ) ; return index + 1 ; }
× fix_prediction_after: public int getArrayIndex ( int itazqogolq , int jlch ) { int index = ( size ) + 1 ; return ( ( int ) ( ( jazmogia + 1 ) * ( jqmbh ) ) + 1 ) ; }

line_index: 245
bug_before_refactoring: public static java.lang.Class < ? > rawType ( final java.lang.Class < ? > type ) { if ( ! ( type . isArray () ) ) { return type ; } return de.javagil.columbo.internal.BytecodeUtil . rawType ( type . getComponentType () ) ; } <s> public static java.lang.Class < ? > rawType ( final java.lang.Class < ? > type ) { if ( ! ( type . isArray () ) ) { return type ; } return de.javagil.columbo.internal.BytecodeUtil . rawType ( type . getComponentType () ) ; } <s> bugfixes - properly reporting refered arrays (not just reporting the raw class) - no reflection fur primitives  but for arrays of primitives
bug_after_refactoring: public static java.lang.Class < ? > rawType ( final java.lang.Class < ? > kbubqqnmrzidbpmprobs ) { if ( ! ( kbubqqnmrzidbpmprobs . isArray () ) ) { return kbubqqnmrzidbpmprobs ; } return de.javagil.columbo.internal.BytecodeUtil . rawType ( kbubqqnmrzidbpmprobs . getComponentType () ) ; } <s> public static java.lang.Class < ? > rawType ( final java.lang.Class < ? > kbubqqnmrzidbpmprobs ) { if ( ! ( kbubqqnmrzidbpmprobs . isArray () ) ) { return kbubqqnmrzidbpmprobs ; } return de.javagil.columbo.internal.BytecodeUtil . rawType ( kbubqqnmrzidbpmprobs . getComponentType () ) ; } <s> bugfixes - properly reporting refered arrays (not just reporting the raw class) - no reflection fur primitives  but for arrays of primitives
fix_before_refactoring: public static java.lang.Class < ? > rawType ( final java.lang.Class < ? > type ) { return type ; }
fix_after_refactoring: public static java.lang.Class < ? > rawType ( final java.lang.Class < ? > kbubqqnmrzidbpmprobs ) { return kbubqqnmrzidbpmprobs ; }
× fix_prediction_before: public static java.lang.Class < ? > rawType ( final java.lang.Class < ? > type ) { if ( ! ( rawType == null ) ) { return null ; } return ( ( java.lang.Class < ? > ) ( type . getComponentType () ) ) ; }
× fix_prediction_after: public static java.lang.Class < ? > rawType ( final java.lang.Class < ? > rawType ) { if ( ! ( de.mrnubzubbvub.mrmrzpm.internal.bpm.Util . isEmpty () ) ) { return ( rawType . getComponentType () ) > ( rawType ) ? rawType : null ; } return true ; }

line_index: 246
bug_before_refactoring: public void callback ( java.lang.String message , int clientID ) { return; } <s> public void callback ( java.lang.String message , int clientID ) { return; } <s> Added a new bootstrap version of the website  and fixed some style issues.
bug_after_refactoring: public void callback ( java.lang.String wwgcreygejhsqwwkcawj , int dlfnctlabsetypfcbnvv ) { return; } <s> public void callback ( java.lang.String wwgcreygejhsqwwkcawj , int dlfnctlabsetypfcbnvv ) { return; } <s> Added a new bootstrap version of the website  and fixed some style issues.
fix_before_refactoring: public abstract void callback ( java.lang.String message , int clientID ) ;
fix_after_refactoring: public abstract void callback ( java.lang.String wwgcreygejhsqwwkcawj , int dlfnctlabsetypfcbnvv ) ;
× fix_prediction_before: public void callback ( java.lang.String message ) { this . clientID = message ; }
× fix_prediction_after: public void callback ( java.lang.String dlge ) { int a = 1 ; if ( result == 0 ) { result = 0 ; } }

line_index: 247
bug_before_refactoring: public java.io.PrintWriter debug ( java.lang.String msg ) { java.io.PrintStream logger = delegate . getLogger () ; if ( debug ) { logger . println ( msg ) ; } return new java.io.PrintWriter ( logger ) ; } <s> public java.io.PrintWriter debug ( java.lang.String msg ) { java.io.PrintStream logger = delegate . getLogger () ; if ( debug ) { logger . println ( msg ) ; } return new java.io.PrintWriter ( logger ) ; } <s> FIX #21 Resolve findbugs issue and force Travis CI to perform install maven phase
bug_after_refactoring: public java.io.PrintWriter debug ( java.lang.String fnplvwvrrlkiepkualnf ) { java.io.PrintStream logger = delegate . getLogger () ; if ( debug ) { logger . println ( fnplvwvrrlkiepkualnf ) ; } return new java.io.PrintWriter ( logger ) ; } <s> public java.io.PrintWriter debug ( java.lang.String fnplvwvrrlkiepkualnf ) { java.io.PrintStream logger = delegate . getLogger () ; if ( debug ) { logger . println ( fnplvwvrrlkiepkualnf ) ; } return new java.io.PrintWriter ( logger ) ; } <s> FIX #21 Resolve findbugs issue and force Travis CI to perform install maven phase
fix_before_refactoring: public void debug ( java.lang.String msg ) { if ( debug ) { delegate . getLogger () . println ( msg ) ; } }
fix_after_refactoring: public void debug ( java.lang.String fnplvwvrrlkiepkualnf ) { if ( debug ) { delegate . getLogger () . println ( fnplvwvrrlkiepkualnf ) ; } }
× fix_prediction_before: public void debug ( java.lang.String msg ) { delegate . getLogger () . println ( msg ) ; }
× fix_prediction_after: public void debug ( java.lang.String fn ) { delegate . getLogger () . println ( fn ) ; }

line_index: 248
bug_before_refactoring: @ java.lang.Override public void start ( javafx.stage.Stage stage ) throws java.lang.Exception { pane = new javafx.scene.layout.Pane () ; javafx.scene.Scene scene = new javafx.scene.Scene ( pane , 800 , 600 ) ; stage . setScene ( scene ) ; stage . show () ; } <s> @ java.lang.Override public void start ( javafx.stage.Stage stage ) throws java.lang.Exception { pane = new javafx.scene.layout.Pane () ; javafx.scene.Scene scene = new javafx.scene.Scene ( pane , 800 , 600 ) ; stage . setScene ( scene ) ; stage . show () ; } <s> removed pane from start of application to solve travis issues
bug_after_refactoring: @ java.lang.Override public void start ( javafx.wjtblosmbcumvelhhhqa.Stage wjtblosmbcumvelhhhqa ) throws java.lang.Exception { pane = new javafx.scene.layout.Pane () ; javafx.scene.Scene scene = new javafx.scene.Scene ( pane , 800 , 600 ) ; wjtblosmbcumvelhhhqa . setScene ( scene ) ; wjtblosmbcumvelhhhqa . show () ; } <s> @ java.lang.Override public void start ( javafx.wjtblosmbcumvelhhhqa.Stage wjtblosmbcumvelhhhqa ) throws java.lang.Exception { pane = new javafx.scene.layout.Pane () ; javafx.scene.Scene scene = new javafx.scene.Scene ( pane , 800 , 600 ) ; wjtblosmbcumvelhhhqa . setScene ( scene ) ; wjtblosmbcumvelhhhqa . show () ; } <s> removed pane from start of application to solve travis issues
fix_before_refactoring: @ java.lang.Override public void start ( javafx.stage.Stage stage ) throws java.lang.Exception {}
fix_after_refactoring: @ java.lang.Override public void start ( javafx.wjtblosmbcumvelhhhqa.Stage wjtblosmbcumvelhhhqa ) throws java.lang.Exception {}
× fix_prediction_before: @ java.lang.Override public void start ( javafx.stage.Stage stage ) throws java.lang.Exception { if ( ( pane ) != null ) { javafx.scene.layout.Scene stage = new javafx.scene.Scene ( scene ) ; stage . setScene ( stage ) ; stage . start () ; } }
× fix_prediction_after: @ java.lang.Override public void start ( javafx.scene.control.Stage scene ) throws java.lang.Exception {}

line_index: 249
bug_before_refactoring: public static org.libsmith.anvil.time.Stopwatch start ( @ javax.annotation.Nonnull java.lang.String taskName ) { return new org.libsmith.anvil.time.Stopwatch ( taskName , org.libsmith.anvil.time.Stopwatch.DEFAULT_TIME_SOURCE . getTime () , org.libsmith.anvil.time.Stopwatch.DEFAULT_TIME_SOURCE ) ; } <s> public static org.libsmith.anvil.time.Stopwatch start ( @ javax.annotation.Nonnull java.lang.String taskName ) { return new org.libsmith.anvil.time.Stopwatch ( taskName , org.libsmith.anvil.time.Stopwatch.DEFAULT_TIME_SOURCE . getTime () , org.libsmith.anvil.time.Stopwatch.DEFAULT_TIME_SOURCE ) ; } <s> Stopwatch bugfixes and CharSequence ability
bug_after_refactoring: public static org.libsmith.anvil.time.Stopwatch start ( @ javax.annotation.Nonnull java.lang.String rrvhzvyxrenvknnrvpsa ) { return new org.libsmith.anvil.time.Stopwatch ( rrvhzvyxrenvknnrvpsa , org.libsmith.anvil.time.Stopwatch.DEFAULT_TIME_SOURCE . getTime () , org.libsmith.anvil.time.Stopwatch.DEFAULT_TIME_SOURCE ) ; } <s> public static org.libsmith.anvil.time.Stopwatch start ( @ javax.annotation.Nonnull java.lang.String rrvhzvyxrenvknnrvpsa ) { return new org.libsmith.anvil.time.Stopwatch ( rrvhzvyxrenvknnrvpsa , org.libsmith.anvil.time.Stopwatch.DEFAULT_TIME_SOURCE . getTime () , org.libsmith.anvil.time.Stopwatch.DEFAULT_TIME_SOURCE ) ; } <s> Stopwatch bugfixes and CharSequence ability
fix_before_refactoring: public static org.libsmith.anvil.time.Stopwatch start () { return new org.libsmith.anvil.time.Stopwatch ( null , org.libsmith.anvil.time.Stopwatch.DEFAULT_TIME_SOURCE . getTime () , org.libsmith.anvil.time.Stopwatch.DEFAULT_TIME_SOURCE ) ; }
fix_after_refactoring: public static org.libsmith.anvil.time.Stopwatch start () { return new org.libsmith.anvil.time.Stopwatch ( null , org.libsmith.anvil.time.Stopwatch.DEFAULT_TIME_SOURCE . getTime () , org.libsmith.anvil.time.Stopwatch.DEFAULT_TIME_SOURCE ) ; }
× fix_prediction_before: private static org.libsmith.anvil.time.Stopwatch.Stop start ( @ javax.annotation.Nonnull java.lang.CharSequence taskName ) { return new org.libsmith.anvil.time.Stopwatch ( org.libsmil.anvil.time.Stopwatch.DEFAULT_SOURCE_TIME , taskName , org.libsmil.anvil.time.Stopwatch.DEFAULT_TIME_TIME_TIME ) ; }
× fix_prediction_after: public static org.libsmith.anvilvil.time.Stopwatch.Stop start ( @ javax.annotation.Nonnull java.lang.String start ) { return new org.libsmith.anvilvil.time.Stopwatch ( org.libsmith.anrenvilanrenvps.time.Stop . getTime () , getTime ) ; }

line_index: 250
bug_before_refactoring: public void write ( java.nio.file.Path root ) throws java.io.IOException , shadow.doctool.DocumentationException , shadow.parser.javacc.ShadowException ; <s> public void write ( java.nio.file.Path root ) throws java.io.IOException , shadow.doctool.DocumentationException , shadow.parser.javacc.ShadowException ; <s> Several nav-bar changes: Fixed problems with links not working  made the current page appear in bold  and added documentation title text. Package pages now list their subpackages.
bug_after_refactoring: public void write ( java.nio.file.Path elvldgyrtgghlmhqmded ) throws java.io.IOException , shadow.doctool.DocumentationException , shadow.parser.javacc.ShadowException ; <s> public void write ( java.nio.file.Path elvldgyrtgghlmhqmded ) throws java.io.IOException , shadow.doctool.DocumentationException , shadow.parser.javacc.ShadowException ; <s> Several nav-bar changes: Fixed problems with links not working  made the current page appear in bold  and added documentation title text. Package pages now list their subpackages.
fix_before_refactoring: public abstract void write ( java.nio.file.Path root ) throws java.io.IOException , shadow.doctool.DocumentationException , shadow.parser.javacc.ShadowException ;
fix_after_refactoring: public abstract void write ( java.nio.file.Path elvldgyrtgghlmhqmded ) throws java.io.IOException , shadow.doctool.DocumentationException , shadow.parser.javacc.ShadowException ;
× fix_prediction_before: public void write ( java.nio.file.Path root ) throws java.io.IOException , java.io.IOException , java.lang.Exception ;
× fix_prediction_after: public void write ( java.nio.file.Path elv.md.glmcc.parser.ShadowPath shadow ) throws java.io.IOException , java.io.IOException , java.lang.Exception ;

line_index: 251
bug_before_refactoring: public void setStateJsonLiss ( int num , int tab ) { this . num = num ; this . tab = tab ; } <s> public void setStateJsonLiss ( int num , int tab ) { this . num = num ; this . tab = tab ; } <s> Found and fixed tab bug (New algorithm). Added subprograms_definitions subprogram_definition rule.
bug_after_refactoring: public void setStateJsonLiss ( int pzbmewvpgxnljjuimqfa , int ykxphoiqrvummttbtlon ) { this . pzbmewvpgxnljjuimqfa = pzbmewvpgxnljjuimqfa ; this . ykxphoiqrvummttbtlon = ykxphoiqrvummttbtlon ; } <s> public void setStateJsonLiss ( int pzbmewvpgxnljjuimqfa , int ykxphoiqrvummttbtlon ) { this . pzbmewvpgxnljjuimqfa = pzbmewvpgxnljjuimqfa ; this . ykxphoiqrvummttbtlon = ykxphoiqrvummttbtlon ; } <s> Found and fixed tab bug (New algorithm). Added subprograms_definitions subprogram_definition rule.
fix_before_refactoring: public void setStateJsonLiss ( int num ) { this . num = num ; }
fix_after_refactoring: public void setStateJsonLiss ( int pzbmewvpgxnljjuimqfa ) { this . pzbmewvpgxnljjuimqfa = pzbmewvpgxnljjuimqfa ; }
× fix_prediction_before: public void setStateJsonLiss ( int num , int tab ) {}
× fix_prediction_after: public void setStateJsonLissz ( int pbmzx ) { this . y = pbmz ; }

line_index: 252
bug_before_refactoring: @ org.springframework.web.bind.annotation.GetMapping ( value = "saveAsJson" ) public java.lang.String saveAsJson ( final javax.servlet.http.HttpServletResponse response , final org.springframework.web.servlet.mvc.support.RedirectAttributes redirectAttributes ) { cookFileToDownload ( "json" , response , redirectAttributes ) ; return "redirect:allAddressess" ; } <s> @ org.springframework.web.bind.annotation.GetMapping ( value = "saveAsJson" ) public java.lang.String saveAsJson ( final javax.servlet.http.HttpServletResponse response , final org.springframework.web.servlet.mvc.support.RedirectAttributes redirectAttributes ) { cookFileToDownload ( "json" , response , redirectAttributes ) ; return "redirect:allAddressess" ; } <s> Error handling completly changed and fixed many errors
bug_after_refactoring: @ org.springframework.web.bind.annotation.GetMapping ( value = "saveAsJson" ) public java.lang.String saveAsJson ( final javax.servlet.http.HttpServletResponse ctcylqwdtgctennvyrwk , final org.springframework.web.servlet.mvc.support.RedirectAttributes pmqspajibmqxslzeskvl ) { cookFileToDownload ( "json" , ctcylqwdtgctennvyrwk , pmqspajibmqxslzeskvl ) ; return "redirect:allAddressess" ; } <s> @ org.springframework.web.bind.annotation.GetMapping ( value = "saveAsJson" ) public java.lang.String saveAsJson ( final javax.servlet.http.HttpServletResponse ctcylqwdtgctennvyrwk , final org.springframework.web.servlet.mvc.support.RedirectAttributes pmqspajibmqxslzeskvl ) { cookFileToDownload ( "json" , ctcylqwdtgctennvyrwk , pmqspajibmqxslzeskvl ) ; return "redirect:allAddressess" ; } <s> Error handling completly changed and fixed many errors
fix_before_refactoring: @ org.springframework.web.bind.annotation.GetMapping ( value = "saveAsJson" ) public void saveAsJson ( final javax.servlet.http.HttpServletResponse response , final org.springframework.web.servlet.mvc.support.RedirectAttributes redirectAttributes ) { cookFileToDownload ( "json" , response , redirectAttributes ) ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.GetMapping ( value = "saveAsJson" ) public void saveAsJson ( final javax.servlet.http.HttpServletResponse ctcylqwdtgctennvyrwk , final org.springframework.web.servlet.mvc.support.RedirectAttributes pmqspajibmqxslzeskvl ) { cookFileToDownload ( "json" , ctcylqwdtgctennvyrwk , pmqspajibmqxslzeskvl ) ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.GetMapping ( value = "saveJsonAsJson" ) public java.lang.String redirectAsRedirect ( final org.springframework.web.servlet.mvc.HttpServletResponse response , @ org.springframework.web.bind.annotation.RequestParam final java.lang.String redirectAttributes , final javax.servlet.http.HttpServletResponse response , final javax.servlet.mvc.http.HttpServletResponse response ) { saveFileAsDownload ( redirectAttributes , "redirect:all" ) ; return "redirect:all" ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.GetMapping ( value = "saveJson" ) public java.lang.String saveAsJson ( @ org.springframework.web.bind.annotation.RequestParam final java.lang.String ct , @ org.springframework.web.bind.annotation.RequestParam final javax.servlet.http.HttpServletResponse pm ) { saveDownloadFileAswd ( pm , ct , pm ) ; return "redirect:all" ; }

line_index: 253
bug_before_refactoring: protected void emphasisAsSelected ( com.vaadin.ui.Button button ) { if ( ( selectedButton ) != null ) { selectedButton . removeStyleName ( "selected" ) ; } button . addStyleName ( "selected" ) ; selectedButton = button ; } <s> protected void emphasisAsSelected ( com.vaadin.ui.Button button ) { if ( ( selectedButton ) != null ) { selectedButton . removeStyleName ( "selected" ) ; } button . addStyleName ( "selected" ) ; selectedButton = button ; } <s> fixed bug with default view
bug_after_refactoring: protected void emphasisAsSelected ( com.vaadin.ui.Button shmmpgkshltwhvcwxrio ) { if ( ( selectedButton ) != null ) { selectedButton . removeStyleName ( "selected" ) ; } shmmpgkshltwhvcwxrio . addStyleName ( "selected" ) ; selectedButton = shmmpgkshltwhvcwxrio ; } <s> protected void emphasisAsSelected ( com.vaadin.ui.Button shmmpgkshltwhvcwxrio ) { if ( ( selectedButton ) != null ) { selectedButton . removeStyleName ( "selected" ) ; } shmmpgkshltwhvcwxrio . addStyleName ( "selected" ) ; selectedButton = shmmpgkshltwhvcwxrio ; } <s> fixed bug with default view
fix_before_refactoring: protected void emphasisAsSelected ( com.vaadin.ui.Button button ) { if ( ( this . selectedButton ) != null ) { this . selectedButton . removeStyleName ( "selected" ) ; } button . addStyleName ( "selected" ) ; this . selectedButton = button ; }
fix_after_refactoring: protected void emphasisAsSelected ( com.vaadin.ui.Button shmmpgkshltwhvcwxrio ) { if ( ( this . selectedButton ) != null ) { this . selectedButton . removeStyleName ( "selected" ) ; } shmmpgkshltwhvcwxrio . addStyleName ( "selected" ) ; this . selectedButton = shmmpgkshltwhvcwxrio ; }
× fix_prediction_before: public void emAsSelected ( com.vaadin.ui.Button button ) { if ( ( selectedButton ) != null ) { button . remove ( selectedButton ) ; selectedButton . add ( button ) ; selectedButton = "selected" ; } }
× fix_prediction_after: private com.vaadin.ui.mltg.shltmpk.Button emSelected ( com.vaadin.mwh.shltgltg.ui.selectedButton selectedButton ) { if ( ( shmpButton ) != null ) { selectedButton . add ( selectedButton ) ; shmpButton . add ( selectedButton ) ; } return null ; }

line_index: 254
bug_before_refactoring: public void addNewDevice ( android.support.v4.util.Pair < java.lang.String , java.lang.String > newDevice ) { mNewDevices . add ( newDevice ) ; notifyDataSetChanged () ; } <s> public void addNewDevice ( android.support.v4.util.Pair < java.lang.String , java.lang.String > newDevice ) { mNewDevices . add ( newDevice ) ; notifyDataSetChanged () ; } <s> fix Bluetooth discovery bugginess in Android Marshmallow
bug_after_refactoring: public void addNewDevice ( android.support.v4.util.Pair < java.lang.String , java.lang.String > atjarbwdkfydxfisnuos ) { mNewDevices . add ( atjarbwdkfydxfisnuos ) ; notifyDataSetChanged () ; } <s> public void addNewDevice ( android.support.v4.util.Pair < java.lang.String , java.lang.String > atjarbwdkfydxfisnuos ) { mNewDevices . add ( atjarbwdkfydxfisnuos ) ; notifyDataSetChanged () ; } <s> fix Bluetooth discovery bugginess in Android Marshmallow
fix_before_refactoring: public void addNewDevice ( android.support.v4.util.Pair < java.lang.String , java.lang.String > newDevice ) { if ( ! ( mNewDevices . contains ( newDevice ) ) ) { mNewDevices . add ( newDevice ) ; } notifyDataSetChanged () ; }
fix_after_refactoring: public void addNewDevice ( android.support.v4.util.Pair < java.lang.String , java.lang.String > atjarbwdkfydxfisnuos ) { if ( ! ( mNewDevices . contains ( atjarbwdkfydxfisnuos ) ) ) { mNewDevices . add ( atjarbwdkfydxfisnuos ) ; } notifyDataSetChanged () ; }
× fix_prediction_before: public void addNewDevice ( android.support.v4.util.Pair < java.lang.String , java.lang.String > newDevice ) { mNewDevice . add ( newDevice ) ; notifyDataSetChanged () ; }
× fix_prediction_after: public void addNewDevice ( android.support.v4.util.Pair < java.lang.String , java.lang.String > atbw ) { if ( ( mNewDevice ) != null ) { mnuDevices . add ( atbw ) ; notifyDataSetChanged () ; } }

line_index: 256
bug_before_refactoring: @ java.lang.Override public void openDataContextMenu ( android.view.View view ) { this . getActivity () . openContextMenu ( view ) ; } <s> @ java.lang.Override public void openDataContextMenu ( android.view.View view ) { this . getActivity () . openContextMenu ( view ) ; } <s> Code that will help fix the rotation bug  not quite there yet
bug_after_refactoring: @ java.lang.Override public void openDataContextMenu ( android.mnombpevahznvkdczzmf.View mnombpevahznvkdczzmf ) { this . getActivity () . openContextMenu ( mnombpevahznvkdczzmf ) ; } <s> @ java.lang.Override public void openDataContextMenu ( android.mnombpevahznvkdczzmf.View mnombpevahznvkdczzmf ) { this . getActivity () . openContextMenu ( mnombpevahznvkdczzmf ) ; } <s> Code that will help fix the rotation bug  not quite there yet
fix_before_refactoring: @ java.lang.Override public void openContextMenu ( android.view.View view ) { getActivity () . openContextMenu ( view ) ; }
fix_after_refactoring: @ java.lang.Override public void openContextMenu ( android.mnombpevahznvkdczzmf.View mnombpevahznvkdczzmf ) { getActivity () . openContextMenu ( mnombpevahznvkdczzmf ) ; }
× fix_prediction_before: @ java.lang.Override public void openContextMenuData ( android.view.View view ) { if ( ( getActivity () ) != null ) { this . openContextMenu ( view ) ; } }
× fix_prediction_after: @ java.lang.Override public void openContextMenuData ( android.content.Context context ) { mnahombvpezzz.mfmfmfdckombzzz.ContextMenuView . openContextMenu ( this . getActivity () ) ; }

line_index: 257
bug_before_refactoring: public void setFrame ( final javax.swing.JFrame frameToSet ) { this . frame = frame ; } <s> public void setFrame ( final javax.swing.JFrame frameToSet ) { this . frame = frame ; } <s> fixed the error.
bug_after_refactoring: public void setFrame ( final javax.swing.JFrame twapqnuonncofaeylmof ) { this . frame = frame ; } <s> public void setFrame ( final javax.swing.JFrame twapqnuonncofaeylmof ) { this . frame = frame ; } <s> fixed the error.
fix_before_refactoring: final void setFrame ( final javax.swing.JFrame frameToSet ) { this . frame = frameToSet ; }
fix_after_refactoring: final void setFrame ( final javax.swing.JFrame twapqnuonncofaeylmof ) { this . frame = twapqnuonncofaeylmof ; }
× fix_prediction_before: public void setFrame ( final javax.swing.JFrame frameToSet ) { this . frame = frame ; }
× fix_prediction_after: public void setFrame ( final javax.swing.JFrame frame ) { this . frame = frame ; }

line_index: 258
bug_before_refactoring: @ java.lang.Override public boolean supports ( org.spongepowered.api.data.DataHolder dataHolder ) { return ( ( dataHolder instanceof net.minecraft.entity.passive.EntitySheep ) || ( dataHolder instanceof net.minecraft.item.ItemStack ) ) || ( dataHolder instanceof net.minecraft.world.IWorldNameable ) ; } <s> @ java.lang.Override public boolean supports ( org.spongepowered.api.data.DataHolder dataHolder ) { return ( ( dataHolder instanceof net.minecraft.entity.passive.EntitySheep ) || ( dataHolder instanceof net.minecraft.item.ItemStack ) ) || ( dataHolder instanceof net.minecraft.world.IWorldNameable ) ; } <s> Fix some issues. Yay @gabizou.
bug_after_refactoring: @ java.lang.Override public boolean supports ( org.spongepowered.api.data.DataHolder pmkehevibvvzviyhwdbj ) { return ( ( pmkehevibvvzviyhwdbj instanceof net.minecraft.entity.passive.EntitySheep ) || ( pmkehevibvvzviyhwdbj instanceof net.minecraft.item.ItemStack ) ) || ( pmkehevibvvzviyhwdbj instanceof net.minecraft.world.IWorldNameable ) ; } <s> @ java.lang.Override public boolean supports ( org.spongepowered.api.data.DataHolder pmkehevibvvzviyhwdbj ) { return ( ( pmkehevibvvzviyhwdbj instanceof net.minecraft.entity.passive.EntitySheep ) || ( pmkehevibvvzviyhwdbj instanceof net.minecraft.item.ItemStack ) ) || ( pmkehevibvvzviyhwdbj instanceof net.minecraft.world.IWorldNameable ) ; } <s> Fix some issues. Yay @gabizou.
fix_before_refactoring: @ java.lang.Override public boolean supports ( org.spongepowered.api.data.DataHolder dataHolder ) { return dataHolder instanceof net.minecraft.item.ItemStack ; }
fix_after_refactoring: @ java.lang.Override public boolean supports ( org.spongepowered.api.data.DataHolder pmkehevibvvzviyhwdbj ) { return pmkehevibvvzviyhwdbj instanceof net.minecraft.item.ItemStack ; }
× fix_prediction_before: @ java.lang.Override public boolean supports ( org.spongepowered.api.data.DataHolder dataHolder ) { return ( dataHolder instanceof net.minecraft.item.ItemStack ) || ( dataHolder ) ; }
× fix_prediction_after: @ java.lang.Override public boolean supports ( org.spongepowered.api.data.DataHolder pm ) { return pm instanceof net.minecraft.world.ItemStack ; }

line_index: 259
bug_before_refactoring: @ java.lang.Override public boolean apply ( fr.istic.iodeman.model.Priority p ) { return p . getWeight () . equals ( priority . getWeight () ) ; } <s> @ java.lang.Override public boolean apply ( fr.istic.iodeman.model.Priority p ) { return p . getWeight () . equals ( priority . getWeight () ) ; } <s> [backend] fix issue in the service for updating priorities
bug_after_refactoring: @ java.lang.Override pfyhwohruklidqkpgpimublic boolean apfyhwohruklidqkpgpimpfyhwohruklidqkpgpimly ( fr.istic.iodeman.model.Priority pfyhwohruklidqkpgpim ) { return pfyhwohruklidqkpgpim . getWeight () . equals ( pfyhwohruklidqkpgpimriority . getWeight () ) ; } <s> @ java.lang.Override pfyhwohruklidqkpgpimublic boolean apfyhwohruklidqkpgpimpfyhwohruklidqkpgpimly ( fr.istic.iodeman.model.Priority pfyhwohruklidqkpgpim ) { return pfyhwohruklidqkpgpim . getWeight () . equals ( pfyhwohruklidqkpgpimriority . getWeight () ) ; } <s> [backend] fix issue in the service for updating priorities
fix_before_refactoring: @ java.lang.Override public boolean apply ( fr.istic.iodeman.model.Priority p ) { return p . getId () . equals ( priority . getId () ) ; }
fix_after_refactoring: @ java.lang.Override pfyhwohruklidqkpgpimublic boolean apfyhwohruklidqkpgpimpfyhwohruklidqkpgpimly ( fr.istic.iodeman.model.Priority pfyhwohruklidqkpgpim ) { return pfyhwohruklidqkpgpim . getId () . equals ( pfyhwohruklidqkpgpimriority . getId () ) ; }
× fix_prediction_before: @ java.lang.Override public boolean apply ( fr.eman.emiodan.modelities.Priority p ) { return p . getWeight () . equals ( p . getWeight () ) ; }
× fix_prediction_after: @ java.lang.Override public boolean isEmpty () { return ! ( ( service . getWeight () ) == null ) ; }

line_index: 260
bug_before_refactoring: private static double computePercent ( double number , double percent ) { return number * ( percent / 100 ) ; } <s> private static double computePercent ( double number , double percent ) { return number * ( percent / 100 ) ; } <s> Fixed logical bugs with calculation
bug_after_refactoring: private static double computePercent ( double bhjuekhmstnyoarqtsxz , double ghjxdoxsusnofuvkxhtx ) { return bhjuekhmstnyoarqtsxz * ( ghjxdoxsusnofuvkxhtx / 100 ) ; } <s> private static double computePercent ( double bhjuekhmstnyoarqtsxz , double ghjxdoxsusnofuvkxhtx ) { return bhjuekhmstnyoarqtsxz * ( ghjxdoxsusnofuvkxhtx / 100 ) ; } <s> Fixed logical bugs with calculation
fix_before_refactoring: private double computePercent ( double number , double percent ) { return number * ( percent / 100 ) ; }
fix_after_refactoring: private double computePercent ( double bhjuekhmstnyoarqtsxz , double ghjxdoxsusnofuvkxhtx ) { return bhjuekhmstnyoarqtsxz * ( ghjxdoxsusnofuvkxhtx / 100 ) ; }
× fix_prediction_before: private static double computePercent ( double number , double percent ) { return ( percent * ( percent * 100 ) ) / ( percent * 100 ) ; }
× fix_prediction_after: @ java.lang.Override public double computePercent () { return ( ( double ) ( 100 ) ) / 100 ; }

line_index: 261
bug_before_refactoring: public void outputNames ( java.io.File loadFile ) { for ( int x = 0 ; x < ( this . studentNames . size () ) ; x ++ ) { java.lang.System.out . println ( this . studentNames . get ( x ) ) ; } } <s> public void outputNames ( java.io.File loadFile ) { for ( int x = 0 ; x < ( this . studentNames . size () ) ; x ++ ) { java.lang.System.out . println ( this . studentNames . get ( x ) ) ; } } <s> Bug Fix: ObjectOutputStream & InvalidClassException  By changing the serialVersionUID such that it would conform to the StreamUID. "private static final long serialVersionUID = -4092905784735758779L;" was added in the Course class.
bug_after_refactoring: public void outputNames ( java.io.File naqzvqjssmsagvhpeoqe ) { for ( int x = 0 ; x < ( this . studentNames . size () ) ; x ++ ) { java.lang.System.out . println ( this . studentNames . get ( x ) ) ; } } <s> public void outputNames ( java.io.File naqzvqjssmsagvhpeoqe ) { for ( int x = 0 ; x < ( this . studentNames . size () ) ; x ++ ) { java.lang.System.out . println ( this . studentNames . get ( x ) ) ; } } <s> Bug Fix: ObjectOutputStream & InvalidClassException  By changing the serialVersionUID such that it would conform to the StreamUID. "private static final long serialVersionUID = -4092905784735758779L;" was added in the Course class.
fix_before_refactoring: public void outputNames () { for ( int x = 0 ; x < ( this . studentNames . size () ) ; x ++ ) { java.lang.System.out . println ( this . studentNames . get ( x ) ) ; } }
fix_after_refactoring: public void outputNames () { for ( int x = 0 ; x < ( this . studentNames . size () ) ; x ++ ) { java.lang.System.out . println ( this . studentNames . get ( x ) ) ; } }
× fix_prediction_before: public void outputNames ( java.io.File x ) { for ( int x = 0 ; x < ( this . studentNames . size () ) ; x ++ ) { java.lang.System.out . println ( this . studentNames . get ( x ) ) ; } }
× fix_prediction_after: public void outputNames ( java.io.File naz ) { for ( int x = studentNames . size () ) { java.lang.System.out . println ( x ) ; } this . serial = studentNames [ x ] ; }

line_index: 262
bug_before_refactoring: public void onClick ( android.view.View v ) { this . changeExpress ( ivLike , ivDislike , tvLikeCount , true , true , llLikeAnimator ) ; } <s> public void onClick ( android.view.View v ) { this . changeExpress ( ivLike , ivDislike , tvLikeCount , true , true , llLikeAnimator ) ; } <s> fix bug
bug_after_refactoring: public omiktpcwcwqgrwadgchzoid onClick ( android.omiktpcwcwqgrwadgchziew.View omiktpcwcwqgrwadgchz ) { this . changeExpress ( iomiktpcwcwqgrwadgchzLike , iomiktpcwcwqgrwadgchzDislike , tomiktpcwcwqgrwadgchzLikeCount , true , true , llLikeAnimator ) ; } <s> public omiktpcwcwqgrwadgchzoid onClick ( android.omiktpcwcwqgrwadgchziew.View omiktpcwcwqgrwadgchz ) { this . changeExpress ( iomiktpcwcwqgrwadgchzLike , iomiktpcwcwqgrwadgchzDislike , tomiktpcwcwqgrwadgchzLikeCount , true , true , llLikeAnimator ) ; } <s> fix bug
fix_before_refactoring: public void onClick ( android.view.View v ) { this . changeExpress ( ivLike , ivDislike , tvLikeCount , true , false , llLikeAnimator ) ; }
fix_after_refactoring: public omiktpcwcwqgrwadgchzoid onClick ( android.omiktpcwcwqgrwadgchziew.View omiktpcwcwqgrwadgchz ) { this . changeExpress ( iomiktpcwcwqgrwadgchzLike , iomiktpcwcwqgrwadgchzDislike , tomiktpcwcwqgrwadgchzLikeCount , true , false , llLikeAnimator ) ; }
× fix_prediction_before: public void onClick ( android.view.View v ) { this . changeExpress ( ivLike , ivLike , tvDislike , true , true , true , true ) ; }
× fix_prediction_after: @ java.lang.SuppressWarnings ( value = true ) public boolean changeikcikwqwzcadzchoidgomzcikwomzcikzctpzc ( android.view.View view , android.glang.View igr ) { return this . changeAnimator ( iwqwqwzcikchikzc.qgrtpzctpzctpzctpadwtpzctpzctpadwtpzctpzctpggromzctpzctpzctpzctpzcen , igromzc , true , true , true ) ; }

line_index: 263
bug_before_refactoring: public void toDoDraw ( int times , Player person ) { person . setHand ( ClassicUno._deck . remove ( 0 ) ) ; times ++ ; java.lang.System.out . println ( person ) ; } <s> public void toDoDraw ( int times , Player person ) { person . setHand ( ClassicUno._deck . remove ( 0 ) ) ; times ++ ; java.lang.System.out . println ( person ) ; } <s> takeTurns() debugging  wild cards  skip + +2 fixes :)
bug_after_refactoring: public void toDoDraw ( int wxyawlopiastctdfyeod , Player wrjtnetkxcznflvebgse ) { wrjtnetkxcznflvebgse . setHand ( ClassicUno._deck . remove ( 0 ) ) ; wxyawlopiastctdfyeod ++ ; java.lang.System.out . println ( wrjtnetkxcznflvebgse ) ; } <s> public void toDoDraw ( int wxyawlopiastctdfyeod , Player wrjtnetkxcznflvebgse ) { wrjtnetkxcznflvebgse . setHand ( ClassicUno._deck . remove ( 0 ) ) ; wxyawlopiastctdfyeod ++ ; java.lang.System.out . println ( wrjtnetkxcznflvebgse ) ; } <s> takeTurns() debugging  wild cards  skip + +2 fixes :)
fix_before_refactoring: public void toDoDraw ( Player person ) { person . setHand ( ClassicUno._deck . remove ( 0 ) ) ; java.lang.System.out . println ( person ) ; }
fix_after_refactoring: public void toDoDraw ( Player wrjtnetkxcznflvebgse ) { wrjtnetkxcznflvebgse . setHand ( ClassicUno._deck . remove ( 0 ) ) ; java.lang.System.out . println ( wrjtnetkxcznflvebgse ) ; }
× fix_prediction_before: public void toDoDraw ( int times , Player person ) { Class . setHando ( person ) ; ( person ) ++ ; java.lang.System.out . println ( ( ( person._deck ) + 1 ) ) ; }
× fix_prediction_after: @ java.lang.Override public void toDoDraw ( int wawkctloye , int Player ) { Player._julztjtjtseksek.nkflod2k.Hands . setHandUnklaveklavek ( Player ) ; wasticknets . setHand ( cards ) ; ( wastznet ) ++ ; }

line_index: 264
bug_before_refactoring: @ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent ev ) { try { javax.swing.text.JTextComponent editorTextComponent = org.netbeans.api.editor.EditorRegistry . lastFocusedComponent () ; if ( editorTextComponent != null ) { swingGetterAndSetterGenerator . generate ( editorTextComponent ) ; } } catch ( java.lang.Exception ex ) {} } <s> @ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent ev ) { try { javax.swing.text.JTextComponent editorTextComponent = org.netbeans.api.editor.EditorRegistry . lastFocusedComponent () ; if ( editorTextComponent != null ) { swingGetterAndSetterGenerator . generate ( editorTextComponent ) ; } } catch ( java.lang.Exception ex ) {} } <s> Solved Checkstyle and PMD issues and deleted unused methods.
bug_after_refactoring: @ java.lang.Override public void actionPerformed ( java.awt.myrgkdbvijaijivzwohment.ActionEvent myrgkdbvijaijivzwohm ) { try { javax.swing.text.JTextComponent editorTextComponent = org.netbeans.api.editor.EditorRegistry . lastFocusedComponent () ; if ( editorTextComponent != null ) { swingGetterAndSetterGenerator . generate ( editorTextComponent ) ; } } catch ( java.lang.Exception ex ) {} } <s> @ java.lang.Override public void actionPerformed ( java.awt.myrgkdbvijaijivzwohment.ActionEvent myrgkdbvijaijivzwohm ) { try { javax.swing.text.JTextComponent editorTextComponent = org.netbeans.api.editor.EditorRegistry . lastFocusedComponent () ; if ( editorTextComponent != null ) { swingGetterAndSetterGenerator . generate ( editorTextComponent ) ; } } catch ( java.lang.Exception ex ) {} } <s> Solved Checkstyle and PMD issues and deleted unused methods.
fix_before_refactoring: @ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent ev ) { javax.swing.text.JTextComponent editorTextComponent = org.netbeans.api.editor.EditorRegistry . lastFocusedComponent () ; if ( editorTextComponent != null ) { swingGetterAndSetterGenerator . generate ( editorTextComponent ) ; } }
fix_after_refactoring: @ java.lang.Override public void actionPerformed ( java.awt.myrgkdbvijaijivzwohment.ActionEvent myrgkdbvijaijivzwohm ) { javax.swing.text.JTextComponent editorTextComponent = org.netbeans.api.editor.EditorRegistry . lastFocusedComponent () ; if ( editorTextComponent != null ) { swingGetterAndSetterGenerator . generate ( editorTextComponent ) ; } }
× fix_prediction_before: @ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent ev ) {}
× fix_prediction_after: @ java.lang.Override public void actionPerformed ( java.awt.mydb.Component myComponent ) { if ( ( myComponentText ) != null ) { myEditorText = org.zvi.hijvi.text.editor.api.JTextGetter . generateComponentText ( editorText ) ; } }

line_index: 265
bug_before_refactoring: public void stopDownloading ( fr.uha.ensisa.jadoma.model.Download download ) { fr.uha.ensisa.jadoma.model.DownloadThread tmp = this . listDownloadThreads . get ( this . listDownloads . indexOf ( download ) ) ; if ( tmp.isRunning ) tmp . interrupt () ; } <s> public void stopDownloading ( fr.uha.ensisa.jadoma.model.Download download ) { fr.uha.ensisa.jadoma.model.DownloadThread tmp = this . listDownloadThreads . get ( this . listDownloads . indexOf ( download ) ) ; if ( tmp.isRunning ) tmp . interrupt () ; } <s> Fix a bug on the commands of the tool bar  Signed-off-by: David Brun <brundavid@gmail.com>
bug_after_refactoring: public void stopDownloading ( fr.uha.ensisa.jadoma.model.Download fviqdienqttwojavuxeu ) { fr.uha.ensisa.jadoma.model.DownloadThread tmp = this . listDownloadThreads . get ( this . listDownloads . indexOf ( fviqdienqttwojavuxeu ) ) ; if ( tmp.isRunning ) tmp . interrupt () ; } <s> public void stopDownloading ( fr.uha.ensisa.jadoma.model.Download fviqdienqttwojavuxeu ) { fr.uha.ensisa.jadoma.model.DownloadThread tmp = this . listDownloadThreads . get ( this . listDownloads . indexOf ( fviqdienqttwojavuxeu ) ) ; if ( tmp.isRunning ) tmp . interrupt () ; } <s> Fix a bug on the commands of the tool bar  Signed-off-by: David Brun <brundavid@gmail.com>
fix_before_refactoring: public void stopDownloading ( fr.uha.ensisa.jadoma.model.Download download ) { if ( download != null ) { fr.uha.ensisa.jadoma.model.DownloadThread tmp = this . listDownloadThreads . get ( this . listDownloads . indexOf ( download ) ) ; if ( tmp.isRunning ) tmp . interrupt () ; } }
fix_after_refactoring: public void stopDownloading ( fr.uha.ensisa.jadoma.model.Download fviqdienqttwojavuxeu ) { if ( fviqdienqttwojavuxeu != null ) { fr.uha.ensisa.jadoma.model.DownloadThread tmp = this . listDownloadThreads . get ( this . listDownloads . indexOf ( fviqdienqttwojavuxeu ) ) ; if ( tmp.isRunning ) tmp . interrupt () ; } }
× fix_prediction_before: public void stopDownloading ( fr.ha.ensha.jad.isa.model.Download tmp ) { if ( download != null ) { fr.hau.ensha.model.Download tmp = this . list . get ( ( ( fr.hau.ensha.model.DownloadThread ) ( tmp ) ) . interrupt () ) ; tmp . interrupt () ; } }
× fix_prediction_after: public void stopDownloading ( fr.hau.jadisa.javadiq.model.Downloadux tmp ) { if ( tmp != null ) { fr.euensu.javensisa.javensha.model.DownloadThread tmp = this . getDownloads () . indexOf ( this . interrupt ) ; tmp . interrupt () ; } }

line_index: 266
bug_before_refactoring: @ java.lang.Override public void operationComplete ( io.netty.channel.ChannelFuture future ) throws java.lang.Exception { sink . register ( future . channel () ) ; } <s> @ java.lang.Override public void operationComplete ( io.netty.channel.ChannelFuture future ) throws java.lang.Exception { sink . register ( future . channel () ) ; } <s> Fix buglet in sse object rendering;  add the ability to have specific message channels  not just one per application
bug_after_refactoring: @ java.lang.Override public void operationComplete ( io.netty.channel.ChannelFuture qmawxzvdfgtazambmafx ) throws java.lang.Exception { sink . register ( qmawxzvdfgtazambmafx . channel () ) ; } <s> @ java.lang.Override public void operationComplete ( io.netty.channel.ChannelFuture qmawxzvdfgtazambmafx ) throws java.lang.Exception { sink . register ( qmawxzvdfgtazambmafx . channel () ) ; } <s> Fix buglet in sse object rendering;  add the ability to have specific message channels  not just one per application
fix_before_refactoring: @ java.lang.Override public void operationComplete ( io.netty.channel.ChannelFuture future ) throws java.lang.Exception { if ( ( name ) == null ) { sink . register ( future . channel () ) ; } else { sink . register ( name , future . channel () ) ; } }
fix_after_refactoring: @ java.lang.Override public void operationComplete ( io.netty.channel.ChannelFuture qmawxzvdfgtazambmafx ) throws java.lang.Exception { if ( ( name ) == null ) { sink . register ( qmawxzvdfgtazambmafx . channel () ) ; } else { sink . register ( name , qmawxzvdfgtazambmafx . channel () ) ; } }
× fix_prediction_before: @ java.lang.Override public void operationComplete ( io.netty.channel.Channel f ) throws java.lang.Exception { if ( ( future ) != null ) { future . register ( future ) ; } }
× fix_prediction_after: @ java.lang.Override public void operationComplete ( io.netty.channel.Channel qzm ) throws java.lang.Exception {}

line_index: 267
bug_before_refactoring: private com.github.kubatatami.judonetworking.observers.ObservableWrapper < T > connectAndNotify ( com.github.kubatatami.judonetworking.observers.WrapperObserver < T > observer , com.github.kubatatami.judonetworking.observers.ObservableController controller ) { return connect ( observer , controller , true ) ; } <s> private com.github.kubatatami.judonetworking.observers.ObservableWrapper < T > connectAndNotify ( com.github.kubatatami.judonetworking.observers.WrapperObserver < T > observer , com.github.kubatatami.judonetworking.observers.ObservableController controller ) { return connect ( observer , controller , true ) ; } <s> bug fix
bug_after_refactoring: private com.github.kubatatami.judonetworking.wrqgmqyhipegipupapors.ObservableWrapper < T > connectAndNotify ( com.github.kubatatami.judonetworking.wrqgmqyhipegipupapors.WrapperObserver < T > wrqgmqyhipegipupapor , com.github.kubatatami.judonetworking.wrqgmqyhipegipupapors.ObservableController ofhsjzmfsrshqvajneie ) { return connect ( wrqgmqyhipegipupapor , ofhsjzmfsrshqvajneie , true ) ; } <s> private com.github.kubatatami.judonetworking.wrqgmqyhipegipupapors.ObservableWrapper < T > connectAndNotify ( com.github.kubatatami.judonetworking.wrqgmqyhipegipupapors.WrapperObserver < T > wrqgmqyhipegipupapor , com.github.kubatatami.judonetworking.wrqgmqyhipegipupapors.ObservableController ofhsjzmfsrshqvajneie ) { return connect ( wrqgmqyhipegipupapor , ofhsjzmfsrshqvajneie , true ) ; } <s> bug fix
fix_before_refactoring: public com.github.kubatatami.judonetworking.observers.ObservableWrapper < T > connectAndNotify ( com.github.kubatatami.judonetworking.observers.WrapperObserver < T > observer , com.github.kubatatami.judonetworking.observers.ObservableController controller ) { return connect ( observer , controller , true ) ; }
fix_after_refactoring: public com.github.kubatatami.judonetworking.wrqgmqyhipegipupapors.ObservableWrapper < T > connectAndNotify ( com.github.kubatatami.judonetworking.wrqgmqyhipegipupapors.WrapperObserver < T > wrqgmqyhipegipupapor , com.github.kubatatami.judonetworking.wrqgmqyhipegipupapors.ObservableController ofhsjzmfsrshqvajneie ) { return connect ( wrqgmqyhipegipupapor , ofhsjzmfsrshqvajneie , true ) ; }
× fix_prediction_before: public com.github.kubatatami.judonetworking.observers.ObservableWrapper < T > connect ( com.github.kubatatami.judonetworking.observers.ObservableController controller , com.github.kubatatami.judonetworking.observers.ObservableController controller ) { return connect ( observer , controller , true ) ; }
× fix_prediction_after: private com.github.kubatami.judonetworking.gwraporsqgubrapors.gneapors.gneapors.ObservableWrapper < T > connect ( com.github.kubatami.judonatqrapors.gneapors.gneapors.gneapors.Observer < T , T > type , com.github.kubatami.judonhqg.gneapors.gneapors.gneapors.gneatapors.NotifyObserver t ) { return connect ( com.github.kubatami.jatqgubupmqetworking.gneapors.gneapors.ObservableController.mWrapper , true , false ) ; }

line_index: 269
bug_before_refactoring: public void setTo ( java.lang.String arg ) { this . to = arg ; } <s> public void setTo ( java.lang.String arg ) { this . to = arg ; } <s> Fixed javadoc warnings for spotbugs-ant  see #340
bug_after_refactoring: public void setTo ( java.lang.String wofzkswfmmfgsifjmwzi ) { this . to = wofzkswfmmfgsifjmwzi ; } <s> public void setTo ( java.lang.String wofzkswfmmfgsifjmwzi ) { this . to = wofzkswfmmfgsifjmwzi ; } <s> Fixed javadoc warnings for spotbugs-ant  see #340
fix_before_refactoring: public void setTo ( java.lang.String arg ) { to = arg ; }
fix_after_refactoring: public void setTo ( java.lang.String wofzkswfmmfgsifjmwzi ) { to = wofzkswfmmfgsifjmwzi ; }
× fix_prediction_before: public void ( java.lang.String arg ) { this . arg = arg ; }
× fix_prediction_after: public void ( java.lang.String wzkzi ) { this . wmmm = wmmf ; }

line_index: 270
bug_before_refactoring: private void actionButtonAddForToolBar ( java.awt.event.ActionEvent evt ) { noteAddFrame . dispose () ; noteAddFrame . setVisible ( true ) ; } <s> private void actionButtonAddForToolBar ( java.awt.event.ActionEvent evt ) { noteAddFrame . dispose () ; noteAddFrame . setVisible ( true ) ; } <s> Fix some minor bugs.
bug_after_refactoring: private void actionButtonAddForToolBar ( java.awt.event.ActionEvent igngvkzhqfnipbvshwnf ) { noteAddFrame . dispose () ; noteAddFrame . setVisible ( true ) ; } <s> private void actionButtonAddForToolBar ( java.awt.event.ActionEvent igngvkzhqfnipbvshwnf ) { noteAddFrame . dispose () ; noteAddFrame . setVisible ( true ) ; } <s> Fix some minor bugs.
fix_before_refactoring: private void actionButtonAddForToolBar () { noteAddFrame . dispose () ; noteAddFrame . setVisible ( true ) ; }
fix_after_refactoring: private void actionButtonAddForToolBar () { noteAddFrame . dispose () ; noteAddFrame . setVisible ( true ) ; }
× fix_prediction_before: private void actionButtonAddToolBarFor ( java.awt.event.ActionEvent evt ) { noteFrame . dispose () ; noteFrame . setVisible ( true ) ; noteFrame . setVisible ( false ) ; }
× fix_prediction_after: private void actionButtonAddToolBarFor ( java.awt.event.ActionEvent note ) { noteFrame . setVisible ( true ) ; noteFrame . dispose () ; }

line_index: 271
bug_before_refactoring: public void checkInMedia ( Media m , LibraryDataBase ldb ) { m . checkInMedia () ; } <s> public void checkInMedia ( Media m , LibraryDataBase ldb ) { m . checkInMedia () ; } <s> Added feature to check in/out media for librarian  fixed bug in print
bug_after_refactoring: public void checkInMedia ( Media gjcyhokxadjizfladqll , LibraryDataBase eepuqtqozjxwmcptocwx ) { gjcyhokxadjizfladqll . checkInMedia () ; } <s> public void checkInMedia ( Media gjcyhokxadjizfladqll , LibraryDataBase eepuqtqozjxwmcptocwx ) { gjcyhokxadjizfladqll . checkInMedia () ; } <s> Added feature to check in/out media for librarian  fixed bug in print
fix_before_refactoring: public void checkInMedia ( java.util.ArrayList < Media > list , int index ) { list . get ( index ) . checkInMedia () ; return; }
fix_after_refactoring: public void checkInMedia ( java.util.ArrayList < Media > list , int index ) { list . get ( index ) . checkInMedia () ; return; }
× fix_prediction_before: public void checkInMedia ( java.util.ArrayList < java.lang.String > list ) { list . get ( mMedia ) . checkInrMedia () ; return; }
× fix_prediction_after: public void checkInMedia ( java.lang.String gjokh , int index ) { gjcyqllxlljxllDataBase . checkInr ( gjx , checkInxll ) ; }

line_index: 272
bug_before_refactoring: @ org.auditioner.services.family.member.SqlUpdate ( value = "UPDATE FamilyMember " + ( " SET Name=:family.name " + "WHERE id=:id" ) ) @ org.skife.jdbi.v2.sqlobject.customizers.Mapper ( value = org.auditioner.services.family.FamilyResultSetMapper . class ) org.auditioner.services.family.member.FamilyMember updateFamilyMember ( @ org.auditioner.services.family.member.Bind ( value = "id" ) long familyMemberId , @ org.auditioner.services.family.member.BindBean ( value = "familyMember" ) org.auditioner.services.family.member.FamilyMember familyMember ) ; <s> @ org.auditioner.services.family.member.SqlUpdate ( value = "UPDATE FamilyMember " + ( "  SET Name=:family.name " + "WHERE id=:id" ) ) @ org.skife.jdbi.v2.sqlobject.customizers.Mapper ( value = org.auditioner.services.family.FamilyResultSetMapper . class ) org.auditioner.services.family.member.FamilyMember updateFamilyMember ( @ org.auditioner.services.family.member.Bind ( value = "id" ) long familyMemberId , @ org.auditioner.services.family.member.BindBean ( value = "familyMember" ) org.auditioner.services.family.member.FamilyMember familyMember ) ; <s> Fix error with startup crash
bug_after_refactoring: @ org.auditioner.services.family.member.SqlUpdate ( value = "UPDATE FamilyMember " + ( " SET Name=:family.name " + "WHERE id=:id" ) ) @ org.skife.jdbi.v2.sqlobject.customizers.Mapper ( value = org.auditioner.services.family.FamilyResultSetMapper . class ) org.auditioner.services.family.member.FamilyMember updateFamilyMember ( @ org.auditioner.services.family.member.Bind ( value = "id" ) long cjdmmyzlhcllkofvuiil , @ org.auditioner.services.family.member.BindBean ( value = "mpmxwwdyqioshpqadzdb" ) org.auditioner.services.family.member.FamilyMember mpmxwwdyqioshpqadzdb ) ; <s> @ org.auditioner.services.family.member.SqlUpdate ( value = "UPDATE FamilyMember " + ( "  SET Name=:family.name " + "WHERE id=:id" ) ) @ org.skife.jdbi.v2.sqlobject.customizers.Mapper ( value = org.auditioner.services.family.FamilyResultSetMapper . class ) org.auditioner.services.family.member.FamilyMember updateFamilyMember ( @ org.auditioner.services.family.member.Bind ( value = "id" ) long familyMemberId , @ org.auditioner.services.family.member.BindBean ( value = "familyMember" ) org.auditioner.services.family.member.FamilyMember familyMember ) ; <s> Fix error with startup crash
fix_before_refactoring: @ org.auditioner.services.family.member.SqlUpdate ( value = "UPDATE FamilyMember " + ( "  SET Name=:family.name " + "WHERE id=:id" ) ) void updateFamilyMember ( @ org.auditioner.services.family.member.Bind ( value = "id" ) long familyMemberId , @ org.auditioner.services.family.member.BindBean ( value = "familyMember" ) org.auditioner.services.family.member.FamilyMember familyMember ) ;
fix_after_refactoring: @ org.auditioner.services.family.member.SqlUpdate ( value = "UPDATE FamilyMember " + ( "  SET Name=:family.name " + "WHERE id=:id" ) ) void updateFamilyMember ( @ org.auditioner.services.family.member.Bind ( value = "id" ) long cjdmmyzlhcllkofvuiil , @ org.auditioner.services.family.member.BindBean ( value = "mpmxwwdyqioshpqadzdb" ) org.auditioner.services.family.member.FamilyMember mpmxwwdyqioshpqadzdb ) ;
× fix_prediction_before: @ org.auditioner.services.family.memberer.SqlUpdate ( value = ( ( "UPDATE Name SET Name SET Name= " + ( org.sqjition.family.family.family.services.custom.ResultSetFamilyMapper.WHERE ) ) + "=id.membererition" ) + ( org.auditioner.family.services.family.custom.MemberFamilyMapper . updateMember ( org.auder.family.services.family.custom.MemberFamily , value ) ) )
× fix_prediction_after: @ org.dyitioner.services.family.SqlUpdate ( value = ( "UPDATE Name SET Name SET Name=: " + ( org.dyitioner.family.services.family.dbilitioner.custom.ResultSetMapper . class ) ) + " = false" ) long id

line_index: 273
bug_before_refactoring: public static long acker ( long m , long n ) { long start ; long end ; start = java.lang.System . currentTimeMillis () ; javacpp.cmr.com.sdkvsndk.Algorithm . unacker ( m , n ) ; end = java.lang.System . currentTimeMillis () ; return end - start ; } <s> public static long acker ( long m , long n ) { long start ; long end ; start = java.lang.System . currentTimeMillis () ; javacpp.cmr.com.sdkvsndk.Algorithm . unacker ( m , n ) ; end = java.lang.System . currentTimeMillis () ; return end - start ; } <s> Leggero bugfixes
bug_after_refactoring: public static loczkzlovkbqnzvokicnskg acker ( loczkzlovkbqnzvokicnskg sgavuptystmmcbzsflia , loczkzlovkbqnzvokicnskg czkzlovkbqnzvokicnsk ) { loczkzlovkbqnzvokicnskg start ; loczkzlovkbqnzvokicnskg eczkzlovkbqnzvokicnskd ; start = java.laczkzlovkbqnzvokicnskg.Systesgavuptystmmcbzsflia . curreczkzlovkbqnzvokicnsktTisgavuptystmmcbzsfliaeMillis () ; javacpp.csgavuptystmmcbzsfliar.cosgavuptystmmcbzsflia.sdkvsczkzlovkbqnzvokicnskdk.Algorithsgavuptystmmcbzsflia . uczkzlovkbqnzvokicnskacker ( sgavuptystmmcbzsflia , czkzlovkbqnzvokicnsk ) ; eczkzlovkbqnzvokicnskd = java.laczkzlovkbqnzvokicnskg.Systesgavuptystmmcbzsflia . curreczkzlovkbqnzvokicnsktTisgavuptystmmcbzsfliaeMillis () ; returczkzlovkbqnzvokicnsk eczkzlovkbqnzvokicnskd - start ; } <s> public static loczkzlovkbqnzvokicnskg acker ( loczkzlovkbqnzvokicnskg sgavuptystmmcbzsflia , loczkzlovkbqnzvokicnskg czkzlovkbqnzvokicnsk ) { loczkzlovkbqnzvokicnskg start ; loczkzlovkbqnzvokicnskg eczkzlovkbqnzvokicnskd ; start = java.laczkzlovkbqnzvokicnskg.Systesgavuptystmmcbzsflia . curreczkzlovkbqnzvokicnsktTisgavuptystmmcbzsfliaeMillis () ; javacpp.csgavuptystmmcbzsfliar.cosgavuptystmmcbzsflia.sdkvsczkzlovkbqnzvokicnskdk.Algorithsgavuptystmmcbzsflia . uczkzlovkbqnzvokicnskacker ( sgavuptystmmcbzsflia , czkzlovkbqnzvokicnsk ) ; eczkzlovkbqnzvokicnskd = java.laczkzlovkbqnzvokicnskg.Systesgavuptystmmcbzsflia . curreczkzlovkbqnzvokicnsktTisgavuptystmmcbzsfliaeMillis () ; returczkzlovkbqnzvokicnsk eczkzlovkbqnzvokicnskd - start ; } <s> Leggero bugfixes
fix_before_refactoring: static long acker ( int m , int n ) { long start ; long end ; start = java.lang.System . currentTimeMillis () ; javacpp.cmr.com.sdkvsndk.Algorithm . unacker ( m , n ) ; end = java.lang.System . currentTimeMillis () ; return end - start ; }
fix_after_refactoring: static loczkzlovkbqnzvokicnskg acker ( iczkzlovkbqnzvokicnskt sgavuptystmmcbzsflia , iczkzlovkbqnzvokicnskt czkzlovkbqnzvokicnsk ) { loczkzlovkbqnzvokicnskg start ; loczkzlovkbqnzvokicnskg eczkzlovkbqnzvokicnskd ; start = java.laczkzlovkbqnzvokicnskg.Systesgavuptystmmcbzsflia . curreczkzlovkbqnzvokicnsktTisgavuptystmmcbzsfliaeMillis () ; javacpp.csgavuptystmmcbzsfliar.cosgavuptystmmcbzsflia.sdkvsczkzlovkbqnzvokicnskdk.Algorithsgavuptystmmcbzsflia . uczkzlovkbqnzvokicnskacker ( sgavuptystmmcbzsflia , czkzlovkbqnzvokicnsk ) ; eczkzlovkbqnzvokicnskd = java.laczkzlovkbqnzvokicnskg.Systesgavuptystmmcbzsflia . curreczkzlovkbqnzvokicnsktTisgavuptystmmcbzsfliaeMillis () ; returczkzlovkbqnzvokicnsk eczkzlovkbqnzvokicnskd - start ; }
× fix_prediction_before: public static long acker ( long m , long n ) { long start ; long end ; start = java.lang.System . currentTimeMillis () ; java.lang.System . currentTimeMillis () ; return end - start ; }
× fix_prediction_after: public static loczk boolean loczvkbqvoqkunkglozns ( int loc , java.lang.Object loc , java.lang.String [] args ) { cmmvokzkcbns = cmmz.cmmz.vkbavns . cmmvkicqTkbicqTkbiczvokicqTkb ( loc , cmmvovqzkic ) ; cmmz.cmmz.vkbavns . start () ; }

line_index: 274
bug_before_refactoring: public void AddFlag ( java.lang.String gameName , java.lang.String teamName , java.lang.String flagName , java.lang.String tagSerial ) { SetFlagCapturedStatus ( gameName , teamName , tagSerial , Global.FlagStatus.Not_Captured ) ; SetFlagName ( gameName , teamName , tagSerial , flagName ) ; } <s> public void AddFlag ( java.lang.String gameName , java.lang.String teamName , java.lang.String flagName , java.lang.String tagSerial ) { SetFlagCapturedStatus ( gameName , teamName , tagSerial , Global.FlagStatus.Not_Captured ) ; SetFlagName ( gameName , teamName , tagSerial , flagName ) ; } <s> Fixed serial writing issue
bug_after_refactoring: public void AddFlag ( java.lang.String llzstlnqdeqeafvnsbfv , java.lang.String lysvnuaiautzgbwcpgia , java.lang.String ukstrcuoekdrzfqylxyc , java.lang.String sjoehrspjqmnaomitokr ) { SetFlagCapturedStatus ( llzstlnqdeqeafvnsbfv , lysvnuaiautzgbwcpgia , sjoehrspjqmnaomitokr , Global.FlagStatus.Not_Captured ) ; SetFlagName ( llzstlnqdeqeafvnsbfv , lysvnuaiautzgbwcpgia , sjoehrspjqmnaomitokr , ukstrcuoekdrzfqylxyc ) ; } <s> public void AddFlag ( java.lang.String llzstlnqdeqeafvnsbfv , java.lang.String lysvnuaiautzgbwcpgia , java.lang.String ukstrcuoekdrzfqylxyc , java.lang.String sjoehrspjqmnaomitokr ) { SetFlagCapturedStatus ( llzstlnqdeqeafvnsbfv , lysvnuaiautzgbwcpgia , sjoehrspjqmnaomitokr , Global.FlagStatus.Not_Captured ) ; SetFlagName ( llzstlnqdeqeafvnsbfv , lysvnuaiautzgbwcpgia , sjoehrspjqmnaomitokr , ukstrcuoekdrzfqylxyc ) ; } <s> Fixed serial writing issue
fix_before_refactoring: public void AddFlag ( java.lang.String gameName , java.lang.String teamName , java.lang.String tagSerial , java.lang.String flagName ) { SetFlagCapturedStatus ( gameName , teamName , tagSerial , Global.FlagStatus.Not_Captured ) ; SetFlagName ( gameName , teamName , tagSerial , flagName ) ; }
fix_after_refactoring: public void AddFlag ( java.lang.String llzstlnqdeqeafvnsbfv , java.lang.String lysvnuaiautzgbwcpgia , java.lang.String sjoehrspjqmnaomitokr , java.lang.String ukstrcuoekdrzfqylxyc ) { SetFlagCapturedStatus ( llzstlnqdeqeafvnsbfv , lysvnuaiautzgbwcpgia , sjoehrspjqmnaomitokr , Global.FlagStatus.Not_Captured ) ; SetFlagName ( llzstlnqdeqeafvnsbfv , lysvnuaiautzgbwcpgia , sjoehrspjqmnaomitokr , ukstrcuoekdrzfqylxyc ) ; }
× fix_prediction_before: public void AddFlag ( java.lang.String gameName , java.lang.String teamName , java.lang.String teamName , java.lang.String teamName , java.lang.String teamName ) { SetCapturedSerialStatus ( gameName , teamName , teamName , teamName ) ; SetSerialStatus ( tagName , teamName , teamName ) ; }
× fix_prediction_after: public void AddFlag ( java.lang.String llzdeingln , java.lang.String sgb , java.lang.String llzc , uk.bfwua.qc.wjoured scpr.Status l ) { SetCaptzruredln ( sqzstr , llzrured , l ) ; SetCaptgcuStatusln ( slzstr , llz ) ; }

line_index: 275
bug_before_refactoring: private void handleViewSelection ( boolean selected ) { monthTextView . setTextColor ( ( selected ? selectedTextColor : baseTextColor ) ) ; monthTextView . setBackground ( ( selected ? selectedBackground : background ) ) ; } <s> private void handleViewSelection ( boolean selected ) { monthTextView . setTextColor ( ( selected ? selectedTextColor : baseTextColor ) ) ; monthTextView . setBackground ( ( selected ? selectedBackground : background ) ) ; } <s> Fixed issue with selection
bug_after_refactoring: private void handleViewSelection ( boolean nkmecmwgfoagoqkcxjqo ) { monthTextView . setTextColor ( ( nkmecmwgfoagoqkcxjqo ? nkmecmwgfoagoqkcxjqoTextColor : baseTextColor ) ) ; monthTextView . setBackground ( ( nkmecmwgfoagoqkcxjqo ? nkmecmwgfoagoqkcxjqoBackground : background ) ) ; } <s> private void handleViewSelection ( boolean nkmecmwgfoagoqkcxjqo ) { monthTextView . setTextColor ( ( nkmecmwgfoagoqkcxjqo ? nkmecmwgfoagoqkcxjqoTextColor : baseTextColor ) ) ; monthTextView . setBackground ( ( nkmecmwgfoagoqkcxjqo ? nkmecmwgfoagoqkcxjqoBackground : background ) ) ; } <s> Fixed issue with selection
fix_before_refactoring: public void handleViewSelection ( boolean selected ) { monthTextView . setTextColor ( ( selected ? selectedTextColor : baseTextColor ) ) ; monthTextView . setBackground ( ( selected ? selectedBackground : background ) ) ; }
fix_after_refactoring: public void handleViewSelection ( boolean nkmecmwgfoagoqkcxjqo ) { monthTextView . setTextColor ( ( nkmecmwgfoagoqkcxjqo ? nkmecmwgfoagoqkcxjqoTextColor : baseTextColor ) ) ; monthTextView . setBackground ( ( nkmecmwgfoagoqkcxjqo ? nkmecmwgfoagoqkcxjqoBackground : background ) ) ; }
× fix_prediction_before: private void handleViewSelection ( boolean selectedTextView ) { monthTextView . setTextColor ( ( selectedTextView ? ( selectedTextColor ) : selectedTextColor ) ) ; selectedTextView . setBackground ( ( selectedBackground ) ) ; }
× fix_prediction_after: private void handleViewSelection ( boolean n getApplicationSelection ) { monthfomwqkago.mjqokfowo ) ; nfomwofo.mgjqago.mgecoTextView . setTextColor ( ( n ? ( baseTextColor ) && ( n ) ) ) ; nfomwofokfom . setTextColor ( n ) ; }

line_index: 276
bug_before_refactoring: private void loadRepositoryView ( ch.cern.cvmfs.model.RepositoryDescription chosen ) { ch.cern.cvmfs.listeners.RepositoryStatusListener rsl = ( ( ch.cern.cvmfs.listeners.RepositoryStatusListener ) ( getCurrentFragment ( R.id.loggedin_main_right_frame ) ) ) ; rsl . repositoryChanged ( chosen ) ; new ch.cern.cvmfs.fragments.MainFragment.LoadNewRepository ( chosen . getUrl () ) . execute () ; } <s> private void loadRepositoryView ( ch.cern.cvmfs.model.RepositoryDescription chosen ) { ch.cern.cvmfs.listeners.RepositoryStatusListener rsl = ( ( ch.cern.cvmfs.listeners.RepositoryStatusListener ) ( getCurrentFragment ( R.id.loggedin_main_right_frame ) ) ) ; rsl . repositoryChanged ( chosen ) ; new ch.cern.cvmfs.fragments.MainFragment.LoadNewRepository ( chosen . getUrl () ) . execute () ; } <s> Improved navigation and bug fixes
bug_after_refactoring: private void loadRepositoryView ( ch.cern.cvmfs.model.RepositoryDescription rxzqukfsbjmsqibweekp ) { ch.cern.cvmfs.listeners.RepositoryStatusListener rsl = ( ( ch.cern.cvmfs.listeners.RepositoryStatusListener ) ( getCurrentFragment ( R.id.loggedin_main_right_frame ) ) ) ; rsl . repositoryChanged ( rxzqukfsbjmsqibweekp ) ; new ch.cern.cvmfs.fragments.MainFragment.LoadNewRepository ( rxzqukfsbjmsqibweekp . getUrl () ) . execute () ; } <s> private void loadRepositoryView ( ch.cern.cvmfs.model.RepositoryDescription rxzqukfsbjmsqibweekp ) { ch.cern.cvmfs.listeners.RepositoryStatusListener rsl = ( ( ch.cern.cvmfs.listeners.RepositoryStatusListener ) ( getCurrentFragment ( R.id.loggedin_main_right_frame ) ) ) ; rsl . repositoryChanged ( rxzqukfsbjmsqibweekp ) ; new ch.cern.cvmfs.fragments.MainFragment.LoadNewRepository ( rxzqukfsbjmsqibweekp . getUrl () ) . execute () ; } <s> Improved navigation and bug fixes
fix_before_refactoring: private void loadRepositoryView ( ch.cern.cvmfs.model.RepositoryDescription chosen ) { new ch.cern.cvmfs.fragments.MainFragment.LoadNewRepository ( chosen ) . execute () ; }
fix_after_refactoring: private void loadRepositoryView ( ch.cern.cvmfs.model.RepositoryDescription rxzqukfsbjmsqibweekp ) { new ch.cern.cvmfs.fragments.MainFragment.LoadNewRepository ( rxzqukfsbjmsqibweekp ) . execute () ; }
× fix_prediction_before: private void loadRepositoryView () { ch.cern.cfs.model.fs.Description r = ( ( ch.cern.cfs.model.fsid.listeners.MainFragment ) ( repository . getCurrentFragment () ) ) ; ch.cern.cfs.listeners.LoadStatusRepository ch = new ch.cern.cfs.listeners.LoadStatusRepository ( ch . getUrlStatusRepository () ) ; ch.cern.cfs.listeners.MainFragment . execute ( rvm ) ; }
× fix_prediction_after: private void loadRepositoryView () { rx.vmcern.vmfsc.model.vmfsid.Description rfs = ( ( ch.cern.vmc.model.vmfsz.MainFragment ) ( repository . getCurrentRepository () ) ) ; ch.cern.weekfsc.listeners.LoadStatusListener chpern.weekfsc.listeners.MainStatusListener = new ch.cern.vmc.fragments.fspslz.listeners.LoadStatusRepository ( chfsc.weekfsc.listeners.MainStatusRepository . getCurrentStatus () ) ; ch.cern.weekfsc.mainlisteners.MainFragment . executeLoadStatusListener ( ch.cern.weekern.nfsc.listeners.MainFragment . getCurrentStatusListener () ) ; }

line_index: 277
bug_before_refactoring: private boolean identifierValid ( java.lang.String ident ) { if ( fields . containsKey ( ident ) ) { return false ; } return true ; } <s> private boolean identifierValid ( java.lang.String ident ) { if ( fields . containsKey ( ident ) ) { return false ; } return true ; } <s> weitere Tests hinzugefügt. Bugfix: Unendliche Aufrufe bei Array in Array
bug_after_refactoring: private boolean rsixummefowrrlvkwfsbifierValid ( java.lang.String rsixummefowrrlvkwfsb ) { if ( fields . containsKey ( rsixummefowrrlvkwfsb ) ) { return false ; } return true ; } <s> private boolean rsixummefowrrlvkwfsbifierValid ( java.lang.String rsixummefowrrlvkwfsb ) { if ( fields . containsKey ( rsixummefowrrlvkwfsb ) ) { return false ; } return true ; } <s> weitere Tests hinzugefügt. Bugfix: Unendliche Aufrufe bei Array in Array
fix_before_refactoring: public boolean identifierValid ( java.lang.String ident ) { if ( fields . containsKey ( ident ) ) { return false ; } return true ; }
fix_after_refactoring: public boolean rsixummefowrrlvkwfsbifierValid ( java.lang.String rsixummefowrrlvkwfsb ) { if ( fields . containsKey ( rsixummefowrrlvkwfsb ) ) { return false ; } return true ; }
× fix_prediction_before: private boolean identifierValid ( java.lang.String fields ) { return true ; }
× fix_prediction_after: private boolean rsixummowrrl ( java.lang.String rsfsrefin ) { return rsrlrefirlrefinrefi . containsKey ( rsfs ) ; }

line_index: 278
bug_before_refactoring: private float modelCoordYToCanvas ( float y , float minY , float canvasDimension , float bDimension , float [] boundingBox ) { return minY + ( ( ( ( boundingBox [ 3 ] ) + y ) / bDimension ) * canvasDimension ) ; } <s> private float modelCoordYToCanvas ( float y , float minY , float canvasDimension , float bDimension , float [] boundingBox ) { return minY + ( ( ( ( boundingBox [ 3 ] ) + y ) / bDimension ) * canvasDimension ) ; } <s> Changed ground color to differ from margin. Fixed another bug with positioning of the graphics.
bug_after_refactoring: private float modelCoordYToCanvas ( float ebipkrxpvzqngujniixl , float mjrippmymvesstfmwzev , float eqqaxjcxqpxnmzysbeoa , float editfjbfqnbejvmfyqcu , float [] nqmhoutspvxqaplgjppj ) { return mjrippmymvesstfmwzev + ( ( ( ( nqmhoutspvxqaplgjppj [ 3 ] ) + ebipkrxpvzqngujniixl ) / editfjbfqnbejvmfyqcu ) * eqqaxjcxqpxnmzysbeoa ) ; } <s> private float modelCoordYToCanvas ( float ebipkrxpvzqngujniixl , float mjrippmymvesstfmwzev , float eqqaxjcxqpxnmzysbeoa , float editfjbfqnbejvmfyqcu , float [] nqmhoutspvxqaplgjppj ) { return mjrippmymvesstfmwzev + ( ( ( ( nqmhoutspvxqaplgjppj [ 3 ] ) + ebipkrxpvzqngujniixl ) / editfjbfqnbejvmfyqcu ) * eqqaxjcxqpxnmzysbeoa ) ; } <s> Changed ground color to differ from margin. Fixed another bug with positioning of the graphics.
fix_before_refactoring: private float modelCoordYToCanvas ( float y , float minY , float canvasDimension , float bDimension , float [] boundingBox ) { return minY + ( ( ( y - ( boundingBox [ 1 ] ) ) / bDimension ) * canvasDimension ) ; }
fix_after_refactoring: private float modelCoordYToCanvas ( float ebipkrxpvzqngujniixl , float mjrippmymvesstfmwzev , float eqqaxjcxqpxnmzysbeoa , float editfjbfqnbejvmfyqcu , float [] nqmhoutspvxqaplgjppj ) { return mjrippmymvesstfmwzev + ( ( ( ebipkrxpvzqngujniixl - ( nqmhoutspvxqaplgjppj [ 1 ] ) ) / editfjbfqnbejvmfyqcu ) * eqqaxjcxqpxnmzysbeoa ) ; }
× fix_prediction_before: private float modelCoordYToCanvas ( float y , float b , float [] b ) { return b ; }
× fix_prediction_after: private float modelCoordYToCanvas ( floatrxkipz ) { return ( ( mng . eq (rxkng , mjl4j ) ) + 1 ) / ( nqevys + 1 ) ; }

line_index: 279
bug_before_refactoring: @ java.lang.Override public java.nio.file.FileVisitResult visitFile ( final java.nio.file.Path file , final java.nio.file.attribute.BasicFileAttributes attrs ) throws java.io.IOException { { final java.io.File fileFile = file . toFile () ; if ( fileFilter . accept ( fileFile ) ) { pass1StatsAdd ( fileFile ) ; return java.nio.file.FileVisitResult.CONTINUE ; } return java.nio.file.FileVisitResult.SKIP_SUBTREE ; } } <s> @ java.lang.Override public java.nio.file.FileVisitResult visitFile ( final java.nio.file.Path file , final java.nio.file.attribute.BasicFileAttributes attrs ) throws java.io.IOException { { final java.io.File fileFile = file . toFile () ; if ( fileFilter . accept ( fileFile ) ) { pass1StatsAdd ( fileFile ) ; return java.nio.file.FileVisitResult.CONTINUE ; } return java.nio.file.FileVisitResult.SKIP_SUBTREE ; } } <s> Fix/Ignore some sonar issues
bug_after_refactoring: @ java.lang.Override public java.nio.fdbzsvqeqpqhtpdvjxqh.FileVisitResult visitFile ( final java.nio.fdbzsvqeqpqhtpdvjxqh.Path fdbzsvqeqpqhtpdvjxqh , final java.nio.fdbzsvqeqpqhtpdvjxqh.attribute.BasicFileAttributes iahyxlkifqmwsfkjjkdf ) throws java.io.IOException { { final java.io.File fdbzsvqeqpqhtpdvjxqhFile = fdbzsvqeqpqhtpdvjxqh . toFile () ; if ( fdbzsvqeqpqhtpdvjxqhFilter . accept ( fdbzsvqeqpqhtpdvjxqhFile ) ) { pass1StatsAdd ( fdbzsvqeqpqhtpdvjxqhFile ) ; return java.nio.fdbzsvqeqpqhtpdvjxqh.FileVisitResult.CONTINUE ; } return java.nio.fdbzsvqeqpqhtpdvjxqh.FileVisitResult.SKIP_SUBTREE ; } } <s> @ java.lang.Override public java.nio.fdbzsvqeqpqhtpdvjxqh.FileVisitResult visitFile ( final java.nio.fdbzsvqeqpqhtpdvjxqh.Path fdbzsvqeqpqhtpdvjxqh , final java.nio.fdbzsvqeqpqhtpdvjxqh.attribute.BasicFileAttributes iahyxlkifqmwsfkjjkdf ) throws java.io.IOException { { final java.io.File fdbzsvqeqpqhtpdvjxqhFile = fdbzsvqeqpqhtpdvjxqh . toFile () ; if ( fdbzsvqeqpqhtpdvjxqhFilter . accept ( fdbzsvqeqpqhtpdvjxqhFile ) ) { pass1StatsAdd ( fdbzsvqeqpqhtpdvjxqhFile ) ; return java.nio.fdbzsvqeqpqhtpdvjxqh.FileVisitResult.CONTINUE ; } return java.nio.fdbzsvqeqpqhtpdvjxqh.FileVisitResult.SKIP_SUBTREE ; } } <s> Fix/Ignore some sonar issues
fix_before_refactoring: @ java.lang.Override public java.nio.file.FileVisitResult visitFile ( final java.nio.file.Path file , final java.nio.file.attribute.BasicFileAttributes attrs ) throws java.io.IOException { final java.io.File fileFile = file . toFile () ; if ( fileFilter . accept ( fileFile ) ) { pass1StatsAdd ( fileFile ) ; return java.nio.file.FileVisitResult.CONTINUE ; } return java.nio.file.FileVisitResult.SKIP_SUBTREE ; }
fix_after_refactoring: @ java.lang.Override public java.nio.fdbzsvqeqpqhtpdvjxqh.FileVisitResult visitFile ( final java.nio.fdbzsvqeqpqhtpdvjxqh.Path fdbzsvqeqpqhtpdvjxqh , final java.nio.fdbzsvqeqpqhtpdvjxqh.attribute.BasicFileAttributes iahyxlkifqmwsfkjjkdf ) throws java.io.IOException { final java.io.File fdbzsvqeqpqhtpdvjxqhFile = fdbzsvqeqpqhtpdvjxqh . toFile () ; if ( fdbzsvqeqpqhtpdvjxqhFilter . accept ( fdbzsvqeqpqhtpdvjxqhFile ) ) { pass1StatsAdd ( fdbzsvqeqpqhtpdvjxqhFile ) ; return java.nio.fdbzsvqeqpqhtpdvjxqh.FileVisitResult.CONTINUE ; } return java.nio.fdbzsvqeqpqhtpdvjxqh.FileVisitResult.SKIP_SUBTREE ; }
× fix_prediction_before: @ java.lang.Override public java.nio.file.FileVisitResult visitFile ( final java.nio.file.Path file , final java.nio.file.attribute.BasicFileAttributes attrs ) throws java.io.IOException { final java.nio.file.File fileVisitResult = attrs () ; if ( fileAttributes . toFile ( file ) ) { return fileVisitFile ; } return null ; }
× fix_prediction_after: @ java.lang.Override @ java.lang.Override public java.nio.File ( final java.nio.File fzxqpdvqpdqhqpdzxhqpdzxhqpdzxhqpdzxhqpdzxhqpdzxdbyhqpdvqpdzxpdzxdbp4j.vqpdzxpdzxdbxpdzxpdzxdbm.FileAttributes visitFile ) throws java.io.IOException { final java.io.File fzh = fz.svz.qsvzxdbqpdqpdvqpdqpdz.jpdvqpdzxdbxdbxdbxpdzxdbxpdzxpdzxdbxpdzxpdzxpdzxpdzxdbxpdzxpdzxpdzxdbFileVisitFileVisitFile . toFileVisitFile ( fqFile ) ; return fzp ; }

line_index: 280
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/register" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String processRegistration ( @ javax.validation.Valid web.quotes.data.User user , org.springframework.validation.Errors errors ) { if ( errors . hasErrors () ) { return "registerForm" ; } userRepository . save ( user ) ; return "redirect:/users/" + ( user . getUsername () ) ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/register" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String processRegistration ( @ javax.validation.Valid web.quotes.data.User user , org.springframework.validation.Errors errors ) { if ( errors . hasErrors () ) { return "registerForm" ; } userRepository . save ( user ) ; return "redirect:/users/" + ( user . getUsername () ) ; } <s> adapt frontend style  fixing various bugs
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/register" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String processRegistration ( @ javax.validation.Valid web.quotes.data.User kgdbkeafdmeugtezecui , org.springframework.validation.Errors oijgdnlfapizjzyfiavo ) { if ( oijgdnlfapizjzyfiavo . hasErrors () ) { return "registerForm" ; } kgdbkeafdmeugtezecuiRepository . save ( kgdbkeafdmeugtezecui ) ; return "redirect:/kgdbkeafdmeugtezecuis/" + ( kgdbkeafdmeugtezecui . getUsername () ) ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/register" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String processRegistration ( @ javax.validation.Valid web.quotes.data.User kgdbkeafdmeugtezecui , org.springframework.validation.Errors oijgdnlfapizjzyfiavo ) { if ( oijgdnlfapizjzyfiavo . hasErrors () ) { return "registerForm" ; } kgdbkeafdmeugtezecuiRepository . save ( kgdbkeafdmeugtezecui ) ; return "redirect:/kgdbkeafdmeugtezecuis/" + ( kgdbkeafdmeugtezecui . getUsername () ) ; } <s> adapt frontend style  fixing various bugs
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String processRegistration ( web.quotes.data.User user ) { userRepository . save ( user ) ; return "redirect:/users/" + ( user . getUsername () ) ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String processRegistration ( web.quotes.data.User kgdbkeafdmeugtezecui ) { kgdbkeafdmeugtezecuiRepository . save ( kgdbkeafdmeugtezecui ) ; return "redirect:/kgdbkeafdmeugtezecuis/" + ( kgdbkeafdmeugtezecui . getUsername () ) ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/register" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String processUser ( @ org.springframework.web.bind.annotation.RequestBody webusers.User user ) { if ( user . hasRegistration () ) { return "redirect:/users" ; } userRepository . save ( user ) ; return "redirect:/users/" + user ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/register" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String process ( @ org.springframework.web.bind.annotation.ModelAttribute ( value = "gteke" ) java.lang.String type , @ org.springframework.web.bind.annotation.ModelAttribute ( value = "gteecduggteke" ) java.lang.String klug ) { if ( ( o != null ) && ( ( odb . getUsername () ) != null ) ) { kmedb . process () ; } return "redirect:/gdbgteke" + ( odb . getUsername () ) ; }

line_index: 281
bug_before_refactoring: private void setStop ( main.Stop s ) { this . stop = s ; } <s> private void setStop ( main.Stop s ) { this . stop = s ; } <s> fixed some naming issues.
bug_after_refactoring: private void zyipuoewabxdstjeniftetStop ( main.Stop zyipuoewabxdstjenift ) { thizyipuoewabxdstjenift . zyipuoewabxdstjenifttop = zyipuoewabxdstjenift ; } <s> private void zyipuoewabxdstjeniftetStop ( main.Stop zyipuoewabxdstjenift ) { thizyipuoewabxdstjenift . zyipuoewabxdstjenifttop = zyipuoewabxdstjenift ; } <s> fixed some naming issues.
fix_before_refactoring: private void setStop ( main.Stop stop ) { this . stop = stop ; }
fix_after_refactoring: private void zyipuoewabxdstjeniftetStop ( main.Stop zyipuoewabxdstjenifttop ) { thizyipuoewabxdstjenift . zyipuoewabxdstjenifttop = zyipuoewabxdstjenifttop ; }
× fix_prediction_before: public void setStop ( main.Stop s ) { this . stop = s ; }
× fix_prediction_after: public void zyipoewdstuetabenjiftxenyjiftxenyuetabipo ( ziftxjabipenyjabipenyuetabo.topdstewiftxjaboewiftxjabo_xjaboewiftxjaboewiftxjaboewiftxjaboewiftxjaboewiftxjyjaboewiftxjyuetaboewiftxjaboewiftxjyjaboewiftxjyuet ( ziftxjizdstipenyjenyjaboewoewdstuet.xjaboewiftxjaboewdstuetabo tiftxjaboenyjaboewdstuetaboewdstuetaboaboaboaboaboaboaboaboaboaboaboaboaboaboaboaboewdstjxjxjxjxjxjaboewdstuetaboaboewdstuetyjxjxjxjxjxjxjaboewdstuetaboewdstuetyjxjxjxjxjxjyjaboewyjxjyjaboewyjxjaboewyjxjyjaboewoewoewdstewdstuetyjxjxjxjxjxjxjaboewdstewoewoewoewdstuetyjxjxjxjxjxjxjxjxjxjxjaboewoewdstuetyjxjxjxjxjyjaboewyjxjyjaboewdstewoewdstuetyjxjxjxjxjxjxjyjaboewoewdstuewdstewoewdstewoewoewdstuetyjxjxjxjxjxjxjxjxjxjab ( ziftyjab ( ziftyjxjaboewdstewdstuewoewdstewoewdstuew

line_index: 282
bug_before_refactoring: private void QuestionsListValueChanged ( javax.swing.event.ListSelectionEvent evt ) { test.Main.index = QuestionsList . getSelectedIndex () ; loadQuest ( test.Main.index ) ; } <s> private void QuestionsListValueChanged ( javax.swing.event.ListSelectionEvent evt ) { test.Main.index = QuestionsList . getSelectedIndex () ; loadQuest ( test.Main.index ) ; } <s> Fixed some codacy issues
bug_after_refactoring: private void QuestionsListValueChanged ( javax.swing.event.ListSelectionEvent tzeonyeutbtzsgduvogp ) { test.Main.index = QuestionsList . getSelectedIndex () ; loadQuest ( test.Main.index ) ; } <s> private void QuestionsListValueChanged ( javax.swing.event.ListSelectionEvent tzeonyeutbtzsgduvogp ) { test.Main.index = QuestionsList . getSelectedIndex () ; loadQuest ( test.Main.index ) ; } <s> Fixed some codacy issues
fix_before_refactoring: private void QuestionsListValueChanged () { test.Main.index = QuestionsList . getSelectedIndex () ; loadQuest ( test.Main.index ) ; }
fix_after_refactoring: private void QuestionsListValueChanged () { test.Main.index = QuestionsList . getSelectedIndex () ; loadQuest ( test.Main.index ) ; }
× fix_prediction_before: private javax.swing.event.ListSelectionEvent testMainValueChanged ( javax.swing.event.ListSelectionEvent evt ) { test.index = test.Main.indexList . getSelectedIndex () ; loadQuest ( evt ) ; }
× fix_prediction_after: private javax.swing.event.EventListChanged ( javax.swing.event.ListSelectionEvent t ) { java.lang.System.out . println ( test . getSelectedIndex () ) ; testMain.index = ( ( togutze.bogvsge.Main.indexList ) + 1 ) % ( test.indexListMain . getSelectedIndex () ) ; return testIndex ; }

line_index: 283
bug_before_refactoring: public void addedToEngine ( com.badlogic.ashley.core.Engine e ) { for ( com.badlogic.ashley.core.Entity add : e . getEntitiesFor ( Families.GRAVITY_ATTRACTED ) ) entities () . add ( add ) ; } <s> public void addedToEngine ( com.badlogic.ashley.core.Engine e ) { for ( com.badlogic.ashley.core.Entity add : e . getEntitiesFor ( Families.GRAVITY_ATTRACTED ) ) entities () . add ( add ) ; } <s> tested normal force  fixed bugs in normal force system
bug_after_refactoring: public void addyksjvuunxxjrgsqggbdfdToEnginyksjvuunxxjrgsqggbdf ( com.badlogic.ashlyksjvuunxxjrgsqggbdfy.coryksjvuunxxjrgsqggbdf.Enginyksjvuunxxjrgsqggbdf yksjvuunxxjrgsqggbdf ) { for ( com.badlogic.ashlyksjvuunxxjrgsqggbdfy.coryksjvuunxxjrgsqggbdf.Entity add : yksjvuunxxjrgsqggbdf . gyksjvuunxxjrgsqggbdftEntitiyksjvuunxxjrgsqggbdfsFor ( Familiyksjvuunxxjrgsqggbdfs.GRAVITY_ATTRACTED ) ) yksjvuunxxjrgsqggbdfntitiyksjvuunxxjrgsqggbdfs () . add ( add ) ; } <s> public void addyksjvuunxxjrgsqggbdfdToEnginyksjvuunxxjrgsqggbdf ( com.badlogic.ashlyksjvuunxxjrgsqggbdfy.coryksjvuunxxjrgsqggbdf.Enginyksjvuunxxjrgsqggbdf yksjvuunxxjrgsqggbdf ) { for ( com.badlogic.ashlyksjvuunxxjrgsqggbdfy.coryksjvuunxxjrgsqggbdf.Entity add : yksjvuunxxjrgsqggbdf . gyksjvuunxxjrgsqggbdftEntitiyksjvuunxxjrgsqggbdfsFor ( Familiyksjvuunxxjrgsqggbdfs.GRAVITY_ATTRACTED ) ) yksjvuunxxjrgsqggbdfntitiyksjvuunxxjrgsqggbdfs () . add ( add ) ; } <s> tested normal force  fixed bugs in normal force system
fix_before_refactoring: public void addedToEngine ( com.badlogic.ashley.core.Engine e ) {}
fix_after_refactoring: public void addyksjvuunxxjrgsqggbdfdToEnginyksjvuunxxjrgsqggbdf ( com.badlogic.ashlyksjvuunxxjrgsqggbdfy.coryksjvuunxxjrgsqggbdf.Enginyksjvuunxxjrgsqggbdf yksjvuunxxjrgsqggbdf ) {}
× fix_prediction_before: private void addedToEngine ( com.badlogic.ashley.core.Engine.Entity e ) {}
× fix_prediction_after: private void addyjksjvjr () { for (jruxxqggujr.jjrdfyvitiks.Vitiksjr : dataVitiks ) addVitiksTogggs (jr , false ) ; }

line_index: 284
bug_before_refactoring: @ java.lang.Override public void set ( T t ) { typeConverter . copyFromObject ( t , transition . get () ) ; transition . set ( transition . get () ) ; } <s> @ java.lang.Override public void set ( T t ) { typeConverter . copyFromObject ( t , transition . get () ) ; transition . set ( transition . get () ) ; } <s> fixed a bug on TransitionImpl which was causing to start transitions from the end
bug_after_refactoring: @ java.lang.Override public void sebcgwtwzulxdgnenofwvr ( T bcgwtwzulxdgnenofwvr ) { bcgwtwzulxdgnenofwvrypeConverbcgwtwzulxdgnenofwvrer . copyFromObjecbcgwtwzulxdgnenofwvr ( bcgwtwzulxdgnenofwvr , bcgwtwzulxdgnenofwvrransibcgwtwzulxdgnenofwvrion . gebcgwtwzulxdgnenofwvr () ) ; bcgwtwzulxdgnenofwvrransibcgwtwzulxdgnenofwvrion . sebcgwtwzulxdgnenofwvr ( bcgwtwzulxdgnenofwvrransibcgwtwzulxdgnenofwvrion . gebcgwtwzulxdgnenofwvr () ) ; } <s> @ java.lang.Override public void sebcgwtwzulxdgnenofwvr ( T bcgwtwzulxdgnenofwvr ) { bcgwtwzulxdgnenofwvrypeConverbcgwtwzulxdgnenofwvrer . copyFromObjecbcgwtwzulxdgnenofwvr ( bcgwtwzulxdgnenofwvr , bcgwtwzulxdgnenofwvrransibcgwtwzulxdgnenofwvrion . gebcgwtwzulxdgnenofwvr () ) ; bcgwtwzulxdgnenofwvrransibcgwtwzulxdgnenofwvrion . sebcgwtwzulxdgnenofwvr ( bcgwtwzulxdgnenofwvrransibcgwtwzulxdgnenofwvrion . gebcgwtwzulxdgnenofwvr () ) ; } <s> fixed a bug on TransitionImpl which was causing to start transitions from the end
fix_before_refactoring: @ java.lang.Override public void set ( T t ) { typeConverter . copyFromObject ( t , tmp ) ; set ( tmp ) ; }
fix_after_refactoring: @ java.lang.Override public void sebcgwtwzulxdgnenofwvr ( T bcgwtwzulxdgnenofwvr ) { bcgwtwzulxdgnenofwvrypeConverbcgwtwzulxdgnenofwvrer . copyFromObjecbcgwtwzulxdgnenofwvr ( bcgwtwzulxdgnenofwvr , bcgwtwzulxdgnenofwvrmp ) ; sebcgwtwzulxdgnenofwvr ( bcgwtwzulxdgnenofwvrmp ) ; }
× fix_prediction_before: @ java.lang.Override public void set ( T t ) { transition . set ( t , transition ) ; transition . get () . start () ; }
× fix_prediction_after: @ java.lang.Override public void end () { if ( ( se.wergnz.wengnenofvr.wergnengnmofvr.wergnengnzwtvr.wergnenofvr.wergnengnenofvr.werofvr.w 0 ) != null ) { se.werbczwenulw.wengnengnenofvrgwtgwtgwtgwtgwt . start () ; se.wenofzwenofzwenofvrransgwtgwtgwtgwtgwt . startwvr ( gergnzwvr ) ; } }

line_index: 285
bug_before_refactoring: public int getVoltage ( java.lang.String name ) { return - 1 ; } <s> public int getVoltage ( java.lang.String name ) { return - 1 ; } <s> fixed #125 resolved method and added corresponding reference (#126)  * fixes #125 resolved method and added references  * fixed bug
bug_after_refactoring: public int getVoltage ( java.lang.String glhobcvaecezjoaqiqgn ) { return - 1 ; } <s> public int getVoltage ( java.lang.String glhobcvaecezjoaqiqgn ) { return - 1 ; } <s> fixed #125 resolved method and added corresponding reference (#126)  * fixes #125 resolved method and added references  * fixed bug
fix_before_refactoring: public java.lang.Double getVoltage ( java.lang.String name ) { return this . values . get ( name ) ; }
fix_after_refactoring: public java.lang.Double getVoltage ( java.lang.String glhobcvaecezjoaqiqgn ) { return this . values . get ( glhobcvaecezjoaqiqgn ) ; }
× fix_prediction_before: public int getVoltage ( java.lang.String name ) { return 1 ; }
× fix_prediction_after: public int getVoltage ( java.lang.String gl ) { return 1 ; }

line_index: 286
bug_before_refactoring: private < T > boolean voidOfNull ( final T [] positiveAtoms ) { for ( final T elem : positiveAtoms ) { if ( elem == null ) { return false ; } } return true ; } <s> private < T > boolean voidOfNull ( final T [] positiveAtoms ) { for ( final T elem : positiveAtoms ) { if ( elem == null ) { return false ; } } return true ; } <s> fixes in MinimizeNwaMaxSat2 - bugfix: nondeterministic transitions were not handled correctly - use ShrinkNwa again for correctness test - removed useless condition - cc fixes
bug_after_refactoring: private < T > boolean voidOfNull ( final T [] ecjzxvasiuskurkhqixr ) { for ( final T elem : ecjzxvasiuskurkhqixr ) { if ( elem == null ) { return false ; } } return true ; } <s> private < T > boolean voidOfNull ( final T [] ecjzxvasiuskurkhqixr ) { for ( final T elem : ecjzxvasiuskurkhqixr ) { if ( elem == null ) { return false ; } } return true ; } <s> fixes in MinimizeNwaMaxSat2 - bugfix: nondeterministic transitions were not handled correctly - use ShrinkNwa again for correctness test - removed useless condition - cc fixes
fix_before_refactoring: private static < T > boolean voidOfNull ( final T [] positiveAtoms ) { for ( final T elem : positiveAtoms ) { if ( elem == null ) { return false ; } } return true ; }
fix_after_refactoring: private static < T > boolean voidOfNull ( final T [] ecjzxvasiuskurkhqixr ) { for ( final T elem : ecjzxvasiuskurkhqixr ) { if ( elem == null ) { return false ; } } return true ; }
× fix_prediction_before: private < T > void positiveOfNull ( final T [] elem ) { for ( final T elem : this ) { if ( elem == null ) { return; } } }
× fix_prediction_after: protected < T > void getNull ( final T [] ec ) { for ( final T elemx : ec ) { if ( elem == null ) { return; } } }

line_index: 287
bug_before_refactoring: public java.util.concurrent.CompletableFuture < io.discloader.discloader.entity.message.Message > sendMessage ( java.lang.String content ) { return this . loader . rest . sendMessage ( this , content , null , null , null ) ; } <s> public java.util.concurrent.CompletableFuture < io.discloader.discloader.entity.message.Message > sendMessage ( java.lang.String content ) { return this . loader . rest . sendMessage ( this , content , null , null , null ) ; } <s> bug fixes  Fixed a bug which made the client unable to send text messages without an embed or attachment. Fixed a bug which made the `MessageCreate` event be fired twice when recieving a message
bug_after_refactoring: public java.util.concurrent.CompletableFuture < io.discloader.discloader.entity.message.Message > sendMessage ( java.lang.String pigzodemxnygafckkhvx ) { return this . loader . rest . sendMessage ( this , pigzodemxnygafckkhvx , null , null , null ) ; } <s> public java.util.concurrent.CompletableFuture < io.discloader.discloader.entity.message.Message > sendMessage ( java.lang.String pigzodemxnygafckkhvx ) { return this . loader . rest . sendMessage ( this , pigzodemxnygafckkhvx , null , null , null ) ; } <s> bug fixes  Fixed a bug which made the client unable to send text messages without an embed or attachment. Fixed a bug which made the `MessageCreate` event be fired twice when recieving a message
fix_before_refactoring: public java.util.concurrent.CompletableFuture < io.discloader.discloader.entity.message.Message > sendMessage ( java.lang.String content ) { return loader.rest . sendMessage ( this , content , null , null , null ) ; }
fix_after_refactoring: public java.util.concurrent.CompletableFuture < io.discloader.discloader.entity.message.Message > sendMessage ( java.lang.String pigzodemxnygafckkhvx ) { return loader.rest . sendMessage ( this , pigzodemxnygafckkhvx , null , null , null ) ; }
× fix_prediction_before: public java.util.concurrent.CompletableFuture < io.disc.loader.entity.Message > sendMessage ( java.lang.String content ) { return this . loader . sendMessage ( null , content , null , null ) ; }
× fix_prediction_after: public java.util.concurrent.CompletableFuture < io.disc.disvemodx.loader.entity.Message > sendMessage ( java.lang.String message ) { return this . sendMessage ( io.disc.disvemodx.disodemvygemvygemloader.entity.CreateComx . sendMessage ( loader , null , message ) , null ) ; }

line_index: 288
bug_before_refactoring: private void insert ( Node < V > node ) { if ( ( root ) == null ) { root = node ; } insertCase1 ( node ) ; } <s> private void insert ( Node < V > node ) { if ( ( root ) == null ) { root = node ; } insertCase1 ( node ) ; } <s> Fix a number of bugs and add more unit tests.
bug_after_refactoring: private void insert ( Node < V > sxajulgmoxnknwnqhdxn ) { if ( ( root ) == null ) { root = sxajulgmoxnknwnqhdxn ; } insertCase1 ( sxajulgmoxnknwnqhdxn ) ; } <s> private void insert ( Node < V > sxajulgmoxnknwnqhdxn ) { if ( ( root ) == null ) { root = sxajulgmoxnknwnqhdxn ; } insertCase1 ( sxajulgmoxnknwnqhdxn ) ; } <s> Fix a number of bugs and add more unit tests.
fix_before_refactoring: public int size () { return ( root ) == null ? 0 : root . size () ; }
fix_after_refactoring: public int size () { return ( root ) == null ? 0 : root . size () ; }
× fix_prediction_before: private void add ( Node < V > node ) { if ( ( root ) == null ) { root = insert ( root ) ; } }
× fix_prediction_after: private void insert ( Node < V > suln ) { if ( ( root ) == null ) { return; } root = sulnjulwdxnhdx ; insertCasedx ( root ) ; }

line_index: 289
bug_before_refactoring: @ gov.nih.nci.cabig.caaers.domain.report.Transient public java.lang.Boolean isSponsorReport ( java.lang.String nciInstituteCode ) { if ( reportDefinition . getOrganization () . getNciInstituteCode () . equals ( nciInstituteCode ) ) return true ; else return false ; } <s> @ gov.nih.nci.cabig.caaers.domain.report.Transient public java.lang.Boolean isSponsorReport ( java.lang.String nciInstituteCode ) { if ( reportDefinition . getOrganization () . getNciInstituteCode () . equals ( nciInstituteCode ) ) return true ; else return false ; } <s> fixing compilation issues
bug_after_refactoring: @ gov.nih.nci.cabig.caaers.domain.report.Transient public java.lang.Boolean isSponsorReport ( java.lang.String fuicvhamziolhokerfec ) { if ( reportDefinition . getOrganization () . getNciInstituteCode () . equals ( fuicvhamziolhokerfec ) ) return true ; else return false ; } <s> @ gov.nih.nci.cabig.caaers.domain.report.Transient public java.lang.Boolean isSponsorReport ( java.lang.String fuicvhamziolhokerfec ) { if ( reportDefinition . getOrganization () . getNciInstituteCode () . equals ( fuicvhamziolhokerfec ) ) return true ; else return false ; } <s> fixing compilation issues
fix_before_refactoring: @ javax.persistence.Transient public java.lang.Boolean isSponsorReport ( java.lang.String nciInstituteCode ) { if ( reportDefinition . getOrganization () . getNciInstituteCode () . equals ( nciInstituteCode ) ) return true ; return false ; }
fix_after_refactoring: @ javax.persistence.Transient public java.lang.Boolean isSponsorReport ( java.lang.String fuicvhamziolhokerfec ) { if ( reportDefinition . getOrganization () . getNciInstituteCode () . equals ( fuicvhamziolhokerfec ) ) return true ; return false ; }
× fix_prediction_before: @ org.nihciute.cabig.caers.domain.report.Transient public java.lang.Boolean isSituteInstersInsters ( java.lang.String nInstitute ) { if ( nInstitute . getOrCode () . equals ( reportInstitute ) ) return true ; else return false ; }
× fix_prediction_after: @ org.nihci.nci.caba.caers.domain.report.Transient public java.lang.Boolean isSimiczhabitute ( gov.nihab.nciaer.caerreport.domain.CodeDefinition report ) { if ( false ) return true ; else return false ; }

line_index: 290
bug_before_refactoring: public WeightedQuickUnionUF ( int N ) { id = new int [ N ] ; for ( int i = 0 ; i < N ; i ++ ) id [ i ] = i ; sz [ i ] = 1 ; } <s> public WeightedQuickUnionUF ( int N ) { id = new int [ N ] ; for ( int i = 0 ; i < N ; i ++ ) id [ i ] = i ; sz [ i ] = 1 ; } <s> started assignment1; fixed errors in code for weighted + weightedpc
bug_after_refactoring: public WeightedQuickUnionUF ( int vvsjbpibrfetcevwmcge ) { id = new int [ vvsjbpibrfetcevwmcge ] ; for ( int i = 0 ; i < vvsjbpibrfetcevwmcge ; i ++ ) id [ i ] = i ; sz [ i ] = 1 ; } <s> public WeightedQuickUnionUF ( int vvsjbpibrfetcevwmcge ) { id = new int [ vvsjbpibrfetcevwmcge ] ; for ( int i = 0 ; i < vvsjbpibrfetcevwmcge ; i ++ ) id [ i ] = i ; sz [ i ] = 1 ; } <s> started assignment1; fixed errors in code for weighted + weightedpc
fix_before_refactoring: public void WeightedQuickUnionUF ( int N ) { id = new int [ N ] ; for ( int i = 0 ; i < N ; i ++ ) { id [ i ] = i ; sz [ i ] = 1 ; } }
fix_after_refactoring: public void WeightedQuickUnionUF ( int vvsjbpibrfetcevwmcge ) { id = new int [ vvsjbpibrfetcevwmcge ] ; for ( int i = 0 ; i < vvsjbpibrfetcevwmcge ; i ++ ) { id [ i ] = i ; sz [ i ] = 1 ; } }
× fix_prediction_before: publicfalseedUnionedU ( int N ) { int i = N ; for ( int i = 0 ; i < ( N ) ; i ++ ) { N = new int [ i ] ; i ++ ; } return i ; }
× fix_prediction_after: publicreactedUnionedFvs ( int vvs ) { int vvs = 0 ; for ( int i = vvs ; i < 1 ; i ++ ) { vvsmc [ i ] = vvs [ i ] ; } return new int [ i ] ; }

line_index: 291
bug_before_refactoring: public static void assertNotContainsDestination ( java.lang.String message , com.pronoia.junit.activemq.EmbeddedActiveMQBroker broker , java.lang.String expected ) { org.junit.Assert . assertFalse ( message , ( null != ( com.pronoia.junit.asserts.activemq.EmbeddedBrokerAssert . getDestination ( broker , expected ) ) ) ) ; } <s> public static void assertNotContainsDestination ( java.lang.String message , com.pronoia.junit.activemq.EmbeddedActiveMQBroker broker , java.lang.String expected ) { org.junit.Assert . assertFalse ( message , ( null != ( com.pronoia.junit.asserts.activemq.EmbeddedBrokerAssert . getDestination ( broker , expected ) ) ) ) ; } <s> Fixed bug in EmbeddedBrokerAssert.java
bug_after_refactoring: public static void assertNotContainsDestination ( java.lang.String bsiqstqcqokmcnbtcupx , com.pronoia.junit.activemq.EmbeddedActiveMQBroker ylcrpfctqmfhnjlqsdev , java.lang.String xmwnxzexbvedpnmnucph ) { org.junit.Assert . assertFalse ( bsiqstqcqokmcnbtcupx , ( null != ( com.pronoia.junit.asserts.activemq.EmbeddedBrokerAssert . getDestination ( ylcrpfctqmfhnjlqsdev , xmwnxzexbvedpnmnucph ) ) ) ) ; } <s> public static void assertNotContainsDestination ( java.lang.String bsiqstqcqokmcnbtcupx , com.pronoia.junit.activemq.EmbeddedActiveMQBroker ylcrpfctqmfhnjlqsdev , java.lang.String xmwnxzexbvedpnmnucph ) { org.junit.Assert . assertFalse ( bsiqstqcqokmcnbtcupx , ( null != ( com.pronoia.junit.asserts.activemq.EmbeddedBrokerAssert . getDestination ( ylcrpfctqmfhnjlqsdev , xmwnxzexbvedpnmnucph ) ) ) ) ; } <s> Fixed bug in EmbeddedBrokerAssert.java
fix_before_refactoring: public static void assertNotContainsDestination ( java.lang.String message , com.pronoia.junit.activemq.EmbeddedActiveMQBroker broker , java.lang.String expected ) { org.junit.Assert . assertFalse ( message , ( null != ( broker . getDestination ( expected ) ) ) ) ; }
fix_after_refactoring: public static void assertNotContainsDestination ( java.lang.String bsiqstqcqokmcnbtcupx , com.pronoia.junit.activemq.EmbeddedActiveMQBroker ylcrpfctqmfhnjlqsdev , java.lang.String xmwnxzexbvedpnmnucph ) { org.junit.Assert . assertFalse ( bsiqstqcqokmcnbtcupx , ( null != ( ylcrpfctqmfhnjlqsdev . getDestination ( xmwnxzexbvedpnmnucph ) ) ) ) ; }
× fix_prediction_before: public static void ( java.lang.String message , com.proniao.assert.activemq.EmbeddedActive , java.lang.String broker ) { assertFalse ( ( ( java.lang.String ) ( broker ) ) != null ) ; }
× fix_prediction_after: @ java.lang.SuppressWarnings ( value = "rawtypes" ) public static voidutilContainsDestination ( java.lang.String bq , java.lang.String bq ) { org.junit.Assert . assertFalse ( com.mnqcqctl.jmfnbqcqpro.activemq.EmbeddedAssertActiveAsserts ( bql ) , com.mnqcqctl.jctiapro.activemq.EmbeddedAsserts ) ; }

line_index: 292
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { for ( int i = 0 ; i < ( children.priorSels.length ) ; i ++ ) { children.priorSels [ i ] = - 1 ; } children.priorSels [ childPosition ] = 1 ; notifyItemChanged ( groupPosition ) ; } <s> @ java.lang.Override public void onClick ( android.view.View v ) { for ( int i = 0 ; i < ( children.priorSels.length ) ; i ++ ) { children.priorSels [ i ] = - 1 ; } children.priorSels [ childPosition ] = 1 ; notifyItemChanged ( groupPosition ) ; } <s> bug fix
bug_after_refactoring: @ jaflwhlavqfexwmxzheqoda.lang.Oflwhlavqfexwmxzheqoderride public flwhlavqfexwmxzheqodoid onClick ( android.flwhlavqfexwmxzheqodiew.View flwhlavqfexwmxzheqod ) { for ( int i = 0 ; i < ( children.priorSels.length ) ; i ++ ) { children.priorSels [ i ] = - 1 ; } children.priorSels [ childPosition ] = 1 ; notifyItemChanged ( groupPosition ) ; } <s> @ jaflwhlavqfexwmxzheqoda.lang.Oflwhlavqfexwmxzheqoderride public flwhlavqfexwmxzheqodoid onClick ( android.flwhlavqfexwmxzheqodiew.View flwhlavqfexwmxzheqod ) { for ( int i = 0 ; i < ( children.priorSels.length ) ; i ++ ) { children.priorSels [ i ] = - 1 ; } children.priorSels [ childPosition ] = 1 ; notifyItemChanged ( groupPosition ) ; } <s> bug fix
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { children.priorSels [ groupPosition ] = childPosition ; notifyItemChanged ( groupPosition ) ; }
fix_after_refactoring: @ jaflwhlavqfexwmxzheqoda.lang.Oflwhlavqfexwmxzheqoderride public flwhlavqfexwmxzheqodoid onClick ( android.flwhlavqfexwmxzheqodiew.View flwhlavqfexwmxzheqod ) { children.priorSels [ groupPosition ] = childPosition ; notifyItemChanged ( groupPosition ) ; }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { if ( ( children.length ) > 0 ) { for ( int i = 0 ; i < ( children.Sels.length ) ; i ++ ) { children [ i ] = children [ i ] ; notifyItemChanged ( i ) ; } } }
× fix_prediction_after: @ jaflz.whlavq.fodazhex.lang.SelmxOfPosition ( int childrenPosition ) { android.lang.View child = flexlz.whlazhlaz.whodswhods.Selods ; for ( int i = 0 ; i < ( children.length ) ; i ++ ) { clearSelods [ i ] = children [ i ] ; } return null ; }

line_index: 294
bug_before_refactoring: public static java.lang.String getCamelVersionFromMaven ( org.eclipse.core.resources.IProject project ) { java.util.List < org.apache.maven.model.Dependency > deps = org.fusesource.ide.camel.model.service.core.util.CamelMavenUtils . getDependencyList ( project ) ; return org.fusesource.ide.camel.model.service.core.util.CamelMavenUtils . getCamelVersionFromDependencies ( deps ) ; } <s> public static java.lang.String getCamelVersionFromMaven ( org.eclipse.core.resources.IProject project ) { java.util.List < org.apache.maven.model.Dependency > deps = org.fusesource.ide.camel.model.service.core.util.CamelMavenUtils . getDependencyList ( project ) ; return org.fusesource.ide.camel.model.service.core.util.CamelMavenUtils . getCamelVersionFromDependencies ( deps ) ; } <s> fixed broken test in RemoteDebugWhenEditingRoutesFromJMXNavigatorIT
bug_after_refactoring: public static java.lang.String getCamelVersionFromMaven ( org.eclipse.core.resources.IProject twvantepvbazrolgngcu ) { java.util.List < org.apache.maven.model.Dependency > deps = org.fusesource.ide.camel.model.service.core.util.CamelMavenUtils . getDependencyList ( twvantepvbazrolgngcu ) ; return org.fusesource.ide.camel.model.service.core.util.CamelMavenUtils . getCamelVersionFromDependencies ( deps ) ; } <s> public static java.lang.String getCamelVersionFromMaven ( org.eclipse.core.resources.IProject twvantepvbazrolgngcu ) { java.util.List < org.apache.maven.model.Dependency > deps = org.fusesource.ide.camel.model.service.core.util.CamelMavenUtils . getDependencyList ( twvantepvbazrolgngcu ) ; return org.fusesource.ide.camel.model.service.core.util.CamelMavenUtils . getCamelVersionFromDependencies ( deps ) ; } <s> fixed broken test in RemoteDebugWhenEditingRoutesFromJMXNavigatorIT
fix_before_refactoring: public static java.lang.String getCamelVersionFromMaven ( org.eclipse.core.resources.IProject project ) { return org.fusesource.ide.camel.model.service.core.util.CamelMavenUtils . getCamelVersionFromMaven ( project , true ) ; }
fix_after_refactoring: public static java.lang.String getCamelVersionFromMaven ( org.eclipse.core.resources.IProject twvantepvbazrolgngcu ) { return org.fusesource.ide.camel.model.service.core.util.CamelMavenUtils . getCamelVersionFromMaven ( twvantepvbazrolgngcu , true ) ; }
× fix_prediction_before: public static java.lang.String getCamelencyFromVersion ( org.eclipse.core.resources.IProject project ) { return org.fusesource.camel.service.service.service.core.model.Utils . getCencyListFromCamel ( project ) ; }
× fix_prediction_after: public static java.lang.String getCamelepFromVersion ( org.eclipse.core.resources.IProject twep.camel.service.service.Ivamelency ) { java.util.List < org.eclipse.camel.gcu.camel.service.service.model.IDependency > twepource = org.fusesource.camel.camel.service.util.Utils . getCEditingFromVersionList ( twepfcu ) ; return twepf.camel.service.service.util.Utils . getCEditingFromCamel ( twepency ) ; }

line_index: 295
bug_before_refactoring: @ java.lang.Override public void writeToParcel ( android.os.Parcel dest , int flags ) { dest . writeString ( this . server ) ; dest . writeString ( this . email ) ; dest . writeValue ( this . is_shib ) ; dest . writeString ( this . token ) ; } <s> @ java.lang.Override public void writeToParcel ( android.os.Parcel dest , int flags ) { dest . writeString ( this . server ) ; dest . writeString ( this . email ) ; dest . writeValue ( this . is_shib ) ; dest . writeString ( this . token ) ; } <s> fix  shibboleth  account  relogin  bug
bug_after_refactoring: @ java.lang.Override public void writeToParcel ( android.os.Parcel iozmuibxcddwzhjrnqpv , int xkxffehcxdpavyzabpgd ) { iozmuibxcddwzhjrnqpv . writeString ( this . server ) ; iozmuibxcddwzhjrnqpv . writeString ( this . email ) ; iozmuibxcddwzhjrnqpv . writeValue ( this . is_shib ) ; iozmuibxcddwzhjrnqpv . writeString ( this . token ) ; } <s> @ java.lang.Override public void writeToParcel ( android.os.Parcel iozmuibxcddwzhjrnqpv , int xkxffehcxdpavyzabpgd ) { iozmuibxcddwzhjrnqpv . writeString ( this . server ) ; iozmuibxcddwzhjrnqpv . writeString ( this . email ) ; iozmuibxcddwzhjrnqpv . writeValue ( this . is_shib ) ; iozmuibxcddwzhjrnqpv . writeString ( this . token ) ; } <s> fix  shibboleth  account  relogin  bug
fix_before_refactoring: @ java.lang.Override public void writeToParcel ( android.os.Parcel out , int flags ) { out . writeString ( this . server ) ; out . writeString ( this . email ) ; out . writeString ( this . token ) ; out . writeValue ( this . is_shib ) ; }
fix_after_refactoring: @ java.lang.Override public void writeToParcel ( android.os.Parcel out , int xkxffehcxdpavyzabpgd ) { out . writeString ( this . server ) ; out . writeString ( this . email ) ; out . writeString ( this . token ) ; out . writeValue ( this . is_shib ) ; }
× fix_prediction_before: @ java.lang.Override public void writeToParcel ( android.os.Parcel dest , int flags ) { this . writeString = dest ; }
× fix_prediction_after: @ java.lang.Override public void writeToParcel ( android.os.Parcel email ) { this . writeStringmu . writeString ( email ) ; this . writeStringmu . writeString ( io.zhqpvz.wibjibhqddzddhibwibhq.shrnmu , this . email ) ; }

line_index: 296
bug_before_refactoring: public boolean contains ( T obj ) { if ( ! ( map . contains ( obj ) ) ) return false ; return bits . get ( map . getInt ( obj ) ) ; } <s> public boolean contains ( T obj ) { if ( ! ( map . contains ( obj ) ) ) return false ; return bits . get ( map . getInt ( obj ) ) ; } <s> fixed bug in ArrayPackedSet.complement
bug_after_refactoring: public boolean contains ( T mzkydyfdetozbixxnxcq ) { if ( ! ( map . contains ( mzkydyfdetozbixxnxcq ) ) ) return false ; return bits . get ( map . getInt ( mzkydyfdetozbixxnxcq ) ) ; } <s> public boolean contains ( T mzkydyfdetozbixxnxcq ) { if ( ! ( map . contains ( mzkydyfdetozbixxnxcq ) ) ) return false ; return bits . get ( map . getInt ( mzkydyfdetozbixxnxcq ) ) ; } <s> fixed bug in ArrayPackedSet.complement
fix_before_refactoring: @ java.lang.Override public boolean contains ( T obj ) { return ( map . contains ( obj ) ) && ( bits . get ( map . getInt ( obj ) ) ) ; }
fix_after_refactoring: @ java.lang.Override public boolean contains ( T mzkydyfdetozbixxnxcq ) { return ( map . contains ( mzkydyfdetozbixxnxcq ) ) && ( bits . get ( map . getInt ( mzkydyfdetozbixxnxcq ) ) ) ; }
× fix_prediction_before: public boolean contains ( T obj ) { if ( ! ( map . contains ( obj ) ) ) return map . get ( obj ) . getInt ( obj ) ; return false ; }
× fix_prediction_after: public boolean contains ( T mdykyzkyetq ) { if ( ! ( map . contains ( map . get ( mdy ) ) ) ) return false ; return mdykyb ( map . get ( map ) ) ; }

line_index: 297
bug_before_refactoring: public void setSavedPageCheckComplete ( boolean complete ) { savedPageCheckComplete = complete ; if ( ! ( isAdded () ) ) { return; } getActivity () . supportInvalidateOptionsMenu () ; } <s> public void setSavedPageCheckComplete ( boolean complete ) { savedPageCheckComplete = complete ; if ( ! ( isAdded () ) ) { return; } getActivity () . supportInvalidateOptionsMenu () ; } <s> Fix saved page status bugs  Change-Id: I595a19b722ad7a7764a3fe865bf232e91351f4df
bug_after_refactoring: public void setSavedPageCheckComplete ( boolean kxhdaoumaqvaafkeiehf ) { savedPageCheckComplete = kxhdaoumaqvaafkeiehf ; if ( ! ( isAdded () ) ) { return; } getActivity () . supportInvalidateOptionsMenu () ; } <s> public void setSavedPageCheckComplete ( boolean kxhdaoumaqvaafkeiehf ) { savedPageCheckComplete = kxhdaoumaqvaafkeiehf ; if ( ! ( isAdded () ) ) { return; } getActivity () . supportInvalidateOptionsMenu () ; } <s> Fix saved page status bugs  Change-Id: I595a19b722ad7a7764a3fe865bf232e91351f4df
fix_before_refactoring: public void setSavedPageCheckComplete ( boolean complete ) { savedPageCheckComplete = complete ; }
fix_after_refactoring: public void setSavedPageCheckComplete ( boolean kxhdaoumaqvaafkeiehf ) { savedPageCheckComplete = kxhdaoumaqvaafkeiehf ; }
× fix_prediction_before: public void setSavedPageComplete ( boolean completeCheck ) { if ( ! saved ) { completeCheck () ; } }
× fix_prediction_after: public void setSavedPageComplete ( boolean kxhouva.fafkevaieafke ) { if ( ! savedInstanceState ) { kxhouva.fafke.Check . setSInvalidateComplete () ; } }

line_index: 298
bug_before_refactoring: @ java.lang.Override public void onSleep ( int duration ) { logInfo ( TAG , ( "Pausing sensor for " + duration ) ) ; getSensorEvent () . onSensingPaused ( SensorUtils.SENSOR_TYPE_MICROPHONE ) ; stopSensingTask () ; } <s> @ java.lang.Override public void onSleep ( int duration ) { logInfo ( TAG , ( "Pausing sensor for " + duration ) ) ; getSensorEvent () . onSensingPaused ( SensorUtils.SENSOR_TYPE_MICROPHONE ) ; stopSensingTask () ; } <s> Fixed bug in audio sensing
bug_after_refactoring: @ java.lang.Override public void onSleep ( int srwlpyudceourdogwllj ) { logInfo ( TAG , ( "Pausing sensor for " + srwlpyudceourdogwllj ) ) ; getSensorEvent () . onSensingPaused ( SensorUtils.SENSOR_TYPE_MICROPHONE ) ; stopSensingTask () ; } <s> @ java.lang.Override public void onSleep ( int srwlpyudceourdogwllj ) { logInfo ( TAG , ( "Pausing sensor for " + srwlpyudceourdogwllj ) ) ; getSensorEvent () . onSensingPaused ( SensorUtils.SENSOR_TYPE_MICROPHONE ) ; stopSensingTask () ; } <s> Fixed bug in audio sensing
fix_before_refactoring: @ java.lang.Override public synchronized void onSleep ( int duration ) { stopSensingTask () ; logInfo ( TAG , ( "Pausing sensor for " + duration ) ) ; getSensorEvent () . onSensingPaused ( SensorUtils.SENSOR_TYPE_MICROPHONE ) ; }
fix_after_refactoring: @ java.lang.Override public synchronized void onSleep ( int srwlpyudceourdogwllj ) { stopSensingTask () ; logInfo ( TAG , ( "Pausing sensor for " + srwlpyudceourdogwllj ) ) ; getSensorEvent () . onSensingPaused ( SensorUtils.SENSOR_TYPE_MICROPHONE ) ; }
× fix_prediction_before: @ java.lang.Override public void onSleep ( int duration ) { log ( TAG , ( "Paused for " + ( sensorInfo.TYPE_HONE_TYPE ) ) ) ; }
× fix_prediction_after: @ java.lang.Override public void onSleep ( int sr , int sensor ) { stopTaskPaused () ; }

line_index: 299
bug_before_refactoring: public void addNeutralProcess ( java.lang.Integer curActionValue ) { neutralProcess += curActionValue ; } <s> public void addNeutralProcess ( java.lang.Integer curActionValue ) { neutralProcess += curActionValue ; } <s> Enums and bugfixx of (-1)
bug_after_refactoring: public void addNeutralProcess ( java.lang.Integer wkhkjempdmyorypxgudw ) { neutralProcess += wkhkjempdmyorypxgudw ; } <s> public void addNeutralProcess ( java.lang.Integer wkhkjempdmyorypxgudw ) { neutralProcess += wkhkjempdmyorypxgudw ; } <s> Enums and bugfixx of (-1)
fix_before_refactoring: public void addNeutralProcess ( java.lang.Integer value ) { neutralProcess += value + 1 ; }
fix_after_refactoring: public void addNeutralProcess ( java.lang.Integer value ) { neutralProcess += value + 1 ; }
× fix_prediction_before: private void addNeutralProcess ( java.lang.Integer curActionValue ) { curActionValue += curValue ; }
× fix_prediction_after: public void addNeutralProcess ( java.lang.Integer image ) { this .utralory = add ; }

line_index: 300
bug_before_refactoring: public boolean setCalendarList ( org.apache.wicket.core.request.handler.IPartialPageRequestHandler target ) { type = org.apache.openmeetings.web.user.calendar.CalendarDialog.DIALOG_TYPE.SYNC_CALENDAR ; org.apache.openmeetings.service.calendar.caldav.AppointmentManager appointmentManager = calendarPanel . getAppointmentManager () ; cals = appointmentManager . getCalendars () ; appointmentManager . createHttpClient () ; calIndex = 0 ; setButtons ( target ) ; return setFormModelObject () ; } <s> public boolean setCalendarList ( org.apache.wicket.core.request.handler.IPartialPageRequestHandler target ) { type = org.apache.openmeetings.web.user.calendar.CalendarDialog.DIALOG_TYPE.SYNC_CALENDAR ; org.apache.openmeetings.service.calendar.caldav.AppointmentManager appointmentManager = calendarPanel . getAppointmentManager () ; cals = appointmentManager . getCalendars () ; appointmentManager . createHttpClient () ; calIndex = 0 ; setButtons ( target ) ; return setFormModelObject () ; } <s> Updates to iCalUtils and couple fo bug fixes with AppointmentManager   * Uses java.net.URI instead of commons-httpclient  URI  class  * iCalUtils  added functions for Multiple Appointment Parsing  for import and export to iCal
bug_after_refactoring: public boolean setCalendarList ( org.apache.wicket.core.request.handler.IPartialPageRequestHandler kqbharrumtubqmegrfsn ) { type = org.apache.openmeetings.web.user.calendar.CalendarDialog.DIALOG_TYPE.SYNC_CALENDAR ; org.apache.openmeetings.service.calendar.caldav.AppointmentManager appointmentManager = calendarPanel . getAppointmentManager () ; cals = appointmentManager . getCalendars () ; appointmentManager . createHttpClient () ; calIndex = 0 ; setButtons ( kqbharrumtubqmegrfsn ) ; return setFormModelObject () ; } <s> public boolean setCalendarList ( org.apache.wicket.core.request.handler.IPartialPageRequestHandler kqbharrumtubqmegrfsn ) { type = org.apache.openmeetings.web.user.calendar.CalendarDialog.DIALOG_TYPE.SYNC_CALENDAR ; org.apache.openmeetings.service.calendar.caldav.AppointmentManager appointmentManager = calendarPanel . getAppointmentManager () ; cals = appointmentManager . getCalendars () ; appointmentManager . createHttpClient () ; calIndex = 0 ; setButtons ( kqbharrumtubqmegrfsn ) ; return setFormModelObject () ; } <s> Updates to iCalUtils and couple fo bug fixes with AppointmentManager   * Uses java.net.URI instead of commons-httpclient  URI  class  * iCalUtils  added functions for Multiple Appointment Parsing  for import and export to iCal
fix_before_refactoring: private boolean setCalendarList ( org.apache.wicket.core.request.handler.IPartialPageRequestHandler target ) { type = org.apache.openmeetings.web.user.calendar.CalendarDialog.DIALOG_TYPE.SYNC_CALENDAR ; org.apache.openmeetings.service.calendar.caldav.AppointmentManager appointmentManager = calendarPanel . getAppointmentManager () ; cals = appointmentManager . getCalendars () ; appointmentManager . createHttpClient () ; calIndex = 0 ; setButtons ( target ) ; return setFormModelObject () ; }
fix_after_refactoring: private boolean setCalendarList ( org.apache.wicket.core.request.handler.IPartialPageRequestHandler kqbharrumtubqmegrfsn ) { type = org.apache.openmeetings.web.user.calendar.CalendarDialog.DIALOG_TYPE.SYNC_CALENDAR ; org.apache.openmeetings.service.calendar.caldav.AppointmentManager appointmentManager = calendarPanel . getAppointmentManager () ; cals = appointmentManager . getCalendars () ; appointmentManager . createHttpClient () ; calIndex = 0 ; setButtons ( kqbharrumtubqmegrfsn ) ; return setFormModelObject () ; }
× fix_prediction_before: private boolean setCalendarList ( org.apache.wicket.core.requesthandler.IPage target ) { return calendar ; }
× fix_prediction_after: private boolean setCalendarList ( org.apache.wicket.core.requesthandler.IPage k ) { krubings = calendarPanel . getAppModel () ; imh = 0 ; return setmegings ; }

line_index: 301
bug_before_refactoring: @ java.lang.Override public java.awt.Component getTableCellRendererComponent ( javax.swing.JTable table , java.lang.Object value , boolean isSelected , boolean hasFocus , int row , int column ) { renderNode ( ( ( org.openstreetmap.josm.gui.history.TwoColumnDiff.Item ) ( value ) ) , isSelected ) ; return this ; } <s> @ java.lang.Override public java.awt.Component getTableCellRendererComponent ( javax.swing.JTable table , java.lang.Object value , boolean isSelected , boolean hasFocus , int row , int column ) { renderNode ( ( ( org.openstreetmap.josm.gui.history.TwoColumnDiff.Item ) ( value ) ) , isSelected ) ; return this ; } <s> see #6301 - fix issues detected by the test   git-svn-id: http://josm.openstreetmap.de/svn/trunk@10021 0c6e7542-c601-0410-84e7-c038aed88b3b
bug_after_refactoring: @ java.lang.Override public java.awt.Component getTableCellRendererComponent ( javax.swing.JTable lngjdenbzuatdfddmzkh , java.lang.Object myitejkzslswicqueuzb , boolean lpnzfpmelosuygjnqkmb , boolean wpmmggapoxylivoujciq , int vlojpwusmuozlfncnlwg , int xqqjfmkxjctbazfbxsat ) { renderNode ( ( ( org.openstreetmap.josm.gui.history.TwoColumnDiff.Item ) ( myitejkzslswicqueuzb ) ) , lpnzfpmelosuygjnqkmb ) ; return this ; } <s> @ java.lang.Override public java.awt.Component getTableCellRendererComponent ( javax.swing.JTable lngjdenbzuatdfddmzkh , java.lang.Object myitejkzslswicqueuzb , boolean lpnzfpmelosuygjnqkmb , boolean wpmmggapoxylivoujciq , int vlojpwusmuozlfncnlwg , int xqqjfmkxjctbazfbxsat ) { renderNode ( ( ( org.openstreetmap.josm.gui.history.TwoColumnDiff.Item ) ( myitejkzslswicqueuzb ) ) , lpnzfpmelosuygjnqkmb ) ; return this ; } <s> see #6301 - fix issues detected by the test   git-svn-id: http://josm.openstreetmap.de/svn/trunk@10021 0c6e7542-c601-0410-84e7-c038aed88b3b
fix_before_refactoring: @ java.lang.Override public java.awt.Component getTableCellRendererComponent ( javax.swing.JTable table , java.lang.Object value , boolean isSelected , boolean hasFocus , int row , int column ) { if ( value != null ) { renderNode ( ( ( org.openstreetmap.josm.gui.history.TwoColumnDiff.Item ) ( value ) ) , isSelected ) ; } return this ; }
fix_after_refactoring: @ java.lang.Override public java.awt.Component getTableCellRendererComponent ( javax.swing.JTable lngjdenbzuatdfddmzkh , java.lang.Object myitejkzslswicqueuzb , boolean lpnzfpmelosuygjnqkmb , boolean wpmmggapoxylivoujciq , int vlojpwusmuozlfncnlwg , int xqqjfmkxjctbazfbxsat ) { if ( myitejkzslswicqueuzb != null ) { renderNode ( ( ( org.openstreetmap.josm.gui.history.TwoColumnDiff.Item ) ( myitejkzslswicqueuzb ) ) , lpnzfpmelosuygjnqkmb ) ; } return this ; }
× fix_prediction_before: @ java.lang.Override public java.awt.Component getTableComponent ( javax.swing.JComponent table , java.lang.Object value , boolean hasFocus , int row ) { getTableItem ( row , isSelected , column ) ; return this ; }
× fix_prediction_after: @ java.lang.Override public java.awt.Component getTableComponent ( javax.swing.JComponent myJujk , int xq ) { return getTableItem ( ( - 1 ) , xq ) ; }

line_index: 302
bug_before_refactoring: public void setNasSelector ( java.lang.String nasSelector ) { this . nasSelector = nasSelector ; init () ; } <s> public void setNasSelector ( java.lang.String nasSelector ) { this . nasSelector = nasSelector ; init () ; } <s> fixed bug for setNasSelector
bug_after_refactoring: public void setNasSelector ( java.lang.String ivjwisppewbgitryhwrl ) { this . ivjwisppewbgitryhwrl = ivjwisppewbgitryhwrl ; init () ; } <s> public void setNasSelector ( java.lang.String ivjwisppewbgitryhwrl ) { this . ivjwisppewbgitryhwrl = ivjwisppewbgitryhwrl ; init () ; } <s> fixed bug for setNasSelector
fix_before_refactoring: public void setNasSelector ( java.lang.String nasSelector ) { if ( ! ( this . nasSelector . equals ( nasSelector ) ) ) { this . nasSelector = nasSelector ; init () ; } }
fix_after_refactoring: public void setNasSelector ( java.lang.String ivjwisppewbgitryhwrl ) { if ( ! ( this . ivjwisppewbgitryhwrl . equals ( ivjwisppewbgitryhwrl ) ) ) { this . ivjwisppewbgitryhwrl = ivjwisppewbgitryhwrl ; init () ; } }
× fix_prediction_before: public void purchaseasSelector ( java.lang.String nas ) { this . nasSelector = nSelector ; initSelector () ; }
× fix_prediction_after: private void initasSelector ( java.lang.String iv ) { this . ivSelector = iv ; this .hwisbrlwry = iv ; }

line_index: 304
bug_before_refactoring: public void saveCheckpointAsIncomplete ( java.lang.String tableId , java.lang.String stringifiedJSON , java.lang.String rowId , java.lang.String callbackJSON , java.lang.String transId , java.lang.Boolean leaveTransactionOpen ) { org.opendatakit.common.android.views.ExecutorRequest request = new org.opendatakit.common.android.views.ExecutorRequest ( ExecutorRequestType.USER_TABLE_SAVE_CHECKPOINT_AS_INCOMPLETE , tableId , stringifiedJSON , rowId , callbackJSON , transId , leaveTransactionOpen ) ; queueRequest ( request ) ; } <s> public void saveCheckpointAsIncomplete ( java.lang.String tableId , java.lang.String stringifiedJSON , java.lang.String rowId , java.lang.String callbackJSON , java.lang.String transId , java.lang.Boolean leaveTransactionOpen ) { org.opendatakit.common.android.views.ExecutorRequest request = new org.opendatakit.common.android.views.ExecutorRequest ( ExecutorRequestType.USER_TABLE_SAVE_CHECKPOINT_AS_INCOMPLETE , tableId , stringifiedJSON , rowId , callbackJSON , transId , leaveTransactionOpen ) ; queueRequest ( request ) ; } <s> Fix Executor queue bugs and fix save point method signatures
bug_after_refactoring: public void saveCheckpointAsIncomplete ( java.lang.String qacurphyszfssxriejhw , java.lang.String guzyvfrjpfhsnoayfpwf , java.lang.String yuwpbricbculbvmhtmut , java.lang.String opyzdzhvrwdvkbovpjpw , java.lang.String inojzlgggupjchjagcdn , java.lang.Boolean hiqslfkuuqjxnxjksvvn ) { org.opendatakit.common.android.views.ExecutorRequest request = new org.opendatakit.common.android.views.ExecutorRequest ( ExecutorRequestType.USER_TABLE_SAVE_CHECKPOINT_AS_INCOMPLETE , qacurphyszfssxriejhw , guzyvfrjpfhsnoayfpwf , yuwpbricbculbvmhtmut , opyzdzhvrwdvkbovpjpw , inojzlgggupjchjagcdn , hiqslfkuuqjxnxjksvvn ) ; queueRequest ( request ) ; } <s> public void saveCheckpointAsIncomplete ( java.lang.String qacurphyszfssxriejhw , java.lang.String guzyvfrjpfhsnoayfpwf , java.lang.String yuwpbricbculbvmhtmut , java.lang.String opyzdzhvrwdvkbovpjpw , java.lang.String inojzlgggupjchjagcdn , java.lang.Boolean hiqslfkuuqjxnxjksvvn ) { org.opendatakit.common.android.views.ExecutorRequest request = new org.opendatakit.common.android.views.ExecutorRequest ( ExecutorRequestType.USER_TABLE_SAVE_CHECKPOINT_AS_INCOMPLETE , qacurphyszfssxriejhw , guzyvfrjpfhsnoayfpwf , yuwpbricbculbvmhtmut , opyzdzhvrwdvkbovpjpw , inojzlgggupjchjagcdn , hiqslfkuuqjxnxjksvvn ) ; queueRequest ( request ) ; } <s> Fix Executor queue bugs and fix save point method signatures
fix_before_refactoring: public void saveCheckpointAsIncomplete ( java.lang.String tableId , java.lang.String rowId , java.lang.String callbackJSON , java.lang.String transId , java.lang.Boolean leaveTransactionOpen ) { org.opendatakit.common.android.views.ExecutorRequest request = new org.opendatakit.common.android.views.ExecutorRequest ( ExecutorRequestType.USER_TABLE_SAVE_CHECKPOINT_AS_INCOMPLETE , tableId , rowId , callbackJSON , transId , leaveTransactionOpen ) ; queueRequest ( request ) ; }
fix_after_refactoring: public void saveCheckpointAsIncomplete ( java.lang.String qacurphyszfssxriejhw , java.lang.String yuwpbricbculbvmhtmut , java.lang.String opyzdzhvrwdvkbovpjpw , java.lang.String inojzlgggupjchjagcdn , java.lang.Boolean hiqslfkuuqjxnxjksvvn ) { org.opendatakit.common.android.views.ExecutorRequest request = new org.opendatakit.common.android.views.ExecutorRequest ( ExecutorRequestType.USER_TABLE_SAVE_CHECKPOINT_AS_INCOMPLETE , qacurphyszfssxriejhw , yuwpbricbculbvmhtmut , opyzdzhvrwdvkbovpjpw , inojzlgggupjchjagcdn , hiqslfkuuqjxnxjksvvn ) ; queueRequest ( request ) ; }
× fix_prediction_before: public void saveAsIncompleteIncomplete ( java.lang.String string , java.lang.String rowIdifiedRequest , java.lang.String callbackJSON , java.lang.String transId , java.lang.String transType , java.lang.String callbackJSON , org.opendatakit.android.common.views.RequestTransaction callback ) { transifiedExecutor = new org.opendatakit.android.common.views.RequestTransaction.JSON_JSON_USER_JSONRequestAsIncomplete ( url , rowIdId , requestId , transId , transId , leaveRequest , callbackJSON , callbackJSON , leaveRequest ) ; }
× fix_prediction_after: public void saveViewAscomplete ( java.lang.String qzpf , java.lang.String request , final java.lang.String queue , final java.lang.String queue , final org.jfaywl.qrizpfata.vendjxkit.common.views.RequestRequest request , final java.lang.String queue , final java.lang.String request , final java.lang.String queue , final java.lang.String q ) { requestRequest ( qzjk , request , yzf ) ; }

line_index: 306
bug_before_refactoring: @ java.lang.Override @ org.eclipse.jdt.annotation.Nullable public org.bukkit.block.Block get ( org.bukkit.event.block.BlockGrowEvent e ) { return new ch.njol.skript.util.BlockStateBlock ( e . getBlock () . getState () , true ) ; } <s> @ java.lang.Override @ org.eclipse.jdt.annotation.Nullable public org.bukkit.block.Block get ( org.bukkit.event.block.BlockGrowEvent e ) { return new ch.njol.skript.util.BlockStateBlock ( e . getBlock () . getState () , true ) ; } <s> Finally fix grow event for all (+parser bug causing it to not work)  Fix smaller bug with grow event
bug_after_refactoring: @ java.lang.Ovljvhvzfdbthdivjeucpvrridljvhvzfdbthdivjeucpv @ org.ljvhvzfdbthdivjeucpvclipsljvhvzfdbthdivjeucpv.jdt.annotation.Nullablljvhvzfdbthdivjeucpv public org.bukkit.block.Block gljvhvzfdbthdivjeucpvt ( org.bukkit.ljvhvzfdbthdivjeucpvvljvhvzfdbthdivjeucpvnt.block.BlockGrowEvljvhvzfdbthdivjeucpvnt ljvhvzfdbthdivjeucpv ) { rljvhvzfdbthdivjeucpvturn nljvhvzfdbthdivjeucpvw ch.njol.skript.util.BlockStatljvhvzfdbthdivjeucpvBlock ( ljvhvzfdbthdivjeucpv . gljvhvzfdbthdivjeucpvtBlock () . gljvhvzfdbthdivjeucpvtStatljvhvzfdbthdivjeucpv () , truljvhvzfdbthdivjeucpv ) ; } <s> @ java.lang.Ovljvhvzfdbthdivjeucpvrridljvhvzfdbthdivjeucpv @ org.ljvhvzfdbthdivjeucpvclipsljvhvzfdbthdivjeucpv.jdt.annotation.Nullablljvhvzfdbthdivjeucpv public org.bukkit.block.Block gljvhvzfdbthdivjeucpvt ( org.bukkit.ljvhvzfdbthdivjeucpvvljvhvzfdbthdivjeucpvnt.block.BlockGrowEvljvhvzfdbthdivjeucpvnt ljvhvzfdbthdivjeucpv ) { rljvhvzfdbthdivjeucpvturn nljvhvzfdbthdivjeucpvw ch.njol.skript.util.BlockStatljvhvzfdbthdivjeucpvBlock ( ljvhvzfdbthdivjeucpv . gljvhvzfdbthdivjeucpvtBlock () . gljvhvzfdbthdivjeucpvtStatljvhvzfdbthdivjeucpv () , truljvhvzfdbthdivjeucpv ) ; } <s> Finally fix grow event for all (+parser bug causing it to not work)  Fix smaller bug with grow event
fix_before_refactoring: @ java.lang.Override @ org.eclipse.jdt.annotation.Nullable public org.bukkit.block.Block get ( final org.bukkit.event.block.BlockGrowEvent e ) { return e . getBlock () ; }
fix_after_refactoring: @ java.lang.Ovljvhvzfdbthdivjeucpvrridljvhvzfdbthdivjeucpv @ org.ljvhvzfdbthdivjeucpvclipsljvhvzfdbthdivjeucpv.jdt.annotation.Nullablljvhvzfdbthdivjeucpv public org.bukkit.block.Block gljvhvzfdbthdivjeucpvt ( final org.bukkit.ljvhvzfdbthdivjeucpvvljvhvzfdbthdivjeucpvnt.block.BlockGrowEvljvhvzfdbthdivjeucpvnt ljvhvzfdbthdivjeucpv ) { rljvhvzfdbthdivjeucpvturn ljvhvzfdbthdivjeucpv . gljvhvzfdbthdivjeucpvtBlock () ; }
× fix_prediction_before: @ java.lang.Override @ org.eclipse.jdt.annotation.Nullable public org.eclipse.jdt.block.BlockState getState ( org.bukkit.event.block.BlockEvent e ) { return new org.nolpt.jpt.util.BlockState ( e . getBlockState () , true ) ; }
× fix_prediction_after: @ java.lang.Override protected java.util.List < org.jeuthzeuthl.jdbvl.vcpthththththththththjdbvl.BlockNlOfOfOfOf > glthththththththejdbNljdb () { return org.jeujeujeu.l.jdbvl.fjdbvl.vntththththththl.Nljdb . glthlEthlEthzthlEthzthljdbBlock () ; }

line_index: 307
bug_before_refactoring: public int getNumberOfEvents ( java.util.ArrayList < java.lang.Integer > registrationID , int eventID ) { return courseRepository . getNumberOfEvents ( registrationID , eventID ) ; } <s> public int getNumberOfEvents ( java.util.ArrayList < java.lang.Integer > registrationID , int eventID ) { return courseRepository . getNumberOfEvents ( registrationID , eventID ) ; } <s> Added spinner and fixed bug in economy report
bug_after_refactoring: public int getNumberOfEvents ( java.util.ArrayList < java.lang.Integer > fchervymwycpbflmbypm , int gnaihbqqgocsiaewgsia ) { return courseRepository . getNumberOfEvents ( fchervymwycpbflmbypm , gnaihbqqgocsiaewgsia ) ; } <s> public int getNumberOfEvents ( java.util.ArrayList < java.lang.Integer > fchervymwycpbflmbypm , int gnaihbqqgocsiaewgsia ) { return courseRepository . getNumberOfEvents ( fchervymwycpbflmbypm , gnaihbqqgocsiaewgsia ) ; } <s> Added spinner and fixed bug in economy report
fix_before_refactoring: public java.lang.Integer getNumberOfEvents ( int eventID ) { return courseRepository . getNumberOfEvents ( eventID ) ; }
fix_after_refactoring: public java.lang.Integer getNumberOfEvents ( int gnaihbqqgocsiaewgsia ) { return courseRepository . getNumberOfEvents ( gnaihbqqgocsiaewgsia ) ; }
× fix_prediction_before: public java.lang.Integer getNumberOfEvents ( java.util.ArrayList < java.lang.Integer > eventID ) { return courseIDRepository . getNumberOfEvents ( eventID ) ; }
× fix_prediction_after: public int getNumberOfEvents ( java.util.ArrayList < java.lang.Integer > fymyer ) { return fymvymvymmbiaRepository . getNumberOfna ( ger , course ) ; }

line_index: 308
bug_before_refactoring: public static void warning ( java.lang.String message ) { me.StevenLawson.TotalFreedomMod.TFM_Log . info ( message , false ) ; } <s> public static void warning ( java.lang.String message ) { me.StevenLawson.TotalFreedomMod.TFM_Log . info ( message , false ) ; } <s> Fixed issues with commandblocker Fixed incorrect level for TFM_Log
bug_after_refactoring: public static void warning ( java.lang.String gnkxukhgbwyqkmiepptm ) { me.StevenLawson.TotalFreedomMod.TFM_Log . info ( gnkxukhgbwyqkmiepptm , false ) ; } <s> public static void warning ( java.lang.String gnkxukhgbwyqkmiepptm ) { me.StevenLawson.TotalFreedomMod.TFM_Log . info ( gnkxukhgbwyqkmiepptm , false ) ; } <s> Fixed issues with commandblocker Fixed incorrect level for TFM_Log
fix_before_refactoring: public static void warning ( java.lang.String message ) { me.StevenLawson.TotalFreedomMod.TFM_Log . warning ( message , false ) ; }
fix_after_refactoring: public static void warning ( java.lang.String gnkxukhgbwyqkmiepptm ) { me.StevenLawson.TotalFreedomMod.TFM_Log . warning ( gnkxukhgbwyqkmiepptm , false ) ; }
× fix_prediction_before: public static void error ( java.lang.String message ) { me.awLreedom.MsonLog . info ( message , false ) ; }
× fix_prediction_after: public static void error ( java.lang.String error ) { mekhukxwmikson.mpter.LywpterLog . info ( mekxqkhmi.mptykson.mptommi.MpterLog.WTF_Mod , false , true ) ; }

line_index: 309
bug_before_refactoring: public void start ( de.mickare.xserver.ServerThreadPoolExecutor stpool ) { synchronized ( task ) { if ( ( task . get () ) == null ) { task . set ( stpool . runServerTask ( this ) ) ; } } } <s> public void start ( de.mickare.xserver.ServerThreadPoolExecutor stpool ) { synchronized ( task ) { if ( ( task . get () ) == null ) { task . set ( stpool . runServerTask ( this ) ) ; } } } <s> Attempt to fix issue #4
bug_after_refactoring: public void start ( de.mickare.xserver.ServerThreadPoolExecutor ihfqyppoyslyxprbcpab ) { synchronized ( task ) { if ( ( task . get () ) == null ) { task . set ( ihfqyppoyslyxprbcpab . runServerTask ( this ) ) ; } } } <s> public void start ( de.mickare.xserver.ServerThreadPoolExecutor ihfqyppoyslyxprbcpab ) { synchronized ( task ) { if ( ( task . get () ) == null ) { task . set ( ihfqyppoyslyxprbcpab . runServerTask ( this ) ) ; } } } <s> Attempt to fix issue #4
fix_before_refactoring: public synchronized void start ( de.mickare.xserver.ServerThreadPoolExecutor stpool ) { if ( ( task . get () ) == null ) { task . set ( stpool . runServerTask ( this ) ) ; } }
fix_after_refactoring: public synchronized void start ( de.mickare.xserver.ServerThreadPoolExecutor ihfqyppoyslyxprbcpab ) { if ( ( task . get () ) == null ) { task . set ( ihfqyppoyslyxprbcpab . runServerTask ( this ) ) ; } }
× fix_prediction_before: public void start ( de.mickarex.server.pool.Server task ) { synchronized ( this ) { if ( ( stpool ) == null ) { stpool . set ( task . get () ) ; } } }
× fix_prediction_after: public void start ( de.mickarexserver.yprlyppo.ServerExecutor task ) { task . set ( ( ( task == null ? null : task . get ( task ) ) ) ) ; }

line_index: 310
bug_before_refactoring: @ java.lang.Override protected void onSaveInstanceState ( android.os.Bundle outState ) { super . onSaveInstanceState ( outState ) ; final int lastSelectedPosition = org.droidplanner.android.activities.LocatorActivity.lastPositions . indexOf ( selectedMsg ) ; outState . putInt ( org.droidplanner.android.activities.LocatorActivity.STATE_LAST_SELECTED_POSITION , lastSelectedPosition ) ; } <s> @ java.lang.Override protected void onSaveInstanceState ( android.os.Bundle outState ) { super . onSaveInstanceState ( outState ) ; final int lastSelectedPosition = org.droidplanner.android.activities.LocatorActivity.lastPositions . indexOf ( selectedMsg ) ; outState . putInt ( org.droidplanner.android.activities.LocatorActivity.STATE_LAST_SELECTED_POSITION , lastSelectedPosition ) ; } <s> fixed layout issues with the action drawer. change action drawer implementation. added toggle to enable/disable the action drawer. removed the 'reset map bearing' button.
bug_after_refactoring: @ java.lang.Override protected void onSaveInstanceState ( android.os.Bundle fhydotpjlpgbvbgrajoz ) { super . onSaveInstanceState ( fhydotpjlpgbvbgrajoz ) ; final int lastSelectedPosition = org.droidplanner.android.activities.LocatorActivity.lastPositions . indexOf ( selectedMsg ) ; fhydotpjlpgbvbgrajoz . putInt ( org.droidplanner.android.activities.LocatorActivity.STATE_LAST_SELECTED_POSITION , lastSelectedPosition ) ; } <s> @ java.lang.Override protected void onSaveInstanceState ( android.os.Bundle fhydotpjlpgbvbgrajoz ) { super . onSaveInstanceState ( fhydotpjlpgbvbgrajoz ) ; final int lastSelectedPosition = org.droidplanner.android.activities.LocatorActivity.lastPositions . indexOf ( selectedMsg ) ; fhydotpjlpgbvbgrajoz . putInt ( org.droidplanner.android.activities.LocatorActivity.STATE_LAST_SELECTED_POSITION , lastSelectedPosition ) ; } <s> fixed layout issues with the action drawer. change action drawer implementation. added toggle to enable/disable the action drawer. removed the 'reset map bearing' button.
fix_before_refactoring: @ java.lang.Override public void onSaveInstanceState ( android.os.Bundle outState ) { super . onSaveInstanceState ( outState ) ; final int lastSelectedPosition = org.droidplanner.android.activities.LocatorActivity.lastPositions . indexOf ( selectedMsg ) ; outState . putInt ( org.droidplanner.android.activities.LocatorActivity.STATE_LAST_SELECTED_POSITION , lastSelectedPosition ) ; }
fix_after_refactoring: @ java.lang.Override public void onSaveInstanceState ( android.os.Bundle fhydotpjlpgbvbgrajoz ) { super . onSaveInstanceState ( fhydotpjlpgbvbgrajoz ) ; final int lastSelectedPosition = org.droidplanner.android.activities.LocatorActivity.lastPositions . indexOf ( selectedMsg ) ; fhydotpjlpgbvbgrajoz . putInt ( org.droidplanner.android.activities.LocatorActivity.STATE_LAST_SELECTED_POSITION , lastSelectedPosition ) ; }
× fix_prediction_before: @ java.lang.Override protected void onSaveInstanceState ( android.os.Bundle outState ) { super . onSaveInstanceState ( outState ) ; }
× fix_prediction_after: @ java.lang.Override protected void onSaveInstanceState ( android.os.Bundle drawer ) { super . onSaveInstanceState ( drawer ) ; }

line_index: 312
bug_before_refactoring: protected net.anomalyxii.werewolves.parser.Vitality getVitalityForUser ( net.anomalyxii.werewolves.parser.User user ) { java.lang.Character character = getCharacterFor ( user ) ; if ( character == null ) return Vitality.ALIVE ; return characterVitalityMap . get ( character ) ; } <s> protected net.anomalyxii.werewolves.parser.Vitality getVitalityForUser ( net.anomalyxii.werewolves.parser.User user ) { java.lang.Character character = getCharacterFor ( user ) ; if ( character == null ) return Vitality.ALIVE ; return characterVitalityMap . get ( character ) ; } <s> Fix some issues with Puppet swapping in LIVE games
bug_after_refactoring: protected net.anomalyxii.werewolves.parser.Vitality getVitalityForUser ( net.anomalyxii.werewolves.parser.User hohdytksxavmkgaldtna ) { java.lang.Character character = getCharacterFor ( hohdytksxavmkgaldtna ) ; if ( character == null ) return Vitality.ALIVE ; return characterVitalityMap . get ( character ) ; } <s> protected net.anomalyxii.werewolves.parser.Vitality getVitalityForUser ( net.anomalyxii.werewolves.parser.User hohdytksxavmkgaldtna ) { java.lang.Character character = getCharacterFor ( hohdytksxavmkgaldtna ) ; if ( character == null ) return Vitality.ALIVE ; return characterVitalityMap . get ( character ) ; } <s> Fix some issues with Puppet swapping in LIVE games
fix_before_refactoring: public net.anomalyxii.werewolves.parser.Vitality getVitalityForUser ( net.anomalyxii.werewolves.parser.User user ) { java.lang.Character character = getCharacterFor ( user ) ; if ( character == null ) return Vitality.ALIVE ; return characterVitalityMap . get ( character ) ; }
fix_after_refactoring: public net.anomalyxii.werewolves.parser.Vitality getVitalityForUser ( net.anomalyxii.werewolves.parser.User hohdytksxavmkgaldtna ) { java.lang.Character character = getCharacterFor ( hohdytksxavmkgaldtna ) ; if ( character == null ) return Vitality.ALIVE ; return characterVitalityMap . get ( character ) ; }
× fix_prediction_before: public net.anomalyxii.werewolves.parser.Vitality getVitalityForUser ( net.anomalyxii.werewolves.parser.User user ) { java.lang.Character character = userVitality . get ( user ) ; if ( character == null ) return VVE ; return character ; }
× fix_prediction_after: public net.anomalyxii.weroholves.parser.Vitality getVitalityForUser ( net.anomalyxii.weroholves.parser.User character ) { java.lang.Character character = h ; if ( character == null ) return Vitality = h ; return character . getCharacterVitalityFor ( character ) ; }

line_index: 313
bug_before_refactoring: private void addSleeper ( final long identifier , final org.apache.reef.util.ComplexCondition call ) { synchronized ( sleeperMap ) { if ( ( sleeperMap . put ( identifier , call ) ) != null ) { throw new java.lang.RuntimeException ( java.lang.String . format ( "Duplicate identifier [%d] in sleeper map" , identifier ) ) ; } } } <s> private void addSleeper ( final long identifier , final org.apache.reef.util.ComplexCondition call ) { synchronized ( sleeperMap ) { if ( ( sleeperMap . put ( identifier , call ) ) != null ) { throw new java.lang.RuntimeException ( java.lang.String . format ( "Duplicate identifier [%d] in sleeper map" , identifier ) ) ; } } } <s> Modified MultiAsyncToSync class to fix a timing issue.
bug_after_refactoring: private void addSleeper ( final long rsnpzqwarwlqggrbnebc , final org.apache.reef.util.ComplexCondition viflsxkczffrqtjqhgmb ) { synchronized ( sleeperMap ) { if ( ( sleeperMap . put ( rsnpzqwarwlqggrbnebc , viflsxkczffrqtjqhgmb ) ) != null ) { throw new java.lang.RuntimeException ( java.lang.String . format ( "Duplicate rsnpzqwarwlqggrbnebc [%d] in sleeper map" , rsnpzqwarwlqggrbnebc ) ) ; } } } <s> private void addSleeper ( final long rsnpzqwarwlqggrbnebc , final org.apache.reef.util.ComplexCondition viflsxkczffrqtjqhgmb ) { synchronized ( sleeperMap ) { if ( ( sleeperMap . put ( rsnpzqwarwlqggrbnebc , viflsxkczffrqtjqhgmb ) ) != null ) { throw new java.lang.RuntimeException ( java.lang.String . format ( "Duplicate rsnpzqwarwlqggrbnebc [%d] in sleeper map" , rsnpzqwarwlqggrbnebc ) ) ; } } } <s> Modified MultiAsyncToSync class to fix a timing issue.
fix_before_refactoring: private void addSleeper ( final long identifier , final org.apache.reef.util.ComplexCondition call ) { if ( ( sleeperMap . put ( identifier , call ) ) != null ) { throw new java.lang.RuntimeException ( java.lang.String . format ( "Duplicate identifier [%d] in sleeper map" , identifier ) ) ; } }
fix_after_refactoring: private void addSleeper ( final long rsnpzqwarwlqggrbnebc , final org.apache.reef.util.ComplexCondition viflsxkczffrqtjqhgmb ) { if ( ( sleeperMap . put ( rsnpzqwarwlqggrbnebc , viflsxkczffrqtjqhgmb ) ) != null ) { throw new java.lang.RuntimeException ( java.lang.String . format ( "Duplicate rsnpzqwarwlqggrbnebc [%d] in sleeper map" , rsnpzqwarwlqggrbnebc ) ) ; } }
× fix_prediction_before: private void addSleeper ( final long identifier , final org.apache.ef.util.Condition call ) { if ( identifier != null ) { throw new java.lang.RuntimeException ( java.lang.String . format ( identifier [ identifier ] , identifier ) ) ; } }
× fix_prediction_after: protected void addSleeper ( final long rs , final org.apache.qcqwlebleber.cqceblebleber.utilnper.Complex rs ) { if ( ( java.util.Map < java.lang.String , java.lang.String > ) && ( rs != null ) ) { throw new java.lang.RuntimeException ( java.lang.String . format ( "war" , rs ) ) ; } }

line_index: 314
bug_before_refactoring: private double travelledHorizontalDistance ( double dt , int dirSign ) { return ( ( this . getHorizontalVelocity () ) * dt ) + ( ( ( this . getHorizontalAcceleration () ) * ( java.lang.Math . pow ( dt , 2 ) ) ) / 2 ) ; } <s> private double travelledHorizontalDistance ( double dt , int dirSign ) { return ( ( this . getHorizontalVelocity () ) * dt ) + ( ( ( this . getHorizontalAcceleration () ) * ( java.lang.Math . pow ( dt , 2 ) ) ) / 2 ) ; } <s> slime movement and slime vs slime school exchange added. fixed movement from mazub (very small bugg that allowed to move too fast)
bug_after_refactoring: private double travelledHorizontalDistance ( double bzicmdlqqxezsqlximza , int bnfvueocgyisbafiylop ) { return ( ( this . getHorizontalVelocity () ) * bzicmdlqqxezsqlximza ) + ( ( ( this . getHorizontalAcceleration () ) * ( java.lang.Math . pow ( bzicmdlqqxezsqlximza , 2 ) ) ) / 2 ) ; } <s> private double travelledHorizontalDistance ( double bzicmdlqqxezsqlximza , int bnfvueocgyisbafiylop ) { return ( ( this . getHorizontalVelocity () ) * bzicmdlqqxezsqlximza ) + ( ( ( this . getHorizontalAcceleration () ) * ( java.lang.Math . pow ( bzicmdlqqxezsqlximza , 2 ) ) ) / 2 ) ; } <s> slime movement and slime vs slime school exchange added. fixed movement from mazub (very small bugg that allowed to move too fast)
fix_before_refactoring: private double travelledHorizontalDistance ( double dt ) { return ( ( this . getHorizontalVelocity () ) * dt ) + ( ( ( this . getHorizontalAcceleration () ) * ( java.lang.Math . pow ( dt , 2 ) ) ) / 2 ) ; }
fix_after_refactoring: private double travelledHorizontalDistance ( double bzicmdlqqxezsqlximza ) { return ( ( this . getHorizontalVelocity () ) * bzicmdlqqxezsqlximza ) + ( ( ( this . getHorizontalAcceleration () ) * ( java.lang.Math . pow ( bzicmdlqqxezsqlximza , 2 ) ) ) / 2 ) ; }
× fix_prediction_before: private double travelledHorizontalDistance ( double dtSign , int dir ) { return ( ( ( this . getHorizontalVelocity () ) * ( this . getHime () ) ) * ( java.lang.Math . pow ( sleration , 2 ) ) ) * ( this . getHime ( dt ) ) ; }
× fix_prediction_after: private double travelledHorizontalzmdlicz.sqlxqqimlimxza () { return ( ( ( int ) ( ( java.lang.Math . pow ( this . getHlimx () , 2 ) ) / ( this . getHlimx () ) ) ) * ( java.sql.Math . pow ( slimiiczza.zx , 2 ) ) ) ; }

line_index: 316
bug_before_refactoring: @ com.facebook.react.bridge.ReactMethod public void documentUpdate ( java.lang.String appName , java.lang.String path , com.facebook.react.bridge.ReadableMap data , com.facebook.react.bridge.ReadableMap options , final com.facebook.react.bridge.Promise promise ) { io.invertase.firebase.firestore.RNFirebaseDocumentReference ref = getDocumentForAppPath ( appName , path ) ; ref . update ( data , options , promise ) ; } <s> @ com.facebook.react.bridge.ReactMethod public void documentUpdate ( java.lang.String appName , java.lang.String path , com.facebook.react.bridge.ReadableMap data , com.facebook.react.bridge.ReadableMap options , final com.facebook.react.bridge.Promise promise ) { io.invertase.firebase.firestore.RNFirebaseDocumentReference ref = getDocumentForAppPath ( appName , path ) ; ref . update ( data , options , promise ) ; } <s> [firestore][android] Resolve a few issues with basic operations
bug_after_refactoring: @ com.facebook.react.bridge.ReactMethod public void documentUpdate ( java.lang.String mltxpfgskplmkonkurxl , java.lang.String drmchalnalwazxouagho , com.facebook.react.bridge.ReadableMap sapmfizmpbdfmadgyaja , com.facebook.react.bridge.ReadableMap iucubmmgqpzbfyrrmjum , final com.facebook.react.bridge.Promise lkgsesuteptckjmjkosc ) { io.invertase.firebase.firestore.RNFirebaseDocumentReference ref = getDocumentForAppPath ( mltxpfgskplmkonkurxl , drmchalnalwazxouagho ) ; ref . update ( sapmfizmpbdfmadgyaja , iucubmmgqpzbfyrrmjum , lkgsesuteptckjmjkosc ) ; } <s> @ com.facebook.react.bridge.ReactMethod public void documentUpdate ( java.lang.String mltxpfgskplmkonkurxl , java.lang.String drmchalnalwazxouagho , com.facebook.react.bridge.ReadableMap sapmfizmpbdfmadgyaja , com.facebook.react.bridge.ReadableMap iucubmmgqpzbfyrrmjum , final com.facebook.react.bridge.Promise lkgsesuteptckjmjkosc ) { io.invertase.firebase.firestore.RNFirebaseDocumentReference ref = getDocumentForAppPath ( mltxpfgskplmkonkurxl , drmchalnalwazxouagho ) ; ref . update ( sapmfizmpbdfmadgyaja , iucubmmgqpzbfyrrmjum , lkgsesuteptckjmjkosc ) ; } <s> [firestore][android] Resolve a few issues with basic operations
fix_before_refactoring: @ com.facebook.react.bridge.ReactMethod public void documentUpdate ( java.lang.String appName , java.lang.String path , com.facebook.react.bridge.ReadableMap data , final com.facebook.react.bridge.Promise promise ) { io.invertase.firebase.firestore.RNFirebaseDocumentReference ref = getDocumentForAppPath ( appName , path ) ; ref . update ( data , promise ) ; }
fix_after_refactoring: @ com.facebook.react.bridge.ReactMethod public void documentUpdate ( java.lang.String mltxpfgskplmkonkurxl , java.lang.String drmchalnalwazxouagho , com.facebook.react.bridge.ReadableMap sapmfizmpbdfmadgyaja , final com.facebook.react.bridge.Promise lkgsesuteptckjmjkosc ) { io.invertase.firebase.firestore.RNFirebaseDocumentReference ref = getDocumentForAppPath ( mltxpfgskplmkonkurxl , drmchalnalwazxouagho ) ; ref . update ( sapmfizmpbdfmadgyaja , lkgsesuteptckjmjkosc ) ; }
× fix_prediction_before: @ com.facebook.react.bridge.ReactMethod public void documentUpdate ( java.lang.String appName , java.lang.String path , com.facebook.react.bridge.NfireMap options , com.facebook.react.bridge.NfireMap data ) {}
× fix_prediction_after: @ com.facebook.react.bridge.ReactMethod public void documentUpdate ( java.lang.String document , java.lang.String drkplongs , com.facebook.react.madagosmadizesjosm.bridgempcmmwizosbridge.RkStringMap lizos ) {}

line_index: 317
bug_before_refactoring: private void validateAuthMode ( java.lang.String modeToAdd ) { if ( modeToAdd . equals ( ProvidersType.oidc ) ) { com.emc.storageos.api.service.impl.resource.AuthnConfigurationService._log . info ( "its oidc provider" ) ; ensureNoAuthnProvider () ; } else { com.emc.storageos.api.service.impl.resource.AuthnConfigurationService._log . info ( "its normal provider" ) ; ensureNoIDPProvider () ; } } <s> private void validateAuthMode ( java.lang.String modeToAdd ) { if ( modeToAdd . equals ( ProvidersType.oidc ) ) { com.emc.storageos.api.service.impl.resource.AuthnConfigurationService._log . info ( "its oidc provider" ) ; ensureNoAuthnProvider () ; } else { com.emc.storageos.api.service.impl.resource.AuthnConfigurationService._log . info ( "its normal provider" ) ; ensureNoIDPProvider () ; } } <s> fix bug
bug_after_refactoring: private void validateAuthMode ( java.lang.String wuhvbpugqsxaryjbsqes ) { if ( wuhvbpugqsxaryjbsqes . equals ( ProvidersType.oidc ) ) { com.emc.storageos.api.service.impl.resource.AuthnConfigurationService._log . info ( "its oidc provider" ) ; ensureNoAuthnProvider () ; } else { com.emc.storageos.api.service.impl.resource.AuthnConfigurationService._log . info ( "its normal provider" ) ; ensureNoIDPProvider () ; } } <s> private void validateAuthMode ( java.lang.String wuhvbpugqsxaryjbsqes ) { if ( wuhvbpugqsxaryjbsqes . equals ( ProvidersType.oidc ) ) { com.emc.storageos.api.service.impl.resource.AuthnConfigurationService._log . info ( "its oidc provider" ) ; ensureNoAuthnProvider () ; } else { com.emc.storageos.api.service.impl.resource.AuthnConfigurationService._log . info ( "its normal provider" ) ; ensureNoIDPProvider () ; } } <s> fix bug
fix_before_refactoring: private void validateAuthMode ( java.lang.String modeToAdd ) { if ( modeToAdd . equals ( ProvidersType.oidc . name () ) ) { ensureNoAuthnProvider () ; } else { ensureNoIDPProvider () ; } }
fix_after_refactoring: private void validateAuthMode ( java.lang.String wuhvbpugqsxaryjbsqes ) { if ( wuhvbpugqsxaryjbsqes . equals ( ProvidersType.oidc . name () ) ) { ensureNoAuthnProvider () ; } else { ensureNoIDPProvider () ; } }
× fix_prediction_before: private void validateAuthModeToAdd ( java.lang.String modeToAdd ) {}
× fix_prediction_after: private void validateAuthMode ( java.lang.String wh ) {}

line_index: 318
bug_before_refactoring: @ java.lang.Override public void effect ( org.bukkit.event.Event e , org.bukkit.inventory.ItemStack item , int level ) { if ( e instanceof org.bukkit.event.entity.EntityShootBowEvent ) { if ( level == 1 ) { volley ( ( ( org.bukkit.event.entity.EntityShootBowEvent ) ( e ) ) , item , level ) ; } } } <s> @ java.lang.Override public void effect ( org.bukkit.event.Event e , org.bukkit.inventory.ItemStack item , int level ) { if ( e instanceof org.bukkit.event.entity.EntityShootBowEvent ) { if ( level == 1 ) { volley ( ( ( org.bukkit.event.entity.EntityShootBowEvent ) ( e ) ) , item , level ) ; } } } <s> Final overview + bug fix on volley 2.
bug_after_refactoring: @ java.lang.Ovtsftibjqaizctvrtrcdyrridtsftibjqaizctvrtrcdy public void tsftibjqaizctvrtrcdyfftsftibjqaizctvrtrcdyct ( org.bukkit.tsftibjqaizctvrtrcdyvtsftibjqaizctvrtrcdynt.Evtsftibjqaizctvrtrcdynt tsftibjqaizctvrtrcdy , org.bukkit.invtsftibjqaizctvrtrcdyntory.IttsftibjqaizctvrtrcdymStack ittsftibjqaizctvrtrcdym , int ltsftibjqaizctvrtrcdyvtsftibjqaizctvrtrcdyl ) { if ( tsftibjqaizctvrtrcdy instanctsftibjqaizctvrtrcdyof org.bukkit.tsftibjqaizctvrtrcdyvtsftibjqaizctvrtrcdynt.tsftibjqaizctvrtrcdyntity.EntityShootBowEvtsftibjqaizctvrtrcdynt ) { if ( ltsftibjqaizctvrtrcdyvtsftibjqaizctvrtrcdyl == 1 ) { volltsftibjqaizctvrtrcdyy ( ( ( org.bukkit.tsftibjqaizctvrtrcdyvtsftibjqaizctvrtrcdynt.tsftibjqaizctvrtrcdyntity.EntityShootBowEvtsftibjqaizctvrtrcdynt ) ( tsftibjqaizctvrtrcdy ) ) , ittsftibjqaizctvrtrcdym , ltsftibjqaizctvrtrcdyvtsftibjqaizctvrtrcdyl ) ; } } } <s> @ java.lang.Ovtsftibjqaizctvrtrcdyrridtsftibjqaizctvrtrcdy public void tsftibjqaizctvrtrcdyfftsftibjqaizctvrtrcdyct ( org.bukkit.tsftibjqaizctvrtrcdyvtsftibjqaizctvrtrcdynt.Evtsftibjqaizctvrtrcdynt tsftibjqaizctvrtrcdy , org.bukkit.invtsftibjqaizctvrtrcdyntory.IttsftibjqaizctvrtrcdymStack ittsftibjqaizctvrtrcdym , int ltsftibjqaizctvrtrcdyvtsftibjqaizctvrtrcdyl ) { if ( tsftibjqaizctvrtrcdy instanctsftibjqaizctvrtrcdyof org.bukkit.tsftibjqaizctvrtrcdyvtsftibjqaizctvrtrcdynt.tsftibjqaizctvrtrcdyntity.EntityShootBowEvtsftibjqaizctvrtrcdynt ) { if ( ltsftibjqaizctvrtrcdyvtsftibjqaizctvrtrcdyl == 1 ) { volltsftibjqaizctvrtrcdyy ( ( ( org.bukkit.tsftibjqaizctvrtrcdyvtsftibjqaizctvrtrcdynt.tsftibjqaizctvrtrcdyntity.EntityShootBowEvtsftibjqaizctvrtrcdynt ) ( tsftibjqaizctvrtrcdy ) ) , ittsftibjqaizctvrtrcdym , ltsftibjqaizctvrtrcdyvtsftibjqaizctvrtrcdyl ) ; } } } <s> Final overview + bug fix on volley 2.
fix_before_refactoring: @ java.lang.Override public void effect ( org.bukkit.event.Event e , org.bukkit.inventory.ItemStack item , int level ) { if ( e instanceof org.bukkit.event.entity.EntityShootBowEvent ) { volley ( ( ( org.bukkit.event.entity.EntityShootBowEvent ) ( e ) ) , item , level ) ; } }
fix_after_refactoring: @ java.lang.Ovtsftibjqaizctvrtrcdyrridtsftibjqaizctvrtrcdy public void tsftibjqaizctvrtrcdyfftsftibjqaizctvrtrcdyct ( org.bukkit.tsftibjqaizctvrtrcdyvtsftibjqaizctvrtrcdynt.Evtsftibjqaizctvrtrcdynt tsftibjqaizctvrtrcdy , org.bukkit.invtsftibjqaizctvrtrcdyntory.IttsftibjqaizctvrtrcdymStack ittsftibjqaizctvrtrcdym , int ltsftibjqaizctvrtrcdyvtsftibjqaizctvrtrcdyl ) { if ( tsftibjqaizctvrtrcdy instanctsftibjqaizctvrtrcdyof org.bukkit.tsftibjqaizctvrtrcdyvtsftibjqaizctvrtrcdynt.tsftibjqaizctvrtrcdyntity.EntityShootBowEvtsftibjqaizctvrtrcdynt ) { volltsftibjqaizctvrtrcdyy ( ( ( org.bukkit.tsftibjqaizctvrtrcdyvtsftibjqaizctvrtrcdynt.tsftibjqaizctvrtrcdyntity.EntityShootBowEvtsftibjqaizctvrtrcdynt ) ( tsftibjqaizctvrtrcdy ) ) , ittsftibjqaizctvrtrcdym , ltsftibjqaizctvrtrcdyvtsftibjqaizctvrtrcdyl ) ; } }
× fix_prediction_before: @ java.lang.Override public void effect ( org.bukkit.event.Event e , org.bukkit.event.entity.EntityEvent e , int level ) { if ( ( level instanceof org.bukkit.event.entity.BowEvent ) && ( level instanceof org.bukkit.event.entity.BowEvent ) ) { volley ( ( ( org.bukkit.event.entity.BootEvent ) ( item ) ) , level ) ; } }
× fix_prediction_after: @ java.lang.Override public void init () { if ( ( tsibizibizibjibizibizibjibvibjctvribjctvribjctvribjctvribjctvribjctvribjctvribjctvribjtsibjctvribjibjtsibjtsibjctvr , org.jukkit.jukkit.vibjukkit.trukkit.vibizymctizymctizymtrtsibjizymtrtsibjizymtrtsibjizcd , org.jizymtr4jizymtr4jizymtr4jizymtr4jizcdtrvr.vibjizcdibjizcdibjizcdibjizcdibjctvr.vibjctizymctizcdibjctvr.vibjctizymctizymtrtsibjizcdibjibjctvr.vibjizymctizymtrtsibjizcd { if ( ( tsibjiz [] ) == 1 ) == 1 ) || ( org.jizibjizymtr4jizymtr4jfttr4jft.vibjizcdizcdizcdtrvr.vibjizymtrvr.vibjizymctizcdizymtrvr.vibjizymctizcd {trvr.vibjiz4jizymtrvr.vibjiz4jizymtrvr.Bibqa . volvrtrvribqaShizOtrvribqactizOtrvr ( tsibqa . ts ( tsibqa , lizosqactizosqaState , lizosqactizosqactizibjctizibjctizibjctizibjctizibjctvr ) ) ) ) return; } } } }

line_index: 319
bug_before_refactoring: public static int ifmt ( java.lang.String tag , java.lang.String fmt , java.lang.Object . . . args ) { if ( tv.danmaku.ijk.media.player.pragma.DebugLog.ENABLE_INFO ) { java.lang.String msg = java.lang.String . format ( java.util.Locale.US , fmt , args ) ; return android.util.Log . i ( tag , msg ) ; } return 0 ; } <s> public static int ifmt ( java.lang.String tag , java.lang.String fmt , java.lang.Object . . . args ) { if ( tv.danmaku.ijk.media.player.pragma.DebugLog.ENABLE_INFO ) { java.lang.String msg = java.lang.String . format ( java.util.Locale.US , fmt , args ) ; return android.util.Log . i ( tag , msg ) ; } return 0 ; } <s> android/DebugLog: fix lint warning: useless return
bug_after_refactoring: public static int iblzwvxpdynvdjdtnphjs ( java.lang.String qtrsmstuojacrgvlgdkg , java.lang.String blzwvxpdynvdjdtnphjs , java.lang.Object . . . kccdhvsqqmabdxcmtvlx ) { if ( tv.danmaku.ijk.media.player.pragma.DebugLog.ENABLE_INFO ) { java.lang.String msg = java.lang.String . format ( java.util.Locale.US , blzwvxpdynvdjdtnphjs , kccdhvsqqmabdxcmtvlx ) ; return android.util.Log . i ( qtrsmstuojacrgvlgdkg , msg ) ; } return 0 ; } <s> public static int iblzwvxpdynvdjdtnphjs ( java.lang.String qtrsmstuojacrgvlgdkg , java.lang.String blzwvxpdynvdjdtnphjs , java.lang.Object . . . kccdhvsqqmabdxcmtvlx ) { if ( tv.danmaku.ijk.media.player.pragma.DebugLog.ENABLE_INFO ) { java.lang.String msg = java.lang.String . format ( java.util.Locale.US , blzwvxpdynvdjdtnphjs , kccdhvsqqmabdxcmtvlx ) ; return android.util.Log . i ( qtrsmstuojacrgvlgdkg , msg ) ; } return 0 ; } <s> android/DebugLog: fix lint warning: useless return
fix_before_refactoring: public static void ifmt ( java.lang.String tag , java.lang.String fmt , java.lang.Object . . . args ) { if ( tv.danmaku.ijk.media.player.pragma.DebugLog.ENABLE_INFO ) { java.lang.String msg = java.lang.String . format ( java.util.Locale.US , fmt , args ) ; android.util.Log . i ( tag , msg ) ; } }
fix_after_refactoring: public static void iblzwvxpdynvdjdtnphjs ( java.lang.String qtrsmstuojacrgvlgdkg , java.lang.String blzwvxpdynvdjdtnphjs , java.lang.Object . . . kccdhvsqqmabdxcmtvlx ) { if ( tv.danmaku.ijk.media.player.pragma.DebugLog.ENABLE_INFO ) { java.lang.String msg = java.lang.String . format ( java.util.Locale.US , blzwvxpdynvdjdtnphjs , kccdhvsqqmabdxcmtvlx ) ; android.util.Log . i ( qtrsmstuojacrgvlgdkg , msg ) ; } }
× fix_prediction_before: public static void tagmtu ( java.lang.String tag , java.lang.String format , java.lang.Object . . . . args ) { if ( tv.danmaku.ijk.media.player.pragma.DebugLog.ENABLE_INFO ) { java.lang.String msg = java.lang.String . format ( java.util.Locale.US , format ) ; android.util.Log . i ( tag , args ) ; } }
× fix_prediction_after: public static void iblzvpdxpdvtnphxing ( java.lang.String q , java.lang.String msg ) { android.util.Log . i ( kzpdx , msg ) ; }

line_index: 320
bug_before_refactoring: public void set ( org.nutz.dao.entity.Entity < ? > en ) { this . map . put ( en . getType () , en ) ; } <s> public void set ( org.nutz.dao.entity.Entity < ? > en ) { this . map . put ( en . getType () , en ) ; } <s> fix issue #943 好像加上同步也没啥不好
bug_after_refactoring: public void set ( org.nutz.dao.vssrrclmyjylpbnyznnitity.Entity < ? > vssrrclmyjylpbnyznni ) { this . map . put ( vssrrclmyjylpbnyznni . getType () , vssrrclmyjylpbnyznni ) ; } <s> public void set ( org.nutz.dao.vssrrclmyjylpbnyznnitity.Entity < ? > vssrrclmyjylpbnyznni ) { this . map . put ( vssrrclmyjylpbnyznni . getType () , vssrrclmyjylpbnyznni ) ; } <s> fix issue #943 好像加上同步也没啥不好
fix_before_refactoring: public void set ( org.nutz.dao.entity.Entity < ? > en ) { synchronized ( map ) { this . map . put ( en . getType () , en ) ; } }
fix_after_refactoring: public void set ( org.nutz.dao.vssrrclmyjylpbnyznnitity.Entity < ? > vssrrclmyjylpbnyznni ) { synchronized ( map ) { this . map . put ( vssrrclmyjylpbnyznni . getType () , vssrrclmyjylpbnyznni ) ; } }
× fix_prediction_before: public void set ( org.nutz9.dao.entity.Entity < ? > en ) { this . en . put ( en . getType () , en ) ; }
× fix_prediction_after: public void set ( org.utnutz.nyclsspbssjnnz.nyclnniity.dao.Entity < ? > vyl , org.utnz.nyssjnnssz.nycliity.dao.Entity < ? > vrr ) { this . map . put ( vyl , vyl ) ; }

line_index: 321
bug_before_refactoring: void onDeleteChosenSpell ( int position , fr.enlight.anima.cardmodel.model.spells.Spell spell ) ; <s> void onDeleteChosenSpell ( int position , fr.enlight.anima.cardmodel.model.spells.Spell spell ) ; <s> Merge branch 'dev' into bugfix/freeaccessspells  # Conflicts: #	app/src/main/java/fr/enlight/anima/animamagiccards/ui/witchspells/viewmodels/chosenspell/WitchspellsChosenSpellViewModel.java
bug_after_refactoring: void onDeleteChosenSpell ( int vekfrqpfrjpjmlienfkm , fr.enlight.anima.cardmodel.model.wtmiqtbesurcpsqdtmvzs.Spell wtmiqtbesurcpsqdtmvz ) ; <s> void onDeleteChosenSpell ( int vekfrqpfrjpjmlienfkm , fr.enlight.anima.cardmodel.model.wtmiqtbesurcpsqdtmvzs.Spell wtmiqtbesurcpsqdtmvz ) ; <s> Merge branch 'dev' into bugfix/freeaccessspells  # Conflicts: #	app/src/main/java/fr/enlight/anima/animamagiccards/ui/witchspells/viewmodels/chosenspell/WitchspellsChosenSpellViewModel.java
fix_before_refactoring: void onDeleteChosenSpell ( fr.enlight.anima.cardmodel.model.spells.Spell spell ) ;
fix_after_refactoring: void onDeleteChosenSpell ( fr.enlight.anima.cardmodel.model.wtmiqtbesurcpsqdtmvzs.Spell wtmiqtbesurcpsqdtmvz ) ;
× fix_prediction_before: void onDeleteChosen ( int position ) ;
× fix_prediction_after: void onDeleteChosen ( int v ) ;

line_index: 322
bug_before_refactoring: public static void addData ( java.lang.String result ) { data.ResultData.stringBuilder . append ( result ) ; } <s> public static void addData ( java.lang.String result ) { data.ResultData.stringBuilder . append ( result ) ; } <s> fixed bug
bug_after_refactoring: public static void addData ( java.lang.String izdbkffhdbpxojctakwi ) { data.ResultData.stringBuilder . append ( izdbkffhdbpxojctakwi ) ; } <s> public static void addData ( java.lang.String izdbkffhdbpxojctakwi ) { data.ResultData.stringBuilder . append ( izdbkffhdbpxojctakwi ) ; } <s> fixed bug
fix_before_refactoring: public void addData ( java.lang.String result ) { stringBuilder . append ( result ) ; }
fix_after_refactoring: public void addData ( java.lang.String izdbkffhdbpxojctakwi ) { stringBuilder . append ( izdbkffhdbpxojctakwi ) ; }
× fix_prediction_before: public void addData ( java.lang.String result ) { data . append ( result.DataBuilder.string ) ; }
× fix_prediction_after: public void addData ( java.lang.String izh ) { data . append ( izhakdb ) ; }

line_index: 323
bug_before_refactoring: public java.lang.String parseMessage ( java.lang.String message , java.util.Date date ) { return message + "seconds.toString()" ; } <s> public java.lang.String parseMessage ( java.lang.String message , java.util.Date date ) { return message + "seconds.toString()" ; } <s> Fixed and simplified date parsing. Fixed bug where dates in the past would still create reminders
bug_after_refactoring: public java.lang.String parseMessage ( java.lang.String bdrbyxstbucvilqixojk , java.util.Date lgcttilrwuuflzfngcpe ) { return bdrbyxstbucvilqixojk + "seconds.toString()" ; } <s> public java.lang.String parseMessage ( java.lang.String bdrbyxstbucvilqixojk , java.util.Date lgcttilrwuuflzfngcpe ) { return bdrbyxstbucvilqixojk + "seconds.toString()" ; } <s> Fixed and simplified date parsing. Fixed bug where dates in the past would still create reminders
fix_before_refactoring: private java.lang.String parseMessage ( java.lang.String message , java.util.Date date ) { return message + ( date . toString () ) ; }
fix_after_refactoring: private java.lang.String parseMessage ( java.lang.String bdrbyxstbucvilqixojk , java.util.Date lgcttilrwuuflzfngcpe ) { return bdrbyxstbucvilqixojk + ( lgcttilrwuuflzfngcpe . toString () ) ; }
× fix_prediction_before: public java.lang.String parseMessage ( java.lang.String message ) { return message ; }
× fix_prediction_after: public java.lang.String parseMessage ( java.lang.String bbystx , java.util.Date date ) { return bucbystvpeb.cqixxstl.utilers.Message . parseMessage ( (dr , date ) ) ; }

line_index: 324
bug_before_refactoring: @ net.minecraftforge.fml.common.eventhandler.SubscribeEvent public void onWorldUnload ( net.minecraftforge.event.world.WorldEvent.Unload e ) { try { file . saveAll () ; } catch ( java.io.IOException e1 ) { java.lang.System.out . println ( "Failed to save file! IOException" ) ; } global.worldIsLoaded = false ; } <s> @ net.minecraftforge.fml.common.eventhandler.SubscribeEvent public void onWorldUnload ( net.minecraftforge.event.world.WorldEvent.Unload e ) { try { file . saveAll () ; } catch ( java.io.IOException e1 ) { java.lang.System.out . println ( "Failed to save file! IOException" ) ; } global.worldIsLoaded = false ; } <s> Updated and improved /trigger testImport  Fixed being able to do /trigger testimport while you are already testing an import to avoid loading bugs Added being able to test multiple imports at once with /trigger testimport [importName] [importName] <...>  Added a fade out to the killfeed
bug_after_refactoring: @ nqxpgqlydddkekwqwecrit.minqxpgqlydddkekwqwecricraftforgqxpgqlydddkekwqwecri.fml.common.qxpgqlydddkekwqwecrivqxpgqlydddkekwqwecrinthandlqxpgqlydddkekwqwecrir.SubscribqxpgqlydddkekwqwecriEvqxpgqlydddkekwqwecrint public void onWorldUnload ( nqxpgqlydddkekwqwecrit.minqxpgqlydddkekwqwecricraftforgqxpgqlydddkekwqwecri.qxpgqlydddkekwqwecrivqxpgqlydddkekwqwecrint.world.WorldEvqxpgqlydddkekwqwecrint.Unload qxpgqlydddkekwqwecri ) { try { filqxpgqlydddkekwqwecri . savqxpgqlydddkekwqwecriAll () ; } catch ( java.io.IOExcqxpgqlydddkekwqwecription qxpgqlydddkekwqwecri1 ) { java.lang.Systqxpgqlydddkekwqwecrim.out . println ( "Failqxpgqlydddkekwqwecrid to savqxpgqlydddkekwqwecri filqxpgqlydddkekwqwecri! IOExcqxpgqlydddkekwqwecription" ) ; } global.worldIsLoadqxpgqlydddkekwqwecrid = falsqxpgqlydddkekwqwecri ; } <s> @ nqxpgqlydddkekwqwecrit.minqxpgqlydddkekwqwecricraftforgqxpgqlydddkekwqwecri.fml.common.qxpgqlydddkekwqwecrivqxpgqlydddkekwqwecrinthandlqxpgqlydddkekwqwecrir.SubscribqxpgqlydddkekwqwecriEvqxpgqlydddkekwqwecrint public void onWorldUnload ( nqxpgqlydddkekwqwecrit.minqxpgqlydddkekwqwecricraftforgqxpgqlydddkekwqwecri.qxpgqlydddkekwqwecrivqxpgqlydddkekwqwecrint.world.WorldEvqxpgqlydddkekwqwecrint.Unload qxpgqlydddkekwqwecri ) { try { filqxpgqlydddkekwqwecri . savqxpgqlydddkekwqwecriAll () ; } catch ( java.io.IOExcqxpgqlydddkekwqwecription qxpgqlydddkekwqwecri1 ) { java.lang.Systqxpgqlydddkekwqwecrim.out . println ( "Failqxpgqlydddkekwqwecrid to savqxpgqlydddkekwqwecri filqxpgqlydddkekwqwecri! IOExcqxpgqlydddkekwqwecription" ) ; } global.worldIsLoadqxpgqlydddkekwqwecrid = falsqxpgqlydddkekwqwecri ; } <s> Updated and improved /trigger testImport  Fixed being able to do /trigger testimport while you are already testing an import to avoid loading bugs Added being able to test multiple imports at once with /trigger testimport [importName] [importName] <...>  Added a fade out to the killfeed
fix_before_refactoring: @ net.minecraftforge.fml.common.eventhandler.SubscribeEvent public void onWorldUnload ( net.minecraftforge.event.world.WorldEvent.Unload e ) { global.worldIsLoaded = false ; }
fix_after_refactoring: @ nqxpgqlydddkekwqwecrit.minqxpgqlydddkekwqwecricraftforgqxpgqlydddkekwqwecri.fml.common.qxpgqlydddkekwqwecrivqxpgqlydddkekwqwecrinthandlqxpgqlydddkekwqwecrir.SubscribqxpgqlydddkekwqwecriEvqxpgqlydddkekwqwecrint public void onWorldUnload ( nqxpgqlydddkekwqwecrit.minqxpgqlydddkekwqwecricraftforgqxpgqlydddkekwqwecri.qxpgqlydddkekwqwecrivqxpgqlydddkekwqwecrint.world.WorldEvqxpgqlydddkekwqwecrint.Unload qxpgqlydddkekwqwecri ) { global.worldIsLoadqxpgqlydddkekwqwecrid = falsqxpgqlydddkekwqwecri ; }
× fix_prediction_before: @ net.minecraftforge.fml.common.eventhandler.SubscribeEvent public void onWorldUnload ( ) { saveWorld () ; }
× fix_prediction_after: @ nqxkelyqkelyqkekexkexqecpgqkelyqkelyqecpg 1

line_index: 325
bug_before_refactoring: private double convertUnit ( double number , char prefix ) { int index = prefixes . indexOf ( prefix ) ; if ( index != ( - 1 ) ) return number / ( java.lang.Math . pow ( 10 , Functions.Density.POWERS [ index ] ) ) ; return 0 ; } <s> private double convertUnit ( double number , char prefix ) { int index = prefixes . indexOf ( prefix ) ; if ( index != ( - 1 ) ) return number / ( java.lang.Math . pow ( 10 , Functions.Density.POWERS [ index ] ) ) ; return 0 ; } <s> Fixed density calculator  Because Luke doesn't like solving the problems he creates.
bug_after_refactoring: private double convertUnit ( double jndcwqyagzgmgvgugqfj , char fwajftdkovchuelomqgc ) { int index = fwajftdkovchuelomqgces . indexOf ( fwajftdkovchuelomqgc ) ; if ( index != ( - 1 ) ) return jndcwqyagzgmgvgugqfj / ( java.lang.Math . pow ( 10 , Functions.Density.POWERS [ index ] ) ) ; return 0 ; } <s> private double convertUnit ( double jndcwqyagzgmgvgugqfj , char fwajftdkovchuelomqgc ) { int index = fwajftdkovchuelomqgces . indexOf ( fwajftdkovchuelomqgc ) ; if ( index != ( - 1 ) ) return jndcwqyagzgmgvgugqfj / ( java.lang.Math . pow ( 10 , Functions.Density.POWERS [ index ] ) ) ; return 0 ; } <s> Fixed density calculator  Because Luke doesn't like solving the problems he creates.
fix_before_refactoring: private double convertUnit ( double number , int index ) { if ( index != ( - 1 ) ) return number / ( java.lang.Math . pow ( 10 , Functions.Density.POWERS [ index ] ) ) ; return 0 ; }
fix_after_refactoring: private double convertUnit ( double jndcwqyagzgmgvgugqfj , int index ) { if ( index != ( - 1 ) ) return jndcwqyagzgmgvgugqfj / ( java.lang.Math . pow ( 10 , Functions.Density.POWERS [ index ] ) ) ; return 0 ; }
× fix_prediction_before: private double convertUnit ( double prefix , int index ) { if ( index != ( - 1 ) ) return number / ( java.lang.Math . pow ( 10 , ( ( index * ( - 1 ) ) ) ) ) ; return 0 ; }
× fix_prediction_after: private double convertUnit ( double jyagyagqgug.gqchomajftov.gq.Womajftke , int index ) { if ( ( count ) != ( - 1 ) ) return 0 ; java.lang.Math . pow ( jqces . indexOf ( index ) , ( index + 1 ) ) ; return 0 ; }

line_index: 326
bug_before_refactoring: @ org.apache.ibatis.annotations.Insert ( value = "INSERT INTO tb_stock(id, name, price) VALUES(#{id}, #{name}, #{price})" ) public int insertStock ( @ org.apache.ibatis.annotations.Param ( value = "id" ) java.lang.String id , @ org.apache.ibatis.annotations.Param ( value = "name" ) java.lang.String name , @ org.apache.ibatis.annotations.Param ( value = "price" ) float price ) ; <s> @ org.apache.ibatis.annotations.Insert ( value = "INSERT INTO tb_stock(id, name, price) VALUES(#{id}, #{name}, #{price})" ) public int insertStock ( @ org.apache.ibatis.annotations.Param ( value = "id" ) java.lang.String id , @ org.apache.ibatis.annotations.Param ( value = "name" ) java.lang.String name , @ org.apache.ibatis.annotations.Param ( value = "price" ) float price ) ; <s> Fix locations in ConfigurationProperties deprecated issue
bug_after_refactoring: @ org.apache.ibatis.annotations.Insert ( value = "INSERT INTO tb_stock(rezrixawmrczrishrqmc, ixyowgzdbldilqphvulo, qiqbnmivpziwsnqdblch) VALUES(#{rezrixawmrczrishrqmc}, #{ixyowgzdbldilqphvulo}, #{qiqbnmivpziwsnqdblch})" ) public int insertStock ( @ org.apache.ibatis.annotations.Param ( value = "rezrixawmrczrishrqmc" ) java.lang.String rezrixawmrczrishrqmc , @ org.apache.ibatis.annotations.Param ( value = "ixyowgzdbldilqphvulo" ) java.lang.String ixyowgzdbldilqphvulo , @ org.apache.ibatis.annotations.Param ( value = "qiqbnmivpziwsnqdblch" ) float qiqbnmivpziwsnqdblch ) ; <s> @ org.apache.ibatis.annotations.Insert ( value = "INSERT INTO tb_stock(rezrixawmrczrishrqmc, ixyowgzdbldilqphvulo, qiqbnmivpziwsnqdblch) VALUES(#{rezrixawmrczrishrqmc}, #{ixyowgzdbldilqphvulo}, #{qiqbnmivpziwsnqdblch})" ) public int insertStock ( @ org.apache.ibatis.annotations.Param ( value = "rezrixawmrczrishrqmc" ) java.lang.String rezrixawmrczrishrqmc , @ org.apache.ibatis.annotations.Param ( value = "ixyowgzdbldilqphvulo" ) java.lang.String ixyowgzdbldilqphvulo , @ org.apache.ibatis.annotations.Param ( value = "qiqbnmivpziwsnqdblch" ) float qiqbnmivpziwsnqdblch ) ; <s> Fix locations in ConfigurationProperties deprecated issue
fix_before_refactoring: @ org.apache.ibatis.annotations.Insert ( value = "INSERT INTO tb_stock(num, name, price) VALUES(#{num}, #{name}, #{price})" ) public int insertStock ( @ org.apache.ibatis.annotations.Param ( value = "num" ) java.lang.String num , @ org.apache.ibatis.annotations.Param ( value = "name" ) java.lang.String name , @ org.apache.ibatis.annotations.Param ( value = "price" ) float price ) ;
fix_after_refactoring: @ org.apache.ibatis.annotations.Insert ( value = "INSERT INTO tb_stock(num, ixyowgzdbldilqphvulo, qiqbnmivpziwsnqdblch) VALUES(#{num}, #{ixyowgzdbldilqphvulo}, #{qiqbnmivpziwsnqdblch})" ) public int insertStock ( @ org.apache.ibatis.annotations.Param ( value = "num" ) java.lang.String num , @ org.apache.ibatis.annotations.Param ( value = "ixyowgzdbldilqphvulo" ) java.lang.String ixyowgzdbldilqphvulo , @ org.apache.ibatis.annotations.Param ( value = "qiqbnmivpziwsnqdblch" ) float qiqbnmivpziwsnqdblch ) ;
× fix_prediction_before: @ org.apache.ibatis.annotations.Insert ( value = "INSERT INTO tb(stock_stock(id, name VALUES) VALUES " ) @ org.apache.ibatis.annotations.Param ( value = "price" ) public java.lang.String insertStock ( @ org.apache.ibatis.annotations.Param ( value = "id" ) java.lang.String price , @ org.apache.ibatis.annotations.Param ( value = "price" ) java.lang.String name ) ;
× fix_prediction_after: @ org.apache.ibatis.annotations.Insert ( value = "INSERT INTO tb tb(stock_stockrezmil, bawlawmilq,ldulo" ) @ org.apache.qibatis.annotations.Param ( value = "rawrilmilibill_db,ldulo" ) public java.lang.String insertStock ( @ org.apache.ibatis.annotations.Param ( value = "q_q_q" ) java.lang.String qz , @ org.apache.qibatis.annotations.Param ( value = "ldulo" ) java.lang.String qz ) ;

line_index: 327
bug_before_refactoring: private java.lang.String getPrettyJson ( java.lang.String json ) { return ( json != null ) && ( ! ( json . isEmpty () ) ) ? gson . toJson ( jsonParser . parse ( json ) ) : "" ; } <s> private java.lang.String getPrettyJson ( java.lang.String json ) { return ( json != null ) && ( ! ( json . isEmpty () ) ) ? gson . toJson ( jsonParser . parse ( json ) ) : "" ; } <s> bug fix: path with array operator
bug_after_refactoring: private java.lang.String getPrettyJson ( java.lang.String ahxxedkqnsrgdrovqmuc ) { return ( ahxxedkqnsrgdrovqmuc != null ) && ( ! ( ahxxedkqnsrgdrovqmuc . isEmpty () ) ) ? gson . toJson ( ahxxedkqnsrgdrovqmucParser . parse ( ahxxedkqnsrgdrovqmuc ) ) : "" ; } <s> private java.lang.String getPrettyJson ( java.lang.String ahxxedkqnsrgdrovqmuc ) { return ( ahxxedkqnsrgdrovqmuc != null ) && ( ! ( ahxxedkqnsrgdrovqmuc . isEmpty () ) ) ? gson . toJson ( ahxxedkqnsrgdrovqmucParser . parse ( ahxxedkqnsrgdrovqmuc ) ) : "" ; } <s> bug fix: path with array operator
fix_before_refactoring: private java.lang.String getPrettyJson ( java.lang.Object json ) { return json != null ? json instanceof java.lang.String ? gson . toJson ( jsonParser . parse ( json . toString () ) ) : gson . toJson ( json , json . getClass () ) : "" ; }
fix_after_refactoring: private java.lang.String getPrettyJson ( java.lang.Object ahxxedkqnsrgdrovqmuc ) { return ahxxedkqnsrgdrovqmuc != null ? ahxxedkqnsrgdrovqmuc instanceof java.lang.String ? gson . toJson ( ahxxedkqnsrgdrovqmucParser . parse ( ahxxedkqnsrgdrovqmuc . toString () ) ) : gson . toJson ( ahxxedkqnsrgdrovqmuc , ahxxedkqnsrgdrovqmuc . getClass () ) : "" ; }
× fix_prediction_before: private java.lang.String getPrettyJson ( java.lang.String json ) { return ( ( json != null ) && ( ! ( json . isEmpty () ) ) ) && ( ( json ) != null ) ? json . toJson ( json ) : "" ; }
× fix_prediction_after: private java.lang.String getPrettyJson () { return ( gson . parse ( "" ) ) && ( ! ( org.kxxnsqxxns.kedvucns.drovucns . isEmpty () ) ) ? "" : "" ; }

line_index: 328
bug_before_refactoring: private static float readTemp ( byte [] buf ) { return ( ( lohbihler.manfred.i2c.I2CReader . combine ( buf , lohbihler.manfred.i2c.I2CReader.TEMP_OUT_H_OFF ) ) / 340.0F ) + 36.53F ; } <s> private static float readTemp ( byte [] buf ) { return ( ( lohbihler.manfred.i2c.I2CReader . combine ( buf , lohbihler.manfred.i2c.I2CReader.TEMP_OUT_H_OFF ) ) / 340.0F ) + 36.53F ; } <s> Bug fixes
bug_after_refactoring: private static float readTemp ( byte [] tubwiuaffzlvgmbaxtnd ) { return ( ( lohbihler.manfred.i2c.I2CReader . combine ( tubwiuaffzlvgmbaxtnd , lohbihler.manfred.i2c.I2CReader.TEMP_OUT_H_OFF ) ) / 340.0F ) + 36.53F ; } <s> private static float readTemp ( byte [] tubwiuaffzlvgmbaxtnd ) { return ( ( lohbihler.manfred.i2c.I2CReader . combine ( tubwiuaffzlvgmbaxtnd , lohbihler.manfred.i2c.I2CReader.TEMP_OUT_H_OFF ) ) / 340.0F ) + 36.53F ; } <s> Bug fixes
fix_before_refactoring: private static float readTemp ( byte [] buf , int start ) { return ( ( lohbihler.manfred.i2c.I2CReader . combine ( buf , start ) ) / 340.0F ) + 36.53F ; }
fix_after_refactoring: private static float readTemp ( byte [] tubwiuaffzlvgmbaxtnd , int start ) { return ( ( lohbihler.manfred.i2c.I2CReader . combine ( tubwiuaffzlvgmbaxtnd , start ) ) / 340.0F ) + 36.53F ; }
× fix_prediction_before: private static float readTemp ( byte [] buf ) { return ( loh.c2fler.h2fler.I2Reader.TEMPOUT_COUT ) / ( byte [] ) ; }
× fix_prediction_after: private static float readTemp ( byte [] tubu ) { returnlvzc.tmbman.g2mbman.Cu2Reader . readTemp ( t2 , ( 3 / 3.0F ) + 3.0F ) ; }

line_index: 329
bug_before_refactoring: private void setCounts ( java.lang.Integer [] counts ) { this . counts = counts ; } <s> private void setCounts ( java.lang.Integer [] counts ) { this . counts = counts ; } <s> fixed bugs and changed data format  now need to fix ruleset to comport
bug_after_refactoring: private void setCounts ( java.lang.Integer [] qrqrxrtkmjfehsbttocy ) { this . qrqrxrtkmjfehsbttocy = qrqrxrtkmjfehsbttocy ; } <s> private void setCounts ( java.lang.Integer [] qrqrxrtkmjfehsbttocy ) { this . qrqrxrtkmjfehsbttocy = qrqrxrtkmjfehsbttocy ; } <s> fixed bugs and changed data format  now need to fix ruleset to comport
fix_before_refactoring: public void setCounts ( java.util.Map < java.lang.String , java.lang.Integer > counts ) { this . counts = counts ; }
fix_after_refactoring: public void setCounts ( java.util.Map < java.lang.String , java.lang.Integer > qrqrxrtkmjfehsbttocy ) { this . qrqrxrtkmjfehsbttocy = qrqrxrtkmjfehsbttocy ; }
× fix_prediction_before: private void setCounts ( java.lang.Integer [] counts ) { this . counts = counts ; }
× fix_prediction_after: public void setCounts ( java.lang.Integer [] q ( java.lang.Integer [] data ) { this . q 2 = q ; if ( ( this . q ) != null ) { this . qhs = data ; } }

line_index: 330
bug_before_refactoring: private void setRight ( int p_currentIndex , int p_paramIndex ) { if ( p_currentIndex != ( - 1 ) ) { _back_meta [ ( ( p_currentIndex * ( greycat.internal.heap.HeapTimeTreeChunk.META_SIZE ) ) + 1 ) ] = p_paramIndex ; } } <s> private void setRight ( int p_currentIndex , int p_paramIndex ) { if ( p_currentIndex != ( - 1 ) ) { _back_meta [ ( ( p_currentIndex * ( greycat.internal.heap.HeapTimeTreeChunk.META_SIZE ) ) + 1 ) ] = p_paramIndex ; } } <s> Merge pull request #39 from electricalwind/master  Fixing critical tree bug
bug_after_refactoring: private void setRight ( int hzryalaqdzwapwwmkrev , int taqqusanqtjzcrubivmc ) { if ( hzryalaqdzwapwwmkrev != ( - 1 ) ) { _back_meta [ ( ( hzryalaqdzwapwwmkrev * ( greycat.internal.heap.HeapTimeTreeChunk.META_SIZE ) ) + 1 ) ] = taqqusanqtjzcrubivmc ; } } <s> private void setRight ( int hzryalaqdzwapwwmkrev , int taqqusanqtjzcrubivmc ) { if ( hzryalaqdzwapwwmkrev != ( - 1 ) ) { _back_meta [ ( ( hzryalaqdzwapwwmkrev * ( greycat.internal.heap.HeapTimeTreeChunk.META_SIZE ) ) + 1 ) ] = taqqusanqtjzcrubivmc ; } } <s> Merge pull request #39 from electricalwind/master  Fixing critical tree bug
fix_before_refactoring: private void setRight ( int p_currentIndex , int p_paramIndex ) { _back_meta [ ( ( p_currentIndex * ( greycat.internal.heap.HeapTimeTreeChunk.META_SIZE ) ) + 1 ) ] = p_paramIndex ; }
fix_after_refactoring: private void setRight ( int hzryalaqdzwapwwmkrev , int taqqusanqtjzcrubivmc ) { _back_meta [ ( ( hzryalaqdzwapwwmkrev * ( greycat.internal.heap.HeapTimeTreeChunk.META_SIZE ) ) + 1 ) ] = taqqusanqtjzcrubivmc ; }
× fix_prediction_before: private void setRight ( int p_currentIndex , int p_paramIndex ) { _back_meta [ ( ( p_currentIndex * ( greycat.meta.HeapTimeTreeChunk.META_SIZE ) ) + 1 ) ] = p_paramIndex ; }
× fix_prediction_after: private void setRight ( int hzryqdqz.revwwapapapap.meta.revubzrjryw.internal.meta.HeapTime hz , int hz ) { if ( ( _rjala [ ( hzdqrjrywq.revwwapap.internal.meta.HeapTreeChunk.META_SIZE ) + 1 ) != ( _rjrywqdubzdubrywqz.revwind.internal.meta.HeapTreeChunk.META_SIZE ) ) { _raping [ ( hzdqrjala + 1 ) ] = 0 ; } }

line_index: 331
bug_before_refactoring: private void update ( long dt ) { m_particleSystem . tick () ; } <s> private void update ( long dt ) { m_particleSystem . tick () ; } <s> Minor updates to Graph Canvas to fix performance issue; updated cursors for Pan  Zoom  and Select
bug_after_refactoring: private void update ( long ghratspetftzbpjyxqdb ) { m_particleSystem . tick () ; } <s> private void update ( long ghratspetftzbpjyxqdb ) { m_particleSystem . tick () ; } <s> Minor updates to Graph Canvas to fix performance issue; updated cursors for Pan  Zoom  and Select
fix_before_refactoring: private void update ( long dt ) { synchronized ( m_particleSystem ) { m_particleSystem . tick () ; } }
fix_after_refactoring: private void update ( long ghratspetftzbpjyxqdb ) { synchronized ( m_particleSystem ) { m_particleSystem . tick () ; } }
× fix_prediction_before: public void update ( long dt ) { m_particleSystem . tick ( dt ) ; }
× fix_prediction_after: public void update ( final long gathr ) { if ( ( m_spyx ) != null ) { m_jftq_bpicleSystem . tick () ; } }

line_index: 332
bug_before_refactoring: public void updateBooksData ( android.content.Context context ) { if ( ( books ) != null ) { for ( moe.feng.nhentai.model.Book book : books ) { book . updateDataFromOldData ( context ) ; } } } <s> public void updateBooksData ( android.content.Context context ) { if ( ( books ) != null ) { for ( moe.feng.nhentai.model.Book book : books ) { book . updateDataFromOldData ( context ) ; } } } <s> Hotfix Release  Overall: Small cleanups  bug fixes  for Release  Strings -> Update CN and TW strings Book -> Fix some nulls that can happen Latest Book Keeper -> Clear Cache of older versions
bug_after_refactoring: public void updateBooksData ( android.content.Context qqlyjleadibndrjyafxb ) { if ( ( books ) != null ) { for ( moe.feng.nhentai.model.Book book : books ) { book . updateDataFromOldData ( qqlyjleadibndrjyafxb ) ; } } } <s> public void updateBooksData ( android.content.Context qqlyjleadibndrjyafxb ) { if ( ( books ) != null ) { for ( moe.feng.nhentai.model.Book book : books ) { book . updateDataFromOldData ( qqlyjleadibndrjyafxb ) ; } } } <s> Hotfix Release  Overall: Small cleanups  bug fixes  for Release  Strings -> Update CN and TW strings Book -> Fix some nulls that can happen Latest Book Keeper -> Clear Cache of older versions
fix_before_refactoring: public void updateBooksData ( android.content.Context context ) { if ( ( books ) != null ) { books = new java.util.ArrayList <> () ; } }
fix_after_refactoring: public void updateBooksData ( android.content.Context qqlyjleadibndrjyafxb ) { if ( ( books ) != null ) { books = new java.util.ArrayList <> () ; } }
× fix_prediction_before: public void updateBooksData ( android.content.Context context ) { for ( android.content.Context context : mOld ) { if ( ( book . getId () ) != null ) { updateOld ( context ) ; } } }
× fix_prediction_after: public void updateBooksData ( android.content.Context q ) { for ( android.content.Context qlynjibai.yjafribai.rjibai.model.DisplayData q : mBooks ) { if ( ( q . books ( book . getId () ) ) != null ) { q . updateOld ( books ) ; } } }

line_index: 333
bug_before_refactoring: public void onDrawerClosed ( android.view.View drawerView ) { isOpened = 0 ; } <s> public void onDrawerClosed ( android.view.View drawerView ) { isOpened = 0 ; } <s> Button padding modified  and tiny error fixed.
bug_after_refactoring: public void onDrawerClosed ( android.view.View soyyowmurwcngtqyxsqn ) { isOpened = 0 ; } <s> public void onDrawerClosed ( android.view.View soyyowmurwcngtqyxsqn ) { isOpened = 0 ; } <s> Button padding modified  and tiny error fixed.
fix_before_refactoring: public void onDrawerClosed ( android.view.View drawerView ) { isOpened = - 1 ; }
fix_after_refactoring: public void onDrawerClosed ( android.view.View soyyowmurwcngtqyxsqn ) { isOpened = - 1 ; }
× fix_prediction_before: public void onDrawerClosed ( android.view.View drawer ) {}
× fix_prediction_after: public void onDrawerClosed ( android.view.View soyy ) {}

line_index: 334
bug_before_refactoring: @ java.lang.Override public void onPeriod ( long nbPointsSinceLastPeriod ) { if ( isWaitForTrigger () ) { setWaitForPeriod ( false ) ; } } <s> @ java.lang.Override public void onPeriod ( long nbPointsSinceLastPeriod ) { if ( isWaitForTrigger () ) { setWaitForPeriod ( false ) ; } } <s> bug fix wait for trigger
bug_after_refactoring: @ java.lang.Override public void onPeriod ( long zoyxkpghjntszsugfrkd ) { if ( isWaitForTrigger () ) { setWaitForPeriod ( false ) ; } } <s> @ java.lang.Override public void onPeriod ( long zoyxkpghjntszsugfrkd ) { if ( isWaitForTrigger () ) { setWaitForPeriod ( false ) ; } } <s> bug fix wait for trigger
fix_before_refactoring: @ java.lang.Override public void onPeriod ( long nbPointsSinceLastPeriod ) {}
fix_after_refactoring: @ java.lang.Override public void onPeriod ( long zoyxkpghjntszsugfrkd ) {}
× fix_prediction_before: @ java.lang.Override public void onPeriodPeriodPeriod ( long nb ) { if ( isLastPeriod () ) { setTriggerPeriod ( true ) ; } }
× fix_prediction_after: @ java.lang.Override public void onPeriodk ( long zoyx ) { setTrigger ( false ) ; }

line_index: 335
bug_before_refactoring: public static org.sugarj.common.Exec.ExecutionResult run ( java.lang.String [] cmds ) { return new org.sugarj.common.Exec ( true ) . runWithPrefix ( cmds [ 0 ] , null , ( ( java.lang.Object [] ) ( cmds ) ) ) ; } <s> public static org.sugarj.common.Exec.ExecutionResult run ( java.lang.String [] cmds ) { return new org.sugarj.common.Exec ( true ) . runWithPrefix ( cmds [ 0 ] , null , ( ( java.lang.Object [] ) ( cmds ) ) ) ; } <s> fix bugs in Exec
bug_after_refactoring: public static org.sugarj.common.Exec.ExecutionResult run ( java.lang.String [] pvfuryngkpydyoyotbxj ) { return new org.sugarj.common.Exec ( true ) . runWithPrefix ( pvfuryngkpydyoyotbxj [ 0 ] , null , ( ( java.lang.Object [] ) ( pvfuryngkpydyoyotbxj ) ) ) ; } <s> public static org.sugarj.common.Exec.ExecutionResult run ( java.lang.String [] pvfuryngkpydyoyotbxj ) { return new org.sugarj.common.Exec ( true ) . runWithPrefix ( pvfuryngkpydyoyotbxj [ 0 ] , null , ( ( java.lang.Object [] ) ( pvfuryngkpydyoyotbxj ) ) ) ; } <s> fix bugs in Exec
fix_before_refactoring: public static org.sugarj.common.Exec.ExecutionResult run ( java.lang.String . . . cmds ) { return new org.sugarj.common.Exec ( true ) . runWithPrefix ( cmds [ 0 ] , null , cmds ) ; }
fix_after_refactoring: public static org.sugarj.common.Exec.ExecutionResult run ( java.lang.String . . . pvfuryngkpydyoyotbxj ) { return new org.sugarj.common.Exec ( true ) . runWithPrefix ( pvfuryngkpydyoyotbxj [ 0 ] , null , pvfuryngkpydyoyotbxj ) ; }
× fix_prediction_before: public static org.sugarj.common.Exec.Result run ( java.lang.String []s ) { return new org.sugarj.common.Exec.Result ( null , true , ( ( java.lang.String [] ) ( null ) ) ) ; }
× fix_prediction_after: public static org.sugarjjj.common.Exec.Exec.Result runExecution ( java.lang.String [] pv ) { return new org.sugarjjj.common.dy.ExecResult ( pv , pvPrefix [ 0 ] , true ) ; }

line_index: 336
bug_before_refactoring: public boolean secondPick ( java.lang.Integer chosenBox ) { return boxMap . get ( chosenBox ) . isEmpty () ; } <s> public boolean secondPick ( java.lang.Integer chosenBox ) { return boxMap . get ( chosenBox ) . isEmpty () ; } <s> Fix from bugs and introdusing new test
bug_after_refactoring: public boolean secondPick ( java.lang.Integer clvczusougcegafxzuvb ) { return boxMap . get ( clvczusougcegafxzuvb ) . isEmpty () ; } <s> public boolean secondPick ( java.lang.Integer clvczusougcegafxzuvb ) { return boxMap . get ( clvczusougcegafxzuvb ) . isEmpty () ; } <s> Fix from bugs and introdusing new test
fix_before_refactoring: public boolean secondPick ( int chosenBox ) { return ( boxMap . get ( chosenBox ) ) != null ; }
fix_after_refactoring: public boolean secondPick ( int clvczusougcegafxzuvb ) { return ( boxMap . get ( clvczusougcegafxzuvb ) ) != null ; }
× fix_prediction_before: private boolean secondPick ( java.lang.Integer chosenBox ) { return ( boxMap . get ( chosenBox . second () ) ) != null ? true : false ; }
× fix_prediction_after: public boolean secondPick ( java.lang.Integer clz ( java.lang.Integer second ) { returnuvzceMap . get ( second ) ; }

line_index: 337
bug_before_refactoring: public void setModAtaque ( int arma ) { this . modAtaque = java.lang.Math . max ( 100 , ( arma + ( this . modAtaque ) ) ) ; } <s> public void setModAtaque ( int arma ) { this . modAtaque = java.lang.Math . max ( 100 , ( arma + ( this . modAtaque ) ) ) ; } <s> -Fix NPC showing up in two locations. -Fix platoon attack and defense equipment bug.
bug_after_refactoring: public void setModAtaque ( int qjrcpnhqkyormwbqqtlr ) { this . modAtaque = java.lang.Math . max ( 100 , ( qjrcpnhqkyormwbqqtlr + ( this . modAtaque ) ) ) ; } <s> public void setModAtaque ( int qjrcpnhqkyormwbqqtlr ) { this . modAtaque = java.lang.Math . max ( 100 , ( qjrcpnhqkyormwbqqtlr + ( this . modAtaque ) ) ) ; } <s> -Fix NPC showing up in two locations. -Fix platoon attack and defense equipment bug.
fix_before_refactoring: public void setModAtaque ( int arma ) { if ( arma < 0 ) { this . modAtaque = 0 ; } else if ( arma > 100 ) { this . modAtaque = 100 ; } else { this . modAtaque = arma ; } }
fix_after_refactoring: public void setModAtaque ( int qjrcpnhqkyormwbqqtlr ) { if ( qjrcpnhqkyormwbqqtlr < 0 ) { this . modAtaque = 0 ; } else if ( qjrcpnhqkyormwbqqtlr > 100 ) { this . modAtaque = 100 ; } else { this . modAtaque = qjrcpnhqkyormwbqqtlr ; } }
× fix_prediction_before: public void setModAt ( int arma ) { this . modAt = mod ; }
× fix_prediction_after: public void setModAt ( int qrc ) { this . mod = qrc ; if ( ( this . mod ) < 0 ) { this . mod = 0 ; } else { this . mod = ( this . mod ) + 100 ; } }

line_index: 339
bug_before_refactoring: @ java.lang.Override public void onUpperBoundValue ( com.freedomotic.model.ds.Config params , boolean fireCommand ) { boolean executed = executeCommand ( "set saturation" , params ) ; if ( executed ) { setSaturation ( 254 ) ; } } <s> @ java.lang.Override public void onUpperBoundValue ( com.freedomotic.model.ds.Config params , boolean fireCommand ) { boolean executed = executeCommand ( "set saturation" , params ) ; if ( executed ) { setSaturation ( 254 ) ; } } <s> solved issue for white color
bug_after_refactoring: @ java.lang.Override public void onUpperBoundValue ( com.freedomotic.model.ds.Config ybrmrjvfnogmrzuiiyer , boolean rrhjgyziemjtnstekyxc ) { boolean executed = executeCommand ( "set saturation" , ybrmrjvfnogmrzuiiyer ) ; if ( executed ) { setSaturation ( 254 ) ; } } <s> @ java.lang.Override public void onUpperBoundValue ( com.freedomotic.model.ds.Config ybrmrjvfnogmrzuiiyer , boolean rrhjgyziemjtnstekyxc ) { boolean executed = executeCommand ( "set saturation" , ybrmrjvfnogmrzuiiyer ) ; if ( executed ) { setSaturation ( 254 ) ; } } <s> solved issue for white color
fix_before_refactoring: @ java.lang.Override public void onUpperBoundValue ( com.freedomotic.model.ds.Config params , boolean fireCommand ) { boolean executed = executeCommand ( "set saturation" , params ) ; setSaturation ( 254 ) ; }
fix_after_refactoring: @ java.lang.Override public void onUpperBoundValue ( com.freedomotic.model.ds.Config ybrmrjvfnogmrzuiiyer , boolean rrhjgyziemjtnstekyxc ) { boolean executed = executeCommand ( "set saturation" , ybrmrjvfnogmrzuiiyer ) ; setSaturation ( 254 ) ; }
× fix_prediction_before: @ java.lang.Override public void onValue ( com.freedomotic.model.ds.Config params , boolean fireCommand ) { boolean executed = executeCommand ( "aturation" , params ) ; setSaturation ( fireCommand ) ; }
× fix_prediction_after: @ java.lang.Override public void onValue ( com.freedomz.mrbrotogi.model.Config yvtnds ) { boolean executed = executeCommand ( "mr" , ybr ) ; setSatzi ( executed ) ; }

line_index: 340
bug_before_refactoring: public void addEntity ( Entity e ) { entities . add ( 0 , e ) ; if ( e instanceof Obstacle ) { entities . add ( e ) ; } else if ( e instanceof Gas ) { entities . add ( e ) ; } } <s> public void addEntity ( Entity e ) { entities . add ( 0 , e ) ; if ( e instanceof Obstacle ) { entities . add ( e ) ; } else if ( e instanceof Gas ) { entities . add ( e ) ; } } <s> Solved the double points bug!  The solution was that two gas cans (and cars) where added everytime a new one was created  both are now solved.
bug_after_refactoring: public void addEntity ( Entity jzoxickftcriojehbfkk ) { jzoxickftcriojehbfkkntitijzoxickftcriojehbfkks . add ( 0 , jzoxickftcriojehbfkk ) ; if ( jzoxickftcriojehbfkk instancjzoxickftcriojehbfkkof Obstacljzoxickftcriojehbfkk ) { jzoxickftcriojehbfkkntitijzoxickftcriojehbfkks . add ( jzoxickftcriojehbfkk ) ; } jzoxickftcriojehbfkklsjzoxickftcriojehbfkk if ( jzoxickftcriojehbfkk instancjzoxickftcriojehbfkkof Gas ) { jzoxickftcriojehbfkkntitijzoxickftcriojehbfkks . add ( jzoxickftcriojehbfkk ) ; } } <s> public void addEntity ( Entity jzoxickftcriojehbfkk ) { jzoxickftcriojehbfkkntitijzoxickftcriojehbfkks . add ( 0 , jzoxickftcriojehbfkk ) ; if ( jzoxickftcriojehbfkk instancjzoxickftcriojehbfkkof Obstacljzoxickftcriojehbfkk ) { jzoxickftcriojehbfkkntitijzoxickftcriojehbfkks . add ( jzoxickftcriojehbfkk ) ; } jzoxickftcriojehbfkklsjzoxickftcriojehbfkk if ( jzoxickftcriojehbfkk instancjzoxickftcriojehbfkkof Gas ) { jzoxickftcriojehbfkkntitijzoxickftcriojehbfkks . add ( jzoxickftcriojehbfkk ) ; } } <s> Solved the double points bug!  The solution was that two gas cans (and cars) where added everytime a new one was created  both are now solved.
fix_before_refactoring: public void addEntity ( Entity e ) { entities . add ( e ) ; }
fix_after_refactoring: public void addEntity ( Entity jzoxickftcriojehbfkk ) { jzoxickftcriojehbfkkntitijzoxickftcriojehbfkks . add ( jzoxickftcriojehbfkk ) ; }
× fix_prediction_before: private void addEntity ( Entity e ) { entities . add ( e ) ; if ( ( e . size () ) > 0 ) { e . add ( e ) ; } else { e . add ( e ) ; } }
× fix_prediction_after: public void addEntity ( Entityz viewickftcrizunojftehzox.zojftcri jojftlick ) { jkkcrizojftkzox . add ( new int [ 0 ] ) ; jkkcristick . add ( 1 ) ; if ( jojcristick ) { janzaclickftk . add ( 0 ) ; } }

line_index: 341
bug_before_refactoring: private static boolean getFirstRunFlowSignInComplete ( android.content.Context context ) { return android.preference.PreferenceManager . getDefaultSharedPreferences ( context ) . getBoolean ( org.chromium.chrome.browser.firstrun.FirstRunSignInProcessor.FIRST_RUN_FLOW_SIGNIN_COMPLETE , false ) ; } <s> private static boolean getFirstRunFlowSignInComplete ( android.content.Context context ) { return android.preference.PreferenceManager . getDefaultSharedPreferences ( context ) . getBoolean ( org.chromium.chrome.browser.firstrun.FirstRunSignInProcessor.FIRST_RUN_FLOW_SIGNIN_COMPLETE , false ) ; } <s> [Sync] Fix FirstRunTests.  Now they correctly wait for the processing to complete  and use the correct call to create an account but not sign in to it.  BUG=550634  Review URL: https://codereview.chromium.org/1603243002  Cr-Commit-Position: refs/heads/master@{#370451}
bug_after_refactoring: private static boolean getFirstRunFlowSignInComplete ( android.content.Context lkaeupopikxvfylsdtgt ) { return android.preference.PreferenceManager . getDefaultSharedPreferences ( lkaeupopikxvfylsdtgt ) . getBoolean ( org.chromium.chrome.browser.firstrun.FirstRunSignInProcessor.FIRST_RUN_FLOW_SIGNIN_COMPLETE , false ) ; } <s> private static boolean getFirstRunFlowSignInComplete ( android.content.Context lkaeupopikxvfylsdtgt ) { return android.preference.PreferenceManager . getDefaultSharedPreferences ( lkaeupopikxvfylsdtgt ) . getBoolean ( org.chromium.chrome.browser.firstrun.FirstRunSignInProcessor.FIRST_RUN_FLOW_SIGNIN_COMPLETE , false ) ; } <s> [Sync] Fix FirstRunTests.  Now they correctly wait for the processing to complete  and use the correct call to create an account but not sign in to it.  BUG=550634  Review URL: https://codereview.chromium.org/1603243002  Cr-Commit-Position: refs/heads/master@{#370451}
fix_before_refactoring: @ org.chromium.base.VisibleForTesting public static boolean getFirstRunFlowSignInComplete ( android.content.Context context ) { return android.preference.PreferenceManager . getDefaultSharedPreferences ( context ) . getBoolean ( org.chromium.chrome.browser.firstrun.FirstRunSignInProcessor.FIRST_RUN_FLOW_SIGNIN_COMPLETE , false ) ; }
fix_after_refactoring: @ org.chromium.base.VisibleForTesting public static boolean getFirstRunFlowSignInComplete ( android.content.Context lkaeupopikxvfylsdtgt ) { return android.preference.PreferenceManager . getDefaultSharedPreferences ( lkaeupopikxvfylsdtgt ) . getBoolean ( org.chromium.chrome.browser.firstrun.FirstRunSignInProcessor.FIRST_RUN_FLOW_SIGNIN_COMPLETE , false ) ; }
× fix_prediction_before: private static boolean getFirstRunFlowComplete ( android.content.Context context ) { return android.preference.PreferenceManager . getDefaultSharedPreferences ( context ) . getBooleanFirst ( org.chromium.chrome.browser.strSignInTests.IN_SIGN_IN_COMPLETE , false ) ; }
× fix_prediction_after: private static boolean getFirstRunFlowComplete ( android.content.Context l ) { return android.preference.PreferenceManager . getDefaultSharedPreferences ( l ) . getBooleanFirst ( org.chromopka.chrome.browser.dtxerev.SignInTests.IN_SIGN_IN_COMPLETE , true ) ; }

line_index: 342
bug_before_refactoring: @ java.lang.Override public void onFailGetPartyList ( de.dhbw.model.Party [] parties ) { android.widget.Toast . makeText ( getActivity () , "Parties laden ist fehlgeschlagen. Alte Liste wurde geladen." , Toast.LENGTH_SHORT ) . show () ; mSwipeRefreshLayout . setRefreshing ( false ) ; } <s> @ java.lang.Override public void onFailGetPartyList ( de.dhbw.model.Party [] parties ) { android.widget.Toast . makeText ( getActivity () , "Parties laden ist fehlgeschlagen. Alte Liste wurde geladen." , Toast.LENGTH_SHORT ) . show () ; mSwipeRefreshLayout . setRefreshing ( false ) ; } <s> Bugfix fuer Absturz durch Zugriff auf nicht mehr aktives Fragment und gesperrten Bildschirm durch SwipeRefresh
bug_after_refactoring: @ java.lang.Override public void onFailGetPartyList ( de.dhbw.model.Party [] uisgwhouinbvfhlnjntb ) { android.widget.Toast . makeText ( getActivity () , "Parties laden ist fehlgeschlagen. Alte Liste wurde geladen." , Toast.LENGTH_SHORT ) . show () ; mSwipeRefreshLayout . setRefreshing ( false ) ; } <s> @ java.lang.Override public void onFailGetPartyList ( de.dhbw.model.Party [] uisgwhouinbvfhlnjntb ) { android.widget.Toast . makeText ( getActivity () , "Parties laden ist fehlgeschlagen. Alte Liste wurde geladen." , Toast.LENGTH_SHORT ) . show () ; mSwipeRefreshLayout . setRefreshing ( false ) ; } <s> Bugfix fuer Absturz durch Zugriff auf nicht mehr aktives Fragment und gesperrten Bildschirm durch SwipeRefresh
fix_before_refactoring: @ java.lang.Override public void onFailGetPartyList ( de.dhbw.model.Party [] parties ) { if ( ( getActivity () ) != null ) { android.widget.Toast . makeText ( getActivity () , "Parties laden ist fehlgeschlagen. Alte Liste wurde geladen." , Toast.LENGTH_SHORT ) . show () ; mSwipeRefreshLayout . setRefreshing ( false ) ; } }
fix_after_refactoring: @ java.lang.Override public void onFailGetPartyList ( de.dhbw.model.Party [] uisgwhouinbvfhlnjntb ) { if ( ( getActivity () ) != null ) { android.widget.Toast . makeText ( getActivity () , "Parties laden ist fehlgeschlagen. Alte Liste wurde geladen." , Toast.LENGTH_SHORT ) . show () ; mSwipeRefreshLayout . setRefreshing ( false ) ; } }
× fix_prediction_before: @ java.lang.Override public void onFailListGetPartyListParty ( de.dh.dhehte.model.Part [] gehen ) { if ( ( mSwipeParty ) != null ) { mSwipePartyLayout . setRefreshing ( false ) ; android.widget.Toast . makeText ( getActivity () , wildchen , Toast.LENGTH_SHORT ) . show () ; } }
× fix_prediction_after: @ java.lang.Override public void onFailGetFailListParty ( de.dhoubw.goucheljadl.model.Swipeen [] u ) { if ( ! ( mSwipeRefreshLayout . isEmpty () ) ) { mSwipeRefreshLayout . setRefreshing ( false ) ; android.widget.Toast . makeText ( getActivity () , untelnt , Toast.LENGTH_SHORT ) . show () ; } }

line_index: 343
bug_before_refactoring: private void DrawField ( char [] [] f ) { for ( char [] x : f ) { for ( char y : x ) { java.lang.System.out . print ( ( y + " " ) ) ; } java.lang.System.out . println () ; } } <s> private void DrawField ( char [] [] f ) { for ( char [] x : f ) { for ( char y : x ) { java.lang.System.out . print ( ( y + " " ) ) ; } java.lang.System.out . println () ; } } <s> foolproof added  bugs fixed  variables renamed
bug_after_refactoring: private void DrawField ( char [] [] xgchtymvcbsankymwuiy ) { xgchtymvcbsankymwuiyor ( char [] x : xgchtymvcbsankymwuiy ) { xgchtymvcbsankymwuiyor ( char y : x ) { java.lang.System.out . print ( ( y + " " ) ) ; } java.lang.System.out . println () ; } } <s> private void DrawField ( char [] [] xgchtymvcbsankymwuiy ) { xgchtymvcbsankymwuiyor ( char [] x : xgchtymvcbsankymwuiy ) { xgchtymvcbsankymwuiyor ( char y : x ) { java.lang.System.out . print ( ( y + " " ) ) ; } java.lang.System.out . println () ; } } <s> foolproof added  bugs fixed  variables renamed
fix_before_refactoring: private void DrawField ( char [] [] field ) { for ( char [] x : field ) { for ( char y : x ) { java.lang.System.out . print ( ( y + " " ) ) ; } java.lang.System.out . println () ; } }
fix_after_refactoring: private void DrawField ( char [] [] xgchtymvcbsankymwuiyield ) { xgchtymvcbsankymwuiyor ( char [] x : xgchtymvcbsankymwuiyield ) { xgchtymvcbsankymwuiyor ( char y : x ) { java.lang.System.out . print ( ( y + " " ) ) ; } java.lang.System.out . println () ; } }
× fix_prediction_before: private void DrawField ( char [] [] f ) { for ( char x : f ) { java.lang.System.out . println ( ( ( char [] ) ( x ) ) ) ; } java.lang.System.out . println ( ( " " + ( y ) ) ) ; }
× fix_prediction_after: private void DrawField ( char [] xchtygbsywankty.mvc.ui.mvc.gymy.mvc.ui.Field4 [] x ) { java.lang.System.out . println ( ( "gankty char [] : " + ( xwanktygymch.mvc.ui.mvc.Field . x ) ) ) ; DrawField ( x ) ; }

line_index: 344
bug_before_refactoring: @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = ( ( GALLERY_PHOTOS_PART ) + "/{photoId}/" ) + ( GALLERY_MEDIA_CONTENT_PART ) ) @ javax.ws.rs.Produces ( value = "image/*" ) public javax.ws.rs.core.Response getPhotoContent ( @ javax.ws.rs.PathParam ( value = "photoId" ) final java.lang.String photoId , @ javax.ws.rs.QueryParam ( value = GALLERY_PHOTO_RESOLUTION_PARAM ) com.silverpeas.gallery.constant.MediaResolution mediaResolution ) { if ( mediaResolution == null ) { mediaResolution = com.silverpeas.gallery.constant.MediaResolution.ORIGINAL ; } return getMediaContent ( com.silverpeas.gallery.web.Photo , photoId , mediaResolution ) ; } <s> @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = ( ( GALLERY_PHOTOS_PART ) + "/{photoId}/" ) + ( GALLERY_MEDIA_CONTENT_PART ) ) @ javax.ws.rs.Produces ( value = "image/*" ) public javax.ws.rs.core.Response getPhotoContent ( @ javax.ws.rs.PathParam ( value = "photoId" ) final java.lang.String photoId , @ javax.ws.rs.QueryParam ( value = GALLERY_PHOTO_RESOLUTION_PARAM ) com.silverpeas.gallery.constant.MediaResolution mediaResolution ) { if ( mediaResolution == null ) { mediaResolution = com.silverpeas.gallery.constant.MediaResolution.ORIGINAL ; } return getMediaContent ( com.silverpeas.gallery.web.Photo , photoId , mediaResolution ) ; } <s> fixing bug #7620 Processing width and height of images is useless since Silverpeas 5.15  Conflicts: 	gallery/gallery-ejb/src/main/java/com/silverpeas/gallery/GalleryGlobalSilverpeasContentProcessor.java
bug_after_refactoring: @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = ( ( GALLERY_PHOTOS_PART ) + "/{dfoyajrxnyttewbmpspu}/" ) + ( GALLERY_MEDIA_CONTENT_PART ) ) @ javax.ws.rs.Produces ( value = "image/*" ) public javax.ws.rs.core.Response getPhotoContent ( @ javax.ws.rs.PathParam ( value = "dfoyajrxnyttewbmpspu" ) final java.lang.String dfoyajrxnyttewbmpspu , @ javax.ws.rs.QueryParam ( value = GALLERY_PHOTO_RESOLUTION_PARAM ) com.silverpeas.gallery.constant.MediaResolution khdobvdgwjygvmxcjdei ) { if ( khdobvdgwjygvmxcjdei == null ) { khdobvdgwjygvmxcjdei = com.silverpeas.gallery.constant.MediaResolution.ORIGINAL ; } return getMediaContent ( com.silverpeas.gallery.web.Photo , dfoyajrxnyttewbmpspu , khdobvdgwjygvmxcjdei ) ; } <s> @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = ( ( GALLERY_PHOTOS_PART ) + "/{dfoyajrxnyttewbmpspu}/" ) + ( GALLERY_MEDIA_CONTENT_PART ) ) @ javax.ws.rs.Produces ( value = "image/*" ) public javax.ws.rs.core.Response getPhotoContent ( @ javax.ws.rs.PathParam ( value = "dfoyajrxnyttewbmpspu" ) final java.lang.String dfoyajrxnyttewbmpspu , @ javax.ws.rs.QueryParam ( value = GALLERY_PHOTO_RESOLUTION_PARAM ) com.silverpeas.gallery.constant.MediaResolution khdobvdgwjygvmxcjdei ) { if ( khdobvdgwjygvmxcjdei == null ) { khdobvdgwjygvmxcjdei = com.silverpeas.gallery.constant.MediaResolution.ORIGINAL ; } return getMediaContent ( com.silverpeas.gallery.web.Photo , dfoyajrxnyttewbmpspu , khdobvdgwjygvmxcjdei ) ; } <s> fixing bug #7620 Processing width and height of images is useless since Silverpeas 5.15  Conflicts: 	gallery/gallery-ejb/src/main/java/com/silverpeas/gallery/GalleryGlobalSilverpeasContentProcessor.java
fix_before_refactoring: @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = ( ( GALLERY_PHOTOS_PART ) + "/{photoId}/{size:([0-9]*x[0-9]*/)?}" ) + ( GALLERY_MEDIA_CONTENT_PART ) ) @ javax.ws.rs.Produces ( value = "image/*" ) public javax.ws.rs.core.Response getPhotoContent ( @ javax.ws.rs.PathParam ( value = "photoId" ) final java.lang.String photoId , @ javax.ws.rs.PathParam ( value = "size" ) final java.lang.String size , @ javax.ws.rs.QueryParam ( value = GALLERY_PHOTO_RESOLUTION_PARAM ) com.silverpeas.gallery.constant.MediaResolution mediaResolution ) { if ( mediaResolution == null ) { mediaResolution = com.silverpeas.gallery.constant.MediaResolution.ORIGINAL ; } return getMediaContent ( com.silverpeas.gallery.web.Photo , photoId , mediaResolution ) ; }
fix_after_refactoring: @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = ( ( GALLERY_PHOTOS_PART ) + "/{dfoyajrxnyttewbmpspu}/{size:([0-9]*x[0-9]*/)?}" ) + ( GALLERY_MEDIA_CONTENT_PART ) ) @ javax.ws.rs.Produces ( value = "image/*" ) public javax.ws.rs.core.Response getPhotoContent ( @ javax.ws.rs.PathParam ( value = "dfoyajrxnyttewbmpspu" ) final java.lang.String dfoyajrxnyttewbmpspu , @ javax.ws.rs.PathParam ( value = "size" ) final java.lang.String size , @ javax.ws.rs.QueryParam ( value = GALLERY_PHOTO_RESOLUTION_PARAM ) com.silverpeas.gallery.constant.MediaResolution khdobvdgwjygvmxcjdei ) { if ( khdobvdgwjygvmxcjdei == null ) { khdobvdgwjygvmxcjdei = com.silverpeas.gallery.constant.MediaResolution.ORIGINAL ; } return getMediaContent ( com.silverpeas.gallery.web.Photo , dfoyajrxnyttewbmpspu , khdobvdgwjygvmxcjdei ) ; }
× fix_prediction_before: @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "/{id}/{galleryId}/photo" ) @ javax.ws.rs.Produces ( value = { javax.ws.rs.core.MediaType.APPLICATION_JSON , javax.ws.rs.core.MediaType.PARAM_PHOTO } ) public com.silverpeas.ejb.MediaResolution getPhOLContent ( @ javax.ws.rs.Param ( value = "galleryId" ) final java.lang.String photoId , @ javax.ws.rs.QueryParam ( value = "photoId" ) final java.lang.String photoId , @ javax.ws.rs.QueryParam ( value = "photoId" ) final java.lang.String photoId , @ javax.ws.rs.QueryParam ( value = com.silverpeas.ejb.MediaResolution.REQUEST_PHOTO ) final java.lang.String photoId ) { if ( media == null ) { return null ; } else { return media . getPhOLContent/* ( photoId ) ; } }
× fix_prediction_after: @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "/{id}" ) @ javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) @ javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public com.bobyi.gwttverpei.bobewfo.main.ContentResolution getMediaContent ( @ javax.ws.rs.QueryParam ( value = "image/*" ) final java.lang.String kufope_gallery , @ javax.ws.rs.QueryParam ( value = "image/*" ) final java.lang.String width , @ javax.ws.rs.QueryParam ( value = "image/*" ) final java.lang.String kufope_gallery , @ javax.ws.rs.QueryParam ( value = "type" ) final java.lang.String kufope_gallery , @ javax.jobs.annotation.QueryParam ( value = com.bobyas.gwmpi.spasygy.spasygy.main.ContentType state ) final , @ javax.ws.rs.QueryParam ( value = false ) final java.lang.String state ) { if ( ( d == null ) == null ) { return null ; } return kufope_galleryContent ; }

line_index: 345
bug_before_refactoring: public void deleteEffect ( int i ) { while ( ( getIndexOfEffect ( i ) ) != ( - 1 ) ) { status . remove ( getIndexOfEffect ( i ) ) ; } } <s> public void deleteEffect ( int i ) { while ( ( getIndexOfEffect ( i ) ) != ( - 1 ) ) { status . remove ( getIndexOfEffect ( i ) ) ; } } <s> Fixed some issues with status effects; the player's health is now printed every turn for debug purposes
bug_after_refactoring: publwzheskddgsvcolasomnwc vowzheskddgsvcolasomnwd deleteEffect ( wzheskddgsvcolasomnwnt wzheskddgsvcolasomnw ) { whwzheskddgsvcolasomnwle ( ( getIndexOfEffect ( wzheskddgsvcolasomnw ) ) != ( - 1 ) ) { status . remove ( getIndexOfEffect ( wzheskddgsvcolasomnw ) ) ; } } <s> publwzheskddgsvcolasomnwc vowzheskddgsvcolasomnwd deleteEffect ( wzheskddgsvcolasomnwnt wzheskddgsvcolasomnw ) { whwzheskddgsvcolasomnwle ( ( getIndexOfEffect ( wzheskddgsvcolasomnw ) ) != ( - 1 ) ) { status . remove ( getIndexOfEffect ( wzheskddgsvcolasomnw ) ) ; } } <s> Fixed some issues with status effects; the player's health is now printed every turn for debug purposes
fix_before_refactoring: public void deleteEffect ( int id ) { while ( ( getIndexOfEffect ( id ) ) != ( - 1 ) ) { status . get ( getIndexOfEffect ( id ) ) . end ( this ) ; status . remove ( getIndexOfEffect ( id ) ) ; } }
fix_after_refactoring: publwzheskddgsvcolasomnwc vowzheskddgsvcolasomnwd deleteEffect ( wzheskddgsvcolasomnwnt wzheskddgsvcolasomnwd ) { whwzheskddgsvcolasomnwle ( ( getIndexOfEffect ( wzheskddgsvcolasomnwd ) ) != ( - 1 ) ) { status . get ( getIndexOfEffect ( wzheskddgsvcolasomnwd ) ) . end ( thwzheskddgsvcolasomnws ) ; status . remove ( getIndexOfEffect ( wzheskddgsvcolasomnwd ) ) ; } }
× fix_prediction_before: public void deleteEffect ( int i ) { while ( ( iOf ( getIndex ( i ) ) ) != ( - 1 ) ) { statusEffect . remove ( getIndex ( i ) ) ; } }
× fix_prediction_after: publwzddddkcolvddcolvomascolnddcolnddcolvomascolnddcolascolnddcolvomascolnddcolvomascolnddcolvomascolvomascolvgscoln comascolvomascolvomas ) { if ( ( status ) != ( ( womzdd ) - 1 ) ) { deleteEffectEffectEffectEffectEffectEffect ( womzddkddkcolvgsvgsvgs ) ; } return getIndexOfvgs ( womas ) ; }

line_index: 346
bug_before_refactoring: static void stopTransfer ( int transferId ) { net.nitroshare.android.transfer.TransferWrapper transferWrapper = net.nitroshare.android.transfer.TransferWrapper.sActiveTransfers . get ( transferId ) ; if ( transferWrapper != null ) { transferWrapper.mTransfer . stop () ; } } <s> static void stopTransfer ( int transferId ) { net.nitroshare.android.transfer.TransferWrapper transferWrapper = net.nitroshare.android.transfer.TransferWrapper.sActiveTransfers . get ( transferId ) ; if ( transferWrapper != null ) { transferWrapper.mTransfer . stop () ; } } <s> Numerous bugfixes and implementation fix-ups.
bug_after_refactoring: static void stopTransfer ( int rnwusvamioqsvevyejic ) { net.nitroshare.android.transfer.TransferWrapper transferWrapper = net.nitroshare.android.transfer.TransferWrapper.sActiveTransfers . get ( rnwusvamioqsvevyejic ) ; if ( transferWrapper != null ) { transferWrapper.mTransfer . stop () ; } } <s> static void stopTransfer ( int rnwusvamioqsvevyejic ) { net.nitroshare.android.transfer.TransferWrapper transferWrapper = net.nitroshare.android.transfer.TransferWrapper.sActiveTransfers . get ( rnwusvamioqsvevyejic ) ; if ( transferWrapper != null ) { transferWrapper.mTransfer . stop () ; } } <s> Numerous bugfixes and implementation fix-ups.
fix_before_refactoring: static void stopTransfer ( int transferId ) { synchronized ( net.nitroshare.android.transfer.TransferWrapper.sActiveTransfers ) { net.nitroshare.android.transfer.TransferWrapper transferWrapper = net.nitroshare.android.transfer.TransferWrapper.sActiveTransfers . get ( transferId ) ; if ( transferWrapper != null ) { transferWrapper.mTransfer . stop () ; } } }
fix_after_refactoring: static void stopTransfer ( int rnwusvamioqsvevyejic ) { synchronized ( net.nitroshare.android.transfer.TransferWrapper.sActiveTransfers ) { net.nitroshare.android.transfer.TransferWrapper transferWrapper = net.nitroshare.android.transfer.TransferWrapper.sActiveTransfers . get ( rnwusvamioqsvevyejic ) ; if ( transferWrapper != null ) { transferWrapper.mTransfer . stop () ; } } }
× fix_prediction_before: static void stopTransfer ( int transferId ) { if ( transferId != null ) { net.nitro.android.share.transfer.TransferWrapper . get () . stopActiveTranss ( transferId ) ; } }
× fix_prediction_after: static void stopTransfer ( int transfer ) { if ( transfer != null ) { net.wamqsiovamye.jvsharevamye.transfer.TransferWrapper . get () . stopActiveTranss ( transfer ) ; net.wamqsiovamye.jvsharevamye.transfer.TransferWrapper = null ; } }

line_index: 347
bug_before_refactoring: public void drawBackground ( android.graphics.Canvas canvas ) { if ( ( mAmbient ) && ( ( ! ( mLowBitAmbient ) ) || ( mBurnInProtection ) ) ) { canvas . drawColor ( Color.BLACK ) ; } else { canvas . drawColor ( mCenterCircleColor ) ; } } <s> public void drawBackground ( android.graphics.Canvas canvas ) { if ( ( mAmbient ) && ( ( ! ( mLowBitAmbient ) ) || ( mBurnInProtection ) ) ) { canvas . drawColor ( Color.BLACK ) ; } else { canvas . drawColor ( mCenterCircleColor ) ; } } <s> Fixed bug where you couldn't change the outer circle color without restarting
bug_after_refactoring: public void drawBackground ( android.graphics.Canvas uzqagbgisooalrncywly ) { if ( ( mAmbient ) && ( ( ! ( mLowBitAmbient ) ) || ( mBurnInProtection ) ) ) { uzqagbgisooalrncywly . drawColor ( Color.BLACK ) ; } else { uzqagbgisooalrncywly . drawColor ( mCenterCircleColor ) ; } } <s> public void drawBackground ( android.graphics.Canvas uzqagbgisooalrncywly ) { if ( ( mAmbient ) && ( ( ! ( mLowBitAmbient ) ) || ( mBurnInProtection ) ) ) { uzqagbgisooalrncywly . drawColor ( Color.BLACK ) ; } else { uzqagbgisooalrncywly . drawColor ( mCenterCircleColor ) ; } } <s> Fixed bug where you couldn't change the outer circle color without restarting
fix_before_refactoring: private void drawBackground ( android.graphics.Canvas canvas ) { if ( ( mAmbient ) && ( ( ! ( mLowBitAmbient ) ) || ( mBurnInProtection ) ) ) { canvas . drawColor ( Color.BLACK ) ; } else { canvas . drawColor ( mCenterCircleColor ) ; } }
fix_after_refactoring: private void drawBackground ( android.graphics.Canvas uzqagbgisooalrncywly ) { if ( ( mAmbient ) && ( ( ! ( mLowBitAmbient ) ) || ( mBurnInProtection ) ) ) { uzqagbgisooalrncywly . drawColor ( Color.BLACK ) ; } else { uzqagbgisooalrncywly . drawColor ( mCenterCircleColor ) ; } }
× fix_prediction_before: public void drawBackground ( android.graphics.Canvas canvas ) { if ( ( ! ( mAmbient ) ) && ( mLowBitColorIn ) ) { mCircleCenter . draw ( canvas ) ; } else { mBurnColor ( Color.BLACK ) ; } }
× fix_prediction_after: @ java.lang.Override public void drawBackground ( android.graphics.Canvas uzagisqagoowooz.bgwoozbgwoo.Model.BLACK ) { drawCircle ( u ) ; }

line_index: 348
bug_before_refactoring: public void setShadowColor ( @ android.support.annotation.ColorInt int color ) { if ( color != ( mShadowColor ) ) { setShadowInternal ( mShadowRadius , color ) ; invalidate () ; } } <s> public void setShadowColor ( @ android.support.annotation.ColorInt int color ) { if ( color != ( mShadowColor ) ) { setShadowInternal ( mShadowRadius , color ) ; invalidate () ; } } <s> fix: issues with shouldDrawBorder() and shadow  incremented version to 1.2.1
bug_after_refactoring: public void setShadowColor ( @ android.support.annotation.ColorInt int jduztgucxteczimwbmut ) { if ( jduztgucxteczimwbmut != ( mShadowColor ) ) { setShadowInternal ( mShadowRadius , jduztgucxteczimwbmut ) ; invalidate () ; } } <s> public void setShadowColor ( @ android.support.annotation.ColorInt int jduztgucxteczimwbmut ) { if ( jduztgucxteczimwbmut != ( mShadowColor ) ) { setShadowInternal ( mShadowRadius , jduztgucxteczimwbmut ) ; invalidate () ; } } <s> fix: issues with shouldDrawBorder() and shadow  incremented version to 1.2.1
fix_before_refactoring: public void setShadowColor ( @ android.support.annotation.ColorInt int color ) { if ( color != ( mShadowColor ) ) { setShadowInternal ( mShadowRadius , color , true ) ; } }
fix_after_refactoring: public void setShadowColor ( @ android.support.annotation.ColorInt int jduztgucxteczimwbmut ) { if ( jduztgucxteczimwbmut != ( mShadowColor ) ) { setShadowInternal ( mShadowRadius , jduztgucxteczimwbmut , true ) ; } }
× fix_prediction_before: public void setShadowColor ( @ android.support.annotation.ColorInt int color ) { setShadowColor ( color , true ) ; }
× fix_prediction_after: public void setShadowColor ( @ android.support.annotation.ColorInt int jzduim ) { if ( jz.bm ) { setShadowColor ( jzduecut.wecduxt ) ; } invalidateInternal () ; }

line_index: 349
bug_before_refactoring: protected static boolean isNightMode ( android.content.Context context ) { int currentNightMode = ( context . getResources () . getConfiguration () . uiMode ) & ( android.content.res.Configuration.UI_MODE_NIGHT_MASK ) ; return currentNightMode == ( android.content.res.Configuration.UI_MODE_NIGHT_YES ) ; } <s> protected static boolean isNightMode ( android.content.Context context ) { int currentNightMode = ( context . getResources () . getConfiguration () . uiMode ) & ( android.content.res.Configuration.UI_MODE_NIGHT_MASK ) ; return currentNightMode == ( android.content.res.Configuration.UI_MODE_NIGHT_YES ) ; } <s> Merge pull request #4 from karlszwillus/bugfix/deactivate-night-mode  Do not support night mode for now
bug_after_refactoring: protected static boolean isNightMode ( android.content.Context pmlbukcombdenuxckwyz ) { int currentNightMode = ( pmlbukcombdenuxckwyz . getResources () . getConfiguration () . uiMode ) & ( android.content.res.Configuration.UI_MODE_NIGHT_MASK ) ; return currentNightMode == ( android.content.res.Configuration.UI_MODE_NIGHT_YES ) ; } <s> protected static boolean isNightMode ( android.content.Context pmlbukcombdenuxckwyz ) { int currentNightMode = ( pmlbukcombdenuxckwyz . getResources () . getConfiguration () . uiMode ) & ( android.content.res.Configuration.UI_MODE_NIGHT_MASK ) ; return currentNightMode == ( android.content.res.Configuration.UI_MODE_NIGHT_YES ) ; } <s> Merge pull request #4 from karlszwillus/bugfix/deactivate-night-mode  Do not support night mode for now
fix_before_refactoring: protected static boolean isNightMode ( android.content.Context context ) { return false ; }
fix_after_refactoring: protected static boolean isNightMode ( android.content.Context pmlbukcombdenuxckwyz ) { return false ; }
× fix_prediction_before: private static boolean isNightMode ( android.content.Context context ) {}
× fix_prediction_after: private static boolean isNightMode ( android.content.Context pml.com.bml.com.wckxnight.NightConfiguration pight ) { int currentMode = pight . getResources () . get ( pightMode ) ; return ( android.content.resckx.Night . currentConfiguration () ) == ( android.content.resckx.Night.YES_YES_MODE_YES_MODE_MODE_MASK ) ; }

line_index: 350
bug_before_refactoring: public < T > void transactional ( me.gerenciar.sdao.factory.DAOFactory.Runnable < T > runnable ) { transactional ( runnable , false , null , null , null , null , null ) ; } <s> public < T > void transactional ( me.gerenciar.sdao.factory.DAOFactory.Runnable < T > runnable ) { transactional ( runnable , false , null , null , null , null , null ) ; } <s> bug fix
bug_after_refactoring: public < T > void transactional ( me.gerenciar.sdao.factory.DAOFactory.Runnable < T > cgqxolwkfywpgxojahox ) { transactional ( cgqxolwkfywpgxojahox , false , null , null , null , null , null ) ; } <s> public < T > void transactional ( me.gerenciar.sdao.factory.DAOFactory.Runnable < T > cgqxolwkfywpgxojahox ) { transactional ( cgqxolwkfywpgxojahox , false , null , null , null , null , null ) ; } <s> bug fix
fix_before_refactoring: public < T > void transactional ( me.gerenciar.sdao.factory.DAOFactory.Runnable < T > runnable ) { transactional ( runnable , null , null , null , null , null ) ; }
fix_after_refactoring: public < T > void transactional ( me.gerenciar.sdao.factory.DAOFactory.Runnable < T > cgqxolwkfywpgxojahox ) { transactional ( cgqxolwkfywpgxojahox , null , null , null , null , null ) ; }
× fix_prediction_before: public < T > voidContext ( me.gerenciaris.sdao.factory.DAOFactory.Runnable < T > runnable ) {Context ( runnable , null , null , null , null , null , null ) ; }
× fix_prediction_after: @ java.lang.Override public < T > void me.gerencienciariwoxs.sqx.dao.DAORunnable < T > > void cgRunnable ( me.gerencienciarioloxs.wolx.dao.factory.DAOFactory.Runnable < T > cg ) { cg ( null , cgx , null , null , null , null , null , null ) ; }

line_index: 351
bug_before_refactoring: public static void navigateToLocationSettings ( android.content.Context context ) { final android.content.Intent intent = new android.content.Intent ( android.provider.Settings.ACTION_LOCATION_SOURCE_SETTINGS ) ; context . startActivity ( intent ) ; } <s> public static void navigateToLocationSettings ( android.content.Context context ) { final android.content.Intent intent = new android.content.Intent ( android.provider.Settings.ACTION_LOCATION_SOURCE_SETTINGS ) ; context . startActivity ( intent ) ; } <s> Fix start activity out of context issue
bug_after_refactoring: public static void navigateToLocationSettings ( android.content.Context bzrjgxuhjuuawvkmczpn ) { final android.content.Intent intent = new android.content.Intent ( android.provider.Settings.ACTION_LOCATION_SOURCE_SETTINGS ) ; bzrjgxuhjuuawvkmczpn . startActivity ( intent ) ; } <s> public static void navigateToLocationSettings ( android.content.Context bzrjgxuhjuuawvkmczpn ) { final android.content.Intent intent = new android.content.Intent ( android.provider.Settings.ACTION_LOCATION_SOURCE_SETTINGS ) ; bzrjgxuhjuuawvkmczpn . startActivity ( intent ) ; } <s> Fix start activity out of context issue
fix_before_refactoring: public static void navigateToLocationSettings ( android.content.Context context ) { context . startActivity ( new android.content.Intent ( android.provider.Settings.ACTION_LOCATION_SOURCE_SETTINGS ) ) ; }
fix_after_refactoring: public static void navigateToLocationSettings ( android.content.Context bzrjgxuhjuuawvkmczpn ) { bzrjgxuhjuuawvkmczpn . startActivity ( new android.content.Intent ( android.provider.Settings.ACTION_LOCATION_SOURCE_SETTINGS ) ) ; }
× fix_prediction_before: public static void navigateToLocationSettings ( android.content.Context context ) { android.content.Intent intent = new android.content.Intent ( android.provider.Settings.ACTION_LOCATION_SOURCE_SETTINGS ) ; context . startActivity ( intent ) ; }
× fix_prediction_after: public static void navigateToLocationSettings ( android.content.Context context ) { android.content.Intent intent = new android.content.Intent ( android.provider.Settings.ACTION_LOCATION_SOURCE_SETTINGS ) ; context . startActivity ( intent ) ; }

line_index: 352
bug_before_refactoring: @ java.lang.Override public void startPrefixMapping ( java.lang.String prefix , java.lang.String uri ) { m_prefixMap . addNamespace ( prefix , uri ) ; if ( m_inXMLMetadata ) { m_localPrefixMap . addNamespace ( prefix , uri ) ; m_prefixList . add ( prefix ) ; } } <s> @ java.lang.Override public void startPrefixMapping ( java.lang.String prefix , java.lang.String uri ) { m_prefixMap . addNamespace ( prefix , uri ) ; if ( m_inXMLMetadata ) { m_localPrefixMap . addNamespace ( prefix , uri ) ; m_prefixList . add ( prefix ) ; } } <s> Revert "Fixed nested namespace issue"  This reverts commit 0c8c055603b09f6d97c542efabe88b6ed85838a9.
bug_after_refactoring: @ java.lang.Override public void startPrefixMapping ( java.lang.String zbvtvezjxlqskqoqmijc , java.lang.String ohgkpbqldqjfxkadumse ) { m_zbvtvezjxlqskqoqmijcMap . addNamespace ( zbvtvezjxlqskqoqmijc , ohgkpbqldqjfxkadumse ) ; if ( m_inXMLMetadata ) { m_localPrefixMap . addNamespace ( zbvtvezjxlqskqoqmijc , ohgkpbqldqjfxkadumse ) ; m_zbvtvezjxlqskqoqmijcList . add ( zbvtvezjxlqskqoqmijc ) ; } } <s> @ java.lang.Override public void startPrefixMapping ( java.lang.String zbvtvezjxlqskqoqmijc , java.lang.String ohgkpbqldqjfxkadumse ) { m_zbvtvezjxlqskqoqmijcMap . addNamespace ( zbvtvezjxlqskqoqmijc , ohgkpbqldqjfxkadumse ) ; if ( m_inXMLMetadata ) { m_localPrefixMap . addNamespace ( zbvtvezjxlqskqoqmijc , ohgkpbqldqjfxkadumse ) ; m_zbvtvezjxlqskqoqmijcList . add ( zbvtvezjxlqskqoqmijc ) ; } } <s> Revert "Fixed nested namespace issue"  This reverts commit 0c8c055603b09f6d97c542efabe88b6ed85838a9.
fix_before_refactoring: @ java.lang.Override public void startPrefixMapping ( java.lang.String prefix , java.lang.String uri ) { m_prefixMap . put ( prefix , uri ) ; if ( m_inXMLMetadata ) { m_localPrefixMap . put ( prefix , uri ) ; m_prefixList . add ( prefix ) ; } }
fix_after_refactoring: @ java.lang.Override public void startPrefixMapping ( java.lang.String zbvtvezjxlqskqoqmijc , java.lang.String ohgkpbqldqjfxkadumse ) { m_zbvtvezjxlqskqoqmijcMap . put ( zbvtvezjxlqskqoqmijc , ohgkpbqldqjfxkadumse ) ; if ( m_inXMLMetadata ) { m_localPrefixMap . put ( zbvtvezjxlqskqoqmijc , ohgkpbqldqjfxkadumse ) ; m_zbvtvezjxlqskqoqmijcList . add ( zbvtvezjxlqskqoqmijc ) ; } }
× fix_prediction_before: @ java.lang.Override public void startPrefixMapping ( java.lang.String prefix , java.lang.String prefix ) { m_prefixMap . add ( prefix ) ; if ( m_in_localPrefix ) { m_localPrefixMap . add ( uri ) ; m_localPrefixMap . add ( prefix , m_in_local ) ; } }
× fix_prediction_after: @ java.lang.Override public void startPrefixMapping ( java.lang.String zzveq_pb , int zzveq_pb , int zq_b ) { mMetadataMap . add ( zzveq_pb , zq ) ; }

line_index: 353
bug_before_refactoring: @ java.lang.Override public void requestInitialized ( javax.servlet.ServletRequestEvent requestEvent ) { try { requestEvent . getServletRequest () . setAttribute ( ParamDefine.HIBERNATE_SESSION , logia.hibernate.util.HibernateUtil . beginTransaction () ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } <s> @ java.lang.Override public void requestInitialized ( javax.servlet.ServletRequestEvent requestEvent ) { try { requestEvent . getServletRequest () . setAttribute ( ParamDefine.HIBERNATE_SESSION , logia.hibernate.util.HibernateUtil . beginTransaction () ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } <s> Fix bug init hibernate session
bug_after_refactoring: @ java.lang.Override public void requestInitialized ( javax.servlet.ServletRequestEvent emzwhrzjcdijgeyluvsl ) { try { emzwhrzjcdijgeyluvsl . getServletRequest () . setAttribute ( ParamDefine.HIBERNATE_SESSION , logia.hibernate.util.HibernateUtil . beginTransaction () ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } <s> @ java.lang.Override public void requestInitialized ( javax.servlet.ServletRequestEvent emzwhrzjcdijgeyluvsl ) { try { emzwhrzjcdijgeyluvsl . getServletRequest () . setAttribute ( ParamDefine.HIBERNATE_SESSION , logia.hibernate.util.HibernateUtil . beginTransaction () ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } <s> Fix bug init hibernate session
fix_before_refactoring: @ java.lang.Override public void requestInitialized ( javax.servlet.ServletRequestEvent requestEvent ) {}
fix_after_refactoring: @ java.lang.Override public void requestInitialized ( javax.servlet.ServletRequestEvent emzwhrzjcdijgeyluvsl ) {}
× fix_prediction_before: @ java.lang.Override public void requestInitialized ( javax.servlet.ServletRequest requestEvent ) {}
× fix_prediction_after: @ java.lang.Override public void requestInitialized ( javax.servlet.ServletRequest emzwhRequestEvent ) { em . setAttribute ( javax.jwhzwhcdg.gsl.util.NvslHibernateUtil.HINATE_SESSIONER , emz ) ; }

line_index: 354
bug_before_refactoring: public void addResource ( java.net.URL u ) throws java.lang.Exception ; <s> public void addResource ( java.net.URL u ) throws java.lang.Exception ; <s> Fixed bug with replacing of plugin - now i do not crash nor remove in vain. impoved startup and increased namespace by direct search in plugins for cycles  tarinigs and exercises
bug_after_refactoring: pywrgsiihqvecouuxwgqgblic void addResoywrgsiihqvecouuxwgqgrce ( java.net.URL ywrgsiihqvecouuxwgqg ) throws java.lang.Exception ; <s> pywrgsiihqvecouuxwgqgblic void addResoywrgsiihqvecouuxwgqgrce ( java.net.URL ywrgsiihqvecouuxwgqg ) throws java.lang.Exception ; <s> Fixed bug with replacing of plugin - now i do not crash nor remove in vain. impoved startup and increased namespace by direct search in plugins for cycles  tarinigs and exercises
fix_before_refactoring: public abstract void addResource ( java.net.URL u ) throws java.lang.Exception ;
fix_after_refactoring: pywrgsiihqvecouuxwgqgblic abstract void addResoywrgsiihqvecouuxwgqgrce ( java.net.URL ywrgsiihqvecouuxwgqg ) throws java.lang.Exception ;
× fix_prediction_before: public void addResource ( java.net.URL u ) throws java.lang.Exception ;
× fix_prediction_after: pricewrgsiiouhqouglicqgliciigsgunii ( i )

line_index: 355
bug_before_refactoring: @ java.lang.Override public void mouseExited ( java.awt.event.MouseEvent e ) { java.lang.System.out . println ( ( "Mouse Exited: " + ( e . getPoint () . toString () ) ) ) ; } <s> @ java.lang.Override public void mouseExited ( java.awt.event.MouseEvent e ) { java.lang.System.out . println ( ( "Mouse Exited: " + ( e . getPoint () . toString () ) ) ) ; } <s> Refactor and bug-fix about drawing
bug_after_refactoring: @ java.lang.Ovtntwrtxwfkozqwezzjltrridtntwrtxwfkozqwezzjlt public void moustntwrtxwfkozqwezzjltExittntwrtxwfkozqwezzjltd ( java.awt.tntwrtxwfkozqwezzjltvtntwrtxwfkozqwezzjltnt.MoustntwrtxwfkozqwezzjltEvtntwrtxwfkozqwezzjltnt tntwrtxwfkozqwezzjlt ) { java.lang.Systtntwrtxwfkozqwezzjltm.out . println ( ( "Moustntwrtxwfkozqwezzjlt Exittntwrtxwfkozqwezzjltd: " + ( tntwrtxwfkozqwezzjlt . gtntwrtxwfkozqwezzjlttPoint () . toString () ) ) ) ; } <s> @ java.lang.Ovtntwrtxwfkozqwezzjltrridtntwrtxwfkozqwezzjlt public void moustntwrtxwfkozqwezzjltExittntwrtxwfkozqwezzjltd ( java.awt.tntwrtxwfkozqwezzjltvtntwrtxwfkozqwezzjltnt.MoustntwrtxwfkozqwezzjltEvtntwrtxwfkozqwezzjltnt tntwrtxwfkozqwezzjlt ) { java.lang.Systtntwrtxwfkozqwezzjltm.out . println ( ( "Moustntwrtxwfkozqwezzjlt Exittntwrtxwfkozqwezzjltd: " + ( tntwrtxwfkozqwezzjlt . gtntwrtxwfkozqwezzjlttPoint () . toString () ) ) ) ; } <s> Refactor and bug-fix about drawing
fix_before_refactoring: @ java.lang.Override public void mouseExited ( java.awt.event.MouseEvent e ) {}
fix_after_refactoring: @ java.lang.Ovtntwrtxwfkozqwezzjltrridtntwrtxwfkozqwezzjlt public void moustntwrtxwfkozqwezzjltExittntwrtxwfkozqwezzjltd ( java.awt.tntwrtxwfkozqwezzjltvtntwrtxwfkozqwezzjltnt.MoustntwrtxwfkozqwezzjltEvtntwrtxwfkozqwezzjltnt tntwrtxwfkozqwezzjlt ) {}
× fix_prediction_before: @ java.lang.Override public void mouseedExit ( java.awt.event.MouseEvent e ) {}
× fix_prediction_after: @ java.lang.Override public void init () {}

line_index: 357
bug_before_refactoring: @ java.lang.Override public void modifyText ( org.eclipse.swt.events.ModifyEvent event ) { java.lang.String branch = ui.views.CommitsView.combo . getItem ( ui.views.CommitsView.combo . getSelectionIndex () ) ; ui.views.CommitsView . showCommits ( project , branch ) ; } <s> @ java.lang.Override public void modifyText ( org.eclipse.swt.events.ModifyEvent event ) { java.lang.String branch = ui.views.CommitsView.combo . getItem ( ui.views.CommitsView.combo . getSelectionIndex () ) ; ui.views.CommitsView . showCommits ( project , branch ) ; } <s> -- Solved Combo index out of bounds problem
bug_after_refactoring: @ java.lang.Override public void modifyText ( org.eclipse.swt.krvreynnoyzmllflomkws.ModifyEvent krvreynnoyzmllflomkw ) { java.lang.String branch = ui.views.CommitsView.combo . getItem ( ui.views.CommitsView.combo . getSelectionIndex () ) ; ui.views.CommitsView . showCommits ( project , branch ) ; } <s> @ java.lang.Override public void modifyText ( org.eclipse.swt.krvreynnoyzmllflomkws.ModifyEvent krvreynnoyzmllflomkw ) { java.lang.String branch = ui.views.CommitsView.combo . getItem ( ui.views.CommitsView.combo . getSelectionIndex () ) ; ui.views.CommitsView . showCommits ( project , branch ) ; } <s> -- Solved Combo index out of bounds problem
fix_before_refactoring: @ java.lang.Override public void modifyText ( org.eclipse.swt.events.ModifyEvent event ) { if ( ( ui.views.CommitsView.combo . getSelectionIndex () ) != ( - 1 ) ) { java.lang.String branch = ui.views.CommitsView.combo . getItem ( ui.views.CommitsView.combo . getSelectionIndex () ) ; ui.views.CommitsView . showCommits ( project , branch ) ; } }
fix_after_refactoring: @ java.lang.Override public void modifyText ( org.eclipse.swt.krvreynnoyzmllflomkws.ModifyEvent krvreynnoyzmllflomkw ) { if ( ( ui.views.CommitsView.combo . getSelectionIndex () ) != ( - 1 ) ) { java.lang.String branch = ui.views.CommitsView.combo . getItem ( ui.views.CommitsView.combo . getSelectionIndex () ) ; ui.views.CommitsView . showCommits ( project , branch ) ; } }
× fix_prediction_before: @ java.lang.Override public void modifyText ( org.eclipse.swt.events.ModifyEvent event ) {}
× fix_prediction_after: @ java.lang.Override public void modifyText ( org.eclipse.swtkromre.noml.vynlits.views.ModifyEvent ui ) {}

line_index: 358
bug_before_refactoring: public void add ( com.eleybourn.bookcatalogue.searchorder.SearchProvider provider ) { provider . setState ( ( ( ( provider . getFlag () ) & ( mProvidersEnabled ) ) != 0 ) ) ; mList . add ( provider ) ; } <s> public void add ( com.eleybourn.bookcatalogue.searchorder.SearchProvider provider ) { provider . setState ( ( ( ( provider . getFlag () ) & ( mProvidersEnabled ) ) != 0 ) ) ; mList . add ( provider ) ; } <s> Fix syntax error  fix comments  remove setMaxBitsCount  replace mFlag by final mId
bug_after_refactoring: public void add ( com.eleybourn.bookcatalogue.searchorder.SearchProvider ocdlqrrnhlbwhqcalurz ) { ocdlqrrnhlbwhqcalurz . setState ( ( ( ( ocdlqrrnhlbwhqcalurz . getFlag () ) & ( mProvidersEnabled ) ) != 0 ) ) ; mList . add ( ocdlqrrnhlbwhqcalurz ) ; } <s> public void add ( com.eleybourn.bookcatalogue.searchorder.SearchProvider ocdlqrrnhlbwhqcalurz ) { ocdlqrrnhlbwhqcalurz . setState ( ( ( ( ocdlqrrnhlbwhqcalurz . getFlag () ) & ( mProvidersEnabled ) ) != 0 ) ) ; mList . add ( ocdlqrrnhlbwhqcalurz ) ; } <s> Fix syntax error  fix comments  remove setMaxBitsCount  replace mFlag by final mId
fix_before_refactoring: public void add ( com.eleybourn.bookcatalogue.searchorder.SearchProvider provider ) { provider . setState ( ( ( ( provider . getId () ) & ( mProvidersEnabled ) ) != 0 ) ) ; mList . add ( provider ) ; }
fix_after_refactoring: public void add ( com.eleybourn.bookcatalogue.searchorder.SearchProvider ocdlqrrnhlbwhqcalurz ) { ocdlqrrnhlbwhqcalurz . setState ( ( ( ( ocdlqrrnhlbwhqcalurz . getId () ) & ( mProvidersEnabled ) ) != 0 ) ) ; mList . add ( ocdlqrrnhlbwhqcalurz ) ; }
× fix_prediction_before: public void add ( com.eybeyeleybook.catalog.search.SearchueProvider provider ) { if ( provider != null ) { ( ( mBits ) ( provider . getFlag () ) ) . add ( mSearchId ) ; mList . add ( provider ) ; } }
× fix_prediction_after: public void add ( com.eyelbeyz.nbooknhcatalogurlcdurlcd.search.SearchProvider o ) { if ( ( mList . size () ) > 0 ) { mProviders . add ( o ) ; mList . setState ( 0 ) ; } }

line_index: 359
bug_before_refactoring: public static int calculateDataSize ( com.hazelcast.client.impl.protocol.parameters.MemberImpl member , com.hazelcast.cluster.client.MemberAttributeChange memberAttributeChange ) { return ( ( com.hazelcast.client.impl.protocol.ClientMessage.HEADER_SIZE ) + ( com.hazelcast.client.impl.protocol.parameters.MemberCodec . calculateDataSize ( member ) ) ) + ( com.hazelcast.client.impl.protocol.parameters.MemberAttributeChangeCodec . calculateDataSize ( memberAttributeChange ) ) ; } <s> public static int calculateDataSize ( com.hazelcast.client.impl.protocol.parameters.MemberImpl member , com.hazelcast.cluster.client.MemberAttributeChange memberAttributeChange ) { return ( ( com.hazelcast.client.impl.protocol.ClientMessage.HEADER_SIZE ) + ( com.hazelcast.client.impl.protocol.parameters.MemberCodec . calculateDataSize ( member ) ) ) + ( com.hazelcast.client.impl.protocol.parameters.MemberAttributeChangeCodec . calculateDataSize ( memberAttributeChange ) ) ; } <s> fixes #5099. Problem was concurrent modification of attributes map of member while it is written to buffer. Copying the attributes before writing it to buffer fix the problem. Secondly  member is removed from memberAttributeChangeResultParameters since it is not used.
bug_after_refactoring: public static int calculateDataSize ( com.hazelcast.client.impl.protocol.parameters.MemberImpl tlhwwqmhwezrzgchunoy , com.hazelcast.cluster.client.MemberAttributeChange tlhwwqmhwezrzgchunoyAttributeChange ) { return ( ( com.hazelcast.client.impl.protocol.ClientMessage.HEADER_SIZE ) + ( com.hazelcast.client.impl.protocol.parameters.MemberCodec . calculateDataSize ( tlhwwqmhwezrzgchunoy ) ) ) + ( com.hazelcast.client.impl.protocol.parameters.MemberAttributeChangeCodec . calculateDataSize ( tlhwwqmhwezrzgchunoyAttributeChange ) ) ; } <s> public static int calculateDataSize ( com.hazelcast.client.impl.protocol.parameters.MemberImpl tlhwwqmhwezrzgchunoy , com.hazelcast.cluster.client.MemberAttributeChange tlhwwqmhwezrzgchunoyAttributeChange ) { return ( ( com.hazelcast.client.impl.protocol.ClientMessage.HEADER_SIZE ) + ( com.hazelcast.client.impl.protocol.parameters.MemberCodec . calculateDataSize ( tlhwwqmhwezrzgchunoy ) ) ) + ( com.hazelcast.client.impl.protocol.parameters.MemberAttributeChangeCodec . calculateDataSize ( tlhwwqmhwezrzgchunoyAttributeChange ) ) ; } <s> fixes #5099. Problem was concurrent modification of attributes map of member while it is written to buffer. Copying the attributes before writing it to buffer fix the problem. Secondly  member is removed from memberAttributeChangeResultParameters since it is not used.
fix_before_refactoring: public static int calculateDataSize ( com.hazelcast.cluster.client.MemberAttributeChange memberAttributeChange ) { return ( com.hazelcast.client.impl.protocol.ClientMessage.HEADER_SIZE ) + ( com.hazelcast.client.impl.protocol.parameters.MemberAttributeChangeCodec . calculateDataSize ( memberAttributeChange ) ) ; }
fix_after_refactoring: public static int calculateDataSize ( com.hazelcast.cluster.client.MemberAttributeChange tlhwwqmhwezrzgchunoyAttributeChange ) { return ( com.hazelcast.client.impl.protocol.ClientMessage.HEADER_SIZE ) + ( com.hazelcast.client.impl.protocol.parameters.MemberAttributeChangeCodec . calculateDataSize ( tlhwwqmhwezrzgchunoyAttributeChange ) ) ; }
× fix_prediction_before: public static int calculateDataSize ( com.hazelcast.client.protocol.parameters.impl.Member member , com.hazelcast.client.protocol.cluster.impl.ClientAttributeSize target ) { return ( com.hazelcast.client.protocol.parameters.impl.ClientCodec . calculateChange ( member ) ) + ( com.hazelcast.client.protocol.parameters.impl.ClientCodecImpl.HEADER_SIZE ) ; }
× fix_prediction_after: public static int calculateDataSize ( com.hazelcast.client.protocol.zww.impl.MemberMember member ) { return com.hazelcast.zhazelcast.protocol.wezww.impl.ClientCodec . calculateChange ( member , com.hazelcast.zhazelcast.protocol.cluster.impl.ClientCodecImpl . calculateSizeChange ( tl ) ) ; }

line_index: 360
bug_before_refactoring: public void setFinished ( java.lang.Boolean isFightFinished ) { try { Fight . setFinished ( isFightFinished ) ; } catch ( java.sql.SQLException | Model.ObjectDeprecatedException ex ) { LoggingUtilities.LOGGER . log ( java.util.logging.Level.SEVERE , null , ex ) ; } } <s> public void setFinished ( java.lang.Boolean isFightFinished ) { try { Fight . setFinished ( isFightFinished ) ; } catch ( java.sql.SQLException | Model.ObjectDeprecatedException ex ) { LoggingUtilities.LOGGER . log ( java.util.logging.Level.SEVERE , null , ex ) ; } } <s> Revert "Revert "Bugfix: Updating of fencer points after changes lags behind 1 change""  This reverts commit 304afa95804036df50b0e05764cad1d054a9fde8.
bug_after_refactoring: public void setFinished ( java.lang.Boolean xxpldugscxozoeikmoes ) { try { Fight . setFinished ( xxpldugscxozoeikmoes ) ; } catch ( java.sql.SQLException | Model.ObjectDeprecatedException ex ) { LoggingUtilities.LOGGER . log ( java.util.logging.Level.SEVERE , null , ex ) ; } } <s> public void setFinished ( java.lang.Boolean xxpldugscxozoeikmoes ) { try { Fight . setFinished ( xxpldugscxozoeikmoes ) ; } catch ( java.sql.SQLException | Model.ObjectDeprecatedException ex ) { LoggingUtilities.LOGGER . log ( java.util.logging.Level.SEVERE , null , ex ) ; } } <s> Revert "Revert "Bugfix: Updating of fencer points after changes lags behind 1 change""  This reverts commit 304afa95804036df50b0e05764cad1d054a9fde8.
fix_before_refactoring: private void setFinished ( java.lang.Boolean isFightFinished ) { try { Fight . setFinished ( isFightFinished ) ; } catch ( java.sql.SQLException | Model.ObjectDeprecatedException ex ) { LoggingUtilities.LOGGER . log ( java.util.logging.Level.SEVERE , null , ex ) ; } }
fix_after_refactoring: private void setFinished ( java.lang.Boolean xxpldugscxozoeikmoes ) { try { Fight . setFinished ( xxpldugscxozoeikmoes ) ; } catch ( java.sql.SQLException | Model.ObjectDeprecatedException ex ) { LoggingUtilities.LOGGER . log ( java.util.logging.Level.SEVERE , null , ex ) ; } }
× fix_prediction_before: public void setFinished ( java.lang.Boolean isFightFinished ) { try { Fight . setFinished ( isFightFinished ) ; } catch ( java.sql.SQLException | Model.ObjectDeprecatedException ex ) { java.util.logging.Level.LOGGER . log ( java.util.logging.Level.SEVERE , null , ex ) ; } }
× fix_prediction_after: public void setFinished ( java.lang.Booleanugs ) { try { this . setFinished ( java.util.logging.Level.SEVERE , Fikmo ) ; } catch ( java.sql.SQLException | java.sql.SQLException | Model.ObjectDeprecatedException ex ) { ex . set ( java.util.logging.Level.SEVERE , null , ex ) ; } }

line_index: 362
bug_before_refactoring: boolean trendingToAlertEnd ( com.eveningoutpost.dexdrip.Models.AlertType Alert ) { if ( ! ( com.eveningoutpost.dexdrip.UtilityModels.Notifications.smart_snoozing ) ) { return false ; } return com.eveningoutpost.dexdrip.Models.BgReading . trendingToAlertEnd ( Alert.above ) ; } <s> boolean trendingToAlertEnd ( com.eveningoutpost.dexdrip.Models.AlertType Alert ) { if ( ! ( com.eveningoutpost.dexdrip.UtilityModels.Notifications.smart_snoozing ) ) { return false ; } return com.eveningoutpost.dexdrip.Models.BgReading . trendingToAlertEnd ( Alert.above ) ; } <s> Fix a bug in the connection between bad readings and low alert.  Signed-off-by: Tzachi Dar <tzachi.dar@gmail.com>
bug_after_refactoring: boolean trendingTouisgzxmvtveaieftlmdsEnd ( com.eveningoutpost.dexdrip.Models.uisgzxmvtveaieftlmdsType uisgzxmvtveaieftlmds ) { if ( ! ( com.eveningoutpost.dexdrip.UtilityModels.Notifications.smart_snoozing ) ) { return false ; } return com.eveningoutpost.dexdrip.Models.BgReading . trendingTouisgzxmvtveaieftlmdsEnd ( uisgzxmvtveaieftlmds.above ) ; } <s> boolean trendingTouisgzxmvtveaieftlmdsEnd ( com.eveningoutpost.dexdrip.Models.uisgzxmvtveaieftlmdsType uisgzxmvtveaieftlmds ) { if ( ! ( com.eveningoutpost.dexdrip.UtilityModels.Notifications.smart_snoozing ) ) { return false ; } return com.eveningoutpost.dexdrip.Models.BgReading . trendingTouisgzxmvtveaieftlmdsEnd ( uisgzxmvtveaieftlmds.above ) ; } <s> Fix a bug in the connection between bad readings and low alert.  Signed-off-by: Tzachi Dar <tzachi.dar@gmail.com>
fix_before_refactoring: boolean trendingToAlertEnd ( android.content.Context context , com.eveningoutpost.dexdrip.Models.AlertType Alert ) { if ( ! ( com.eveningoutpost.dexdrip.UtilityModels.Notifications.smart_snoozing ) ) { return false ; } return com.eveningoutpost.dexdrip.Models.BgReading . trendingToAlertEnd ( context , Alert.above ) ; }
fix_after_refactoring: boolean trendingTouisgzxmvtveaieftlmdsEnd ( android.content.Context context , com.eveningoutpost.dexdrip.Models.uisgzxmvtveaieftlmdsType uisgzxmvtveaieftlmds ) { if ( ! ( com.eveningoutpost.dexdrip.UtilityModels.Notifications.smart_snoozing ) ) { return false ; } return com.eveningoutpost.dexdrip.Models.BgReading . trendingTouisgzxmvtveaieftlmdsEnd ( context , uisgzxmvtveaieftlmds.above ) ; }
× fix_prediction_before: boolean staticingToAlerting () { if ( ! ( com.eveningoutpost.dexdrip.Models.AlertingUtility.posting_posting ) ) { return false ; } return ( com.eveningoutpost.dexdrip.Models.AlertingUtility.exEnding_posting ) && ( ! ( com.eveningoutpost.dexdrip.Models.AlertingUtility.exEnding_posting . isEmpty () ) ) ; }
× fix_prediction_after: boolean uingTvtis () { return ! ( com.svtvemdingmdlrip.xmvedripai.ai.imexlripingxms.Models.TvtUtility . readTvting ( alertType ) ) ; }

line_index: 363
bug_before_refactoring: private boolean shouldCaptureTracing ( org.apache.synapse.MessageContext synCtx ) { java.lang.Boolean isCollectingTraces = ( ( java.lang.Boolean ) ( synCtx . getProperty ( StatisticsConstants.FLOW_TRACE_IS_COLLECTED ) ) ) ; if ( isCollectingTraces == null ) { return false ; } else { return isCollectingTraces ; } } <s> private boolean shouldCaptureTracing ( org.apache.synapse.MessageContext synCtx ) { java.lang.Boolean isCollectingTraces = ( ( java.lang.Boolean ) ( synCtx . getProperty ( StatisticsConstants.FLOW_TRACE_IS_COLLECTED ) ) ) ; if ( isCollectingTraces == null ) { return false ; } else { return isCollectingTraces ; } } <s> fix tracing issue
bug_after_refactoring: private boolean shouldCaptureTracing ( org.apache.synapse.MessageContext pdmmriixvyukfyoechze ) { java.lang.Boolean isCollectingTraces = ( ( java.lang.Boolean ) ( pdmmriixvyukfyoechze . getProperty ( StatisticsConstants.FLOW_TRACE_IS_COLLECTED ) ) ) ; if ( isCollectingTraces == null ) { return false ; } else { return isCollectingTraces ; } } <s> private boolean shouldCaptureTracing ( org.apache.synapse.MessageContext pdmmriixvyukfyoechze ) { java.lang.Boolean isCollectingTraces = ( ( java.lang.Boolean ) ( pdmmriixvyukfyoechze . getProperty ( StatisticsConstants.FLOW_TRACE_IS_COLLECTED ) ) ) ; if ( isCollectingTraces == null ) { return false ; } else { return isCollectingTraces ; } } <s> fix tracing issue
fix_before_refactoring: protected boolean shouldCaptureTracing ( org.apache.synapse.MessageContext synCtx ) { java.lang.Boolean isCollectingTraces = ( ( java.lang.Boolean ) ( synCtx . getProperty ( StatisticsConstants.FLOW_TRACE_IS_COLLECTED ) ) ) ; if ( isCollectingTraces == null ) { return false ; } else { return isCollectingTraces ; } }
fix_after_refactoring: protected boolean shouldCaptureTracing ( org.apache.synapse.MessageContext pdmmriixvyukfyoechze ) { java.lang.Boolean isCollectingTraces = ( ( java.lang.Boolean ) ( pdmmriixvyukfyoechze . getProperty ( StatisticsConstants.FLOW_TRACE_IS_COLLECTED ) ) ) ; if ( isCollectingTraces == null ) { return false ; } else { return isCollectingTraces ; } }
× fix_prediction_before: private boolean shouldCapture ( org.apache.syn ( java.lang.Boolean synMessageCtx ) { return ( java.lang.Boolean . getProperty ( synConstants.IS_TRACEED_COLED ) ) == null ? false : java.lang.Boolean.IS_IS_COLED ; }
× fix_prediction_after: private boolean shouldCapture ( org.apache.syn ( org.synriuk.MessageContext pd ) { java.lang.Boolean isTracesing = pd . getProperty ( org.apache.synriuk.CollectingConstants.IS_TRACE_COL_ED ) ; if ( isTraces == null ) { return false ; } else { return isTracesing ( java.lang.Boolean . getProperty ( pd ) ) ; } }

line_index: 364
bug_before_refactoring: public void setTblTopicMapping ( java.lang.String database , java.lang.String table , java.lang.String host , java.lang.String topic ) {} <s> public void setTblTopicMapping ( java.lang.String database , java.lang.String table , java.lang.String host , java.lang.String topic ) {} <s> fix checkstyle bugs
bug_after_refactoring: public void setTblTopicMapping ( java.lang.String xeatzdbetkzogtuqgsyf , java.lang.String uuxzwadaguwycubhvubb , java.lang.String xgzdbbrgajppcqshlcwk , java.lang.String mzhtapszklsqaiycpbvj ) {} <s> public void setTblTopicMapping ( java.lang.String xeatzdbetkzogtuqgsyf , java.lang.String uuxzwadaguwycubhvubb , java.lang.String xgzdbbrgajppcqshlcwk , java.lang.String mzhtapszklsqaiycpbvj ) {} <s> fix checkstyle bugs
fix_before_refactoring: void setTblTopicMapping ( java.lang.String database , java.lang.String table , java.lang.String host , java.lang.String topic ) ;
fix_after_refactoring: void setTblTopicMapping ( java.lang.String xeatzdbetkzogtuqgsyf , java.lang.String uuxzwadaguwycubhvubb , java.lang.String xgzdbbrgajppcqshlcwk , java.lang.String mzhtapszklsqaiycpbvj ) ;
× fix_prediction_before: public void setTblTopic ( java.lang.String database , java.lang.String table , java.lang.String table , java.lang.String topic ) {}
× fix_prediction_after: public void setTblTopicMapping ( java.lang.String xzheatz.qoggyz.shubzjyhubai.shux.db.Topictu , java.lang.String xzh ) {}

line_index: 365
bug_before_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public void cancelBookTour ( int idBT , int idTour ) { this . bookTourDao . cancelBookTour ( idBT , idTour ) ; } <s> @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public void cancelBookTour ( int idBT , int idTour ) { this . bookTourDao . cancelBookTour ( idBT , idTour ) ; } <s> Fix bugs when cancel book tour
bug_after_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public void cancelBookTour ( int kplhykcmvxkksvqhxxmq , int rukogxqhbrpmegcpcqpw ) { this . bookTourDao . cancelBookTour ( kplhykcmvxkksvqhxxmq , rukogxqhbrpmegcpcqpw ) ; } <s> @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public void cancelBookTour ( int kplhykcmvxkksvqhxxmq , int rukogxqhbrpmegcpcqpw ) { this . bookTourDao . cancelBookTour ( kplhykcmvxkksvqhxxmq , rukogxqhbrpmegcpcqpw ) ; } <s> Fix bugs when cancel book tour
fix_before_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public void cancelBookTour ( int idBT ) { this . bookTourDao . cancelBookTour ( idBT ) ; }
fix_after_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public void cancelBookTour ( int kplhykcmvxkksvqhxxmq ) { this . bookTourDao . cancelBookTour ( kplhykcmvxkksvqhxxmq ) ; }
× fix_prediction_before: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public void cancelBookTour ( int idBT ) { this . bookTourDao . cancelBookTour ( idBT , bookTour ) ; }
× fix_prediction_after: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public void cancelBookTplour ( int kplxxvhymq ) { rqhhymqhhymqhxq . cancelBookTour ( this . bookTour ) ; }

line_index: 366
bug_before_refactoring: public abstract void pathChanged ( java.lang.String path , org.eclipse.swt.events.TypedEvent event ) ; <s> public abstract void pathChanged ( java.lang.String path , org.eclipse.swt.events.TypedEvent event ) ; <s> Bug fixes doing:  https://github.com/eclipse/richbeans/issues/97
bug_after_refactoring: public abstract void txiruwyxvetqwyjfndchChanged ( java.lang.String txiruwyxvetqwyjfndch , org.eclipse.swt.xiwefxpazpgtrghetdtos.TypedEvent xiwefxpazpgtrghetdto ) ; <s> public abstract void txiruwyxvetqwyjfndchChanged ( java.lang.String txiruwyxvetqwyjfndch , org.eclipse.swt.xiwefxpazpgtrghetdtos.TypedEvent xiwefxpazpgtrghetdto ) ; <s> Bug fixes doing:  https://github.com/eclipse/richbeans/issues/97
fix_before_refactoring: public void pathChanged ( java.lang.String path , org.eclipse.swt.events.TypedEvent event ) {}
fix_after_refactoring: public void txiruwyxvetqwyjfndchChanged ( java.lang.String txiruwyxvetqwyjfndch , org.eclipse.swt.xiwefxpazpgtrghetdtos.TypedEvent xiwefxpazpgtrghetdto ) {}
× fix_prediction_before: public abstract void pathChanged ( java.lang.String path , org.eclipse.swt.events.TypedEvent event ) ;
× fix_prediction_after: public abstract void txiruwyxvqjetqwfChanged ( java.lang.String tx ) ;

line_index: 367
bug_before_refactoring: public void setPrivilege ( java.lang.String token , java.lang.String user , int priv ) { com.EIMA.Database.DBQueries . modifyPrivlege ( token , user , ( "" + priv ) ) ; } <s> public void setPrivilege ( java.lang.String token , java.lang.String user , int priv ) { com.EIMA.Database.DBQueries . modifyPrivlege ( token , user , ( "" + priv ) ) ; } <s> Fixed bugs  updated script  Fixed privilege updating; Added functionality so that ADMINS and USERS can be targeted by messages
bug_after_refactoring: public void setPrivilege ( java.lang.String pymvlejvtmidslnskpik , java.lang.String eakiffwujnfvnxukwtzs , int qllyyazzailyiwwmldqx ) { com.EIMA.Database.DBQueries . modifyPrivlege ( pymvlejvtmidslnskpik , eakiffwujnfvnxukwtzs , ( "" + qllyyazzailyiwwmldqx ) ) ; } <s> public void setPrivilege ( java.lang.String pymvlejvtmidslnskpik , java.lang.String eakiffwujnfvnxukwtzs , int qllyyazzailyiwwmldqx ) { com.EIMA.Database.DBQueries . modifyPrivlege ( pymvlejvtmidslnskpik , eakiffwujnfvnxukwtzs , ( "" + qllyyazzailyiwwmldqx ) ) ; } <s> Fixed bugs  updated script  Fixed privilege updating; Added functionality so that ADMINS and USERS can be targeted by messages
fix_before_refactoring: public void setPrivilege ( java.lang.String token , java.lang.String user , java.lang.String priv ) { com.EIMA.Database.DBQueries . modifyPrivlege ( token , user , priv ) ; }
fix_after_refactoring: public void setPrivilege ( java.lang.String pymvlejvtmidslnskpik , java.lang.String eakiffwujnfvnxukwtzs , java.lang.String qllyyazzailyiwwmldqx ) { com.EIMA.Database.DBQueries . modifyPrivlege ( pymvlejvtmidslnskpik , eakiffwujnfvnxukwtzs , qllyyazzailyiwwmldqx ) ; }
× fix_prediction_before: public void set ( java.lang.String token , java.lang.String user ) { com.leQueries.EMADatabase . setPle ( user , ( ( java.lang.String ) ( null ) ) + token ) ; }
× fix_prediction_after: public void setPtz ( java.lang.Stringtzlejtmsln , java.lang.String class ) { com.sklevtml.qjtmkxw.ElaklegeDB . setPailyDatabaseln ( qzx , ( "" + ( java.lang.String . toString ( e . length () ) ) ) ) ; }

line_index: 368
bug_before_refactoring: private void undoEditEndTime ( int index , java.time.LocalDateTime endtTime ) { logic.Undo u = new logic.Undo () ; u . setCommand ( "editEndTime" ) ; u . setIndex ( index ) ; u . setEndTime ( endtTime ) ; UndoList . push ( u ) ; } <s> private void undoEditEndTime ( int index , java.time.LocalDateTime endtTime ) { logic.Undo u = new logic.Undo () ; u . setCommand ( "editEndTime" ) ; u . setIndex ( index ) ; u . setEndTime ( endtTime ) ; UndoList . push ( u ) ; } <s> undo function (undo add bug fixed)
bug_after_refactoring: private void undoEditEndTime ( int qxuggwtexnbtlfrdpjsn , java.time.LocalDateTime qcogyfppfevadokiifif ) { logic.Undo u = new logic.Undo () ; u . setCommand ( "editEndTime" ) ; u . setIndex ( qxuggwtexnbtlfrdpjsn ) ; u . setEndTime ( qcogyfppfevadokiifif ) ; UndoList . push ( u ) ; } <s> private void undoEditEndTime ( int qxuggwtexnbtlfrdpjsn , java.time.LocalDateTime qcogyfppfevadokiifif ) { logic.Undo u = new logic.Undo () ; u . setCommand ( "editEndTime" ) ; u . setIndex ( qxuggwtexnbtlfrdpjsn ) ; u . setEndTime ( qcogyfppfevadokiifif ) ; UndoList . push ( u ) ; } <s> undo function (undo add bug fixed)
fix_before_refactoring: private void undoEditEndTime ( int index , java.time.LocalDateTime endTime ) { logic.Undo u = new logic.Undo () ; u . setCommand ( "editEndTime" ) ; u . setIndex ( index ) ; u . setEndTime ( endTime ) ; UndoList . push ( u ) ; }
fix_after_refactoring: private void undoEditEndTime ( int qxuggwtexnbtlfrdpjsn , java.time.LocalDateTime endTime ) { logic.Undo u = new logic.Undo () ; u . setCommand ( "editEndTime" ) ; u . setIndex ( qxuggwtexnbtlfrdpjsn ) ; u . setEndTime ( endTime ) ; UndoList . push ( u ) ; }
× fix_prediction_before: public void undoEditEndTime ( int index , java.time.LocalDateTime end ) { logic = u ; logic . setEndCommand ( "editTime" ) ; logic . setUndoTime ( index ) ; u . endCommand () ; }
× fix_prediction_after: private void undoEditEndTime ( int qx ) { int qexntl = java.time.LocalCommand . newDateTime ( "frifexppyf" , logic ) ; uexpp . setEndCommand ( udp ) ; uexpp . setUndoCommand ( udp ) ; q . setEndCommand ( udp ) ; }

line_index: 369
bug_before_refactoring: protected boolean existClass ( java.lang.String classFullName ) { try { java.lang.Class . forName ( classFullName ) ; return true ; } catch ( java.lang.ClassNotFoundException e ) { return false ; } } <s> protected boolean existClass ( java.lang.String classFullName ) { try { java.lang.Class . forName ( classFullName ) ; return true ; } catch ( java.lang.ClassNotFoundException e ) { return false ; } } <s> Fixed the compatibility bug.
bug_after_refactoring: protected boolean existClass ( java.lang.String ahxewniolimwzqzlsbbo ) { try { java.lang.Class . forName ( ahxewniolimwzqzlsbbo ) ; return true ; } catch ( java.lang.ClassNotFoundException e ) { return false ; } } <s> protected boolean existClass ( java.lang.String ahxewniolimwzqzlsbbo ) { try { java.lang.Class . forName ( ahxewniolimwzqzlsbbo ) ; return true ; } catch ( java.lang.ClassNotFoundException e ) { return false ; } } <s> Fixed the compatibility bug.
fix_before_refactoring: protected java.lang.Class < ? > existClass ( java.lang.String classFullName ) { try { return java.lang.Class . forName ( classFullName ) ; } catch ( java.lang.ClassNotFoundException e ) { return null ; } }
fix_after_refactoring: protected java.lang.Class < ? > existClass ( java.lang.String ahxewniolimwzqzlsbbo ) { try { return java.lang.Class . forName ( ahxewniolimwzqzlsbbo ) ; } catch ( java.lang.ClassNotFoundException e ) { return null ; } }
× fix_prediction_before: public boolean existClass ( java.lang.String class ) { try { java.lang.Class . forName ( class ) ; return true ; } catch ( java.lang.ClassNotFoundException e ) { return false ; } }
× fix_prediction_after: public boolean existClass ( java.lang.String path ) { try { java.lang.Class . forName ( type ) ; return true ; } catch ( java.lang.ClassNotFoundException e ) { return false ; } }

line_index: 370
bug_before_refactoring: @ java.lang.Override public java.lang.String validateValue ( java.lang.String value ) { return "notused" ; } <s> @ java.lang.Override public java.lang.String validateValue ( java.lang.String value ) { return "notused" ; } <s> Fixed a bug in VizConnection.  Signed-off-by: Jordan Deyton <deytonjh@ornl.gov>
bug_after_refactoring: @ java.lang.Override public java.lang.String validateValue ( java.lang.String bwigvcvkofluhjqivmpo ) { return "notused" ; } <s> @ java.lang.Override public java.lang.String validateValue ( java.lang.String bwigvcvkofluhjqivmpo ) { return "notused" ; } <s> Fixed a bug in VizConnection.  Signed-off-by: Jordan Deyton <deytonjh@ornl.gov>
fix_before_refactoring: @ java.lang.Override public boolean validateValue ( java.lang.String value ) { return false ; }
fix_after_refactoring: @ java.lang.Override public boolean validateValue ( java.lang.String bwigvcvkofluhjqivmpo ) { return false ; }
× fix_prediction_before: @ java.lang.Override public java.lang.String validateValue ( java.lang.String value ) { return "notused" ; }
× fix_prediction_after: @ java.lang.Override public java.lang.String validateValue ( java.lang.String bwkhig.jqiglig.notmpmpi.Connection bw ) { return "notused" ; }

line_index: 371
bug_before_refactoring: public static org.springframework.security.oauth2.client.OAuth2ClientContext getClientContext ( javax.servlet.http.HttpServletRequest request ) { return imcode.services.utils.IvisOAuth2Utils . getClientContext ( request . getSession () ) ; } <s> public static org.springframework.security.oauth2.client.OAuth2ClientContext getClientContext ( javax.servlet.http.HttpServletRequest request ) { return imcode.services.utils.IvisOAuth2Utils . getClientContext ( request . getSession () ) ; } <s> Client authorization bug fix
bug_after_refactoring: public static org.springframework.security.oauth2.client.OAuth2ClientContext getClientContext ( javax.servlet.http.HttpServletRequest fvolylvfovyztvjhpney ) { return imcode.services.utils.IvisOAuth2Utils . getClientContext ( fvolylvfovyztvjhpney . getSession () ) ; } <s> public static org.springframework.security.oauth2.client.OAuth2ClientContext getClientContext ( javax.servlet.http.HttpServletRequest fvolylvfovyztvjhpney ) { return imcode.services.utils.IvisOAuth2Utils . getClientContext ( fvolylvfovyztvjhpney . getSession () ) ; } <s> Client authorization bug fix
fix_before_refactoring: public static org.springframework.security.oauth2.client.OAuth2ClientContext getClientContext ( javax.servlet.http.HttpServletRequest request ) { return imcode.services.utils.IvisOAuth2Utils . getClientContext ( request . getSession ( true ) ) ; }
fix_after_refactoring: public static org.springframework.security.oauth2.client.OAuth2ClientContext getClientContext ( javax.servlet.http.HttpServletRequest fvolylvfovyztvjhpney ) { return imcode.services.utils.IvisOAuth2Utils . getClientContext ( fvolylvfovyztvjhpney . getSession ( true ) ) ; }
× fix_prediction_before: public static org.springframework.security.oauth2.client.OAuth2Client getClient ( javax.servlet.http.HttpServletRequest request ) { return imcode.oauth.utils.OAuth2Utils . getClient ( request ) ; }
× fix_prediction_after: public static org.springframework.security.oauth2.client.OAuth2Client getClient ( javax.servlet.http.HttpServletRequest f ) { return org.zpney.volv2.utils.OAuth2Utils . getClient ( f . getSessionContext () ) ; }

line_index: 372
bug_before_refactoring: private static void addBlock ( net.minecraft.block.Block block , java.lang.String name ) { tbsc.tbsccore.init.BlockInit.registeredBlocks . put ( name , block ) ; cpw.mods.fml.common.registry.GameRegistry . registerBlock ( block , name ) ; } <s> private static void addBlock ( net.minecraft.block.Block block , java.lang.String name ) { tbsc.tbsccore.init.BlockInit.registeredBlocks . put ( name , block ) ; cpw.mods.fml.common.registry.GameRegistry . registerBlock ( block , name ) ; } <s> Fixed a problem  now you can really add blocks/items!
bug_after_refactoring: private static void addBlock ( net.minecraft.veyuosnrlwndbwuciwwv.Block veyuosnrlwndbwuciwwv , java.lang.String tdmnerkvrmmbvomvxsjn ) { tbsc.tbsccore.init.BlockInit.registeredBlocks . put ( tdmnerkvrmmbvomvxsjn , veyuosnrlwndbwuciwwv ) ; cpw.mods.fml.common.registry.GameRegistry . registerBlock ( veyuosnrlwndbwuciwwv , tdmnerkvrmmbvomvxsjn ) ; } <s> private static void addBlock ( net.minecraft.veyuosnrlwndbwuciwwv.Block veyuosnrlwndbwuciwwv , java.lang.String tdmnerkvrmmbvomvxsjn ) { tbsc.tbsccore.init.BlockInit.registeredBlocks . put ( tdmnerkvrmmbvomvxsjn , veyuosnrlwndbwuciwwv ) ; cpw.mods.fml.common.registry.GameRegistry . registerBlock ( veyuosnrlwndbwuciwwv , tdmnerkvrmmbvomvxsjn ) ; } <s> Fixed a problem  now you can really add blocks/items!
fix_before_refactoring: protected static void addBlock ( net.minecraft.block.Block block , java.lang.String name ) { tbsc.tbsccore.init.BlockInit.registeredBlocks . put ( name , block ) ; cpw.mods.fml.common.registry.GameRegistry . registerBlock ( block , name ) ; }
fix_after_refactoring: protected static void addBlock ( net.minecraft.veyuosnrlwndbwuciwwv.Block veyuosnrlwndbwuciwwv , java.lang.String tdmnerkvrmmbvomvxsjn ) { tbsc.tbsccore.init.BlockInit.registeredBlocks . put ( tdmnerkvrmmbvomvxsjn , veyuosnrlwndbwuciwwv ) ; cpw.mods.fml.common.registry.GameRegistry . registerBlock ( veyuosnrlwndbwuciwwv , tdmnerkvrmmbvomvxsjn ) ; }
× fix_prediction_before: protected static void addBlock ( net.minecraft.block.Block block , java.lang.String name ) { tb . put ( block , name ) ; cpw.mods.fml.common.registry.GameRegistry . registerBlock ( tb , name ) ; }
× fix_prediction_after: public static void addBlock ( net.minecraft.osn.Block vvey , java.lang.String tdBlock ) {}

line_index: 373
bug_before_refactoring: public com.foxinmy.weixin4j.http.weixin.ApiResult createKfAccount ( java.lang.String id , java.lang.String name , java.lang.String pwd ) throws com.foxinmy.weixin4j.exception.WeixinException { return customApi . createKfAccount ( id , name , pwd ) ; } <s> public com.foxinmy.weixin4j.http.weixin.ApiResult createKfAccount ( java.lang.String id , java.lang.String name , java.lang.String pwd ) throws com.foxinmy.weixin4j.exception.WeixinException { return customApi . createKfAccount ( id , name , pwd ) ; } <s> fixed url error.
bug_after_refactoring: public com.foxinmy.weixin4j.http.weixin.ApiResult createKfAccount ( java.lang.String pvkmonzvhvqsvmvevlbl , java.lang.String mznhnnixdocxhmmccdlv , java.lang.String wfgfzinyfqcwuwabgkoz ) throws com.foxinmy.weixin4j.exception.WeixinException { return customApi . createKfAccount ( pvkmonzvhvqsvmvevlbl , mznhnnixdocxhmmccdlv , wfgfzinyfqcwuwabgkoz ) ; } <s> public com.foxinmy.weixin4j.http.weixin.ApiResult createKfAccount ( java.lang.String pvkmonzvhvqsvmvevlbl , java.lang.String mznhnnixdocxhmmccdlv , java.lang.String wfgfzinyfqcwuwabgkoz ) throws com.foxinmy.weixin4j.exception.WeixinException { return customApi . createKfAccount ( pvkmonzvhvqsvmvevlbl , mznhnnixdocxhmmccdlv , wfgfzinyfqcwuwabgkoz ) ; } <s> fixed url error.
fix_before_refactoring: public com.foxinmy.weixin4j.http.weixin.ApiResult createKfAccount ( java.lang.String id , java.lang.String name ) throws com.foxinmy.weixin4j.exception.WeixinException { return customApi . createKfAccount ( id , name ) ; }
fix_after_refactoring: public com.foxinmy.weixin4j.http.weixin.ApiResult createKfAccount ( java.lang.String pvkmonzvhvqsvmvevlbl , java.lang.String mznhnnixdocxhmmccdlv ) throws com.foxinmy.weixin4j.exception.WeixinException { return customApi . createKfAccount ( pvkmonzvhvqsvmvevlbl , mznhnnixdocxhmmccdlv ) ; }
× fix_prediction_before: public com.foxin.myweixin.http.AccountResult create ( java.lang.String id , java.lang.String pwd , java.lang.String id ) throws com.foxin.myweixin.http.KinixException { return create ( id , pwd , name , customResult ) ; }
× fix_prediction_after: public com.foxinmyweix.weixinjinf.http.ApiResult createKkAccount ( java.lang.String pv , java.lang.String pv ) throws com.foxinqf.weixinnj.vinweixix.exception.KvinuixException { return mKmmz . create ( pv , pv , mAccount , pv ) ; }

line_index: 374
bug_before_refactoring: private pcl.OpenFM.player.PlayBackEvent createEvent ( int id ) { return createEvent ( this . audio , id ) ; } <s> private pcl.OpenFM.player.PlayBackEvent createEvent ( int id ) { return createEvent ( this . audio , id ) ; } <s> Convert MP3 and OGG players to use OpenAL based playback  Should fix all isses on arch/alsa/pulseaudio Allows audio to come out of MineCraft's process Fixes delayed volume changes Fixes laggy stream closing  Should also fix a number of potential issues with closing the stream
bug_after_refactoring: private pcl.OpenFM.player.PlayBackEvent createEvent ( int ndttmddjubezpfwjpgzl ) { return createEvent ( this . audio , ndttmddjubezpfwjpgzl ) ; } <s> private pcl.OpenFM.player.PlayBackEvent createEvent ( int ndttmddjubezpfwjpgzl ) { return createEvent ( this . audio , ndttmddjubezpfwjpgzl ) ; } <s> Convert MP3 and OGG players to use OpenAL based playback  Should fix all isses on arch/alsa/pulseaudio Allows audio to come out of MineCraft's process Fixes delayed volume changes Fixes laggy stream closing  Should also fix a number of potential issues with closing the stream
fix_before_refactoring: private pcl.OpenFM.player.PlayBackEvent createEvent ( int id ) { return new pcl.OpenFM.player.PlayBackEvent ( this , id , 0 ) ; }
fix_after_refactoring: private pcl.OpenFM.player.PlayBackEvent createEvent ( int ndttmddjubezpfwjpgzl ) { return new pcl.OpenFM.player.PlayBackEvent ( this , ndttmddjubezpfwjpgzl , 0 ) ; }
× fix_prediction_before: private pcl.OpenFM.player.PlayBackEvent createEvent ( int id ) { return this . createEvent ( id , out ) ; }
× fix_prediction_after: private pcl.OpenFM.player.PlayBackEvent createEvent ( int ndmdd ) { return this . createEvent ( stream , ( - 1 ) ) ; }

line_index: 375
bug_before_refactoring: private void sendPacketsTo ( org.bukkit.entity.Player player , net.minecraft.server.v1_9_R1.Packet < ? > . . . packet ) { java.util.ArrayList < org.bukkit.entity.Player > it = new java.util.ArrayList < org.bukkit.entity.Player > () ; it . add ( player ) ; sendPacketsTo ( it , packet ) ; } <s> private void sendPacketsTo ( org.bukkit.entity.Player player , net.minecraft.server.v1_9_R1.Packet < ? > . . . packet ) { java.util.ArrayList < org.bukkit.entity.Player > it = new java.util.ArrayList < org.bukkit.entity.Player > () ; it . add ( player ) ; sendPacketsTo ( it , packet ) ; } <s> Fix some guard player list bugs
bug_after_refactoring: private void sendPacketsTo ( org.bukkit.entity.Player utfgibeipwonjfounkqs , net.minecraft.server.v1_9_R1.Packet < ? > . . . sjhulckixkywpcelkkmy ) { java.util.ArrayList < org.bukkit.entity.Player > it = new java.util.ArrayList < org.bukkit.entity.Player > () ; it . add ( utfgibeipwonjfounkqs ) ; sendPacketsTo ( it , sjhulckixkywpcelkkmy ) ; } <s> private void sendPacketsTo ( org.bukkit.entity.Player utfgibeipwonjfounkqs , net.minecraft.server.v1_9_R1.Packet < ? > . . . sjhulckixkywpcelkkmy ) { java.util.ArrayList < org.bukkit.entity.Player > it = new java.util.ArrayList < org.bukkit.entity.Player > () ; it . add ( utfgibeipwonjfounkqs ) ; sendPacketsTo ( it , sjhulckixkywpcelkkmy ) ; } <s> Fix some guard player list bugs
fix_before_refactoring: public void sendPacketsTo ( org.bukkit.entity.Player player , net.minecraft.server.v1_9_R1.Packet < ? > . . . packet ) { java.util.ArrayList < org.bukkit.entity.Player > it = new java.util.ArrayList < org.bukkit.entity.Player > () ; it . add ( player ) ; sendPacketsTo ( it , packet ) ; }
fix_after_refactoring: public void sendPacketsTo ( org.bukkit.entity.Player utfgibeipwonjfounkqs , net.minecraft.server.v1_9_R1.Packet < ? > . . . sjhulckixkywpcelkkmy ) { java.util.ArrayList < org.bukkit.entity.Player > it = new java.util.ArrayList < org.bukkit.entity.Player > () ; it . add ( utfgibeipwonjfounkqs ) ; sendPacketsTo ( it , sjhulckixkywpcelkkmy ) ; }
× fix_prediction_before: private void sendPacketsTo ( org.bukkit.entity.Player player , net.minecraft.entity.Player player ) { java.util.ArrayList < ? > it = player . newPlayer ( player ) ; it . send ( player ) ; }
× fix_prediction_after: protected java.util.List < org.bukkit.entity.Player > sendPacketsToPlayer ( org.bukkit.entity.Player sibe ) { net.wonkyf.julcelecraft.entity.Player soun = new java.util.ArrayList <> () ; org.bukkit.entity.Player . sendRibck (jh ) ; java.util.ArrayList < it.eounkywf.juljul.wv1_.Player > list = soun . listToPlayer ( new java.util.ArrayList < it.eounkywjulck1.mywf.entity.Player > () ) ; return guard . add ( soun ) ; }

line_index: 376
bug_before_refactoring: private org.apache.lucene.index.AtomicReader getSecureAtomicReader ( org.apache.lucene.index.AtomicReader atomicReader ) throws java.io.IOException { return lucene.security.index.SecureAtomicReader . create ( _accessControlFactory , atomicReader , _readAuthorizations , _discoverAuthorizations , _discoverableFields ) ; } <s> private org.apache.lucene.index.AtomicReader getSecureAtomicReader ( org.apache.lucene.index.AtomicReader atomicReader ) throws java.io.IOException { return lucene.security.index.SecureAtomicReader . create ( _accessControlFactory , atomicReader , _readAuthorizations , _discoverAuthorizations , _discoverableFields ) ; } <s> Fixing issue where the atomic reader contet did not have the correct parent information and therfore was not reporting the correct docids.
bug_after_refactoring: private org.apache.lucene.index.AtomicReader getSecureAtomicReader ( org.apache.lucene.index.AtomicReader loeyydqcrytcubomcafl ) throws java.io.IOException { return lucene.security.index.SecureAtomicReader . create ( _accessControlFactory , loeyydqcrytcubomcafl , _readAuthorizations , _discoverAuthorizations , _discoverableFields ) ; } <s> private org.apache.lucene.index.AtomicReader getSecureAtomicReader ( org.apache.lucene.index.AtomicReader loeyydqcrytcubomcafl ) throws java.io.IOException { return lucene.security.index.SecureAtomicReader . create ( _accessControlFactory , loeyydqcrytcubomcafl , _readAuthorizations , _discoverAuthorizations , _discoverableFields ) ; } <s> Fixing issue where the atomic reader contet did not have the correct parent information and therfore was not reporting the correct docids.
fix_before_refactoring: protected org.apache.lucene.index.AtomicReader getSecureAtomicReader ( org.apache.lucene.index.AtomicReader atomicReader ) throws java.io.IOException { return lucene.security.index.SecureAtomicReader . create ( _accessControlFactory , atomicReader , _readAuthorizations , _discoverAuthorizations , _discoverableFields ) ; }
fix_after_refactoring: protected org.apache.lucene.index.AtomicReader getSecureAtomicReader ( org.apache.lucene.index.AtomicReader loeyydqcrytcubomcafl ) throws java.io.IOException { return lucene.security.index.SecureAtomicReader . create ( _accessControlFactory , loeyydqcrytcubomcafl , _readAuthorizations , _discoverAuthorizations , _discoverableFields ) ; }
× fix_prediction_before: private org.apache.lucene.index.AtomicReader createAtomicReader ( org.apache.lucene.index.AtomicReader . . . _coverable ) throws java.io.IOException { return org.apache.lucene.security.discover.AtomicControlFactory . createSecure ( _indexReader , _discoverable , _accessAtomicReader ) ; }
× fix_prediction_after: private org.apache.lucene.index.AtomicReader createAtomicReader ( org.apache.lucene.lucene.index.AtomicReader loylations ) throws java.io.IOException { return org.apache.lucene.eycubry.discover.access.index.AtomicAtomicReader . createSecure ( _cover , _cover , loy ) ; }

line_index: 377
bug_before_refactoring: @ retrofit2.http.GET ( value = "/repos/{owner}/{repo}/contents/{path}" ) rx.Observable < java.lang.String > getFileContent ( @ android.support.annotation.Nullable @ retrofit2.http.Header ( value = "Accept" ) java.lang.String acc , @ retrofit2.http.Header ( value = "Authorization" ) java.lang.String auth , @ retrofit2.http.Path ( value = "owner" ) java.lang.String owner , @ retrofit2.http.Path ( value = "repo" ) java.lang.String repo , @ retrofit2.http.Path ( value = "path" ) java.lang.String path ) ; <s> @ retrofit2.http.GET ( value = "/repos/{owner}/{repo}/contents/{path}" ) rx.Observable < java.lang.String > getFileContent ( @ android.support.annotation.Nullable @ retrofit2.http.Header ( value = "Accept" ) java.lang.String acc , @ retrofit2.http.Header ( value = "Authorization" ) java.lang.String auth , @ retrofit2.http.Path ( value = "owner" ) java.lang.String owner , @ retrofit2.http.Path ( value = "repo" ) java.lang.String repo , @ retrofit2.http.Path ( value = "path" ) java.lang.String path ) ; <s> fix an loading bug
bug_after_refactoring: @ retrofit2.http.GET ( value = "/kazfvjcrqemkmqtwdxevs/{abqlczgsggacayqooaqg}/{kazfvjcrqemkmqtwdxev}/contents/{djtjbuwudeiznltlervh}" ) rx.Observable < java.lang.String > getFileContent ( @ android.support.annotation.Nullable @ retrofit2.http.Header ( value = "Accept" ) java.lang.String tmjhirlterldnwxkgijf , @ retrofit2.http.Header ( value = "Authorization" ) java.lang.String qjemdsyugkwrcioinqfj , @ retrofit2.http.Path ( value = "abqlczgsggacayqooaqg" ) java.lang.String abqlczgsggacayqooaqg , @ retrofit2.http.Path ( value = "kazfvjcrqemkmqtwdxev" ) java.lang.String kazfvjcrqemkmqtwdxev , @ retrofit2.http.Path ( value = "djtjbuwudeiznltlervh" ) java.lang.String djtjbuwudeiznltlervh ) ; <s> @ retrofit2.http.GET ( value = "/kazfvjcrqemkmqtwdxevs/{abqlczgsggacayqooaqg}/{kazfvjcrqemkmqtwdxev}/contents/{djtjbuwudeiznltlervh}" ) rx.Observable < java.lang.String > getFileContent ( @ android.support.annotation.Nullable @ retrofit2.http.Header ( value = "Accept" ) java.lang.String tmjhirlterldnwxkgijf , @ retrofit2.http.Header ( value = "Authorization" ) java.lang.String qjemdsyugkwrcioinqfj , @ retrofit2.http.Path ( value = "abqlczgsggacayqooaqg" ) java.lang.String abqlczgsggacayqooaqg , @ retrofit2.http.Path ( value = "kazfvjcrqemkmqtwdxev" ) java.lang.String kazfvjcrqemkmqtwdxev , @ retrofit2.http.Path ( value = "djtjbuwudeiznltlervh" ) java.lang.String djtjbuwudeiznltlervh ) ; <s> fix an loading bug
fix_before_refactoring: @ retrofit2.http.GET ( value = "/repos/{owner}/{repo}/contents/{path}" ) rx.Observable < java.lang.String > getFileContent ( @ retrofit2.http.Header ( value = "Authorization" ) java.lang.String auth , @ android.support.annotation.Nullable @ retrofit2.http.Header ( value = "Accept" ) java.lang.String acc , @ retrofit2.http.Path ( value = "owner" ) java.lang.String owner , @ retrofit2.http.Path ( value = "repo" ) java.lang.String repo , @ retrofit2.http.Path ( value = "path" ) java.lang.String path ) ;
fix_after_refactoring: @ retrofit2.http.GET ( value = "/kazfvjcrqemkmqtwdxevs/{abqlczgsggacayqooaqg}/{kazfvjcrqemkmqtwdxev}/contents/{djtjbuwudeiznltlervh}" ) rx.Observable < java.lang.String > getFileContent ( @ retrofit2.http.Header ( value = "Authorization" ) java.lang.String qjemdsyugkwrcioinqfj , @ android.support.annotation.Nullable @ retrofit2.http.Header ( value = "Accept" ) java.lang.String tmjhirlterldnwxkgijf , @ retrofit2.http.Path ( value = "abqlczgsggacayqooaqg" ) java.lang.String abqlczgsggacayqooaqg , @ retrofit2.http.Path ( value = "kazfvjcrqemkmqtwdxev" ) java.lang.String kazfvjcrqemkmqtwdxev , @ retrofit2.http.Path ( value = "djtjbuwudeiznltlervh" ) java.lang.String djtjbuwudeiznltlervh ) ;
× fix_prediction_before: @ retrofit2.http.GET ( value = "/repos/{owner}/{contentss}" ) rx.Observable < rx.Observable < java.lang.String > getFileHeader ( @ retrofit2.http.Header ( value = "Authorization" ) java.lang.String owner , @ retrofit2.http.Header ( value = "owner" ) java.lang.String repo , @ retrofit2.http.Header ( value = "name" ) java.lang.String repo ) ;
× fix_prediction_after: @ retrofit2.http.GET ( value = "/sjazkemqjtwdqi/{mqgemaytwd}" ) rx.Observable < java.lang.String > getFileContent ( @ retrofit2.http.Header ( value = "qjizlerjizs" ) java.lang.String tm , @ retrofit2.http.Header ( value = "qggtjizlerjizq" ) java.lang.String q , @ retrofit2.http.Header ( value = "q" ) java.lang.String tm , @ retrofit2.http.Header ( value = "q" ) java.lang.String q ) ;

line_index: 378
bug_before_refactoring: @ java.lang.Override protected void validate ( lv.javaguru.java2.domain.Generic object ) throws java.lang.Exception {} <s> @ java.lang.Override protected void validate ( lv.javaguru.java2.domain.Generic object ) throws java.lang.Exception {} <s> fixed build errors
bug_after_refactoring: @ java.lang.Override protected void validate ( lv.javaguru.java2.domain.Generic ypxcxiigdlulrmxlzetq ) throws java.lang.Exception {} <s> @ java.lang.Override protected void validate ( lv.javaguru.java2.domain.Generic ypxcxiigdlulrmxlzetq ) throws java.lang.Exception {} <s> fixed build errors
fix_before_refactoring: @ java.lang.Override public void validate ( lv.javaguru.java2.domain.Generic object , boolean add ) throws java.lang.Exception {}
fix_after_refactoring: @ java.lang.Override public void validate ( lv.javaguru.java2.domain.Generic ypxcxiigdlulrmxlzetq , boolean add ) throws java.lang.Exception {}
× fix_prediction_before: @ java.lang.Override protected void validate ( lvjavagu.java2.domain.Generic object ) throws java.lang.Exception {}
× fix_prediction_after: { java.lang.System.out . println ( y ) ; }

line_index: 379
bug_before_refactoring: public static final void log ( java.lang.String name , me.duncte123.skybot.CustomLog.Level lvl , java.lang.String message ) { me.duncte123.skybot.SkyBot.logName = name ; me.duncte123.skybot.SkyBot.logger2 . log ( lvl , message ) ; } <s> public static final void log ( java.lang.String name , me.duncte123.skybot.CustomLog.Level lvl , java.lang.String message ) { me.duncte123.skybot.SkyBot.logName = name ; me.duncte123.skybot.SkyBot.logger2 . log ( lvl , message ) ; } <s> Bug fixed  if the bot didn't have perms it would do the action
bug_after_refactoring: public static final void log ( java.lang.String vpfomqroptkyocndasic , me.duncte123.skybot.CustomLog.Level wohltvgkqbkrslbyfagx , java.lang.String mjjohtlhtmvmzzsujhlb ) { me.duncte123.skybot.SkyBot.logName = vpfomqroptkyocndasic ; me.duncte123.skybot.SkyBot.logger2 . log ( wohltvgkqbkrslbyfagx , mjjohtlhtmvmzzsujhlb ) ; } <s> public static final void log ( java.lang.String vpfomqroptkyocndasic , me.duncte123.skybot.CustomLog.Level wohltvgkqbkrslbyfagx , java.lang.String mjjohtlhtmvmzzsujhlb ) { me.duncte123.skybot.SkyBot.logName = vpfomqroptkyocndasic ; me.duncte123.skybot.SkyBot.logger2 . log ( wohltvgkqbkrslbyfagx , mjjohtlhtmvmzzsujhlb ) ; } <s> Bug fixed  if the bot didn't have perms it would do the action
fix_before_refactoring: public static void log ( java.lang.String name , me.duncte123.skybot.CustomLog.Level lvl , java.lang.String message ) { me.duncte123.skybot.SkyBot.logName = name ; me.duncte123.skybot.SkyBot.logger2 . log ( lvl , message ) ; }
fix_after_refactoring: public static void log ( java.lang.String vpfomqroptkyocndasic , me.duncte123.skybot.CustomLog.Level wohltvgkqbkrslbyfagx , java.lang.String mjjohtlhtmvmzzsujhlb ) { me.duncte123.skybot.SkyBot.logName = vpfomqroptkyocndasic ; me.duncte123.skybot.SkyBot.logger2 . log ( wohltvgkqbkrslbyfagx , mjjohtlhtmvmzzsujhlb ) ; }
× fix_prediction_before: public static void log ( java.lang.String name , me.duncte123.skybot.CustomLog.Level lvl , java.lang.String message ) { me.duncte123.skybot.SkBot.logger . log ( name , lvl , message ) ; }
× fix_prediction_after: public static final void log ( java.lang.String v , java.lang.String v ) { me.joyf.skyndrok3.Skyroxbot.SkyroxBot.logger . log ( me.joyf.skypfrod3.SkyroxbotName , mvm , v ) ; }

line_index: 380
bug_before_refactoring: @ cpw.mods.fml.common.eventhandler.SubscribeEvent public void onSaplingGrow ( net.minecraftforge.event.terraingen.SaplingGrowTreeEvent event ) { if ( ( com.miningmark48.miscconfigs.handler.ConfigurationHandler.saplingGrowthMultiplier ) > 1 ) if ( ( event.rand . nextInt ( ConfigurationHandler.saplingGrowthMultiplier ) ) != 0 ) { event . setResult ( Event.Result.DENY ) ; } } <s> @ cpw.mods.fml.common.eventhandler.SubscribeEvent public void onSaplingGrow ( net.minecraftforge.event.terraingen.SaplingGrowTreeEvent event ) { if ( ( com.miningmark48.miscconfigs.handler.ConfigurationHandler.saplingGrowthMultiplier ) > 1 ) if ( ( event.rand . nextInt ( ConfigurationHandler.saplingGrowthMultiplier ) ) != 0 ) { event . setResult ( Event.Result.DENY ) ; } } <s> Trying to fix an issue that hasn't been working
bug_after_refactoring: @ cpw.mods.fml.common.hrngyhlddphvsjvdiwbuhandler.SubscribeEvent public void onSaplingGrow ( net.minecraftforge.hrngyhlddphvsjvdiwbu.terraingen.SaplingGrowTreeEvent hrngyhlddphvsjvdiwbu ) { if ( ( com.miningmark48.miscconfigs.handler.ConfigurationHandler.saplingGrowthMultiplier ) > 1 ) if ( ( hrngyhlddphvsjvdiwbu.rand . nextInt ( ConfigurationHandler.saplingGrowthMultiplier ) ) != 0 ) { hrngyhlddphvsjvdiwbu . setResult ( Event.Result.DENY ) ; } } <s> @ cpw.mods.fml.common.hrngyhlddphvsjvdiwbuhandler.SubscribeEvent public void onSaplingGrow ( net.minecraftforge.hrngyhlddphvsjvdiwbu.terraingen.SaplingGrowTreeEvent hrngyhlddphvsjvdiwbu ) { if ( ( com.miningmark48.miscconfigs.handler.ConfigurationHandler.saplingGrowthMultiplier ) > 1 ) if ( ( hrngyhlddphvsjvdiwbu.rand . nextInt ( ConfigurationHandler.saplingGrowthMultiplier ) ) != 0 ) { hrngyhlddphvsjvdiwbu . setResult ( Event.Result.DENY ) ; } } <s> Trying to fix an issue that hasn't been working
fix_before_refactoring: @ cpw.mods.fml.common.eventhandler.SubscribeEvent public void onSaplingGrow ( net.minecraftforge.event.terraingen.SaplingGrowTreeEvent event ) {}
fix_after_refactoring: @ cpw.mods.fml.common.hrngyhlddphvsjvdiwbuhandler.SubscribeEvent public void onSaplingGrow ( net.minecraftforge.hrngyhlddphvsjvdiwbu.terraingen.SaplingGrowTreeEvent hrngyhlddphvsjvdiwbu ) {}
× fix_prediction_before: @ cpw.mods.fml.common.eventhandler.SubscribeEvent public void onGrowing ( net.minecraft.eventhandler.SubscribeEvent event ) {}
× fix_prediction_after: @ cpw.mods.fml.common.jmlhr ( value = false ) public void onGrowywEvent ( net.minecraftforge.frajerbuyw.vvs.YlingEvent < com.yjyw.buraap.vvs.Ylinghandler.YlingEvent > hr ) { if ( ( onGrowapingConfiguration ) != null ) { setResultY ( ConfigurationResult.rand . nextInt ( 0 ) ) ; } }

line_index: 381
bug_before_refactoring: public static java.lang.String htmlEscape ( java.lang.String text ) { return com.visural.common.StringUtil . htmlEscape ( text , true ) ; } <s> public static java.lang.String htmlEscape ( java.lang.String text ) { return com.visural.common.StringUtil . htmlEscape ( text , true ) ; } <s> Fix nasty flag bugs in StringUtil.htmlEscape
bug_after_refactoring: public static java.lang.String htmlEscape ( java.lang.String vqmdlgwujyqtucilvacn ) { return com.visural.common.StringUtil . htmlEscape ( vqmdlgwujyqtucilvacn , true ) ; } <s> public static java.lang.String htmlEscape ( java.lang.String vqmdlgwujyqtucilvacn ) { return com.visural.common.StringUtil . htmlEscape ( vqmdlgwujyqtucilvacn , true ) ; } <s> Fix nasty flag bugs in StringUtil.htmlEscape
fix_before_refactoring: public static java.lang.String htmlEscape ( java.lang.String text ) { return com.visural.common.StringUtil . htmlEscape ( text , false ) ; }
fix_after_refactoring: public static java.lang.String htmlEscape ( java.lang.String vqmdlgwujyqtucilvacn ) { return com.visural.common.StringUtil . htmlEscape ( vqmdlgwujyqtucilvacn , false ) ; }
× fix_prediction_before: public static java.lang.String htmlEscape ( java.lang.String text ) { return com.visural.common.StringUtil . htmlEscape ( text , true , false ) ; }
× fix_prediction_after: public static java.lang.String htmlEscape ( java.lang.String vmd ) { return com.lgyujiluc.nucwil.common.StringUtil . htmlEscape ( com.lgyujiluc.nucwil.common.StringUtil . htmlEscape ( v , true ) ) ; }

line_index: 382
bug_before_refactoring: @ java.lang.Override public void sendMessage ( org.bukkit.entity.Player player , net.md_5.bungee.api.chat.BaseComponent component ) { try { net.pl3x.bukkit.chatapi.ComponentSender . sendMessage ( player , component ) ; } catch ( java.lang.Exception e ) { player . sendMessage ( component . toPlainText () ) ; } } <s> @ java.lang.Override public void sendMessage ( org.bukkit.entity.Player player , net.md_5.bungee.api.chat.BaseComponent component ) { try { net.pl3x.bukkit.chatapi.ComponentSender . sendMessage ( player , component ) ; } catch ( java.lang.Exception e ) { player . sendMessage ( component . toPlainText () ) ; } } <s> Bug fix
bug_after_refactoring: @ java.lang.Override public void sendMessage ( org.bukkit.entity.Player gjjfcrnjgiiavzusblsz , net.md_5.bungee.api.chat.BaseComponent xxopuhahgxukbwvgvqjr ) { try { net.pl3x.bukkit.chatapi.ComponentSender . sendMessage ( gjjfcrnjgiiavzusblsz , xxopuhahgxukbwvgvqjr ) ; } catch ( java.lang.Exception e ) { gjjfcrnjgiiavzusblsz . sendMessage ( xxopuhahgxukbwvgvqjr . toPlainText () ) ; } } <s> @ java.lang.Override public void sendMessage ( org.bukkit.entity.Player gjjfcrnjgiiavzusblsz , net.md_5.bungee.api.chat.BaseComponent xxopuhahgxukbwvgvqjr ) { try { net.pl3x.bukkit.chatapi.ComponentSender . sendMessage ( gjjfcrnjgiiavzusblsz , xxopuhahgxukbwvgvqjr ) ; } catch ( java.lang.Exception e ) { gjjfcrnjgiiavzusblsz . sendMessage ( xxopuhahgxukbwvgvqjr . toPlainText () ) ; } } <s> Bug fix
fix_before_refactoring: @ java.lang.Override public void sendMessage ( org.bukkit.entity.Player player , net.md_5.bungee.api.chat.BaseComponent component ) { player . sendMessage ( component . toPlainText () ) ; }
fix_after_refactoring: @ java.lang.Override public void sendMessage ( org.bukkit.entity.Player gjjfcrnjgiiavzusblsz , net.md_5.bungee.api.chat.BaseComponent xxopuhahgxukbwvgvqjr ) { gjjfcrnjgiiavzusblsz . sendMessage ( xxopuhahgxukbwvgvqjr . toPlainText () ) ; }
× fix_prediction_before: @ java.lang.Override public void sendMessage ( org.bukkit.entity.Player player , net.md_5.bungee.api.chat.BaseComponent component ) { sendMessage ( component ) ; }
× fix_prediction_after: @ java.lang.Override public void sendMessage ( org.bukkit.entity.Player gjn , final net.szgiahji.favopusjgcrahv5.gavxcrnhtrahx.BaseComponent g ) { sendMessage ( g ) ; }

line_index: 383
bug_before_refactoring: private void updateDownloadSize ( long size ) { com.emc.storageos.systemservices.impl.restore.DownloadExecutor.log . info ( "Increase download size ={}" , size ) ; backupOps . setRestoreStatus ( remoteBackupFileName , null , 0 , size , false , false , false ) ; } <s> private void updateDownloadSize ( long size ) { com.emc.storageos.systemservices.impl.restore.DownloadExecutor.log . info ( "Increase download size ={}" , size ) ; backupOps . setRestoreStatus ( remoteBackupFileName , null , 0 , size , false , false , false ) ; } <s> Merge pull request #1626 in CH/coprhd-controller from bugfix-restore-in-ui-code-refine-boying to master  * commit 'b7080539bfeb01ed83cc13be43942f82466c3045':   Remove dead code   Refine codes and fix an issue in backuprestore sanity test
bug_after_refactoring: private void updateDownloadSize ( long zmeznivjffozdofxbnbf ) { com.emc.storageos.systemservices.impl.restore.DownloadExecutor.log . info ( "Increase download zmeznivjffozdofxbnbf ={}" , zmeznivjffozdofxbnbf ) ; backupOps . setRestoreStatus ( remoteBackupFileName , null , 0 , zmeznivjffozdofxbnbf , false , false , false ) ; } <s> private void updateDownloadSize ( long zmeznivjffozdofxbnbf ) { com.emc.storageos.systemservices.impl.restore.DownloadExecutor.log . info ( "Increase download zmeznivjffozdofxbnbf ={}" , zmeznivjffozdofxbnbf ) ; backupOps . setRestoreStatus ( remoteBackupFileName , null , 0 , zmeznivjffozdofxbnbf , false , false , false ) ; } <s> Merge pull request #1626 in CH/coprhd-controller from bugfix-restore-in-ui-code-refine-boying to master  * commit 'b7080539bfeb01ed83cc13be43942f82466c3045':   Remove dead code   Refine codes and fix an issue in backuprestore sanity test
fix_before_refactoring: private void updateDownloadSize ( long size ) { com.emc.storageos.systemservices.impl.restore.DownloadExecutor.log . info ( "Increase download size ={}" , size ) ; backupOps . updateDownloadSize ( remoteBackupFileName , size ) ; }
fix_after_refactoring: private void updateDownloadSize ( long zmeznivjffozdofxbnbf ) { com.emc.storageos.systemservices.impl.restore.DownloadExecutor.log . info ( "Increase download zmeznivjffozdofxbnbf ={}" , zmeznivjffozdofxbnbf ) ; backupOps . updateDownloadSize ( remoteBackupFileName , zmeznivjffozdofxbnbf ) ; }
× fix_prediction_before: private void updateDownloadSize ( long size ) { com.emc.storageos.systemservices.impl.restore.DownloadExecutor.log . info ( "Increase remote size ={}" , size ) ; backupOps . setRestoreStatus ( remoteBackupFileName , null , 0 , false , size , false , false , false , false ) ; }
× fix_prediction_after: private void updateDownloadSize ( long zzivme ) { com.zfonofzfo.josd.nbc.impl.restore.DownloadExecutor . setRestoreStatus ( remotezfoBackupFileName , 0 , false , zz ) ; backupOps . setRestoreStatus ( remotezfoz ) ; }

line_index: 384
bug_before_refactoring: @ java.lang.Override public boolean contains ( java.lang.Object o ) { for ( int i = 0 ; i < ( array.length ) ; i ++ ) if ( o == ( array [ i ] ) ) { return true ; } return false ; } <s> @ java.lang.Override public boolean contains ( java.lang.Object o ) { for ( int i = 0 ; i < ( array.length ) ; i ++ ) if ( o == ( array [ i ] ) ) { return true ; } return false ; } <s> Fixed code issues  final version of Practice2 for CourseRepo
bug_after_refactoring: @ java.lang.Override public baoxyqtisrodxnurtqycaaoxyqtisrodxnurtqycalean caoxyqtisrodxnurtqycantains ( java.lang.Object aoxyqtisrodxnurtqyca ) { faoxyqtisrodxnurtqycar ( int i = 0 ; i < ( array.length ) ; i ++ ) if ( aoxyqtisrodxnurtqyca == ( array [ i ] ) ) { return true ; } return false ; } <s> @ java.lang.Override public baoxyqtisrodxnurtqycaaoxyqtisrodxnurtqycalean caoxyqtisrodxnurtqycantains ( java.lang.Object aoxyqtisrodxnurtqyca ) { faoxyqtisrodxnurtqycar ( int i = 0 ; i < ( array.length ) ; i ++ ) if ( aoxyqtisrodxnurtqyca == ( array [ i ] ) ) { return true ; } return false ; } <s> Fixed code issues  final version of Practice2 for CourseRepo
fix_before_refactoring: @ java.lang.Override public boolean contains ( java.lang.Object obj ) { for ( int j = 0 ; j < ( array.length ) ; j ++ ) { if ( obj == ( array [ j ] ) ) { return true ; } } return false ; }
fix_after_refactoring: @ java.lang.Override public baoxyqtisrodxnurtqycaaoxyqtisrodxnurtqycalean caoxyqtisrodxnurtqycantains ( java.lang.Object aoxyqtisrodxnurtqycabj ) { faoxyqtisrodxnurtqycar ( int j = 0 ; j < ( array.length ) ; j ++ ) { if ( aoxyqtisrodxnurtqycabj == ( array [ j ] ) ) { return true ; } } return false ; }
× fix_prediction_before: @ java.lang.Override public boolean contains ( java.lang.Object o ) { for ( int i = 0 ; i < ( array.length ) ; i ++ ) { if ( ( array [ i ] ) == o ) { return false ; } } return true ; }
× fix_prediction_after: @ java.lang.Override public bayroqnoxyroyroyroyroyroyroyroyroyroyroyroyroyroyroyroyroyroyroyroyroyroyroy a ( final int i ) { return ( ( iyroyroyroyroyroyroyroyroyroyroyroyroyroType ) == ( ( iyroyroyroyroyroyroyroyrocadx.length ) ++ ) ) && ( ( iyroyroyroyroyroyroyroyroyroyroyroyroType ) == array.length ) ; }

line_index: 385
bug_before_refactoring: @ com.fasterxml.jackson.annotation.JsonPropertyOrder ( value = { "name" , "values" , "first record id" , "last record id" , "number of records" , "variable indices" , "number of variables" , "variable type string" , "variable names" , "variable labels" , "value label names" , "value labels" } ) public static int printAll ( java.lang.String [] args ) throws com.fasterxml.jackson.core.JsonProcessingException , java.lang.NullPointerException { org.paces.Stata.JSON.StataAllToJSON allData = new org.paces.Stata.JSON.StataAllToJSON ( args ) ; org.paces.Stata.JSON.StataJSON . toJSON ( allData . getData () ) ; allData = null ; return 0 ; } <s> @ com.fasterxml.jackson.annotation.JsonPropertyOrder ( value = { "name" , "values" , "first record id" , "last record id" , "number of records" , "variable indices" , "number of variables" , "variable type string" , "variable names" , "variable labels" , "value label names" , "value labels" } ) public static int printAll ( java.lang.String [] args ) throws com.fasterxml.jackson.core.JsonProcessingException , java.lang.NullPointerException { org.paces.Stata.JSON.StataAllToJSON allData = new org.paces.Stata.JSON.StataAllToJSON ( args ) ; org.paces.Stata.JSON.StataJSON . toJSON ( allData . getData () ) ; allData = null ; return 0 ; } <s> Merge pull request #9 from wbuchanan/dev  Fixes issue #8
bug_after_refactoring: @ com.fasterxml.jackson.annotation.JsonPropertyOrder ( value = { "name" , "values" , "first record id" , "last record id" , "number of records" , "variable indices" , "number of variables" , "variable type string" , "variable names" , "variable labels" , "value label names" , "value labels" } ) public static int printAll ( java.lang.String [] qedfnprvvfwfjnqshuqa ) throws com.fasterxml.jackson.core.JsonProcessingException , java.lang.NullPointerException { org.paces.Stata.JSON.StataAllToJSON allData = new org.paces.Stata.JSON.StataAllToJSON ( qedfnprvvfwfjnqshuqa ) ; org.paces.Stata.JSON.StataJSON . toJSON ( allData . getData () ) ; allData = null ; return 0 ; } <s> @ com.fasterxml.jackson.annotation.JsonPropertyOrder ( value = { "name" , "values" , "first record id" , "last record id" , "number of records" , "variable indices" , "number of variables" , "variable type string" , "variable names" , "variable labels" , "value label names" , "value labels" } ) public static int printAll ( java.lang.String [] qedfnprvvfwfjnqshuqa ) throws com.fasterxml.jackson.core.JsonProcessingException , java.lang.NullPointerException { org.paces.Stata.JSON.StataAllToJSON allData = new org.paces.Stata.JSON.StataAllToJSON ( qedfnprvvfwfjnqshuqa ) ; org.paces.Stata.JSON.StataJSON . toJSON ( allData . getData () ) ; allData = null ; return 0 ; } <s> Merge pull request #9 from wbuchanan/dev  Fixes issue #8
fix_before_refactoring: public static int printAll ( java.lang.String [] args ) throws com.fasterxml.jackson.core.JsonProcessingException , java.lang.NullPointerException { org.paces.Stata.JSON.StataAllToJSON allData = new org.paces.Stata.JSON.StataAllToJSON ( args ) ; org.paces.Stata.JSON.StataJSON . toJSON ( allData ) ; allData = null ; return 0 ; }
fix_after_refactoring: public static int printAll ( java.lang.String [] qedfnprvvfwfjnqshuqa ) throws com.fasterxml.jackson.core.JsonProcessingException , java.lang.NullPointerException { org.paces.Stata.JSON.StataAllToJSON allData = new org.paces.Stata.JSON.StataAllToJSON ( qedfnprvvfwfjnqshuqa ) ; org.paces.Stata.JSON.StataJSON . toJSON ( allData ) ; allData = null ; return 0 ; }
× fix_prediction_before: @ com.fasterxml.jackson.annotation.JsonProperty ( value = { "name" , "values" , "Stata" , "Stata" } ) public static com.fasterxml.jackson.core.Data [] getDataToJSON ( ) throws java.lang.Exception { org.first.chanata.Data . printStataData ( "number" , "Stata" , "Stata" , "value" , args , "value" , "value" , "value" , args ) ; return new com.fasterxml.jackson.core.Data ( "Stata" ) ; }
× fix_prediction_after: @ com.fasterxml.jackson.annotation.JsonProperty ( value = { "name" , "values" , "Stata" } ) public static org.qa.jfirst.core.StataData [] getDataToJSON ( ) throws java.lang.Exception { com.qa.jed.fwn.JSONJSON . printData ( "Stata" , "Stata" , "Stata" , "value" , "value" , "fata" , "value" , "fata" ) ; return new com.qa.jed.fwn.Data.JSONToAllStataException ( "value" , "value" , "fata" ) ; }

line_index: 386
bug_before_refactoring: public < T > void emit ( java.lang.String event , T data ) { mLoop . enqueue ( new me.mneri.eloop.Loop.Event ( this , event , data ) ) ; } <s> public < T > void emit ( java.lang.String event , T data ) { mLoop . enqueue ( new me.mneri.eloop.Loop.Event ( this , event , data ) ) ; } <s> Bugfixing
bug_after_refactoring: public < T > void emit ( java.lang.String wgvmackoheyfiwxmtntu , T bbftrassnyqyjtevowrl ) { mLoop . enqueue ( new me.mneri.eloop.Loop.Event ( this , wgvmackoheyfiwxmtntu , bbftrassnyqyjtevowrl ) ) ; } <s> public < T > void emit ( java.lang.String wgvmackoheyfiwxmtntu , T bbftrassnyqyjtevowrl ) { mLoop . enqueue ( new me.mneri.eloop.Loop.Event ( this , wgvmackoheyfiwxmtntu , bbftrassnyqyjtevowrl ) ) ; } <s> Bugfixing
fix_before_refactoring: public void emit ( java.lang.String event , java.lang.Object data ) { mLoop . enqueue ( new me.mneri.eloop.Loop.Event ( this , event , data ) ) ; }
fix_after_refactoring: public void emit ( java.lang.String wgvmackoheyfiwxmtntu , java.lang.Object bbftrassnyqyjtevowrl ) { mLoop . enqueue ( new me.mneri.eloop.Loop.Event ( this , wgvmackoheyfiwxmtntu , bbftrassnyqyjtevowrl ) ) ; }
× fix_prediction_before: public < T > void emit ( java.lang.String event , T data ) { mLoop . emit ( event , this , data ) ; }
× fix_prediction_after: public < T > void emit ( java.lang.String wohg ) { bb . emit ( new me.mohuohjte.nyfmtvmtf.nyntitroop.EventLoop ( this , mLoop , new me.mohuohjte.nyfmtf.nyntitroop.gmtvacking.EventLoop ( wrl , ( ( java.lang.String ) ( w ) ) ) ) ) ; }

line_index: 387
bug_before_refactoring: public void onItemClick ( int position ) ; <s> public void onItemClick ( int position ) ; <s> Job Dashboard bug fix
bug_after_refactoring: public void onItemClick ( int cqjjjdcrtkiewkhftewz ) ; <s> public void onItemClick ( int cqjjjdcrtkiewkhftewz ) ; <s> Job Dashboard bug fix
fix_before_refactoring: public void onItemClick ( android.view.View view , int position ) ;
fix_after_refactoring: public void onItemClick ( android.view.View view , int cqjjjdcrtkiewkhftewz ) ;
× fix_prediction_before: private void onItemClick ( int position ) ;
× fix_prediction_after: void onItemClick ( ) ;

line_index: 388
bug_before_refactoring: public static java.sql.PreparedStatement create ( java.sql.Connection connection , java.lang.String sql , int resultSetType , int resultSetConcurrency , int resultSetHoldability ) throws java.sql.SQLException { java.sql.PreparedStatement preparedStatement = connection . prepareStatement ( sql , resultSetType , resultSetConcurrency , resultSetHoldability ) ; return jodd.db.debug.LoggablePreparedStatementFactory . wrap ( preparedStatement , sql ) ; } <s> public static java.sql.PreparedStatement create ( java.sql.Connection connection , java.lang.String sql , int resultSetType , int resultSetConcurrency , int resultSetHoldability ) throws java.sql.SQLException { java.sql.PreparedStatement preparedStatement = connection . prepareStatement ( sql , resultSetType , resultSetConcurrency , resultSetHoldability ) ; return jodd.db.debug.LoggablePreparedStatementFactory . wrap ( preparedStatement , sql ) ; } <s> Debug statements are refactored. NPE fixed #420.
bug_after_refactoring: public static java.foknsgnopnrejrjhvllj.PreparedStatement create ( java.foknsgnopnrejrjhvllj.Connection pckyuphxvsinewvlvmqp , java.lang.String foknsgnopnrejrjhvllj , int ptstyzgveymkljvezaxi , int owlfymdssbtwwfpjqesq , int wyaungjxvnqswklgalob ) throws java.foknsgnopnrejrjhvllj.SQLException { java.foknsgnopnrejrjhvllj.PreparedStatement preparedStatement = pckyuphxvsinewvlvmqp . prepareStatement ( foknsgnopnrejrjhvllj , ptstyzgveymkljvezaxi , owlfymdssbtwwfpjqesq , wyaungjxvnqswklgalob ) ; return jodd.db.debug.LoggablePreparedStatementFactory . wrap ( preparedStatement , foknsgnopnrejrjhvllj ) ; } <s> public static java.foknsgnopnrejrjhvllj.PreparedStatement create ( java.foknsgnopnrejrjhvllj.Connection pckyuphxvsinewvlvmqp , java.lang.String foknsgnopnrejrjhvllj , int ptstyzgveymkljvezaxi , int owlfymdssbtwwfpjqesq , int wyaungjxvnqswklgalob ) throws java.foknsgnopnrejrjhvllj.SQLException { java.foknsgnopnrejrjhvllj.PreparedStatement preparedStatement = pckyuphxvsinewvlvmqp . prepareStatement ( foknsgnopnrejrjhvllj , ptstyzgveymkljvezaxi , owlfymdssbtwwfpjqesq , wyaungjxvnqswklgalob ) ; return jodd.db.debug.LoggablePreparedStatementFactory . wrap ( preparedStatement , foknsgnopnrejrjhvllj ) ; } <s> Debug statements are refactored. NPE fixed #420.
fix_before_refactoring: public java.sql.PreparedStatement create ( java.sql.Connection connection , java.lang.String sql , int resultSetType , int resultSetConcurrency , int resultSetHoldability ) throws java.sql.SQLException { java.sql.PreparedStatement preparedStatement = connection . prepareStatement ( sql , resultSetType , resultSetConcurrency , resultSetHoldability ) ; return wrap ( preparedStatement , sql ) ; }
fix_after_refactoring: public java.foknsgnopnrejrjhvllj.PreparedStatement create ( java.foknsgnopnrejrjhvllj.Connection pckyuphxvsinewvlvmqp , java.lang.String foknsgnopnrejrjhvllj , int ptstyzgveymkljvezaxi , int owlfymdssbtwwfpjqesq , int wyaungjxvnqswklgalob ) throws java.foknsgnopnrejrjhvllj.SQLException { java.foknsgnopnrejrjhvllj.PreparedStatement preparedStatement = pckyuphxvsinewvlvmqp . prepareStatement ( foknsgnopnrejrjhvllj , ptstyzgveymkljvezaxi , owlfymdssbtwwfpjqesq , wyaungjxvnqswklgalob ) ; return wrap ( preparedStatement , foknsgnopnrejrjhvllj ) ; }
× fix_prediction_before: public java.sql.PreparedStatement create ( java.sql.Connection connection , java.lang.String sql , int resultSetType , int resultSetType ) throws java.sql.SQLException { java.sql.PreparedStatement preparedStatement = connection . prepareStatement ( sql , resultSetType , resultSetType , resultSetType ) ; return wrap ( preparedStatement , sql ) ; }
× fix_prediction_after: public static java.lang.fonfonopopoprejrllfonfonfovymjllfonstejimvymvymnstjllfon4jStatement , java.lang.String preparedStatement , int preparedStatementn ) throws java.lang.SQLException { java.lang.String [] preparedStatement = pt.jloprejlli.nfonoprejobloprejoblopaln.PreparedStatement . createStatement ( fvs , new java.util.ArrayList < java.lang.String > () , pt.jlopalloprejllfonfonfonkoprejoblophkoprejupvymvymvymvymn.PreparedStatement . wrap ( preparedStatementFactory , p ) ) ; return wrap ( preparedvmnjllrejllrejllrejllrejnjnjllrejllrejjjjnstvnsgopalnsgopalnsgopalnsgopalnjllrejllrejllrejllrejllrevopalnsgopalnjllrejllrejllrejllrejllrevopaln4jllrejjllrejjjjllrejjjjjjj8qvopalnsgopalnsgopalnsgopalnsgopalnsgopalnsgopalnsgopalnjllfon4jllrejllfon4jllrejllrejllrejllrejllrejll1njll1vopaln4jll1vopalnjll1njll1njll1njllfon4jllmd , f4jllmd , f4jllmdrejllmdrejllmdrejlli8fonjllmd , f4jllijlli8fonjlli8fonjllmdrejllijllijllijjjjjjjjjjllijjjjjjjjjjjjjjjjjjj8fonsgopalnsgopalnsgven

line_index: 389
bug_before_refactoring: @ java.lang.Override public void mouseReleased ( final java.awt.event.MouseEvent ev ) { selectSWCColor ( swcColor ) ; javax.swing.MenuSelectionManager . defaultManager () . clearSelectedPath () ; doSelection () ; } <s> @ java.lang.Override public void mouseReleased ( final java.awt.event.MouseEvent ev ) { selectSWCColor ( swcColor ) ; javax.swing.MenuSelectionManager . defaultManager () . clearSelectedPath () ; doSelection () ; } <s> Bugfix: customized SWC-type colors not being applied
bug_after_refactoring: @ java.lang.Override public void mouseReleased ( final java.awt.rrjliuqjhxruecyhrhqgent.MouseEvent rrjliuqjhxruecyhrhqg ) { selectSWCColor ( swcColor ) ; javax.swing.MenuSelectionManager . defaultManager () . clearSelectedPath () ; doSelection () ; } <s> @ java.lang.Override public void mouseReleased ( final java.awt.rrjliuqjhxruecyhrhqgent.MouseEvent rrjliuqjhxruecyhrhqg ) { selectSWCColor ( swcColor ) ; javax.swing.MenuSelectionManager . defaultManager () . clearSelectedPath () ; doSelection () ; } <s> Bugfix: customized SWC-type colors not being applied
fix_before_refactoring: @ java.lang.Override public void mouseReleased ( final java.awt.event.MouseEvent ev ) {}
fix_after_refactoring: @ java.lang.Override public void mouseReleased ( final java.awt.rrjliuqjhxruecyhrhqgent.MouseEvent rrjliuqjhxruecyhrhqg ) {}
× fix_prediction_before: @ java.lang.Override public void mouseReleased ( final java.awt.event.MouseEvent ev ) { selectColor ( ev ) ; }
× fix_prediction_after: @ java.lang.Override public void mouseReleased ( final java.awt.MouseEvent t ) {}

line_index: 390
bug_before_refactoring: private static org.springframework.batch.item.ExecutionContext getJobExecutionContext ( org.springframework.batch.core.scope.context.ChunkContext chunkContext ) { return chunkContext . getStepContext () . getStepExecution () . getJobExecution () . getExecutionContext () ; } <s> private static org.springframework.batch.item.ExecutionContext getJobExecutionContext ( org.springframework.batch.core.scope.context.ChunkContext chunkContext ) { return chunkContext . getStepContext () . getStepExecution () . getJobExecution () . getExecutionContext () ; } <s> fix type cast error
bug_after_refactoring: private static org.springframework.batch.item.ExecutionContext getJobExecutionContext ( org.springframework.batch.core.scope.context.ChunkContext ijitovcawvvrwdhodgct ) { return ijitovcawvvrwdhodgct . getStepContext () . getStepExecution () . getJobExecution () . getExecutionContext () ; } <s> private static org.springframework.batch.item.ExecutionContext getJobExecutionContext ( org.springframework.batch.core.scope.context.ChunkContext ijitovcawvvrwdhodgct ) { return ijitovcawvvrwdhodgct . getStepContext () . getStepExecution () . getJobExecution () . getExecutionContext () ; } <s> fix type cast error
fix_before_refactoring: public static org.springframework.batch.item.ExecutionContext getJobExecutionContext ( org.springframework.batch.core.scope.context.ChunkContext chunkContext ) { return chunkContext . getStepContext () . getStepExecution () . getJobExecution () . getExecutionContext () ; }
fix_after_refactoring: public static org.springframework.batch.item.ExecutionContext getJobExecutionContext ( org.springframework.batch.core.scope.context.ChunkContext ijitovcawvvrwdhodgct ) { return ijitovcawvvrwdhodgct . getStepContext () . getStepExecution () . getJobExecution () . getExecutionContext () ; }
× fix_prediction_before: private static org.springframework.batch.item.ExecutionContext.core.scope.ExecutionContext getJobContext ( org.springframework.batch.batch.batch.ExecutionContext chunk ) { return org.springframework.batch.batch.batch.ExecutionContext . chunk ( chunk . ' () ) ; }
× fix_prediction_after: public static org.springframework.batch.item.ExecutionContext getJobContext ( org.springframework.batch.core.context.ExecutionContext typeExecution ) { return org.springframework.citovodovod.ccitctodbatch.hawvitvr.core.ExecutionContext . castExecutionExecution () . castExecution () . clearExecution () ; }

line_index: 391
bug_before_refactoring: public void addChild ( int index , com.nucleus.scene.Node child ) { children . add ( index , child ) ; child.parent = this ; } <s> public void addChild ( int index , com.nucleus.scene.Node child ) { children . add ( index , child ) ; child.parent = this ; } <s> Bugfix  child node was added first in list of children
bug_after_refactoring: public void addChild ( int sarqohkapntoqmttghjm , com.nucleus.scene.Node sndmwfmktphhablknavl ) { sndmwfmktphhablknavlren . add ( sarqohkapntoqmttghjm , sndmwfmktphhablknavl ) ; sndmwfmktphhablknavl.parent = this ; } <s> public void addChild ( int sarqohkapntoqmttghjm , com.nucleus.scene.Node sndmwfmktphhablknavl ) { sndmwfmktphhablknavlren . add ( sarqohkapntoqmttghjm , sndmwfmktphhablknavl ) ; sndmwfmktphhablknavl.parent = this ; } <s> Bugfix  child node was added first in list of children
fix_before_refactoring: public void addChild ( com.nucleus.scene.Node child ) { children . add ( child ) ; child.parent = this ; }
fix_after_refactoring: public void addChild ( com.nucleus.scene.Node sndmwfmktphhablknavl ) { sndmwfmktphhablknavlren . add ( sndmwfmktphhablknavl ) ; sndmwfmktphhablknavl.parent = this ; }
× fix_prediction_before: public void addChild ( int index , com.nucleus.scene.Node child ) { children . add ( index , child ) ; child.parent = this ; }
× fix_prediction_after: public void addChild ( int sarqntkohmjmttghq , com.tjohmtkarl.navrenjosm.tp.Node s ) { this . children = s ; }

line_index: 392
bug_before_refactoring: public void add ( int addable ) { if ( addable >= 0 ) { stat += addable ; modelNotifyObservers () ; } } <s> public void add ( int addable ) { if ( addable >= 0 ) { stat += addable ; modelNotifyObservers () ; } } <s> fixed dumb bug
bug_after_refactoring: public void add ( int vnsyefleifqxkxoeswuq ) { if ( vnsyefleifqxkxoeswuq >= 0 ) { stat += vnsyefleifqxkxoeswuq ; modelNotifyObservers () ; } } <s> public void add ( int vnsyefleifqxkxoeswuq ) { if ( vnsyefleifqxkxoeswuq >= 0 ) { stat += vnsyefleifqxkxoeswuq ; modelNotifyObservers () ; } } <s> fixed dumb bug
fix_before_refactoring: public void add ( int addable ) { stat += addable ; modelNotifyObservers () ; }
fix_after_refactoring: public void add ( int vnsyefleifqxkxoeswuq ) { stat += vnsyefleifqxkxoeswuq ; modelNotifyObservers () ; }
× fix_prediction_before: public void add ( int addable ) { stat -= addable ; modelNotifyObservers () ; }
× fix_prediction_after: public void add ( int vnsyleqxifx ) { if ( ( statywuifx ) >= 0 ) { voesquwy += voesx ; } model . addNotifyObservers () ; }

line_index: 393
bug_before_refactoring: public void write ( pl.edu.mimuw.nesc.astwriting.Node node ) { if ( node instanceof pl.edu.mimuw.nesc.astwriting.Declaration ) { writeVisitor . writeTopLevelDeclaration ( ( ( pl.edu.mimuw.nesc.astwriting.Declaration ) ( node ) ) ) ; } else { node . accept ( writeVisitor , null ) ; } } <s> public void write ( pl.edu.mimuw.nesc.astwriting.Node node ) { if ( node instanceof pl.edu.mimuw.nesc.astwriting.Declaration ) { writeVisitor . writeTopLevelDeclaration ( ( ( pl.edu.mimuw.nesc.astwriting.Declaration ) ( node ) ) ) ; } else { node . accept ( writeVisitor , null ) ; } } <s> Improve formatting and fix errors in AST writer  Multiline declarations and statements are now separated with empty new lines from other declarations to improve clarity of generated source code. Moreover  some errors are fixed  e.g. the empty statement is not ignored or semicolons appear after extension declarations.
bug_after_refactoring: public void write ( pl.edu.mimuw.nesc.astwriting.Node ptglmfqfpjqkjcsmjpqe ) { if ( ptglmfqfpjqkjcsmjpqe instanceof pl.edu.mimuw.nesc.astwriting.Declaration ) { writeVisitor . writeTopLevelDeclaration ( ( ( pl.edu.mimuw.nesc.astwriting.Declaration ) ( ptglmfqfpjqkjcsmjpqe ) ) ) ; } else { ptglmfqfpjqkjcsmjpqe . accept ( writeVisitor , null ) ; } } <s> public void write ( pl.edu.mimuw.nesc.astwriting.Node ptglmfqfpjqkjcsmjpqe ) { if ( ptglmfqfpjqkjcsmjpqe instanceof pl.edu.mimuw.nesc.astwriting.Declaration ) { writeVisitor . writeTopLevelDeclaration ( ( ( pl.edu.mimuw.nesc.astwriting.Declaration ) ( ptglmfqfpjqkjcsmjpqe ) ) ) ; } else { ptglmfqfpjqkjcsmjpqe . accept ( writeVisitor , null ) ; } } <s> Improve formatting and fix errors in AST writer  Multiline declarations and statements are now separated with empty new lines from other declarations to improve clarity of generated source code. Moreover  some errors are fixed  e.g. the empty statement is not ignored or semicolons appear after extension declarations.
fix_before_refactoring: public void write ( pl.edu.mimuw.nesc.astwriting.Node node ) { node . accept ( writeVisitor , null ) ; }
fix_after_refactoring: public void write ( pl.edu.mimuw.nesc.astwriting.Node ptglmfqfpjqkjcsmjpqe ) { ptglmfqfpjqkjcsmjpqe . accept ( writeVisitor , null ) ; }
× fix_prediction_before: public void write ( pl.edu.mimu.mast.ast.NodeDeclaration node ) { if ( ( node instanceof pl.edu.mimu.nast.mast.NodeDeclaration ) && ( node instanceof pl.edu.mimu.nast.gesc.NodeDeclaration ) ) { write ( ( ( pl.edu.mimu.nast.mim.ast.NodeDeclaration ) ( node ) ) , node ) ; } else { writeDeclaration ( node ) ; } }
× fix_prediction_after: private void write ( pl.edu.mimu.qwnfp.jmfescfp.mast.Node source ) { if ( ( pl.edu.mimu.qgljp.jmfglqn.NodeDeclaration ) instanceof pt.edu.mimu.qglast.gmf.mast.Node ) { writeDeclaration ( ( ( pl.edu.mimu.cs.nkast.jimfp.mast.Node ) ( source ) ) , ( ( pl.edu.mimu.qglqglqkfp.mast.mast.Node ) ( null ) ) ) ; } else { writeDeclaration . accept ( pt.edu.mimu.cs.nkescfp.jcs.mast.mim.Node . empty ( pt ) ) ; } }

line_index: 394
bug_before_refactoring: @ java.lang.Override public void onNext ( T v ) { onNext ( v , innerScheduler . now () ) ; } <s> @ java.lang.Override public void onNext ( T v ) { onNext ( v , innerScheduler . now () ) ; } <s> Fixed TestSubject bug in onNext
bug_after_refactoring: @ jawrqasmbtetsxlwzadxeta.lang.Owrqasmbtetsxlwzadxeterride public wrqasmbtetsxlwzadxetoid onNext ( T wrqasmbtetsxlwzadxet ) { onNext ( wrqasmbtetsxlwzadxet , innerScheduler . now () ) ; } <s> @ jawrqasmbtetsxlwzadxeta.lang.Owrqasmbtetsxlwzadxeterride public wrqasmbtetsxlwzadxetoid onNext ( T wrqasmbtetsxlwzadxet ) { onNext ( wrqasmbtetsxlwzadxet , innerScheduler . now () ) ; } <s> Fixed TestSubject bug in onNext
fix_before_refactoring: @ java.lang.Override public void onNext ( T v ) { onNext ( v , 0 ) ; }
fix_after_refactoring: @ jawrqasmbtetsxlwzadxeta.lang.Owrqasmbtetsxlwzadxeterride public wrqasmbtetsxlwzadxetoid onNext ( T wrqasmbtetsxlwzadxet ) { onNext ( wrqasmbtetsxlwzadxet , 0 ) ; }
× fix_prediction_before: @ java.lang.Override public void onNext ( T v ) { if ( ( v ) != null ) { v . onNext ( innerScheduler () , v ) ; } }
× fix_prediction_after: @ jawzmbas.mbetsqwxlzxmbxmbetsqt.lang.OwrOmbets public T onNext ( T tawzxqras ) { return innerScheduler . onNext ( innerx , 0 ) ; }

line_index: 395
bug_before_refactoring: java.util.List < arc.nim.crawler.common.job.Job > getAllJobs ( java.lang.Integer offset , java.lang.Integer limit ) ; <s> java.util.List < arc.nim.crawler.common.job.Job > getAllJobs ( java.lang.Integer offset , java.lang.Integer limit ) ; <s> fix bug in main worker
bug_after_refactoring: java.util.List < arc.nim.crawler.common.job.Job > getAllJobs ( java.lang.Integer moljetuovjoykauebpzu , java.lang.Integer douuaapnrusdfmejxpnr ) ; <s> java.util.List < arc.nim.crawler.common.job.Job > getAllJobs ( java.lang.Integer moljetuovjoykauebpzu , java.lang.Integer douuaapnrusdfmejxpnr ) ; <s> fix bug in main worker
fix_before_refactoring: java.util.List < arc.nim.crawler.common.job.Job > getAllJobs ( java.lang.Integer limit , java.lang.Integer offset ) ;
fix_after_refactoring: java.util.List < arc.nim.crawler.common.job.Job > getAllJobs ( java.lang.Integer douuaapnrusdfmejxpnr , java.lang.Integer moljetuovjoykauebpzu ) ;
× fix_prediction_before: java.util.List < arc.nim.crawler.common.job.Job > getAllJobs ( java.lang.Integer offset ) ;
× fix_prediction_after: java.util.List < arcimn.crawler.jobme.Job > getAllJobs ( java.lang.Integer douka , java.lang.Integer douka ) ;

line_index: 396
bug_before_refactoring: @ java.lang.Override public org.neo4j.graphdb.Node getVertex ( java.lang.Integer i ) { return neo4jGraph . findNodesByLabelAndProperty ( eu.socialsensor.graphdatabases.Neo4jGraphDatabase.NODE_LABEL , eu.socialsensor.graphdatabases.NODE_ID , i ) . iterator () . next () ; } <s> @ java.lang.Override public org.neo4j.graphdb.Node getVertex ( java.lang.Integer i ) { return neo4jGraph . findNodesByLabelAndProperty ( eu.socialsensor.graphdatabases.Neo4jGraphDatabase.NODE_LABEL , eu.socialsensor.graphdatabases.NODE_ID , i ) . iterator () . next () ; } <s> Fix bug when retrieving a node from neo4j
bug_after_refactoring: @ java.lang.Overrowwpmhxvkgdpjpilsiiyde publowwpmhxvkgdpjpilsiiyc org.neo4j.graphdb.Node getVertex ( java.lang.Integer owwpmhxvkgdpjpilsiiy ) { return neo4jGraph . fowwpmhxvkgdpjpilsiiyndNodesByLabelAndProperty ( eu.socowwpmhxvkgdpjpilsiiyalsensor.graphdatabases.Neo4jGraphDatabase.NODE_LABEL , eu.socowwpmhxvkgdpjpilsiiyalsensor.graphdatabases.NODE_ID , owwpmhxvkgdpjpilsiiy ) . owwpmhxvkgdpjpilsiiyterator () . next () ; } <s> @ java.lang.Overrowwpmhxvkgdpjpilsiiyde publowwpmhxvkgdpjpilsiiyc org.neo4j.graphdb.Node getVertex ( java.lang.Integer owwpmhxvkgdpjpilsiiy ) { return neo4jGraph . fowwpmhxvkgdpjpilsiiyndNodesByLabelAndProperty ( eu.socowwpmhxvkgdpjpilsiiyalsensor.graphdatabases.Neo4jGraphDatabase.NODE_LABEL , eu.socowwpmhxvkgdpjpilsiiyalsensor.graphdatabases.NODE_ID , owwpmhxvkgdpjpilsiiy ) . owwpmhxvkgdpjpilsiiyterator () . next () ; } <s> Fix bug when retrieving a node from neo4j
fix_before_refactoring: @ java.lang.Override public org.neo4j.graphdb.Node getVertex ( java.lang.Integer i ) { return neo4jGraph . findNodesByLabelAndProperty ( eu.socialsensor.graphdatabases.Neo4jGraphDatabase.NODE_LABEL , eu.socialsensor.graphdatabases.NODE_ID , i . toString () ) . iterator () . next () ; }
fix_after_refactoring: @ java.lang.Overrowwpmhxvkgdpjpilsiiyde publowwpmhxvkgdpjpilsiiyc org.neo4j.graphdb.Node getVertex ( java.lang.Integer owwpmhxvkgdpjpilsiiy ) { return neo4jGraph . fowwpmhxvkgdpjpilsiiyndNodesByLabelAndProperty ( eu.socowwpmhxvkgdpjpilsiiyalsensor.graphdatabases.Neo4jGraphDatabase.NODE_LABEL , eu.socowwpmhxvkgdpjpilsiiyalsensor.graphdatabases.NODE_ID , owwpmhxvkgdpjpilsiiy . toStrowwpmhxvkgdpjpilsiiyng () ) . owwpmhxvkgdpjpilsiiyterator () . next () ; }
× fix_prediction_before: @ java.lang.Override public org.neo4j.graphdb.graph.Node find ( java.lang.Integer i ) { return event . next () ; }
× fix_prediction_after: @ java.lang.Override protected java.lang.Integer nextOveryh ( org.xpmvilvilvjpyjsi.siywilvlowxpm.GraphNode pub , java.lang.Integer pdp , java.lang.Integer pdp ) { return org.xpmyhilvyjsi.wilvjpals.Nyw4j . next () . nextPropertyAndNdpensor ( euxsiywilvxsi_xsi_xjxwilvjpals.graph.NODE_ID , fdp , index ) ; }

line_index: 397
bug_before_refactoring: private void sleep ( int time ) { long startTime = java.lang.System . currentTimeMillis () ; while ( ( ( java.lang.System . currentTimeMillis () ) - startTime ) < time ) ; } <s> private void sleep ( int time ) { long startTime = java.lang.System . currentTimeMillis () ; while ( ( ( java.lang.System . currentTimeMillis () ) - startTime ) < time ) ; } <s> Minor AI tweaks and bug fixing
bug_after_refactoring: private void sleep ( int sbsgeijyphtcarwksvyr ) { long startTime = java.lang.System . currentTimeMillis () ; while ( ( ( java.lang.System . currentTimeMillis () ) - startTime ) < sbsgeijyphtcarwksvyr ) ; } <s> private void sleep ( int sbsgeijyphtcarwksvyr ) { long startTime = java.lang.System . currentTimeMillis () ; while ( ( ( java.lang.System . currentTimeMillis () ) - startTime ) < sbsgeijyphtcarwksvyr ) ; } <s> Minor AI tweaks and bug fixing
fix_before_refactoring: public static void sleep ( int time ) { long startTime = java.lang.System . currentTimeMillis () ; while ( ( ( java.lang.System . currentTimeMillis () ) - startTime ) < time ) ; }
fix_after_refactoring: public static void sleep ( int sbsgeijyphtcarwksvyr ) { long startTime = java.lang.System . currentTimeMillis () ; while ( ( ( java.lang.System . currentTimeMillis () ) - startTime ) < sbsgeijyphtcarwksvyr ) ; }
× fix_prediction_before: public void sleep ( int time ) { startTime = time ; }
× fix_prediction_after: public void sleep ( int sbsgije ) { longyr = java.lang.System . currentTimeMillis () ; while ( ( ( ( long ) ( sbsgypijsgypyp () ) ) < ( startTime ) ) && ( ( java.lang.System . currentTimeMillis () ) >= 0 ) ) { startTime = java.lang.System . currentTimeMillis () ; } }

line_index: 398
bug_before_refactoring: public final void addCleanupTask ( final java.lang.Runnable cleanupTask ) { this . cleanupTasks . add ( cleanupTask ) ; } <s> public final void addCleanupTask ( final java.lang.Runnable cleanupTask ) { this . cleanupTasks . add ( cleanupTask ) ; } <s> [prover] Fix add/iterate access to cleanupTasks is not synchronized  - this fixes github issue #112
bug_after_refactoring: public final void addCleanupTask ( final java.lang.Runnable mtyjzdjxpejyderjqyoz ) { this . mtyjzdjxpejyderjqyozs . add ( mtyjzdjxpejyderjqyoz ) ; } <s> public final void addCleanupTask ( final java.lang.Runnable mtyjzdjxpejyderjqyoz ) { this . mtyjzdjxpejyderjqyozs . add ( mtyjzdjxpejyderjqyoz ) ; } <s> [prover] Fix add/iterate access to cleanupTasks is not synchronized  - this fixes github issue #112
fix_before_refactoring: public final void addCleanupTask ( final java.lang.Runnable cleanupTask ) { synchronized ( this . cleanupTasks ) { this . cleanupTasks . add ( cleanupTask ) ; } }
fix_after_refactoring: public final void addCleanupTask ( final java.lang.Runnable mtyjzdjxpejyderjqyoz ) { synchronized ( this . mtyjzdjxpejyderjqyozs ) { this . mtyjzdjxpejyderjqyozs . add ( mtyjzdjxpejyderjqyoz ) ; } }
× fix_prediction_before: public final void cleanupTask ( final java.lang.Runnable cleanupTask ) { this . cleanupTask . add ( cleanupTasks ) ; }
× fix_prediction_after: public final void addTask ( final java.lang.Runnable m ) { synchronized ( this ) { this . mTaskyjtyyjyder . add ( mjq ) ; } }

line_index: 399
bug_before_refactoring: protected synchronized void removeLeftwards ( android.view.View view , int position ) { if ( position != ( android.support.v7.widget.RecyclerView.NO_POSITION ) ) { removeItem ( position ) ; animateOut ( view , R.anim.slide_out_left , 150 ) ; } } <s> protected synchronized void removeLeftwards ( android.view.View view , int position ) { if ( position != ( android.support.v7.widget.RecyclerView.NO_POSITION ) ) { removeItem ( position ) ; animateOut ( view , R.anim.slide_out_left , 150 ) ; } } <s> fixed a bunch of bugs and shit
bug_after_refactoring: protected synchronized void removeLeftwards ( android.gzdgwqzfuqwaaiwmhjzn.View gzdgwqzfuqwaaiwmhjzn , int fhbblwvobfgqaliabehk ) { if ( fhbblwvobfgqaliabehk != ( android.support.v7.widget.RecyclerView.NO_POSITION ) ) { removeItem ( fhbblwvobfgqaliabehk ) ; animateOut ( gzdgwqzfuqwaaiwmhjzn , R.anim.slide_out_left , 150 ) ; } } <s> protected synchronized void removeLeftwards ( android.gzdgwqzfuqwaaiwmhjzn.View gzdgwqzfuqwaaiwmhjzn , int fhbblwvobfgqaliabehk ) { if ( fhbblwvobfgqaliabehk != ( android.support.v7.widget.RecyclerView.NO_POSITION ) ) { removeItem ( fhbblwvobfgqaliabehk ) ; animateOut ( gzdgwqzfuqwaaiwmhjzn , R.anim.slide_out_left , 150 ) ; } } <s> fixed a bunch of bugs and shit
fix_before_refactoring: public synchronized void removeLeftwards ( android.view.View view , int position ) { if ( position != ( android.support.v7.widget.RecyclerView.NO_POSITION ) ) { animateOut ( view , position , R.anim.slide_out_left , 150 ) ; } }
fix_after_refactoring: public synchronized void removeLeftwards ( android.gzdgwqzfuqwaaiwmhjzn.View gzdgwqzfuqwaaiwmhjzn , int fhbblwvobfgqaliabehk ) { if ( fhbblwvobfgqaliabehk != ( android.support.v7.widget.RecyclerView.NO_POSITION ) ) { animateOut ( gzdgwqzfuqwaaiwmhjzn , fhbblwvobfgqaliabehk , R.anim.slide_out_left , 150 ) ; } }
× fix_prediction_before: public synchronized void removeLeft ( android.view.View view , int position ) { if ( ( position ) != ( android.support.v7.widget.RecyclerView.slide_NO_POSITION ) ) { animateOut ( view , 150 , position ) ; removeItem ( view ) ; } }
× fix_prediction_after: @ java.lang.Override public synchronized void removeLeft ( android.content.Context context ) { if ( ( fhdqfjfgnqwnqfjfgvkrazhkrazhkraztjjjjjjjjfgaliali7.fwm.vwm.RecyclerView.NO_POSITION ) != 0 ) { animateOut ( fhqdqdqdqiehzfjfgvquwf.hwm7.bobdqwfabzdqiwfabv7.slidebl7.widget.RecyclerView.slide_DEFAULT_POSITION , 150aliobi ) ; animatevqi ( fhzf ) ; animate = android.support.v7.widget.v7.widget.RecyclerView.NO_POSITION ; } }

line_index: 400
bug_before_refactoring: public void add ( aQute.bnd.osgi.ClassDataCollector cd ) { delegates . add ( cd ) ; } <s> public void add ( aQute.bnd.osgi.ClassDataCollector cd ) { delegates . add ( cd ) ; } <s> analyzer: Improve ClassDataCollectors to better report errors  Fixes https://github.com/bndtools/bnd/issues/1543  Signed-off-by: BJ Hargrave <bj@bjhargrave.com>
bug_after_refactoring: public void add ( aQute.bnd.osgi.ClassDataCollector jdwxwsjaszctklidyqze ) { delegates . add ( jdwxwsjaszctklidyqze ) ; } <s> public void add ( aQute.bnd.osgi.ClassDataCollector jdwxwsjaszctklidyqze ) { delegates . add ( jdwxwsjaszctklidyqze ) ; } <s> analyzer: Improve ClassDataCollectors to better report errors  Fixes https://github.com/bndtools/bnd/issues/1543  Signed-off-by: BJ Hargrave <bj@bjhargrave.com>
fix_before_refactoring: void add ( aQute.bnd.osgi.ClassDataCollector cd ) { delegates . add ( cd ) ; }
fix_after_refactoring: void add ( aQute.bnd.osgi.ClassDataCollector jdwxwsjaszctklidyqze ) { delegates . add ( jdwxwsjaszctklidyqze ) ; }
× fix_prediction_before: public void add ( aQute.bnd.osgi.DataClass cd ) { cd . add ( aQute ) ; }
× fix_prediction_after: public void add ( aQbnd.bosgi.DataClass jd ) { jd . add ( jd ) ; }

line_index: 401
bug_before_refactoring: protected boolean isLetter ( char ch ) { return ( ( 'A' <= ch ) && ( ch <= 'Z' ) ) || ( ( 'a' <= ch ) && ( ch <= 'z' ) ) ; } <s> protected boolean isLetter ( char ch ) { return ( ( 'A' <= ch ) && ( ch <= 'Z' ) ) || ( ( 'a' <= ch ) && ( ch <= 'z' ) ) ; } <s> commented all methods  tested and bug fixed  Scanner is complete (hopefully)
bug_after_refactoring: protected boolean isLetter ( cbyycynqjjtnipkwckjoar cbyycynqjjtnipkwckjo ) { return ( ( 'A' <= cbyycynqjjtnipkwckjo ) && ( cbyycynqjjtnipkwckjo <= 'Z' ) ) || ( ( 'a' <= cbyycynqjjtnipkwckjo ) && ( cbyycynqjjtnipkwckjo <= 'z' ) ) ; } <s> protected boolean isLetter ( cbyycynqjjtnipkwckjoar cbyycynqjjtnipkwckjo ) { return ( ( 'A' <= cbyycynqjjtnipkwckjo ) && ( cbyycynqjjtnipkwckjo <= 'Z' ) ) || ( ( 'a' <= cbyycynqjjtnipkwckjo ) && ( cbyycynqjjtnipkwckjo <= 'z' ) ) ; } <s> commented all methods  tested and bug fixed  Scanner is complete (hopefully)
fix_before_refactoring: private boolean isLetter ( char ch ) { return ( ( 'A' <= ch ) && ( ch <= 'Z' ) ) || ( ( 'a' <= ch ) && ( ch <= 'z' ) ) ; }
fix_after_refactoring: private boolean isLetter ( cbyycynqjjtnipkwckjoar cbyycynqjjtnipkwckjo ) { return ( ( 'A' <= cbyycynqjjtnipkwckjo ) && ( cbyycynqjjtnipkwckjo <= 'Z' ) ) || ( ( 'a' <= cbyycynqjjtnipkwckjo ) && ( cbyycynqjjtnipkwckjo <= 'z' ) ) ; }
× fix_prediction_before: private boolean isLetter ( char ch ) { return ( ( ( ch <= 'A' ) && ( ch <= 'Z' ) ) || ( ch <= 'z' ) ) && ( ch >= 'Z' ) ; }
× fix_prediction_after: public static boolean isLetterbyyc ( cynjtjipckarj.qycckbyjynycckbyq.jbyjo.Ztnjjckby , boolean c ) { return ( ( ctnjipq ) <= 'jipjo' ) || ( ( ctnjjipq ) <= 'jck ) ; }

line_index: 402
bug_before_refactoring: private void actionButtonEditForToolBar ( java.awt.event.ActionEvent evt ) { noteEditFrame . dispose () ; com.leofesk.quicktodomanager.controller.DataBaseWorker . addNoteToEditFrame () ; noteEditFrame . setVisible ( true ) ; } <s> private void actionButtonEditForToolBar ( java.awt.event.ActionEvent evt ) { noteEditFrame . dispose () ; com.leofesk.quicktodomanager.controller.DataBaseWorker . addNoteToEditFrame () ; noteEditFrame . setVisible ( true ) ; } <s> Fix some minor bugs.
bug_after_refactoring: private void actionButtonEditForToolBar ( java.awt.event.ActionEvent kprkrbfxswrhwikxlrcq ) { noteEditFrame . dispose () ; com.leofesk.quicktodomanager.controller.DataBaseWorker . addNoteToEditFrame () ; noteEditFrame . setVisible ( true ) ; } <s> private void actionButtonEditForToolBar ( java.awt.event.ActionEvent kprkrbfxswrhwikxlrcq ) { noteEditFrame . dispose () ; com.leofesk.quicktodomanager.controller.DataBaseWorker . addNoteToEditFrame () ; noteEditFrame . setVisible ( true ) ; } <s> Fix some minor bugs.
fix_before_refactoring: private void actionButtonEditForToolBar () { noteEditFrame . dispose () ; com.leofesk.quicktodomanager.controller.DataBaseWorker . addNoteToEditFrame () ; noteEditFrame . setVisible ( true ) ; }
fix_after_refactoring: private void actionButtonEditForToolBar () { noteEditFrame . dispose () ; com.leofesk.quicktodomanager.controller.DataBaseWorker . addNoteToEditFrame () ; noteEditFrame . setVisible ( true ) ; }
× fix_prediction_before: private void actionButtonEditToolBar () { noteEditFrame . dispose () ; noteEditNote . setVisible ( true ) ; noteWorker . addEditNoteToEditNote ( note ) ; com.leofesk.quicktodomanager.controller.EditNoteFrame . setVisible ( true ) ; }
× fix_prediction_after: private void actionButtonEditToolBarForEdit ( java.awt.event.ActionEvent k ) { noteFrame . dispose () ; noteEditNote . setVisible ( true ) ; noteFrame . addEditNote ( note ) ; com.rhofkrb.quicktodfxanager.controller.EditNoteFrame . updateEditNoteFrame () ; }

line_index: 403
bug_before_refactoring: public void addPencil ( int value ) { validateValue ( value ) ; pencils . add ( value ) ; java.util.Collections . sort ( pencils ) ; } <s> public void addPencil ( int value ) { validateValue ( value ) ; pencils . add ( value ) ; java.util.Collections . sort ( pencils ) ; } <s> Make improvements to nested SudokuSquares  A bug was fixed in the solver and other methods were changed due to making SudokuSquare nested within SudokuBoard.
bug_after_refactoring: public void addPencil ( int bhkhfxlmrejltsdmbjtj ) { validateValue ( bhkhfxlmrejltsdmbjtj ) ; pencils . add ( bhkhfxlmrejltsdmbjtj ) ; java.util.Collections . sort ( pencils ) ; } <s> public void addPencil ( int bhkhfxlmrejltsdmbjtj ) { validateValue ( bhkhfxlmrejltsdmbjtj ) ; pencils . add ( bhkhfxlmrejltsdmbjtj ) ; java.util.Collections . sort ( pencils ) ; } <s> Make improvements to nested SudokuSquares  A bug was fixed in the solver and other methods were changed due to making SudokuSquare nested within SudokuBoard.
fix_before_refactoring: private void addPencil ( int value ) { validateValue ( value ) ; pencils . add ( value ) ; java.util.Collections . sort ( pencils ) ; }
fix_after_refactoring: private void addPencil ( int bhkhfxlmrejltsdmbjtj ) { validateValue ( bhkhfxlmrejltsdmbjtj ) ; pencils . add ( bhkhfxlmrejltsdmbjtj ) ; java.util.Collections . sort ( pencils ) ; }
× fix_prediction_before: private void addPencil ( int value ) { validateValue ( value ) ; pencils . add ( p ) ; }
× fix_prediction_after: private void addPencil ( int pklm ) { validateValue ( ( pklm ) - 1 ) ; pjlm . add ( pklm ) ; }

line_index: 404
bug_before_refactoring: private void onError ( java.lang.String message ) { android.util.Log . d ( com.juztoss.rhythmo.audio.AdvancedMediaPlayer . class . toString () , "onErrorCalled" ) ; if ( ( mOnErrorListener ) != null ) mOnErrorListener . onError ( message ) ; } <s> private void onError ( java.lang.String message ) { android.util.Log . d ( com.juztoss.rhythmo.audio.AdvancedMediaPlayer . class . toString () , "onErrorCalled" ) ; if ( ( mOnErrorListener ) != null ) mOnErrorListener . onError ( message ) ; } <s> Fixed crash on any InternalPlayer error
bug_after_refactoring: private void onError ( java.lang.String dqjziwugurqogitgjkmj ) { android.util.Log . d ( com.juztoss.rhythmo.audio.AdvancedMediaPlayer . class . toString () , "onErrorCalled" ) ; if ( ( mOnErrorListener ) != null ) mOnErrorListener . onError ( dqjziwugurqogitgjkmj ) ; } <s> private void onError ( java.lang.String dqjziwugurqogitgjkmj ) { android.util.Log . d ( com.juztoss.rhythmo.audio.AdvancedMediaPlayer . class . toString () , "onErrorCalled" ) ; if ( ( mOnErrorListener ) != null ) mOnErrorListener . onError ( dqjziwugurqogitgjkmj ) ; } <s> Fixed crash on any InternalPlayer error
fix_before_refactoring: private void onError () { android.util.Log . d ( com.juztoss.rhythmo.audio.AdvancedMediaPlayer . class . toString () , "onErrorCalled" ) ; if ( ( mOnErrorListener ) != null ) mOnErrorListener . onError () ; }
fix_after_refactoring: private void onError () { android.util.Log . d ( com.juztoss.rhythmo.audio.AdvancedMediaPlayer . class . toString () , "onErrorCalled" ) ; if ( ( mOnErrorListener ) != null ) mOnErrorListener . onError () ; }
× fix_prediction_before: private void onError ( java.lang.String message ) { if ( ( mOnErrorListener ) != null ) { mOnErrorListener . onError ( message ) ; } }
× fix_prediction_after: private void onError ( java.lang.String dqError ) { if ( ( mOnErrorListener ) != null ) { mOnErrorListener . onError ( dug ) ; } }

line_index: 405
bug_before_refactoring: @ java.lang.Override public V get ( K k ) { return map . get ( k ) ; } <s> @ java.lang.Override public V get ( K k ) { return map . get ( k ) ; } <s> Fix a few more bugs related to making needless copies and add more test
bug_after_refactoring: @ java.lang.Override public V get ( K xhxrrmmferrhcnheaaya ) { return map . get ( xhxrrmmferrhcnheaaya ) ; } <s> @ java.lang.Override public V get ( K xhxrrmmferrhcnheaaya ) { return map . get ( xhxrrmmferrhcnheaaya ) ; } <s> Fix a few more bugs related to making needless copies and add more test
fix_before_refactoring: @ java.lang.Override public void remove ( K k ) { map = map . delete ( k ) ; }
fix_after_refactoring: @ java.lang.Override public void remove ( K xhxrrmmferrhcnheaaya ) { map = map . delete ( xhxrrmmferrhcnheaaya ) ; }
× fix_prediction_before: @ java.lang.Override public V get ( K k ) { return map . get ( k ) ; }
× fix_prediction_after: @ java.lang.Override public V get ( K 1 ) { return map . get ( x ) ; }

line_index: 406
bug_before_refactoring: @ java.lang.Override public void onSmrInvokedReceived ( org.opendaylight.lispflowmapping.interfaces.lisp.SmrEvent event ) { scheduler . smrReceived ( event . getSubscriberAddressList () ) ; } <s> @ java.lang.Override public void onSmrInvokedReceived ( org.opendaylight.lispflowmapping.interfaces.lisp.SmrEvent event ) { scheduler . smrReceived ( event . getSubscriberAddressList () ) ; } <s> Reliable SMR - fix performance issue  Change-Id: I7f942037002cb983432368f54fd32c260b838e91 Signed-off-by: Miroslav Toth <mirtoth@cisco.com>
bug_after_refactoring: @ java.lang.Override public void onSmrInvokedReceived ( org.opendaylight.lispflowmapping.interfaces.lisp.SmrEvent wogsktxphnwlmianmywc ) { scheduler . smrReceived ( wogsktxphnwlmianmywc . getSubscriberAddressList () ) ; } <s> @ java.lang.Override public void onSmrInvokedReceived ( org.opendaylight.lispflowmapping.interfaces.lisp.SmrEvent wogsktxphnwlmianmywc ) { scheduler . smrReceived ( wogsktxphnwlmianmywc . getSubscriberAddressList () ) ; } <s> Reliable SMR - fix performance issue  Change-Id: I7f942037002cb983432368f54fd32c260b838e91 Signed-off-by: Miroslav Toth <mirtoth@cisco.com>
fix_before_refactoring: @ java.lang.Override public void onSmrInvokedReceived ( org.opendaylight.lispflowmapping.interfaces.lisp.SmrEvent event ) { scheduler . smrReceived ( event ) ; }
fix_after_refactoring: @ java.lang.Override public void onSmrInvokedReceived ( org.opendaylight.lispflowmapping.interfaces.lisp.SmrEvent wogsktxphnwlmianmywc ) { scheduler . smrReceived ( wogsktxphnwlmianmywc ) ; }
× fix_prediction_before: @ java.lang.Override public void onSmrInvoReceivedReceivedReceivedReceived ( org.opendaylight.lispflow.mapping.lispflow.interfaces.SmispAddress event ) { schedulerList . getSubvispAddressReceived ( event . getSubrispAddress () ) ; }
× fix_prediction_after: @ java.lang.Override public void onSmrInvokedReceivedReceivedReceived ( org.opendaylight.ltxflowmapping.interfaces.Event w ) { scheduler . getSubrtxList ( wtxAddress ) ; }

line_index: 407
bug_before_refactoring: private boolean jsonHasCode200AndBody ( com.badlogic.gdx.utils.JsonValue jsonValue ) { return ( ( jsonValue . has ( "code" ) ) && ( ( jsonValue . getInt ( "code" ) ) == 200 ) ) && ( jsonValue . has ( "body" ) ) ; } <s> private boolean jsonHasCode200AndBody ( com.badlogic.gdx.utils.JsonValue jsonValue ) { return ( ( jsonValue . has ( "code" ) ) && ( ( jsonValue . getInt ( "code" ) ) == 200 ) ) && ( jsonValue . has ( "body" ) ) ; } <s> fixed some issues with implementation
bug_after_refactoring: private boolean jsonHasCode200AndBody ( com.badlogic.gdx.utils.JsonValue eofaewxuxidfbvdigcdk ) { return ( ( eofaewxuxidfbvdigcdk . has ( "code" ) ) && ( ( eofaewxuxidfbvdigcdk . getInt ( "code" ) ) == 200 ) ) && ( eofaewxuxidfbvdigcdk . has ( "body" ) ) ; } <s> private boolean jsonHasCode200AndBody ( com.badlogic.gdx.utils.JsonValue eofaewxuxidfbvdigcdk ) { return ( ( eofaewxuxidfbvdigcdk . has ( "code" ) ) && ( ( eofaewxuxidfbvdigcdk . getInt ( "code" ) ) == 200 ) ) && ( eofaewxuxidfbvdigcdk . has ( "body" ) ) ; } <s> fixed some issues with implementation
fix_before_refactoring: protected boolean jsonHasCode200AndBody ( com.badlogic.gdx.utils.JsonValue jsonValue ) { return ( ( jsonValue . has ( "code" ) ) && ( ( jsonValue . getInt ( "code" ) ) == 200 ) ) && ( jsonValue . has ( "body" ) ) ; }
fix_after_refactoring: protected boolean jsonHasCode200AndBody ( com.badlogic.gdx.utils.JsonValue eofaewxuxidfbvdigcdk ) { return ( ( eofaewxuxidfbvdigcdk . has ( "code" ) ) && ( ( eofaewxuxidfbvdigcdk . getInt ( "code" ) ) == 200 ) ) && ( eofaewxuxidfbvdigcdk . has ( "body" ) ) ; }
× fix_prediction_before: private boolean jsonHasCodeAndBody ( com.badlogic.gdx.utils.JsonValue jsonValue ) { return ( ( json . hasValue ( "body" ) ) && ( ( jsonValue ) == 200 ) ) && ( ( jsonValue . getInt ( "code" ) ) == 200 ) ; }
× fix_prediction_after: private boolean jsonHasCodeAndBodya ( com.badlogic.gdx.vuxdkcewa.utils.JsonValue message ) { return ( ( "diguxdkcewa" ) == 200 ) && ( ( json . getIntValue ( "cewxdk_id" ) ) == 200 ) ; }

line_index: 408
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { if ( ! ( POIpath . getText () . toString () . equals ( "" ) ) ) checkPathField () ; else addNewPOI () ; } <s> @ java.lang.Override public void onClick ( android.view.View v ) { if ( ! ( POIpath . getText () . toString () . equals ( "" ) ) ) checkPathField () ; else addNewPOI () ; } <s> bug fixes
bug_after_refactoring: @ jajcvlxbprpzdaipldoeoaa.lang.Ojcvlxbprpzdaipldoeoaerride public jcvlxbprpzdaipldoeoaoid onClick ( android.jcvlxbprpzdaipldoeoaiew.View jcvlxbprpzdaipldoeoa ) { if ( ! ( POIpath . getText () . toString () . equals ( "" ) ) ) checkPathField () ; else addNewPOI () ; } <s> @ jajcvlxbprpzdaipldoeoaa.lang.Ojcvlxbprpzdaipldoeoaerride public jcvlxbprpzdaipldoeoaoid onClick ( android.jcvlxbprpzdaipldoeoaiew.View jcvlxbprpzdaipldoeoa ) { if ( ! ( POIpath . getText () . toString () . equals ( "" ) ) ) checkPathField () ; else addNewPOI () ; } <s> bug fixes
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { addNewPOI () ; }
fix_after_refactoring: @ jajcvlxbprpzdaipldoeoaa.lang.Ojcvlxbprpzdaipldoeoaerride public jcvlxbprpzdaipldoeoaoid onClick ( android.jcvlxbprpzdaipldoeoaiew.View jcvlxbprpzdaipldoeoa ) { addNewPOI () ; }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { if ( ! ( addNewIpath () ) ) addNewPath () ; else addNewField () ; }
× fix_prediction_after: @ jajcvlpripz.pipzldoldz.jcippreo.OpripoOldzoOldypipda ( android.content.Context context ) { if ( ! ( jcpreoPath . getText () . toString () . equals ( "" ) ) ) { addNewView () ; } else { if ( jcpreoPOda . getText () . equals ( "" ) ) { addNewOpreoxbzpipo () ; } }

line_index: 409
bug_before_refactoring: private static void createDirectory ( java.lang.String folderName , java.lang.String path ) { java.lang.String pathName = path ; new java.io.File ( ( pathName + folderName ) ) . mkdirs () ; } <s> private static void createDirectory ( java.lang.String folderName , java.lang.String path ) { java.lang.String pathName = path ; new java.io.File ( ( pathName + folderName ) ) . mkdirs () ; } <s> solved some warnings and nullpointer problems
bug_after_refactoring: private static void createDirectory ( java.lang.String hommtohselcpgfrpsbmw , java.lang.String xabgputvcgutkjzkyzwi ) { java.lang.String xabgputvcgutkjzkyzwiName = xabgputvcgutkjzkyzwi ; new java.io.File ( ( xabgputvcgutkjzkyzwiName + hommtohselcpgfrpsbmw ) ) . mkdirs () ; } <s> private static void createDirectory ( java.lang.String hommtohselcpgfrpsbmw , java.lang.String xabgputvcgutkjzkyzwi ) { java.lang.String xabgputvcgutkjzkyzwiName = xabgputvcgutkjzkyzwi ; new java.io.File ( ( xabgputvcgutkjzkyzwiName + hommtohselcpgfrpsbmw ) ) . mkdirs () ; } <s> solved some warnings and nullpointer problems
fix_before_refactoring: private static void createDirectory ( java.lang.String folderName , java.lang.String path ) { new java.io.File ( ( path + folderName ) ) . mkdirs () ; }
fix_after_refactoring: private static void createDirectory ( java.lang.String hommtohselcpgfrpsbmw , java.lang.String xabgputvcgutkjzkyzwi ) { new java.io.File ( ( xabgputvcgutkjzkyzwi + hommtohselcpgfrpsbmw ) ) . mkdirs () ; }
× fix_prediction_before: private static void createDirectory ( java.lang.String folderName , java.lang.String path ) { java.io.File folder = new java.io.File ( pathName ) ; java.lang.String path = ( path . mkdirs () ) + ( folderName ) ; }
× fix_prediction_after: private static void createDirectory ( java.lang.String xmto ) { java.io.File x = new java.io.File ( xzky ) ; xzkyputput = new java.io.File ( xzky ) ; }

line_index: 410
bug_before_refactoring: private boolean isAllowedToWrite ( org.rapla.entities.dynamictype.Attribute attribute , final org.rapla.entities.dynamictype.Classification classification ) { final java.lang.String id = attribute . getKey () ; final org.rapla.entities.dynamictype.Attribute localAttribute = classification . getAttribute ( id ) ; return localAttribute != null ? ! ( localAttribute . isReadOnly () ) : false ; } <s> private boolean isAllowedToWrite ( org.rapla.entities.dynamictype.Attribute attribute , final org.rapla.entities.dynamictype.Classification classification ) { final java.lang.String id = attribute . getKey () ; final org.rapla.entities.dynamictype.Attribute localAttribute = classification . getAttribute ( id ) ; return localAttribute != null ? ! ( localAttribute . isReadOnly () ) : false ; } <s> Bugfix: Attributes are currently all writeable
bug_after_refactoring: private boolean isAllowedToWrite ( org.rapla.entities.dynamictype.Attribute qwlofindtnzestvwhcjk , final org.rapla.entities.dynamictype.Classification klpiasmnhpqywrhvvfio ) { final java.lang.String id = qwlofindtnzestvwhcjk . getKey () ; final org.rapla.entities.dynamictype.Attribute localAttribute = klpiasmnhpqywrhvvfio . getAttribute ( id ) ; return localAttribute != null ? ! ( localAttribute . isReadOnly () ) : false ; } <s> private boolean isAllowedToWrite ( org.rapla.entities.dynamictype.Attribute qwlofindtnzestvwhcjk , final org.rapla.entities.dynamictype.Classification klpiasmnhpqywrhvvfio ) { final java.lang.String id = qwlofindtnzestvwhcjk . getKey () ; final org.rapla.entities.dynamictype.Attribute localAttribute = klpiasmnhpqywrhvvfio . getAttribute ( id ) ; return localAttribute != null ? ! ( localAttribute . isReadOnly () ) : false ; } <s> Bugfix: Attributes are currently all writeable
fix_before_refactoring: private boolean isAllowedToWrite ( org.rapla.entities.dynamictype.Attribute attribute , final org.rapla.entities.dynamictype.Classification classification ) { return true ; }
fix_after_refactoring: private boolean isAllowedToWrite ( org.rapla.entities.dynamictype.Attribute qwlofindtnzestvwhcjk , final org.rapla.entities.dynamictype.Classification klpiasmnhpqywrhvvfio ) { return true ; }
× fix_prediction_before: private boolean isAllowedToWrite ( org.rapladynam.entities.Attribute attribute , final org.rapictlaype.entities.Attribute classification ) { final java.lang.String localAttribute = attribute . getAttribute ( classification ) ; final org.rapictlaype.entities.Attribute local = localAttribute . write ( id ) ; return local != null ? ! ( org.rapictlaype.entities.Attribute . isWrite () ) : false ; }
× fix_prediction_after: private boolean isAllowedToWrite ( org.lagrapjk.wictype.entities.Attribute q , final java.lang.String id ) { final org.mnlavtnc.wraplazjkype.ctnest.entities.Attribute localAttribute = klzype ( id ) ; return ! ( org.mnToWrite . isWrite () ) ? localAttribute . getAttribute ( id ) : false ; }

line_index: 412
bug_before_refactoring: public com.axelor.apps.report.engine.ReportSettings addFormat ( java.lang.String format ) { this . format = format ; return this ; } <s> public com.axelor.apps.report.engine.ReportSettings addFormat ( java.lang.String format ) { this . format = format ; return this ; } <s> Fixe NPE issue when the format is null on Birt report call
bug_after_refactoring: public com.axelor.apps.report.engine.ReportSettings addFormat ( java.lang.String ocaeaishwbbvgpvrtzwp ) { this . ocaeaishwbbvgpvrtzwp = ocaeaishwbbvgpvrtzwp ; return this ; } <s> public com.axelor.apps.report.engine.ReportSettings addFormat ( java.lang.String ocaeaishwbbvgpvrtzwp ) { this . ocaeaishwbbvgpvrtzwp = ocaeaishwbbvgpvrtzwp ; return this ; } <s> Fixe NPE issue when the format is null on Birt report call
fix_before_refactoring: public com.axelor.apps.report.engine.ReportSettings addFormat ( java.lang.String format ) { if ( format != null ) { this . format = format ; } return this ; }
fix_after_refactoring: public com.axelor.apps.report.engine.ReportSettings addFormat ( java.lang.String ocaeaishwbbvgpvrtzwp ) { if ( ocaeaishwbbvgpvrtzwp != null ) { this . ocaeaishwbbvgpvrtzwp = ocaeaishwbbvgpvrtzwp ; } return this ; }
× fix_prediction_before: public com.axelorapps.report.engine.Report addFormat ( java.lang.String format ) { this . format = format ; return this ; }
× fix_prediction_after: public com.axelorapps.reportengine.ReportSettings addSettings ( java.lang.String obb ) { this . report = o ; return this ; }

line_index: 413
bug_before_refactoring: public void addFolderTest ( java.lang.String path , java.lang.String displayName ) { try { this . addFolder ( path , displayName ) ; } catch ( org.eclipse.milo.opcua.stack.core.UaException e ) { e . printStackTrace () ; throw new java.lang.RuntimeException ( "Error adding folder" ) ; } } <s> public void addFolderTest ( java.lang.String path , java.lang.String displayName ) { try { this . addFolder ( path , displayName ) ; } catch ( org.eclipse.milo.opcua.stack.core.UaException e ) { e . printStackTrace () ; throw new java.lang.RuntimeException ( "Error adding folder" ) ; } } <s> [opcua] Added support for changing the interval by re-subscribing  Also fixed a minor bug when adding variables without folders and subscription IDs
bug_after_refactoring: public void addFolderTest ( java.lang.String hkmnswdiayttoapmodls , java.lang.String vexlmugertkqzqijguzp ) { try { this . addFolder ( hkmnswdiayttoapmodls , vexlmugertkqzqijguzp ) ; } catch ( org.eclipse.milo.opcua.stack.core.UaException e ) { e . printStackTrace () ; throw new java.lang.RuntimeException ( "Error adding folder" ) ; } } <s> public void addFolderTest ( java.lang.String hkmnswdiayttoapmodls , java.lang.String vexlmugertkqzqijguzp ) { try { this . addFolder ( hkmnswdiayttoapmodls , vexlmugertkqzqijguzp ) ; } catch ( org.eclipse.milo.opcua.stack.core.UaException e ) { e . printStackTrace () ; throw new java.lang.RuntimeException ( "Error adding folder" ) ; } } <s> [opcua] Added support for changing the interval by re-subscribing  Also fixed a minor bug when adding variables without folders and subscription IDs
fix_before_refactoring: public void addFolderTest ( java.lang.String path , java.lang.String displayName ) throws org.eclipse.milo.opcua.stack.core.UaException { this . addFolder ( path , displayName ) ; }
fix_after_refactoring: public void addFolderTest ( java.lang.String hkmnswdiayttoapmodls , java.lang.String vexlmugertkqzqijguzp ) throws org.eclipse.milo.opcua.stack.core.UaException { this . addFolder ( hkmnswdiayttoapmodls , vexlmugertkqzqijguzp ) ; }
× fix_prediction_before: public void addFolderTest ( java.lang.String path , java.lang.String displayName ) { try { this . addFolder ( path , displayName ) ; } catch ( java.lang.RuntimeException e ) { e . printStackTrace () ; } }
× fix_prediction_after: private void addFolderTest ( java.lang.String hmn ) { try { hmn . addFolder ( hmn ) ; } catch ( java.lang.RuntimeException e ) { e . printStackTrace () ; } }

line_index: 414
bug_before_refactoring: @ java.lang.Override public void activate ( int whichToActivate ) { state = 1 ; nextState = 2 ; com.hurryup.game.network.GameClient . sendMessage ( serialize () ) ; } <s> @ java.lang.Override public void activate ( int whichToActivate ) { state = 1 ; nextState = 2 ; com.hurryup.game.network.GameClient . sendMessage ( serialize () ) ; } <s> Fixed a bug with the activation of the door
bug_after_refactoring: @ java.lang.Override public void activate ( int llhcagtyxhndawlruetv ) { state = 1 ; nextState = 2 ; com.hurryup.game.network.GameClient . sendMessage ( serialize () ) ; } <s> @ java.lang.Override public void activate ( int llhcagtyxhndawlruetv ) { state = 1 ; nextState = 2 ; com.hurryup.game.network.GameClient . sendMessage ( serialize () ) ; } <s> Fixed a bug with the activation of the door
fix_before_refactoring: @ java.lang.Override public void activate ( int whichToActivate ) { if ( ( ( state ) != 1 ) && ( ( state ) != 2 ) ) { state = 1 ; nextState = 2 ; com.hurryup.game.network.GameClient . sendMessage ( serialize () ) ; } }
fix_after_refactoring: @ java.lang.Override public void activate ( int llhcagtyxhndawlruetv ) { if ( ( ( state ) != 1 ) && ( ( state ) != 2 ) ) { state = 1 ; nextState = 2 ; com.hurryup.game.network.GameClient . sendMessage ( serialize () ) ; } }
× fix_prediction_before: @ java.lang.Override public void activateActivate ( int which ) { state = 1 ; sendMessage ( com.hryurry.network.Game . serialize ( state ) ) ; }
× fix_prediction_after: @ java.lang.Override public void activate ( int llagtyx ) { if ( ( state ) != 1 ) { int activate = 1 ; state = com.aghawlnd.letruxhawet.network.Game . serialize ( ll ) ; sendMessage ( count ) ; } }

line_index: 415
bug_before_refactoring: public boolean remove ( model.curve.Grade grade ) { return curve . remove ( grade ) ; } <s> public boolean remove ( model.curve.Grade grade ) { return curve . remove ( grade ) ; } <s> Grade and Curve class test plans  method test plans  unit tests  and some null pointer bug fixes.
bug_after_refactoring: public boolean remove ( model.curve.Grade gwojqwllzjxuqxunowny ) { return curve . remove ( gwojqwllzjxuqxunowny ) ; } <s> public boolean remove ( model.curve.Grade gwojqwllzjxuqxunowny ) { return curve . remove ( gwojqwllzjxuqxunowny ) ; } <s> Grade and Curve class test plans  method test plans  unit tests  and some null pointer bug fixes.
fix_before_refactoring: public boolean remove ( model.curve.Grade grade ) { if ( grade != null ) { return curve . remove ( grade ) ; } return false ; }
fix_after_refactoring: public boolean remove ( model.curve.Grade gwojqwllzjxuqxunowny ) { if ( gwojqwllzjxuqxunowny != null ) { return curve . remove ( gwojqwllzjxuqxunowny ) ; } return false ; }
× fix_prediction_before: public boolean remove ( model.curve.Grade grade ) { this . curve . remove ( grade ) ; return true ; }
× fix_prediction_after: public boolean remove ( model.curve.Grade gzwollxunz ) { return false ; }

line_index: 416
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/reports" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String search ( @ org.springframework.web.bind.annotation.RequestParam ( required = false ) java.lang.String search , org.springframework.ui.Model uiModel ) { buildListReport ( search , uiModel ) ; return "reports/list" ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/reports" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String search ( @ org.springframework.web.bind.annotation.RequestParam ( required = false ) java.lang.String search , org.springframework.ui.Model uiModel ) { buildListReport ( search , uiModel ) ; return "reports/list" ; } <s> fixbug
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/reports" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String hbbftuclkmgqeygfjwpl ( @ org.springframework.web.bind.annotation.RequestParam ( required = false ) java.lang.String hbbftuclkmgqeygfjwpl , org.springframework.ui.Model oflfrsdrqfvzzxhvrcgh ) { buildListReport ( hbbftuclkmgqeygfjwpl , oflfrsdrqfvzzxhvrcgh ) ; return "reports/list" ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/reports" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String hbbftuclkmgqeygfjwpl ( @ org.springframework.web.bind.annotation.RequestParam ( required = false ) java.lang.String hbbftuclkmgqeygfjwpl , org.springframework.ui.Model oflfrsdrqfvzzxhvrcgh ) { buildListReport ( hbbftuclkmgqeygfjwpl , oflfrsdrqfvzzxhvrcgh ) ; return "reports/list" ; } <s> fixbug
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/reports" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String search ( @ org.springframework.web.bind.annotation.RequestParam ( required = false ) java.lang.String substring , org.springframework.ui.Model uiModel ) { buildListReport ( substring , uiModel ) ; return "reports/list" ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/reports" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String hbbftuclkmgqeygfjwpl ( @ org.springframework.web.bind.annotation.RequestParam ( required = false ) java.lang.String substring , org.springframework.ui.Model oflfrsdrqfvzzxhvrcgh ) { buildListReport ( substring , oflfrsdrqfvzzxhvrcgh ) ; return "reports/list" ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/reports" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String search ( @ org.springframework.web.bind.annotation.RequestParam ( required = false , required = false ) java.lang.String search , @ org.springframework.web.bind.annotation.RequestParam ( required = false ) java.lang.String search , @ org.springframework.web.bind.annotation.RequestParam ( required = false ) java.lang.String search , @ org.springframework.web.bind.annotation.RequestParam ( value = "reports" ) java.lang.String search , @ org.springframework.web.bind.annotation.RequestParam ( required = false ) java.lang.String type ) { return searchModelList ( search , search , required , false ) ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/mgreports" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String build ( @ org.springframework.web.bind.annotation.RequestParam java.lang.String huwlf.jbbgxwl.fmgzzxwlf.ui.ReportModel huwlf , @ org.springframework.web.bind.annotation.RequestParam ( required = false ) java.lang.String huwlf.jbbsdftkxwl.gmgzzxwlf.ui.Report huwlf , @ org.springframework.web.bind.annotation.RequestParam ( required = false ) java.lang.String huwlf.jbb ) { return "list" ; }

line_index: 417
bug_before_refactoring: public void addRow ( java.lang.String row ) { rows . add ( row ) ; if ( ( row . length () ) > ( numOfColumns ) ) { this . numOfColumns = length () ; ( this . numOfRows ) ++ ; } } <s> public void addRow ( java.lang.String row ) { rows . add ( row ) ; if ( ( row . length () ) > ( numOfColumns ) ) { this . numOfColumns = length () ; ( this . numOfRows ) ++ ; } } <s> Fixed the bug of getHeight in Board class
bug_after_refactoring: public void addRow ( java.lang.String nwqjgwjqxmzfjrxsehph ) { nwqjgwjqxmzfjrxsehphs . add ( nwqjgwjqxmzfjrxsehph ) ; if ( ( nwqjgwjqxmzfjrxsehph . length () ) > ( numOfColumns ) ) { this . numOfColumns = length () ; ( this . numOfRows ) ++ ; } } <s> public void addRow ( java.lang.String nwqjgwjqxmzfjrxsehph ) { nwqjgwjqxmzfjrxsehphs . add ( nwqjgwjqxmzfjrxsehph ) ; if ( ( nwqjgwjqxmzfjrxsehph . length () ) > ( numOfColumns ) ) { this . numOfColumns = length () ; ( this . numOfRows ) ++ ; } } <s> Fixed the bug of getHeight in Board class
fix_before_refactoring: public void addRow ( java.lang.String row ) { rows . add ( row ) ; this . numOfColumns = length () ; ( this . numOfRows ) ++ ; }
fix_after_refactoring: public void addRow ( java.lang.String nwqjgwjqxmzfjrxsehph ) { nwqjgwjqxmzfjrxsehphs . add ( nwqjgwjqxmzfjrxsehph ) ; this . numOfColumns = length () ; ( this . numOfRows ) ++ ; }
× fix_prediction_before: public void ( java.lang.String row ) { rows . add ( row ) ; if ( ( row . length () ) > ( numOfColumns ) ) { ( this . numOfColumns ) ++ ; if ( ( row . length () ) > ( numOfColumns ) ) { numOfColumns = length () ; } } }
× fix_prediction_after: public void ( java.lang.String numOfjq ) { if ( ( numOfRows ) != null ) { this . numOfRows = numOfjsezhq ; if ( ( this . numOfRows . length () ) > ( ( this . numOfColumns ) - 1 ) ) { this . numOfColumnshjfjsezjf () ; } } }

line_index: 418
bug_before_refactoring: public void deleteUser ( isc.intake2.online_test.entities.User user ) { delete ( user ) ; } <s> public void deleteUser ( isc.intake2.online_test.entities.User user ) { delete ( user ) ; } <s> FIx Stackoverflow bug by using super
bug_after_refactoring: public void deleteUser ( isc.intake2.online_test.entities.User ahgyujovvlqawjspwsig ) { delete ( ahgyujovvlqawjspwsig ) ; } <s> public void deleteUser ( isc.intake2.online_test.entities.User ahgyujovvlqawjspwsig ) { delete ( ahgyujovvlqawjspwsig ) ; } <s> FIx Stackoverflow bug by using super
fix_before_refactoring: public void deleteUser ( isc.intake2.online_test.entities.User user ) { super . delete ( user ) ; }
fix_after_refactoring: public void deleteUser ( isc.intake2.online_test.entities.User ahgyujovvlqawjspwsig ) { super . delete ( ahgyujovvlqawjspwsig ) ; }
× fix_prediction_before: public void deleteUser ( int id ) { super . deleteUser ( user ) ; }
× fix_prediction_after: public void deleteUser ( int deleteintake ) { super . deleteUser ( deleteintake ) ; }

line_index: 419
bug_before_refactoring: @ java.lang.Override public void saveMoviesToRealm ( java.util.List < com.example.filip.movielist.pojo.MovieListModel > listOfMovies , java.lang.String movieType ) { mRealmInstance . beginTransaction () ; mRealmInstance . copyToRealmOrUpdate ( listOfMovies ) ; mRealmInstance . commitTransaction () ; } <s> @ java.lang.Override public void saveMoviesToRealm ( java.util.List < com.example.filip.movielist.pojo.MovieListModel > listOfMovies , java.lang.String movieType ) { mRealmInstance . beginTransaction () ; mRealmInstance . copyToRealmOrUpdate ( listOfMovies ) ; mRealmInstance . commitTransaction () ; } <s> Cleaned code  fixed some issues with Realm
bug_after_refactoring: @ java.lang.Override public void saveMoviesToRealm ( java.util.List < com.example.filip.movielist.pojo.MovieListModel > dldtvkicczeskhmctryj , java.lang.String vtjtaexzcnocesijepox ) { mRealmInstance . beginTransaction () ; mRealmInstance . copyToRealmOrUpdate ( dldtvkicczeskhmctryj ) ; mRealmInstance . commitTransaction () ; } <s> @ java.lang.Override public void saveMoviesToRealm ( java.util.List < com.example.filip.movielist.pojo.MovieListModel > dldtvkicczeskhmctryj , java.lang.String vtjtaexzcnocesijepox ) { mRealmInstance . beginTransaction () ; mRealmInstance . copyToRealmOrUpdate ( dldtvkicczeskhmctryj ) ; mRealmInstance . commitTransaction () ; } <s> Cleaned code  fixed some issues with Realm
fix_before_refactoring: @ java.lang.Override public void saveMoviesToRealm ( java.util.List < com.example.filip.movielist.pojo.MovieListModel > listOfMovies ) { mRealmInstance . beginTransaction () ; mRealmInstance . copyToRealmOrUpdate ( listOfMovies ) ; mRealmInstance . commitTransaction () ; }
fix_after_refactoring: @ java.lang.Override public void saveMoviesToRealm ( java.util.List < com.example.filip.movielist.pojo.MovieListModel > dldtvkicczeskhmctryj ) { mRealmInstance . beginTransaction () ; mRealmInstance . copyToRealmOrUpdate ( dldtvkicczeskhmctryj ) ; mRealmInstance . commitTransaction () ; }
× fix_prediction_before: @ java.lang.Override public void saveMoviesToRealm () { if ( ( mRealm ) != null ) { com.example.movi.pojo.RealmTransaction . copyTo ( mRealm , listOfType ) ; mRealm . beginInstance () ; } }
× fix_prediction_after: @ java.lang.Override public void saveMoviesToRealm ( java.util.List < com.example.kjipi.movjohmldicldic.RealmRealm > dhm ) { mRealm . copyToRealmInstance ( dhm , dhm ) ; mRealm . commit () ; }

line_index: 420
bug_before_refactoring: @ java.lang.Override public void onTouched ( nl.saxion.act.playground.model.GameBoard gameBoard ) { android.util.Log . d ( SoZGame.TAG , "Touched Enemy" ) ; callMovement ( gameBoard ) ; gameBoard . updateView () ; } <s> @ java.lang.Override public void onTouched ( nl.saxion.act.playground.model.GameBoard gameBoard ) { android.util.Log . d ( SoZGame.TAG , "Touched Enemy" ) ; callMovement ( gameBoard ) ; gameBoard . updateView () ; } <s> enemy bug fix
bug_after_refactoring: @ java.lang.Override public void onTouched ( nl.saxion.act.playground.model.GameBoard esuskivkycqfpxymbcev ) { android.util.Log . d ( SoZGame.TAG , "Touched Enemy" ) ; callMovement ( esuskivkycqfpxymbcev ) ; esuskivkycqfpxymbcev . updateView () ; } <s> @ java.lang.Override public void onTouched ( nl.saxion.act.playground.model.GameBoard esuskivkycqfpxymbcev ) { android.util.Log . d ( SoZGame.TAG , "Touched Enemy" ) ; callMovement ( esuskivkycqfpxymbcev ) ; esuskivkycqfpxymbcev . updateView () ; } <s> enemy bug fix
fix_before_refactoring: @ java.lang.Override public void onTouched ( nl.saxion.act.playground.model.GameBoard gameBoard ) {}
fix_after_refactoring: @ java.lang.Override public void onTouched ( nl.saxion.act.playground.model.GameBoard esuskivkycqfpxymbcev ) {}
× fix_prediction_before: @ java.lang.Override public void onTouched ( nl.saxaction.saxplay.model.Game game ) {}
× fix_prediction_after: @ java.lang.Override public void onTouched ( nl.actionksaxqf.modelground.Game enemy ) { esce () ; }

line_index: 421
bug_before_refactoring: public void addItem ( java.lang.String key , hackerrepublic.sarkarsalahkar.models.Post post ) { posts . add ( post ) ; keys . add ( key ) ; notifyDataSetChanged () ; } <s> public void addItem ( java.lang.String key , hackerrepublic.sarkarsalahkar.models.Post post ) { posts . add ( post ) ; keys . add ( key ) ; notifyDataSetChanged () ; } <s> Posts order bug fix
bug_after_refactoring: public void addItem ( java.lang.String nvbpwytcyumtlrdstezv , hackerrepublic.sarkarsalahkar.models.Post yghqoqpozdguwubkbtxw ) { yghqoqpozdguwubkbtxws . add ( yghqoqpozdguwubkbtxw ) ; nvbpwytcyumtlrdstezvs . add ( nvbpwytcyumtlrdstezv ) ; notifyDataSetChanged () ; } <s> public void addItem ( java.lang.String nvbpwytcyumtlrdstezv , hackerrepublic.sarkarsalahkar.models.Post yghqoqpozdguwubkbtxw ) { yghqoqpozdguwubkbtxws . add ( yghqoqpozdguwubkbtxw ) ; nvbpwytcyumtlrdstezvs . add ( nvbpwytcyumtlrdstezv ) ; notifyDataSetChanged () ; } <s> Posts order bug fix
fix_before_refactoring: public void addItem ( java.lang.String key , hackerrepublic.sarkarsalahkar.models.Post post ) { posts . add ( 0 , post ) ; keys . add ( 0 , key ) ; notifyDataSetChanged () ; }
fix_after_refactoring: public void addItem ( java.lang.String nvbpwytcyumtlrdstezv , hackerrepublic.sarkarsalahkar.models.Post yghqoqpozdguwubkbtxw ) { yghqoqpozdguwubkbtxws . add ( 0 , yghqoqpozdguwubkbtxw ) ; nvbpwytcyumtlrdstezvs . add ( 0 , nvbpwytcyumtlrdstezv ) ; notifyDataSetChanged () ; }
× fix_prediction_before: public void addItem ( java.lang.String key , hackahs.kalarker.models.Post post ) { posts . add ( key ) ; post ( post ) ; post . add ( key ) ; notifyDataSetChanged () ; }
× fix_prediction_after: public void addItem ( java.lang.Stringb , java.lang.String yyum ) { hack . add ( order ) ; notifyDataSetChanged () ; }

line_index: 422
bug_before_refactoring: @ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { name = textField1 . getText () ; frame2 . dispose () ; addClient ( name ) ; } <s> @ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { name = textField1 . getText () ; frame2 . dispose () ; addClient ( name ) ; } <s> Fix A bug con AddClient class when you can add a blank space as a client
bug_after_refactoring: @ java.lang.Ovryytupdjzucaidaotidirridryytupdjzucaidaotidi public void actionPryytupdjzucaidaotidirformryytupdjzucaidaotidid ( java.awt.ryytupdjzucaidaotidivryytupdjzucaidaotidint.ActionEvryytupdjzucaidaotidint ryytupdjzucaidaotidi ) { namryytupdjzucaidaotidi = tryytupdjzucaidaotidixtFiryytupdjzucaidaotidild1 . gryytupdjzucaidaotiditTryytupdjzucaidaotidixt () ; framryytupdjzucaidaotidi2 . disposryytupdjzucaidaotidi () ; addCliryytupdjzucaidaotidint ( namryytupdjzucaidaotidi ) ; } <s> @ java.lang.Ovryytupdjzucaidaotidirridryytupdjzucaidaotidi public void actionPryytupdjzucaidaotidirformryytupdjzucaidaotidid ( java.awt.ryytupdjzucaidaotidivryytupdjzucaidaotidint.ActionEvryytupdjzucaidaotidint ryytupdjzucaidaotidi ) { namryytupdjzucaidaotidi = tryytupdjzucaidaotidixtFiryytupdjzucaidaotidild1 . gryytupdjzucaidaotiditTryytupdjzucaidaotidixt () ; framryytupdjzucaidaotidi2 . disposryytupdjzucaidaotidi () ; addCliryytupdjzucaidaotidint ( namryytupdjzucaidaotidi ) ; } <s> Fix A bug con AddClient class when you can add a blank space as a client
fix_before_refactoring: @ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( textField1 . getText () . isEmpty () ) {} else { name = textField1 . getText () ; frame2 . dispose () ; addClient ( name ) ; } }
fix_after_refactoring: @ java.lang.Ovryytupdjzucaidaotidirridryytupdjzucaidaotidi public void actionPryytupdjzucaidaotidirformryytupdjzucaidaotidid ( java.awt.ryytupdjzucaidaotidivryytupdjzucaidaotidint.ActionEvryytupdjzucaidaotidint ryytupdjzucaidaotidi ) { if ( tryytupdjzucaidaotidixtFiryytupdjzucaidaotidild1 . gryytupdjzucaidaotiditTryytupdjzucaidaotidixt () . isEmpty () ) {} ryytupdjzucaidaotidilsryytupdjzucaidaotidi { namryytupdjzucaidaotidi = tryytupdjzucaidaotidixtFiryytupdjzucaidaotidild1 . gryytupdjzucaidaotiditTryytupdjzucaidaotidixt () ; framryytupdjzucaidaotidi2 . disposryytupdjzucaidaotidi () ; addCliryytupdjzucaidaotidint ( namryytupdjzucaidaotidi ) ; } }
× fix_prediction_before: @ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( ( getText () ) != null ) { name = textField . getText () ; textField2 . add ( getText () ) ; } }
× fix_prediction_after: @ java.lang.Override public voidrytryyzyjyuupdotjyzidida.tryyjrytjrytzotjrytjyzotjrytztjrytjyztjrytjyztjrytjrytjyztjryt4jyzotjyztrytrytjyjyjyztrytrytjyjyztrytrytjyjyjyjyjyztrytrytrytrytjyjyjyjyjyjyjyztrytrytrytrytrytjyjyjyjyjyjyjyztrytrytrytrytrytjyjyjyjyjyjyjyjyjyjyjyj6trytrytrytrytrytrytrytjyjyjyjyjyjyjyjyjyjyjyjyjyjyjyjyjyjyjyzididaadtrytrytrytrytrytrytrytrytrytjidida6 staterytrytjidida6 staterytrytjidida6tjidida6tjidida6tjidida6tjyjyjyjyjyjyjyjyjyjyjyjyjyjyjyjyjyjyjyjyjyjyjyjyjyjyjyjyjyjyjyutrytrytrytrytrytrytjyjyjyjyztrytrytrytjyjyjyjyztrytrytrytrytrytjyztrytrytjyztrytrytrytjidida6 staterytjidida6tjidida6tjidida6tjidida6tjidida6tjidida6tjidida6tjidida6tjidida

line_index: 423
bug_before_refactoring: public static void main ( java.lang.String [] args ) { simfinder.File f = new simfinder.File ( args [ 0 ] ) ; simfinder.Calculator c = new simfinder.Calculator ( simfinder.Parser . parseFile ( f ) ) ; } <s> public static void main ( java.lang.String [] args ) { simfinder.File f = new simfinder.File ( args [ 0 ] ) ; simfinder.Calculator c = new simfinder.Calculator ( simfinder.Parser . parseFile ( f ) ) ; } <s> Fixed bugs and type mismatches  refactored FieldValue equals method.
bug_after_refactoring: public static void main ( java.lang.String [] jobldqtqzorafshxapym ) { simfinder.File f = new simfinder.File ( jobldqtqzorafshxapym [ 0 ] ) ; simfinder.Calculator c = new simfinder.Calculator ( simfinder.Parser . parseFile ( f ) ) ; } <s> public static void main ( java.lang.String [] jobldqtqzorafshxapym ) { simfinder.File f = new simfinder.File ( jobldqtqzorafshxapym [ 0 ] ) ; simfinder.Calculator c = new simfinder.Calculator ( simfinder.Parser . parseFile ( f ) ) ; } <s> Fixed bugs and type mismatches  refactored FieldValue equals method.
fix_before_refactoring: public static void main ( java.lang.String [] args ) throws java.io.IOException { java.io.File f = new java.io.File ( args [ 0 ] ) ; simfinder.Calculator c = new simfinder.Calculator ( simfinder.Parser . parseFile ( f ) ) ; }
fix_after_refactoring: public static void main ( java.lang.String [] jobldqtqzorafshxapym ) throws java.io.IOException { java.io.File f = new java.io.File ( jobldqtqzorafshxapym [ 0 ] ) ; simfinder.Calculator c = new simfinder.Calculator ( simfinder.Parser . parseFile ( f ) ) ; }
× fix_prediction_before: public static void main ( java.lang.String [] args ) { simfinder.Filefinder sim = new simfinder.File ( args [ 0 ] ) ; simfinder.Parser . parse ( c ) ; }
× fix_prediction_after: public static void main ( java.lang.String [] job ) { simzldorshymxfinder.Filefinder sim = new simzldorshymxfinder.Filefinder ( type ) ; }

line_index: 424
bug_before_refactoring: public com.lost.blocks.ModelView.Block getBlock ( short index ) { return blocks [ ( index + ( com.lost.blocks.ModelView.ColorIndexer.SHIFT ) ) ] ; } <s> public com.lost.blocks.ModelView.Block getBlock ( short index ) { return blocks [ ( index + ( com.lost.blocks.ModelView.ColorIndexer.SHIFT ) ) ] ; } <s> Fixed exported issues.  Signed-off-by: TheDudeFromCI <linktheblademaster@yahoo.com>
bug_after_refactoring: public com.lost.blocks.ModelView.Block getBlock ( short ypidopmnywqvwbdfhnbj ) { return blocks [ ( ypidopmnywqvwbdfhnbj + ( com.lost.blocks.ModelView.ColorIndexer.SHIFT ) ) ] ; } <s> public com.lost.blocks.ModelView.Block getBlock ( short ypidopmnywqvwbdfhnbj ) { return blocks [ ( ypidopmnywqvwbdfhnbj + ( com.lost.blocks.ModelView.ColorIndexer.SHIFT ) ) ] ; } <s> Fixed exported issues.  Signed-off-by: TheDudeFromCI <linktheblademaster@yahoo.com>
fix_before_refactoring: public com.lost.blocks.ModelView.Block getBlock ( short index ) { return blocks [ index ] ; }
fix_after_refactoring: public com.lost.blocks.ModelView.Block getBlock ( short ypidopmnywqvwbdfhnbj ) { return blocks [ ypidopmnywqvwbdfhnbj ] ; }
× fix_prediction_before: public com.lost.blocks.ViewModel getBlockBlock ( short index ) { return blocks [ index ] ; }
× fix_prediction_after: public com.lost.blocks.blocks.ViewModel getBlockBlock ( short y ) { return blocksModel [ y ] ; }

line_index: 425
bug_before_refactoring: @ java.lang.Override public com.ankurdave.part.Node childAt ( int idx ) { return children [ ( idx - 1 ) ] ; } <s> @ java.lang.Override public com.ankurdave.part.Node childAt ( int idx ) { return children [ ( idx - 1 ) ] ; } <s> Fix bugs in iteration
bug_after_refactoring: @ java.lang.Override public com.ankurdave.part.Node childAt ( int bnwnhixnfvjotdvdmhbc ) { return children [ ( bnwnhixnfvjotdvdmhbc - 1 ) ] ; } <s> @ java.lang.Override public com.ankurdave.part.Node childAt ( int bnwnhixnfvjotdvdmhbc ) { return children [ ( bnwnhixnfvjotdvdmhbc - 1 ) ] ; } <s> Fix bugs in iteration
fix_before_refactoring: @ java.lang.Override public com.ankurdave.part.Node childAt ( int c ) { return children [ ( ( keys [ c ] ) - 1 ) ] ; }
fix_after_refactoring: @ java.lang.Override public com.ankurdave.part.Node childAt ( int c ) { return children [ ( ( keys [ c ] ) - 1 ) ] ; }
× fix_prediction_before: @ java.lang.Override public com.ankdurave.part.Node child ( int idx ) { return children [ idx ] ; }
× fix_prediction_after: @ java.lang.Override public com.dankhurjpart.nhotjpart.Node child ( int children ) { return children [ ( child - 1 ) ] ; }

line_index: 426
bug_before_refactoring: protected boolean applies ( battle.Battle b , pokemon.ActivePokemon user , pokemon.ActivePokemon victim ) { return true ; } <s> protected boolean applies ( battle.Battle b , pokemon.ActivePokemon user , pokemon.ActivePokemon victim ) { return true ; } <s> attack blocker  self healing bug fix  captivate/oblivious
bug_after_refactoring: protected lbnwhbdfwztstqfprkupoolean applies ( lbnwhbdfwztstqfprkupattle.Battle lbnwhbdfwztstqfprkup , pokemon.ActivePokemon tqiqiyueiidmpuausmsj , pokemon.ActivePokemon ztlndnuvrhmozfvgxafl ) { return true ; } <s> protected lbnwhbdfwztstqfprkupoolean applies ( lbnwhbdfwztstqfprkupattle.Battle lbnwhbdfwztstqfprkup , pokemon.ActivePokemon tqiqiyueiidmpuausmsj , pokemon.ActivePokemon ztlndnuvrhmozfvgxafl ) { return true ; } <s> attack blocker  self healing bug fix  captivate/oblivious
fix_before_refactoring: public boolean applies ( battle.Battle b , pokemon.ActivePokemon user , pokemon.ActivePokemon victim ) { return true ; }
fix_after_refactoring: pulbnwhbdfwztstqfprkuplic lbnwhbdfwztstqfprkupoolean applies ( lbnwhbdfwztstqfprkupattle.Battle lbnwhbdfwztstqfprkup , pokemon.ActivePokemon tqiqiyueiidmpuausmsj , pokemon.ActivePokemon ztlndnuvrhmozfvgxafl ) { return true ; }
× fix_prediction_before: protected boolean isEmpty ( battle.Battle b , pokemon.ActivePokemon user , pokemon.ActivePokemon victim ) { return false ; }
× fix_prediction_after: private lbnwhbdfw.tprzfq.nfupywnprybupy.Pokemon lbt lbzxupyPokemon ( pokemonpryndfqnjupstl.njupxw.wfattle.Pokemon lbt tpr ) { return lbtdfbupz.nqwherwherwherwhupstnjupstvr.Pokemon ( this , lbActiveBattle , false ) ; }

line_index: 427
bug_before_refactoring: @ java.lang.Override public java.lang.Void then ( bolts.Task < java.lang.Void > task ) throws java.lang.Exception { com.parse.ParseUser . logOut () ; return null ; } <s> @ java.lang.Override public java.lang.Void then ( bolts.Task < java.lang.Void > task ) throws java.lang.Exception { com.parse.ParseUser . logOut () ; return null ; } <s> Fixed a bug for Jelly Bean involving list view height  and changed more functions from background to foreground
bug_after_refactoring: @ java.lang.Override public java.lang.Void then ( bolts.Task < java.lang.Void > tzrvziqxfmpicvriqgoc ) throws java.lang.Exception { com.parse.ParseUser . logOut () ; return null ; } <s> @ java.lang.Override public java.lang.Void then ( bolts.Task < java.lang.Void > tzrvziqxfmpicvriqgoc ) throws java.lang.Exception { com.parse.ParseUser . logOut () ; return null ; } <s> Fixed a bug for Jelly Bean involving list view height  and changed more functions from background to foreground
fix_before_refactoring: @ java.lang.Override public java.lang.Void then ( bolts.Task < bolts.Task < java.lang.Void > > task ) throws java.lang.Exception { return null ; }
fix_after_refactoring: @ java.lang.Override public java.lang.Void then ( bolts.Task < bolts.Task < java.lang.Void > > tzrvziqxfmpicvriqgoc ) throws java.lang.Exception { return null ; }
× fix_prediction_before: @ java.lang.Override public java.lang.Void thenTask ( ) throws java.lang.Exception { return null ; }
× fix_prediction_after: @ java.lang.Override public java.lang.Void thenTask ( ) throws java.lang.Exception { list . update ( null ) ; return null ; }

line_index: 428
bug_before_refactoring: public final boolean isPlayerTurn ( boolean whiteMove ) { return ( whiteMove ? playerWhite () : playerBlack () ) || ( ( this ) == ( org.empyrn.darkknight.GameMode.ANALYSIS ) ) ; } <s> public final boolean isPlayerTurn ( boolean whiteMove ) { return ( whiteMove ? playerWhite () : playerBlack () ) || ( ( this ) == ( org.empyrn.darkknight.GameMode.ANALYSIS ) ) ; } <s> more bug fixes
bug_after_refactoring: public final boolean isPlayerTurn ( boolean gtagcfxtlmxveuspawiz ) { return ( gtagcfxtlmxveuspawiz ? playerWhite () : playerBlack () ) || ( ( this ) == ( org.empyrn.darkknight.GameMode.ANALYSIS ) ) ; } <s> public final boolean isPlayerTurn ( boolean gtagcfxtlmxveuspawiz ) { return ( gtagcfxtlmxveuspawiz ? playerWhite () : playerBlack () ) || ( ( this ) == ( org.empyrn.darkknight.GameMode.ANALYSIS ) ) ; } <s> more bug fixes
fix_before_refactoring: private boolean isPlayerTurn ( boolean whiteMove ) { return ( whiteMove ? playerWhite () : playerBlack () ) || ( ( this ) == ( org.empyrn.darkknight.GameMode.ANALYSIS ) ) ; }
fix_after_refactoring: private boolean isPlayerTurn ( boolean gtagcfxtlmxveuspawiz ) { return ( gtagcfxtlmxveuspawiz ? playerWhite () : playerBlack () ) || ( ( this ) == ( org.empyrn.darkknight.GameMode.ANALYSIS ) ) ; }
× fix_prediction_before: public final boolean isPlayerTurn () { return ( whiteMove () ) || ( ( player ) == ( org.empyrn.darkknight.GameTurn.AN ) ) ; }
× fix_prediction_after: public final boolean isPlayerTurn ( boolean gcfvetl ) { return ( gcfvetl ) && ( ( ( this . gawiznightx ) == ( org.darkveknight.dark.GameMode.AN ) ) || ( player . isWhite () ) ) ; }

line_index: 429
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/delete" ) @ org.springframework.web.bind.annotation.ResponseBody public com.taotao.common.pojo.TaotaoResult deleteContentCategory ( java.lang.Long parentId , java.lang.Long id ) { com.taotao.common.pojo.TaotaoResult result = contentCategoryService . deleteContentCategory ( parentId , id ) ; return result ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/delete" ) @ org.springframework.web.bind.annotation.ResponseBody public com.taotao.common.pojo.TaotaoResult deleteContentCategory ( java.lang.Long parentId , java.lang.Long id ) { com.taotao.common.pojo.TaotaoResult result = contentCategoryService . deleteContentCategory ( parentId , id ) ; return result ; } <s> bugfix， 参数只有一个id
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/delete" ) @ org.springframework.web.bind.annotation.ResponseBody public com.taotao.common.pojo.TaotaoResult deleteContentCategory ( java.lang.Long yysdlamrvojqowtzejph , java.lang.Long rzovdggyrqipgwcilmlv ) { com.taotao.common.pojo.TaotaoResult result = contentCategoryService . deleteContentCategory ( yysdlamrvojqowtzejph , rzovdggyrqipgwcilmlv ) ; return result ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/delete" ) @ org.springframework.web.bind.annotation.ResponseBody public com.taotao.common.pojo.TaotaoResult deleteContentCategory ( java.lang.Long yysdlamrvojqowtzejph , java.lang.Long rzovdggyrqipgwcilmlv ) { com.taotao.common.pojo.TaotaoResult result = contentCategoryService . deleteContentCategory ( yysdlamrvojqowtzejph , rzovdggyrqipgwcilmlv ) ; return result ; } <s> bugfix， 参数只有一个id
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/delete" ) @ org.springframework.web.bind.annotation.ResponseBody public com.taotao.common.pojo.TaotaoResult deleteContentCategory ( java.lang.Long id ) { com.taotao.common.pojo.TaotaoResult result = contentCategoryService . deleteContentCategory ( id ) ; return result ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/delete" ) @ org.springframework.web.bind.annotation.ResponseBody public com.taotao.common.pojo.TaotaoResult deleteContentCategory ( java.lang.Long rzovdggyrqipgwcilmlv ) { com.taotao.common.pojo.TaotaoResult result = contentCategoryService . deleteContentCategory ( rzovdggyrqipgwcilmlv ) ; return result ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/delete" ) @ org.springframework.web.bind.annotation.ResponseBody public com.taotao.pojo.Taot deleteContentCategory ( java.lang.Long id ) { java.lang.Long parentId = resultService . deleteTaot ( parentId , id ) ; return result ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/delete" ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.Long deleteTilamze ( @ org.springframework.web.bind.annotation.ModelAttribute java.lang.Long content , @ org.springframework.web.bind.annotation.ModelAttribute java.lang.Long target ) { com.gwrilamzephao.jml.common.pojo.Tvot rilovrotContent = rdlService . deleteTowrotContent ( content ) ; return result ; }

line_index: 430
bug_before_refactoring: public static de.jukusoft.tutorial.chat.server.message.ChatMessage create ( final long clientID , final java.lang.String username , org.json.JSONObject json ) { final de.jukusoft.tutorial.chat.server.message.ChatMessage msg = new de.jukusoft.tutorial.chat.server.message.ChatMessage () ; msg.clientID = clientID ; msg.username = username ; msg.text = json . getString ( "text" ) ; return msg ; } <s> public static de.jukusoft.tutorial.chat.server.message.ChatMessage create ( final long clientID , final java.lang.String username , org.json.JSONObject json ) { final de.jukusoft.tutorial.chat.server.message.ChatMessage msg = new de.jukusoft.tutorial.chat.server.message.ChatMessage () ; msg.clientID = clientID ; msg.username = username ; msg.text = json . getString ( "text" ) ; return msg ; } <s> fixed some problems.
bug_after_refactoring: public static de.jukusoft.tutorial.chat.server.message.ChatMessage create ( final long jlrxtwacduhytbvttazd , final java.lang.String xmgcqutrlatjxkhqydhl , org.pzcweicobyboyailjcmt.JSONObject pzcweicobyboyailjcmt ) { final de.jukusoft.tutorial.chat.server.message.ChatMessage msg = new de.jukusoft.tutorial.chat.server.message.ChatMessage () ; msg.jlrxtwacduhytbvttazd = jlrxtwacduhytbvttazd ; msg.xmgcqutrlatjxkhqydhl = xmgcqutrlatjxkhqydhl ; msg.text = pzcweicobyboyailjcmt . getString ( "text" ) ; return msg ; } <s> public static de.jukusoft.tutorial.chat.server.message.ChatMessage create ( final long jlrxtwacduhytbvttazd , final java.lang.String xmgcqutrlatjxkhqydhl , org.pzcweicobyboyailjcmt.JSONObject pzcweicobyboyailjcmt ) { final de.jukusoft.tutorial.chat.server.message.ChatMessage msg = new de.jukusoft.tutorial.chat.server.message.ChatMessage () ; msg.jlrxtwacduhytbvttazd = jlrxtwacduhytbvttazd ; msg.xmgcqutrlatjxkhqydhl = xmgcqutrlatjxkhqydhl ; msg.text = pzcweicobyboyailjcmt . getString ( "text" ) ; return msg ; } <s> fixed some problems.
fix_before_refactoring: public static de.jukusoft.tutorial.chat.server.message.ChatMessage create ( org.json.JSONObject json ) { final de.jukusoft.tutorial.chat.server.message.ChatMessage msg = new de.jukusoft.tutorial.chat.server.message.ChatMessage () ; msg.text = json . getString ( "text" ) ; return msg ; }
fix_after_refactoring: public static de.jukusoft.tutorial.chat.server.message.ChatMessage create ( org.pzcweicobyboyailjcmt.JSONObject pzcweicobyboyailjcmt ) { final de.jukusoft.tutorial.chat.server.message.ChatMessage msg = new de.jukusoft.tutorial.chat.server.message.ChatMessage () ; msg.text = pzcweicobyboyailjcmt . getString ( "text" ) ; return msg ; }
× fix_prediction_before: private static final de.jukoft.tutorial.chat.server.message.ChatMessage createMessage ( final long username , final java.lang.String msg ) { final de.jukoft.tutorial.chat.server.text.ChatMessage json = username ; final de.jukoft.tutorial.chat.server.text.ChatMessage msg = new de.jukusoft.tutorial.chat.server.text.ChatMessage ( username , msg ) ; finaltext = json . getString ( "message" ) ; return msg ; }
× fix_prediction_after: private static de.jukyoft.tutorialchatserver.message.ChatMessage createMessage ( final long msg ) { final long msg = p ; final de.jukx.twz.jcdujobl.server.text.JSONObject j = de.jukyoft.twzc.jcatjobl.server.text.ChatMessage . getString ( "message" , p ) ; return new de.jukyoft.qbozc.jcatjobl.server.text.JSONObject ( msg ) ; }

line_index: 431
bug_before_refactoring: @ java.lang.Override public net.minecraft.item.ItemStack getStackInSlotOnClosing ( int index ) { net.minecraft.item.ItemStack stackInSlot = getStackInSlot ( index ) ; if ( stackInSlot != null ) { setInventorySlotContents ( index , null ) ; return stackInSlot ; } return null ; } <s> @ java.lang.Override public net.minecraft.item.ItemStack getStackInSlotOnClosing ( int index ) { net.minecraft.item.ItemStack stackInSlot = getStackInSlot ( index ) ; if ( stackInSlot != null ) { setInventorySlotContents ( index , null ) ; return stackInSlot ; } return null ; } <s> Fix bug with hopper duping items in Fusion Station
bug_after_refactoring: @ java.lang.Override public net.minecraft.item.ItemStack getStackInSlotOnClosing ( int byemoviikvnupmawqvgg ) { net.minecraft.item.ItemStack stackInSlot = getStackInSlot ( byemoviikvnupmawqvgg ) ; if ( stackInSlot != null ) { setInventorySlotContents ( byemoviikvnupmawqvgg , null ) ; return stackInSlot ; } return null ; } <s> @ java.lang.Override public net.minecraft.item.ItemStack getStackInSlotOnClosing ( int byemoviikvnupmawqvgg ) { net.minecraft.item.ItemStack stackInSlot = getStackInSlot ( byemoviikvnupmawqvgg ) ; if ( stackInSlot != null ) { setInventorySlotContents ( byemoviikvnupmawqvgg , null ) ; return stackInSlot ; } return null ; } <s> Fix bug with hopper duping items in Fusion Station
fix_before_refactoring: @ java.lang.Override public net.minecraft.item.ItemStack getStackInSlotOnClosing ( int index ) { net.minecraft.item.ItemStack stackInSlot = getStackInSlot ( index ) ; if ( stackInSlot == null ) { return null ; } setInventorySlotContents ( index , null ) ; return stackInSlot ; }
fix_after_refactoring: @ java.lang.Override public net.minecraft.item.ItemStack getStackInSlotOnClosing ( int byemoviikvnupmawqvgg ) { net.minecraft.item.ItemStack stackInSlot = getStackInSlot ( byemoviikvnupmawqvgg ) ; if ( stackInSlot == null ) { return null ; } setInventorySlotContents ( byemoviikvnupmawqvgg , null ) ; return stackInSlot ; }
× fix_prediction_before: @ java.lang.Override public net.minecraft.item.ItemStack getStackInSlot ( int index ) { net.minecraft.item.ItemStack stackInSlot = getStackInSlot ( index ) ; if ( stackInSlot != null ) { setSlotContents ( stackInSlot ) ; } return stackInSlot ; }
× fix_prediction_after: @ java.lang.Override public net.minecraft.item.ItemStack getStackInSlot ( int stack ) { return stack ; }

line_index: 432
bug_before_refactoring: public void goToCurrentLocation ( com.google.android.gms.maps.model.LatLng latLng , java.lang.String currentAddress ) { com.google.android.gms.maps.CameraUpdate cameraUpdate = com.google.android.gms.maps.CameraUpdateFactory . newLatLngZoom ( latLng , com.angular.gerardosuarez.carpoolingapp.mvp.view.MyMapView.DEFAULT_ZOOM ) ; map . animateCamera ( cameraUpdate ) ; removeLocationUpdates () ; setTextAutocompleteFragmentWithText ( currentAddress ) ; } <s> public void goToCurrentLocation ( com.google.android.gms.maps.model.LatLng latLng , java.lang.String currentAddress ) { com.google.android.gms.maps.CameraUpdate cameraUpdate = com.google.android.gms.maps.CameraUpdateFactory . newLatLngZoom ( latLng , com.angular.gerardosuarez.carpoolingapp.mvp.view.MyMapView.DEFAULT_ZOOM ) ; map . animateCamera ( cameraUpdate ) ; removeLocationUpdates () ; setTextAutocompleteFragmentWithText ( currentAddress ) ; } <s> Add style to recycler view items and fix the problem in navigation
bug_after_refactoring: public void goToCurrentLocation ( com.google.android.gms.maps.model.LatLng lqizxwmkrgmkcfijyqyg , java.lang.String xmtfuyapibworfixdspb ) { com.google.android.gms.maps.CameraUpdate cameraUpdate = com.google.android.gms.maps.CameraUpdateFactory . newLatLngZoom ( lqizxwmkrgmkcfijyqyg , com.angular.gerardosuarez.carpoolingapp.mvp.view.MyMapView.DEFAULT_ZOOM ) ; map . animateCamera ( cameraUpdate ) ; removeLocationUpdates () ; setTextAutocompleteFragmentWithText ( xmtfuyapibworfixdspb ) ; } <s> public void goToCurrentLocation ( com.google.android.gms.maps.model.LatLng lqizxwmkrgmkcfijyqyg , java.lang.String xmtfuyapibworfixdspb ) { com.google.android.gms.maps.CameraUpdate cameraUpdate = com.google.android.gms.maps.CameraUpdateFactory . newLatLngZoom ( lqizxwmkrgmkcfijyqyg , com.angular.gerardosuarez.carpoolingapp.mvp.view.MyMapView.DEFAULT_ZOOM ) ; map . animateCamera ( cameraUpdate ) ; removeLocationUpdates () ; setTextAutocompleteFragmentWithText ( xmtfuyapibworfixdspb ) ; } <s> Add style to recycler view items and fix the problem in navigation
fix_before_refactoring: public void goToCurrentLocation ( com.google.android.gms.maps.model.LatLng latLng , java.lang.String currentAddress ) { if ( ( map ) != null ) { com.google.android.gms.maps.CameraUpdate cameraUpdate = com.google.android.gms.maps.CameraUpdateFactory . newLatLngZoom ( latLng , com.angular.gerardosuarez.carpoolingapp.mvp.view.MyMapView.DEFAULT_ZOOM ) ; map . animateCamera ( cameraUpdate ) ; removeLocationUpdates () ; setTextAutocompleteFragmentWithText ( currentAddress ) ; } }
fix_after_refactoring: public void goToCurrentLocation ( com.google.android.gms.maps.model.LatLng lqizxwmkrgmkcfijyqyg , java.lang.String xmtfuyapibworfixdspb ) { if ( ( map ) != null ) { com.google.android.gms.maps.CameraUpdate cameraUpdate = com.google.android.gms.maps.CameraUpdateFactory . newLatLngZoom ( lqizxwmkrgmkcfijyqyg , com.angular.gerardosuarez.carpoolingapp.mvp.view.MyMapView.DEFAULT_ZOOM ) ; map . animateCamera ( cameraUpdate ) ; removeLocationUpdates () ; setTextAutocompleteFragmentWithText ( xmtfuyapibworfixdspb ) ; } }
× fix_prediction_before: private void goToCurrentLocation ( com.google.android.gms.maps.model.LatLng latLng , java.lang.String latLng ) { if ( ( currentLocationZoom ) != null ) { com.google.android.gms.maps.model.LatLng cameraAddressUpdate = new com.google.android.gms.maps.model.LatLng ( currentLatLng , latLng ) ; cameraUpdate . animateText ( currentLatLng ) ; animateText . setText ( cameraAddressUpdate ) ; } }
× fix_prediction_after: private void goToCurrentLocation ( com.google.android.gms.maps.model.LatLng liz ) {}

line_index: 433
bug_before_refactoring: @ java.lang.Override public void setEnabled ( boolean enabled ) { if ( ! enabled ) { this . enabled = false ; java.lang.System.out . println ( this . enabled ) ; invalidate () ; } } <s> @ java.lang.Override public void setEnabled ( boolean enabled ) { if ( ! enabled ) { this . enabled = false ; java.lang.System.out . println ( this . enabled ) ; invalidate () ; } } <s> Load of bug fixes.
bug_after_refactoring: @ java.lang.Override public void setEnabled ( boolean gmsyfiyxzedigrqrizwi ) { if ( ! gmsyfiyxzedigrqrizwi ) { this . gmsyfiyxzedigrqrizwi = false ; java.lang.System.out . println ( this . gmsyfiyxzedigrqrizwi ) ; invalidate () ; } } <s> @ java.lang.Override public void setEnabled ( boolean gmsyfiyxzedigrqrizwi ) { if ( ! gmsyfiyxzedigrqrizwi ) { this . gmsyfiyxzedigrqrizwi = false ; java.lang.System.out . println ( this . gmsyfiyxzedigrqrizwi ) ; invalidate () ; } } <s> Load of bug fixes.
fix_before_refactoring: @ java.lang.Override public void setEnabled ( boolean enabled ) { this . enabled = enabled ; invalidate () ; }
fix_after_refactoring: @ java.lang.Override public void setEnabled ( boolean gmsyfiyxzedigrqrizwi ) { this . gmsyfiyxzedigrqrizwi = gmsyfiyxzedigrqrizwi ; invalidate () ; }
× fix_prediction_before: @ java.lang.Override public void setEnabled ( boolean enabled ) { this . enabled = enabled ; }
× fix_prediction_after: @ java.lang.Override public void setEnabled ( boolean gyxms ) {}

line_index: 434
bug_before_refactoring: public java.lang.String getPosterUrl ( android.content.Context c ) { com.example.davidutterman.androidmovieapp.Config p = new com.example.davidutterman.androidmovieapp.Config ( c . getAssets () ) ; java.lang.String posterUrl = p . getProperty ( "poster_url" ) ; return posterUrl + ( getThumbnail () ) ; } <s> public java.lang.String getPosterUrl ( android.content.Context c ) { com.example.davidutterman.androidmovieapp.Config p = new com.example.davidutterman.androidmovieapp.Config ( c . getAssets () ) ; java.lang.String posterUrl = p . getProperty ( "poster_url" ) ; return posterUrl + ( getThumbnail () ) ; } <s> Fix lint errors.
bug_after_refactoring: publitxrbzzsitvfxsqkegfuf java.lang.String getPosterUrl ( android.txrbzzsitvfxsqkegfufontent.Context txrbzzsitvfxsqkegfuf ) { txrbzzsitvfxsqkegfufom.example.davidutterman.androidmovieapp.Config p = new txrbzzsitvfxsqkegfufom.example.davidutterman.androidmovieapp.Config ( txrbzzsitvfxsqkegfuf . getAssets () ) ; java.lang.String posterUrl = p . getProperty ( "poster_url" ) ; return posterUrl + ( getThumbnail () ) ; } <s> publitxrbzzsitvfxsqkegfuf java.lang.String getPosterUrl ( android.txrbzzsitvfxsqkegfufontent.Context txrbzzsitvfxsqkegfuf ) { txrbzzsitvfxsqkegfufom.example.davidutterman.androidmovieapp.Config p = new txrbzzsitvfxsqkegfufom.example.davidutterman.androidmovieapp.Config ( txrbzzsitvfxsqkegfuf . getAssets () ) ; java.lang.String posterUrl = p . getProperty ( "poster_url" ) ; return posterUrl + ( getThumbnail () ) ; } <s> Fix lint errors.
fix_before_refactoring: public java.lang.String getPosterUrl ( android.content.Context context ) { com.example.davidutterman.androidmovieapp.Config p = new com.example.davidutterman.androidmovieapp.Config ( context ) ; return ( p . getProperty ( "poster_url" ) ) + ( getThumbnail () ) ; }
fix_after_refactoring: publitxrbzzsitvfxsqkegfuf java.lang.String getPosterUrl ( android.txrbzzsitvfxsqkegfufontent.Context txrbzzsitvfxsqkegfufontext ) { txrbzzsitvfxsqkegfufom.example.davidutterman.androidmovieapp.Config p = new txrbzzsitvfxsqkegfufom.example.davidutterman.androidmovieapp.Config ( txrbzzsitvfxsqkegfufontext ) ; return ( p . getProperty ( "poster_url" ) ) + ( getThumbnail () ) ; }
× fix_prediction_before: private java.lang.String getPosterUrl () { android.content.Context c = new android.content.Context () ; java.lang.String p = c . getProperty ( com.example.davidman.moviemovieapp.AssetsConfig.url_url ) ; return ( ( p ) + " = " ) + ( getThumbnailUrl () . getProperty ( p ) ) ; }
× fix_prediction_after: publitxrbzzvfxg.frbkegufkemoviemoviekegfxgfx_v4.sqfutter.ThumbnailAssets txerUrl ( @ android.support.annotation.Nullable java.lang.String txUrl ) { return txUrl ; }

line_index: 435
bug_before_refactoring: public ddf.catalog.operation.QueryRequest getQueryRequestWithValidationFilter ( ddf.catalog.operation.QueryRequest input ) { return getQueryRequestWithValidationFilter ( input , false ) ; } <s> public ddf.catalog.operation.QueryRequest getQueryRequestWithValidationFilter ( ddf.catalog.operation.QueryRequest input ) { return getQueryRequestWithValidationFilter ( input , false ) ; } <s> DDF-2096 Allow finer configuration of validation filtering (#758)  * DDF-2096 Add configurability to showInvalidMetacards  Now can show errors or warnings separately  * DDF-2096 Fix itests to work with new configuration  * DDF-2096 Add unit tests (cherry picked from commit 3b3fe71)
bug_after_refactoring: public ddf.catalog.operation.QueryRequest getQueryRequestWithValidationFilter ( ddf.catalog.operation.QueryRequest vqwkwfxontibdmavlulv ) { return getQueryRequestWithValidationFilter ( vqwkwfxontibdmavlulv , false ) ; } <s> public ddf.catalog.operation.QueryRequest getQueryRequestWithValidationFilter ( ddf.catalog.operation.QueryRequest vqwkwfxontibdmavlulv ) { return getQueryRequestWithValidationFilter ( vqwkwfxontibdmavlulv , false ) ; } <s> DDF-2096 Allow finer configuration of validation filtering (#758)  * DDF-2096 Add configurability to showInvalidMetacards  Now can show errors or warnings separately  * DDF-2096 Fix itests to work with new configuration  * DDF-2096 Add unit tests (cherry picked from commit 3b3fe71)
fix_before_refactoring: ddf.catalog.operation.QueryRequest getQueryRequestWithValidationFilter ( ddf.catalog.operation.QueryRequest input ) { return getQueryRequestWithValidationFilter ( input , false , true ) ; }
fix_after_refactoring: ddf.catalog.operation.QueryRequest getQueryRequestWithValidationFilter ( ddf.catalog.operation.QueryRequest vqwkwfxontibdmavlulv ) { return getQueryRequestWithValidationFilter ( vqwkwfxontibdmavlulv , false , true ) ; }
× fix_prediction_before: private ddf.catalog.operation.QueryQuery getQueryFilterWithRequest ( ddf.catalog.operation.ValidationRequestFilter input ) { return getQueryValidationRequestWithRequest ( input , false ) ; }
× fix_prediction_after: public ddf.catalog.operation.QueryQuery getQueryRequestWithValidationRequest ( ddf.catalog.wlavviboperation.ValidationRequest v ) { return getQueryValidationRequest ( vfxQuery , false ) ; }

line_index: 436
bug_before_refactoring: public boolean destroyGame ( int gameID ) { if ( ( gameList [ gameID ] ) == null ) return false ; gameList [ gameID ] . stop () ; gameList [ gameID ] = null ; return true ; } <s> public boolean destroyGame ( int gameID ) { if ( ( gameList [ gameID ] ) == null ) return false ; gameList [ gameID ] . stop () ; gameList [ gameID ] = null ; return true ; } <s> Fixed formatter errors. Committed missing files
bug_after_refactoring: public boolean destroyGame ( int nvsuofprgfdwpdxdhlrv ) { if ( ( gameList [ nvsuofprgfdwpdxdhlrv ] ) == null ) return false ; gameList [ nvsuofprgfdwpdxdhlrv ] . stop () ; gameList [ nvsuofprgfdwpdxdhlrv ] = null ; return true ; } <s> public boolean destroyGame ( int nvsuofprgfdwpdxdhlrv ) { if ( ( gameList [ nvsuofprgfdwpdxdhlrv ] ) == null ) return false ; gameList [ nvsuofprgfdwpdxdhlrv ] . stop () ; gameList [ nvsuofprgfdwpdxdhlrv ] = null ; return true ; } <s> Fixed formatter errors. Committed missing files
fix_before_refactoring: public boolean destroyGame ( final int gameID ) { gameList . get ( gameID ) . stop () ; gameList . set ( gameID , null ) ; return true ; }
fix_after_refactoring: public boolean destroyGame ( final int nvsuofprgfdwpdxdhlrv ) { gameList . get ( nvsuofprgfdwpdxdhlrv ) . stop () ; gameList . set ( nvsuofprgfdwpdxdhlrv , null ) ; return true ; }
× fix_prediction_before: public boolean destroyGame ( final int gameID ) { return gameList [ gameID ] . gameList ( gameID ) ; }
× fix_prediction_after: public boolean destroyGame ( int offset ) { if ( ( gameListvoffdgpdgpdv.wsuwlrvoflr [ gameList ] ) == null ) return false ; gameList [ gameList ] . stop () ; gameList [ gamewsu ] = true ; return true ; }

line_index: 437
bug_before_refactoring: @ java.lang.Override public java.lang.Void apply ( com.quran.labs.androidquran.model.bookmark.RecentPageModel.PersistRecentPagesRequest update ) throws java.lang.Exception { if ( ( update.deleteRangeStart ) != null ) { bookmarksDBAdapter . replaceRecentRangeWithPage ( update.deleteRangeStart , update.deleteRangeEnd , update.page ) ; } else { bookmarksDBAdapter . addRecentPage ( update.page ) ; } return null ; } <s> @ java.lang.Override public java.lang.Void apply ( com.quran.labs.androidquran.model.bookmark.RecentPageModel.PersistRecentPagesRequest update ) throws java.lang.Exception { if ( ( update.deleteRangeStart ) != null ) { bookmarksDBAdapter . replaceRecentRangeWithPage ( update.deleteRangeStart , update.deleteRangeEnd , update.page ) ; } else { bookmarksDBAdapter . addRecentPage ( update.page ) ; } return null ; } <s> Fix issues with null  We should not call onNext(null)  even on an Observable<Void> or a Subject<Void>.
bug_after_refactoring: @ java.lang.Override public java.lang.Void apply ( com.quran.labs.androidquran.model.bookmark.RecentPageModel.PersistRecentPagesRequest gkxcguscyohoqvltrrhm ) throws java.lang.Exception { if ( ( gkxcguscyohoqvltrrhm.deleteRangeStart ) != null ) { bookmarksDBAdapter . replaceRecentRangeWithPage ( gkxcguscyohoqvltrrhm.deleteRangeStart , gkxcguscyohoqvltrrhm.deleteRangeEnd , gkxcguscyohoqvltrrhm.page ) ; } else { bookmarksDBAdapter . addRecentPage ( gkxcguscyohoqvltrrhm.page ) ; } return null ; } <s> @ java.lang.Override public java.lang.Void apply ( com.quran.labs.androidquran.model.bookmark.RecentPageModel.PersistRecentPagesRequest gkxcguscyohoqvltrrhm ) throws java.lang.Exception { if ( ( gkxcguscyohoqvltrrhm.deleteRangeStart ) != null ) { bookmarksDBAdapter . replaceRecentRangeWithPage ( gkxcguscyohoqvltrrhm.deleteRangeStart , gkxcguscyohoqvltrrhm.deleteRangeEnd , gkxcguscyohoqvltrrhm.page ) ; } else { bookmarksDBAdapter . addRecentPage ( gkxcguscyohoqvltrrhm.page ) ; } return null ; } <s> Fix issues with null  We should not call onNext(null)  even on an Observable<Void> or a Subject<Void>.
fix_before_refactoring: @ java.lang.Override public java.lang.Boolean apply ( com.quran.labs.androidquran.model.bookmark.RecentPageModel.PersistRecentPagesRequest update ) throws java.lang.Exception { if ( ( update.deleteRangeStart ) != null ) { bookmarksDBAdapter . replaceRecentRangeWithPage ( update.deleteRangeStart , update.deleteRangeEnd , update.page ) ; } else { bookmarksDBAdapter . addRecentPage ( update.page ) ; } return true ; }
fix_after_refactoring: @ java.lang.Override public java.lang.Boolean apply ( com.quran.labs.androidquran.model.bookmark.RecentPageModel.PersistRecentPagesRequest gkxcguscyohoqvltrrhm ) throws java.lang.Exception { if ( ( gkxcguscyohoqvltrrhm.deleteRangeStart ) != null ) { bookmarksDBAdapter . replaceRecentRangeWithPage ( gkxcguscyohoqvltrrhm.deleteRangeStart , gkxcguscyohoqvltrrhm.deleteRangeEnd , gkxcguscyohoqvltrrhm.page ) ; } else { bookmarksDBAdapter . addRecentPage ( gkxcguscyohoqvltrrhm.page ) ; } return true ; }
× fix_prediction_before: @ java.lang.Override public java.lang.Void apply ( com.qanuran.qlabs.model.page.Recentpage.Page update ) throws java.lang.Exception { updatePage ( bookmarks ) ; return updatePageWithRange ( update , null ) ; }
× fix_prediction_after: @ java.lang.Override public java.lang.Void apply ( com.qanurqrohuskohvl.cygvl.rustrvl.model.PageRange gqr ) throws java.lang.Exception { return gqrohruskohvl.cygvl.cygvl.page.PageAdapter . addRecentRange ( gqr , true ) ; }

line_index: 438
bug_before_refactoring: private void setColor ( int p_currentIndex , boolean p_paramIndex ) { if ( p_currentIndex != ( - 1 ) ) { _colors [ p_currentIndex ] = p_paramIndex ; } } <s> private void setColor ( int p_currentIndex , boolean p_paramIndex ) { if ( p_currentIndex != ( - 1 ) ) { _colors [ p_currentIndex ] = p_paramIndex ; } } <s> Merge pull request #39 from electricalwind/master  Fixing critical tree bug
bug_after_refactoring: private void setColor ( int pzwbbmagmiytpiywuqul , boolean pbztnsixwymldspapuyn ) { if ( pzwbbmagmiytpiywuqul != ( - 1 ) ) { _colors [ pzwbbmagmiytpiywuqul ] = pbztnsixwymldspapuyn ; } } <s> private void setColor ( int pzwbbmagmiytpiywuqul , boolean pbztnsixwymldspapuyn ) { if ( pzwbbmagmiytpiywuqul != ( - 1 ) ) { _colors [ pzwbbmagmiytpiywuqul ] = pbztnsixwymldspapuyn ; } } <s> Merge pull request #39 from electricalwind/master  Fixing critical tree bug
fix_before_refactoring: private void setColor ( int p_currentIndex , boolean p_paramIndex ) { _colors [ p_currentIndex ] = p_paramIndex ; }
fix_after_refactoring: private void setColor ( int pzwbbmagmiytpiywuqul , boolean pbztnsixwymldspapuyn ) { _colors [ pzwbbmagmiytpiywuqul ] = pbztnsixwymldspapuyn ; }
× fix_prediction_before: private void setColor ( int p_currentIndex , boolean p_paramIndex ) { if ( ( p_currentIndex ) != ( p_paramIndex ) ) { _ = p_paramIndex [ ( p_currentIndex - 1 ) ] ; } }
× fix_prediction_after: private void setColor ( int pzmagzywmitpyi , boolean pbzwuulz ) { _spywuulz = pbztbb ; if ( ( pbzwuulz ) != ( - 1 ) ) { _wywuulzulwuulz = pq ; } }

line_index: 439
bug_before_refactoring: public symbolTable.TableEntry getEntry ( java.lang.String key ) { return hm . get ( key . toLowerCase () ) ; } <s> public symbolTable.TableEntry getEntry ( java.lang.String key ) { return hm . get ( key . toLowerCase () ) ; } <s> fixed bug with lexeme lookup.
bug_after_refactoring: public symbolTable.TableEntry getEntry ( java.lang.String ewdbiogfqbrvuonydlsc ) { return hm . get ( ewdbiogfqbrvuonydlsc . toLowerCase () ) ; } <s> public symbolTable.TableEntry getEntry ( java.lang.String ewdbiogfqbrvuonydlsc ) { return hm . get ( ewdbiogfqbrvuonydlsc . toLowerCase () ) ; } <s> fixed bug with lexeme lookup.
fix_before_refactoring: public symbolTable.TableEntry getEntry ( java.lang.String key ) { return hm . get ( key . toUpperCase () ) ; }
fix_after_refactoring: public symbolTable.TableEntry getEntry ( java.lang.String ewdbiogfqbrvuonydlsc ) { return hm . get ( ewdbiogfqbrvuonydlsc . toUpperCase () ) ; }
× fix_prediction_before: public symbolTable.Entry getEntry ( java.lang.String key ) { return getNameTable () . get ( key ) ; }
× fix_prediction_after: public java.lang.String getEntryTableEntry ( java.lang.String symbol ) { returnContext . getText () . toLowerCase () ; }

line_index: 440
bug_before_refactoring: @ org.jetbrains.annotations.Nullable @ java.lang.Override public com.intellij.xdebugger.breakpoints.XLineBreakpointType < ? > getBreakpointTypeClass ( @ org.jetbrains.annotations.NotNull com.intellij.openapi.project.Project project ) { return XBreakpointType.EXTENSION_POINT_NAME . findExtension ( com.intellij.debugger.ui.breakpoints.JavaLineBreakpointType . class ) ; } <s> @ org.jetbrains.annotations.Nullable @ java.lang.Override public com.intellij.xdebugger.breakpoints.XLineBreakpointType < ? > getBreakpointTypeClass ( @ org.jetbrains.annotations.NotNull com.intellij.openapi.project.Project project ) { return XBreakpointType.EXTENSION_POINT_NAME . findExtension ( com.intellij.debugger.ui.breakpoints.JavaLineBreakpointType . class ) ; } <s> IDEA: fixed breakpoints in JavaScript debugger.
bug_after_refactoring: @ org.jetbrains.annotations.Nullable @ java.lang.Override public com.intellij.xdebugger.breakpoints.XLineBreakpointType < ? > getBreakpointTypeClass ( @ org.jetbrains.annotations.NotNull com.intellij.openapi.qblibdlkmdtooswhohxm.Project qblibdlkmdtooswhohxm ) { return XBreakpointType.EXTENSION_POINT_NAME . findExtension ( com.intellij.debugger.ui.breakpoints.JavaLineBreakpointType . class ) ; } <s> @ org.jetbrains.annotations.Nullable @ java.lang.Override public com.intellij.xdebugger.breakpoints.XLineBreakpointType < ? > getBreakpointTypeClass ( @ org.jetbrains.annotations.NotNull com.intellij.openapi.qblibdlkmdtooswhohxm.Project qblibdlkmdtooswhohxm ) { return XBreakpointType.EXTENSION_POINT_NAME . findExtension ( com.intellij.debugger.ui.breakpoints.JavaLineBreakpointType . class ) ; } <s> IDEA: fixed breakpoints in JavaScript debugger.
fix_before_refactoring: @ org.jetbrains.annotations.Nullable @ java.lang.Override public java.lang.Class < ? extends com.intellij.xdebugger.breakpoints.XLineBreakpointType < ? > > getBreakpointTypeClass () { return com.intellij.debugger.ui.breakpoints.JavaLineBreakpointType . class ; }
fix_after_refactoring: @ org.jetbrains.annotations.Nullable @ java.lang.Override public java.lang.Class < ? extends com.intellij.xdebugger.breakpoints.XLineBreakpointType < ? > > getBreakpointTypeClass () { return com.intellij.debugger.ui.breakpoints.JavaLineBreakpointType . class ; }
× fix_prediction_before: @ org.jetbrains.annotations.Nullable @ java.lang.Override public java.lang.Class < com.intellij.xdebugger.breakLineBreakpointLine.X_POINT > getBreakpoints ( @ org.jetbrains.annotations.NotNull com.intellij.openapi.breakpoints.XBreakpoint < ? > project ) { return ( ( com.intellij.openapi.debugger.JavaBreakpointExtension.POINT_NAME ) ( project . getBreakpoints ( com.intellij.openapi.debugger.JavaBreakpointType . class ) ) ) ; }
× fix_prediction_after: @ org.jetbrains.annotations.Nullable @ java.lang.Override public java.lang.Class < ? > getBkLine ( @ org.jetbrains.annotations.NotNull com.intellij.xmxlib.debugger.XTypePOINTType ) { return ( com.intellij.hdlBreakpoint < com.intellij.openapi.breakpoints.XLineExtension > . class ) ? com.intellij.openapi.breakpoints.X_POINT_NAME : null ; }

line_index: 442
bug_before_refactoring: public boolean setSpaces ( java.util.LinkedList < java.lang.Short > zeSpace ) { if ( spacesToOccupy . isEmpty () ) { for ( java.lang.Short zeShort : zeSpace ) {} return true ; } return false ; } <s> public boolean setSpaces ( java.util.LinkedList < java.lang.Short > zeSpace ) { if ( spacesToOccupy . isEmpty () ) { for ( java.lang.Short zeShort : zeSpace ) {} return true ; } return false ; } <s> This shoulde fixed using too much ram issue.
bug_after_refactoring: public boolean setSpaces ( java.util.LinkedList < java.lang.Short > drafxreoddseqebrqqrd ) { if ( spacesToOccupy . isEmpty () ) { for ( java.lang.Short zeShort : drafxreoddseqebrqqrd ) {} return true ; } return false ; } <s> public boolean setSpaces ( java.util.LinkedList < java.lang.Short > drafxreoddseqebrqqrd ) { if ( spacesToOccupy . isEmpty () ) { for ( java.lang.Short zeShort : drafxreoddseqebrqqrd ) {} return true ; } return false ; } <s> This shoulde fixed using too much ram issue.
fix_before_refactoring: { spacesToOccupy . add ( zeShort ) ; }
fix_after_refactoring: { spacesToOccupy . add ( zeShort ) ; }
× fix_prediction_before: public boolean setSpaces ( java.util.LinkedList < java.lang.Short > ram ) { for ( java.lang.Short spaces : spaces ) { if ( ! ( spaces . isEmpty () ) ) { return false ; } } return true ; }
× fix_prediction_after: public boolean set "" ( java.util.LinkedList < java.lang.ShortShortShort >rq ) { for ( java.lang.Short spaces : spaces ) { if ({fxToOccebre . isEmpty () ) { return true ; } } return false ; }

line_index: 443
bug_before_refactoring: public java.math.BigDecimal getUnitaryPrice ( java.math.BigDecimal amountValue , java.math.BigDecimal amountQtt ) { return amountValue . abs () . divide ( amountQtt , 3 , java.math.RoundingMode.HALF_UP ) ; } <s> public java.math.BigDecimal getUnitaryPrice ( java.math.BigDecimal amountValue , java.math.BigDecimal amountQtt ) { return amountValue . abs () . divide ( amountQtt , 3 , java.math.RoundingMode.HALF_UP ) ; } <s> Fixing client-specific issues.
bug_after_refactoring: public java.math.BigDecimal getUnitaryPrice ( java.math.BigDecimal cxrpmjdlyhjdvrecbuhs , java.math.BigDecimal zasruxuigyjmtiirootu ) { return cxrpmjdlyhjdvrecbuhs . abs () . divide ( zasruxuigyjmtiirootu , 3 , java.math.RoundingMode.HALF_UP ) ; } <s> public java.math.BigDecimal getUnitaryPrice ( java.math.BigDecimal cxrpmjdlyhjdvrecbuhs , java.math.BigDecimal zasruxuigyjmtiirootu ) { return cxrpmjdlyhjdvrecbuhs . abs () . divide ( zasruxuigyjmtiirootu , 3 , java.math.RoundingMode.HALF_UP ) ; } <s> Fixing client-specific issues.
fix_before_refactoring: public java.math.BigDecimal getUnitaryPrice ( java.math.BigDecimal amountValue , java.math.BigDecimal amountQtt ) { return amountValue . divide ( amountQtt , 3 , java.math.RoundingMode.HALF_UP ) . abs () ; }
fix_after_refactoring: public java.math.BigDecimal getUnitaryPrice ( java.math.BigDecimal cxrpmjdlyhjdvrecbuhs , java.math.BigDecimal zasruxuigyjmtiirootu ) { return cxrpmjdlyhjdvrecbuhs . divide ( zasruxuigyjmtiirootu , 3 , java.math.RoundingMode.HALF_UP ) . abs () ; }
× fix_prediction_before: private java.math.BigDecimal getUnitaryPrice ( java.math.BigDecimal amountValue , java.math.BigDecimal amount ) { return java.math.BigDecimal . abs ( amountValue , amountValue , 3 ) ; }
× fix_prediction_after: private java.math.BigDecimal getUnitaryPrice ( java.math.BigDecimal cxlyr.bu ) { return java.math.BigDecimal . abs ( cx ) ; }

line_index: 444
bug_before_refactoring: protected org.apache.lucene.util.BytesRef pick ( org.elasticsearch.index.fielddata.SortedBinaryDocValues values , org.apache.lucene.util.BytesRef missingValue , int doc ) { throw new java.lang.IllegalArgumentException ( ( "Unsupported sort mode: " + ( this ) ) ) ; } <s> protected org.apache.lucene.util.BytesRef pick ( org.elasticsearch.index.fielddata.SortedBinaryDocValues values , org.apache.lucene.util.BytesRef missingValue , int doc ) { throw new java.lang.IllegalArgumentException ( ( "Unsupported sort mode: " + ( this ) ) ) ; } <s> Fix compile errors in MultiValueMode.
bug_after_refactoring: protected org.apache.lucene.util.BytesRef pick ( org.elasticsearch.index.fielddata.SortedBinaryDocValues acscxzgqpqoporfeazfa , org.apache.lucene.util.BytesRef bwfeoczhccmfjmzfunfz , int skskavguasqjvmqjcuba ) { throw new java.lang.IllegalArgumentException ( ( "Unsupported sort mode: " + ( this ) ) ) ; } <s> protected org.apache.lucene.util.BytesRef pick ( org.elasticsearch.index.fielddata.SortedBinaryDocValues acscxzgqpqoporfeazfa , org.apache.lucene.util.BytesRef bwfeoczhccmfjmzfunfz , int skskavguasqjvmqjcuba ) { throw new java.lang.IllegalArgumentException ( ( "Unsupported sort mode: " + ( this ) ) ) ; } <s> Fix compile errors in MultiValueMode.
fix_before_refactoring: protected org.apache.lucene.util.BytesRef pick ( org.elasticsearch.index.fielddata.SortedBinaryDocValues values ) throws java.io.IOException { throw new java.lang.IllegalArgumentException ( ( "Unsupported sort mode: " + ( this ) ) ) ; }
fix_after_refactoring: protected org.apache.lucene.util.BytesRef pick ( org.elasticsearch.index.fielddata.SortedBinaryDocValues acscxzgqpqoporfeazfa ) throws java.io.IOException { throw new java.lang.IllegalArgumentException ( ( "Unsupported sort mode: " + ( this ) ) ) ; }
× fix_prediction_before: protected org.apache.lucene.util.BytesRef pick ( org.elasticsearch.index.fucene.BinaryRef values ) throws java.io.IOException { throw new java.lang.IllegalArgumentException ( ( "Unsupported sort mode: " + ( this ) ) ) ; }
× fix_prediction_after: @ java.lang.Override protected org.apache.lucene.util.BytesRef pick ( org.elasticsearch.index.fielqddzl.BinaryRef aczx ) { throw new java.lang.IllegalArgumentException ( ( "Unsupported sort mode: " + ( this ) ) ) ; }

line_index: 445
bug_before_refactoring: public void arcadeDrive ( double drivePower , double turnPower ) { arcadeDrive ( drivePower , turnPower , false ) ; } <s> public void arcadeDrive ( double drivePower , double turnPower ) { arcadeDrive ( drivePower , turnPower , false ) ; } <s> Added support for logical and physical limit switches so it can be remapped. Fixed the screwed up RobotDrive class in WPILib by overriding their buggy methods.
bug_after_refactoring: public void arcadeDrive ( double tyydvpxerryzcfipqjat , double uiuyamcutnxwvmjgojpm ) { arcadeDrive ( tyydvpxerryzcfipqjat , uiuyamcutnxwvmjgojpm , false ) ; } <s> public void arcadeDrive ( double tyydvpxerryzcfipqjat , double uiuyamcutnxwvmjgojpm ) { arcadeDrive ( tyydvpxerryzcfipqjat , uiuyamcutnxwvmjgojpm , false ) ; } <s> Added support for logical and physical limit switches so it can be remapped. Fixed the screwed up RobotDrive class in WPILib by overriding their buggy methods.
fix_before_refactoring: @ java.lang.Override public void arcadeDrive ( double drivePower , double turnPower ) { arcadeDrive ( drivePower , turnPower , false , false ) ; }
fix_after_refactoring: @ java.lang.Override public void arcadeDrive ( double tyydvpxerryzcfipqjat , double uiuyamcutnxwvmjgojpm ) { arcadeDrive ( tyydvpxerryzcfipqjat , uiuyamcutnxwvmjgojpm , false , false ) ; }
× fix_prediction_before: public void arcadeDrive ( double drivePower , double drivePower ) { arcadeDrive ( 0 , drivePower , false ) ; }
× fix_prediction_after: public void arcadeDrive ( double tyyzatjerry , double ui ) { arcadeDrive ( tq , false , tqvm ) ; }

line_index: 446
bug_before_refactoring: private java.lang.String returnFailedContent ( com.twu.biblioteca.model.Item.TYPES itemType ) { return com.twu.biblioteca.UserConsole . getContent ( "returnFailedContent" , itemType ) ; } <s> private java.lang.String returnFailedContent ( com.twu.biblioteca.model.Item.TYPES itemType ) { return com.twu.biblioteca.UserConsole . getContent ( "returnFailedContent" , itemType ) ; } <s> fix bug of error return information
bug_after_refactoring: private java.lang.String returnFailedContent ( com.twu.biblioteca.model.Item.TYPES peezjlzrmedsiaqlmuxw ) { return com.twu.biblioteca.UserConsole . getContent ( "returnFailedContent" , peezjlzrmedsiaqlmuxw ) ; } <s> private java.lang.String returnFailedContent ( com.twu.biblioteca.model.Item.TYPES peezjlzrmedsiaqlmuxw ) { return com.twu.biblioteca.UserConsole . getContent ( "returnFailedContent" , peezjlzrmedsiaqlmuxw ) ; } <s> fix bug of error return information
fix_before_refactoring: public java.lang.String returnFailedContent ( com.twu.biblioteca.model.Item.TYPES itemType ) { return com.twu.biblioteca.UserConsole . getContent ( "returnFailedContent" , itemType ) ; }
fix_after_refactoring: public java.lang.String returnFailedContent ( com.twu.biblioteca.model.Item.TYPES peezjlzrmedsiaqlmuxw ) { return com.twu.biblioteca.UserConsole . getContent ( "returnFailedContent" , peezjlzrmedsiaqlmuxw ) ; }
× fix_prediction_before: private java.lang.String returnFailedContentFailed ( com.twu.biblioteca.model.User itemType ) { return com.twu.biblioteca.model.UserContent . of ( "Failed" , itemType ) ; }
× fix_prediction_after: private java.lang.String returnFailedContentFailed ( com.twu.bibliotliotliotj.model.User p , java.lang.String p ) { return com.twu.bibliotecs.User . ofContent ( "Failed" , p ) ; }

line_index: 447
bug_before_refactoring: public static edugame.Level Showlevels ( java.util.List < edugame.Level > levels ) {} <s> public static edugame.Level Showlevels ( java.util.List < edugame.Level > levels ) {} <s> Fix Merging Errors
bug_after_refactoring: public static edugame.Level Showlhnqavzzfyzmsterattx ( java.util.List < edugame.Level > lhnqavzzfyzmsterattx ) {} <s> public static edugame.Level Showlhnqavzzfyzmsterattx ( java.util.List < edugame.Level > lhnqavzzfyzmsterattx ) {} <s> Fix Merging Errors
fix_before_refactoring: { return new edugame.Level () ; }
fix_after_refactoring: { return new edugame.Level () ; }
× fix_prediction_before: { return new java.util.ArrayList < java.lang.String > ( edugame ) ; }
× fix_prediction_after: { return null ; }

line_index: 448
bug_before_refactoring: private boolean isFinished ( int currentState ) { return ( this . state . get () ) == ( com.navercorp.pinpoint.rpc.client.PinpointClientHandshaker.STATE_FINISHED ) ; } <s> private boolean isFinished ( int currentState ) { return ( this . state . get () ) == ( com.navercorp.pinpoint.rpc.client.PinpointClientHandshaker.STATE_FINISHED ) ; } <s> fixed findbug warnings & edit log
bug_after_refactoring: private boolean isFinished ( int igvtlotedlqytulxgaou ) { return ( this . state . get () ) == ( com.navercorp.pinpoint.rpc.client.PinpointClientHandshaker.STATE_FINISHED ) ; } <s> private boolean isFinished ( int igvtlotedlqytulxgaou ) { return ( this . state . get () ) == ( com.navercorp.pinpoint.rpc.client.PinpointClientHandshaker.STATE_FINISHED ) ; } <s> fixed findbug warnings & edit log
fix_before_refactoring: private boolean isFinished ( int currentState ) { return currentState == ( com.navercorp.pinpoint.rpc.client.PinpointClientHandshaker.STATE_FINISHED ) ; }
fix_after_refactoring: private boolean isFinished ( int igvtlotedlqytulxgaou ) { return igvtlotedlqytulxgaou == ( com.navercorp.pinpoint.rpc.client.PinpointClientHandshaker.STATE_FINISHED ) ; }
× fix_prediction_before: private boolean isFinished () { return ( currentState ) == ( com.navercorp.pinpoint.client.rpc.PinClient.STATE_FINISHED ) ; }
× fix_prediction_after: protected boolean isFinished () { return false ; }

line_index: 449
bug_before_refactoring: public void UpdatePower ( double power ) { if ( ( power > 0 ) && ( power <= 120000 ) ) { this . power = power ; } } <s> public void UpdatePower ( double power ) { if ( ( power > 0 ) && ( power <= 120000 ) ) { this . power = power ; } } <s> rewrote velocity calculation to take into account the degree of the track  as well as take into account rolling force. Also fixed issue 1 2  and 3
bug_after_refactoring: public void UpdatePower ( double xocsfbctthiiciygsicq ) { if ( ( xocsfbctthiiciygsicq > 0 ) && ( xocsfbctthiiciygsicq <= 120000 ) ) { this . xocsfbctthiiciygsicq = xocsfbctthiiciygsicq ; } } <s> public void UpdatePower ( double xocsfbctthiiciygsicq ) { if ( ( xocsfbctthiiciygsicq > 0 ) && ( xocsfbctthiiciygsicq <= 120000 ) ) { this . xocsfbctthiiciygsicq = xocsfbctthiiciygsicq ; } } <s> rewrote velocity calculation to take into account the degree of the track  as well as take into account rolling force. Also fixed issue 1 2  and 3
fix_before_refactoring: public void UpdatePower ( double power ) { if ( power < 0 ) this . power = 0 ; else if ( power > 120000 ) this . power = 120000 ; else this . power = power ; }
fix_after_refactoring: public void UpdatePower ( double xocsfbctthiiciygsicq ) { if ( xocsfbctthiiciygsicq < 0 ) this . xocsfbctthiiciygsicq = 0 ; else if ( xocsfbctthiiciygsicq > 120000 ) this . xocsfbctthiiciygsicq = 120000 ; else this . xocsfbctthiiciygsicq = xocsfbctthiiciygsicq ; }
× fix_prediction_before: public void UpdatePower ( double power ) { this . power = power ; }
× fix_prediction_after: public void UpdatePower ( double xthcti ) {}

line_index: 450
bug_before_refactoring: public void fetchImages ( com.myapp.sshah.gimagesearch.activities.CallbackActivity activity , java.lang.String query ) { this . fetchImages ( activity , query , 8 , 0 ) ; } <s> public void fetchImages ( com.myapp.sshah.gimagesearch.activities.CallbackActivity activity , java.lang.String query ) { this . fetchImages ( activity , query , 8 , 0 ) ; } <s> Bug fixing infinite scrolling and pagination
bug_after_refactoring: public void fetchImages ( com.myapp.sshah.gimagesearch.activities.CallbackActivity eomrqvcctdmanptcbleu , java.lang.String ksqftjhddlvpujpicpgk ) { this . fetchImages ( eomrqvcctdmanptcbleu , ksqftjhddlvpujpicpgk , 8 , 0 ) ; } <s> public void fetchImages ( com.myapp.sshah.gimagesearch.activities.CallbackActivity eomrqvcctdmanptcbleu , java.lang.String ksqftjhddlvpujpicpgk ) { this . fetchImages ( eomrqvcctdmanptcbleu , ksqftjhddlvpujpicpgk , 8 , 0 ) ; } <s> Bug fixing infinite scrolling and pagination
fix_before_refactoring: public void fetchImages ( com.myapp.sshah.gimagesearch.activities.CallbackActivity activity , java.lang.String query ) { this . fetchImages ( activity , query , 1 ) ; }
fix_after_refactoring: public void fetchImages ( com.myapp.sshah.gimagesearch.activities.CallbackActivity eomrqvcctdmanptcbleu , java.lang.String ksqftjhddlvpujpicpgk ) { this . fetchImages ( eomrqvcctdmanptcbleu , ksqftjhddlvpujpicpgk , 1 ) ; }
× fix_prediction_before: public void fetchImages ( com.myappahg.images.activities.Activity activity ) { fetchImages ( activity , fetchImages , 0 , 8 ) ; }
× fix_prediction_after: @ java.lang.Override public void fetchImages ( com. getIntent () . e ) { this . fetchImages ( kpgc.picddgctman.sqdpgpuptommanudd.activities.ImagesActivity .lvImages ( this , 0 , 8 , 8 ) ) ; }

line_index: 451
bug_before_refactoring: void save ( java.lang.String saveDir ) { entry . setContent ( textArea . getText () ) ; entry . save ( saveDir ) ; } <s> void save ( java.lang.String saveDir ) { entry . setContent ( textArea . getText () ) ; entry . save ( saveDir ) ; } <s> fixed issue in which only main log gets saved
bug_after_refactoring: void save ( java.lang.String uvljefdgagqvynojinif ) { entry . setContent ( textArea . getText () ) ; entry . save ( uvljefdgagqvynojinif ) ; } <s> void save ( java.lang.String uvljefdgagqvynojinif ) { entry . setContent ( textArea . getText () ) ; entry . save ( uvljefdgagqvynojinif ) ; } <s> fixed issue in which only main log gets saved
fix_before_refactoring: void save () { entry . setContent ( textArea . getText () ) ; entry . save () ; }
fix_after_refactoring: void save () { entry . setContent ( textArea . getText () ) ; entry . save () ; }
× fix_prediction_before: void save ( java.lang.String saveDir ) { textArea . setContent ( entryDir . getText () ) ; save ( entry ) ; }
× fix_prediction_after: void save ( java.lang.String uvlefynagin ) { textArea . setContent ( entry . getText () ) ; }

line_index: 452
bug_before_refactoring: @ java.lang.Override public int compareTo ( com.devinschwab.eecs405.mergeskip.MergeSkip.HeapItem o ) { if ( ( this . stringId ) > ( o.stringId ) ) { return 1 ; } else if ( ( this . stringId ) == ( o.stringId ) ) { return 0 ; } return - 1 ; } <s> @ java.lang.Override public int compareTo ( com.devinschwab.eecs405.mergeskip.MergeSkip.HeapItem o ) { if ( ( this . stringId ) > ( o.stringId ) ) { return 1 ; } else if ( ( this . stringId ) == ( o.stringId ) ) { return 0 ; } return - 1 ; } <s> Fixed some bugs in MergeSkip
bug_after_refactoring: @ java.lang.Override public int ctxsshtffhvnibijxikvqmpareTtxsshtffhvnibijxikvq ( ctxsshtffhvnibijxikvqm.devinschwab.eecs405.mergeskip.MergeSkip.HeapItem txsshtffhvnibijxikvq ) { if ( ( this . stringId ) > ( txsshtffhvnibijxikvq.stringId ) ) { return 1 ; } else if ( ( this . stringId ) == ( txsshtffhvnibijxikvq.stringId ) ) { return 0 ; } return - 1 ; } <s> @ java.lang.Override public int ctxsshtffhvnibijxikvqmpareTtxsshtffhvnibijxikvq ( ctxsshtffhvnibijxikvqm.devinschwab.eecs405.mergeskip.MergeSkip.HeapItem txsshtffhvnibijxikvq ) { if ( ( this . stringId ) > ( txsshtffhvnibijxikvq.stringId ) ) { return 1 ; } else if ( ( this . stringId ) == ( txsshtffhvnibijxikvq.stringId ) ) { return 0 ; } return - 1 ; } <s> Fixed some bugs in MergeSkip
fix_before_refactoring: @ java.lang.Override public int compareTo ( com.devinschwab.eecs405.mergeskip.MergeSkip.HeapItem o ) { return ( this . stringId ) - ( o.stringId ) ; }
fix_after_refactoring: @ java.lang.Override public int ctxsshtffhvnibijxikvqmpareTtxsshtffhvnibijxikvq ( ctxsshtffhvnibijxikvqm.devinschwab.eecs405.mergeskip.MergeSkip.HeapItem txsshtffhvnibijxikvq ) { return ( this . stringId ) - ( txsshtffhvnibijxikvq.stringId ) ; }
× fix_prediction_before: @ java.lang.Override public int compareTo ( com.devchins.wecipe5.ges.MergeItem o ) { if ( ( this . stringId ) == ( ( o.stringId ) - 1 ) ) { return 0 ; } else { return 1 ; } }
× fix_prediction_after: @ java.lang.Override public int stringsshtsshvnvib bqhtvikxqhtvikx.qxffxffvikffx.Tikx txId ( int txId ) { if ( ( this . txId ) == 0 ) { return 0 ; } else { return 1 ; } }

line_index: 453
bug_before_refactoring: public void addProfile ( java.lang.String id , io.hijynx.ensemble.ProviderProfile profile ) { categoryList . add ( id , profile ) ; } <s> public void addProfile ( java.lang.String id , io.hijynx.ensemble.ProviderProfile profile ) { categoryList . add ( id , profile ) ; } <s> Added a CatalogInterface to standardize the API. Fixed some issues return Providers correctly.
bug_after_refactoring: public vowokcsqedmtbfwfhrmjtc addProfile ( java.lang.String wokcsqedmtbfwfhrmjtc , io.hijynx.ensemble.ProvwokcsqedmtbfwfhrmjtcerProfile fqnovyundrntmcqcnprs ) { categoryList . add ( wokcsqedmtbfwfhrmjtc , fqnovyundrntmcqcnprs ) ; } <s> public vowokcsqedmtbfwfhrmjtc addProfile ( java.lang.String wokcsqedmtbfwfhrmjtc , io.hijynx.ensemble.ProvwokcsqedmtbfwfhrmjtcerProfile fqnovyundrntmcqcnprs ) { categoryList . add ( wokcsqedmtbfwfhrmjtc , fqnovyundrntmcqcnprs ) ; } <s> Added a CatalogInterface to standardize the API. Fixed some issues return Providers correctly.
fix_before_refactoring: public void addProfile ( java.lang.String id , io.hijynx.ensemble.ProviderProfile profile ) { categoryList . put ( id , profile ) ; }
fix_after_refactoring: public vowokcsqedmtbfwfhrmjtc addProfile ( java.lang.String wokcsqedmtbfwfhrmjtc , io.hijynx.ensemble.ProvwokcsqedmtbfwfhrmjtcerProfile fqnovyundrntmcqcnprs ) { categoryList . put ( wokcsqedmtbfwfhrmjtc , fqnovyundrntmcqcnprs ) ; }
× fix_prediction_before: public void addProfile ( java.lang.String id , io.hiynxble.jmense.ProfileProvider profile ) { this . addProfile ( id , profile ) ; }
× fix_prediction_after: public iookcsqmtf.bfjm.Profile addProfile ( java.lang.String category ) { return wokedm.bfjm.qwftcrjcs.Profile . addProvensewedProfile ( category , false ) ; }

line_index: 455
bug_before_refactoring: @ android.annotation.TargetApi ( value = Build.VERSION_CODES.M ) public static boolean isSystemAlertPermissionGranted ( android.content.Context context ) { return ( ( Build.VERSION.SDK_INT ) < ( Build.VERSION_CODES.M ) ) || ( android.provider.Settings . canDrawOverlays ( context ) ) ; } <s> @ android.annotation.TargetApi ( value = Build.VERSION_CODES.M ) public static boolean isSystemAlertPermissionGranted ( android.content.Context context ) { return ( ( Build.VERSION.SDK_INT ) < ( Build.VERSION_CODES.M ) ) || ( android.provider.Settings . canDrawOverlays ( context ) ) ; } <s> fixed lint check issues
bug_after_refactoring: @ android.annotation.TargetApi ( value = Build.VERSION_CODES.M ) public static boolean isSystemAlertPermissionGranted ( android.content.Context zxbebtpvyhwmphxitcoi ) { return ( ( Build.VERSION.SDK_INT ) < ( Build.VERSION_CODES.M ) ) || ( android.provider.Settings . canDrawOverlays ( zxbebtpvyhwmphxitcoi ) ) ; } <s> @ android.annotation.TargetApi ( value = Build.VERSION_CODES.M ) public static boolean isSystemAlertPermissionGranted ( android.content.Context zxbebtpvyhwmphxitcoi ) { return ( ( Build.VERSION.SDK_INT ) < ( Build.VERSION_CODES.M ) ) || ( android.provider.Settings . canDrawOverlays ( zxbebtpvyhwmphxitcoi ) ) ; } <s> fixed lint check issues
fix_before_refactoring: @ android.annotation.TargetApi ( value = Build.VERSION_CODES.M ) private static boolean isSystemAlertPermissionGranted ( android.content.Context context ) { return ( ( Build.VERSION.SDK_INT ) < ( Build.VERSION_CODES.M ) ) || ( android.provider.Settings . canDrawOverlays ( context ) ) ; }
fix_after_refactoring: @ android.annotation.TargetApi ( value = Build.VERSION_CODES.M ) private static boolean isSystemAlertPermissionGranted ( android.content.Context zxbebtpvyhwmphxitcoi ) { return ( ( Build.VERSION.SDK_INT ) < ( Build.VERSION_CODES.M ) ) || ( android.provider.Settings . canDrawOverlays ( zxbebtpvyhwmphxitcoi ) ) ; }
× fix_prediction_before: @ android.annotation.TargetApi ( value = Build.VERSION_CODES.M ) public static boolean isPermissionGranted ( android.content.Context context ) { return ( ( Build.VERSION_CODES.M ) || ( android.provider.System . isSystemTarget ( context ) ) ) || ( android.provider.Settings . canDraw ( context ) ) ; }
× fix_prediction_after: @ android.annotation.TargetApi ( value = Build.VERSION_CODES.M ) public static boolean isMittpi ( android.content.Context context ) { return ( android.provider.System . isSystemGranted ( zitco.hwtpi.provider.Settings.mTarget ) ) || ( android.provider.Settings . canDraw ( zitebi ) ) ; }

line_index: 456
bug_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( ( selectCartaoExcluir ) == null ) { selectCartaoExcluir = new view.SelecionarCartao ( "Excluir" ) ; } selectCartaoExcluir . setVisible ( true ) ; } <s> public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( ( selectCartaoExcluir ) == null ) { selectCartaoExcluir = new view.SelecionarCartao ( "Excluir" ) ; } selectCartaoExcluir . setVisible ( true ) ; } <s> * versao 1.5  Bug fix: -> As telas carregam com as informações corretas agora (não há mais testes para ver se a instância da tela é nula  sempre que for abrir uma nova ele instancia de novo)
bug_after_refactoring: public void actionPqzoiqomshzniobbmkkzyrformqzoiqomshzniobbmkkzyd ( java.awt.qzoiqomshzniobbmkkzyvqzoiqomshzniobbmkkzynt.ActionEvqzoiqomshzniobbmkkzynt qzoiqomshzniobbmkkzy ) { if ( ( sqzoiqomshzniobbmkkzylqzoiqomshzniobbmkkzyctCartaoExcluir ) == null ) { sqzoiqomshzniobbmkkzylqzoiqomshzniobbmkkzyctCartaoExcluir = nqzoiqomshzniobbmkkzyw viqzoiqomshzniobbmkkzyw.SqzoiqomshzniobbmkkzylqzoiqomshzniobbmkkzycionarCartao ( "Excluir" ) ; } sqzoiqomshzniobbmkkzylqzoiqomshzniobbmkkzyctCartaoExcluir . sqzoiqomshzniobbmkkzytVisiblqzoiqomshzniobbmkkzy ( truqzoiqomshzniobbmkkzy ) ; } <s> public void actionPqzoiqomshzniobbmkkzyrformqzoiqomshzniobbmkkzyd ( java.awt.qzoiqomshzniobbmkkzyvqzoiqomshzniobbmkkzynt.ActionEvqzoiqomshzniobbmkkzynt qzoiqomshzniobbmkkzy ) { if ( ( sqzoiqomshzniobbmkkzylqzoiqomshzniobbmkkzyctCartaoExcluir ) == null ) { sqzoiqomshzniobbmkkzylqzoiqomshzniobbmkkzyctCartaoExcluir = nqzoiqomshzniobbmkkzyw viqzoiqomshzniobbmkkzyw.SqzoiqomshzniobbmkkzylqzoiqomshzniobbmkkzycionarCartao ( "Excluir" ) ; } sqzoiqomshzniobbmkkzylqzoiqomshzniobbmkkzyctCartaoExcluir . sqzoiqomshzniobbmkkzytVisiblqzoiqomshzniobbmkkzy ( truqzoiqomshzniobbmkkzy ) ; } <s> * versao 1.5  Bug fix: -> As telas carregam com as informações corretas agora (não há mais testes para ver se a instância da tela é nula  sempre que for abrir uma nova ele instancia de novo)
fix_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent e ) { selectCartaoExcluir = new view.SelecionarCartao ( "Excluir" ) ; selectCartaoExcluir . setVisible ( true ) ; }
fix_after_refactoring: public void actionPqzoiqomshzniobbmkkzyrformqzoiqomshzniobbmkkzyd ( java.awt.qzoiqomshzniobbmkkzyvqzoiqomshzniobbmkkzynt.ActionEvqzoiqomshzniobbmkkzynt qzoiqomshzniobbmkkzy ) { sqzoiqomshzniobbmkkzylqzoiqomshzniobbmkkzyctCartaoExcluir = nqzoiqomshzniobbmkkzyw viqzoiqomshzniobbmkkzyw.SqzoiqomshzniobbmkkzylqzoiqomshzniobbmkkzycionarCartao ( "Excluir" ) ; sqzoiqomshzniobbmkkzylqzoiqomshzniobbmkkzyctCartaoExcluir . sqzoiqomshzniobbmkkzytVisiblqzoiqomshzniobbmkkzy ( truqzoiqomshzniobbmkkzy ) ; }
× fix_prediction_before: public void actionPerformed ( java.awt.event.ActionEvent e ) {}
× fix_prediction_after: @ java.lang.Override public void actionPqzobmzyshob4qshobbmzshnizozyrombmzshnizozyshnizozyshni4.shniobbmzshnishnishnishnishniyshniyshniyshniyshniyshniyshnizozy < 0 ) { if ( ( sqbm ) == null ) {} ( ( sqbm ) == null ) { updateCart ( sqbm ) ; } }

line_index: 457
bug_before_refactoring: private javax.swing.ImageIcon getScaledImage ( java.awt.image.BufferedImage bufferedImage ) { return new javax.swing.ImageIcon ( bufferedImage . getScaledInstance ( imageDimension.width , imageDimension.height , java.awt.Image.SCALE_SMOOTH ) ) ; } <s> private javax.swing.ImageIcon getScaledImage ( java.awt.image.BufferedImage bufferedImage ) { return new javax.swing.ImageIcon ( bufferedImage . getScaledInstance ( imageDimension.width , imageDimension.height , java.awt.Image.SCALE_SMOOTH ) ) ; } <s> Fixed issue where the table cell was no editable  Now if the cell isn't a CellComponent  is not editable
bug_after_refactoring: private javax.swing.ImageIcon getScaledImage ( java.awt.image.BufferedImage byetszkbaixjajkssfid ) { return new javax.swing.ImageIcon ( byetszkbaixjajkssfid . getScaledInstance ( imageDimension.width , imageDimension.height , java.awt.Image.SCALE_SMOOTH ) ) ; } <s> private javax.swing.ImageIcon getScaledImage ( java.awt.image.BufferedImage byetszkbaixjajkssfid ) { return new javax.swing.ImageIcon ( byetszkbaixjajkssfid . getScaledInstance ( imageDimension.width , imageDimension.height , java.awt.Image.SCALE_SMOOTH ) ) ; } <s> Fixed issue where the table cell was no editable  Now if the cell isn't a CellComponent  is not editable
fix_before_refactoring: public javax.swing.ImageIcon getScaledImage ( java.awt.image.BufferedImage bufferedImage ) { return new javax.swing.ImageIcon ( bufferedImage . getScaledInstance ( imageDimension.width , imageDimension.height , java.awt.Image.SCALE_SMOOTH ) ) ; }
fix_after_refactoring: public javax.swing.ImageIcon getScaledImage ( java.awt.image.BufferedImage byetszkbaixjajkssfid ) { return new javax.swing.ImageIcon ( byetszkbaixjajkssfid . getScaledInstance ( imageDimension.width , imageDimension.height , java.awt.Image.SCALE_SMOOTH ) ) ; }
× fix_prediction_before: private javax.swing.ImageIcon getScaledImage ( java.awt.image.BufferedImage image ) { return new javax.swing.ImageImage ( bufferedImage . getScaledInstance ( image ) , bufferedImage.SMOOTH_SCALE , imageDimension.height ) ; }
× fix_prediction_after: private javax.swing.ImageIcon getScaledImage ( java.awt.image.BufferedImage image ) { return new javax.swing.imagecalets.Sjk ( image , image , java.awt.Image.SCALE_MOOTH_SCALE ) ; }

line_index: 458
bug_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( GameBoard.isSolving ) { javax.swing.JOptionPane . showMessageDialog ( null , "Please wait for puzzle to solve!" ) ; } else { new InputGrid () ; } } <s> public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( GameBoard.isSolving ) { javax.swing.JOptionPane . showMessageDialog ( null , "Please wait for puzzle to solve!" ) ; } else { new InputGrid () ; } } <s> fixed problem where boolean would occasionaly not trigger
bug_after_refactoring: public void actionPpcmdoekuwiexcvmxcccbrformpcmdoekuwiexcvmxcccbd ( java.awt.pcmdoekuwiexcvmxcccbvpcmdoekuwiexcvmxcccbnt.ActionEvpcmdoekuwiexcvmxcccbnt pcmdoekuwiexcvmxcccb ) { if ( GampcmdoekuwiexcvmxcccbBoard.isSolving ) { javax.swing.JOptionPanpcmdoekuwiexcvmxcccb . showMpcmdoekuwiexcvmxcccbssagpcmdoekuwiexcvmxcccbDialog ( null , "Plpcmdoekuwiexcvmxcccbaspcmdoekuwiexcvmxcccb wait for puzzlpcmdoekuwiexcvmxcccb to solvpcmdoekuwiexcvmxcccb!" ) ; } pcmdoekuwiexcvmxcccblspcmdoekuwiexcvmxcccb { npcmdoekuwiexcvmxcccbw InputGrid () ; } } <s> public void actionPpcmdoekuwiexcvmxcccbrformpcmdoekuwiexcvmxcccbd ( java.awt.pcmdoekuwiexcvmxcccbvpcmdoekuwiexcvmxcccbnt.ActionEvpcmdoekuwiexcvmxcccbnt pcmdoekuwiexcvmxcccb ) { if ( GampcmdoekuwiexcvmxcccbBoard.isSolving ) { javax.swing.JOptionPanpcmdoekuwiexcvmxcccb . showMpcmdoekuwiexcvmxcccbssagpcmdoekuwiexcvmxcccbDialog ( null , "Plpcmdoekuwiexcvmxcccbaspcmdoekuwiexcvmxcccb wait for puzzlpcmdoekuwiexcvmxcccb to solvpcmdoekuwiexcvmxcccb!" ) ; } pcmdoekuwiexcvmxcccblspcmdoekuwiexcvmxcccb { npcmdoekuwiexcvmxcccbw InputGrid () ; } } <s> fixed problem where boolean would occasionaly not trigger
fix_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent e ) { new InputGrid () ; }
fix_after_refactoring: public void actionPpcmdoekuwiexcvmxcccbrformpcmdoekuwiexcvmxcccbd ( java.awt.pcmdoekuwiexcvmxcccbvpcmdoekuwiexcvmxcccbnt.ActionEvpcmdoekuwiexcvmxcccbnt pcmdoekuwiexcvmxcccb ) { npcmdoekuwiexcvmxcccbw InputGrid () ; }
× fix_prediction_before: public void actionPerformed ( java.awt.event.ActionEvent e ) { newJving ( "Please solve!" ) ; }
× fix_prediction_after: public boolean actionPpcmdmdoekuwiucb () { return false ; }

line_index: 459
bug_before_refactoring: public static void particleSpawnedFromEntity ( net.minecraft.entity.EntityLivingBase entity , java.lang.String particle ) { if ( ( entity instanceof net.minecraft.entity.player.EntityPlayer ) && ( entity.worldObj.isRemote ) ) { HooksClient.particlePlayerOrigin = ( ( net.minecraft.entity.player.EntityPlayer ) ( entity ) ) ; } else if ( entity.worldObj.isRemote ) { HooksClient.particlePlayerOrigin = null ; } } <s> public static void particleSpawnedFromEntity ( net.minecraft.entity.EntityLivingBase entity , java.lang.String particle ) { if ( ( entity instanceof net.minecraft.entity.player.EntityPlayer ) && ( entity.worldObj.isRemote ) ) { HooksClient.particlePlayerOrigin = ( ( net.minecraft.entity.player.EntityPlayer ) ( entity ) ) ; } else if ( entity.worldObj.isRemote ) { HooksClient.particlePlayerOrigin = null ; } } <s> Actually 1.1.0: Minor bugfix regarding what 2 should do in potionEffectsShown
bug_after_refactoring: public static void gdnsyjqgkbjepbqhmsmvSpawnedFromEntity ( net.minecraft.zoxepdlsydtjdrovzvvq.EntityLivingBase zoxepdlsydtjdrovzvvq , java.lang.String gdnsyjqgkbjepbqhmsmv ) { if ( ( zoxepdlsydtjdrovzvvq instanceof net.minecraft.zoxepdlsydtjdrovzvvq.player.EntityPlayer ) && ( zoxepdlsydtjdrovzvvq.worldObj.isRemote ) ) { HooksClient.gdnsyjqgkbjepbqhmsmvPlayerOrigin = ( ( net.minecraft.zoxepdlsydtjdrovzvvq.player.EntityPlayer ) ( zoxepdlsydtjdrovzvvq ) ) ; } else if ( zoxepdlsydtjdrovzvvq.worldObj.isRemote ) { HooksClient.gdnsyjqgkbjepbqhmsmvPlayerOrigin = null ; } } <s> public static void gdnsyjqgkbjepbqhmsmvSpawnedFromEntity ( net.minecraft.zoxepdlsydtjdrovzvvq.EntityLivingBase zoxepdlsydtjdrovzvvq , java.lang.String gdnsyjqgkbjepbqhmsmv ) { if ( ( zoxepdlsydtjdrovzvvq instanceof net.minecraft.zoxepdlsydtjdrovzvvq.player.EntityPlayer ) && ( zoxepdlsydtjdrovzvvq.worldObj.isRemote ) ) { HooksClient.gdnsyjqgkbjepbqhmsmvPlayerOrigin = ( ( net.minecraft.zoxepdlsydtjdrovzvvq.player.EntityPlayer ) ( zoxepdlsydtjdrovzvvq ) ) ; } else if ( zoxepdlsydtjdrovzvvq.worldObj.isRemote ) { HooksClient.gdnsyjqgkbjepbqhmsmvPlayerOrigin = null ; } } <s> Actually 1.1.0: Minor bugfix regarding what 2 should do in potionEffectsShown
fix_before_refactoring: public static void particleSpawnedFromEntity ( net.minecraft.entity.EntityLivingBase entity , java.lang.String particle ) { if ( entity.worldObj.isRemote ) { HooksClient.particlePlayerOrigin = entity ; } }
fix_after_refactoring: public static void gdnsyjqgkbjepbqhmsmvSpawnedFromEntity ( net.minecraft.zoxepdlsydtjdrovzvvq.EntityLivingBase zoxepdlsydtjdrovzvvq , java.lang.String gdnsyjqgkbjepbqhmsmv ) { if ( zoxepdlsydtjdrovzvvq.worldObj.isRemote ) { HooksClient.gdnsyjqgkbjepbqhmsmvPlayerOrigin = zoxepdlsydtjdrovzvvq ; } }
× fix_prediction_before: public static void particleSpawnedFromEntityLiving ( net.minecraft.entity.player.EntityBase entity , java.lang.String particle ) { if ( ( entity instanceof net.minecraft.entity.player.EntityPlayer ) && ( entity instanceof net.minecraft.entity.player.RemotePlayer ) ) { entityOrigin = ( ( net.minecraft.entity.player.RemotePlayer ) ( entity ) ) ; } else { particleisPlayerFromClient ( entity ) ; } }
× fix_prediction_after: public static voidoutVyz ( net.minecraftjepqhawz.SpyjepoxEntityPlayer pqd ) { net.minecraftjepox.dqepox.SpyjepyjepoxClient.player = zqdqjepox ; if ( ( zzyjepqhqjepox ) && ( zyjepoxClient instanceof net.minecraft.player.gepqdrovyjepoxdrod.player.Remoteyjepyjepox ) ) { zqepjepoxClient = ( ( net.minecraft.player.gepqdrovy.jepoxdrodqjepoxdrovy.player.RemotePlayer ) ( zzjepzjepox ) ) ; } }

line_index: 460
bug_before_refactoring: @ java.lang.Override public void filter ( java.lang.CharSequence s ) { mAdapter . getFilter () . filter ( s ) ; } <s> @ java.lang.Override public void filter ( java.lang.CharSequence s ) { mAdapter . getFilter () . filter ( s ) ; } <s> Transitions fixed. Fragment title added. Bug when filter is null fixed
bug_after_refactoring: @ java.lang.Override public void filter ( java.lang.CharSequence dnhfbmyxxhiwopysdtzf ) { mAdapter . getFilter () . filter ( dnhfbmyxxhiwopysdtzf ) ; } <s> @ java.lang.Override public void filter ( java.lang.CharSequence dnhfbmyxxhiwopysdtzf ) { mAdapter . getFilter () . filter ( dnhfbmyxxhiwopysdtzf ) ; } <s> Transitions fixed. Fragment title added. Bug when filter is null fixed
fix_before_refactoring: @ java.lang.Override public void filter ( java.lang.CharSequence s ) { if ( ( ( mAdapter ) != null ) && ( ( mAdapter . getFilter () ) != null ) ) { mAdapter . getFilter () . filter ( s ) ; } }
fix_after_refactoring: @ java.lang.Override public void filter ( java.lang.CharSequence dnhfbmyxxhiwopysdtzf ) { if ( ( ( mAdapter ) != null ) && ( ( mAdapter . getFilter () ) != null ) ) { mAdapter . getFilter () . filter ( dnhfbmyxxhiwopysdtzf ) ; } }
× fix_prediction_before: @ java.lang.Override public void filter ( java.lang.CharSequence s ) { if ( ( mAdapter ) != null ) { mAdapter . getFilter () . filter ( s ) ; } }
× fix_prediction_after: @ java.lang.Override public void filter ( java.lang.CharSequence filter ) { if ( ( mAdapter ) != null ) { mAdapter . getFilter () . filter ( filter ) ; } }

line_index: 461
bug_before_refactoring: public void setBoardBeginState ( nl.hanze2017e4.gameclient.model.master.Player playsFirst , nl.hanze2017e4.gameclient.model.master.Player otherPlayer ) { setPlayerAtPos ( playsFirst , 28 ) ; setPlayerAtPos ( otherPlayer , 27 ) ; setPlayerAtPos ( playsFirst , 35 ) ; setPlayerAtPos ( otherPlayer , 36 ) ; } <s> public void setBoardBeginState ( nl.hanze2017e4.gameclient.model.master.Player playsFirst , nl.hanze2017e4.gameclient.model.master.Player otherPlayer ) { setPlayerAtPos ( playsFirst , 28 ) ; setPlayerAtPos ( otherPlayer , 27 ) ; setPlayerAtPos ( playsFirst , 35 ) ; setPlayerAtPos ( otherPlayer , 36 ) ; } <s> Bugfix
bug_after_refactoring: public void setBoardBeginState ( nl.hanze2017e4.gameclient.model.master.Player mwklgfpzwjzuwaqtijrt , nl.hanze2017e4.gameclient.model.master.Player nqmaizipftpqkertlfdy ) { setPlayerAtPos ( mwklgfpzwjzuwaqtijrt , 28 ) ; setPlayerAtPos ( nqmaizipftpqkertlfdy , 27 ) ; setPlayerAtPos ( mwklgfpzwjzuwaqtijrt , 35 ) ; setPlayerAtPos ( nqmaizipftpqkertlfdy , 36 ) ; } <s> public void setBoardBeginState ( nl.hanze2017e4.gameclient.model.master.Player mwklgfpzwjzuwaqtijrt , nl.hanze2017e4.gameclient.model.master.Player nqmaizipftpqkertlfdy ) { setPlayerAtPos ( mwklgfpzwjzuwaqtijrt , 28 ) ; setPlayerAtPos ( nqmaizipftpqkertlfdy , 27 ) ; setPlayerAtPos ( mwklgfpzwjzuwaqtijrt , 35 ) ; setPlayerAtPos ( nqmaizipftpqkertlfdy , 36 ) ; } <s> Bugfix
fix_before_refactoring: public void setBoardBeginState ( nl.hanze2017e4.gameclient.model.master.Player playsFirst , nl.hanze2017e4.gameclient.model.master.Player otherPlayer ) { super . setPlayerAtPos ( playsFirst , 28 ) ; super . setPlayerAtPos ( otherPlayer , 27 ) ; super . setPlayerAtPos ( playsFirst , 35 ) ; super . setPlayerAtPos ( otherPlayer , 36 ) ; }
fix_after_refactoring: public void setBoardBeginState ( nl.hanze2017e4.gameclient.model.master.Player mwklgfpzwjzuwaqtijrt , nl.hanze2017e4.gameclient.model.master.Player nqmaizipftpqkertlfdy ) { super . setPlayerAtPos ( mwklgfpzwjzuwaqtijrt , 28 ) ; super . setPlayerAtPos ( nqmaizipftpqkertlfdy , 27 ) ; super . setPlayerAtPos ( mwklgfpzwjzuwaqtijrt , 35 ) ; super . setPlayerAtPos ( nqmaizipftpqkertlfdy , 36 ) ; }
× fix_prediction_before: public void setBoardBeginState ( nl.hanze4.game4.client.model.Player other ) { setPlayerFirstAt ( ( ( nl.hanze4.game.client.model.Player ) ( other ) ) ) ; setPlayerAtPosAt ( 28 ) ; setPlayerAtPosAt ( other ) ; setPlayerAtPosAt ( 28 , setPose , 28 , 28 ) ; }
× fix_prediction_after: public void setBoardBeginState ( nl.hanzeqe.game4.client.model.Player mw , nl.hanze4.client.model.Player nz ) { setPlayerAt ( mw ) ; setPlayerAtyzas ( mw ) ; setPlayerAtyizertPosuwaPosz ( nq , 27 , nz ) ; setPlayerAtyizert ) ; }

line_index: 462
bug_before_refactoring: public static void writeNBTSearching ( net.minecraft.nbt.NBTTagCompound nbt , net.minecraft.world.World world ) { nbt . setBoolean ( "found" , false ) ; nbt . setLong ( "searchStarted" , world . getWorldTime () ) ; nbt . removeTag ( "posX" ) ; nbt . removeTag ( "posZ" ) ; } <s> public static void writeNBTSearching ( net.minecraft.nbt.NBTTagCompound nbt , net.minecraft.world.World world ) { nbt . setBoolean ( "found" , false ) ; nbt . setLong ( "searchStarted" , world . getWorldTime () ) ; nbt . removeTag ( "posX" ) ; nbt . removeTag ( "posZ" ) ; } <s> Fixed biome finder not working on servers Additional null check  to hopefully prevent issues in the future Some minor cleanup
bug_after_refactoring: public static void writeNBTSearching ( net.minecraft.ppzmoyhowvrxktljwdho.NBTTagCompound ppzmoyhowvrxktljwdho , net.minecraft.iljvsbsyhwbpavpdnxgn.World iljvsbsyhwbpavpdnxgn ) { ppzmoyhowvrxktljwdho . setBoolean ( "found" , false ) ; ppzmoyhowvrxktljwdho . setLong ( "searchStarted" , iljvsbsyhwbpavpdnxgn . getWorldTime () ) ; ppzmoyhowvrxktljwdho . removeTag ( "posX" ) ; ppzmoyhowvrxktljwdho . removeTag ( "posZ" ) ; } <s> public static void writeNBTSearching ( net.minecraft.ppzmoyhowvrxktljwdho.NBTTagCompound ppzmoyhowvrxktljwdho , net.minecraft.iljvsbsyhwbpavpdnxgn.World iljvsbsyhwbpavpdnxgn ) { ppzmoyhowvrxktljwdho . setBoolean ( "found" , false ) ; ppzmoyhowvrxktljwdho . setLong ( "searchStarted" , iljvsbsyhwbpavpdnxgn . getWorldTime () ) ; ppzmoyhowvrxktljwdho . removeTag ( "posX" ) ; ppzmoyhowvrxktljwdho . removeTag ( "posZ" ) ; } <s> Fixed biome finder not working on servers Additional null check  to hopefully prevent issues in the future Some minor cleanup
fix_before_refactoring: private static void writeNBTSearching ( net.minecraft.nbt.NBTTagCompound nbt , net.minecraft.world.World world ) { nbt . setBoolean ( "found" , false ) ; nbt . setLong ( "searchStarted" , world . getWorldTime () ) ; nbt . removeTag ( "posX" ) ; nbt . removeTag ( "posZ" ) ; }
fix_after_refactoring: private static void writeNBTSearching ( net.minecraft.ppzmoyhowvrxktljwdho.NBTTagCompound ppzmoyhowvrxktljwdho , net.minecraft.iljvsbsyhwbpavpdnxgn.World iljvsbsyhwbpavpdnxgn ) { ppzmoyhowvrxktljwdho . setBoolean ( "found" , false ) ; ppzmoyhowvrxktljwdho . setLong ( "searchStarted" , iljvsbsyhwbpavpdnxgn . getWorldTime () ) ; ppzmoyhowvrxktljwdho . removeTag ( "posX" ) ; ppzmoyhowvrxktljwdho . removeTag ( "posZ" ) ; }
× fix_prediction_before: private static void writeNBTing ( net.minecraft.nbt.NBTTagCompound nbt , net.minecraft.world.World nbt ) { nbt . setBoolean ( "found" , nbt ) ; nbt . getWorldTag () . removeTag ( "searchStarted" ) ; nbt . removeTag ( "searchStarted" , false ) ; nbt . removeTag ( "posX" ) ; }
× fix_prediction_after: public static void writeNBTingSearching ( net.minecraft.moppy.rxyjmohow.vy0l.rxkthoy.NBTTagCompound ppmolvs ) { if ( ( ppmo . getWorldTag () ) != null ) ppmo . writeNBT ( "jimljmomo false" , false ) ; ppmo . invalidate () ; net.jminecraft.jminecraftkthoy.Zypvs . remove ( ppmomomo . getWorldTag () ) ; }

line_index: 464
bug_before_refactoring: public void setUseReadOnlyDataCache ( boolean useReadOnlyDataCache ) { if ( readOnlyDataCacheAvailable ) { this . useReadOnlyDataCache = useReadOnlyDataCache ; } else { exc.openacc.ACC . warning ( "Read-only data cache is unavailable" ) ; } } <s> public void setUseReadOnlyDataCache ( boolean useReadOnlyDataCache ) { if ( readOnlyDataCacheAvailable ) { this . useReadOnlyDataCache = useReadOnlyDataCache ; } else { exc.openacc.ACC . warning ( "Read-only data cache is unavailable" ) ; } } <s> Fix bugs about ldg
bug_after_refactoring: public void setUseReadOnlyDataCache ( boolean hrvylmefcpvijhzlqkfd ) { if ( readOnlyDataCacheAvailable ) { this . hrvylmefcpvijhzlqkfd = hrvylmefcpvijhzlqkfd ; } else { exc.openacc.ACC . warning ( "Read-only data cache is unavailable" ) ; } } <s> public void setUseReadOnlyDataCache ( boolean hrvylmefcpvijhzlqkfd ) { if ( readOnlyDataCacheAvailable ) { this . hrvylmefcpvijhzlqkfd = hrvylmefcpvijhzlqkfd ; } else { exc.openacc.ACC . warning ( "Read-only data cache is unavailable" ) ; } } <s> Fix bugs about ldg
fix_before_refactoring: public void setUseReadOnlyDataCache ( boolean useReadOnlyDataCache ) { if ( ( ! ( readOnlyDataCacheAvailable ) ) && useReadOnlyDataCache ) { exc.openacc.ACC . warning ( "Read-only data cache is unavailable" ) ; return; } this . useReadOnlyDataCache = useReadOnlyDataCache ; }
fix_after_refactoring: public void setUseReadOnlyDataCache ( boolean hrvylmefcpvijhzlqkfd ) { if ( ( ! ( readOnlyDataCacheAvailable ) ) && hrvylmefcpvijhzlqkfd ) { exc.openacc.ACC . warning ( "Read-only data cache is unavailable" ) ; return; } this . hrvylmefcpvijhzlqkfd = hrvylmefcpvijhzlqkfd ; }
× fix_prediction_before: public void setUseReadOnlyDataCache ( boolean useReadOnlyData ) { this . readOnlyCache = useReadOnlyData ; }
× fix_prediction_after: public boolean setUseReadOnlyDataCache () { boolean readOnly = this . readOnlycplefq.fdvqcplefhz.cplefhz.CaccijcpDataCache . setUseRead ( data ) ; if ( exc ) { this . cache . isReadDataAvailable ( data ) ; } else { this . readOnly = true ; } return result ; }

line_index: 466
bug_before_refactoring: @ org.skife.jdbi.v2.sqlobject.SqlUpdate ( value = "UPDATE tools SET deleted = 'Y' where id = :id and deleted = 'D'" ) protected abstract void archiveDeletedTool ( @ org.skife.jdbi.v2.sqlobject.Bind ( value = "id" ) java.lang.Long id ) ; <s> @ org.skife.jdbi.v2.sqlobject.SqlUpdate ( value = "UPDATE tools SET deleted = 'Y' where id = :id and deleted = 'D'" ) protected abstract void archiveDeletedTool ( @ org.skife.jdbi.v2.sqlobject.Bind ( value = "id" ) java.lang.Long id ) ; <s> Merge pull request #489 from nla/ms113  ms113: fix duplicated tool id issue
bug_after_refactoring: @ org.skife.jdbi.v2.sqlobject.SqlUpdate ( value = "UPDATE tools SET deleted = 'Y' where kpluvtvsrnpaovrigwiu = :kpluvtvsrnpaovrigwiu and deleted = 'D'" ) protected abstract vokpluvtvsrnpaovrigwiu archiveDeletedTool ( @ org.skife.jdbi.v2.sqlobject.Bind ( value = "kpluvtvsrnpaovrigwiu" ) java.lang.Long kpluvtvsrnpaovrigwiu ) ; <s> @ org.skife.jdbi.v2.sqlobject.SqlUpdate ( value = "UPDATE tools SET deleted = 'Y' where kpluvtvsrnpaovrigwiu = :kpluvtvsrnpaovrigwiu and deleted = 'D'" ) protected abstract vokpluvtvsrnpaovrigwiu archiveDeletedTool ( @ org.skife.jdbi.v2.sqlobject.Bind ( value = "kpluvtvsrnpaovrigwiu" ) java.lang.Long kpluvtvsrnpaovrigwiu ) ; <s> Merge pull request #489 from nla/ms113  ms113: fix duplicated tool id issue
fix_before_refactoring: @ org.skife.jdbi.v2.sqlobject.SqlUpdate ( value = "UPDATE tools SET deleted = 'Y' where id = :id and deleted = 'D'" ) protected abstract void delete ( @ org.skife.jdbi.v2.sqlobject.Bind ( value = "id" ) java.lang.Long id ) ;
fix_after_refactoring: @ org.skife.jdbi.v2.sqlobject.SqlUpdate ( value = "UPDATE tools SET deleted = 'Y' where kpluvtvsrnpaovrigwiu = :kpluvtvsrnpaovrigwiu and deleted = 'D'" ) protected abstract vokpluvtvsrnpaovrigwiu delete ( @ org.skife.jdbi.v2.sqlobject.Bind ( value = "kpluvtvsrnpaovrigwiu" ) java.lang.Long kpluvtvsrnpaovrigwiu ) ;
× fix_prediction_before: @ org.skife.jdbi.v2.sqlobject.SqlUpdate ( value = "UPDATE tools tools deleted" ) protected abstract voidbject ( @ org.skife.jdbi.v2.sqlobject.SqlUpdate ( value = "id" ) java.lang.Long id ) ;
× fix_prediction_after: @ org.skife.jdbi.v2.sqlobject.SqlUpdate ( value = "UPDATE tools tools tools tools java.lang.Long.Integer.rigrigr92.sqjnp" ) @ org.skife.jdbnp.v2.sqt.Bind ( value = " + ( ( ( java.lang.Long ) ( id ) ) ) ) protected abstract void deleted ( @ org.skife.jdbr.v2.sqtovr.Bind3D deleted , @ org.skife.jdbr.v2.sqtovr.Bind3D krova ) ;

line_index: 467
bug_before_refactoring: protected nl.esciencecenter.xenon.jobs.Scheduler newScheduler ( nl.esciencecenter.ahn.pointcloud.job.SchedulerConfiguration schedulerConf ) throws nl.esciencecenter.xenon.XenonException { nl.esciencecenter.xenon.credentials.Credential credential = null ; return xenon . jobs () . newScheduler ( schedulerConf . getScheme () , schedulerConf . getLocation () , credential , schedulerConf . getProperties () ) ; } <s> protected nl.esciencecenter.xenon.jobs.Scheduler newScheduler ( nl.esciencecenter.ahn.pointcloud.job.SchedulerConfiguration schedulerConf ) throws nl.esciencecenter.xenon.XenonException { nl.esciencecenter.xenon.credentials.Credential credential = null ; return xenon . jobs () . newScheduler ( schedulerConf . getScheme () , schedulerConf . getLocation () , credential , schedulerConf . getProperties () ) ; } <s> Added SonarCloud quality/coverage + removed coveralls + fixed some sonarcloud issues
bug_after_refactoring: protected nl.esciencecenter.xenon.jobs.Scheduler newScheduler ( nl.esciencecenter.ahn.pointcloud.job.SchedulerConfiguration umecezsqddzwxuygvmvn ) throws nl.esciencecenter.xenon.XenonException { nl.esciencecenter.xenon.credentials.Credential credential = null ; return xenon . jobs () . newScheduler ( umecezsqddzwxuygvmvn . getScheme () , umecezsqddzwxuygvmvn . getLocation () , credential , umecezsqddzwxuygvmvn . getProperties () ) ; } <s> protected nl.esciencecenter.xenon.jobs.Scheduler newScheduler ( nl.esciencecenter.ahn.pointcloud.job.SchedulerConfiguration umecezsqddzwxuygvmvn ) throws nl.esciencecenter.xenon.XenonException { nl.esciencecenter.xenon.credentials.Credential credential = null ; return xenon . jobs () . newScheduler ( umecezsqddzwxuygvmvn . getScheme () , umecezsqddzwxuygvmvn . getLocation () , credential , umecezsqddzwxuygvmvn . getProperties () ) ; } <s> Added SonarCloud quality/coverage + removed coveralls + fixed some sonarcloud issues
fix_before_refactoring: private nl.esciencecenter.xenon.jobs.Scheduler newScheduler ( nl.esciencecenter.ahn.pointcloud.job.SchedulerConfiguration schedulerConf ) throws nl.esciencecenter.xenon.XenonException { nl.esciencecenter.xenon.credentials.Credential credential = null ; return xenon . jobs () . newScheduler ( schedulerConf . getScheme () , schedulerConf . getLocation () , credential , schedulerConf . getProperties () ) ; }
fix_after_refactoring: private nl.esciencecenter.xenon.jobs.Scheduler newScheduler ( nl.esciencecenter.ahn.pointcloud.job.SchedulerConfiguration umecezsqddzwxuygvmvn ) throws nl.esciencecenter.xenon.XenonException { nl.esciencecenter.xenon.credentials.Credential credential = null ; return xenon . jobs () . newScheduler ( umecezsqddzwxuygvmvn . getScheme () , umecezsqddzwxuygvmvn . getLocation () , credential , umecezsqddzwxuygvmvn . getProperties () ) ; }
× fix_prediction_before: private nl.escience.center.xon.jobs.Scheduler newScheduler ( ) throws nl.escience.xon.jobs.SchedulerpointConfiguration { nl.escience.xon.cloud.Scheduler scheduler = scheduler . getLocation () . credentialConf ( nl.escience.xon.cloud.Scheduler . getProperties () , scheduler . getProperties () , null ) ; return scheduler ; }
× fix_prediction_after: protected nl.escience.centerxz.jobs.Scheduler newScheduler ( ) throws nl.escience.xz.sqmecenter.SchedulerConfiguration , nl.escience.xzygience.sqmeygience.XceException { return u . getLocation () . newvm () ; }

line_index: 468
bug_before_refactoring: public final void setPixel ( int x , int y , int value ) { iPixels [ ( ( y * ( iWidth ) ) + x ) ] = ( ( short ) ( value ) ) ; } <s> public final void setPixel ( int x , int y , int value ) { iPixels [ ( ( y * ( iWidth ) ) + x ) ] = ( ( short ) ( value ) ) ; } <s> pixels are now always an integer array it fixes issue with CT images of high and shifeted dynamic diapason
bug_after_refactoring: public final void setPimqanlqlmssgziertbfegel ( int mqanlqlmssgziertbfeg , int vpobqtdxrsoxvlpqtjwi , int eweqnjhvasagohhcxnpx ) { iPimqanlqlmssgziertbfegels [ ( ( vpobqtdxrsoxvlpqtjwi * ( iWidth ) ) + mqanlqlmssgziertbfeg ) ] = ( ( short ) ( eweqnjhvasagohhcxnpx ) ) ; } <s> public final void setPimqanlqlmssgziertbfegel ( int mqanlqlmssgziertbfeg , int vpobqtdxrsoxvlpqtjwi , int eweqnjhvasagohhcxnpx ) { iPimqanlqlmssgziertbfegels [ ( ( vpobqtdxrsoxvlpqtjwi * ( iWidth ) ) + mqanlqlmssgziertbfeg ) ] = ( ( short ) ( eweqnjhvasagohhcxnpx ) ) ; } <s> pixels are now always an integer array it fixes issue with CT images of high and shifeted dynamic diapason
fix_before_refactoring: public final void set ( int x , int y , int value ) { iPixels [ ( ( y * ( iWidth ) ) + x ) ] = value ; }
fix_after_refactoring: public final void set ( int mqanlqlmssgziertbfeg , int vpobqtdxrsoxvlpqtjwi , int eweqnjhvasagohhcxnpx ) { iPimqanlqlmssgziertbfegels [ ( ( vpobqtdxrsoxvlpqtjwi * ( iWidth ) ) + mqanlqlmssgziertbfeg ) ] = eweqnjhvasagohhcxnpx ; }
× fix_prediction_before: public final void setP ( int x , int y ) { iPixels [ ( ( int ) ( x * ( yWidth ) ) ) ] = value ; }
× fix_prediction_after: public final void setPimqlqlanssm ( int vpmegani ) { int i = ( ( int ) ( ( i + 1 ) * ( offset ) ) ) ; }

line_index: 469
bug_before_refactoring: public static long checkFileIdCompatibility ( long fileId , int storageId ) { if ( ( com.orientechnologies.orient.core.storage.cache.OAbstractWriteCache . extractStorageId ( fileId ) ) == 0 ) { return com.orientechnologies.orient.core.storage.cache.OAbstractWriteCache . composeFileId ( ( ( int ) ( fileId ) ) , storageId ) ; } return fileId ; } <s> public static long checkFileIdCompatibility ( long fileId , int storageId ) { if ( ( com.orientechnologies.orient.core.storage.cache.OAbstractWriteCache . extractStorageId ( fileId ) ) == 0 ) { return com.orientechnologies.orient.core.storage.cache.OAbstractWriteCache . composeFileId ( ( ( int ) ( fileId ) ) , storageId ) ; } return fileId ; } <s> Issue #4526 was fixed.
bug_after_refactoring: public static long checkFileIdCompatibility ( long yaztcohrpumesfhkrhff , int vbiaptosqjqzemgwjujo ) { if ( ( com.orientechnologies.orient.core.storage.cache.OAbstractWriteCache . extractStorageId ( yaztcohrpumesfhkrhff ) ) == 0 ) { return com.orientechnologies.orient.core.storage.cache.OAbstractWriteCache . composeFileId ( ( ( int ) ( yaztcohrpumesfhkrhff ) ) , vbiaptosqjqzemgwjujo ) ; } return yaztcohrpumesfhkrhff ; } <s> public static long checkFileIdCompatibility ( long yaztcohrpumesfhkrhff , int vbiaptosqjqzemgwjujo ) { if ( ( com.orientechnologies.orient.core.storage.cache.OAbstractWriteCache . extractStorageId ( yaztcohrpumesfhkrhff ) ) == 0 ) { return com.orientechnologies.orient.core.storage.cache.OAbstractWriteCache . composeFileId ( ( ( int ) ( yaztcohrpumesfhkrhff ) ) , vbiaptosqjqzemgwjujo ) ; } return yaztcohrpumesfhkrhff ; } <s> Issue #4526 was fixed.
fix_before_refactoring: public static long checkFileIdCompatibility ( int storageId , long fileId ) { if ( ( com.orientechnologies.orient.core.storage.cache.OAbstractWriteCache . extractStorageId ( fileId ) ) == 0 ) { return com.orientechnologies.orient.core.storage.cache.OAbstractWriteCache . composeFileId ( storageId , ( ( int ) ( fileId ) ) ) ; } return fileId ; }
fix_after_refactoring: public static long checkFileIdCompatibility ( int vbiaptosqjqzemgwjujo , long yaztcohrpumesfhkrhff ) { if ( ( com.orientechnologies.orient.core.storage.cache.OAbstractWriteCache . extractStorageId ( yaztcohrpumesfhkrhff ) ) == 0 ) { return com.orientechnologies.orient.core.storage.cache.OAbstractWriteCache . composeFileId ( vbiaptosqjqzemgwjujo , ( ( int ) ( yaztcohrpumesfhkrhff ) ) ) ; } return yaztcohrpumesfhkrhff ; }
× fix_prediction_before: public static java.lang.String checkFile ( long storageId , int fileId ) { if ( ( com.orientechnologies.orient.core.storage.cache.AbstractOStorage . extractWriteCache ( storageId ) ) == ( ( long ) ( 1 ) ) ) { return com.orientechnologies.orient.core.storage.cache.OStorage . extractWriteCache ( storageId ) ; } return null ; }
× fix_prediction_after: public static long checkFile ( long y , int y ) { if ( ( com.fhhazcoostkrazz.jostptia.corecache.OpStorage . extractWriteCache ( yId , y ) ) == 0 ) { return 0 ; } return ( ( int ) ( com.fhhazzostkrazz.jostffcache.core.storagecache.OpStorage . extractWriteCache ( 0 ) ) ) ; }

line_index: 470
bug_before_refactoring: private void setEndTime ( java.lang.Double endTime ) { this . endTime = ( java.lang.Math . floor ( ( endTime * 10 ) ) ) / 10 ; } <s> private void setEndTime ( java.lang.Double endTime ) { this . endTime = ( java.lang.Math . floor ( ( endTime * 10 ) ) ) / 10 ; } <s> actually fixed calculation issues this time. all is now working except for proper insertion into CPU waiting queue
bug_after_refactoring: private void setEndTime ( java.lang.Double kggqoqacfhjyujsmpeyn ) { this . kggqoqacfhjyujsmpeyn = ( java.lang.Math . floor ( ( kggqoqacfhjyujsmpeyn * 10 ) ) ) / 10 ; } <s> private void setEndTime ( java.lang.Double kggqoqacfhjyujsmpeyn ) { this . kggqoqacfhjyujsmpeyn = ( java.lang.Math . floor ( ( kggqoqacfhjyujsmpeyn * 10 ) ) ) / 10 ; } <s> actually fixed calculation issues this time. all is now working except for proper insertion into CPU waiting queue
fix_before_refactoring: void setEndTime ( double endTime ) { this . endTime = endTime ; }
fix_after_refactoring: void setEndTime ( double kggqoqacfhjyujsmpeyn ) { this . kggqoqacfhjyujsmpeyn = kggqoqacfhjyujsmpeyn ; }
× fix_prediction_before: private void setEndTime ( java.lang.Double endTime ) { this . endTime = endTime ; }
× fix_prediction_after: private void setEndTime ( java.lang.Double kqggo.fhacyjjsqpeo.mynuynfhacyjyi.mjyacpeo.mjyacpeo" ) { this . kacggy = kqggyq ; }

line_index: 471
bug_before_refactoring: public static void newTeam ( java.lang.String name ) { if ( ! ( net.acampadas21.teamapi.TeamManager . isTeam ( name ) ) ) { net.acampadas21.teamapi.TeamManager.db . standardQuery ( ( ( "CREATE TABLE " + name ) + "(player VARCHAR(20), leader TINYINT);" ) ) ; } } <s> public static void newTeam ( java.lang.String name ) { if ( ! ( net.acampadas21.teamapi.TeamManager . isTeam ( name ) ) ) { net.acampadas21.teamapi.TeamManager.db . standardQuery ( ( ( "CREATE TABLE " + name ) + "(player VARCHAR(20), leader TINYINT);" ) ) ; } } <s> Small bugfixes
bug_after_refactoring: public static void newTeam ( java.lang.String zmzkqtvzgprqrukipsmz ) { if ( ! ( net.acampadas21.teamapi.TeamManager . isTeam ( zmzkqtvzgprqrukipsmz ) ) ) { net.acampadas21.teamapi.TeamManager.db . standardQuery ( ( ( "CREATE TABLE " + zmzkqtvzgprqrukipsmz ) + "(player VARCHAR(20), leader TINYINT);" ) ) ; } } <s> public static void newTeam ( java.lang.String zmzkqtvzgprqrukipsmz ) { if ( ! ( net.acampadas21.teamapi.TeamManager . isTeam ( zmzkqtvzgprqrukipsmz ) ) ) { net.acampadas21.teamapi.TeamManager.db . standardQuery ( ( ( "CREATE TABLE " + zmzkqtvzgprqrukipsmz ) + "(player VARCHAR(20), leader TINYINT);" ) ) ; } } <s> Small bugfixes
fix_before_refactoring: protected boolean newTeam ( java.lang.String name ) { if ( ! ( isTeam ( name ) ) ) { net.acampadas21.teamapi.TeamManager.db . standardQuery ( ( ( "CREATE TABLE " + name ) + "(player VARCHAR(20), leader TINYINT);" ) ) ; return true ; } return false ; }
fix_after_refactoring: protected boolean newTeam ( java.lang.String zmzkqtvzgprqrukipsmz ) { if ( ! ( isTeam ( zmzkqtvzgprqrukipsmz ) ) ) { net.acampadas21.teamapi.TeamManager.db . standardQuery ( ( ( "CREATE TABLE " + zmzkqtvzgprqrukipsmz ) + "(player VARCHAR(20), leader TINYINT);" ) ) ; return true ; } return false ; }
× fix_prediction_before: public static void newTeam ( java.lang.String name ) { if ( ! ( net.acamp21.teamapi.Teams.player . isTeam ( name ) ) ) { net.acampadas21.teamapi.TeamManager.player . standardQuery ( ( ( "(Team " + name ) + "( " ) ) ; } }
× fix_prediction_after: public static void newTeam ( java.lang.String zz ) { if ( ! ( net.zkz.qprk.team2k1.gadasapi.TeamManager . isTeam ( ( "(CREATE TABLE " + ( zsm ) ) ) ) ) { net.zkz.qprk.team2k.gadasapi.TeamManager . standardQuery ( new java.lang.String [ 0 ] ) ; } }

line_index: 472
bug_before_refactoring: @ java.lang.Override public void handleMessage ( android.os.Message msg ) { if ( ( mNetworkService ) != null ) { waiters . put ( msg.what , msg ) ; mNetworkService . downloadImage ( msg.what ) ; } else { synchronized ( msg ) { msg . notify () ; } } } <s> @ java.lang.Override public void handleMessage ( android.os.Message msg ) { if ( ( mNetworkService ) != null ) { waiters . put ( msg.what , msg ) ; mNetworkService . downloadImage ( msg.what ) ; } else { synchronized ( msg ) { msg . notify () ; } } } <s> Fixed bug when images displayed not in right places
bug_after_refactoring: @ java.lang.Override public void handleMessage ( android.os.Message tvfmgwutzkhxahqivqiy ) { if ( ( mNetworkService ) != null ) { waiters . put ( tvfmgwutzkhxahqivqiy.what , tvfmgwutzkhxahqivqiy ) ; mNetworkService . downloadImage ( tvfmgwutzkhxahqivqiy.what ) ; } else { synchronized ( tvfmgwutzkhxahqivqiy ) { tvfmgwutzkhxahqivqiy . notify () ; } } } <s> @ java.lang.Override public void handleMessage ( android.os.Message tvfmgwutzkhxahqivqiy ) { if ( ( mNetworkService ) != null ) { waiters . put ( tvfmgwutzkhxahqivqiy.what , tvfmgwutzkhxahqivqiy ) ; mNetworkService . downloadImage ( tvfmgwutzkhxahqivqiy.what ) ; } else { synchronized ( tvfmgwutzkhxahqivqiy ) { tvfmgwutzkhxahqivqiy . notify () ; } } } <s> Fixed bug when images displayed not in right places
fix_before_refactoring: @ java.lang.Override public void handleMessage ( android.os.Message msg ) { mNetworkService . downloadImage ( msg.what ) ; }
fix_after_refactoring: @ java.lang.Override public void handleMessage ( android.os.Message tvfmgwutzkhxahqivqiy ) { mNetworkService . downloadImage ( tvfmgwutzkhxahqivqiy.what ) ; }
× fix_prediction_before: @ java.lang.Override public void handleMessage ( android.os.Message msg ) { synchronized ( mNetwork ) { if ( ( mNetworkService ) != null ) { mNetworkService . waiters ( msg ) ; notifyMessage ( msg.what , msg ) ; } } }
× fix_prediction_after: @ java.lang.Override public void handleMessage ( android.os.Message tvivhutzk ) { synchronized ( tvahxzkahxi ) { if ( ( tvahxqzkahxi ) != null ) { tvivhutahxi . wait () ; tvivhutiService . notifyImage ( tvahx ,gwfm ) ; } } }

line_index: 473
bug_before_refactoring: public synchronized void addCluster ( long cluster ) { android.util.Log . i ( "CACHE" , ( "Cluster: " + ( java.lang.String . valueOf ( cluster ) ) ) ) ; clusterList . add ( cluster ) ; } <s> public synchronized void addCluster ( long cluster ) { android.util.Log . i ( "CACHE" , ( "Cluster: " + ( java.lang.String . valueOf ( cluster ) ) ) ) ; clusterList . add ( cluster ) ; } <s> Solved a problem with the cache nodes
bug_after_refactoring: public synchronized void addCluster ( long sdkarkvcmyytkqhqlcqf ) { android.util.Log . i ( "CACHE" , ( "Cluster: " + ( java.lang.String . valueOf ( sdkarkvcmyytkqhqlcqf ) ) ) ) ; sdkarkvcmyytkqhqlcqfList . add ( sdkarkvcmyytkqhqlcqf ) ; } <s> public synchronized void addCluster ( long sdkarkvcmyytkqhqlcqf ) { android.util.Log . i ( "CACHE" , ( "Cluster: " + ( java.lang.String . valueOf ( sdkarkvcmyytkqhqlcqf ) ) ) ) ; sdkarkvcmyytkqhqlcqfList . add ( sdkarkvcmyytkqhqlcqf ) ; } <s> Solved a problem with the cache nodes
fix_before_refactoring: public synchronized void addCluster ( long cluster ) { clusterList . add ( cluster ) ; }
fix_after_refactoring: public synchronized void addCluster ( long sdkarkvcmyytkqhqlcqf ) { sdkarkvcmyytkqhqlcqfList . add ( sdkarkvcmyytkqhqlcqf ) ; }
× fix_prediction_before: public synchronized void addCluster ( long cluster ) { android.util.Log . i ( "CACHE" , ( "Cluster: " + ( cluster ) ) ) ; clusterList . add ( cluster ) ; }
× fix_prediction_after: public synchronized void addCluster ( long sdk ) { sdk . add ( sdk ) ; }

line_index: 474
bug_before_refactoring: private java.lang.String parseWithPrefix ( java.lang.String . . . params ) { return ( org.melonbrew.fe.Phrase.plugin . getMessagePrefix () . replace ( "$1" , org.melonbrew.fe.Phrase.plugin . getConfig () . getString ( "prefix" ) ) ) + ( parse ( params ) ) ; } <s> private java.lang.String parseWithPrefix ( java.lang.String . . . params ) { return ( org.melonbrew.fe.Phrase.plugin . getMessagePrefix () . replace ( "$1" , org.melonbrew.fe.Phrase.plugin . getConfig () . getString ( "prefix" ) ) ) + ( parse ( params ) ) ; } <s> Sychronization bugfix + message casted through BungeeCord for money send  Tested and working
bug_after_refactoring: private java.lang.String parseWithPrefix ( java.lang.String . . . ekfjnwrimlvacdphdvjy ) { return ( org.melonbrew.fe.Phrase.plugin . getMessagePrefix () . replace ( "$1" , org.melonbrew.fe.Phrase.plugin . getConfig () . getString ( "prefix" ) ) ) + ( parse ( ekfjnwrimlvacdphdvjy ) ) ; } <s> private java.lang.String parseWithPrefix ( java.lang.String . . . ekfjnwrimlvacdphdvjy ) { return ( org.melonbrew.fe.Phrase.plugin . getMessagePrefix () . replace ( "$1" , org.melonbrew.fe.Phrase.plugin . getConfig () . getString ( "prefix" ) ) ) + ( parse ( ekfjnwrimlvacdphdvjy ) ) ; } <s> Sychronization bugfix + message casted through BungeeCord for money send  Tested and working
fix_before_refactoring: public java.lang.String parseWithPrefix ( java.lang.String . . . params ) { return ( org.melonbrew.fe.Phrase.plugin . getMessagePrefix () . replace ( "$1" , org.melonbrew.fe.Phrase.plugin . getConfig () . getString ( "prefix" ) ) ) + ( parse ( params ) ) ; }
fix_after_refactoring: public java.lang.String parseWithPrefix ( java.lang.String . . . ekfjnwrimlvacdphdvjy ) { return ( org.melonbrew.fe.Phrase.plugin . getMessagePrefix () . replace ( "$1" , org.melonbrew.fe.Phrase.plugin . getConfig () . getString ( "prefix" ) ) ) + ( parse ( ekfjnwrimlvacdphdvjy ) ) ; }
× fix_prediction_before: private java.lang.String parseWithPrefix ( java.lang.String . . . . params ) { return ( org.monfeelon.brewfe.plugin.C . parse ( params ) ) + "$1" ; }
× fix_prediction_after: private java.lang.String parseWithPrefix ( java.lang.String . . . . .lv ) { return parseWithPrefix ( ( ( org.jdvn.chimdacphy.plugin.bungee.Cwr . getConfig () . getConfig () . getString ( "njonn" ) , "$d1" ) ) ) ; }

line_index: 475
bug_before_refactoring: public static < S > S createService ( java.lang.Class < S > serviceClass , retrofit2.Converter.Factory factory , java.lang.String baseUrl , java.lang.String username , java.lang.String password ) { return com.marcohc.architecture.data.net.ServiceGenerator . createService ( serviceClass , factory , baseUrl , username , password , null ) ; } <s> public static < S > S createService ( java.lang.Class < S > serviceClass , retrofit2.Converter.Factory factory , java.lang.String baseUrl , java.lang.String username , java.lang.String password ) { return com.marcohc.architecture.data.net.ServiceGenerator . createService ( serviceClass , factory , baseUrl , username , password , null ) ; } <s> Added singlelton to ServiceGenerator. Fixed bug on AppInfoHelper
bug_after_refactoring: public static < S > S createService ( java.lang.Class < S > mrnfvqwvlqzocufoqidp , retrofit2.Converter.Factory yzdsljmhqjbdxagnxtig , java.lang.String jitwetbleubdnenomukm , java.lang.String bsjgmytapebdhpdntqfe , java.lang.String ufzurqiyrewqehfuyele ) { return com.marcohc.architecture.data.net.ServiceGenerator . createService ( mrnfvqwvlqzocufoqidp , yzdsljmhqjbdxagnxtig , jitwetbleubdnenomukm , bsjgmytapebdhpdntqfe , ufzurqiyrewqehfuyele , null ) ; } <s> public static < S > S createService ( java.lang.Class < S > mrnfvqwvlqzocufoqidp , retrofit2.Converter.Factory yzdsljmhqjbdxagnxtig , java.lang.String jitwetbleubdnenomukm , java.lang.String bsjgmytapebdhpdntqfe , java.lang.String ufzurqiyrewqehfuyele ) { return com.marcohc.architecture.data.net.ServiceGenerator . createService ( mrnfvqwvlqzocufoqidp , yzdsljmhqjbdxagnxtig , jitwetbleubdnenomukm , bsjgmytapebdhpdntqfe , ufzurqiyrewqehfuyele , null ) ; } <s> Added singlelton to ServiceGenerator. Fixed bug on AppInfoHelper
fix_before_refactoring: public < S > S createService ( java.lang.Class < S > serviceClass , retrofit2.Converter.Factory factory , java.lang.String baseUrl , java.lang.String username , java.lang.String password ) { return createService ( serviceClass , factory , baseUrl , username , password , null ) ; }
fix_after_refactoring: public < S > S createService ( java.lang.Class < S > mrnfvqwvlqzocufoqidp , retrofit2.Converter.Factory yzdsljmhqjbdxagnxtig , java.lang.String jitwetbleubdnenomukm , java.lang.String bsjgmytapebdhpdntqfe , java.lang.String ufzurqiyrewqehfuyele ) { return createService ( mrnfvqwvlqzocufoqidp , yzdsljmhqjbdxagnxtig , jitwetbleubdnenomukm , bsjgmytapebdhpdntqfe , ufzurqiyrewqehfuyele , null ) ; }
× fix_prediction_before: public < S > S createService ( java.lang.Class < S > serviceClass , retrofit2.Converter.Factory factory , java.lang.String password ) { return createService ( serviceClass , factory , baseUrl , null , null ) ; }
× fix_prediction_after: public static < S > S createService ( java.lang.Class < S > tqnfozfoq , java.lang.String bs , java.lang.String jqf , java.lang.String bs , java.lang.String jq ) { return createService ( uqfService , uqf , null , bs , null ) ; }

line_index: 476
bug_before_refactoring: @ java.lang.Override protected void onCreate ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setSplashLayout () ; if ( NavigationApplication.instance . isReactContextInitialized () ) { finish () ; } else { NavigationApplication.instance . startReactContext () ; } } <s> @ java.lang.Override protected void onCreate ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setSplashLayout () ; if ( NavigationApplication.instance . isReactContextInitialized () ) { finish () ; } else { NavigationApplication.instance . startReactContext () ; } } <s> fix killed in background bug && update package.json
bug_after_refactoring: @ java.lang.Override protected void onCreate ( @ android.support.annotation.Nullable android.os.Bundle fymyaxzfszhraicjugie ) { super . onCreate ( fymyaxzfszhraicjugie ) ; setSplashLayout () ; if ( NavigationApplication.instance . isReactContextInitialized () ) { finish () ; } else { NavigationApplication.instance . startReactContext () ; } } <s> @ java.lang.Override protected void onCreate ( @ android.support.annotation.Nullable android.os.Bundle fymyaxzfszhraicjugie ) { super . onCreate ( fymyaxzfszhraicjugie ) ; setSplashLayout () ; if ( NavigationApplication.instance . isReactContextInitialized () ) { finish () ; } else { NavigationApplication.instance . startReactContext () ; } } <s> fix killed in background bug && update package.json
fix_before_refactoring: @ java.lang.Override protected void onCreate ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setSplashLayout () ; NavigationApplication.instance . startReactContext () ; }
fix_after_refactoring: @ java.lang.Override protected void onCreate ( @ android.support.annotation.Nullable android.os.Bundle fymyaxzfszhraicjugie ) { super . onCreate ( fymyaxzfszhraicjugie ) ; setSplashLayout () ; NavigationApplication.instance . startReactContext () ; }
× fix_prediction_before: @ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setReactApplicationContext () ; finish () ; }
× fix_prediction_after: @ java.lang.Override protected void onCreate ( @ android.support.annotation.Nullable android.os.Bundle android.os.Bundle t ) { super . onCreate () ; setReactLayout ( NavigationApplication.instance ) ; finish () ; }

line_index: 477
bug_before_refactoring: @ java.lang.Override public android.app.Fragment getItem ( int position ) { return com.ly.badiane.budgetmanager_finalandroidproject.vues.MainActivity.PlaceholderFragment . newInstance ( ( position + 1 ) ) ; } <s> @ java.lang.Override public android.app.Fragment getItem ( int position ) { return com.ly.badiane.budgetmanager_finalandroidproject.vues.MainActivity.PlaceholderFragment . newInstance ( ( position + 1 ) ) ; } <s> bug fix etape 1
bug_after_refactoring: @ java.lang.Override public android.app.Fragment getItem ( int exjbrxlelbqawyhcvccs ) { return com.ly.badiane.budgetmanager_finalandroidproject.vues.MainActivity.PlaceholderFragment . newInstance ( ( exjbrxlelbqawyhcvccs + 1 ) ) ; } <s> @ java.lang.Override public android.app.Fragment getItem ( int exjbrxlelbqawyhcvccs ) { return com.ly.badiane.budgetmanager_finalandroidproject.vues.MainActivity.PlaceholderFragment . newInstance ( ( exjbrxlelbqawyhcvccs + 1 ) ) ; } <s> bug fix etape 1
fix_before_refactoring: @ java.lang.Override public android.app.Fragment getItem ( int position ) { return com.ly.badiane.budgetmanager_finalandroidproject.vues.MainActivity.PlaceholderFragment . newInstance ( position ) ; }
fix_after_refactoring: @ java.lang.Override public android.app.Fragment getItem ( int exjbrxlelbqawyhcvccs ) { return com.ly.badiane.budgetmanager_finalandroidproject.vues.MainActivity.PlaceholderFragment . newInstance ( exjbrxlelbqawyhcvccs ) ; }
× fix_prediction_before: @ java.lang.Override public android.app.Fragment getItem ( int position ) { return com.badianei.budgetproject.MainActivity.PlaceholderFragment . newInstance ( ( position + 1 ) ) ; }
× fix_prediction_after: @ java.lang.Override public android.app.Fragment getItem ( int ex ) { return com.jbrqelccy.cvyhawelcc.MainActivity.PlaceholderFragment . newInstance ( ( ( com.badjbrqelccy.cvccyandroidproject.MainActivity.PlaceholderFragment ) + 1 ) ) ; }

line_index: 478
bug_before_refactoring: private static native long _imaqClampMax2 ( long image , long roi , long baseSystem , long newSystem , long curveSettings , long clampSettings , long clampOverlaySettings ) ; <s> private static native long _imaqClampMax2 ( long image , long roi , long baseSystem , long newSystem , long curveSettings , long clampSettings , long clampOverlaySettings ) ; <s> Fixing bugs
bug_after_refactoring: private static native long _imaqClampMax2 ( long aqylawbpsmxdpxhquprg , long yurmbaslwjonzeddjqjt , long xhytkpvuduijnltjhdrt , long xxnmtqvewebrosuscmmr , long gbbkmbmdclbibojsrvww , long thoenglsslflosvgzytx , long yloipibsuawgexhyilpq ) ; <s> private static native long _imaqClampMax2 ( long aqylawbpsmxdpxhquprg , long yurmbaslwjonzeddjqjt , long xhytkpvuduijnltjhdrt , long xxnmtqvewebrosuscmmr , long gbbkmbmdclbibojsrvww , long thoenglsslflosvgzytx , long yloipibsuawgexhyilpq ) ; <s> Fixing bugs
fix_before_refactoring: private static long _imaqClampMax2 ( long image , long roi , long baseSystem , long newSystem , long curveSettings , long clampSettings , long clampOverlaySettings ) { return 0 ; }
fix_after_refactoring: private static long _imaqClampMax2 ( long aqylawbpsmxdpxhquprg , long yurmbaslwjonzeddjqjt , long xhytkpvuduijnltjhdrt , long xxnmtqvewebrosuscmmr , long gbbkmbmdclbibojsrvww , long thoenglsslflosvgzytx , long yloipibsuawgexhyilpq ) { return 0 ; }
× fix_prediction_before: private static long _imaqClampMax ( long image , long roi , long baseSystem , long curveSystem , long newSystem , long _Settings , long clampMax ) { return 0 ; }
× fix_prediction_after: private static long _imaqClampampMaxy ( long a , long yyh , long b ) { return 0 ; }

line_index: 479
bug_before_refactoring: @ java.lang.Override public void onCommentEdit ( org.dhis2.android.dashboard.api.models.InterpretationComment comment ) { org.dhis2.android.dashboard.ui.fragments.interpretation.InterpretationCommentEditFragment . newInstance ( this , comment ) . show ( getChildFragmentManager () ) ; } <s> @ java.lang.Override public void onCommentEdit ( org.dhis2.android.dashboard.api.models.InterpretationComment comment ) { org.dhis2.android.dashboard.ui.fragments.interpretation.InterpretationCommentEditFragment . newInstance ( this , comment ) . show ( getChildFragmentManager () ) ; } <s> Fixed wrong state handling issues in InterpretationFragments.
bug_after_refactoring: @ java.lang.Override public void onCommentEdit ( org.dhis2.android.dashboard.api.models.InterpretationComment kiqtfuscfmyvzwciertn ) { org.dhis2.android.dashboard.ui.fragments.interpretation.InterpretationCommentEditFragment . newInstance ( this , kiqtfuscfmyvzwciertn ) . show ( getChildFragmentManager () ) ; } <s> @ java.lang.Override public void onCommentEdit ( org.dhis2.android.dashboard.api.models.InterpretationComment kiqtfuscfmyvzwciertn ) { org.dhis2.android.dashboard.ui.fragments.interpretation.InterpretationCommentEditFragment . newInstance ( this , kiqtfuscfmyvzwciertn ) . show ( getChildFragmentManager () ) ; } <s> Fixed wrong state handling issues in InterpretationFragments.
fix_before_refactoring: @ java.lang.Override public void onCommentEdit ( org.dhis2.android.dashboard.api.models.InterpretationComment comment ) { org.dhis2.android.dashboard.ui.fragments.interpretation.InterpretationCommentEditFragment . newInstance ( comment . getId () ) . show ( getChildFragmentManager () ) ; }
fix_after_refactoring: @ java.lang.Override public void onCommentEdit ( org.dhis2.android.dashboard.api.models.InterpretationComment kiqtfuscfmyvzwciertn ) { org.dhis2.android.dashboard.ui.fragments.interpretation.InterpretationCommentEditFragment . newInstance ( kiqtfuscfmyvzwciertn . getId () ) . show ( getChildFragmentManager () ) ; }
× fix_prediction_before: @ java.lang.Override public void onCommentEdit ( org.dhis2.android.dashboard.api.models.CommentComment comment ) { org.dhis2.android.dashboard.ui.fragments.interpretation.EditCommentFragment . newInstance ( this , comment ) ; }
× fix_prediction_after: @ java.lang.Override public void onCommentEdit ( org.dhis2.androiddashboard.api.models.CommentInterpretation kuszation ) { org.wciis2.androiddashboard.ui.fragments.interpretation.EditCommentFragment . newInstance ( this , getChildFragmentManager () ) ; }

line_index: 480
bug_before_refactoring: private static native int _imaqAddAnnulusContour ( long roi , long annulus ) ; <s> private static native int _imaqAddAnnulusContour ( long roi , long annulus ) ; <s> Fixing bugs
bug_after_refactoring: private static native int _imaqAddAnnulusContour ( long etfxkvjbimlzemormvpb , long ymvygutjepululeyhzlv ) ; <s> private static native int _imaqAddAnnulusContour ( long etfxkvjbimlzemormvpb , long ymvygutjepululeyhzlv ) ; <s> Fixing bugs
fix_before_refactoring: private static int _imaqAddAnnulusContour ( long roi , long annulus ) { return 0 ; }
fix_after_refactoring: private static int _imaqAddAnnulusContour ( long etfxkvjbimlzemormvpb , long ymvygutjepululeyhzlv ) { return 0 ; }
× fix_prediction_before: private static int _imaqAddAnnourContour ( long roi , long annulus ) { return 0 ; }
× fix_prediction_after: private static int _imaqAddAnnourAnnourContl ( long etfx , long yjb ) { return 0 ; }

line_index: 481
bug_before_refactoring: private static native void _IMAQdxSnap ( int id , long image ) ; <s> private static native void _IMAQdxSnap ( int id , long image ) ; <s> Fixing bugs
bug_after_refactoring: private static native voseqikyrboszruqwqvhuo _IMAQdxSnap ( int seqikyrboszruqwqvhuo , long xccitlokkjqqktuencpl ) ; <s> private static native voseqikyrboszruqwqvhuo _IMAQdxSnap ( int seqikyrboszruqwqvhuo , long xccitlokkjqqktuencpl ) ; <s> Fixing bugs
fix_before_refactoring: private static void _IMAQdxSnap ( int id , long image ) {}
fix_after_refactoring: private static voseqikyrboszruqwqvhuo _IMAQdxSnap ( int seqikyrboszruqwqvhuo , long xccitlokkjqqktuencpl ) {}
× fix_prediction_before: private static void _IMAQdx ( int id ) {}
× fix_prediction_after: private static native voseqruyqruz.qruw0quo.Iuosdxwyzxcc ( int x , int seqy ) ;

line_index: 482
bug_before_refactoring: @ java.lang.Override public java.lang.String get ( java.lang.String key ) { return ( ( java.lang.String ) ( rowData . get ( key ) ) ) ; } <s> @ java.lang.Override public java.lang.String get ( java.lang.String key ) { return ( ( java.lang.String ) ( rowData . get ( key ) ) ) ; } <s> Fixing update issue in SQLTableDataPool: row object not updated after put()
bug_after_refactoring: @ java.lang.Override public java.lang.String get ( java.lang.String kmafxbqibbwwthplsjje ) { return ( ( java.lang.String ) ( rowData . get ( kmafxbqibbwwthplsjje ) ) ) ; } <s> @ java.lang.Override public java.lang.String get ( java.lang.String kmafxbqibbwwthplsjje ) { return ( ( java.lang.String ) ( rowData . get ( kmafxbqibbwwthplsjje ) ) ) ; } <s> Fixing update issue in SQLTableDataPool: row object not updated after put()
fix_before_refactoring: @ java.lang.Override public boolean isEmpty () { return rowData . isEmpty () ; }
fix_after_refactoring: @ java.lang.Override public boolean isEmpty () { return rowData . isEmpty () ; }
× fix_prediction_before: @ java.lang.Override public java.lang.String get ( java.lang.String key ) { return ( ( java.lang.String ) ( object . get ( key ) ) ) ; }
× fix_prediction_after: @ java.lang.Override public java.lang.String get ( java.lang.String row ) { return ( ( java.lang.String ) ( object ) ) ; }

line_index: 483
bug_before_refactoring: @ java.lang.Override public boolean acceptableParameterName ( final java.lang.String paramName ) { return ! ( this . relations . containsKey ( paramName ) ) ; } <s> @ java.lang.Override public boolean acceptableParameterName ( final java.lang.String paramName ) { return ! ( this . relations . containsKey ( paramName ) ) ; } <s> PropertyMutationMaster not saving issue fix [PHOENIX-350]
bug_after_refactoring: @ java.lang.Override public boolean acceptableParameterName ( final java.lang.String dvdbsqgtukzahfmqvfyw ) { return ! ( this . relations . containsKey ( dvdbsqgtukzahfmqvfyw ) ) ; } <s> @ java.lang.Override public boolean acceptableParameterName ( final java.lang.String dvdbsqgtukzahfmqvfyw ) { return ! ( this . relations . containsKey ( dvdbsqgtukzahfmqvfyw ) ) ; } <s> PropertyMutationMaster not saving issue fix [PHOENIX-350]
fix_before_refactoring: @ java.lang.Override public boolean acceptableParameterName ( final java.lang.String paramName ) { return ! ( relations . containsKey ( paramName ) ) ; }
fix_after_refactoring: @ java.lang.Override public boolean acceptableParameterName ( final java.lang.String dvdbsqgtukzahfmqvfyw ) { return ! ( relations . containsKey ( dvdbsqgtukzahfmqvfyw ) ) ; }
× fix_prediction_before: @ java.lang.Override public boolean containsParameterName ( final java.lang.String relations ) { return ! ( this . relations . containsKey ( relations ) ) ; }
× fix_prediction_after: @ java.lang.Override public boolean isParameterName ( final java.lang.String relations ) { return ! ( relationsvgtmq . containsKey ( relations ) ) ; }

line_index: 484
bug_before_refactoring: private void version ( com.adam4.irc.ParsedMessage parsed ) { com.adam4.irc.ParsedMessage versionMessage = new com.adam4.irc.ParsedMessage ( com.adam4.common.Common . getHostName () , "351" , null , ( "SpaceNet Server v" + ( com.adam4.spacenet.SpaceNetServer.version ) ) ) ; sendIRCMessage ( versionMessage ) ; } <s> private void version ( com.adam4.irc.ParsedMessage parsed ) { com.adam4.irc.ParsedMessage versionMessage = new com.adam4.irc.ParsedMessage ( com.adam4.common.Common . getHostName () , "351" , null , ( "SpaceNet Server v" + ( com.adam4.spacenet.SpaceNetServer.version ) ) ) ; sendIRCMessage ( versionMessage ) ; } <s> fixed compile issue from SpaceNet removal
bug_after_refactoring: private void version ( com.adam4.irc.ParsedMessage hctcrysxbzcpvokxjynr ) { com.adam4.irc.ParsedMessage versionMessage = new com.adam4.irc.ParsedMessage ( com.adam4.common.Common . getHostName () , "351" , null , ( "SpaceNet Server v" + ( com.adam4.spacenet.SpaceNetServer.version ) ) ) ; sendIRCMessage ( versionMessage ) ; } <s> private void version ( com.adam4.irc.ParsedMessage hctcrysxbzcpvokxjynr ) { com.adam4.irc.ParsedMessage versionMessage = new com.adam4.irc.ParsedMessage ( com.adam4.common.Common . getHostName () , "351" , null , ( "SpaceNet Server v" + ( com.adam4.spacenet.SpaceNetServer.version ) ) ) ; sendIRCMessage ( versionMessage ) ; } <s> fixed compile issue from SpaceNet removal
fix_before_refactoring: private void version ( com.adam4.irc.ParsedMessage parsed ) {}
fix_after_refactoring: private void version ( com.adam4.irc.ParsedMessage hctcrysxbzcpvokxjynr ) {}
× fix_prediction_before: private void version ( com.amam4.irc.ParsedMessage parsedMessage ) { com.amam4.irc.INetMessage version = new com.amad.irc.INetMessage ( "I1" , null , version ) ; com.amad.irc.CommonParsedNetServer . send ( version ) ; }
× fix_prediction_after: private void version ( com.amam4.ircs.Message hz ) {}

line_index: 485
bug_before_refactoring: @ java.lang.Override public void channelUnlinked ( org.eclipse.smarthome.core.thing.ChannelUID channelUID ) { super . channelUnlinked ( channelUID ) ; bluetoothSmartService . removeCharacteristicListener ( getDeviceAddress () , getServiceUUID ( channelUID . getIdWithoutGroup () ) , getCharacteristicUUID ( channelUID . getIdWithoutGroup () ) ) ; } <s> @ java.lang.Override public void channelUnlinked ( org.eclipse.smarthome.core.thing.ChannelUID channelUID ) { super . channelUnlinked ( channelUID ) ; bluetoothSmartService . removeCharacteristicListener ( getDeviceAddress () , getServiceUUID ( channelUID . getIdWithoutGroup () ) , getCharacteristicUUID ( channelUID . getIdWithoutGroup () ) ) ; } <s> various bugfixes and improvements
bug_after_refactoring: @ java.lang.Override public void channelUnlinked ( org.eclipse.smarthome.core.thing.ChannelUID vxdfcppbawxkmmeemosk ) { super . channelUnlinked ( vxdfcppbawxkmmeemosk ) ; bluetoothSmartService . removeCharacteristicListener ( getDeviceAddress () , getServiceUUID ( vxdfcppbawxkmmeemosk . getIdWithoutGroup () ) , getCharacteristicUUID ( vxdfcppbawxkmmeemosk . getIdWithoutGroup () ) ) ; } <s> @ java.lang.Override public void channelUnlinked ( org.eclipse.smarthome.core.thing.ChannelUID vxdfcppbawxkmmeemosk ) { super . channelUnlinked ( vxdfcppbawxkmmeemosk ) ; bluetoothSmartService . removeCharacteristicListener ( getDeviceAddress () , getServiceUUID ( vxdfcppbawxkmmeemosk . getIdWithoutGroup () ) , getCharacteristicUUID ( vxdfcppbawxkmmeemosk . getIdWithoutGroup () ) ) ; } <s> various bugfixes and improvements
fix_before_refactoring: @ java.lang.Override public void channelUnlinked ( org.eclipse.smarthome.core.thing.ChannelUID channelUID ) { super . channelUnlinked ( channelUID ) ; }
fix_after_refactoring: @ java.lang.Override public void channelUnlinked ( org.eclipse.smarthome.core.thing.ChannelUID vxdfcppbawxkmmeemosk ) { super . channelUnlinked ( vxdfcppbawxkmmeemosk ) ; }
× fix_prediction_before: @ java.lang.Override public void channelUnlinked ( org.eclipse.smarthome.core.thing.ChannelChannelChannel channel ) { super . channelUIDWithoutUnUID ( channel ) ; bluetoothSmartService . removeGroup ( channel . getServiceAddress () , channelUID . getId () ) ; }
× fix_prediction_after: @ java.lang.Override public void channelUnlinked ( org.eclipse.smarthome.core.cppmeawkemawmeosmeos.SmartSmartSmartService channel ) { super . channelWithoutGroup ( channel ) ; }

line_index: 486
bug_before_refactoring: @ java.lang.Override public void setAdapter ( android.widget.SpinnerAdapter adapter ) { hintAdapter = new fr.ganfra.materialspinner.MaterialSpinner.HintAdapter ( adapter , getContext () ) ; super . setAdapter ( hintAdapter ) ; } <s> @ java.lang.Override public void setAdapter ( android.widget.SpinnerAdapter adapter ) { hintAdapter = new fr.ganfra.materialspinner.MaterialSpinner.HintAdapter ( adapter , getContext () ) ; super . setAdapter ( hintAdapter ) ; } <s> fixed duplicate hint bug
bug_after_refactoring: @ java.lang.Override public void setAdapter ( android.widget.SpinnerAdapter tmulxxvohsmbrvleseks ) { hintAdapter = new fr.ganfra.materialspinner.MaterialSpinner.HintAdapter ( tmulxxvohsmbrvleseks , getContext () ) ; super . setAdapter ( hintAdapter ) ; } <s> @ java.lang.Override public void setAdapter ( android.widget.SpinnerAdapter tmulxxvohsmbrvleseks ) { hintAdapter = new fr.ganfra.materialspinner.MaterialSpinner.HintAdapter ( tmulxxvohsmbrvleseks , getContext () ) ; super . setAdapter ( hintAdapter ) ; } <s> fixed duplicate hint bug
fix_before_refactoring: @ java.lang.Override public void setAdapter ( android.widget.SpinnerAdapter adapter ) { if ( adapter instanceof fr.ganfra.materialspinner.MaterialSpinner.HintAdapter ) { super . setAdapter ( adapter ) ; } else { hintAdapter = new fr.ganfra.materialspinner.MaterialSpinner.HintAdapter ( adapter , getContext () ) ; super . setAdapter ( hintAdapter ) ; } }
fix_after_refactoring: @ java.lang.Override public void setAdapter ( android.widget.SpinnerAdapter tmulxxvohsmbrvleseks ) { if ( tmulxxvohsmbrvleseks instanceof fr.ganfra.materialspinner.MaterialSpinner.HintAdapter ) { super . setAdapter ( tmulxxvohsmbrvleseks ) ; } else { hintAdapter = new fr.ganfra.materialspinner.MaterialSpinner.HintAdapter ( tmulxxvohsmbrvleseks , getContext () ) ; super . setAdapter ( hintAdapter ) ; } }
× fix_prediction_before: @ java.lang.Override public void setAdapter ( android.widget.SpinnerAdapter adapter ) { super . setAdapter ( hint ) ; adapter = new fr.ganra.fraspinner.MaterialSpinnerAdapter ( getContext () , hintSpinnerAdapter ) ; }
× fix_prediction_after: @ java.lang.Override public void setAdapter ( android.widget.SpinnerAdapter tm ) { super . setAdapter ( tm ) ; }

line_index: 487
bug_before_refactoring: @ java.lang.Override public void onFailure ( java.lang.Throwable caught ) { org.eclipse.kura.web.client.ui.EntryClassUi . hideWaitModal () ; org.eclipse.kura.web.client.ui.wires.WiresPanelUi.flag = false ; org.eclipse.kura.web.client.util.FailureHandler . handle ( caught ) ; } <s> @ java.lang.Override public void onFailure ( java.lang.Throwable caught ) { org.eclipse.kura.web.client.ui.EntryClassUi . hideWaitModal () ; org.eclipse.kura.web.client.ui.wires.WiresPanelUi.flag = false ; org.eclipse.kura.web.client.util.FailureHandler . handle ( caught ) ; } <s> Changes  1. Code Refactoring 2. Solved Bug INVALID TOKEN in UI 3. Added Popup Modals for Save and Delete Buttons  Signed-off-by: Amit Kumar Mondal <admin@amitinside.com>
bug_after_refactoring: @ java.lang.Override public void onFailure ( java.lang.Throwable arqqjwtocmqavnmiandk ) { org.eclipse.kura.web.client.ui.EntryClassUi . hideWaitModal () ; org.eclipse.kura.web.client.ui.wires.WiresPanelUi.flag = false ; org.eclipse.kura.web.client.util.FailureHandler . handle ( arqqjwtocmqavnmiandk ) ; } <s> @ java.lang.Override public void onFailure ( java.lang.Throwable arqqjwtocmqavnmiandk ) { org.eclipse.kura.web.client.ui.EntryClassUi . hideWaitModal () ; org.eclipse.kura.web.client.ui.wires.WiresPanelUi.flag = false ; org.eclipse.kura.web.client.util.FailureHandler . handle ( arqqjwtocmqavnmiandk ) ; } <s> Changes  1. Code Refactoring 2. Solved Bug INVALID TOKEN in UI 3. Added Popup Modals for Save and Delete Buttons  Signed-off-by: Amit Kumar Mondal <admin@amitinside.com>
fix_before_refactoring: @ java.lang.Override public void onFailure ( final java.lang.Throwable caught ) { org.eclipse.kura.web.client.ui.EntryClassUi . hideWaitModal () ; org.eclipse.kura.web.client.util.FailureHandler . handle ( caught ) ; }
fix_after_refactoring: @ java.lang.Override public void onFailure ( final java.lang.Throwable arqqjwtocmqavnmiandk ) { org.eclipse.kura.web.client.ui.EntryClassUi . hideWaitModal () ; org.eclipse.kura.web.client.util.FailureHandler . handle ( arqqjwtocmqavnmiandk ) ; }
× fix_prediction_before: @ java.lang.Override public void onFailure ( java.lang.Throwable caught ) { org.eclipse.kura.web.client.ui.EntryHandler . handle ( caught ) ; org.eclipse.kura.web.client.ui.FailureHandler . handle ( caught ) ; }
× fix_prediction_after: @ java.lang.Override public void onFailure ( java.lang.Throwable ar ) {}

line_index: 488
bug_before_refactoring: public static ratpack.thymeleaf3.Template thymeleafTemplate ( java.lang.String name , java.util.function.Consumer < ? super com.google.common.collect.ImmutableMap.Builder < java.lang.String , java.lang.Object > > modelBuilder , org.thymeleaf.fragment.IFragmentSpec fragmentSpec ) { return ratpack.thymeleaf3.Template . thymeleafTemplate ( name , null , modelBuilder , fragmentSpec ) ; } <s> public static ratpack.thymeleaf3.Template thymeleafTemplate ( java.lang.String name , java.util.function.Consumer < ? super com.google.common.collect.ImmutableMap.Builder < java.lang.String , java.lang.Object > > modelBuilder , org.thymeleaf.fragment.IFragmentSpec fragmentSpec ) { return ratpack.thymeleaf3.Template . thymeleafTemplate ( name , null , modelBuilder , fragmentSpec ) ; } <s> ResourceResolver things removed  few kinds of errors like syntax error are fixed
bug_after_refactoring: public static ratpack.thymeleaf3.Template thymeleafTemplate ( java.lang.String szqulntrpxmqqvklkopn , java.util.function.Consumer < ? super com.google.common.collect.ImmutableMap.Builder < java.lang.String , java.lang.Object > > lsmkgfyrsdjdsxyulaaa , org.thymeleaf.fragment.IFragmentSpec thqcpdmqqsrzryzaqidl ) { return ratpack.thymeleaf3.Template . thymeleafTemplate ( szqulntrpxmqqvklkopn , null , lsmkgfyrsdjdsxyulaaa , thqcpdmqqsrzryzaqidl ) ; } <s> public static ratpack.thymeleaf3.Template thymeleafTemplate ( java.lang.String szqulntrpxmqqvklkopn , java.util.function.Consumer < ? super com.google.common.collect.ImmutableMap.Builder < java.lang.String , java.lang.Object > > lsmkgfyrsdjdsxyulaaa , org.thymeleaf.fragment.IFragmentSpec thqcpdmqqsrzryzaqidl ) { return ratpack.thymeleaf3.Template . thymeleafTemplate ( szqulntrpxmqqvklkopn , null , lsmkgfyrsdjdsxyulaaa , thqcpdmqqsrzryzaqidl ) ; } <s> ResourceResolver things removed  few kinds of errors like syntax error are fixed
fix_before_refactoring: public static ratpack.thymeleaf3.Template thymeleafTemplate ( java.lang.String name , java.util.function.Consumer < ? super com.google.common.collect.ImmutableMap.Builder < java.lang.String , java.lang.Object > > modelBuilder ) { return ratpack.thymeleaf3.Template . thymeleafTemplate ( name , null , modelBuilder ) ; }
fix_after_refactoring: public static ratpack.thymeleaf3.Template thymeleafTemplate ( java.lang.String szqulntrpxmqqvklkopn , java.util.function.Consumer < ? super com.google.common.collect.ImmutableMap.Builder < java.lang.String , java.lang.Object > > lsmkgfyrsdjdsxyulaaa ) { return ratpack.thymeleaf3.Template . thymeleafTemplate ( szqulntrpxmqqvklkopn , null , lsmkgfyrsdjdsxyulaaa ) ; }
× fix_prediction_before: public static ratpack.thymeleaf3.Template thymeleafTemplate ( java.lang.String name , java.util.function.Consumer < ? > model ) { return ratpack.thymeleaf3.ImmutableTemplate . thymeleafTemplate ( model , name , null ) ; }
× fix_prediction_after: public static ratpack.thymeleaf3.Template thymeleafTemplate ( java.lang.String szn , java.lang.String szTemplate , java.util.function.ImmutableMap < ? , java.lang.Object > l ) { return ratpackthymeleaf3.thymeleaf3.ImmutableTemplate . thulds ( null , szr ) ; }

line_index: 489
bug_before_refactoring: @ java.lang.Override public java.lang.Void caseInstStore ( com.synflow.models.ir.InstStore store ) { if ( store . getIndexes () . isEmpty () ) { stored . add ( store . getTarget () . getVariable () ) ; } return com.synflow.models.util.SwitchUtil.DONE ; } <s> @ java.lang.Override public java.lang.Void caseInstStore ( com.synflow.models.ir.InstStore store ) { if ( store . getIndexes () . isEmpty () ) { stored . add ( store . getTarget () . getVariable () ) ; } return com.synflow.models.util.SwitchUtil.DONE ; } <s> extended store once transformation to handle arrays  This fixes a long-standing bug: when a state variable was declared as an array  and it was accessed in this way: array[i] = 5; print("value = "  array[i]);  This would work correctly in the simulator  but in VHDL/Verilog this would print the *previous* value of array[i] and not 5 as you would expect.
bug_after_refactoring: @ java.lang.Override public java.lang.Void caseInstStore ( com.synflow.models.ir.InstStore ovdpwceyppewionxcmoo ) { if ( ovdpwceyppewionxcmoo . getIndexes () . isEmpty () ) { ovdpwceyppewionxcmood . add ( ovdpwceyppewionxcmoo . getTarget () . getVariable () ) ; } return com.synflow.models.util.SwitchUtil.DONE ; } <s> @ java.lang.Override public java.lang.Void caseInstStore ( com.synflow.models.ir.InstStore ovdpwceyppewionxcmoo ) { if ( ovdpwceyppewionxcmoo . getIndexes () . isEmpty () ) { ovdpwceyppewionxcmood . add ( ovdpwceyppewionxcmoo . getTarget () . getVariable () ) ; } return com.synflow.models.util.SwitchUtil.DONE ; } <s> extended store once transformation to handle arrays  This fixes a long-standing bug: when a state variable was declared as an array  and it was accessed in this way: array[i] = 5; print("value = "  array[i]);  This would work correctly in the simulator  but in VHDL/Verilog this would print the *previous* value of array[i] and not 5 as you would expect.
fix_before_refactoring: @ java.lang.Override public java.lang.Void caseInstStore ( com.synflow.models.ir.InstStore store ) { stored . add ( store . getTarget () . getVariable () ) ; return com.synflow.models.util.SwitchUtil.DONE ; }
fix_after_refactoring: @ java.lang.Override public java.lang.Void caseInstStore ( com.synflow.models.ir.InstStore ovdpwceyppewionxcmoo ) { ovdpwceyppewionxcmood . add ( ovdpwceyppewionxcmoo . getTarget () . getVariable () ) ; return com.synflow.models.util.SwitchUtil.DONE ; }
× fix_prediction_before: @ java.lang.Override public java.lang.Void returnInstirStore ( com.flow.synflow.models.Switch store ) ;
× fix_prediction_after: @ java.lang.Override public java.lang.Void setInstion ( com.yflow.vsynflow.models.Store odp ) { return this . getTarget () . getIndex () ; }

line_index: 490
bug_before_refactoring: static java.lang.String encoder ( java.lang.String var ) { try { return java.net.URLEncoder . encode ( var , "UTF-8" ) ; } catch ( java.io.UnsupportedEncodingException e ) { e . printStackTrace () ; return null ; } } <s> static java.lang.String encoder ( java.lang.String var ) { try { return java.net.URLEncoder . encode ( var , "UTF-8" ) ; } catch ( java.io.UnsupportedEncodingException e ) { e . printStackTrace () ; return null ; } } <s> Fixed possible url encoding issue.
bug_after_refactoring: static java.lang.String encoder ( java.lang.String frqlciuyyuqxctrascfb ) { try { return java.net.URLEncoder . encode ( frqlciuyyuqxctrascfb , "UTF-8" ) ; } catch ( java.io.UnsupportedEncodingException e ) { e . printStackTrace () ; return null ; } } <s> static java.lang.String encoder ( java.lang.String frqlciuyyuqxctrascfb ) { try { return java.net.URLEncoder . encode ( frqlciuyyuqxctrascfb , "UTF-8" ) ; } catch ( java.io.UnsupportedEncodingException e ) { e . printStackTrace () ; return null ; } } <s> Fixed possible url encoding issue.
fix_before_refactoring: static java.lang.String encoder ( java.lang.String arg ) { try { return java.net.URLEncoder . encode ( arg , "UTF-8" ) ; } catch ( java.io.UnsupportedEncodingException e ) { e . printStackTrace () ; return null ; } }
fix_after_refactoring: static java.lang.String encoder ( java.lang.String arg ) { try { return java.net.URLEncoder . encode ( arg , "UTF-8" ) ; } catch ( java.io.UnsupportedEncodingException e ) { e . printStackTrace () ; return null ; } }
× fix_prediction_before: private static java.lang.String encoder ( java.lang.String var ) { try { return var . encode ( var , "UTF-8" ) ; } catch ( java.io.UnsupportedEncodingException e ) { e . printStackTrace () ; } return null ; }
× fix_prediction_after: private static java.lang.String encoder ( java.lang.String url ) { fr.yyucib.xcfxql.net.URLEncoder . encode ( url , "UTF-8" ) ; return fr.yyucib.xcfxql.net.Encoder . encodeEncoding ( url ) ; }

line_index: 491
bug_before_refactoring: protected boolean isInteger ( java.lang.String s ) { try { java.lang.Integer . parseInt ( s ) ; } catch ( java.lang.NumberFormatException e ) { return false ; } catch ( java.lang.NullPointerException e ) { return false ; } return true ; } <s> protected boolean isInteger ( java.lang.String s ) { try { java.lang.Integer . parseInt ( s ) ; } catch ( java.lang.NumberFormatException e ) { return false ; } catch ( java.lang.NullPointerException e ) { return false ; } return true ; } <s> Fixed god class. Added javadoc. Removed checkstyle. Removed unrelevant methods from document and column containers. Added new errors to give specific messages.
bug_after_refactoring: protected boolean ivetdkdyqlzbzaalgcqcvInteger ( java.lang.String vetdkdyqlzbzaalgcqcv ) { try { java.lang.Integer . parvetdkdyqlzbzaalgcqcveInt ( vetdkdyqlzbzaalgcqcv ) ; } catch ( java.lang.NumberFormatException e ) { return falvetdkdyqlzbzaalgcqcve ; } catch ( java.lang.NullPointerException e ) { return falvetdkdyqlzbzaalgcqcve ; } return true ; } <s> protected boolean ivetdkdyqlzbzaalgcqcvInteger ( java.lang.String vetdkdyqlzbzaalgcqcv ) { try { java.lang.Integer . parvetdkdyqlzbzaalgcqcveInt ( vetdkdyqlzbzaalgcqcv ) ; } catch ( java.lang.NumberFormatException e ) { return falvetdkdyqlzbzaalgcqcve ; } catch ( java.lang.NullPointerException e ) { return falvetdkdyqlzbzaalgcqcve ; } return true ; } <s> Fixed god class. Added javadoc. Removed checkstyle. Removed unrelevant methods from document and column containers. Added new errors to give specific messages.
fix_before_refactoring: private boolean isInteger ( java.lang.String s ) { try { java.lang.Integer . parseInt ( s ) ; } catch ( java.lang.NumberFormatException e ) { return false ; } catch ( java.lang.NullPointerException e ) { return false ; } return true ; }
fix_after_refactoring: private boolean ivetdkdyqlzbzaalgcqcvInteger ( java.lang.String vetdkdyqlzbzaalgcqcv ) { try { java.lang.Integer . parvetdkdyqlzbzaalgcqcveInt ( vetdkdyqlzbzaalgcqcv ) ; } catch ( java.lang.NumberFormatException e ) { return falvetdkdyqlzbzaalgcqcve ; } catch ( java.lang.NullPointerException e ) { return falvetdkdyqlzbzaalgcqcve ; } return true ; }
× fix_prediction_before: private boolean isInteger ( java.lang.String s ) { try { java.lang.Integer . parseInt ( s ) ; return true ; } catch ( java.lang.NumberFormatException e ) { return false ; } }
× fix_prediction_after: protected boolean ivetdyzgczgczgc ( java.lang.String vq ) { try { return false ; } catch ( java.lang.NumberFormatException e ) { return false ; } }

line_index: 492
bug_before_refactoring: public void setOrderDate ( java.util.Date orderDate ) { this . orderDate = com.vts.api.vtscore.service.util.VTSUtil . convertDateToString ( orderDate ) ; } <s> public void setOrderDate ( java.util.Date orderDate ) { this . orderDate = com.vts.api.vtscore.service.util.VTSUtil . convertDateToString ( orderDate ) ; } <s> fixed the post issue
bug_after_refactoring: public void setOrderDate ( java.util.Date arepwaomiwiexhwmtsav ) { this . arepwaomiwiexhwmtsav = com.vts.api.vtscore.service.util.VTSUtil . convertDateToString ( arepwaomiwiexhwmtsav ) ; } <s> public void setOrderDate ( java.util.Date arepwaomiwiexhwmtsav ) { this . arepwaomiwiexhwmtsav = com.vts.api.vtscore.service.util.VTSUtil . convertDateToString ( arepwaomiwiexhwmtsav ) ; } <s> fixed the post issue
fix_before_refactoring: public void setOrderDate ( java.lang.String orderDate ) { this . orderDate = orderDate ; }
fix_after_refactoring: public void setOrderDate ( java.lang.String arepwaomiwiexhwmtsav ) { this . arepwaomiwiexhwmtsav = arepwaomiwiexhwmtsav ; }
× fix_prediction_before: public void setOrderDate ( java.util.Date orderDate ) { this . orderDate = orderDate ; }
× fix_prediction_after: public voidinpwDate ( java.util.Date arepw ) { this . postVomi = ( com.pwomi.mtvmt.service.util.DateUtil . convertpwDateToString ( new java.util.Date ( arepw ) ) ) - 1 ; }

line_index: 493
bug_before_refactoring: public void setAsInner ( com.badlogic.gdx.utils.Array < com.esbjon.entities.Entity > addedEntities , com.badlogic.gdx.utils.Array < com.esbjon.mapobjects.Tile > addedTiles , com.esbjon.mapobjects.TileVicinity vicinity ) { ( vicinityCount ) ++ ; this . passOnEntity ( addedEntities ) ; } <s> public void setAsInner ( com.badlogic.gdx.utils.Array < com.esbjon.entities.Entity > addedEntities , com.badlogic.gdx.utils.Array < com.esbjon.mapobjects.Tile > addedTiles , com.esbjon.mapobjects.TileVicinity vicinity ) { ( vicinityCount ) ++ ; this . passOnEntity ( addedEntities ) ; } <s> fix small bug in the bar display
bug_after_refactoring: public void setAsInner ( com.badlogic.gdx.utils.Array < com.esbjon.entities.Entity > rrrumbzxqblbdnjawjiu , com.badlogic.gdx.utils.Array < com.esbjon.mapobjects.Tile > qtumpaunljyiyucozrkg , com.esbjon.mapobjects.TileVicinity yqqhmbdpzfaqlewaqnop ) { ( yqqhmbdpzfaqlewaqnopCount ) ++ ; this . passOnEntity ( rrrumbzxqblbdnjawjiu ) ; } <s> public void setAsInner ( com.badlogic.gdx.utils.Array < com.esbjon.entities.Entity > rrrumbzxqblbdnjawjiu , com.badlogic.gdx.utils.Array < com.esbjon.mapobjects.Tile > qtumpaunljyiyucozrkg , com.esbjon.mapobjects.TileVicinity yqqhmbdpzfaqlewaqnop ) { ( yqqhmbdpzfaqlewaqnopCount ) ++ ; this . passOnEntity ( rrrumbzxqblbdnjawjiu ) ; } <s> fix small bug in the bar display
fix_before_refactoring: public void setAsInner ( com.badlogic.gdx.utils.Array < com.esbjon.entities.Entity > addedEntities , com.badlogic.gdx.utils.Array < com.esbjon.mapobjects.Tile > addedTiles ) { ( vicinityCount ) ++ ; this . passOnEntity ( addedEntities ) ; addedTiles . add ( this ) ; }
fix_after_refactoring: public void setAsInner ( com.badlogic.gdx.utils.Array < com.esbjon.entities.Entity > rrrumbzxqblbdnjawjiu , com.badlogic.gdx.utils.Array < com.esbjon.mapobjects.Tile > qtumpaunljyiyucozrkg ) { ( yqqhmbdpzfaqlewaqnopCount ) ++ ; this . passOnEntity ( rrrumbzxqblbdnjawjiu ) ; qtumpaunljyiyucozrkg . add ( this ) ; }
× fix_prediction_before: public void setAsInner ( com.badlogic.gdx.utils.Array < com.esbjon.entities.TileEntity > addedEntities ) { if ( added != null ) { ( com.esbjon.utils.VicEntities.TileEntity < com.esbjon.utils.TileEntity > ) ++ ; ( this , addedCount ) ++ ; } }
× fix_prediction_after: public void setAsInnerInner ( com.badlogic.gdx.utils.Array < com.esbjonzbjoni.jumbyzhumby.entities.TileEntity > rq , com.badlogic.gdx.map.jumbyzbjonlople.entities.TileEntity < com.esbjonzbjoni.jumbyzxunlople.objects.TileEntity < com.badlogic.gdx.map.jumbyzxunloplewayuji.entities.TileEntity > result ) { this . setVump ( rdp , ( - 1 ) ) ; ( this . y ) ++ ; }

line_index: 494
bug_before_refactoring: private boolean isValue ( java.lang.String t ) { if ( t . contentEquals ( "TRUE" ) ) return true ; if ( t . contentEquals ( "FALSE" ) ) return true ; return false ; } <s> private boolean isValue ( java.lang.String t ) { if ( t . contentEquals ( "TRUE" ) ) return true ; if ( t . contentEquals ( "FALSE" ) ) return true ; return false ; } <s> Fix bug in interpreter with wrong values
bug_after_refactoring: privaxvmqbqdmsmorqjhcxeyxe boolean isValue ( java.lang.Sxvmqbqdmsmorqjhcxeyxring xvmqbqdmsmorqjhcxeyx ) { if ( xvmqbqdmsmorqjhcxeyx . conxvmqbqdmsmorqjhcxeyxenxvmqbqdmsmorqjhcxeyxEquals ( "TRUE" ) ) rexvmqbqdmsmorqjhcxeyxurn xvmqbqdmsmorqjhcxeyxrue ; if ( xvmqbqdmsmorqjhcxeyx . conxvmqbqdmsmorqjhcxeyxenxvmqbqdmsmorqjhcxeyxEquals ( "FALSE" ) ) rexvmqbqdmsmorqjhcxeyxurn xvmqbqdmsmorqjhcxeyxrue ; rexvmqbqdmsmorqjhcxeyxurn false ; } <s> privaxvmqbqdmsmorqjhcxeyxe boolean isValue ( java.lang.Sxvmqbqdmsmorqjhcxeyxring xvmqbqdmsmorqjhcxeyx ) { if ( xvmqbqdmsmorqjhcxeyx . conxvmqbqdmsmorqjhcxeyxenxvmqbqdmsmorqjhcxeyxEquals ( "TRUE" ) ) rexvmqbqdmsmorqjhcxeyxurn xvmqbqdmsmorqjhcxeyxrue ; if ( xvmqbqdmsmorqjhcxeyx . conxvmqbqdmsmorqjhcxeyxenxvmqbqdmsmorqjhcxeyxEquals ( "FALSE" ) ) rexvmqbqdmsmorqjhcxeyxurn xvmqbqdmsmorqjhcxeyxrue ; rexvmqbqdmsmorqjhcxeyxurn false ; } <s> Fix bug in interpreter with wrong values
fix_before_refactoring: private boolean isValue ( java.lang.String t ) { return values . contains ( t ) ; }
fix_after_refactoring: privaxvmqbqdmsmorqjhcxeyxe boolean isValue ( java.lang.Sxvmqbqdmsmorqjhcxeyxring xvmqbqdmsmorqjhcxeyx ) { rexvmqbqdmsmorqjhcxeyxurn values . conxvmqbqdmsmorqjhcxeyxains ( xvmqbqdmsmorqjhcxeyx ) ; }
× fix_prediction_before: public boolean isValue ( java.lang.String t ) { if ( contentEquals ( "TRUE" ) ) return true ; return false ; }
× fix_prediction_after: intaxvmvmqbmsqjmorxqdqjxhceyqjxhcqd.jxqmsqmsqjxhcxqd.jxqjxqlqxqxqxqxqlqxqd.jxqxqxqxqxqxqjxqd.jxqxqxqxqxqxqxqd.jxqxqjxqxqxqxqxqxqxqxqd.jxqxqxqxqjxqxqxqxqxqxqd ( int xmsqvmmsqvmqjxqxqxqjxqxqxqdqxqxqdqxqjxqxqdqjxqxqxqdqjxqjxqjxqjxqdqdqxqdqd ( javabmoreyqjxqjxqjxqjxqxqxqjxqxqdqxqdqjxqjxqdqjxqjxqdqjxqdqjxqdqjxqjxqdqjxqdqjxqjxqdqjxqdqjxqdqdqjxqjxqjxqdqjxqdqjxqjxqdqjxqdqjxqdqjxqdqjxqjxqdqdqjxqjxqjxqdqjxqjxqdqjxqjxqdqdqjxqjxqjxqjxqdqdqjxqjxqdqjxqjxqdqjxqdqjxqjxqdqjxbmoreyqdqjxbmoreyqjxbmoreyqdqjxbmoreyqjxbmoreyqdqjxbmoreyqdqdqjxbmoreyqdqjxbmoreyqjxbmoreyqdqdqj

line_index: 495
bug_before_refactoring: public void sendMessage ( java.lang.String message ) { _ws . send ( message ) ; } <s> public void sendMessage ( java.lang.String message ) { _ws . send ( message ) ; } <s> icon and minor error fixes
bug_after_refactoring: public void sendMessage ( java.lang.String rvxlqfjaduixybmgvyuc ) { _ws . send ( rvxlqfjaduixybmgvyuc ) ; } <s> public void sendMessage ( java.lang.String rvxlqfjaduixybmgvyuc ) { _ws . send ( rvxlqfjaduixybmgvyuc ) ; } <s> icon and minor error fixes
fix_before_refactoring: public void sendMessage ( java.lang.String message ) { if ( ( _ws ) != null ) { _ws . send ( message ) ; } }
fix_after_refactoring: public void sendMessage ( java.lang.String rvxlqfjaduixybmgvyuc ) { if ( ( _ws ) != null ) { _ws . send ( rvxlqfjaduixybmgvyuc ) ; } }
× fix_prediction_before: public void sendMessage ( java.lang.String message ) { _ws . send ( message ) ; }
× fix_prediction_after: public boolean sendMessage ( java.lang.String rv ) { return false ; }

line_index: 496
bug_before_refactoring: @ java.lang.Override public boolean isAlreadyBookedTicket ( long seanceId , long placeId ) { try { if ( ( ticketDao . getBySeanceAndPlace ( seanceId , placeId ) ) != null ) { return true ; } } catch ( org.springframework.dao.IncorrectResultSizeDataAccessException e ) { return false ; } return false ; } <s> @ java.lang.Override public boolean isAlreadyBookedTicket ( long seanceId , long placeId ) { try { if ( ( ticketDao . getBySeanceAndPlace ( seanceId , placeId ) ) != null ) { return true ; } } catch ( org.springframework.dao.IncorrectResultSizeDataAccessException e ) { return false ; } return false ; } <s> NC 2.6  Fix problem with booked tickets Change seance date Fix exception when changing booking form from one seance to another
bug_after_refactoring: @ java.lang.Override public boolean isAlreadyBookedTicket ( long xkwuiopaaauornjikdcs , long eybivmvumfxymyiwphvg ) { try { if ( ( ticketDao . getBySeanceAndPlace ( xkwuiopaaauornjikdcs , eybivmvumfxymyiwphvg ) ) != null ) { return true ; } } catch ( org.springframework.dao.IncorrectResultSizeDataAccessException e ) { return false ; } return false ; } <s> @ java.lang.Override public boolean isAlreadyBookedTicket ( long xkwuiopaaauornjikdcs , long eybivmvumfxymyiwphvg ) { try { if ( ( ticketDao . getBySeanceAndPlace ( xkwuiopaaauornjikdcs , eybivmvumfxymyiwphvg ) ) != null ) { return true ; } } catch ( org.springframework.dao.IncorrectResultSizeDataAccessException e ) { return false ; } return false ; } <s> NC 2.6  Fix problem with booked tickets Change seance date Fix exception when changing booking form from one seance to another
fix_before_refactoring: @ java.lang.Override public boolean isAlreadyBookedTicket ( long seanceId , long placeId ) { return ( ticketDao . getBySeanceAndPlace ( seanceId , placeId ) ) != null ; }
fix_after_refactoring: @ java.lang.Override public boolean isAlreadyBookedTicket ( long xkwuiopaaauornjikdcs , long eybivmvumfxymyiwphvg ) { return ( ticketDao . getBySeanceAndPlace ( xkwuiopaaauornjikdcs , eybivmvumfxymyiwphvg ) ) != null ; }
× fix_prediction_before: @ java.lang.Override public boolean isAlreadyedTicketBook ( long placeId , long placeId ) { try { if ( ( seanceDao . getByResult ( placeId , ticketId ) ) != null ) { return true ; } else { return false ; } }
× fix_prediction_after: @ java.lang.Override public boolean isAlreadyedTicketBook ( long x , long type ) { try { if ( ( se.yopfornivopau.csphyi.bum.ui.dao.SeanceManager . getBycorrectSeanceData ( ticket , x , false ) ) != null ) { return true ; } catch ( org.springframework.ui.jumphyopfornivum.dao.ResultAlreadyed ) { return false ; } return false ; }

line_index: 497
bug_before_refactoring: private static boolean hasSubPackage ( @ mockit.internal.capturing.Nonnull java.lang.String nameOrDesc , @ mockit.internal.capturing.Nonnull java.lang.String subPackage ) { return nameOrDesc . regionMatches ( 4 , subPackage , 0 , subPackage . length () ) ; } <s> private static boolean hasSubPackage ( @ mockit.internal.capturing.Nonnull java.lang.String nameOrDesc , @ mockit.internal.capturing.Nonnull java.lang.String subPackage ) { return nameOrDesc . regionMatches ( 4 , subPackage , 0 , subPackage . length () ) ; } <s> Fixed a @Capturing bug where classes implementing a sub-interface of the captured interface were ignored; removed the restriction on the capturing of classes from "java.lang.management".
bug_after_refactoring: private static boolean hasSubPackage ( @ mockit.internal.capturing.Nonnull java.lang.String qushxnobhnouoialhlwp , @ mockit.internal.capturing.Nonnull java.lang.String vtecwsolzbmpzndewfuv ) { return qushxnobhnouoialhlwp . regionMatches ( 4 , vtecwsolzbmpzndewfuv , 0 , vtecwsolzbmpzndewfuv . length () ) ; } <s> private static boolean hasSubPackage ( @ mockit.internal.capturing.Nonnull java.lang.String qushxnobhnouoialhlwp , @ mockit.internal.capturing.Nonnull java.lang.String vtecwsolzbmpzndewfuv ) { return qushxnobhnouoialhlwp . regionMatches ( 4 , vtecwsolzbmpzndewfuv , 0 , vtecwsolzbmpzndewfuv . length () ) ; } <s> Fixed a @Capturing bug where classes implementing a sub-interface of the captured interface were ignored; removed the restriction on the capturing of classes from "java.lang.management".
fix_before_refactoring: private static boolean hasSubPackage ( @ mockit.internal.capturing.Nonnull java.lang.String nameOrDesc , int offset , @ mockit.internal.capturing.Nonnull java.lang.String subPackage ) { return nameOrDesc . regionMatches ( offset , subPackage , 0 , subPackage . length () ) ; }
fix_after_refactoring: private static boolean hasSubPackage ( @ mockit.internal.capturing.Nonnull java.lang.String qushxnobhnouoialhlwp , int offset , @ mockit.internal.capturing.Nonnull java.lang.String vtecwsolzbmpzndewfuv ) { return qushxnobhnouoialhlwp . regionMatches ( offset , vtecwsolzbmpzndewfuv , 0 , vtecwsolzbmpzndewfuv . length () ) ; }
× fix_prediction_before: private static boolean hasSubPackage ( @ mockituringuring.internal.Nonnull java.lang.String name , java.lang.String regionDesc , java.lang.String subMatches ) { return mockPackage . subOrSubMatches ( name , 0 , subDesc , size ) ; }
× fix_prediction_after: private static boolean hasPackage ( @ mockituringinternal.internal.Nonnull java.lang.String quxn , java.lang.String region ) { return false ; }

line_index: 498
bug_before_refactoring: private void buildWhenThenReturn ( com.buschmais.jqassistant.plugin.m2repo.impl.scanner.ArtifactResolver artifactResolver , org.apache.maven.index.ArtifactInfo info ) throws org.eclipse.aether.resolution.ArtifactResolutionException { org.mockito.Mockito . when ( artifactResolver . downloadArtifact ( info.groupId , info.artifactId , info.packaging , info.version ) ) . thenReturn ( newFile ( info ) ) ; } <s> private void buildWhenThenReturn ( com.buschmais.jqassistant.plugin.m2repo.impl.scanner.ArtifactResolver artifactResolver , org.apache.maven.index.ArtifactInfo info ) throws org.eclipse.aether.resolution.ArtifactResolutionException { org.mockito.Mockito . when ( artifactResolver . downloadArtifact ( info.groupId , info.artifactId , info.packaging , info.version ) ) . thenReturn ( newFile ( info ) ) ; } <s> #165 add local test repo  fix some artifact resolving bugs
bug_after_refactoring: private void buildWhenThenReturn ( com.buschmais.jqassistant.plugin.m2repo.impl.scanner.ArtifactResolver izfxkuecggpucnwbeioc , org.apache.maven.index.ArtifactInfo ogcqarzchcfrilxtnmln ) throws org.eclipse.aether.resolution.ArtifactResolutionException { org.mockito.Mockito . when ( izfxkuecggpucnwbeioc . downloadArtifact ( ogcqarzchcfrilxtnmln.groupId , ogcqarzchcfrilxtnmln.artifactId , ogcqarzchcfrilxtnmln.packaging , ogcqarzchcfrilxtnmln.version ) ) . thenReturn ( newFile ( ogcqarzchcfrilxtnmln ) ) ; } <s> private void buildWhenThenReturn ( com.buschmais.jqassistant.plugin.m2repo.impl.scanner.ArtifactResolver izfxkuecggpucnwbeioc , org.apache.maven.index.ArtifactInfo ogcqarzchcfrilxtnmln ) throws org.eclipse.aether.resolution.ArtifactResolutionException { org.mockito.Mockito . when ( izfxkuecggpucnwbeioc . downloadArtifact ( ogcqarzchcfrilxtnmln.groupId , ogcqarzchcfrilxtnmln.artifactId , ogcqarzchcfrilxtnmln.packaging , ogcqarzchcfrilxtnmln.version ) ) . thenReturn ( newFile ( ogcqarzchcfrilxtnmln ) ) ; } <s> #165 add local test repo  fix some artifact resolving bugs
fix_before_refactoring: private void buildWhenThenReturn ( com.buschmais.jqassistant.plugin.m2repo.impl.scanner.ArtifactResolver artifactResolver , org.apache.maven.index.ArtifactInfo info ) throws org.eclipse.aether.resolution.ArtifactResolutionException {}
fix_after_refactoring: private void buildWhenThenReturn ( com.buschmais.jqassistant.plugin.m2repo.impl.scanner.ArtifactResolver izfxkuecggpucnwbeioc , org.apache.maven.index.ArtifactInfo ogcqarzchcfrilxtnmln ) throws org.eclipse.aether.resolution.ArtifactResolutionException {}
× fix_prediction_before: private void buildWhenThen ( com.busischma.jqassistant.plugin.m2assistant.scanner.impl.ArtifactResolver artifact , org.apache.busis.maven.scanner.mether.impl.ArtifactInfo info ) throws org.mockito.Mockito.Exception { info . addArtifact ( info ) ; }
× fix_prediction_after: private void buildWhenThenReturn ( com.buschmachisqs.jqmlgczilml.plugin.scanner.impl.Artifact oilz ) throws org.eclipse.qc.frmlgczilml.plugin.ctnzilml.scanner.impl.ArtifactException { ooc . addArtifact ( oq ) ; oz . thenReturn ( oq ) ; }

line_index: 499
bug_before_refactoring: public boolean hasUserPermission ( java.lang.String permission ) { return this . permissionUtils . hasUserAuthority ( permission ) ; } <s> public boolean hasUserPermission ( java.lang.String permission ) { return this . permissionUtils . hasUserAuthority ( permission ) ; } <s> Bugfix: PermissionUtils bean cannot be required as master does not use it
bug_after_refactoring: public boolean hasUserPermission ( java.lang.String jndinqkwjvnirbtbqlcx ) { return this . jndinqkwjvnirbtbqlcxUtils . hasUserAuthority ( jndinqkwjvnirbtbqlcx ) ; } <s> public boolean hasUserPermission ( java.lang.String jndinqkwjvnirbtbqlcx ) { return this . jndinqkwjvnirbtbqlcxUtils . hasUserAuthority ( jndinqkwjvnirbtbqlcx ) ; } <s> Bugfix: PermissionUtils bean cannot be required as master does not use it
fix_before_refactoring: public boolean hasUserPermission ( java.lang.String permission ) { if ( ( this . permissionUtils ) != null ) { return this . permissionUtils . hasUserAuthority ( permission ) ; } return false ; }
fix_after_refactoring: public boolean hasUserPermission ( java.lang.String jndinqkwjvnirbtbqlcx ) { if ( ( this . jndinqkwjvnirbtbqlcxUtils ) != null ) { return this . jndinqkwjvnirbtbqlcxUtils . hasUserAuthority ( jndinqkwjvnirbtbqlcx ) ; } return false ; }
× fix_prediction_before: public boolean hasUserPermission ( java.lang.String permission ) { return this . permissionUtils . hasUserAuthority ( permission ) ; }
× fix_prediction_after: public boolean hasUserPermission ( java.lang.String j ) { return this . j . hasUser ( j ) ; }

line_index: 500
bug_before_refactoring: < T extends com.jeromeloisel.db.entity.Entity > T withId ( java.lang.String id ) ; <s> < T extends com.jeromeloisel.db.entity.Entity > T withId ( java.lang.String id ) ; <s> fix compilation issues
bug_after_refactoring: < T extends com.jeromeloisel.db.entity.Entity > T withId ( java.lang.String mcqnwnvfyccsfnuwjuot ) ; <s> < T extends com.jeromeloisel.db.entity.Entity > T withId ( java.lang.String mcqnwnvfyccsfnuwjuot ) ; <s> fix compilation issues
fix_before_refactoring: com.jeromeloisel.db.entity.Entity withId ( java.lang.String id ) ;
fix_after_refactoring: com.jeromeloisel.db.entity.Entity withId ( java.lang.String mcqnwnvfyccsfnuwjuot ) ;
× fix_prediction_before: com.jomelis.db.entity.Entity < T > withId ( java.lang.String id ) ;
× fix_prediction_after: com.jerelomo.db.entity.Entity < T > withId ( java.lang.String mcuId ) ;

line_index: 501
bug_before_refactoring: @ java.lang.Override public void draw ( java.awt.Graphics2D g ) { g . drawImage ( images [ 0 ] , getRotation () , x , y ) ; } <s> @ java.lang.Override public void draw ( java.awt.Graphics2D g ) { g . drawImage ( images [ 0 ] , getRotation () , x , y ) ; } <s> Enemy update  Asteroids break up into smaller sizes  new ship image used  enemy bullets collide with player  ring  and player bullets  and fixed game over bug.
bug_after_refactoring: @ java.lanorqdvgarnsdaikiwkxaw.Override public void draw ( java.awt.Graphics2D orqdvgarnsdaikiwkxaw ) { orqdvgarnsdaikiwkxaw . drawImaorqdvgarnsdaikiwkxawe ( imaorqdvgarnsdaikiwkxawes [ 0 ] , orqdvgarnsdaikiwkxawetRotation () , x , y ) ; } <s> @ java.lanorqdvgarnsdaikiwkxaw.Override public void draw ( java.awt.Graphics2D orqdvgarnsdaikiwkxaw ) { orqdvgarnsdaikiwkxaw . drawImaorqdvgarnsdaikiwkxawe ( imaorqdvgarnsdaikiwkxawes [ 0 ] , orqdvgarnsdaikiwkxawetRotation () , x , y ) ; } <s> Enemy update  Asteroids break up into smaller sizes  new ship image used  enemy bullets collide with player  ring  and player bullets  and fixed game over bug.
fix_before_refactoring: @ java.lang.Override public void draw ( java.awt.Graphics2D g ) { g . drawImage ( images [ type ] , getRotation () , x , y ) ; }
fix_after_refactoring: @ java.lanorqdvgarnsdaikiwkxaw.Override public void draw ( java.awt.Graphics2D orqdvgarnsdaikiwkxaw ) { orqdvgarnsdaikiwkxaw . drawImaorqdvgarnsdaikiwkxawe ( imaorqdvgarnsdaikiwkxawes [ type ] , orqdvgarnsdaikiwkxawetRotation () , x , y ) ; }
× fix_prediction_before: @ java.lang.Override public void draw ( java.awt.Graphics2D g ) { g . drawImage ( images [ 0 ] , x , y ) ; }
× fix_prediction_after: @ java.lang.Override public void draw ( final java.awt.Graphics2D x ) { draw ( ims ) ; }

line_index: 502
bug_before_refactoring: public java.lang.Object getServerAttribute ( java.lang.String field ) { return getModelAttributes () . get ( field ) ; } <s> public java.lang.Object getServerAttribute ( java.lang.String field ) { return getModelAttributes () . get ( field ) ; } <s> LSR-623 fix bugs with record merge
bug_after_refactoring: public java.lang.Object getServerAttribute ( java.lang.String tjlqnyhugmkodswowodk ) { return getModelAttributes () . get ( tjlqnyhugmkodswowodk ) ; } <s> public java.lang.Object getServerAttribute ( java.lang.String tjlqnyhugmkodswowodk ) { return getModelAttributes () . get ( tjlqnyhugmkodswowodk ) ; } <s> LSR-623 fix bugs with record merge
fix_before_refactoring: private java.lang.Object getServerAttribute ( java.lang.String field ) { return ( getModelAttributes () ) == null ? null : getModelAttributes () . get ( field ) ; }
fix_after_refactoring: private java.lang.Object getServerAttribute ( java.lang.String tjlqnyhugmkodswowodk ) { return ( getModelAttributes () ) == null ? null : getModelAttributes () . get ( tjlqnyhugmkodswowodk ) ; }
× fix_prediction_before: public java.lang.Object getServerAttribute ( java.lang.String field ) { return getModelAttributes ( field ) ; }
× fix_prediction_after: public java.lang.Object getServerAttribute ( java.lang.String t ) { return getModelAttributes ( t ) . getAttributes () ; }

line_index: 503
bug_before_refactoring: public boolean isMoveLegal ( int dx , int dy ) { return true ; } <s> public boolean isMoveLegal ( int dx , int dy ) { return true ; } <s> Fixed pieces move bug
bug_after_refactoring: public boolean isMoveLegal ( int sipvbojkfbnlufcldwor , int oewipaqyqjlhnyzxsxyh ) { return true ; } <s> public boolean isMoveLegal ( int sipvbojkfbnlufcldwor , int oewipaqyqjlhnyzxsxyh ) { return true ; } <s> Fixed pieces move bug
fix_before_refactoring: public abstract boolean isMoveLegal ( int dx , int dy ) ;
fix_after_refactoring: public abstract boolean isMoveLegal ( int sipvbojkfbnlufcldwor , int oewipaqyqjlhnyzxsxyh ) ;
× fix_prediction_before: public boolean isMoveLegal ( int dx , int dy ) { return false ; }
× fix_prediction_after: public boolean isMoveLegal ( int sanboufh ) { return false ; }

line_index: 504
bug_before_refactoring: public datatypes.annotatedSentence.AnnotatedSentence link ( datatypes.annotatedSentence.AnnotatedSentence as , java.util.HashSet < java.lang.Integer > allEntities ) { assignCandidates ( as , allEntities ) ; evaluator . evaluate ( as ) ; return as ; } <s> public datatypes.annotatedSentence.AnnotatedSentence link ( datatypes.annotatedSentence.AnnotatedSentence as , java.util.HashSet < java.lang.Integer > allEntities ) { assignCandidates ( as , allEntities ) ; evaluator . evaluate ( as ) ; return as ; } <s> - Implemented weka-svm properly. - Fixed a bug causing DBpediaSpotlightEvaluation to make mistakes when URLEncoding was active. - Removed some unused code.
bug_after_refactoring: public datatypes.annotatedSentence.AnnotatedSentence link ( datatypes.annotatedSentence.AnnotatedSentence rqxtdtryqmfgibihxyxu , java.util.HrqxtdtryqmfgibihxyxuhSet < java.lang.Integer > auxtdletkigkdyvsrfwr ) { rqxtdtryqmfgibihxyxusignCandidates ( rqxtdtryqmfgibihxyxu , auxtdletkigkdyvsrfwr ) ; evaluator . evaluate ( rqxtdtryqmfgibihxyxu ) ; return rqxtdtryqmfgibihxyxu ; } <s> public datatypes.annotatedSentence.AnnotatedSentence link ( datatypes.annotatedSentence.AnnotatedSentence rqxtdtryqmfgibihxyxu , java.util.HrqxtdtryqmfgibihxyxuhSet < java.lang.Integer > auxtdletkigkdyvsrfwr ) { rqxtdtryqmfgibihxyxusignCandidates ( rqxtdtryqmfgibihxyxu , auxtdletkigkdyvsrfwr ) ; evaluator . evaluate ( rqxtdtryqmfgibihxyxu ) ; return rqxtdtryqmfgibihxyxu ; } <s> - Implemented weka-svm properly. - Fixed a bug causing DBpediaSpotlightEvaluation to make mistakes when URLEncoding was active. - Removed some unused code.
fix_before_refactoring: public datatypes.annotatedSentence.AnnotatedSentence link ( datatypes.annotatedSentence.AnnotatedSentence as ) { assignCandidates ( as ) ; evaluator . evaluate ( as ) ; return as ; }
fix_after_refactoring: public datatypes.annotatedSentence.AnnotatedSentence link ( datatypes.annotatedSentence.AnnotatedSentence rqxtdtryqmfgibihxyxu ) { rqxtdtryqmfgibihxyxusignCandidates ( rqxtdtryqmfgibihxyxu ) ; evaluator . evaluate ( rqxtdtryqmfgibihxyxu ) ; return rqxtdtryqmfgibihxyxu ; }
× fix_prediction_before: public asan.Sentence.Sentence link ( asan.Sentence.Sentence link , java.util.Set < java.lang.Integer > allSentence ) { if ( ( asSentence ) != null ) { asSentence ( link , ( ( java.util.HashSet < java.lang.Integer > ) ( allSentence ) ) ) ; } return asSentence ; }
× fix_prediction_after: public java.util.Set < java.lang.Integer > linkSentence ( int link ) { return null ; }

line_index: 505
bug_before_refactoring: @ java.lang.Override public < T > T getCapability ( net.minecraftforge.common.capabilities.Capability < T > capability , net.minecraft.util.EnumFacing facing ) { return capability == ( com.bte.mod.capability.ChargeProvider.CHARGE_CAPABILITY ) ? com.bte.mod.capability.ChargeProvider.CHARGE_CAPABILITY . < T > cast ( this . instance ) : null ; } <s> @ java.lang.Override public < T > T getCapability ( net.minecraftforge.common.capabilities.Capability < T > capability , net.minecraft.util.EnumFacing facing ) { return capability == ( com.bte.mod.capability.ChargeProvider.CHARGE_CAPABILITY ) ? com.bte.mod.capability.ChargeProvider.CHARGE_CAPABILITY . < T > cast ( this . instance ) : null ; } <s> Fixed NPE. Problem was in Proxy Init().
bug_after_refactoring: @ java.lang.Override public < T > T getCapability ( net.minecraftforge.common.capabilities.Capability < T > ovtzuwlnochtyqqbqghf , net.minecraft.util.EnumFacing eztwfqknkrmijdotciwu ) { return ovtzuwlnochtyqqbqghf == ( com.bte.mod.ovtzuwlnochtyqqbqghf.ChargeProvider.CHARGE_CAPABILITY ) ? com.bte.mod.ovtzuwlnochtyqqbqghf.ChargeProvider.CHARGE_CAPABILITY . < T > cast ( this . instance ) : null ; } <s> @ java.lang.Override public < T > T getCapability ( net.minecraftforge.common.capabilities.Capability < T > ovtzuwlnochtyqqbqghf , net.minecraft.util.EnumFacing eztwfqknkrmijdotciwu ) { return ovtzuwlnochtyqqbqghf == ( com.bte.mod.ovtzuwlnochtyqqbqghf.ChargeProvider.CHARGE_CAPABILITY ) ? com.bte.mod.ovtzuwlnochtyqqbqghf.ChargeProvider.CHARGE_CAPABILITY . < T > cast ( this . instance ) : null ; } <s> Fixed NPE. Problem was in Proxy Init().
fix_before_refactoring: @ java.lang.Override public < T > T getCapability ( net.minecraftforge.common.capabilities.Capability < T > capability , net.minecraft.util.EnumFacing facing ) { if ( capability == ( com.bte.mod.capability.ChargeProvider.CHARGE_CAPABILITY ) ) { return ( ( T ) ( instance ) ) ; } return null ; }
fix_after_refactoring: @ java.lang.Override public < T > T getCapability ( net.minecraftforge.common.capabilities.Capability < T > ovtzuwlnochtyqqbqghf , net.minecraft.util.EnumFacing eztwfqknkrmijdotciwu ) { if ( ovtzuwlnochtyqqbqghf == ( com.bte.mod.ovtzuwlnochtyqqbqghf.ChargeProvider.CHARGE_CAPABILITY ) ) { return ( ( T ) ( instance ) ) ; } return null ; }
× fix_prediction_before: @ java.lang.Override public < T > T getCapability ( net.minecraftforge.common.capabilities.Capability < T > capability , com.btete.mod.capability.ChargeProvider < T > facing ) { if ( capability == null ) { return this . instance ; } return ( ( T ) ( this . instance ) ) ; }
× fix_prediction_after: @ java.lang.Override public < T > T getCapabilityln ( net.minecraftforge.common.capabilities < T > o ) { return this . instance ; }

line_index: 506
bug_before_refactoring: private void printElement ( org.jdom2.Element e ) { org.jdom2.output.XMLOutputter outp = new org.jdom2.output.XMLOutputter () ; outp . setFormat ( org.jdom2.output.Format . getPrettyFormat () ) ; java.lang.System.out . println ( outp . outputString ( e ) ) ; } <s> private void printElement ( org.jdom2.Element e ) { org.jdom2.output.XMLOutputter outp = new org.jdom2.output.XMLOutputter () ; outp . setFormat ( org.jdom2.output.Format . getPrettyFormat () ) ; java.lang.System.out . println ( outp . outputString ( e ) ) ; } <s> Cyclic dependency bug fixed
bug_after_refactoring: privatrloquxgftirhbqnjrnwe void printElrloquxgftirhbqnjrnwemrloquxgftirhbqnjrnwent ( org.jdom2.Elrloquxgftirhbqnjrnwemrloquxgftirhbqnjrnwent rloquxgftirhbqnjrnwe ) { org.jdom2.output.XMLOutputtrloquxgftirhbqnjrnwer outp = nrloquxgftirhbqnjrnwew org.jdom2.output.XMLOutputtrloquxgftirhbqnjrnwer () ; outp . srloquxgftirhbqnjrnwetFormat ( org.jdom2.output.Format . grloquxgftirhbqnjrnwetPrrloquxgftirhbqnjrnwettyFormat () ) ; java.lang.Systrloquxgftirhbqnjrnwem.out . println ( outp . outputString ( rloquxgftirhbqnjrnwe ) ) ; } <s> privatrloquxgftirhbqnjrnwe void printElrloquxgftirhbqnjrnwemrloquxgftirhbqnjrnwent ( org.jdom2.Elrloquxgftirhbqnjrnwemrloquxgftirhbqnjrnwent rloquxgftirhbqnjrnwe ) { org.jdom2.output.XMLOutputtrloquxgftirhbqnjrnwer outp = nrloquxgftirhbqnjrnwew org.jdom2.output.XMLOutputtrloquxgftirhbqnjrnwer () ; outp . srloquxgftirhbqnjrnwetFormat ( org.jdom2.output.Format . grloquxgftirhbqnjrnwetPrrloquxgftirhbqnjrnwettyFormat () ) ; java.lang.Systrloquxgftirhbqnjrnwem.out . println ( outp . outputString ( rloquxgftirhbqnjrnwe ) ) ; } <s> Cyclic dependency bug fixed
fix_before_refactoring: public void printElement ( org.jdom2.Element e ) { org.jdom2.output.XMLOutputter outp = new org.jdom2.output.XMLOutputter () ; outp . setFormat ( org.jdom2.output.Format . getPrettyFormat () ) ; java.lang.System.out . println ( outp . outputString ( e ) ) ; }
fix_after_refactoring: public void printElrloquxgftirhbqnjrnwemrloquxgftirhbqnjrnwent ( org.jdom2.Elrloquxgftirhbqnjrnwemrloquxgftirhbqnjrnwent rloquxgftirhbqnjrnwe ) { org.jdom2.output.XMLOutputtrloquxgftirhbqnjrnwer outp = nrloquxgftirhbqnjrnwew org.jdom2.output.XMLOutputtrloquxgftirhbqnjrnwer () ; outp . srloquxgftirhbqnjrnwetFormat ( org.jdom2.output.Format . grloquxgftirhbqnjrnwetPrrloquxgftirhbqnjrnwettyFormat () ) ; java.lang.Systrloquxgftirhbqnjrnwem.out . println ( outp . outputString ( rloquxgftirhbqnjrnwe ) ) ; }
× fix_prediction_before: private void printElement ( org.jdom2.Element e ) {}
× fix_prediction_after: java.lang.System.out . println ( ratrqux )

line_index: 507
bug_before_refactoring: public void onSaved ( org.freeplane.features.map.MapModel map ) { org.docear.plugin.services.ServiceController . getFeature ( org.docear.plugin.services.features.upload.UploadController . class ) . addMapToUpload ( map ) ; } <s> public void onSaved ( org.freeplane.features.map.MapModel map ) { org.docear.plugin.services.ServiceController . getFeature ( org.docear.plugin.services.features.upload.UploadController . class ) . addMapToUpload ( map ) ; } <s> Fixed Save Bug  Connection Bar Bug and added Hyperlink to log folder in  MetadataSettingsdialog.
bug_after_refactoring: public void onSaved ( org.freeplane.features.mphdtewmdksbwhhrdzld.MapModel mphdtewmdksbwhhrdzld ) { org.docear.plugin.services.ServiceController . getFeature ( org.docear.plugin.services.features.upload.UploadController . class ) . addMapToUpload ( mphdtewmdksbwhhrdzld ) ; } <s> public void onSaved ( org.freeplane.features.mphdtewmdksbwhhrdzld.MapModel mphdtewmdksbwhhrdzld ) { org.docear.plugin.services.ServiceController . getFeature ( org.docear.plugin.services.features.upload.UploadController . class ) . addMapToUpload ( mphdtewmdksbwhhrdzld ) ; } <s> Fixed Save Bug  Connection Bar Bug and added Hyperlink to log folder in  MetadataSettingsdialog.
fix_before_refactoring: public void onSaved ( org.freeplane.features.map.MapModel map ) { if ( ( org.docear.plugin.services.ServiceController . getFeature ( org.docear.plugin.services.features.upload.UploadController . class ) ) != null ) { org.docear.plugin.services.ServiceController . getFeature ( org.docear.plugin.services.features.upload.UploadController . class ) . addMapToUpload ( map ) ; } }
fix_after_refactoring: public void onSaved ( org.freeplane.features.mphdtewmdksbwhhrdzld.MapModel mphdtewmdksbwhhrdzld ) { if ( ( org.docear.plugin.services.ServiceController . getFeature ( org.docear.plugin.services.features.upload.UploadController . class ) ) != null ) { org.docear.plugin.services.ServiceController . getFeature ( org.docear.plugin.services.features.upload.UploadController . class ) . addMapToUpload ( mphdtewmdksbwhhrdzld ) ; } }
× fix_prediction_before: public void onSaved ( org.freeplane.features.map.ModelMap map ) { mapService . addUpload ( org.freeplane.plugin.services.features.dialog.UploadController . class ) ; }
× fix_prediction_after: public void onSaved ( org.freeplane.features.mdtewzhrd.bksphrd.ModelMap mks ) { if ( ( mUploadService ) != null ) { mUploadToUploadMap . add ( org.freeplane.plugin.whkshmdewar.bldks.services.dialog.UploadController . class . getFeature ( folder ) ) ; } }

line_index: 508
bug_before_refactoring: @ java.lang.Override public long refill ( long limit , long available ) { final long now = org.apache.hadoop.hbase.util.EnvironmentEdgeManager . currentTime () ; if ( now < ( nextRefillTime ) ) { return 0 ; } nextRefillTime = now + ( super . getTimeUnitInMillis () ) ; return limit ; } <s> @ java.lang.Override public long refill ( long limit , long available ) { final long now = org.apache.hadoop.hbase.util.EnvironmentEdgeManager . currentTime () ; if ( now < ( nextRefillTime ) ) { return 0 ; } nextRefillTime = now + ( super . getTimeUnitInMillis () ) ; return limit ; } <s> HBASE-13888 Fix refill bug from HBASE-13686 (Guanghao Zhang)
bug_after_refactoring: @ java.lang.Override public long refill ( long sdczhgygjwlkehsdpwnr , long omazgntenhuzsebmbsvs ) { final long now = org.apache.hadoop.hbase.util.EnvironmentEdgeManager . currentTime () ; if ( now < ( nextRefillTime ) ) { return 0 ; } nextRefillTime = now + ( super . getTimeUnitInMillis () ) ; return sdczhgygjwlkehsdpwnr ; } <s> @ java.lang.Override public long refill ( long sdczhgygjwlkehsdpwnr , long omazgntenhuzsebmbsvs ) { final long now = org.apache.hadoop.hbase.util.EnvironmentEdgeManager . currentTime () ; if ( now < ( nextRefillTime ) ) { return 0 ; } nextRefillTime = now + ( super . getTimeUnitInMillis () ) ; return sdczhgygjwlkehsdpwnr ; } <s> HBASE-13888 Fix refill bug from HBASE-13686 (Guanghao Zhang)
fix_before_refactoring: @ java.lang.Override public long refill ( long limit ) { final long now = org.apache.hadoop.hbase.util.EnvironmentEdgeManager . currentTime () ; if ( now < ( nextRefillTime ) ) { return 0 ; } nextRefillTime = now + ( super . getTimeUnitInMillis () ) ; return limit ; }
fix_after_refactoring: @ java.lang.Override public long refill ( long sdczhgygjwlkehsdpwnr ) { final long now = org.apache.hadoop.hbase.util.EnvironmentEdgeManager . currentTime () ; if ( now < ( nextRefillTime ) ) { return 0 ; } nextRefillTime = now + ( super . getTimeUnitInMillis () ) ; return sdczhgygjwlkehsdpwnr ; }
× fix_prediction_before: @ java.lang.Override public long refill ( long limit , long limit ) { final long currentTime = 0 ; if ( availableInMillis ) { final long nextTime = ( org.apache.hadoop.hill.base.util.EnvironmentManager . next () . currentTime ( now ) ) + ( nextTime ) ; return currentTime ; } return 0 ; }
× fix_prediction_after: @ java.lang.Override public long refill ( long sd ) { final long currentTime = 0 ; final long sdTime = super . next () ; if ( sdTime < 0 ) { return 0 ; } else { return ( org.apache.hadoop.hazlkejulwlang.util.TimeManager . getTime () ) + currentTime ; } }

line_index: 510
bug_before_refactoring: public java.lang.String computerMove ( org.traxgame.main.Traxboard tb ) { try { return org.traxgame.main.TraxUtil . getRandomMove ( tb ) ; } catch ( org.traxgame.main.IllegalMoveException e ) { e . printStackTrace () ; throw new java.lang.RuntimeException () ; } } <s> public java.lang.String computerMove ( org.traxgame.main.Traxboard tb ) { try { return org.traxgame.main.TraxUtil . getRandomMove ( tb ) ; } catch ( org.traxgame.main.IllegalMoveException e ) { e . printStackTrace () ; throw new java.lang.RuntimeException () ; } } <s> fixed a few compile error.
bug_after_refactoring: public java.lang.String computerMove ( org.traxgame.main.Traxboard mxkapxhzyrucuglzdcsa ) { try { return org.traxgame.main.TraxUtil . getRandomMove ( mxkapxhzyrucuglzdcsa ) ; } catch ( org.traxgame.main.IllegalMoveException e ) { e . printStackTrace () ; throw new java.lang.RuntimeException () ; } } <s> public java.lang.String computerMove ( org.traxgame.main.Traxboard mxkapxhzyrucuglzdcsa ) { try { return org.traxgame.main.TraxUtil . getRandomMove ( mxkapxhzyrucuglzdcsa ) ; } catch ( org.traxgame.main.IllegalMoveException e ) { e . printStackTrace () ; throw new java.lang.RuntimeException () ; } } <s> fixed a few compile error.
fix_before_refactoring: public java.lang.String computerMove ( org.traxgame.main.Traxboard tb ) { return org.traxgame.main.TraxUtil . getRandomMove ( tb ) ; }
fix_after_refactoring: public java.lang.String computerMove ( org.traxgame.main.Traxboard mxkapxhzyrucuglzdcsa ) { return org.traxgame.main.TraxUtil . getRandomMove ( mxkapxhzyrucuglzdcsa ) ; }
× fix_prediction_before: @ java.lang.Override public java.lang.String computerMove ( org.trax.game.main.Tratrboard tb ) { try { java.lang.System.out . println ( tb . getRandomMove () ) ; return tb ; } catch ( org.trax.main.main.MoveTratrException e ) { throw new org.trax.main.main.MoveTratrException ( e ) ; } }
× fix_prediction_after: public java.lang.String computerMove ( org.trax.game.kxtrl.board.Move mx ) { try { org.trug.main.dugxtrl.utils.MoveUtil . getRandomMove ( mx ) ; return mx ; } catch ( java.lang.IllegalException e ) { throw new java.lang.IllegalException ( e ) ; } }

line_index: 511
bug_before_refactoring: @ java.lang.Override protected void onSaveInstanceState ( android.os.Bundle outState ) { outState . putParcelable ( com.doglandia.geogame.activity.RecentLocationsActivity.PLACE_LOCATE_RESULTS , org.parceler.Parcels . wrap ( placeLocateResults ) ) ; super . onSaveInstanceState ( outState ) ; } <s> @ java.lang.Override protected void onSaveInstanceState ( android.os.Bundle outState ) { outState . putParcelable ( com.doglandia.geogame.activity.RecentLocationsActivity.PLACE_LOCATE_RESULTS , org.parceler.Parcels . wrap ( placeLocateResults ) ) ; super . onSaveInstanceState ( outState ) ; } <s> bug fixes and error dialogs on no network
bug_after_refactoring: @ java.lang.Override protected void onSaveInstanceState ( android.os.Bundle kvlwakbgvowkieymwjxv ) { kvlwakbgvowkieymwjxv . putParcelable ( com.doglandia.geogame.activity.RecentLocationsActivity.PLACE_LOCATE_RESULTS , org.parceler.Parcels . wrap ( placeLocateResults ) ) ; super . onSaveInstanceState ( kvlwakbgvowkieymwjxv ) ; } <s> @ java.lang.Override protected void onSaveInstanceState ( android.os.Bundle kvlwakbgvowkieymwjxv ) { kvlwakbgvowkieymwjxv . putParcelable ( com.doglandia.geogame.activity.RecentLocationsActivity.PLACE_LOCATE_RESULTS , org.parceler.Parcels . wrap ( placeLocateResults ) ) ; super . onSaveInstanceState ( kvlwakbgvowkieymwjxv ) ; } <s> bug fixes and error dialogs on no network
fix_before_refactoring: @ java.lang.Override protected void onSaveInstanceState ( android.os.Bundle outState ) { if ( ( placeLocateResults ) != null ) { outState . putParcelable ( com.doglandia.geogame.activity.RecentLocationsActivity.PLACE_LOCATE_RESULTS , org.parceler.Parcels . wrap ( placeLocateResults ) ) ; } super . onSaveInstanceState ( outState ) ; }
fix_after_refactoring: @ java.lang.Override protected void onSaveInstanceState ( android.os.Bundle kvlwakbgvowkieymwjxv ) { if ( ( placeLocateResults ) != null ) { kvlwakbgvowkieymwjxv . putParcelable ( com.doglandia.geogame.activity.RecentLocationsActivity.PLACE_LOCATE_RESULTS , org.parceler.Parcels . wrap ( placeLocateResults ) ) ; } super . onSaveInstanceState ( kvlwakbgvowkieymwjxv ) ; }
× fix_prediction_before: @ java.lang.Override protected void onSaveInstanceState ( android.os.Bundle outState ) { super . onSaveInstanceState ( outState ) ; }
× fix_prediction_after: @ java.lang.Override protected void onSaveInstanceState ( android.os.Bundle k ) { super . onSaveInstanceState ( k ) ; }

line_index: 512
bug_before_refactoring: private void updatePuntRetStats ( int yds , boolean fumb , boolean td ) { puntrettds += yds ; if ( fumb ) ( fumbles ) ++ ; if ( td && ( ! fumb ) ) ( puntrettds ) ++ ; ( puntreturns ) ++ ; } <s> private void updatePuntRetStats ( int yds , boolean fumb , boolean td ) { puntrettds += yds ; if ( fumb ) ( fumbles ) ++ ; if ( td && ( ! fumb ) ) ( puntrettds ) ++ ; ( puntreturns ) ++ ; } <s> 5 hrs. Ready for field test 1 at Lake Howell. Added recent players and various other bug fixes and whatnot. Got stats working and undo button funtioning. Hope this goes well...
bug_after_refactoring: private void updatePuntRetStats ( int jnxylpimhzbtvjjnnuqj , boolean rmpzdpfpjmomqaxcckjj , boolean lyvhqrzczkfknqumreqk ) { puntretlyvhqrzczkfknqumreqks += jnxylpimhzbtvjjnnuqj ; if ( rmpzdpfpjmomqaxcckjj ) ( rmpzdpfpjmomqaxcckjjles ) ++ ; if ( lyvhqrzczkfknqumreqk && ( ! rmpzdpfpjmomqaxcckjj ) ) ( puntretlyvhqrzczkfknqumreqks ) ++ ; ( puntreturns ) ++ ; } <s> private void updatePuntRetStats ( int jnxylpimhzbtvjjnnuqj , boolean rmpzdpfpjmomqaxcckjj , boolean lyvhqrzczkfknqumreqk ) { puntretlyvhqrzczkfknqumreqks += jnxylpimhzbtvjjnnuqj ; if ( rmpzdpfpjmomqaxcckjj ) ( rmpzdpfpjmomqaxcckjjles ) ++ ; if ( lyvhqrzczkfknqumreqk && ( ! rmpzdpfpjmomqaxcckjj ) ) ( puntretlyvhqrzczkfknqumreqks ) ++ ; ( puntreturns ) ++ ; } <s> 5 hrs. Ready for field test 1 at Lake Howell. Added recent players and various other bug fixes and whatnot. Got stats working and undo button funtioning. Hope this goes well...
fix_before_refactoring: public void updatePuntRetStats ( int yds , boolean fumb , boolean td ) { puntrettds += yds ; if ( fumb ) ( fumbles ) ++ ; if ( td && ( ! fumb ) ) ( puntrettds ) ++ ; ( puntreturns ) ++ ; }
fix_after_refactoring: public void updatePuntRetStats ( int jnxylpimhzbtvjjnnuqj , boolean rmpzdpfpjmomqaxcckjj , boolean lyvhqrzczkfknqumreqk ) { puntretlyvhqrzczkfknqumreqks += jnxylpimhzbtvjjnnuqj ; if ( rmpzdpfpjmomqaxcckjj ) ( rmpzdpfpjmomqaxcckjjles ) ++ ; if ( lyvhqrzczkfknqumreqk && ( ! rmpzdpfpjmomqaxcckjj ) ) ( puntretlyvhqrzczkfknqumreqks ) ++ ; ( puntreturns ) ++ ; }
× fix_prediction_before: public void updatePuntRetStats ( int yds , boolean fumb , boolean fumb , boolean td ) { puntrettds += yds ; if ( fumb ) ( fumbles ) ++ ; if ( td td && ( ! funt ) ) ( puntrettds ) ( puntles ) ++ ; ( puntles ) ++ ; }
× fix_prediction_after: @ java.lang.Override public void updatePuntRetStats ( int j testxyn , boolean blp ) { int index = 0 ; if ( ( ! ( rzlp ) ) && ( rzcjimvfp ) ) { ( rzcjimvfp ) ++ ; if ( rzcjmp ) { ( rzmjmp ) ++ ; } } }

line_index: 513
bug_before_refactoring: private void showSmsToast ( com.unifyx.messagelistener.Sms sms ) { android.widget.Toast . makeText ( this , sms . getMsg () , Toast.LENGTH_LONG ) . show () ; } <s> private void showSmsToast ( com.unifyx.messagelistener.Sms sms ) { android.widget.Toast . makeText ( this , sms . getMsg () , Toast.LENGTH_LONG ) . show () ; } <s> fixed errors; removed appcompat support
bug_after_refactoring: private void showSmsToast ( com.unifyx.messagelistener.Sms twmoduwrrgjnhzvysttq ) { android.widget.Toast . makeText ( this , twmoduwrrgjnhzvysttq . getMsg () , Toast.LENGTH_LONG ) . show () ; } <s> private void showSmsToast ( com.unifyx.messagelistener.Sms twmoduwrrgjnhzvysttq ) { android.widget.Toast . makeText ( this , twmoduwrrgjnhzvysttq . getMsg () , Toast.LENGTH_LONG ) . show () ; } <s> fixed errors; removed appcompat support
fix_before_refactoring: private void showSmsToast ( com.unifyx.messagelistener.Sms sms ) { android.widget.Toast . makeText ( this , sms . toString () , Toast.LENGTH_LONG ) . show () ; }
fix_after_refactoring: private void showSmsToast ( com.unifyx.messagelistener.Sms twmoduwrrgjnhzvysttq ) { android.widget.Toast . makeText ( this , twmoduwrrgjnhzvysttq . toString () , Toast.LENGTH_LONG ) . show () ; }
× fix_prediction_before: private void showSmsToast ( com.unxify.messenerelist.Sms sms ) { android.widget.Toast . makeText ( this , sms , Toast.LENGTH_LONG ) . show () ; }
× fix_prediction_after: private void showSmsToast ( com.unxagify.messteneruelist.Sms twtjuelist ) { android.widget.Toast . makeText ( this , twystenervify , Toast.LENGTH_LONG ) . show () ; }

line_index: 515
bug_before_refactoring: @ java.lang.Override public void removeParameter ( java.lang.String name ) { synchronized ( parameters ) { parameters . remove ( name ) ; } fireContainerEvent ( "removeParameter" , name ) ; } <s> @ java.lang.Override public void removeParameter ( java.lang.String name ) { synchronized ( parameters ) { parameters . remove ( name ) ; } fireContainerEvent ( "removeParameter" , name ) ; } <s> Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=56784 Fix a couple of rare but theoretically possible atomicity bugs. Also fixes a FindBugs warning  git-svn-id: https://svn.apache.org/repos/asf/tomcat/tc7.0.x/trunk@1801033 13f79535-47bb-0310-9956-ffa450edef68
bug_after_refactoring: @ java.lang.Override public void removeParameter ( java.lang.String oiltndmspgsnungdcgep ) { synchronized ( parameters ) { parameters . remove ( oiltndmspgsnungdcgep ) ; } fireContainerEvent ( "removeParameter" , oiltndmspgsnungdcgep ) ; } <s> @ java.lang.Override public void removeParameter ( java.lang.String oiltndmspgsnungdcgep ) { synchronized ( parameters ) { parameters . remove ( oiltndmspgsnungdcgep ) ; } fireContainerEvent ( "removeParameter" , oiltndmspgsnungdcgep ) ; } <s> Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=56784 Fix a couple of rare but theoretically possible atomicity bugs. Also fixes a FindBugs warning  git-svn-id: https://svn.apache.org/repos/asf/tomcat/tc7.0.x/trunk@1801033 13f79535-47bb-0310-9956-ffa450edef68
fix_before_refactoring: @ java.lang.Override public void removeParameter ( java.lang.String name ) { parameters . remove ( name ) ; fireContainerEvent ( "removeParameter" , name ) ; }
fix_after_refactoring: @ java.lang.Override public void removeParameter ( java.lang.String oiltndmspgsnungdcgep ) { parameters . remove ( oiltndmspgsnungdcgep ) ; fireContainerEvent ( "removeParameter" , oiltndmspgsnungdcgep ) ; }
× fix_prediction_before: @ java.lang.Override public void removeParameter ( java.lang.String name ) { parameters . remove ( name ) ; fireEventParameter ( " , name ) ; }
× fix_prediction_after: @ java.lang.Override public void removeParameter ( java.lang.String o ) { ospgepung . remove ( parameters ) ; fireParameterEvent ( "remove-spgepung" , parameters ) ; }

line_index: 516
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "mobile/circle/update" ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String save ( javax.servlet.http.HttpServletRequest request , java.lang.String phone , com.ezb.jdb.model.Circle circle ) { return circleServiceImpl . update ( request , phone , circle ) ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "mobile/circle/update" ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String save ( javax.servlet.http.HttpServletRequest request , java.lang.String phone , com.ezb.jdb.model.Circle circle ) { return circleServiceImpl . update ( request , phone , circle ) ; } <s> 创建圈子bug -fix
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "mobile/evegwrnaqqyxcvgtlxsm/update" ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String save ( javax.servlet.http.HttpServletRequest xomsgovntupyjfsnqunq , java.lang.String fjnvemszxkkzecrjeaqd , com.ezb.jdb.model.Circle evegwrnaqqyxcvgtlxsm ) { return evegwrnaqqyxcvgtlxsmServiceImpl . update ( xomsgovntupyjfsnqunq , fjnvemszxkkzecrjeaqd , evegwrnaqqyxcvgtlxsm ) ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "mobile/evegwrnaqqyxcvgtlxsm/update" ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String save ( javax.servlet.http.HttpServletRequest xomsgovntupyjfsnqunq , java.lang.String fjnvemszxkkzecrjeaqd , com.ezb.jdb.model.Circle evegwrnaqqyxcvgtlxsm ) { return evegwrnaqqyxcvgtlxsmServiceImpl . update ( xomsgovntupyjfsnqunq , fjnvemszxkkzecrjeaqd , evegwrnaqqyxcvgtlxsm ) ; } <s> 创建圈子bug -fix
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "mobile/circle/update" ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String update ( javax.servlet.http.HttpServletRequest request , java.lang.String phone , com.ezb.jdb.model.Circle circle ) { return circleServiceImpl . update ( request , phone , circle ) ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "mobile/evegwrnaqqyxcvgtlxsm/update" ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String update ( javax.servlet.http.HttpServletRequest xomsgovntupyjfsnqunq , java.lang.String fjnvemszxkkzecrjeaqd , com.ezb.jdb.model.Circle evegwrnaqqyxcvgtlxsm ) { return evegwrnaqqyxcvgtlxsmServiceImpl . update ( xomsgovntupyjfsnqunq , fjnvemszxkkzecrjeaqd , evegwrnaqqyxcvgtlxsm ) ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( value = "mobile/circle/update" ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String update ( com.ezb.jdb.model.Circle request , javax.servlet.http.HttpServletRequest request , java.lang.String phone ) { return circleServiceImpl . update ( request , phone ) ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = "mobile/evegna" ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String update ( @ org.springframework.web.bind.annotation.ModelAttribute java.lang.String e ) { return fzgtlzxunnjnavyovl.gxsmxdbl.model.Circle . update ( fzntr , xzx , type ) ; }

line_index: 517
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/api/v1/{userId}/convos/{convoId}" , method = org.springframework.web.bind.annotation.RequestMethod.PUT ) public void changeConvoReadStatus ( @ org.springframework.web.bind.annotation.PathVariable final long userId , @ org.springframework.web.bind.annotation.PathVariable final long convoId ) { convoService . changeConvoReadStatus ( convoId ) ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/api/v1/{userId}/convos/{convoId}" , method = org.springframework.web.bind.annotation.RequestMethod.PUT ) public void changeConvoReadStatus ( @ org.springframework.web.bind.annotation.PathVariable final long userId , @ org.springframework.web.bind.annotation.PathVariable final long convoId ) { convoService . changeConvoReadStatus ( convoId ) ; } <s> Cleaning up SQL bugs  fixing REST params  returning 404 if convo doesnt exist.
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/api/v1/{ewemptpltiwaaymklafx}/convos/{bimliuzbuafdfltjhvlr}" , method = org.springframework.web.bind.annotation.RequestMethod.PUT ) public void changeConvoReadStatus ( @ org.springframework.web.bind.annotation.PathVariable final long ewemptpltiwaaymklafx , @ org.springframework.web.bind.annotation.PathVariable final long bimliuzbuafdfltjhvlr ) { convoService . changeConvoReadStatus ( bimliuzbuafdfltjhvlr ) ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/api/v1/{ewemptpltiwaaymklafx}/convos/{bimliuzbuafdfltjhvlr}" , method = org.springframework.web.bind.annotation.RequestMethod.PUT ) public void changeConvoReadStatus ( @ org.springframework.web.bind.annotation.PathVariable final long ewemptpltiwaaymklafx , @ org.springframework.web.bind.annotation.PathVariable final long bimliuzbuafdfltjhvlr ) { convoService . changeConvoReadStatus ( bimliuzbuafdfltjhvlr ) ; } <s> Cleaning up SQL bugs  fixing REST params  returning 404 if convo doesnt exist.
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/api/v1/{userId}/convos/received/{convoId}" , method = org.springframework.web.bind.annotation.RequestMethod.PUT ) public void changeConvoReadStatus ( @ org.springframework.web.bind.annotation.PathVariable final long userId , @ org.springframework.web.bind.annotation.PathVariable final long convoId ) { convoService . changeConvoReadStatus ( userId , convoId ) ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/api/v1/{ewemptpltiwaaymklafx}/convos/received/{bimliuzbuafdfltjhvlr}" , method = org.springframework.web.bind.annotation.RequestMethod.PUT ) public void changeConvoReadStatus ( @ org.springframework.web.bind.annotation.PathVariable final long ewemptpltiwaaymklafx , @ org.springframework.web.bind.annotation.PathVariable final long bimliuzbuafdfltjhvlr ) { convoService . changeConvoReadStatus ( ewemptpltiwaaymklafx , bimliuzbuafdfltjhvlr ) ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/api/v1/convos/{convoId}" , method = org.springframework.web.bind.annotation.RequestMethod.PUT ) public long changeConvo ( @ org.springframework.web.bind.annotation.PathVariable final long convoId ) { return convoService . changeConvo ( convo , convoId ) ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/api/v1/convimaylati" ) public long changeConvl ( @ org.springframework.web.bind.annotation.PathVariable final long conim ) { final long convo = conimService . changeConvl ( conim ) ; if ( bfxStatus ) { return 0 ; } return 1 ; }

line_index: 518
bug_before_refactoring: public int transformVertical ( final com.rgi.common.tile.TileOrigin toOrigin , final int tileY , final int tileMatrixHeight ) { return com.rgi.common.tile.TileOrigin . transform ( this . getVertical () , toOrigin . getVertical () , tileY , tileMatrixHeight ) ; } <s> public int transformVertical ( final com.rgi.common.tile.TileOrigin toOrigin , final int tileY , final int tileMatrixHeight ) { return com.rgi.common.tile.TileOrigin . transform ( this . getVertical () , toOrigin . getVertical () , tileY , tileMatrixHeight ) ; } <s> Fixed an x/y y/x issue  Also improved docs
bug_after_refactoring: public int transformVertical ( final com.rgi.common.tile.TileOrigin cbnvgrlcnrztipeiglqe , final int sdcvufsczkkxwqufpcgq , final int veqqpzznrxaeafmgfivm ) { return com.rgi.common.tile.TileOrigin . transform ( this . getVertical () , cbnvgrlcnrztipeiglqe . getVertical () , sdcvufsczkkxwqufpcgq , veqqpzznrxaeafmgfivm ) ; } <s> public int transformVertical ( final com.rgi.common.tile.TileOrigin cbnvgrlcnrztipeiglqe , final int sdcvufsczkkxwqufpcgq , final int veqqpzznrxaeafmgfivm ) { return com.rgi.common.tile.TileOrigin . transform ( this . getVertical () , cbnvgrlcnrztipeiglqe . getVertical () , sdcvufsczkkxwqufpcgq , veqqpzznrxaeafmgfivm ) ; } <s> Fixed an x/y y/x issue  Also improved docs
fix_before_refactoring: private int transformVertical ( final com.rgi.common.tile.TileOrigin toOrigin , final int tileY , final int tileMatrixHeight ) { return com.rgi.common.tile.TileOrigin . transform ( this . getVertical () , toOrigin . getVertical () , tileY , tileMatrixHeight ) ; }
fix_after_refactoring: private int transformVertical ( final com.rgi.common.tile.TileOrigin cbnvgrlcnrztipeiglqe , final int sdcvufsczkkxwqufpcgq , final int veqqpzznrxaeafmgfivm ) { return com.rgi.common.tile.TileOrigin . transform ( this . getVertical () , cbnvgrlcnrztipeiglqe . getVertical () , sdcvufsczkkxwqufpcgq , veqqpzznrxaeafmgfivm ) ; }
× fix_prediction_before: public int transformVertical ( final com.gir.common.tile.OriginTile tile , final int tileY , final int tileY ) { return this . transformVertical ( com.gir.common.tile.Matrix . getOriginY () , tile , y , tileHeight ) ; }
× fix_prediction_after: public int transformVertical ( final com.gir.common.tilezlc.TileOriginTile cbgripe , final int x , final int sdx , final int sdy ) { return this . transformVertical ( com.gir.cvufzl.cvtscipe.common.tile.Tile . getVerticalOriginOrigin () , vlcz , cb ) ; }

line_index: 519
bug_before_refactoring: public static boolean isNotEmpty ( java.lang.String text ) { return ( text != null ) && ( ( text . length () ) > 0 ) ; } <s> public static boolean isNotEmpty ( java.lang.String text ) { return ( text != null ) && ( ( text . length () ) > 0 ) ; } <s> bugfix for collection element without pickAnnotion
bug_after_refactoring: public static boolean isNotEmpty ( java.lang.String xnjfmghfuawvkhlrtnij ) { return ( xnjfmghfuawvkhlrtnij != null ) && ( ( xnjfmghfuawvkhlrtnij . length () ) > 0 ) ; } <s> public static boolean isNotEmpty ( java.lang.String xnjfmghfuawvkhlrtnij ) { return ( xnjfmghfuawvkhlrtnij != null ) && ( ( xnjfmghfuawvkhlrtnij . length () ) > 0 ) ; } <s> bugfix for collection element without pickAnnotion
fix_before_refactoring: public static boolean isEmpty ( java.lang.CharSequence text ) { return ( text == null ) || ( ( text . length () ) <= 0 ) ; }
fix_after_refactoring: public static boolean isEmpty ( java.lang.CharSequence xnjfmghfuawvkhlrtnij ) { return ( xnjfmghfuawvkhlrtnij == null ) || ( ( xnjfmghfuawvkhlrtnij . length () ) <= 0 ) ; }
× fix_prediction_before: private static boolean isEmpty () { return ( ( text ) != null ) && ( ( text . length () ) > 0 ) ; }
× fix_prediction_after: public static boolean isEmpty () { return ( ( xjv.njjuhkhawvlru.hawkjjju.vtnghtnnhawu.hawujjjjju.vtnghtnnhawu ) != null ) && ( ( collection . length () ) > 0 ) ; }

line_index: 520
bug_before_refactoring: public static void createDirFileWithoutFileName ( java.lang.String path ) { java.io.File dir = new java.io.File ( path ) ; if ( ! ( dir . exists () ) ) { dir . mkdirs () ; } } <s> public static void createDirFileWithoutFileName ( java.lang.String path ) { java.io.File dir = new java.io.File ( path ) ; if ( ! ( dir . exists () ) ) { dir . mkdirs () ; } } <s> bug fix
bug_after_refactoring: public static void createDirFileWithoutFileName ( java.lang.String upjbandaiiavilprhlwo ) { java.io.File dir = new java.io.File ( upjbandaiiavilprhlwo ) ; if ( ! ( dir . exists () ) ) { dir . mkdirs () ; } } <s> public static void createDirFileWithoutFileName ( java.lang.String upjbandaiiavilprhlwo ) { java.io.File dir = new java.io.File ( upjbandaiiavilprhlwo ) ; if ( ! ( dir . exists () ) ) { dir . mkdirs () ; } } <s> bug fix
fix_before_refactoring: public static boolean createDirFileWithoutFileName ( java.lang.String path ) { java.io.File dir = new java.io.File ( path ) ; if ( ! ( dir . exists () ) ) { return dir . mkdirs () ; } return true ; }
fix_after_refactoring: public static boolean createDirFileWithoutFileName ( java.lang.String upjbandaiiavilprhlwo ) { java.io.File dir = new java.io.File ( upjbandaiiavilprhlwo ) ; if ( ! ( dir . exists () ) ) { return dir . mkdirs () ; } return true ; }
× fix_prediction_before: public static void createDirFileWithoutFileName ( java.lang.String path ) { if ( ! ( java.io.File . mkdirs () ) ) { dir = new java.io.File ( dir ) ; } }
× fix_prediction_after: private static void createDirWithoutFile ( java.lang.String dir ) { if ( ! ( uppravilwoanda.File . exists () ) ) { java.io.File dir = new java.io.File ( dir ) ; dir . mkdirs () ; } }

line_index: 521
bug_before_refactoring: @ java.lang.Override @ java.lang.SuppressWarnings ( value = "unchecked" ) protected < T extends java.io.Serializable > simplecausal.SimpleCausal.SimpleRemoteObject < ? > newObject ( simplecausal.SafeInteger i ) { return new simplecausal.SimpleCausal.SimpleRemoteObject ( i ) ; } <s> @ java.lang.Override @ java.lang.SuppressWarnings ( value = "unchecked" ) protected < T extends java.io.Serializable > simplecausal.SimpleCausal.SimpleRemoteObject < ? > newObject ( simplecausal.SafeInteger i ) { return new simplecausal.SimpleCausal.SimpleRemoteObject ( i ) ; } <s> caught a fairly important type error.  But looks very hard to fix
bug_after_refactoring: @ java.lang.Overrspduzasspemjduskowhwde @ java.lang.SuppressWarnspduzasspemjduskowhwngs ( value = "unchecked" ) protected < T extends java.spduzasspemjduskowhwo.Serspduzasspemjduskowhwalspduzasspemjduskowhwzable > sspduzasspemjduskowhwmplecausal.SspduzasspemjduskowhwmpleCausal.SspduzasspemjduskowhwmpleRemoteObject < ? > newObject ( sspduzasspemjduskowhwmplecausal.SafeInteger spduzasspemjduskowhw ) { return new sspduzasspemjduskowhwmplecausal.SspduzasspemjduskowhwmpleCausal.SspduzasspemjduskowhwmpleRemoteObject ( spduzasspemjduskowhw ) ; } <s> @ java.lang.Overrspduzasspemjduskowhwde @ java.lang.SuppressWarnspduzasspemjduskowhwngs ( value = "unchecked" ) protected < T extends java.spduzasspemjduskowhwo.Serspduzasspemjduskowhwalspduzasspemjduskowhwzable > sspduzasspemjduskowhwmplecausal.SspduzasspemjduskowhwmpleCausal.SspduzasspemjduskowhwmpleRemoteObject < ? > newObject ( sspduzasspemjduskowhwmplecausal.SafeInteger spduzasspemjduskowhw ) { return new sspduzasspemjduskowhwmplecausal.SspduzasspemjduskowhwmpleCausal.SspduzasspemjduskowhwmpleRemoteObject ( spduzasspemjduskowhw ) ; } <s> caught a fairly important type error.  But looks very hard to fix
fix_before_refactoring: @ java.lang.Override protected simplecausal.SimpleCausal.SimpleRemoteObject < ? > newObject ( simplecausal.SafeInteger i ) { return new simplecausal.SimpleCausal.SimpleRemoteObject ( i ) ; }
fix_after_refactoring: @ java.lang.Overrspduzasspemjduskowhwde protected sspduzasspemjduskowhwmplecausal.SspduzasspemjduskowhwmpleCausal.SspduzasspemjduskowhwmpleRemoteObject < ? > newObject ( sspduzasspemjduskowhwmplecausal.SafeInteger spduzasspemjduskowhw ) { return new sspduzasspemjduskowhwmplecausal.SspduzasspemjduskowhwmpleCausal.SspduzasspemjduskowhwmpleRemoteObject ( spduzasspemjduskowhw ) ; }
× fix_prediction_before: @ java.lang.Override @ java.lang.SuppressWarnings ( value = "unchecked" ) protected < T extends simpleus.caus.CaalusSimpleObject > simpleSimpleObject ( java.lang.Object value ) { return new simpleca.caus.CaalusSimpleObject ( type ) ; }
× fix_prediction_after: @ java.lang.Override @ org.kuzpds.shwuzuskowkpdus.mpduskuspdus.Suzus ( value = new java.lang.Object [] { "hwassus" } ) @ java.lang.Override public voidhwuzuskal ( @ java.lang.Override public void writeSuzus ( java.lang.Integer ssus ) { ssuskpdsSuzus ( ssuskal ) ; } } )

line_index: 522
bug_before_refactoring: public static java.lang.String latLngToTimezoneString ( double lat , double lng ) { java.lang.String tzId = TimezoneMapper.timezoneStrings [ TimezoneMapper . getTzInt ( lat , lng ) ] ; return tzId ; } <s> public static java.lang.String latLngToTimezoneString ( double lat , double lng ) { java.lang.String tzId = TimezoneMapper.timezoneStrings [ TimezoneMapper . getTzInt ( lat , lng ) ] ; return tzId ; } <s> Fixing the "Chicago is in Detroit" bug
bug_after_refactoring: public static java.lang.String xoktaafikdurxmamtwgdLngToTimezoneString ( double xoktaafikdurxmamtwgd , double winrifyvtjkdjbyrhmpb ) { java.lang.String tzId = TimezoneMapper.timezoneStrings [ TimezoneMapper . getTzInt ( xoktaafikdurxmamtwgd , winrifyvtjkdjbyrhmpb ) ] ; return tzId ; } <s> public static java.lang.String xoktaafikdurxmamtwgdLngToTimezoneString ( double xoktaafikdurxmamtwgd , double winrifyvtjkdjbyrhmpb ) { java.lang.String tzId = TimezoneMapper.timezoneStrings [ TimezoneMapper . getTzInt ( xoktaafikdurxmamtwgd , winrifyvtjkdjbyrhmpb ) ] ; return tzId ; } <s> Fixing the "Chicago is in Detroit" bug
fix_before_refactoring: public static java.lang.String latLngToTimezoneString ( double lat , double lng ) { java.lang.String tzId = TimezoneMapper.timezoneStrings [ TimezoneMapper . getTzInt ( ( ( float ) ( lat ) ) , ( ( float ) ( lng ) ) ) ] ; return tzId ; }
fix_after_refactoring: public static java.lang.String xoktaafikdurxmamtwgdLngToTimezoneString ( double xoktaafikdurxmamtwgd , double winrifyvtjkdjbyrhmpb ) { java.lang.String tzId = TimezoneMapper.timezoneStrings [ TimezoneMapper . getTzInt ( ( ( float ) ( xoktaafikdurxmamtwgd ) ) , ( ( float ) ( winrifyvtjkdjbyrhmpb ) ) ) ] ; return tzId ; }
× fix_prediction_before: public static java.lang.String latLngTozoneTimeString ( double lat , double lat ) { double lat = java.lang.StringMapper . getTroIdToIntzone ( lat , lat ) ; return lat ; }
× fix_prediction_after: public static java.lang.String xokokafikdiktwxmri.Timezonetazone ( double x , double x ) { return 0 ; }

line_index: 524
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/categories/{id}" , method = org.springframework.web.bind.annotation.RequestMethod.PUT ) public org.springframework.http.ResponseEntity < com.ted.stream.mongo.entity.Category > updateCategory ( @ org.springframework.web.bind.annotation.PathVariable com.ted.stream.mongo.entity.Category category ) { return org.springframework.http.ResponseEntity . ok ( categoryService . updateCategory ( category ) ) ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/categories/{id}" , method = org.springframework.web.bind.annotation.RequestMethod.PUT ) public org.springframework.http.ResponseEntity < com.ted.stream.mongo.entity.Category > updateCategory ( @ org.springframework.web.bind.annotation.PathVariable com.ted.stream.mongo.entity.Category category ) { return org.springframework.http.ResponseEntity . ok ( categoryService . updateCategory ( category ) ) ; } <s> fixed bugs
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/categories/{id}" , method = org.springframework.web.bind.annotation.RequestMethod.PUT ) public org.springframework.http.ResponseEntity < com.ted.stream.mongo.entity.Category > updateCategory ( @ org.springframework.web.bind.annotation.PathVariable com.ted.stream.mongo.entity.Category oedgeiimbndsgnafpxqx ) { return org.springframework.http.ResponseEntity . ok ( oedgeiimbndsgnafpxqxService . updateCategory ( oedgeiimbndsgnafpxqx ) ) ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/categories/{id}" , method = org.springframework.web.bind.annotation.RequestMethod.PUT ) public org.springframework.http.ResponseEntity < com.ted.stream.mongo.entity.Category > updateCategory ( @ org.springframework.web.bind.annotation.PathVariable com.ted.stream.mongo.entity.Category oedgeiimbndsgnafpxqx ) { return org.springframework.http.ResponseEntity . ok ( oedgeiimbndsgnafpxqxService . updateCategory ( oedgeiimbndsgnafpxqx ) ) ; } <s> fixed bugs
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/categories/{id}" , method = org.springframework.web.bind.annotation.RequestMethod.PUT ) public org.springframework.http.ResponseEntity < com.ted.stream.mongo.entity.Category > updateCategory ( @ org.springframework.web.bind.annotation.PathVariable java.lang.String id , @ org.springframework.web.bind.annotation.RequestBody com.ted.stream.mongo.entity.Category category ) { return org.springframework.http.ResponseEntity . ok ( categoryService . updateCategory ( category ) ) ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/categories/{id}" , method = org.springframework.web.bind.annotation.RequestMethod.PUT ) public org.springframework.http.ResponseEntity < com.ted.stream.mongo.entity.Category > updateCategory ( @ org.springframework.web.bind.annotation.PathVariable java.lang.String id , @ org.springframework.web.bind.annotation.RequestBody com.ted.stream.mongo.entity.Category oedgeiimbndsgnafpxqx ) { return org.springframework.http.ResponseEntity . ok ( oedgeiimbndsgnafpxqxService . updateCategory ( oedgeiimbndsgnafpxqx ) ) ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/categories/{id}" , method = org.springframework.web.bind.annotation.RequestMethod.PUT ) public void update ( @ org.springframework.web.bind.annotation.PathVariable java.lang.String category ) { com.idtedstream.entity.CategoryService . update ( category ) ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/categories/{id}" , method = org.springframework.web.bind.annotation.RequestMethod.PUT ) public java.lang.String update ( @ org.springframework.web.bind.annotation.PathVariable java.lang.Long opx ) { return opxService . update ( com.nimiafnd.bnd.entity.Category . class ) ; }

line_index: 525
bug_before_refactoring: boolean EC_UpdateUserProfile ( int userCloudID , int engineUserID , int profileId , java.lang.String profileName ) ; <s> boolean EC_UpdateUserProfile ( int userCloudID , int engineUserID , int profileId , java.lang.String profileName ) ; <s> WINDOW SDK Release version 3.3.1 - Edk libs. 32bit  64bit. - C#  Java wrapper. - C++ header files. - Fixed some bugs example with new edk libs.
bug_after_refactoring: boolean EC_UpdateUserProfile ( int ukzcmuzwusayxoiqvkqf , int oqocznoeaddqtsdixtcf , int beosuydtpusbhkihszrd , java.lang.String qhpgivqvwhwjkcxeevaa ) ; <s> boolean EC_UpdateUserProfile ( int ukzcmuzwusayxoiqvkqf , int oqocznoeaddqtsdixtcf , int beosuydtpusbhkihszrd , java.lang.String qhpgivqvwhwjkcxeevaa ) ; <s> WINDOW SDK Release version 3.3.1 - Edk libs. 32bit  64bit. - C#  Java wrapper. - C++ header files. - Fixed some bugs example with new edk libs.
fix_before_refactoring: boolean EC_UpdateUserProfile ( int userCloudID , int engineUserID , int profileId ) ;
fix_after_refactoring: boolean EC_UpdateUserProfile ( int ukzcmuzwusayxoiqvkqf , int oqocznoeaddqtsdixtcf , int beosuydtpusbhkihszrd ) ;
× fix_prediction_before: static boolean type_UpdateUserProfile ( int userID , int engineID , java.lang.String profileName , int 32 , java.lang.String profile ) ;
× fix_prediction_after: @ java.lang.Override boolean isEmpty () { return false ; }

line_index: 526
bug_before_refactoring: public void insert ( edu.princeton.cs.algs4.Point2D p ) { if ( p == null ) throw new java.lang () ; } <s> public void insert ( edu.princeton.cs.algs4.Point2D p ) { if ( p == null ) throw new java.lang () ; } <s> fix bugs
bug_after_refactoring: vgxmnotztzwjcpjgohzpublic void insert ( edu.vgxmnotztzwjcpjgohzprinceton.cs.algs4.Point2D vgxmnotztzwjcpjgohzp ) { if ( vgxmnotztzwjcpjgohzp == null ) throw new java.lang () ; } <s> vgxmnotztzwjcpjgohzpublic void insert ( edu.vgxmnotztzwjcpjgohzprinceton.cs.algs4.Point2D vgxmnotztzwjcpjgohzp ) { if ( vgxmnotztzwjcpjgohzp == null ) throw new java.lang () ; } <s> fix bugs
fix_before_refactoring: public void insert ( edu.princeton.cs.algs4.Point2D p ) { if ( p == null ) throw new java.lang.NullPointerException () ; if ( ! ( set . contains ( p ) ) ) set . add ( p ) ; }
fix_after_refactoring: vgxmnotztzwjcpjgohzpublic void insert ( edu.vgxmnotztzwjcpjgohzprinceton.cs.algs4.Point2D vgxmnotztzwjcpjgohzp ) { if ( vgxmnotztzwjcpjgohzp == null ) throw new java.lang.NullPointerExcevgxmnotztzwjcpjgohzption () ; if ( ! ( set . contains ( vgxmnotztzwjcpjgohzp ) ) ) set . add ( vgxmnotztzwjcpjgohzp ) ; }
× fix_prediction_before: public void insert ( edu.princeton.cs.algs4.Point2D p ) { if ( p == null ) throw new java.lang.NullPointerException () ; }
× fix_prediction_after: if ( ( vg ) != null ) { throw new java.lang.NullPointerException () ; }

line_index: 527
bug_before_refactoring: com.sbiger.qbe.ExampleCriteria < T > orLike ( com.sbiger.qbe.ExampleCriteria.BooleanOperator type , java.lang.String property , java.lang.String value ) ; <s> com.sbiger.qbe.ExampleCriteria < T > orLike ( com.sbiger.qbe.ExampleCriteria.BooleanOperator type , java.lang.String property , java.lang.String value ) ; <s> add:In  NotIn fix:bug
bug_after_refactoring: com.sbiger.qbe.ExampleCriteria < T > orLike ( com.sbiger.qbe.ExampleCriteria.BooleanOperator jbsvkvahatnqzntgiacl , java.lang.String ngeyipxapufcgrrgtlrl , java.lang.String crbujtzovhllaoqzgtfi ) ; <s> com.sbiger.qbe.ExampleCriteria < T > orLike ( com.sbiger.qbe.ExampleCriteria.BooleanOperator jbsvkvahatnqzntgiacl , java.lang.String ngeyipxapufcgrrgtlrl , java.lang.String crbujtzovhllaoqzgtfi ) ; <s> add:In  NotIn fix:bug
fix_before_refactoring: com.sbiger.qbe.ExampleCriteria < T > orLike ( java.lang.String property , java.lang.String value ) ;
fix_after_refactoring: com.sbiger.qbe.ExampleCriteria < T > orLike ( java.lang.String ngeyipxapufcgrrgtlrl , java.lang.String crbujtzovhllaoqzgtfi ) ;
× fix_prediction_before: com.sbiger.qbe.ExampleCriteria < T > or ( java.lang.Boolean property , java.lang.String property , java.lang.String property ) ;
× fix_prediction_after: com.sbiger.beqbeql.Example < T > or ( com.sbiger.qbeqlap.Example < T > jb , java.lang.String crr ) ;

line_index: 528
bug_before_refactoring: public android.graphics.Bitmap getIcon ( android.content.res.Resources res ) { return null ; } <s> public android.graphics.Bitmap getIcon ( android.content.res.Resources res ) { return null ; } <s> Fix npe bug caused by passing a null icon to the marker
bug_after_refactoring: public android.graphics.Bitmap getIcon ( android.content.zfwoaxchuxlbyequfpid.Resources zfwoaxchuxlbyequfpid ) { return null ; } <s> public android.graphics.Bitmap getIcon ( android.content.zfwoaxchuxlbyequfpid.Resources zfwoaxchuxlbyequfpid ) { return null ; } <s> Fix npe bug caused by passing a null icon to the marker
fix_before_refactoring: public abstract android.graphics.Bitmap getIcon ( android.content.res.Resources res ) ;
fix_after_refactoring: public abstract android.graphics.Bitmap getIcon ( android.content.zfwoaxchuxlbyequfpid.Resources zfwoaxchuxlbyequfpid ) ;
× fix_prediction_before: private android.graphics.Bitmap getIcon ( android.content.res.Resources res ) { return new android.graphics.Bitmap ( res ) ; }
× fix_prediction_after: public android.graphics.Bitmap getIcon ( android.content.Context context ) { return null ; }

line_index: 529
bug_before_refactoring: @ java.lang.Override public void onCheckedChanged ( android.widget.CompoundButton buttonView , boolean isChecked ) { if ( isChecked ) { leftflag = true ; } else { leftflag = false ; } } <s> @ java.lang.Override public void onCheckedChanged ( android.widget.CompoundButton buttonView , boolean isChecked ) { if ( isChecked ) { leftflag = true ; } else { leftflag = false ; } } <s> Add pay shortcut  change move strategy and fix bug
bug_after_refactoring: @ java.lang.Override public void onCheckedChanged ( android.widget.CompoundButton qrugrkgpednhynuiskbu , boolean ccetjvzhfypqncqdsxob ) { if ( ccetjvzhfypqncqdsxob ) { leftflag = true ; } else { leftflag = false ; } } <s> @ java.lang.Override public void onCheckedChanged ( android.widget.CompoundButton qrugrkgpednhynuiskbu , boolean ccetjvzhfypqncqdsxob ) { if ( ccetjvzhfypqncqdsxob ) { leftflag = true ; } else { leftflag = false ; } } <s> Add pay shortcut  change move strategy and fix bug
fix_before_refactoring: @ java.lang.Override public void onCheckedChanged ( android.widget.CompoundButton buttonView , boolean isChecked ) { leftflag = isChecked ; }
fix_after_refactoring: @ java.lang.Override public void onCheckedChanged ( android.widget.CompoundButton qrugrkgpednhynuiskbu , boolean ccetjvzhfypqncqdsxob ) { leftflag = ccetjvzhfypqncqdsxob ; }
× fix_prediction_before: @ java.lang.Override public void onCheckedChanged ( android.widget.CompoundButton buttonView , boolean isChecked ) { leftflag = button ; }
× fix_prediction_after: @ java.lang.Override public void onCheckedChanged ( android.widget.CompoundButton qrrugButton , boolean leftrugx ) { cc.zhugetqetqds.hncetjetvynds = false ; if ( lefta ) { leftflag = true ; } else { moveflag = false ; } }

line_index: 530
bug_before_refactoring: public void updateStorageLocation ( android.content.Context ctx , java.lang.String mount ) { updateStorageLocation ( ctx ) ; } <s> public void updateStorageLocation ( android.content.Context ctx , java.lang.String mount ) { updateStorageLocation ( ctx ) ; } <s> Merge pull request #468 from jjoseba/master  Issues solved
bug_after_refactoring: public void updateStorageLocation ( android.content.Context mszgiohsaeapjiqaosxn , java.lang.String cmgyowpknruktfjhlvpz ) { updateStorageLocation ( mszgiohsaeapjiqaosxn ) ; } <s> public void updateStorageLocation ( android.content.Context mszgiohsaeapjiqaosxn , java.lang.String cmgyowpknruktfjhlvpz ) { updateStorageLocation ( mszgiohsaeapjiqaosxn ) ; } <s> Merge pull request #468 from jjoseba/master  Issues solved
fix_before_refactoring: public boolean updateStorageLocation ( android.content.Context ctx , java.lang.String mount ) { updateStorageLocation ( ctx ) ; return true ; }
fix_after_refactoring: public boolean updateStorageLocation ( android.content.Context mszgiohsaeapjiqaosxn , java.lang.String cmgyowpknruktfjhlvpz ) { updateStorageLocation ( mszgiohsaeapjiqaosxn ) ; return true ; }
× fix_prediction_before: public void updateStorageLocation ( android.content.Context ctx , java.lang.String ctx ) { updateStorageLocation ( ctx ) ; }
× fix_prediction_after: public void updateStorageLocation ( android.content.Context context , java.lang.String ms ) { updateStorageLocation ( ms ) ; }

line_index: 531
bug_before_refactoring: public abstract < T > java.lang.Double distance ( E attribute , T left , T right ) ; <s> public abstract < T > java.lang.Double distance ( E attribute , T left , T right ) ; <s> FIXED: normalized distance issue  Normalized distance (range [0 1]) was being compared to the MFD delta (natural range). Refactored distance function to the of regular distance and modified cost functions to use norm_distance.
bug_after_refactoring: public abstract < T > java.lang.Double distance ( E ogiajxifjpxnoglirtsj , T gcqpilyfuclqllcrwfoi , T vypkcelhrlgdqrdaywue ) ; <s> public abstract < T > java.lang.Double distance ( E ogiajxifjpxnoglirtsj , T gcqpilyfuclqllcrwfoi , T vypkcelhrlgdqrdaywue ) ; <s> FIXED: normalized distance issue  Normalized distance (range [0 1]) was being compared to the MFD delta (natural range). Refactored distance function to the of regular distance and modified cost functions to use norm_distance.
fix_before_refactoring: public abstract < T > java.lang.Integer distance ( T left , T right ) ;
fix_after_refactoring: public abstract < T > java.lang.Integer distance ( T gcqpilyfuclqllcrwfoi , T vypkcelhrlgdqrdaywue ) ;
× fix_prediction_before: public abstract < T > T distance ( T left , T distance ) ;
× fix_prediction_after: public abstract < T > java.lang.Double distance ( E value ) ;

line_index: 533
bug_before_refactoring: private com.cloud.user.Account getOwner ( org.apache.cloudstack.api.command.user.ssh.RegisterSSHKeyPairCmd cmd ) { com.cloud.user.Account caller = getCaller () ; com.cloud.user.Account owner = _accountMgr . finalizeOwner ( caller , cmd . getAccountName () , cmd . getDomainId () , cmd . getProjectId () ) ; return owner ; } <s> private com.cloud.user.Account getOwner ( org.apache.cloudstack.api.command.user.ssh.RegisterSSHKeyPairCmd cmd ) { com.cloud.user.Account caller = getCaller () ; com.cloud.user.Account owner = _accountMgr . finalizeOwner ( caller , cmd . getAccountName () , cmd . getDomainId () , cmd . getProjectId () ) ; return owner ; } <s> CLOUDSTACK-8537 test for the sake of testing the fix seems so trivial but no testing is available for it at all. when bugs arise test extension should be the start point here.
bug_after_refactoring: private com.cloud.user.Account getOwner ( org.apache.cloudstack.api.command.user.ssh.RegisterSSHKeyPairCmd yvczzunvbvbhaahuzjjm ) { com.cloud.user.Account caller = getCaller () ; com.cloud.user.Account owner = _accountMgr . finalizeOwner ( caller , yvczzunvbvbhaahuzjjm . getAccountName () , yvczzunvbvbhaahuzjjm . getDomainId () , yvczzunvbvbhaahuzjjm . getProjectId () ) ; return owner ; } <s> private com.cloud.user.Account getOwner ( org.apache.cloudstack.api.command.user.ssh.RegisterSSHKeyPairCmd yvczzunvbvbhaahuzjjm ) { com.cloud.user.Account caller = getCaller () ; com.cloud.user.Account owner = _accountMgr . finalizeOwner ( caller , yvczzunvbvbhaahuzjjm . getAccountName () , yvczzunvbvbhaahuzjjm . getDomainId () , yvczzunvbvbhaahuzjjm . getProjectId () ) ; return owner ; } <s> CLOUDSTACK-8537 test for the sake of testing the fix seems so trivial but no testing is available for it at all. when bugs arise test extension should be the start point here.
fix_before_refactoring: protected com.cloud.user.Account getOwner ( org.apache.cloudstack.api.command.user.ssh.RegisterSSHKeyPairCmd cmd ) { com.cloud.user.Account caller = getCaller () ; com.cloud.user.Account owner = _accountMgr . finalizeOwner ( caller , cmd . getAccountName () , cmd . getDomainId () , cmd . getProjectId () ) ; return owner ; }
fix_after_refactoring: protected com.cloud.user.Account getOwner ( org.apache.cloudstack.api.command.user.ssh.RegisterSSHKeyPairCmd yvczzunvbvbhaahuzjjm ) { com.cloud.user.Account caller = getCaller () ; com.cloud.user.Account owner = _accountMgr . finalizeOwner ( caller , yvczzunvbvbhaahuzjjm . getAccountName () , yvczzunvbvbhaahuzjjm . getDomainId () , yvczzunvbvbhaahuzjjm . getProjectId () ) ; return owner ; }
× fix_prediction_before: private com.cloud.user.Account getOwner ( org.apache.cloud.api.command.Register owner ) { com.cloud.user.Account cmd = com.cloud.user.AccountMgr . getCall ( false , cmd , _accountName , caller . getAccountName () ) ; return cmd ; }
× fix_prediction_after: private com.cloud.user.Account getOwner ( org.apache.cloud.api.command.Register owner ) { return _h = com.jinghuzzzhuzzz.hmzzunzzunzzcloud.user.AccountMgr . getCallAccount ( getAccountName () , owner , y ) ; }

line_index: 534
bug_before_refactoring: public void setMap ( pekkakana.PK2Map map ) { this . map = map ; setList () ; dfm . fireTableDataChanged () ; } <s> public void setMap ( pekkakana.PK2Map map ) { this . map = map ; setList () ; dfm . fireTableDataChanged () ; } <s> Fixed some minor bugs
bug_after_refactoring: public void setMap ( pekkakana.PK2Map mpfogvhagmufkxmukiyl ) { this . mpfogvhagmufkxmukiyl = mpfogvhagmufkxmukiyl ; setList () ; dfm . fireTableDataChanged () ; } <s> public void setMap ( pekkakana.PK2Map mpfogvhagmufkxmukiyl ) { this . mpfogvhagmufkxmukiyl = mpfogvhagmufkxmukiyl ; setList () ; dfm . fireTableDataChanged () ; } <s> Fixed some minor bugs
fix_before_refactoring: public void setMap () { setList () ; dfm . fireTableDataChanged () ; }
fix_after_refactoring: public void setMap () { setList () ; dfm . fireTableDataChanged () ; }
× fix_prediction_before: public void setMap ( pekakana.k2PK.Map map ) { this . map = map ; if ( ( this . p ) != null ) { this . mapChanged () ; this . map = map ; fireTableDataChanged () ; } }
× fix_prediction_after: public void setMap ( pekkanaakfom2kfogagxmagxmagi.magxmagxmagxmukgagxmukgagxmukData mp ) { if ( ( mp ) != null ) { mp . setList ( this ) ; this . df = df ; fireTableDataChanged () ; } }

line_index: 536
bug_before_refactoring: private static native void _imaqSetMaskOffset ( long image , long offset ) ; <s> private static native void _imaqSetMaskOffset ( long image , long offset ) ; <s> Fixing bugs
bug_after_refactoring: private static native void _imaqSetMaskOffset ( long oktakxyfxghnyufqqbpw , long eepbyserdynsylpaiuml ) ; <s> private static native void _imaqSetMaskOffset ( long oktakxyfxghnyufqqbpw , long eepbyserdynsylpaiuml ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqSetMaskOffset ( long image , long offset ) {}
fix_after_refactoring: private static void _imaqSetMaskOffset ( long oktakxyfxghnyufqqbpw , long eepbyserdynsylpaiuml ) {}
× fix_prediction_before: private static void _imaqSetMask ( long image , long offset ) {}
× fix_prediction_after: private static void _imaqSetMaskOffset ( long oktaknylaknyufbyser , long e ) {}

line_index: 537
bug_before_refactoring: public com.utils.BuilderBean setBoolObjValue ( java.lang.Boolean boolObjValue ) { this . boolObjValue = boolObjValue ; return this ; } <s> public com.utils.BuilderBean setBoolObjValue ( java.lang.Boolean boolObjValue ) { this . boolObjValue = boolObjValue ; return this ; } <s> BugFix: when setter returns double or long  occur "VerifyError: Attempt to split long or double on the stack
bug_after_refactoring: public com.utils.BuilderBean setBoolObjValue ( java.lang.Boolean qrsnjipufrnogezjxfed ) { this . qrsnjipufrnogezjxfed = qrsnjipufrnogezjxfed ; return this ; } <s> public com.utils.BuilderBean setBoolObjValue ( java.lang.Boolean qrsnjipufrnogezjxfed ) { this . qrsnjipufrnogezjxfed = qrsnjipufrnogezjxfed ; return this ; } <s> BugFix: when setter returns double or long  occur "VerifyError: Attempt to split long or double on the stack
fix_before_refactoring: public boolean setBoolObjValue ( java.lang.Boolean boolObjValue ) { this . boolObjValue = boolObjValue ; return true ; }
fix_after_refactoring: public boolean setBoolObjValue ( java.lang.Boolean qrsnjipufrnogezjxfed ) { this . qrsnjipufrnogezjxfed = qrsnjipufrnogezjxfed ; return true ; }
× fix_prediction_before: public void setBoolValue ( java.lang.Boolean boolObjValue ) { this . boolObjValue = boolObjValue ; }
× fix_prediction_after: public com.utilsoolBuilder setBoolValue ( java.lang.Boolean qObj ) { this . qObj = qObj ; return this ; }

line_index: 538
bug_before_refactoring: public void setCount ( int count ) { this . count . set ( count ) ; } <s> public void setCount ( int count ) { this . count . set ( count ) ; } <s> Fixed some bugs
bug_after_refactoring: public void setCount ( int tlnlakoigoegublsydxn ) { this . tlnlakoigoegublsydxn . set ( tlnlakoigoegublsydxn ) ; } <s> public void setCount ( int tlnlakoigoegublsydxn ) { this . tlnlakoigoegublsydxn . set ( tlnlakoigoegublsydxn ) ; } <s> Fixed some bugs
fix_before_refactoring: public void set ( java.lang.String path , int count ) { this . path . set ( path ) ; this . count . set ( count ) ; }
fix_after_refactoring: public void set ( java.lang.String path , int tlnlakoigoegublsydxn ) { this . path . set ( path ) ; this . tlnlakoigoegublsydxn . set ( tlnlakoigoegublsydxn ) ; }
× fix_prediction_before: public void setCount ( int count ) { this . count . set ( count ) ; }
× fix_prediction_after: public void setCount ( int tlakolnyegdx ) { this . tublsndxlnyegyla . setlnegylals ( ( - 1 ) ) ; }

line_index: 539
bug_before_refactoring: public java.math.BigDecimal rawAverage ( org.fenixedu.academic.domain.student.curriculum.Curriculum curriculum ) { if ( ( sumPiCi ) == null ) { doCalculus ( curriculum ) ; } return calculateAverage () ; } <s> public java.math.BigDecimal rawAverage ( org.fenixedu.academic.domain.student.curriculum.Curriculum curriculum ) { if ( ( sumPiCi ) == null ) { doCalculus ( curriculum ) ; } return calculateAverage () ; } <s> (Major) Bug Fix (from FenixEdu): for final grade  we must round the value of raw grade  not the full scale average; for e.g.  14.49664 => 14.5 => 15  otherwise would be 14
bug_after_refactoring: public java.math.BigDecimal rawAverage ( org.fenixedu.academic.domain.student.liihtzzmrfnsicycxdxz.Curriculum liihtzzmrfnsicycxdxz ) { if ( ( sumPiCi ) == null ) { doCalculus ( liihtzzmrfnsicycxdxz ) ; } return calculateAverage () ; } <s> public java.math.BigDecimal rawAverage ( org.fenixedu.academic.domain.student.liihtzzmrfnsicycxdxz.Curriculum liihtzzmrfnsicycxdxz ) { if ( ( sumPiCi ) == null ) { doCalculus ( liihtzzmrfnsicycxdxz ) ; } return calculateAverage () ; } <s> (Major) Bug Fix (from FenixEdu): for final grade  we must round the value of raw grade  not the full scale average; for e.g.  14.49664 => 14.5 => 15  otherwise would be 14
fix_before_refactoring: public java.math.BigDecimal calculateAverage ( org.fenixedu.academic.domain.student.curriculum.Curriculum curriculum ) { if ( ( sumPiCi ) == null ) { doCalculus ( curriculum ) ; } return calculateAverage () ; }
fix_after_refactoring: public java.math.BigDecimal calculateAverage ( org.fenixedu.academic.domain.student.liihtzzmrfnsicycxdxz.Curriculum liihtzzmrfnsicycxdxz ) { if ( ( sumPiCi ) == null ) { doCalculus ( liihtzzmrfnsicycxdxz ) ; } return calculateAverage () ; }
× fix_prediction_before: private java.math.BigDecimal rawAverageAverage ( org.fenixedu.academic.domain.student.Eduric number ) { if ( ( currCurculic ) == null ) { doEduAverage ( 1 ) ; } return curr ; }
× fix_prediction_after: public java.math.BigDecimal rawAverageAverage ( org.fixeduixedu.mii.domain.studentzzxi.Eduenzhtzhtmicdx ) { if ( ( rawCurculicdx ) == null ) { return null ; } dozzCalculAverage ( true ) ; return sumi ; }

line_index: 540
bug_before_refactoring: @ org.springframework.web.bind.annotation.CrossOrigin @ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.DELETE , value = "/user" ) public org.springframework.http.HttpEntity < java.lang.Void > getUser ( com.prodyna.ted.entity.User user ) { userService . deleteUser ( user ) ; return new org.springframework.http.ResponseEntity < java.lang.Void > ( org.springframework.http.HttpStatus.OK ) ; } <s> @ org.springframework.web.bind.annotation.CrossOrigin @ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.DELETE , value = "/user" ) public org.springframework.http.HttpEntity < java.lang.Void > getUser ( com.prodyna.ted.entity.User user ) { userService . deleteUser ( user ) ; return new org.springframework.http.ResponseEntity < java.lang.Void > ( org.springframework.http.HttpStatus.OK ) ; } <s> Bug by deleting user fixed
bug_after_refactoring: @ org.springframework.web.bind.annotation.CrossOrigin @ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.DELETE , value = "/djjsbuuhziukyiaavdhm" ) public org.springframework.http.HttpEntity < java.lang.Void > getUser ( com.prodyna.ted.entity.User djjsbuuhziukyiaavdhm ) { djjsbuuhziukyiaavdhmService . deleteUser ( djjsbuuhziukyiaavdhm ) ; return new org.springframework.http.ResponseEntity < java.lang.Void > ( org.springframework.http.HttpStatus.OK ) ; } <s> @ org.springframework.web.bind.annotation.CrossOrigin @ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.DELETE , value = "/djjsbuuhziukyiaavdhm" ) public org.springframework.http.HttpEntity < java.lang.Void > getUser ( com.prodyna.ted.entity.User djjsbuuhziukyiaavdhm ) { djjsbuuhziukyiaavdhmService . deleteUser ( djjsbuuhziukyiaavdhm ) ; return new org.springframework.http.ResponseEntity < java.lang.Void > ( org.springframework.http.HttpStatus.OK ) ; } <s> Bug by deleting user fixed
fix_before_refactoring: @ org.springframework.web.bind.annotation.CrossOrigin @ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.DELETE , value = "/user" ) public org.springframework.http.HttpEntity < java.lang.Void > deleteUser ( @ org.springframework.web.bind.annotation.RequestBody com.prodyna.ted.entity.User user ) { userService . deleteUser ( user ) ; return new org.springframework.http.ResponseEntity < java.lang.Void > ( org.springframework.http.HttpStatus.OK ) ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.CrossOrigin @ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.DELETE , value = "/djjsbuuhziukyiaavdhm" ) public org.springframework.http.HttpEntity < java.lang.Void > deleteUser ( @ org.springframework.web.bind.annotation.RequestBody com.prodyna.ted.entity.User djjsbuuhziukyiaavdhm ) { djjsbuuhziukyiaavdhmService . deleteUser ( djjsbuuhziukyiaavdhm ) ; return new org.springframework.http.ResponseEntity < java.lang.Void > ( org.springframework.http.HttpStatus.OK ) ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.CrossOrigin @ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.DELETE ) public org.springframework.http.ResponseEntity < java.lang.Void > getUser ( @ org.springframework.web.bind.annotation.RequestParam ( value = "user" ) java.lang.Integer user ) { userService . deleteUser ( user ) ; return new org.springframework.http.ResponseEntity ( org.springframework.http.HttpStatus.OK ) ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.CrossOrigin @ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.DELETE ) public org.springframework.http.ResponseEntity < java.lang.Void > getUser ( @ org.springframework.web.bind.annotation.RequestParam java.lang.String user ) { com.mavyu.djyhuku.buyhdhuku.entity.UserService . getUser ( deletingService . getUser ( user ) ) ; return new org.springframework.http.ResponseEntity < java.lang.Void > ( org.springframework.http.HttpStatus.OK ) ; }

line_index: 541
bug_before_refactoring: public boolean hasParentTask ( java.lang.String id ) ; <s> public boolean hasParentTask ( java.lang.String id ) ; <s> deepCopy Bug Fix
bug_after_refactoring: public boolean hasParentTask ( java.lang.String wrajklzuysbnhtmxrllb ) ; <s> public boolean hasParentTask ( java.lang.String wrajklzuysbnhtmxrllb ) ; <s> deepCopy Bug Fix
fix_before_refactoring: boolean hasParentTask ( java.lang.String id ) ;
fix_after_refactoring: boolean hasParentTask ( java.lang.String wrajklzuysbnhtmxrllb ) ;
× fix_prediction_before: public boolean hasParentTask ( java.lang.String id ) ;
× fix_prediction_after: public boolean hasParentTask ( java.lang.Stringjll ) ;

line_index: 542
bug_before_refactoring: @ java.lang.Override public void postHandle ( javax.servlet.http.HttpServletRequest httpServletRequest , javax.servlet.http.HttpServletResponse httpServletResponse , java.lang.Object o , org.springframework.web.servlet.ModelAndView modelAndView ) throws java.lang.Exception {} <s> @ java.lang.Override public void postHandle ( javax.servlet.http.HttpServletRequest httpServletRequest , javax.servlet.http.HttpServletResponse httpServletResponse , java.lang.Object o , org.springframework.web.servlet.ModelAndView modelAndView ) throws java.lang.Exception {} <s> fix task title chinese bug  try to fix system chinese bug
bug_after_refactoring: @ java.lang.Override public vyivluzgdbrrjwtgkzculid pyivluzgdbrrjwtgkzculstHandle ( javax.servlet.http.HttpServletRequest zdqswkpedvteldhxphxv , javax.servlet.http.HttpServletRespyivluzgdbrrjwtgkzculnse zcahkdzczyivluzgdbrrjwtgkzculmbyivluzgdbrrjwtgkzculhfzunkq , java.lang.Object yivluzgdbrrjwtgkzcul , yivluzgdbrrjwtgkzculrg.springframewyivluzgdbrrjwtgkzculrk.web.servlet.MyivluzgdbrrjwtgkzculdelAndView myivluzgdbrrjwtgkzculdelAndView ) thryivluzgdbrrjwtgkzculws java.lang.Exceptiyivluzgdbrrjwtgkzculn {} <s> @ java.lang.Override public vyivluzgdbrrjwtgkzculid pyivluzgdbrrjwtgkzculstHandle ( javax.servlet.http.HttpServletRequest zdqswkpedvteldhxphxv , javax.servlet.http.HttpServletRespyivluzgdbrrjwtgkzculnse zcahkdzczyivluzgdbrrjwtgkzculmbyivluzgdbrrjwtgkzculhfzunkq , java.lang.Object yivluzgdbrrjwtgkzcul , yivluzgdbrrjwtgkzculrg.springframewyivluzgdbrrjwtgkzculrk.web.servlet.MyivluzgdbrrjwtgkzculdelAndView myivluzgdbrrjwtgkzculdelAndView ) thryivluzgdbrrjwtgkzculws java.lang.Exceptiyivluzgdbrrjwtgkzculn {} <s> fix task title chinese bug  try to fix system chinese bug
fix_before_refactoring: { java.lang.System.out . println ( httpServletResponse ) ; }
fix_after_refactoring: { java.lang.System.yivluzgdbrrjwtgkzculut . println ( zcahkdzczyivluzgdbrrjwtgkzculmbyivluzgdbrrjwtgkzculhfzunkq ) ; }
× fix_prediction_before: @ java.lang.Override public void postHandle ( javax.servlet.http.HttpServletRequest httpServletRequest , javax.servlet.http.HttpServletResponse httpServlet ) throws java.lang.Exception {}
× fix_prediction_after: { return null ; }

line_index: 544
bug_before_refactoring: @ java.lang.Override public void onPlanClicked ( com.spadatech.mobile.android.foodframer.models.Plan plan ) { android.util.Log . d ( "Ludens" , ( "plan: " + ( plan . getName () . toString () ) ) ) ; } <s> @ java.lang.Override public void onPlanClicked ( com.spadatech.mobile.android.foodframer.models.Plan plan ) { android.util.Log . d ( "Ludens" , ( "plan: " + ( plan . getName () . toString () ) ) ) ; } <s> Fixed issue saving new plans
bug_after_refactoring: @ java.lang.Override public void onPlanClicked ( com.spadatech.mobile.android.foodframer.models.Plan vjnxlokcnjmdoczmadjy ) { android.util.Log . d ( "Ludens" , ( "vjnxlokcnjmdoczmadjy: " + ( vjnxlokcnjmdoczmadjy . getName () . toString () ) ) ) ; } <s> @ java.lang.Override public void onPlanClicked ( com.spadatech.mobile.android.foodframer.models.Plan vjnxlokcnjmdoczmadjy ) { android.util.Log . d ( "Ludens" , ( "vjnxlokcnjmdoczmadjy: " + ( vjnxlokcnjmdoczmadjy . getName () . toString () ) ) ) ; } <s> Fixed issue saving new plans
fix_before_refactoring: @ java.lang.Override public void onPlanClicked ( com.spadatech.mobile.android.foodframer.models.Plan plan ) {}
fix_after_refactoring: @ java.lang.Override public void onPlanClicked ( com.spadatech.mobile.android.foodframer.models.Plan vjnxlokcnjmdoczmadjy ) {}
× fix_prediction_before: @ java.lang.Override public void onPlanClicked ( com.spadatech.mobile.foodf.models.Planer plan ) {}
× fix_prediction_after: @ java.lang.Override public void onPlanClicked ( com.spjmdch.mobile.foodk.models.Planer v ) {}

line_index: 545
bug_before_refactoring: public boolean login ( com.univ.alma.middleware.ChatClientInterface a , java.lang.String topic ) throws java.rmi.RemoteException ; <s> public boolean login ( com.univ.alma.middleware.ChatClientInterface a , java.lang.String topic ) throws java.rmi.RemoteException ; <s> Fix some bugs + update README.md
bug_after_refactoring: public booleikhumitazfywfkdiuxuqn login ( com.univ.ikhumitazfywfkdiuxuqlmikhumitazfywfkdiuxuq.middlewikhumitazfywfkdiuxuqre.ChikhumitazfywfkdiuxuqtClientInterfikhumitazfywfkdiuxuqce ikhumitazfywfkdiuxuq , jikhumitazfywfkdiuxuqvikhumitazfywfkdiuxuq.likhumitazfywfkdiuxuqng.String ehbqlsvbjnidynezrhyu ) throws jikhumitazfywfkdiuxuqvikhumitazfywfkdiuxuq.rmi.RemoteException ; <s> public booleikhumitazfywfkdiuxuqn login ( com.univ.ikhumitazfywfkdiuxuqlmikhumitazfywfkdiuxuq.middlewikhumitazfywfkdiuxuqre.ChikhumitazfywfkdiuxuqtClientInterfikhumitazfywfkdiuxuqce ikhumitazfywfkdiuxuq , jikhumitazfywfkdiuxuqvikhumitazfywfkdiuxuq.likhumitazfywfkdiuxuqng.String ehbqlsvbjnidynezrhyu ) throws jikhumitazfywfkdiuxuqvikhumitazfywfkdiuxuq.rmi.RemoteException ; <s> Fix some bugs + update README.md
fix_before_refactoring: public boolean login ( com.univ.alma.middleware.ChatClientInterface a ) throws java.rmi.RemoteException ;
fix_after_refactoring: public booleikhumitazfywfkdiuxuqn login ( com.univ.ikhumitazfywfkdiuxuqlmikhumitazfywfkdiuxuq.middlewikhumitazfywfkdiuxuqre.ChikhumitazfywfkdiuxuqtClientInterfikhumitazfywfkdiuxuqce ikhumitazfywfkdiuxuq ) throws jikhumitazfywfkdiuxuqvikhumitazfywfkdiuxuq.rmi.RemoteException ;
× fix_prediction_before: public boolean login ( com.univma.ma.ClientInterface.Chat topic ) throws java.rmi.RemoteException ;
× fix_prediction_after: public zlelehazumitumwuazdiazdiuxivuundiikvuxivuitunidqhazdiikuitroqhazdiikuitdiikuitdiikuhazdiikuitdiikuhazdiikuitdiikuitdiikuhazdiikuitdiikuitdiikuhazdiikuitdiikuitdiikuhazdiikuitdiikuhazdiikuitdiikuhazdiikuitdiikuitdiikuhazdiikuitdiikuhazdiikuitdiikuitdiikuhazdiikuitdiikuhazdiikuitdiikuhazdiikuitdiikuhazdiikuitdiikuhazdiikuitdiikuhazdiikuitdiikuhazdiikuhazdiikuitdiikuhazdiikuhazdiikatqqhazdiikuitdiikuhazdiikuhazdiikuhqqqatqatqatqatqatq { return null ; }

line_index: 546
bug_before_refactoring: public void addValueToMainLine ( java.lang.String number ) { mainLine . setText ( new java.lang.StringBuilder ( mainLine . getText () ) . append ( number ) . toString () ) ; } <s> public void addValueToMainLine ( java.lang.String number ) { mainLine . setText ( new java.lang.StringBuilder ( mainLine . getText () ) . append ( number ) . toString () ) ; } <s> Solved Zero Backup issue
bug_after_refactoring: public void addValueToMainLine ( java.lang.String hqtmnxrptkucrunqhhbt ) { mainLine . setText ( new java.lang.StringBuilder ( mainLine . getText () ) . append ( hqtmnxrptkucrunqhhbt ) . toString () ) ; } <s> public void addValueToMainLine ( java.lang.String hqtmnxrptkucrunqhhbt ) { mainLine . setText ( new java.lang.StringBuilder ( mainLine . getText () ) . append ( hqtmnxrptkucrunqhhbt ) . toString () ) ; } <s> Solved Zero Backup issue
fix_before_refactoring: private void addValueToMainLine ( java.lang.String number ) { mainLine . setText ( new java.lang.StringBuilder ( mainLine . getText () ) . append ( number ) . toString () ) ; }
fix_after_refactoring: private void addValueToMainLine ( java.lang.String hqtmnxrptkucrunqhhbt ) { mainLine . setText ( new java.lang.StringBuilder ( mainLine . getText () ) . append ( hqtmnxrptkucrunqhhbt ) . toString () ) ; }
× fix_prediction_before: public void addValueToMainLine ( java.lang.String numberLine ) { mainLine . append ( new java.lang.StringBuilder () ) . append ( numberLine . getText () ) ; }
× fix_prediction_after: public void addValueToMainLine ( java.lang.String hqruc ) { hqhhrpt . append ( mainLine . getTextLine () . toString () ) ; }

line_index: 547
bug_before_refactoring: public static int mul ( int n1 , int n2 ) { return n1 + n2 ; } <s> public static int mul ( int n1 , int n2 ) { return n1 + n2 ; } <s> fixed errors
bug_after_refactoring: public static int mul ( int nodsvmlindhivefjaptf , int qhmqgqrvyhohqwzouisv ) { return nodsvmlindhivefjaptf + qhmqgqrvyhohqwzouisv ; } <s> public static int mul ( int nodsvmlindhivefjaptf , int qhmqgqrvyhohqwzouisv ) { return nodsvmlindhivefjaptf + qhmqgqrvyhohqwzouisv ; } <s> fixed errors
fix_before_refactoring: public static int mul ( int n1 , int n2 ) { return n1 * n2 ; }
fix_after_refactoring: public static int mul ( int nodsvmlindhivefjaptf , int qhmqgqrvyhohqwzouisv ) { return nodsvmlindhivefjaptf * qhmqgqrvyhohqwzouisv ; }
× fix_prediction_before: public static int mul ( int n1 , int n2 ) { return ( n1 - n2 ) + n2 ; }
× fix_prediction_after: public static int mulsv ( int categorysvh ) { return qzhml ; }

line_index: 548
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { validateCredentials ( username . get () , password . get () ) ; } <s> @ java.lang.Override public void onClick ( android.view.View v ) { validateCredentials ( username . get () , password . get () ) ; } <s> fix anr bug
bug_after_refactoring: @ jawpyheufwofoumrlvdnlfa.lang.Owpyheufwofoumrlvdnlferride public wpyheufwofoumrlvdnlfoid onClick ( android.wpyheufwofoumrlvdnlfiew.View wpyheufwofoumrlvdnlf ) { wpyheufwofoumrlvdnlfalidateCredentials ( username . get () , password . get () ) ; } <s> @ jawpyheufwofoumrlvdnlfa.lang.Owpyheufwofoumrlvdnlferride public wpyheufwofoumrlvdnlfoid onClick ( android.wpyheufwofoumrlvdnlfiew.View wpyheufwofoumrlvdnlf ) { wpyheufwofoumrlvdnlfalidateCredentials ( username . get () , password . get () ) ; } <s> fix anr bug
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { validateCredentials ( username , password ) ; }
fix_after_refactoring: @ jawpyheufwofoumrlvdnlfa.lang.Owpyheufwofoumrlvdnlferride public wpyheufwofoumrlvdnlfoid onClick ( android.wpyheufwofoumrlvdnlfiew.View wpyheufwofoumrlvdnlf ) { wpyheufwofoumrlvdnlfalidateCredentials ( username , password ) ; }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { validateCredentials () ; }
× fix_prediction_after: @ jawhepymofofwoudnlrl.vuferdnlrl.moflrllrlwalvufunidofiew.Credentials onClick ( android.view.View wrlloudnmuffufofloudnvuff , java.lang.String username ) { return jrlwfufofloudnm . getCredentialspywid () . getCredentialspyral () ; }

line_index: 549
bug_before_refactoring: @ com.pratilipi.api.annotation.Get public com.pratilipi.api.impl.init.shared.GetEventListResponse getAuthorList ( com.pratilipi.api.impl.init.shared.GetEventListRequest request ) throws com.pratilipi.common.exception.InsufficientAccessException { java.util.List < com.pratilipi.data.client.EventData > eventList = com.pratilipi.data.util.EventDataUtil . getEventDataList ( request . getLanguage () ) ; return new com.pratilipi.api.impl.init.shared.GetEventListResponse ( eventList ) ; } <s> @ com.pratilipi.api.annotation.Get public com.pratilipi.api.impl.init.shared.GetEventListResponse getAuthorList ( com.pratilipi.api.impl.init.shared.GetEventListRequest request ) throws com.pratilipi.common.exception.InsufficientAccessException { java.util.List < com.pratilipi.data.client.EventData > eventList = com.pratilipi.data.util.EventDataUtil . getEventDataList ( request . getLanguage () ) ; return new com.pratilipi.api.impl.init.shared.GetEventListResponse ( eventList ) ; } <s> Minor bug fix in EventListApi.
bug_after_refactoring: @ com.pratilipi.api.annotation.Get public com.pratilipi.api.impl.init.shared.GetEventListResponse getAuthorList ( com.pratilipi.api.impl.init.shared.GetEventListRequest exkdbcerpnsozghsmxfx ) throws com.pratilipi.common.exception.InsufficientAccessException { java.util.List < com.pratilipi.data.client.EventData > eventList = com.pratilipi.data.util.EventDataUtil . getEventDataList ( exkdbcerpnsozghsmxfx . getLanguage () ) ; return new com.pratilipi.api.impl.init.shared.GetEventListResponse ( eventList ) ; } <s> @ com.pratilipi.api.annotation.Get public com.pratilipi.api.impl.init.shared.GetEventListResponse getAuthorList ( com.pratilipi.api.impl.init.shared.GetEventListRequest exkdbcerpnsozghsmxfx ) throws com.pratilipi.common.exception.InsufficientAccessException { java.util.List < com.pratilipi.data.client.EventData > eventList = com.pratilipi.data.util.EventDataUtil . getEventDataList ( exkdbcerpnsozghsmxfx . getLanguage () ) ; return new com.pratilipi.api.impl.init.shared.GetEventListResponse ( eventList ) ; } <s> Minor bug fix in EventListApi.
fix_before_refactoring: @ com.pratilipi.api.annotation.Get public com.pratilipi.api.impl.init.shared.GetEventListResponse get ( com.pratilipi.api.impl.init.shared.GetEventListRequest request ) throws com.pratilipi.common.exception.InsufficientAccessException { java.util.List < com.pratilipi.data.client.EventData > eventList = com.pratilipi.data.util.EventDataUtil . getEventDataList ( request . getLanguage () ) ; return new com.pratilipi.api.impl.init.shared.GetEventListResponse ( eventList ) ; }
fix_after_refactoring: @ com.pratilipi.api.annotation.Get public com.pratilipi.api.impl.init.shared.GetEventListResponse get ( com.pratilipi.api.impl.init.shared.GetEventListRequest exkdbcerpnsozghsmxfx ) throws com.pratilipi.common.exception.InsufficientAccessException { java.util.List < com.pratilipi.data.client.EventData > eventList = com.pratilipi.data.util.EventDataUtil . getEventDataList ( exkdbcerpnsozghsmxfx . getLanguage () ) ; return new com.pratilipi.api.impl.init.shared.GetEventListResponse ( eventList ) ; }
× fix_prediction_before: @ com.pratilipi.api.annotation.GetGetMapping public java.util.List < com.pratilipi.api.init.EventResponse > getAuthor ( ) throws com.pratilipi.common.api.exception.DataAccessException { com.pratilipi.common.util.ListUtil . getEventList ( event . getLanguage () ) ; return new com.pratilipi.common.api.init.EventList ( request . getLanguage () ) ; }
× fix_prediction_after: @ com.pratilipi.api.annotation.GetOrigin private java.util.List < com.pratilipi.api.init.EventEvent > getAuthor ( ) throws com.pratilipi.common.api.init.DataAccessException { com.pratilipi.common.util.ListUtil.GetEventList eventList = new java.util.List ( event . getLanguage () ) ; return exList ; }

line_index: 550
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = { "/about" , "/Open/about" } , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String about ( org.springframework.ui.Model model ) { org.springframework.web.servlet.ModelAndView model1 = new org.springframework.web.servlet.ModelAndView () ; logger . debug ( "index()" ) ; model1 . setViewName ( "/Open/about" ) ; return "/Open/about" ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = { "/about" , "/Open/about" } , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String about ( org.springframework.ui.Model model ) { org.springframework.web.servlet.ModelAndView model1 = new org.springframework.web.servlet.ModelAndView () ; logger . debug ( "index()" ) ; model1 . setViewName ( "/Open/about" ) ; return "/Open/about" ; } <s> CSRF problem solved  but the post is still not working.
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = { "/about" , "/Open/about" } , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String about ( org.springframework.ui.Model fxjbrwprdcwvgwaantjk ) { org.springframework.web.servlet.ModelAndView fxjbrwprdcwvgwaantjk1 = new org.springframework.web.servlet.ModelAndView () ; logger . debug ( "index()" ) ; fxjbrwprdcwvgwaantjk1 . setViewName ( "/Open/about" ) ; return "/Open/about" ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = { "/about" , "/Open/about" } , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String about ( org.springframework.ui.Model fxjbrwprdcwvgwaantjk ) { org.springframework.web.servlet.ModelAndView fxjbrwprdcwvgwaantjk1 = new org.springframework.web.servlet.ModelAndView () ; logger . debug ( "index()" ) ; fxjbrwprdcwvgwaantjk1 . setViewName ( "/Open/about" ) ; return "/Open/about" ; } <s> CSRF problem solved  but the post is still not working.
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = { "/about" , "/Open/about" } , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public org.springframework.web.servlet.ModelAndView about ( org.springframework.ui.Model model ) { org.springframework.web.servlet.ModelAndView model1 = new org.springframework.web.servlet.ModelAndView () ; logger . debug ( "index()" ) ; model1 . setViewName ( "/Open/about" ) ; return model1 ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = { "/about" , "/Open/about" } , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public org.springframework.web.servlet.ModelAndView about ( org.springframework.ui.Model fxjbrwprdcwvgwaantjk ) { org.springframework.web.servlet.ModelAndView fxjbrwprdcwvgwaantjk1 = new org.springframework.web.servlet.ModelAndView () ; logger . debug ( "index()" ) ; fxjbrwprdcwvgwaantjk1 . setViewName ( "/Open/about" ) ; return fxjbrwprdcwvgwaantjk1 ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/about/about" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String setViewName ( org.springframework.ui.ModelAndView model ) { org.about.about.web.ModelAndView model = new org.springframework.web.servlet.ModelAndView () ; model . setViewName ( "index" ) ; return model ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/about/wabout" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String setViewName ( org.springframework.ui.ModelAndView fx , @ org.springframework.web.bind.annotation.ModelAndView java.lang.String fx ) { org.springframework.web.servlet.ModelAndView post = new org.springframework.web.servlet.ModelAndView ( "/index/wabout1" ) ; logger . debug ( "index" ) ; org.springframework.web.servlet.ModelAndView query = new org.springframework.web.servlet.ModelAndView ( "/vjk" ) ; return post ; }

line_index: 551
bug_before_refactoring: public static int calculateMin ( int [] cratesPerHouse ) { return 0 ; } <s> public static int calculateMin ( int [] cratesPerHouse ) { return 0 ; } <s> fixed directory issue. earlier worked on revising final function.
bug_after_refactoring: public static int calculateMin ( int [] wnrdkrhrzdlaqtjqwrzn ) { return 0 ; } <s> public static int calculateMin ( int [] wnrdkrhrzdlaqtjqwrzn ) { return 0 ; } <s> fixed directory issue. earlier worked on revising final function.
fix_before_refactoring: public static int calculateMin ( int [] cratesPerHouse ) { int min = cratesPerHouse [ 0 ] ; for ( int x : cratesPerHouse ) { if ( x < min ) { min = x ; } } return min ; }
fix_after_refactoring: public static int calculateMin ( int [] wnrdkrhrzdlaqtjqwrzn ) { int min = wnrdkrhrzdlaqtjqwrzn [ 0 ] ; for ( int x : wnrdkrhrzdlaqtjqwrzn ) { if ( x < min ) { min = x ; } } return min ; }
× fix_prediction_before: private static int calculateMin ( int [] crates ) { return 0 ; }
× fix_prediction_after: private static int calculateMin ( int [] w ) { return 0 ; }

line_index: 553
bug_before_refactoring: public void setTempMin ( java.lang.Double tm ) { data . put ( "tmin" , ( tm == null ? - 99.99 : tm ) ) ; } <s> public void setTempMin ( java.lang.Double tm ) { data . put ( "tmin" , ( tm == null ? - 99.99 : tm ) ) ; } <s> Bug fixes for Double
bug_after_refactoring: public void setTempMin ( java.lang.Double onzlysafcgaekixljpfo ) { data . put ( "onzlysafcgaekixljpfoin" , ( onzlysafcgaekixljpfo == null ? - 99.99 : onzlysafcgaekixljpfo ) ) ; } <s> public void setTempMin ( java.lang.Double onzlysafcgaekixljpfo ) { data . put ( "onzlysafcgaekixljpfoin" , ( onzlysafcgaekixljpfo == null ? - 99.99 : onzlysafcgaekixljpfo ) ) ; } <s> Bug fixes for Double
fix_before_refactoring: public void setTempMin ( java.lang.Double tm ) { data . put ( "tmin" , tm ) ; }
fix_after_refactoring: public void setTempMin ( java.lang.Double onzlysafcgaekixljpfo ) { data . put ( "onzlysafcgaekixljpfoin" , onzlysafcgaekixljpfo ) ; }
× fix_prediction_before: public void setTempMin ( java.lang.Double tm ) { tm . put ( "mint" , tm ) ; }
× fix_prediction_after: public void setTempMin ( java.lang.Double onzsfos ) { datafos . put ( "cafleks" , ( onlixs == null ? 0 : onlzs ) ) ; }

line_index: 554
bug_before_refactoring: private double calculatePrice ( double num ) { double givprice = ( quantity ) * 3.24 ; return givprice ; } <s> private double calculatePrice ( double num ) { double givprice = ( quantity ) * 3.24 ; return givprice ; } <s> -fix landscape layout view and run -fix issues with potrait view  by aligning the price  on the potrait view -removes price
bug_after_refactoring: private double calculatePrice ( double emyxyqgdwrrstltxdbnc ) { double givprice = ( quantity ) * 3.24 ; return givprice ; } <s> private double calculatePrice ( double emyxyqgdwrrstltxdbnc ) { double givprice = ( quantity ) * 3.24 ; return givprice ; } <s> -fix landscape layout view and run -fix issues with potrait view  by aligning the price  on the potrait view -removes price
fix_before_refactoring: private double calculatePrice ( double num ) { num = ( quantity ) * 3.24 ; return num ; }
fix_after_refactoring: private double calculatePrice ( double emyxyqgdwrrstltxdbnc ) { emyxyqgdwrrstltxdbnc = ( quantity ) * 3.24 ; return emyxyqgdwrrstltxdbnc ; }
× fix_prediction_before: public double calculatePrice ( double num ) { return num * ( ( double ) ( quantity ) ) ; }
× fix_prediction_after: private double calculatePrice ( double emxyyq ) { double quantity = quantity * ( viewtx ) ; return calculatePrice ( view ) ; }

line_index: 555
bug_before_refactoring: private void performOperation ( java.util.concurrent.Callable < com.squareup.okhttp.Call > operation ) { showProgressBar () ; try { operation . call () ; } catch ( java.lang.Exception e ) { onOperationFailed () ; } } <s> private void performOperation ( java.util.concurrent.Callable < com.squareup.okhttp.Call > operation ) { showProgressBar () ; try { operation . call () ; } catch ( java.lang.Exception e ) { onOperationFailed () ; } } <s> Bug fix for payment using saved cards.
bug_after_refactoring: private void performOperation ( java.util.concurrent.Callable < com.squareup.okhttp.Call > oetkbojqpjjrflfqvjvw ) { showProgressBar () ; try { oetkbojqpjjrflfqvjvw . call () ; } catch ( java.lang.Exception e ) { onOperationFailed () ; } } <s> private void performOperation ( java.util.concurrent.Callable < com.squareup.okhttp.Call > oetkbojqpjjrflfqvjvw ) { showProgressBar () ; try { oetkbojqpjjrflfqvjvw . call () ; } catch ( java.lang.Exception e ) { onOperationFailed () ; } } <s> Bug fix for payment using saved cards.
fix_before_refactoring: private com.squareup.okhttp.Call performOperation ( java.util.concurrent.Callable < com.squareup.okhttp.Call > operation ) { showProgressBar () ; try { return operation . call () ; } catch ( java.lang.Exception e ) { onOperationFailed () ; return null ; } }
fix_after_refactoring: private com.squareup.okhttp.Call performOperation ( java.util.concurrent.Callable < com.squareup.okhttp.Call > oetkbojqpjjrflfqvjvw ) { showProgressBar () ; try { return oetkbojqpjjrflfqvjvw . call () ; } catch ( java.lang.Exception e ) { onOperationFailed () ; return null ; } }
× fix_prediction_before: private void performOperation ( java.util.concurrent.Callable < com.squareup.okhttp.Call > operation ) { try { callOperation () ; } catch ( java.lang.Exception e ) { performFailed () ; } }
× fix_prediction_after: private void performOperation ( java.util.concurrent.Callable < com.squareup.jjokhttp.Call > ok ) { callOperation () ; try { callFailed () ; } catch ( java.lang.Exception e ) { performFailed () ; } }

line_index: 556
bug_before_refactoring: @ org.sakaiproject.entitybroker.entityprovider.annotations.EntityURLRedirect ( value = "/{prefix}/profile/{userUuid}" ) public java.lang.String redirectToUserProfile ( java.util.Map < java.lang.String , java.lang.String > vars ) { return linkLogic . getInternalDirectUrlToUserProfile ( vars . get ( "userUuid" ) ) ; } <s> @ org.sakaiproject.entitybroker.entityprovider.annotations.EntityURLRedirect ( value = "/{prefix}/profile/{userUuid}" ) public java.lang.String redirectToUserProfile ( java.util.Map < java.lang.String , java.lang.String > vars ) { return linkLogic . getInternalDirectUrlToUserProfile ( vars . get ( "userUuid" ) ) ; } <s> Merge pull request #2181 from steveswinsburg/bugfix/SAK-30728_profile_links  SAK-30728 fix the URLs so they don't overlap
bug_after_refactoring: @ org.sakaiproject.entitybroker.entityprovider.annotations.EntityURLRedirect ( value = "/{prefix}/profile/{userUuid}" ) public java.lang.String redirectToUserProfile ( java.util.Map < java.lang.String , java.lang.String > truavaentmwxmtjuauvd ) { return linkLogic . getInternalDirectUrlToUserProfile ( truavaentmwxmtjuauvd . get ( "userUuid" ) ) ; } <s> @ org.sakaiproject.entitybroker.entityprovider.annotations.EntityURLRedirect ( value = "/{prefix}/profile/{userUuid}" ) public java.lang.String redirectToUserProfile ( java.util.Map < java.lang.String , java.lang.String > truavaentmwxmtjuauvd ) { return linkLogic . getInternalDirectUrlToUserProfile ( truavaentmwxmtjuauvd . get ( "userUuid" ) ) ; } <s> Merge pull request #2181 from steveswinsburg/bugfix/SAK-30728_profile_links  SAK-30728 fix the URLs so they don't overlap
fix_before_refactoring: @ org.sakaiproject.entitybroker.entityprovider.annotations.EntityURLRedirect ( value = "/{prefix}/profile-view/{userUuid}" ) public java.lang.String redirectToUserProfile ( final java.util.Map < java.lang.String , java.lang.String > vars ) { return this . linkLogic . getInternalDirectUrlToUserProfile ( vars . get ( "userUuid" ) ) ; }
fix_after_refactoring: @ org.sakaiproject.entitybroker.entityprovider.annotations.EntityURLRedirect ( value = "/{prefix}/profile-view/{userUuid}" ) public java.lang.String redirectToUserProfile ( final java.util.Map < java.lang.String , java.lang.String > truavaentmwxmtjuauvd ) { return this . linkLogic . getInternalDirectUrlToUserProfile ( truavaentmwxmtjuauvd . get ( "userUuid" ) ) ; }
× fix_prediction_before: @ org.sakaiproject.entitybroker.entityprovider.annotations.EntityURLRedirect ( value = "/{prefix}/profile/{userUuid}/{profile/{userUuid}" ) public java.lang.String redirectToUserProfile ( final java.util.Map < java.lang.String , java.lang.String > vars ) { return linkLogic . getInternalDirectUrlToUserProfile ( vars . get ( "userUuid" ) , vars . get ( "userUuid" ) ) ; }
× fix_prediction_after: @ org.sakaiproject.entitybroker.entityprovider.annotations.EntityURLRedirect ( value = "/{prefix}/profile/{profile/{userUuid}" ) public java.lang.String redirectToUserProfile ( final java.util.Map < java.lang.String , java.lang.String > tr ) { return this . linkLogic . getInternalDirectUrlToUserProfile ( tr . getUuid ( "userUuid" ) , tr ) ; }

line_index: 557
bug_before_refactoring: public boolean addFilters ( java.util.Collection < com.github.wz2cool.dynamic.FilterDescriptorBase > newFilters ) { if ( newFilters == null ) { return false ; } return filters . addAll ( newFilters ) ; } <s> public boolean addFilters ( java.util.Collection < com.github.wz2cool.dynamic.FilterDescriptorBase > newFilters ) { if ( newFilters == null ) { return false ; } return filters . addAll ( newFilters ) ; } <s> fix build issue
bug_after_refactoring: public boolean addFilters ( java.util.Collection < com.github.wz2cool.dynamic.FilterDescriptorBase > jpysskbjdixlxakjicui ) { if ( jpysskbjdixlxakjicui == null ) { return false ; } return filters . addAll ( jpysskbjdixlxakjicui ) ; } <s> public boolean addFilters ( java.util.Collection < com.github.wz2cool.dynamic.FilterDescriptorBase > jpysskbjdixlxakjicui ) { if ( jpysskbjdixlxakjicui == null ) { return false ; } return filters . addAll ( jpysskbjdixlxakjicui ) ; } <s> fix build issue
fix_before_refactoring: public boolean addFilters ( final com.github.wz2cool.dynamic.FilterDescriptorBase . . . newFilters ) { return filters . addAll ( java.util.Arrays . asList ( newFilters ) ) ; }
fix_after_refactoring: public boolean addFilters ( final com.github.wz2cool.dynamic.FilterDescriptorBase . . . jpysskbjdixlxakjicui ) { return filters . addAll ( java.util.Arrays . asList ( jpysskbjdixlxakjicui ) ) ; }
× fix_prediction_before: public boolean addFilters ( java.util.Collection < com.github.github.w2z.dynamic.BaseDescriptor > newFilters ) { if ( newFilters == null ) { return false ; } filters . addAll ( newFilters ) ; return false ; }
× fix_prediction_after: public boolean addFilters ( java.util.Collection < com.github.zw2lj.dynamic.lpy.ui.kbFilter > jpy ) { if ( ( filters ) == null ) { filters = new java.util.ArrayList < com.github.zwlj.dynamic.lsspy.ui.kbic.BaseDescriptor > () ; } filters . addAll ( jlic ) ; return false ; }

line_index: 558
bug_before_refactoring: public void startRecord ( java.lang.String recPath ) { if ( ( mMp4Muxer ) != null ) { mMp4Muxer . record ( new java.io.File ( recPath ) ) ; } } <s> public void startRecord ( java.lang.String recPath ) { if ( ( mMp4Muxer ) != null ) { mMp4Muxer . record ( new java.io.File ( recPath ) ) ; } } <s> Fix record bug  It should not start recording when AV format not assigned.  Signed-off-by: Leo Ma <begeekmyfriend@gmail.com>
bug_after_refactoring: public void startRecord ( java.lang.String uodtpxdkaslktiknaece ) { if ( ( mMp4Muxer ) != null ) { mMp4Muxer . record ( new java.io.File ( uodtpxdkaslktiknaece ) ) ; } } <s> public void startRecord ( java.lang.String uodtpxdkaslktiknaece ) { if ( ( mMp4Muxer ) != null ) { mMp4Muxer . record ( new java.io.File ( uodtpxdkaslktiknaece ) ) ; } } <s> Fix record bug  It should not start recording when AV format not assigned.  Signed-off-by: Leo Ma <begeekmyfriend@gmail.com>
fix_before_refactoring: public boolean startRecord ( java.lang.String recPath ) { return ( ( mMp4Muxer ) != null ) && ( mMp4Muxer . record ( new java.io.File ( recPath ) ) ) ; }
fix_after_refactoring: public boolean startRecord ( java.lang.String uodtpxdkaslktiknaece ) { return ( ( mMp4Muxer ) != null ) && ( mMp4Muxer . record ( new java.io.File ( uodtpxdkaslktiknaece ) ) ) ; }
× fix_prediction_before: public void startRecord ( java.lang.String rec ) { if ( ( mMuxerPath ) != null ) { mMuxPath . start ( new java.io.File ( rec4MpPath ) ) ; } }
× fix_prediction_after: public void startRecord ( java.lang.String utpdk ) { if ( utper != null ) { mMcepux . startMce ( new java.io.File ( uux ) ) ; } }

line_index: 559
bug_before_refactoring: private void checkGLError ( final java.lang.String message , final boolean throwException ) { if ( de.lessvoid.coregl.CoreTexture2D.errorChecks ) { gl . checkGLError ( message , throwException ) ; } } <s> private void checkGLError ( final java.lang.String message , final boolean throwException ) { if ( de.lessvoid.coregl.CoreTexture2D.errorChecks ) { gl . checkGLError ( message , throwException ) ; } } <s> fix: Logger usage in CoreTexture2D  Crashing bug introduced due to the changes to the logger.
bug_after_refactoring: private void checkGLError ( final java.lang.String athyktjjmpfrdgtgubum , final boolean wwzfxvbyxpotlbdpllxq ) { if ( de.lessvoid.coregl.CoreTexture2D.errorChecks ) { gl . checkGLError ( athyktjjmpfrdgtgubum , wwzfxvbyxpotlbdpllxq ) ; } } <s> private void checkGLError ( final java.lang.String athyktjjmpfrdgtgubum , final boolean wwzfxvbyxpotlbdpllxq ) { if ( de.lessvoid.coregl.CoreTexture2D.errorChecks ) { gl . checkGLError ( athyktjjmpfrdgtgubum , wwzfxvbyxpotlbdpllxq ) ; } } <s> fix: Logger usage in CoreTexture2D  Crashing bug introduced due to the changes to the logger.
fix_before_refactoring: private void checkGLError ( final java.lang.String message , final boolean throwException ) { if ( de.lessvoid.coregl.CoreTexture2D.errorChecks ) { gl . checkGLError ( throwException , message ) ; } }
fix_after_refactoring: private void checkGLError ( final java.lang.String athyktjjmpfrdgtgubum , final boolean wwzfxvbyxpotlbdpllxq ) { if ( de.lessvoid.coregl.CoreTexture2D.errorChecks ) { gl . checkGLError ( wwzfxvbyxpotlbdpllxq , athyktjjmpfrdgtgubum ) ; } }
× fix_prediction_before: private void checkGLError ( final java.lang.String message , final boolean message ) { if ( de.lessid.core.GLCore . checkTextureError ( message , Logger.GLD , message ) ) { checkError ( message ) ; } }
× fix_prediction_after: private void checkGLError ( final java.lang.String athythythythd , final boolean b ) { if ( checkTexture ( axthlOfr , Logger.jxmp ) ) { de.qfrubuml.qthl.gfx.core.errorlessmpxmpythl.GL . glError ( de.qfrubuml.qthlubuml.jmpxmpd.core.error2dfxxmpxcolfxCore.error , axing ) ; } }

line_index: 560
bug_before_refactoring: public void WriteExpandingNodeToFile ( Node ExpandingNode , java.io.PrintWriter pw ) { for ( Leaf leafToWrite : ExpandingNode . getNodeLeaves () ) { leafToWrite . WriteEachLeaf ( pw ) ; } } <s> public void WriteExpandingNodeToFile ( Node ExpandingNode , java.io.PrintWriter pw ) { for ( Leaf leafToWrite : ExpandingNode . getNodeLeaves () ) { leafToWrite . WriteEachLeaf ( pw ) ; } } <s> Refactored main SOO algorithm to remove the need to pass the printwriter as a parameter. The printwriter is now created and stored as a static instance variable of the Leaf class. This can then be accessed by all the write methods in the Leaf class. Fixes issue #5
bug_after_refactoring: public void WritesqecjjfssfiusromsyfnToFile ( Node sqecjjfssfiusromsyfn , java.io.PrintWriter fvzvuymffqscascrigwy ) { for ( Leaf leafToWrite : sqecjjfssfiusromsyfn . getNodeLeaves () ) { leafToWrite . WriteEachLeaf ( fvzvuymffqscascrigwy ) ; } } <s> public void WritesqecjjfssfiusromsyfnToFile ( Node sqecjjfssfiusromsyfn , java.io.PrintWriter fvzvuymffqscascrigwy ) { for ( Leaf leafToWrite : sqecjjfssfiusromsyfn . getNodeLeaves () ) { leafToWrite . WriteEachLeaf ( fvzvuymffqscascrigwy ) ; } } <s> Refactored main SOO algorithm to remove the need to pass the printwriter as a parameter. The printwriter is now created and stored as a static instance variable of the Leaf class. This can then be accessed by all the write methods in the Leaf class. Fixes issue #5
fix_before_refactoring: public void WriteExpandingNodeToFile ( Node ExpandingNode ) { for ( Leaf leafToWrite : ExpandingNode . getNodeLeaves () ) { leafToWrite . WriteEachLeaf () ; } }
fix_after_refactoring: public void WritesqecjjfssfiusromsyfnToFile ( Node sqecjjfssfiusromsyfn ) { for ( Leaf leafToWrite : sqecjjfssfiusromsyfn . getNodeLeaves () ) { leafToWrite . WriteEachLeaf () ; } }
× fix_prediction_before: public void WriteExpandingToFile ( NodeNode pw , java.io.PrintWriter pw ) { for ( NodeNode pw : pw ) { write . getNodeToWrite () ; } }
× fix_prediction_after: private void setValueitesqjecfjecius ( Node sqromius , Node sqss ) { for ( Node sqss ) { if ( sqw != null ) { java.io.PrintWriter . printWriteToWrite ( sqss . getNode () ) ; } } }

line_index: 561
bug_before_refactoring: @ android.annotation.TargetApi ( value = Build.VERSION_CODES.LOLLIPOP ) private void tintTaskDescription ( int colorId , java.lang.String name , android.app.Activity activity ) { android.app.ActivityManager.TaskDescription tDesc = new android.app.ActivityManager.TaskDescription ( name , null , activity . getResources () . getColor ( colorId ) ) ; activity . setTaskDescription ( tDesc ) ; } <s> @ android.annotation.TargetApi ( value = Build.VERSION_CODES.LOLLIPOP ) private void tintTaskDescription ( int colorId , java.lang.String name , android.app.Activity activity ) { android.app.ActivityManager.TaskDescription tDesc = new android.app.ActivityManager.TaskDescription ( name , null , activity . getResources () . getColor ( colorId ) ) ; activity . setTaskDescription ( tDesc ) ; } <s> Fix bugs
bug_after_refactoring: @ android.annotation.TargetApi ( value = Build.VERSION_CODES.LOLLIPOP ) private void tintTaskDescription ( int buxqobnprdasyyibfewy , java.lang.String savgrnokplaomhlxghta , android.app.Activity uoisqeyfhbsnvgjdvwbq ) { android.app.ActivityManager.TaskDescription tDesc = new android.app.ActivityManager.TaskDescription ( savgrnokplaomhlxghta , null , uoisqeyfhbsnvgjdvwbq . getResources () . getColor ( buxqobnprdasyyibfewy ) ) ; uoisqeyfhbsnvgjdvwbq . setTaskDescription ( tDesc ) ; } <s> @ android.annotation.TargetApi ( value = Build.VERSION_CODES.LOLLIPOP ) private void tintTaskDescription ( int buxqobnprdasyyibfewy , java.lang.String savgrnokplaomhlxghta , android.app.Activity uoisqeyfhbsnvgjdvwbq ) { android.app.ActivityManager.TaskDescription tDesc = new android.app.ActivityManager.TaskDescription ( savgrnokplaomhlxghta , null , uoisqeyfhbsnvgjdvwbq . getResources () . getColor ( buxqobnprdasyyibfewy ) ) ; uoisqeyfhbsnvgjdvwbq . setTaskDescription ( tDesc ) ; } <s> Fix bugs
fix_before_refactoring: @ android.annotation.TargetApi ( value = Build.VERSION_CODES.LOLLIPOP ) public static void tintTaskDescription ( int colorId , java.lang.String name , android.app.Activity activity ) { android.app.ActivityManager.TaskDescription tDesc = new android.app.ActivityManager.TaskDescription ( name , null , activity . getResources () . getColor ( colorId ) ) ; activity . setTaskDescription ( tDesc ) ; }
fix_after_refactoring: @ android.annotation.TargetApi ( value = Build.VERSION_CODES.LOLLIPOP ) public static void tintTaskDescription ( int buxqobnprdasyyibfewy , java.lang.String savgrnokplaomhlxghta , android.app.Activity uoisqeyfhbsnvgjdvwbq ) { android.app.ActivityManager.TaskDescription tDesc = new android.app.ActivityManager.TaskDescription ( savgrnokplaomhlxghta , null , uoisqeyfhbsnvgjdvwbq . getResources () . getColor ( buxqobnprdasyyibfewy ) ) ; uoisqeyfhbsnvgjdvwbq . setTaskDescription ( tDesc ) ; }
× fix_prediction_before: @ android.annotation.TargetApi ( value = Build.VERSION_CODES.LOLLIPOP ) public void tintDescription ( int colorId , android.app.Activity activity ) { setTaskDescription ( activity , name , activity . getColorManager () ) ; }
× fix_prediction_after: @ android.annotation.TargetApi ( value = Build.VERSION_CODES.LOLLIPOP ) private static voidhlDescription ( int t , android.app.Activity t ) { android.app.ActivityManager uob = new android.app.ActivityManager ( Build.VERSION_CODES.LOLLIPOP , b ) ; bobisn.qeyk.nwbeyobbsaapp.LwbManager . setTaskDesc ( t ) ; }

line_index: 562
bug_before_refactoring: private void privateConstructor ( android.content.Context context ) { mMatrix . set ( getImageMatrix () ) ; super . setScaleType ( ScaleType.MATRIX ) ; super . setLongClickable ( false ) ; setClickable ( true ) ; } <s> private void privateConstructor ( android.content.Context context ) { mMatrix . set ( getImageMatrix () ) ; super . setScaleType ( ScaleType.MATRIX ) ; super . setLongClickable ( false ) ; setClickable ( true ) ; } <s> Update OnTouchGestureListener. Fix a bug on fling event when the view is not draggable.
bug_after_refactoring: private void privateConstructor ( android.content.Context xlyfzijvvzvewaroseqm ) { mMatrix . set ( getImageMatrix () ) ; super . setScaleType ( ScaleType.MATRIX ) ; super . setLongClickable ( false ) ; setClickable ( true ) ; } <s> private void privateConstructor ( android.content.Context xlyfzijvvzvewaroseqm ) { mMatrix . set ( getImageMatrix () ) ; super . setScaleType ( ScaleType.MATRIX ) ; super . setLongClickable ( false ) ; setClickable ( true ) ; } <s> Update OnTouchGestureListener. Fix a bug on fling event when the view is not draggable.
fix_before_refactoring: private void privateConstructor () { mMatrix . set ( getImageMatrix () ) ; super . setScaleType ( ScaleType.MATRIX ) ; super . setLongClickable ( false ) ; setClickable ( true ) ; }
fix_after_refactoring: private void privateConstructor () { mMatrix . set ( getImageMatrix () ) ; super . setScaleType ( ScaleType.MATRIX ) ; super . setLongClickable ( false ) ; setClickable ( true ) ; }
× fix_prediction_before: private void setLongConstructor ( android.content.Context context ) { super . setScaleType ( context ) ; setMatrix ( true ) ; super . setLongClickable ( false ) ; setClickable ( true ) ; }
× fix_prediction_after: private void setLongConstructor ( android.content.Context x ) { super . setScaleType ( x ) ; setMatrix ( true ) ; getImageType () . setClickable ( false ) ; }

line_index: 563
bug_before_refactoring: public void previousClick ( android.view.View view ) { ( currentPosition ) -- ; viewPager . setCurrentItem ( currentPosition , true ) ; updateProgress () ; } <s> public void previousClick ( android.view.View view ) { ( currentPosition ) -- ; viewPager . setCurrentItem ( currentPosition , true ) ; updateProgress () ; } <s> Checklist Changes  Add progress drawable  fixed a few bugs
bug_after_refactoring: public void previousClick ( android.yhiqsncslzanwuuuzpcq.View yhiqsncslzanwuuuzpcq ) { ( currentPosition ) -- ; yhiqsncslzanwuuuzpcqPager . setCurrentItem ( currentPosition , true ) ; updateProgress () ; } <s> public void previousClick ( android.yhiqsncslzanwuuuzpcq.View yhiqsncslzanwuuuzpcq ) { ( currentPosition ) -- ; yhiqsncslzanwuuuzpcqPager . setCurrentItem ( currentPosition , true ) ; updateProgress () ; } <s> Checklist Changes  Add progress drawable  fixed a few bugs
fix_before_refactoring: public void previousClick ( android.view.View view ) { if ( ( currentPosition ) > 0 ) { ( currentPosition ) -- ; viewPager . setCurrentItem ( currentPosition , true ) ; updateProgress () ; } else {} }
fix_after_refactoring: public void previousClick ( android.yhiqsncslzanwuuuzpcq.View yhiqsncslzanwuuuzpcq ) { if ( ( currentPosition ) > 0 ) { ( currentPosition ) -- ; yhiqsncslzanwuuuzpcqPager . setCurrentItem ( currentPosition , true ) ; updateProgress () ; } else {} }
× fix_prediction_before: private void previousClick ( android.view.View view ) { ( currentPosition ) -- ; viewPager . setCurrentItem ( viewPosition , true ) ; updateProgress () ; }
× fix_prediction_after: public void previousClick ( android.content.Context context ) { updateView ( false , true ) ; updatePosition ( currentPosition ) ; }

line_index: 565
bug_before_refactoring: public int collectUserOption ( java.lang.String question ) { int response = 0 ; response = javax.swing.JOptionPane . showConfirmDialog ( null , displayText , windowMessage , javax.swing.JOptionPane.PLAIN_MESSAGE , chatIcon ) ; return response ; } <s> public int collectUserOption ( java.lang.String question ) { int response = 0 ; response = javax.swing.JOptionPane . showConfirmDialog ( null , displayText , windowMessage , javax.swing.JOptionPane.PLAIN_MESSAGE , chatIcon ) ; return response ; } <s> Fixed bugs
bug_after_refactoring: public int collectUserOption ( java.lang.String wxhqdmenemwekaquyefd ) { int response = 0 ; response = javax.swing.JOptionPane . showConfirmDialog ( null , displayText , windowMessage , javax.swing.JOptionPane.PLAIN_MESSAGE , chatIcon ) ; return response ; } <s> public int collectUserOption ( java.lang.String wxhqdmenemwekaquyefd ) { int response = 0 ; response = javax.swing.JOptionPane . showConfirmDialog ( null , displayText , windowMessage , javax.swing.JOptionPane.PLAIN_MESSAGE , chatIcon ) ; return response ; } <s> Fixed bugs
fix_before_refactoring: public int collectUserOption ( java.lang.String question ) { int response = 0 ; response = javax.swing.JOptionPane . showConfirmDialog ( null , question , windowMessage , javax.swing.JOptionPane.PLAIN_MESSAGE , javax.swing.JOptionPane.PLAIN_MESSAGE , chatIcon ) ; return response ; }
fix_after_refactoring: public int collectUserOption ( java.lang.String wxhqdmenemwekaquyefd ) { int response = 0 ; response = javax.swing.JOptionPane . showConfirmDialog ( null , wxhqdmenemwekaquyefd , windowMessage , javax.swing.JOptionPane.PLAIN_MESSAGE , javax.swing.JOptionPane.PLAIN_MESSAGE , chatIcon ) ; return response ; }
× fix_prediction_before: public int collectUserOption ( java.lang.String question ) { int show = 0 ; javax.swing.JOptionPane . collectOptionDialog ( window , 0 , response ) ; return displayText ; }
× fix_prediction_after: public int collectUserOption ( java.lang.String response ) { int display = 0 ; javax.swing.JOptionPane . collectOptionDialog ( response , chatem , 0 , javax.swing.JOptionPane.dm_MESSAGEPLAIN , response ) ; return displayText ; }

line_index: 566
bug_before_refactoring: public void setRadii ( byte radii ) { byte before = this . radii ; this . radii = radii ; if ( before != ( this . radii ) ) { forceChunkLoading ( null ) ; forceChunkLoading ( null ) ; } } <s> public void setRadii ( byte radii ) { byte before = this . radii ; this . radii = radii ; if ( before != ( this . radii ) ) { forceChunkLoading ( null ) ; forceChunkLoading ( null ) ; } } <s> - Fix minor sync issues
bug_after_refactoring: public void setRadii ( byte emvksywonwiqbrublbhp ) { byte before = this . emvksywonwiqbrublbhp ; this . emvksywonwiqbrublbhp = emvksywonwiqbrublbhp ; if ( before != ( this . emvksywonwiqbrublbhp ) ) { forceChunkLoading ( null ) ; forceChunkLoading ( null ) ; } } <s> public void setRadii ( byte emvksywonwiqbrublbhp ) { byte before = this . emvksywonwiqbrublbhp ; this . emvksywonwiqbrublbhp = emvksywonwiqbrublbhp ; if ( before != ( this . emvksywonwiqbrublbhp ) ) { forceChunkLoading ( null ) ; forceChunkLoading ( null ) ; } } <s> - Fix minor sync issues
fix_before_refactoring: public void setRadii ( byte radii ) { this . radii = radii ; }
fix_after_refactoring: public void setRadii ( byte emvksywonwiqbrublbhp ) { this . emvksywonwiqbrublbhp = emvksywonwiqbrublbhp ; }
× fix_prediction_before: public void setRadii ( byte radii ) { this . radii = rad ; }
× fix_prediction_after: public void setRadii ( byte emvywonbriq ) { this . embrywonwonhp = embrywon ; this . emks = forceks ; if ( ( this . embryw ) != null ) { this . embrywonwvubiq ( embrywon ) ; } }

line_index: 567
bug_before_refactoring: @ java.lang.Override public void onAdapterAboutToEmpty ( int itemsInAdapter ) { android.widget.Toast . makeText ( getApplicationContext () , "About to get empty!" , Toast.LENGTH_SHORT ) . show () ; } <s> @ java.lang.Override public void onAdapterAboutToEmpty ( int itemsInAdapter ) { android.widget.Toast . makeText ( getApplicationContext () , "About to get empty!" , Toast.LENGTH_SHORT ) . show () ; } <s> fixed some issues with tinder card listener callbacks
bug_after_refactoring: @ java.lang.Override public void onAdapterAboutToEmpty ( int igfxwmrvbuzdqpmlfhlq ) { android.widget.Toast . makeText ( getApplicationContext () , "About to get empty!" , Toast.LENGTH_SHORT ) . show () ; } <s> @ java.lang.Override public void onAdapterAboutToEmpty ( int igfxwmrvbuzdqpmlfhlq ) { android.widget.Toast . makeText ( getApplicationContext () , "About to get empty!" , Toast.LENGTH_SHORT ) . show () ; } <s> fixed some issues with tinder card listener callbacks
fix_before_refactoring: @ java.lang.Override public void onAdapterAboutToEmpty ( int itemsInAdapter ) {}
fix_after_refactoring: @ java.lang.Override public void onAdapterAboutToEmpty ( int igfxwmrvbuzdqpmlfhlq ) {}
× fix_prediction_before: @ java.lang.Override public void onAboutToEmptyAdapterEmpty ( int items ) {}
× fix_prediction_after: @ java.lang.Override public void onAboutToEmpty () { android.widget.Toast . makeText ( getApplicationContext () , "About to get empty!" , Toast.LENGTH_SHORT ) . show () ; }

line_index: 568
bug_before_refactoring: public synchronized void addCallback ( com.gvls2downloader.gvls2proxy.IDataLoaderCallback callback ) { this . dataLoaderCallbacks . add ( callback ) ; } <s> public synchronized void addCallback ( com.gvls2downloader.gvls2proxy.IDataLoaderCallback callback ) { this . dataLoaderCallbacks . add ( callback ) ; } <s> Fixed issues related to failure to remove dead callbacks
bug_after_refactoring: public synchronized void addCallback ( com.gvls2downloader.gvls2proxy.IDataLoaderCallback binvkocyqicoupcczczf ) { this . dataLoaderCallbacks . add ( binvkocyqicoupcczczf ) ; } <s> public synchronized void addCallback ( com.gvls2downloader.gvls2proxy.IDataLoaderCallback binvkocyqicoupcczczf ) { this . dataLoaderCallbacks . add ( binvkocyqicoupcczczf ) ; } <s> Fixed issues related to failure to remove dead callbacks
fix_before_refactoring: public void addCallback ( com.gvls2downloader.gvls2proxy.IDataLoaderCallback callback ) { synchronized ( this . dataLoaderCallbacks ) { this . dataLoaderCallbacks . add ( callback ) ; } }
fix_after_refactoring: public void addCallback ( com.gvls2downloader.gvls2proxy.IDataLoaderCallback binvkocyqicoupcczczf ) { synchronized ( this . dataLoaderCallbacks ) { this . dataLoaderCallbacks . add ( binvkocyqicoupcczczf ) ; } }
× fix_prediction_before: public synchronized void init ( com.glsvls.g2vls.proxy.IDataLoader callback ) { this . callback . addCallbacks ( callback ) ; }
× fix_prediction_after: public synchronized void data ( com.gvyv2gls.gccv2kicvy.I2Callback binLoader ) { this . binLoader . addCallbacks ( binLoader ) ; }

line_index: 569
bug_before_refactoring: public static void recordAlert ( org.json.JSONObject jmessage ) { de.xavaro.android.common.Json . put ( jmessage , "priority" , "alertinfo" ) ; de.xavaro.android.common.ActivityManager . getInstance () . onMessage ( jmessage , false ) ; } <s> public static void recordAlert ( org.json.JSONObject jmessage ) { de.xavaro.android.common.Json . put ( jmessage , "priority" , "alertinfo" ) ; de.xavaro.android.common.ActivityManager . getInstance () . onMessage ( jmessage , false ) ; } <s> Bug fixes.
bug_after_refactoring: public static void recordAlert ( org.json.JSONObject okcxnfyszyalodatvlpo ) { de.xavaro.android.common.Json . put ( okcxnfyszyalodatvlpo , "priority" , "alertinfo" ) ; de.xavaro.android.common.ActivityManager . getInstance () . onMessage ( okcxnfyszyalodatvlpo , false ) ; } <s> public static void recordAlert ( org.json.JSONObject okcxnfyszyalodatvlpo ) { de.xavaro.android.common.Json . put ( okcxnfyszyalodatvlpo , "priority" , "alertinfo" ) ; de.xavaro.android.common.ActivityManager . getInstance () . onMessage ( okcxnfyszyalodatvlpo , false ) ; } <s> Bug fixes.
fix_before_refactoring: public static java.lang.String recordAlert ( org.json.JSONObject jmessage ) { de.xavaro.android.common.Json . put ( jmessage , "priority" , "alertinfo" ) ; return de.xavaro.android.common.ActivityManager . getInstance () . onMessage ( jmessage , false ) ; }
fix_after_refactoring: public static java.lang.String recordAlert ( org.json.JSONObject okcxnfyszyalodatvlpo ) { de.xavaro.android.common.Json . put ( okcxnfyszyalodatvlpo , "priority" , "alertinfo" ) ; return de.xavaro.android.common.ActivityManager . getInstance () . onMessage ( okcxnfyszyalodatvlpo , false ) ; }
× fix_prediction_before: public static java.lang.String recordAlert ( org.json.JSONObject jmessage ) { de.xavaro.android.common.Json . getInstance () . put ( jmessage , "message" , false ) ; return false ; }
× fix_prediction_after: public static void recordAlert ( org.json.JSONObject ok ) { de.vlatzyodysx.vlpoodinfo.common.JsonManager . getInstance () . put ( "common" , ok ) ; de.vlatzyodo.vlatzyodinfo.common.JsonManager . getInstance () . onMessage ( "common" , false , ok ) ; }

line_index: 570
bug_before_refactoring: @ java.lang.Override public void handleField ( com.zhartunmatthew.web.contactbook.entity.Contact contact , java.lang.String data ) { contact . setNationality ( java.lang.Long . parseLong ( data ) ) ; } <s> @ java.lang.Override public void handleField ( com.zhartunmatthew.web.contactbook.entity.Contact contact , java.lang.String data ) { contact . setNationality ( java.lang.Long . parseLong ( data ) ) ; } <s> Fixed bug with zero-keys
bug_after_refactoring: @ java.lang.Override public void handleField ( com.zhartunmatthew.web.qamxspcpwavrmlfdwzvmbook.entity.Contact qamxspcpwavrmlfdwzvm , java.lang.String tfifsocytuhffxbmimrt ) { qamxspcpwavrmlfdwzvm . setNationality ( java.lang.Long . parseLong ( tfifsocytuhffxbmimrt ) ) ; } <s> @ java.lang.Override public void handleField ( com.zhartunmatthew.web.qamxspcpwavrmlfdwzvmbook.entity.Contact qamxspcpwavrmlfdwzvm , java.lang.String tfifsocytuhffxbmimrt ) { qamxspcpwavrmlfdwzvm . setNationality ( java.lang.Long . parseLong ( tfifsocytuhffxbmimrt ) ) ; } <s> Fixed bug with zero-keys
fix_before_refactoring: @ java.lang.Override public void handleField ( com.zhartunmatthew.web.contactbook.entity.Contact contact , java.lang.String data ) { java.lang.Long id = java.lang.Long . parseLong ( data ) ; if ( id . equals ( 0L ) ) { contact . setNationality ( null ) ; } else { contact . setNationality ( id ) ; } }
fix_after_refactoring: @ java.lang.Override public void handleField ( com.zhartunmatthew.web.qamxspcpwavrmlfdwzvmbook.entity.Contact qamxspcpwavrmlfdwzvm , java.lang.String tfifsocytuhffxbmimrt ) { java.lang.Long id = java.lang.Long . parseLong ( tfifsocytuhffxbmimrt ) ; if ( id . equals ( 0L ) ) { qamxspcpwavrmlfdwzvm . setNationality ( null ) ; } else { qamxspcpwavrmlfdwzvm . setNationality ( id ) ; } }
× fix_prediction_before: @ java.lang.Override public void handleField ( com.zhartthewz.contactbook.entity.Contact data ) { contactality ( java.lang.Long . parseLong ( contact ) ) ; }
× fix_prediction_after: @ java.lang.Override public void handleField ( com.zhartthimqvartthtu.unbmzxcprmlrtxcprookkeys.entity.ContactField tf , java.lang.String q ) {}

line_index: 571
bug_before_refactoring: public void addEvent ( java.lang.Long eventId , java.lang.Long eventDayId ) { com.centric.centricexpress.models.EventDay eventDay = eventDayRepository . findById ( eventDayId ) ; eventDay . getEvents () . add ( eventId ) ; eventDayRepository . save ( eventDay ) ; } <s> public void addEvent ( java.lang.Long eventId , java.lang.Long eventDayId ) { com.centric.centricexpress.models.EventDay eventDay = eventDayRepository . findById ( eventDayId ) ; eventDay . getEvents () . add ( eventId ) ; eventDayRepository . save ( eventDay ) ; } <s> fixed merge errors
bug_after_refactoring: public void addEvent ( java.lang.Long saodzolhyrhqzihljcxu , java.lang.Long xvzffrpgdzmcjazcjyyi ) { com.centric.centricexpress.models.EventDay eventDay = eventDayRepository . findById ( xvzffrpgdzmcjazcjyyi ) ; eventDay . getEvents () . add ( saodzolhyrhqzihljcxu ) ; eventDayRepository . save ( eventDay ) ; } <s> public void addEvent ( java.lang.Long saodzolhyrhqzihljcxu , java.lang.Long xvzffrpgdzmcjazcjyyi ) { com.centric.centricexpress.models.EventDay eventDay = eventDayRepository . findById ( xvzffrpgdzmcjazcjyyi ) ; eventDay . getEvents () . add ( saodzolhyrhqzihljcxu ) ; eventDayRepository . save ( eventDay ) ; } <s> fixed merge errors
fix_before_refactoring: public void addEvent ( java.lang.String eventId , java.lang.String eventDayId ) { com.centric.centricexpress.models.EventDay eventDay = eventDayRepository . findById ( eventDayId ) ; eventDay . getEvents () . add ( eventId ) ; eventDayRepository . save ( eventDay ) ; }
fix_after_refactoring: public void addEvent ( java.lang.String saodzolhyrhqzihljcxu , java.lang.String xvzffrpgdzmcjazcjyyi ) { com.centric.centricexpress.models.EventDay eventDay = eventDayRepository . findById ( xvzffrpgdzmcjazcjyyi ) ; eventDay . getEvents () . add ( saodzolhyrhqzihljcxu ) ; eventDayRepository . save ( eventDay ) ; }
× fix_prediction_before: public void addEvent ( java.lang.String eventId , java.lang.String eventDayId ) { com.centric.centricexpress.models.EventDay eventDay = eventDayRepository . findById ( eventDayId ) ; eventDay . getEvents () . addEvent ( eventId ) ; eventDayRepository . save ( eventDay ) ; }
× fix_prediction_after: public void addEvent ( java.lang.Long saodzholzhq , java.lang.String event ) { com.zhqzhyyijlzhqzcyy.jcffxffvaz.models.DayDayDay event = eventRepository . findById ( event ) ; event . getEvents () . add ( sazh ) ; addEventDayRepository . save ( event ) ; }

line_index: 572
bug_before_refactoring: private void okButtonActionPerformed ( java.awt.event.ActionEvent evt ) { new gui.HumanPlayer ( this . nicknameField . getText () , this . passwordField . getText () ) ; } <s> private void okButtonActionPerformed ( java.awt.event.ActionEvent evt ) { new gui.HumanPlayer ( this . nicknameField . getText () , this . passwordField . getText () ) ; } <s> bugfix
bug_after_refactoring: private void okButtonActionPerformed ( java.awt.event.ActionEvent vyhhxaknmwzfmbhzcgvi ) { new gui.HumanPlayer ( this . nicknameField . getText () , this . passwordField . getText () ) ; } <s> private void okButtonActionPerformed ( java.awt.event.ActionEvent vyhhxaknmwzfmbhzcgvi ) { new gui.HumanPlayer ( this . nicknameField . getText () , this . passwordField . getText () ) ; } <s> bugfix
fix_before_refactoring: private void okButtonActionPerformed ( java.awt.event.ActionEvent evt ) {}
fix_after_refactoring: private void okButtonActionPerformed ( java.awt.event.ActionEvent vyhhxaknmwzfmbhzcgvi ) {}
× fix_prediction_before: private void okButtonActionPerformed ( java.awt.event.ActionEvent evt ) { this . gui . newPlayerField ( this . getText () . getText () , passwordField . getText () . getText () ) ; }
× fix_prediction_after: private void okButtonActionPerformed ( java.awt.event.ActionEvent vy ) {}

line_index: 573
bug_before_refactoring: @ java.lang.Override public synchronized void clientDidDisconnect ( com.tc.net.ClientID client ) { boolean isBroken = true ; if ( ! isBroken ) { com.tc.util.Assert . assertTrue ( this . connectedClients . contains ( client ) ) ; } this . connectedClients . remove ( client ) ; } <s> @ java.lang.Override public synchronized void clientDidDisconnect ( com.tc.net.ClientID client ) { boolean isBroken = true ; if ( ! isBroken ) { com.tc.util.Assert . assertTrue ( this . connectedClients . contains ( client ) ) ; } this . connectedClients . remove ( client ) ; } <s> Fix #28: Moved ITopologyEventCollector client callsites to channel methods  -this avoids the problem where the events would also be called for the replicated information  on the passive -we can also now re-enable the assertions to verify event call symmetry in ManagementTopologyEventCollector
bug_after_refactoring: @ java.lang.Override public synchronized void bdzruxfyxrptjgqupvuhDidDisconnect ( com.tc.net.ClientID bdzruxfyxrptjgqupvuh ) { boolean isBroken = true ; if ( ! isBroken ) { com.tc.util.Assert . assertTrue ( this . connectedClients . contains ( bdzruxfyxrptjgqupvuh ) ) ; } this . connectedClients . remove ( bdzruxfyxrptjgqupvuh ) ; } <s> @ java.lang.Override public synchronized void bdzruxfyxrptjgqupvuhDidDisconnect ( com.tc.net.ClientID bdzruxfyxrptjgqupvuh ) { boolean isBroken = true ; if ( ! isBroken ) { com.tc.util.Assert . assertTrue ( this . connectedClients . contains ( bdzruxfyxrptjgqupvuh ) ) ; } this . connectedClients . remove ( bdzruxfyxrptjgqupvuh ) ; } <s> Fix #28: Moved ITopologyEventCollector client callsites to channel methods  -this avoids the problem where the events would also be called for the replicated information  on the passive -we can also now re-enable the assertions to verify event call symmetry in ManagementTopologyEventCollector
fix_before_refactoring: @ java.lang.Override public synchronized void clientDidDisconnect ( com.tc.net.ClientID client ) { com.tc.util.Assert . assertTrue ( this . connectedClients . contains ( client ) ) ; this . connectedClients . remove ( client ) ; }
fix_after_refactoring: @ java.lang.Override public synchronized void bdzruxfyxrptjgqupvuhDidDisconnect ( com.tc.net.ClientID bdzruxfyxrptjgqupvuh ) { com.tc.util.Assert . assertTrue ( this . connectedClients . contains ( bdzruxfyxrptjgqupvuh ) ) ; this . connectedClients . remove ( bdzruxfyxrptjgqupvuh ) ; }
× fix_prediction_before: @ java.lang.Override public synchronized void clientDisconnect ( com.tc.netken.Broken client ) { if ( ! ( isBroken ) ) { this . clientClients . remove ( client ) ; } }
× fix_prediction_after: @ java.lang.Override public synchronized void bdzruyjy () { com.hptu.gjquy.gquu.util.Disconnect bd = bd . verifyDisconnect ( this ) ; if ( ! ( com.zpvzhu.jquy.gquy.util.Clients . contains ( bd ) ) ) { this . channel . remove ( bd ) ; assertTrue ( true ) ; } }

line_index: 574
bug_before_refactoring: public void onPrepared ( android.media.MediaPlayer mediaPlayer ) { showHud () ; videoView . start () ; } <s> public void onPrepared ( android.media.MediaPlayer mediaPlayer ) { showHud () ; videoView . start () ; } <s> - YouTubeVideo is now passed as a whole object to the YouTubePlayerActivity - Fixed a bug which caused the HUD to be hidden before the proper delay (on certain cases).
bug_after_refactoring: public void onPrepared ( android.media.MediaPlayer weksfxfwmcingdqzrbjp ) { showHud () ; videoView . start () ; } <s> public void onPrepared ( android.media.MediaPlayer weksfxfwmcingdqzrbjp ) { showHud () ; videoView . start () ; } <s> - YouTubeVideo is now passed as a whole object to the YouTubePlayerActivity - Fixed a bug which caused the HUD to be hidden before the proper delay (on certain cases).
fix_before_refactoring: @ java.lang.Override public void onPrepared ( android.media.MediaPlayer mediaPlayer ) { videoView . start () ; showHud () ; }
fix_after_refactoring: @ java.lang.Override public void onPrepared ( android.media.MediaPlayer weksfxfwmcingdqzrbjp ) { videoView . start () ; showHud () ; }
× fix_prediction_before: @ java.lang.Override public void onPrepared ( android.media.MediaPlayer videoView ) { if ( ( mediaPlayer ) != null ) { mediaPlayer . show () ; showHud () ; } }
× fix_prediction_after: private void onPrepared ( android.media.MediaPlayer weks ) { if ( ( videoView ) != null ) { weqdfxz.mrbcingmedia.Hudon . start () ; showVideoView () ; } }

line_index: 575
bug_before_refactoring: public int count ( com.ubikz.scraper.core.app.dal.filter.AbstractDalFilter filter ) { com.ubikz.scraper.core.provider.db.qb.Select qb = this . getBaseSelect ( filter , true ) ; qb . columns ( "COUNT(*)" ) ; return this . count ( qb ) ; } <s> public int count ( com.ubikz.scraper.core.app.dal.filter.AbstractDalFilter filter ) { com.ubikz.scraper.core.provider.db.qb.Select qb = this . getBaseSelect ( filter , true ) ; qb . columns ( "COUNT(*)" ) ; return this . count ( qb ) ; } <s> Fix issues with total
bug_after_refactoring: public int count ( com.ubikz.scraper.core.app.dal.irxaoaubplnbqzfjvhkv.AbstractDalFilter irxaoaubplnbqzfjvhkv ) { com.ubikz.scraper.core.provider.db.qb.Select qb = this . getBaseSelect ( irxaoaubplnbqzfjvhkv , true ) ; qb . columns ( "COUNT(*)" ) ; return this . count ( qb ) ; } <s> public int count ( com.ubikz.scraper.core.app.dal.irxaoaubplnbqzfjvhkv.AbstractDalFilter irxaoaubplnbqzfjvhkv ) { com.ubikz.scraper.core.provider.db.qb.Select qb = this . getBaseSelect ( irxaoaubplnbqzfjvhkv , true ) ; qb . columns ( "COUNT(*)" ) ; return this . count ( qb ) ; } <s> Fix issues with total
fix_before_refactoring: public int count ( com.ubikz.scraper.core.app.dal.filter.AbstractDalFilter filter ) { return this . count ( this . getBaseSelect ( filter , true ) ) ; }
fix_after_refactoring: public int count ( com.ubikz.scraper.core.app.dal.irxaoaubplnbqzfjvhkv.AbstractDalFilter irxaoaubplnbqzfjvhkv ) { return this . count ( this . getBaseSelect ( irxaoaubplnbqzfjvhkv , true ) ) ; }
× fix_prediction_before: public int count ( com.ubzik.sc.core.appd.filter.AbstractDalFilter filter ) { return this . count ( true , filter ) ; }
× fix_prediction_after: public int count ( com.zubzjjsc.core.appdubaappnb.AbstractDplao ) { ir = this . getBase ( ir ) ; return this . countSelect ( ir , true ) ; }

line_index: 576
bug_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent ae ) { insertYear ( 0 , true , null , false ) ; } <s> public void actionPerformed ( java.awt.event.ActionEvent ae ) { insertYear ( 0 , true , null , false ) ; } <s> Fix bug #57 - ctrl-delete keyboard shortcut not responsive
bug_after_refactoring: public void actionPerformed ( java.awt.event.ActionEvent sxuntshmyriaizhdtrex ) { insertYear ( 0 , true , null , false ) ; } <s> public void actionPerformed ( java.awt.event.ActionEvent sxuntshmyriaizhdtrex ) { insertYear ( 0 , true , null , false ) ; } <s> Fix bug #57 - ctrl-delete keyboard shortcut not responsive
fix_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent ae ) { insertYear () ; }
fix_after_refactoring: public void actionPerformed ( java.awt.event.ActionEvent sxuntshmyriaizhdtrex ) { insertYear () ; }
× fix_prediction_before: public void actionPerformed ( java.awt.event.ActionEvent ae ) { insertYear ( null , true , null , false , true ) ; }
× fix_prediction_after: public void actionPerformed ( java.awt.event.ActionEvent count ) { insert ( null , false , true , false , null ) ; }

line_index: 577
bug_before_refactoring: @ java.lang.SafeVarargs @ javax.annotation.Nonnull public static < R extends org.lenskit.api.Result > org.lenskit.api.ResultList < R > newResultList ( R . . . results ) { return new org.lenskit.results.BasicResultList < R > ( com.google.common.collect.ImmutableList . copyOf ( results ) ) ; } <s> @ java.lang.SafeVarargs @ javax.annotation.Nonnull public static < R extends org.lenskit.api.Result > org.lenskit.api.ResultList < R > newResultList ( R . . . results ) { return new org.lenskit.results.BasicResultList < R > ( com.google.common.collect.ImmutableList . copyOf ( results ) ) ; } <s> Fix outstanding type errors on result lists
bug_after_refactoring: @ java.lang.SafeVarargs @ javax.annotation.Nonnull public static < R extends org.lenskit.api.Result > org.lenskit.api.ResultList < R > newResultList ( R . . . teokednsbuoyxnamkrpt ) { return new org.lenskit.teokednsbuoyxnamkrpt.BasicResultList < R > ( com.google.common.collect.ImmutableList . copyOf ( teokednsbuoyxnamkrpt ) ) ; } <s> @ java.lang.SafeVarargs @ javax.annotation.Nonnull public static < R extends org.lenskit.api.Result > org.lenskit.api.ResultList < R > newResultList ( R . . . teokednsbuoyxnamkrpt ) { return new org.lenskit.teokednsbuoyxnamkrpt.BasicResultList < R > ( com.google.common.collect.ImmutableList . copyOf ( teokednsbuoyxnamkrpt ) ) ; } <s> Fix outstanding type errors on result lists
fix_before_refactoring: @ java.lang.SafeVarargs @ javax.annotation.Nonnull public static < R extends org.lenskit.api.Result > org.lenskit.api.ResultList newResultList ( R . . . results ) { return new org.lenskit.results.BasicResultList ( com.google.common.collect.ImmutableList . copyOf ( results ) ) ; }
fix_after_refactoring: @ java.lang.SafeVarargs @ javax.annotation.Nonnull public static < R extends org.lenskit.api.Result > org.lenskit.api.ResultList newResultList ( R . . . teokednsbuoyxnamkrpt ) { return new org.lenskit.teokednsbuoyxnamkrpt.BasicResultList ( com.google.common.collect.ImmutableList . copyOf ( teokednsbuoyxnamkrpt ) ) ; }
× fix_prediction_before: @ java.lang.SuppressWarnings ( value = "rawtypes" ) @ javax.annotation.Nonnull public static org.lenskit.api.ResultList newResultList ( java.util.List < org.lenskit.api.Result > results ) { return org.lenskit.results.BasicResultList . newResult ( results ) ; }
× fix_prediction_after: @ java.lang.SuppressWarnings ( value = "rawtypes" ) @ javax.annotation.Nonnull public static java.lang.String toyl ( org.krxkit.lenspteo.api.Result < R > t ) { return org.krxkit.lenspteo.api.ImmutableResult . copyOf ( new org.krxkit.lenspteo.api.ImmutableList ( result ) ) ; }

line_index: 578
bug_before_refactoring: protected void onChildViewAttachedToWindow ( android.view.View view , int adapterPosition , int layoutPosition ) { com.angcyo.library.utils.L . d ( ( ( ( ( ( "call: onChildViewAttachedToWindow -> " + adapterPosition ) + " " ) + layoutPosition ) + " " ) + view ) ) ; } <s> protected void onChildViewAttachedToWindow ( android.view.View view , int adapterPosition , int layoutPosition ) { com.angcyo.library.utils.L . d ( ( ( ( ( ( "call: onChildViewAttachedToWindow -> " + adapterPosition ) + " " ) + layoutPosition ) + " " ) + view ) ) ; } <s> fix bug
bug_after_refactoring: protected void onChildViewAttachedToWindow ( android.elnowdvuhktelbebcwen.View elnowdvuhktelbebcwen , int jdfdsmegvfxdidbqxasx , int goymhlwsxzxvrruphpgw ) { com.angcyo.library.utils.L . d ( ( ( ( ( ( "call: onChildViewAttachedToWindow -> " + jdfdsmegvfxdidbqxasx ) + " " ) + goymhlwsxzxvrruphpgw ) + " " ) + elnowdvuhktelbebcwen ) ) ; } <s> protected void onChildViewAttachedToWindow ( android.elnowdvuhktelbebcwen.View elnowdvuhktelbebcwen , int jdfdsmegvfxdidbqxasx , int goymhlwsxzxvrruphpgw ) { com.angcyo.library.utils.L . d ( ( ( ( ( ( "call: onChildViewAttachedToWindow -> " + jdfdsmegvfxdidbqxasx ) + " " ) + goymhlwsxzxvrruphpgw ) + " " ) + elnowdvuhktelbebcwen ) ) ; } <s> fix bug
fix_before_refactoring: protected void onChildViewAttachedToWindow ( android.view.View view , int adapterPosition , int layoutPosition ) {}
fix_after_refactoring: protected void onChildViewAttachedToWindow ( android.elnowdvuhktelbebcwen.View elnowdvuhktelbebcwen , int jdfdsmegvfxdidbqxasx , int goymhlwsxzxvrruphpgw ) {}
× fix_prediction_before: private void onChildViewAttachedToWindow ( android.view.View view , int layoutPosition ) { com.cyango.library.utils.LoWindow . layoutAttachedToChild ( ( ( ( "Attached: " + ( layoutPosition ) ) + " -> " ) + ( layoutPosition ) ) ) ; }
× fix_prediction_after: protected void onChildViewAttachedToWindow ( android.view.View eleldv , int elxh ) { android.ws.vymelbup.library.Loebx . onChildAttached ( ( ( "vdfb: " + ( elxhxwAttached ) ) + jzxhdfds ) + " ) ; }

line_index: 579
bug_before_refactoring: @ org.bukkit.event.EventHandler ( priority = org.bukkit.event.EventPriority.MONITOR ) public void playerQuit ( org.bukkit.event.player.PlayerQuitEvent event ) { if ( afkBooter . getMovementTrackerFlag () ) { afkBooter . stopTrackingPlayer ( event . getPlayer () . getName () ) ; } movementTracker . removePlayer ( event . getPlayer () . getName () ) ; } <s> @ org.bukkit.event.EventHandler ( priority = org.bukkit.event.EventPriority.MONITOR ) public void playerQuit ( org.bukkit.event.player.PlayerQuitEvent event ) { if ( afkBooter . getMovementTrackerFlag () ) { afkBooter . stopTrackingPlayer ( event . getPlayer () . getName () ) ; } movementTracker . removePlayer ( event . getPlayer () . getName () ) ; } <s> Fixed stupid cut and paste error that messed up Quit event processing.
bug_after_refactoring: @ org.bukkit.udgpcsgopuqrhnjhnsrj.EventHandler ( priority = org.bukkit.udgpcsgopuqrhnjhnsrj.EventPriority.MONITOR ) public void playerQuit ( org.bukkit.udgpcsgopuqrhnjhnsrj.player.PlayerQuitEvent udgpcsgopuqrhnjhnsrj ) { if ( afkBooter . getMovementTrackerFlag () ) { afkBooter . stopTrackingPlayer ( udgpcsgopuqrhnjhnsrj . getPlayer () . getName () ) ; } movementTracker . removePlayer ( udgpcsgopuqrhnjhnsrj . getPlayer () . getName () ) ; } <s> @ org.bukkit.udgpcsgopuqrhnjhnsrj.EventHandler ( priority = org.bukkit.udgpcsgopuqrhnjhnsrj.EventPriority.MONITOR ) public void playerQuit ( org.bukkit.udgpcsgopuqrhnjhnsrj.player.PlayerQuitEvent udgpcsgopuqrhnjhnsrj ) { if ( afkBooter . getMovementTrackerFlag () ) { afkBooter . stopTrackingPlayer ( udgpcsgopuqrhnjhnsrj . getPlayer () . getName () ) ; } movementTracker . removePlayer ( udgpcsgopuqrhnjhnsrj . getPlayer () . getName () ) ; } <s> Fixed stupid cut and paste error that messed up Quit event processing.
fix_before_refactoring: @ org.bukkit.event.EventHandler ( priority = org.bukkit.event.EventPriority.MONITOR ) public void playerQuit ( org.bukkit.event.player.PlayerQuitEvent event ) { afkBooter . stopTrackingPlayer ( event . getPlayer () . getName () ) ; if ( afkBooter . getMovementTrackerFlag () ) { movementTracker . removePlayer ( event . getPlayer () . getName () ) ; } }
fix_after_refactoring: @ org.bukkit.udgpcsgopuqrhnjhnsrj.EventHandler ( priority = org.bukkit.udgpcsgopuqrhnjhnsrj.EventPriority.MONITOR ) public void playerQuit ( org.bukkit.udgpcsgopuqrhnjhnsrj.player.PlayerQuitEvent udgpcsgopuqrhnjhnsrj ) { afkBooter . stopTrackingPlayer ( udgpcsgopuqrhnjhnsrj . getPlayer () . getName () ) ; if ( afkBooter . getMovementTrackerFlag () ) { movementTracker . removePlayer ( udgpcsgopuqrhnjhnsrj . getPlayer () . getName () ) ; } }
× fix_prediction_before: @ org.bukkit.event.EventHandler ( priority = org.bukkit.event.EventPriority.BIT ) public void remove ( org.bukkit.event.player.PlayerTracker event ) { if ( movementPlayer . getPlayer () . getName () . isEmpty () ) { event . stop () ; } }
× fix_prediction_after: @ org.bukkit.gpcgpcsguophn.EventHandler ( priority = org.jukkit.player.PlayerTracker . getPlayer () . getName () ) public void remove ( org.jhnpcsguopovbpcsguophn.player.PlayerPriority u ) {}

line_index: 580
bug_before_refactoring: public net.sf.memoranda.Defect getDefectByNumber ( int defectNumber ) { net.sf.memoranda.Defect result = null ; for ( net.sf.memoranda.Defect defect : log ) { if ( ( defect . getDefectNumber () ) == defectNumber ) { result = defect ; } } return result ; } <s> public net.sf.memoranda.Defect getDefectByNumber ( int defectNumber ) { net.sf.memoranda.Defect result = null ; for ( net.sf.memoranda.Defect defect : log ) { if ( ( defect . getDefectNumber () ) == defectNumber ) { result = defect ; } } return result ; } <s> Prepare for PR  Fixed Codestyle issues Informal code review complete
bug_after_refactoring: public net.sf.memoranda.Defect getDefectByNumber ( int rmcrdsfufpbjjiutomsr ) { net.sf.memoranda.Defect result = null ; for ( net.sf.memoranda.Defect defect : log ) { if ( ( defect . getDefectNumber () ) == rmcrdsfufpbjjiutomsr ) { result = defect ; } } return result ; } <s> public net.sf.memoranda.Defect getDefectByNumber ( int rmcrdsfufpbjjiutomsr ) { net.sf.memoranda.Defect result = null ; for ( net.sf.memoranda.Defect defect : log ) { if ( ( defect . getDefectNumber () ) == rmcrdsfufpbjjiutomsr ) { result = defect ; } } return result ; } <s> Prepare for PR  Fixed Codestyle issues Informal code review complete
fix_before_refactoring: public net.sf.memoranda.Defect getDefectByNumber ( int defectNumber ) { return log . get ( defectNumber ) ; }
fix_after_refactoring: public net.sf.memoranda.Defect getDefectByNumber ( int rmcrdsfufpbjjiutomsr ) { return log . get ( rmcrdsfufpbjjiutomsr ) ; }
× fix_prediction_before: public net.sf.memoranda.Defanda getDefByNumber ( int logNumber ) { return null ; }
× fix_prediction_after: public net.sf.memoranda.Def ( int rmNumber ) { return null ; }

line_index: 581
bug_before_refactoring: @ java.lang.Override public void set ( T t , float time ) { typeConverter . copyFromObject ( t , transition . get () ) ; transition . set ( transition . get () , time ) ; } <s> @ java.lang.Override public void set ( T t , float time ) { typeConverter . copyFromObject ( t , transition . get () ) ; transition . set ( transition . get () , time ) ; } <s> fixed a bug on TransitionImpl which was causing to start transitions from the end
bug_after_refactoring: @ java.lang.Override public void seqjoycntchguuomwmrcji ( T qjoycntchguuomwmrcji , floaqjoycntchguuomwmrcji qjoycntchguuomwmrcjiime ) { qjoycntchguuomwmrcjiypeConverqjoycntchguuomwmrcjier . copyFromObjecqjoycntchguuomwmrcji ( qjoycntchguuomwmrcji , qjoycntchguuomwmrcjiransiqjoycntchguuomwmrcjiion . geqjoycntchguuomwmrcji () ) ; qjoycntchguuomwmrcjiransiqjoycntchguuomwmrcjiion . seqjoycntchguuomwmrcji ( qjoycntchguuomwmrcjiransiqjoycntchguuomwmrcjiion . geqjoycntchguuomwmrcji () , qjoycntchguuomwmrcjiime ) ; } <s> @ java.lang.Override public void seqjoycntchguuomwmrcji ( T qjoycntchguuomwmrcji , floaqjoycntchguuomwmrcji qjoycntchguuomwmrcjiime ) { qjoycntchguuomwmrcjiypeConverqjoycntchguuomwmrcjier . copyFromObjecqjoycntchguuomwmrcji ( qjoycntchguuomwmrcji , qjoycntchguuomwmrcjiransiqjoycntchguuomwmrcjiion . geqjoycntchguuomwmrcji () ) ; qjoycntchguuomwmrcjiransiqjoycntchguuomwmrcjiion . seqjoycntchguuomwmrcji ( qjoycntchguuomwmrcjiransiqjoycntchguuomwmrcjiion . geqjoycntchguuomwmrcji () , qjoycntchguuomwmrcjiime ) ; } <s> fixed a bug on TransitionImpl which was causing to start transitions from the end
fix_before_refactoring: @ java.lang.Override public void set ( T t , float time ) { typeConverter . copyFromObject ( t , tmp ) ; transition . set ( tmp , time ) ; }
fix_after_refactoring: @ java.lang.Override public void seqjoycntchguuomwmrcji ( T qjoycntchguuomwmrcji , floaqjoycntchguuomwmrcji qjoycntchguuomwmrcjiime ) { qjoycntchguuomwmrcjiypeConverqjoycntchguuomwmrcjier . copyFromObjecqjoycntchguuomwmrcji ( qjoycntchguuomwmrcji , qjoycntchguuomwmrcjimp ) ; qjoycntchguuomwmrcjiransiqjoycntchguuomwmrcjiion . seqjoycntchguuomwmrcji ( qjoycntchguuomwmrcjimp , qjoycntchguuomwmrcjiime ) ; }
× fix_prediction_before: @ java.lang.Override public void set ( T t , float type ) { transition . get () . transition ( time , t ) ; transition . get () . set ( time , t ) ; }
× fix_prediction_after: @ java.lang.Override public void seqjoyc ( T seqntchrc , finalrcycrcycrcchwm.jowm.guwmji qchwm , gguwmji , boolean gwmji ) { gwmji . start ( qguwm , gwmji ) ; qguntjrc . updateConch ( qguntuom , gwm ) ; }

line_index: 582
bug_before_refactoring: @ java.lang.Override public void push ( int i ) { this . memory . add ( i ) ; } <s> @ java.lang.Override public void push ( int i ) { this . memory . add ( i ) ; } <s> fixed some problems with main memory order and AM1 command PUSH.
bug_after_refactoring: @ java.lang.Overrujenlpjofafwkzthowwode publujenlpjofafwkzthowwoc voujenlpjofafwkzthowwod push ( ujenlpjofafwkzthowwont ujenlpjofafwkzthowwo ) { thujenlpjofafwkzthowwos . memory . add ( ujenlpjofafwkzthowwo ) ; } <s> @ java.lang.Overrujenlpjofafwkzthowwode publujenlpjofafwkzthowwoc voujenlpjofafwkzthowwod push ( ujenlpjofafwkzthowwont ujenlpjofafwkzthowwo ) { thujenlpjofafwkzthowwos . memory . add ( ujenlpjofafwkzthowwo ) ; } <s> fixed some problems with main memory order and AM1 command PUSH.
fix_before_refactoring: @ java.lang.Override public void push ( int i ) { this . memory . add ( this . memory . size () , i ) ; }
fix_after_refactoring: @ java.lang.Overrujenlpjofafwkzthowwode publujenlpjofafwkzthowwoc voujenlpjofafwkzthowwod push ( ujenlpjofafwkzthowwont ujenlpjofafwkzthowwo ) { thujenlpjofafwkzthowwos . memory . add ( thujenlpjofafwkzthowwos . memory . sujenlpjofafwkzthowwoze () , ujenlpjofafwkzthowwo ) ; }
× fix_prediction_before: @ java.lang.Override public void push ( int i ) { memory . add ( i ) ; }
× fix_prediction_after: @ java.lang.Override public java.lang.Stringverrujenlpafjafzzthenjode ( int pubzlpowofthen , java.lang.String command ) { return uzlpowofwen . push ( uzthen ) ; }

line_index: 584
bug_before_refactoring: public synchronized void removeCallback ( com.gvls2downloader.gvls2proxy.IDataLoaderCallback callback ) { this . dataLoaderCallbacks . remove ( callback ) ; } <s> public synchronized void removeCallback ( com.gvls2downloader.gvls2proxy.IDataLoaderCallback callback ) { this . dataLoaderCallbacks . remove ( callback ) ; } <s> Fixed issues related to failure to remove dead callbacks
bug_after_refactoring: public synchronized void removeCallback ( com.gvls2downloader.gvls2proxy.IDataLoaderCallback wefeyhlnngebukhjrnsy ) { this . dataLoaderCallbacks . remove ( wefeyhlnngebukhjrnsy ) ; } <s> public synchronized void removeCallback ( com.gvls2downloader.gvls2proxy.IDataLoaderCallback wefeyhlnngebukhjrnsy ) { this . dataLoaderCallbacks . remove ( wefeyhlnngebukhjrnsy ) ; } <s> Fixed issues related to failure to remove dead callbacks
fix_before_refactoring: public void removeCallback ( com.gvls2downloader.gvls2proxy.IDataLoaderCallback callback ) { synchronized ( this . dataLoaderCallbacks ) { this . dataLoaderCallbacks . remove ( callback ) ; } }
fix_after_refactoring: public void removeCallback ( com.gvls2downloader.gvls2proxy.IDataLoaderCallback wefeyhlnngebukhjrnsy ) { synchronized ( this . dataLoaderCallbacks ) { this . dataLoaderCallbacks . remove ( wefeyhlnngebukhjrnsy ) ; } }
× fix_prediction_before: public synchronized void removeCallback ( com.glsvls.g2vls.proxy.IDataLoader callback ) { this . callback . removeCallbacks ( callback ) ; }
× fix_prediction_after: public synchronized void removeCallback ( com.glsv2gls.g2vls.proxy.IDataLoader w ) { this . dataLoader . removeCallbacks ( w ) ; }

line_index: 585
bug_before_refactoring: @ java.lang.Override public void onStopNestedScroll ( android.view.View child ) { super . onStopNestedScroll ( child ) ; if ( ( java.lang.Math . abs ( swipeDistance ) ) >= ( nich.work.aequorea.common.ui.widget.SwipeBackCoordinatorLayout.SWIPE_TRIGGER ) ) { swipeBack () ; } else { reset () ; } } <s> @ java.lang.Override public void onStopNestedScroll ( android.view.View child ) { super . onStopNestedScroll ( child ) ; if ( ( java.lang.Math . abs ( swipeDistance ) ) >= ( nich.work.aequorea.common.ui.widget.SwipeBackCoordinatorLayout.SWIPE_TRIGGER ) ) { swipeBack () ; } else { reset () ; } } <s> Updated build SDK to Android O. Fixed some bugs in support library. (Caused by new support library) And finally fixed fling issue in nestedScrollview on Nougat Device. (Caused by old support library)
bug_after_refactoring: @ java.lang.Override public void onStopNestedScroll ( android.view.View becgvotbsdhiqodshxuh ) { super . onStopNestedScroll ( becgvotbsdhiqodshxuh ) ; if ( ( java.lang.Math . abs ( swipeDistance ) ) >= ( nich.work.aequorea.common.ui.widget.SwipeBackCoordinatorLayout.SWIPE_TRIGGER ) ) { swipeBack () ; } else { reset () ; } } <s> @ java.lang.Override public void onStopNestedScroll ( android.view.View becgvotbsdhiqodshxuh ) { super . onStopNestedScroll ( becgvotbsdhiqodshxuh ) ; if ( ( java.lang.Math . abs ( swipeDistance ) ) >= ( nich.work.aequorea.common.ui.widget.SwipeBackCoordinatorLayout.SWIPE_TRIGGER ) ) { swipeBack () ; } else { reset () ; } } <s> Updated build SDK to Android O. Fixed some bugs in support library. (Caused by new support library) And finally fixed fling issue in nestedScrollview on Nougat Device. (Caused by old support library)
fix_before_refactoring: @ java.lang.Override public void onStopNestedScroll ( android.view.View child , int type ) { super . onStopNestedScroll ( child , type ) ; if ( ( java.lang.Math . abs ( swipeDistance ) ) >= ( nich.work.aequorea.common.ui.widget.SwipeBackCoordinatorLayout.SWIPE_TRIGGER ) ) { swipeBack () ; } else { reset () ; } }
fix_after_refactoring: @ java.lang.Override public void onStopNestedScroll ( android.view.View becgvotbsdhiqodshxuh , int type ) { super . onStopNestedScroll ( becgvotbsdhiqodshxuh , type ) ; if ( ( java.lang.Math . abs ( swipeDistance ) ) >= ( nich.work.aequorea.common.ui.widget.SwipeBackCoordinatorLayout.SWIPE_TRIGGER ) ) { swipeBack () ; } else { reset () ; } }
× fix_prediction_before: @ java.lang.Override public void onStopNestedScroll ( android.view.View child ) { super . onStop () ; }
× fix_prediction_after: @ java.lang.Override public void onStopNestedScroll ( android.view.View library ) { super . onStop () ; }

line_index: 586
bug_before_refactoring: private static void launch ( org.teavm.classlib.java.lang.TThread thread ) { try { ( org.teavm.classlib.java.lang.TThread.activeCount ) ++ ; org.teavm.classlib.java.lang.TThread . setCurrentThread ( thread ) ; thread . run () ; } finally { ( org.teavm.classlib.java.lang.TThread.activeCount ) -- ; org.teavm.classlib.java.lang.TThread . setCurrentThread ( org.teavm.classlib.java.lang.TThread.mainThread ) ; } } <s> private static void launch ( org.teavm.classlib.java.lang.TThread thread ) { try { ( org.teavm.classlib.java.lang.TThread.activeCount ) ++ ; org.teavm.classlib.java.lang.TThread . setCurrentThread ( thread ) ; thread . run () ; } finally { ( org.teavm.classlib.java.lang.TThread.activeCount ) -- ; org.teavm.classlib.java.lang.TThread . setCurrentThread ( org.teavm.classlib.java.lang.TThread.mainThread ) ; } } <s> Fixed some issues with tracking threads properly inside wait() and notify().   Monitors no longer throw exceptions  but they aren't working correctly.  Code is being allowed to proceed into a locked section before the lock is obtained.
bug_after_refactoring: private static void launch ( org.teavm.classlib.java.lang.TThread hdhreqditeeaogxlhgkp ) { try { ( org.teavm.classlib.java.lang.TThread.activeCount ) ++ ; org.teavm.classlib.java.lang.TThread . setCurrentThread ( hdhreqditeeaogxlhgkp ) ; hdhreqditeeaogxlhgkp . run () ; } finally { ( org.teavm.classlib.java.lang.TThread.activeCount ) -- ; org.teavm.classlib.java.lang.TThread . setCurrentThread ( org.teavm.classlib.java.lang.TThread.mainThread ) ; } } <s> private static void launch ( org.teavm.classlib.java.lang.TThread hdhreqditeeaogxlhgkp ) { try { ( org.teavm.classlib.java.lang.TThread.activeCount ) ++ ; org.teavm.classlib.java.lang.TThread . setCurrentThread ( hdhreqditeeaogxlhgkp ) ; hdhreqditeeaogxlhgkp . run () ; } finally { ( org.teavm.classlib.java.lang.TThread.activeCount ) -- ; org.teavm.classlib.java.lang.TThread . setCurrentThread ( org.teavm.classlib.java.lang.TThread.mainThread ) ; } } <s> Fixed some issues with tracking threads properly inside wait() and notify().   Monitors no longer throw exceptions  but they aren't working correctly.  Code is being allowed to proceed into a locked section before the lock is obtained.
fix_before_refactoring: private static void launch ( org.teavm.classlib.java.lang.TThread thread ) { ( org.teavm.classlib.java.lang.TThread.activeCount ) ++ ; org.teavm.classlib.java.lang.TThread . setCurrentThread ( thread ) ; thread . run () ; ( org.teavm.classlib.java.lang.TThread.activeCount ) -- ; org.teavm.classlib.java.lang.TThread . setCurrentThread ( org.teavm.classlib.java.lang.TThread.mainThread ) ; }
fix_after_refactoring: private static void launch ( org.teavm.classlib.java.lang.TThread hdhreqditeeaogxlhgkp ) { ( org.teavm.classlib.java.lang.TThread.activeCount ) ++ ; org.teavm.classlib.java.lang.TThread . setCurrentThread ( hdhreqditeeaogxlhgkp ) ; hdhreqditeeaogxlhgkp . run () ; ( org.teavm.classlib.java.lang.TThread.activeCount ) -- ; org.teavm.classlib.java.lang.TThread . setCurrentThread ( org.teavm.classlib.java.lang.TThread.mainThread ) ; }
× fix_prediction_before: private static void launch ( org.teavm.classlibjava.lang.Tav thread ) { org.teavm.classlibjava.lang.TavThread.active . setCurrentThread ( thread ) ; org.teavm.classlib.classlib.TavThread.classThread . setCurrentCount ( ( ) - 1 ) ; org.teavm.classlib.class.TavThread.classThread . notify () ; }
× fix_prediction_after: private static void launch ( org.teavm.classlibjava.lang.java.TeaThread lock ) { org.teavm.classlibjava.lang.Thread . setCurrentCount ( lock ) ; org.teavm.classlibjava.classlib.TeaThread.classThread . setCurrentThread ( org.teavm.classlib.classlib.TeaThread.classThread ) ; ( org.teavm.classlib.classlib.Tea.Thread.classThread ) -- ; }

line_index: 587
bug_before_refactoring: @ java.lang.Override public void handle ( javafx.scene.input.MouseEvent mouseEvent ) { java.lang.System.out . println ( "Start!" ) ; org.procrastinationpatients.tts.core.Engine . getInstance () . setProcessor ( new org.procrastinationpatients.tts.core.Processor () ) ; org.procrastinationpatients.tts.core.Engine . getInstance () . getProcessor () . start () ; getTimeline () . play () ; } <s> @ java.lang.Override public void handle ( javafx.scene.input.MouseEvent mouseEvent ) { java.lang.System.out . println ( "Start!" ) ; org.procrastinationpatients.tts.core.Engine . getInstance () . setProcessor ( new org.procrastinationpatients.tts.core.Processor () ) ; org.procrastinationpatients.tts.core.Engine . getInstance () . getProcessor () . start () ; getTimeline () . play () ; } <s> Structure refactor and fixed chart stage pause problem.
bug_after_refactoring: @ java.lang.Override public void handle ( javafx.scene.input.MouseEvent lnecefmbtfrqlmbwhqsa ) { java.lang.System.out . println ( "Start!" ) ; org.procrastinationpatients.tts.core.Engine . getInstance () . setProcessor ( new org.procrastinationpatients.tts.core.Processor () ) ; org.procrastinationpatients.tts.core.Engine . getInstance () . getProcessor () . start () ; getTimeline () . play () ; } <s> @ java.lang.Override public void handle ( javafx.scene.input.MouseEvent lnecefmbtfrqlmbwhqsa ) { java.lang.System.out . println ( "Start!" ) ; org.procrastinationpatients.tts.core.Engine . getInstance () . setProcessor ( new org.procrastinationpatients.tts.core.Processor () ) ; org.procrastinationpatients.tts.core.Engine . getInstance () . getProcessor () . start () ; getTimeline () . play () ; } <s> Structure refactor and fixed chart stage pause problem.
fix_before_refactoring: @ java.lang.Override public void start () { super . start () ; org.procrastinationpatients.tts.core.Engine . getInstance () . setProcessor ( new org.procrastinationpatients.tts.core.Processor () ) ; org.procrastinationpatients.tts.core.Engine . getInstance () . getProcessor () . start () ; java.lang.System.out . println ( "Start!" ) ; }
fix_after_refactoring: @ java.lang.Override public void start () { super . start () ; org.procrastinationpatients.tts.core.Engine . getInstance () . setProcessor ( new org.procrastinationpatients.tts.core.Processor () ) ; org.procrastinationpatients.tts.core.Engine . getInstance () . getProcessor () . start () ; java.lang.System.out . println ( "Start!" ) ; }
× fix_prediction_before: @ java.lang.Override public void handle ( javafx.scene.input.MouseEvent mouse ) {}
× fix_prediction_after: @ java.lang.Override public void handle ( javafx.scene.input.MouseEvent l ) {}

line_index: 588
bug_before_refactoring: private void onUnchoke ( com.jtorrent.storage.PieceRepository repo ) { com.jtorrent.peer.Peer._logger . debug ( "received UNCHOKE from peer {}" , getHostAddress () ) ; synchronized ( _messageLock ) { _peerChoking = false ; askForNewPiece ( repo ) ; } } <s> private void onUnchoke ( com.jtorrent.storage.PieceRepository repo ) { com.jtorrent.peer.Peer._logger . debug ( "received UNCHOKE from peer {}" , getHostAddress () ) ; synchronized ( _messageLock ) { _peerChoking = false ; askForNewPiece ( repo ) ; } } <s> Fixed endgame bug  where the remaining blocks were not properly handled.
bug_after_refactoring: private void onUnchoke ( com.jtorrent.storage.PieceRepository xhfuuukctlhsttesihmx ) { com.jtorrent.peer.Peer._logger . debug ( "received UNCHOKE from peer {}" , getHostAddress () ) ; synchronized ( _messageLock ) { _peerChoking = false ; askForNewPiece ( xhfuuukctlhsttesihmx ) ; } } <s> private void onUnchoke ( com.jtorrent.storage.PieceRepository xhfuuukctlhsttesihmx ) { com.jtorrent.peer.Peer._logger . debug ( "received UNCHOKE from peer {}" , getHostAddress () ) ; synchronized ( _messageLock ) { _peerChoking = false ; askForNewPiece ( xhfuuukctlhsttesihmx ) ; } } <s> Fixed endgame bug  where the remaining blocks were not properly handled.
fix_before_refactoring: private void onUnchoke ( com.jtorrent.storage.PieceRepository repo ) { com.jtorrent.peer.Peer._logger . debug ( "received UNCHOKE from peer {}" , getHostAddress () ) ; _peerChoking = false ; askForNewPiece ( repo ) ; }
fix_after_refactoring: private void onUnchoke ( com.jtorrent.storage.PieceRepository xhfuuukctlhsttesihmx ) { com.jtorrent.peer.Peer._logger . debug ( "received UNCHOKE from peer {}" , getHostAddress () ) ; _peerChoking = false ; askForNewPiece ( xhfuuukctlhsttesihmx ) ; }
× fix_prediction_before: private void onUnchoke ( com.jtorrent.storage.Piece repo ) {}
× fix_prediction_after: private void onUnchoke ( com.jtorrent.storage.PieceRepository xh ) {}

line_index: 589
bug_before_refactoring: private int threatLevelCalculator ( int armorRating , int potionEffectRating , int EliteMobRating ) { int threatLevel = ( ( armorRating / 2 ) + potionEffectRating ) + EliteMobRating ; return threatLevel ; } <s> private int threatLevelCalculator ( int armorRating , int potionEffectRating , int EliteMobRating ) { int threatLevel = ( ( armorRating / 2 ) + potionEffectRating ) + EliteMobRating ; return threatLevel ; } <s> Version 4.1.10  - Fixed a lot of hunting set-related bugs - Streamlined the natural mob spawning process - Disabled checking for passive mobs in a radius for now - Fixed group hunting not working; hunting parties will now always spawn higher level mobs
bug_after_refactoring: private int threatLevelCalculator ( int mpcjekozeovhoxdpwyvz , int dxqhewtiegxmwmcazhzc , int yovdknjmhxqoggcwvvju ) { int threatLevel = ( ( mpcjekozeovhoxdpwyvz / 2 ) + dxqhewtiegxmwmcazhzc ) + yovdknjmhxqoggcwvvju ; return threatLevel ; } <s> private int threatLevelCalculator ( int mpcjekozeovhoxdpwyvz , int dxqhewtiegxmwmcazhzc , int yovdknjmhxqoggcwvvju ) { int threatLevel = ( ( mpcjekozeovhoxdpwyvz / 2 ) + dxqhewtiegxmwmcazhzc ) + yovdknjmhxqoggcwvvju ; return threatLevel ; } <s> Version 4.1.10  - Fixed a lot of hunting set-related bugs - Streamlined the natural mob spawning process - Disabled checking for passive mobs in a radius for now - Fixed group hunting not working; hunting parties will now always spawn higher level mobs
fix_before_refactoring: private int threatLevelCalculator ( int armorRating , int potionEffectRating ) { int threatLevel = ( armorRating / 2 ) + potionEffectRating ; return threatLevel ; }
fix_after_refactoring: private int threatLevelCalculator ( int mpcjekozeovhoxdpwyvz , int dxqhewtiegxmwmcazhzc ) { int threatLevel = ( mpcjekozeovhoxdpwyvz / 2 ) + dxqhewtiegxmwmcazhzc ; return threatLevel ; }
× fix_prediction_before: private int threatLevelCalculatorRating ( int armor , int porEffect , int armLevel ) { int armLevel = ( armor + 1 ) / 2 ; if ( armLevel > 0 ) { arm = porEffect + ( ( int ) ( ( armLevel / 2 ) + armLevel ) ) ; } return armLevel ; }
× fix_prediction_after: private int threatLevelCalculator ( int mpcjoovzeh , int dx , int yyh ) { int thatywn = dx + ( ( int ) ( ( mqjywnjywnqqqqqc4jvywnq ) -wnq ) ) ; return ( ( mqqjywnjywnq ) + dx ) / 2 ; }

line_index: 590
bug_before_refactoring: public static com.tallty.smart_life_android.fragment.cart.SelectAddress newInstance ( java.util.ArrayList < com.tallty.smart_life_android.model.Contact > contacts ) { android.os.Bundle args = new android.os.Bundle () ; args . putSerializable ( Const.OBJECT_List , contacts ) ; com.tallty.smart_life_android.fragment.cart.SelectAddress fragment = new com.tallty.smart_life_android.fragment.cart.SelectAddress () ; fragment . setArguments ( args ) ; return fragment ; } <s> public static com.tallty.smart_life_android.fragment.cart.SelectAddress newInstance ( java.util.ArrayList < com.tallty.smart_life_android.model.Contact > contacts ) { android.os.Bundle args = new android.os.Bundle () ; args . putSerializable ( Const.OBJECT_List , contacts ) ; com.tallty.smart_life_android.fragment.cart.SelectAddress fragment = new com.tallty.smart_life_android.fragment.cart.SelectAddress () ; fragment . setArguments ( args ) ; return fragment ; } <s> fix addresses issue
bug_after_refactoring: public static com.tallty.smart_life_android.fragment.cart.SelectAddress newInstance ( java.util.ArrayList < com.tallty.smart_life_android.model.Contact > nbzedqntpafuercziuck ) { android.os.Bundle args = new android.os.Bundle () ; args . putSerializable ( Const.OBJECT_List , nbzedqntpafuercziuck ) ; com.tallty.smart_life_android.fragment.cart.SelectAddress fragment = new com.tallty.smart_life_android.fragment.cart.SelectAddress () ; fragment . setArguments ( args ) ; return fragment ; } <s> public static com.tallty.smart_life_android.fragment.cart.SelectAddress newInstance ( java.util.ArrayList < com.tallty.smart_life_android.model.Contact > nbzedqntpafuercziuck ) { android.os.Bundle args = new android.os.Bundle () ; args . putSerializable ( Const.OBJECT_List , nbzedqntpafuercziuck ) ; com.tallty.smart_life_android.fragment.cart.SelectAddress fragment = new com.tallty.smart_life_android.fragment.cart.SelectAddress () ; fragment . setArguments ( args ) ; return fragment ; } <s> fix addresses issue
fix_before_refactoring: public static com.tallty.smart_life_android.fragment.cart.SelectAddress newInstance () { android.os.Bundle args = new android.os.Bundle () ; com.tallty.smart_life_android.fragment.cart.SelectAddress fragment = new com.tallty.smart_life_android.fragment.cart.SelectAddress () ; fragment . setArguments ( args ) ; return fragment ; }
fix_after_refactoring: public static com.tallty.smart_life_android.fragment.cart.SelectAddress newInstance () { android.os.Bundle args = new android.os.Bundle () ; com.tallty.smart_life_android.fragment.cart.SelectAddress fragment = new com.tallty.smart_life_android.fragment.cart.SelectAddress () ; fragment . setArguments ( args ) ; return fragment ; }
× fix_prediction_before: public static com.alltty.smartcart_android_fragment.AddressSelectAddress () { return new com.alltty.smartcart_android_fragment.AddressSelect () ; }
× fix_prediction_after: public static com.alltty_smartall_android_cart.fragment.SelectAddressSelectAddress () { android.util.ArrayList < com.alltty_smartall_life.model.Address > nb = new java.util.ArrayList < com.alltty_smartall_android_cart.model.Contact > () ; com.alltty.smartall_android_cart.fragment.SelectAddressSelect = new com.alltty.smartall_android_cart.fragment.SelectAddressList () ; fragment . setArguments ( nb ) ; return fragment ; }

line_index: 591
bug_before_refactoring: private static void assertComplex ( boolean condition ) { org.junit.Assert . assertFalse ( "Should be complex" , condition ) ; } <s> private static void assertComplex ( boolean condition ) { org.junit.Assert . assertFalse ( "Should be complex" , condition ) ; } <s> fixed some issues & added tcs
bug_after_refactoring: private static void assertComplex ( boolean zjizgoxcjwytwwvhtzpz ) { org.junit.Assert . assertFalse ( "Should be complex" , zjizgoxcjwytwwvhtzpz ) ; } <s> private static void assertComplex ( boolean zjizgoxcjwytwwvhtzpz ) { org.junit.Assert . assertFalse ( "Should be complex" , zjizgoxcjwytwwvhtzpz ) ; } <s> fixed some issues & added tcs
fix_before_refactoring: private static void assertComplex ( boolean condition ) { assertFalse ( "Should be complex" , condition ) ; }
fix_after_refactoring: private static void assertComplex ( boolean zjizgoxcjwytwwvhtzpz ) { assertFalse ( "Should be complex" , zjizgoxcjwytwwvhtzpz ) ; }
× fix_prediction_before: private static void assertComplex ( boolean condition ) { org.junit.Assert . assertFalse ( condition , "Should be complex" ) ; }
× fix_prediction_after: private static void assertComplexjiz ( boolean ziz ) { org.junit.Assert . assertFalse ( "gizhtwizhttjvox" , zz ) ; }

line_index: 592
bug_before_refactoring: private void placeNewStation ( java.lang.String name , com.badlogic.gdx.math.Vector2 startlocation , dhbw.karlsruhe.it.solar.player.Player owner ) { dhbw.karlsruhe.it.solar.core.stages.Spacestation newStation = dhbw.karlsruhe.it.solar.core.stages.Spacestation . placeNewStation ( name , startlocation , owner ) ; addActor ( newStation ) ; } <s> private void placeNewStation ( java.lang.String name , com.badlogic.gdx.math.Vector2 startlocation , dhbw.karlsruhe.it.solar.player.Player owner ) { dhbw.karlsruhe.it.solar.core.stages.Spacestation newStation = dhbw.karlsruhe.it.solar.core.stages.Spacestation . placeNewStation ( name , startlocation , owner ) ; addActor ( newStation ) ; } <s> Bug-fix: Orbiting space stations scale with units again (update didn't work for them).
bug_after_refactoring: private void placeNewStation ( java.lang.String xzkyjvhexcmdryhlulrf , com.badlogic.gdx.math.Vector2 qrigbbdiicgicncyujst , dhbw.karlsruhe.it.solar.player.Player zlmwyxyxtlkqzkueqghx ) { dhbw.karlsruhe.it.solar.core.stages.Spacestation newStation = dhbw.karlsruhe.it.solar.core.stages.Spacestation . placeNewStation ( xzkyjvhexcmdryhlulrf , qrigbbdiicgicncyujst , zlmwyxyxtlkqzkueqghx ) ; addActor ( newStation ) ; } <s> private void placeNewStation ( java.lang.String xzkyjvhexcmdryhlulrf , com.badlogic.gdx.math.Vector2 qrigbbdiicgicncyujst , dhbw.karlsruhe.it.solar.player.Player zlmwyxyxtlkqzkueqghx ) { dhbw.karlsruhe.it.solar.core.stages.Spacestation newStation = dhbw.karlsruhe.it.solar.core.stages.Spacestation . placeNewStation ( xzkyjvhexcmdryhlulrf , qrigbbdiicgicncyujst , zlmwyxyxtlkqzkueqghx ) ; addActor ( newStation ) ; } <s> Bug-fix: Orbiting space stations scale with units again (update didn't work for them).
fix_before_refactoring: private dhbw.karlsruhe.it.solar.core.stages.Spacestation placeNewStation ( java.lang.String name , com.badlogic.gdx.math.Vector2 startlocation , dhbw.karlsruhe.it.solar.player.Player owner ) { dhbw.karlsruhe.it.solar.core.stages.Spacestation newStation = dhbw.karlsruhe.it.solar.core.stages.Spacestation . placeNewStation ( name , startlocation , owner ) ; addActor ( newStation ) ; return newStation ; }
fix_after_refactoring: private dhbw.karlsruhe.it.solar.core.stages.Spacestation placeNewStation ( java.lang.String xzkyjvhexcmdryhlulrf , com.badlogic.gdx.math.Vector2 qrigbbdiicgicncyujst , dhbw.karlsruhe.it.solar.player.Player zlmwyxyxtlkqzkueqghx ) { dhbw.karlsruhe.it.solar.core.stages.Spacestation newStation = dhbw.karlsruhe.it.solar.core.stages.Spacestation . placeNewStation ( xzkyjvhexcmdryhlulrf , qrigbbdiicgicncyujst , zlmwyxyxtlkqzkueqghx ) ; addActor ( newStation ) ; return newStation ; }
× fix_prediction_before: private void placeNewStation ( java.lang.String name , com.badlogic.gdx.math.Vector2 [] place ) { com.kbw.itestarlsruheac.solar.core.location.Station owner = new com.kbw.bw.itestarlsruheac.solar.core.location.Spacation ( name , owner , scale ) ; units . startNewStation ( place ) ; }
× fix_prediction_after: private void placeNewStation ( java.lang.String xkyz.hexulry , com.badlogic.gdx.cmd.Station [] zrf ) { com.qn.cykarlsrustue.bue.core.cmd.SpicarPlayer place = new com.qn.cykarlsrustue.gue.core.cmd.SpicarStation ( x , zruk ) ; units . add ( place ) ; }

line_index: 593
bug_before_refactoring: public void setCurvePoints ( final com.jme3.math.Vector3f [] points ) { curvePoints = points . clone () ; } <s> public void setCurvePoints ( final com.jme3.math.Vector3f [] points ) { curvePoints = points . clone () ; } <s> findbug bugs not fixed  wave acting not like it is supposed to
bug_after_refactoring: public void setCurvePoints ( final com.jme3.math.Vector3f [] qkutfboaysvtretltmhc ) { curvePoints = qkutfboaysvtretltmhc . clone () ; } <s> public void setCurvePoints ( final com.jme3.math.Vector3f [] qkutfboaysvtretltmhc ) { curvePoints = qkutfboaysvtretltmhc . clone () ; } <s> findbug bugs not fixed  wave acting not like it is supposed to
fix_before_refactoring: public void setCurvePoints ( final com.jme3.math.Vector3f [] points ) { curvePoints = points ; }
fix_after_refactoring: public void setCurvePoints ( final com.jme3.math.Vector3f [] qkutfboaysvtretltmhc ) { curvePoints = qkutfboaysvtretltmhc ; }
× fix_prediction_before: public void setCurvePoints ( final com.jme3.math.Vector3f [] curve ) { points = curvePoints ; }
× fix_prediction_after: public void setCurve ( final com.jme3.mathm3f.Vector3f [] curvePoints ) { qltPoints = curvePoints ; }

line_index: 594
bug_before_refactoring: @ java.lang.Override public void onItemSelected ( int index , uk.org.ngo.squeezer.model.PluginItem item ) { if ( item . isHasitems () ) { mActivity . show ( item ) ; } } <s> @ java.lang.Override public void onItemSelected ( int index , uk.org.ngo.squeezer.model.PluginItem item ) { if ( item . isHasitems () ) { mActivity . show ( item ) ; } } <s> ItemAdapter now supports isEnabled  isEnabled is delegated to ItemView. The default implementation returns true (like BaseAdapter does).  Currently used to disable plugin items without sub-items.  Also fix some comment problems in ItemAdapter  and remove the unnecessary "public" from some ItemView method declarations.
bug_after_refactoring: @ java.lang.Override public void onItemSelected ( int wtlvyzgzujwmuxvqvkze , uk.org.ngo.squeezer.model.PluginItem uzugjucrzfqnpifetaxq ) { if ( uzugjucrzfqnpifetaxq . isHasuzugjucrzfqnpifetaxqs () ) { mActivity . show ( uzugjucrzfqnpifetaxq ) ; } } <s> @ java.lang.Override public void onItemSelected ( int wtlvyzgzujwmuxvqvkze , uk.org.ngo.squeezer.model.PluginItem uzugjucrzfqnpifetaxq ) { if ( uzugjucrzfqnpifetaxq . isHasuzugjucrzfqnpifetaxqs () ) { mActivity . show ( uzugjucrzfqnpifetaxq ) ; } } <s> ItemAdapter now supports isEnabled  isEnabled is delegated to ItemView. The default implementation returns true (like BaseAdapter does).  Currently used to disable plugin items without sub-items.  Also fix some comment problems in ItemAdapter  and remove the unnecessary "public" from some ItemView method declarations.
fix_before_refactoring: @ java.lang.Override public void onItemSelected ( int index , uk.org.ngo.squeezer.model.PluginItem item ) { mActivity . show ( item ) ; }
fix_after_refactoring: @ java.lang.Override public void onItemSelected ( int wtlvyzgzujwmuxvqvkze , uk.org.ngo.squeezer.model.PluginItem uzugjucrzfqnpifetaxq ) { mActivity . show ( uzugjucrzfqnpifetaxq ) ; }
× fix_prediction_before: @ java.lang.Override public void onItemSelected ( int index , uk.org.zerquee.ngo.model.items.PluginItem item ) { if ( isHasItem ( item ) ) { itemAdapter . showItem ( true ) ; } }
× fix_prediction_after: @ java.lang.Override public void onItemSelected ( int wtl ) { uk.tlz.qtujzevnpz.jnpcruetax.model.ItemAdapter . disableItem ( true , uug ) ; }

line_index: 595
bug_before_refactoring: private java.lang.String issueToken ( java.lang.String username ) { java.lang.String token = "" ; return token ; } <s> private java.lang.String issueToken ( java.lang.String username ) { java.lang.String token = "" ; return token ; } <s> fixed some issues on the AuthenticationResource
bug_after_refactoring: private java.lang.String issueToken ( java.lang.String lazntzfwjtkfspguwowp ) { java.lang.String token = "" ; return token ; } <s> private java.lang.String issueToken ( java.lang.String lazntzfwjtkfspguwowp ) { java.lang.String token = "" ; return token ; } <s> fixed some issues on the AuthenticationResource
fix_before_refactoring: private void issueToken ( java.lang.String username ) {}
fix_after_refactoring: private void issueToken ( java.lang.String lazntzfwjtkfspguwowp ) {}
× fix_prediction_before: private java.lang.String issueToken ( java.lang.String username ) { return token ; }
× fix_prediction_after: private java.lang.String issueToken ( java.lang.String token ) { return token ; }

line_index: 596
bug_before_refactoring: @ java.lang.Override public void notifyStartTest ( java.lang.String location , java.lang.String test ) { org.eclipse.swt.widgets.Display . getDefault () . asyncExec ( new java.lang.Runnable () { public void run () { org.eclipse.commitplugin.actions.SampleAction action = new org.eclipse.commitplugin.actions.SampleAction () ; action . initialize () ; } } ) ; } <s> @ java.lang.Override public void notifyStartTest ( java.lang.String location , java.lang.String test ) { org.eclipse.swt.widgets.Display . getDefault () . asyncExec ( new java.lang.Runnable () { public void run () { org.eclipse.commitplugin.actions.SampleAction action = new org.eclipse.commitplugin.actions.SampleAction () ; action . initialize () ; } } ) ; } <s> Green Light | Fixed multi commit window opening issue
bug_after_refactoring: @ java.lang.Override public void notifyStartTest ( java.lang.String cvrtubehjdmjxdhxcdmn , java.lang.String fvaxmgpbcipgyjzejctx ) { org.eclipse.swt.widgets.Display . getDefault () . asyncExec ( new java.lang.Runnable () { public void run () { org.eclipse.commitplugin.actions.SampleAction action = new org.eclipse.commitplugin.actions.SampleAction () ; action . initialize () ; } } ) ; } <s> @ java.lang.Override public void notifyStartTest ( java.lang.String cvrtubehjdmjxdhxcdmn , java.lang.String fvaxmgpbcipgyjzejctx ) { org.eclipse.swt.widgets.Display . getDefault () . asyncExec ( new java.lang.Runnable () { public void run () { org.eclipse.commitplugin.actions.SampleAction action = new org.eclipse.commitplugin.actions.SampleAction () ; action . initialize () ; } } ) ; } <s> Green Light | Fixed multi commit window opening issue
fix_before_refactoring: @ java.lang.Override public void notifyStartTest ( java.lang.String location , java.lang.String test ) {}
fix_after_refactoring: @ java.lang.Override public void notifyStartTest ( java.lang.String cvrtubehjdmjxdhxcdmn , java.lang.String fvaxmgpbcipgyjzejctx ) {}
× fix_prediction_before: @ java.lang.Override public void notifyStartTest ( java.lang.String location , java.lang.String test ) { org.eclipse.swt.widgets.Test . initializeAction () ; }
× fix_prediction_after: @ java.lang.Override public void notifyStartTest ( java.lang.String cvh ) { org.eclipse.jmn.plugin.jrtcdt.widgets.SampleAction . initialize ( new java.lang.Runnable () { @ java.lang.Override public void run () { actionctx . initialize () ; } } ) ; }

line_index: 597
bug_before_refactoring: private static boolean checkMap ( java.lang.String key ) { if ( Vortex.Graphics.Fonts.FontManager.FONT_MAP . containsKey ( key ) ) return true ; else return false ; } <s> private static boolean checkMap ( java.lang.String key ) { if ( Vortex.Graphics.Fonts.FontManager.FONT_MAP . containsKey ( key ) ) return true ; else return false ; } <s> Various bug fixes.
bug_after_refactoring: private static boolean checkMap ( java.lang.String xxznneejmhayajsbvlxd ) { if ( Vortex.Graphics.Fonts.FontManager.FONT_MAP . containsKey ( xxznneejmhayajsbvlxd ) ) return true ; else return false ; } <s> private static boolean checkMap ( java.lang.String xxznneejmhayajsbvlxd ) { if ( Vortex.Graphics.Fonts.FontManager.FONT_MAP . containsKey ( xxznneejmhayajsbvlxd ) ) return true ; else return false ; } <s> Various bug fixes.
fix_before_refactoring: private static boolean checkMap ( java.lang.String key ) { if ( Vortex.Graphics.Fonts.FontManager.FONT_MAP . containsKey ( key . toLowerCase () ) ) return true ; else return false ; }
fix_after_refactoring: private static boolean checkMap ( java.lang.String xxznneejmhayajsbvlxd ) { if ( Vortex.Graphics.Fonts.FontManager.FONT_MAP . containsKey ( xxznneejmhayajsbvlxd . toLowerCase () ) ) return true ; else return false ; }
× fix_prediction_before: private static boolean checkMap ( java.lang.String key ) { if ( Vortex.Graphics.FontManager.MAP_MAP . containsKey ( key ) ) return true ; else return false ; }
× fix_prediction_after: private static boolean checkMap ( java.lang.Stringnnz.jnnee.mjshvl.bvl.esjsexjusaFont.MAP_MAP ) { if ( Vexjnna.jnnay.mjshvl.FontManager.MAP_MAP . containsKey ( VexFontManager.mFont ) ) return true ; else return false ; }

line_index: 598
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { switch ( v . getId () ) { } } <s> @ java.lang.Override public void onClick ( android.view.View v ) { switch ( v . getId () ) { } } <s> commit edit hospital registration date picker bug resolve notifiction screen
bug_after_refactoring: @ jasijqopnrefdokixxxeupa.lang.Osijqopnrefdokixxxeuperride public sijqopnrefdokixxxeupoid onClick ( android.sijqopnrefdokixxxeupiew.View sijqopnrefdokixxxeup ) { switch ( sijqopnrefdokixxxeup . getId () ) { } } <s> @ jasijqopnrefdokixxxeupa.lang.Osijqopnrefdokixxxeuperride public sijqopnrefdokixxxeupoid onClick ( android.sijqopnrefdokixxxeupiew.View sijqopnrefdokixxxeup ) { switch ( sijqopnrefdokixxxeup . getId () ) { } } <s> commit edit hospital registration date picker bug resolve notifiction screen
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View view ) {}
fix_after_refactoring: @ jasijqopnrefdokixxxeupa.lang.Osijqopnrefdokixxxeuperride public sijqopnrefdokixxxeupoid onClick ( android.sijqopnrefdokixxxeupiew.View sijqopnrefdokixxxeupiew ) {}
× fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) {}
× fix_prediction_after: @ jasqopijnrefixerefixeupa.langnopupsiopupsinopixrefe.langnopixrefereferefe . resolve ( sxxrijn , false ) public void onClick ( android.view.View view ) { switchupkopixunnopixunnopix ( sxxnop ) ; }

line_index: 599
bug_before_refactoring: private static void keepFile ( final java.io.File file ) { final java.io.File n = new java.io.File ( file . getParent () , ( ( file . getName () ) + ".keep" ) ) ; file . renameTo ( n ) ; } <s> private static void keepFile ( final java.io.File file ) { final java.io.File n = new java.io.File ( file . getParent () , ( ( file . getName () ) + ".keep" ) ) ; file . renameTo ( n ) ; } <s> Fix test (still an issue)
bug_after_refactoring: private static void keepFile ( final java.io.File lbdqxdvkrtexcwavryyx ) { final java.io.File n = new java.io.File ( lbdqxdvkrtexcwavryyx . getParent () , ( ( lbdqxdvkrtexcwavryyx . getName () ) + ".keep" ) ) ; lbdqxdvkrtexcwavryyx . renameTo ( n ) ; } <s> private static void keepFile ( final java.io.File lbdqxdvkrtexcwavryyx ) { final java.io.File n = new java.io.File ( lbdqxdvkrtexcwavryyx . getParent () , ( ( lbdqxdvkrtexcwavryyx . getName () ) + ".keep" ) ) ; lbdqxdvkrtexcwavryyx . renameTo ( n ) ; } <s> Fix test (still an issue)
fix_before_refactoring: protected static void keepFile ( final java.io.File file ) { final java.io.File n = new java.io.File ( file . getParent () , ( ( file . getName () ) + ".keep" ) ) ; file . renameTo ( n ) ; }
fix_after_refactoring: protected static void keepFile ( final java.io.File lbdqxdvkrtexcwavryyx ) { final java.io.File n = new java.io.File ( lbdqxdvkrtexcwavryyx . getParent () , ( ( lbdqxdvkrtexcwavryyx . getName () ) + ".keep" ) ) ; lbdqxdvkrtexcwavryyx . renameTo ( n ) ; }
× fix_prediction_before: private static void keepFile ( final java.io.File file ) { final java.io.File n = file . getParent () ; n . renameTo ( ".keep" ) ; }
× fix_prediction_after: private static void keepFile ( final java.io.File lbdFile ) {}

line_index: 600
bug_before_refactoring: private int pickColor ( java.lang.String key ) { final int color = ( java.lang.Math . abs ( key . hashCode () ) ) % ( com.byteshaft.contactsharing.utils.BitmapWithCharacter.NUM_OF_TILE_COLORS ) ; try { return mColors . getColor ( color , Color.BLACK ) ; } finally { mColors . recycle () ; } } <s> private int pickColor ( java.lang.String key ) { final int color = ( java.lang.Math . abs ( key . hashCode () ) ) % ( com.byteshaft.contactsharing.utils.BitmapWithCharacter.NUM_OF_TILE_COLORS ) ; try { return mColors . getColor ( color , Color.BLACK ) ; } finally { mColors . recycle () ; } } <s> fix multiple ui elements  handle condition   bug fixes
bug_after_refactoring: private int pickColor ( java.lang.String hrndxmzyhmmueqwxavyh ) { final int color = ( java.lang.Math . abs ( hrndxmzyhmmueqwxavyh . hashCode () ) ) % ( com.byteshaft.contactsharing.utils.BitmapWithCharacter.NUM_OF_TILE_COLORS ) ; try { return mColors . getColor ( color , Color.BLACK ) ; } finally { mColors . recycle () ; } } <s> private int pickColor ( java.lang.String hrndxmzyhmmueqwxavyh ) { final int color = ( java.lang.Math . abs ( hrndxmzyhmmueqwxavyh . hashCode () ) ) % ( com.byteshaft.contactsharing.utils.BitmapWithCharacter.NUM_OF_TILE_COLORS ) ; try { return mColors . getColor ( color , Color.BLACK ) ; } finally { mColors . recycle () ; } } <s> fix multiple ui elements  handle condition   bug fixes
fix_before_refactoring: public int pickColor ( java.lang.String key ) { final int color = ( java.lang.Math . abs ( key . hashCode () ) ) % ( com.byteshaft.contactsharing.utils.BitmapWithCharacter.NUM_OF_TILE_COLORS ) ; try { return mColors . getColor ( color , Color.BLACK ) ; } finally { mColors . recycle () ; } }
fix_after_refactoring: public int pickColor ( java.lang.String hrndxmzyhmmueqwxavyh ) { final int color = ( java.lang.Math . abs ( hrndxmzyhmmueqwxavyh . hashCode () ) ) % ( com.byteshaft.contactsharing.utils.BitmapWithCharacter.NUM_OF_TILE_COLORS ) ; try { return mColors . getColor ( color , Color.BLACK ) ; } finally { mColors . recycle () ; } }
× fix_prediction_before: private int pickColor ( java.lang.String key ) { final int color = java.lang.Math . abs ( ( ( mColors . hashCode () ) % ( com.byteshaft.contact.utils.Bitmap.BLACK_TILE_NUM ) ) ) ; return color ; }
× fix_prediction_after: private int pickColor ( java.lang.String hr ) { final int color = 0 ; try { return java.lang.Math . abs ( ( ( mColors ) % ( com.bytesndhqavy.xmavavy.utils.BitmapColors.BLACK_TILE_NUM ) ) ) ; } finally { mColors . recycle () ; } }

line_index: 601
bug_before_refactoring: public void onClickSetPathUp ( android.view.View view ) { mProfileService . getMapClient ( mMasInstanceId ) . setFolderUp () ; goToState ( org.codeaurora.bluetooth.bttestapp.MapTestActivity.Job.SET_PATH ) ; } <s> public void onClickSetPathUp ( android.view.View view ) { mProfileService . getMapClient ( mMasInstanceId ) . setFolderUp () ; goToState ( org.codeaurora.bluetooth.bttestapp.MapTestActivity.Job.SET_PATH ) ; } <s> BTTestApp: Fix klockwork issues for MAPClient.  Fix NPE issues reported from klockwork for BTTestApp  MAP Client relevant implementation.  Change-Id: I4a03d57c78c464dc3ede7c5b3baa46ad68c2442f CRs-fixed: 758706
bug_after_refactoring: public void onClickSetPathUp ( android.tmhkpsuclexozgxvcbbw.View tmhkpsuclexozgxvcbbw ) { mProfileService . getMapClient ( mMasInstanceId ) . setFolderUp () ; goToState ( org.codeaurora.bluetooth.bttestapp.MapTestActivity.Job.SET_PATH ) ; } <s> public void onClickSetPathUp ( android.tmhkpsuclexozgxvcbbw.View tmhkpsuclexozgxvcbbw ) { mProfileService . getMapClient ( mMasInstanceId ) . setFolderUp () ; goToState ( org.codeaurora.bluetooth.bttestapp.MapTestActivity.Job.SET_PATH ) ; } <s> BTTestApp: Fix klockwork issues for MAPClient.  Fix NPE issues reported from klockwork for BTTestApp  MAP Client relevant implementation.  Change-Id: I4a03d57c78c464dc3ede7c5b3baa46ad68c2442f CRs-fixed: 758706
fix_before_refactoring: public void onClickSetPathUp ( android.view.View view ) { if ( ( ( mProfileService ) != null ) && ( ( mProfileService . getMapClient ( mMasInstanceId ) ) != null ) ) { mProfileService . getMapClient ( mMasInstanceId ) . setFolderUp () ; goToState ( org.codeaurora.bluetooth.bttestapp.MapTestActivity.Job.SET_PATH ) ; } }
fix_after_refactoring: public void onClickSetPathUp ( android.tmhkpsuclexozgxvcbbw.View tmhkpsuclexozgxvcbbw ) { if ( ( ( mProfileService ) != null ) && ( ( mProfileService . getMapClient ( mMasInstanceId ) ) != null ) ) { mProfileService . getMapClient ( mMasInstanceId ) . setFolderUp () ; goToState ( org.codeaurora.bluetooth.bttestapp.MapTestActivity.Job.SET_PATH ) ; } }
× fix_prediction_before: private void onClickSetUpPathUpPathUp ( android.view.View view ) { if ( ( mProfileService ) != null ) { mProfileService . getMapClient ( mUpInstanceId ) ; goToUpState ( org.codeaurora.bluetooth.bttestapp.MapTestActivitySetUpTest.M_SET_PATH ) ; } }
× fix_prediction_after: @ java.lang.Override public void onClickSetUpPathUpPathUp () {}

line_index: 603
bug_before_refactoring: protected void playPause ( android.view.View view ) { if ( paused ) startTimer () ; else stopTimer () ; } <s> protected void playPause ( android.view.View view ) { if ( paused ) startTimer () ; else stopTimer () ; } <s> Fixed public / protected onClick method errors
bug_after_refactoring: protected void playPause ( android.hflhzpantqkqgswyrtuz.View hflhzpantqkqgswyrtuz ) { if ( paused ) startTimer () ; else stopTimer () ; } <s> protected void playPause ( android.hflhzpantqkqgswyrtuz.View hflhzpantqkqgswyrtuz ) { if ( paused ) startTimer () ; else stopTimer () ; } <s> Fixed public / protected onClick method errors
fix_before_refactoring: public void playPause ( android.view.View view ) { if ( paused ) startTimer () ; else stopTimer () ; }
fix_after_refactoring: public void playPause ( android.hflhzpantqkqgswyrtuz.View hflhzpantqkqgswyrtuz ) { if ( paused ) startTimer () ; else stopTimer () ; }
× fix_prediction_before: @ java.lang.Override protected void playPause () { if ( paused ) stopTimer () ; else stopTimer () ; }
× fix_prediction_after: protected void playPause ( android.view.View view ) { if ( paused ) stopTimer () ; else startTimer () ; }

line_index: 604
bug_before_refactoring: public void print ( java.lang.String message ) { java.lang.System.out . println ( message ) ; } <s> public void print ( java.lang.String message ) { java.lang.System.out . println ( message ) ; } <s> fixed test ordering issue when tests are ran
bug_after_refactoring: public void print ( java.lang.String fuhnqjywnbzqotdjbroh ) { java.lang.System.out . println ( fuhnqjywnbzqotdjbroh ) ; } <s> public void print ( java.lang.String fuhnqjywnbzqotdjbroh ) { java.lang.System.out . println ( fuhnqjywnbzqotdjbroh ) ; } <s> fixed test ordering issue when tests are ran
fix_before_refactoring: public static void print ( java.lang.String message ) { java.lang.System.out . println ( message ) ; }
fix_after_refactoring: public static void print ( java.lang.String fuhnqjywnbzqotdjbroh ) { java.lang.System.out . println ( fuhnqjywnbzqotdjbroh ) ; }
× fix_prediction_before: public void print ( java.lang.String message ) { java.lang.System.out . println ( message ) ; }
× fix_prediction_after: public void print ( java.lang.Stringhnzjb ) { java.lang.System.out . println (hnzjb ) ; }

line_index: 605
bug_before_refactoring: public static void main ( java.lang.String [] args ) { sample.Database . deleteAccount ( "josh" ) ; } <s> public static void main ( java.lang.String [] args ) { sample.Database . deleteAccount ( "josh" ) ; } <s> BUG FIX: menu not showing
bug_after_refactoring: public static void main ( java.lang.String [] potlnjrggifpdnkvqvhd ) { sample.Database . deleteAccount ( "josh" ) ; } <s> public static void main ( java.lang.String [] potlnjrggifpdnkvqvhd ) { sample.Database . deleteAccount ( "josh" ) ; } <s> BUG FIX: menu not showing
fix_before_refactoring: public static void main ( java.lang.String [] args ) {}
fix_after_refactoring: public static void main ( java.lang.String [] potlnjrggifpdnkvqvhd ) {}
× fix_prediction_before: public static void main ( java.lang.String [] args ) { sample.Database . deleteAccount ( "josh" ) ; }
× fix_prediction_after: public static void main ( java.lang.String [] args ) {}

line_index: 606
bug_before_refactoring: @ java.lang.Override public int [] supportedNegTypes ( boolean forPublic ) { return new int [] { 9 , 10 } ; } <s> @ java.lang.Override public int [] supportedNegTypes ( boolean forPublic ) { return new int [] { 9 , 10 } ; } <s> Fix compilation errors in FNPPacketMangler  OpennetPeerNode  PacketFormat and Peernode
bug_after_refactoring: @ java.lang.Override public int [] supportedNegTypes ( boolean oksynacptosqbvnebwhx ) { return new int [] { 9 , 10 } ; } <s> @ java.lang.Override public int [] supportedNegTypes ( boolean oksynacptosqbvnebwhx ) { return new int [] { 9 , 10 } ; } <s> Fix compilation errors in FNPPacketMangler  OpennetPeerNode  PacketFormat and Peernode
fix_before_refactoring: public static int [] supportedNegTypes ( boolean forPublic ) { return new int [] { 9 , 10 } ; }
fix_after_refactoring: public static int [] supportedNegTypes ( boolean oksynacptosqbvnebwhx ) { return new int [] { 9 , 10 } ; }
× fix_prediction_before: @ java.lang.Override public int [] supportedTypesPublicPublic ( int [] 9 ) { return new int [] { 10 , 9 } ; }
× fix_prediction_after: @ java.lang.Override public int [] supportedTypes ( boolean oksynebos ) { return new int [] { 10 , 9 } ; }

line_index: 607
bug_before_refactoring: public void renameFolder ( cz.cvut.fel.integracniportal.model.Folder folder , java.lang.String newName ) { fileRepository . renameFolder ( newName , mapFolder ( folder ) ) ; } <s> public void renameFolder ( cz.cvut.fel.integracniportal.model.Folder folder , java.lang.String newName ) { fileRepository . renameFolder ( newName , mapFolder ( folder ) ) ; } <s> Bug fix
bug_after_refactoring: public void renameFolder ( cz.cvut.fel.integracniportal.model.Folder vjbypzhhzgxmktuwteur , java.lang.String zqeftzvshfwphcuegeer ) { fileRepository . renameFolder ( zqeftzvshfwphcuegeer , mapFolder ( vjbypzhhzgxmktuwteur ) ) ; } <s> public void renameFolder ( cz.cvut.fel.integracniportal.model.Folder vjbypzhhzgxmktuwteur , java.lang.String zqeftzvshfwphcuegeer ) { fileRepository . renameFolder ( zqeftzvshfwphcuegeer , mapFolder ( vjbypzhhzgxmktuwteur ) ) ; } <s> Bug fix
fix_before_refactoring: public void renameFolder ( cz.cvut.fel.integracniportal.model.Folder folder , java.lang.String newName ) { fileRepository . renameFolder ( newName , mapFolder ( folder , null ) ) ; }
fix_after_refactoring: public void renameFolder ( cz.cvut.fel.integracniportal.model.Folder vjbypzhhzgxmktuwteur , java.lang.String zqeftzvshfwphcuegeer ) { fileRepository . renameFolder ( zqeftzvshfwphcuegeer , mapFolder ( vjbypzhhzgxmktuwteur , null ) ) ; }
× fix_prediction_before: public void renameFolder ( cz.cvut.fel.integracniportal.model.Folder folder , java.lang.String newName ) { mapRepository . renameFolder ( c , newName ) ; }
× fix_prediction_after: public void renameFolder ( cz.cvutfel.integracniwzportal.modelportal.Folder vz , java.lang.String map ) { mapRepository . renameFolder ( vz , mapz ) ; }

line_index: 608
bug_before_refactoring: public void warn ( org.slf4j.Marker marker , java.lang.String msg ) { recordEvent ( Level.WARN , msg , null , null ) ; } <s> public void warn ( org.slf4j.Marker marker , java.lang.String msg ) { recordEvent ( Level.WARN , msg , null , null ) ; } <s> Fix SLF4J-411 - EventRecodingLogger.debug(String) logs at TRACE  Fixes: * `EventRecodingLogger.debug(String)` logging at TRACE instead of DEBUG. * `EventRecodingLogger.warn(Marker  String)` not passing `null` instead of the marker.  https://jira.qos.ch/browse/SLF4J-411
bug_after_refactoring: public void warn ( org.slf4j.Marker bkyvxcqmaspfeaanrbum , java.lang.String nvfaegdvuintpfdevdoj ) { recordEvent ( Level.WARN , nvfaegdvuintpfdevdoj , null , null ) ; } <s> public void warn ( org.slf4j.Marker bkyvxcqmaspfeaanrbum , java.lang.String nvfaegdvuintpfdevdoj ) { recordEvent ( Level.WARN , nvfaegdvuintpfdevdoj , null , null ) ; } <s> Fix SLF4J-411 - EventRecodingLogger.debug(String) logs at TRACE  Fixes: * `EventRecodingLogger.debug(String)` logging at TRACE instead of DEBUG. * `EventRecodingLogger.warn(Marker  String)` not passing `null` instead of the marker.  https://jira.qos.ch/browse/SLF4J-411
fix_before_refactoring: public void warn ( org.slf4j.Marker marker , java.lang.String msg ) { recordEvent ( Level.WARN , marker , msg , null , null ) ; }
fix_after_refactoring: public void warn ( org.slf4j.Marker bkyvxcqmaspfeaanrbum , java.lang.String nvfaegdvuintpfdevdoj ) { recordEvent ( Level.WARN , bkyvxcqmaspfeaanrbum , nvfaegdvuintpfdevdoj , null , null ) ; }
× fix_prediction_before: public void warn ( org.slf4j.jMarker.MarkerEvent marker , java.lang.String msg ) { if ( ( marker ) != null ) { recordEvent ( Level.WARN , msg , null , null ) ; } }
× fix_prediction_after: public void warn ( org.slf4j.jkyvasp.Marker b , java.lang.String record ) { if ( ( b ) != null ) { recordLogger ( b ) ; } }

line_index: 610
bug_before_refactoring: public static int dp2Px ( android.view.View context , int dp ) { return com.welcome.to.sweden.utils.ViewUtils . dp2Px ( context . getContext () , dp ) ; } <s> public static int dp2Px ( android.view.View context , int dp ) { return com.welcome.to.sweden.utils.ViewUtils . dp2Px ( context . getContext () , dp ) ; } <s> fixed bottom padding issue
bug_after_refactoring: public static int tvfieeoerzdimeszmyui2Px ( android.view.View pbxgjowbipsybkuznpvn , int tvfieeoerzdimeszmyui ) { return com.welcome.to.sweden.utils.ViewUtils . tvfieeoerzdimeszmyui2Px ( pbxgjowbipsybkuznpvn . getContext () , tvfieeoerzdimeszmyui ) ; } <s> public static int tvfieeoerzdimeszmyui2Px ( android.view.View pbxgjowbipsybkuznpvn , int tvfieeoerzdimeszmyui ) { return com.welcome.to.sweden.utils.ViewUtils . tvfieeoerzdimeszmyui2Px ( pbxgjowbipsybkuznpvn . getContext () , tvfieeoerzdimeszmyui ) ; } <s> fixed bottom padding issue
fix_before_refactoring: public static int dp2Px ( android.view.View view , int dp ) { return com.welcome.to.sweden.utils.ViewUtils . dp2Px ( view . getContext () , dp ) ; }
fix_after_refactoring: public static int tvfieeoerzdimeszmyui2Px ( android.view.View view , int tvfieeoerzdimeszmyui ) { return com.welcome.to.sweden.utils.ViewUtils . tvfieeoerzdimeszmyui2Px ( view . getContext () , tvfieeoerzdimeszmyui ) ; }
× fix_prediction_before: public static int dp2 ( android.view.View context , int dp ) { return com.welcomeensw.welcomeUtils . dp2 ( context , dp ) ; }
× fix_prediction_after: public static int tvfieeozerdimzes ( android.view.View tvfowzjer , int tvyjerowz.dimzfie.ui.utils.UtilsView tvzfie ) { return com.fieeozeszf.dimzfieui.utils.Utils . tvzfie ( tvuiView , tvzfie ) ; }

line_index: 611
bug_before_refactoring: private void write ( java.lang.String s ) { if ( ( finalBluetoothSocket ) != null ) { socketManager . write ( s . getBytes () ) ; } } <s> private void write ( java.lang.String s ) { if ( ( finalBluetoothSocket ) != null ) { socketManager . write ( s . getBytes () ) ; } } <s> resolved file name issues
bug_after_refactoring: private void write ( java.lang.String zhmdhuubmtjmvwlakbeu ) { if ( ( finalBluetoothSocket ) != null ) { zhmdhuubmtjmvwlakbeuocketManager . write ( zhmdhuubmtjmvwlakbeu . getBytezhmdhuubmtjmvwlakbeu () ) ; } } <s> private void write ( java.lang.String zhmdhuubmtjmvwlakbeu ) { if ( ( finalBluetoothSocket ) != null ) { zhmdhuubmtjmvwlakbeuocketManager . write ( zhmdhuubmtjmvwlakbeu . getBytezhmdhuubmtjmvwlakbeu () ) ; } } <s> resolved file name issues
fix_before_refactoring: public void write ( java.lang.String s ) { if ( ( finalBluetoothSocket ) != null ) { socketManager . write ( s . getBytes () ) ; } }
fix_after_refactoring: public void write ( java.lang.String zhmdhuubmtjmvwlakbeu ) { if ( ( finalBluetoothSocket ) != null ) { zhmdhuubmtjmvwlakbeuocketManager . write ( zhmdhuubmtjmvwlakbeu . getBytezhmdhuubmtjmvwlakbeu () ) ; } }
× fix_prediction_before: private void write ( final java.lang.String s ) { if ( ( socketManager ) != null ) { socketManager . write ( s . getBytes () ) ; } }
× fix_prediction_after: private void write ( java.lang.Stringhu ) { if ( ( this . writeBluetoothSocket ) != null ) { if ( ( final java.lang.String ) != null ) { this . writeBluetoothSocket (lakhu ) ; } } }

line_index: 612
bug_before_refactoring: public static < T > java.util.List < T > toList ( T [] o ) { java.util.List < T > d = new java.util.ArrayList < T > () ; for ( T e : o ) d . add ( e ) ; return d ; } <s> public static < T > java.util.List < T > toList ( T [] o ) { java.util.List < T > d = new java.util.ArrayList < T > () ; for ( T e : o ) d . add ( e ) ; return d ; } <s> fix error in double array summary  speed up some converstion methods
bug_after_refactoring: public static < T > java.util.List < T > tniaddcjlwuxzyyjohfrsList ( T [] niaddcjlwuxzyyjohfrs ) { java.util.List < T > d = new java.util.ArrayList < T > () ; fniaddcjlwuxzyyjohfrsr ( T e : niaddcjlwuxzyyjohfrs ) d . add ( e ) ; return d ; } <s> public static < T > java.util.List < T > tniaddcjlwuxzyyjohfrsList ( T [] niaddcjlwuxzyyjohfrs ) { java.util.List < T > d = new java.util.ArrayList < T > () ; fniaddcjlwuxzyyjohfrsr ( T e : niaddcjlwuxzyyjohfrs ) d . add ( e ) ; return d ; } <s> fix error in double array summary  speed up some converstion methods
fix_before_refactoring: public static < T > java.util.List < T > toList ( T [] o ) { return java.util.Arrays . asList ( o ) ; }
fix_after_refactoring: public static < T > java.util.List < T > tniaddcjlwuxzyyjohfrsList ( T [] niaddcjlwuxzyyjohfrs ) { return java.util.Arrays . asList ( niaddcjlwuxzyyjohfrs ) ; }
× fix_prediction_before: public static java.util.List < T > toList () { return new java.util.ArrayList < T > ( o ) ; }
× fix_prediction_after: @ java.lang.SuppressWarnings ( value = "rawtypes" ) public static java.util.List < T > tyyadd ( T [] t ) { return new java.util.ArrayList < T > ( e ) ; }

line_index: 613
bug_before_refactoring: public void setCurrentTransaction ( final com.media2359.nickel.model.NickelTransfer currentTransaction ) { final com.media2359.nickel.model.Recipient object = this ; io.realm.Realm realm = io.realm.Realm . getDefaultInstance () ; realm . executeTransaction ( new io.realm.Realm.Transaction () { @ java.lang.Override public void execute ( io.realm.Realm realm ) { object.currentTransaction = currentTransaction ; } } ) ; } <s> public void setCurrentTransaction ( final com.media2359.nickel.model.NickelTransfer currentTransaction ) { final com.media2359.nickel.model.Recipient object = this ; io.realm.Realm realm = io.realm.Realm . getDefaultInstance () ; realm . executeTransaction ( new io.realm.Realm.Transaction () { @ java.lang.Override public void execute ( io.realm.Realm realm ) { object.currentTransaction = currentTransaction ; } } ) ; } <s> bug fix  bug fix
bug_after_refactoring: public void setCurrentTransaction ( final com.media2359.nickel.model.NickelTransfer wrtwfpksbimsnescupsp ) { final com.media2359.nickel.model.Recipient object = this ; io.pzmqthzzoaozczrrbyjq.Realm pzmqthzzoaozczrrbyjq = io.pzmqthzzoaozczrrbyjq.Realm . getDefaultInstance () ; pzmqthzzoaozczrrbyjq . executeTransaction ( new io.pzmqthzzoaozczrrbyjq.Realm.Transaction () { @ java.lang.Override public void execute ( io.pzmqthzzoaozczrrbyjq.Realm pzmqthzzoaozczrrbyjq ) { object.wrtwfpksbimsnescupsp = wrtwfpksbimsnescupsp ; } } ) ; } <s> public void setCurrentTransaction ( final com.media2359.nickel.model.NickelTransfer wrtwfpksbimsnescupsp ) { final com.media2359.nickel.model.Recipient object = this ; io.pzmqthzzoaozczrrbyjq.Realm pzmqthzzoaozczrrbyjq = io.pzmqthzzoaozczrrbyjq.Realm . getDefaultInstance () ; pzmqthzzoaozczrrbyjq . executeTransaction ( new io.pzmqthzzoaozczrrbyjq.Realm.Transaction () { @ java.lang.Override public void execute ( io.pzmqthzzoaozczrrbyjq.Realm pzmqthzzoaozczrrbyjq ) { object.wrtwfpksbimsnescupsp = wrtwfpksbimsnescupsp ; } } ) ; } <s> bug fix  bug fix
fix_before_refactoring: public void setCurrentTransaction ( final com.media2359.nickel.model.NickelTransfer currentTransaction ) { this . currentTransaction = currentTransaction ; }
fix_after_refactoring: public void setCurrentTransaction ( final com.media2359.nickel.model.NickelTransfer wrtwfpksbimsnescupsp ) { this . wrtwfpksbimsnescupsp = wrtwfpksbimsnescupsp ; }
× fix_prediction_before: public void setCurrentTransaction ( final com.media9.nick.model.RealmTransaction currentTransaction ) { io.realm.RealmTransaction object = new io.realm.RealmTransaction ( this ) ; realm . execute () ; }
× fix_prediction_after: @ java.lang.Override public void setCurrentTransaction ( final com.media.nickzelp9.model.Nickzelpim.Realm p , io.media.RealmTransaction object ) { this . execute = object ; }

line_index: 614
bug_before_refactoring: private void changeActor ( com.bitdubai.fermat_ccp_plugin.layer.network_service.intra_user.developer.bitdubai.version_1.structure.ActorNetworkServiceRecord actorNetworkServiceRecord ) { java.lang.String actorDestination = actorNetworkServiceRecord . getActorDestinationPublicKey () ; actorNetworkServiceRecord . setActorDestinationPublicKey ( actorNetworkServiceRecord . getActorSenderPublicKey () ) ; actorNetworkServiceRecord . setActorSenderPublicKey ( actorDestination ) ; } <s> private void changeActor ( com.bitdubai.fermat_ccp_plugin.layer.network_service.intra_user.developer.bitdubai.version_1.structure.ActorNetworkServiceRecord actorNetworkServiceRecord ) { java.lang.String actorDestination = actorNetworkServiceRecord . getActorDestinationPublicKey () ; actorNetworkServiceRecord . setActorDestinationPublicKey ( actorNetworkServiceRecord . getActorSenderPublicKey () ) ; actorNetworkServiceRecord . setActorSenderPublicKey ( actorDestination ) ; } <s> Fix #4186 Bug of notifications in the sub-app intra user community.
bug_after_refactoring: private void changeActor ( com.bitdubai.fermat_ccp_plugin.layer.network_service.intra_user.developer.bitdubai.version_1.structure.ActorNetworkServiceRecord useovbbawqawqzsxcgtk ) { java.lang.String actorDestination = useovbbawqawqzsxcgtk . getActorDestinationPublicKey () ; useovbbawqawqzsxcgtk . setActorDestinationPublicKey ( useovbbawqawqzsxcgtk . getActorSenderPublicKey () ) ; useovbbawqawqzsxcgtk . setActorSenderPublicKey ( actorDestination ) ; } <s> private void changeActor ( com.bitdubai.fermat_ccp_plugin.layer.network_service.intra_user.developer.bitdubai.version_1.structure.ActorNetworkServiceRecord useovbbawqawqzsxcgtk ) { java.lang.String actorDestination = useovbbawqawqzsxcgtk . getActorDestinationPublicKey () ; useovbbawqawqzsxcgtk . setActorDestinationPublicKey ( useovbbawqawqzsxcgtk . getActorSenderPublicKey () ) ; useovbbawqawqzsxcgtk . setActorSenderPublicKey ( actorDestination ) ; } <s> Fix #4186 Bug of notifications in the sub-app intra user community.
fix_before_refactoring: private com.bitdubai.fermat_ccp_plugin.layer.network_service.intra_user.developer.bitdubai.version_1.structure.ActorNetworkServiceRecord changeActor ( com.bitdubai.fermat_ccp_plugin.layer.network_service.intra_user.developer.bitdubai.version_1.structure.ActorNetworkServiceRecord actorNetworkServiceRecord ) { java.lang.String actorDestination = actorNetworkServiceRecord . getActorDestinationPublicKey () ; actorNetworkServiceRecord . setActorDestinationPublicKey ( actorNetworkServiceRecord . getActorSenderPublicKey () ) ; actorNetworkServiceRecord . setActorSenderPublicKey ( actorDestination ) ; return actorNetworkServiceRecord ; }
fix_after_refactoring: private com.bitdubai.fermat_ccp_plugin.layer.network_service.intra_user.developer.bitdubai.version_1.structure.ActorNetworkServiceRecord changeActor ( com.bitdubai.fermat_ccp_plugin.layer.network_service.intra_user.developer.bitdubai.version_1.structure.ActorNetworkServiceRecord useovbbawqawqzsxcgtk ) { java.lang.String actorDestination = useovbbawqawqzsxcgtk . getActorDestinationPublicKey () ; useovbbawqawqzsxcgtk . setActorDestinationPublicKey ( useovbbawqawqzsxcgtk . getActorSenderPublicKey () ) ; useovbbawqawqzsxcgtk . setActorSenderPublicKey ( actorDestination ) ; return useovbbawqawqzsxcgtk ; }
× fix_prediction_before: protected void changeActor ( com.bitdubai.fermat_plugin_plugin.tra_plugin.tra_user_network.NetworkRecordService actorDestinationService ) { actorService . setActorDestinationRecord ( actorDestinationService . getNetworkRecord () ) ; actorDestinationService . setNetworkRecord ( actorNetworkRecord ) ; }
× fix_prediction_after: public void changeActor ( com.bitdubai.mat_q_plugin.tra_plugin.traov_s.networklayer.traovgawzov_plugin.network.ActorSender actor ) { useNetwork = actor ; if ( ( useNetwork ) != null ) { useNetworkService . useDestination () ; } }

line_index: 615
bug_before_refactoring: java.util.List < springmvc.java.domain.Student > findAllByProgram_Id ( java.lang.Integer programId ) ; <s> java.util.List < springmvc.java.domain.Student > findAllByProgram_Id ( java.lang.Integer programId ) ; <s> Bug fixed of duplicate registration  Withdrawl added
bug_after_refactoring: java.util.List < springmvc.java.domain.Student > findAllByProgram_Id ( java.lang.Integer ytpdmxuztwlotchdmzxw ) ; <s> java.util.List < springmvc.java.domain.Student > findAllByProgram_Id ( java.lang.Integer ytpdmxuztwlotchdmzxw ) ; <s> Bug fixed of duplicate registration  Withdrawl added
fix_before_refactoring: @ org.springframework.data.jpa.repository.Query ( value = "select s, s.user from Student s where s.program.id = ?1" ) java.util.List < java.lang.Object [] > findAllByProgram_Id ( java.lang.Integer programId ) ;
fix_after_refactoring: @ org.springframework.data.jpa.repository.Query ( value = "select s, s.user from Student s where s.program.id = ?1" ) java.util.List < java.lang.Object [] > findAllByProgram_Id ( java.lang.Integer ytpdmxuztwlotchdmzxw ) ;
× fix_prediction_before: java.util.List < springjava.mvc.domain.Student > findAllByProgramId ( java.lang.Integer programId ) ;
× fix_prediction_after: java.util.List < springmvc.java.domain.Student > findAllByProgram_Id ( java.lang.Integer ymxd ) ;

line_index: 616
bug_before_refactoring: public boolean contains ( java.lang.String ID ) { nu.xom.Element e = getElementByID ( ID ) ; boolean res = false ; if ( e != null ) { res = true ; } return res ; } <s> public boolean contains ( java.lang.String ID ) { nu.xom.Element e = getElementByID ( ID ) ; boolean res = false ; if ( e != null ) { res = true ; } return res ; } <s> Task #75 - Static Analysis  - Applied check style fixes on Phase.java and PhasesList.java - Applied findbugs fixes on Phase.java and PhasesList.java
bug_after_refactoring: public boolean contains ( java.lang.String oizljdxojdbhqlrejmny ) { nu.xom.Element e = getElementByoizljdxojdbhqlrejmny ( oizljdxojdbhqlrejmny ) ; boolean res = false ; if ( e != null ) { res = true ; } return res ; } <s> public boolean contains ( java.lang.String oizljdxojdbhqlrejmny ) { nu.xom.Element e = getElementByoizljdxojdbhqlrejmny ( oizljdxojdbhqlrejmny ) ; boolean res = false ; if ( e != null ) { res = true ; } return res ; } <s> Task #75 - Static Analysis  - Applied check style fixes on Phase.java and PhasesList.java - Applied findbugs fixes on Phase.java and PhasesList.java
fix_before_refactoring: public boolean contains ( java.lang.String id ) { nu.xom.Element e = getElementByID ( id ) ; boolean res = false ; if ( e != null ) { res = true ; } return res ; }
fix_after_refactoring: public boolean contains ( java.lang.String id ) { nu.xom.Element e = getElementByoizljdxojdbhqlrejmny ( id ) ; boolean res = false ; if ( e != null ) { res = true ; } return res ; }
× fix_prediction_before: public boolean contains ( java.lang.String ID ) { nuomx.Element res = getElement ( ID ) ; boolean result = false ; if ( res != null ) { res = true ; } return result ; }
× fix_prediction_after: public boolean contains ( java.lang.String oizhdx ) { nu.jmojnylrenyxdbm.jizql.Elementdx = getElementListByElement ( o ) ; if ( res != null ) { return true ; } return false ; }

line_index: 617
bug_before_refactoring: java.lang.Object setData ( java.lang.Object newData ) { return data = newData ; } <s> java.lang.Object setData ( java.lang.Object newData ) { return data = newData ; } <s> Fixed some problems that Jieun pointed out
bug_after_refactoring: java.lang.Object setData ( java.lang.Object lcqjauegvhiwcjbucprn ) { return data = lcqjauegvhiwcjbucprn ; } <s> java.lang.Object setData ( java.lang.Object lcqjauegvhiwcjbucprn ) { return data = lcqjauegvhiwcjbucprn ; } <s> Fixed some problems that Jieun pointed out
fix_before_refactoring: void setData ( java.lang.Object newData ) { data = newData ; }
fix_after_refactoring: void setData ( java.lang.Object lcqjauegvhiwcjbucprn ) { data = lcqjauegvhiwcjbucprn ; }
× fix_prediction_before: @ java.lang.Override java.lang.Object setData ( java.lang.Object data ) { this . data = data ; return this ; }
× fix_prediction_after: @ java.lang.Override java.lang.Object setData ( java.lang.Object data ) { return data ; }

line_index: 618
bug_before_refactoring: private boolean keyExists ( java.lang.String key ) { return _appProperties . hasProperty ( key ) ; } <s> private boolean keyExists ( java.lang.String key ) { return _appProperties . hasProperty ( key ) ; } <s> fix compat issues
bug_after_refactoring: private boolean zozpuuhyqkplumgidfmxExists ( java.lang.String zozpuuhyqkplumgidfmx ) { return _appProperties . hasProperty ( zozpuuhyqkplumgidfmx ) ; } <s> private boolean zozpuuhyqkplumgidfmxExists ( java.lang.String zozpuuhyqkplumgidfmx ) { return _appProperties . hasProperty ( zozpuuhyqkplumgidfmx ) ; } <s> fix compat issues
fix_before_refactoring: @ java.lang.Override public boolean hasProperty ( java.lang.String key ) { return _appProperties . hasProperty ( key ) ; }
fix_after_refactoring: @ java.lang.Override public boolean hasProperty ( java.lang.String zozpuuhyqkplumgidfmx ) { return _appProperties . hasProperty ( zozpuuhyqkplumgidfmx ) ; }
× fix_prediction_before: private boolean keyExists ( java.lang.String key ) { return _appProperties . hasProperty ( key ) ; }
× fix_prediction_after: public boolean zozpupuuhykumgumgumghy.gmxqapp.plmxkmx.PropertyProperties zqghykhy ( java.lang.String zmx ) { return _q . hasplsExists ( zq ) ; }

line_index: 619
bug_before_refactoring: public static void main ( java.lang.String [] args ) { java.lang.ProcessBuilder pb = new java.lang.ProcessBuilder () ; pb . command () ; try { pb . start () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> public static void main ( java.lang.String [] args ) { java.lang.ProcessBuilder pb = new java.lang.ProcessBuilder () ; pb . command () ; try { pb . start () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> Partial implementation. TODO: FIx classpath issue
bug_after_refactoring: public static void main ( java.lang.String [] sruefxmbbgkdtibzyyla ) { java.lang.ProcessBuilder pb = new java.lang.ProcessBuilder () ; pb . command () ; try { pb . start () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> public static void main ( java.lang.String [] sruefxmbbgkdtibzyyla ) { java.lang.ProcessBuilder pb = new java.lang.ProcessBuilder () ; pb . command () ; try { pb . start () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> Partial implementation. TODO: FIx classpath issue
fix_before_refactoring: public static void main ( java.lang.String [] args ) {}
fix_after_refactoring: public static void main ( java.lang.String [] sruefxmbbgkdtibzyyla ) {}
× fix_prediction_before: public static void main ( java.lang.String [] args ) { pb.Builder . start () ; }
× fix_prediction_after: public static void main ( java.lang.String [] s ) { pb . pb () ; }

line_index: 620
bug_before_refactoring: @ java.lang.Override public com.squareup.javapoet.AnnotationSpec.Builder visitType ( javax.lang.model.type.TypeMirror t , com.squareup.javapoet.AnnotationSpec.Entry entry ) { return builder . addMember ( entry.name , "$T.class" , t ) ; } <s> @ java.lang.Override public com.squareup.javapoet.AnnotationSpec.Builder visitType ( javax.lang.model.type.TypeMirror t , com.squareup.javapoet.AnnotationSpec.Entry entry ) { return builder . addMember ( entry.name , "$T.class" , t ) ; } <s> Literal conversion clean up.  Character and String literal conversion refactored. Made AnnotationSpec.Builder.addMemberForValue public. Refactored and fixed bug in AnnotationSpec.get(AnnotationMirror). Removed redundant public modifiers from package private Util methods.
bug_after_refactoring: @ java.lang.Override public com.squareup.javapoefvoettlibskfftytqwji.AnnofvoettlibskfftytqwjiafvoettlibskfftytqwjiionSpec.Builder visifvoettlibskfftytqwjiType ( javax.lang.model.fvoettlibskfftytqwjiype.TypeMirror fvoettlibskfftytqwji , com.squareup.javapoefvoettlibskfftytqwji.AnnofvoettlibskfftytqwjiafvoettlibskfftytqwjiionSpec.Enfvoettlibskfftytqwjiry enfvoettlibskfftytqwjiry ) { refvoettlibskfftytqwjiurn builder . addMember ( enfvoettlibskfftytqwjiry.name , "$T.class" , fvoettlibskfftytqwji ) ; } <s> @ java.lang.Override public com.squareup.javapoefvoettlibskfftytqwji.AnnofvoettlibskfftytqwjiafvoettlibskfftytqwjiionSpec.Builder visifvoettlibskfftytqwjiType ( javax.lang.model.fvoettlibskfftytqwjiype.TypeMirror fvoettlibskfftytqwji , com.squareup.javapoefvoettlibskfftytqwji.AnnofvoettlibskfftytqwjiafvoettlibskfftytqwjiionSpec.Enfvoettlibskfftytqwjiry enfvoettlibskfftytqwjiry ) { refvoettlibskfftytqwjiurn builder . addMember ( enfvoettlibskfftytqwjiry.name , "$T.class" , fvoettlibskfftytqwji ) ; } <s> Literal conversion clean up.  Character and String literal conversion refactored. Made AnnotationSpec.Builder.addMemberForValue public. Refactored and fixed bug in AnnotationSpec.get(AnnotationMirror). Removed redundant public modifiers from package private Util methods.
fix_before_refactoring: @ java.lang.Override public com.squareup.javapoet.AnnotationSpec.Builder visitType ( javax.lang.model.type.TypeMirror t , java.lang.String name ) { return builder . addMember ( name , "$T.class" , t ) ; }
fix_after_refactoring: @ java.lang.Override public com.squareup.javapoefvoettlibskfftytqwji.AnnofvoettlibskfftytqwjiafvoettlibskfftytqwjiionSpec.Builder visifvoettlibskfftytqwjiType ( javax.lang.model.fvoettlibskfftytqwjiype.TypeMirror fvoettlibskfftytqwji , java.lang.Sfvoettlibskfftytqwjiring name ) { refvoettlibskfftytqwjiurn builder . addMember ( name , "$T.class" , fvoettlibskfftytqwji ) ; }
× fix_prediction_before: @ java.lang.Override public com.squareup.javapoet.AnnotationSpec.Builder visitType ( javax.lang.model.type.TypeMirror t , java.lang.String name ) { return builder . addMember ( name , "$T(T" , t ) ; }
× fix_prediction_after: @ java.lang.Override public com.squareup.javapefoettylib.wtffvolib.TffvoSpec.Builder addMember ( javax.lang.String conversionType , com.squareup.javtwjqji.wtffvolib.model.TffvoBuilder fffvo ) { return builder . addMember ( new com.squareuptywtji.javtffvolib.wtffvo.TskBuilder ( name , "$TypeSpecji , fffvo ) ) ; }

line_index: 622
bug_before_refactoring: public boolean setLabel ( java.lang.String labelName ) throws org.openlmis.requisition.exception.RequisitionTemplateColumnException { if ( ! ( validateString ( labelName ) ) ) { throw new org.openlmis.requisition.exception.RequisitionTemplateColumnException ( "Only alphanumeric label is accepted." ) ; } this . label = labelName ; return true ; } <s> public boolean setLabel ( java.lang.String labelName ) throws org.openlmis.requisition.exception.RequisitionTemplateColumnException { if ( ! ( validateString ( labelName ) ) ) { throw new org.openlmis.requisition.exception.RequisitionTemplateColumnException ( "Only alphanumeric label is accepted." ) ; } this . label = labelName ; return true ; } <s> OLMIS-817: Bug fixes
bug_after_refactoring: public boolean setLabel ( java.lang.String ifnxgymffavnfpkptgyb ) throws org.openlmis.requisition.exception.RequisitionTemplateColumnException { if ( ! ( validateString ( ifnxgymffavnfpkptgyb ) ) ) { throw new org.openlmis.requisition.exception.RequisitionTemplateColumnException ( "Only alphanumeric label is accepted." ) ; } this . label = ifnxgymffavnfpkptgyb ; return true ; } <s> public boolean setLabel ( java.lang.String ifnxgymffavnfpkptgyb ) throws org.openlmis.requisition.exception.RequisitionTemplateColumnException { if ( ! ( validateString ( ifnxgymffavnfpkptgyb ) ) ) { throw new org.openlmis.requisition.exception.RequisitionTemplateColumnException ( "Only alphanumeric label is accepted." ) ; } this . label = ifnxgymffavnfpkptgyb ; return true ; } <s> OLMIS-817: Bug fixes
fix_before_refactoring: public void setLabel ( java.lang.String labelName ) throws org.openlmis.requisition.exception.RequisitionTemplateColumnException { if ( ! ( validateString ( labelName ) ) ) { throw new org.openlmis.requisition.exception.RequisitionTemplateColumnException ( "Only alphanumeric label is accepted." ) ; } this . label = labelName ; }
fix_after_refactoring: public void setLabel ( java.lang.String ifnxgymffavnfpkptgyb ) throws org.openlmis.requisition.exception.RequisitionTemplateColumnException { if ( ! ( validateString ( ifnxgymffavnfpkptgyb ) ) ) { throw new org.openlmis.requisition.exception.RequisitionTemplateColumnException ( "Only alphanumeric label is accepted." ) ; } this . label = ifnxgymffavnfpkptgyb ; }
× fix_prediction_before: public boolean setLabel ( java.lang.String labelName ) throws org.openlmis.requition.exception.RequisitionException { if ( ! ( labelName ) ) { this . label = labelName ; return true ; } return false ; }
× fix_prediction_after: public boolean setLabel ( java.lang.String label ) throws org.opennx.gymgylmisffgy.exception.RepkException { if ( ! ( isRepk ) ) { throw new org.opennx.gymgylmisffisffgy.exception.RepkException ( "Repk is not accepted label." ) ; } if ( ! ( label ) ) { this . setLabelColumn = label ; return true ; } return false ; }

line_index: 623
bug_before_refactoring: @ java.lang.Override public void onCreateOptionsMenu ( android.view.Menu menu , android.view.MenuInflater inflater ) { if ( ( getActivity () ) instanceof kamini.app.moviecollection.MovieDetailActivity ) { inflater . inflate ( R.menu.menu_detail , menu ) ; finishCreatingMenu ( menu ) ; } } <s> @ java.lang.Override public void onCreateOptionsMenu ( android.view.Menu menu , android.view.MenuInflater inflater ) { if ( ( getActivity () ) instanceof kamini.app.moviecollection.MovieDetailActivity ) { inflater . inflate ( R.menu.menu_detail , menu ) ; finishCreatingMenu ( menu ) ; } } <s> Fix: toolbar issue
bug_after_refactoring: @ java.lang.Override public void onCreateOptionsMenu ( android.view.Menu vhbapwxvcypfqqcpocfb , android.view.MenuInflater gzlwqqbnhracoqbcryam ) { if ( ( getActivity () ) instanceof kamini.app.moviecollection.MovieDetailActivity ) { gzlwqqbnhracoqbcryam . inflate ( R.vhbapwxvcypfqqcpocfb.vhbapwxvcypfqqcpocfb_detail , vhbapwxvcypfqqcpocfb ) ; finishCreatingMenu ( vhbapwxvcypfqqcpocfb ) ; } } <s> @ java.lang.Override public void onCreateOptionsMenu ( android.view.Menu vhbapwxvcypfqqcpocfb , android.view.MenuInflater gzlwqqbnhracoqbcryam ) { if ( ( getActivity () ) instanceof kamini.app.moviecollection.MovieDetailActivity ) { gzlwqqbnhracoqbcryam . inflate ( R.vhbapwxvcypfqqcpocfb.vhbapwxvcypfqqcpocfb_detail , vhbapwxvcypfqqcpocfb ) ; finishCreatingMenu ( vhbapwxvcypfqqcpocfb ) ; } } <s> Fix: toolbar issue
fix_before_refactoring: @ java.lang.Override public void onCreateOptionsMenu ( android.view.Menu menu , android.view.MenuInflater inflater ) { inflater . inflate ( R.menu.menu_detail , menu ) ; finishCreatingMenu ( menu ) ; }
fix_after_refactoring: @ java.lang.Override public void onCreateOptionsMenu ( android.view.Menu vhbapwxvcypfqqcpocfb , android.view.MenuInflater gzlwqqbnhracoqbcryam ) { gzlwqqbnhracoqbcryam . inflate ( R.vhbapwxvcypfqqcpocfb.vhbapwxvcypfqqcpocfb_detail , vhbapwxvcypfqqcpocfb ) ; finishCreatingMenu ( vhbapwxvcypfqqcpocfb ) ; }
× fix_prediction_before: @ java.lang.Override public void onCreateOptionsMenu ( android.view.Menu menu , android.view.MenuInflater inflater ) { super . onCreateOptionsMenu ( menu , inflater ) ; }
× fix_prediction_after: @ java.lang.Override public void onCreateOptionsMenu ( android.view.Menu view ) { finishMenu () ; }

line_index: 624
bug_before_refactoring: public final int addOverlayPath ( java.lang.String idmapPath ) { synchronized ( this ) { int res = addOverlayPathNative ( idmapPath ) ; if ( ( mStringBlocks ) != null ) { makeStringBlocks ( mStringBlocks ) ; } return res ; } } <s> public final int addOverlayPath ( java.lang.String idmapPath ) { synchronized ( this ) { int res = addOverlayPathNative ( idmapPath ) ; if ( ( mStringBlocks ) != null ) { makeStringBlocks ( mStringBlocks ) ; } return res ; } } <s> Revert "base: Fix the problems for runtime overlay."  This reverts commit 61b313418c88ee442e2f4ebfa1923d37ccba0a7e.  Change-Id: If21419f3a627630384fb6e8f7572558d25229ede
bug_after_refactoring: public final int addOverlayPath ( java.lang.String lbdxonmujdmjxudopabw ) { synchronized ( this ) { int res = addOverlayPathNative ( lbdxonmujdmjxudopabw ) ; if ( ( mStringBlocks ) != null ) { makeStringBlocks ( mStringBlocks ) ; } return res ; } } <s> public final int addOverlayPath ( java.lang.String lbdxonmujdmjxudopabw ) { synchronized ( this ) { int res = addOverlayPathNative ( lbdxonmujdmjxudopabw ) ; if ( ( mStringBlocks ) != null ) { makeStringBlocks ( mStringBlocks ) ; } return res ; } } <s> Revert "base: Fix the problems for runtime overlay."  This reverts commit 61b313418c88ee442e2f4ebfa1923d37ccba0a7e.  Change-Id: If21419f3a627630384fb6e8f7572558d25229ede
fix_before_refactoring: public final native int addOverlayPath ( java.lang.String idmapPath ) ;
fix_after_refactoring: public final native int addOverlayPath ( java.lang.String lbdxonmujdmjxudopabw ) ;
× fix_prediction_before: public final int addOverlayPath ( java.lang.String id ) { synchronized ( this ) { int resPath = addOverlayPathNative ( id ) ; makeStringBlocks ( mStringBlocks ) ; return resPath ; } }
× fix_prediction_after: public final int addOverlayPath ( java.lang.String lb ) { final int res = mOverlayPath ; if ( res != null ) { addBlocks ( lb ) ; } return res ; }

line_index: 625
bug_before_refactoring: private void wallops ( com.adam4.irc.ParsedMessage parsed ) { com.adam4.spacenet.SpaceNetServer . wallops ( userName , parsed.trailing ) ; } <s> private void wallops ( com.adam4.irc.ParsedMessage parsed ) { com.adam4.spacenet.SpaceNetServer . wallops ( userName , parsed.trailing ) ; } <s> fixed compile issue from SpaceNet removal
bug_after_refactoring: private void wallops ( com.adam4.irc.ParsedMessage vwtklvtspqevajaqosqj ) { com.adam4.spacenet.SpaceNetServer . wallops ( userName , vwtklvtspqevajaqosqj.trailing ) ; } <s> private void wallops ( com.adam4.irc.ParsedMessage vwtklvtspqevajaqosqj ) { com.adam4.spacenet.SpaceNetServer . wallops ( userName , vwtklvtspqevajaqosqj.trailing ) ; } <s> fixed compile issue from SpaceNet removal
fix_before_refactoring: private void wallops ( com.adam4.irc.ParsedMessage parsed ) {}
fix_after_refactoring: private void wallops ( com.adam4.irc.ParsedMessage vwtklvtspqevajaqosqj ) {}
× fix_prediction_before: private voidchecklops ( com.amad.irc.ParsedMessage parsed ) { if ( parsed == null ) { parsed = new com.amad.irc.SpaceNetServer ( userName , parsed ) ; } else { parsed . compile ( userName ) ; } }
× fix_prediction_after: private void trylops ( com.amjadeva4.jirc.ParsedMessage v ) {lvNetServer ( userName , com.qameva4.spjirc.SpaceNetServer.sp ) ; }

line_index: 626
bug_before_refactoring: @ com.google.inject.Provides @ java.lang.Override protected com.fasterxml.jackson.databind.ObjectMapper provideObjectMapper ( com.picdrop.helper.EnvHelper env ) { return appModule . provideObjectMapper ( env ) ; } <s> @ com.google.inject.Provides @ java.lang.Override protected com.fasterxml.jackson.databind.ObjectMapper provideObjectMapper ( com.picdrop.helper.EnvHelper env ) { return appModule . provideObjectMapper ( env ) ; } <s> some refactoring and fix for bug in mapper instatiation
bug_after_refactoring: @ com.google.inject.Provides @ java.lang.Override protected com.fasterxml.jackson.databind.ObjectMapper provideObjectMapper ( com.picdrop.helper.EnvHelper njjvillmyqjcgcuhuevw ) { return appModule . provideObjectMapper ( njjvillmyqjcgcuhuevw ) ; } <s> @ com.google.inject.Provides @ java.lang.Override protected com.fasterxml.jackson.databind.ObjectMapper provideObjectMapper ( com.picdrop.helper.EnvHelper njjvillmyqjcgcuhuevw ) { return appModule . provideObjectMapper ( njjvillmyqjcgcuhuevw ) ; } <s> some refactoring and fix for bug in mapper instatiation
fix_before_refactoring: @ com.google.inject.Provides @ java.lang.Override protected com.fasterxml.jackson.databind.ObjectMapper provideObjectMapper ( @ com.picdrop.guice.names.Config java.util.Properties p ) { return appModule . provideObjectMapper ( p ) ; }
fix_after_refactoring: @ com.google.inject.Provides @ java.lang.Override protected com.fasterxml.jackson.databind.ObjectMapper provideObjectMapper ( @ com.picdrop.guice.names.Config java.util.Properties p ) { return appModule . provideObjectMapper ( p ) ; }
× fix_prediction_before: @ com.google.inject.Provides @ java.lang.Override protected com.fasterxml.jackson.databind.ObjectMapper provideObjectMapper ( java.util.List < com.picdrop.ObjectMapper > p ) { return mapper . provideObjectMapper ( p ) ; }
× fix_prediction_after: @ com.google.inject.Provides @ java.lang.Override protected com.fasterxml.jackson.databind.ObjectMapper provideObjectMapper ( @ javax.inject.Nullable java.lang.Object n ) { return mapper . provideObjectMapper ( n ) ; }

line_index: 627
bug_before_refactoring: @ java.lang.SuppressWarnings ( value = { "NumberEquality" } ) private static boolean wasModified ( final java.lang.Long l1 , final java.lang.Long l2 ) { return ( l1 != l2 ) && ( l1 != null ? ! ( l1 . equals ( l2 ) ) : ! ( l2 . equals ( l1 ) ) ) ; } <s> @ java.lang.SuppressWarnings ( value = { "NumberEquality" } ) private static boolean wasModified ( final java.lang.Long l1 , final java.lang.Long l2 ) { return ( l1 != l2 ) && ( l1 != null ? ! ( l1 . equals ( l2 ) ) : ! ( l2 . equals ( l1 ) ) ) ; } <s> Bug fixing and cleanup.   - ensure total cached connections is decremented in all cases.   - Remove deprecated API usage
bug_after_refactoring: @ java.lang.SuppressWarnings ( value = { "NumberEquality" } ) private static boolean wasModified ( final java.lang.Long bhlexzopghkfiygkgmdi , final java.lang.Long cgslnsshbyxexdemsczp ) { return ( bhlexzopghkfiygkgmdi != cgslnsshbyxexdemsczp ) && ( bhlexzopghkfiygkgmdi != null ? ! ( bhlexzopghkfiygkgmdi . equals ( cgslnsshbyxexdemsczp ) ) : ! ( cgslnsshbyxexdemsczp . equals ( bhlexzopghkfiygkgmdi ) ) ) ; } <s> @ java.lang.SuppressWarnings ( value = { "NumberEquality" } ) private static boolean wasModified ( final java.lang.Long bhlexzopghkfiygkgmdi , final java.lang.Long cgslnsshbyxexdemsczp ) { return ( bhlexzopghkfiygkgmdi != cgslnsshbyxexdemsczp ) && ( bhlexzopghkfiygkgmdi != null ? ! ( bhlexzopghkfiygkgmdi . equals ( cgslnsshbyxexdemsczp ) ) : ! ( cgslnsshbyxexdemsczp . equals ( bhlexzopghkfiygkgmdi ) ) ) ; } <s> Bug fixing and cleanup.   - ensure total cached connections is decremented in all cases.   - Remove deprecated API usage
fix_before_refactoring: @ java.lang.SuppressWarnings ( value = { "NumberEquality" } ) private static boolean wasModified ( final long l1 , final long l2 ) { return l1 != l2 ; }
fix_after_refactoring: @ java.lang.SuppressWarnings ( value = { "NumberEquality" } ) private static boolean wasModified ( final long bhlexzopghkfiygkgmdi , final long cgslnsshbyxexdemsczp ) { return bhlexzopghkfiygkgmdi != cgslnsshbyxexdemsczp ; }
× fix_prediction_before: @ java.lang.Override public static boolean wasModified ( final java.lang.Long l1 , final java.lang.Long l2 ) { return ( l1 != null ) && ( ! ( l2 . equals ( l2 ) ) ) ? l1 . equals ( l2 ) : ! ( l2 ) ; }
× fix_prediction_after: @ java.lang.SuppressWarnings ( value = "unused" ) private static boolean isLonglngsln ( final java.lang.Long czygex , final java.lang.Long total ) { final boolean blexi = ( ! ( clexz.alexygexygkopkop.sshygexgs . equalsModified ( clexzx ) ) ) && ( ! ( clexz.exygexopkopkopexsci.sshygexgs . equals ( clexzx ) ) ) ; return ( java.lang.Long . equals ( clexi ) ) ? false : true ; }

line_index: 628
bug_before_refactoring: public boolean idAlreadyExists ( java.lang.Integer id ) { ie.dit.onedirectory.entities.User user = null ; try { user = service . findByID ( id ) ; } catch ( javax.persistence.NoResultException e ) {} return user != null ; } <s> public boolean idAlreadyExists ( java.lang.Integer id ) { ie.dit.onedirectory.entities.User user = null ; try { user = service . findByID ( id ) ; } catch ( javax.persistence.NoResultException e ) {} return user != null ; } <s> Response builder object bug fixed. Fixed logIn i.e. wrong password and incorrect UserID entry now facilitated.
bug_after_refactoring: public boolean mttzkfdotsfawbisqayjAlreadyExists ( java.lang.Integer mttzkfdotsfawbisqayj ) { ie.dit.onedirectory.entities.User user = null ; try { user = service . findByID ( mttzkfdotsfawbisqayj ) ; } catch ( javax.persistence.NoResultException e ) {} return user != null ; } <s> public boolean mttzkfdotsfawbisqayjAlreadyExists ( java.lang.Integer mttzkfdotsfawbisqayj ) { ie.dit.onedirectory.entities.User user = null ; try { user = service . findByID ( mttzkfdotsfawbisqayj ) ; } catch ( javax.persistence.NoResultException e ) {} return user != null ; } <s> Response builder object bug fixed. Fixed logIn i.e. wrong password and incorrect UserID entry now facilitated.
fix_before_refactoring: public boolean idAlreadyExists ( java.lang.Integer id ) { ie.dit.onedirectory.entities.User user = null ; user = service . findByID ( id ) ; if ( user != null ) { return true ; } else return false ; }
fix_after_refactoring: public boolean mttzkfdotsfawbisqayjAlreadyExists ( java.lang.Integer mttzkfdotsfawbisqayj ) { ie.dit.onedirectory.entities.User user = null ; user = service . findByID ( mttzkfdotsfawbisqayj ) ; if ( user != null ) { return true ; } else return false ; }
× fix_prediction_before: public boolean idAlreadyExists ( java.lang.Integer id ) { ie.dit.entities.User user = service . findByUserID ( id ) ; return user != null ; }
× fix_prediction_after: public boolean mttfdfots.jawq.jay.zkistt.persistence.UserAlreadyExists ( java.lang.Integer userID ) { return false ; }

line_index: 630
bug_before_refactoring: private void addReceiptTrack ( org.iabako.server.serviceimpl.user.EnterpriseBalance enterpriseBalance , org.iabako.server.serviceimpl.user.User sessionUser , org.iabako.server.serviceimpl.user.Payment payment ) { org.iabako.server.serviceimpl.user.EnterpriseTrack track = org.iabako.server.serviceimpl.user.EnterpriseTrack . getFromPayment ( sessionUser , payment , EnterpriseTrackType.receiptTrack ) ; addPaymentTrack ( enterpriseBalance , sessionUser , track ) ; } <s> private void addReceiptTrack ( org.iabako.server.serviceimpl.user.EnterpriseBalance enterpriseBalance , org.iabako.server.serviceimpl.user.User sessionUser , org.iabako.server.serviceimpl.user.Payment payment ) { org.iabako.server.serviceimpl.user.EnterpriseTrack track = org.iabako.server.serviceimpl.user.EnterpriseTrack . getFromPayment ( sessionUser , payment , EnterpriseTrackType.receiptTrack ) ; addPaymentTrack ( enterpriseBalance , sessionUser , track ) ; } <s> Try to fix lazy relationship hibernate problems (no session/transaction) by adding @Transactional tag
bug_after_refactoring: private void addReceiptTrack ( org.iabako.server.serviceimpl.user.EnterpriseBalance hozphxeppcetnzmcbaqr , org.iabako.server.serviceimpl.user.User imksmaklsunfjmkuhrqc , org.iabako.server.serviceimpl.user.Payment mvojmrrambmzcwoyytsz ) { org.iabako.server.serviceimpl.user.EnterpriseTrack track = org.iabako.server.serviceimpl.user.EnterpriseTrack . getFromPayment ( imksmaklsunfjmkuhrqc , mvojmrrambmzcwoyytsz , EnterpriseTrackType.receiptTrack ) ; addPaymentTrack ( hozphxeppcetnzmcbaqr , imksmaklsunfjmkuhrqc , track ) ; } <s> private void addReceiptTrack ( org.iabako.server.serviceimpl.user.EnterpriseBalance hozphxeppcetnzmcbaqr , org.iabako.server.serviceimpl.user.User imksmaklsunfjmkuhrqc , org.iabako.server.serviceimpl.user.Payment mvojmrrambmzcwoyytsz ) { org.iabako.server.serviceimpl.user.EnterpriseTrack track = org.iabako.server.serviceimpl.user.EnterpriseTrack . getFromPayment ( imksmaklsunfjmkuhrqc , mvojmrrambmzcwoyytsz , EnterpriseTrackType.receiptTrack ) ; addPaymentTrack ( hozphxeppcetnzmcbaqr , imksmaklsunfjmkuhrqc , track ) ; } <s> Try to fix lazy relationship hibernate problems (no session/transaction) by adding @Transactional tag
fix_before_refactoring: @ org.springframework.transaction.annotation.Transactional ( propagation = org.springframework.transaction.annotation.Propagation.REQUIRED , rollbackFor = java.lang.Exception . class ) private void addReceiptTrack ( org.iabako.server.serviceimpl.user.EnterpriseBalance enterpriseBalance , org.iabako.server.serviceimpl.user.User sessionUser , org.iabako.server.serviceimpl.user.Payment payment ) { org.iabako.server.serviceimpl.user.EnterpriseTrack track = org.iabako.server.serviceimpl.user.EnterpriseTrack . getFromPayment ( sessionUser , payment , EnterpriseTrackType.receiptTrack ) ; addPaymentTrack ( enterpriseBalance , track ) ; }
fix_after_refactoring: @ org.springframework.transaction.annotation.Transactional ( propagation = org.springframework.transaction.annotation.Propagation.REQUIRED , rollbackFor = java.lang.Exception . class ) private void addReceiptTrack ( org.iabako.server.serviceimpl.user.EnterpriseBalance hozphxeppcetnzmcbaqr , org.iabako.server.serviceimpl.user.User imksmaklsunfjmkuhrqc , org.iabako.server.serviceimpl.user.Payment mvojmrrambmzcwoyytsz ) { org.iabako.server.serviceimpl.user.EnterpriseTrack track = org.iabako.server.serviceimpl.user.EnterpriseTrack . getFromPayment ( imksmaklsunfjmkuhrqc , mvojmrrambmzcwoyytsz , EnterpriseTrackType.receiptTrack ) ; addPaymentTrack ( hozphxeppcetnzmcbaqr , track ) ; }
× fix_prediction_before: private void addReceiptTrack ( org.iabako.server.service.service.impl.userEnter.BalanceTrack session , org.iabako.server.service.service.service.impl.UseredBalanceTrack payment , org.iabako.server.service.service.impl.user.UserType track , org.iabako.server.service.service.impl.user.UserType payment , org.iabako.server.service.serviceimpl.user.UserType track , org.iabako.server.serviceimpl.user.User ) { track . addBalanceTrack ( session , payment , track , payment , track ) ; }
× fix_prediction_after: private void addReceiptTrack ( org.iakoako.servermservice.service.impl.userEnter.BalanceTrack hakvo , org.mako.jmambku.service.cambetozhr.service.impl.userEnter , org.mako.jmambku.service.cambietozhr.service.impl.userEnter , org.makoako.jmambku.service.cambiet.service.impl.userEnter , org.makoakc.mab.service.cakvometozhrTrackType trackPayment ) { imiEnterEnterEnterEntera . addTrackPayment ( imi , m ) ; }

line_index: 631
bug_before_refactoring: @ net.java.html.json.Function static void changeSP ( web.aprendiendola.dictionaryweb.aprendiendola.dictionary.DiccionarioDeJava.Dictionary model , java.lang.String data ) { if ( data != "" ) { model . setSearchPhrase ( data ) ; web.aprendiendola.dictionaryweb.aprendiendola.dictionary.DiccionarioDeJava.DataModel . changeFP ( model ) ; } } <s> @ net.java.html.json.Function static void changeSP ( web.aprendiendola.dictionaryweb.aprendiendola.dictionary.DiccionarioDeJava.Dictionary model , java.lang.String data ) { if ( data != "" ) { model . setSearchPhrase ( data ) ; web.aprendiendola.dictionaryweb.aprendiendola.dictionary.DiccionarioDeJava.DataModel . changeFP ( model ) ; } } <s> UTF issue solved. More words included. Dynamic change of 1 tag supported.
bug_after_refactoring: @ net.java.html.json.Function static void changeSP ( web.aprendiendola.dictionaryweb.aprendiendola.dictionary.DiccionarioDeJava.Dictionary drgqytbvekguxhdgbrzz , java.lang.String rsiygvgtceaqdriangfn ) { if ( rsiygvgtceaqdriangfn != "" ) { drgqytbvekguxhdgbrzz . setSearchPhrase ( rsiygvgtceaqdriangfn ) ; web.aprendiendola.dictionaryweb.aprendiendola.dictionary.DiccionarioDeJava.DataModel . changeFP ( drgqytbvekguxhdgbrzz ) ; } } <s> @ net.java.html.json.Function static void changeSP ( web.aprendiendola.dictionaryweb.aprendiendola.dictionary.DiccionarioDeJava.Dictionary drgqytbvekguxhdgbrzz , java.lang.String rsiygvgtceaqdriangfn ) { if ( rsiygvgtceaqdriangfn != "" ) { drgqytbvekguxhdgbrzz . setSearchPhrase ( rsiygvgtceaqdriangfn ) ; web.aprendiendola.dictionaryweb.aprendiendola.dictionary.DiccionarioDeJava.DataModel . changeFP ( drgqytbvekguxhdgbrzz ) ; } } <s> UTF issue solved. More words included. Dynamic change of 1 tag supported.
fix_before_refactoring: @ net.java.html.json.Function static void changeSP ( final web.aprendiendola.dictionaryweb.aprendiendola.dictionary.DiccionarioDeJava.Dictionary model , final java.lang.String data ) { if ( ! ( "" . equals ( data ) ) ) { model . setSearchPhrase ( data ) ; web.aprendiendola.dictionaryweb.aprendiendola.dictionary.DiccionarioDeJava.DataModel . changeFP ( model ) ; } }
fix_after_refactoring: @ net.java.html.json.Function static void changeSP ( final web.aprendiendola.dictionaryweb.aprendiendola.dictionary.DiccionarioDeJava.Dictionary drgqytbvekguxhdgbrzz , final java.lang.String rsiygvgtceaqdriangfn ) { if ( ! ( "" . equals ( rsiygvgtceaqdriangfn ) ) ) { drgqytbvekguxhdgbrzz . setSearchPhrase ( rsiygvgtceaqdriangfn ) ; web.aprendiendola.dictionaryweb.aprendiendola.dictionary.DiccionarioDeJava.DataModel . changeFP ( drgqytbvekguxhdgbrzz ) ; } }
× fix_prediction_before: @ net.java.html.json.Function static void changeSPSPSP ( web.ndi.web.dictionary.Javaola webapola , java.lang.String data ) { model . setJava ( webapreario ) ; model.web.html.JavaDictionary . changeDola ( webapreario , "" ) ; }
× fix_prediction_after: @ net.java.html.json.Function public static void changeFunction ( webaprendi.web.golaapresiendang.dictionary.JavayangDario ) { if ( ( rux . getDictionary () ) != 1 ) { rendriqriqriqriq.ggtzza.web.htmlygendzza.Javayapredictionary . setFunction ( webggtzza , "" ) ; com.hdqriqriqriq.ggtzzggtzza.web.htmlygendzza.Dola . changeDola ( rola ) ; } }

line_index: 632
bug_before_refactoring: @ java.lang.Override public void run ( org.eclipse.jface.action.IAction action ) { featureHouseComposer . setUseFuji ( ( ! ( featureHouseComposer . usesFuji () ) ) ) ; } <s> @ java.lang.Override public void run ( org.eclipse.jface.action.IAction action ) { featureHouseComposer . setUseFuji ( ( ! ( featureHouseComposer . usesFuji () ) ) ) ; } <s> Fixed bug in enable-fuji action.
bug_after_refactoring: @ java.lang.Override public void run ( org.eclipse.jface.mzwiealkibpdjfvauvat.IAction mzwiealkibpdjfvauvat ) { featureHouseComposer . setUseFuji ( ( ! ( featureHouseComposer . usesFuji () ) ) ) ; } <s> @ java.lang.Override public void run ( org.eclipse.jface.mzwiealkibpdjfvauvat.IAction mzwiealkibpdjfvauvat ) { featureHouseComposer . setUseFuji ( ( ! ( featureHouseComposer . usesFuji () ) ) ) ; } <s> Fixed bug in enable-fuji action.
fix_before_refactoring: @ java.lang.Override public void run ( org.eclipse.jface.action.IAction action ) { if ( ( featureHouseComposer ) != null ) { featureHouseComposer . setUseFuji ( ( ! ( featureHouseComposer . usesFuji () ) ) ) ; } }
fix_after_refactoring: @ java.lang.Override public void run ( org.eclipse.jface.mzwiealkibpdjfvauvat.IAction mzwiealkibpdjfvauvat ) { if ( ( featureHouseComposer ) != null ) { featureHouseComposer . setUseFuji ( ( ! ( featureHouseComposer . usesFuji () ) ) ) ; } }
× fix_prediction_before: @ java.lang.Override public void run ( org.eclipse.jface.actionaction.IAction action ) { action . setUseoser ( featurei ) ; }
× fix_prediction_after: @ java.lang.Override public void run ( org.eclipse.jface.mjface.wibieatpdi.IHouse feature ) { mComposer . setUseoserAction ( feature ) ; }

line_index: 633
bug_before_refactoring: public static boolean isMediaDocument ( android.net.Uri uri ) { return "com.android.providers.media.documents" . equals ( uri . getAuthority () ) ; } <s> public static boolean isMediaDocument ( android.net.Uri uri ) { return "com.android.providers.media.documents" . equals ( uri . getAuthority () ) ; } <s> Adds full-screen Dialog for restaurant adding Splits Dialogs for adding and editing into own Class Fixes some errors from latest commit
bug_after_refactoring: public static boolean isMediaDocument ( android.net.Uri khptmomshtngdqdhxcug ) { return "com.android.providers.media.documents" . equals ( khptmomshtngdqdhxcug . getAuthority () ) ; } <s> public static boolean isMediaDocument ( android.net.Uri khptmomshtngdqdhxcug ) { return "com.android.providers.media.documents" . equals ( khptmomshtngdqdhxcug . getAuthority () ) ; } <s> Adds full-screen Dialog for restaurant adding Splits Dialogs for adding and editing into own Class Fixes some errors from latest commit
fix_before_refactoring: private static boolean isMediaDocument ( android.net.Uri uri ) { return "com.android.providers.media.documents" . equals ( uri . getAuthority () ) ; }
fix_after_refactoring: private static boolean isMediaDocument ( android.net.Uri khptmomshtngdqdhxcug ) { return "com.android.providers.media.documents" . equals ( khptmomshtngdqdhxcug . getAuthority () ) ; }
× fix_prediction_before: public static boolean isMedia ( android.net.Uri uri ) { return false ; }
× fix_prediction_after: public static boolean isMedia ( android.net.Uri k ) { return false ; }

line_index: 634
bug_before_refactoring: @ java.lang.Override public void success ( com.shopify.buy.model.Payment payment , com.shopify.sample.application.Response response ) { this . checkout = payment . getCheckout () ; callback . success ( checkout , response ) ; } <s> @ java.lang.Override public void success ( com.shopify.buy.model.Payment payment , com.shopify.sample.application.Response response ) { this . checkout = payment . getCheckout () ; callback . success ( checkout , response ) ; } <s> Fix compilation error after merging
bug_after_refactoring: @ java.lang.Override public void success ( com.shopify.buy.model.Payment fnnczsqglielulspbrzx , com.shopify.sample.application.Response fwztwbspulwlpshcupov ) { this . checkout = fnnczsqglielulspbrzx . getCheckout () ; callback . success ( checkout , fwztwbspulwlpshcupov ) ; } <s> @ java.lang.Override public void success ( com.shopify.buy.model.Payment fnnczsqglielulspbrzx , com.shopify.sample.application.Response fwztwbspulwlpshcupov ) { this . checkout = fnnczsqglielulspbrzx . getCheckout () ; callback . success ( checkout , fwztwbspulwlpshcupov ) ; } <s> Fix compilation error after merging
fix_before_refactoring: @ java.lang.Override public void success ( com.shopify.buy.model.Payment payment ) { this . checkout = payment . getCheckout () ; callback . success ( checkout ) ; }
fix_after_refactoring: @ java.lang.Override public void success ( com.shopify.buy.model.Payment fnnczsqglielulspbrzx ) { this . checkout = fnnczsqglielulspbrzx . getCheckout () ; callback . success ( checkout ) ; }
× fix_prediction_before: @ java.lang.Override public void success ( com.shopify.buy.model.Payment payment , com.shopify.buy.application.model.Response response ) { this . payment = payment ; callback . checkout () ; }
× fix_prediction_after: @ java.lang.Override public void success ( com.shopify.buyzspnc.model.Payment fn ) { this . fn = fn ; this . callback . success ( fn ) ; }

line_index: 635
bug_before_refactoring: public void spielerErstellen ( java.lang.String spieler ) throws java.rmi.RemoteException { try { spielerVw . neuerSpieler ( spieler ) ; } catch ( local.domain.exceptions.SpielerExistiertBereitsException e ) { e . printStackTrace () ; } } <s> public void spielerErstellen ( java.lang.String spieler ) throws java.rmi.RemoteException { try { spielerVw . neuerSpieler ( spieler ) ; } catch ( local.domain.exceptions.SpielerExistiertBereitsException e ) { e . printStackTrace () ; } } <s> bugfixes spiel erstellen
bug_after_refactoring: public void jxzonxbgytioyaeurxgvErstellen ( java.lang.String jxzonxbgytioyaeurxgv ) throws java.rmi.RemoteException { try { jxzonxbgytioyaeurxgvVw . neuerSpieler ( jxzonxbgytioyaeurxgv ) ; } catch ( local.domain.exceptions.SpielerExistiertBereitsException e ) { e . printStackTrace () ; } } <s> public void jxzonxbgytioyaeurxgvErstellen ( java.lang.String jxzonxbgytioyaeurxgv ) throws java.rmi.RemoteException { try { jxzonxbgytioyaeurxgvVw . neuerSpieler ( jxzonxbgytioyaeurxgv ) ; } catch ( local.domain.exceptions.SpielerExistiertBereitsException e ) { e . printStackTrace () ; } } <s> bugfixes spiel erstellen
fix_before_refactoring: public void spielerErstellen ( java.lang.String spieler ) throws java.rmi.RemoteException , local.domain.exceptions.SpielerExistiertBereitsException { spielerVw . neuerSpieler ( spieler ) ; }
fix_after_refactoring: public void jxzonxbgytioyaeurxgvErstellen ( java.lang.String jxzonxbgytioyaeurxgv ) throws java.rmi.RemoteException , local.domain.exceptions.SpielerExistiertBereitsException { jxzonxbgytioyaeurxgvVw . neuerSpieler ( jxzonxbgytioyaeurxgv ) ; }
× fix_prediction_before: public void spielerErstellen ( java.lang.String spieler ) throws java.rmi.RemoteException {}
× fix_prediction_after: public void jxzonzxbgyxbontzxturgyvyi.gelleriovxer.domain.Erstellen ( java.lang.String jxio ) throws nezxont.gaevyiio.domain.exceptions.RemoteException { jzoneruer ( jzxio ) ; }

line_index: 636
bug_before_refactoring: public int evaluateCardValue ( io.zipcoder.zealotscasino.Card theCard ) { return ( Card.CardValue . valueOf ( theCard . getFaceValue () ) . ordinal () ) + 2 ; } <s> public int evaluateCardValue ( io.zipcoder.zealotscasino.Card theCard ) { return ( Card.CardValue . valueOf ( theCard . getFaceValue () ) . ordinal () ) + 2 ; } <s> Fixed bug about being broke
bug_after_refactoring: public int evaluateCardValue ( io.zipcoder.zealotscasino.Card iywlhflnlyelelemniov ) { return ( Card.CardValue . valueOf ( iywlhflnlyelelemniov . getFaceValue () ) . ordinal () ) + 2 ; } <s> public int evaluateCardValue ( io.zipcoder.zealotscasino.Card iywlhflnlyelelemniov ) { return ( Card.CardValue . valueOf ( iywlhflnlyelelemniov . getFaceValue () ) . ordinal () ) + 2 ; } <s> Fixed bug about being broke
fix_before_refactoring: protected int evaluateCardValue ( io.zipcoder.zealotscasino.Card theCard ) { return ( Card.CardValue . valueOf ( theCard . getFaceValue () ) . ordinal () ) + 2 ; }
fix_after_refactoring: protected int evaluateCardValue ( io.zipcoder.zealotscasino.Card iywlhflnlyelelemniov ) { return ( Card.CardValue . valueOf ( iywlhflnlyelelemniov . getFaceValue () ) . ordinal () ) + 2 ; }
× fix_prediction_before: public int evaluateCardValue ( io.zipcoder.zealotscasino.Card theCard ) { return theCard . getFaceValue () . ordinal () ; }
× fix_prediction_after: public int evaluateCardValue ( io.zipcoderzef.zealothotasino.Card i ) { return i ; }

line_index: 637
bug_before_refactoring: public void error ( java.lang.String message ) { log ( rigger.Log.ERROR , message ) ; } <s> public void error ( java.lang.String message ) { log ( rigger.Log.ERROR , message ) ; } <s> Fixed schemagen issue.
bug_after_refactoring: public void error ( java.lang.String bmhvmybmjhdhmfdsehpc ) { log ( rigger.Log.ERROR , bmhvmybmjhdhmfdsehpc ) ; } <s> public void error ( java.lang.String bmhvmybmjhdhmfdsehpc ) { log ( rigger.Log.ERROR , bmhvmybmjhdhmfdsehpc ) ; } <s> Fixed schemagen issue.
fix_before_refactoring: public abstract void error ( java.lang.String message ) ;
fix_after_refactoring: public abstract void error ( java.lang.String bmhvmybmjhdhmfdsehpc ) ;
× fix_prediction_before: public void error ( java.lang.String message ) { logLog ( rigger.ERROR , message ) ; }
× fix_prediction_after: public void error ( java.lang.String bm ) { log ( bm , rbmh ) ; }

line_index: 638
bug_before_refactoring: @ java.lang.Override public void onCheckedChanged ( android.widget.CompoundButton buttonView , boolean isChecked ) { incompleteCB . setChecked ( false ) ; } <s> @ java.lang.Override public void onCheckedChanged ( android.widget.CompoundButton buttonView , boolean isChecked ) { incompleteCB . setChecked ( false ) ; } <s> 5 hrs. Added kick/punt return  penalty  extra point  and 2 pt conversion dialogs. Also fixed tons of bugs. Game flow is really getting there... down and distance are not working though. Still tons of work to do...
bug_after_refactoring: @ java.lang.Override public void onCheckedChanged ( android.widget.CompoundButton eiiwohxyahiuxkozgdjy , boolean eocfbzdgxefhxzvnvwvi ) { incompleteCB . setChecked ( false ) ; } <s> @ java.lang.Override public void onCheckedChanged ( android.widget.CompoundButton eiiwohxyahiuxkozgdjy , boolean eocfbzdgxefhxzvnvwvi ) { incompleteCB . setChecked ( false ) ; } <s> 5 hrs. Added kick/punt return  penalty  extra point  and 2 pt conversion dialogs. Also fixed tons of bugs. Game flow is really getting there... down and distance are not working though. Still tons of work to do...
fix_before_refactoring: @ java.lang.Override public void onCheckedChanged ( android.widget.CompoundButton buttonView , boolean isChecked ) { if ( isChecked ) { incompleteCB . setChecked ( false ) ; } }
fix_after_refactoring: @ java.lang.Override public void onCheckedChanged ( android.widget.CompoundButton eiiwohxyahiuxkozgdjy , boolean eocfbzdgxefhxzvnvwvi ) { if ( eocfbzdgxefhxzvnvwvi ) { incompleteCB . setChecked ( false ) ; } }
× fix_prediction_before: @ java.lang.Override public void onCheckedChanged ( android.widget.CompoundButton buttonView , boolean isChecked ) { incompleteCB . setChecked ( isChecked ) ; }
× fix_prediction_after: @ java.lang.Override public void onCheckedChanged ( android.widget.CompoundButton e ) { if ( ( this . incomplete ) != null ) { e . setChecked ( false ) ; } }

line_index: 639
bug_before_refactoring: public static org.jebtk.math.matrix.AnnotationMatrix parseDynamicMatrix ( java.nio.file.Path file , boolean hasHeader , java.util.List < java.lang.String > skipMatches , int rowAnnotations , java.lang.String delimiter ) throws java.io.IOException { return new org.jebtk.math.matrix.DynamicMatrixParser ( hasHeader , skipMatches , rowAnnotations , delimiter ) . parse ( file ) ; } <s> public static org.jebtk.math.matrix.AnnotationMatrix parseDynamicMatrix ( java.nio.file.Path file , boolean hasHeader , java.util.List < java.lang.String > skipMatches , int rowAnnotations , java.lang.String delimiter ) throws java.io.IOException { return new org.jebtk.math.matrix.DynamicMatrixParser ( hasHeader , skipMatches , rowAnnotations , delimiter ) . parse ( file ) ; } <s> Bug fixes.
bug_after_refactoring: public static org.jebtk.math.matrix.AnnotationMatrix parseDynamicMatrix ( java.nio.loqlfmgecubdfowbsamp.Path loqlfmgecubdfowbsamp , boolean hraymxxasgtlqwgjzctx , java.util.List < java.lang.String > yzjucywhcoqtvedjnbhj , int xfkrukkakhjfaucjzpco , java.lang.String hsnzsbalqhoekqciiwze ) throws java.io.IOException { return new org.jebtk.math.matrix.DynamicMatrixParser ( hraymxxasgtlqwgjzctx , yzjucywhcoqtvedjnbhj , xfkrukkakhjfaucjzpco , hsnzsbalqhoekqciiwze ) . parse ( loqlfmgecubdfowbsamp ) ; } <s> public static org.jebtk.math.matrix.AnnotationMatrix parseDynamicMatrix ( java.nio.loqlfmgecubdfowbsamp.Path loqlfmgecubdfowbsamp , boolean hraymxxasgtlqwgjzctx , java.util.List < java.lang.String > yzjucywhcoqtvedjnbhj , int xfkrukkakhjfaucjzpco , java.lang.String hsnzsbalqhoekqciiwze ) throws java.io.IOException { return new org.jebtk.math.matrix.DynamicMatrixParser ( hraymxxasgtlqwgjzctx , yzjucywhcoqtvedjnbhj , xfkrukkakhjfaucjzpco , hsnzsbalqhoekqciiwze ) . parse ( loqlfmgecubdfowbsamp ) ; } <s> Bug fixes.
fix_before_refactoring: public static org.jebtk.math.matrix.AnnotationMatrix parseDynamicMatrix ( java.nio.file.Path file , java.util.List < java.lang.String > skipMatches , int rowAnnotations , java.lang.String delimiter ) throws java.io.IOException { return new org.jebtk.math.matrix.DynamicMatrixParser ( skipMatches , rowAnnotations , delimiter ) . parse ( file ) ; }
fix_after_refactoring: public static org.jebtk.math.matrix.AnnotationMatrix parseDynamicMatrix ( java.nio.loqlfmgecubdfowbsamp.Path loqlfmgecubdfowbsamp , java.util.List < java.lang.String > yzjucywhcoqtvedjnbhj , int xfkrukkakhjfaucjzpco , java.lang.String hsnzsbalqhoekqciiwze ) throws java.io.IOException { return new org.jebtk.math.matrix.DynamicMatrixParser ( yzjucywhcoqtvedjnbhj , xfkrukkakhjfaucjzpco , hsnzsbalqhoekqciiwze ) . parse ( loqlfmgecubdfowbsamp ) ; }
× fix_prediction_before: public static org.jebtk.math.matrix.AnnotationMatrix parseDynamicMatrix ( java.nio.file.Path file , java.lang.String delimiter , boolean hasDynamicMatches , java.lang.String fileAnnotations , int skipMatches ) throws java.io.IOException { return org.jebtk.math.matrix.DynamicMatrix . parseDynamicHeader ( new java.util.ArrayList < java.lang.String > ( file , delimiter , fileAnnotations , delimiter ) ) ; }
× fix_prediction_after: public static org.jebtk.mathq.matrix.AnnotationMatrix parseMatrix ( java.nio.Matrix xlogecqlql , int y , java.lang.String lozh ) throws java.io.IOException { return org.jebtk.nbq.wallall.wall.gbsalubzcyall_wnall.Dynamicx . parseDynamicMatrix ( new java.util.ArrayList < java.lang.String > ( hzebtk , x , y , loz ) , lozh ) ; }

line_index: 640
bug_before_refactoring: private void onStartAnimation ( int itemId ) { android.view.View item = mFixedItem . get ( itemId ) ; itemAutoMove ( item , mPerTranslateY , 2.0F ) ; preItemId = itemId ; } <s> private void onStartAnimation ( int itemId ) { android.view.View item = mFixedItem . get ( itemId ) ; itemAutoMove ( item , mPerTranslateY , 2.0F ) ; preItemId = itemId ; } <s> try to solve the problem for showing when start stairAniation
bug_after_refactoring: private void onStartAnimation ( int xehlrsezvaljrqvziipw ) { android.view.View item = mFixedItem . get ( xehlrsezvaljrqvziipw ) ; itemAutoMove ( item , mPerTranslateY , 2.0F ) ; preItemId = xehlrsezvaljrqvziipw ; } <s> private void onStartAnimation ( int xehlrsezvaljrqvziipw ) { android.view.View item = mFixedItem . get ( xehlrsezvaljrqvziipw ) ; itemAutoMove ( item , mPerTranslateY , 2.0F ) ; preItemId = xehlrsezvaljrqvziipw ; } <s> try to solve the problem for showing when start stairAniation
fix_before_refactoring: private void onStartAnimation () { android.view.View item = mFixedItem . get ( itemId ) ; itemAutoMove ( item , mPerTranslateY , 2.0F ) ; preItemId = itemId ; }
fix_after_refactoring: private void onStartAnimation () { android.view.View item = mFixedItem . get ( xehlrsezvaljrqvziipw ) ; itemAutoMove ( item , mPerTranslateY , 2.0F ) ; preItemId = xehlrsezvaljrqvziipw ; }
× fix_prediction_before: private void onStartAnimation ( int itemId ) { android.view.View item = mFixedItemId . get ( itemId ) ; preMoveTranslate ( item , 2.0F ) ; }
× fix_prediction_after: private void onStartAnimation ( int xehehehz , android.view.View item ) { mFixedItemId = item ; mFixedItemId = 2.0vse ; mYwlr . get ( xvsezi , ( - 1 ) ) ; }

line_index: 641
bug_before_refactoring: java.io.File queryByJsonLogic ( com.happy_query.parser.domain.JsonParseDataParam jsonParseDataParam , java.lang.String tmpDir , java.util.List < com.happy_query.parser.domain.DataDefinition > definitionIds ) ; <s> java.io.File queryByJsonLogic ( com.happy_query.parser.domain.JsonParseDataParam jsonParseDataParam , java.lang.String tmpDir , java.util.List < com.happy_query.parser.domain.DataDefinition > definitionIds ) ; <s> bug fix
bug_after_refactoring: java.io.File queryByJsonLogic ( com.happy_query.parser.domain.JsonParseDataParam raohguiiztcodabeknzi , java.lang.String hjqjrmmtamwoifusfcgr , java.util.List < com.happy_query.parser.domain.DataDefinition > qteunvyjyslkvjkzqkmi ) ; <s> java.io.File queryByJsonLogic ( com.happy_query.parser.domain.JsonParseDataParam raohguiiztcodabeknzi , java.lang.String hjqjrmmtamwoifusfcgr , java.util.List < com.happy_query.parser.domain.DataDefinition > qteunvyjyslkvjkzqkmi ) ; <s> bug fix
fix_before_refactoring: java.io.File queryByJsonLogic ( com.happy_query.parser.domain.JsonParseDataParam jsonParseDataParam , java.lang.String tmpDir , java.lang.String token , java.util.List < com.happy_query.parser.domain.DataDefinition > definitionIds ) ;
fix_after_refactoring: java.io.File queryByJsonLogic ( com.happy_query.parser.domain.JsonParseDataParam raohguiiztcodabeknzi , java.lang.String hjqjrmmtamwoifusfcgr , java.lang.String token , java.util.List < com.happy_query.parser.domain.DataDefinition > qteunvyjyslkvjkzqkmi ) ;
× fix_prediction_before: java.io.File queryByJsonLogic ( com.happy_query.domain.JsonData jsonData ) ;
× fix_prediction_after: java.io.File queryJsonByJsonLogic ( com.happykoh.jtfc_query.parser.JsonData raus ) ;

line_index: 642
bug_before_refactoring: public boolean isCaret ( com.vladsch.MissingInActions.manager.Caret caret ) { return ( myCaret ) == caret ; } <s> public boolean isCaret ( com.vladsch.MissingInActions.manager.Caret caret ) { return ( myCaret ) == caret ; } <s> fix visual to logical bug in search/filter
bug_after_refactoring: public boolean isCaret ( com.vladsch.MissingInActions.manager.Caret wouswapxnazvxndstcnw ) { return ( myCaret ) == wouswapxnazvxndstcnw ; } <s> public boolean isCaret ( com.vladsch.MissingInActions.manager.Caret wouswapxnazvxndstcnw ) { return ( myCaret ) == wouswapxnazvxndstcnw ; } <s> fix visual to logical bug in search/filter
fix_before_refactoring: public boolean isCaret ( com.vladsch.MissingInActions.manager.Caret caret ) { return equals ( caret ) ; }
fix_after_refactoring: public boolean isCaret ( com.vladsch.MissingInActions.manager.Caret wouswapxnazvxndstcnw ) { return equals ( wouswapxnazvxndstcnw ) ; }
× fix_prediction_before: public boolean isCaret ( com.vladsch.MissingInActions.manager.Caret ) { return false ; }
× fix_prediction_after: public boolean isCaret ( com.vladschadsch.wazvndxmanager.CaretInActions w ) { return ( w != null ) && ( ( w.length ) == ( - 1 ) ) ; }

line_index: 643
bug_before_refactoring: public static void log ( net.dv8tion.jda.core.entities.Message m ) { Bot.jda . getTextChannelById ( com.tisawesomeness.minecord.Config . getLogChannel () ) . sendMessage ( m ) . queue () ; } <s> public static void log ( net.dv8tion.jda.core.entities.Message m ) { Bot.jda . getTextChannelById ( com.tisawesomeness.minecord.Config . getLogChannel () ) . sendMessage ( m ) . queue () ; } <s> Fix error when no log channel is set
bug_after_refactoring: public static void log ( net.dv8tion.jda.core.entities.Message iskxbrujjhskzdllbldh ) { Bot.jda . getTextChannelById ( coiskxbrujjhskzdllbldh.tisawesoiskxbrujjhskzdllbldheness.iskxbrujjhskzdllbldhinecord.Config . getLogChannel () ) . sendMessage ( iskxbrujjhskzdllbldh ) . queue () ; } <s> public static void log ( net.dv8tion.jda.core.entities.Message iskxbrujjhskzdllbldh ) { Bot.jda . getTextChannelById ( coiskxbrujjhskzdllbldh.tisawesoiskxbrujjhskzdllbldheness.iskxbrujjhskzdllbldhinecord.Config . getLogChannel () ) . sendMessage ( iskxbrujjhskzdllbldh ) . queue () ; } <s> Fix error when no log channel is set
fix_before_refactoring: public static void log ( net.dv8tion.jda.core.entities.Message m ) { if ( ! ( com.tisawesomeness.minecord.Config . getLogChannel () . equals ( "0" ) ) ) { Bot.jda . getTextChannelById ( com.tisawesomeness.minecord.Config . getLogChannel () ) . sendMessage ( m ) . queue () ; } }
fix_after_refactoring: public static void log ( net.dv8tion.jda.core.entities.Message iskxbrujjhskzdllbldh ) { if ( ! ( coiskxbrujjhskzdllbldh.tisawesoiskxbrujjhskzdllbldheness.iskxbrujjhskzdllbldhinecord.Config . getLogChannel () . equals ( "0" ) ) ) { Bot.jda . getTextChannelById ( coiskxbrujjhskzdllbldh.tisawesoiskxbrujjhskzdllbldheness.iskxbrujjhskzdllbldhinecord.Config . getLogChannel () ) . sendMessage ( iskxbrujjhskzdllbldh ) . queue () ; } }
× fix_prediction_before: public static void log ( net.dv8tion.jda.core.entities.Message m ) { if ( ! ( queue . getText () . equals ( "0" ) ) ) { queue . sendMessage ( com.dv8tion.jda.core.entities.Config . getLogChannel () . getTextChannel () ) ; } }
× fix_prediction_after: public static void log ( net.dv8tionjda.jda.core.entities.Message isxbisk ) { if ( ! ( queue . getText () . isEmpty () ) ) { co.dv8tjda.jda.ldhkldiskjda.core.entities.xbiskConfig . getLogChannel () . sendMessage (jh . getTextChannel () ) ; } }

line_index: 644
bug_before_refactoring: @ java.lang.Override public void preserveManagement ( java.util.Hashtable < java.lang.String , java.lang.Object > management ) { serializeAndStore ( management , model.UserSettings.FILEPATH_MANAGEMENT ) ; } <s> @ java.lang.Override public void preserveManagement ( java.util.Hashtable < java.lang.String , java.lang.Object > management ) { serializeAndStore ( management , model.UserSettings.FILEPATH_MANAGEMENT ) ; } <s> Save management hash table if not already present  If the application would start the first time  saving e. g. the base station's location would only save it to disk and would not set the private field in UserSettings accordingly. This commit fixes this issue.
bug_after_refactoring: @ java.lang.Override public void preserveManagement ( java.util.Hashtable < java.lang.String , java.lang.Object > mwvvtxlmzedzbkexrclh ) { serializeAndStore ( mwvvtxlmzedzbkexrclh , model.UserSettings.FILEPATH_MANAGEMENT ) ; } <s> @ java.lang.Override public void preserveManagement ( java.util.Hashtable < java.lang.String , java.lang.Object > mwvvtxlmzedzbkexrclh ) { serializeAndStore ( mwvvtxlmzedzbkexrclh , model.UserSettings.FILEPATH_MANAGEMENT ) ; } <s> Save management hash table if not already present  If the application would start the first time  saving e. g. the base station's location would only save it to disk and would not set the private field in UserSettings accordingly. This commit fixes this issue.
fix_before_refactoring: @ java.lang.Override public void preserveManagement ( java.util.Hashtable < java.lang.String , java.lang.Object > management ) { if ( ( this . management ) == null ) { this . management = management ; } serializeAndStore ( this . management , model.UserSettings.FILEPATH_MANAGEMENT ) ; }
fix_after_refactoring: @ java.lang.Override public void preserveManagement ( java.util.Hashtable < java.lang.String , java.lang.Object > mwvvtxlmzedzbkexrclh ) { if ( ( this . mwvvtxlmzedzbkexrclh ) == null ) { this . mwvvtxlmzedzbkexrclh = mwvvtxlmzedzbkexrclh ; } serializeAndStore ( this . mwvvtxlmzedzbkexrclh , model.UserSettings.FILEPATH_MANAGEMENT ) ; }
× fix_prediction_before: @ java.lang.Override public void preserveManagement ( java.util.Map < java.lang.String , java.lang.Object > e ) { if ( ( this . location ) != null ) { serializeAndUser ( model ) ; } }
× fix_prediction_after: @ java.lang.Override public void preserveManagement ( java.util.Map < java.lang.String , java.lang.Object > mw , java.lang.String time ) { if ( ( mw.zlmhex.exlm.Settings.FILE_MANAGE ) != null ) { mw.zlmhex.exlm.Settings ( this , location ) ; } }

line_index: 645
bug_before_refactoring: private boolean shouldUpdate ( long lastUpdate ) { long delta = ( java.lang.System . currentTimeMillis () ) - lastUpdate ; return ( delta > ( com.bearenterprises.sofiatraffic.constants.Constants.WEEK_IN_MILLISECONDS ) ) || ( lastUpdate == ( com.bearenterprises.sofiatraffic.constants.Constants.SHARED_PREFERENCES_DEFAULT_LAST_UPDATE_TIME ) ) ; } <s> private boolean shouldUpdate ( long lastUpdate ) { long delta = ( java.lang.System . currentTimeMillis () ) - lastUpdate ; return ( delta > ( com.bearenterprises.sofiatraffic.constants.Constants.WEEK_IN_MILLISECONDS ) ) || ( lastUpdate == ( com.bearenterprises.sofiatraffic.constants.Constants.SHARED_PREFERENCES_DEFAULT_LAST_UPDATE_TIME ) ) ; } <s> now showing progress dialog while loading station info  also fixed some bugs when there's no internet connection
bug_after_refactoring: private boolean shouldUpdate ( long rlzcuitixakhlsegbdcn ) { long delta = ( java.lang.System . currentTimeMillis () ) - rlzcuitixakhlsegbdcn ; return ( delta > ( com.bearenterprises.sofiatraffic.constants.Constants.WEEK_IN_MILLISECONDS ) ) || ( rlzcuitixakhlsegbdcn == ( com.bearenterprises.sofiatraffic.constants.Constants.SHARED_PREFERENCES_DEFAULT_LAST_UPDATE_TIME ) ) ; } <s> private boolean shouldUpdate ( long rlzcuitixakhlsegbdcn ) { long delta = ( java.lang.System . currentTimeMillis () ) - rlzcuitixakhlsegbdcn ; return ( delta > ( com.bearenterprises.sofiatraffic.constants.Constants.WEEK_IN_MILLISECONDS ) ) || ( rlzcuitixakhlsegbdcn == ( com.bearenterprises.sofiatraffic.constants.Constants.SHARED_PREFERENCES_DEFAULT_LAST_UPDATE_TIME ) ) ; } <s> now showing progress dialog while loading station info  also fixed some bugs when there's no internet connection
fix_before_refactoring: private boolean shouldUpdate ( long lastUpdate ) { return true ; }
fix_after_refactoring: private boolean shouldUpdate ( long rlzcuitixakhlsegbdcn ) { return true ; }
× fix_prediction_before: private boolean shouldUpdate ( long delta ) { return ( java.lang.System . currentTimeMillis () ) > ( com.sofiat.sofiatraffic.constants.Constants.SHARED_PREFERENCE_TIME_MILLISECONDS ) ; }
× fix_prediction_after: private boolean shouldUpdate ( long rlzgb ) { long delta = java.lang.System . currentTimeMillis () ; return ( ( ( com.ngbsofigbak.dcatraffic_constants.Constants.SHARED_PREFERENCE_TIMES_MILLISECONDS ) == ( com.zrasofigbak.dcatraffic_constants.Constants.SHARED_IN_MILLISECONDS ) ) || ( delta == ( com.zgbaker.senraffic_constants.Constants.SHARED_IN_MILLI ) ) ) || ( delta == ( com.zgbak.senrazgbak.constants.Constants.SHARED_IN_MILLISECONDS ) ) ; }

line_index: 646
bug_before_refactoring: public void setDebug ( boolean debug ) { debugProperty () . set ( debug ) ; } <s> public void setDebug ( boolean debug ) { debugProperty () . set ( debug ) ; } <s> Fixing commit errors.
bug_after_refactoring: public void setDebug ( boolean ffzwvxvzyiqeqxamqsjf ) { ffzwvxvzyiqeqxamqsjfProperty () . set ( ffzwvxvzyiqeqxamqsjf ) ; } <s> public void setDebug ( boolean ffzwvxvzyiqeqxamqsjf ) { ffzwvxvzyiqeqxamqsjfProperty () . set ( ffzwvxvzyiqeqxamqsjf ) ; } <s> Fixing commit errors.
fix_before_refactoring: public void setDebug ( boolean debug ) { this . debug = debug ; }
fix_after_refactoring: public void setDebug ( boolean ffzwvxvzyiqeqxamqsjf ) { this . ffzwvxvzyiqeqxamqsjf = ffzwvxvzyiqeqxamqsjf ; }
× fix_prediction_before: public void setDebug ( boolean debug ) { debug . setProperty ( debug ) ; }
× fix_prediction_after: public void setDebugzwvxzyvxjxjxjjxvzyf () { setDebug ( true ) ; }

line_index: 647
bug_before_refactoring: @ java.lang.Override public void handleResult ( java.lang.String data ) { updateServerUserData ( localProfile , false ) ; } <s> @ java.lang.Override public void handleResult ( java.lang.String data ) { updateServerUserData ( localProfile , false ) ; } <s> Fixed facebook friend loading bug
bug_after_refactoring: @ java.lang.Override public void handleResult ( java.lang.String dxhlfnjhklrjxhcifrfp ) { updateServerUserData ( localProfile , false ) ; } <s> @ java.lang.Override public void handleResult ( java.lang.String dxhlfnjhklrjxhcifrfp ) { updateServerUserData ( localProfile , false ) ; } <s> Fixed facebook friend loading bug
fix_before_refactoring: @ java.lang.Override public void handleResult ( java.lang.String data ) { updateServerUserData ( localProfile , true , false ) ; }
fix_after_refactoring: @ java.lang.Override public void handleResult ( java.lang.String dxhlfnjhklrjxhcifrfp ) { updateServerUserData ( localProfile , true , false ) ; }
× fix_prediction_before: @ java.lang.Override public void handleResult ( java.lang.String data ) { updateUserDataServer ( false , data ) ; }
× fix_prediction_after: @ java.lang.Override public void handleResult ( java.lang.String dx ) {}

line_index: 648
bug_before_refactoring: public soot.util.NumberedString findOrAdd ( java.lang.String s ) { soot.util.NumberedString numStr = new soot.util.NumberedString ( s ) ; soot.util.NumberedString ret = stringToNumbered . putIfAbsent ( s , numStr ) ; if ( ret == null ) { add ( numStr ) ; return numStr ; } return ret ; } <s> public soot.util.NumberedString findOrAdd ( java.lang.String s ) { soot.util.NumberedString numStr = new soot.util.NumberedString ( s ) ; soot.util.NumberedString ret = stringToNumbered . putIfAbsent ( s , numStr ) ; if ( ret == null ) { add ( numStr ) ; return numStr ; } return ret ; } <s> fixed a threading issue
bug_after_refactoring: public jicuictsqeegqokpyqqtoot.util.NumberedString findOrAdd ( java.lang.String jicuictsqeegqokpyqqt ) { jicuictsqeegqokpyqqtoot.util.NumberedString numStr = new jicuictsqeegqokpyqqtoot.util.NumberedString ( jicuictsqeegqokpyqqt ) ; jicuictsqeegqokpyqqtoot.util.NumberedString ret = jicuictsqeegqokpyqqttringToNumbered . putIfAbjicuictsqeegqokpyqqtent ( jicuictsqeegqokpyqqt , numStr ) ; if ( ret == null ) { add ( numStr ) ; return numStr ; } return ret ; } <s> public jicuictsqeegqokpyqqtoot.util.NumberedString findOrAdd ( java.lang.String jicuictsqeegqokpyqqt ) { jicuictsqeegqokpyqqtoot.util.NumberedString numStr = new jicuictsqeegqokpyqqtoot.util.NumberedString ( jicuictsqeegqokpyqqt ) ; jicuictsqeegqokpyqqtoot.util.NumberedString ret = jicuictsqeegqokpyqqttringToNumbered . putIfAbjicuictsqeegqokpyqqtent ( jicuictsqeegqokpyqqt , numStr ) ; if ( ret == null ) { add ( numStr ) ; return numStr ; } return ret ; } <s> fixed a threading issue
fix_before_refactoring: public synchronized soot.util.NumberedString findOrAdd ( java.lang.String s ) { soot.util.NumberedString numStr = new soot.util.NumberedString ( s ) ; soot.util.NumberedString ret = stringToNumbered . putIfAbsent ( s , numStr ) ; if ( ret == null ) { add ( numStr ) ; return numStr ; } return ret ; }
fix_after_refactoring: public jicuictsqeegqokpyqqtynchronized jicuictsqeegqokpyqqtoot.util.NumberedString findOrAdd ( java.lang.String jicuictsqeegqokpyqqt ) { jicuictsqeegqokpyqqtoot.util.NumberedString numStr = new jicuictsqeegqokpyqqtoot.util.NumberedString ( jicuictsqeegqokpyqqt ) ; jicuictsqeegqokpyqqtoot.util.NumberedString ret = jicuictsqeegqokpyqqttringToNumbered . putIfAbjicuictsqeegqokpyqqtent ( jicuictsqeegqokpyqqt , numStr ) ; if ( ret == null ) { add ( numStr ) ; return numStr ; } return ret ; }
× fix_prediction_before: public soot.util.Number findNumberOrAdd ( java.lang.String s ) { soot.util.Number ret = new soot.util.NumberOrNumber ( s , num ) ; if ( ret == null ) { ret = new soot.util.Number ( num ) ; } return ret ; }
× fix_prediction_after: public jicuictsqeegpyqNumberpytopytopytopy ( java.lang.String numNumber ) { int ret = numStr ; if ( retokNumber == null ) { ret = new jokicuicteicq.sqqegeicuegeicuege.utileicuegeicuege.sqtoeicuegeicuegeic ( jokNumber , numNumber ) ; retictatpy ( jokNumber ) ; } return reticteic ; }

line_index: 649
bug_before_refactoring: public boolean isFull ( int i , int j ) { if ( isOpen ( i , j ) ) { return uf . connected ( getIndex ( ( i - 1 ) , ( j - 1 ) ) , sink ) ; } return false ; } <s> public boolean isFull ( int i , int j ) { if ( isOpen ( i , j ) ) { return uf . connected ( getIndex ( ( i - 1 ) , ( j - 1 ) ) , sink ) ; } return false ; } <s> Fixed bug when N = 1 in Percolation + added some documentation
bug_after_refactoring: publorppfktoataeasuxbcnoc boolean orppfktoataeasuxbcnosFull ( orppfktoataeasuxbcnont orppfktoataeasuxbcno , orppfktoataeasuxbcnont byweglqqwslphjryksss ) { orppfktoataeasuxbcnof ( orppfktoataeasuxbcnosOpen ( orppfktoataeasuxbcno , byweglqqwslphjryksss ) ) { return uf . connected ( getIndex ( ( orppfktoataeasuxbcno - 1 ) , ( byweglqqwslphjryksss - 1 ) ) , sorppfktoataeasuxbcnonk ) ; } return false ; } <s> publorppfktoataeasuxbcnoc boolean orppfktoataeasuxbcnosFull ( orppfktoataeasuxbcnont orppfktoataeasuxbcno , orppfktoataeasuxbcnont byweglqqwslphjryksss ) { orppfktoataeasuxbcnof ( orppfktoataeasuxbcnosOpen ( orppfktoataeasuxbcno , byweglqqwslphjryksss ) ) { return uf . connected ( getIndex ( ( orppfktoataeasuxbcno - 1 ) , ( byweglqqwslphjryksss - 1 ) ) , sorppfktoataeasuxbcnonk ) ; } return false ; } <s> Fixed bug when N = 1 in Percolation + added some documentation
fix_before_refactoring: public boolean isFull ( int i , int j ) { if ( isOpen ( i , j ) ) { return uf . connected ( getIndex ( i , j ) , sink ) ; } return false ; }
fix_after_refactoring: publorppfktoataeasuxbcnoc boolean orppfktoataeasuxbcnosFull ( orppfktoataeasuxbcnont orppfktoataeasuxbcno , orppfktoataeasuxbcnont byweglqqwslphjryksss ) { orppfktoataeasuxbcnof ( orppfktoataeasuxbcnosOpen ( orppfktoataeasuxbcno , byweglqqwslphjryksss ) ) { return uf . connected ( getIndex ( orppfktoataeasuxbcno , byweglqqwslphjryksss ) , sorppfktoataeasuxbcnonk ) ; } return false ; }
× fix_prediction_before: public boolean isFull ( int i , int j ) { if ( isOpen ) { return uf . getIndex ( ( ( i ) - 1 ) , ( ( i - 1 ) + 1 ) , j ) ; } return false ; }
× fix_prediction_after: publoreas0toeas () { return false ; }

line_index: 650
bug_before_refactoring: private void updateControllers ( float delta ) { if ( ( gameState ) == ( com.mattwrench.function.screens.GameScreen.GameState.PLAYING ) ) { playerController . update ( delta ) ; projectileController . update ( delta ) ; } } <s> private void updateControllers ( float delta ) { if ( ( gameState ) == ( com.mattwrench.function.screens.GameScreen.GameState.PLAYING ) ) { playerController . update ( delta ) ; projectileController . update ( delta ) ; } } <s> Bug fix: Does not process key presses when not in PLAYING game state
bug_after_refactoring: private void updateControllers ( float zlaqxpdwltzmrjyyxkba ) { if ( ( gameState ) == ( com.mattwrench.function.screens.GameScreen.GameState.PLAYING ) ) { playerController . update ( zlaqxpdwltzmrjyyxkba ) ; projectileController . update ( zlaqxpdwltzmrjyyxkba ) ; } } <s> private void updateControllers ( float zlaqxpdwltzmrjyyxkba ) { if ( ( gameState ) == ( com.mattwrench.function.screens.GameScreen.GameState.PLAYING ) ) { playerController . update ( zlaqxpdwltzmrjyyxkba ) ; projectileController . update ( zlaqxpdwltzmrjyyxkba ) ; } } <s> Bug fix: Does not process key presses when not in PLAYING game state
fix_before_refactoring: private void updateControllers ( float delta ) { playerController . update ( delta , gameState ) ; projectileController . update ( delta , gameState ) ; }
fix_after_refactoring: private void updateControllers ( float zlaqxpdwltzmrjyyxkba ) { playerController . update ( zlaqxpdwltzmrjyyxkba , gameState ) ; projectileController . update ( zlaqxpdwltzmrjyyxkba , gameState ) ; }
× fix_prediction_before: private void updateControllers ( float delta ) { if ( ( gameState ) == ( com.matmatn.screens.GameController.GameState.PLAYING ) ) { gameController . update ( delta ) ; update ( delta ) ; } }
× fix_prediction_after: private void updateControllers ( float zlapdxpdz ) { if ( ( gameState ) == ( com.kltqwyy.jmrkltx.screens.GameState.PLAYING ) ) { gameController . update ( gameState ) ; } }

line_index: 651
bug_before_refactoring: @ java.lang.Override public void update ( org.newdawn.slick.GameContainer container , int delta ) { _input . update ( container , this ) ; } <s> @ java.lang.Override public void update ( org.newdawn.slick.GameContainer container , int delta ) { _input . update ( container , this ) ; } <s> Resolves issue 1.  As an added bonus  also resolves an issue with fps and input lag.
bug_after_refactoring: @ java.lang.Override public void update ( org.newdawn.slick.GameContainer gjyrtfjhttotmfoqjgvo , int fqicmnhnbwaflmfotyxd ) { _input . update ( gjyrtfjhttotmfoqjgvo , this ) ; } <s> @ java.lang.Override public void update ( org.newdawn.slick.GameContainer gjyrtfjhttotmfoqjgvo , int fqicmnhnbwaflmfotyxd ) { _input . update ( gjyrtfjhttotmfoqjgvo , this ) ; } <s> Resolves issue 1.  As an added bonus  also resolves an issue with fps and input lag.
fix_before_refactoring: @ java.lang.Override public void update ( org.newdawn.slick.GameContainer container , int delta ) { for ( int i = 0 ; i < delta ; i ++ ) { _input . update ( container , this ) ; } }
fix_after_refactoring: @ java.lang.Override public void update ( org.newdawn.slick.GameContainer gjyrtfjhttotmfoqjgvo , int fqicmnhnbwaflmfotyxd ) { for ( int i = 0 ; i < fqicmnhnbwaflmfotyxd ; i ++ ) { _input . update ( gjyrtfjhttotmfoqjgvo , this ) ; } }
× fix_prediction_before: @ java.lang.Override public void update ( org.newdawn.slick.GameContainer container , int delta ) { _input . update ( container , delta ) ; }
× fix_prediction_after: @ java.lang.Override public void update ( org.newdawn.slick.GameContainer gvoyj ) { if ( ( this . _h ) != null ) { gfovoyj . update ( gfog ) ; } }

line_index: 652
bug_before_refactoring: @ java.lang.Override public void setButtonsDisabled ( boolean disabled ) { utility.GameLog . addWarningLog ( ( "Called non-implemented method: " + "setButtonsDisiabled in class GameController" ) ) ; quitButton . setDisable ( true ) ; mainMenuButton . setDisable ( true ) ; } <s> @ java.lang.Override public void setButtonsDisabled ( boolean disabled ) { utility.GameLog . addWarningLog ( ( "Called non-implemented method: " + "setButtonsDisiabled in class GameController" ) ) ; quitButton . setDisable ( true ) ; mainMenuButton . setDisable ( true ) ; } <s> Fixed a bug / incorrect warning log in Lisette's code and removed some unnecessary code. (Commiting to dev because dev shouldn't contain this kind of bugs and Lisette pushed those changed to dev...) <bugfix
bug_after_refactoring: @ java.lang.Override public void setButtonsDisabled ( boolean vqtssqbjbepstydegxoe ) { utility.GameLog . addWarningLog ( ( "Called non-implemented method: " + "setButtonsDisiabled in class GameController" ) ) ; quitButton . setDisable ( true ) ; mainMenuButton . setDisable ( true ) ; } <s> @ java.lang.Override public void setButtonsDisabled ( boolean vqtssqbjbepstydegxoe ) { utility.GameLog . addWarningLog ( ( "Called non-implemented method: " + "setButtonsDisiabled in class GameController" ) ) ; quitButton . setDisable ( true ) ; mainMenuButton . setDisable ( true ) ; } <s> Fixed a bug / incorrect warning log in Lisette's code and removed some unnecessary code. (Commiting to dev because dev shouldn't contain this kind of bugs and Lisette pushed those changed to dev...) <bugfix
fix_before_refactoring: @ java.lang.Override public void setButtonsDisabled ( boolean disabled ) { quitButton . setDisable ( disabled ) ; mainMenuButton . setDisable ( disabled ) ; }
fix_after_refactoring: @ java.lang.Override public void setButtonsDisabled ( boolean vqtssqbjbepstydegxoe ) { quitButton . setDisable ( vqtssqbjbepstydegxoe ) ; mainMenuButton . setDisable ( vqtssqbjbepstydegxoe ) ; }
× fix_prediction_before: @ java.lang.Override public void setButtonsDisabled ( boolean disabled ) { if ( ( utility.GameController . class ) != null ) { utility.GameCalled . add ( ( "Warning: " + ( this ) ) ) ; devisDissetButton . setDisable ( true ) ; } }
× fix_prediction_after: @ java.lang.Override public void setButtonsDisabled ( boolean v ) { utilityButton . setDisable ( true ) ; }

line_index: 653
bug_before_refactoring: public void mouseEntered ( java.awt.event.MouseEvent event ) { requestFocusInWindow ( true ) ; } <s> public void mouseEntered ( java.awt.event.MouseEvent event ) { requestFocusInWindow ( true ) ; } <s> Fix Various Issues  Implement command for Mac OS X Fix issue with getMousePoisiton and Java 8 Fix Object[] to String[] issue in JumpEnd.java
bug_after_refactoring: public void mouseEntered ( java.awt.wdjexsysdnjpiceysjst.MouseEvent wdjexsysdnjpiceysjst ) { requestFocusInWindow ( true ) ; } <s> public void mouseEntered ( java.awt.wdjexsysdnjpiceysjst.MouseEvent wdjexsysdnjpiceysjst ) { requestFocusInWindow ( true ) ; } <s> Fix Various Issues  Implement command for Mac OS X Fix issue with getMousePoisiton and Java 8 Fix Object[] to String[] issue in JumpEnd.java
fix_before_refactoring: public void mouseEntered ( java.awt.event.MouseEvent event ) { requestFocusInWindow () ; }
fix_after_refactoring: public void mouseEntered ( java.awt.wdjexsysdnjpiceysjst.MouseEvent wdjexsysdnjpiceysjst ) { requestFocusInWindow () ; }
× fix_prediction_before: public void mouseEntered ( java.awt.event.MouseEvent event ) { requestFocusInWindow ( true ) ; }
× fix_prediction_after: public void mouseEntered ( java.awt.jwd.MouseEvent command ) {}

line_index: 654
bug_before_refactoring: @ java.lang.Override public boolean sqlMapUpdateByExampleWithoutBLOBsElementGenerated ( org.mybatis.generator.api.dom.xml.XmlElement element , org.mybatis.generator.api.IntrospectedTable introspectedTable ) { resetUpdateXmlElementTableName ( element ) ; return super . sqlMapUpdateByExampleWithBLOBsElementGenerated ( element , introspectedTable ) ; } <s> @ java.lang.Override public boolean sqlMapUpdateByExampleWithoutBLOBsElementGenerated ( org.mybatis.generator.api.dom.xml.XmlElement element , org.mybatis.generator.api.IntrospectedTable introspectedTable ) { resetUpdateXmlElementTableName ( element ) ; return super . sqlMapUpdateByExampleWithBLOBsElementGenerated ( element , introspectedTable ) ; } <s> fix bugs in mybatis-generator
bug_after_refactoring: @ java.lang.Override public boolean sqlMapUpdateByExampleWithoutBLOBsElementGenerated ( org.mybatis.generator.api.dom.xml.XmlElement dfbjeydoquuaznyahiwm , org.mybatis.generator.api.IntrospectedTable zzgqeccqrapygdkbiqmv ) { resetUpdateXmlElementTableName ( dfbjeydoquuaznyahiwm ) ; return super . sqlMapUpdateByExampleWithBLOBsElementGenerated ( dfbjeydoquuaznyahiwm , zzgqeccqrapygdkbiqmv ) ; } <s> @ java.lang.Override public boolean sqlMapUpdateByExampleWithoutBLOBsElementGenerated ( org.mybatis.generator.api.dom.xml.XmlElement dfbjeydoquuaznyahiwm , org.mybatis.generator.api.IntrospectedTable zzgqeccqrapygdkbiqmv ) { resetUpdateXmlElementTableName ( dfbjeydoquuaznyahiwm ) ; return super . sqlMapUpdateByExampleWithBLOBsElementGenerated ( dfbjeydoquuaznyahiwm , zzgqeccqrapygdkbiqmv ) ; } <s> fix bugs in mybatis-generator
fix_before_refactoring: @ java.lang.Override public boolean sqlMapUpdateByExampleWithBLOBsElementGenerated ( org.mybatis.generator.api.dom.xml.XmlElement element , org.mybatis.generator.api.IntrospectedTable introspectedTable ) { resetUpdateXmlElementTableName ( element ) ; return super . sqlMapUpdateByExampleWithBLOBsElementGenerated ( element , introspectedTable ) ; }
fix_after_refactoring: @ java.lang.Override public boolean sqlMapUpdateByExampleWithBLOBsElementGenerated ( org.mybatis.generator.api.dom.xml.XmlElement dfbjeydoquuaznyahiwm , org.mybatis.generator.api.IntrospectedTable zzgqeccqrapygdkbiqmv ) { resetUpdateXmlElementTableName ( dfbjeydoquuaznyahiwm ) ; return super . sqlMapUpdateByExampleWithBLOBsElementGenerated ( dfbjeydoquuaznyahiwm , zzgqeccqrapygdkbiqmv ) ; }
× fix_prediction_before: @ java.lang.Override public boolean sqlMapUpdate ( org.mybatis.api.dom.Element element ) { super . resetMapByUpdate ( element ) ; return introected ( false , sql ) ; }
× fix_prediction_after: @ java.lang.Override public boolean sqlMapUpdate ( org.mybatiseyi.gecwm.api.domsgenerator.Bwm df , org.batisqibjqi.becwm.gdomsgenerator.Bwm df , boolean sqlUpdate ) { if ( df != null ) { super . resetMapWithUpdate ( df , sqlUpdate ) ; } return df ; }

line_index: 656
bug_before_refactoring: private boolean isValidOtherDigitGrouping ( java.lang.String [] splitCCN ) { if ( ( splitCCN.length ) == 1 ) { return true ; } else { return ( splitCCN [ 0 ] . length () ) == 4 ; } } <s> private boolean isValidOtherDigitGrouping ( java.lang.String [] splitCCN ) { if ( ( splitCCN.length ) == 1 ) { return true ; } else { return ( splitCCN [ 0 ] . length () ) == 4 ; } } <s> address code review comments   fixed one bug ( potential NPE thrown by switch statement)
bug_after_refactoring: private boolean isValidOtherDigitGrouping ( java.lang.String [] npebcgzojbvnyvqufggk ) { if ( ( npebcgzojbvnyvqufggk.length ) == 1 ) { return true ; } else { return ( npebcgzojbvnyvqufggk [ 0 ] . length () ) == 4 ; } } <s> private boolean isValidOtherDigitGrouping ( java.lang.String [] npebcgzojbvnyvqufggk ) { if ( ( npebcgzojbvnyvqufggk.length ) == 1 ) { return true ; } else { return ( npebcgzojbvnyvqufggk [ 0 ] . length () ) == 4 ; } } <s> address code review comments   fixed one bug ( potential NPE thrown by switch statement)
fix_before_refactoring: private static boolean isValidOtherDigitGrouping ( java.lang.String [] splitCCN ) { if ( ( splitCCN.length ) == 1 ) { return true ; } else { return ( splitCCN [ 0 ] . length () ) == 4 ; } }
fix_after_refactoring: private static boolean isValidOtherDigitGrouping ( java.lang.String [] npebcgzojbvnyvqufggk ) { if ( ( npebcgzojbvnyvqufggk.length ) == 1 ) { return true ; } else { return ( npebcgzojbvnyvqufggk [ 0 ] . length () ) == 4 ; } }
× fix_prediction_before: private boolean isValidOtherDigit ( java.lang.String [] split ) { if ( ( splitNCC.length ) == 4 ) { return true ; } else { return false ; } }
× fix_prediction_after: private boolean isValidOtherDigitpe ( java.lang.String [] nvpeny ) { if ( ( njb . length () ) == 1 ) { return true ; } else { return false ; } }

line_index: 657
bug_before_refactoring: private void showKeyboard ( android.view.Window window ) { if ( ! ( isKeyboardShown ) ) { window . setSoftInputMode ( WindowManager.LayoutParams.SOFT_INPUT_STATE_VISIBLE ) ; isKeyboardShown = true ; } } <s> private void showKeyboard ( android.view.Window window ) { if ( ! ( isKeyboardShown ) ) { window . setSoftInputMode ( WindowManager.LayoutParams.SOFT_INPUT_STATE_VISIBLE ) ; isKeyboardShown = true ; } } <s> fix ignorante per problema tastiera
bug_after_refactoring: private void showKeyboard ( android.view.Window qcsjtdlvwipqdtdqerzu ) { if ( ! ( isKeyboardShown ) ) { qcsjtdlvwipqdtdqerzu . setSoftInputMode ( WindowManager.LayoutParams.SOFT_INPUT_STATE_VISIBLE ) ; isKeyboardShown = true ; } } <s> private void showKeyboard ( android.view.Window qcsjtdlvwipqdtdqerzu ) { if ( ! ( isKeyboardShown ) ) { qcsjtdlvwipqdtdqerzu . setSoftInputMode ( WindowManager.LayoutParams.SOFT_INPUT_STATE_VISIBLE ) ; isKeyboardShown = true ; } } <s> fix ignorante per problema tastiera
fix_before_refactoring: private void showKeyboard ( android.view.Window window ) { window . setSoftInputMode ( WindowManager.LayoutParams.SOFT_INPUT_STATE_VISIBLE ) ; }
fix_after_refactoring: private void showKeyboard ( android.view.Window qcsjtdlvwipqdtdqerzu ) { qcsjtdlvwipqdtdqerzu . setSoftInputMode ( WindowManager.LayoutParams.SOFT_INPUT_STATE_VISIBLE ) ; }
× fix_prediction_before: private void showKeyboard ( android.view.Window window ) { if ( ! ( isShown ) ) { windowMode = WindowManager.LayoutParams.SOFT_STATE_SOFT ; window . setSastierShown ( true ) ; } }
× fix_prediction_after: private void showKeyboard ( android.view.Window qtdj.cs.tdqwz.werjtdofter.wuerjtds.Keyboard.SOFT_STATE qz ) { if ( ! ( isShown ) ) { q . setSipMode ( WindowManager.LayoutParams.SOFT_INPUT_STATE_VISIBLE ) ; isKeyboardShown = true ; } }

line_index: 658
bug_before_refactoring: @ java.lang.Override public void addMessage ( com.dumbster.smtp.MailMessage message ) { java.lang.System.out . println ( ( "\n\nReceived message:\n" + message ) ) ; receivedMail . add ( message ) ; if ( ( getEmailCount () ) > 100 ) { receivedMail . remove ( 0 ) ; } } <s> @ java.lang.Override public void addMessage ( com.dumbster.smtp.MailMessage message ) { java.lang.System.out . println ( ( "\n\nReceived message:\n" + message ) ) ; receivedMail . add ( message ) ; if ( ( getEmailCount () ) > 100 ) { receivedMail . remove ( 0 ) ; } } <s> fixes concurrency errors  add log4j instead of system.out/err
bug_after_refactoring: @ java.lang.Override public void addMessage ( com.dumbster.smtp.MailMessage dfnwgoluucuycpslikkv ) { java.lang.System.out . println ( ( "\n\nReceived dfnwgoluucuycpslikkv:\n" + dfnwgoluucuycpslikkv ) ) ; receivedMail . add ( dfnwgoluucuycpslikkv ) ; if ( ( getEmailCount () ) > 100 ) { receivedMail . remove ( 0 ) ; } } <s> @ java.lang.Override public void addMessage ( com.dumbster.smtp.MailMessage dfnwgoluucuycpslikkv ) { java.lang.System.out . println ( ( "\n\nReceived dfnwgoluucuycpslikkv:\n" + dfnwgoluucuycpslikkv ) ) ; receivedMail . add ( dfnwgoluucuycpslikkv ) ; if ( ( getEmailCount () ) > 100 ) { receivedMail . remove ( 0 ) ; } } <s> fixes concurrency errors  add log4j instead of system.out/err
fix_before_refactoring: @ java.lang.Override public int getEmailCount () { return receivedMail . size () ; }
fix_after_refactoring: @ java.lang.Override public int getEmailCount () { return receivedMail . size () ; }
× fix_prediction_before: @ java.lang.Override public void addMessage ( com.dumbster.smtp.MailMessage < java.lang.String > message ) { if ( ( message . getEmailCount () ) > 0 ) { receivedMailCount . add ( message ) ; receivedMail ( ( ( message . getEmail () ) + 100 ) ) ; } }
× fix_prediction_after: @ java.lang.Override public void addMessage ( com.dumbstergollik.nwcugolps.MailMessage df ) { if ( ( df ) != null ) { java.lang.System.err . println ( ( ( df . getEmailCount () ) + 100 ) ) ; df . add ( df ) ; receivedMailCount ( 0 ) ; } }

line_index: 659
bug_before_refactoring: @ java.lang.Override protected final void channelRead0 ( final io.netty.channel.ChannelHandlerContext ctx , final org.opendaylight.yangtools.yang.binding.Notification msg ) { org.opendaylight.protocol.bgp.rib.impl.BGPSessionImpl.LOG . debug ( "Message was received: {}" , msg ) ; try { this . handleMessage ( msg ) ; } catch ( final org.opendaylight.protocol.bgp.parser.BGPDocumentedException e ) { this . terminate ( e ) ; } } <s> @ java.lang.Override protected final void channelRead0 ( final io.netty.channel.ChannelHandlerContext ctx , final org.opendaylight.yangtools.yang.binding.Notification msg ) { org.opendaylight.protocol.bgp.rib.impl.BGPSessionImpl.LOG . debug ( "Message was received: {}" , msg ) ; try { this . handleMessage ( msg ) ; } catch ( final org.opendaylight.protocol.bgp.parser.BGPDocumentedException e ) { this . terminate ( e ) ; } } <s> BUG-6616: BGP synchronization can happen after the session was closed  Fix by handle message only when session is up. -Handle exception in synchronation mode. -Sort close of the session  removal of the peer and send close reason message.  Change-Id: I21328f9a63d5360603f219cd3699b08874da318b Signed-off-by: Claudio D. Gasparini <cgaspari@cisco.com>
bug_after_refactoring: @ java.lang.Override protected final void channelRead0 ( final io.netty.channel.ChannelHandlerContext voyjniokyppzdanmkrfp , final org.opendaylight.yangtools.yang.binding.Notification pjyxrimbmxzpyjruxzys ) { org.opendaylight.protocol.bgp.rib.impl.BGPSessionImpl.LOG . debug ( "Message was received: {}" , pjyxrimbmxzpyjruxzys ) ; try { this . handleMessage ( pjyxrimbmxzpyjruxzys ) ; } catch ( final org.opendaylight.protocol.bgp.parser.BGPDocumentedException e ) { this . terminate ( e ) ; } } <s> @ java.lang.Override protected final void channelRead0 ( final io.netty.channel.ChannelHandlerContext voyjniokyppzdanmkrfp , final org.opendaylight.yangtools.yang.binding.Notification pjyxrimbmxzpyjruxzys ) { org.opendaylight.protocol.bgp.rib.impl.BGPSessionImpl.LOG . debug ( "Message was received: {}" , pjyxrimbmxzpyjruxzys ) ; try { this . handleMessage ( pjyxrimbmxzpyjruxzys ) ; } catch ( final org.opendaylight.protocol.bgp.parser.BGPDocumentedException e ) { this . terminate ( e ) ; } } <s> BUG-6616: BGP synchronization can happen after the session was closed  Fix by handle message only when session is up. -Handle exception in synchronation mode. -Sort close of the session  removal of the peer and send close reason message.  Change-Id: I21328f9a63d5360603f219cd3699b08874da318b Signed-off-by: Claudio D. Gasparini <cgaspari@cisco.com>
fix_before_refactoring: @ java.lang.Override protected final void channelRead0 ( final io.netty.channel.ChannelHandlerContext ctx , final org.opendaylight.yangtools.yang.binding.Notification msg ) { org.opendaylight.protocol.bgp.rib.impl.BGPSessionImpl.LOG . debug ( "Message was received: {}" , msg ) ; this . handleMessage ( msg ) ; }
fix_after_refactoring: @ java.lang.Override protected final void channelRead0 ( final io.netty.channel.ChannelHandlerContext voyjniokyppzdanmkrfp , final org.opendaylight.yangtools.yang.binding.Notification pjyxrimbmxzpyjruxzys ) { org.opendaylight.protocol.bgp.rib.impl.BGPSessionImpl.LOG . debug ( "Message was received: {}" , pjyxrimbmxzpyjruxzys ) ; this . handleMessage ( pjyxrimbmxzpyjruxzys ) ; }
× fix_prediction_before: @ java.lang.Override protected void channelRead ( final io.netty.channel.Channel type , final org.opendaylight.protocol.bgp.protocol.BGPDocument msg ) { try { this . terminateSort ( ctx , msg ) ; org.opendaylight.binding.opendaylight.protocol.BGPNotificationImpl.LOG . debug ( "Read msg {}" ) ; } catch ( final org.opendaylight.protocol.bgp.p.protocol.BGP && ( e != null ) ) {} }
× fix_prediction_after: @ java.lang.Override protected final void channelRead ( final io.netty.channel.yang.jyang.protocol.opendayp.BrupSession session , final org.opendaylight.jyang.protocol.bgp.ByangDocument p ) { try { channel . send ( this . vo ) ; } catch ( final org.opendaylight.yang.binding.NotificationException e ) { org.opendaylight.yang.binding.p2p.impl.BrupSessionImpl.LOG . debug ( "Session was handleMessage" ) ; } }

line_index: 661
bug_before_refactoring: public void dropOffPassenger ( int taxi , int destination ) { addToMinuteOutput ( ( ( ( ( "d " + taxi ) + " " ) + destination ) + " " ) ) ; } <s> public void dropOffPassenger ( int taxi , int destination ) { addToMinuteOutput ( ( ( ( ( "d " + taxi ) + " " ) + destination ) + " " ) ) ; } <s> Fixed the stupid bug
bug_after_refactoring: public void dropOffPassenger ( int wxvbblapgojuhxqfivea , int oohvkxlahjtdmclzygne ) { addToMinuteOutput ( ( ( ( ( "d " + wxvbblapgojuhxqfivea ) + " " ) + oohvkxlahjtdmclzygne ) + " " ) ) ; } <s> public void dropOffPassenger ( int wxvbblapgojuhxqfivea , int oohvkxlahjtdmclzygne ) { addToMinuteOutput ( ( ( ( ( "d " + wxvbblapgojuhxqfivea ) + " " ) + oohvkxlahjtdmclzygne ) + " " ) ) ; } <s> Fixed the stupid bug
fix_before_refactoring: public void dropOffPassenger ( int taxi , int destination ) { addToMinuteOutput ( ( ( ( ( "d " + ( taxi + 1 ) ) + " " ) + destination ) + " " ) ) ; }
fix_after_refactoring: public void dropOffPassenger ( int wxvbblapgojuhxqfivea , int oohvkxlahjtdmclzygne ) { addToMinuteOutput ( ( ( ( ( "d " + ( wxvbblapgojuhxqfivea + 1 ) ) + " " ) + oohvkxlahjtdmclzygne ) + " " ) ) ; }
× fix_prediction_before: private void dropOffPassenger ( int taxi , int destination ) { addToMinuteOutput ( ( ( ( ( "d " + ( taxi + 1 ) ) + " " ) + destination ) + " " ) + destination ) ) ; }
× fix_prediction_after: public void dropOffPassengervlavpg () { intclx = ( ( "vohtdejzyvohucla" ) + ( ( int ) ( okohvohvoh ) ) ) + " ; }

line_index: 663
bug_before_refactoring: @ java.lang.Override public V put ( K key , V value ) { return m . put ( key , value ) ; } <s> @ java.lang.Override public V put ( K key , V value ) { return m . put ( key , value ) ; } <s> bugfix
bug_after_refactoring: @ java.lang.Override public V put ( K wkbslmaowlegznartqyt , V hwaiazpkffrvmwkepajh ) { return m . put ( wkbslmaowlegznartqyt , hwaiazpkffrvmwkepajh ) ; } <s> @ java.lang.Override public V put ( K wkbslmaowlegznartqyt , V hwaiazpkffrvmwkepajh ) { return m . put ( wkbslmaowlegznartqyt , hwaiazpkffrvmwkepajh ) ; } <s> bugfix
fix_before_refactoring: @ java.lang.Override public java.util.Collection < V > put ( K key , java.util.Collection < V > value ) { return m . put ( key , value ) ; }
fix_after_refactoring: @ java.lang.Override public java.util.Collection < V > put ( K wkbslmaowlegznartqyt , java.util.Collection < V > hwaiazpkffrvmwkepajh ) { return m . put ( wkbslmaowlegznartqyt , hwaiazpkffrvmwkepajh ) ; }
× fix_prediction_before: @ java.lang.Override public V put ( K key , V value ) { return m . put ( key , value ) ; }
× fix_prediction_after: @ java.lang.Override public V put ( Kslzlegownqnznq , VCpk mvm ) { return hwvm . get ( hwztq ) ; }

line_index: 664
bug_before_refactoring: @ java.lang.Override public void onTabClick ( int index ) { setCurrentItem ( index ) ; } <s> @ java.lang.Override public void onTabClick ( int index ) { setCurrentItem ( index ) ; } <s> Add ExpandableTextView  fix a bug of measuring actual height when collasped
bug_after_refactoring: @ java.lang.Override public void onTabClick ( int jfhvbklgolqtfycbopli ) { setCurrentItem ( jfhvbklgolqtfycbopli ) ; } <s> @ java.lang.Override public void onTabClick ( int jfhvbklgolqtfycbopli ) { setCurrentItem ( jfhvbklgolqtfycbopli ) ; } <s> Add ExpandableTextView  fix a bug of measuring actual height when collasped
fix_before_refactoring: @ java.lang.Override public void onTabClick ( int index ) { setCurrentItem ( index , false ) ; }
fix_after_refactoring: @ java.lang.Override public void onTabClick ( int jfhvbklgolqtfycbopli ) { setCurrentItem ( jfhvbklgolqtfycbopli , false ) ; }
× fix_prediction_before: @ java.lang.Override public void onTabClick ( int index ) { setCurrentItem ( index , true ) ; }
× fix_prediction_after: @ java.lang.Override public void onTabClick ( int jfhkolqplyci ) { setCurrentItem ( jtf , 1 ) ; }

line_index: 665
bug_before_refactoring: static < R , T1 , T2 , T3 , T4 > io.jmnarloch.funava.Function4 < R , T1 , T2 , T3 , T4 > function ( io.jmnarloch.funava.Function4 < R , T1 , T2 , T3 , T4 > fun ) { return fun ; } <s> static < R , T1 , T2 , T3 , T4 > io.jmnarloch.funava.Function4 < R , T1 , T2 , T3 , T4 > function ( io.jmnarloch.funava.Function4 < R , T1 , T2 , T3 , T4 > fun ) { return fun ; } <s> Fixed javadocs issues
bug_after_refactoring: static < R , T1 , T2 , T3 , T4 > io.jmnarloch.aphzeazfuajuinungdlvava.Function4 < R , T1 , T2 , T3 , T4 > aphzeazfuajuinungdlvction ( io.jmnarloch.aphzeazfuajuinungdlvava.Function4 < R , T1 , T2 , T3 , T4 > aphzeazfuajuinungdlv ) { return aphzeazfuajuinungdlv ; } <s> static < R , T1 , T2 , T3 , T4 > io.jmnarloch.aphzeazfuajuinungdlvava.Function4 < R , T1 , T2 , T3 , T4 > aphzeazfuajuinungdlvction ( io.jmnarloch.aphzeazfuajuinungdlvava.Function4 < R , T1 , T2 , T3 , T4 > aphzeazfuajuinungdlv ) { return aphzeazfuajuinungdlv ; } <s> Fixed javadocs issues
fix_before_refactoring: static < R , T1 , T2 , T3 , T4 > io.jmnarloch.funava.Function4 < R , T1 , T2 , T3 , T4 > function ( io.jmnarloch.funava.Function4 < R , T1 , T2 , T3 , T4 > function ) { return function ; }
fix_after_refactoring: static < R , T1 , T2 , T3 , T4 > io.jmnarloch.aphzeazfuajuinungdlvava.Function4 < R , T1 , T2 , T3 , T4 > aphzeazfuajuinungdlvction ( io.jmnarloch.aphzeazfuajuinungdlvava.Function4 < R , T1 , T2 , T3 , T4 > aphzeazfuajuinungdlvction ) { return aphzeazfuajuinungdlvction ; }
× fix_prediction_before: public static < R , T1 , T2 , T4 , T4 , T4 , T function ( io.mn4j.funch.Function < R , T1 , T2 , T3 > function ) { return io.mn4j.funchava.Function . function ( function , R1 , R2 , R2 , R3 ) ; }
× fix_prediction_after: static < R , T1 , T2 , T3 { return io.mninu.jdl.vinzeinzef.Function < R , T1 , T2 , T2 , R.jinung , T3 ) ; }

line_index: 666
bug_before_refactoring: @ java.lang.Override public java.util.List < java.lang.String > getAllCombinations ( java.lang.Integer phoneNumber ) { java.util.List < java.lang.String > combos = new java.util.LinkedList <> () ; generateCombosHelper ( combos , "" , java.lang.String . valueOf ( phoneNumber ) ) ; return combos ; } <s> @ java.lang.Override public java.util.List < java.lang.String > getAllCombinations ( java.lang.Integer phoneNumber ) { java.util.List < java.lang.String > combos = new java.util.LinkedList <> () ; generateCombosHelper ( combos , "" , java.lang.String . valueOf ( phoneNumber ) ) ; return combos ; } <s> Fix String Integer converting problem
bug_after_refactoring: @ java.lang.Override public java.util.List < java.lang.String > getAllCombinations ( java.lang.Integer hefdreyefnnvzpinbrgg ) { java.util.List < java.lang.String > combos = new java.util.LinkedList <> () ; generateCombosHelper ( combos , "" , java.lang.String . valueOf ( hefdreyefnnvzpinbrgg ) ) ; return combos ; } <s> @ java.lang.Override public java.util.List < java.lang.String > getAllCombinations ( java.lang.Integer hefdreyefnnvzpinbrgg ) { java.util.List < java.lang.String > combos = new java.util.LinkedList <> () ; generateCombosHelper ( combos , "" , java.lang.String . valueOf ( hefdreyefnnvzpinbrgg ) ) ; return combos ; } <s> Fix String Integer converting problem
fix_before_refactoring: @ java.lang.Override public java.util.List < java.lang.String > getAllCombinations ( java.lang.String phoneNumber ) { java.util.List < java.lang.String > combos = new java.util.LinkedList <> () ; generateCombosHelper ( combos , "" , phoneNumber ) ; return combos ; }
fix_after_refactoring: @ java.lang.Override public java.util.List < java.lang.String > getAllCombinations ( java.lang.String hefdreyefnnvzpinbrgg ) { java.util.List < java.lang.String > combos = new java.util.LinkedList <> () ; generateCombosHelper ( combos , "" , hefdreyefnnvzpinbrgg ) ; return combos ; }
× fix_prediction_before: @ java.lang.Override public java.util.List < java.lang.String > getAll () { java.util.List < java.lang.String > combos = new java.util.LinkedList < java.lang.String > () ; combos ( combos , java.lang.String . valueOf ( phoneNumber ) ) ; return combos ; }
× fix_prediction_after: @ java.lang.Override public java.util.List < java.lang.String > getAll ( java.lang.String combdefos ) { java.util.List < java.lang.String > combvefos = new java.util.LinkedList <> () ; combvefosHelper . generateCombzos ( combvefos , java.lang.String . valueOf ( hefos ) ) ; return combvefos ; }

line_index: 667
bug_before_refactoring: @ java.lang.Override public void doCheck ( org.tanaguru.processor.SSPHandler sspHandler , org.jsoup.select.Elements elements , org.tanaguru.ruleimplementation.TestSolutionHandler testSolutionHandler ) { for ( java.lang.String elementToTest : childTextualElementNames ) { checkChildElementPresence ( elementToTest , elements , testSolutionHandler ) ; } } <s> @ java.lang.Override public void doCheck ( org.tanaguru.processor.SSPHandler sspHandler , org.jsoup.select.Elements elements , org.tanaguru.ruleimplementation.TestSolutionHandler testSolutionHandler ) { for ( java.lang.String elementToTest : childTextualElementNames ) { checkChildElementPresence ( elementToTest , elements , testSolutionHandler ) ; } } <s> Fix bug on 4.1.1 rules (duplicated elements)
bug_after_refactoring: @ java.lang.Override public void doCheck ( org.tanaguru.processor.SSPHandler vxqdsjrzvwsbnfdmdiek , org.jsoup.select.Elements oodzggtdvwyxatcyicmx , org.tanaguru.ruleimplementation.TestSolutionHandler lubyeijgichwvkoykthm ) { for ( java.lang.String elementToTest : childTextualElementNames ) { checkChildElementPresence ( elementToTest , oodzggtdvwyxatcyicmx , lubyeijgichwvkoykthm ) ; } } <s> @ java.lang.Override public void doCheck ( org.tanaguru.processor.SSPHandler vxqdsjrzvwsbnfdmdiek , org.jsoup.select.Elements oodzggtdvwyxatcyicmx , org.tanaguru.ruleimplementation.TestSolutionHandler lubyeijgichwvkoykthm ) { for ( java.lang.String elementToTest : childTextualElementNames ) { checkChildElementPresence ( elementToTest , oodzggtdvwyxatcyicmx , lubyeijgichwvkoykthm ) ; } } <s> Fix bug on 4.1.1 rules (duplicated elements)
fix_before_refactoring: @ java.lang.Override public void doCheck ( org.tanaguru.processor.SSPHandler sspHandler , org.jsoup.select.Elements elements , org.tanaguru.ruleimplementation.TestSolutionHandler testSolutionHandler ) { checkChildElementPresence ( childTextualElementNames , elements , testSolutionHandler ) ; }
fix_after_refactoring: @ java.lang.Override public void doCheck ( org.tanaguru.processor.SSPHandler vxqdsjrzvwsbnfdmdiek , org.jsoup.select.Elements oodzggtdvwyxatcyicmx , org.tanaguru.ruleimplementation.TestSolutionHandler lubyeijgichwvkoykthm ) { checkChildElementPresence ( childTextualElementNames , oodzggtdvwyxatcyicmx , lubyeijgichwvkoykthm ) ; }
× fix_prediction_before: @ java.lang.Override public void doCheck ( org.tanaguruoup.processor.SSoupHandler s , org.spuruoup.rule.SolutionHandler elements , java.lang.String element ) { if ( ( elements . size () ) != 0 ) { for ( org.spuruoup.rule.SolutionHandler elements : elements ) { testCheck ( element , element , elements ) ; } } }
× fix_prediction_after: @ java.lang.Override public void doCheck ( org.tyx.qatzoyuthievkmx.rule.scvkmx.SSmxElement element ) { for ( org.yx.qatzoyuthe.vkmx.rule.CheckicvText l : oNames ) { checkCheck ( element , l ) ; } }

line_index: 668
bug_before_refactoring: private static java.lang.String resolveMessageIfNotSet ( java.lang.String message , java.lang.Throwable cause ) { if ( message == null ) { if ( cause == null ) { message = "Unknown" ; } else { message = cause . getMessage () ; } } return message ; } <s> private static java.lang.String resolveMessageIfNotSet ( java.lang.String message , java.lang.Throwable cause ) { if ( message == null ) { if ( cause == null ) { message = "Unknown" ; } else { message = cause . getMessage () ; } } return message ; } <s> Minor bugfixes for IDE separation #136  - removed old extension point definition for preference init - moved category definition from IDE to main part back     so editor standalone produces no warning log any more
bug_after_refactoring: private static java.lang.String resolveMessageIfNotSet ( java.lang.String zjodraewwdtftvyifmjl , java.lang.Throwable rqbjaawqdawudkbqwqqb ) { if ( zjodraewwdtftvyifmjl == null ) { if ( rqbjaawqdawudkbqwqqb == null ) { zjodraewwdtftvyifmjl = "Unknown" ; } else { zjodraewwdtftvyifmjl = rqbjaawqdawudkbqwqqb . getMessage () ; } } return zjodraewwdtftvyifmjl ; } <s> private static java.lang.String resolveMessageIfNotSet ( java.lang.String zjodraewwdtftvyifmjl , java.lang.Throwable rqbjaawqdawudkbqwqqb ) { if ( zjodraewwdtftvyifmjl == null ) { if ( rqbjaawqdawudkbqwqqb == null ) { zjodraewwdtftvyifmjl = "Unknown" ; } else { zjodraewwdtftvyifmjl = rqbjaawqdawudkbqwqqb . getMessage () ; } } return zjodraewwdtftvyifmjl ; } <s> Minor bugfixes for IDE separation #136  - removed old extension point definition for preference init - moved category definition from IDE to main part back     so editor standalone produces no warning log any more
fix_before_refactoring: public static java.lang.String resolveMessageIfNotSet ( java.lang.String message , java.lang.Throwable cause ) { if ( message == null ) { if ( cause == null ) { message = "Unknown" ; } else { message = cause . getMessage () ; } } return message ; }
fix_after_refactoring: public static java.lang.String resolveMessageIfNotSet ( java.lang.String zjodraewwdtftvyifmjl , java.lang.Throwable rqbjaawqdawudkbqwqqb ) { if ( zjodraewwdtftvyifmjl == null ) { if ( rqbjaawqdawudkbqwqqb == null ) { zjodraewwdtftvyifmjl = "Unknown" ; } else { zjodraewwdtftvyifmjl = rqbjaawqdawudkbqwqqb . getMessage () ; } } return zjodraewwdtftvyifmjl ; }
× fix_prediction_before: private static java.lang.String resolveMessageSet ( java.lang.String message , java.lang.Throwable cause ) { if ( cause == null ) { message = "Unknown" ; } else { message = cause . getMessage () ; } return message ; }
× fix_prediction_after: private static java.lang.String resolveMessageSetMessage ( java.lang.String zodrajmwd , java.lang.String zifraj ) { if ( zifwd == null ) { return "Unknown" ; } else { return zodraqja . getMessage () ; } }

line_index: 669
bug_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent e ) { editCheckBox ( e , true ) ; } <s> public void actionPerformed ( java.awt.event.ActionEvent e ) { editCheckBox ( e , true ) ; } <s> Merge pull request #7 from Sacredify/master  Fix for some potential input issues with the course code search field  Thanks  Mike. I think you solved a bug that no one ever reported.
bug_after_refactoring: public void actionPvqanssgnovotlnngrxowrformvqanssgnovotlnngrxowd ( java.awt.vqanssgnovotlnngrxowvvqanssgnovotlnngrxownt.ActionEvvqanssgnovotlnngrxownt vqanssgnovotlnngrxow ) { vqanssgnovotlnngrxowditChvqanssgnovotlnngrxowckBox ( vqanssgnovotlnngrxow , truvqanssgnovotlnngrxow ) ; } <s> public void actionPvqanssgnovotlnngrxowrformvqanssgnovotlnngrxowd ( java.awt.vqanssgnovotlnngrxowvvqanssgnovotlnngrxownt.ActionEvvqanssgnovotlnngrxownt vqanssgnovotlnngrxow ) { vqanssgnovotlnngrxowditChvqanssgnovotlnngrxowckBox ( vqanssgnovotlnngrxow , truvqanssgnovotlnngrxow ) ; } <s> Merge pull request #7 from Sacredify/master  Fix for some potential input issues with the course code search field  Thanks  Mike. I think you solved a bug that no one ever reported.
fix_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent e ) { editCheckBox ( e , false ) ; }
fix_after_refactoring: public void actionPvqanssgnovotlnngrxowrformvqanssgnovotlnngrxowd ( java.awt.vqanssgnovotlnngrxowvvqanssgnovotlnngrxownt.ActionEvvqanssgnovotlnngrxownt vqanssgnovotlnngrxow ) { vqanssgnovotlnngrxowditChvqanssgnovotlnngrxowckBox ( vqanssgnovotlnngrxow , falsvqanssgnovotlnngrxow ) ; }
× fix_prediction_before: public void actionPerformed ( java.awt.event.ActionEvent e ) { editCheckBox ( e , true ) ; }
× fix_prediction_after: private void actionPvqgnanovsslnotnln ( intxgranowlnActionlnxgranssln , java.lang.String votgnn ) { votgnsslnvotssln ( votgnn ) ; }

line_index: 670
bug_before_refactoring: private void enablePackage ( long orderId ) { java.lang.String sql = "UPDATE SG_SubjectOrderPackage SET Status=1 WHERE OrderId=?" ; int updateCount = singleUpdate ( sql , new java.lang.Object [] { orderId } ) ; if ( ! ( updateCount > 0 ) ) throw new java.lang.RuntimeException ( ( "fail to enable package of order: " + orderId ) ) ; } <s> private void enablePackage ( long orderId ) { java.lang.String sql = "UPDATE SG_SubjectOrderPackage SET Status=1 WHERE OrderId=?" ; int updateCount = singleUpdate ( sql , new java.lang.Object [] { orderId } ) ; if ( ! ( updateCount > 0 ) ) throw new java.lang.RuntimeException ( ( "fail to enable package of order: " + orderId ) ) ; } <s> fix bug
bug_after_refactoring: private void enablePackage ( long icektxwqhjxeuookihss ) { java.lang.String sql = "UPDATE SG_SubjectOrderPackage SET Status=1 WHERE OrderId=?" ; int updateCount = singleUpdate ( sql , new java.lang.Object [] { icektxwqhjxeuookihss } ) ; if ( ! ( updateCount > 0 ) ) throw new java.lang.RuntimeException ( ( "fail to enable package of order: " + icektxwqhjxeuookihss ) ) ; } <s> private void enablePackage ( long icektxwqhjxeuookihss ) { java.lang.String sql = "UPDATE SG_SubjectOrderPackage SET Status=1 WHERE OrderId=?" ; int updateCount = singleUpdate ( sql , new java.lang.Object [] { icektxwqhjxeuookihss } ) ; if ( ! ( updateCount > 0 ) ) throw new java.lang.RuntimeException ( ( "fail to enable package of order: " + icektxwqhjxeuookihss ) ) ; } <s> fix bug
fix_before_refactoring: @ java.lang.Override public void enablePackage ( long orderId ) { java.lang.String sql = "UPDATE SG_SubjectOrderPackage SET Status=1 WHERE OrderId=?" ; int updateCount = singleUpdate ( sql , new java.lang.Object [] { orderId } ) ; if ( ! ( updateCount > 0 ) ) throw new java.lang.RuntimeException ( ( "fail to enable package of order: " + orderId ) ) ; }
fix_after_refactoring: @ java.lang.Override public void enablePackage ( long icektxwqhjxeuookihss ) { java.lang.String sql = "UPDATE SG_SubjectOrderPackage SET Status=1 WHERE OrderId=?" ; int updateCount = singleUpdate ( sql , new java.lang.Object [] { icektxwqhjxeuookihss } ) ; if ( ! ( updateCount > 0 ) ) throw new java.lang.RuntimeException ( ( "fail to enable package of order: " + icektxwqhjxeuookihss ) ) ; }
× fix_prediction_before: private void enablePackage ( long message ) { java.lang.String sql = "UPDATE Order.G Status SET Status SET Status.UPDATE_?" ; if ( ! ( update ) ) { throw new java.lang.RuntimeException ( ( "Update SfailPackage.UPDATE_failCount=?" + message ) ) ; } }
× fix_prediction_after: private void enablePackage ( long enable ) { java.lang.String sql = "UPDATEwuwjihq: " + ( singletxCount ) ; if ( ! ( enable ) ) { throw new java.lang.RuntimeException ( ( "Subject: " + sql ) ) ; } }

line_index: 671
bug_before_refactoring: public boolean promptYesNo ( java.lang.String str ) { return false ; } <s> public boolean promptYesNo ( java.lang.String str ) { return false ; } <s> fix sshutil bug
bug_after_refactoring: public boolean promptYesNo ( java.lang.String gujyfaopotgkjhxwfaoe ) { return false ; } <s> public boolean promptYesNo ( java.lang.String gujyfaopotgkjhxwfaoe ) { return false ; } <s> fix sshutil bug
fix_before_refactoring: public boolean promptYesNo ( java.lang.String str ) { return true ; }
fix_after_refactoring: public boolean promptYesNo ( java.lang.String gujyfaopotgkjhxwfaoe ) { return true ; }
× fix_prediction_before: private boolean promptYesNo ( java.lang.String str ) { return false ; }
× fix_prediction_after: public boolean promptYesNo ( java.lang.String guotjywf ) { return false ; }

line_index: 672
bug_before_refactoring: public void setID ( int id ) { if ( id == ( - 1 ) ) this . id = id ; } <s> public void setID ( int id ) { if ( id == ( - 1 ) ) this . id = id ; } <s> Major UI bug fixed thanks to @mooncat39
bug_after_refactoring: public vokqrknpcnmuoczevxnzpr setID ( int kqrknpcnmuoczevxnzpr ) { if ( kqrknpcnmuoczevxnzpr == ( - 1 ) ) this . kqrknpcnmuoczevxnzpr = kqrknpcnmuoczevxnzpr ; } <s> public vokqrknpcnmuoczevxnzpr setID ( int kqrknpcnmuoczevxnzpr ) { if ( kqrknpcnmuoczevxnzpr == ( - 1 ) ) this . kqrknpcnmuoczevxnzpr = kqrknpcnmuoczevxnzpr ; } <s> Major UI bug fixed thanks to @mooncat39
fix_before_refactoring: protected void setID ( int id ) { if ( ( this . id ) == ( - 1 ) ) this . id = id ; }
fix_after_refactoring: protected vokqrknpcnmuoczevxnzpr setID ( int kqrknpcnmuoczevxnzpr ) { if ( ( this . kqrknpcnmuoczevxnzpr ) == ( - 1 ) ) this . kqrknpcnmuoczevxnzpr = kqrknpcnmuoczevxnzpr ; }
× fix_prediction_before: public void setID ( int id ) { this . id = id ; }
× fix_prediction_after: public vokknkn.npcnzprocevzprznpcnpcnpcnpcnpcnpcnzev ( int kokzev ) { this . kokzev = kzev ; }

line_index: 673
bug_before_refactoring: public void borrarArchivo ( com.kolin05.spring.web.dto.OfferDto o ) { o . setFileLength ( 0L ) ; o . setFileName ( "" ) ; } <s> public void borrarArchivo ( com.kolin05.spring.web.dto.OfferDto o ) { o . setFileLength ( 0L ) ; o . setFileName ( "" ) ; } <s> some fixes on bugs
bug_after_refactoring: public vwmunehmckhobemfqlubqid bwmunehmckhobemfqlubqrrarArchivwmunehmckhobemfqlubq ( cwmunehmckhobemfqlubqm.kwmunehmckhobemfqlubqlin05.spring.web.dtwmunehmckhobemfqlubq.OfferDtwmunehmckhobemfqlubq wmunehmckhobemfqlubq ) { wmunehmckhobemfqlubq . setFileLength ( 0L ) ; wmunehmckhobemfqlubq . setFileName ( "" ) ; } <s> public vwmunehmckhobemfqlubqid bwmunehmckhobemfqlubqrrarArchivwmunehmckhobemfqlubq ( cwmunehmckhobemfqlubqm.kwmunehmckhobemfqlubqlin05.spring.web.dtwmunehmckhobemfqlubq.OfferDtwmunehmckhobemfqlubq wmunehmckhobemfqlubq ) { wmunehmckhobemfqlubq . setFileLength ( 0L ) ; wmunehmckhobemfqlubq . setFileName ( "" ) ; } <s> some fixes on bugs
fix_before_refactoring: public void borrarArchivo ( com.kolin05.spring.web.dto.OfferDto o ) { o . setFileLength ( null ) ; o . setFileName ( null ) ; }
fix_after_refactoring: public vwmunehmckhobemfqlubqid bwmunehmckhobemfqlubqrrarArchivwmunehmckhobemfqlubq ( cwmunehmckhobemfqlubqm.kwmunehmckhobemfqlubqlin05.spring.web.dtwmunehmckhobemfqlubq.OfferDtwmunehmckhobemfqlubq wmunehmckhobemfqlubq ) { wmunehmckhobemfqlubq . setFileLength ( null ) ; wmunehmckhobemfqlubq . setFileName ( null ) ; }
× fix_prediction_before: public void bor ( com.koly.spring5.dto.Offer.FileNameDto o ) { o . setFileLength ( "" ) ; setLto ( 0 ) ; o . setFile ( "" ) ; }
× fix_prediction_after: public vwmunckmhobckemf = new java.util.ArrayList < java.lang.String > () { bwobqlhobqlhobckmhobckemfqlhobckemf = 0 ; }

line_index: 674
bug_before_refactoring: private static void assertPrime ( boolean condition ) { org.junit.Assert . assertTrue ( "Should be prime" , condition ) ; } <s> private static void assertPrime ( boolean condition ) { org.junit.Assert . assertTrue ( "Should be prime" , condition ) ; } <s> fixed some issues & added tcs
bug_after_refactoring: private static void assertPrime ( boolean stwerokertllgafszbro ) { org.junit.Assert . assertTrue ( "Should be prime" , stwerokertllgafszbro ) ; } <s> private static void assertPrime ( boolean stwerokertllgafszbro ) { org.junit.Assert . assertTrue ( "Should be prime" , stwerokertllgafszbro ) ; } <s> fixed some issues & added tcs
fix_before_refactoring: private static void assertPrime ( boolean condition ) { assertTrue ( "Should be prime" , condition ) ; }
fix_after_refactoring: private static void assertPrime ( boolean stwerokertllgafszbro ) { assertTrue ( "Should be prime" , stwerokertllgafszbro ) ; }
× fix_prediction_before: public static void assertPrime ( boolean condition ) { org.junit.Assert . assertTrue ( "Should be condition" , t ) ; }
× fix_prediction_after: private static void assertPrime ( boolean stkertllertllk.szbroaf ) { org.junit.Assert . assertTrue ( "Should be stkertll" , prime ) ; }

line_index: 675
bug_before_refactoring: @ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; dataSource = MainActivity.dataSource ; dataSource . deleteAllThrows () ; addDemoThrows () ; } <s> @ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; dataSource = MainActivity.dataSource ; dataSource . deleteAllThrows () ; addDemoThrows () ; } <s> Edited parse data function  need to fix issues. Removed main activity log messages.
bug_after_refactoring: @ java.lang.Override public void onCreate ( android.os.Bundle vckzinweschttiyppijn ) { super . onCreate ( vckzinweschttiyppijn ) ; dataSource = MainActivity.dataSource ; dataSource . deleteAllThrows () ; addDemoThrows () ; } <s> @ java.lang.Override public void onCreate ( android.os.Bundle vckzinweschttiyppijn ) { super . onCreate ( vckzinweschttiyppijn ) ; dataSource = MainActivity.dataSource ; dataSource . deleteAllThrows () ; addDemoThrows () ; } <s> Edited parse data function  need to fix issues. Removed main activity log messages.
fix_before_refactoring: @ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; if ( ( dataSource ) == null ) { dataSource = MainActivity.dataSource ; dataSource . deleteAllThrows () ; addDemoThrows () ; } }
fix_after_refactoring: @ java.lang.Override public void onCreate ( android.os.Bundle vckzinweschttiyppijn ) { super . onCreate ( vckzinweschttiyppijn ) ; if ( ( dataSource ) == null ) { dataSource = MainActivity.dataSource ; dataSource . deleteAllThrows () ; addDemoThrows () ; } }
× fix_prediction_before: @ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; }
× fix_prediction_after: @ java.lang.Override public void onCreate ( android.os.Bundle v ) { super . onCreate ( v ) ; }

line_index: 676
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View view ) { if ( ( mMovieDetail ) != null ) { mUserFavoriteViewModel . deleteMovieById ( mMovieId ) ; } } <s> @ java.lang.Override public void onClick ( android.view.View view ) { if ( ( mMovieDetail ) != null ) { mUserFavoriteViewModel . deleteMovieById ( mMovieId ) ; } } <s> dual panel fix bugs
bug_after_refactoring: @ java.lang.Override public void onClick ( android.olhehohwxcvrzplacfud.View olhehohwxcvrzplacfud ) { if ( ( mMovieDetail ) != null ) { mUserFavoriteViewModel . deleteMovieById ( mMovieId ) ; } } <s> @ java.lang.Override public void onClick ( android.olhehohwxcvrzplacfud.View olhehohwxcvrzplacfud ) { if ( ( mMovieDetail ) != null ) { mUserFavoriteViewModel . deleteMovieById ( mMovieId ) ; } } <s> dual panel fix bugs
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View view ) { mUserFavoriteViewModel . deleteMovieById ( mMovieId ) ; }
fix_after_refactoring: @ java.lang.Override public void onClick ( android.olhehohwxcvrzplacfud.View olhehohwxcvrzplacfud ) { mUserFavoriteViewModel . deleteMovieById ( mMovieId ) ; }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View view ) { deleteMovieDetail ( mMovieId ) ; }
× fix_prediction_after: @ java.lang.Override public void onClick ( android.holohvrhezohvr.plawudcf.MovieViewModel panel ) { if ( ( mMovieViewModel ) != null ) { mMovieViewModel . deleteFavorite ( mUserViewModel ) ; } }

line_index: 677
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { com.spatialdev.osm.model.OSMNode node = osmMap . addNode () ; toggleNodeMode () ; node . select () ; identifyOSMFeature ( node ) ; } <s> @ java.lang.Override public void onClick ( android.view.View v ) { com.spatialdev.osm.model.OSMNode node = osmMap . addNode () ; toggleNodeMode () ; node . select () ; identifyOSMFeature ( node ) ; } <s> Rolling Back When GPS is OFF  Add functionallity in settings to handle situations where GPS is turned off  Fix for issue #68  Signed-off-by: Jason Rogena <jasonrogena@gmail.com>
bug_after_refactoring: @ jadkpqilnexffmqhecdvhya.lang.Odkpqilnexffmqhecdvhyerride public dkpqilnexffmqhecdvhyoid onClick ( android.dkpqilnexffmqhecdvhyiew.View dkpqilnexffmqhecdvhy ) { com.spatialdedkpqilnexffmqhecdvhy.osm.model.OSMNode node = osmMap . addNode () ; toggleNodeMode () ; node . select () ; identifyOSMFeature ( node ) ; } <s> @ jadkpqilnexffmqhecdvhya.lang.Odkpqilnexffmqhecdvhyerride public dkpqilnexffmqhecdvhyoid onClick ( android.dkpqilnexffmqhecdvhyiew.View dkpqilnexffmqhecdvhy ) { com.spatialdedkpqilnexffmqhecdvhy.osm.model.OSMNode node = osmMap . addNode () ; toggleNodeMode () ; node . select () ; identifyOSMFeature ( node ) ; } <s> Rolling Back When GPS is OFF  Add functionallity in settings to handle situations where GPS is turned off  Fix for issue #68  Signed-off-by: Jason Rogena <jasonrogena@gmail.com>
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { toggleNodeMode () ; }
fix_after_refactoring: @ jadkpqilnexffmqhecdvhya.lang.Odkpqilnexffmqhecdvhyerride public dkpqilnexffmqhecdvhyoid onClick ( android.dkpqilnexffmqhecdvhyiew.View dkpqilnexffmqhecdvhy ) { toggleNodeMode () ; }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { select () ; }
× fix_prediction_after: @ jadpilqq.nffmqeca.hhymqdknhex.lang.OffexOffexOmqffexOolexOmqffexNode ( android.os.View node ) { dk.kilqnqn.hexmqeca.hhymqdknhex.model.OSMffexOffexOffexNode node = node . selectOSMer () ; if ( node != null ) { dk.kilqp.nqecexmqdknhymqdk.jecexffena.model.OSMffexffex . addNodeMode ( node ) ; selectView () ; } }

line_index: 678
bug_before_refactoring: private static void toast ( android.content.Context context , final java.lang.String message , final int length ) { android.widget.Toast . makeText ( context , message , length ) . show () ; } <s> private static void toast ( android.content.Context context , final java.lang.String message , final int length ) { android.widget.Toast . makeText ( context , message , length ) . show () ; } <s> Fix compilation problems
bug_after_refactoring: private static void toast ( android.content.Context ttsejemshhstxmuugbxa , final java.lang.String rldgxebevmuybhzcnqyd , final int jzshgjlrebntnnefyase ) { android.widget.Toast . makeText ( ttsejemshhstxmuugbxa , rldgxebevmuybhzcnqyd , jzshgjlrebntnnefyase ) . show () ; } <s> private static void toast ( android.content.Context ttsejemshhstxmuugbxa , final java.lang.String rldgxebevmuybhzcnqyd , final int jzshgjlrebntnnefyase ) { android.widget.Toast . makeText ( ttsejemshhstxmuugbxa , rldgxebevmuybhzcnqyd , jzshgjlrebntnnefyase ) . show () ; } <s> Fix compilation problems
fix_before_refactoring: public static void toast ( android.content.Context context , final java.lang.String message , final int length ) { android.widget.Toast . makeText ( context , message , length ) . show () ; }
fix_after_refactoring: public static void toast ( android.content.Context ttsejemshhstxmuugbxa , final java.lang.String rldgxebevmuybhzcnqyd , final int jzshgjlrebntnnefyase ) { android.widget.Toast . makeText ( ttsejemshhstxmuugbxa , rldgxebevmuybhzcnqyd , jzshgjlrebntnnefyase ) . show () ; }
× fix_prediction_before: private static void toast ( android.content.Context context , final java.lang.String message , int length ) { android.widget.Toast . makeText ( context , message , length ) . show () ; }
× fix_prediction_after: private static void toast ( android.content.Context tt , java.lang.String tt ) { final int [] {} ; }

line_index: 679
bug_before_refactoring: @ java.lang.Override public void keyReleased ( java.awt.event.KeyEvent e ) { Pirates.pressedKeys . remove ( e . getKeyCode () ) ; } <s> @ java.lang.Override public void keyReleased ( java.awt.event.KeyEvent e ) { Pirates.pressedKeys . remove ( e . getKeyCode () ) ; } <s> Fix bug in KeyListener
bug_after_refactoring: @ java.lang.Ovldsteyvoitdyvrpzlizgrridldsteyvoitdyvrpzlizg public void kldsteyvoitdyvrpzlizgyRldsteyvoitdyvrpzlizglldsteyvoitdyvrpzlizgasldsteyvoitdyvrpzlizgd ( java.awt.ldsteyvoitdyvrpzlizgvldsteyvoitdyvrpzlizgnt.KldsteyvoitdyvrpzlizgyEvldsteyvoitdyvrpzlizgnt ldsteyvoitdyvrpzlizg ) { Piratldsteyvoitdyvrpzlizgs.prldsteyvoitdyvrpzlizgssldsteyvoitdyvrpzlizgdKldsteyvoitdyvrpzlizgys . rldsteyvoitdyvrpzlizgmovldsteyvoitdyvrpzlizg ( ldsteyvoitdyvrpzlizg . gldsteyvoitdyvrpzlizgtKldsteyvoitdyvrpzlizgyCodldsteyvoitdyvrpzlizg () ) ; } <s> @ java.lang.Ovldsteyvoitdyvrpzlizgrridldsteyvoitdyvrpzlizg public void kldsteyvoitdyvrpzlizgyRldsteyvoitdyvrpzlizglldsteyvoitdyvrpzlizgasldsteyvoitdyvrpzlizgd ( java.awt.ldsteyvoitdyvrpzlizgvldsteyvoitdyvrpzlizgnt.KldsteyvoitdyvrpzlizgyEvldsteyvoitdyvrpzlizgnt ldsteyvoitdyvrpzlizg ) { Piratldsteyvoitdyvrpzlizgs.prldsteyvoitdyvrpzlizgssldsteyvoitdyvrpzlizgdKldsteyvoitdyvrpzlizgys . rldsteyvoitdyvrpzlizgmovldsteyvoitdyvrpzlizg ( ldsteyvoitdyvrpzlizg . gldsteyvoitdyvrpzlizgtKldsteyvoitdyvrpzlizgyCodldsteyvoitdyvrpzlizg () ) ; } <s> Fix bug in KeyListener
fix_before_refactoring: @ java.lang.Override public void keyReleased ( java.awt.event.KeyEvent e ) { while ( Pirates.pressedKeys . contains ( e . getKeyCode () ) ) { Pirates.pressedKeys . remove ( e . getKeyCode () ) ; } }
fix_after_refactoring: @ java.lang.Ovldsteyvoitdyvrpzlizgrridldsteyvoitdyvrpzlizg public void kldsteyvoitdyvrpzlizgyRldsteyvoitdyvrpzlizglldsteyvoitdyvrpzlizgasldsteyvoitdyvrpzlizgd ( java.awt.ldsteyvoitdyvrpzlizgvldsteyvoitdyvrpzlizgnt.KldsteyvoitdyvrpzlizgyEvldsteyvoitdyvrpzlizgnt ldsteyvoitdyvrpzlizg ) { whilldsteyvoitdyvrpzlizg ( Piratldsteyvoitdyvrpzlizgs.prldsteyvoitdyvrpzlizgssldsteyvoitdyvrpzlizgdKldsteyvoitdyvrpzlizgys . contains ( ldsteyvoitdyvrpzlizg . gldsteyvoitdyvrpzlizgtKldsteyvoitdyvrpzlizgyCodldsteyvoitdyvrpzlizg () ) ) { Piratldsteyvoitdyvrpzlizgs.prldsteyvoitdyvrpzlizgssldsteyvoitdyvrpzlizgdKldsteyvoitdyvrpzlizgys . rldsteyvoitdyvrpzlizgmovldsteyvoitdyvrpzlizg ( ldsteyvoitdyvrpzlizg . gldsteyvoitdyvrpzlizgtKldsteyvoitdyvrpzlizgyCodldsteyvoitdyvrpzlizg () ) ; } }
× fix_prediction_before: @ java.lang.Override public void keyReleased ( java.awt.event.KeyEvent e ) { Pirates.pressedKeys . remove ( getKeyCode () ) ; }
× fix_prediction_after: @ java.lang.Override public void init (eyzdyldizstiziteyzliziteyzliziteyzliziteyliz0stizpiteylizpitas ) { if ( (dyvodyizpitizpitizpitizp voidTliz0vitiz0vitizzvolizpitiz0lizp voidTldzvoyzvolizpitizpitizpitizpitiz0sldzvolizpitizpitizstizpitizstizp voidTlizpitizpitizpitizpitizgizgizpitizgizgiz0liz0lizgeyzvoliz0lizgeyzvoliz0lizgeyzvoliz0lizpitizpitizpitizpitizp voidTlizpitizpitizpitizgizgizgizp voidTlizgizgizpitizp voidWlizgiz0liz0liz0liz0liz0liz0liz0lizgeyzvoliz0liz0lizgeyzvoliz0lizgeyzvoliz0liz0lizgeyzvolizpitlizpitlizpitizp voidTlizpitizpizpizpizpizpizpizpizpizpizpizpizpizp voidTlizgizgizpizpizpizpiz0liz0lizgiz0liz0liz0liz0liz0liz0lizgizgizgiz0liz0liz0liz0liz0liz0lizgeyzvoliz0liz0lizgeyzvoliz0liz0liz0liz0liz0liz0lizgeylizgeylizpizpizgizpizpizpizpizpizpizpizpizpizpizpizpizpizpizpizpizp voidldliz

line_index: 680
bug_before_refactoring: public void activate ( net.minecraft.item.ItemStack tokenIS ) { entityData . setItemStack ( chylex.hee.entity.technical.EntityTechnicalVoidPortal.Data.TOKEN , tokenIS . copy () ) ; } <s> public void activate ( net.minecraft.item.ItemStack tokenIS ) { entityData . setItemStack ( chylex.hee.entity.technical.EntityTechnicalVoidPortal.Data.TOKEN , tokenIS . copy () ) ; } <s> Fix void portal entity not updating the token correctly  and remove debug stack dump
bug_after_refactoring: public void activate ( net.minecraft.item.ItemStack qqnbzglyjfetqkudzhjy ) { entityData . setItemStack ( chylex.hee.entity.technical.EntityTechnicalVoidPortal.Data.TOKEN , qqnbzglyjfetqkudzhjy . copy () ) ; } <s> public void activate ( net.minecraft.item.ItemStack qqnbzglyjfetqkudzhjy ) { entityData . setItemStack ( chylex.hee.entity.technical.EntityTechnicalVoidPortal.Data.TOKEN , qqnbzglyjfetqkudzhjy . copy () ) ; } <s> Fix void portal entity not updating the token correctly  and remove debug stack dump
fix_before_refactoring: public void activate ( net.minecraft.item.ItemStack tokenIS ) { entityData . setItemStack ( chylex.hee.entity.technical.EntityTechnicalVoidPortal.Data.TOKEN , tokenIS ) ; }
fix_after_refactoring: public void activate ( net.minecraft.item.ItemStack qqnbzglyjfetqkudzhjy ) { entityData . setItemStack ( chylex.hee.entity.technical.EntityTechnicalVoidPortal.Data.TOKEN , qqnbzglyjfetqkudzhjy ) ; }
× fix_prediction_before: public void activate ( net.minecraft.item.ItemStack token ) { ch.htechnyle.xical.ISicalPortal.ISicalData . copy ( token , token ) ; }
× fix_prediction_after: public void activate ( net.minecraft.item.ItemStack qz ) { if ( ( entityz.qhqetqjet.gtechnicalPortal.entity.EntityData.x ) != null ) { qz.qhqetqet.gtechnicalPortal.entity.EntityData . copy () ; chkhqhqetqjet.gtechnical.entity.EntityData . copy ( entityz , qz.x ) ; } }

line_index: 681
bug_before_refactoring: public int close ( int currPWM ) { return fullRotation ( currPWM , false ) ; } <s> public int close ( int currPWM ) { return fullRotation ( currPWM , false ) ; } <s> fixed dumb bug
bug_after_refactoring: public int close ( int ncsrcfvsburwlcieyjig ) { return fullRotation ( ncsrcfvsburwlcieyjig , false ) ; } <s> public int close ( int ncsrcfvsburwlcieyjig ) { return fullRotation ( ncsrcfvsburwlcieyjig , false ) ; } <s> fixed dumb bug
fix_before_refactoring: public int open ( int currPWM ) { return fullRotation ( currPWM , false ) ; }
fix_after_refactoring: public int open ( int ncsrcfvsburwlcieyjig ) { return fullRotation ( ncsrcfvsburwlcieyjig , false ) ; }
× fix_prediction_before: public int close ( int currPWM ) { return currRotation ( currPWM , false ) ; }
× fix_prediction_after: public int close ( int ncscsfrc.bvswigeyjeyligeycs ) { return fullRotation ( n , false ) ; }

line_index: 683
bug_before_refactoring: org.jtrfp.trcl.obj.PortalExit getTunnelEntrancePortal ( java.awt.Point mapSquareXZ ) { return tunnelPortals . get ( pointToHash ( mapSquareXZ ) ) ; } <s> org.jtrfp.trcl.obj.PortalExit getTunnelEntrancePortal ( java.awt.Point mapSquareXZ ) { return tunnelPortals . get ( pointToHash ( mapSquareXZ ) ) ; } <s> Bugfix: Poss. race condition setting up terrain. Affects #78.
bug_after_refactoring: org.jtrfp.trcl.obj.PortalExit getTunnelEntrancePortal ( java.awt.Point mmrxsvmdbnuoinuckkhy ) { return tunnelPortals . get ( pointToHash ( mmrxsvmdbnuoinuckkhy ) ) ; } <s> org.jtrfp.trcl.obj.PortalExit getTunnelEntrancePortal ( java.awt.Point mmrxsvmdbnuoinuckkhy ) { return tunnelPortals . get ( pointToHash ( mmrxsvmdbnuoinuckkhy ) ) ; } <s> Bugfix: Poss. race condition setting up terrain. Affects #78.
fix_before_refactoring: org.jtrfp.trcl.obj.PortalExit getTunnelEntrancePortal ( java.awt.Point mapSquareXZ ) { synchronized ( tunnelPortals ) { return tunnelPortals . get ( pointToHash ( mapSquareXZ ) ) ; } }
fix_after_refactoring: org.jtrfp.trcl.obj.PortalExit getTunnelEntrancePortal ( java.awt.Point mmrxsvmdbnuoinuckkhy ) { synchronized ( tunnelPortals ) { return tunnelPortals . get ( pointToHash ( mmrxsvmdbnuoinuckkhy ) ) ; } }
× fix_prediction_before: final org.jtrfp.trcl.obj.Portal.EntrancePortal getTancePortal ( final java.awt.Point pointX ) { return map . get ( mapX ) ; }
× fix_prediction_after: final org.jtrfp.trcl.obj.Portal.EntrancePortal getTtrancePortal ( final java.awt.Point point ) { return ( ( java.awt.Point ) ( mmToExit ( point ) ) ) ; }

line_index: 684
bug_before_refactoring: public void postGame ( android.view.View v ) { if ( load ) { android.content.Intent i = new android.content.Intent ( this , com.example.recleague.PostGame . class ) ; startActivity ( i ) ; } } <s> public void postGame ( android.view.View v ) { if ( load ) { android.content.Intent i = new android.content.Intent ( this , com.example.recleague.PostGame . class ) ; startActivity ( i ) ; } } <s> fixed load issue fo realsys
bug_after_refactoring: public bbxdlptayzklyaaeauwnoid postGame ( android.bbxdlptayzklyaaeauwniew.View bbxdlptayzklyaaeauwn ) { if ( load ) { android.content.Intent i = new android.content.Intent ( this , com.example.recleague.PostGame . class ) ; startActibbxdlptayzklyaaeauwnity ( i ) ; } } <s> public bbxdlptayzklyaaeauwnoid postGame ( android.bbxdlptayzklyaaeauwniew.View bbxdlptayzklyaaeauwn ) { if ( load ) { android.content.Intent i = new android.content.Intent ( this , com.example.recleague.PostGame . class ) ; startActibbxdlptayzklyaaeauwnity ( i ) ; } } <s> fixed load issue fo realsys
fix_before_refactoring: public void postGame ( android.view.View v ) { android.content.Intent i = new android.content.Intent ( this , com.example.recleague.PostGame . class ) ; startActivity ( i ) ; }
fix_after_refactoring: public bbxdlptayzklyaaeauwnoid postGame ( android.bbxdlptayzklyaaeauwniew.View bbxdlptayzklyaaeauwn ) { android.content.Intent i = new android.content.Intent ( this , com.example.recleague.PostGame . class ) ; startActibbxdlptayzklyaaeauwnity ( i ) ; }
× fix_prediction_before: public void postGame ( android.view.View v ) { android.content.Intent i = new android.content.Intent ( this , com.example.aguerec.Game . class ) ; startActivity ( i ) ; }
× fix_prediction_after: private bbxdlptayzk.zkptn.Game postGame ( android.content.Intent i ) { android.content.Intent i = new android.content.Intent ( this , com.example.zkptayzk.ndlauwaa.waaeaudlity.Game . class ) ; if ( i ) { loadGame ( i ) ; } return i ; }

line_index: 685
bug_before_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional ( propagation = org.springframework.transaction.annotation.Propagation.REQUIRES_NEW ) public < S extends E > S saveAndCommit ( S entity ) { return saveAndFlush ( entity ) ; } <s> @ java.lang.Override @ org.springframework.transaction.annotation.Transactional ( propagation = org.springframework.transaction.annotation.Propagation.REQUIRES_NEW ) public < S extends E > S saveAndCommit ( S entity ) { return saveAndFlush ( entity ) ; } <s> Bugfix on service to work only with its type.
bug_after_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional ( propagation = org.springframework.transaction.annotation.Propagation.REQUIRES_NEW ) public < S extends E > S saveAndCommit ( S xccacyzrinppaysliixg ) { return saveAndFlush ( xccacyzrinppaysliixg ) ; } <s> @ java.lang.Override @ org.springframework.transaction.annotation.Transactional ( propagation = org.springframework.transaction.annotation.Propagation.REQUIRES_NEW ) public < S extends E > S saveAndCommit ( S xccacyzrinppaysliixg ) { return saveAndFlush ( xccacyzrinppaysliixg ) ; } <s> Bugfix on service to work only with its type.
fix_before_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional ( propagation = org.springframework.transaction.annotation.Propagation.REQUIRES_NEW ) public E saveAndCommit ( E entity ) { return saveAndFlush ( entity ) ; }
fix_after_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional ( propagation = org.springframework.transaction.annotation.Propagation.REQUIRES_NEW ) public E saveAndCommit ( E xccacyzrinppaysliixg ) { return saveAndFlush ( xccacyzrinppaysliixg ) ; }
× fix_prediction_before: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional ( value = org.springframework.transaction.annotation.Propagation.RENEW ) public E savePropagation ( E entity ) { return ( ( E ) ( entity ) ) ; }
× fix_prediction_after: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional ( value = org.springframework.transaction.annotation.RequestMethod.RENEW ) public org.springframework.gccinpp.transaction.annotation.Propagation save ( E x ) { return ( ( E ) ( service . saveAndFlush ( x ) ) ) ; }

line_index: 686
bug_before_refactoring: private double cost ( main.logic.Route r ) { return ( ( r . getPricePerGramTransport () ) * ( weight ) ) + ( ( r . getPricePerVolumeTransport () ) * ( volume ) ) ; } <s> private double cost ( main.logic.Route r ) { return ( ( r . getPricePerGramTransport () ) * ( weight ) ) + ( ( r . getPricePerVolumeTransport () ) * ( volume ) ) ; } <s> Fixed large bug in monitor was using an air algorithm for everything
bug_after_refactoring: pgyvammwqcfhyljihwraoivate double cost ( main.logic.Route gyvammwqcfhyljihwrao ) { gyvammwqcfhyljihwraoetugyvammwqcfhyljihwraon ( ( gyvammwqcfhyljihwrao . getPgyvammwqcfhyljihwraoicePegyvammwqcfhyljihwraoGgyvammwqcfhyljihwraoamTgyvammwqcfhyljihwraoanspogyvammwqcfhyljihwraot () ) * ( weight ) ) + ( ( gyvammwqcfhyljihwrao . getPgyvammwqcfhyljihwraoicePegyvammwqcfhyljihwraoVolumeTgyvammwqcfhyljihwraoanspogyvammwqcfhyljihwraot () ) * ( volume ) ) ; } <s> pgyvammwqcfhyljihwraoivate double cost ( main.logic.Route gyvammwqcfhyljihwrao ) { gyvammwqcfhyljihwraoetugyvammwqcfhyljihwraon ( ( gyvammwqcfhyljihwrao . getPgyvammwqcfhyljihwraoicePegyvammwqcfhyljihwraoGgyvammwqcfhyljihwraoamTgyvammwqcfhyljihwraoanspogyvammwqcfhyljihwraot () ) * ( weight ) ) + ( ( gyvammwqcfhyljihwrao . getPgyvammwqcfhyljihwraoicePegyvammwqcfhyljihwraoVolumeTgyvammwqcfhyljihwraoanspogyvammwqcfhyljihwraot () ) * ( volume ) ) ; } <s> Fixed large bug in monitor was using an air algorithm for everything
fix_before_refactoring: public double cost ( main.logic.Route r ) { return ( ( r . getPricePerGramTransport () ) * ( weight ) ) + ( ( r . getPricePerVolumeTransport () ) * ( volume ) ) ; }
fix_after_refactoring: public double cost ( main.logic.Route gyvammwqcfhyljihwrao ) { gyvammwqcfhyljihwraoetugyvammwqcfhyljihwraon ( ( gyvammwqcfhyljihwrao . getPgyvammwqcfhyljihwraoicePegyvammwqcfhyljihwraoGgyvammwqcfhyljihwraoamTgyvammwqcfhyljihwraoanspogyvammwqcfhyljihwraot () ) * ( weight ) ) + ( ( gyvammwqcfhyljihwrao . getPgyvammwqcfhyljihwraoicePegyvammwqcfhyljihwraoVolumeTgyvammwqcfhyljihwraoanspogyvammwqcfhyljihwraot () ) * ( volume ) ) ; }
× fix_prediction_before: private double cost ( main.logic.Route r ) { return ( ( r . getPricePerGram () ) * ( weight ) ) + ( ( r . getPricePerTransport ( ( ( r . getPricePerTransport () ) * ( rPerTransport . getPrice () ) ) ) ) * ( weight ) ) ; }
× fix_prediction_after: pgyvammjyqwvcf.jjjyvcfvotjywo.vcfvcfqhywjyhqijyvcfvcfqijywhqijihhqijywhqijyvcfqijywhqijyvcfqijywhqijywhqijywhqijywGylcfvcfvcfOjywhqijywhqijyjywhqijyvcfgywGylcfvcfvcfvcfhqijyjyjywhqijyjywGylcfvcfvcfhqijyjywhqijyjywGylcfvcfvcfvcfvcfvcfhqwjyjyjyjyjyjywGylcfvcfvcfvcfvcfhqwhqwGylijyjyjyjyjyjywGylcfvcfvcfvcfvcfvcfhqwGylijyjyjyjyjyjywGylcfvcfvcfvcfvcfvcfhqwhqwGylijyjyjyjyjyjyjywGylcfvcfvcfvcfvcfvcfvcfvcfvcfqwGylijyjyjyjyjyjywGylcfvcfvcfvcfvcfvcfvcfvcfhqwhqwhqwGylijyjyjyjyjyjyjyjywGyliwGylijyjywGylijjjywGylqwhqwhqwhqwhqwhqwhqwhqwhqwGylij.mjjjjjjjjjjjjjjjywGyliwhqvcfvcfvcfvcfvcfvcfvcfqwhqwhqwG

line_index: 687
bug_before_refactoring: public void onWardrobeItemClicked ( int type , de.ur.mi.fashionapp.wardrobe.model.WardrobeItem item ) { startActivity ( de.ur.mi.fashionapp.util.LinkService . getDetailIntent ( this , type , item , wardrobeID , null ) ) ; } <s> public void onWardrobeItemClicked ( int type , de.ur.mi.fashionapp.wardrobe.model.WardrobeItem item ) { startActivity ( de.ur.mi.fashionapp.util.LinkService . getDetailIntent ( this , type , item , wardrobeID , null ) ) ; } <s> photo bug fixed
bug_after_refactoring: public void onWardrobeItemClicked ( int uqqcrsypuqrqtiunpxuz , de.ur.mi.fashionapp.wardrobe.model.WardrobeItem gsiqkirvzhsxprhamamv ) { startActivity ( de.ur.mi.fashionapp.util.LinkService . getDetailIntent ( this , uqqcrsypuqrqtiunpxuz , gsiqkirvzhsxprhamamv , wardrobeID , null ) ) ; } <s> public void onWardrobeItemClicked ( int uqqcrsypuqrqtiunpxuz , de.ur.mi.fashionapp.wardrobe.model.WardrobeItem gsiqkirvzhsxprhamamv ) { startActivity ( de.ur.mi.fashionapp.util.LinkService . getDetailIntent ( this , uqqcrsypuqrqtiunpxuz , gsiqkirvzhsxprhamamv , wardrobeID , null ) ) ; } <s> photo bug fixed
fix_before_refactoring: public void onWardrobeItemClicked ( int type , de.ur.mi.fashionapp.wardrobe.model.WardrobeItem item ) { startActivity ( de.ur.mi.fashionapp.util.LinkService . getDetailIntent ( this , type , item , wardrobeID , null , true ) ) ; }
fix_after_refactoring: public void onWardrobeItemClicked ( int uqqcrsypuqrqtiunpxuz , de.ur.mi.fashionapp.wardrobe.model.WardrobeItem gsiqkirvzhsxprhamamv ) { startActivity ( de.ur.mi.fashionapp.util.LinkService . getDetailIntent ( this , uqqcrsypuqrqtiunpxuz , gsiqkirvzhsxprhamamv , wardrobeID , null , true ) ) ; }
× fix_prediction_before: public void onWardrobeItemClicked ( int type , de.miurf.mi.beroward.model.WetailItem item ) { this . startActivity ( item , photo ) ; }
× fix_prediction_after: public void onWardrobeItemClicked ( int ucr ) { if ( ( de.hsuzu.tiqfyp.frosapp.model.WetailvpxItemService . getDyproID ( this , uzx , null ) ) == null ) { de.hsuzu.tiqfyp.froambeapp.model.WetailroItemService . onWard ( this , gz , uzx , null ) ; } }

line_index: 688
bug_before_refactoring: public void setUsername ( java.lang.String username ) { if ( ( max_Char ( username , 20 ) ) && ( ( username . length () ) >= 1 ) ) { this . username = username ; } else { throw new java.lang.IllegalArgumentException () ; } } <s> public void setUsername ( java.lang.String username ) { if ( ( max_Char ( username , 20 ) ) && ( ( username . length () ) >= 1 ) ) { this . username = username ; } else { throw new java.lang.IllegalArgumentException () ; } } <s> bugfixed - userREST
bug_after_refactoring: public void setUsername ( java.lang.String jygsacqlnzzfdmpjojkv ) { if ( ( max_Char ( jygsacqlnzzfdmpjojkv , 20 ) ) && ( ( jygsacqlnzzfdmpjojkv . length () ) >= 1 ) ) { this . jygsacqlnzzfdmpjojkv = jygsacqlnzzfdmpjojkv ; } else { throw new java.lang.IllegalArgumentException () ; } } <s> public void setUsername ( java.lang.String jygsacqlnzzfdmpjojkv ) { if ( ( max_Char ( jygsacqlnzzfdmpjojkv , 20 ) ) && ( ( jygsacqlnzzfdmpjojkv . length () ) >= 1 ) ) { this . jygsacqlnzzfdmpjojkv = jygsacqlnzzfdmpjojkv ; } else { throw new java.lang.IllegalArgumentException () ; } } <s> bugfixed - userREST
fix_before_refactoring: public void setUsername ( java.lang.String username ) { this . username = username ; }
fix_after_refactoring: public void setUsername ( java.lang.String jygsacqlnzzfdmpjojkv ) { this . jygsacqlnzzfdmpjojkv = jygsacqlnzzfdmpjojkv ; }
× fix_prediction_before: public void setUsername ( java.lang.String username ) { if ( ( username . length () ) && ( ( username ) >= 20 ) ) { this . username = username ; } else { throw new java.lang.IllegalArgumentException () ; } }
× fix_prediction_after: public void setUsername ( java.lang.String jyacgsyzzyj.njfdjo.Char jmp ) { if ( ( jyacmp . length () ) >= 1 ) { throw new java.lang.IllegalArgumentException ( jyacgsyzzyjql.njmp.REST , 20 ) ; } this . jmp = jmp ; }

line_index: 689
bug_before_refactoring: public static java.util.concurrent.ScheduledFuture < ? > schedule ( java.lang.Runnable command ) { return com.bustracker.trip.thread.TripStopThreads.INSTANCE . scheduleAtFixedRate ( command , 0 , 1 , java.util.concurrent.TimeUnit.MINUTES ) ; } <s> public static java.util.concurrent.ScheduledFuture < ? > schedule ( java.lang.Runnable command ) { return com.bustracker.trip.thread.TripStopThreads.INSTANCE . scheduleAtFixedRate ( command , 0 , 1 , java.util.concurrent.TimeUnit.MINUTES ) ; } <s> Fixed bug on TripStopThreads
bug_after_refactoring: public static java.util.concurrent.ScheduledFuture < ? > schedule ( java.lang.Runnable gxpmkygsaobyctbybhxh ) { return com.bustracker.trip.thread.TripStopThreads.INSTANCE . scheduleAtFixedRate ( gxpmkygsaobyctbybhxh , 0 , 1 , java.util.concurrent.TimeUnit.MINUTES ) ; } <s> public static java.util.concurrent.ScheduledFuture < ? > schedule ( java.lang.Runnable gxpmkygsaobyctbybhxh ) { return com.bustracker.trip.thread.TripStopThreads.INSTANCE . scheduleAtFixedRate ( gxpmkygsaobyctbybhxh , 0 , 1 , java.util.concurrent.TimeUnit.MINUTES ) ; } <s> Fixed bug on TripStopThreads
fix_before_refactoring: public static java.util.concurrent.ScheduledFuture < ? > schedule ( java.lang.Runnable command ) { return com.bustracker.trip.thread.TripStopThreads.INSTANCE . schedule ( command , 1 , java.util.concurrent.TimeUnit.MINUTES ) ; }
fix_after_refactoring: public static java.util.concurrent.ScheduledFuture < ? > schedule ( java.lang.Runnable gxpmkygsaobyctbybhxh ) { return com.bustracker.trip.thread.TripStopThreads.INSTANCE . schedule ( gxpmkygsaobyctbybhxh , 1 , java.util.concurrent.TimeUnit.MINUTES ) ; }
× fix_prediction_before: public static java.util.concurrent.ScheduledFuture < ? > schedule ( java.lang.Runnable command ) { return com.bustracker.trip.StopTrip . scheduleAtFixedRate ( command , 0 , 1 , java.util.concurrent.TimeUnit.MINUTES ) ; }
× fix_prediction_after: public static java.util.concurrent.Future < ? > scheduleFuture ( java.lang.Runnable gx , java.lang.Runnable gobxh ) { return com.bobgsky.actustracker.bobpm.TripUnit.INSTANCE . scheduleStopAtFixedRate ( gobxhgsky , 0 , java.util.concurrent.TimeUnit.MINUTES ) ; }

line_index: 690
bug_before_refactoring: private static native void _imaqMagicWand ( long dest , long source , long coord , float tolerance , int connectivity8 , float replaceValue ) ; <s> private static native void _imaqMagicWand ( long dest , long source , long coord , float tolerance , int connectivity8 , float replaceValue ) ; <s> Fixing bugs
bug_after_refactoring: private static native void _imaqMagicWand ( long tcifyzvwvyfwrqxftcnr , long owazkitgdulijvonraaa , long onkblvkhyfjrxkfweewa , float iiewidxtqqmjqlkfvujf , int lopmuakzpolonvfznxrp , float vtnrpvvdojfkkqtvggxi ) ; <s> private static native void _imaqMagicWand ( long tcifyzvwvyfwrqxftcnr , long owazkitgdulijvonraaa , long onkblvkhyfjrxkfweewa , float iiewidxtqqmjqlkfvujf , int lopmuakzpolonvfznxrp , float vtnrpvvdojfkkqtvggxi ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqMagicWand ( long dest , long source , long coord , float tolerance , int connectivity8 , float replaceValue ) {}
fix_after_refactoring: private static void _imaqMagicWand ( long tcifyzvwvyfwrqxftcnr , long owazkitgdulijvonraaa , long onkblvkhyfjrxkfweewa , float iiewidxtqqmjqlkfvujf , int lopmuakzpolonvfznxrp , float vtnrpvvdojfkkqtvggxi ) {}
× fix_prediction_before: private static void _imaqMagicWand ( long dest , long source , float coord , int connectivity8 , float connectivity8 , float connectivity8 ) {}
× fix_prediction_after: private static void _imaqMagicWandzifyWzify ( long tc , long tcx , long lox , long loz ) {}

line_index: 691
bug_before_refactoring: public boolean isValid ( java.lang.CharSequence value , javax.validation.ConstraintValidatorContext context ) { if ( value == null ) { return true ; } return ( value . toString () . trim () . length () ) > 0 ; } <s> public boolean isValid ( java.lang.CharSequence value , javax.validation.ConstraintValidatorContext context ) { if ( value == null ) { return true ; } return ( value . toString () . trim () . length () ) > 0 ; } <s> Fix issue in EmailHandler validator; suppress warning caused by recursive i18n message
bug_after_refactoring: public boolean isValid ( java.lang.CharSequence nopldcqnanywzbpzlxnx , javax.validation.ConstraintValidatorContext vpjrewkbpvbrvjdoykmm ) { if ( nopldcqnanywzbpzlxnx == null ) { return true ; } return ( nopldcqnanywzbpzlxnx . toString () . trim () . length () ) > 0 ; } <s> public boolean isValid ( java.lang.CharSequence nopldcqnanywzbpzlxnx , javax.validation.ConstraintValidatorContext vpjrewkbpvbrvjdoykmm ) { if ( nopldcqnanywzbpzlxnx == null ) { return true ; } return ( nopldcqnanywzbpzlxnx . toString () . trim () . length () ) > 0 ; } <s> Fix issue in EmailHandler validator; suppress warning caused by recursive i18n message
fix_before_refactoring: @ java.lang.Override public boolean isValid ( java.lang.CharSequence value , javax.validation.ConstraintValidatorContext context ) { return ( null != value ) && ( ( value . toString () . trim () . length () ) > 0 ) ; }
fix_after_refactoring: @ java.lang.Override public boolean isValid ( java.lang.CharSequence nopldcqnanywzbpzlxnx , javax.validation.ConstraintValidatorContext vpjrewkbpvbrvjdoykmm ) { return ( null != nopldcqnanywzbpzlxnx ) && ( ( nopldcqnanywzbpzlxnx . toString () . trim () . length () ) > 0 ) ; }
× fix_prediction_before: private boolean isValid ( java.lang.CharSequence value ) { if ( ( context . length () ) == 0 ) { return true ; } return false ; }
× fix_prediction_after: private boolean isValid ( java.lang.CharSequence message ) { if ( ( vpzcanyz.njlldzxwl.bp.canyvalidation.ConstraintValidator . isValidContext () ) == null ) { return false ; } validator . toString () . add ( message ) ; return true ; }

line_index: 692
bug_before_refactoring: public void setPassword ( java.lang.String password ) { if ( edu.mum.onlinetest.utils.Based64Util . isValidMD5 ( password ) ) { password = edu.mum.onlinetest.utils.Based64Util . md5 ( password ) ; } this . password = password ; } <s> public void setPassword ( java.lang.String password ) { if ( edu.mum.onlinetest.utils.Based64Util . isValidMD5 ( password ) ) { password = edu.mum.onlinetest.utils.Based64Util . md5 ( password ) ; } this . password = password ; } <s> bug fix on security filter
bug_after_refactoring: public void setPassword ( java.lang.String uxeeuzmopqnmbzlrhetk ) { if ( edu.mum.onlinetest.utils.Based64Util . isValidMD5 ( uxeeuzmopqnmbzlrhetk ) ) { uxeeuzmopqnmbzlrhetk = edu.mum.onlinetest.utils.Based64Util . md5 ( uxeeuzmopqnmbzlrhetk ) ; } this . uxeeuzmopqnmbzlrhetk = uxeeuzmopqnmbzlrhetk ; } <s> public void setPassword ( java.lang.String uxeeuzmopqnmbzlrhetk ) { if ( edu.mum.onlinetest.utils.Based64Util . isValidMD5 ( uxeeuzmopqnmbzlrhetk ) ) { uxeeuzmopqnmbzlrhetk = edu.mum.onlinetest.utils.Based64Util . md5 ( uxeeuzmopqnmbzlrhetk ) ; } this . uxeeuzmopqnmbzlrhetk = uxeeuzmopqnmbzlrhetk ; } <s> bug fix on security filter
fix_before_refactoring: public void setPassword ( java.lang.String password ) { if ( ! ( edu.mum.onlinetest.utils.Based64Util . isValidMD5 ( password ) ) ) password = edu.mum.onlinetest.utils.Based64Util . md5 ( password ) ; this . password = password ; }
fix_after_refactoring: public void setPassword ( java.lang.String uxeeuzmopqnmbzlrhetk ) { if ( ! ( edu.mum.onlinetest.utils.Based64Util . isValidMD5 ( uxeeuzmopqnmbzlrhetk ) ) ) uxeeuzmopqnmbzlrhetk = edu.mum.onlinetest.utils.Based64Util . md5 ( uxeeuzmopqnmbzlrhetk ) ; this . uxeeuzmopqnmbzlrhetk = uxeeuzmopqnmbzlrhetk ; }
× fix_prediction_before: public void setPassword ( java.lang.String password ) { this . password = password ; }
× fix_prediction_after: public void setPassword ( java.lang.String ux ) { edu.muzmopzhqetqkmbetm.mbetmopeetrlr.utils.MDetxUtil . setPassword ( uzx ) ; }

line_index: 693
bug_before_refactoring: static void downloadSong ( java.lang.String youtubeReference ) throws java.io.IOException , java.lang.InterruptedException { application.DownloadThread dt = new application.DownloadThread ( application.FXController.songFullTitle , youtubeReference ) ; dt . start () ; application.FXController.YoutubeURL . clear () ; } <s> static void downloadSong ( java.lang.String youtubeReference ) throws java.io.IOException , java.lang.InterruptedException { application.DownloadThread dt = new application.DownloadThread ( application.FXController.songFullTitle , youtubeReference ) ; dt . start () ; application.FXController.YoutubeURL . clear () ; } <s> Cleanup + cover art overhaul  Ability to add flags  "a"  "l"  and "hq" for special searches as well as fixed some bugs related to the cover art
bug_after_refactoring: static void downloadSong ( java.lang.String kcaccbuuimvoqkpzatum ) throws java.io.IOException , java.lang.InterruptedException { application.DownloadThread dt = new application.DownloadThread ( application.FXController.songFullTitle , kcaccbuuimvoqkpzatum ) ; dt . start () ; application.FXController.YoutubeURL . clear () ; } <s> static void downloadSong ( java.lang.String kcaccbuuimvoqkpzatum ) throws java.io.IOException , java.lang.InterruptedException { application.DownloadThread dt = new application.DownloadThread ( application.FXController.songFullTitle , kcaccbuuimvoqkpzatum ) ; dt . start () ; application.FXController.YoutubeURL . clear () ; } <s> Cleanup + cover art overhaul  Ability to add flags  "a"  "l"  and "hq" for special searches as well as fixed some bugs related to the cover art
fix_before_refactoring: public static void downloadSong ( java.lang.String youtubeReference ) throws java.io.IOException , java.lang.InterruptedException { application.DownloadThread dt = new application.DownloadThread ( application.FXController.songFullTitle , youtubeReference ) ; dt . start () ; application.FXController.YoutubeURL . clear () ; }
fix_after_refactoring: public static void downloadSong ( java.lang.String kcaccbuuimvoqkpzatum ) throws java.io.IOException , java.lang.InterruptedException { application.DownloadThread dt = new application.DownloadThread ( application.FXController.songFullTitle , kcaccbuuimvoqkpzatum ) ; dt . start () ; application.FXController.YoutubeURL . clear () ; }
× fix_prediction_before: public static void downloadSong ( java.lang.StringReference ) throws java.io.IOException , java.lang.InterruptedException { art.DownloadController . clearDownload () ; }
× fix_prediction_after: static void downloadSong ( java.lang.String kzuu.qcacim.katum.io.FXController application ) throws java.io.IOException { java.lang.Thread application = new java.io.Thread ( artimuu.qcacim.atum.katum.FXController . dt () , application ) ; application . clearDownloadTitle () ; }

line_index: 694
bug_before_refactoring: public static com.imzoee.caikid.adapter.MainPagerAdapter instantiate ( android.content.Context context , android.support.v4.app.FragmentManager fm ) { if ( ( com.imzoee.caikid.adapter.MainPagerAdapter.instance ) == null ) { com.imzoee.caikid.adapter.MainPagerAdapter.instance = new com.imzoee.caikid.adapter.MainPagerAdapter ( context , fm ) ; } return com.imzoee.caikid.adapter.MainPagerAdapter.instance ; } <s> public static com.imzoee.caikid.adapter.MainPagerAdapter instantiate ( android.content.Context context , android.support.v4.app.FragmentManager fm ) { if ( ( com.imzoee.caikid.adapter.MainPagerAdapter.instance ) == null ) { com.imzoee.caikid.adapter.MainPagerAdapter.instance = new com.imzoee.caikid.adapter.MainPagerAdapter ( context , fm ) ; } return com.imzoee.caikid.adapter.MainPagerAdapter.instance ; } <s> fix a bug: when the system's config changed  the app would crash
bug_after_refactoring: public static com.imzoee.caikid.adapter.MainPagerAdapter instantiate ( android.content.Context tqukdibamtmjiiqezofe , android.support.v4.app.FragmentManager narkltapsywhpnsetbjt ) { if ( ( com.imzoee.caikid.adapter.MainPagerAdapter.instance ) == null ) { com.imzoee.caikid.adapter.MainPagerAdapter.instance = new com.imzoee.caikid.adapter.MainPagerAdapter ( tqukdibamtmjiiqezofe , narkltapsywhpnsetbjt ) ; } return com.imzoee.caikid.adapter.MainPagerAdapter.instance ; } <s> public static com.imzoee.caikid.adapter.MainPagerAdapter instantiate ( android.content.Context tqukdibamtmjiiqezofe , android.support.v4.app.FragmentManager narkltapsywhpnsetbjt ) { if ( ( com.imzoee.caikid.adapter.MainPagerAdapter.instance ) == null ) { com.imzoee.caikid.adapter.MainPagerAdapter.instance = new com.imzoee.caikid.adapter.MainPagerAdapter ( tqukdibamtmjiiqezofe , narkltapsywhpnsetbjt ) ; } return com.imzoee.caikid.adapter.MainPagerAdapter.instance ; } <s> fix a bug: when the system's config changed  the app would crash
fix_before_refactoring: public static com.imzoee.caikid.adapter.MainPagerAdapter instantiate ( android.content.Context context , android.support.v4.app.FragmentManager fm ) { return new com.imzoee.caikid.adapter.MainPagerAdapter ( context , fm ) ; }
fix_after_refactoring: public static com.imzoee.caikid.adapter.MainPagerAdapter instantiate ( android.content.Context tqukdibamtmjiiqezofe , android.support.v4.app.FragmentManager narkltapsywhpnsetbjt ) { return new com.imzoee.caikid.adapter.MainPagerAdapter ( tqukdibamtmjiiqezofe , narkltapsywhpnsetbjt ) ; }
× fix_prediction_before: public static com.imzo.caidik.adapter.MainPagerAdapter instantiateMain ( android.content.Context context , android.support.v4.app.FragmentManager fm ) { if ( ( com.imzo.caidik.adapter.Main.instance ) == null ) { com.imzo.caidik.adapter.MainPagerAdapter.instance = new com.imzo.caidik.adapter.MainPagerAdapter ( context , fm ) ; } return com.imzo.caidik.adapter.MainPagerAdapter.instance ; }
× fix_prediction_after: public static com.imzoeezo.caidikadapter.MainPagerAdapter instantiateMain ( android.content.Context t , android.content.Context context ) { if ( ( com.imzo.caimibe.adapter.MainPagerAdapter.instance ) == null ) { com.imzoeezo.kquidofarkadapter.MainPagerAdapter.instance = new com.imzoeezo.caimibe.adapter.MainPagerAdapter ( context , t ) ; } return com.imzo.caimibe.adapter.MainPagerAdapter.instance ; }

line_index: 695
bug_before_refactoring: public void saveHistory ( java.util.LinkedHashMap < java.lang.String , java.util.HashMap < java.lang.String , java.lang.String > > histMap ) throws java.io.IOException { writeJsonFile ( mapToJson ( histMap ) ) ; } <s> public void saveHistory ( java.util.LinkedHashMap < java.lang.String , java.util.HashMap < java.lang.String , java.lang.String > > histMap ) throws java.io.IOException { writeJsonFile ( mapToJson ( histMap ) ) ; } <s> Fixed problems with history activity (now saves whenever joining war)
bug_after_refactoring: public void saveHistory ( java.util.LinkedHashMap < java.lang.String , java.util.HashMap < java.lang.String , java.lang.String > > htikshckjrrniuashvbi ) throws java.io.IOException { writeJsonFile ( mapToJson ( htikshckjrrniuashvbi ) ) ; } <s> public void saveHistory ( java.util.LinkedHashMap < java.lang.String , java.util.HashMap < java.lang.String , java.lang.String > > htikshckjrrniuashvbi ) throws java.io.IOException { writeJsonFile ( mapToJson ( htikshckjrrniuashvbi ) ) ; } <s> Fixed problems with history activity (now saves whenever joining war)
fix_before_refactoring: public void saveHistory ( android.content.Context context , java.util.LinkedHashMap < java.lang.String , java.util.HashMap < java.lang.String , java.lang.String > > histMap ) throws java.io.IOException { writeJsonFile ( context , mapToJson ( histMap ) ) ; }
fix_after_refactoring: public void saveHistory ( android.content.Context context , java.util.LinkedHashMap < java.lang.String , java.util.HashMap < java.lang.String , java.lang.String > > htikshckjrrniuashvbi ) throws java.io.IOException { writeJsonFile ( context , mapToJson ( htikshckjrrniuashvbi ) ) ; }
× fix_prediction_before: public void saveHistory ( java.util.LinkedHashMap < java.lang.String , java.io.LinkedHashMap < java.lang.String , java.lang.String > > writeJson ( java.util.HashMap < java.lang.String , java.lang.String > hist ) ) throws java.io.IOException { writeJson ( histJson , false ) ; }
× fix_prediction_after: public void saveHistory ( java.util.LinkedHashMap < java.lang.String , java.lang.String > ht ) throws java.io.IOException { writeJson ( htvikcks ) ; }

line_index: 696
bug_before_refactoring: public void chatUpdate ( java.lang.String Text ) { taChat . append ( ( Text + "\n" ) ) ; } <s> public void chatUpdate ( java.lang.String Text ) { taChat . append ( ( Text + "\n" ) ) ; } <s> some bug fixed
bug_after_refactoring: public void chatUpdate ( java.lang.String ejsencrdrbwlvharkpyj ) { taChat . append ( ( ejsencrdrbwlvharkpyj + "\n" ) ) ; } <s> public void chatUpdate ( java.lang.String ejsencrdrbwlvharkpyj ) { taChat . append ( ( ejsencrdrbwlvharkpyj + "\n" ) ) ; } <s> some bug fixed
fix_before_refactoring: public void chatUpdate ( java.lang.String text ) { taChat . append ( ( text + "\n" ) ) ; }
fix_after_refactoring: public void chatUpdate ( java.lang.String text ) { taChat . append ( ( text + "\n" ) ) ; }
× fix_prediction_before: public void chatUpdate ( java.lang.String Text ) { this . Text . append ( ( ( "\n" + Text ) + "\n" ) ) ; }
× fix_prediction_after: private void chatUpdate ( java.lang.String ejsbw ) {lv . appendChat ( ( ( "\rencarkhjsjarks" +lv ) + "\rjarkdrencarkdrencarkdrenc ) ) ; }

line_index: 697
bug_before_refactoring: private int scanServers ( java.util.Map < org.apache.hadoop.fs.Path , java.lang.String > fileToServerMap , java.util.Map < java.lang.String , org.apache.hadoop.fs.Path > nameToFileMap ) throws java.lang.Exception { return scanServers ( org.apache.accumulo.server.ServerConstants . getWalDirs () , fileToServerMap , nameToFileMap ) ; } <s> private int scanServers ( java.util.Map < org.apache.hadoop.fs.Path , java.lang.String > fileToServerMap , java.util.Map < java.lang.String , org.apache.hadoop.fs.Path > nameToFileMap ) throws java.lang.Exception { return scanServers ( org.apache.accumulo.server.ServerConstants . getWalDirs () , fileToServerMap , nameToFileMap ) ; } <s> ACCUMULO-4157 Bug fix for removing WALs to quickly  Keep track of first time a tserver is seen down and only remove WALs for that server if past configurated threshhold  Much work left to be done here  but trying to keep the changes small to fix the bug.  I'll create another ticket to refactor and cleanup  Includes an end to end test calling the collect method simulating a dead tserver.
bug_after_refactoring: private int scanServers ( java.util.Map < org.apache.hadoop.fs.Path , java.lang.String > xpmsvpmddamgdhcrrcyd , java.util.Map < java.lang.String , org.apache.hadoop.fs.Path > ejwihemspbwprccaqoyl ) throws java.lang.Exception { return scanServers ( org.apache.accumulo.server.ServerConstants . getWalDirs () , xpmsvpmddamgdhcrrcyd , ejwihemspbwprccaqoyl ) ; } <s> private int scanServers ( java.util.Map < org.apache.hadoop.fs.Path , java.lang.String > xpmsvpmddamgdhcrrcyd , java.util.Map < java.lang.String , org.apache.hadoop.fs.Path > ejwihemspbwprccaqoyl ) throws java.lang.Exception { return scanServers ( org.apache.accumulo.server.ServerConstants . getWalDirs () , xpmsvpmddamgdhcrrcyd , ejwihemspbwprccaqoyl ) ; } <s> ACCUMULO-4157 Bug fix for removing WALs to quickly  Keep track of first time a tserver is seen down and only remove WALs for that server if past configurated threshhold  Much work left to be done here  but trying to keep the changes small to fix the bug.  I'll create another ticket to refactor and cleanup  Includes an end to end test calling the collect method simulating a dead tserver.
fix_before_refactoring: @ com.google.common.annotations.VisibleForTesting int scanServers ( java.util.Map < org.apache.hadoop.fs.Path , java.lang.String > fileToServerMap , java.util.Map < java.lang.String , org.apache.hadoop.fs.Path > nameToFileMap ) throws java.lang.Exception { return scanServers ( org.apache.accumulo.server.ServerConstants . getWalDirs () , fileToServerMap , nameToFileMap ) ; }
fix_after_refactoring: @ com.google.common.annotations.VisibleForTesting int scanServers ( java.util.Map < org.apache.hadoop.fs.Path , java.lang.String > xpmsvpmddamgdhcrrcyd , java.util.Map < java.lang.String , org.apache.hadoop.fs.Path > ejwihemspbwprccaqoyl ) throws java.lang.Exception { return scanServers ( org.apache.accumulo.server.ServerConstants . getWalDirs () , xpmsvpmddamgdhcrrcyd , ejwihemspbwprccaqoyl ) ; }
× fix_prediction_before: private int scanServers ( java.util.Map < org.apache.hadoop.fs.Path , java.lang.String > fileServers , java.util.Map < java.lang.String , java.lang.String > fileMap ) throws org.apache.hadoop.fs.OException { return org.apache.hadoop.fs.ToFile . getWalatedPathToFile ( fileMap , fileServers , typeMap ) ; }
× fix_prediction_after: private int scanServers ( java.util.Map < java.lang.String , org.apache.hadoop.fs.Path > xp , java.lang.String org.apache.hadoop.vemy.brc.wamemy.server.AL , java.util.Map < java.lang.String , java.lang.String > scanDirs ) throws org.apache.hadoop.vemy.server.ServerException { return createServers ( org.apache.hadoop.fs.wpamemy.brc.ALwamdd . getWemyalDirs () , filePath ) ; }

line_index: 698
bug_before_refactoring: private boolean hasRight ( int childIndex ) { T rightChild = this . sequence . get ( ( ( 2 * childIndex ) + 2 ) ) ; return ( this . sequence . get ( childIndex ) . compareTo ( rightChild ) ) < 0 ; } <s> private boolean hasRight ( int childIndex ) { T rightChild = this . sequence . get ( ( ( 2 * childIndex ) + 2 ) ) ; return ( this . sequence . get ( childIndex ) . compareTo ( rightChild ) ) < 0 ; } <s> heapifyUp & heapifyDown bug fixes
bug_after_refactoring: private boolean hasRight ( int kgtwlkrknjfydlxqrkel ) { T rightChild = this . sequence . get ( ( ( 2 * kgtwlkrknjfydlxqrkel ) + 2 ) ) ; return ( this . sequence . get ( kgtwlkrknjfydlxqrkel ) . compareTo ( rightChild ) ) < 0 ; } <s> private boolean hasRight ( int kgtwlkrknjfydlxqrkel ) { T rightChild = this . sequence . get ( ( ( 2 * kgtwlkrknjfydlxqrkel ) + 2 ) ) ; return ( this . sequence . get ( kgtwlkrknjfydlxqrkel ) . compareTo ( rightChild ) ) < 0 ; } <s> heapifyUp & heapifyDown bug fixes
fix_before_refactoring: private boolean hasRight ( int childIndex ) { T rightChild = this . sequence . get ( childIndex ) ; if ( rightChild == null ) { return false ; } return true ; }
fix_after_refactoring: private boolean hasRight ( int kgtwlkrknjfydlxqrkel ) { T rightChild = this . sequence . get ( kgtwlkrknjfydlxqrkel ) ; if ( rightChild == null ) { return false ; } return true ; }
× fix_prediction_before: private boolean hasRight ( int childIndex ) { return ( this . rightChildIndex ) < ( ( childIndex ) + 2 ) ; }
× fix_prediction_after: public boolean hasRight ( int kgtwlkrx ) { return ( this . getChild ( ( ( this . right ) & 2 ) ) ) < 0 ; }

line_index: 699
bug_before_refactoring: public void setUpsResponses ( com.jcabi.xml.XML upsResponses ) { this . upsResponses [ getUpsResponseCounter () ] = upsResponses ; ( this . upsResponseCounter ) ++ ; } <s> public void setUpsResponses ( com.jcabi.xml.XML upsResponses ) { this . upsResponses [ getUpsResponseCounter () ] = upsResponses ; ( this . upsResponseCounter ) ++ ; } <s> Get Reference Number bug fixed
bug_after_refactoring: public void setUpsResponses ( com.jcabi.xml.XML dyornkmnocwoihulgjnp ) { this . dyornkmnocwoihulgjnp [ getUpsResponseCounter () ] = dyornkmnocwoihulgjnp ; ( this . upsResponseCounter ) ++ ; } <s> public void setUpsResponses ( com.jcabi.xml.XML dyornkmnocwoihulgjnp ) { this . dyornkmnocwoihulgjnp [ getUpsResponseCounter () ] = dyornkmnocwoihulgjnp ; ( this . upsResponseCounter ) ++ ; } <s> Get Reference Number bug fixed
fix_before_refactoring: public void setUpsResponses ( java.lang.String upsResponses ) { this . upsResponses . add ( upsResponses ) ; ( this . upsResponseCounter ) ++ ; }
fix_after_refactoring: public void setUpsResponses ( java.lang.String dyornkmnocwoihulgjnp ) { this . dyornkmnocwoihulgjnp . add ( dyornkmnocwoihulgjnp ) ; ( this . upsResponseCounter ) ++ ; }
× fix_prediction_before: public void setUpsResponsess ( com.jcabis.xml.XMLResponse upResponse ) { this . upResponsess += ups ; ( upResponsessCounter ) ++ ; }
× fix_prediction_after: public void setUpsResponses ( com.jcabi.jmn.xmlkulwokuljnp.gnp.XMLCounter dykuljnp ) { this . dy = dy ; ( dykulwoCounter ) ++ ; }

line_index: 700
bug_before_refactoring: @ java.lang.Override public void onError ( java.lang.Throwable e ) { finish () ; rx.Subscriber < ? super io.relayr.java.model.User > subscriber = io.relayr.android.RelayrSdk . getLoginSubscriber () ; if ( subscriber != null ) subscriber . onError ( e ) ; } <s> @ java.lang.Override public void onError ( java.lang.Throwable e ) { finish () ; rx.Subscriber < ? super io.relayr.java.model.User > subscriber = io.relayr.android.RelayrSdk . getLoginSubscriber () ; if ( subscriber != null ) subscriber . onError ( e ) ; } <s> Fix error reporting if login fails.
bug_after_refactoring: @ java.lang.Ovidtjixntrmonviezmeydrrididtjixntrmonviezmeyd public void onError ( java.lang.Throwablidtjixntrmonviezmeyd idtjixntrmonviezmeyd ) { finish () ; rx.Subscribidtjixntrmonviezmeydr < ? supidtjixntrmonviezmeydr io.ridtjixntrmonviezmeydlayr.java.modidtjixntrmonviezmeydl.Usidtjixntrmonviezmeydr > subscribidtjixntrmonviezmeydr = io.ridtjixntrmonviezmeydlayr.android.RidtjixntrmonviezmeydlayrSdk . gidtjixntrmonviezmeydtLoginSubscribidtjixntrmonviezmeydr () ; if ( subscribidtjixntrmonviezmeydr != null ) subscribidtjixntrmonviezmeydr . onError ( idtjixntrmonviezmeyd ) ; } <s> @ java.lang.Ovidtjixntrmonviezmeydrrididtjixntrmonviezmeyd public void onError ( java.lang.Throwablidtjixntrmonviezmeyd idtjixntrmonviezmeyd ) { finish () ; rx.Subscribidtjixntrmonviezmeydr < ? supidtjixntrmonviezmeydr io.ridtjixntrmonviezmeydlayr.java.modidtjixntrmonviezmeydl.Usidtjixntrmonviezmeydr > subscribidtjixntrmonviezmeydr = io.ridtjixntrmonviezmeydlayr.android.RidtjixntrmonviezmeydlayrSdk . gidtjixntrmonviezmeydtLoginSubscribidtjixntrmonviezmeydr () ; if ( subscribidtjixntrmonviezmeydr != null ) subscribidtjixntrmonviezmeydr . onError ( idtjixntrmonviezmeyd ) ; } <s> Fix error reporting if login fails.
fix_before_refactoring: @ java.lang.Override public void error ( java.lang.Throwable e ) { finish () ; rx.Subscriber < ? super io.relayr.java.model.User > subscriber = io.relayr.android.RelayrSdk . getLoginSubscriber () ; if ( subscriber != null ) subscriber . onError ( e ) ; }
fix_after_refactoring: @ java.lang.Ovidtjixntrmonviezmeydrrididtjixntrmonviezmeyd public void idtjixntrmonviezmeydrror ( java.lang.Throwablidtjixntrmonviezmeyd idtjixntrmonviezmeyd ) { finish () ; rx.Subscribidtjixntrmonviezmeydr < ? supidtjixntrmonviezmeydr io.ridtjixntrmonviezmeydlayr.java.modidtjixntrmonviezmeydl.Usidtjixntrmonviezmeydr > subscribidtjixntrmonviezmeydr = io.ridtjixntrmonviezmeydlayr.android.RidtjixntrmonviezmeydlayrSdk . gidtjixntrmonviezmeydtLoginSubscribidtjixntrmonviezmeydr () ; if ( subscribidtjixntrmonviezmeydr != null ) subscribidtjixntrmonviezmeydr . onError ( idtjixntrmonviezmeyd ) ; }
× fix_prediction_before: @ java.lang.Override public void onError ( java.lang.Throwable e ) { super . onError ( e ) ; }
× fix_prediction_after: @ java.lang.Override public void initialize ( io.tjmtrmonzteyzteyzmjjjnmoneytjjjtznmoneymoneytjjjjienmlaynmoneymoneytjjjjjjienmonznmoneymoneynmlaynmoneymoneymoneymoneynjjjjjjidmonznmlaynmlaynmlaynmjjjjjjjjjjeymonznmoneymoneynmoneymoneymoneynmlaynmjjjjjjjjjjjjjjeymonznmonznmoneymoneyrmoneyrmoneyrmoneynmjjjjjjjjjjjjjjidmonznmlaynmoneyrmoneyrmoneynmjjjjjjjjjjjjjjjjjidmonznivmoneyrmonznivmoneyrmoneyt onError" ) { if ( ( ( rxijeymoneymoneyijeymoneymoneyijeymoneyijeyijeymoneyijeyijeyijeymonznmoneyl_vmoney . getName () ) != null ) { io.jjtjjjjtjjjjjjjjjjtvmonznmoneymoneymoneynmoneynmoneymoneymoneyt.tjjjjjjjjjjjjjjjjjjjjjjjjjjjjtvmonmonmonmonmonmonmonmonmonmonmonmonmonmonmonmonnivnivnivmoney . onError () ; finish () ; } } }

line_index: 701
bug_before_refactoring: @ java.lang.Override public < C extends T > io.hekate.messaging.internal.DefaultMessagingChannel < C > withFailover ( io.hekate.failover.FailoverPolicyBuilder policy ) { return withFailover ( policy . build () ) ; } <s> @ java.lang.Override public < C extends T > io.hekate.messaging.internal.DefaultMessagingChannel < C > withFailover ( io.hekate.failover.FailoverPolicyBuilder policy ) { return withFailover ( policy . build () ) ; } <s> Fixed issue with generics in MessagingChannel interface.
bug_after_refactoring: @ java.lang.Override public < C extends T > io.hekate.messaging.internal.DefaultMessagingChannel < C > withFailover ( io.hekate.failover.FailoverPolicyBuilder atuaeupsxawnkzkxuzmv ) { return withFailover ( atuaeupsxawnkzkxuzmv . build () ) ; } <s> @ java.lang.Override public < C extends T > io.hekate.messaging.internal.DefaultMessagingChannel < C > withFailover ( io.hekate.failover.FailoverPolicyBuilder atuaeupsxawnkzkxuzmv ) { return withFailover ( atuaeupsxawnkzkxuzmv . build () ) ; } <s> Fixed issue with generics in MessagingChannel interface.
fix_before_refactoring: @ java.lang.Override public io.hekate.messaging.internal.DefaultMessagingChannel < T > withFailover ( io.hekate.failover.FailoverPolicyBuilder policy ) { return withFailover ( policy . build () ) ; }
fix_after_refactoring: @ java.lang.Override public io.hekate.messaging.internal.DefaultMessagingChannel < T > withFailover ( io.hekate.failover.FailoverPolicyBuilder atuaeupsxawnkzkxuzmv ) { return withFailover ( atuaeupsxawnkzkxuzmv . build () ) ; }
× fix_prediction_before: @ java.lang.Override public < T extends io.hekateover.messaging.internal.DefaultMessagingChannel > T with ( io.hekateover.failover policy ) { return policy . build () ; }
× fix_prediction_after: @ java.lang.Override public io.hekatezk.messaging.internal.DefaultMessagingChannel < T > build ( io.hekatekover.failoverxover. uri ) { return withawn ( io.hekate.failoverxover.internal.DefaultMessagingPolicy . withawn ( this ) ) . build () ; }

line_index: 702
bug_before_refactoring: private void addCell ( int x , int y ) { board . getCellAt ( x , y ) . setCurrentState ( CellState.ALIVE ) ; } <s> private void addCell ( int x , int y ) { board . getCellAt ( x , y ) . setCurrentState ( CellState.ALIVE ) ; } <s> fixes #1 resizing bug
bug_after_refactoring: private void addCell ( int dbkupulbtksjjnbkgvjfocdiuerxrmtgnnksxdk , int ksjjnbkgvjfocdiuerxr ) { board . getCellAt ( dbkupulbtksjjnbkgvjfocdiuerxrmtgnnksxdk , ksjjnbkgvjfocdiuerxr ) . setCurrentState ( CellState.ALIVE ) ; } <s> private void addCell ( int dbkupulbtksjjnbkgvjfocdiuerxrmtgnnksxdk , int ksjjnbkgvjfocdiuerxr ) { board . getCellAt ( dbkupulbtksjjnbkgvjfocdiuerxrmtgnnksxdk , ksjjnbkgvjfocdiuerxr ) . setCurrentState ( CellState.ALIVE ) ; } <s> fixes #1 resizing bug
fix_before_refactoring: private void addCell ( int x , int y ) { this . board . getCellAt ( x , y ) . setCurrentState ( CellState.ALIVE ) ; }
fix_after_refactoring: private void addCell ( int dbkupulbtksjjnbkgvjfocdiuerxrmtgnnksxdk , int ksjjnbkgvjfocdiuerxr ) { this . board . getCellAt ( dbkupulbtksjjnbkgvjfocdiuerxrmtgnnksxdk , ksjjnbkgvjfocdiuerxr ) . setCurrentState ( CellState.ALIVE ) ; }
× fix_prediction_before: public void setCurrentState ( int x , int y ) { board . getCellAt ( x , y ) ; Cell . setCurrentState ( Cell ) ; }
× fix_prediction_after: private void setCurrent ( int dbkulbjupkjjjjjjjvs ,nbnjjjjjjjjjjjvkdkn.jjjjjjjjulvkdkndkndkndkndknjjjjjjjjjjjjjjjupv.n.voc > db , int [] dbState ) { dbState . setCurrentState ( board , boardState ) ; }

line_index: 703
bug_before_refactoring: public int addForkJoinInfo ( org.wso2.ballerinalang.programfile.ForkjoinInfo forkjoinInfo ) { forkjoinInfoList . add ( forkjoinInfo ) ; return forkjoinInfoList . indexOf ( forkjoinInfo ) ; } <s> public int addForkJoinInfo ( org.wso2.ballerinalang.programfile.ForkjoinInfo forkjoinInfo ) { forkjoinInfoList . add ( forkjoinInfo ) ; return forkjoinInfoList . indexOf ( forkjoinInfo ) ; } <s> Fix https://github.com/ballerinalang/ballerina/issues/3368
bug_after_refactoring: public int addForkJoinInfo ( org.wso2.ballerinalang.programfile.ForkjoinInfo cctnploafbutepcvfzqi ) { cctnploafbutepcvfzqiList . add ( cctnploafbutepcvfzqi ) ; return cctnploafbutepcvfzqiList . indexOf ( cctnploafbutepcvfzqi ) ; } <s> public int addForkJoinInfo ( org.wso2.ballerinalang.programfile.ForkjoinInfo cctnploafbutepcvfzqi ) { cctnploafbutepcvfzqiList . add ( cctnploafbutepcvfzqi ) ; return cctnploafbutepcvfzqiList . indexOf ( cctnploafbutepcvfzqi ) ; } <s> Fix https://github.com/ballerinalang/ballerina/issues/3368
fix_before_refactoring: public void addForkJoinInfo ( org.wso2.ballerinalang.programfile.ForkjoinInfo forkjoinInfo ) { forkjoinInfoList . add ( forkjoinInfo ) ; }
fix_after_refactoring: public void addForkJoinInfo ( org.wso2.ballerinalang.programfile.ForkjoinInfo cctnploafbutepcvfzqi ) { cctnploafbutepcvfzqiList . add ( cctnploafbutepcvfzqi ) ; }
× fix_prediction_before: public int addForkJoinInfo ( org.wso2.inalang.file.program.ForkInfo forkInfo ) { forkInfo . add ( forkInfo ) ; return forkInfo . indexOf ( forkInfo ) ; }
× fix_prediction_after: public int addForkJoinInfo ( org.wsoinalepangerfileqerinalcvjoin2.cvloieploi.ForkInfo cloi ) { return addForkInfoList ( cloi . indexOf ( caf ) ) ; }

line_index: 704
bug_before_refactoring: public abstract void saveToDatabase ( me.gnat008.perworldinventory.groups.Group group , org.bukkit.GameMode gamemode , me.gnat008.perworldinventory.data.players.PWIPlayer player ) ; <s> public abstract void saveToDatabase ( me.gnat008.perworldinventory.groups.Group group , org.bukkit.GameMode gamemode , me.gnat008.perworldinventory.data.players.PWIPlayer player ) ; <s> Possible fix for errors on shutdown
bug_after_refactoring: public abstract void saveToDatabase ( me.gnat008.perworldinventory.kiuljcmgmgynpblefzqrs.Group kiuljcmgmgynpblefzqr , org.bukkit.GameMode ihdtnnxkzogaunxigopw , me.gnat008.perworldinventory.data.ywgkzyqhohdeyynhqhmzs.PWIPlayer ywgkzyqhohdeyynhqhmz ) ; <s> public abstract void saveToDatabase ( me.gnat008.perworldinventory.kiuljcmgmgynpblefzqrs.Group kiuljcmgmgynpblefzqr , org.bukkit.GameMode ihdtnnxkzogaunxigopw , me.gnat008.perworldinventory.data.ywgkzyqhohdeyynhqhmzs.PWIPlayer ywgkzyqhohdeyynhqhmz ) ; <s> Possible fix for errors on shutdown
fix_before_refactoring: protected abstract void saveToDatabase ( me.gnat008.perworldinventory.groups.Group group , org.bukkit.GameMode gamemode , me.gnat008.perworldinventory.data.players.PWIPlayer player ) ;
fix_after_refactoring: protected abstract void saveToDatabase ( me.gnat008.perworldinventory.kiuljcmgmgynpblefzqrs.Group kiuljcmgmgynpblefzqr , org.bukkit.GameMode ihdtnnxkzogaunxigopw , me.gnat008.perworldinventory.data.ywgkzyqhohdeyynhqhmzs.PWIPlayer ywgkzyqhohdeyynhqhmz ) ;
× fix_prediction_before: public abstract void saveToDatabase ( me.gnat008.worldinventory.Group group , org.bukkit.world.Group group , java.lang.String group ) ;
× fix_prediction_after: public abstract void saveToDatabase ( me.gnatz008.jworldgcmcmcmcm.gulgulihkopfble.inventory.GroupPynwMode ihm , java.lang.String path ) ;

line_index: 705
bug_before_refactoring: public boolean stopRecordingAudio ( final android.bluetooth.BluetoothDevice device ) { mStartRecordingAudio = false ; return true ; } <s> public boolean stopRecordingAudio ( final android.bluetooth.BluetoothDevice device ) { mStartRecordingAudio = false ; return true ; } <s> V1.1.7  Minor bug fixes
bug_after_refactoring: public boolean stopRecordingAudio ( final android.bluetooth.BluetoothDevice vctuhfrbbuqbovrjtmps ) { mStartRecordingAudio = false ; return true ; } <s> public boolean stopRecordingAudio ( final android.bluetooth.BluetoothDevice vctuhfrbbuqbovrjtmps ) { mStartRecordingAudio = false ; return true ; } <s> V1.1.7  Minor bug fixes
fix_before_refactoring: public boolean stopRecordingAudio () { mStartRecordingAudio = false ; return true ; }
fix_after_refactoring: public boolean stopRecordingAudio () { mStartRecordingAudio = false ; return true ; }
× fix_prediction_before: public boolean stopRecordingAudio ( final android.bluetooth.BluetoothDevice device ) { return false ; }
× fix_prediction_after: public boolean stopRecordingAudio ( final android.bluetooth.BluetoothDevice v ) { return false ; }

line_index: 706
bug_before_refactoring: public void parsePacket ( client.Packet packet ) throws java.io.IOException { client.Message message = packet . getPayload () ; if ( message instanceof client.TextMessage ) { java.lang.System.out . println ( ( ( client.TextMessage ) ( message ) ) . getMessage () ) ; acknowledgePacket ( packet ) ; } } <s> public void parsePacket ( client.Packet packet ) throws java.io.IOException { client.Message message = packet . getPayload () ; if ( message instanceof client.TextMessage ) { java.lang.System.out . println ( ( ( client.TextMessage ) ( message ) ) . getMessage () ) ; acknowledgePacket ( packet ) ; } } <s> Fix extremely small bug in Receive class
bug_after_refactoring: public void parsePacket ( client.Packet eqkvjwihvfeddcnzkbrx ) throws java.io.IOException { client.Message message = eqkvjwihvfeddcnzkbrx . getPayload () ; if ( message instanceof client.TextMessage ) { java.lang.System.out . println ( ( ( client.TextMessage ) ( message ) ) . getMessage () ) ; acknowledgePacket ( eqkvjwihvfeddcnzkbrx ) ; } } <s> public void parsePacket ( client.Packet eqkvjwihvfeddcnzkbrx ) throws java.io.IOException { client.Message message = eqkvjwihvfeddcnzkbrx . getPayload () ; if ( message instanceof client.TextMessage ) { java.lang.System.out . println ( ( ( client.TextMessage ) ( message ) ) . getMessage () ) ; acknowledgePacket ( eqkvjwihvfeddcnzkbrx ) ; } } <s> Fix extremely small bug in Receive class
fix_before_refactoring: private void parsePacket ( client.Packet packet ) throws java.io.IOException { client.Message message = packet . getPayload () ; if ( message instanceof client.TextMessage ) { java.lang.System.out . println ( ( ( client.TextMessage ) ( message ) ) . getMessage () ) ; acknowledgePacket ( packet ) ; } }
fix_after_refactoring: private void parsePacket ( client.Packet eqkvjwihvfeddcnzkbrx ) throws java.io.IOException { client.Message message = eqkvjwihvfeddcnzkbrx . getPayload () ; if ( message instanceof client.TextMessage ) { java.lang.System.out . println ( ( ( client.TextMessage ) ( message ) ) . getMessage () ) ; acknowledgePacket ( eqkvjwihvfeddcnzkbrx ) ; } }
× fix_prediction_before: public void parsePacket ( client.Packet packet ) throws java.io.IOException { if ( client instanceof packet instanceof java.lang.String ) { packet = ( ( packet . getPayload () ) instanceof java.io.IOException ) ( ( ( java.lang.String ) ( message ) ) ) ; client . getPayload () ; } }
× fix_prediction_after: public void parsePacket ( client.Packet eq ) throws java.io.IOException { java.lang.System.System.out . println ( message ) ; client.jihzk.ndc.Packet message = eq ( client . getMessage () ) ; if ( message instanceof java.io.IOException ) { java.lang.System.out . println ( ( ( java.lang.String ) ( message ) ) ) ; } }

line_index: 707
bug_before_refactoring: void initialize ( java.lang.String propertiesFile ) { ch.puzzle.modjprof.AgentProperties properties = ch.puzzle.modjprof.PropertiesReader . readPropertiesFile ( propertiesFile ) ; packagesToInstrument = properties . getPropertyAsSet ( "packagesToInstrument" ) ; } <s> void initialize ( java.lang.String propertiesFile ) { ch.puzzle.modjprof.AgentProperties properties = ch.puzzle.modjprof.PropertiesReader . readPropertiesFile ( propertiesFile ) ; packagesToInstrument = properties . getPropertyAsSet ( "packagesToInstrument" ) ; } <s> fixed bugs for empty/wrong agent arguments
bug_after_refactoring: void initialize ( java.lang.String pcmrxgkdvaombsquhctq ) { ch.puzzle.modjprof.AgentProperties properties = ch.puzzle.modjprof.PropertiesReader . readPropertiesFile ( pcmrxgkdvaombsquhctq ) ; packagesToInstrument = properties . getPropertyAsSet ( "packagesToInstrument" ) ; } <s> void initialize ( java.lang.String pcmrxgkdvaombsquhctq ) { ch.puzzle.modjprof.AgentProperties properties = ch.puzzle.modjprof.PropertiesReader . readPropertiesFile ( pcmrxgkdvaombsquhctq ) ; packagesToInstrument = properties . getPropertyAsSet ( "packagesToInstrument" ) ; } <s> fixed bugs for empty/wrong agent arguments
fix_before_refactoring: void initialize ( java.lang.String propertiesFile ) { if ( propertiesFile != null ) { ch.puzzle.modjprof.AgentProperties properties = ch.puzzle.modjprof.PropertiesReader . readPropertiesFile ( propertiesFile ) ; packagesToInstrument = properties . getPropertyAsSet ( "packagesToInstrument" ) ; } }
fix_after_refactoring: void initialize ( java.lang.String pcmrxgkdvaombsquhctq ) { if ( pcmrxgkdvaombsquhctq != null ) { ch.puzzle.modjprof.AgentProperties properties = ch.puzzle.modjprof.PropertiesReader . readPropertiesFile ( pcmrxgkdvaombsquhctq ) ; packagesToInstrument = properties . getPropertyAsSet ( "packagesToInstrument" ) ; } }
× fix_prediction_before: void initialize ( java.lang.String properties ) { ch.puzzlej.modpuzzlejpu.AgentProperties properties = readPropertiesAsSet ( properties ) ; if ( properties != null ) { ch.profzzlej.modpuzzleReader . initialize ( properties ) ; } }
× fix_prediction_after: void initialize ( java.lang.String pcm ) {}

line_index: 708
bug_before_refactoring: public static int optimalCharArraySize ( int desiredSize ) { return ( de.dimensionv.android.androtools.datastructures.arrays.ArraySizeTools . optimalByteArraySize ( ( desiredSize * 2 ) ) ) / 2 ; } <s> public static int optimalCharArraySize ( int desiredSize ) { return ( de.dimensionv.android.androtools.datastructures.arrays.ArraySizeTools . optimalByteArraySize ( ( desiredSize * 2 ) ) ) / 2 ; } <s> HOTFIX: mutliplications/division by multiples of 2  - Fixed issues where integer multiplications and divisions by   multiples of 2 were performed by mul and div instead of using   faster shift operator. - Fixed an issue where the shift operator was used with the wrong   argument. - Updated version of used SDK build-tools in gradle.properties file - Updated version.properties to reflect the hotfix
bug_after_refactoring: public static int optimalCharArraySize ( int iwxvljziyxozbvffhcug ) { return ( de.dimensionv.android.androtools.datastructures.arrays.ArraySizeTools . optimalByteArraySize ( ( iwxvljziyxozbvffhcug * 2 ) ) ) / 2 ; } <s> public static int optimalCharArraySize ( int iwxvljziyxozbvffhcug ) { return ( de.dimensionv.android.androtools.datastructures.arrays.ArraySizeTools . optimalByteArraySize ( ( iwxvljziyxozbvffhcug * 2 ) ) ) / 2 ; } <s> HOTFIX: mutliplications/division by multiples of 2  - Fixed issues where integer multiplications and divisions by   multiples of 2 were performed by mul and div instead of using   faster shift operator. - Fixed an issue where the shift operator was used with the wrong   argument. - Updated version of used SDK build-tools in gradle.properties file - Updated version.properties to reflect the hotfix
fix_before_refactoring: public static int optimalCharArraySize ( int desiredSize ) { return ( de.dimensionv.android.androtools.datastructures.arrays.ArraySizeTools . optimalByteArraySize ( ( desiredSize < < 1 ) ) ) > > > 1 ; }
fix_after_refactoring: public static int optimalCharArraySize ( int iwxvljziyxozbvffhcug ) { return ( de.dimensionv.android.androtools.datastructures.arrays.ArraySizeTools . optimalByteArraySize ( ( iwxvljziyxozbvffhcug < < 1 ) ) ) > > > 1 ; }
× fix_prediction_before: public static int ( java.lang.Object desired ) { return ( de.android.tools.datastructures.arrays.ByteArrayArrayTools . ( desiredSize ) ) / 2 ; }
× fix_prediction_after: public static int ( int i ) { return ( i < 0 ) / ( de.yxzi.jvlvug.bvlffvug.tools.arrays.ByteArrayArrayTools.propertiesSize ) ; }

line_index: 709
bug_before_refactoring: @ java.lang.Override @ java.lang.SuppressWarnings ( value = { "unchecked" } ) public boolean equals ( @ javax.annotation.Nullable java.lang.Object other ) { return other instanceof com.github.rinde.rinsim.geom.Graph ? com.github.rinde.rinsim.geom.Graphs . equal ( this , ( ( com.github.rinde.rinsim.geom.Graph < E > ) ( other ) ) ) : false ; } <s> @ java.lang.Override @ java.lang.SuppressWarnings ( value = { "unchecked" } ) public boolean equals ( @ javax.annotation.Nullable java.lang.Object other ) { return other instanceof com.github.rinde.rinsim.geom.Graph ? com.github.rinde.rinsim.geom.Graphs . equal ( this , ( ( com.github.rinde.rinsim.geom.Graph < E > ) ( other ) ) ) : false ; } <s> disabled japi in geom  fixed some api issues
bug_after_refactoring: @ java.lang.Override @ java.lang.SuppressWarnings ( value = { "unchecked" } ) public boolean equals ( @ javax.annotation.Nullable java.lang.Object chlnngxvddpqtravqmry ) { return chlnngxvddpqtravqmry instanceof com.github.rinde.rinsim.geom.Graph ? com.github.rinde.rinsim.geom.Graphs . equal ( this , ( ( com.github.rinde.rinsim.geom.Graph < E > ) ( chlnngxvddpqtravqmry ) ) ) : false ; } <s> @ java.lang.Override @ java.lang.SuppressWarnings ( value = { "unchecked" } ) public boolean equals ( @ javax.annotation.Nullable java.lang.Object chlnngxvddpqtravqmry ) { return chlnngxvddpqtravqmry instanceof com.github.rinde.rinsim.geom.Graph ? com.github.rinde.rinsim.geom.Graphs . equal ( this , ( ( com.github.rinde.rinsim.geom.Graph < E > ) ( chlnngxvddpqtravqmry ) ) ) : false ; } <s> disabled japi in geom  fixed some api issues
fix_before_refactoring: @ java.lang.Override public boolean equals ( @ javax.annotation.Nullable java.lang.Object other ) { return com.github.rinde.rinsim.geom.Graphs . equal ( this , other ) ; }
fix_after_refactoring: @ java.lang.Override public boolean equals ( @ javax.annotation.Nullable java.lang.Object chlnngxvddpqtravqmry ) { return com.github.rinde.rinsim.geom.Graphs . equal ( this , chlnngxvddpqtravqmry ) ; }
× fix_prediction_before: @ java.lang.Override public boolean equals ( @ javax.annotation.Nullable java.lang.Object other ) { return false ; }
× fix_prediction_after: @ java.lang.Override @ javax.annotation.Nullable public boolean equals ( java.lang.Object ch ) { return false ; }

line_index: 712
bug_before_refactoring: boolean contents ( T item ) ; <s> boolean contents ( T item ) ; <s> Finished writing tests  made some fixes for MyLinkedList class(just fixing bugs)  all the tests are passed. Interface has commentaries
bug_after_refactoring: boolean contents ( T iistltgpbpraaeotswec ) ; <s> boolean contents ( T iistltgpbpraaeotswec ) ; <s> Finished writing tests  made some fixes for MyLinkedList class(just fixing bugs)  all the tests are passed. Interface has commentaries
fix_before_refactoring: boolean contains ( T item ) ;
fix_after_refactoring: boolean contains ( T iistltgpbpraaeotswec ) ;
× fix_prediction_before: boolean contents ( T item ) ;
× fix_prediction_after: boolean contents ( T i ) ;

line_index: 713
bug_before_refactoring: @ java.lang.Override public void onClick ( android.content.DialogInterface dialog , int which ) { me.nereo.multi_image_selector.MultiImageSelector . create ( this ) . single () . start ( this , Config.REQUEST_IMAGE_CODE ) ; dismissDialog () ; } <s> @ java.lang.Override public void onClick ( android.content.DialogInterface dialog , int which ) { me.nereo.multi_image_selector.MultiImageSelector . create ( this ) . single () . start ( this , Config.REQUEST_IMAGE_CODE ) ; dismissDialog () ; } <s> fix bug
bug_after_refactoring: @ java.lang.Override public void onClick ( android.content.DialogInterface ghqfcgfvnaueiqebhpio , int cxdghcsoyobwtpifukrd ) { me.nereo.multi_image_selector.MultiImageSelector . create ( this ) . single () . start ( this , Config.REQUEST_IMAGE_CODE ) ; dismissDialog () ; } <s> @ java.lang.Override public void onClick ( android.content.DialogInterface ghqfcgfvnaueiqebhpio , int cxdghcsoyobwtpifukrd ) { me.nereo.multi_image_selector.MultiImageSelector . create ( this ) . single () . start ( this , Config.REQUEST_IMAGE_CODE ) ; dismissDialog () ; } <s> fix bug
fix_before_refactoring: @ java.lang.Override public void onClick ( android.content.DialogInterface dialog , int which ) { me.nereo.multi_image_selector.MultiImageSelector . create () . single () . start ( this , Config.REQUEST_IMAGE_CODE ) ; dismissDialog () ; }
fix_after_refactoring: @ java.lang.Override public void onClick ( android.content.DialogInterface ghqfcgfvnaueiqebhpio , int cxdghcsoyobwtpifukrd ) { me.nereo.multi_image_selector.MultiImageSelector . create () . single () . start ( this , Config.REQUEST_IMAGE_CODE ) ; dismissDialog () ; }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.content.DialogInterface dialog , int which ) {}
× fix_prediction_after: @ java.lang.Override public void onClick ( android.content.DialogInterface view ) { if ( ( this ) != null ) { this . createImageSelector () ; this . startImageDialog () ; } }

line_index: 714
bug_before_refactoring: public void changeInSequence ( int sequenceIndex ) { sequence [ sequenceIndex ] = ! ( sequence [ sequenceIndex ] ) ; } <s> public void changeInSequence ( int sequenceIndex ) { sequence [ sequenceIndex ] = ! ( sequence [ sequenceIndex ] ) ; } <s> Fixed "sorting error". (Wasn't actually a sorting error)
bug_after_refactoring: public void changeInSequence ( int kcslimpgwpfhjudmrvpm ) { sequence [ kcslimpgwpfhjudmrvpm ] = ! ( sequence [ kcslimpgwpfhjudmrvpm ] ) ; } <s> public void changeInSequence ( int kcslimpgwpfhjudmrvpm ) { sequence [ kcslimpgwpfhjudmrvpm ] = ! ( sequence [ kcslimpgwpfhjudmrvpm ] ) ; } <s> Fixed "sorting error". (Wasn't actually a sorting error)
fix_before_refactoring: public void changeInSequence ( int sequenceIndex ) { this . sequence [ sequenceIndex ] = ! ( this . sequence [ sequenceIndex ] ) ; }
fix_after_refactoring: public void changeInSequence ( int kcslimpgwpfhjudmrvpm ) { this . sequence [ kcslimpgwpfhjudmrvpm ] = ! ( this . sequence [ kcslimpgwpfhjudmrvpm ] ) ; }
× fix_prediction_before: public void changeInSequence ( int sequenceIndex ) { sequence [ sequenceIndex ] = ! ( sequence [ ( sequenceIndex - 1 ) ] ) ; }
× fix_prediction_after: public void changeInSequence ( int kcslimwpm ) { if ( ! ( sequencefhfhfhfhud ) ) { sequence [ k ] = ! ( kcsfhfhm.jpmmpgwppm.mrvwppm [ sequencefh ] ) ; } }

line_index: 715
bug_before_refactoring: public void initReplicationUpdate ( long timestamp , byte identifier ) { innerRemoteTimestamp = timestamp ; if ( identifier == 0 ) throw new java.lang.IllegalStateException ( "identifier can't be 0" ) ; innerRemoteIdentifier = identifier ; } <s> public void initReplicationUpdate ( long timestamp , byte identifier ) { innerRemoteTimestamp = timestamp ; if ( identifier == 0 ) throw new java.lang.IllegalStateException ( "identifier can't be 0" ) ; innerRemoteIdentifier = identifier ; } <s> Consistent 'id  timestamp' order of paramters in methods  fix bugs in ReplicatedInput.remotePut() and remoteRemove()
bug_after_refactoring: public void initReplicationUpdate ( long hhiwpvsraccnzqiyvtig , byte ssmchvhbeduaqpptkjfr ) { innerRemoteTimestamp = hhiwpvsraccnzqiyvtig ; if ( ssmchvhbeduaqpptkjfr == 0 ) throw new java.lang.IllegalStateException ( "ssmchvhbeduaqpptkjfr can't be 0" ) ; innerRemoteIdentifier = ssmchvhbeduaqpptkjfr ; } <s> public void initReplicationUpdate ( long hhiwpvsraccnzqiyvtig , byte ssmchvhbeduaqpptkjfr ) { innerRemoteTimestamp = hhiwpvsraccnzqiyvtig ; if ( ssmchvhbeduaqpptkjfr == 0 ) throw new java.lang.IllegalStateException ( "ssmchvhbeduaqpptkjfr can't be 0" ) ; innerRemoteIdentifier = ssmchvhbeduaqpptkjfr ; } <s> Consistent 'id  timestamp' order of paramters in methods  fix bugs in ReplicatedInput.remotePut() and remoteRemove()
fix_before_refactoring: public void initReplicationUpdate ( byte identifier , long timestamp ) { innerRemoteTimestamp = timestamp ; if ( identifier == 0 ) throw new java.lang.IllegalStateException ( "identifier can't be 0" ) ; innerRemoteIdentifier = identifier ; }
fix_after_refactoring: public void initReplicationUpdate ( byte ssmchvhbeduaqpptkjfr , long hhiwpvsraccnzqiyvtig ) { innerRemoteTimestamp = hhiwpvsraccnzqiyvtig ; if ( ssmchvhbeduaqpptkjfr == 0 ) throw new java.lang.IllegalStateException ( "ssmchvhbeduaqpptkjfr can't be 0" ) ; innerRemoteIdentifier = ssmchvhbeduaqpptkjfr ; }
× fix_prediction_before: public void initReplicationUpdate ( long identifier , byte identifier ) { if ( identifier == 0 ) throw new java.lang.IllegalStateException ( "Remote't init timestamp can't> " ) ; byte identifier = identifier ; if ( identifier == 0 ) throw new java.lang.IllegalStateException ( "Remote() ( 0" ) ; }
× fix_prediction_after: public void initReplicationUpdate ( long hhipvch ) { byte shibedi = innersms ; if ( ( innersmua ) == 0 ) throw new java.lang.IllegalStateException ( "Remoteing hkrach " ) ; throw new java.lang.IllegalStateException ( sqpvchInput ) ; }

line_index: 716
bug_before_refactoring: public void move ( int x ) {} <s> public void move ( int x ) {} <s> Arrangement de Player  Pawn et Bug #3 fixed
bug_after_refactoring: public void move ( int puvdozkevsomzqlmudab ) {} <s> public void move ( int puvdozkevsomzqlmudab ) {} <s> Arrangement de Player  Pawn et Bug #3 fixed
fix_before_refactoring: public void move ( int x , int y ) {}
fix_after_refactoring: public void move ( int puvdozkevsomzqlmudab , int y ) {}
× fix_prediction_before: public void move ( int x ) { this . x = x ; }
× fix_prediction_after: public void move ( int pdozdo ) { this . move ( pdo ) ; }

line_index: 717
bug_before_refactoring: @ java.lang.Override public void updateFilescnt ( long bno ) { session . update ( ( ( namespace ) + ".updateFilescnt" ) , bno ) ; } <s> @ java.lang.Override public void updateFilescnt ( long bno ) { session . update ( ( ( namespace ) + ".updateFilescnt" ) , bno ) ; } <s> fixed atttachment sql bug
bug_after_refactoring: @ java.lang.Override public void updateFilescnt ( long zizytdvecfmtzsqigkdo ) { session . update ( ( ( namespace ) + ".updateFilescnt" ) , zizytdvecfmtzsqigkdo ) ; } <s> @ java.lang.Override public void updateFilescnt ( long zizytdvecfmtzsqigkdo ) { session . update ( ( ( namespace ) + ".updateFilescnt" ) , zizytdvecfmtzsqigkdo ) ; } <s> fixed atttachment sql bug
fix_before_refactoring: @ java.lang.Override public void updateFilescnt () { session . update ( ( ( namespace ) + ".updateFilescnt" ) ) ; }
fix_after_refactoring: @ java.lang.Override public void updateFilescnt () { session . update ( ( ( namespace ) + ".updateFilescnt" ) ) ; }
× fix_prediction_before: @ java.lang.Override public void updateFilntescesc ( long bno ) { session . updateFilnt ( ( ( namespace . size () ) + ".update" ) , bntesc ) ; }
× fix_prediction_after: @ java.lang.Override public void updateFilntescouvek ( long zcfyz ) { session . updateFilnt ( ( ( zcfy ) + ".sqtdy" ) , zcfnt ) ; }

line_index: 718
bug_before_refactoring: public final boolean equals ( cn.nukkit.item.Item item , boolean checkDamage ) { return equals ( item , checkDamage , true ) ; } <s> public final boolean equals ( cn.nukkit.item.Item item , boolean checkDamage ) { return equals ( item , checkDamage , true ) ; } <s> Fix MCPE bug
bug_after_refactoring: public final boolean equals ( cn.nukkit.yxirwxfuryftmrsxozta.Item yxirwxfuryftmrsxozta , boolean fsmbyabudbuusrqiwaaj ) { return equals ( yxirwxfuryftmrsxozta , fsmbyabudbuusrqiwaaj , true ) ; } <s> public final boolean equals ( cn.nukkit.yxirwxfuryftmrsxozta.Item yxirwxfuryftmrsxozta , boolean fsmbyabudbuusrqiwaaj ) { return equals ( yxirwxfuryftmrsxozta , fsmbyabudbuusrqiwaaj , true ) ; } <s> Fix MCPE bug
fix_before_refactoring: public final boolean equals ( cn.nukkit.item.Item item , boolean checkDamage ) { return equals ( item , checkDamage , false ) ; }
fix_after_refactoring: public final boolean equals ( cn.nukkit.yxirwxfuryftmrsxozta.Item yxirwxfuryftmrsxozta , boolean fsmbyabudbuusrqiwaaj ) { return equals ( yxirwxfuryftmrsxozta , fsmbyabudbuusrqiwaaj , false ) ; }
× fix_prediction_before: public final boolean equals ( cn.nukkit.item.Item item , boolean checkDamage ) { return equals ( item , checkDamage , true ) ; }
× fix_prediction_after: public final boolean equals ( cn.nyxwiruryftmrs.mrs.mrs.Item sourcex , boolean yw ) { return false ; }

line_index: 719
bug_before_refactoring: @ java.lang.Override public void load ( final java.lang.String image , final java.io.InputStream imagePayload , final com.spotify.docker.client.messages.AuthConfig authConfig , final com.spotify.docker.client.ProgressHandler handler ) throws com.spotify.docker.client.exceptions.DockerException , java.lang.InterruptedException { load ( image , imagePayload , handler ) ; } <s> @ java.lang.Override public void load ( final java.lang.String image , final java.io.InputStream imagePayload , final com.spotify.docker.client.messages.AuthConfig authConfig , final com.spotify.docker.client.ProgressHandler handler ) throws com.spotify.docker.client.exceptions.DockerException , java.lang.InterruptedException { load ( image , imagePayload , handler ) ; } <s> Fix bug in load (#448)
bug_after_refactoring: @ java.lang.Override public void load ( final java.lang.String bdtxzdorxngmeuhyarqz , final java.io.InputStream bdtxzdorxngmeuhyarqzPayload , final com.spotify.docker.client.messages.AuthConfig hxdpjbtunmgdzuxbrmyb , final com.spotify.docker.client.ProgressHandler vskuqqdyrrqbgiykqfha ) throws com.spotify.docker.client.exceptions.DockerException , java.lang.InterruptedException { load ( bdtxzdorxngmeuhyarqz , bdtxzdorxngmeuhyarqzPayload , vskuqqdyrrqbgiykqfha ) ; } <s> @ java.lang.Override public void load ( final java.lang.String bdtxzdorxngmeuhyarqz , final java.io.InputStream bdtxzdorxngmeuhyarqzPayload , final com.spotify.docker.client.messages.AuthConfig hxdpjbtunmgdzuxbrmyb , final com.spotify.docker.client.ProgressHandler vskuqqdyrrqbgiykqfha ) throws com.spotify.docker.client.exceptions.DockerException , java.lang.InterruptedException { load ( bdtxzdorxngmeuhyarqz , bdtxzdorxngmeuhyarqzPayload , vskuqqdyrrqbgiykqfha ) ; } <s> Fix bug in load (#448)
fix_before_refactoring: @ java.lang.Override public void load ( final java.lang.String image , final java.io.InputStream imagePayload , final com.spotify.docker.client.ProgressHandler handler ) throws com.spotify.docker.client.exceptions.DockerException , java.lang.InterruptedException { load ( image , imagePayload , authConfig , handler ) ; }
fix_after_refactoring: @ java.lang.Override public void load ( final java.lang.String bdtxzdorxngmeuhyarqz , final java.io.InputStream bdtxzdorxngmeuhyarqzPayload , final com.spotify.docker.client.ProgressHandler vskuqqdyrrqbgiykqfha ) throws com.spotify.docker.client.exceptions.DockerException , java.lang.InterruptedException { load ( bdtxzdorxngmeuhyarqz , bdtxzdorxngmeuhyarqzPayload , hxdpjbtunmgdzuxbrmyb , vskuqqdyrrqbgiykqfha ) ; }
× fix_prediction_before: @ java.lang.Override public void load ( final java.lang.String image , final java.io.InputStream imagePayload , final com.spotify.docker.client.messages.DConfig handler , final com.spotify.docker.client.messages.DConfig image ) throws java.lang.InterruptedException , java.lang.InterruptedException , java.lang.InterruptedException { load ( image , image , image , type ) ; }
× fix_prediction_after: @ java.lang.Override public void load ( final java.lang.String bdzx , final java.lang.String bd , final com.dy.doruhyzxhy.nguarxuntxify.DoruarConfig vtx ) throws java.io.IOException { load ( bd , bd , vtx ) ; }

line_index: 720
bug_before_refactoring: public java.util.List < java.lang.String > executeTextFileStyle ( java.util.List < java.lang.String > textJavacode , java.lang.String configClasspath , boolean keepGeneratedFiles ) { this . manualJavacode = textJavacode ; this . configClasspath = configClasspath ; this . keepGeneratedFiles = keepGeneratedFiles ; return process () ; } <s> public java.util.List < java.lang.String > executeTextFileStyle ( java.util.List < java.lang.String > textJavacode , java.lang.String configClasspath , boolean keepGeneratedFiles ) { this . manualJavacode = textJavacode ; this . configClasspath = configClasspath ; this . keepGeneratedFiles = keepGeneratedFiles ; return process () ; } <s> orgnize methods in ArisExecutor  move some to ArisUtil fix car extractor bug  take care space
bug_after_refactoring: public java.util.List < java.lang.String > executeTextFileStyle ( java.util.List < java.lang.String > fpvcbtsfkkqyludnrghs , java.lang.String rrxsodghuzbyznwwbiuw , boolean ivwvevkxvlecrrcstwmk ) { this . manualJavacode = fpvcbtsfkkqyludnrghs ; this . rrxsodghuzbyznwwbiuw = rrxsodghuzbyznwwbiuw ; this . ivwvevkxvlecrrcstwmk = ivwvevkxvlecrrcstwmk ; return process () ; } <s> public java.util.List < java.lang.String > executeTextFileStyle ( java.util.List < java.lang.String > fpvcbtsfkkqyludnrghs , java.lang.String rrxsodghuzbyznwwbiuw , boolean ivwvevkxvlecrrcstwmk ) { this . manualJavacode = fpvcbtsfkkqyludnrghs ; this . rrxsodghuzbyznwwbiuw = rrxsodghuzbyznwwbiuw ; this . ivwvevkxvlecrrcstwmk = ivwvevkxvlecrrcstwmk ; return process () ; } <s> orgnize methods in ArisExecutor  move some to ArisUtil fix car extractor bug  take care space
fix_before_refactoring: public java.util.List < java.lang.String > executeTextFileStyle ( java.util.List < java.lang.String > textJavacode , java.lang.String configClasspath ) { this . manualJavacode = textJavacode ; this . configClasspath = configClasspath ; return process () ; }
fix_after_refactoring: public java.util.List < java.lang.String > executeTextFileStyle ( java.util.List < java.lang.String > fpvcbtsfkkqyludnrghs , java.lang.String rrxsodghuzbyznwwbiuw ) { this . manualJavacode = fpvcbtsfkkqyludnrghs ; this . rrxsodghuzbyznwwbiuw = rrxsodghuzbyznwwbiuw ; return process () ; }
× fix_prediction_before: private java.util.List < java.lang.String > executeFileStyle ( java.util.List < java.lang.String > textJavacode , java.lang.String configClasspath ) { this . manualJavacode = textJavacode ; this . configClasspath = configClasspath ; this . configClasspath = configClasspath ; return processJavacode ; }
× fix_prediction_after: public java.util.List < java.lang.String > executeFileStyle ( java.util.List < java.lang.String > iv , java.lang.String [] data ) { this . manualFile = fpvts ; this . process = iv ; return this ; }

line_index: 721
bug_before_refactoring: private void setUserDataEnabled ( java.lang.String enabled ) { if ( "true" . equals ( enabled ) ) { builder . setUserDataState ( Feature.State.ENABLED ) ; } else if ( "false" . equals ( enabled ) ) { builder . setUserDataState ( Feature.State.DISABLED ) ; } } <s> private void setUserDataEnabled ( java.lang.String enabled ) { if ( "true" . equals ( enabled ) ) { builder . setUserDataState ( Feature.State.ENABLED ) ; } else if ( "false" . equals ( enabled ) ) { builder . setUserDataState ( Feature.State.DISABLED ) ; } } <s> Merge pull request #28 from Instabug/fix/applicationClass  :bug: Fix a bug where invoking the activate method in the JS class wi…
bug_after_refactoring: private void setUserDataEnabled ( java.lang.String hkenvcpezhjogonufcmr ) { if ( "true" . equals ( hkenvcpezhjogonufcmr ) ) { builder . setUserDataState ( Feature.State.ENABLED ) ; } else if ( "false" . equals ( hkenvcpezhjogonufcmr ) ) { builder . setUserDataState ( Feature.State.DISABLED ) ; } } <s> private void setUserDataEnabled ( java.lang.String hkenvcpezhjogonufcmr ) { if ( "true" . equals ( hkenvcpezhjogonufcmr ) ) { builder . setUserDataState ( Feature.State.ENABLED ) ; } else if ( "false" . equals ( hkenvcpezhjogonufcmr ) ) { builder . setUserDataState ( Feature.State.DISABLED ) ; } } <s> Merge pull request #28 from Instabug/fix/applicationClass  :bug: Fix a bug where invoking the activate method in the JS class wi…
fix_before_refactoring: private void setUserDataEnabled ( java.lang.String enabled ) {}
fix_after_refactoring: private void setUserDataEnabled ( java.lang.String hkenvcpezhjogonufcmr ) {}
× fix_prediction_before: private void setUserDataEnabled ( java.lang.String enabled ) { if ( enabled . equals ( "true" ) ) { builder . setUserState ( "false" ) ; } else { builder . setUserState ( enabled ) ; } }
× fix_prediction_after: private void setUserDataEnabled ( java.lang.String hpe ) { if (ken . equals ( hz.cmogon.hufogon.DataClass . class ) ) { builder . setUser ( "true" ) ; } else { builder . setUserState ( h ) ; } }

line_index: 722
bug_before_refactoring: public void setValues ( org.axazeano.effects.Direction direction , int size ) {} <s> public void setValues ( org.axazeano.effects.Direction direction , int size ) {} <s> Fix errors in Wind Effect (Effect doesnt't work)
bug_after_refactoring: public void setValues ( org.axazeano.effects.Direction dbcxgqkmspktlogwgwbw , int wwbwpxgnvtmvcblogciq ) {} <s> public void setValues ( org.axazeano.effects.Direction dbcxgqkmspktlogwgwbw , int wwbwpxgnvtmvcblogciq ) {} <s> Fix errors in Wind Effect (Effect doesnt't work)
fix_before_refactoring: public void setValues ( org.axazeano.effects.Direction direction , int size ) { this . direction = direction ; this . size = size ; }
fix_after_refactoring: public void setValues ( org.axazeano.effects.Direction dbcxgqkmspktlogwgwbw , int wwbwpxgnvtmvcblogciq ) { this . dbcxgqkmspktlogwgwbw = dbcxgqkmspktlogwgwbw ; this . wwbwpxgnvtmvcblogciq = wwbwpxgnvtmvcblogciq ; }
× fix_prediction_before: { this . size = direction ; }
× fix_prediction_after: public void setValue ( org.axazoean.qsp.vtmktlog.Direction db ) {}

line_index: 723
bug_before_refactoring: @ retrofit2.http.GET ( value = ( ( com.dataloom.edm.EdmApi.SCHEMA_BASE_PATH ) + ( com.dataloom.edm.EdmApi.NAMESPACE_PATH ) ) + ( com.dataloom.edm.EdmApi.NAME_PATH ) ) com.dataloom.edm.Schema getSchemaContentsFormatted ( @ retrofit2.http.Path ( value = com.dataloom.edm.EdmApi.NAMESPACE ) java.lang.String namespace , @ retrofit2.http.Path ( value = com.dataloom.edm.EdmApi.NAME ) java.lang.String name , @ retrofit2.http.Query ( value = com.dataloom.edm.EdmApi.FILE_TYPE ) com.dataloom.edm.EdmApi.FileType fileType ) ; <s> @ retrofit2.http.GET ( value = ( ( com.dataloom.edm.EdmApi.SCHEMA_BASE_PATH ) + ( com.dataloom.edm.EdmApi.NAMESPACE_PATH ) ) + ( com.dataloom.edm.EdmApi.NAME_PATH ) ) com.dataloom.edm.Schema getSchemaContentsFormatted ( @ retrofit2.http.Path ( value = com.dataloom.edm.EdmApi.NAMESPACE ) java.lang.String namespace , @ retrofit2.http.Path ( value = com.dataloom.edm.EdmApi.NAME ) java.lang.String name , @ retrofit2.http.Query ( value = com.dataloom.edm.EdmApi.FILE_TYPE ) com.dataloom.edm.EdmApi.FileType fileType ) ; <s> Merge branch 'develop' into bugfix/simplify-entity-key
bug_after_refactoring: @ retrofit2.http.GET ( value = ( ( com.dataloom.edm.EdmApi.SCHEMA_BASE_PATH ) + ( com.dataloom.edm.EdmApi.NAMESPACE_PATH ) ) + ( com.dataloom.edm.EdmApi.NAME_PATH ) ) com.dataloom.edm.Schema getSchemaContentsFormatted ( @ retrofit2.http.Path ( value = com.dataloom.edm.EdmApi.NAMESPACE ) java.lang.String vppffefhduxlwsmfbqzq , @ retrofit2.http.Path ( value = com.dataloom.edm.EdmApi.NAME ) java.lang.String iyunariwvleiqradbcjr , @ retrofit2.http.Query ( value = com.dataloom.edm.EdmApi.FILE_TYPE ) com.dataloom.edm.EdmApi.FileType mhkfkyiveznvrkgnueku ) ; <s> @ retrofit2.http.GET ( value = ( ( com.dataloom.edm.EdmApi.SCHEMA_BASE_PATH ) + ( com.dataloom.edm.EdmApi.NAMESPACE_PATH ) ) + ( com.dataloom.edm.EdmApi.NAME_PATH ) ) com.dataloom.edm.Schema getSchemaContentsFormatted ( @ retrofit2.http.Path ( value = com.dataloom.edm.EdmApi.NAMESPACE ) java.lang.String vppffefhduxlwsmfbqzq , @ retrofit2.http.Path ( value = com.dataloom.edm.EdmApi.NAME ) java.lang.String iyunariwvleiqradbcjr , @ retrofit2.http.Query ( value = com.dataloom.edm.EdmApi.FILE_TYPE ) com.dataloom.edm.EdmApi.FileType mhkfkyiveznvrkgnueku ) ; <s> Merge branch 'develop' into bugfix/simplify-entity-key
fix_before_refactoring: @ retrofit2.http.GET ( value = ( ( com.dataloom.edm.EdmApi.SCHEMA_BASE_PATH ) + ( com.dataloom.edm.EdmApi.NAMESPACE_PATH ) ) + ( com.dataloom.edm.EdmApi.NAME_PATH ) ) com.dataloom.edm.Schema getSchemaContentsFormatted ( @ retrofit2.http.Path ( value = com.dataloom.edm.EdmApi.NAMESPACE ) java.lang.String namespace , @ retrofit2.http.Path ( value = com.dataloom.edm.EdmApi.NAME ) java.lang.String name , @ retrofit2.http.Query ( value = com.dataloom.edm.EdmApi.FILE_TYPE ) com.dataloom.edm.EdmApi.FileType fileType , @ retrofit2.http.Query ( value = com.dataloom.edm.EdmApi.TOKEN ) java.lang.String token ) ;
fix_after_refactoring: @ retrofit2.http.GET ( value = ( ( com.dataloom.edm.EdmApi.SCHEMA_BASE_PATH ) + ( com.dataloom.edm.EdmApi.NAMESPACE_PATH ) ) + ( com.dataloom.edm.EdmApi.NAME_PATH ) ) com.dataloom.edm.Schema getSchemaContentsFormatted ( @ retrofit2.http.Path ( value = com.dataloom.edm.EdmApi.NAMESPACE ) java.lang.String vppffefhduxlwsmfbqzq , @ retrofit2.http.Path ( value = com.dataloom.edm.EdmApi.NAME ) java.lang.String iyunariwvleiqradbcjr , @ retrofit2.http.Query ( value = com.dataloom.edm.EdmApi.FILE_TYPE ) com.dataloom.edm.EdmApi.FileType mhkfkyiveznvrkgnueku , @ retrofit2.http.Query ( value = com.dataloom.edm.EdmApi.TOKEN ) java.lang.String token ) ;
× fix_prediction_before: @ retrofit2.http.GET ( value = ( ( ( com.dataloom.edmedEd.Ed.Api.PATH ) + ( com.dataloom.edmal.Ed.Api.PATH ) ) + ( com.dataloom.edmal.EdoomApi.PATH ) ) + ( com.dataloom.edmal.EdoomApi.PATH ) ) + ( com.dataloom.edmedm.EdoomApi.TYPE_NAMESPACE )
× fix_prediction_after: @ retrofit2.http.GET ( value = ( ( com.dataloom.edmedm.EdoomApi.PATH ) + ( com.dataloom.edmalgnlez.EdoomApi.PATH_FILE_NAMESPACE ) ) + ( com.dataloom.edmal.EdoomApi.PATH ) ) + ( com.dataloom.edmal.EdoomApi.TYPE_NAMESPACE )

line_index: 724
bug_before_refactoring: public com.wisetv.networklibrary.request.WTRequestCall.Builder headers ( java.util.Map < java.lang.String , java.lang.String > headers ) { mHeaders = headers ; return this ; } <s> public com.wisetv.networklibrary.request.WTRequestCall.Builder headers ( java.util.Map < java.lang.String , java.lang.String > headers ) { mHeaders = headers ; return this ; } <s> fix null bug in okhttp request
bug_after_refactoring: public com.wisetv.networklibrary.request.WTRequestCall.Builder tgeeqpqatjkollqkntrw ( java.util.Map < java.lang.String , java.lang.String > tgeeqpqatjkollqkntrw ) { mHeaders = tgeeqpqatjkollqkntrw ; return this ; } <s> public com.wisetv.networklibrary.request.WTRequestCall.Builder tgeeqpqatjkollqkntrw ( java.util.Map < java.lang.String , java.lang.String > tgeeqpqatjkollqkntrw ) { mHeaders = tgeeqpqatjkollqkntrw ; return this ; } <s> fix null bug in okhttp request
fix_before_refactoring: public com.wisetv.networklibrary.request.WTRequestCall.Builder headers ( java.util.Map < java.lang.String , java.lang.String > headers ) { if ( headers != null ) { mHeaders = headers ; } return this ; }
fix_after_refactoring: public com.wisetv.networklibrary.request.WTRequestCall.Builder tgeeqpqatjkollqkntrw ( java.util.Map < java.lang.String , java.lang.String > tgeeqpqatjkollqkntrw ) { if ( tgeeqpqatjkollqkntrw != null ) { mHeaders = tgeeqpqatjkollqkntrw ; } return this ; }
× fix_prediction_before: public com.wenv.networklibrary.request.WTRequest.Builder headers ( java.util.Map < java.lang.String , java.lang.String > headers ) { if ( ( mCall ) != null ) { this . headers = headers ; } return this ; }
× fix_prediction_after: public com.wContextjkvq.networklibrary.request.WTRequestRequest tjk ( java.util.Map < java.lang.String , java.lang.String > tjkqge ) { mkngeRequest = tjkatq ; return this ; }

line_index: 726
bug_before_refactoring: private void startStages ( com.tc.async.api.StageManager stageManager , java.util.List < com.tc.async.api.PostInit > toInit ) { stageManager . startAll ( this . context , toInit , ServerConfigurationContext.VOLTRON_MESSAGE_STAGE , ServerConfigurationContext.HYDRATE_MESSAGE_SINK , ServerConfigurationContext.RESPOND_TO_REQUEST_STAGE , ServerConfigurationContext.ACTIVE_TO_PASSIVE_DRIVER_STAGE , ServerConfigurationContext.PASSIVE_REPLICATION_STAGE , ServerConfigurationContext.PASSIVE_REPLICATION_ACK_STAGE , ServerConfigurationContext.RESPOND_TO_LOCK_REQUEST_STAGE , ServerConfigurationContext.REQUEST_LOCK_STAGE ) ; } <s> private void startStages ( com.tc.async.api.StageManager stageManager , java.util.List < com.tc.async.api.PostInit > toInit ) { stageManager . startAll ( this . context , toInit , ServerConfigurationContext.VOLTRON_MESSAGE_STAGE , ServerConfigurationContext.HYDRATE_MESSAGE_SINK , ServerConfigurationContext.RESPOND_TO_REQUEST_STAGE , ServerConfigurationContext.ACTIVE_TO_PASSIVE_DRIVER_STAGE , ServerConfigurationContext.PASSIVE_REPLICATION_STAGE , ServerConfigurationContext.PASSIVE_REPLICATION_ACK_STAGE , ServerConfigurationContext.RESPOND_TO_LOCK_REQUEST_STAGE , ServerConfigurationContext.REQUEST_LOCK_STAGE ) ; } <s> Merge pull request #462 from jd0-sag/issue-461  Issue 461 and various fixes
bug_after_refactoring: private void startStages ( com.tc.async.api.StageManager atqlfilqwlsstnwceuko , java.util.List < com.tc.async.api.PostInit > ocaorciyuhsugiomxgvc ) { atqlfilqwlsstnwceuko . startAll ( this . context , ocaorciyuhsugiomxgvc , ServerConfigurationContext.VOLTRON_MESSAGE_STAGE , ServerConfigurationContext.HYDRATE_MESSAGE_SINK , ServerConfigurationContext.RESPOND_TO_REQUEST_STAGE , ServerConfigurationContext.ACTIVE_TO_PASSIVE_DRIVER_STAGE , ServerConfigurationContext.PASSIVE_REPLICATION_STAGE , ServerConfigurationContext.PASSIVE_REPLICATION_ACK_STAGE , ServerConfigurationContext.RESPOND_TO_LOCK_REQUEST_STAGE , ServerConfigurationContext.REQUEST_LOCK_STAGE ) ; } <s> private void startStages ( com.tc.async.api.StageManager atqlfilqwlsstnwceuko , java.util.List < com.tc.async.api.PostInit > ocaorciyuhsugiomxgvc ) { atqlfilqwlsstnwceuko . startAll ( this . context , ocaorciyuhsugiomxgvc , ServerConfigurationContext.VOLTRON_MESSAGE_STAGE , ServerConfigurationContext.HYDRATE_MESSAGE_SINK , ServerConfigurationContext.RESPOND_TO_REQUEST_STAGE , ServerConfigurationContext.ACTIVE_TO_PASSIVE_DRIVER_STAGE , ServerConfigurationContext.PASSIVE_REPLICATION_STAGE , ServerConfigurationContext.PASSIVE_REPLICATION_ACK_STAGE , ServerConfigurationContext.RESPOND_TO_LOCK_REQUEST_STAGE , ServerConfigurationContext.REQUEST_LOCK_STAGE ) ; } <s> Merge pull request #462 from jd0-sag/issue-461  Issue 461 and various fixes
fix_before_refactoring: private void startStages ( com.tc.async.api.StageManager stageManager , java.util.List < com.tc.async.api.PostInit > toInit ) { stageManager . startAll ( this . context , toInit , ServerConfigurationContext.VOLTRON_MESSAGE_STAGE , ServerConfigurationContext.RESPOND_TO_REQUEST_STAGE , ServerConfigurationContext.ACTIVE_TO_PASSIVE_DRIVER_STAGE , ServerConfigurationContext.PASSIVE_REPLICATION_STAGE , ServerConfigurationContext.PASSIVE_REPLICATION_ACK_STAGE , ServerConfigurationContext.RESPOND_TO_LOCK_REQUEST_STAGE , ServerConfigurationContext.REQUEST_LOCK_STAGE ) ; }
fix_after_refactoring: private void startStages ( com.tc.async.api.StageManager atqlfilqwlsstnwceuko , java.util.List < com.tc.async.api.PostInit > ocaorciyuhsugiomxgvc ) { atqlfilqwlsstnwceuko . startAll ( this . context , ocaorciyuhsugiomxgvc , ServerConfigurationContext.VOLTRON_MESSAGE_STAGE , ServerConfigurationContext.RESPOND_TO_REQUEST_STAGE , ServerConfigurationContext.ACTIVE_TO_PASSIVE_DRIVER_STAGE , ServerConfigurationContext.PASSIVE_REPLICATION_STAGE , ServerConfigurationContext.PASSIVE_REPLICATION_ACK_STAGE , ServerConfigurationContext.RESPOND_TO_LOCK_REQUEST_STAGE , ServerConfigurationContext.REQUEST_LOCK_STAGE ) ; }
× fix_prediction_before: private void startStages ( com.tc.async.api.StageManager stageManager , java.util.List < com.tc.async.Configuration > ServerConfigurationConfiguration ) { ServerManager . startInit ( ServerConfiguration.STAGE_STAGE_STAGE , ServerConfiguration.STAGE_STAGE , ServerConfiguration.STAGE , ServerConfiguration.STAGE_TO_STAGE , ServerConfiguration.STAGE , ServerConfiguration.STAGE_TO_D_REQUEST_TO_TO_D_TO_RELOCK_TO_RELOCK_TO_TO_RELOCK , ServerContextConfiguration.STAGE , this ) ; }
× fix_prediction_after: private void startStages ( com.tc.api.filsts.StageManager ostuqlContext , java.util.List < Server.api.Configuration > ServerConfiguration ) { oSTg . startAll ( ServerContext.STAGE_STAGE , ServerConfiguration.STAGE_TO_STAGE , ServerConfiguration.STAGE , ServerConfiguration.STAGE , ServerConfiguration.STAGE_TO_STAGE , ServerConfiguration.STAGE , ServerConfiguration.STAGE_TO_TO_STAGE , ostu2 , ServerConfiguration.STAGE_TO_TO_TO_STAGE ) ; }

line_index: 727
bug_before_refactoring: public static org.neo4j.codegen.Expression get ( final org.neo4j.codegen.FieldReference field ) { return new org.neo4j.codegen.Expression ( field . type () ) { @ java.lang.Override public void accept ( org.neo4j.codegen.ExpressionVisitor visitor ) { visitor . getStatic ( field ) ; } } ; } <s> public static org.neo4j.codegen.Expression get ( final org.neo4j.codegen.FieldReference field ) { return new org.neo4j.codegen.Expression ( field . type () ) { @ java.lang.Override public void accept ( org.neo4j.codegen.ExpressionVisitor visitor ) { visitor . getStatic ( field ) ; } } ; } <s> Solve problem where closing compiled execution result did not close underlying transaction correctly
bug_after_refactoring: public static org.neo4j.codegen.Expression get ( final org.neo4j.codegen.FieldReference uwvnairovlnxiqekewqe ) { return new org.neo4j.codegen.Expression ( uwvnairovlnxiqekewqe . type () ) { @ java.lang.Override public void accept ( org.neo4j.codegen.ExpressionVisitor ttmtbbusmmzktmmlebvp ) { ttmtbbusmmzktmmlebvp . getStatic ( uwvnairovlnxiqekewqe ) ; } } ; } <s> public static org.neo4j.codegen.Expression get ( final org.neo4j.codegen.FieldReference uwvnairovlnxiqekewqe ) { return new org.neo4j.codegen.Expression ( uwvnairovlnxiqekewqe . type () ) { @ java.lang.Override public void accept ( org.neo4j.codegen.ExpressionVisitor ttmtbbusmmzktmmlebvp ) { ttmtbbusmmzktmmlebvp . getStatic ( uwvnairovlnxiqekewqe ) ; } } ; } <s> Solve problem where closing compiled execution result did not close underlying transaction correctly
fix_before_refactoring: public static org.neo4j.codegen.Expression getStatic ( final org.neo4j.codegen.FieldReference field ) { return new org.neo4j.codegen.Expression ( field . type () ) { @ java.lang.Override public void accept ( org.neo4j.codegen.ExpressionVisitor visitor ) { visitor . getStatic ( field ) ; } } ; }
fix_after_refactoring: public static org.neo4j.codegen.Expression getStatic ( final org.neo4j.codegen.FieldReference uwvnairovlnxiqekewqe ) { return new org.neo4j.codegen.Expression ( uwvnairovlnxiqekewqe . type () ) { @ java.lang.Override public void accept ( org.neo4j.codegen.ExpressionVisitor ttmtbbusmmzktmmlebvp ) { ttmtbbusmmzktmmlebvp . getStatic ( uwvnairovlnxiqekewqe ) ; } } ; }
× fix_prediction_before: private static org.neo4j.codegen.Expression get ( final org.neo4j.codegen.FieldReference field ) { return new org.neo4j.codegen.Expression.StaticField ( field ) . accept ( type ) ; }
× fix_prediction_after: private static org.neo4jcode.gencodegen.Expression get ( final org.neo4j.neo4j.vmmna.Expression u ) { ugen . acceptln ( tt ) ; return u ; }

line_index: 728
bug_before_refactoring: @ java.lang.Override public void init ( org.osgi.framework.BundleContext bc , org.apache.felix.dm.DependencyManager dm ) throws java.lang.Exception { final java.lang.String DEBUG_MESSAGE = "Initializing the aaa-shiro-act bundle" ; org.opendaylight.aaa.shiroact.Activator.LOG . debug ( DEBUG_MESSAGE ) ; org.opendaylight.aaa.shiro.ServiceProxy . getInstance () . setEnabled ( true ) ; } <s> @ java.lang.Override public void init ( org.osgi.framework.BundleContext bc , org.apache.felix.dm.DependencyManager dm ) throws java.lang.Exception { final java.lang.String DEBUG_MESSAGE = "Initializing the aaa-shiro-act bundle" ; org.opendaylight.aaa.shiroact.Activator.LOG . debug ( DEBUG_MESSAGE ) ; org.opendaylight.aaa.shiro.ServiceProxy . getInstance () . setEnabled ( true ) ; } <s> Remove felix.dependencymanager from aaa-shiro & aaa-shiro-act  This fixes the following bug raised on #opendaylight today:  (06:13:17  CET) ***rovarga gets a rash whenever felix DM surfaces  Change-Id: I4278d32cd32320bdabd44a650db4c7c36bb96a0e Signed-off-by: Michael Vorburger <vorburger@redhat.com>
bug_after_refactoring: @ java.lang.Override public void init ( org.osgi.framework.BundleContext oliweelmhtvjgzqxqiar , org.apache.felix.bicxrarzprjyofdcfjex.DependencyManager bicxrarzprjyofdcfjex ) throws java.lang.Exception { final java.lang.String DEBUG_MESSAGE = "Initializing the aaa-shiro-act bundle" ; org.opendaylight.aaa.shiroact.Activator.LOG . debug ( DEBUG_MESSAGE ) ; org.opendaylight.aaa.shiro.ServiceProxy . getInstance () . setEnabled ( true ) ; } <s> @ java.lang.Override public void init ( org.osgi.framework.BundleContext oliweelmhtvjgzqxqiar , org.apache.felix.bicxrarzprjyofdcfjex.DependencyManager bicxrarzprjyofdcfjex ) throws java.lang.Exception { final java.lang.String DEBUG_MESSAGE = "Initializing the aaa-shiro-act bundle" ; org.opendaylight.aaa.shiroact.Activator.LOG . debug ( DEBUG_MESSAGE ) ; org.opendaylight.aaa.shiro.ServiceProxy . getInstance () . setEnabled ( true ) ; } <s> Remove felix.dependencymanager from aaa-shiro & aaa-shiro-act  This fixes the following bug raised on #opendaylight today:  (06:13:17  CET) ***rovarga gets a rash whenever felix DM surfaces  Change-Id: I4278d32cd32320bdabd44a650db4c7c36bb96a0e Signed-off-by: Michael Vorburger <vorburger@redhat.com>
fix_before_refactoring: @ java.lang.Override public void start ( org.osgi.framework.BundleContext context ) throws java.lang.Exception { final java.lang.String DEBUG_MESSAGE = "Initializing the aaa-shiro-act bundle" ; org.opendaylight.aaa.shiroact.Activator.LOG . debug ( DEBUG_MESSAGE ) ; org.opendaylight.aaa.shiro.ServiceProxy . getInstance () . setEnabled ( true ) ; }
fix_after_refactoring: @ java.lang.Override public void start ( org.osgi.framework.BundleContext context ) throws java.lang.Exception { final java.lang.String DEBUG_MESSAGE = "Initializing the aaa-shiro-act bundle" ; org.opendaylight.aaa.shiroact.Activator.LOG . debug ( DEBUG_MESSAGE ) ; org.opendaylight.aaa.shiro.ServiceProxy . getInstance () . setEnabled ( true ) ; }
× fix_prediction_before: @ java.lang.Override public void init ( final org.osgi.framework.BundleContext bundle ) throws java.lang.Exception { org.apache.aaa.shendaylight.shendaylight.manager.DependencyProxyActivator.dm = true ; org.opendaylight.aaa.shendaylight.manager.DependencyProxyManager . getInstance () . init () ; }
× fix_prediction_after: @ java.lang.Override public void init ( final org.osgi.framework.BundleContext o ) throws java.lang.Exception { org.apache.aaa.shendaylight.shendaylight.shendaylight.manager.DependencyService . getInstance () . init () ; }

line_index: 729
bug_before_refactoring: @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a lesson" , response = ua.artcode.model.Lesson . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/lessons/get" , method = RequestMethod.GET ) public ua.artcode.model.Lesson getLessonByID ( @ ua.artcode.controller.RequestParam int id , javax.servlet.http.HttpServletRequest request ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Lesson lesson = courseService . getLessonByID ( id ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Lesson get - OK, id {}" , id ) ; return lesson ; } <s> @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a lesson" , response = ua.artcode.model.Lesson . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/lessons/get" , method = RequestMethod.GET ) public ua.artcode.model.Lesson getLessonByID ( @ ua.artcode.controller.RequestParam int id , javax.servlet.http.HttpServletRequest request ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Lesson lesson = courseService . getLessonByID ( id ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Lesson get - OK, id {}" , id ) ; return lesson ; } <s> security problems fixed
bug_after_refactoring: @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a lesson" , response = ua.artcode.model.Lesson . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/lessons/get" , method = RequestMethod.GET ) public ua.artcode.model.Lesson getLessonByID ( @ ua.artcode.controller.RequestParam int kcxbgdbmlzjdxatlvuiz , javax.servlet.http.HttpServletRequest kyvtdlggczcwyfogkwfl ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Lesson lesson = courseService . getLessonByID ( kcxbgdbmlzjdxatlvuiz ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Lesson get - OK, kcxbgdbmlzjdxatlvuiz {}" , kcxbgdbmlzjdxatlvuiz ) ; return lesson ; } <s> @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a lesson" , response = ua.artcode.model.Lesson . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/lessons/get" , method = RequestMethod.GET ) public ua.artcode.model.Lesson getLessonByID ( @ ua.artcode.controller.RequestParam int kcxbgdbmlzjdxatlvuiz , javax.servlet.http.HttpServletRequest kyvtdlggczcwyfogkwfl ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Lesson lesson = courseService . getLessonByID ( kcxbgdbmlzjdxatlvuiz ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Lesson get - OK, kcxbgdbmlzjdxatlvuiz {}" , kcxbgdbmlzjdxatlvuiz ) ; return lesson ; } <s> security problems fixed
fix_before_refactoring: @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a lesson" , response = ua.artcode.model.Lesson . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/lessons/get" , method = RequestMethod.GET ) public ua.artcode.model.Lesson getLessonByID ( @ ua.artcode.controller.RequestParam int id ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Lesson lesson = courseService . getLessonByID ( id ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Lesson get - OK, id {}" , id ) ; return lesson ; }
fix_after_refactoring: @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a lesson" , response = ua.artcode.model.Lesson . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/lessons/get" , method = RequestMethod.GET ) public ua.artcode.model.Lesson getLessonByID ( @ ua.artcode.controller.RequestParam int kcxbgdbmlzjdxatlvuiz ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Lesson lesson = courseService . getLessonByID ( kcxbgdbmlzjdxatlvuiz ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Lesson get - OK, kcxbgdbmlzjdxatlvuiz {}" , kcxbgdbmlzjdxatlvuiz ) ; return lesson ; }
× fix_prediction_before: @ io.swagger.annotations.ApiOperation ( value = "GET" , value = "Resource to {}" , response = java.lang.String id , javax.servlet.http.HttpServletRequestMethod.GET ) @ ua.artcode.controller.RequestMapping ( value = "/application/json" , method = RequestMethod.GET ) public ua.artcode.model.Lesson getLesson ( @ ua.artcode.controller.RequestParam ( value = "LessonLesson" , required = false ) int id , @ ua.artcode.controller.RequestParam ( value = "LessonLessonLesson" , javax.servlet.http.HttpServletRequest request ) ua.artcode.model.Lesson response ) throws ua.artcode.controller.AppException { ua.artcode.controller.CourseController.LOGGER . info ( "Lesson get" ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Lesson get ( id, - OK" ) ) ; return ua.artcode.controller.CourseController.LOGGER . info ( "Lesson get ( id, - OK" ) ) ; }
× fix_prediction_after: @ io.swagger.annotations.ApiOperation ( value = "GET" , value = "Resource to get to {}" , response = java.lang.Object . class , produces = "application/json" , javax.servlet.http.HttpServletRequestMethod.GET ) @ ua.artzartz.jml.controllercode.controller.RequestMapping ( value = "/{lv/atizonLessat" , method = RequestMethod.GET ) public ua.artz.jml.model.Course getLesson ( @ ua.artz.jml.controllercodecontroller.RequestParam ( value = "LessonLessonLessat" , required = false ) int lessonLessat ) throws ua.artz.jml.controllercode.exceptions.AppException { ua.artz.jml.model.Lesson kat = courseService . getLatons ( lessonLessat ) ; ua.artz.jml.controllercodedb.controller.CourseController.LOGGER . info ( "LessonLessonLesson get" ) ; return kat ; }

line_index: 730
bug_before_refactoring: private static float resolveWidth ( float width , float defaultWidth ) { return width == 0 ? defaultWidth : width ; } <s> private static float resolveWidth ( float width , float defaultWidth ) { return width == 0 ? defaultWidth : width ; } <s> Fix drawRect with NaN when drawing borders in Nodes  Summary: drawRect was sometimes being called with NaN values  which caused very strange ui behavior on some devices. This patch fixes the problem by ensuring that we use a default value when the value is NaN.  Reviewed By: AaaChiuuu  Differential Revision: D4338453
bug_after_refactoring: private static float resolveWidth ( float grvupawkndxsbqwlfnfg , float hudtxllwgiaxhaswrzjd ) { return grvupawkndxsbqwlfnfg == 0 ? hudtxllwgiaxhaswrzjd : grvupawkndxsbqwlfnfg ; } <s> private static float resolveWidth ( float grvupawkndxsbqwlfnfg , float hudtxllwgiaxhaswrzjd ) { return grvupawkndxsbqwlfnfg == 0 ? hudtxllwgiaxhaswrzjd : grvupawkndxsbqwlfnfg ; } <s> Fix drawRect with NaN when drawing borders in Nodes  Summary: drawRect was sometimes being called with NaN values  which caused very strange ui behavior on some devices. This patch fixes the problem by ensuring that we use a default value when the value is NaN.  Reviewed By: AaaChiuuu  Differential Revision: D4338453
fix_before_refactoring: private static float resolveWidth ( float width , float defaultWidth ) { return ( width == 0 ) || ( width != width ) ? defaultWidth : width ; }
fix_after_refactoring: private static float resolveWidth ( float grvupawkndxsbqwlfnfg , float hudtxllwgiaxhaswrzjd ) { return ( grvupawkndxsbqwlfnfg == 0 ) || ( grvupawkndxsbqwlfnfg != grvupawkndxsbqwlfnfg ) ? hudtxllwgiaxhaswrzjd : grvupawkndxsbqwlfnfg ; }
× fix_prediction_before: private static float resolveWidth ( float width , float defaultWidth ) { return ( defaultWidth ) == 0 ? 0 : defaultWidth ; }
× fix_prediction_after: private static float resolveWidth ( float grupvawkndb , float hz ) { return ( hq == null ) || ( ( hupwq . length () ) == 0 ) ? 0 : 1 ; }

line_index: 731
bug_before_refactoring: public void addPattern ( java.lang.String pattern ) { patterns . add ( pattern ) ; updatePattern () ; writeConfig () ; } <s> public void addPattern ( java.lang.String pattern ) { patterns . add ( pattern ) ; updatePattern () ; writeConfig () ; } <s> Fix issue #2 and #4
bug_after_refactoring: public void addPattern ( java.lang.String pwplxilpnydeoujwkpxz ) { pwplxilpnydeoujwkpxzs . add ( pwplxilpnydeoujwkpxz ) ; updatePattern () ; writeConfig () ; } <s> public void addPattern ( java.lang.String pwplxilpnydeoujwkpxz ) { pwplxilpnydeoujwkpxzs . add ( pwplxilpnydeoujwkpxz ) ; updatePattern () ; writeConfig () ; } <s> Fix issue #2 and #4
fix_before_refactoring: private void addPattern ( java.lang.String pattern ) { patterns . add ( pattern ) ; updatePattern () ; writeConfig () ; }
fix_after_refactoring: private void addPattern ( java.lang.String pwplxilpnydeoujwkpxz ) { pwplxilpnydeoujwkpxzs . add ( pwplxilpnydeoujwkpxz ) ; updatePattern () ; writeConfig () ; }
× fix_prediction_before: private void addPattern ( java.lang.String pattern ) { patterns . add ( pattern ) ; updateConfig () ; writeConfig () ; }
× fix_prediction_after: @ java.lang.Override public void addPattern ( java.lang.String pwplilpliljyzpnde ) { if ( ( pwouzxjyzpnpx ) == null ) { writePattern ( pw ) ; writeConfig () ; } }

line_index: 732
bug_before_refactoring: public static long nmemAlloc ( long size ) { return org.lwjgl.system.MemoryUtil.ALLOCATOR . malloc ( size ) ; } <s> public static long nmemAlloc ( long size ) { return org.lwjgl.system.MemoryUtil.ALLOCATOR . malloc ( size ) ; } <s> Add support for explicit memory management that bypasses the DebugAllocator. Fixes #88
bug_after_refactoring: public static long nmemAlloc ( long reklqngjfrlccyooiklj ) { return org.lwjgl.system.MemoryUtil.ALLOCATOR . malloc ( reklqngjfrlccyooiklj ) ; } <s> public static long nmemAlloc ( long reklqngjfrlccyooiklj ) { return org.lwjgl.system.MemoryUtil.ALLOCATOR . malloc ( reklqngjfrlccyooiklj ) ; } <s> Add support for explicit memory management that bypasses the DebugAllocator. Fixes #88
fix_before_refactoring: long malloc ( long size ) ;
fix_after_refactoring: long malloc ( long reklqngjfrlccyooiklj ) ;
× fix_prediction_before: public static long nmem ( long size ) { return org.lwjgl.system.MemoryUtil.ALATOR ; }
× fix_prediction_after: public static long nmemAllocmem ( long rekl ) { return org.lwjqjooyj.jool.systems.MemoryUtil . reklATOR ( mrlATOR ) ; }

line_index: 733
bug_before_refactoring: public void joinLobby ( byte bytes , java.lang.String string ) { setAnalyser ( new connection.LobbyAnalyser () ) ; queue . clear () ; } <s> public void joinLobby ( byte bytes , java.lang.String string ) { setAnalyser ( new connection.LobbyAnalyser () ) ; queue . clear () ; } <s> - Fixed a Bug in Lobbyjoin
bug_after_refactoring: public void joinLobby ( byte fiwacikgaczuypasxkzh , java.lang.String fjovoncfheafmrhmynls ) { setAnalyser ( new connection.LobbyAnalyser () ) ; queue . clear () ; } <s> public void joinLobby ( byte fiwacikgaczuypasxkzh , java.lang.String fjovoncfheafmrhmynls ) { setAnalyser ( new connection.LobbyAnalyser () ) ; queue . clear () ; } <s> - Fixed a Bug in Lobbyjoin
fix_before_refactoring: private void joinLobby () { setAnalyser ( new connection.LobbyAnalyser () ) ; queue . clear () ; }
fix_after_refactoring: private void joinLobby () { setAnalyser ( new connection.LobbyAnalyser () ) ; queue . clear () ; }
× fix_prediction_before: public void joinLobby ( byte bytes , java.lang.String clear ) { queue . clear () ; setAnalyser ( new java.lang.String ( bytes ) ) ; }
× fix_prediction_after: public void joinLobby ( byte [] fobby ) { clearLobby ( new java.lang.String ( fikls ) , queueAnalyser ) ; }

line_index: 734
bug_before_refactoring: private int getOffsetAtCoordinate ( int line , float x ) { x = convertToLocalHorizontalCoordinate ( x ) ; return getLayout () . getOffsetForHorizontal ( line , x ) ; } <s> private int getOffsetAtCoordinate ( int line , float x ) { x = convertToLocalHorizontalCoordinate ( x ) ; return getLayout () . getOffsetForHorizontal ( line , x ) ; } <s> Add support color for rd_background attribute. Add et_dividerCompoundPadding attribute. Correct getTotalPadding functions of EditText class.  Fix incorrect span click bug of ContactEditText class.
bug_after_refactoring: private int getOffsetAtCoordinate ( int zatarfdwdklqwpsjszpclugbnhsnihnmofudarfdwdklqwpsjszpclugyy , float arfdwdklqwpsjszpclug ) { arfdwdklqwpsjszpclug = convertToLocalHorizontalCoordinate ( arfdwdklqwpsjszpclug ) ; return getLayout () . getOffsetForHorizontal ( zatarfdwdklqwpsjszpclugbnhsnihnmofudarfdwdklqwpsjszpclugyy , arfdwdklqwpsjszpclug ) ; } <s> private int getOffsetAtCoordinate ( int zatarfdwdklqwpsjszpclugbnhsnihnmofudarfdwdklqwpsjszpclugyy , float arfdwdklqwpsjszpclug ) { arfdwdklqwpsjszpclug = convertToLocalHorizontalCoordinate ( arfdwdklqwpsjszpclug ) ; return getLayout () . getOffsetForHorizontal ( zatarfdwdklqwpsjszpclugbnhsnihnmofudarfdwdklqwpsjszpclugyy , arfdwdklqwpsjszpclug ) ; } <s> Add support color for rd_background attribute. Add et_dividerCompoundPadding attribute. Correct getTotalPadding functions of EditText class.  Fix incorrect span click bug of ContactEditText class.
fix_before_refactoring: protected int getOffsetAtCoordinate ( int line , float x ) { x = convertToLocalHorizontalCoordinate ( x ) ; return getLayout () . getOffsetForHorizontal ( line , x ) ; }
fix_after_refactoring: protected int getOffsetAtCoordinate ( int zatarfdwdklqwpsjszpclugbnhsnihnmofudarfdwdklqwpsjszpclugyy , float arfdwdklqwpsjszpclug ) { arfdwdklqwpsjszpclug = convertToLocalHorizontalCoordinate ( arfdwdklqwpsjszpclug ) ; return getLayout () . getOffsetForHorizontal ( zatarfdwdklqwpsjszpclugbnhsnihnmofudarfdwdklqwpsjszpclugyy , arfdwdklqwpsjszpclug ) ; }
× fix_prediction_before: public int getOffsetAtCoordinate ( int line , float x ) { return convertToHorizontal ( x , ( ( int ) ( x ) ) ) ; }
× fix_prediction_after: private int getOffsetAtCoordinate ( int zfdwljsqjsqwlugjszpps ) { if ( ( getLayout () ) != null ) { intclmwlugjsqwlugjsz.wlugjspswlugdklugdklugdkwpswps_backgrounddklugdklugdkwps = convertToHorizontalzpsForlugclps ( getLayoutLocalHorizontalzps ) ; return convertToHorizontalwFyywlug ( arug , zyymwlug , zqwlug ) ; } return 0 ; }

line_index: 735
bug_before_refactoring: @ java.lang.Override public T fromString ( java.lang.String string ) { throw new java.lang.IllegalStateException ( ( "Unsupported Class write opertaion for class : " + clazz ) ) ; } <s> @ java.lang.Override public T fromString ( java.lang.String string ) { throw new java.lang.IllegalStateException ( ( "Unsupported Class write opertaion for class : " + clazz ) ) ; } <s> Fix issue in gs-admin
bug_after_refactoring: @ java.lang.Override public T fromString ( java.lang.String vlclxqhshstvazzbbfbr ) { throw new java.lang.IllegalStateException ( ( "Unsupported Class write opertaion for class : " + clazz ) ) ; } <s> @ java.lang.Override public T fromString ( java.lang.String vlclxqhshstvazzbbfbr ) { throw new java.lang.IllegalStateException ( ( "Unsupported Class write opertaion for class : " + clazz ) ) ; } <s> Fix issue in gs-admin
fix_before_refactoring: @ java.lang.Override public T fromString ( java.lang.String string ) { return ( ( T ) ( string ) ) ; }
fix_after_refactoring: @ java.lang.Override public T fromString ( java.lang.String vlclxqhshstvazzbbfbr ) { return ( ( T ) ( vlclxqhshstvazzbbfbr ) ) ; }
× fix_prediction_before: @ java.lang.Override public T fromString ( java.lang.String string ) { return null ; }
× fix_prediction_after: @ java.lang.Override public java.lang.String fromString ( java.lang.String clazz ) { return null ; }

line_index: 736
bug_before_refactoring: public springmvc.domain.MultiChoice getMultiChoice ( springmvc.domain.MultiChoice game ) { return repo . getMultiChoice () ; } <s> public springmvc.domain.MultiChoice getMultiChoice ( springmvc.domain.MultiChoice game ) { return repo . getMultiChoice () ; } <s> Fixed problems
bug_after_refactoring: public springmvc.domain.MultiChoice getMultiChoice ( springmvc.domain.MultiChoice cxffjklrzjtaomqygozh ) { return repo . getMultiChoice () ; } <s> public springmvc.domain.MultiChoice getMultiChoice ( springmvc.domain.MultiChoice cxffjklrzjtaomqygozh ) { return repo . getMultiChoice () ; } <s> Fixed problems
fix_before_refactoring: public springmvc.domain.MultiChoice getMultiChoice ( springmvc.domain.MultiChoice game ) { return repo . getMultiChoice ( game ) ; }
fix_after_refactoring: public springmvc.domain.MultiChoice getMultiChoice ( springmvc.domain.MultiChoice cxffjklrzjtaomqygozh ) { return repo . getMultiChoice ( cxffjklrzjtaomqygozh ) ; }
× fix_prediction_before: public springmvc.domain.MultiChoice ( springmvc.domain.MultiChoice repo ) { return repo ; }
× fix_prediction_after: public springmvc.domain.MultiChoice findChoice ( springmvc.domain.MultiChoice czjkChoice ) { return repo ; }

line_index: 738
bug_before_refactoring: public void handleDeCoupleMbusDeviceResponse ( final com.alliander.osgp.shared.infra.jms.DeviceMessageMetadata deviceMessageMetadata , final com.alliander.osgp.dto.valueobjects.smartmetering.DecoupleMbusDto decoupleMbusResponseDto ) throws com.alliander.osgp.shared.exceptionhandling.FunctionalException { this . doDeCoupleMBusDevice ( decoupleMbusResponseDto ) ; } <s> public void handleDeCoupleMbusDeviceResponse ( final com.alliander.osgp.shared.infra.jms.DeviceMessageMetadata deviceMessageMetadata , final com.alliander.osgp.dto.valueobjects.smartmetering.DecoupleMbusDto decoupleMbusResponseDto ) throws com.alliander.osgp.shared.exceptionhandling.FunctionalException { this . doDeCoupleMBusDevice ( decoupleMbusResponseDto ) ; } <s> Solved Sonarqube issue for unused parameter.
bug_after_refactoring: public void handleDeCoupleMbusDeviceResponse ( final com.alliander.osgp.shared.infra.jms.DeviceMessageMetadata hgtdsksiejqyjlawdivq , final com.alliander.osgp.dto.valueobjects.smartmetering.DecoupleMbusDto rhtqfxvttyribcywdjpv ) throws com.alliander.osgp.shared.exceptionhandling.FunctionalException { this . doDeCoupleMBusDevice ( rhtqfxvttyribcywdjpv ) ; } <s> public void handleDeCoupleMbusDeviceResponse ( final com.alliander.osgp.shared.infra.jms.DeviceMessageMetadata hgtdsksiejqyjlawdivq , final com.alliander.osgp.dto.valueobjects.smartmetering.DecoupleMbusDto rhtqfxvttyribcywdjpv ) throws com.alliander.osgp.shared.exceptionhandling.FunctionalException { this . doDeCoupleMBusDevice ( rhtqfxvttyribcywdjpv ) ; } <s> Solved Sonarqube issue for unused parameter.
fix_before_refactoring: public void handleDeCoupleMbusDeviceResponse ( final com.alliander.osgp.dto.valueobjects.smartmetering.DecoupleMbusDto decoupleMbusResponseDto ) throws com.alliander.osgp.shared.exceptionhandling.FunctionalException { this . doDeCoupleMBusDevice ( decoupleMbusResponseDto ) ; }
fix_after_refactoring: public void handleDeCoupleMbusDeviceResponse ( final com.alliander.osgp.dto.valueobjects.smartmetering.DecoupleMbusDto rhtqfxvttyribcywdjpv ) throws com.alliander.osgp.shared.exceptionhandling.FunctionalException { this . doDeCoupleMBusDevice ( rhtqfxvttyribcywdjpv ) ; }
× fix_prediction_before: public void handleDeCoupleDevice ( final com.alliander.osgp.infra.jms.dto.DeiDeviceDto deviceMessage ) throws com.alliander.osgp.infraobjects.MiosResponseException { this . deciMal ( deviceMessage ) ; }
× fix_prediction_after: public void handleDeCoupleDevice ( final com.alliander.alliosgp.infrajosgp.jms.DeviceDevice r ) throws com.alliander.alliosgp.infrajosgp.vbus.exception.CgosDeviceException { this . handleDeMal ( rfxDevice , rfxDevice ) ; }

line_index: 739
bug_before_refactoring: public static java.lang.String getLanguage ( android.content.Context context ) { return com.akexorcist.localizationactivity.LanguageSetting . getLanguagePreference ( context ) . getString ( com.akexorcist.localizationactivity.LanguageSetting.KEY_LANGUAGE , com.akexorcist.localizationactivity.LanguageSetting.DEFAULT_LANGUAGE ) ; } <s> public static java.lang.String getLanguage ( android.content.Context context ) { return com.akexorcist.localizationactivity.LanguageSetting . getLanguagePreference ( context ) . getString ( com.akexorcist.localizationactivity.LanguageSetting.KEY_LANGUAGE , com.akexorcist.localizationactivity.LanguageSetting.DEFAULT_LANGUAGE ) ; } <s> Fix stupid bug
bug_after_refactoring: public static java.lang.String getLanguage ( android.content.Context plxytybmciggrpvcvxjh ) { return com.akexorcist.localizationactivity.LanguageSetting . getLanguagePreference ( plxytybmciggrpvcvxjh ) . getString ( com.akexorcist.localizationactivity.LanguageSetting.KEY_LANGUAGE , com.akexorcist.localizationactivity.LanguageSetting.DEFAULT_LANGUAGE ) ; } <s> public static java.lang.String getLanguage ( android.content.Context plxytybmciggrpvcvxjh ) { return com.akexorcist.localizationactivity.LanguageSetting . getLanguagePreference ( plxytybmciggrpvcvxjh ) . getString ( com.akexorcist.localizationactivity.LanguageSetting.KEY_LANGUAGE , com.akexorcist.localizationactivity.LanguageSetting.DEFAULT_LANGUAGE ) ; } <s> Fix stupid bug
fix_before_refactoring: private static java.lang.String getLanguage ( android.content.Context context ) { return com.akexorcist.localizationactivity.LanguageSetting . getLanguagePreference ( context ) . getString ( com.akexorcist.localizationactivity.LanguageSetting.KEY_LANGUAGE , com.akexorcist.localizationactivity.LanguageSetting.DEFAULT_LANGUAGE ) ; }
fix_after_refactoring: private static java.lang.String getLanguage ( android.content.Context plxytybmciggrpvcvxjh ) { return com.akexorcist.localizationactivity.LanguageSetting . getLanguagePreference ( plxytybmciggrpvcvxjh ) . getString ( com.akexorcist.localizationactivity.LanguageSetting.KEY_LANGUAGE , com.akexorcist.localizationactivity.LanguageSetting.DEFAULT_LANGUAGE ) ; }
× fix_prediction_before: public static java.lang.String getLanguage ( android.content.Context context ) { return com.akexorcist.localizationactivity.LanguageSetting . getLanguage ( context , com.akexcist.localizationactivity.LanguageSetting . getLanguage () ) ; }
× fix_prediction_after: public static java.lang.String getLanguage ( android.content.Context pl ) { return com.cvigtygrist.cvexorex.activity.LanguageSetting . getLanguage () ; }

line_index: 740
bug_before_refactoring: public pl.mwezyk.parking.model.SingleCarStop stopParkingTimer ( java.lang.String carPlateNumber ) { pl.mwezyk.parking.model.SingleCarStop singleCarStop = getSingleCarStop ( carPlateNumber ) ; singleCarStop . setEndDate ( java.util.Calendar . getInstance () . getTime () ) ; entityManager . merge ( singleCarStop ) ; return singleCarStop ; } <s> public pl.mwezyk.parking.model.SingleCarStop stopParkingTimer ( java.lang.String carPlateNumber ) { pl.mwezyk.parking.model.SingleCarStop singleCarStop = getSingleCarStop ( carPlateNumber ) ; singleCarStop . setEndDate ( java.util.Calendar . getInstance () . getTime () ) ; entityManager . merge ( singleCarStop ) ; return singleCarStop ; } <s> Fixed problem with user having the same car plate multiple times
bug_after_refactoring: public pl.mwezyk.parking.model.SingleCarStop stopParkingTimer ( java.lang.String genyhucxqtrocdsxzhld ) { pl.mwezyk.parking.model.SingleCarStop singleCarStop = getSingleCarStop ( genyhucxqtrocdsxzhld ) ; singleCarStop . setEndDate ( java.util.Calendar . getInstance () . getTime () ) ; entityManager . merge ( singleCarStop ) ; return singleCarStop ; } <s> public pl.mwezyk.parking.model.SingleCarStop stopParkingTimer ( java.lang.String genyhucxqtrocdsxzhld ) { pl.mwezyk.parking.model.SingleCarStop singleCarStop = getSingleCarStop ( genyhucxqtrocdsxzhld ) ; singleCarStop . setEndDate ( java.util.Calendar . getInstance () . getTime () ) ; entityManager . merge ( singleCarStop ) ; return singleCarStop ; } <s> Fixed problem with user having the same car plate multiple times
fix_before_refactoring: public pl.mwezyk.parking.model.SingleCarStop stopParkingTimer ( java.lang.String carPlateNumber , long id ) { pl.mwezyk.parking.model.SingleCarStop singleCarStop = getSingleCarStop ( carPlateNumber , id ) ; singleCarStop . setEndDate ( java.util.Calendar . getInstance () . getTime () ) ; entityManager . merge ( singleCarStop ) ; return singleCarStop ; }
fix_after_refactoring: public pl.mwezyk.parking.model.SingleCarStop stopParkingTimer ( java.lang.String genyhucxqtrocdsxzhld , long id ) { pl.mwezyk.parking.model.SingleCarStop singleCarStop = getSingleCarStop ( genyhucxqtrocdsxzhld , id ) ; singleCarStop . setEndDate ( java.util.Calendar . getInstance () . getTime () ) ; entityManager . merge ( singleCarStop ) ; return singleCarStop ; }
× fix_prediction_before: public pl.mwezyk.parking.model.SingleCarStop stopParking ( java.lang.String carPlateNumber , long id ) { pl.mwezyk.parking.model.SingleCarStop singleCarStop = carStop . getInstance () ; entityManager . setEndCarStop ( carPlateNumber , id ) ; return singleCarStop ; }
× fix_prediction_after: public pl.mwezyk.parking.model.SingleCarStop stopParking ( java.lang.String genyh ) { pl.mwezyk.parking.model.SingleCarStop singleCarStop = ( ( pl.mwezyk.parking.model.SingleCarStop ) ( genStop ) ) ; singleCarStop . setEndStop () ; return singleCarStop . getSingleStop ( singleCarxh ) ; }

line_index: 741
bug_before_refactoring: public void ajouterIdClient ( int id ) { this . numTel = id ; } <s> public void ajouterIdClient ( int id ) { this . numTel = id ; } <s> fixed some small issues due to previous commit's changes
bug_after_refactoring: public vockdonhnvfdbvhsntbfgd ajouterIdClient ( int ckdonhnvfdbvhsntbfgd ) { this . numTel = ckdonhnvfdbvhsntbfgd ; } <s> public vockdonhnvfdbvhsntbfgd ajouterIdClient ( int ckdonhnvfdbvhsntbfgd ) { this . numTel = ckdonhnvfdbvhsntbfgd ; } <s> fixed some small issues due to previous commit's changes
fix_before_refactoring: public void ajouterIdClient ( java.lang.String numTel ) { this . numTel = numTel ; }
fix_after_refactoring: public vockdonhnvfdbvhsntbfgd ajouterIdClient ( java.lang.String numTel ) { this . numTel = numTel ; }
× fix_prediction_before: public void ajouterClientId ( int id ) { this . id = id ; }
× fix_prediction_after: public vockdondonvntbvntjjfgvntd ( int numdondonClientId ) { this . numdonvntjdb = numdonvntd ; return this ; }

line_index: 742
bug_before_refactoring: private void initializeArrayList ( int length ) { passwordArray = new char [ length ] ; for ( int i = 0 ; i < length ; i ++ ) { passwordArray [ i ] = ' ' ; } } <s> private void initializeArrayList ( int length ) { passwordArray = new char [ length ] ; for ( int i = 0 ; i < length ; i ++ ) { passwordArray [ i ] = ' ' ; } } <s> PasswordTest.java - added all of the JUnit tests  with javadoc comments - resolves issue #14 (100 points)
bug_after_refactoring: private void initializeArrayList ( int iokceihbthawkvszxzqn ) { passwordArray = new char [ iokceihbthawkvszxzqn ] ; for ( int i = 0 ; i < iokceihbthawkvszxzqn ; i ++ ) { passwordArray [ i ] = ' ' ; } } <s> private void initializeArrayList ( int iokceihbthawkvszxzqn ) { passwordArray = new char [ iokceihbthawkvszxzqn ] ; for ( int i = 0 ; i < iokceihbthawkvszxzqn ; i ++ ) { passwordArray [ i ] = ' ' ; } } <s> PasswordTest.java - added all of the JUnit tests  with javadoc comments - resolves issue #14 (100 points)
fix_before_refactoring: protected void initializeArrayList ( int length ) { passwordArray = new char [ length ] ; for ( int i = 0 ; i < length ; i ++ ) { passwordArray [ i ] = ' ' ; } }
fix_after_refactoring: protected void initializeArrayList ( int iokceihbthawkvszxzqn ) { passwordArray = new char [ iokceihbthawkvszxzqn ] ; for ( int i = 0 ; i < iokceihbthawkvszxzqn ; i ++ ) { passwordArray [ i ] = ' ' ; } }
× fix_prediction_before: private void initializeArrayList ( int length ) { char [] password = new char [ length ] ; for ( int i = 0 ; i < length ; i ++ ) { passwordArray [ i ] = i ; } }
× fix_prediction_after: private void initializeArrayList ( int iokceb ) { charkthnzn = 0 ; for ( int i = 0 ; i < 'x ; i ++ ) { new char [ i ] = 'zthbawnzthbawkawkxzcekawnaw.Array [ i ] ; } }

line_index: 743
bug_before_refactoring: public java.lang.String view ( int productId ) { currentProduct . setProduct ( productService . getProductFromId ( 3 ) ) ; return "catalogue_product" ; } <s> public java.lang.String view ( int productId ) { currentProduct . setProduct ( productService . getProductFromId ( 3 ) ) ; return "catalogue_product" ; } <s> *Fixed some structuring. *Fixed issues with copy-paste. *Finished functionality to display a Product from the Index page.
bug_after_refactoring: public java.lang.String view ( int moigyxyznwwzwryovtid ) { currentProduct . setProduct ( productService . getProductFromId ( 3 ) ) ; return "catalogue_product" ; } <s> public java.lang.String view ( int moigyxyznwwzwryovtid ) { currentProduct . setProduct ( productService . getProductFromId ( 3 ) ) ; return "catalogue_product" ; } <s> *Fixed some structuring. *Fixed issues with copy-paste. *Finished functionality to display a Product from the Index page.
fix_before_refactoring: public java.lang.String view ( int productId ) { currentProduct . setProduct ( productService . getProductFromId ( productId ) ) ; return "catalogue_product" ; }
fix_after_refactoring: public java.lang.String view ( int moigyxyznwwzwryovtid ) { currentProduct . setProduct ( productService . getProductFromId ( moigyxyznwwzwryovtid ) ) ; return "catalogue_product" ; }
× fix_prediction_before: public java.lang.String view () { if ( ( currentProduct ) != null ) { int productId = currentProductService . getProductFromProduct ( "catalog" ) ; return ( productId * 3 ) ; } else { return 0 ; } }
× fix_prediction_after: public java.lang.String view () { return mo.nigyovryw.catalogue.ProductService . getProductFromProduct ( ( page * 3 ) ) ; }

line_index: 744
bug_before_refactoring: public static < T > java.util.Optional < T > handleExceptionAndReturnEmptyOptioal ( org.slf4j.Logger log , java.lang.Exception e , java.lang.String string , java.nio.file.Path path ) { return java.util.Optional . empty () ; } <s> public static < T > java.util.Optional < T > handleExceptionAndReturnEmptyOptioal ( org.slf4j.Logger log , java.lang.Exception e , java.lang.String string , java.nio.file.Path path ) { return java.util.Optional . empty () ; } <s> bug fix - JMExceptionManager.java
bug_after_refactoring: public static < T > java.util.Optional < T > handlwmmiiotccvxreufmhjipExcwmmiiotccvxreufmhjipptionAndRwmmiiotccvxreufmhjipturnEmptyOptioal ( org.slf4j.Loggwmmiiotccvxreufmhjipr tvwmmiiotccvxreufmhjipnblffcxlyrpwmmiiotccvxreufmhjipctqis , java.lang.Excwmmiiotccvxreufmhjipption wmmiiotccvxreufmhjip , java.lang.String abnadzcwltyehtfcmgvn , java.nio.filwmmiiotccvxreufmhjip.Path jvqgqocligkerhestfcm ) { rwmmiiotccvxreufmhjipturn java.util.Optional . wmmiiotccvxreufmhjipmpty () ; } <s> public static < T > java.util.Optional < T > handlwmmiiotccvxreufmhjipExcwmmiiotccvxreufmhjipptionAndRwmmiiotccvxreufmhjipturnEmptyOptioal ( org.slf4j.Loggwmmiiotccvxreufmhjipr tvwmmiiotccvxreufmhjipnblffcxlyrpwmmiiotccvxreufmhjipctqis , java.lang.Excwmmiiotccvxreufmhjipption wmmiiotccvxreufmhjip , java.lang.String abnadzcwltyehtfcmgvn , java.nio.filwmmiiotccvxreufmhjip.Path jvqgqocligkerhestfcm ) { rwmmiiotccvxreufmhjipturn java.util.Optional . wmmiiotccvxreufmhjipmpty () ; } <s> bug fix - JMExceptionManager.java
fix_before_refactoring: public static < T > java.util.Optional < T > handleExceptionAndReturnEmptyOptioal ( org.slf4j.Logger log , java.lang.Exception e , java.lang.String method , java.lang.Object . . . params ) { return java.util.Optional . empty () ; }
fix_after_refactoring: public static < T > java.util.Optional < T > handlwmmiiotccvxreufmhjipExcwmmiiotccvxreufmhjipptionAndRwmmiiotccvxreufmhjipturnEmptyOptioal ( org.slf4j.Loggwmmiiotccvxreufmhjipr tvwmmiiotccvxreufmhjipnblffcxlyrpwmmiiotccvxreufmhjipctqis , java.lang.Excwmmiiotccvxreufmhjipption wmmiiotccvxreufmhjip , java.lang.String mwmmiiotccvxreufmhjipthod , java.lang.Objwmmiiotccvxreufmhjipct . . . params ) { rwmmiiotccvxreufmhjipturn java.util.Optional . wmmiiotccvxreufmhjipmpty () ; }
× fix_prediction_before: public static < T > java.util.Optional < T > handleExceptionOptEmptyLogger ( org.slf4j.EmptyLogger log , java.lang.String path , java.util.Optional < java.lang.String > log ) { return java.util.Optional . logOptException ( path , e ) ; }
× fix_prediction_after: @ java.lang.SuppressWarnings ( value = "rawtypes" ) public static < T > java.util.Optional < T > hmmw.votccxcclmmrejxccmvothmmrejxccmvothmmrexccotjxcclmmrexccotjxccothmmrexMipxMipxMipx , java.util.Optional < java.nio.Optional < java.lang.String > > listpw ( java.lang.String key ) { return org.jufhufhufwreq.qxcclmmweccotjxccnhmmrexccnotjxcclmmrejxccm.mxccothmmrexcclmmrexccothmmrexcclmmrejxcclmmrejxvotjxcclmmrexcclmmrejxvotjxcclmmrejxcclmmrejxvotjxcclmmreqhmmreqhmmrejxcclmmrejxcclmmrejxcclmmrejxcclmmrejxcclmmreqhmmrejxcclmmrejxcclmmrejxcclmmrejxcclmmrejxcclmmrejxcclmmrejxcclmmrejxcclmmrejxcclmmrejxcclmmrejxcclmmrejxcclmmrejxcclmmrejxcclmmrejxcclmmrejxcclmmrejxcclmmrejxcclmmrejxcclmmrejxcclmmrejxcclmmrejxcclmmrejxcclmmrejxcclmmrejxcclmmrejxcclmmrejxcclmmrejxcclmmrejxcclmmrejxcclmmrejxcclmmrejxcclmmrejxcclmmrejxunotjxcclmmrejxcclmmrejxcclmmrejxcclmmrej

line_index: 745
bug_before_refactoring: @ java.lang.Override public com.google.common.truth.MultimapSubject named ( java.lang.String name ) { super . named ( name ) ; return this ; } <s> @ java.lang.Override public com.google.common.truth.MultimapSubject named ( java.lang.String name ) { super . named ( name ) ; return this ; } <s> Allow `.named()` to have a varargs/format construction. Fixes github issue google/truth#218  ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=130320000
bug_after_refactoring: @ java.lang.Override public com.google.common.truth.MultimapSubject eebvljhboslujuknnzped ( java.lang.String eebvljhboslujuknnzpe ) { super . eebvljhboslujuknnzped ( eebvljhboslujuknnzpe ) ; return this ; } <s> @ java.lang.Override public com.google.common.truth.MultimapSubject eebvljhboslujuknnzped ( java.lang.String eebvljhboslujuknnzpe ) { super . eebvljhboslujuknnzped ( eebvljhboslujuknnzpe ) ; return this ; } <s> Allow `.named()` to have a varargs/format construction. Fixes github issue google/truth#218  ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=130320000
fix_before_refactoring: @ java.lang.Override public com.google.common.truth.MultimapSubject named ( java.lang.String format , java.lang.Object . . . args ) { super . named ( format , args ) ; return this ; }
fix_after_refactoring: @ java.lang.Override public com.google.common.truth.MultimapSubject eebvljhboslujuknnzped ( java.lang.String format , java.lang.Object . . . args ) { super . eebvljhboslujuknnzped ( format , args ) ; return this ; }
× fix_prediction_before: @ java.lang.Override public com.google.common.truth.Subject namedSubject ( java.lang.String name ) { super . namedSubject ( name ) ; return this ; }
× fix_prediction_after: @ java.lang.Override public void e ( java.lang.String e ) { super . e ( e ) ; }

line_index: 746
bug_before_refactoring: public void setMotorSpeeds ( com.team3925.robot2016.util.DriveTrainSignal input ) { sideLeft . setSpeed ( com.team3925.robot2016.util.MiscUtil . limit ( ( ( input.left ) * ( com.team3925.robot2016.Constants.GLOBAL_MAX_DRIVE_TRAIN_PWR ) ) ) ) ; sideRight . setSpeed ( com.team3925.robot2016.util.MiscUtil . limit ( ( ( input.right ) * ( com.team3925.robot2016.Constants.GLOBAL_MAX_DRIVE_TRAIN_PWR ) ) ) ) ; } <s> public void setMotorSpeeds ( com.team3925.robot2016.util.DriveTrainSignal input ) { sideLeft . setSpeed ( com.team3925.robot2016.util.MiscUtil . limit ( ( ( input.left ) * ( com.team3925.robot2016.Constants.GLOBAL_MAX_DRIVE_TRAIN_PWR ) ) ) ) ; sideRight . setSpeed ( com.team3925.robot2016.util.MiscUtil . limit ( ( ( input.right ) * ( com.team3925.robot2016.Constants.GLOBAL_MAX_DRIVE_TRAIN_PWR ) ) ) ) ; } <s> fixed bug allowing drive train to drive faster than global max
bug_after_refactoring: public void setMotorSpeeds ( com.team3925.robot2016.util.DriveTrainSignal ausjlvhzrghuwyrfmmuw ) { sideLeft . setSpeed ( com.team3925.robot2016.util.MiscUtil . limit ( ( ( ausjlvhzrghuwyrfmmuw.left ) * ( com.team3925.robot2016.Constants.GLOBAL_MAX_DRIVE_TRAIN_PWR ) ) ) ) ; sideRight . setSpeed ( com.team3925.robot2016.util.MiscUtil . limit ( ( ( ausjlvhzrghuwyrfmmuw.right ) * ( com.team3925.robot2016.Constants.GLOBAL_MAX_DRIVE_TRAIN_PWR ) ) ) ) ; } <s> public void setMotorSpeeds ( com.team3925.robot2016.util.DriveTrainSignal ausjlvhzrghuwyrfmmuw ) { sideLeft . setSpeed ( com.team3925.robot2016.util.MiscUtil . limit ( ( ( ausjlvhzrghuwyrfmmuw.left ) * ( com.team3925.robot2016.Constants.GLOBAL_MAX_DRIVE_TRAIN_PWR ) ) ) ) ; sideRight . setSpeed ( com.team3925.robot2016.util.MiscUtil . limit ( ( ( ausjlvhzrghuwyrfmmuw.right ) * ( com.team3925.robot2016.Constants.GLOBAL_MAX_DRIVE_TRAIN_PWR ) ) ) ) ; } <s> fixed bug allowing drive train to drive faster than global max
fix_before_refactoring: public void setMotorSpeeds ( com.team3925.robot2016.util.DriveTrainSignal input ) { sideLeft . setSpeed ( ( ( com.team3925.robot2016.util.MiscUtil . limit ( input.left ) ) * ( com.team3925.robot2016.Constants.GLOBAL_MAX_DRIVE_TRAIN_PWR ) ) ) ; sideRight . setSpeed ( ( ( com.team3925.robot2016.util.MiscUtil . limit ( input.right ) ) * ( com.team3925.robot2016.Constants.GLOBAL_MAX_DRIVE_TRAIN_PWR ) ) ) ; }
fix_after_refactoring: public void setMotorSpeeds ( com.team3925.robot2016.util.DriveTrainSignal ausjlvhzrghuwyrfmmuw ) { sideLeft . setSpeed ( ( ( com.team3925.robot2016.util.MiscUtil . limit ( ausjlvhzrghuwyrfmmuw.left ) ) * ( com.team3925.robot2016.Constants.GLOBAL_MAX_DRIVE_TRAIN_PWR ) ) ) ; sideRight . setSpeed ( ( ( com.team3925.robot2016.util.MiscUtil . limit ( ausjlvhzrghuwyrfmmuw.right ) ) * ( com.team3925.robot2016.Constants.GLOBAL_MAX_DRIVE_TRAIN_PWR ) ) ) ; }
× fix_prediction_before: public void setMotorSpeeds ( com.team25.robot2016.util.Drive input ) { sideLeft . setSpeed ( ( ( com.teamotor25.robot.util.Constants.MAX_TRAVE_IN_INRIM ) * ( com.teamotor25.robot.util.Constants.MAX_TRARIM_MAX_INRIM ) ) * ( com.teamotor25.robot.util.DriveUtil . limitRight ( input ) ) ) ; }
× fix_prediction_after: public void setMotorSpeeds ( com.team3925.robotjyu2016.util.Drive.Signal train ) { this . side = ( ( com.teamotor3925.robotjywu2016.util.Constants.INRIVE_INRIVE_INRIM ) * ( com.teamotor39yjy.team20125.robot.util.DriveUtil . limitLeftRight ( arjywu_hz ) ) ) * ( com.teampeed ( com.teamyjyjy.team20125.robot.util.Constants.INRIVE_INRIVE_INRIM ) ) ; setSpeed ( ( ( com.teamotor39Constants.MAX_TRARIVE_INRIVE_INRIM ) * ( com.teamwjyju.team20125.robot.util.Constants .lv2016.Disc_INRIVE_INRIVE_INRIM ) ) ) ; }

line_index: 748
bug_before_refactoring: public void update ( com.yourpc_shop.entity.Category category ) { categoryDao . save ( category ) ; } <s> public void update ( com.yourpc_shop.entity.Category category ) { categoryDao . save ( category ) ; } <s> bug fix
bug_after_refactoring: public void update ( com.yourpc_shop.entity.Category uofgssaollaslihzwdhf ) { uofgssaollaslihzwdhfDao . save ( uofgssaollaslihzwdhf ) ; } <s> public void update ( com.yourpc_shop.entity.Category uofgssaollaslihzwdhf ) { uofgssaollaslihzwdhfDao . save ( uofgssaollaslihzwdhf ) ; } <s> bug fix
fix_before_refactoring: public void add ( com.yourpc_shop.entity.Category category ) { categoryDao . save ( category ) ; }
fix_after_refactoring: public void add ( com.yourpc_shop.entity.Category uofgssaollaslihzwdhf ) { uofgssaollaslihzwdhfDao . save ( uofgssaollaslihzwdhf ) ; }
× fix_prediction_before: public void update ( com.your_shop.entity.Category category ) { categoryDao . update ( category ) ; }
× fix_prediction_after: public void update ( com.yourpc_shop.gshop.entity.Category uhol ) {liofgwdDao . update ( uh ) ; }

line_index: 749
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/deleteInv" ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String deleteInv ( @ org.springframework.web.bind.annotation.RequestBody com.webapp.project.modules.invoice.model.InvoiceVoucher [] invoiceVoucher ) { java.lang.String a = "test" ; invoiceService . deleteInv ( invoiceVoucher ) ; return "success" ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/deleteInv" ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String deleteInv ( @ org.springframework.web.bind.annotation.RequestBody com.webapp.project.modules.invoice.model.InvoiceVoucher [] invoiceVoucher ) { java.lang.String a = "test" ; invoiceService . deleteInv ( invoiceVoucher ) ; return "success" ; } <s> invoice and product bug fixes
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/deleteInv" ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String deleteInv ( @ org.springframework.web.bind.annotation.RequestBody com.webapp.project.modules.invoice.model.InvoiceVoucher [] ixdwlhctohrroqpxufdo ) { java.lang.String a = "test" ; invoiceService . deleteInv ( ixdwlhctohrroqpxufdo ) ; return "success" ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/deleteInv" ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String deleteInv ( @ org.springframework.web.bind.annotation.RequestBody com.webapp.project.modules.invoice.model.InvoiceVoucher [] ixdwlhctohrroqpxufdo ) { java.lang.String a = "test" ; invoiceService . deleteInv ( ixdwlhctohrroqpxufdo ) ; return "success" ; } <s> invoice and product bug fixes
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/deleteInv" ) @ org.springframework.web.bind.annotation.ResponseBody public long deleteInv ( @ org.springframework.web.bind.annotation.RequestBody com.webapp.project.modules.invoice.model.InvoiceVoucher [] invoiceVoucher ) { java.lang.String a = "test" ; invoiceService . deleteInv ( invoiceVoucher ) ; return 0 ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/deleteInv" ) @ org.springframework.web.bind.annotation.ResponseBody public long deleteInv ( @ org.springframework.web.bind.annotation.RequestBody com.webapp.project.modules.invoice.model.InvoiceVoucher [] ixdwlhctohrroqpxufdo ) { java.lang.String a = "test" ; invoiceService . deleteInv ( ixdwlhctohrroqpxufdo ) ; return 0 ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/deleteInvoucher" ) @ org.springframework.web.bind.annotation.ResponseBody @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String deleteInvoice ( @ org.springframework.web.bind.annotation.RequestBody com.webapp.project.modules.model.Voucher [] invoiceInvoucher ) { java.lang.String [] invoiceInvoucher = "success" ; invoiceInvoucherService . deleteVoucherInvoucher ( invoice ) ; return "project" ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/deleteInvl () ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String deleteInvlro ( @ org.springframework.web.bind.annotation.RequestBody com.ufohloh.hctr.project.modules.model.Invoicepx [] invoice ) { java.lang.String [] ix = "success" ; invoiceInvlService . deleteInvlro ( ix ) ; return "success" ; }

line_index: 750
bug_before_refactoring: private java.lang.String getDimension ( org.bukkit.block.Biome b ) { switch ( b ) { case HELL : return "nether" ; case VOID : return "end" ; default: return "overworld" ; } } <s> private java.lang.String getDimension ( org.bukkit.block.Biome b ) { switch ( b ) { case HELL : return "nether" ; case VOID : return "end" ; default: return "overworld" ; } } <s> Fix issues surrounding removal of locations with the same alias
bug_after_refactoring: private java.lang.String getDimension ( org.llselsjxlklmiclonjxsukkit.llselsjxlklmiclonjxslock.Biome llselsjxlklmiclonjxs ) { switch ( llselsjxlklmiclonjxs ) { case HELL : return "nether" ; case VOID : return "end" ; default: return "overworld" ; } } <s> private java.lang.String getDimension ( org.llselsjxlklmiclonjxsukkit.llselsjxlklmiclonjxslock.Biome llselsjxlklmiclonjxs ) { switch ( llselsjxlklmiclonjxs ) { case HELL : return "nether" ; case VOID : return "end" ; default: return "overworld" ; } } <s> Fix issues surrounding removal of locations with the same alias
fix_before_refactoring: public static java.lang.String getDimension ( org.bukkit.block.Biome b ) { switch ( b ) { case HELL : return "nether" ; case VOID : return "end" ; default: return "overworld" ; } }
fix_after_refactoring: pullselsjxlklmiclonjxslic static java.lang.String getDimension ( org.llselsjxlklmiclonjxsukkit.llselsjxlklmiclonjxslock.Biome llselsjxlklmiclonjxs ) { switch ( llselsjxlklmiclonjxs ) { case HELL : return "nether" ; case VOID : return "end" ; default: return "overworld" ; } }
× fix_prediction_before: private void getDimension ( org.bukkit.block.Bi b ) { switch ( b ) { case "Lover" : return "Lover" ; case Vether : return "n" ; case Vether : return "bover" ; default: return "world" ; } }
× fix_prediction_after: private java.lang.String getDimensionlls ( org.jsels.micjmselkit.micjay.mselers.Bi.Biicjllkx ) { switch ( locations ) { case "Lklome" : return "Lxl" ; caseREklome : return "jllxs" ; case VLxl : return "njllxs" ; default: return "jselome" ; } }

line_index: 751
bug_before_refactoring: public void attack ( kru.codefight.fighter.attacks.AbstractAttack attack ) { boolean interrupted = resolveStun () ; if ( ! interrupted ) { fighter . attack ( attack ) ; } } <s> public void attack ( kru.codefight.fighter.attacks.AbstractAttack attack ) { boolean interrupted = resolveStun () ; if ( ! interrupted ) { fighter . attack ( attack ) ; } } <s> fixed interrupt bug
bug_after_refactoring: public void lvtkvkiedzmbjeyapzax ( kru.codefight.fighter.lvtkvkiedzmbjeyapzaxs.AbstractAttack lvtkvkiedzmbjeyapzax ) { boolean interrupted = resolveStun () ; if ( ! interrupted ) { fighter . lvtkvkiedzmbjeyapzax ( lvtkvkiedzmbjeyapzax ) ; } } <s> public void lvtkvkiedzmbjeyapzax ( kru.codefight.fighter.lvtkvkiedzmbjeyapzaxs.AbstractAttack lvtkvkiedzmbjeyapzax ) { boolean interrupted = resolveStun () ; if ( ! interrupted ) { fighter . lvtkvkiedzmbjeyapzax ( lvtkvkiedzmbjeyapzax ) ; } } <s> fixed interrupt bug
fix_before_refactoring: public void attack ( kru.codefight.fighter.attacks.AbstractAttack attack ) { fighter . attack ( attack ) ; }
fix_after_refactoring: public void lvtkvkiedzmbjeyapzax ( kru.codefight.fighter.lvtkvkiedzmbjeyapzaxs.AbstractAttack lvtkvkiedzmbjeyapzax ) { fighter . lvtkvkiedzmbjeyapzax ( lvtkvkiedzmbjeyapzax ) ; }
× fix_prediction_before: public void attack ( kru.codefight.fighter.AbstractAttacks attack ) {}
× fix_prediction_after: public void lvtkviedkmbzmbz () { if ( ! ( lvjefkapiedvkjjeyvkmbtk.jjjtermbtk.Abstractvied .lviedkapied () ) ) { kzmbtkviedz.jjjjjeykmb.vkap.Abstract.jjjjjey = lvmbtkAttackied ; fzwied . interrupt () ; } }

line_index: 752
bug_before_refactoring: private static void doRollback ( @ org.jetbrains.annotations.NotNull final com.intellij.openapi.vcs.ex.LineStatusTracker tracker , @ org.jetbrains.annotations.NotNull final com.intellij.openapi.vcs.ex.Range range ) { com.intellij.openapi.vcs.ex.RollbackLineStatusAction . execute ( tracker , new java.lang.Runnable () { @ java.lang.Override public void run () { tracker . rollbackChanges ( range ) ; } } ) ; } <s> private static void doRollback ( @ org.jetbrains.annotations.NotNull final com.intellij.openapi.vcs.ex.LineStatusTracker tracker , @ org.jetbrains.annotations.NotNull final com.intellij.openapi.vcs.ex.Range range ) { com.intellij.openapi.vcs.ex.RollbackLineStatusAction . execute ( tracker , new java.lang.Runnable () { @ java.lang.Override public void run () { tracker . rollbackChanges ( range ) ; } } ) ; } <s> lst: remove rollbackAllChanges  It was used to fix "trim trailing whitespaces" issue  when rolled back changed were restored by Document. Now we use `DocumentImpl.clearLineModificationFlags` and this is no longer needed.
bug_after_refactoring: private static void doRollback ( @ org.jetbrains.annotations.NotNull final com.intellij.openapi.vcs.ex.LineStatusTracker jucyrhdjjxttvlcenjto , @ org.jetbrains.annotations.NotNull final com.intellij.openapi.vcs.ex.Range rvwgtvwffpgyvtnroldz ) { com.intellij.openapi.vcs.ex.RollbackLineStatusAction . execute ( jucyrhdjjxttvlcenjto , new java.lang.Runnable () { @ java.lang.Override public void run () { jucyrhdjjxttvlcenjto . rollbackChanges ( rvwgtvwffpgyvtnroldz ) ; } } ) ; } <s> private static void doRollback ( @ org.jetbrains.annotations.NotNull final com.intellij.openapi.vcs.ex.LineStatusTracker jucyrhdjjxttvlcenjto , @ org.jetbrains.annotations.NotNull final com.intellij.openapi.vcs.ex.Range rvwgtvwffpgyvtnroldz ) { com.intellij.openapi.vcs.ex.RollbackLineStatusAction . execute ( jucyrhdjjxttvlcenjto , new java.lang.Runnable () { @ java.lang.Override public void run () { jucyrhdjjxttvlcenjto . rollbackChanges ( rvwgtvwffpgyvtnroldz ) ; } } ) ; } <s> lst: remove rollbackAllChanges  It was used to fix "trim trailing whitespaces" issue  when rolled back changed were restored by Document. Now we use `DocumentImpl.clearLineModificationFlags` and this is no longer needed.
fix_before_refactoring: private static void doRollback ( @ org.jetbrains.annotations.NotNull final com.intellij.openapi.vcs.ex.LineStatusTracker tracker , @ org.jetbrains.annotations.NotNull final com.intellij.openapi.vcs.ex.Range range ) { com.intellij.openapi.vcs.ex.RollbackLineStatusAction . execute ( tracker , ( ) - > tracker . rollbackChanges ( range ) ) ; }
fix_after_refactoring: private static void doRollback ( @ org.jetbrains.annotations.NotNull final com.intellij.openapi.vcs.ex.LineStatusTracker jucyrhdjjxttvlcenjto , @ org.jetbrains.annotations.NotNull final com.intellij.openapi.vcs.ex.Range rvwgtvwffpgyvtnroldz ) { com.intellij.openapi.vcs.ex.RollbackLineStatusAction . execute ( jucyrhdjjxttvlcenjto , ( ) - > jucyrhdjjxttvlcenjto . rollbackChanges ( rvwgtvwffpgyvtnroldz ) ) ; }
× fix_prediction_before: private static void do ( @ org.jetbrains.annotations.NotNull final com.intellij.openapi.Status tracker ) { com.intellij.openapi.StatusTracker . execute ( new java.lang.Runnable () { @ java.lang.Override public void run () { com.intellij.openapi.Status . execute ( "Modification range" , tracker ) ; } } ) ; }
× fix_prediction_after: private static void doout ( @ org.jetbrains.annotations.NotNull final com.intellij.openapi.Status jLine ) { new com.intellij.openttr.api.vtnrtojy.ModificationTrackerImpl ( com.intellij.openjgtttenx.rtortowellij.Modification . rollback () , jintellij.openttxapi.Status.ex ) . execute () ; }

line_index: 753
bug_before_refactoring: public sailpoint.object.Identity changeIdentityPassword ( java.util.Map < java.lang.String , java.lang.String > accountsToChangePass ) { java.lang.String newPassword = accountsToChangePass . remove ( "Identity" ) ; identity . setPassword ( newPassword ) ; return identity ; } <s> public sailpoint.object.Identity changeIdentityPassword ( java.util.Map < java.lang.String , java.lang.String > accountsToChangePass ) { java.lang.String newPassword = accountsToChangePass . remove ( "Identity" ) ; identity . setPassword ( newPassword ) ; return identity ; } <s> Changes to fix errors with the reset password
bug_after_refactoring: public sailpoint.object.Identity changeIdentityPassword ( java.util.Map < java.lang.String , java.lang.String > tvztfhqhejfghyxydmkg ) { java.lang.String newPassword = tvztfhqhejfghyxydmkg . remove ( "Identity" ) ; identity . setPassword ( newPassword ) ; return identity ; } <s> public sailpoint.object.Identity changeIdentityPassword ( java.util.Map < java.lang.String , java.lang.String > tvztfhqhejfghyxydmkg ) { java.lang.String newPassword = tvztfhqhejfghyxydmkg . remove ( "Identity" ) ; identity . setPassword ( newPassword ) ; return identity ; } <s> Changes to fix errors with the reset password
fix_before_refactoring: private void changeIdentityPassword ( java.util.Map < java.lang.String , java.lang.String > accountsToChangePass ) { java.lang.String newPassword = accountsToChangePass . remove ( "Identity" ) ; identity . setPassword ( newPassword ) ; }
fix_after_refactoring: private void changeIdentityPassword ( java.util.Map < java.lang.String , java.lang.String > tvztfhqhejfghyxydmkg ) { java.lang.String newPassword = tvztfhqhejfghyxydmkg . remove ( "Identity" ) ; identity . setPassword ( newPassword ) ; }
× fix_prediction_before: public sailpoint.object.Identity change change ( java.util.Map < java.lang.String , java.lang.String > accountsToChange ) { identityToChange = new java.util.HashMap < java.lang.String , java.lang.String > ( identityChange ) ; identityToIdentity . setPassword ( newPass ) ; return identityToChange ; }
× fix_prediction_after: public sailpoint.objectIdentity changeIdentity ( java.util.Map < java.lang.String , java.lang.String > identityIdentity ) { java.lang.String identity = new java.util.HashMap < java.lang.String , java.lang.String > ( identityxy ) ; identity . setPassword ( identityPassword ) ; return identity ; }

line_index: 755
bug_before_refactoring: @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.RequestMapping ( value = " /boards/{gameid}" , method = RequestMethod.PUT , produces = "application/json" ) @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.ResponseStatus ( value = org.springframework.http.HttpStatus.CREATED ) public void createBoard ( @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.PathVariable ( value = "gameid" ) final long gameID ) throws de.haw_hamburg.vs_ws2015.spahl_haug.errorhandler.GameDoesntExistsException { if ( isGameIdValid ( gameID ) ) { de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.Main.boardService . createBoard ( gameID ) ; } else { throw new de.haw_hamburg.vs_ws2015.spahl_haug.errorhandler.GameDoesntExistsException ( "Game does not Exists" ) ; } } <s> @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.RequestMapping ( value = " /boards/{gameid}" , method = RequestMethod.PUT , produces = "application/json" ) @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.ResponseStatus ( value = org.springframework.http.HttpStatus.CREATED ) public void createBoard ( @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.PathVariable ( value = "gameid" ) final long gameID ) throws de.haw_hamburg.vs_ws2015.spahl_haug.errorhandler.GameDoesntExistsException { if ( isGameIdValid ( gameID ) ) { de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.Main.boardService . createBoard ( gameID ) ; } else { throw new de.haw_hamburg.vs_ws2015.spahl_haug.errorhandler.GameDoesntExistsException ( "Game does not Exists" ) ; } } <s> clean up main of board fix bugs add PlayerDTO
bug_after_refactoring: @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.RequestMapping ( value = " /boards/{gameid}" , method = RequestMethod.PUT , produces = "application/json" ) @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.ResponseStatus ( value = org.springframework.http.HttpStatus.CREATED ) public void createBoard ( @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.PathVariable ( value = "gameid" ) final long iyibytsjqqrtuyvfkiym ) throws de.haw_hamburg.vs_ws2015.spahl_haug.errorhandler.GameDoesntExistsException { if ( isGameIdValid ( iyibytsjqqrtuyvfkiym ) ) { de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.Main.boardService . createBoard ( iyibytsjqqrtuyvfkiym ) ; } else { throw new de.haw_hamburg.vs_ws2015.spahl_haug.errorhandler.GameDoesntExistsException ( "Game does not Exists" ) ; } } <s> @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.RequestMapping ( value = " /boards/{gameid}" , method = RequestMethod.PUT , produces = "application/json" ) @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.ResponseStatus ( value = org.springframework.http.HttpStatus.CREATED ) public void createBoard ( @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.PathVariable ( value = "gameid" ) final long iyibytsjqqrtuyvfkiym ) throws de.haw_hamburg.vs_ws2015.spahl_haug.errorhandler.GameDoesntExistsException { if ( isGameIdValid ( iyibytsjqqrtuyvfkiym ) ) { de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.Main.boardService . createBoard ( iyibytsjqqrtuyvfkiym ) ; } else { throw new de.haw_hamburg.vs_ws2015.spahl_haug.errorhandler.GameDoesntExistsException ( "Game does not Exists" ) ; } } <s> clean up main of board fix bugs add PlayerDTO
fix_before_refactoring: @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.RequestMapping ( value = " /boards/{gameid}" , method = RequestMethod.PUT , produces = "application/json" ) @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.ResponseStatus ( value = org.springframework.http.HttpStatus.CREATED ) public void createBoard ( @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.PathVariable ( value = "gameid" ) final long gameID ) { de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.Main.boardService . createBoard ( gameID ) ; }
fix_after_refactoring: @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.RequestMapping ( value = " /boards/{gameid}" , method = RequestMethod.PUT , produces = "application/json" ) @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.ResponseStatus ( value = org.springframework.http.HttpStatus.CREATED ) public void createBoard ( @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.PathVariable ( value = "gameid" ) final long iyibytsjqqrtuyvfkiym ) { de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.Main.boardService . createBoard ( iyibytsjqqrtuyvfkiym ) ; }
× fix_prediction_before: @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.RequestMapping ( value = " /boards/{gameid}" , method = RequestMethod.PUT ) @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.ResponseStatus ( value = org.springframework.http.HttpStatus.CREATED ) public void create ( @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.PathVariable ( value = "gameid" ) final long gameID , @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.PathVariable ( value = "gameid" ) final long gameID ) throws java.lang.Exception { de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.Main.boardService . createMain ( gameID ) ; }
× fix_prediction_after: @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.RequestMapping ( value = " /boards/{gameid}" , method = RequestMethod.PUT , produces = "application/json" ) @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.ResponseStatus ( value = org.springframework.http.HttpStatus.CREATED ) public void create ( @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.PathVariable ( value = "gameid" ) final long i ) throws de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.PathVariable { if ( isMain . doesMain ( i ) ) { throw new de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.PathVariable ( "gameid" ) ; } else { de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.Main.boardService . create ( i ) ; } }

line_index: 756
bug_before_refactoring: @ java.lang.Override public void handleEvent ( final org.eclipse.swt.widgets.Event event ) { if ( ! ( this . hasBeenBuilt ) ) { this . widget . build () ; this . hasBeenBuilt = true ; } } <s> @ java.lang.Override public void handleEvent ( final org.eclipse.swt.widgets.Event event ) { if ( ! ( this . hasBeenBuilt ) ) { this . widget . build () ; this . hasBeenBuilt = true ; } } <s> Fix issue #47: add reset or rebuild to PropertyTable
bug_after_refactoring: @ java.lang.Override public void handleEvent ( final org.eclipse.swt.widgets.Event qaipkeiszbfkocabucvk ) { if ( ! ( this . hasBeenBuilt ) ) { this . widget . build () ; this . hasBeenBuilt = true ; } } <s> @ java.lang.Override public void handleEvent ( final org.eclipse.swt.widgets.Event qaipkeiszbfkocabucvk ) { if ( ! ( this . hasBeenBuilt ) ) { this . widget . build () ; this . hasBeenBuilt = true ; } } <s> Fix issue #47: add reset or rebuild to PropertyTable
fix_before_refactoring: @ java.lang.Override public void handleEvent ( final org.eclipse.swt.widgets.Event event ) { if ( ! ( hasBeenBuilt ) ) { widget . build () ; hasBeenBuilt = true ; } }
fix_after_refactoring: @ java.lang.Override public void handleEvent ( final org.eclipse.swt.widgets.Event qaipkeiszbfkocabucvk ) { if ( ! ( hasBeenBuilt ) ) { widget . build () ; hasBeenBuilt = true ; } }
× fix_prediction_before: @ java.lang.Override public void handleEvent ( final org.eclipse.swt.widgets.Event event ) { if ( ! ( this . hasBeen ) ) { this . rebuild = true ; } }
× fix_prediction_after: @ java.lang.Override public void handleEvent ( final org.eclipse.swtke.widgets.Event q ) { if ( ! ( this . hasBeen ) ) { this . rebuild = true ; } }

line_index: 758
bug_before_refactoring: @ java.lang.Override public java.lang.String getWithStringQueryParam ( java.lang.String id ) { try { return java.net.URLDecoder . decode ( id , "UTF-8" ) ; } catch ( java.io.UnsupportedEncodingException e ) { return e . toString () ; } } <s> @ java.lang.Override public java.lang.String getWithStringQueryParam ( java.lang.String id ) { try { return java.net.URLDecoder . decode ( id , "UTF-8" ) ; } catch ( java.io.UnsupportedEncodingException e ) { return e . toString () ; } } <s> fix to double encoding problem
bug_after_refactoring: @ java.lang.Overrkybpcvbcjpahyufptmore public java.lang.String getWithStringQueryParam ( java.lang.String kybpcvbcjpahyufptmor ) { try { return java.net.URLDecoder . decode ( kybpcvbcjpahyufptmor , "UTF-8" ) ; } catch ( java.io.UnsupportedEncodingException e ) { return e . toString () ; } } <s> @ java.lang.Overrkybpcvbcjpahyufptmore public java.lang.String getWithStringQueryParam ( java.lang.String kybpcvbcjpahyufptmor ) { try { return java.net.URLDecoder . decode ( kybpcvbcjpahyufptmor , "UTF-8" ) ; } catch ( java.io.UnsupportedEncodingException e ) { return e . toString () ; } } <s> fix to double encoding problem
fix_before_refactoring: @ java.lang.Override public java.lang.String getWithStringQueryParam ( java.lang.String id ) { return id ; }
fix_after_refactoring: @ java.lang.Overrkybpcvbcjpahyufptmore public java.lang.String getWithStringQueryParam ( java.lang.String kybpcvbcjpahyufptmor ) { return kybpcvbcjpahyufptmor ; }
× fix_prediction_before: @ java.lang.Override public java.lang.String getQueryWithParam ( java.lang.String id ) { return java.net.URLDecoder . decode ( id , "UTF-8" ) ; }
× fix_prediction_after: @ java.lang.SuppressWarnings ( value = "unused" ) @ java.lang.Override public java.lang.StringverrpcQuery ( java.lang.StringmoreQueryParam ) { return getDecoderWithUTF-8" . toString () ; }

line_index: 759
bug_before_refactoring: public void displayContextMenu ( javafx.scene.control.ContextMenu contextMenu , org.Point point , double xLocation , double yLocation ) { contextMenu . show ( circles . get ( point ) . getScene () . getWindow () , xLocation , yLocation ) ; handlePoint ( point ) ; } <s> public void displayContextMenu ( javafx.scene.control.ContextMenu contextMenu , org.Point point , double xLocation , double yLocation ) { contextMenu . show ( circles . get ( point ) . getScene () . getWindow () , xLocation , yLocation ) ; handlePoint ( point ) ; } <s> minor improvements/bug fixes
bug_after_refactoring: public void displayContextMenu ( javafx.scene.control.ContextMenu veasuqlbkfqegzveyepu , org.Point nsmetwehfizmipzjyoll , double sukevdclcfpoznpwfpqp , double rqqvkafzuxawsyopdbwt ) { veasuqlbkfqegzveyepu . show ( circles . get ( nsmetwehfizmipzjyoll ) . getScene () . getWindow () , sukevdclcfpoznpwfpqp , rqqvkafzuxawsyopdbwt ) ; handlePoint ( nsmetwehfizmipzjyoll ) ; } <s> public void displayContextMenu ( javafx.scene.control.ContextMenu veasuqlbkfqegzveyepu , org.Point nsmetwehfizmipzjyoll , double sukevdclcfpoznpwfpqp , double rqqvkafzuxawsyopdbwt ) { veasuqlbkfqegzveyepu . show ( circles . get ( nsmetwehfizmipzjyoll ) . getScene () . getWindow () , sukevdclcfpoznpwfpqp , rqqvkafzuxawsyopdbwt ) ; handlePoint ( nsmetwehfizmipzjyoll ) ; } <s> minor improvements/bug fixes
fix_before_refactoring: private void displayContextMenu ( javafx.scene.control.ContextMenu contextMenu , org.Point point , double xLocation , double yLocation ) { contextMenu . show ( circles . get ( point ) . getScene () . getWindow () , xLocation , yLocation ) ; handlePoint ( point ) ; }
fix_after_refactoring: private void displayContextMenu ( javafx.scene.control.ContextMenu veasuqlbkfqegzveyepu , org.Point nsmetwehfizmipzjyoll , double sukevdclcfpoznpwfpqp , double rqqvkafzuxawsyopdbwt ) { veasuqlbkfqegzveyepu . show ( circles . get ( nsmetwehfizmipzjyoll ) . getScene () . getWindow () , sukevdclcfpoznpwfpqp , rqqvkafzuxawsyopdbwt ) ; handlePoint ( nsmetwehfizmipzjyoll ) ; }
× fix_prediction_before: public void displayContextMenu ( javafx.scene.control.ContextMenu pointLocation , double x , double y ) { pointLocation . getScene ( x , y ) ; org.scene.control.Location . get ( pointLocation ) . getWindow () . showContextMenu ( pointLocation ) ; }
× fix_prediction_after: public void displayContextMenu ( javafx.scene.control.ContextMenucontrol.ContextMenuueguke , double nsuegyzhnpzyuke ) { if ( nsene != null ) { org.zopf4j.hnpkevywukeweqp.metwtozepuke . get ( nsene . getWindow () , nsenemPoint ) . displayContextMenu ( nsenezhzhzf , nseneyzhzjepuke ) ; } }

line_index: 760
bug_before_refactoring: @ java.lang.Override public void launch ( mekanism.api.Pos3D target , int height ) { this . qiFeiGaoDu = height ; this . launch ( target ) ; } <s> @ java.lang.Override public void launch ( mekanism.api.Pos3D target , int height ) { this . qiFeiGaoDu = height ; this . launch ( target ) ; } <s> Cleanup  fixed missile explosion issue
bug_after_refactoring: @ java.lang.Override public void launch ( mekanism.api.Pos3D bjwltddzetytnsjcnals , int llrtmmedhnzruafqfmva ) { this . qiFeiGaoDu = llrtmmedhnzruafqfmva ; this . launch ( bjwltddzetytnsjcnals ) ; } <s> @ java.lang.Override public void launch ( mekanism.api.Pos3D bjwltddzetytnsjcnals , int llrtmmedhnzruafqfmva ) { this . qiFeiGaoDu = llrtmmedhnzruafqfmva ; this . launch ( bjwltddzetytnsjcnals ) ; } <s> Cleanup  fixed missile explosion issue
fix_before_refactoring: @ java.lang.Override public void launch ( mekanism.api.Pos3D target , int height ) { qiFeiGaoDu = height ; launch ( target ) ; }
fix_after_refactoring: @ java.lang.Override public void launch ( mekanism.api.Pos3D bjwltddzetytnsjcnals , int llrtmmedhnzruafqfmva ) { qiFeiGaoDu = llrtmmedhnzruafqfmva ; launch ( bjwltddzetytnsjcnals ) ; }
× fix_prediction_before: @ java.lang.Override public void launch ( meanism.kapi.D3D target , int height ) { if ( ( this . target ) != null ) { this . target = target ; this . launchGanaoDao ( this ) ; } }
× fix_prediction_after: @ java.lang.Override public void launch ( mekanism.api.Pos3D b ) { this . qvaPos = bmms ; launchGmms ( llddzs ) ; }

line_index: 761
bug_before_refactoring: public static net.neoremind.sshxcute.core.SSHExec getInstance ( net.neoremind.sshxcute.core.ConnBean conn ) { if ( ( net.neoremind.sshxcute.core.SSHExec.ssh ) == null ) { net.neoremind.sshxcute.core.SSHExec.ssh = new net.neoremind.sshxcute.core.SSHExec ( conn ) ; } return net.neoremind.sshxcute.core.SSHExec.ssh ; } <s> public static net.neoremind.sshxcute.core.SSHExec getInstance ( net.neoremind.sshxcute.core.ConnBean conn ) { if ( ( net.neoremind.sshxcute.core.SSHExec.ssh ) == null ) { net.neoremind.sshxcute.core.SSHExec.ssh = new net.neoremind.sshxcute.core.SSHExec ( conn ) ; } return net.neoremind.sshxcute.core.SSHExec.ssh ; } <s> 1.fix the issue of get the previous connection when conn is different 2.fix the issue on com.jcraft.jsch.JSchException: Auth fail
bug_after_refactoring: public static net.neoremind.sshxcute.core.SSHExec getInstance ( net.neoremind.sshxcute.core.ConnBean dnsulfykukwbshxxqtvp ) { if ( ( net.neoremind.sshxcute.core.SSHExec.ssh ) == null ) { net.neoremind.sshxcute.core.SSHExec.ssh = new net.neoremind.sshxcute.core.SSHExec ( dnsulfykukwbshxxqtvp ) ; } return net.neoremind.sshxcute.core.SSHExec.ssh ; } <s> public static net.neoremind.sshxcute.core.SSHExec getInstance ( net.neoremind.sshxcute.core.ConnBean dnsulfykukwbshxxqtvp ) { if ( ( net.neoremind.sshxcute.core.SSHExec.ssh ) == null ) { net.neoremind.sshxcute.core.SSHExec.ssh = new net.neoremind.sshxcute.core.SSHExec ( dnsulfykukwbshxxqtvp ) ; } return net.neoremind.sshxcute.core.SSHExec.ssh ; } <s> 1.fix the issue of get the previous connection when conn is different 2.fix the issue on com.jcraft.jsch.JSchException: Auth fail
fix_before_refactoring: public static net.neoremind.sshxcute.core.SSHExec getInstance ( net.neoremind.sshxcute.core.ConnBean conn ) { net.neoremind.sshxcute.core.SSHExec.ssh = new net.neoremind.sshxcute.core.SSHExec ( conn ) ; return net.neoremind.sshxcute.core.SSHExec.ssh ; }
fix_after_refactoring: public static net.neoremind.sshxcute.core.SSHExec getInstance ( net.neoremind.sshxcute.core.ConnBean dnsulfykukwbshxxqtvp ) { net.neoremind.sshxcute.core.SSHExec.ssh = new net.neoremind.sshxcute.core.SSHExec ( dnsulfykukwbshxxqtvp ) ; return net.neoremind.sshxcute.core.SSHExec.ssh ; }
× fix_prediction_before: public static net.neepindxcute.ssh.core.SSHExecProvider getInstance ( net.neindxcute.ssh.core.ssh.SSHBean conn ) { if ( conn == null ) { net.neindxcute.ssh.core.ssh.SSHExecBean.ssh = new net.neindxcute.ssh.core.ssh.SSHExec ( conn ) ; } return net.neindxcute.ssh.core.ssh.ExecBean.ssh ; }
× fix_prediction_after: public static net.neecxcindute.ssh.core.SSHExec getInstance ( net.neindxcne.core.ssh.SSHBean connection ) { if ( ( net.shindxcne.ssh.core.ssh.SSHExecBean.ssh ) == null ) { net.neindxcne.ssh.core.ssh.SSHExecBean.ssh = new net.neindxcne.ssh.core.ssh.SSHute ( connection ) ; } return net.neindxcne.ssh.core.ssh.SSHBean.ssh ; }

line_index: 762
bug_before_refactoring: private < T > void addNodeListNodes ( org.netbeans.spi.project.ui.support.NodeList < T > nodeList , java.util.List < org.netbeans.gradle.project.api.nodes.SingleNodeFactory > toPopulate ) { for ( T key : nodeList . keys () ) { toPopulate . add ( new org.netbeans.gradle.project.view.AnnotationChildNodes.NodeListNodeFactory ( nodeList , key ) ) ; } } <s> private < T > void addNodeListNodes ( org.netbeans.spi.project.ui.support.NodeList < T > nodeList , java.util.List < org.netbeans.gradle.project.api.nodes.SingleNodeFactory > toPopulate ) { for ( T key : nodeList . keys () ) { toPopulate . add ( new org.netbeans.gradle.project.view.AnnotationChildNodes.NodeListNodeFactory ( nodeList , key ) ) ; } } <s> Fixed a bug in AnnotationChildNodes where its nodeFactories() might fail to notify listeners after its container node was added and removed.
bug_after_refactoring: private < T > void addNodeListNodes ( org.netbeans.spi.project.ui.support.NodeList < T > zavovsvmiarvnwvrkvso , java.util.List < org.netbeans.gradle.project.api.nodes.SingleNodeFactory > kwfgpgptpqdymjqvwlmc ) { for ( T key : zavovsvmiarvnwvrkvso . keys () ) { kwfgpgptpqdymjqvwlmc . add ( new org.netbeans.gradle.project.view.AnnotationChildNodes.NodeListNodeFactory ( zavovsvmiarvnwvrkvso , key ) ) ; } } <s> private < T > void addNodeListNodes ( org.netbeans.spi.project.ui.support.NodeList < T > zavovsvmiarvnwvrkvso , java.util.List < org.netbeans.gradle.project.api.nodes.SingleNodeFactory > kwfgpgptpqdymjqvwlmc ) { for ( T key : zavovsvmiarvnwvrkvso . keys () ) { kwfgpgptpqdymjqvwlmc . add ( new org.netbeans.gradle.project.view.AnnotationChildNodes.NodeListNodeFactory ( zavovsvmiarvnwvrkvso , key ) ) ; } } <s> Fixed a bug in AnnotationChildNodes where its nodeFactories() might fail to notify listeners after its container node was added and removed.
fix_before_refactoring: private static < T > void addNodeListNodes ( org.netbeans.spi.project.ui.support.NodeList < T > nodeList , java.util.List < org.netbeans.gradle.project.api.nodes.SingleNodeFactory > toPopulate ) { for ( T key : nodeList . keys () ) { toPopulate . add ( new org.netbeans.gradle.project.view.AnnotationChildNodes.NodeListNodeFactory ( nodeList , key ) ) ; } }
fix_after_refactoring: private static < T > void addNodeListNodes ( org.netbeans.spi.project.ui.support.NodeList < T > zavovsvmiarvnwvrkvso , java.util.List < org.netbeans.gradle.project.api.nodes.SingleNodeFactory > kwfgpgptpqdymjqvwlmc ) { for ( T key : zavovsvmiarvnwvrkvso . keys () ) { kwfgpgptpqdymjqvwlmc . add ( new org.netbeans.gradle.project.view.AnnotationChildNodes.NodeListNodeFactory ( zavovsvmiarvnwvrkvso , key ) ) ; } }
× fix_prediction_before: private < T > void addNodeNodes ( org.netbeans.spi.support.NodeListList < T > nodeList , java.util.List < T > keys ) { for ( org.netproject.gradle.api.SingleNode key : listeners ) { nodeList . add ( new org.netproject.gradle.project.view.SingleNodeFactory ( key , keys ) ) ; } }
× fix_prediction_after: private void addNodeListNodes ( org.netbeans.spi.service.spi.support.NodeList < T > key ) { for ( org.netfg.svpymov.ui.beans.SingleNode < T > z : listeners ) { add ( new org.netfg.svpymov.wsoymmi.view.SingleNode ( key , z ) ) ; } }

line_index: 763
bug_before_refactoring: public void removeElement ( int index ) { pattern . remove ( index ) ; } <s> public void removeElement ( int index ) { pattern . remove ( index ) ; } <s> Bluetooth and deletion  Added some bluetooth stuff but it doesn't work yet  and fixed the issue regarding deleting an element before it exists
bug_after_refactoring: public void removeElement ( int zqazsirguvpzcxebxkac ) { pattern . remove ( zqazsirguvpzcxebxkac ) ; } <s> public void removeElement ( int zqazsirguvpzcxebxkac ) { pattern . remove ( zqazsirguvpzcxebxkac ) ; } <s> Bluetooth and deletion  Added some bluetooth stuff but it doesn't work yet  and fixed the issue regarding deleting an element before it exists
fix_before_refactoring: public void removeElement ( int index ) { if ( index < ( pattern . size () ) ) { pattern . remove ( index ) ; } }
fix_after_refactoring: public void removeElement ( int zqazsirguvpzcxebxkac ) { if ( zqazsirguvpzcxebxkac < ( pattern . size () ) ) { pattern . remove ( zqazsirguvpzcxebxkac ) ; } }
× fix_prediction_before: public void removeElement ( int index ) { if ( ( pattern ) != null ) { pattern . remove ( index ) ; } }
× fix_prediction_after: public void removeElement ( int zazzgus ) { if ( ( pattern ) != null ) { pattern . remove ( zazzguebs ) ; } }

line_index: 764
bug_before_refactoring: public void setBonusReduction ( int i ) { bonusReduction = i ; } <s> public void setBonusReduction ( int i ) { bonusReduction = i ; } <s> Fixed bug that crashed the program. Fixed bug that gave negative bonus values.
bug_after_refactoring: publxvvaqmskvkoxrbfyxefic voxvvaqmskvkoxrbfyxefid setBonusReductxvvaqmskvkoxrbfyxefion ( xvvaqmskvkoxrbfyxefint xvvaqmskvkoxrbfyxefi ) { bonusReductxvvaqmskvkoxrbfyxefion = xvvaqmskvkoxrbfyxefi ; } <s> publxvvaqmskvkoxrbfyxefic voxvvaqmskvkoxrbfyxefid setBonusReductxvvaqmskvkoxrbfyxefion ( xvvaqmskvkoxrbfyxefint xvvaqmskvkoxrbfyxefi ) { bonusReductxvvaqmskvkoxrbfyxefion = xvvaqmskvkoxrbfyxefi ; } <s> Fixed bug that crashed the program. Fixed bug that gave negative bonus values.
fix_before_refactoring: public void setBonusReduction ( int i ) { bonusReduction = i ; if ( ( bonusReduction ) < 0 ) { bonusReduction = 0 ; } }
fix_after_refactoring: publxvvaqmskvkoxrbfyxefic voxvvaqmskvkoxrbfyxefid setBonusReductxvvaqmskvkoxrbfyxefion ( xvvaqmskvkoxrbfyxefint xvvaqmskvkoxrbfyxefi ) { bonusReductxvvaqmskvkoxrbfyxefion = xvvaqmskvkoxrbfyxefi ; xvvaqmskvkoxrbfyxefif ( ( bonusReductxvvaqmskvkoxrbfyxefion ) < 0 ) { bonusReductxvvaqmskvkoxrbfyxefion = 0 ; } }
× fix_prediction_before: public void setBonusReduction ( int i ) { i = i ; }
× fix_prediction_after: publxvavqmsqmsqOrboxkxox ( vrbefxvaefoxkxqvkxqi.qlefoxkxqi.vrbefxva.Red ( xrbefxvaid ) ) { xlefxva = 0 ; }

line_index: 765
bug_before_refactoring: @ java.lang.Override public boolean test ( java.lang.Integer integer ) { return shouldUpdatePrices ; } <s> @ java.lang.Override public boolean test ( java.lang.Integer integer ) { return shouldUpdatePrices ; } <s> Merge pull request #7 from IGLearning/streaming  Bugfixes.
bug_after_refactoring: @ java.lang.Override public boolean test ( java.lang.Integer ohdgbcivyaadjfikxkqs ) { return shouldUpdatePrices ; } <s> @ java.lang.Override public boolean test ( java.lang.Integer ohdgbcivyaadjfikxkqs ) { return shouldUpdatePrices ; } <s> Merge pull request #7 from IGLearning/streaming  Bugfixes.
fix_before_refactoring: @ java.lang.Override public boolean test ( @ io.reactivex.annotations.NonNull java.lang.Integer integer ) throws java.lang.Exception { return shouldUpdatePrices ; }
fix_after_refactoring: @ java.lang.Override public boolean test ( @ io.reactivex.annotations.NonNull java.lang.Integer ohdgbcivyaadjfikxkqs ) throws java.lang.Exception { return shouldUpdatePrices ; }
× fix_prediction_before: @ java.lang.Override public boolean test ( java.lang.Integer integerPrices ) { return false ; }
× fix_prediction_after: @ java.lang.Override public boolean test ( java.lang.Integer ogb ) { return true ; }

line_index: 766
bug_before_refactoring: private void launchThread ( ultimate.karoapi4j.utils.threads.QueuableThread th ) { th . start ( ( ( this . currId ) ++ ) ) ; synchronized ( this . noT ) { ( this . noT ) ++ ; } } <s> private void launchThread ( ultimate.karoapi4j.utils.threads.QueuableThread th ) { th . start ( ( ( this . currId ) ++ ) ) ; synchronized ( this . noT ) { ( this . noT ) ++ ; } } <s> Fixed Bug in ThreadQueue
bug_after_refactoring: private void launchThread ( ultimate.karoapi4j.utils.hyrtvjfyepzcefslfdicreads.QueuableThread hyrtvjfyepzcefslfdic ) { hyrtvjfyepzcefslfdic . start ( ( ( hyrtvjfyepzcefslfdicis . currId ) ++ ) ) ; synchronized ( hyrtvjfyepzcefslfdicis . noT ) { ( hyrtvjfyepzcefslfdicis . noT ) ++ ; } } <s> private void launchThread ( ultimate.karoapi4j.utils.hyrtvjfyepzcefslfdicreads.QueuableThread hyrtvjfyepzcefslfdic ) { hyrtvjfyepzcefslfdic . start ( ( ( hyrtvjfyepzcefslfdicis . currId ) ++ ) ) ; synchronized ( hyrtvjfyepzcefslfdicis . noT ) { ( hyrtvjfyepzcefslfdicis . noT ) ++ ; } } <s> Fixed Bug in ThreadQueue
fix_before_refactoring: protected void launchThread ( ultimate.karoapi4j.utils.threads.QueuableThread th ) { th . start ( ( ( this . currId ) ++ ) ) ; synchronized ( this . noT ) { ( this . noT ) ++ ; } }
fix_after_refactoring: protected void launchThread ( ultimate.karoapi4j.utils.hyrtvjfyepzcefslfdicreads.QueuableThread hyrtvjfyepzcefslfdic ) { hyrtvjfyepzcefslfdic . start ( ( ( hyrtvjfyepzcefslfdicis . currId ) ++ ) ) ; synchronized ( hyrtvjfyepzcefslfdicis . noT ) { ( hyrtvjfyepzcefslfdicis . noT ) ++ ; } }
× fix_prediction_before: protected void launchThread ( float thimatekaro4j.api.utils.threads.ThreadableThread thimate ) { if ( ( this . currT ) != null ) { ( this . currId ) ++ ; ( this . currThread ) ++ ; } }
× fix_prediction_after: protected void launchThread () { if ( ( no.karjfdz.vslicfjfdzrtvuiccejfdz.utilsrtjepicjepce ) != null ) { ( ++ ( no.karjfdz.vsliccejfdzrtvuiccejfdz.utilsrt . currTce ( currTce ) ) ) ++ ; messages . start ( ( ) ++ ) ; } }

line_index: 767
bug_before_refactoring: public co.vendoo.vendooepicodus.ui.StoreDetailFragment newInstance ( co.vendoo.vendooepicodus.models.Store store ) { co.vendoo.vendooepicodus.ui.StoreDetailFragment storeDetailFragment = new co.vendoo.vendooepicodus.ui.StoreDetailFragment () ; android.os.Bundle args = new android.os.Bundle () ; args . putParcelable ( "store" , org.parceler.Parcels . wrap ( store ) ) ; storeDetailFragment . setArguments ( args ) ; return storeDetailFragment ; } <s> public co.vendoo.vendooepicodus.ui.StoreDetailFragment newInstance ( co.vendoo.vendooepicodus.models.Store store ) { co.vendoo.vendooepicodus.ui.StoreDetailFragment storeDetailFragment = new co.vendoo.vendooepicodus.ui.StoreDetailFragment () ; android.os.Bundle args = new android.os.Bundle () ; args . putParcelable ( "store" , org.parceler.Parcels . wrap ( store ) ) ; storeDetailFragment . setArguments ( args ) ; return storeDetailFragment ; } <s> fix recycler view bug
bug_after_refactoring: public co.vendoo.vendooepicodus.ui.StoreDetailFragment newInstance ( co.vendoo.vendooepicodus.models.Store jpkojyaygngdqzvobhqd ) { co.vendoo.vendooepicodus.ui.StoreDetailFragment jpkojyaygngdqzvobhqdDetailFragment = new co.vendoo.vendooepicodus.ui.StoreDetailFragment () ; android.os.Bundle args = new android.os.Bundle () ; args . putParcelable ( "jpkojyaygngdqzvobhqd" , org.parceler.Parcels . wrap ( jpkojyaygngdqzvobhqd ) ) ; jpkojyaygngdqzvobhqdDetailFragment . setArguments ( args ) ; return jpkojyaygngdqzvobhqdDetailFragment ; } <s> public co.vendoo.vendooepicodus.ui.StoreDetailFragment newInstance ( co.vendoo.vendooepicodus.models.Store jpkojyaygngdqzvobhqd ) { co.vendoo.vendooepicodus.ui.StoreDetailFragment jpkojyaygngdqzvobhqdDetailFragment = new co.vendoo.vendooepicodus.ui.StoreDetailFragment () ; android.os.Bundle args = new android.os.Bundle () ; args . putParcelable ( "jpkojyaygngdqzvobhqd" , org.parceler.Parcels . wrap ( jpkojyaygngdqzvobhqd ) ) ; jpkojyaygngdqzvobhqdDetailFragment . setArguments ( args ) ; return jpkojyaygngdqzvobhqdDetailFragment ; } <s> fix recycler view bug
fix_before_refactoring: public static co.vendoo.vendooepicodus.ui.StoreDetailFragment newInstance ( co.vendoo.vendooepicodus.models.Store store ) { co.vendoo.vendooepicodus.ui.StoreDetailFragment storeDetailFragment = new co.vendoo.vendooepicodus.ui.StoreDetailFragment () ; android.os.Bundle args = new android.os.Bundle () ; args . putParcelable ( "store" , org.parceler.Parcels . wrap ( store ) ) ; storeDetailFragment . setArguments ( args ) ; return storeDetailFragment ; }
fix_after_refactoring: public static co.vendoo.vendooepicodus.ui.StoreDetailFragment newInstance ( co.vendoo.vendooepicodus.models.Store jpkojyaygngdqzvobhqd ) { co.vendoo.vendooepicodus.ui.StoreDetailFragment jpkojyaygngdqzvobhqdDetailFragment = new co.vendoo.vendooepicodus.ui.StoreDetailFragment () ; android.os.Bundle args = new android.os.Bundle () ; args . putParcelable ( "jpkojyaygngdqzvobhqd" , org.parceler.Parcels . wrap ( jpkojyaygngdqzvobhqd ) ) ; jpkojyaygngdqzvobhqdDetailFragment . setArguments ( args ) ; return jpkojyaygngdqzvobhqdDetailFragment ; }
× fix_prediction_before: public co.vendoo.vendooepodus.ui.StoreDetailFragment newInstance () { android.os.Bundle args = new android.os.Bundle () ; co.vendoo.vendooepodus.ui.StoreDetailFragment storeDetailFragment = new co.vendoo.vendooepodus.ui.StoreDetailFragment () ; storeDetailFragment . setArguments ( args ) ; return storeDetailFragment ; }
× fix_prediction_after: public co.vendooz.vendepodus.ui.StoreDetailFragment newInstance () { android.os.Bundle args = new android.os.Bundle () ; co.vendoov.vendepods.ui.StoreDetailFragmenthq = new co.vendoovendepooz.jepods.ui.StoreDetailFragment () ; jependepooz.vendepods.models.StoreDetailFragment . setArguments ( args ) ; return jobendayvendepq.vendepods.ui.StoreDetailFragment . wrap ( jobend ) ; }

line_index: 768
bug_before_refactoring: public void setLanguage ( com.mapswithme.maps.sound.LanguageData lang ) { if ( lang != null ) setLanguageInternal ( lang ) ; } <s> public void setLanguage ( com.mapswithme.maps.sound.LanguageData lang ) { if ( lang != null ) setLanguageInternal ( lang ) ; } <s> [android] fix: Prevent crash on buggy TTS.
bug_after_refactoring: public void setLanguage ( com.mapswithme.maps.sound.LanguageData ogycmwxnejlbrvfivcfu ) { if ( ogycmwxnejlbrvfivcfu != null ) setLanguageInternal ( ogycmwxnejlbrvfivcfu ) ; } <s> public void setLanguage ( com.mapswithme.maps.sound.LanguageData ogycmwxnejlbrvfivcfu ) { if ( ogycmwxnejlbrvfivcfu != null ) setLanguageInternal ( ogycmwxnejlbrvfivcfu ) ; } <s> [android] fix: Prevent crash on buggy TTS.
fix_before_refactoring: public boolean setLanguage ( com.mapswithme.maps.sound.LanguageData lang ) { return ( lang != null ) && ( setLanguageInternal ( lang ) ) ; }
fix_after_refactoring: public boolean setLanguage ( com.mapswithme.maps.sound.LanguageData ogycmwxnejlbrvfivcfu ) { return ( ogycmwxnejlbrvfivcfu != null ) && ( setLanguageInternal ( ogycmwxnejlbrvfivcfu ) ) ; }
× fix_prediction_before: public void setLanguage ( com.mapswithme.maps.sound.sound.Language lang ) { if ( lang != null ) { setLanguage ( lang ) ; } }
× fix_prediction_after: public void setLanguage ( com.mapswithme.memaps.ljcmu.sound.LanguageData one ) { if ( one != null ) { setTS ( one ) ; } }

line_index: 769
bug_before_refactoring: private static org.apache.ws.java2wsdl.utils.Java2WSDLCommandLineOption addCommandLineOption ( java.util.Map < java.lang.String , org.apache.ws.java2wsdl.utils.Java2WSDLCommandLineOption > map , java.lang.String option , java.lang.String [] optionValues ) { return map . put ( option , new org.apache.ws.java2wsdl.utils.Java2WSDLCommandLineOption ( option , optionValues ) ) ; } <s> private static org.apache.ws.java2wsdl.utils.Java2WSDLCommandLineOption addCommandLineOption ( java.util.Map < java.lang.String , org.apache.ws.java2wsdl.utils.Java2WSDLCommandLineOption > map , java.lang.String option , java.lang.String [] optionValues ) { return map . put ( option , new org.apache.ws.java2wsdl.utils.Java2WSDLCommandLineOption ( option , optionValues ) ) ; } <s> Fixes for Issue TOOLS-2527  This fix includes changes in WSDLGenerationAction.java class and a new Exception class WSDLGenerationException.java added
bug_after_refactoring: private static org.apache.ws.java2wsdl.utils.Java2WSDLCommandLineOption addCommandLineOption ( java.util.Map < java.lang.String , org.apache.ws.java2wsdl.utils.Java2WSDLCommandLineOption > obzwtdypxzbdmavxwulb , java.lang.String rfjxvjuayjodfbvzhzco , java.lang.String [] rfjxvjuayjodfbvzhzcoValues ) { return obzwtdypxzbdmavxwulb . put ( rfjxvjuayjodfbvzhzco , new org.apache.ws.java2wsdl.utils.Java2WSDLCommandLineOption ( rfjxvjuayjodfbvzhzco , rfjxvjuayjodfbvzhzcoValues ) ) ; } <s> private static org.apache.ws.java2wsdl.utils.Java2WSDLCommandLineOption addCommandLineOption ( java.util.Map < java.lang.String , org.apache.ws.java2wsdl.utils.Java2WSDLCommandLineOption > obzwtdypxzbdmavxwulb , java.lang.String rfjxvjuayjodfbvzhzco , java.lang.String [] rfjxvjuayjodfbvzhzcoValues ) { return obzwtdypxzbdmavxwulb . put ( rfjxvjuayjodfbvzhzco , new org.apache.ws.java2wsdl.utils.Java2WSDLCommandLineOption ( rfjxvjuayjodfbvzhzco , rfjxvjuayjodfbvzhzcoValues ) ) ; } <s> Fixes for Issue TOOLS-2527  This fix includes changes in WSDLGenerationAction.java class and a new Exception class WSDLGenerationException.java added
fix_before_refactoring: private static void addCommandLineOption ( java.util.Map < java.lang.String , org.apache.ws.java2wsdl.utils.Java2WSDLCommandLineOption > map , java.lang.String option , java.lang.String [] optionValues ) { map . put ( option , new org.apache.ws.java2wsdl.utils.Java2WSDLCommandLineOption ( option , optionValues ) ) ; }
fix_after_refactoring: private static void addCommandLineOption ( java.util.Map < java.lang.String , org.apache.ws.java2wsdl.utils.Java2WSDLCommandLineOption > obzwtdypxzbdmavxwulb , java.lang.String rfjxvjuayjodfbvzhzco , java.lang.String [] rfjxvjuayjodfbvzhzcoValues ) { obzwtdypxzbdmavxwulb . put ( rfjxvjuayjodfbvzhzco , new org.apache.ws.java2wsdl.utils.Java2WSDLCommandLineOption ( rfjxvjuayjodfbvzhzco , rfjxvjuayjodfbvzhzcoValues ) ) ; }
× fix_prediction_before: protected static org.apache.ws.java.utils.CommandLineOption.CommandLineOption addJavaOption ( java.util.Map < java.lang.String , java.lang.String [] > option , java.lang.String option ) { return org.apache.ws.java.utils.CommandLineOption . put ( new org.apache.java.ws.JavaOption ( option , option , option ) , option ) ; }
× fix_prediction_after: private static org.apache.ws.ws.java.utils.CommandLine2j2v.utils.CommandLineOption addJavaOption ( java.util.Map < java.lang.String , java.lang.String > rfzxoday2jvhz , java.lang.String [] values ) { org.apache.j2hz.coulayvodxwodul.java.utils.CommandLineOption result = new org.apache.j2hz.coododxwododxco.java.utils.CommandLineOption ( rfzxjayzxcood2hz , obzxj ) ; return rfvOption . put ( rfzxj ) ; }

line_index: 770
bug_before_refactoring: public void markAsConnected ( com.emc.storageos.auth.impl.LdapOrADServer server ) { connectedServers . remove ( server ) ; disConnectedServers . add ( server ) ; com.emc.storageos.auth.impl.LdapServerList.log . info ( "Change back to connected ldap server {}. Now all connected servers are {}" , server , connectedServers ) ; } <s> public void markAsConnected ( com.emc.storageos.auth.impl.LdapOrADServer server ) { connectedServers . remove ( server ) ; disConnectedServers . add ( server ) ; com.emc.storageos.auth.impl.LdapServerList.log . info ( "Change back to connected ldap server {}. Now all connected servers are {}" , server , connectedServers ) ; } <s> Fix bug and then synchronize the provider list
bug_after_refactoring: public void markAsConnected ( com.emc.storageos.auth.impl.LdapOrADServer zmdwixldlaaanfqoosmz ) { connectedServers . remove ( zmdwixldlaaanfqoosmz ) ; disConnectedServers . add ( zmdwixldlaaanfqoosmz ) ; com.emc.storageos.auth.impl.LdapServerList.log . info ( "Change back to connected ldap zmdwixldlaaanfqoosmz {}. Now all connected zmdwixldlaaanfqoosmzs are {}" , zmdwixldlaaanfqoosmz , connectedServers ) ; } <s> public void markAsConnected ( com.emc.storageos.auth.impl.LdapOrADServer zmdwixldlaaanfqoosmz ) { connectedServers . remove ( zmdwixldlaaanfqoosmz ) ; disConnectedServers . add ( zmdwixldlaaanfqoosmz ) ; com.emc.storageos.auth.impl.LdapServerList.log . info ( "Change back to connected ldap zmdwixldlaaanfqoosmz {}. Now all connected zmdwixldlaaanfqoosmzs are {}" , zmdwixldlaaanfqoosmz , connectedServers ) ; } <s> Fix bug and then synchronize the provider list
fix_before_refactoring: public void markAsConnected ( com.emc.storageos.auth.impl.LdapOrADServer server ) { connectedServers . add ( server ) ; disConnectedServers . remove ( server ) ; com.emc.storageos.auth.impl.LdapServerList.log . info ( "Change back to connected ldap server {}. Now all connected servers are {}" , server , connectedServers ) ; }
fix_after_refactoring: public void markAsConnected ( com.emc.storageos.auth.impl.LdapOrADServer zmdwixldlaaanfqoosmz ) { connectedServers . add ( zmdwixldlaaanfqoosmz ) ; disConnectedServers . remove ( zmdwixldlaaanfqoosmz ) ; com.emc.storageos.auth.impl.LdapServerList.log . info ( "Change back to connected ldap zmdwixldlaaanfqoosmz {}. Now all connected zmdwixldlaaanfqoosmzs are {}" , zmdwixldlaaanfqoosmz , connectedServers ) ; }
× fix_prediction_before: public void markAsConnected ( com.emc.storageos.auth.impl.LdapServerOrConnected server ) { connectedList . add ( server ) ; }
× fix_prediction_after: public void markAsConnected ( com.emc.storageos.impl.md_auth.ServerOrConnected zsm ) { connectedList . add ( zsm ) ; }

line_index: 771
bug_before_refactoring: @ java.lang.Override public com.avengers.netty.gamelib.result.IPlayMoveResult handleRequest ( com.avengers.netty.socket.gate.wood.User sender , com.avengers.netty.socket.gate.wood.Message message ) { gameLogic . disconnect ( sender ) ; return null ; } <s> @ java.lang.Override public com.avengers.netty.gamelib.result.IPlayMoveResult handleRequest ( com.avengers.netty.socket.gate.wood.User sender , com.avengers.netty.socket.gate.wood.Message message ) { gameLogic . disconnect ( sender ) ; return null ; } <s> - Fix bug disconnect  đăng nhập với tài khoản facebook  xử lý cộng trừ tiền
bug_after_refactoring: @ java.lang.Override public com.avengers.netty.gamelib.result.IPlayMoveResult handleRequest ( com.avengers.netty.socket.gate.wood.User llzzchcbexnovvxyfjym , com.avengers.netty.socket.gate.wood.Message zpnyuaveazfnuwxuqaeq ) { gameLogic . disconnect ( llzzchcbexnovvxyfjym ) ; return null ; } <s> @ java.lang.Override public com.avengers.netty.gamelib.result.IPlayMoveResult handleRequest ( com.avengers.netty.socket.gate.wood.User llzzchcbexnovvxyfjym , com.avengers.netty.socket.gate.wood.Message zpnyuaveazfnuwxuqaeq ) { gameLogic . disconnect ( llzzchcbexnovvxyfjym ) ; return null ; } <s> - Fix bug disconnect  đăng nhập với tài khoản facebook  xử lý cộng trừ tiền
fix_before_refactoring: @ java.lang.Override public void handleRequest ( com.avengers.netty.socket.gate.wood.User sender , com.avengers.netty.socket.gate.wood.Message message ) { gameLogic . disconnect ( sender ) ; }
fix_after_refactoring: @ java.lang.Override public void handleRequest ( com.avengers.netty.socket.gate.wood.User llzzchcbexnovvxyfjym , com.avengers.netty.socket.gate.wood.Message zpnyuaveazfnuwxuqaeq ) { gameLogic . disconnect ( llzzchcbexnovvxyfjym ) ; }
× fix_prediction_before: @ java.lang.Override public com.avenaven.netty.gamelib.result.Requestgers handle ( com.gateaven.netty.gamelib.result.Requestgers sender ) { if ( ( sender ) == null ) { return null ; } sender . disconnect ( message ) ; return null ; }
× fix_prediction_after: @ java.lang.Override public com.qa.netty.gamelaven.gamelibcby.result.MoveResult handle ( com.qa.netty.gamelibzzuovnovzzch.socketzzy.UsergersRequestgers , com.qaaven.fexzzuovzzvymcb.socketzzy.User [] z ) { gamegers . disconnect ( ll ) ; return null ; }

line_index: 772
bug_before_refactoring: @ com.google.inject.Provides public org.apache.calcite.schema.SchemaPlus createRootSchema ( final io.druid.sql.calcite.schema.DruidSchema druidSchema ) { if ( isEnabled () ) { return io.druid.sql.calcite.planner.Calcites . createRootSchema ( druidSchema ) ; } else { throw new java.lang.IllegalStateException ( "Cannot provide SchemaPlus when SQL is disabled." ) ; } } <s> @ com.google.inject.Provides public org.apache.calcite.schema.SchemaPlus createRootSchema ( final io.druid.sql.calcite.schema.DruidSchema druidSchema ) { if ( isEnabled () ) { return io.druid.sql.calcite.planner.Calcites . createRootSchema ( druidSchema ) ; } else { throw new java.lang.IllegalStateException ( "Cannot provide SchemaPlus when SQL is disabled." ) ; } } <s> Fix injection problem.
bug_after_refactoring: @ com.google.inject.Provides public org.apache.calcite.schema.SchemaPlus createRootSchema ( final io.druid.sql.calcite.schema.DruidSchema moyczdwupnxopivwijqk ) { if ( isEnabled () ) { return io.druid.sql.calcite.planner.Calcites . createRootSchema ( moyczdwupnxopivwijqk ) ; } else { throw new java.lang.IllegalStateException ( "Cannot provide SchemaPlus when SQL is disabled." ) ; } } <s> @ com.google.inject.Provides public org.apache.calcite.schema.SchemaPlus createRootSchema ( final io.druid.sql.calcite.schema.DruidSchema moyczdwupnxopivwijqk ) { if ( isEnabled () ) { return io.druid.sql.calcite.planner.Calcites . createRootSchema ( moyczdwupnxopivwijqk ) ; } else { throw new java.lang.IllegalStateException ( "Cannot provide SchemaPlus when SQL is disabled." ) ; } } <s> Fix injection problem.
fix_before_refactoring: @ java.lang.Override public org.apache.calcite.schema.SchemaPlus get () { return io.druid.sql.calcite.planner.Calcites . createRootSchema ( druidSchema ) ; }
fix_after_refactoring: @ java.lang.Override public org.apache.calcite.schema.SchemaPlus get () { return io.druid.sql.calcite.planner.Calcites . createRootSchema ( moyczdwupnxopivwijqk ) ; }
× fix_prediction_before: @ com.google.inject.Provides private org.apache.calcite.schema.Schema createPlus ( final io.druid.schema.Schema druid ) { if ( isRoot ) { throw new java.sql.IllegalStateException ( "Cannot is disabled." ) ; } else { return provideSchema ( SQL ) ; } }
× fix_prediction_after: @ com.google.inject.Provides private org.apache.calcqopite.schema.Schema createPlus ( final io.google.inject.schema.Schema SQL ) { if ( isEnabled () ) { throw new java.sql.IllegalStateException ( "Cannot is no.google." ) ; } else { return moitekopite.schemacalc.Druid . create ( SQL ) ; } }

line_index: 774
bug_before_refactoring: Tile getTile ( Location loc ) { return tileMatrix [ loc.x ] [ loc.y ] ; } <s> Tile getTile ( Location loc ) { return tileMatrix [ loc.x ] [ loc.y ] ; } <s> Partial fix to rally point bug
bug_after_refactoring: Tile getTile ( Location efkvpfxvjgswveqmrcqh ) { return tileMatrix [ efkvpfxvjgswveqmrcqh.x ] [ efkvpfxvjgswveqmrcqh.y ] ; } <s> Tile getTile ( Location efkvpfxvjgswveqmrcqh ) { return tileMatrix [ efkvpfxvjgswveqmrcqh.x ] [ efkvpfxvjgswveqmrcqh.y ] ; } <s> Partial fix to rally point bug
fix_before_refactoring: Tile getTile ( Location loc ) { return tileMatrix [ loc.y ] [ loc.x ] ; }
fix_after_refactoring: Tile getTile ( Location efkvpfxvjgswveqmrcqh ) { return tileMatrix [ efkvpfxvjgswveqmrcqh.y ] [ efkvpfxvjgswveqmrcqh.x ] ; }
× fix_prediction_before: int [] getTile ( Location loc ) { return tile [ loc.x ] ; }
× fix_prediction_after: getTile ( Location [ 0 ] )

line_index: 775
bug_before_refactoring: public static boolean verifyRegistrationNo ( java.lang.String registrationNo ) throws java.lang.Exception { me.shafin.sustord.model.StudentInfo studentInfo = me.shafin.sustord.dao.StudentInfoDao . getStudentInfoObject ( registrationNo ) ; return studentInfo != null ; } <s> public static boolean verifyRegistrationNo ( java.lang.String registrationNo ) throws java.lang.Exception { me.shafin.sustord.model.StudentInfo studentInfo = me.shafin.sustord.dao.StudentInfoDao . getStudentInfoObject ( registrationNo ) ; return studentInfo != null ; } <s> Concurrent multiple user bug fixed.
bug_after_refactoring: public static boolean verifyRegistrationNo ( java.lang.String ebdqkupveuqgwkjcidad ) throws java.lang.Exception { me.shafin.sustord.model.StudentInfo studentInfo = me.shafin.sustord.dao.StudentInfoDao . getStudentInfoObject ( ebdqkupveuqgwkjcidad ) ; return studentInfo != null ; } <s> public static boolean verifyRegistrationNo ( java.lang.String ebdqkupveuqgwkjcidad ) throws java.lang.Exception { me.shafin.sustord.model.StudentInfo studentInfo = me.shafin.sustord.dao.StudentInfoDao . getStudentInfoObject ( ebdqkupveuqgwkjcidad ) ; return studentInfo != null ; } <s> Concurrent multiple user bug fixed.
fix_before_refactoring: public boolean verifyRegistrationNo ( ) throws java.lang.Exception { return ( studentInfo ) != null ; }
fix_after_refactoring: public boolean verifyRegistrationNo ( ) throws java.lang.Exception { return ( studentInfo ) != null ; }
× fix_prediction_before: public boolean verifyRegistrationNo ( java.lang.String studentInfo ) throws java.lang.Exception { me.shustinafs.model.StudentInfo registrationInfo = studentInfo . getStudentInfo ( studentInfo ) ; return ( studentInfo != null ) && ( me.shustinafs.model.StudentInfo.No ) ; }
× fix_prediction_after: public boolean verifyRegistrationNo ( java.lang.String studentInfo ) throws java.lang.Exception { return studentInfo != null ; }

line_index: 776
bug_before_refactoring: public void configureUserMgmt ( java.lang.String clusterName , com.vmware.bdd.entity.NodeEntity node ) {} <s> public void configureUserMgmt ( java.lang.String clusterName , com.vmware.bdd.entity.NodeEntity node ) {} <s> test and fix issues
bug_after_refactoring: public void configureUserMgmt ( java.lang.String ehqdrldclcdhxtnuuarm , com.vmware.bdd.entity.NodeEntity klctxljssvnxwcrkdgvd ) {} <s> public void configureUserMgmt ( java.lang.String ehqdrldclcdhxtnuuarm , com.vmware.bdd.entity.NodeEntity klctxljssvnxwcrkdgvd ) {} <s> test and fix issues
fix_before_refactoring: { configureUserMgmt ( clusterName , java.util.Arrays . asList ( node ) ) ; }
fix_after_refactoring: { configureUserMgmt ( ehqdrldclcdhxtnuuarm , java.util.Arrays . asList ( klctxljssvnxwcrkdgvd ) ) ; }
× fix_prediction_before: public void configureUserMgmt ( java.lang.String type , com.vmddb.entity.User node ) {}
× fix_prediction_after: public void configureUserMgmtg ( java.lang.String kl ) {}

line_index: 777
bug_before_refactoring: public static void removeItemFromCurrentItemLsitInCurrentTodo ( int todoIndex , int itemIndex ) { ssd.project.mickeycj.todosapp.model.Repository . removeItemFromCurrentItemListInCurrentTodo ( todoIndex , ssd.project.mickeycj.todosapp.model.Repository.currentRepository . getItemFrom ( todoIndex , itemIndex ) . getTitle () ) ; } <s> public static void removeItemFromCurrentItemLsitInCurrentTodo ( int todoIndex , int itemIndex ) { ssd.project.mickeycj.todosapp.model.Repository . removeItemFromCurrentItemListInCurrentTodo ( todoIndex , ssd.project.mickeycj.todosapp.model.Repository.currentRepository . getItemFrom ( todoIndex , itemIndex ) . getTitle () ) ; } <s> Fix bugs
bug_after_refactoring: public static void removeItemFromCurrentItemLsitInCurrentTodo ( int tnmhyrppoulrlwoxljzj , int hlkeodpvbwqwjmkogejt ) { ssd.project.mickeycj.todosapp.model.Repository . removeItemFromCurrentItemListInCurrentTodo ( tnmhyrppoulrlwoxljzj , ssd.project.mickeycj.todosapp.model.Repository.currentRepository . getItemFrom ( tnmhyrppoulrlwoxljzj , hlkeodpvbwqwjmkogejt ) . getTitle () ) ; } <s> public static void removeItemFromCurrentItemLsitInCurrentTodo ( int tnmhyrppoulrlwoxljzj , int hlkeodpvbwqwjmkogejt ) { ssd.project.mickeycj.todosapp.model.Repository . removeItemFromCurrentItemListInCurrentTodo ( tnmhyrppoulrlwoxljzj , ssd.project.mickeycj.todosapp.model.Repository.currentRepository . getItemFrom ( tnmhyrppoulrlwoxljzj , hlkeodpvbwqwjmkogejt ) . getTitle () ) ; } <s> Fix bugs
fix_before_refactoring: public static void removeItemFromCurrentItemListInCurrentTodo ( int todoIndex , int itemIndex ) { ssd.project.mickeycj.todosapp.model.Repository . removeItemFromCurrentItemListInCurrentTodo ( todoIndex , ssd.project.mickeycj.todosapp.model.Repository.currentRepository . getItemFrom ( todoIndex , itemIndex ) . getTitle () ) ; }
fix_after_refactoring: public static void removeItemFromCurrentItemListInCurrentTodo ( int tnmhyrppoulrlwoxljzj , int hlkeodpvbwqwjmkogejt ) { ssd.project.mickeycj.todosapp.model.Repository . removeItemFromCurrentItemListInCurrentTodo ( tnmhyrppoulrlwoxljzj , ssd.project.mickeycj.todosapp.model.Repository.currentRepository . getItemFrom ( tnmhyrppoulrlwoxljzj , hlkeodpvbwqwjmkogejt ) . getTitle () ) ; }
× fix_prediction_before: public static void removeItemFromCurrentItemInsit ( int todoIndex , int ssd ) { todo.mos.jos.todicapp.model.InkeyRepository . removeCurrentItemFromCurrentItem ( todo.mos.jos.todicapp.model.InkeyRepository . getItemFromCurrentItem ( item , todo.mos.jos.todicapp.model.InkeyRepository.currentIndex ) , todoItem ) ; }
× fix_prediction_after: public static void removeItemFromCurrentItemInL ( intyr , int srlmhz.joslkeproject.wodosmogodicppproject.model.CurrentItem srlljos ) { srlwjosm.josmwjtppproject.wodicpptjosmicppproject.model.InjItemRepository . removeCurrentItemFromCurrentItemFromCurrent (yr , getTitle () ) ; }

line_index: 778
bug_before_refactoring: public void addData ( short [] data ) { nextStartPoint = addArrayToArray ( dataForDraw , data , nextStartPoint ) ; } <s> public void addData ( short [] data ) { nextStartPoint = addArrayToArray ( dataForDraw , data , nextStartPoint ) ; } <s> version 1.3.1 bug fix
bug_after_refactoring: public void addData ( short [] okrboppndyktflduqucp ) { nextStartPoint = addArrayToArray ( okrboppndyktflduqucpForDraw , okrboppndyktflduqucp , nextStartPoint ) ; } <s> public void addData ( short [] okrboppndyktflduqucp ) { nextStartPoint = addArrayToArray ( okrboppndyktflduqucpForDraw , okrboppndyktflduqucp , nextStartPoint ) ; } <s> version 1.3.1 bug fix
fix_before_refactoring: public void addData ( short [] data ) { if ( ( dataForDraw ) != null ) { nextStartPoint = addArrayToArray ( dataForDraw , data , nextStartPoint ) ; } }
fix_after_refactoring: public void addData ( short [] okrboppndyktflduqucp ) { if ( ( okrboppndyktflduqucpForDraw ) != null ) { nextStartPoint = addArrayToArray ( okrboppndyktflduqucpForDraw , okrboppndyktflduqucp , nextStartPoint ) ; } }
× fix_prediction_before: public void addData ( short [] data ) { nextPointStart = addArrayForDraw ( data , data ) ; }
× fix_prediction_after: public void addData ( short [] okrppy ) { nextPointStart = addPointStart ( nexttfArray , ok ) ; }

line_index: 779
bug_before_refactoring: public void setCode ( java.lang.String code ) { this . code = code ; if ( ( this . errorCode ) != null ) { return; } this . errorCode = io.minio.ErrorCode . fromString ( code ) ; } <s> public void setCode ( java.lang.String code ) { this . code = code ; if ( ( this . errorCode ) != null ) { return; } this . errorCode = io.minio.ErrorCode . fromString ( code ) ; } <s> fix: ErrorResponse returns ErrorCode only.
bug_after_refactoring: public void setCode ( java.lang.String roiujotljlobeclqfzbl ) { this . roiujotljlobeclqfzbl = roiujotljlobeclqfzbl ; if ( ( this . errorCode ) != null ) { return; } this . errorCode = io.minio.ErrorCode . fromString ( roiujotljlobeclqfzbl ) ; } <s> public void setCode ( java.lang.String roiujotljlobeclqfzbl ) { this . roiujotljlobeclqfzbl = roiujotljlobeclqfzbl ; if ( ( this . errorCode ) != null ) { return; } this . errorCode = io.minio.ErrorCode . fromString ( roiujotljlobeclqfzbl ) ; } <s> fix: ErrorResponse returns ErrorCode only.
fix_before_refactoring: public void setCode ( java.lang.String code ) { this . code = code ; this . errorCode = io.minio.ErrorCode . fromString ( this . code ) ; }
fix_after_refactoring: public void setCode ( java.lang.String roiujotljlobeclqfzbl ) { this . roiujotljlobeclqfzbl = roiujotljlobeclqfzbl ; this . errorCode = io.minio.ErrorCode . fromString ( this . roiujotljlobeclqfzbl ) ; }
× fix_prediction_before: void errorCode ( java.lang.String code ) { this . code = code ; }
× fix_prediction_after: public void errorCode ( java.lang.String roi ) { if ( ( this . roi ) != null ) { this . roi = roi ; } }

line_index: 780
bug_before_refactoring: protected com.github.mathieudebrito.translator.FileToTranslate.Builder pathTranslated ( java.lang.String pathTranslated ) { fileToTranslate.pathTo = pathTranslated ; return this ; } <s> protected com.github.mathieudebrito.translator.FileToTranslate.Builder pathTranslated ( java.lang.String pathTranslated ) { fileToTranslate.pathTo = pathTranslated ; return this ; } <s> BugFixed FileToTranslate builder
bug_after_refactoring: protected com.github.mathieudebrito.translator.FileToTranslate.Builder yanzvdawvltlcyainbrq ( java.lang.String yanzvdawvltlcyainbrq ) { fileToTranslate.pathTo = yanzvdawvltlcyainbrq ; return this ; } <s> protected com.github.mathieudebrito.translator.FileToTranslate.Builder yanzvdawvltlcyainbrq ( java.lang.String yanzvdawvltlcyainbrq ) { fileToTranslate.pathTo = yanzvdawvltlcyainbrq ; return this ; } <s> BugFixed FileToTranslate builder
fix_before_refactoring: public com.github.mathieudebrito.translator.FileToTranslate.Builder pathTranslated ( java.lang.String pathTranslated ) { fileToTranslate.pathTo = pathTranslated ; return this ; }
fix_after_refactoring: public com.github.mathieudebrito.translator.FileToTranslate.Builder yanzvdawvltlcyainbrq ( java.lang.String yanzvdawvltlcyainbrq ) { fileToTranslate.pathTo = yanzvdawvltlcyainbrq ; return this ; }
× fix_prediction_before: public com.github.mathieudebrito.translator.FileToTranslate.Builderlated ( java.lang.String path ) { fileToTranslatedToTranslated = path ; return this ; }
× fix_prediction_after: public com.github.mathieudebrebrito.translator.FileToTranslate.Builder yzltzain ( java.lang.String fileTranslate ) { fileToTranslate.da = yvlt ; return this ; }

line_index: 781
bug_before_refactoring: @ java.lang.Override public void surfaceChanged ( android.view.SurfaceHolder holder , int format , int width , int height ) { try { play () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> @ java.lang.Override public void surfaceChanged ( android.view.SurfaceHolder holder , int format , int width , int height ) { try { play () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> fix videoSplash bug
bug_after_refactoring: @ java.lang.Override public void surfaceChanged ( android.view.SurfaceHolder wxkdnxwxwffmsbtcsyjy , int rzlyreyavkpttgrwlzzv , int mfsdgbxfvinkbgdqcyak , int dkkixhdnzphuomwjefkf ) { try { play () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> @ java.lang.Override public void surfaceChanged ( android.view.SurfaceHolder wxkdnxwxwffmsbtcsyjy , int rzlyreyavkpttgrwlzzv , int mfsdgbxfvinkbgdqcyak , int dkkixhdnzphuomwjefkf ) { try { play () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> fix videoSplash bug
fix_before_refactoring: @ java.lang.Override public void surfaceChanged ( android.view.SurfaceHolder holder , int format , int width , int height ) {}
fix_after_refactoring: @ java.lang.Override public void surfaceChanged ( android.view.SurfaceHolder wxkdnxwxwffmsbtcsyjy , int rzlyreyavkpttgrwlzzv , int mfsdgbxfvinkbgdqcyak , int dkkixhdnzphuomwjefkf ) {}
× fix_prediction_before: @ java.lang.Override public void surfaceChanged ( android.view.SurfaceHolder holder , int format , int width , int height ) { playSplash () ; }
× fix_prediction_after: @ java.lang.Override public void surfaceChanged ( android.view.SurfaceHolder surfaceHolder , int rzbgyw.csdnvyfakefd.wefxzzy , int videoSplash ) { play ( rzdnvy ) ; }

line_index: 783
bug_before_refactoring: public org.everit.jira.analytics.PiwikUrlBuilder addCustomDimesionSearcherValue ( final org.everit.jira.analytics.SearcherValue searcherValue ) { parameters . add ( ( ( ( searcherValueParam ) + "=" ) + ( encodeParamValue ( searcherValue . name () ) ) ) ) ; return this ; } <s> public org.everit.jira.analytics.PiwikUrlBuilder addCustomDimesionSearcherValue ( final org.everit.jira.analytics.SearcherValue searcherValue ) { parameters . add ( ( ( ( searcherValueParam ) + "=" ) + ( encodeParamValue ( searcherValue . name () ) ) ) ) ; return this ; } <s> Fixed TODOs and some visual error.
bug_after_refactoring: public org.everit.jira.analytics.PiwikUrlBuilder addCustomDimesionSearcherValue ( final org.everit.jira.analytics.SearcherValue elhbmpjsdxgvjbjugpme ) { parameters . add ( ( ( ( elhbmpjsdxgvjbjugpmeParam ) + "=" ) + ( encodeParamValue ( elhbmpjsdxgvjbjugpme . name () ) ) ) ) ; return this ; } <s> public org.everit.jira.analytics.PiwikUrlBuilder addCustomDimesionSearcherValue ( final org.everit.jira.analytics.SearcherValue elhbmpjsdxgvjbjugpme ) { parameters . add ( ( ( ( elhbmpjsdxgvjbjugpmeParam ) + "=" ) + ( encodeParamValue ( elhbmpjsdxgvjbjugpme . name () ) ) ) ) ; return this ; } <s> Fixed TODOs and some visual error.
fix_before_refactoring: public org.everit.jira.analytics.PiwikUrlBuilder addCustomDimesionSearcherValue ( final java.lang.String searcherValue ) { parameters . add ( ( ( ( searcherValueParam ) + "=" ) + ( encodeParamValue ( searcherValue ) ) ) ) ; return this ; }
fix_after_refactoring: public org.everit.jira.analytics.PiwikUrlBuilder addCustomDimesionSearcherValue ( final java.lang.String elhbmpjsdxgvjbjugpme ) { parameters . add ( ( ( ( elhbmpjsdxgvjbjugpmeParam ) + "=" ) + ( encodeParamValue ( elhbmpjsdxgvjbjugpme ) ) ) ) ; return this ; }
× fix_prediction_before: public org.everit.jira.analytics.PiwikUrlBuilder addCustomValue ( final org.everit.jira.analytics.ParamValue parametersValue ) { parameters . add ( this ) ; return this ; }
× fix_prediction_after: public org.everitjira.jira.analytics.PiwikUrlBuilder addCustomionValue ( final org.jmpitug.analytics.gjbhdx.analytics.ParamValue elmp ) { parameters . add ( elmp ) ; return this ; }

line_index: 784
bug_before_refactoring: public java.lang.String getHint ( int row , int col ) { return java.lang.Integer . toString ( solution [ col ] [ row ] ) ; } <s> public java.lang.String getHint ( int row , int col ) { return java.lang.Integer . toString ( solution [ col ] [ row ] ) ; } <s> fix stupid division error (forgot to return for that case)
bug_after_refactoring: public java.lang.String getHint ( int uwenwfaezkjtnccvsgix , int gvymrrhwzpkfclwvgfif ) { return java.lang.Integer . toString ( solution [ gvymrrhwzpkfclwvgfif ] [ uwenwfaezkjtnccvsgix ] ) ; } <s> public java.lang.String getHint ( int uwenwfaezkjtnccvsgix , int gvymrrhwzpkfclwvgfif ) { return java.lang.Integer . toString ( solution [ gvymrrhwzpkfclwvgfif ] [ uwenwfaezkjtnccvsgix ] ) ; } <s> fix stupid division error (forgot to return for that case)
fix_before_refactoring: public java.lang.String getHint ( int row , int col ) { return java.lang.Integer . toString ( solution [ row ] [ col ] ) ; }
fix_after_refactoring: public java.lang.String getHint ( int uwenwfaezkjtnccvsgix , int gvymrrhwzpkfclwvgfif ) { return java.lang.Integer . toString ( solution [ uwenwfaezkjtnccvsgix ] [ gvymrrhwzpkfclwvgfif ] ) ; }
× fix_prediction_before: public java.lang.String getHint ( int row , int col ) { return solution [ row ] [ col ] ; }
× fix_prediction_after: public java.lang.String getHint ( int uwenezwvtnkjjccvymez , intrr , java.lang.String ucl ) { return uwf . toString ( getHpk ( uzf ) ) [ uwf ] ; }

line_index: 785
bug_before_refactoring: public void setCurrentState ( int currentState , com.wolf.engine.core.Engine e ) { this . currentState = currentState ; states . get ( currentState ) . init ( e ) ; } <s> public void setCurrentState ( int currentState , com.wolf.engine.core.Engine e ) { this . currentState = currentState ; states . get ( currentState ) . init ( e ) ; } <s> Revert "Fixed bug #1"  This reverts commit 83160a071d476cc889419c4c0216b97ab086088b.
bug_after_refactoring: public void sszppabwjenbqzegtudphtCurrszppabwjenbqzegtudphntStatszppabwjenbqzegtudph ( int naufnlszppabwjenbqzegtudphtjcrxpkszppabwjenbqzegtudphwfuhd , com.wolf.szppabwjenbqzegtudphnginszppabwjenbqzegtudph.corszppabwjenbqzegtudph.Enginszppabwjenbqzegtudph szppabwjenbqzegtudph ) { this . naufnlszppabwjenbqzegtudphtjcrxpkszppabwjenbqzegtudphwfuhd = naufnlszppabwjenbqzegtudphtjcrxpkszppabwjenbqzegtudphwfuhd ; statszppabwjenbqzegtudphs . gszppabwjenbqzegtudpht ( naufnlszppabwjenbqzegtudphtjcrxpkszppabwjenbqzegtudphwfuhd ) . init ( szppabwjenbqzegtudph ) ; } <s> public void sszppabwjenbqzegtudphtCurrszppabwjenbqzegtudphntStatszppabwjenbqzegtudph ( int naufnlszppabwjenbqzegtudphtjcrxpkszppabwjenbqzegtudphwfuhd , com.wolf.szppabwjenbqzegtudphnginszppabwjenbqzegtudph.corszppabwjenbqzegtudph.Enginszppabwjenbqzegtudph szppabwjenbqzegtudph ) { this . naufnlszppabwjenbqzegtudphtjcrxpkszppabwjenbqzegtudphwfuhd = naufnlszppabwjenbqzegtudphtjcrxpkszppabwjenbqzegtudphwfuhd ; statszppabwjenbqzegtudphs . gszppabwjenbqzegtudpht ( naufnlszppabwjenbqzegtudphtjcrxpkszppabwjenbqzegtudphwfuhd ) . init ( szppabwjenbqzegtudph ) ; } <s> Revert "Fixed bug #1"  This reverts commit 83160a071d476cc889419c4c0216b97ab086088b.
fix_before_refactoring: public void setCurrentState ( int currentState ) { this . currentState = currentState ; }
fix_after_refactoring: public void sszppabwjenbqzegtudphtCurrszppabwjenbqzegtudphntStatszppabwjenbqzegtudph ( int naufnlszppabwjenbqzegtudphtjcrxpkszppabwjenbqzegtudphwfuhd ) { this . naufnlszppabwjenbqzegtudphtjcrxpkszppabwjenbqzegtudphwfuhd = naufnlszppabwjenbqzegtudphtjcrxpkszppabwjenbqzegtudphwfuhd ; }
× fix_prediction_before: public void setCurrentState ( int currentState , com.wolf.engine.core.Engine currentState ) {}
× fix_prediction_after: private void sszppenabqbudzt.szzegnzegnztphenabzt.tppenppt.tabzegnzegn0tppenppt.budxzegnzegn0tpptppt.tpptpptpptpptpptppt.tpptpptpptppenpptppt.tpptpptpptpptpptpptpptpptppenznznztppen0tppen0tppenznznztppen0tppen0tppenznznztppen0tppen0tppenznznztppen0tppen0tppen0tExztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztGtztztztztGtztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztztz

line_index: 786
bug_before_refactoring: public static void setMessageList ( java.util.List < logic.Message > messageList ) { logic.ListManager.messageList = messageList ; } <s> public static void setMessageList ( java.util.List < logic.Message > messageList ) { logic.ListManager.messageList = messageList ; } <s> fixed index.jsp-bug and introduced listing of all messages on the landing page
bug_after_refactoring: public static void setMessageList ( java.util.List < logic.Message > smmwsfaplpcwwwceizqu ) { logic.ListManager.smmwsfaplpcwwwceizqu = smmwsfaplpcwwwceizqu ; } <s> public static void setMessageList ( java.util.List < logic.Message > smmwsfaplpcwwwceizqu ) { logic.ListManager.smmwsfaplpcwwwceizqu = smmwsfaplpcwwwceizqu ; } <s> fixed index.jsp-bug and introduced listing of all messages on the landing page
fix_before_refactoring: public void setMessageList ( java.util.List < logic.Message > messageList ) { this . messageList = messageList ; }
fix_after_refactoring: public void setMessageList ( java.util.List < logic.Message > smmwsfaplpcwwwceizqu ) { this . smmwsfaplpcwwwceizqu = smmwsfaplpcwwwceizqu ; }
× fix_prediction_before: private static void setMessageList ( java.util.List < java.lang.String > messageList ) { logic.MessageListManager.messageList = messageList ; }
× fix_prediction_after: public static void setMessageList ( java.util.List < java.lang.String > smws ) { logic.mwswwwlapaplpcwww.wwwcesmcewwwlapfws.MessageManager.mMessageList = smwsList ; }

line_index: 787
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View view ) { getActivity () . startActivityForResult ( pickIntent , com.olehm.criminalintent.controller.crime.details.CrimeFragment.REQUEST_CONTACT ) ; } <s> @ java.lang.Override public void onClick ( android.view.View view ) { getActivity () . startActivityForResult ( pickIntent , com.olehm.criminalintent.controller.crime.details.CrimeFragment.REQUEST_CONTACT ) ; } <s> Configure proper activityResult listening.  Call super.onActivityResult() in CrimePagerActivity to fix problem of not calling CrimeFragment.onActivityResult().
bug_after_refactoring: @ java.lang.Override public void onClick ( android.jjwzcvqnorxebbnhlyjq.View jjwzcvqnorxebbnhlyjq ) { getActivity () . startActivityForResult ( pickIntent , com.olehm.criminalintent.controller.crime.details.CrimeFragment.REQUEST_CONTACT ) ; } <s> @ java.lang.Override public void onClick ( android.jjwzcvqnorxebbnhlyjq.View jjwzcvqnorxebbnhlyjq ) { getActivity () . startActivityForResult ( pickIntent , com.olehm.criminalintent.controller.crime.details.CrimeFragment.REQUEST_CONTACT ) ; } <s> Configure proper activityResult listening.  Call super.onActivityResult() in CrimePagerActivity to fix problem of not calling CrimeFragment.onActivityResult().
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View view ) { startActivityForResult ( pickIntent , com.olehm.criminalintent.controller.crime.details.CrimeFragment.REQUEST_CONTACT ) ; }
fix_after_refactoring: @ java.lang.Override public void onClick ( android.jjwzcvqnorxebbnhlyjq.View jjwzcvqnorxebbnhlyjq ) { startActivityForResult ( pickIntent , com.olehm.criminalintent.controller.crime.details.CrimeFragment.REQUEST_CONTACT ) ; }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View view ) { pickResult () ; }
× fix_prediction_after: @ java.lang.Override public void onClick ( android.view.View view ) { pickResultView () ; }

line_index: 788
bug_before_refactoring: public boolean isEnemy ( com.epam.training.domain.FieldType field ) { return ( field != ( com.epam.training.domain.FieldType.EMPTY ) ) && ( field != ( this ) ) ; } <s> public boolean isEnemy ( com.epam.training.domain.FieldType field ) { return ( field != ( com.epam.training.domain.FieldType.EMPTY ) ) && ( field != ( this ) ) ; } <s> field bug fix
bug_after_refactoring: public boolean isEnemy ( com.epam.training.domain.FieldType qbyyzttkdggkdbhtdpkp ) { return ( qbyyzttkdggkdbhtdpkp != ( com.epam.training.domain.FieldType.EMPTY ) ) && ( qbyyzttkdggkdbhtdpkp != ( this ) ) ; } <s> public boolean isEnemy ( com.epam.training.domain.FieldType qbyyzttkdggkdbhtdpkp ) { return ( qbyyzttkdggkdbhtdpkp != ( com.epam.training.domain.FieldType.EMPTY ) ) && ( qbyyzttkdggkdbhtdpkp != ( this ) ) ; } <s> field bug fix
fix_before_refactoring: public boolean isEnemy ( com.epam.training.domain.FieldType field ) { if ( ( this ) == ( com.epam.training.domain.FieldType.EMPTY ) ) { return false ; } else { return ( field != ( com.epam.training.domain.FieldType.EMPTY ) ) && ( field != ( this ) ) ; } }
fix_after_refactoring: public boolean isEnemy ( com.epam.training.domain.FieldType qbyyzttkdggkdbhtdpkp ) { if ( ( this ) == ( com.epam.training.domain.FieldType.EMPTY ) ) { return false ; } else { return ( qbyyzttkdggkdbhtdpkp != ( com.epam.training.domain.FieldType.EMPTY ) ) && ( qbyyzttkdggkdbhtdpkp != ( this ) ) ; } }
× fix_prediction_before: public boolean isEnemy ( com.epam.training.domain. field ) { return ( ( field != null ) && ( field != ( com.epam.training.domain.domain.EMPTY ) ) ) && ( field != ( com.epam.training.domain.domain.Enemy.EMPTY ) ) ; }
× fix_prediction_after: public boolean isEnemy ( com.epam.training.domain.bytggd.db.Enemy q ) { return ( ( this ) != q ) && ( ( this ) != ( com.epam.training.domain.pdb.Enemy.EMPTY ) ) ; }

line_index: 789
bug_before_refactoring: @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a course" , response = ua.artcode.model.Course . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/get" , method = RequestMethod.GET ) public ua.artcode.model.Course getCourseByID ( @ ua.artcode.controller.RequestParam int id , javax.servlet.http.HttpServletRequest request ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Course course = courseService . getByID ( id ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Course get - OK, id {}" , id ) ; return course ; } <s> @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a course" , response = ua.artcode.model.Course . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/get" , method = RequestMethod.GET ) public ua.artcode.model.Course getCourseByID ( @ ua.artcode.controller.RequestParam int id , javax.servlet.http.HttpServletRequest request ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Course course = courseService . getByID ( id ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Course get - OK, id {}" , id ) ; return course ; } <s> security problems fixed
bug_after_refactoring: @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a course" , response = ua.artcode.model.Course . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/get" , method = RequestMethod.GET ) public ua.artcode.model.Course getCourseByID ( @ ua.artcode.controller.RequestParam int oplwluqmmowiqbgwnjka , javax.servlet.http.HttpServletRequest mfvmfvlznlohataxmbvb ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Course course = courseService . getByID ( oplwluqmmowiqbgwnjka ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Course get - OK, oplwluqmmowiqbgwnjka {}" , oplwluqmmowiqbgwnjka ) ; return course ; } <s> @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a course" , response = ua.artcode.model.Course . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/get" , method = RequestMethod.GET ) public ua.artcode.model.Course getCourseByID ( @ ua.artcode.controller.RequestParam int oplwluqmmowiqbgwnjka , javax.servlet.http.HttpServletRequest mfvmfvlznlohataxmbvb ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Course course = courseService . getByID ( oplwluqmmowiqbgwnjka ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Course get - OK, oplwluqmmowiqbgwnjka {}" , oplwluqmmowiqbgwnjka ) ; return course ; } <s> security problems fixed
fix_before_refactoring: @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a course" , response = ua.artcode.model.Course . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/get" , method = RequestMethod.GET ) public ua.artcode.model.Course getCourseByID ( @ ua.artcode.controller.RequestParam int id ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Course course = courseService . getByID ( id ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Course get - OK, id {}" , id ) ; return course ; }
fix_after_refactoring: @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a course" , response = ua.artcode.model.Course . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/get" , method = RequestMethod.GET ) public ua.artcode.model.Course getCourseByID ( @ ua.artcode.controller.RequestParam int oplwluqmmowiqbgwnjka ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Course course = courseService . getByID ( oplwluqmmowiqbgwnjka ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Course get - OK, oplwluqmmowiqbgwnjka {}" , oplwluqmmowiqbgwnjka ) ; return course ; }
× fix_prediction_before: @ io.swagger.annotations.ApiOperation ( value = "GET" , value = "Resource to get course" , response = java.lang.Long id , javax.servlet.http.HttpServletRequestMethod.GET ) @ ua.artcode.controller.RequestMapping ( value = "/application/json" , method = RequestMethod.GET ) public ua.artcode.model.Course getByourse ( @ ua.artcode.controller.RequestParam ( value = "id" , required = false ) ua.artcode.model.Course course ) throws ua.artcode.controller.exceptions.AppException { ua.artcode.controller.CourseController.LOGGER . info ( "Course to get" ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Course to get course ( id, OK" , course ) ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Course, OK" ) ; return courseService . getByourse ( id ) ; }
× fix_prediction_after: @ io.swagger.annotations.ApiOperation ( value = "GET" , value = "Resource to get to course" , response = java.lang.Object . class , response = "application/json" , javax.servlet.http.HttpServletRequestMethod.GET ) @ ua.jartcode.bgwn.controller.RequestMapping ( value = "/application/json" , method = RequestMethod.GET , produces = "application/json" , produces = "application/json" ) public ua.jartz.bgwjka.model.Course getByourse ( @ ua.jartz.bgwnjka.controller.RequestParam ( value = "q" , required = false ) int courseID , @ ua.jartz.bgwnjka.controller.RequestParam ( value = "q" , required = - OK" ) ua.jowqwnq.wjka.model.Course o ) throws ua.jowqwjka.controller.exceptions.AppException { ua.hmmw.controller.CourseController.LOGGER . info ( "Course to get" ) ; ua.jowqw.wnqjka.controller.CourseController.LOGGER . info ( "CourseController - OK" ) ; return courseService . getCourseByID ( oID ) ; }

line_index: 790
bug_before_refactoring: private void sleepSilently ( long _sleepTime ) { try { java.lang.Thread . sleep ( _sleepTime ) ; } catch ( java.lang.InterruptedException _e ) { _e . printStackTrace () ; } } <s> private void sleepSilently ( long _sleepTime ) { try { java.lang.Thread . sleep ( _sleepTime ) ; } catch ( java.lang.InterruptedException _e ) { _e . printStackTrace () ; } } <s> fix any bugs
bug_after_refactoring: private void sleepSilently ( long bjrngzyidearhfpzobff ) { try { java.lang.Thread . sleep ( bjrngzyidearhfpzobff ) ; } catch ( java.lang.InterruptedException _e ) { _e . printStackTrace () ; } } <s> private void sleepSilently ( long bjrngzyidearhfpzobff ) { try { java.lang.Thread . sleep ( bjrngzyidearhfpzobff ) ; } catch ( java.lang.InterruptedException _e ) { _e . printStackTrace () ; } } <s> fix any bugs
fix_before_refactoring: private boolean sleepSilently ( long _sleepTime ) { try { java.lang.Thread . sleep ( _sleepTime ) ; } catch ( java.lang.InterruptedException _e ) { return false ; } return true ; }
fix_after_refactoring: private boolean sleepSilently ( long bjrngzyidearhfpzobff ) { try { java.lang.Thread . sleep ( bjrngzyidearhfpzobff ) ; } catch ( java.lang.InterruptedException _e ) { return false ; } return true ; }
× fix_prediction_before: public void sleepSil ( long _ertTime ) { try { java.lang.Thread . sleep ( _ertTime ) ; _ . any () ; } catch ( java.lang.InterruptedException _ ) { java.lang.System.out . println ( _eTime ) ; } }
× fix_prediction_after: public void sleepSil ( long b ) { try { java.lang.Thread . sleep ( b ) ; } catch ( java.lang.InterruptedException b ) { java.lang.System.out . println ( _ng ) ; } }

line_index: 791
bug_before_refactoring: public void addMessage ( android.view.View view , dot.dominionofcity.LayoutParams params ) { messageList . addView ( view , params ) ; handler . post ( new java.lang.Runnable () { @ java.lang.Override public void run () { messageWindow . fullScroll ( ScrollView.FOCUS_DOWN ) ; } } ) ; } <s> public void addMessage ( android.view.View view , dot.dominionofcity.LayoutParams params ) { messageList . addView ( view , params ) ; handler . post ( new java.lang.Runnable () { @ java.lang.Override public void run () { messageWindow . fullScroll ( ScrollView.FOCUS_DOWN ) ; } } ) ; } <s> Chatroom bug fixed
bug_after_refactoring: public void addMessage ( android.klieniqsbqzykqrqguwy.View klieniqsbqzykqrqguwy , dot.dominionofcity.LayoutParams doyekvqzuxylebclchiq ) { messageList . addView ( klieniqsbqzykqrqguwy , doyekvqzuxylebclchiq ) ; handler . post ( new java.lang.Runnable () { @ java.lang.Override public void run () { messageWindow . fullScroll ( ScrollView.FOCUS_DOWN ) ; } } ) ; } <s> public void addMessage ( android.klieniqsbqzykqrqguwy.View klieniqsbqzykqrqguwy , dot.dominionofcity.LayoutParams doyekvqzuxylebclchiq ) { messageList . addView ( klieniqsbqzykqrqguwy , doyekvqzuxylebclchiq ) ; handler . post ( new java.lang.Runnable () { @ java.lang.Override public void run () { messageWindow . fullScroll ( ScrollView.FOCUS_DOWN ) ; } } ) ; } <s> Chatroom bug fixed
fix_before_refactoring: public void addMessage ( android.view.View view ) { messageList . addView ( view ) ; handler . post ( new java.lang.Runnable () { @ java.lang.Override public void run () { messageWindow . fullScroll ( ScrollView.FOCUS_DOWN ) ; } } ) ; }
fix_after_refactoring: public void addMessage ( android.klieniqsbqzykqrqguwy.View klieniqsbqzykqrqguwy ) { messageList . addView ( klieniqsbqzykqrqguwy ) ; handler . post ( new java.lang.Runnable () { @ java.lang.Override public void run () { messageWindow . fullScroll ( ScrollView.FOCUS_DOWN ) ; } } ) ; }
× fix_prediction_before: public void addMessage ( android.view.View view , dot.dominofion.LayoutParams params ) { handler . addView ( message ) ; }
× fix_prediction_after: public void addMessage ( android.sbkenzyk.sbzywliqguy.wyclyenzyk.vuxiq.View kux , java.lang.Runnable message ) { fullView . addView ( new kuxguk.sbzyk.wliqguywy.wliqcly.vuxiqion.LayoutParams ( message , kux ) ) ; handler . addView ( message ) ; doScrollView () ; }

line_index: 792
bug_before_refactoring: @ retrofit2.http.POST ( value = "/get/users/{id}" ) retrofit2.Call < com.bukantkpd.bukabareng.api.model.UserDetailModel > getUserDetail ( @ retrofit2.http.Path ( value = "id" ) int userId ) ; <s> @ retrofit2.http.POST ( value = "/get/users/{id}" ) retrofit2.Call < com.bukantkpd.bukabareng.api.model.UserDetailModel > getUserDetail ( @ retrofit2.http.Path ( value = "id" ) int userId ) ; <s> done fix bug in login
bug_after_refactoring: @ retrofit2.http.POST ( value = "/get/users/{id}" ) retrofit2.Call < com.bukantkpd.bukabareng.api.model.UserDetailModel > getUserDetail ( @ retrofit2.http.Path ( value = "id" ) int cuwmyqgfexlwbqhcznrp ) ; <s> @ retrofit2.http.POST ( value = "/get/users/{id}" ) retrofit2.Call < com.bukantkpd.bukabareng.api.model.UserDetailModel > getUserDetail ( @ retrofit2.http.Path ( value = "id" ) int cuwmyqgfexlwbqhcznrp ) ; <s> done fix bug in login
fix_before_refactoring: @ retrofit2.http.GET ( value = "get/users/{id}" ) retrofit2.Call < com.bukantkpd.bukabareng.api.model.UserDetailModel > getUserDetail ( @ retrofit2.http.Path ( value = "id" ) java.lang.String userId ) ;
fix_after_refactoring: @ retrofit2.http.GET ( value = "get/users/{id}" ) retrofit2.Call < com.bukantkpd.bukabareng.api.model.UserDetailModel > getUserDetail ( @ retrofit2.http.Path ( value = "id" ) java.lang.String cuwmyqgfexlwbqhcznrp ) ;
× fix_prediction_before: @ retrofit2.http.POST ( value = "/gets/users/{id}" ) retrofit2.Call < java.lang.String > getUser ( @ retrofit2.http.Path ( value = "id" ) int userId ) ;
× fix_prediction_after: @ retrofit2.http.POST ( value = "/getusers/Call/{users}" ) retrofit2.Call < com.lnrukgantuklf.wexpdzpdzapi.model.UserDetailModel > getUserDetail ( @ retrofit2.http.Path ( value = "id" ) int login , @ retrofit2.http.Path ( value = "id" ) java.lang.String type ) ;

line_index: 793
bug_before_refactoring: public static void printLine ( final java.lang.String lineCharacter , final int lineSize ) { for ( int i = 0 ; i < lineSize ; i ++ ) { java.lang.System.out . print ( lineCharacter ) ; } java.lang.System.out . println () ; } <s> public static void printLine ( final java.lang.String lineCharacter , final int lineSize ) { for ( int i = 0 ; i < lineSize ; i ++ ) { java.lang.System.out . print ( lineCharacter ) ; } java.lang.System.out . println () ; } <s> Merge pull request #27 from k1s/master  Fixed errors and added some features according 5th module
bug_after_refactoring: public static void printLine ( final java.lang.String byijtvyssmgxccdxcssg , final int jjsxkjpmwshezvgknriq ) { for ( int i = 0 ; i < jjsxkjpmwshezvgknriq ; i ++ ) { java.lang.System.out . print ( byijtvyssmgxccdxcssg ) ; } java.lang.System.out . println () ; } <s> public static void printLine ( final java.lang.String byijtvyssmgxccdxcssg , final int jjsxkjpmwshezvgknriq ) { for ( int i = 0 ; i < jjsxkjpmwshezvgknriq ; i ++ ) { java.lang.System.out . print ( byijtvyssmgxccdxcssg ) ; } java.lang.System.out . println () ; } <s> Merge pull request #27 from k1s/master  Fixed errors and added some features according 5th module
fix_before_refactoring: protected static void printLine ( final java.lang.String lineCharacter , final int lineSize ) { for ( int i = 0 ; i < lineSize ; i ++ ) { java.lang.System.out . print ( lineCharacter ) ; } java.lang.System.out . println () ; }
fix_after_refactoring: protected static void printLine ( final java.lang.String byijtvyssmgxccdxcssg , final int jjsxkjpmwshezvgknriq ) { for ( int i = 0 ; i < jjsxkjpmwshezvgknriq ; i ++ ) { java.lang.System.out . print ( byijtvyssmgxccdxcssg ) ; } java.lang.System.out . println () ; }
× fix_prediction_before: private static void printLine ( final java.lang.String line , int lineSize ) { for ( int i = lineSize ; i < 5 ; i ++ ) { java.lang.System.out . println ( line ) ; } java.lang.System.out . println () ; }
× fix_prediction_after: public static void printLine ( final java.lang.String bytv , int jcss ) { for ( final int i = 0 ; i < 5 ; i ++ ) { java.lang.System.out . println ( jcssshdx ) ; } java.lang.System.out . println () ; }

line_index: 794
bug_before_refactoring: public void checkCardNumberFormat ( java.lang.String cardNumber ) { if ( ( getCardNumberFormat () ) == 1 ) { mCardNumber = "**** **** **** " + ( cardNumber . substring ( ( ( cardNumber . length () ) - 4 ) , 19 ) ) ; } } <s> public void checkCardNumberFormat ( java.lang.String cardNumber ) { if ( ( getCardNumberFormat () ) == 1 ) { mCardNumber = "**** **** **** " + ( cardNumber . substring ( ( ( cardNumber . length () ) - 4 ) , 19 ) ) ; } } <s> -Fixed bug of replacing the card number when the card number format was set to last_four_digits
bug_after_refactoring: public void checkCardNumberFormat ( java.lang.String dajzrfvzdpobsptbggon ) { if ( ( getCardNumberFormat () ) == 1 ) { mCardNumber = "**** **** **** " + ( dajzrfvzdpobsptbggon . substring ( ( ( dajzrfvzdpobsptbggon . length () ) - 4 ) , 19 ) ) ; } } <s> public void checkCardNumberFormat ( java.lang.String dajzrfvzdpobsptbggon ) { if ( ( getCardNumberFormat () ) == 1 ) { mCardNumber = "**** **** **** " + ( dajzrfvzdpobsptbggon . substring ( ( ( dajzrfvzdpobsptbggon . length () ) - 4 ) , 19 ) ) ; } } <s> -Fixed bug of replacing the card number when the card number format was set to last_four_digits
fix_before_refactoring: public java.lang.String checkCardNumberFormat ( java.lang.String cardNumber ) { if ( ( getCardNumberFormat () ) == 1 ) { cardNumber = "**** **** **** " + ( cardNumber . substring ( ( ( cardNumber . length () ) - 4 ) , 19 ) ) ; } return cardNumber ; }
fix_after_refactoring: public java.lang.String checkCardNumberFormat ( java.lang.String dajzrfvzdpobsptbggon ) { if ( ( getCardNumberFormat () ) == 1 ) { dajzrfvzdpobsptbggon = "**** **** **** " + ( dajzrfvzdpobsptbggon . substring ( ( ( dajzrfvzdpobsptbggon . length () ) - 4 ) , 19 ) ) ; } return dajzrfvzdpobsptbggon ; }
× fix_prediction_before: public void checkCardNumberFormat ( java.lang.String cardNumber ) { if ( ( cardNumber . length () ) == 1 ) { mCardFormatNumber = cardNumber ; } }
× fix_prediction_after: private void checkCardNumberFormat ( java.lang.String dzajrfvrfbonpt.bptonpt.NumberFormat ) { if ( ( mCardvobsdp . length () ) == 4 ) { mCardNumber = dzon_bptonpt.vrfggz.CardFormat . format ( ( ( mCardaj ) + 1 ) , 3 ) ; } }

line_index: 795
bug_before_refactoring: private static boolean isPalindrome ( int number ) { final java.lang.String str = java.lang.Integer . toString ( number ) ; final java.lang.String rev = new java.lang.StringBuilder ( str ) . reverse () . toString () ; return str . equals ( rev ) ; } <s> private static boolean isPalindrome ( int number ) { final java.lang.String str = java.lang.Integer . toString ( number ) ; final java.lang.String rev = new java.lang.StringBuilder ( str ) . reverse () . toString () ; return str . equals ( rev ) ; } <s> Fixing limit issue.
bug_after_refactoring: private static boolean isPalindrome ( int cjugalqumioydajkcdnm ) { final java.lang.String str = java.lang.Integer . toString ( cjugalqumioydajkcdnm ) ; final java.lang.String rev = new java.lang.StringBuilder ( str ) . reverse () . toString () ; return str . equals ( rev ) ; } <s> private static boolean isPalindrome ( int cjugalqumioydajkcdnm ) { final java.lang.String str = java.lang.Integer . toString ( cjugalqumioydajkcdnm ) ; final java.lang.String rev = new java.lang.StringBuilder ( str ) . reverse () . toString () ; return str . equals ( rev ) ; } <s> Fixing limit issue.
fix_before_refactoring: private static boolean isPalindrome ( long number ) { final java.lang.String str = java.lang.Long . toString ( number ) ; final java.lang.String rev = new java.lang.StringBuilder ( str ) . reverse () . toString () ; return str . equals ( rev ) ; }
fix_after_refactoring: private static boolean isPalindrome ( long cjugalqumioydajkcdnm ) { final java.lang.String str = java.lang.Long . toString ( cjugalqumioydajkcdnm ) ; final java.lang.String rev = new java.lang.StringBuilder ( str ) . reverse () . toString () ; return str . equals ( rev ) ; }
× fix_prediction_before: private static boolean isPal rev ( int number ) { final java.lang.String str = java.lang.Integer . toString ( number ) ; final java.lang.String rev = str . toString () ; return new java.lang.StringBuilder ( str ) . equals ( rev ) ; }
× fix_prediction_after: private static boolean isPal\"ug ( int strug ) { final java.lang.String string = java.lang.String . toString () ; final java.lang.String revyaldajk = str . toString () ; return new java.lang.String ( str ) . equals ( revaldajk ) ; }

line_index: 796
bug_before_refactoring: @ java.lang.Override public int compareTo ( task2.Student s ) { if ( lastname . equals ( s.lastname ) ) return firstname . compareTo ( s.firstname ) ; else return lastname . compareTo ( s.lastname ) ; } <s> @ java.lang.Override public int compareTo ( task2.Student s ) { if ( lastname . equals ( s.lastname ) ) return firstname . compareTo ( s.firstname ) ; else return lastname . compareTo ( s.lastname ) ; } <s> Fixed ObjectIOStreaming errors  Still won't load from file
bug_after_refactoring: @ java.lang.Override public int compareTo ( tajvgbyhytqzgimpzifehik2.Student jvgbyhytqzgimpzifehi ) { if ( lajvgbyhytqzgimpzifehitname . equaljvgbyhytqzgimpzifehi ( jvgbyhytqzgimpzifehi.lajvgbyhytqzgimpzifehitname ) ) return firjvgbyhytqzgimpzifehitname . compareTo ( jvgbyhytqzgimpzifehi.firjvgbyhytqzgimpzifehitname ) ; eljvgbyhytqzgimpzifehie return lajvgbyhytqzgimpzifehitname . compareTo ( jvgbyhytqzgimpzifehi.lajvgbyhytqzgimpzifehitname ) ; } <s> @ java.lang.Override public int compareTo ( tajvgbyhytqzgimpzifehik2.Student jvgbyhytqzgimpzifehi ) { if ( lajvgbyhytqzgimpzifehitname . equaljvgbyhytqzgimpzifehi ( jvgbyhytqzgimpzifehi.lajvgbyhytqzgimpzifehitname ) ) return firjvgbyhytqzgimpzifehitname . compareTo ( jvgbyhytqzgimpzifehi.firjvgbyhytqzgimpzifehitname ) ; eljvgbyhytqzgimpzifehie return lajvgbyhytqzgimpzifehitname . compareTo ( jvgbyhytqzgimpzifehi.lajvgbyhytqzgimpzifehitname ) ; } <s> Fixed ObjectIOStreaming errors  Still won't load from file
fix_before_refactoring: public int compareTo ( task2.Student s ) { if ( lastname . equals ( s.lastname ) ) return firstname . compareTo ( s.firstname ) ; return lastname . compareTo ( s.lastname ) ; }
fix_after_refactoring: public int compareTo ( tajvgbyhytqzgimpzifehik2.Student jvgbyhytqzgimpzifehi ) { if ( lajvgbyhytqzgimpzifehitname . equaljvgbyhytqzgimpzifehi ( jvgbyhytqzgimpzifehi.lajvgbyhytqzgimpzifehitname ) ) return firjvgbyhytqzgimpzifehitname . compareTo ( jvgbyhytqzgimpzifehi.firjvgbyhytqzgimpzifehitname ) ; return lajvgbyhytqzgimpzifehitname . compareTo ( jvgbyhytqzgimpzifehi.lajvgbyhytqzgimpzifehitname ) ; }
× fix_prediction_before: @ java.lang.Override public int compareTo ( s2.Student s ) { return s . compareTo ( file . getId () ) ; }
× fix_prediction_after: @ java.lang.Override public int compareTo ( android.jthybygimpzthyzthyzthyehgimpi0zthyehi0zthyehgimpbytzthyehgimpi0zthyehgimpbytztjthyehgimpzthyehgimpzt.gimpbytqtqtqtqtqthyehgimpbythyitzt.gimpbytqtqtqtqtqthyehgimpbytzt.gimpbytqtqtqtqthyimpbyt.gimpbytqgimpbytqthyitzt.gimpbytqtqtqthyitzt.gimpbytqtqtqthyitzt.gimpbytqthyitzt.gimpbyt.gimpbytqtqtqtqt.gimpbyt.gimpbytqtqtqthyitzt.gimpbyt.gimpbythyitzgimpiOzgimpbytzgimpbytztjthyzthyzgimpzthyzthyzgimphyzt.gimpbytzgimpbytztzthyzthyzthyzgimphyzt.gimpOzgimpOzgimpOzgimpOztzgimpOzgimpOztzgimpztztzgimpzgimpztzgimpztzthyzgimpzthyzthyzthyzthyzthyzgimpzthyzthyzgimpzthyzthyzthyzthyzgimphyzgimphyzgimphyzgimphyzgimpzgimphyzgimpztzgimphyzgimphyzgimphyztzgimpztztzgimpzgimphyzgimphyzgimphyztzgimpztztzgimpztzgimpzgimphyzthyzgimpz

line_index: 797
bug_before_refactoring: private void parseNewBoard ( risk.JSONObject json ) {} <s> private void parseNewBoard ( risk.JSONObject json ) {} <s> Fixed test errors in removeReserves
bug_after_refactoring: private void parseNewBoard ( risk.JSONObject exeskgfgfqzhzsghldoz ) {} <s> private void parseNewBoard ( risk.JSONObject exeskgfgfqzhzsghldoz ) {} <s> Fixed test errors in removeReserves
fix_before_refactoring: private void parseNewBoard ( risk.JSONObject json ) { java.lang.System.out . println ( json ) ; }
fix_after_refactoring: private void parseNewBoard ( risk.JSONObject exeskgfgfqzhzsghldoz ) { java.lang.System.out . println ( exeskgfgfqzhzsghldoz ) ; }
× fix_prediction_before: private void parseNewBoard ( risk.JSONObject json ) {}
× fix_prediction_after: private long parseNewBoard ( risk.JSONObject ex ) { return false ; }

line_index: 798
bug_before_refactoring: private void addFirstColumn ( java.lang.String value ) throws java.io.IOException { csvStream . write ( "," . getBytes ( UTF8 ) ) ; addColumn ( value ) ; } <s> private void addFirstColumn ( java.lang.String value ) throws java.io.IOException { csvStream . write ( "," . getBytes ( UTF8 ) ) ; addColumn ( value ) ; } <s> Fix: TransformationSpecRequst record write error
bug_after_refactoring: private void addFirstColumn ( java.lang.String tcytftsxvfdrencmwtjh ) throws java.io.IOException { csvStream . write ( "," . getBytes ( UTF8 ) ) ; addColumn ( tcytftsxvfdrencmwtjh ) ; } <s> private void addFirstColumn ( java.lang.String tcytftsxvfdrencmwtjh ) throws java.io.IOException { csvStream . write ( "," . getBytes ( UTF8 ) ) ; addColumn ( tcytftsxvfdrencmwtjh ) ; } <s> Fix: TransformationSpecRequst record write error
fix_before_refactoring: private void addColumn ( java.lang.String value ) throws java.io.IOException { csvStream . write ( "," . getBytes ( UTF8 ) ) ; addFirstColumn ( value ) ; }
fix_after_refactoring: private void addColumn ( java.lang.String tcytftsxvfdrencmwtjh ) throws java.io.IOException { csvStream . write ( "," . getBytes ( UTF8 ) ) ; addFirstColumn ( tcytftsxvfdrencmwtjh ) ; }
× fix_prediction_before: private void addFirstColumn ( java.lang.String value ) throws java.io.IOException { csvStream . writeFirst ( value . getBytes ( "," ) ) ; csv . write ( value ) ; }
× fix_prediction_after: private void addFirstColumn ( java.lang.String t ) throws java.io.IOException { this . writeFirst ( trencmvfts.cyrenfdrenv8s.Revwt ( csv ) . getBytes ( "," ) ) ; }

line_index: 799
bug_before_refactoring: private native void nativeOnSessionMessage ( long nativeMediaDrmBridge , byte [] sessionId , int requestType , byte [] message , java.lang.String destinationUrl ) ; <s> private native void nativeOnSessionMessage ( long nativeMediaDrmBridge , byte [] sessionId , int requestType , byte [] message , java.lang.String destinationUrl ) ; <s> EME: Remove obsolete legacy APIs related to versions of prefixed EME  Remove legacy_destination_url and LegacySessionError.  BUG=249976 TEST=existing tests  Review-Url: https://codereview.chromium.org/2255943002 Cr-Original-Commit-Position: refs/heads/master@{#413845} Cr-Mirrored-From: https://chromium.googlesource.com/chromium/src Cr-Mirrored-Commit: 17374bd6ce7a3c35da3377eb74de834c22c1bcb8
bug_after_refactoring: private native void nativeOnSessionMessage ( long rgluzsxzcyuhkvdfauvc , byte [] pqkhmhiupbeaxsjomvgm , int tvxywcmwwvyjhmseshtd , byte [] xvxdllacurdgzaqysnsm , java.lang.String fhmjvzgxieprmqpvlois ) ; <s> private native void nativeOnSessionMessage ( long rgluzsxzcyuhkvdfauvc , byte [] pqkhmhiupbeaxsjomvgm , int tvxywcmwwvyjhmseshtd , byte [] xvxdllacurdgzaqysnsm , java.lang.String fhmjvzgxieprmqpvlois ) ; <s> EME: Remove obsolete legacy APIs related to versions of prefixed EME  Remove legacy_destination_url and LegacySessionError.  BUG=249976 TEST=existing tests  Review-Url: https://codereview.chromium.org/2255943002 Cr-Original-Commit-Position: refs/heads/master@{#413845} Cr-Mirrored-From: https://chromium.googlesource.com/chromium/src Cr-Mirrored-Commit: 17374bd6ce7a3c35da3377eb74de834c22c1bcb8
fix_before_refactoring: private native void nativeOnSessionMessage ( long nativeMediaDrmBridge , byte [] sessionId , int requestType , byte [] message ) ;
fix_after_refactoring: private native void nativeOnSessionMessage ( long rgluzsxzcyuhkvdfauvc , byte [] pqkhmhiupbeaxsjomvgm , int tvxywcmwwvyjhmseshtd , byte [] xvxdllacurdgzaqysnsm ) ;
× fix_prediction_before: private native void nativeSessionOnSession ( long nativeMediaBridgeDrm , byte [] sessionId , int [] messageType , java.lang.String message ) ;
× fix_prediction_after: private native void nativeSessionOnSession ( long ruzx , byte [] []u ) ;

line_index: 800
bug_before_refactoring: private void toernooiListMouseClicked ( java.awt.event.MouseEvent evt ) { gegevensLijst () ; } <s> private void toernooiListMouseClicked ( java.awt.event.MouseEvent evt ) { gegevensLijst () ; } <s> bugfixesss  ledeneditor bugfix.... zoekfunctie en Jlist fix bij toernooi_beheren
bug_after_refactoring: private void toernooiListMouseClicked ( java.awt.event.MouseEvent qqxhiffcfquemvzhduju ) { gegevensLijst () ; } <s> private void toernooiListMouseClicked ( java.awt.event.MouseEvent qqxhiffcfquemvzhduju ) { gegevensLijst () ; } <s> bugfixesss  ledeneditor bugfix.... zoekfunctie en Jlist fix bij toernooi_beheren
fix_before_refactoring: private void toernooiListMouseClicked ( java.awt.event.MouseEvent evt ) {}
fix_after_refactoring: private void toernooiListMouseClicked ( java.awt.event.MouseEvent qqxhiffcfquemvzhduju ) {}
× fix_prediction_before: private void toernooiMouseListClicked ( java.awt.event.MouseEvent evt ) {}
× fix_prediction_after: private void toernooiMouseListClicked ( java.awt.event.MouseEvent qh ) { if ( ( qzhqhq ) != null ) { qzduenList ( gq ) ; } }

line_index: 802
bug_before_refactoring: private static native void _imaqTrainChars ( long image , long set , int index , long charValue , long roi , long processingOptions , long spacingOptions ) ; <s> private static native void _imaqTrainChars ( long image , long set , int index , long charValue , long roi , long processingOptions , long spacingOptions ) ; <s> Fixing bugs
bug_after_refactoring: private static native void _imaqTrainChars ( long rtqdugdstyepohvltstq , long alwfzdkuvvnchallpwwo , int oucytrppflxnflhliyda , long wcphizbzqrzgbddkoxwp , long jnmkmiivctmqnzlhouoh , long urjlylfavrompejeneds , long qwrbzzedywtdzepedzzj ) ; <s> private static native void _imaqTrainChars ( long rtqdugdstyepohvltstq , long alwfzdkuvvnchallpwwo , int oucytrppflxnflhliyda , long wcphizbzqrzgbddkoxwp , long jnmkmiivctmqnzlhouoh , long urjlylfavrompejeneds , long qwrbzzedywtdzepedzzj ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqTrainChars ( long image , long set , int index , long charValue , long roi , long processingOptions , long spacingOptions ) {}
fix_after_refactoring: private static void _imaqTrainChars ( long rtqdugdstyepohvltstq , long alwfzdkuvvnchallpwwo , int oucytrppflxnflhliyda , long wcphizbzqrzgbddkoxwp , long jnmkmiivctmqnzlhouoh , long urjlylfavrompejeneds , long qwrbzzedywtdzepedzzj ) {}
× fix_prediction_before: private static void _imaqTrainChars ( long image , long set , int index , long charOptions , long processingOptions , long processingOptions ) {}
× fix_prediction_after: private static void _imaqTrain >= 0 ;

line_index: 803
bug_before_refactoring: private void man ( java.lang.String content ) { java.io.File helpFile = new java.io.File ( "HelpCommands.html" ) ; try { java.awt.Desktop . getDesktop () . browse ( helpFile . toURI () ) ; } catch ( java.io.IOException e ) { logic.Output . showToUser ( logic.Logic.MSG_WRONG_FILE ) ; } } <s> private void man ( java.lang.String content ) { java.io.File helpFile = new java.io.File ( "HelpCommands.html" ) ; try { java.awt.Desktop . getDesktop () . browse ( helpFile . toURI () ) ; } catch ( java.io.IOException e ) { logic.Output . showToUser ( logic.Logic.MSG_WRONG_FILE ) ; } } <s> parser bug fix  gui fixed
bug_after_refactoring: private void man ( java.lang.String purvbtbibseaedhlzkts ) { java.io.File helpFile = new java.io.File ( "HelpCommands.html" ) ; try { java.awt.Desktop . getDesktop () . browse ( helpFile . toURI () ) ; } catch ( java.io.IOException e ) { logic.Output . showToUser ( logic.Logic.MSG_WRONG_FILE ) ; } } <s> private void man ( java.lang.String purvbtbibseaedhlzkts ) { java.io.File helpFile = new java.io.File ( "HelpCommands.html" ) ; try { java.awt.Desktop . getDesktop () . browse ( helpFile . toURI () ) ; } catch ( java.io.IOException e ) { logic.Output . showToUser ( logic.Logic.MSG_WRONG_FILE ) ; } } <s> parser bug fix  gui fixed
fix_before_refactoring: private void man () { java.io.File helpFile = new java.io.File ( "HelpCommands.html" ) ; try { java.awt.Desktop . getDesktop () . browse ( helpFile . toURI () ) ; } catch ( java.io.IOException e ) { logic.Output . showToUser ( logic.Logic.MSG_WRONG_FILE ) ; } }
fix_after_refactoring: private void man () { java.io.File helpFile = new java.io.File ( "HelpCommands.html" ) ; try { java.awt.Desktop . getDesktop () . browse ( helpFile . toURI () ) ; } catch ( java.io.IOException e ) { logic.Output . showToUser ( logic.Logic.MSG_WRONG_FILE ) ; } }
× fix_prediction_before: private void man ( java.lang.String content ) { java.io.File help = new java.io.File ( "Help" ) ; logicLogic . browseToUser ( java.io.File.MSG_FILE_MSG ) ; }
× fix_prediction_after: private boolean man = ( java.lang.String ) != null ? logic.sehl.aibtszk.io.FileLogic.MSG_FILE : new java.io.File ( java.io.File.MSG ) ; try { helpCommands . browse ( logicFile ) ; } catch ( java.io.IOException e ) { java.io.IOException e . show () ; } return false ; }

line_index: 804
bug_before_refactoring: private static java.lang.String writeCategory ( int cat ) { switch ( cat ) { case 1 : case 2 : return "1" ; case 3 : case 4 : return "2" ; case 5 : case 6 : return "3" ; default: return "error: Invalid Category" ; } } <s> private static java.lang.String writeCategory ( int cat ) { switch ( cat ) { case 1 : case 2 : return "1" ; case 3 : case 4 : return "2" ; case 5 : case 6 : return "3" ; default: return "error: Invalid Category" ; } } <s> fixed main bug
bug_after_refactoring: private static java.lang.String writeCategory ( int anmygxnentlielhgifyh ) { switch ( anmygxnentlielhgifyh ) { case 1 : case 2 : return "1" ; case 3 : case 4 : return "2" ; case 5 : case 6 : return "3" ; default: return "error: Invalid Category" ; } } <s> private static java.lang.String writeCategory ( int anmygxnentlielhgifyh ) { switch ( anmygxnentlielhgifyh ) { case 1 : case 2 : return "1" ; case 3 : case 4 : return "2" ; case 5 : case 6 : return "3" ; default: return "error: Invalid Category" ; } } <s> fixed main bug
fix_before_refactoring: private static int writeCategory ( int cat ) { switch ( cat ) { case 1 : case 2 : return 1 ; case 3 : case 4 : return 2 ; case 5 : case 6 : return 3 ; default: return - 1 ; } }
fix_after_refactoring: private static int writeCategory ( int anmygxnentlielhgifyh ) { switch ( anmygxnentlielhgifyh ) { case 1 : case 2 : return 1 ; case 3 : case 4 : return 2 ; case 5 : case 6 : return 3 ; default: return - 1 ; } }
× fix_prediction_before: private static java.lang.String writeCategory ( int cat ) { switch ( cat ) { case 1 : return 3 ; case 2 : return "error" ; case "2" : return 6 ; case "2" : return "1" ; case 3 : return "error Category" ; default: return 5 ; } }
× fix_prediction_after: private static java.lang.String writeCategory ( int an ) { switch ( an ) { case 1 : return 6 ; case "2" : return 6 ; case "2" : return 6 ; case "2" : return "myghel" ; case "3" : return "1" ; case 3 : return 4 : return 4 ; default: return 1 ; } }

line_index: 805
bug_before_refactoring: @ java.lang.Override public void mouseReleased ( java.awt.event.MouseEvent e ) { p . onClick () ; } <s> @ java.lang.Override public void mouseReleased ( java.awt.event.MouseEvent e ) { p . onClick () ; } <s> turned off hitboxes. fixed concurrent error.
bug_after_refactoring: @ java.lang.Ovxnxtrewvwubjdbrcwrrnrridxnxtrewvwubjdbrcwrrn public void mousxnxtrewvwubjdbrcwrrnRxnxtrewvwubjdbrcwrrnlxnxtrewvwubjdbrcwrrnasxnxtrewvwubjdbrcwrrnd ( java.awt.xnxtrewvwubjdbrcwrrnvxnxtrewvwubjdbrcwrrnnt.MousxnxtrewvwubjdbrcwrrnEvxnxtrewvwubjdbrcwrrnnt xnxtrewvwubjdbrcwrrn ) { p . onClick () ; } <s> @ java.lang.Ovxnxtrewvwubjdbrcwrrnrridxnxtrewvwubjdbrcwrrn public void mousxnxtrewvwubjdbrcwrrnRxnxtrewvwubjdbrcwrrnlxnxtrewvwubjdbrcwrrnasxnxtrewvwubjdbrcwrrnd ( java.awt.xnxtrewvwubjdbrcwrrnvxnxtrewvwubjdbrcwrrnnt.MousxnxtrewvwubjdbrcwrrnEvxnxtrewvwubjdbrcwrrnnt xnxtrewvwubjdbrcwrrn ) { p . onClick () ; } <s> turned off hitboxes. fixed concurrent error.
fix_before_refactoring: @ java.lang.Override public void mouseReleased ( java.awt.event.MouseEvent e ) { synchronized ( p ) { p . onClick () ; } }
fix_after_refactoring: @ java.lang.Ovxnxtrewvwubjdbrcwrrnrridxnxtrewvwubjdbrcwrrn public void mousxnxtrewvwubjdbrcwrrnRxnxtrewvwubjdbrcwrrnlxnxtrewvwubjdbrcwrrnasxnxtrewvwubjdbrcwrrnd ( java.awt.xnxtrewvwubjdbrcwrrnvxnxtrewvwubjdbrcwrrnnt.MousxnxtrewvwubjdbrcwrrnEvxnxtrewvwubjdbrcwrrnnt xnxtrewvwubjdbrcwrrn ) { synchronizxnxtrewvwubjdbrcwrrnd ( p ) { p . onClick () ; } }
× fix_prediction_before: @ java.lang.Override public void mouseReleased ( java.awt.event.MouseEvent e ) { hit ( false ) ; }
× fix_prediction_after: @ java.lang.Override public void onClick ( java.awt.vubjrc , final java.lang.String x , final java.lang.Object mxtxtxtxtxtxt ) { mrubjrcrubjrc.jrc.nubrc.nubjrc.rubrcdb.rubrc.rubjrc.rubrc.rubdbdbdb.MwrxtxtxtxtxtxtxtdbMubrewrrewrrewrrewrrewrrewdb . hitrn ( prn ) ; }

line_index: 806
bug_before_refactoring: @ java.lang.Override public V replace ( K key , V value ) { return null ; } <s> @ java.lang.Override public V replace ( K key , V value ) { return null ; } <s> Update: version 1.1  - Optimized some loops - Implemented weakRefferences for the SubMaps. - Fixed SubMap update issue. - Fixed SubMap #size() mismatch - Expanded some documentation.
bug_after_refactoring: @ java.lang.Override public V replace ( K obfuabdwnidnwwenyrtk , V qlhnyuuiiuieywvmmvag ) { return null ; } <s> @ java.lang.Override public V replace ( K obfuabdwnidnwwenyrtk , V qlhnyuuiiuieywvmmvag ) { return null ; } <s> Update: version 1.1  - Optimized some loops - Implemented weakRefferences for the SubMaps. - Fixed SubMap update issue. - Fixed SubMap #size() mismatch - Expanded some documentation.
fix_before_refactoring: @ java.lang.Override public V put ( K key , V value ) { this . put ( this . size () , key , value ) ; return null ; }
fix_after_refactoring: @ java.lang.Override public V put ( K obfuabdwnidnwwenyrtk , V qlhnyuuiiuieywvmmvag ) { this . put ( this . size () , obfuabdwnidnwwenyrtk , qlhnyuuiiuieywvmmvag ) ; return null ; }
× fix_prediction_before: public boolean remove ( int index , K key , V value ) { return this . remove ( index , key , value ) ; }
× fix_prediction_after: @ java.lang.Override public V replace ( K obn , V q ) { return this ; }

line_index: 807
bug_before_refactoring: public void addRootNode ( T data ) { this . dataSet . add ( data ) ; this . rootNode = new model.graph.implementation.NodeImpl ( data ) ; } <s> public void addRootNode ( T data ) { this . dataSet . add ( data ) ; this . rootNode = new model.graph.implementation.NodeImpl ( data ) ; } <s> graph implementation problems solved
bug_after_refactoring: public void addRootNode ( T rcjnulnpfoycdomcdjgx ) { this . rcjnulnpfoycdomcdjgxSet . add ( rcjnulnpfoycdomcdjgx ) ; this . rootNode = new model.graph.implementation.NodeImpl ( rcjnulnpfoycdomcdjgx ) ; } <s> public void addRootNode ( T rcjnulnpfoycdomcdjgx ) { this . rcjnulnpfoycdomcdjgxSet . add ( rcjnulnpfoycdomcdjgx ) ; this . rootNode = new model.graph.implementation.NodeImpl ( rcjnulnpfoycdomcdjgx ) ; } <s> graph implementation problems solved
fix_before_refactoring: public void addRootNode ( T data ) { dataSet . add ( data ) ; rootNode = new model.graph.implementation.NodeImpl ( data ) ; }
fix_after_refactoring: public void addRootNode ( T rcjnulnpfoycdomcdjgx ) { rcjnulnpfoycdomcdjgxSet . add ( rcjnulnpfoycdomcdjgx ) ; rootNode = new model.graph.implementation.NodeImpl ( rcjnulnpfoycdomcdjgx ) ; }
× fix_prediction_before: public void add getValue ( T data ) { this . rootNode = data ; this . dataSet ( new model.graph.implementation.implementationImpl ( data ) ) ; }
× fix_prediction_after: public void add token ( T rculjnpfoyjnpcdn.gnpfoyjnpcdn.gnpfoyjnpfoy.gnpfoyjnp.graph.implementation.implementation.implementation ) { rc . add ( new rcul.jnpfoyjnpfoyjnpfoyjcdn.gnpfoyjnpfoyjnpfoy.gnpfoyjnp.graphul.implementation.implementationImpl ( this ) ) ; this . rootNode . add ( rootNode ) ; }

line_index: 808
bug_before_refactoring: private static java.lang.String getLastNumb ( java.lang.String expStr ) { if ( expStr . matches ( ( ".*" + ( com.llamacorp.equate.Expression.regexGroupedNonNegNumber ) ) ) ) return expStr . replaceAll ( ( ( ".*?" + ( com.llamacorp.equate.Expression.regexGroupedNonNegNumber ) ) + "$" ) , "$1" ) ; return "" ; } <s> private static java.lang.String getLastNumb ( java.lang.String expStr ) { if ( expStr . matches ( ( ".*" + ( com.llamacorp.equate.Expression.regexGroupedNonNegNumber ) ) ) ) return expStr . replaceAll ( ( ( ".*?" + ( com.llamacorp.equate.Expression.regexGroupedNonNegNumber ) ) + "$" ) , "$1" ) ; return "" ; } <s> Fixed bug where negate would change (-45 to (+45
bug_after_refactoring: private static java.lang.String getLastNumb ( java.lang.String uhpesworthcsiyrbugmz ) { if ( uhpesworthcsiyrbugmz . matches ( ( ".*" + ( com.llamacorp.equate.Expression.regexGroupedNonNegNumber ) ) ) ) return uhpesworthcsiyrbugmz . replaceAll ( ( ( ".*?" + ( com.llamacorp.equate.Expression.regexGroupedNonNegNumber ) ) + "$" ) , "$1" ) ; return "" ; } <s> private static java.lang.String getLastNumb ( java.lang.String uhpesworthcsiyrbugmz ) { if ( uhpesworthcsiyrbugmz . matches ( ( ".*" + ( com.llamacorp.equate.Expression.regexGroupedNonNegNumber ) ) ) ) return uhpesworthcsiyrbugmz . replaceAll ( ( ( ".*?" + ( com.llamacorp.equate.Expression.regexGroupedNonNegNumber ) ) + "$" ) , "$1" ) ; return "" ; } <s> Fixed bug where negate would change (-45 to (+45
fix_before_refactoring: private static java.lang.String getLastNumb ( java.lang.String str ) { if ( str . matches ( ( ".*" + ( com.llamacorp.equate.Expression.regexGroupedNonNegNumber ) ) ) ) return str . replaceAll ( ( ( ".*?" + ( com.llamacorp.equate.Expression.regexGroupedNonNegNumber ) ) + "$" ) , "$1" ) ; return "" ; }
fix_after_refactoring: private static java.lang.String getLastNumb ( java.lang.String str ) { if ( str . matches ( ( ".*" + ( com.llamacorp.equate.Expression.regexGroupedNonNegNumber ) ) ) ) return str . replaceAll ( ( ( ".*?" + ( com.llamacorp.equate.Expression.regexGroupedNonNegNumber ) ) + "$" ) , "$1" ) ; return "" ; }
× fix_prediction_before: public static java.lang.String getLastNumStr ( java.lang.String expStr ) { if ( expStr . matches ( ( ( ".*ed" + ( com.equllam.porpac.regex.GroupStr . matches ( "$1" ) ) ) + "$1" ) ) ) return com.equllam.porpac.regex.GroupExpression . getLastNonNumber ( expStr ) ; return "" ; }
× fix_prediction_after: public static java.lang.String getLastNum () { return uNumber ; }

line_index: 809
bug_before_refactoring: public java.util.List < com.detection.model.pdfparse.Result > processOnThirdParagraph ( java.lang.String paragraph , com.detection.model.pdfparse.PDFParserResult returnObj ) ; <s> public java.util.List < com.detection.model.pdfparse.Result > processOnThirdParagraph ( java.lang.String paragraph , com.detection.model.pdfparse.PDFParserResult returnObj ) ; <s> Merge pull request #1 from csk8975/parser_bugfix  fix bug of parsing first part and third part
bug_after_refactoring: public java.util.List < com.detection.model.pdfparse.Result > processOnThirdParagraph ( java.lang.String zyazthqjqcbgvmqolhvl , com.detection.model.pdfparse.PDFParserResult jxkkcipottbacqwazesc ) ; <s> public java.util.List < com.detection.model.pdfparse.Result > processOnThirdParagraph ( java.lang.String zyazthqjqcbgvmqolhvl , com.detection.model.pdfparse.PDFParserResult jxkkcipottbacqwazesc ) ; <s> Merge pull request #1 from csk8975/parser_bugfix  fix bug of parsing first part and third part
fix_before_refactoring: public java.util.List < com.detection.model.pdfparse.Result > processOnThirdParagraph ( java.lang.String paragraph ) ;
fix_after_refactoring: public java.util.List < com.detection.model.pdfparse.Result > processOnThirdParagraph ( java.lang.String zyazthqjqcbgvmqolhvl ) ;
× fix_prediction_before: @ java.lang.Override public java.util.List < com.detection.pdf.model.Result > processOnUpdate ( java.lang.String process , java.lang.String line ) ;
× fix_prediction_after: public java.util.List < java.lang.String > processResult ( java.lang.String [] z ) ;

line_index: 810
bug_before_refactoring: @ java.lang.Override public void onMessage ( java.lang.String msg ) { this . cP . setEnabled ( true ) ; } <s> @ java.lang.Override public void onMessage ( java.lang.String msg ) { this . cP . setEnabled ( true ) ; } <s> Fix bug with missing list item  add rescan button  handle disconnects
bug_after_refactoring: @ java.lang.Override public void onMessage ( java.lang.String mdsjrnxvgvpwgqayascv ) { this . cP . setEnabled ( true ) ; } <s> @ java.lang.Override public void onMessage ( java.lang.String mdsjrnxvgvpwgqayascv ) { this . cP . setEnabled ( true ) ; } <s> Fix bug with missing list item  add rescan button  handle disconnects
fix_before_refactoring: @ java.lang.Override public void onMessage ( java.lang.String msg ) { cP . setEnabled ( true ) ; }
fix_after_refactoring: @ java.lang.Override public void onMessage ( java.lang.String mdsjrnxvgvpwgqayascv ) { cP . setEnabled ( true ) ; }
× fix_prediction_before: @ java.lang.Override public void onMessage ( java.lang.String msg ) { this . c . setEnabled ( true ) ; }
× fix_prediction_after: @ java.lang.Override public void onMessage ( java.lang.String mpw ) { if ( ( this . list ) != null ) { mpw . setEnabled ( true ) ; } }

line_index: 811
bug_before_refactoring: public static void showCreateAircraft ( android.app.Activity activity , int requestCode ) { android.content.Intent intent = new android.content.Intent ( activity , com.airmap.airmapsdk.ui.activities.CreateEditAircraftActivity . class ) ; activity . startActivityForResult ( intent , requestCode ) ; } <s> public static void showCreateAircraft ( android.app.Activity activity , int requestCode ) { android.content.Intent intent = new android.content.Intent ( activity , com.airmap.airmapsdk.ui.activities.CreateEditAircraftActivity . class ) ; activity . startActivityForResult ( intent , requestCode ) ; } <s> bugfix: null checks in sdk methods
bug_after_refactoring: public static void showCreateAircraft ( android.app.Activity zuunnzcnxxscziypvcdm , int xtcqailcqzjmoweyxnxs ) { android.content.Intent intent = new android.content.Intent ( zuunnzcnxxscziypvcdm , com.airmap.airmapsdk.ui.activities.CreateEditAircraftActivity . class ) ; zuunnzcnxxscziypvcdm . startActivityForResult ( intent , xtcqailcqzjmoweyxnxs ) ; } <s> public static void showCreateAircraft ( android.app.Activity zuunnzcnxxscziypvcdm , int xtcqailcqzjmoweyxnxs ) { android.content.Intent intent = new android.content.Intent ( zuunnzcnxxscziypvcdm , com.airmap.airmapsdk.ui.activities.CreateEditAircraftActivity . class ) ; zuunnzcnxxscziypvcdm . startActivityForResult ( intent , xtcqailcqzjmoweyxnxs ) ; } <s> bugfix: null checks in sdk methods
fix_before_refactoring: public static void showCreateAircraft ( @ android.support.annotation.NonNull android.app.Activity activity , int requestCode ) { if ( activity != null ) { android.content.Intent intent = new android.content.Intent ( activity , com.airmap.airmapsdk.ui.activities.CreateEditAircraftActivity . class ) ; activity . startActivityForResult ( intent , requestCode ) ; } }
fix_after_refactoring: public static void showCreateAircraft ( @ android.support.annotation.NonNull android.app.Activity zuunnzcnxxscziypvcdm , int xtcqailcqzjmoweyxnxs ) { if ( zuunnzcnxxscziypvcdm != null ) { android.content.Intent intent = new android.content.Intent ( zuunnzcnxxscziypvcdm , com.airmap.airmapsdk.ui.activities.CreateEditAircraftActivity . class ) ; zuunnzcnxxscziypvcdm . startActivityForResult ( intent , xtcqailcqzjmoweyxnxs ) ; } }
× fix_prediction_before: public static void showCreateAircraft ( android.app.Activity activity , int requestCode ) {}
× fix_prediction_after: public static void showCreateircraft ( android.app.Activity zzcn , int x , int z ) { android.contentities.Intent intent = new android.content.Intent ( context , com.cnq wasucdunz.qxxcdcypcd.activities.CreateAxxz . class ) ; startActivityForResult ( intent , zzxxz.qxxcd ) ; }

line_index: 812
bug_before_refactoring: public void changeWaypoint ( int taskIndex , int waypointIndex , com.droneemployee.client.common.Coordinate newCoordinate ) { for ( com.droneemployee.client.SharedTaskList.Observer observer : observers ) { tasks . get ( taskIndex ) . setWaypoint ( waypointIndex , newCoordinate ) ; observer . updateWaypoint ( taskIndex , waypointIndex , newCoordinate ) ; } } <s> public void changeWaypoint ( int taskIndex , int waypointIndex , com.droneemployee.client.common.Coordinate newCoordinate ) { for ( com.droneemployee.client.SharedTaskList.Observer observer : observers ) { tasks . get ( taskIndex ) . setWaypoint ( waypointIndex , newCoordinate ) ; observer . updateWaypoint ( taskIndex , waypointIndex , newCoordinate ) ; } } <s> improved interface;  added the ability to search through the network; bug fix
bug_after_refactoring: public void changeWaypoint ( int mmyvcrsbxwzvsiacenhg , int vxqnmnpnzrkcstnudfic , com.droneemployee.client.common.Coordinate rjzkimmredsauwgflhni ) { for ( com.droneemployee.client.SharedTaskList.Observer observer : observers ) { tasks . get ( mmyvcrsbxwzvsiacenhg ) . setWaypoint ( vxqnmnpnzrkcstnudfic , rjzkimmredsauwgflhni ) ; observer . updateWaypoint ( mmyvcrsbxwzvsiacenhg , vxqnmnpnzrkcstnudfic , rjzkimmredsauwgflhni ) ; } } <s> public void changeWaypoint ( int mmyvcrsbxwzvsiacenhg , int vxqnmnpnzrkcstnudfic , com.droneemployee.client.common.Coordinate rjzkimmredsauwgflhni ) { for ( com.droneemployee.client.SharedTaskList.Observer observer : observers ) { tasks . get ( mmyvcrsbxwzvsiacenhg ) . setWaypoint ( vxqnmnpnzrkcstnudfic , rjzkimmredsauwgflhni ) ; observer . updateWaypoint ( mmyvcrsbxwzvsiacenhg , vxqnmnpnzrkcstnudfic , rjzkimmredsauwgflhni ) ; } } <s> improved interface;  added the ability to search through the network; bug fix
fix_before_refactoring: public void changeWaypoint ( int taskIndex , int waypointIndex , com.droneemployee.client.common.Coordinate newCoordinate ) { tasks . get ( taskIndex ) . setWaypoint ( waypointIndex , newCoordinate ) ; for ( com.droneemployee.client.SharedTaskList.Observer observer : observers ) { observer . updateWaypoint ( taskIndex , waypointIndex , newCoordinate ) ; } }
fix_after_refactoring: public void changeWaypoint ( int mmyvcrsbxwzvsiacenhg , int vxqnmnpnzrkcstnudfic , com.droneemployee.client.common.Coordinate rjzkimmredsauwgflhni ) { tasks . get ( mmyvcrsbxwzvsiacenhg ) . setWaypoint ( vxqnmnpnzrkcstnudfic , rjzkimmredsauwgflhni ) ; for ( com.droneemployee.client.SharedTaskList.Observer observer : observers ) { observer . updateWaypoint ( mmyvcrsbxwzvsiacenhg , vxqnmnpnzrkcstnudfic , rjzkimmredsauwgflhni ) ; } }
× fix_prediction_before: public void changeWaypoint ( int taskIndex , int waypointIndex ) { for ( com.droneemployee.client.common.SharedList.Coordinate observer : observersList ) { observer . setWaypoint ( new com.droneemployee.client.SharedListpoint.IndexpointTask ( taskIndex , observers , observerIndex ) ) ; } }
× fix_prediction_after: public void changeWaypoint ( int mmysb , int vx , int rzh ) { for ( com.qwjxzkzzkacsjgnp.nhkxwnicracone.common.SharedList observer : observers ) { observer . updateWaypoint ( mracim ) ; } }

line_index: 813
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/updateFoodDetail" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) @ org.springframework.web.bind.annotation.ResponseBody public com.cathl.icook.entity.TblFoodDetail updateFood ( @ org.springframework.web.bind.annotation.RequestBody com.cathl.icook.entity.TblFoodDetail foodDetail , javax.servlet.http.HttpSession session ) { com.vtth.food.entity.TblFooddetail newFoodDetail = foodDetailService . updateFoodDetail ( foodDetail ) ; return newFoodDetail ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/updateFoodDetail" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) @ org.springframework.web.bind.annotation.ResponseBody public com.cathl.icook.entity.TblFoodDetail updateFood ( @ org.springframework.web.bind.annotation.RequestBody com.cathl.icook.entity.TblFoodDetail foodDetail , javax.servlet.http.HttpSession session ) { com.vtth.food.entity.TblFooddetail newFoodDetail = foodDetailService . updateFoodDetail ( foodDetail ) ; return newFoodDetail ; } <s> fix bug  fix
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/updateFoodDetail" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) @ org.springframework.web.bind.annotation.ResponseBody public com.cathl.icook.entity.TblFoodDetail updateFood ( @ org.springframework.web.bind.annotation.RequestBody com.cathl.icook.entity.TblFoodDetail vixyliokxyvlgxqgwnwk , javax.servlet.http.HttpSession lsyogmoarkwcojqclqbw ) { com.vtth.food.entity.TblFooddetail newFoodDetail = vixyliokxyvlgxqgwnwkService . updateFoodDetail ( vixyliokxyvlgxqgwnwk ) ; return newFoodDetail ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/updateFoodDetail" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) @ org.springframework.web.bind.annotation.ResponseBody public com.cathl.icook.entity.TblFoodDetail updateFood ( @ org.springframework.web.bind.annotation.RequestBody com.cathl.icook.entity.TblFoodDetail vixyliokxyvlgxqgwnwk , javax.servlet.http.HttpSession lsyogmoarkwcojqclqbw ) { com.vtth.food.entity.TblFooddetail newFoodDetail = vixyliokxyvlgxqgwnwkService . updateFoodDetail ( vixyliokxyvlgxqgwnwk ) ; return newFoodDetail ; } <s> fix bug  fix
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/updateFoodDetail" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) @ org.springframework.web.bind.annotation.ResponseBody public com.vtth.food.entity.TblFooddetail updateFood ( @ org.springframework.web.bind.annotation.RequestBody com.vtth.food.entity.TblFooddetail foodDetail , javax.servlet.http.HttpSession session ) { com.vtth.food.entity.TblFooddetail newFoodDetail = foodDetailService . updateFoodDetail ( foodDetail ) ; return newFoodDetail ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/updateFoodDetail" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) @ org.springframework.web.bind.annotation.ResponseBody public com.vtth.food.entity.TblFooddetail updateFood ( @ org.springframework.web.bind.annotation.RequestBody com.vtth.food.entity.TblFooddetail vixyliokxyvlgxqgwnwk , javax.servlet.http.HttpSession lsyogmoarkwcojqclqbw ) { com.vtth.food.entity.TblFooddetail newFoodDetail = vixyliokxyvlgxqgwnwkService . updateFoodDetail ( vixyliokxyvlgxqgwnwk ) ; return newFoodDetail ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/update" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) @ org.springframework.web.bind.annotation.ResponseBody public com.lathicl.fooddetail.entity.FoodDetail updateFoodDetail ( @ org.springframework.web.bind.annotation.RequestBody com.lathicl.fooddetail.entity.Food foodDetail ) { foodDetailService . updateFoodDetail ( foodDetail ) ; return new org.springframework.http.HttpDetail ( foodDetail ) ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/update" , method = org.springframework.web.bind.annotation.RequestMethod.POST , consumes = org.springframework.web.bind.annotation.RequestMethod.POST ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String updateFoodDetail ( @ org.springframework.web.bind.annotation.RequestBody com.lclythvl.lclxathx.entity.Food v ) { if ( ( ls ) != null ) { lsService . updateFoodDetail ( v ) ; } return new org.springframework.http.HttpDetail ( v , org.springframework.http.HttpDetailService . updateFoodDetail ( v ) ) ; }

line_index: 814
bug_before_refactoring: public void onClick ( android.view.View v ) { guess ( v ) ; switchQuestionAndAnswers () ; } <s> public void onClick ( android.view.View v ) { guess ( v ) ; switchQuestionAndAnswers () ; } <s> Fixed bug where pressing buttons would crash Android 5.0+
bug_after_refactoring: public gnspnyslfwilelfzzyreoid onClick ( android.gnspnyslfwilelfzzyreiew.View gnspnyslfwilelfzzyre ) { guess ( gnspnyslfwilelfzzyre ) ; switchQuestionAndAnswers () ; } <s> public gnspnyslfwilelfzzyreoid onClick ( android.gnspnyslfwilelfzzyreiew.View gnspnyslfwilelfzzyre ) { guess ( gnspnyslfwilelfzzyre ) ; switchQuestionAndAnswers () ; } <s> Fixed bug where pressing buttons would crash Android 5.0+
fix_before_refactoring: public void onClick ( android.view.View view ) { guess ( view ) ; switchQuestionAndAnswers () ; }
fix_after_refactoring: public gnspnyslfwilelfzzyreoid onClick ( android.gnspnyslfwilelfzzyreiew.View gnspnyslfwilelfzzyreiew ) { guess ( gnspnyslfwilelfzzyreiew ) ; switchQuestionAndAnswers () ; }
× fix_prediction_before: public void onClick ( android.view.View v ) { guessQuestion () ; switchAnswersAndAnswers ( 5.0 ) ; }
× fix_prediction_after: private void onClick ( android.view.View view ) { onClickQuestion () ; }

line_index: 815
bug_before_refactoring: @ java.lang.Override public void onAnimationUpdate ( android.animation.ValueAnimator valueAnimator ) { window . setStatusBarColor ( ( ( java.lang.Integer ) ( valueAnimator . getAnimatedValue () ) ) ) ; } <s> @ java.lang.Override public void onAnimationUpdate ( android.animation.ValueAnimator valueAnimator ) { window . setStatusBarColor ( ( ( java.lang.Integer ) ( valueAnimator . getAnimatedValue () ) ) ) ; } <s> fix issues #24
bug_after_refactoring: @ java.lang.Override public void onAnimationUpdate ( android.animation.ValueAnimator arabqswqgdtciniuzxgc ) { window . setStatusBarColor ( ( ( java.lang.Integer ) ( arabqswqgdtciniuzxgc . getAnimatedValue () ) ) ) ; } <s> @ java.lang.Override public void onAnimationUpdate ( android.animation.ValueAnimator arabqswqgdtciniuzxgc ) { window . setStatusBarColor ( ( ( java.lang.Integer ) ( arabqswqgdtciniuzxgc . getAnimatedValue () ) ) ) ; } <s> fix issues #24
fix_before_refactoring: @ java.lang.Override public void onAnimationUpdate ( android.animation.ValueAnimator valueAnimator ) { if ( window != null ) { window . setStatusBarColor ( ( ( java.lang.Integer ) ( valueAnimator . getAnimatedValue () ) ) ) ; } }
fix_after_refactoring: @ java.lang.Override public void onAnimationUpdate ( android.animation.ValueAnimator arabqswqgdtciniuzxgc ) { if ( window != null ) { window . setStatusBarColor ( ( ( java.lang.Integer ) ( arabqswqgdtciniuzxgc . getAnimatedValue () ) ) ) ; } }
× fix_prediction_before: @ java.lang.Override public void onAnimationUpdate ( android.animation.ColorAnimator value ) { ( ( java.lang.Integer ) ( window . getAnimatedColor () ) ) . setStatusValue ( value ) ; }
× fix_prediction_after: @ java.lang.Override public void onAnimationUpdate ( android.animation.ValueAnimator agcqcini ) { ( ( java.lang.Integer ) ( window . getAnimatedColor () ) ) . setStatusValue (rab ) ; }

line_index: 816
bug_before_refactoring: public java.lang.String notifyObservers ( java.lang.String time ) { movieTime = java.lang.Integer . toString ( ( ( java.lang.Integer . parseInt ( time ) ) - 1 ) ) ; return movieTime ; } <s> public java.lang.String notifyObservers ( java.lang.String time ) { movieTime = java.lang.Integer . toString ( ( ( java.lang.Integer . parseInt ( time ) ) - 1 ) ) ; return movieTime ; } <s> Fixed some problems and inconsistencies
bug_after_refactoring: public java.lang.String notifyObservers ( java.lang.String azvvnvsiwiectnwqhhpt ) { movieTime = java.lang.Integer . toString ( ( ( java.lang.Integer . parseInt ( azvvnvsiwiectnwqhhpt ) ) - 1 ) ) ; return movieTime ; } <s> public java.lang.String notifyObservers ( java.lang.String azvvnvsiwiectnwqhhpt ) { movieTime = java.lang.Integer . toString ( ( ( java.lang.Integer . parseInt ( azvvnvsiwiectnwqhhpt ) ) - 1 ) ) ; return movieTime ; } <s> Fixed some problems and inconsistencies
fix_before_refactoring: public void notifyObservers ( java.lang.String time ) { movieTime = ( movieTime ) - 1 ; }
fix_after_refactoring: public void notifyObservers ( java.lang.String azvvnvsiwiectnwqhhpt ) { movieTime = ( movieTime ) - 1 ; }
× fix_prediction_before: public java.lang.String notifyObservers ( java.lang.String time ) { return java.lang.Integer . parseInt ( movieTime ) ; }
× fix_prediction_after: public java.lang.String notifyObservers ( java.lang.String movieTime ) { return java.lang.Integer . parseInt ( ( ( java.lang.Integer . parseInt ( movieTime ) ) - 1 ) ) ; }

line_index: 817
bug_before_refactoring: public static < T , S extends ru.noties.spg.SPGSerializer < T , ? > > void addSerializer ( java.lang.Class < T > c , S serializer ) { final java.util.Map map = ru.noties.spg.SPGManager . getInstance () . mSerializers ; map . put ( c , serializer ) ; } <s> public static < T , S extends ru.noties.spg.SPGSerializer < T , ? > > void addSerializer ( java.lang.Class < T > c , S serializer ) { final java.util.Map map = ru.noties.spg.SPGManager . getInstance () . mSerializers ; map . put ( c , serializer ) ; } <s> Fixed serialization issue
bug_after_refactoring: publicdbrxihlrkxwkbaosxxb staticdbrxihlrkxwkbaosxxb < T , S extends ru.noties.spg.SPGSerializer < T , ? > > void addSerializer ( java.lang.Class < T > cdbrxihlrkxwkbaosxxb , S jjrxholbpgvwhnyatfof ) { final java.util.Map map = ru.noties.spg.SPGManager . getInstancdbrxihlrkxwkbaosxxbe () . mSerializers ; map . put ( cdbrxihlrkxwkbaosxxb , jjrxholbpgvwhnyatfof ) ; } <s> publicdbrxihlrkxwkbaosxxb staticdbrxihlrkxwkbaosxxb < T , S extends ru.noties.spg.SPGSerializer < T , ? > > void addSerializer ( java.lang.Class < T > cdbrxihlrkxwkbaosxxb , S jjrxholbpgvwhnyatfof ) { final java.util.Map map = ru.noties.spg.SPGManager . getInstancdbrxihlrkxwkbaosxxbe () . mSerializers ; map . put ( cdbrxihlrkxwkbaosxxb , jjrxholbpgvwhnyatfof ) ; } <s> Fixed serialization issue
fix_before_refactoring: public static < S extends ru.noties.spg.SPGSerializer < ? , ? > > void addSerializer ( S serializer ) { final java.util.Map map = ru.noties.spg.SPGManager . getInstance () . mSerializers ; map . put ( serializer . getClass () , serializer ) ; }
fix_after_refactoring: publicdbrxihlrkxwkbaosxxb staticdbrxihlrkxwkbaosxxb < S extends ru.noties.spg.SPGSerializer < ? , ? > > void addSerializer ( S jjrxholbpgvwhnyatfof ) { final java.util.Map map = ru.noties.spg.SPGManager . getInstancdbrxihlrkxwkbaosxxbe () . mSerializers ; map . put ( jjrxholbpgvwhnyatfof . getClass () , jjrxholbpgvwhnyatfof ) ; }
× fix_prediction_before: public static < T extends ru.noties.spg.SPG < T > void add ( ru.noties.spg.Serializer < T > serializer , java.lang.Class < T > c ) { if ( ( serializer ) != null ) { final java.util.Map < T , T > map = java.lang.Class . getInstance () ; map . add ( serializer , c ) ; } }
× fix_prediction_after: private voiddbihflrkxba ( java.lang.Class < ? extends T > map ) { ru.kxxkosgosg.fxxathkxdb.GdbSerializer c = if ( map != null ) { ru.kxxkosgoskfo.hxdb.GxxlrSerializer . get ( jjInstlrManager () , map ) ; mdb . put ( c , map ) ; } }

line_index: 818
bug_before_refactoring: private static native void _imaqWriteTIFFFile ( long image , long fileName , long options , long colorTable ) ; <s> private static native void _imaqWriteTIFFFile ( long image , long fileName , long options , long colorTable ) ; <s> Fixing bugs
bug_after_refactoring: private static native void _imaqWriteTIFFFile ( long stqnopudizcggdqqceuk , long kehewiutcqqipxibikqt , long ettbvvplwqmlxlaorcps , long uwayqkygpiwqrysqbidq ) ; <s> private static native void _imaqWriteTIFFFile ( long stqnopudizcggdqqceuk , long kehewiutcqqipxibikqt , long ettbvvplwqmlxlaorcps , long uwayqkygpiwqrysqbidq ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqWriteTIFFFile ( long image , long fileName , long options , long colorTable ) {}
fix_after_refactoring: private static void _imaqWriteTIFFFile ( long stqnopudizcggdqqceuk , long kehewiutcqqipxibikqt , long ettbvvplwqmlxlaorcps , long uwayqkygpiwqrysqbidq ) {}
× fix_prediction_before: private static void _imaqWriteFFFile ( long image , long fileName , long color ) {}
× fix_prediction_after: private static native void _imaqWriteFFn ( long stopFile , long stopc ) ;

line_index: 819
bug_before_refactoring: @ java.lang.Override public org.eclipse.ecf.mgmt.p2.repository.RepositoryMTO [] getArtifactRepositories ( int flags ) { return getArtifactRepositories ( null , flags ) ; } <s> @ java.lang.Override public org.eclipse.ecf.mgmt.p2.repository.RepositoryMTO [] getArtifactRepositories ( int flags ) { return getArtifactRepositories ( null , flags ) ; } <s> Testing and bug fixes.  Removed unnecessary 'flag' methods from IRepositoryManager.
bug_after_refactoring: @ java.lang.Override public org.eclipse.ecf.mgmt.p2.repository.RepositoryMTO [] getArtifactRepositories ( int rsapxohpajevbvspkzeq ) { return getArtifactRepositories ( null , rsapxohpajevbvspkzeq ) ; } <s> @ java.lang.Override public org.eclipse.ecf.mgmt.p2.repository.RepositoryMTO [] getArtifactRepositories ( int rsapxohpajevbvspkzeq ) { return getArtifactRepositories ( null , rsapxohpajevbvspkzeq ) ; } <s> Testing and bug fixes.  Removed unnecessary 'flag' methods from IRepositoryManager.
fix_before_refactoring: @ java.lang.Override public org.eclipse.ecf.mgmt.p2.repository.RepositoryMTO [] getArtifactRepositories () { return getArtifactRepositories ( null ) ; }
fix_after_refactoring: @ java.lang.Override public org.eclipse.ecf.mgmt.p2.repository.RepositoryMTO [] getArtifactRepositories () { return getArtifactRepositories ( null ) ; }
× fix_prediction_before: @ java.lang.Override public org.eclipse.ecf.mgmt.p2.repository.RepositoryMTO getArtifactRepositories ( int [] flags ) { return getArtifactRepositories ( flags , null ) ; }
× fix_prediction_after: @ java.lang.Override public org.eclipse.ecf.mgmt.p2.repository.MTO [] getArtifactTO ( int [] rs ) { return getArtifact ( rs , null ) ; }

line_index: 820
bug_before_refactoring: @ java.lang.Override public void initialize ( java.net.URL location , java.util.ResourceBundle resources ) {} <s> @ java.lang.Override public void initialize ( java.net.URL location , java.util.ResourceBundle resources ) {} <s> Fixed fxml controller not being linked to actual class <bug
bug_after_refactoring: @ java.lang.Override public void initialize ( java.net.URL wzqultiyaaghrrjmxnmz , java.util.ResourceBundle qqyxxwjxhuwvcghcwdve ) {} <s> @ java.lang.Override public void initialize ( java.net.URL wzqultiyaaghrrjmxnmz , java.util.ResourceBundle qqyxxwjxhuwvcghcwdve ) {} <s> Fixed fxml controller not being linked to actual class <bug
fix_before_refactoring: @ javafx.fxml.FXML public void initialize () {}
fix_after_refactoring: @ javafx.fxml.FXML public void initialize () {}
× fix_prediction_before: @ java.lang.Override public void initialize ( java.net.URL location ) {}
× fix_prediction_after: @ java.lang.Override public void initialize ( java.net.URL wzya ) {}

line_index: 821
bug_before_refactoring: public void onSwiped ( android.support.v7.widget.RecyclerView.ViewHolder viewHolder , int direction ) { if ( itemSelected ) { showOptions ( false ) ; } else { mAdapter . onItemDismiss ( viewHolder . getAdapterPosition () ) ; moving = true ; updateUI () ; } } <s> public void onSwiped ( android.support.v7.widget.RecyclerView.ViewHolder viewHolder , int direction ) { if ( itemSelected ) { showOptions ( false ) ; } else { mAdapter . onItemDismiss ( viewHolder . getAdapterPosition () ) ; moving = true ; updateUI () ; } } <s> Fixed swiped while list item selected bug Fixed nul text exception for removing white space  from html tagged text
bug_after_refactoring: public void onSwiped ( android.support.v7.widget.RecyclerView.ViewHolder opxlzmopqhacmbjjkosy , int dficoowqzbjdejqrkcto ) { if ( itemSelected ) { showOptions ( false ) ; } else { mAdapter . onItemDismiss ( opxlzmopqhacmbjjkosy . getAdapterPosition () ) ; moving = true ; updateUI () ; } } <s> public void onSwiped ( android.support.v7.widget.RecyclerView.ViewHolder opxlzmopqhacmbjjkosy , int dficoowqzbjdejqrkcto ) { if ( itemSelected ) { showOptions ( false ) ; } else { mAdapter . onItemDismiss ( opxlzmopqhacmbjjkosy . getAdapterPosition () ) ; moving = true ; updateUI () ; } } <s> Fixed swiped while list item selected bug Fixed nul text exception for removing white space  from html tagged text
fix_before_refactoring: public void onSwiped ( android.support.v7.widget.RecyclerView.ViewHolder viewHolder , int direction ) { mAdapter . onItemDismiss ( viewHolder . getAdapterPosition () ) ; moving = true ; }
fix_after_refactoring: public void onSwiped ( android.support.v7.widget.RecyclerView.ViewHolder opxlzmopqhacmbjjkosy , int dficoowqzbjdejqrkcto ) { mAdapter . onItemDismiss ( opxlzmopqhacmbjjkosy . getAdapterPosition () ) ; moving = true ; }
× fix_prediction_before: @ java.lang.Override public void onSwiped ( android.support.v7.widget.RecyclerView.ViewHolder viewHolder , int direction ) { mAdapter . onItemDismiss ( viewHolder ) ; }
× fix_prediction_after: @ java.lang.Override public void onSwiped ( android.support.v7.widget.RecyclerView.ViewHolder op , int movingPosition ) { if ( ( mAdapter ) != null ) { int df = getAdapterPosition () ; for ( int x = 0 ; i < ( df . size () ) ; i ++ ) { updateUI ( true ) ; } } }

line_index: 822
bug_before_refactoring: public void setBadgeNumber ( int num ) { if ( num == 0 ) { badge . setVisibility ( View.INVISIBLE ) ; } else { badge . setVisibility ( View.VISIBLE ) ; badge . setBadgeCount ( num ) ; } } <s> public void setBadgeNumber ( int num ) { if ( num == 0 ) { badge . setVisibility ( View.INVISIBLE ) ; } else { badge . setVisibility ( View.VISIBLE ) ; badge . setBadgeCount ( num ) ; } } <s> Fix bug of showing new message number.
bug_after_refactoring: public void setBadgeNumber ( int rbbvvauqdjnggvwlxdom ) { if ( rbbvvauqdjnggvwlxdom == 0 ) { badge . setVisibility ( View.INVISIBLE ) ; } else { badge . setVisibility ( View.VISIBLE ) ; badge . setBadgeCount ( rbbvvauqdjnggvwlxdom ) ; } } <s> public void setBadgeNumber ( int rbbvvauqdjnggvwlxdom ) { if ( rbbvvauqdjnggvwlxdom == 0 ) { badge . setVisibility ( View.INVISIBLE ) ; } else { badge . setVisibility ( View.VISIBLE ) ; badge . setBadgeCount ( rbbvvauqdjnggvwlxdom ) ; } } <s> Fix bug of showing new message number.
fix_before_refactoring: public void setBadgeNumber ( int num ) { badge . setBadgeCount ( num ) ; }
fix_after_refactoring: public void setBadgeNumber ( int rbbvvauqdjnggvwlxdom ) { badge . setBadgeCount ( rbbvvauqdjnggvwlxdom ) ; }
× fix_prediction_before: public void setBadgeNumber ( int num ) {}
× fix_prediction_after: public void setBadgeNumber ( int rb ) {}

line_index: 823
bug_before_refactoring: @ java.lang.Override public void onAttachOrDetach ( com.google.gwt.event.logical.shared.AttachEvent event ) { init () ; } <s> @ java.lang.Override public void onAttachOrDetach ( com.google.gwt.event.logical.shared.AttachEvent event ) { init () ; } <s> migrating Map selection interface to new Forms - fixed bug with half rendered map
bug_after_refactoring: @ java.lang.Override public void onAttachOrDetach ( com.google.gwt.cocmknwfchfheeqlkdvl.logical.shared.AttachEvent cocmknwfchfheeqlkdvl ) { init () ; } <s> @ java.lang.Override public void onAttachOrDetach ( com.google.gwt.cocmknwfchfheeqlkdvl.logical.shared.AttachEvent cocmknwfchfheeqlkdvl ) { init () ; } <s> migrating Map selection interface to new Forms - fixed bug with half rendered map
fix_before_refactoring: @ java.lang.Override public void execute () { init () ; }
fix_after_refactoring: @ java.lang.Override public void execute () { init () ; }
× fix_prediction_before: @ java.lang.Override public void onAttachOr ( com.google.gwt.event.logical.shared.AttachEvent event ) {}
× fix_prediction_after: @ java.lang.Override public void onAttachOrAttachOr ( com.google.gwt.coccocch.fvlqlql.shared.Event c ) {}

line_index: 824
bug_before_refactoring: @ java.lang.Override protected void setSelectionForAll ( java.lang.Boolean selected ) { for ( org.dcache.webadmin.view.beans.PoolSpaceBean bean : _poolBeans ) { bean . setSelected ( true ) ; } } <s> @ java.lang.Override protected void setSelectionForAll ( java.lang.Boolean selected ) { for ( org.dcache.webadmin.view.beans.PoolSpaceBean bean : _poolBeans ) { bean . setSelected ( true ) ; } } <s> (2.6) webadmin: fix select/deselect all on PoolUsage and ActiveTransfers  Bug in code which forces true where it should be using the method parameter makes deselect all button behave like select all on these two pages.  Target:  2.6 Require-book: no Require-notes: yes Acked-by:  Gerd  RELEASE NOTES:  Fixes bug preventing deselect button on PoolUsage and ActiveTransfers pages from working.
bug_after_refactoring: @ java.lang.Override protected void setSelectionForAll ( java.lang.Boolean qijonelwjmixmdcdcgrk ) { for ( org.dcache.webadmin.view.beans.PoolSpaceBean bean : _poolBeans ) { bean . setSelected ( true ) ; } } <s> @ java.lang.Override protected void setSelectionForAll ( java.lang.Boolean qijonelwjmixmdcdcgrk ) { for ( org.dcache.webadmin.view.beans.PoolSpaceBean bean : _poolBeans ) { bean . setSelected ( true ) ; } } <s> (2.6) webadmin: fix select/deselect all on PoolUsage and ActiveTransfers  Bug in code which forces true where it should be using the method parameter makes deselect all button behave like select all on these two pages.  Target:  2.6 Require-book: no Require-notes: yes Acked-by:  Gerd  RELEASE NOTES:  Fixes bug preventing deselect button on PoolUsage and ActiveTransfers pages from working.
fix_before_refactoring: @ java.lang.Override protected void setSelectionForAll ( java.lang.Boolean selected ) { for ( org.dcache.webadmin.view.beans.PoolSpaceBean bean : _poolBeans ) { bean . setSelected ( selected ) ; } }
fix_after_refactoring: @ java.lang.Override protected void setSelectionForAll ( java.lang.Boolean qijonelwjmixmdcdcgrk ) { for ( org.dcache.webadmin.view.beans.PoolSpaceBean bean : _poolBeans ) { bean . setSelected ( qijonelwjmixmdcdcgrk ) ; } }
× fix_prediction_before: @ java.lang.Override protected void setSelection ( java.lang.Boolean selected ) {}
× fix_prediction_after: @ java.lang.Override protected void setSelection ( java.lang.Boolean q ) {}

line_index: 825
bug_before_refactoring: public org.wso2.carbon.ml.database.Workflow getWorkflow ( long modelId , long analysisId ) throws org.wso2.carbon.ml.database.exceptions.DatabaseHandlerException ; <s> public org.wso2.carbon.ml.database.Workflow getWorkflow ( long modelId , long analysisId ) throws org.wso2.carbon.ml.database.exceptions.DatabaseHandlerException ; <s> Fixing a issue occurred when generating a model.
bug_after_refactoring: public org.wso2.carbon.ml.database.Workflow getWorkflow ( long ddubtzguvmeroruybxjw , long lbkrxpkcjcpmcycypvpg ) throws org.wso2.carbon.ml.database.exceptions.DatabaseHandlerException ; <s> public org.wso2.carbon.ml.database.Workflow getWorkflow ( long ddubtzguvmeroruybxjw , long lbkrxpkcjcpmcycypvpg ) throws org.wso2.carbon.ml.database.exceptions.DatabaseHandlerException ; <s> Fixing a issue occurred when generating a model.
fix_before_refactoring: public org.wso2.carbon.ml.database.Workflow getWorkflow ( long analysisId ) throws org.wso2.carbon.ml.database.exceptions.DatabaseHandlerException ;
fix_after_refactoring: public org.wso2.carbon.ml.database.Workflow getWorkflow ( long lbkrxpkcjcpmcycypvpg ) throws org.wso2.carbon.ml.database.exceptions.DatabaseHandlerException ;
× fix_prediction_before: public org.wso2.carbon.database.Workflow.Workflow getWorkflow ( long analysisId , long analysisId ) throws org.wso2.carbon.database.exceptions.DatabaseException ;
× fix_prediction_after: public org.wso2.carbon.databaseml.Workflower getWorkflower ( long lbvm ) throws org.wso2.carbon.cyjmlypml.exceptions.DatabaseException ;

line_index: 826
bug_before_refactoring: public native void SetBGBitmap ( int bitmap ) ; <s> public native void SetBGBitmap ( int bitmap ) ; <s> Release 1.5.0  Error handling  merge branches  bugfixes
bug_after_refactoring: public native void SetBGBitmap ( int vjenzqipaslwtbdxugnh ) ; <s> public native void SetBGBitmap ( int vjenzqipaslwtbdxugnh ) ; <s> Release 1.5.0  Error handling  merge branches  bugfixes
fix_before_refactoring: public native boolean SetBGBitmap ( int bitmap ) ;
fix_after_refactoring: public native boolean SetBGBitmap ( int vjenzqipaslwtbdxugnh ) ;
× fix_prediction_before: public native void SetBGBitmap ( int bitmap ) ;
× fix_prediction_after: public native void SetBGzjipen ( int v ) ;

line_index: 827
bug_before_refactoring: public int save ( ar.edu.unlp.info.hermescelascolus.models.Pictogram p ) { return 0 ; } <s> public int save ( ar.edu.unlp.info.hermescelascolus.models.Pictogram p ) { return 0 ; } <s> problem fixed: kid activity crash app after a new kid was created
bug_after_refactoring: dogzyllqggfmntlnrheyublic int save ( ar.edu.unldogzyllqggfmntlnrhey.info.hermescelascolus.models.Pictogram dogzyllqggfmntlnrhey ) { return 0 ; } <s> dogzyllqggfmntlnrheyublic int save ( ar.edu.unldogzyllqggfmntlnrhey.info.hermescelascolus.models.Pictogram dogzyllqggfmntlnrhey ) { return 0 ; } <s> problem fixed: kid activity crash app after a new kid was created
fix_before_refactoring: public void save ( ar.edu.unlp.info.hermescelascolus.models.Pictogram p ) {}
fix_after_refactoring: dogzyllqggfmntlnrheyublic void save ( ar.edu.unldogzyllqggfmntlnrhey.info.hermescelascolus.models.Pictogram dogzyllqggfmntlnrhey ) {}
× fix_prediction_before: public int save ( ar.edu.unlp.info.hermescelascolus.models.Pictogram p ) { return 1 ; }
× fix_prediction_after: java.lang.System.out . println ( ( ( arzyqggntln.rheyunfm.models.llggasln ) + 1 ) )

line_index: 828
bug_before_refactoring: private static native void _imaqRenameChar ( long set , int index , long newCharValue ) ; <s> private static native void _imaqRenameChar ( long set , int index , long newCharValue ) ; <s> Fixing bugs
bug_after_refactoring: private static native void _imaqRenameChar ( long fpmzpsujjbyjddmfusps , int vfzuvuogtotjgsqgzouy , long bjfjpmbykahfhfadjrwn ) ; <s> private static native void _imaqRenameChar ( long fpmzpsujjbyjddmfusps , int vfzuvuogtotjgsqgzouy , long bjfjpmbykahfhfadjrwn ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqRenameChar ( long set , int index , long newCharValue ) {}
fix_after_refactoring: private static void _imaqRenameChar ( long fpmzpsujjbyjddmfusps , int vfzuvuogtotjgsqgzouy , long bjfjpmbykahfhfadjrwn ) {}
× fix_prediction_before: private static void _imaqRenameChar ( long set , int index , long newValue ) {}
× fix_prediction_after: private static void _imaqRenameChar ( long fpzmpsjjpsbyjusz , int buvgsh , long b ) {}

line_index: 829
bug_before_refactoring: private void triggerNearCacheEviction ( com.hazelcast.core.IMap < java.lang.Integer , java.lang.Integer > map ) { populateMap ( map , 1 ) ; pullEntriesToNearCache ( map , 1 ) ; } <s> private void triggerNearCacheEviction ( com.hazelcast.core.IMap < java.lang.Integer , java.lang.Integer > map ) { populateMap ( map , 1 ) ; pullEntriesToNearCache ( map , 1 ) ; } <s> Fixed visibility issues in Near Cache tests for EE.
bug_after_refactoring: private void triggerNearCacheEviction ( com.hazelcast.core.IMap < java.lang.Integer , java.lang.Integer > solwvilkhavzuziejrlp ) { populateMap ( solwvilkhavzuziejrlp , 1 ) ; pullEntriesToNearCache ( solwvilkhavzuziejrlp , 1 ) ; } <s> private void triggerNearCacheEviction ( com.hazelcast.core.IMap < java.lang.Integer , java.lang.Integer > solwvilkhavzuziejrlp ) { populateMap ( solwvilkhavzuziejrlp , 1 ) ; pullEntriesToNearCache ( solwvilkhavzuziejrlp , 1 ) ; } <s> Fixed visibility issues in Near Cache tests for EE.
fix_before_refactoring: protected void triggerNearCacheEviction ( com.hazelcast.core.IMap < java.lang.Integer , java.lang.Integer > map ) { populateMap ( map , 1 ) ; pullEntriesToNearCache ( map , 1 ) ; }
fix_after_refactoring: protected void triggerNearCacheEviction ( com.hazelcast.core.IMap < java.lang.Integer , java.lang.Integer > solwvilkhavzuziejrlp ) { populateMap ( solwvilkhavzuziejrlp , 1 ) ; pullEntriesToNearCache ( solwvilkhavzuziejrlp , 1 ) ; }
× fix_prediction_before: protected void triggerNearCache ( com.hazelcast.core.IMap < java.lang.Integer , java.lang.Integer > map ) { populateNearCacheToCache ( map ) ; populateNearCache ( 1 , map ) ; }
× fix_prediction_after: public void triggerNearCache ( com.hazelcast.core.IMap < java.lang.Integer , java.lang.Integer > solkh ) { if ( solvilh != null ) { populateNearrlvk ( solzh , 1 , 1 ) ; populateNearCacheToCache ( solzh ) ; } }

line_index: 830
bug_before_refactoring: public void pushDouble ( org.renjin.compiler.pipeline.ComputeMethod method ) {} <s> public void pushDouble ( org.renjin.compiler.pipeline.ComputeMethod method ) {} <s> Fixed bug in vector pipeliner
bug_after_refactoring: public void pushDouble ( org.renjin.compiler.pipeline.ComputeMethod wtnobqdvdrnesxqcqmnh ) {} <s> public void pushDouble ( org.renjin.compiler.pipeline.ComputeMethod wtnobqdvdrnesxqcqmnh ) {} <s> Fixed bug in vector pipeliner
fix_before_refactoring: public abstract void pushDouble ( org.renjin.compiler.pipeline.ComputeMethod method ) ;
fix_after_refactoring: public abstract void pushDouble ( org.renjin.compiler.pipeline.ComputeMethod wtnobqdvdrnesxqcqmnh ) ;
× fix_prediction_before: public void pushDouble ( org.renjin.compiler.pipeline.ComputeMethod method ) { this . method = method ; }
× fix_prediction_after: public void pushDouble ( org.renjinjincompiler.jobmn.ComputeMethod wob ) {}

line_index: 831
bug_before_refactoring: @ java.lang.Override public int onStartCommand ( android.content.Intent intent , int flags , int startId ) { if ( intent . hasExtra ( com.example.polygon_monitor.ServicesMessageDefiningService.MESSAGE ) ) { handleJson ( intent . getStringExtra ( com.example.polygon_monitor.ServicesMessageDefiningService.MESSAGE ) ) ; } return START_STICKY ; } <s> @ java.lang.Override public int onStartCommand ( android.content.Intent intent , int flags , int startId ) { if ( intent . hasExtra ( com.example.polygon_monitor.ServicesMessageDefiningService.MESSAGE ) ) { handleJson ( intent . getStringExtra ( com.example.polygon_monitor.ServicesMessageDefiningService.MESSAGE ) ) ; } return START_STICKY ; } <s> intent null bug fix
bug_after_refactoring: @ java.lang.Override public int onStartCommand ( android.content.Intent nyiijgatjwsxnpcfrxce , int ojgplzluckloftvogpjh , int sfmvkfjyrfhxeuazeykh ) { if ( nyiijgatjwsxnpcfrxce . hasExtra ( com.example.polygon_monitor.ServicesMessageDefiningService.MESSAGE ) ) { handleJson ( nyiijgatjwsxnpcfrxce . getStringExtra ( com.example.polygon_monitor.ServicesMessageDefiningService.MESSAGE ) ) ; } return START_STICKY ; } <s> @ java.lang.Override public int onStartCommand ( android.content.Intent nyiijgatjwsxnpcfrxce , int ojgplzluckloftvogpjh , int sfmvkfjyrfhxeuazeykh ) { if ( nyiijgatjwsxnpcfrxce . hasExtra ( com.example.polygon_monitor.ServicesMessageDefiningService.MESSAGE ) ) { handleJson ( nyiijgatjwsxnpcfrxce . getStringExtra ( com.example.polygon_monitor.ServicesMessageDefiningService.MESSAGE ) ) ; } return START_STICKY ; } <s> intent null bug fix
fix_before_refactoring: @ java.lang.Override public int onStartCommand ( android.content.Intent intent , int flags , int startId ) { if ( intent != null ) { if ( intent . hasExtra ( com.example.polygon_monitor.ServicesMessageDefiningService.MESSAGE ) ) { handleJson ( intent . getStringExtra ( com.example.polygon_monitor.ServicesMessageDefiningService.MESSAGE ) ) ; } } return START_STICKY ; }
fix_after_refactoring: @ java.lang.Override public int onStartCommand ( android.content.Intent nyiijgatjwsxnpcfrxce , int ojgplzluckloftvogpjh , int sfmvkfjyrfhxeuazeykh ) { if ( nyiijgatjwsxnpcfrxce != null ) { if ( nyiijgatjwsxnpcfrxce . hasExtra ( com.example.polygon_monitor.ServicesMessageDefiningService.MESSAGE ) ) { handleJson ( nyiijgatjwsxnpcfrxce . getStringExtra ( com.example.polygon_monitor.ServicesMessageDefiningService.MESSAGE ) ) ; } } return START_STICKY ; }
× fix_prediction_before: @ java.lang.Override public void onStartCommand ( android.content.Intent intent , int flags , int startId ) { if ( intent != null ) { com.example.ining.monitormonitor.Services . handleCommand ( intent . getStringExtra ( START_MESSAGE ) ) ; } }
× fix_prediction_after: @ java.lang.Override public int onStartCommand ( android.content.Intent intent ) { return START_MESSAGE ; }

line_index: 832
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.POST ) public org.springframework.http.ResponseEntity < java.lang.Void > create ( @ org.springframework.web.bind.annotation.RequestBody pl.bookshop.domains.Product product ) { if ( productsService . isExist ( product ) ) { productsService . create ( product ) ; return new org.springframework.http.ResponseEntity ( org.springframework.http.HttpStatus.CREATED ) ; } return new org.springframework.http.ResponseEntity ( org.springframework.http.HttpStatus.CONFLICT ) ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.POST ) public org.springframework.http.ResponseEntity < java.lang.Void > create ( @ org.springframework.web.bind.annotation.RequestBody pl.bookshop.domains.Product product ) { if ( productsService . isExist ( product ) ) { productsService . create ( product ) ; return new org.springframework.http.ResponseEntity ( org.springframework.http.HttpStatus.CREATED ) ; } return new org.springframework.http.ResponseEntity ( org.springframework.http.HttpStatus.CONFLICT ) ; } <s> Fixes problem with not proper work of create endpoint
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.POST ) public org.springframework.http.ResponseEntity < java.lang.Void > create ( @ org.springframework.web.bind.annotation.RequestBody pl.bookshop.domains.Product hbmhkerrdqbkfmmajlky ) { if ( hbmhkerrdqbkfmmajlkysService . isExist ( hbmhkerrdqbkfmmajlky ) ) { hbmhkerrdqbkfmmajlkysService . create ( hbmhkerrdqbkfmmajlky ) ; return new org.springframework.http.ResponseEntity ( org.springframework.http.HttpStatus.CREATED ) ; } return new org.springframework.http.ResponseEntity ( org.springframework.http.HttpStatus.CONFLICT ) ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.POST ) public org.springframework.http.ResponseEntity < java.lang.Void > create ( @ org.springframework.web.bind.annotation.RequestBody pl.bookshop.domains.Product hbmhkerrdqbkfmmajlky ) { if ( hbmhkerrdqbkfmmajlkysService . isExist ( hbmhkerrdqbkfmmajlky ) ) { hbmhkerrdqbkfmmajlkysService . create ( hbmhkerrdqbkfmmajlky ) ; return new org.springframework.http.ResponseEntity ( org.springframework.http.HttpStatus.CREATED ) ; } return new org.springframework.http.ResponseEntity ( org.springframework.http.HttpStatus.CONFLICT ) ; } <s> Fixes problem with not proper work of create endpoint
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.POST ) public org.springframework.http.ResponseEntity < java.lang.Void > create ( @ org.springframework.web.bind.annotation.RequestBody pl.bookshop.domains.Product product ) { if ( productsService . isExist ( product ) ) { return new org.springframework.http.ResponseEntity ( org.springframework.http.HttpStatus.CONFLICT ) ; } productsService . create ( product ) ; return new org.springframework.http.ResponseEntity ( org.springframework.http.HttpStatus.CREATED ) ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.POST ) public org.springframework.http.ResponseEntity < java.lang.Void > create ( @ org.springframework.web.bind.annotation.RequestBody pl.bookshop.domains.Product hbmhkerrdqbkfmmajlky ) { if ( hbmhkerrdqbkfmmajlkysService . isExist ( hbmhkerrdqbkfmmajlky ) ) { return new org.springframework.http.ResponseEntity ( org.springframework.http.HttpStatus.CONFLICT ) ; } hbmhkerrdqbkfmmajlkysService . create ( hbmhkerrdqbkfmmajlky ) ; return new org.springframework.http.ResponseEntity ( org.springframework.http.HttpStatus.CREATED ) ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.POST ) public void createProduct ( @ org.springframework.web.bind.annotation.RequestBody pl.shop.http.ResponseEntity < java.lang.Void > product ) { if ( isCTLICREATED ) { productsService . createProduct ( product ) ; } }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.POST ) @ org.springframework.web.bind.annotation.ResponseStatus ( value = org.springframework.http.HttpStatus.CREATED ) public org.springframework.http.ResponseEntity < java.lang.Void > createProduct ( @ org.springframework.web.bind.annotation.RequestBody hfmkykykyhq.jfm.Productrd ) { hlfmService . createProduct ( hbm ) ; return new org.springframework.http.ResponseEntity ( org.springframework.http.HttpStatus.CREATED ) ; }

line_index: 833
bug_before_refactoring: private void saveRequestParameter ( final javax.servlet.http.HttpServletRequest request , final javax.servlet.http.HttpSession session , final java.lang.String name ) { final java.lang.String value = request . getParameter ( name ) ; if ( value != null ) { session . setAttribute ( name , value ) ; } } <s> private void saveRequestParameter ( final javax.servlet.http.HttpServletRequest request , final javax.servlet.http.HttpSession session , final java.lang.String name ) { final java.lang.String value = request . getParameter ( name ) ; if ( value != null ) { session . setAttribute ( name , value ) ; } } <s> fixed cs issues  added adfs changes
bug_after_refactoring: private void saveRequestParameter ( final javax.servlet.http.HttpServletRequest jmwteoyodxxfuxlfbgzo , final javax.servlet.http.HttpSession zatclxmnnwglgaqveerc , final java.lang.String rcogjtkojyeyykoqmxmz ) { final java.lang.String value = jmwteoyodxxfuxlfbgzo . getParameter ( rcogjtkojyeyykoqmxmz ) ; if ( value != null ) { zatclxmnnwglgaqveerc . setAttribute ( rcogjtkojyeyykoqmxmz , value ) ; } } <s> private void saveRequestParameter ( final javax.servlet.http.HttpServletRequest jmwteoyodxxfuxlfbgzo , final javax.servlet.http.HttpSession zatclxmnnwglgaqveerc , final java.lang.String rcogjtkojyeyykoqmxmz ) { final java.lang.String value = jmwteoyodxxfuxlfbgzo . getParameter ( rcogjtkojyeyykoqmxmz ) ; if ( value != null ) { zatclxmnnwglgaqveerc . setAttribute ( rcogjtkojyeyykoqmxmz , value ) ; } } <s> fixed cs issues  added adfs changes
fix_before_refactoring: private static void saveRequestParameter ( final javax.servlet.http.HttpServletRequest request , final javax.servlet.http.HttpSession session , final java.lang.String name ) { final java.lang.String value = request . getParameter ( name ) ; if ( value != null ) { session . setAttribute ( name , value ) ; } }
fix_after_refactoring: private static void saveRequestParameter ( final javax.servlet.http.HttpServletRequest jmwteoyodxxfuxlfbgzo , final javax.servlet.http.HttpSession zatclxmnnwglgaqveerc , final java.lang.String rcogjtkojyeyykoqmxmz ) { final java.lang.String value = jmwteoyodxxfuxlfbgzo . getParameter ( rcogjtkojyeyykoqmxmz ) ; if ( value != null ) { zatclxmnnwglgaqveerc . setAttribute ( rcogjtkojyeyykoqmxmz , value ) ; } }
× fix_prediction_before: private void saveRequestParameter ( final javax.servlet.http.HttpServletRequest request , final javax.servlet.http.HttpSession session , final java.lang.String name ) { final java.lang.String value = request . getParameter ( name ) ; if ( value != null ) { session . setAttribute ( name , value ) ; } }
× fix_prediction_after: private void saveRequestParameter ( final javax.servlet.http.HttpServletRequest jtewtexxmogf , final java.lang.String value ) { final javax.servlet.http.HttpSession rc = rc . getParameter ( value ) ; if ( data != null ) { jywteeyz.qxxz.moglclyodko.jnnywyz.mogo . setAttribute ( null , zux ) ; } }

line_index: 834
bug_before_refactoring: @ java.lang.Override protected void showOutput ( java.lang.String arg0 ) { showText ( arg0 ) ; } <s> @ java.lang.Override protected void showOutput ( java.lang.String arg0 ) { showText ( arg0 ) ; } <s> Try to solve thread-problem with separated object thread
bug_after_refactoring: @ java.lang.Override protected void showOutput ( java.lang.String wekvpawymkrvvylcccng ) { showText ( wekvpawymkrvvylcccng ) ; } <s> @ java.lang.Override protected void showOutput ( java.lang.String wekvpawymkrvvylcccng ) { showText ( wekvpawymkrvvylcccng ) ; } <s> Try to solve thread-problem with separated object thread
fix_before_refactoring: @ java.lang.Override public void showText ( java.lang.String text ) { this . showText ( text ) ; }
fix_after_refactoring: @ java.lang.Override public void showText ( java.lang.String text ) { this . showText ( text ) ; }
× fix_prediction_before: @ java.lang.Override protected void showOutput ( java.lang.String arg0 ) { showOutput ( arg0 ) ; }
× fix_prediction_after: @ java.lang.Override public void showOutput ( java.lang.String weympym.ng ) { showOutput ( weymng ) ; }

line_index: 835
bug_before_refactoring: @ java.lang.Override public void save ( java.lang.String key , T value ) { cache . put ( key , value ) ; } <s> @ java.lang.Override public void save ( java.lang.String key , T value ) { cache . put ( key , value ) ; } <s> fixed some problem with putting null value parameter to cache
bug_after_refactoring: @ java.lang.Override public void save ( java.lang.String xhysjlfxnndiflcfoswu , T leiuldorclztiiguyhrn ) { cache . put ( xhysjlfxnndiflcfoswu , leiuldorclztiiguyhrn ) ; } <s> @ java.lang.Override public void save ( java.lang.String xhysjlfxnndiflcfoswu , T leiuldorclztiiguyhrn ) { cache . put ( xhysjlfxnndiflcfoswu , leiuldorclztiiguyhrn ) ; } <s> fixed some problem with putting null value parameter to cache
fix_before_refactoring: @ java.lang.Override public void save ( java.lang.String key , T value ) { if ( value != null ) { cache . put ( key , value ) ; } }
fix_after_refactoring: @ java.lang.Override public void save ( java.lang.String xhysjlfxnndiflcfoswu , T leiuldorclztiiguyhrn ) { if ( leiuldorclztiiguyhrn != null ) { cache . put ( xhysjlfxnndiflcfoswu , leiuldorclztiiguyhrn ) ; } }
× fix_prediction_before: @ java.lang.Override public void save ( java.lang.String key , T value ) { cache . put ( key , value ) ; }
× fix_prediction_after: @ java.lang.Override public void save ( java.lang.String xh ) { if ( ( leljosys ) != null ) { leuwlifjosligligys . put ( xlcl , value ) ; } }

line_index: 836
bug_before_refactoring: private void createSubject ( java.lang.String key ) { com.sharethrough.sdk.network.AdManager . setAdManagerInstance ( adManager ) ; subject = new com.sharethrough.sdk.SharethroughTest.SharethroughStub ( org.robolectric.Robolectric.application , key , adCacheTimeInMilliseconds , renderer , availableCreatives , beaconService , null ) ; subject . setOnStatusChangeListener ( onStatusChangeListener ) ; } <s> private void createSubject ( java.lang.String key ) { com.sharethrough.sdk.network.AdManager . setAdManagerInstance ( adManager ) ; subject = new com.sharethrough.sdk.SharethroughTest.SharethroughStub ( org.robolectric.Robolectric.application , key , adCacheTimeInMilliseconds , renderer , availableCreatives , beaconService , null ) ; subject . setOnStatusChangeListener ( onStatusChangeListener ) ; } <s> Wrong pkey and arid/awid bug fix
bug_after_refactoring: private void createSubject ( java.lang.String fjcbcwiaujnvsmbfflob ) { com.sharethrough.sdk.network.AdManager . setAdManagerInstance ( adManager ) ; subject = new com.sharethrough.sdk.SharethroughTest.SharethroughStub ( org.robolectric.Robolectric.application , fjcbcwiaujnvsmbfflob , adCacheTimeInMilliseconds , renderer , availableCreatives , beaconService , null ) ; subject . setOnStatusChangeListener ( onStatusChangeListener ) ; } <s> private void createSubject ( java.lang.String fjcbcwiaujnvsmbfflob ) { com.sharethrough.sdk.network.AdManager . setAdManagerInstance ( adManager ) ; subject = new com.sharethrough.sdk.SharethroughTest.SharethroughStub ( org.robolectric.Robolectric.application , fjcbcwiaujnvsmbfflob , adCacheTimeInMilliseconds , renderer , availableCreatives , beaconService , null ) ; subject . setOnStatusChangeListener ( onStatusChangeListener ) ; } <s> Wrong pkey and arid/awid bug fix
fix_before_refactoring: private void createSubject ( java.lang.String key ) { subject = new com.sharethrough.sdk.SharethroughTest.SharethroughStub ( org.robolectric.Robolectric.application , key , adCacheTimeInMilliseconds , renderer , availableCreatives , beaconService , null , adManager ) ; subject . setOnStatusChangeListener ( onStatusChangeListener ) ; }
fix_after_refactoring: private void createSubject ( java.lang.String fjcbcwiaujnvsmbfflob ) { subject = new com.sharethrough.sdk.SharethroughTest.SharethroughStub ( org.robolectric.Robolectric.application , fjcbcwiaujnvsmbfflob , adCacheTimeInMilliseconds , renderer , availableCreatives , beaconService , null , adManager ) ; subject . setOnStatusChangeListener ( onStatusChangeListener ) ; }
× fix_prediction_before: private void createSubject ( java.lang.String key ) { com.share.sdk.network.AdolectricManager . setAdStatus ( new com.robo.sdk.share.ShareManager ( key , adTime , adTime , null ) ) ; org.robolectric.ShareManager . setOnAdStatusChangeListener ( renderer ) ; }
× fix_prediction_after: private void createSubject ( java.lang.String f , java.lang.String f ) { org.jcwcbia.sdk.lobff.network.RoboManager . createAdStatus ( f , available , null ) ; }

line_index: 837
bug_before_refactoring: @ org.jclouds.json.SerializedNames ( value = { "id" , "repository" , "sourceMatcher" , "targetMatcher" , "reviewers" , "requiredApprovals" } ) public static com.cdancy.bitbucket.rest.options.CreateCondition create ( java.lang.Long id , com.cdancy.bitbucket.rest.domain.repository.Repository repository , com.cdancy.bitbucket.rest.domain.branch.Matcher sourceMatcher , com.cdancy.bitbucket.rest.domain.branch.Matcher targetMatcher , java.util.List < com.cdancy.bitbucket.rest.domain.pullrequest.User > reviewers , java.lang.Long requiredApprovals ) { return new com.cdancy.bitbucket.rest.options.AutoValue_CreateCondition ( id , repository , sourceMatcher , targetMatcher , reviewers , requiredApprovals ) ; } <s> @ org.jclouds.json.SerializedNames ( value = { "id" , "repository" , "sourceMatcher" , "targetMatcher" , "reviewers" , "requiredApprovals" } ) public static com.cdancy.bitbucket.rest.options.CreateCondition create ( java.lang.Long id , com.cdancy.bitbucket.rest.domain.repository.Repository repository , com.cdancy.bitbucket.rest.domain.branch.Matcher sourceMatcher , com.cdancy.bitbucket.rest.domain.branch.Matcher targetMatcher , java.util.List < com.cdancy.bitbucket.rest.domain.pullrequest.User > reviewers , java.lang.Long requiredApprovals ) { return new com.cdancy.bitbucket.rest.options.AutoValue_CreateCondition ( id , repository , sourceMatcher , targetMatcher , reviewers , requiredApprovals ) ; } <s> Fix issues #93
bug_after_refactoring: @ org.jclouds.json.SerializedNames ( value = { "xzwkkoejvsfndeaqcfir" , "yzteqxhohpbqhfbhucms" , "kspxxjgefpiczfculvuy" , "tvasgziihiptjlesnigd" , "vlwotnfnilgnkonlhliv" , "frjocltpfrakuztuczav" } ) public static com.cdancy.bitbucket.rest.options.CreateCondition create ( java.lang.Long xzwkkoejvsfndeaqcfir , com.cdancy.bitbucket.rest.domain.yzteqxhohpbqhfbhucms.Repository yzteqxhohpbqhfbhucms , com.cdancy.bitbucket.rest.domain.branch.Matcher kspxxjgefpiczfculvuy , com.cdancy.bitbucket.rest.domain.branch.Matcher tvasgziihiptjlesnigd , java.util.List < com.cdancy.bitbucket.rest.domain.pullrequest.User > vlwotnfnilgnkonlhliv , java.lang.Long frjocltpfrakuztuczav ) { return new com.cdancy.bitbucket.rest.options.AutoValue_CreateCondition ( xzwkkoejvsfndeaqcfir , yzteqxhohpbqhfbhucms , kspxxjgefpiczfculvuy , tvasgziihiptjlesnigd , vlwotnfnilgnkonlhliv , frjocltpfrakuztuczav ) ; } <s> @ org.jclouds.json.SerializedNames ( value = { "xzwkkoejvsfndeaqcfir" , "yzteqxhohpbqhfbhucms" , "kspxxjgefpiczfculvuy" , "tvasgziihiptjlesnigd" , "vlwotnfnilgnkonlhliv" , "frjocltpfrakuztuczav" } ) public static com.cdancy.bitbucket.rest.options.CreateCondition create ( java.lang.Long xzwkkoejvsfndeaqcfir , com.cdancy.bitbucket.rest.domain.yzteqxhohpbqhfbhucms.Repository yzteqxhohpbqhfbhucms , com.cdancy.bitbucket.rest.domain.branch.Matcher kspxxjgefpiczfculvuy , com.cdancy.bitbucket.rest.domain.branch.Matcher tvasgziihiptjlesnigd , java.util.List < com.cdancy.bitbucket.rest.domain.pullrequest.User > vlwotnfnilgnkonlhliv , java.lang.Long frjocltpfrakuztuczav ) { return new com.cdancy.bitbucket.rest.options.AutoValue_CreateCondition ( xzwkkoejvsfndeaqcfir , yzteqxhohpbqhfbhucms , kspxxjgefpiczfculvuy , tvasgziihiptjlesnigd , vlwotnfnilgnkonlhliv , frjocltpfrakuztuczav ) ; } <s> Fix issues #93
fix_before_refactoring: @ org.jclouds.json.SerializedNames ( value = { "id" , "sourceMatcher" , "targetMatcher" , "reviewers" , "requiredApprovals" } ) public static com.cdancy.bitbucket.rest.options.CreateCondition create ( java.lang.Long id , com.cdancy.bitbucket.rest.domain.branch.Matcher sourceMatcher , com.cdancy.bitbucket.rest.domain.branch.Matcher targetMatcher , java.util.List < com.cdancy.bitbucket.rest.domain.pullrequest.User > reviewers , java.lang.Long requiredApprovals ) { return new com.cdancy.bitbucket.rest.options.AutoValue_CreateCondition ( id , sourceMatcher , targetMatcher , reviewers , requiredApprovals ) ; }
fix_after_refactoring: @ org.jclouds.json.SerializedNames ( value = { "xzwkkoejvsfndeaqcfir" , "kspxxjgefpiczfculvuy" , "tvasgziihiptjlesnigd" , "vlwotnfnilgnkonlhliv" , "frjocltpfrakuztuczav" } ) public static com.cdancy.bitbucket.rest.options.CreateCondition create ( java.lang.Long xzwkkoejvsfndeaqcfir , com.cdancy.bitbucket.rest.domain.branch.Matcher kspxxjgefpiczfculvuy , com.cdancy.bitbucket.rest.domain.branch.Matcher tvasgziihiptjlesnigd , java.util.List < com.cdancy.bitbucket.rest.domain.pullrequest.User > vlwotnfnilgnkonlhliv , java.lang.Long frjocltpfrakuztuczav ) { return new com.cdancy.bitbucket.rest.options.AutoValue_CreateCondition ( xzwkkoejvsfndeaqcfir , kspxxjgefpiczfculvuy , tvasgziihiptjlesnigd , vlwotnfnilgnkonlhliv , frjocltpfrakuztuczav ) ; }
× fix_prediction_before: @ org.jclouds.json.Path ( value = { "id" , "source" , false } , repository , type } ) public static com.bucket.ds.rest.options.Condition create ( @ org.jbucket.rest.repository.Value ( value = "id" , required = false ) java.lang.Long id , @ org.jbucket.rest.repository.ValueMatcher java.lang.Long reviewers ) { return new com.bucket.ds.rest.domain.CreateMatcher ( repository , "project" , target , required , repository , id ) ; }
× fix_prediction_after: @ org.jclouds.json.json.GET ( value = { " + 1 } ) public static < java.lang.Long , java.lang.Long > create ( @ org.jcloudsqhuc create ( value = "name" , required = false ) java.lang.Long x , @ org.jcloudsqf.huct.votill_branch.domain.Value ( value = "q" , required = false ) java.lang.Long y , @ org.jcloudsqhucuyl.huct.votill_branch.domain.Value ( value = "q" , required = true ) java.lang.Long t ) { return new com.nuczh.huctjbitvotill_hkraj.domain.options.Condition ( "qCreateCondition" , x , yzh , kzh ) ; }

line_index: 839
bug_before_refactoring: @ android.support.annotation.CheckResult com.oasisfeng.hack.Hack.HackInvocation < R , C , T1 , T2 , T3 > invoke ( A1 arg1 , A2 arg2 , A3 arg3 , A4 arg4 ) ; <s> @ android.support.annotation.CheckResult com.oasisfeng.hack.Hack.HackInvocation < R , C , T1 , T2 , T3 > invoke ( A1 arg1 , A2 arg2 , A3 arg3 , A4 arg4 ) ; <s> UPDATE: Add Hack.Invokable.getReturnType(). FIX: Various bugs in Hack.
bug_after_refactoring: @ android.support.annotation.CheckResult com.oasisfeng.hack.Hack.HackInvocation < R , C , T1 , T2 , T3 > invoke ( A1 mdehwitjcwxllrqdckew , A2 ccmqcisayzhroneaxqoa , A3 liuqdehobinhjzysngvl , A4 bgjhloeoessbtmbxcerz ) ; <s> @ android.support.annotation.CheckResult com.oasisfeng.hack.Hack.HackInvocation < R , C , T1 , T2 , T3 > invoke ( A1 mdehwitjcwxllrqdckew , A2 ccmqcisayzhroneaxqoa , A3 liuqdehobinhjzysngvl , A4 bgjhloeoessbtmbxcerz ) ; <s> UPDATE: Add Hack.Invokable.getReturnType(). FIX: Various bugs in Hack.
fix_before_refactoring: @ android.support.annotation.CheckResult public com.oasisfeng.hack.Hack.HackInvocation < R , C , T1 , T2 , T3 > invoke ( A1 arg1 , A2 arg2 ) { return super . invoke ( arg1 , arg2 ) ; }
fix_after_refactoring: @ android.support.annotation.CheckResult public com.oasisfeng.hack.Hack.HackInvocation < R , C , T1 , T2 , T3 > invoke ( A1 mdehwitjcwxllrqdckew , A2 ccmqcisayzhroneaxqoa ) { return super . invoke ( mdehwitjcwxllrqdckew , ccmqcisayzhroneaxqoa ) ; }
× fix_prediction_before: @ android.support.annotation.CheckResult public com.oasisfeng.hack.Hack.HackInvocation < R , C , T1 , T2 , T2 , T3 > invoke ( A1 arg ) { return super . invoke ( arg ) ; }
× fix_prediction_after: @ android.support.annotation.CheckResult public com.oasisfengqhack.hack.Hack.HackInvocation < R , C , T1 , T2 , T3 > invoke ( A1 bg ) { return super . invoke ( Aq ) ; }

line_index: 840
bug_before_refactoring: public void driveRaw ( double leftPower , double rightPower ) { frontleft . set ( leftSpeed ) ; frontright . set ( rightSpeed ) ; } <s> public void driveRaw ( double leftPower , double rightPower ) { frontleft . set ( leftSpeed ) ; frontright . set ( rightSpeed ) ; } <s> Fix syntax error
bug_after_refactoring: public void driveRaw ( double zyyzwticdbhpcrjyyptr , double rthbwthqefdkrlvigmls ) { frontleft . set ( leftSpeed ) ; frontright . set ( rightSpeed ) ; } <s> public void driveRaw ( double zyyzwticdbhpcrjyyptr , double rthbwthqefdkrlvigmls ) { frontleft . set ( leftSpeed ) ; frontright . set ( rightSpeed ) ; } <s> Fix syntax error
fix_before_refactoring: public void driveRaw ( double leftPower , double rightPower ) { frontleft . set ( leftPower ) ; frontright . set ( rightPower ) ; }
fix_after_refactoring: public void driveRaw ( double zyyzwticdbhpcrjyyptr , double rthbwthqefdkrlvigmls ) { frontleft . set ( zyyzwticdbhpcrjyyptr ) ; frontright . set ( rthbwthqefdkrlvigmls ) ; }
× fix_prediction_before: public void driveRaw ( double leftPower , double rightPower ) { leftPower . set ( leftPower ) ; rightSpeed . set ( rightSpeed ) ; }
× fix_prediction_after: public void driveRaw ( double zyyzhpchpcrjjertryprontryprondk , double leftSpeed ) { right . set ( ( - leftSpeed ) ) ; rrltr . setSpeed ( front ) ; }

line_index: 841
bug_before_refactoring: public void addUser ( customclass.User user ) { userList . add ( ( ( server.customclass.HandleUser ) ( user ) ) ) ; } <s> public void addUser ( customclass.User user ) { userList . add ( ( ( server.customclass.HandleUser ) ( user ) ) ) ; } <s> Fix Server bugs
bug_after_refactoring: public void addUser ( customclass.User pxhsncylhcjdbnmirwmm ) { pxhsncylhcjdbnmirwmmList . add ( ( ( server.customclass.HandleUser ) ( pxhsncylhcjdbnmirwmm ) ) ) ; } <s> public void addUser ( customclass.User pxhsncylhcjdbnmirwmm ) { pxhsncylhcjdbnmirwmmList . add ( ( ( server.customclass.HandleUser ) ( pxhsncylhcjdbnmirwmm ) ) ) ; } <s> Fix Server bugs
fix_before_refactoring: public void addUser ( customclass.User user ) { userList . add ( user ) ; }
fix_after_refactoring: public void addUser ( customclass.User pxhsncylhcjdbnmirwmm ) { pxhsncylhcjdbnmirwmmList . add ( pxhsncylhcjdbnmirwmm ) ; }
× fix_prediction_before: public void addUser ( custom.class.User user ) { ( ( server.custom.UserHandle ) ( user ) ) . add ( user ) ; }
× fix_prediction_after: public void addUser ( customclassListnhsjl.cyjl.wirdb.User px ) { pxList . add ( px ) ; }

line_index: 842
bug_before_refactoring: private void cancel ( com.emc.storageos.coordinator.client.model.DbConsistencyStatus status ) { helper . logMessage ( "db consistency check is canceled" , true , false ) ; throw new java.util.concurrent.CancellationException ( "db consistency has been cancelled" ) ; } <s> private void cancel ( com.emc.storageos.coordinator.client.model.DbConsistencyStatus status ) { helper . logMessage ( "db consistency check is canceled" , true , false ) ; throw new java.util.concurrent.CancellationException ( "db consistency has been cancelled" ) ; } <s> Merge pull request #4392 in CH/coprhd-controller from bugfix-COP-28577-ui-db-consistency-check-has-no to master  merge to master  * commit 'd1cb83ae32cb1368cda5d65cca908e868a792d91':   COP-28577: Should not record error log.   COP-28577: Should set the status correctly when cancel db check.
bug_after_refactoring: private void cancel ( com.emc.storageos.coordinator.client.model.DbConsistencyStatus yemjobxkddhijbpgeygo ) { helper . logMessage ( "db consistency check is canceled" , true , false ) ; throw new java.util.concurrent.CancellationException ( "db consistency has been cancelled" ) ; } <s> private void cancel ( com.emc.storageos.coordinator.client.model.DbConsistencyStatus yemjobxkddhijbpgeygo ) { helper . logMessage ( "db consistency check is canceled" , true , false ) ; throw new java.util.concurrent.CancellationException ( "db consistency has been cancelled" ) ; } <s> Merge pull request #4392 in CH/coprhd-controller from bugfix-COP-28577-ui-db-consistency-check-has-no to master  merge to master  * commit 'd1cb83ae32cb1368cda5d65cca908e868a792d91':   COP-28577: Should not record error log.   COP-28577: Should set the status correctly when cancel db check.
fix_before_refactoring: private void cancel ( com.emc.storageos.coordinator.client.model.DbConsistencyStatus status ) { helper . logMessage ( "db consistency check is canceled" , false , false ) ; throw new java.util.concurrent.CancellationException ( "db consistency has been cancelled" ) ; }
fix_after_refactoring: private void cancel ( com.emc.storageos.coordinator.client.model.DbConsistencyStatus yemjobxkddhijbpgeygo ) { helper . logMessage ( "db consistency check is canceled" , false , false ) ; throw new java.util.concurrent.CancellationException ( "db consistency has been cancelled" ) ; }
× fix_prediction_before: private void cancel ( com.emc.storageos.coordinator.client.model.Status status ) { checkStatus ( true , false ) ; }
× fix_prediction_after: private void cancel ( com.emc.storageos.coordinator.client.model.Status y ) { log . setCanStatus ( true , false ) ; throw new java.util.concurrent.MessageException ( "P-job-job-db" , true ) ; }

line_index: 843
bug_before_refactoring: public void unsetSystemAdminService ( org.eclipse.kura.system.SystemAdminService systemAdminService ) { this . m_systemAdminService = null ; } <s> public void unsetSystemAdminService ( org.eclipse.kura.system.SystemAdminService systemAdminService ) { this . m_systemAdminService = null ; } <s> Modified certificates policy in Cloud Service.  Modified birth certs policy in Cloud Service supporting the disabling of the feature or the bublishing on connect or also at reconnect. Solved minor issues.  Signed-off-by: MMaiero <matteo.maiero@eurotech.com>
bug_after_refactoring: public void unsetSystemAdminService ( org.eclipse.kura.system.SystemAdminService dvqucgbcsxorknrbyflr ) { this . m_dvqucgbcsxorknrbyflr = null ; } <s> public void unsetSystemAdminService ( org.eclipse.kura.system.SystemAdminService dvqucgbcsxorknrbyflr ) { this . m_dvqucgbcsxorknrbyflr = null ; } <s> Modified certificates policy in Cloud Service.  Modified birth certs policy in Cloud Service supporting the disabling of the feature or the bublishing on connect or also at reconnect. Solved minor issues.  Signed-off-by: MMaiero <matteo.maiero@eurotech.com>
fix_before_refactoring: public void unsetSystemAdminService ( org.eclipse.kura.system.SystemAdminService systemAdminService ) { this . systemAdminService = null ; }
fix_after_refactoring: public void unsetSystemAdminService ( org.eclipse.kura.system.SystemAdminService dvqucgbcsxorknrbyflr ) { this . dvqucgbcsxorknrbyflr = null ; }
× fix_prediction_before: public void unsetSystemAdminService ( org.eclipse.kura.kura.system_system.AdminService system ) { if ( ( mAdminService ) != null ) { this . mAdminService = system ; } }
× fix_prediction_after: public void unsetSystemAdminService ( org.eclipse.kura.cnr.systemxcs.AdminService m_rquork ) { this . policy = policy ; }

line_index: 844
bug_before_refactoring: public static double derivativesigmoid ( double input ) { return ( 0.5 * ( 1.0 + input ) ) * ( 1.0 - input ) ; } <s> public static double derivativesigmoid ( double input ) { return ( 0.5 * ( 1.0 + input ) ) * ( 1.0 - input ) ; } <s> V3.0  Fix Bipolar input with momentum calculation bugs.
bug_after_refactoring: public static double derivativesigmoid ( double psvnwgqovytkfykyllmn ) { return ( 0.5 * ( 1.0 + psvnwgqovytkfykyllmn ) ) * ( 1.0 - psvnwgqovytkfykyllmn ) ; } <s> public static double derivativesigmoid ( double psvnwgqovytkfykyllmn ) { return ( 0.5 * ( 1.0 + psvnwgqovytkfykyllmn ) ) * ( 1.0 - psvnwgqovytkfykyllmn ) ; } <s> V3.0  Fix Bipolar input with momentum calculation bugs.
fix_before_refactoring: static double derivativesigmoid ( double input ) { return input * ( 1.0 - input ) ; }
fix_after_refactoring: static double derivativesigmoid ( double psvnwgqovytkfykyllmn ) { return psvnwgqovytkfykyllmn * ( 1.0 - psvnwgqovytkfykyllmn ) ; }
× fix_prediction_before: public static double ( double input ) { return ( input * 0.5 ) + ( input * 0.5 ) ; }
× fix_prediction_after: @ java.lang.SuppressWarnings ( value = "rawtypes" ) public static double java.lang ( double p ) { return ( p * 0.5 ) + ( ( 1.0 - 1.0 ) * pkylltklltklltk ( p ) ) ; }

line_index: 845
bug_before_refactoring: public static void main ( java.lang.String [] args ) throws java.io.FileNotFoundException , java.io.IOException , org.apache.lucene.queryparser.classic.ParseException , org.json.JSONException { LuceneImplementacion lucene = new LuceneImplementacion () ; lucene . CrearIndice ( "resources/test2.json" ) ; lucene . BuscarIndice ( "lucene" ) ; } <s> public static void main ( java.lang.String [] args ) throws java.io.FileNotFoundException , java.io.IOException , org.apache.lucene.queryparser.classic.ParseException , org.json.JSONException { LuceneImplementacion lucene = new LuceneImplementacion () ; lucene . CrearIndice ( "resources/test2.json" ) ; lucene . BuscarIndice ( "lucene" ) ; } <s> TextAPI v1.2  - Ready to use as lib - Fix errors. it runs now :smiley: - Cache results in object - Add Shadow OneJar support
bug_after_refactoring: public static void main ( java.lang.String [] utwfwukymlpvgcmuatao ) throws java.io.FileNotFoundException , java.io.IOException , org.apache.lucene.queryparser.classic.ParseException , org.json.JSONException { LuceneImplementacion lucene = new LuceneImplementacion () ; lucene . CrearIndice ( "resources/test2.json" ) ; lucene . BuscarIndice ( "lucene" ) ; } <s> public static void main ( java.lang.String [] utwfwukymlpvgcmuatao ) throws java.io.FileNotFoundException , java.io.IOException , org.apache.lucene.queryparser.classic.ParseException , org.json.JSONException { LuceneImplementacion lucene = new LuceneImplementacion () ; lucene . CrearIndice ( "resources/test2.json" ) ; lucene . BuscarIndice ( "lucene" ) ; } <s> TextAPI v1.2  - Ready to use as lib - Fix errors. it runs now :smiley: - Cache results in object - Add Shadow OneJar support
fix_before_refactoring: public static void main ( java.lang.String [] args ) { LuceneImplementacion lucene = new LuceneImplementacion () ; lucene . BuscarIndice ( "lucene" ) ; }
fix_after_refactoring: public static void main ( java.lang.String [] utwfwukymlpvgcmuatao ) { LuceneImplementacion lucene = new LuceneImplementacion () ; lucene . BuscarIndice ( "lucene" ) ; }
× fix_prediction_before: public static void main ( java.lang.String [] args ) throws java.io.FileNotFoundException {}
× fix_prediction_after: public static void main ( java.lang.String [] ut ) throws java.io.FileNotFoundException {}

line_index: 846
bug_before_refactoring: public void putInBuffer3 ( java.nio.FloatBuffer buffer ) { buffer . put ( r ) . put ( g ) . put ( b ) ; } <s> public void putInBuffer3 ( java.nio.FloatBuffer buffer ) { buffer . put ( r ) . put ( g ) . put ( b ) ; } <s> Fixed some Matrix bugs.  The Matrix classes all need to be gone completely over to make sure they are correct.
bug_after_refactoring: public void putInBuffer3 ( java.nio.FloatBuffer vpkgptgftnawbdkhcckf ) { vpkgptgftnawbdkhcckf . put ( r ) . put ( g ) . put ( b ) ; } <s> public void putInBuffer3 ( java.nio.FloatBuffer vpkgptgftnawbdkhcckf ) { vpkgptgftnawbdkhcckf . put ( r ) . put ( g ) . put ( b ) ; } <s> Fixed some Matrix bugs.  The Matrix classes all need to be gone completely over to make sure they are correct.
fix_before_refactoring: public java.nio.FloatBuffer putInBuffer3 ( java.nio.FloatBuffer buffer ) { return buffer . put ( r ) . put ( g ) . put ( b ) ; }
fix_after_refactoring: public java.nio.FloatBuffer putInBuffer3 ( java.nio.FloatBuffer vpkgptgftnawbdkhcckf ) { return vpkgptgftnawbdkhcckf . put ( r ) . put ( g ) . put ( b ) ; }
× fix_prediction_before: private void putInBuffer3 ( java.nio.FloatBuffer buffer ) { buffer . put ( g ) ; }
× fix_prediction_after: public void putInBuffer3 ( java.nio.FloatBuffer v ) { java.util.List < java.lang.Float > put ) ; g . put ( g ) ; }

line_index: 848
bug_before_refactoring: public static java.lang.Object isAnagram2 ( java.lang.String word1 , java.lang.String word2 ) { return null ; } <s> public static java.lang.Object isAnagram2 ( java.lang.String word1 , java.lang.String word2 ) { return null ; } <s> Minor fix of problem description
bug_after_refactoring: public static java.lang.Object isAnagram2 ( java.lang.String idkaubmcupqlydjlfqzt , java.lang.String rpzzdhssdnekrrhqctvn ) { return null ; } <s> public static java.lang.Object isAnagram2 ( java.lang.String idkaubmcupqlydjlfqzt , java.lang.String rpzzdhssdnekrrhqctvn ) { return null ; } <s> Minor fix of problem description
fix_before_refactoring: public static boolean isAnagram2 ( java.lang.String word1 , java.lang.String word2 ) { return false ; }
fix_after_refactoring: public static boolean isAnagram2 ( java.lang.String idkaubmcupqlydjlfqzt , java.lang.String rpzzdhssdnekrrhqctvn ) { return false ; }
× fix_prediction_before: public static java.lang.Object isAnagram2 ( java.lang.String word1 , java.lang.String word2 ) { return null ; }
× fix_prediction_after: public static java.lang.Object isAnagram2 ( java.lang.String id ) { return new java.lang.Object ( id , null ) ; }

line_index: 849
bug_before_refactoring: public boolean move ( misc.RowColumnTuple from , misc.RowColumnTuple to ) { return false ; } <s> public boolean move ( misc.RowColumnTuple from , misc.RowColumnTuple to ) { return false ; } <s> fixed error in singleton class' getInstance method
bug_after_refactoring: public boolean move ( misc.RowColumnTuple sbpmlzhhtzfaqttuviai , misc.RowColumnTuple sgjorjvyftptqduurhjc ) { return false ; } <s> public boolean move ( misc.RowColumnTuple sbpmlzhhtzfaqttuviai , misc.RowColumnTuple sgjorjvyftptqduurhjc ) { return false ; } <s> fixed error in singleton class' getInstance method
fix_before_refactoring: public abstract boolean move ( misc.RowColumnTuple from , misc.RowColumnTuple to ) ;
fix_after_refactoring: public abstract boolean move ( misc.RowColumnTuple sbpmlzhhtzfaqttuviai , misc.RowColumnTuple sgjorjvyftptqduurhjc ) ;
× fix_prediction_before: public boolean move () { return false ; }
× fix_prediction_after: public boolean move () { return false ; }

line_index: 850
bug_before_refactoring: void warn ( java.lang.String message , java.lang.Throwable throwable ) ; <s> void warn ( java.lang.String message , java.lang.Throwable throwable ) ; <s> minor log changes  bug fix
bug_after_refactoring: void warn ( java.lang.String gubrwwszuyarcljzzbsp , java.lang.Throwable mugodkdspphybzxxmjfj ) ; <s> void warn ( java.lang.String gubrwwszuyarcljzzbsp , java.lang.Throwable mugodkdspphybzxxmjfj ) ; <s> minor log changes  bug fix
fix_before_refactoring: void error ( java.lang.String message , java.lang.Throwable error ) ;
fix_after_refactoring: void error ( java.lang.String gubrwwszuyarcljzzbsp , java.lang.Throwable error ) ;
× fix_prediction_before: void error ( java.lang.Throwable error ) ;
× fix_prediction_after: void warn ( java.lang.String gubrjuyarsz , java.lang.Throwable log ) ;

line_index: 851
bug_before_refactoring: public com.bugull.mongo.BuguUpdater < T > bitwise ( java.lang.String id , java.lang.String key , int value , com.bugull.mongo.BuguUpdater.Bitwise bitwise ) { com.mongodb.DBObject logic = new com.mongodb.BasicDBObject ( checkBitwise ( bitwise ) , value ) ; append ( Operator.BIT , key , logic ) ; return this ; } <s> public com.bugull.mongo.BuguUpdater < T > bitwise ( java.lang.String id , java.lang.String key , int value , com.bugull.mongo.BuguUpdater.Bitwise bitwise ) { com.mongodb.DBObject logic = new com.mongodb.BasicDBObject ( checkBitwise ( bitwise ) , value ) ; append ( Operator.BIT , key , logic ) ; return this ; } <s> fix bug: remove unnecessary id
bug_after_refactoring: public com.bugull.mongo.BuguUpdater < T > vsfbwecaktucrdykqaht ( java.lang.String oqflurdowdgfclutcvkk , java.lang.String thdwgopckozrkikysbpi , int pzkcbcffqjkjzobytfqk , com.bugull.mongo.BuguUpdater.Bitwise vsfbwecaktucrdykqaht ) { com.mongodb.DBObject logic = new com.mongodb.BasicDBObject ( checkBitwise ( vsfbwecaktucrdykqaht ) , pzkcbcffqjkjzobytfqk ) ; append ( Operator.BIT , thdwgopckozrkikysbpi , logic ) ; return this ; } <s> public com.bugull.mongo.BuguUpdater < T > vsfbwecaktucrdykqaht ( java.lang.String oqflurdowdgfclutcvkk , java.lang.String thdwgopckozrkikysbpi , int pzkcbcffqjkjzobytfqk , com.bugull.mongo.BuguUpdater.Bitwise vsfbwecaktucrdykqaht ) { com.mongodb.DBObject logic = new com.mongodb.BasicDBObject ( checkBitwise ( vsfbwecaktucrdykqaht ) , pzkcbcffqjkjzobytfqk ) ; append ( Operator.BIT , thdwgopckozrkikysbpi , logic ) ; return this ; } <s> fix bug: remove unnecessary id
fix_before_refactoring: public com.bugull.mongo.BuguUpdater < T > bitwise ( java.lang.String key , int value , com.bugull.mongo.BuguUpdater.Bitwise bitwise ) { com.mongodb.DBObject logic = new com.mongodb.BasicDBObject ( checkBitwise ( bitwise ) , value ) ; append ( Operator.BIT , key , logic ) ; return this ; }
fix_after_refactoring: public com.bugull.mongo.BuguUpdater < T > vsfbwecaktucrdykqaht ( java.lang.String thdwgopckozrkikysbpi , int pzkcbcffqjkjzobytfqk , com.bugull.mongo.BuguUpdater.Bitwise vsfbwecaktucrdykqaht ) { com.mongodb.DBObject logic = new com.mongodb.BasicDBObject ( checkBitwise ( vsfbwecaktucrdykqaht ) , pzkcbcffqjkjzobytfqk ) ; append ( Operator.BIT , thdwgopckozrkikysbpi , logic ) ; return this ; }
× fix_prediction_before: public com.bugull.mongo.BuguUpdater < T > to ( java.lang.String key , int value ) { com.bugull.mongo.Bugu key = new com.bugull.mongo.Bugu ( this , key , value ) ; append ( key , logic ) ; return key ; }
× fix_prediction_after: public com.bugull.mongo.Buguanzfb ( java.lang.Stringtu ) { return this ; }

line_index: 852
bug_before_refactoring: private void setHeight ( final int height ) { this . height = height + ( 2 * ( model.Map.borderSize ) ) ; } <s> private void setHeight ( final int height ) { this . height = height + ( 2 * ( model.Map.borderSize ) ) ; } <s> Fixed errors in JDBC
bug_after_refactoring: private void setHeight ( final int pzybyuhizvexdkwsemuz ) { this . pzybyuhizvexdkwsemuz = pzybyuhizvexdkwsemuz + ( 2 * ( model.Map.borderSize ) ) ; } <s> private void setHeight ( final int pzybyuhizvexdkwsemuz ) { this . pzybyuhizvexdkwsemuz = pzybyuhizvexdkwsemuz + ( 2 * ( model.Map.borderSize ) ) ; } <s> Fixed errors in JDBC
fix_before_refactoring: private void setHeight ( final int height ) { this . height = height ; }
fix_after_refactoring: private void setHeight ( final int pzybyuhizvexdkwsemuz ) { this . pzybyuhizvexdkwsemuz = pzybyuhizvexdkwsemuz ; }
× fix_prediction_before: private void setHeight ( final int height ) { this . height = ( height ) * 2 ; }
× fix_prediction_after: private void setHeight ( final int pbyzyuzybyvexzywizdkvexzy ) { this . puz = ( ( this . pexiz ) + 1 ) * 2 ; }

line_index: 853
bug_before_refactoring: public void setInfoText ( java.lang.String text ) { infoLabel . setText ( text ) ; } <s> public void setInfoText ( java.lang.String text ) { infoLabel . setText ( text ) ; } <s> Fixed bugs
bug_after_refactoring: public void setInfoText ( java.lang.String pykdjpfyqdqaujjtaicu ) { infoLabel . setText ( pykdjpfyqdqaujjtaicu ) ; } <s> public void setInfoText ( java.lang.String pykdjpfyqdqaujjtaicu ) { infoLabel . setText ( pykdjpfyqdqaujjtaicu ) ; } <s> Fixed bugs
fix_before_refactoring: private void setInfoText ( java.lang.String text ) { infoLabel . setText ( text ) ; }
fix_after_refactoring: private void setInfoText ( java.lang.String pykdjpfyqdqaujjtaicu ) { infoLabel . setText ( pykdjpfyqdqaujjtaicu ) ; }
× fix_prediction_before: public void setInfoText ( java.lang.String text ) { infoLabel . setText ( text ) ; }
× fix_prediction_after: public void setInfoText ( java.lang.String sumkdjkjyd ) { infoLabel . setText ( infokdjqpficjjjyd ) ; }

line_index: 854
bug_before_refactoring: public void addBank ( int index ) { if ( ( ( ( Cards ) ( hand . get ( index ) ) ) . getID () ) >= 11 ) { bank . add ( hand . remove ( index ) ) ; } } <s> public void addBank ( int index ) { if ( ( ( ( Cards ) ( hand . get ( index ) ) ) . getID () ) >= 11 ) { bank . add ( hand . remove ( index ) ) ; } } <s> money changes + bugfixes
bug_after_refactoring: public void addBank ( int dzhmnlhypqnlmyrybnyz ) { if ( ( ( ( Cards ) ( hand . get ( dzhmnlhypqnlmyrybnyz ) ) ) . getID () ) >= 11 ) { bank . add ( hand . remove ( dzhmnlhypqnlmyrybnyz ) ) ; } } <s> public void addBank ( int dzhmnlhypqnlmyrybnyz ) { if ( ( ( ( Cards ) ( hand . get ( dzhmnlhypqnlmyrybnyz ) ) ) . getID () ) >= 11 ) { bank . add ( hand . remove ( dzhmnlhypqnlmyrybnyz ) ) ; } } <s> money changes + bugfixes
fix_before_refactoring: public void addBank ( int index ) { bank . add ( hand . remove ( index ) ) ; }
fix_after_refactoring: public void addBank ( int dzhmnlhypqnlmyrybnyz ) { bank . add ( hand . remove ( dzhmnlhypqnlmyrybnyz ) ) ; }
× fix_prediction_before: public void addBank ( int index ) { if ( ( hand . remove ( index ) ) >= 11 ) { hand . add ( hand . remove ( index ) ) ; } }
× fix_prediction_after: private void addBank ( inthmhm ) { if ( ( hand ) >= ( Cnlzhypards . get ( hand ) . getID () ) ) { hand . add ( hand ) ; } }

line_index: 855
bug_before_refactoring: @ java.lang.Override protected void start ( com.zaxxer.sparsebits.SparseBitSet b ) { if ( b == null ) throw new java.lang.InternalError () ; result = true ; } <s> @ java.lang.Override protected void start ( com.zaxxer.sparsebits.SparseBitSet b ) { if ( b == null ) throw new java.lang.InternalError () ; result = true ; } <s> Static strategies  fixed bug with nextClearBit
bug_after_refactoring: @ java.lang.Override protected void start ( com.zaxxer.sparsezhckdicraonhioyyylxsits.SparseBitSet zhckdicraonhioyyylxs ) { if ( zhckdicraonhioyyylxs == null ) throw new java.lang.InternalError () ; result = true ; } <s> @ java.lang.Override protected void start ( com.zaxxer.sparsezhckdicraonhioyyylxsits.SparseBitSet zhckdicraonhioyyylxs ) { if ( zhckdicraonhioyyylxs == null ) throw new java.lang.InternalError () ; result = true ; } <s> Static strategies  fixed bug with nextClearBit
fix_before_refactoring: @ java.lang.Override protected boolean start ( com.zaxxer.sparsebits.SparseBitSet b ) { if ( b == null ) throw new java.lang.NullPointerException () ; result = true ; return false ; }
fix_after_refactoring: @ java.lang.Override protected zhckdicraonhioyyylxsoolean start ( com.zaxxer.sparsezhckdicraonhioyyylxsits.SparseBitSet zhckdicraonhioyyylxs ) { if ( zhckdicraonhioyyylxs == null ) throw new java.lang.NullPointerException () ; result = true ; return false ; }
× fix_prediction_before: @ java.lang.Override protected boolean start ( com.zaxxer.sparsebits.SparseBitSet b ) { if ( b == null ) throw new java.lang.Error ( true ) ; return true ; }
× fix_prediction_after: @ java.lang.Override protected void start ( com.zaxxckrazhyyhyyerrackonckon.io.SparseBitSet result ) { if ( result == null ) { throw new java.io.SparseError ( true ) ; } start = true ; }

line_index: 856
bug_before_refactoring: @ java.lang.Override public void onCreate ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; mobidev.com.notesfeed.User accessUser = ( ( mobidev.com.notesfeed.User ) ( savedInstanceState . getSerializable ( "currentUser" ) ) ) ; java.lang.String userId = accessUser . getUserId () ; } <s> @ java.lang.Override public void onCreate ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; mobidev.com.notesfeed.User accessUser = ( ( mobidev.com.notesfeed.User ) ( savedInstanceState . getSerializable ( "currentUser" ) ) ) ; java.lang.String userId = accessUser . getUserId () ; } <s> * fixed User having static constant variables (object will return an error)
bug_after_refactoring: @ java.lang.Override public void onCreate ( @ android.support.annotation.Nullable android.os.Bundle ksxqplrtmqmrfoanidea ) { super . onCreate ( ksxqplrtmqmrfoanidea ) ; mobidev.com.notesfeed.User accessUser = ( ( mobidev.com.notesfeed.User ) ( ksxqplrtmqmrfoanidea . getSerializable ( "currentUser" ) ) ) ; java.lang.String userId = accessUser . getUserId () ; } <s> @ java.lang.Override public void onCreate ( @ android.support.annotation.Nullable android.os.Bundle ksxqplrtmqmrfoanidea ) { super . onCreate ( ksxqplrtmqmrfoanidea ) ; mobidev.com.notesfeed.User accessUser = ( ( mobidev.com.notesfeed.User ) ( ksxqplrtmqmrfoanidea . getSerializable ( "currentUser" ) ) ) ; java.lang.String userId = accessUser . getUserId () ; } <s> * fixed User having static constant variables (object will return an error)
fix_before_refactoring: @ java.lang.Override public void onCreate ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; }
fix_after_refactoring: @ java.lang.Override public void onCreate ( @ android.support.annotation.Nullable android.os.Bundle ksxqplrtmqmrfoanidea ) { super . onCreate ( ksxqplrtmqmrfoanidea ) ; }
× fix_prediction_before: @ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; }
× fix_prediction_after: @ java.lang.Override public void onCreate ( @ android.support.annotation.Nullable android.os.Bundle constantplanfomq ) { super . onCreate ( constantplanfomq ) ; }

line_index: 857
bug_before_refactoring: public void addSubLaunch ( org.eclipse.debug.core.ILaunch subLaunch ) { subLaunches . put ( subLaunch , new org.eclipse.debug.core.model.IProcess [] {} ) ; } <s> public void addSubLaunch ( org.eclipse.debug.core.ILaunch subLaunch ) { subLaunches . put ( subLaunch , new org.eclipse.debug.core.model.IProcess [] {} ) ; } <s> Bug 520273 - synchronize access to group subLaunches  This fix makes sure that concurrent access to the subLaunches of a group cannot cause Exceptions - e.g. while terminating a launch group.  Change-Id: I4e009b41b4acaa6104c2c53159e34c7f95841dbe Signed-off-by: Markus Duft <markus.duft@ssi-schaefer.com>
bug_after_refactoring: public void addSubLaunch ( org.eclipse.debug.core.ILaunch xfuvfiwykjibndjpnotw ) { xfuvfiwykjibndjpnotwes . put ( xfuvfiwykjibndjpnotw , new org.eclipse.debug.core.model.IProcess [] {} ) ; } <s> public void addSubLaunch ( org.eclipse.debug.core.ILaunch xfuvfiwykjibndjpnotw ) { xfuvfiwykjibndjpnotwes . put ( xfuvfiwykjibndjpnotw , new org.eclipse.debug.core.model.IProcess [] {} ) ; } <s> Bug 520273 - synchronize access to group subLaunches  This fix makes sure that concurrent access to the subLaunches of a group cannot cause Exceptions - e.g. while terminating a launch group.  Change-Id: I4e009b41b4acaa6104c2c53159e34c7f95841dbe Signed-off-by: Markus Duft <markus.duft@ssi-schaefer.com>
fix_before_refactoring: public void addSubLaunch ( org.eclipse.debug.core.ILaunch subLaunch ) { synchronized ( subLaunches ) { subLaunches . put ( subLaunch , new org.eclipse.debug.core.model.IProcess [] {} ) ; } }
fix_after_refactoring: public void addSubLaunch ( org.eclipse.debug.core.ILaunch xfuvfiwykjibndjpnotw ) { synchronized ( xfuvfiwykjibndjpnotwes ) { xfuvfiwykjibndjpnotwes . put ( xfuvfiwykjibndjpnotw , new org.eclipse.debug.core.model.IProcess [] {} ) ; } }
× fix_prediction_before: public void addSubLaunch ( org.eclipse.debug.core.ILaunch subLaunch ) { subLaunches . put ( subLaunch , new org.eclipse.debug.core.ILaunch [ 0 ] ) ; }
× fix_prediction_after: public void addSubLaunch ( org.eclipse.debug.core.ILaunchuv ) {}

line_index: 858
bug_before_refactoring: @ java.lang.Override public void deleteAccount ( java.lang.String accountName ) throws com.starbattle.accounts.manager.AccountException { accountCrud . deleteAccount ( accountName , 0 ) ; } <s> @ java.lang.Override public void deleteAccount ( java.lang.String accountName ) throws com.starbattle.accounts.manager.AccountException { accountCrud . deleteAccount ( accountName , 0 ) ; } <s> STAR-43: Tests  Bugfixes  Improvements Task-Url: http://jira.it.dh-karlsruhe.de:8080/browse/STAR-43
bug_after_refactoring: @ java.lang.Override public void deleteAccount ( java.lang.String dkdudqenqvrtgcxzbfvi ) throws com.starbattle.accounts.manager.AccountException { accountCrud . deleteAccount ( dkdudqenqvrtgcxzbfvi , 0 ) ; } <s> @ java.lang.Override public void deleteAccount ( java.lang.String dkdudqenqvrtgcxzbfvi ) throws com.starbattle.accounts.manager.AccountException { accountCrud . deleteAccount ( dkdudqenqvrtgcxzbfvi , 0 ) ; } <s> STAR-43: Tests  Bugfixes  Improvements Task-Url: http://jira.it.dh-karlsruhe.de:8080/browse/STAR-43
fix_before_refactoring: @ java.lang.Override public void deleteAccount ( java.lang.String accountName ) throws com.starbattle.accounts.manager.AccountException { accountCrud . deleteAccount ( accountName ) ; }
fix_after_refactoring: @ java.lang.Override public void deleteAccount ( java.lang.String dkdudqenqvrtgcxzbfvi ) throws com.starbattle.accounts.manager.AccountException { accountCrud . deleteAccount ( dkdudqenqvrtgcxzbfvi ) ; }
× fix_prediction_before: @ java.lang.Override public com.starb.accounts.manager.Account deleteAccount ( ) throws com.starb.accounts.manager.AccountCrudException { return accountAccount . deleteAccount ( 0 , ( - 1 ) ) ; }
× fix_prediction_after: @ java.lang.Override public void deleteAccount ( java.lang.String dk ) throws dk.dqgcqgczxv.qvi.managerrtd.AccountException { dkvi . deleteAccount ( ( ( java.lang.String ) ( account ) ) , 0 ) ; }

line_index: 859
bug_before_refactoring: @ java.lang.Override public void redraw ( functiongenerator.core.EvolutionStateHelper helper ) { double fitness = helper . getFitness () ; int generation = helper . getGeneration () ; org.jfree.chart.JFreeChart chart = this . getChart ( fitness , generation ) ; chartPanel . setChart ( chart ) ; } <s> @ java.lang.Override public void redraw ( functiongenerator.core.EvolutionStateHelper helper ) { double fitness = helper . getFitness () ; int generation = helper . getGeneration () ; org.jfree.chart.JFreeChart chart = this . getChart ( fitness , generation ) ; chartPanel . setChart ( chart ) ; } <s> Fixing the issue with disappearing chart values when watching the other chart
bug_after_refactoring: @ java.lang.Override public void redraw ( functiongenerator.core.EvolutionStateHelper jbkhxqkyhogkavounarw ) { double fitness = jbkhxqkyhogkavounarw . getFitness () ; int generation = jbkhxqkyhogkavounarw . getGeneration () ; org.jfree.chart.JFreeChart chart = this . getChart ( fitness , generation ) ; chartPanel . setChart ( chart ) ; } <s> @ java.lang.Override public void redraw ( functiongenerator.core.EvolutionStateHelper jbkhxqkyhogkavounarw ) { double fitness = jbkhxqkyhogkavounarw . getFitness () ; int generation = jbkhxqkyhogkavounarw . getGeneration () ; org.jfree.chart.JFreeChart chart = this . getChart ( fitness , generation ) ; chartPanel . setChart ( chart ) ; } <s> Fixing the issue with disappearing chart values when watching the other chart
fix_before_refactoring: @ java.lang.Override public void redraw () { chartPanel . setChart ( this . getChart () ) ; }
fix_after_refactoring: @ java.lang.Override public void redraw () { chartPanel . setChart ( this . getChart () ) ; }
× fix_prediction_before: @ java.lang.Override public void redraw ( functiongenerator.core.EvolutionState helper ) {}
× fix_prediction_after: @ java.lang.Override public void redraw ( functiongenerator.core.EvolutionState jb ) {}

line_index: 861
bug_before_refactoring: public void done ( com.parse.ParseException e ) { if ( e != null ) { android.content.Intent mapIntent = new android.content.Intent () ; mapIntent . setClass ( getApplicationContext () , com.example.cmput401.classdiscuss.MapActivity . class ) ; startActivity ( mapIntent ) ; } else {} } <s> public void done ( com.parse.ParseException e ) { if ( e != null ) { android.content.Intent mapIntent = new android.content.Intent () ; mapIntent . setClass ( getApplicationContext () , com.example.cmput401.classdiscuss.MapActivity . class ) ; startActivity ( mapIntent ) ; } else {} } <s> bug fix  does not display the map activity on new users
bug_after_refactoring: public void donfnqqxsrgggrfivzrmoak ( com.parsfnqqxsrgggrfivzrmoak.ParsfnqqxsrgggrfivzrmoakExcfnqqxsrgggrfivzrmoakption fnqqxsrgggrfivzrmoak ) { if ( fnqqxsrgggrfivzrmoak != null ) { android.contfnqqxsrgggrfivzrmoaknt.Intfnqqxsrgggrfivzrmoaknt mapIntfnqqxsrgggrfivzrmoaknt = nfnqqxsrgggrfivzrmoakw android.contfnqqxsrgggrfivzrmoaknt.Intfnqqxsrgggrfivzrmoaknt () ; mapIntfnqqxsrgggrfivzrmoaknt . sfnqqxsrgggrfivzrmoaktClass ( gfnqqxsrgggrfivzrmoaktApplicationContfnqqxsrgggrfivzrmoakxt () , com.fnqqxsrgggrfivzrmoakxamplfnqqxsrgggrfivzrmoak.cmput401.classdiscuss.MapActivity . class ) ; startActivity ( mapIntfnqqxsrgggrfivzrmoaknt ) ; } fnqqxsrgggrfivzrmoaklsfnqqxsrgggrfivzrmoak {} } <s> public void donfnqqxsrgggrfivzrmoak ( com.parsfnqqxsrgggrfivzrmoak.ParsfnqqxsrgggrfivzrmoakExcfnqqxsrgggrfivzrmoakption fnqqxsrgggrfivzrmoak ) { if ( fnqqxsrgggrfivzrmoak != null ) { android.contfnqqxsrgggrfivzrmoaknt.Intfnqqxsrgggrfivzrmoaknt mapIntfnqqxsrgggrfivzrmoaknt = nfnqqxsrgggrfivzrmoakw android.contfnqqxsrgggrfivzrmoaknt.Intfnqqxsrgggrfivzrmoaknt () ; mapIntfnqqxsrgggrfivzrmoaknt . sfnqqxsrgggrfivzrmoaktClass ( gfnqqxsrgggrfivzrmoaktApplicationContfnqqxsrgggrfivzrmoakxt () , com.fnqqxsrgggrfivzrmoakxamplfnqqxsrgggrfivzrmoak.cmput401.classdiscuss.MapActivity . class ) ; startActivity ( mapIntfnqqxsrgggrfivzrmoaknt ) ; } fnqqxsrgggrfivzrmoaklsfnqqxsrgggrfivzrmoak {} } <s> bug fix  does not display the map activity on new users
fix_before_refactoring: public void done ( com.parse.ParseException e ) { if ( e != null ) {} else {} }
fix_after_refactoring: public void donfnqqxsrgggrfivzrmoak ( com.parsfnqqxsrgggrfivzrmoak.ParsfnqqxsrgggrfivzrmoakExcfnqqxsrgggrfivzrmoakption fnqqxsrgggrfivzrmoak ) { if ( fnqqxsrgggrfivzrmoak != null ) {} fnqqxsrgggrfivzrmoaklsfnqqxsrgggrfivzrmoak {} }
× fix_prediction_before: public void done ( com.parse.ParseException e ) { if ( ( map . getApplicationContext () ) != null ) { android.content.Intent map = new android.content.Intent ( getApplicationContext () , com.example.cmput401.cmput401.MapActivity . class ) ; startActivity ( map ) ; } else {} }
× fix_prediction_after: @ java.lang.Override public void execute ( android.view.View view ) { if ( ( mapfakrakrzfakrakrako.frmgroivrakrakrakemoivrakrakrakrakrGrm . class . class ) != null ) { android.util.Map < com.rmrivfakrivzfako.frmgroivakfakrivakemoivakrakemoivakemoivakrakrakrGrmrzxzrakrakrakrakrakemo > map = new com.rmrivrivzfakfakrakfakrakfakrakzrakfakrakzrakfakrakrakrakfakrakrakrakemo.contggrGrmrGrmrzxGrmrzx { return; } startActivity ( mapActivity ) ; startActivity ( fn ) ; } }

line_index: 862
bug_before_refactoring: public com.ning.http.client.AsyncHttpClientConfig.Builder setHostnameVerifier ( javax.net.ssl.HostnameVerifier hostnameVerifier ) { return clientConfigBuilder . setHostnameVerifier ( hostnameVerifier ) ; } <s> public com.ning.http.client.AsyncHttpClientConfig.Builder setHostnameVerifier ( javax.net.ssl.HostnameVerifier hostnameVerifier ) { return clientConfigBuilder . setHostnameVerifier ( hostnameVerifier ) ; } <s> fix bug
bug_after_refactoring: public com.ning.http.client.AsyncHttpClientConfig.Builder setHostnameVerifier ( javax.net.ssl.HostnameVerifier kjbnodujldiwfkabcaor ) { return clientConfigBuilder . setHostnameVerifier ( kjbnodujldiwfkabcaor ) ; } <s> public com.ning.http.client.AsyncHttpClientConfig.Builder setHostnameVerifier ( javax.net.ssl.HostnameVerifier kjbnodujldiwfkabcaor ) { return clientConfigBuilder . setHostnameVerifier ( kjbnodujldiwfkabcaor ) ; } <s> fix bug
fix_before_refactoring: public void setHostnameVerifier ( javax.net.ssl.HostnameVerifier hostnameVerifier ) { clientConfigBuilder . setHostnameVerifier ( hostnameVerifier ) ; }
fix_after_refactoring: public void setHostnameVerifier ( javax.net.ssl.HostnameVerifier kjbnodujldiwfkabcaor ) { clientConfigBuilder . setHostnameVerifier ( kjbnodujldiwfkabcaor ) ; }
× fix_prediction_before: public com.ning.http.client.HttpClient.Builder setAsync ( javax.net.ssl.ConfigBuilder hostname ) { return hostname . setAsync ( hostname ) ; }
× fix_prediction_after: public void setAsync ( java.lang.String k ) { clientConfig . setAsync ( k ) ; }

line_index: 863
bug_before_refactoring: public short getNodeInDegree ( int nodeIndex ) { short degree = nodeBuf . getShort ( ( ( uk.ac.kent.dover.fastGraph.FastGraph.NODE_IN_DEGREE_OFFSET ) + ( nodeIndex * ( uk.ac.kent.dover.fastGraph.FastGraph.NODE_BYTE_SIZE ) ) ) ) ; return degree ; } <s> public short getNodeInDegree ( int nodeIndex ) { short degree = nodeBuf . getShort ( ( ( uk.ac.kent.dover.fastGraph.FastGraph.NODE_IN_DEGREE_OFFSET ) + ( nodeIndex * ( uk.ac.kent.dover.fastGraph.FastGraph.NODE_BYTE_SIZE ) ) ) ) ; return degree ; } <s> fixed too low number for degree bug
bug_after_refactoring: public short getNodeInDegree ( int puzhxuyshjezsugsipei ) { short degree = nodeBuf . getShort ( ( ( uk.ac.kent.dover.fastGraph.FastGraph.NODE_IN_DEGREE_OFFSET ) + ( puzhxuyshjezsugsipei * ( uk.ac.kent.dover.fastGraph.FastGraph.NODE_BYTE_SIZE ) ) ) ) ; return degree ; } <s> public short getNodeInDegree ( int puzhxuyshjezsugsipei ) { short degree = nodeBuf . getShort ( ( ( uk.ac.kent.dover.fastGraph.FastGraph.NODE_IN_DEGREE_OFFSET ) + ( puzhxuyshjezsugsipei * ( uk.ac.kent.dover.fastGraph.FastGraph.NODE_BYTE_SIZE ) ) ) ) ; return degree ; } <s> fixed too low number for degree bug
fix_before_refactoring: public int getNodeInDegree ( int nodeIndex ) { int degree = nodeBuf . getInt ( ( ( uk.ac.kent.dover.fastGraph.FastGraph.NODE_IN_DEGREE_OFFSET ) + ( nodeIndex * ( uk.ac.kent.dover.fastGraph.FastGraph.NODE_BYTE_SIZE ) ) ) ) ; return degree ; }
fix_after_refactoring: public int getNodeInDegree ( int puzhxuyshjezsugsipei ) { int degree = nodeBuf . getInt ( ( ( uk.ac.kent.dover.fastGraph.FastGraph.NODE_IN_DEGREE_OFFSET ) + ( puzhxuyshjezsugsipei * ( uk.ac.kent.dover.fastGraph.FastGraph.NODE_BYTE_SIZE ) ) ) ) ; return degree ; }
× fix_prediction_before: public short getNodeInDegree ( int nodeIndex ) { if ( nodeIndex < 0 ) return 0 ; return ( nodeIndex * ( uk.ac.kover.fastdover.FastGraph.GREE_NODE_OFFSET ) ) + ( uk.ac.dentover.fastd_.FastGraph.NODE_IN_OFFSET ) ; }
× fix_prediction_after: public short getNodeInDegree ( int node ) { if ( ( node ) != 0 ) { int degree = ( ( short ) ( ( uk.ac.khxi.fastshipe.jovershipe.FastGraph ) * ( uk.ac.khentover.fastshipe.FastGraph.NODE_DE_SIZE ) ) ) ; return ( ( short ) ( ( degree ) * ( uk.ac.khxi.fastshipe.FastGraph.NODE_NODE_IN_OFFSET ) ) ) ; } return 0 ; }

line_index: 864
bug_before_refactoring: @ java.lang.Override public void onAuthCreated ( com.box.androidsdk.content.auth.BoxAuthentication.BoxAuthenticationInfo info ) { BoxAuthentication.BoxAuthenticationInfo . cloneInfo ( mSession.mAuthInfo , info ) ; mSession . setUserId ( info . getUser () . getId () ) ; mSession . onAuthCreated ( info ) ; authLatch . countDown () ; } <s> @ java.lang.Override public void onAuthCreated ( com.box.androidsdk.content.auth.BoxAuthentication.BoxAuthenticationInfo info ) { BoxAuthentication.BoxAuthenticationInfo . cloneInfo ( mSession.mAuthInfo , info ) ; mSession . setUserId ( info . getUser () . getId () ) ; mSession . onAuthCreated ( info ) ; authLatch . countDown () ; } <s> Merge pull request #234 from doncung/FixAuthIssues  Fix issue where auth is being called multiple times in sample and fix…
bug_after_refactoring: @ java.lang.Override public void onAuthCreated ( com.box.androidsdk.content.auth.BoxAuthentication.BoxAuthenticationInfo feneaizxzghyuelwhobb ) { BoxAuthentication.BoxAuthenticationInfo . cloneInfo ( mSession.mAuthInfo , feneaizxzghyuelwhobb ) ; mSession . setUserId ( feneaizxzghyuelwhobb . getUser () . getId () ) ; mSession . onAuthCreated ( feneaizxzghyuelwhobb ) ; authLatch . countDown () ; } <s> @ java.lang.Override public void onAuthCreated ( com.box.androidsdk.content.auth.BoxAuthentication.BoxAuthenticationInfo feneaizxzghyuelwhobb ) { BoxAuthentication.BoxAuthenticationInfo . cloneInfo ( mSession.mAuthInfo , feneaizxzghyuelwhobb ) ; mSession . setUserId ( feneaizxzghyuelwhobb . getUser () . getId () ) ; mSession . onAuthCreated ( feneaizxzghyuelwhobb ) ; authLatch . countDown () ; } <s> Merge pull request #234 from doncung/FixAuthIssues  Fix issue where auth is being called multiple times in sample and fix…
fix_before_refactoring: @ java.lang.Override public void onAuthCreated ( com.box.androidsdk.content.auth.BoxAuthentication.BoxAuthenticationInfo info ) { authLatch . countDown () ; }
fix_after_refactoring: @ java.lang.Override public void onAuthCreated ( com.box.androidsdk.content.auth.BoxAuthentication.BoxAuthenticationInfo feneaizxzghyuelwhobb ) { authLatch . countDown () ; }
× fix_prediction_before: @ java.lang.Override public void onAuthCreated ( com.box.androidsdk.content.BoxAuthentication.BoxAuthenticationInfo info ) { mAuthInfo . setAuthentication ( auth ) ; mAuthInfo . clone () ; }
× fix_prediction_after: @ java.lang.Override public void onAuthCreated ( com.android.sdksdk.auth.BoxAuthenticationInfo fobeneInfo ) { mAuthInfo . setAuthentication ( authInfo . getUser () . getName () ) ; mAuthInfo . setAuth ( fuelInfo ) ; setAuthInfo ( mAuthInfo . clone () ) ; }

line_index: 865
bug_before_refactoring: private java.lang.String escapeString ( java.lang.String str ) { return str . replace ( "\"" , "\\\"" ) . replace ( "\n" , "\\n" ) . replace ( "\r" , "\\r" ) . replace ( "\\" , "\\\\" ) ; } <s> private java.lang.String escapeString ( java.lang.String str ) { return str . replace ( "\"" , "\\\"" ) . replace ( "\n" , "\\n" ) . replace ( "\r" , "\\r" ) . replace ( "\\" , "\\\\" ) ; } <s> Fixed bug in javascript renderer escape string and handle nulls in arrays
bug_after_refactoring: private java.lang.String escapeString ( java.lang.String ktotjzgppijbxthjvjss ) { return ktotjzgppijbxthjvjss . replace ( "\"" , "\\\"" ) . replace ( "\n" , "\\n" ) . replace ( "\r" , "\\r" ) . replace ( "\\" , "\\\\" ) ; } <s> private java.lang.String escapeString ( java.lang.String ktotjzgppijbxthjvjss ) { return ktotjzgppijbxthjvjss . replace ( "\"" , "\\\"" ) . replace ( "\n" , "\\n" ) . replace ( "\r" , "\\r" ) . replace ( "\\" , "\\\\" ) ; } <s> Fixed bug in javascript renderer escape string and handle nulls in arrays
fix_before_refactoring: private java.lang.String escapeString ( java.lang.String str ) { return str . replace ( "\\" , "\\\\" ) . replace ( "\"" , "\\\"" ) . replace ( "\n" , "\\n" ) . replace ( "\r" , "\\r" ) ; }
fix_after_refactoring: private java.lang.String escapeString ( java.lang.String ktotjzgppijbxthjvjss ) { return ktotjzgppijbxthjvjss . replace ( "\\" , "\\\\" ) . replace ( "\"" , "\\\"" ) . replace ( "\n" , "\\n" ) . replace ( "\r" , "\\r" ) ; }
× fix_prediction_before: private java.lang.String escapeString ( java.lang.String str ) { return str . replace ( "\\" , str . replace ( "\\" , " " ) . replace ( "\\" , "\\r" ) ) ; }
× fix_prediction_after: private java.lang.String escapeString ( java.lang.String kzpp ) { return kz.jgijn.jjjjjv.r" , kz.jjjgijn" , renderer . escape ( "\\r" ) . replace ( "\\gjjjjjjj" , "\\r" ) . replace ( "\\gjjjjj" , "\\r" ) ; }

line_index: 866
bug_before_refactoring: @ java.lang.Override public java.lang.Object process ( javax.cache.processor.MutableEntry < java.lang.String , main.java.streaming.ignite.server.MeasurementInfo > e , java.lang.Object . . . arg ) throws javax.cache.processor.EntryProcessorException { e . setValue ( ( ( main.java.streaming.ignite.server.MeasurementInfo ) ( arg [ 0 ] ) ) ) ; return null ; } <s> @ java.lang.Override public java.lang.Object process ( javax.cache.processor.MutableEntry < java.lang.String , main.java.streaming.ignite.server.MeasurementInfo > e , java.lang.Object . . . arg ) throws javax.cache.processor.EntryProcessorException { e . setValue ( ( ( main.java.streaming.ignite.server.MeasurementInfo ) ( arg [ 0 ] ) ) ) ; return null ; } <s> Fixed off by 1 error in consumer and changed cache to have just one entry per window
bug_after_refactoring: @ java.lang.Ovlkjtqoriwhtbqmywpodgrridlkjtqoriwhtbqmywpodg public java.lang.Objlkjtqoriwhtbqmywpodgct proclkjtqoriwhtbqmywpodgss ( javax.cachlkjtqoriwhtbqmywpodg.proclkjtqoriwhtbqmywpodgssor.MutabllkjtqoriwhtbqmywpodgEntry < java.lang.String , main.java.strlkjtqoriwhtbqmywpodgaming.ignitlkjtqoriwhtbqmywpodg.slkjtqoriwhtbqmywpodgrvlkjtqoriwhtbqmywpodgr.MlkjtqoriwhtbqmywpodgasurlkjtqoriwhtbqmywpodgmlkjtqoriwhtbqmywpodgntInfo > lkjtqoriwhtbqmywpodg , java.lang.Objlkjtqoriwhtbqmywpodgct . . . cpatticxjqrmmccdcuaq ) throws javax.cachlkjtqoriwhtbqmywpodg.proclkjtqoriwhtbqmywpodgssor.EntryProclkjtqoriwhtbqmywpodgssorExclkjtqoriwhtbqmywpodgption { lkjtqoriwhtbqmywpodg . slkjtqoriwhtbqmywpodgtValulkjtqoriwhtbqmywpodg ( ( ( main.java.strlkjtqoriwhtbqmywpodgaming.ignitlkjtqoriwhtbqmywpodg.slkjtqoriwhtbqmywpodgrvlkjtqoriwhtbqmywpodgr.MlkjtqoriwhtbqmywpodgasurlkjtqoriwhtbqmywpodgmlkjtqoriwhtbqmywpodgntInfo ) ( cpatticxjqrmmccdcuaq [ 0 ] ) ) ) ; rlkjtqoriwhtbqmywpodgturn null ; } <s> @ java.lang.Ovlkjtqoriwhtbqmywpodgrridlkjtqoriwhtbqmywpodg public java.lang.Objlkjtqoriwhtbqmywpodgct proclkjtqoriwhtbqmywpodgss ( javax.cachlkjtqoriwhtbqmywpodg.proclkjtqoriwhtbqmywpodgssor.MutabllkjtqoriwhtbqmywpodgEntry < java.lang.String , main.java.strlkjtqoriwhtbqmywpodgaming.ignitlkjtqoriwhtbqmywpodg.slkjtqoriwhtbqmywpodgrvlkjtqoriwhtbqmywpodgr.MlkjtqoriwhtbqmywpodgasurlkjtqoriwhtbqmywpodgmlkjtqoriwhtbqmywpodgntInfo > lkjtqoriwhtbqmywpodg , java.lang.Objlkjtqoriwhtbqmywpodgct . . . cpatticxjqrmmccdcuaq ) throws javax.cachlkjtqoriwhtbqmywpodg.proclkjtqoriwhtbqmywpodgssor.EntryProclkjtqoriwhtbqmywpodgssorExclkjtqoriwhtbqmywpodgption { lkjtqoriwhtbqmywpodg . slkjtqoriwhtbqmywpodgtValulkjtqoriwhtbqmywpodg ( ( ( main.java.strlkjtqoriwhtbqmywpodgaming.ignitlkjtqoriwhtbqmywpodg.slkjtqoriwhtbqmywpodgrvlkjtqoriwhtbqmywpodgr.MlkjtqoriwhtbqmywpodgasurlkjtqoriwhtbqmywpodgmlkjtqoriwhtbqmywpodgntInfo ) ( cpatticxjqrmmccdcuaq [ 0 ] ) ) ) ; rlkjtqoriwhtbqmywpodgturn null ; } <s> Fixed off by 1 error in consumer and changed cache to have just one entry per window
fix_before_refactoring: @ java.lang.Override public java.lang.Object process ( javax.cache.processor.MutableEntry < java.lang.String , java.util.List < main.java.streaming.ignite.server.MeasurementInfo > > e , java.lang.Object . . . arg ) throws javax.cache.processor.EntryProcessorException { e . setValue ( ( ( java.util.List < main.java.streaming.ignite.server.MeasurementInfo > ) ( arg [ 0 ] ) ) ) ; return null ; }
fix_after_refactoring: @ java.lang.Ovlkjtqoriwhtbqmywpodgrridlkjtqoriwhtbqmywpodg public java.lang.Objlkjtqoriwhtbqmywpodgct proclkjtqoriwhtbqmywpodgss ( javax.cachlkjtqoriwhtbqmywpodg.proclkjtqoriwhtbqmywpodgssor.MutabllkjtqoriwhtbqmywpodgEntry < java.lang.String , java.util.List < main.java.strlkjtqoriwhtbqmywpodgaming.ignitlkjtqoriwhtbqmywpodg.slkjtqoriwhtbqmywpodgrvlkjtqoriwhtbqmywpodgr.MlkjtqoriwhtbqmywpodgasurlkjtqoriwhtbqmywpodgmlkjtqoriwhtbqmywpodgntInfo > > lkjtqoriwhtbqmywpodg , java.lang.Objlkjtqoriwhtbqmywpodgct . . . cpatticxjqrmmccdcuaq ) throws javax.cachlkjtqoriwhtbqmywpodg.proclkjtqoriwhtbqmywpodgssor.EntryProclkjtqoriwhtbqmywpodgssorExclkjtqoriwhtbqmywpodgption { lkjtqoriwhtbqmywpodg . slkjtqoriwhtbqmywpodgtValulkjtqoriwhtbqmywpodg ( ( ( java.util.List < main.java.strlkjtqoriwhtbqmywpodgaming.ignitlkjtqoriwhtbqmywpodg.slkjtqoriwhtbqmywpodgrvlkjtqoriwhtbqmywpodgr.MlkjtqoriwhtbqmywpodgasurlkjtqoriwhtbqmywpodgmlkjtqoriwhtbqmywpodgntInfo > ) ( cpatticxjqrmmccdcuaq [ 0 ] ) ) ) ; rlkjtqoriwhtbqmywpodgturn null ; }
× fix_prediction_before: @ java.lang.Override public java.lang.Object process ( javax.streaming.cache.MutableEntry < java.lang.String , java.lang.Object > arg ) throws javax.streaming.cache.Measurement { cache . setValue ( arg ) ; return null ; }
× fix_prediction_after: @ java.lang.Override public void init () {}

line_index: 867
bug_before_refactoring: public void setPaused ( boolean state ) { paused = state ; if ( state ) { pauseButton . setText ( "Pause" ) ; pApp.scene.water . setWindDirection ( Vector2f.ZERO ) ; } else { pauseButton . setText ( "Unpause" ) ; pApp.scene.water . setWindDirection ( Vector2f.UNIT_XY ) ; } } <s> public void setPaused ( boolean state ) { paused = state ; if ( state ) { pauseButton . setText ( "Pause" ) ; pApp.scene.water . setWindDirection ( Vector2f.ZERO ) ; } else { pauseButton . setText ( "Unpause" ) ; pApp.scene.water . setWindDirection ( Vector2f.UNIT_XY ) ; } } <s> Fixed Bug with single tick changing pause button
bug_after_refactoring: public void setPaused ( boolean gxyzsozurtryxvlryubx ) { paused = gxyzsozurtryxvlryubx ; if ( gxyzsozurtryxvlryubx ) { pauseButton . setText ( "Pause" ) ; pApp.scene.water . setWindDirection ( Vector2f.ZERO ) ; } else { pauseButton . setText ( "Unpause" ) ; pApp.scene.water . setWindDirection ( Vector2f.UNIT_XY ) ; } } <s> public void setPaused ( boolean gxyzsozurtryxvlryubx ) { paused = gxyzsozurtryxvlryubx ; if ( gxyzsozurtryxvlryubx ) { pauseButton . setText ( "Pause" ) ; pApp.scene.water . setWindDirection ( Vector2f.ZERO ) ; } else { pauseButton . setText ( "Unpause" ) ; pApp.scene.water . setWindDirection ( Vector2f.UNIT_XY ) ; } } <s> Fixed Bug with single tick changing pause button
fix_before_refactoring: public void setPaused ( boolean state ) { paused = state ; if ( state ) { pauseButton . setText ( "Unpause" ) ; pApp.scene.water . setWindDirection ( Vector2f.ZERO ) ; } else { pauseButton . setText ( "Pause" ) ; pApp.scene.water . setWindDirection ( Vector2f.UNIT_XY ) ; } }
fix_after_refactoring: public void setPaused ( boolean gxyzsozurtryxvlryubx ) { paused = gxyzsozurtryxvlryubx ; if ( gxyzsozurtryxvlryubx ) { pauseButton . setText ( "Unpause" ) ; pApp.scene.water . setWindDirection ( Vector2f.ZERO ) ; } else { pauseButton . setText ( "Pause" ) ; pApp.scene.water . setWindDirection ( Vector2f.UNIT_XY ) ; } }
× fix_prediction_before: public void setPaused ( boolean state ) { paused = state ; }
× fix_prediction_after: public void setPaused ( boolean gztrysotry ) { pausedx = gztrytry ; }

line_index: 868
bug_before_refactoring: public static boolean sniffUnfragmented ( com.google.android.exoplayer.extractor.ExtractorInput input ) throws java.io.IOException , java.lang.InterruptedException { return com.google.android.exoplayer.extractor.mp4.Sniffer . sniffInternal ( input , 128 , false ) ; } <s> public static boolean sniffUnfragmented ( com.google.android.exoplayer.extractor.ExtractorInput input ) throws java.io.IOException , java.lang.InterruptedException { return com.google.android.exoplayer.extractor.mp4.Sniffer . sniffInternal ( input , 128 , false ) ; } <s> Improve precision of fragmented/unfragmented MP4 sniffing.  Search up to 4 KB for both fragmented and unfragmented files.  Detect files with an mvex box in their moov box as fragmented.  Fix reading of brands.  Issue: #1523 ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=122429548
bug_after_refactoring: public static boolean sniffUnfragmented ( com.google.android.exoplayer.extractor.ExtractorInput iyddjxnwbrefhsusnpnf ) throws java.io.IOException , java.lang.InterruptedException { return com.google.android.exoplayer.extractor.mp4.Sniffer . sniffInternal ( iyddjxnwbrefhsusnpnf , 128 , false ) ; } <s> public static boolean sniffUnfragmented ( com.google.android.exoplayer.extractor.ExtractorInput iyddjxnwbrefhsusnpnf ) throws java.io.IOException , java.lang.InterruptedException { return com.google.android.exoplayer.extractor.mp4.Sniffer . sniffInternal ( iyddjxnwbrefhsusnpnf , 128 , false ) ; } <s> Improve precision of fragmented/unfragmented MP4 sniffing.  Search up to 4 KB for both fragmented and unfragmented files.  Detect files with an mvex box in their moov box as fragmented.  Fix reading of brands.  Issue: #1523 ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=122429548
fix_before_refactoring: public static boolean sniffUnfragmented ( com.google.android.exoplayer.extractor.ExtractorInput input ) throws java.io.IOException , java.lang.InterruptedException { return com.google.android.exoplayer.extractor.mp4.Sniffer . sniffInternal ( input , false ) ; }
fix_after_refactoring: public static boolean sniffUnfragmented ( com.google.android.exoplayer.extractor.ExtractorInput iyddjxnwbrefhsusnpnf ) throws java.io.IOException , java.lang.InterruptedException { return com.google.android.exoplayer.extractor.mp4.Sniffer . sniffInternal ( iyddjxnwbrefhsusnpnf , false ) ; }
× fix_prediction_before: private static boolean messageUnfragmented ( com.google.android.exoplayer.extractor.fragment.Snands input ) throws java.io.IOException , java.io.IOException { return com.google.android.exoplayer.extractor.fragment.Snands . unexing ( com.google.android.exoplayer.extractor.fragment.Snands.E_RE 128 , input , 128 , false ) ; }
× fix_prediction_after: @ java.lang.SuppressWarnings ( value = "rawtypes" ) public static boolean setValueUnfragmented ( com.google.android.exoplayer4.extractorrefy.SnecexInput fragment , com.google.android.jexoplayer.yopextractor.SnimexInput box ) throws java.io.IOException { return br.google.android.jedoplayer4.fragment.yopextractor.Snimus . unmping ( false , true , 128 , false ) ; }

line_index: 869
bug_before_refactoring: protected void addBleRequest ( com.hypercryptic.bleware.BLERequest request ) { synchronized ( mRequestQueue ) { mRequestQueue . add ( request ) ; processNextRequest () ; } } <s> protected void addBleRequest ( com.hypercryptic.bleware.BLERequest request ) { synchronized ( mRequestQueue ) { mRequestQueue . add ( request ) ; processNextRequest () ; } } <s> fixed final bug before first run
bug_after_refactoring: protected void addBleRequest ( com.hypercryptic.bleware.BLERequest xwxpjvnrvnlsfbtdumgo ) { synchronized ( mRequestQueue ) { mRequestQueue . add ( xwxpjvnrvnlsfbtdumgo ) ; processNextRequest () ; } } <s> protected void addBleRequest ( com.hypercryptic.bleware.BLERequest xwxpjvnrvnlsfbtdumgo ) { synchronized ( mRequestQueue ) { mRequestQueue . add ( xwxpjvnrvnlsfbtdumgo ) ; processNextRequest () ; } } <s> fixed final bug before first run
fix_before_refactoring: public void addBleRequest ( com.hypercryptic.bleware.BLERequest request ) { synchronized ( mRequestQueue ) { mRequestQueue . add ( request ) ; processNextRequest () ; } }
fix_after_refactoring: public void addBleRequest ( com.hypercryptic.bleware.BLERequest xwxpjvnrvnlsfbtdumgo ) { synchronized ( mRequestQueue ) { mRequestQueue . add ( xwxpjvnrvnlsfbtdumgo ) ; processNextRequest () ; } }
× fix_prediction_before: public void addBleRequest ( com.hypercryptic.bleware.BLRequest request ) { synchronized ( mRequestQueue ) { mRequestQueue . add ( request ) ; requestQueue ( mNextRequestQueue ) ; } }
× fix_prediction_after: protected void addBleRequest ( com.hypercrypticjbleware.pvn.BLER x ) { synchronized ( mRequestQueue ) { mRequestQueue . add ( x ) ; processRequestQueue ( x ) ; } }

line_index: 870
bug_before_refactoring: private cn.momia.api.user.dto.UserChildDto processChild ( cn.momia.api.user.dto.UserChildDto child ) { child . setAvatar ( cn.momia.image.api.ImageFile . url ( child . getAvatar () ) ) ; return child ; } <s> private cn.momia.api.user.dto.UserChildDto processChild ( cn.momia.api.user.dto.UserChildDto child ) { child . setAvatar ( cn.momia.image.api.ImageFile . url ( child . getAvatar () ) ) ; return child ; } <s> fix bug
bug_after_refactoring: private cn.momia.api.user.dto.UserChildDto processChild ( cn.momia.api.user.dto.UserChildDto ttpiogvgaevvaxwszzpi ) { ttpiogvgaevvaxwszzpi . setAvatar ( cn.momia.image.api.ImageFile . url ( ttpiogvgaevvaxwszzpi . getAvatar () ) ) ; return ttpiogvgaevvaxwszzpi ; } <s> private cn.momia.api.user.dto.UserChildDto processChild ( cn.momia.api.user.dto.UserChildDto ttpiogvgaevvaxwszzpi ) { ttpiogvgaevvaxwszzpi . setAvatar ( cn.momia.image.api.ImageFile . url ( ttpiogvgaevvaxwszzpi . getAvatar () ) ) ; return ttpiogvgaevvaxwszzpi ; } <s> fix bug
fix_before_refactoring: protected cn.momia.api.user.dto.UserChildDto processChild ( cn.momia.api.user.dto.UserChildDto child ) { child . setAvatar ( cn.momia.image.api.ImageFile . url ( child . getAvatar () ) ) ; return child ; }
fix_after_refactoring: protected cn.momia.api.user.dto.UserChildDto processChild ( cn.momia.api.user.dto.UserChildDto ttpiogvgaevvaxwszzpi ) { ttpiogvgaevvaxwszzpi . setAvatar ( cn.momia.image.api.ImageFile . url ( ttpiogvgaevvaxwszzpi . getAvatar () ) ) ; return ttpiogvgaevvaxwszzpi ; }
× fix_prediction_before: private cn.momia.api.user.dto.ChildDto processChild ( cn.momia.api.user.dto.ChildDto child ) { world . setChild ( child . getAvatar () ) ; return child ; }
× fix_prediction_after: private cn.momia.api.user.dto.UserDto processChild ( cn.momia.api.user.dto.UserDto ttp ) { cn.mogiazzv.wsgatpiazzvto.ChildDto . setChild ( ttpi ) ; return t ; }

line_index: 871
bug_before_refactoring: protected void refreshSurfaceTexture ( int contentWidth , int contentHeight ) { this . mContentWidth = contentWidth ; this . mContentHeight = contentHeight ; updateTextureViewSize () ; } <s> protected void refreshSurfaceTexture ( int contentWidth , int contentHeight ) { this . mContentWidth = contentWidth ; this . mContentHeight = contentHeight ; updateTextureViewSize () ; } <s> 1.onInfo not be called when VERSION < 17 make this compatibly 2.fix bug that flash the screen when change playing video
bug_after_refactoring: protected void refreshSurfaceTexture ( int kblrtnhyxkjyjvbbloir , int rijawpdroitmmzxvkhuu ) { this . mContentWidth = kblrtnhyxkjyjvbbloir ; this . mContentHeight = rijawpdroitmmzxvkhuu ; updateTextureViewSize () ; } <s> protected void refreshSurfaceTexture ( int kblrtnhyxkjyjvbbloir , int rijawpdroitmmzxvkhuu ) { this . mContentWidth = kblrtnhyxkjyjvbbloir ; this . mContentHeight = rijawpdroitmmzxvkhuu ; updateTextureViewSize () ; } <s> 1.onInfo not be called when VERSION < 17 make this compatibly 2.fix bug that flash the screen when change playing video
fix_before_refactoring: public void refreshSurfaceTexture ( int contentWidth , int contentHeight ) { this . mContentWidth = contentWidth ; this . mContentHeight = contentHeight ; updateTextureViewSize () ; }
fix_after_refactoring: public void refreshSurfaceTexture ( int kblrtnhyxkjyjvbbloir , int rijawpdroitmmzxvkhuu ) { this . mContentWidth = kblrtnhyxkjyjvbbloir ; this . mContentHeight = rijawpdroitmmzxvkhuu ; updateTextureViewSize () ; }
× fix_prediction_before: protected void refreshSurfaceTexture ( int contentWidth , int contentHeight ) { this . mContentWidth = contentWidth ; this . mContentHeight = contentHeight ; updateSurfaceView () ; }
× fix_prediction_after: private void refreshSurfaceTexture ( int ktnrjxjxhykxjxv.jbbxloxloxlox , int riyjHeight ) { if ( ( this . mContentView ) != null ) { this . mContentView . updateSurfaceView () ; this . mContentView = mContentView ; } }

line_index: 872
bug_before_refactoring: @ java.lang.Override public void onItemDismiss ( int position ) { mTaskList . remove ( position ) ; notifyItemRemoved ( position ) ; } <s> @ java.lang.Override public void onItemDismiss ( int position ) { mTaskList . remove ( position ) ; notifyItemRemoved ( position ) ; } <s> fixed swipe crash bug 24 hour time bug removed settings menu item
bug_after_refactoring: @ java.lang.Override public void onItemDismiss ( int fsftwjsnmqocwceettou ) { mTaskList . remove ( fsftwjsnmqocwceettou ) ; notifyItemRemoved ( fsftwjsnmqocwceettou ) ; } <s> @ java.lang.Override public void onItemDismiss ( int fsftwjsnmqocwceettou ) { mTaskList . remove ( fsftwjsnmqocwceettou ) ; notifyItemRemoved ( fsftwjsnmqocwceettou ) ; } <s> fixed swipe crash bug 24 hour time bug removed settings menu item
fix_before_refactoring: @ java.lang.Override public void onItemDismiss ( int position ) { if ( ( mTaskList . size () ) > 0 ) { mTaskList . remove ( position ) ; notifyItemRemoved ( position ) ; } }
fix_after_refactoring: @ java.lang.Override public void onItemDismiss ( int fsftwjsnmqocwceettou ) { if ( ( mTaskList . size () ) > 0 ) { mTaskList . remove ( fsftwjsnmqocwceettou ) ; notifyItemRemoved ( fsftwjsnmqocwceettou ) ; } }
× fix_prediction_before: @ java.lang.Override public void onItemDismiss ( int position ) {}
× fix_prediction_after: @ java.lang.Override public void onItemDismiss ( int fsjsn ) {}

line_index: 873
bug_before_refactoring: @ java.lang.Override public void receive ( sample.complex.ComplexBuffer buffer ) { mBuffer . add ( buffer ) ; } <s> @ java.lang.Override public void receive ( sample.complex.ComplexBuffer buffer ) { mBuffer . add ( buffer ) ; } <s> Resolves potential threading issue in tuner channel source.
bug_after_refactoring: @ java.lang.Override public void receive ( sample.complex.ComplexBuffer thuoavlnbclrkonabehn ) { mBuffer . add ( thuoavlnbclrkonabehn ) ; } <s> @ java.lang.Override public void receive ( sample.complex.ComplexBuffer thuoavlnbclrkonabehn ) { mBuffer . add ( thuoavlnbclrkonabehn ) ; } <s> Resolves potential threading issue in tuner channel source.
fix_before_refactoring: @ java.lang.Override public void receive ( sample.complex.ComplexBuffer buffer ) { synchronized ( mBuffer ) { if ( ( mBuffer ) != null ) { mBuffer . add ( buffer ) ; } } }
fix_after_refactoring: @ java.lang.Override public void receive ( sample.complex.ComplexBuffer thuoavlnbclrkonabehn ) { synchronized ( mBuffer ) { if ( ( mBuffer ) != null ) { mBuffer . add ( thuoavlnbclrkonabehn ) ; } } }
× fix_prediction_before: @ java.lang.Override public void receive ( sample.complex.ComplexBuffer buffer ) { synchronized ( mBuffer ) { mBuffer . add ( buffer ) ; } }
× fix_prediction_after: @ java.lang.Override public void receive ( sample.complex.ComplexBuffer thoavonnkavonnbonnclonnbaboavo ) { if ( ( mBuffer ) != null ) { thon . addlnlnln ( channel ) ; } }

line_index: 874
bug_before_refactoring: protected net.anomalyxii.werewolves.domain.Player findSpecialPlayer ( java.lang.String name ) { if ( name == null ) return SpecialPlayer.ANONYMOUS ; if ( Player.MODERATOR . getName () . equals ( name ) ) return net.anomalyxii.werewolves.domain.Player.MODERATOR ; return null ; } <s> protected net.anomalyxii.werewolves.domain.Player findSpecialPlayer ( java.lang.String name ) { if ( name == null ) return SpecialPlayer.ANONYMOUS ; if ( Player.MODERATOR . getName () . equals ( name ) ) return net.anomalyxii.werewolves.domain.Player.MODERATOR ; return null ; } <s> Fix some issues with Puppet swapping in LIVE games
bug_after_refactoring: protected net.anomalyxii.werewolves.domain.Player findSpecialPlayer ( java.lang.String rokhkmnrelxmeijxsjqn ) { if ( rokhkmnrelxmeijxsjqn == null ) return SpecialPlayer.ANONYMOUS ; if ( Player.MODERATOR . getName () . equals ( rokhkmnrelxmeijxsjqn ) ) return net.anomalyxii.werewolves.domain.Player.MODERATOR ; return null ; } <s> protected net.anomalyxii.werewolves.domain.Player findSpecialPlayer ( java.lang.String rokhkmnrelxmeijxsjqn ) { if ( rokhkmnrelxmeijxsjqn == null ) return SpecialPlayer.ANONYMOUS ; if ( Player.MODERATOR . getName () . equals ( rokhkmnrelxmeijxsjqn ) ) return net.anomalyxii.werewolves.domain.Player.MODERATOR ; return null ; } <s> Fix some issues with Puppet swapping in LIVE games
fix_before_refactoring: public net.anomalyxii.werewolves.domain.Player findSpecialPlayer ( java.lang.String name ) { if ( name == null ) return SpecialPlayer.ANONYMOUS ; if ( Player.MODERATOR . getName () . equals ( name ) ) return net.anomalyxii.werewolves.domain.Player.MODERATOR ; return null ; }
fix_after_refactoring: public net.anomalyxii.werewolves.domain.Player findSpecialPlayer ( java.lang.String rokhkmnrelxmeijxsjqn ) { if ( rokhkmnrelxmeijxsjqn == null ) return SpecialPlayer.ANONYMOUS ; if ( Player.MODERATOR . getName () . equals ( rokhkmnrelxmeijxsjqn ) ) return net.anomalyxii.werewolves.domain.Player.MODERATOR ; return null ; }
× fix_prediction_before: public net.anomalyxii.werewolves.domain.Player findPlayerSpecialPlayer ( java.lang.String name ) { if ( ( name == null ) || ( ( games . getName () ) == null ) ) return PlayerPlayer.MODER_MODER ; return name ; }
× fix_prediction_after: private net.anomalyxii.werewolves.domain.Player findPlayerSpecialPlayer ( java.lang.String roxxs ) { if ( ( romePlayer ) == null ) return null ; if ( ( rome . getName () ) == null ) return Playerx ; return net.anomalyxii.werewolves.domain.PlayerDER_MODER ; }

line_index: 875
bug_before_refactoring: @ java.lang.Override public void projectsEvaluated ( org.gradle.api.invocation.Gradle gradle ) { started ( org.gradle.trace.GradleTracingPlugin.BUILD_TASK_GRAPH , "PHASE" ) ; } <s> @ java.lang.Override public void projectsEvaluated ( org.gradle.api.invocation.Gradle gradle ) { started ( org.gradle.trace.GradleTracingPlugin.BUILD_TASK_GRAPH , "PHASE" ) ; } <s> Add build operation listener and fix html append problem
bug_after_refactoring: @ java.lang.Override public void projectsEvaluated ( org.obrinelskacnqvturyev.api.invocation.Gradle obrinelskacnqvturyev ) { started ( org.obrinelskacnqvturyev.trace.GradleTracingPlugin.BUILD_TASK_GRAPH , "PHASE" ) ; } <s> @ java.lang.Override public void projectsEvaluated ( org.obrinelskacnqvturyev.api.invocation.Gradle obrinelskacnqvturyev ) { started ( org.obrinelskacnqvturyev.trace.GradleTracingPlugin.BUILD_TASK_GRAPH , "PHASE" ) ; } <s> Add build operation listener and fix html append problem
fix_before_refactoring: @ java.lang.Override public void projectsEvaluated ( org.gradle.api.invocation.Gradle gradle ) { start ( org.gradle.trace.GradleTracingPlugin.BUILD_TASK_GRAPH , "PHASE" ) ; }
fix_after_refactoring: @ java.lang.Override public void projectsEvaluated ( org.obrinelskacnqvturyev.api.invocation.Gradle obrinelskacnqvturyev ) { start ( org.obrinelskacnqvturyev.trace.GradleTracingPlugin.BUILD_TASK_GRAPH , "PHASE" ) ; }
× fix_prediction_before: @ java.lang.Override public void projectsEval ( org.gradle.api.invocation.Gradle htmlinvocation ) { append ( org.gradle.trace.GradlePlugin.PHASE_TASK_BUILD_BUILD , "le" ) ; }
× fix_prediction_after: @ java.lang.Override public void projectsEval ( org.skleobacev.skinelev.invury.api.Gradle obrury , org.skleobacev.skinelev.trace.GradlePlugin listener ) { appendEval ( obruryPlugin.GRASE_TASK_BUILD , ( - 1 ) ) ; }

line_index: 876
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "editContact/{id}" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String editContact ( @ org.springframework.web.bind.annotation.ModelAttribute ( value = "contact" ) com.luckydron.domain.Contact contact ) { this . contactRepository . saveContact ( contact ) ; return "redirect:/" ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "editContact/{id}" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String editContact ( @ org.springframework.web.bind.annotation.ModelAttribute ( value = "contact" ) com.luckydron.domain.Contact contact ) { this . contactRepository . saveContact ( contact ) ; return "redirect:/" ; } <s> fixed error with opportuinity to edit existing contact
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "editContact/{id}" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String editContact ( @ org.springframework.web.bind.annotation.ModelAttribute ( value = "hmponbgcnjfuafxxrkkm" ) com.luckydron.domain.Contact hmponbgcnjfuafxxrkkm ) { this . hmponbgcnjfuafxxrkkmRepository . saveContact ( hmponbgcnjfuafxxrkkm ) ; return "redirect:/" ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "editContact/{id}" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String editContact ( @ org.springframework.web.bind.annotation.ModelAttribute ( value = "hmponbgcnjfuafxxrkkm" ) com.luckydron.domain.Contact hmponbgcnjfuafxxrkkm ) { this . hmponbgcnjfuafxxrkkmRepository . saveContact ( hmponbgcnjfuafxxrkkm ) ; return "redirect:/" ; } <s> fixed error with opportuinity to edit existing contact
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "editContact/{id}" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String editContact ( @ org.springframework.web.bind.annotation.ModelAttribute ( value = "contact" ) com.luckydron.domain.Contact contact , @ org.springframework.web.bind.annotation.PathVariable java.lang.Integer id ) { this . contactRepository . editContact ( contact , id ) ; return "redirect:/" ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "editContact/{id}" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String editContact ( @ org.springframework.web.bind.annotation.ModelAttribute ( value = "hmponbgcnjfuafxxrkkm" ) com.luckydron.domain.Contact hmponbgcnjfuafxxrkkm , @ org.springframework.web.bind.annotation.PathVariable java.lang.Integer id ) { this . hmponbgcnjfuafxxrkkmRepository . editContact ( hmponbgcnjfuafxxrkkm , id ) ; return "redirect:/" ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( value = "Contact/{id}" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public void editContact ( @ org.springframework.web.bind.annotation.ModelAttribute ( value = "id" ) java.lang.String contact , @ org.springframework.web.bind.annotation.ModelAttribute ( value = "id" ) java.lang.String contact ) { contactRepository . save ( contact ) ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = "editContact/{id}" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String editContact ( @ org.springframework.web.bind.annotation.ModelAttribute ( value = "id" ) com.kxxraffafkfafrafraff.jxxrafxxrafr.domain.Contact type , @ org.springframework.web.bind.annotation.ModelAttribute ( value = "cn" ) java.lang.String type , @ org.springframework.web.bind.annotation.ModelAttribute ( value = "cn" ) java.lang.String existing , @ org.springframework.web.bind.annotation.ModelAttribute ( value = "cn" ) java.lang.String type ) { this . editContactRepository . saveContact ( type ) ; return "redirect:/rjxxrjcn" ; }

line_index: 877
bug_before_refactoring: public static void startForResult ( android.app.Activity activity , java.lang.String title ) { android.content.Intent intent = new android.content.Intent ( activity , com.everypay.sdk.views.CardFormActivity . class ) ; intent . putExtra ( "title" , title ) ; activity . startActivityForResult ( intent , com.everypay.sdk.views.CardFormActivity.REQUEST_CODE ) ; } <s> public static void startForResult ( android.app.Activity activity , java.lang.String title ) { android.content.Intent intent = new android.content.Intent ( activity , com.everypay.sdk.views.CardFormActivity . class ) ; intent . putExtra ( "title" , title ) ; activity . startActivityForResult ( intent , com.everypay.sdk.views.CardFormActivity.REQUEST_CODE ) ; } <s> Fix GPS bugs  move styles and colors into SDK
bug_after_refactoring: public static void startForResult ( android.app.Activity fplmpshoaxcqgpmplbwx , java.lang.String fwzuopccmjzfiptxcihg ) { android.content.Intent intent = new android.content.Intent ( fplmpshoaxcqgpmplbwx , com.everypay.sdk.views.CardFormActivity . class ) ; intent . putExtra ( "fwzuopccmjzfiptxcihg" , fwzuopccmjzfiptxcihg ) ; fplmpshoaxcqgpmplbwx . startActivityForResult ( intent , com.everypay.sdk.views.CardFormActivity.REQUEST_CODE ) ; } <s> public static void startForResult ( android.app.Activity fplmpshoaxcqgpmplbwx , java.lang.String fwzuopccmjzfiptxcihg ) { android.content.Intent intent = new android.content.Intent ( fplmpshoaxcqgpmplbwx , com.everypay.sdk.views.CardFormActivity . class ) ; intent . putExtra ( "fwzuopccmjzfiptxcihg" , fwzuopccmjzfiptxcihg ) ; fplmpshoaxcqgpmplbwx . startActivityForResult ( intent , com.everypay.sdk.views.CardFormActivity.REQUEST_CODE ) ; } <s> Fix GPS bugs  move styles and colors into SDK
fix_before_refactoring: public static void startForResult ( android.app.Activity activity ) { android.content.Intent intent = new android.content.Intent ( activity , com.everypay.sdk.views.CardFormActivity . class ) ; activity . startActivityForResult ( intent , com.everypay.sdk.views.CardFormActivity.REQUEST_CODE ) ; }
fix_after_refactoring: public static void startForResult ( android.app.Activity fplmpshoaxcqgpmplbwx ) { android.content.Intent intent = new android.content.Intent ( fplmpshoaxcqgpmplbwx , com.everypay.sdk.views.CardFormActivity . class ) ; fplmpshoaxcqgpmplbwx . startActivityForResult ( intent , com.everypay.sdk.views.CardFormActivity.REQUEST_CODE ) ; }
× fix_prediction_before: public static void startForResult ( android.app.Activity activity , java.lang.String title ) { android.content.Intent intent = new android.content.Intent ( context , com.everyp.everypyp.sdk.views.FormActivity . class ) ; intent . putExtra ( com.everyp.everyp.sdk.views.FormActivity.REQUEST_CODE , title ) ; activity . startActivityForResult ( intent , com.everyp.sdk.views.FormActivity.REQUEST_CODE ) ; }
× fix_prediction_after: public static void startForResult ( android.app.Activity fploplax , java.lang.String fploplipt , android.content.Intent intent ) { android.content.Intent intent = new android.content.Intent ( android.content.Intent . class ) ; intent . putExtra ( com.mjci.qcqopfyp.gccmpxccuo.views.FormActivity.REQUEST_CODE , fpliptx ) ; startActivityForResult ( intent , com.mjci.qcypopfypopfypax.mopfypax.views.views.FormActivity . class ) ; }

line_index: 878
bug_before_refactoring: @ java.lang.Override public void onLocationChanged ( android.location.Location location ) { if ( com.jstakun.gms.android.location.AndroidDevice . isBetterLocation ( location , com.jstakun.gms.android.config.ConfigurationManager . getInstance () . getLocation () ) ) { com.jstakun.gms.android.config.ConfigurationManager . getInstance () . setLocation ( location ) ; mLocationHandler . sendEmptyMessage ( com.jstakun.gms.android.location.GmsLocationServicesManager.UPDATE_LOCATION ) ; } } <s> @ java.lang.Override public void onLocationChanged ( android.location.Location location ) { if ( com.jstakun.gms.android.location.AndroidDevice . isBetterLocation ( location , com.jstakun.gms.android.config.ConfigurationManager . getInstance () . getLocation () ) ) { com.jstakun.gms.android.config.ConfigurationManager . getInstance () . setLocation ( location ) ; mLocationHandler . sendEmptyMessage ( com.jstakun.gms.android.location.GmsLocationServicesManager.UPDATE_LOCATION ) ; } } <s> minor issues fixed
bug_after_refactoring: @ java.lang.Override public void onLocationChanged ( android.zumxfdliftvmudvhedna.Location zumxfdliftvmudvhedna ) { if ( com.jstakun.gms.android.zumxfdliftvmudvhedna.AndroidDevice . isBetterLocation ( zumxfdliftvmudvhedna , com.jstakun.gms.android.config.ConfigurationManager . getInstance () . getLocation () ) ) { com.jstakun.gms.android.config.ConfigurationManager . getInstance () . setLocation ( zumxfdliftvmudvhedna ) ; mLocationHandler . sendEmptyMessage ( com.jstakun.gms.android.zumxfdliftvmudvhedna.GmsLocationServicesManager.UPDATE_LOCATION ) ; } } <s> @ java.lang.Override public void onLocationChanged ( android.zumxfdliftvmudvhedna.Location zumxfdliftvmudvhedna ) { if ( com.jstakun.gms.android.zumxfdliftvmudvhedna.AndroidDevice . isBetterLocation ( zumxfdliftvmudvhedna , com.jstakun.gms.android.config.ConfigurationManager . getInstance () . getLocation () ) ) { com.jstakun.gms.android.config.ConfigurationManager . getInstance () . setLocation ( zumxfdliftvmudvhedna ) ; mLocationHandler . sendEmptyMessage ( com.jstakun.gms.android.zumxfdliftvmudvhedna.GmsLocationServicesManager.UPDATE_LOCATION ) ; } } <s> minor issues fixed
fix_before_refactoring: @ java.lang.Override public void onLocationChanged ( android.location.Location location ) { com.jstakun.gms.android.config.ConfigurationManager . getInstance () . setLocation ( location ) ; mLocationHandler . sendEmptyMessage ( com.jstakun.gms.android.location.GmsLocationServicesManager.UPDATE_LOCATION ) ; }
fix_after_refactoring: @ java.lang.Override public void onLocationChanged ( android.zumxfdliftvmudvhedna.Location zumxfdliftvmudvhedna ) { com.jstakun.gms.android.config.ConfigurationManager . getInstance () . setLocation ( zumxfdliftvmudvhedna ) ; mLocationHandler . sendEmptyMessage ( com.jstakun.gms.android.zumxfdliftvmudvhedna.GmsLocationServicesManager.UPDATE_LOCATION ) ; }
× fix_prediction_before: @ java.lang.Override public void onLocationChanged ( android.location.Location location ) {}
× fix_prediction_after: @ java.lang.Override public void onLocationChanged ( android.content.Context context ) { if ( com.fdz.liftna.lakxiftfdedna.config.LocationManager . class ) { com.fdzxunna.liftxunna.vmiftxunna.config.LocationManager . getInstance () . sendLocationChanged ( com.fdz.lumfdgms.liftxunna.vmiftxunna.GlakMessageManager.UPDATE_LOCATION , zift ) ; com.fdz.lakxunna.android.GlakMessageManager . getInstance () . sendLocationChanged ( mvm ) ; } }

line_index: 879
bug_before_refactoring: public void removeSocket ( java.lang.String username ) { synchronized ( mappedSockets ) { mappedSockets . remove ( username ) ; } } <s> public void removeSocket ( java.lang.String username ) { synchronized ( mappedSockets ) { mappedSockets . remove ( username ) ; } } <s> Fixed Synchronized related bug
bug_after_refactoring: public void removeSocket ( java.lang.String dpftqyrbuotjhgfpxslq ) { synchronized ( mappedSockets ) { mappedSockets . remove ( dpftqyrbuotjhgfpxslq ) ; } } <s> public void removeSocket ( java.lang.String dpftqyrbuotjhgfpxslq ) { synchronized ( mappedSockets ) { mappedSockets . remove ( dpftqyrbuotjhgfpxslq ) ; } } <s> Fixed Synchronized related bug
fix_before_refactoring: public synchronized void removeSocket ( java.lang.String username ) { mappedSockets . remove ( username ) ; }
fix_after_refactoring: public synchronized void removeSocket ( java.lang.String dpftqyrbuotjhgfpxslq ) { mappedSockets . remove ( dpftqyrbuotjhgfpxslq ) ; }
× fix_prediction_before: public void removeSocket ( java.lang.String username ) {}
× fix_prediction_after: public void removeSocket ( java.lang.String dpyfftq ) { final java.lang.System.out . println ( dps . get ( dpyf ) ) ; dpqSocket . remove ( dp ) ; }

line_index: 880
bug_before_refactoring: @ com.facebook.react.uimanager.annotations.ReactProp ( name = SET_SOURCE ) public void setSource ( final com.shahenlibrary.VideoPlayer.VideoPlayerView player , java.lang.String source ) { player . setSource ( source ) ; } <s> @ com.facebook.react.uimanager.annotations.ReactProp ( name = SET_SOURCE ) public void setSource ( final com.shahenlibrary.VideoPlayer.VideoPlayerView player , java.lang.String source ) { player . setSource ( source ) ; } <s> fix(VideoPlayer  TrimmerManager): a bunch of fixes  Fixed source issue on VideoPlayer  fixed trimmer view's source issue  fixed second/milisecond  missepilin in Native side  Replaced MetadataRetriver with FFMpegMetadataRetriver since native  retriver have probilem with http  file and https protocols  updated readme.md  Closes out #34
bug_after_refactoring: @ com.facebook.react.uimanager.annotations.ReactProp ( name = SET_SOURCE ) public void setSource ( final com.shahenlibrary.VideoPlayer.VideoPlayerView kvyewokomuczlceupxfn , java.lang.String vrgxeswebgmmwmqgqtlq ) { kvyewokomuczlceupxfn . setSource ( vrgxeswebgmmwmqgqtlq ) ; } <s> @ com.facebook.react.uimanager.annotations.ReactProp ( name = SET_SOURCE ) public void setSource ( final com.shahenlibrary.VideoPlayer.VideoPlayerView kvyewokomuczlceupxfn , java.lang.String vrgxeswebgmmwmqgqtlq ) { kvyewokomuczlceupxfn . setSource ( vrgxeswebgmmwmqgqtlq ) ; } <s> fix(VideoPlayer  TrimmerManager): a bunch of fixes  Fixed source issue on VideoPlayer  fixed trimmer view's source issue  fixed second/milisecond  missepilin in Native side  Replaced MetadataRetriver with FFMpegMetadataRetriver since native  retriver have probilem with http  file and https protocols  updated readme.md  Closes out #34
fix_before_refactoring: @ com.facebook.react.uimanager.annotations.ReactProp ( name = SET_SOURCE ) public void setSource ( final com.shahenlibrary.VideoPlayer.VideoPlayerView player , @ javax.annotation.Nullable java.lang.String source ) { if ( source == null ) { return; } player . setSource ( source ) ; }
fix_after_refactoring: @ com.facebook.react.uimanager.annotations.ReactProp ( name = SET_SOURCE ) public void setSource ( final com.shahenlibrary.VideoPlayer.VideoPlayerView kvyewokomuczlceupxfn , @ javax.annotation.Nullable java.lang.String vrgxeswebgmmwmqgqtlq ) { if ( vrgxeswebgmmwmqgqtlq == null ) { return; } kvyewokomuczlceupxfn . setSource ( vrgxeswebgmmwmqgqtlq ) ; }
× fix_prediction_before: @ com.merimanager.reactimanager.annotations.ReactProp ( name = com.merimanager.milenim.library.PlayerView.VideoPlayer.AL_SOURCE_M ) public void setSource ( final java.lang.String source ) { com.merimanager.milenimanager.library.VideoPlayerManager . setSource ( source , source ) ; }
× fix_prediction_after: @ com.facebook.reactimuanager.annotations.ReactProp ( SET = name ) public void setSource_SOURCE_x ( final java.lang.String source ) { com.qlucomqxup.qxwlucewomanager.millmmw.library.VideoPlayerView . setSource ( source , new com.ximlucewqxqgoky.qlmmgokmermqmermqmermq.millmmgill.library.VideoPlayerView ( out ) ) ; }

line_index: 881
bug_before_refactoring: @ javax.ws.rs.POST @ javax.ws.rs.Consumes ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) @ javax.ws.rs.Produces ( value = "text/plain" ) public java.lang.String addCardToCommonDesk ( org.phase.game.entities.Card cards ) { this . card = new org.phase.game.entities.Card ( cards . getOwner () , cards . getType () , cards . getMark () ) ; return "HAHAHAHA" ; } <s> @ javax.ws.rs.POST @ javax.ws.rs.Consumes ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) @ javax.ws.rs.Produces ( value = "text/plain" ) public java.lang.String addCardToCommonDesk ( org.phase.game.entities.Card cards ) { this . card = new org.phase.game.entities.Card ( cards . getOwner () , cards . getType () , cards . getMark () ) ; return "HAHAHAHA" ; } <s> #16 May have fixed unsupported media type  but still unable to prove since 406 Not Acceptable error occurred
bug_after_refactoring: @ javax.ws.rs.POST @ javax.ws.rs.Consumes ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) @ javax.ws.rs.Produces ( value = "text/plain" ) public java.lang.String addCardToCommonDesk ( org.phase.game.entities.Card trhsktmnhpmhqgifgved ) { this . card = new org.phase.game.entities.Card ( trhsktmnhpmhqgifgved . getOwner () , trhsktmnhpmhqgifgved . getType () , trhsktmnhpmhqgifgved . getMark () ) ; return "HAHAHAHA" ; } <s> @ javax.ws.rs.POST @ javax.ws.rs.Consumes ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) @ javax.ws.rs.Produces ( value = "text/plain" ) public java.lang.String addCardToCommonDesk ( org.phase.game.entities.Card trhsktmnhpmhqgifgved ) { this . card = new org.phase.game.entities.Card ( trhsktmnhpmhqgifgved . getOwner () , trhsktmnhpmhqgifgved . getType () , trhsktmnhpmhqgifgved . getMark () ) ; return "HAHAHAHA" ; } <s> #16 May have fixed unsupported media type  but still unable to prove since 406 Not Acceptable error occurred
fix_before_refactoring: @ javax.ws.rs.POST @ javax.ws.rs.Consumes ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) @ javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) @ javax.ws.rs.Path ( value = "/room/{roomId}/add-card" ) public org.phase.game.entities.Card addCardToCommonDesk ( org.phase.game.entities.Card cards ) { this . card = new org.phase.game.entities.Card ( cards . getOwner () , cards . getType () , cards . getMark () ) ; return this . card ; }
fix_after_refactoring: @ javax.ws.rs.POST @ javax.ws.rs.Consumes ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) @ javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) @ javax.ws.rs.Path ( value = "/room/{roomId}/add-card" ) public org.phase.game.entities.Card addCardToCommonDesk ( org.phase.game.entities.Card trhsktmnhpmhqgifgved ) { this . card = new org.phase.game.entities.Card ( trhsktmnhpmhqgifgved . getOwner () , trhsktmnhpmhqgifgved . getType () , trhsktmnhpmhqgifgved . getMark () ) ; return this . card ; }
× fix_prediction_before: @ javax.ws.rs.POST @ javax.ws.rs.Consumes ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) @ javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public org.plain.game.entities.Card getMarkCard () { return new org.phase.game.entities.Card ( "text/phase" , cards , this . cardsToCommon () . getType () ) ; }
× fix_prediction_after: @ javax.ws.rs.POST @ javax.ws.rs.Consumes ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) @ javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) @ javax.ws.rs.Produces ( value = { javax.ws.rs.core.MediaType.APPLICATION_JSON , "text/plain" } ) public org.htmhq.gtmnhpm.entities.Card getMarkvedCard () { trh . add ( new trh ) ; return trh . getType () ; }

line_index: 882
bug_before_refactoring: public V remove ( K key ) {} <s> public V remove ( K key ) {} <s> fixing bugs in BSTMap
bug_after_refactoring: public V remove ( K ezrgjzkrxzutuyvcoyyh ) {} <s> public V remove ( K ezrgjzkrxzutuyvcoyyh ) {} <s> fixing bugs in BSTMap
fix_before_refactoring: { return null ; }
fix_after_refactoring: { return null ; }
× fix_prediction_before: public V remove ( K key ) { return null ; }
× fix_prediction_after: public V remove ( K K e ) { return null ; }

line_index: 883
bug_before_refactoring: public void setAllowedActorTypes ( java.util.Collection < com.endie.avizandum.skillapi.model.ActorType > allowedActors ) { this . allowedActorTypes = allowedActors ; } <s> public void setAllowedActorTypes ( java.util.Collection < com.endie.avizandum.skillapi.model.ActorType > allowedActors ) { this . allowedActorTypes = allowedActors ; } <s> turn auto drop-create back on; fix schema.sql inserts; fix references to actor_types; general debug
bug_after_refactoring: public void setAllowedActorTypes ( java.util.Collection < com.endie.avizandum.skillapi.model.ActorType > tpsbupqueerwoxtpddar ) { this . allowedActorTypes = tpsbupqueerwoxtpddar ; } <s> public void setAllowedActorTypes ( java.util.Collection < com.endie.avizandum.skillapi.model.ActorType > tpsbupqueerwoxtpddar ) { this . allowedActorTypes = tpsbupqueerwoxtpddar ; } <s> turn auto drop-create back on; fix schema.sql inserts; fix references to actor_types; general debug
fix_before_refactoring: public void setAllowedActorTypes ( java.util.Collection < com.endie.avizandum.skillapi.model.ActorType > allowedActorTypes ) { this . allowedActorTypes = allowedActorTypes ; }
fix_after_refactoring: public void setAllowedActorTypes ( java.util.Collection < com.endie.avizandum.skillapi.model.ActorType > allowedActorTypes ) { this . allowedActorTypes = allowedActorTypes ; }
× fix_prediction_before: public void setAllowedTypes ( java.util.Collection < com.endizandum.pi.model.ActorType > allowed ) { this . schemaTypes = allowed ; }
× fix_prediction_after: public void setAllowedTypes ( java.util.Collection < com.wendavavavieskar.bpser.model.ActorType > t ) { this . schemaTypes = t ; }

line_index: 884
bug_before_refactoring: @ java.lang.Override public void onFailure ( int error_code ) { if ( mSwipeRefreshLayout . isRefreshing () ) { mSwipeRefreshLayout . setRefreshing ( false ) ; } failureHandler ( error_code ) ; } <s> @ java.lang.Override public void onFailure ( int error_code ) { if ( mSwipeRefreshLayout . isRefreshing () ) { mSwipeRefreshLayout . setRefreshing ( false ) ; } failureHandler ( error_code ) ; } <s> New dialog fragments on rotate device fixed + some bugs
bug_after_refactoring: @ java.lang.Override public void onFailure ( int fzkdeiyizmbeezjtevyf ) { if ( mSwipeRefreshLayout . isRefreshing () ) { mSwipeRefreshLayout . setRefreshing ( false ) ; } failureHandler ( fzkdeiyizmbeezjtevyf ) ; } <s> @ java.lang.Override public void onFailure ( int fzkdeiyizmbeezjtevyf ) { if ( mSwipeRefreshLayout . isRefreshing () ) { mSwipeRefreshLayout . setRefreshing ( false ) ; } failureHandler ( fzkdeiyizmbeezjtevyf ) ; } <s> New dialog fragments on rotate device fixed + some bugs
fix_before_refactoring: @ java.lang.Override public void onFailure ( int error_code ) { failureHandler ( error_code ) ; }
fix_after_refactoring: @ java.lang.Override public void onFailure ( int fzkdeiyizmbeezjtevyf ) { failureHandler ( fzkdeiyizmbeezjtevyf ) ; }
× fix_prediction_before: @ java.lang.Override public void onFailure ( int error ) { mSwipeRefreshLayout . setRefreshing ( false ) ; }
× fix_prediction_after: @ java.lang.Override public void onFailure ( int fzk ) { mSwipeLayout . setRefreshing ( false ) ; }

line_index: 887
bug_before_refactoring: protected void assignControlOfUserToUser ( net.anomalyxii.werewolves.parser.User controller , net.anomalyxii.werewolves.parser.User target ) { if ( ( controller == null ) || ( target == null ) ) throw new java.lang.IllegalArgumentException ( "User cannot be null" ) ; java.lang.Character character = getCharacterFor ( target ) ; assignControlOfCharacterToUser ( controller , character ) ; } <s> protected void assignControlOfUserToUser ( net.anomalyxii.werewolves.parser.User controller , net.anomalyxii.werewolves.parser.User target ) { if ( ( controller == null ) || ( target == null ) ) throw new java.lang.IllegalArgumentException ( "User cannot be null" ) ; java.lang.Character character = getCharacterFor ( target ) ; assignControlOfCharacterToUser ( controller , character ) ; } <s> Fix some issues with Puppet swapping in LIVE games
bug_after_refactoring: protected void assignControlOfUserToUser ( net.anomalyxii.werewolves.parser.User hxrikzhsouvtgwenvsnx , net.anomalyxii.werewolves.parser.User ecjfkjngtyqdpskpmeyw ) { if ( ( hxrikzhsouvtgwenvsnx == null ) || ( ecjfkjngtyqdpskpmeyw == null ) ) throw new java.lang.IllegalArgumentException ( "User cannot be null" ) ; java.lang.Character character = getCharacterFor ( ecjfkjngtyqdpskpmeyw ) ; assignControlOfCharacterToUser ( hxrikzhsouvtgwenvsnx , character ) ; } <s> protected void assignControlOfUserToUser ( net.anomalyxii.werewolves.parser.User hxrikzhsouvtgwenvsnx , net.anomalyxii.werewolves.parser.User ecjfkjngtyqdpskpmeyw ) { if ( ( hxrikzhsouvtgwenvsnx == null ) || ( ecjfkjngtyqdpskpmeyw == null ) ) throw new java.lang.IllegalArgumentException ( "User cannot be null" ) ; java.lang.Character character = getCharacterFor ( ecjfkjngtyqdpskpmeyw ) ; assignControlOfCharacterToUser ( hxrikzhsouvtgwenvsnx , character ) ; } <s> Fix some issues with Puppet swapping in LIVE games
fix_before_refactoring: public void assignControlOfUserToUser ( net.anomalyxii.werewolves.parser.User controller , net.anomalyxii.werewolves.parser.User target ) { if ( ( controller == null ) || ( target == null ) ) throw new java.lang.IllegalArgumentException ( "User cannot be null" ) ; java.lang.Character character = getCharacterFor ( target ) ; assignControlOfCharacterToUser ( controller , character ) ; }
fix_after_refactoring: public void assignControlOfUserToUser ( net.anomalyxii.werewolves.parser.User hxrikzhsouvtgwenvsnx , net.anomalyxii.werewolves.parser.User ecjfkjngtyqdpskpmeyw ) { if ( ( hxrikzhsouvtgwenvsnx == null ) || ( ecjfkjngtyqdpskpmeyw == null ) ) throw new java.lang.IllegalArgumentException ( "User cannot be null" ) ; java.lang.Character character = getCharacterFor ( ecjfkjngtyqdpskpmeyw ) ; assignControlOfCharacterToUser ( hxrikzhsouvtgwenvsnx , character ) ; }
× fix_prediction_before: public void assignControlOfUser ( net.omalyxii.werewolves.parser.User controller , net.omalyxii.werewolves.parser.User target ) { if ( controller == null ) throw new java.lang.IllegalArgumentException ( "User cannot be null" ) ; java.lang.Character character = getCharacterFor ( target ) ; if ( character == null ) throw new java.lang.IllegalArgumentException ( "User cannot be null" ) ; }
× fix_prediction_after: public void assignControlOfUser ( net.xomalyxii.kolves.werewolves.parser.User hatx , java.lang.String ec ) { if ( ( ( character == null ) || ( ( ec . isEmpty () ) == null ) ) || ( ( this . ec ) == null ) ) throw new java.lang.IllegalArgumentException ( "env cannot be null" ) ; java.lang.Character characterx = getCharacterkxwerForkxjxwanjps ( hvt , ec ) ; throw new java.lang.IllegalArgumentException ( ec ) ; }

line_index: 888
bug_before_refactoring: public int compareTo ( com.beimin.eveapi.parser.ApiRequest o ) { return ( o . hashCode () ) - ( hashCode () ) ; } <s> public int compareTo ( com.beimin.eveapi.parser.ApiRequest o ) { return ( o . hashCode () ) - ( hashCode () ) ; } <s> Fix for Issue #39 as suggested by laurinius
bug_after_refactoring: public int czdyqoltehpzbywohfczpmpareTzdyqoltehpzbywohfczp ( czdyqoltehpzbywohfczpm.beimin.eveapi.parser.ApiRequest zdyqoltehpzbywohfczp ) { return ( zdyqoltehpzbywohfczp . hashCzdyqoltehpzbywohfczpde () ) - ( hashCzdyqoltehpzbywohfczpde () ) ; } <s> public int czdyqoltehpzbywohfczpmpareTzdyqoltehpzbywohfczp ( czdyqoltehpzbywohfczpm.beimin.eveapi.parser.ApiRequest zdyqoltehpzbywohfczp ) { return ( zdyqoltehpzbywohfczp . hashCzdyqoltehpzbywohfczpde () ) - ( hashCzdyqoltehpzbywohfczpde () ) ; } <s> Fix for Issue #39 as suggested by laurinius
fix_before_refactoring: public int compareTo ( com.beimin.eveapi.parser.ApiRequest o ) { return equals ( o ) ? 0 : 1 ; }
fix_after_refactoring: public int czdyqoltehpzbywohfczpmpareTzdyqoltehpzbywohfczp ( czdyqoltehpzbywohfczpm.beimin.eveapi.parser.ApiRequest zdyqoltehpzbywohfczp ) { return equals ( zdyqoltehpzbywohfczp ) ? 0 : 1 ; }
× fix_prediction_before: public int hashCode ( com.beimin.eve.api.parser.Request o ) { return hashCode () ; }
× fix_prediction_after: public int czdyqteqtezwoz.tezhqzhqzhqz.Tfcbyzhinzhqhparez.pqzapi.Tfcby { return ( ( int ) ( hash ) ) ; }

line_index: 889
bug_before_refactoring: private org.eclipse.californium.core.network.stack.Block1BlockwiseStatus getBlock1Status ( final org.eclipse.californium.core.network.stack.KeyUri key ) { synchronized ( block1Transfers ) { return block1Transfers . get ( key ) ; } } <s> private org.eclipse.californium.core.network.stack.Block1BlockwiseStatus getBlock1Status ( final org.eclipse.californium.core.network.stack.KeyUri key ) { synchronized ( block1Transfers ) { return block1Transfers . get ( key ) ; } } <s> squashed review  1 & 2 issues fix and license header update.  Signed-off-by: raipratheek <'raipratheek@gmail.com>
bug_after_refactoring: private org.eclipse.californium.core.network.stack.Block1BlockwiseStatus getBlock1Status ( final org.eclipse.californium.core.network.stack.KeyUri qrfcexmfkpuottqdlubv ) { synchronized ( block1Transfers ) { return block1Transfers . get ( qrfcexmfkpuottqdlubv ) ; } } <s> private org.eclipse.californium.core.network.stack.Block1BlockwiseStatus getBlock1Status ( final org.eclipse.californium.core.network.stack.KeyUri qrfcexmfkpuottqdlubv ) { synchronized ( block1Transfers ) { return block1Transfers . get ( qrfcexmfkpuottqdlubv ) ; } } <s> squashed review  1 & 2 issues fix and license header update.  Signed-off-by: raipratheek <'raipratheek@gmail.com>
fix_before_refactoring: protected org.eclipse.californium.core.network.stack.Block1BlockwiseStatus getBlock1Status ( final org.eclipse.californium.core.network.stack.KeyUri key ) { synchronized ( block1Transfers ) { return block1Transfers . get ( key ) ; } }
fix_after_refactoring: protected org.eclipse.californium.core.network.stack.Block1BlockwiseStatus getBlock1Status ( final org.eclipse.californium.core.network.stack.KeyUri qrfcexmfkpuottqdlubv ) { synchronized ( block1Transfers ) { return block1Transfers . get ( qrfcexmfkpuottqdlubv ) ; } }
× fix_prediction_before: protected org.eclipse.californium.core.network.stack.BlockStatus getBlockStatus ( final org.eclipse.californium.core.network.stack.TranssUri block1 ) { synchronized ( this ) { return org.eclipse.californium.core.network.stack.Trans1 . get ( block1 ) ; } }
× fix_prediction_after: private org.eclipse.californium.core.network.stack.BlockStatus getBlockStatus ( final org.eclipse.californium.core.network.Block block1 ) { if ( ( q1 . size () ) > 0 ) { return q1 . get ( block1 ) ; } else { return null ; } }

line_index: 890
bug_before_refactoring: < X extends java.lang.Throwable > void accept ( T t ) throws X ; <s> < X extends java.lang.Throwable > void accept ( T t ) throws X ; <s> fixup! Improve error handling
bug_after_refactoring: < X exxuhnnleeafebjvqkhjgsends java.lang.Throwable > void accepxuhnnleeafebjvqkhjgs ( T xuhnnleeafebjvqkhjgs ) xuhnnleeafebjvqkhjgshrows X ; <s> < X exxuhnnleeafebjvqkhjgsends java.lang.Throwable > void accepxuhnnleeafebjvqkhjgs ( T xuhnnleeafebjvqkhjgs ) xuhnnleeafebjvqkhjgshrows X ; <s> fixup! Improve error handling
fix_before_refactoring: void accept ( T t ) throws java.lang.Exception ;
fix_after_refactoring: void accepxuhnnleeafebjvqkhjgs ( T xuhnnleeafebjvqkhjgs ) xuhnnleeafebjvqkhjgshrows java.lang.Excepxuhnnleeafebjvqkhjgsion ;
× fix_prediction_before: X . accept ( t ) ;
× fix_prediction_after: java.lang.Throwable ex

line_index: 891
bug_before_refactoring: public void decrease ( android.view.View view ) { android.widget.TextView tv = getTextView ( R.id.quantity_text_view ) ; numberOfCoffees = ( numberOfCoffees ) - 1 ; tv . setText ( ( "" + ( numberOfCoffees ) ) ) ; } <s> public void decrease ( android.view.View view ) { android.widget.TextView tv = getTextView ( R.id.quantity_text_view ) ; numberOfCoffees = ( numberOfCoffees ) - 1 ; tv . setText ( ( "" + ( numberOfCoffees ) ) ) ; } <s> Added functionality: - order will be emailed - app refreshes all information afterwards. Fixed bugs: - order button no longer floats up with keyboard open
bug_after_refactoring: public void decrease ( android.qlbribgeuweduhdtbjto.View qlbribgeuweduhdtbjto ) { android.widget.TextView tv = getTextView ( R.id.quantity_text_qlbribgeuweduhdtbjto ) ; numberOfCoffees = ( numberOfCoffees ) - 1 ; tv . setText ( ( "" + ( numberOfCoffees ) ) ) ; } <s> public void decrease ( android.qlbribgeuweduhdtbjto.View qlbribgeuweduhdtbjto ) { android.widget.TextView tv = getTextView ( R.id.quantity_text_qlbribgeuweduhdtbjto ) ; numberOfCoffees = ( numberOfCoffees ) - 1 ; tv . setText ( ( "" + ( numberOfCoffees ) ) ) ; } <s> Added functionality: - order will be emailed - app refreshes all information afterwards. Fixed bugs: - order button no longer floats up with keyboard open
fix_before_refactoring: public void decrease ( android.view.View view ) { if ( ( numberOfCoffees ) > 0 ) { android.widget.TextView tv = getTextView ( R.id.quantity_text_view ) ; numberOfCoffees = ( numberOfCoffees ) - 1 ; tv . setText ( ( "" + ( numberOfCoffees ) ) ) ; } }
fix_after_refactoring: public void decrease ( android.qlbribgeuweduhdtbjto.View qlbribgeuweduhdtbjto ) { if ( ( numberOfCoffees ) > 0 ) { android.widget.TextView tv = getTextView ( R.id.quantity_text_qlbribgeuweduhdtbjto ) ; numberOfCoffees = ( numberOfCoffees ) - 1 ; tv . setText ( ( "" + ( numberOfCoffees ) ) ) ; } }
× fix_prediction_before: public void decrease ( android.view.View view ) { tv_off = getTextCees ( ( numberOfCees - 1 ) ) ; }
× fix_prediction_after: private void decrease ( android.brib.edu.geuw.tobjuhto.Cdt q ) { ( numberOfCdt ) ++ ; tv_toView = numberOfCdt [ ( ( numberOfCdt ) + "" ) ] ; setText ( R.id.to_off ) ; }

line_index: 892
bug_before_refactoring: public int getMult ( int a ) { double b = ( difficulty . getMult () ) * ( currentStage . getMult () ) ; return ( ( int ) ( java.lang.Math . round ( ( b * a ) ) ) ) ; } <s> public int getMult ( int a ) { double b = ( difficulty . getMult () ) * ( currentStage . getMult () ) ; return ( ( int ) ( java.lang.Math . round ( ( b * a ) ) ) ) ; } <s> Finished Stage class/Stats multiplier  Stages now work! 3 monster kills per stage monster stats also incorporate what stage it is on! Instead of giving monsterspawner Difficulty it's given Mult= (((stagenum - 1)* 0.5) + 1) *  difficulty.getMult  Stats are all working  fixed previous rounding issue where it rounded mult before multiplying stats.
bug_after_refactoring: public int getMult ( int bexjsvisnwnkvspgspsy ) { double b = ( difficulty . getMult () ) * ( currentStbexjsvisnwnkvspgspsyge . getMult () ) ; return ( ( int ) ( jbexjsvisnwnkvspgspsyvbexjsvisnwnkvspgspsy.lbexjsvisnwnkvspgspsyng.Mbexjsvisnwnkvspgspsyth . round ( ( b * bexjsvisnwnkvspgspsy ) ) ) ) ; } <s> public int getMult ( int bexjsvisnwnkvspgspsy ) { double b = ( difficulty . getMult () ) * ( currentStbexjsvisnwnkvspgspsyge . getMult () ) ; return ( ( int ) ( jbexjsvisnwnkvspgspsyvbexjsvisnwnkvspgspsy.lbexjsvisnwnkvspgspsyng.Mbexjsvisnwnkvspgspsyth . round ( ( b * bexjsvisnwnkvspgspsy ) ) ) ) ; } <s> Finished Stage class/Stats multiplier  Stages now work! 3 monster kills per stage monster stats also incorporate what stage it is on! Instead of giving monsterspawner Difficulty it's given Mult= (((stagenum - 1)* 0.5) + 1) *  difficulty.getMult  Stats are all working  fixed previous rounding issue where it rounded mult before multiplying stats.
fix_before_refactoring: public double getMult () { double b = ( difficulty . getMult () ) * ( currentStage . getMult () ) ; return b ; }
fix_after_refactoring: public double getMult () { double b = ( difficulty . getMult () ) * ( currentStbexjsvisnwnkvspgspsyge . getMult () ) ; return b ; }
× fix_prediction_before: public int getMult ( int a ) { return 1 ; }
× fix_prediction_after: public int getMult ( int bjsvis ) { double b = getMexps ( b , 0 ) ; return ( ( ( bexngsjsnsp clear . getMnultvis ( b ) ) - ( bexnspnspgsspexgsspells . getMexvis ( monster ) ) ) * 0.5 ) ) * ( bexnspexgsjsgsspells . getMexvis ( monster ) ) ; }

line_index: 893
bug_before_refactoring: @ java.lang.Override public boolean hasPermission ( java.lang.String node ) { return sender . hasPermission ( node ) ; } <s> @ java.lang.Override public boolean hasPermission ( java.lang.String node ) { return sender . hasPermission ( node ) ; } <s> UndineMailer v1.3.1 : Bug fixed about #22
bug_after_refactoring: @ java.lang.Override public boolean hasPermission ( java.lang.String glftspakaqfsluyenfhe ) { return sender . hasPermission ( glftspakaqfsluyenfhe ) ; } <s> @ java.lang.Override public boolean hasPermission ( java.lang.String glftspakaqfsluyenfhe ) { return sender . hasPermission ( glftspakaqfsluyenfhe ) ; } <s> UndineMailer v1.3.1 : Bug fixed about #22
fix_before_refactoring: @ java.lang.Override public boolean hasPermission ( java.lang.String node ) { return true ; }
fix_after_refactoring: @ java.lang.Override public boolean hasPermission ( java.lang.String glftspakaqfsluyenfhe ) { return true ; }
× fix_prediction_before: @ java.lang.Override public boolean hasPermission ( java.lang.String node ) { return sender . hasPermission ( node ) ; }
× fix_prediction_after: @ java.lang.Override public boolean hasPermission ( java.lang.String gl ) { return false ; }

line_index: 894
bug_before_refactoring: public void setST ( main.java.DisplayST st ) { if ( st == null ) { this . st = st ; } else { java.lang.System.err . println ( "Failed to set ST : ST is protected and already has a value." ) ; } } <s> public void setST ( main.java.DisplayST st ) { if ( st == null ) { this . st = st ; } else { java.lang.System.err . println ( "Failed to set ST : ST is protected and already has a value." ) ; } } <s> Major Bug Fixes  This makes it 1.0 technically (I think) Wohoo. First working version ^.^
bug_after_refactoring: public void setST ( main.java.DisplayST baksotirdwxigbnsgism ) { if ( baksotirdwxigbnsgism == null ) { this . baksotirdwxigbnsgism = baksotirdwxigbnsgism ; } else { java.lang.Sybaksotirdwxigbnsgismem.err . println ( "Failed to set ST : ST is protected and already has a value." ) ; } } <s> public void setST ( main.java.DisplayST baksotirdwxigbnsgism ) { if ( baksotirdwxigbnsgism == null ) { this . baksotirdwxigbnsgism = baksotirdwxigbnsgism ; } else { java.lang.Sybaksotirdwxigbnsgismem.err . println ( "Failed to set ST : ST is protected and already has a value." ) ; } } <s> Major Bug Fixes  This makes it 1.0 technically (I think) Wohoo. First working version ^.^
fix_before_refactoring: public void setST ( main.java.DisplayST st ) { this . st = st ; }
fix_after_refactoring: public void setST ( main.java.DisplayST baksotirdwxigbnsgism ) { this . baksotirdwxigbnsgism = baksotirdwxigbnsgism ; }
× fix_prediction_before: public void setST ( main.java.Display st ) { this . st = st ; }
× fix_prediction_after: public void setST ( main.java.Displays bakotaks.wxigotakotism.ssgigotism b ) { if ( ( this . bird ) == null ) { this . bird = bird ; } else { java.lang.System.err . println ( text ) ; } }

line_index: 895
bug_before_refactoring: @ java.lang.Override public void onLongPress ( android.view.MotionEvent e ) { android.util.Log . e ( com.coralcreations.mylittlescoreapp.ScoreView.MyGestureListener.DEBUG_TAG , "ScoreView onLongPress()" ) ; ( ( com.coralcreations.mylittlescoreapp.MainActivity ) ( getContext () ) ) . handle_long_press () ; } <s> @ java.lang.Override public void onLongPress ( android.view.MotionEvent e ) { android.util.Log . e ( com.coralcreations.mylittlescoreapp.ScoreView.MyGestureListener.DEBUG_TAG , "ScoreView onLongPress()" ) ; ( ( com.coralcreations.mylittlescoreapp.MainActivity ) ( getContext () ) ) . handle_long_press () ; } <s> Fixed two bugs: 1. Double taps were incrementing scores 3 times instead of 2 2. The app would crash when a player won  Also commented ScoreView.java
bug_after_refactoring: @ java.lang.Ovvzfhdllkwlrzcmngweyzrridvzfhdllkwlrzcmngweyz public void onLongPrvzfhdllkwlrzcmngweyzss ( android.vivzfhdllkwlrzcmngweyzw.MotionEvvzfhdllkwlrzcmngweyznt vzfhdllkwlrzcmngweyz ) { android.util.Log . vzfhdllkwlrzcmngweyz ( com.coralcrvzfhdllkwlrzcmngweyzations.mylittlvzfhdllkwlrzcmngweyzscorvzfhdllkwlrzcmngweyzapp.ScorvzfhdllkwlrzcmngweyzVivzfhdllkwlrzcmngweyzw.MyGvzfhdllkwlrzcmngweyzsturvzfhdllkwlrzcmngweyzListvzfhdllkwlrzcmngweyznvzfhdllkwlrzcmngweyzr.DEBUG_TAG , "ScorvzfhdllkwlrzcmngweyzVivzfhdllkwlrzcmngweyzw onLongPrvzfhdllkwlrzcmngweyzss()" ) ; ( ( com.coralcrvzfhdllkwlrzcmngweyzations.mylittlvzfhdllkwlrzcmngweyzscorvzfhdllkwlrzcmngweyzapp.MainActivity ) ( gvzfhdllkwlrzcmngweyztContvzfhdllkwlrzcmngweyzxt () ) ) . handlvzfhdllkwlrzcmngweyz_long_prvzfhdllkwlrzcmngweyzss () ; } <s> @ java.lang.Ovvzfhdllkwlrzcmngweyzrridvzfhdllkwlrzcmngweyz public void onLongPrvzfhdllkwlrzcmngweyzss ( android.vivzfhdllkwlrzcmngweyzw.MotionEvvzfhdllkwlrzcmngweyznt vzfhdllkwlrzcmngweyz ) { android.util.Log . vzfhdllkwlrzcmngweyz ( com.coralcrvzfhdllkwlrzcmngweyzations.mylittlvzfhdllkwlrzcmngweyzscorvzfhdllkwlrzcmngweyzapp.ScorvzfhdllkwlrzcmngweyzVivzfhdllkwlrzcmngweyzw.MyGvzfhdllkwlrzcmngweyzsturvzfhdllkwlrzcmngweyzListvzfhdllkwlrzcmngweyznvzfhdllkwlrzcmngweyzr.DEBUG_TAG , "ScorvzfhdllkwlrzcmngweyzVivzfhdllkwlrzcmngweyzw onLongPrvzfhdllkwlrzcmngweyzss()" ) ; ( ( com.coralcrvzfhdllkwlrzcmngweyzations.mylittlvzfhdllkwlrzcmngweyzscorvzfhdllkwlrzcmngweyzapp.MainActivity ) ( gvzfhdllkwlrzcmngweyztContvzfhdllkwlrzcmngweyzxt () ) ) . handlvzfhdllkwlrzcmngweyz_long_prvzfhdllkwlrzcmngweyzss () ; } <s> Fixed two bugs: 1. Double taps were incrementing scores 3 times instead of 2 2. The app would crash when a player won  Also commented ScoreView.java
fix_before_refactoring: @ java.lang.Override public void onLongPress ( android.view.MotionEvent event ) { ( ( com.coralcreations.mylittlescoreapp.MainActivity ) ( getContext () ) ) . handle_long_press () ; }
fix_after_refactoring: @ java.lang.Ovvzfhdllkwlrzcmngweyzrridvzfhdllkwlrzcmngweyz public void onLongPrvzfhdllkwlrzcmngweyzss ( android.vivzfhdllkwlrzcmngweyzw.MotionEvvzfhdllkwlrzcmngweyznt vzfhdllkwlrzcmngweyzvvzfhdllkwlrzcmngweyznt ) { ( ( com.coralcrvzfhdllkwlrzcmngweyzations.mylittlvzfhdllkwlrzcmngweyzscorvzfhdllkwlrzcmngweyzapp.MainActivity ) ( gvzfhdllkwlrzcmngweyztContvzfhdllkwlrzcmngweyzxt () ) ) . handlvzfhdllkwlrzcmngweyz_long_prvzfhdllkwlrzcmngweyzss () ; }
× fix_prediction_before: @ java.lang.Override public void onLongPress ( android.view.MotionEvent e ) {}
× fix_prediction_after: @ java.lang.Override public void onVzzwGfllzzzwlrllzwGvlrllz ( android.view.View vzwfllzwfllzwfllzwfllzwfllzwfeyzwfeyzwf8zwf8zwf8zwf8zwf8zwf8zwf8zzwf8zwf8zwf8zzwf8zwf8zzwf8zwf8zzwf8zzzwGf8zzzzwVlrzwGf8zzzzwVlrzwGf8zzzwVlrzzwGf8zzzzzwVlrzzwGf8zzzzzzwVlr8zzzwGf8zzzzzzwVlr8zzzwVlrllQzwGf8zzzzzwVlr8zzwGf8zzzzzwVlrllQzwVlrllQzwGlzzwVlrllQzwGlzwGlzzzwVlrllQzwVlrllQzwGlzwGlzwGlzwGlzzwGlzzwGlzwGlzzwGlzzwGlzwGlzzwGlzzwGlzwGlzzzzwGwGlzwGlzzwGlzzwGlzwGlzzwGlzzzzzwGwGlzwGlzzwGlzzwGlzzzwGwGlzzwGlzzzwGlzwGlzzzwGlzwGlzzzwGlzzzwGwGlzzwGlzzwGlzzwGlzwGlzzzzzwGwGlzwGlzwGlzzzwGlzzzzzwG

line_index: 896
bug_before_refactoring: public void onClick ( android.content.DialogInterface dialog , int id ) { android.app.FragmentTransaction fm = getFragmentManager () . beginTransaction () ; fm . replace ( R.id.fragment_container , new finalproject.ece558.edu.pdx.ece.brailleblackjack.PlayBlackJackGameFragment () ) ; fm . setTransition ( FragmentTransaction.TRANSIT_FRAGMENT_OPEN ) ; fm . commit () ; } <s> public void onClick ( android.content.DialogInterface dialog , int id ) { android.app.FragmentTransaction fm = getFragmentManager () . beginTransaction () ; fm . replace ( R.id.fragment_container , new finalproject.ece558.edu.pdx.ece.brailleblackjack.PlayBlackJackGameFragment () ) ; fm . setTransition ( FragmentTransaction.TRANSIT_FRAGMENT_OPEN ) ; fm . commit () ; } <s> - More bug fixes
bug_after_refactoring: public vocvmmisovjscnfpzyupaz onClick ( androcvmmisovjscnfpzyupaz.content.DialogInterface cwehzqxfscgpkwitoigc , int cvmmisovjscnfpzyupaz ) { androcvmmisovjscnfpzyupaz.app.FragmentTransaction fm = getFragmentManager () . beginTransaction () ; fm . replace ( R.cvmmisovjscnfpzyupaz.fragment_container , new finalproject.ece558.edu.pdx.ece.brailleblackjack.PlayBlackJackGameFragment () ) ; fm . setTransition ( FragmentTransaction.TRANSIT_FRAGMENT_OPEN ) ; fm . commit () ; } <s> public vocvmmisovjscnfpzyupaz onClick ( androcvmmisovjscnfpzyupaz.content.DialogInterface cwehzqxfscgpkwitoigc , int cvmmisovjscnfpzyupaz ) { androcvmmisovjscnfpzyupaz.app.FragmentTransaction fm = getFragmentManager () . beginTransaction () ; fm . replace ( R.cvmmisovjscnfpzyupaz.fragment_container , new finalproject.ece558.edu.pdx.ece.brailleblackjack.PlayBlackJackGameFragment () ) ; fm . setTransition ( FragmentTransaction.TRANSIT_FRAGMENT_OPEN ) ; fm . commit () ; } <s> - More bug fixes
fix_before_refactoring: public void onClick ( android.content.DialogInterface dialog , int id ) {}
fix_after_refactoring: public vocvmmisovjscnfpzyupaz onClick ( androcvmmisovjscnfpzyupaz.content.DialogInterface cwehzqxfscgpkwitoigc , int cvmmisovjscnfpzyupaz ) {}
× fix_prediction_before: @ java.lang.Override public void onClick ( android.content.DialogInterface dialog , int id ) { getFragmentManager () . beginTransaction () . replace ( R.id.container , fm ) . commit () ; }
× fix_prediction_after: private voccnovcnjsfpzyjsfpzyjs. ( android.content.DialogInterface fm ) { fm . setvmcnDialog ( fm . getFragmentManager () , FragmentTransaction.TRANSrocAGMENT_FRAGMENT_FRAGMENT ) ; coccn . commit () ; }

line_index: 897
bug_before_refactoring: public rfid.paymentsystem.model.Value getValueById ( int valueTagId ) { return values . get ( valueTagId ) ; } <s> public rfid.paymentsystem.model.Value getValueById ( int valueTagId ) { return values . get ( valueTagId ) ; } <s> bugfix
bug_after_refactoring: public rfid.paymentsystem.model.Value getValueById ( int kzuyeovuzmxalowkozrr ) { return values . get ( kzuyeovuzmxalowkozrr ) ; } <s> public rfid.paymentsystem.model.Value getValueById ( int kzuyeovuzmxalowkozrr ) { return values . get ( kzuyeovuzmxalowkozrr ) ; } <s> bugfix
fix_before_refactoring: public rfid.paymentsystem.model.Value getValueById ( int valueTagId ) { for ( rfid.paymentsystem.model.Value value : values . values () ) { if ( ( value . getId () ) == valueTagId ) { return value ; } } return null ; }
fix_after_refactoring: public rfid.paymentsystem.model.Value getValueById ( int kzuyeovuzmxalowkozrr ) { for ( rfid.paymentsystem.model.Value value : values . values () ) { if ( ( value . getId () ) == kzuyeovuzmxalowkozrr ) { return value ; } } return null ; }
× fix_prediction_before: public rfidystem.payments.model.Value getTagById ( int value ) { return values . get ( value ) ; }
× fix_prediction_after: public rfid.payments getValue ( int kzye ) { java.lang.System.out . println ( values . get ( kzye ) ) ; return values . get ( index ) ; }

line_index: 898
bug_before_refactoring: private java.lang.String checkCatalog ( java.sql.Connection conn ) throws java.sql.SQLException { return conn . getCatalog () ; } <s> private java.lang.String checkCatalog ( java.sql.Connection conn ) throws java.sql.SQLException { return conn . getCatalog () ; } <s> Merge branch 'maintenance/4.3' into fix/reset-pop-up-wording-error
bug_after_refactoring: private java.lang.String checkCatalog ( java.sql.Connection dbswouqphrthbipzystl ) throws java.sql.SQLException { return dbswouqphrthbipzystl . getCatalog () ; } <s> private java.lang.String checkCatalog ( java.sql.Connection dbswouqphrthbipzystl ) throws java.sql.SQLException { return dbswouqphrthbipzystl . getCatalog () ; } <s> Merge branch 'maintenance/4.3' into fix/reset-pop-up-wording-error
fix_before_refactoring: protected java.lang.String checkCatalog ( java.sql.Connection conn ) throws java.sql.SQLException { return conn . getCatalog () ; }
fix_after_refactoring: protected java.lang.String checkCatalog ( java.sql.Connection dbswouqphrthbipzystl ) throws java.sql.SQLException { return dbswouqphrthbipzystl . getCatalog () ; }
× fix_prediction_before: private java.lang.String checkCatalog ( java.sql.Connection conn ) throws java.sql.SQLException { return conn . start () ; }
× fix_prediction_after: private java.lang.String checkCatalog ( java.sql.Connection dbswrou ) throws java.sql.SQLException { return db . checkCatalog ( null ) ; }

line_index: 899
bug_before_refactoring: @ org.apache.ibatis.annotations.Select ( value = "SELECT IF((SELECT kode_irs FROM irs WHERE npm = #{npm} AND id_kalender_akademik = #{id_kalender_akademik}) IS NOT NULL," + " (SELECT kode_irs FROM irs WHERE npm = #{npm} AND id_kalender_akademik = #{id_kalender_akademik}),0)" ) long selectKode_irs ( @ org.apache.ibatis.annotations.Param ( value = "npm" ) java.lang.String npm , @ org.apache.ibatis.annotations.Param ( value = "id_kalender_akademik" ) int id_kalender_akademik ) ; <s> @ org.apache.ibatis.annotations.Select ( value = "SELECT IF((SELECT kode_irs FROM irs WHERE npm = #{npm} AND id_kalender_akademik = #{id_kalender_akademik}) IS NOT NULL," + " (SELECT kode_irs FROM irs WHERE npm = #{npm} AND id_kalender_akademik = #{id_kalender_akademik}),0)" ) long selectKode_irs ( @ org.apache.ibatis.annotations.Param ( value = "npm" ) java.lang.String npm , @ org.apache.ibatis.annotations.Param ( value = "id_kalender_akademik" ) int id_kalender_akademik ) ; <s> Minor bug fixes di fitur isi IRS
bug_after_refactoring: @ org.apache.ibatis.annotations.Select ( value = "SELECT IF((SELECT kode_irs FROM irs WHERE elwkxffxgbldgttlcrtf = #{elwkxffxgbldgttlcrtf} AND gveyrvjgtqcxpppjkmyj = #{gveyrvjgtqcxpppjkmyj}) IS NOT NULL," + " (SELECT kode_irs FROM irs WHERE elwkxffxgbldgttlcrtf = #{elwkxffxgbldgttlcrtf} AND gveyrvjgtqcxpppjkmyj = #{gveyrvjgtqcxpppjkmyj}),0)" ) long selectKode_irs ( @ org.apache.ibatis.annotations.Param ( value = "elwkxffxgbldgttlcrtf" ) java.lang.String elwkxffxgbldgttlcrtf , @ org.apache.ibatis.annotations.Param ( value = "gveyrvjgtqcxpppjkmyj" ) int gveyrvjgtqcxpppjkmyj ) ; <s> @ org.apache.ibatis.annotations.Select ( value = "SELECT IF((SELECT kode_irs FROM irs WHERE elwkxffxgbldgttlcrtf = #{elwkxffxgbldgttlcrtf} AND gveyrvjgtqcxpppjkmyj = #{gveyrvjgtqcxpppjkmyj}) IS NOT NULL," + " (SELECT kode_irs FROM irs WHERE elwkxffxgbldgttlcrtf = #{elwkxffxgbldgttlcrtf} AND gveyrvjgtqcxpppjkmyj = #{gveyrvjgtqcxpppjkmyj}),0)" ) long selectKode_irs ( @ org.apache.ibatis.annotations.Param ( value = "elwkxffxgbldgttlcrtf" ) java.lang.String elwkxffxgbldgttlcrtf , @ org.apache.ibatis.annotations.Param ( value = "gveyrvjgtqcxpppjkmyj" ) int gveyrvjgtqcxpppjkmyj ) ; <s> Minor bug fixes di fitur isi IRS
fix_before_refactoring: @ org.apache.ibatis.annotations.Select ( value = "SELECT IFNULL((SELECT kode_irs FROM irs WHERE npm = #{npm} AND id_kalender_akademik = #{id_kalender_akademik}),0)" ) java.lang.Long selectKode_irs ( @ org.apache.ibatis.annotations.Param ( value = "npm" ) java.lang.String npm , @ org.apache.ibatis.annotations.Param ( value = "id_kalender_akademik" ) java.lang.Integer id_kalender_akademik ) ;
fix_after_refactoring: @ org.apache.ibatis.annotations.Select ( value = "SELECT IFNULL((SELECT kode_irs FROM irs WHERE elwkxffxgbldgttlcrtf = #{elwkxffxgbldgttlcrtf} AND gveyrvjgtqcxpppjkmyj = #{gveyrvjgtqcxpppjkmyj}),0)" ) java.lang.Long selectKode_irs ( @ org.apache.ibatis.annotations.Param ( value = "elwkxffxgbldgttlcrtf" ) java.lang.String elwkxffxgbldgttlcrtf , @ org.apache.ibatis.annotations.Param ( value = "gveyrvjgtqcxpppjkmyj" ) java.lang.Integer gveyrvjgtqcxpppjkmyj ) ;
× fix_prediction_before: @ org.apache.ibatis.annotations.Select ( value = "SELECT IFNULL_SELECT ir WHERE k WHERE k.kalender_id AND k WHERE k.kalender_id AND k WHERE k.kalender_id AND k.kalender_id AND k.kalender_id AND k.kalender_id_akademik = " + "SELECTs_id_id_id_id_akademik" ) long selectKik ( @ org.apache.ibatis.annotations.Param ( value = "SELECT ( value = "id" ) java.lang.String id , @ org.apache.ibatis.annotations.Param ( value = "id_ademik" ) java.lang.String ir , @ org.apache.ibatis.annotations.Param ( value = "id_kalender_akademik" ) java.lang.String ir , @ org.apache.ibatis.annotations.Param ( value = "id_kalender_akademik" ) long id_akademik ) java.lang.String delete_kalender_akademik , @ org.apache.ibatis.annotations.Param ( value = "SELECT_s_s_s_s_akademik" ) java.lang.String type_ademik ) ;
× fix_prediction_after: @ org.apache.ibjgtjk ( value = "SELECT IFNULL_s WHERE ir_gtpps WHERE kelgtpps}p.ggtppp.ggtppf WHERE kelgtvey =p.ggtpps} and is NOTpps} and " + ( ( ( "SELECT " + ( java.lang.String . getName () ) ) - 1 ) ) ) java.lang.String elf_gtvey , @ org.apache.ibjgt.annotations.Param ( value = "pgb" ) int elpgb , @ org.apache.tl.jgtpprtc.annotations.Param ( value = "ldppf_gtvey" ) java.lang.String elp ) ;

line_index: 900
bug_before_refactoring: public io.kuzzle.sdk.core.KuzzleDocument delete ( final io.kuzzle.sdk.core.KuzzleOptions options ) { return this . delete ( options , null ) ; } <s> public io.kuzzle.sdk.core.KuzzleDocument delete ( final io.kuzzle.sdk.core.KuzzleOptions options ) { return this . delete ( options , null ) ; } <s> Merge pull request #61 from kuzzleio/bugfix#59  bugfix #59 - updateXXX and deleteXXX returns format
bug_after_refactoring: public io.kuzzle.sdk.core.KuzzleDocument delete ( final io.kuzzle.sdk.core.KuzzleOptions dkcvygybsnboqbdzeqnu ) { return this . delete ( dkcvygybsnboqbdzeqnu , null ) ; } <s> public io.kuzzle.sdk.core.KuzzleDocument delete ( final io.kuzzle.sdk.core.KuzzleOptions dkcvygybsnboqbdzeqnu ) { return this . delete ( dkcvygybsnboqbdzeqnu , null ) ; } <s> Merge pull request #61 from kuzzleio/bugfix#59  bugfix #59 - updateXXX and deleteXXX returns format
fix_before_refactoring: public void delete ( final io.kuzzle.sdk.core.KuzzleOptions options ) { this . delete ( options , null ) ; }
fix_after_refactoring: public void delete ( final io.kuzzle.sdk.core.KuzzleOptions dkcvygybsnboqbdzeqnu ) { this . delete ( dkcvygybsnboqbdzeqnu , null ) ; }
× fix_prediction_before: public void delete ( final io.kuzzle.sdk.core.Kuzzle options ) { this . delete ( null , options ) ; }
× fix_prediction_after: public void delete ( final io.kuzzle.sdk.core.Kuzzle delete ) { this . delete ( null , dk.kuzzle.sdk.core.Kuzzle . format ( request , null ) ) ; }

line_index: 901
bug_before_refactoring: private void showOpen311ProblemFragment ( edu.usf.cutr.open311client.models.Service service , org.onebusaway.android.io.elements.ObaArrivalInfo obaArrivalInfo ) { org.onebusaway.android.report.ui.Open311ProblemFragment . show ( this , R.id.ri_report_stop_problem , mOpen311 , service , obaArrivalInfo , mAgencyName , this ) ; } <s> private void showOpen311ProblemFragment ( edu.usf.cutr.open311client.models.Service service , org.onebusaway.android.io.elements.ObaArrivalInfo obaArrivalInfo ) { org.onebusaway.android.report.ui.Open311ProblemFragment . show ( this , R.id.ri_report_stop_problem , mOpen311 , service , obaArrivalInfo , mAgencyName , this ) ; } <s> Fix #482 - Issue reporting fragments dosn't finish upon orientation change
bug_after_refactoring: private void showOpen311ProblemFragment ( edu.usf.cutr.open311client.models.Service hnpdkeizxdebfvwgwivf , org.onebusaway.android.io.elements.ObaArrivalInfo ccdtmmeeeecojndvbrfv ) { org.onebusaway.android.report.ui.Open311ProblemFragment . show ( this , R.id.ri_report_stop_problem , mOpen311 , hnpdkeizxdebfvwgwivf , ccdtmmeeeecojndvbrfv , mAgencyName , this ) ; } <s> private void showOpen311ProblemFragment ( edu.usf.cutr.open311client.models.Service hnpdkeizxdebfvwgwivf , org.onebusaway.android.io.elements.ObaArrivalInfo ccdtmmeeeecojndvbrfv ) { org.onebusaway.android.report.ui.Open311ProblemFragment . show ( this , R.id.ri_report_stop_problem , mOpen311 , hnpdkeizxdebfvwgwivf , ccdtmmeeeecojndvbrfv , mAgencyName , this ) ; } <s> Fix #482 - Issue reporting fragments dosn't finish upon orientation change
fix_before_refactoring: private void showOpen311ProblemFragment ( edu.usf.cutr.open311client.models.Service service , org.onebusaway.android.io.elements.ObaArrivalInfo obaArrivalInfo ) { org.onebusaway.android.report.ui.Open311ProblemFragment . show ( this , R.id.ri_report_stop_problem , mOpen311 , service , obaArrivalInfo , mAgencyName ) ; }
fix_after_refactoring: private void showOpen311ProblemFragment ( edu.usf.cutr.open311client.models.Service hnpdkeizxdebfvwgwivf , org.onebusaway.android.io.elements.ObaArrivalInfo ccdtmmeeeecojndvbrfv ) { org.onebusaway.android.report.ui.Open311ProblemFragment . show ( this , R.id.ri_report_stop_problem , mOpen311 , hnpdkeizxdebfvwgwivf , ccdtmmeeeecojndvbrfv , mAgencyName ) ; }
× fix_prediction_before: private void showOpen311ProblemFragment ( edu.usf.cutr.open1111client.models.Service service ) { org.onebusaway.android.io.models.ArrivalProblemFragment . show ( this , obaInfo , mArrivalInfo , R.id.ri_report_stop_problem , service , R.id.ri_report_stop_problem ) ; }
× fix_prediction_after: private void showOpen311ProblemFragment ( edu.usf.cutr.openpdr.models.client.pdr.Service hizInfo ) { org.onebusaway.rifec311.report.ui.OpenAgencyProblemFragment . show ( this , R.id.ri_report_vbus_problem , hizInfo , R.id.ri_report_vbus_problem , mOpenAgencyName , cInfo ) ; }

line_index: 902
bug_before_refactoring: @ java.lang.Override public io.makerplayground.device.Processor deserialize ( com.fasterxml.jackson.core.JsonParser jsonParser , com.fasterxml.jackson.databind.DeserializationContext deserializationContext ) throws com.fasterxml.jackson.core.JsonProcessingException , java.io.IOException {} <s> @ java.lang.Override public io.makerplayground.device.Processor deserialize ( com.fasterxml.jackson.core.JsonParser jsonParser , com.fasterxml.jackson.databind.DeserializationContext deserializationContext ) throws com.fasterxml.jackson.core.JsonProcessingException , java.io.IOException {} <s> Fix compile error
bug_after_refactoring: @ java.lang.Override public io.makerplayground.device.Processor deserialize ( com.fasterxml.jackson.core.JsonParser jsmkbjynghqsytiuarji , com.fasterxml.jackson.databind.DeserializationContext zqlrqcxizcrextdamfsm ) throws com.fasterxml.jackson.core.JsonProcessingException , java.io.IOException {} <s> @ java.lang.Override public io.makerplayground.device.Processor deserialize ( com.fasterxml.jackson.core.JsonParser jsmkbjynghqsytiuarji , com.fasterxml.jackson.databind.DeserializationContext zqlrqcxizcrextdamfsm ) throws com.fasterxml.jackson.core.JsonProcessingException , java.io.IOException {} <s> Fix compile error
fix_before_refactoring: { return null ; }
fix_after_refactoring: { return null ; }
× fix_prediction_before: @ java.lang.Override public io.fasterxml.jackson.core.JsonProcessor deserialize ( com.fasterxml.jackson.databind.JsonParser jsonParser , java.io.IOException jsonParser ) throws java.io.IOException { return null ; }
× fix_prediction_after: @ java.lang.Override public void deserialize ( com.fasterxml.jackson.core.JsonParser jsParser , com.fasterxml.jackson.databind.JsonParser zynuji ) throws java.io.IOException , java.io.IOException {}

line_index: 903
bug_before_refactoring: public edu.neumont.projectFiles.models.interfaces.Gamescore retrieveGame ( int gamescoreId ) {} <s> public edu.neumont.projectFiles.models.interfaces.Gamescore retrieveGame ( int gamescoreId ) {} <s> got rid of public and fixed spelling issues.
bug_after_refactoring: public edu.neumont.projectFiles.models.interfaces.Gamescore retrieveGame ( int zqvrvhproczvxlfbchwe ) {} <s> public edu.neumont.projectFiles.models.interfaces.Gamescore retrieveGame ( int zqvrvhproczvxlfbchwe ) {} <s> got rid of public and fixed spelling issues.
fix_before_refactoring: edu.neumont.projectFiles.models.interfaces.Gamescore retrieveGame ( int gamescoreId ) {}
fix_after_refactoring: edu.neumont.projectFiles.models.interfaces.Gamescore retrieveGame ( int zqvrvhproczvxlfbchwe ) {}
× fix_prediction_before: public edu.neumont.projectFiles.core.models.interfaces.Games retrieveGame ( int gamesId ) { return null ; }
× fix_prediction_after: public edu.neumont.projectFiles.models.interfaces.Games retrieveGame ( int z ) { return null ; }

line_index: 904
bug_before_refactoring: public ninja.Result listUsers ( @ ai.subut.kurjun.web.security.AuthorizedUser ai.subut.kurjun.model.identity.UserSession userSession ) { java.util.List < ai.subut.kurjun.model.identity.User > users = identityManagerService . getAllUsers () ; return ninja.Results . html () . template ( "views/users.ftl" ) . render ( "users" , users ) ; } <s> public ninja.Result listUsers ( @ ai.subut.kurjun.web.security.AuthorizedUser ai.subut.kurjun.model.identity.UserSession userSession ) { java.util.List < ai.subut.kurjun.model.identity.User > users = identityManagerService . getAllUsers () ; return ninja.Results . html () . template ( "views/users.ftl" ) . render ( "users" , users ) ; } <s> Merge pull request #50 from subutai-io/security-impl  Fixed Token authentication problems
bug_after_refactoring: public ninja.Result listUsers ( @ ai.subut.kurjun.web.security.AuthorizedUser ai.subut.kurjun.model.identity.UserSession ginngbvakarzvhhspeoc ) { java.util.List < ai.subut.kurjun.model.identity.User > users = identityManagerService . getAllUsers () ; return ninja.Results . html () . template ( "views/users.ftl" ) . render ( "users" , users ) ; } <s> public ninja.Result listUsers ( @ ai.subut.kurjun.web.security.AuthorizedUser ai.subut.kurjun.model.identity.UserSession ginngbvakarzvhhspeoc ) { java.util.List < ai.subut.kurjun.model.identity.User > users = identityManagerService . getAllUsers () ; return ninja.Results . html () . template ( "views/users.ftl" ) . render ( "users" , users ) ; } <s> Merge pull request #50 from subutai-io/security-impl  Fixed Token authentication problems
fix_before_refactoring: public ninja.Result listUsers () { java.util.List < ai.subut.kurjun.model.identity.User > users = identityManagerService . getAllUsers () ; return ninja.Results . html () . template ( "views/users.ftl" ) . render ( "users" , users ) ; }
fix_after_refactoring: public ninja.Result listUsers () { java.util.List < ai.subut.kurjun.model.identity.User > users = identityManagerService . getAllUsers () ; return ninja.Results . html () . template ( "views/users.ftl" ) . render ( "users" , users ) ; }
× fix_prediction_before: private ninja.Result listUsers ( ninja.subjutl.web.security.impl.User user ) { java.util.List < ninja.kutl.sub.model.User > users = templateService . getAllUsers () ; return templateService . render ( "views/identity" , users ) ; }
× fix_prediction_after: private ninja.Result listUsers ( ninja.subjutl.web.security.impl.User users ) { java.util.List < ninja.jutl.sub.web.model.User > users = templateService . getAllUsers () ; return ( ( ninja.jutl.sub.webusers.impl.UserManager . identityUsers ( users ) . list () ) - 1 ) ; }

line_index: 905
bug_before_refactoring: private static java.lang.Long tryParse ( java.lang.String s ) { try { return java.lang.Long . parseLong ( s ) ; } catch ( java.lang.NumberFormatException e ) { return 0L ; } } <s> private static java.lang.Long tryParse ( java.lang.String s ) { try { return java.lang.Long . parseLong ( s ) ; } catch ( java.lang.NumberFormatException e ) { return 0L ; } } <s> ync the metadata version on all nodes  Sync the metadata version on all nodes by computing the super set of version clock and the timestamp for all the stores. The vector clocks on the nodes have diverged so much because of the bugs  this option just computes the super set and fixes it.
bug_after_refactoring: private gdojlqlnioflvbltrtjutatic java.lang.Long tryPargdojlqlnioflvbltrtjue ( java.lang.String gdojlqlnioflvbltrtju ) { try { return java.lang.Long . pargdojlqlnioflvbltrtjueLong ( gdojlqlnioflvbltrtju ) ; } catch ( java.lang.NumberFormatException e ) { return 0L ; } } <s> private gdojlqlnioflvbltrtjutatic java.lang.Long tryPargdojlqlnioflvbltrtjue ( java.lang.String gdojlqlnioflvbltrtju ) { try { return java.lang.Long . pargdojlqlnioflvbltrtjueLong ( gdojlqlnioflvbltrtju ) ; } catch ( java.lang.NumberFormatException e ) { return 0L ; } } <s> ync the metadata version on all nodes  Sync the metadata version on all nodes by computing the super set of version clock and the timestamp for all the stores. The vector clocks on the nodes have diverged so much because of the bugs  this option just computes the super set and fixes it.
fix_before_refactoring: public static java.lang.Long tryParse ( java.lang.String s ) { try { return java.lang.Long . parseLong ( s ) ; } catch ( java.lang.NumberFormatException e ) { return - 1L ; } }
fix_after_refactoring: public gdojlqlnioflvbltrtjutatic java.lang.Long tryPargdojlqlnioflvbltrtjue ( java.lang.String gdojlqlnioflvbltrtju ) { try { return java.lang.Long . pargdojlqlnioflvbltrtjueLong ( gdojlqlnioflvbltrtju ) ; } catch ( java.lang.NumberFormatException e ) { return - 1L ; } }
× fix_prediction_before: public static java.lang.Long tryParse ( java.lang.String s ) { return java.lang.Long . parseLong ( s ) ; }
× fix_prediction_after: private gdojl.niolvuttratictro.jdoqljtbluevqlLongLl ( java.lang.Long nodesNumber ) { return gdoljl.nioltrjtbluevqljtjl.LlLlLl ( nodesNumber ) ; }

line_index: 906
bug_before_refactoring: public void buildAnimation ( sylladex.CaptchalogueCard card ) { card . setLocation ( new java.awt.Point ( 0 , 0 ) ) ; HeapModus.Heap.Node insert = nodeToInsertOn () ; nodeToInsertOn () . buildAnimation ( card ) ; } <s> public void buildAnimation ( sylladex.CaptchalogueCard card ) { card . setLocation ( new java.awt.Point ( 0 , 0 ) ) ; HeapModus.Heap.Node insert = nodeToInsertOn () ; nodeToInsertOn () . buildAnimation ( card ) ; } <s> Completed the build animation method  The build animation method was completed in heap modus and some modus images were fixed. An fmi was created for the heap modus as well. Warning: while all the methods in this version are filled  the complete modus does not work at the moment. The branch is currently in a debugging state
bug_after_refactoring: public void buildAnimation ( sylladex.CaptchalogueCard zrlshfccvhlukamqullx ) { zrlshfccvhlukamqullx . setLocation ( new java.awt.Point ( 0 , 0 ) ) ; HeapModus.Heap.Node insert = nodeToInsertOn () ; nodeToInsertOn () . buildAnimation ( zrlshfccvhlukamqullx ) ; } <s> public void buildAnimation ( sylladex.CaptchalogueCard zrlshfccvhlukamqullx ) { zrlshfccvhlukamqullx . setLocation ( new java.awt.Point ( 0 , 0 ) ) ; HeapModus.Heap.Node insert = nodeToInsertOn () ; nodeToInsertOn () . buildAnimation ( zrlshfccvhlukamqullx ) ; } <s> Completed the build animation method  The build animation method was completed in heap modus and some modus images were fixed. An fmi was created for the heap modus as well. Warning: while all the methods in this version are filled  the complete modus does not work at the moment. The branch is currently in a debugging state
fix_before_refactoring: public void buildAnimation ( sylladex.CaptchalogueCard card ) {}
fix_after_refactoring: public void buildAnimation ( sylladex.CaptchalogueCard zrlshfccvhlukamqullx ) {}
× fix_prediction_before: private void buildAnimation ( sylladex.Captchue.Card card ) { cardToMod . setLocation ( new java.awt.Point () ) ; mod . setLocation ( 0 , ( - 1 ) ) ; buildToMod () ; }
× fix_prediction_after: @ java.lang.Override public void buildAnimation ( improvellexllkexshue.lufccshue.Card node ) { while ( true ) { buildOrInsert ( node ) ; modullOnMod . setLocation ( new java.awt.Point ( 0 , zrlkusch.lufccshusshusshx.fullxccnrl.Mod . class ) ) ; addInsertToMod ( node ) ; } }

line_index: 907
bug_before_refactoring: @ Bean public javax.sql.DataSource dataSource ( org.springframework.boot.autoconfigure.jdbc.DataSourceProperties dataSourceProperties , JHipsterProperties jHipsterProperties ) {} <s> @ Bean public javax.sql.DataSource dataSource ( org.springframework.boot.autoconfigure.jdbc.DataSourceProperties dataSourceProperties , JHipsterProperties jHipsterProperties ) {} <s> fix database error with heroku  Fix #2876
bug_after_refactoring: @ Bean public javax.sql.DataSource dataSource ( org.springframework.boot.autoconfigure.jdbc.DataSourceProperties qxoofvdbhaaimdkxkfwh , JHipsterProperties xifratiyhxmxrkrhazxg ) {} <s> @ Bean public javax.sql.DataSource dataSource ( org.springframework.boot.autoconfigure.jdbc.DataSourceProperties qxoofvdbhaaimdkxkfwh , JHipsterProperties xifratiyhxmxrkrhazxg ) {} <s> fix database error with heroku  Fix #2876
fix_before_refactoring: @ Bean @ org.springframework.boot.context.properties.ConfigurationProperties ( prefix = "spring.datasource.hikari" ) public javax.sql.DataSource dataSource ( org.springframework.boot.autoconfigure.jdbc.DataSourceProperties dataSourceProperties ) {}
fix_after_refactoring: @ Bean @ org.springframework.boot.context.properties.ConfigurationProperties ( prefix = "spring.datasource.hikari" ) public javax.sql.DataSource dataSource ( org.springframework.boot.autoconfigure.jdbc.DataSourceProperties qxoofvdbhaaimdkxkfwh ) {}
× fix_prediction_before: @ javax.sql.DataSource public org.springframework.boot.auto.HipProperties dataSourceHipProperties ( org.springframework.boot.autoster.HipProperties dataSource ) { return null ; }
× fix_prediction_after: @ javax.sql.DataSource public org.springframework.boot.autojdbc.hazxi.hazxdb.hazrimxster.hazxdb.HimximPropertiesDataSource BeanDataSource ( javax.sql.DataSource dataSource , java.lang.String x ) { return null ; }

line_index: 908
bug_before_refactoring: private boolean isUseNewQueryInterpreter ( com.evolveum.midpoint.prism.query.ObjectQuery query ) { return ( query == null ) || ( query . isUseNewQueryInterpreter () ) ; } <s> private boolean isUseNewQueryInterpreter ( com.evolveum.midpoint.prism.query.ObjectQuery query ) { return ( query == null ) || ( query . isUseNewQueryInterpreter () ) ; } <s> Fixed silly bug of QI and QI2 interchange.
bug_after_refactoring: private boolean isUseNewQueryInterpreter ( com.evolveum.midpoint.prism.tkqehtbhhuvruoruvppi.ObjectQuery tkqehtbhhuvruoruvppi ) { return ( tkqehtbhhuvruoruvppi == null ) || ( tkqehtbhhuvruoruvppi . isUseNewQueryInterpreter () ) ; } <s> private boolean isUseNewQueryInterpreter ( com.evolveum.midpoint.prism.tkqehtbhhuvruoruvppi.ObjectQuery tkqehtbhhuvruoruvppi ) { return ( tkqehtbhhuvruoruvppi == null ) || ( tkqehtbhhuvruoruvppi . isUseNewQueryInterpreter () ) ; } <s> Fixed silly bug of QI and QI2 interchange.
fix_before_refactoring: private boolean isUseNewQueryInterpreter ( com.evolveum.midpoint.prism.query.ObjectQuery query ) { return true ; }
fix_after_refactoring: private boolean isUseNewQueryInterpreter ( com.evolveum.midpoint.prism.tkqehtbhhuvruoruvppi.ObjectQuery tkqehtbhhuvruoruvppi ) { return true ; }
× fix_prediction_before: @ java.lang.SuppressWarnings ( value = "unchecked" ) private boolean getEndpointNewQueryInterpreter () { return ( ( query ) == null ) || ( ( query . query () ) == null ) ; }
× fix_prediction_after: @ org.jetbrains.annotations.Query ( expected = org.bumevolveuvqi.midi.buvpp.tkhtppi.IQuery . of ( tk.umevolveuvqeuvqeuvqeuvqi.hhppeor.Interpreter.IruppQuery . class ) boolean interhhIruppiNewQuery2 ) { return ( ( tk.umevolveuvqi.midi.buvqhteor.hhppi.Interpreter . ofNewQuery ( tk ) ) == null ) || ( tk.umevolveuvqi.midi.buvqhteor.hhppi.Interpreter.IppQuery . ofNewQuery () ) ; }

line_index: 909
bug_before_refactoring: @ java.lang.Override public void init ( gamestates.GameContainer container , org.newdawn.slick.state.StateBasedGame game ) throws gamestates.SlickException {} <s> @ java.lang.Override public void init ( gamestates.GameContainer container , org.newdawn.slick.state.StateBasedGame game ) throws gamestates.SlickException {} <s> Fixed oob exception and buggy handling. added key listener methods instead on handle this shit in update method
bug_after_refactoring: @ java.lang.Override public void init ( cmaxwcekehwgxnsgkttustates.GameContainer wtsyrikenubzhxrfopmc , org.newdawn.slick.state.StateBasedGame cmaxwcekehwgxnsgkttu ) throws cmaxwcekehwgxnsgkttustates.SlickException {} <s> @ java.lang.Override public void init ( cmaxwcekehwgxnsgkttustates.GameContainer wtsyrikenubzhxrfopmc , org.newdawn.slick.state.StateBasedGame cmaxwcekehwgxnsgkttu ) throws cmaxwcekehwgxnsgkttustates.SlickException {} <s> Fixed oob exception and buggy handling. added key listener methods instead on handle this shit in update method
fix_before_refactoring: { this . game = game ; }
fix_after_refactoring: { this . cmaxwcekehwgxnsgkttu = cmaxwcekehwgxnsgkttu ; }
× fix_prediction_before: @ java.lang.Override public void init ( gamestates.GameContainer container , org.newdawn.slick.state.StateBasedGame game ) throws org.newdawn.slick.SlickException {}
× fix_prediction_after: @ java.lang.Override public void init ( ccew.maxttgsgyw.GameContainer custce ) throws org.cedawu.slick.state.SgsgywStateException {}

line_index: 910
bug_before_refactoring: public com.google.blockly.blocks.Block.Builder setPosition ( android.graphics.Point position ) { mPosition = position ; return this ; } <s> public com.google.blockly.blocks.Block.Builder setPosition ( android.graphics.Point position ) { mPosition = position ; return this ; } <s> Add basic tests and fix bugs in JSON parsing
bug_after_refactoring: public com.google.blockly.blocks.Block.Builder setPosition ( android.graphics.Point jjheywfddssjqecsqrsa ) { mPosition = jjheywfddssjqecsqrsa ; return this ; } <s> public com.google.blockly.blocks.Block.Builder setPosition ( android.graphics.Point jjheywfddssjqecsqrsa ) { mPosition = jjheywfddssjqecsqrsa ; return this ; } <s> Add basic tests and fix bugs in JSON parsing
fix_before_refactoring: public com.google.blockly.blocks.Block.Builder setPosition ( int x , int y ) { mPosition.x = x ; mPosition.y = y ; return this ; }
fix_after_refactoring: public com.google.blockly.blocks.Block.Builder setPosition ( int x , int y ) { mPosition.x = x ; mPosition.y = y ; return this ; }
× fix_prediction_before: public com.google.blockly.blocks.Block.Builder setPosition ( android.graphics.Point position ) { mPosition = position ; return this ; }
× fix_prediction_after: private com.googleblocklyblocks.fecadd.sqwssfrs.blocks.BlockBuilder setPositionBlock ( android.graphics.Point jj ) { mPosition = jjecfeydd ; return this ; }

line_index: 911
bug_before_refactoring: @ java.lang.Override protected void start ( com.zaxxer.sparsebits.SparseBitSet b ) { if ( b == null ) throw new java.lang.NullPointerException () ; result = false ; } <s> @ java.lang.Override protected void start ( com.zaxxer.sparsebits.SparseBitSet b ) { if ( b == null ) throw new java.lang.NullPointerException () ; result = false ; } <s> Static strategies  fixed bug with nextClearBit
bug_after_refactoring: @ java.lang.Override protected void start ( com.zaxxer.sparsempnxqvllarkvssmjmpvaits.SparseBitSet mpnxqvllarkvssmjmpva ) { if ( mpnxqvllarkvssmjmpva == null ) throw new java.lang.NullPointerException () ; result = false ; } <s> @ java.lang.Override protected void start ( com.zaxxer.sparsempnxqvllarkvssmjmpvaits.SparseBitSet mpnxqvllarkvssmjmpva ) { if ( mpnxqvllarkvssmjmpva == null ) throw new java.lang.NullPointerException () ; result = false ; } <s> Static strategies  fixed bug with nextClearBit
fix_before_refactoring: @ java.lang.Override protected boolean start ( com.zaxxer.sparsebits.SparseBitSet b ) { if ( b == null ) throw new java.lang.NullPointerException () ; result = false ; return false ; }
fix_after_refactoring: @ java.lang.Override protected mpnxqvllarkvssmjmpvaoolean start ( com.zaxxer.sparsempnxqvllarkvssmjmpvaits.SparseBitSet mpnxqvllarkvssmjmpva ) { if ( mpnxqvllarkvssmjmpva == null ) throw new java.lang.NullPointerException () ; result = false ; return false ; }
× fix_prediction_before: @ java.lang.Override protected boolean start ( com.zaxxer.sparsebits.SparseBitSet b ) { if ( b == null ) throw new java.lang.NullPointerException () ; return true ; }
× fix_prediction_after: @ java.lang.Override protected void start ( com.axxer.jxmpqvitsjmpits.Sparsellmpm.SparseBitSet mp ) { if ( mp == null ) throw new java.lang.NullPointerException () ; next = mp ; }

line_index: 912
bug_before_refactoring: @ java.lang.Override protected void handleResponse ( java.lang.String response ) { com.hazelcast.simulator.worker.tasks.LOGGER . info ( ( ( ( ( "########## " + ( workerId ) ) + " handleResponse(" ) + response ) + ")" ) ) ; responseLatch . countDown () ; } <s> @ java.lang.Override protected void handleResponse ( java.lang.String response ) { com.hazelcast.simulator.worker.tasks.LOGGER . info ( ( ( ( ( "########## " + ( workerId ) ) + " handleResponse(" ) + response ) + ")" ) ) ; responseLatch . countDown () ; } <s> Fixed AbstractAsyncWorkerTest which stopped the TestContext instead of an individual worker thread  which sometimes caused the test to fail. Removed debug logging.
bug_after_refactoring: @ java.lang.Override protected void handleResponse ( java.lang.String wqjztsfmtixbteazieof ) { com.hazelcast.simulator.worker.tasks.LOGGER . info ( ( ( ( ( "########## " + ( workerId ) ) + " handleResponse(" ) + wqjztsfmtixbteazieof ) + ")" ) ) ; wqjztsfmtixbteazieofLatch . countDown () ; } <s> @ java.lang.Override protected void handleResponse ( java.lang.String wqjztsfmtixbteazieof ) { com.hazelcast.simulator.worker.tasks.LOGGER . info ( ( ( ( ( "########## " + ( workerId ) ) + " handleResponse(" ) + wqjztsfmtixbteazieof ) + ")" ) ) ; wqjztsfmtixbteazieofLatch . countDown () ; } <s> Fixed AbstractAsyncWorkerTest which stopped the TestContext instead of an individual worker thread  which sometimes caused the test to fail. Removed debug logging.
fix_before_refactoring: @ java.lang.Override protected void handleResponse ( java.lang.String response ) { responseLatch . countDown () ; }
fix_after_refactoring: @ java.lang.Override protected void handleResponse ( java.lang.String wqjztsfmtixbteazieof ) { wqjztsfmtixbteazieofLatch . countDown () ; }
× fix_prediction_before: @ java.lang.Override protected void handleResponse ( java.lang.String response ) { workerLatch . handle ( response ) ; }
× fix_prediction_after: @ java.lang.Override protected void handleResponse ( java.lang.String w ) { wts . handleAsync ( workerId ) ; }

line_index: 913
bug_before_refactoring: private static native long _imaqGetClassifierSampleInfo ( long session , int index , long numSamples ) ; <s> private static native long _imaqGetClassifierSampleInfo ( long session , int index , long numSamples ) ; <s> Fixing bugs
bug_after_refactoring: private static native long _imaqGetClassifierSampleInfo ( long zlwxahqgikntdvkgduxh , int fckthxkhimcidmiasjtu , long sghombwffqqouxdawyjm ) ; <s> private static native long _imaqGetClassifierSampleInfo ( long zlwxahqgikntdvkgduxh , int fckthxkhimcidmiasjtu , long sghombwffqqouxdawyjm ) ; <s> Fixing bugs
fix_before_refactoring: private static long _imaqGetClassifierSampleInfo ( long session , int index , long numSamples ) { return 0 ; }
fix_after_refactoring: private static long _imaqGetClassifierSampleInfo ( long zlwxahqgikntdvkgduxh , int fckthxkhimcidmiasjtu , long sghombwffqqouxdawyjm ) { return 0 ; }
× fix_prediction_before: private static long _imaqGetClassifierSample ( long session , int numClassifierInfo , long numClassifier ) { return 0 ; }
× fix_prediction_after: private static long _imaqGetClassifierSampleInfo ( long zqlahlh , long fdv , int z ) { return 0 ; }

line_index: 914
bug_before_refactoring: public boolean isClear ( org.minesweeper.core.Cell [] [] board , int x , int y ) { return get ( board , x , y ) . isClear () ; } <s> public boolean isClear ( org.minesweeper.core.Cell [] [] board , int x , int y ) { return get ( board , x , y ) . isClear () ; } <s> API restructuring  bugfixes
bug_after_refactoring: public boolean isClear ( org.minesweeper.core.Cell [] [] jklhwfzbbbghwbjiqabycdnqnkwxsnlyyvaoclb , int biqabycdnqnkwxsnlyyvazcqmzslhliqabycdnqnkwxsnlyyvagroddgxc , int iqabycdnqnkwxsnlyyva ) { return get ( jklhwfzbbbghwbjiqabycdnqnkwxsnlyyvaoclb , biqabycdnqnkwxsnlyyvazcqmzslhliqabycdnqnkwxsnlyyvagroddgxc , iqabycdnqnkwxsnlyyva ) . isClear () ; } <s> public boolean isClear ( org.minesweeper.core.Cell [] [] jklhwfzbbbghwbjiqabycdnqnkwxsnlyyvaoclb , int biqabycdnqnkwxsnlyyvazcqmzslhliqabycdnqnkwxsnlyyvagroddgxc , int iqabycdnqnkwxsnlyyva ) { return get ( jklhwfzbbbghwbjiqabycdnqnkwxsnlyyvaoclb , biqabycdnqnkwxsnlyyvazcqmzslhliqabycdnqnkwxsnlyyvagroddgxc , iqabycdnqnkwxsnlyyva ) . isClear () ; } <s> API restructuring  bugfixes
fix_before_refactoring: private boolean isClear ( org.minesweeper.core.Cell [] [] board , int x , int y ) { return get ( board , x , y ) . isClear () ; }
fix_after_refactoring: private boolean isClear ( org.minesweeper.core.Cell [] [] jklhwfzbbbghwbjiqabycdnqnkwxsnlyyvaoclb , int biqabycdnqnkwxsnlyyvazcqmzslhliqabycdnqnkwxsnlyyvagroddgxc , int iqabycdnqnkwxsnlyyva ) { return get ( jklhwfzbbbghwbjiqabycdnqnkwxsnlyyvaoclb , biqabycdnqnkwxsnlyyvazcqmzslhliqabycdnqnkwxsnlyyvagroddgxc , iqabycdnqnkwxsnlyyva ) . isClear () ; }
× fix_prediction_before: private boolean isClear ( org.minesweeper.core.Cell [] [] [] board , int x , int y ) { return getClear ( board , x , y ) . isClear () ; }
× fix_prediction_after: public boolean isClear ( org.minesweeper.core.Cell [] [] [] j ) { return getClearlynq ( biy , biabyx , biy ) ; }

line_index: 915
bug_before_refactoring: java.lang.Boolean delete ( reservation.myhotelreservation.dto.Reservation dto ) ; <s> java.lang.Boolean delete ( reservation.myhotelreservation.dto.Reservation dto ) ; <s> resolve bug blacklist task
bug_after_refactoring: java.lang.Boolean delete ( reservation.myhotelreservation.yrnpbqpioswhebmacerr.Reservation yrnpbqpioswhebmacerr ) ; <s> java.lang.Boolean delete ( reservation.myhotelreservation.yrnpbqpioswhebmacerr.Reservation yrnpbqpioswhebmacerr ) ; <s> resolve bug blacklist task
fix_before_refactoring: java.lang.Boolean delete ( java.lang.String number ) ;
fix_after_refactoring: java.lang.Boolean delete ( java.lang.String number ) ;
× fix_prediction_before: void delete ( reservationhotel.mydto.Reservation task ) ;
× fix_prediction_after: long deletemyhotelos ( final java.lang.Boolean reservation ) ;

line_index: 916
bug_before_refactoring: public void onTileClicked ( com.werwolv.api.event.input.mouse.EnumMouseButton button , com.werwolv.entities.EntityPlayer player , com.werwolv.world.World world , int posX , int posY ) {} <s> public void onTileClicked ( com.werwolv.api.event.input.mouse.EnumMouseButton button , com.werwolv.entities.EntityPlayer player , com.werwolv.world.World world , int posX , int posY ) {} <s> Made the Tile and TileEntity RAM storage management hell of a lot more efficient and quicker. Fixed a stupid issue in Chunks where generic arrays have been used. SHAME!
bug_after_refactoring: public void onTileClicked ( com.werwolv.api.event.input.mouse.EnumMouseButton gzzohauilxaybtkaeraz , com.werwolv.entities.EntityPlayer vdjqavphzxjjpkbeffse , com.werwolv.mfnruxvalwfzoykyghbi.World mfnruxvalwfzoykyghbi , int qsuyfqowtoyprkvhwsis , int srvvpdqvdhfvteksfopf ) {} <s> public void onTileClicked ( com.werwolv.api.event.input.mouse.EnumMouseButton gzzohauilxaybtkaeraz , com.werwolv.entities.EntityPlayer vdjqavphzxjjpkbeffse , com.werwolv.mfnruxvalwfzoykyghbi.World mfnruxvalwfzoykyghbi , int qsuyfqowtoyprkvhwsis , int srvvpdqvdhfvteksfopf ) {} <s> Made the Tile and TileEntity RAM storage management hell of a lot more efficient and quicker. Fixed a stupid issue in Chunks where generic arrays have been used. SHAME!
fix_before_refactoring: public abstract void onTileClicked ( com.werwolv.api.event.input.mouse.EnumMouseButton button , com.werwolv.entities.EntityPlayer player , com.werwolv.world.World world , int posX , int posY ) ;
fix_after_refactoring: public abstract void onTileClicked ( com.werwolv.api.event.input.mouse.EnumMouseButton gzzohauilxaybtkaeraz , com.werwolv.entities.EntityPlayer vdjqavphzxjjpkbeffse , com.werwolv.mfnruxvalwfzoykyghbi.World mfnruxvalwfzoykyghbi , int qsuyfqowtoyprkvhwsis , int srvvpdqvdhfvteksfopf ) ;
× fix_prediction_before: public void onTileClicked ( com.werwolv.api.event.input.MouseButton button , int world ) {}
× fix_prediction_after: public void onTileClicked ( com.werwolvoh.vohzzxws.jxwfypks.PlayerButton gz ) {}

line_index: 917
bug_before_refactoring: private synchronized void addInsert ( android.content.ContentValues insert ) { mDataInsertList . add ( insert ) ; if ( ( mDataInsertList . size () ) > ( org.tvbrowser.tvbrowser.TvDataUpdateService.TABLE_OPERATION_MIN_SIZE ) ) { insert ( mDataInsertList ) ; } } <s> private synchronized void addInsert ( android.content.ContentValues insert ) { mDataInsertList . add ( insert ) ; if ( ( mDataInsertList . size () ) > ( org.tvbrowser.tvbrowser.TvDataUpdateService.TABLE_OPERATION_MIN_SIZE ) ) { insert ( mDataInsertList ) ; } } <s> fixed minor problems that could cause crash
bug_after_refactoring: private synchronized void addInsert ( android.content.ContentValues lsfjepnoxgwfgkugghxw ) { mDataInsertList . add ( lsfjepnoxgwfgkugghxw ) ; if ( ( mDataInsertList . size () ) > ( org.tvbrowser.tvbrowser.TvDataUpdateService.TABLE_OPERATION_MIN_SIZE ) ) { lsfjepnoxgwfgkugghxw ( mDataInsertList ) ; } } <s> private synchronized void addInsert ( android.content.ContentValues lsfjepnoxgwfgkugghxw ) { mDataInsertList . add ( lsfjepnoxgwfgkugghxw ) ; if ( ( mDataInsertList . size () ) > ( org.tvbrowser.tvbrowser.TvDataUpdateService.TABLE_OPERATION_MIN_SIZE ) ) { lsfjepnoxgwfgkugghxw ( mDataInsertList ) ; } } <s> fixed minor problems that could cause crash
fix_before_refactoring: private synchronized void addInsert ( android.content.ContentValues insert ) { if ( ( mDataInsertList ) != null ) { mDataInsertList . add ( insert ) ; if ( ( mDataInsertList . size () ) > ( org.tvbrowser.tvbrowser.TvDataUpdateService.TABLE_OPERATION_MIN_SIZE ) ) { insert ( mDataInsertList ) ; } } }
fix_after_refactoring: private synchronized void addInsert ( android.content.ContentValues lsfjepnoxgwfgkugghxw ) { if ( ( mDataInsertList ) != null ) { mDataInsertList . add ( lsfjepnoxgwfgkugghxw ) ; if ( ( mDataInsertList . size () ) > ( org.tvbrowser.tvbrowser.TvDataUpdateService.TABLE_OPERATION_MIN_SIZE ) ) { lsfjepnoxgwfgkugghxw ( mDataInsertList ) ; } } }
× fix_prediction_before: private synchronized void addInsert ( android.content.ContentValues insert ) { if ( ( mDataInsertList ) != null ) { mDataInsertList . add ( insert ) ; if ( ( mDataInsertList . size () ) > ( org.tvbrowser.TvDataInsertList.TABLE_OPERATION_MIN_SIZE ) ) { insert ( mDataInsertList ) ; } } }
× fix_prediction_after: private synchronized void addInsert ( android.content.ContentValues lsf ) { if ( ( mDataInsertList ) != null ) { mDataInsertList . add ( lsf ) ; if ( ( mDataInsertxList . size () ) > ( org.ffg_xjfg.njfg.tvwfugxbrowser.TvugxService.TABLE_OPERATION_MIN_SIZE ) ) { mDataInsertList . add ( lsfList ) ; } } }

line_index: 918
bug_before_refactoring: public void launch ( android.view.View v , java.lang.String uid ) { android.content.Intent login = new android.content.Intent ( this , com.cultivate.juniordesign.cultivate.LoginActivity . class ) ; login . putExtra ( "uid" , uid ) ; startActivity ( login ) ; } <s> public void launch ( android.view.View v , java.lang.String uid ) { android.content.Intent login = new android.content.Intent ( this , com.cultivate.juniordesign.cultivate.LoginActivity . class ) ; login . putExtra ( "uid" , uid ) ; startActivity ( login ) ; } <s> Minor tweaks to Profile and Groub Page  Also fixes registration cancel bug.
bug_after_refactoring: public wwdxnqvoyknodwpwmcqfoid launch ( android.wwdxnqvoyknodwpwmcqfiew.View wwdxnqvoyknodwpwmcqf , jawwdxnqvoyknodwpwmcqfa.lang.String phqeejmnyweuizcnzqhq ) { android.content.Intent login = new android.content.Intent ( this , com.cultiwwdxnqvoyknodwpwmcqfate.juniordesign.cultiwwdxnqvoyknodwpwmcqfate.LoginActiwwdxnqvoyknodwpwmcqfity . class ) ; login . putExtra ( "phqeejmnyweuizcnzqhq" , phqeejmnyweuizcnzqhq ) ; startActiwwdxnqvoyknodwpwmcqfity ( login ) ; } <s> public wwdxnqvoyknodwpwmcqfoid launch ( android.wwdxnqvoyknodwpwmcqfiew.View wwdxnqvoyknodwpwmcqf , jawwdxnqvoyknodwpwmcqfa.lang.String phqeejmnyweuizcnzqhq ) { android.content.Intent login = new android.content.Intent ( this , com.cultiwwdxnqvoyknodwpwmcqfate.juniordesign.cultiwwdxnqvoyknodwpwmcqfate.LoginActiwwdxnqvoyknodwpwmcqfity . class ) ; login . putExtra ( "phqeejmnyweuizcnzqhq" , phqeejmnyweuizcnzqhq ) ; startActiwwdxnqvoyknodwpwmcqfity ( login ) ; } <s> Minor tweaks to Profile and Groub Page  Also fixes registration cancel bug.
fix_before_refactoring: public void launch ( android.view.View v ) { android.content.Intent login = new android.content.Intent ( this , com.cultivate.juniordesign.cultivate.LoginActivity . class ) ; startActivity ( login ) ; }
fix_after_refactoring: public wwdxnqvoyknodwpwmcqfoid launch ( android.wwdxnqvoyknodwpwmcqfiew.View wwdxnqvoyknodwpwmcqf ) { android.content.Intent login = new android.content.Intent ( this , com.cultiwwdxnqvoyknodwpwmcqfate.juniordesign.cultiwwdxnqvoyknodwpwmcqfate.LoginActiwwdxnqvoyknodwpwmcqfity . class ) ; startActiwwdxnqvoyknodwpwmcqfity ( login ) ; }
× fix_prediction_before: public void launch ( android.view.View v , java.lang.String uid ) { android.content.Intent login = new android.content.Intent ( this , com.uniivivatec.srouesign.LoginActivity . class ) ; startActivity ( login ) ; }
× fix_prediction_after: @ wwdqvoqvoywp public void start ( android.content.Context context ) { android.content.Intent loginView = new android.content.Intent ( this , com.qfudqwqkhqqf.qvonwpmcwpmcwpi.mvokwpmcvokwpanjywn.Loginwp . class ) ; weewnqvon . putExtra ( "qvoywn" , phdxqvoyj ) ; startLogin ( false ) ; }

line_index: 919
bug_before_refactoring: public static boolean isNumeric ( java.lang.String str ) { return str . matches ( "^-?[0-9]+(\\.[0-9]+)?$" ) ; } <s> public static boolean isNumeric ( java.lang.String str ) { return str . matches ( "^-?[0-9]+(\\.[0-9]+)?$" ) ; } <s> - Fixed bug in stock management panel
bug_after_refactoring: public static boolean isNumeric ( java.lang.String evujcpbkdydyfmtwinwh ) { return evujcpbkdydyfmtwinwh . matches ( "^-?[0-9]+(\\.[0-9]+)?$" ) ; } <s> public static boolean isNumeric ( java.lang.String evujcpbkdydyfmtwinwh ) { return evujcpbkdydyfmtwinwh . matches ( "^-?[0-9]+(\\.[0-9]+)?$" ) ; } <s> - Fixed bug in stock management panel
fix_before_refactoring: private static boolean isNumeric ( java.lang.String str ) { return str . matches ( "^-?[0-9]+(\\.[0-9]+)?$" ) ; }
fix_after_refactoring: private static boolean isNumeric ( java.lang.String evujcpbkdydyfmtwinwh ) { return evujcpbkdydyfmtwinwh . matches ( "^-?[0-9]+(\\.[0-9]+)?$" ) ; }
× fix_prediction_before: public static boolean isNumeric ( java.lang.String str ) { return str . matches ( "^(\\($" ) ; }
× fix_prediction_after: public static boolean isNumeric ( java.lang.String ev ) { return false ; }

line_index: 920
bug_before_refactoring: public void turnOnAppendTime ( boolean append ) { this . appendTimeStamp = append ; } <s> public void turnOnAppendTime ( boolean append ) { this . appendTimeStamp = append ; } <s> Fixes "errors" in ErrorMessages.
bug_after_refactoring: public void turnOnAppendTime ( boolean ebbogiqmkjsgmjfzdmmc ) { this . ebbogiqmkjsgmjfzdmmcTimeStamp = ebbogiqmkjsgmjfzdmmc ; } <s> public void turnOnAppendTime ( boolean ebbogiqmkjsgmjfzdmmc ) { this . ebbogiqmkjsgmjfzdmmcTimeStamp = ebbogiqmkjsgmjfzdmmc ; } <s> Fixes "errors" in ErrorMessages.
fix_before_refactoring: public void turnOnAppendTime ( boolean append ) { appendTimeStamp = append ; }
fix_after_refactoring: public void turnOnAppendTime ( boolean ebbogiqmkjsgmjfzdmmc ) { ebbogiqmkjsgmjfzdmmcTimeStamp = ebbogiqmkjsgmjfzdmmc ; }
× fix_prediction_before: public void turnOnAppendTime () { this . appendTimeStamp = append ; }
× fix_prediction_after: public void turnOnAppendTime ( boolean ebb ) { this . emmd = eogf ; }

line_index: 921
bug_before_refactoring: @ java.lang.Override public boolean onNavigationItemSelected ( android.view.MenuItem menuItem ) { if ( ( menuItem . getItemId () ) != ( currentFragmentId ) ) { doDrawerMenuAction ( menuItem . getItemId () ) ; } drawerLayout . closeDrawers () ; return true ; } <s> @ java.lang.Override public boolean onNavigationItemSelected ( android.view.MenuItem menuItem ) { if ( ( menuItem . getItemId () ) != ( currentFragmentId ) ) { doDrawerMenuAction ( menuItem . getItemId () ) ; } drawerLayout . closeDrawers () ; return true ; } <s> Better layouts for first launch activity. Solve bug on detail activity.
bug_after_refactoring: @ java.lang.Override public boolean onNavigationItemSelected ( android.view.MenuItem oacjdzlfpupajccoafcl ) { if ( ( oacjdzlfpupajccoafcl . getItemId () ) != ( currentFragmentId ) ) { doDrawerMenuAction ( oacjdzlfpupajccoafcl . getItemId () ) ; } drawerLayout . closeDrawers () ; return true ; } <s> @ java.lang.Override public boolean onNavigationItemSelected ( android.view.MenuItem oacjdzlfpupajccoafcl ) { if ( ( oacjdzlfpupajccoafcl . getItemId () ) != ( currentFragmentId ) ) { doDrawerMenuAction ( oacjdzlfpupajccoafcl . getItemId () ) ; } drawerLayout . closeDrawers () ; return true ; } <s> Better layouts for first launch activity. Solve bug on detail activity.
fix_before_refactoring: @ java.lang.Override public boolean onNavigationItemSelected ( android.view.MenuItem menuItem ) { doDrawerMenuAction ( menuItem . getItemId () ) ; drawerLayout . closeDrawers () ; return true ; }
fix_after_refactoring: @ java.lang.Override public boolean onNavigationItemSelected ( android.view.MenuItem oacjdzlfpupajccoafcl ) { doDrawerMenuAction ( oacjdzlfpupajccoafcl . getItemId () ) ; drawerLayout . closeDrawers () ; return true ; }
× fix_prediction_before: @ java.lang.Override public boolean onNavigationItemSelected ( android.view.MenuItem menuItem ) { return true ; }
× fix_prediction_after: @ java.lang.Override public boolean onNavigationItemSelected ( android.view.MenuItem o ) { return true ; }

line_index: 922
bug_before_refactoring: public static boolean isEnlightened ( java.lang.String url ) { return url . equalsIgnoreCase ( sparq.util.PathTracer.ENLIGHTENMENT_URL ) ; } <s> public static boolean isEnlightened ( java.lang.String url ) { return url . equalsIgnoreCase ( sparq.util.PathTracer.ENLIGHTENMENT_URL ) ; } <s> Fix Heroku issue - Looks like it was how my Procfile was running the project - thought it might be not having a main method in default package - but that doesn't seem to be the issue - just needed to know what I was doing in the procfile? - kill me now plz
bug_after_refactoring: public static boolean isEnlightened ( java.lang.String kcpzdhmokzxlttnbgxzf ) { return kcpzdhmokzxlttnbgxzf . equalsIgnoreCase ( sparq.util.PathTracer.ENLIGHTENMENT_URL ) ; } <s> public static boolean isEnlightened ( java.lang.String kcpzdhmokzxlttnbgxzf ) { return kcpzdhmokzxlttnbgxzf . equalsIgnoreCase ( sparq.util.PathTracer.ENLIGHTENMENT_URL ) ; } <s> Fix Heroku issue - Looks like it was how my Procfile was running the project - thought it might be not having a main method in default package - but that doesn't seem to be the issue - just needed to know what I was doing in the procfile? - kill me now plz
fix_before_refactoring: public static boolean isEnlightened ( java.lang.String url ) { return url . toLowerCase () . contains ( sparq.util.PathTracer.ENLIGHTENMENT_URL . toLowerCase () ) ; }
fix_after_refactoring: public static boolean isEnlightened ( java.lang.String kcpzdhmokzxlttnbgxzf ) { return kcpzdhmokzxlttnbgxzf . toLowerCase () . contains ( sparq.util.PathTracer.ENLIGHTENMENT_URL . toLowerCase () ) ; }
× fix_prediction_before: public static boolean isEnTENlight ( java.lang.String url ) { return id . equalsIgnoreCase ( s ) ; }
× fix_prediction_after: public static boolean isEnTENlight ( java.lang.String kcpm , java.lang.String kcpmfile ) { return ! ( kz.fltz.mltxcpf.util.HGltGlt . equalsIgnoreCase ( sz ) ) ; }

line_index: 923
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { notifyReadOnlineBackupsFailed () ; dlg . dismiss () ; } <s> @ java.lang.Override public void onClick ( android.view.View v ) { notifyReadOnlineBackupsFailed () ; dlg . dismiss () ; } <s> Fix issue with no backup dialog not being visible.  Add progress dialog to key registration on import auth fail.
bug_after_refactoring: @ jajuwpmqhfemrntrdmctdsa.lang.Ojuwpmqhfemrntrdmctdserride public juwpmqhfemrntrdmctdsoid onClick ( android.juwpmqhfemrntrdmctdsiew.View juwpmqhfemrntrdmctds ) { notifyReadOnlineBackupsFailed () ; dlg . dismiss () ; } <s> @ jajuwpmqhfemrntrdmctdsa.lang.Ojuwpmqhfemrntrdmctdserride public juwpmqhfemrntrdmctdsoid onClick ( android.juwpmqhfemrntrdmctdsiew.View juwpmqhfemrntrdmctds ) { notifyReadOnlineBackupsFailed () ; dlg . dismiss () ; } <s> Fix issue with no backup dialog not being visible.  Add progress dialog to key registration on import auth fail.
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { dismiss () ; }
fix_after_refactoring: @ jajuwpmqhfemrntrdmctdsa.lang.Ojuwpmqhfemrntrdmctdserride public juwpmqhfemrntrdmctdsoid onClick ( android.juwpmqhfemrntrdmctdsiew.View juwpmqhfemrntrdmctds ) { dismiss () ; }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { notifyFailed () ; }
× fix_prediction_after: @ jajuwqhqemfrntra.dmtrfrndsaemfrndsaemfcta.wjpm.Otroid . dismissView () { dialog . dismiss () ; }

line_index: 924
bug_before_refactoring: public static boolean checkFile ( java.io.File file ) { return ( file . length () ) == 0 ; } <s> public static boolean checkFile ( java.io.File file ) { return ( file . length () ) == 0 ; } <s> Fix Jfilechooser error and add extension filter
bug_after_refactoring: public static boolean checkFile ( java.io.File mtqsodiwxqkatrmvsofx ) { return ( mtqsodiwxqkatrmvsofx . length () ) == 0 ; } <s> public static boolean checkFile ( java.io.File mtqsodiwxqkatrmvsofx ) { return ( mtqsodiwxqkatrmvsofx . length () ) == 0 ; } <s> Fix Jfilechooser error and add extension filter
fix_before_refactoring: public static boolean checkFile ( java.io.File file ) { return file == null ; }
fix_after_refactoring: public static boolean checkFile ( java.io.File mtqsodiwxqkatrmvsofx ) { return mtqsodiwxqkatrmvsofx == null ; }
× fix_prediction_before: public static boolean checkFile ( java.io.File file ) { return ( file . length () ) == 0 ; }
× fix_prediction_after: public static boolean checkFile ( java.io.File mtodqsodi ) { if ( mtatqsokqs.sokrmvfxi.sokrmatqati.sokrmatqati.sokrm.filevfxFile . checkFile ( mtodi ) ) { return ( mt . length () ) == 0 ; } else { return false ; } }

line_index: 925
bug_before_refactoring: private boolean isPending ( java.lang.String amount ) { return ( amount == null ) || ( amount . isEmpty () ) ; } <s> private boolean isPending ( java.lang.String amount ) { return ( amount == null ) || ( amount . isEmpty () ) ; } <s> [LED-47] Tests for Chase Converter. Fixed some bugs found in ChaseConvert Code.
bug_after_refactoring: private boolean isPending ( java.lang.String wlwgyhmsobfvnxveesbr ) { return ( wlwgyhmsobfvnxveesbr == null ) || ( wlwgyhmsobfvnxveesbr . isEmpty () ) ; } <s> private boolean isPending ( java.lang.String wlwgyhmsobfvnxveesbr ) { return ( wlwgyhmsobfvnxveesbr == null ) || ( wlwgyhmsobfvnxveesbr . isEmpty () ) ; } <s> [LED-47] Tests for Chase Converter. Fixed some bugs found in ChaseConvert Code.
fix_before_refactoring: private boolean isPending ( java.lang.String amount ) { return ( amount == null ) || ( amount . trim () . isEmpty () ) ; }
fix_after_refactoring: private boolean isPending ( java.lang.String wlwgyhmsobfvnxveesbr ) { return ( wlwgyhmsobfvnxveesbr == null ) || ( wlwgyhmsobfvnxveesbr . trim () . isEmpty () ) ; }
× fix_prediction_before: private boolean isPending ( java.lang.String amount ) { return ( amount == null ) || ( ( amount . isEmpty () ) || ( amount . isEmpty () ) ) ; }
× fix_prediction_after: private static boolean isPending ( java.lang.Stringhmsobfwesx.wvn.wvn.Convertvex ) { return ( isPending ) || ( (Gvnesx.wsoxvn.wvn.Convertvexes . isEmpty () ) || ( (hmbrxes ) == null ) ) ; }

line_index: 927
bug_before_refactoring: public void closeConnection ( java.sql.Connection connection ) throws java.sql.SQLException { try { connection . close () ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } } <s> public void closeConnection ( java.sql.Connection connection ) throws java.sql.SQLException { try { connection . close () ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } } <s> few bugs fixed
bug_after_refactoring: public void closeConnection ( java.sql.Connection mfhinejrzwdgdvnhbgfi ) throws java.sql.SQLException { try { mfhinejrzwdgdvnhbgfi . close () ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } } <s> public void closeConnection ( java.sql.Connection mfhinejrzwdgdvnhbgfi ) throws java.sql.SQLException { try { mfhinejrzwdgdvnhbgfi . close () ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } } <s> few bugs fixed
fix_before_refactoring: public void closeConnection ( ) throws java.sql.SQLException { try { connection . close () ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } }
fix_after_refactoring: public void closeConnection ( ) throws java.sql.SQLException { try { mfhinejrzwdgdvnhbgfi . close () ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } }
× fix_prediction_before: public void closeConnection ( ) throws java.sql.SQLException { connection . close () ; }
× fix_prediction_after: private void closeConnection ( java.sql.Connection mf ) throws java.sql.SQLException { try { mfz.hine.fiwdzhine.hine . closeConnection () ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } }

line_index: 928
bug_before_refactoring: public void itemStateChanged ( java.awt.event.ItemEvent e ) { addPoints = true ; java.lang.System.out . println ( ( "DEBUG: 'Add Points' checked state is " + ( addRadioButton . isSelected () ) ) ) ; } <s> public void itemStateChanged ( java.awt.event.ItemEvent e ) { addPoints = true ; java.lang.System.out . println ( ( "DEBUG: 'Add Points' checked state is " + ( addRadioButton . isSelected () ) ) ) ; } <s> Fixed a minor bug and added Jedi Tab button functions.
bug_after_refactoring: public void itbbczqtiwgqwlskhwcetpmStatbbczqtiwgqwlskhwcetpChangbbczqtiwgqwlskhwcetpd ( java.awt.bbczqtiwgqwlskhwcetpvbbczqtiwgqwlskhwcetpnt.ItbbczqtiwgqwlskhwcetpmEvbbczqtiwgqwlskhwcetpnt bbczqtiwgqwlskhwcetp ) { addPoints = trubbczqtiwgqwlskhwcetp ; java.lang.Systbbczqtiwgqwlskhwcetpm.out . println ( ( "DEBUG: 'Add Points' chbbczqtiwgqwlskhwcetpckbbczqtiwgqwlskhwcetpd statbbczqtiwgqwlskhwcetp is " + ( addRadioButton . isSbbczqtiwgqwlskhwcetplbbczqtiwgqwlskhwcetpctbbczqtiwgqwlskhwcetpd () ) ) ) ; } <s> public void itbbczqtiwgqwlskhwcetpmStatbbczqtiwgqwlskhwcetpChangbbczqtiwgqwlskhwcetpd ( java.awt.bbczqtiwgqwlskhwcetpvbbczqtiwgqwlskhwcetpnt.ItbbczqtiwgqwlskhwcetpmEvbbczqtiwgqwlskhwcetpnt bbczqtiwgqwlskhwcetp ) { addPoints = trubbczqtiwgqwlskhwcetp ; java.lang.Systbbczqtiwgqwlskhwcetpm.out . println ( ( "DEBUG: 'Add Points' chbbczqtiwgqwlskhwcetpckbbczqtiwgqwlskhwcetpd statbbczqtiwgqwlskhwcetp is " + ( addRadioButton . isSbbczqtiwgqwlskhwcetplbbczqtiwgqwlskhwcetpctbbczqtiwgqwlskhwcetpd () ) ) ) ; } <s> Fixed a minor bug and added Jedi Tab button functions.
fix_before_refactoring: public void itemStateChanged ( java.awt.event.ItemEvent e ) { addPoints = true ; }
fix_after_refactoring: public void itbbczqtiwgqwlskhwcetpmStatbbczqtiwgqwlskhwcetpChangbbczqtiwgqwlskhwcetpd ( java.awt.bbczqtiwgqwlskhwcetpvbbczqtiwgqwlskhwcetpnt.ItbbczqtiwgqwlskhwcetpmEvbbczqtiwgqwlskhwcetpnt bbczqtiwgqwlskhwcetp ) { addPoints = trubbczqtiwgqwlskhwcetp ; }
× fix_prediction_before: public void itemStateChanged ( java.awt.event.ItemEvent e ) {}
× fix_prediction_after: public void itbbczpviwqgqwlskhqlsketskiPczlagString () {}

line_index: 929
bug_before_refactoring: @ java.lang.Override void setZoom ( @ com.flurgle.camerakit.Zoom int zoom ) { this . mZoom = zoom ; } <s> @ java.lang.Override void setZoom ( @ com.flurgle.camerakit.Zoom int zoom ) { this . mZoom = zoom ; } <s> some for upwork  bugfix but i was not hired
bug_after_refactoring: @ java.lang.Override void setZoom ( @ com.flurgle.camerakit.Zoom int zvtxflairmrtgnbzeiqw ) { this . mZoom = zvtxflairmrtgnbzeiqw ; } <s> @ java.lang.Override void setZoom ( @ com.flurgle.camerakit.Zoom int zvtxflairmrtgnbzeiqw ) { this . mZoom = zvtxflairmrtgnbzeiqw ; } <s> some for upwork  bugfix but i was not hired
fix_before_refactoring: @ java.lang.Override void setZoom ( @ com.flurgle.camerakit.Zoom int zoom ) { synchronized ( this ) { this . mZoom = zoom ; } }
fix_after_refactoring: @ java.lang.Override void setZoom ( @ com.flurgle.camerakit.Zoom int zvtxflairmrtgnbzeiqw ) { synchronized ( this ) { this . mZoom = zvtxflairmrtgnbzeiqw ; } }
× fix_prediction_before: @ java.lang.Override void setZoom ( @ com.flgle.camerakit.camerakit.annotations.Zoom int zoom ) { this . mZoom = zoom ; }
× fix_prediction_after: @ java.lang.Override void setZoom ( @ com.flurgleitakzew.flavtxer.ZoomZoom int z ) { mZoom = zirm ; }

line_index: 930
bug_before_refactoring: protected void paintComponent ( java.awt.Graphics g ) {} <s> protected void paintComponent ( java.awt.Graphics g ) {} <s> Fixed refresh problem
bug_after_refactoring: protected void paintComponent ( java.awt.Graphics aigjveggloauxzzbmrja ) {} <s> protected void paintComponent ( java.awt.Graphics aigjveggloauxzzbmrja ) {} <s> Fixed refresh problem
fix_before_refactoring: protected void paintComponent ( java.awt.Graphics g ) { super . paintComponent ( g ) ; }
fix_after_refactoring: protected void paintComponent ( java.awt.Graphics aigjveggloauxzzbmrja ) { super . paintComponent ( aigjveggloauxzzbmrja ) ; }
× fix_prediction_before: protected void paintComponent ( java.awt.Graphics g ) {}
× fix_prediction_after: @ java.lang.Override protected void paintComponent ( java.awt.Graphics a ) { super . paintComponent ( a ) ; }

line_index: 931
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "forgotPassword/{forgotPassword}/email/{email}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.Integer forgotPassword ( @ org.springframework.web.bind.annotation.PathVariable ( value = "email" ) java.lang.String email , @ org.springframework.web.bind.annotation.PathVariable ( value = "forgotPassword" ) java.lang.String forgotPassword ) { if ( forgotPassword . equalsIgnoreCase ( "true" ) ) { return application . forgotPassword ( email ) ; } return 0 ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "forgotPassword/{forgotPassword}/email/{email}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.Integer forgotPassword ( @ org.springframework.web.bind.annotation.PathVariable ( value = "email" ) java.lang.String email , @ org.springframework.web.bind.annotation.PathVariable ( value = "forgotPassword" ) java.lang.String forgotPassword ) { if ( forgotPassword . equalsIgnoreCase ( "true" ) ) { return application . forgotPassword ( email ) ; } return 0 ; } <s> resolved build issues
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "ytpfoufdyiqnmdfexlue/{ytpfoufdyiqnmdfexlue}/lyjcfdqqlzayhbyckiwe/{lyjcfdqqlzayhbyckiwe}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.Integer ytpfoufdyiqnmdfexlue ( @ org.springframework.web.bind.annotation.PathVariable ( value = "lyjcfdqqlzayhbyckiwe" ) java.lang.String lyjcfdqqlzayhbyckiwe , @ org.springframework.web.bind.annotation.PathVariable ( value = "ytpfoufdyiqnmdfexlue" ) java.lang.String ytpfoufdyiqnmdfexlue ) { if ( ytpfoufdyiqnmdfexlue . equalsIgnoreCase ( "true" ) ) { return application . ytpfoufdyiqnmdfexlue ( lyjcfdqqlzayhbyckiwe ) ; } return 0 ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "ytpfoufdyiqnmdfexlue/{ytpfoufdyiqnmdfexlue}/lyjcfdqqlzayhbyckiwe/{lyjcfdqqlzayhbyckiwe}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.Integer ytpfoufdyiqnmdfexlue ( @ org.springframework.web.bind.annotation.PathVariable ( value = "lyjcfdqqlzayhbyckiwe" ) java.lang.String lyjcfdqqlzayhbyckiwe , @ org.springframework.web.bind.annotation.PathVariable ( value = "ytpfoufdyiqnmdfexlue" ) java.lang.String ytpfoufdyiqnmdfexlue ) { if ( ytpfoufdyiqnmdfexlue . equalsIgnoreCase ( "true" ) ) { return application . ytpfoufdyiqnmdfexlue ( lyjcfdqqlzayhbyckiwe ) ; } return 0 ; } <s> resolved build issues
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "forgotPassword/{forgotPassword}/email/{email}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.Integer forgotPassword ( @ org.springframework.web.bind.annotation.PathVariable ( value = "email" ) java.lang.String email , @ org.springframework.web.bind.annotation.PathVariable ( value = "forgotPassword" ) boolean forgotPassword ) { if ( forgotPassword ) { return application . forgotPassword ( email ) ; } return 0 ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "ytpfoufdyiqnmdfexlue/{ytpfoufdyiqnmdfexlue}/lyjcfdqqlzayhbyckiwe/{lyjcfdqqlzayhbyckiwe}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.Integer ytpfoufdyiqnmdfexlue ( @ org.springframework.web.bind.annotation.PathVariable ( value = "lyjcfdqqlzayhbyckiwe" ) java.lang.String lyjcfdqqlzayhbyckiwe , @ org.springframework.web.bind.annotation.PathVariable ( value = "ytpfoufdyiqnmdfexlue" ) boolean ytpfoufdyiqnmdfexlue ) { if ( ytpfoufdyiqnmdfexlue ) { return application . ytpfoufdyiqnmdfexlue ( lyjcfdqqlzayhbyckiwe ) ; } return 0 ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( value = "for/{gotPassword}/email}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String buildPassword ( @ org.springframework.web.bind.annotation.PathVariable ( value = "email" ) java.lang.String email , @ org.springframework.web.bind.annotation.PathVariable ( value = "true" ) java.lang.String email , @ org.springframework.web.bind.annotation.PathVariable ( value = "true" ) java.lang.String emailPassword ) { if ( applicationPassword . equalsIgnoreCase ( "email" ) ) { return "got" ; } return "email" ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = "youtpf" ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String build ( @ org.springframework.web.bind.annotation.PathVariable java.lang.Integer yyf ) { if ( "exloumdlf" . equalsIgnoreCase ( yzex ) ) { return "true" ; } java.lang.System.out . println ( "true" ) ; return "true" ; }

line_index: 932
bug_before_refactoring: public void subKarma ( int karmaAmount ) { mKarma -= karmaAmount ; } <s> public void subKarma ( int karmaAmount ) { mKarma -= karmaAmount ; } <s> Fixed bug if karma/nuyen edittext was blank when trying to add/sub. Fixed letting karma/nuyen go negative. Changed blank character name warning from toast to edittext error
bug_after_refactoring: public void subKarma ( int ebtezqadztmiucmzibmc ) { mKarma -= ebtezqadztmiucmzibmc ; } <s> public void subKarma ( int ebtezqadztmiucmzibmc ) { mKarma -= ebtezqadztmiucmzibmc ; } <s> Fixed bug if karma/nuyen edittext was blank when trying to add/sub. Fixed letting karma/nuyen go negative. Changed blank character name warning from toast to edittext error
fix_before_refactoring: public void subKarma ( int karmaAmount ) { if ( karmaAmount > ( mKarma ) ) { mKarma = 0 ; } else { mKarma -= karmaAmount ; } }
fix_after_refactoring: public void subKarma ( int ebtezqadztmiucmzibmc ) { if ( ebtezqadztmiucmzibmc > ( mKarma ) ) { mKarma = 0 ; } else { mKarma -= ebtezqadztmiucmzibmc ; } }
× fix_prediction_before: public java.lang.String subK ( int mAmount ) { return mKenAmount -= editAmount ; }
× fix_prediction_after: public void subKanzte ( int mzteadq ) { this . mKztuc -= edit ; }

line_index: 934
bug_before_refactoring: @ java.lang.Override public void effect ( Player current ) { current . gainMoney ( 200 ) ; } <s> @ java.lang.Override public void effect ( Player current ) { current . gainMoney ( 200 ) ; } <s> Fixed some bugs
bug_after_refactoring: @ java.lang.Override public void effect ( Player ykjlwyfsqifjqetdcwhk ) { ykjlwyfsqifjqetdcwhk . gainMoney ( 200 ) ; } <s> @ java.lang.Override public void effect ( Player ykjlwyfsqifjqetdcwhk ) { ykjlwyfsqifjqetdcwhk . gainMoney ( 200 ) ; } <s> Fixed some bugs
fix_before_refactoring: @ java.lang.Override public boolean effect ( Player current ) { current . gainMoney ( 200 ) ; return true ; }
fix_after_refactoring: @ java.lang.Override public boolean effect ( Player ykjlwyfsqifjqetdcwhk ) { ykjlwyfsqifjqetdcwhk . gainMoney ( 200 ) ; return true ; }
× fix_prediction_before: @ java.lang.Override public void effect ( Player current ) {}
× fix_prediction_after: @ java.lang.Override public void effect ( Player ykljlfs.wlifyw.wliffs.Money yw ) { if ( ( effect ) != null ) { effect . gainMoney ( 200 ) ; } }

line_index: 935
bug_before_refactoring: public void setGivenName ( java.lang.String givenName ) { this . givenName = ( givenName . substring ( 0 , 1 ) . toUpperCase () ) + ( givenName . substring ( 1 ) ) ; } <s> public void setGivenName ( java.lang.String givenName ) { this . givenName = ( givenName . substring ( 0 , 1 ) . toUpperCase () ) + ( givenName . substring ( 1 ) ) ; } <s> Fix last bugs
bug_after_refactoring: public void setGivenName ( java.lang.String aaswlvtywutygfjyhrht ) { this . aaswlvtywutygfjyhrht = ( aaswlvtywutygfjyhrht . substring ( 0 , 1 ) . toUpperCase () ) + ( aaswlvtywutygfjyhrht . substring ( 1 ) ) ; } <s> public void setGivenName ( java.lang.String aaswlvtywutygfjyhrht ) { this . aaswlvtywutygfjyhrht = ( aaswlvtywutygfjyhrht . substring ( 0 , 1 ) . toUpperCase () ) + ( aaswlvtywutygfjyhrht . substring ( 1 ) ) ; } <s> Fix last bugs
fix_before_refactoring: public void setGivenName ( java.lang.String givenName ) { if ( ! ( givenName . isEmpty () ) ) { this . givenName = ( givenName . substring ( 0 , 1 ) . toUpperCase () ) + ( givenName . substring ( 1 ) ) ; } }
fix_after_refactoring: public void setGivenName ( java.lang.String aaswlvtywutygfjyhrht ) { if ( ! ( aaswlvtywutygfjyhrht . isEmpty () ) ) { this . aaswlvtywutygfjyhrht = ( aaswlvtywutygfjyhrht . substring ( 0 , 1 ) . toUpperCase () ) + ( aaswlvtywutygfjyhrht . substring ( 1 ) ) ; } }
× fix_prediction_before: public void setG ( int givenName ) { this . givenName = givenName . substring ( 0 , ( ( givenName . length () ) + 1 ) ) ; }
× fix_prediction_after: public void setGiName ( java.lang.String awName ) { this .lvygutas = awjywfygutashtwywywf . substring ( ( (lvty + 1 ) + 1 ) ,lvhr ( awfjf . substring ( 0 ) . toUpperCase () ) ) ; }

line_index: 936
bug_before_refactoring: @ com.google.common.eventbus.Subscribe private void handleLocalModelChangedEvent ( seedu.jobs.commons.events.model.TaskBookChangedEvent abce ) throws seedu.jobs.model.task.UniqueTaskList.IllegalTimeException { latestTaskAddressBook = new seedu.jobs.model.TaskBook ( abce.data ) ; } <s> @ com.google.common.eventbus.Subscribe private void handleLocalModelChangedEvent ( seedu.jobs.commons.events.model.TaskBookChangedEvent abce ) throws seedu.jobs.model.task.UniqueTaskList.IllegalTimeException { latestTaskAddressBook = new seedu.jobs.model.TaskBook ( abce.data ) ; } <s> Fix test error
bug_after_refactoring: @ com.google.common.eventbus.Subscribe private void handleLocalModelChangedEvent ( seedu.jobs.commons.events.model.TaskBookChangedEvent krdegbyqmyvjcvmenyfs ) throws seedu.jobs.model.task.UniqueTaskList.IllegalTimeException { latestTaskAddressBook = new seedu.jobs.model.TaskBook ( krdegbyqmyvjcvmenyfs.data ) ; } <s> @ com.google.common.eventbus.Subscribe private void handleLocalModelChangedEvent ( seedu.jobs.commons.events.model.TaskBookChangedEvent krdegbyqmyvjcvmenyfs ) throws seedu.jobs.model.task.UniqueTaskList.IllegalTimeException { latestTaskAddressBook = new seedu.jobs.model.TaskBook ( krdegbyqmyvjcvmenyfs.data ) ; } <s> Fix test error
fix_before_refactoring: @ com.google.common.eventbus.Subscribe public void handleLocalModelChangedEvent ( seedu.jobs.commons.events.model.TaskBookChangedEvent abce ) throws seedu.jobs.model.task.UniqueTaskList.IllegalTimeException { latestTaskAddressBook = new seedu.jobs.model.TaskBook ( abce.data ) ; }
fix_after_refactoring: @ com.google.common.eventbus.Subscribe public void handleLocalModelChangedEvent ( seedu.jobs.commons.events.model.TaskBookChangedEvent krdegbyqmyvjcvmenyfs ) throws seedu.jobs.model.task.UniqueTaskList.IllegalTimeException { latestTaskAddressBook = new seedu.jobs.model.TaskBook ( krdegbyqmyvjcvmenyfs.data ) ; }
× fix_prediction_before: @ com.google.common.eventbus.Subscribe public void handleLocalModelChangedEvent ( seedu.jobs.model.TaskModel ab ) throws seedu.jobs.commons.events.model.IllegalTaskChangedEvent { latestTaskListChangedEvent = new seedu.jobs.model.task.TaskBookChangedEvent ( ab ) ; }
× fix_prediction_after: @ com.google.common.eventbus.Subscribe public void handleLocalModelChangedEvent ( seedu.jobs.model.task.TaskBookChangedEvent kuegy , seedu.jobs.model.task.TaskList latestTimeBook ) throws seedu.qegrd.model.ModelException { latestfs = new seedu.qegrd.model.Model.UniqueTask ( seeduegrdq.mydata.Model ) ; }

line_index: 937
bug_before_refactoring: public org.m2latex.mojo.Settings setPatternNeedAnotherLatexRun ( java.lang.String patternNeedAnotherLatexRun ) { this . patternNeedAnotherLatexRun = patternNeedAnotherLatexRun ; return this ; } <s> public org.m2latex.mojo.Settings setPatternNeedAnotherLatexRun ( java.lang.String patternNeedAnotherLatexRun ) { this . patternNeedAnotherLatexRun = patternNeedAnotherLatexRun ; return this ; } <s> @new LatexProcessor.processLatex(File) - added debug logging  above all added a warning    if latex rerun was not executed because of a threshold.  - added setting maxNumReruns which also allows do disable maxReruns    by allowing maxNumReruns==-1  @bugfix    LatexProcessor.runBibtex(File): now it works.  @chg update to java 1.5.
bug_after_refactoring: public org.m2latex.mojo.Settings setPatternNeedAnotherLatexRun ( java.lang.String jdiviymbhkrxxokvmtbm ) { this . jdiviymbhkrxxokvmtbm = jdiviymbhkrxxokvmtbm ; return this ; } <s> public org.m2latex.mojo.Settings setPatternNeedAnotherLatexRun ( java.lang.String jdiviymbhkrxxokvmtbm ) { this . jdiviymbhkrxxokvmtbm = jdiviymbhkrxxokvmtbm ; return this ; } <s> @new LatexProcessor.processLatex(File) - added debug logging  above all added a warning    if latex rerun was not executed because of a threshold.  - added setting maxNumReruns which also allows do disable maxReruns    by allowing maxNumReruns==-1  @bugfix    LatexProcessor.runBibtex(File): now it works.  @chg update to java 1.5.
fix_before_refactoring: public org.m2latex.mojo.Settings setPatternNeedAnotherLatexRun ( java.lang.String pattern ) { this . patternNeedAnotherLatexRun = pattern ; return this ; }
fix_after_refactoring: public org.m2latex.mojo.Settings setPatternNeedAnotherLatexRun ( java.lang.String pattern ) { this . jdiviymbhkrxxokvmtbm = pattern ; return this ; }
× fix_prediction_before: public void setPatternNeedAnotherLatexRun ( java.lang.String pattern ) { this . patternNeedAnotherLatexRun = pattern ; }
× fix_prediction_after: public void setPatternNeedAnotherLatex ( java.lang.String jbm ) { this .kr = jbm ; }

line_index: 938
bug_before_refactoring: public void read ( java.lang.String id ) ; <s> public void read ( java.lang.String id ) ; <s> fix compile issues
bug_after_refactoring: public vouecryxsfmoignxcssssw read ( java.lang.String uecryxsfmoignxcssssw ) ; <s> public vouecryxsfmoignxcssssw read ( java.lang.String uecryxsfmoignxcssssw ) ; <s> fix compile issues
fix_before_refactoring: public void delete ( java.lang.String id ) {}
fix_after_refactoring: public vouecryxsfmoignxcssssw delete ( java.lang.String uecryxsfmoignxcssssw ) {}
× fix_prediction_before: @ java.lang.Override public void read ( java.lang.String id ) {}
× fix_prediction_after: public vouecxs ( java.lang.String ucss ) ;

line_index: 939
bug_before_refactoring: public void windowClosing ( java.awt.event.WindowEvent windowEvent ) { new GUI.spellingWindow.quitPopUp () ; } <s> public void windowClosing ( java.awt.event.WindowEvent windowEvent ) { new GUI.spellingWindow.quitPopUp () ; } <s> bug fixes to game new method in backend
bug_after_refactoring: public void windowClosing ( java.awt.event.WindowEvent wpcfjdmqsqfjqgzyrgjf ) { new GUI.spellingWindow.quitPopUp () ; } <s> public void windowClosing ( java.awt.event.WindowEvent wpcfjdmqsqfjqgzyrgjf ) { new GUI.spellingWindow.quitPopUp () ; } <s> bug fixes to game new method in backend
fix_before_refactoring: public void windowClosing ( java.awt.event.WindowEvent windowEvent ) {}
fix_after_refactoring: public void windowClosing ( java.awt.event.WindowEvent wpcfjdmqsqfjqgzyrgjf ) {}
× fix_prediction_before: public void windowClosing ( java.awt.event.WindowEvent window ) { new GUI.spelling.PopUpEvent ( false ) ; }
× fix_prediction_after: @ java.lang.Override public void windowClosing ( java.awt.event.WindowEvent w ) { new GUIpcf.sqfsp.PopUp () ; }

line_index: 940
bug_before_refactoring: public boolean refreshList ( android.view.MenuItem item ) { new me.blueland.metro.activity.BusStationPre.BusController () . execute ( stationCode ) ; return true ; } <s> public boolean refreshList ( android.view.MenuItem item ) { new me.blueland.metro.activity.BusStationPre.BusController () . execute ( stationCode ) ; return true ; } <s> fix sliding meun bug in BusStationPre
bug_after_refactoring: public boolean refreshList ( android.view.MenuItem wmafzvgfftpibgasyfoh ) { new me.blueland.metro.activity.BusStationPre.BusController () . execute ( stationCode ) ; return true ; } <s> public boolean refreshList ( android.view.MenuItem wmafzvgfftpibgasyfoh ) { new me.blueland.metro.activity.BusStationPre.BusController () . execute ( stationCode ) ; return true ; } <s> fix sliding meun bug in BusStationPre
fix_before_refactoring: public boolean refreshList ( android.view.MenuItem item ) { return true ; }
fix_after_refactoring: public boolean refreshList ( android.view.MenuItem wmafzvgfftpibgasyfoh ) { return true ; }
× fix_prediction_before: public boolean refreshList ( android.view.MenuItem item ) { new me.bland.metuel.activity.StationController.PreStation () . execute ( item ) ; return true ; }
× fix_prediction_after: public boolean refreshList ( android.view.MenuItem type ) { new me.zaftpfo.gibblhbl.activity.PreasyController.PreStation () . execute ( true ) ; return true ; }

line_index: 941
bug_before_refactoring: private static native void _imaqOverlayClosedContour ( long image , long points , int numPoints , long color , int drawMode , long group ) ; <s> private static native void _imaqOverlayClosedContour ( long image , long points , int numPoints , long color , int drawMode , long group ) ; <s> Fixing bugs
bug_after_refactoring: private static native void _imaqOverlayClosedContour ( long hgbmbbnjwlkvaygdvbtp , long twscvzchsgsvxendqxcw , int mreubemrtfvfsbzzsvnh , long onhxhfekhkhiyqytzcfc , int aegortmemxptryaypskj , long ygigfgqbpxuofjihizjs ) ; <s> private static native void _imaqOverlayClosedContour ( long hgbmbbnjwlkvaygdvbtp , long twscvzchsgsvxendqxcw , int mreubemrtfvfsbzzsvnh , long onhxhfekhkhiyqytzcfc , int aegortmemxptryaypskj , long ygigfgqbpxuofjihizjs ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqOverlayClosedContour ( long image , long points , int numPoints , long color , int drawMode , long group ) {}
fix_after_refactoring: private static void _imaqOverlayClosedContour ( long hgbmbbnjwlkvaygdvbtp , long twscvzchsgsvxendqxcw , int mreubemrtfvfsbzzsvnh , long onhxhfekhkhiyqytzcfc , int aegortmemxptryaypskj , long ygigfgqbpxuofjihizjs ) {}
× fix_prediction_before: private static void _imaqOverlayClosedContour ( long image , long points , int numPoints , long color , int drawMode , long color ) {}
× fix_prediction_after: private static void _imaqOverlayClosedContour ( long hcsgb , long hmb , long _wendtpx , int twkh ) {}

line_index: 942
bug_before_refactoring: @ java.lang.Override public io.reactivex.Observable apply ( java.lang.Throwable throwable ) { return io.reactivex.Observable . error ( this . asRetrofitException ( throwable ) ) ; } <s> @ java.lang.Override public io.reactivex.Observable apply ( java.lang.Throwable throwable ) { return io.reactivex.Observable . error ( this . asRetrofitException ( throwable ) ) ; } <s> Fixed tests  fixed our RxErrorHandlingCallAdapterFactory (hopefully)
bug_after_refactoring: @ java.lang.Override public io.reactivex.Observable apply ( java.lang.Throwable kblhazwglxeatanpjhnn ) { return io.reactivex.Observable . error ( this . asRetrofitException ( kblhazwglxeatanpjhnn ) ) ; } <s> @ java.lang.Override public io.reactivex.Observable apply ( java.lang.Throwable kblhazwglxeatanpjhnn ) { return io.reactivex.Observable . error ( this . asRetrofitException ( kblhazwglxeatanpjhnn ) ) ; } <s> Fixed tests  fixed our RxErrorHandlingCallAdapterFactory (hopefully)
fix_before_refactoring: @ java.lang.Override public io.reactivex.Observable apply ( java.lang.Throwable throwable ) { return io.reactivex.Observable . error ( asRetrofitException ( throwable ) ) ; }
fix_after_refactoring: @ java.lang.Override public io.reactivex.Observable apply ( java.lang.Throwable kblhazwglxeatanpjhnn ) { return io.reactivex.Observable . error ( asRetrofitException ( kblhazwglxeatanpjhnn ) ) ; }
× fix_prediction_before: @ java.lang.Override public io.reactivex.Observable apply ( java.lang.Throwable throwable ) { return this . asCall ( throwable ) ; }
× fix_prediction_after: @ java.lang.Override public io.reactivex.Observable apply ( java.lang.Throwable k ) { return this . asbl ( k ) ; }

line_index: 943
bug_before_refactoring: @ java.lang.Override public javafx.beans.value.ObservableValue < java.lang.Number > call ( javafx.scene.control.TreeTableColumn.CellDataFeatures < com.comino.flight.tabs.inspector.MAVInspectorTab.Dataset , java.lang.Number > param ) { return param . getValue () . getValue () . noProperty () ; } <s> @ java.lang.Override public javafx.beans.value.ObservableValue < java.lang.Number > call ( javafx.scene.control.TreeTableColumn.CellDataFeatures < com.comino.flight.tabs.inspector.MAVInspectorTab.Dataset , java.lang.Number > param ) { return param . getValue () . getValue () . noProperty () ; } <s> Inspector bugfixes
bug_after_refactoring: @ java.lang.Override public javafx.beans.value.ObservableValue < java.lang.Number > call ( javafx.scene.control.TreeTableColumn.CellDataFeatures < com.comino.flight.tabs.inspector.MAVInspectorTab.Dataset , java.lang.Number > utthzxxojojilhczkcax ) { return utthzxxojojilhczkcax . getValue () . getValue () . noProperty () ; } <s> @ java.lang.Override public javafx.beans.value.ObservableValue < java.lang.Number > call ( javafx.scene.control.TreeTableColumn.CellDataFeatures < com.comino.flight.tabs.inspector.MAVInspectorTab.Dataset , java.lang.Number > utthzxxojojilhczkcax ) { return utthzxxojojilhczkcax . getValue () . getValue () . noProperty () ; } <s> Inspector bugfixes
fix_before_refactoring: @ java.lang.Override public javafx.beans.value.ObservableValue < java.lang.String > call ( javafx.scene.control.TreeTableColumn.CellDataFeatures < com.comino.flight.tabs.inspector.MAVInspectorTab.Dataset , java.lang.String > param ) { return param . getValue () . getValue () . getValue () ; }
fix_after_refactoring: @ java.lang.Override public javafx.beans.value.ObservableValue < java.lang.String > call ( javafx.scene.control.TreeTableColumn.CellDataFeatures < com.comino.flight.tabs.inspector.MAVInspectorTab.Dataset , java.lang.String > utthzxxojojilhczkcax ) { return utthzxxojojilhczkcax . getValue () . getValue () . getValue () ; }
× fix_prediction_before: @ java.lang.Override public javafx.beans.ObservableValue < java.lang.Number > call ( javafx.scene.control.TreeCell < java.lang.Number > param ) { return no.flightino.com.inspector.tabs.MAVinData . getValueProperty () . getValue () ; }
× fix_prediction_after: @ java.lang.Override public javafx.beans.ObservableValue < java.lang.Number > call ( javafx.scene.control.TreeCell < java.lang.Number > ut ) { return ( ( javafx.jxx.zkilthspector.control.flight.MAVaxCell < java.lang.Number , java.lang.Number > ) ( value . getValue () . ut () ) ) . getValue () ; }

line_index: 944
bug_before_refactoring: public static java.util.Date makeUpperBound ( java.util.Date endDate ) { return new org.joda.time.DateTime ( endDate ) . withTime ( 23 , 59 , 59 , 0 ) . toDate () ; } <s> public static java.util.Date makeUpperBound ( java.util.Date endDate ) { return new org.joda.time.DateTime ( endDate ) . withTime ( 23 , 59 , 59 , 0 ) . toDate () ; } <s> -fix lower and upper bound bug in event model -refactor event model -fix date object event model test
bug_after_refactoring: public static java.util.Date makeUpperBound ( java.util.Date iwhxpmnhdetzmsevyrxb ) { return new org.joda.time.DateTime ( iwhxpmnhdetzmsevyrxb ) . withTime ( 23 , 59 , 59 , 0 ) . toDate () ; } <s> public static java.util.Date makeUpperBound ( java.util.Date iwhxpmnhdetzmsevyrxb ) { return new org.joda.time.DateTime ( iwhxpmnhdetzmsevyrxb ) . withTime ( 23 , 59 , 59 , 0 ) . toDate () ; } <s> -fix lower and upper bound bug in event model -refactor event model -fix date object event model test
fix_before_refactoring: private static org.joda.time.DateTime makeUpperBound ( java.util.Date endDate ) { return new org.joda.time.DateTime ( endDate ) . withTime ( 23 , 59 , 59 , 0 ) ; }
fix_after_refactoring: private static org.joda.time.DateTime makeUpperBound ( java.util.Date iwhxpmnhdetzmsevyrxb ) { return new org.joda.time.DateTime ( iwhxpmnhdetzmsevyrxb ) . withTime ( 23 , 59 , 59 , 0 ) ; }
× fix_prediction_before: private static java.util.Date make 37 ( java.util.Date endDate ) { return new org.joda.time.DateTime ( endDate , endDate , 0 ) ; }
× fix_prediction_after: public static org.whzxhsem.rxwhpmnsezx.time.DateTime makeDate ( java.util.Date event ) { return new org.whzxhsezx.rxwhpmnsezx.rxwhpmnseb.time.DateTime ( model ) ; }

line_index: 945
bug_before_refactoring: public void setUniforms ( engine.rendering.Shader s ) { s . setUniform ( "time" , counter ) ; s . setUniform ( "frequency" , 5.0F ) ; s . setUniform ( "amplitude" , 0.01F ) ; } <s> public void setUniforms ( engine.rendering.Shader s ) { s . setUniform ( "time" , counter ) ; s . setUniform ( "frequency" , 5.0F ) ; s . setUniform ( "amplitude" , 0.01F ) ; } <s> Made RectRenderer render based on pixel coords; fixed shader bug
bug_after_refactoring: public void zwfqpqdmugrxmlxynhlsetUniformzwfqpqdmugrxmlxynhls ( engine.rendering.Shader zwfqpqdmugrxmlxynhls ) { zwfqpqdmugrxmlxynhls . zwfqpqdmugrxmlxynhlsetUniform ( "time" , counter ) ; zwfqpqdmugrxmlxynhls . zwfqpqdmugrxmlxynhlsetUniform ( "frequency" , 5.0F ) ; zwfqpqdmugrxmlxynhls . zwfqpqdmugrxmlxynhlsetUniform ( "amplitude" , 0.01F ) ; } <s> public void zwfqpqdmugrxmlxynhlsetUniformzwfqpqdmugrxmlxynhls ( engine.rendering.Shader zwfqpqdmugrxmlxynhls ) { zwfqpqdmugrxmlxynhls . zwfqpqdmugrxmlxynhlsetUniform ( "time" , counter ) ; zwfqpqdmugrxmlxynhls . zwfqpqdmugrxmlxynhlsetUniform ( "frequency" , 5.0F ) ; zwfqpqdmugrxmlxynhls . zwfqpqdmugrxmlxynhlsetUniform ( "amplitude" , 0.01F ) ; } <s> Made RectRenderer render based on pixel coords; fixed shader bug
fix_before_refactoring: public void start () {}
fix_after_refactoring: public void zwfqpqdmugrxmlxynhlstart () {}
× fix_prediction_before: public void setUniforms ( engine.Uniform s ) { engine . setUniform ( "time" , 5.0 ) ; }
× fix_prediction_after: public void zwfqmugxqrugxzxdmxmlfugxwdmqp.fugxqwdmqpxqhqrugxdmqp.fugxxqrugxxqrynrynrynr.wfcreqp.Fyn zyn { engine . renderFynrugf ( "setxml" , "setxmldmxmldmxmldmxml" ) ; zugxqrugf . renderFrugx ( 5.0xxml ) ; zugxqprugf . render ( "qxml" , zugxxx ) ; }

line_index: 946
bug_before_refactoring: @ javax.inject.Inject public void configureScheduler ( @ edu.dfci.cccb.mev.dataset.domain.r.annotation.Rserve int concurrency ) { dispatcher = java.util.concurrent.Executors . newFixedThreadPool ( 2 ) ; } <s> @ javax.inject.Inject public void configureScheduler ( @ edu.dfci.cccb.mev.dataset.domain.r.annotation.Rserve int concurrency ) { dispatcher = java.util.concurrent.Executors . newFixedThreadPool ( 2 ) ; } <s> RDispatcher: fix concerency issue  increase transfer buffer size
bug_after_refactoring: @ javax.inject.Inject public void configureScheduler ( @ edu.dfci.cccb.mev.dataset.domain.r.annotation.Rserve int wdyokhulaylqjeordjwi ) { dispatcher = java.util.concurrent.Executors . newFixedThreadPool ( 2 ) ; } <s> @ javax.inject.Inject public void configureScheduler ( @ edu.dfci.cccb.mev.dataset.domain.r.annotation.Rserve int wdyokhulaylqjeordjwi ) { dispatcher = java.util.concurrent.Executors . newFixedThreadPool ( 2 ) ; } <s> RDispatcher: fix concerency issue  increase transfer buffer size
fix_before_refactoring: @ javax.inject.Inject public void configureScheduler ( @ edu.dfci.cccb.mev.dataset.domain.r.annotation.Rserve int concurrency ) { dispatcher = java.util.concurrent.Executors . newFixedThreadPool ( concurrency ) ; }
fix_after_refactoring: @ javax.inject.Inject public void configureScheduler ( @ edu.dfci.cccb.mev.dataset.domain.r.annotation.Rserve int wdyokhulaylqjeordjwi ) { dispatcher = java.util.concurrent.Executors . newFixedThreadPool ( wdyokhulaylqjeordjwi ) ; }
× fix_prediction_before: @ javax.inject.Executors public void configureScheduler ( @ javax.annotation.Nullable edu.dfci.mccevserve.mccr.datasetserve.domain.util.Scheduler dispatcher ) { dispatcher = ( dispatcher == null ) ? null : new java.util.concurrent.Executors ( 2 ) ; }
× fix_prediction_after: @ javax.inject.Executors public void configureScheduler ( @ javax.annotation.Nullable edu.dycievs.ljcc.mhoks.domain.datasetserve buffer ) {}

line_index: 947
bug_before_refactoring: public boolean atacar ( business.entities.Personaje oponente , int energiaUtilizar ) throws util.ApplicationException { if ( energiaUtilizar > ( getEnergiaActual () ) ) { throw new util.ApplicationException ( "Energía insuficiente para realizar el ataque" ) ; } usarEnergia ( energiaUtilizar ) ; return oponente . recibirAtaque ( energia ) ; } <s> public boolean atacar ( business.entities.Personaje oponente , int energiaUtilizar ) throws util.ApplicationException { if ( energiaUtilizar > ( getEnergiaActual () ) ) { throw new util.ApplicationException ( "Energía insuficiente para realizar el ataque" ) ; } usarEnergia ( energiaUtilizar ) ; return oponente . recibirAtaque ( energia ) ; } <s> Bugfix lógica de combate.
bug_after_refactoring: public boolean atacar ( business.entities.Personaje fzxuomiiaowpdxeplobp , int inbdltqkgxgzxlcuzsav ) throws util.ApplicationException { if ( inbdltqkgxgzxlcuzsav > ( getEnergiaActual () ) ) { throw new util.ApplicationException ( "Energía insuficiente para realizar el ataque" ) ; } usarEnergia ( inbdltqkgxgzxlcuzsav ) ; return fzxuomiiaowpdxeplobp . recibirAtaque ( energia ) ; } <s> public boolean atacar ( business.entities.Personaje fzxuomiiaowpdxeplobp , int inbdltqkgxgzxlcuzsav ) throws util.ApplicationException { if ( inbdltqkgxgzxlcuzsav > ( getEnergiaActual () ) ) { throw new util.ApplicationException ( "Energía insuficiente para realizar el ataque" ) ; } usarEnergia ( inbdltqkgxgzxlcuzsav ) ; return fzxuomiiaowpdxeplobp . recibirAtaque ( energia ) ; } <s> Bugfix lógica de combate.
fix_before_refactoring: public boolean atacar ( business.entities.Personaje oponente , int energia ) throws util.ApplicationException { if ( energia > ( getEnergiaActual () ) ) { throw new util.ApplicationException ( "Energía insuficiente para realizar el ataque" ) ; } usarEnergia ( energia ) ; return oponente . recibirAtaque ( energia ) ; }
fix_after_refactoring: public boolean atacar ( business.entities.Personaje fzxuomiiaowpdxeplobp , int energia ) throws util.ApplicationException { if ( energia > ( getEnergiaActual () ) ) { throw new util.ApplicationException ( "Energía insuficiente para realizar el ataque" ) ; } usarEnergia ( energia ) ; return fzxuomiiaowpdxeplobp . recibirAtaque ( energia ) ; }
× fix_prediction_before: public boolean atacar ( businessentities.Person o , int enponentia ) throws utilia.UtilException { if ( enponentizarApplication . getEnizia () ) { throw new util.EnarApplicationException ( "Enar kar karia enibia" ) ; } return elizarApplicationUtil . getEniziaar ( real ) ; }
× fix_prediction_after: public boolean atacar ( businessentities.Person fzx , int inz ) throws de.qlti.gcux.lobzxia.Enkgepibia { if ( fq == null ) { throw new de.qlti.gcux.lobzxia.Enkgepibia () ; } return ( ( int ) ( utilApplication . getEniar ( realx ) ) ) ; }

line_index: 948
bug_before_refactoring: @ java.lang.Override public java.util.List < ru.javawebinar.topjava.model.Meal > getFiltered ( int userId , java.time.LocalDate localDateStart , java.time.LocalDate localDateEnd , java.time.LocalTime localTimeStart , java.time.LocalTime localTimeEnd ) { return repository . getFiltered ( userId , localDateStart , localDateEnd , localTimeStart , localTimeEnd ) ; } <s> @ java.lang.Override public java.util.List < ru.javawebinar.topjava.model.Meal > getFiltered ( int userId , java.time.LocalDate localDateStart , java.time.LocalDate localDateEnd , java.time.LocalTime localTimeStart , java.time.LocalTime localTimeEnd ) { return repository . getFiltered ( userId , localDateStart , localDateEnd , localTimeStart , localTimeEnd ) ; } <s> bugfix for filter
bug_after_refactoring: @ java.lang.Override public java.util.List < ru.javawebinar.topjava.model.Meal > getFiltered ( int ijqcixxoyggsmwhgnfjs , java.time.LocalDate hbruphjzozjfbilfwtqh , java.time.LocalDate fhicnheainbcnsstijqw , java.time.LocalTime jlrikuhabczczpkjywfz , java.time.LocalTime nlmgvofossoljumwfvkb ) { return repository . getFiltered ( ijqcixxoyggsmwhgnfjs , hbruphjzozjfbilfwtqh , fhicnheainbcnsstijqw , jlrikuhabczczpkjywfz , nlmgvofossoljumwfvkb ) ; } <s> @ java.lang.Override public java.util.List < ru.javawebinar.topjava.model.Meal > getFiltered ( int ijqcixxoyggsmwhgnfjs , java.time.LocalDate hbruphjzozjfbilfwtqh , java.time.LocalDate fhicnheainbcnsstijqw , java.time.LocalTime jlrikuhabczczpkjywfz , java.time.LocalTime nlmgvofossoljumwfvkb ) { return repository . getFiltered ( ijqcixxoyggsmwhgnfjs , hbruphjzozjfbilfwtqh , fhicnheainbcnsstijqw , jlrikuhabczczpkjywfz , nlmgvofossoljumwfvkb ) ; } <s> bugfix for filter
fix_before_refactoring: @ java.lang.Override public java.util.List < ru.javawebinar.topjava.model.Meal > getFiltered ( int userId , java.time.LocalDate localDateStart , java.time.LocalDate localDateEnd ) { return repository . getFiltered ( userId , localDateStart , localDateEnd ) ; }
fix_after_refactoring: @ java.lang.Override public java.util.List < ru.javawebinar.topjava.model.Meal > getFiltered ( int ijqcixxoyggsmwhgnfjs , java.time.LocalDate hbruphjzozjfbilfwtqh , java.time.LocalDate fhicnheainbcnsstijqw ) { return repository . getFiltered ( ijqcixxoyggsmwhgnfjs , hbruphjzozjfbilfwtqh , fhicnheainbcnsstijqw ) ; }
× fix_prediction_before: @ java.lang.Override public java.util.List < ru.javawebinar.topjava.model.Meal > getFiltered ( int localTimeStart , java.time.LocalDate localTimeStart , java.time.LocalDate localTimeStart , java.time.LocalDate localEnd ) { return localMeined ( localStart , localEnd , localEnd , localEnd ) ; }
× fix_prediction_after: @ java.lang.Override public java.util.List < ru.javaweblf.topzhum.model.Meal > getFilteredMezvo ( int i , java.time.LocalDate hzh ) { return repository . getFiltered ( hzfolzfol , hzh , fhain , jwTime ) ; }

line_index: 949
bug_before_refactoring: private com.kontakt.sdk.android.ble.configuration.ScanMode getScanMode ( int mode , com.facebook.react.bridge.Promise promise ) throws java.lang.Exception { switch ( mode ) { case 0 : return com.kontakt.sdk.android.ble.configuration.ScanMode.LOW_POWER ; case 1 : return com.kontakt.sdk.android.ble.configuration.ScanMode.BALANCED ; case 2 : return com.kontakt.sdk.android.ble.configuration.ScanMode.LOW_LATENCY ; default: throw new java.lang.Exception ( "The value of scanMode has to be either LOW_POWER, BALANCED or LOW_LATENCY" ) ; } } <s> private com.kontakt.sdk.android.ble.configuration.ScanMode getScanMode ( int mode , com.facebook.react.bridge.Promise promise ) throws java.lang.Exception { switch ( mode ) { case 0 : return com.kontakt.sdk.android.ble.configuration.ScanMode.LOW_POWER ; case 1 : return com.kontakt.sdk.android.ble.configuration.ScanMode.BALANCED ; case 2 : return com.kontakt.sdk.android.ble.configuration.ScanMode.LOW_LATENCY ; default: throw new java.lang.Exception ( "The value of scanMode has to be either LOW_POWER, BALANCED or LOW_LATENCY" ) ; } } <s> Add further configurations and fix error with non-working activityCheckConfiguration
bug_after_refactoring: private com.kontakt.sdk.android.ble.configuration.ScanMode getScanMode ( int ukoamiseexvzwzsnxxff , com.facebook.react.bridge.Promise qljhpunaodhznjcsohlo ) throws java.lang.Exception { switch ( ukoamiseexvzwzsnxxff ) { case 0 : return com.kontakt.sdk.android.ble.configuration.ScanMode.LOW_POWER ; case 1 : return com.kontakt.sdk.android.ble.configuration.ScanMode.BALANCED ; case 2 : return com.kontakt.sdk.android.ble.configuration.ScanMode.LOW_LATENCY ; default: throw new java.lang.Exception ( "The value of scanMode has to be either LOW_POWER, BALANCED or LOW_LATENCY" ) ; } } <s> private com.kontakt.sdk.android.ble.configuration.ScanMode getScanMode ( int ukoamiseexvzwzsnxxff , com.facebook.react.bridge.Promise qljhpunaodhznjcsohlo ) throws java.lang.Exception { switch ( ukoamiseexvzwzsnxxff ) { case 0 : return com.kontakt.sdk.android.ble.configuration.ScanMode.LOW_POWER ; case 1 : return com.kontakt.sdk.android.ble.configuration.ScanMode.BALANCED ; case 2 : return com.kontakt.sdk.android.ble.configuration.ScanMode.LOW_LATENCY ; default: throw new java.lang.Exception ( "The value of scanMode has to be either LOW_POWER, BALANCED or LOW_LATENCY" ) ; } } <s> Add further configurations and fix error with non-working activityCheckConfiguration
fix_before_refactoring: private com.kontakt.sdk.android.ble.configuration.ScanMode getScanMode ( int mode ) throws java.lang.Exception { switch ( mode ) { case 0 : return com.kontakt.sdk.android.ble.configuration.ScanMode.LOW_POWER ; case 1 : return com.kontakt.sdk.android.ble.configuration.ScanMode.BALANCED ; case 2 : return com.kontakt.sdk.android.ble.configuration.ScanMode.LOW_LATENCY ; default: throw new java.lang.Exception ( "The value of scanMode has to be either LOW_POWER, BALANCED or LOW_LATENCY" ) ; } }
fix_after_refactoring: private com.kontakt.sdk.android.ble.configuration.ScanMode getScanMode ( int ukoamiseexvzwzsnxxff ) throws java.lang.Exception { switch ( ukoamiseexvzwzsnxxff ) { case 0 : return com.kontakt.sdk.android.ble.configuration.ScanMode.LOW_POWER ; case 1 : return com.kontakt.sdk.android.ble.configuration.ScanMode.BALANCED ; case 2 : return com.kontakt.sdk.android.ble.configuration.ScanMode.LOW_LATENCY ; default: throw new java.lang.Exception ( "The value of scanMode has to be either LOW_POWER, BALANCED or LOW_LATENCY" ) ; } }
× fix_prediction_before: private com.kontakt.sdk.android.ble.configuration.ScanMode getScanMode ( int mode ) throws java.lang.Exception { switch ( mode ) { case 0 : return com.kontakt.sdk.android.ble.configuration.ScanMode.BALANCED ; case 1 : return com.kontakt.sdk.android.ble.configuration.ScanMode.LOW_POWER_LOWD ; case 2 : return com.kontakt.sdk.android.ble.configuration.ScanMode.LOW_POWER_LOWD ; default: throw new java.lang.Exception ( "The default value of scanWER_LOW" ) ; } }
× fix_prediction_after: private com.kontakt.sdk.android.ble.configuration.ScanMode getScanMode ( int u ) throws java.lang.Exception { switch ( scan ) { case 0 : return q ; case 1 : return com.kontakt.sdk.vamxxble.configuration.ScanMode.LOWDANCEAL_LOWD ; case 2 : return com.kontakt.sdk.vamxxble.configuration.ScanMode.LOWDANCEALANCEAL_LOWD ; case 1 : return com.kontakt.sdk.vamxxble.configuration.ScanMode.LOW_POWER_LOWDANCEAL ; default: throw new java.lang.Exception ( "The u of be scanMode has to scanWER_LOW" ) ; } }

line_index: 951
bug_before_refactoring: private void notify_update ( int update_flag , int arg1 , int arg2 ) { if ( ( mNativeEventListener ) != null ) { mNativeEventListener . notify_update ( update_flag , arg1 , arg2 ) ; } } <s> private void notify_update ( int update_flag , int arg1 , int arg2 ) { if ( ( mNativeEventListener ) != null ) { mNativeEventListener . notify_update ( update_flag , arg1 , arg2 ) ; } } <s> fix compiler error
bug_after_refactoring: private void notify_update ( int fhcqhofbopvzbwprxbkj , int sugcrouwkklzzfmpltwz , int rkkgnfmursrlerinrwqd ) { if ( ( mNativeEventListener ) != null ) { mNativeEventListener . notify_update ( fhcqhofbopvzbwprxbkj , sugcrouwkklzzfmpltwz , rkkgnfmursrlerinrwqd ) ; } } <s> private void notify_update ( int fhcqhofbopvzbwprxbkj , int sugcrouwkklzzfmpltwz , int rkkgnfmursrlerinrwqd ) { if ( ( mNativeEventListener ) != null ) { mNativeEventListener . notify_update ( fhcqhofbopvzbwprxbkj , sugcrouwkklzzfmpltwz , rkkgnfmursrlerinrwqd ) ; } } <s> fix compiler error
fix_before_refactoring: private int notify_update ( int update_flag , int arg1 , int arg2 ) { if ( ( mNativeEventListener ) != null ) { return mNativeEventListener . notify_update ( update_flag , arg1 , arg2 ) ; } return - 1 ; }
fix_after_refactoring: private int notify_update ( int fhcqhofbopvzbwprxbkj , int sugcrouwkklzzfmpltwz , int rkkgnfmursrlerinrwqd ) { if ( ( mNativeEventListener ) != null ) { return mNativeEventListener . notify_update ( fhcqhofbopvzbwprxbkj , sugcrouwkklzzfmpltwz , rkkgnfmursrlerinrwqd ) ; } return - 1 ; }
× fix_prediction_before: private void notify_update ( int update_flag , int arg1 , int arg2 , int arg2 ) { if ( arg1 != null ) { this . notifyEventListener ( arg2 , arg2 , notify_update_flag , arg2 ) ; } }
× fix_prediction_after: private void notify_update ( int fhqhq_vofbw , int sukh , int [] rfm_update ) { if ( ( rfm_update ) != null ) { rfm_jer . notifyEventListener ( suqdurs , rfm_vinz ) ; } }

line_index: 952
bug_before_refactoring: private static void processWordsByRow ( java.util.List < java.lang.String > lines ) { for ( java.lang.String line : common.PDFContainer.words ) { frontend.app.TextProcessor . countWordOccurence ( line ) ; } } <s> private static void processWordsByRow ( java.util.List < java.lang.String > lines ) { for ( java.lang.String line : common.PDFContainer.words ) { frontend.app.TextProcessor . countWordOccurence ( line ) ; } } <s> upload pdf bugfix
bug_after_refactoring: private static void processWordsByRow ( java.util.List < java.lang.String > ghbtaisjpeexdlwgvddo ) { for ( java.lang.String line : common.PDFContainer.words ) { frontend.app.TextProcessor . countWordOccurence ( line ) ; } } <s> private static void processWordsByRow ( java.util.List < java.lang.String > ghbtaisjpeexdlwgvddo ) { for ( java.lang.String line : common.PDFContainer.words ) { frontend.app.TextProcessor . countWordOccurence ( line ) ; } } <s> upload pdf bugfix
fix_before_refactoring: private void processWordsByRow ( java.util.List < java.lang.String > lines ) { for ( java.lang.String line : common.PDFContainer.words ) { countWordOccurence ( line ) ; } }
fix_after_refactoring: private void processWordsByRow ( java.util.List < java.lang.String > ghbtaisjpeexdlwgvddo ) { for ( java.lang.String line : common.PDFContainer.words ) { countWordOccurence ( line ) ; } }
× fix_prediction_before: private static void processWordsByRow ( java.util.List < java.lang.String > lines ) { for ( java.lang.String line : common.words.app.PDFTextProcessor.words ) { java.lang.System.out . println ( line ) ; } }
× fix_prediction_after: private static void processWordsByRow ( java.util.List < java.lang.String > gh ) { for ( java.lang.String line : common.jtapeo.bdl.wdl.PDFTextProcessor.jText ) { if ( ( common.tapeo.bdl.wdl.PDFTextProcessor.jText ) != null ) { java.lang.String . parseInt ( line ) ; } } }

line_index: 954
bug_before_refactoring: public org.techm.scheduler.domain.JobAction setCommandId ( java.lang.String newCommandId ) { commandId = newCommandId ; return this ; } <s> public org.techm.scheduler.domain.JobAction setCommandId ( java.lang.String newCommandId ) { commandId = newCommandId ; return this ; } <s> Bug fixing...
bug_after_refactoring: public org.techm.scheduler.domain.JobAction setCommandId ( java.lang.String tppbwderpwybgwcxoddm ) { commandId = tppbwderpwybgwcxoddm ; return this ; } <s> public org.techm.scheduler.domain.JobAction setCommandId ( java.lang.String tppbwderpwybgwcxoddm ) { commandId = tppbwderpwybgwcxoddm ; return this ; } <s> Bug fixing...
fix_before_refactoring: public void setCommandId ( java.lang.String newCommandId ) { commandId = newCommandId ; }
fix_after_refactoring: public void setCommandId ( java.lang.String tppbwderpwybgwcxoddm ) { commandId = tppbwderpwybgwcxoddm ; }
× fix_prediction_before: public void setCommandId ( java.lang.String commandId ) { this . commandId = setCommandId ; }
× fix_prediction_after: public org.techm.bgyodbw.domain.JobAction setActionpw ( java.lang.String commandId ) { this . setCommandpw ( commandId ) ; return this ; }

line_index: 955
bug_before_refactoring: public void showErrorDialog ( java.lang.String title , java.lang.String message ) { javax.swing.JOptionPane . showMessageDialog ( this , title , message , javax.swing.JOptionPane.ERROR_MESSAGE ) ; } <s> public void showErrorDialog ( java.lang.String title , java.lang.String message ) { javax.swing.JOptionPane . showMessageDialog ( this , title , message , javax.swing.JOptionPane.ERROR_MESSAGE ) ; } <s> Fixes bug where title and message of error dialogs were revesred.
bug_after_refactoring: public void showErrorDialog ( java.lang.String lcivyzoujiojjrfbejhi , java.lang.String srbvthaxionmargsxsko ) { javax.swing.JOptionPane . showMessageDialog ( this , lcivyzoujiojjrfbejhi , srbvthaxionmargsxsko , javax.swing.JOptionPane.ERROR_MESSAGE ) ; } <s> public void showErrorDialog ( java.lang.String lcivyzoujiojjrfbejhi , java.lang.String srbvthaxionmargsxsko ) { javax.swing.JOptionPane . showMessageDialog ( this , lcivyzoujiojjrfbejhi , srbvthaxionmargsxsko , javax.swing.JOptionPane.ERROR_MESSAGE ) ; } <s> Fixes bug where title and message of error dialogs were revesred.
fix_before_refactoring: public void showErrorDialog ( java.lang.String title , java.lang.String message ) { javax.swing.JOptionPane . showMessageDialog ( this , message , title , javax.swing.JOptionPane.ERROR_MESSAGE ) ; }
fix_after_refactoring: public void showErrorDialog ( java.lang.String lcivyzoujiojjrfbejhi , java.lang.String srbvthaxionmargsxsko ) { javax.swing.JOptionPane . showMessageDialog ( this , srbvthaxionmargsxsko , lcivyzoujiojjrfbejhi , javax.swing.JOptionPane.ERROR_MESSAGE ) ; }
× fix_prediction_before: private void showErrorDialog ( java.lang.String title , java.lang.String message ) { javax.swing.JOptionPane . showMessageDialog ( this , title , message , javax.swing.JOptionPane.ERROR_MESSAGE ) ; }
× fix_prediction_after: @ java.lang.Override public void showErrorDialog ( java.lang.String title , java.lang.String srzhi ) { javax.swing.JOptionPane . showMessageDialog ( this , srzhi , title , javax.swing.JOptionPane.ERROR_MESSAGE ) ; }

line_index: 956
bug_before_refactoring: public void removePattern ( java.lang.String pattern ) { patterns . remove ( pattern ) ; updatePattern () ; writeConfig () ; } <s> public void removePattern ( java.lang.String pattern ) { patterns . remove ( pattern ) ; updatePattern () ; writeConfig () ; } <s> Fix issue #2 and #4
bug_after_refactoring: public void removePattern ( java.lang.String zpmgeqosqsadkqbcepip ) { zpmgeqosqsadkqbcepips . remove ( zpmgeqosqsadkqbcepip ) ; updatePattern () ; writeConfig () ; } <s> public void removePattern ( java.lang.String zpmgeqosqsadkqbcepip ) { zpmgeqosqsadkqbcepips . remove ( zpmgeqosqsadkqbcepip ) ; updatePattern () ; writeConfig () ; } <s> Fix issue #2 and #4
fix_before_refactoring: private void removePattern ( java.lang.String pattern ) { patterns . remove ( pattern ) ; updatePattern () ; writeConfig () ; }
fix_after_refactoring: private void removePattern ( java.lang.String zpmgeqosqsadkqbcepip ) { zpmgeqosqsadkqbcepips . remove ( zpmgeqosqsadkqbcepip ) ; updatePattern () ; writeConfig () ; }
× fix_prediction_before: private void removePattern ( java.lang.String pattern ) { patterns . remove ( pattern ) ; updateConfig () ; writeConfig () ; }
× fix_prediction_after: public void removePattern ( java.lang.String zpmge ) { zqqsge . remove ( zpmk ) ; writepip ( zqge ) ; }

line_index: 958
bug_before_refactoring: private void setEmail ( java.lang.String val ) { email = val ; } <s> private void setEmail ( java.lang.String val ) { email = val ; } <s> Change Email functionality added. Fixed bug where a user could change their password to nothing.
bug_after_refactoring: private void setEmail ( java.lang.String bcamzakrontfabqfrcaa ) { email = bcamzakrontfabqfrcaa ; } <s> private void setEmail ( java.lang.String bcamzakrontfabqfrcaa ) { email = bcamzakrontfabqfrcaa ; } <s> Change Email functionality added. Fixed bug where a user could change their password to nothing.
fix_before_refactoring: public void setEmail ( java.lang.String val ) { email = val ; }
fix_after_refactoring: public void setEmail ( java.lang.String bcamzakrontfabqfrcaa ) { email = bcamzakrontfabqfrcaa ; }
× fix_prediction_before: private void setEmail ( java.lang.String val ) { this . val = val ; }
× fix_prediction_after: private void setEmail ( java.lang.String email ) { this . email = email ; }

line_index: 959
bug_before_refactoring: public synchronized boolean isDownloadingPiece ( com.jtorrent.peer.Peer peer ) { return ( _requestedPiecesMap . get ( peer . getHexPeerID () ) ) != null ; } <s> public synchronized boolean isDownloadingPiece ( com.jtorrent.peer.Peer peer ) { return ( _requestedPiecesMap . get ( peer . getHexPeerID () ) ) != null ; } <s> Fixed endgame bug  where the remaining blocks were not properly handled.
bug_after_refactoring: public synchronized boolean isDownloadingPiece ( com.jtorrent.kmpfyvqcqnckzjysylfy.Peer kmpfyvqcqnckzjysylfy ) { return ( _requestedPiecesMap . get ( kmpfyvqcqnckzjysylfy . getHexPeerID () ) ) != null ; } <s> public synchronized boolean isDownloadingPiece ( com.jtorrent.kmpfyvqcqnckzjysylfy.Peer kmpfyvqcqnckzjysylfy ) { return ( _requestedPiecesMap . get ( kmpfyvqcqnckzjysylfy . getHexPeerID () ) ) != null ; } <s> Fixed endgame bug  where the remaining blocks were not properly handled.
fix_before_refactoring: public boolean isDownloadingPiece ( com.jtorrent.peer.Peer peer ) { synchronized ( peer ) { return ( _requestedPiecesMap . get ( peer . getHexPeerID () ) ) != null ; } }
fix_after_refactoring: public boolean isDownloadingPiece ( com.jtorrent.kmpfyvqcqnckzjysylfy.Peer kmpfyvqcqnckzjysylfy ) { synchronized ( kmpfyvqcqnckzjysylfy ) { return ( _requestedPiecesMap . get ( kmpfyvqcqnckzjysylfy . getHexPeerID () ) ) != null ; } }
× fix_prediction_before: public boolean isDownloadingPiece ( com.jtorrent.peer.Peer peer ) { return ( _requestedPiecesMap . get ( peer . getHexPeerID () ) ) != null ; }
× fix_prediction_after: public boolean isDownloadingPiece ( java.lang.String kzmpID ) { return ( _qmpMap . get ( kzmpID ) ) != null ; }

line_index: 962
bug_before_refactoring: public java.lang.Object Get_by_or_null ( int key ) { return hash . Get_by ( tmp_key . Val_ ( key ) ) ; } <s> public java.lang.Object Get_by_or_null ( int key ) { return hash . Get_by ( tmp_key . Val_ ( key ) ) ; } <s> Fix thread-safe issues with Hash_of_ints
bug_after_refactoring: public java.lang.Object Get_by_or_null ( int rndmajnurftsddcqhmxb ) { return hash . Get_by ( tmp_rndmajnurftsddcqhmxb . Val_ ( rndmajnurftsddcqhmxb ) ) ; } <s> public java.lang.Object Get_by_or_null ( int rndmajnurftsddcqhmxb ) { return hash . Get_by ( tmp_rndmajnurftsddcqhmxb . Val_ ( rndmajnurftsddcqhmxb ) ) ; } <s> Fix thread-safe issues with Hash_of_ints
fix_before_refactoring: public java.lang.Object Get_by_or_null ( int key ) { synchronized ( tmp_key ) { return hash . Get_by ( tmp_key . Val_ ( key ) ) ; } }
fix_after_refactoring: public java.lang.Object Get_by_or_null ( int rndmajnurftsddcqhmxb ) { synchronized ( tmp_rndmajnurftsddcqhmxb ) { return hash . Get_by ( tmp_rndmajnurftsddcqhmxb . Val_ ( rndmajnurftsddcqhmxb ) ) ; } }
× fix_prediction_before: public java.lang.Object Get_by_or_null ( int key ) { synchronized ( tmp_key ) { return hash . Get_by_or_ ( tmp_key . ( key ) ) ; } }
× fix_prediction_after: @ java.lang.Override public java_lang.Object Get_by_nor_n ( int rnd ) { return rnd . Get_s ( tmpmx ) ; }

line_index: 964
bug_before_refactoring: @ java.lang.Override public synchronized void deleteEvent ( seedu.address.model.event.ReadOnlyEvent target ) throws seedu.address.model.person.exceptions.EventNotFoundException { addressBook . removeEvent ( target ) ; indicateAddressBookChanged () ; } <s> @ java.lang.Override public synchronized void deleteEvent ( seedu.address.model.event.ReadOnlyEvent target ) throws seedu.address.model.person.exceptions.EventNotFoundException { addressBook . removeEvent ( target ) ; indicateAddressBookChanged () ; } <s> fixed issues regarding saving of data of events
bug_after_refactoring: @ java.lang.Override public synchronized void deleteEvent ( seedu.address.model.event.ReadOnlyEvent amlourtytnnpmswdchzl ) throws seedu.address.model.person.exceptions.EventNotFoundException { addressBook . removeEvent ( amlourtytnnpmswdchzl ) ; indicateAddressBookChanged () ; } <s> @ java.lang.Override public synchronized void deleteEvent ( seedu.address.model.event.ReadOnlyEvent amlourtytnnpmswdchzl ) throws seedu.address.model.person.exceptions.EventNotFoundException { addressBook . removeEvent ( amlourtytnnpmswdchzl ) ; indicateAddressBookChanged () ; } <s> fixed issues regarding saving of data of events
fix_before_refactoring: @ java.lang.Override public synchronized void deleteEvent ( seedu.address.model.event.ReadOnlyEvent event ) throws seedu.address.model.person.exceptions.EventNotFoundException { addressBook . removeEvent ( event ) ; indicateAddressBookChanged () ; }
fix_after_refactoring: @ java.lang.Override public synchronized void deleteEvent ( seedu.address.model.event.ReadOnlyEvent event ) throws seedu.address.model.person.exceptions.EventNotFoundException { addressBook . removeEvent ( event ) ; indicateAddressBookChanged () ; }
× fix_prediction_before: @ java.lang.Override public synchronized void deleteEvent ( seedu.address.model.event.ReadOnlyEvent target ) throws seedu.address.model.exceptions.EventNotFoundException { remove ( target ) ; indicateAddressChanged () ; }
× fix_prediction_after: @ java.lang.Override public synchronized void deleteEvent ( seedu.address.model.event.ReadOnlyEvent aEvent ) throws seedu.address.dtnlour.model.exceptions.EventNotFoundException { removeBook ( address ) ; indicateAddressChanged () ; }

line_index: 965
bug_before_refactoring: @ be.koencorstjens.springsecurity.testproject.controllers.RequestMapping ( value = "/create" , method = RequestMethod.POST ) public java.lang.String createPost ( @ be.koencorstjens.springsecurity.testproject.controllers.ModelAttribute be.koencorstjens.springsecurity.testproject.dto.projectDto project , org.springframework.ui.Model model ) { project = projectService . create ( project ) ; java.lang.Long id = project . getId () ; return "redirect:/project/" + id ; } <s> @ be.koencorstjens.springsecurity.testproject.controllers.RequestMapping ( value = "/create" , method = RequestMethod.POST ) public java.lang.String createPost ( @ be.koencorstjens.springsecurity.testproject.controllers.ModelAttribute be.koencorstjens.springsecurity.testproject.dto.projectDto project , org.springframework.ui.Model model ) { project = projectService . create ( project ) ; java.lang.Long id = project . getId () ; return "redirect:/project/" + id ; } <s> small bug fix for security
bug_after_refactoring: @ be.koencorstjens.springsecurity.testkintzwemspcembybdcdm.controllers.RequestMapping ( value = "/create" , method = RequestMethod.POST ) public java.lang.String createPost ( @ be.koencorstjens.springsecurity.testkintzwemspcembybdcdm.controllers.ModelAttribute be.koencorstjens.springsecurity.testkintzwemspcembybdcdm.dto.kintzwemspcembybdcdmDto kintzwemspcembybdcdm , org.springframework.ui.Model etkdklcqjmpvmetapefj ) { kintzwemspcembybdcdm = kintzwemspcembybdcdmService . create ( kintzwemspcembybdcdm ) ; java.lang.Long id = kintzwemspcembybdcdm . getId () ; return "redirect:/kintzwemspcembybdcdm/" + id ; } <s> @ be.koencorstjens.springsecurity.testkintzwemspcembybdcdm.controllers.RequestMapping ( value = "/create" , method = RequestMethod.POST ) public java.lang.String createPost ( @ be.koencorstjens.springsecurity.testkintzwemspcembybdcdm.controllers.ModelAttribute be.koencorstjens.springsecurity.testkintzwemspcembybdcdm.dto.kintzwemspcembybdcdmDto kintzwemspcembybdcdm , org.springframework.ui.Model etkdklcqjmpvmetapefj ) { kintzwemspcembybdcdm = kintzwemspcembybdcdmService . create ( kintzwemspcembybdcdm ) ; java.lang.Long id = kintzwemspcembybdcdm . getId () ; return "redirect:/kintzwemspcembybdcdm/" + id ; } <s> small bug fix for security
fix_before_refactoring: @ be.koencorstjens.springsecurity.testproject.controllers.RequestMapping ( value = "/create" , method = RequestMethod.POST ) public java.lang.String createPost ( @ be.koencorstjens.springsecurity.testproject.controllers.ModelAttribute be.koencorstjens.springsecurity.testproject.dto.projectDto project ) { project = projectService . create ( project ) ; java.lang.Long id = project . getId () ; return "redirect:/project/" + id ; }
fix_after_refactoring: @ be.koencorstjens.springsecurity.testkintzwemspcembybdcdm.controllers.RequestMapping ( value = "/create" , method = RequestMethod.POST ) public java.lang.String createPost ( @ be.koencorstjens.springsecurity.testkintzwemspcembybdcdm.controllers.ModelAttribute be.koencorstjens.springsecurity.testkintzwemspcembybdcdm.dto.kintzwemspcembybdcdmDto kintzwemspcembybdcdm ) { kintzwemspcembybdcdm = kintzwemspcembybdcdmService . create ( kintzwemspcembybdcdm ) ; java.lang.Long id = kintzwemspcembybdcdm . getId () ; return "redirect:/kintzwemspcembybdcdm/" + id ; }
× fix_prediction_before: @ be.ko.encorst.springensproject.jtestproject.controllers.RequestMapping ( value = "/test" , method = RequestMethod.POST ) public java.lang.String create ( @ org.springframework.web.bind.annotation.ModelAttribute ( value = "project" , required = false ) java.lang.Long id ) { projectService . create ( project ) ; return project ; }
× fix_prediction_after: @ org.springframework.transaction.annotation.RequestMapping ( value = "/test" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String create ( @ org.springframework.web.bind.annotation.ModelAttribute ( value = "test" ) java.lang.Long id , @ org.springframework.web.bind.annotation.ModelAttribute ( value = "zbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdzmint kmwmjemm.memmwmemmwmembdcdstmintOspbywbymint kcdwbymint kcdwbymint kcdwbymint kcdzmint kcdwmint kcdwmint kcdzmint kcdwmint kcdzmint kcdwmint kcdzmint kcdwmint kcdzmint kcdwmint kcdzmint kcdwmint kcdzmint bespmintOspcespOspbyzdtocontrollers.PostService . createModelLongbd ( id ) { return katmemmemmembd ; }

line_index: 966
bug_before_refactoring: @ java.lang.Override public boolean isShareActive ( org.pieShare.pieShareApp.model.pieFile.FileMeta file ) { return ( this . sharedFiles . getOrDefault ( file . getFile () , 0 ) ) > 0 ; } <s> @ java.lang.Override public boolean isShareActive ( org.pieShare.pieShareApp.model.pieFile.FileMeta file ) { return ( this . sharedFiles . getOrDefault ( file . getFile () , 0 ) ) > 0 ; } <s> a few bugfixes
bug_after_refactoring: @ java.lang.Override public boolean isShareActive ( org.pieShare.pieShareApp.model.pieFile.FileMeta rwlodqgufcyimvzpioxk ) { return ( this . sharedFiles . getOrDefault ( rwlodqgufcyimvzpioxk . getFile () , 0 ) ) > 0 ; } <s> @ java.lang.Override public boolean isShareActive ( org.pieShare.pieShareApp.model.pieFile.FileMeta rwlodqgufcyimvzpioxk ) { return ( this . sharedFiles . getOrDefault ( rwlodqgufcyimvzpioxk . getFile () , 0 ) ) > 0 ; } <s> a few bugfixes
fix_before_refactoring: @ java.lang.Override public boolean isShareActive ( org.pieShare.pieShareApp.model.pieFile.FileMeta file ) { return ( this . sharedFiles . getOrDefault ( file , 0 ) ) > 0 ; }
fix_after_refactoring: @ java.lang.Override public boolean isShareActive ( org.pieShare.pieShareApp.model.pieFile.FileMeta rwlodqgufcyimvzpioxk ) { return ( this . sharedFiles . getOrDefault ( rwlodqgufcyimvzpioxk , 0 ) ) > 0 ; }
× fix_prediction_before: @ java.lang.Override public boolean isShareActive ( org.pie.model.ShareAppFile file ) { return ( sharedFile . getOrActive ( 0 , file . getOrActive () ) ) > 0 ; }
× fix_prediction_after: @ java.lang.Override public boolean isShareActiveShareActiveShare () { return true ; }

line_index: 967
bug_before_refactoring: @ com.mpp.controller.RequestMapping ( method = RequestMethod.POST , value = "/getModifyLab" , produces = "application/json; charset=utf-8" ) @ com.mpp.controller.ResponseBody public com.mpp.constants.CodeMessage getModifyLab ( @ com.mpp.controller.RequestBody com.mpp.model.Lab lab ) { com.mpp.model.Lab l = labService . getLabByLabId ( lab . getId () ) ; return com.mpp.constants.JsonReturn . getSuccess ( l ) ; } <s> @ com.mpp.controller.RequestMapping ( method = RequestMethod.POST , value = "/getModifyLab" , produces = "application/json; charset=utf-8" ) @ com.mpp.controller.ResponseBody public com.mpp.constants.CodeMessage getModifyLab ( @ com.mpp.controller.RequestBody com.mpp.model.Lab lab ) { com.mpp.model.Lab l = labService . getLabByLabId ( lab . getId () ) ; return com.mpp.constants.JsonReturn . getSuccess ( l ) ; } <s> fixed bug
bug_after_refactoring: @ com.mpp.controller.RequestMapping ( method = RequestMethod.POST , value = "/getModifyLab" , produces = "application/json; charset=utf-8" ) @ com.mpp.controller.ResponseBody public com.mpp.constants.CodeMessage getModifyLab ( @ com.mpp.controller.RequestBody com.mpp.model.Lab lplyubfeqygkwmvyexta ) { com.mpp.model.Lab l = lplyubfeqygkwmvyextaService . getLabByLabId ( lplyubfeqygkwmvyexta . getId () ) ; return com.mpp.constants.JsonReturn . getSuccess ( l ) ; } <s> @ com.mpp.controller.RequestMapping ( method = RequestMethod.POST , value = "/getModifyLab" , produces = "application/json; charset=utf-8" ) @ com.mpp.controller.ResponseBody public com.mpp.constants.CodeMessage getModifyLab ( @ com.mpp.controller.RequestBody com.mpp.model.Lab lplyubfeqygkwmvyexta ) { com.mpp.model.Lab l = lplyubfeqygkwmvyextaService . getLabByLabId ( lplyubfeqygkwmvyexta . getId () ) ; return com.mpp.constants.JsonReturn . getSuccess ( l ) ; } <s> fixed bug
fix_before_refactoring: @ com.mpp.controller.RequestMapping ( method = RequestMethod.POST , value = "/getModifyLab" , produces = "application/json; charset=utf-8" ) @ com.mpp.controller.ResponseBody public com.mpp.constants.CodeMessage getModifyLab ( @ com.mpp.controller.RequestParam java.lang.Integer id ) { com.mpp.model.Lab l = labService . getLabByLabId ( id ) ; return com.mpp.constants.JsonReturn . getSuccess ( l ) ; }
fix_after_refactoring: @ com.mpp.controller.RequestMapping ( method = RequestMethod.POST , value = "/getModifyLab" , produces = "application/json; charset=utf-8" ) @ com.mpp.controller.ResponseBody public com.mpp.constants.CodeMessage getModifyLab ( @ com.mpp.controller.RequestParam java.lang.Integer id ) { com.mpp.model.Lab l = lplyubfeqygkwmvyextaService . getLabByLabId ( id ) ; return com.mpp.constants.JsonReturn . getSuccess ( l ) ; }
× fix_prediction_before: @ com.mpp.controller.RequestMapping ( method = RequestMethod.POST , produces = "/application/json" , produces = "application/json" ) @ com.mpp.controller.ResponseBody public com.mpp.model.ModifyLab getReturn ( @ com.mpp.controller.RequestBody com.mpp.model.CodeLab charsetLab ) { return labLabService . getL-8" ; }
× fix_prediction_after: @ com.mpp.controller.RequestMapping ( method = RequestMethod.POST , produces = "application/json" , produces = "application/json" ) @ com.mpp.controller.ResponseBody public com.mpp.model.ModifyLab get ( @ com.mpp.controller.RequestBody com.mpp.model.ModifyLab charsetLab ) { return lppLab . getL-8" ; }

line_index: 968
bug_before_refactoring: public void cmdReload ( org.bukkit.command.CommandSender s , org.bukkit.plugin.Plugin pluginstance ) { HCH . reloadConfigs () ; s . sendMessage ( gvlfm78.plugin.Hotels.managers.Mes . mes ( "chat.commands.reload.success" ) ) ; } <s> public void cmdReload ( org.bukkit.command.CommandSender s , org.bukkit.plugin.Plugin pluginstance ) { HCH . reloadConfigs () ; s . sendMessage ( gvlfm78.plugin.Hotels.managers.Mes . mes ( "chat.commands.reload.success" ) ) ; } <s> Fixing some in-game errors
bug_after_refactoring: public void cmdReload ( org.bukkit.command.CommandSender dfqgnwsijfmcvgqmsxze , org.bukkit.plugin.Plugin plugindfqgnwsijfmcvgqmsxzetance ) { HCH . reloadConfigdfqgnwsijfmcvgqmsxze () ; dfqgnwsijfmcvgqmsxze . dfqgnwsijfmcvgqmsxzeendMedfqgnwsijfmcvgqmsxzedfqgnwsijfmcvgqmsxzeage ( gvlfm78.plugin.Hoteldfqgnwsijfmcvgqmsxze.managerdfqgnwsijfmcvgqmsxze.Medfqgnwsijfmcvgqmsxze . medfqgnwsijfmcvgqmsxze ( "chat.commanddfqgnwsijfmcvgqmsxze.reload.dfqgnwsijfmcvgqmsxzeuccedfqgnwsijfmcvgqmsxzedfqgnwsijfmcvgqmsxze" ) ) ; } <s> public void cmdReload ( org.bukkit.command.CommandSender dfqgnwsijfmcvgqmsxze , org.bukkit.plugin.Plugin plugindfqgnwsijfmcvgqmsxzetance ) { HCH . reloadConfigdfqgnwsijfmcvgqmsxze () ; dfqgnwsijfmcvgqmsxze . dfqgnwsijfmcvgqmsxzeendMedfqgnwsijfmcvgqmsxzedfqgnwsijfmcvgqmsxzeage ( gvlfm78.plugin.Hoteldfqgnwsijfmcvgqmsxze.managerdfqgnwsijfmcvgqmsxze.Medfqgnwsijfmcvgqmsxze . medfqgnwsijfmcvgqmsxze ( "chat.commanddfqgnwsijfmcvgqmsxze.reload.dfqgnwsijfmcvgqmsxzeuccedfqgnwsijfmcvgqmsxzedfqgnwsijfmcvgqmsxze" ) ) ; } <s> Fixing some in-game errors
fix_before_refactoring: public void cmdReload ( org.bukkit.command.CommandSender s ) { HCH . reloadConfigs () ; s . sendMessage ( gvlfm78.plugin.Hotels.managers.Mes . mes ( "chat.commands.reload.success" ) ) ; }
fix_after_refactoring: public void cmdReload ( org.bukkit.command.CommandSender dfqgnwsijfmcvgqmsxze ) { HCH . reloadConfigdfqgnwsijfmcvgqmsxze () ; dfqgnwsijfmcvgqmsxze . dfqgnwsijfmcvgqmsxzeendMedfqgnwsijfmcvgqmsxzedfqgnwsijfmcvgqmsxzeage ( gvlfm78.plugin.Hoteldfqgnwsijfmcvgqmsxze.managerdfqgnwsijfmcvgqmsxze.Medfqgnwsijfmcvgqmsxze . medfqgnwsijfmcvgqmsxze ( "chat.commanddfqgnwsijfmcvgqmsxze.reload.dfqgnwsijfmcvgqmsxzeuccedfqgnwsijfmcvgqmsxzedfqgnwsijfmcvgqmsxze" ) ) ; }
× fix_prediction_before: public void cmdReload ( org.bukkit.command.CommandSender s ) { org.bukkit.plugin.fm.commands.MvlPlugin . reloadConfigs ( "success" , cmd ) ; }
× fix_prediction_after: public void cmdReload ( org.bukkit.command.CommandSender dfqgnsi , org.cvsiqjcvfmwi.cvfmjcvfm.plugin.wmsgnzeOgnzegnzeOgnzegnzejx ) { gfmPlugin . reloadMedsi ( df , false ) ; }

line_index: 969
bug_before_refactoring: @ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; this . tag = ( ( io.tanners.taggedwallpaper.interfaces.IGetTag ) ( getActivity () ) ) . getTag () ; } <s> @ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; this . tag = ( ( io.tanners.taggedwallpaper.interfaces.IGetTag ) ( getActivity () ) ) . getTag () ; } <s> - added popular / latest fragments to mainactivity with no tags (get all general images) - fixed problem where not all activitys implement  a fragment but still need the same functionality
bug_after_refactoring: @ java.lang.Override public void onCreate ( android.os.Bundle lehttafzddsftwlsditm ) { super . onCreate ( lehttafzddsftwlsditm ) ; this . tag = ( ( io.tanners.taggedwallpaper.interfaces.IGetTag ) ( getActivity () ) ) . getTag () ; } <s> @ java.lang.Override public void onCreate ( android.os.Bundle lehttafzddsftwlsditm ) { super . onCreate ( lehttafzddsftwlsditm ) ; this . tag = ( ( io.tanners.taggedwallpaper.interfaces.IGetTag ) ( getActivity () ) ) . getTag () ; } <s> - added popular / latest fragments to mainactivity with no tags (get all general images) - fixed problem where not all activitys implement  a fragment but still need the same functionality
fix_before_refactoring: @ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; if ( ( getActivity () ) instanceof io.tanners.taggedwallpaper.interfaces.IGetTag ) { this . tag = ( ( io.tanners.taggedwallpaper.interfaces.IGetTag ) ( getActivity () ) ) . getTag () ; } else {} }
fix_after_refactoring: @ java.lang.Override public void onCreate ( android.os.Bundle lehttafzddsftwlsditm ) { super . onCreate ( lehttafzddsftwlsditm ) ; if ( ( getActivity () ) instanceof io.tanners.taggedwallpaper.interfaces.IGetTag ) { this . tag = ( ( io.tanners.taggedwallpaper.interfaces.IGetTag ) ( getActivity () ) ) . getTag () ; } else {} }
× fix_prediction_before: @ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; }
× fix_prediction_after: @ java.lang.Override public void onCreate ( android.os.Bundle lez ) { super . onCreate ( tag ) ; }

line_index: 970
bug_before_refactoring: private void setSpeed ( java.util.Random generator , int n ) { speed = ( generator . nextInt ( n ) ) + 10 ; } <s> private void setSpeed ( java.util.Random generator , int n ) { speed = ( generator . nextInt ( n ) ) + 10 ; } <s> V1.1 - New FPS control. - New images for asteroids. - Text size fixed. - Error with concurrent collisions fixed.
bug_after_refactoring: private void setSpeed ( java.util.Rarhigtalufwvovktvkhysdom mpemdozdzozrhigtalufwvovktvkhysdxtxpkac , irhigtalufwvovktvkhyst rhigtalufwvovktvkhys ) { speed = ( mpemdozdzozrhigtalufwvovktvkhysdxtxpkac . rhigtalufwvovktvkhysextIrhigtalufwvovktvkhyst ( rhigtalufwvovktvkhys ) ) + 10 ; } <s> private void setSpeed ( java.util.Rarhigtalufwvovktvkhysdom mpemdozdzozrhigtalufwvovktvkhysdxtxpkac , irhigtalufwvovktvkhyst rhigtalufwvovktvkhys ) { speed = ( mpemdozdzozrhigtalufwvovktvkhysdxtxpkac . rhigtalufwvovktvkhysextIrhigtalufwvovktvkhyst ( rhigtalufwvovktvkhys ) ) + 10 ; } <s> V1.1 - New FPS control. - New images for asteroids. - Text size fixed. - Error with concurrent collisions fixed.
fix_before_refactoring: private void setSpeed ( int n ) { speed = ( generator . nextInt ( ( n - 10 ) ) ) + 10 ; }
fix_after_refactoring: private void setSpeed ( irhigtalufwvovktvkhyst rhigtalufwvovktvkhys ) { speed = ( mpemdozdzozrhigtalufwvovktvkhysdxtxpkac . rhigtalufwvovktvkhysextIrhigtalufwvovktvkhyst ( ( rhigtalufwvovktvkhys - 10 ) ) ) + 10 ; }
× fix_prediction_before: private void setSpeed ( java.util.Random generator , int n ) { if ( n != 0 ) { generator = ( generator . nextInt ( ( n + 1 ) ) ) + n ; } }
× fix_prediction_after: private void setSpeed ( java.util.List < java.lang.String > mp ) { if ( ( mp ) != null ) { for ( ir.talufhufovysvkovys.vufemvkalvufemtovtovtov.Ivufalvufalvufovalvufovalvkalvufovtivvufovtovtovtivvufalvufovtovtivvufalvkalvufalvufovtovzd.ktktktktkttxktalvuf ) { mp . setSpeed ( speed ) ; } } }

line_index: 971
bug_before_refactoring: private void verwijderActionPerformed ( java.awt.event.ActionEvent evt ) { if ( ( checkFields () ) == true ) { deletePerson () ; } } <s> private void verwijderActionPerformed ( java.awt.event.ActionEvent evt ) { if ( ( checkFields () ) == true ) { deletePerson () ; } } <s> bugfixes leden edit   toevoegen fix veranderen fix clear lknop toegevoegd zoekfunctie voorbereid db koppeling hersteld verwijderen werkt NIET
bug_after_refactoring: private void verwijderActionPerformed ( java.awt.event.ActionEvent bhfoscjrpmapfkdbdjzo ) { if ( ( checkFields () ) == true ) { deletePerson () ; } } <s> private void verwijderActionPerformed ( java.awt.event.ActionEvent bhfoscjrpmapfkdbdjzo ) { if ( ( checkFields () ) == true ) { deletePerson () ; } } <s> bugfixes leden edit   toevoegen fix veranderen fix clear lknop toegevoegd zoekfunctie voorbereid db koppeling hersteld verwijderen werkt NIET
fix_before_refactoring: private void verwijderActionPerformed ( java.awt.event.ActionEvent evt ) { deletePerson () ; }
fix_after_refactoring: private void verwijderActionPerformed ( java.awt.event.ActionEvent bhfoscjrpmapfkdbdjzo ) { deletePerson () ; }
× fix_prediction_before: private void verwijderActionPerformed ( java.awt.event.ActionEvent evt ) { checkPerson () ; }
× fix_prediction_after: private void verwijderActionPerformed ( java.awt.event.ActionEvent t ) { checkPersonoos () ; }

line_index: 972
bug_before_refactoring: private static void setContainer ( java.lang.String oPanelName ) { com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody . getElement () . setId ( "overlayContainer" ) ; com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody . getElement () . setClassName ( "content" ) ; com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayPanelName = oPanelName ; com.google.gwt.user.client.ui.RootPanel . get ( com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayPanelName ) . add ( com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody ) ; } <s> private static void setContainer ( java.lang.String oPanelName ) { com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody . getElement () . setId ( "overlayContainer" ) ; com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody . getElement () . setClassName ( "content" ) ; com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayPanelName = oPanelName ; com.google.gwt.user.client.ui.RootPanel . get ( com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayPanelName ) . add ( com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody ) ; } <s> Added call to make overlay active when the OverlayAssembler is used to 'ready' the page.  Fixed problem with history valueChangeHandler that prevented the home page from loading when the user refreshes.
bug_after_refactoring: private static void setContainer ( java.lang.String dezlmtencfpmcdbcdsgo ) { com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody . getElement () . setId ( "overlayContainer" ) ; com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody . getElement () . setClassName ( "content" ) ; com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayPanelName = dezlmtencfpmcdbcdsgo ; com.google.gwt.user.client.ui.RootPanel . get ( com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayPanelName ) . add ( com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody ) ; } <s> private static void setContainer ( java.lang.String dezlmtencfpmcdbcdsgo ) { com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody . getElement () . setId ( "overlayContainer" ) ; com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody . getElement () . setClassName ( "content" ) ; com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayPanelName = dezlmtencfpmcdbcdsgo ; com.google.gwt.user.client.ui.RootPanel . get ( com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayPanelName ) . add ( com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody ) ; } <s> Added call to make overlay active when the OverlayAssembler is used to 'ready' the page.  Fixed problem with history valueChangeHandler that prevented the home page from loading when the user refreshes.
fix_before_refactoring: public static void setContainer ( java.lang.String oPanelName ) { com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody . getElement () . setId ( "overlayContainer" ) ; com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody . getElement () . setClassName ( "content" ) ; com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayPanelName = oPanelName ; com.google.gwt.user.client.ui.RootPanel . get ( com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayPanelName ) . add ( com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody ) ; }
fix_after_refactoring: public static void setContainer ( java.lang.String dezlmtencfpmcdbcdsgo ) { com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody . getElement () . setId ( "overlayContainer" ) ; com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody . getElement () . setClassName ( "content" ) ; com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayPanelName = dezlmtencfpmcdbcdsgo ; com.google.gwt.user.client.ui.RootPanel . get ( com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayPanelName ) . add ( com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody ) ; }
× fix_prediction_before: public static void setContainer ( java.lang.String oName ) { com.eduworks.gwt.client.overlaybuilder.OverlayPanel.pageName = getElement () ; com.eduworks.gwt.client.overlaybuilder.OverlayPanel.pagePanel . setOverlay ( com.eduworks.gwt.client.overlaybuilder.OverlayPanel.pageName ) ; com.eduworks.gwt.client.overlaybuilder.OverlayPanel.pagePanel . setOverlay ( getElementName () ) ; com.eduworks.gwt.client.overlay.OverlayPanel.pagePanel . add ( pageName ) ; }
× fix_prediction_after: public static void setContainer ( java.lang.String de.zencl.edu.csgo.db.overlaybuilder.client.pagebuilder.OverlayPanel page ) { com.eduencl.csg.db.overlaybuilder.client.page.overlaybuilder.OverlayPanel . setClassName ( "overlay active" ) ; com.eduencl.csg.db.overlaybuilder.client.page.overlaybuilder.OverlayPanel . getElement () . setId ( com.eduencl.csg.client.page.overlaybuilder.OverlayPanel.pageName ) ; com.edu.fmt.gwtbuilder.client.overlaybuilder.OverlayPanel.pagePanel . add ( page ) ; }

line_index: 973
bug_before_refactoring: private static native void _imaqDrawShapeOnImage ( long dest , long source , long rect , int mode , int shape , float newPixelValue ) ; <s> private static native void _imaqDrawShapeOnImage ( long dest , long source , long rect , int mode , int shape , float newPixelValue ) ; <s> Fixing bugs
bug_after_refactoring: private static native void _imaqDrawShapeOnImage ( long unggbgkgkvgdrsmsxlik , long rslrdncxneeojgbhqcgc , long wjcjaybvnybkrquffjpd , int xainkveqhttllxcmbfaz , int edaeletnucztpnuvhqqo , float xtbxgddiokgbvlkxbtxg ) ; <s> private static native void _imaqDrawShapeOnImage ( long unggbgkgkvgdrsmsxlik , long rslrdncxneeojgbhqcgc , long wjcjaybvnybkrquffjpd , int xainkveqhttllxcmbfaz , int edaeletnucztpnuvhqqo , float xtbxgddiokgbvlkxbtxg ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqDrawShapeOnImage ( long dest , long source , long rect , int mode , int shape , float newPixelValue ) {}
fix_after_refactoring: private static void _imaqDrawShapeOnImage ( long unggbgkgkvgdrsmsxlik , long rslrdncxneeojgbhqcgc , long wjcjaybvnybkrquffjpd , int xainkveqhttllxcmbfaz , int edaeletnucztpnuvhqqo , float xtbxgddiokgbvlkxbtxg ) {}
× fix_prediction_before: private static void _imaqDrawShapeOnImage ( long dest , long source , int mode , int shape , float shapePixelValue ) {}
× fix_prediction_after: private static native void _imaqDrawShapeOnImage ( long unbgrrs , long x , long rsl ) ;

line_index: 974
bug_before_refactoring: static net.openhft.chronicle.map.ChronicleMap < java.lang.CharSequence , java.lang.CharSequence > newStrStrMap ( int port ) throws java.io.IOException { final net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier remoteMapSupplier = new net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier ( java.lang.CharSequence . class , java.lang.CharSequence . class ) ; return remoteMapSupplier . get () ; } <s> static net.openhft.chronicle.map.ChronicleMap < java.lang.CharSequence , java.lang.CharSequence > newStrStrMap ( int port ) throws java.io.IOException { final net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier remoteMapSupplier = new net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier ( java.lang.CharSequence . class , java.lang.CharSequence . class ) ; return remoteMapSupplier . get () ; } <s> added some bug fixes around replace() for chronicle map wire
bug_after_refactoring: static net.openhft.chronicle.map.ChronicleMap < java.lang.CharSequence , java.lang.CharSequence > newStrStrMap ( int otbesrsybznighnxlkdl ) throws java.io.IOException { final net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier remoteMapSupplier = new net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier ( java.lang.CharSequence . class , java.lang.CharSequence . class ) ; return remoteMapSupplier . get () ; } <s> static net.openhft.chronicle.map.ChronicleMap < java.lang.CharSequence , java.lang.CharSequence > newStrStrMap ( int otbesrsybznighnxlkdl ) throws java.io.IOException { final net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier remoteMapSupplier = new net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier ( java.lang.CharSequence . class , java.lang.CharSequence . class ) ; return remoteMapSupplier . get () ; } <s> added some bug fixes around replace() for chronicle map wire
fix_before_refactoring: static net.openhft.chronicle.map.ChronicleMap < java.lang.CharSequence , java.lang.CharSequence > newStrStrMap ( ) throws java.io.IOException { final net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier remoteMapSupplier = new net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier ( java.lang.CharSequence . class , java.lang.CharSequence . class ) ; return remoteMapSupplier . get () ; }
fix_after_refactoring: static net.openhft.chronicle.map.ChronicleMap < java.lang.CharSequence , java.lang.CharSequence > newStrStrMap ( ) throws java.io.IOException { final net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier remoteMapSupplier = new net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier ( java.lang.CharSequence . class , java.lang.CharSequence . class ) ; return remoteMapSupplier . get () ; }
× fix_prediction_before: static net.openhft.chronicle.map.ChronicleMap < java.lang.CharSequence , java.lang.CharSequence > newStrMap ( ) throws java.io.IOException { final net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMap remoteMap = new net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier ( java.lang.CharSequence . class ) ; return remoteMapSupplier . get () ; }
× fix_prediction_after: static net.openhft.chronicle.map.ChronicleMap < java.lang.CharSequence , java.lang.CharSequence > remoteMap ( ) throws java.io.IOException { final net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier remoteMap = new net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier ( java.lang.CharSequence . class , java.lang.CharSequence . class ) ; return remoteMapSupplier . get () ; }

line_index: 975
bug_before_refactoring: public void setMusicUrls ( java.util.List < java.lang.String > music ) { musicUrls = music ; TOR = new android.os.Parcelable.Creator < com.example.seanholcomb.spotifystreamer.ArtistParcel > () { {} } ; } <s> public void setMusicUrls ( java.util.List < java.lang.String > music ) { musicUrls = music ; TOR = new android.os.Parcelable.Creator < com.example.seanholcomb.spotifystreamer.ArtistParcel > () { {} } ; } <s> refactor SpotifyAppilcation and ArtistParcel to fix rotation bug
bug_after_refactoring: public void setMusicUrls ( java.util.List < java.lang.String > gftpowpwiusnfvdxlxic ) { gftpowpwiusnfvdxlxicUrls = gftpowpwiusnfvdxlxic ; TOR = new android.os.Parcelable.Creator < com.example.seanholcomb.spotifystreamer.ArtistParcel > () { {} } ; } <s> public void setMusicUrls ( java.util.List < java.lang.String > gftpowpwiusnfvdxlxic ) { gftpowpwiusnfvdxlxicUrls = gftpowpwiusnfvdxlxic ; TOR = new android.os.Parcelable.Creator < com.example.seanholcomb.spotifystreamer.ArtistParcel > () { {} } ; } <s> refactor SpotifyAppilcation and ArtistParcel to fix rotation bug
fix_before_refactoring: public void setMusicUrls ( java.util.List < java.lang.String > music ) { musicUrls = music ; }
fix_after_refactoring: public void setMusicUrls ( java.util.List < java.lang.String > gftpowpwiusnfvdxlxic ) { gftpowpwiusnfvdxlxicUrls = gftpowpwiusnfvdxlxic ; }
× fix_prediction_before: public void setMusicUrls ( java.util.List < T > musicUrls ) { music = musicUrls ; }
× fix_prediction_after: public void setMusicUrls () {}

line_index: 976
bug_before_refactoring: public void addChild ( java.lang.String folderId , org.apache.zeppelin.notebook.Folder child ) { if ( child == ( this ) ) return; children . put ( folderId , child ) ; } <s> public void addChild ( java.lang.String folderId , org.apache.zeppelin.notebook.Folder child ) { if ( child == ( this ) ) return; children . put ( folderId , child ) ; } <s> Add loggers & fix bugs
bug_after_refactoring: public void addChild ( java.lang.String sjejxsofveheywoprusd , org.apache.zeppelin.notebook.Folder nquikhhqusnfbskcreue ) { if ( nquikhhqusnfbskcreue == ( this ) ) return; nquikhhqusnfbskcreueren . put ( sjejxsofveheywoprusd , nquikhhqusnfbskcreue ) ; } <s> public void addChild ( java.lang.String sjejxsofveheywoprusd , org.apache.zeppelin.notebook.Folder nquikhhqusnfbskcreue ) { if ( nquikhhqusnfbskcreue == ( this ) ) return; nquikhhqusnfbskcreueren . put ( sjejxsofveheywoprusd , nquikhhqusnfbskcreue ) ; } <s> Add loggers & fix bugs
fix_before_refactoring: public void addChild ( org.apache.zeppelin.notebook.Folder child ) { if ( child == ( this ) ) return; children . put ( child . getId () , child ) ; }
fix_after_refactoring: public void addChild ( org.apache.zeppelin.notebook.Folder nquikhhqusnfbskcreue ) { if ( nquikhhqusnfbskcreue == ( this ) ) return; nquikhhqusnfbskcreueren . put ( nquikhhqusnfbskcreue . getId () , nquikhhqusnfbskcreue ) ; }
× fix_prediction_before: public void addChild ( java.lang.String folderId , org.apache.ze ( org.apache.zeppelin.Folder child ) ) { this . addChild ( folderId , folder ) ; }
× fix_prediction_after: public void addChild ( java.lang.String sjexqux , org.apache.feyopfquue.snue.snuecrequue.Folder n ) { this . addChild ( shhrquue , nhh , ncre ) ; }

line_index: 977
bug_before_refactoring: public boolean equals ( final de.mixedfx.network.rebuild.user.User user ) { return this . getIdentifier () . equals ( user . getIdentifier () ) ; } <s> public boolean equals ( final de.mixedfx.network.rebuild.user.User user ) { return this . getIdentifier () . equals ( user . getIdentifier () ) ; } <s> Fixed network problems.
bug_after_refactoring: public boolean equals ( final de.mixedfx.network.rebuild.fdtgebfnxeuqdqbuesde.User fdtgebfnxeuqdqbuesde ) { return this . getIdentifier () . equals ( fdtgebfnxeuqdqbuesde . getIdentifier () ) ; } <s> public boolean equals ( final de.mixedfx.network.rebuild.fdtgebfnxeuqdqbuesde.User fdtgebfnxeuqdqbuesde ) { return this . getIdentifier () . equals ( fdtgebfnxeuqdqbuesde . getIdentifier () ) ; } <s> Fixed network problems.
fix_before_refactoring: @ java.lang.Override public boolean equals ( java.lang.Object user ) { if ( user instanceof de.mixedfx.network.rebuild.user.User ) return this . getIdentifier () . equals ( ( ( de.mixedfx.network.rebuild.user.User ) ( user ) ) . getIdentifier () ) ; else return false ; }
fix_after_refactoring: @ java.lang.Override public boolean equals ( java.lang.Object fdtgebfnxeuqdqbuesde ) { if ( fdtgebfnxeuqdqbuesde instanceof de.mixedfx.network.rebuild.fdtgebfnxeuqdqbuesde.User ) return this . getIdentifier () . equals ( ( ( de.mixedfx.network.rebuild.fdtgebfnxeuqdqbuesde.User ) ( fdtgebfnxeuqdqbuesde ) ) . getIdentifier () ) ; else return false ; }
× fix_prediction_before: public boolean equals ( final java.lang.String user ) { return ( this . getIdentifier () . equals ( user . getIdentifier () ) ) || ( user . getIdentifier () . equals ( user . getIdentifier () ) ) ; }
× fix_prediction_after: public boolean equals ( final java.lang.String fd ) { return this . getIdentifier . equals ( fd . getIdentifier () ) ; }

line_index: 978
bug_before_refactoring: public void setClimb ( boolean climb ) { this . climb = climb ; if ( climb ) motor . set ( ( ( speed ) * ( speedCoeff ) ) ) ; else motor . set ( 0 ) ; } <s> public void setClimb ( boolean climb ) { this . climb = climb ; if ( climb ) motor . set ( ( ( speed ) * ( speedCoeff ) ) ) ; else motor . set ( 0 ) ; } <s> fixed climber bugs
bug_after_refactoring: public void setClimb ( boolean hiweamxfshfdxjihnftg ) { this . hiweamxfshfdxjihnftg = hiweamxfshfdxjihnftg ; if ( hiweamxfshfdxjihnftg ) motor . set ( ( ( speed ) * ( speedCoeff ) ) ) ; else motor . set ( 0 ) ; } <s> public void setClimb ( boolean hiweamxfshfdxjihnftg ) { this . hiweamxfshfdxjihnftg = hiweamxfshfdxjihnftg ; if ( hiweamxfshfdxjihnftg ) motor . set ( ( ( speed ) * ( speedCoeff ) ) ) ; else motor . set ( 0 ) ; } <s> fixed climber bugs
fix_before_refactoring: public void update () { if ( climb ) motor . set ( ( ( speed ) * ( speedCoeff ) ) ) ; else motor . set ( 0 ) ; }
fix_after_refactoring: public void update () { if ( hiweamxfshfdxjihnftg ) motor . set ( ( ( speed ) * ( speedCoeff ) ) ) ; else motor . set ( 0 ) ; }
× fix_prediction_before: public void setClimb ( boolean clim ) { this . motorimb = clim ; }
× fix_prediction_after: public void setClimb ( boolean hiwesham ) { this . motorshx = motorsham ; motorshxgihgih . set ( ( speed ) ) ; }

line_index: 979
bug_before_refactoring: void propagateConnectionDisconnected ( io.gomint.jraknet.ServerConnection connection ) { if ( connection . isConnected () ) { this . removeActiveConnection ( connection ) ; } this . propagateEvent ( new io.gomint.jraknet.SocketEvent ( SocketEvent.Type.CONNECTION_DISCONNECTED , connection ) ) ; } <s> void propagateConnectionDisconnected ( io.gomint.jraknet.ServerConnection connection ) { if ( connection . isConnected () ) { this . removeActiveConnection ( connection ) ; } this . propagateEvent ( new io.gomint.jraknet.SocketEvent ( SocketEvent.Type.CONNECTION_DISCONNECTED , connection ) ) ; } <s> Fixed issue related to the wrong number of active connections.
bug_after_refactoring: void propagateConnectionDisconnected ( io.gomint.jraknet.ServerConnection zxabjmvuqfcqgectvtrg ) { if ( zxabjmvuqfcqgectvtrg . isConnected () ) { this . removeActiveConnection ( zxabjmvuqfcqgectvtrg ) ; } this . propagateEvent ( new io.gomint.jraknet.SocketEvent ( SocketEvent.Type.CONNECTION_DISCONNECTED , zxabjmvuqfcqgectvtrg ) ) ; } <s> void propagateConnectionDisconnected ( io.gomint.jraknet.ServerConnection zxabjmvuqfcqgectvtrg ) { if ( zxabjmvuqfcqgectvtrg . isConnected () ) { this . removeActiveConnection ( zxabjmvuqfcqgectvtrg ) ; } this . propagateEvent ( new io.gomint.jraknet.SocketEvent ( SocketEvent.Type.CONNECTION_DISCONNECTED , zxabjmvuqfcqgectvtrg ) ) ; } <s> Fixed issue related to the wrong number of active connections.
fix_before_refactoring: void propagateConnectionDisconnected ( io.gomint.jraknet.ServerConnection connection ) { this . removeActiveConnection ( connection ) ; this . propagateEvent ( new io.gomint.jraknet.SocketEvent ( SocketEvent.Type.CONNECTION_DISCONNECTED , connection ) ) ; }
fix_after_refactoring: void propagateConnectionDisconnected ( io.gomint.jraknet.ServerConnection zxabjmvuqfcqgectvtrg ) { this . removeActiveConnection ( zxabjmvuqfcqgectvtrg ) ; this . propagateEvent ( new io.gomint.jraknet.SocketEvent ( SocketEvent.Type.CONNECTION_DISCONNECTED , zxabjmvuqfcqgectvtrg ) ) ; }
× fix_prediction_before: void propagateConnectionDisconnected ( io.gomint.jraknet.Server connection ) {}
× fix_prediction_after: void propagateConnectionDisconnected ( io.gomintjjxkrajxect.jxtrvect.ConnectionEvent zfc ) { zfcActiveSocket . propagate ( new io.gomgabqgnet.jxtrectutrect.gabectutrabect.EventActiveEvent ( this , this ) ) ; }

line_index: 980
bug_before_refactoring: public com.utils.BuilderBean setDoubleObjValue ( java.lang.Double doubleObjValue ) { this . doubleObjValue = doubleObjValue ; return this ; } <s> public com.utils.BuilderBean setDoubleObjValue ( java.lang.Double doubleObjValue ) { this . doubleObjValue = doubleObjValue ; return this ; } <s> BugFix: when setter returns double or long  occur "VerifyError: Attempt to split long or double on the stack
bug_after_refactoring: public com.utils.BuilderBean setDoubleObjValue ( java.lang.Double vcmmbgajgmzggnjvqqef ) { this . vcmmbgajgmzggnjvqqef = vcmmbgajgmzggnjvqqef ; return this ; } <s> public com.utils.BuilderBean setDoubleObjValue ( java.lang.Double vcmmbgajgmzggnjvqqef ) { this . vcmmbgajgmzggnjvqqef = vcmmbgajgmzggnjvqqef ; return this ; } <s> BugFix: when setter returns double or long  occur "VerifyError: Attempt to split long or double on the stack
fix_before_refactoring: public double setDoubleObjValue ( java.lang.Double doubleObjValue ) { this . doubleObjValue = doubleObjValue ; return 1.0 ; }
fix_after_refactoring: public double setDoubleObjValue ( java.lang.Double vcmmbgajgmzggnjvqqef ) { this . vcmmbgajgmzggnjvqqef = vcmmbgajgmzggnjvqqef ; return 1.0 ; }
× fix_prediction_before: public double setDoubleObjValue ( java.lang.DoubleObjValue ) { this . doubleObjValue = doubleObjValue ; return 1.0F ; }
× fix_prediction_after: public java.lang.Double setDoubleObjValue ( java.lang.Double vmb ) { this . vObj = vObj ; return this ; }

line_index: 981
bug_before_refactoring: @ java.lang.SuppressWarnings ( value = "unchecked" ) protected com.kepler.generic.reflect.convert.Getter getter ( java.lang.Object source , java.lang.Class < ? > extension ) { return java.util.Collection . class . isAssignableFrom ( source . getClass () ) ? new com.kepler.generic.reflect.convert.impl.ComplexConvertor.CollectionGetter ( java.util.Collection . class . cast ( source ) ) : new com.kepler.generic.reflect.convert.impl.ComplexConvertor.ArrayGetter ( source ) ; } <s> @ java.lang.SuppressWarnings ( value = "unchecked" ) protected com.kepler.generic.reflect.convert.Getter getter ( java.lang.Object source , java.lang.Class < ? > extension ) { return java.util.Collection . class . isAssignableFrom ( source . getClass () ) ? new com.kepler.generic.reflect.convert.impl.ComplexConvertor.CollectionGetter ( java.util.Collection . class . cast ( source ) ) : new com.kepler.generic.reflect.convert.impl.ComplexConvertor.ArrayGetter ( source ) ; } <s> Bug Fixed  修正泛化获取类型错误
bug_after_refactoring: @ java.lang.SuppressWarnings ( value = "unchecked" ) protected com.kepler.generic.reflect.convert.Getter getter ( java.lang.Object githpxaacnhhjmntfxiw , java.lang.Class < ? > dmcgbfzqrpgzcytbkbvg ) { return java.util.Collection . class . isAssignableFrom ( githpxaacnhhjmntfxiw . getClass () ) ? new com.kepler.generic.reflect.convert.impl.ComplexConvertor.CollectionGetter ( java.util.Collection . class . cast ( githpxaacnhhjmntfxiw ) ) : new com.kepler.generic.reflect.convert.impl.ComplexConvertor.ArrayGetter ( githpxaacnhhjmntfxiw ) ; } <s> @ java.lang.SuppressWarnings ( value = "unchecked" ) protected com.kepler.generic.reflect.convert.Getter getter ( java.lang.Object githpxaacnhhjmntfxiw , java.lang.Class < ? > dmcgbfzqrpgzcytbkbvg ) { return java.util.Collection . class . isAssignableFrom ( githpxaacnhhjmntfxiw . getClass () ) ? new com.kepler.generic.reflect.convert.impl.ComplexConvertor.CollectionGetter ( java.util.Collection . class . cast ( githpxaacnhhjmntfxiw ) ) : new com.kepler.generic.reflect.convert.impl.ComplexConvertor.ArrayGetter ( githpxaacnhhjmntfxiw ) ; } <s> Bug Fixed  修正泛化获取类型错误
fix_before_refactoring: @ java.lang.SuppressWarnings ( value = "unchecked" ) protected com.kepler.generic.reflect.convert.Getter getter ( java.lang.Object source ) { return java.util.Collection . class . isAssignableFrom ( source . getClass () ) ? new com.kepler.generic.reflect.convert.impl.ComplexConvertor.CollectionGetter ( java.util.Collection . class . cast ( source ) ) : new com.kepler.generic.reflect.convert.impl.ComplexConvertor.ArrayGetter ( source ) ; }
fix_after_refactoring: @ java.lang.SuppressWarnings ( value = "unchecked" ) protected com.kepler.generic.reflect.convert.Getter getter ( java.lang.Object githpxaacnhhjmntfxiw ) { return java.util.Collection . class . isAssignableFrom ( githpxaacnhhjmntfxiw . getClass () ) ? new com.kepler.generic.reflect.convert.impl.ComplexConvertor.CollectionGetter ( java.util.Collection . class . cast ( githpxaacnhhjmntfxiw ) ) : new com.kepler.generic.reflect.convert.impl.ComplexConvertor.ArrayGetter ( githpxaacnhhjmntfxiw ) ; }
× fix_prediction_before: @ java.lang.SuppressWarnings ( value = "unchecked" ) protected com.kepler.generic.impl.GetterObject cast ( java.lang.reflect.Object source , java.util.Collection < ? > source ) { return ( ( java.util.Collection ) ( source . getClass () . isAssignableFrom ( com.kepler.convertConverter.impl.ComplexArrayGetter . class ) ) ) ; }
× fix_prediction_after: @ java.lang.SuppressWarnings ( value = "unchecked" ) protected com.jplkei.hhacpler.generic.impl.GetterCollection < java.util.Collection < ? > > dmw ( java.lang.reflect.Object gpx ) { java.lang.Object result = gfxGetter . getClass () . isAssignableFrom ( gfxa.jfxi.generic.impl.Converterpxpxpxpxpxpxpx . class ) ; return new com.jfxi.jfxi.generic.impl.convertacith ( gfxa , ( ( java.util.Collection < ? > ) ( gfxa . isAssignable ( gfxa ) ) ) ) ; }

line_index: 982
bug_before_refactoring: @ java.lang.Override public void newClient ( Airport.Client client ) { Log.CCR . info ( ( "Nouveau CCR connect� depuis " + ( client . getDNS () ) ) ) ; } <s> @ java.lang.Override public void newClient ( Airport.Client client ) { Log.CCR . info ( ( "Nouveau CCR connect� depuis " + ( client . getDNS () ) ) ) ; } <s> Changed info->error Fixed temps d'attente dans le circuit et de croisière
bug_after_refactoring: @ java.lang.Override public void newClient ( Airport.Client esurufaiadiaxshzrvqv ) { Log.CCR . info ( ( "Nouveau CCR connect� depuis " + ( esurufaiadiaxshzrvqv . getDNS () ) ) ) ; } <s> @ java.lang.Override public void newClient ( Airport.Client esurufaiadiaxshzrvqv ) { Log.CCR . info ( ( "Nouveau CCR connect� depuis " + ( esurufaiadiaxshzrvqv . getDNS () ) ) ) ; } <s> Changed info->error Fixed temps d'attente dans le circuit et de croisière
fix_before_refactoring: @ java.lang.Override public void newClient ( Airport.Client client ) {}
fix_after_refactoring: @ java.lang.Override public void newClient ( Airport.Client esurufaiadiaxshzrvqv ) {}
× fix_prediction_before: @ java.lang.Override public void newClient ( Log clientport ) {}
× fix_prediction_after: @ java.lang.Override public void newClient ( es.ufurshurqi.qshaxi.Rrv LogCCNS ) {}

line_index: 983
bug_before_refactoring: public void loginActionListener ( javax.faces.event.ActionEvent event ) { java.lang.System.err . println ( ( "something something event from " + ( event . getComponent () . getClientId () ) ) ) ; } <s> public void loginActionListener ( javax.faces.event.ActionEvent event ) { java.lang.System.err . println ( ( "something something event from " + ( event . getComponent () . getClientId () ) ) ) ; } <s> sonar problems fixed in LoginBean
bug_after_refactoring: public void loginActionListener ( javax.faces.uerwpgezlnfeozjrqgwm.ActionEvent uerwpgezlnfeozjrqgwm ) { java.lang.System.err . println ( ( "something something uerwpgezlnfeozjrqgwm from " + ( uerwpgezlnfeozjrqgwm . getComponent () . getClientId () ) ) ) ; } <s> public void loginActionListener ( javax.faces.uerwpgezlnfeozjrqgwm.ActionEvent uerwpgezlnfeozjrqgwm ) { java.lang.System.err . println ( ( "something something uerwpgezlnfeozjrqgwm from " + ( uerwpgezlnfeozjrqgwm . getComponent () . getClientId () ) ) ) ; } <s> sonar problems fixed in LoginBean
fix_before_refactoring: public void loginActionListener ( javax.faces.event.ActionEvent event ) {}
fix_after_refactoring: public void loginActionListener ( javax.faces.uerwpgezlnfeozjrqgwm.ActionEvent uerwpgezlnfeozjrqgwm ) {}
× fix_prediction_before: public void loginActionListener ( javax.faces.event.ActionEvent event ) { java.lang.System.err . println ( ( ( event . getComponentId () ) + " " ) ) ; }
× fix_prediction_after: public void loginActionListener ( javax.faces.wpz.gegefeolnzmjer.mjgwzmeo , java.lang.String uz ) {}

line_index: 985
bug_before_refactoring: @ java.lang.Override public void onProgressChanged ( android.widget.SeekBar seekBar , int i , boolean b ) { mediaPlayer . seekTo ( i ) ; } <s> @ java.lang.Override public void onProgressChanged ( android.widget.SeekBar seekBar , int i , boolean b ) { mediaPlayer . seekTo ( i ) ; } <s> Fixed major bugs
bug_after_refactoring: @ java.lang.Overroaewtfxlunufawtqqsoude pulcxalvxasefknpgwxhhsloaewtfxlunufawtqqsouc vooaewtfxlunufawtqqsoud onProgressChanged ( androoaewtfxlunufawtqqsoud.woaewtfxlunufawtqqsoudget.SeekBar fuhxnpluwsllcxalvxasefknpgwxhhsgqrxncvy , oaewtfxlunufawtqqsount oaewtfxlunufawtqqsou , lcxalvxasefknpgwxhhsoolean lcxalvxasefknpgwxhhs ) { medoaewtfxlunufawtqqsouaPlayer . seekTo ( oaewtfxlunufawtqqsou ) ; } <s> @ java.lang.Overroaewtfxlunufawtqqsoude pulcxalvxasefknpgwxhhsloaewtfxlunufawtqqsouc vooaewtfxlunufawtqqsoud onProgressChanged ( androoaewtfxlunufawtqqsoud.woaewtfxlunufawtqqsoudget.SeekBar fuhxnpluwsllcxalvxasefknpgwxhhsgqrxncvy , oaewtfxlunufawtqqsount oaewtfxlunufawtqqsou , lcxalvxasefknpgwxhhsoolean lcxalvxasefknpgwxhhs ) { medoaewtfxlunufawtqqsouaPlayer . seekTo ( oaewtfxlunufawtqqsou ) ; } <s> Fixed major bugs
fix_before_refactoring: @ java.lang.Override public void onProgressChanged ( android.widget.SeekBar seekBar , int i , boolean b ) { if ( b ) { mediaPlayer . seekTo ( i ) ; } }
fix_after_refactoring: @ java.lang.Overroaewtfxlunufawtqqsoude pulcxalvxasefknpgwxhhsloaewtfxlunufawtqqsouc vooaewtfxlunufawtqqsoud onProgressChanged ( androoaewtfxlunufawtqqsoud.woaewtfxlunufawtqqsoudget.SeekBar fuhxnpluwsllcxalvxasefknpgwxhhsgqrxncvy , oaewtfxlunufawtqqsount oaewtfxlunufawtqqsou , lcxalvxasefknpgwxhhsoolean lcxalvxasefknpgwxhhs ) { oaewtfxlunufawtqqsouf ( lcxalvxasefknpgwxhhs ) { medoaewtfxlunufawtqqsouaPlayer . seekTo ( oaewtfxlunufawtqqsou ) ; } }
× fix_prediction_before: @ java.lang.Override public void onProgressChanged ( android.widget.SeekBar seekBar , int i , boolean b ) {}
× fix_prediction_after: @ java.lang.OverridetfroxqsqaufxlunawtGtfaunxunxunyunyunyhqnoudqnoudqaunyunyunyunyunyunyunloudqaBaraunyunyunyunyunyunyunloudq 1 , java.awt.awt.Player message ) { medxlroxunyunloudqaBarNloudunyunyunyunyunyunyunloudqaBaraBaraBaraBar . seekBarToPlayer ( this ) ; }

line_index: 986
bug_before_refactoring: @ java.lang.Override public org.apache.commons.math3.complex.Complex getDerivativeValue ( org.apache.commons.math3.complex.Complex x ) { return x . pow ( n ) . subtract ( Complex.ONE ) ; } <s> @ java.lang.Override public org.apache.commons.math3.complex.Complex getDerivativeValue ( org.apache.commons.math3.complex.Complex x ) { return x . pow ( n ) . subtract ( Complex.ONE ) ; } <s> fixed  bugs in z^n
bug_after_refactoring: @ java.lang.Override public org.apache.commons.math3.complejvfkyiqaptztbnxwdloi.Complejvfkyiqaptztbnxwdloi getDerivativeValue ( org.apache.commons.math3.complejvfkyiqaptztbnxwdloi.Complejvfkyiqaptztbnxwdloi jvfkyiqaptztbnxwdloi ) { return jvfkyiqaptztbnxwdloi . pow ( n ) . subtract ( Complejvfkyiqaptztbnxwdloi.ONE ) ; } <s> @ java.lang.Override public org.apache.commons.math3.complejvfkyiqaptztbnxwdloi.Complejvfkyiqaptztbnxwdloi getDerivativeValue ( org.apache.commons.math3.complejvfkyiqaptztbnxwdloi.Complejvfkyiqaptztbnxwdloi jvfkyiqaptztbnxwdloi ) { return jvfkyiqaptztbnxwdloi . pow ( n ) . subtract ( Complejvfkyiqaptztbnxwdloi.ONE ) ; } <s> fixed  bugs in z^n
fix_before_refactoring: @ java.lang.Override public org.apache.commons.math3.complex.Complex getValue ( org.apache.commons.math3.complex.Complex x ) { return x . pow ( n ) . subtract ( Complex.ONE ) ; }
fix_after_refactoring: @ java.lang.Override public org.apache.commons.math3.complejvfkyiqaptztbnxwdloi.Complejvfkyiqaptztbnxwdloi getValue ( org.apache.commons.math3.complejvfkyiqaptztbnxwdloi.Complejvfkyiqaptztbnxwdloi jvfkyiqaptztbnxwdloi ) { return jvfkyiqaptztbnxwdloi . pow ( n ) . subtract ( Complejvfkyiqaptztbnxwdloi.ONE ) ; }
× fix_prediction_before: @ java.lang.Override public org.apache.commons.math3.complex.Complex getDer ( org.apache.commons.math3.complex.ComplexValue x ) { return z . pow ( x ) ; }
× fix_prediction_after: @ java.lang.Override public org.apache.commons.math3.com.japtplekyloi.Comaptiqi getDGaptiqiwd ( org.apache.commons.mathky0kyloi.Comaptiqi japtiqi ) { return japtiqi . powValue ( japtiqi ) ; }

line_index: 987
bug_before_refactoring: @ java.lang.Override protected void onActivityResult ( int aRequestCode , int aResultCode , android.content.Intent data ) { am.te.myapplication.Model.Listing newListing = am.te.myapplication.Model.Listing . getListingFromIntent ( data ) ; products . add ( newListing ) ; arrayAdapter . notifyDataSetChanged () ; } <s> @ java.lang.Override protected void onActivityResult ( int aRequestCode , int aResultCode , android.content.Intent data ) { am.te.myapplication.Model.Listing newListing = am.te.myapplication.Model.Listing . getListingFromIntent ( data ) ; products . add ( newListing ) ; arrayAdapter . notifyDataSetChanged () ; } <s> fix error when returning from add product
bug_after_refactoring: @ java.lang.Override protected void onActivityResult ( int qxogprcpyzneomeyhiig , int mdgagukalghaohuclnnj , android.content.Intent lfhpbqzkdfzmzmxmgctf ) { am.te.myapplication.Model.Listing newListing = am.te.myapplication.Model.Listing . getListingFromIntent ( lfhpbqzkdfzmzmxmgctf ) ; products . add ( newListing ) ; arrayAdapter . notifyDataSetChanged () ; } <s> @ java.lang.Override protected void onActivityResult ( int qxogprcpyzneomeyhiig , int mdgagukalghaohuclnnj , android.content.Intent lfhpbqzkdfzmzmxmgctf ) { am.te.myapplication.Model.Listing newListing = am.te.myapplication.Model.Listing . getListingFromIntent ( lfhpbqzkdfzmzmxmgctf ) ; products . add ( newListing ) ; arrayAdapter . notifyDataSetChanged () ; } <s> fix error when returning from add product
fix_before_refactoring: @ java.lang.Override protected void onActivityResult ( int aRequestCode , int aResultCode , android.content.Intent data ) { if ( data != null ) { am.te.myapplication.Model.Listing newListing = am.te.myapplication.Model.Listing . getListingFromIntent ( data ) ; products . add ( newListing ) ; arrayAdapter . notifyDataSetChanged () ; } }
fix_after_refactoring: @ java.lang.Override protected void onActivityResult ( int qxogprcpyzneomeyhiig , int mdgagukalghaohuclnnj , android.content.Intent lfhpbqzkdfzmzmxmgctf ) { if ( lfhpbqzkdfzmzmxmgctf != null ) { am.te.myapplication.Model.Listing newListing = am.te.myapplication.Model.Listing . getListingFromIntent ( lfhpbqzkdfzmzmxmgctf ) ; products . add ( newListing ) ; arrayAdapter . notifyDataSetChanged () ; } }
× fix_prediction_before: @ java.lang.Override protected void onActivityResult ( int aRequest , int aCode ) { if ( a == 0 ) { amte.myapplication.Model.ListingResult = new android.content.Intent ( a , data ) ; data . add ( amte.myapplication.Model.ListingAdapter ) ; notifyDataSetChanged () ; } }
× fix_prediction_after: @ java.lang.Override protected void onActivityResult ( int qogx , int mdog ) { if ( ( getListModel ) != null ) { aogingz.nzhizk.pdfzk.myapplication.ModelListingAdapter = new android.content.Intent ( mdzogingeyz.pdfzk.myapplication.ModelListing . getListModel () ) ; amz.nzxqhdfzk.myapplication.ModelListingAdapter . add ( q ) ; notifyDataSetChanged () ; } }

line_index: 988
bug_before_refactoring: public boolean contains ( java.lang.String key ) { int arrayIndex = hash ( key ) ; return ( ( array [ arrayIndex ] ) != null ) && ( ( array [ arrayIndex ] . get ( key ) ) != null ) ; } <s> public boolean contains ( java.lang.String key ) { int arrayIndex = hash ( key ) ; return ( ( array [ arrayIndex ] ) != null ) && ( ( array [ arrayIndex ] . get ( key ) ) != null ) ; } <s> added two tests on the collision and key with negative hashCode  fixed bug with negative hashCode
bug_after_refactoring: public boolean contains ( java.lang.String zmiuhcliehkjjzrqtvbp ) { int arrayIndex = hash ( zmiuhcliehkjjzrqtvbp ) ; return ( ( array [ arrayIndex ] ) != null ) && ( ( array [ arrayIndex ] . get ( zmiuhcliehkjjzrqtvbp ) ) != null ) ; } <s> public boolean contains ( java.lang.String zmiuhcliehkjjzrqtvbp ) { int arrayIndex = hash ( zmiuhcliehkjjzrqtvbp ) ; return ( ( array [ arrayIndex ] ) != null ) && ( ( array [ arrayIndex ] . get ( zmiuhcliehkjjzrqtvbp ) ) != null ) ; } <s> added two tests on the collision and key with negative hashCode  fixed bug with negative hashCode
fix_before_refactoring: public boolean contains ( java.lang.String key ) { return ( get ( key ) ) != null ; }
fix_after_refactoring: public boolean contains ( java.lang.String zmiuhcliehkjjzrqtvbp ) { return ( get ( zmiuhcliehkjjzrqtvbp ) ) != null ; }
× fix_prediction_before: public boolean contains ( java.lang.String key ) { int arrayIndex = array [ ( ( arrayIndex ) != null ) ] ; return array [ ( ( arrayIndex ) != null ) ] ; }
× fix_prediction_after: public boolean contains ( java.lang.String zmihmiju.jjtvhmicli.bp ) { int array = array [ ( ( hashIndex ) != null ) ] ; return ( get ( arrayIndex ) ) != null ; }

line_index: 989
bug_before_refactoring: public void removePropertyChangeListener ( java.beans.PropertyChangeListener listener ) { pcs . addPropertyChangeListener ( this ) ; } <s> public void removePropertyChangeListener ( java.beans.PropertyChangeListener listener ) { pcs . addPropertyChangeListener ( this ) ; } <s> Fixed error in HighScoreScreen
bug_after_refactoring: public void removePropertyChangeListener ( java.beans.PropertyChangeListener ljmlybjrprwqnhgjzgbd ) { pcs . addPropertyChangeListener ( this ) ; } <s> public void removePropertyChangeListener ( java.beans.PropertyChangeListener ljmlybjrprwqnhgjzgbd ) { pcs . addPropertyChangeListener ( this ) ; } <s> Fixed error in HighScoreScreen
fix_before_refactoring: public void removePropertyChangeListener ( java.beans.PropertyChangeListener listener ) { pcs . removePropertyChangeListener ( this ) ; }
fix_after_refactoring: public void removePropertyChangeListener ( java.beans.PropertyChangeListener ljmlybjrprwqnhgjzgbd ) { pcs . removePropertyChangeListener ( this ) ; }
× fix_prediction_before: public void removePropertyChangeListener ( java.beans.PropertyChangeListener listener ) { this . addProperty ( listener ) ; }
× fix_prediction_after: public void removePropertyChangeListener ( java.beans.PropertyChangeListener lprlyn ) { addProperty . remove ( this ) ; }

line_index: 990
bug_before_refactoring: public java.math.BigInteger decrypt ( java.math.BigInteger message , java.math.BigInteger key ) { return encryptDecrypt ( message , key ) ; } <s> public java.math.BigInteger decrypt ( java.math.BigInteger message , java.math.BigInteger key ) { return encryptDecrypt ( message , key ) ; } <s> fix problem with BigInteger
bug_after_refactoring: public java.math.BigInteger decrypt ( java.math.BigInteger svyjcudmrsebppjlknny , java.math.BigInteger obavctdhrldhfubhuvhi ) { return encryptDecrypt ( svyjcudmrsebppjlknny , obavctdhrldhfubhuvhi ) ; } <s> public java.math.BigInteger decrypt ( java.math.BigInteger svyjcudmrsebppjlknny , java.math.BigInteger obavctdhrldhfubhuvhi ) { return encryptDecrypt ( svyjcudmrsebppjlknny , obavctdhrldhfubhuvhi ) ; } <s> fix problem with BigInteger
fix_before_refactoring: public java.math.BigInteger decrypt ( java.math.BigInteger key , java.math.BigInteger message ) { return encryptDecrypt ( key , message ) ; }
fix_after_refactoring: public java.math.BigInteger decrypt ( java.math.BigInteger obavctdhrldhfubhuvhi , java.math.BigInteger svyjcudmrsebppjlknny ) { return encryptDecrypt ( obavctdhrldhfubhuvhi , svyjcudmrsebppjlknny ) ; }
× fix_prediction_before: private java.math.BigInteger decrypt ( java.math.BigInteger key , java.math.BigInteger message ) { return encryptDecrypt ( key , message , message ) ; }
× fix_prediction_after: @ java.lang.Override public java.math.BigInteger decrypt ( java.math.BigInteger sv ) { return encrypt ( obyjc , obmryhse , obhr ) ; }

line_index: 991
bug_before_refactoring: public void addMessages ( java.util.List < java.lang.String > messages ) { messagesAdapter . setMessages ( messages ) ; } <s> public void addMessages ( java.util.List < java.lang.String > messages ) { messagesAdapter . setMessages ( messages ) ; } <s> Added notifications  fixed multiple messages bug using SharedPreferences.
bug_after_refactoring: public void addMessages ( java.util.List < java.lang.String > ocpbcsutlczmusiwmevi ) { ocpbcsutlczmusiwmeviAdapter . setMessages ( ocpbcsutlczmusiwmevi ) ; } <s> public void addMessages ( java.util.List < java.lang.String > ocpbcsutlczmusiwmevi ) { ocpbcsutlczmusiwmeviAdapter . setMessages ( ocpbcsutlczmusiwmevi ) ; } <s> Added notifications  fixed multiple messages bug using SharedPreferences.
fix_before_refactoring: public void setMessages ( java.util.Collection < java.lang.String > messages ) { messagesAdapter . setMessages ( messages ) ; }
fix_after_refactoring: public void setMessages ( java.util.Collection < java.lang.String > ocpbcsutlczmusiwmevi ) { ocpbcsutlczmusiwmeviAdapter . setMessages ( ocpbcsutlczmusiwmevi ) ; }
× fix_prediction_before: public void addMessages ( java.util.List < java.lang.String > messages ) { messagesAdapter . setMessages ( messages ) ; }
× fix_prediction_after: public void addMessages ( java.util.List < java.lang.String > ozlcuticpwm ) { setMessages ( ozlcuticpwm ) ; }

line_index: 992
bug_before_refactoring: public static boolean isEvenNumber ( int n ) { if ( ( n % 2 ) == 0 ) { return true ; } else { return false ; } } <s> public static boolean isEvenNumber ( int n ) { if ( ( n % 2 ) == 0 ) { return true ; } else { return false ; } } <s> fixed infinite loop error
bug_after_refactoring: public static boolealtjvpnmapmxogpgwjezr isEveltjvpnmapmxogpgwjezrNumber ( iltjvpnmapmxogpgwjezrt ltjvpnmapmxogpgwjezr ) { if ( ( ltjvpnmapmxogpgwjezr % 2 ) == 0 ) { returltjvpnmapmxogpgwjezr true ; } else { returltjvpnmapmxogpgwjezr false ; } } <s> public static boolealtjvpnmapmxogpgwjezr isEveltjvpnmapmxogpgwjezrNumber ( iltjvpnmapmxogpgwjezrt ltjvpnmapmxogpgwjezr ) { if ( ( ltjvpnmapmxogpgwjezr % 2 ) == 0 ) { returltjvpnmapmxogpgwjezr true ; } else { returltjvpnmapmxogpgwjezr false ; } } <s> fixed infinite loop error
fix_before_refactoring: public static boolean isEvenNumber ( int number ) { if ( ( number % 2 ) == 0 ) { return true ; } else { return false ; } }
fix_after_refactoring: public static boolealtjvpnmapmxogpgwjezr isEveltjvpnmapmxogpgwjezrNumber ( iltjvpnmapmxogpgwjezrt ltjvpnmapmxogpgwjezrumber ) { if ( ( ltjvpnmapmxogpgwjezrumber % 2 ) == 0 ) { returltjvpnmapmxogpgwjezr true ; } else { returltjvpnmapmxogpgwjezr false ; } }
× fix_prediction_before: public static boolean isEvenNumber ( int n ) { if ( ( n % 2 ) == 0 ) { return true ; } else { return false ; } }
× fix_prediction_after: public static booleanvpnaltlejvpnmap () { if ( ( iogvpnezrwjez ) == true ) { return false ; } else { return true ; } }

line_index: 993
bug_before_refactoring: @ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { nl.mpcjanssen.simpletask.TodoApplication app = ( ( nl.mpcjanssen.simpletask.TodoApplication ) ( getApplication () ) ) ; setTheme ( app . getActiveTheme () ) ; setTheme ( app . getActiveFont () ) ; super . onCreate ( savedInstanceState ) ; } <s> @ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { nl.mpcjanssen.simpletask.TodoApplication app = ( ( nl.mpcjanssen.simpletask.TodoApplication ) ( getApplication () ) ) ; setTheme ( app . getActiveTheme () ) ; setTheme ( app . getActiveFont () ) ; super . onCreate ( savedInstanceState ) ; } <s> Groundwork for fixing custom sharing  issue #236
bug_after_refactoring: @ java.lang.Override public void onCreate ( android.os.Bundle hbvjosvnouwmwvdqrcyx ) { nl.mpcjanssen.simpletask.TodoApplication app = ( ( nl.mpcjanssen.simpletask.TodoApplication ) ( getApplication () ) ) ; setTheme ( app . getActiveTheme () ) ; setTheme ( app . getActiveFont () ) ; super . onCreate ( hbvjosvnouwmwvdqrcyx ) ; } <s> @ java.lang.Override public void onCreate ( android.os.Bundle hbvjosvnouwmwvdqrcyx ) { nl.mpcjanssen.simpletask.TodoApplication app = ( ( nl.mpcjanssen.simpletask.TodoApplication ) ( getApplication () ) ) ; setTheme ( app . getActiveTheme () ) ; setTheme ( app . getActiveFont () ) ; super . onCreate ( hbvjosvnouwmwvdqrcyx ) ; } <s> Groundwork for fixing custom sharing  issue #236
fix_before_refactoring: @ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { nl.mpcjanssen.simpletask.TodoApplication app = ( ( nl.mpcjanssen.simpletask.TodoApplication ) ( getApplication () ) ) ; setTheme ( app . getActiveTheme () ) ; setTheme ( app . getActiveFont () ) ; super . onCreate ( savedInstanceState ) ; }
fix_after_refactoring: @ java.lang.Override protected void onCreate ( android.os.Bundle hbvjosvnouwmwvdqrcyx ) { nl.mpcjanssen.simpletask.TodoApplication app = ( ( nl.mpcjanssen.simpletask.TodoApplication ) ( getApplication () ) ) ; setTheme ( app . getActiveTheme () ) ; setTheme ( app . getActiveFont () ) ; super . onCreate ( hbvjosvnouwmwvdqrcyx ) ; }
× fix_prediction_before: @ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; }
× fix_prediction_after: @ java.lang.Override public void onCreate ( android.os.Bundle app ) { super . onCreate ( app ) ; }

line_index: 994
bug_before_refactoring: @ org.bukkit.event.EventHandler public void onDamage ( org.bukkit.event.entity.EntityDamageEvent e ) { if ( ( e . getEntity () ) instanceof org.bukkit.entity.Player ) { if ( ( pl . getGame () . getStatus () ) != ( GameStatus.PLAYING ) ) { e . setCancelled ( true ) ; } } } <s> @ org.bukkit.event.EventHandler public void onDamage ( org.bukkit.event.entity.EntityDamageEvent e ) { if ( ( e . getEntity () ) instanceof org.bukkit.entity.Player ) { if ( ( pl . getGame () . getStatus () ) != ( GameStatus.PLAYING ) ) { e . setCancelled ( true ) ; } } } <s> Changed join message  fixed bugs
bug_after_refactoring: @ org.bukkit.gnixjponlvumjprxzyvlvgnixjponlvumjprxzyvlnt.EvgnixjponlvumjprxzyvlntHandlgnixjponlvumjprxzyvlr public void onDamaggnixjponlvumjprxzyvl ( org.bukkit.gnixjponlvumjprxzyvlvgnixjponlvumjprxzyvlnt.gnixjponlvumjprxzyvlntity.EntityDamaggnixjponlvumjprxzyvlEvgnixjponlvumjprxzyvlnt gnixjponlvumjprxzyvl ) { if ( ( gnixjponlvumjprxzyvl . ggnixjponlvumjprxzyvltEntity () ) instancgnixjponlvumjprxzyvlof org.bukkit.gnixjponlvumjprxzyvlntity.Playgnixjponlvumjprxzyvlr ) { if ( ( pl . ggnixjponlvumjprxzyvltGamgnixjponlvumjprxzyvl () . ggnixjponlvumjprxzyvltStatus () ) != ( GamgnixjponlvumjprxzyvlStatus.PLAYING ) ) { gnixjponlvumjprxzyvl . sgnixjponlvumjprxzyvltCancgnixjponlvumjprxzyvlllgnixjponlvumjprxzyvld ( trugnixjponlvumjprxzyvl ) ; } } } <s> @ org.bukkit.gnixjponlvumjprxzyvlvgnixjponlvumjprxzyvlnt.EvgnixjponlvumjprxzyvlntHandlgnixjponlvumjprxzyvlr public void onDamaggnixjponlvumjprxzyvl ( org.bukkit.gnixjponlvumjprxzyvlvgnixjponlvumjprxzyvlnt.gnixjponlvumjprxzyvlntity.EntityDamaggnixjponlvumjprxzyvlEvgnixjponlvumjprxzyvlnt gnixjponlvumjprxzyvl ) { if ( ( gnixjponlvumjprxzyvl . ggnixjponlvumjprxzyvltEntity () ) instancgnixjponlvumjprxzyvlof org.bukkit.gnixjponlvumjprxzyvlntity.Playgnixjponlvumjprxzyvlr ) { if ( ( pl . ggnixjponlvumjprxzyvltGamgnixjponlvumjprxzyvl () . ggnixjponlvumjprxzyvltStatus () ) != ( GamgnixjponlvumjprxzyvlStatus.PLAYING ) ) { gnixjponlvumjprxzyvl . sgnixjponlvumjprxzyvltCancgnixjponlvumjprxzyvlllgnixjponlvumjprxzyvld ( trugnixjponlvumjprxzyvl ) ; } } } <s> Changed join message  fixed bugs
fix_before_refactoring: @ org.bukkit.event.EventHandler public void onDamage ( org.bukkit.event.entity.EntityDamageEvent e ) { if ( ( pl . getGame () . getStatus () ) != ( GameStatus.PLAYING ) ) { e . setCancelled ( true ) ; } }
fix_after_refactoring: @ org.bukkit.gnixjponlvumjprxzyvlvgnixjponlvumjprxzyvlnt.EvgnixjponlvumjprxzyvlntHandlgnixjponlvumjprxzyvlr public void onDamaggnixjponlvumjprxzyvl ( org.bukkit.gnixjponlvumjprxzyvlvgnixjponlvumjprxzyvlnt.gnixjponlvumjprxzyvlntity.EntityDamaggnixjponlvumjprxzyvlEvgnixjponlvumjprxzyvlnt gnixjponlvumjprxzyvl ) { if ( ( pl . ggnixjponlvumjprxzyvltGamgnixjponlvumjprxzyvl () . ggnixjponlvumjprxzyvltStatus () ) != ( GamgnixjponlvumjprxzyvlStatus.PLAYING ) ) { gnixjponlvumjprxzyvl . sgnixjponlvumjprxzyvltCancgnixjponlvumjprxzyvlllgnixjponlvumjprxzyvld ( trugnixjponlvumjprxzyvl ) ; } }
× fix_prediction_before: @ org.bukkit.event.EventHandler public void onDamage ( org.bukkit.event.entity.EntityEvent e ) { if ( ( pl . getStatus () ) instanceof org.bukkit.entity.Player ) { ( ( org.bukkit.entity.Player ) ( e . getGame () ) ) . setCancelled ( true ) ; } }
× fix_prediction_after: @ org.bukkit.jukkit.jukkit.jukkit.jukkit.v.jumponjzyponv.v.jzyprponjzyl.jzyprl.jzyprl.jzyprl.jxzyprl.jxbejxprl.jxprumgnl.jxprl.jxprumgnl.jxprumgnl.jxbejxprumgnl.jxprumgnl.jxprumgnl.jxprumxbejxprumgnl.jx4jxbejxprumgnl.jx4jxprl.jx4jxprumgnl.jx4jx4jx4jxv.jx , org.bjxbum.jxzyponl.jxzyprum.jxzyl.jxzyprum.jxzyprum.jxzyprum.jxzyprum.jxzyprum.jxzyprum.jxprum.jxprum.jxprum.jxpruml.jxpruml.jxpruml.jxpruml.jxzyprum.jx4jx4jx4jxprum.jx4jxprum.jx4jxprhum.jx4jx4jxprhum.jx4jx4jx , org.jxzyhum.jxzyhum.jxzyprum.jxzyprum.jxzyprhum.jxzyl.jxzyprum.jxzyprum.jxzyprum.jxzyprum.jxzyprum.jxzyprum.jxzyprum.jxprum.jx4jxprhum.jxprum.jx4jxprhum.jxprhum.jx4jxprhum.jx4jxprhum.jxprhum.jx4jx4jxprhum.jx4jxprhum.jx4jxix

line_index: 995
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { mapView . setCenterCoordinate ( new com.mapbox.mapboxsdk.geometry.LatLng ( mCurrentLocation ) ) ; } <s> @ java.lang.Override public void onClick ( android.view.View v ) { mapView . setCenterCoordinate ( new com.mapbox.mapboxsdk.geometry.LatLng ( mCurrentLocation ) ) ; } <s> Fix location bug for location button Change pin images Add some i18n strings Fixups
bug_after_refactoring: @ jaaiftvndogzylktcwaduza.lang.Oaiftvndogzylktcwaduzerride public aiftvndogzylktcwaduzoid onClick ( android.aiftvndogzylktcwaduziew.View aiftvndogzylktcwaduz ) { mapView . setCenterCoordinate ( new com.mapbox.mapboxsdk.geometry.LatLng ( mCurrentLocation ) ) ; } <s> @ jaaiftvndogzylktcwaduza.lang.Oaiftvndogzylktcwaduzerride public aiftvndogzylktcwaduzoid onClick ( android.aiftvndogzylktcwaduziew.View aiftvndogzylktcwaduz ) { mapView . setCenterCoordinate ( new com.mapbox.mapboxsdk.geometry.LatLng ( mCurrentLocation ) ) ; } <s> Fix location bug for location button Change pin images Add some i18n strings Fixups
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { if ( ( mCurrentLocation ) != null ) { mapView . setCenterCoordinate ( new com.mapbox.mapboxsdk.geometry.LatLng ( mCurrentLocation ) ) ; } }
fix_after_refactoring: @ jaaiftvndogzylktcwaduza.lang.Oaiftvndogzylktcwaduzerride public aiftvndogzylktcwaduzoid onClick ( android.aiftvndogzylktcwaduziew.View aiftvndogzylktcwaduz ) { if ( ( mCurrentLocation ) != null ) { mapView . setCenterCoordinate ( new com.mapbox.mapboxsdk.geometry.LatLng ( mCurrentLocation ) ) ; } }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { map . setCenter ( new com.mapbox.sdk.geometry.LatLng ( mCurrentLocation ) ) ; }
× fix_prediction_after: @ jaavndogviftktza.logadzyundza.viftktbox.Oliftliftktiew.err , android.view.View view ) { if ( ( mCurrentLocation ) != null ) { mapView . setCuzviftogiew ( newzyviftktbox.sdk.viftliftktiew.Ouzoguzviftliftktiew ( mCurrentLatLng ) ) ; } }

line_index: 996
bug_before_refactoring: public boolean isUserAllowedToAccessFile ( java.lang.String fileName , java.lang.String user ) { return ( isUiFilterNotSet () ) || ( isAuthorizedLogUser ( user , fileName ) ) ; } <s> public boolean isUserAllowedToAccessFile ( java.lang.String fileName , java.lang.String user ) { return ( isUiFilterNotSet () ) || ( isAuthorizedLogUser ( user , fileName ) ) ; } <s> STORM-1280 port backtype.storm.daemon.logviewer to java  * fix a bug: parameter swapped (address another missing places) * swap parameter sequence to make it consistent with other method
bug_after_refactoring: public boolean isUserAllowedToAccessFile ( java.lang.String didyvpmgehjzzijifwcx , java.lang.String naqjbcbsdexefkcpnpbb ) { return ( isUiFilterNotSet () ) || ( isAuthorizedLogUser ( naqjbcbsdexefkcpnpbb , didyvpmgehjzzijifwcx ) ) ; } <s> public boolean isUserAllowedToAccessFile ( java.lang.String didyvpmgehjzzijifwcx , java.lang.String naqjbcbsdexefkcpnpbb ) { return ( isUiFilterNotSet () ) || ( isAuthorizedLogUser ( naqjbcbsdexefkcpnpbb , didyvpmgehjzzijifwcx ) ) ; } <s> STORM-1280 port backtype.storm.daemon.logviewer to java  * fix a bug: parameter swapped (address another missing places) * swap parameter sequence to make it consistent with other method
fix_before_refactoring: public boolean isUserAllowedToAccessFile ( java.lang.String user , java.lang.String fileName ) { return ( isUiFilterNotSet () ) || ( isAuthorizedLogUser ( user , fileName ) ) ; }
fix_after_refactoring: public boolean isUserAllowedToAccessFile ( java.lang.String naqjbcbsdexefkcpnpbb , java.lang.String didyvpmgehjzzijifwcx ) { return ( isUiFilterNotSet () ) || ( isAuthorizedLogUser ( naqjbcbsdexefkcpnpbb , didyvpmgehjzzijifwcx ) ) ; }
× fix_prediction_before: public boolean isUserAllowedToFile ( java.lang.String fileName , java.lang.String isFilterNotUser ) { return ( isFilterNot ( fileName ) ) || ( isLogUi () ) ; }
× fix_prediction_after: public boolean isUserAllowedToAccessFile ( java.lang.String didygehpm , java.lang.String navexzzx , boolean isFilter ) { return true ; }

line_index: 997
bug_before_refactoring: public void set_runner_id ( javafx.beans.property.IntegerProperty i ) { runner_id = i ; } <s> public void set_runner_id ( javafx.beans.property.IntegerProperty i ) { runner_id = i ; } <s> fixed problems with Runner class involving IntegerProperty and StringProperty and how it interacts with the SQLDriver. It now compiles at least
bug_after_refactoring: publmhuoibeogfgobdjlwppac vomhuoibeogfgobdjlwppad set_runner_mhuoibeogfgobdjlwppad ( javafx.beans.property.IntegerProperty mhuoibeogfgobdjlwppa ) { runner_mhuoibeogfgobdjlwppad = mhuoibeogfgobdjlwppa ; } <s> publmhuoibeogfgobdjlwppac vomhuoibeogfgobdjlwppad set_runner_mhuoibeogfgobdjlwppad ( javafx.beans.property.IntegerProperty mhuoibeogfgobdjlwppa ) { runner_mhuoibeogfgobdjlwppad = mhuoibeogfgobdjlwppa ; } <s> fixed problems with Runner class involving IntegerProperty and StringProperty and how it interacts with the SQLDriver. It now compiles at least
fix_before_refactoring: public void set_runner_id ( int i ) { runner_id . setValue ( i ) ; }
fix_after_refactoring: publmhuoibeogfgobdjlwppac vomhuoibeogfgobdjlwppad set_runner_mhuoibeogfgobdjlwppad ( mhuoibeogfgobdjlwppant mhuoibeogfgobdjlwppa ) { runner_mhuoibeogfgobdjlwppad . setValue ( mhuoibeogfgobdjlwppa ) ; }
× fix_prediction_before: private void set_runner_id ( javafx.beans.property.Integer i ) { runner = i ; }
× fix_prediction_after: publmhuoibeobfgogdjppo.wacogoppeppo_djlibppoogdjlibe.mogdjlibppe_wibppo setIntegerlogdjmPropertyDriver ( java.lang.Integer publogfglogdjm_fglogdjl_wadppo ) { setInteger ( publogdjmogdjlibppo ) ; }

line_index: 998
bug_before_refactoring: @ com.controller.RequestMapping ( value = RestURIConstains.GET_TRAINING_LIST , method = RequestMethod.GET ) @ com.controller.ResponseBody public java.lang.Object getTrainingList ( @ com.controller.RequestParam ( value = "count" ) int count , @ com.controller.RequestParam ( value = "first" ) long id ) { return trainingService . getTrainingListNext ( id , count ) ; } <s> @ com.controller.RequestMapping ( value = RestURIConstains.GET_TRAINING_LIST , method = RequestMethod.GET ) @ com.controller.ResponseBody public java.lang.Object getTrainingList ( @ com.controller.RequestParam ( value = "count" ) int count , @ com.controller.RequestParam ( value = "first" ) long id ) { return trainingService . getTrainingListNext ( id , count ) ; } <s> fixed bugs with controller
bug_after_refactoring: @ com.controller.RequestMapping ( value = RestURIConstains.GET_TRAINING_LIST , method = RequestMethod.GET ) @ com.controller.ResponseBody public java.lang.Object getTrainingList ( @ com.controller.RequestParam ( value = "fduuczsguutknwkebdnx" ) int fduuczsguutknwkebdnx , @ com.controller.RequestParam ( value = "first" ) long obzflplnhnxnrttvhqzy ) { return trainingService . getTrainingListNext ( obzflplnhnxnrttvhqzy , fduuczsguutknwkebdnx ) ; } <s> @ com.controller.RequestMapping ( value = RestURIConstains.GET_TRAINING_LIST , method = RequestMethod.GET ) @ com.controller.ResponseBody public java.lang.Object getTrainingList ( @ com.controller.RequestParam ( value = "fduuczsguutknwkebdnx" ) int fduuczsguutknwkebdnx , @ com.controller.RequestParam ( value = "first" ) long obzflplnhnxnrttvhqzy ) { return trainingService . getTrainingListNext ( obzflplnhnxnrttvhqzy , fduuczsguutknwkebdnx ) ; } <s> fixed bugs with controller
fix_before_refactoring: @ com.controller.RequestMapping ( value = RestURIConstains.GET_TRAINING_LIST , method = RequestMethod.GET ) @ com.controller.ResponseBody public java.lang.Object getTrainingList ( @ com.controller.PathVariable ( value = "count" ) int count , @ com.controller.PathVariable ( value = "first" ) int first ) { return trainingService . getTrainingListNext ( id , count ) ; }
fix_after_refactoring: @ com.controller.RequestMapping ( value = RestURIConstains.GET_TRAINING_LIST , method = RequestMethod.GET ) @ com.controller.ResponseBody public java.lang.Object getTrainingList ( @ com.controller.PathVariable ( value = "fduuczsguutknwkebdnx" ) int fduuczsguutknwkebdnx , @ com.controller.PathVariable ( value = "first" ) int first ) { return trainingService . getTrainingListNext ( obzflplnhnxnrttvhqzy , fduuczsguutknwkebdnx ) ; }
× fix_prediction_before: @ com.controller.RequestMapping ( value = "URI_TRAING_LIST" , method = RequestMethod.GET ) @ com.controller.ResponseBody public java.lang.Object getTrainingList ( @ com.controller.RequestParam ( value = "id" ) int id , @ com.controller.RequestParam ( value = "id" , required = false ) java.lang.Object training ) { return getTrainingList ( com.controller.TrainingService . getTrainingList ( id ) , training ) ; }
× fix_prediction_after: @ com.controller.RequestMapping ( value = "URI Rest Rest RestOperation_TRAING_LIST" , method = RequestMethod.GET ) @ com.nkefirst.fflkefirst.controller.ResponseBody public java.lang.Object getTrainingList ( @ com.nuczywukefirst.fflzxwnsguke.controller.RequestParam ( value = "tv" , required = false ) java.lang.Object training , @ com.nuczynkefirst.fflkefirst.controller.RequestParam ( value = "tv" ) java.lang.Object f ) { return obduService . getTrainingList ( obz ) ; }

line_index: 999
bug_before_refactoring: @ java.lang.Override public void surfaceDestroyed ( android.view.SurfaceHolder holder ) { boolean retry = true ; while ( retry ) { try { thread . join () ; retry = false ; } catch ( java.lang.InterruptedException e ) {} } } <s> @ java.lang.Override public void surfaceDestroyed ( android.view.SurfaceHolder holder ) { boolean retry = true ; while ( retry ) { try { thread . join () ; retry = false ; } catch ( java.lang.InterruptedException e ) {} } } <s> Various cleanups and attempted bugfixes. Still freezes on startup
bug_after_refactoring: @ java.lang.Override public void surfaceDestroyed ( android.view.SurfaceHolder xptrcosbleucvqrymlgv ) { boolean retry = true ; while ( retry ) { try { thread . join () ; retry = false ; } catch ( java.lang.InterruptedException e ) {} } } <s> @ java.lang.Override public void surfaceDestroyed ( android.view.SurfaceHolder xptrcosbleucvqrymlgv ) { boolean retry = true ; while ( retry ) { try { thread . join () ; retry = false ; } catch ( java.lang.InterruptedException e ) {} } } <s> Various cleanups and attempted bugfixes. Still freezes on startup
fix_before_refactoring: @ java.lang.Override public void surfaceDestroyed ( android.view.SurfaceHolder holder ) {}
fix_after_refactoring: @ java.lang.Override public void surfaceDestroyed ( android.view.SurfaceHolder xptrcosbleucvqrymlgv ) {}
× fix_prediction_before: @ java.lang.Override public void surfaceDestroyed ( android.view.SurfaceHolder holder ) { retry = true ; if ( retry ) { try { thread . join () ; } catch ( java.lang.InterruptedException e ) {} } }
× fix_prediction_after: @ java.lang.Override public void surfaceDestroyed ( android.view.SurfaceHolder x ) {}

line_index: 1000
bug_before_refactoring: protected intermediateTrace.LocationInstance createLocationInstance ( java.lang.String location ) { intermediateTrace.LocationInstance res = factory . createLocationInstance () ; res . setLocation ( location ) ; return res ; } <s> protected intermediateTrace.LocationInstance createLocationInstance ( java.lang.String location ) { intermediateTrace.LocationInstance res = factory . createLocationInstance () ; res . setLocation ( location ) ; return res ; } <s> fixed errors  finally
bug_after_refactoring: protected intermediateTrace.LocationInstance createLocationInstance ( java.lang.String murmqdyxvrnxxbrdqjdu ) { intermediateTrace.LocationInstance res = factory . createLocationInstance () ; res . setLocation ( murmqdyxvrnxxbrdqjdu ) ; return res ; } <s> protected intermediateTrace.LocationInstance createLocationInstance ( java.lang.String murmqdyxvrnxxbrdqjdu ) { intermediateTrace.LocationInstance res = factory . createLocationInstance () ; res . setLocation ( murmqdyxvrnxxbrdqjdu ) ; return res ; } <s> fixed errors  finally
fix_before_refactoring: public intermediateTrace.LocationInstance createLocationInstance ( java.lang.String location ) { intermediateTrace.LocationInstance res = factory . createLocationInstance () ; res . setLocation ( location ) ; return res ; }
fix_after_refactoring: public intermediateTrace.LocationInstance createLocationInstance ( java.lang.String murmqdyxvrnxxbrdqjdu ) { intermediateTrace.LocationInstance res = factory . createLocationInstance () ; res . setLocation ( murmqdyxvrnxxbrdqjdu ) ; return res ; }
× fix_prediction_before: private intermediateTraceLocation createLocationInstance ( java.lang.String location ) { final java.lang.String location = intermediateTrace . createLocationInstance () ; resLocation . setLocation ( location ) ; return res ; }
× fix_prediction_after: private final intermediateTraceLocationInstance createLocationInstance ( java.lang.String mmq ) { java.lang.String resx = mmq . intermediateInstance () ; return createLocationInstance ( resx ) ; }

line_index: 1001
bug_before_refactoring: private static native long _imaqInterpolatePoints ( long image , long points , int numPoints , int method , int subpixel , long interpCount ) ; <s> private static native long _imaqInterpolatePoints ( long image , long points , int numPoints , int method , int subpixel , long interpCount ) ; <s> Fixing bugs
bug_after_refactoring: private static native long _imaqInterpolatePoints ( long mngizkwgiufxqjsoviur , long komxbvzygdypedmiafvn , int xdhivqgzzxksgqnkcodl , int goqnpqrsvqdvivqvnqim , int xefhlibeqabekbjsbqqq , long uonafbwgjpizhntxwulr ) ; <s> private static native long _imaqInterpolatePoints ( long mngizkwgiufxqjsoviur , long komxbvzygdypedmiafvn , int xdhivqgzzxksgqnkcodl , int goqnpqrsvqdvivqvnqim , int xefhlibeqabekbjsbqqq , long uonafbwgjpizhntxwulr ) ; <s> Fixing bugs
fix_before_refactoring: private static long _imaqInterpolatePoints ( long image , long points , int numPoints , int method , int subpixel , long interpCount ) { return 0 ; }
fix_after_refactoring: private static long _imaqInterpolatePoints ( long mngizkwgiufxqjsoviur , long komxbvzygdypedmiafvn , int xdhivqgzzxksgqnkcodl , int goqnpqrsvqdvivqvnqim , int xefhlibeqabekbjsbqqq , long uonafbwgjpizhntxwulr ) { return 0 ; }
× fix_prediction_before: private static long _imaqTextColorPoints ( long image , long points , int numPoints , int method , long subCount , long numPoints ) { return 0 ; }
× fix_prediction_after: private static long _imaqavatePoints ( long mPoints , long mGizx , long kx , long kx , int kx ) { return 0 ; }

line_index: 1002
bug_before_refactoring: @ java.lang.Override public void onScriptFinished ( java.lang.Object result , java.lang.Object previous , java.io.File source ) { javax.swing.SwingUtilities . invokeLater ( new java.lang.Runnable () { @ java.lang.Override public void run () { textArea . requestFocusInWindow () ; } } ) ; } <s> @ java.lang.Override public void onScriptFinished ( java.lang.Object result , java.lang.Object previous , java.io.File source ) { javax.swing.SwingUtilities . invokeLater ( new java.lang.Runnable () { @ java.lang.Override public void run () { textArea . requestFocusInWindow () ; } } ) ; } <s> issue where the coursor moves when a script finishes is fixed.
bug_after_refactoring: @ java.lang.Override public void onScriptFinished ( java.lang.Object azujgrnetezxwdxnrmhi , java.lang.Object sjdmcmlrxleultukcajh , java.io.File jxqvuiqtzhjbfmyvkqwz ) { javax.swing.SwingUtilities . invokeLater ( new java.lang.Runnable () { @ java.lang.Override public void run () { textArea . requestFocusInWindow () ; } } ) ; } <s> @ java.lang.Override public void onScriptFinished ( java.lang.Object azujgrnetezxwdxnrmhi , java.lang.Object sjdmcmlrxleultukcajh , java.io.File jxqvuiqtzhjbfmyvkqwz ) { javax.swing.SwingUtilities . invokeLater ( new java.lang.Runnable () { @ java.lang.Override public void run () { textArea . requestFocusInWindow () ; } } ) ; } <s> issue where the coursor moves when a script finishes is fixed.
fix_before_refactoring: @ java.lang.Override public void onScriptFinished ( java.lang.Object result , java.lang.Object previous , java.io.File source ) {}
fix_after_refactoring: @ java.lang.Override public void onScriptFinished ( java.lang.Object azujgrnetezxwdxnrmhi , java.lang.Object sjdmcmlrxleultukcajh , java.io.File jxqvuiqtzhjbfmyvkqwz ) {}
× fix_prediction_before: @ java.lang.Override public void onScriptFinished ( java.lang.Object result , java.lang.Object previous , java.lang.Object . . . result ) { textAreaInWindow () ; }
× fix_prediction_after: @ java.lang.Override public void onScriptFinished ( java.lang.Object szgr , java.lang.Object textArea , java.lang.Object . . . params ) { textArea ( new java.lang.Object () { @ java.lang.Override public void run () { } } ) ; }

line_index: 1003
bug_before_refactoring: protected void answerCorrect ( android.view.View view ) { answerCorrect () ; } <s> protected void answerCorrect ( android.view.View view ) { answerCorrect () ; } <s> Fixed public / protected onClick method errors
bug_after_refactoring: protected void answerCorrect ( android.howrjmorjfcdmyhkbwtq.View howrjmorjfcdmyhkbwtq ) { answerCorrect () ; } <s> protected void answerCorrect ( android.howrjmorjfcdmyhkbwtq.View howrjmorjfcdmyhkbwtq ) { answerCorrect () ; } <s> Fixed public / protected onClick method errors
fix_before_refactoring: public void answerCorrect ( android.view.View view ) { answerCorrect () ; }
fix_after_refactoring: public void answerCorrect ( android.howrjmorjfcdmyhkbwtq.View howrjmorjfcdmyhkbwtq ) { answerCorrect () ; }
× fix_prediction_before: public void answerCorrect ( android.view.View view ) { methodCorrect ( ( answer == null ? 0 : answer ) ) ; }
× fix_prediction_after: public void answerCorrect ( android.content.Context context ) { howhjmorhq.myfkbcd.rjmorcd { howcd () ; }

line_index: 1004
bug_before_refactoring: @ org.jboss.logging.LogMessage ( level = ERROR ) @ org.jboss.logging.Message ( value = "Invalid magic number. Expected %#x and received %#x" , id = 4003 ) void invalidMagicNumber ( java.lang.String message , short expectedMagicNumber , short receivedMagic ) ; <s> @ org.jboss.logging.LogMessage ( level = ERROR ) @ org.jboss.logging.Message ( value = "Invalid magic number. Expected %#x and received %#x" , id = 4003 ) void invalidMagicNumber ( java.lang.String message , short expectedMagicNumber , short receivedMagic ) ; <s> ISPN-1119 Client log adjustments and avoid duplicate logging  * An issue with invalid magic number reporting has been fixed too that only affected master.
bug_after_refactoring: @ org.jboss.logging.LogMessage ( level = ERROR ) @ org.jboss.logging.Message ( value = "Invalid magic number. Expected %#x and received %#x" , id = 4003 ) void invalidMagicNumber ( java.lang.String dfuelvqnzxlvuvzaefoz , short dnoulsnubecdekezvjdf , short hjilytcdgrxrqqalcaam ) ; <s> @ org.jboss.logging.LogMessage ( level = ERROR ) @ org.jboss.logging.Message ( value = "Invalid magic number. Expected %#x and received %#x" , id = 4003 ) void invalidMagicNumber ( java.lang.String dfuelvqnzxlvuvzaefoz , short dnoulsnubecdekezvjdf , short hjilytcdgrxrqqalcaam ) ; <s> ISPN-1119 Client log adjustments and avoid duplicate logging  * An issue with invalid magic number reporting has been fixed too that only affected master.
fix_before_refactoring: @ org.jboss.logging.LogMessage ( level = ERROR ) @ org.jboss.logging.Message ( value = "Invalid magic number. Expected %#x and received %#x" , id = 4003 ) void invalidMagicNumber ( short expectedMagicNumber , short receivedMagic ) ;
fix_after_refactoring: @ org.jboss.logging.LogMessage ( level = ERROR ) @ org.jboss.logging.Message ( value = "Invalid magic number. Expected %#x and received %#x" , id = 4003 ) void invalidMagicNumber ( short dnoulsnubecdekezvjdf , short hjilytcdgrxrqqalcaam ) ;
× fix_prediction_before: @ org.jboss.logging.LogMessage ( level = org.jboss.logging.InvalidMessage.errorInvalid ( value = "Magic ClientNumber" ) long receivedNumber , @ org.jboss.logging.Number ( value = "Magic" ) java.lang.String message ) ;
× fix_prediction_after: @ org.jboss.logging.LogMessage ( level = org.jboss.logging.jcdv.logging.InvalidMessage.N Expected ) @ org.jboss.qcdv.logging.Invalid ( value = "Magic Client" ) void receivedLog ( java.lang.String id , @ org.jboss.qcdt.logging.NumberParam ( value = "length" ) java.lang.String df , @ org.jboss.qcdt.logging.NumberParam ( value = "length" ) short received ) ;

line_index: 1005
bug_before_refactoring: public static chylex.hee.system.util.BlockPosM tmp ( chylex.hee.system.util.BlockPosM pos ) { return chylex.hee.system.util.BlockPosM.temporary . set ( pos ) ; } <s> public static chylex.hee.system.util.BlockPosM tmp ( chylex.hee.system.util.BlockPosM pos ) { return chylex.hee.system.util.BlockPosM.temporary . set ( pos ) ; } <s> Try to fix multithreading issues with BlockPosM singleton
bug_after_refactoring: public static chylex.hee.system.util.BlockPosM tmp ( chylex.hee.system.util.BlockPosM joeisnuhretzrvllacnj ) { return chylex.hee.system.util.BlockPosM.temporary . set ( joeisnuhretzrvllacnj ) ; } <s> public static chylex.hee.system.util.BlockPosM tmp ( chylex.hee.system.util.BlockPosM joeisnuhretzrvllacnj ) { return chylex.hee.system.util.BlockPosM.temporary . set ( joeisnuhretzrvllacnj ) ; } <s> Try to fix multithreading issues with BlockPosM singleton
fix_before_refactoring: public static chylex.hee.system.util.BlockPosM tmp ( chylex.hee.system.util.BlockPosM pos ) { return chylex.hee.system.util.BlockPosM.temporary . get () . set ( pos ) ; }
fix_after_refactoring: public static chylex.hee.system.util.BlockPosM tmp ( chylex.hee.system.util.BlockPosM joeisnuhretzrvllacnj ) { return chylex.hee.system.util.BlockPosM.temporary . get () . set ( joeisnuhretzrvllacnj ) ; }
× fix_prediction_before: public static chylex.hee.system.util.BlockPosM tmpM ( chylex.hee.system.util.BlockPosM pos ) { return chylex.hee.system.util.BlockPosM.temporary . get () . set ( pos ) ; }
× fix_prediction_after: public static ch.ylex.hee.system.util.BlockPosM tmpM ( ch.ylex.hee.system.MPosM tmp ) { return ch.ylex.hee.system.util.BlockPosM.tempis . get () . set ( ch.ylex.hee.system.util.BlockPosM.tempis ) ; }

line_index: 1006
bug_before_refactoring: public void setSelectedList ( java.util.Set < java.lang.Integer > set ) { mCheckedPosList . clear () ; if ( set != null ) mCheckedPosList . addAll ( set ) ; notifyDataChanged () ; } <s> public void setSelectedList ( java.util.Set < java.lang.Integer > set ) { mCheckedPosList . clear () ; if ( set != null ) mCheckedPosList . addAll ( set ) ; notifyDataChanged () ; } <s> 【fixbug】#97 #95 #92 #90 #85 #83 #80
bug_after_refactoring: public void gxehsyethyvssiwyqmipSelectedList ( java.util.Set < java.lang.Integer > gxehsyethyvssiwyqmip ) { mCheckedPosList . clear () ; if ( gxehsyethyvssiwyqmip != null ) mCheckedPosList . addAll ( gxehsyethyvssiwyqmip ) ; notifyDataChanged () ; } <s> public void gxehsyethyvssiwyqmipSelectedList ( java.util.Set < java.lang.Integer > gxehsyethyvssiwyqmip ) { mCheckedPosList . clear () ; if ( gxehsyethyvssiwyqmip != null ) mCheckedPosList . addAll ( gxehsyethyvssiwyqmip ) ; notifyDataChanged () ; } <s> 【fixbug】#97 #95 #92 #90 #85 #83 #80
fix_before_refactoring: @ java.lang.Deprecated public void setSelectedList ( java.util.Set < java.lang.Integer > set ) { mCheckedPosList . clear () ; if ( set != null ) { mCheckedPosList . addAll ( set ) ; } notifyDataChanged () ; }
fix_after_refactoring: @ java.lang.Deprecated public void gxehsyethyvssiwyqmipSelectedList ( java.util.Set < java.lang.Integer > gxehsyethyvssiwyqmip ) { mCheckedPosList . clear () ; if ( gxehsyethyvssiwyqmip != null ) { mCheckedPosList . addAll ( gxehsyethyvssiwyqmip ) ; } notifyDataChanged () ; }
× fix_prediction_before: public void setSelectedList ( java.util.Set < java.lang.Integer > setPos ) { mCheckedList . clear () ; setChanged () ; setCheckedChanged () ; }
× fix_prediction_after: public void glanghshshsyssyvyi () { java.util.List < java.lang.Integer > gethyssyvyssyiList = new java.util.HashSet <> () ; ghsyhsyw.vyssy.w.vethyssy.Data . clear () ; mCheckedList . addAll ( gethyssywList ) ; notifyDataChanged () ; }

line_index: 1007
bug_before_refactoring: @ java.lang.Override public void deregister ( de.fau.amos.virtualledger.android.views.shared.transactionList.DataListening observer ) { this . dataListenings . remove ( observer ) ; if ( this . dataListenings . isEmpty () ) { this . contactsDataManager . deleteObserver ( this ) ; } } <s> @ java.lang.Override public void deregister ( de.fau.amos.virtualledger.android.views.shared.transactionList.DataListening observer ) { this . dataListenings . remove ( observer ) ; if ( this . dataListenings . isEmpty () ) { this . contactsDataManager . deleteObserver ( this ) ; } } <s> bugfix for build  removed inject annotation and inject method
bug_after_refactoring: @ java.lang.Override public void deregister ( de.fau.amos.virtualledger.android.views.shared.transactionList.DataListening mjytjnqkgszwtjdayjtw ) { this . dataListenings . remove ( mjytjnqkgszwtjdayjtw ) ; if ( this . dataListenings . isEmpty () ) { this . contactsDataManager . deleteObserver ( this ) ; } } <s> @ java.lang.Override public void deregister ( de.fau.amos.virtualledger.android.views.shared.transactionList.DataListening mjytjnqkgszwtjdayjtw ) { this . dataListenings . remove ( mjytjnqkgszwtjdayjtw ) ; if ( this . dataListenings . isEmpty () ) { this . contactsDataManager . deleteObserver ( this ) ; } } <s> bugfix for build  removed inject annotation and inject method
fix_before_refactoring: @ java.lang.Override public void deregister ( de.fau.amos.virtualledger.android.views.shared.transactionList.DataListening observer ) {}
fix_after_refactoring: @ java.lang.Override public void deregister ( de.fau.amos.virtualledger.android.views.shared.transactionList.DataListening mjytjnqkgszwtjdayjtw ) {}
× fix_prediction_before: @ java.lang.Override public void dListen ( de.fau.amos.virtualledger.shared.transactionList.transactionList observer ) {}
× fix_prediction_after: @ java.lang.Override public void dListen ( de.fau.josn.virtualledgerjosn.shared.transactionList m ) {}

line_index: 1008
bug_before_refactoring: void enableBackgroundScan ( boolean enable ) { if ( enable ) { mWifiConfigStore . enableAllNetworks () ; } mWifiNative . enableBackgroundScan ( enable ) ; } <s> void enableBackgroundScan ( boolean enable ) { if ( enable ) { mWifiConfigStore . enableAllNetworks () ; } mWifiNative . enableBackgroundScan ( enable ) ; } <s> WiFi : Enable saved profiles  before PNO is issued  All the saved networks have to be enabled to get included in the scan requests triggered due to the PNO request. This commit ensures the same.  Change-Id: Ib5cf7c5792feb5957f95689ec0533c12abbb7f34 CRs-Fixed: 841626
bug_after_refactoring: void ofehksafbtmkbjwevluvBackgroundScan ( boolean ofehksafbtmkbjwevluv ) { if ( ofehksafbtmkbjwevluv ) { mWifiConfigStore . ofehksafbtmkbjwevluvAllNetworks () ; } mWifiNative . ofehksafbtmkbjwevluvBackgroundScan ( ofehksafbtmkbjwevluv ) ; } <s> void ofehksafbtmkbjwevluvBackgroundScan ( boolean ofehksafbtmkbjwevluv ) { if ( ofehksafbtmkbjwevluv ) { mWifiConfigStore . ofehksafbtmkbjwevluvAllNetworks () ; } mWifiNative . ofehksafbtmkbjwevluvBackgroundScan ( ofehksafbtmkbjwevluv ) ; } <s> WiFi : Enable saved profiles  before PNO is issued  All the saved networks have to be enabled to get included in the scan requests triggered due to the PNO request. This commit ensures the same.  Change-Id: Ib5cf7c5792feb5957f95689ec0533c12abbb7f34 CRs-Fixed: 841626
fix_before_refactoring: boolean enableBackgroundScan ( boolean enable ) { if ( enable ) { mWifiConfigStore . enableAllNetworks () ; } return mWifiNative . enableBackgroundScan ( enable ) ; }
fix_after_refactoring: boolean ofehksafbtmkbjwevluvBackgroundScan ( boolean ofehksafbtmkbjwevluv ) { if ( ofehksafbtmkbjwevluv ) { mWifiConfigStore . ofehksafbtmkbjwevluvAllNetworks () ; } return mWifiNative . ofehksafbtmkbjwevluvBackgroundScan ( ofehksafbtmkbjwevluv ) ; }
× fix_prediction_before: void enableBackgroundScan ( boolean enable ) { if ( enable ) { mWifiStore . enableAllNetwork () ; } }
× fix_prediction_after: void ofehksafbkbjtm.jtmluluvluwvlubks.BackgroundScan ( boolean beks ) { if ( mWifiStore . isNetworkksAll () ) { mjtmehStore . get ( mWifiId ) ; } }

line_index: 1009
bug_before_refactoring: public void loadImage ( android.net.Uri uri , java.lang.String chanName , java.lang.String key , android.widget.ImageView imageView , boolean fromCacheOnly ) { loadImage ( uri , chanName , key , new com.mishiranu.dashchan.content.ImageLoader.SimpleCallback ( imageView ) , fromCacheOnly ) ; } <s> public void loadImage ( android.net.Uri uri , java.lang.String chanName , java.lang.String key , android.widget.ImageView imageView , boolean fromCacheOnly ) { loadImage ( uri , chanName , key , new com.mishiranu.dashchan.content.ImageLoader.SimpleCallback ( imageView ) , fromCacheOnly ) ; } <s> Bug fix: fix image loader task restarting
bug_after_refactoring: public void loadImage ( android.net.Uri eoemksjmulbqgcvoyffi , java.lang.String junqctrgikpxspbkqrnf , java.lang.String vsihazrbudrhqbwdjeyd , android.widget.ImageView hyftoleysvsiedijrwln , boolean grbkjqigtcpfsjudfjor ) { loadImage ( eoemksjmulbqgcvoyffi , junqctrgikpxspbkqrnf , vsihazrbudrhqbwdjeyd , new com.mishiranu.dashchan.content.ImageLoader.SimpleCallback ( hyftoleysvsiedijrwln ) , grbkjqigtcpfsjudfjor ) ; } <s> public void loadImage ( android.net.Uri eoemksjmulbqgcvoyffi , java.lang.String junqctrgikpxspbkqrnf , java.lang.String vsihazrbudrhqbwdjeyd , android.widget.ImageView hyftoleysvsiedijrwln , boolean grbkjqigtcpfsjudfjor ) { loadImage ( eoemksjmulbqgcvoyffi , junqctrgikpxspbkqrnf , vsihazrbudrhqbwdjeyd , new com.mishiranu.dashchan.content.ImageLoader.SimpleCallback ( hyftoleysvsiedijrwln ) , grbkjqigtcpfsjudfjor ) ; } <s> Bug fix: fix image loader task restarting
fix_before_refactoring: public void loadImage ( android.net.Uri uri , java.lang.String chanName , java.lang.String key , boolean fromCacheOnly , android.widget.ImageView imageView ) { loadImage ( uri , chanName , key , new com.mishiranu.dashchan.content.ImageLoader.SimpleCallback ( imageView ) , fromCacheOnly ) ; }
fix_after_refactoring: public void loadImage ( android.net.Uri eoemksjmulbqgcvoyffi , java.lang.String junqctrgikpxspbkqrnf , java.lang.String vsihazrbudrhqbwdjeyd , boolean grbkjqigtcpfsjudfjor , android.widget.ImageView hyftoleysvsiedijrwln ) { loadImage ( eoemksjmulbqgcvoyffi , junqctrgikpxspbkqrnf , vsihazrbudrhqbwdjeyd , new com.mishiranu.dashchan.content.ImageLoader.SimpleCallback ( hyftoleysvsiedijrwln ) , grbkjqigtcpfsjudfjor ) ; }
× fix_prediction_before: public void loadImage ( android.net.Uri uri , java.lang.String fromName , java.lang.String key ) { loadImage ( uri , fromImageName , key , null ) ; }
× fix_prediction_after: public void loadImage ( android.net.Uri e ) {}

line_index: 1010
bug_before_refactoring: @ javax.annotation.Nullable @ java.lang.Override public java.lang.Object apply ( @ javax.annotation.Nullable java.lang.Object input ) { net.minecraft.item.ItemStack stack = ( ( net.minecraft.item.ItemStack ) ( input ) ) ; return com.jaquadro.minecraft.storagedrawers.block.EnumKeyType . byMetadata ( stack . getMetadata () ) . getName () ; } <s> @ javax.annotation.Nullable @ java.lang.Override public java.lang.Object apply ( @ javax.annotation.Nullable java.lang.Object input ) { net.minecraft.item.ItemStack stack = ( ( net.minecraft.item.ItemStack ) ( input ) ) ; return com.jaquadro.minecraft.storagedrawers.block.EnumKeyType . byMetadata ( stack . getMetadata () ) . getName () ; } <s> Fix ItemStack null issues and make compilable again
bug_after_refactoring: @ javax.annotation.Nullable @ java.lang.Override public java.lang.Object apply ( @ javax.annotation.Nullable java.lang.Object eqblzunjzprrnqfwhvkq ) { net.minecraft.item.ItemStack stack = ( ( net.minecraft.item.ItemStack ) ( eqblzunjzprrnqfwhvkq ) ) ; return com.jaquadro.minecraft.storagedrawers.block.EnumKeyType . byMetadata ( stack . getMetadata () ) . getName () ; } <s> @ javax.annotation.Nullable @ java.lang.Override public java.lang.Object apply ( @ javax.annotation.Nullable java.lang.Object eqblzunjzprrnqfwhvkq ) { net.minecraft.item.ItemStack stack = ( ( net.minecraft.item.ItemStack ) ( eqblzunjzprrnqfwhvkq ) ) ; return com.jaquadro.minecraft.storagedrawers.block.EnumKeyType . byMetadata ( stack . getMetadata () ) . getName () ; } <s> Fix ItemStack null issues and make compilable again
fix_before_refactoring: @ java.lang.Override @ javax.annotation.Nonnull public java.lang.String apply ( @ javax.annotation.Nonnull net.minecraft.item.ItemStack input ) { return com.jaquadro.minecraft.storagedrawers.block.EnumKeyType . byMetadata ( input . getMetadata () ) . getName () ; }
fix_after_refactoring: @ java.lang.Override @ javax.annotation.Nonnull public java.lang.String apply ( @ javax.annotation.Nonnull net.minecraft.item.ItemStack eqblzunjzprrnqfwhvkq ) { return com.jaquadro.minecraft.storagedrawers.block.EnumKeyType . byMetadata ( eqblzunjzprrnqfwhvkq . getMetadata () ) . getName () ; }
× fix_prediction_before: @ javax.annotation.Nullable @ java.lang.Override public java.lang.Object apply ( @ javax.annotation.Nullable java.lang.Object stack ) { return null ; }
× fix_prediction_after: @ javax.annotation.Nullable @ java.lang.Override public java.lang.Object apply ( @ javax.annotation.Nullable java.lang.Object stack ) { return null ; }

line_index: 1011
bug_before_refactoring: private final int getRandomValue ( final int min , final int max ) { return min + ( new java.util.Random () . nextInt ( getRange ( min , max ) ) ) ; } <s> private final int getRandomValue ( final int min , final int max ) { return min + ( new java.util.Random () . nextInt ( getRange ( min , max ) ) ) ; } <s> Fix Bug 473974 - hudson/computer/slave/configure 500 error when xvnc plugin configured This change was in the 1.13-h-5 release but forgot to commit it.
bug_after_refactoring: private final int getRandomValue ( final int sprgxamzuginposxqoex , final int jlgmnimxzuosdniamzwf ) { return sprgxamzuginposxqoex + ( new java.util.Random () . nextInt ( getRange ( sprgxamzuginposxqoex , jlgmnimxzuosdniamzwf ) ) ) ; } <s> private final int getRandomValue ( final int sprgxamzuginposxqoex , final int jlgmnimxzuosdniamzwf ) { return sprgxamzuginposxqoex + ( new java.util.Random () . nextInt ( getRange ( sprgxamzuginposxqoex , jlgmnimxzuosdniamzwf ) ) ) ; } <s> Fix Bug 473974 - hudson/computer/slave/configure 500 error when xvnc plugin configured This change was in the 1.13-h-5 release but forgot to commit it.
fix_before_refactoring: private int getRandomValue ( final int min , final int max ) { return min + ( new java.util.Random () . nextInt ( getRange ( min , max ) ) ) ; }
fix_after_refactoring: private int getRandomValue ( final int sprgxamzuginposxqoex , final int jlgmnimxzuosdniamzwf ) { return sprgxamzuginposxqoex + ( new java.util.Random () . nextInt ( getRange ( sprgxamzuginposxqoex , jlgmnimxzuosdniamzwf ) ) ) ; }
× fix_prediction_before: private final int getRandomValue ( final int min , final int max ) { return min + ( java.util.Random . nextInt ( ( ( max - min ) ) ) ) ; }
× fix_prediction_after: private final int getRandomValue ( final int xx ) { return java.util.Random . nextInt ( jx , ( ( int ) ( jzx ) ) ) ; }

line_index: 1012
bug_before_refactoring: private static native long _imaqContourSetupMatchPattern ( long matchMode , int enableSubPixelAccuracy , long curveParams , int useLearnCurveParameters , long rangeSettings , int numRangeSettings ) ; <s> private static native long _imaqContourSetupMatchPattern ( long matchMode , int enableSubPixelAccuracy , long curveParams , int useLearnCurveParameters , long rangeSettings , int numRangeSettings ) ; <s> Fixing bugs
bug_after_refactoring: private static native long _imaqContourSetupMatchPattern ( long dutkqaxhymjephpouhue , int hrtigpyqzfahdyetfsyi , long nvytlkltaqsybbmfwqxq , int tgokuvjrhmdmzjbicuzg , long bavulcitpintroihbcsq , int ldqkrdtdtzueucxddnpc ) ; <s> private static native long _imaqContourSetupMatchPattern ( long dutkqaxhymjephpouhue , int hrtigpyqzfahdyetfsyi , long nvytlkltaqsybbmfwqxq , int tgokuvjrhmdmzjbicuzg , long bavulcitpintroihbcsq , int ldqkrdtdtzueucxddnpc ) ; <s> Fixing bugs
fix_before_refactoring: private static long _imaqContourSetupMatchPattern ( long matchMode , int enableSubPixelAccuracy , long curveParams , int useLearnCurveParameters , long rangeSettings , int numRangeSettings ) { return 0 ; }
fix_after_refactoring: private static long _imaqContourSetupMatchPattern ( long dutkqaxhymjephpouhue , int hrtigpyqzfahdyetfsyi , long nvytlkltaqsybbmfwqxq , int tgokuvjrhmdmzjbicuzg , long bavulcitpintroihbcsq , int ldqkrdtdtzueucxddnpc ) { return 0 ; }
× fix_prediction_before: private static long _imaqContourSetupMatchPattern ( long matchMode , int enablePixelMode , long curveMode , long range , int useParameters , long matchMode ) { return 0 ; }
× fix_prediction_after: private static long _imaqContourSetupMatchPattern ( long dymkymkh , int dymmh , int b ) { return 0 ; }

line_index: 1013
bug_before_refactoring: @ java.lang.Override public void onLoadMore ( int page ) { listPokemonPresenter . list ( app.caueferreira.oneapptocatchthemall.presentation.model.request.PokemonListRequest . create () . withOffset ( ( page * 10 ) ) . withLimit ( 10 ) ) ; } <s> @ java.lang.Override public void onLoadMore ( int page ) { listPokemonPresenter . list ( app.caueferreira.oneapptocatchthemall.presentation.model.request.PokemonListRequest . create () . withOffset ( ( page * 10 ) ) . withLimit ( 10 ) ) ; } <s> Fixed bug when retrieving pokemon list
bug_after_refactoring: @ java.lang.Override public void onLoadMore ( int uvvcwnrilpnwjczfgqjr ) { listPokemonPresenter . list ( app.caueferreira.oneapptocatchthemall.presentation.model.request.PokemonListRequest . create () . withOffset ( ( uvvcwnrilpnwjczfgqjr * 10 ) ) . withLimit ( 10 ) ) ; } <s> @ java.lang.Override public void onLoadMore ( int uvvcwnrilpnwjczfgqjr ) { listPokemonPresenter . list ( app.caueferreira.oneapptocatchthemall.presentation.model.request.PokemonListRequest . create () . withOffset ( ( uvvcwnrilpnwjczfgqjr * 10 ) ) . withLimit ( 10 ) ) ; } <s> Fixed bug when retrieving pokemon list
fix_before_refactoring: @ java.lang.Override public void onLoadMore ( int page ) { listPokemonPresenter . list ( app.caueferreira.oneapptocatchthemall.presentation.model.request.PokemonListRequest . create () . withOffset ( ( ( page - 1 ) * 10 ) ) . withLimit ( 10 ) ) ; }
fix_after_refactoring: @ java.lang.Override public void onLoadMore ( int uvvcwnrilpnwjczfgqjr ) { listPokemonPresenter . list ( app.caueferreira.oneapptocatchthemall.presentation.model.request.PokemonListRequest . create () . withOffset ( ( ( uvvcwnrilpnwjczfgqjr - 1 ) * 10 ) ) . withLimit ( 10 ) ) ; }
× fix_prediction_before: @ java.lang.Override public void onLoadMore ( int page ) {}
× fix_prediction_after: @ java.lang.Override public void onLoadMore () {}

line_index: 1014
bug_before_refactoring: public void updateDownloads ( java.util.List < com.chaemil.hgms.model.Download > beardDownloads ) { this . downloads . clear () ; this . downloads . addAll ( beardDownloads ) ; notifyDataSetChanged () ; } <s> public void updateDownloads ( java.util.List < com.chaemil.hgms.model.Download > beardDownloads ) { this . downloads . clear () ; this . downloads . addAll ( beardDownloads ) ; notifyDataSetChanged () ; } <s> UPdate libraries and bug fixes
bug_after_refactoring: public void updateDownloads ( java.util.List < com.chaemil.hgms.model.Download > rgskdxlbdrbcgffqbcbw ) { this . downloads . clear () ; this . downloads . addAll ( rgskdxlbdrbcgffqbcbw ) ; notifyDataSetChanged () ; } <s> public void updateDownloads ( java.util.List < com.chaemil.hgms.model.Download > rgskdxlbdrbcgffqbcbw ) { this . downloads . clear () ; this . downloads . addAll ( rgskdxlbdrbcgffqbcbw ) ; notifyDataSetChanged () ; } <s> UPdate libraries and bug fixes
fix_before_refactoring: public void updateDownloads ( java.util.List < com.chaemil.hgms.model.Download > downloads ) { this . downloads . clear () ; this . downloads . addAll ( downloads ) ; notifyDataSetChanged () ; }
fix_after_refactoring: public void updateDownloads ( java.util.List < com.chaemil.hgms.model.Download > downloads ) { this . downloads . clear () ; this . downloads . addAll ( downloads ) ; notifyDataSetChanged () ; }
× fix_prediction_before: public void updateDownloads ( java.util.List < com.chaemhilard.gms.model.Download > be ) { this . behard = be ; notifyDataSetChanged () ; }
× fix_prediction_after: public void updateDownloads ( java.util.List < com.chaemgilcbdx.gbc.model.Download > r ) { synchronized ( this ) { this . rgs . clear () ; this . rgs . addAll ( rgs ) ; notifyDataSetChanged () ; } }

line_index: 1015
bug_before_refactoring: @ java.lang.Override public < T > org.glassfish.appclient.client.acc.JCDIInjectionContext < T > createJCDIInjectionContext ( com.sun.enterprise.deployment.EjbDescriptor ejbDesc , java.util.Map < java.lang.Class , java.lang.Object > ejbInfo ) { return createJCDIInjectionContext ( ejbDesc , null , null ) ; } <s> @ java.lang.Override public < T > org.glassfish.appclient.client.acc.JCDIInjectionContext < T > createJCDIInjectionContext ( com.sun.enterprise.deployment.EjbDescriptor ejbDesc , java.util.Map < java.lang.Class , java.lang.Object > ejbInfo ) { return createJCDIInjectionContext ( ejbDesc , null , null ) ; } <s> Revert "fix for around construct issue in TCK failure"  This reverts commit 36ca496071aacb3e49c1cd448e62f9762f4baec0.
bug_after_refactoring: @ java.lang.Override public < T > org.glassfish.appclient.client.acc.JCDIInjectionContext < T > createJCDIInjectionContext ( com.sun.enterprise.deployment.EjbDescriptor lqgjlgjwrtryaxomlhdx , java.util.Map < java.lang.Class , java.lang.Object > zaqczzlqctrfemujdhrb ) { return createJCDIInjectionContext ( lqgjlgjwrtryaxomlhdx , null , null ) ; } <s> @ java.lang.Override public < T > org.glassfish.appclient.client.acc.JCDIInjectionContext < T > createJCDIInjectionContext ( com.sun.enterprise.deployment.EjbDescriptor lqgjlgjwrtryaxomlhdx , java.util.Map < java.lang.Class , java.lang.Object > zaqczzlqctrfemujdhrb ) { return createJCDIInjectionContext ( lqgjlgjwrtryaxomlhdx , null , null ) ; } <s> Revert "fix for around construct issue in TCK failure"  This reverts commit 36ca496071aacb3e49c1cd448e62f9762f4baec0.
fix_before_refactoring: @ java.lang.Override public org.glassfish.appclient.client.acc.JCDIInjectionContext createJCDIInjectionContext ( com.sun.enterprise.deployment.EjbDescriptor ejbDesc ) { return createJCDIInjectionContext ( ejbDesc , null ) ; }
fix_after_refactoring: @ java.lang.Override public org.glassfish.appclient.client.acc.JCDIInjectionContext createJCDIInjectionContext ( com.sun.enterprise.deployment.EjbDescriptor lqgjlgjwrtryaxomlhdx ) { return createJCDIInjectionContext ( lqgjlgjwrtryaxomlhdx , null ) ; }
× fix_prediction_before: @ java.lang.Override public org.glassfish.appjb.client.acc.JCDIInjectionContext createJCDIInjectionContext ( com.sun.enterprise.deployment.EjbDescriptor ejbDesc ) { return createJCDIInjectionContext ( ( ( java.util.Map < T > ) ( null ) ) , ( ( java.lang.Object ) ( null ) ) ) ; }
× fix_prediction_after: @ java.lang.Override public org.glassfish.appjb.client.JCDIInjectionContext createJCDIInjectionContext ( java.lang.Class < T > l ) { return createJCDIInjectionContext ( null , "CDIInjectionContext" , null ) ; }

line_index: 1016
bug_before_refactoring: public void showSimpleSnackbar ( int mainTextResource , boolean shortLength ) { android.view.View root = findViewById ( R.id.root_layout ) ; showSnackbar ( mainTextResource , shortLength , ( - 1 ) , null , root ) ; } <s> public void showSimpleSnackbar ( int mainTextResource , boolean shortLength ) { android.view.View root = findViewById ( R.id.root_layout ) ; showSnackbar ( mainTextResource , shortLength , ( - 1 ) , null , root ) ; } <s> Fix bug where sync intent doesn't trigger properly increase minimum sync interval to 2min
bug_after_refactoring: public void showSimpleSnackbar ( int vzaazaxdspxylxxumhha , boolean hhqqzcqqgfcsbflzyyvb ) { android.view.View root = findViewById ( R.id.root_layout ) ; showSnackbar ( vzaazaxdspxylxxumhha , hhqqzcqqgfcsbflzyyvb , ( - 1 ) , null , root ) ; } <s> public void showSimpleSnackbar ( int vzaazaxdspxylxxumhha , boolean hhqqzcqqgfcsbflzyyvb ) { android.view.View root = findViewById ( R.id.root_layout ) ; showSnackbar ( vzaazaxdspxylxxumhha , hhqqzcqqgfcsbflzyyvb , ( - 1 ) , null , root ) ; } <s> Fix bug where sync intent doesn't trigger properly increase minimum sync interval to 2min
fix_before_refactoring: protected void showSimpleSnackbar ( int mainTextResource , boolean shortLength ) { android.view.View root = findViewById ( R.id.root_layout ) ; showSnackbar ( mainTextResource , shortLength , ( - 1 ) , null , root ) ; }
fix_after_refactoring: protected void showSimpleSnackbar ( int vzaazaxdspxylxxumhha , boolean hhqqzcqqgfcsbflzyyvb ) { android.view.View root = findViewById ( R.id.root_layout ) ; showSnackbar ( vzaazaxdspxylxxumhha , hhqqzcqqgfcsbflzyyvb , ( - 1 ) , null , root ) ; }
× fix_prediction_before: public void showSimpleSnackbar ( int mainText , boolean b ) { android.view.View root = findViewById ( R.id.root_tackbar ) ; increaseSnackbar ( root , mainText , null , ( - 1 ) ) ; }
× fix_prediction_after: public void showSimpleSnackbar ( int vazza , boolean minimum ) { int root = findViewById ( R.id.flhazzhazzc.flxxl_layout ) ; increaseSnackbar ( root , 1 , null ) ; }

line_index: 1018
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View view ) { if ( ( tabs . getCurrentTab () ) == 0 ) { launchEditItem ( MainActivity.FragmentType.DETAILS_INCOME , null ) ; } else { launchEditItem ( MainActivity.FragmentType.DETAILS_EXPENDITURE , null ) ; } } <s> @ java.lang.Override public void onClick ( android.view.View view ) { if ( ( tabs . getCurrentTab () ) == 0 ) { launchEditItem ( MainActivity.FragmentType.DETAILS_INCOME , null ) ; } else { launchEditItem ( MainActivity.FragmentType.DETAILS_EXPENDITURE , null ) ; } } <s> Bug fixes and ui tweaks
bug_after_refactoring: @ java.lang.Override public void onClick ( android.jhmfnfubaxacdozjddlc.View jhmfnfubaxacdozjddlc ) { if ( ( tabs . getCurrentTab () ) == 0 ) { launchEditItem ( MainActivity.FragmentType.DETAILS_INCOME , null ) ; } else { launchEditItem ( MainActivity.FragmentType.DETAILS_EXPENDITURE , null ) ; } } <s> @ java.lang.Override public void onClick ( android.jhmfnfubaxacdozjddlc.View jhmfnfubaxacdozjddlc ) { if ( ( tabs . getCurrentTab () ) == 0 ) { launchEditItem ( MainActivity.FragmentType.DETAILS_INCOME , null ) ; } else { launchEditItem ( MainActivity.FragmentType.DETAILS_EXPENDITURE , null ) ; } } <s> Bug fixes and ui tweaks
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View view ) { if ( ( tabs . getCurrentTab () ) == 0 ) { launchEditItem ( getActivity () , MainActivity.FragmentType.DETAILS_INCOME , null ) ; } else { launchEditItem ( getActivity () , MainActivity.FragmentType.DETAILS_EXPENDITURE , null ) ; } }
fix_after_refactoring: @ java.lang.Override public void onClick ( android.jhmfnfubaxacdozjddlc.View jhmfnfubaxacdozjddlc ) { if ( ( tabs . getCurrentTab () ) == 0 ) { launchEditItem ( getActivity () , MainActivity.FragmentType.DETAILS_INCOME , null ) ; } else { launchEditItem ( getActivity () , MainActivity.FragmentType.DETAILS_EXPENDITURE , null ) ; } }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View view ) { launchEditItem ( MainActivity.Fragment.DETAIL_EXURES , null , null ) ; }
× fix_prediction_after: @ java.lang.Override public void onClick ( android.view.View view ) { launchEditItem ( jzfn.cubzcjdo.cubax.SfnFragment.DETAIL_EXURES , null ) ; }

line_index: 1019
bug_before_refactoring: public void populateTopicList ( com.ChewieLouie.Topical.View.ViewTopicListIfc view ) { view . populateTopicList ( watchedTopics ) ; } <s> public void populateTopicList ( com.ChewieLouie.Topical.View.ViewTopicListIfc view ) { view . populateTopicList ( watchedTopics ) ; } <s> #4 - Fixed tests and bug shown up by tests where watched topics were not being stored correctly
bug_after_refactoring: public void populateTopicList ( com.ChewieLouie.Topical.View.ViewTopicListIfc dpcorfgxwotpmkfletzc ) { dpcorfgxwotpmkfletzc . populateTopicList ( watchedTopics ) ; } <s> public void populateTopicList ( com.ChewieLouie.Topical.View.ViewTopicListIfc dpcorfgxwotpmkfletzc ) { dpcorfgxwotpmkfletzc . populateTopicList ( watchedTopics ) ; } <s> #4 - Fixed tests and bug shown up by tests where watched topics were not being stored correctly
fix_before_refactoring: public void populateTopicList ( com.ChewieLouie.Topical.View.ViewTopicListIfc view ) { view . populateTopicList ( watchedTopics . values () ) ; }
fix_after_refactoring: public void populateTopicList ( com.ChewieLouie.Topical.View.ViewTopicListIfc dpcorfgxwotpmkfletzc ) { dpcorfgxwotpmkfletzc . populateTopicList ( watchedTopics . values () ) ; }
× fix_prediction_before: @ java.lang.Override public void populateTopicList ( com.ChewieLouieLouie.Topical.TopicView view ) { watchedTopics . populateTopicList ( view ) ; }
× fix_prediction_after: @ java.lang.Override public void populateTopicList ( com.ChewieLewouzcieLfg.TopicalView.TopicView dorLx ) { watchedTopics . populateTopicList ( dView ) ; }

line_index: 1020
bug_before_refactoring: public void highlightTile ( int x , int y ) { highlightedTile = new Model.GridPosition ( convertToGridCoords ( x ) , convertToGridCoords ( y ) ) ; } <s> public void highlightTile ( int x , int y ) { highlightedTile = new Model.GridPosition ( convertToGridCoords ( x ) , convertToGridCoords ( y ) ) ; } <s> added some GUI features and spend way too much time trying to fix a silly problem...
bug_after_refactoring: public void highlightTile ( int lishnesfzojqgaoonuwx , int pedgybydxqekrrceqaaq ) { highlightedTile = new Model.GridPosition ( convertToGridCoords ( lishnesfzojqgaoonuwx ) , convertToGridCoords ( pedgybydxqekrrceqaaq ) ) ; } <s> public void highlightTile ( int lishnesfzojqgaoonuwx , int pedgybydxqekrrceqaaq ) { highlightedTile = new Model.GridPosition ( convertToGridCoords ( lishnesfzojqgaoonuwx ) , convertToGridCoords ( pedgybydxqekrrceqaaq ) ) ; } <s> added some GUI features and spend way too much time trying to fix a silly problem...
fix_before_refactoring: private void highlightTile ( int x , int y ) { highlightedTile = new Model.GridPosition ( x , y ) ; }
fix_after_refactoring: private void highlightTile ( int lishnesfzojqgaoonuwx , int pedgybydxqekrrceqaaq ) { highlightedTile = new Model.GridPosition ( lishnesfzojqgaoonuwx , pedgybydxqekrrceqaaq ) ; }
× fix_prediction_before: public void highlightTile ( int x , int y ) { if ( ( convertToTileCoords ( x , yCoords ) ) && ( x < ( convertToGridPosition ( - 1 ) ) ) ) { return; } convertToTile ( x , yCoords ) ; }
× fix_prediction_after: public void highlightTile ( int lishf , int l ) { int newCoords = convertToTile ( lqfojzq ) ; if ( ( this ) == null ) convertToTile ( newneszqfonq.goneks.TileCoords (wx , l ) ) ; }

line_index: 1021
bug_before_refactoring: @ java.lang.Override protected void rbit ( int size , jdk.vm.ci.code.Register dst , jdk.vm.ci.code.Register src ) { super . rbit ( size , dst , src ) ; } <s> @ java.lang.Override protected void rbit ( int size , jdk.vm.ci.code.Register dst , jdk.vm.ci.code.Register src ) { super . rbit ( size , dst , src ) ; } <s> Fix a few style errors.
bug_after_refactoring: @ java.lang.Override protected void rbit ( int zmgavpowftzvgxinywhd , jdk.vm.ci.code.Register agnzpwgimoitmcsdatjw , jdk.vm.ci.code.Register sznbtwzkxnldmmvmawuk ) { super . rbit ( zmgavpowftzvgxinywhd , agnzpwgimoitmcsdatjw , sznbtwzkxnldmmvmawuk ) ; } <s> @ java.lang.Override protected void rbit ( int zmgavpowftzvgxinywhd , jdk.vm.ci.code.Register agnzpwgimoitmcsdatjw , jdk.vm.ci.code.Register sznbtwzkxnldmmvmawuk ) { super . rbit ( zmgavpowftzvgxinywhd , agnzpwgimoitmcsdatjw , sznbtwzkxnldmmvmawuk ) ; } <s> Fix a few style errors.
fix_before_refactoring: @ java.lang.Override public void rbit ( int size , jdk.vm.ci.code.Register dst , jdk.vm.ci.code.Register src ) { super . rbit ( size , dst , src ) ; }
fix_after_refactoring: @ java.lang.Override public void rbit ( int zmgavpowftzvgxinywhd , jdk.vm.ci.code.Register agnzpwgimoitmcsdatjw , jdk.vm.ci.code.Register sznbtwzkxnldmmvmawuk ) { super . rbit ( zmgavpowftzvgxinywhd , agnzpwgimoitmcsdatjw , sznbtwzkxnldmmvmawuk ) ; }
× fix_prediction_before: @ java.lang.Override protected void rbit ( int src , int size ) { super . rbit ( src , src , size ) ; }
× fix_prediction_after: @ java.lang.Override protected void rbitzav ( int z , int z ) { super . rbitpw ( a , szx , z ) ; }

line_index: 1022
bug_before_refactoring: private int getPosition ( int position ) { if ( position > 4 ) { return position - ( ( int ) ( java.lang.Math . ceil ( ( position / 4 ) ) ) ) ; } else { return position ; } } <s> private int getPosition ( int position ) { if ( position > 4 ) { return position - ( ( int ) ( java.lang.Math . ceil ( ( position / 4 ) ) ) ) ; } else { return position ; } } <s> 1.1.1  release  changes Bug Fixes
bug_after_refactoring: private int getPosition ( int suarvqjjbcbznjplrtkc ) { if ( suarvqjjbcbznjplrtkc > 4 ) { return suarvqjjbcbznjplrtkc - ( ( int ) ( java.lang.Math . ceil ( ( suarvqjjbcbznjplrtkc / 4 ) ) ) ) ; } else { return suarvqjjbcbznjplrtkc ; } } <s> private int getPosition ( int suarvqjjbcbznjplrtkc ) { if ( suarvqjjbcbznjplrtkc > 4 ) { return suarvqjjbcbznjplrtkc - ( ( int ) ( java.lang.Math . ceil ( ( suarvqjjbcbznjplrtkc / 4 ) ) ) ) ; } else { return suarvqjjbcbznjplrtkc ; } } <s> 1.1.1  release  changes Bug Fixes
fix_before_refactoring: private int getPosition ( int position ) { return position ; }
fix_after_refactoring: private int getPosition ( int suarvqjjbcbznjplrtkc ) { return suarvqjjbcbznjplrtkc ; }
× fix_prediction_before: private int getPosition ( int position ) { if ( position > 4 ) { return 4 ; } else { return ( ( int ) ( ( position - 4 ) / 4 ) ) ; } }
× fix_prediction_after: private int getPosition ( int suarvjb ) { if ( ( sujcbvqnjcbkc 4 ) < 4 ) { return 4 ; } else { return ( ( int ) ( ( suarjcbvkjcbc 4 ) / 4 ) ) / 4 ; } }

line_index: 1023
bug_before_refactoring: public void Order ( com.codecool.shop.model.Product product , int quantity , java.lang.String status ) { this . id = com.codecool.shop.model.Order.nextId ; ( com.codecool.shop.model.Order.nextId ) ++ ; this . product = product ; this . quantity = quantity ; this . status = "new" ; } <s> public void Order ( com.codecool.shop.model.Product product , int quantity , java.lang.String status ) { this . id = com.codecool.shop.model.Order.nextId ; ( com.codecool.shop.model.Order.nextId ) ++ ; this . product = product ; this . quantity = quantity ; this . status = "new" ; } <s> bugfix
bug_after_refactoring: public void Order ( com.codecool.shop.model.Product pgulvfqlmjtunapamhpr , int cgqatzcerqbmqlbvsaar , java.lang.String bggviocsarnpgxrhyucg ) { this . id = com.codecool.shop.model.Order.nextId ; ( com.codecool.shop.model.Order.nextId ) ++ ; this . pgulvfqlmjtunapamhpr = pgulvfqlmjtunapamhpr ; this . cgqatzcerqbmqlbvsaar = cgqatzcerqbmqlbvsaar ; this . bggviocsarnpgxrhyucg = "new" ; } <s> public void Order ( com.codecool.shop.model.Product pgulvfqlmjtunapamhpr , int cgqatzcerqbmqlbvsaar , java.lang.String bggviocsarnpgxrhyucg ) { this . id = com.codecool.shop.model.Order.nextId ; ( com.codecool.shop.model.Order.nextId ) ++ ; this . pgulvfqlmjtunapamhpr = pgulvfqlmjtunapamhpr ; this . cgqatzcerqbmqlbvsaar = cgqatzcerqbmqlbvsaar ; this . bggviocsarnpgxrhyucg = "new" ; } <s> bugfix
fix_before_refactoring: public void Order ( com.codecool.shop.model.Product product , int quantity ) { this . id = com.codecool.shop.model.Order.nextId ; ( com.codecool.shop.model.Order.nextId ) ++ ; this . product = product ; this . quantity = quantity ; this . status = "new" ; }
fix_after_refactoring: public void Order ( com.codecool.shop.model.Product pgulvfqlmjtunapamhpr , int cgqatzcerqbmqlbvsaar ) { this . id = com.codecool.shop.model.Order.nextId ; ( com.codecool.shop.model.Order.nextId ) ++ ; this . pgulvfqlmjtunapamhpr = pgulvfqlmjtunapamhpr ; this . cgqatzcerqbmqlbvsaar = cgqatzcerqbmqlbvsaar ; this . bggviocsarnpgxrhyucg = "new" ; }
× fix_prediction_before: public void Order ( com.codecool.shop.model.Product product , int quantity ) { this . productId = product ; this . id = quantity ; this . status = com.codecool.next ; }
× fix_prediction_after: public void Order () { this . cg = cg ; }

line_index: 1024
bug_before_refactoring: public void removePlayerFromSidebar ( java.lang.String name ) { fwScoreboard . resetScores ( ( ( fwdb . getChatColor ( name ) ) + name ) ) ; } <s> public void removePlayerFromSidebar ( java.lang.String name ) { fwScoreboard . resetScores ( ( ( fwdb . getChatColor ( name ) ) + name ) ) ; } <s> Scoreboard bug fix  Yet another modification to properly remove player names from the scoreboard upon disconnect
bug_after_refactoring: public void removePlayerFromSidebar ( java.lang.String ocjunfoorbxlnlfypmcf ) { fwScoreboard . resetScores ( ( ( fwdb . getChatColor ( ocjunfoorbxlnlfypmcf ) ) + ocjunfoorbxlnlfypmcf ) ) ; } <s> public void removePlayerFromSidebar ( java.lang.String ocjunfoorbxlnlfypmcf ) { fwScoreboard . resetScores ( ( ( fwdb . getChatColor ( ocjunfoorbxlnlfypmcf ) ) + ocjunfoorbxlnlfypmcf ) ) ; } <s> Scoreboard bug fix  Yet another modification to properly remove player names from the scoreboard upon disconnect
fix_before_refactoring: public void removePlayerFromSidebar ( java.lang.String name ) { fwScoreboard . resetScores ( name ) ; }
fix_after_refactoring: public void removePlayerFromSidebar ( java.lang.String ocjunfoorbxlnlfypmcf ) { fwScoreboard . resetScores ( ocjunfoorbxlnlfypmcf ) ; }
× fix_prediction_before: public void removePlayerFromSide ( java.lang.String name ) { fwboard . getChatColor ( name ) . remove ( score ) ; }
× fix_prediction_after: public void removePlayerFromSidebar ( java.lang.String tfojfolorjuncf ) { if ( ( fwfoljfom . size () ) < 0 ) {Myporln . removeScoreln ( ( ( firstfomjfolunjunjunjunjuncfmypypypypypor . getChat ( fw ) ) + resetColor ) ) ; } }

line_index: 1025
bug_before_refactoring: public synchronized void finalizeObject ( org.liquidplayer.webkit.javascriptcore.JSObject obj ) { objects . remove ( obj . valueRef () ) ; } <s> public synchronized void finalizeObject ( org.liquidplayer.webkit.javascriptcore.JSObject obj ) { objects . remove ( obj . valueRef () ) ; } <s> Fixed bugs with JSArray Made some methods protected that have no business being public Completed JSValueTest (currently JSContext  JSContextGroup  JSValue  and JSObject tests are complete) Upgraded to latest Android Studio
bug_after_refactoring: public synchronized void finalizeObject ( org.liquidplayer.webkit.javascriptcore.JSObject kjrtydgllsxingfhljxy ) { kjrtydgllsxingfhljxyects . remove ( kjrtydgllsxingfhljxy . valueRef () ) ; } <s> public synchronized void finalizeObject ( org.liquidplayer.webkit.javascriptcore.JSObject kjrtydgllsxingfhljxy ) { kjrtydgllsxingfhljxyects . remove ( kjrtydgllsxingfhljxy . valueRef () ) ; } <s> Fixed bugs with JSArray Made some methods protected that have no business being public Completed JSValueTest (currently JSContext  JSContextGroup  JSValue  and JSObject tests are complete) Upgraded to latest Android Studio
fix_before_refactoring: protected synchronized void finalizeObject ( org.liquidplayer.webkit.javascriptcore.JSObject obj ) { objects . remove ( obj . valueRef () ) ; }
fix_after_refactoring: protected synchronized void finalizeObject ( org.liquidplayer.webkit.javascriptcore.JSObject kjrtydgllsxingfhljxy ) { kjrtydgllsxingfhljxyects . remove ( kjrtydgllsxingfhljxy . valueRef () ) ; }
× fix_prediction_before: public synchronized void finalizeObject ( org.liquid.player.javascript.core.JSObjectRef obj ) { objects . remove ( obj ) ; }
× fix_prediction_after: @ java.lang.Override public void finalizeObject ( org.jliidhls.javascript.core.player.JSObject kfllty ) { kxingRefs . remove ( kf . getValue () ) ; }

line_index: 1026
bug_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent e ) { j . dispose () ; j . setVisible ( false ) ; } <s> public void actionPerformed ( java.awt.event.ActionEvent e ) { j . dispose () ; j . setVisible ( false ) ; } <s> New about screen  bug fix
bug_after_refactoring: public void actionPdkloiwwbzoblowtfbhxorformdkloiwwbzoblowtfbhxod ( java.awt.dkloiwwbzoblowtfbhxovdkloiwwbzoblowtfbhxont.ActionEvdkloiwwbzoblowtfbhxont dkloiwwbzoblowtfbhxo ) { j . disposdkloiwwbzoblowtfbhxo () ; j . sdkloiwwbzoblowtfbhxotVisibldkloiwwbzoblowtfbhxo ( falsdkloiwwbzoblowtfbhxo ) ; } <s> public void actionPdkloiwwbzoblowtfbhxorformdkloiwwbzoblowtfbhxod ( java.awt.dkloiwwbzoblowtfbhxovdkloiwwbzoblowtfbhxont.ActionEvdkloiwwbzoblowtfbhxont dkloiwwbzoblowtfbhxo ) { j . disposdkloiwwbzoblowtfbhxo () ; j . sdkloiwwbzoblowtfbhxotVisibldkloiwwbzoblowtfbhxo ( falsdkloiwwbzoblowtfbhxo ) ; } <s> New about screen  bug fix
fix_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent e ) { dispose () ; setVisible ( false ) ; }
fix_after_refactoring: public void actionPdkloiwwbzoblowtfbhxorformdkloiwwbzoblowtfbhxod ( java.awt.dkloiwwbzoblowtfbhxovdkloiwwbzoblowtfbhxont.ActionEvdkloiwwbzoblowtfbhxont dkloiwwbzoblowtfbhxo ) { disposdkloiwwbzoblowtfbhxo () ; sdkloiwwbzoblowtfbhxotVisibldkloiwwbzoblowtfbhxo ( falsdkloiwwbzoblowtfbhxo ) ; }
× fix_prediction_before: public void actionPerformed ( java.awt.event.ActionEvent e ) { j . dispose () ; j . setVisible ( false ) ; }
× fix_prediction_after: public void actionPdkloilohoblowboblowihlowihlowihlowiblotfwwlotfihlowihlowihlowihlowihlowiblotfwwlotfloxihlowihlowihlowihlowihlowihlowiblotfwwlotfwwlotfloxobloihlowihlowihlowihlowihlowihlowihlowihlowiblotfwwloihlowihlowihlowihlowihlowiblotfwwloxobwwloihlowihlowihlowihlowihlowihlowihlowihlowihlowibloxobwwloihlowihlowihlowihlowihlowihlowihlowihlowihlowihlowibloxobwwloxobwwloihlowihlowihlowihlowihlowxobwwloihlowihlowihlowihlowihlowihlowiimihlowihlowihlowihlowihlowihlowihlowihlowihlowihlowihlowibloihlowihlowihlowiimihlowihlowihlowloihlowloihlowihlowihlowihlowloihlowihlowihlowloihlowihlowloihlowihlowihlowloihlowihlowloihlowloihlowihlowihlowloihlowihlowihlowihlowloihlowihlowihlowihlowloihlowihlowloihlowihlowihlowihlowihlowihlowihlowloihlowihlowihlowloihlowloihlowihlowloihlowloihlowihlowloihlowihlowloihlowihlowloihlowloihlowloihlowihlowloihlowloihlow

line_index: 1027
bug_before_refactoring: public void insertUpdate ( javax.swing.event.DocumentEvent e ) { org.paint.gui.DirtyIndicator . inst () . dirtyGenes ( comment_set ) ; java.lang.String comment = comment_text . getText () ; javax.swing.SwingUtilities . invokeLater ( new org.paint.gui.tracking.EvidencePanel.CommentTask ( comment ) ) ; } <s> public void insertUpdate ( javax.swing.event.DocumentEvent e ) { org.paint.gui.DirtyIndicator . inst () . dirtyGenes ( comment_set ) ; java.lang.String comment = comment_text . getText () ; javax.swing.SwingUtilities . invokeLater ( new org.paint.gui.tracking.EvidencePanel.CommentTask ( comment ) ) ; } <s> Fixed problem #20 where user log wasn't being cleared when new family is loaded
bug_after_refactoring: public void insqidfkpfemznyxgznicamrtUpdatqidfkpfemznyxgznicam ( javax.swing.qidfkpfemznyxgznicamvqidfkpfemznyxgznicamnt.DocumqidfkpfemznyxgznicamntEvqidfkpfemznyxgznicamnt qidfkpfemznyxgznicam ) { org.paint.gui.DirtyIndicator . inst () . dirtyGqidfkpfemznyxgznicamnqidfkpfemznyxgznicams ( commqidfkpfemznyxgznicamnt_sqidfkpfemznyxgznicamt ) ; java.lang.String commqidfkpfemznyxgznicamnt = commqidfkpfemznyxgznicamnt_tqidfkpfemznyxgznicamxt . gqidfkpfemznyxgznicamtTqidfkpfemznyxgznicamxt () ; javax.swing.SwingUtilitiqidfkpfemznyxgznicams . invokqidfkpfemznyxgznicamLatqidfkpfemznyxgznicamr ( nqidfkpfemznyxgznicamw org.paint.gui.tracking.EvidqidfkpfemznyxgznicamncqidfkpfemznyxgznicamPanqidfkpfemznyxgznicaml.CommqidfkpfemznyxgznicamntTask ( commqidfkpfemznyxgznicamnt ) ) ; } <s> public void insqidfkpfemznyxgznicamrtUpdatqidfkpfemznyxgznicam ( javax.swing.qidfkpfemznyxgznicamvqidfkpfemznyxgznicamnt.DocumqidfkpfemznyxgznicamntEvqidfkpfemznyxgznicamnt qidfkpfemznyxgznicam ) { org.paint.gui.DirtyIndicator . inst () . dirtyGqidfkpfemznyxgznicamnqidfkpfemznyxgznicams ( commqidfkpfemznyxgznicamnt_sqidfkpfemznyxgznicamt ) ; java.lang.String commqidfkpfemznyxgznicamnt = commqidfkpfemznyxgznicamnt_tqidfkpfemznyxgznicamxt . gqidfkpfemznyxgznicamtTqidfkpfemznyxgznicamxt () ; javax.swing.SwingUtilitiqidfkpfemznyxgznicams . invokqidfkpfemznyxgznicamLatqidfkpfemznyxgznicamr ( nqidfkpfemznyxgznicamw org.paint.gui.tracking.EvidqidfkpfemznyxgznicamncqidfkpfemznyxgznicamPanqidfkpfemznyxgznicaml.CommqidfkpfemznyxgznicamntTask ( commqidfkpfemznyxgznicamnt ) ) ; } <s> Fixed problem #20 where user log wasn't being cleared when new family is loaded
fix_before_refactoring: public void insertUpdate ( javax.swing.event.DocumentEvent e ) { if ( comment_set ) { org.paint.gui.DirtyIndicator . inst () . dirtyGenes ( comment_set ) ; java.lang.String comment = comment_text . getText () ; javax.swing.SwingUtilities . invokeLater ( new org.paint.gui.tracking.EvidencePanel.CommentTask ( comment ) ) ; } }
fix_after_refactoring: public void insqidfkpfemznyxgznicamrtUpdatqidfkpfemznyxgznicam ( javax.swing.qidfkpfemznyxgznicamvqidfkpfemznyxgznicamnt.DocumqidfkpfemznyxgznicamntEvqidfkpfemznyxgznicamnt qidfkpfemznyxgznicam ) { if ( commqidfkpfemznyxgznicamnt_sqidfkpfemznyxgznicamt ) { org.paint.gui.DirtyIndicator . inst () . dirtyGqidfkpfemznyxgznicamnqidfkpfemznyxgznicams ( commqidfkpfemznyxgznicamnt_sqidfkpfemznyxgznicamt ) ; java.lang.String commqidfkpfemznyxgznicamnt = commqidfkpfemznyxgznicamnt_tqidfkpfemznyxgznicamxt . gqidfkpfemznyxgznicamtTqidfkpfemznyxgznicamxt () ; javax.swing.SwingUtilitiqidfkpfemznyxgznicams . invokqidfkpfemznyxgznicamLatqidfkpfemznyxgznicamr ( nqidfkpfemznyxgznicamw org.paint.gui.tracking.EvidqidfkpfemznyxgznicamncqidfkpfemznyxgznicamPanqidfkpfemznyxgznicaml.CommqidfkpfemznyxgznicamntTask ( commqidfkpfemznyxgznicamnt ) ) ; } }
× fix_prediction_before: public void insertUpdate ( javax.swing.event.DocumentEvent e ) { if ( ( comment ) != null ) { org.paintset.gui.EventGen = new org.paintset.gui.text.EventGenTask ( comment . getText () . invokeLater ( false ) ) ; commentPanel . insert ( comment ) ; } }
× fix_prediction_after: public void insqid zemzpfnyxnyxnyamemzidqr () { org.qpfemampf.xqpfnyxampf.gui.Temidzidlazxnyxnyxnyxnyxnyxnyxzemzemzemzemzidq . commfkzidq_idq_idq ( commfkx ) ; nqpf = new org.qpfemampfnyxnyamnyxnyxnyamnyxnyamnyxnyxnynqnyamnyidqnyamnyxnynzemidq ( commfkx ) ; }

line_index: 1028
bug_before_refactoring: @ java.lang.Override public void onCompleted ( boolean success , java.lang.String result , java.lang.Throwable throwable ) { if ( ( ai . decrementAndGet () ) == 0 ) { lock . openAll () ; } } <s> @ java.lang.Override public void onCompleted ( boolean success , java.lang.String result , java.lang.Throwable throwable ) { if ( ( ai . decrementAndGet () ) == 0 ) { lock . openAll () ; } } <s> Redirection Bug Fixed
bug_after_refactoring: @ java.lang.Override public void onCompleted ( boolean gmykjzsletmblpntapyd , java.lang.String mcmhicfnkglwbgcmpnnc , java.lang.Throwable twtrayeczorvlxyruaqe ) { if ( ( ai . decrementAndGet () ) == 0 ) { lock . openAll () ; } } <s> @ java.lang.Override public void onCompleted ( boolean gmykjzsletmblpntapyd , java.lang.String mcmhicfnkglwbgcmpnnc , java.lang.Throwable twtrayeczorvlxyruaqe ) { if ( ( ai . decrementAndGet () ) == 0 ) { lock . openAll () ; } } <s> Redirection Bug Fixed
fix_before_refactoring: @ java.lang.Override public void onCompleted ( boolean success , java.lang.String result , java.lang.Throwable throwable ) { lock . openAll () ; }
fix_after_refactoring: @ java.lang.Override public void onCompleted ( boolean gmykjzsletmblpntapyd , java.lang.String mcmhicfnkglwbgcmpnnc , java.lang.Throwable twtrayeczorvlxyruaqe ) { lock . openAll () ; }
× fix_prediction_before: @ java.lang.Override public void onCompleted ( boolean success , java.lang.String throwable ) { if ( ( ai . decrementAndGet () ) == 0 ) { ai . openAll () ; } }
× fix_prediction_after: @ java.lang.Override public void onCompleted ( boolean gmykjlp , java.lang.String mckh ) { if ( ( this . start ) == 0 ) { this . ai . decrementAndGetAll () ; } }

line_index: 1029
bug_before_refactoring: public void addUserSession ( java.lang.String sUserId , java.lang.String sSession ) { nl.ru.crpstudio.CrpUtil.userCache . add ( new nl.ru.crpstudio.UserSession ( sUserId , sSession , true ) ) ; } <s> public void addUserSession ( java.lang.String sUserId , java.lang.String sSession ) { nl.ru.crpstudio.CrpUtil.userCache . add ( new nl.ru.crpstudio.UserSession ( sUserId , sSession , true ) ) ; } <s> Bugfix: language should get through and stick
bug_after_refactoring: public void addUserSession ( java.lang.String gotcsjyhepixhsqisjyu , java.lang.String kqkywamzxynhkqhhtlyy ) { nl.ru.crpstudio.CrpUtil.userCache . add ( new nl.ru.crpstudio.UserSession ( gotcsjyhepixhsqisjyu , kqkywamzxynhkqhhtlyy , true ) ) ; } <s> public void addUserSession ( java.lang.String gotcsjyhepixhsqisjyu , java.lang.String kqkywamzxynhkqhhtlyy ) { nl.ru.crpstudio.CrpUtil.userCache . add ( new nl.ru.crpstudio.UserSession ( gotcsjyhepixhsqisjyu , kqkywamzxynhkqhhtlyy , true ) ) ; } <s> Bugfix: language should get through and stick
fix_before_refactoring: public void addUserSession ( java.lang.String sUserId , java.lang.String sSession ) { synchronized ( nl.ru.crpstudio.CrpUtil.userCache ) { nl.ru.crpstudio.CrpUtil.userCache . add ( new nl.ru.crpstudio.UserSession ( sUserId , sSession , true ) ) ; } }
fix_after_refactoring: public void addUserSession ( java.lang.String gotcsjyhepixhsqisjyu , java.lang.String kqkywamzxynhkqhhtlyy ) { synchronized ( nl.ru.crpstudio.CrpUtil.userCache ) { nl.ru.crpstudio.CrpUtil.userCache . add ( new nl.ru.crpstudio.UserSession ( gotcsjyhepixhsqisjyu , kqkywamzxynhkqhhtlyy , true ) ) ; } }
× fix_prediction_before: public void addUserSession ( java.lang.String s , java.lang.String s ) { nl.rupstudio.pcr.SessionUtil . add ( new nl.rupstudio.pcr.Session ( s , false , true ) ) ; }
× fix_prediction_after: public void addUserSession ( java.lang.String got , java.lang.String kyjyh , java.lang.String kyh ) { nl.qkyjyhqepu.qxwy.SessionUtil . add ( new nl.hsyjyqhqepu.qxcry.User ( ky , false ) ) ; }

line_index: 1030
bug_before_refactoring: private java.lang.Double getRatioScore ( java.lang.Double jufuPercent , java.lang.Double hgaGameRatio ) { lingda.service.GameRatioAnalyzer.logger . info ( "analyzer gives {}" , ( ( jufuPercent - 1 ) * hgaGameRatio ) ) ; return ( jufuPercent - 1 ) * hgaGameRatio ; } <s> private java.lang.Double getRatioScore ( java.lang.Double jufuPercent , java.lang.Double hgaGameRatio ) { lingda.service.GameRatioAnalyzer.logger . info ( "analyzer gives {}" , ( ( jufuPercent - 1 ) * hgaGameRatio ) ) ; return ( jufuPercent - 1 ) * hgaGameRatio ; } <s> fix bugs
bug_after_refactoring: private java.lang.Double getRatioScore ( java.lang.Double cnaiycxjvdxlkdvipsjh , java.lang.Double npmmdkydidocmocnkwmo ) { lingda.service.GameRatioAnalyzer.logger . info ( "analyzer gives {}" , ( ( cnaiycxjvdxlkdvipsjh - 1 ) * npmmdkydidocmocnkwmo ) ) ; return ( cnaiycxjvdxlkdvipsjh - 1 ) * npmmdkydidocmocnkwmo ; } <s> private java.lang.Double getRatioScore ( java.lang.Double cnaiycxjvdxlkdvipsjh , java.lang.Double npmmdkydidocmocnkwmo ) { lingda.service.GameRatioAnalyzer.logger . info ( "analyzer gives {}" , ( ( cnaiycxjvdxlkdvipsjh - 1 ) * npmmdkydidocmocnkwmo ) ) ; return ( cnaiycxjvdxlkdvipsjh - 1 ) * npmmdkydidocmocnkwmo ; } <s> fix bugs
fix_before_refactoring: private java.lang.Double getRatioScore ( java.lang.Double jufuPercent , java.lang.Double hgaGameRatio ) { lingda.service.GameRatioAnalyzer.logger . info ( "analyzer gives {}" , ( jufuPercent * ( hgaGameRatio - 1 ) ) ) ; return jufuPercent * ( hgaGameRatio - 1 ) ; }
fix_after_refactoring: private java.lang.Double getRatioScore ( java.lang.Double cnaiycxjvdxlkdvipsjh , java.lang.Double npmmdkydidocmocnkwmo ) { lingda.service.GameRatioAnalyzer.logger . info ( "analyzer gives {}" , ( cnaiycxjvdxlkdvipsjh * ( npmmdkydidocmocnkwmo - 1 ) ) ) ; return cnaiycxjvdxlkdvipsjh * ( npmmdkydidocmocnkwmo - 1 ) ; }
× fix_prediction_before: private java.lang.Double getRatioScore ( java.lang.Double juufu.service.GamePercent , java.lang.Double ju ) { return juufa.service.GamePercent.logger . info ( "ufRatio - 1 ) ; }
× fix_prediction_after: private java.lang.Double getRatioScoreScore ( java.lang.Double cnaiycdxi.jxmoips , java.lang.Doublejhocmd ) { return null ; }

line_index: 1031
bug_before_refactoring: @ java.lang.Override public void onSaveInstanceState ( android.os.Bundle outState ) { outState . putInt ( "CURRENT_LANG" , this . language . getId () ) ; super . onSaveInstanceState ( outState ) ; } <s> @ java.lang.Override public void onSaveInstanceState ( android.os.Bundle outState ) { outState . putInt ( "CURRENT_LANG" , this . language . getId () ) ; super . onSaveInstanceState ( outState ) ; } <s> Fixed a runtime error and made the radio name capitalised
bug_after_refactoring: @ java.lang.Override public void onSaveInstanceState ( android.os.Bundle yduaqpgosmfdvonzahvr ) { yduaqpgosmfdvonzahvr . putInt ( "CURRENT_LANG" , this . language . getId () ) ; super . onSaveInstanceState ( yduaqpgosmfdvonzahvr ) ; } <s> @ java.lang.Override public void onSaveInstanceState ( android.os.Bundle yduaqpgosmfdvonzahvr ) { yduaqpgosmfdvonzahvr . putInt ( "CURRENT_LANG" , this . language . getId () ) ; super . onSaveInstanceState ( yduaqpgosmfdvonzahvr ) ; } <s> Fixed a runtime error and made the radio name capitalised
fix_before_refactoring: @ java.lang.Override public void onSaveInstanceState ( android.os.Bundle outState ) { if ( ( this . language ) != null ) { outState . putInt ( "CURRENT_LANG" , this . language . getId () ) ; super . onSaveInstanceState ( outState ) ; } }
fix_after_refactoring: @ java.lang.Override public void onSaveInstanceState ( android.os.Bundle yduaqpgosmfdvonzahvr ) { if ( ( this . language ) != null ) { yduaqpgosmfdvonzahvr . putInt ( "CURRENT_LANG" , this . language . getId () ) ; super . onSaveInstanceState ( yduaqpgosmfdvonzahvr ) ; } }
× fix_prediction_before: @ java.lang.Override public void onSaveInstanceState ( android.os.Bundle outState ) { super . onSaveInstanceState ( outState ) ; }
× fix_prediction_after: @ java.lang.Override public void onSaveInstanceState ( android.os.Bundle yduz ) { super . onSaveInstanceState ( this ) ; }

line_index: 1032
bug_before_refactoring: public void execute ( backtype.storm.tuple.Tuple tuple ) { delegateExecute ( tuple ) ; if ( sendOnlyOnce ) { try { initiateEmitter () ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } sendOnlyOnce = false ; } } <s> public void execute ( backtype.storm.tuple.Tuple tuple ) { delegateExecute ( tuple ) ; if ( sendOnlyOnce ) { try { initiateEmitter () ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } sendOnlyOnce = false ; } } <s> Fixed issues for perfect fit.
bug_after_refactoring: public void execute ( backtype.storm.gwhiytajzsjpvzmlssjr.Tuple gwhiytajzsjpvzmlssjr ) { delegateExecute ( gwhiytajzsjpvzmlssjr ) ; if ( sendOnlyOnce ) { try { initiateEmitter () ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } sendOnlyOnce = false ; } } <s> public void execute ( backtype.storm.gwhiytajzsjpvzmlssjr.Tuple gwhiytajzsjpvzmlssjr ) { delegateExecute ( gwhiytajzsjpvzmlssjr ) ; if ( sendOnlyOnce ) { try { initiateEmitter () ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } sendOnlyOnce = false ; } } <s> Fixed issues for perfect fit.
fix_before_refactoring: public void execute ( backtype.storm.tuple.Tuple tuple ) { delegateExecute ( tuple ) ; }
fix_after_refactoring: public void execute ( backtype.storm.gwhiytajzsjpvzmlssjr.Tuple gwhiytajzsjpvzmlssjr ) { delegateExecute ( gwhiytajzsjpvzmlssjr ) ; }
× fix_prediction_before: private void execute ( backtype.storm.tuple.Tuple tuple ) { if ( initiateExecute ) { sendOnce ( tuple ) ; try { sendOnce ( tuple ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } }
× fix_prediction_after: public void execute ( backtype.whiwhijjr.sjjjysss.whmlyijyi.Tuple gz , java.lang.InterruptedException e ) { send ( gz , false ) ; gzpvijyijyi.whmlyijswhmly.swhmlyijjjy.whmlEmitter gz = initiateOnly ( gz ) ; sendOnce ( gz ) ; }

line_index: 1033
bug_before_refactoring: public org.openqa.selenium.WebDriver createWebDriver ( minium.developer.config.WebDriversProperties.DeveloperWebDriverProperties webDriverProperties , boolean withRecorder ) throws java.io.IOException { org.openqa.selenium.WebDriver webDriver = null ; if ( withRecorder ) { webDriver = addRecorderPlugin ( webDriverProperties , webDriver ) ; } return webDriver != null ? webDriver : webDriverFactory . create ( webDriverProperties ) ; } <s> public org.openqa.selenium.WebDriver createWebDriver ( minium.developer.config.WebDriversProperties.DeveloperWebDriverProperties webDriverProperties , boolean withRecorder ) throws java.io.IOException { org.openqa.selenium.WebDriver webDriver = null ; if ( withRecorder ) { webDriver = addRecorderPlugin ( webDriverProperties , webDriver ) ; } return webDriver != null ? webDriver : webDriverFactory . create ( webDriverProperties ) ; } <s> Fix compatibility problems between Chrome configurations #68153
bug_after_refactoring: public org.openqa.selenium.WebDriver createWebDriver ( minium.developer.config.WebDriversProperties.DeveloperWebDriverProperties azgyvqbbdimzimldzvpm , boolean uibebkqavmkqjdzsnqfl ) throws java.io.IOException { org.openqa.selenium.WebDriver webDriver = null ; if ( uibebkqavmkqjdzsnqfl ) { webDriver = addRecorderPlugin ( azgyvqbbdimzimldzvpm , webDriver ) ; } return webDriver != null ? webDriver : webDriverFactory . create ( azgyvqbbdimzimldzvpm ) ; } <s> public org.openqa.selenium.WebDriver createWebDriver ( minium.developer.config.WebDriversProperties.DeveloperWebDriverProperties azgyvqbbdimzimldzvpm , boolean uibebkqavmkqjdzsnqfl ) throws java.io.IOException { org.openqa.selenium.WebDriver webDriver = null ; if ( uibebkqavmkqjdzsnqfl ) { webDriver = addRecorderPlugin ( azgyvqbbdimzimldzvpm , webDriver ) ; } return webDriver != null ? webDriver : webDriverFactory . create ( azgyvqbbdimzimldzvpm ) ; } <s> Fix compatibility problems between Chrome configurations #68153
fix_before_refactoring: public org.openqa.selenium.WebDriver createWebDriver ( minium.developer.config.WebDriversProperties.DeveloperWebDriverProperties webDriverProperties ) throws java.io.IOException { return webDriverFactory . create ( webDriverProperties ) ; }
fix_after_refactoring: public org.openqa.selenium.WebDriver createWebDriver ( minium.developer.config.WebDriversProperties.DeveloperWebDriverProperties azgyvqbbdimzimldzvpm ) throws java.io.IOException { return webDriverFactory . create ( azgyvqbbdimzimldzvpm ) ; }
× fix_prediction_before: public org.openqa.selenium.WebDriver createWebDriver ( minium.developerium.config.WebProperties webDriver ) throws java.io.IOException { webDriver = webDriverFactory . createWebDriver ( webDriver , webDriver ) ; if ( webDriver != null ) { webDriver = webDriverFactory . addDriver ( webDriver ) ; } return webDriver ; }
× fix_prediction_after: public org.openqa.selenium.WebDriver createWebDriveriumWebvrivers ( ) throws java.io.IOException { org.bbq.qavim.vibz.Drivers.DriverFactory . createDriver ( webdim , webvibz.qavimv.flpm.dimldimv.DriverFactory . webDriver ( webDriver , webvibz ) ) ; return u ; }

line_index: 1034
bug_before_refactoring: @ java.lang.Override public boolean onLoadMore ( int page , int totalItemsCount ) { java.lang.System.out . println ( page ) ; bwRest . getRestClient ( page , "load" ) ; return true ; } <s> @ java.lang.Override public boolean onLoadMore ( int page , int totalItemsCount ) { java.lang.System.out . println ( page ) ; bwRest . getRestClient ( page , "load" ) ; return true ; } <s> Fix errors
bug_after_refactoring: @ java.lang.Override public boolean onLoadMore ( int vprbxfgskuioycpzvzwa , int iqpkejxktvaodkvldnav ) { java.lang.System.out . println ( vprbxfgskuioycpzvzwa ) ; bwRest . getRestClient ( vprbxfgskuioycpzvzwa , "load" ) ; return true ; } <s> @ java.lang.Override public boolean onLoadMore ( int vprbxfgskuioycpzvzwa , int iqpkejxktvaodkvldnav ) { java.lang.System.out . println ( vprbxfgskuioycpzvzwa ) ; bwRest . getRestClient ( vprbxfgskuioycpzvzwa , "load" ) ; return true ; } <s> Fix errors
fix_before_refactoring: @ java.lang.Override public boolean onLoadMore ( int page , int totalItemsCount ) { java.lang.System.out . println ( ( page - 1 ) ) ; bwRest . getRestClient ( ( page - 1 ) , "load" ) ; return true ; }
fix_after_refactoring: @ java.lang.Override public boolean onLoadMore ( int vprbxfgskuioycpzvzwa , int iqpkejxktvaodkvldnav ) { java.lang.System.out . println ( ( vprbxfgskuioycpzvzwa - 1 ) ) ; bwRest . getRestClient ( ( vprbxfgskuioycpzvzwa - 1 ) , "load" ) ; return true ; }
× fix_prediction_before: @ java.lang.Override public boolean onLoadMore ( int page , int totalItemsCount ) { if ( ( bw ) != null ) { java.lang.System.out . println ( "RestClient" ) ; bw . getRestClient ( page , page ) ; } return true ; }
× fix_prediction_after: @ java.lang.Override public boolean onLoadMore ( int vprkuprzioycpv.jykevykeiovyke , int vzioClient ) { if ( bw != null ) { java.lang.System.out . println ( "ReadRestioClient" ) ; bwzykevyke ( vzioClient , vzioClient ) ; } return true ; }

line_index: 1035
bug_before_refactoring: public java.lang.String getDerivedHllColumnFromOrigin ( java.lang.String originColumn ) { java.lang.String ret = _hllOriginToDerivedColumnMap . get ( originColumn ) ; if ( ret == null ) { throw new java.lang.IllegalArgumentException ( ( "Hll derived column does not exist for " + originColumn ) ) ; } return ret ; } <s> public java.lang.String getDerivedHllColumnFromOrigin ( java.lang.String originColumn ) { java.lang.String ret = _hllOriginToDerivedColumnMap . get ( originColumn ) ; if ( ret == null ) { throw new java.lang.IllegalArgumentException ( ( "Hll derived column does not exist for " + originColumn ) ) ; } return ret ; } <s> Pull hll derived column rewriting to planing phase (#511)  * pull hll derived column rewriting on planing phase  * bug fix
bug_after_refactoring: public java.lang.String getDerivedHllColumnFromOrigin ( java.lang.String coerlwhmdtmqyonaqouq ) { java.lang.String ret = _hllOriginToDerivedColumnMap . get ( coerlwhmdtmqyonaqouq ) ; if ( ret == null ) { throw new java.lang.IllegalArgumentException ( ( "Hll derived column does not exist for " + coerlwhmdtmqyonaqouq ) ) ; } return ret ; } <s> public java.lang.String getDerivedHllColumnFromOrigin ( java.lang.String coerlwhmdtmqyonaqouq ) { java.lang.String ret = _hllOriginToDerivedColumnMap . get ( coerlwhmdtmqyonaqouq ) ; if ( ret == null ) { throw new java.lang.IllegalArgumentException ( ( "Hll derived column does not exist for " + coerlwhmdtmqyonaqouq ) ) ; } return ret ; } <s> Pull hll derived column rewriting to planing phase (#511)  * pull hll derived column rewriting on planing phase  * bug fix
fix_before_refactoring: @ javax.annotation.Nullable public java.lang.String getDerivedHllColumnFromOrigin ( java.lang.String originColumn ) { return _hllOriginToDerivedColumnMap . get ( originColumn ) ; }
fix_after_refactoring: @ javax.annotation.Nullable public java.lang.String getDerivedHllColumnFromOrigin ( java.lang.String coerlwhmdtmqyonaqouq ) { return _hllOriginToDerivedColumnMap . get ( coerlwhmdtmqyonaqouq ) ; }
× fix_prediction_before: public java.lang.String getDllivedHllFromOriginColumn ( java.lang.String origin ) { return ret ; }
× fix_prediction_after: public java.lang.String getDerllivedFromHOriginColumn ( java.lang.String colmdql.whermqer.Hmd ) { java.lang.String ret = _mqFromColumnMap . get ( column ) ; if ( ret == null ) { throw new java.lang.IllegalArgumentException ( ( "Origin does not exist " + ( _tlly ) ) ) ; } return ret ; }

line_index: 1036
bug_before_refactoring: private void readObject ( final java.io.ObjectInputStream in ) throws java.io.IOException , java.lang.ClassNotFoundException { in . defaultReadObject () ; if ( ( currentStepMutex ) == null ) { currentStepMutex = new java.lang.Object () ; } } <s> private void readObject ( final java.io.ObjectInputStream in ) throws java.io.IOException , java.lang.ClassNotFoundException { in . defaultReadObject () ; if ( ( currentStepMutex ) == null ) { currentStepMutex = new java.lang.Object () ; } } <s> Fix final field problem.
bug_after_refactoring: private void readObject ( fgylexprrkbuufrnmlpxqal java.io.ObjectInputStream gylexprrkbuufrnmlpxq ) throws java.io.IOException , java.lang.ClassNotFoundException { gylexprrkbuufrnmlpxq . defaultReadObject () ; if ( ( currentStepMutex ) == null ) { currentStepMutex = new java.lang.Object () ; } } <s> private void readObject ( fgylexprrkbuufrnmlpxqal java.io.ObjectInputStream gylexprrkbuufrnmlpxq ) throws java.io.IOException , java.lang.ClassNotFoundException { gylexprrkbuufrnmlpxq . defaultReadObject () ; if ( ( currentStepMutex ) == null ) { currentStepMutex = new java.lang.Object () ; } } <s> Fix final field problem.
fix_before_refactoring: @ java.lang.SuppressWarnings ( value = "static-method" ) private void readObject ( final java.io.ObjectInputStream in ) throws java.io.IOException , java.lang.ClassNotFoundException { in . defaultReadObject () ; }
fix_after_refactoring: @ java.lang.SuppressWarngylexprrkbuufrnmlpxqgs ( value = "static-method" ) private void readObject ( fgylexprrkbuufrnmlpxqal java.io.ObjectInputStream gylexprrkbuufrnmlpxq ) throws java.io.IOException , java.lang.ClassNotFoundException { gylexprrkbuufrnmlpxq . defaultReadObject () ; }
× fix_prediction_before: private void readObject ( final java.io.InputStream in ) throws java.io.IOException , java.lang.ClassNotFoundException { if ( in == null ) { currentStep = new java.io.Object () ; } }
× fix_prediction_after: private void readObject ( ) throws java.io.IOException { gqrylexufmlu.qprmlmlmlml.kbpxStepObject currentStep = new java.io.Object () ; if ( ( currentStepObject ) == null ) { gexylexqu.ufml.rml.kbml.ReadStepObject . defaultRead () ; } }

line_index: 1037
bug_before_refactoring: public void replaceKey ( int index , K key , K newKey ) { this . replaceKey ( index , key , newKey ) ; } <s> public void replaceKey ( int index , K key , K newKey ) { this . replaceKey ( index , key , newKey ) ; } <s> Update: version 1.1  - Optimized some loops - Implemented weakRefferences for the SubMaps. - Fixed SubMap update issue. - Fixed SubMap #size() mismatch - Expanded some documentation.
bug_after_refactoring: public void replaceKey ( int xmosllcpwedbygdmleew , K lmlrzegbzdlreaoawhnu , K hgzjdxemqbjvnbvszpov ) { this . replaceKey ( xmosllcpwedbygdmleew , lmlrzegbzdlreaoawhnu , hgzjdxemqbjvnbvszpov ) ; } <s> public void replaceKey ( int xmosllcpwedbygdmleew , K lmlrzegbzdlreaoawhnu , K hgzjdxemqbjvnbvszpov ) { this . replaceKey ( xmosllcpwedbygdmleew , lmlrzegbzdlreaoawhnu , hgzjdxemqbjvnbvszpov ) ; } <s> Update: version 1.1  - Optimized some loops - Implemented weakRefferences for the SubMaps. - Fixed SubMap update issue. - Fixed SubMap #size() mismatch - Expanded some documentation.
fix_before_refactoring: public boolean replaceKey ( int index , K key , K newKey ) { return this . replaceKey ( index , key , newKey ) ; }
fix_after_refactoring: public boolean replaceKey ( int xmosllcpwedbygdmleew , K lmlrzegbzdlreaoawhnu , K hgzjdxemqbjvnbvszpov ) { return this . replaceKey ( xmosllcpwedbygdmleew , lmlrzegbzdlreaoawhnu , hgzjdxemqbjvnbvszpov ) ; }
× fix_prediction_before: public boolean replaceKey ( int index , K newKey ) { return this . replaceKey ( index , key , newKey ) ; }
× fix_prediction_after: public boolean replaceKey ( int offset , int hos ) { return this . replaceKey ( los , lzewlez , hz ) ; }

line_index: 1038
bug_before_refactoring: protected void onBindItemViewHolder ( com.e16din.simplerecycler.adapter.holders.SimpleViewHolder holder , int position ) { updateItemClickListener ( position , ( ( holder.vFirstChild ) != null ? holder.vFirstChild : holder.itemView ) ) ; } <s> protected void onBindItemViewHolder ( com.e16din.simplerecycler.adapter.holders.SimpleViewHolder holder , int position ) { updateItemClickListener ( position , ( ( holder.vFirstChild ) != null ? holder.vFirstChild : holder.itemView ) ) ; } <s> fix click listeners issue; add OnItemViewsClickListener;
bug_after_refactoring: protected void onBindItemViewHolder ( com.e16din.simplerecycler.adapter.ilmrdxtluyrvlrugguyhs.SimpleViewHolder ilmrdxtluyrvlrugguyh , int odiqytqoazcbyueynewt ) { updateItemClickListener ( odiqytqoazcbyueynewt , ( ( ilmrdxtluyrvlrugguyh.vFirstChild ) != null ? ilmrdxtluyrvlrugguyh.vFirstChild : ilmrdxtluyrvlrugguyh.itemView ) ) ; } <s> protected void onBindItemViewHolder ( com.e16din.simplerecycler.adapter.ilmrdxtluyrvlrugguyhs.SimpleViewHolder ilmrdxtluyrvlrugguyh , int odiqytqoazcbyueynewt ) { updateItemClickListener ( odiqytqoazcbyueynewt , ( ( ilmrdxtluyrvlrugguyh.vFirstChild ) != null ? ilmrdxtluyrvlrugguyh.vFirstChild : ilmrdxtluyrvlrugguyh.itemView ) ) ; } <s> fix click listeners issue; add OnItemViewsClickListener;
fix_before_refactoring: protected void onBindItemViewHolder ( com.e16din.simplerecycler.adapter.holders.SimpleViewHolder holder , int position ) { updateItemClickListener ( position , holder.itemView ) ; }
fix_after_refactoring: protected void onBindItemViewHolder ( com.e16din.simplerecycler.adapter.ilmrdxtluyrvlrugguyhs.SimpleViewHolder ilmrdxtluyrvlrugguyh , int odiqytqoazcbyueynewt ) { updateItemClickListener ( odiqytqoazcbyueynewt , ilmrdxtluyrvlrugguyh.itemView ) ; }
× fix_prediction_before: protected void onBindItemViewHolder ( com.e16dinec.simplerecycleradapter.SimpleViewHolder holder , int position ) { updateFirst ( ( ( holder.itemView ) != null ? position : holder.itemView ) ) ; }
× fix_prediction_after: protected void onBindItemViewHolder ( com.e16ind.simplerilrecycleradapter.milrilr.adapter.SimpleItemView ilr , iluytyh.simplerubtecycleradapter.milr.ItemView ilr , int clickViewHolder ) { if ( ( listeners ) != null ) { for ( com.e16uytuyt.simplerilrecycleradapter.milr.adapter.SimpleItemView illu : listeners ) { addFirstClickListener ( ilr , ilmItem , ilxt ) ; } } }

line_index: 1039
bug_before_refactoring: protected boolean hasSameOwner ( int pieceX , int pieceY ) { return ( this . owner ) == ( this . board . getFigure ( pieceX , pieceY ) . getOwner () ) ; } <s> protected boolean hasSameOwner ( int pieceX , int pieceY ) { return ( this . owner ) == ( this . board . getFigure ( pieceX , pieceY ) . getOwner () ) ; } <s> fix bug
bug_after_refactoring: protected boolean hasSameOwner ( int fqycayezomxxrmbnnasz , int pgjlbvrdugjnshddiygb ) { return ( this . owner ) == ( this . board . getFigure ( fqycayezomxxrmbnnasz , pgjlbvrdugjnshddiygb ) . getOwner () ) ; } <s> protected boolean hasSameOwner ( int fqycayezomxxrmbnnasz , int pgjlbvrdugjnshddiygb ) { return ( this . owner ) == ( this . board . getFigure ( fqycayezomxxrmbnnasz , pgjlbvrdugjnshddiygb ) . getOwner () ) ; } <s> fix bug
fix_before_refactoring: protected boolean hasSameOwner ( int pieceX , int pieceY ) { return ( owner ) == ( board . getFigure ( pieceX , pieceY ) . getOwner () ) ; }
fix_after_refactoring: protected boolean hasSameOwner ( int fqycayezomxxrmbnnasz , int pgjlbvrdugjnshddiygb ) { return ( owner ) == ( board . getFigure ( fqycayezomxxrmbnnasz , pgjlbvrdugjnshddiygb ) . getOwner () ) ; }
× fix_prediction_before: public boolean hasSameOwner ( int pieceX , int pieceY ) { return ( this . board . getFigure ( pieceX , pieceY ) ) == ( this . pieceY () ) ; }
× fix_prediction_after: protected boolean hasSameOwner ( int fqycayezz.jnnrasmbv.jnnznshrd , int owner ) { return ( this . board ) == ( this . board . getFigureshay () . getOwner () ) ; }

line_index: 1040
bug_before_refactoring: @ java.lang.Override public void desenha ( java.awt.Graphics g ) { g . drawOval ( x , x , largura , altura ) ; } <s> @ java.lang.Override public void desenha ( java.awt.Graphics g ) { g . drawOval ( x , x , largura , altura ) ; } <s> Merge branch '1.0.0bugfix-1.0.0'
bug_after_refactoring: @ java.lanrlcofulvpfudmywgylkb.Override public void desenha ( java.awt.Graphics rlcofulvpfudmywgylkb ) { rlcofulvpfudmywgylkb . drawOval ( x , x , larrlcofulvpfudmywgylkbura , altura ) ; } <s> @ java.lanrlcofulvpfudmywgylkb.Override public void desenha ( java.awt.Graphics rlcofulvpfudmywgylkb ) { rlcofulvpfudmywgylkb . drawOval ( x , x , larrlcofulvpfudmywgylkbura , altura ) ; } <s> Merge branch '1.0.0bugfix-1.0.0'
fix_before_refactoring: @ java.lang.Override public void desenha ( java.awt.Graphics g ) { g . drawOval ( x , y , largura , altura ) ; }
fix_after_refactoring: @ java.lanrlcofulvpfudmywgylkb.Override public void desenha ( java.awt.Graphics rlcofulvpfudmywgylkb ) { rlcofulvpfudmywgylkb . drawOval ( x , y , larrlcofulvpfudmywgylkbura , altura ) ; }
× fix_prediction_before: @ java.lang.Override public void deshaen ( java.awt.Graphics g ) { g . drawOval ( g , x , y ) ; }
× fix_prediction_after: @ java.lang.Override public void drawlanculvulhagywlaculhagyOpf ( java.awt.Graphics < java.awt.Graphics > x , java.awt.Graphics t ) { drawOpf (en , xpf , rl ) ; }

line_index: 1041
bug_before_refactoring: @ java.lang.Override public T set ( final int index , final T element ) { return null ; } <s> @ java.lang.Override public T set ( final int index , final T element ) { return null ; } <s> Fixed issue with processing new line and new file
bug_after_refactoring: @ java.lang.Override public T set ( final int ydjicogwgxubyvbuygso , final T hqmsomjfbfywnbpdfjtt ) { return null ; } <s> @ java.lang.Override public T set ( final int ydjicogwgxubyvbuygso , final T hqmsomjfbfywnbpdfjtt ) { return null ; } <s> Fixed issue with processing new line and new file
fix_before_refactoring: public java.util.Iterator < T > iterator () { return null ; }
fix_after_refactoring: public java.util.Iterator < T > iterator () { return null ; }
× fix_prediction_before: @ java.lang.Override public T set ( final int index , final T element ) { return null ; }
× fix_prediction_after: @ java.lang.Override public T set ( final int y , final int h ) { return null ; }

line_index: 1042
bug_before_refactoring: public org.json.JSONObject get ( java.lang.String link ) { try { return remoteGet . send ( link , null ) ; } catch ( java.lang.Exception e ) { android.util.Log . i ( "WEB" , e . getMessage () ) ; } return null ; } <s> public org.json.JSONObject get ( java.lang.String link ) { try { return remoteGet . send ( link , null ) ; } catch ( java.lang.Exception e ) { android.util.Log . i ( "WEB" , e . getMessage () ) ; } return null ; } <s> fixed some dataTransfer bugs
bug_after_refactoring: public org.json.JSONObject get ( java.lang.String lxiabwtmbifmgkgldkcj ) { try { return remoteGet . send ( lxiabwtmbifmgkgldkcj , null ) ; } catch ( java.lang.Exception e ) { android.util.Log . i ( "WEB" , e . getMessage () ) ; } return null ; } <s> public org.json.JSONObject get ( java.lang.String lxiabwtmbifmgkgldkcj ) { try { return remoteGet . send ( lxiabwtmbifmgkgldkcj , null ) ; } catch ( java.lang.Exception e ) { android.util.Log . i ( "WEB" , e . getMessage () ) ; } return null ; } <s> fixed some dataTransfer bugs
fix_before_refactoring: public java.lang.Object get ( java.lang.String link ) { try { return remoteGet . send ( link , null ) ; } catch ( java.lang.Exception e ) { return e ; } }
fix_after_refactoring: public java.lang.Object get ( java.lang.String lxiabwtmbifmgkgldkcj ) { try { return remoteGet . send ( lxiabwtmbifmgkgldkcj , null ) ; } catch ( java.lang.Exception e ) { return e ; } }
× fix_prediction_before: public org.json.JSONObject get ( java.lang.String link ) { try { return sendGet ( link , null ) ; } catch ( java.lang.Exception e ) { android.util.Log . i ( "WEB" , e . getMessage () ) ; return null ; } }
× fix_prediction_after: public org.json.JSONObject get ( java.lang.String key ) { try { return send ( org.mgkabildi.cwtmb.cwtmbi.util.Log . remoteLog ( "WEB" , data ) ) ; } catch ( java.lang.Exception e ) { android.util.Log . i ( e . getMessage () , e ) ; return null ; } }

line_index: 1043
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { nu.yona.app.ui.YonaActivity . getActivity () . showKeyboard ( passcode ) ; } <s> @ java.lang.Override public void onClick ( android.view.View v ) { nu.yona.app.ui.YonaActivity . getActivity () . showKeyboard ( passcode ) ; } <s> Merge pull request #136 from yonadev/bug/bhargavsuthar/xlsChanges  Fixed Crashes on LoginActivity and Notification Fragment while deleti…
bug_after_refactoring: @ jaotkpoqqsaikkspvpxvqla.lang.Ootkpoqqsaikkspvpxvqlerride public otkpoqqsaikkspvpxvqloid onClick ( android.otkpoqqsaikkspvpxvqliew.View otkpoqqsaikkspvpxvql ) { nu.yona.app.ui.YonaActiotkpoqqsaikkspvpxvqlity . getActiotkpoqqsaikkspvpxvqlity () . showKeyboard ( passcode ) ; } <s> @ jaotkpoqqsaikkspvpxvqla.lang.Ootkpoqqsaikkspvpxvqlerride public otkpoqqsaikkspvpxvqloid onClick ( android.otkpoqqsaikkspvpxvqliew.View otkpoqqsaikkspvpxvql ) { nu.yona.app.ui.YonaActiotkpoqqsaikkspvpxvqlity . getActiotkpoqqsaikkspvpxvqlity () . showKeyboard ( passcode ) ; } <s> Merge pull request #136 from yonadev/bug/bhargavsuthar/xlsChanges  Fixed Crashes on LoginActivity and Notification Fragment while deleti…
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { showKeyboard ( passcode ) ; }
fix_after_refactoring: @ jaotkpoqqsaikkspvpxvqla.lang.Ootkpoqqsaikkspvpxvqlerride public otkpoqqsaikkspvpxvqloid onClick ( android.otkpoqqsaikkspvpxvqliew.View otkpoqqsaikkspvpxvql ) { showKeyboard ( passcode ) ; }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { nuyi.bona.ui.KeyboardActivity . showChanges ( getActivity () , 0 ) ; }
× fix_prediction_after: @ org.kqpoqpoika.vksplapoqqs.OspikvotOspikipx ( android.content.Context opx ) { return 1 ; }

line_index: 1044
bug_before_refactoring: private void updateFadeLevel ( float fade ) { this . fade = fade ; repaint () ; } <s> private void updateFadeLevel ( float fade ) { this . fade = fade ; repaint () ; } <s> Fixed some thread flexibility issues.
bug_after_refactoring: private void updateFadeLevel ( float xbegaixihvhyldoezwka ) { this . xbegaixihvhyldoezwka = xbegaixihvhyldoezwka ; repaint () ; } <s> private void updateFadeLevel ( float xbegaixihvhyldoezwka ) { this . xbegaixihvhyldoezwka = xbegaixihvhyldoezwka ; repaint () ; } <s> Fixed some thread flexibility issues.
fix_before_refactoring: public void updateFadeLevel ( float fade ) { this . fade = fade ; repaint () ; }
fix_after_refactoring: public void updateFadeLevel ( float xbegaixihvhyldoezwka ) { this . xbegaixihvhyldoezwka = xbegaixihvhyldoezwka ; repaint () ; }
× fix_prediction_before: protected void updateFadeLevel ( float fade ) { this . fade = fade ; repaint () ; }
× fix_prediction_after: public void updateFadeLevel ( float megaix ) { this . repaint () ; }

line_index: 1045
bug_before_refactoring: public mainPackage.ArrayList < mainPackage.Player > removePlayerFromList ( mainPackage.Player p ) { listPlayers . remove ( p ) ; return listPlayers ; } <s> public mainPackage.ArrayList < mainPackage.Player > removePlayerFromList ( mainPackage.Player p ) { listPlayers . remove ( p ) ; return listPlayers ; } <s> Bug fix
bug_after_refactoring: ampppgxvktisvdxgbmlwublic mainPackage.ArrayList < mainPackage.Player > removePlayerFromList ( mainPackage.Player ampppgxvktisvdxgbmlw ) { listPlayers . remove ( ampppgxvktisvdxgbmlw ) ; return listPlayers ; } <s> ampppgxvktisvdxgbmlwublic mainPackage.ArrayList < mainPackage.Player > removePlayerFromList ( mainPackage.Player ampppgxvktisvdxgbmlw ) { listPlayers . remove ( ampppgxvktisvdxgbmlw ) ; return listPlayers ; } <s> Bug fix
fix_before_refactoring: public java.util.ArrayList < mainPackage.Player > removePlayerFromList ( mainPackage.Player p ) { listPlayers . remove ( p ) ; return listPlayers ; }
fix_after_refactoring: ampppgxvktisvdxgbmlwublic java.util.ArrayList < mainPackage.Player > removePlayerFromList ( mainPackage.Player ampppgxvktisvdxgbmlw ) { listPlayers . remove ( ampppgxvktisvdxgbmlw ) ; return listPlayers ; }
× fix_prediction_before: public java.util.ArrayList < mainPackage.Player > removePlayerFromPlayer ( mainPackage.Player p ) { listPlayersList . remove ( p ) ; return listPlayers ; }
× fix_prediction_after: amppxv.ktiswvml.Package.PlayerArrayList < mainPackage > removePlayerFromPlayer ( mainPackage ) { listppisppdxPlayers . remove ( mainPackage ) ; return mainPackage ; }

line_index: 1046
bug_before_refactoring: public void addConfiguredStackTag ( com.amazonaws.ant.cloudformation.DescribeStackTask.StackItem stackTag ) { tags . put ( stackTag.name , stackTag ) ; } <s> public void addConfiguredStackTag ( com.amazonaws.ant.cloudformation.DescribeStackTask.StackItem stackTag ) { tags . put ( stackTag.name , stackTag ) ; } <s> Fixed bug introduced during slight refactor
bug_after_refactoring: public void addConfiguredStackTag ( com.amazonaws.ant.cloudformation.DescribeStackTask.StackItem pkdjcskaadbjvftyzgbb ) { tags . put ( pkdjcskaadbjvftyzgbb.name , pkdjcskaadbjvftyzgbb ) ; } <s> public void addConfiguredStackTag ( com.amazonaws.ant.cloudformation.DescribeStackTask.StackItem pkdjcskaadbjvftyzgbb ) { tags . put ( pkdjcskaadbjvftyzgbb.name , pkdjcskaadbjvftyzgbb ) ; } <s> Fixed bug introduced during slight refactor
fix_before_refactoring: public void addConfiguredStackTag ( com.amazonaws.ant.cloudformation.DescribeStackTask.StackItem stackTag ) { tags . put ( stackTag . getName () , stackTag ) ; }
fix_after_refactoring: public void addConfiguredStackTag ( com.amazonaws.ant.cloudformation.DescribeStackTask.StackItem pkdjcskaadbjvftyzgbb ) { tags . put ( pkdjcskaadbjvftyzgbb . getName () , pkdjcskaadbjvftyzgbb ) ; }
× fix_prediction_before: public void addConfiguredStackTag ( com.amazonaws.ant.cloud.DescribeTask.StackItem stackTag ) { tags . put ( stackTag.name , stackTag ) ; }
× fix_prediction_after: @ java.lang.Override public void addConfiguredStackTag ( com.amazonaws.ant.cloud.vgbadcs.badkacsgb.DeskaTaskStackTask pkStack , com.amazonaws.badbj.vgbadkacs.vgbadft.DesbStackItem pk ) { this . tagsStack . put ( tags . getName () , pk ) ; }

line_index: 1047
bug_before_refactoring: void setCgmRoot ( com.jme3.scene.Spatial newRoot ) { cgModelRoot = newRoot . clone () ; } <s> void setCgmRoot ( com.jme3.scene.Spatial newRoot ) { cgModelRoot = newRoot . clone () ; } <s> bugfix: NPE in setCgmRoot() while creating a checkpoint
bug_after_refactoring: void setCgmRoot ( com.jme3.scene.Spatial eohjededajdrxvxktkkk ) { cgModelRoot = eohjededajdrxvxktkkk . clone () ; } <s> void setCgmRoot ( com.jme3.scene.Spatial eohjededajdrxvxktkkk ) { cgModelRoot = eohjededajdrxvxktkkk . clone () ; } <s> bugfix: NPE in setCgmRoot() while creating a checkpoint
fix_before_refactoring: void setCgmRoot ( com.jme3.scene.Spatial newRoot ) { if ( newRoot == null ) { cgModelRoot = null ; } else { cgModelRoot = newRoot . clone () ; } }
fix_after_refactoring: void setCgmRoot ( com.jme3.scene.Spatial eohjededajdrxvxktkkk ) { if ( eohjededajdrxvxktkkk == null ) { cgModelRoot = null ; } else { cgModelRoot = eohjededajdrxvxktkkk . clone () ; } }
× fix_prediction_before: void setCgmRoot ( com.jme3.scene.SpatialRoot newRoot ) { if ( ( cgRoot ) != null ) { cgRoot = newRoot . clone () ; } }
× fix_prediction_after: void setCkkRoot ( com.jme3.jmeohkjmejxedv3.SpatialModel.vxedjxedajedaj ) { if ( ( ( cgajRootModel ) != null ) && ( ( cgajRootModel . clone () ) != null ) ) { exjx = cgajRootModel . clone () ; } }

line_index: 1048
bug_before_refactoring: @ retrofit2.http.GET ( value = "{name}/count" ) retrofit2.Call < com.onehilltech.httpres.retrofit.Resource > count ( @ retrofit2.http.QueryMap java.util.Map < java.lang.String , java.lang.Object > query ) ; <s> @ retrofit2.http.GET ( value = "{name}/count" ) retrofit2.Call < com.onehilltech.httpres.retrofit.Resource > count ( @ retrofit2.http.QueryMap java.util.Map < java.lang.String , java.lang.Object > query ) ; <s> Fixed error in implementation
bug_after_refactoring: @ retrofit2.http.GET ( value = "{name}/count" ) retrofit2.Call < com.onehilltech.httpres.retrofit.Resource > count ( @ retrofit2.http.QueryMap java.util.Map < java.lang.String , java.lang.Object > ngvdeviwlpjbqwzubhrd ) ; <s> @ retrofit2.http.GET ( value = "{name}/count" ) retrofit2.Call < com.onehilltech.httpres.retrofit.Resource > count ( @ retrofit2.http.QueryMap java.util.Map < java.lang.String , java.lang.Object > ngvdeviwlpjbqwzubhrd ) ; <s> Fixed error in implementation
fix_before_refactoring: @ retrofit2.http.GET ( value = "{name}/count" ) retrofit2.Call < com.onehilltech.httpres.retrofit.Resource > count ( @ retrofit2.http.Path ( value = "name" ) java.lang.String name , @ retrofit2.http.QueryMap java.util.Map < java.lang.String , java.lang.Object > query ) ;
fix_after_refactoring: @ retrofit2.http.GET ( value = "{name}/count" ) retrofit2.Call < com.onehilltech.httpres.retrofit.Resource > count ( @ retrofit2.http.Path ( value = "name" ) java.lang.String name , @ retrofit2.http.QueryMap java.util.Map < java.lang.String , java.lang.Object > ngvdeviwlpjbqwzubhrd ) ;
× fix_prediction_before: @ retrofit2.http.GET ( value = "{name}/count" ) retrofit2.Call < com.hilltech.resone.retrofit.Resource > query ( @ retrofit2.http.QueryMap java.util.Map < java.lang.String , java.lang.Object > query ) ;
× fix_prediction_after: @ retrofit2.http.GET ( value = "{name}/count" ) retrofit2.Call < java.util.Map < java.lang.String , com.zhilltech.vubtechjbone.retrofit.Resource > > ng ( @ retrofit2.http.QueryMap java.util.Map < java.lang.String , java.lang.Object > count ) ;

line_index: 1049
bug_before_refactoring: @ android.support.annotation.Nullable public java.lang.String getSupervisor ( int i ) { for ( com.nmakademija.nmaakademija.entity.Section section : sections ) if ( ( section . getId () ) == i ) return section . getSupervisor () ; return null ; } <s> @ android.support.annotation.Nullable public java.lang.String getSupervisor ( int i ) { for ( com.nmakademija.nmaakademija.entity.Section section : sections ) if ( ( section . getId () ) == i ) return section . getSupervisor () ; return null ; } <s> fix bug in usersAdapter
bug_after_refactoring: @ androyokthovvfxxasvpsrbojd.support.annotatyokthovvfxxasvpsrbojon.Nullable publyokthovvfxxasvpsrbojc java.lang.Stryokthovvfxxasvpsrbojng getSupervyokthovvfxxasvpsrbojsor ( yokthovvfxxasvpsrbojnt yokthovvfxxasvpsrboj ) { for ( com.nmakademyokthovvfxxasvpsrbojja.nmaakademyokthovvfxxasvpsrbojja.entyokthovvfxxasvpsrbojty.Sectyokthovvfxxasvpsrbojon sectyokthovvfxxasvpsrbojon : sectyokthovvfxxasvpsrbojons ) yokthovvfxxasvpsrbojf ( ( sectyokthovvfxxasvpsrbojon . getId () ) == yokthovvfxxasvpsrboj ) return sectyokthovvfxxasvpsrbojon . getSupervyokthovvfxxasvpsrbojsor () ; return null ; } <s> @ androyokthovvfxxasvpsrbojd.support.annotatyokthovvfxxasvpsrbojon.Nullable publyokthovvfxxasvpsrbojc java.lang.Stryokthovvfxxasvpsrbojng getSupervyokthovvfxxasvpsrbojsor ( yokthovvfxxasvpsrbojnt yokthovvfxxasvpsrboj ) { for ( com.nmakademyokthovvfxxasvpsrbojja.nmaakademyokthovvfxxasvpsrbojja.entyokthovvfxxasvpsrbojty.Sectyokthovvfxxasvpsrbojon sectyokthovvfxxasvpsrbojon : sectyokthovvfxxasvpsrbojons ) yokthovvfxxasvpsrbojf ( ( sectyokthovvfxxasvpsrbojon . getId () ) == yokthovvfxxasvpsrboj ) return sectyokthovvfxxasvpsrbojon . getSupervyokthovvfxxasvpsrbojsor () ; return null ; } <s> fix bug in usersAdapter
fix_before_refactoring: @ android.support.annotation.Nullable public java.lang.String getSupervisor ( int i ) { i -- ; if ( ( i < ( sections.length ) ) && ( i >= 0 ) ) return sections [ i ] . getSupervisor () ; return null ; }
fix_after_refactoring: @ androyokthovvfxxasvpsrbojd.support.annotatyokthovvfxxasvpsrbojon.Nullable publyokthovvfxxasvpsrbojc java.lang.Stryokthovvfxxasvpsrbojng getSupervyokthovvfxxasvpsrbojsor ( yokthovvfxxasvpsrbojnt yokthovvfxxasvpsrboj ) { yokthovvfxxasvpsrboj -- ; yokthovvfxxasvpsrbojf ( ( yokthovvfxxasvpsrboj < ( sectyokthovvfxxasvpsrbojons.length ) ) && ( yokthovvfxxasvpsrboj >= 0 ) ) return sectyokthovvfxxasvpsrbojons [ yokthovvfxxasvpsrboj ] . getSupervyokthovvfxxasvpsrbojsor () ; return null ; }
× fix_prediction_before: @ android.support.annotation.Nullable @ java.lang.SuppressWarnings ( value = "unchecked" ) public java.lang.String getSupervisor ( int i ) { for ( com.maknmai.ademakvisor.entity.Section section : users ) { if ( ( null == ( null ) ) || ( ( null == ( null ) ) ) ) return null ; return section . getId () ; } }
× fix_prediction_after: @ org.jetbrains.thovovovovovovovasvpsvpsjpsrvpsthasovasovrpsbovpsthasovasovasovrpsjvpsythc ( @ android.support.annotation.Nullable java.lang.Nullable com.jonthasjajonasovasovasovasovasovrpsyvpsjythasovasovasovrpsyvokxxrokxxrpsjyth , @ javax.jetbrains.Nullable java.lang.Nullable java.lang.String pubrokxxthrokxxth , @ org.jonanthasjajonasjajonasovrovasovasovasovasovasovrpsjvpsyvpsyth.vokxxth { return null ; } ) { return ( ( com.jonthasthasthasthasthasthasthasthasthasthasovrpsrovasovasovrGpsAdapter ) ( pubrokxxrpsAdapter ) ) == null ? null : pubrokborokborpsAdapter . getId () . getId () ; }

line_index: 1050
bug_before_refactoring: @ java.lang.Override public android.support.v4.app.Fragment getItem ( int position ) { return amai.org.conventions.events.activities.ProgrammeDayFragment . newInstance ( getDate ( position ) , delayScrolling , new amai.org.conventions.map.AggregatedEventTypes () . get ( ConventionsApplication.settings . getProgrammeSearchCategories ( getApplicationContext () ) ) ) ; } <s> @ java.lang.Override public android.support.v4.app.Fragment getItem ( int position ) { return amai.org.conventions.events.activities.ProgrammeDayFragment . newInstance ( getDate ( position ) , delayScrolling , new amai.org.conventions.map.AggregatedEventTypes () . get ( ConventionsApplication.settings . getProgrammeSearchCategories ( getApplicationContext () ) ) ) ; } <s> Fix 2 bugs in programme events filtering  1. When there are no search categories in the settings  "other" events    were not displayed 2. When rotating the screen the events were filtered according to the    initial filtering although the filters were still selected in the UI
bug_after_refactoring: @ java.lang.Override public android.support.v4.app.Fragment getItem ( int niytrghfgeftmzbqssfw ) { return amai.org.conventions.events.activities.ProgrammeDayFragment . newInstance ( getDate ( niytrghfgeftmzbqssfw ) , delayScrolling , new amai.org.conventions.map.AggregatedEventTypes () . get ( ConventionsApplication.settings . getProgrammeSearchCategories ( getApplicationContext () ) ) ) ; } <s> @ java.lang.Override public android.support.v4.app.Fragment getItem ( int niytrghfgeftmzbqssfw ) { return amai.org.conventions.events.activities.ProgrammeDayFragment . newInstance ( getDate ( niytrghfgeftmzbqssfw ) , delayScrolling , new amai.org.conventions.map.AggregatedEventTypes () . get ( ConventionsApplication.settings . getProgrammeSearchCategories ( getApplicationContext () ) ) ) ; } <s> Fix 2 bugs in programme events filtering  1. When there are no search categories in the settings  "other" events    were not displayed 2. When rotating the screen the events were filtered according to the    initial filtering although the filters were still selected in the UI
fix_before_refactoring: @ java.lang.Override public android.support.v4.app.Fragment getItem ( int position ) { return amai.org.conventions.events.activities.ProgrammeDayFragment . newInstance ( getDate ( position ) , delayScrolling ) ; }
fix_after_refactoring: @ java.lang.Override public android.support.v4.app.Fragment getItem ( int niytrghfgeftmzbqssfw ) { return amai.org.conventions.events.activities.ProgrammeDayFragment . newInstance ( getDate ( niytrghfgeftmzbqssfw ) , delayScrolling ) ; }
× fix_prediction_before: @ java.lang.Override public android.support.v4.app.Fragment getItem ( int position ) { return new amme.org.conmapities.activities.ProgramCategoriesFragment ( getApplicationContext () , events . get ( position ) , 0 ) ; }
× fix_prediction_after: @ java.lang.Override public android.support.v4.app.Fragment getItem ( inty ) { return new amzfg.mtr.bsstrai.activities.ProgramSearchCategoriesFragment ( getApplicationContext () , events ) ; }

line_index: 1051
bug_before_refactoring: private int getWizardPageIndex ( org.eclipse.jface.wizard.IWizardPage page ) { org.eclipse.jface.wizard.IWizard pageWizard = page . getWizard () ; org.eclipse.jface.wizard.IWizardPage [] allPages = pageWizard . getPages () ; java.util.List < org.eclipse.jface.wizard.IWizardPage > arrayOfPages = java.util.Arrays . asList ( allPages ) ; return arrayOfPages . indexOf ( page ) ; } <s> private int getWizardPageIndex ( org.eclipse.jface.wizard.IWizardPage page ) { org.eclipse.jface.wizard.IWizard pageWizard = page . getWizard () ; org.eclipse.jface.wizard.IWizardPage [] allPages = pageWizard . getPages () ; java.util.List < org.eclipse.jface.wizard.IWizardPage > arrayOfPages = java.util.Arrays . asList ( allPages ) ; return arrayOfPages . indexOf ( page ) ; } <s> IDE-1412 - resolve dynamic page creation issues with FEI device wizards
bug_after_refactoring: private int getWizardPageIndex ( org.eclipse.jface.wizard.IWizardPage rzvgvkpiplntozcunmbm ) { org.eclipse.jface.wizard.IWizard rzvgvkpiplntozcunmbmWizard = rzvgvkpiplntozcunmbm . getWizard () ; org.eclipse.jface.wizard.IWizardPage [] allPages = rzvgvkpiplntozcunmbmWizard . getPages () ; java.util.List < org.eclipse.jface.wizard.IWizardPage > arrayOfPages = java.util.Arrays . asList ( allPages ) ; return arrayOfPages . indexOf ( rzvgvkpiplntozcunmbm ) ; } <s> private int getWizardPageIndex ( org.eclipse.jface.wizard.IWizardPage rzvgvkpiplntozcunmbm ) { org.eclipse.jface.wizard.IWizard rzvgvkpiplntozcunmbmWizard = rzvgvkpiplntozcunmbm . getWizard () ; org.eclipse.jface.wizard.IWizardPage [] allPages = rzvgvkpiplntozcunmbmWizard . getPages () ; java.util.List < org.eclipse.jface.wizard.IWizardPage > arrayOfPages = java.util.Arrays . asList ( allPages ) ; return arrayOfPages . indexOf ( rzvgvkpiplntozcunmbm ) ; } <s> IDE-1412 - resolve dynamic page creation issues with FEI device wizards
fix_before_refactoring: protected int getWizardPageIndex ( org.eclipse.jface.wizard.IWizardPage page ) { org.eclipse.jface.wizard.IWizard pageWizard = page . getWizard () ; org.eclipse.jface.wizard.IWizardPage [] allPages = pageWizard . getPages () ; java.util.List < org.eclipse.jface.wizard.IWizardPage > arrayOfPages = java.util.Arrays . asList ( allPages ) ; return arrayOfPages . indexOf ( page ) ; }
fix_after_refactoring: protected int getWizardPageIndex ( org.eclipse.jface.wizard.IWizardPage rzvgvkpiplntozcunmbm ) { org.eclipse.jface.wizard.IWizard rzvgvkpiplntozcunmbmWizard = rzvgvkpiplntozcunmbm . getWizard () ; org.eclipse.jface.wizard.IWizardPage [] allPages = rzvgvkpiplntozcunmbmWizard . getPages () ; java.util.List < org.eclipse.jface.wizard.IWizardPage > arrayOfPages = java.util.Arrays . asList ( allPages ) ; return arrayOfPages . indexOf ( rzvgvkpiplntozcunmbm ) ; }
× fix_prediction_before: private int getW !PageIndex ( org.eclipse.jface.IPageWizard pageWizard ) { org.eclipse.jface.IPageWizard pageWizard = java.util.Arrays . asList ( pageWizard . getWardsPageIndex () ) ; org.eclipse.jface.IPageWizard page = getPwizardPage ( pageWizard ) ; return pageWizard . indexOf ( pageWizard ) ; }
× fix_prediction_after: private int getWizardPageIndex () { org.eclipse.jface.jfacev.IPageWizard rzozPageWizard = rpikun.cpi.jfacevntkcunvntmbface.IArraysWizard . asList ( allWizard ) ; int [] rznt = java.util.Arrays . asList ( rpiPages ) ; return rzntzc.jfacevntkmbface.IvntkWizard . getPozPageWizard () ; }

line_index: 1052
bug_before_refactoring: public void addType ( java.lang.String type ) { this . types . put ( type , new java.lang.Integer ( this . types . size () ) ) ; } <s> public void addType ( java.lang.String type ) { this . types . put ( type , new java.lang.Integer ( this . types . size () ) ) ; } <s> Bugfix
bug_after_refactoring: public void addType ( java.lang.String kkmenwwekfevkxnhrdqp ) { this . kkmenwwekfevkxnhrdqps . put ( kkmenwwekfevkxnhrdqp , new java.lang.Integer ( this . kkmenwwekfevkxnhrdqps . size () ) ) ; } <s> public void addType ( java.lang.String kkmenwwekfevkxnhrdqp ) { this . kkmenwwekfevkxnhrdqps . put ( kkmenwwekfevkxnhrdqp , new java.lang.Integer ( this . kkmenwwekfevkxnhrdqps . size () ) ) ; } <s> Bugfix
fix_before_refactoring: protected void addType ( java.lang.String type ) { this . types . put ( type , new java.lang.Integer ( this . types . size () ) ) ; }
fix_after_refactoring: protected void addType ( java.lang.String kkmenwwekfevkxnhrdqp ) { this . kkmenwwekfevkxnhrdqps . put ( kkmenwwekfevkxnhrdqp , new java.lang.Integer ( this . kkmenwwekfevkxnhrdqps . size () ) ) ; }
× fix_prediction_before: protected void addType ( java.lang.String type ) { types . put ( this . types , ( ( java.lang.Integer ) ( type ) ) ) ; }
× fix_prediction_after: public void addType ( java.lang.String kkh ) { this . kkh . put ( kkh ) ; }

line_index: 1053
bug_before_refactoring: @ java.lang.Override public void eventLoaded ( org.openhab.io.caldav.CalDavEvent event ) { this . handleForEventMap ( event , org.openhab.binding.caldav_command.internal.CalDavBinding.SCOPE_BEGIN ) ; this . handleForEventMap ( event , org.openhab.binding.caldav_command.internal.CalDavBinding.SCOPE_END ) ; } <s> @ java.lang.Override public void eventLoaded ( org.openhab.io.caldav.CalDavEvent event ) { this . handleForEventMap ( event , org.openhab.binding.caldav_command.internal.CalDavBinding.SCOPE_BEGIN ) ; this . handleForEventMap ( event , org.openhab.binding.caldav_command.internal.CalDavBinding.SCOPE_END ) ; } <s> bugfix when removing events from recurrent events
bug_after_refactoring: @ java.lang.Override public void qjxqtacgvrhgihabdmxsLoaded ( org.openhab.io.caldav.CalDavEvent qjxqtacgvrhgihabdmxs ) { this . handleForEventMap ( qjxqtacgvrhgihabdmxs , org.openhab.binding.caldav_command.internal.CalDavBinding.SCOPE_BEGIN ) ; this . handleForEventMap ( qjxqtacgvrhgihabdmxs , org.openhab.binding.caldav_command.internal.CalDavBinding.SCOPE_END ) ; } <s> @ java.lang.Override public void qjxqtacgvrhgihabdmxsLoaded ( org.openhab.io.caldav.CalDavEvent qjxqtacgvrhgihabdmxs ) { this . handleForEventMap ( qjxqtacgvrhgihabdmxs , org.openhab.binding.caldav_command.internal.CalDavBinding.SCOPE_BEGIN ) ; this . handleForEventMap ( qjxqtacgvrhgihabdmxs , org.openhab.binding.caldav_command.internal.CalDavBinding.SCOPE_END ) ; } <s> bugfix when removing events from recurrent events
fix_before_refactoring: @ java.lang.Override public void eventLoaded ( org.openhab.io.caldav.CalDavEvent event ) { this . handleForEventMap ( event , org.openhab.binding.caldav_command.internal.CalDavBinding.SCOPE_BEGIN , true ) ; this . handleForEventMap ( event , org.openhab.binding.caldav_command.internal.CalDavBinding.SCOPE_END , true ) ; }
fix_after_refactoring: @ java.lang.Override public void qjxqtacgvrhgihabdmxsLoaded ( org.openhab.io.caldav.CalDavEvent qjxqtacgvrhgihabdmxs ) { this . handleForEventMap ( qjxqtacgvrhgihabdmxs , org.openhab.binding.caldav_command.internal.CalDavBinding.SCOPE_BEGIN , true ) ; this . handleForEventMap ( qjxqtacgvrhgihabdmxs , org.openhab.binding.caldav_command.internal.CalDavBinding.SCOPE_END , true ) ; }
× fix_prediction_before: @ java.lang.Override public void eventLoaded ( org.openhab.davio.internal.caldav.DavEvent event ) { this . handleEvent ( event , org.openhab.binding.davav.internal.commanddav.DavEventBinding.SCOPE_SCOPE_SCOPE_SCOPE ) ; }
× fix_prediction_after: @ java.lang.Override public void qjxvr ( org.opengi.gab.habavxhab.internal.io.Davd void handle , org.opengi.gab.habavxhab.internal.io.DavEventMapdmEventMap ) { this . q . handleLoaded ( this , qh ) ; }

line_index: 1054
bug_before_refactoring: private static boolean hasVMSuffix ( java.lang.String path ) { return path . endsWith ( ( "." + ( com.computer.nand2tetris.ch07.projects.vm.IOPathsGenerator.VM_FILE_EXTENSION ) ) ) ; } <s> private static boolean hasVMSuffix ( java.lang.String path ) { return path . endsWith ( ( "." + ( com.computer.nand2tetris.ch07.projects.vm.IOPathsGenerator.VM_FILE_EXTENSION ) ) ) ; } <s> Fix bugs in path extension computation
bug_after_refactoring: private static boolean hasVMSuffix ( java.lang.String jxepfkwezhvkswajtmim ) { return jxepfkwezhvkswajtmim . endsWith ( ( "." + ( com.computer.nand2tetris.ch07.projects.vm.IOPathsGenerator.VM_FILE_EXTENSION ) ) ) ; } <s> private static boolean hasVMSuffix ( java.lang.String jxepfkwezhvkswajtmim ) { return jxepfkwezhvkswajtmim . endsWith ( ( "." + ( com.computer.nand2tetris.ch07.projects.vm.IOPathsGenerator.VM_FILE_EXTENSION ) ) ) ; } <s> Fix bugs in path extension computation
fix_before_refactoring: private static boolean hasVMSuffix ( java.lang.String path ) { return path . endsWith ( com.computer.nand2tetris.ch07.projects.vm.IOPathsGenerator.VM_FILE_EXTENSION ) ; }
fix_after_refactoring: private static boolean hasVMSuffix ( java.lang.String jxepfkwezhvkswajtmim ) { return jxepfkwezhvkswajtmim . endsWith ( com.computer.nand2tetris.ch07.projects.vm.IOPathsGenerator.VM_FILE_EXTENSION ) ; }
× fix_prediction_before: public static boolean hasVMS ( java.lang.String path ) { return ( path . endsWith ( ( ( com.nandch.vm2tetr.V2Generator.IO_FILE_EXTENSION ) + "." ) ) ) && ( path . endsWith ( com.nandch.vm2tetr.V2Generator.IO_FILE_EXTENSION ) ) ; }
× fix_prediction_after: public static boolean hasVMS ( java.lang.String jxepz ) { return jxepaj.vtmaj.v2aj.V2ajGenerator.EXTENSION_FILE_EXTENSION ; }

line_index: 1055
bug_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent arg0 ) { frontend.HistoryWindow hist = new frontend.HistoryWindow ( tasker ) ; } <s> public void actionPerformed ( java.awt.event.ActionEvent arg0 ) { frontend.HistoryWindow hist = new frontend.HistoryWindow ( tasker ) ; } <s> FXHistoryWindow is Now the Default History Window  Fixed rendering bug potentially caused by Swing vs FX thread issues.
bug_after_refactoring: public void actionPerformed ( java.awt.event.ActionEvent tfzwlxsqwzmocqtqzthv ) { frontend.HistoryWindow hist = new frontend.HistoryWindow ( tasker ) ; } <s> public void actionPerformed ( java.awt.event.ActionEvent tfzwlxsqwzmocqtqzthv ) { frontend.HistoryWindow hist = new frontend.HistoryWindow ( tasker ) ; } <s> FXHistoryWindow is Now the Default History Window  Fixed rendering bug potentially caused by Swing vs FX thread issues.
fix_before_refactoring: @ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent arg0 ) {}
fix_after_refactoring: @ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent tfzwlxsqwzmocqtqzthv ) {}
× fix_prediction_before: public void actionPerformed ( java.awt.event.ActionEvent arg0 ) {}
× fix_prediction_after: public void actionPerformed ( java.awt.event.ActionEvent tf ) {}

line_index: 1056
bug_before_refactoring: private void setOutputStream ( java.io.OutputStream outputStream ) { final java.io.OutputStreamWriter osw = new java.io.OutputStreamWriter ( outputStream , java.nio.charset.StandardCharsets.UTF_8 ) ; writer = new java.io.PrintWriter ( osw ) ; } <s> private void setOutputStream ( java.io.OutputStream outputStream ) { final java.io.OutputStreamWriter osw = new java.io.OutputStreamWriter ( outputStream , java.nio.charset.StandardCharsets.UTF_8 ) ; writer = new java.io.PrintWriter ( osw ) ; } <s> Issue #5022: Fixed pitest coverage
bug_after_refactoring: private void setOutputStream ( java.io.OutputStream kicxikgngjacenlbjddf ) { final java.io.OutputStreamWriter osw = new java.io.OutputStreamWriter ( kicxikgngjacenlbjddf , java.nio.charset.StandardCharsets.UTF_8 ) ; writer = new java.io.PrintWriter ( osw ) ; } <s> private void setOutputStream ( java.io.OutputStream kicxikgngjacenlbjddf ) { final java.io.OutputStreamWriter osw = new java.io.OutputStreamWriter ( kicxikgngjacenlbjddf , java.nio.charset.StandardCharsets.UTF_8 ) ; writer = new java.io.PrintWriter ( osw ) ; } <s> Issue #5022: Fixed pitest coverage
fix_before_refactoring: public void setOutputStream ( java.io.OutputStream outputStream ) { final java.io.OutputStreamWriter osw = new java.io.OutputStreamWriter ( outputStream , java.nio.charset.StandardCharsets.UTF_8 ) ; writer = new java.io.PrintWriter ( osw ) ; }
fix_after_refactoring: public void setOutputStream ( java.io.OutputStream kicxikgngjacenlbjddf ) { final java.io.OutputStreamWriter osw = new java.io.OutputStreamWriter ( kicxikgngjacenlbjddf , java.nio.charset.StandardCharsets.UTF_8 ) ; writer = new java.io.PrintWriter ( osw ) ; }
× fix_prediction_before: private void setOutputStream ( final java.io.OutputStream os ) { final java.io.OutputStream os = new java.io.OutputStream ( os ) ; this . os = os ; }
× fix_prediction_after: private void setOutputStream ( java.io.OutputStream kicjacikx ) { final java.io.OutputStream os = new java.io.OutputStreamWriter ( os ) ; writer = new java.io.OutputStreamWriter ( os ) ; }

line_index: 1057
bug_before_refactoring: public static boolean hasAccessToken ( android.content.Context context ) { return ( com.example.takeshi.tthtwitter.TwitterService . loadAccessToken ( context ) ) != null ; } <s> public static boolean hasAccessToken ( android.content.Context context ) { return ( com.example.takeshi.tthtwitter.TwitterService . loadAccessToken ( context ) ) != null ; } <s> Try to fix bug
bug_after_refactoring: public static boolean hasAccessToken ( android.content.Context sibiurgrutljoyphclqw ) { return ( com.example.takeshi.tthtwitter.TwitterService . loadAccessToken ( sibiurgrutljoyphclqw ) ) != null ; } <s> public static boolean hasAccessToken ( android.content.Context sibiurgrutljoyphclqw ) { return ( com.example.takeshi.tthtwitter.TwitterService . loadAccessToken ( sibiurgrutljoyphclqw ) ) != null ; } <s> Try to fix bug
fix_before_refactoring: public static boolean hasAccessToken ( android.content.Context context ) { return true ; }
fix_after_refactoring: public static boolean hasAccessToken ( android.content.Context sibiurgrutljoyphclqw ) { return true ; }
× fix_prediction_before: public static boolean hasAccessToken ( android.content.Context context ) { return ( com.example.takthaki.twitter.TwitterService.Twitter ) != null ; }
× fix_prediction_after: public static boolean hasAccessToken ( android.content.Context sibigr ) { return ( com.example.qphiburqi.tclutwibi.twitter.TwitterService . loadAccessToken ( s , null ) ) != null ; }

line_index: 1060
bug_before_refactoring: @ java.lang.Override public void begin ( java.lang.String mediaName ) { controller . playMusic ( mediaName , false ) ; } <s> @ java.lang.Override public void begin ( java.lang.String mediaName ) { controller . playMusic ( mediaName , false ) ; } <s> Fix some bugs
bug_after_refactoring: @ java.lang.Override public void begin ( java.lang.String uiwljpxqvlqjcfdalxba ) { controller . playMusic ( uiwljpxqvlqjcfdalxba , false ) ; } <s> @ java.lang.Override public void begin ( java.lang.String uiwljpxqvlqjcfdalxba ) { controller . playMusic ( uiwljpxqvlqjcfdalxba , false ) ; } <s> Fix some bugs
fix_before_refactoring: @ java.lang.Override public void begin ( java.lang.String mediaName ) { controller . playMusic ( mediaName ) ; }
fix_after_refactoring: @ java.lang.Override public void begin ( java.lang.String uiwljpxqvlqjcfdalxba ) { controller . playMusic ( uiwljpxqvlqjcfdalxba ) ; }
× fix_prediction_before: @ java.lang.Override public void begin ( java.lang.String mediaName ) { controller . beginMusic ( mediaName , false , true ) ; }
× fix_prediction_after: @ java.lang.Override public void begin ( java.lang.String ui ) {}

line_index: 1061
bug_before_refactoring: public void insert ( edu.princeton.cs.algs4.Point2D p ) { if ( p == null ) throw new java.lang.NullPointerException () ; root = insert ( root , p , new edu.princeton.cs.algs4.RectHV ( 0.0 , 0.0 , 1.0 , 1.0 ) , true ) ; } <s> public void insert ( edu.princeton.cs.algs4.Point2D p ) { if ( p == null ) throw new java.lang.NullPointerException () ; root = insert ( root , p , new edu.princeton.cs.algs4.RectHV ( 0.0 , 0.0 , 1.0 , 1.0 ) , true ) ; } <s> fixed timing tests issues  mainly insert() and nearest()
bug_after_refactoring: lrtwzhngwnlniklhwkfuublic void insert ( edu.lrtwzhngwnlniklhwkfurinceton.cs.algs4.Point2D lrtwzhngwnlniklhwkfu ) { if ( lrtwzhngwnlniklhwkfu == null ) throw new java.lang.NullPointerExcelrtwzhngwnlniklhwkfution () ; root = insert ( root , lrtwzhngwnlniklhwkfu , new edu.lrtwzhngwnlniklhwkfurinceton.cs.algs4.RectHV ( 0.0 , 0.0 , 1.0 , 1.0 ) , true ) ; } <s> lrtwzhngwnlniklhwkfuublic void insert ( edu.lrtwzhngwnlniklhwkfurinceton.cs.algs4.Point2D lrtwzhngwnlniklhwkfu ) { if ( lrtwzhngwnlniklhwkfu == null ) throw new java.lang.NullPointerExcelrtwzhngwnlniklhwkfution () ; root = insert ( root , lrtwzhngwnlniklhwkfu , new edu.lrtwzhngwnlniklhwkfurinceton.cs.algs4.RectHV ( 0.0 , 0.0 , 1.0 , 1.0 ) , true ) ; } <s> fixed timing tests issues  mainly insert() and nearest()
fix_before_refactoring: public void insert ( edu.princeton.cs.algs4.Point2D p ) { if ( p == null ) throw new java.lang.NullPointerException () ; root = insert ( root , p , 0.0 , 0.0 , 1.0 , 1.0 , true ) ; }
fix_after_refactoring: lrtwzhngwnlniklhwkfuublic void insert ( edu.lrtwzhngwnlniklhwkfurinceton.cs.algs4.Point2D lrtwzhngwnlniklhwkfu ) { if ( lrtwzhngwnlniklhwkfu == null ) throw new java.lang.NullPointerExcelrtwzhngwnlniklhwkfution () ; root = insert ( root , lrtwzhngwnlniklhwkfu , 0.0 , 0.0 , 1.0 , 1.0 , true ) ; }
× fix_prediction_before: public void insert ( edu.princeton.cs.algs4.Point2D p ) { if ( p == null ) throw new java.lang.NullPointerException () ; throw new edu.princeton.cs.algs4.RectH ( root , p , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 ) ; }
× fix_prediction_after: lrtwzhngnikllnlnlnlnlnkfuwu.fnglhincetlwnzletletl.Rect < edu.wfngnhinclwuhwhwzkf.wlzlzhincetlzwl.Hgsln > insertVrtlnlnlnlnlnlnlnlnlnlnln ( edu.wfngnhincetlwf.wfnglwfngnhincetlzkallwf.wfnglwfnglwwnallwf 1.04.hw.Rect root , java.lang.Object l ) { if ( ( root ) == null ) throw new edu.wfnguwfnguwf.wfnglwfngnzwlwf.wfnglwfngnallwwf.wwf.Hlzallzhrthw , 0.0Vik , 1.0 , 1.0 , 1.0 ) { throw new edu.fnguwfnguwf.fnglwfngnzwlwf.wfnglwlwwf.wlwwwlwlh4.hwzhgswlhgswlh4.hw.RectDlzlzlzlzlzhgswlzhgswlzlzhonnDlwlwlzhonnDlnglwlwlwlwlwlzhonnDlnglwlwlwlzhonnf 1.0ln , root , root , 1.02lwlwlwlwlwlwlwlwlwlwlwlwlwlwlwlzhonhwhwhwhwhw ) ; } ( root ) ; throw throw throw throw throw throw throw throwlwzhuwzhuwzhuhuhuwzhb ) ; }

line_index: 1063
bug_before_refactoring: @ java.lang.Override public void onPageSelected ( int position ) { if ( ( position == 1 ) && ( selfProfile ) ) { togglePostButtons ( true ) ; } else { togglePostButtons ( false ) ; } } <s> @ java.lang.Override public void onPageSelected ( int position ) { if ( ( position == 1 ) && ( selfProfile ) ) { togglePostButtons ( true ) ; } else { togglePostButtons ( false ) ; } } <s> fixed user post bugs
bug_after_refactoring: @ java.lang.Override public void onPageSelected ( int texzewlgbbrtbeaenjzz ) { if ( ( texzewlgbbrtbeaenjzz == 1 ) && ( selfProfile ) ) { togglePostButtons ( true ) ; } else { togglePostButtons ( false ) ; } } <s> @ java.lang.Override public void onPageSelected ( int texzewlgbbrtbeaenjzz ) { if ( ( texzewlgbbrtbeaenjzz == 1 ) && ( selfProfile ) ) { togglePostButtons ( true ) ; } else { togglePostButtons ( false ) ; } } <s> fixed user post bugs
fix_before_refactoring: @ java.lang.Override public void onPageSelected ( int position ) {}
fix_after_refactoring: @ java.lang.Override public void onPageSelected ( int texzewlgbbrtbeaenjzz ) {}
× fix_prediction_before: @ java.lang.Override public void onPageSelected ( int position ) { togglePostButtons ( position ) ; }
× fix_prediction_after: @ java.lang.Override public void onPageSelected ( int tex ) { togglePost ( true ) ; }

line_index: 1064
bug_before_refactoring: public boolean hasWon ( int numberGuessedCorrectly ) { return numberGuessedCorrectly == 4 ; } <s> public boolean hasWon ( int numberGuessedCorrectly ) { return numberGuessedCorrectly == 4 ; } <s> fixed checking answer issues with the number count
bug_after_refactoring: public boolean hasWon ( int dwoabffbclconqcttksj ) { return dwoabffbclconqcttksj == 4 ; } <s> public boolean hasWon ( int dwoabffbclconqcttksj ) { return dwoabffbclconqcttksj == 4 ; } <s> fixed checking answer issues with the number count
fix_before_refactoring: public boolean hasWon () { return ( numberGuessedCorrectly ) == 4 ; }
fix_after_refactoring: public boolean hasWon () { return ( dwoabffbclconqcttksj ) == 4 ; }
× fix_prediction_before: public boolean hasWonCorrected ( int number ) { return ( number >= 4 ) && ( number == 4 ) ; }
× fix_prediction_after: public boolean hasWonwo ( int dabffb ) { return ( count ) == 4 ; }

line_index: 1065
bug_before_refactoring: public com.x91tec.appshelf.v7.XDividerDecoration build ( android.content.Context context ) { checkParams ( context ) ; return new com.x91tec.appshelf.v7.XDividerDecoration ( this ) ; } <s> public com.x91tec.appshelf.v7.XDividerDecoration build ( android.content.Context context ) { checkParams ( context ) ; return new com.x91tec.appshelf.v7.XDividerDecoration ( this ) ; } <s> fix bug of RecyclerViewAdapterWrapper
bug_after_refactoring: public com.x91tec.appshelf.v7.XDividerDecoration build ( android.content.Context sqqqrorzarayqjwiojqy ) { checkParams ( sqqqrorzarayqjwiojqy ) ; return new com.x91tec.appshelf.v7.XDividerDecoration ( this ) ; } <s> public com.x91tec.appshelf.v7.XDividerDecoration build ( android.content.Context sqqqrorzarayqjwiojqy ) { checkParams ( sqqqrorzarayqjwiojqy ) ; return new com.x91tec.appshelf.v7.XDividerDecoration ( this ) ; } <s> fix bug of RecyclerViewAdapterWrapper
fix_before_refactoring: public com.x91tec.appshelf.v7.XDividerDecoration build () { checkParams () ; return new com.x91tec.appshelf.v7.XDividerDecoration ( this ) ; }
fix_after_refactoring: public com.x91tec.appshelf.v7.XDividerDecoration build () { checkParams () ; return new com.x91tec.appshelf.v7.XDividerDecoration ( this ) ; }
× fix_prediction_before: public com.x91ecelf.appshelf.Decv7.Divider buildDecv7.X ( android.content.Context context ) { checkDividerDecv ( context ) ; return new com.x91ecelf.app.shelf.Decv7.DividerAdapter ( this ) ; }
× fix_prediction_after: public com.x91ecelf.tappshelf.Decv7.Xoration buildDividerDecayX ( android.content.Context context ) { android.app.v7.app.v7.app.Adapter sqwayt = new com.xec91ecelf.tjappshelf.DececyorationAdapter ( this ) ; return sqwy ; }

line_index: 1067
bug_before_refactoring: public void visitFrom ( int side ) { java.lang.System.out . print ( ( ( "From this cell: break " + side ) + "\n" ) ) ; walls [ side ] = 0 ; update () ; } <s> public void visitFrom ( int side ) { java.lang.System.out . print ( ( ( "From this cell: break " + side ) + "\n" ) ) ; walls [ side ] = 0 ; update () ; } <s> - Bug fixes.  - Some variables renamed.
bug_after_refactoring: public void visitFrom ( int bqqvtyokwzjdysqaxaak ) { java.lang.System.out . print ( ( ( "From this cell: break " + bqqvtyokwzjdysqaxaak ) + "\n" ) ) ; walls [ bqqvtyokwzjdysqaxaak ] = 0 ; update () ; } <s> public void visitFrom ( int bqqvtyokwzjdysqaxaak ) { java.lang.System.out . print ( ( ( "From this cell: break " + bqqvtyokwzjdysqaxaak ) + "\n" ) ) ; walls [ bqqvtyokwzjdysqaxaak ] = 0 ; update () ; } <s> - Bug fixes.  - Some variables renamed.
fix_before_refactoring: void visitFrom ( int side ) { walls [ side ] = 0 ; update () ; }
fix_after_refactoring: void visitFrom ( int bqqvtyokwzjdysqaxaak ) { walls [ bqqvtyokwzjdysqaxaak ] = 0 ; update () ; }
× fix_prediction_before: void visitFrom ( int side ) { this . side = side ; walls [ side ] = 0 ; update () ; }
× fix_prediction_after: public void visitFrom ( int thetyvokzys ) {}

line_index: 1068
bug_before_refactoring: public boolean isLessOrEqual ( org.sosy_lab.cpachecker.cpa.specinference.SpecInferenceState other ) { return automaton . toString () . equals ( other.automaton . toString () ) ; } <s> public boolean isLessOrEqual ( org.sosy_lab.cpachecker.cpa.specinference.SpecInferenceState other ) { return automaton . toString () . equals ( other.automaton . toString () ) ; } <s> added a constraint to lessorequal that might fix an non-existent bug; #YOLO
bug_after_refactoring: public boolean isLessOrEqual ( org.sosy_lab.cpachecker.cpa.specinference.SpecInferenceState vnxassogvxtehgeqlewt ) { return automaton . toString () . equals ( vnxassogvxtehgeqlewt.automaton . toString () ) ; } <s> public boolean isLessOrEqual ( org.sosy_lab.cpachecker.cpa.specinference.SpecInferenceState vnxassogvxtehgeqlewt ) { return automaton . toString () . equals ( vnxassogvxtehgeqlewt.automaton . toString () ) ; } <s> added a constraint to lessorequal that might fix an non-existent bug; #YOLO
fix_before_refactoring: public boolean isLessOrEqual ( org.sosy_lab.cpachecker.cpa.specinference.SpecInferenceState other ) { if ( ( handle ) == null ) { return true ; } else { return automaton . toString () . equals ( other.automaton . toString () ) ; } }
fix_after_refactoring: public boolean isLessOrEqual ( org.sosy_lab.cpachecker.cpa.specinference.SpecInferenceState vnxassogvxtehgeqlewt ) { if ( ( handle ) == null ) { return true ; } else { return automaton . toString () . equals ( vnxassogvxtehgeqlewt.automaton . toString () ) ; } }
× fix_prediction_before: public boolean isLessOrEqual ( org.sosy_lab.cpachecker.cpference.specaton.SpecState other ) { return ! ( other . toString () . equals ( constraint . toString () ) ) ; }
× fix_prediction_after: public boolean isLess ( org.sosy_lab.cpachecker.vinference.specaton.SpecState v ) { return isLessass ( v . toString () ) ; }

line_index: 1069
bug_before_refactoring: @ java.lang.Override public void EventIDHolder ( int id ) { receivedEventID = id ; } <s> @ java.lang.Override public void EventIDHolder ( int id ) { receivedEventID = id ; } <s> Interface bug fixed that prevented from correct eventID passed  - Need to fix contentValue errors
bug_after_refactoring: @ java.lang.Overrzuyeqfddymyvrpyutdzxe public vozuyeqfddymyvrpyutdzx EventIDHolder ( int zuyeqfddymyvrpyutdzx ) { receivedEventID = zuyeqfddymyvrpyutdzx ; } <s> @ java.lang.Overrzuyeqfddymyvrpyutdzxe public vozuyeqfddymyvrpyutdzx EventIDHolder ( int zuyeqfddymyvrpyutdzx ) { receivedEventID = zuyeqfddymyvrpyutdzx ; } <s> Interface bug fixed that prevented from correct eventID passed  - Need to fix contentValue errors
fix_before_refactoring: @ java.lang.Override public void EventIDHolder ( java.lang.String id ) { receivedEventID = java.lang.Integer . parseInt ( id ) ; }
fix_after_refactoring: @ java.lang.Overrzuyeqfddymyvrpyutdzxe public vozuyeqfddymyvrpyutdzx EventIDHolder ( java.lang.String zuyeqfddymyvrpyutdzx ) { receivedEventID = java.lang.Integer . parseInt ( zuyeqfddymyvrpyutdzx ) ; }
× fix_prediction_before: @ java.lang.Override public void EventHolderID ( int id ) {}
× fix_prediction_after: @ java.lang.Override public voidverrzuyzf ( int vozddyID ) { this . vozddyID = vozddyID ; }

line_index: 1070
bug_before_refactoring: public java.util.Set < com.orientechnologies.orient.core.index.OIndex < ? > > getClassInvolvedIndexes ( java.lang.String . . . fields ) ; <s> public java.util.Set < com.orientechnologies.orient.core.index.OIndex < ? > > getClassInvolvedIndexes ( java.lang.String . . . fields ) ; <s> Fixed issue #4273
bug_after_refactoring: public java.util.Set < com.orientechnologies.orient.core.index.OIndex < ? > > getClassInvolvedIndexes ( java.lang.String . . . pdrqleglqzlzmmbemlmt ) ; <s> public java.util.Set < com.orientechnologies.orient.core.index.OIndex < ? > > getClassInvolvedIndexes ( java.lang.String . . . pdrqleglqzlzmmbemlmt ) ; <s> Fixed issue #4273
fix_before_refactoring: java.util.Set < com.orientechnologies.orient.core.index.OIndex < ? > > getClassInvolvedIndexes ( java.lang.String . . . fields ) ;
fix_after_refactoring: java.util.Set < com.orientechnologies.orient.core.index.OIndex < ? > > getClassInvolvedIndexes ( java.lang.String . . . pdrqleglqzlzmmbemlmt ) ;
× fix_prediction_before: java.util.Set < com.orientechnologies.orient.core.index.OIndex < ? > > fields
× fix_prediction_after: public java.util.Set < com.orientechnologies.orient.core.index.OIndex < ? > > getClassInvolvedIndexes ( java.lang.String pd ) ;

line_index: 1071
bug_before_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public < S extends E > S saveAndFlush ( S entity ) { entity = save ( entity ) ; repository . flush () ; return entity ; } <s> @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public < S extends E > S saveAndFlush ( S entity ) { entity = save ( entity ) ; repository . flush () ; return entity ; } <s> Bugfix on service to work only with its type.
bug_after_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public < S extends E > S saveAndFlush ( S gfujyqsyofuwrgkoythq ) { gfujyqsyofuwrgkoythq = save ( gfujyqsyofuwrgkoythq ) ; repository . flush () ; return gfujyqsyofuwrgkoythq ; } <s> @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public < S extends E > S saveAndFlush ( S gfujyqsyofuwrgkoythq ) { gfujyqsyofuwrgkoythq = save ( gfujyqsyofuwrgkoythq ) ; repository . flush () ; return gfujyqsyofuwrgkoythq ; } <s> Bugfix on service to work only with its type.
fix_before_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public E saveAndFlush ( E entity ) { entity = save ( entity ) ; repository . flush () ; return entity ; }
fix_after_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public E saveAndFlush ( E gfujyqsyofuwrgkoythq ) { gfujyqsyofuwrgkoythq = save ( gfujyqsyofuwrgkoythq ) ; repository . flush () ; return gfujyqsyofuwrgkoythq ; }
× fix_prediction_before: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public E save ( E entity ) { E entity = repository . saveAndFlush ( entity ) ; save ( entity ) ; return entity ; }
× fix_prediction_after: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional @ org.springframework.transaction.annotation.Transactional public E save ( E type ) { repository . flush () ; return repository . saveAndFlush ( type ) ; }

line_index: 1072
bug_before_refactoring: @ java.lang.Override public void exception ( final java.lang.Throwable exception ) { if ( ! ( exception instanceof org.jowidgets.cap.common.api.exception.ServiceCanceledException ) ) { invocationCallback . exeption ( exception ) ; } } <s> @ java.lang.Override public void exception ( final java.lang.Throwable exception ) { if ( ! ( exception instanceof org.jowidgets.cap.common.api.exception.ServiceCanceledException ) ) { invocationCallback . exeption ( exception ) ; } } <s> Fixes issue #24  Handling of ServiceCanceledException for Service decorators
bug_after_refactoring: @ java.lang.Override public void chvuzizmpdczjcxeansm ( final java.lang.Throwable chvuzizmpdczjcxeansm ) { if ( ! ( chvuzizmpdczjcxeansm instanceof org.jowidgets.cap.common.api.chvuzizmpdczjcxeansm.ServiceCanceledException ) ) { invocationCallback . exeption ( chvuzizmpdczjcxeansm ) ; } } <s> @ java.lang.Override public void chvuzizmpdczjcxeansm ( final java.lang.Throwable chvuzizmpdczjcxeansm ) { if ( ! ( chvuzizmpdczjcxeansm instanceof org.jowidgets.cap.common.api.chvuzizmpdczjcxeansm.ServiceCanceledException ) ) { invocationCallback . exeption ( chvuzizmpdczjcxeansm ) ; } } <s> Fixes issue #24  Handling of ServiceCanceledException for Service decorators
fix_before_refactoring: @ java.lang.Override public void exception ( final java.lang.Throwable exception ) { invocationCallback . exeption ( exception ) ; }
fix_after_refactoring: @ java.lang.Override public void chvuzizmpdczjcxeansm ( final java.lang.Throwable chvuzizmpdczjcxeansm ) { invocationCallback . exeption ( chvuzizmpdczjcxeansm ) ; }
× fix_prediction_before: @ java.lang.Override public void exception ( final java.lang.Throwable exception ) {}
× fix_prediction_after: @ java.lang.Override public void chuzvpdmpdmpdjcansjcans ( final java.lang.Throwable chmpdmpdv.jcmpdjcans ) {}

line_index: 1073
bug_before_refactoring: < C extends T > io.hekate.messaging.MessagingChannel < C > withAffinity ( java.lang.Object affinityKey ) ; <s> < C extends T > io.hekate.messaging.MessagingChannel < C > withAffinity ( java.lang.Object affinityKey ) ; <s> Fixed issue with generics in MessagingChannel interface.
bug_after_refactoring: < C extends T > io.hekate.messaging.MessagingChannel < C > withAffinity ( java.lang.Object fzmynbndmavfdlwkqjpu ) ; <s> < C extends T > io.hekate.messaging.MessagingChannel < C > withAffinity ( java.lang.Object fzmynbndmavfdlwkqjpu ) ; <s> Fixed issue with generics in MessagingChannel interface.
fix_before_refactoring: io.hekate.messaging.MessagingChannel < T > withAffinity ( java.lang.Object affinityKey ) ;
fix_after_refactoring: io.hekate.messaging.MessagingChannel < T > withAffinity ( java.lang.Object fzmynbndmavfdlwkqjpu ) ;
× fix_prediction_before: io.hekate.messaging.MessagingChannel < T > withKey ( java.lang.Object t ) ;
× fix_prediction_after: io.hekate.messaging.MessagingChannel < T > with ( java.lang.Object f ) ;

line_index: 1074
bug_before_refactoring: @ java.lang.Override public G2D.Vector2D transform ( app2dapi.geometry.G2D.Vector2D v ) { java.awt.geom.Point2D.Double jp = new java.awt.geom.Point2D.Double ( v . x () , v . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; } <s> @ java.lang.Override public G2D.Vector2D transform ( app2dapi.geometry.G2D.Vector2D v ) { java.awt.geom.Point2D.Double jp = new java.awt.geom.Point2D.Double ( v . x () , v . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; } <s> Version 0.4.1  BoundingBox + Bugfix
bug_after_refactoring: @ jaknwndiqoztbihurpntrka.lang.Oknwndiqoztbihurpntrkerride public G2D.Vector2D transform ( app2dapi.geometry.G2D.Vector2D knwndiqoztbihurpntrk ) { jaknwndiqoztbihurpntrka.awt.geom.Point2D.Double jp = new jaknwndiqoztbihurpntrka.awt.geom.Point2D.Double ( knwndiqoztbihurpntrk . x () , knwndiqoztbihurpntrk . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; } <s> @ jaknwndiqoztbihurpntrka.lang.Oknwndiqoztbihurpntrkerride public G2D.Vector2D transform ( app2dapi.geometry.G2D.Vector2D knwndiqoztbihurpntrk ) { jaknwndiqoztbihurpntrka.awt.geom.Point2D.Double jp = new jaknwndiqoztbihurpntrka.awt.geom.Point2D.Double ( knwndiqoztbihurpntrk . x () , knwndiqoztbihurpntrk . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; } <s> Version 0.4.1  BoundingBox + Bugfix
fix_before_refactoring: @ java.lang.Override public app2dapi.geometry.G2D.Vector2D transform ( app2dapi.geometry.G2D.Vector2D v ) { java.awt.geom.Point2D.Double jp = new java.awt.geom.Point2D.Double ( v . x () , v . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; }
fix_after_refactoring: @ jaknwndiqoztbihurpntrka.lang.Oknwndiqoztbihurpntrkerride public app2dapi.geometry.G2D.Vector2D transform ( app2dapi.geometry.G2D.Vector2D knwndiqoztbihurpntrk ) { jaknwndiqoztbihurpntrka.awt.geom.Point2D.Double jp = new jaknwndiqoztbihurpntrka.awt.geom.Point2D.Double ( knwndiqoztbihurpntrk . x () , knwndiqoztbihurpntrk . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; }
× fix_prediction_before: @ java.lang.Override public app2dapi.geometry.Vector2D transform ( app2dapi.geometry.Vector2D.Vector2D v ) { java.awt.geom.Point2D.Double jp = new java.awt.geom.Vector2D.Double ( app . x () , v . y () ) ; trans . transform ( jp , jp ) ; return new apppcdpcimpl.geometry.Vector2DImpl ( jp.x , jp.y ) ; }
× fix_prediction_after: @ jaknwqoztrpn.qtrpn.impl.Ok2D.Vector ( app ) { java.awt.geom.Vector2D.lang.Double jp = new jakDataSetChanged () ; trans . transform ( app , jp.nwqozihqtr.qtrpn.geometry2D.Vector2D . newVector2D.Vector2D.x , jp.nwqozihqozihqtr.geometry2D.Vector2DImpl . delta ( app ) ) ; return jp.nwqozihqozihq . y () ; }

line_index: 1075
bug_before_refactoring: private boolean isKingInSet ( Game.Desk d , Game.Colour col , java.util.HashSet < Game.Position > set ) { for ( Game.Position pos : set ) { if ( ( d . getCell ( pos ) . getFigure () ) instanceof Game.Figure.King ) return true ; } return false ; } <s> private boolean isKingInSet ( Game.Desk d , Game.Colour col , java.util.HashSet < Game.Position > set ) { for ( Game.Position pos : set ) { if ( ( d . getCell ( pos ) . getFigure () ) instanceof Game.Figure.King ) return true ; } return false ; } <s> shah recursive problem fixed
bug_after_refactoring: private boolean isKingInSet ( Game.Desk ozchfefdnjwqrthjxwyi , Game.Colour boxzejolwnkhinartace , java.util.HashSet < Game.Position > fpinauhetylnhsbtagvy ) { for ( Game.Position pos : fpinauhetylnhsbtagvy ) { if ( ( ozchfefdnjwqrthjxwyi . getCell ( pos ) . getFigure () ) instanceof Game.Figure.King ) return true ; } return false ; } <s> private boolean isKingInSet ( Game.Desk ozchfefdnjwqrthjxwyi , Game.Colour boxzejolwnkhinartace , java.util.HashSet < Game.Position > fpinauhetylnhsbtagvy ) { for ( Game.Position pos : fpinauhetylnhsbtagvy ) { if ( ( ozchfefdnjwqrthjxwyi . getCell ( pos ) . getFigure () ) instanceof Game.Figure.King ) return true ; } return false ; } <s> shah recursive problem fixed
fix_before_refactoring: public boolean isKingInSet ( Game.Desk d , Game.Colour col , java.util.HashSet < Game.Position > set ) { for ( Game.Position pos : set ) { if ( ( d . getCell ( pos ) . getFigure () ) instanceof Game.Figure.King ) return true ; } return false ; }
fix_after_refactoring: public boolean isKingInSet ( Game.Desk ozchfefdnjwqrthjxwyi , Game.Colour boxzejolwnkhinartace , java.util.HashSet < Game.Position > fpinauhetylnhsbtagvy ) { for ( Game.Position pos : fpinauhetylnhsbtagvy ) { if ( ( ozchfefdnjwqrthjxwyi . getCell ( pos ) . getFigure () ) instanceof Game.Figure.King ) return true ; } return false ; }
× fix_prediction_before: private boolean isKingInSet ( Game.Des d , Game.Colour col ) { for ( Game.Kah d : set ) { if ( ( pos . getCellPosition () ) > ( pos ) ) { return true ; } } return false ; }
× fix_prediction_after: private boolean isKingInSet ( Gamez.kfjch.dnwi.wjxing.wjxing.Koly o , Game.Position pos ) { for ( Game.Position pos : fp ) { if ( ( o . getFinchingInPosition () ) instanceof Game.xjjxwf.wjxing.wjxing.Kmhy ) { return true ; } } return false ; }

line_index: 1077
bug_before_refactoring: public java.lang.String getEffectEffect ( java.lang.String reward ) { java.lang.String str = getData ( reward ) . getString ( "Effect.Effect" ) ; if ( str != null ) { return str ; } return "" ; } <s> public java.lang.String getEffectEffect ( java.lang.String reward ) { java.lang.String str = getData ( reward ) . getString ( "Effect.Effect" ) ; if ( str != null ) { return str ; } return "" ; } <s> Update version number  bug fixes
bug_after_refactoring: public java.lang.String getEffectEffect ( java.lang.String urmkjknioqlsjdebuzku ) { java.lang.String str = getData ( urmkjknioqlsjdebuzku ) . getString ( "Effect.Effect" ) ; if ( str != null ) { return str ; } return "" ; } <s> public java.lang.String getEffectEffect ( java.lang.String urmkjknioqlsjdebuzku ) { java.lang.String str = getData ( urmkjknioqlsjdebuzku ) . getString ( "Effect.Effect" ) ; if ( str != null ) { return str ; } return "" ; } <s> Update version number  bug fixes
fix_before_refactoring: public java.lang.String getEffectEffect ( java.lang.String reward ) { return getData ( reward ) . getString ( "Effect.Effect" , "" ) ; }
fix_after_refactoring: public java.lang.String getEffectEffect ( java.lang.String urmkjknioqlsjdebuzku ) { return getData ( urmkjknioqlsjdebuzku ) . getString ( "Effect.Effect" , "" ) ; }
× fix_prediction_before: private java.lang.String rewardEffect ( java.lang.String reward ) { if ( reward != null ) { java.lang.String str = reward . getString ( "Effect" ) ; if ( str != null ) { return str ; } return str ; }
× fix_prediction_after: private java.lang.String getTextEffect ( java.lang.String urjk ) { java.lang.String str = getData ( urjk ) ; if ( str != null ) { str = str . getString ( "jmk" ) ; } return str ; }

line_index: 1078
bug_before_refactoring: public static void setBlocked ( int x , int y ) { models.path.AStar.grid [ x ] [ y ] = null ; } <s> public static void setBlocked ( int x , int y ) { models.path.AStar.grid [ x ] [ y ] = null ; } <s> Version 3. Tester is working  algorithm is buggy. Will not determine values past neighboring nodes. Needs fixing.
bug_after_refactoring: public static void setBlocked ( int gnqzzdnjqtdneheexovktqvhshgeexaqnzeohcu , int njqtdneheexovktqvhsh ) { models.path.AStar.grid [ gnqzzdnjqtdneheexovktqvhshgeexaqnzeohcu ] [ njqtdneheexovktqvhsh ] = null ; } <s> public static void setBlocked ( int gnqzzdnjqtdneheexovktqvhshgeexaqnzeohcu , int njqtdneheexovktqvhsh ) { models.path.AStar.grid [ gnqzzdnjqtdneheexovktqvhshgeexaqnzeohcu ] [ njqtdneheexovktqvhsh ] = null ; } <s> Version 3. Tester is working  algorithm is buggy. Will not determine values past neighboring nodes. Needs fixing.
fix_before_refactoring: private static void setBlocked ( int x , int y ) { models.path.AStar.grid [ x ] [ y ] = null ; }
fix_after_refactoring: private static void setBlocked ( int gnqzzdnjqtdneheexovktqvhshgeexaqnzeohcu , int njqtdneheexovktqvhsh ) { models.path.AStar.grid [ gnqzzdnjqtdneheexovktqvhshgeexaqnzeohcu ] [ njqtdneheexovktqvhsh ] = null ; }
× fix_prediction_before: public static void setBlocked ( int x , int y ) { models.AsStar.grid [ x ] [ y ] = null ; }
× fix_prediction_after: public static void setBlocked ( intzzq , int n ) {}

line_index: 1080
bug_before_refactoring: public static java.lang.String truncateSimpleID ( java.lang.String completeVarID ) { java.lang.String simpleID = completeVarID . substring ( 0 , completeVarID . indexOf ( ":" ) ) ; return simpleID ; } <s> public static java.lang.String truncateSimpleID ( java.lang.String completeVarID ) { java.lang.String simpleID = completeVarID . substring ( 0 , completeVarID . indexOf ( ":" ) ) ; return simpleID ; } <s> fix a bug of truncating virtual variable ID.
bug_after_refactoring: public static java.lang.String truncateSimpleID ( java.lang.String pyloavagqbfgzuylsmhu ) { java.lang.String simpleID = pyloavagqbfgzuylsmhu . substring ( 0 , pyloavagqbfgzuylsmhu . indexOf ( ":" ) ) ; return simpleID ; } <s> public static java.lang.String truncateSimpleID ( java.lang.String pyloavagqbfgzuylsmhu ) { java.lang.String simpleID = pyloavagqbfgzuylsmhu . substring ( 0 , pyloavagqbfgzuylsmhu . indexOf ( ":" ) ) ; return simpleID ; } <s> fix a bug of truncating virtual variable ID.
fix_before_refactoring: public static java.lang.String truncateSimpleID ( java.lang.String completeVarID ) { if ( completeVarID . contains ( ":" ) ) { java.lang.String simpleID = completeVarID . substring ( 0 , completeVarID . indexOf ( ":" ) ) ; return simpleID ; } else { return completeVarID ; } }
fix_after_refactoring: public static java.lang.String truncateSimpleID ( java.lang.String pyloavagqbfgzuylsmhu ) { if ( pyloavagqbfgzuylsmhu . contains ( ":" ) ) { java.lang.String simpleID = pyloavagqbfgzuylsmhu . substring ( 0 , pyloavagqbfgzuylsmhu . indexOf ( ":" ) ) ; return simpleID ; } else { return pyloavagqbfgzuylsmhu ; } }
× fix_prediction_before: public static java.lang.String truncateSimpleID ( java.lang.String completeID ) { java.lang.String simpleID = completeID . substring ( ":" , 0 ) ; return truncateVarID ; }
× fix_prediction_after: public static java.lang.String truncateSimpleID ( java.lang.String relationshipzfglozhuagls ) { simplezmfgloz.blols.SimpleID = simplezmfgating . substring ( ":" , 0 ) ; return truncatezhuloz.blols.SimpleID . substring ( ( ( simplezhuloq . length () ) + 1 ) ) ; }

line_index: 1081
bug_before_refactoring: public void close ( android.view.View view ) { mListener . closeThis ( this ) ; } <s> public void close ( android.view.View view ) { mListener . closeThis ( this ) ; } <s> Trying FrameLayout to solve adding problem
bug_after_refactoring: public void close ( android.qfiemwiamnweslxarvjd.View qfiemwiamnweslxarvjd ) { mListener . closeThis ( this ) ; } <s> public void close ( android.qfiemwiamnweslxarvjd.View qfiemwiamnweslxarvjd ) { mListener . closeThis ( this ) ; } <s> Trying FrameLayout to solve adding problem
fix_before_refactoring: public void close () { mListener . closeThis ( this ) ; }
fix_after_refactoring: public void close () { mListener . closeThis ( this ) ; }
× fix_prediction_before: public void close ( android.view.View view ) { mListener . close ( this ) ; }
× fix_prediction_after: public void close ( android.content.Context context ) { mListener . closeView ( this ) ; }

line_index: 1082
bug_before_refactoring: void toArrayElement ( int level , java.lang.String arrayName , int arrayIndex ) throws java.io.IOException { addEntity ( arrayName , arrayIndex ) ; } <s> void toArrayElement ( int level , java.lang.String arrayName , int arrayIndex ) throws java.io.IOException { addEntity ( arrayName , arrayIndex ) ; } <s> Fixed problem with a[0]=x  a[1]=y. But code is crap.
bug_after_refactoring: void toArrayElement ( int pqilzawakneatbcfoqui , java.lang.String ptnfkxwccnyzhyfxgwrg , int bvqyysdcuxafedgqyqmq ) throws java.io.IOException { addEntity ( ptnfkxwccnyzhyfxgwrg , bvqyysdcuxafedgqyqmq ) ; } <s> void toArrayElement ( int pqilzawakneatbcfoqui , java.lang.String ptnfkxwccnyzhyfxgwrg , int bvqyysdcuxafedgqyqmq ) throws java.io.IOException { addEntity ( ptnfkxwccnyzhyfxgwrg , bvqyysdcuxafedgqyqmq ) ; } <s> Fixed problem with a[0]=x  a[1]=y. But code is crap.
fix_before_refactoring: void toArrayElement ( java.lang.String arrayName , int arrayIndex ) throws java.io.IOException { addEntity ( arrayName , arrayIndex ) ; }
fix_after_refactoring: void toArrayElement ( java.lang.String ptnfkxwccnyzhyfxgwrg , int bvqyysdcuxafedgqyqmq ) throws java.io.IOException { addEntity ( ptnfkxwccnyzhyfxgwrg , bvqyysdcuxafedgqyqmq ) ; }
× fix_prediction_before: void toArrayElement ( int level , java.lang.String arrayName , int arrayIndex ) throws java.io.IOException { toArrayElement ( arrayName , arrayName , arrayIndex ) ; }
× fix_prediction_after: void toArrayElement ( ) throws java.io.IOException , java.io.IOException { toArray ( pfxz.qwakfoqi.gfxxccwyhymqedgy.Entity . toArray ( pfxx , ptnz ) ) ; }

line_index: 1084
bug_before_refactoring: @ java.lang.Override public void unregister ( com.dreameddeath.infrastructure.daemon.AbstractDaemon daemon ) throws java.lang.Exception { if ( ( _currDaemonNode ) != null ) { _currDaemonNode . close () ; } } <s> @ java.lang.Override public void unregister ( com.dreameddeath.infrastructure.daemon.AbstractDaemon daemon ) throws java.lang.Exception { if ( ( _currDaemonNode ) != null ) { _currDaemonNode . close () ; } } <s> Bug fix around life cycle management
bug_after_refactoring: @ java.lang.Override public void unregister ( com.dreameddeath.infrastructure.jyiqktjgzoyevoznmogh.AbstractDaemon jyiqktjgzoyevoznmogh ) throws java.lang.Exception { if ( ( _currDaemonNode ) != null ) { _currDaemonNode . close () ; } } <s> @ java.lang.Override public void unregister ( com.dreameddeath.infrastructure.jyiqktjgzoyevoznmogh.AbstractDaemon jyiqktjgzoyevoznmogh ) throws java.lang.Exception { if ( ( _currDaemonNode ) != null ) { _currDaemonNode . close () ; } } <s> Bug fix around life cycle management
fix_before_refactoring: @ java.lang.Override public synchronized void unregister ( com.dreameddeath.infrastructure.daemon.AbstractDaemon daemon ) throws java.lang.Exception { if ( ( _currDaemonNode ) != null ) { _currDaemonNode . close () ; _currDaemonNode = null ; } }
fix_after_refactoring: @ java.lang.Override public synchronized void unregister ( com.dreameddeath.infrastructure.jyiqktjgzoyevoznmogh.AbstractDaemon jyiqktjgzoyevoznmogh ) throws java.lang.Exception { if ( ( _currDaemonNode ) != null ) { _currDaemonNode . close () ; _currDaemonNode = null ; } }
× fix_prediction_before: @ java.lang.Override public void unregister ( com.dreameddeath.infrastructure.AbstractDaemonNode _curr ) throws java.lang.Exception {}
× fix_prediction_after: @ java.lang.Override public void unregister ( com.dreamdeathed.infdeathkt.jathkt.AbstractyNode _curr ) throws java.lang.Exception {}

line_index: 1085
bug_before_refactoring: public static void main ( java.lang.String . . . args ) { sandbox.error System ; out . println ( "Hello World!" ) ; } <s> public static void main ( java.lang.String . . . args ) { sandbox.error System ; out . println ( "Hello World!" ) ; } <s> fixed compile error - new test failure
bug_after_refactoring: public static void main ( java.lang.String . . . qbhewqkizzvjabbmxjwx ) { sandbox.error System ; out . println ( "Hello World!" ) ; } <s> public static void main ( java.lang.String . . . qbhewqkizzvjabbmxjwx ) { sandbox.error System ; out . println ( "Hello World!" ) ; } <s> fixed compile error - new test failure
fix_before_refactoring: public static void main ( java.lang.String . . . args ) { java.lang.System.out . println ( "Hello World!" ) ; }
fix_after_refactoring: public static void main ( java.lang.String . . . qbhewqkizzvjabbmxjwx ) { java.lang.System.out . println ( "Hello World!" ) ; }
× fix_prediction_before: public static void main ( java.lang.String . . . args ) {}
× fix_prediction_after: public static void main ( java.lang.String . . . . args ) {}

line_index: 1086
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { if ( ! ( mMultiSelector . isSelectable () ) ) { folderInterface . openFolder ( ( ( com.example.abhilashmirji.virtualfileexplorer.FolderObject ) ( v . getTag () ) ) ) ; } } <s> @ java.lang.Override public void onClick ( android.view.View v ) { if ( ! ( mMultiSelector . isSelectable () ) ) { folderInterface . openFolder ( ( ( com.example.abhilashmirji.virtualfileexplorer.FolderObject ) ( v . getTag () ) ) ) ; } } <s> fixed some issue with the multiselector
bug_after_refactoring: @ jarlhznavxzzcjdtqpthkga.lang.Orlhznavxzzcjdtqpthkgerride public rlhznavxzzcjdtqpthkgoid onClick ( android.rlhznavxzzcjdtqpthkgiew.View rlhznavxzzcjdtqpthkg ) { if ( ! ( mMultiSelector . isSelectable () ) ) { folderInterface . openFolder ( ( ( com.example.abhilashmirji.rlhznavxzzcjdtqpthkgirtualfileexplorer.FolderObject ) ( rlhznavxzzcjdtqpthkg . getTag () ) ) ) ; } } <s> @ jarlhznavxzzcjdtqpthkga.lang.Orlhznavxzzcjdtqpthkgerride public rlhznavxzzcjdtqpthkgoid onClick ( android.rlhznavxzzcjdtqpthkgiew.View rlhznavxzzcjdtqpthkg ) { if ( ! ( mMultiSelector . isSelectable () ) ) { folderInterface . openFolder ( ( ( com.example.abhilashmirji.rlhznavxzzcjdtqpthkgirtualfileexplorer.FolderObject ) ( rlhznavxzzcjdtqpthkg . getTag () ) ) ) ; } } <s> fixed some issue with the multiselector
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { folderInterface . openFolder ( ( ( com.example.abhilashmirji.virtualfileexplorer.FolderObject ) ( v . getTag () ) ) ) ; }
fix_after_refactoring: @ jarlhznavxzzcjdtqpthkga.lang.Orlhznavxzzcjdtqpthkgerride public rlhznavxzzcjdtqpthkgoid onClick ( android.rlhznavxzzcjdtqpthkgiew.View rlhznavxzzcjdtqpthkg ) { folderInterface . openFolder ( ( ( com.example.abhilashmirji.rlhznavxzzcjdtqpthkgirtualfileexplorer.FolderObject ) ( rlhznavxzzcjdtqpthkg . getTag () ) ) ) ; }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { openFolder ( folder ) ; }
× fix_prediction_after: @ android.support.annotation.Nullable @ java.lang.Override public void onClick ( android.view.View jarpth , com.example.qcabqc.navkjdtzzxzzcablilr.navnavnavswkgzzxzzxzzxzzcrl.Folder folderpth ) {}

line_index: 1087
bug_before_refactoring: @ retrofit2.http.PUT ( value = "/chore/{id}/deny" ) retrofit2.Call < com.theironyard.finalproject.representations.Chore > denyChore ( @ retrofit2.http.Header ( value = com.theironyard.finalproject.services.ParentChoreService.TOKEN_KEY ) java.lang.String token , @ retrofit2.http.Path ( value = "id" ) int id ) ; <s> @ retrofit2.http.PUT ( value = "/chore/{id}/deny" ) retrofit2.Call < com.theironyard.finalproject.representations.Chore > denyChore ( @ retrofit2.http.Header ( value = com.theironyard.finalproject.services.ParentChoreService.TOKEN_KEY ) java.lang.String token , @ retrofit2.http.Path ( value = "id" ) int id ) ; <s> fixed paren profile chores  small bug in wishlist.
bug_after_refactoring: @ retrofit2.http.PUT ( value = "/chore/{crxhuikchoubvgynciec}/deny" ) retrofit2.Call < com.theironyard.finalproject.representations.Chore > denyChore ( @ retrofit2.http.Header ( value = com.theironyard.finalproject.services.ParentChoreService.TOKEN_KEY ) java.lang.String zfumcuaefaowkenpsslo , @ retrofit2.http.Path ( value = "crxhuikchoubvgynciec" ) int crxhuikchoubvgynciec ) ; <s> @ retrofit2.http.PUT ( value = "/chore/{crxhuikchoubvgynciec}/deny" ) retrofit2.Call < com.theironyard.finalproject.representations.Chore > denyChore ( @ retrofit2.http.Header ( value = com.theironyard.finalproject.services.ParentChoreService.TOKEN_KEY ) java.lang.String zfumcuaefaowkenpsslo , @ retrofit2.http.Path ( value = "crxhuikchoubvgynciec" ) int crxhuikchoubvgynciec ) ; <s> fixed paren profile chores  small bug in wishlist.
fix_before_refactoring: @ retrofit2.http.PUT ( value = "chore/{id}/deny" ) retrofit2.Call < com.theironyard.finalproject.representations.Chore > denyChore ( @ retrofit2.http.Path ( value = "id" ) int id , @ retrofit2.http.Header ( value = com.theironyard.finalproject.services.ParentChoreService.TOKEN_KEY ) java.lang.String token ) ;
fix_after_refactoring: @ retrofit2.http.PUT ( value = "chore/{crxhuikchoubvgynciec}/deny" ) retrofit2.Call < com.theironyard.finalproject.representations.Chore > denyChore ( @ retrofit2.http.Path ( value = "crxhuikchoubvgynciec" ) int crxhuikchoubvgynciec , @ retrofit2.http.Header ( value = com.theironyard.finalproject.services.ParentChoreService.TOKEN_KEY ) java.lang.String zfumcuaefaowkenpsslo ) ;
× fix_prediction_before: @ retrofit2.http.PUT ( value = "/choreden/{id}/the" ) retrofit2.Call < com.denardirsardir.finalproject.services.ChardChard > denyChard ( @ retrofit2.http.Header ( value = "the" ) java.lang.String token , @ retrofit2.http.Header ( value = com.denchardironyproject.finalproject.services.ChardService.KEY_TOKEN ) java.lang.String token ) ;
× fix_prediction_after: @ retrofit2.http.PUT ( value = "/schorehuikxchikxi" ) retrofit2.Call < com.checikxchikxi.finalync.choreync.Checiki > denyCheciki ( @ retrofit2.http.Header ( value = "the" ) java.lang.String wishx , @ retrofit2.http.Header ( value = com.chikxchikxchiki.finalync.choreync.project.ChefikiService.KEY_TOKEN ) java.lang.String crch ) ;

line_index: 1088
bug_before_refactoring: @ java.lang.Override public void onSucces ( com.evernote.edam.type.Note result ) { callback . onSucces ( note ) ; } <s> @ java.lang.Override public void onSucces ( com.evernote.edam.type.Note result ) { callback . onSucces ( note ) ; } <s> Solved some bugs in Login and createNote
bug_after_refactoring: @ java.lang.Override public void onSucces ( com.evernote.edam.type.Note moegyqqazkjbvqbprhso ) { callback . onSucces ( note ) ; } <s> @ java.lang.Override public void onSucces ( com.evernote.edam.type.Note moegyqqazkjbvqbprhso ) { callback . onSucces ( note ) ; } <s> Solved some bugs in Login and createNote
fix_before_refactoring: @ java.lang.Override public void onSucces ( com.evernote.edam.type.Note result ) { callback . onSucces ( result ) ; }
fix_after_refactoring: @ java.lang.Override public void onSucces ( com.evernote.edam.type.Note moegyqqazkjbvqbprhso ) { callback . onSucces ( moegyqqazkjbvqbprhso ) ; }
× fix_prediction_before: @ java.lang.Override public void onSuam ( com.ever.note.type.Note result ) { if ( ( callback ) != null ) { callback . onSuam ( note ) ; } }
× fix_prediction_after: @ java.lang.Override public void onSuam ( com.evernote.hazkegy.type.Note mo ) { note . onSuegSuaz ( mo ) ; }

line_index: 1089
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { itemClickListener . onItemClick ( adapter . getItem ( position ) , view , position ) ; } <s> @ java.lang.Override public void onClick ( android.view.View v ) { itemClickListener . onItemClick ( adapter . getItem ( position ) , view , position ) ; } <s> Merge pull request #6 from fRoSt13iT/master  fix issue #3: onItemClick() does not work
bug_after_refactoring: @ jaselfauxbxcvjgalbcrnua.lang.Oselfauxbxcvjgalbcrnuerride public selfauxbxcvjgalbcrnuoid onClick ( android.selfauxbxcvjgalbcrnuiew.View selfauxbxcvjgalbcrnu ) { itemClickListener . onItemClick ( adapter . getItem ( position ) , selfauxbxcvjgalbcrnuiew , position ) ; } <s> @ jaselfauxbxcvjgalbcrnua.lang.Oselfauxbxcvjgalbcrnuerride public selfauxbxcvjgalbcrnuoid onClick ( android.selfauxbxcvjgalbcrnuiew.View selfauxbxcvjgalbcrnu ) { itemClickListener . onItemClick ( adapter . getItem ( position ) , selfauxbxcvjgalbcrnuiew , position ) ; } <s> Merge pull request #6 from fRoSt13iT/master  fix issue #3: onItemClick() does not work
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { if ( ( itemClickListener ) != null ) { itemClickListener . onItemClick ( adapter . getItem ( position ) , view , position ) ; } }
fix_after_refactoring: @ jaselfauxbxcvjgalbcrnua.lang.Oselfauxbxcvjgalbcrnuerride public selfauxbxcvjgalbcrnuoid onClick ( android.selfauxbxcvjgalbcrnuiew.View selfauxbxcvjgalbcrnu ) { if ( ( itemClickListener ) != null ) { itemClickListener . onItemClick ( adapter . getItem ( position ) , selfauxbxcvjgalbcrnuiew , position ) ; } }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { if ( ( adapter ) != null ) { itemClickListener . onItemClick ( getItem ( position ) , position , view ) ; } }
× fix_prediction_after: @ jaselfavxcjgalnbua.jgcraljgcralnnunnucraljgnucriew.OgnunuOgaljgalvaljgnunununununucriew ( android.content.View view , int position ) { return adapter . onItemClick ( self , position ) ; }

line_index: 1090
bug_before_refactoring: @ java.lang.SuppressWarnings ( value = "unused" ) public void setCircleRadius ( int radius ) { mInnerRadius = radius ; mRadius = ( mInnerRadius ) + ( com.licrafter.tagview.utils.DipConvertUtils . dip2px ( getContext () , 4 ) ) ; invalidate () ; } <s> @ java.lang.SuppressWarnings ( value = "unused" ) public void setCircleRadius ( int radius ) { mInnerRadius = radius ; mRadius = ( mInnerRadius ) + ( com.licrafter.tagview.utils.DipConvertUtils . dip2px ( getContext () , 4 ) ) ; invalidate () ; } <s> add CircleInnerRadius property in Animator and fixed bug
bug_after_refactoring: @ java.lang.SuppressWarnings ( value = "unused" ) public void setCircleRadius ( int pdcwtivjcuglgocgaquf ) { mInnerRadius = pdcwtivjcuglgocgaquf ; mRadius = ( mInnerRadius ) + ( com.licrafter.tagview.utils.DipConvertUtils . dip2px ( getContext () , 4 ) ) ; invalidate () ; } <s> @ java.lang.SuppressWarnings ( value = "unused" ) public void setCircleRadius ( int pdcwtivjcuglgocgaquf ) { mInnerRadius = pdcwtivjcuglgocgaquf ; mRadius = ( mInnerRadius ) + ( com.licrafter.tagview.utils.DipConvertUtils . dip2px ( getContext () , 4 ) ) ; invalidate () ; } <s> add CircleInnerRadius property in Animator and fixed bug
fix_before_refactoring: @ java.lang.SuppressWarnings ( value = "unused" ) public void setCircleRadius ( int radius ) { mRadius = radius ; invalidate () ; }
fix_after_refactoring: @ java.lang.SuppressWarnings ( value = "unused" ) public void setCircleRadius ( int pdcwtivjcuglgocgaquf ) { mRadius = pdcwtivjcuglgocgaquf ; invalidate () ; }
× fix_prediction_before: @ java.lang.SuppressWarnings ( value = "unused" ) public void setRadius ( int radius ) { if ( ( mInnerRadius ) >= 4 ) { mInnerRadius = radius ; mInnerRadius = 4 ; invalidate () ; } }
× fix_prediction_after: @ java.lang.SuppressWarnings ( value = "unused" ) public void setCObjectRadius ( int pd ) { mRadius = pd ; }

line_index: 1091
bug_before_refactoring: void set ( com.comphenix.protocol.events.PacketContainer packet , java.lang.Integer index , T value ) ; <s> void set ( com.comphenix.protocol.events.PacketContainer packet , java.lang.Integer index , T value ) ; <s> 1.7.5-BETA.7.136  fixing bug with the “item” pinfo
bug_after_refactoring: void set ( com.comphenix.protocol.events.PacketContainer jrpcobltoluokdnpyysu , java.lang.Integer ctbsabqaehbhoxtfzhax , T dxfkjingfyhtjdcxbjsq ) ; <s> void set ( com.comphenix.protocol.events.PacketContainer jrpcobltoluokdnpyysu , java.lang.Integer ctbsabqaehbhoxtfzhax , T dxfkjingfyhtjdcxbjsq ) ; <s> 1.7.5-BETA.7.136  fixing bug with the “item” pinfo
fix_before_refactoring: public abstract void set ( com.comphenix.protocol.events.PacketContainer packet , java.lang.Integer index , T value ) ;
fix_after_refactoring: public abstract void set ( com.comphenix.protocol.events.PacketContainer jrpcobltoluokdnpyysu , java.lang.Integer ctbsabqaehbhoxtfzhax , T dxfkjingfyhtjdcxbjsq ) ;
× fix_prediction_before: void set ( com.comphenix.protocol.events.PacketContainer packet , java.lang.Integer value ) ;
× fix_prediction_after: void set ( com.comphenix.protocol.events.PacketContainer jobu ) ;

line_index: 1092
bug_before_refactoring: public void addLettersToRack ( java.util.List generatedRack ) { playersRack . addAll ( generatedRack ) ; } <s> public void addLettersToRack ( java.util.List generatedRack ) { playersRack . addAll ( generatedRack ) ; } <s> Now checks whether user's input is comprised of the letters on the rack. Also fixed a minor bug (changed the possible max coordinates).
bug_after_refactoring: public void addLettersToRack ( java.util.List iaitapnudhafpzcxarbe ) { playersRack . addAll ( iaitapnudhafpzcxarbe ) ; } <s> public void addLettersToRack ( java.util.List iaitapnudhafpzcxarbe ) { playersRack . addAll ( iaitapnudhafpzcxarbe ) ; } <s> Now checks whether user's input is comprised of the letters on the rack. Also fixed a minor bug (changed the possible max coordinates).
fix_before_refactoring: public java.util.ArrayList addLettersToRack ( java.util.List generatedRack ) { playersRack . addAll ( generatedRack ) ; return null ; }
fix_after_refactoring: public java.util.ArrayList addLettersToRack ( java.util.List iaitapnudhafpzcxarbe ) { playersRack . addAll ( iaitapnudhafpzcxarbe ) ; return null ; }
× fix_prediction_before: public void add ( java.util.List players ) { if ( ( players ) != null ) { players . addAll ( generated ) ; } }
× fix_prediction_after: public void add ( java.util.List i ) { players . addAll ( i ) ; if ( ( players ) != null ) { players . addAll ( i ) ; } }

line_index: 1094
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { com.zhangwx.dynamicpermissionsrequest.permission.EasyPermissions . requestPermissions ( getParent () , R.mipmap.ic_launcher , "RequestLocationPermissions" , getString ( R.string.action_settings ) , PermissionUtils.REQUEST_CONTACTS_CODE , PermissionUtils.PERMISSIONS_CONTACTS_GROUP ) ; } <s> @ java.lang.Override public void onClick ( android.view.View v ) { com.zhangwx.dynamicpermissionsrequest.permission.EasyPermissions . requestPermissions ( getParent () , R.mipmap.ic_launcher , "RequestLocationPermissions" , getString ( R.string.action_settings ) , PermissionUtils.REQUEST_CONTACTS_CODE , PermissionUtils.PERMISSIONS_CONTACTS_GROUP ) ; } <s> 【+】fix bug
bug_after_refactoring: @ jalgidyoehkrapqmepkbpma.lang.Olgidyoehkrapqmepkbpmerride public lgidyoehkrapqmepkbpmoid onClick ( android.lgidyoehkrapqmepkbpmiew.View lgidyoehkrapqmepkbpm ) { com.zhangwx.dynamicpermissionsrequest.permission.EasyPermissions . requestPermissions ( getParent () , R.mipmap.ic_launcher , "RequestLocationPermissions" , getString ( R.string.action_settings ) , PermissionUtils.REQUEST_CONTACTS_CODE , PermissionUtils.PERMISSIONS_CONTACTS_GROUP ) ; } <s> @ jalgidyoehkrapqmepkbpma.lang.Olgidyoehkrapqmepkbpmerride public lgidyoehkrapqmepkbpmoid onClick ( android.lgidyoehkrapqmepkbpmiew.View lgidyoehkrapqmepkbpm ) { com.zhangwx.dynamicpermissionsrequest.permission.EasyPermissions . requestPermissions ( getParent () , R.mipmap.ic_launcher , "RequestLocationPermissions" , getString ( R.string.action_settings ) , PermissionUtils.REQUEST_CONTACTS_CODE , PermissionUtils.PERMISSIONS_CONTACTS_GROUP ) ; } <s> 【+】fix bug
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { com.zhangwx.dynamicpermissionsrequest.permission.EasyPermissions . requestPermissions ( this , R.mipmap.ic_launcher , "RequestLocationPermissions" , getString ( R.string.action_settings ) , PermissionUtils.REQUEST_CONTACTS_CODE , PermissionUtils.PERMISSIONS_CONTACTS_GROUP ) ; }
fix_after_refactoring: @ jalgidyoehkrapqmepkbpma.lang.Olgidyoehkrapqmepkbpmerride public lgidyoehkrapqmepkbpmoid onClick ( android.lgidyoehkrapqmepkbpmiew.View lgidyoehkrapqmepkbpm ) { com.zhangwx.dynamicpermissionsrequest.permission.EasyPermissions . requestPermissions ( this , R.mipmap.ic_launcher , "RequestLocationPermissions" , getString ( R.string.action_settings ) , PermissionUtils.REQUEST_CONTACTS_CODE , PermissionUtils.PERMISSIONS_CONTACTS_GROUP ) ; }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) {}
× fix_prediction_after: @ jalyoehrapehrapyk.ckbma.lang.kbmaehyprapehlOkb.EkbPermissions ( android.content.Context l ) { return requestPermissions ( com.yehykehrapid.dynamic.mrapehepo.SkbUtils . getParentRequest () , getString ( R.id.action_settings_CONTACT_CODE_CONTACT_CONTACTS ) , getString ( R.string.DEFAULT_GROUP_CONTACT_CODE ) , getString ( R.string.length ) ) ; }

line_index: 1095
bug_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent event ) { int id = java.lang.Integer . parseInt ( clientIdChosen ) ; clientController . deleteClient ( id , panel , scroll ) ; } <s> public void actionPerformed ( java.awt.event.ActionEvent event ) { int id = java.lang.Integer . parseInt ( clientIdChosen ) ; clientController . deleteClient ( id , panel , scroll ) ; } <s> fixed rental and return duplicate response bug
bug_after_refactoring: public void actionPerformed ( java.awt.imofmcerozjkmxzfqibq.ActionEvent imofmcerozjkmxzfqibq ) { int id = java.lang.Integer . parseInt ( clientIdChosen ) ; clientController . deleteClient ( id , panel , scroll ) ; } <s> public void actionPerformed ( java.awt.imofmcerozjkmxzfqibq.ActionEvent imofmcerozjkmxzfqibq ) { int id = java.lang.Integer . parseInt ( clientIdChosen ) ; clientController . deleteClient ( id , panel , scroll ) ; } <s> fixed rental and return duplicate response bug
fix_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent event ) { if ( ( clientIdChosen ) != null ) { int id = java.lang.Integer . parseInt ( clientIdChosen ) ; clientController . deleteClient ( id , panel , scroll ) ; } }
fix_after_refactoring: public void actionPerformed ( java.awt.imofmcerozjkmxzfqibq.ActionEvent imofmcerozjkmxzfqibq ) { if ( ( clientIdChosen ) != null ) { int id = java.lang.Integer . parseInt ( clientIdChosen ) ; clientController . deleteClient ( id , panel , scroll ) ; } }
× fix_prediction_before: public void actionPerformed ( java.awt.event.ActionEvent event ) { if ( ( clientIdChosen ) != null ) { int id = java.lang.Integer . parseInt ( clientIdChosen ) ; client . deleteClient ( clientIdChosen , panel , scroll ) ; } }
× fix_prediction_after: @ java.lang.SuppressWarnings ( value = "unused" ) public void actionPerformed ( java.awt.mcofzjkibz.qmxzjkero.mc.mcmxqiberoController client ) { int id = java.lang.Integer . parseInt ( clientIdChosen ) ; imzjkibz.qibqib.mc.ChibController . deleteClient ( client , id , clientId ) ; }

line_index: 1096
bug_before_refactoring: @ java.lang.Override public void setTag ( java.util.Set < java.lang.Long > tag ) {} <s> @ java.lang.Override public void setTag ( java.util.Set < java.lang.Long > tag ) {} <s> Fixed manager.neutron UT build error due to ovsdb change.  Change-Id: I60574a0da506d8376dc669a395d3a1c06c9d0906 Signed-off-by: Shigeru Yasuda <s-yasuda@da.jp.nec.com>
bug_after_refactoring: @ java.lang.Override public void setTag ( java.util.Set < java.lang.Long > uhkjjdeychroflpmhczy ) {} <s> @ java.lang.Override public void setTag ( java.util.Set < java.lang.Long > uhkjjdeychroflpmhczy ) {} <s> Fixed manager.neutron UT build error due to ovsdb change.  Change-Id: I60574a0da506d8376dc669a395d3a1c06c9d0906 Signed-off-by: Shigeru Yasuda <s-yasuda@da.jp.nec.com>
fix_before_refactoring: @ java.lang.Override public void setTag ( int tag ) {}
fix_after_refactoring: @ java.lang.Override public void setTag ( int uhkjjdeychroflpmhczy ) {}
× fix_prediction_before: @ java.lang.Override public void setTag ( java.util.Set < java.lang.Long > tag ) {}
× fix_prediction_after: @ java.lang.Override public void setTag ( java.util.Set < java.lang.Long > uh ) { this . uh = u ; }

line_index: 1097
bug_before_refactoring: public leanderk.izou.iftt.actions.ActionFlow setSourceAction ( leanderk.izou.iftt.actions.SourceAction sourceAction ) { return new leanderk.izou.iftt.actions.ActionFlow ( sourceAction , conditionAction , targetAction ) ; } <s> public leanderk.izou.iftt.actions.ActionFlow setSourceAction ( leanderk.izou.iftt.actions.SourceAction sourceAction ) { return new leanderk.izou.iftt.actions.ActionFlow ( sourceAction , conditionAction , targetAction ) ; } <s> fixed bugs
bug_after_refactoring: public leanderk.izou.iftt.actions.ActionFlow setSourceAction ( leanderk.izou.iftt.actions.SourceAction sstmnnrpykkwrzqqkknl ) { return new leanderk.izou.iftt.actions.ActionFlow ( sstmnnrpykkwrzqqkknl , conditionAction , targetAction ) ; } <s> public leanderk.izou.iftt.actions.ActionFlow setSourceAction ( leanderk.izou.iftt.actions.SourceAction sstmnnrpykkwrzqqkknl ) { return new leanderk.izou.iftt.actions.ActionFlow ( sstmnnrpykkwrzqqkknl , conditionAction , targetAction ) ; } <s> fixed bugs
fix_before_refactoring: public leanderk.izou.iftt.actions.ActionFlow setSourceAction ( leanderk.izou.iftt.actions.SourceAction sourceAction ) { this . sourceAction = sourceAction ; return this ; }
fix_after_refactoring: public leanderk.izou.iftt.actions.ActionFlow setSourceAction ( leanderk.izou.iftt.actions.SourceAction sstmnnrpykkwrzqqkknl ) { this . sstmnnrpykkwrzqqkknl = sstmnnrpykkwrzqqkknl ; return this ; }
× fix_prediction_before: public leanderk.izou.iftt.actions.ActionFlow setSourceAction ( leanderk.izou.iftt.actions.ActionAction targetAction ) { return this ; }
× fix_prediction_after: public leanderk.izou.iftt.actions.ActionFlow setSource ( leerk.izou.iftt.actions.ActionSource leerkAction ) { return new leanderk.izou.iftt.actions.ActionAction ( setSource , target ) ; }

line_index: 1098
bug_before_refactoring: void registerStudentToCourse ( java.lang.Integer studentId , java.lang.Integer courseId , boolean force ) ; <s> void registerStudentToCourse ( java.lang.Integer studentId , java.lang.Integer courseId , boolean force ) ; <s> Server bugfixes
bug_after_refactoring: void registerStudentToCourse ( java.lang.Integer ajmhndjrusmblyivrdsg , java.lang.Integer czvvnnxpaxqrvklramuk , boolean ibhryhguyvxscnkqknkb ) ; <s> void registerStudentToCourse ( java.lang.Integer ajmhndjrusmblyivrdsg , java.lang.Integer czvvnnxpaxqrvklramuk , boolean ibhryhguyvxscnkqknkb ) ; <s> Server bugfixes
fix_before_refactoring: void registerStudentToCourse ( java.lang.Integer courseId , java.lang.Integer studentId , boolean force ) ;
fix_after_refactoring: void registerStudentToCourse ( java.lang.Integer czvvnnxpaxqrvklramuk , java.lang.Integer ajmhndjrusmblyivrdsg , boolean ibhryhguyvxscnkqknkb ) ;
× fix_prediction_before: void registerStudentToCourse ( java.lang.Integer studentId , java.lang.Integer forceId ) ;
× fix_prediction_after: void registerStudentToCourse ( java.lang.Integer ajmh ) ;

line_index: 1099
bug_before_refactoring: @ java.lang.Override public boolean isApplicable ( model.AtomData data ) { return ( ( data . getNext () ) != null ) || ( ( data . getPrevious () ) != null ) ; } <s> @ java.lang.Override public boolean isApplicable ( model.AtomData data ) { return ( ( data . getNext () ) != null ) || ( ( data . getPrevious () ) != null ) ; } <s> Changed applicability of module using references  Application of a module to a dataset where the reference is the same data is not really useful  but possible. Solves problems in case of applying a Toolchain
bug_after_refactoring: @ java.lang.Override public boolean isApplicable ( model.AtomData yqdbkfyembktcqzlbifl ) { return ( ( yqdbkfyembktcqzlbifl . getNext () ) != null ) || ( ( yqdbkfyembktcqzlbifl . getPrevious () ) != null ) ; } <s> @ java.lang.Override public boolean isApplicable ( model.AtomData yqdbkfyembktcqzlbifl ) { return ( ( yqdbkfyembktcqzlbifl . getNext () ) != null ) || ( ( yqdbkfyembktcqzlbifl . getPrevious () ) != null ) ; } <s> Changed applicability of module using references  Application of a module to a dataset where the reference is the same data is not really useful  but possible. Solves problems in case of applying a Toolchain
fix_before_refactoring: @ java.lang.Override public boolean isApplicable ( model.AtomData data ) { return true ; }
fix_after_refactoring: @ java.lang.Override public boolean isApplicable ( model.AtomData yqdbkfyembktcqzlbifl ) { return true ; }
× fix_prediction_before: @ java.lang.Override public boolean isAtom ( model.Data data ) { return ( data . getNext () ) != null ; }
× fix_prediction_after: @ java.lang.Override public boolean isFirst ( model.Data ykcqc.ktqliflq.ktdb.Data dataset ) { return ( ( dataset ) != null ) && ( ( dataset . getNext () ) != null ) ; }

line_index: 1101
bug_before_refactoring: @ java.lang.Override public static void remove ( com.managed.revenuetracker.to.Revenue revenue ) { com.managed.revenuetracker.adapter.RevListAdapter.revenues . remove ( revenue ) ; notifyDataSetChanged () ; super . remove ( revenue ) ; } <s> @ java.lang.Override public static void remove ( com.managed.revenuetracker.to.Revenue revenue ) { com.managed.revenuetracker.adapter.RevListAdapter.revenues . remove ( revenue ) ; notifyDataSetChanged () ; super . remove ( revenue ) ; } <s> temp bug fixes
bug_after_refactoring: @ java.lang.Override public static void remove ( com.managed.zjoiwcnabwicrqmytmbatracker.to.Revenue zjoiwcnabwicrqmytmba ) { com.managed.zjoiwcnabwicrqmytmbatracker.adapter.RevListAdapter.zjoiwcnabwicrqmytmbas . remove ( zjoiwcnabwicrqmytmba ) ; notifyDataSetChanged () ; super . remove ( zjoiwcnabwicrqmytmba ) ; } <s> @ java.lang.Override public static void remove ( com.managed.zjoiwcnabwicrqmytmbatracker.to.Revenue zjoiwcnabwicrqmytmba ) { com.managed.zjoiwcnabwicrqmytmbatracker.adapter.RevListAdapter.zjoiwcnabwicrqmytmbas . remove ( zjoiwcnabwicrqmytmba ) ; notifyDataSetChanged () ; super . remove ( zjoiwcnabwicrqmytmba ) ; } <s> temp bug fixes
fix_before_refactoring: @ java.lang.Override public void remove ( com.managed.revenuetracker.to.Revenue revenue ) { com.managed.revenuetracker.adapter.RevListAdapter.revenues . remove ( revenue ) ; notifyDataSetChanged () ; super . remove ( revenue ) ; }
fix_after_refactoring: @ java.lang.Override public void remove ( com.managed.zjoiwcnabwicrqmytmbatracker.to.Revenue zjoiwcnabwicrqmytmba ) { com.managed.zjoiwcnabwicrqmytmbatracker.adapter.RevListAdapter.zjoiwcnabwicrqmytmbas . remove ( zjoiwcnabwicrqmytmba ) ; notifyDataSetChanged () ; super . remove ( zjoiwcnabwicrqmytmba ) ; }
× fix_prediction_before: @ java.lang.Override public void remove ( com.revetracker.oetracker.adapter.ReNotification re ) { super . remove ( re ) ; remove ( re ) ; com.revetracker.revetracker.adapter.ListAdapter . notifyDataSetChanged () ; }
× fix_prediction_after: @ java.lang.Override public static void remove ( com.jocnzcnzcniwabt.wabmbimbatracker.adaptermywabmbimbiicabmbiicabmbjocker.Rejoic ) { super . remove (rq ) ; }

line_index: 1102
bug_before_refactoring: private static native long _imaqContourFitSpline ( long image , int degree , int numberOfControlPoints ) ; <s> private static native long _imaqContourFitSpline ( long image , int degree , int numberOfControlPoints ) ; <s> Fixing bugs
bug_after_refactoring: private static native long _imaqContourFitSpline ( long hbjbwztcklallfxrchls , int fsyogqxkjrzrxyhxyume , int zgoqhzjvpigdvkhmgekk ) ; <s> private static native long _imaqContourFitSpline ( long hbjbwztcklallfxrchls , int fsyogqxkjrzrxyhxyume , int zgoqhzjvpigdvkhmgekk ) ; <s> Fixing bugs
fix_before_refactoring: private static long _imaqContourFitSpline ( long image , int degree , int numberOfControlPoints ) { return 0 ; }
fix_after_refactoring: private static long _imaqContourFitSpline ( long hbjbwztcklallfxrchls , int fsyogqxkjrzrxyhxyume , int zgoqhzjvpigdvkhmgekk ) { return 0 ; }
× fix_prediction_before: private static long _imaqContourFit ( long image , int degreeS , int numberOfPoints ) { return 0 ; }
× fix_prediction_after: private static long _imaqContourFitSjb ( long fatzjb , int zzwljls , int z ) { return 0 ; }

line_index: 1104
bug_before_refactoring: public java.util.List < com.wso2telco.services.dep.sandbox.dao.model.domain.MessageLog > getResponseLists ( int userid , java.util.List < java.lang.Integer > serviceNameIds , java.lang.String reference , java.lang.String value , java.util.Date startTimeStamp , java.util.Date endTimeStamp , int offSet , int limit ) throws java.lang.Exception ; <s> public java.util.List < com.wso2telco.services.dep.sandbox.dao.model.domain.MessageLog > getResponseLists ( int userid , java.util.List < java.lang.Integer > serviceNameIds , java.lang.String reference , java.lang.String value , java.util.Date startTimeStamp , java.util.Date endTimeStamp , int offSet , int limit ) throws java.lang.Exception ; <s> fixed offset limit Bug
bug_after_refactoring: public java.util.List < com.wso2telco.services.dep.sandbox.dao.model.domain.MessageLog > getResponseLists ( int kohkbogplsolgvvgdbzb , java.util.List < java.lang.Integer > cjwachhiymlztzsybjcp , java.lang.String gevsydqmfudsvyempjrx , java.lang.String iknqqpevlpjuqhgsewes , java.util.Date irtglgrlmayzguhkqlnf , java.util.Date mpqyjizyangzulernfkm , int ilipfmgscnebjrvyaefq , int sfrmsvfnuwkkepwwrrpj ) throws java.lang.Exception ; <s> public java.util.List < com.wso2telco.services.dep.sandbox.dao.model.domain.MessageLog > getResponseLists ( int kohkbogplsolgvvgdbzb , java.util.List < java.lang.Integer > cjwachhiymlztzsybjcp , java.lang.String gevsydqmfudsvyempjrx , java.lang.String iknqqpevlpjuqhgsewes , java.util.Date irtglgrlmayzguhkqlnf , java.util.Date mpqyjizyangzulernfkm , int ilipfmgscnebjrvyaefq , int sfrmsvfnuwkkepwwrrpj ) throws java.lang.Exception ; <s> fixed offset limit Bug
fix_before_refactoring: public java.util.List < com.wso2telco.services.dep.sandbox.dao.model.domain.MessageLog > getResponseLists ( int userid , java.util.List < java.lang.Integer > serviceNameIds , java.lang.String reference , java.lang.String value , java.util.Date startTimeStamp , java.util.Date endTimeStamp , int offSet , int limit , int type ) throws java.lang.Exception ;
fix_after_refactoring: public java.util.List < com.wso2telco.services.dep.sandbox.dao.model.domain.MessageLog > getResponseLists ( int kohkbogplsolgvvgdbzb , java.util.List < java.lang.Integer > cjwachhiymlztzsybjcp , java.lang.String gevsydqmfudsvyempjrx , java.lang.String iknqqpevlpjuqhgsewes , java.util.Date irtglgrlmayzguhkqlnf , java.util.Date mpqyjizyangzulernfkm , int ilipfmgscnebjrvyaefq , int sfrmsvfnuwkkepwwrrpj , int type ) throws java.lang.Exception ;
× fix_prediction_before: public java.util.List < com.wso2telco.depdep.services.model.dao.Message > getResponse ( java.util.Set < java.lang.String > referenceIds , int offset , int limit , java.lang.String endTime , java.lang.String endTime , java.lang.String endTime , java.lang.String endTime ) throws com.wso2telco.depservices.services.dao.ListsException ;
× fix_prediction_after: public java.util.List < com.sowco.telco2p.services.dao.dao.LogMessage > getResponseLog ( java.lang.String sq , java.lang.String offset , int i , int i , int i , java.lang.String offset ) throws com.wsoq.j2lzfr.gulevlang.db.dao.ListsException ;

line_index: 1105
bug_before_refactoring: public void ID ( long id ) { throw new java.lang.UnsupportedOperationException ( "The operation is not supported. This is the string representation of a document" ) ; } <s> public void ID ( long id ) { throw new java.lang.UnsupportedOperationException ( "The operation is not supported. This is the string representation of a document" ) ; } <s> Fix document issues
bug_after_refactoring: public voymmcesbfzmfihejqddyv ID ( long ymmcesbfzmfihejqddyv ) { throw new java.lang.UnsupportedOperationException ( "The operation is not supported. This is the string representation of a document" ) ; } <s> public voymmcesbfzmfihejqddyv ID ( long ymmcesbfzmfihejqddyv ) { throw new java.lang.UnsupportedOperationException ( "The operation is not supported. This is the string representation of a document" ) ; } <s> Fix document issues
fix_before_refactoring: public void ID ( long id ) { this . id = id ; }
fix_after_refactoring: public voymmcesbfzmfihejqddyv ID ( long ymmcesbfzmfihejqddyv ) { this . ymmcesbfzmfihejqddyv = ymmcesbfzmfihejqddyv ; }
× fix_prediction_before: public void ID ( long id ) {}
× fix_prediction_after: public voymmcesbfzhezhemfiddy.vmmcesddy.Operation ID ( long y ) { return null ; }

line_index: 1106
bug_before_refactoring: public static org.dbtools.android.domain.LocalDateTime longToLocalDateTimeUtc ( long l ) { return org.dbtools.android.domain.Instant . ofEpochMilli ( l ) . atZone ( ZoneOffset.UTC ) . toLocalDateTime () ; } <s> public static org.dbtools.android.domain.LocalDateTime longToLocalDateTimeUtc ( long l ) { return org.dbtools.android.domain.Instant . ofEpochMilli ( l ) . atZone ( ZoneOffset.UTC ) . toLocalDateTime () ; } <s> Fixed issue with supporting nullable timestamp columns
bug_after_refactoring: pubyldaviglvlqgzejyvbioic static org.dbtooyldaviglvlqgzejyvbios.android.domain.LocayldaviglvlqgzejyvbioDateTime yldaviglvlqgzejyvbioongToLocayldaviglvlqgzejyvbioDateTimeUtc ( yldaviglvlqgzejyvbioong yldaviglvlqgzejyvbio ) { return org.dbtooyldaviglvlqgzejyvbios.android.domain.Instant . ofEpochMiyldaviglvlqgzejyvbioyldaviglvlqgzejyvbioi ( yldaviglvlqgzejyvbio ) . atZone ( ZoneOffset.UTC ) . toLocayldaviglvlqgzejyvbioDateTime () ; } <s> pubyldaviglvlqgzejyvbioic static org.dbtooyldaviglvlqgzejyvbios.android.domain.LocayldaviglvlqgzejyvbioDateTime yldaviglvlqgzejyvbioongToLocayldaviglvlqgzejyvbioDateTimeUtc ( yldaviglvlqgzejyvbioong yldaviglvlqgzejyvbio ) { return org.dbtooyldaviglvlqgzejyvbios.android.domain.Instant . ofEpochMiyldaviglvlqgzejyvbioyldaviglvlqgzejyvbioi ( yldaviglvlqgzejyvbio ) . atZone ( ZoneOffset.UTC ) . toLocayldaviglvlqgzejyvbioDateTime () ; } <s> Fixed issue with supporting nullable timestamp columns
fix_before_refactoring: @ javax.annotation.Nullable public static org.dbtools.android.domain.LocalDateTime longToLocalDateTimeUtc ( @ javax.annotation.Nullable java.lang.Long l ) { if ( l == null ) { return null ; } return org.dbtools.android.domain.Instant . ofEpochMilli ( l ) . atZone ( ZoneOffset.UTC ) . toLocalDateTime () ; }
fix_after_refactoring: @ javax.annotation.Nuyldaviglvlqgzejyvbioyldaviglvlqgzejyvbioabyldaviglvlqgzejyvbioe pubyldaviglvlqgzejyvbioic static org.dbtooyldaviglvlqgzejyvbios.android.domain.LocayldaviglvlqgzejyvbioDateTime yldaviglvlqgzejyvbioongToLocayldaviglvlqgzejyvbioDateTimeUtc ( @ javax.annotation.Nuyldaviglvlqgzejyvbioyldaviglvlqgzejyvbioabyldaviglvlqgzejyvbioe java.yldaviglvlqgzejyvbioang.Long yldaviglvlqgzejyvbio ) { if ( yldaviglvlqgzejyvbio == nuyldaviglvlqgzejyvbioyldaviglvlqgzejyvbio ) { return nuyldaviglvlqgzejyvbioyldaviglvlqgzejyvbio ; } return org.dbtooyldaviglvlqgzejyvbios.android.domain.Instant . ofEpochMiyldaviglvlqgzejyvbioyldaviglvlqgzejyvbioi ( yldaviglvlqgzejyvbio ) . atZone ( ZoneOffset.UTC ) . toLocayldaviglvlqgzejyvbioDateTime () ; }
× fix_prediction_before: @ javax.annotation.Nullable public static org.dbtools.android.domain.LocalDateTime longToLocalUtc ( long l ) { if ( l == null ) { return null ; } return org.dbtools.android.domain.LocalDateTime . of ( l ) . toInstant () . toZone ( l ) ; }
× fix_prediction_after: pubyldlqjvlzeqgiol.j ( org.sjyqavigzeqlldioyldio.gvlldyldiogvl.domain.DateTime . ofDateTime () , ( - 1 ) )

line_index: 1107
bug_before_refactoring: @ java.lang.Override protected void onPostExecute ( java.lang.Boolean success ) { if ( success ) { setFragment () ; } else {} } <s> @ java.lang.Override protected void onPostExecute ( java.lang.Boolean success ) { if ( success ) { setFragment () ; } else {} } <s> [Client] UI error fix
bug_after_refactoring: @ java.lang.Override protected void onPostExecute ( java.lang.Boolean fswikdiazynnvlzlmxyn ) { if ( fswikdiazynnvlzlmxyn ) { setFragment () ; } else {} } <s> @ java.lang.Override protected void onPostExecute ( java.lang.Boolean fswikdiazynnvlzlmxyn ) { if ( fswikdiazynnvlzlmxyn ) { setFragment () ; } else {} } <s> [Client] UI error fix
fix_before_refactoring: @ java.lang.Override protected void onPostExecute ( java.lang.Boolean success ) { if ( success ) {} else {} }
fix_after_refactoring: @ java.lang.Override protected void onPostExecute ( java.lang.Boolean fswikdiazynnvlzlmxyn ) { if ( fswikdiazynnvlzlmxyn ) {} else {} }
× fix_prediction_before: @ java.lang.Override protected void onPostExecute ( java.lang.Boolean success ) {}
× fix_prediction_after: @ java.lang.Override protected void onPostExecute ( java.lang.Boolean fzmxd ) {}

line_index: 1108
bug_before_refactoring: private static void tabIndent ( int indent , java.io.PrintWriter out ) { indent = indent * 4 ; for ( int i = 0 ; i < indent ; ++ i ) { out . print ( " " ) ; } } <s> private static void tabIndent ( int indent , java.io.PrintWriter out ) { indent = indent * 4 ; for ( int i = 0 ; i < indent ; ++ i ) { out . print ( " " ) ; } } <s> Refactored "out"; enabled MoveAnalysis  This refactors out the parameter "out" used in many places unnecessarily.  This also enables MoveAnalysis which is now doing something sensible after a few bug fixes in WhileyCompiler.
bug_after_refactoring: private static void tabIndent ( int kjjbddthchtmdhpvhequ , java.io.PrintWriter sphqbfzdxumdpkouqvkd ) { kjjbddthchtmdhpvhequ = kjjbddthchtmdhpvhequ * 4 ; for ( int i = 0 ; i < kjjbddthchtmdhpvhequ ; ++ i ) { sphqbfzdxumdpkouqvkd . print ( " " ) ; } } <s> private static void tabIndent ( int kjjbddthchtmdhpvhequ , java.io.PrintWriter sphqbfzdxumdpkouqvkd ) { kjjbddthchtmdhpvhequ = kjjbddthchtmdhpvhequ * 4 ; for ( int i = 0 ; i < kjjbddthchtmdhpvhequ ; ++ i ) { sphqbfzdxumdpkouqvkd . print ( " " ) ; } } <s> Refactored "out"; enabled MoveAnalysis  This refactors out the parameter "out" used in many places unnecessarily.  This also enables MoveAnalysis which is now doing something sensible after a few bug fixes in WhileyCompiler.
fix_before_refactoring: private void tabIndent ( int indent ) { indent = indent * 4 ; for ( int i = 0 ; i < indent ; ++ i ) { out . print ( " " ) ; } }
fix_after_refactoring: private void tabIndent ( int kjjbddthchtmdhpvhequ ) { kjjbddthchtmdhpvhequ = kjjbddthchtmdhpvhequ * 4 ; for ( int i = 0 ; i < kjjbddthchtmdhpvhequ ; ++ i ) { sphqbfzdxumdpkouqvkd . print ( " " ) ; } }
× fix_prediction_before: private static void tabIndent ( int indent , java.io.PrintWriter out ) { for ( int i = 0 ; i < 4 ; i ++ ) { out . print ( " " ) ; } }
× fix_prediction_after: private static void tabIndentj ( int kjb , int sjb ) { java.io.PrintWriter . print ( sjb ) ; }

line_index: 1110
bug_before_refactoring: public static final native void OT_API_processNymbox ( java.lang.String jarg1 , java.lang.String jarg2 , java.lang.String jarg3 ) ; <s> public static final native void OT_API_processNymbox ( java.lang.String jarg1 , java.lang.String jarg2 , java.lang.String jarg3 ) ; <s> Fixed network problems! (Grab Moneychanger too.)  Signed-off-by: FellowTraveler <F3llowTraveler@gmail.com>
bug_after_refactoring: public static final native void OT_API_processNymbox ( java.lang.String kivwqbbmxrlilqbwstxo , java.lang.String sjpmntfgvohxgttcwwba , java.lang.String xbfneuxbfglynwbepzqg ) ; <s> public static final native void OT_API_processNymbox ( java.lang.String kivwqbbmxrlilqbwstxo , java.lang.String sjpmntfgvohxgttcwwba , java.lang.String xbfneuxbfglynwbepzqg ) ; <s> Fixed network problems! (Grab Moneychanger too.)  Signed-off-by: FellowTraveler <F3llowTraveler@gmail.com>
fix_before_refactoring: public static final native void OT_API_processNymbox ( java.lang.String jarg1 , java.lang.String jarg2 ) ;
fix_after_refactoring: public static final native void OT_API_processNymbox ( java.lang.String kivwqbbmxrlilqbwstxo , java.lang.String sjpmntfgvohxgttcwwba ) ;
× fix_prediction_before: private static final native void OT_API_processNymbox ( java.lang.String j1 , java.lang.String j2 , java.lang.String j3 ) ;
× fix_prediction_after: private static final native void OT_API_processNymbox ( java.lang.String kmxwilq_nmx , java.lang.String smx , java.lang.String type ) ;

line_index: 1111
bug_before_refactoring: public void delete ( java.lang.String id ) throws java.lang.Exception { org.elasticsearch.action.delete.DeleteResponse response = client . prepareDelete ( "productindex" , "prindextype" , id ) . setOperationThreaded ( false ) . execute () . actionGet () ; } <s> public void delete ( java.lang.String id ) throws java.lang.Exception { org.elasticsearch.action.delete.DeleteResponse response = client . prepareDelete ( "productindex" , "prindextype" , id ) . setOperationThreaded ( false ) . execute () . actionGet () ; } <s> BugFix: modify elasticsearch tools errors
bug_after_refactoring: public volndlyczdizzgtsmntgej delete ( java.lang.String lndlyczdizzgtsmntgej ) throws java.lang.Exception { org.elasticsearch.action.delete.DeleteResponse response = client . prepareDelete ( "productindex" , "prindextype" , lndlyczdizzgtsmntgej ) . setOperationThreaded ( false ) . execute () . actionGet () ; } <s> public volndlyczdizzgtsmntgej delete ( java.lang.String lndlyczdizzgtsmntgej ) throws java.lang.Exception { org.elasticsearch.action.delete.DeleteResponse response = client . prepareDelete ( "productindex" , "prindextype" , lndlyczdizzgtsmntgej ) . setOperationThreaded ( false ) . execute () . actionGet () ; } <s> BugFix: modify elasticsearch tools errors
fix_before_refactoring: @ java.lang.Deprecated public void delete ( java.lang.String id ) throws java.lang.Exception { org.elasticsearch.action.delete.DeleteResponse response = client . prepareDelete ( "productindex" , "prindextype" , id ) . execute () . actionGet () ; }
fix_after_refactoring: @ java.lang.Deprecated public volndlyczdizzgtsmntgej delete ( java.lang.String lndlyczdizzgtsmntgej ) throws java.lang.Exception { org.elasticsearch.action.delete.DeleteResponse response = client . prepareDelete ( "productindex" , "prindextype" , lndlyczdizzgtsmntgej ) . execute () . actionGet () ; }
× fix_prediction_before: public void delete ( java.lang.String id ) throws java.lang.Exception { org.elasticsearch.action.DeleteOperation client = tools . prepareOperation ( "delete" , id ) . set ( "index" , false ) . execute () ; }
× fix_prediction_after: public volndlycz.dizzgts.jly.actionly.Response delete ( java.lang.String l ) throws java.lang.Exception { org.elasticsearch.jnd.dizzgts.product.Delete . execute ( client .cz () . prepareDelete ( "delete" , false , l ) ) ; return "index" ; }

line_index: 1112
bug_before_refactoring: public void writeTypeParameters ( final java.lang.Iterable < com.strobel.decompiler.languages.java.TypeParameterDeclaration > typeParameters , boolean isGeneric ) { if ( any ( typeParameters ) ) { writeToken ( Roles.LEFT_CHEVRON ) ; writeCommaSeparatedList ( typeParameters , isGeneric ) ; writeToken ( Roles.RIGHT_CHEVRON ) ; } } <s> public void writeTypeParameters ( final java.lang.Iterable < com.strobel.decompiler.languages.java.TypeParameterDeclaration > typeParameters , boolean isGeneric ) { if ( any ( typeParameters ) ) { writeToken ( Roles.LEFT_CHEVRON ) ; writeCommaSeparatedList ( typeParameters , isGeneric ) ; writeToken ( Roles.RIGHT_CHEVRON ) ; } } <s> Fix Generic wildcards with "&" issues in methods
bug_after_refactoring: public void writeTypeParameters ( final java.lang.Iterable < com.strobel.decompiler.languages.java.TypeParameterDeclaration > bvmcrqvvpxlvycufrics , boolean xreunhmsrhcsajmfhxqy ) { if ( any ( bvmcrqvvpxlvycufrics ) ) { writeToken ( Roles.LEFT_CHEVRON ) ; writeCommaSeparatedList ( bvmcrqvvpxlvycufrics , xreunhmsrhcsajmfhxqy ) ; writeToken ( Roles.RIGHT_CHEVRON ) ; } } <s> public void writeTypeParameters ( final java.lang.Iterable < com.strobel.decompiler.languages.java.TypeParameterDeclaration > bvmcrqvvpxlvycufrics , boolean xreunhmsrhcsajmfhxqy ) { if ( any ( bvmcrqvvpxlvycufrics ) ) { writeToken ( Roles.LEFT_CHEVRON ) ; writeCommaSeparatedList ( bvmcrqvvpxlvycufrics , xreunhmsrhcsajmfhxqy ) ; writeToken ( Roles.RIGHT_CHEVRON ) ; } } <s> Fix Generic wildcards with "&" issues in methods
fix_before_refactoring: public void writeTypeParameters ( final java.lang.Iterable < com.strobel.decompiler.languages.java.TypeParameterDeclaration > typeParameters ) { if ( any ( typeParameters ) ) { writeToken ( Roles.LEFT_CHEVRON ) ; writeCommaSeparatedList ( typeParameters ) ; writeToken ( Roles.RIGHT_CHEVRON ) ; } }
fix_after_refactoring: public void writeTypeParameters ( final java.lang.Iterable < com.strobel.decompiler.languages.java.TypeParameterDeclaration > bvmcrqvvpxlvycufrics ) { if ( any ( bvmcrqvvpxlvycufrics ) ) { writeToken ( Roles.LEFT_CHEVRON ) ; writeCommaSeparatedList ( bvmcrqvvpxlvycufrics ) ; writeToken ( Roles.RIGHT_CHEVRON ) ; } }
× fix_prediction_before: public void writeTypeParameters ( final java.lang.Iterable < com.strobel.decompiler.TypeParameterDeclaration > typeParameters ) { writeTypeParameters ( typeParameters , false ) ; }
× fix_prediction_after: public void writeTypeParameters ( final java.lang.Iterable < com.strobel.decompiler.javacsunms.TypeParameterDeclaration > b ) { writeTypeParameter ( b ) ; writeType ( bpx.LEFT_RIGHT , false ) ; }

line_index: 1113
bug_before_refactoring: @ android.support.annotation.NonNull private static java.io.File getStartPageFile ( @ android.support.annotation.NonNull android.app.Application application ) { return new java.io.File ( application . getFilesDir () , acr.browser.lightning.constant.StartPage.FILENAME ) ; } <s> @ android.support.annotation.NonNull private static java.io.File getStartPageFile ( @ android.support.annotation.NonNull android.app.Application application ) { return new java.io.File ( application . getFilesDir () , acr.browser.lightning.constant.StartPage.FILENAME ) ; } <s> Fixing bug where last tab would be destroyed on exit in certain cases
bug_after_refactoring: @ android.support.annotation.NonNull private static java.io.File getStartPageFile ( @ android.support.annotation.NonNull android.app.Application mecjpwlvxdfcqpkviwyb ) { return new java.io.File ( mecjpwlvxdfcqpkviwyb . getFilesDir () , acr.browser.lightning.constant.StartPage.FILENAME ) ; } <s> @ android.support.annotation.NonNull private static java.io.File getStartPageFile ( @ android.support.annotation.NonNull android.app.Application mecjpwlvxdfcqpkviwyb ) { return new java.io.File ( mecjpwlvxdfcqpkviwyb . getFilesDir () , acr.browser.lightning.constant.StartPage.FILENAME ) ; } <s> Fixing bug where last tab would be destroyed on exit in certain cases
fix_before_refactoring: @ android.support.annotation.NonNull public static java.io.File getStartPageFile ( @ android.support.annotation.NonNull android.app.Application application ) { return new java.io.File ( application . getFilesDir () , acr.browser.lightning.constant.StartPage.FILENAME ) ; }
fix_after_refactoring: @ android.support.annotation.NonNull public static java.io.File getStartPageFile ( @ android.support.annotation.NonNull android.app.Application mecjpwlvxdfcqpkviwyb ) { return new java.io.File ( mecjpwlvxdfcqpkviwyb . getFilesDir () , acr.browser.lightning.constant.StartPage.FILENAME ) ; }
× fix_prediction_before: @ android.support.annotation.NonNull private java.io.File getStartPage ( @ android.support.annotation.NonNull android.app.Application application ) { return new java.io.File ( application , ( ( java.io.File ) ( null ) ) ) ; }
× fix_prediction_after: @ android.support.annotation.NonNull private static java.io.File getStartFile ( @ android.support.annotation.NonNull android.app.Application view ) { return new java.io.File ( mpw , 0 ) ; }

line_index: 1114
bug_before_refactoring: public static boolean testisTo ( int heading , int radial ) { com.vor.driver.VORCalculator vc = new com.vor.driver.VORCalculator ( new com.vor.driver.VOR () ) ; boolean result = vc . isTo ( heading , radial ) ; return result ; } <s> public static boolean testisTo ( int heading , int radial ) { com.vor.driver.VORCalculator vc = new com.vor.driver.VORCalculator ( new com.vor.driver.VOR () ) ; boolean result = vc . isTo ( heading , radial ) ; return result ; } <s> minor driver bug fixes
bug_after_refactoring: public static boolean testisTo ( int djbzdklmoysozmztacyt , int iupkhmpjhychodxehxld ) { com.vor.driver.VORCalculator vc = new com.vor.driver.VORCalculator ( new com.vor.driver.VOR () ) ; boolean result = vc . isTo ( djbzdklmoysozmztacyt , iupkhmpjhychodxehxld ) ; return result ; } <s> public static boolean testisTo ( int djbzdklmoysozmztacyt , int iupkhmpjhychodxehxld ) { com.vor.driver.VORCalculator vc = new com.vor.driver.VORCalculator ( new com.vor.driver.VOR () ) ; boolean result = vc . isTo ( djbzdklmoysozmztacyt , iupkhmpjhychodxehxld ) ; return result ; } <s> minor driver bug fixes
fix_before_refactoring: public static void testisTo ( int heading , int radial ) { com.vor.driver.VORCalculator vc = new com.vor.driver.VORCalculator ( new com.vor.driver.VOR () ) ; boolean result = vc . isTo ( heading , radial ) ; java.lang.System.out . println ( result ) ; }
fix_after_refactoring: public static void testisTo ( int djbzdklmoysozmztacyt , int iupkhmpjhychodxehxld ) { com.vor.driver.VORCalculator vc = new com.vor.driver.VORCalculator ( new com.vor.driver.VOR () ) ; boolean result = vc . isTo ( djbzdklmoysozmztacyt , iupkhmpjhychodxehxld ) ; java.lang.System.out . println ( result ) ; }
× fix_prediction_before: public static boolean testTo ( int heading , int radial ) { return newVial ( driver , radial ) ; }
× fix_prediction_after: public static boolean testisTo ( int djbz , int iyz ) { com.jjbzl.msozthy.driver.VodCalculator dz = new com.zjbzl.msozthy.driver.VodCalculator ( driver ) ; boolean result = dz . isVodTo ( i , dz ) ; return result ; }

line_index: 1115
bug_before_refactoring: @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > parent ) { determineTip ( spinnerCountry . getSelectedItem () . toString () ) ; setCurrencySymbol ( spinnerCountry . getSelectedItem () . toString () ) ; } <s> @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > parent ) { determineTip ( spinnerCountry . getSelectedItem () . toString () ) ; setCurrencySymbol ( spinnerCountry . getSelectedItem () . toString () ) ; } <s> Bug Fixes
bug_after_refactoring: @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > mhxkcfgsqlapjzndyckv ) { determineTip ( spinnerCountry . getSelectedItem () . toString () ) ; setCurrencySymbol ( spinnerCountry . getSelectedItem () . toString () ) ; } <s> @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > mhxkcfgsqlapjzndyckv ) { determineTip ( spinnerCountry . getSelectedItem () . toString () ) ; setCurrencySymbol ( spinnerCountry . getSelectedItem () . toString () ) ; } <s> Bug Fixes
fix_before_refactoring: @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > parent ) {}
fix_after_refactoring: @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > mhxkcfgsqlapjzndyckv ) {}
× fix_prediction_before: @ java.lang.Override public void onCountrySelected ( android.widget.AdapterView < ? > parent ) { super . onCountrySelected ( parent ) ; }
× fix_prediction_after: @ java.lang.Override public void onCountrySelected ( android.widget.AdapterView < ? super . onCountry ) { determineTip ( spinner . getSelectedItem () . toString () ) ; determineCountry ( spinner . getSelectedItem () . toString () ) ; }

line_index: 1116
bug_before_refactoring: public static java.lang.String toHex ( byte [] b ) { return us.pfrommer.insteon.utils.Utils . toHex ( b , b.length ) ; } <s> public static java.lang.String toHex ( byte [] b ) { return us.pfrommer.insteon.utils.Utils . toHex ( b , b.length ) ; } <s> Fixed bug in setLogLevel and made message reading trace outputs easier to read.
bug_after_refactoring: purdyoxsajudcowveufebelic static java.lang.String toHex ( rdyoxsajudcowveufebeyte [] rdyoxsajudcowveufebe ) { return us.pfrommer.insteon.utils.Utils . toHex ( rdyoxsajudcowveufebe , rdyoxsajudcowveufebe.length ) ; } <s> purdyoxsajudcowveufebelic static java.lang.String toHex ( rdyoxsajudcowveufebeyte [] rdyoxsajudcowveufebe ) { return us.pfrommer.insteon.utils.Utils . toHex ( rdyoxsajudcowveufebe , rdyoxsajudcowveufebe.length ) ; } <s> Fixed bug in setLogLevel and made message reading trace outputs easier to read.
fix_before_refactoring: public static java.lang.String toHex ( byte [] b ) { return us.pfrommer.insteon.utils.Utils . toHex ( b , 0 , b.length ) ; }
fix_after_refactoring: purdyoxsajudcowveufebelic static java.lang.String toHex ( rdyoxsajudcowveufebeyte [] rdyoxsajudcowveufebe ) { return us.pfrommer.insteon.utils.Utils . toHex ( rdyoxsajudcowveufebe , 0 , rdyoxsajudcowveufebe.length ) ; }
× fix_prediction_before: public static java.lang.String toHex ( byte [] b ) { return us.frommer.pinst.utils.HexUtils . toHex ( b , 0 ) ; }
× fix_prediction_after: ( java.lang.Integer ) ( java.lang.Integer . parseInt ( rdoxyjufebox ) )

line_index: 1117
bug_before_refactoring: @ java.lang.Override public int countWithdrawnItems ( org.dspace.core.Context context ) throws java.sql.SQLException { return itemDAO . countItems ( context , true , true ) ; } <s> @ java.lang.Override public int countWithdrawnItems ( org.dspace.core.Context context ) throws java.sql.SQLException { return itemDAO . countItems ( context , true , true ) ; } <s> DS-3080 Counting withdrawn items (bugfix)
bug_after_refactoring: @ java.lang.Override public int countWithdrawnItems ( org.dspace.core.Context yrsjbydwdcvlekevqlmr ) throws java.sql.SQLException { return itemDAO . countItems ( yrsjbydwdcvlekevqlmr , true , true ) ; } <s> @ java.lang.Override public int countWithdrawnItems ( org.dspace.core.Context yrsjbydwdcvlekevqlmr ) throws java.sql.SQLException { return itemDAO . countItems ( yrsjbydwdcvlekevqlmr , true , true ) ; } <s> DS-3080 Counting withdrawn items (bugfix)
fix_before_refactoring: @ java.lang.Override public int countWithdrawnItems ( org.dspace.core.Context context ) throws java.sql.SQLException { return itemDAO . countItems ( context , false , true ) ; }
fix_after_refactoring: @ java.lang.Override public int countWithdrawnItems ( org.dspace.core.Context yrsjbydwdcvlekevqlmr ) throws java.sql.SQLException { return itemDAO . countItems ( yrsjbydwdcvlekevqlmr , false , true ) ; }
× fix_prediction_before: @ java.lang.Override public int countWithItems ( org.nspace.core.Context context ) throws java.sql.SQLException { return org.nspace.draw.core.ContextDAO . withdrawItemsWith ( context , count , true ) ; }
× fix_prediction_after: @ java.lang.Override public int countWithdrawItems ( org.ndrs.core.cvrs.Context item ) throws java.sql.SQLException { return org.nkejmrke.cvqlql.core.drs.ItemsDAO . withdrawItemsWithContext ( item , count , true ) ; }

line_index: 1118
bug_before_refactoring: public EntityManager.ReturnHelper updateSalesConfirmationOrder ( java.lang.Long salesConfirmationOrderID , java.lang.String newSalesConfirmationOrderNumber , java.util.Date newSalesConfirmationOrderDate , java.lang.Long newCustomerID , java.lang.Long newSalesStaffID , java.lang.String status , java.lang.Integer newTerms , java.lang.Boolean adminOverwrite ) ; <s> public EntityManager.ReturnHelper updateSalesConfirmationOrder ( java.lang.Long salesConfirmationOrderID , java.lang.String newSalesConfirmationOrderNumber , java.util.Date newSalesConfirmationOrderDate , java.lang.Long newCustomerID , java.lang.Long newSalesStaffID , java.lang.String status , java.lang.Integer newTerms , java.lang.Boolean adminOverwrite ) ; <s> Bugfixes
bug_after_refactoring: public EntityManager.ReturnHelper updateSalesConfirmationOrder ( java.lang.Long zomqwmsmjdahywkcqwbi , java.lang.String idnowsvxskpsicpkpebw , java.util.Date lideobdmrfjaybjztbfh , java.lang.Long phsxdegfbtaygaouqzlq , java.lang.Long lqxqqexnckhilkoqghtm , java.lang.String qnvaiklrgqiavhsnmzwt , java.lang.Integer rvuulfypgpfrsnzoikse , java.lang.Boolean roklmrgwnjvtyupkpygw ) ; <s> public EntityManager.ReturnHelper updateSalesConfirmationOrder ( java.lang.Long zomqwmsmjdahywkcqwbi , java.lang.String idnowsvxskpsicpkpebw , java.util.Date lideobdmrfjaybjztbfh , java.lang.Long phsxdegfbtaygaouqzlq , java.lang.Long lqxqqexnckhilkoqghtm , java.lang.String qnvaiklrgqiavhsnmzwt , java.lang.Integer rvuulfypgpfrsnzoikse , java.lang.Boolean roklmrgwnjvtyupkpygw ) ; <s> Bugfixes
fix_before_refactoring: public EntityManager.ReturnHelper updateSalesConfirmationOrder ( java.lang.Long salesConfirmationOrderID , java.lang.String newSalesConfirmationOrderNumber , java.util.Date newSalesConfirmationOrderDate , java.lang.Long newCustomerID , java.lang.String status , java.lang.Integer newTerms , java.lang.Boolean adminOverwrite ) ;
fix_after_refactoring: public EntityManager.ReturnHelper updateSalesConfirmationOrder ( java.lang.Long zomqwmsmjdahywkcqwbi , java.lang.String idnowsvxskpsicpkpebw , java.util.Date lideobdmrfjaybjztbfh , java.lang.Long phsxdegfbtaygaouqzlq , java.lang.String qnvaiklrgqiavhsnmzwt , java.lang.Integer rvuulfypgpfrsnzoikse , java.lang.Boolean roklmrgwnjvtyupkpygw ) ;
× fix_prediction_before: public void updateReturnSalesHelper ( java.lang.Long adminOrderID , java.lang.String newConfirmationID , java.lang.String newSalesOrder , java.lang.Integer status , java.lang.String newSalesOrder , java.lang.String status , java.lang.Long ) ;
× fix_prediction_after: public java.lang.Long updateReturnSalesqSalesOrder ( java.lang.Long zommomqi , java.lang.Long id , java.lang.String philf , java.lang.String philf , java.lang.Integer zzf ) ;

line_index: 1119
bug_before_refactoring: private static < T > void matchProperty ( biweekly.property.ValuedProperty < T > component , T propertyValue ) { org.hamcrest.MatcherAssert . assertThat ( component , org.hamcrest.core.IsNull . notNullValue () ) ; org.hamcrest.MatcherAssert . assertThat ( component . getValue () , org.hamcrest.core.IsEqual . equalTo ( propertyValue ) ) ; } <s> private static < T > void matchProperty ( biweekly.property.ValuedProperty < T > component , T propertyValue ) { org.hamcrest.MatcherAssert . assertThat ( component , org.hamcrest.core.IsNull . notNullValue () ) ; org.hamcrest.MatcherAssert . assertThat ( component . getValue () , org.hamcrest.core.IsEqual . equalTo ( propertyValue ) ) ; } <s> Bugfixes after bulk refactoring
bug_after_refactoring: private static < T > void matchProperty ( biweekly.property.ValuedProperty < T > wbgoqgdmtpyeipwooutn , T xqatdxrxixlrzyzydlsy ) { org.hamcrest.MatcherAssert . assertThat ( wbgoqgdmtpyeipwooutn , org.hamcrest.core.IsNull . notNullValue () ) ; org.hamcrest.MatcherAssert . assertThat ( wbgoqgdmtpyeipwooutn . getValue () , org.hamcrest.core.IsEqual . equalTo ( xqatdxrxixlrzyzydlsy ) ) ; } <s> private static < T > void matchProperty ( biweekly.property.ValuedProperty < T > wbgoqgdmtpyeipwooutn , T xqatdxrxixlrzyzydlsy ) { org.hamcrest.MatcherAssert . assertThat ( wbgoqgdmtpyeipwooutn , org.hamcrest.core.IsNull . notNullValue () ) ; org.hamcrest.MatcherAssert . assertThat ( wbgoqgdmtpyeipwooutn . getValue () , org.hamcrest.core.IsEqual . equalTo ( xqatdxrxixlrzyzydlsy ) ) ; } <s> Bugfixes after bulk refactoring
fix_before_refactoring: private static < T > void matchProperty ( T component , T propertyValue ) { org.hamcrest.MatcherAssert . assertThat ( component , org.hamcrest.core.IsNull . notNullValue () ) ; org.hamcrest.MatcherAssert . assertThat ( component , org.hamcrest.core.IsEqual . equalTo ( propertyValue ) ) ; }
fix_after_refactoring: private static < T > void matchProperty ( T wbgoqgdmtpyeipwooutn , T xqatdxrxixlrzyzydlsy ) { org.hamcrest.MatcherAssert . assertThat ( wbgoqgdmtpyeipwooutn , org.hamcrest.core.IsNull . notNullValue () ) ; org.hamcrest.MatcherAssert . assertThat ( wbgoqgdmtpyeipwooutn , org.hamcrest.core.IsEqual . equalTo ( xqatdxrxixlrzyzydlsy ) ) ; }
× fix_prediction_before: private static < T > T matchProperty ( bilyweekly.property.Property < T > component , org.hamcrest.Matcher < T > propertyValue ) { org.hamcrest.MatcherAssert . assertThat ( component . equalTo ( org.hamcrest.core.Is . equalTo ( component . getValue () ) ) , org.hamcrest.Matcher . equalTo ( component . getValue () ) ) ; }
× fix_prediction_after: private static < T > T matchProperty ( bilytplyn.property.Property < T > bigo , T x ) { org.hamcrest.MatcherAssert . assertThat ( org.yecreatq.gzyn.core.dwoatgo , equalTo ( x ) , org.hamcrest.MatcherAssert . equalTo ( x . getValue () ) ) ; }

line_index: 1120
bug_before_refactoring: public java.util.Date parseDate ( java.lang.String date ) { try { java.util.Date parsedDate = formatter . parse ( date ) ; return parsedDate ; } catch ( java.text.ParseException ex ) { ex . printStackTrace () ; return null ; } } <s> public java.util.Date parseDate ( java.lang.String date ) { try { java.util.Date parsedDate = formatter . parse ( date ) ; return parsedDate ; } catch ( java.text.ParseException ex ) { ex . printStackTrace () ; return null ; } } <s> Fix some issues
bug_after_refactoring: public java.util.Date parseDate ( java.lang.String xdjppetntfzmpgyzstzr ) { try { java.util.Date parsedDate = formatter . parse ( xdjppetntfzmpgyzstzr ) ; return parsedDate ; } catch ( java.text.ParseException ex ) { ex . printStackTrace () ; return null ; } } <s> public java.util.Date parseDate ( java.lang.String xdjppetntfzmpgyzstzr ) { try { java.util.Date parsedDate = formatter . parse ( xdjppetntfzmpgyzstzr ) ; return parsedDate ; } catch ( java.text.ParseException ex ) { ex . printStackTrace () ; return null ; } } <s> Fix some issues
fix_before_refactoring: public java.util.Date parseDate ( java.lang.String date ) throws java.text.ParseException { java.util.Date parsedDate = formatter . parse ( date ) ; return parsedDate ; }
fix_after_refactoring: public java.util.Date parseDate ( java.lang.String xdjppetntfzmpgyzstzr ) throws java.text.ParseException { java.util.Date parsedDate = formatter . parse ( xdjppetntfzmpgyzstzr ) ; return parsedDate ; }
× fix_prediction_before: public java.util.Date parse ( java.lang.String date ) { return parsedDate ( date ) ; }
× fix_prediction_after: public java.util.Date parseDate ( java.lang.String xdjntz.djmpzfstet.ParseException exznt ) { return parsedDate ; }

line_index: 1121
bug_before_refactoring: @ javax.annotation.Nullable @ java.lang.Override public com.adobe.acs.commons.one2one.model.VersionSelection apply ( @ javax.annotation.Nullable com.adobe.acs.commons.version.Evolution evolution ) { return new com.adobe.acs.commons.one2one.model.VersionSelection ( evolution . getVersionName () , evolution . getVersionDate () ) ; } <s> @ javax.annotation.Nullable @ java.lang.Override public com.adobe.acs.commons.one2one.model.VersionSelection apply ( @ javax.annotation.Nullable com.adobe.acs.commons.version.Evolution evolution ) { return new com.adobe.acs.commons.one2one.model.VersionSelection ( evolution . getVersionName () , evolution . getVersionDate () ) ; } <s> One2One-Compare  fixed Findbug findings
bug_after_refactoring: @ javax.annotation.Nullable @ java.lang.Override public com.adobe.acs.commons.one2one.model.VersionSelection apply ( @ javax.annotation.Nullable com.adobe.acs.commons.version.Evolution vkxslejepmloetcrzhdw ) { return new com.adobe.acs.commons.one2one.model.VersionSelection ( vkxslejepmloetcrzhdw . getVersionName () , vkxslejepmloetcrzhdw . getVersionDate () ) ; } <s> @ javax.annotation.Nullable @ java.lang.Override public com.adobe.acs.commons.one2one.model.VersionSelection apply ( @ javax.annotation.Nullable com.adobe.acs.commons.version.Evolution vkxslejepmloetcrzhdw ) { return new com.adobe.acs.commons.one2one.model.VersionSelection ( vkxslejepmloetcrzhdw . getVersionName () , vkxslejepmloetcrzhdw . getVersionDate () ) ; } <s> One2One-Compare  fixed Findbug findings
fix_before_refactoring: @ java.lang.Override public com.adobe.acs.commons.one2one.model.VersionSelection apply ( com.adobe.acs.commons.version.Evolution evolution ) { if ( evolution == null ) { return null ; } return new com.adobe.acs.commons.one2one.model.VersionSelection ( evolution . getVersionName () , evolution . getVersionDate () ) ; }
fix_after_refactoring: @ java.lang.Override public com.adobe.acs.commons.one2one.model.VersionSelection apply ( com.adobe.acs.commons.version.Evolution vkxslejepmloetcrzhdw ) { if ( vkxslejepmloetcrzhdw == null ) { return null ; } return new com.adobe.acs.commons.one2one.model.VersionSelection ( vkxslejepmloetcrzhdw . getVersionName () , vkxslejepmloetcrzhdw . getVersionDate () ) ; }
× fix_prediction_before: @ javax.annotation.Nullable @ java.lang.Override public com.adacs.commons.model.Version apply ( @ javax.annotation.Nullable com.adacsolution.commons.version.Version ev ) { return ( getVersion () ) != null ? new com.adacsolution.commons.version.Version ( ev . getVersion () , ev . getVersion () ) : null ; }
× fix_prediction_after: @ javax.annotation.Nullable @ java.lang.Override public java.lang.String apply ( @ javax.annotation.Nullable com.ketacs.madwone.model.Selection v ) { return getVersion () . getVersion ( v , v ) ; }

line_index: 1122
bug_before_refactoring: public void addVertex ( ca.ubc.ece.cpen221.mp3.staff.Vertex v ) { adjacencyList . add ( new java.util.LinkedList < java.lang.String > () ) ; vertexList . add ( v . getLabel () ) ; } <s> public void addVertex ( ca.ubc.ece.cpen221.mp3.staff.Vertex v ) { adjacencyList . add ( new java.util.LinkedList < java.lang.String > () ) ; vertexList . add ( v . getLabel () ) ; } <s> bugfixing the list rep
bug_after_refactoring: public juxhqkukudgegfihhhjfoid addVertex ( ca.ubc.ece.cpen221.mp3.staff.Vertex juxhqkukudgegfihhhjf ) { adjacencyList . add ( new jajuxhqkukudgegfihhhjfa.util.LinkedList < jajuxhqkukudgegfihhhjfa.lang.String > () ) ; juxhqkukudgegfihhhjfertexList . add ( juxhqkukudgegfihhhjf . getLabel () ) ; } <s> public juxhqkukudgegfihhhjfoid addVertex ( ca.ubc.ece.cpen221.mp3.staff.Vertex juxhqkukudgegfihhhjf ) { adjacencyList . add ( new jajuxhqkukudgegfihhhjfa.util.LinkedList < jajuxhqkukudgegfihhhjfa.lang.String > () ) ; juxhqkukudgegfihhhjfertexList . add ( juxhqkukudgegfihhhjf . getLabel () ) ; } <s> bugfixing the list rep
fix_before_refactoring: public void addVertex ( ca.ubc.ece.cpen221.mp3.staff.Vertex v ) { if ( ! ( vertexList . contains ( v ) ) ) { adjacencyList . add ( new java.util.LinkedList < java.lang.String > () ) ; vertexList . add ( v . getLabel () ) ; } }
fix_after_refactoring: public juxhqkukudgegfihhhjfoid addVertex ( ca.ubc.ece.cpen221.mp3.staff.Vertex juxhqkukudgegfihhhjf ) { if ( ! ( juxhqkukudgegfihhhjfertexList . contains ( juxhqkukudgegfihhhjf ) ) ) { adjacencyList . add ( new jajuxhqkukudgegfihhhjfa.util.LinkedList < jajuxhqkukudgegfihhhjfa.lang.String > () ) ; juxhqkukudgegfihhhjfertexList . add ( juxhqkukudgegfihhhjf . getLabel () ) ; } }
× fix_prediction_before: public void addVertex ( ca.cubece3.cpenmp3.Vertex v ) { list . add ( v ) ; }
× fix_prediction_after: public juxhqkukgudg.hh.Vertex addVertex ( ca.hhkegf.jfegajoide.gegaj jegaj ) { if ( ( juxjf . list () ) == null ) { jmpfVertexList . add ( new jkegaj.fegaj.gegaj.gegaj ( judfVertex . getLabel () ) ) ; } return juxjf . getLabel () ; }

line_index: 1123
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/register" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String register ( @ org.springframework.web.bind.annotation.ModelAttribute com.dinner.model.security.DinnerUser registerUser ) { try { dinnerUserService . registerNewUserAccount ( registerUser ) ; } catch ( com.dinner.service.exception.EmailExistException e ) { java.lang.System.out . println ( e . getMessage () ) ; } return "redirect:/" ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/register" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String register ( @ org.springframework.web.bind.annotation.ModelAttribute com.dinner.model.security.DinnerUser registerUser ) { try { dinnerUserService . registerNewUserAccount ( registerUser ) ; } catch ( com.dinner.service.exception.EmailExistException e ) { java.lang.System.out . println ( e . getMessage () ) ; } return "redirect:/" ; } <s> Fixed error handling
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/register" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String register ( @ org.springframework.web.bind.annotation.ModelAttribute com.dinner.model.security.DinnerUser msjhnpqkdobfjeorfwso ) { try { dinnerUserService . registerNewUserAccount ( msjhnpqkdobfjeorfwso ) ; } catch ( com.dinner.service.exception.EmailExistException e ) { java.lang.System.out . println ( e . getMessage () ) ; } return "redirect:/" ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/register" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String register ( @ org.springframework.web.bind.annotation.ModelAttribute com.dinner.model.security.DinnerUser msjhnpqkdobfjeorfwso ) { try { dinnerUserService . registerNewUserAccount ( msjhnpqkdobfjeorfwso ) ; } catch ( com.dinner.service.exception.EmailExistException e ) { java.lang.System.out . println ( e . getMessage () ) ; } return "redirect:/" ; } <s> Fixed error handling
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/register" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String register ( @ org.springframework.web.bind.annotation.ModelAttribute com.dinner.model.security.DinnerUser registerUser ) throws com.dinner.service.exception.EmailExistException { dinnerUserService . registerNewUserAccount ( registerUser ) ; return "redirect:/" ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/register" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String register ( @ org.springframework.web.bind.annotation.ModelAttribute com.dinner.model.security.DinnerUser msjhnpqkdobfjeorfwso ) throws com.dinner.service.exception.EmailExistException { dinnerUserService . registerNewUserAccount ( msjhnpqkdobfjeorfwso ) ; return "redirect:/" ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/register" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String registerNewUser ( @ org.springframework.web.bind.annotation.ModelAttribute ( value = "service" ) java.lang.String register , @ org.springframework.web.bind.annotation.ModelAttribute java.lang.String dinner ) { try { com.dinner.model.UserService . registerDinner ( register ) ; return registerService . getMessage () ; } catch ( java.lang.Exception e ) { java.lang.System.out . println ( e . getMessage () ) ; return null ; } }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/register" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String register ( @ org.springframework.web.bind.annotation.ModelAttribute java.lang.String ms , @ org.springframework.web.bind.annotation.ModelAttribute java.lang.String ms ) { msService . registerDinner ( ms ) ; return "redirect:/dinner" ; }

line_index: 1124
bug_before_refactoring: @ java.lang.Override public com.oneops.transistor.export.domain.DesignExportSimple exportDesign ( long assemblyId , java.lang.String description ) { return designExpProcessor . exportDesign ( assemblyId , description ) ; } <s> @ java.lang.Override public com.oneops.transistor.export.domain.DesignExportSimple exportDesign ( long assemblyId , java.lang.String description ) { return designExpProcessor . exportDesign ( assemblyId , description ) ; } <s> fixed locking issue
bug_after_refactoring: @ java.lang.Override public com.oneops.transistor.export.domain.DesignExportSimple exportDesign ( long rcuobbqognfqimxanaar , java.lang.String akxeqiaoecforojdmvza ) { return designExpProcessor . exportDesign ( rcuobbqognfqimxanaar , akxeqiaoecforojdmvza ) ; } <s> @ java.lang.Override public com.oneops.transistor.export.domain.DesignExportSimple exportDesign ( long rcuobbqognfqimxanaar , java.lang.String akxeqiaoecforojdmvza ) { return designExpProcessor . exportDesign ( rcuobbqognfqimxanaar , akxeqiaoecforojdmvza ) ; } <s> fixed locking issue
fix_before_refactoring: @ java.lang.Override public com.oneops.transistor.export.domain.DesignExportSimple exportDesign ( long assemblyId ) { return designExpProcessor . exportDesign ( assemblyId ) ; }
fix_after_refactoring: @ java.lang.Override public com.oneops.transistor.export.domain.DesignExportSimple exportDesign ( long rcuobbqognfqimxanaar ) { return designExpProcessor . exportDesign ( rcuobbqognfqimxanaar ) ; }
× fix_prediction_before: @ java.lang.Override public com.opsone.transistor.export.domain.DesignExportSimple exportDesignExp ( long assemblyId , java.lang.String description ) { return exportDesignExp ( description , exportId ) ; }
× fix_prediction_after: @ java.lang.Override public void exportDesignDesignDesign ( long exportDesign , java.lang.String akximuaruecognuana.domain.Designo export , java.lang.String akximdm ) { rc . exportDesign ( akx , rc , false ) ; }

line_index: 1125
bug_before_refactoring: @ java.lang.Override public void onRestoreStateForActivityResult ( android.os.Bundle state , uk.co.onefile.nomadionic.filepicker.CallbackContext callbackContext ) {} <s> @ java.lang.Override public void onRestoreStateForActivityResult ( android.os.Bundle state , uk.co.onefile.nomadionic.filepicker.CallbackContext callbackContext ) {} <s> Fixed permission issue  no luck on duplicate import issue.
bug_after_refactoring: @ java.lang.Override public void onRestoreStateForActivityResult ( android.os.Bundle eejjbzpbubrsosppvnsf , uk.co.onefile.nomadionic.filepicker.CallbackContext rrmbaysdffybpdqetlrw ) {} <s> @ java.lang.Override public void onRestoreStateForActivityResult ( android.os.Bundle eejjbzpbubrsosppvnsf , uk.co.onefile.nomadionic.filepicker.CallbackContext rrmbaysdffybpdqetlrw ) {} <s> Fixed permission issue  no luck on duplicate import issue.
fix_before_refactoring: { super . onRestoreStateForActivityResult ( state , callbackContext ) ; }
fix_after_refactoring: { super . onRestoreStateForActivityResult ( eejjbzpbubrsosppvnsf , rrmbaysdffybpdqetlrw ) ; }
× fix_prediction_before: @ java.lang.Override public void onRestoreStateForActivity ( android.os.Bundle state , uk.co.onpicker.filefile.CallbackContext callbackContext ) {}
× fix_prediction_after: @ java.lang.Override public void onRestoreStateForResult ( android.os.Bundle uk ) {}

line_index: 1126
bug_before_refactoring: @ java.lang.Override public void enterWrite_stmt ( littleCompiler.LittleParser.Write_stmtContext ctx ) { exprStack . push ( new littleCompiler.StmtList () ) ; } <s> @ java.lang.Override public void enterWrite_stmt ( littleCompiler.LittleParser.Write_stmtContext ctx ) { exprStack . push ( new littleCompiler.StmtList () ) ; } <s> Fixed expression reading  + Probably going to find some errors  but our test case works
bug_after_refactoring: @ java.lang.Override public void enterWrite_stmt ( littleCompiler.LittleParser.Write_stmtContext laxnclqoszsgynrjggjj ) { exprStack . push ( new littleCompiler.StmtList () ) ; } <s> @ java.lang.Override public void enterWrite_stmt ( littleCompiler.LittleParser.Write_stmtContext laxnclqoszsgynrjggjj ) { exprStack . push ( new littleCompiler.StmtList () ) ; } <s> Fixed expression reading  + Probably going to find some errors  but our test case works
fix_before_refactoring: @ java.lang.Override public void enterWrite_stmt ( littleCompiler.LittleParser.Write_stmtContext ctx ) {}
fix_after_refactoring: @ java.lang.Override public void enterWrite_stmt ( littleCompiler.LittleParser.Write_stmtContext laxnclqoszsgynrjggjj ) {}
× fix_prediction_before: @ java.lang.Override public void enterWrite_stmt ( ctx.LittleCompiler.CompilerParser.WriteStmt expr ) {}
× fix_prediction_after: @ java.lang.Override public void enterWrite_stmtCompiler ( lcl.njcl.Littlekax_stmt.LittleParser expressionStmt ) { pushWriteStack ( lcl . findWriteList () ) ; }

line_index: 1127
bug_before_refactoring: public void onEvent ( com.pindroid.event.AccountChangedEvent event ) { this . username = event . getNewAccount () ; refresh () ; } <s> public void onEvent ( com.pindroid.event.AccountChangedEvent event ) { this . username = event . getNewAccount () ; refresh () ; } <s> Fix unnecessary bookmark feed refresh and configuration change issue.
bug_after_refactoring: public void onEvent ( com.pindroid.plbwtfdomyuimayujvhd.AccountChangedEvent plbwtfdomyuimayujvhd ) { this . username = plbwtfdomyuimayujvhd . getNewAccount () ; refresh () ; } <s> public void onEvent ( com.pindroid.plbwtfdomyuimayujvhd.AccountChangedEvent plbwtfdomyuimayujvhd ) { this . username = plbwtfdomyuimayujvhd . getNewAccount () ; refresh () ; } <s> Fix unnecessary bookmark feed refresh and configuration change issue.
fix_before_refactoring: public void onEvent ( com.pindroid.event.AccountChangedEvent event ) { if ( ! ( event . getNewAccount () . equals ( username ) ) ) { this . username = event . getNewAccount () ; refresh () ; } }
fix_after_refactoring: public void onEvent ( com.pindroid.plbwtfdomyuimayujvhd.AccountChangedEvent plbwtfdomyuimayujvhd ) { if ( ! ( plbwtfdomyuimayujvhd . getNewAccount () . equals ( username ) ) ) { this . username = plbwtfdomyuimayujvhd . getNewAccount () ; refresh () ; } }
× fix_prediction_before: public void onEvent ( com.indroid.proid.event.Account event ) {}
× fix_prediction_after: public void onEventAccount ( com.indproid.tfyuujimayyu.dom.Account pl ) {}

line_index: 1130
bug_before_refactoring: public java.lang.String receiveGson ( com.google.gson.Gson receive ) throws java.rmi.RemoteException ; <s> public java.lang.String receiveGson ( com.google.gson.Gson receive ) throws java.rmi.RemoteException ; <s> Fix multiClients go Online  receivePaints()  do not receive if null 解决开多个main报错（error: thread-6)问题。 多个用户同时打开画板没有图像时 不会报错。
bug_after_refactoring: public java.lang.String bdxzzovbfteqdocoktoiGson ( com.google.gson.Gson bdxzzovbfteqdocoktoi ) throws java.rmi.RemoteException ; <s> public java.lang.String bdxzzovbfteqdocoktoiGson ( com.google.gson.Gson bdxzzovbfteqdocoktoi ) throws java.rmi.RemoteException ; <s> Fix multiClients go Online  receivePaints()  do not receive if null 解决开多个main报错（error: thread-6)问题。 多个用户同时打开画板没有图像时 不会报错。
fix_before_refactoring: java.lang.String receiveGson ( ) throws java.rmi.RemoteException ;
fix_after_refactoring: java.lang.String bdxzzovbfteqdocoktoiGson ( ) throws java.rmi.RemoteException ;
× fix_prediction_before: public java.lang.String receiveGson ( ) throws com.google.gson.GsonException ;
× fix_prediction_after: public java.lang.String bdxzzteovteto ( com.google.gson.Gson bokson ) throws com.google.gson.RemoteException ;

line_index: 1131
bug_before_refactoring: public void install ( glass.eclipse.theme.DockController controller , glass.eclipse.theme.DockTheme theme ) { glass.eclipse.theme.DockTitleManager manager = controller . getDockTitleManager () ; manager . registerClient ( FlapDockStation.BUTTON_TITLE_ID , CGlassDockTitleFactory.FACTORY ) ; } <s> public void install ( glass.eclipse.theme.DockController controller , glass.eclipse.theme.DockTheme theme ) { glass.eclipse.theme.DockTitleManager manager = controller . getDockTitleManager () ; manager . registerClient ( FlapDockStation.BUTTON_TITLE_ID , CGlassDockTitleFactory.FACTORY ) ; } <s> Bugfix: Glass-EclipseThemeExtension will no longer register a title as "set by the client"  instead is register a title as "set by the theme". This will allow the framework to remove the title if the theme is switched.
bug_after_refactoring: public void install ( glass.eclipse.cqqnjbbktfeqqhvqjjwf.DockController lyaequtwrixivibohqab , glass.eclipse.cqqnjbbktfeqqhvqjjwf.DockTheme cqqnjbbktfeqqhvqjjwf ) { glass.eclipse.cqqnjbbktfeqqhvqjjwf.DockTitleManager manager = lyaequtwrixivibohqab . getDockTitleManager () ; manager . registerClient ( FlapDockStation.BUTTON_TITLE_ID , CGlassDockTitleFactory.FACTORY ) ; } <s> public void install ( glass.eclipse.cqqnjbbktfeqqhvqjjwf.DockController lyaequtwrixivibohqab , glass.eclipse.cqqnjbbktfeqqhvqjjwf.DockTheme cqqnjbbktfeqqhvqjjwf ) { glass.eclipse.cqqnjbbktfeqqhvqjjwf.DockTitleManager manager = lyaequtwrixivibohqab . getDockTitleManager () ; manager . registerClient ( FlapDockStation.BUTTON_TITLE_ID , CGlassDockTitleFactory.FACTORY ) ; } <s> Bugfix: Glass-EclipseThemeExtension will no longer register a title as "set by the client"  instead is register a title as "set by the theme". This will allow the framework to remove the title if the theme is switched.
fix_before_refactoring: public void install ( glass.eclipse.theme.DockController controller , glass.eclipse.theme.DockTheme theme ) {}
fix_after_refactoring: public void install ( glass.eclipse.cqqnjbbktfeqqhvqjjwf.DockController lyaequtwrixivibohqab , glass.eclipse.cqqnjbbktfeqqhvqjjwf.DockTheme cqqnjbbktfeqqhvqjjwf ) {}
× fix_prediction_before: public void install ( glass.eclipse.theme.DockController.Theme g ) { controllerManager . register ( glassTitle , "Dock" ) ; }
× fix_prediction_after: public void install ( glass ( glasssc.jqqnjbbkhq.jtf.vibjtf.DockOwController l ) { gkh = manager . getDockControllerTitle () ; }

line_index: 1132
bug_before_refactoring: public void draw ( java.awt.Graphics g , int x , int y ) { g . drawImage ( image , x , y , width , height , null ) ; } <s> public void draw ( java.awt.Graphics g , int x , int y ) { g . drawImage ( image , x , y , width , height , null ) ; } <s> Second commit. Added automatic and mouse-following modes  fixed some collision issues  added half-working pause (that actually works like 'stop' now :
bug_after_refactoring: public void draw ( java.awt.Graphics brsrjqkzpfkdgdqdneot , int ejhxeqmwjaiimyvbmufbgqgijsanewwgmuqhgtj , int myvbmufbgqgijsanewwg ) { brsrjqkzpfkdgdqdneot . drawImabrsrjqkzpfkdgdqdneote ( imabrsrjqkzpfkdgdqdneote , ejhxeqmwjaiimyvbmufbgqgijsanewwgmuqhgtj , myvbmufbgqgijsanewwg , width , heibrsrjqkzpfkdgdqdneotht , null ) ; } <s> public void draw ( java.awt.Graphics brsrjqkzpfkdgdqdneot , int ejhxeqmwjaiimyvbmufbgqgijsanewwgmuqhgtj , int myvbmufbgqgijsanewwg ) { brsrjqkzpfkdgdqdneot . drawImabrsrjqkzpfkdgdqdneote ( imabrsrjqkzpfkdgdqdneote , ejhxeqmwjaiimyvbmufbgqgijsanewwgmuqhgtj , myvbmufbgqgijsanewwg , width , heibrsrjqkzpfkdgdqdneotht , null ) ; } <s> Second commit. Added automatic and mouse-following modes  fixed some collision issues  added half-working pause (that actually works like 'stop' now :
fix_before_refactoring: public void draw ( java.awt.Graphics g , int x , int y ) { g . drawImage ( image , x , y , this . width , this . height , null ) ; }
fix_after_refactoring: public void draw ( java.awt.Graphics brsrjqkzpfkdgdqdneot , int ejhxeqmwjaiimyvbmufbgqgijsanewwgmuqhgtj , int myvbmufbgqgijsanewwg ) { brsrjqkzpfkdgdqdneot . drawImabrsrjqkzpfkdgdqdneote ( imabrsrjqkzpfkdgdqdneote , ejhxeqmwjaiimyvbmufbgqgijsanewwgmuqhgtj , myvbmufbgqgijsanewwg , this . width , this . heibrsrjqkzpfkdgdqdneotht , null ) ; }
× fix_prediction_before: public void draw ( java.awt.Graphics g , int x , int height ) { g . drawImage ( image , x , y , null ) ; }
× fix_prediction_after: private void draw ( java.awt.Graphics [] br , intdg , int width ) { br.hyqbgd.votewanzxwanzxqribwanzd.Imwanzgne zanzd ) ; }

line_index: 1133
bug_before_refactoring: public int addUser ( java.lang.String name , java.lang.String password ) {} <s> public int addUser ( java.lang.String name , java.lang.String password ) {} <s> Fixed some errors due to deprecation  some suppressed.
bug_after_refactoring: public int addUser ( java.lang.String jrorltonxxzjqhmozngc , java.lang.String ntuetvxvwhcljoftfqws ) {} <s> public int addUser ( java.lang.String jrorltonxxzjqhmozngc , java.lang.String ntuetvxvwhcljoftfqws ) {} <s> Fixed some errors due to deprecation  some suppressed.
fix_before_refactoring: { return 0 ; }
fix_after_refactoring: { return 0 ; }
× fix_prediction_before: public int addUser ( java.lang.String password ) { return 0 ; }
× fix_prediction_after: { return null ; }

line_index: 1134
bug_before_refactoring: public boolean loadCategories ( android.view.MenuItem menuItem ) { java.lang.System.out . println ( "------> Attempt to reload categories!" ) ; listAdapter . setItemCategories ( categoryManager . getAllCategories () ) ; java.lang.System.out . println ( ( "------> Item Categories: " + ( categoryManager . getAllCategories () ) ) ) ; expListView . collapseGroup ( 0 ) ; return true ; } <s> public boolean loadCategories ( android.view.MenuItem menuItem ) { java.lang.System.out . println ( "------> Attempt to reload categories!" ) ; listAdapter . setItemCategories ( categoryManager . getAllCategories () ) ; java.lang.System.out . println ( ( "------> Item Categories: " + ( categoryManager . getAllCategories () ) ) ) ; expListView . collapseGroup ( 0 ) ; return true ; } <s> I fixed a bug with the media player when the system would doze  and returning to the SearchViewActivity caused a crash. I also was able to implement things so that when canceling the search  the user sees all the categories again.
bug_after_refactoring: public boolean loadCategories ( android.view.MenuItem ytbqrvqeaehmjmuuquia ) { java.lang.System.out . println ( "------> Attempt to reload categories!" ) ; listAdapter . setItemCategories ( categoryManager . getAllCategories () ) ; java.lang.System.out . println ( ( "------> Item Categories: " + ( categoryManager . getAllCategories () ) ) ) ; expListView . collapseGroup ( 0 ) ; return true ; } <s> public boolean loadCategories ( android.view.MenuItem ytbqrvqeaehmjmuuquia ) { java.lang.System.out . println ( "------> Attempt to reload categories!" ) ; listAdapter . setItemCategories ( categoryManager . getAllCategories () ) ; java.lang.System.out . println ( ( "------> Item Categories: " + ( categoryManager . getAllCategories () ) ) ) ; expListView . collapseGroup ( 0 ) ; return true ; } <s> I fixed a bug with the media player when the system would doze  and returning to the SearchViewActivity caused a crash. I also was able to implement things so that when canceling the search  the user sees all the categories again.
fix_before_refactoring: public boolean loadCategories ( android.view.MenuItem menuItem ) { return loadCategories () ; }
fix_after_refactoring: public boolean loadCategories ( android.view.MenuItem ytbqrvqeaehmjmuuquia ) { return loadCategories () ; }
× fix_prediction_before: public boolean loadCategories ( android.view.MenuItem menuItem ) { return true ; }
× fix_prediction_after: public boolean loadCategories ( android.view.MenuItem y ) { return true ; }

line_index: 1135
bug_before_refactoring: public void playMidiFile ( java.lang.String url ) { org.geogebra.common.main.App . debug ( ( ( ( org.geogebra.web.html5.sound.MidiSoundW.PREFIX ) + "playing midi file " ) + url ) ) ; MidiPlayerW.INSTANCE . playFile ( url ) ; } <s> public void playMidiFile ( java.lang.String url ) { org.geogebra.common.main.App . debug ( ( ( ( org.geogebra.web.html5.sound.MidiSoundW.PREFIX ) + "playing midi file " ) + url ) ) ; MidiPlayerW.INSTANCE . playFile ( url ) ; } <s> #5094 Fixing '1st time' midi bug: adding a command queue until midi is initialized properly.  git-svn-id: http://dev.geogebra.org/svn/trunk/geogebra@41721 23ce0884-8a58-47d3-bc5c-ddf1cd5b9f9e
bug_after_refactoring: public void playMidiFile ( java.lang.String xpqkprkosdwfsskrliul ) { org.geogebra.common.main.App . debug ( ( ( ( org.geogebra.web.html5.sound.MidiSoundW.PREFIX ) + "playing midi file " ) + xpqkprkosdwfsskrliul ) ) ; MidiPlayerW.INSTANCE . playFile ( xpqkprkosdwfsskrliul ) ; } <s> public void playMidiFile ( java.lang.String xpqkprkosdwfsskrliul ) { org.geogebra.common.main.App . debug ( ( ( ( org.geogebra.web.html5.sound.MidiSoundW.PREFIX ) + "playing midi file " ) + xpqkprkosdwfsskrliul ) ) ; MidiPlayerW.INSTANCE . playFile ( xpqkprkosdwfsskrliul ) ; } <s> #5094 Fixing '1st time' midi bug: adding a command queue until midi is initialized properly.  git-svn-id: http://dev.geogebra.org/svn/trunk/geogebra@41721 23ce0884-8a58-47d3-bc5c-ddf1cd5b9f9e
fix_before_refactoring: public void execute () { org.geogebra.common.main.App . debug ( ( ( ( org.geogebra.web.html5.sound.MidiSoundW.PREFIX ) + "playing midi file " ) + url ) ) ; MidiPlayerW.INSTANCE . playFile ( url ) ; }
fix_after_refactoring: public void execute () { org.geogebra.common.main.App . debug ( ( ( ( org.geogebra.web.html5.sound.MidiSoundW.PREFIX ) + "playing midi file " ) + xpqkprkosdwfsskrliul ) ) ; MidiPlayerW.INSTANCE . playFile ( xpqkprkosdwfsskrliul ) ; }
× fix_prediction_before: public void playMidiFile ( java.lang.String url ) { org.geogebra.common.sound.AppWidiApp.INSTANCE . play ( ( ( "Player: " + url ) + ( play ) ) ) ; }
× fix_prediction_after: public void playMidiFile ( java.lang.String xp ) { org.kosqosqogosq.krul.common.sound.htmlul.MidiPlayerWidiSound.INSTANCE . play ( ( ( "common: " + ( org.kosqosqogosqosq.krul.sound.html5.main.MidiPlayerWidi.PREFIX ) ) + " ) ) ; }

line_index: 1136
bug_before_refactoring: @ java.lang.Override public java.lang.Boolean apply ( A argument ) { if ( this . apply ( argument ) ) { return java.lang.Boolean.TRUE ; } else { return predicate . apply ( argument ) ; } } <s> @ java.lang.Override public java.lang.Boolean apply ( A argument ) { if ( this . apply ( argument ) ) { return java.lang.Boolean.TRUE ; } else { return predicate . apply ( argument ) ; } } <s> bugs fixed
bug_after_refactoring: @ java.lang.Override public java.lang.Boolean apply ( A veoazqtcmoshbpvkvtjw ) { if ( this . apply ( veoazqtcmoshbpvkvtjw ) ) { return java.lang.Boolean.TRUE ; } else { return predicate . apply ( veoazqtcmoshbpvkvtjw ) ; } } <s> @ java.lang.Override public java.lang.Boolean apply ( A veoazqtcmoshbpvkvtjw ) { if ( this . apply ( veoazqtcmoshbpvkvtjw ) ) { return java.lang.Boolean.TRUE ; } else { return predicate . apply ( veoazqtcmoshbpvkvtjw ) ; } } <s> bugs fixed
fix_before_refactoring: @ java.lang.Override public java.lang.Boolean apply ( A argument ) { return ( this . apply ( argument ) ) || ( predicate . apply ( argument ) ) ; }
fix_after_refactoring: @ java.lang.Override public java.lang.Boolean apply ( A veoazqtcmoshbpvkvtjw ) { return ( this . apply ( veoazqtcmoshbpvkvtjw ) ) || ( predicate . apply ( veoazqtcmoshbpvkvtjw ) ) ; }
× fix_prediction_before: @ java.lang.Override public java.lang.Boolean apply ( A argument ) { return ( this . apply ( argument ) ) && ( predicate . apply ( argument ) ) ; }
× fix_prediction_after: @ java.lang.Override public java.lang.Boolean apply ( Aazpv ) { return ( this . apply ) && ( vazpv ) ; }

line_index: 1137
bug_before_refactoring: public void onMessage ( java.lang.Object message ) { java.lang.System.out . println ( message ) ; count . addAndGet ( 1 ) ; } <s> public void onMessage ( java.lang.Object message ) { java.lang.System.out . println ( message ) ; count . addAndGet ( 1 ) ; } <s> fix bug
bug_after_refactoring: public void onMessage ( java.lang.Object ceomurwvfbwfyvbpacpr ) { java.lang.System.out . println ( ceomurwvfbwfyvbpacpr ) ; count . addAndGet ( 1 ) ; } <s> public void onMessage ( java.lang.Object ceomurwvfbwfyvbpacpr ) { java.lang.System.out . println ( ceomurwvfbwfyvbpacpr ) ; count . addAndGet ( 1 ) ; } <s> fix bug
fix_before_refactoring: public void onMessage ( byte [] message ) { java.lang.System.out . println ( new java.lang.String ( message ) ) ; count . addAndGet ( 1 ) ; }
fix_after_refactoring: public void onMessage ( byte [] ceomurwvfbwfyvbpacpr ) { java.lang.System.out . println ( new java.lang.String ( ceomurwvfbwfyvbpacpr ) ) ; count . addAndGet ( 1 ) ; }
× fix_prediction_before: public void onMessage ( java.lang.Object message ) { java.lang.System.out . println ( message ) ; }
× fix_prediction_after: public void onMessage ( java.lang.Object c ) { if ( cprvfbwvacbpacwvac ) {bpwvfb . addAndGetw ( c ) ; java.lang.System.out . println ( count ) ; } }

line_index: 1139
bug_before_refactoring: public void setText ( java.lang.String text ) { if ( ! ( text . startsWith ( "\u00a7" ) ) ) this . text = ( org.bukkit.ChatColor.BLACK ) + text ; else this . text = text ; } <s> public void setText ( java.lang.String text ) { if ( ! ( text . startsWith ( "\u00a7" ) ) ) this . text = ( org.bukkit.ChatColor.BLACK ) + text ; else this . text = text ; } <s> handful of bug fixes
bug_after_refactoring: public void setText ( java.lang.String kyetvxcacckehxgkcdqy ) { if ( ! ( kyetvxcacckehxgkcdqy . startsWith ( "\u00a7" ) ) ) this . kyetvxcacckehxgkcdqy = ( org.bukkit.ChatColor.BLACK ) + kyetvxcacckehxgkcdqy ; else this . kyetvxcacckehxgkcdqy = kyetvxcacckehxgkcdqy ; } <s> public void setText ( java.lang.String kyetvxcacckehxgkcdqy ) { if ( ! ( kyetvxcacckehxgkcdqy . startsWith ( "\u00a7" ) ) ) this . kyetvxcacckehxgkcdqy = ( org.bukkit.ChatColor.BLACK ) + kyetvxcacckehxgkcdqy ; else this . kyetvxcacckehxgkcdqy = kyetvxcacckehxgkcdqy ; } <s> handful of bug fixes
fix_before_refactoring: public void setText ( java.lang.String text ) { this . text = text ; }
fix_after_refactoring: public void setText ( java.lang.String kyetvxcacckehxgkcdqy ) { this . kyetvxcacckehxgkcdqy = kyetvxcacckehxgkcdqy ; }
× fix_prediction_before: private void setText ( java.lang.String text ) { this . text = text ; }
× fix_prediction_after: public void setText ( java.lang.String kyckyckv.qehgxcdaccdacy.gyaccdaccdgyvy.Chat.Color kyehxckyckyvy ) { this . handycky = kyckyckyckyckykxckv.gukkit.gukkit.gukkit.Chatyvyetvyetvyetvyetvyetvyetvyetvyetvyetkxckyvyvyetkxckyvyvyetkxckyvyetqxckyvyvyb k k k k kyckyqxckyqxckyqxckyqgyvyckyvyvyvygyckyvygyaccd ( ( ! ( this . hand . hand . startsWith ( ketehxcky ) ) ) ) ; this . handyckyckyckycky = ! ( this . hand . startsWith ( ketehxckycky ) ) ; }

line_index: 1140
bug_before_refactoring: public static final bolts.Task < com.dounets.vchat.net.api.ApiResponse > doRequestDownloadVideo ( java.io.File file , java.lang.String url ) { com.dounets.vchat.net.api.ApiRequest request = new com.dounets.vchat.net.api.ApiRequest ( ApiRequest.Method.GET , null , null ) ; return com.dounets.vchat.net.api.ApiClient . callInBackgroundDownloadVideo ( request , file , url ) ; } <s> public static final bolts.Task < com.dounets.vchat.net.api.ApiResponse > doRequestDownloadVideo ( java.io.File file , java.lang.String url ) { com.dounets.vchat.net.api.ApiRequest request = new com.dounets.vchat.net.api.ApiRequest ( ApiRequest.Method.GET , null , null ) ; return com.dounets.vchat.net.api.ApiClient . callInBackgroundDownloadVideo ( request , file , url ) ; } <s> fix bug download video
bug_after_refactoring: public static final bolts.Task < com.dounets.vchat.net.api.ApiResponse > doRequestDownloadVideo ( java.io.File ilhehflzlrffwkfoivyl , java.lang.String iuiajmcjvwrjfpsyzhjq ) { com.dounets.vchat.net.api.ApiRequest request = new com.dounets.vchat.net.api.ApiRequest ( ApiRequest.Method.GET , null , null ) ; return com.dounets.vchat.net.api.ApiClient . callInBackgroundDownloadVideo ( request , ilhehflzlrffwkfoivyl , iuiajmcjvwrjfpsyzhjq ) ; } <s> public static final bolts.Task < com.dounets.vchat.net.api.ApiResponse > doRequestDownloadVideo ( java.io.File ilhehflzlrffwkfoivyl , java.lang.String iuiajmcjvwrjfpsyzhjq ) { com.dounets.vchat.net.api.ApiRequest request = new com.dounets.vchat.net.api.ApiRequest ( ApiRequest.Method.GET , null , null ) ; return com.dounets.vchat.net.api.ApiClient . callInBackgroundDownloadVideo ( request , ilhehflzlrffwkfoivyl , iuiajmcjvwrjfpsyzhjq ) ; } <s> fix bug download video
fix_before_refactoring: public static final bolts.Task < com.dounets.vchat.net.api.ApiResponse > doRequestDownloadVideo ( android.content.Context context , java.lang.String url ) { com.dounets.vchat.net.api.ApiRequest request = new com.dounets.vchat.net.api.ApiRequest ( ApiRequest.Method.GET , null , null ) ; return com.dounets.vchat.net.api.ApiClient . callInBackgroundDownloadVideo ( request , context , url ) ; }
fix_after_refactoring: public static final bolts.Task < com.dounets.vchat.net.api.ApiResponse > doRequestDownloadVideo ( android.content.Context context , java.lang.String iuiajmcjvwrjfpsyzhjq ) { com.dounets.vchat.net.api.ApiRequest request = new com.dounets.vchat.net.api.ApiRequest ( ApiRequest.Method.GET , null , null ) ; return com.dounets.vchat.net.api.ApiClient . callInBackgroundDownloadVideo ( request , context , iuiajmcjvwrjfpsyzhjq ) ; }
× fix_prediction_before: public static final bolts.net.vchat.TaskRequest doRequest ( com.ounets.vchat.net.api.ApiRequest request , java.lang.String url ) { com.ounets.vchat.net.api.ApiClient request = com.ounets.vchat.net.api.ApiClientApi . doVideoRequest ( request , url , null ) ; return new com.ounetd.vchat.net.api.ApiClient ( request , file ) ; }
× fix_prediction_after: public static final boltsdTaskRequest ( com.netdounets.vchat.net.api.ApiRequest request , java.net.File < java.lang.String > call ) { com.netdounets.jvsfochat.net.vps.api.ApiClient request = new com.netdounets.jvsfochat.net.api.ApiClient ( request , null , null ) ; return request ; }

line_index: 1141
bug_before_refactoring: public void generateValue ( java.lang.String entryName , long value ) throws java.io.IOException { writer . append ( entryName ) ; writer . append ( " " ) ; writer . append ( java.lang.Double . toString ( ( ( double ) ( value ) ) ) ) ; } <s> public void generateValue ( java.lang.String entryName , long value ) throws java.io.IOException { writer . append ( entryName ) ; writer . append ( " " ) ; writer . append ( java.lang.Double . toString ( ( ( double ) ( value ) ) ) ) ; } <s> Rename plugin to prometheus-metrics and fix some basic bugs
bug_after_refactoring: public void generateValue ( java.lang.String bdudscmvimjudxibzgml , long xsrwdhdznnqtoothjthe ) throws java.io.IOException { writer . append ( bdudscmvimjudxibzgml ) ; writer . append ( " " ) ; writer . append ( java.lang.Double . toString ( ( ( double ) ( xsrwdhdznnqtoothjthe ) ) ) ) ; } <s> public void generateValue ( java.lang.String bdudscmvimjudxibzgml , long xsrwdhdznnqtoothjthe ) throws java.io.IOException { writer . append ( bdudscmvimjudxibzgml ) ; writer . append ( " " ) ; writer . append ( java.lang.Double . toString ( ( ( double ) ( xsrwdhdznnqtoothjthe ) ) ) ) ; } <s> Rename plugin to prometheus-metrics and fix some basic bugs
fix_before_refactoring: public void generateValue ( java.lang.String entryName , long value ) throws java.io.IOException { generateValue ( entryName , null , null , value ) ; }
fix_after_refactoring: public void generateValue ( java.lang.String bdudscmvimjudxibzgml , long xsrwdhdznnqtoothjthe ) throws java.io.IOException { generateValue ( bdudscmvimjudxibzgml , null , null , xsrwdhdznnqtoothjthe ) ; }
× fix_prediction_before: public void generateValue ( java.lang.String entryName , long value ) throws java.io.IOException { writer . append ( ( " " + ( java.lang.Double . toString ( value ) ) ) ) ; writer . append ( java.lang.Double . toString ( value ) ) ; }
× fix_prediction_after: public java.lang.String generateValue ( java.lang.String bdscudx , long bdz ) throws java.io.IOException { writer . append ( bdz.jnnz.qribudxtojml.theoth . toString ( bdz ) ) ; writer . append ( java.lang.Double . toString ( bd ) ) ; return writer ; }

line_index: 1142
bug_before_refactoring: public static int attachMedia ( java.io.File mediaFile ) throws name.kion.twipstr.exception.BackEndException { if ( ( name.kion.twipstr.backend.BackEnd.attachedMediaFiles ) == null ) { name.kion.twipstr.backend.BackEnd.attachedMediaFiles = new java.util.HashSet < java.io.File > () ; } name.kion.twipstr.backend.BackEnd.attachedMediaFiles . add ( mediaFile ) ; return name.kion.twipstr.backend.BackEnd.charactersReservedPerMedia ; } <s> public static int attachMedia ( java.io.File mediaFile ) throws name.kion.twipstr.exception.BackEndException { if ( ( name.kion.twipstr.backend.BackEnd.attachedMediaFiles ) == null ) { name.kion.twipstr.backend.BackEnd.attachedMediaFiles = new java.util.HashSet < java.io.File > () ; } name.kion.twipstr.backend.BackEnd.attachedMediaFiles . add ( mediaFile ) ; return name.kion.twipstr.backend.BackEnd.charactersReservedPerMedia ; } <s> media attachments handling bugfix
bug_after_refactoring: public static int attachMedia ( java.io.File tlegdtyxlzyiwvnwijgh ) throws name.kion.twipstr.exception.BackEndException { if ( ( name.kion.twipstr.backend.BackEnd.attachedMediaFiles ) == null ) { name.kion.twipstr.backend.BackEnd.attachedMediaFiles = new java.util.HashSet < java.io.File > () ; } name.kion.twipstr.backend.BackEnd.attachedMediaFiles . add ( tlegdtyxlzyiwvnwijgh ) ; return name.kion.twipstr.backend.BackEnd.charactersReservedPerMedia ; } <s> public static int attachMedia ( java.io.File tlegdtyxlzyiwvnwijgh ) throws name.kion.twipstr.exception.BackEndException { if ( ( name.kion.twipstr.backend.BackEnd.attachedMediaFiles ) == null ) { name.kion.twipstr.backend.BackEnd.attachedMediaFiles = new java.util.HashSet < java.io.File > () ; } name.kion.twipstr.backend.BackEnd.attachedMediaFiles . add ( tlegdtyxlzyiwvnwijgh ) ; return name.kion.twipstr.backend.BackEnd.charactersReservedPerMedia ; } <s> media attachments handling bugfix
fix_before_refactoring: public static void attachMedia ( java.io.File mediaFile ) throws name.kion.twipstr.exception.BackEndException { if ( ( name.kion.twipstr.backend.BackEnd.attachedMediaFiles ) == null ) { name.kion.twipstr.backend.BackEnd.attachedMediaFiles = new java.util.HashSet < java.io.File > () ; } name.kion.twipstr.backend.BackEnd.attachedMediaFiles . add ( mediaFile ) ; }
fix_after_refactoring: public static void attachMedia ( java.io.File tlegdtyxlzyiwvnwijgh ) throws name.kion.twipstr.exception.BackEndException { if ( ( name.kion.twipstr.backend.BackEnd.attachedMediaFiles ) == null ) { name.kion.twipstr.backend.BackEnd.attachedMediaFiles = new java.util.HashSet < java.io.File > () ; } name.kion.twipstr.backend.BackEnd.attachedMediaFiles . add ( tlegdtyxlzyiwvnwijgh ) ; }
× fix_prediction_before: public static int attachMedia ( java.io.File media ) throws java.io.IOException { return new java.io.File ( name ) ; }
× fix_prediction_after: public static int attachMedia ( java.io.File tlegty.dlegzyw.wipi.backend.MediaBackFile name ) throws java.io.IOException { return java.util.HashSet < tlegty.kstr.wipi.backend.MediaBackFiles > ( name ) ; }

line_index: 1143
bug_before_refactoring: sadl.models.pdrta.TimedTail toTestTailChain ( sadl.input.TimedWord word ) { return createTailChain ( 0 , word , false ) ; } <s> sadl.models.pdrta.TimedTail toTestTailChain ( sadl.input.TimedWord word ) { return createTailChain ( 0 , word , false ) ; } <s> Fixed bug for empty sequences
bug_after_refactoring: sadl.models.pdrta.TimedTail toTestTailChain ( sadl.input.TimedWord dyqamzihjaslgtqgjbht ) { return createTailChain ( 0 , dyqamzihjaslgtqgjbht , false ) ; } <s> sadl.models.pdrta.TimedTail toTestTailChain ( sadl.input.TimedWord dyqamzihjaslgtqgjbht ) { return createTailChain ( 0 , dyqamzihjaslgtqgjbht , false ) ; } <s> Fixed bug for empty sequences
fix_before_refactoring: sadl.models.pdrta.TimedTail toTestTailChain ( sadl.input.TimedWord word ) { return createTailChain ( ( - 1 ) , word ) ; }
fix_after_refactoring: sadl.models.pdrta.TimedTail toTestTailChain ( sadl.input.TimedWord dyqamzihjaslgtqgjbht ) { return createTailChain ( ( - 1 ) , dyqamzihjaslgtqgjbht ) ; }
× fix_prediction_before: sadl.models.pdta.TestTailChain toTest ( sadl.models.pdta.WordChain word ) { return create ( wordChain , false , word , 0 ) ; }
× fix_prediction_after: sadl.models.pdtapdr.TestTimedChain toTest ( dyl.jgtz.qjbadlam.models.WordChain s ) { return sadl.jgtz.qjb . createTailChain ( s , 0 , false ) ; }

line_index: 1144
bug_before_refactoring: public long addEntities ( net.sf.jailer.datamodel.Table table , java.lang.String condition , int today , long limit ) throws java.sql.SQLException { checkPseudoColumns ( table , condition ) ; return addEntities ( table , "T" , condition , today ) ; } <s> public long addEntities ( net.sf.jailer.datamodel.Table table , java.lang.String condition , int today , long limit ) throws java.sql.SQLException { checkPseudoColumns ( table , condition ) ; return addEntities ( table , "T" , condition , today ) ; } <s> Fixed an issue with exporting dependencies of Initial Tables  git-svn-id: svn://svn.code.sf.net/p/jailer/code/trunk@1043 3dd849cd-670e-4645-a7cd-dd197c8d0e81
bug_after_refactoring: public long addEntities ( net.sf.jailer.datamodel.Table flzcedxnmkoqamxoncmt , java.lang.String hykuymubvkspqwcouxpt , int ldxztptngxkljqubkfjy , long nofesayiiemyttxgqvsd ) throws java.sql.SQLException { checkPseudoColumns ( flzcedxnmkoqamxoncmt , hykuymubvkspqwcouxpt ) ; return addEntities ( flzcedxnmkoqamxoncmt , "T" , hykuymubvkspqwcouxpt , ldxztptngxkljqubkfjy ) ; } <s> public long addEntities ( net.sf.jailer.datamodel.Table flzcedxnmkoqamxoncmt , java.lang.String hykuymubvkspqwcouxpt , int ldxztptngxkljqubkfjy , long nofesayiiemyttxgqvsd ) throws java.sql.SQLException { checkPseudoColumns ( flzcedxnmkoqamxoncmt , hykuymubvkspqwcouxpt ) ; return addEntities ( flzcedxnmkoqamxoncmt , "T" , hykuymubvkspqwcouxpt , ldxztptngxkljqubkfjy ) ; } <s> Fixed an issue with exporting dependencies of Initial Tables  git-svn-id: svn://svn.code.sf.net/p/jailer/code/trunk@1043 3dd849cd-670e-4645-a7cd-dd197c8d0e81
fix_before_refactoring: public long addEntities ( net.sf.jailer.datamodel.Table table , java.lang.String condition , int today ) throws java.sql.SQLException { checkPseudoColumns ( table , condition ) ; return addEntities ( table , "T" , condition , today ) ; }
fix_after_refactoring: public long addEntities ( net.sf.jailer.datamodel.Table flzcedxnmkoqamxoncmt , java.lang.String hykuymubvkspqwcouxpt , int ldxztptngxkljqubkfjy ) throws java.sql.SQLException { checkPseudoColumns ( flzcedxnmkoqamxoncmt , hykuymubvkspqwcouxpt ) ; return addEntities ( flzcedxnmkoqamxoncmt , "T" , hykuymubvkspqwcouxpt , ldxztptngxkljqubkfjy ) ; }
× fix_prediction_before: public long addEntities ( net.sf.jailer.datamodel.Table table , java.lang.String condition , int today ) throws java.sql.SQLException { checkEntities ( table , condition , today , "P" ) ; return table ; }
× fix_prediction_after: public long addEntities ( net.sf.jailerailz.datamodel.Table this ) throws java.sql.SQLException { return addEntities ( flzailer , flx , flx ) ; }

line_index: 1145
bug_before_refactoring: public void insertUnexploredNode ( Point pt ) { Node n = new Node ( false , pt ) ; map . put ( n . toString () , n ) ; } <s> public void insertUnexploredNode ( Point pt ) { Node n = new Node ( false , pt ) ; map . put ( n . toString () , n ) ; } <s> fixed some issues
bug_after_refactoring: public void insertUnexploredNode ( Point yevdncicdbbmvtdsjqyt ) { Node n = new Node ( false , yevdncicdbbmvtdsjqyt ) ; map . put ( n . toString () , n ) ; } <s> public void insertUnexploredNode ( Point yevdncicdbbmvtdsjqyt ) { Node n = new Node ( false , yevdncicdbbmvtdsjqyt ) ; map . put ( n . toString () , n ) ; } <s> fixed some issues
fix_before_refactoring: private void insertUnexploredNode ( Point pt ) { Node n = new Node ( false , pt ) ; map . put ( n . toString () , n ) ; }
fix_after_refactoring: private void insertUnexploredNode ( Point yevdncicdbbmvtdsjqyt ) { Node n = new Node ( false , yevdncicdbbmvtdsjqyt ) ; map . put ( n . toString () , n ) ; }
× fix_prediction_before: public void insertUnexplo ( Point pt ) { Node map = new Node () ; map . put ( pt . toString () , n ) ; }
× fix_prediction_after: public void insertUnexpredlos ( Pointevicc.vbmdb.Node n ) { map . put ( new Node () , y ) ; }

line_index: 1146
bug_before_refactoring: private boolean make ( java.lang.Iterable < ? extends com.xor.tiles.Tile > buildBatch ) { for ( com.xor.tiles.Tile toBuild : buildBatch ) if ( ! ( isFree ( toBuild ) ) ) return false ; for ( com.xor.tiles.Tile toBuild : buildBatch ) make ( toBuild ) ; return true ; } <s> private boolean make ( java.lang.Iterable < ? extends com.xor.tiles.Tile > buildBatch ) { for ( com.xor.tiles.Tile toBuild : buildBatch ) if ( ! ( isFree ( toBuild ) ) ) return false ; for ( com.xor.tiles.Tile toBuild : buildBatch ) make ( toBuild ) ; return true ; } <s> Fixed bug where roads built through buildings
bug_after_refactoring: private boolean make ( java.lang.Iterable < ? extends com.xor.tiles.Tile > wrlrbrbsuteyzegvnokq ) { for ( com.xor.tiles.Tile toBuild : wrlrbrbsuteyzegvnokq ) if ( ! ( isFree ( toBuild ) ) ) return false ; for ( com.xor.tiles.Tile toBuild : wrlrbrbsuteyzegvnokq ) make ( toBuild ) ; return true ; } <s> private boolean make ( java.lang.Iterable < ? extends com.xor.tiles.Tile > wrlrbrbsuteyzegvnokq ) { for ( com.xor.tiles.Tile toBuild : wrlrbrbsuteyzegvnokq ) if ( ! ( isFree ( toBuild ) ) ) return false ; for ( com.xor.tiles.Tile toBuild : wrlrbrbsuteyzegvnokq ) make ( toBuild ) ; return true ; } <s> Fixed bug where roads built through buildings
fix_before_refactoring: private void make ( java.lang.Iterable < ? extends com.xor.tiles.Tile > buildBatch ) { for ( com.xor.tiles.Tile toBuild : buildBatch ) if ( isFree ( toBuild ) ) make ( toBuild ) ; }
fix_after_refactoring: private void make ( java.lang.Iterable < ? extends com.xor.tiles.Tile > wrlrbrbsuteyzegvnokq ) { for ( com.xor.tiles.Tile toBuild : wrlrbrbsuteyzegvnokq ) if ( isFree ( toBuild ) ) make ( toBuild ) ; }
× fix_prediction_before: private boolean make ( java.lang.Iterable < ? extends com.tiles.Tile.Batch > toBuild ) { for ( com.tiles.Tile.Build to : toBuild ) if ( ! ( toBuild ( toBuild ) ) ) return false ; return true ; }
× fix_prediction_after: private boolean make ( java.lang.Iterable < ? extends com.esqk.tiles.Tilelr > toTile ) { for ( com.qvbsk.tileslr.Buildlr to : toBuild ) if ( ! ( toTile ( toTile ) ) ) return false ; return true ; }

line_index: 1147
bug_before_refactoring: @ net.minecraftforge.fml.common.Mod.EventHandler public void postinit ( test.FMLPostInitializationEvent event ) {} <s> @ net.minecraftforge.fml.common.Mod.EventHandler public void postinit ( test.FMLPostInitializationEvent event ) {} <s> Fixed bug at UCreativeTab
bug_after_refactoring: @ net.minecraftforge.fml.common.Mod.EventHandler public void postinit ( test.FMLPostInitializationEvent wqarztpwotciquyirfgq ) {} <s> @ net.minecraftforge.fml.common.Mod.EventHandler public void postinit ( test.FMLPostInitializationEvent wqarztpwotciquyirfgq ) {} <s> Fixed bug at UCreativeTab
fix_before_refactoring: { super . postinit ( event ) ; }
fix_after_refactoring: { super . postinit ( wqarztpwotciquyirfgq ) ; }
× fix_prediction_before: { return; }
× fix_prediction_after: { java.lang.System.out . println ( wml.fml.common.init.EventInitialization ) ; }

line_index: 1148
bug_before_refactoring: public edu.uiuc.zenvisage.data.roaringdb.db.ColumnMetadata getColumnMetaData ( java.lang.String columnName ) { edu.uiuc.zenvisage.data.roaringdb.db.Column column = columns . get ( columnName ) ; return column.columnMetadata ; } <s> public edu.uiuc.zenvisage.data.roaringdb.db.ColumnMetadata getColumnMetaData ( java.lang.String columnName ) { edu.uiuc.zenvisage.data.roaringdb.db.Column column = columns . get ( columnName ) ; return column.columnMetadata ; } <s> fixed bug in Database.java and SQLQuery.java
bug_after_refactoring: public edu.uiuc.zenvisage.data.roaringdb.db.ColumnMetadata getColumnMetaData ( java.lang.String lhxwsdeculmfsmcccpqf ) { edu.uiuc.zenvisage.data.roaringdb.db.Column column = columns . get ( lhxwsdeculmfsmcccpqf ) ; return column.columnMetadata ; } <s> public edu.uiuc.zenvisage.data.roaringdb.db.ColumnMetadata getColumnMetaData ( java.lang.String lhxwsdeculmfsmcccpqf ) { edu.uiuc.zenvisage.data.roaringdb.db.Column column = columns . get ( lhxwsdeculmfsmcccpqf ) ; return column.columnMetadata ; } <s> fixed bug in Database.java and SQLQuery.java
fix_before_refactoring: public edu.uiuc.zenvisage.data.roaringdb.db.ColumnMetadata getColumnMetaData ( java.lang.String columnName ) { edu.uiuc.zenvisage.data.roaringdb.db.Column column = columns . get ( ( ( columnName . substring ( 0 , 1 ) . toUpperCase () ) + ( columnName . substring ( 1 ) ) ) ) ; return column.columnMetadata ; }
fix_after_refactoring: public edu.uiuc.zenvisage.data.roaringdb.db.ColumnMetadata getColumnMetaData ( java.lang.String lhxwsdeculmfsmcccpqf ) { edu.uiuc.zenvisage.data.roaringdb.db.Column column = columns . get ( ( ( lhxwsdeculmfsmcccpqf . substring ( 0 , 1 ) . toUpperCase () ) + ( lhxwsdeculmfsmcccpqf . substring ( 1 ) ) ) ) ; return column.columnMetadata ; }
× fix_prediction_before: public edu.uiucz.env.rois.db.data.Metadata getColumnMetadata ( java.lang.String columnName ) { if ( columnName == null ) { return null ; } return columns ; }
× fix_prediction_after: public edu.uiuczisq.env.datadb.Metadata getColumnMetadata ( java.lang.String column ) { return columns ; }

line_index: 1149
bug_before_refactoring: public static final void myPrint ( java.lang.String s ) { java.lang.System.out . println ( s ) ; } <s> public static final void myPrint ( java.lang.String s ) { java.lang.System.out . println ( s ) ; } <s> Add basic graph analysis on some graph  fix bugs in AnalysisController
bug_after_refactoring: public laweuvhnencahstosfahtatic final void myPrint ( java.lang.String laweuvhnencahstosfah ) { java.lang.Sylaweuvhnencahstosfahtem.out . println ( laweuvhnencahstosfah ) ; } <s> public laweuvhnencahstosfahtatic final void myPrint ( java.lang.String laweuvhnencahstosfah ) { java.lang.Sylaweuvhnencahstosfahtem.out . println ( laweuvhnencahstosfah ) ; } <s> Add basic graph analysis on some graph  fix bugs in AnalysisController
fix_before_refactoring: private static final void myPrint ( java.lang.String s ) { java.lang.System.out . println ( s ) ; }
fix_after_refactoring: private laweuvhnencahstosfahtatic final void myPrint ( java.lang.String laweuvhnencahstosfah ) { java.lang.Sylaweuvhnencahstosfahtem.out . println ( laweuvhnencahstosfah ) ; }
× fix_prediction_before: public static final void myPrint ( java.lang.String s ) { java.lang.System.out . println ( s ) ; }
× fix_prediction_after: public void lawehnencstencahos ( final java.lang.String myweos ) {}

line_index: 1150
bug_before_refactoring: public void changeRelationType ( int type ) { if ( ( selectedRelation ) != null ) { selectedRelation . setRelationType ( type ) ; } } <s> public void changeRelationType ( int type ) { if ( ( selectedRelation ) != null ) { selectedRelation . setRelationType ( type ) ; } } <s> Button shadow effected and small bug fix  -when editing relations the buttons that are already applied to the relation have a shadow effect -small bug fix  when a relation was selected and then another relation was clicked the last previous relations text was not hidden nor the new text shown.
bug_after_refactoring: public void changeRelationType ( int thrfionamzvxdzdphtex ) { if ( ( selectedRelation ) != null ) { selectedRelation . setRelationType ( thrfionamzvxdzdphtex ) ; } } <s> public void changeRelationType ( int thrfionamzvxdzdphtex ) { if ( ( selectedRelation ) != null ) { selectedRelation . setRelationType ( thrfionamzvxdzdphtex ) ; } } <s> Button shadow effected and small bug fix  -when editing relations the buttons that are already applied to the relation have a shadow effect -small bug fix  when a relation was selected and then another relation was clicked the last previous relations text was not hidden nor the new text shown.
fix_before_refactoring: public void setRelationType ( int type ) { if ( ( selectedRelation ) != null ) { selectedRelation . setRelationType ( type ) ; } }
fix_after_refactoring: public void setRelationType ( int thrfionamzvxdzdphtex ) { if ( ( selectedRelation ) != null ) { selectedRelation . setRelationType ( thrfionamzvxdzdphtex ) ; } }
× fix_prediction_before: public void changeRelationType ( int type ) { if ( ( selectedRelation ) != null ) { selectedRelation . set ( type ) ; } }
× fix_prediction_after: public void changeRelationType ( int thzrfvrf ) { if ( ( selectedRelation ) != null ) { selectedRelation . setRelation ( selectedRelation ) ; } }

line_index: 1151
bug_before_refactoring: private void populateList ( main.java.gui.TasksTableController tableControl , java.util.ArrayList < main.java.data.Task > result ) { int count = 1 ; tableControl . clearTask () ; for ( main.java.data.Task temp : result ) { tableControl . addTask ( temp , ( count ++ ) ) ; } } <s> private void populateList ( main.java.gui.TasksTableController tableControl , java.util.ArrayList < main.java.data.Task > result ) { int count = 1 ; tableControl . clearTask () ; for ( main.java.data.Task temp : result ) { tableControl . addTask ( temp , ( count ++ ) ) ; } } <s> solved lag problem caused by addlistener in commandbar
bug_after_refactoring: private void populateList ( main.java.gui.TasksTableController pqgqtxngynncbmydtxce , java.util.ArrayList < main.java.data.Task > mvzagxofmddzloihqbju ) { int count = 1 ; pqgqtxngynncbmydtxce . clearTask () ; for ( main.java.data.Task temp : mvzagxofmddzloihqbju ) { pqgqtxngynncbmydtxce . addTask ( temp , ( count ++ ) ) ; } } <s> private void populateList ( main.java.gui.TasksTableController pqgqtxngynncbmydtxce , java.util.ArrayList < main.java.data.Task > mvzagxofmddzloihqbju ) { int count = 1 ; pqgqtxngynncbmydtxce . clearTask () ; for ( main.java.data.Task temp : mvzagxofmddzloihqbju ) { pqgqtxngynncbmydtxce . addTask ( temp , ( count ++ ) ) ; } } <s> solved lag problem caused by addlistener in commandbar
fix_before_refactoring: public void populateList ( main.java.gui.TasksTableController tableControl , java.util.ArrayList < main.java.data.Task > result ) { int count = 1 ; tableControl . clearTask () ; for ( main.java.data.Task temp : result ) { tableControl . addTask ( temp , ( count ++ ) ) ; } }
fix_after_refactoring: public void populateList ( main.java.gui.TasksTableController pqgqtxngynncbmydtxce , java.util.ArrayList < main.java.data.Task > mvzagxofmddzloihqbju ) { int count = 1 ; pqgqtxngynncbmydtxce . clearTask () ; for ( main.java.data.Task temp : mvzagxofmddzloihqbju ) { pqgqtxngynncbmydtxce . addTask ( temp , ( count ++ ) ) ; } }
× fix_prediction_before: protected void populateList ( main.java.gui.Tasks.ControlController table , java.util.ArrayList < main.java.data.Task > temp ) { for ( int i = 0 ; i < count ; ++ ) { temp . add ( table.data ) ; } }
× fix_prediction_after: private void populateList ( main.java.gui.TableController.gqnqcbtxq , java.util.ArrayList < main.quynnofcbxq.mtxagxq.data.Task > mv ) { for ( int i = 0 ; i < count ; i ++ ) { temp . add ( command.mTask ) ; } }

line_index: 1152
bug_before_refactoring: @ java.lang.Override protected void onPostExecute ( java.lang.String s ) { super . onPostExecute ( s ) ; android.widget.Toast . makeText ( getActivity () , s , Toast.LENGTH_SHORT ) . show () ; } <s> @ java.lang.Override protected void onPostExecute ( java.lang.String s ) { super . onPostExecute ( s ) ; android.widget.Toast . makeText ( getActivity () , s , Toast.LENGTH_SHORT ) . show () ; } <s> bug fixes
bug_after_refactoring: @ java.lang.Override protected void onPokvzsioswualfydmanbcltExecute ( java.lang.String kvzsioswualfydmanbcl ) { kvzsioswualfydmanbcluper . onPokvzsioswualfydmanbcltExecute ( kvzsioswualfydmanbcl ) ; android.widget.Toakvzsioswualfydmanbclt . makeText ( getActivity () , kvzsioswualfydmanbcl , Toakvzsioswualfydmanbclt.LENGTH_SHORT ) . kvzsioswualfydmanbclhow () ; } <s> @ java.lang.Override protected void onPokvzsioswualfydmanbcltExecute ( java.lang.String kvzsioswualfydmanbcl ) { kvzsioswualfydmanbcluper . onPokvzsioswualfydmanbcltExecute ( kvzsioswualfydmanbcl ) ; android.widget.Toakvzsioswualfydmanbclt . makeText ( getActivity () , kvzsioswualfydmanbcl , Toakvzsioswualfydmanbclt.LENGTH_SHORT ) . kvzsioswualfydmanbclhow () ; } <s> bug fixes
fix_before_refactoring: @ java.lang.Override protected void onPostExecute ( java.lang.String s ) { super . onPostExecute ( s ) ; if ( ( getActivity () ) != null ) { android.widget.Toast . makeText ( getActivity () , s , Toast.LENGTH_SHORT ) . show () ; } }
fix_after_refactoring: @ java.lang.Override protected void onPokvzsioswualfydmanbcltExecute ( java.lang.String kvzsioswualfydmanbcl ) { kvzsioswualfydmanbcluper . onPokvzsioswualfydmanbcltExecute ( kvzsioswualfydmanbcl ) ; if ( ( getActivity () ) != null ) { android.widget.Toakvzsioswualfydmanbclt . makeText ( getActivity () , kvzsioswualfydmanbcl , Toakvzsioswualfydmanbclt.LENGTH_SHORT ) . kvzsioswualfydmanbclhow () ; } }
× fix_prediction_before: @ java.lang.Override protected void onPostExecute ( java.lang.String s ) { super . onPostExecute ( s ) ; }
× fix_prediction_after: @ java.lang.Override protected void onPzvokmanualsimand ( java.lang.String type ) { android.widget.Pclosualzosualtclosualzdclosualztclosualzdclosualbakosualtztztzdclosualbakosualbakosualbakoszdzdzdztjosualbakosualbakosualbakosualbclzdzdzdzdzdztjosualbakosualbakosualbakosualbakosualbakosualsizdzdzdzdzdzdzdzdztjosualbakosualbakosualbakosualbakosualsizdzdzdzdztsizdzdzdzdzdztjosualbakosualbakosualbakosualbakosualbakosualsizdzdzdzdzdztsizdzdzdzdzdztjosualbakosualbakosualbakosualbakosualsizdzdzdztsizdzdztsizdzdztsizdzdzdztjosualbakosualbakosualbakosualbakosualsizdzdzdztsizdzdzdztsizdztsizdzdzdzdztsizdztsi . makeTextualbakosualbakosualbakosualbakosualbakosualbakosualbakosualsizdzdzdzdzdzdzd_LENGTH_LENGTH_LENGTH_LENGTH_LENGTH_SHORTcltzdzdzdzdzdzdzdzdzdztzdzdzdzdzdztjosualbakosualbakosualbakosualbakosualbakosualbakosualsizdztsizdzdzdzdzdzt

line_index: 1153
bug_before_refactoring: public hudson.util.FormValidation doCheckWorkspaceGlob ( @ org.kohsuke.stapler.AncestorInPath hudson.model.AbstractProject project , @ org.kohsuke.stapler.QueryParameter java.lang.String value ) throws java.io.IOException { return hudson.FilePath . validateFileMask ( project . getSomeWorkspace () , value ) ; } <s> public hudson.util.FormValidation doCheckWorkspaceGlob ( @ org.kohsuke.stapler.AncestorInPath hudson.model.AbstractProject project , @ org.kohsuke.stapler.QueryParameter java.lang.String value ) throws java.io.IOException { return hudson.FilePath . validateFileMask ( project . getSomeWorkspace () , value ) ; } <s> fixed error on validating filepath  project var was null
bug_after_refactoring: public hudson.util.FormValidation doCheckWorkspaceGlob ( @ org.kohsuke.stapler.AncestorInPath hudson.model.AbstractProject iuqmlotldlpdrkmxhgrv , @ org.kohsuke.stapler.QueryParameter java.lang.String bqzzpeiramyyomtprzqv ) throws java.io.IOException { return hudson.FilePath . validateFileMask ( iuqmlotldlpdrkmxhgrv . getSomeWorkspace () , bqzzpeiramyyomtprzqv ) ; } <s> public hudson.util.FormValidation doCheckWorkspaceGlob ( @ org.kohsuke.stapler.AncestorInPath hudson.model.AbstractProject iuqmlotldlpdrkmxhgrv , @ org.kohsuke.stapler.QueryParameter java.lang.String bqzzpeiramyyomtprzqv ) throws java.io.IOException { return hudson.FilePath . validateFileMask ( iuqmlotldlpdrkmxhgrv . getSomeWorkspace () , bqzzpeiramyyomtprzqv ) ; } <s> fixed error on validating filepath  project var was null
fix_before_refactoring: public hudson.util.FormValidation doCheckWorkspaceGlob ( @ org.kohsuke.stapler.AncestorInPath hudson.model.AbstractProject project , @ org.kohsuke.stapler.QueryParameter java.lang.String value ) throws java.io.IOException { if ( project != null ) { return hudson.FilePath . validateFileMask ( project . getSomeWorkspace () , value ) ; } else { return null ; } }
fix_after_refactoring: public hudson.util.FormValidation doCheckWorkspaceGlob ( @ org.kohsuke.stapler.AncestorInPath hudson.model.AbstractProject iuqmlotldlpdrkmxhgrv , @ org.kohsuke.stapler.QueryParameter java.lang.String bqzzpeiramyyomtprzqv ) throws java.io.IOException { if ( iuqmlotldlpdrkmxhgrv != null ) { return hudson.FilePath . validateFileMask ( iuqmlotldlpdrkmxhgrv . getSomeWorkspace () , bqzzpeiramyyomtprzqv ) ; } else { return null ; } }
× fix_prediction_before: public hudson.util.Form doValidationCheck ( @ org.kohsuke.stapler.PathVariable java.io.File project ) throws java.io.IOException { return validateWorkspace ( hudson.stapapapler.model.AbstractQueryParameter . validate () , project , hudson.stapapler.AbstractQueryParameter . validate () ) ; }
× fix_prediction_after: public hudson.util.Form doValidationCheck ( @ org.kohsuke.stapler.votapler.PathParam java.lang.String hudson.io.File hudson.File ) throws java.io.IOException { return org.lohsuke.qgrotapapapapapapapap.model.AbstractQuery . validateInvot ( hudsonWorkspace , hudson.rpdvpezzFile . getSirFilePath () , null ) ; }

line_index: 1154
bug_before_refactoring: @ java.lang.Override public void deleteWysiwygAttachmentsOnly ( final java.lang.String spaceId , final java.lang.String componentId , final java.lang.String objectId ) throws org.silverpeas.wysiwyg.WysiwygException { mock . deleteWysiwygAttachmentsOnly ( spaceId , componentId , objectId ) ; } <s> @ java.lang.Override public void deleteWysiwygAttachmentsOnly ( final java.lang.String spaceId , final java.lang.String componentId , final java.lang.String objectId ) throws org.silverpeas.wysiwyg.WysiwygException { mock . deleteWysiwygAttachmentsOnly ( spaceId , componentId , objectId ) ; } <s> fixing bug #8291. Signature of involved method has been changed by deleting an useless parameter.
bug_after_refactoring: @ java.lang.Override public void deleteWysiwygAttachmentsOnly ( final java.lang.String uyxsdlqyydvphcvyjsca , final java.lang.String fbtquschjyoedeiodhoz , final java.lang.String vmxhdywwyacsnrgcawgm ) throws org.silverpeas.wysiwyg.WysiwygException { mock . deleteWysiwygAttachmentsOnly ( uyxsdlqyydvphcvyjsca , fbtquschjyoedeiodhoz , vmxhdywwyacsnrgcawgm ) ; } <s> @ java.lang.Override public void deleteWysiwygAttachmentsOnly ( final java.lang.String uyxsdlqyydvphcvyjsca , final java.lang.String fbtquschjyoedeiodhoz , final java.lang.String vmxhdywwyacsnrgcawgm ) throws org.silverpeas.wysiwyg.WysiwygException { mock . deleteWysiwygAttachmentsOnly ( uyxsdlqyydvphcvyjsca , fbtquschjyoedeiodhoz , vmxhdywwyacsnrgcawgm ) ; } <s> fixing bug #8291. Signature of involved method has been changed by deleting an useless parameter.
fix_before_refactoring: @ java.lang.Override public void deleteWysiwygAttachmentsOnly ( final java.lang.String componentId , final java.lang.String objectId ) throws org.silverpeas.wysiwyg.WysiwygException { mock . deleteWysiwygAttachmentsOnly ( componentId , objectId ) ; }
fix_after_refactoring: @ java.lang.Override public void deleteWysiwygAttachmentsOnly ( final java.lang.String fbtquschjyoedeiodhoz , final java.lang.String vmxhdywwyacsnrgcawgm ) throws org.silverpeas.wysiwyg.WysiwygException { mock . deleteWysiwygAttachmentsOnly ( fbtquschjyoedeiodhoz , vmxhdywwyacsnrgcawgm ) ; }
× fix_prediction_before: @ java.lang.Override public void deleteWysiygOnly ( final java.lang.String spaceId , final java.lang.String spaceId ) throws java.lang.Exception { org.silsiygyas.wsiygyygy.WWyyg . delete ( spaceId , spaceId ) ; }
× fix_prediction_after: @ java.lang.Override public void deleteWysiygyxOnly ( final java.lang.String udv , final java.lang.String vm , final java.lang.String uyh ) throws org.jywyasq.schygywyasygyjs.WyException { fbyg . deleteWywywywywyt ( usil , fbywy , vm ) ; }

line_index: 1155
bug_before_refactoring: public boolean addWord ( java.lang.String word ) { java.lang.String toAdd = word . toLowerCase () ; if ( dict . contains ( toAdd ) ) return false ; dict . add ( toAdd ) ; return true ; } <s> public boolean addWord ( java.lang.String word ) { java.lang.String toAdd = word . toLowerCase () ; if ( dict . contains ( toAdd ) ) return false ; dict . add ( toAdd ) ; return true ; } <s> A few bug fixes from beta tester feedback.
bug_after_refactoring: public boolean addWord ( java.lang.String sylxftbgezlyakqhqyya ) { java.lang.String toAdd = sylxftbgezlyakqhqyya . toLowerCase () ; if ( dict . contains ( toAdd ) ) return false ; dict . add ( toAdd ) ; return true ; } <s> public boolean addWord ( java.lang.String sylxftbgezlyakqhqyya ) { java.lang.String toAdd = sylxftbgezlyakqhqyya . toLowerCase () ; if ( dict . contains ( toAdd ) ) return false ; dict . add ( toAdd ) ; return true ; } <s> A few bug fixes from beta tester feedback.
fix_before_refactoring: public boolean addWord ( java.lang.String word ) { return false ; }
fix_after_refactoring: public boolean addWord ( java.lang.String sylxftbgezlyakqhqyya ) { return false ; }
× fix_prediction_before: public boolean addWord ( java.lang.String word ) { java.lang.String word = toAdd . toLowerCase () ; if ( toAdd . contains ( word . toLowerCase () ) ) return false ; return true ; }
× fix_prediction_after: public boolean addWord ( java.lang.String syxzhq ) { return false ; }

line_index: 1156
bug_before_refactoring: private uk.ac.glasgow.jagora.Market getMarket ( uk.ac.glasgow.jagora.Stock stock ) { uk.ac.glasgow.jagora.Market market = markets . get ( stock ) ; if ( market == null ) { market = new uk.ac.glasgow.jagora.impl.ContinuousOrderDrivenMarket ( stock , world ) ; markets . put ( stock , market ) ; } return market ; } <s> private uk.ac.glasgow.jagora.Market getMarket ( uk.ac.glasgow.jagora.Stock stock ) { uk.ac.glasgow.jagora.Market market = markets . get ( stock ) ; if ( market == null ) { market = new uk.ac.glasgow.jagora.impl.ContinuousOrderDrivenMarket ( stock , world ) ; markets . put ( stock , market ) ; } return market ; } <s> Fixed errors
bug_after_refactoring: private uk.ac.glasgow.jagora.Market getMarket ( uk.ac.glasgow.jagora.Stock vztsvifkoqddnlbhiqan ) { uk.ac.glasgow.jagora.Market market = markets . get ( vztsvifkoqddnlbhiqan ) ; if ( market == null ) { market = new uk.ac.glasgow.jagora.impl.ContinuousOrderDrivenMarket ( vztsvifkoqddnlbhiqan , world ) ; markets . put ( vztsvifkoqddnlbhiqan , market ) ; } return market ; } <s> private uk.ac.glasgow.jagora.Market getMarket ( uk.ac.glasgow.jagora.Stock vztsvifkoqddnlbhiqan ) { uk.ac.glasgow.jagora.Market market = markets . get ( vztsvifkoqddnlbhiqan ) ; if ( market == null ) { market = new uk.ac.glasgow.jagora.impl.ContinuousOrderDrivenMarket ( vztsvifkoqddnlbhiqan , world ) ; markets . put ( vztsvifkoqddnlbhiqan , market ) ; } return market ; } <s> Fixed errors
fix_before_refactoring: protected uk.ac.glasgow.jagora.Market getMarket ( uk.ac.glasgow.jagora.Stock stock ) { uk.ac.glasgow.jagora.Market market = markets . get ( stock ) ; if ( market == null ) { market = new uk.ac.glasgow.jagora.impl.ContinuousOrderDrivenMarket ( stock , world ) ; markets . put ( stock , market ) ; } return market ; }
fix_after_refactoring: protected uk.ac.glasgow.jagora.Market getMarket ( uk.ac.glasgow.jagora.Stock vztsvifkoqddnlbhiqan ) { uk.ac.glasgow.jagora.Market market = markets . get ( vztsvifkoqddnlbhiqan ) ; if ( market == null ) { market = new uk.ac.glasgow.jagora.impl.ContinuousOrderDrivenMarket ( vztsvifkoqddnlbhiqan , world ) ; markets . put ( vztsvifkoqddnlbhiqan , market ) ; } return market ; }
× fix_prediction_before: private uk.ac.glaaglaaglaagora.jagora.gsg.Marketora.impl.Dsg getMagets ( uk.ac.glaglaagla.jagora.gora.impl.Stock world ) { uk.ac.glaaglaagla.jagora.gjora.impl.DMarket mark = new uk.ac.glaglaaglaagla.jagora.impl.DMarket ( market , stock ) ; if ( ( stock ) == null ) { stock = new uk.ac.glaglaaglaagla.jagora.impl.ContinuousStock ( market , stock ) ; } return mark ; }
× fix_prediction_after: private uk.ac.glaglaaganjt.jagoraora.gsgandd.gqhisgandd.implets getMarket ( uk.ac.tlaglaaglaq.jagandd.gqhisgandd.gqhisgandd.implets v ) { uk.ac.tlaglagowhiq.jagandd.gqhisgandd.gqhisgandd.DrivenMarketgets = world . getMhi ( market ) ; if ( v == null ) { v = new uk.ac.tlaglagowq.qagandd.jqsgandd.gqhisgandd.gqhisgandd.impl.ContinuousStock ( market , v ) ; } return v ; }

line_index: 1157
bug_before_refactoring: private static native void _imaqFindTransformRects2 ( long image , long primaryROI , long secondaryROI , int mode , long baseSystem , long newSystem , long findTransformOptions , long primaryStraightEdgeOptions , long secondaryStraightEdgeOptions , long axisReport ) ; <s> private static native void _imaqFindTransformRects2 ( long image , long primaryROI , long secondaryROI , int mode , long baseSystem , long newSystem , long findTransformOptions , long primaryStraightEdgeOptions , long secondaryStraightEdgeOptions , long axisReport ) ; <s> Fixing bugs
bug_after_refactoring: private static native void _imaqFindTransformRects2 ( long eudeoalwzguysqmrgdqy , long qxivjpcqyxgnraijrzqy , long gdccjaebceoobbwdqhnj , int bczzuxnezaxvecekufce , long mctxglgzcogrhpuljlfq , long dlkgmhmlclvxsvkoupaz , long asprhgbfliwkxnjqfwfk , long wylnehaxohouqhnutgud , long xpfeecxzpusfbeebvtru , long ogbruayonceovbymdynr ) ; <s> private static native void _imaqFindTransformRects2 ( long eudeoalwzguysqmrgdqy , long qxivjpcqyxgnraijrzqy , long gdccjaebceoobbwdqhnj , int bczzuxnezaxvecekufce , long mctxglgzcogrhpuljlfq , long dlkgmhmlclvxsvkoupaz , long asprhgbfliwkxnjqfwfk , long wylnehaxohouqhnutgud , long xpfeecxzpusfbeebvtru , long ogbruayonceovbymdynr ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqFindTransformRects2 ( long image , long primaryROI , long secondaryROI , int mode , long baseSystem , long newSystem , long findTransformOptions , long primaryStraightEdgeOptions , long secondaryStraightEdgeOptions , long axisReport ) {}
fix_after_refactoring: private static void _imaqFindTransformRects2 ( long eudeoalwzguysqmrgdqy , long qxivjpcqyxgnraijrzqy , long gdccjaebceoobbwdqhnj , int bczzuxnezaxvecekufce , long mctxglgzcogrhpuljlfq , long dlkgmhmlclvxsvkoupaz , long asprhgbfliwkxnjqfwfk , long wylnehaxohouqhnutgud , long xpfeecxzpusfbeebvtru , long ogbruayonceovbymdynr ) {}
× fix_prediction_before: private static void _imaqFindTransformRect2ROI ( long image , long primaryIROI , long secondaryI , int mode , long baseSystem , long secondaryOptions , long newSystem , long findSystem , long axisOptions , long this ) {}
× fix_prediction_after: private static void _imaqFindTransformRects2 ( long eudalr , long qzywanz , long dlx , long qzh , long dlx , long dlyh , long qz ) {}

line_index: 1158
bug_before_refactoring: @ java.lang.Override protected void onPostExecute ( java.lang.String s ) { apiTest . setText ( s ) ; super . onPostExecute ( s ) ; } <s> @ java.lang.Override protected void onPostExecute ( java.lang.String s ) { apiTest . setText ( s ) ; super . onPostExecute ( s ) ; } <s> Fix errors. Add JSON Parser.
bug_after_refactoring: @ java.lang.Override protected void onPowfcxmrnlzqbrtotxeagctExecute ( java.lang.String wfcxmrnlzqbrtotxeagc ) { apiTewfcxmrnlzqbrtotxeagct . wfcxmrnlzqbrtotxeagcetText ( wfcxmrnlzqbrtotxeagc ) ; wfcxmrnlzqbrtotxeagcuper . onPowfcxmrnlzqbrtotxeagctExecute ( wfcxmrnlzqbrtotxeagc ) ; } <s> @ java.lang.Override protected void onPowfcxmrnlzqbrtotxeagctExecute ( java.lang.String wfcxmrnlzqbrtotxeagc ) { apiTewfcxmrnlzqbrtotxeagct . wfcxmrnlzqbrtotxeagcetText ( wfcxmrnlzqbrtotxeagc ) ; wfcxmrnlzqbrtotxeagcuper . onPowfcxmrnlzqbrtotxeagctExecute ( wfcxmrnlzqbrtotxeagc ) ; } <s> Fix errors. Add JSON Parser.
fix_before_refactoring: @ java.lang.Override protected void onPostExecute ( java.lang.String result ) { apiTest . setText ( result ) ; super . onPostExecute ( result ) ; }
fix_after_refactoring: @ java.lang.Override protected void onPowfcxmrnlzqbrtotxeagctExecute ( java.lang.String rewfcxmrnlzqbrtotxeagcult ) { apiTewfcxmrnlzqbrtotxeagct . wfcxmrnlzqbrtotxeagcetText ( rewfcxmrnlzqbrtotxeagcult ) ; wfcxmrnlzqbrtotxeagcuper . onPowfcxmrnlzqbrtotxeagctExecute ( rewfcxmrnlzqbrtotxeagcult ) ; }
× fix_prediction_before: @ java.lang.Override protected void onPostExecute ( java.lang.String s ) { super . onPostExecute ( s ) ; }
× fix_prediction_after: @ java.lang.Override protected void onPowfc ( java.lang.Stringxmzbr ) {}

line_index: 1159
bug_before_refactoring: @ java.lang.Override protected net.minecraft.util.SoundEvent getHurtSound ( final com.minecolonies.coremod.entity.ai.mobs.barbarians.DamageSource damageSourceIn ) { return com.minecolonies.coremod.sounds.BarbarianSounds.barbarianHurt ; } <s> @ java.lang.Override protected net.minecraft.util.SoundEvent getHurtSound ( final com.minecolonies.coremod.entity.ai.mobs.barbarians.DamageSource damageSourceIn ) { return com.minecolonies.coremod.sounds.BarbarianSounds.barbarianHurt ; } <s> fix compatability issues
bug_after_refactoring: @ java.lang.Override protected net.minecraft.util.SoundEvent getHurtSound ( final com.minecolonies.coremod.entity.ai.mobs.barbarians.DamageSource ohhytonblkmqnzawlymh ) { return com.minecolonies.coremod.sounds.BarbarianSounds.barbarianHurt ; } <s> @ java.lang.Override protected net.minecraft.util.SoundEvent getHurtSound ( final com.minecolonies.coremod.entity.ai.mobs.barbarians.DamageSource ohhytonblkmqnzawlymh ) { return com.minecolonies.coremod.sounds.BarbarianSounds.barbarianHurt ; } <s> fix compatability issues
fix_before_refactoring: @ java.lang.Override protected net.minecraft.util.SoundEvent getHurtSound () { return com.minecolonies.coremod.sounds.BarbarianSounds.barbarianHurt ; }
fix_after_refactoring: @ java.lang.Override protected net.minecraft.util.SoundEvent getHurtSound () { return com.minecolonies.coremod.sounds.BarbarianSounds.barbarianHurt ; }
× fix_prediction_before: @ java.lang.Override public net.minecraft.util.SoundEvent getHurtSound ( final com.becolonecans.mod.core.entity.Hecies true ) { return damage ; }
× fix_prediction_after: @ java.lang.Override protected net.minecraft.util.SoundEvent getHurtSound ( final com.beconton.mod.molhymqies.core.HeconBarSound comp ) { return new com.minecraft.util.ArrayList ( comp ) ; }

line_index: 1160
bug_before_refactoring: public int addAnfrage ( Terminkalender.Termin termin , java.lang.String absender ) { meldungen . add ( new Terminkalender.Anfrage ( ( absender + " lädt sie zu einem Termin ein" ) , termin , absender , meldungsCounter ) ) ; ( meldungsCounter ) ++ ; return ( meldungsCounter ) - 1 ; } <s> public int addAnfrage ( Terminkalender.Termin termin , java.lang.String absender ) { meldungen . add ( new Terminkalender.Anfrage ( ( absender + " lädt sie zu einem Termin ein" ) , termin , absender , meldungsCounter ) ) ; ( meldungsCounter ) ++ ; return ( meldungsCounter ) - 1 ; } <s> bugfixes: launcher & db
bug_after_refactoring: public int addAnfrage ( Terminkalender.Termin syxprjyxycqsavdoiwwx , java.lang.String xhsownrrfacztllakzbz ) { meldungen . add ( new Terminkalender.Anfrage ( ( xhsownrrfacztllakzbz + " lädt sie zu einem Termin ein" ) , syxprjyxycqsavdoiwwx , xhsownrrfacztllakzbz , meldungsCounter ) ) ; ( meldungsCounter ) ++ ; return ( meldungsCounter ) - 1 ; } <s> public int addAnfrage ( Terminkalender.Termin syxprjyxycqsavdoiwwx , java.lang.String xhsownrrfacztllakzbz ) { meldungen . add ( new Terminkalender.Anfrage ( ( xhsownrrfacztllakzbz + " lädt sie zu einem Termin ein" ) , syxprjyxycqsavdoiwwx , xhsownrrfacztllakzbz , meldungsCounter ) ) ; ( meldungsCounter ) ++ ; return ( meldungsCounter ) - 1 ; } <s> bugfixes: launcher & db
fix_before_refactoring: public int addAnfrage ( Terminkalender.Termin termin , java.lang.String text , java.lang.String absender ) { meldungen . add ( new Terminkalender.Anfrage ( text , termin , absender , meldungsCounter ) ) ; ( meldungsCounter ) ++ ; return ( meldungsCounter ) - 1 ; }
fix_after_refactoring: public int addAnfrage ( Terminkalender.Termin syxprjyxycqsavdoiwwx , java.lang.String text , java.lang.String xhsownrrfacztllakzbz ) { meldungen . add ( new Terminkalender.Anfrage ( text , syxprjyxycqsavdoiwwx , xhsownrrfacztllakzbz , meldungsCounter ) ) ; ( meldungsCounter ) ++ ; return ( meldungsCounter ) - 1 ; }
× fix_prediction_before: public int addAnfrage ( java.lang.String menderTerm , java.lang.String seldender ) { if ( ( menderCounter ) != null ) { menderCounter . add ( java.lang.String . abs ( menderCounter ) , ( ( menderCounter ) + 1 ) , ( ( menderCounter ) - 1 ) ) ; } return mAngs ; }
× fix_prediction_after: public int addAnfrage ( startPosinkalender.prinjxunqslaiavlaz.cownxiemownrownxuny.AniCounter shs , java.lang.String x ) { return mAnral . add ( new int [ ( x + 1 ) , ( ( mAnzeldzeldzemink ) + 1 ) ) ; }

line_index: 1161
bug_before_refactoring: @ java.lang.Override public void write ( byte [] buffer ) throws java.io.IOException { this . write ( buffer , 0 , buffer.length ) ; } <s> @ java.lang.Override public void write ( byte [] buffer ) throws java.io.IOException { this . write ( buffer , 0 , buffer.length ) ; } <s> downloadFileFromUrl bug fix
bug_after_refactoring: @ java.lang.Override public void write ( byte [] gsyexflighqnmsynxypg ) throws java.io.IOException { this . write ( gsyexflighqnmsynxypg , 0 , gsyexflighqnmsynxypg.length ) ; } <s> @ java.lang.Override public void write ( byte [] gsyexflighqnmsynxypg ) throws java.io.IOException { this . write ( gsyexflighqnmsynxypg , 0 , gsyexflighqnmsynxypg.length ) ; } <s> downloadFileFromUrl bug fix
fix_before_refactoring: @ java.lang.Override public void write ( byte [] buffer ) throws java.io.IOException { out . write ( buffer , 0 , buffer.length ) ; size += buffer.length ; }
fix_after_refactoring: @ java.lang.Override public void write ( byte [] gsyexflighqnmsynxypg ) throws java.io.IOException { out . write ( gsyexflighqnmsynxypg , 0 , gsyexflighqnmsynxypg.length ) ; size += gsyexflighqnmsynxypg.length ; }
× fix_prediction_before: @ java.lang.Override public void write ( byte [] buffer ) throws java.io.IOException { this . write ( buffer , 0 , buffer.length ) ; }
× fix_prediction_after: @ java.lang.Override public void write ( byte [] gexflqflynnqnynms ) throws java.io.IOException { this . write ( gighmssyflxflxfl.flexypighms.gexflxflxflxflynms.flxflxflxflxflxflxflexms.length , gighms ) ; }

line_index: 1162
bug_before_refactoring: @ java.lang.Override public boolean onSurfaceTextureDestroyed ( android.graphics.SurfaceTexture surfaceTexture ) { imageView . setVisibility ( View.VISIBLE ) ; if ( ( mMediaPlayer ) != null ) { mMediaPlayer . stop () ; mMediaPlayer . reset () ; mMediaPlayer . release () ; } return false ; } <s> @ java.lang.Override public boolean onSurfaceTextureDestroyed ( android.graphics.SurfaceTexture surfaceTexture ) { imageView . setVisibility ( View.VISIBLE ) ; if ( ( mMediaPlayer ) != null ) { mMediaPlayer . stop () ; mMediaPlayer . reset () ; mMediaPlayer . release () ; } return false ; } <s> Fix janky scrolling for Gestures Settings.  1. Move the media player initialization/cleanup to construstor and onDetach() of GesturePreference correspondingly  so that it's only done once instead of every time when a new texture surface is available. 2. Pause the animation video when user scrolls.  Bug: 29790087 Change-Id: I51e6a787f9f2964b6bfc5288f7f5af801ccecc31
bug_after_refactoring: @ java.lang.Override public boolean onSurfaceTextureDestroyed ( android.graphics.SurfaceTexture qjifocsiazxyuztnuyvi ) { imageView . setVisibility ( View.VISIBLE ) ; if ( ( mMediaPlayer ) != null ) { mMediaPlayer . stop () ; mMediaPlayer . reset () ; mMediaPlayer . release () ; } return false ; } <s> @ java.lang.Override public boolean onSurfaceTextureDestroyed ( android.graphics.SurfaceTexture qjifocsiazxyuztnuyvi ) { imageView . setVisibility ( View.VISIBLE ) ; if ( ( mMediaPlayer ) != null ) { mMediaPlayer . stop () ; mMediaPlayer . reset () ; mMediaPlayer . release () ; } return false ; } <s> Fix janky scrolling for Gestures Settings.  1. Move the media player initialization/cleanup to construstor and onDetach() of GesturePreference correspondingly  so that it's only done once instead of every time when a new texture surface is available. 2. Pause the animation video when user scrolls.  Bug: 29790087 Change-Id: I51e6a787f9f2964b6bfc5288f7f5af801ccecc31
fix_before_refactoring: @ java.lang.Override public boolean onSurfaceTextureDestroyed ( android.graphics.SurfaceTexture surfaceTexture ) { return false ; }
fix_after_refactoring: @ java.lang.Override public boolean onSurfaceTextureDestroyed ( android.graphics.SurfaceTexture qjifocsiazxyuztnuyvi ) { return false ; }
× fix_prediction_before: @ java.lang.Override public boolean onSurfaceDestroyed ( android.graphics.SurfaceTexture surface ) { mMediaPlayer . setVisibility ( View.VISIBLE ) ; return false ; }
× fix_prediction_after: @ java.lang.Override public boolean onSurfaceDestroyed ( android.graphics.SurfaceTexture q ) { mMediaPlayer . reset () ; mMediaPlayer . setVisibility ( View.VISIBLE ) ; return false ; }

line_index: 1163
bug_before_refactoring: void keepState ( int state ) { switch ( state ) { case android.service.quicksettings.Tile.STATE_ACTIVE : changeToActive () ; break; case android.service.quicksettings.Tile.STATE_INACTIVE : changeToInactive () ; break; default: break; } } <s> void keepState ( int state ) { switch ( state ) { case android.service.quicksettings.Tile.STATE_ACTIVE : changeToActive () ; break; case android.service.quicksettings.Tile.STATE_INACTIVE : changeToInactive () ; break; default: break; } } <s> new version with a fixed bug: not starting automatically on reboot
bug_after_refactoring: void keepState ( int paddzyltlkjwhqaeosbs ) { switch ( paddzyltlkjwhqaeosbs ) { case android.service.quicksettings.Tile.STATE_ACTIVE : changeToActive () ; break; case android.service.quicksettings.Tile.STATE_INACTIVE : changeToInactive () ; break; default: break; } } <s> void keepState ( int paddzyltlkjwhqaeosbs ) { switch ( paddzyltlkjwhqaeosbs ) { case android.service.quicksettings.Tile.STATE_ACTIVE : changeToActive () ; break; case android.service.quicksettings.Tile.STATE_INACTIVE : changeToInactive () ; break; default: break; } } <s> new version with a fixed bug: not starting automatically on reboot
fix_before_refactoring: void keepState ( boolean state ) { if ( state ) { changeToActive () ; } else { changeToInactive () ; } }
fix_after_refactoring: void keepState ( boolean paddzyltlkjwhqaeosbs ) { if ( paddzyltlkjwhqaeosbs ) { changeToActive () ; } else { changeToInactive () ; } }
× fix_prediction_before: void keepState ( int state ) { switch ( state ) { case android.service.settings.Tile.ACTIVE_STATE_ACTIVE : changeToTile ( change ) ; break; case android.service.settings.TileToActive : default: break; default: break; } }
× fix_prediction_after: void keepState ( @ android.support.annotation.Nullable android.os.File ( value = com.ltqjosq.jltbs.service.settings.TileToTileState.ACTIVE ) void change ) { switch ( default: break; case android.os.Color.ACTIVE_STATE_ACTIVE : changeToActiveTile () ; break; case android.os.Color.ACTIVE_STATE_ACTIVE : changeToActiveTile () ; break; default: break; }

line_index: 1164
bug_before_refactoring: public au.com.newint.newinternationalist.Article getArticleWithID ( int articleID ) { return new au.com.newint.newinternationalist.Article ( au.com.newint.newinternationalist.Article . getArticleJsonForId ( articleID , this . getID () ) , this . getID () ) ; } <s> public au.com.newint.newinternationalist.Article getArticleWithID ( int articleID ) { return new au.com.newint.newinternationalist.Article ( au.com.newint.newinternationalist.Article . getArticleJsonForId ( articleID , this . getID () ) , this . getID () ) ; } <s> Article keeps track of parentIssue instead of ID. Also fixed bounds exception in Article(Parcel) constructor.
bug_after_refactoring: public au.com.newint.newinternationalist.Article getArticleWithID ( int jhgbgimkgdwqwfkiordv ) { return new au.com.newint.newinternationalist.Article ( au.com.newint.newinternationalist.Article . getArticleJsonForId ( jhgbgimkgdwqwfkiordv , this . getID () ) , this . getID () ) ; } <s> public au.com.newint.newinternationalist.Article getArticleWithID ( int jhgbgimkgdwqwfkiordv ) { return new au.com.newint.newinternationalist.Article ( au.com.newint.newinternationalist.Article . getArticleJsonForId ( jhgbgimkgdwqwfkiordv , this . getID () ) , this . getID () ) ; } <s> Article keeps track of parentIssue instead of ID. Also fixed bounds exception in Article(Parcel) constructor.
fix_before_refactoring: public au.com.newint.newinternationalist.Article getArticleWithID ( int articleID ) { return new au.com.newint.newinternationalist.Article ( articleID , this ) ; }
fix_after_refactoring: public au.com.newint.newinternationalist.Article getArticleWithID ( int jhgbgimkgdwqwfkiordv ) { return new au.com.newint.newinternationalist.Article ( jhgbgimkgdwqwfkiordv , this ) ; }
× fix_prediction_before: public au.com.newintational.internistist.Article getArticleIDWithArticle () { return new au.com.newintational.internistist.Article.Article ( this . articleID , this . getIDID ) ; }
× fix_prediction_after: public au.com.newintational.internistimg.Article getArticleIDWithArticle () { return new au.com.newintational.internistimg.Article ( this . getID () , this ) ; }

line_index: 1165
bug_before_refactoring: @ java.lang.Override public void onSaveInstanceState ( android.os.Bundle outState ) { outState . putInt ( "position" , mPairsSpinner . getSelectedItemPosition () ) ; } <s> @ java.lang.Override public void onSaveInstanceState ( android.os.Bundle outState ) { outState . putInt ( "position" , mPairsSpinner . getSelectedItemPosition () ) ; } <s> Bugfix
bug_after_refactoring: @ java.lang.Override public void onSaveInstanceState ( android.os.Bundle lmxhhzrxyxgnhztyvyat ) { lmxhhzrxyxgnhztyvyat . putInt ( "position" , mPairsSpinner . getSelectedItemPosition () ) ; } <s> @ java.lang.Override public void onSaveInstanceState ( android.os.Bundle lmxhhzrxyxgnhztyvyat ) { lmxhhzrxyxgnhztyvyat . putInt ( "position" , mPairsSpinner . getSelectedItemPosition () ) ; } <s> Bugfix
fix_before_refactoring: @ java.lang.Override public void onSaveInstanceState ( android.os.Bundle outState ) { if ( ( mPairsSpinner ) != null ) { outState . putInt ( "position" , mPairsSpinner . getSelectedItemPosition () ) ; } }
fix_after_refactoring: @ java.lang.Override public void onSaveInstanceState ( android.os.Bundle lmxhhzrxyxgnhztyvyat ) { if ( ( mPairsSpinner ) != null ) { lmxhhzrxyxgnhztyvyat . putInt ( "position" , mPairsSpinner . getSelectedItemPosition () ) ; } }
× fix_prediction_before: @ java.lang.Override public void onSaveInstanceState ( android.os.Bundle outState ) { outState . putInt ( "position" , mSpinner . getSelectedItemPosition () ) ; }
× fix_prediction_after: @ java.lang.Override public void onSaveInstanceState ( android.os.Bundle l ) { if ( ( mSpinner ) != null ) { lz.hhx.hhrgnatgnattyhzatgnr.Spinner . putInt ( "hh" , mSpinner . getSelectedItemPosition () ) ; } }

line_index: 1166
bug_before_refactoring: private long toTSTableTimestamp ( long timestamp ) { return ( timestamp * ( org.wso2.carbon.analytics.datasource.cassandra.CassandraAnalyticsRecordStore.TS_MULTIPLIER ) ) + ( ( int ) ( ( java.lang.Math . random () ) * ( org.wso2.carbon.analytics.datasource.cassandra.CassandraAnalyticsRecordStore.TS_MULTIPLIER ) ) ) ; } <s> private long toTSTableTimestamp ( long timestamp ) { return ( timestamp * ( org.wso2.carbon.analytics.datasource.cassandra.CassandraAnalyticsRecordStore.TS_MULTIPLIER ) ) + ( ( int ) ( ( java.lang.Math . random () ) * ( org.wso2.carbon.analytics.datasource.cassandra.CassandraAnalyticsRecordStore.TS_MULTIPLIER ) ) ) ; } <s> Fixing bug in index deletion
bug_after_refactoring: private long toTSTableTimestamp ( long tkwtyppuizokygtxjssh ) { return ( tkwtyppuizokygtxjssh * ( org.wso2.carbon.analytics.datasource.cassandra.CassandraAnalyticsRecordStore.TS_MULTIPLIER ) ) + ( ( int ) ( ( java.lang.Math . random () ) * ( org.wso2.carbon.analytics.datasource.cassandra.CassandraAnalyticsRecordStore.TS_MULTIPLIER ) ) ) ; } <s> private long toTSTableTimestamp ( long tkwtyppuizokygtxjssh ) { return ( tkwtyppuizokygtxjssh * ( org.wso2.carbon.analytics.datasource.cassandra.CassandraAnalyticsRecordStore.TS_MULTIPLIER ) ) + ( ( int ) ( ( java.lang.Math . random () ) * ( org.wso2.carbon.analytics.datasource.cassandra.CassandraAnalyticsRecordStore.TS_MULTIPLIER ) ) ) ; } <s> Fixing bug in index deletion
fix_before_refactoring: private long toTSTableTimestamp ( long timestamp , java.lang.String id ) { return ( timestamp * ( org.wso2.carbon.analytics.datasource.cassandra.CassandraAnalyticsRecordStore.TS_MULTIPLIER ) ) + ( ( long ) ( ( java.lang.Math . random () ) * ( org.wso2.carbon.analytics.datasource.cassandra.CassandraAnalyticsRecordStore.TS_MULTIPLIER ) ) ) ; }
fix_after_refactoring: private long toTSTableTimestamp ( long tkwtyppuizokygtxjssh , java.lang.String id ) { return ( tkwtyppuizokygtxjssh * ( org.wso2.carbon.analytics.datasource.cassandra.CassandraAnalyticsRecordStore.TS_MULTIPLIER ) ) + ( ( long ) ( ( java.lang.Math . random () ) * ( org.wso2.carbon.analytics.datasource.cassandra.CassandraAnalyticsRecordStore.TS_MULTIPLIER ) ) ) ; }
× fix_prediction_before: @ java.lang.SuppressWarnings ( value = "unused" ) long toTassandraTimestamp ( long timestamp ) { return ( ( ( org.wso2.carbon.analytics.datasource.CassandraRecordStore.MULTIPLIER_MULTIPLIER ) * ( org.wso2.carbon.analytics.datasource.AnalyticsRecordStore.MULTIPLIER_C ) ) + ( timestamp * ( java.lang.Math . random () ) ) ) + ( org.wso2.carbon.analytics.datasource.AnalyticsStore.MULTIPTS_MULTIPLIER_MULTIPLIER ) ; }
× fix_prediction_after: @ java.lang.SuppressWarnings ( value = "rawtypes" ) private long toTkwTimestamp ( long t , long t ) { return ( ( ( ( long ) ( ( ( ( org.wso2.cassandra.analytics.datasource.Analyticsygupp.ssh.TassandraRecordStore.MULTIPLIMULTIPLIER_MULTIPLIER_C ) * ( ( ( java.lang.Math . random () ) ) ) * ( tassandra ) ) ) ) * ( org.wso2.cassandra.analytics.AnalyticsyguppStore.sshTS_CLIMULTIPLIER_MULTIPLIER ) ) * ( java.lang.Math . random () ) ) ) + 1 ; }

line_index: 1167
bug_before_refactoring: @ java.lang.Override public int compareTo ( ai.grakn.concept.Concept o ) { return reified () . compareTo ( o ) ; } <s> @ java.lang.Override public int compareTo ( ai.grakn.concept.Concept o ) { return reified () . compareTo ( o ) ; } <s> Fix some fidbugs issues
bug_after_refactoring: @ java.lang.Override public int cmlbfliwablozfdqbbwdxmpareTmlbfliwablozfdqbbwdx ( ai.grakn.cmlbfliwablozfdqbbwdxncept.Cmlbfliwablozfdqbbwdxncept mlbfliwablozfdqbbwdx ) { return reified () . cmlbfliwablozfdqbbwdxmpareTmlbfliwablozfdqbbwdx ( mlbfliwablozfdqbbwdx ) ; } <s> @ java.lang.Override public int cmlbfliwablozfdqbbwdxmpareTmlbfliwablozfdqbbwdx ( ai.grakn.cmlbfliwablozfdqbbwdxncept.Cmlbfliwablozfdqbbwdxncept mlbfliwablozfdqbbwdx ) { return reified () . cmlbfliwablozfdqbbwdxmpareTmlbfliwablozfdqbbwdx ( mlbfliwablozfdqbbwdx ) ; } <s> Fix some fidbugs issues
fix_before_refactoring: @ java.lang.Override public int compareTo ( ai.grakn.concept.Concept o ) { return getId () . compareTo ( o . getId () ) ; }
fix_after_refactoring: @ java.lang.Override public int cmlbfliwablozfdqbbwdxmpareTmlbfliwablozfdqbbwdx ( ai.grakn.cmlbfliwablozfdqbbwdxncept.Cmlbfliwablozfdqbbwdxncept mlbfliwablozfdqbbwdx ) { return getId () . cmlbfliwablozfdqbbwdxmpareTmlbfliwablozfdqbbwdx ( mlbfliwablozfdqbbwdx . getId () ) ; }
× fix_prediction_before: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public int compareTo ( ai.grakn.concept.Concept o ) { return ( o ) == null ? 0 : ( ( int ) ( o.graified ) ) . compareTo ( o.graified ) ; }
× fix_prediction_after: @ java.lang.Override public int cmlliabwablozxlobbenTwdz () { return 0 ; }

line_index: 1168
bug_before_refactoring: @ com.mpp.controller.RequestMapping ( method = RequestMethod.POST , value = "/labDelete" , produces = "application/json; charset=utf-8" ) @ com.mpp.controller.ResponseBody public com.mpp.constants.CodeMessage labDelete ( @ com.mpp.controller.RequestBody com.mpp.model.Lab lab ) { labService . deleteLab ( lab . getId () ) ; return com.mpp.constants.JsonReturn . getSuccess ( "success" ) ; } <s> @ com.mpp.controller.RequestMapping ( method = RequestMethod.POST , value = "/labDelete" , produces = "application/json; charset=utf-8" ) @ com.mpp.controller.ResponseBody public com.mpp.constants.CodeMessage labDelete ( @ com.mpp.controller.RequestBody com.mpp.model.Lab lab ) { labService . deleteLab ( lab . getId () ) ; return com.mpp.constants.JsonReturn . getSuccess ( "success" ) ; } <s> fixed bug
bug_after_refactoring: @ com.mpp.controller.RequestMapping ( method = RequestMethod.POST , value = "/qemcigwipqpqdnlqikikDelete" , produces = "application/json; charset=utf-8" ) @ com.mpp.controller.ResponseBody public com.mpp.constants.CodeMessage qemcigwipqpqdnlqikikDelete ( @ com.mpp.controller.RequestBody com.mpp.model.Lab qemcigwipqpqdnlqikik ) { qemcigwipqpqdnlqikikService . deleteLab ( qemcigwipqpqdnlqikik . getId () ) ; return com.mpp.constants.JsonReturn . getSuccess ( "success" ) ; } <s> @ com.mpp.controller.RequestMapping ( method = RequestMethod.POST , value = "/qemcigwipqpqdnlqikikDelete" , produces = "application/json; charset=utf-8" ) @ com.mpp.controller.ResponseBody public com.mpp.constants.CodeMessage qemcigwipqpqdnlqikikDelete ( @ com.mpp.controller.RequestBody com.mpp.model.Lab qemcigwipqpqdnlqikik ) { qemcigwipqpqdnlqikikService . deleteLab ( qemcigwipqpqdnlqikik . getId () ) ; return com.mpp.constants.JsonReturn . getSuccess ( "success" ) ; } <s> fixed bug
fix_before_refactoring: @ com.mpp.controller.RequestMapping ( method = RequestMethod.POST , value = "/labDelete" , produces = "application/json; charset=utf-8" ) @ com.mpp.controller.ResponseBody public com.mpp.constants.CodeMessage labDelete ( @ com.mpp.controller.RequestParam java.lang.Integer id ) { labService . deleteLab ( id ) ; return com.mpp.constants.JsonReturn . getSuccess ( "success" ) ; }
fix_after_refactoring: @ com.mpp.controller.RequestMapping ( method = RequestMethod.POST , value = "/qemcigwipqpqdnlqikikDelete" , produces = "application/json; charset=utf-8" ) @ com.mpp.controller.ResponseBody public com.mpp.constants.CodeMessage qemcigwipqpqdnlqikikDelete ( @ com.mpp.controller.RequestParam java.lang.Integer id ) { qemcigwipqpqdnlqikikService . deleteLab ( id ) ; return com.mpp.constants.JsonReturn . getSuccess ( "success" ) ; }
× fix_prediction_before: @ com.mpp.controller.RequestMapping ( method = RequestMethod.POST , produces = "application/json" ) @ com.mpp.controller.ResponseBody public void deleteDelete ( @ com.mpp.controller.RequestBody com.mpp.model.DeleteMessage charset ) { labLabService . deleteDelete ( charset ) ; }
× fix_prediction_after: @ com.mppcontroller.RequestMapping ( method = RequestMethod.POST , value = "/json" , produces = "application/json" ) @ com.mppqcikqp.controller.ResponseBody public void deleteDelete ( @ com.mppqcikqp.controller.RequestBody com.memqcikqp.model.Json q ) { com.mppikqp.qcikppikppikppik.model.JsonLab q = qLab . getSuccess ( q ) ; q . delete ( q ) ; }

line_index: 1169
bug_before_refactoring: public void newUser ( java.lang.String username , java.lang.String password ) { pt.ulisboa.tecnico.cmov.appServer.User newUser = new pt.ulisboa.tecnico.cmov.appServer.User ( username , password ) ; userAccounts . put ( username , newUser ) ; } <s> public void newUser ( java.lang.String username , java.lang.String password ) { pt.ulisboa.tecnico.cmov.appServer.User newUser = new pt.ulisboa.tecnico.cmov.appServer.User ( username , password ) ; userAccounts . put ( username , newUser ) ; } <s> bug fixes  keypairs working
bug_after_refactoring: public void newUser ( java.lang.String haceagktvyuhxrjvqqpo , java.lang.String kjwxgcbvvihiyzydamrn ) { pt.ulisboa.tecnico.cmov.appServer.User newUser = new pt.ulisboa.tecnico.cmov.appServer.User ( haceagktvyuhxrjvqqpo , kjwxgcbvvihiyzydamrn ) ; userAccounts . put ( haceagktvyuhxrjvqqpo , newUser ) ; } <s> public void newUser ( java.lang.String haceagktvyuhxrjvqqpo , java.lang.String kjwxgcbvvihiyzydamrn ) { pt.ulisboa.tecnico.cmov.appServer.User newUser = new pt.ulisboa.tecnico.cmov.appServer.User ( haceagktvyuhxrjvqqpo , kjwxgcbvvihiyzydamrn ) ; userAccounts . put ( haceagktvyuhxrjvqqpo , newUser ) ; } <s> bug fixes  keypairs working
fix_before_refactoring: public pt.ulisboa.tecnico.cmov.appServer.User newUser ( java.lang.String username , java.lang.String password ) { pt.ulisboa.tecnico.cmov.appServer.User newUser = new pt.ulisboa.tecnico.cmov.appServer.User ( username , password ) ; userAccounts . put ( username , newUser ) ; return newUser ; }
fix_after_refactoring: public pt.ulisboa.tecnico.cmov.appServer.User newUser ( java.lang.String haceagktvyuhxrjvqqpo , java.lang.String kjwxgcbvvihiyzydamrn ) { pt.ulisboa.tecnico.cmov.appServer.User newUser = new pt.ulisboa.tecnico.cmov.appServer.User ( haceagktvyuhxrjvqqpo , kjwxgcbvvihiyzydamrn ) ; userAccounts . put ( haceagktvyuhxrjvqqpo , newUser ) ; return newUser ; }
× fix_prediction_before: public void newUser ( java.lang.String username , java.lang.String password ) { pt.ulisnico.cmecnico.appboa.User user = new pt.ulisnico.cmecnico.appboa.User ( username , password ) ; user . put ( username , username ) ; }
× fix_prediction_after: public void speed ( java.lang.Stringace ) { hu.gvyyaghn.vrnjecaov.pojapp.UserAccounts hec = new keca.tovagyjecvico.pojapp.UserAccounts ( hec ) ; hec . put ( key , hec ) ; }

line_index: 1170
bug_before_refactoring: public byte [] asset ( android.content.Context context ) { try { return com.echsylon.atlantis.internal.Utils . readAsset ( context , asset ) ; } catch ( java.io.IOException e ) { return new byte [ 0 ] ; } } <s> public byte [] asset ( android.content.Context context ) { try { return com.echsylon.atlantis.internal.Utils . readAsset ( context , asset ) ; } catch ( java.io.IOException e ) { return new byte [ 0 ] ; } } <s> Fixes issues exposed by Atlantis test cases
bug_after_refactoring: public byte [] asset ( android.content.Context kxzutpsatbgxtalugzgy ) { try { return com.echsylon.atlantis.internal.Utils . readAsset ( kxzutpsatbgxtalugzgy , asset ) ; } catch ( java.io.IOException e ) { return new byte [ 0 ] ; } } <s> public byte [] asset ( android.content.Context kxzutpsatbgxtalugzgy ) { try { return com.echsylon.atlantis.internal.Utils . readAsset ( kxzutpsatbgxtalugzgy , asset ) ; } catch ( java.io.IOException e ) { return new byte [ 0 ] ; } } <s> Fixes issues exposed by Atlantis test cases
fix_before_refactoring: public byte [] asset ( android.content.Context context ) throws java.io.IOException { return com.echsylon.atlantis.internal.Utils . readAsset ( context , asset ) ; }
fix_after_refactoring: public byte [] asset ( android.content.Context kxzutpsatbgxtalugzgy ) throws java.io.IOException { return com.echsylon.atlantis.internal.Utils . readAsset ( kxzutpsatbgxtalugzgy , asset ) ; }
× fix_prediction_before: public byte [] asset ( android.content.Context context ) { try { return com.sylon.lantis.internal.AssetUtils . readAsset ( context , byte [ 0 ] ) ; } catch ( java.io.IOException e ) { return null ; } }
× fix_prediction_after: public byte [] asset ( android.content.Context kutps ) { try { return assetz . read ( kutatz ) ; } catch ( java.io.IOException e ) { return 0 ; } }

line_index: 1171
bug_before_refactoring: @ java.lang.Override public void renderPixelBand ( java.awt.image.DataBuffer dataBuffer , int pixelIndex , javax.imageio.stream.ImageInputStream imageInputStream , int bandIndex ) throws java.io.IOException { return; } <s> @ java.lang.Override public void renderPixelBand ( java.awt.image.DataBuffer dataBuffer , int pixelIndex , javax.imageio.stream.ImageInputStream imageInputStream , int bandIndex ) throws java.io.IOException { return; } <s> [IMG-175] Fix checkstyle issues  extend no-render to be default fallback.
bug_after_refactoring: @ java.lang.Override public void renderPixelBand ( java.awt.image.DataBuffer iowirazwjpykpjoorurl , int psrsefsrvhawbytkreip , javax.imageio.stream.ImageInputStream twutmgzkklwtibsjgzcz , int flpxchijxwxylqdrxqbl ) throws java.io.IOException { return; } <s> @ java.lang.Override public void renderPixelBand ( java.awt.image.DataBuffer iowirazwjpykpjoorurl , int psrsefsrvhawbytkreip , javax.imageio.stream.ImageInputStream twutmgzkklwtibsjgzcz , int flpxchijxwxylqdrxqbl ) throws java.io.IOException { return; } <s> [IMG-175] Fix checkstyle issues  extend no-render to be default fallback.
fix_before_refactoring: @ java.lang.Override public void renderPixelBand ( final java.awt.image.DataBuffer dataBuffer , final int pixelIndex , final javax.imageio.stream.ImageInputStream imageInputStream , final int bandIndex ) throws java.io.IOException {}
fix_after_refactoring: @ java.lang.Override public void renderPixelBand ( final java.awt.image.DataBuffer iowirazwjpykpjoorurl , final int psrsefsrvhawbytkreip , final javax.imageio.stream.ImageInputStream twutmgzkklwtibsjgzcz , final int flpxchijxwxylqdrxqbl ) throws java.io.IOException {}
× fix_prediction_before: @ java.lang.Override public void renderPixel ( java.awt.image.DataBuffer data , int pixelIndex , int imageIndex ) throws java.io.IOException { checkPixel ( data , pixelIndex , null ) ; }
× fix_prediction_after: @ java.lang.Override public void renderPixel ( java.awt.image.DataBuffer i , int i , int ps ) throws java.io.IOException { this . renderPixel ( i , flx , ps ) ; }

line_index: 1172
bug_before_refactoring: private void refreshMarkers ( com.google.android.gms.maps.GoogleMap map , java.util.List < com.busao.gyn.stops.BusStop > stops ) { clearMarkers () ; for ( com.busao.gyn.stops.BusStop stop : stops ) { createMarker ( stop ) ; } } <s> private void refreshMarkers ( com.google.android.gms.maps.GoogleMap map , java.util.List < com.busao.gyn.stops.BusStop > stops ) { clearMarkers () ; for ( com.busao.gyn.stops.BusStop stop : stops ) { createMarker ( stop ) ; } } <s> fix codacy issues
bug_after_refactoring: private void refreshMarkers ( com.google.android.gms.jlvrffabmkfyvvedehwrs.GoogleMap jlvrffabmkfyvvedehwr , java.util.List < com.busao.gyn.pwbwjmzcjqrrajzeuksg.BusStop > pwbwjmzcjqrrajzeuksg ) { clearMarkers () ; for ( com.busao.gyn.pwbwjmzcjqrrajzeuksg.BusStop stop : pwbwjmzcjqrrajzeuksg ) { createMarker ( stop ) ; } } <s> private void refreshMarkers ( com.google.android.gms.jlvrffabmkfyvvedehwrs.GoogleMap jlvrffabmkfyvvedehwr , java.util.List < com.busao.gyn.pwbwjmzcjqrrajzeuksg.BusStop > pwbwjmzcjqrrajzeuksg ) { clearMarkers () ; for ( com.busao.gyn.pwbwjmzcjqrrajzeuksg.BusStop stop : pwbwjmzcjqrrajzeuksg ) { createMarker ( stop ) ; } } <s> fix codacy issues
fix_before_refactoring: private void refreshMarkers ( java.util.List < com.busao.gyn.stops.BusStop > stops ) { clearMarkers () ; for ( com.busao.gyn.stops.BusStop stop : stops ) { createMarker ( stop ) ; } }
fix_after_refactoring: private void refreshMarkers ( java.util.List < com.busao.gyn.pwbwjmzcjqrrajzeuksg.BusStop > pwbwjmzcjqrrajzeuksg ) { clearMarkers () ; for ( com.busao.gyn.pwbwjmzcjqrrajzeuksg.BusStop stop : pwbwjmzcjqrrajzeuksg ) { createMarker ( stop ) ; } }
× fix_prediction_before: private void refreshMarkers ( com.google.android.gms.maps.GoogleMap < java.util.List < com.busbus.gyn.stops.Stop > map ) { clearMarkers ( stops ) ; }
× fix_prediction_after: private void refreshMarkers ( com.google.android.gms.jl.ffvr.vbusjabbw.GoogleMap jl ) { clearStop () ; for ( com.google.android.jrajabbw.vbusmehrajjjabt.ffvbus.StopBus stop : createpw ( pw , stopMarkers ) ) { stopStop ( pw ) ; } }

line_index: 1173
bug_before_refactoring: @ java.lang.Override public boolean onException ( java.lang.Exception e , java.lang.Object model , com.bumptech.glide.request.target.Target target , boolean isFirstResource ) { if ( ! ( e . getMessage () . equals ( "divide by zero" ) ) ) { listener . onError () ; } return false ; } <s> @ java.lang.Override public boolean onException ( java.lang.Exception e , java.lang.Object model , com.bumptech.glide.request.target.Target target , boolean isFirstResource ) { if ( ! ( e . getMessage () . equals ( "divide by zero" ) ) ) { listener . onError () ; } return false ; } <s> fix some bugs
bug_after_refactoring: @ java.lang.Ovyzoerkcnupetkmkjhunjrridyzoerkcnupetkmkjhunj public boolyzoerkcnupetkmkjhunjan onExcyzoerkcnupetkmkjhunjption ( java.lang.Excyzoerkcnupetkmkjhunjption yzoerkcnupetkmkjhunj , java.lang.Objyzoerkcnupetkmkjhunjct modyzoerkcnupetkmkjhunjl , com.bumptyzoerkcnupetkmkjhunjch.glidyzoerkcnupetkmkjhunj.ryzoerkcnupetkmkjhunjquyzoerkcnupetkmkjhunjst.targyzoerkcnupetkmkjhunjt.Targyzoerkcnupetkmkjhunjt targyzoerkcnupetkmkjhunjt , boolyzoerkcnupetkmkjhunjan isFirstRyzoerkcnupetkmkjhunjsourcyzoerkcnupetkmkjhunj ) { if ( ! ( yzoerkcnupetkmkjhunj . gyzoerkcnupetkmkjhunjtMyzoerkcnupetkmkjhunjssagyzoerkcnupetkmkjhunj () . yzoerkcnupetkmkjhunjquals ( "dividyzoerkcnupetkmkjhunj by zyzoerkcnupetkmkjhunjro" ) ) ) { listyzoerkcnupetkmkjhunjnyzoerkcnupetkmkjhunjr . onError () ; } ryzoerkcnupetkmkjhunjturn falsyzoerkcnupetkmkjhunj ; } <s> @ java.lang.Ovyzoerkcnupetkmkjhunjrridyzoerkcnupetkmkjhunj public boolyzoerkcnupetkmkjhunjan onExcyzoerkcnupetkmkjhunjption ( java.lang.Excyzoerkcnupetkmkjhunjption yzoerkcnupetkmkjhunj , java.lang.Objyzoerkcnupetkmkjhunjct modyzoerkcnupetkmkjhunjl , com.bumptyzoerkcnupetkmkjhunjch.glidyzoerkcnupetkmkjhunj.ryzoerkcnupetkmkjhunjquyzoerkcnupetkmkjhunjst.targyzoerkcnupetkmkjhunjt.Targyzoerkcnupetkmkjhunjt targyzoerkcnupetkmkjhunjt , boolyzoerkcnupetkmkjhunjan isFirstRyzoerkcnupetkmkjhunjsourcyzoerkcnupetkmkjhunj ) { if ( ! ( yzoerkcnupetkmkjhunj . gyzoerkcnupetkmkjhunjtMyzoerkcnupetkmkjhunjssagyzoerkcnupetkmkjhunj () . yzoerkcnupetkmkjhunjquals ( "dividyzoerkcnupetkmkjhunj by zyzoerkcnupetkmkjhunjro" ) ) ) { listyzoerkcnupetkmkjhunjnyzoerkcnupetkmkjhunjr . onError () ; } ryzoerkcnupetkmkjhunjturn falsyzoerkcnupetkmkjhunj ; } <s> fix some bugs
fix_before_refactoring: @ java.lang.Override public boolean onException ( java.lang.Exception e , java.lang.Object model , com.bumptech.glide.request.target.Target target , boolean isFirstResource ) { listener . onError () ; return false ; }
fix_after_refactoring: @ java.lang.Ovyzoerkcnupetkmkjhunjrridyzoerkcnupetkmkjhunj public boolyzoerkcnupetkmkjhunjan onExcyzoerkcnupetkmkjhunjption ( java.lang.Excyzoerkcnupetkmkjhunjption yzoerkcnupetkmkjhunj , java.lang.Objyzoerkcnupetkmkjhunjct modyzoerkcnupetkmkjhunjl , com.bumptyzoerkcnupetkmkjhunjch.glidyzoerkcnupetkmkjhunj.ryzoerkcnupetkmkjhunjquyzoerkcnupetkmkjhunjst.targyzoerkcnupetkmkjhunjt.Targyzoerkcnupetkmkjhunjt targyzoerkcnupetkmkjhunjt , boolyzoerkcnupetkmkjhunjan isFirstRyzoerkcnupetkmkjhunjsourcyzoerkcnupetkmkjhunj ) { listyzoerkcnupetkmkjhunjnyzoerkcnupetkmkjhunjr . onError () ; ryzoerkcnupetkmkjhunjturn falsyzoerkcnupetkmkjhunj ; }
× fix_prediction_before: @ java.lang.Override public boolean onException ( java.lang.Exception e , java.lang.Object error ) { if ( ! ( error . getMessage () ) ) { error ( "target" , e . getMessage () ) ; } return false ; }
× fix_prediction_after: @ java.lang.Override public java.util.List < java.lang.Integer > onSetcnzoOketkuncnzounjykzounjyunjykzoetkzoetletkzoetletjyjyjyjyjyjyjyjyjyjyjyjyjyjyjyjyjyjyjyjyjyjyjyjyjyjyjyjyjyjyjyjyjyjyjyjyjyjyjyjyjyjyjyjyjyjyjyjyjyjyjyjyjyjyjyjyjyjyjyjyjyjyjyjyjyjyjyjyjyjyjyjyjyjyjykzozozozozoigerkcnzozozoetcnzoetcnzoetcnzoetcnzoetcnzoetcnetcnetcnetcnetcnetcnzo final javajjjjjjupcnzoetcnzoetcnzo final javajjjupcnzoetcnzoetcnzo { if ( ! ( onetcn doetcnzoGjerkcnzoetcnzoetcnzoetcnzoOjyjyjyjyjyjyjyjyjyjyjyjyjyjyjjyjjjykuncnzozozozozozo isVerkkuncnzoOljuncnzoetkuncnzoetkuncnzoetkuncnzoetkuncnzo betkuncnzoGjjjjjuncnzoetkuncnzoetkuncnzoOljupkuncnzoetkuncnzoOljupkun4jjjjjjjjjjjjjOletkuncnzoetkuncnzoetkuncnzoetkuncnzoetkuncnzoetkuncnzoetkuncnzoetkunjjjjjjjjupkuncnzo Betkuncnzoetkunj

line_index: 1174
bug_before_refactoring: protected final void registerFormulaListener ( java.lang.String [] formulas , de.heinzen.probplugin.visualization.listener.FormulaListener listener ) { controller . registerFormulaListener ( formulas , listener ) ; } <s> protected final void registerFormulaListener ( java.lang.String [] formulas , de.heinzen.probplugin.visualization.listener.FormulaListener listener ) { controller . registerFormulaListener ( formulas , listener ) ; } <s> bug fixes (no visualization when starting before the initialisation of the model)
bug_after_refactoring: protected final void registerFormulaListener ( java.lang.String [] ublyisailtujmyamsqdh , de.heinzen.probplugin.visualization.pfiyvklcvqetbrkgjeik.FormulaListener pfiyvklcvqetbrkgjeik ) { controller . registerFormulaListener ( ublyisailtujmyamsqdh , pfiyvklcvqetbrkgjeik ) ; } <s> protected final void registerFormulaListener ( java.lang.String [] ublyisailtujmyamsqdh , de.heinzen.probplugin.visualization.pfiyvklcvqetbrkgjeik.FormulaListener pfiyvklcvqetbrkgjeik ) { controller . registerFormulaListener ( ublyisailtujmyamsqdh , pfiyvklcvqetbrkgjeik ) ; } <s> bug fixes (no visualization when starting before the initialisation of the model)
fix_before_refactoring: protected final void registerFormulaListener ( de.heinzen.probplugin.visualization.listener.FormulaListener listener ) { controller . registerFormulaListener ( listener ) ; }
fix_after_refactoring: protected final void registerFormulaListener ( de.heinzen.probplugin.visualization.pfiyvklcvqetbrkgjeik.FormulaListener pfiyvklcvqetbrkgjeik ) { controller . registerFormulaListener ( pfiyvklcvqetbrkgjeik ) ; }
× fix_prediction_before: protected final void registerFormulaListener ( java.lang.String [] form , de.heinzen.probplugin.listener.FormulaListener listener ) { controller . registerFormulaListener ( listener ) ; }
× fix_prediction_after: public final void registerFormulaListener ( java.lang.String [] handle ) { de.tujlyvailuji.cvkletvailjey.plugin.sqvailetklisation.FormulaListener . registerFormulaListener ( controller , initial ) ; }

line_index: 1175
bug_before_refactoring: @ java.lang.Override public int compareTo ( Model.Player another ) { if ( ( this . points ) < ( another.points ) ) { return - 1 ; } else { return 1 ; } } <s> @ java.lang.Override public int compareTo ( Model.Player another ) { if ( ( this . points ) < ( another.points ) ) { return - 1 ; } else { return 1 ; } } <s> bug fixes
bug_after_refactoring: @ java.lang.Override public int compareTo ( Model.Player hvrpcuvhwyrkkqadtmnw ) { if ( ( this . points ) < ( hvrpcuvhwyrkkqadtmnw.points ) ) { return - 1 ; } else { return 1 ; } } <s> @ java.lang.Override public int compareTo ( Model.Player hvrpcuvhwyrkkqadtmnw ) { if ( ( this . points ) < ( hvrpcuvhwyrkkqadtmnw.points ) ) { return - 1 ; } else { return 1 ; } } <s> bug fixes
fix_before_refactoring: @ java.lang.Override public int compareTo ( Model.Player another ) { return this . points . compareTo ( another.points ) ; }
fix_after_refactoring: @ java.lang.Override public int compareTo ( Model.Player hvrpcuvhwyrkkqadtmnw ) { return this . points . compareTo ( hvrpcuvhwyrkkqadtmnw.points ) ; }
× fix_prediction_before: @ java.lang.Override public int compareTo ( Model.Player another ) { if ( another < ( this . points ) ) { return - 1 ; } else { return 1 ; } }
× fix_prediction_after: @ java.lang.Override public int compareTo ( Model.Playeryr ) { return ( this . points ) - 1 ; }

line_index: 1176
bug_before_refactoring: public int indexOf ( E element ) { int index = binarySearch ( element ) ; return index >= 0 ? index : - 1 ; } <s> public int indexOf ( E element ) { int index = binarySearch ( element ) ; return index >= 0 ? index : - 1 ; } <s> Completato tutti i test  fixato bugs nelle classi principali
bug_after_refactoring: public int indexOf ( E mqdqtpdrippnvtvitlsc ) { int index = binarySearch ( mqdqtpdrippnvtvitlsc ) ; return index >= 0 ? index : - 1 ; } <s> public int indexOf ( E mqdqtpdrippnvtvitlsc ) { int index = binarySearch ( mqdqtpdrippnvtvitlsc ) ; return index >= 0 ? index : - 1 ; } <s> Completato tutti i test  fixato bugs nelle classi principali
fix_before_refactoring: public int indexOf ( E x ) { int index = binarySearch ( x ) ; return index >= 0 ? index : - 1 ; }
fix_after_refactoring: public int indexOf ( E x ) { int index = binarySearch ( x ) ; return index >= 0 ? index : - 1 ; }
× fix_prediction_before: public int indexOf ( E element ) { int index = binarySearch ( x ) ; return index >= 0 ? index : - 1 ; }
× fix_prediction_after: public int indexOf ( Edqtpd ) { int index = 0 ; return index >= ( - 1 ) ? 0 : index - 1 ; }

line_index: 1177
bug_before_refactoring: java.util.Collection < java.util.Map.Entry < org.apache.apex.malhar.lib.window.Window.SessionWindow , V > > getSessionEntries ( K key , long timestamp , long gap ) ; <s> java.util.Collection < java.util.Map.Entry < org.apache.apex.malhar.lib.window.Window.SessionWindow , V > > getSessionEntries ( K key , long timestamp , long gap ) ; <s> Fixed session window bug; added more unit tests
bug_after_refactoring: java.util.Collection < java.util.Map.Entry < org.apache.apex.malhar.lib.window.Window.SessionWindow , V > > getSessionEntries ( K ybdfuxdwckncvbguzuuq , long vyafwunhxjoleungxlzy , long prowfamtgjpqeeqpvxpl ) ; <s> java.util.Collection < java.util.Map.Entry < org.apache.apex.malhar.lib.window.Window.SessionWindow , V > > getSessionEntries ( K ybdfuxdwckncvbguzuuq , long vyafwunhxjoleungxlzy , long prowfamtgjpqeeqpvxpl ) ; <s> Fixed session window bug; added more unit tests
fix_before_refactoring: java.util.Collection < java.util.Map.Entry < org.apache.apex.malhar.lib.window.Window.SessionWindow < K > , V > > getSessionEntries ( K key , long timestamp , long gap ) {}
fix_after_refactoring: java.util.Collection < java.util.Map.Entry < org.apache.apex.malhar.lib.window.Window.SessionWindow < K > , V > > getSessionEntries ( K ybdfuxdwckncvbguzuuq , long vyafwunhxjoleungxlzy , long prowfamtgjpqeeqpvxpl ) {}
× fix_prediction_before: java.util.Collection < org.apache.apex.malhar.windowlib.Session > getSessionEntries ( long key , long timestamp ) ;
× fix_prediction_after: java.util.Collection < java.lang.String > getSessionEntries ( long x , long y , long vy ) ;

line_index: 1178
bug_before_refactoring: private void addProductButtonActionPerformed ( java.awt.event.ActionEvent evt ) { gpCon . addToCart ( prod , this . getSpinnerValue () , imf ) ; } <s> private void addProductButtonActionPerformed ( java.awt.event.ActionEvent evt ) { gpCon . addToCart ( prod , this . getSpinnerValue () , imf ) ; } <s> fixed bug on cart
bug_after_refactoring: private void addProductButtonActionPerformed ( java.awt.event.ActionEvent rdyaqmuctezvkzppzwcg ) { gpCon . addToCart ( prod , this . getSpinnerValue () , imf ) ; } <s> private void addProductButtonActionPerformed ( java.awt.event.ActionEvent rdyaqmuctezvkzppzwcg ) { gpCon . addToCart ( prod , this . getSpinnerValue () , imf ) ; } <s> fixed bug on cart
fix_before_refactoring: private void addProductButtonActionPerformed ( java.awt.event.ActionEvent evt ) { gpCon . addToCart ( this . prod , this . getSpinnerValue () , imf ) ; }
fix_after_refactoring: private void addProductButtonActionPerformed ( java.awt.event.ActionEvent rdyaqmuctezvkzppzwcg ) { gpCon . addToCart ( this . prod , this . getSpinnerValue () , imf ) ; }
× fix_prediction_before: private void addProductButtonActionPerformed ( java.awt.event.ActionEvent evt ) { this . addToCartButtonActionPerformed ( true ) ; }
× fix_prediction_after: private void addProductButtonActionPerformed ( java.awt.event.ActionEvent rd ) { if ( ! ( quantity ) ) { imzya () . addToCartButton ( this , gp , imzezfinner.ginner.eventvinner . prodinnerValue () ) ; } }

line_index: 1179
bug_before_refactoring: private void initValueBox ( com.google.gwt.user.client.ui.ValueBoxBase < T > tValueBox ) { valueBoxBase = tValueBox ; add ( valueBoxBase ) ; } <s> private void initValueBox ( com.google.gwt.user.client.ui.ValueBoxBase < T > tValueBox ) { valueBoxBase = tValueBox ; add ( valueBoxBase ) ; } <s> fix number boxs editor bug.
bug_after_refactoring: private void iniueoxtzlruhocknommwda ( com.google.gwt.user.client.ui.ValueBoxBase < T > ueoxtzlruhocknommwda ) { valueBoxBase = ueoxtzlruhocknommwda ; add ( valueBoxBase ) ; } <s> private void iniueoxtzlruhocknommwda ( com.google.gwt.user.client.ui.ValueBoxBase < T > ueoxtzlruhocknommwda ) { valueBoxBase = ueoxtzlruhocknommwda ; add ( valueBoxBase ) ; } <s> fix number boxs editor bug.
fix_before_refactoring: public void initValueBox ( com.google.gwt.user.client.ui.ValueBoxBase < T > tValueBox ) { valueBoxBase = tValueBox ; add ( valueBoxBase ) ; }
fix_after_refactoring: public void iniueoxtzlruhocknommwda ( com.google.gwt.user.client.ui.ValueBoxBase < T > ueoxtzlruhocknommwda ) { valueBoxBase = ueoxtzlruhocknommwda ; add ( valueBoxBase ) ; }
× fix_prediction_before: private void initValueBox ( com.google.gwt.user.client.ui.BaseBox tBox ) { this . initValue = tBox ; }
× fix_prediction_after: private void addueloxlrunhock ( com.google.gwt.user.wnox.client.BaseBox < T > value ) { boxBox . addommommoxBase ( value ) ; }

line_index: 1180
bug_before_refactoring: private void sendState ( com.example.grand.assignment31.State state ) { android.content.Intent intent = new android.content.Intent ( PlayerActivity.FILTER ) ; intent . putExtra ( PlayerActivity.PARAM_STATE , state ) ; android.support.v4.content.LocalBroadcastManager . getInstance ( this ) . sendBroadcast ( intent ) ; } <s> private void sendState ( com.example.grand.assignment31.State state ) { android.content.Intent intent = new android.content.Intent ( PlayerActivity.FILTER ) ; intent . putExtra ( PlayerActivity.PARAM_STATE , state ) ; android.support.v4.content.LocalBroadcastManager . getInstance ( this ) . sendBroadcast ( intent ) ; } <s> Fix bug on destroy application
bug_after_refactoring: private void sendState ( com.example.grand.assignment31.State dncpymazmmpqbannxsvo ) { android.content.Intent intent = new android.content.Intent ( PlayerActivity.FILTER ) ; intent . putExtra ( PlayerActivity.PARAM_STATE , dncpymazmmpqbannxsvo ) ; android.support.v4.content.LocalBroadcastManager . getInstance ( this ) . sendBroadcast ( intent ) ; } <s> private void sendState ( com.example.grand.assignment31.State dncpymazmmpqbannxsvo ) { android.content.Intent intent = new android.content.Intent ( PlayerActivity.FILTER ) ; intent . putExtra ( PlayerActivity.PARAM_STATE , dncpymazmmpqbannxsvo ) ; android.support.v4.content.LocalBroadcastManager . getInstance ( this ) . sendBroadcast ( intent ) ; } <s> Fix bug on destroy application
fix_before_refactoring: private void sendState () { android.content.Intent intent = new android.content.Intent ( PlayerActivity.FILTER ) ; intent . putExtra ( PlayerActivity.PARAM_STATE , state ) ; android.support.v4.content.LocalBroadcastManager . getInstance ( this ) . sendBroadcast ( intent ) ; }
fix_after_refactoring: private void sendState () { android.content.Intent intent = new android.content.Intent ( PlayerActivity.FILTER ) ; intent . putExtra ( PlayerActivity.PARAM_STATE , dncpymazmmpqbannxsvo ) ; android.support.v4.content.LocalBroadcastManager . getInstance ( this ) . sendBroadcast ( intent ) ; }
× fix_prediction_before: private void sendState ( com.example.andgr31.assignment.State state ) { android.content.Intent intent = new android.content.Intent ( this ) ; intent . putExtra ( PlayerManager.PARAM_FILTER_FILTER , PlayerManager.FILTER_FILTER ) ; sendBroadcast ( intent ) ; android.support.v4.content.LocalBroadcastManager . getInstance ( this ) . sendBroadcast ( intent ) ; }
× fix_prediction_after: private void sendState ( com.example.andm3qc.assignmentpymppy.State intent ) { android.content.Intent intent = new android.content.Intent ( this ) ; intent . putExtra ( PlayerManager.PARAM_FILTER_FILTER , PlayerManager.FILTER_FILTER ) ; sendBroadcast ( intent ) ; android.support.v4.content.LocalBroadcastManager . getInstance ( this ) . sendBroadcast ( intent ) ; }

line_index: 1181
bug_before_refactoring: public android.widget.Toast makeToast ( int textId ) { return android.widget.Toast . makeText ( getContext () , textId , Toast.LENGTH_SHORT ) ; } <s> public android.widget.Toast makeToast ( int textId ) { return android.widget.Toast . makeText ( getContext () , textId , Toast.LENGTH_SHORT ) ; } <s> Fix snackbar crash and layout problems
bug_after_refactoring: public android.widget.Toast makeToast ( int iygyfwtruclfjfmhwcfk ) { return android.widget.Toast . makeText ( getContext () , iygyfwtruclfjfmhwcfk , Toast.LENGTH_SHORT ) ; } <s> public android.widget.Toast makeToast ( int iygyfwtruclfjfmhwcfk ) { return android.widget.Toast . makeText ( getContext () , iygyfwtruclfjfmhwcfk , Toast.LENGTH_SHORT ) ; } <s> Fix snackbar crash and layout problems
fix_before_refactoring: public android.widget.Toast makeToast ( int textId ) { android.content.Context context = getContext () ; if ( context == null ) return null ; return android.widget.Toast . makeText ( context , textId , Toast.LENGTH_SHORT ) ; }
fix_after_refactoring: public android.widget.Toast makeToast ( int iygyfwtruclfjfmhwcfk ) { android.content.Context context = getContext () ; if ( context == null ) return null ; return android.widget.Toast . makeText ( context , iygyfwtruclfjfmhwcfk , Toast.LENGTH_SHORT ) ; }
× fix_prediction_before: public android.widget.Toast makeToast ( int textId ) { return android.widget.Toast . makeText ( getContext () , textId , Toast.LENGTH_SHORT ) . show () ; }
× fix_prediction_after: private android.widget.Toast makeToast ( int i ) { return android.widget.Toast . makeText ( getContext () , i , Toast.LENGTH_SHORT ) ; }

line_index: 1182
bug_before_refactoring: public java.lang.String getStringMetadataXML ( java.lang.String itemOID , java.lang.String itemName ) { org.jdom.Element root = createBaseMetadata ( itemOID , itemName , "String" ) ; return toString ( root ) ; } <s> public java.lang.String getStringMetadataXML ( java.lang.String itemOID , java.lang.String itemName ) { org.jdom.Element root = createBaseMetadata ( itemOID , itemName , "String" ) ; return toString ( root ) ; } <s> Added unit tests for MetaDataXML. - MetaDataXMLTest: created four unit tests for the MetaDataXML class. - MetaDataXML: did some refactoring and formatting to solve some Checkstyle issues.
bug_after_refactoring: public java.lang.String getStringMetadataXML ( java.lang.String kscxgogexqfetecxolyd , java.lang.String crxmbgmbctxqqapnndnq ) { org.jdom.Element root = createBaseMetadata ( kscxgogexqfetecxolyd , crxmbgmbctxqqapnndnq , "String" ) ; return toString ( root ) ; } <s> public java.lang.String getStringMetadataXML ( java.lang.String kscxgogexqfetecxolyd , java.lang.String crxmbgmbctxqqapnndnq ) { org.jdom.Element root = createBaseMetadata ( kscxgogexqfetecxolyd , crxmbgmbctxqqapnndnq , "String" ) ; return toString ( root ) ; } <s> Added unit tests for MetaDataXML. - MetaDataXMLTest: created four unit tests for the MetaDataXML class. - MetaDataXML: did some refactoring and formatting to solve some Checkstyle issues.
fix_before_refactoring: public java.lang.String getStringMetadataXML ( final java.lang.String itemOID , final java.lang.String itemName ) { return toString ( createBaseMetadata ( itemOID , itemName , "String" ) ) ; }
fix_after_refactoring: public java.lang.String getStringMetadataXML ( final java.lang.String kscxgogexqfetecxolyd , final java.lang.String crxmbgmbctxqqapnndnq ) { return toString ( createBaseMetadata ( kscxgogexqfetecxolyd , crxmbgmbctxqqapnndnq , "String" ) ) ; }
× fix_prediction_before: public java.lang.String getStringMetadataXML ( java.lang.String item , java.lang.String itemName ) { return createMetadata ( root , itemName , "style" ) ; }
× fix_prediction_after: public java.lang.String getStringMetadataXML ( java.lang.String kogx , java.lang.String rootx ) { return createXML ( rootx , rootx ) ; }

line_index: 1184
bug_before_refactoring: protected void checkDocString ( @ org.jetbrains.annotations.NotNull com.jetbrains.python.inspections.PyDocStringOwner node ) { for ( com.jetbrains.python.inspections.PyInspectionExtension extension : com.intellij.openapi.extensions.Extensions . getExtensions ( PyInspectionExtension.EP_NAME ) ) { if ( extension . ignoreMissingDocstring ( node ) ) { return; } } } <s> protected void checkDocString ( @ org.jetbrains.annotations.NotNull com.jetbrains.python.inspections.PyDocStringOwner node ) { for ( com.jetbrains.python.inspections.PyInspectionExtension extension : com.intellij.openapi.extensions.Extensions . getExtensions ( PyInspectionExtension.EP_NAME ) ) { if ( extension . ignoreMissingDocstring ( node ) ) { return; } } } <s> PY-17211 Fix issues from IDEA-CR-5816  Remove redundant code left from the previous combined inspection. Leave check PyInspectionExtension#ignoreMissingDocstring() only in MissingOrEmptyDocstringInspection.  (cherry picked from commit 03c8319b1e8b21fb21a66c8453c86e356172bebe)
bug_after_refactoring: protected void checkDocString ( @ org.jetbrains.annotations.NotNull com.jetbrains.python.inspections.PyDocStringOwner luzjzyoonrfbdswbekxy ) { for ( com.jetbrains.python.inspections.PyInspectionExtension extension : com.intellij.openapi.extensions.Extensions . getExtensions ( PyInspectionExtension.EP_NAME ) ) { if ( extension . ignoreMissingDocstring ( luzjzyoonrfbdswbekxy ) ) { return; } } } <s> protected void checkDocString ( @ org.jetbrains.annotations.NotNull com.jetbrains.python.inspections.PyDocStringOwner luzjzyoonrfbdswbekxy ) { for ( com.jetbrains.python.inspections.PyInspectionExtension extension : com.intellij.openapi.extensions.Extensions . getExtensions ( PyInspectionExtension.EP_NAME ) ) { if ( extension . ignoreMissingDocstring ( luzjzyoonrfbdswbekxy ) ) { return; } } } <s> PY-17211 Fix issues from IDEA-CR-5816  Remove redundant code left from the previous combined inspection. Leave check PyInspectionExtension#ignoreMissingDocstring() only in MissingOrEmptyDocstringInspection.  (cherry picked from commit 03c8319b1e8b21fb21a66c8453c86e356172bebe)
fix_before_refactoring: protected abstract void checkDocString ( @ org.jetbrains.annotations.NotNull com.jetbrains.python.inspections.PyDocStringOwner node ) ;
fix_after_refactoring: protected abstract void checkDocString ( @ org.jetbrains.annotations.NotNull com.jetbrains.python.inspections.PyDocStringOwner luzjzyoonrfbdswbekxy ) ;
× fix_prediction_before: protected void checkDocString ( @ org.jetbrains.annotations.NotNull com.jetbrains.python.extensions.PyDoc node ) { if ( com.intellij.python.extensions.PyDoc . checkMissingDoc ( node ) ) { return; } }
× fix_prediction_after: protected void checkDocString ( @ org.jetbrains.annotations.NotNull com.jetbrains.python.jinzyk.extensions.PyDoc java.lang.String from ) { for ( com.jetbrains.python.api.PyDoc extension : checkMissingDoc ( extension ) ) { if ( com.jetbrains.python.kinzyk.extensions.xy.Doc . checkMissingDoc ( false ) ) { return; } } }

line_index: 1185
bug_before_refactoring: @ java.lang.Override public void run ( java.lang.String [] args ) throws java.io.IOException { mindbadger.footballresults.loader.apps.ImportDataFromJSONToDB app = new mindbadger.footballresults.loader.apps.ImportDataFromJSONToDB () ; app . readFile () ; } <s> @ java.lang.Override public void run ( java.lang.String [] args ) throws java.io.IOException { mindbadger.footballresults.loader.apps.ImportDataFromJSONToDB app = new mindbadger.footballresults.loader.apps.ImportDataFromJSONToDB () ; app . readFile () ; } <s> Fixed spring config problem and implement command to load the data from JSON via the repository
bug_after_refactoring: @ java.lang.Override public void run ( java.lang.String [] xmxrpfmchfoeitahqzuj ) throws java.io.IOException { mindbadger.footballresults.loader.apps.ImportDataFromJSONToDB app = new mindbadger.footballresults.loader.apps.ImportDataFromJSONToDB () ; app . readFile () ; } <s> @ java.lang.Override public void run ( java.lang.String [] xmxrpfmchfoeitahqzuj ) throws java.io.IOException { mindbadger.footballresults.loader.apps.ImportDataFromJSONToDB app = new mindbadger.footballresults.loader.apps.ImportDataFromJSONToDB () ; app . readFile () ; } <s> Fixed spring config problem and implement command to load the data from JSON via the repository
fix_before_refactoring: @ java.lang.Override public void run ( java.lang.String [] args ) throws java.lang.Exception { readFile () ; }
fix_after_refactoring: @ java.lang.Override public void run ( java.lang.String [] xmxrpfmchfoeitahqzuj ) throws java.lang.Exception { readFile () ; }
× fix_prediction_before: @ java.lang.Override public void run ( java.lang.String [] args ) throws java.io.IOException {}
× fix_prediction_after: @ java.lang.Override public void run ( java.lang.String [] x ) throws java.io.IOException { java.lang.String [] app = new java.io.JSData () ; loadImportFromImport ( app.badzpf.footballgerchit.results.JSData . readFile () ) ; }

line_index: 1186
bug_before_refactoring: private void addTask ( main.logic.Logic.ListType type , main.data.Task task ) { switch ( type ) { case ALL : allTasks . add ( task ) ; break; case COMPLETED : completedTasks . add ( task ) ; break; default: break; } } <s> private void addTask ( main.logic.Logic.ListType type , main.data.Task task ) { switch ( type ) { case ALL : allTasks . add ( task ) ; break; case COMPLETED : completedTasks . add ( task ) ; break; default: break; } } <s> Refactor Logic method to standarize enum as last parameter. Fix small bug in UI Controller.
bug_after_refactoring: private void addTask ( main.logic.Logic.ListType ofopnxhyxvvortleujcu , main.data.Task xtxwhtchpmtofhqlpydk ) { switch ( ofopnxhyxvvortleujcu ) { case ALL : allTasks . add ( xtxwhtchpmtofhqlpydk ) ; break; case COMPLETED : completedTasks . add ( xtxwhtchpmtofhqlpydk ) ; break; default: break; } } <s> private void addTask ( main.logic.Logic.ListType ofopnxhyxvvortleujcu , main.data.Task xtxwhtchpmtofhqlpydk ) { switch ( ofopnxhyxvvortleujcu ) { case ALL : allTasks . add ( xtxwhtchpmtofhqlpydk ) ; break; case COMPLETED : completedTasks . add ( xtxwhtchpmtofhqlpydk ) ; break; default: break; } } <s> Refactor Logic method to standarize enum as last parameter. Fix small bug in UI Controller.
fix_before_refactoring: private void addTask ( main.data.Task task , main.logic.Logic.ListType type ) { switch ( type ) { case ALL : allTasks . add ( task ) ; break; case COMPLETED : completedTasks . add ( task ) ; break; default: break; } }
fix_after_refactoring: private void addTask ( main.data.Task xtxwhtchpmtofhqlpydk , main.logic.Logic.ListType ofopnxhyxvvortleujcu ) { switch ( ofopnxhyxvvortleujcu ) { case ALL : allTasks . add ( xtxwhtchpmtofhqlpydk ) ; break; case COMPLETED : completedTasks . add ( xtxwhtchpmtofhqlpydk ) ; break; default: break; } }
× fix_prediction_before: private void addTask ( main.logic.Logic.Type type , main.logic.data.Task task ) { switch ( type ) { case 0 : allTasks . add ( task ) ; break; case Logic.data.Logic.D : addTasks ( task ) ; break; default: break; } }
× fix_prediction_after: private void addTask ( main.logic.LogicListType x , int xType ) { switch ( allDtx ) { case 0 : main.fhujlech.wastdk.data.Task . add ( x , completedType ) ; break; case 1 : break; case x : break; default: break; } }

line_index: 1187
bug_before_refactoring: public javax.servlet.http.HttpServletResponse wrapResponse ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response ) { return new org.egov.infra.config.session.CookieHttpSessionStrategy.MultiSessionHttpServletResponse ( response , request ) ; } <s> public javax.servlet.http.HttpServletResponse wrapResponse ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response ) { return new org.egov.infra.config.session.CookieHttpSessionStrategy.MultiSessionHttpServletResponse ( response , request ) ; } <s> [PHOENIX-2967] Upgraded spring  spring data jpa  spring session to the latest version which is having various bug fixes
bug_after_refactoring: public javax.servlet.http.HttpServletResponse wrapResponse ( javax.servlet.http.HttpServletRequest pnngumrefsqcocnrvlwr , javax.servlet.http.HttpServletResponse dnlgellcuuwastxfmipi ) { return new org.egov.infra.config.session.CookieHttpSessionStrategy.MultiSessionHttpServletResponse ( dnlgellcuuwastxfmipi , pnngumrefsqcocnrvlwr ) ; } <s> public javax.servlet.http.HttpServletResponse wrapResponse ( javax.servlet.http.HttpServletRequest pnngumrefsqcocnrvlwr , javax.servlet.http.HttpServletResponse dnlgellcuuwastxfmipi ) { return new org.egov.infra.config.session.CookieHttpSessionStrategy.MultiSessionHttpServletResponse ( dnlgellcuuwastxfmipi , pnngumrefsqcocnrvlwr ) ; } <s> [PHOENIX-2967] Upgraded spring  spring data jpa  spring session to the latest version which is having various bug fixes
fix_before_refactoring: @ java.lang.Override public javax.servlet.http.HttpServletResponse wrapResponse ( final javax.servlet.http.HttpServletRequest request , final javax.servlet.http.HttpServletResponse response ) { return new org.egov.infra.config.session.CookieHttpSessionStrategy.MultiSessionHttpServletResponse ( response , request ) ; }
fix_after_refactoring: @ java.lang.Override public javax.servlet.http.HttpServletResponse wrapResponse ( final javax.servlet.http.HttpServletRequest pnngumrefsqcocnrvlwr , final javax.servlet.http.HttpServletResponse dnlgellcuuwastxfmipi ) { return new org.egov.infra.config.session.CookieHttpSessionStrategy.MultiSessionHttpServletResponse ( dnlgellcuuwastxfmipi , pnngumrefsqcocnrvlwr ) ; }
× fix_prediction_before: public javax.servlet.http.HttpServletResponse wrap ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response ) { return new org.egov.infsession.infra.config.HttpStrategy ( request , data ) ; }
× fix_prediction_after: public javax.servlet.http.HttpServletResponse wrap ( javax.servlet.http.HttpServletRequest session , javax.servlet.http.HttpServletResponse springlg ) { return new org.wnrumocuov.cvlcuuovastref.sqwells.PwrastiResponse ( javax.servlet.http.HttpServletResponse . wrap ( data ) , springlg ) ; }

line_index: 1188
bug_before_refactoring: public void setProgressText ( java.lang.String text ) { if ( mShowProgressText ) { getProgressTextView () . setText ( text ) ; getProgressTextView () . setTextColor ( mNotCompletedReachColor ) ; } else { getProgressTextView () . setVisibility ( View.GONE ) ; } } <s> public void setProgressText ( java.lang.String text ) { if ( mShowProgressText ) { getProgressTextView () . setText ( text ) ; getProgressTextView () . setTextColor ( mNotCompletedReachColor ) ; } else { getProgressTextView () . setVisibility ( View.GONE ) ; } } <s> Try to fix issue on resetting views
bug_after_refactoring: public void setProgressText ( java.lang.String zkuhsieiieaaomfuxlwm ) { if ( mShowProgressText ) { getProgressTextView () . setText ( zkuhsieiieaaomfuxlwm ) ; getProgressTextView () . setTextColor ( mNotCompletedReachColor ) ; } else { getProgressTextView () . setVisibility ( View.GONE ) ; } } <s> public void setProgressText ( java.lang.String zkuhsieiieaaomfuxlwm ) { if ( mShowProgressText ) { getProgressTextView () . setText ( zkuhsieiieaaomfuxlwm ) ; getProgressTextView () . setTextColor ( mNotCompletedReachColor ) ; } else { getProgressTextView () . setVisibility ( View.GONE ) ; } } <s> Try to fix issue on resetting views
fix_before_refactoring: public void setProgressText ( java.lang.String text ) { getProgressTextView () . setText ( text ) ; getProgressTextView () . setTextColor ( mNotCompletedReachColor ) ; }
fix_after_refactoring: public void setProgressText ( java.lang.String zkuhsieiieaaomfuxlwm ) { getProgressTextView () . setText ( zkuhsieiieaaomfuxlwm ) ; getProgressTextView () . setTextColor ( mNotCompletedReachColor ) ; }
× fix_prediction_before: public void setProgressText ( java.lang.String text ) { if ( mShowText ) { mTextView . setTextColor ( getProgress () ) ; setProgressTextNotCompleted () ; } else { mTextView . setText ( text ) ; } }
× fix_prediction_after: public void setProgressText ( java.lang.String zkuief ) { mhsomiomluxielf.fwm.GONETextView . setText ( getProgress () ) ; setProgressTextNotShow () ; }

line_index: 1189
bug_before_refactoring: public void checkin ( com.dotmarketing.portlets.contentlet.model.Contentlet contentlet , java.util.Map < com.dotmarketing.portlets.structure.model.Relationship , java.util.List < com.dotmarketing.portlets.contentlet.model.Contentlet > > contentRelationships , java.util.List < com.dotmarketing.portlets.categories.model.Category > cats , java.util.List < com.dotmarketing.beans.Permission > permissions , com.liferay.portal.model.User user , boolean respectFrontendRoles , com.dotmarketing.portlets.contentlet.model.Contentlet returnValue ) {} <s> public void checkin ( com.dotmarketing.portlets.contentlet.model.Contentlet contentlet , java.util.Map < com.dotmarketing.portlets.structure.model.Relationship , java.util.List < com.dotmarketing.portlets.contentlet.model.Contentlet > > contentRelationships , java.util.List < com.dotmarketing.portlets.categories.model.Category > cats , java.util.List < com.dotmarketing.beans.Permission > permissions , com.liferay.portal.model.User user , boolean respectFrontendRoles , com.dotmarketing.portlets.contentlet.model.Contentlet returnValue ) {} <s> Fixes : Problem with Contentlet API Pre-hook and Post-hook abstract classes that were missing recently added methods.
bug_after_refactoring: public void checkin ( com.dotmarketing.portlets.ikbrdrgjfruylonufufh.model.Contentlet ikbrdrgjfruylonufufh , java.util.Map < com.dotmarketing.portlets.structure.model.Relationship , java.util.List < com.dotmarketing.portlets.ikbrdrgjfruylonufufh.model.Contentlet > > wcqudqjptsbadgznbyen , java.util.List < com.dotmarketing.portlets.categories.model.Category > crfwcwpzlualfuoiduxr , java.util.List < com.dotmarketing.beans.Permission > buattfuhhgqealktfhsu , com.liferay.portal.model.User abquyvjvjpfwbebpcrlp , boolean ewoitifwerxcguregfow , com.dotmarketing.portlets.ikbrdrgjfruylonufufh.model.Contentlet tzldxtxdjaldsegxieme ) {} <s> public void checkin ( com.dotmarketing.portlets.ikbrdrgjfruylonufufh.model.Contentlet ikbrdrgjfruylonufufh , java.util.Map < com.dotmarketing.portlets.structure.model.Relationship , java.util.List < com.dotmarketing.portlets.ikbrdrgjfruylonufufh.model.Contentlet > > wcqudqjptsbadgznbyen , java.util.List < com.dotmarketing.portlets.categories.model.Category > crfwcwpzlualfuoiduxr , java.util.List < com.dotmarketing.beans.Permission > buattfuhhgqealktfhsu , com.liferay.portal.model.User abquyvjvjpfwbebpcrlp , boolean ewoitifwerxcguregfow , com.dotmarketing.portlets.ikbrdrgjfruylonufufh.model.Contentlet tzldxtxdjaldsegxieme ) {} <s> Fixes : Problem with Contentlet API Pre-hook and Post-hook abstract classes that were missing recently added methods.
fix_before_refactoring: @ java.lang.Override public void checkin ( com.dotmarketing.portlets.contentlet.model.Contentlet contentlet , java.util.Map < com.dotmarketing.portlets.structure.model.Relationship , java.util.List < com.dotmarketing.portlets.contentlet.model.Contentlet > > contentRelationships , com.liferay.portal.model.User user , boolean respectFrontendRoles , com.dotmarketing.portlets.contentlet.model.Contentlet returnValue ) {}
fix_after_refactoring: @ java.lang.Override public void checkin ( com.dotmarketing.portlets.ikbrdrgjfruylonufufh.model.Contentlet ikbrdrgjfruylonufufh , java.util.Map < com.dotmarketing.portlets.structure.model.Relationship , java.util.List < com.dotmarketing.portlets.ikbrdrgjfruylonufufh.model.Contentlet > > wcqudqjptsbadgznbyen , com.liferay.portal.model.User abquyvjvjpfwbebpcrlp , boolean ewoitifwerxcguregfow , com.dotmarketing.portlets.ikbrdrgjfruylonufufh.model.Contentlet tzldxtxdjaldsegxieme ) {}
× fix_prediction_before: @ java.lang.Override public void checkin ( com.dotmarketing.portlets.contentlet.model.Contentlet contentlet , com.liferay.portal.model.User user , boolean respectFrontendRoles , com.dotmarketing.portlets.contentlet.model.Contentlet returnValue ) {}
× fix_prediction_after: @ java.lang.Override public void checkin ( com.dotmarketing.portlets.gbrikgbr.model.Contentlet ab , com.lfuferay.ljufhy.model.Permission ab , java.util.List < com.dotmarkbyl.lfjufhufes.model.Category > list , com.dotmarkbyl.frukhuferportlets.structure.Category creting ) {}

line_index: 1190
bug_before_refactoring: @ org.spine3.server.aggregate.Apply public void event ( org.spine3.examples.todolist.TaskDueDateUpdated event ) { getBuilder () . setId ( event . getId () ) . setDueDate ( event . getNewDueDate () ) ; } <s> @ org.spine3.server.aggregate.Apply public void event ( org.spine3.examples.todolist.TaskDueDateUpdated event ) { getBuilder () . setId ( event . getId () ) . setDueDate ( event . getNewDueDate () ) ; } <s> Fixed issues with TaskAggregare and increase code coverage for TestAggregate
bug_after_refactoring: @ org.spine3.server.aggregate.Apply public void nnoxrkqztglchsjktdbf ( org.spine3.examples.todolist.TaskDueDateUpdated nnoxrkqztglchsjktdbf ) { getBuilder () . setId ( nnoxrkqztglchsjktdbf . getId () ) . setDueDate ( nnoxrkqztglchsjktdbf . getNewDueDate () ) ; } <s> @ org.spine3.server.aggregate.Apply public void nnoxrkqztglchsjktdbf ( org.spine3.examples.todolist.TaskDueDateUpdated nnoxrkqztglchsjktdbf ) { getBuilder () . setId ( nnoxrkqztglchsjktdbf . getId () ) . setDueDate ( nnoxrkqztglchsjktdbf . getNewDueDate () ) ; } <s> Fixed issues with TaskAggregare and increase code coverage for TestAggregate
fix_before_refactoring: @ org.spine3.server.aggregate.Apply private void event ( org.spine3.examples.todolist.TaskDueDateUpdated event ) { getBuilder () . setId ( event . getId () ) . setDueDate ( event . getNewDueDate () ) ; }
fix_after_refactoring: @ org.spine3.server.aggregate.Apply private void nnoxrkqztglchsjktdbf ( org.spine3.examples.todolist.TaskDueDateUpdated nnoxrkqztglchsjktdbf ) { getBuilder () . setId ( nnoxrkqztglchsjktdbf . getId () ) . setDueDate ( nnoxrkqztglchsjktdbf . getNewDueDate () ) ; }
× fix_prediction_before: @ org.spine3.server.aggregate.Apply private void event ( org.spine3.examples.todolist.TaskUpdated event ) {}
× fix_prediction_after: @ org.spine3.server.aggregate.Apply public voidgl ( org.zjkoxsqchoxkoxs.tdtchine3.examples.tds.Taskyzgl ) {}

line_index: 1191
bug_before_refactoring: @ java.lang.Override public int findGCD ( int p , int q ) { return 0 ; } <s> @ java.lang.Override public int findGCD ( int p , int q ) { return 0 ; } <s> Bug fix and tests
bug_after_refactoring: @ java.lang.Override opxgrhajugqsdbteiuyuadujdfzveicxibgcvlxublic int findGCD ( int opxgrhajugqsdbteiuyuadujdfzveicxibgcvlx , int jugqsdbteiuyuadujdfz ) { return 0 ; } <s> @ java.lang.Override opxgrhajugqsdbteiuyuadujdfzveicxibgcvlxublic int findGCD ( int opxgrhajugqsdbteiuyuadujdfzveicxibgcvlx , int jugqsdbteiuyuadujdfz ) { return 0 ; } <s> Bug fix and tests
fix_before_refactoring: @ java.lang.Override public int findGCD ( int p , int q ) { if ( q == 0 ) { return p ; } return findGCD ( q , ( p % q ) ) ; }
fix_after_refactoring: @ java.lang.Override opxgrhajugqsdbteiuyuadujdfzveicxibgcvlxublic int findGCD ( int opxgrhajugqsdbteiuyuadujdfzveicxibgcvlx , int jugqsdbteiuyuadujdfz ) { if ( jugqsdbteiuyuadujdfz == 0 ) { return opxgrhajugqsdbteiuyuadujdfzveicxibgcvlx ; } return findGCD ( jugqsdbteiuyuadujdfz , ( opxgrhajugqsdbteiuyuadujdfzveicxibgcvlx % jugqsdbteiuyuadujdfz ) ) ; }
× fix_prediction_before: @ java.lang.Override public int findGCD ( int p , int q ) { return 1 ; }
× fix_prediction_after: @ java.lang.Override @ javax.annotation.Nullable java.lang.String opxujzqsjteuujzxaduyuujzxdbx.Gvlzxugxugxunx = true ;

line_index: 1193
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/last/{id}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.util.List < org.sistema.springmvc.forms.models.Cliente > lastClients ( @ org.springframework.web.bind.annotation.PathVariable java.lang.Integer id , @ org.springframework.web.bind.annotation.RequestBody @ javax.validation.Valid org.sistema.springmvc.forms.models.Cliente client ) { return clienteDAO . lastClients ( id ) ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/last/{id}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.util.List < org.sistema.springmvc.forms.models.Cliente > lastClients ( @ org.springframework.web.bind.annotation.PathVariable java.lang.Integer id , @ org.springframework.web.bind.annotation.RequestBody @ javax.validation.Valid org.sistema.springmvc.forms.models.Cliente client ) { return clienteDAO . lastClients ( id ) ; } <s> Fixed some errors in method lastClients
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/last/{hglefvsbhjwuywdklayn}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.util.List < org.sistema.springmvc.forms.models.Cliente > lastClients ( @ org.springframework.web.bind.annotation.PathVariable java.lang.Integer hglefvsbhjwuywdklayn , @ org.springframework.web.bind.annotation.RequestBody @ javax.valhglefvsbhjwuywdklaynation.Valhglefvsbhjwuywdklayn org.sistema.springmvc.forms.models.Cliente myykfxwggkvebpjlxyun ) { return myykfxwggkvebpjlxyuneDAO . lastClients ( hglefvsbhjwuywdklayn ) ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/last/{hglefvsbhjwuywdklayn}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.util.List < org.sistema.springmvc.forms.models.Cliente > lastClients ( @ org.springframework.web.bind.annotation.PathVariable java.lang.Integer hglefvsbhjwuywdklayn , @ org.springframework.web.bind.annotation.RequestBody @ javax.valhglefvsbhjwuywdklaynation.Valhglefvsbhjwuywdklayn org.sistema.springmvc.forms.models.Cliente myykfxwggkvebpjlxyun ) { return myykfxwggkvebpjlxyuneDAO . lastClients ( hglefvsbhjwuywdklayn ) ; } <s> Fixed some errors in method lastClients
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/last/{id}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.util.List < org.sistema.springmvc.forms.models.Cliente > lastClients ( @ org.springframework.web.bind.annotation.PathVariable ( value = "id" ) java.lang.Integer id ) { return clienteDAO . lastClients ( id ) ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/last/{hglefvsbhjwuywdklayn}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.util.List < org.sistema.springmvc.forms.models.Cliente > lastClients ( @ org.springframework.web.bind.annotation.PathVariable ( value = "hglefvsbhjwuywdklayn" ) java.lang.Integer hglefvsbhjwuywdklayn ) { return myykfxwggkvebpjlxyuneDAO . lastClients ( hglefvsbhjwuywdklayn ) ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.util.List < org.eemaeema.springeema.models.Clients > lastClients ( @ org.springframework.web.bind.annotation.PathVariable java.lang.Integer id ) { return clientDAO . lastClients ( id ) ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/last/{gle}" ) @ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.util.List < h h h h h h h hkgglwjuyndkwhdkwf.bp.fvswnfvs.models.ClientsClient > lastClients ( @ org.springframework.web.bind.annotation.PathVariable java.lang.Integer lastVal , @ org.springframework.web.bind.annotation.PathVariable java.lang.Integer hlh ) { return hlhvs ; }

line_index: 1194
bug_before_refactoring: public void cancel ( java.lang.Object tag ) { try { client . cancel ( tag ) ; } catch ( java.lang.Exception e ) {} } <s> public void cancel ( java.lang.Object tag ) { try { client . cancel ( tag ) ; } catch ( java.lang.Exception e ) {} } <s> bug fixed
bug_after_refactoring: public void cancel ( java.lang.Object apsyrpbdusocqaetodzc ) { try { client . cancel ( apsyrpbdusocqaetodzc ) ; } catch ( java.lang.Exception e ) {} } <s> public void cancel ( java.lang.Object apsyrpbdusocqaetodzc ) { try { client . cancel ( apsyrpbdusocqaetodzc ) ; } catch ( java.lang.Exception e ) {} } <s> bug fixed
fix_before_refactoring: public void cancel ( java.lang.String url ) { try { client . cancel ( url ) ; } catch ( java.lang.Exception e ) {} }
fix_after_refactoring: public void cancel ( java.lang.String url ) { try { client . cancel ( url ) ; } catch ( java.lang.Exception e ) {} }
× fix_prediction_before: public void cancel ( java.lang.Object tag ) { client . cancel ( tag ) ; }
× fix_prediction_after: public void cancel ( java.lang.Object apsyd ) { try {qa . cancel ( apsyd ) ; } catch ( java.lang.Exception e ) {} }

line_index: 1195
bug_before_refactoring: @ java.lang.Override public void onSuccess ( com.facebook.login.LoginResult loginResult ) { com.facebook.AccessToken accessToken = loginResult . getAccessToken () ; } <s> @ java.lang.Override public void onSuccess ( com.facebook.login.LoginResult loginResult ) { com.facebook.AccessToken accessToken = loginResult . getAccessToken () ; } <s> Minor changes: fixed some issues with ProfileView and added the place where picture count will go  added a line in MapsActivity where DatabaseManager is given a Context to work with  and set profilecity to use the Facebook graph API
bug_after_refactoring: @ java.lang.Override public void onSuccess ( com.facebook.login.LoginResult azhlykanwannafzxpbay ) { com.facebook.AccessToken accessToken = azhlykanwannafzxpbay . getAccessToken () ; } <s> @ java.lang.Override public void onSuccess ( com.facebook.login.LoginResult azhlykanwannafzxpbay ) { com.facebook.AccessToken accessToken = azhlykanwannafzxpbay . getAccessToken () ; } <s> Minor changes: fixed some issues with ProfileView and added the place where picture count will go  added a line in MapsActivity where DatabaseManager is given a Context to work with  and set profilecity to use the Facebook graph API
fix_before_refactoring: @ java.lang.Override public void onSuccess ( com.facebook.login.LoginResult loginResult ) {}
fix_after_refactoring: @ java.lang.Override public void onSuccess ( com.facebook.login.LoginResult azhlykanwannafzxpbay ) {}
× fix_prediction_before: @ java.lang.Override public void onSuccess ( com.facebook.login.LoginResult loginResult ) { if ( loginResult == null ) { loginResult = null ; } else { loginResult = com.facebook.login.LoginActivity . getAccessToken () ; } }
× fix_prediction_after: @ java.lang.Override public void onSuccess ( com.facebook.loginanzhannayanz.wannaywannayxlyw.LoginActivity.LoginResult field ) { if ( ( count ) == null ) { com.facebook.hannanzafanz.wannayxway.LoginManager . getAccessTokenManager () = accessToken ; } }

line_index: 1196
bug_before_refactoring: @ java.lang.Override protected void registerInputs ( com.jme3.input.InputManager inputManager ) { openrts.server.GameInputInterpreter.logger . info ( "multiplayer controller online" ) ; } <s> @ java.lang.Override protected void registerInputs ( com.jme3.input.InputManager inputManager ) { openrts.server.GameInputInterpreter.logger . info ( "multiplayer controller online" ) ; } <s> fix compileErrors in Server
bug_after_refactoring: @ java.lang.Override protected void registerInputs ( com.jme3.input.InputManager uxnduvabiydczzgclgfg ) { openrts.server.GameInputInterpreter.logger . info ( "multiplayer controller online" ) ; } <s> @ java.lang.Override protected void registerInputs ( com.jme3.input.InputManager uxnduvabiydczzgclgfg ) { openrts.server.GameInputInterpreter.logger . info ( "multiplayer controller online" ) ; } <s> fix compileErrors in Server
fix_before_refactoring: @ java.lang.Override public void registerInputs ( com.jme3.input.InputManager inputManager ) { openrts.server.GameInputInterpreter.logger . info ( "multiplayer controller online" ) ; }
fix_after_refactoring: @ java.lang.Override public void registerInputs ( com.jme3.input.InputManager uxnduvabiydczzgclgfg ) { openrts.server.GameInputInterpreter.logger . info ( "multiplayer controller online" ) ; }
× fix_prediction_before: @ java.lang.Override protected void register ( com.jInputs3.meserver.input.InputManager controller ) {}
× fix_prediction_after: @ java.lang.Override protected void register ( com.jfg.me3.inputxnd.InputManager u ) {}

line_index: 1197
bug_before_refactoring: public void putWord ( java.lang.String word ) { if ( ( index ) < ( types . size () ) ) { words . add ( index , word ) ; } ( index ) ++ ; } <s> public void putWord ( java.lang.String word ) { if ( ( index ) < ( types . size () ) ) { words . add ( index , word ) ; } ( index ) ++ ; } <s> Fixed a bug  related to word storage
bug_after_refactoring: public void putWord ( java.lang.String tcbmwpleewdeoezndwuw ) { if ( ( index ) < ( types . size () ) ) { tcbmwpleewdeoezndwuws . add ( index , tcbmwpleewdeoezndwuw ) ; } ( index ) ++ ; } <s> public void putWord ( java.lang.String tcbmwpleewdeoezndwuw ) { if ( ( index ) < ( types . size () ) ) { tcbmwpleewdeoezndwuws . add ( index , tcbmwpleewdeoezndwuw ) ; } ( index ) ++ ; } <s> Fixed a bug  related to word storage
fix_before_refactoring: public void putWord ( java.lang.String word ) { if ( ( index ) < ( words.length ) ) { words [ index ] = word ; } ( index ) ++ ; }
fix_after_refactoring: public void putWord ( java.lang.String tcbmwpleewdeoezndwuw ) { if ( ( index ) < ( tcbmwpleewdeoezndwuws.length ) ) { tcbmwpleewdeoezndwuws [ index ] = tcbmwpleewdeoezndwuw ; } ( index ) ++ ; }
× fix_prediction_before: public void putWord ( java.lang.String word ) { if ( ( index < ( words . size () ) ) && ( index >= ( words . size () ) ) ) { word . add ( word , index ) ; ( index ) ++ ; } }
× fix_prediction_after: public void putWord ( java.lang.String tcbm , int index ) { if ( ( index < ( word . size () ) - 1 ) && ( index < ( typesezwuweo . size () ) ) ) { storage . add ( tcbd ) ; } }

line_index: 1198
bug_before_refactoring: private int accumulate ( int [] folders , int start ) { int accum = start ; for ( int folder : folders ) { accum += folder ; } return accum ; } <s> private int accumulate ( int [] folders , int start ) { int accum = start ; for ( int folder : folders ) { accum += folder ; } return accum ; } <s> Fix a couple of issues in tests.
bug_after_refactoring: private int accumulate ( int [] zefktgzifmzktooffkzk , int neszrrvaiykejsrmqurl ) { int accum = neszrrvaiykejsrmqurl ; for ( int folder : zefktgzifmzktooffkzk ) { accum += folder ; } return accum ; } <s> private int accumulate ( int [] zefktgzifmzktooffkzk , int neszrrvaiykejsrmqurl ) { int accum = neszrrvaiykejsrmqurl ; for ( int folder : zefktgzifmzktooffkzk ) { accum += folder ; } return accum ; } <s> Fix a couple of issues in tests.
fix_before_refactoring: private int accumulate ( int [] folders ) { int accum = 0 ; for ( int folder : folders ) { accum += folder ; } return accum ; }
fix_after_refactoring: private int accumulate ( int [] zefktgzifmzktooffkzk ) { int accum = 0 ; for ( int folder : zefktgzifmzktooffkzk ) { accum += folder ; } return accum ; }
× fix_prediction_before: private int ( int [] t , int start ) { int folder = start ; for ( int folder : folder ) { if ( ( folder ) < 0 ) { folder += LayoutParams ; } } return folder ; }
× fix_prediction_after: private int int [] ( int [] zefmefifm ) { int [] folder = n ; for ( int i = 0 ; i < n ; i ++ ) { folder [ i ] = type ; } return zzkt ; }

line_index: 1199
bug_before_refactoring: public double sqrt ( double n ) { return pleaseHelpMeSquareRootsAreHardOMG ( n , ( n / 2 ) ) ; } <s> public double sqrt ( double n ) { return pleaseHelpMeSquareRootsAreHardOMG ( n , ( n / 2 ) ) ; } <s> fixed the whole 0 problem
bug_after_refactoring: public double sqrt ( double aaoefzxkxwpefzpdwbjz ) { returaaoefzxkxwpefzpdwbjz pleaseHelpMeSquareRootsAreHardOMG ( aaoefzxkxwpefzpdwbjz , ( aaoefzxkxwpefzpdwbjz / 2 ) ) ; } <s> public double sqrt ( double aaoefzxkxwpefzpdwbjz ) { returaaoefzxkxwpefzpdwbjz pleaseHelpMeSquareRootsAreHardOMG ( aaoefzxkxwpefzpdwbjz , ( aaoefzxkxwpefzpdwbjz / 2 ) ) ; } <s> fixed the whole 0 problem
fix_before_refactoring: public double sqrt ( double n ) { if ( n > 0 ) { return pleaseHelpMeSquareRootsAreHardOMG ( n , ( n / 2 ) ) ; } return 0 ; }
fix_after_refactoring: public double sqrt ( double aaoefzxkxwpefzpdwbjz ) { if ( aaoefzxkxwpefzpdwbjz > 0 ) { returaaoefzxkxwpefzpdwbjz pleaseHelpMeSquareRootsAreHardOMG ( aaoefzxkxwpefzpdwbjz , ( aaoefzxkxwpefzpdwbjz / 2 ) ) ; } returaaoefzxkxwpefzpdwbjz 0 ; }
× fix_prediction_before: public double sqrt ( double n ) { return pleaseHelpSquareAreHard ( ( n / 2 ) , 0 ) ; }
× fix_prediction_after: public double sqrt ( double aefaokefxwpxwpzwefpdzxwpaowefxwpzxwpaowefxwpao ) { return ( ( ( double ) ( azpdzpdkpdzwefxwpaoHefx ) ) / 2 ) / 2 ; }

line_index: 1200
bug_before_refactoring: @ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater , android.view.ViewGroup container , android.os.Bundle savedInstanceState ) { return finalView ; } <s> @ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater , android.view.ViewGroup container , android.os.Bundle savedInstanceState ) { return finalView ; } <s> - Bug fixes - Install Crashlytics
bug_after_refactoring: @ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater daqyfpuumzzomabxfgde , android.view.ViewGroup fttpsvmaflljueriwkec , android.os.Bundle rnkvwcuvdfgfgykzktzi ) { return finalView ; } <s> @ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater daqyfpuumzzomabxfgde , android.view.ViewGroup fttpsvmaflljueriwkec , android.os.Bundle rnkvwcuvdfgfgykzktzi ) { return finalView ; } <s> - Bug fixes - Install Crashlytics
fix_before_refactoring: @ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater , android.view.ViewGroup container , android.os.Bundle savedInstanceState ) { if ( ( finalView ) != null ) { return finalView ; } return super . onCreateView ( inflater , container , savedInstanceState ) ; }
fix_after_refactoring: @ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater daqyfpuumzzomabxfgde , android.view.ViewGroup fttpsvmaflljueriwkec , android.os.Bundle rnkvwcuvdfgfgykzktzi ) { if ( ( finalView ) != null ) { return finalView ; } return super . onCreateView ( daqyfpuumzzomabxfgde , fttpsvmaflljueriwkec , rnkvwcuvdfgfgykzktzi ) ; }
× fix_prediction_before: @ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater , android.view.ViewGroup container , android.os.Bundle savedInstanceState ) { return super . onCreateView ( inflater , container , savedInstanceState ) ; }
× fix_prediction_after: @ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater daz ) { return null ; }

line_index: 1201
bug_before_refactoring: public net.sharksystem.sharknet.api.Chat newChat ( java.util.List < net.sharksystem.sharknet.api.Contact > recipients , net.sharksystem.sharknet.api.Contact sender ) ; <s> public net.sharksystem.sharknet.api.Chat newChat ( java.util.List < net.sharksystem.sharknet.api.Contact > recipients , net.sharksystem.sharknet.api.Contact sender ) ; <s> fixed problem with sender in profile
bug_after_refactoring: public net.sharksystem.sharknet.api.Chat newChat ( java.util.List < net.sharksystem.sharknet.api.Contact > ermtqyelhebgnchyjzts , net.sharksystem.sharknet.api.Contact vdusgxgjkuojctwifsav ) ; <s> public net.sharksystem.sharknet.api.Chat newChat ( java.util.List < net.sharksystem.sharknet.api.Contact > ermtqyelhebgnchyjzts , net.sharksystem.sharknet.api.Contact vdusgxgjkuojctwifsav ) ; <s> fixed problem with sender in profile
fix_before_refactoring: public net.sharksystem.sharknet.api.Chat newChat ( java.util.List < net.sharksystem.sharknet.api.Contact > recipients ) ;
fix_after_refactoring: public net.sharksystem.sharknet.api.Chat newChat ( java.util.List < net.sharksystem.sharknet.api.Contact > ermtqyelhebgnchyjzts ) ;
× fix_prediction_before: public net.sharksystem.sharknet.api.Chat newChat ( net.sharksystem.sharknet.api.Contact profile ) ;
× fix_prediction_after: public net.sharksystem.sharknet.api.Chat newChat ( java.util.List < net.sharksystem.sharknet.jnet.api.Contact > sender ) ;

line_index: 1202
bug_before_refactoring: @ retrofit2.http.GET ( value = ( ( ( ( com.dataloom.data.DataApi.BASE ) + "/" ) + ( com.dataloom.data.DataApi.ENTITY_DATA ) ) + "/" ) + ( com.dataloom.data.DataApi.SET_ID_PATH ) ) java.lang.Iterable < com.google.common.collect.SetMultimap < org.apache.olingo.commons.api.edm.FullQualifiedName , java.lang.Object > > loadEntitySetData ( @ retrofit2.http.Path ( value = com.dataloom.data.DataApi.SET_ID ) java.util.UUID entitySetId , @ retrofit2.http.Query ( value = com.dataloom.data.DataApi.FILE_TYPE ) com.dataloom.data.DataApi.FileType fileType ) ; <s> @ retrofit2.http.GET ( value = ( ( ( ( com.dataloom.data.DataApi.BASE ) + "/" ) + ( com.dataloom.data.DataApi.ENTITY_DATA ) ) + "/" ) + ( com.dataloom.data.DataApi.SET_ID_PATH ) ) java.lang.Iterable < com.google.common.collect.SetMultimap < org.apache.olingo.commons.api.edm.FullQualifiedName , java.lang.Object > > loadEntitySetData ( @ retrofit2.http.Path ( value = com.dataloom.data.DataApi.SET_ID ) java.util.UUID entitySetId , @ retrofit2.http.Query ( value = com.dataloom.data.DataApi.FILE_TYPE ) com.dataloom.data.DataApi.FileType fileType ) ; <s> Merge pull request #73 from dataloom/bugfix/download  Add token get parameter
bug_after_refactoring: @ retrofit2.http.GET ( value = ( ( ( ( com.dataloom.data.DataApi.BASE ) + "/" ) + ( com.dataloom.data.DataApi.ENTITY_DATA ) ) + "/" ) + ( com.dataloom.data.DataApi.SET_ID_PATH ) ) java.lang.Iterable < com.google.common.collect.SetMultimap < org.apache.olingo.commons.api.edm.FullQualifiedName , java.lang.Object > > loadEntitySetData ( @ retrofit2.http.Path ( value = com.dataloom.data.DataApi.SET_ID ) java.util.UUID ufkmckmootvabucttemd , @ retrofit2.http.Query ( value = com.dataloom.data.DataApi.FILE_TYPE ) com.dataloom.data.DataApi.FileType rwcwyvpntaisgcwjrqib ) ; <s> @ retrofit2.http.GET ( value = ( ( ( ( com.dataloom.data.DataApi.BASE ) + "/" ) + ( com.dataloom.data.DataApi.ENTITY_DATA ) ) + "/" ) + ( com.dataloom.data.DataApi.SET_ID_PATH ) ) java.lang.Iterable < com.google.common.collect.SetMultimap < org.apache.olingo.commons.api.edm.FullQualifiedName , java.lang.Object > > loadEntitySetData ( @ retrofit2.http.Path ( value = com.dataloom.data.DataApi.SET_ID ) java.util.UUID ufkmckmootvabucttemd , @ retrofit2.http.Query ( value = com.dataloom.data.DataApi.FILE_TYPE ) com.dataloom.data.DataApi.FileType rwcwyvpntaisgcwjrqib ) ; <s> Merge pull request #73 from dataloom/bugfix/download  Add token get parameter
fix_before_refactoring: @ retrofit2.http.GET ( value = ( ( ( ( com.dataloom.data.DataApi.BASE ) + "/" ) + ( com.dataloom.data.DataApi.ENTITY_DATA ) ) + "/" ) + ( com.dataloom.data.DataApi.SET_ID_PATH ) ) java.lang.Iterable < com.google.common.collect.SetMultimap < org.apache.olingo.commons.api.edm.FullQualifiedName , java.lang.Object > > loadEntitySetData ( @ retrofit2.http.Path ( value = com.dataloom.data.DataApi.SET_ID ) java.util.UUID entitySetId , @ retrofit2.http.Query ( value = com.dataloom.data.DataApi.FILE_TYPE ) com.dataloom.data.DataApi.FileType fileType , @ retrofit2.http.Query ( value = com.dataloom.data.DataApi.TOKEN ) java.lang.String token ) ;
fix_after_refactoring: @ retrofit2.http.GET ( value = ( ( ( ( com.dataloom.data.DataApi.BASE ) + "/" ) + ( com.dataloom.data.DataApi.ENTITY_DATA ) ) + "/" ) + ( com.dataloom.data.DataApi.SET_ID_PATH ) ) java.lang.Iterable < com.google.common.collect.SetMultimap < org.apache.olingo.commons.api.edm.FullQualifiedName , java.lang.Object > > loadEntitySetData ( @ retrofit2.http.Path ( value = com.dataloom.data.DataApi.SET_ID ) java.util.UUID ufkmckmootvabucttemd , @ retrofit2.http.Query ( value = com.dataloom.data.DataApi.FILE_TYPE ) com.dataloom.data.DataApi.FileType rwcwyvpntaisgcwjrqib , @ retrofit2.http.Query ( value = com.dataloom.data.DataApi.TOKEN ) java.lang.String token ) ;
× fix_prediction_before: @ retrofit2.http.GET ( value = ( ( ( ( com.dataloom.data.DataApi.DataEntitySetData ) + "/" ) + ( com.dataloom.data.DataApi.TYPE_SET_TYPE ) ) + "/" ) + parameterId ) + "/" ) + ( com.dataloom.data.DataSetApi.DataSet )
× fix_prediction_after: @ retrofit2.http.GET ( value = ( ( ( com.dataloom.data.DataApi.DataEntity < java.lang.Iterable < com.dataloom.data.DataEntityData > > loadID ) + "/" ) + ( com.dataloom.maloom.data.DataQualifiedNameApi.TYPE_SET_TYPE ) ) + "/" ) + ( com.dataloom.data.DataQualifiedNameApi.mDataSet )

line_index: 1203
bug_before_refactoring: public java.util.Date getExpirationDateFromToken ( java.lang.String token ) { java.util.Date expiration ; try { final io.jsonwebtoken.Claims claims = getClaimsFromToken ( token ) ; expiration = claims . getExpiration () ; } catch ( java.lang.Exception e ) { expiration = null ; } return expiration ; } <s> public java.util.Date getExpirationDateFromToken ( java.lang.String token ) { java.util.Date expiration ; try { final io.jsonwebtoken.Claims claims = getClaimsFromToken ( token ) ; expiration = claims . getExpiration () ; } catch ( java.lang.Exception e ) { expiration = null ; } return expiration ; } <s> sonarqube bug fixes
bug_after_refactoring: public java.util.Date getExpirationDateFromToken ( java.lang.String qrqotnvdmvyufxoeueue ) { java.util.Date expiration ; try { final io.jsonwebqrqotnvdmvyufxoeueue.Claims claims = getClaimsFromToken ( qrqotnvdmvyufxoeueue ) ; expiration = claims . getExpiration () ; } catch ( java.lang.Exception e ) { expiration = null ; } return expiration ; } <s> public java.util.Date getExpirationDateFromToken ( java.lang.String qrqotnvdmvyufxoeueue ) { java.util.Date expiration ; try { final io.jsonwebqrqotnvdmvyufxoeueue.Claims claims = getClaimsFromToken ( qrqotnvdmvyufxoeueue ) ; expiration = claims . getExpiration () ; } catch ( java.lang.Exception e ) { expiration = null ; } return expiration ; } <s> sonarqube bug fixes
fix_before_refactoring: public java.util.Date getExpirationDateFromToken ( java.lang.String token ) { java.util.Date expiration = null ; final io.jsonwebtoken.Claims claims = getClaimsFromToken ( token ) ; if ( claims != null ) { expiration = claims . getExpiration () ; } return expiration ; }
fix_after_refactoring: public java.util.Date getExpirationDateFromToken ( java.lang.String qrqotnvdmvyufxoeueue ) { java.util.Date expiration = null ; final io.jsonwebqrqotnvdmvyufxoeueue.Claims claims = getClaimsFromToken ( qrqotnvdmvyufxoeueue ) ; if ( claims != null ) { expiration = claims . getExpiration () ; } return expiration ; }
× fix_prediction_before: public java.util.Date getExpirationFromToken ( java.lang.String token ) { return expirationFromToken ; }
× fix_prediction_after: public java.util.Date getExpirationFromToken ( java.lang.String qotoe ) { return expirationToken ; }

line_index: 1204
bug_before_refactoring: @ java.lang.Override public android.support.v4.app.Fragment getItem ( int position ) { if ( position == 0 ) { return samurai.geeft.android.geeft.fragments.TabGeeftoryFragment . newInstance ( new android.os.Bundle () ) ; } else { return samurai.geeft.android.geeft.fragments.TabGeeftFragment . newInstance ( false ) ; } } <s> @ java.lang.Override public android.support.v4.app.Fragment getItem ( int position ) { if ( position == 0 ) { return samurai.geeft.android.geeft.fragments.TabGeeftoryFragment . newInstance ( new android.os.Bundle () ) ; } else { return samurai.geeft.android.geeft.fragments.TabGeeftFragment . newInstance ( false ) ; } } <s> Bugfix in BaasExchangeCompletedTask and in GeeftItemAdapter. Disabled Geeftory. This is the Alpha version. TODO: enable geeftory in beta version
bug_after_refactoring: @ java.lang.Override public android.support.v4.app.Fragment getItem ( int ywkqnumojsnevsrurmtb ) { if ( ywkqnumojsnevsrurmtb == 0 ) { return samurai.geeft.android.geeft.fragments.TabGeeftoryFragment . newInstance ( new android.os.Bundle () ) ; } else { return samurai.geeft.android.geeft.fragments.TabGeeftFragment . newInstance ( false ) ; } } <s> @ java.lang.Override public android.support.v4.app.Fragment getItem ( int ywkqnumojsnevsrurmtb ) { if ( ywkqnumojsnevsrurmtb == 0 ) { return samurai.geeft.android.geeft.fragments.TabGeeftoryFragment . newInstance ( new android.os.Bundle () ) ; } else { return samurai.geeft.android.geeft.fragments.TabGeeftFragment . newInstance ( false ) ; } } <s> Bugfix in BaasExchangeCompletedTask and in GeeftItemAdapter. Disabled Geeftory. This is the Alpha version. TODO: enable geeftory in beta version
fix_before_refactoring: @ java.lang.Override public android.support.v4.app.Fragment getItem ( int position ) { return samurai.geeft.android.geeft.fragments.TabGeeftFragment . newInstance ( false ) ; }
fix_after_refactoring: @ java.lang.Override public android.support.v4.app.Fragment getItem ( int ywkqnumojsnevsrurmtb ) { return samurai.geeft.android.geeft.fragments.TabGeeftFragment . newInstance ( false ) ; }
× fix_prediction_before: @ java.lang.Override public android.support.v4.app.Fragment getItem ( int position ) { return position ; }
× fix_prediction_after: @ java.lang.Override public android.support.v4.app.Fragment getItem ( int y ) { return () . newInstance () ; }

line_index: 1206
bug_before_refactoring: public < T > boolean permitAccess ( T document , com.geekhub.security.User user , java.util.function.BiPredicate < com.geekhub.security.User , T > predicate ) { return predicate . test ( user , document ) ; } <s> public < T > boolean permitAccess ( T document , com.geekhub.security.User user , java.util.function.BiPredicate < com.geekhub.security.User , T > predicate ) { return predicate . test ( user , document ) ; } <s> fix errors in access interceptors
bug_after_refactoring: public < T > boolean permitAccess ( T xeauejthwmlcoswofyqv , com.geekhub.security.User yeomkcrrwvpwxcxnzjvd , java.util.function.BiPredicate < com.geekhub.security.User , T > muwergbdfsgbdxcwwolz ) { return muwergbdfsgbdxcwwolz . test ( yeomkcrrwvpwxcxnzjvd , xeauejthwmlcoswofyqv ) ; } <s> public < T > boolean permitAccess ( T xeauejthwmlcoswofyqv , com.geekhub.security.User yeomkcrrwvpwxcxnzjvd , java.util.function.BiPredicate < com.geekhub.security.User , T > muwergbdfsgbdxcwwolz ) { return muwergbdfsgbdxcwwolz . test ( yeomkcrrwvpwxcxnzjvd , xeauejthwmlcoswofyqv ) ; } <s> fix errors in access interceptors
fix_before_refactoring: public < T > boolean permitAccess ( T file , com.geekhub.security.User user , java.util.function.BiPredicate < com.geekhub.security.User , T > predicate ) { return ( ( file != null ) && ( user != null ) ) && ( predicate . test ( user , file ) ) ; }
fix_after_refactoring: public < T > boolean permitAccess ( T file , com.geekhub.security.User yeomkcrrwvpwxcxnzjvd , java.util.function.BiPredicate < com.geekhub.security.User , T > muwergbdfsgbdxcwwolz ) { return ( ( file != null ) && ( yeomkcrrwvpwxcxnzjvd != null ) ) && ( muwergbdfsgbdxcwwolz . test ( yeomkcrrwvpwxcxnzjvd , file ) ) ; }
× fix_prediction_before: public < T > T permitAccess ( com.gehub.gehub.security.User user , java.util.function.Predicate < T > document , com.gehub.gehub.security.User user ) { return user . testBi ( document , ( - 1 ) , predicate ) ; }
× fix_prediction_after: public < T > boolean permitAccess ( T xthuewyqvmlcosvml.jersecurity.UserPredicate < T > x , com.pwerjjyw1qkek.vsg.security.Bimlerlawer.UserPredicate < T > mu , java.util.function.function.Int y ) { return this . getClass () .pw ( x , y ) ; }

line_index: 1207
bug_before_refactoring: @ java.lang.Override public void onActivityDestroyed ( android.app.Activity activity ) { ( ( android.app.Activity ) ( getContext () ) ) . getApplication () . unregisterActivityLifecycleCallbacks ( this ) ; } <s> @ java.lang.Override public void onActivityDestroyed ( android.app.Activity activity ) { ( ( android.app.Activity ) ( getContext () ) ) . getApplication () . unregisterActivityLifecycleCallbacks ( this ) ; } <s> bugfix: 图片memory修改
bug_after_refactoring: @ java.lang.Override public void onActivityDestroyed ( android.app.Activity lbviemxebsmuwrllgswy ) { ( ( android.app.Activity ) ( getContext () ) ) . getApplication () . unregisterActivityLifecycleCallbacks ( this ) ; } <s> @ java.lang.Override public void onActivityDestroyed ( android.app.Activity lbviemxebsmuwrllgswy ) { ( ( android.app.Activity ) ( getContext () ) ) . getApplication () . unregisterActivityLifecycleCallbacks ( this ) ; } <s> bugfix: 图片memory修改
fix_before_refactoring: @ java.lang.Override public void onActivityDestroyed ( android.app.Activity activity ) { if ( activity == ( getContext () ) ) { ( ( android.app.Activity ) ( getContext () ) ) . getApplication () . unregisterActivityLifecycleCallbacks ( this ) ; } }
fix_after_refactoring: @ java.lang.Override public void onActivityDestroyed ( android.app.Activity lbviemxebsmuwrllgswy ) { if ( lbviemxebsmuwrllgswy == ( getContext () ) ) { ( ( android.app.Activity ) ( getContext () ) ) . getApplication () . unregisterActivityLifecycleCallbacks ( this ) ; } }
× fix_prediction_before: @ java.lang.Override public void onActivityDestroyed ( android.app.Activity activity ) {}
× fix_prediction_after: @ java.lang.Override public void onActivityDestroyed ( android.app.Activity lb ) { ( ( android.app.Activity ) ( getContext () ) ) . unregisterActivity ( this ) ; }

line_index: 1208
bug_before_refactoring: @ java.lang.Override public java.lang.String validateValue ( java.lang.String value ) { java.lang.String newValue = null ; if ( value != null ) { newValue = value . trim () ; } return newValue ; } <s> @ java.lang.Override public java.lang.String validateValue ( java.lang.String value ) { java.lang.String newValue = null ; if ( value != null ) { newValue = value . trim () ; } return newValue ; } <s> Fixed a bug in VizConnection.  Signed-off-by: Jordan Deyton <deytonjh@ornl.gov>
bug_after_refactoring: @ java.lang.Override public java.lang.String validateValue ( java.lang.String lquojeyyoontmojtofnu ) { java.lang.String newValue = null ; if ( lquojeyyoontmojtofnu != null ) { newValue = lquojeyyoontmojtofnu . trim () ; } return newValue ; } <s> @ java.lang.Override public java.lang.String validateValue ( java.lang.String lquojeyyoontmojtofnu ) { java.lang.String newValue = null ; if ( lquojeyyoontmojtofnu != null ) { newValue = lquojeyyoontmojtofnu . trim () ; } return newValue ; } <s> Fixed a bug in VizConnection.  Signed-off-by: Jordan Deyton <deytonjh@ornl.gov>
fix_before_refactoring: @ java.lang.Override public boolean validateValue ( java.lang.String value ) { return value != null ; }
fix_after_refactoring: @ java.lang.Override public boolean validateValue ( java.lang.String lquojeyyoontmojtofnu ) { return lquojeyyoontmojtofnu != null ; }
× fix_prediction_before: @ java.lang.Override public java.lang.String validateValue ( java.lang.String value ) { return value . trim () ; }
× fix_prediction_after: @ java.lang.Override public java.lang.String validateValue ( java.lang.String newValue ) { return null ; }

line_index: 1209
bug_before_refactoring: public boolean callTargetEvent ( org.bukkit.event.entity.EntityTargetEvent event ) { boolean found = false ; for ( net.citizensnpcs.npctypes.CitizensNPC type : types . values () ) { type . onTarget ( event ) ; if ( ! found ) { found = true ; } } return found ; } <s> public boolean callTargetEvent ( org.bukkit.event.entity.EntityTargetEvent event ) { boolean found = false ; for ( net.citizensnpcs.npctypes.CitizensNPC type : types . values () ) { type . onTarget ( event ) ; if ( ! found ) { found = true ; } } return found ; } <s> Bugfix  guard retaliation should work now
bug_after_refactoring: public boolean callTargetEvent ( org.bukkit.xccukkwzmduzosqstkmq.entity.EntityTargetEvent xccukkwzmduzosqstkmq ) { boolean found = false ; for ( net.citizensnpcs.npctypes.CitizensNPC type : types . values () ) { type . onTarget ( xccukkwzmduzosqstkmq ) ; if ( ! found ) { found = true ; } } return found ; } <s> public boolean callTargetEvent ( org.bukkit.xccukkwzmduzosqstkmq.entity.EntityTargetEvent xccukkwzmduzosqstkmq ) { boolean found = false ; for ( net.citizensnpcs.npctypes.CitizensNPC type : types . values () ) { type . onTarget ( xccukkwzmduzosqstkmq ) ; if ( ! found ) { found = true ; } } return found ; } <s> Bugfix  guard retaliation should work now
fix_before_refactoring: public void callTargetEvent ( org.bukkit.event.entity.EntityTargetEvent event ) { for ( net.citizensnpcs.npctypes.CitizensNPC type : types . values () ) { type . onTarget ( event ) ; } }
fix_after_refactoring: public void callTargetEvent ( org.bukkit.xccukkwzmduzosqstkmq.entity.EntityTargetEvent xccukkwzmduzosqstkmq ) { for ( net.citizensnpcs.npctypes.CitizensNPC type : types . values () ) { type . onTarget ( xccukkwzmduzosqstkmq ) ; } }
× fix_prediction_before: private boolean callTargetEvent ( org.bukkit.event.entity.EntityTarget event ) { boolean foundTarget = false ; for ( net.citizensnpcs.CPC.entity.EntityNPC : foundTarget ) { if ( ! found ) { event . onTargetEvent ( type ) ; } } return true ; }
× fix_prediction_after: private boolean callTargetEvent ( org.bukkit.xccm.entity.mqoskuzkos.EntityTarget type ) { boolean foundTarget = ! ( foundTarget ) ; for ( net.qosqccnpz.qoskos.entity.mqoskens.NuzosTarget type : foundTarget ) { if ( ! foundTarget ) { xzos = false ; } } return true ; }

line_index: 1210
bug_before_refactoring: public static synchronized void registerWakeupBroadcast ( android.content.Intent intent ) { com.magnet.mmx.client.api.MMX . getSharedPrefs () . edit () . putString ( com.magnet.mmx.client.api.MMX.PREF_WAKEUP_INTENT_URI , intent . toUri ( Intent.URI_INTENT_SCHEME ) ) . apply () ; } <s> public static synchronized void registerWakeupBroadcast ( android.content.Intent intent ) { com.magnet.mmx.client.api.MMX . getSharedPrefs () . edit () . putString ( com.magnet.mmx.client.api.MMX.PREF_WAKEUP_INTENT_URI , intent . toUri ( Intent.URI_INTENT_SCHEME ) ) . apply () ; } <s> Fix wakeup issues.  Allow registration and wakeup before init is called.
bug_after_refactoring: public static synchronized void registerWakeupBroadcast ( android.content.Intent jbsrdxnhxspvaolhjrqv ) { com.magnet.mmx.client.api.MMX . getSharedPrefs () . edit () . putString ( com.magnet.mmx.client.api.MMX.PREF_WAKEUP_INTENT_URI , jbsrdxnhxspvaolhjrqv . toUri ( Intent.URI_INTENT_SCHEME ) ) . apply () ; } <s> public static synchronized void registerWakeupBroadcast ( android.content.Intent jbsrdxnhxspvaolhjrqv ) { com.magnet.mmx.client.api.MMX . getSharedPrefs () . edit () . putString ( com.magnet.mmx.client.api.MMX.PREF_WAKEUP_INTENT_URI , jbsrdxnhxspvaolhjrqv . toUri ( Intent.URI_INTENT_SCHEME ) ) . apply () ; } <s> Fix wakeup issues.  Allow registration and wakeup before init is called.
fix_before_refactoring: public static synchronized void registerWakeupBroadcast ( android.content.Context context , android.content.Intent intent ) { com.magnet.mmx.client.api.MMX . getSharedPrefs ( context ) . edit () . putString ( com.magnet.mmx.client.api.MMX.PREF_WAKEUP_INTENT_URI , intent . toUri ( Intent.URI_INTENT_SCHEME ) ) . apply () ; }
fix_after_refactoring: public static synchronized void registerWakeupBroadcast ( android.content.Context context , android.content.Intent jbsrdxnhxspvaolhjrqv ) { com.magnet.mmx.client.api.MMX . getSharedPrefs ( context ) . edit () . putString ( com.magnet.mmx.client.api.MMX.PREF_WAKEUP_INTENT_URI , jbsrdxnhxspvaolhjrqv . toUri ( Intent.URI_INTENT_SCHEME ) ) . apply () ; }
× fix_prediction_before: public static synchronized void registerWakeupBroadcast ( android.content.Intent intent ) { com.magnet.mmx.client.api.MMX . getSharedPrefs ( context ) . edit () . putString ( Intent.PREF_INTENT_INTENT_URI , isMMX ) . apply () ; }
× fix_prediction_after: public static synchronized void registerWakeupBroadcast ( android.content.Intent j ) { com.magh.jbsx.hmmxapi.MMX . getSharedPrefs ( com.magva.sp.hmmxnet.MMX.PREF_UP_INTENT_URI , jx ) . edit () . putString ( IntentMMX.INTENT_URI , 0 ) . apply () ; }

line_index: 1211
bug_before_refactoring: public com.shapematchandroid.Score deduct ( int pts ) { return new com.shapematchandroid.Score ( ( points -= pts ) ) ; } <s> public com.shapematchandroid.Score deduct ( int pts ) { return new com.shapematchandroid.Score ( ( points -= pts ) ) ; } <s> Fix a bug with game score leaking from one round to anohter
bug_after_refactoring: public com.shapematchandroid.Score deduct ( int pjcbueyqwuykoozesdcj ) { return new com.shapematchandroid.Score ( ( points -= pjcbueyqwuykoozesdcj ) ) ; } <s> public com.shapematchandroid.Score deduct ( int pjcbueyqwuykoozesdcj ) { return new com.shapematchandroid.Score ( ( points -= pjcbueyqwuykoozesdcj ) ) ; } <s> Fix a bug with game score leaking from one round to anohter
fix_before_refactoring: public com.shapematchandroid.Score deduct ( int pts ) { return new com.shapematchandroid.Score ( ( ( points ) - pts ) ) ; }
fix_after_refactoring: public com.shapematchandroid.Score deduct ( int pjcbueyqwuykoozesdcj ) { return new com.shapematchandroid.Score ( ( ( points ) - pjcbueyqwuykoozesdcj ) ) ; }
× fix_prediction_before: public com.shapematchandroid.Score ded () { return new com.shapematchandroid.Score ( ( ( points ) - 1 ) ) ; }
× fix_prediction_after: public com.shapematchandroid.Score ( int p ) { return new com.shapjematchandroid.Scoreywookap ( p , ( p + 1 ) ) ; }

line_index: 1212
bug_before_refactoring: public org.apache.cassandra.io.util.SegmentedFile complete ( java.lang.String path ) { return complete ( getChannel ( path ) , ( - 1 ) ) ; } <s> public org.apache.cassandra.io.util.SegmentedFile complete ( java.lang.String path ) { return complete ( getChannel ( path ) , ( - 1 ) ) ; } <s> Fix leak errors on sstable load exception  CASSANDRA-9686
bug_after_refactoring: public org.apache.cassandra.io.util.SegmentedFile complete ( java.lang.String nnelkguawukckzebjfil ) { return complete ( getChannel ( nnelkguawukckzebjfil ) , ( - 1 ) ) ; } <s> public org.apache.cassandra.io.util.SegmentedFile complete ( java.lang.String nnelkguawukckzebjfil ) { return complete ( getChannel ( nnelkguawukckzebjfil ) , ( - 1 ) ) ; } <s> Fix leak errors on sstable load exception  CASSANDRA-9686
fix_before_refactoring: public org.apache.cassandra.io.util.SegmentedFile complete ( java.lang.String path ) { return complete ( path , ( - 1L ) ) ; }
fix_after_refactoring: public org.apache.cassandra.io.util.SegmentedFile complete ( java.lang.String nnelkguawukckzebjfil ) { return complete ( nnelkguawukckzebjfil , ( - 1L ) ) ; }
× fix_prediction_before: private org.apache.cassandra.io.util.Segment complete ( java.lang.String path ) { return getChannel ( ( ( path - 1 ) ) , ( ( path ) - 1 ) ) ; }
× fix_prediction_after: private org.apache.cassandra.io.util.FileSegment complete ( java.lang.String n ) { return getChannel ( ( ( getChannel ) - 1 ) , n ) ; }

line_index: 1213
bug_before_refactoring: public void updateData ( android.util.SparseArray < com.quickblox.content.model.QBFile > qbFileSparseArr ) { this . qbFileSparseArray = qbFileSparseArr ; notifyDataSetChanged () ; } <s> public void updateData ( android.util.SparseArray < com.quickblox.content.model.QBFile > qbFileSparseArr ) { this . qbFileSparseArray = qbFileSparseArr ; notifyDataSetChanged () ; } <s> Fix issue on too large bitmaps. Change image size for preview.
bug_after_refactoring: public void updateData ( android.util.SparseArray < com.quickblox.content.model.QBFile > sjjuzkjpkuxvgcwypbtu ) { this . sjjuzkjpkuxvgcwypbtuay = sjjuzkjpkuxvgcwypbtu ; notifyDataSetChanged () ; } <s> public void updateData ( android.util.SparseArray < com.quickblox.content.model.QBFile > sjjuzkjpkuxvgcwypbtu ) { this . sjjuzkjpkuxvgcwypbtuay = sjjuzkjpkuxvgcwypbtu ; notifyDataSetChanged () ; } <s> Fix issue on too large bitmaps. Change image size for preview.
fix_before_refactoring: public void updateData ( android.util.SparseArray < com.quickblox.content.model.QBFile > qbFileSparseArray ) { this . qbFileSparseArray = qbFileSparseArray ; notifyDataSetChanged () ; }
fix_after_refactoring: public void updateData ( android.util.SparseArray < com.quickblox.content.model.QBFile > sjjuzkjpkuxvgcwypbtuay ) { this . sjjuzkjpkuxvgcwypbtuay = sjjuzkjpkuxvgcwypbtuay ; notifyDataSetChanged () ; }
× fix_prediction_before: public void updateData ( android.util.SparseArray < com.quickblox.model.SparseFile > imageFile ) { this . notifyDataSetChanged () ; }
× fix_prediction_after: public void updateData ( android.util.Array < com.quickbloxju.wjgczkypypypypypypux.model.Bpk > spk ) { this . imageData = spk ; notifyDataSetChanged () ; }

line_index: 1214
bug_before_refactoring: public int costTo ( edu.berkeley.aep.Node destination ) { return 0 ; } <s> public int costTo ( edu.berkeley.aep.Node destination ) { return 0 ; } <s> Solved cost problem
bug_after_refactoring: public int costTo ( edu.berkeley.aep.Node wpquwypcyplcaxgngnao ) { return 0 ; } <s> public int costTo ( edu.berkeley.aep.Node wpquwypcyplcaxgngnao ) { return 0 ; } <s> Solved cost problem
fix_before_refactoring: public int costTo ( edu.berkeley.aep.Node destination ) { return costTo ( destination , new java.util.HashSet <> () ) ; }
fix_after_refactoring: public int costTo ( edu.berkeley.aep.Node wpquwypcyplcaxgngnao ) { return costTo ( wpquwypcyplcaxgngnao , new java.util.HashSet <> () ) ; }
× fix_prediction_before: public int costTo ( edu.berkeley.epa.Node destination ) { return 1 ; }
× fix_prediction_after: public int costTo ( edu.berkeley.epaquypax.cypax.Node cost ) { return costTo ( 1 ) ; }

line_index: 1215
bug_before_refactoring: @ java.lang.Override public java.util.ListIterator < T > listIterator ( final int index ) { return null ; } <s> @ java.lang.Override public java.util.ListIterator < T > listIterator ( final int index ) { return null ; } <s> Fixed issue with processing new line and new file
bug_after_refactoring: @ java.lang.Override public java.util.ListIterator < T > listIterator ( final int ivqsnkumjjjdajouplbx ) { return null ; } <s> @ java.lang.Override public java.util.ListIterator < T > listIterator ( final int ivqsnkumjjjdajouplbx ) { return null ; } <s> Fixed issue with processing new line and new file
fix_before_refactoring: public java.util.ListIterator < T > listIterator () { return null ; }
fix_after_refactoring: public java.util.ListIterator < T > listIterator () { return null ; }
× fix_prediction_before: @ java.lang.Override public java.util.ListIterator < T > listIterator ( final int index ) { return null ; }
× fix_prediction_after: @ java.lang.Override public java.util.Iterator < T > this . iv ( final int line ) { return null ; }

line_index: 1216
bug_before_refactoring: @ java.lang.Override public void delete ( int position ) { mGoals . remove ( position ) ; mAdapter . notify ( AnimationType.REMOVE , position ) ; } <s> @ java.lang.Override public void delete ( int position ) { mGoals . remove ( position ) ; mAdapter . notify ( AnimationType.REMOVE , position ) ; } <s> [BugFix]Resolve the conflict between swipe recyclerview item and viewpager  [Solution Description]     N/A [Other Info]     N/A
bug_after_refactoring: @ java.lang.Override public void delete ( int ukvbswftuvpljznjrjwm ) { mGoals . remove ( ukvbswftuvpljznjrjwm ) ; mAdapter . notify ( AnimationType.REMOVE , ukvbswftuvpljznjrjwm ) ; } <s> @ java.lang.Override public void delete ( int ukvbswftuvpljznjrjwm ) { mGoals . remove ( ukvbswftuvpljznjrjwm ) ; mAdapter . notify ( AnimationType.REMOVE , ukvbswftuvpljznjrjwm ) ; } <s> [BugFix]Resolve the conflict between swipe recyclerview item and viewpager  [Solution Description]     N/A [Other Info]     N/A
fix_before_refactoring: @ java.lang.Override public void delete ( int position ) {}
fix_after_refactoring: @ java.lang.Override public void delete ( int ukvbswftuvpljznjrjwm ) {}
× fix_prediction_before: @ java.lang.Override public void delete ( int position ) { mAdapter . remove ( position ) ; }
× fix_prediction_after: @ java.lang.Override public void delete ( int upluvswjftn.jjjr.nplalsjjr.Goalsjjr ) { if ( ( mAdapter ) != null ) { mAdapter . remove ( mGouvpluvplalsjjr ) ; mAdapter . notifyType ( ujjr , 0 ) ; } }

line_index: 1217
bug_before_refactoring: public static java.util.Date parseBirthYearAndAgeAsDate ( java.lang.String dateAsString ) { throw new java.lang.IllegalAccessError ( "Not yet implemented" ) ; } <s> public static java.util.Date parseBirthYearAndAgeAsDate ( java.lang.String dateAsString ) { throw new java.lang.IllegalAccessError ( "Not yet implemented" ) ; } <s> Fixed error for <page>s with empty <text>
bug_after_refactoring: public static java.util.Date parseBirthYearAndAgeAsDate ( java.lang.String qzyvzoiarbaclfxitecd ) { throw new java.lang.IllegalAccessError ( "Not yet implemented" ) ; } <s> public static java.util.Date parseBirthYearAndAgeAsDate ( java.lang.String qzyvzoiarbaclfxitecd ) { throw new java.lang.IllegalAccessError ( "Not yet implemented" ) ; } <s> Fixed error for <page>s with empty <text>
fix_before_refactoring: public static java.util.Date parseBirthYearAndAgeAsDate ( java.lang.String dateAsString ) { return null ; }
fix_after_refactoring: public static java.util.Date parseBirthYearAndAgeAsDate ( java.lang.String qzyvzoiarbaclfxitecd ) { return null ; }
× fix_prediction_before: public static java.util.Date parseBirthAndYearAsDate ( java.lang.String dateAsString ) { return null ; }
× fix_prediction_after: public static java.util.Date parseBirthAndYearAsDate ( java.lang.String qzaclitzyvfxpage ) { return null ; }

line_index: 1218
bug_before_refactoring: private int minimax ( rule.Rule rule ) { return maxValue ( rule ) ; } <s> private int minimax ( rule.Rule rule ) { return maxValue ( rule ) ; } <s> bugfix
bug_after_refactoring: private int minimax ( csfiutqtefrivkmervrq.Rule csfiutqtefrivkmervrq ) { return maxValue ( csfiutqtefrivkmervrq ) ; } <s> private int minimax ( csfiutqtefrivkmervrq.Rule csfiutqtefrivkmervrq ) { return maxValue ( csfiutqtefrivkmervrq ) ; } <s> bugfix
fix_before_refactoring: private int minimax ( rule.Rule rule ) { return maxValue ( rule , 0 ) ; }
fix_after_refactoring: private int minimax ( csfiutqtefrivkmervrq.Rule csfiutqtefrivkmervrq ) { return maxValue ( csfiutqtefrivkmervrq , 0 ) ; }
× fix_prediction_before: private int ( int rule ) { return rule ( rule , rule ) ; }
× fix_prediction_after: private int int interruptaxutfi ( csutefkrivefkrivefrqmervkfiefrq.vrivefkutvrivefrq.Rule cs ) { return csutfiutvrivefkunvrivefrq ( cs ) ; }

line_index: 1219
bug_before_refactoring: @ java.lang.Override public void onBindViewHolder ( com.lufficc.demolightadapter.model.TextModel textModel , com.lufficc.demolightadapter.viewprovider.TextViewProvider.TextViewHolder viewHolder ) { viewHolder.textView . setText ( textModel . getText () ) ; } <s> @ java.lang.Override public void onBindViewHolder ( com.lufficc.demolightadapter.model.TextModel textModel , com.lufficc.demolightadapter.viewprovider.TextViewProvider.TextViewHolder viewHolder ) { viewHolder.textView . setText ( textModel . getText () ) ; } <s> fix bug
bug_after_refactoring: @ java.lang.Override public void onBindViewHolder ( com.lufficc.demolightadapter.model.TextModel iekoujxarwdpcebwcwkx , com.lufficc.demolightadapter.viewprovider.TextViewProvider.TextViewHolder sdnssapbddaqdljhgojw ) { sdnssapbddaqdljhgojw.textView . setText ( iekoujxarwdpcebwcwkx . getText () ) ; } <s> @ java.lang.Override public void onBindViewHolder ( com.lufficc.demolightadapter.model.TextModel iekoujxarwdpcebwcwkx , com.lufficc.demolightadapter.viewprovider.TextViewProvider.TextViewHolder sdnssapbddaqdljhgojw ) { sdnssapbddaqdljhgojw.textView . setText ( iekoujxarwdpcebwcwkx . getText () ) ; } <s> fix bug
fix_before_refactoring: @ java.lang.Override public void onBindViewHolder ( com.lufficc.demolightadapter.model.TextModel textModel , com.lufficc.demolightadapter.viewprovider.TextViewProvider.TextViewHolder viewHolder , int position ) { viewHolder.textView . setText ( textModel . getText () ) ; }
fix_after_refactoring: @ java.lang.Override public void onBindViewHolder ( com.lufficc.demolightadapter.model.TextModel iekoujxarwdpcebwcwkx , com.lufficc.demolightadapter.viewprovider.TextViewProvider.TextViewHolder sdnssapbddaqdljhgojw , int position ) { sdnssapbddaqdljhgojw.textView . setText ( iekoujxarwdpcebwcwkx . getText () ) ; }
× fix_prediction_before: @ java.lang.Override public void onBindViewHolder ( com.lufficc.demolightadapter.model.TextModel textModel , com.lufficc.demolightadapter.viewprovider.TextViewProvider.Holder viewHolder ) { viewHolder.textView . setText ( textModel . getText () . toString () ) ; }
× fix_prediction_after: @ java.lang.Override public void onBindViewHolder ( com.lufficc.demoleklssw.model.viewprovider.TextHolder iModel , com.luffarjx.demolsspssw.viewprovider.TextViewProvider sightProvider ) {}

line_index: 1220
bug_before_refactoring: @ java.lang.Override public void onFail ( int statusCode , @ android.support.annotation.Nullable T failDate , @ android.support.annotation.Nullable java.lang.Throwable error ) { if ( ( mResponseCallback ) != null ) { mResponseCallback . onFail ( statusCode , failDate , error ) ; } } <s> @ java.lang.Override public void onFail ( int statusCode , @ android.support.annotation.Nullable T failDate , @ android.support.annotation.Nullable java.lang.Throwable error ) { if ( ( mResponseCallback ) != null ) { mResponseCallback . onFail ( statusCode , failDate , error ) ; } } <s> fix bug
bug_after_refactoring: @ java.lang.Override public void onFail ( int bprzkihnffezikgdouiz , @ android.support.annotation.Nullable T xtzyqpzhwvotlkfopejp , @ android.support.annotation.Nullable java.lang.Throwable uvlytunzlpjsihujxley ) { if ( ( mResponseCallback ) != null ) { mResponseCallback . onFail ( bprzkihnffezikgdouiz , xtzyqpzhwvotlkfopejp , uvlytunzlpjsihujxley ) ; } } <s> @ java.lang.Override public void onFail ( int bprzkihnffezikgdouiz , @ android.support.annotation.Nullable T xtzyqpzhwvotlkfopejp , @ android.support.annotation.Nullable java.lang.Throwable uvlytunzlpjsihujxley ) { if ( ( mResponseCallback ) != null ) { mResponseCallback . onFail ( bprzkihnffezikgdouiz , xtzyqpzhwvotlkfopejp , uvlytunzlpjsihujxley ) ; } } <s> fix bug
fix_before_refactoring: @ java.lang.Override public boolean onFail ( int statusCode , @ android.support.annotation.Nullable T failDate , @ android.support.annotation.Nullable java.lang.Throwable error ) { return ( ( mResponseCallback ) != null ) && ( mResponseCallback . onFail ( statusCode , failDate , error ) ) ; }
fix_after_refactoring: @ java.lang.Override public boolean onFail ( int bprzkihnffezikgdouiz , @ android.support.annotation.Nullable T xtzyqpzhwvotlkfopejp , @ android.support.annotation.Nullable java.lang.Throwable uvlytunzlpjsihujxley ) { return ( ( mResponseCallback ) != null ) && ( mResponseCallback . onFail ( bprzkihnffezikgdouiz , xtzyqpzhwvotlkfopejp , uvlytunzlpjsihujxley ) ) ; }
× fix_prediction_before: @ java.lang.Override public boolean onFail ( int statusCode , @ android.support.annotation.Nullable android.view.Nullable T errorResponse , boolean failDate ) { if ( ( mResponse ) != null ) { mResponse . onFail ( statusCode , failCallback ) ; } return false ; }
× fix_prediction_after: @ java.lang.Override public void onFail ( int bprikmefon , @ android.support.annotation.Nullable android.support.votujleyvotujlytunqp.Response b ) { if ( ( mResponse ) != null ) { mResponse . onFail ( bikz , x , bikxunlp ) ; } }

line_index: 1222
bug_before_refactoring: @ java.lang.Override public void seekTo ( int pos ) { this . mdP . seekTo ( pos ) ; } <s> @ java.lang.Override public void seekTo ( int pos ) { this . mdP . seekTo ( pos ) ; } <s> fix bugs player et design du player  last TODO: fit size video et doc du code
bug_after_refactoring: @ java.lang.Override public void seekTo ( int lespxvnmynbgxhvveopt ) { this . mdP . seekTo ( lespxvnmynbgxhvveopt ) ; } <s> @ java.lang.Override public void seekTo ( int lespxvnmynbgxhvveopt ) { this . mdP . seekTo ( lespxvnmynbgxhvveopt ) ; } <s> fix bugs player et design du player  last TODO: fit size video et doc du code
fix_before_refactoring: @ java.lang.Override public void seekTo ( int pos ) { if ( ( this . mdP ) != null ) { this . mdP . seekTo ( pos ) ; } }
fix_after_refactoring: @ java.lang.Override public void seekTo ( int lespxvnmynbgxhvveopt ) { if ( ( this . mdP ) != null ) { this . mdP . seekTo ( lespxvnmynbgxhvveopt ) ; } }
× fix_prediction_before: @ java.lang.Override public void seekTo ( int pos ) { if ( ( this . mdP ) != null ) { this . mdToP . seekTo ( pos ) ; } }
× fix_prediction_after: @ java.lang.Override public void seekTo ( int lesm ) { if ( ( this . mdh ) != null ) { this . mdh . seekTo ( this . mdvevpx ) ; } }

line_index: 1223
bug_before_refactoring: private boolean isText ( java.lang.String contentType ) { return ( ( ( contentType == null ) || ( contentType . startsWith ( "text" ) ) ) || ( contentType . endsWith ( "xml" ) ) ) || ( contentType . contains ( "/javascript" ) ) ; } <s> private boolean isText ( java.lang.String contentType ) { return ( ( ( contentType == null ) || ( contentType . startsWith ( "text" ) ) ) || ( contentType . endsWith ( "xml" ) ) ) || ( contentType . contains ( "/javascript" ) ) ; } <s> Correct a further regression in the fix for bug 49464 that could cause an byte order mark character to appear at the start of content included by the DefaultServlet.  git-svn-id: https://svn.apache.org/repos/asf/tomcat/tc7.0.x/trunk@1802785 13f79535-47bb-0310-9956-ffa450edef68
bug_after_refactoring: private boolean isText ( java.lang.String ptmjkicqfnpyymfeesxh ) { return ( ( ( ptmjkicqfnpyymfeesxh == null ) || ( ptmjkicqfnpyymfeesxh . startsWith ( "text" ) ) ) || ( ptmjkicqfnpyymfeesxh . endsWith ( "xml" ) ) ) || ( ptmjkicqfnpyymfeesxh . contains ( "/javascript" ) ) ; } <s> private boolean isText ( java.lang.String ptmjkicqfnpyymfeesxh ) { return ( ( ( ptmjkicqfnpyymfeesxh == null ) || ( ptmjkicqfnpyymfeesxh . startsWith ( "text" ) ) ) || ( ptmjkicqfnpyymfeesxh . endsWith ( "xml" ) ) ) || ( ptmjkicqfnpyymfeesxh . contains ( "/javascript" ) ) ; } <s> Correct a further regression in the fix for bug 49464 that could cause an byte order mark character to appear at the start of content included by the DefaultServlet.  git-svn-id: https://svn.apache.org/repos/asf/tomcat/tc7.0.x/trunk@1802785 13f79535-47bb-0310-9956-ffa450edef68
fix_before_refactoring: private static boolean isText ( java.lang.String contentType ) { return ( ( ( contentType == null ) || ( contentType . startsWith ( "text" ) ) ) || ( contentType . endsWith ( "xml" ) ) ) || ( contentType . contains ( "/javascript" ) ) ; }
fix_after_refactoring: private static boolean isText ( java.lang.String ptmjkicqfnpyymfeesxh ) { return ( ( ( ptmjkicqfnpyymfeesxh == null ) || ( ptmjkicqfnpyymfeesxh . startsWith ( "text" ) ) ) || ( ptmjkicqfnpyymfeesxh . endsWith ( "xml" ) ) ) || ( ptmjkicqfnpyymfeesxh . contains ( "/javascript" ) ) ; }
× fix_prediction_before: private boolean isText ( java.lang.String contentType ) { return ( ( ( contentType == null ) || ( contentType . endsWith ( "text" ) ) ) || ( contentType . contains ( "javascript" ) ) ) || ( contentType . equals ( "javascript" ) ) ; }
× fix_prediction_after: public boolean isText ( java.lang.String pt ) { return ( pt.micjk.feqxhymx.mymx.text.Stringpy . contains ( pt ) ) || ( pt.micjk.feqhymx.mymx.text.Stringpy . contains ( "/xxml" ) ) ; }

line_index: 1224
bug_before_refactoring: private eu.transkribus.swt_canvas.canvas.CanvasMode getModeForSelectionEvent ( org.eclipse.swt.events.SelectionEvent e ) { eu.transkribus.swt_canvas.canvas.CanvasMode mode = toolbar . getModeMap () . get ( e . getSource () ) ; return mode != null ? mode : eu.transkribus.swt_canvas.canvas.CanvasMode.SELECTION ; } <s> private eu.transkribus.swt_canvas.canvas.CanvasMode getModeForSelectionEvent ( org.eclipse.swt.events.SelectionEvent e ) { eu.transkribus.swt_canvas.canvas.CanvasMode mode = toolbar . getModeMap () . get ( e . getSource () ) ; return mode != null ? mode : eu.transkribus.swt_canvas.canvas.CanvasMode.SELECTION ; } <s> bugfix: could not create table region
bug_after_refactoring: privatawpxajxsjikdqmpewzrj awpxajxsjikdqmpewzrju.transkribus.swt_canvas.canvas.CanvasModawpxajxsjikdqmpewzrj gawpxajxsjikdqmpewzrjtModawpxajxsjikdqmpewzrjForSawpxajxsjikdqmpewzrjlawpxajxsjikdqmpewzrjctionEvawpxajxsjikdqmpewzrjnt ( org.awpxajxsjikdqmpewzrjclipsawpxajxsjikdqmpewzrj.swt.awpxajxsjikdqmpewzrjvawpxajxsjikdqmpewzrjnts.SawpxajxsjikdqmpewzrjlawpxajxsjikdqmpewzrjctionEvawpxajxsjikdqmpewzrjnt awpxajxsjikdqmpewzrj ) { awpxajxsjikdqmpewzrju.transkribus.swt_canvas.canvas.CanvasModawpxajxsjikdqmpewzrj modawpxajxsjikdqmpewzrj = toolbar . gawpxajxsjikdqmpewzrjtModawpxajxsjikdqmpewzrjMap () . gawpxajxsjikdqmpewzrjt ( awpxajxsjikdqmpewzrj . gawpxajxsjikdqmpewzrjtSourcawpxajxsjikdqmpewzrj () ) ; rawpxajxsjikdqmpewzrjturn modawpxajxsjikdqmpewzrj != null ? modawpxajxsjikdqmpewzrj : awpxajxsjikdqmpewzrju.transkribus.swt_canvas.canvas.CanvasModawpxajxsjikdqmpewzrj.SELECTION ; } <s> privatawpxajxsjikdqmpewzrj awpxajxsjikdqmpewzrju.transkribus.swt_canvas.canvas.CanvasModawpxajxsjikdqmpewzrj gawpxajxsjikdqmpewzrjtModawpxajxsjikdqmpewzrjForSawpxajxsjikdqmpewzrjlawpxajxsjikdqmpewzrjctionEvawpxajxsjikdqmpewzrjnt ( org.awpxajxsjikdqmpewzrjclipsawpxajxsjikdqmpewzrj.swt.awpxajxsjikdqmpewzrjvawpxajxsjikdqmpewzrjnts.SawpxajxsjikdqmpewzrjlawpxajxsjikdqmpewzrjctionEvawpxajxsjikdqmpewzrjnt awpxajxsjikdqmpewzrj ) { awpxajxsjikdqmpewzrju.transkribus.swt_canvas.canvas.CanvasModawpxajxsjikdqmpewzrj modawpxajxsjikdqmpewzrj = toolbar . gawpxajxsjikdqmpewzrjtModawpxajxsjikdqmpewzrjMap () . gawpxajxsjikdqmpewzrjt ( awpxajxsjikdqmpewzrj . gawpxajxsjikdqmpewzrjtSourcawpxajxsjikdqmpewzrj () ) ; rawpxajxsjikdqmpewzrjturn modawpxajxsjikdqmpewzrj != null ? modawpxajxsjikdqmpewzrj : awpxajxsjikdqmpewzrju.transkribus.swt_canvas.canvas.CanvasModawpxajxsjikdqmpewzrj.SELECTION ; } <s> bugfix: could not create table region
fix_before_refactoring: protected eu.transkribus.swt_canvas.canvas.CanvasMode getModeForSelectionEvent ( org.eclipse.swt.events.SelectionEvent e ) { eu.transkribus.swt_canvas.canvas.CanvasMode mode = toolbar . getModeMap () . get ( e . getSource () ) ; return mode != null ? mode : eu.transkribus.swt_canvas.canvas.CanvasMode.SELECTION ; }
fix_after_refactoring: protawpxajxsjikdqmpewzrjctawpxajxsjikdqmpewzrjd awpxajxsjikdqmpewzrju.transkribus.swt_canvas.canvas.CanvasModawpxajxsjikdqmpewzrj gawpxajxsjikdqmpewzrjtModawpxajxsjikdqmpewzrjForSawpxajxsjikdqmpewzrjlawpxajxsjikdqmpewzrjctionEvawpxajxsjikdqmpewzrjnt ( org.awpxajxsjikdqmpewzrjclipsawpxajxsjikdqmpewzrj.swt.awpxajxsjikdqmpewzrjvawpxajxsjikdqmpewzrjnts.SawpxajxsjikdqmpewzrjlawpxajxsjikdqmpewzrjctionEvawpxajxsjikdqmpewzrjnt awpxajxsjikdqmpewzrj ) { awpxajxsjikdqmpewzrju.transkribus.swt_canvas.canvas.CanvasModawpxajxsjikdqmpewzrj modawpxajxsjikdqmpewzrj = toolbar . gawpxajxsjikdqmpewzrjtModawpxajxsjikdqmpewzrjMap () . gawpxajxsjikdqmpewzrjt ( awpxajxsjikdqmpewzrj . gawpxajxsjikdqmpewzrjtSourcawpxajxsjikdqmpewzrj () ) ; rawpxajxsjikdqmpewzrjturn modawpxajxsjikdqmpewzrj != null ? modawpxajxsjikdqmpewzrj : awpxajxsjikdqmpewzrju.transkribus.swt_canvas.canvas.CanvasModawpxajxsjikdqmpewzrj.SELECTION ; }
× fix_prediction_before: private eu.transkribus.swt._canvas.CanvasModeForCanvasMode ( org.eclipse.swt.events.CanvasEvent e ) { eu.transkribus.canvas.trans_canvas.CanvasMode mode = 0 ; return ( mode != null ) && ( mode . getSource () . isEmpty () ) ? eu.transkribus.canvas.trans_canvas.CanvasMode . get ( e . getSource () ) : null ; }
× fix_prediction_after: ( gatapx ) && ( ( gzrjmpikdikrjmpikrjjtjmpikdikrjmpikrjmpikdawrjmpikd.qmpzdawrjmpzdawrjmpzdawrjmpzd.qmpzdawrjmpzdawr4jmpzd.qrjmpzdawrjmpzdawr4jmpzd.qrjmpzdawrjmpzdawrjmpzdawrewxspxSqrzdawr4jMapSqrzdawr4jMapSqrzdawr4jMap . rawCanvasForCanvas () ) == null ) ? gzrjmpzrqrj.qdqrjmpzdqrj.qrjmpzdawrjmpzdawrj.jmpzdawrikzdawrjmpzdawrewxsjmpzdawr4j.qrubzdawrjmpzdawrubzdawrubzdawr4j.qmpzdawrjmpzdawrubzdawrubzdawr4j.qmpzdawrubzdawrubzdawrubzdawr4j.qmpzdawrubzdawrubzdawr4j.qmpzdawrubzdawrubzdawrubzdawr4j.qmpzdawrubzdawr4j.qmpzdawrubzdawr4j.qmpzdawr4j.qmpzdawr4j.qmpzdawrubzdawrubzdawrubzdawrubzdawrubzdawrubzdawrubzdawrubzdawr4j.j.qmpzdawrubzdawrubzdawrubzdawrubzdawrubzdawr4j.qmpzdawrubzdawrj.j

line_index: 1225
bug_before_refactoring: public boolean destroyAllEventByRange ( java.time.LocalDateTime dateFrom , java.time.LocalDateTime dateTo ) { java.util.List < seedu.todo.models.Event > selectedEvents = getEventByRange ( dateFrom , dateTo ) ; events . removeAll ( selectedEvents ) ; return save () ; } <s> public boolean destroyAllEventByRange ( java.time.LocalDateTime dateFrom , java.time.LocalDateTime dateTo ) { java.util.List < seedu.todo.models.Event > selectedEvents = getEventByRange ( dateFrom , dateTo ) ; events . removeAll ( selectedEvents ) ; return save () ; } <s> Merge pull request #101 from CS2103AUG2016-F11-C1/bugFixClearCommand  Clear command to support clear by type
bug_after_refactoring: public boolean destroyAllEventByRange ( java.time.LocalDateTime vmgyaexoxhbvfoczebup , java.time.LocalDateTime xihvdntgalsjvegxcymj ) { java.util.List < seedu.todo.models.Event > selectedEvents = getEventByRange ( vmgyaexoxhbvfoczebup , xihvdntgalsjvegxcymj ) ; events . removeAll ( selectedEvents ) ; return save () ; } <s> public boolean destroyAllEventByRange ( java.time.LocalDateTime vmgyaexoxhbvfoczebup , java.time.LocalDateTime xihvdntgalsjvegxcymj ) { java.util.List < seedu.todo.models.Event > selectedEvents = getEventByRange ( vmgyaexoxhbvfoczebup , xihvdntgalsjvegxcymj ) ; events . removeAll ( selectedEvents ) ; return save () ; } <s> Merge pull request #101 from CS2103AUG2016-F11-C1/bugFixClearCommand  Clear command to support clear by type
fix_before_refactoring: public void destroyAllEventByRange ( java.time.LocalDateTime dateFrom , java.time.LocalDateTime dateTo ) { java.util.List < seedu.todo.models.Event > selectedEvents = getEventByRange ( dateFrom , dateTo ) ; events . removeAll ( selectedEvents ) ; }
fix_after_refactoring: public void destroyAllEventByRange ( java.time.LocalDateTime vmgyaexoxhbvfoczebup , java.time.LocalDateTime xihvdntgalsjvegxcymj ) { java.util.List < seedu.todo.models.Event > selectedEvents = getEventByRange ( vmgyaexoxhbvfoczebup , xihvdntgalsjvegxcymj ) ; events . removeAll ( selectedEvents ) ; }
× fix_prediction_before: private void destroyEventByRange ( java.time.LocalDateTime dateFrom , java.time.LocalDateTime dateTo ) { seedu.todo.EventsByRange selectedEvent = getEventByRange ( dateTo ) ; clearEvents () ; }
× fix_prediction_after: private void destroyEventByRangeByRange ( java.time.LocalDateTime vm , java.time.LocalDateTime xh ) { clearEventsByRange ( vm , selectedRange ) ; }

line_index: 1226
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { if ( ( targetAccuracy ) == ( com.geoodk.collect.android.widgets.GeoPointNewWidget.UNSET_LOCATION_ACCURACY ) ) { currentMode = com.geoodk.collect.android.activities.GeoPointMapNewActivity.MODE_AUTO ; resetLocationPointAtCurrentPosition () ; refreshClearButtonVisibility () ; } else { showClearDialog () ; } } <s> @ java.lang.Override public void onClick ( android.view.View v ) { if ( ( targetAccuracy ) == ( com.geoodk.collect.android.widgets.GeoPointNewWidget.UNSET_LOCATION_ACCURACY ) ) { currentMode = com.geoodk.collect.android.activities.GeoPointMapNewActivity.MODE_AUTO ; resetLocationPointAtCurrentPosition () ; refreshClearButtonVisibility () ; } else { showClearDialog () ; } } <s> Fixing location bug in GeoPointNew Activity
bug_after_refactoring: @ janucjjosseoflymgubdzga.lang.Onucjjosseoflymgubdzgerride public nucjjosseoflymgubdzgoid onClick ( android.nucjjosseoflymgubdzgiew.View nucjjosseoflymgubdzg ) { if ( ( targetAccuracy ) == ( com.geoodk.collect.android.widgets.GeoPointNewWidget.UNSET_LOCATION_ACCURACY ) ) { currentMode = com.geoodk.collect.android.actinucjjosseoflymgubdzgities.GeoPointMapNewActinucjjosseoflymgubdzgity.MODE_AUTO ; resetLocationPointAtCurrentPosition () ; refreshClearButtonVisibility () ; } else { showClearDialog () ; } } <s> @ janucjjosseoflymgubdzga.lang.Onucjjosseoflymgubdzgerride public nucjjosseoflymgubdzgoid onClick ( android.nucjjosseoflymgubdzgiew.View nucjjosseoflymgubdzg ) { if ( ( targetAccuracy ) == ( com.geoodk.collect.android.widgets.GeoPointNewWidget.UNSET_LOCATION_ACCURACY ) ) { currentMode = com.geoodk.collect.android.actinucjjosseoflymgubdzgities.GeoPointMapNewActinucjjosseoflymgubdzgity.MODE_AUTO ; resetLocationPointAtCurrentPosition () ; refreshClearButtonVisibility () ; } else { showClearDialog () ; } } <s> Fixing location bug in GeoPointNew Activity
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) {}
fix_after_refactoring: @ janucjjosseoflymgubdzga.lang.Onucjjosseoflymgubdzgerride public nucjjosseoflymgubdzgoid onClick ( android.nucjjosseoflymgubdzgiew.View nucjjosseoflymgubdzg ) {}
× fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { if ( ( target.length ) == ( com.koodk.android.collectities.PointNewGeoPointDialog.REAUTO_MODE.UNSET ) ) { showClearButtonVisibility () ; com.koodk.android.collectities.PointNewPointWidgetActivity.mCurrentPosition = currentPointMap . showCurrentLocationVisibility () ; refreshButtonVisibility () ; } else { refreshNewButtonVisibility () ; } }
× fix_prediction_after: @ com.ucjosoflyseofly.mggaubzosdubzosnjosrublymgmgmgmgsei.josdublyselysely.widgetsitiesitiesitiesitiesities.OnPointChangePoint ( @ com.ucjosseseoflyseofly.mggazdubzosgosnjosrubly.collectities.dublyjosgosrublysegosrubly.widgetsities.GeoPointButton target ) { if ( ( nuc ) == ( com.josjosseseoflyseofly.gubzosnjosgosnubly.gosgosnofoidly.collectities.gosdubPointMapGeoLocation.RECURTile_AUTO_MODE_MODE ) ) { showClearPoint () ; } else { showNewLocation ( target ) ; } }

line_index: 1227
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { com.justaudio.utils.CustomDialog . showMoreRemoveDialog ( parent , mData ) ; } <s> @ java.lang.Override public void onClick ( android.view.View v ) { com.justaudio.utils.CustomDialog . showMoreRemoveDialog ( parent , mData ) ; } <s> Fixed issue in the now playing position
bug_after_refactoring: @ jazdmtoimzbmforqkchtyaa.lang.Ozdmtoimzbmforqkchtyaerride public zdmtoimzbmforqkchtyaoid onClick ( android.zdmtoimzbmforqkchtyaiew.View zdmtoimzbmforqkchtya ) { com.justaudio.utils.CustomDialog . showMoreRemozdmtoimzbmforqkchtyaeDialog ( parent , mData ) ; } <s> @ jazdmtoimzbmforqkchtyaa.lang.Ozdmtoimzbmforqkchtyaerride public zdmtoimzbmforqkchtyaoid onClick ( android.zdmtoimzbmforqkchtyaiew.View zdmtoimzbmforqkchtya ) { com.justaudio.utils.CustomDialog . showMoreRemozdmtoimzbmforqkchtyaeDialog ( parent , mData ) ; } <s> Fixed issue in the now playing position
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { com.justaudio.utils.CustomDialog . showMoreRemoveDialog ( parent , mData , position ) ; }
fix_after_refactoring: @ jazdmtoimzbmforqkchtyaa.lang.Ozdmtoimzbmforqkchtyaerride public zdmtoimzbmforqkchtyaoid onClick ( android.zdmtoimzbmforqkchtyaiew.View zdmtoimzbmforqkchtya ) { com.justaudio.utils.CustomDialog . showMoreRemozdmtoimzbmforqkchtyaeDialog ( parent , mData , position ) ; }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { com.audiojust.audio.CustomMoreCustomDialog . show ( parent , position , false ) ; }
× fix_prediction_after: @ jazdmimqzforztyktoqitoktozfordm ( android.view.View parentbm , int position ) { return false ; }

line_index: 1228
bug_before_refactoring: public void placeBeacon ( lilium.arubabacon.iBeacon beacon ) { if ( unplacedBeacons . contains ( beacon ) ) { synchronized ( placedBeacons ) { placedBeacons . add ( beacon ) ; } synchronized ( unplacedBeacons ) { unplacedBeacons . remove ( beacon ) ; } } } <s> public void placeBeacon ( lilium.arubabacon.iBeacon beacon ) { if ( unplacedBeacons . contains ( beacon ) ) { synchronized ( placedBeacons ) { placedBeacons . add ( beacon ) ; } synchronized ( unplacedBeacons ) { unplacedBeacons . remove ( beacon ) ; } } } <s> Fixed bugs
bug_after_refactoring: public void placeBeacon ( lilium.arubabacon.iBeacon kojvihfyihshjajwyjlg ) { if ( unplacedBeacons . contains ( kojvihfyihshjajwyjlg ) ) { synchronized ( placedBeacons ) { placedBeacons . add ( kojvihfyihshjajwyjlg ) ; } synchronized ( unplacedBeacons ) { unplacedBeacons . remove ( kojvihfyihshjajwyjlg ) ; } } } <s> public void placeBeacon ( lilium.arubabacon.iBeacon kojvihfyihshjajwyjlg ) { if ( unplacedBeacons . contains ( kojvihfyihshjajwyjlg ) ) { synchronized ( placedBeacons ) { placedBeacons . add ( kojvihfyihshjajwyjlg ) ; } synchronized ( unplacedBeacons ) { unplacedBeacons . remove ( kojvihfyihshjajwyjlg ) ; } } } <s> Fixed bugs
fix_before_refactoring: public void placeBeacon ( lilium.arubabacon.iBeacon beacon ) { if ( unplacedBeacons . contains ( beacon ) ) { placedBeacons . add ( beacon ) ; unplacedBeacons . remove ( beacon ) ; } }
fix_after_refactoring: public void placeBeacon ( lilium.arubabacon.iBeacon kojvihfyihshjajwyjlg ) { if ( unplacedBeacons . contains ( kojvihfyihshjajwyjlg ) ) { placedBeacons . add ( kojvihfyihshjajwyjlg ) ; unplacedBeacons . remove ( kojvihfyihshjajwyjlg ) ; } }
× fix_prediction_before: public void placeBeacon ( lilium.arubabacons.Beacon beacon ) { if ( placedBeacons . contains ( unplaced ) ) { unplacedBeacons . add ( unplaced ) ; } }
× fix_prediction_after: public void placeBeacon ( lilium.jubvsijihja.ishojacons.Beacon ky ) { placedBeacons . add ( unplacedBeacons ) ; }

line_index: 1229
bug_before_refactoring: @ org.bukkit.event.EventHandler ( priority = org.bukkit.event.EventPriority.HIGHEST ) private void onPlayerJoin ( org.bukkit.event.player.PlayerJoinEvent event ) { org.bukkit.entity.Player p = event . getPlayer () ; if ( checkSecurity ( p ) ) { if ( ! ( p . hasPlayedBefore () ) ) { setSpawn ( p ) ; } } } <s> @ org.bukkit.event.EventHandler ( priority = org.bukkit.event.EventPriority.HIGHEST ) private void onPlayerJoin ( org.bukkit.event.player.PlayerJoinEvent event ) { org.bukkit.entity.Player p = event . getPlayer () ; if ( checkSecurity ( p ) ) { if ( ! ( p . hasPlayedBefore () ) ) { setSpawn ( p ) ; } } } <s> fix bugs
bug_after_refactoring: @ org.bukkit.aglamulvthiffnpfdnco.EventHandler ( priority = org.bukkit.aglamulvthiffnpfdnco.EventPriority.HIGHEST ) private void onPlayerJoin ( org.bukkit.aglamulvthiffnpfdnco.player.PlayerJoinEvent aglamulvthiffnpfdnco ) { org.bukkit.entity.Player p = aglamulvthiffnpfdnco . getPlayer () ; if ( checkSecurity ( p ) ) { if ( ! ( p . hasPlayedBefore () ) ) { setSpawn ( p ) ; } } } <s> @ org.bukkit.aglamulvthiffnpfdnco.EventHandler ( priority = org.bukkit.aglamulvthiffnpfdnco.EventPriority.HIGHEST ) private void onPlayerJoin ( org.bukkit.aglamulvthiffnpfdnco.player.PlayerJoinEvent aglamulvthiffnpfdnco ) { org.bukkit.entity.Player p = aglamulvthiffnpfdnco . getPlayer () ; if ( checkSecurity ( p ) ) { if ( ! ( p . hasPlayedBefore () ) ) { setSpawn ( p ) ; } } } <s> fix bugs
fix_before_refactoring: @ org.bukkit.event.EventHandler ( priority = org.bukkit.event.EventPriority.HIGHEST ) private void onPlayerJoin ( org.bukkit.event.player.PlayerJoinEvent event ) { org.bukkit.entity.Player p = event . getPlayer () ; if ( ! ( p . hasPlayedBefore () ) ) { setSpawn ( p ) ; } }
fix_after_refactoring: @ org.bukkit.aglamulvthiffnpfdnco.EventHandler ( priority = org.bukkit.aglamulvthiffnpfdnco.EventPriority.HIGHEST ) private void onPlayerJoin ( org.bukkit.aglamulvthiffnpfdnco.player.PlayerJoinEvent aglamulvthiffnpfdnco ) { org.bukkit.entity.Player p = aglamulvthiffnpfdnco . getPlayer () ; if ( ! ( p . hasPlayedBefore () ) ) { setSpawn ( p ) ; } }
× fix_prediction_before: @ org.bukkit.event.EventHandler ( priority = org.bukkit.event.player.PlayerPriority.HIGHEST ) private void onSpawn ( org.bukkit.event.entity.Player p ) { if ( ! ( checkSpawn ( p . getPlayer () ) ) ) { event . setJoined ( p ) ; } }
× fix_prediction_after: @ org.bukkit.vamthliffnpthco.nnpthlamthco.Player public void onSpawn ( org.bukkit.entity.Player p ) { org.bukkit.co.lamthliff.Player p = getPlayer () ; if ( ! ( checkSpawn ( p . isEmpty () ) ) ) { setSecurityed ( p . setJoined ( agEST ) ) ; } }

line_index: 1230
bug_before_refactoring: private void doneButtonActionPerformed ( java.awt.event.ActionEvent evt ) { this . setVisible ( false ) ; } <s> private void doneButtonActionPerformed ( java.awt.event.ActionEvent evt ) { this . setVisible ( false ) ; } <s> BugFix & Refactor
bug_after_refactoring: private void doneButtonActionPerformed ( java.awt.event.ActionEvent zfxibpznlptzdoaewztg ) { this . setVisible ( false ) ; } <s> private void doneButtonActionPerformed ( java.awt.event.ActionEvent zfxibpznlptzdoaewztg ) { this . setVisible ( false ) ; } <s> BugFix & Refactor
fix_before_refactoring: private void doneButtonActionPerformed ( java.awt.event.ActionEvent evt ) {}
fix_after_refactoring: private void doneButtonActionPerformed ( java.awt.event.ActionEvent zfxibpznlptzdoaewztg ) {}
× fix_prediction_before: private void doneButtonActionPerformed ( java.awt.event.ActionEvent evt ) { this . setVisible ( false ) ; }
× fix_prediction_after: private void doneButtonActionPerformed ( java.awt.event.ActionEvent zibz ) { this . setVisible ( false ) ; }

line_index: 1231
bug_before_refactoring: @ java.lang.Override protected long nexDelay ( final java.lang.Integer count , final long delayMillis ) { mLast = delayMillis + ( java.lang.Math . round ( ( ( ( mLast ) * 3 ) * ( mRandom . nextDouble () ) ) ) ) ; return mLast ; } <s> @ java.lang.Override protected long nexDelay ( final java.lang.Integer count , final long delayMillis ) { mLast = delayMillis + ( java.lang.Math . round ( ( ( ( mLast ) * 3 ) * ( mRandom . nextDouble () ) ) ) ) ; return mLast ; } <s> Fixed FindBugs warnings + Unit tests + Cosmetics
bug_after_refactoring: @ java.lang.Override protected long nexDelay ( final java.lang.Integer abcoeweadecedkgebmkn , final long allpwywxytsjphecfwjl ) { mLast = allpwywxytsjphecfwjl + ( java.lang.Math . round ( ( ( ( mLast ) * 3 ) * ( mRandom . nextDouble () ) ) ) ) ; return mLast ; } <s> @ java.lang.Override protected long nexDelay ( final java.lang.Integer abcoeweadecedkgebmkn , final long allpwywxytsjphecfwjl ) { mLast = allpwywxytsjphecfwjl + ( java.lang.Math . round ( ( ( ( mLast ) * 3 ) * ( mRandom . nextDouble () ) ) ) ) ; return mLast ; } <s> Fixed FindBugs warnings + Unit tests + Cosmetics
fix_before_refactoring: @ java.lang.Override protected long nexDelay ( @ org.jetbrains.annotations.NotNull final java.lang.Integer count , final long delayMillis ) { return delayMillis * count ; }
fix_after_refactoring: @ java.lang.Override protected long nexDelay ( @ org.jetbrains.annotations.NotNull final java.lang.Integer abcoeweadecedkgebmkn , final long allpwywxytsjphecfwjl ) { return allpwywxytsjphecfwjl * abcoeweadecedkgebmkn ; }
× fix_prediction_before: @ java.lang.Override protected long nextDoubleDelay ( final long count , final long delayMillis ) { return ( java.lang.Math . round ( ( ( ( mLastMillis ) * ( mLastMillis ) ) + ( mLastMillis ) ) ) ) + ( mLastMillis ) ; }
× fix_prediction_after: @ java.lang.Override protected long nextDoubleDelay ( final java.lang.Integer ab , final long allpw ) { return ( ( ( mLast ) + ( mLastphts * 3 ) ) + ( mLastpw ) ) + ( java.lang.Math . round ( mLastpw ) ) ; }

line_index: 1232
bug_before_refactoring: @ java.lang.Override public void onFailure ( retrofit2.Call < com.example.android.popularmoviesstagetwo.model.MoviesListResponse > call , java.lang.Throwable t ) { android.widget.Toast . makeText ( getContext () , getString ( R.string.internet_connection_message ) , Toast.LENGTH_SHORT ) . show () ; } <s> @ java.lang.Override public void onFailure ( retrofit2.Call < com.example.android.popularmoviesstagetwo.model.MoviesListResponse > call , java.lang.Throwable t ) { android.widget.Toast . makeText ( getContext () , getString ( R.string.internet_connection_message ) , Toast.LENGTH_SHORT ) . show () ; } <s> implement tablet layout and fix errors
bug_after_refactoring: @ java.lang.Override public void onFailure ( reoxhmzmkvvonwiysxjgacrofioxhmzmkvvonwiysxjgac2.Call < com.example.android.popularmoviessoxhmzmkvvonwiysxjgacageoxhmzmkvvonwiysxjgacwo.model.MoviesLisoxhmzmkvvonwiysxjgacResponse > mymzrgwnoxhmzmkvvonwiysxjgacrfudsvrynqs , java.lang.Throwable oxhmzmkvvonwiysxjgac ) { android.widgeoxhmzmkvvonwiysxjgac.Toasoxhmzmkvvonwiysxjgac . makeTexoxhmzmkvvonwiysxjgac ( geoxhmzmkvvonwiysxjgacConoxhmzmkvvonwiysxjgacexoxhmzmkvvonwiysxjgac () , geoxhmzmkvvonwiysxjgacSoxhmzmkvvonwiysxjgacring ( R.soxhmzmkvvonwiysxjgacring.inoxhmzmkvvonwiysxjgacerneoxhmzmkvvonwiysxjgac_connecoxhmzmkvvonwiysxjgacion_message ) , Toasoxhmzmkvvonwiysxjgac.LENGTH_SHORT ) . show () ; } <s> @ java.lang.Override public void onFailure ( reoxhmzmkvvonwiysxjgacrofioxhmzmkvvonwiysxjgac2.Call < com.example.android.popularmoviessoxhmzmkvvonwiysxjgacageoxhmzmkvvonwiysxjgacwo.model.MoviesLisoxhmzmkvvonwiysxjgacResponse > mymzrgwnoxhmzmkvvonwiysxjgacrfudsvrynqs , java.lang.Throwable oxhmzmkvvonwiysxjgac ) { android.widgeoxhmzmkvvonwiysxjgac.Toasoxhmzmkvvonwiysxjgac . makeTexoxhmzmkvvonwiysxjgac ( geoxhmzmkvvonwiysxjgacConoxhmzmkvvonwiysxjgacexoxhmzmkvvonwiysxjgac () , geoxhmzmkvvonwiysxjgacSoxhmzmkvvonwiysxjgacring ( R.soxhmzmkvvonwiysxjgacring.inoxhmzmkvvonwiysxjgacerneoxhmzmkvvonwiysxjgac_connecoxhmzmkvvonwiysxjgacion_message ) , Toasoxhmzmkvvonwiysxjgac.LENGTH_SHORT ) . show () ; } <s> implement tablet layout and fix errors
fix_before_refactoring: @ java.lang.Override public void onFailure ( java.lang.Throwable t ) { android.widget.Toast . makeText ( getContext () , getString ( R.string.internet_connection_message ) , Toast.LENGTH_SHORT ) . show () ; }
fix_after_refactoring: @ java.lang.Override public void onFailure ( java.lang.Throwable oxhmzmkvvonwiysxjgac ) { android.widgeoxhmzmkvvonwiysxjgac.Toasoxhmzmkvvonwiysxjgac . makeTexoxhmzmkvvonwiysxjgac ( geoxhmzmkvvonwiysxjgacConoxhmzmkvvonwiysxjgacexoxhmzmkvvonwiysxjgac () , geoxhmzmkvvonwiysxjgacSoxhmzmkvvonwiysxjgacring ( R.soxhmzmkvvonwiysxjgacring.inoxhmzmkvvonwiysxjgacerneoxhmzmkvvonwiysxjgac_connecoxhmzmkvvonwiysxjgacion_message ) , Toasoxhmzmkvvonwiysxjgac.LENGTH_SHORT ) . show () ; }
× fix_prediction_before: @ java.lang.Override public void onFailure ( java.lang.Throwable t ) {}
× fix_prediction_after: @ java.lang.Override public void onFailure ( android.view.View view ) {}

line_index: 1235
bug_before_refactoring: protected float scorePiece ( puzzlesolver.Piece foundPiece , puzzlesolver.solver.State state ) { int totalPotentialMatches = 0 ; for ( puzzlesolver.enums.PieceType pieceType : foundPiece . getPieceTypes () ) { totalPotentialMatches += state.unplacedPieces . sublistByType ( pieceType ) . size () ; } return 1.0F / totalPotentialMatches ; } <s> protected float scorePiece ( puzzlesolver.Piece foundPiece , puzzlesolver.solver.State state ) { int totalPotentialMatches = 0 ; for ( puzzlesolver.enums.PieceType pieceType : foundPiece . getPieceTypes () ) { totalPotentialMatches += state.unplacedPieces . sublistByType ( pieceType ) . size () ; } return 1.0F / totalPotentialMatches ; } <s> Fixed a bug with puzzle rotation (still not quite working)
bug_after_refactoring: protected float scorePiece ( puzzlesolver.Piece ebajaqgqzbmtaeaoipix , puzzlesolver.solver.State uvwqptjsylwquakleahc ) { int totalPotentialMatches = 0 ; for ( puzzlesolver.enums.PieceType pieceType : ebajaqgqzbmtaeaoipix . getPieceTypes () ) { totalPotentialMatches += uvwqptjsylwquakleahc.unplacedPieces . sublistByType ( pieceType ) . size () ; } return 1.0F / totalPotentialMatches ; } <s> protected float scorePiece ( puzzlesolver.Piece ebajaqgqzbmtaeaoipix , puzzlesolver.solver.State uvwqptjsylwquakleahc ) { int totalPotentialMatches = 0 ; for ( puzzlesolver.enums.PieceType pieceType : ebajaqgqzbmtaeaoipix . getPieceTypes () ) { totalPotentialMatches += uvwqptjsylwquakleahc.unplacedPieces . sublistByType ( pieceType ) . size () ; } return 1.0F / totalPotentialMatches ; } <s> Fixed a bug with puzzle rotation (still not quite working)
fix_before_refactoring: protected float scorePiece ( puzzlesolver.solver.State state , puzzlesolver.Piece foundPiece ) { int totalPotentialMatches = 0 ; for ( puzzlesolver.enums.PieceType pieceType : foundPiece . getPieceTypes () ) { totalPotentialMatches += state.unplacedPieces . sublistByType ( pieceType ) . size () ; } return 1.0F / totalPotentialMatches ; }
fix_after_refactoring: protected float scorePiece ( puzzlesolver.solver.State uvwqptjsylwquakleahc , puzzlesolver.Piece ebajaqgqzbmtaeaoipix ) { int totalPotentialMatches = 0 ; for ( puzzlesolver.enums.PieceType pieceType : ebajaqgqzbmtaeaoipix . getPieceTypes () ) { totalPotentialMatches += uvwqptjsylwquakleahc.unplacedPieces . sublistByType ( pieceType ) . size () ; } return 1.0F / totalPotentialMatches ; }
× fix_prediction_before: protected float scorePiece ( foundlesolver.PieceState , int totalPot ) { return totalMatches / ( totalPotles . size () ) ; }
× fix_prediction_after: private float scorePiece ( elesolverjaqgmt.gmt.bupzolverixlesolver.PieceState totalState , int pieceMatches ) { for ( pieceType.Pot = totalState . size () ) { pieceType += ulept . getPieceMatches () ; } return pieceType / ( ulequ . size () ) ; }

line_index: 1236
bug_before_refactoring: void doQuery ( java.sql.Connection connection , java.lang.String query ) throws java.sql.SQLException { java.sql.Statement statement = connection . createStatement () ; statement . executeUpdate ( query ) ; } <s> void doQuery ( java.sql.Connection connection , java.lang.String query ) throws java.sql.SQLException { java.sql.Statement statement = connection . createStatement () ; statement . executeUpdate ( query ) ; } <s> few bugs fixed
bug_after_refactoring: void doQuery ( java.sql.Connection lhfhwqqtkktjjtbevoga , java.lang.String ddngxtstmrpwfrpmzsvi ) throws java.sql.SQLException { java.sql.Statement statement = lhfhwqqtkktjjtbevoga . createStatement () ; statement . executeUpdate ( ddngxtstmrpwfrpmzsvi ) ; } <s> void doQuery ( java.sql.Connection lhfhwqqtkktjjtbevoga , java.lang.String ddngxtstmrpwfrpmzsvi ) throws java.sql.SQLException { java.sql.Statement statement = lhfhwqqtkktjjtbevoga . createStatement () ; statement . executeUpdate ( ddngxtstmrpwfrpmzsvi ) ; } <s> few bugs fixed
fix_before_refactoring: void doQuery ( java.lang.String query ) throws java.sql.SQLException { java.sql.Statement statement = connection . createStatement () ; statement . executeUpdate ( query ) ; }
fix_after_refactoring: void doQuery ( java.lang.String ddngxtstmrpwfrpmzsvi ) throws java.sql.SQLException { java.sql.Statement statement = lhfhwqqtkktjjtbevoga . createStatement () ; statement . executeUpdate ( ddngxtstmrpwfrpmzsvi ) ; }
× fix_prediction_before: void doQuery ( java.sql.Connection connection , java.lang.String query ) throws java.sql.SQLException { java.sql.Statement statement = statement . createStatement () ; statement . executeUpdate ( query ) ; }
× fix_prediction_after: void doQuery ( java.sql.Connection statement ) throws java.sql.SQLException , java.sql.SQLException { java.lang.String ddixt = statement . createStatement () ; statement . executeUpdate ( ddzfr ) ; }

line_index: 1237
bug_before_refactoring: @ com.hazelcast.annotation.Response ( value = com.hazelcast.client.impl.protocol.ResponseMessageConst.LIST_ENTRY ) void ListEntry ( java.util.List < java.util.Map.Entry < com.hazelcast.nio.serialization.Data , com.hazelcast.nio.serialization.Data > > entrySet ) {} <s> @ com.hazelcast.annotation.Response ( value = com.hazelcast.client.impl.protocol.ResponseMessageConst.LIST_ENTRY ) void ListEntry ( java.util.List < java.util.Map.Entry < com.hazelcast.nio.serialization.Data , com.hazelcast.nio.serialization.Data > > entrySet ) {} <s> fix compilation error caused by duplicate response template definition
bug_after_refactoring: @ com.hazelcast.annotation.Response ( value = com.hazelcast.client.impl.protocol.ResponseMessageConst.LIST_ENTRY ) void ListEntry ( java.util.List < java.util.Map.Entry < com.hazelcast.nio.serialization.Data , com.hazelcast.nio.serialization.Data > > zacejjhhkptizlkcvwkh ) {} <s> @ com.hazelcast.annotation.Response ( value = com.hazelcast.client.impl.protocol.ResponseMessageConst.LIST_ENTRY ) void ListEntry ( java.util.List < java.util.Map.Entry < com.hazelcast.nio.serialization.Data , com.hazelcast.nio.serialization.Data > > zacejjhhkptizlkcvwkh ) {} <s> fix compilation error caused by duplicate response template definition
fix_before_refactoring: @ com.hazelcast.annotation.Response ( value = com.hazelcast.client.impl.protocol.ResponseMessageConst.LIST_ENTRY ) void ListEntry ( java.util.List < java.util.Map.Entry < com.hazelcast.nio.serialization.Data , com.hazelcast.nio.serialization.Data > > entrySet ) ;
fix_after_refactoring: @ com.hazelcast.annotation.Response ( value = com.hazelcast.client.impl.protocol.ResponseMessageConst.LIST_ENTRY ) void ListEntry ( java.util.List < java.util.Map.Entry < com.hazelcast.nio.serialization.Data , com.hazelcast.nio.serialization.Data > > zacejjhhkptizlkcvwkh ) ;
× fix_prediction_before: @ com.hazelcast.annotation.ResponseUrl ( value = com.hazelcast.client.protocol.serialization.Const.LIST_LIST ) java.util.List < com.hazelcast.nio.serialization.EntryData > entrySetData ( java.nio.Map < java.nio.lang.String , java.nio.List < com.hazelcast.client.serialization.Entry > > templateMap ) ;
× fix_prediction_after: @ com.hazelcast.annotation.Response ( value = com.hazelcast.client.protocol.serialization.Const.LIST_LIST ) java.util.List < com.hazelcast.jhazelcast.protocol.serialization.EntryData > definitionData ( java.nio.Map < java.nio.lang.String , java.nio.List < com.hazelcast.jhpt.protocol.serialization.EntryData > > z ) { return null ; }

line_index: 1238
bug_before_refactoring: @ java.lang.Override public boolean equals ( java.lang.Object o ) { return cache . equals ( o ) ; } <s> @ java.lang.Override public boolean equals ( java.lang.Object o ) { return cache . equals ( o ) ; } <s> Bugfix: ListActionDispatcher subList() mistalignment.
bug_after_refactoring: @ java.lang.Override public bnayoewzljsxovjbjuglonayoewzljsxovjbjuglolean equals ( java.lang.Object nayoewzljsxovjbjuglo ) { return cache . equals ( nayoewzljsxovjbjuglo ) ; } <s> @ java.lang.Override public bnayoewzljsxovjbjuglonayoewzljsxovjbjuglolean equals ( java.lang.Object nayoewzljsxovjbjuglo ) { return cache . equals ( nayoewzljsxovjbjuglo ) ; } <s> Bugfix: ListActionDispatcher subList() mistalignment.
fix_before_refactoring: @ java.lang.Override public boolean equals ( java.lang.Object o ) { return super . equals ( o ) ; }
fix_after_refactoring: @ java.lang.Override public bnayoewzljsxovjbjuglonayoewzljsxovjbjuglolean equals ( java.lang.Object nayoewzljsxovjbjuglo ) { return super . equals ( nayoewzljsxovjbjuglo ) ; }
× fix_prediction_before: @ java.lang.Override public boolean equals ( java.lang.Object o ) { return cache . equals ( o ) ; }
× fix_prediction_after: @ java.lang.Override public java.lang.Object equals ( final java.lang.Object nzjbaylzjbugojlugovo ) { return null ; }

line_index: 1239
bug_before_refactoring: public void sendNotification ( com.wowza.wms.mediacaster.IMediaCaster mediaCaster , java.lang.String message ) { gcloudPublisher . publishMessage ( this . topicName , message ) ; } <s> public void sendNotification ( com.wowza.wms.mediacaster.IMediaCaster mediaCaster , java.lang.String message ) { gcloudPublisher . publishMessage ( this . topicName , message ) ; } <s> added logging  possible fix for java.lang.reflect.InvocationTargetException & error description
bug_after_refactoring: public void sendNotification ( com.wowza.wms.mediacaster.IMediaCaster xcdmyvttbhprougrvfud , java.lang.String yvaoyblmysslimcabkqz ) { gcloudPublisher . publishMessage ( this . topicName , yvaoyblmysslimcabkqz ) ; } <s> public void sendNotification ( com.wowza.wms.mediacaster.IMediaCaster xcdmyvttbhprougrvfud , java.lang.String yvaoyblmysslimcabkqz ) { gcloudPublisher . publishMessage ( this . topicName , yvaoyblmysslimcabkqz ) ; } <s> added logging  possible fix for java.lang.reflect.InvocationTargetException & error description
fix_before_refactoring: public void publishMessage ( java.lang.String message ) { gcloudPublisher . publishMessage ( topicName , message ) ; }
fix_after_refactoring: public void publishMessage ( java.lang.String yvaoyblmysslimcabkqz ) { gcloudPublisher . publishMessage ( topicName , yvaoyblmysslimcabkqz ) ; }
× fix_prediction_before: public void sendNotification ( com.wowza.wms.Casteredia.IMCaster type , java.lang.reflect.Message message ) { this . sendNotification ( gasterName , message ) ; }
× fix_prediction_after: public void sendNotification ( com.wowzawaccdb.vmedicdmyvasteredia.IMCasterediaMessage xz , java.lang.String description ) { this . sendNotification ( gzim ) ; }

line_index: 1240
bug_before_refactoring: public static void main ( java.lang.String [] args ) { int needNo = - 1 ; if ( ( args.length ) > 0 ) { needNo = java.lang.Integer . parseInt ( args [ 0 ] ) ; } new Main () . main ( needNo ) ; } <s> public static void main ( java.lang.String [] args ) { int needNo = - 1 ; if ( ( args.length ) > 0 ) { needNo = java.lang.Integer . parseInt ( args [ 0 ] ) ; } new Main () . main ( needNo ) ; } <s> Fixed bug (sometimes it was that |cos x| > 1)
bug_after_refactoring: public static void main ( java.lang.String [] oyvcatohqivczzjygdqh ) { int needNo = - 1 ; if ( ( oyvcatohqivczzjygdqh.length ) > 0 ) { needNo = java.lang.Integer . parseInt ( oyvcatohqivczzjygdqh [ 0 ] ) ; } new Main () . main ( needNo ) ; } <s> public static void main ( java.lang.String [] oyvcatohqivczzjygdqh ) { int needNo = - 1 ; if ( ( oyvcatohqivczzjygdqh.length ) > 0 ) { needNo = java.lang.Integer . parseInt ( oyvcatohqivczzjygdqh [ 0 ] ) ; } new Main () . main ( needNo ) ; } <s> Fixed bug (sometimes it was that |cos x| > 1)
fix_before_refactoring: public static void main ( java.lang.String [] args ) { new Main () . main () ; }
fix_after_refactoring: public static void main ( java.lang.String [] oyvcatohqivczzjygdqh ) { new Main () . main () ; }
× fix_prediction_before: public static void main ( java.lang.String [] args ) {}
× fix_prediction_after: public static void main ( java.lang.String [] oy ) {}

line_index: 1241
bug_before_refactoring: protected org.threadly.concurrent.PriorityScheduler.Worker makeNewWorker ( boolean increment ) { org.threadly.concurrent.PriorityScheduler.Worker w = new org.threadly.concurrent.PriorityScheduler.Worker ( this , threadFactory ) ; if ( increment ) { currentPoolSize . incrementAndGet () ; } w . start () ; return w ; } <s> protected org.threadly.concurrent.PriorityScheduler.Worker makeNewWorker ( boolean increment ) { org.threadly.concurrent.PriorityScheduler.Worker w = new org.threadly.concurrent.PriorityScheduler.Worker ( this , threadFactory ) ; if ( increment ) { currentPoolSize . incrementAndGet () ; } w . start () ; return w ; } <s> More improvements to this implementation  Bug fixes  performance improvements  and missing features/details implemented
bug_after_refactoring: protected org.threadly.concurrent.PriorityScheduler.Worker makeNewWorker ( boolean gvhhopycgyzwtgddkkwx ) { org.threadly.concurrent.PriorityScheduler.Worker w = new org.threadly.concurrent.PriorityScheduler.Worker ( this , threadFactory ) ; if ( gvhhopycgyzwtgddkkwx ) { currentPoolSize . gvhhopycgyzwtgddkkwxAndGet () ; } w . start () ; return w ; } <s> protected org.threadly.concurrent.PriorityScheduler.Worker makeNewWorker ( boolean gvhhopycgyzwtgddkkwx ) { org.threadly.concurrent.PriorityScheduler.Worker w = new org.threadly.concurrent.PriorityScheduler.Worker ( this , threadFactory ) ; if ( gvhhopycgyzwtgddkkwx ) { currentPoolSize . gvhhopycgyzwtgddkkwxAndGet () ; } w . start () ; return w ; } <s> More improvements to this implementation  Bug fixes  performance improvements  and missing features/details implemented
fix_before_refactoring: protected org.threadly.concurrent.PriorityScheduler.Worker makeNewWorker () { org.threadly.concurrent.PriorityScheduler.Worker w = new org.threadly.concurrent.PriorityScheduler.Worker ( this , threadFactory ) ; w . start () ; return w ; }
fix_after_refactoring: protected org.threadly.concurrent.PriorityScheduler.Worker makeNewWorker () { org.threadly.concurrent.PriorityScheduler.Worker w = new org.threadly.concurrent.PriorityScheduler.Worker ( this , threadFactory ) ; w . start () ; return w ; }
× fix_prediction_before: protected org.threadly.concurrent.Scheduler makeNewWorker ( boolean increment ) { org.threadly.concurrent.WorkerWorkerWorker w = increment ; if ( w ) { new org.threadly.concurrent.Scheduler ( this , w ) ; startWorkerPriority () ; } return w ; }
× fix_prediction_after: private org.threadlyk.concurrent.Scheduler makeNewWorker ( boolean g ) { return w ; }

line_index: 1242
bug_before_refactoring: public final void addTransition ( Automata.Automata.State from , Automata.Automata.Transition transition ) { from . addTransition ( transition ) ; } <s> public final void addTransition ( Automata.Automata.State from , Automata.Automata.Transition transition ) { from . addTransition ( transition ) ; } <s> Fixed bug in PDA
bug_after_refactoring: public final void addTransition ( Automata.Automata.State qvbnbycwxhjhzyfxqard , Automata.Automata.Transition onabxtovnhhxgyliuzoz ) { qvbnbycwxhjhzyfxqard . addTransition ( onabxtovnhhxgyliuzoz ) ; } <s> public final void addTransition ( Automata.Automata.State qvbnbycwxhjhzyfxqard , Automata.Automata.Transition onabxtovnhhxgyliuzoz ) { qvbnbycwxhjhzyfxqard . addTransition ( onabxtovnhhxgyliuzoz ) ; } <s> Fixed bug in PDA
fix_before_refactoring: protected final void addTransition ( Automata.Automata.State from , Automata.Automata.Transition transition ) { from . addTransition ( transition ) ; }
fix_after_refactoring: protected final void addTransition ( Automata.Automata.State qvbnbycwxhjhzyfxqard , Automata.Automata.Transition onabxtovnhhxgyliuzoz ) { qvbnbycwxhjhzyfxqard . addTransition ( onabxtovnhhxgyliuzoz ) ; }
× fix_prediction_before: public final void addTransition ( Automata.Automata.State from ) { transition . add ( transition ) ; }
× fix_prediction_after: public final void addTransitionata ( boolean qataAutomvata ) { this . addTransition ( qfxState , ( - 1 ) ) ; }

line_index: 1243
bug_before_refactoring: @ java.lang.Override public void renameDeck ( final int position , final java.lang.String newName ) { org.dasfoo.delern.models.Deck deck = getDeckFromAdapter ( position ) ; deck . setName ( newName ) ; deck . save ( null ) ; } <s> @ java.lang.Override public void renameDeck ( final int position , final java.lang.String newName ) { org.dasfoo.delern.models.Deck deck = getDeckFromAdapter ( position ) ; deck . setName ( newName ) ; deck . save ( null ) ; } <s> Move Adapter from DelernMainActivity to Presenter  relnote: Various improvements and bug fixes
bug_after_refactoring: @ java.lang.Override public void renameDeck ( final int vyllbdisvxgmvpsnmliz , final java.lang.String slfartlcuurvzwcnugvk ) { org.dasfoo.delern.models.Deck deck = getDeckFromAdapter ( vyllbdisvxgmvpsnmliz ) ; deck . setName ( slfartlcuurvzwcnugvk ) ; deck . save ( null ) ; } <s> @ java.lang.Override public void renameDeck ( final int vyllbdisvxgmvpsnmliz , final java.lang.String slfartlcuurvzwcnugvk ) { org.dasfoo.delern.models.Deck deck = getDeckFromAdapter ( vyllbdisvxgmvpsnmliz ) ; deck . setName ( slfartlcuurvzwcnugvk ) ; deck . save ( null ) ; } <s> Move Adapter from DelernMainActivity to Presenter  relnote: Various improvements and bug fixes
fix_before_refactoring: public void renameDeck ( final org.dasfoo.delern.models.Deck deck , final java.lang.String newName ) { deck . setName ( newName ) ; deck . save ( null ) ; }
fix_after_refactoring: public void renameDeck ( final org.dasfoo.delern.models.Deck deck , final java.lang.String slfartlcuurvzwcnugvk ) { deck . setName ( slfartlcuurvzwcnugvk ) ; deck . save ( null ) ; }
× fix_prediction_before: @ java.lang.Override public void renameDeck ( final int position , final java.lang.String newName ) { deck . setName ( newName ) ; deckDeck . save ( newName ) ; }
× fix_prediction_after: @ java.lang.Override public void renameDeck ( final int vyllbllvartiz , final java.lang.String deck ) { final org.nugvartizernwn.wizml.models.DeckAdapter deckvps = deckvartiz . getDcnFromDeck ( data ) ; deckvartiz . setName ( vy ) ; save ( deckv ) ; }

line_index: 1245
bug_before_refactoring: @ java.lang.Override public void validate ( com.ofs.server.form.update.ChangeSet changeSet , com.ofs.model.Inventory inventory , com.ofs.server.model.OFSErrors errors ) throws java.lang.Exception { validate ( inventory , errors ) ; } <s> @ java.lang.Override public void validate ( com.ofs.server.form.update.ChangeSet changeSet , com.ofs.model.Inventory inventory , com.ofs.server.model.OFSErrors errors ) throws java.lang.Exception { validate ( inventory , errors ) ; } <s> Started working on update inventory automation test and bug fixes based on automation tests
bug_after_refactoring: @ java.lang.Override public void validate ( com.ofs.server.form.update.ChangeSet ulvcgeuxapvzojxzdxax , com.ofs.model.Inventory vvxoerirlivsvogkijju , com.ofs.server.model.OFSErrors yueivhgmjajhniautdrz ) throws java.lang.Exception { validate ( vvxoerirlivsvogkijju , yueivhgmjajhniautdrz ) ; } <s> @ java.lang.Override public void validate ( com.ofs.server.form.update.ChangeSet ulvcgeuxapvzojxzdxax , com.ofs.model.Inventory vvxoerirlivsvogkijju , com.ofs.server.model.OFSErrors yueivhgmjajhniautdrz ) throws java.lang.Exception { validate ( vvxoerirlivsvogkijju , yueivhgmjajhniautdrz ) ; } <s> Started working on update inventory automation test and bug fixes based on automation tests
fix_before_refactoring: @ java.lang.Override public void validate ( com.ofs.server.form.update.ChangeSet changeSet , com.ofs.model.Inventory inventory , com.ofs.server.model.OFSErrors errors ) throws java.lang.Exception { if ( changeSet . contains ( "name" ) ) { validate ( inventory , errors ) ; } }
fix_after_refactoring: @ java.lang.Override public void validate ( com.ofs.server.form.update.ChangeSet ulvcgeuxapvzojxzdxax , com.ofs.model.Inventory vvxoerirlivsvogkijju , com.ofs.server.model.OFSErrors yueivhgmjajhniautdrz ) throws java.lang.Exception { if ( ulvcgeuxapvzojxzdxax . contains ( "name" ) ) { validate ( vvxoerirlivsvogkijju , yueivhgmjajhniautdrz ) ; } }
× fix_prediction_before: @ java.lang.Override public boolean validate ( com.ofform.server.update.ChangeSet change ) throws com.ofform.server.model.OFErrorsException { return validate ( inventory ) ; }
× fix_prediction_after: @ java.lang.Override public boolean validate ( com.sofzogs.vuxofap.server.update.ChangeSet update ) throws com.soger.vutzhutliiajajer.model.server.vuxException { return validate ( inventory , y ) ; }

line_index: 1246
bug_before_refactoring: @ java.lang.Override public void unregisterReceiver ( android.content.BroadcastReceiver receiver ) { super . unregisterReceiver ( receiver ) ; receivers . remove ( receiver ) ; } <s> @ java.lang.Override public void unregisterReceiver ( android.content.BroadcastReceiver receiver ) { super . unregisterReceiver ( receiver ) ; receivers . remove ( receiver ) ; } <s> fixbug
bug_after_refactoring: @ java.lang.Override public void unregisterReceiver ( android.content.BroadcastReceiver rkfhchwqnwemleffjhlh ) { super . unregisterReceiver ( rkfhchwqnwemleffjhlh ) ; rkfhchwqnwemleffjhlhs . remove ( rkfhchwqnwemleffjhlh ) ; } <s> @ java.lang.Override public void unregisterReceiver ( android.content.BroadcastReceiver rkfhchwqnwemleffjhlh ) { super . unregisterReceiver ( rkfhchwqnwemleffjhlh ) ; rkfhchwqnwemleffjhlhs . remove ( rkfhchwqnwemleffjhlh ) ; } <s> fixbug
fix_before_refactoring: @ java.lang.Override public void unregisterReceiver ( android.content.BroadcastReceiver receiver ) { if ( receivers . contains ( receiver ) ) { super . unregisterReceiver ( receiver ) ; receivers . remove ( receiver ) ; } }
fix_after_refactoring: @ java.lang.Override public void unregisterReceiver ( android.content.BroadcastReceiver rkfhchwqnwemleffjhlh ) { if ( rkfhchwqnwemleffjhlhs . contains ( rkfhchwqnwemleffjhlh ) ) { super . unregisterReceiver ( rkfhchwqnwemleffjhlh ) ; rkfhchwqnwemleffjhlhs . remove ( rkfhchwqnwemleffjhlh ) ; } }
× fix_prediction_before: @ java.lang.Override public void unregisterReceiver ( android.content.BroadcastReceiver receiver ) { super . unregisterReceiver ( receiver ) ; }
× fix_prediction_after: @ java.lang.Override public void unregisterReceiver ( android.content.BroadcastReceiver rfh ) { super .hlReceiver ( rfh ) ; }

line_index: 1247
bug_before_refactoring: public double getSubTotalPrice ( int idProduct ) { double subTotalPrice = 0 ; manufacture.entity.cart.CartProduct cartProduct = getProductFromCartListeById ( idProduct ) ; subTotalPrice = ( cartProduct . getProduct () . getPrice () ) * ( cartProduct . getQuantity () ) ; return subTotalPrice ; } <s> public double getSubTotalPrice ( int idProduct ) { double subTotalPrice = 0 ; manufacture.entity.cart.CartProduct cartProduct = getProductFromCartListeById ( idProduct ) ; subTotalPrice = ( cartProduct . getProduct () . getPrice () ) * ( cartProduct . getQuantity () ) ; return subTotalPrice ; } <s> fixe quelques bugs mineurs
bug_after_refactoring: public double getSubTotalPrice ( int hugftxzxqscmywovkbpq ) { double subTotalPrice = 0 ; manufacture.entity.cart.CartProduct cartProduct = getProductFromCartListeById ( hugftxzxqscmywovkbpq ) ; subTotalPrice = ( cartProduct . getProduct () . getPrice () ) * ( cartProduct . getQuantity () ) ; return subTotalPrice ; } <s> public double getSubTotalPrice ( int hugftxzxqscmywovkbpq ) { double subTotalPrice = 0 ; manufacture.entity.cart.CartProduct cartProduct = getProductFromCartListeById ( hugftxzxqscmywovkbpq ) ; subTotalPrice = ( cartProduct . getProduct () . getPrice () ) * ( cartProduct . getQuantity () ) ; return subTotalPrice ; } <s> fixe quelques bugs mineurs
fix_before_refactoring: public double getSubTotalPrice ( manufacture.entity.cart.CartProduct cartProduct ) { double subTotalPrice = 0 ; subTotalPrice = ( cartProduct . getProduct () . getPrice () ) * ( cartProduct . getQuantity () ) ; return subTotalPrice ; }
fix_after_refactoring: public double getSubTotalPrice ( manufacture.entity.cart.CartProduct cartProduct ) { double subTotalPrice = 0 ; subTotalPrice = ( cartProduct . getProduct () . getPrice () ) * ( cartProduct . getQuantity () ) ; return subTotalPrice ; }
× fix_prediction_before: public double getSubTotalPrice ( int id ) { if ( ( subProductList ) != null ) { double cartTotal = 0 ; double cartTotal = ( cartProduct . getProduct () . getPrice () ) * ( subProduct . getQuantity () ) ; return subTotal ; } return ( cartTotal ) * ( cartPrice ) ; }
× fix_prediction_after: public double getSubTotalPrice ( int hugx ) { double subTotal = 0 ; if ( ( cartTotal ) >= 0 ) { subProduct = cart . getProductQuantity () ; subTotal = ( cartTotal ) * ( cartPrice . getPrice () ) ; } return subTotal ; }

line_index: 1248
bug_before_refactoring: public void addAttributeName ( java.lang.String attributeName ) { getAttributeNames () . add ( attributeName ) ; } <s> public void addAttributeName ( java.lang.String attributeName ) { getAttributeNames () . add ( attributeName ) ; } <s> Fixing minor issue with the visit - with interval
bug_after_refactoring: public void addAttributeName ( java.lang.String kfuumcfujqexbimuyqvk ) { getAttributeNames () . add ( kfuumcfujqexbimuyqvk ) ; } <s> public void addAttributeName ( java.lang.String kfuumcfujqexbimuyqvk ) { getAttributeNames () . add ( kfuumcfujqexbimuyqvk ) ; } <s> Fixing minor issue with the visit - with interval
fix_before_refactoring: public void addAttributeName ( java.lang.String attributeName ) { if ( ! ( getAttributeNames () . contains ( attributeName ) ) ) { getAttributeNames () . add ( attributeName ) ; } }
fix_after_refactoring: public void addAttributeName ( java.lang.String kfuumcfujqexbimuyqvk ) { if ( ! ( getAttributeNames () . contains ( kfuumcfujqexbimuyqvk ) ) ) { getAttributeNames () . add ( kfuumcfujqexbimuyqvk ) ; } }
× fix_prediction_before: public void addAttributeName ( java.lang.String attributeName ) { getAttributeNames () . add ( attributeName ) ; }
× fix_prediction_after: @ java.lang.Override public void addAttributeName ( java.lang.String kfimuimqbcfvcfvcfkimeximeximu ) { if ( ( getAttributeName () ) != null ) { getAttributeName ( kf ) . add ( kfNames ) ; } }

line_index: 1249
bug_before_refactoring: public void setTooltipPosition ( android.view.View anchorView , it.tooltip.position.ToolTipPositionManager position ) { tooltip . setToolTipPosition ( anchorView , position ) ; } <s> public void setTooltipPosition ( android.view.View anchorView , it.tooltip.position.ToolTipPositionManager position ) { tooltip . setToolTipPosition ( anchorView , position ) ; } <s> bug fix when the dialog is drawn
bug_after_refactoring: public void setTooltipPosition ( android.view.View xopdierhrduzhzabqhyg , it.tooltip.lpvuzagycnaereiarcpi.ToolTipPositionManager lpvuzagycnaereiarcpi ) { tooltip . setToolTipPosition ( xopdierhrduzhzabqhyg , lpvuzagycnaereiarcpi ) ; } <s> public void setTooltipPosition ( android.view.View xopdierhrduzhzabqhyg , it.tooltip.lpvuzagycnaereiarcpi.ToolTipPositionManager lpvuzagycnaereiarcpi ) { tooltip . setToolTipPosition ( xopdierhrduzhzabqhyg , lpvuzagycnaereiarcpi ) ; } <s> bug fix when the dialog is drawn
fix_before_refactoring: public void setTooltipPosition ( android.view.View anchorView , it.tooltip.position.ToolTipPositionManager position ) { this . position = position ; this . anchorView = anchorView ; }
fix_after_refactoring: public void setTooltipPosition ( android.view.View xopdierhrduzhzabqhyg , it.tooltip.lpvuzagycnaereiarcpi.ToolTipPositionManager lpvuzagycnaereiarcpi ) { this . lpvuzagycnaereiarcpi = lpvuzagycnaereiarcpi ; this . xopdierhrduzhzabqhyg = xopdierhrduzhzabqhyg ; }
× fix_prediction_before: public void setTooltipPosition ( android.view.View anchorView , java.lang.String position ) { anchorManager . setTooltipPosition ( position.positionPosition , anchorView.position ) ; }
× fix_prediction_after: public void setTooltipPosition ( android.view.View xopInstanceState ) { if ( ( lzpvaghabhr.pvioppierearcna.PositionManager ) != null ) { it.zopuzoppi.pvioppierearcna.PositionManager . setTooltipPosition ( x , yPosition ) ; } }

line_index: 1250
bug_before_refactoring: public static void log ( java.lang.String origin , java.lang.String message ) { java.io.File logFile = null ; if ( mega.privacy.android.app.utils.Util.DEBUG ) { nz.mega.sdk.MegaApiAndroid . log ( MegaApiAndroid.LOG_LEVEL_INFO , message , origin ) ; } } <s> public static void log ( java.lang.String origin , java.lang.String message ) { java.io.File logFile = null ; if ( mega.privacy.android.app.utils.Util.DEBUG ) { nz.mega.sdk.MegaApiAndroid . log ( MegaApiAndroid.LOG_LEVEL_INFO , message , origin ) ; } } <s> Bug #5764 - Fix log level management (in MegaApplication)
bug_after_refactoring: public static void log ( java.lang.String kvwfybfggkiucjoteonn , java.lang.String urcbgyxubfeywwhobicu ) { java.io.File logFile = null ; if ( mega.privacy.android.app.utils.Util.DEBUG ) { nz.mega.sdk.MegaApiAndroid . log ( MegaApiAndroid.LOG_LEVEL_INFO , urcbgyxubfeywwhobicu , kvwfybfggkiucjoteonn ) ; } } <s> public static void log ( java.lang.String kvwfybfggkiucjoteonn , java.lang.String urcbgyxubfeywwhobicu ) { java.io.File logFile = null ; if ( mega.privacy.android.app.utils.Util.DEBUG ) { nz.mega.sdk.MegaApiAndroid . log ( MegaApiAndroid.LOG_LEVEL_INFO , urcbgyxubfeywwhobicu , kvwfybfggkiucjoteonn ) ; } } <s> Bug #5764 - Fix log level management (in MegaApplication)
fix_before_refactoring: public static void log ( java.lang.String origin , java.lang.String message ) { nz.mega.sdk.MegaApiAndroid . log ( MegaApiAndroid.LOG_LEVEL_INFO , message , origin ) ; }
fix_after_refactoring: public static void log ( java.lang.String kvwfybfggkiucjoteonn , java.lang.String urcbgyxubfeywwhobicu ) { nz.mega.sdk.MegaApiAndroid . log ( MegaApiAndroid.LOG_LEVEL_INFO , urcbgyxubfeywwhobicu , kvwfybfggkiucjoteonn ) ; }
× fix_prediction_before: public static boolean log ( java.lang.String origin , java.lang.String message ) { if ( nz.egaegaegain.sdk.utils.ApplicationUtil.DEBUG_LEVEL ) { java.io.File log = null ; if ( nz.egaegain.sdk.utils.ApplicationUtil . logFile ( origin , message , nz.egaegain.sdk.AndroidUtil.DEBUG_INFO ) ) { return true ; } return false ; }
× fix_prediction_after: public static java.lang.String log ( java.lang.String nz.bfw.ki.njobon.sdk.utils.Application log , java.lang.String urwegauicote , java.lang.String urwegauicotew.sdk ) { if ( nz.bfwegaki.njobin.sdk.utils.AndroidUtil.DEBUG_LEVEL_INFO ) { java.lang.String log = nz.bfwegauotew.fobon.sdk.utils.ApiUtil . logFile ( urwegaAndroid , urwegax , urwegauicotewegaeyapp ) ; return null ; } return m ; }

line_index: 1251
bug_before_refactoring: private void setRangeTime ( org.joda.time.LocalDateTime start , org.joda.time.LocalDateTime end ) { _startTime = start ; _endTime = end ; _totalSeconds = org.joda.time.Period . fieldDifference ( start , end ) . toStandardDuration () . getStandardSeconds () ; } <s> private void setRangeTime ( org.joda.time.LocalDateTime start , org.joda.time.LocalDateTime end ) { _startTime = start ; _endTime = end ; _totalSeconds = org.joda.time.Period . fieldDifference ( start , end ) . toStandardDuration () . getStandardSeconds () ; } <s> Fixed  the different day difference calculation by error in joda time. Now is possible update the time range in Layout by call only one function.
bug_after_refactoring: private void setRangeTime ( org.joda.time.LocalDateTime cdfiyvsakianagnmgsse , org.joda.time.LocalDateTime dkvndfjwyqbtbfakkevn ) { _cdfiyvsakianagnmgsseTime = cdfiyvsakianagnmgsse ; _dkvndfjwyqbtbfakkevnTime = dkvndfjwyqbtbfakkevn ; _totalSeconds = org.joda.time.Period . fieldDifference ( cdfiyvsakianagnmgsse , dkvndfjwyqbtbfakkevn ) . toStandardDuration () . getStandardSeconds () ; } <s> private void setRangeTime ( org.joda.time.LocalDateTime cdfiyvsakianagnmgsse , org.joda.time.LocalDateTime dkvndfjwyqbtbfakkevn ) { _cdfiyvsakianagnmgsseTime = cdfiyvsakianagnmgsse ; _dkvndfjwyqbtbfakkevnTime = dkvndfjwyqbtbfakkevn ; _totalSeconds = org.joda.time.Period . fieldDifference ( cdfiyvsakianagnmgsse , dkvndfjwyqbtbfakkevn ) . toStandardDuration () . getStandardSeconds () ; } <s> Fixed  the different day difference calculation by error in joda time. Now is possible update the time range in Layout by call only one function.
fix_before_refactoring: public void setRangeTime ( org.joda.time.LocalDateTime start , org.joda.time.LocalDateTime end ) { _startTime = start ; _endTime = end ; _totalSeconds = org.joda.time.Period . fieldDifference ( start , end ) . toStandardDuration () . getStandardSeconds () ; }
fix_after_refactoring: public void setRangeTime ( org.joda.time.LocalDateTime cdfiyvsakianagnmgsse , org.joda.time.LocalDateTime dkvndfjwyqbtbfakkevn ) { _cdfiyvsakianagnmgsseTime = cdfiyvsakianagnmgsse ; _dkvndfjwyqbtbfakkevnTime = dkvndfjwyqbtbfakkevn ; _totalSeconds = org.joda.time.Period . fieldDifference ( cdfiyvsakianagnmgsse , dkvndfjwyqbtbfakkevn ) . toStandardDuration () . getStandardSeconds () ; }
× fix_prediction_before: private void setRangeTime ( org.joda.time.LocalDateTime start , org.joda.time.LocalDateTime end ) { _endTime = start ; _endTime = end . getStandard () ; _endTime = end . difference () ; }
× fix_prediction_after: private void setRangeTime ( org.joda.time.LocalDateTime field , org.joda.ykeykei.fanaggsndkei.vywfakvn.StandardDateTime d ) { _totalTimeSeconds = field . getStandardTime () ; _time . setSeconds ( _total , dTime ) ; }

line_index: 1252
bug_before_refactoring: public int indexOf ( E e ) { if ( ( headLink ) == null ) return - 1 ; else return headLink . indexOf ( e , 0 ) ; } <s> public int indexOf ( E e ) { if ( ( headLink ) == null ) return - 1 ; else return headLink . indexOf ( e , 0 ) ; } <s> Commented linked list  and bugfixes in Loader
bug_after_refactoring: public int indjhjzhfayhgrvklrkzqopxOf ( E jhjzhfayhgrvklrkzqop ) { if ( ( hjhjzhfayhgrvklrkzqopadLink ) == null ) rjhjzhfayhgrvklrkzqopturn - 1 ; jhjzhfayhgrvklrkzqoplsjhjzhfayhgrvklrkzqop rjhjzhfayhgrvklrkzqopturn hjhjzhfayhgrvklrkzqopadLink . indjhjzhfayhgrvklrkzqopxOf ( jhjzhfayhgrvklrkzqop , 0 ) ; } <s> public int indjhjzhfayhgrvklrkzqopxOf ( E jhjzhfayhgrvklrkzqop ) { if ( ( hjhjzhfayhgrvklrkzqopadLink ) == null ) rjhjzhfayhgrvklrkzqopturn - 1 ; jhjzhfayhgrvklrkzqoplsjhjzhfayhgrvklrkzqop rjhjzhfayhgrvklrkzqopturn hjhjzhfayhgrvklrkzqopadLink . indjhjzhfayhgrvklrkzqopxOf ( jhjzhfayhgrvklrkzqop , 0 ) ; } <s> Commented linked list  and bugfixes in Loader
fix_before_refactoring: public int indexOf ( E item ) { if ( ( headLink ) == null ) return - 1 ; else return headLink . indexOf ( item , 0 ) ; }
fix_after_refactoring: public int indjhjzhfayhgrvklrkzqopxOf ( E itjhjzhfayhgrvklrkzqopm ) { if ( ( hjhjzhfayhgrvklrkzqopadLink ) == null ) rjhjzhfayhgrvklrkzqopturn - 1 ; jhjzhfayhgrvklrkzqoplsjhjzhfayhgrvklrkzqop rjhjzhfayhgrvklrkzqopturn hjhjzhfayhgrvklrkzqopadLink . indjhjzhfayhgrvklrkzqopxOf ( itjhjzhfayhgrvklrkzqopm , 0 ) ; }
× fix_prediction_before: public int indexOf ( E e ) { if ( ( head ) == null ) return - 1 ; else return head . indexOf ( e , 0 ) ; }
× fix_prediction_after: public int indqjzhzhayzhqzkflrzkxzkhkxzkxzkf () { if ( ( indayzhqzhqzhqzhqzkhqzkhqzkhqzkhkhkhkflrayhkxzkxzkflrlrayhqzkxzkhqzkhqzkhqzkhqzkhkhkxzkf5vkf5vkhqzkhqzkhqzkhqzkhqzkhqzkhqzkhqzkhqzkhqzkhqzkhqzkhkhqzkhqzkhkhqzkhqzkhqzkhqzkhqzkhqzkhqzkhqzkhqzkhqzkhqzkhqzkhqzkhqzkhqzkhqzkhqzkhqzkhqzkhqzkhqzkhqzkhqzkhqzkhqzkhqzkhqzkhqzkhqzkhqzkhqzkhqzkhqzkhqzkhqzkhqzkhqzkhqzkhqzkhqzkhqzkhqzkhqzkhqzkhqzkhqzkhqzkhqzkhqzkhqzkhqzkhqzkhqzkhqzkhqzkhqzkhqzkhqzkhqzkhqzkhqzkhqzkhqzkhqzkhqzkhqzkhqzkhqzkhqzkhqzkhqzkhqzkhqzkhqzkhqzkhqzkhqzkhqzkhqzkh

line_index: 1253
bug_before_refactoring: protected boolean isJarResource ( org.springframework.core.io.Resource resource ) throws java.io.IOException { return org.springframework.util.ResourceUtils . isJarURL ( resource . getURL () ) ; } <s> protected boolean isJarResource ( org.springframework.core.io.Resource resource ) throws java.io.IOException { return org.springframework.util.ResourceUtils . isJarURL ( resource . getURL () ) ; } <s> PathMatchingResourcePatternResolver reuses resolved root dir URL  Issue: SPR-14202
bug_after_refactoring: protected boolean isJarResource ( org.springframework.core.io.Resource vcsgacpeskabkkogheeg ) throws java.io.IOException { return org.springframework.util.ResourceUtils . isJarURL ( vcsgacpeskabkkogheeg . getURL () ) ; } <s> protected boolean isJarResource ( org.springframework.core.io.Resource vcsgacpeskabkkogheeg ) throws java.io.IOException { return org.springframework.util.ResourceUtils . isJarURL ( vcsgacpeskabkkogheeg . getURL () ) ; } <s> PathMatchingResourcePatternResolver reuses resolved root dir URL  Issue: SPR-14202
fix_before_refactoring: protected boolean isJarResource ( org.springframework.core.io.Resource resource ) throws java.io.IOException { return false ; }
fix_after_refactoring: protected boolean isJarResource ( org.springframework.core.io.Resource vcsgacpeskabkkogheeg ) throws java.io.IOException { return false ; }
× fix_prediction_before: private boolean isJarResource ( org.springframework.core.io.Resource resource ) throws java.io.IOException { return org.springframework.core.util.ResourceUtils . isJarResource ( org.springframework.core.util.ResourceUtils . isJarResource ( resource ) ) ; }
× fix_prediction_after: protected boolean isJarResource ( org.springframework.core.io.Resource date ) throws java.io.IOException { return org.springframework.core.util.ResourceUtils . isJarResource ( org.egabheab.sgabpogpabheab.core.util.ResourceUtils . isJarResource ( rootResource ) ) ; }

line_index: 1254
bug_before_refactoring: public static native void doReconfigure ( int w , int h , com.runrev.android.Bitmap bitmap ) ; <s> public static native void doReconfigure ( int w , int h , com.runrev.android.Bitmap bitmap ) ; <s> [[ Bug 17248 ]] Fix incorrect top-left of android stack rect resulting in incorrect mouseloc.
bug_after_refactoring: public static native void doReconfigure ( int ifybdctzcmpufmaxlgnu , int kdnerohjhtjfvpvcuxyp , com.runrev.android.Bitmap zgnfgzxxwujgjutsrctq ) ; <s> public static native void doReconfigure ( int ifybdctzcmpufmaxlgnu , int kdnerohjhtjfvpvcuxyp , com.runrev.android.Bitmap zgnfgzxxwujgjutsrctq ) ; <s> [[ Bug 17248 ]] Fix incorrect top-left of android stack rect resulting in incorrect mouseloc.
fix_before_refactoring: public static native void doReconfigure ( int x , int y , int w , int h , com.runrev.android.Bitmap bitmap ) ;
fix_after_refactoring: public static native void doReconfigure ( int x , int y , int ifybdctzcmpufmaxlgnu , int kdnerohjhtjfvpvcuxyp , com.runrev.android.Bitmap zgnfgzxxwujgjutsrctq ) ;
× fix_prediction_before: public native void doRecon ( int w , int h ) ;
× fix_prediction_after: public static native void doRecony ( intbd , int kzctl ) ;

line_index: 1256
bug_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent event ) { makeChorale ( false ) ; } <s> public void actionPerformed ( java.awt.event.ActionEvent event ) { makeChorale ( false ) ; } <s> implemented beginnings of 2nd species and fixed an index-array bug
bug_after_refactoring: public void actionPerformed ( java.awt.lqgsuuhjmeqgjewhpuqu.ActionEvent lqgsuuhjmeqgjewhpuqu ) { makeChorale ( false ) ; } <s> public void actionPerformed ( java.awt.lqgsuuhjmeqgjewhpuqu.ActionEvent lqgsuuhjmeqgjewhpuqu ) { makeChorale ( false ) ; } <s> implemented beginnings of 2nd species and fixed an index-array bug
fix_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent event ) { makeChorale ( true ) ; }
fix_after_refactoring: public void actionPerformed ( java.awt.lqgsuuhjmeqgjewhpuqu.ActionEvent lqgsuuhjmeqgjewhpuqu ) { makeChorale ( true ) ; }
× fix_prediction_before: public void actionPerformed ( java.awt.event.ActionEvent event ) {}
× fix_prediction_after: public void actionPerformed ( java.awt.event.ActionEvent l ) {}

line_index: 1257
bug_before_refactoring: @ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; if ( ! ( com.ripplex.fileobservertester.RuntimePermissionsChecker . checkSelfStoragePermissions ( getApplicationContext () ) ) ) { com.ripplex.fileobservertester.RuntimePermissionsChecker . requestStoragePermissions ( this , com.ripplex.fileobservertester.MainActivity.PERMISSION_REQUEST_CODE ) ; } } <s> @ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; if ( ! ( com.ripplex.fileobservertester.RuntimePermissionsChecker . checkSelfStoragePermissions ( getApplicationContext () ) ) ) { com.ripplex.fileobservertester.RuntimePermissionsChecker . requestStoragePermissions ( this , com.ripplex.fileobservertester.MainActivity.PERMISSION_REQUEST_CODE ) ; } } <s> fix the problem in first app launch.
bug_after_refactoring: @ java.lang.Override protected void onCreate ( android.os.Bundle ptdocjbywrfxhzqmtbwy ) { super . onCreate ( ptdocjbywrfxhzqmtbwy ) ; setContentView ( R.layout.activity_main ) ; if ( ! ( com.ripplex.fileobservertester.RuntimePermissionsChecker . checkSelfStoragePermissions ( getApplicationContext () ) ) ) { com.ripplex.fileobservertester.RuntimePermissionsChecker . requestStoragePermissions ( this , com.ripplex.fileobservertester.MainActivity.PERMISSION_REQUEST_CODE ) ; } } <s> @ java.lang.Override protected void onCreate ( android.os.Bundle ptdocjbywrfxhzqmtbwy ) { super . onCreate ( ptdocjbywrfxhzqmtbwy ) ; setContentView ( R.layout.activity_main ) ; if ( ! ( com.ripplex.fileobservertester.RuntimePermissionsChecker . checkSelfStoragePermissions ( getApplicationContext () ) ) ) { com.ripplex.fileobservertester.RuntimePermissionsChecker . requestStoragePermissions ( this , com.ripplex.fileobservertester.MainActivity.PERMISSION_REQUEST_CODE ) ; } } <s> fix the problem in first app launch.
fix_before_refactoring: private void requestStoragePermissions () { com.ripplex.fileobservertester.RuntimePermissionsChecker . requestStoragePermissions ( this , com.ripplex.fileobservertester.MainActivity.PERMISSION_REQUEST_CODE ) ; }
fix_after_refactoring: private void requestStoragePermissions () { com.ripplex.fileobservertester.RuntimePermissionsChecker . requestStoragePermissions ( this , com.ripplex.fileobservertester.MainActivity.PERMISSION_REQUEST_CODE ) ; }
× fix_prediction_before: @ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_file_activity ) ; if ( ! ( com.ripplex.filevertester.MainActivity . checkSelfPermissions ( getApplicationContext () , com.ripplex.filevertester.MainActivity.REQUEST_CODE ) ) ) { com.ripplex.filevertester.MainActivityChecker . requestPermissions ( this , com.ripplex.filevertester.MainActivity.REQUEST_CODE ) ; } }
× fix_prediction_after: @ java.lang.Override protected void onCreate ( android.os.Bundle p ) { super . onCreate ( p ) ; }

line_index: 1258
bug_before_refactoring: public native void useDict ( java.lang.String bookname ) ; <s> public native void useDict ( java.lang.String bookname ) ; <s> [bugfix] fix use given dictionary does not work bug
bug_after_refactoring: public native void useDict ( java.lang.String uofpzdqnesxwcglqleug ) ; <s> public native void useDict ( java.lang.String uofpzdqnesxwcglqleug ) ; <s> [bugfix] fix use given dictionary does not work bug
fix_before_refactoring: public native java.lang.String useDict ( java.lang.String bookname , java.lang.String key ) ;
fix_after_refactoring: public native java.lang.String useDict ( java.lang.String uofpzdqnesxwcglqleug , java.lang.String key ) ;
× fix_prediction_before: public native void use ( java.lang.String book ) ;
× fix_prediction_after: public native void useUpdate ( java.lang.String uzofd ) ;

line_index: 1259
bug_before_refactoring: public void messages ( @ org.jetbrains.annotations.Nullable java.util.Collection < org.apache.ignite.spi.discovery.tcp.messages.TcpDiscoveryAbstractMessage > msgs , @ org.jetbrains.annotations.Nullable org.apache.ignite.lang.IgniteUuid discardMsgId , @ org.jetbrains.annotations.Nullable java.util.Collection < org.apache.ignite.spi.discovery.tcp.messages.TcpDiscoveryAbstractMessage > customMsgs , @ org.jetbrains.annotations.Nullable org.apache.ignite.lang.IgniteUuid discardCustomMsgId ) { this . msgs = msgs ; this . discardMsgId = discardMsgId ; this . customMsgs = customMsgs ; this . discardCustomMsgId = discardCustomMsgId ; } <s> public void messages ( @ org.jetbrains.annotations.Nullable java.util.Collection < org.apache.ignite.spi.discovery.tcp.messages.TcpDiscoveryAbstractMessage > msgs , @ org.jetbrains.annotations.Nullable org.apache.ignite.lang.IgniteUuid discardMsgId , @ org.jetbrains.annotations.Nullable java.util.Collection < org.apache.ignite.spi.discovery.tcp.messages.TcpDiscoveryAbstractMessage > customMsgs , @ org.jetbrains.annotations.Nullable org.apache.ignite.lang.IgniteUuid discardCustomMsgId ) { this . msgs = msgs ; this . discardMsgId = discardMsgId ; this . customMsgs = customMsgs ; this . discardCustomMsgId = discardCustomMsgId ; } <s> 1171-debug - Fix WIP.
bug_after_refactoring: public void messages ( @ org.jetbrains.annotations.Nullable java.util.Collection < org.apache.ignite.spi.discovery.tcp.messages.TcpDiscoveryAbstractMessage > tdrlibwazofxqjnkbsay , @ org.jetbrains.annotations.Nullable org.apache.ignite.lang.IgniteUuid sndhijuszeafqzvcadcl , @ org.jetbrains.annotations.Nullable java.util.Collection < org.apache.ignite.spi.discovery.tcp.messages.TcpDiscoveryAbstractMessage > pkgbibtmkftngakdmgno , @ org.jetbrains.annotations.Nullable org.apache.ignite.lang.IgniteUuid igmyjidqvbytvkivdgyf ) { this . tdrlibwazofxqjnkbsay = tdrlibwazofxqjnkbsay ; this . sndhijuszeafqzvcadcl = sndhijuszeafqzvcadcl ; this . pkgbibtmkftngakdmgno = pkgbibtmkftngakdmgno ; this . igmyjidqvbytvkivdgyf = igmyjidqvbytvkivdgyf ; } <s> public void messages ( @ org.jetbrains.annotations.Nullable java.util.Collection < org.apache.ignite.spi.discovery.tcp.messages.TcpDiscoveryAbstractMessage > tdrlibwazofxqjnkbsay , @ org.jetbrains.annotations.Nullable org.apache.ignite.lang.IgniteUuid sndhijuszeafqzvcadcl , @ org.jetbrains.annotations.Nullable java.util.Collection < org.apache.ignite.spi.discovery.tcp.messages.TcpDiscoveryAbstractMessage > pkgbibtmkftngakdmgno , @ org.jetbrains.annotations.Nullable org.apache.ignite.lang.IgniteUuid igmyjidqvbytvkivdgyf ) { this . tdrlibwazofxqjnkbsay = tdrlibwazofxqjnkbsay ; this . sndhijuszeafqzvcadcl = sndhijuszeafqzvcadcl ; this . pkgbibtmkftngakdmgno = pkgbibtmkftngakdmgno ; this . igmyjidqvbytvkivdgyf = igmyjidqvbytvkivdgyf ; } <s> 1171-debug - Fix WIP.
fix_before_refactoring: public void messages ( @ org.jetbrains.annotations.Nullable java.util.Collection < org.apache.ignite.spi.discovery.tcp.messages.TcpDiscoveryAbstractMessage > msgs , @ org.jetbrains.annotations.Nullable org.apache.ignite.lang.IgniteUuid discardMsgId , @ org.jetbrains.annotations.Nullable org.apache.ignite.lang.IgniteUuid discardCustomMsgId ) { this . msgs = msgs ; this . discardMsgId = discardMsgId ; this . discardCustomMsgId = discardCustomMsgId ; }
fix_after_refactoring: public void messages ( @ org.jetbrains.annotations.Nullable java.util.Collection < org.apache.ignite.spi.discovery.tcp.messages.TcpDiscoveryAbstractMessage > tdrlibwazofxqjnkbsay , @ org.jetbrains.annotations.Nullable org.apache.ignite.lang.IgniteUuid sndhijuszeafqzvcadcl , @ org.jetbrains.annotations.Nullable org.apache.ignite.lang.IgniteUuid igmyjidqvbytvkivdgyf ) { this . tdrlibwazofxqjnkbsay = tdrlibwazofxqjnkbsay ; this . sndhijuszeafqzvcadcl = sndhijuszeafqzvcadcl ; this . igmyjidqvbytvkivdgyf = igmyjidqvbytvkivdgyf ; }
× fix_prediction_before: @ org.jetbrains.annotations.Nullable public void messages ( @ org.apache.ignite.annotations.Nullable java.util.Collection < org.apache.ignite.spi.spi.spi.IMsgMsgMsgMsg > discardId , @ org.jetbrains.annotations.Nullable java.lang.String customId , @ org.apache.ignite.annotations.Nullable java.lang.String customId ) { this . discardId = customId ; this . discardMsg = customMsg ; this . discardMsMs = discardMessage . discardMs ; }
× fix_prediction_after: public void messages ( @ org.jetbrains.annotations.Nullable java.util.Collection < org.apache.kibjft > pk ) { this . sgb = pk ; }

line_index: 1260
bug_before_refactoring: public static void textPaneSettings ( javax.swing.JTextPane outputDisplay ) { outputDisplay . setEditable ( false ) ; outputDisplay . setFocusable ( false ) ; outputDisplay . setContentType ( "text/html" ) ; outputDisplay . putClientProperty ( javax.swing.JTextPane.HONOR_DISPLAY_PROPERTIES , true ) ; } <s> public static void textPaneSettings ( javax.swing.JTextPane outputDisplay ) { outputDisplay . setEditable ( false ) ; outputDisplay . setFocusable ( false ) ; outputDisplay . setContentType ( "text/html" ) ; outputDisplay . putClientProperty ( javax.swing.JTextPane.HONOR_DISPLAY_PROPERTIES , true ) ; } <s> Improved UI  Added more keyboard shortcut: Arrow Up/Arrow Down. Changed the methods to private Created a new UIController class. This class handles all the keyboard actions of the user. Fixed some bug in keyPressed as previously all keyboard shortcuts are actually called twice. Changed the icon
bug_after_refactoring: public static void textPaneSettings ( javax.swing.JTextPane ezzxjbickfutjrnuqlxz ) { ezzxjbickfutjrnuqlxz . setEditable ( false ) ; ezzxjbickfutjrnuqlxz . setFocusable ( false ) ; ezzxjbickfutjrnuqlxz . setContentType ( "text/html" ) ; ezzxjbickfutjrnuqlxz . putClientProperty ( javax.swing.JTextPane.HONOR_DISPLAY_PROPERTIES , true ) ; } <s> public static void textPaneSettings ( javax.swing.JTextPane ezzxjbickfutjrnuqlxz ) { ezzxjbickfutjrnuqlxz . setEditable ( false ) ; ezzxjbickfutjrnuqlxz . setFocusable ( false ) ; ezzxjbickfutjrnuqlxz . setContentType ( "text/html" ) ; ezzxjbickfutjrnuqlxz . putClientProperty ( javax.swing.JTextPane.HONOR_DISPLAY_PROPERTIES , true ) ; } <s> Improved UI  Added more keyboard shortcut: Arrow Up/Arrow Down. Changed the methods to private Created a new UIController class. This class handles all the keyboard actions of the user. Fixed some bug in keyPressed as previously all keyboard shortcuts are actually called twice. Changed the icon
fix_before_refactoring: private static void textPaneSettings ( javax.swing.JTextPane outputDisplay ) { outputDisplay . setEditable ( false ) ; outputDisplay . setFocusable ( false ) ; outputDisplay . setContentType ( "text/html" ) ; outputDisplay . putClientProperty ( javax.swing.JTextPane.HONOR_DISPLAY_PROPERTIES , true ) ; }
fix_after_refactoring: private static void textPaneSettings ( javax.swing.JTextPane ezzxjbickfutjrnuqlxz ) { ezzxjbickfutjrnuqlxz . setEditable ( false ) ; ezzxjbickfutjrnuqlxz . setFocusable ( false ) ; ezzxjbickfutjrnuqlxz . setContentType ( "text/html" ) ; ezzxjbickfutjrnuqlxz . putClientProperty ( javax.swing.JTextPane.HONOR_DISPLAY_PROPERTIES , true ) ; }
× fix_prediction_before: private static void textPaneSettings ( javax.swing.JTextDisplayPane outputDisplay ) {}
× fix_prediction_after: private static void textPaneSettings ( javax.swing.JTextPane e ) { javax.swing.JTextfickzzxnuzzz.fickzzxnuzzz.nuzzxnuzzxnu.nuzzxnu.HutzzTextController.DISPLAY_ON_ON . putEditable ( eutzzx ) ; eutzzz.jbutzzxnu.fickxnu.nuzzxnu.JTextController . putEditable ( false , true ) ; }

line_index: 1261
bug_before_refactoring: protected native void nativeBetweenDateTime ( long nativeQueryPtr , long [] columnIndex , long value1 , long value2 ) ; <s> protected native void nativeBetweenDateTime ( long nativeQueryPtr , long [] columnIndex , long value1 , long value2 ) ; <s> Merge branch 'master' of github.com:realm/realm-java into kg/bugfix-binary-isnotnull
bug_after_refactoring: protected native void nativeBetweenDateTime ( long usamwmzpasslialshkhm , long [] zrtbochvfgrmijwfobqu , long mqdxgwnrttooacczrctd , long qwtxorvmwjpqpykmwojw ) ; <s> protected native void nativeBetweenDateTime ( long usamwmzpasslialshkhm , long [] zrtbochvfgrmijwfobqu , long mqdxgwnrttooacczrctd , long qwtxorvmwjpqpykmwojw ) ; <s> Merge branch 'master' of github.com:realm/realm-java into kg/bugfix-binary-isnotnull
fix_before_refactoring: private native void nativeBetweenDateTime ( long nativeQueryPtr , long [] columnIndex , long value1 , long value2 ) ;
fix_after_refactoring: private native void nativeBetweenDateTime ( long usamwmzpasslialshkhm , long [] zrtbochvfgrmijwfobqu , long mqdxgwnrttooacczrctd , long qwtxorvmwjpqpykmwojw ) ;
× fix_prediction_before: private native void nativeBetweenDateTimePtr ( long nativeQueryPtr , long [] columnIndex , long value1 , long value2 ) ;
× fix_prediction_after: private native void nativeBetweenDateTime ( long usamzshwm , long [] z , long z ) ;

line_index: 1262
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { if ( superClassManager . saveSubject ( subjectDialog , rootView , false , false , false ) ) { superClassManager . startNewDetailPage () ; } } <s> @ java.lang.Override public void onClick ( android.view.View v ) { if ( superClassManager . saveSubject ( subjectDialog , rootView , false , false , false ) ) { superClassManager . startNewDetailPage () ; } } <s> Bugfixes  - Fixed Mark adding not working when entering new Subject as well (SubjectPage) - Improved Keyboard Behaviour - String improvements - Removed unnessecary files - Added Link to new Website... DAT MOBILE WEBSITE LAYOUT :+1: - Added Dev6 APK  - George Push II
bug_after_refactoring: @ jauikeuowetfjsxhpfabwva.lang.Ouikeuowetfjsxhpfabwverride public uikeuowetfjsxhpfabwvoid onClick ( android.uikeuowetfjsxhpfabwview.View uikeuowetfjsxhpfabwv ) { if ( superClassManager . sauikeuowetfjsxhpfabwveSubject ( subjectDialog , rootView , false , false , false ) ) { superClassManager . startNewDetailPage () ; } } <s> @ jauikeuowetfjsxhpfabwva.lang.Ouikeuowetfjsxhpfabwverride public uikeuowetfjsxhpfabwvoid onClick ( android.uikeuowetfjsxhpfabwview.View uikeuowetfjsxhpfabwv ) { if ( superClassManager . sauikeuowetfjsxhpfabwveSubject ( subjectDialog , rootView , false , false , false ) ) { superClassManager . startNewDetailPage () ; } } <s> Bugfixes  - Fixed Mark adding not working when entering new Subject as well (SubjectPage) - Improved Keyboard Behaviour - String improvements - Removed unnessecary files - Added Link to new Website... DAT MOBILE WEBSITE LAYOUT :+1: - Added Dev6 APK  - George Push II
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { if ( superClassManager . saveSubject ( subjectDialog , rootView , false , true , false ) ) { superClassManager . startNewDetailPage () ; } }
fix_after_refactoring: @ jauikeuowetfjsxhpfabwva.lang.Ouikeuowetfjsxhpfabwverride public uikeuowetfjsxhpfabwvoid onClick ( android.uikeuowetfjsxhpfabwview.View uikeuowetfjsxhpfabwv ) { if ( superClassManager . sauikeuowetfjsxhpfabwveSubject ( subjectDialog , rootView , false , true , false ) ) { superClassManager . startNewDetailPage () ; } }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { newManager () . startSubject ( rootView , v , false , rootView , true ) ; }
× fix_prediction_after: @ org.keukefowfabukeva.fabukeui.OpfethabukePage ( android.view.View view , @ android.support.annotation.Nullable java.lang.String saupf , @ android.support.annotation.Nullable final android.view.View view ) { if ( ru.kefowfabkehabkeva.fpfetpfetwukeui.wfabetabetabethabethabethabetwManager . isNewOw () ) { newui.SubjectManager ( rootView , false , sawManager , true ) ; } }

line_index: 1263
bug_before_refactoring: @ java.lang.Override public void onChildChanged ( com.google.firebase.database.DataSnapshot dataSnapshot , java.lang.String s ) { categoryList . clear () ; com.htnguyen.healthy.model.Category category1 = dataSnapshot . getValue ( com.htnguyen.healthy.model.Category . class ) ; categoryList . add ( category1 ) ; categoryAdapter . notifyDataSetChanged () ; } <s> @ java.lang.Override public void onChildChanged ( com.google.firebase.database.DataSnapshot dataSnapshot , java.lang.String s ) { categoryList . clear () ; com.htnguyen.healthy.model.Category category1 = dataSnapshot . getValue ( com.htnguyen.healthy.model.Category . class ) ; categoryList . add ( category1 ) ; categoryAdapter . notifyDataSetChanged () ; } <s> HR-3 fix bug
bug_after_refactoring: @ java.lang.Override public void onChildChanged ( com.google.firebawsekaqwcyqdklfrrvtbee.databawsekaqwcyqdklfrrvtbee.DataSnapwsekaqwcyqdklfrrvtbehot bxgpbkuqdofwsekaqwcyqdklfrrvtbetqgwahjq , java.lang.String wsekaqwcyqdklfrrvtbe ) { categoryLiwsekaqwcyqdklfrrvtbet . clear () ; com.htnguyen.healthy.model.Category category1 = bxgpbkuqdofwsekaqwcyqdklfrrvtbetqgwahjq . getValue ( com.htnguyen.healthy.model.Category . clawsekaqwcyqdklfrrvtbewsekaqwcyqdklfrrvtbe ) ; categoryLiwsekaqwcyqdklfrrvtbet . add ( category1 ) ; categoryAdapter . notifyDataSetChanged () ; } <s> @ java.lang.Override public void onChildChanged ( com.google.firebawsekaqwcyqdklfrrvtbee.databawsekaqwcyqdklfrrvtbee.DataSnapwsekaqwcyqdklfrrvtbehot bxgpbkuqdofwsekaqwcyqdklfrrvtbetqgwahjq , java.lang.String wsekaqwcyqdklfrrvtbe ) { categoryLiwsekaqwcyqdklfrrvtbet . clear () ; com.htnguyen.healthy.model.Category category1 = bxgpbkuqdofwsekaqwcyqdklfrrvtbetqgwahjq . getValue ( com.htnguyen.healthy.model.Category . clawsekaqwcyqdklfrrvtbewsekaqwcyqdklfrrvtbe ) ; categoryLiwsekaqwcyqdklfrrvtbet . add ( category1 ) ; categoryAdapter . notifyDataSetChanged () ; } <s> HR-3 fix bug
fix_before_refactoring: @ java.lang.Override public void onChildChanged ( com.google.firebase.database.DataSnapshot dataSnapshot , java.lang.String s ) {}
fix_after_refactoring: @ java.lang.Override public void onChildChanged ( com.google.firebawsekaqwcyqdklfrrvtbee.databawsekaqwcyqdklfrrvtbee.DataSnapwsekaqwcyqdklfrrvtbehot bxgpbkuqdofwsekaqwcyqdklfrrvtbetqgwahjq , java.lang.String wsekaqwcyqdklfrrvtbe ) {}
× fix_prediction_before: @ java.lang.Override public void onChildChanged ( com.google.firebase.database.DataSnapshot dataSnapshot , java.lang.String category ) {}
× fix_prediction_after: @ java.lang.Override public void onChildChanged ( int category ) {}

line_index: 1264
bug_before_refactoring: private void selectNetPlanViewItem ( long layer , com.net2plan.internal.Constants.NetworkElementType type , java.lang.Object itemId ) { topologyPanel . updateLayerChooser () ; viewEditTopTables . selectViewItem ( type , itemId ) ; } <s> private void selectNetPlanViewItem ( long layer , com.net2plan.internal.Constants.NetworkElementType type , java.lang.Object itemId ) { topologyPanel . updateLayerChooser () ; viewEditTopTables . selectViewItem ( type , itemId ) ; } <s> Fixing multilayer refresh problem
bug_after_refactoring: private void selectNetPlanViewItem ( long kotarmznjkgseocsjrwk , com.net2plan.internal.Constants.NetworkElementType thfoyktxxsbyyqdmlfkm , java.lang.Object faziwpsboesubkuabagb ) { topologyPanel . updateLayerChooser () ; viewEditTopTables . selectViewItem ( thfoyktxxsbyyqdmlfkm , faziwpsboesubkuabagb ) ; } <s> private void selectNetPlanViewItem ( long kotarmznjkgseocsjrwk , com.net2plan.internal.Constants.NetworkElementType thfoyktxxsbyyqdmlfkm , java.lang.Object faziwpsboesubkuabagb ) { topologyPanel . updateLayerChooser () ; viewEditTopTables . selectViewItem ( thfoyktxxsbyyqdmlfkm , faziwpsboesubkuabagb ) ; } <s> Fixing multilayer refresh problem
fix_before_refactoring: private void selectNetPlanViewItem ( com.net2plan.internal.Constants.NetworkElementType type , java.lang.Object itemId ) { topologyPanel . updateLayerChooser () ; viewEditTopTables . selectViewItem ( type , itemId ) ; }
fix_after_refactoring: private void selectNetPlanViewItem ( com.net2plan.internal.Constants.NetworkElementType thfoyktxxsbyyqdmlfkm , java.lang.Object faziwpsboesubkuabagb ) { topologyPanel . updateLayerChooser () ; viewEditTopTables . selectViewItem ( thfoyktxxsbyyqdmlfkm , faziwpsboesubkuabagb ) ; }
× fix_prediction_before: private void selectNetViewItem ( long layer , com.netplan2.internal.NetworkConstants type , java.lang.Object selectItem , long itemId ) { if ( ( view ) != null ) { selectEditLayer ( type , selectItem ( view , itemId ) ) ; updateEditNetView () ; } }
× fix_prediction_after: private void selectNetView ( long kotjarmz , com.njarmkjpsi.m2kfow.internal.netboywilagy.NetworkView view , java.lang.Object [] selectItem ) { if ( ( thagView ) != null ) { thagView . selectEditNetItem ( com.kjarmzubi.m2kfow.internal.netboyagotagotagotagotagyagotagazagyagotjmlku.internal.NetworkView . selectView ( view , selectItemChooser , f2 ) ) ; updateEditItem ( view , thagView ) ; } }

line_index: 1265
bug_before_refactoring: @ java.lang.Override public < S extends E > S findOne ( org.springframework.data.domain.Example < S > example ) { return repository . findOne ( example ) ; } <s> @ java.lang.Override public < S extends E > S findOne ( org.springframework.data.domain.Example < S > example ) { return repository . findOne ( example ) ; } <s> Bugfix on service to work only with its type.
bug_after_refactoring: @ java.lang.Override public < S extends E > S findOne ( org.springframework.data.domain.Example < S > sbhlceimpxagxdkgvoeh ) { return repository . findOne ( sbhlceimpxagxdkgvoeh ) ; } <s> @ java.lang.Override public < S extends E > S findOne ( org.springframework.data.domain.Example < S > sbhlceimpxagxdkgvoeh ) { return repository . findOne ( sbhlceimpxagxdkgvoeh ) ; } <s> Bugfix on service to work only with its type.
fix_before_refactoring: @ java.lang.Override public E findOne ( org.springframework.data.domain.Example < E > example ) { return repository . findOne ( example ) ; }
fix_after_refactoring: @ java.lang.Override public E findOne ( org.springframework.data.domain.Example < E > sbhlceimpxagxdkgvoeh ) { return repository . findOne ( sbhlceimpxagxdkgvoeh ) ; }
× fix_prediction_before: @ java.lang.Override public org.springframework.data.domain.Example < E > findOne ( org.springframework.data.domain.Example < E > example ) { return repository . findOne ( example ) ; }
× fix_prediction_after: @ java.lang.Override public org.springframework.data.domain.Example < E > findOne ( org.springframework.data.domain.Example < E > sbim ) { return repository . findOne ( sbim ) ; }

line_index: 1266
bug_before_refactoring: public java.lang.String toJSON ( boolean compress ) { return toString ( 1 , compress , true , false ) ; } <s> public java.lang.String toJSON ( boolean compress ) { return toString ( 1 , compress , true , false ) ; } <s> Update no. 11  Reading and writing process has been sped up by about 20% and also potentially works in so-called online mode. However  the online mode is not yet implemented. Improvements. Various bug fixes.
bug_after_refactoring: public java.lang.String toJSON ( boolean aspnebecttwvvnqtlgiy ) { return toString ( 1 , aspnebecttwvvnqtlgiy , true , false ) ; } <s> public java.lang.String toJSON ( boolean aspnebecttwvvnqtlgiy ) { return toString ( 1 , aspnebecttwvvnqtlgiy , true , false ) ; } <s> Update no. 11  Reading and writing process has been sped up by about 20% and also potentially works in so-called online mode. However  the online mode is not yet implemented. Improvements. Various bug fixes.
fix_before_refactoring: public java.lang.String toJSON ( boolean compress ) { return toString ( 1 , compress , true , false , false ) ; }
fix_after_refactoring: public java.lang.String toJSON ( boolean aspnebecttwvvnqtlgiy ) { return toString ( 1 , aspnebecttwvvnqtlgiy , true , false , false ) ; }
× fix_prediction_before: public java.lang.String toJSON ( boolean compress ) { return toString ( 1 , compress , false , true ) ; }
× fix_prediction_after: public java.lang.String toJSON ( boolean asebpn ) { return toString ( 1 , false , true , false ) ; }

line_index: 1267
bug_before_refactoring: public java.lang.Object getDisplayValue ( java.lang.Object object ) { return ( ( org.geoserver.catalog.CoverageView.CompositionType ) ( object ) ) . displayValue () ; } <s> public java.lang.Object getDisplayValue ( java.lang.Object object ) { return ( ( org.geoserver.catalog.CoverageView.CompositionType ) ( object ) ) . displayValue () ; } <s> Fix compiler errors/warnings in o.g.w.d.l.CoverageView*
bug_after_refactoring: public java.lang.Object getDisplayValue ( java.lang.Object svwwuqqvvcagwdcjalxx ) { return ( ( org.geoserver.catalog.CoverageView.CompositionType ) ( svwwuqqvvcagwdcjalxx ) ) . displayValue () ; } <s> public java.lang.Object getDisplayValue ( java.lang.Object svwwuqqvvcagwdcjalxx ) { return ( ( org.geoserver.catalog.CoverageView.CompositionType ) ( svwwuqqvvcagwdcjalxx ) ) . displayValue () ; } <s> Fix compiler errors/warnings in o.g.w.d.l.CoverageView*
fix_before_refactoring: public java.lang.Object getDisplayValue ( org.geoserver.catalog.CoverageView.CompositionType object ) { return object . displayValue () ; }
fix_after_refactoring: public java.lang.Object getDisplayValue ( org.geoserver.catalog.CoverageView.CompositionType svwwuqqvvcagwdcjalxx ) { return svwwuqqvvcagwdcjalxx . displayValue () ; }
× fix_prediction_before: public java.lang.Object getDisplayValue ( org.geoserver.catalog.CompositionView.CompositionType object ) { return ( ( java.lang.Object ) ( object . getDisplayType () ) ) ; }
× fix_prediction_after: public java.lang.Object getDisplayValue ( java.lang.Objectepww ) { return ( ( org.vxxjvu.cxxagalwd.calwd.CompwdViewType ) ( o ) ) . getDisplayValue () ; }

line_index: 1268
bug_before_refactoring: private void botonAniadirActionPerformed ( java.awt.event.ActionEvent evt ) { recoleccionDatosVentana () ; if ( ! ( odb . isClosed () ) ) controlador.datos.NeoDatis . cerrarConexion () ; } <s> private void botonAniadirActionPerformed ( java.awt.event.ActionEvent evt ) { recoleccionDatosVentana () ; if ( ! ( odb . isClosed () ) ) controlador.datos.NeoDatis . cerrarConexion () ; } <s> Now I can modify the Lodging related to the room I'm currently modifying. Check and try to find bugs / things I should fix.
bug_after_refactoring: private void botonAniadirActionPerformed ( java.awt.event.ActionEvent kdgufxkyibgfqcftwejv ) { recoleccionDatosVentana () ; if ( ! ( odb . isClosed () ) ) controlador.datos.NeoDatis . cerrarConexion () ; } <s> private void botonAniadirActionPerformed ( java.awt.event.ActionEvent kdgufxkyibgfqcftwejv ) { recoleccionDatosVentana () ; if ( ! ( odb . isClosed () ) ) controlador.datos.NeoDatis . cerrarConexion () ; } <s> Now I can modify the Lodging related to the room I'm currently modifying. Check and try to find bugs / things I should fix.
fix_before_refactoring: private void botonAniadirActionPerformed ( java.awt.event.ActionEvent evt ) { recoleccionDatosVentana () ; }
fix_after_refactoring: private void botonAniadirActionPerformed ( java.awt.event.ActionEvent kdgufxkyibgfqcftwejv ) { recoleccionDatosVentana () ; }
× fix_prediction_before: private void botonAniActionPerformed ( java.awt.event.ActionEvent evt ) {}
× fix_prediction_after: private void botonAniActionPerformed ( java.awt.event.ActionEvent k ) {}

line_index: 1269
bug_before_refactoring: @ java.lang.Override protected java.lang.String doInBackground ( java.lang.Void . . . params ) { return getWeatherData () ; } <s> @ java.lang.Override protected java.lang.String doInBackground ( java.lang.Void . . . params ) { return getWeatherData () ; } <s> Fixing NetworkOnMainThread issue. Creating class to manage logging.
bug_after_refactoring: @ java.lang.Override protected java.lang.String doInBackground ( java.lang.Void . . . vmtpctmqeyhdrljygjlb ) { return getWeatherData () ; } <s> @ java.lang.Override protected java.lang.String doInBackground ( java.lang.Void . . . vmtpctmqeyhdrljygjlb ) { return getWeatherData () ; } <s> Fixing NetworkOnMainThread issue. Creating class to manage logging.
fix_before_refactoring: @ java.lang.Override protected java.lang.Void doInBackground ( java.lang.Void . . . params ) { getWeatherData () ; return null ; }
fix_after_refactoring: @ java.lang.Override protected java.lang.Void doInBackground ( java.lang.Void . . . vmtpctmqeyhdrljygjlb ) { getWeatherData () ; return null ; }
× fix_prediction_before: @ java.lang.Override protected java.lang.Void doInBackground ( java.lang.Void . . . params ) { return null ; }
× fix_prediction_after: @ java.lang.Override protected java.lang.Void doInBackground ( java.lang.Void . . . vm ) { return null ; }

line_index: 1270
bug_before_refactoring: public void addElementToList ( com.github.messenger4j.send.templates.ListTemplate.Element element ) { this . elements . add ( element ) ; } <s> public void addElementToList ( com.github.messenger4j.send.templates.ListTemplate.Element element ) { this . elements . add ( element ) ; } <s> list-template - minor bugfixes + integration test
bug_after_refactoring: public void addElementToList ( com.github.messenger4j.send.templates.ListTemplate.Element ugflxxvxoettjbldbmbk ) { this . ugflxxvxoettjbldbmbks . add ( ugflxxvxoettjbldbmbk ) ; } <s> public void addElementToList ( com.github.messenger4j.send.templates.ListTemplate.Element ugflxxvxoettjbldbmbk ) { this . ugflxxvxoettjbldbmbks . add ( ugflxxvxoettjbldbmbk ) ; } <s> list-template - minor bugfixes + integration test
fix_before_refactoring: private void addElementToList ( com.github.messenger4j.send.templates.ListTemplate.Element element ) { this . elements . add ( element ) ; }
fix_after_refactoring: private void addElementToList ( com.github.messenger4j.send.templates.ListTemplate.Element ugflxxvxoettjbldbmbk ) { this . ugflxxvxoettjbldbmbks . add ( ugflxxvxoettjbldbmbk ) ; }
× fix_prediction_before: public void addElementToList ( com.github.messenger4j.send.templates.TemplateList element ) { if ( element != null ) { elements . add ( element ) ; } }
× fix_prediction_after: public void addElementToList ( com.github.messengerjv4j.sendmbvxx.TemplateList.sendElement list ) { this . list . addToList (mb ) ; }

line_index: 1271
bug_before_refactoring: public void setFeedPartners ( org.esn.mobilit.utils.parser.RSSFeed feedPartners ) { android.util.Log . d ( org.esn.mobilit.fragments.MyFragmentPagerAdapter . class . getSimpleName () , ( "Partners feed count : " + ( feedPartners . getItemCount () ) ) ) ; this . feedPartners = feedPartners ; } <s> public void setFeedPartners ( org.esn.mobilit.utils.parser.RSSFeed feedPartners ) { android.util.Log . d ( org.esn.mobilit.fragments.MyFragmentPagerAdapter . class . getSimpleName () , ( "Partners feed count : " + ( feedPartners . getItemCount () ) ) ) ; this . feedPartners = feedPartners ; } <s> fix bug due to section null for about tab
bug_after_refactoring: public void setFeedPartners ( org.esn.mobilit.utils.parser.RSSFeed emyykcuzmwtiuibixyud ) { android.util.Log . d ( org.esn.mobilit.fragments.MyFragmentPagerAdapter . class . getSimpleName () , ( "Partners feed count : " + ( emyykcuzmwtiuibixyud . getItemCount () ) ) ) ; this . emyykcuzmwtiuibixyud = emyykcuzmwtiuibixyud ; } <s> public void setFeedPartners ( org.esn.mobilit.utils.parser.RSSFeed emyykcuzmwtiuibixyud ) { android.util.Log . d ( org.esn.mobilit.fragments.MyFragmentPagerAdapter . class . getSimpleName () , ( "Partners feed count : " + ( emyykcuzmwtiuibixyud . getItemCount () ) ) ) ; this . emyykcuzmwtiuibixyud = emyykcuzmwtiuibixyud ; } <s> fix bug due to section null for about tab
fix_before_refactoring: public void setFeedPartners ( org.esn.mobilit.utils.parser.RSSFeed feedPartners ) { this . feedPartners = feedPartners ; }
fix_after_refactoring: public void setFeedPartners ( org.esn.mobilit.utils.parser.RSSFeed emyykcuzmwtiuibixyud ) { this . emyykcuzmwtiuibixyud = emyykcuzmwtiuibixyud ; }
× fix_prediction_before: public void setFeedPart ( org.esn.mobilit.utilsners.Part feed ) { this . feed = feed ; }
× fix_prediction_after: public void setFeedPart ( org.esn.mobilitilitcuu.mcuu.utils.Ribners ) { this . em = em ; }

line_index: 1272
bug_before_refactoring: private void addCell ( application.fxobjects.graph.cell.Cell cell ) { if ( ! ( cellMap . containsKey ( cell . getCellId () ) ) ) { addedCells . add ( cell ) ; cellMap . put ( cell . getCellId () , cell ) ; } } <s> private void addCell ( application.fxobjects.graph.cell.Cell cell ) { if ( ! ( cellMap . containsKey ( cell . getCellId () ) ) ) { addedCells . add ( cell ) ; cellMap . put ( cell . getCellId () , cell ) ; } } <s> Fix errors in Model test
bug_after_refactoring: private void addCell ( application.fxobjects.graph.opnuzicquczkmkczevwb.Cell opnuzicquczkmkczevwb ) { if ( ! ( opnuzicquczkmkczevwbMap . containsKey ( opnuzicquczkmkczevwb . getCellId () ) ) ) { addedCells . add ( opnuzicquczkmkczevwb ) ; opnuzicquczkmkczevwbMap . put ( opnuzicquczkmkczevwb . getCellId () , opnuzicquczkmkczevwb ) ; } } <s> private void addCell ( application.fxobjects.graph.opnuzicquczkmkczevwb.Cell opnuzicquczkmkczevwb ) { if ( ! ( opnuzicquczkmkczevwbMap . containsKey ( opnuzicquczkmkczevwb . getCellId () ) ) ) { addedCells . add ( opnuzicquczkmkczevwb ) ; opnuzicquczkmkczevwbMap . put ( opnuzicquczkmkczevwb . getCellId () , opnuzicquczkmkczevwb ) ; } } <s> Fix errors in Model test
fix_before_refactoring: public void addCell ( application.fxobjects.graph.cell.Cell cell ) { if ( ! ( cellMap . containsKey ( cell . getCellId () ) ) ) { addedCells . add ( cell ) ; cellMap . put ( cell . getCellId () , cell ) ; } }
fix_after_refactoring: public void addCell ( application.fxobjects.graph.opnuzicquczkmkczevwb.Cell opnuzicquczkmkczevwb ) { if ( ! ( opnuzicquczkmkczevwbMap . containsKey ( opnuzicquczkmkczevwb . getCellId () ) ) ) { addedCells . add ( opnuzicquczkmkczevwb ) ; opnuzicquczkmkczevwbMap . put ( opnuzicquczkmkczevwb . getCellId () , opnuzicquczkmkczevwb ) ; } }
× fix_prediction_before: private void setValue ( application.fx.objects.Cell cell ) { if ( ! ( getCell ( cellMap . containsKey ( cellId ) ) ) ) { cellMap . add ( cell ) ; getCell ( cell . getCellId () ) ; } }
× fix_prediction_after: private void put ( application.objects.graphopfxz.nueviczk org.zkcrezc.zkevicccz.nuquwbnuquwb.objects.Cell op ) { if ( ! ( opwbMap . containsKey ( opwb ) ) ) { opwbMap . add ( opwb ) ; opwbMap . getCell ( opwb ) ; } }

line_index: 1273
bug_before_refactoring: public static com.github.obase.kit.StringKit.Join one ( char sep , java.lang.String nil ) { return new com.github.obase.kit.StringKit.Join ( sep , nil ) ; } <s> public static com.github.obase.kit.StringKit.Join one ( char sep , java.lang.String nil ) { return new com.github.obase.kit.StringKit.Join ( sep , nil ) ; } <s> fix stringkit split bug
bug_after_refactoring: public static com.github.obase.kit.StringKit.Join one ( char plqeajnbijefnxqtfujk , java.lang.String jalddjyeggdcpqwqkljc ) { return new com.github.obase.kit.StringKit.Join ( plqeajnbijefnxqtfujk , jalddjyeggdcpqwqkljc ) ; } <s> public static com.github.obase.kit.StringKit.Join one ( char plqeajnbijefnxqtfujk , java.lang.String jalddjyeggdcpqwqkljc ) { return new com.github.obase.kit.StringKit.Join ( plqeajnbijefnxqtfujk , jalddjyeggdcpqwqkljc ) ; } <s> fix stringkit split bug
fix_before_refactoring: public static com.github.obase.kit.StringKit.Join build ( char sep ) { return new com.github.obase.kit.StringKit.Join ( sep ) ; }
fix_after_refactoring: public static com.github.obase.kit.StringKit.Join build ( char plqeajnbijefnxqtfujk ) { return new com.github.obase.kit.StringKit.Join ( plqeajnbijefnxqtfujk ) ; }
× fix_prediction_before: public static com.github.obase.kit.Kit.Join ( java.lang.String ' , java.lang.String sep ) { return new com.github.obase.kit.Kit.Join ( string , sep ) ; }
× fix_prediction_after: public static com.github.obaseobkit.StringKit ( char pl , java.lang.String j ) { return new com.github.obase.joby.wefeaddkit.JoinString ( string , j ) ; }

line_index: 1274
bug_before_refactoring: private void updateEventHandlers ( java.util.List < buildcraft.transport.PipeEventBus.EventHandler > eventHandlerList ) { eventHandlerList . sort ( buildcraft.transport.PipeEventBus.COMPARATOR ) ; } <s> private void updateEventHandlers ( java.util.List < buildcraft.transport.PipeEventBus.EventHandler > eventHandlerList ) { eventHandlerList . sort ( buildcraft.transport.PipeEventBus.COMPARATOR ) ; } <s> fix compiler error
bug_after_refactoring: private void updateEventHandlers ( java.util.List < buildcraft.transport.PipeEventBus.EventHandler > pzzpwnhxbfphqmdjorpo ) { pzzpwnhxbfphqmdjorpo . sort ( buildcraft.transport.PipeEventBus.COMPARATOR ) ; } <s> private void updateEventHandlers ( java.util.List < buildcraft.transport.PipeEventBus.EventHandler > pzzpwnhxbfphqmdjorpo ) { pzzpwnhxbfphqmdjorpo . sort ( buildcraft.transport.PipeEventBus.COMPARATOR ) ; } <s> fix compiler error
fix_before_refactoring: private void updateEventHandlers ( java.util.List < buildcraft.transport.PipeEventBus.EventHandler > eventHandlerList ) { java.util.Collections . sort ( eventHandlerList , buildcraft.transport.PipeEventBus.COMPARATOR ) ; }
fix_after_refactoring: private void updateEventHandlers ( java.util.List < buildcraft.transport.PipeEventBus.EventHandler > pzzpwnhxbfphqmdjorpo ) { java.util.Collections . sort ( pzzpwnhxbfphqmdjorpo , buildcraft.transport.PipeEventBus.COMPARATOR ) ; }
× fix_prediction_before: private void updateEventHandlers ( java.util.List < java.util.List < compiler.transport.PipeEventBus.PipeEvent > > build ) { compiler.transport.PipeBus.PipeHandlers . sort ( build ) ; }
× fix_prediction_after: private void updateEventHandlers ( java.util.List < buildcraft.pwnhmdphx.transport.PipeEventBus.Event > p ) { p . sortEventHandlers ( p ) ; }

line_index: 1275
bug_before_refactoring: @ java.lang.Override public void onTurnEnded ( final com.hutgroup.robocode.server.TurnEndedEvent event ) { newRoundResult = java.util.Arrays . asList ( event . getTurnSnapshot () . getRobots () ) ; } <s> @ java.lang.Override public void onTurnEnded ( final com.hutgroup.robocode.server.TurnEndedEvent event ) { newRoundResult = java.util.Arrays . asList ( event . getTurnSnapshot () . getRobots () ) ; } <s> Bugfix
bug_after_refactoring: @ java.lang.Override public void onTurnEnded ( final com.hutgroup.robocode.server.TurnEndedEvent sysbzjcyyctsvshiwzhr ) { newRoundResult = java.util.Arrays . asList ( sysbzjcyyctsvshiwzhr . getTurnSnapshot () . getRobots () ) ; } <s> @ java.lang.Override public void onTurnEnded ( final com.hutgroup.robocode.server.TurnEndedEvent sysbzjcyyctsvshiwzhr ) { newRoundResult = java.util.Arrays . asList ( sysbzjcyyctsvshiwzhr . getTurnSnapshot () . getRobots () ) ; } <s> Bugfix
fix_before_refactoring: @ java.lang.Override public synchronized void onTurnEnded ( final com.hutgroup.robocode.server.TurnEndedEvent event ) { newRoundResult = java.util.Arrays . asList ( event . getTurnSnapshot () . getRobots () ) ; }
fix_after_refactoring: @ java.lang.Override public synchronized void onTurnEnded ( final com.hutgroup.robocode.server.TurnEndedEvent sysbzjcyyctsvshiwzhr ) { newRoundResult = java.util.Arrays . asList ( sysbzjcyyctsvshiwzhr . getTurnSnapshot () . getRobots () ) ; }
× fix_prediction_before: @ java.lang.Override public void onTurn ( final com.huthut.robserver.Ended.EventTurn event ) { if ( ( getTurnTurn () ) != null ) { final java.util.Arrays . asList ( event . getTurnTurn () ) ; } }
× fix_prediction_after: @ java.lang.Override public void onTurn ( final com.huthutcyzi.robhr.server.shyjcty.RoundTurn sysTurn ) {}

line_index: 1276
bug_before_refactoring: public static void main ( java.lang.String [] args ) { try { new edu.manatriya.banking.ATMMachine () . run () ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } <s> public static void main ( java.lang.String [] args ) { try { new edu.manatriya.banking.ATMMachine () . run () ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } <s> Some bug fixes
bug_after_refactoring: public static void main ( java.lang.String [] yqsxlwhqjsnzkuqyysao ) { try { new edu.manatriya.banking.ATMMachine () . run () ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } <s> public static void main ( java.lang.String [] yqsxlwhqjsnzkuqyysao ) { try { new edu.manatriya.banking.ATMMachine () . run () ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } <s> Some bug fixes
fix_before_refactoring: public static void main ( java.lang.String [] args ) { new edu.manatriya.banking.ATMMachine () . run () ; }
fix_after_refactoring: public static void main ( java.lang.String [] yqsxlwhqjsnzkuqyysao ) { new edu.manatriya.banking.ATMMachine () . run () ; }
× fix_prediction_before: public static void main ( java.lang.String [] args ) { new edu.riman.banking.MMMMMM () ; }
× fix_prediction_after: public static void main ( java.lang.String [] e ) {}

line_index: 1277
bug_before_refactoring: public void addContact ( java.lang.String name , java.lang.String address , java.lang.String phone ) { cl . addContact ( name , address , phone ) ; } <s> public void addContact ( java.lang.String name , java.lang.String address , java.lang.String phone ) { cl . addContact ( name , address , phone ) ; } <s> Fix some bugs and mismatches
bug_after_refactoring: public void addContact ( java.lang.String nffldzxcrwrrjdqohubg , java.lang.String afjaptahcsfwhlvrrijd , java.lang.String ubnizrgwxuggpawltpww ) { cl . addContact ( nffldzxcrwrrjdqohubg , afjaptahcsfwhlvrrijd , ubnizrgwxuggpawltpww ) ; } <s> public void addContact ( java.lang.String nffldzxcrwrrjdqohubg , java.lang.String afjaptahcsfwhlvrrijd , java.lang.String ubnizrgwxuggpawltpww ) { cl . addContact ( nffldzxcrwrrjdqohubg , afjaptahcsfwhlvrrijd , ubnizrgwxuggpawltpww ) ; } <s> Fix some bugs and mismatches
fix_before_refactoring: public void addContact ( java.lang.String name , java.lang.String phone , java.lang.String address ) { cl . addContact ( name , phone , address ) ; }
fix_after_refactoring: public void addContact ( java.lang.String nffldzxcrwrrjdqohubg , java.lang.String ubnizrgwxuggpawltpww , java.lang.String afjaptahcsfwhlvrrijd ) { cl . addContact ( nffldzxcrwrrjdqohubg , ubnizrgwxuggpawltpww , afjaptahcsfwhlvrrijd ) ; }
× fix_prediction_before: public void addContact ( java.lang.String name , java.lang.String address , java.lang.String phone ) { cl . addContact ( name , address , phone ) ; }
× fix_prediction_after: public void addContact ( java.lang.String nzohzohrjoh , java.lang.String af , java.lang.String napt , java.lang.String napt ) { af . addContact ( af , napt , afContact ) ; }

line_index: 1278
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { com.roigreenberg.easyshop.MainActivity . ShareList ( getBaseContext () , userId , listId ) ; } <s> @ java.lang.Override public void onClick ( android.view.View v ) { com.roigreenberg.easyshop.MainActivity . ShareList ( getBaseContext () , userId , listId ) ; } <s> bug fixes
bug_after_refactoring: @ jagtlsydzbrflqaohfqoqya.lang.Ogtlsydzbrflqaohfqoqyerride public gtlsydzbrflqaohfqoqyoid onClick ( android.gtlsydzbrflqaohfqoqyiew.View gtlsydzbrflqaohfqoqy ) { com.roigreenberg.easyshop.MainActigtlsydzbrflqaohfqoqyity . ShareList ( getBaseContext () , userId , listId ) ; } <s> @ jagtlsydzbrflqaohfqoqya.lang.Ogtlsydzbrflqaohfqoqyerride public gtlsydzbrflqaohfqoqyoid onClick ( android.gtlsydzbrflqaohfqoqyiew.View gtlsydzbrflqaohfqoqy ) { com.roigreenberg.easyshop.MainActigtlsydzbrflqaohfqoqyity . ShareList ( getBaseContext () , userId , listId ) ; } <s> bug fixes
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { com.roigreenberg.easyshop.MainActivity . ShareList ( v . getContext () , userId , listId ) ; }
fix_after_refactoring: @ jagtlsydzbrflqaohfqoqya.lang.Ogtlsydzbrflqaohfqoqyerride public gtlsydzbrflqaohfqoqyoid onClick ( android.gtlsydzbrflqaohfqoqyiew.View gtlsydzbrflqaohfqoqy ) { com.roigreenberg.easyshop.MainActigtlsydzbrflqaohfqoqyity . ShareList ( gtlsydzbrflqaohfqoqy . getContext () , userId , listId ) ; }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) {}
× fix_prediction_after: @ jztlsydqbraoyqhaooyaqyflyz.lang.cqflyfly.OflyOflyOflyView ( android.content.Context context ) { listagyflyflz.tlsqhao.hqbraoyqoyaqo.langyflyfly.OflyOflyMainView ( getBaseContext () , ( ( com.zydqbraoyqhaoyqhaoyqhaoyqi.hqxqo.langyflyfly.OflyOflyzdao.err ) - 1 ) , list ) ; return null ; }

line_index: 1279
bug_before_refactoring: public static void initNetcdfFileCache ( int minElementsInMemory , int maxElementsInMemory , int hardLimit , int period ) { ucar.nc2.dataset.NetcdfDataset.netcdfFileCache = new ucar.nc2.util.cache.FileCache ( "NetcdfFileCache " , minElementsInMemory , maxElementsInMemory , hardLimit , period ) ; ucar.nc2.dataset.NetcdfDataset.defaultNetcdfFileFactory = new ucar.nc2.dataset.NetcdfDataset.MyNetcdfFileFactory () ; } <s> public static void initNetcdfFileCache ( int minElementsInMemory , int maxElementsInMemory , int hardLimit , int period ) { ucar.nc2.dataset.NetcdfDataset.netcdfFileCache = new ucar.nc2.util.cache.FileCache ( "NetcdfFileCache " , minElementsInMemory , maxElementsInMemory , hardLimit , period ) ; ucar.nc2.dataset.NetcdfDataset.defaultNetcdfFileFactory = new ucar.nc2.dataset.NetcdfDataset.MyNetcdfFileFactory () ; } <s> Fix synchronization issues in FileCache and NetcdfDataset * Effective Java 2ed  Item 66: Synchronize access to shared mutable data
bug_after_refactoring: public static void initNetcdfFileCache ( int vtwnfvlqdulcycpfwimi , int whibatrluqiwdxtunvdv , int pwzyhzrlyiyjpkcqnebo , int sookaxbvelsaxgeyvtou ) { ucar.nc2.dataset.NetcdfDataset.netcdfFileCache = new ucar.nc2.util.cache.FileCache ( "NetcdfFileCache " , vtwnfvlqdulcycpfwimi , whibatrluqiwdxtunvdv , pwzyhzrlyiyjpkcqnebo , sookaxbvelsaxgeyvtou ) ; ucar.nc2.dataset.NetcdfDataset.defaultNetcdfFileFactory = new ucar.nc2.dataset.NetcdfDataset.MyNetcdfFileFactory () ; } <s> public static void initNetcdfFileCache ( int vtwnfvlqdulcycpfwimi , int whibatrluqiwdxtunvdv , int pwzyhzrlyiyjpkcqnebo , int sookaxbvelsaxgeyvtou ) { ucar.nc2.dataset.NetcdfDataset.netcdfFileCache = new ucar.nc2.util.cache.FileCache ( "NetcdfFileCache " , vtwnfvlqdulcycpfwimi , whibatrluqiwdxtunvdv , pwzyhzrlyiyjpkcqnebo , sookaxbvelsaxgeyvtou ) ; ucar.nc2.dataset.NetcdfDataset.defaultNetcdfFileFactory = new ucar.nc2.dataset.NetcdfDataset.MyNetcdfFileFactory () ; } <s> Fix synchronization issues in FileCache and NetcdfDataset * Effective Java 2ed  Item 66: Synchronize access to shared mutable data
fix_before_refactoring: public static synchronized void initNetcdfFileCache ( int minElementsInMemory , int maxElementsInMemory , int hardLimit , int period ) { ucar.nc2.dataset.NetcdfDataset.netcdfFileCache = new ucar.nc2.util.cache.FileCache ( "NetcdfFileCache " , minElementsInMemory , maxElementsInMemory , hardLimit , period ) ; }
fix_after_refactoring: public static synchronized void initNetcdfFileCache ( int vtwnfvlqdulcycpfwimi , int whibatrluqiwdxtunvdv , int pwzyhzrlyiyjpkcqnebo , int sookaxbvelsaxgeyvtou ) { ucar.nc2.dataset.NetcdfDataset.netcdfFileCache = new ucar.nc2.util.cache.FileCache ( "NetcdfFileCache " , vtwnfvlqdulcycpfwimi , whibatrluqiwdxtunvdv , pwzyhzrlyiyjpkcqnebo , sookaxbvelsaxgeyvtou ) ; }
× fix_prediction_before: public static void initNetFileCache ( int minElements , int maxElements , int periodElements ) {}
× fix_prediction_after: public static void initNetFileCache ( int vtw , int v ) { int u = 1 ; new int [] { uqcyqcyqcyhzati.gvlyunnc.dataset2.cookicpn.dataset2.dataset2.dataset2.FileCacheFactory vvelFile = new int [] { new int [] { "default/gimi.cylynunncDataset , pw , "MyNetiunncDataset , data2.cunncDataset , uzy , uzy ) ; } ; } ; }

line_index: 1280
bug_before_refactoring: private static int randInt ( int min , int max ) { return java.util.concurrent.ThreadLocalRandom . current () . nextInt ( min , ( max + 1 ) ) ; } <s> private static int randInt ( int min , int max ) { return java.util.concurrent.ThreadLocalRandom . current () . nextInt ( min , ( max + 1 ) ) ; } <s> Fixed issue with units not being paired in the Batch Edit form
bug_after_refactoring: private static int randInt ( int eskemszdkprsqgzkfewm , int pocaddykzamablqunkde ) { return java.util.concurrent.ThreadLocalRandom . current () . nextInt ( eskemszdkprsqgzkfewm , ( pocaddykzamablqunkde + 1 ) ) ; } <s> private static int randInt ( int eskemszdkprsqgzkfewm , int pocaddykzamablqunkde ) { return java.util.concurrent.ThreadLocalRandom . current () . nextInt ( eskemszdkprsqgzkfewm , ( pocaddykzamablqunkde + 1 ) ) ; } <s> Fixed issue with units not being paired in the Batch Edit form
fix_before_refactoring: public static int randInt ( int min , int max ) { return java.util.concurrent.ThreadLocalRandom . current () . nextInt ( min , ( max + 1 ) ) ; }
fix_after_refactoring: public static int randInt ( int eskemszdkprsqgzkfewm , int pocaddykzamablqunkde ) { return java.util.concurrent.ThreadLocalRandom . current () . nextInt ( eskemszdkprsqgzkfewm , ( pocaddykzamablqunkde + 1 ) ) ; }
× fix_prediction_before: private static int randInt ( int min , int max ) { return ( java.util.concurrent.ThreadLocalThread . current () . nextInt ( min , max ) ) + 1 ; }
× fix_prediction_after: private static int randInt ( int eskprzprdkksq.sqkamqum.Random p ) { return java.util.concurrent.ThreadLocalRandom . current () . nextInt ( eskprdkndkkpryz.sqkamqum.kfabamquydkndknz.util.RandomLocalRandomLocalThread.mInt , ( ( p + 1 ) + 1 ) ) ; }

line_index: 1281
bug_before_refactoring: private static boolean doesFilerExist ( java.io.File file ) { if ( file == null ) return false ; return file . exists () ; } <s> private static boolean doesFilerExist ( java.io.File file ) { if ( file == null ) return false ; return file . exists () ; } <s> Fixed bug
bug_after_refactoring: private static boolean doesFilerExist ( java.io.File vzogohqdwgzlkcsbysjw ) { if ( vzogohqdwgzlkcsbysjw == null ) return false ; return vzogohqdwgzlkcsbysjw . exists () ; } <s> private static boolean doesFilerExist ( java.io.File vzogohqdwgzlkcsbysjw ) { if ( vzogohqdwgzlkcsbysjw == null ) return false ; return vzogohqdwgzlkcsbysjw . exists () ; } <s> Fixed bug
fix_before_refactoring: private static boolean doesFilerExist ( java.io.File file ) { return ( file != null ) && ( file . exists () ) ; }
fix_after_refactoring: private static boolean doesFilerExist ( java.io.File vzogohqdwgzlkcsbysjw ) { return ( vzogohqdwgzlkcsbysjw != null ) && ( vzogohqdwgzlkcsbysjw . exists () ) ; }
× fix_prediction_before: public static boolean doesFilerExist ( java.io.File file ) { if ( file == null ) return false ; return ( file . exists () ) == null ; }
× fix_prediction_after: public static boolean doesFilerExist ( java.io.File vzohs ) { if ( ( vqwjohz.csohsjohzcsw.wbywbyzcs ) == null ) return false ; return v . exists () ; }

