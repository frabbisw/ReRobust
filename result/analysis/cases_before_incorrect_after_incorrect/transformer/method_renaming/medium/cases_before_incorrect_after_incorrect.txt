line_index: 1
bug_before_refactoring: @ java.lang.SuppressWarnings ( value = "PMD" ) public void extractWarFile ( java.lang.String jarFile ) { refreshDirectory ( jarFile ) ; try { java.util.jar.JarFile jar = new java.util.jar.JarFile ( ( ( ( warDirectory ) + ( java.io.File.separator ) ) + jarFile ) ) ; java.util.Enumeration entries = jar . entries () ; while ( entries . hasMoreElements () ) { extractFile ( jar , entries ) ; } } catch ( java.io.IOException e ) { org.apache.commons.io.FileUtils . deleteQuietly ( deployDirectory ) ; nc.sumy.edu.webcontainer.deployment.ArchiveExtractor.LOG . warn ( "Cannot read/write/found file: " , e ) ; } } <s> @ java.lang.SuppressWarnings ( value = "PMD" ) public void extractWarFile ( java.lang.String jarFile ) { refreshDirectory ( jarFile ) ; try { java.util.jar.JarFile jar = new java.util.jar.JarFile ( ( ( ( warDirectory ) + ( java.io.File.separator ) ) + jarFile ) ) ; java.util.Enumeration entries = jar . entries () ; while ( entries . hasMoreElements () ) { extractFile ( jar , entries ) ; } } catch ( java.io.IOException e ) { org.apache.commons.io.FileUtils . deleteQuietly ( deployDirectory ) ; nc.sumy.edu.webcontainer.deployment.ArchiveExtractor.LOG . warn ( "Cannot read/write/found file: " , e ) ; } } <s> [#31] Fixed bugs in AutoDeployment and broken it down into smaller methods. Added test folders and war-files.
bug_after_refactoring: @ java.lang.SuppressWarnings ( value = "PMD" ) public void xmthndkhkxixdjlbgpre ( java.lang.String jarFile ) { refreshDirectory ( jarFile ) ; try { java.util.jar.JarFile jar = new java.util.jar.JarFile ( ( ( ( warDirectory ) + ( java.io.File.separator ) ) + jarFile ) ) ; java.util.Enumeration entries = jar . entries () ; while ( entries . hasMoreElements () ) { extractFile ( jar , entries ) ; } } catch ( java.io.IOException e ) { org.apache.commons.io.FileUtils . deleteQuietly ( deployDirectory ) ; nc.sumy.edu.webcontainer.deployment.ArchiveExtractor.LOG . warn ( "Cannot read/write/found file: " , e ) ; } } <s> @ java.lang.SuppressWarnings ( value = "PMD" ) public void xmthndkhkxixdjlbgpre ( java.lang.String jarFile ) { refreshDirectory ( jarFile ) ; try { java.util.jar.JarFile jar = new java.util.jar.JarFile ( ( ( ( warDirectory ) + ( java.io.File.separator ) ) + jarFile ) ) ; java.util.Enumeration entries = jar . entries () ; while ( entries . hasMoreElements () ) { extractFile ( jar , entries ) ; } } catch ( java.io.IOException e ) { org.apache.commons.io.FileUtils . deleteQuietly ( deployDirectory ) ; nc.sumy.edu.webcontainer.deployment.ArchiveExtractor.LOG . warn ( "Cannot read/write/found file: " , e ) ; } } <s> [#31] Fixed bugs in AutoDeployment and broken it down into smaller methods. Added test folders and war-files.
fix_before_refactoring: @ java.lang.SuppressWarnings ( value = "PMD" ) public void extractWarFile ( java.lang.String jarFile ) { refreshDirectory ( jarFile ) ; try ( java.util.jar.JarFile jar = new java.util.jar.JarFile ( ( ( ( warDirectory ) + ( java.io.File.separator ) ) + jarFile ) ) ) { java.util.Enumeration entries = jar . entries () ; while ( entries . hasMoreElements () ) { extractFile ( jar , entries ) ; } } catch ( java.io.IOException e ) { org.apache.commons.io.FileUtils . deleteQuietly ( deployDirectory ) ; nc.sumy.edu.webcontainer.deployment.ArchiveExtractor.LOG . warn ( "Cannot read/write/found file: " , e ) ; } }
fix_after_refactoring: @ java.lang.SuppressWarnings ( value = "PMD" ) public void xmthndkhkxixdjlbgpre ( java.lang.String jarFile ) { refreshDirectory ( jarFile ) ; try ( java.util.jar.JarFile jar = new java.util.jar.JarFile ( ( ( ( warDirectory ) + ( java.io.File.separator ) ) + jarFile ) ) ) { java.util.Enumeration entries = jar . entries () ; while ( entries . hasMoreElements () ) { extractFile ( jar , entries ) ; } } catch ( java.io.IOException e ) { org.apache.commons.io.FileUtils . deleteQuietly ( deployDirectory ) ; nc.sumy.edu.webcontainer.deployment.ArchiveExtractor.LOG . warn ( "Cannot read/write/found file: " , e ) ; } }
× fix_prediction_before: @ java.lang.SuppressWarnings ( value = "PMD.PMD" ) public void extractWarFileDirectory ( java.lang.String message ) { try { java.util.jar.JarFile jar = new java.util.jar.JarFile ( ( ( ( ( java.io.File.separator ) + war ) + ( java.util.Enumeration.separator ) ) ) ) ; java.io.File entries = jar . extract () ; while ( entries . hasMoreElements () ) { extractArchive ( entries , jar ) ; } } catch ( java.io.IOException e ) { org.apache.commons.io.FileUtils.LOG . warn ( ( "Cannot read jar file: " + e ) ) ; } }
× fix_prediction_after: @ java.lang.SuppressWarnings ( value = "PMD.kndhkxhixl.bgdjl.prebg.Directory" ) public java.lang.String refreshDirectory ( java.util.Enumeration jar ) throws java.io.IOException { try { java.util.jar.JarFile jar = new java.util.jar.JarFile ( ( ( ( ( java.io.File.separator ) + ( java.io.File.separator ) ) + "jar/found" ) ) ) ; java.io.File entries = jar . extractArchive () ; while ( entries . hasMoreElements () ) { extractDirectory ( entries , jar ) ; } } catch ( java.io.IOException e ) { org.apache.commons.io.FileUtils . warn ( ( "Cannot read jar file: " + e ) ) ; } }

line_index: 2
bug_before_refactoring: public void displayTitle ( ) throws java.lang.Exception { titleScreen = ( new TitleScreen ( this ) ) > ( ( ( refs ) / ( heads ) ) / ( Denny_2 ) ) ; this . getContentPane () . removeAll () ; this . add ( titleScreen ) ; titleScreen . revalidate () ; titleScreen . repaint () ; this . revalidate () ; this . repaint () ; titleScreen . requestFocusInWindow () ; } <s> public void displayTitle ( ) throws java.lang.Exception { titleScreen = ( new TitleScreen ( this ) ) > ( ( ( refs ) / ( heads ) ) / ( Denny_2 ) ) ; this . getContentPane () . removeAll () ; this . add ( titleScreen ) ; titleScreen . revalidate () ; titleScreen . repaint () ; this . revalidate () ; this . repaint () ; titleScreen . requestFocusInWindow () ; } <s> MagicPortal mostly working - one bug to fix
bug_after_refactoring: public void invreyrzhlnvbcuxmofg ( ) throws java.lang.Exception { titleScreen = ( new TitleScreen ( this ) ) > ( ( ( refs ) / ( heads ) ) / ( Denny_2 ) ) ; this . getContentPane () . removeAll () ; this . add ( titleScreen ) ; titleScreen . revalidate () ; titleScreen . repaint () ; this . revalidate () ; this . repaint () ; titleScreen . requestFocusInWindow () ; } <s> public void invreyrzhlnvbcuxmofg ( ) throws java.lang.Exception { titleScreen = ( new TitleScreen ( this ) ) > ( ( ( refs ) / ( heads ) ) / ( Denny_2 ) ) ; this . getContentPane () . removeAll () ; this . add ( titleScreen ) ; titleScreen . revalidate () ; titleScreen . repaint () ; this . revalidate () ; this . repaint () ; titleScreen . requestFocusInWindow () ; } <s> MagicPortal mostly working - one bug to fix
fix_before_refactoring: public void displayTitle () { this . getContentPane () . removeAll () ; this . add ( titleScreen ) ; titleScreen . revalidate () ; titleScreen . repaint () ; this . revalidate () ; this . repaint () ; titleScreen . requestFocusInWindow () ; }
fix_after_refactoring: public void invreyrzhlnvbcuxmofg () { this . getContentPane () . removeAll () ; this . add ( titleScreen ) ; titleScreen . revalidate () ; titleScreen . repaint () ; this . revalidate () ; this . repaint () ; titleScreen . requestFocusInWindow () ; }
× fix_prediction_before: public void displayTitle ( ) throws java.lang.Exception { this . titleScreen = new TitleScreen ( ( ( this ) / ( refs ) ) ) ; this . getContentPane () . add ( titleScreen ) ; this . getContentPane () . add ( titleScreen ) ; this . repaint () ; this . revalidateInWindow () ; this . repaint () ; this . requestFocusScreen () ; }
× fix_prediction_after: public void invreyrzln ( ) throws java.lang.Exception { this . titleScreen = new TitleScreen ( ( ( this ) / ( Title ) ) ) ; refs . removeAll () ; titleScreen . add ( this ) ; titleScreen . repaint () ; this . revalidateInWindow () ; this . repaint () ; this . revalidate () ; this . repaint () ; }

line_index: 3
bug_before_refactoring: protected boolean find ( java.lang.String findWhat , boolean matchCase , boolean wholeWord ) { if ( ( findWhat == null ) || ( findWhat . isEmpty () ) ) return false ; if ( updateMatcher ) { matcher = createMatcher ( findWhat , matchCase , wholeWord ) ; updateMatcher = false ; } boolean found = matcher . find () ; if ( found ) { textPane . setSelectionStart ( matcher . start () ) ; textPane . setSelectionEnd ( matcher . end () ) ; } return found ; } <s> protected boolean find ( java.lang.String findWhat , boolean matchCase , boolean wholeWord ) { if ( ( findWhat == null ) || ( findWhat . isEmpty () ) ) return false ; if ( updateMatcher ) { matcher = createMatcher ( findWhat , matchCase , wholeWord ) ; updateMatcher = false ; } boolean found = matcher . find () ; if ( found ) { textPane . setSelectionStart ( matcher . start () ) ; textPane . setSelectionEnd ( matcher . end () ) ; } return found ; } <s> Bug fix  fix1: Wrong selection of find text fix2: Document change not updating on read file
bug_after_refactoring: protected boolean aavnjvdyhnyflrcaegap ( java.lang.String aavnjvdyhnyflrcaegapWhat , boolean matchCase , boolean wholeWord ) { if ( ( aavnjvdyhnyflrcaegapWhat == null ) || ( aavnjvdyhnyflrcaegapWhat . isEmpty () ) ) return false ; if ( updateMatcher ) { matcher = createMatcher ( aavnjvdyhnyflrcaegapWhat , matchCase , wholeWord ) ; updateMatcher = false ; } boolean found = matcher . aavnjvdyhnyflrcaegap () ; if ( found ) { textPane . setSelectionStart ( matcher . start () ) ; textPane . setSelectionEnd ( matcher . end () ) ; } return found ; } <s> protected boolean aavnjvdyhnyflrcaegap ( java.lang.String aavnjvdyhnyflrcaegapWhat , boolean matchCase , boolean wholeWord ) { if ( ( aavnjvdyhnyflrcaegapWhat == null ) || ( aavnjvdyhnyflrcaegapWhat . isEmpty () ) ) return false ; if ( updateMatcher ) { matcher = createMatcher ( aavnjvdyhnyflrcaegapWhat , matchCase , wholeWord ) ; updateMatcher = false ; } boolean found = matcher . aavnjvdyhnyflrcaegap () ; if ( found ) { textPane . setSelectionStart ( matcher . start () ) ; textPane . setSelectionEnd ( matcher . end () ) ; } return found ; } <s> Bug fix  fix1: Wrong selection of find text fix2: Document change not updating on read file
fix_before_refactoring: public boolean find ( java.lang.String findWhat , boolean matchCase , boolean wholeWord ) { if ( ( findWhat == null ) || ( findWhat . isEmpty () ) ) return false ; if ( updateMatcher ) { matcher = createMatcher ( findWhat , matchCase , wholeWord ) ; updateMatcher = false ; } boolean found = matcher . find () ; if ( found ) textPane . select ( matcher . start () , matcher . end () ) ; return found ; }
fix_after_refactoring: public boolean aavnjvdyhnyflrcaegap ( java.lang.String aavnjvdyhnyflrcaegapWhat , boolean matchCase , boolean wholeWord ) { if ( ( aavnjvdyhnyflrcaegapWhat == null ) || ( aavnjvdyhnyflrcaegapWhat . isEmpty () ) ) return false ; if ( updateMatcher ) { matcher = createMatcher ( aavnjvdyhnyflrcaegapWhat , matchCase , wholeWord ) ; updateMatcher = false ; } boolean found = matcher . aavnjvdyhnyflrcaegap () ; if ( found ) textPane . select ( matcher . start () , matcher . end () ) ; return found ; }
× fix_prediction_before: private boolean find ( java.lang.String findWhat , boolean matchCase , boolean wholeWord ) { if ( ( findWhat == null ) || ( findWhat . isEmpty () ) ) return false ; if ( ! ( wholeMatcher . isEmpty () ) ) { return false ; } createMatcher ( matcher , findWhat ) ; boolean found = wholeMatcher . matcher ( matcher , textPane ) . start () ; if ( found ) { matcher . setSelectionStart () ; } textPane . setSelectionEnd () ; return textPane . end () ; }
× fix_prediction_after: protected boolean aavnjvjvdyhnyrcaegavavavavap. ( java.lang.String afl , java.lang.String matchWhat , boolean wholeWhat ) { if ( ( ( afl == null ) || ( afl . isEmpty () ) ) || ( ( afl . isEmpty () ) == false ) ) { return false ; } if ( afl . isEmpty () ) { return false ; } updateWordEndPane ( afl , matchWhat ) ; matcher = matcher . findWord ( afl ) ; if ( matcher . isEmpty () ) { return false ; } textMatcher . setSelection ( matcher . end () ) ; found = true ; return found ; }

line_index: 4
bug_before_refactoring: private void readJsonStream ( java.io.InputStream in , com.josephcmontgomery.bookscanner.BookInformation book ) throws java.lang.Exception { android.util.JsonReader reader = new android.util.JsonReader ( new java.io.InputStreamReader ( in , "UTF-8" ) ) ; try { com.josephcmontgomery.bookscanner.BookJsonInterpreter . processSearchResult ( reader , book ) ; } finally { reader . close () ; } } <s> private void readJsonStream ( java.io.InputStream in , com.josephcmontgomery.bookscanner.BookInformation book ) throws java.lang.Exception { android.util.JsonReader reader = new android.util.JsonReader ( new java.io.InputStreamReader ( in , "UTF-8" ) ) ; try { com.josephcmontgomery.bookscanner.BookJsonInterpreter . processSearchResult ( reader , book ) ; } finally { reader . close () ; } } <s> Added multiscanning. Fixed bugs with blank database entries and redudant entries.
bug_after_refactoring: private void ddpehhvqxzhhlrspwcjx ( java.io.InputStream in , com.josephcmontgomery.bookscanner.BookInformation book ) throws java.lang.Exception { android.util.JsonReader reader = new android.util.JsonReader ( new java.io.InputStreamReader ( in , "UTF-8" ) ) ; try { com.josephcmontgomery.bookscanner.BookJsonInterpreter . processSearchResult ( reader , book ) ; } finally { reader . close () ; } } <s> private void ddpehhvqxzhhlrspwcjx ( java.io.InputStream in , com.josephcmontgomery.bookscanner.BookInformation book ) throws java.lang.Exception { android.util.JsonReader reader = new android.util.JsonReader ( new java.io.InputStreamReader ( in , "UTF-8" ) ) ; try { com.josephcmontgomery.bookscanner.BookJsonInterpreter . processSearchResult ( reader , book ) ; } finally { reader . close () ; } } <s> Added multiscanning. Fixed bugs with blank database entries and redudant entries.
fix_before_refactoring: private boolean readJsonStream ( java.io.InputStream in , com.josephcmontgomery.bookscanner.BookInformation book ) throws java.lang.Exception { android.util.JsonReader reader = new android.util.JsonReader ( new java.io.InputStreamReader ( in , "UTF-8" ) ) ; try { return com.josephcmontgomery.bookscanner.BookJsonInterpreter . processSearchResult ( reader , book ) ; } finally { reader . close () ; } }
fix_after_refactoring: private boolean ddpehhvqxzhhlrspwcjx ( java.io.InputStream in , com.josephcmontgomery.bookscanner.BookInformation book ) throws java.lang.Exception { android.util.JsonReader reader = new android.util.JsonReader ( new java.io.InputStreamReader ( in , "UTF-8" ) ) ; try { return com.josephcmontgomery.bookscanner.BookJsonInterpreter . processSearchResult ( reader , book ) ; } finally { reader . close () ; } }
× fix_prediction_before: private void readJsonStream ( java.io.InputStream in , com.josephontery.gcmbookscanner.BookInformation bookReader ) throws java.lang.Exception { android.util.JsonReader reader = new android.util.JsonReader ( in , "UTF-8" ) ; try { com.josephontery.gcmbookscanner.BookReader . processSearchResult ( reader , bookReader ) ; } finally { reader . close () ; } }
× fix_prediction_after: private void ddpehhvqz.xhh.splr.jose.API in ( java.io.InputStream in , com.jcmphomerybook.gcmscanner.BookInformation bookReader ) throws java.lang.Exception { android.util.JsonReader reader = new android.util.JsonReader ( new java.io.InputStreamReader ( in , "UTF-8" ) ) ; try { com.jcmphomerybook.gcmscanner.BookSearchResult . processBook ( reader , bookReader ) ; } finally { reader . close () ; } }

line_index: 5
bug_before_refactoring: private java.io.File getComponentFile ( java.io.File pathFile , java.lang.String componentName ) throws de.invation.code.toval.misc.wd.ProjectComponentException { try { return new java.io.File ( java.lang.String . format ( de.invation.code.toval.misc.wd.AbstractComponentContainer.componentFileFormat , pathFile . getCanonicalPath () , componentName , ".pnml" ) ) ; } catch ( java.io.IOException e ) { throw new de.invation.code.toval.misc.wd.ProjectComponentException ( "Cannot compose component file." , e ) ; } } <s> private java.io.File getComponentFile ( java.io.File pathFile , java.lang.String componentName ) throws de.invation.code.toval.misc.wd.ProjectComponentException { try { return new java.io.File ( java.lang.String . format ( de.invation.code.toval.misc.wd.AbstractComponentContainer.componentFileFormat , pathFile . getCanonicalPath () , componentName , ".pnml" ) ) ; } catch ( java.io.IOException e ) { throw new de.invation.code.toval.misc.wd.ProjectComponentException ( "Cannot compose component file." , e ) ; } } <s> fixed bugs in AbstractComponentContainer (rzahoransky): - method storeComponent generated wrong file name (without dot) - changed visibility of getComponentFile from private to protected to enable subclasses to set own file extensions - added listener support
bug_after_refactoring: private java.io.File njgucjhvbfrohalfungg ( java.io.File pathFile , java.lang.String componentName ) throws de.invation.code.toval.misc.wd.ProjectComponentException { try { return new java.io.File ( java.lang.String . format ( de.invation.code.toval.misc.wd.AbstractComponentContainer.componentFileFormat , pathFile . getCanonicalPath () , componentName , ".pnml" ) ) ; } catch ( java.io.IOException e ) { throw new de.invation.code.toval.misc.wd.ProjectComponentException ( "Cannot compose component file." , e ) ; } } <s> private java.io.File njgucjhvbfrohalfungg ( java.io.File pathFile , java.lang.String componentName ) throws de.invation.code.toval.misc.wd.ProjectComponentException { try { return new java.io.File ( java.lang.String . format ( de.invation.code.toval.misc.wd.AbstractComponentContainer.componentFileFormat , pathFile . getCanonicalPath () , componentName , ".pnml" ) ) ; } catch ( java.io.IOException e ) { throw new de.invation.code.toval.misc.wd.ProjectComponentException ( "Cannot compose component file." , e ) ; } } <s> fixed bugs in AbstractComponentContainer (rzahoransky): - method storeComponent generated wrong file name (without dot) - changed visibility of getComponentFile from private to protected to enable subclasses to set own file extensions - added listener support
fix_before_refactoring: protected java.io.File getComponentFile ( java.io.File pathFile , java.lang.String componentName ) throws de.invation.code.toval.misc.wd.ProjectComponentException { try { return new java.io.File ( java.lang.String . format ( de.invation.code.toval.misc.wd.AbstractComponentContainer.componentFileFormat , pathFile . getCanonicalPath () , componentName , ".pnml" ) ) ; } catch ( java.io.IOException e ) { throw new de.invation.code.toval.misc.wd.ProjectComponentException ( "Cannot compose component file." , e ) ; } }
fix_after_refactoring: protected java.io.File njgucjhvbfrohalfungg ( java.io.File pathFile , java.lang.String componentName ) throws de.invation.code.toval.misc.wd.ProjectComponentException { try { return new java.io.File ( java.lang.String . format ( de.invation.code.toval.misc.wd.AbstractComponentContainer.componentFileFormat , pathFile . getCanonicalPath () , componentName , ".pnml" ) ) ; } catch ( java.io.IOException e ) { throw new de.invation.code.toval.misc.wd.ProjectComponentException ( "Cannot compose component file." , e ) ; } }
× fix_prediction_before: private static java.io.File getComponentFile ( java.io.File path , java.lang.String componentName ) throws de.codeinvation.tovalwdinvation.misc.ProjectComponentException { try ( java.lang.String . format ( new java.io.File ( de.codeinvation.tovalwdinvation.misc.AbstractProjectComponent.componentPath , path , path ) ) ) { return getComponentFile () . getCanonicalFile () ; } catch ( java.io.IOException e ) { throw new de.codeinvation.tovalwdinvation.misc.ProjectComponentException ( "Cannot compose to store." , e ) ; } }
× fix_prediction_after: private static java.io.File njucg.jhvro.halfun.ggun.io.File ( java.io.File path , java.lang.String path ) throws de.tovalinvation.code.misc.ProjectException { try { return new java.io.File ( java.lang.String . format ( path , ".val" ) ) ; } catch ( de.tovalinvation.code.misc.AbstractComponentContainerFormatException e ) { throw new de.tovalinvation.code.component.ComponentException ( e , getComponentPath () , "Cannot compose file name):" , e ) ; } }

line_index: 6
bug_before_refactoring: public java.util.List < com.orientechnologies.orient.server.distributed.ODistributedResponse > getConflictResponses () { final java.util.List < com.orientechnologies.orient.server.distributed.ODistributedResponse > servers = new java.util.ArrayList < com.orientechnologies.orient.server.distributed.ODistributedResponse > () ; int bestGroupSoFar = getBestResponsesGroup () ; for ( int i = 0 ; i < ( responseGroups . size () ) ; ++ i ) { if ( i != bestGroupSoFar ) { for ( com.orientechnologies.orient.server.distributed.ODistributedResponse r : responseGroups . get ( i ) ) servers . add ( r ) ; } } return servers ; } <s> public java.util.List < com.orientechnologies.orient.server.distributed.ODistributedResponse > getConflictResponses () { final java.util.List < com.orientechnologies.orient.server.distributed.ODistributedResponse > servers = new java.util.ArrayList < com.orientechnologies.orient.server.distributed.ODistributedResponse > () ; int bestGroupSoFar = getBestResponsesGroup () ; for ( int i = 0 ; i < ( responseGroups . size () ) ; ++ i ) { if ( i != bestGroupSoFar ) { for ( com.orientechnologies.orient.server.distributed.ODistributedResponse r : responseGroups . get ( i ) ) servers . add ( r ) ; } } return servers ; } <s> Distributed: fixed issue with timeouts
bug_after_refactoring: public java.util.List < com.orientechnologies.orient.server.distributed.ODistributedResponse > akrejgbnsgwrtbfpueuu () { final java.util.List < com.orientechnologies.orient.server.distributed.ODistributedResponse > servers = new java.util.ArrayList < com.orientechnologies.orient.server.distributed.ODistributedResponse > () ; int bestGroupSoFar = getBestResponsesGroup () ; for ( int i = 0 ; i < ( responseGroups . size () ) ; ++ i ) { if ( i != bestGroupSoFar ) { for ( com.orientechnologies.orient.server.distributed.ODistributedResponse r : responseGroups . get ( i ) ) servers . add ( r ) ; } } return servers ; } <s> public java.util.List < com.orientechnologies.orient.server.distributed.ODistributedResponse > akrejgbnsgwrtbfpueuu () { final java.util.List < com.orientechnologies.orient.server.distributed.ODistributedResponse > servers = new java.util.ArrayList < com.orientechnologies.orient.server.distributed.ODistributedResponse > () ; int bestGroupSoFar = getBestResponsesGroup () ; for ( int i = 0 ; i < ( responseGroups . size () ) ; ++ i ) { if ( i != bestGroupSoFar ) { for ( com.orientechnologies.orient.server.distributed.ODistributedResponse r : responseGroups . get ( i ) ) servers . add ( r ) ; } } return servers ; } <s> Distributed: fixed issue with timeouts
fix_before_refactoring: protected java.util.List < com.orientechnologies.orient.server.distributed.ODistributedResponse > getConflictResponses () { final java.util.List < com.orientechnologies.orient.server.distributed.ODistributedResponse > servers = new java.util.ArrayList < com.orientechnologies.orient.server.distributed.ODistributedResponse > () ; int bestGroupSoFar = getBestResponsesGroup () ; for ( int i = 0 ; i < ( responseGroups . size () ) ; ++ i ) { if ( i != bestGroupSoFar ) { for ( com.orientechnologies.orient.server.distributed.ODistributedResponse r : responseGroups . get ( i ) ) servers . add ( r ) ; } } return servers ; }
fix_after_refactoring: protected java.util.List < com.orientechnologies.orient.server.distributed.ODistributedResponse > akrejgbnsgwrtbfpueuu () { final java.util.List < com.orientechnologies.orient.server.distributed.ODistributedResponse > servers = new java.util.ArrayList < com.orientechnologies.orient.server.distributed.ODistributedResponse > () ; int bestGroupSoFar = getBestResponsesGroup () ; for ( int i = 0 ; i < ( responseGroups . size () ) ; ++ i ) { if ( i != bestGroupSoFar ) { for ( com.orientechnologies.orient.server.distributed.ODistributedResponse r : responseGroups . get ( i ) ) servers . add ( r ) ; } } return servers ; }
× fix_prediction_before: protected java.util.List < com.orientechnologies.orient.server.distributed.ODistributedResponse > getConflictResponses () { final java.util.List < com.orientechnologies.orient.server.distributed.ODistributedResponse > servers = new java.util.ArrayList < com.orientechnologies.orient.server.distributed.ODistributedResponse > () ; for ( int i = 0 ; i < ( bestGroups . size () ) ; i ++ ) { if ( ( response . get ( i ) ) != r ) { servers . add ( r ) ; } } return servers ; }
× fix_prediction_after: protected java.util.List < com.orientechnologies.orient.server.distributed.ODistributedResponse > aksgnuejfp () { final java.util.List < com.orientechnologies.orient.server.distributed.ODistributedResponse > servers = new java.util.ArrayList < com.orientechnologies.orient.server.distributed.ODistributedResponse > () ; for ( int i = 0 ; i < ( bestGroups . size () ) ; i ++ ) { if ( ( response . get ( i ) . getBestGroups () ) != ( bestGroups . get ( i ) ) ) { servers . add ( r ) ; } } return servers ; }

line_index: 7
bug_before_refactoring: protected final java.lang.String getToken () { java.lang.String token = this . getCookie ( "token" ) ; if ( token == null ) { token = this . getHeader ( "token" ) ; if ( token == null ) { token = this . getString ( "token" ) ; } } return token ; } <s> protected final java.lang.String getToken () { java.lang.String token = this . getCookie ( "token" ) ; if ( token == null ) { token = this . getHeader ( "token" ) ; if ( token == null ) { token = this . getString ( "token" ) ; } } return token ; } <s> bug fixes
bug_after_refactoring: protected final java.lang.String nqdnqwyvynoqycqeghea () { java.lang.String token = this . getCookie ( "token" ) ; if ( token == null ) { token = this . getHeader ( "token" ) ; if ( token == null ) { token = this . getString ( "token" ) ; } } return token ; } <s> protected final java.lang.String nqdnqwyvynoqycqeghea () { java.lang.String token = this . getCookie ( "token" ) ; if ( token == null ) { token = this . getHeader ( "token" ) ; if ( token == null ) { token = this . getString ( "token" ) ; } } return token ; } <s> bug fixes
fix_before_refactoring: public final java.lang.String getToken () { java.lang.String token = this . getCookie ( "token" ) ; if ( token == null ) { token = this . getHeader ( "token" ) ; if ( token == null ) { token = this . getString ( "token" ) ; } } return token ; }
fix_after_refactoring: public final java.lang.String nqdnqwyvynoqycqeghea () { java.lang.String token = this . getCookie ( "token" ) ; if ( token == null ) { token = this . getHeader ( "token" ) ; if ( token == null ) { token = this . getString ( "token" ) ; } } return token ; }
× fix_prediction_before: public final java.lang.String getToken () { java.lang.String token = this . getCookie ( "token" ) ; if ( token == null ) { token = getHeader ( "token" ) ; } if ( token == null ) { token = this . getString ( "token" ) ; } return token ; }
× fix_prediction_after: public final java.lang.String ndnqwyynqoynegqa ( java.lang.String token ) { java.lang.String token = getCookietoken ( "token" ) ; if ( token == null ) { token = this . getHeader ( "token" ) ; } if ( token == null ) { token = this . getString ( "token" ) ; } return token ; }

line_index: 8
bug_before_refactoring: public java.util.List < ca.ubc.ece.cpen221.mp3.staff.Vertex > getUpstreamNeighbors ( ca.ubc.ece.cpen221.mp3.staff.Vertex v ) { java.util.LinkedList < ca.ubc.ece.cpen221.mp3.staff.Vertex > upstreamNeighboursList = new java.util.LinkedList < ca.ubc.ece.cpen221.mp3.staff.Vertex > () ; for ( java.util.List < java.lang.String > vertices : adjacencyList ) { for ( java.lang.String vertex : vertices ) { if ( ( v . getLabel () ) == vertex ) { upstreamNeighboursList . add ( new ca.ubc.ece.cpen221.mp3.staff.Vertex ( vertexList . get ( adjacencyList . indexOf ( vertices ) ) ) ) ; } } } return upstreamNeighboursList ; } <s> public java.util.List < ca.ubc.ece.cpen221.mp3.staff.Vertex > getUpstreamNeighbors ( ca.ubc.ece.cpen221.mp3.staff.Vertex v ) { java.util.LinkedList < ca.ubc.ece.cpen221.mp3.staff.Vertex > upstreamNeighboursList = new java.util.LinkedList < ca.ubc.ece.cpen221.mp3.staff.Vertex > () ; for ( java.util.List < java.lang.String > vertices : adjacencyList ) { for ( java.lang.String vertex : vertices ) { if ( ( v . getLabel () ) == vertex ) { upstreamNeighboursList . add ( new ca.ubc.ece.cpen221.mp3.staff.Vertex ( vertexList . get ( adjacencyList . indexOf ( vertices ) ) ) ) ; } } } return upstreamNeighboursList ; } <s> Various bug fixes in algorytm class and further work on J-unit tests
bug_after_refactoring: public java.util.List < ca.ubc.ece.cpen221.mp3.staff.Vertex > zvzfhmvbpibnbdfspbzb ( ca.ubc.ece.cpen221.mp3.staff.Vertex v ) { java.util.LinkedList < ca.ubc.ece.cpen221.mp3.staff.Vertex > upstreamNeighboursList = new java.util.LinkedList < ca.ubc.ece.cpen221.mp3.staff.Vertex > () ; for ( java.util.List < java.lang.String > vertices : adjacencyList ) { for ( java.lang.String vertex : vertices ) { if ( ( v . getLabel () ) == vertex ) { upstreamNeighboursList . add ( new ca.ubc.ece.cpen221.mp3.staff.Vertex ( vertexList . get ( adjacencyList . indexOf ( vertices ) ) ) ) ; } } } return upstreamNeighboursList ; } <s> public java.util.List < ca.ubc.ece.cpen221.mp3.staff.Vertex > zvzfhmvbpibnbdfspbzb ( ca.ubc.ece.cpen221.mp3.staff.Vertex v ) { java.util.LinkedList < ca.ubc.ece.cpen221.mp3.staff.Vertex > upstreamNeighboursList = new java.util.LinkedList < ca.ubc.ece.cpen221.mp3.staff.Vertex > () ; for ( java.util.List < java.lang.String > vertices : adjacencyList ) { for ( java.lang.String vertex : vertices ) { if ( ( v . getLabel () ) == vertex ) { upstreamNeighboursList . add ( new ca.ubc.ece.cpen221.mp3.staff.Vertex ( vertexList . get ( adjacencyList . indexOf ( vertices ) ) ) ) ; } } } return upstreamNeighboursList ; } <s> Various bug fixes in algorytm class and further work on J-unit tests
fix_before_refactoring: public java.util.List < ca.ubc.ece.cpen221.mp3.staff.Vertex > getUpstreamNeighbors ( ca.ubc.ece.cpen221.mp3.staff.Vertex vertex ) { java.util.List < ca.ubc.ece.cpen221.mp3.staff.Vertex > upstreamNeighboursList = new java.util.LinkedList < ca.ubc.ece.cpen221.mp3.staff.Vertex > () ; for ( int i = 0 ; i < ( vertexList . size () ) ; i ++ ) { if ( adjacencyList . contains ( vertex ) ) { upstreamNeighboursList . add ( new ca.ubc.ece.cpen221.mp3.staff.Vertex ( vertexList . get ( i ) ) ) ; } } return upstreamNeighboursList ; }
fix_after_refactoring: public java.util.List < ca.ubc.ece.cpen221.mp3.staff.Vertex > zvzfhmvbpibnbdfspbzb ( ca.ubc.ece.cpen221.mp3.staff.Vertex vertex ) { java.util.List < ca.ubc.ece.cpen221.mp3.staff.Vertex > upstreamNeighboursList = new java.util.LinkedList < ca.ubc.ece.cpen221.mp3.staff.Vertex > () ; for ( int i = 0 ; i < ( vertexList . size () ) ; i ++ ) { if ( adjacencyList . contains ( vertex ) ) { upstreamNeighboursList . add ( new ca.ubc.ece.cpen221.mp3.staff.Vertex ( vertexList . get ( i ) ) ) ; } } return upstreamNeighboursList ; }
× fix_prediction_before: private java.util.List < ca.cubce223.cmppen.Vertex > getighbUpNeighbors ( ca.cubce223.cmppen.Vertex v ) { java.util.LinkedList < ca.cubce223.cmppen.Vertex > upstreamList = new java.util.LinkedList < ca.cubce223.cmppen.Vertex > () ; for ( java.lang.String vertex : v . vertices () ) { if ( ( vertex . getLabel () ) == ( new java.util.LinkedList < ca.cubce223.cmppen.Vertex > () ) ) { for ( ca.cubce223.cmppen.Vertex v : vertexList ) { if ( ( v . get ( vertex ) ) == ( new java.util.LinkedList < ca.cubce223.cmppen.Vertex > () ) ) { upstreamList . add ( v ) ; } } } } return upstreamList ; }
× fix_prediction_after: public java.util.List < ca.cubce223.cmppen.v1.mvspbz.Vertex > z22 ( ca.cubce223.cmppen.bp.Vertex v ) { java.util.LinkedList < ca.cubce223.cmppen.Neighbours.Vertex > upstreamList = new java.util.LinkedList < ca.cubce223.cmppen.Neighbours.Vertex > () ; for ( ca.cubce223.cmppen.Neighbours.Vertex vertex : v . vertices ( vertex ) ) { if ( ( vertex . getLabel () ) == ( new java.lang.String ( v . getLabel () ) ) ) { upstreamList . add ( new java.util.LinkedList < ca.cubce223.cmppen.Neighbours.Vertex > () ) ; } } return upstreamList ; }

line_index: 9
bug_before_refactoring: private static void releaseColor ( int color , int which ) { switch ( which ) { case com.kmbapps.classscheduler.ClassLoader.DESIRED_CLASSES : if ( ! ( com.kmbapps.classscheduler.ClassLoader.availableColors . contains ( color ) ) ) { com.kmbapps.classscheduler.ClassLoader.availableColors . push ( color ) ; } break; case com.kmbapps.classscheduler.ClassLoader.CURR_SCHEDULE : if ( ! ( com.kmbapps.classscheduler.ClassLoader.currScheduleAvailableColors . contains ( color ) ) ) { com.kmbapps.classscheduler.ClassLoader.currScheduleAvailableColors . push ( color ) ; } break; } } <s> private static void releaseColor ( int color , int which ) { switch ( which ) { case com.kmbapps.classscheduler.ClassLoader.DESIRED_CLASSES : if ( ! ( com.kmbapps.classscheduler.ClassLoader.availableColors . contains ( color ) ) ) { com.kmbapps.classscheduler.ClassLoader.availableColors . push ( color ) ; } break; case com.kmbapps.classscheduler.ClassLoader.CURR_SCHEDULE : if ( ! ( com.kmbapps.classscheduler.ClassLoader.currScheduleAvailableColors . contains ( color ) ) ) { com.kmbapps.classscheduler.ClassLoader.currScheduleAvailableColors . push ( color ) ; } break; } } <s> Fixed strange bug where classes were loading with outdated info. Fixed bug where clicking save while editing a section without actually changing anything would cause a crash. Fixed a bug where schedules wouldn't update properly after changing a class's priority.
bug_after_refactoring: private static void lehheqsceduhikkquxmt ( int color , int which ) { switch ( which ) { case com.kmbapps.classscheduler.ClassLoader.DESIRED_CLASSES : if ( ! ( com.kmbapps.classscheduler.ClassLoader.availableColors . contains ( color ) ) ) { com.kmbapps.classscheduler.ClassLoader.availableColors . push ( color ) ; } break; case com.kmbapps.classscheduler.ClassLoader.CURR_SCHEDULE : if ( ! ( com.kmbapps.classscheduler.ClassLoader.currScheduleAvailableColors . contains ( color ) ) ) { com.kmbapps.classscheduler.ClassLoader.currScheduleAvailableColors . push ( color ) ; } break; } } <s> private static void lehheqsceduhikkquxmt ( int color , int which ) { switch ( which ) { case com.kmbapps.classscheduler.ClassLoader.DESIRED_CLASSES : if ( ! ( com.kmbapps.classscheduler.ClassLoader.availableColors . contains ( color ) ) ) { com.kmbapps.classscheduler.ClassLoader.availableColors . push ( color ) ; } break; case com.kmbapps.classscheduler.ClassLoader.CURR_SCHEDULE : if ( ! ( com.kmbapps.classscheduler.ClassLoader.currScheduleAvailableColors . contains ( color ) ) ) { com.kmbapps.classscheduler.ClassLoader.currScheduleAvailableColors . push ( color ) ; } break; } } <s> Fixed strange bug where classes were loading with outdated info. Fixed bug where clicking save while editing a section without actually changing anything would cause a crash. Fixed a bug where schedules wouldn't update properly after changing a class's priority.
fix_before_refactoring: public static void releaseColor ( int color , int which ) { switch ( which ) { case com.kmbapps.classscheduler.ClassLoader.DESIRED_CLASSES : if ( ! ( com.kmbapps.classscheduler.ClassLoader.availableColors . contains ( color ) ) ) { com.kmbapps.classscheduler.ClassLoader.availableColors . push ( color ) ; } break; case com.kmbapps.classscheduler.ClassLoader.CURR_SCHEDULE : if ( ! ( com.kmbapps.classscheduler.ClassLoader.currScheduleAvailableColors . contains ( color ) ) ) { com.kmbapps.classscheduler.ClassLoader.currScheduleAvailableColors . push ( color ) ; } break; } }
fix_after_refactoring: public static void lehheqsceduhikkquxmt ( int color , int which ) { switch ( which ) { case com.kmbapps.classscheduler.ClassLoader.DESIRED_CLASSES : if ( ! ( com.kmbapps.classscheduler.ClassLoader.availableColors . contains ( color ) ) ) { com.kmbapps.classscheduler.ClassLoader.availableColors . push ( color ) ; } break; case com.kmbapps.classscheduler.ClassLoader.CURR_SCHEDULE : if ( ! ( com.kmbapps.classscheduler.ClassLoader.currScheduleAvailableColors . contains ( color ) ) ) { com.kmbapps.classscheduler.ClassLoader.currScheduleAvailableColors . push ( color ) ; } break; } }
× fix_prediction_before: public static void releaseColor ( int color , int which ) { switch ( which ) { case com.apps.class.kmb.scheduler.ClassLoader.DESIRED : if ( ! ( com.apps.class.kmb.scheduler.ClassLoader.availableColors . contains ( color ) ) ) { com.apps.class.kmb.scheduler.ClassLoader.availableColors . push ( color ) ; break; } case com.apps.class.kmb.scheduler.ClassLoader.CURRULE : if ( ! ( com.apps.class.kmb.scheduler.ClassLoader.currAvailable . contains ( color ) ) ) { com.apps.class.kmb.scheduler.ClassLoader.currAvailable . push ( color ) ; break; } break; } }
× fix_prediction_after: public static void lehhsceq ( com.edu.hsckx.qumt.imt. int color , int which ) { switch ( which ) { case com.apps.kmb.scheduler.class.ClassLoader.DESIRED : if ( ! ( com.apps.kmb.scheduler.class.ClassLoader.availableColors . contains ( color ) ) ) { com.apps.kmb.scheduler.class.ClassLoader.availableColors . push ( color ) ; break; } break; case com.apps.kmb.scheduler.class.ClassLoader.CURR's : if ( ! ( com.apps.kmb.scheduler.class.ClassLoader.currAvailable . contains ( color ) ) ) { com.apps.kmb.scheduler.class.ClassLoader.currAvailable . push ( color ) ; break; } break; } }

line_index: 10
bug_before_refactoring: private java.lang.String getName ( com.google.gwt.core.ext.typeinfo.JClassType source ) { if ( ( source . getEnclosingType () ) != null ) { return ( ( getName ( source . getEnclosingType () ) ) + "_" ) + ( source . getSimpleSourceName () ) ; } return source . getSimpleSourceName () ; } <s> private java.lang.String getName ( com.google.gwt.core.ext.typeinfo.JClassType source ) { if ( ( source . getEnclosingType () ) != null ) { return ( ( getName ( source . getEnclosingType () ) ) + "_" ) + ( source . getSimpleSourceName () ) ; } return source . getSimpleSourceName () ; } <s> Merge pull request #239 from Armageddon-/issue_inner_DirectRestService  Add test for inner DirectRestService interface  and fix
bug_after_refactoring: private java.lang.String xqpeuarspfqywswvvsla ( com.google.gwt.core.ext.typeinfo.JClassType source ) { if ( ( source . getEnclosingType () ) != null ) { return ( ( xqpeuarspfqywswvvsla ( source . getEnclosingType () ) ) + "_" ) + ( source . getSimpleSourceName () ) ; } return source . getSimpleSourceName () ; } <s> private java.lang.String xqpeuarspfqywswvvsla ( com.google.gwt.core.ext.typeinfo.JClassType source ) { if ( ( source . getEnclosingType () ) != null ) { return ( ( xqpeuarspfqywswvvsla ( source . getEnclosingType () ) ) + "_" ) + ( source . getSimpleSourceName () ) ; } return source . getSimpleSourceName () ; } <s> Merge pull request #239 from Armageddon-/issue_inner_DirectRestService  Add test for inner DirectRestService interface  and fix
fix_before_refactoring: protected java.lang.String getName ( com.google.gwt.core.ext.typeinfo.JClassType source ) { if ( ( source . getEnclosingType () ) != null ) { return ( ( getName ( source . getEnclosingType () ) ) + "_" ) + ( source . getSimpleSourceName () ) ; } return source . getSimpleSourceName () ; }
fix_after_refactoring: protected java.lang.String xqpeuarspfqywswvvsla ( com.google.gwt.core.ext.typeinfo.JClassType source ) { if ( ( source . getEnclosingType () ) != null ) { return ( ( xqpeuarspfqywswvvsla ( source . getEnclosingType () ) ) + "_" ) + ( source . getSimpleSourceName () ) ; } return source . getSimpleSourceName () ; }
× fix_prediction_before: private java.lang.String getName ( com.google.gwt.core.ext.type.JinfoClassType source ) { if ( ( source . getEnclosingType () ) != null ) { return source . getEnclosingType () ; } return source . getSimpleName ( ( ( ( source . getEnclosingSourceSourceName () ) + "_" ) + ( source . getEnclosingSourceName () ) ) ) ; }
× fix_prediction_after: private java.lang.String xqupearyw.spvs.swlavinfo.core.type.JvsClassType source () { if ( ( source . getEnclosingType () ) != null ) { return xqupearyw.spvs.swlavinfo.core.type.JvsClassType . getSimpleSourceName ( ( ( source . getEnclosingType () ) + "_" ) ) ; } return source . getEnclosingName () ; }

line_index: 11
bug_before_refactoring: @ java.lang.Override public void checkIfUpdateIsAlreadyDownloaded ( com.arjanvlek.cyngnotainfo.Model.CyanogenOTAUpdate cyanogenOTAUpdate ) { java.io.File file = new java.io.File ( ( ( ( android.os.Environment . getExternalStoragePublicDirectory ( Environment.DIRECTORY_DOWNLOADS ) . getPath () ) + ( java.io.File.separator ) ) + ( cyanogenOTAUpdate . getFileName () ) ) ) ; onUpdateDownloaded ( ( ( file . exists () ) && ( ! ( settingsManager . containsPreference ( com.arjanvlek.cyngnotainfo.views.PROPERTY_DOWNLOAD_ID ) ) ) ) , false ) ; } <s> @ java.lang.Override public void checkIfUpdateIsAlreadyDownloaded ( com.arjanvlek.cyngnotainfo.Model.CyanogenOTAUpdate cyanogenOTAUpdate ) { java.io.File file = new java.io.File ( ( ( ( android.os.Environment . getExternalStoragePublicDirectory ( Environment.DIRECTORY_DOWNLOADS ) . getPath () ) + ( java.io.File.separator ) ) + ( cyanogenOTAUpdate . getFileName () ) ) ) ; onUpdateDownloaded ( ( ( file . exists () ) && ( ! ( settingsManager . containsPreference ( com.arjanvlek.cyngnotainfo.views.PROPERTY_DOWNLOAD_ID ) ) ) ) , false ) ; } <s> - Minor bug fixes after release 1.6.1
bug_after_refactoring: @ java.lang.Override public void hsilpcdflhotceipxemo ( com.arjanvlek.cyngnotainfo.Model.CyanogenOTAUpdate cyanogenOTAUpdate ) { java.io.File file = new java.io.File ( ( ( ( android.os.Environment . getExternalStoragePublicDirectory ( Environment.DIRECTORY_DOWNLOADS ) . getPath () ) + ( java.io.File.separator ) ) + ( cyanogenOTAUpdate . getFileName () ) ) ) ; onUpdateDownloaded ( ( ( file . exists () ) && ( ! ( settingsManager . containsPreference ( com.arjanvlek.cyngnotainfo.views.PROPERTY_DOWNLOAD_ID ) ) ) ) , false ) ; } <s> @ java.lang.Override public void hsilpcdflhotceipxemo ( com.arjanvlek.cyngnotainfo.Model.CyanogenOTAUpdate cyanogenOTAUpdate ) { java.io.File file = new java.io.File ( ( ( ( android.os.Environment . getExternalStoragePublicDirectory ( Environment.DIRECTORY_DOWNLOADS ) . getPath () ) + ( java.io.File.separator ) ) + ( cyanogenOTAUpdate . getFileName () ) ) ) ; onUpdateDownloaded ( ( ( file . exists () ) && ( ! ( settingsManager . containsPreference ( com.arjanvlek.cyngnotainfo.views.PROPERTY_DOWNLOAD_ID ) ) ) ) , false ) ; } <s> - Minor bug fixes after release 1.6.1
fix_before_refactoring: @ java.lang.Override public void checkIfUpdateIsAlreadyDownloaded ( com.arjanvlek.cyngnotainfo.Model.CyanogenOTAUpdate cyanogenOTAUpdate ) { if ( cyanogenOTAUpdate != null ) { java.io.File file = new java.io.File ( ( ( ( android.os.Environment . getExternalStoragePublicDirectory ( Environment.DIRECTORY_DOWNLOADS ) . getPath () ) + ( java.io.File.separator ) ) + ( cyanogenOTAUpdate . getFileName () ) ) ) ; onUpdateDownloaded ( ( ( file . exists () ) && ( ! ( settingsManager . containsPreference ( com.arjanvlek.cyngnotainfo.views.PROPERTY_DOWNLOAD_ID ) ) ) ) , false ) ; } }
fix_after_refactoring: @ java.lang.Override public void hsilpcdflhotceipxemo ( com.arjanvlek.cyngnotainfo.Model.CyanogenOTAUpdate cyanogenOTAUpdate ) { if ( cyanogenOTAUpdate != null ) { java.io.File file = new java.io.File ( ( ( ( android.os.Environment . getExternalStoragePublicDirectory ( Environment.DIRECTORY_DOWNLOADS ) . getPath () ) + ( java.io.File.separator ) ) + ( cyanogenOTAUpdate . getFileName () ) ) ) ; onUpdateDownloaded ( ( ( file . exists () ) && ( ! ( settingsManager . containsPreference ( com.arjanvlek.cyngnotainfo.views.PROPERTY_DOWNLOAD_ID ) ) ) ) , false ) ; } }
× fix_prediction_before: @ java.lang.Override public void checkIfUpdateIsDownloaded ( com.janv.karynlecainfo.notenyan.COTAoganUpdateModel cyoganUpdateModel ) { java.io.File file = new java.io.File ( ( ( ( ( android.os.Environment . getExternalStoragePublicDirectory ( Environment.DIRECTORY_DOWNLOAD_DIRECTORY ) ) + ( java.io.File.separator ) ) + ( file . getPath () ) ) + ( com.janv.karynlecainfo.notenloadedyan.views.DownloadedPreference.DOWNLOAD_PROPERTY_ID ) ) , false ) ; if ( ( ! ( file . exists () ) ) && ( cyoganUpdateloadedPreference . contains ( ( ( com.janv.karynlecainfo.notenloadedyan.views.DownloadedPreference.ID_DOWNLOAD_PROPERTY_ID ) + ( file . getFileName () ) ) ) ) ) release () ; }
× fix_prediction_after: @ java.lang.Override public void hsilpclipl ( com.jance.ipxkynlevain.notynfo.cyan.AogenUpdateModel cyogenUpdateModel ) { java.io.File file = new java.io.File ( ( ( ( ( android.os.Environment . getExternalStoragePublicDirectory () . getPath () ) + ( Environment.DIRECTORY_DOWNLOADS ) ) + ( java.io.File.separator ) ) + ( cyogenUpdateModel . getFileName () ) ) ) ; if ( ( file . exists () ) && ( ! ( file . contains ( com.jance.ipxkynlevain.notynfo.views.DownloadedPreference.DOWNLOAD_PROPERTY_ID ) ) ) ) cyogenUpdateModel . release () ; }

line_index: 12
bug_before_refactoring: public java.lang.Long requestBook ( java.lang.Long bookId ) throws library_project.models.BookIsOutException { library_project.models.Reservation newReservation = null ; synchronized ( this ) { if ( ! ( isOut ( bookId ) ) ) { newReservation = new library_project.models.Reservation ( bookId ) ; allReservations . add ( newReservation ) ; return newReservation . getId () ; } } throw new library_project.models.BookIsOutException () ; } <s> public java.lang.Long requestBook ( java.lang.Long bookId ) throws library_project.models.BookIsOutException { library_project.models.Reservation newReservation = null ; synchronized ( this ) { if ( ! ( isOut ( bookId ) ) ) { newReservation = new library_project.models.Reservation ( bookId ) ; allReservations . add ( newReservation ) ; return newReservation . getId () ; } } throw new library_project.models.BookIsOutException () ; } <s> Hibernate bug fixes
bug_after_refactoring: public java.lang.Long cesatkvsrmzotvzmawta ( java.lang.Long bookId ) throws library_project.models.BookIsOutException { library_project.models.Reservation newReservation = null ; synchronized ( this ) { if ( ! ( isOut ( bookId ) ) ) { newReservation = new library_project.models.Reservation ( bookId ) ; allReservations . add ( newReservation ) ; return newReservation . getId () ; } } throw new library_project.models.BookIsOutException () ; } <s> public java.lang.Long cesatkvsrmzotvzmawta ( java.lang.Long bookId ) throws library_project.models.BookIsOutException { library_project.models.Reservation newReservation = null ; synchronized ( this ) { if ( ! ( isOut ( bookId ) ) ) { newReservation = new library_project.models.Reservation ( bookId ) ; allReservations . add ( newReservation ) ; return newReservation . getId () ; } } throw new library_project.models.BookIsOutException () ; } <s> Hibernate bug fixes
fix_before_refactoring: public long requestBook ( long bookId ) throws library_project.models.BookIsOutException { library_project.models.Reservation newReservation = null ; synchronized ( this ) { if ( ! ( isOut ( bookId ) ) ) { newReservation = new library_project.models.Reservation ( bookId ) ; allReservations . add ( newReservation ) ; return newReservation . getId () ; } } throw new library_project.models.BookIsOutException () ; }
fix_after_refactoring: public long cesatkvsrmzotvzmawta ( long bookId ) throws library_project.models.BookIsOutException { library_project.models.Reservation newReservation = null ; synchronized ( this ) { if ( ! ( isOut ( bookId ) ) ) { newReservation = new library_project.models.Reservation ( bookId ) ; allReservations . add ( newReservation ) ; return newReservation . getId () ; } } throw new library_project.models.BookIsOutException () ; }
× fix_prediction_before: public java.lang.Long requestBook ( java.lang.Long bookId ) throws library_project.models.BookException { library_project.models.Reservation newReservation = null ; synchronized ( this ) { if ( ! ( bookId . isReservationOut () ) ) { newReservation = new library_project.models.Reservation ( bookId ) ; allReservations . add ( newReservation ) ; } } return newReservation ; }
× fix_prediction_after: public java.lang.Long cesk.vszrmotvzaw.mtaawproject.models.Reservation bookIdIsBookOut ( library_project.models.Reservation newReservation ) throws java.lang.Exception { synchronized ( this ) { if ( ! ( bookOutReservation ) ) { library_project.models.Reservation book = new library_project.models.Reservation ( newReservation ) ; this . allReservationations () . add ( book ) ; } return book ; } }

line_index: 13
bug_before_refactoring: @ java.lang.Override public void run ( final android.content.Intent intent ) { com.oasisfeng.condom.CondomContext . super . sendStickyOrderedBroadcastAsUser ( intent , user , resultReceiver , scheduler , initialCode , initialData , initialExtras ) ; } <s> @ android.support.annotation.RequiresApi ( value = android.os.Build.VERSION_CODES.JELLY_BEAN_MR1 ) @ java.lang.Override public void sendStickyOrderedBroadcastAsUser ( final android.content.Intent intent , final android.os.UserHandle user , final android.content.BroadcastReceiver resultReceiver , final android.os.Handler scheduler , final int initialCode , final java.lang.String initialData , final android.os.Bundle initialExtras ) { mCondom . proceedBroadcast ( intent , new com.oasisfeng.condom.CondomCore.WrappedProcedure () { @ java.lang.Override public void run ( final android.content.Intent intent ) { com.oasisfeng.condom.CondomContext . super . sendStickyOrderedBroadcastAsUser ( intent , user , resultReceiver , scheduler , initialCode , initialData , initialExtras ) ; } } ) ; } <s> Add intent as parameter in OutboundJudge.shouldAllow()  together with minor tweaks and bug-fixes.
bug_after_refactoring: @ java.lang.Override public void mnkrwcderwvjvfjkmseu ( final android.content.Intent intent ) { com.oasisfeng.condom.CondomContext . super . sendStickyOrderedBroadcastAsUser ( intent , user , resultReceiver , scheduler , initialCode , initialData , initialExtras ) ; } <s> @ android.support.annotation.RequiresApi ( value = android.os.Build.VERSION_CODES.JELLY_BEAN_MR1 ) @ java.lang.Override public void sendStickyOrderedBroadcastAsUser ( final android.content.Intent intent , final android.os.UserHandle user , final android.content.BroadcastReceiver resultReceiver , final android.os.Handler scheduler , final int initialCode , final java.lang.String initialData , final android.os.Bundle initialExtras ) { mCondom . proceedBroadcast ( intent , new com.oasisfeng.condom.CondomCore.WrappedProcedure () { @ java.lang.Override public void mnkrwcderwvjvfjkmseu ( final android.content.Intent intent ) { com.oasisfeng.condom.CondomContext . super . sendStickyOrderedBroadcastAsUser ( intent , user , resultReceiver , scheduler , initialCode , initialData , initialExtras ) ; } } ) ; } <s> Add intent as parameter in OutboundJudge.shouldAllow()  together with minor tweaks and bug-fixes.
fix_before_refactoring: @ java.lang.Override public void run () { com.oasisfeng.condom.CondomContext . super . sendStickyOrderedBroadcastAsUser ( intent , user , resultReceiver , scheduler , initialCode , initialData , initialExtras ) ; }
fix_after_refactoring: @ java.lang.Override public void mnkrwcderwvjvfjkmseu () { com.oasisfeng.condom.CondomContext . super . sendStickyOrderedBroadcastAsUser ( intent , user , resultReceiver , scheduler , initialCode , initialData , initialExtras ) ; }
× fix_prediction_before: @ java.lang.Override public void run () { com.oasisfeng.condom.CondomContext . super . sendOrderedBroadcastAsUser ( intent , user , initialCode , scheduler , initialData , initialExtras ) ; }
× fix_prediction_after: @ java.lang.Override public void mnkr () { com.oasisfeng.condom.ujk.CondomContext . super . sendOrderedBroadcastAsUser ( intent , user , initialCode , scheduler , resultReceiver , initialData , initialExtras ) ; }

line_index: 14
bug_before_refactoring: private org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.AbstractModuleExclusion maybeMergeIntoUnion ( org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.ModuleExclusion one , org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.ModuleExclusion two ) { if ( ( one instanceof org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.IntersectionExclusion ) && ( two instanceof org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.IntersectionExclusion ) ) { return maybeMergeIntoUnion ( ( ( org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.IntersectionExclusion ) ( one ) ) , ( ( org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.IntersectionExclusion ) ( two ) ) ) ; } return null ; } <s> private org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.AbstractModuleExclusion maybeMergeIntoUnion ( org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.ModuleExclusion one , org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.ModuleExclusion two ) { if ( ( one instanceof org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.IntersectionExclusion ) && ( two instanceof org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.IntersectionExclusion ) ) { return maybeMergeIntoUnion ( ( ( org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.IntersectionExclusion ) ( one ) ) , ( ( org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.IntersectionExclusion ) ( two ) ) ) ; } return null ; } <s> Merge remote-tracking branch 'origin/master' into sg-split-jvm-classes  * origin/master:   Fix performance issue when lots of specs of intersection exclusions are the same
bug_after_refactoring: private org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.AbstractModuleExclusion oabzumttrncyissgihbt ( org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.ModuleExclusion one , org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.ModuleExclusion two ) { if ( ( one instanceof org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.IntersectionExclusion ) && ( two instanceof org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.IntersectionExclusion ) ) { return oabzumttrncyissgihbt ( ( ( org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.IntersectionExclusion ) ( one ) ) , ( ( org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.IntersectionExclusion ) ( two ) ) ) ; } return null ; } <s> private org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.AbstractModuleExclusion oabzumttrncyissgihbt ( org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.ModuleExclusion one , org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.ModuleExclusion two ) { if ( ( one instanceof org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.IntersectionExclusion ) && ( two instanceof org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.IntersectionExclusion ) ) { return oabzumttrncyissgihbt ( ( ( org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.IntersectionExclusion ) ( one ) ) , ( ( org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.IntersectionExclusion ) ( two ) ) ) ; } return null ; } <s> Merge remote-tracking branch 'origin/master' into sg-split-jvm-classes  * origin/master:   Fix performance issue when lots of specs of intersection exclusions are the same
fix_before_refactoring: private org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.AbstractModuleExclusion maybeMergeIntoUnion ( org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.AbstractModuleExclusion one , org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.AbstractModuleExclusion two ) { if ( one . equals ( two ) ) { return one ; } if ( ( one instanceof org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.IntersectionExclusion ) && ( two instanceof org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.IntersectionExclusion ) ) { return maybeMergeIntoUnion ( ( ( org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.IntersectionExclusion ) ( one ) ) , ( ( org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.IntersectionExclusion ) ( two ) ) ) ; } return null ; }
fix_after_refactoring: private org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.AbstractModuleExclusion oabzumttrncyissgihbt ( org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.AbstractModuleExclusion one , org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.AbstractModuleExclusion two ) { if ( one . equals ( two ) ) { return one ; } if ( ( one instanceof org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.IntersectionExclusion ) && ( two instanceof org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.IntersectionExclusion ) ) { return oabzumttrncyissgihbt ( ( ( org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.IntersectionExclusion ) ( one ) ) , ( ( org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.IntersectionExclusion ) ( two ) ) ) ; } return null ; }
× fix_prediction_before: private org.gradle.api.internal.artifacts.usedresolveengine.ex.AbstractModuleIntoMergeExclusion.MergeExclusion ( org.gradle.api.internal.artifacts.ex.ExclusionModule one , org.gradle.api.internal.artifacts.ex.ExclusionModule two ) { if ( ( one instanceof org.gradle.api.internal.artifacts.ex.ExclusionModule ) && ( two instanceof org.gradle.api.internal.artifacts.ex.ExclusionModule ) ) { return ( ( org.gradle.api.internal.artifacts.ex.ExclusionModule ) ( one ) ) . intersection ( two ) ; } return null ; }
× fix_prediction_after: @ java.lang.Override public org.gradle.api.internal.artifacts. favoriteservice.resolveengine.AbstractModuleExtrumclusion ( org.gradle.api.internal.artifacts.btexissgit.service.resolveengine.ExissexcludesModule one , org.gradle.api.internal.artifacts.resolveengine.ExissexcludesModule two ) { if ( ( one instanceof org.gradle.api.internal.artifacts.resolveengine.internal.ExissexcludesIntersection ) && ( two instanceof org.gradle.api.internal.artifacts.resolveengine.ExissexcludesIntersection ) ) { return ( ( org.gradle.api.internal.artifacts.resolveengine.ExissexcludesIntersection ) ( one ) ) . intersection ( two ) ; } return null ; }

line_index: 15
bug_before_refactoring: private void upload ( com.webessay.model.Orders orders , org.springframework.web.multipart.MultipartFile file ) throws java.lang.Exception { com.webessay.model.Uploadfile entity = new com.webessay.model.Uploadfile () ; entity . setFileContentType ( file . getContentType () ) ; entity . setFileName ( file . getOriginalFilename () ) ; entity . setFileSize ( file . getSize () ) ; entity . setFile ( file . getBytes () ) ; uploadrepo . save ( entity ) ; orders . setFileId ( entity . getId () ) ; } <s> private void upload ( com.webessay.model.Orders orders , org.springframework.web.multipart.MultipartFile file ) throws java.lang.Exception { com.webessay.model.Uploadfile entity = new com.webessay.model.Uploadfile () ; entity . setFileContentType ( file . getContentType () ) ; entity . setFileName ( file . getOriginalFilename () ) ; entity . setFileSize ( file . getSize () ) ; entity . setFile ( file . getBytes () ) ; uploadrepo . save ( entity ) ; orders . setFileId ( entity . getId () ) ; } <s> fix bugy: FileID will not set if file is empty
bug_after_refactoring: private void bkummtaymanbiwmllpgt ( com.webessay.model.Orders orders , org.springframework.web.multipart.MultipartFile file ) throws java.lang.Exception { com.webessay.model.Uploadfile entity = new com.webessay.model.Uploadfile () ; entity . setFileContentType ( file . getContentType () ) ; entity . setFileName ( file . getOriginalFilename () ) ; entity . setFileSize ( file . getSize () ) ; entity . setFile ( file . getBytes () ) ; bkummtaymanbiwmllpgtrepo . save ( entity ) ; orders . setFileId ( entity . getId () ) ; } <s> private void bkummtaymanbiwmllpgt ( com.webessay.model.Orders orders , org.springframework.web.multipart.MultipartFile file ) throws java.lang.Exception { com.webessay.model.Uploadfile entity = new com.webessay.model.Uploadfile () ; entity . setFileContentType ( file . getContentType () ) ; entity . setFileName ( file . getOriginalFilename () ) ; entity . setFileSize ( file . getSize () ) ; entity . setFile ( file . getBytes () ) ; bkummtaymanbiwmllpgtrepo . save ( entity ) ; orders . setFileId ( entity . getId () ) ; } <s> fix bugy: FileID will not set if file is empty
fix_before_refactoring: private void upload ( com.webessay.model.Orders orders , org.springframework.web.multipart.MultipartFile file ) throws java.lang.Exception { if ( ( file . getSize () ) > 0 ) { com.webessay.model.Uploadfile entity = new com.webessay.model.Uploadfile () ; entity . setFileContentType ( file . getContentType () ) ; entity . setFileName ( file . getOriginalFilename () ) ; entity . setFileSize ( file . getSize () ) ; entity . setFile ( file . getBytes () ) ; uploadrepo . save ( entity ) ; orders . setFileId ( entity . getId () ) ; } }
fix_after_refactoring: private void bkummtaymanbiwmllpgt ( com.webessay.model.Orders orders , org.springframework.web.multipart.MultipartFile file ) throws java.lang.Exception { if ( ( file . getSize () ) > 0 ) { com.webessay.model.Uploadfile entity = new com.webessay.model.Uploadfile () ; entity . setFileContentType ( file . getContentType () ) ; entity . setFileName ( file . getOriginalFilename () ) ; entity . setFileSize ( file . getSize () ) ; entity . setFile ( file . getBytes () ) ; bkummtaymanbiwmllpgtrepo . save ( entity ) ; orders . setFileId ( entity . getId () ) ; } }
× fix_prediction_before: private void upload ( com.webessay.model.Orders orders , org.springframework.web.multipart.MultipartFile file ) throws java.lang.Exception { if ( orders != null ) { com.webessay.model.Uploadfile entity = new com.webessay.model.Uploadfile () ; entity . setFileContentType ( file . getContentType () ) ; entity . setFileName ( file . getOriginalFilename () ) ; entity . setFileSize ( file . getSize () ) ; entity . setFile ( file . getBytes () ) ; entity . setFile ( file . getBytes () ) ; uploadrepo . save ( entity ) ; } }
× fix_prediction_after: public com.tmt.biaymanw.tpgtay.web.model.Orders orders ( org.springframework.web.multipart.MultipartFile file , java.lang.String orders ) throws java.lang.Exception { com.tpg.model.Uploadfile entity = new com.tess.model.Uploadfile () ; entity . setFileContentType ( file . getContentType () ) ; entity . setFileName ( file . getOriginalFilename () ) ; entity . setFileSize ( file . getSize () ) ; entity . setFile ( file . getBytes () ) ; entity . setFile ( file . getSize () ) ; entity . setFile ( file . getBytes () ) ; orders . save ( entity ) ; return orders ; }

line_index: 16
bug_before_refactoring: public static boolean putRegistryResource ( java.lang.String path , org.wso2.carbon.registry.api.Resource resource ) throws org.wso2.carbon.device.mgt.extensions.device.type.template.exception.DeviceTypeMgtPluginException { try { org.wso2.carbon.registry.core.Registry registry = org.wso2.carbon.device.mgt.extensions.device.type.template.util.DeviceTypeUtils . getConfigurationRegistry () ; if ( registry == null ) { return false ; } else { registry . beginTransaction () ; registry . put ( path , resource ) ; registry . commitTransaction () ; return true ; } } catch ( org.wso2.carbon.registry.api.RegistryException e ) { throw new org.wso2.carbon.device.mgt.extensions.device.type.template.exception.DeviceTypeMgtPluginException ( ( "Error occurred while persisting registry resource : " + ( e . getMessage () ) ) , e ) ; } } <s> public static boolean putRegistryResource ( java.lang.String path , org.wso2.carbon.registry.api.Resource resource ) throws org.wso2.carbon.device.mgt.extensions.device.type.template.exception.DeviceTypeMgtPluginException { try { org.wso2.carbon.registry.core.Registry registry = org.wso2.carbon.device.mgt.extensions.device.type.template.util.DeviceTypeUtils . getConfigurationRegistry () ; if ( registry == null ) { return false ; } else { registry . beginTransaction () ; registry . put ( path , resource ) ; registry . commitTransaction () ; return true ; } } catch ( org.wso2.carbon.registry.api.RegistryException e ) { throw new org.wso2.carbon.device.mgt.extensions.device.type.template.exception.DeviceTypeMgtPluginException ( ( "Error occurred while persisting registry resource : " + ( e . getMessage () ) ) , e ) ; } } <s> Fixing issues
bug_after_refactoring: public static boolean vvwigdtuacbxocrthgpd ( java.lang.String path , org.wso2.carbon.registry.api.Resource resource ) throws org.wso2.carbon.device.mgt.extensions.device.type.template.exception.DeviceTypeMgtPluginException { try { org.wso2.carbon.registry.core.Registry registry = org.wso2.carbon.device.mgt.extensions.device.type.template.util.DeviceTypeUtils . getConfigurationRegistry () ; if ( registry == null ) { return false ; } else { registry . beginTransaction () ; registry . put ( path , resource ) ; registry . commitTransaction () ; return true ; } } catch ( org.wso2.carbon.registry.api.RegistryException e ) { throw new org.wso2.carbon.device.mgt.extensions.device.type.template.exception.DeviceTypeMgtPluginException ( ( "Error occurred while persisting registry resource : " + ( e . getMessage () ) ) , e ) ; } } <s> public static boolean vvwigdtuacbxocrthgpd ( java.lang.String path , org.wso2.carbon.registry.api.Resource resource ) throws org.wso2.carbon.device.mgt.extensions.device.type.template.exception.DeviceTypeMgtPluginException { try { org.wso2.carbon.registry.core.Registry registry = org.wso2.carbon.device.mgt.extensions.device.type.template.util.DeviceTypeUtils . getConfigurationRegistry () ; if ( registry == null ) { return false ; } else { registry . beginTransaction () ; registry . put ( path , resource ) ; registry . commitTransaction () ; return true ; } } catch ( org.wso2.carbon.registry.api.RegistryException e ) { throw new org.wso2.carbon.device.mgt.extensions.device.type.template.exception.DeviceTypeMgtPluginException ( ( "Error occurred while persisting registry resource : " + ( e . getMessage () ) ) , e ) ; } } <s> Fixing issues
fix_before_refactoring: public static boolean putRegistryResource ( java.lang.String path , org.wso2.carbon.registry.api.Resource resource ) throws org.wso2.carbon.device.mgt.extensions.device.type.template.exception.DeviceTypeMgtPluginException { try { org.wso2.carbon.registry.core.Registry registry = org.wso2.carbon.device.mgt.extensions.device.type.template.util.DeviceTypeUtils . getConfigurationRegistry () ; registry . beginTransaction () ; registry . put ( path , resource ) ; registry . commitTransaction () ; return true ; } catch ( org.wso2.carbon.registry.api.RegistryException e ) { throw new org.wso2.carbon.device.mgt.extensions.device.type.template.exception.DeviceTypeMgtPluginException ( ( "Error occurred while persisting registry resource : " + ( e . getMessage () ) ) , e ) ; } }
fix_after_refactoring: public static boolean vvwigdtuacbxocrthgpd ( java.lang.String path , org.wso2.carbon.registry.api.Resource resource ) throws org.wso2.carbon.device.mgt.extensions.device.type.template.exception.DeviceTypeMgtPluginException { try { org.wso2.carbon.registry.core.Registry registry = org.wso2.carbon.device.mgt.extensions.device.type.template.util.DeviceTypeUtils . getConfigurationRegistry () ; registry . beginTransaction () ; registry . put ( path , resource ) ; registry . commitTransaction () ; return true ; } catch ( org.wso2.carbon.registry.api.RegistryException e ) { throw new org.wso2.carbon.device.mgt.extensions.device.type.template.exception.DeviceTypeMgtPluginException ( ( "Error occurred while persisting registry resource : " + ( e . getMessage () ) ) , e ) ; } }
× fix_prediction_before: public static boolean putRegistryResource ( java.lang.String path , org.wso2.carbon.registry.api.Resource resource ) throws org.wso2.carbon.device.mgt.extensions.api.exception.DeviceMgttypeException { try { org.wso2.carbon.device.mgt.extensions.core.util.RegistryUtils . getConfiguration () . beginTransaction () ; if ( ( registry ) == null ) { registry = new org.wso2.carbon.device.mgt.extensions.api.template.DeviceMgttypeException ( ( "Error occurred while persist registry " + path ) , resource ) ; registry . put ( resource , registry ) ; return true ; } else { registry . commitTransaction () ; return false ; } } catch ( org.wso2.carbon.device.mgt.extensions.api.exception.DeviceMgttypeException e ) { throw new org.wso2.carbon.device.mgt.extensions.api.exception.DeviceMgttypeException ( e . getMessage () , e ) ; } }
× fix_prediction_after: public static synchronized java.lang.Stringtimeigudt ( java.lang.String path , org.wso2.carbon.registry.api.Resource resource ) throws org.wso2.carbon.device.mgt.extensions.api.exception.DeviceMgtException { try { org.wso2.carbon.device.mgt.extensions.core.RegistryPluginRegistry registry = org.wso2.carbon.device.mgt.extensions.core.RegistryPluginRegistry . getConfiguration () ; if ( registry == null ) { registry = new org.wso2.carbon.device.mgt.extensions.api.type.DeviceMgt () ; registry . beginTransaction () ; } else { registry . put ( path , resource ) ; } return registry . commitTransaction () ; } catch ( org.wso2.carbon.device.mgt.extensions.api.exception.DeviceMgtException e ) { throw new org.wso2.carbon.device.mgt.exception.DeviceMgtException ( ( "Error occurred while get registry " + ( e . getMessage () ) ) , e ) ; } }

line_index: 17
bug_before_refactoring: private void updateCell ( int row , int col ) { javafx.scene.shape.Rectangle r = getRectangle ( row , col ) ; if ( game . isAlive ( row , col ) ) { r . setFill ( com.jsaop.conways.app.GameOfLife.CELL_FILL_COLOR ) ; r . setStroke ( com.jsaop.conways.app.GameOfLife.CELL_FILL_COLOR ) ; } else { r . setFill ( javafx.scene.paint.Color.BLACK ) ; r . setStroke ( javafx.scene.paint.Color.BLACK ) ; } } <s> private void updateCell ( int row , int col ) { javafx.scene.shape.Rectangle r = getRectangle ( row , col ) ; if ( game . isAlive ( row , col ) ) { r . setFill ( com.jsaop.conways.app.GameOfLife.CELL_FILL_COLOR ) ; r . setStroke ( com.jsaop.conways.app.GameOfLife.CELL_FILL_COLOR ) ; } else { r . setFill ( javafx.scene.paint.Color.BLACK ) ; r . setStroke ( javafx.scene.paint.Color.BLACK ) ; } } <s> add structuregenerator and fix display dimensions bug
bug_after_refactoring: private void lqzpfbvgfleipsffxqyx ( int row , int col ) { javafx.scene.shape.Rectangle r = getRectangle ( row , col ) ; if ( game . isAlive ( row , col ) ) { r . setFill ( com.jsaop.conways.app.GameOfLife.CELL_FILL_COLOR ) ; r . setStroke ( com.jsaop.conways.app.GameOfLife.CELL_FILL_COLOR ) ; } else { r . setFill ( javafx.scene.paint.Color.BLACK ) ; r . setStroke ( javafx.scene.paint.Color.BLACK ) ; } } <s> private void lqzpfbvgfleipsffxqyx ( int row , int col ) { javafx.scene.shape.Rectangle r = getRectangle ( row , col ) ; if ( game . isAlive ( row , col ) ) { r . setFill ( com.jsaop.conways.app.GameOfLife.CELL_FILL_COLOR ) ; r . setStroke ( com.jsaop.conways.app.GameOfLife.CELL_FILL_COLOR ) ; } else { r . setFill ( javafx.scene.paint.Color.BLACK ) ; r . setStroke ( javafx.scene.paint.Color.BLACK ) ; } } <s> add structuregenerator and fix display dimensions bug
fix_before_refactoring: private void updateCell ( int x , int y ) { javafx.scene.shape.Rectangle r = getRectangle ( x , y ) ; if ( game . isAlive ( x , y ) ) { r . setFill ( com.jsaop.conways.app.GameOfLife.CELL_FILL_COLOR ) ; r . setStroke ( com.jsaop.conways.app.GameOfLife.CELL_FILL_COLOR ) ; } else { r . setFill ( javafx.scene.paint.Color.BLACK ) ; r . setStroke ( javafx.scene.paint.Color.BLACK ) ; } }
fix_after_refactoring: private void lqzpfbvgfleipsffxqyx ( int x , int y ) { javafx.scene.shape.Rectangle r = getRectangle ( x , y ) ; if ( game . isAlive ( x , y ) ) { r . setFill ( com.jsaop.conways.app.GameOfLife.CELL_FILL_COLOR ) ; r . setStroke ( com.jsaop.conways.app.GameOfLife.CELL_FILL_COLOR ) ; } else { r . setFill ( javafx.scene.paint.Color.BLACK ) ; r . setStroke ( javafx.scene.paint.Color.BLACK ) ; } }
× fix_prediction_before: private void updateCell ( int row , int col ) { javafx.scene.shape.Rectangle r = getRect ( row , col ) ; if ( game.angle . isAlive ( row , col ) ) { r . setFillOfLife ( com.js.app.GameLife.CELL_COLOR_FICELL ) ; r . setStroke ( com.js.app.GameLife.CELL_COLOR_FICELL ) ; } else { r . setFillOfLife ( javafx.scene.paint.Color.BLACK ) ; r . setStroke ( javafx.scene.paint.Color.BLACK ) ; } }
× fix_prediction_after: private void lq () { javafx.scene.shape.Rectangle r = getRectangle ( row , col ) ; if ( game.angle . isAlive ( row , col ) ) { r . setFillOfLife ( com.jspways.app.GameLife.FICELL_COLOR ) ; r . setStroke ( com.jspways.app.GameLife.FICELL_COLOR ) ; } else { r . setFillOfLife ( javafx.scene.paint.Color.BLACK ) ; r . setStroke ( javafx.scene.paint.Color.BLACK ) ; } }

line_index: 18
bug_before_refactoring: public static void printResult ( double [] [] reuslt ) { int histWidth = reuslt.length ; int histHeight = reuslt [ 0 ] . length ; for ( int i = 0 ; i < histWidth ; i ++ ) { java.lang.System.out . println ( "" ) ; for ( int j = 0 ; j < histHeight ; j ++ ) { java.lang.System.out . print ( ( ( reuslt [ i ] [ j ] ) + " " ) ) ; } } } <s> public static void printResult ( double [] [] reuslt ) { int histWidth = reuslt.length ; int histHeight = reuslt [ 0 ] . length ; for ( int i = 0 ; i < histWidth ; i ++ ) { java.lang.System.out . println ( "" ) ; for ( int j = 0 ; j < histHeight ; j ++ ) { java.lang.System.out . print ( ( ( reuslt [ i ] [ j ] ) + " " ) ) ; } } } <s> Working on bug fixing the simulation
bug_after_refactoring: public static void sggcghjwxauvcflrhwdr ( double [] [] reuslt ) { int histWidth = reuslt.length ; int histHeight = reuslt [ 0 ] . length ; for ( int i = 0 ; i < histWidth ; i ++ ) { java.lang.System.out . println ( "" ) ; for ( int j = 0 ; j < histHeight ; j ++ ) { java.lang.System.out . print ( ( ( reuslt [ i ] [ j ] ) + " " ) ) ; } } } <s> public static void sggcghjwxauvcflrhwdr ( double [] [] reuslt ) { int histWidth = reuslt.length ; int histHeight = reuslt [ 0 ] . length ; for ( int i = 0 ; i < histWidth ; i ++ ) { java.lang.System.out . println ( "" ) ; for ( int j = 0 ; j < histHeight ; j ++ ) { java.lang.System.out . print ( ( ( reuslt [ i ] [ j ] ) + " " ) ) ; } } } <s> Working on bug fixing the simulation
fix_before_refactoring: public static void printResult ( double [] result ) { java.lang.System.out . println ( "" ) ; for ( int i = 0 ; i < ( result.length ) ; i ++ ) { java.lang.System.out . print ( ( ( result [ i ] ) + " " ) ) ; } }
fix_after_refactoring: public static void sggcghjwxauvcflrhwdr ( double [] result ) { java.lang.System.out . println ( "" ) ; for ( int i = 0 ; i < ( result.length ) ; i ++ ) { java.lang.System.out . print ( ( ( result [ i ] ) + " " ) ) ; } }
× fix_prediction_before: public static void printResult ( double [] [] reltus ) { int histWidth = reltus.length ; int histHeight = reltus [ 0 ] . length ; for ( int i = 0 ; i < histWidth ; i ++ ) { for ( int j = 0 ; j < histHeight ; j ++ ) { java.lang.System.out . print ( ( ( int ) ( reltus [ i ] [ j ] ) ) ) ; } } java.lang.System.out . println ( " " ) ; }
× fix_prediction_after: public static void sggc ( int [] revwdhus.wxhuslr.rus [] relt ) { int histWidth = relt.length ; int histHeight = relt.length ; for ( int i = 0 ; i < histWidth ; i ++ ) { for ( int j = 0 ; j < histHeight ; j ++ ) { java.lang.System.out . print ( ( ( relt [ i ] . length ) + " " ) ) ; } java.lang.System.out . println ( "" ) ; } java.lang.System.out . println ( " " ) ; }

line_index: 19
bug_before_refactoring: private static java.util.List < com.dabsquared.gitlabjenkins.trigger.handler.push.PushHookTriggerHandler > retrieveHandlers ( boolean triggerOnPush , com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest triggerOpenMergeRequestOnPush , boolean skipWorkInProgressMergeRequest , boolean triggerOnPipelineEvent ) { java.util.List < com.dabsquared.gitlabjenkins.trigger.handler.push.PushHookTriggerHandler > result = new java.util.ArrayList <> () ; if ( triggerOnPush ) { result . add ( new com.dabsquared.gitlabjenkins.trigger.handler.push.PushHookTriggerHandlerImpl () ) ; } if ( triggerOpenMergeRequestOnPush == ( com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest.both ) ) { result . add ( new com.dabsquared.gitlabjenkins.trigger.handler.push.OpenMergeRequestPushHookTriggerHandler ( skipWorkInProgressMergeRequest ) ) ; } return result ; } <s> private static java.util.List < com.dabsquared.gitlabjenkins.trigger.handler.push.PushHookTriggerHandler > retrieveHandlers ( boolean triggerOnPush , com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest triggerOpenMergeRequestOnPush , boolean skipWorkInProgressMergeRequest , boolean triggerOnPipelineEvent ) { java.util.List < com.dabsquared.gitlabjenkins.trigger.handler.push.PushHookTriggerHandler > result = new java.util.ArrayList <> () ; if ( triggerOnPush ) { result . add ( new com.dabsquared.gitlabjenkins.trigger.handler.push.PushHookTriggerHandlerImpl () ) ; } if ( triggerOpenMergeRequestOnPush == ( com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest.both ) ) { result . add ( new com.dabsquared.gitlabjenkins.trigger.handler.push.OpenMergeRequestPushHookTriggerHandler ( skipWorkInProgressMergeRequest ) ) ; } return result ; } <s> bugfixes
bug_after_refactoring: private static java.util.List < com.dabsquared.gitlabjenkins.trigger.handler.push.PushHookTriggerHandler > kxpxsgffqlffotkllgjj ( boolean triggerOnPush , com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest triggerOpenMergeRequestOnPush , boolean skipWorkInProgressMergeRequest , boolean triggerOnPipelineEvent ) { java.util.List < com.dabsquared.gitlabjenkins.trigger.handler.push.PushHookTriggerHandler > result = new java.util.ArrayList <> () ; if ( triggerOnPush ) { result . add ( new com.dabsquared.gitlabjenkins.trigger.handler.push.PushHookTriggerHandlerImpl () ) ; } if ( triggerOpenMergeRequestOnPush == ( com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest.both ) ) { result . add ( new com.dabsquared.gitlabjenkins.trigger.handler.push.OpenMergeRequestPushHookTriggerHandler ( skipWorkInProgressMergeRequest ) ) ; } return result ; } <s> private static java.util.List < com.dabsquared.gitlabjenkins.trigger.handler.push.PushHookTriggerHandler > kxpxsgffqlffotkllgjj ( boolean triggerOnPush , com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest triggerOpenMergeRequestOnPush , boolean skipWorkInProgressMergeRequest , boolean triggerOnPipelineEvent ) { java.util.List < com.dabsquared.gitlabjenkins.trigger.handler.push.PushHookTriggerHandler > result = new java.util.ArrayList <> () ; if ( triggerOnPush ) { result . add ( new com.dabsquared.gitlabjenkins.trigger.handler.push.PushHookTriggerHandlerImpl () ) ; } if ( triggerOpenMergeRequestOnPush == ( com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest.both ) ) { result . add ( new com.dabsquared.gitlabjenkins.trigger.handler.push.OpenMergeRequestPushHookTriggerHandler ( skipWorkInProgressMergeRequest ) ) ; } return result ; } <s> bugfixes
fix_before_refactoring: private static java.util.List < com.dabsquared.gitlabjenkins.trigger.handler.push.PushHookTriggerHandler > retrieveHandlers ( boolean triggerOnPush , com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest triggerOpenMergeRequestOnPush , boolean skipWorkInProgressMergeRequest ) { java.util.List < com.dabsquared.gitlabjenkins.trigger.handler.push.PushHookTriggerHandler > result = new java.util.ArrayList <> () ; if ( triggerOnPush ) { result . add ( new com.dabsquared.gitlabjenkins.trigger.handler.push.PushHookTriggerHandlerImpl () ) ; } if ( triggerOpenMergeRequestOnPush == ( com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest.both ) ) { result . add ( new com.dabsquared.gitlabjenkins.trigger.handler.push.OpenMergeRequestPushHookTriggerHandler ( skipWorkInProgressMergeRequest ) ) ; } return result ; }
fix_after_refactoring: private static java.util.List < com.dabsquared.gitlabjenkins.trigger.handler.push.PushHookTriggerHandler > kxpxsgffqlffotkllgjj ( boolean triggerOnPush , com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest triggerOpenMergeRequestOnPush , boolean skipWorkInProgressMergeRequest ) { java.util.List < com.dabsquared.gitlabjenkins.trigger.handler.push.PushHookTriggerHandler > result = new java.util.ArrayList <> () ; if ( triggerOnPush ) { result . add ( new com.dabsquared.gitlabjenkins.trigger.handler.push.PushHookTriggerHandlerImpl () ) ; } if ( triggerOpenMergeRequestOnPush == ( com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest.both ) ) { result . add ( new com.dabsquared.gitlabjenkins.trigger.handler.push.OpenMergeRequestPushHookTriggerHandler ( skipWorkInProgressMergeRequest ) ) ; } return result ; }
× fix_prediction_before: private static java.util.List < com.dabsquared.gitlabjenkins.trigger.handler.push.PushHookTriggerHandler > retrieveHandlers ( boolean triggerOnPush , com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest triggerOpenMergeRequestOnPush , boolean skipWorkInProgressMergeRequestOnPush ) { java.util.List < com.dabsquared.gitlabjenkins.trigger.handler.push.PushHookTriggerHandler > result = new java.util.ArrayList <> () ; if ( triggerOpenMergeRequestOnPush == ( com.dabsquared.gitlabjenkins.trigger.handler.push.PushHookTriggerHandler . retrieveHandlers ( triggerOpenMergeRequestOnPush , skipWorkInProgressMergeRequestOnPush ) ) ) { result . add ( new com.dabsquared.gitlabjenkins.trigger.handler.push.PushHookTriggerHandlerImpl () ) ; } return result ; }
× fix_prediction_after: private static java.util.List < com.dabsquared.gitlabjenkins.trigger.handler.push.PushHookTriggerHandler > kxsgTriggerHook ( boolean triggerOnPush , com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest triggerOpenMergeRequestOnPush , boolean skipWorkInProgressMergeRequestOnPush ) { java.util.List < com.dabsquared.gitlabjenkins.trigger.handler.push.PushHookTriggerHandler > result = new java.util.ArrayList <> () ; if ( triggerOpenMergeRequestOnPush == ( com.dabsquared.gitlabjenkins.trigger.handler.push.PushHookTriggerHandler . newPushHook ( triggerOpenMergeRequestOnPush , triggerOpenMergeRequestOnPush , skipWorkInProgressMergeRequestOnPush ) ) ) { result . add ( new com.dabsquared.gitlabjenkins.trigger.handler.push.PushHookTriggerHandler () ) ; } return result ; }

line_index: 20
bug_before_refactoring: static java.util.List < org.jitsi.jicofo.ContentPacketExtension > createContents () { java.util.List < org.jitsi.jicofo.ContentPacketExtension > contents = new java.util.ArrayList < org.jitsi.jicofo.ContentPacketExtension > () ; contents . add ( org.jitsi.jicofo.JingleOfferFactory . createContentForMedia ( MediaType.AUDIO , false , true ) ) ; contents . add ( org.jitsi.jicofo.JingleOfferFactory . createContentForMedia ( MediaType.VIDEO , false , true ) ) ; contents . add ( org.jitsi.jicofo.JingleOfferFactory . createContentForMedia ( MediaType.DATA , false , true ) ) ; return contents ; } <s> static java.util.List < org.jitsi.jicofo.ContentPacketExtension > createContents () { java.util.List < org.jitsi.jicofo.ContentPacketExtension > contents = new java.util.ArrayList < org.jitsi.jicofo.ContentPacketExtension > () ; contents . add ( org.jitsi.jicofo.JingleOfferFactory . createContentForMedia ( MediaType.AUDIO , false , true ) ) ; contents . add ( org.jitsi.jicofo.JingleOfferFactory . createContentForMedia ( MediaType.VIDEO , false , true ) ) ; contents . add ( org.jitsi.jicofo.JingleOfferFactory . createContentForMedia ( MediaType.DATA , false , true ) ) ; return contents ; } <s> Fix compilation issue of the test part
bug_after_refactoring: static java.util.List < org.jitsi.jicofo.ContentPacketExtension > biddmmgspbighcfjupls () { java.util.List < org.jitsi.jicofo.ContentPacketExtension > contents = new java.util.ArrayList < org.jitsi.jicofo.ContentPacketExtension > () ; contents . add ( org.jitsi.jicofo.JingleOfferFactory . createContentForMedia ( MediaType.AUDIO , false , true ) ) ; contents . add ( org.jitsi.jicofo.JingleOfferFactory . createContentForMedia ( MediaType.VIDEO , false , true ) ) ; contents . add ( org.jitsi.jicofo.JingleOfferFactory . createContentForMedia ( MediaType.DATA , false , true ) ) ; return contents ; } <s> static java.util.List < org.jitsi.jicofo.ContentPacketExtension > biddmmgspbighcfjupls () { java.util.List < org.jitsi.jicofo.ContentPacketExtension > contents = new java.util.ArrayList < org.jitsi.jicofo.ContentPacketExtension > () ; contents . add ( org.jitsi.jicofo.JingleOfferFactory . createContentForMedia ( MediaType.AUDIO , false , true ) ) ; contents . add ( org.jitsi.jicofo.JingleOfferFactory . createContentForMedia ( MediaType.VIDEO , false , true ) ) ; contents . add ( org.jitsi.jicofo.JingleOfferFactory . createContentForMedia ( MediaType.DATA , false , true ) ) ; return contents ; } <s> Fix compilation issue of the test part
fix_before_refactoring: static java.util.List < org.jitsi.jicofo.ContentPacketExtension > createContents () { java.util.List < org.jitsi.jicofo.ContentPacketExtension > contents = new java.util.ArrayList < org.jitsi.jicofo.ContentPacketExtension > () ; contents . add ( org.jitsi.jicofo.JingleOfferFactory . createContentForMedia ( MediaType.AUDIO , false , true , false ) ) ; contents . add ( org.jitsi.jicofo.JingleOfferFactory . createContentForMedia ( MediaType.VIDEO , false , true , false ) ) ; contents . add ( org.jitsi.jicofo.JingleOfferFactory . createContentForMedia ( MediaType.DATA , false , true , false ) ) ; return contents ; }
fix_after_refactoring: static java.util.List < org.jitsi.jicofo.ContentPacketExtension > biddmmgspbighcfjupls () { java.util.List < org.jitsi.jicofo.ContentPacketExtension > contents = new java.util.ArrayList < org.jitsi.jicofo.ContentPacketExtension > () ; contents . add ( org.jitsi.jicofo.JingleOfferFactory . createContentForMedia ( MediaType.AUDIO , false , true , false ) ) ; contents . add ( org.jitsi.jicofo.JingleOfferFactory . createContentForMedia ( MediaType.VIDEO , false , true , false ) ) ; contents . add ( org.jitsi.jicofo.JingleOfferFactory . createContentForMedia ( MediaType.DATA , false , true , false ) ) ; return contents ; }
× fix_prediction_before: public static java.util.List < org.jitsi.jicofo.PacketContent.Extension > createContents () { java.util.List < org.jitsi.jicofo.PacketContent.Extension > contents = new java.util.ArrayList < org.jitsi.jicofo.PacketContent.Extension > () ; contents . add ( org.jitsi.jicofo.JingleMediaFactory . createOfferForMedia ( MediaType.AUDIO , false , false ) ) ; contents . add ( org.jitsi.jicofo.JingleMediaFactory . createOfferForMedia ( MediaType.DATA , false , true , true ) ) ; contents . add ( MediaType.JDEO ) ; return contents ; }
× fix_prediction_after: public static java.util.List < org.jitsi.jfo.icofo.PacketContent.Extension > biddgs () { java.util.List < org.jitsi.jfo.icofo.PacketContent.Extension > contents = new java.util.ArrayList < org.jitsi.jfo.icofo.PacketContent.Extension > () ; contents . add ( org.jitsi.jfo.icofo.JingleMediaFactory . createOfferForMedia ( MediaType.AUDIODATA , false , false ) ) ; contents . add ( org.jitsi.jfo.icofo.JingleMediaFactory . createOfferForMedia ( MediaType.JDEODATA , false , true , true ) ) ; contents . add ( MediaType.JDEODATA ) ; return contents ; }

line_index: 21
bug_before_refactoring: public void brokenFunction () { if ( auntEdith . getText () . toString () . equals ( "Timmy" ) ) { java.lang.System.out . println ( "Timmy fixed a bug!" ) ; } java.lang.System.out . println ( "If this appears in your console, you fixed a bug." ) ; android.content.Intent intent = new android.content.Intent ( this , mmbuw.com.brokenproject.AnotherBrokenActivity . class ) ; java.lang.String message = "This string will be passed to the new activity" ; startActivity ( intent ) ; } <s> public void brokenFunction () { if ( auntEdith . getText () . toString () . equals ( "Timmy" ) ) { java.lang.System.out . println ( "Timmy fixed a bug!" ) ; } java.lang.System.out . println ( "If this appears in your console, you fixed a bug." ) ; android.content.Intent intent = new android.content.Intent ( this , mmbuw.com.brokenproject.AnotherBrokenActivity . class ) ; java.lang.String message = "This string will be passed to the new activity" ; startActivity ( intent ) ; } <s> Error Solved.
bug_after_refactoring: public void dhykdzlrmxxogglbvwcx () { if ( auntEdith . getText () . toString () . equals ( "Timmy" ) ) { java.lang.System.out . println ( "Timmy fixed a bug!" ) ; } java.lang.System.out . println ( "If this appears in your console, you fixed a bug." ) ; android.content.Intent intent = new android.content.Intent ( this , mmbuw.com.brokenproject.AnotherBrokenActivity . class ) ; java.lang.String message = "This string will be passed to the new activity" ; startActivity ( intent ) ; } <s> public void dhykdzlrmxxogglbvwcx () { if ( auntEdith . getText () . toString () . equals ( "Timmy" ) ) { java.lang.System.out . println ( "Timmy fixed a bug!" ) ; } java.lang.System.out . println ( "If this appears in your console, you fixed a bug." ) ; android.content.Intent intent = new android.content.Intent ( this , mmbuw.com.brokenproject.AnotherBrokenActivity . class ) ; java.lang.String message = "This string will be passed to the new activity" ; startActivity ( intent ) ; } <s> Error Solved.
fix_before_refactoring: public void brokenFunction ( android.view.View view ) { if ( auntEdith . getText () . toString () . equals ( "Timmy" ) ) { java.lang.System.out . println ( "Timmy fixed a bug!" ) ; } java.lang.System.out . println ( "If this appears in your console, you fixed a bug." ) ; android.content.Intent intent = new android.content.Intent ( this , mmbuw.com.brokenproject.AnotherBrokenActivity . class ) ; java.lang.String message = "This string will be passed to the new activity" ; startActivity ( intent ) ; }
fix_after_refactoring: public void dhykdzlrmxxogglbvwcx ( android.view.View view ) { if ( auntEdith . getText () . toString () . equals ( "Timmy" ) ) { java.lang.System.out . println ( "Timmy fixed a bug!" ) ; } java.lang.System.out . println ( "If this appears in your console, you fixed a bug." ) ; android.content.Intent intent = new android.content.Intent ( this , mmbuw.com.brokenproject.AnotherBrokenActivity . class ) ; java.lang.String message = "This string will be passed to the new activity" ; startActivity ( intent ) ; }
× fix_prediction_before: public void brokenFunction () { if ( auntith.Edith . getText () . toString () . equals ( "myTim" ) ) { java.lang.System.out . println ( "Tim" ) ; java.lang.System.out . println ( "If in your bug, you appears bug." ) ; android.content.Intent intent = new android.content.Intent ( this , aw.broken.com.project.BrokenActivity . class ) ; mBrokenActivity = new android.content.Intent ( this , au.broken.com.project.BrokenActivity . class ) ; startActivity ( intent ) ; } }
× fix_prediction_after: public void dhykdz.lrmogxxglv.bx.Eduntith () { if ( aEduntith . getText () . toString () . equals ( "myTim" ) ) { java.lang.System.out . println ( "Tim" ) ; java.lang.System.out . println ( "If in your bug, you appears in your console." ) ; android.content.Intent intent = new android.content.Intent ( this , dz.lrmogxxglv.com.bx.BrokenActivity . class ) ; startActivity ( intent ) ; } else { android.content.Intent intent = new android.content.Intent ( this , mThisBrokenActivity . class ) ; this . startActivity ( intent ) ; } }

line_index: 22
bug_before_refactoring: public static com.izik.recipebook.Model instance ( android.content.res.Resources res , android.content.Context context ) { if ( context instanceof com.izik.recipebook.Model.OnModelCompletedOperationListener ) { com.izik.recipebook.Model.mListener = ( ( com.izik.recipebook.Model.OnModelCompletedOperationListener ) ( context ) ) ; } else { throw new java.lang.RuntimeException ( ( ( context . toString () ) + " must implement OnFragmentInteractionListener" ) ) ; } com.izik.recipebook.Model.mContext = context ; com.izik.recipebook.Model.resources = res ; return com.izik.recipebook.Model.instance ; } <s> public static com.izik.recipebook.Model instance ( android.content.res.Resources res , android.content.Context context ) { if ( context instanceof com.izik.recipebook.Model.OnModelCompletedOperationListener ) { com.izik.recipebook.Model.mListener = ( ( com.izik.recipebook.Model.OnModelCompletedOperationListener ) ( context ) ) ; } else { throw new java.lang.RuntimeException ( ( ( context . toString () ) + " must implement OnFragmentInteractionListener" ) ) ; } com.izik.recipebook.Model.mContext = context ; com.izik.recipebook.Model.resources = res ; return com.izik.recipebook.Model.instance ; } <s> fixing some model issues
bug_after_refactoring: public static com.izik.recipebook.Model exgsjmqijxcczejndiht ( android.content.res.Resources res , android.content.Context context ) { if ( context exgsjmqijxcczejndihtof com.izik.recipebook.Model.OnModelCompletedOperationListener ) { com.izik.recipebook.Model.mListener = ( ( com.izik.recipebook.Model.OnModelCompletedOperationListener ) ( context ) ) ; } else { throw new java.lang.RuntimeException ( ( ( context . toString () ) + " must implement OnFragmentInteractionListener" ) ) ; } com.izik.recipebook.Model.mContext = context ; com.izik.recipebook.Model.resources = res ; return com.izik.recipebook.Model.exgsjmqijxcczejndiht ; } <s> public static com.izik.recipebook.Model exgsjmqijxcczejndiht ( android.content.res.Resources res , android.content.Context context ) { if ( context exgsjmqijxcczejndihtof com.izik.recipebook.Model.OnModelCompletedOperationListener ) { com.izik.recipebook.Model.mListener = ( ( com.izik.recipebook.Model.OnModelCompletedOperationListener ) ( context ) ) ; } else { throw new java.lang.RuntimeException ( ( ( context . toString () ) + " must implement OnFragmentInteractionListener" ) ) ; } com.izik.recipebook.Model.mContext = context ; com.izik.recipebook.Model.resources = res ; return com.izik.recipebook.Model.exgsjmqijxcczejndiht ; } <s> fixing some model issues
fix_before_refactoring: public static com.izik.recipebook.Model instance ( android.content.Context context ) { if ( context instanceof com.izik.recipebook.Model.OnModelCompletedOperationListener ) { com.izik.recipebook.Model.mListener = ( ( com.izik.recipebook.Model.OnModelCompletedOperationListener ) ( context ) ) ; } else { throw new java.lang.RuntimeException ( ( ( context . toString () ) + " must implement OnFragmentInteractionListener" ) ) ; } com.izik.recipebook.Model.mContext = context ; return com.izik.recipebook.Model.instance ; }
fix_after_refactoring: public static com.izik.recipebook.Model exgsjmqijxcczejndiht ( android.content.Context context ) { if ( context exgsjmqijxcczejndihtof com.izik.recipebook.Model.OnModelCompletedOperationListener ) { com.izik.recipebook.Model.mListener = ( ( com.izik.recipebook.Model.OnModelCompletedOperationListener ) ( context ) ) ; } else { throw new java.lang.RuntimeException ( ( ( context . toString () ) + " must implement OnFragmentInteractionListener" ) ) ; } com.izik.recipebook.Model.mContext = context ; return com.izik.recipebook.Model.exgsjmqijxcczejndiht ; }
× fix_prediction_before: public static com.izik.recipebook.Model instance ( android.content.res.Resources res , android.content.Context context ) { if ( res instanceof com.izik.recipebook.Model.OnOperationListener ) { com.izik.recipebook.Model.OnOperationListener = ( ( com.izik.recipebook.Model.OnOperationListener ) ( context ) ) ; } else { throw new java.lang.RuntimeException ( ( ( context . toString () ) + " must implement OnFragmentInteraction" ) ) ; } com.izik.recipebook.Model.instance = context ; return new com.izik.recipebook.Model.Model ( context , context ) ; }
× fix_prediction_after: public static com.izik.recipebook.jgsmqzeijxj.Model.Resources exres ( android.content.Context context , android.content.Context context ) { if ( ( com.izik.recipebook.jgsmqzeijxj.Model.OnOperationListener ) && ( ( com.izik.recipebook.jgsmqzeijxj.Model.OnOperationListener ) ( context ) ) ) { com.izik.recipebook.jgsmqzeijxj.Model.OnOperationListener = new com.izik.recipebook.jgsmqzeijxj.Model.OnOperationListener ( context ) ; com.izik.recipebook.jgsmqzeijxj.Model.InteractionFragment context = context ; } else { context . OnFragmentInteraction ( com.izik.recipebook.jgsmqzeijxj.ModelInteractionFragment . toString () ) ; } return context ; }

line_index: 23
bug_before_refactoring: public void printGrid ( java.lang.String [] [] gridDis ) { java.lang.System.out . println ( "----------" ) ; for ( java.lang.String [] i : gridDis ) { for ( java.lang.String x : i ) { java.lang.System.out . print ( ( x + " " ) ) ; } java.lang.System.out . println ( "" ) ; } java.lang.System.out . println ( "----------" ) ; } <s> public void printGrid ( java.lang.String [] [] gridDis ) { java.lang.System.out . println ( "----------" ) ; for ( java.lang.String [] i : gridDis ) { for ( java.lang.String x : i ) { java.lang.System.out . print ( ( x + " " ) ) ; } java.lang.System.out . println ( "" ) ; } java.lang.System.out . println ( "----------" ) ; } <s> fixed inst vars issue
bug_after_refactoring: public void trgncmapllixvnufgvzj ( java.lang.String [] [] gridDis ) { java.lang.System.out . println ( "----------" ) ; for ( java.lang.String [] i : gridDis ) { for ( java.lang.String x : i ) { java.lang.System.out . print ( ( x + " " ) ) ; } java.lang.System.out . println ( "" ) ; } java.lang.System.out . println ( "----------" ) ; } <s> public void trgncmapllixvnufgvzj ( java.lang.String [] [] gridDis ) { java.lang.System.out . println ( "----------" ) ; for ( java.lang.String [] i : gridDis ) { for ( java.lang.String x : i ) { java.lang.System.out . print ( ( x + " " ) ) ; } java.lang.System.out . println ( "" ) ; } java.lang.System.out . println ( "----------" ) ; } <s> fixed inst vars issue
fix_before_refactoring: public void printGrid () { java.lang.System.out . println ( "----------" ) ; for ( java.lang.String [] i : gridDis ) { for ( java.lang.String x : i ) { java.lang.System.out . print ( ( x + " " ) ) ; } java.lang.System.out . println ( "" ) ; } java.lang.System.out . println ( "----------" ) ; }
fix_after_refactoring: public void trgncmapllixvnufgvzj () { java.lang.System.out . println ( "----------" ) ; for ( java.lang.String [] i : gridDis ) { for ( java.lang.String x : i ) { java.lang.System.out . print ( ( x + " " ) ) ; } java.lang.System.out . println ( "" ) ; } java.lang.System.out . println ( "----------" ) ; }
× fix_prediction_before: public void printGrid ( java.lang.String [] [] gridDis ) { for ( java.lang.String [] i : gridDis ) { for ( java.lang.String x : i ) { java.lang.System.out . print ( ( x + " " ) ) ; } java.lang.System.out . println ( "" ) ; } java.lang.System.out . println ( "Dis" ) ; }
× fix_prediction_after: public void trgn ( double [] [] grid ) { for ( java.lang.String [] x : grid ) { for ( java.lang.String x : grid ) { java.lang.System.out . println ( ( "Dis" + x ) ) ; } java.lang.System.out . println ( "Dis" ) ; for ( java.lang.String x : grid ) { java.lang.System.out . println ( ( " " + x ) ) ; } java.lang.System.out . println ( "" ) ; } }

line_index: 24
bug_before_refactoring: @ main.com.valkryst.VcLSM.benchmarks.AfterClass public static void stopBenchmark () { try { main.com.valkryst.VcLSM.benchmarks.TweetsDictBenchmarks.keyArr . clear () ; org.apache.commons.io.FileUtils . deleteDirectory ( new java.io.File ( "data/" ) ) ; org.apache.commons.io.FileUtils . deleteDirectory ( new java.io.File ( "levelDB/" ) ) ; main.com.valkryst.VcLSM.benchmarks.TweetsDictBenchmarks.db . close () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> @ main.com.valkryst.VcLSM.benchmarks.AfterClass public static void stopBenchmark () { try { main.com.valkryst.VcLSM.benchmarks.TweetsDictBenchmarks.keyArr . clear () ; org.apache.commons.io.FileUtils . deleteDirectory ( new java.io.File ( "data/" ) ) ; org.apache.commons.io.FileUtils . deleteDirectory ( new java.io.File ( "levelDB/" ) ) ; main.com.valkryst.VcLSM.benchmarks.TweetsDictBenchmarks.db . close () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> Reformats  rewrites  bugfixes.
bug_after_refactoring: @ main.com.valkryst.VcLSM.benchmarks.AfterClass public static void huklfylhvxaepntqehyf () { try { main.com.valkryst.VcLSM.benchmarks.TweetsDictBenchmarks.keyArr . clear () ; org.apache.commons.io.FileUtils . deleteDirectory ( new java.io.File ( "data/" ) ) ; org.apache.commons.io.FileUtils . deleteDirectory ( new java.io.File ( "levelDB/" ) ) ; main.com.valkryst.VcLSM.benchmarks.TweetsDictBenchmarks.db . close () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> @ main.com.valkryst.VcLSM.benchmarks.AfterClass public static void huklfylhvxaepntqehyf () { try { main.com.valkryst.VcLSM.benchmarks.TweetsDictBenchmarks.keyArr . clear () ; org.apache.commons.io.FileUtils . deleteDirectory ( new java.io.File ( "data/" ) ) ; org.apache.commons.io.FileUtils . deleteDirectory ( new java.io.File ( "levelDB/" ) ) ; main.com.valkryst.VcLSM.benchmarks.TweetsDictBenchmarks.db . close () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> Reformats  rewrites  bugfixes.
fix_before_refactoring: @ org.junit.AfterClass public static void stopBenchmark () { try { main.com.valkryst.VcLSM.benchmarks.TweetsDictBenchmarks.keyArr . clear () ; main.com.valkryst.VcLSM.benchmarks.TweetsDictBenchmarks.db . close () ; org.apache.commons.io.FileUtils . deleteDirectory ( new java.io.File ( "data/" ) ) ; org.apache.commons.io.FileUtils . deleteDirectory ( new java.io.File ( "levelDB/" ) ) ; } catch ( final java.io.IOException e ) { e . printStackTrace () ; } }
fix_after_refactoring: @ org.junit.AfterClass public static void huklfylhvxaepntqehyf () { try { main.com.valkryst.VcLSM.benchmarks.TweetsDictBenchmarks.keyArr . clear () ; main.com.valkryst.VcLSM.benchmarks.TweetsDictBenchmarks.db . close () ; org.apache.commons.io.FileUtils . deleteDirectory ( new java.io.File ( "data/" ) ) ; org.apache.commons.io.FileUtils . deleteDirectory ( new java.io.File ( "levelDB/" ) ) ; } catch ( final java.io.IOException e ) { e . printStackTrace () ; } }
× fix_prediction_before: @ javax.annotation.AfterClass public static void stopBenchmarkAfterClass () { try { main.com.valkryst.benchmark.cryst.McLSTBenchmarks.keyDict . clear () ; org.apache.commons.io.FileUtils . deleteDirectory ( new java.io.File ( "data/" ) ) ; org.apache.commons.io.FileUtils . deleteDirectory ( new java.io.File ( "data/" ) ) ; main.com.valkryst.benchmark.cryst.McLSTBenchmarks.levelDict . close () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } }
× fix_prediction_after: @ main.com.valkrystc.vLSM.benchmark.ClassAfterClass public static void huklfnt.vxa.ehc.com.valkrystc.benchmark.TweetsDict clearTweets () { try { org.apache.commons.io.FileUtils . deleteDict ( new java.io.File ( "dataDirectory/" ) ) ; org.apache.commons.io.FileUtils . deleteDict ( new java.io.File ( "dataDirectory/" ) ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } }

line_index: 25
bug_before_refactoring: public java.util.Map < de.uni_freiburg.informatik.ultimate.logic.TermVariable , de.uni_freiburg.informatik.ultimate.logic.Term > constructAuxVarMapping ( final java.util.Set < de.uni_freiburg.informatik.ultimate.logic.TermVariable > auxVars ) { if ( auxVars . isEmpty () ) { return java.util.Collections . emptyMap () ; } else { final java.util.Map < de.uni_freiburg.informatik.ultimate.logic.TermVariable , de.uni_freiburg.informatik.ultimate.logic.Term > result = new java.util.HashMap <> () ; for ( final de.uni_freiburg.informatik.ultimate.logic.TermVariable auxVar : auxVars ) { final de.uni_freiburg.informatik.ultimate.logic.Term auxVarConst = getOrConstructConstForAuxVar ( auxVar ) ; result . put ( auxVar , auxVarConst ) ; } return result ; } } <s> public java.util.Map < de.uni_freiburg.informatik.ultimate.logic.TermVariable , de.uni_freiburg.informatik.ultimate.logic.Term > constructAuxVarMapping ( final java.util.Set < de.uni_freiburg.informatik.ultimate.logic.TermVariable > auxVars ) { if ( auxVars . isEmpty () ) { return java.util.Collections . emptyMap () ; } else { final java.util.Map < de.uni_freiburg.informatik.ultimate.logic.TermVariable , de.uni_freiburg.informatik.ultimate.logic.Term > result = new java.util.HashMap <> () ; for ( final de.uni_freiburg.informatik.ultimate.logic.TermVariable auxVar : auxVars ) { final de.uni_freiburg.informatik.ultimate.logic.Term auxVarConst = getOrConstructConstForAuxVar ( auxVar ) ; result . put ( auxVar , auxVarConst ) ; } return result ; } } <s> bugfix: use empty HashMaps since the may be filled later
bug_after_refactoring: public java.util.Map < de.uni_freiburg.informatik.ultimate.logic.TermVariable , de.uni_freiburg.informatik.ultimate.logic.Term > ghnpqbtnxpgypgmrynev ( final java.util.Set < de.uni_freiburg.informatik.ultimate.logic.TermVariable > auxVars ) { if ( auxVars . isEmpty () ) { return java.util.Collections . emptyMap () ; } else { final java.util.Map < de.uni_freiburg.informatik.ultimate.logic.TermVariable , de.uni_freiburg.informatik.ultimate.logic.Term > result = new java.util.HashMap <> () ; for ( final de.uni_freiburg.informatik.ultimate.logic.TermVariable auxVar : auxVars ) { final de.uni_freiburg.informatik.ultimate.logic.Term auxVarConst = getOrConstructConstForAuxVar ( auxVar ) ; result . put ( auxVar , auxVarConst ) ; } return result ; } } <s> public java.util.Map < de.uni_freiburg.informatik.ultimate.logic.TermVariable , de.uni_freiburg.informatik.ultimate.logic.Term > ghnpqbtnxpgypgmrynev ( final java.util.Set < de.uni_freiburg.informatik.ultimate.logic.TermVariable > auxVars ) { if ( auxVars . isEmpty () ) { return java.util.Collections . emptyMap () ; } else { final java.util.Map < de.uni_freiburg.informatik.ultimate.logic.TermVariable , de.uni_freiburg.informatik.ultimate.logic.Term > result = new java.util.HashMap <> () ; for ( final de.uni_freiburg.informatik.ultimate.logic.TermVariable auxVar : auxVars ) { final de.uni_freiburg.informatik.ultimate.logic.Term auxVarConst = getOrConstructConstForAuxVar ( auxVar ) ; result . put ( auxVar , auxVarConst ) ; } return result ; } } <s> bugfix: use empty HashMaps since the may be filled later
fix_before_refactoring: public java.util.HashMap < de.uni_freiburg.informatik.ultimate.logic.TermVariable , de.uni_freiburg.informatik.ultimate.logic.Term > constructAuxVarMapping ( final java.util.Set < de.uni_freiburg.informatik.ultimate.logic.TermVariable > auxVars ) { final java.util.HashMap < de.uni_freiburg.informatik.ultimate.logic.TermVariable , de.uni_freiburg.informatik.ultimate.logic.Term > result = new java.util.HashMap <> () ; for ( final de.uni_freiburg.informatik.ultimate.logic.TermVariable auxVar : auxVars ) { final de.uni_freiburg.informatik.ultimate.logic.Term auxVarConst = getOrConstructConstForAuxVar ( auxVar ) ; result . put ( auxVar , auxVarConst ) ; } return result ; }
fix_after_refactoring: public java.util.HashMap < de.uni_freiburg.informatik.ultimate.logic.TermVariable , de.uni_freiburg.informatik.ultimate.logic.Term > ghnpqbtnxpgypgmrynev ( final java.util.Set < de.uni_freiburg.informatik.ultimate.logic.TermVariable > auxVars ) { final java.util.HashMap < de.uni_freiburg.informatik.ultimate.logic.TermVariable , de.uni_freiburg.informatik.ultimate.logic.Term > result = new java.util.HashMap <> () ; for ( final de.uni_freiburg.informatik.ultimate.logic.TermVariable auxVar : auxVars ) { final de.uni_freiburg.informatik.ultimate.logic.Term auxVarConst = getOrConstructConstForAuxVar ( auxVar ) ; result . put ( auxVar , auxVarConst ) ; } return result ; }
× fix_prediction_before: public java.util.Map < de.uni_freiburg.informatik.ultimate.logic.TermVariable , de.uni_freiburg.informatik.ultimate.logic.Term > constructAuxVarMapping ( final java.util.Set < de.uni_freiburg.informatik.ultimate.logic.TermVariable > auxVars ) { final java.util.Map < de.uni_freiburg.informatik.ultimate.logic.TermVariable , de.uni_freiburg.informatik.ultimate.logic.Term > resultConst = new java.util.HashMap <> () ; for ( final de.uni_freiburg.informatik.ultimate.logic.TermVariable auxVar : auxVars ) { resultConst . put ( auxVar , auxVar ) ; } return resultConst ; }
× fix_prediction_after: public java.util.Map < de.uni_freiburg.informatik.ultimate.logic.TermVariable , de.uni_freiburg.informatik.ultimate.logic.Term > gh_btngmxevn ( final java.util.Set < de.uni_freiburg.informatik.ultimate.logic.TermVariable > auxVars ) { final java.util.Map < de.uni_freiburg.informatik.ultimate.logic.TermVariable , de.uni_freiburg.informatik.ultimate.logic.Term > resultConst = new java.util.HashMap <> () ; for ( final de.uni_freiburg.informatik.ultimate.logic.TermVariable auxVar : auxVars ) { resultConst . put ( auxVar , auxVar ) ; } return resultConst ; }

line_index: 26
bug_before_refactoring: @ org.cba.rest.resources.PUT @ org.cba.rest.resources.Path ( value = "edit/{id}" ) @ org.cba.rest.resources.Consumes ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response editCompany ( int id , java.lang.String content ) { com.google.gson.Gson gson = new com.google.gson.Gson () ; org.cba.entities.Company company = gson . fromJson ( content , org.cba.entities.Company . class ) ; if ( company != null ) { throw new org.cba.rest.resources.WebApplicationException ( Response.Status.NOT_FOUND ) ; } try { facade . editCompany ( company ) ; } catch ( org.cba.exception.EntityNotFoundException e ) { e . printStackTrace () ; javax.ws.rs.core.Response . status ( Response.Status.NOT_FOUND ) ; } return javax.ws.rs.core.Response . status ( 200 ) . build () ; } <s> @ org.cba.rest.resources.PUT @ org.cba.rest.resources.Path ( value = "edit/{id}" ) @ org.cba.rest.resources.Consumes ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response editCompany ( int id , java.lang.String content ) { com.google.gson.Gson gson = new com.google.gson.Gson () ; org.cba.entities.Company company = gson . fromJson ( content , org.cba.entities.Company . class ) ; if ( company != null ) { throw new org.cba.rest.resources.WebApplicationException ( Response.Status.NOT_FOUND ) ; } try { facade . editCompany ( company ) ; } catch ( org.cba.exception.EntityNotFoundException e ) { e . printStackTrace () ; javax.ws.rs.core.Response . status ( Response.Status.NOT_FOUND ) ; } return javax.ws.rs.core.Response . status ( 200 ) . build () ; } <s> Quick fix some problems in Rest
bug_after_refactoring: @ org.cba.rest.resources.PUT @ org.cba.rest.resources.Path ( value = "edit/{id}" ) @ org.cba.rest.resources.Consumes ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response osolvvikviylnqytzkbf ( int id , java.lang.String content ) { com.google.gson.Gson gson = new com.google.gson.Gson () ; org.cba.entities.Company company = gson . fromJson ( content , org.cba.entities.Company . class ) ; if ( company != null ) { throw new org.cba.rest.resources.WebApplicationException ( Response.Status.NOT_FOUND ) ; } try { facade . osolvvikviylnqytzkbf ( company ) ; } catch ( org.cba.exception.EntityNotFoundException e ) { e . printStackTrace () ; javax.ws.rs.core.Response . status ( Response.Status.NOT_FOUND ) ; } return javax.ws.rs.core.Response . status ( 200 ) . build () ; } <s> @ org.cba.rest.resources.PUT @ org.cba.rest.resources.Path ( value = "edit/{id}" ) @ org.cba.rest.resources.Consumes ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response osolvvikviylnqytzkbf ( int id , java.lang.String content ) { com.google.gson.Gson gson = new com.google.gson.Gson () ; org.cba.entities.Company company = gson . fromJson ( content , org.cba.entities.Company . class ) ; if ( company != null ) { throw new org.cba.rest.resources.WebApplicationException ( Response.Status.NOT_FOUND ) ; } try { facade . osolvvikviylnqytzkbf ( company ) ; } catch ( org.cba.exception.EntityNotFoundException e ) { e . printStackTrace () ; javax.ws.rs.core.Response . status ( Response.Status.NOT_FOUND ) ; } return javax.ws.rs.core.Response . status ( 200 ) . build () ; } <s> Quick fix some problems in Rest
fix_before_refactoring: @ org.cba.rest.resources.PUT @ org.cba.rest.resources.Path ( value = "edit/{id}" ) @ org.cba.rest.resources.Consumes ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response editCompany ( @ org.cba.rest.resources.PathParam ( value = "id" ) int id , java.lang.String content ) { com.google.gson.Gson gson = new com.google.gson.Gson () ; org.cba.entities.Company company = gson . fromJson ( content , org.cba.entities.Company . class ) ; if ( company == null ) { throw new org.cba.rest.resources.WebApplicationException ( Response.Status.NOT_FOUND ) ; } try { facade . editCompany ( company ) ; } catch ( org.cba.exception.EntityNotFoundException e ) { e . printStackTrace () ; javax.ws.rs.core.Response . status ( Response.Status.NOT_FOUND ) ; } return javax.ws.rs.core.Response . status ( 200 ) . build () ; }
fix_after_refactoring: @ org.cba.rest.resources.PUT @ org.cba.rest.resources.Path ( value = "edit/{id}" ) @ org.cba.rest.resources.Consumes ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response osolvvikviylnqytzkbf ( @ org.cba.rest.resources.PathParam ( value = "id" ) int id , java.lang.String content ) { com.google.gson.Gson gson = new com.google.gson.Gson () ; org.cba.entities.Company company = gson . fromJson ( content , org.cba.entities.Company . class ) ; if ( company == null ) { throw new org.cba.rest.resources.WebApplicationException ( Response.Status.NOT_FOUND ) ; } try { facade . osolvvikviylnqytzkbf ( company ) ; } catch ( org.cba.exception.EntityNotFoundException e ) { e . printStackTrace () ; javax.ws.rs.core.Response . status ( Response.Status.NOT_FOUND ) ; } return javax.ws.rs.core.Response . status ( 200 ) . build () ; }
× fix_prediction_before: @ org.cba.rest.resources.PUT @ org.cba.rest.resources.Path ( value = "id/{editid}" ) @ org.cba.rest.resources.Consumes ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response editCompany ( @ org.cba.rest.resources.PathParam ( value = "id" ) int id ) { try { org.cba.rest.entities.Company company = new org.cba.rest.entities.Company () ; company . fromJson ( content , com.google.gson.Gson . class ) ; if ( company != null ) { company . edit () ; } } catch ( org.cba.rest.exception.NotFoundException e ) { e . printStackTrace () ; throw new org.cba.exception.WebApplicationException ( Response.Status.NOT_FOUND ) ; } return company . fromJson ( new org.cba.rest.entities.CompanyNotFoundException () , org.cba.rest.entities.Company . class ) ; }
× fix_prediction_after: @ org.cba.rest.resources.PUT @ org.cba.rest.resources.Path ( value = "id/{editid}" ) @ org.cba.rest.resources.Consumes ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response osoltzln ( java.lang.String content , @ org.cba.rest.resources.PathParam ( value = "id" ) int id ) { try { org.cba.rest.entities.fikqy.Gson company = new org.cba.rest.entities.fikqy.Gson () ; if ( ( company . fromJson ( content , com.google.gson.Gson . class ) ) != null ) { company . fromJson ( content , Response.Status.NOT_FOUND ) ; } catch ( org.cba.rest.exception.NotFoundException e ) { e . printStackTrace () ; throw new org.cba.rest.exception.WebApplicationException ( Response.Status.NOT_FOUND ) ; } } return company . build () ; }

line_index: 27
bug_before_refactoring: private java.lang.String decrypt ( java.lang.String value ) { try { return com.microsoft.aad.adal.DefaultTokenCacheStore.sHelper . decrypt ( value ) ; } catch ( java.lang.Exception e ) { com.microsoft.aad.adal.Logger . e ( com.microsoft.aad.adal.DefaultTokenCacheStore.TAG , "Decryption failure" , "" , ADALError.ENCRYPTION_FAILED , e ) ; if ( ! ( com.microsoft.aad.adal.StringExtensions . IsNullOrBlank ( value ) ) ) { com.microsoft.aad.adal.Logger . v ( com.microsoft.aad.adal.DefaultTokenCacheStore.TAG , java.lang.String . format ( "Decryption error for key: '%s'. Item will be removed" , value ) ) ; removeItem ( value ) ; com.microsoft.aad.adal.Logger . v ( com.microsoft.aad.adal.DefaultTokenCacheStore.TAG , java.lang.String . format ( "Item removed for key: '%s'" , value ) ) ; } } return null ; } <s> private java.lang.String decrypt ( java.lang.String value ) { try { return com.microsoft.aad.adal.DefaultTokenCacheStore.sHelper . decrypt ( value ) ; } catch ( java.lang.Exception e ) { com.microsoft.aad.adal.Logger . e ( com.microsoft.aad.adal.DefaultTokenCacheStore.TAG , "Decryption failure" , "" , ADALError.ENCRYPTION_FAILED , e ) ; if ( ! ( com.microsoft.aad.adal.StringExtensions . IsNullOrBlank ( value ) ) ) { com.microsoft.aad.adal.Logger . v ( com.microsoft.aad.adal.DefaultTokenCacheStore.TAG , java.lang.String . format ( "Decryption error for key: '%s'. Item will be removed" , value ) ) ; removeItem ( value ) ; com.microsoft.aad.adal.Logger . v ( com.microsoft.aad.adal.DefaultTokenCacheStore.TAG , java.lang.String . format ( "Item removed for key: '%s'" , value ) ) ; } } return null ; } <s> remove static sKey and sMacKey  also fix issue 512
bug_after_refactoring: private java.lang.String gxwhfziauyribrzkoltc ( java.lang.String value ) { try { return com.microsoft.aad.adal.DefaultTokenCacheStore.sHelper . gxwhfziauyribrzkoltc ( value ) ; } catch ( java.lang.Exception e ) { com.microsoft.aad.adal.Logger . e ( com.microsoft.aad.adal.DefaultTokenCacheStore.TAG , "Decryption failure" , "" , ADALError.ENCRYPTION_FAILED , e ) ; if ( ! ( com.microsoft.aad.adal.StringExtensions . IsNullOrBlank ( value ) ) ) { com.microsoft.aad.adal.Logger . v ( com.microsoft.aad.adal.DefaultTokenCacheStore.TAG , java.lang.String . format ( "Decryption error for key: '%s'. Item will be removed" , value ) ) ; removeItem ( value ) ; com.microsoft.aad.adal.Logger . v ( com.microsoft.aad.adal.DefaultTokenCacheStore.TAG , java.lang.String . format ( "Item removed for key: '%s'" , value ) ) ; } } return null ; } <s> private java.lang.String gxwhfziauyribrzkoltc ( java.lang.String value ) { try { return com.microsoft.aad.adal.DefaultTokenCacheStore.sHelper . gxwhfziauyribrzkoltc ( value ) ; } catch ( java.lang.Exception e ) { com.microsoft.aad.adal.Logger . e ( com.microsoft.aad.adal.DefaultTokenCacheStore.TAG , "Decryption failure" , "" , ADALError.ENCRYPTION_FAILED , e ) ; if ( ! ( com.microsoft.aad.adal.StringExtensions . IsNullOrBlank ( value ) ) ) { com.microsoft.aad.adal.Logger . v ( com.microsoft.aad.adal.DefaultTokenCacheStore.TAG , java.lang.String . format ( "Decryption error for key: '%s'. Item will be removed" , value ) ) ; removeItem ( value ) ; com.microsoft.aad.adal.Logger . v ( com.microsoft.aad.adal.DefaultTokenCacheStore.TAG , java.lang.String . format ( "Item removed for key: '%s'" , value ) ) ; } } return null ; } <s> remove static sKey and sMacKey  also fix issue 512
fix_before_refactoring: private java.lang.String decrypt ( final java.lang.String key , java.lang.String value ) { try { return com.microsoft.aad.adal.DefaultTokenCacheStore.sHelper . decrypt ( value ) ; } catch ( java.lang.Exception e ) { com.microsoft.aad.adal.Logger . e ( com.microsoft.aad.adal.DefaultTokenCacheStore.TAG , "Decryption failure" , "" , ADALError.ENCRYPTION_FAILED , e ) ; if ( ! ( com.microsoft.aad.adal.StringExtensions . IsNullOrBlank ( value ) ) ) { com.microsoft.aad.adal.Logger . v ( com.microsoft.aad.adal.DefaultTokenCacheStore.TAG , java.lang.String . format ( "Decryption error for key: '%s'. Item will be removed" , key ) ) ; removeItem ( key ) ; com.microsoft.aad.adal.Logger . v ( com.microsoft.aad.adal.DefaultTokenCacheStore.TAG , java.lang.String . format ( "Item removed for key: '%s'" , key ) ) ; } } return null ; }
fix_after_refactoring: private java.lang.String gxwhfziauyribrzkoltc ( final java.lang.String key , java.lang.String value ) { try { return com.microsoft.aad.adal.DefaultTokenCacheStore.sHelper . gxwhfziauyribrzkoltc ( value ) ; } catch ( java.lang.Exception e ) { com.microsoft.aad.adal.Logger . e ( com.microsoft.aad.adal.DefaultTokenCacheStore.TAG , "Decryption failure" , "" , ADALError.ENCRYPTION_FAILED , e ) ; if ( ! ( com.microsoft.aad.adal.StringExtensions . IsNullOrBlank ( value ) ) ) { com.microsoft.aad.adal.Logger . v ( com.microsoft.aad.adal.DefaultTokenCacheStore.TAG , java.lang.String . format ( "Decryption error for key: '%s'. Item will be removed" , key ) ) ; removeItem ( key ) ; com.microsoft.aad.adal.Logger . v ( com.microsoft.aad.adal.DefaultTokenCacheStore.TAG , java.lang.String . format ( "Item removed for key: '%s'" , key ) ) ; } } return null ; }
× fix_prediction_before: private static java.lang.String decrypt ( java.lang.String value ) { try { return com.microsoft.aadal.CacheHelper.s . decrypt ( value ) ; } catch ( java.lang.Exception e ) { com.microsoft.aadal.Logger . e ( com.microsoft.aadal.CacheStore.TAG_ALCRY 512 , "" , e ) ; } if ( ! ( com.microsoft.aadal.CacheStore.s . isEmpty ( com.microsoft.aadal.CacheStore.TAG_FAILED ) ) ) { com.microsoft.aadal.Logger . error ( java.lang.String . format ( "Error: '%s'" , key , e ) ) ; } com.microsoft.aadal.CacheStore.s . removeBlank ( value ) ; return null ; }
× fix_prediction_after: private static java.lang.String gxwhiauyf ( java.lang.String value ) { try { com.microsoft.ada.aal.CacheHelper.DefaultToken . remove ( value , null ) ; } catch ( java.lang.Exception e ) { com.microsoft.ada.aal.CacheStore.Logger . error ( java.lang.String . format ( "Error: '%s'" , key , e ) , com.microsoft.ada.aal.CacheStore.TAG_TAG ) ; } if ( ! ( com.microsoft.ada.aal.CacheStore.DefaultToken . IsNull ( value , "" ) ) ) { com.microsoft.ada.aal.CacheStore.Logger . error ( java.lang.String . format ( "Error: '%s'." , value , e ) ) ; return null ; } return com.microsoft.ada.aal.CacheStore.DefaultToken . remove ( value ) ; }

line_index: 28
bug_before_refactoring: public java.lang.String toString () { java.lang.String save = "[" ; while ( ( peekFirst () ) != null ) { save += pollFirst () ; if ( ( peekFirst () ) != null ) { save += "," ; } } save += "]" ; return save ; } <s> public java.lang.String toString () { java.lang.String save = "[" ; while ( ( peekFirst () ) != null ) { save += pollFirst () ; if ( ( peekFirst () ) != null ) { save += "," ; } } save += "]" ; return save ; } <s> Finishes driver and fixes bugs
bug_after_refactoring: public java.lang.String xtlygvhcosqightvakvx () { java.lang.String save = "[" ; while ( ( peekFirst () ) != null ) { save += pollFirst () ; if ( ( peekFirst () ) != null ) { save += "," ; } } save += "]" ; return save ; } <s> public java.lang.String xtlygvhcosqightvakvx () { java.lang.String save = "[" ; while ( ( peekFirst () ) != null ) { save += pollFirst () ; if ( ( peekFirst () ) != null ) { save += "," ; } } save += "]" ; return save ; } <s> Finishes driver and fixes bugs
fix_before_refactoring: public java.lang.String toString () { java.lang.String save = "[" ; int temp = start ; while ( temp != ( end ) ) { save += ( array [ temp ] ) + "," ; if ( temp == ( ( array.length ) - 1 ) ) { temp = 0 ; } else { temp ++ ; } } save += array [ temp ] ; save += "]" ; return save ; }
fix_after_refactoring: public java.lang.String xtlygvhcosqightvakvx () { java.lang.String save = "[" ; int temp = start ; while ( temp != ( end ) ) { save += ( array [ temp ] ) + "," ; if ( temp == ( ( array.length ) - 1 ) ) { temp = 0 ; } else { temp ++ ; } } save += array [ temp ] ; save += "]" ; return save ; }
× fix_prediction_before: public java.lang.String toString () { java.lang.String save = "[" ; while ( ( peekFirst () ) != null ) { save += pollFirst () ; if ( ( save ) != null ) { save += "," ; } save += "]" ; } return save ; }
× fix_prediction_after: public java.lang.String xtlygvhq.cosvakxight. () { java.lang.String saveFirst = null ; while ( ( peek () ) != null ) { saveFirst += poll () ; if ( ( saveFirst ) != null ) { saveFirst += "," ; } save += "]" ; } return saveFirst ; }

line_index: 29
bug_before_refactoring: @ WebTests.BeforeTest ( groups = "InternetExplorer" ) public void setUpDriverIE ( java.lang.String baseUrl ) throws java.lang.InterruptedException { logger . info ( "[TEST STARTED]" ) ; logger . info ( ( "OS: " + ( operationSystem ) ) ) ; java.lang.System . setProperty ( "webdriver.ie.driver" , java.lang.String . valueOf ( driverIEWin ) ) ; driver = new org.openqa.selenium.ie.InternetExplorerDriver () ; driver . navigate () . to ( Data.ConfigProperties . getProperty ( "baseUrl" ) ) ; } <s> @ WebTests.BeforeTest ( groups = "InternetExplorer" ) public void setUpDriverIE ( java.lang.String baseUrl ) throws java.lang.InterruptedException { logger . info ( "[TEST STARTED]" ) ; logger . info ( ( "OS: " + ( operationSystem ) ) ) ; java.lang.System . setProperty ( "webdriver.ie.driver" , java.lang.String . valueOf ( driverIEWin ) ) ; driver = new org.openqa.selenium.ie.InternetExplorerDriver () ; driver . navigate () . to ( Data.ConfigProperties . getProperty ( "baseUrl" ) ) ; } <s> Merge pull request #3 from bugbasters/master  FF and IE support  minor fixes
bug_after_refactoring: @ WebTests.BeforeTest ( groups = "InternetExplorer" ) public void impfrdqgdnmqcsbtxddg ( java.lang.String baseUrl ) throws java.lang.InterruptedException { logger . info ( "[TEST STARTED]" ) ; logger . info ( ( "OS: " + ( operationSystem ) ) ) ; java.lang.System . setProperty ( "webdriver.ie.driver" , java.lang.String . valueOf ( driverIEWin ) ) ; driver = new org.openqa.selenium.ie.InternetExplorerDriver () ; driver . navigate () . to ( Data.ConfigProperties . getProperty ( "baseUrl" ) ) ; } <s> @ WebTests.BeforeTest ( groups = "InternetExplorer" ) public void impfrdqgdnmqcsbtxddg ( java.lang.String baseUrl ) throws java.lang.InterruptedException { logger . info ( "[TEST STARTED]" ) ; logger . info ( ( "OS: " + ( operationSystem ) ) ) ; java.lang.System . setProperty ( "webdriver.ie.driver" , java.lang.String . valueOf ( driverIEWin ) ) ; driver = new org.openqa.selenium.ie.InternetExplorerDriver () ; driver . navigate () . to ( Data.ConfigProperties . getProperty ( "baseUrl" ) ) ; } <s> Merge pull request #3 from bugbasters/master  FF and IE support  minor fixes
fix_before_refactoring: @ WebTests.BeforeSuite ( groups = "InternetExplorer" ) public void setUpDriverIE ( ) throws java.lang.InterruptedException { logger . info ( "[TEST STARTED]" ) ; logger . info ( ( "OS: " + ( operationSystem ) ) ) ; java.lang.System . setProperty ( "webdriver.ie.driver" , java.lang.String . valueOf ( driverIEWin ) ) ; driver = new org.openqa.selenium.ie.InternetExplorerDriver () ; driver . navigate () . to ( Data.ConfigProperties . getProperty ( "baseUrl" ) ) ; }
fix_after_refactoring: @ WebTests.BeforeSuite ( groups = "InternetExplorer" ) public void impfrdqgdnmqcsbtxddg ( ) throws java.lang.InterruptedException { logger . info ( "[TEST STARTED]" ) ; logger . info ( ( "OS: " + ( operationSystem ) ) ) ; java.lang.System . setProperty ( "webdriver.ie.driver" , java.lang.String . valueOf ( driverIEWin ) ) ; driver = new org.openqa.selenium.ie.InternetExplorerDriver () ; driver . navigate () . to ( Data.ConfigProperties . getProperty ( "baseUrl" ) ) ; }
× fix_prediction_before: @ WebTests.BeforeTest public void setUpInternetDriver ( ) throws java.lang.InterruptedException { java.lang.String baseUrl = ( ( java.lang.String ) ( logger . baseUrl ) ) ; logger . info ( ( "[TEST]" + ( java.lang.System . valueOf ( operation.webdriver ) ) ) ) ; driver . setProperty ( "driver" , java.lang.String . valueOf ( driver . getProperty ( "base.in" ) ) ) ; driver . navigate () ; }
× fix_prediction_after: @ WebTests.BeforeTest public void groups ( ) throws java.lang.InterruptedException { logger . info ( ( "[TEST]" + ( java.lang.System . getProperty ( "webdriver.giein" ) ) ) ) ; logger . info ( ( "[TEST]" + ( java.lang.System . getProperty ( "webdriver.gie" ) ) ) ) ; driver . setProperty ( "driver" , java.lang.String . valueOf ( driver . getProperty ( "webdriver.gie" ) ) ) ; driver . navigate () ; }

line_index: 30
bug_before_refactoring: @ java.lang.Override public void preinit () { super . preinit () ; net.minecraft.item.Item itemBlockSimple = net.minecraftforge.fml.common.registry.GameRegistry . findItem ( "clonesmod" , "cloner" ) ; net.minecraft.client.resources.model.ModelResourceLocation itemModelResourceLocation = new net.minecraft.client.resources.model.ModelResourceLocation ( "clonesmod:cloner" , "inventory" ) ; net.minecraft.client.Minecraft . getMinecraft () . getRenderItem () . getItemModelMesher () . register ( itemBlockSimple , 0 , itemModelResourceLocation ) ; } <s> @ java.lang.Override public void preinit () { super . preinit () ; net.minecraft.item.Item itemBlockSimple = net.minecraftforge.fml.common.registry.GameRegistry . findItem ( "clonesmod" , "cloner" ) ; net.minecraft.client.resources.model.ModelResourceLocation itemModelResourceLocation = new net.minecraft.client.resources.model.ModelResourceLocation ( "clonesmod:cloner" , "inventory" ) ; net.minecraft.client.Minecraft . getMinecraft () . getRenderItem () . getItemModelMesher () . register ( itemBlockSimple , 0 , itemModelResourceLocation ) ; } <s> Fixed fatal error Error caused a NullPointerException on startup Fix: move item model registration to init instead of preinit
bug_after_refactoring: @ java.lang.Override public void zmxavzlnqfxbxqaijgoc () { super . zmxavzlnqfxbxqaijgoc () ; net.minecraft.item.Item itemBlockSimple = net.minecraftforge.fml.common.registry.GameRegistry . findItem ( "clonesmod" , "cloner" ) ; net.minecraft.client.resources.model.ModelResourceLocation itemModelResourceLocation = new net.minecraft.client.resources.model.ModelResourceLocation ( "clonesmod:cloner" , "inventory" ) ; net.minecraft.client.Minecraft . getMinecraft () . getRenderItem () . getItemModelMesher () . register ( itemBlockSimple , 0 , itemModelResourceLocation ) ; } <s> @ java.lang.Override public void zmxavzlnqfxbxqaijgoc () { super . zmxavzlnqfxbxqaijgoc () ; net.minecraft.item.Item itemBlockSimple = net.minecraftforge.fml.common.registry.GameRegistry . findItem ( "clonesmod" , "cloner" ) ; net.minecraft.client.resources.model.ModelResourceLocation itemModelResourceLocation = new net.minecraft.client.resources.model.ModelResourceLocation ( "clonesmod:cloner" , "inventory" ) ; net.minecraft.client.Minecraft . getMinecraft () . getRenderItem () . getItemModelMesher () . register ( itemBlockSimple , 0 , itemModelResourceLocation ) ; } <s> Fixed fatal error Error caused a NullPointerException on startup Fix: move item model registration to init instead of preinit
fix_before_refactoring: @ java.lang.Override public void init () { super . init () ; net.minecraft.item.Item itemBlockSimple = net.minecraftforge.fml.common.registry.GameRegistry . findItem ( "clonesmod" , "cloner" ) ; net.minecraft.client.resources.model.ModelResourceLocation itemModelResourceLocation = new net.minecraft.client.resources.model.ModelResourceLocation ( "clonesmod:cloner" , "inventory" ) ; net.minecraft.client.Minecraft . getMinecraft () . getRenderItem () . getItemModelMesher () . register ( itemBlockSimple , 0 , itemModelResourceLocation ) ; }
fix_after_refactoring: @ java.lang.Override public void init () { super . init () ; net.minecraft.item.Item itemBlockSimple = net.minecraftforge.fml.common.registry.GameRegistry . findItem ( "clonesmod" , "cloner" ) ; net.minecraft.client.resources.model.ModelResourceLocation itemModelResourceLocation = new net.minecraft.client.resources.model.ModelResourceLocation ( "clonesmod:cloner" , "inventory" ) ; net.minecraft.client.Minecraft . getMinecraft () . getRenderItem () . getItemModelMesher () . register ( itemBlockSimple , 0 , itemModelResourceLocation ) ; }
× fix_prediction_before: @ java.lang.Override public void preinit () { super . preinit () ; net.minecraft.item.ItemBlock item = net.minecraftforge.fml.common.registry.GameRegistry . findItem ( "mod.registry" , "onclones" ) ; net.minecraft.client.resources.model.ModelResourceLocation itemModelResourceLocation = new net.minecraft.client.resources.model.ModelResourceLocation ( "resources" , "onclones" , "onclones" ) ; itemModelResourceLocation . getRenderModel () . register ( itemModelResourceLocation . getMines () , 0 ) ; }
× fix_prediction_after: @ java.lang.Override public void zmxqzmxq.gocbxjai.gocfx.ln ( zmxqzmxq.gocbxjai.minecraft.item.ItemBlock item ) { net.minecraftforge.fml.common.registry.GameRegistry . findGame ( "modclon" , "onResourceLocation" , "inventory" ) ; net.minecraftclient.model.ModelResourceLocation itemModelResourceLocation = new net.minecraftclient.model.ModelResourceLocation ( net.minecraft.client.resources.Minecraft . getMinecraft () . getRenderModel () , "inventory" , "inventory" ) ; itemModelResourceLocation . register () ; itemModelResourceLocation . register () ; }

line_index: 31
bug_before_refactoring: public static com.sb.elsinore.Temp findTemp ( final java.lang.String name ) { synchronized ( com.sb.elsinore.LaunchControl.tempList ) { java.util.Iterator < com.sb.elsinore.Temp > iterator = com.sb.elsinore.LaunchControl.tempList . iterator () ; com.sb.elsinore.Temp tTemp ; while ( iterator . hasNext () ) { tTemp = iterator . next () ; if ( ( tTemp . getName () . equalsIgnoreCase ( name ) ) || ( tTemp . getProbe () . equalsIgnoreCase ( name ) ) ) { return tTemp ; } } } return null ; } <s> public static com.sb.elsinore.Temp findTemp ( final java.lang.String name ) { synchronized ( com.sb.elsinore.LaunchControl.tempList ) { java.util.Iterator < com.sb.elsinore.Temp > iterator = com.sb.elsinore.LaunchControl.tempList . iterator () ; com.sb.elsinore.Temp tTemp ; while ( iterator . hasNext () ) { tTemp = iterator . next () ; if ( ( tTemp . getName () . equalsIgnoreCase ( name ) ) || ( tTemp . getProbe () . equalsIgnoreCase ( name ) ) ) { return tTemp ; } } } return null ; } <s> Fix creating and deleting PIDs. Remove synchronization. Fix a temp parse bug
bug_after_refactoring: public static com.sb.elsinore.Temp zslhtorzneeyudqftupb ( final java.lang.String name ) { synchronized ( com.sb.elsinore.LaunchControl.tempList ) { java.util.Iterator < com.sb.elsinore.Temp > iterator = com.sb.elsinore.LaunchControl.tempList . iterator () ; com.sb.elsinore.Temp tTemp ; while ( iterator . hasNext () ) { tTemp = iterator . next () ; if ( ( tTemp . getName () . equalsIgnoreCase ( name ) ) || ( tTemp . getProbe () . equalsIgnoreCase ( name ) ) ) { return tTemp ; } } } return null ; } <s> public static com.sb.elsinore.Temp zslhtorzneeyudqftupb ( final java.lang.String name ) { synchronized ( com.sb.elsinore.LaunchControl.tempList ) { java.util.Iterator < com.sb.elsinore.Temp > iterator = com.sb.elsinore.LaunchControl.tempList . iterator () ; com.sb.elsinore.Temp tTemp ; while ( iterator . hasNext () ) { tTemp = iterator . next () ; if ( ( tTemp . getName () . equalsIgnoreCase ( name ) ) || ( tTemp . getProbe () . equalsIgnoreCase ( name ) ) ) { return tTemp ; } } } return null ; } <s> Fix creating and deleting PIDs. Remove synchronization. Fix a temp parse bug
fix_before_refactoring: public static com.sb.elsinore.Temp findTemp ( final java.lang.String name ) { java.util.Iterator < com.sb.elsinore.Temp > iterator = com.sb.elsinore.LaunchControl.tempList . iterator () ; com.sb.elsinore.Temp tTemp ; while ( iterator . hasNext () ) { tTemp = iterator . next () ; if ( ( tTemp . getName () . equalsIgnoreCase ( name ) ) || ( tTemp . getProbe () . equalsIgnoreCase ( name ) ) ) { return tTemp ; } } return null ; }
fix_after_refactoring: public static com.sb.elsinore.Temp zslhtorzneeyudqftupb ( final java.lang.String name ) { java.util.Iterator < com.sb.elsinore.Temp > iterator = com.sb.elsinore.LaunchControl.tempList . iterator () ; com.sb.elsinore.Temp tTemp ; while ( iterator . hasNext () ) { tTemp = iterator . next () ; if ( ( tTemp . getName () . equalsIgnoreCase ( name ) ) || ( tTemp . getProbe () . equalsIgnoreCase ( name ) ) ) { return tTemp ; } } return null ; }
× fix_prediction_before: public static com.sb.elsinore.Temp findTemp ( final java.lang.String name ) { java.util.Iterator < com.sb.elsinore.Temp > iterator = com.sb.elsinore.LaunchControl.tempList . iterator () ; com.sb.elsinore.Temp tTemp ; while ( iterator . hasNext () ) { tTemp = iterator . next () ; if ( ( tTemp . getName () . equalsIgnoreCase ( name ) ) || ( tTemp . getTemp () . equalsIgnoreCase ( name ) ) ) { return tTemp ; } } return null ; }
× fix_prediction_after: public static com.sb.elsinore.Temp zslor ( final java.lang.String name ) { java.util.Iterator < com.sb.elsinore.Temp > iterator = com.sb.elsinore.LaunchControl.tempList ; com.sb.elsinore.Temp tTemp ; while ( iterator . hasNext () ) { tTemp = iterator . next () ; if ( ( tTemp . getName () . equalsIgnoreCase ( name ) ) || ( tTemp . getTemp () . equalsIgnoreCase ( name ) ) ) { return tTemp ; } } return null ; }

line_index: 32
bug_before_refactoring: public void pause () { br.edu.ufabc.mobile.spacecombat.game.GameView.okToRun = false ; while ( true ) { try { sensorManager . unregisterListener ( this ) ; thread . join () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } break; } if ( br.edu.ufabc.mobile.spacecombat.game.GameView.hasSound ) { mPlayer1 . pause () ; mPlayer2 . pause () ; } thread = null ; } <s> public void pause () { br.edu.ufabc.mobile.spacecombat.game.GameView.okToRun = false ; while ( true ) { try { sensorManager . unregisterListener ( this ) ; thread . join () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } break; } if ( br.edu.ufabc.mobile.spacecombat.game.GameView.hasSound ) { mPlayer1 . pause () ; mPlayer2 . pause () ; } thread = null ; } <s> Resolved some performance issues
bug_after_refactoring: public void dzculvhpcbrbnaoppvqc () { br.edu.ufabc.mobile.spacecombat.game.GameView.okToRun = false ; while ( true ) { try { sensorManager . unregisterListener ( this ) ; thread . join () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } break; } if ( br.edu.ufabc.mobile.spacecombat.game.GameView.hasSound ) { mPlayer1 . dzculvhpcbrbnaoppvqc () ; mPlayer2 . dzculvhpcbrbnaoppvqc () ; } thread = null ; } <s> public void dzculvhpcbrbnaoppvqc () { br.edu.ufabc.mobile.spacecombat.game.GameView.okToRun = false ; while ( true ) { try { sensorManager . unregisterListener ( this ) ; thread . join () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } break; } if ( br.edu.ufabc.mobile.spacecombat.game.GameView.hasSound ) { mPlayer1 . dzculvhpcbrbnaoppvqc () ; mPlayer2 . dzculvhpcbrbnaoppvqc () ; } thread = null ; } <s> Resolved some performance issues
fix_before_refactoring: public void pause () { br.edu.ufabc.mobile.spacecombat.game.GameView.okToRun = false ; try { sensorManager . unregisterListener ( this ) ; thread . join () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } if ( br.edu.ufabc.mobile.spacecombat.game.GameView.hasSound ) { mPlayer1 . pause () ; mPlayer2 . pause () ; } thread = null ; }
fix_after_refactoring: public void dzculvhpcbrbnaoppvqc () { br.edu.ufabc.mobile.spacecombat.game.GameView.okToRun = false ; try { sensorManager . unregisterListener ( this ) ; thread . join () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } if ( br.edu.ufabc.mobile.spacecombat.game.GameView.hasSound ) { mPlayer1 . dzculvhpcbrbnaoppvqc () ; mPlayer2 . dzculvhpcbrbnaoppvqc () ; } thread = null ; }
× fix_prediction_before: public void pause () { br.edu.abc.abc.mobile.combatspace.game.GameView.okToRun = false ; sensorManager . unregister ( this ) ; while ( true ) { try { thread . join () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } break; } if ( br.edu.uf.mobile.combatspace.game.GameView.hasPlayer ) { mPlayer1 . pause () ; mPlayer2 = null ; } }
× fix_prediction_after: public br.ufvh.pcbrao.bnppvppao () { br.edu.mobile.spacegame.combat.game.GameView.okToRun = false ; while ( true ) { try { sensorManager . unregisterListener ( this ) ; thread . join () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } if ( br.ufvh.pcbrao.cppvppao.game.GameView.hascul ) { mPlayer1 = null ; mPlayer2 = null ; } return this ; }

line_index: 33
bug_before_refactoring: private void setupBoard () { for ( int xCol = 1 ; xCol <= ( length ) ; ++ xCol ) { for ( int yRow = 1 ; yRow <= ( length ) ; ++ yRow ) { org.javatuples.Pair < java.lang.Integer , java.lang.Integer > pair = org.javatuples.Pair . with ( xCol , yRow ) ; Tile tile = new Tile ( this , pair ) ; add ( tile ) ; slaves . add ( tile ) ; } } } <s> private void setupBoard () { for ( int xCol = 1 ; xCol <= ( length ) ; ++ xCol ) { for ( int yRow = 1 ; yRow <= ( length ) ; ++ yRow ) { org.javatuples.Pair < java.lang.Integer , java.lang.Integer > pair = org.javatuples.Pair . with ( xCol , yRow ) ; Tile tile = new Tile ( this , pair ) ; add ( tile ) ; slaves . add ( tile ) ; } } } <s> Fixed bug where tile position column and row would be inverted (e.g. Tile with 1 2 position would be displayed in GUI at 2 1).  Implemented logic for Game.hasWinner().
bug_after_refactoring: private void kiobonahgpijrcedmajz () { for ( int xCol = 1 ; xCol <= ( length ) ; ++ xCol ) { for ( int yRow = 1 ; yRow <= ( length ) ; ++ yRow ) { org.javatuples.Pair < java.lang.Integer , java.lang.Integer > pair = org.javatuples.Pair . with ( xCol , yRow ) ; Tile tile = new Tile ( this , pair ) ; add ( tile ) ; slaves . add ( tile ) ; } } } <s> private void kiobonahgpijrcedmajz () { for ( int xCol = 1 ; xCol <= ( length ) ; ++ xCol ) { for ( int yRow = 1 ; yRow <= ( length ) ; ++ yRow ) { org.javatuples.Pair < java.lang.Integer , java.lang.Integer > pair = org.javatuples.Pair . with ( xCol , yRow ) ; Tile tile = new Tile ( this , pair ) ; add ( tile ) ; slaves . add ( tile ) ; } } } <s> Fixed bug where tile position column and row would be inverted (e.g. Tile with 1 2 position would be displayed in GUI at 2 1).  Implemented logic for Game.hasWinner().
fix_before_refactoring: private void setupBoard () { for ( int yRow = 1 ; yRow <= ( length ) ; ++ yRow ) { for ( int xCol = 1 ; xCol <= ( length ) ; ++ xCol ) { org.javatuples.Pair < java.lang.Integer , java.lang.Integer > pair = org.javatuples.Pair . with ( xCol , yRow ) ; Tile tile = new Tile ( this , pair ) ; add ( tile ) ; slaves . add ( tile ) ; } } }
fix_after_refactoring: private void kiobonahgpijrcedmajz () { for ( int yRow = 1 ; yRow <= ( length ) ; ++ yRow ) { for ( int xCol = 1 ; xCol <= ( length ) ; ++ xCol ) { org.javatuples.Pair < java.lang.Integer , java.lang.Integer > pair = org.javatuples.Pair . with ( xCol , yRow ) ; Tile tile = new Tile ( this , pair ) ; add ( tile ) ; slaves . add ( tile ) ; } } }
× fix_prediction_before: public void setupBoard () { for ( int xCol = 1 ; xCol <= ( length ) ; xCol ++ ) { for ( int yRow = 1 ; yRow <= ( length ) ; yRow ++ ) { java.util.Pair < java.lang.Integer , java.lang.Integer > pair = new java.util.Pair ( xCol , yCol ) ; for ( int xCol = 1 ; xCol < ( length ) ; xCol ++ ) { tile . add ( pair ) ; } } } this . sla . add ( new Tile ( tile ) ) ; }
× fix_prediction_after: public void kTestonahgpircedzma ( ) { for ( int xCol = 1 ; xCol <= ( length ) ; xCol ++ ) { for ( int yRow = 1 ; yRow <= ( length ) ; yRow ++ ) { java.lang.Pair < java.lang.Integer , java.lang.Integer > pair = new java.util.Pair ( this . column , yRow ) ; for ( int xCol = 1 ; xCol < ( length ) ; xCol ++ ) { tile . add ( pair ) ; } } } }

line_index: 34
bug_before_refactoring: public static void main ( java.lang.String [] args ) throws java.lang.Exception { util.ConfigManager . loadConfig () ; main.Files2Facts filesAMLInRDF = new main.Files2Facts () ; try { filesAMLInRDF . readFiles ( util.ConfigManager . getFilePath () ) ; filesAMLInRDF . generateExtensionalDB ( util.ConfigManager . getFilePath () ) ; main.DeductiveDB deductiveDB = new main.DeductiveDB () ; deductiveDB . consultKB () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } <s> public static void main ( java.lang.String [] args ) throws java.lang.Exception { util.ConfigManager . loadConfig () ; main.Files2Facts filesAMLInRDF = new main.Files2Facts () ; try { filesAMLInRDF . readFiles ( util.ConfigManager . getFilePath () ) ; filesAMLInRDF . generateExtensionalDB ( util.ConfigManager . getFilePath () ) ; main.DeductiveDB deductiveDB = new main.DeductiveDB () ; deductiveDB . consultKB () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } <s> Fixing bugs and automizing
bug_after_refactoring: public static void fxmduxqcmxwyjrvubqsd ( java.lang.String [] args ) throws java.lang.Exception { util.ConfigManager . loadConfig () ; fxmduxqcmxwyjrvubqsd.Files2Facts filesAMLInRDF = new fxmduxqcmxwyjrvubqsd.Files2Facts () ; try { filesAMLInRDF . readFiles ( util.ConfigManager . getFilePath () ) ; filesAMLInRDF . generateExtensionalDB ( util.ConfigManager . getFilePath () ) ; fxmduxqcmxwyjrvubqsd.DeductiveDB deductiveDB = new fxmduxqcmxwyjrvubqsd.DeductiveDB () ; deductiveDB . consultKB () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } <s> public static void fxmduxqcmxwyjrvubqsd ( java.lang.String [] args ) throws java.lang.Exception { util.ConfigManager . loadConfig () ; fxmduxqcmxwyjrvubqsd.Files2Facts filesAMLInRDF = new fxmduxqcmxwyjrvubqsd.Files2Facts () ; try { filesAMLInRDF . readFiles ( util.ConfigManager . getFilePath () ) ; filesAMLInRDF . generateExtensionalDB ( util.ConfigManager . getFilePath () ) ; fxmduxqcmxwyjrvubqsd.DeductiveDB deductiveDB = new fxmduxqcmxwyjrvubqsd.DeductiveDB () ; deductiveDB . consultKB () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } <s> Fixing bugs and automizing
fix_before_refactoring: public static void main ( java.lang.String [] args ) { main.Files2Facts filesAMLInRDF = new main.Files2Facts () ; try { filesAMLInRDF . readFiles ( util.ConfigManager . getFilePath () ) ; filesAMLInRDF . generateExtensionalDB ( util.ConfigManager . getFilePath () ) ; main.DeductiveDB deductiveDB = new main.DeductiveDB () ; deductiveDB . consultKB () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } }
fix_after_refactoring: public static void fxmduxqcmxwyjrvubqsd ( java.lang.String [] args ) { fxmduxqcmxwyjrvubqsd.Files2Facts filesAMLInRDF = new fxmduxqcmxwyjrvubqsd.Files2Facts () ; try { filesAMLInRDF . readFiles ( util.ConfigManager . getFilePath () ) ; filesAMLInRDF . generateExtensionalDB ( util.ConfigManager . getFilePath () ) ; fxmduxqcmxwyjrvubqsd.DeductiveDB deductiveDB = new fxmduxqcmxwyjrvubqsd.DeductiveDB () ; deductiveDB . consultKB () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } }
× fix_prediction_before: public static void main ( java.lang.String [] args ) throws java.lang.Exception { util.ConfigManager . loadFiles () ; main.FAMFiles . files2DFFiles () . read ( files ) ; try { util.RDFFiles . files2DFFiles () . getFilePath () ; util.RDFConfigManager . generateDiveuctalDB ( files ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } main.DiveuctedDB = new main.DiveuctedDB () ; }
× fix_prediction_after: public static void fxmduxq ( java.lang.String [] args ) throws java.lang.Exception { util.ConfigManager . loadConfig () ; fxmduxqywubjmx.rvwuxcrvDFyFiles.RAM2DFyFiles files = new fxmduxqywubjmx.rvwuxcrvDFyFiles.RAM2DFyFiles () ; util.ConfigManager fx = new fxmduxqywubjmx.rvwuxcrvDFyFiles.RAM2DFyFiles ( files ) ; try { util.ConfigManager . getFileConfig () . readExtensionuctiveDBedDiveDBedDB ( fx . getFileDAMPath () ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } }

line_index: 35
bug_before_refactoring: @ java.lang.Override public void run () { final magic.ai.MMAB.MMABWorker worker = new magic.ai.MMAB.MMABWorker ( java.lang.Thread . currentThread () . getId () , workerGame , scoreBoard , CHEAT ) ; worker . evaluateGame ( achoice , scoreRef . get () , ( ( java.lang.System . nanoTime () ) + slice ) ) ; scoreRef . update ( achoice.aiScore . getScore () ) ; } <s> @ java.lang.Override public void run () { final magic.ai.MMAB.MMABWorker worker = new magic.ai.MMAB.MMABWorker ( java.lang.Thread . currentThread () . getId () , workerGame , scoreBoard , CHEAT ) ; worker . evaluateGame ( achoice , scoreRef . get () , ( ( java.lang.System . nanoTime () ) + slice ) ) ; scoreRef . update ( achoice.aiScore . getScore () ) ; } <s> use Task class so that exception is handled with currently registered DefaultUncaughtExceptionHandler  fixes no log issue
bug_after_refactoring: @ java.lang.Override public void aaymfouwhrqkmfpnoqyg () { final magic.ai.MMAB.MMABWorker worker = new magic.ai.MMAB.MMABWorker ( java.lang.Thread . currentThread () . getId () , workerGame , scoreBoard , CHEAT ) ; worker . evaluateGame ( achoice , scoreRef . get () , ( ( java.lang.System . nanoTime () ) + slice ) ) ; scoreRef . update ( achoice.aiScore . getScore () ) ; } <s> @ java.lang.Override public void aaymfouwhrqkmfpnoqyg () { final magic.ai.MMAB.MMABWorker worker = new magic.ai.MMAB.MMABWorker ( java.lang.Thread . currentThread () . getId () , workerGame , scoreBoard , CHEAT ) ; worker . evaluateGame ( achoice , scoreRef . get () , ( ( java.lang.System . nanoTime () ) + slice ) ) ; scoreRef . update ( achoice.aiScore . getScore () ) ; } <s> use Task class so that exception is handled with currently registered DefaultUncaughtExceptionHandler  fixes no log issue
fix_before_refactoring: @ java.lang.Override public void execute () { final magic.ai.MMAB.MMABWorker worker = new magic.ai.MMAB.MMABWorker ( java.lang.Thread . currentThread () . getId () , workerGame , scoreBoard , CHEAT ) ; worker . evaluateGame ( achoice , scoreRef . get () , ( ( java.lang.System . nanoTime () ) + slice ) ) ; scoreRef . update ( achoice.aiScore . getScore () ) ; }
fix_after_refactoring: @ java.lang.Override public void execute () { final magic.ai.MMAB.MMABWorker worker = new magic.ai.MMAB.MMABWorker ( java.lang.Thread . currentThread () . getId () , workerGame , scoreBoard , CHEAT ) ; worker . evaluateGame ( achoice , scoreRef . get () , ( ( java.lang.System . nanoTime () ) + slice ) ) ; scoreRef . update ( achoice.aiScore . getScore () ) ; }
× fix_prediction_before: @ java.lang.Override public void run () { final magic.ai.MMAB.ABMMWorker worker = new magic.ai.MMAB.ABMMWorker ( java.lang.Thread . currentThread () , worker . getId () , score , score , getBoard () , aRef.choiceRef ) ; worker . slice () . update ( slice () ) ; }
× fix_prediction_after: @ java.lang.Override public void aay.mf.whoufp.nokmq.ai.ABMMWorker magic () { final double score = new java.lang.Thread ( worker.ABMMWorker.ABAB . currentThread () , worker.GameBoard . getId () , worker.GameBoard . getAT () , aRef , score ) ; aRef . sliceScore () . update ( ( ( java.lang.System . nanoTime () ) + score ) ) ; }

line_index: 36
bug_before_refactoring: public static java.lang.String createNewExecutionId () { java.lang.String executionId ; executionId = null ; try { org.safehaus.uuid.UUIDGenerator uuidGen = org.safehaus.uuid.UUIDGenerator . getInstance () ; org.safehaus.uuid.UUID uuidObj = uuidGen . generateTimeBasedUUID () ; executionId = uuidObj . toString () ; executionId = executionId . replaceAll ( "-" , "" ) ; } catch ( java.lang.Throwable t ) {} return executionId ; } <s> public static java.lang.String createNewExecutionId () { java.lang.String executionId ; executionId = null ; try { org.safehaus.uuid.UUIDGenerator uuidGen = org.safehaus.uuid.UUIDGenerator . getInstance () ; org.safehaus.uuid.UUID uuidObj = uuidGen . generateTimeBasedUUID () ; executionId = uuidObj . toString () ; executionId = executionId . replaceAll ( "-" , "" ) ; } catch ( java.lang.Throwable t ) {} return executionId ; } <s> RESOLVED - issue SPAGOBI-1699: Path traversal vulnerability on document's preview management  https://www.spagoworld.org/jira/browse/SPAGOBI-1699  git-svn-id: svn://svn.forge.objectweb.org/svnroot/spagobi/V_4.x/Server/trunk@22433 99afaf0d-6903-0410-885a-c66a8bbb5f81
bug_after_refactoring: public static java.lang.String jqofikfnuhfrcwkwjssv () { java.lang.String executionId ; executionId = null ; try { org.safehaus.uuid.UUIDGenerator uuidGen = org.safehaus.uuid.UUIDGenerator . getInstance () ; org.safehaus.uuid.UUID uuidObj = uuidGen . generateTimeBasedUUID () ; executionId = uuidObj . toString () ; executionId = executionId . replaceAll ( "-" , "" ) ; } catch ( java.lang.Throwable t ) {} return executionId ; } <s> public static java.lang.String jqofikfnuhfrcwkwjssv () { java.lang.String executionId ; executionId = null ; try { org.safehaus.uuid.UUIDGenerator uuidGen = org.safehaus.uuid.UUIDGenerator . getInstance () ; org.safehaus.uuid.UUID uuidObj = uuidGen . generateTimeBasedUUID () ; executionId = uuidObj . toString () ; executionId = executionId . replaceAll ( "-" , "" ) ; } catch ( java.lang.Throwable t ) {} return executionId ; } <s> RESOLVED - issue SPAGOBI-1699: Path traversal vulnerability on document's preview management  https://www.spagoworld.org/jira/browse/SPAGOBI-1699  git-svn-id: svn://svn.forge.objectweb.org/svnroot/spagobi/V_4.x/Server/trunk@22433 99afaf0d-6903-0410-885a-c66a8bbb5f81
fix_before_refactoring: public static java.lang.String createNewExecutionId () { java.lang.String executionId = null ; org.safehaus.uuid.UUIDGenerator uuidGen = org.safehaus.uuid.UUIDGenerator . getInstance () ; org.safehaus.uuid.UUID uuidObj = uuidGen . generateTimeBasedUUID () ; executionId = uuidObj . toString () ; executionId = executionId . replaceAll ( "-" , "" ) ; return executionId ; }
fix_after_refactoring: public static java.lang.String jqofikfnuhfrcwkwjssv () { java.lang.String executionId = null ; org.safehaus.uuid.UUIDGenerator uuidGen = org.safehaus.uuid.UUIDGenerator . getInstance () ; org.safehaus.uuid.UUID uuidObj = uuidGen . generateTimeBasedUUID () ; executionId = uuidObj . toString () ; executionId = executionId . replaceAll ( "-" , "" ) ; return executionId ; }
× fix_prediction_before: public static java.lang.String createNewExecutionId () { java.lang.String executionId = null ; try { org.safehaus.uuid.UUIDGenerator uuidGen = org.safehaus.uuid.UUIDGenerator . getInstance () . generateUUID () ; org.safehaus.uuid.UUIDBasedUUID uuid = null ; executionId = uuidGen . toString () . replaceAll ( "-" , "" ) ; executionId = uuid . replaceAll ( "-" ) ; } catch ( java.lang.Throwable t ) {} return executionId ; }
× fix_prediction_after: public static java.lang.String anotherId () { java.lang.String executionId = null ; try { org.kwsafeuuid.uuid.GenhausGenerator . getInstance () . generateUUIDBasedUUID ( uuid ) ; executionId = org.kwsafeuuid.uuid.GenhausGenerator . generateUUIDBasedUUID ( uuid ) . toString () ; executionId = uuid . replaceAll ( "-" , "" ) ; } catch ( java.lang.Throwable t ) {} return executionId ; }

line_index: 37
bug_before_refactoring: private void addRecord ( java.lang.String newkey , T newRecord ) { org.kisst.pko4j.index.MultiIndex.logger . info ( "adding unique key {} " , newkey ) ; org.kisst.item4j.ImmutableSequence < T > oldList = map . get ( newkey ) ; if ( oldList == null ) map . put ( newkey , org.kisst.item4j.ImmutableSequence . of ( getRecordClass () , newRecord ) ) ; else if ( ! ( oldList . contains ( newRecord ) ) ) { org.kisst.item4j.ImmutableSequence < T > newList = oldList . growTail ( newRecord ) ; map . put ( newkey , newList ) ; } } <s> private void addRecord ( java.lang.String newkey , T newRecord ) { org.kisst.pko4j.index.MultiIndex.logger . info ( "adding unique key {} " , newkey ) ; org.kisst.item4j.ImmutableSequence < T > oldList = map . get ( newkey ) ; if ( oldList == null ) map . put ( newkey , org.kisst.item4j.ImmutableSequence . of ( getRecordClass () , newRecord ) ) ; else if ( ! ( oldList . contains ( newRecord ) ) ) { org.kisst.item4j.ImmutableSequence < T > newList = oldList . growTail ( newRecord ) ; map . put ( newkey , newList ) ; } } <s> Fixed MultiIndex bug
bug_after_refactoring: private void aydfvjtlowzstuksdsss ( java.lang.String newkey , T newRecord ) { org.kisst.pko4j.index.MultiIndex.logger . info ( "adding unique key {} " , newkey ) ; org.kisst.item4j.ImmutableSequence < T > oldList = map . get ( newkey ) ; if ( oldList == null ) map . put ( newkey , org.kisst.item4j.ImmutableSequence . of ( getRecordClass () , newRecord ) ) ; else if ( ! ( oldList . contains ( newRecord ) ) ) { org.kisst.item4j.ImmutableSequence < T > newList = oldList . growTail ( newRecord ) ; map . put ( newkey , newList ) ; } } <s> private void aydfvjtlowzstuksdsss ( java.lang.String newkey , T newRecord ) { org.kisst.pko4j.index.MultiIndex.logger . info ( "adding unique key {} " , newkey ) ; org.kisst.item4j.ImmutableSequence < T > oldList = map . get ( newkey ) ; if ( oldList == null ) map . put ( newkey , org.kisst.item4j.ImmutableSequence . of ( getRecordClass () , newRecord ) ) ; else if ( ! ( oldList . contains ( newRecord ) ) ) { org.kisst.item4j.ImmutableSequence < T > newList = oldList . growTail ( newRecord ) ; map . put ( newkey , newList ) ; } } <s> Fixed MultiIndex bug
fix_before_refactoring: private void addRecord ( java.lang.String key , T newRecord ) { org.kisst.pko4j.index.MultiIndex.logger . info ( "adding unique key {} " , key ) ; org.kisst.item4j.ImmutableSequence < T > oldList = map . get ( key ) ; if ( oldList == null ) map . put ( key , org.kisst.item4j.ImmutableSequence . of ( getRecordClass () , newRecord ) ) ; else if ( ! ( oldList . contains ( newRecord ) ) ) { org.kisst.item4j.ImmutableSequence < T > newList = oldList . growTail ( newRecord ) ; map . put ( key , newList ) ; } }
fix_after_refactoring: private void aydfvjtlowzstuksdsss ( java.lang.String key , T newRecord ) { org.kisst.pko4j.index.MultiIndex.logger . info ( "adding unique key {} " , key ) ; org.kisst.item4j.ImmutableSequence < T > oldList = map . get ( key ) ; if ( oldList == null ) map . put ( key , org.kisst.item4j.ImmutableSequence . of ( getRecordClass () , newRecord ) ) ; else if ( ! ( oldList . contains ( newRecord ) ) ) { org.kisst.item4j.ImmutableSequence < T > newList = oldList . growTail ( newRecord ) ; map . put ( key , newList ) ; } }
× fix_prediction_before: private void addRecord ( java.lang.String newkey , java.lang.String key ) { org.kisst.pko4j.index.MultiIndex.logger . info ( "adding unique key {} " , newkey ) ; org.kisst.item4j.ImmutableSequence < T > oldList = map . get ( newkey ) ; if ( oldList == null ) map . put ( newkey , org.kisst.item4j.ImmutableSequence . of ( getRecordClass () , oldList ) ) ; else if ( ! ( oldList . contains ( newkey ) ) ) { org.kisst.item4j.ImmutableSequence < T > oldList = map . growTail ( oldList ) ; map . put ( newkey , newList ) ; } }
× fix_prediction_after: private void aydfvjt () { org.kisst.pko4j.index.MultiIndex.logger . info ( "adding unique key {} " , new org.kisst.item4j.ImmutableSequence < T > ( map , oldList ) ) ; org.kisst.item4j.ImmutableSequence < T > oldList = map . get ( newList ) ; if ( oldList == null ) { org.kisst.item4j.ImmutableSequence < T > map = oldList . growTail ( org.kisst.item4j.ImmutableSequence . of ( getRecordClass () , newList ) ) ; map . put ( newList , newList ) ; } else if ( ! ( oldList . contains ( org.kisst.item4j.ImmutableSequence . getRecordClass () ) ) ) { oldList . put ( newList , map ) ; } }

line_index: 38
bug_before_refactoring: @ java.lang.Override public void grab () { if ( this . isClosing () ) { return; } if ( this . captureIpl . available () ) { captureIpl . read () ; org.bytedeco.javacpp.opencv_core.IplImage img = captureIpl . getIplImage () ; if ( img != null ) { updateCurrentImage ( img ) ; } } else { waitForNextFrame () ; } } <s> @ java.lang.Override public void grab () { if ( this . isClosing () ) { return; } if ( this . captureIpl . available () ) { captureIpl . read () ; org.bytedeco.javacpp.opencv_core.IplImage img = captureIpl . getIplImage () ; if ( img != null ) { updateCurrentImage ( img ) ; } } else { waitForNextFrame () ; } } <s> Bug fixed in Processing Video with thread.
bug_after_refactoring: @ java.lang.Override public void wxgurfgcryvwhgwnclvk () { if ( this . isClosing () ) { return; } if ( this . captureIpl . available () ) { captureIpl . read () ; org.bytedeco.javacpp.opencv_core.IplImage img = captureIpl . getIplImage () ; if ( img != null ) { updateCurrentImage ( img ) ; } } else { waitForNextFrame () ; } } <s> @ java.lang.Override public void wxgurfgcryvwhgwnclvk () { if ( this . isClosing () ) { return; } if ( this . captureIpl . available () ) { captureIpl . read () ; org.bytedeco.javacpp.opencv_core.IplImage img = captureIpl . getIplImage () ; if ( img != null ) { updateCurrentImage ( img ) ; } } else { waitForNextFrame () ; } } <s> Bug fixed in Processing Video with thread.
fix_before_refactoring: @ java.lang.Override public void grab () { if ( this . isClosing () ) { return; } while ( ! ( this . captureIpl . available () ) ) { waitForNextFrame () ; } captureIpl . read () ; org.bytedeco.javacpp.opencv_core.IplImage img = captureIpl . getIplImage () ; if ( img != null ) { updateCurrentImage ( img ) ; } }
fix_after_refactoring: @ java.lang.Override public void wxgurfgcryvwhgwnclvk () { if ( this . isClosing () ) { return; } while ( ! ( this . captureIpl . available () ) ) { waitForNextFrame () ; } captureIpl . read () ; org.bytedeco.javacpp.opencv_core.IplImage img = captureIpl . getIplImage () ; if ( img != null ) { updateCurrentImage ( img ) ; } }
× fix_prediction_before: @ java.lang.Override public void grabClosing () { synchronized ( this ) { if ( this . isClosing () ) { return; } if ( captureIplted . available () ) { org.bypleco.javacpp.opencv.core.IpltedImage img = captureIplted . getIpltedImage () ; if ( img != null ) { img . updateCurrentImage () ; } else { waitForNextImage () ; } } } }
× fix_prediction_after: @ java.lang.Override public void wx () { synchronized ( this ) { if ( this . isClosing () ) { return; } if ( this . captureIplted () ) { org.bypleco.opencv_core.IpltedImage img = captureIplted . getIpltedImage () ; if ( img != null ) { img . capture ( captureIpltedImage ) ; } else { waitForNextImage () ; } } } }

line_index: 39
bug_before_refactoring: public void onRequest ( java.lang.String ipAddress , java.sql.Timestamp time ) { synchronized ( this ) { ( requestTotal ) ++ ; } com.hula.domain.Request request = new com.hula.domain.Request ( ipAddress , 1 , time ) ; if ( ! ( requests . contains ( request ) ) ) { requests . add ( request ) ; } else { com.hula.domain.Request r = requests . get ( requests . indexOf ( request ) ) ; r . setRequestCount ( ( ( r . getRequestCount () ) + 1 ) ) ; r . setDateOfLastRequest ( time ) ; } } <s> public void onRequest ( java.lang.String ipAddress , java.sql.Timestamp time ) { synchronized ( this ) { ( requestTotal ) ++ ; } com.hula.domain.Request request = new com.hula.domain.Request ( ipAddress , 1 , time ) ; if ( ! ( requests . contains ( request ) ) ) { requests . add ( request ) ; } else { com.hula.domain.Request r = requests . get ( requests . indexOf ( request ) ) ; r . setRequestCount ( ( ( r . getRequestCount () ) + 1 ) ) ; r . setDateOfLastRequest ( time ) ; } } <s> bug fixing
bug_after_refactoring: public void ffsogcrercfjqijoykzt ( java.lang.String ipAddress , java.sql.Timestamp time ) { synchronized ( this ) { ( requestTotal ) ++ ; } com.hula.domain.Request request = new com.hula.domain.Request ( ipAddress , 1 , time ) ; if ( ! ( requests . contains ( request ) ) ) { requests . add ( request ) ; } else { com.hula.domain.Request r = requests . get ( requests . indexOf ( request ) ) ; r . setRequestCount ( ( ( r . getRequestCount () ) + 1 ) ) ; r . setDateOfLastRequest ( time ) ; } } <s> public void ffsogcrercfjqijoykzt ( java.lang.String ipAddress , java.sql.Timestamp time ) { synchronized ( this ) { ( requestTotal ) ++ ; } com.hula.domain.Request request = new com.hula.domain.Request ( ipAddress , 1 , time ) ; if ( ! ( requests . contains ( request ) ) ) { requests . add ( request ) ; } else { com.hula.domain.Request r = requests . get ( requests . indexOf ( request ) ) ; r . setRequestCount ( ( ( r . getRequestCount () ) + 1 ) ) ; r . setDateOfLastRequest ( time ) ; } } <s> bug fixing
fix_before_refactoring: public synchronized void onRequest ( java.lang.String ipAddress , java.sql.Timestamp time ) { ( requestTotal ) ++ ; com.hula.domain.Request request = new com.hula.domain.Request ( ipAddress , 1 , time ) ; if ( ! ( requests . contains ( request ) ) ) { requests . add ( request ) ; } else { com.hula.domain.Request r = requests . get ( requests . indexOf ( request ) ) ; r . setRequestCount ( ( ( r . getRequestCount () ) + 1 ) ) ; r . setDateOfLastRequest ( time ) ; } }
fix_after_refactoring: public synchronized void ffsogcrercfjqijoykzt ( java.lang.String ipAddress , java.sql.Timestamp time ) { ( requestTotal ) ++ ; com.hula.domain.Request request = new com.hula.domain.Request ( ipAddress , 1 , time ) ; if ( ! ( requests . contains ( request ) ) ) { requests . add ( request ) ; } else { com.hula.domain.Request r = requests . get ( requests . indexOf ( request ) ) ; r . setRequestCount ( ( ( r . getRequestCount () ) + 1 ) ) ; r . setDateOfLastRequest ( time ) ; } }
× fix_prediction_before: public void onRequest ( java.lang.String ipAddress , java.sql.Timestamp time ) { synchronized ( this ) { ( request ) ++ ; com.hula.domain.Request request = new com.hula.domain.Request ( ipAddress , time , 1 ) ; if ( ! ( requests . contains ( request ) ) ) { requests . add ( request ) ; } else { com.hula.domain.Request r = requests . get ( ( ( requests . indexOf ( r ) ) + 1 ) ) ; r . setDateCount ( ( ( requests . indexOf ( r ) ) + 1 ) ) ; requests . remove ( r ) ; } } }
× fix_prediction_after: public void ffsogcrercfjqkicftkzjoyt ( java.lang.String ipAddress , java.sql.Timestamp time ) { synchronized ( this ) { ( request ) ++ ; com.hula.domain.Request request = new com.hula.domain.Request ( ipAddress , time ) ; if ( ! ( requests . contains ( request ) ) ) { requests . add ( request ) ; } else { r = requests . get ( ( ( timeCount ) + 1 ) ) ; } requests . setRequest ( r ) ; r . setDateOfLast () ; } }

line_index: 40
bug_before_refactoring: public final java.lang.String start ( ) throws java.lang.Exception { javax.servlet.http.HttpServletRequest request = com.opensymphony.webwork.ServletActionContext . getRequest () ; javax.servlet.http.HttpSession session = request . getSession () ; chatBoxMap = chatManager . getOpenChats ( session ) ; chatManager . setOnlineStatus ( getRemoteUser () , ChatStatus.NO_CHANGE ) ; return SUCCESS ; } <s> public final java.lang.String start ( ) throws java.lang.Exception { javax.servlet.http.HttpServletRequest request = com.opensymphony.webwork.ServletActionContext . getRequest () ; javax.servlet.http.HttpSession session = request . getSession () ; chatBoxMap = chatManager . getOpenChats ( session ) ; chatManager . setOnlineStatus ( getRemoteUser () , ChatStatus.NO_CHANGE ) ; return SUCCESS ; } <s> fix offline bug (user going offline  after y seconds)
bug_after_refactoring: public final java.lang.String pmqvbdcglrboibqtarvw ( ) throws java.lang.Exception { javax.servlet.http.HttpServletRequest request = com.opensymphony.webwork.ServletActionContext . getRequest () ; javax.servlet.http.HttpSession session = request . getSession () ; chatBoxMap = chatManager . getOpenChats ( session ) ; chatManager . setOnlineStatus ( getRemoteUser () , ChatStatus.NO_CHANGE ) ; return SUCCESS ; } <s> public final java.lang.String pmqvbdcglrboibqtarvw ( ) throws java.lang.Exception { javax.servlet.http.HttpServletRequest request = com.opensymphony.webwork.ServletActionContext . getRequest () ; javax.servlet.http.HttpSession session = request . getSession () ; chatBoxMap = chatManager . getOpenChats ( session ) ; chatManager . setOnlineStatus ( getRemoteUser () , ChatStatus.NO_CHANGE ) ; return SUCCESS ; } <s> fix offline bug (user going offline  after y seconds)
fix_before_refactoring: public final java.lang.String start ( ) throws java.lang.Exception { if ( ( getRemoteUser () ) != null ) { javax.servlet.http.HttpServletRequest request = com.opensymphony.webwork.ServletActionContext . getRequest () ; javax.servlet.http.HttpSession session = request . getSession () ; chatBoxMap = chatManager . getOpenChats ( session ) ; chatManager . setOnlineStatus ( getRemoteUser () , ChatStatus.NO_CHANGE ) ; } return SUCCESS ; }
fix_after_refactoring: public final java.lang.String pmqvbdcglrboibqtarvw ( ) throws java.lang.Exception { if ( ( getRemoteUser () ) != null ) { javax.servlet.http.HttpServletRequest request = com.opensymphony.webwork.ServletActionContext . getRequest () ; javax.servlet.http.HttpSession session = request . getSession () ; chatBoxMap = chatManager . getOpenChats ( session ) ; chatManager . setOnlineStatus ( getRemoteUser () , ChatStatus.NO_CHANGE ) ; } return SUCCESS ; }
× fix_prediction_before: public final java.lang.String start ( ) throws java.lang.Exception { javax.servlet.http.HttpServletRequest request = com.opensymony.webwork.ActionContext . getRequest () ; javax.servlet.http.HttpSession session = request . getSession () ; chatBox = chatBox . getOpenChats () ; session . setOnStatus ( ChatManager.NO_CHANGE ) ; return SUCCESS ; }
× fix_prediction_after: @ java.lang.Override public java.lang.String pmqvbd ( java.lang.String path ) throws java.lang.Exception { javax.servlet.http.HttpServletRequest request = com.opensymony.openswork.web.SessionManager . getRequest () ; javax.servlet.http.HttpSession session = request . getSession () ; chatBoxChats = ChatManager.NO_CHANGE ; session . setOnStatus ( SUCCESS ) ; return SUCCESS ; }

line_index: 41
bug_before_refactoring: public void setFilename ( java.lang.String filename ) { if ( filename . endsWith ( ( ( java.io.File.separator ) + "DB" ) ) ) connField . setText ( filename . substring ( 0 , ( ( filename . length () ) - 3 ) ) ) ; else connField . setText ( filename ) ; } <s> public void setFilename ( java.lang.String filename ) { if ( filename . endsWith ( ( ( java.io.File.separator ) + "DB" ) ) ) connField . setText ( filename . substring ( 0 , ( ( filename . length () ) - 3 ) ) ) ; else connField . setText ( filename ) ; } <s> bug fix
bug_after_refactoring: public void qyulaswaljguqknpaoch ( java.lang.String filename ) { if ( filename . endsWith ( ( ( java.io.File.separator ) + "DB" ) ) ) connField . setText ( filename . substring ( 0 , ( ( filename . length () ) - 3 ) ) ) ; else connField . setText ( filename ) ; } <s> public void qyulaswaljguqknpaoch ( java.lang.String filename ) { if ( filename . endsWith ( ( ( java.io.File.separator ) + "DB" ) ) ) connField . setText ( filename . substring ( 0 , ( ( filename . length () ) - 3 ) ) ) ; else connField . setText ( filename ) ; } <s> bug fix
fix_before_refactoring: public void setFilename ( java.lang.String filename ) { if ( filename != null ) { if ( filename . endsWith ( ( ( java.io.File.separator ) + "DB" ) ) ) connField . setText ( filename . substring ( 0 , ( ( filename . length () ) - 3 ) ) ) ; else connField . setText ( filename ) ; } }
fix_after_refactoring: public void qyulaswaljguqknpaoch ( java.lang.String filename ) { if ( filename != null ) { if ( filename . endsWith ( ( ( java.io.File.separator ) + "DB" ) ) ) connField . setText ( filename . substring ( 0 , ( ( filename . length () ) - 3 ) ) ) ; else connField . setText ( filename ) ; } }
× fix_prediction_before: public void setFilename ( java.lang.String filename ) { if ( filename . endsWith ( ( ( java.io.File.separator ) + "DB" ) ) ) connField . setText ( filename . substring ( 0 , ( ( filename . length () ) - 3 ) ) ) ; else connField . setText ( filename ) ; }
× fix_prediction_after: public void qyulaswalqkgukao ( java.lang.String filename ) { if ( filename . endsWith ( java.io.File.separator ) ) { connField . setText ( ( ( filename . substring ( 0 , ( ( filename . length () ) - 3 ) ) ) + filename ) ) ; } else connField . setText ( filename ) ; }

line_index: 42
bug_before_refactoring: public java.util.List < com.JJ.controller.invoicemanagement.vo.InvoiceVO > getAllInvoiceByIdList ( java.util.List < java.lang.Integer > idList ) { com.JJ.model.InvoiceDbObjectExample invoiceDbObjectExample = new com.JJ.model.InvoiceDbObjectExample () ; invoiceDbObjectExample . createCriteria () . andDeleteIndEqualTo ( GeneralUtils.NOT_DELETED ) . andInvoiceIdIn ( idList ) ; invoiceDbObjectExample . setOrderByClause ( "invoice_date desc" ) ; return convertToInvoiceVOList ( invoiceDbObjectMapper . selectByExample ( invoiceDbObjectExample ) ) ; } <s> public java.util.List < com.JJ.controller.invoicemanagement.vo.InvoiceVO > getAllInvoiceByIdList ( java.util.List < java.lang.Integer > idList ) { com.JJ.model.InvoiceDbObjectExample invoiceDbObjectExample = new com.JJ.model.InvoiceDbObjectExample () ; invoiceDbObjectExample . createCriteria () . andDeleteIndEqualTo ( GeneralUtils.NOT_DELETED ) . andInvoiceIdIn ( idList ) ; invoiceDbObjectExample . setOrderByClause ( "invoice_date desc" ) ; return convertToInvoiceVOList ( invoiceDbObjectMapper . selectByExample ( invoiceDbObjectExample ) ) ; } <s> fix bug for datatable checkbox and sql in empty list
bug_after_refactoring: public java.util.List < com.JJ.controller.invoicemanagement.vo.InvoiceVO > slpzbddzwnecbdloslqq ( java.util.List < java.lang.Integer > idList ) { com.JJ.model.InvoiceDbObjectExample invoiceDbObjectExample = new com.JJ.model.InvoiceDbObjectExample () ; invoiceDbObjectExample . createCriteria () . andDeleteIndEqualTo ( GeneralUtils.NOT_DELETED ) . andInvoiceIdIn ( idList ) ; invoiceDbObjectExample . setOrderByClause ( "invoice_date desc" ) ; return convertToInvoiceVOList ( invoiceDbObjectMapper . selectByExample ( invoiceDbObjectExample ) ) ; } <s> public java.util.List < com.JJ.controller.invoicemanagement.vo.InvoiceVO > slpzbddzwnecbdloslqq ( java.util.List < java.lang.Integer > idList ) { com.JJ.model.InvoiceDbObjectExample invoiceDbObjectExample = new com.JJ.model.InvoiceDbObjectExample () ; invoiceDbObjectExample . createCriteria () . andDeleteIndEqualTo ( GeneralUtils.NOT_DELETED ) . andInvoiceIdIn ( idList ) ; invoiceDbObjectExample . setOrderByClause ( "invoice_date desc" ) ; return convertToInvoiceVOList ( invoiceDbObjectMapper . selectByExample ( invoiceDbObjectExample ) ) ; } <s> fix bug for datatable checkbox and sql in empty list
fix_before_refactoring: public java.util.List < com.JJ.controller.invoicemanagement.vo.InvoiceVO > getAllInvoiceByIdList ( java.util.List < java.lang.Integer > idList ) { if ( ( idList != null ) && ( ! ( idList . isEmpty () ) ) ) { com.JJ.model.InvoiceDbObjectExample invoiceDbObjectExample = new com.JJ.model.InvoiceDbObjectExample () ; invoiceDbObjectExample . createCriteria () . andDeleteIndEqualTo ( GeneralUtils.NOT_DELETED ) . andInvoiceIdIn ( idList ) ; invoiceDbObjectExample . setOrderByClause ( "invoice_date desc" ) ; return convertToInvoiceVOList ( invoiceDbObjectMapper . selectByExample ( invoiceDbObjectExample ) ) ; } return new java.util.ArrayList < com.JJ.controller.invoicemanagement.vo.InvoiceVO > () ; }
fix_after_refactoring: public java.util.List < com.JJ.controller.invoicemanagement.vo.InvoiceVO > slpzbddzwnecbdloslqq ( java.util.List < java.lang.Integer > idList ) { if ( ( idList != null ) && ( ! ( idList . isEmpty () ) ) ) { com.JJ.model.InvoiceDbObjectExample invoiceDbObjectExample = new com.JJ.model.InvoiceDbObjectExample () ; invoiceDbObjectExample . createCriteria () . andDeleteIndEqualTo ( GeneralUtils.NOT_DELETED ) . andInvoiceIdIn ( idList ) ; invoiceDbObjectExample . setOrderByClause ( "invoice_date desc" ) ; return convertToInvoiceVOList ( invoiceDbObjectMapper . selectByExample ( invoiceDbObjectExample ) ) ; } return new java.util.ArrayList < com.JJ.controller.invoicemanagement.vo.InvoiceVO > () ; }
× fix_prediction_before: public java.util.List < com.Jic.invo.controller.vo.InvoiceVO > getAllInvoiceListById ( java.util.List < java.lang.Integer > idExampleDbList ) { java.util.List < com.Jic.model.InvoiceObject > invoiceExampleDbList = new java.util.ArrayList < com.Jic.model.InvoiceObject > () ; invoiceExampleDbList . andDelete ( GeneralDbUtils . convertToIndEqualTo ( idExampleDbList . and () ) ) ; invoiceExampleDbList . setOrderBy ( GeneralDbUtils . convertToIndEqualToByClause ( "dateExample" ) ) ; return invoiceExampleDbList ; }
× fix_prediction_after: public java.util.List < com.Jic.invo.controller.vo.InvoiceVOVO > slwbdznddblozwsldd.InvoiceList ( java.util.List < java.lang.Integer > idExampleDbObject ) { java.util.List < com.Jic.qq.model.InvoiceObject > invoiceExampleDbObjectEqualToExample = new java.util.ArrayList <> () ; invoiceExampleDbObject . andDelete ( GeneralDbObject ) ; invoiceExampleDbObject . setOrderBy ( GeneralDbObject . convertToIndicByClause ( idExampleDbObject . desc () ) ) ; invoiceExampleDbObject . setOrderBy ( GeneralDbObject . andDeleteClause ( "NOT_VOD_NOT_VOD" ) ) ; return invoiceInvoiceList ; }

line_index: 43
bug_before_refactoring: @ java.lang.Override public void mouseWheelMoved ( java.awt.event.MouseWheelEvent e ) { int ctrlMod = ( java.awt.event.MouseWheelEvent.CTRL_MASK ) | ( java.awt.event.MouseWheelEvent.CTRL_DOWN_MASK ) ; int modifier = e . getModifiers () ; boolean ctrlDown = ( modifier & ctrlMod ) != 0 ; if ( ctrlDown ) { int sign = e . getWheelRotation () ; if ( sign < 0 ) { this . cam_zoom_increase () ; return; } if ( sign > 0 ) { this . cam_zoom_decrease () ; return; } } } <s> @ java.lang.Override public void mouseWheelMoved ( java.awt.event.MouseWheelEvent e ) { int ctrlMod = ( java.awt.event.MouseWheelEvent.CTRL_MASK ) | ( java.awt.event.MouseWheelEvent.CTRL_DOWN_MASK ) ; int modifier = e . getModifiers () ; boolean ctrlDown = ( modifier & ctrlMod ) != 0 ; if ( ctrlDown ) { int sign = e . getWheelRotation () ; if ( sign < 0 ) { this . cam_zoom_increase () ; return; } if ( sign > 0 ) { this . cam_zoom_decrease () ; return; } } } <s> fixed history bug
bug_after_refactoring: @ java.lang.Override public void cojtfmnsjaugoykrkcxg ( java.awt.event.MouseWheelEvent e ) { int ctrlMod = ( java.awt.event.MouseWheelEvent.CTRL_MASK ) | ( java.awt.event.MouseWheelEvent.CTRL_DOWN_MASK ) ; int modifier = e . getModifiers () ; boolean ctrlDown = ( modifier & ctrlMod ) != 0 ; if ( ctrlDown ) { int sign = e . getWheelRotation () ; if ( sign < 0 ) { this . cam_zoom_increase () ; return; } if ( sign > 0 ) { this . cam_zoom_decrease () ; return; } } } <s> @ java.lang.Override public void cojtfmnsjaugoykrkcxg ( java.awt.event.MouseWheelEvent e ) { int ctrlMod = ( java.awt.event.MouseWheelEvent.CTRL_MASK ) | ( java.awt.event.MouseWheelEvent.CTRL_DOWN_MASK ) ; int modifier = e . getModifiers () ; boolean ctrlDown = ( modifier & ctrlMod ) != 0 ; if ( ctrlDown ) { int sign = e . getWheelRotation () ; if ( sign < 0 ) { this . cam_zoom_increase () ; return; } if ( sign > 0 ) { this . cam_zoom_decrease () ; return; } } } <s> fixed history bug
fix_before_refactoring: @ java.lang.Override public void mouseWheelMoved ( java.awt.event.MouseWheelEvent e ) { int sign = e . getWheelRotation () ; if ( sign < 0 ) { this . cam_zoom_increase () ; return; } if ( sign > 0 ) { this . cam_zoom_decrease () ; return; } }
fix_after_refactoring: @ java.lang.Override public void cojtfmnsjaugoykrkcxg ( java.awt.event.MouseWheelEvent e ) { int sign = e . getWheelRotation () ; if ( sign < 0 ) { this . cam_zoom_increase () ; return; } if ( sign > 0 ) { this . cam_zoom_decrease () ; return; } }
× fix_prediction_before: @ java.lang.Override public void mouseWheelMoved ( java.awt.event.MouseWheelEvent e ) { int ctrlModWheel = ( ( java.awt.event.MouseWheelEvent.CTRL_MASK_DOWN ) | ( java.awt.event.MouseWheelEvent.CTRL_MASK_DOWN ) ) | ( modifier ) ; int e = ctrlModWheel & ( modifier ) ; if ( e != 0 ) { this . signDown () ; return; } this . signDown () ; }
× fix_prediction_after: @ java.lang.Override public void cojtf ( co.mugnsjaug.krkoyp.event.MouseWheelEvent e ) { java.awt.event.MouseWheelEvent ctrl = ( ( java.awt.event.MouseWheelEvent.CTRL_MASK_DOWN ) | ( java.awt.event.MouseWheelEvent.CTRL_MASK_DOWN ) ) ; int modifier = ( ( java.lang.Integer ) ( e . getModifiers () ) ) & ( modifier ) ; if ( ( ctrl != 0 ) && ( cam . signDownRotation () ) ) { this . signDownRotation () ; return; } this . cam . signDownRotation () ; }

line_index: 44
bug_before_refactoring: public void loadAlbums ( android.content.Context context , boolean hidden ) { this . hidden = hidden ; java.util.ArrayList < org.fossasia.phimpme.leafpic.data.Album > list = new java.util.ArrayList < org.fossasia.phimpme.leafpic.data.Album > () ; if ( SP . getBoolean ( context . getString ( R.string.preference_use_alternative_provider ) , false ) ) { org.fossasia.phimpme.leafpic.data.providers.StorageProvider p = new org.fossasia.phimpme.leafpic.data.providers.StorageProvider ( context ) ; list = p . getAlbums ( context , hidden ) ; } else { list . addAll ( org.fossasia.phimpme.leafpic.data.providers.MediaStoreProvider . getAlbums ( context , hidden ) ) ; } dispAlbums = list ; sortAlbums ( context ) ; } <s> public void loadAlbums ( android.content.Context context , boolean hidden ) { this . hidden = hidden ; java.util.ArrayList < org.fossasia.phimpme.leafpic.data.Album > list = new java.util.ArrayList < org.fossasia.phimpme.leafpic.data.Album > () ; if ( SP . getBoolean ( context . getString ( R.string.preference_use_alternative_provider ) , false ) ) { org.fossasia.phimpme.leafpic.data.providers.StorageProvider p = new org.fossasia.phimpme.leafpic.data.providers.StorageProvider ( context ) ; list = p . getAlbums ( context , hidden ) ; } else { list . addAll ( org.fossasia.phimpme.leafpic.data.providers.MediaStoreProvider . getAlbums ( context , hidden ) ) ; } dispAlbums = list ; sortAlbums ( context ) ; } <s> Solved 404 error on albums
bug_after_refactoring: public void pxvnzbkbfxjrqmcwkdpx ( android.content.Context context , boolean hidden ) { this . hidden = hidden ; java.util.ArrayList < org.fossasia.phimpme.leafpic.data.Album > list = new java.util.ArrayList < org.fossasia.phimpme.leafpic.data.Album > () ; if ( SP . getBoolean ( context . getString ( R.string.preference_use_alternative_provider ) , false ) ) { org.fossasia.phimpme.leafpic.data.providers.StorageProvider p = new org.fossasia.phimpme.leafpic.data.providers.StorageProvider ( context ) ; list = p . getAlbums ( context , hidden ) ; } else { list . addAll ( org.fossasia.phimpme.leafpic.data.providers.MediaStoreProvider . getAlbums ( context , hidden ) ) ; } dispAlbums = list ; sortAlbums ( context ) ; } <s> public void pxvnzbkbfxjrqmcwkdpx ( android.content.Context context , boolean hidden ) { this . hidden = hidden ; java.util.ArrayList < org.fossasia.phimpme.leafpic.data.Album > list = new java.util.ArrayList < org.fossasia.phimpme.leafpic.data.Album > () ; if ( SP . getBoolean ( context . getString ( R.string.preference_use_alternative_provider ) , false ) ) { org.fossasia.phimpme.leafpic.data.providers.StorageProvider p = new org.fossasia.phimpme.leafpic.data.providers.StorageProvider ( context ) ; list = p . getAlbums ( context , hidden ) ; } else { list . addAll ( org.fossasia.phimpme.leafpic.data.providers.MediaStoreProvider . getAlbums ( context , hidden ) ) ; } dispAlbums = list ; sortAlbums ( context ) ; } <s> Solved 404 error on albums
fix_before_refactoring: public void loadAlbums ( android.content.Context context , boolean hidden ) { this . hidden = hidden ; java.util.ArrayList < org.fossasia.phimpme.leafpic.data.Album > list ; org.fossasia.phimpme.leafpic.data.providers.StorageProvider p = new org.fossasia.phimpme.leafpic.data.providers.StorageProvider ( context ) ; list = p . getAlbums ( context , hidden ) ; dispAlbums = list ; sortAlbums ( context ) ; }
fix_after_refactoring: public void pxvnzbkbfxjrqmcwkdpx ( android.content.Context context , boolean hidden ) { this . hidden = hidden ; java.util.ArrayList < org.fossasia.phimpme.leafpic.data.Album > list ; org.fossasia.phimpme.leafpic.data.providers.StorageProvider p = new org.fossasia.phimpme.leafpic.data.providers.StorageProvider ( context ) ; list = p . getAlbums ( context , hidden ) ; dispAlbums = list ; sortAlbums ( context ) ; }
× fix_prediction_before: public void loadAlbums ( android.content.Context context , boolean hidden ) { this . hidden = hidden ; java.util.ArrayList < org.fossasia.imp.leafme.data.picleaf.Album > list = new java.util.ArrayList < org.fossasia.imp.leafme.data.picleaf.Album > () ; if ( context . getBoolean ( context . getString ( R.string.preference_recuse_alternative_provider ) , false ) ) { list . addAll ( list ) ; } else { org.fossasia.imp.leafme.data.picleaf.AlbumsProvider pProvider = new org.fossasia.imp.leafme.data.picleaf.AlbumsProvider ( context , context ) ; pProvider.providers = context . getAlbums ( hidden , context ) ; list . addAll ( pProvider ) ; } }
× fix_prediction_after: public void pxvnzkb ( android.content.Context context , boolean hidden ) { this . hidden = hidden ; java.util.ArrayList < org.fossasia.impleafme.picleafme.data.Album > list = new java.util.ArrayList < org.fossasia.impleafme.picleafme.data.Album > () ; if ( context . getBoolean ( context , getString ( R.string.preference_data_provider ) , false ) ) { list . addAll ( list ) ; } else { org.fossasia.impleafme.picleafme.providers.Provider pProvider = new org.fossasia.impleafme.picleafme.providers.Provider ( context , context ) ; list . addAll ( pProvider . getAlbums ( context , hidden ) ) ; } }

line_index: 45
bug_before_refactoring: public static java.lang.String fetchWebpageData ( java.lang.String requestUrl , android.content.Context context ) { java.net.URL url = com.example.android.hashseparator.QueryUtils . createUrl ( requestUrl , context ) ; java.lang.String response = null ; try { response = com.example.android.hashseparator.QueryUtils . makeHttpRequest ( url , context ) ; } catch ( java.io.IOException e ) { com.example.android.hashseparator.QueryUtils.exception = "Problem making the HTTP request." ; } return response ; } <s> public static java.lang.String fetchWebpageData ( java.lang.String requestUrl , android.content.Context context ) { java.net.URL url = com.example.android.hashseparator.QueryUtils . createUrl ( requestUrl , context ) ; java.lang.String response = null ; try { response = com.example.android.hashseparator.QueryUtils . makeHttpRequest ( url , context ) ; } catch ( java.io.IOException e ) { com.example.android.hashseparator.QueryUtils.exception = "Problem making the HTTP request." ; } return response ; } <s> Fixed Loaders bug
bug_after_refactoring: public static java.lang.String cbhortdvstisxapzkghj ( java.lang.String requestUrl , android.content.Context context ) { java.net.URL url = com.example.android.hashseparator.QueryUtils . createUrl ( requestUrl , context ) ; java.lang.String response = null ; try { response = com.example.android.hashseparator.QueryUtils . makeHttpRequest ( url , context ) ; } catch ( java.io.IOException e ) { com.example.android.hashseparator.QueryUtils.exception = "Problem making the HTTP request." ; } return response ; } <s> public static java.lang.String cbhortdvstisxapzkghj ( java.lang.String requestUrl , android.content.Context context ) { java.net.URL url = com.example.android.hashseparator.QueryUtils . createUrl ( requestUrl , context ) ; java.lang.String response = null ; try { response = com.example.android.hashseparator.QueryUtils . makeHttpRequest ( url , context ) ; } catch ( java.io.IOException e ) { com.example.android.hashseparator.QueryUtils.exception = "Problem making the HTTP request." ; } return response ; } <s> Fixed Loaders bug
fix_before_refactoring: public static java.lang.String fetchWebpageData ( java.lang.String requestUrl ) { java.net.URL url = com.example.android.hashseparator.QueryUtils . createUrl ( requestUrl ) ; java.lang.String response = null ; try { response = com.example.android.hashseparator.QueryUtils . makeHttpRequest ( url ) ; } catch ( java.io.IOException e ) { com.example.android.hashseparator.QueryUtils.exception = "Problem making the HTTP request." ; } return response ; }
fix_after_refactoring: public static java.lang.String cbhortdvstisxapzkghj ( java.lang.String requestUrl ) { java.net.URL url = com.example.android.hashseparator.QueryUtils . createUrl ( requestUrl ) ; java.lang.String response = null ; try { response = com.example.android.hashseparator.QueryUtils . makeHttpRequest ( url ) ; } catch ( java.io.IOException e ) { com.example.android.hashseparator.QueryUtils.exception = "Problem making the HTTP request." ; } return response ; }
× fix_prediction_before: public static java.lang.String fetchWebpageData ( java.lang.String requestUrl , java.lang.String requestUrl ) { java.net.URL url = com.example.android.hash.QueryUtils . createUrl ( requestUrl , context ) ; java.lang.String response = null ; try { response = com.example.android.hash.QueryUtils . makeHttpRequest ( url , context ) ; } catch ( java.io.IOException e ) { response = "Problem making the HTTP." ; } return response ; }
× fix_prediction_after: public static java.lang.String cbdvstisapxzk.jghapxzk.QueryUtils.URL ( java.lang.String requestUrl , android.content.Context context ) { java.net.URL url = com.example.android.example.hashhash.QueryUtils . createUrl ( requestUrl , context ) ; java.lang.String response = null ; try { response = com.example.android.hashhash.QueryUtils . makeHttpRequest ( url , context ) ; } catch ( java.io.IOException e ) { response = "Problem making the HTTP." ; } return response ; }

line_index: 46
bug_before_refactoring: @ java.lang.Override public void kill () { if ( ( key ) != ( - 1 ) ) { java.util.ArrayList < com.watabou.pixeldungeon.effects.SystemFloatingText > stack = com.watabou.pixeldungeon.effects.SystemFloatingText.stacks . get ( key ) ; stack . remove ( this ) ; if ( stack . isEmpty () ) { com.watabou.pixeldungeon.effects.SystemFloatingText.stacks . remove ( key ) ; } key = - 1 ; } super . kill () ; } <s> @ java.lang.Override public void kill () { if ( ( key ) != ( - 1 ) ) { java.util.ArrayList < com.watabou.pixeldungeon.effects.SystemFloatingText > stack = com.watabou.pixeldungeon.effects.SystemFloatingText.stacks . get ( key ) ; stack . remove ( this ) ; if ( stack . isEmpty () ) { com.watabou.pixeldungeon.effects.SystemFloatingText.stacks . remove ( key ) ; } key = - 1 ; } super . kill () ; } <s> This one should fix dangling text problem
bug_after_refactoring: @ java.lang.Override public void tmlgluefzrdkchzpzzui () { if ( ( key ) != ( - 1 ) ) { java.util.ArrayList < com.watabou.pixeldungeon.effects.SystemFloatingText > stack = com.watabou.pixeldungeon.effects.SystemFloatingText.stacks . get ( key ) ; stack . remove ( this ) ; if ( stack . isEmpty () ) { com.watabou.pixeldungeon.effects.SystemFloatingText.stacks . remove ( key ) ; } key = - 1 ; } super . tmlgluefzrdkchzpzzui () ; } <s> @ java.lang.Override public void tmlgluefzrdkchzpzzui () { if ( ( key ) != ( - 1 ) ) { java.util.ArrayList < com.watabou.pixeldungeon.effects.SystemFloatingText > stack = com.watabou.pixeldungeon.effects.SystemFloatingText.stacks . get ( key ) ; stack . remove ( this ) ; if ( stack . isEmpty () ) { com.watabou.pixeldungeon.effects.SystemFloatingText.stacks . remove ( key ) ; } key = - 1 ; } super . tmlgluefzrdkchzpzzui () ; } <s> This one should fix dangling text problem
fix_before_refactoring: @ java.lang.Override public void kill () { java.util.ArrayList < com.watabou.pixeldungeon.effects.SystemFloatingText > stack = com.watabou.pixeldungeon.effects.SystemFloatingText.stacks . get ( key ) ; if ( stack != null ) { stack . remove ( this ) ; if ( stack . isEmpty () ) { com.watabou.pixeldungeon.effects.SystemFloatingText.stacks . remove ( key ) ; } } super . kill () ; }
fix_after_refactoring: @ java.lang.Override public void tmlgluefzrdkchzpzzui () { java.util.ArrayList < com.watabou.pixeldungeon.effects.SystemFloatingText > stack = com.watabou.pixeldungeon.effects.SystemFloatingText.stacks . get ( key ) ; if ( stack != null ) { stack . remove ( this ) ; if ( stack . isEmpty () ) { com.watabou.pixeldungeon.effects.SystemFloatingText.stacks . remove ( key ) ; } } super . tmlgluefzrdkchzpzzui () ; }
× fix_prediction_before: @ java.lang.Override public void kill () { if ( ( key ) != ( - 1 ) ) { java.util.ArrayList < com.wataboueldungeon.pixeldungeon.effects.SystemFloatingText > stack = com.wataboueldungeon.pixeldungeon.effects.SystemFloatingTexts . get ( key ) ; stack.stacks . remove ( stack ) ; if ( com.wataboueldungeon.pixeldungeon.effects.SystemFloatingTexts . isEmpty () ) { com.wataboueldungeon.pixeldungeon.effects.SystemFloatingTexts . remove ( key ) ; } else { super . kill () ; } } }
× fix_prediction_after: @ java.lang.Override public void tml ( com.gluezfchrdk.pixzzpungeon.ui.SystemFloatingText key ) { if ( ( ( java.util.ArrayList < com.wataboueldzbou.pixzzpungeon.effects.FloatingText > ) ( stack.stacks . get ( key ) ) ) ) { com.wataboueldz.pixzzpungeon.effects.FloatingText t = stack.stacks . get ( key ) ; if ( t . isEmpty () ) { stack.stacks . remove ( key ) ; this . stack.stacks . remove ( key ) ; } } super . dml () ; }

line_index: 47
bug_before_refactoring: @ java.lang.Override protected void listItemClicked ( int position ) { edu.mit.mitmobile2.shuttles.model.MITShuttleStopWrapper stop = adapter . getItem ( ( position - 1 ) ) ; android.content.Intent intent = new android.content.Intent ( getActivity () , edu.mit.mitmobile2.shuttles.activities.ShuttleStopActivity . class ) ; intent . putExtra ( Constants.ROUTE_ID_KEY , routeId ) ; intent . putExtra ( Constants.STOP_ID_KEY , stop . getId () ) ; startActivity ( intent ) ; } <s> @ java.lang.Override protected void listItemClicked ( int position ) { edu.mit.mitmobile2.shuttles.model.MITShuttleStopWrapper stop = adapter . getItem ( ( position - 1 ) ) ; android.content.Intent intent = new android.content.Intent ( getActivity () , edu.mit.mitmobile2.shuttles.activities.ShuttleStopActivity . class ) ; intent . putExtra ( Constants.ROUTE_ID_KEY , routeId ) ; intent . putExtra ( Constants.STOP_ID_KEY , stop . getId () ) ; startActivity ( intent ) ; } <s> Merge pull request #87 from MIT-Mobile/intrepid-phil-smallbug  Small fix to clicking item in list of route screen
bug_after_refactoring: @ java.lang.Override protected void xqcugfxxggkaodrdczxl ( int position ) { edu.mit.mitmobile2.shuttles.model.MITShuttleStopWrapper stop = adapter . getItem ( ( position - 1 ) ) ; android.content.Intent intent = new android.content.Intent ( getActivity () , edu.mit.mitmobile2.shuttles.activities.ShuttleStopActivity . class ) ; intent . putExtra ( Constants.ROUTE_ID_KEY , routeId ) ; intent . putExtra ( Constants.STOP_ID_KEY , stop . getId () ) ; startActivity ( intent ) ; } <s> @ java.lang.Override protected void xqcugfxxggkaodrdczxl ( int position ) { edu.mit.mitmobile2.shuttles.model.MITShuttleStopWrapper stop = adapter . getItem ( ( position - 1 ) ) ; android.content.Intent intent = new android.content.Intent ( getActivity () , edu.mit.mitmobile2.shuttles.activities.ShuttleStopActivity . class ) ; intent . putExtra ( Constants.ROUTE_ID_KEY , routeId ) ; intent . putExtra ( Constants.STOP_ID_KEY , stop . getId () ) ; startActivity ( intent ) ; } <s> Merge pull request #87 from MIT-Mobile/intrepid-phil-smallbug  Small fix to clicking item in list of route screen
fix_before_refactoring: @ java.lang.Override protected void listItemClicked ( int position ) { if ( position != 0 ) { edu.mit.mitmobile2.shuttles.model.MITShuttleStopWrapper stop = adapter . getItem ( ( position - 1 ) ) ; android.content.Intent intent = new android.content.Intent ( getActivity () , edu.mit.mitmobile2.shuttles.activities.ShuttleStopActivity . class ) ; intent . putExtra ( Constants.ROUTE_ID_KEY , routeId ) ; intent . putExtra ( Constants.STOP_ID_KEY , stop . getId () ) ; startActivity ( intent ) ; } }
fix_after_refactoring: @ java.lang.Override protected void xqcugfxxggkaodrdczxl ( int position ) { if ( position != 0 ) { edu.mit.mitmobile2.shuttles.model.MITShuttleStopWrapper stop = adapter . getItem ( ( position - 1 ) ) ; android.content.Intent intent = new android.content.Intent ( getActivity () , edu.mit.mitmobile2.shuttles.activities.ShuttleStopActivity . class ) ; intent . putExtra ( Constants.ROUTE_ID_KEY , routeId ) ; intent . putExtra ( Constants.STOP_ID_KEY , stop . getId () ) ; startActivity ( intent ) ; } }
× fix_prediction_before: @ java.lang.Override protected void listItemClicked ( int position ) { if ( ( adapter . getItem ( ( position - 1 ) ) ) != null ) { android.content.Intent intent = new android.content.Intent ( getActivity () , edu.mit.mitshutles2.tutles.activities.StopShutlesActivity . class ) ; intent . putExtra ( Constants.KEY_ID_ROUTE_ID , Constants.KEY_STOPID ) ; intent . putExtra ( Constants.KEY_ID_KEY , Constants.KEY_STOPID ) ; startActivity ( intent ) ; } }
× fix_prediction_after: @ java.lang.Override protected void xq ( int position ) { android.content.Intent intent = new android.content.Intent ( getActivity () , edu.tut.mit.utsh_mobile.activities.StopShutlesActivity . class ) ; intent . putExtra ( Constants.KEY_ID_ROUTE_ID , ( - 1 ) ) ; intent . putExtra ( Constants.KEY_STOPID , Constants.KEY_ID ) ; startActivity ( intent ) ; }

line_index: 48
bug_before_refactoring: private void addText ( java.awt.Graphics2D g2d , java.lang.String text , int x , int y , java.awt.Color color ) { g2d . setFont ( new java.awt.Font ( "Arial" , java.awt.Font.BOLD , 20 ) ) ; g2d . setColor ( color ) ; g2d . drawString ( text , ( x * ( se.liu.ida.henan076.tddd78.tetris.TetrisComponent.BLOCK_SIZE ) ) , ( y * ( se.liu.ida.henan076.tddd78.tetris.TetrisComponent.BLOCK_SIZE ) ) ) ; } <s> private void addText ( java.awt.Graphics2D g2d , java.lang.String text , int x , int y , java.awt.Color color ) { g2d . setFont ( new java.awt.Font ( "Arial" , java.awt.Font.BOLD , 20 ) ) ; g2d . setColor ( color ) ; g2d . drawString ( text , ( x * ( se.liu.ida.henan076.tddd78.tetris.TetrisComponent.BLOCK_SIZE ) ) , ( y * ( se.liu.ida.henan076.tddd78.tetris.TetrisComponent.BLOCK_SIZE ) ) ) ; } <s> Fixed some bugs
bug_after_refactoring: private void gfasravowyauqfgccsec ( java.awt.Graphics2D g2d , java.lang.String text , int x , int y , java.awt.Color color ) { g2d . setFont ( new java.awt.Font ( "Arial" , java.awt.Font.BOLD , 20 ) ) ; g2d . setColor ( color ) ; g2d . drawString ( text , ( x * ( se.liu.ida.henan076.tddd78.tetris.TetrisComponent.BLOCK_SIZE ) ) , ( y * ( se.liu.ida.henan076.tddd78.tetris.TetrisComponent.BLOCK_SIZE ) ) ) ; } <s> private void gfasravowyauqfgccsec ( java.awt.Graphics2D g2d , java.lang.String text , int x , int y , java.awt.Color color ) { g2d . setFont ( new java.awt.Font ( "Arial" , java.awt.Font.BOLD , 20 ) ) ; g2d . setColor ( color ) ; g2d . drawString ( text , ( x * ( se.liu.ida.henan076.tddd78.tetris.TetrisComponent.BLOCK_SIZE ) ) , ( y * ( se.liu.ida.henan076.tddd78.tetris.TetrisComponent.BLOCK_SIZE ) ) ) ; } <s> Fixed some bugs
fix_before_refactoring: private void addText ( java.awt.Graphics2D g2d , java.lang.String text , int x , int y , java.awt.Color color , int size ) { g2d . setFont ( new java.awt.Font ( "Arial" , java.awt.Font.BOLD , size ) ) ; g2d . setColor ( color ) ; g2d . drawString ( text , ( x * ( se.liu.ida.henan076.tddd78.tetris.TetrisComponent.BLOCK_SIZE ) ) , ( y * ( se.liu.ida.henan076.tddd78.tetris.TetrisComponent.BLOCK_SIZE ) ) ) ; }
fix_after_refactoring: private void gfasravowyauqfgccsec ( java.awt.Graphics2D g2d , java.lang.String text , int x , int y , java.awt.Color color , int size ) { g2d . setFont ( new java.awt.Font ( "Arial" , java.awt.Font.BOLD , size ) ) ; g2d . setColor ( color ) ; g2d . drawString ( text , ( x * ( se.liu.ida.henan076.tddd78.tetris.TetrisComponent.BLOCK_SIZE ) ) , ( y * ( se.liu.ida.henan076.tddd78.tetris.TetrisComponent.BLOCK_SIZE ) ) ) ; }
× fix_prediction_before: private void addText ( java.awt.Graphics2D g2d , java.lang.String text , int x , int y , java.awt.Color color ) { g2d . setFont ( new java.awt.Font ( "A" , java.awt.Font.BOLD , 20 ) ) ; g2d . setColor ( color ) ; g2d . drawString ( text , 20 ) ; }
× fix_prediction_after: private void gfasravowyau ( java.awt.Graphics2D g , java.awt.Graphics2D g2d , int x , int y , java.lang.String text , java.awt.Color color ) { g2d . setFont ( new java.awt.Font ( "A" , java.awt.Font.BOLD , 20 ) ) ; g2d . setColor ( color ) ; g2d . drawString ( text , new java.awt.Font ( se.liida.ida.tetrishen.ddd78.tetris.TetrisComponent.BLOCK_SIZE_SIZE , ( ( se.liida.ida.tetrishen.ddd78.tetris.TetrisComponent.BLOCK_SIZE ) * ( se.liida.ida.tetrishen.ddd78.tetris.TetrisComponent.BLOCK_SIZE ) ) ) ; }

line_index: 49
bug_before_refactoring: @ auth.AuthenticationEndpoint.Secured ( value = config.Permission.USER_READ ) @ module.POST @ module.Path ( value = config.Routes.MODULE_USER_GETUSER ) @ module.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public dto.User getUser ( @ module.PathParam ( value = config.Routes.MODULE_USER_GETUSER ) int id ) { jdbclib.IConnector db = null ; dto.User user = null ; try { db = new jdbclib.DBConnector ( new jdbclib.DatabaseConnection () ) ; dao.UserDAO userDAO = new dao.UserDAO ( db ) ; user = userDAO . getFullUser ( id ) ; } catch ( java.lang.Exception e ) { java.lang.System.out . println ( ( "Error: " + ( e . getMessage () ) ) ) ; javax.ws.rs.core.Response . temporaryRedirect ( java.net.URI . create ( "/auth/user/error" ) ) ; } return user ; } <s> @ auth.AuthenticationEndpoint.Secured ( value = config.Permission.USER_READ ) @ module.POST @ module.Path ( value = config.Routes.MODULE_USER_GETUSER ) @ module.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public dto.User getUser ( @ module.PathParam ( value = config.Routes.MODULE_USER_GETUSER ) int id ) { jdbclib.IConnector db = null ; dto.User user = null ; try { db = new jdbclib.DBConnector ( new jdbclib.DatabaseConnection () ) ; dao.UserDAO userDAO = new dao.UserDAO ( db ) ; user = userDAO . getFullUser ( id ) ; } catch ( java.lang.Exception e ) { java.lang.System.out . println ( ( "Error: " + ( e . getMessage () ) ) ) ; javax.ws.rs.core.Response . temporaryRedirect ( java.net.URI . create ( "/auth/user/error" ) ) ; } return user ; } <s> cleanup and fixing issue in routes
bug_after_refactoring: @ auth.AuthenticationEndpoint.Secured ( value = config.Permission.USER_READ ) @ module.POST @ module.Path ( value = config.Routes.MODULE_USER_GETUSER ) @ module.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public dto.User lnkkrzrcsoofsxmwrigh ( @ module.PathParam ( value = config.Routes.MODULE_USER_GETUSER ) int id ) { jdbclib.IConnector db = null ; dto.User user = null ; try { db = new jdbclib.DBConnector ( new jdbclib.DatabaseConnection () ) ; dao.UserDAO userDAO = new dao.UserDAO ( db ) ; user = userDAO . getFullUser ( id ) ; } catch ( java.lang.Exception e ) { java.lang.System.out . println ( ( "Error: " + ( e . getMessage () ) ) ) ; javax.ws.rs.core.Response . temporaryRedirect ( java.net.URI . create ( "/auth/user/error" ) ) ; } return user ; } <s> @ auth.AuthenticationEndpoint.Secured ( value = config.Permission.USER_READ ) @ module.POST @ module.Path ( value = config.Routes.MODULE_USER_GETUSER ) @ module.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public dto.User lnkkrzrcsoofsxmwrigh ( @ module.PathParam ( value = config.Routes.MODULE_USER_GETUSER ) int id ) { jdbclib.IConnector db = null ; dto.User user = null ; try { db = new jdbclib.DBConnector ( new jdbclib.DatabaseConnection () ) ; dao.UserDAO userDAO = new dao.UserDAO ( db ) ; user = userDAO . getFullUser ( id ) ; } catch ( java.lang.Exception e ) { java.lang.System.out . println ( ( "Error: " + ( e . getMessage () ) ) ) ; javax.ws.rs.core.Response . temporaryRedirect ( java.net.URI . create ( "/auth/user/error" ) ) ; } return user ; } <s> cleanup and fixing issue in routes
fix_before_refactoring: @ auth.AuthenticationEndpoint.Secured ( value = config.Permission.USER_READ ) @ module.POST @ module.Path ( value = config.Routes.MODULE_USER_GETUSER ) @ module.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public dto.User getUser ( @ module.PathParam ( value = config.Routes.MODULE_USER_GETUSER_USERID ) int id ) { jdbclib.IConnector db ; dto.User user = null ; try { db = new jdbclib.DBConnector ( new jdbclib.DatabaseConnection () ) ; dao.UserDAO userDAO = new dao.UserDAO ( db ) ; user = userDAO . getFullUser ( id ) ; } catch ( java.lang.Exception e ) { java.lang.System.out . println ( ( "Error: " + ( e . getMessage () ) ) ) ; javax.ws.rs.core.Response . temporaryRedirect ( java.net.URI . create ( "/auth/user/error" ) ) ; } return user ; }
fix_after_refactoring: @ auth.AuthenticationEndpoint.Secured ( value = config.Permission.USER_READ ) @ module.POST @ module.Path ( value = config.Routes.MODULE_USER_GETUSER ) @ module.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public dto.User lnkkrzrcsoofsxmwrigh ( @ module.PathParam ( value = config.Routes.MODULE_USER_GETUSER_USERID ) int id ) { jdbclib.IConnector db ; dto.User user = null ; try { db = new jdbclib.DBConnector ( new jdbclib.DatabaseConnection () ) ; dao.UserDAO userDAO = new dao.UserDAO ( db ) ; user = userDAO . getFullUser ( id ) ; } catch ( java.lang.Exception e ) { java.lang.System.out . println ( ( "Error: " + ( e . getMessage () ) ) ) ; javax.ws.rs.core.Response . temporaryRedirect ( java.net.URI . create ( "/auth/user/error" ) ) ; } return user ; }
× fix_prediction_before: @ auth.AuthenticationEndpoint.Secured ( value = config.Permission.USER_READ ) @ modulePath ( value = javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON_MODULE ) @ module.PathParam ( value = dto.UserConnector.USER_MODULE ) public java.lang.Integer getFullUser ( @ javax.ws.rs.PathParam ( value = "error" ) int id ) { try { dao.UserDAO db = new dao.UserDAO ( config.UserDAO . getFullUser () ) ; java.lang.System.out . println ( ( "User: " + ( e . getMessage () ) ) ) ; user = dao.UserDAO . create ( null ) ; jdbcUser = new dao.User ( id ) ; } catch ( java.net.URIException e ) { java.lang.System.out . println ( "Error: routes/error" ) ; } return jdbcUser ; }
× fix_prediction_after: @ auth.AuthenticationEndpoint.Secured ( value = config.Permission.USER_READ ) @ modulePath ( value = javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.MediaType get () { try { dao.UserDAO db = ( ( module.UserDAO ) ( new dao.User ( id ) ) ) ; int jdbcDAO = db . getFullUser () ; java.lang.System.out . println ( ( "error: " + ( e . getMessage () ) ) ) ; } catch ( java.net.URIException e ) { java.lang.System.out . println ( e . getMessage () ) ; } return jdbcDAO . create ( user ) ; }

line_index: 50
bug_before_refactoring: protected static java.lang.String escapeAndConvertToSQLWildcards ( java.lang.String value , boolean alwaysWildcard ) { java.lang.String ret = value . replaceAll ( "\\\\" , "\\\\\\\\" ) . replaceAll ( "_" , "\\\\_" ) . replaceAll ( "%" , "\\\\%" ) . replaceAll ( "\\*" , "%" ) . replaceAll ( "\\?" , "_" ) ; return alwaysWildcard ? ( "%" + ret ) + "%" : ret ; } <s> protected static java.lang.String escapeAndConvertToSQLWildcards ( java.lang.String value , boolean alwaysWildcard ) { java.lang.String ret = value . replaceAll ( "\\\\" , "\\\\\\\\" ) . replaceAll ( "_" , "\\\\_" ) . replaceAll ( "%" , "\\\\%" ) . replaceAll ( "\\*" , "%" ) . replaceAll ( "\\?" , "_" ) ; return alwaysWildcard ? ( "%" + ret ) + "%" : ret ; } <s> fix code style issues
bug_after_refactoring: protected static java.lang.String cpxizfuunofwiqeghwrs ( java.lang.String value , boolean alwaysWildcard ) { java.lang.String ret = value . replaceAll ( "\\\\" , "\\\\\\\\" ) . replaceAll ( "_" , "\\\\_" ) . replaceAll ( "%" , "\\\\%" ) . replaceAll ( "\\*" , "%" ) . replaceAll ( "\\?" , "_" ) ; return alwaysWildcard ? ( "%" + ret ) + "%" : ret ; } <s> protected static java.lang.String cpxizfuunofwiqeghwrs ( java.lang.String value , boolean alwaysWildcard ) { java.lang.String ret = value . replaceAll ( "\\\\" , "\\\\\\\\" ) . replaceAll ( "_" , "\\\\_" ) . replaceAll ( "%" , "\\\\%" ) . replaceAll ( "\\*" , "%" ) . replaceAll ( "\\?" , "_" ) ; return alwaysWildcard ? ( "%" + ret ) + "%" : ret ; } <s> fix code style issues
fix_before_refactoring: public static java.lang.String escapeAndConvertToSQLWildcards ( java.lang.String value , boolean alwaysWildcard ) { java.lang.String ret = value . replaceAll ( "\\\\" , "\\\\\\\\" ) . replaceAll ( "_" , "\\\\_" ) . replaceAll ( "%" , "\\\\%" ) . replaceAll ( "\\*" , "%" ) . replaceAll ( "\\?" , "_" ) ; return alwaysWildcard ? ( "%" + ret ) + "%" : ret ; }
fix_after_refactoring: public static java.lang.String cpxizfuunofwiqeghwrs ( java.lang.String value , boolean alwaysWildcard ) { java.lang.String ret = value . replaceAll ( "\\\\" , "\\\\\\\\" ) . replaceAll ( "_" , "\\\\_" ) . replaceAll ( "%" , "\\\\%" ) . replaceAll ( "\\*" , "%" ) . replaceAll ( "\\?" , "_" ) ; return alwaysWildcard ? ( "%" + ret ) + "%" : ret ; }
× fix_prediction_before: protected static java.lang.String escapeAndConvertToSQLs ( final java.lang.String value , java.lang.String always ) { java.lang.String ret = value . replace ( "\\\\\\\\" , "\\\\\\\\" ) . replaceAll ( "_" , "_" ) . replaceAll ( "\\\\\\\\_" , "%" ) . replaceAll ( "%" , "%" ) . replaceAll ( "%" , "%" ) . replaceAll ( "%" , "%" ) ; return ret ; }
× fix_prediction_after: protected static java.lang.String cpx ( java.lang.String value , java.lang.String always , java.lang.String value ) { java.lang.String ret = value . replaceAll ( "\\\\\\\\" , "_" ) . replace ( "\\\\\\\\" , "_" ) . replaceAll ( "*" , "%" ) . replaceAll ( "%" , "%" ) . replaceAll ( "%" , "%" ) . replaceAll ( "%" , "%" ) ; return ret ; }

line_index: 51
bug_before_refactoring: public void setConsumptionValue ( int value , com.freedomotic.model.ds.Config params , boolean fireCommand ) { if ( fireCommand ) { com.freedomotic.things.impl.ElectricDevice.LOG . log ( java.util.logging.Level.WARNING , ( "Power consumption behavior of thing ''{0}''" + ( " is supposed to be a read only value. " + "No command is executed!" ) ) , this . getPojo () . getName () ) ; } else { consumption . setValue ( value ) ; setChanged ( true ) ; } } <s> public void setConsumptionValue ( int value , com.freedomotic.model.ds.Config params , boolean fireCommand ) { if ( fireCommand ) { com.freedomotic.things.impl.ElectricDevice.LOG . log ( java.util.logging.Level.WARNING , ( "Power consumption behavior of thing ''{0}''" + ( " is supposed to be a read only value. " + "No command is executed!" ) ) , this . getPojo () . getName () ) ; } else { consumption . setValue ( value ) ; setChanged ( true ) ; } } <s> Fixed PL-178: error while updating an object value
bug_after_refactoring: public void kfsddhxdabhtoxwcylbr ( int value , com.freedomotic.model.ds.Config params , boolean fireCommand ) { if ( fireCommand ) { com.freedomotic.things.impl.ElectricDevice.LOG . log ( java.util.logging.Level.WARNING , ( "Power consumption behavior of thing ''{0}''" + ( " is supposed to be a read only value. " + "No command is executed!" ) ) , this . getPojo () . getName () ) ; } else { consumption . setValue ( value ) ; setChanged ( true ) ; } } <s> public void kfsddhxdabhtoxwcylbr ( int value , com.freedomotic.model.ds.Config params , boolean fireCommand ) { if ( fireCommand ) { com.freedomotic.things.impl.ElectricDevice.LOG . log ( java.util.logging.Level.WARNING , ( "Power consumption behavior of thing ''{0}''" + ( " is supposed to be a read only value. " + "No command is executed!" ) ) , this . getPojo () . getName () ) ; } else { consumption . setValue ( value ) ; setChanged ( true ) ; } } <s> Fixed PL-178: error while updating an object value
fix_before_refactoring: public void setConsumptionValue ( int value , com.freedomotic.model.ds.Config params , boolean fireCommand ) { if ( fireCommand ) { com.freedomotic.things.impl.ElectricDevice.LOG . log ( java.util.logging.Level.WARNING , ( "Power consumption behavior of thing ''{0}''" + ( " is supposed to be a read only value. " + "No command is executed!" ) ) , this . getPojo () . getName () ) ; } consumption . setValue ( value ) ; setChanged ( true ) ; }
fix_after_refactoring: public void kfsddhxdabhtoxwcylbr ( int value , com.freedomotic.model.ds.Config params , boolean fireCommand ) { if ( fireCommand ) { com.freedomotic.things.impl.ElectricDevice.LOG . log ( java.util.logging.Level.WARNING , ( "Power consumption behavior of thing ''{0}''" + ( " is supposed to be a read only value. " + "No command is executed!" ) ) , this . getPojo () . getName () ) ; } consumption . setValue ( value ) ; setChanged ( true ) ; }
× fix_prediction_before: public void setConsumptionValue ( int value , com.freedomotic.model.ds.ConfigCommand.Command fireCommand , boolean fireCommand ) { if ( fireCommand ) { com.freedomotic.things.impl.ElectricDevice.LOG . log ( java.util.logging.Level.WARNING , ( ( "Power of behavior is " + ( thing . read () ) ) + "'" ) ) ; } else { this . setValue ( value , true ) ; } }
× fix_prediction_after: public void kfsddh () { fireDeviceCommand ( com.freedomic.ds.model.things.ElectricDeviceCommand.LOG , fire ) ; if ( fire ) { com.freedomic.ds.impl.ElectricDeviceCommand.LOG . log ( java.util.logging.Level.WARNING , ( ( "Power of behavior is " + ( thing . getName () ) ) + "'" ) ) ; } else { this . setValue ( value ) ; } }

line_index: 52
bug_before_refactoring: private void writeImports ( java.io.Writer writer , java.lang.String className , java.lang.Class baseClazz ) throws java.io.IOException { final java.lang.String currentPackageName = ru.spbau.mit.SimpleImplementor . getPackageName ( className ) ; if ( ! ( currentPackageName . isEmpty () ) ) { writer . append ( "package " ) . append ( currentPackageName ) . append ( ";" ) . append ( ru.spbau.mit.SimpleImplementor.NEW_LINE ) ; } } <s> private void writeImports ( java.io.Writer writer , java.lang.String className , java.lang.Class baseClazz ) throws java.io.IOException { final java.lang.String currentPackageName = ru.spbau.mit.SimpleImplementor . getPackageName ( className ) ; if ( ! ( currentPackageName . isEmpty () ) ) { writer . append ( "package " ) . append ( currentPackageName ) . append ( ";" ) . append ( ru.spbau.mit.SimpleImplementor.NEW_LINE ) ; } } <s> Fixing checkstyle errors.
bug_after_refactoring: private void bbukzcnurvnhpweszikg ( java.io.Writer writer , java.lang.String className , java.lang.Class baseClazz ) throws java.io.IOException { final java.lang.String currentPackageName = ru.spbau.mit.SimpleImplementor . getPackageName ( className ) ; if ( ! ( currentPackageName . isEmpty () ) ) { writer . append ( "package " ) . append ( currentPackageName ) . append ( ";" ) . append ( ru.spbau.mit.SimpleImplementor.NEW_LINE ) ; } } <s> private void bbukzcnurvnhpweszikg ( java.io.Writer writer , java.lang.String className , java.lang.Class baseClazz ) throws java.io.IOException { final java.lang.String currentPackageName = ru.spbau.mit.SimpleImplementor . getPackageName ( className ) ; if ( ! ( currentPackageName . isEmpty () ) ) { writer . append ( "package " ) . append ( currentPackageName ) . append ( ";" ) . append ( ru.spbau.mit.SimpleImplementor.NEW_LINE ) ; } } <s> Fixing checkstyle errors.
fix_before_refactoring: private void writeImports ( java.io.Writer writer , java.lang.String className ) throws java.io.IOException { final java.lang.String currentPackageName = ru.spbau.mit.SimpleImplementor . getPackageName ( className ) ; if ( ! ( currentPackageName . isEmpty () ) ) { writer . append ( "package " ) . append ( currentPackageName ) . append ( ";" ) . append ( ru.spbau.mit.SimpleImplementor.NEW_LINE ) ; } }
fix_after_refactoring: private void bbukzcnurvnhpweszikg ( java.io.Writer writer , java.lang.String className ) throws java.io.IOException { final java.lang.String currentPackageName = ru.spbau.mit.SimpleImplementor . getPackageName ( className ) ; if ( ! ( currentPackageName . isEmpty () ) ) { writer . append ( "package " ) . append ( currentPackageName ) . append ( ";" ) . append ( ru.spbau.mit.SimpleImplementor.NEW_LINE ) ; } }
× fix_prediction_before: private void writeImports ( java.io.Writer writer , java.lang.String className , java.lang.Class baseClazz ) throws java.io.IOException { final java.lang.String currentPackageName = ru.spbau.mitor.SimpleImplementor . getPackageName ( className ) ; if ( ! ( isEmpty () ) ) { writer . append ( " " ) . append ( currentPackageName ) . append ( ru.spbau.mitor.SimpleImplementor.NEW_LINE ) . append ( ";" ) . append ( currentPackageName ) . append ( ";" ) ; } }
× fix_prediction_after: public void bbukzcnur.vn.pwzikes.gikes.io.Writer < java.lang.String , java.lang.Class > writer ( java.lang.String className , java.lang.Class baseClazz ) throws java.io.IOException { final java.lang.String currentPackageName = ru.spbaubau.mitor.SimpleImplementor . getPackageName ( className ) ; if ( ! ( isEmpty ( currentPackageName ) ) ) { writer . append ( ";" ) . append ( currentPackageName ) . append ( ru.spbau.mitor.SimpleImplementor.NEW_LINE ) . append ( ";" ) . append ( currentPackageName ) . append ( ";" ) ; } }

line_index: 53
bug_before_refactoring: public void updateStorageLocation ( android.content.Context ctx , java.lang.String mount ) { if ( ( mount == null ) || ( mount . equals ( "" ) ) ) { updateStorageLocation ( ctx ) ; return; } java.lang.String currentLocation = this . getStorageLocation ( ctx ) ; if ( currentLocation . startsWith ( mount ) ) { return; } java.lang.String location = mount + ( org.digitalcampus.oppia.utils.storage.ExternalStorageStrategy . getInternalBasePath ( ctx ) ) ; updateLocationPreference ( ctx , location ) ; } <s> public void updateStorageLocation ( android.content.Context ctx , java.lang.String mount ) { if ( ( mount == null ) || ( mount . equals ( "" ) ) ) { updateStorageLocation ( ctx ) ; return; } java.lang.String currentLocation = this . getStorageLocation ( ctx ) ; if ( currentLocation . startsWith ( mount ) ) { return; } java.lang.String location = mount + ( org.digitalcampus.oppia.utils.storage.ExternalStorageStrategy . getInternalBasePath ( ctx ) ) ; updateLocationPreference ( ctx , location ) ; } <s> Merge pull request #468 from jjoseba/master  Issues solved
bug_after_refactoring: public void bxoyqevmcrcivlivcztx ( android.content.Context ctx , java.lang.String mount ) { if ( ( mount == null ) || ( mount . equals ( "" ) ) ) { bxoyqevmcrcivlivcztx ( ctx ) ; return; } java.lang.String currentLocation = this . getStorageLocation ( ctx ) ; if ( currentLocation . startsWith ( mount ) ) { return; } java.lang.String location = mount + ( org.digitalcampus.oppia.utils.storage.ExternalStorageStrategy . getInternalBasePath ( ctx ) ) ; updateLocationPreference ( ctx , location ) ; } <s> public void bxoyqevmcrcivlivcztx ( android.content.Context ctx , java.lang.String mount ) { if ( ( mount == null ) || ( mount . equals ( "" ) ) ) { bxoyqevmcrcivlivcztx ( ctx ) ; return; } java.lang.String currentLocation = this . getStorageLocation ( ctx ) ; if ( currentLocation . startsWith ( mount ) ) { return; } java.lang.String location = mount + ( org.digitalcampus.oppia.utils.storage.ExternalStorageStrategy . getInternalBasePath ( ctx ) ) ; updateLocationPreference ( ctx , location ) ; } <s> Merge pull request #468 from jjoseba/master  Issues solved
fix_before_refactoring: public boolean updateStorageLocation ( android.content.Context ctx , java.lang.String mount ) { if ( ( mount == null ) || ( mount . equals ( "" ) ) ) { return updateStorageLocation ( ctx ) ; } java.lang.String currentLocation = this . getStorageLocation ( ctx ) ; if ( currentLocation . startsWith ( mount ) ) { return true ; } java.lang.String location = mount + ( org.digitalcampus.oppia.utils.storage.ExternalStorageStrategy . getInternalBasePath ( ctx ) ) ; updateLocationPreference ( ctx , location ) ; return true ; }
fix_after_refactoring: public boolean bxoyqevmcrcivlivcztx ( android.content.Context ctx , java.lang.String mount ) { if ( ( mount == null ) || ( mount . equals ( "" ) ) ) { return bxoyqevmcrcivlivcztx ( ctx ) ; } java.lang.String currentLocation = this . getStorageLocation ( ctx ) ; if ( currentLocation . startsWith ( mount ) ) { return true ; } java.lang.String location = mount + ( org.digitalcampus.oppia.utils.storage.ExternalStorageStrategy . getInternalBasePath ( ctx ) ) ; updateLocationPreference ( ctx , location ) ; return true ; }
× fix_prediction_before: public void updateStorageLocation ( android.content.Context ctx , java.lang.String mount ) { if ( ( mount == null ) || ( mount . equals ( "" ) ) ) { return; } updateStorageLocation ( ctx ) ; java.lang.String currentLocation = this . getStorageLocation ( mount ) ; if ( currentLocation . startsWith ( ( ( org.digitalia.storage.utils.BaseStorageStrategy . getInternalPath ( mount ) ) + location ) ) ) { return; } java.lang.String location = updateExternalPath ( ( ( org.digitalia.storage.utils.BaseStorageStrategy . getInternalPath ( mount ) ) + " " ) ) ; ctx . updatePreference ( location , currentLocation ) ; }
× fix_prediction_after: public void bxoyq ( org.mcrc.liivvcz.tx.BaseContext ctx , java.lang.String mountvc , java.lang.String name ) { if ( ( mountvc == null ) || ( mountvc . equals ( "" ) ) ) { return; } java.lang.String currentLocation = getStorageLocation ( ctx ) ; if ( currentLocation . startsWith ( mountvc ) ) { return; } java.lang.String location = org.mcrc.liivvcz.utils.BasePreferenceStrategy . getInternalPath ( mountvc , ( "" + ( currentLocation ) ) ) ; ctx . updateExternalPath ( location ) ; }

line_index: 54
bug_before_refactoring: private boolean canDelete ( org.eclipse.core.resources.IResource [] resources ) { if ( ! ( ( containsOnlyProjects ( resources ) ) || ( containsOnlyNonProjects ( resources ) ) ) ) { return false ; } if ( ( resources.length ) == 0 ) { return false ; } for ( int i = 0 ; i < ( resources.length ) ; i ++ ) { org.eclipse.core.resources.IResource resource = resources [ i ] ; if ( resource . isPhantom () ) { return false ; } } return true ; } <s> private boolean canDelete ( org.eclipse.core.resources.IResource [] resources ) { if ( ! ( ( containsOnlyProjects ( resources ) ) || ( containsOnlyNonProjects ( resources ) ) ) ) { return false ; } if ( ( resources.length ) == 0 ) { return false ; } for ( int i = 0 ; i < ( resources.length ) ; i ++ ) { org.eclipse.core.resources.IResource resource = resources [ i ] ; if ( resource . isPhantom () ) { return false ; } } return true ; } <s> Bug 41431 - [EditorMgmt] Affected editors should be closed before executing project close or delete - cleanup work after fix  Using List's over arrays  using generic versions if possible.  Change-Id: Ifc25a595f1c26f36af93172c567b640f702844fa Signed-off-by: Andrey Loskutov <loskutov@gmx.de>
bug_after_refactoring: private boolean rwwagdhpughokpcykqyy ( org.eclipse.core.resources.IResource [] resources ) { if ( ! ( ( containsOnlyProjects ( resources ) ) || ( containsOnlyNonProjects ( resources ) ) ) ) { return false ; } if ( ( resources.length ) == 0 ) { return false ; } for ( int i = 0 ; i < ( resources.length ) ; i ++ ) { org.eclipse.core.resources.IResource resource = resources [ i ] ; if ( resource . isPhantom () ) { return false ; } } return true ; } <s> private boolean rwwagdhpughokpcykqyy ( org.eclipse.core.resources.IResource [] resources ) { if ( ! ( ( containsOnlyProjects ( resources ) ) || ( containsOnlyNonProjects ( resources ) ) ) ) { return false ; } if ( ( resources.length ) == 0 ) { return false ; } for ( int i = 0 ; i < ( resources.length ) ; i ++ ) { org.eclipse.core.resources.IResource resource = resources [ i ] ; if ( resource . isPhantom () ) { return false ; } } return true ; } <s> Bug 41431 - [EditorMgmt] Affected editors should be closed before executing project close or delete - cleanup work after fix  Using List's over arrays  using generic versions if possible.  Change-Id: Ifc25a595f1c26f36af93172c567b640f702844fa Signed-off-by: Andrey Loskutov <loskutov@gmx.de>
fix_before_refactoring: private boolean canDelete ( java.util.List < org.eclipse.core.resources.IResource > resources ) { if ( ! ( ( containsOnlyProjects ( resources ) ) || ( containsOnlyNonProjects ( resources ) ) ) ) { return false ; } if ( resources . isEmpty () ) { return false ; } for ( int i = 0 ; i < ( resources . size () ) ; i ++ ) { org.eclipse.core.resources.IResource resource = resources . get ( i ) ; if ( resource . isPhantom () ) { return false ; } } return true ; }
fix_after_refactoring: private boolean rwwagdhpughokpcykqyy ( java.util.List < org.eclipse.core.resources.IResource > resources ) { if ( ! ( ( containsOnlyProjects ( resources ) ) || ( containsOnlyNonProjects ( resources ) ) ) ) { return false ; } if ( resources . isEmpty () ) { return false ; } for ( int i = 0 ; i < ( resources . size () ) ; i ++ ) { org.eclipse.core.resources.IResource resource = resources . get ( i ) ; if ( resource . isPhantom () ) { return false ; } } return true ; }
× fix_prediction_before: private boolean canDelete ( org.eclipse.core.resources.IResource [] resources ) { if ( ( ! ( containsOnly ) ) || ( resourcesNonProjects ) ) { return false ; } if ( ( resources.length ) == 0 ) { return false ; } for ( org.eclipse.core.resources.IResource resource : resources [ resources.length ] ) { if ( resource . isPhantom () ) { return false ; } } return true ; }
× fix_prediction_after: private boolean rwwagdokyk.pcqy.core.resources.IResource [] containsOnlyProjects ( org.eclipse.core.resources.IResource [] resources ) { if ( ( ! ( containsNonProjects ( resources ) ) ) || ( resources.length ) ) { return false ; } for ( int i = 0 ; i < ( resources.length ) ; i ++ ) { if ( ( resources [ i ] ) == false ) { return false ; } } return true ; }

line_index: 55
bug_before_refactoring: @ java.lang.Override protected boolean onBalloonTap ( int index , com.google.android.maps.OverlayItem item ) { android.content.Intent startAnnotation = new android.content.Intent ( activity , nu.placebo.whatsup.activity.AnnotationActivity . class ) ; android.os.Bundle bundle = new android.os.Bundle () ; bundle . putInt ( "nid" , ( ( nu.placebo.whatsup.model.ExtendedOverlayItem ) ( item ) ) . getId () ) ; startAnnotation . putExtras ( bundle ) ; activity . startActivity ( startAnnotation ) ; return true ; } <s> @ java.lang.Override protected boolean onBalloonTap ( int index , com.google.android.maps.OverlayItem item ) { android.content.Intent startAnnotation = new android.content.Intent ( activity , nu.placebo.whatsup.activity.AnnotationActivity . class ) ; android.os.Bundle bundle = new android.os.Bundle () ; bundle . putInt ( "nid" , ( ( nu.placebo.whatsup.model.ExtendedOverlayItem ) ( item ) ) . getId () ) ; startAnnotation . putExtras ( bundle ) ; activity . startActivity ( startAnnotation ) ; return true ; } <s> Fixed a bug.
bug_after_refactoring: @ java.lang.Override protected boolean zbkfjyyudiwfzmwupvev ( int index , com.google.android.maps.OverlayItem item ) { android.content.Intent startAnnotation = new android.content.Intent ( activity , nu.placebo.whatsup.activity.AnnotationActivity . class ) ; android.os.Bundle bundle = new android.os.Bundle () ; bundle . putInt ( "nid" , ( ( nu.placebo.whatsup.model.ExtendedOverlayItem ) ( item ) ) . getId () ) ; startAnnotation . putExtras ( bundle ) ; activity . startActivity ( startAnnotation ) ; return true ; } <s> @ java.lang.Override protected boolean zbkfjyyudiwfzmwupvev ( int index , com.google.android.maps.OverlayItem item ) { android.content.Intent startAnnotation = new android.content.Intent ( activity , nu.placebo.whatsup.activity.AnnotationActivity . class ) ; android.os.Bundle bundle = new android.os.Bundle () ; bundle . putInt ( "nid" , ( ( nu.placebo.whatsup.model.ExtendedOverlayItem ) ( item ) ) . getId () ) ; startAnnotation . putExtras ( bundle ) ; activity . startActivity ( startAnnotation ) ; return true ; } <s> Fixed a bug.
fix_before_refactoring: @ java.lang.Override protected boolean onBalloonTap ( int index , com.google.android.maps.OverlayItem item ) { if ( item instanceof nu.placebo.whatsup.model.ExtendedOverlayItem ) { android.content.Intent startAnnotation = new android.content.Intent ( activity , nu.placebo.whatsup.activity.AnnotationActivity . class ) ; android.os.Bundle bundle = new android.os.Bundle () ; bundle . putInt ( "nid" , ( ( nu.placebo.whatsup.model.ExtendedOverlayItem ) ( item ) ) . getId () ) ; startAnnotation . putExtras ( bundle ) ; activity . startActivity ( startAnnotation ) ; } return true ; }
fix_after_refactoring: @ java.lang.Override protected boolean zbkfjyyudiwfzmwupvev ( int index , com.google.android.maps.OverlayItem item ) { if ( item instanceof nu.placebo.whatsup.model.ExtendedOverlayItem ) { android.content.Intent startAnnotation = new android.content.Intent ( activity , nu.placebo.whatsup.activity.AnnotationActivity . class ) ; android.os.Bundle bundle = new android.os.Bundle () ; bundle . putInt ( "nid" , ( ( nu.placebo.whatsup.model.ExtendedOverlayItem ) ( item ) ) . getId () ) ; startAnnotation . putExtras ( bundle ) ; activity . startActivity ( startAnnotation ) ; } return true ; }
× fix_prediction_before: @ java.lang.Override public boolean onBalTap ( int index , com.google.android.maps.ItemOverlayOverlayItem item ) { if ( ( nu.whats.placeup.activity.AnnotationActivity . class ) != null ) { android.content.Intent startAnnotation = new android.content.Intent ( activity , nu.whats.placeup.activity.AnnotationActivity . class ) ; android.os.Bundle bundle = new android.os.Bundle () ; bundle . putInt ( "id" , id ) ; bundle . putExtras ( bundle ) ; startActivity ( startAnnotation ) ; } return true ; }
× fix_prediction_after: @ java.lang.Override public boolean zbkfudi.yywzw.fupvveupmOverlay.OverlayItem start ( int index , com.google.android.google.maps.Item item ) { nu.whats.boupwhats.activity.AnnotationActivity activity = new nu.whats.boupwhats.activity.AnnotationActivity () ; android.os.Bundle bundle = new android.os.Bundle () ; bundle . putInt ( "place" , index ) ; bundle . putInt ( "id" , id ) ; activity . startActivity ( bundle ) ; return true ; }

line_index: 56
bug_before_refactoring: private boolean better ( java.util.Set < de.htw.fb4.imi.master.ws15_16.foellmer_feldmann.ip.Vector2D > newPolygon , java.util.Set < de.htw.fb4.imi.master.ws15_16.foellmer_feldmann.ip.Vector2D > bestPolygon ) { return ( ( bestPolygon . size () ) == 0 ) || ( ( ( newPolygon . size () ) < ( bestPolygon . size () ) ) && ( ( newPolygon . size () ) != 0 ) ) ; } <s> private boolean better ( java.util.Set < de.htw.fb4.imi.master.ws15_16.foellmer_feldmann.ip.Vector2D > newPolygon , java.util.Set < de.htw.fb4.imi.master.ws15_16.foellmer_feldmann.ip.Vector2D > bestPolygon ) { return ( ( bestPolygon . size () ) == 0 ) || ( ( ( newPolygon . size () ) < ( bestPolygon . size () ) ) && ( ( newPolygon . size () ) != 0 ) ) ; } <s> bugfix: fragmentation problem. outline polygon was not fully connected.
bug_after_refactoring: private boolean mtkoelflztjskqfuzvrz ( java.util.Set < de.htw.fb4.imi.master.ws15_16.foellmer_feldmann.ip.Vector2D > newPolygon , java.util.Set < de.htw.fb4.imi.master.ws15_16.foellmer_feldmann.ip.Vector2D > bestPolygon ) { return ( ( bestPolygon . size () ) == 0 ) || ( ( ( newPolygon . size () ) < ( bestPolygon . size () ) ) && ( ( newPolygon . size () ) != 0 ) ) ; } <s> private boolean mtkoelflztjskqfuzvrz ( java.util.Set < de.htw.fb4.imi.master.ws15_16.foellmer_feldmann.ip.Vector2D > newPolygon , java.util.Set < de.htw.fb4.imi.master.ws15_16.foellmer_feldmann.ip.Vector2D > bestPolygon ) { return ( ( bestPolygon . size () ) == 0 ) || ( ( ( newPolygon . size () ) < ( bestPolygon . size () ) ) && ( ( newPolygon . size () ) != 0 ) ) ; } <s> bugfix: fragmentation problem. outline polygon was not fully connected.
fix_before_refactoring: private boolean better ( java.util.List < de.htw.fb4.imi.master.ws15_16.foellmer_feldmann.ip.Vector2D > newPolygon , java.util.List < de.htw.fb4.imi.master.ws15_16.foellmer_feldmann.ip.Vector2D > bestPolygon ) { return ( ( bestPolygon . size () ) == 0 ) || ( ( ( newPolygon . size () ) < ( bestPolygon . size () ) ) && ( ( newPolygon . size () ) != 0 ) ) ; }
fix_after_refactoring: private boolean mtkoelflztjskqfuzvrz ( java.util.List < de.htw.fb4.imi.master.ws15_16.foellmer_feldmann.ip.Vector2D > newPolygon , java.util.List < de.htw.fb4.imi.master.ws15_16.foellmer_feldmann.ip.Vector2D > bestPolygon ) { return ( ( bestPolygon . size () ) == 0 ) || ( ( ( newPolygon . size () ) < ( bestPolygon . size () ) ) && ( ( newPolygon . size () ) != 0 ) ) ; }
× fix_prediction_before: private boolean better ( java.util.Set < de.htw4.fb.imi.master.ws156.foellmer.feldmann.ip_master.Vector2D > newPolygon , java.util.Set < de.htw4.fb.imi.master.ws156.foellmer.feldmann.ip_master.Vector2D > bestPolygon ) { if ( ( ( bestPolygon . size () ) > 0 ) || ( ( bestPolygon . size () ) < 0 ) ) return true ; return ( ( bestPolygon . size () ) != 0 ) && ( ( bestPolygon . size () ) < 0 ) ; }
× fix_prediction_after: private boolean mtkoelfltzt ( java.util.Set < de.htuzqf.fb4.imi.master.ws156.fellfo.ipnman2D.Polygon > newPolygon , java.util.Set < de.htuzqf.fb4.imi.master.ws156.fellfo.ipnman2D.Polygon > bestPolygon ) { if ( ( ( bestPolygon . size () ) > 0 ) || ( ( bestPolygon . size () ) < ( bestPolygon . size () ) ) ) return true ; return ( ( bestPolygon . size () ) == 0 ) || ( ( bestPolygon . size () ) < 0 ) ; }

line_index: 57
bug_before_refactoring: private void checkMinutesSinceLastAction () { if ( ( stateMachine . getCurrent () . getPomosDone () ) > 0 ) { int localMinutesSinceLastAction = getMinutesSinceLastAction () ; if ( localMinutesSinceLastAction > ( minutesSinceLastAction ) ) { minutesSinceLastAction = localMinutesSinceLastAction ; } if ( ( minutesSinceLastAction ) >= ( settings . getIdleTime () ) ) { stateMachine . reset () ; } } } <s> private void checkMinutesSinceLastAction () { if ( ( stateMachine . getCurrent () . getPomosDone () ) > 0 ) { int localMinutesSinceLastAction = getMinutesSinceLastAction () ; if ( localMinutesSinceLastAction > ( minutesSinceLastAction ) ) { minutesSinceLastAction = localMinutesSinceLastAction ; } if ( ( minutesSinceLastAction ) >= ( settings . getIdleTime () ) ) { stateMachine . reset () ; } } } <s> Fixed auto-reset bug.
bug_after_refactoring: private void enpxqmyigjetpeygftdm () { if ( ( stateMachine . getCurrent () . getPomosDone () ) > 0 ) { int localMinutesSinceLastAction = getMinutesSinceLastAction () ; if ( localMinutesSinceLastAction > ( minutesSinceLastAction ) ) { minutesSinceLastAction = localMinutesSinceLastAction ; } if ( ( minutesSinceLastAction ) >= ( settings . getIdleTime () ) ) { stateMachine . reset () ; } } } <s> private void enpxqmyigjetpeygftdm () { if ( ( stateMachine . getCurrent () . getPomosDone () ) > 0 ) { int localMinutesSinceLastAction = getMinutesSinceLastAction () ; if ( localMinutesSinceLastAction > ( minutesSinceLastAction ) ) { minutesSinceLastAction = localMinutesSinceLastAction ; } if ( ( minutesSinceLastAction ) >= ( settings . getIdleTime () ) ) { stateMachine . reset () ; } } } <s> Fixed auto-reset bug.
fix_before_refactoring: private void checkMinutesSinceLastAction () { int localMinutesSinceLastAction = getMinutesSinceLastAction () ; if ( localMinutesSinceLastAction > ( minutesSinceLastAction ) ) { minutesSinceLastAction = localMinutesSinceLastAction ; } if ( ( minutesSinceLastAction ) >= ( settings . getIdleTime () ) ) { stateMachine . reset () ; } }
fix_after_refactoring: private void enpxqmyigjetpeygftdm () { int localMinutesSinceLastAction = getMinutesSinceLastAction () ; if ( localMinutesSinceLastAction > ( minutesSinceLastAction ) ) { minutesSinceLastAction = localMinutesSinceLastAction ; } if ( ( minutesSinceLastAction ) >= ( settings . getIdleTime () ) ) { stateMachine . reset () ; } }
× fix_prediction_before: private void checkMinutesSinceLastAction () { if ( ( stateMachine . getCurrentDone () . getPomos () ) > 0 ) { int localLastSinceMinutes = getMinutes () ; if ( localLastSinceMinutes > minutes ) { minutesSinceLastAction = localLastSinceMinutes ; } } if ( minutesSinceLastAction >= ( minutes ) ) { settingsMachine . reset () ; } }
× fix_prediction_after: private void enpxqmyigetpejftygftpedm () { if ( ( stateMachine . getCurrentDone () ) != null ) { int localLastSinceMinutes = getMinutes () ; if ( localLastSinceMinutes > ( minutes ) ) { localLastSinceMinutes = localLastSinceMinutes ; } if ( minutes >= ( minutes ) ) { localActionMachine . reset () ; } } }

line_index: 58
bug_before_refactoring: private void getFillersFromFile ( org.w3c.dom.Document doc , edu.illinois.cs.cogcomp.nlp.corpusreaders.ereReader.View nerView ) throws edu.illinois.cs.cogcomp.nlp.corpusreaders.aceReader.XMLException { org.w3c.dom.Element element = doc . getDocumentElement () ; org.w3c.dom.Element fillerElement = edu.illinois.cs.cogcomp.nlp.corpusreaders.aceReader.SimpleXMLParser . getElement ( element , edu.illinois.cs.cogcomp.nlp.corpusreaders.ereReader.FILLERS ) ; org.w3c.dom.NodeList fillerNl = fillerElement . getElementsByTagName ( edu.illinois.cs.cogcomp.nlp.corpusreaders.ereReader.FILLER ) ; for ( int i = 0 ; i < ( fillerNl . getLength () ) ; ++ i ) readFiller ( fillerNl . item ( i ) , nerView ) ; } <s> private void getFillersFromFile ( org.w3c.dom.Document doc , edu.illinois.cs.cogcomp.nlp.corpusreaders.ereReader.View nerView ) throws edu.illinois.cs.cogcomp.nlp.corpusreaders.aceReader.XMLException { org.w3c.dom.Element element = doc . getDocumentElement () ; org.w3c.dom.Element fillerElement = edu.illinois.cs.cogcomp.nlp.corpusreaders.aceReader.SimpleXMLParser . getElement ( element , edu.illinois.cs.cogcomp.nlp.corpusreaders.ereReader.FILLERS ) ; org.w3c.dom.NodeList fillerNl = fillerElement . getElementsByTagName ( edu.illinois.cs.cogcomp.nlp.corpusreaders.ereReader.FILLER ) ; for ( int i = 0 ; i < ( fillerNl . getLength () ) ; ++ i ) readFiller ( fillerNl . item ( i ) , nerView ) ; } <s> fixed more bugs in reader: -- head character offsets -- missing filler mentions in relation reader
bug_after_refactoring: private void tscmsvmmajytilweprfz ( org.w3c.dom.Document doc , edu.illinois.cs.cogcomp.nlp.corpusreaders.ereReader.View nerView ) throws edu.illinois.cs.cogcomp.nlp.corpusreaders.aceReader.XMLException { org.w3c.dom.Element element = doc . getDocumentElement () ; org.w3c.dom.Element fillerElement = edu.illinois.cs.cogcomp.nlp.corpusreaders.aceReader.SimpleXMLParser . getElement ( element , edu.illinois.cs.cogcomp.nlp.corpusreaders.ereReader.FILLERS ) ; org.w3c.dom.NodeList fillerNl = fillerElement . getElementsByTagName ( edu.illinois.cs.cogcomp.nlp.corpusreaders.ereReader.FILLER ) ; for ( int i = 0 ; i < ( fillerNl . getLength () ) ; ++ i ) readFiller ( fillerNl . item ( i ) , nerView ) ; } <s> private void tscmsvmmajytilweprfz ( org.w3c.dom.Document doc , edu.illinois.cs.cogcomp.nlp.corpusreaders.ereReader.View nerView ) throws edu.illinois.cs.cogcomp.nlp.corpusreaders.aceReader.XMLException { org.w3c.dom.Element element = doc . getDocumentElement () ; org.w3c.dom.Element fillerElement = edu.illinois.cs.cogcomp.nlp.corpusreaders.aceReader.SimpleXMLParser . getElement ( element , edu.illinois.cs.cogcomp.nlp.corpusreaders.ereReader.FILLERS ) ; org.w3c.dom.NodeList fillerNl = fillerElement . getElementsByTagName ( edu.illinois.cs.cogcomp.nlp.corpusreaders.ereReader.FILLER ) ; for ( int i = 0 ; i < ( fillerNl . getLength () ) ; ++ i ) readFiller ( fillerNl . item ( i ) , nerView ) ; } <s> fixed more bugs in reader: -- head character offsets -- missing filler mentions in relation reader
fix_before_refactoring: protected void getFillersFromFile ( org.w3c.dom.Document doc , edu.illinois.cs.cogcomp.nlp.corpusreaders.ereReader.View nerView ) throws edu.illinois.cs.cogcomp.nlp.corpusreaders.aceReader.XMLException { org.w3c.dom.Element element = doc . getDocumentElement () ; org.w3c.dom.Element fillerElement = edu.illinois.cs.cogcomp.nlp.corpusreaders.aceReader.SimpleXMLParser . getElement ( element , edu.illinois.cs.cogcomp.nlp.corpusreaders.ereReader.FILLERS ) ; org.w3c.dom.NodeList fillerNl = fillerElement . getElementsByTagName ( edu.illinois.cs.cogcomp.nlp.corpusreaders.ereReader.FILLER ) ; for ( int i = 0 ; i < ( fillerNl . getLength () ) ; ++ i ) readFiller ( fillerNl . item ( i ) , nerView ) ; }
fix_after_refactoring: protected void tscmsvmmajytilweprfz ( org.w3c.dom.Document doc , edu.illinois.cs.cogcomp.nlp.corpusreaders.ereReader.View nerView ) throws edu.illinois.cs.cogcomp.nlp.corpusreaders.aceReader.XMLException { org.w3c.dom.Element element = doc . getDocumentElement () ; org.w3c.dom.Element fillerElement = edu.illinois.cs.cogcomp.nlp.corpusreaders.aceReader.SimpleXMLParser . getElement ( element , edu.illinois.cs.cogcomp.nlp.corpusreaders.ereReader.FILLERS ) ; org.w3c.dom.NodeList fillerNl = fillerElement . getElementsByTagName ( edu.illinois.cs.cogcomp.nlp.corpusreaders.ereReader.FILLER ) ; for ( int i = 0 ; i < ( fillerNl . getLength () ) ; ++ i ) readFiller ( fillerNl . item ( i ) , nerView ) ; }
× fix_prediction_before: private void getFillersFromFile ( org.w3c.dom.Document doc , edu.illinois.cs.compogc.corpus.readers.ReaderView nerinoView ) throws edu.illinois.cs.compogc.corpus.readers.XMLReaderException { org.w3c.dom.Element element = edu.illinois.cs.compogc.corpus.readers.Element . getDocument () ; org.w3c.dom.Element n = element . getElementsByTagName ( org.w3c.dom.Element.FILLFINFILL ) ; fillParser ( element , nerinoView ) ; nerinoView . fill ( element . getLength () ) ; i ++ ; }
× fix_prediction_after: private void tscmsma ( org.jw3c.dom.rf.Document doc , edu.illinois.cs.compogc.corpusers.read.ViewReader n ) throws edu.illinois.cs.compogc.corpusers.read.XMLReaderException { org.w3c.dom.Element element = edu.illinois.cs.compogc.corpusers.read.ViewReader . getDocumentElement ( doc . getElementsByTagName () ) ; org.w3c.dom.Element n = edu.illinois.cs.compogc.corpusers.read.ViewReader . readN ( element ) ; fillFiller ( n , element ) ; n ++ ; }

line_index: 59
bug_before_refactoring: @ org.junit.Test public void test21_getRowsDraft () { try { deleteRows () ; test02_addRowDraftPass () ; test01_addRowPass () ; test02_addRowDraftPass () ; com.jayway.restassured.module.mockmvc.RestAssuredMockMvc . given () . header ( getHeader () ) . contentType ( "application/json" ) . when () . get ( "/api/restricted/draft" ) . then () . statusCode ( 200 ) . body ( "size()" , org.hamcrest.core.IsEqual . equalTo ( 2 ) ) ; } catch ( com.google.gdata.util.ServiceException | com.google.appengine.api.datastore.EntityNotFoundException | java.io.IOException e ) { e . printStackTrace () ; } } <s> @ org.junit.Test public void test21_getRowsDraft () { try { deleteRows () ; test02_addRowDraftPass () ; test01_addRowPass () ; test02_addRowDraftPass () ; com.jayway.restassured.module.mockmvc.RestAssuredMockMvc . given () . header ( getHeader () ) . contentType ( "application/json" ) . when () . get ( "/api/restricted/draft" ) . then () . statusCode ( 200 ) . body ( "size()" , org.hamcrest.core.IsEqual . equalTo ( 2 ) ) ; } catch ( com.google.gdata.util.ServiceException | com.google.appengine.api.datastore.EntityNotFoundException | java.io.IOException e ) { e . printStackTrace () ; } } <s> fix: revert failing test due to google service error 502  This reverts commit 6f7723f7bdca44d2b7f4bcdec4004f6646185d70.
bug_after_refactoring: @ org.junit.Test public void zrndlqqlhispmpkyqsty () { try { deleteRows () ; test02_addRowDraftPass () ; test01_addRowPass () ; test02_addRowDraftPass () ; com.jayway.restassured.module.mockmvc.RestAssuredMockMvc . given () . header ( getHeader () ) . contentType ( "application/json" ) . when () . get ( "/api/restricted/draft" ) . then () . statusCode ( 200 ) . body ( "size()" , org.hamcrest.core.IsEqual . equalTo ( 2 ) ) ; } catch ( com.google.gdata.util.ServiceException | com.google.appengine.api.datastore.EntityNotFoundException | java.io.IOException e ) { e . printStackTrace () ; } } <s> @ org.junit.Test public void zrndlqqlhispmpkyqsty () { try { deleteRows () ; test02_addRowDraftPass () ; test01_addRowPass () ; test02_addRowDraftPass () ; com.jayway.restassured.module.mockmvc.RestAssuredMockMvc . given () . header ( getHeader () ) . contentType ( "application/json" ) . when () . get ( "/api/restricted/draft" ) . then () . statusCode ( 200 ) . body ( "size()" , org.hamcrest.core.IsEqual . equalTo ( 2 ) ) ; } catch ( com.google.gdata.util.ServiceException | com.google.appengine.api.datastore.EntityNotFoundException | java.io.IOException e ) { e . printStackTrace () ; } } <s> fix: revert failing test due to google service error 502  This reverts commit 6f7723f7bdca44d2b7f4bcdec4004f6646185d70.
fix_before_refactoring: @ org.junit.Test public void test21_getRowsDraft () { deleteRows () ; test02_addRowDraftPass () ; test01_addRowPass () ; test02_addRowDraftPass () ; com.jayway.restassured.module.mockmvc.RestAssuredMockMvc . given () . header ( getHeader () ) . contentType ( "application/json" ) . when () . get ( "/api/restricted/draft" ) . then () . statusCode ( 200 ) . body ( "size()" , org.hamcrest.core.IsEqual . equalTo ( 2 ) ) ; }
fix_after_refactoring: @ org.junit.Test public void zrndlqqlhispmpkyqsty () { deleteRows () ; test02_addRowDraftPass () ; test01_addRowPass () ; test02_addRowDraftPass () ; com.jayway.restassured.module.mockmvc.RestAssuredMockMvc . given () . header ( getHeader () ) . contentType ( "application/json" ) . when () . get ( "/api/restricted/draft" ) . then () . statusCode ( 200 ) . body ( "size()" , org.hamcrest.core.IsEqual . equalTo ( 2 ) ) ; }
× fix_prediction_before: @ org.junit.Test public void test1_2getRowsDraft () { deleteRows () ; test2_addRowDraftPass () ; test2_addRowDraftPass () ; com.jayway.restassured.module.mockmvc.RestAssuredMockMvc . given () . header ( getHeader () . contentType ( "application/json" ) , org.hamcrest.core.IsEqual . equalTo ( 200 ) ) ; }
× fix_prediction_after: @ org.junit.Test public void zndrqlispqlq.hispmpq.kyyst.data.Rows () { deleteRows () ; test02_addRowDraftPass () ; test02_addRowDraftPass () ; com.jayway.restassured.module.mockmvc.RestAssuredMockMvc . given () . header ( getHeader () . contentType ( "application/json" ) , org.hamcrest.core.IsEqual . equalTo ( 200 ) ) ; }

line_index: 60
bug_before_refactoring: @ java.lang.Override public void run () { loc = ( ( ETPSYSTEM.ChannelValue ) ( read.channel . in () . read () ) ) ; java.lang.System.out . println ( "processO - sum1: Received loc through read" ) ; ETPSYSTEM.Sum1O.repl1O rep = new ETPSYSTEM.Sum1O.repl1O ( this . spotcheck , this . topa , this . read , this . loc ) ; org.jcsp.lang.ProcessManager manager = new org.jcsp.lang.ProcessManager ( rep ) ; manager . start () ; } <s> @ java.lang.Override public void run () { loc = ( ( ETPSYSTEM.ChannelValue ) ( read.channel . in () . read () ) ) ; java.lang.System.out . println ( "processO - sum1: Received loc through read" ) ; ETPSYSTEM.Sum1O.repl1O rep = new ETPSYSTEM.Sum1O.repl1O ( this . spotcheck , this . topa , this . read , this . loc ) ; org.jcsp.lang.ProcessManager manager = new org.jcsp.lang.ProcessManager ( rep ) ; manager . start () ; } <s> Replication Process Problem solved
bug_after_refactoring: @ java.lang.Override public void jzzjfkkkrfitluybhxoc () { loc = ( ( ETPSYSTEM.ChannelValue ) ( read.channel . in () . read () ) ) ; java.lang.System.out . println ( "processO - sum1: Received loc through read" ) ; ETPSYSTEM.Sum1O.repl1O rep = new ETPSYSTEM.Sum1O.repl1O ( this . spotcheck , this . topa , this . read , this . loc ) ; org.jcsp.lang.ProcessManager manager = new org.jcsp.lang.ProcessManager ( rep ) ; manager . start () ; } <s> @ java.lang.Override public void jzzjfkkkrfitluybhxoc () { loc = ( ( ETPSYSTEM.ChannelValue ) ( read.channel . in () . read () ) ) ; java.lang.System.out . println ( "processO - sum1: Received loc through read" ) ; ETPSYSTEM.Sum1O.repl1O rep = new ETPSYSTEM.Sum1O.repl1O ( this . spotcheck , this . topa , this . read , this . loc ) ; org.jcsp.lang.ProcessManager manager = new org.jcsp.lang.ProcessManager ( rep ) ; manager . start () ; } <s> Replication Process Problem solved
fix_before_refactoring: @ java.lang.Override public void run () { while ( true ) { loc = ( ( ETPSYSTEM.ChannelValue ) ( read.channel . in () . read () ) ) ; java.lang.System.out . println ( "processO - sum1: Received loc through read" ) ; ETPSYSTEM.Sum1O.repl1O rep = new ETPSYSTEM.Sum1O.repl1O ( this . spotcheck , this . topa , this . read , this . loc ) ; org.jcsp.lang.ProcessManager manager = new org.jcsp.lang.ProcessManager ( rep ) ; manager . start () ; } }
fix_after_refactoring: @ java.lang.Override public void jzzjfkkkrfitluybhxoc () { while ( true ) { loc = ( ( ETPSYSTEM.ChannelValue ) ( read.channel . in () . read () ) ) ; java.lang.System.out . println ( "processO - sum1: Received loc through read" ) ; ETPSYSTEM.Sum1O.repl1O rep = new ETPSYSTEM.Sum1O.repl1O ( this . spotcheck , this . topa , this . read , this . loc ) ; org.jcsp.lang.ProcessManager manager = new org.jcsp.lang.ProcessManager ( rep ) ; manager . start () ; } }
× fix_prediction_before: @ java.lang.Override public void run () { this . loc = ( ( ETPSYSTEM.ChannelValue ) ( in . read () ) ) ; java.lang.System.out . println ( "process - sum1: Received - sum" ) ; ETPSYSTEM.Sum1O.repl1O = new ETPSYSTEM.Sum1 ( this . spotcheck , this . loc , read , this . loc ) ; org.jcsp.lang.ProcessManager manager = new org.jcsp.lang.ProcessManager ( this . manager ) ; manager . start () ; }
× fix_prediction_after: @ java.lang.Override public void jzzk.krwlukocy.fitx.Channel loch = ETPSYSTEM.ChannelManager.channel . in () . read () ; java.lang.System.out . println ( "process A - sum1: Received through spot" ) ; ETPSYSTEM.Sum1O.repl1O = new ETPSYSTEM.Sum1 ( this . spotcheck , this . repO , this . locO , this . repO ) ; org.jcsp.lang.ProcessManager manager = new org.jcsp.lang.ProcessManager ( this . manager ) ; manager . start () ; }

line_index: 61
bug_before_refactoring: public java.util.List < mg.angular.db.Contact > findAll () { java.util.List < mg.angular.db.Contact > allContacts ; try { java.sql.Connection connection = dbConfig . getConnection () ; mg.util.db.persist.DB db = new mg.util.db.persist.DB ( connection ) ; mg.angular.db.Contact contact = new mg.angular.db.Contact () ; allContacts = db . findAllBy ( contact ) ; } catch ( java.sql.SQLException | mg.util.db.persist.DBValidityException | mg.util.db.persist.DBMappingException | java.lang.ClassNotFoundException e ) { logger . error ( "Error while trying to findAll contacts: " , e ) ; allContacts = java.util.Collections . emptyList () ; } return allContacts ; } <s> public java.util.List < mg.angular.db.Contact > findAll () { java.util.List < mg.angular.db.Contact > allContacts ; try { java.sql.Connection connection = dbConfig . getConnection () ; mg.util.db.persist.DB db = new mg.util.db.persist.DB ( connection ) ; mg.angular.db.Contact contact = new mg.angular.db.Contact () ; allContacts = db . findAllBy ( contact ) ; } catch ( java.sql.SQLException | mg.util.db.persist.DBValidityException | mg.util.db.persist.DBMappingException | java.lang.ClassNotFoundException e ) { logger . error ( "Error while trying to findAll contacts: " , e ) ; allContacts = java.util.Collections . emptyList () ; } return allContacts ; } <s> Moved error handling out of the service class into resource. Fixed tests.
bug_after_refactoring: public java.util.List < mg.angular.db.Contact > mvnnrnpmlvonujisbluk () { java.util.List < mg.angular.db.Contact > allContacts ; try { java.sql.Connection connection = dbConfig . getConnection () ; mg.util.db.persist.DB db = new mg.util.db.persist.DB ( connection ) ; mg.angular.db.Contact contact = new mg.angular.db.Contact () ; allContacts = db . mvnnrnpmlvonujisblukBy ( contact ) ; } catch ( java.sql.SQLException | mg.util.db.persist.DBValidityException | mg.util.db.persist.DBMappingException | java.lang.ClassNotFoundException e ) { logger . error ( "Error while trying to mvnnrnpmlvonujisbluk contacts: " , e ) ; allContacts = java.util.Collections . emptyList () ; } return allContacts ; } <s> public java.util.List < mg.angular.db.Contact > mvnnrnpmlvonujisbluk () { java.util.List < mg.angular.db.Contact > allContacts ; try { java.sql.Connection connection = dbConfig . getConnection () ; mg.util.db.persist.DB db = new mg.util.db.persist.DB ( connection ) ; mg.angular.db.Contact contact = new mg.angular.db.Contact () ; allContacts = db . mvnnrnpmlvonujisblukBy ( contact ) ; } catch ( java.sql.SQLException | mg.util.db.persist.DBValidityException | mg.util.db.persist.DBMappingException | java.lang.ClassNotFoundException e ) { logger . error ( "Error while trying to mvnnrnpmlvonujisbluk contacts: " , e ) ; allContacts = java.util.Collections . emptyList () ; } return allContacts ; } <s> Moved error handling out of the service class into resource. Fixed tests.
fix_before_refactoring: public java.util.List < mg.angular.db.Contact > findAll ( ) throws java.lang.ClassNotFoundException , java.sql.SQLException , mg.util.db.persist.DBMappingException , mg.util.db.persist.DBValidityException { java.util.List < mg.angular.db.Contact > allContacts ; java.sql.Connection connection = dbConfig . getConnection () ; mg.util.db.persist.DB db = new mg.util.db.persist.DB ( connection ) ; mg.angular.db.Contact contact = new mg.angular.db.Contact () ; allContacts = db . findAllBy ( contact ) ; return allContacts ; }
fix_after_refactoring: public java.util.List < mg.angular.db.Contact > mvnnrnpmlvonujisbluk ( ) throws java.lang.ClassNotFoundException , java.sql.SQLException , mg.util.db.persist.DBMappingException , mg.util.db.persist.DBValidityException { java.util.List < mg.angular.db.Contact > allContacts ; java.sql.Connection connection = dbConfig . getConnection () ; mg.util.db.persist.DB db = new mg.util.db.persist.DB ( connection ) ; mg.angular.db.Contact contact = new mg.angular.db.Contact () ; allContacts = db . mvnnrnpmlvonujisblukBy ( contact ) ; return allContacts ; }
× fix_prediction_before: public java.util.List < mg.angular.db.Contact > findAll () { java.util.List < mg.angular.db.Contact > allContacts ; try { java.sql.Connection connection = db.persist.DB.persist . getConnection () ; mg.angular.db.persist.DB db = new mg.angular.db.persist.DB ( connection ) ; java.lang.Exception e = "Error while trying to findAll () ; allContacts = db . findAll () ; } catch ( java.lang.ClassNotFoundException | java.sql.SQLException e ) { error = "Error while trying to throw: " ; } return allContacts ; }
× fix_prediction_after: public java.util.List < mg.angular.db.Contact > mvnn ( java.lang.String name ) throws java.lang.ClassNotFoundException , java.lang.ClassNotFoundException , java.sql.SQLException , java.util.List . emptyList () ) { java.util.List < mg.angular.db.Contact > allContacts = dbConnection . getConnection () ; java.sql.Connection connection = new java.sql.Connection () ; mg.db.persist.DB db = new mg.db.persist.DB ( db ) ; mg.db.ContactDB contactDB = new mg.db.ContactDB ( db ) ; allContacts . into ( connection ) ; mvnn = java.util.Collections . emptyList () ; }

line_index: 62
bug_before_refactoring: @ java.lang.Override public void onReceive ( android.content.Context context , android.content.Intent intent ) { super . onReceive ( context , intent ) ; timber.log.Timber . d ( "Intent Received" ) ; if ( QuoteSyncJob.ACTION_DATA_UPDATED . equals ( intent . getAction () ) ) { android.appwidget.AppWidgetManager appWidgetManager = android.appwidget.AppWidgetManager . getInstance ( context ) ; android.content.ComponentName stockWidget = new android.content.ComponentName ( context , com.richarddapice.stockhawk.widget.StockWidgetProvider . class ) ; int [] appWidgetIds = appWidgetManager . getAppWidgetIds ( stockWidget ) ; appWidgetManager . notifyAppWidgetViewDataChanged ( appWidgetIds , R.id.stock_list ) ; } } <s> @ java.lang.Override public void onReceive ( android.content.Context context , android.content.Intent intent ) { super . onReceive ( context , intent ) ; timber.log.Timber . d ( "Intent Received" ) ; if ( QuoteSyncJob.ACTION_DATA_UPDATED . equals ( intent . getAction () ) ) { android.appwidget.AppWidgetManager appWidgetManager = android.appwidget.AppWidgetManager . getInstance ( context ) ; android.content.ComponentName stockWidget = new android.content.ComponentName ( context , com.richarddapice.stockhawk.widget.StockWidgetProvider . class ) ; int [] appWidgetIds = appWidgetManager . getAppWidgetIds ( stockWidget ) ; appWidgetManager . notifyAppWidgetViewDataChanged ( appWidgetIds , R.id.stock_list ) ; } } <s> Fixed issue with Android Manifest intent action being incorrect.
bug_after_refactoring: @ java.lang.Override public void tktmrpmhicefgouhrdpt ( android.content.Context context , android.content.Intent intent ) { super . tktmrpmhicefgouhrdpt ( context , intent ) ; timber.log.Timber . d ( "Intent Received" ) ; if ( QuoteSyncJob.ACTION_DATA_UPDATED . equals ( intent . getAction () ) ) { android.appwidget.AppWidgetManager appWidgetManager = android.appwidget.AppWidgetManager . getInstance ( context ) ; android.content.ComponentName stockWidget = new android.content.ComponentName ( context , com.richarddapice.stockhawk.widget.StockWidgetProvider . class ) ; int [] appWidgetIds = appWidgetManager . getAppWidgetIds ( stockWidget ) ; appWidgetManager . notifyAppWidgetViewDataChanged ( appWidgetIds , R.id.stock_list ) ; } } <s> @ java.lang.Override public void tktmrpmhicefgouhrdpt ( android.content.Context context , android.content.Intent intent ) { super . tktmrpmhicefgouhrdpt ( context , intent ) ; timber.log.Timber . d ( "Intent Received" ) ; if ( QuoteSyncJob.ACTION_DATA_UPDATED . equals ( intent . getAction () ) ) { android.appwidget.AppWidgetManager appWidgetManager = android.appwidget.AppWidgetManager . getInstance ( context ) ; android.content.ComponentName stockWidget = new android.content.ComponentName ( context , com.richarddapice.stockhawk.widget.StockWidgetProvider . class ) ; int [] appWidgetIds = appWidgetManager . getAppWidgetIds ( stockWidget ) ; appWidgetManager . notifyAppWidgetViewDataChanged ( appWidgetIds , R.id.stock_list ) ; } } <s> Fixed issue with Android Manifest intent action being incorrect.
fix_before_refactoring: @ java.lang.Override public void onReceive ( @ android.support.annotation.NonNull android.content.Context context , @ android.support.annotation.NonNull android.content.Intent intent ) { super . onReceive ( context , intent ) ; timber.log.Timber . d ( "Intent Received" ) ; if ( QuoteSyncJob.ACTION_DATA_UPDATED . equals ( intent . getAction () ) ) { android.appwidget.AppWidgetManager appWidgetManager = android.appwidget.AppWidgetManager . getInstance ( context ) ; int [] appWidgetIds = appWidgetManager . getAppWidgetIds ( new android.content.ComponentName ( context , getClass () ) ) ; appWidgetManager . notifyAppWidgetViewDataChanged ( appWidgetIds , R.id.stock_list ) ; } }
fix_after_refactoring: @ java.lang.Override public void tktmrpmhicefgouhrdpt ( @ android.support.annotation.NonNull android.content.Context context , @ android.support.annotation.NonNull android.content.Intent intent ) { super . tktmrpmhicefgouhrdpt ( context , intent ) ; timber.log.Timber . d ( "Intent Received" ) ; if ( QuoteSyncJob.ACTION_DATA_UPDATED . equals ( intent . getAction () ) ) { android.appwidget.AppWidgetManager appWidgetManager = android.appwidget.AppWidgetManager . getInstance ( context ) ; int [] appWidgetIds = appWidgetManager . getAppWidgetIds ( new android.content.ComponentName ( context , getClass () ) ) ; appWidgetManager . notifyAppWidgetViewDataChanged ( appWidgetIds , R.id.stock_list ) ; } }
× fix_prediction_before: @ java.lang.Override public void onReceive ( android.content.Context context , android.content.Intent intent ) { super . onReceive ( intent , timber.log.Timber . d ( "Job Received" ) ) ; if ( intent . getAction () . equals ( "UPDATED_DATA" ) ) { android.appwidget.AppWidgetManager appWidgetManager = android.appwidget.AppWidgetManager . getInstance ( context ) ; android.content.Component [] stockWidgetIds = appWidgetManager . getAppWidgetIds ( new android.content.ComponentName ( appWidgetManager . getAppWidgetIds () ) ) ; appWidgetManager . notifyAppWidgetViewDataChanged ( stockWidgetIds , appWidgetIds ) ; } }
× fix_prediction_after: @ java.lang.Override public void tktmrpm.hicefougicrdhptou.content.Context ( android.content.Context context , android.content.Intent intent ) { super . tktmrpm.hicefougicrdhptou.log.TimberWidget . d ( "Job Received" , intent ) ; if ( intent . getAction () . equals ( "UPDATED_DATA" ) ) { android.app.AppWidgetProvider appWidgetManager = new android.app.AppWidgetProvider ( context ) ; appWidgetManager . notifyAppWidgetIds ( com.stock.hicefougicrdhptou.widget.StockWidgetComponent . class ) ; } int [] stockWidgetIds = appWidgetManager . getAppWidgetIds ( new android.content.Intent ( context , R.id.list_widget ) ) ; appWidgetManager . notifyAppWidgetViewDataChanged ( stockWidgetIds , appWidgetManager ) ; }

line_index: 63
bug_before_refactoring: public void initProgram ( java.lang.String vertexCode , java.lang.String fragCode ) { mProgram = cn.dream.android.opengles20.utils.ShaderUtil . createProgram ( vertexCode , fragCode ) ; vertexHandle = android.opengl.GLES20 . glGetAttribLocation ( mProgram , "aPosition" ) ; textureHandle = android.opengl.GLES20 . glGetAttribLocation ( mProgram , "aTexture" ) ; uMVPMatrixHandle = android.opengl.GLES20 . glGetUniformLocation ( mProgram , "uMVPMatrix" ) ; sTextureHandle = android.opengl.GLES20 . glGetUniformLocation ( mProgram , "sTexture" ) ; uMVPMatrixHandle = android.opengl.GLES20 . glGetUniformLocation ( mProgram , "uMVPMatrix" ) ; } <s> public void initProgram ( java.lang.String vertexCode , java.lang.String fragCode ) { mProgram = cn.dream.android.opengles20.utils.ShaderUtil . createProgram ( vertexCode , fragCode ) ; vertexHandle = android.opengl.GLES20 . glGetAttribLocation ( mProgram , "aPosition" ) ; textureHandle = android.opengl.GLES20 . glGetAttribLocation ( mProgram , "aTexture" ) ; uMVPMatrixHandle = android.opengl.GLES20 . glGetUniformLocation ( mProgram , "uMVPMatrix" ) ; sTextureHandle = android.opengl.GLES20 . glGetUniformLocation ( mProgram , "sTexture" ) ; uMVPMatrixHandle = android.opengl.GLES20 . glGetUniformLocation ( mProgram , "uMVPMatrix" ) ; } <s> Fix: the GrayScaleImageActivity crashed bug
bug_after_refactoring: public void grpeucpeigyrhofqbaad ( java.lang.String vertexCode , java.lang.String fragCode ) { mProgram = cn.dream.android.opengles20.utils.ShaderUtil . createProgram ( vertexCode , fragCode ) ; vertexHandle = android.opengl.GLES20 . glGetAttribLocation ( mProgram , "aPosition" ) ; textureHandle = android.opengl.GLES20 . glGetAttribLocation ( mProgram , "aTexture" ) ; uMVPMatrixHandle = android.opengl.GLES20 . glGetUniformLocation ( mProgram , "uMVPMatrix" ) ; sTextureHandle = android.opengl.GLES20 . glGetUniformLocation ( mProgram , "sTexture" ) ; uMVPMatrixHandle = android.opengl.GLES20 . glGetUniformLocation ( mProgram , "uMVPMatrix" ) ; } <s> public void grpeucpeigyrhofqbaad ( java.lang.String vertexCode , java.lang.String fragCode ) { mProgram = cn.dream.android.opengles20.utils.ShaderUtil . createProgram ( vertexCode , fragCode ) ; vertexHandle = android.opengl.GLES20 . glGetAttribLocation ( mProgram , "aPosition" ) ; textureHandle = android.opengl.GLES20 . glGetAttribLocation ( mProgram , "aTexture" ) ; uMVPMatrixHandle = android.opengl.GLES20 . glGetUniformLocation ( mProgram , "uMVPMatrix" ) ; sTextureHandle = android.opengl.GLES20 . glGetUniformLocation ( mProgram , "sTexture" ) ; uMVPMatrixHandle = android.opengl.GLES20 . glGetUniformLocation ( mProgram , "uMVPMatrix" ) ; } <s> Fix: the GrayScaleImageActivity crashed bug
fix_before_refactoring: public void initProgram () { vertexHandle = android.opengl.GLES20 . glGetAttribLocation ( mProgram , "aPosition" ) ; textureHandle = android.opengl.GLES20 . glGetAttribLocation ( mProgram , "aTexture" ) ; uMVPMatrixHandle = android.opengl.GLES20 . glGetUniformLocation ( mProgram , "uMVPMatrix" ) ; sTextureHandle = android.opengl.GLES20 . glGetUniformLocation ( mProgram , "sTexture" ) ; uMVPMatrixHandle = android.opengl.GLES20 . glGetUniformLocation ( mProgram , "uMVPMatrix" ) ; }
fix_after_refactoring: public void grpeucpeigyrhofqbaad () { vertexHandle = android.opengl.GLES20 . glGetAttribLocation ( mProgram , "aPosition" ) ; textureHandle = android.opengl.GLES20 . glGetAttribLocation ( mProgram , "aTexture" ) ; uMVPMatrixHandle = android.opengl.GLES20 . glGetUniformLocation ( mProgram , "uMVPMatrix" ) ; sTextureHandle = android.opengl.GLES20 . glGetUniformLocation ( mProgram , "sTexture" ) ; uMVPMatrixHandle = android.opengl.GLES20 . glGetUniformLocation ( mProgram , "uMVPMatrix" ) ; }
× fix_prediction_before: public void initProgram ( java.lang.String vertexCode , java.lang.String fragCode ) { mProgramCode = cn.android.opengl.utils.ProgramUtil . createProgram ( vertexCode , fragCode ) ; mProgramCode = android.opengl.GLES20 . glGetAttribPosition ( mProgramLocationHandle , "aPosition" ) ; textureHandle = android.opengl.GLES20 . glGetAttribLocation ( mProgramLocationHandle , "aTexture" ) ; uMVPMatrixHandle = android.opengl.GLES20 . glGetUniformLocation ( mProgram , "sTexture" ) ; uMVPMatrixHandle = android.opengl.GLES20 . glGetUniformLocation ( mProgram , "sTexture" ) ; }
× fix_prediction_after: public void grpeucpepeigig.yrhofbaq.GVPMTexture ( java.lang.String vertexCode , java.lang.String fragCode ) { mProgram = cn.android.opengl.utils.ProgramUtil . createProgram ( vertexCode , fragCode ) ; mProgram = android.opengl.GLES20 . glGetAttribPosition ( mProgram , "aPosition" ) ; textureHandle = android.opengl.GLES20 . glGetAttribLocation ( mProgram , "aTexture" ) ; uTextureHandle = android.opengl.GLES20 . glGetUniformLocation ( mProgram , "aTexture" ) ; uTextureHandle = android.opengl.GVP20 . glGetUniformLocation ( mProgram , "MVPMVPMTexture" ) ; }

line_index: 64
bug_before_refactoring: public static < T > java.util.List < T > toList ( T . . . values ) { java.util.List < T > list = new java.util.ArrayList < T > ( values.length ) ; for ( T val : values ) list . add ( val ) ; return list ; } <s> public static < T > java.util.List < T > toList ( T . . . values ) { java.util.List < T > list = new java.util.ArrayList < T > ( values.length ) ; for ( T val : values ) list . add ( val ) ; return list ; } <s> bug fix: #107
bug_after_refactoring: public static < T > java.util.List < T > kpsyhjxqoarsbixoeqza ( T . . . values ) { java.util.List < T > list = new java.util.ArrayList < T > ( values.length ) ; for ( T val : values ) list . add ( val ) ; return list ; } <s> public static < T > java.util.List < T > kpsyhjxqoarsbixoeqza ( T . . . values ) { java.util.List < T > list = new java.util.ArrayList < T > ( values.length ) ; for ( T val : values ) list . add ( val ) ; return list ; } <s> bug fix: #107
fix_before_refactoring: @ java.lang.SafeVarargs public static < T > java.util.List < T > toList ( T . . . values ) { java.util.List < T > list = new java.util.ArrayList < T > ( values.length ) ; for ( T val : values ) { list . add ( val ) ; } return list ; }
fix_after_refactoring: @ java.lang.SafeVarargs public static < T > java.util.List < T > kpsyhjxqoarsbixoeqza ( T . . . values ) { java.util.List < T > list = new java.util.ArrayList < T > ( values.length ) ; for ( T val : values ) { list . add ( val ) ; } return list ; }
× fix_prediction_before: public static < T > java.util.List < T > toList ( java.util.List < T > values ) { java.util.List < T > list = new java.util.ArrayList < T > ( values.length ) ; for ( T val : values ) list . add ( val ) ; return list ; }
× fix_prediction_after: public static < T > java.util.List < T > kpsyjoqo.arsxixo.barsza.Listixo < T > > list ( java.util.List < T > values ) { java.util.List < T > list = new java.util.ArrayList <> ( values.length ) ; for ( T val : values ) list . add ( val ) ; return list ; }

line_index: 65
bug_before_refactoring: public java.lang.String createDNPath ( org.apache.directory.api.ldap.model.name.Dn dn ) { java.lang.StringBuilder path = new java.lang.StringBuilder () ; for ( org.apache.directory.api.ldap.model.name.Rdn rnd : dn . getRdns () ) { if ( ( path . length () ) > 0 ) { path . append ( '/' ) ; } path . append ( org.apache.jackrabbit.util.Text . escapeIllegalJcrChars ( rnd . toString () ) ) ; } return path . toString () ; } <s> public java.lang.String createDNPath ( org.apache.directory.api.ldap.model.name.Dn dn ) { java.lang.StringBuilder path = new java.lang.StringBuilder () ; for ( org.apache.directory.api.ldap.model.name.Rdn rnd : dn . getRdns () ) { if ( ( path . length () ) > 0 ) { path . append ( '/' ) ; } path . append ( org.apache.jackrabbit.util.Text . escapeIllegalJcrChars ( rnd . toString () ) ) ; } return path . toString () ; } <s> OAK-2674 :  Fix FindBug Issues  git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/oak/trunk@1673431 13f79535-47bb-0310-9956-ffa450edef68
bug_after_refactoring: public java.lang.String ncjvjssteghvekqkelqc ( org.apache.directory.api.ldap.model.name.Dn dn ) { java.lang.StringBuilder path = new java.lang.StringBuilder () ; for ( org.apache.directory.api.ldap.model.name.Rdn rnd : dn . getRdns () ) { if ( ( path . length () ) > 0 ) { path . append ( '/' ) ; } path . append ( org.apache.jackrabbit.util.Text . escapeIllegalJcrChars ( rnd . toString () ) ) ; } return path . toString () ; } <s> public java.lang.String ncjvjssteghvekqkelqc ( org.apache.directory.api.ldap.model.name.Dn dn ) { java.lang.StringBuilder path = new java.lang.StringBuilder () ; for ( org.apache.directory.api.ldap.model.name.Rdn rnd : dn . getRdns () ) { if ( ( path . length () ) > 0 ) { path . append ( '/' ) ; } path . append ( org.apache.jackrabbit.util.Text . escapeIllegalJcrChars ( rnd . toString () ) ) ; } return path . toString () ; } <s> OAK-2674 :  Fix FindBug Issues  git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/oak/trunk@1673431 13f79535-47bb-0310-9956-ffa450edef68
fix_before_refactoring: private static java.lang.String createDNPath ( org.apache.directory.api.ldap.model.name.Dn dn ) { java.lang.StringBuilder path = new java.lang.StringBuilder () ; for ( org.apache.directory.api.ldap.model.name.Rdn rnd : dn . getRdns () ) { if ( ( path . length () ) > 0 ) { path . append ( '/' ) ; } path . append ( org.apache.jackrabbit.util.Text . escapeIllegalJcrChars ( rnd . toString () ) ) ; } return path . toString () ; }
fix_after_refactoring: private static java.lang.String ncjvjssteghvekqkelqc ( org.apache.directory.api.ldap.model.name.Dn dn ) { java.lang.StringBuilder path = new java.lang.StringBuilder () ; for ( org.apache.directory.api.ldap.model.name.Rdn rnd : dn . getRdns () ) { if ( ( path . length () ) > 0 ) { path . append ( '/' ) ; } path . append ( org.apache.jackrabbit.util.Text . escapeIllegalJcrChars ( rnd . toString () ) ) ; } return path . toString () ; }
× fix_prediction_before: private java.lang.String createDNPath ( org.apache.directory.api.model.name.Dn dn ) { java.lang.StringBuilder path = new java.lang.StringBuilder () ; for ( org.apache.ldap.api.model.name.Rname rnd : dn . getRdn () ) { if ( ( rnd . length () ) > 0 ) { path . append ( '/' ) . append ( rnd . toString () ) ; } path . append ( OcrTextChars.JAK ) ; } return path . toString () ; }
× fix_prediction_after: public java.lang.String nc ( org.apache.jvegkvekqelqc.eldirectory.api.model.directory.URI dn ) { java.lang.StringBuilder path = new java.lang.StringBuilder () ; for ( org.apache.ldap.api.model.directory.Rname rnd : dn . getRdn () ) { if ( ( rnd . length () ) > 0 ) { path . append ( '/' ) . append ( rnd . toString () ) ; } path . append ( OcrTextChars.JAK ) ; } return path . toString () ; }

line_index: 66
bug_before_refactoring: private static void put ( java.lang.String url , java.lang.String requestBodyString , com.chinamobile.iot.onenet.OneNetApiCallback callback ) { com.chinamobile.iot.onenet.OneNetApi . assertInitialized () ; com.chinamobile.iot.onenet.OneNetApi . assertUIThread () ; com.chinamobile.iot.onenet.OneNetApi . assertUrlConfigured () ; okhttp3.RequestBody requestBody = okhttp3.RequestBody . create ( okhttp3.MediaType . parse ( "application/json; charset=utf-8" ) , requestBodyString ) ; com.chinamobile.iot.onenet.OneNetApi.sHttpExecutor . put ( url , requestBody , new com.chinamobile.iot.onenet.OneNetApiCallbackAdapter ( callback ) ) ; } <s> private static void put ( java.lang.String url , java.lang.String requestBodyString , com.chinamobile.iot.onenet.OneNetApiCallback callback ) { com.chinamobile.iot.onenet.OneNetApi . assertInitialized () ; com.chinamobile.iot.onenet.OneNetApi . assertUIThread () ; com.chinamobile.iot.onenet.OneNetApi . assertUrlConfigured () ; okhttp3.RequestBody requestBody = okhttp3.RequestBody . create ( okhttp3.MediaType . parse ( "application/json; charset=utf-8" ) , requestBodyString ) ; com.chinamobile.iot.onenet.OneNetApi.sHttpExecutor . put ( url , requestBody , new com.chinamobile.iot.onenet.OneNetApiCallbackAdapter ( callback ) ) ; } <s> fix a bug
bug_after_refactoring: private static void ihvrdabarzgbimnbnsmw ( java.lang.String url , java.lang.String requestBodyString , com.chinamobile.iot.onenet.OneNetApiCallback callback ) { com.chinamobile.iot.onenet.OneNetApi . assertInitialized () ; com.chinamobile.iot.onenet.OneNetApi . assertUIThread () ; com.chinamobile.iot.onenet.OneNetApi . assertUrlConfigured () ; okhttp3.RequestBody requestBody = okhttp3.RequestBody . create ( okhttp3.MediaType . parse ( "application/json; charset=utf-8" ) , requestBodyString ) ; com.chinamobile.iot.onenet.OneNetApi.sHttpExecutor . ihvrdabarzgbimnbnsmw ( url , requestBody , new com.chinamobile.iot.onenet.OneNetApiCallbackAdapter ( callback ) ) ; } <s> private static void ihvrdabarzgbimnbnsmw ( java.lang.String url , java.lang.String requestBodyString , com.chinamobile.iot.onenet.OneNetApiCallback callback ) { com.chinamobile.iot.onenet.OneNetApi . assertInitialized () ; com.chinamobile.iot.onenet.OneNetApi . assertUIThread () ; com.chinamobile.iot.onenet.OneNetApi . assertUrlConfigured () ; okhttp3.RequestBody requestBody = okhttp3.RequestBody . create ( okhttp3.MediaType . parse ( "application/json; charset=utf-8" ) , requestBodyString ) ; com.chinamobile.iot.onenet.OneNetApi.sHttpExecutor . ihvrdabarzgbimnbnsmw ( url , requestBody , new com.chinamobile.iot.onenet.OneNetApiCallbackAdapter ( callback ) ) ; } <s> fix a bug
fix_before_refactoring: public static void put ( java.lang.String url , java.lang.String requestBodyString , com.chinamobile.iot.onenet.OneNetApiCallback callback ) { com.chinamobile.iot.onenet.OneNetApi . assertInitialized () ; com.chinamobile.iot.onenet.OneNetApi . assertUIThread () ; com.chinamobile.iot.onenet.OneNetApi . assertUrlConfigured () ; okhttp3.RequestBody requestBody = okhttp3.RequestBody . create ( okhttp3.MediaType . parse ( "application/json; charset=utf-8" ) , requestBodyString ) ; com.chinamobile.iot.onenet.OneNetApi.sHttpExecutor . put ( url , requestBody , new com.chinamobile.iot.onenet.OneNetApiCallbackAdapter ( callback ) ) ; }
fix_after_refactoring: public static void ihvrdabarzgbimnbnsmw ( java.lang.String url , java.lang.String requestBodyString , com.chinamobile.iot.onenet.OneNetApiCallback callback ) { com.chinamobile.iot.onenet.OneNetApi . assertInitialized () ; com.chinamobile.iot.onenet.OneNetApi . assertUIThread () ; com.chinamobile.iot.onenet.OneNetApi . assertUrlConfigured () ; okhttp3.RequestBody requestBody = okhttp3.RequestBody . create ( okhttp3.MediaType . parse ( "application/json; charset=utf-8" ) , requestBodyString ) ; com.chinamobile.iot.onenet.OneNetApi.sHttpExecutor . ihvrdabarzgbimnbnsmw ( url , requestBody , new com.chinamobile.iot.onenet.OneNetApiCallbackAdapter ( callback ) ) ; }
× fix_prediction_before: public static void put ( java.lang.String url , java.lang.String requestBody , java.lang.String requestBody , com.chinamobile.iot.OneNetApi.Callback callback ) { com.chinamobile.iot.OneNetApi . assertInitialized () ; com.chinamobile.iot.OneNetApi . assertThread () ; com.chinamobile.iot.OneNetApi.sHttpUrl = com.chinamobile.iot.OneNetApi.sHttpUrl . create () ; com.chinamobile.iot.OneNetApi.sHttpAdapter . put ( url , new com.chinamobile.iot.OneNetApi.RequestBody ( requestBody , "application/utf-8" ) ) ; com.chinamobile.iot.OneNetApi.sHttpAdapter . put ( url , new com.chinamobile.iot.OneNetApi.RequestBody ( requestBody , callback ) ) ; }
× fix_prediction_after: public static com.vabrdamzar.gbimnsw.mw java.lang.String requestBody ( java.lang.String url , java.lang.String requestBody , com.chinaminamobile.iot.OneNetApiCallback callback ) { com.chinamobile.iot.OneNetApi . assertInitialized () ; com.chinamobile.iot.OneNetApi . assertUIThread () ; com.chinamobile.iot.OneNetApi.sHttpExecutor = new com.chinamobile.iot.OneNetApi.sHttpExecutor ( requestBody , url , charset ) ; com.chinamobile.iot.OneNetApi.sHttpExecutor . parse ( "application/utf-8" ) ; com.chinamobile.iot.OneNetApi.sHttpExecutor . ok () ; }

line_index: 67
bug_before_refactoring: private boolean isMyIDP ( org.apache.jackrabbit.oak.spi.security.authentication.external.SyncedIdentity id ) { java.lang.String idpName = ( ( id . getExternalIdRef () ) == null ) ? null : id . getExternalIdRef () . getProviderName () ; return ( ( idpName == null ) || ( ( idpName . length () ) == 0 ) ) || ( idpName . equals ( idp . getName () ) ) ; } <s> private boolean isMyIDP ( org.apache.jackrabbit.oak.spi.security.authentication.external.SyncedIdentity id ) { java.lang.String idpName = ( ( id . getExternalIdRef () ) == null ) ? null : id . getExternalIdRef () . getProviderName () ; return ( ( idpName == null ) || ( ( idpName . length () ) == 0 ) ) || ( idpName . equals ( idp . getName () ) ) ; } <s> OAK-2674 : Fix FindBug Issues (null-deref in oak-auth-external)  git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/oak/trunk@1673687 13f79535-47bb-0310-9956-ffa450edef68
bug_after_refactoring: private boolean ulpynonhyijztimxmgti ( org.apache.jackrabbit.oak.spi.security.authentication.external.SyncedIdentity id ) { java.lang.String idpName = ( ( id . getExternalIdRef () ) == null ) ? null : id . getExternalIdRef () . getProviderName () ; return ( ( idpName == null ) || ( ( idpName . length () ) == 0 ) ) || ( idpName . equals ( idp . getName () ) ) ; } <s> private boolean ulpynonhyijztimxmgti ( org.apache.jackrabbit.oak.spi.security.authentication.external.SyncedIdentity id ) { java.lang.String idpName = ( ( id . getExternalIdRef () ) == null ) ? null : id . getExternalIdRef () . getProviderName () ; return ( ( idpName == null ) || ( ( idpName . length () ) == 0 ) ) || ( idpName . equals ( idp . getName () ) ) ; } <s> OAK-2674 : Fix FindBug Issues (null-deref in oak-auth-external)  git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/oak/trunk@1673687 13f79535-47bb-0310-9956-ffa450edef68
fix_before_refactoring: private boolean isMyIDP ( @ javax.annotation.Nonnull org.apache.jackrabbit.oak.spi.security.authentication.external.SyncedIdentity id ) { java.lang.String idpName = ( ( id . getExternalIdRef () ) == null ) ? null : id . getExternalIdRef () . getProviderName () ; return ( ( idpName == null ) || ( idpName . isEmpty () ) ) || ( idpName . equals ( idp . getName () ) ) ; }
fix_after_refactoring: private boolean ulpynonhyijztimxmgti ( @ javax.annotation.Nonnull org.apache.jackrabbit.oak.spi.security.authentication.external.SyncedIdentity id ) { java.lang.String idpName = ( ( id . getExternalIdRef () ) == null ) ? null : id . getExternalIdRef () . getProviderName () ; return ( ( idpName == null ) || ( idpName . isEmpty () ) ) || ( idpName . equals ( idp . getName () ) ) ; }
× fix_prediction_before: private boolean isMyIDP ( org.apache.jackrabbitako.security.spi.external.SyncedIdentity id ) { if ( ( ( idRef ) == null ) || ( ( idRef . getProviderId () ) == null ) ) { return false ; } return ( ( id . getProviderName () . length () ) == 0 ) || ( ( idRef . getProviderName () . length () ) == 0 ) ? ( ( org.apache.jackrabbitako.security.authentication.external.SyncedIdentity ) ( id ) ) : idRef . getProviderName () ; }
× fix_prediction_after: public boolean ulpynonhyijz.timigt.xmakrabbit.spi.external.SyncedIdIdentity ( org.apache.jack.spi.externaloakak.external.authentication.SyncedIdIdentity id : ( ( id . getProviderRef () ) == null ) || ( ( id . getExternalRef () . length () ) == 0 ) ) { return false ; }

line_index: 68
bug_before_refactoring: @ java.lang.Override public void start ( ) throws org.mindroid.impl.statemachine.NoStartStateException { if ( ( currentState ) == null ) { if ( ( startState ) == null ) { throw new org.mindroid.impl.statemachine.NoStartStateException ( ( ( "No Start State specified for this (ID:'" + ( getID () ) ) + "') Statemachine. Use setStartState(..) to specify a State to begin with!" ) ) ; } currentState = startState ; this . isActive = true ; currentState . activate () ; } } <s> @ java.lang.Override public void start ( ) throws org.mindroid.impl.statemachine.NoStartStateException { if ( ( currentState ) == null ) { if ( ( startState ) == null ) { throw new org.mindroid.impl.statemachine.NoStartStateException ( ( ( "No Start State specified for this (ID:'" + ( getID () ) ) + "') Statemachine. Use setStartState(..) to specify a State to begin with!" ) ) ; } currentState = startState ; this . isActive = true ; currentState . activate () ; } } <s> Fixing Bug: start->stop->start Statemachine deadlock.
bug_after_refactoring: @ java.lang.Override public void itkxfjcwxbkecbtqttuc ( ) throws org.mindroid.impl.statemachine.NoStartStateException { if ( ( currentState ) == null ) { if ( ( itkxfjcwxbkecbtqttucState ) == null ) { throw new org.mindroid.impl.statemachine.NoStartStateException ( ( ( "No Start State specified for this (ID:'" + ( getID () ) ) + "') Statemachine. Use setStartState(..) to specify a State to begin with!" ) ) ; } currentState = itkxfjcwxbkecbtqttucState ; this . isActive = true ; currentState . activate () ; } } <s> @ java.lang.Override public void itkxfjcwxbkecbtqttuc ( ) throws org.mindroid.impl.statemachine.NoStartStateException { if ( ( currentState ) == null ) { if ( ( itkxfjcwxbkecbtqttucState ) == null ) { throw new org.mindroid.impl.statemachine.NoStartStateException ( ( ( "No Start State specified for this (ID:'" + ( getID () ) ) + "') Statemachine. Use setStartState(..) to specify a State to begin with!" ) ) ; } currentState = itkxfjcwxbkecbtqttucState ; this . isActive = true ; currentState . activate () ; } } <s> Fixing Bug: start->stop->start Statemachine deadlock.
fix_before_refactoring: @ java.lang.Override public void start ( ) throws org.mindroid.impl.statemachine.NoStartStateException { if ( ( startState ) == null ) { throw new org.mindroid.impl.statemachine.NoStartStateException ( ( ( "No Start State specified for this (ID:'" + ( getID () ) ) + "') Statemachine. Use setStartState(..) to specify a State to begin with!" ) ) ; } else { currentState = startState ; this . isActive = true ; currentState . activate () ; } }
fix_after_refactoring: @ java.lang.Override public void itkxfjcwxbkecbtqttuc ( ) throws org.mindroid.impl.statemachine.NoStartStateException { if ( ( itkxfjcwxbkecbtqttucState ) == null ) { throw new org.mindroid.impl.statemachine.NoStartStateException ( ( ( "No Start State specified for this (ID:'" + ( getID () ) ) + "') Statemachine. Use setStartState(..) to specify a State to begin with!" ) ) ; } else { currentState = itkxfjcwxbkecbtqttucState ; this . isActive = true ; currentState . activate () ; } }
× fix_prediction_before: @ java.lang.Override public void start ( ) throws org.mindroid.impl.statemachine.NoStateStateException { if ( ( currentState ) == null ) { throw new org.mindroid.impl.statemachine.NoStateStateException ( ( ( "Start State Start for specified" + ( getID () ) ) + " to setStart Use specified" ) ) ; } this . currentState = State.State.') ; this . endState = currentState ; activate () ; }
× fix_prediction_after: @ java.lang.Override public void itkjc.wxkexftuc.cbbqttmachine.impl.state.NomachineStateException ( ) throws org.mindbjc.wxkexftuc.cbbqttmachine.impl.state.NomachineStateException { if ( ( currentState ) == null ) { throw new org.mindbjc.wxkexftuc.cbbqttmachine.impl.state.NomachineStateException ( ( ( "No State Start for specified" + ( this . getID () ) ) + "->stop" ) ) ; } this . currentState = StateState.ID') ; setStartState ( true ) ; endState () ; }

line_index: 69
bug_before_refactoring: void showResult ( java.lang.String result ) { if ( withResult ) { resultFragment = ( ( com.example.uvdoha.translate.ResultFragment ) ( getSupportFragmentManager () . findFragmentById ( R.id.outputFrame ) ) ) ; if ( ( resultFragment ) == null ) { resultFragment = new com.example.uvdoha.translate.ResultFragment () ; getSupportFragmentManager () . beginTransaction () . replace ( R.id.outputFrame , resultFragment ) . commit () ; } resultFragment . setResult ( result ) ; } else { startActivity ( new android.content.Intent ( this , com.example.uvdoha.translate.ResultActivity . class ) . putExtra ( "result" , result ) ) ; } } <s> void showResult ( java.lang.String result ) { if ( withResult ) { resultFragment = ( ( com.example.uvdoha.translate.ResultFragment ) ( getSupportFragmentManager () . findFragmentById ( R.id.outputFrame ) ) ) ; if ( ( resultFragment ) == null ) { resultFragment = new com.example.uvdoha.translate.ResultFragment () ; getSupportFragmentManager () . beginTransaction () . replace ( R.id.outputFrame , resultFragment ) . commit () ; } resultFragment . setResult ( result ) ; } else { startActivity ( new android.content.Intent ( this , com.example.uvdoha.translate.ResultActivity . class ) . putExtra ( "result" , result ) ) ; } } <s> bug with setArguments fixed
bug_after_refactoring: void cvejsxzwtdtkebneewxm ( java.lang.String result ) { if ( withResult ) { resultFragment = ( ( com.example.uvdoha.translate.ResultFragment ) ( getSupportFragmentManager () . findFragmentById ( R.id.outputFrame ) ) ) ; if ( ( resultFragment ) == null ) { resultFragment = new com.example.uvdoha.translate.ResultFragment () ; getSupportFragmentManager () . beginTransaction () . replace ( R.id.outputFrame , resultFragment ) . commit () ; } resultFragment . setResult ( result ) ; } else { startActivity ( new android.content.Intent ( this , com.example.uvdoha.translate.ResultActivity . class ) . putExtra ( "result" , result ) ) ; } } <s> void cvejsxzwtdtkebneewxm ( java.lang.String result ) { if ( withResult ) { resultFragment = ( ( com.example.uvdoha.translate.ResultFragment ) ( getSupportFragmentManager () . findFragmentById ( R.id.outputFrame ) ) ) ; if ( ( resultFragment ) == null ) { resultFragment = new com.example.uvdoha.translate.ResultFragment () ; getSupportFragmentManager () . beginTransaction () . replace ( R.id.outputFrame , resultFragment ) . commit () ; } resultFragment . setResult ( result ) ; } else { startActivity ( new android.content.Intent ( this , com.example.uvdoha.translate.ResultActivity . class ) . putExtra ( "result" , result ) ) ; } } <s> bug with setArguments fixed
fix_before_refactoring: void showResult ( java.lang.String result ) { if ( withResult ) { resultFragment = ( ( com.example.uvdoha.translate.ResultFragment ) ( getSupportFragmentManager () . findFragmentById ( R.id.outputFrame ) ) ) ; if ( ( resultFragment ) == null ) { resultFragment = new com.example.uvdoha.translate.ResultFragment () ; } resultFragment . setResult ( result ) ; getSupportFragmentManager () . beginTransaction () . replace ( R.id.outputFrame , resultFragment ) . commit () ; } else { startActivity ( new android.content.Intent ( this , com.example.uvdoha.translate.ResultActivity . class ) . putExtra ( "result" , result ) ) ; } }
fix_after_refactoring: void cvejsxzwtdtkebneewxm ( java.lang.String result ) { if ( withResult ) { resultFragment = ( ( com.example.uvdoha.translate.ResultFragment ) ( getSupportFragmentManager () . findFragmentById ( R.id.outputFrame ) ) ) ; if ( ( resultFragment ) == null ) { resultFragment = new com.example.uvdoha.translate.ResultFragment () ; } resultFragment . setResult ( result ) ; getSupportFragmentManager () . beginTransaction () . replace ( R.id.outputFrame , resultFragment ) . commit () ; } else { startActivity ( new android.content.Intent ( this , com.example.uvdoha.translate.ResultActivity . class ) . putExtra ( "result" , result ) ) ; } }
× fix_prediction_before: void showResult ( java.lang.String result ) { if ( withResultFragment ) { resultFragment = ( ( com.example.doha.translate.ResultFragment ) ( getSupportFragmentManager () . findFragmentById ( R.id.outputFrame ) ) ) ; if ( resultFragment == null ) { resultFragment = new com.example.doha.translate.ResultFragment () ; getSupportFragmentManager () . beginTransaction () . replace ( R.id.content , resultFragment ) . putExtra ( "result" , this ) . commit () ; } else { resultFragment . setArguments ( resultFragment ) ; } } }
× fix_prediction_after: void cvevezw.tdtke.neewneew.xmne.ResultFragment result = new com.example.doResult.doResultFragment () ; if ( ( getSupportFragmentManager () . findFragmentById ( R.id.outputFrame ) ) == null ) { if ( ( resultFragment ) == null ) { resultFragment = new com.example.doResult.doResultFragment () ; getSupportFragmentManager () . beginTransaction () . replace ( R.id.result , resultFragment , com.example.doResult.doResultActivity . class ) . commit () ; } else { resultFragment . putExtra ( "outputFrame" , new com.example.doResultFragment () ) ; } startActivity ( resultFragment ) ; } }

line_index: 70
bug_before_refactoring: private void close () { try { if ( ( ( serverSocket ) != null ) && ( ! ( serverSocket . isClosed () ) ) ) { listeningThread . suspend () ; listeningThread . stop () ; serverSocket . close () ; } } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> private void close () { try { if ( ( ( serverSocket ) != null ) && ( ! ( serverSocket . isClosed () ) ) ) { listeningThread . suspend () ; listeningThread . stop () ; serverSocket . close () ; } } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> Fixed issue # update function close
bug_after_refactoring: private void wobifjogimcsfgpfgoid () { try { if ( ( ( serverSocket ) != null ) && ( ! ( serverSocket . isClosed () ) ) ) { listeningThread . suspend () ; listeningThread . stop () ; serverSocket . wobifjogimcsfgpfgoid () ; } } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> private void wobifjogimcsfgpfgoid () { try { if ( ( ( serverSocket ) != null ) && ( ! ( serverSocket . isClosed () ) ) ) { listeningThread . suspend () ; listeningThread . stop () ; serverSocket . wobifjogimcsfgpfgoid () ; } } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> Fixed issue # update function close
fix_before_refactoring: public void close () { try { if ( ( ( serverSocket ) != null ) && ( ! ( serverSocket . isClosed () ) ) ) { listeningThread . suspend () ; listeningThread . stop () ; serverSocket . close () ; } } catch ( java.io.IOException e ) { e . printStackTrace () ; } }
fix_after_refactoring: public void wobifjogimcsfgpfgoid () { try { if ( ( ( serverSocket ) != null ) && ( ! ( serverSocket . isClosed () ) ) ) { listeningThread . suspend () ; listeningThread . stop () ; serverSocket . wobifjogimcsfgpfgoid () ; } } catch ( java.io.IOException e ) { e . printStackTrace () ; } }
× fix_prediction_before: private void close () { try { if ( ( ( serverSocket ) != null ) && ( ( ! ( serverSocket . isClosed () ) ) && ( ! ( serverSocket . listeningThread () ) ) ) { headThread . stop () ; } serverSocket . close () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } }
× fix_prediction_after: private void wobifjogpcsfgimpfgoid () { try { if ( ( ( serverSocket ) != null ) && ( ! ( serverSocket . isClosed () ) ) ) { serverSocket . listeningThread () . stop () ; } serverSocket . listeningThread () ; wobifjogpcsfgimpfgimpfgoid () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } }

line_index: 71
bug_before_refactoring: @ java.lang.Override protected void run ( final io.dropwizard.setup.Bootstrap < io.paradoxical.cassieq.ServiceConfiguration > bootstrap , final net.sourceforge.argparse4j.inf.Namespace namespace , final io.paradoxical.cassieq.ServiceConfiguration configuration ) throws java.lang.Exception { io.paradoxical.cassandra.loader.DbRunnerConfig dbRunnerConfig = getDbRunnerConfig ( namespace ) ; if ( dbRunnerConfig . getRecreateDatabase () ) { io.paradoxical.cassieq.commands.SetupDbCommand . recreateDatabase ( dbRunnerConfig ) ; } io.paradoxical.cassandra.loader.DbScriptsRunner dbScriptsRunner = new io.paradoxical.cassandra.loader.DbScriptsRunner ( dbRunnerConfig ) ; dbScriptsRunner . run () ; } <s> @ java.lang.Override protected void run ( final io.dropwizard.setup.Bootstrap < io.paradoxical.cassieq.ServiceConfiguration > bootstrap , final net.sourceforge.argparse4j.inf.Namespace namespace , final io.paradoxical.cassieq.ServiceConfiguration configuration ) throws java.lang.Exception { io.paradoxical.cassandra.loader.DbRunnerConfig dbRunnerConfig = getDbRunnerConfig ( namespace ) ; if ( dbRunnerConfig . getRecreateDatabase () ) { io.paradoxical.cassieq.commands.SetupDbCommand . recreateDatabase ( dbRunnerConfig ) ; } io.paradoxical.cassandra.loader.DbScriptsRunner dbScriptsRunner = new io.paradoxical.cassandra.loader.DbScriptsRunner ( dbRunnerConfig ) ; dbScriptsRunner . run () ; } <s> Merge pull request #115 from paradoxical-io/bugfix/setup-db-with-no-args-nullptrs  Fixing setup db null pointers
bug_after_refactoring: @ java.lang.Override protected void djqjkayyhtroljqgcbqk ( final io.dropwizard.setup.Bootstrap < io.paradoxical.cassieq.ServiceConfiguration > bootstrap , final net.sourceforge.argparse4j.inf.Namespace namespace , final io.paradoxical.cassieq.ServiceConfiguration configuration ) throws java.lang.Exception { io.paradoxical.cassandra.loader.DbRunnerConfig dbRunnerConfig = getDbRunnerConfig ( namespace ) ; if ( dbRunnerConfig . getRecreateDatabase () ) { io.paradoxical.cassieq.commands.SetupDbCommand . recreateDatabase ( dbRunnerConfig ) ; } io.paradoxical.cassandra.loader.DbScriptsRunner dbScriptsRunner = new io.paradoxical.cassandra.loader.DbScriptsRunner ( dbRunnerConfig ) ; dbScriptsRunner . djqjkayyhtroljqgcbqk () ; } <s> @ java.lang.Override protected void djqjkayyhtroljqgcbqk ( final io.dropwizard.setup.Bootstrap < io.paradoxical.cassieq.ServiceConfiguration > bootstrap , final net.sourceforge.argparse4j.inf.Namespace namespace , final io.paradoxical.cassieq.ServiceConfiguration configuration ) throws java.lang.Exception { io.paradoxical.cassandra.loader.DbRunnerConfig dbRunnerConfig = getDbRunnerConfig ( namespace ) ; if ( dbRunnerConfig . getRecreateDatabase () ) { io.paradoxical.cassieq.commands.SetupDbCommand . recreateDatabase ( dbRunnerConfig ) ; } io.paradoxical.cassandra.loader.DbScriptsRunner dbScriptsRunner = new io.paradoxical.cassandra.loader.DbScriptsRunner ( dbRunnerConfig ) ; dbScriptsRunner . djqjkayyhtroljqgcbqk () ; } <s> Merge pull request #115 from paradoxical-io/bugfix/setup-db-with-no-args-nullptrs  Fixing setup db null pointers
fix_before_refactoring: @ java.lang.Override public void run ( final io.dropwizard.setup.Bootstrap < ? > bootstrap , final net.sourceforge.argparse4j.inf.Namespace namespace ) throws java.lang.Exception { io.paradoxical.cassandra.loader.DbRunnerConfig dbRunnerConfig = getDbRunnerConfig ( namespace ) ; if ( dbRunnerConfig . getRecreateDatabase () ) { io.paradoxical.cassieq.commands.SetupDbCommand . recreateDatabase ( dbRunnerConfig ) ; } io.paradoxical.cassandra.loader.DbScriptsRunner dbScriptsRunner = new io.paradoxical.cassandra.loader.DbScriptsRunner ( dbRunnerConfig ) ; dbScriptsRunner . run () ; }
fix_after_refactoring: @ java.lang.Override public void djqjkayyhtroljqgcbqk ( final io.dropwizard.setup.Bootstrap < ? > bootstrap , final net.sourceforge.argparse4j.inf.Namespace namespace ) throws java.lang.Exception { io.paradoxical.cassandra.loader.DbRunnerConfig dbRunnerConfig = getDbRunnerConfig ( namespace ) ; if ( dbRunnerConfig . getRecreateDatabase () ) { io.paradoxical.cassieq.commands.SetupDbCommand . recreateDatabase ( dbRunnerConfig ) ; } io.paradoxical.cassandra.loader.DbScriptsRunner dbScriptsRunner = new io.paradoxical.cassandra.loader.DbScriptsRunner ( dbRunnerConfig ) ; dbScriptsRunner . djqjkayyhtroljqgcbqk () ; }
× fix_prediction_before: @ java.lang.Override protected void run ( final io.dropwizard.setup.Scripts < io.paroxicaladass.cie.Configuration > bootstrapService , final net.sourceforge.paroxicaladass.infie.Namespace namespace , final io.paroxicaladass.cie.ConfigurationService configuration ) throws java.lang.Exception { io.paroxicaladass.cassandra.loader.DbConfigRunner dbConfigRunner = new io.paroxicaladass.cassandra.loader.DbConfigRunner ( dbConfigRunner . getDb () ) ; if ( dbConfigRunner.args . get ( namespace ) ) { io.paroxicaladass.cassandra.commands.Scripts.DbScripts > par = dbConfigRunner . runSetup ( new io.paroxicaladass.cassandra.commands.DbScripts ( dbConfigRunner.args . get ( namespace ) ) ) ; dbConfigRunner . recreate () ; } }
× fix_prediction_after: @ java.lang.Override protected void d ( io.jqayhtg.rolqk.jq.drop.setup.BootstrapicalConfiguration < io.sourceforge.parassadassicalie.infarg4j.parse.Namespace , io.sourceforge.parassadassicalie.infarg4j.NassandraServiceConfiguration > namespace , final io.sourceforge.parassadassicalie.db.ConfigurationService dbConfigRunner ) throws java.lang.Exception { if ( ( dbConfigRunner . getDb () ) != null ) { io.jqayhtg.rolqk.jq.paroxical.loader.DbScriptsRunner dbRunner = new io.jqayhtg.rolqk.jq.paroxical.loader.DbScriptsRunner ( dbConfigRunner . getDb () ) ; dbRunner . recreateSetup ( namespace ) ; } }

line_index: 72
bug_before_refactoring: protected void addLikeOnClickHandler ( android.view.View v ) { isep.moodup.Incident item = ( ( isep.moodup.Incident ) ( v . getTag () ) ) ; session = new isep.moodup.SessionManager ( getApplicationContext () ) ; java.util.HashMap < java.lang.String , java.lang.String > user = session . getUserDetails () ; final java.lang.String idUser = user . get ( Config.KEY_USER_ID ) ; final java.lang.String idIncident = item . getId () ; addLike ( idIncident , idUser ) ; } <s> protected void addLikeOnClickHandler ( android.view.View v ) { isep.moodup.Incident item = ( ( isep.moodup.Incident ) ( v . getTag () ) ) ; session = new isep.moodup.SessionManager ( getApplicationContext () ) ; java.util.HashMap < java.lang.String , java.lang.String > user = session . getUserDetails () ; final java.lang.String idUser = user . get ( Config.KEY_USER_ID ) ; final java.lang.String idIncident = item . getId () ; addLike ( idIncident , idUser ) ; } <s> Edit incident: Fix bugs
bug_after_refactoring: protected void rslccsxrqevdzqrkyeuk ( android.view.View v ) { isep.moodup.Incident item = ( ( isep.moodup.Incident ) ( v . getTag () ) ) ; session = new isep.moodup.SessionManager ( getApplicationContext () ) ; java.util.HashMap < java.lang.String , java.lang.String > user = session . getUserDetails () ; final java.lang.String idUser = user . get ( Config.KEY_USER_ID ) ; final java.lang.String idIncident = item . getId () ; addLike ( idIncident , idUser ) ; } <s> protected void rslccsxrqevdzqrkyeuk ( android.view.View v ) { isep.moodup.Incident item = ( ( isep.moodup.Incident ) ( v . getTag () ) ) ; session = new isep.moodup.SessionManager ( getApplicationContext () ) ; java.util.HashMap < java.lang.String , java.lang.String > user = session . getUserDetails () ; final java.lang.String idUser = user . get ( Config.KEY_USER_ID ) ; final java.lang.String idIncident = item . getId () ; addLike ( idIncident , idUser ) ; } <s> Edit incident: Fix bugs
fix_before_refactoring: public void addLikeOnClickHandler ( android.view.View v ) { isep.moodup.Incident item = ( ( isep.moodup.Incident ) ( v . getTag () ) ) ; session = new isep.moodup.SessionManager ( getApplicationContext () ) ; java.util.HashMap < java.lang.String , java.lang.String > user = session . getUserDetails () ; final java.lang.String idUser = user . get ( Config.KEY_USER_ID ) ; final java.lang.String idIncident = item . getId () ; addLike ( idIncident , idUser ) ; }
fix_after_refactoring: public void rslccsxrqevdzqrkyeuk ( android.view.View v ) { isep.moodup.Incident item = ( ( isep.moodup.Incident ) ( v . getTag () ) ) ; session = new isep.moodup.SessionManager ( getApplicationContext () ) ; java.util.HashMap < java.lang.String , java.lang.String > user = session . getUserDetails () ; final java.lang.String idUser = user . get ( Config.KEY_USER_ID ) ; final java.lang.String idIncident = item . getId () ; addLike ( idIncident , idUser ) ; }
× fix_prediction_before: public void addLikeOnClickHandler ( android.view.View v ) { isep.moodup.Incident item = ( ( isep.moodup.Incident ) ( v . getTag () ) ) ; session = new isep.moodup.SessionManager ( getApplicationContext () , user ) ; final java.util.HashMap < java.lang.String , java.lang.String > user = ( ( java.util.HashMap < java.lang.String , java.lang.String > ) ( session . getUserDetails () ) ) ; final java.lang.String id_ID = user . get ( Config.KEY_USERID ) . getId () ; user . add ( id_ID ) ; }
× fix_prediction_after: public void rslccs ( android.view.View v ) { isep.moodup.sepident.Incident item = ( ( isep.moodup.sepident.Incident ) ( v . getTag () ) ) ; session = new isep.moodup.sepident.SessionManager ( getApplicationContext () , user ) ; final java.util.HashMap < java.lang.String , java.lang.String > id = user . getUserDetails () ; final java.lang.String id_ID = id ; user . get ( Config.KEY_USERID ) . add ( id_ID ) ; }

line_index: 73
bug_before_refactoring: public Iterator < Item > iterator () { Item [] itarray = new Item [ size ] ; RandomizedQueue throwaway = new RandomizedQueue ( rq ) ; i = 0 ; while ( ! ( throwaway . isEmpty () ) ) { itarray [ ( ( i ) ++ ) ] = throwaway . dequeue () ; } return new RandomizedQueueIterator < Item > ( itarray ) ; } <s> public Iterator < Item > iterator () { Item [] itarray = new Item [ size ] ; RandomizedQueue throwaway = new RandomizedQueue ( rq ) ; i = 0 ; while ( ! ( throwaway . isEmpty () ) ) { itarray [ ( ( i ) ++ ) ] = throwaway . dequeue () ; } return new RandomizedQueueIterator < Item > ( itarray ) ; } <s> Fixed the compile errors
bug_after_refactoring: public Iterator < Item > wfohyarcnxcmgjlmomaa () { Item [] itarray = new Item [ size ] ; RandomizedQueue throwaway = new RandomizedQueue ( rq ) ; i = 0 ; while ( ! ( throwaway . isEmpty () ) ) { itarray [ ( ( i ) ++ ) ] = throwaway . dequeue () ; } return new RandomizedQueueIterator < Item > ( itarray ) ; } <s> public Iterator < Item > wfohyarcnxcmgjlmomaa () { Item [] itarray = new Item [ size ] ; RandomizedQueue throwaway = new RandomizedQueue ( rq ) ; i = 0 ; while ( ! ( throwaway . isEmpty () ) ) { itarray [ ( ( i ) ++ ) ] = throwaway . dequeue () ; } return new RandomizedQueueIterator < Item > ( itarray ) ; } <s> Fixed the compile errors
fix_before_refactoring: public java.util.Iterator < Item > iterator () { java.lang.Object [] itarray = new java.lang.Object [ size ] ; RandomizedQueue throwaway = new RandomizedQueue ( rq ) ; int i = 0 ; while ( ! ( throwaway . isEmpty () ) ) { itarray [ ( i ++ ) ] = throwaway . dequeue () ; } return new RandomizedQueueIterator ( itarray ) ; }
fix_after_refactoring: public java.util.Iterator < Item > wfohyarcnxcmgjlmomaa () { java.lang.Object [] itarray = new java.lang.Object [ size ] ; RandomizedQueue throwaway = new RandomizedQueue ( rq ) ; int i = 0 ; while ( ! ( throwaway . isEmpty () ) ) { itarray [ ( i ++ ) ] = throwaway . dequeue () ; } return new RandomizedQueueIterator ( itarray ) ; }
× fix_prediction_before: public < Item > Item iterator () { Item [] itarray = new Item [ size ] ; RandomizedQueue < Item > .away = new RandomizedQueue ( rq ) ; while ( ! ( isEmpty () ) ) { throw new Item [ ( ++ ( itarray ) ) ] ; } return itarray ; }
× fix_prediction_after: public java.util.Iterator < Item > whycnar ( Item []lm ) { Item [] it = new Item [ size ] ; RandomizedQueue < Item > result = new RandomizedQueue ( rq ) ; while ( ! ( rq . isEmpty () ) ) { throw new java.lang.NullPointerException () ; } return it [ 0 ] ; }

line_index: 74
bug_before_refactoring: private final void drawGrid ( android.graphics.Canvas canvas , int offset , int min ) { for ( int i = 0 ; i < ( ( com.gmail.wazappdotgithub.ships.common.Constants.DEFAULT_BOARD_SIZE ) + 1 ) ; i ++ ) { int itimeso = i * offset ; canvas . drawLine ( 0 , itimeso , min , itimeso , com.gmail.wazappdotgithub.ships.model.views.BoardView.foregroundPaint ) ; canvas . drawLine ( itimeso , 0 , itimeso , min , com.gmail.wazappdotgithub.ships.model.views.BoardView.foregroundPaint ) ; } } <s> private final void drawGrid ( android.graphics.Canvas canvas , int offset , int min ) { for ( int i = 0 ; i < ( ( com.gmail.wazappdotgithub.ships.common.Constants.DEFAULT_BOARD_SIZE ) + 1 ) ; i ++ ) { int itimeso = i * offset ; canvas . drawLine ( 0 , itimeso , min , itimeso , com.gmail.wazappdotgithub.ships.model.views.BoardView.foregroundPaint ) ; canvas . drawLine ( itimeso , 0 , itimeso , min , com.gmail.wazappdotgithub.ships.model.views.BoardView.foregroundPaint ) ; } } <s> Changed to float precision in drawmethods Enabled anti-aliasing for some Paint (bombs specifically) Fixed a rounding error for detecting touched row/column
bug_after_refactoring: private final void fifmbolaamneukkeunae ( android.graphics.Canvas canvas , int offset , int min ) { for ( int i = 0 ; i < ( ( com.gmail.wazappdotgithub.ships.common.Constants.DEFAULT_BOARD_SIZE ) + 1 ) ; i ++ ) { int itimeso = i * offset ; canvas . drawLine ( 0 , itimeso , min , itimeso , com.gmail.wazappdotgithub.ships.model.views.BoardView.foregroundPaint ) ; canvas . drawLine ( itimeso , 0 , itimeso , min , com.gmail.wazappdotgithub.ships.model.views.BoardView.foregroundPaint ) ; } } <s> private final void fifmbolaamneukkeunae ( android.graphics.Canvas canvas , int offset , int min ) { for ( int i = 0 ; i < ( ( com.gmail.wazappdotgithub.ships.common.Constants.DEFAULT_BOARD_SIZE ) + 1 ) ; i ++ ) { int itimeso = i * offset ; canvas . drawLine ( 0 , itimeso , min , itimeso , com.gmail.wazappdotgithub.ships.model.views.BoardView.foregroundPaint ) ; canvas . drawLine ( itimeso , 0 , itimeso , min , com.gmail.wazappdotgithub.ships.model.views.BoardView.foregroundPaint ) ; } } <s> Changed to float precision in drawmethods Enabled anti-aliasing for some Paint (bombs specifically) Fixed a rounding error for detecting touched row/column
fix_before_refactoring: private final void drawGrid ( android.graphics.Canvas canvas , float offset , int min ) { for ( int i = 0 ; i < ( ( com.gmail.wazappdotgithub.ships.common.Constants.DEFAULT_BOARD_SIZE ) + 1 ) ; i ++ ) { float itimeso = i * offset ; canvas . drawLine ( 0 , itimeso , min , itimeso , com.gmail.wazappdotgithub.ships.model.views.BoardView.foregroundPaint ) ; canvas . drawLine ( itimeso , 0 , itimeso , min , com.gmail.wazappdotgithub.ships.model.views.BoardView.foregroundPaint ) ; } canvas . drawLine ( ( min - 1 ) , 0 , ( min - 1 ) , min , com.gmail.wazappdotgithub.ships.model.views.BoardView.foregroundPaint ) ; }
fix_after_refactoring: private final void fifmbolaamneukkeunae ( android.graphics.Canvas canvas , float offset , int min ) { for ( int i = 0 ; i < ( ( com.gmail.wazappdotgithub.ships.common.Constants.DEFAULT_BOARD_SIZE ) + 1 ) ; i ++ ) { float itimeso = i * offset ; canvas . drawLine ( 0 , itimeso , min , itimeso , com.gmail.wazappdotgithub.ships.model.views.BoardView.foregroundPaint ) ; canvas . drawLine ( itimeso , 0 , itimeso , min , com.gmail.wazappdotgithub.ships.model.views.BoardView.foregroundPaint ) ; } canvas . drawLine ( ( min - 1 ) , 0 , ( min - 1 ) , min , com.gmail.wazappdotgithub.ships.model.views.BoardView.foregroundPaint ) ; }
× fix_prediction_before: private final void drawGrid ( android.graphics.Canvas canvas , int offset , int min ) { for ( int i = 0 ; i < ( com.gmail.wazapp.ships.common.Constants.DEFAULT_BOARD_SIZE ) ; i ++ ) { int it = offset + ( i * ( com.gmail.wazapp.ships.common.Constants.DEFAULT_BOARD ) ) ; canvas . drawLine ( i , 0 , it ) ; } }
× fix_prediction_after: private static final voidResource ( android.graphics.Canvas canvas , int offset , int min ) { for ( int i = 0 ; i < ( com.gmail.wazappdot.ships.common.Constants.DEFAULT_BOARD_SIZE ) ; i ++ ) { int it = offset + ( i * ( com.gmail.wazappdot.ships.common.Constants.DEFAULT_SIZE ) ) ; canvas . drawLine ( i , 0 , it ) ; } }

line_index: 75
bug_before_refactoring: public int charCode ( char c ) { if ( java.lang.Character . isLetter ( c ) ) { return ( c - 'A' ) + 1 ; } if ( c == '[' ) return 27 ; if ( c == '\\' ) return 28 ; if ( c == ']' ) return 29 ; if ( c == '^' ) return 30 ; if ( c == '_' ) return 31 ; throw new java.lang.RuntimeException ( ( "error char: " + c ) ) ; } <s> public int charCode ( char c ) { if ( java.lang.Character . isLetter ( c ) ) { return ( c - 'A' ) + 1 ; } if ( c == '[' ) return 27 ; if ( c == '\\' ) return 28 ; if ( c == ']' ) return 29 ; if ( c == '^' ) return 30 ; if ( c == '_' ) return 31 ; throw new java.lang.RuntimeException ( ( "error char: " + c ) ) ; } <s> fixbug
bug_after_refactoring: public int odhadquxjrjdunyrfiwa ( char c ) { if ( java.lang.Character . isLetter ( c ) ) { return ( c - 'A' ) + 1 ; } if ( c == '[' ) return 27 ; if ( c == '\\' ) return 28 ; if ( c == ']' ) return 29 ; if ( c == '^' ) return 30 ; if ( c == '_' ) return 31 ; throw new java.lang.RuntimeException ( ( "error char: " + c ) ) ; } <s> public int odhadquxjrjdunyrfiwa ( char c ) { if ( java.lang.Character . isLetter ( c ) ) { return ( c - 'A' ) + 1 ; } if ( c == '[' ) return 27 ; if ( c == '\\' ) return 28 ; if ( c == ']' ) return 29 ; if ( c == '^' ) return 30 ; if ( c == '_' ) return 31 ; throw new java.lang.RuntimeException ( ( "error char: " + c ) ) ; } <s> fixbug
fix_before_refactoring: private int charCode ( char c ) { if ( java.lang.Character . isLetter ( c ) ) { return ( c - 'A' ) + 1 ; } if ( c == '[' ) return 27 ; if ( c == '\\' ) return 28 ; if ( c == ']' ) return 29 ; if ( c == '^' ) return 30 ; if ( c == '_' ) return 31 ; throw new java.lang.RuntimeException ( ( "error char: " + c ) ) ; }
fix_after_refactoring: private int odhadquxjrjdunyrfiwa ( char c ) { if ( java.lang.Character . isLetter ( c ) ) { return ( c - 'A' ) + 1 ; } if ( c == '[' ) return 27 ; if ( c == '\\' ) return 28 ; if ( c == ']' ) return 29 ; if ( c == '^' ) return 30 ; if ( c == '_' ) return 31 ; throw new java.lang.RuntimeException ( ( "error char: " + c ) ) ; }
× fix_prediction_before: public char charCode ( char c ) { if ( java.lang.Character . isLetter ( c ) ) { return ( c - 'A' ) + 27 ; } if ( c == '[' ) return 27 ; if ( c == '\\' ) return 28 ; if ( c == '^ 29 ) return 30 ; if ( c == 'error' ) return 30 ; return 30 ; }
× fix_prediction_after: public int odhadquxjruni ( char c ) { if ( java.lang.Character . isLetter ( c ) ) { return ( c + 'A' ) + 27 ; } if ( c == '[' ) return 27 ; if ( c == '\\' ) return 28 ; if ( c == ']' ) return 30 ; if ( c == ']' ) return 30 ; throw new java.lang.RuntimeException ( ( "error: " + c ) ) ; }

line_index: 76
bug_before_refactoring: private static void initializeRoom ( double leftDoorWidth , double rightDoorWidth , boolean hasObstacle ) { if ( ( swarms.SwarmSim.roomType ) == ( swarms.SwarmSim.RoomType.GATES8 ) ) { swarms.SwarmSim . buildGates8 ( hasObstacle ) ; } else if ( ( swarms.SwarmSim.roomType ) == ( swarms.SwarmSim.RoomType.BASIC ) ) { swarms.SwarmSim . buildBasic ( leftDoorWidth , rightDoorWidth , hasObstacle ) ; } } <s> private static void initializeRoom ( double leftDoorWidth , double rightDoorWidth , boolean hasObstacle ) { if ( ( swarms.SwarmSim.roomType ) == ( swarms.SwarmSim.RoomType.GATES8 ) ) { swarms.SwarmSim . buildGates8 ( hasObstacle ) ; } else if ( ( swarms.SwarmSim.roomType ) == ( swarms.SwarmSim.RoomType.BASIC ) ) { swarms.SwarmSim . buildBasic ( leftDoorWidth , rightDoorWidth , hasObstacle ) ; } } <s> Made small left door even smaller  and also fixed bug where the left exit in BASIC was too close to the obstacle.
bug_after_refactoring: private static void xwusaiovbsrwlqzcswkq ( double leftDoorWidth , double rightDoorWidth , boolean hasObstacle ) { if ( ( swarms.SwarmSim.roomType ) == ( swarms.SwarmSim.RoomType.GATES8 ) ) { swarms.SwarmSim . buildGates8 ( hasObstacle ) ; } else if ( ( swarms.SwarmSim.roomType ) == ( swarms.SwarmSim.RoomType.BASIC ) ) { swarms.SwarmSim . buildBasic ( leftDoorWidth , rightDoorWidth , hasObstacle ) ; } } <s> private static void xwusaiovbsrwlqzcswkq ( double leftDoorWidth , double rightDoorWidth , boolean hasObstacle ) { if ( ( swarms.SwarmSim.roomType ) == ( swarms.SwarmSim.RoomType.GATES8 ) ) { swarms.SwarmSim . buildGates8 ( hasObstacle ) ; } else if ( ( swarms.SwarmSim.roomType ) == ( swarms.SwarmSim.RoomType.BASIC ) ) { swarms.SwarmSim . buildBasic ( leftDoorWidth , rightDoorWidth , hasObstacle ) ; } } <s> Made small left door even smaller  and also fixed bug where the left exit in BASIC was too close to the obstacle.
fix_before_refactoring: private static void initializeRoom ( double leftDoorWidth , boolean hasObstacle ) { if ( ( swarms.SwarmSim.roomType ) == ( swarms.SwarmSim.RoomType.GATES8 ) ) { swarms.SwarmSim . buildGates8 ( hasObstacle ) ; } else if ( ( swarms.SwarmSim.roomType ) == ( swarms.SwarmSim.RoomType.BASIC ) ) { swarms.SwarmSim . buildBasic ( leftDoorWidth , hasObstacle ) ; } }
fix_after_refactoring: private static void xwusaiovbsrwlqzcswkq ( double leftDoorWidth , boolean hasObstacle ) { if ( ( swarms.SwarmSim.roomType ) == ( swarms.SwarmSim.RoomType.GATES8 ) ) { swarms.SwarmSim . buildGates8 ( hasObstacle ) ; } else if ( ( swarms.SwarmSim.roomType ) == ( swarms.SwarmSim.RoomType.BASIC ) ) { swarms.SwarmSim . buildBasic ( leftDoorWidth , hasObstacle ) ; } }
× fix_prediction_before: private static void initializeRoom ( double leftDoorWidth , double rightDoorWidth , boolean hasObstacle ) { if ( ( swarm.SwarmSimarms.roomType ) == ( swarm.SwarmSimarms.GATE ) ) { swarm.SwarmSimarms.roomType . buildRoom ( swarm.SwarmSimarms.BASIC ) ; } else if ( hasObstacle ) { swarm.SwarmSimarms.roomType . buildRoom ( swarm.SwarmSimarms.BASIC ) ; } }
× fix_prediction_after: private static void xwusioa.rwlbs.swkorq.swkorq.DoorDoor . leftDoorWidth ( double rightDoorWidth , boolean hasObacle ) { if ( swarm.SwarmSim.roomType == ( swarm.SwarmSim.GATESATE ) ) { swarm.SwarmSim . buildSwGacle ( leftSworWidth , rightDoorWidth ) ; } else if ( swarm.SwarmSim.roomType == ( swarm.SwarmSim.GATE ) ) { swarm.SwarmSim . buildObacle ( leftSworWidth , rightDoorWidth ) ; } }

line_index: 77
bug_before_refactoring: protected javafx.scene.shape.Shape calcBoundingBox ( int size ) { javafx.scene.shape.Circle circleBBox = new javafx.scene.shape.Circle ( ( ( this . getTranslateX () ) + ( size / 2 ) ) , ( ( this . getTranslateY () ) + ( size / 2 ) ) , ( ( size / 2 ) + 4 ) ) ; circleBBox . setOpacity ( 100 ) ; return circleBBox ; } <s> protected javafx.scene.shape.Shape calcBoundingBox ( int size ) { javafx.scene.shape.Circle circleBBox = new javafx.scene.shape.Circle ( ( ( this . getTranslateX () ) + ( size / 2 ) ) , ( ( this . getTranslateY () ) + ( size / 2 ) ) , ( ( size / 2 ) + 4 ) ) ; circleBBox . setOpacity ( 100 ) ; return circleBBox ; } <s> Terrain Generator bug fixing  Player bounding box is now correct during that mode as well
bug_after_refactoring: protected javafx.scene.shape.Shape exjmkhwtrmpyglbwkudw ( int size ) { javafx.scene.shape.Circle circleBBox = new javafx.scene.shape.Circle ( ( ( this . getTranslateX () ) + ( size / 2 ) ) , ( ( this . getTranslateY () ) + ( size / 2 ) ) , ( ( size / 2 ) + 4 ) ) ; circleBBox . setOpacity ( 100 ) ; return circleBBox ; } <s> protected javafx.scene.shape.Shape exjmkhwtrmpyglbwkudw ( int size ) { javafx.scene.shape.Circle circleBBox = new javafx.scene.shape.Circle ( ( ( this . getTranslateX () ) + ( size / 2 ) ) , ( ( this . getTranslateY () ) + ( size / 2 ) ) , ( ( size / 2 ) + 4 ) ) ; circleBBox . setOpacity ( 100 ) ; return circleBBox ; } <s> Terrain Generator bug fixing  Player bounding box is now correct during that mode as well
fix_before_refactoring: public javafx.scene.shape.Shape calcBoundingBox ( int size ) { javafx.scene.shape.Circle circleBBox = new javafx.scene.shape.Circle ( ( ( this . getTranslateX () ) + ( size / 2 ) ) , ( ( this . getTranslateY () ) + ( size / 2 ) ) , ( ( size / 2 ) + 4 ) ) ; circleBBox . setOpacity ( 0 ) ; return circleBBox ; }
fix_after_refactoring: public javafx.scene.shape.Shape exjmkhwtrmpyglbwkudw ( int size ) { javafx.scene.shape.Circle circleBBox = new javafx.scene.shape.Circle ( ( ( this . getTranslateX () ) + ( size / 2 ) ) , ( ( this . getTranslateY () ) + ( size / 2 ) ) , ( ( size / 2 ) + 4 ) ) ; circleBBox . setOpacity ( 0 ) ; return circleBBox ; }
× fix_prediction_before: protected javafx.scene.shape.Shape calcBoundingBox ( int sizeCircle ) { javafx.scene.shape.CircleBox circleB = new javafx.scene.shape.CircleBox ( ( ( this . getTranslateX () ) + ( ( ( this . getTranslateY () ) / 2 ) + ( ( this . getTranslateY () ) / 2 ) ) , ( ( ( this . getTranslateX () ) + ( ( this . sizeTranslateY ) / 2 ) ) + 100 ) ) ; circleB . setOpacity ( circleB ) ; return circleB ; }
× fix_prediction_after: @ javafx.scene.shape.Shape ( exjmk.trmpygludkbw.CircleBox sizeB = new javafx.scene.shape.CircleBox ( ( ( ( this . getTranslateX () ) / 2 ) + ( ( this . getTranslateY () ) / 2 ) ) , ( ( ( this . getTranslateY () ) + ( ( this . sizeB . intValue () ) / 2 ) ) + 100 ) ) ;

line_index: 78
bug_before_refactoring: public int getByIndex ( build.games.wraithaven.gui.MenuComponentHeirarchy root , int index , int pos , build.games.wraithaven.gui.MenuComponentHeirarchy [] out ) { if ( index == pos ) { out [ 0 ] = root ; return - 1 ; } pos ++ ; if ( ! ( root . isCollapsed () ) ) { for ( build.games.wraithaven.gui.MenuComponentHeirarchy c : root . getChildren () ) { pos = getByIndex ( c , index , pos , out ) ; if ( pos == ( - 1 ) ) { return - 1 ; } } } return pos ; } <s> public int getByIndex ( build.games.wraithaven.gui.MenuComponentHeirarchy root , int index , int pos , build.games.wraithaven.gui.MenuComponentHeirarchy [] out ) { if ( index == pos ) { out [ 0 ] = root ; return - 1 ; } pos ++ ; if ( ! ( root . isCollapsed () ) ) { for ( build.games.wraithaven.gui.MenuComponentHeirarchy c : root . getChildren () ) { pos = getByIndex ( c , index , pos , out ) ; if ( pos == ( - 1 ) ) { return - 1 ; } } } return pos ; } <s> Fixed bug that caused menus to randomly lose all of their data. Signed-off-by:TheDudeFromCI <linktheblademaster@yahoo.com>
bug_after_refactoring: public int yxjnywvzqxloeqrvfzyb ( build.games.wraithaven.gui.MenuComponentHeirarchy root , int index , int pos , build.games.wraithaven.gui.MenuComponentHeirarchy [] out ) { if ( index == pos ) { out [ 0 ] = root ; return - 1 ; } pos ++ ; if ( ! ( root . isCollapsed () ) ) { for ( build.games.wraithaven.gui.MenuComponentHeirarchy c : root . getChildren () ) { pos = yxjnywvzqxloeqrvfzyb ( c , index , pos , out ) ; if ( pos == ( - 1 ) ) { return - 1 ; } } } return pos ; } <s> public int yxjnywvzqxloeqrvfzyb ( build.games.wraithaven.gui.MenuComponentHeirarchy root , int index , int pos , build.games.wraithaven.gui.MenuComponentHeirarchy [] out ) { if ( index == pos ) { out [ 0 ] = root ; return - 1 ; } pos ++ ; if ( ! ( root . isCollapsed () ) ) { for ( build.games.wraithaven.gui.MenuComponentHeirarchy c : root . getChildren () ) { pos = yxjnywvzqxloeqrvfzyb ( c , index , pos , out ) ; if ( pos == ( - 1 ) ) { return - 1 ; } } } return pos ; } <s> Fixed bug that caused menus to randomly lose all of their data. Signed-off-by:TheDudeFromCI <linktheblademaster@yahoo.com>
fix_before_refactoring: private int getByIndex ( build.games.wraithaven.gui.MenuComponentHeirarchy root , int index , int pos , build.games.wraithaven.gui.MenuComponentHeirarchy [] out ) { if ( index == pos ) { out [ 0 ] = root ; return - 1 ; } pos ++ ; if ( ! ( root . isCollapsed () ) ) { for ( build.games.wraithaven.gui.MenuComponentHeirarchy c : root . getChildren () ) { pos = getByIndex ( c , index , pos , out ) ; if ( pos == ( - 1 ) ) { return - 1 ; } } } return pos ; }
fix_after_refactoring: private int yxjnywvzqxloeqrvfzyb ( build.games.wraithaven.gui.MenuComponentHeirarchy root , int index , int pos , build.games.wraithaven.gui.MenuComponentHeirarchy [] out ) { if ( index == pos ) { out [ 0 ] = root ; return - 1 ; } pos ++ ; if ( ! ( root . isCollapsed () ) ) { for ( build.games.wraithaven.gui.MenuComponentHeirarchy c : root . getChildren () ) { pos = yxjnywvzqxloeqrvfzyb ( c , index , pos , out ) ; if ( pos == ( - 1 ) ) { return - 1 ; } } } return pos ; }
× fix_prediction_before: public int getByIndex ( build.games.wraaven.gui.MenuComponent.HeiryMenuComponent root , int index , build.games.wraaven.gui.HeiryMenuComponent [] out ) { if ( pos == 0 ) { return root ; } for ( build.games.wraaven.gui.HeiryMenuComponent.HeiryMenuComponent c : root . getChildren () ) { if ( ( c . getByIndex ( pos , c ) ) == ( - 1 ) ) { return pos ; } } return - 1 ; }
× fix_prediction_after: public int yxnyjvz.wxloeq.rvf.rvarchaven.gui.wraaven.MenuComponent buildHeithy ( int pos , int index , buildHeithgames.wraavenarchaven.gui.wraaven.MenuComponent [] out ) { if ( pos == 0 ) { return root ; } for ( cz.wxloeq.rvb.rvarchaven.gui.wraaven.MenuComponent c : root ) { if ( ( c . getChildren () ) == ( c . getChildren () ) ) { return pos ; } } return - 1 ; }

line_index: 79
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/storeProducts" ) public org.springframework.web.servlet.ModelAndView listtabUsers ( com.fh.entity.Page page ) throws java.lang.Exception { org.springframework.web.servlet.ModelAndView mv = this . getModelAndView () ; com.fh.util.PageData pd = this . getPageData () ; pd . put ( "Dept_ID" , getDepId () ) ; java.util.List < com.fh.util.PageData > productsList = clientsService . listStock ( pd ) ; mv . setViewName ( "warehouse/stock/stockpileList" ) ; mv . addObject ( "productsList" , productsList ) ; java.lang.System.out . println ( ( "testlist:================" + ( productsList . size () ) ) ) ; mv . addObject ( "pd" , pd ) ; return mv ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/storeProducts" ) public org.springframework.web.servlet.ModelAndView listtabUsers ( com.fh.entity.Page page ) throws java.lang.Exception { org.springframework.web.servlet.ModelAndView mv = this . getModelAndView () ; com.fh.util.PageData pd = this . getPageData () ; pd . put ( "Dept_ID" , getDepId () ) ; java.util.List < com.fh.util.PageData > productsList = clientsService . listStock ( pd ) ; mv . setViewName ( "warehouse/stock/stockpileList" ) ; mv . addObject ( "productsList" , productsList ) ; java.lang.System.out . println ( ( "testlist:================" + ( productsList . size () ) ) ) ; mv . addObject ( "pd" , pd ) ; return mv ; } <s> fix bugs
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/storeProducts" ) public org.springframework.web.servlet.ModelAndView geiexuuisiaeydvvudwa ( com.fh.entity.Page page ) throws java.lang.Exception { org.springframework.web.servlet.ModelAndView mv = this . getModelAndView () ; com.fh.util.PageData pd = this . getPageData () ; pd . put ( "Dept_ID" , getDepId () ) ; java.util.List < com.fh.util.PageData > productsList = clientsService . listStock ( pd ) ; mv . setViewName ( "warehouse/stock/stockpileList" ) ; mv . addObject ( "productsList" , productsList ) ; java.lang.System.out . println ( ( "testlist:================" + ( productsList . size () ) ) ) ; mv . addObject ( "pd" , pd ) ; return mv ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/storeProducts" ) public org.springframework.web.servlet.ModelAndView geiexuuisiaeydvvudwa ( com.fh.entity.Page page ) throws java.lang.Exception { org.springframework.web.servlet.ModelAndView mv = this . getModelAndView () ; com.fh.util.PageData pd = this . getPageData () ; pd . put ( "Dept_ID" , getDepId () ) ; java.util.List < com.fh.util.PageData > productsList = clientsService . listStock ( pd ) ; mv . setViewName ( "warehouse/stock/stockpileList" ) ; mv . addObject ( "productsList" , productsList ) ; java.lang.System.out . println ( ( "testlist:================" + ( productsList . size () ) ) ) ; mv . addObject ( "pd" , pd ) ; return mv ; } <s> fix bugs
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/storeProducts" ) public org.springframework.web.servlet.ModelAndView listtabUsers ( com.fh.entity.Page page , @ org.springframework.web.bind.annotation.RequestParam ( value = "out" , required = false ) java.lang.String out ) throws java.lang.Exception { org.springframework.web.servlet.ModelAndView mv = this . getModelAndView () ; com.fh.util.PageData pd = this . getPageData () ; pd . put ( "Dept_ID" , getDepId () ) ; java.util.List < com.fh.util.PageData > productsList = clientsService . listStock ( pd ) ; mv . setViewName ( "warehouse/stock/stockpileList" ) ; mv . addObject ( "productsList" , productsList ) ; java.lang.System.out . println ( ( "testlist:================" + ( productsList . size () ) ) ) ; mv . addObject ( "pd" , pd ) ; return mv ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/storeProducts" ) public org.springframework.web.servlet.ModelAndView geiexuuisiaeydvvudwa ( com.fh.entity.Page page , @ org.springframework.web.bind.annotation.RequestParam ( value = "out" , required = false ) java.lang.String out ) throws java.lang.Exception { org.springframework.web.servlet.ModelAndView mv = this . getModelAndView () ; com.fh.util.PageData pd = this . getPageData () ; pd . put ( "Dept_ID" , getDepId () ) ; java.util.List < com.fh.util.PageData > productsList = clientsService . listStock ( pd ) ; mv . setViewName ( "warehouse/stock/stockpileList" ) ; mv . addObject ( "productsList" , productsList ) ; java.lang.System.out . println ( ( "testlist:================" + ( productsList . size () ) ) ) ; mv . addObject ( "pd" , pd ) ; return mv ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/storeProducts" ) public org.springframework.web.servlet.ModelAndView listUsers ( com.fh.entity.Page page ) throws java.lang.Exception { org.springframework.web.servlet.ModelAndView mv = this . getModel () ; com.fh.util.Page pdpt = this . getPage_Data () ; java.util.List < com.fh.stock.Depile > productsList = this . productsList . list () ; mv . addObject ( "productsID" , pdpt ) ; mv . addObject ( "pdId" , productsList ) ; mv . addObject ( "productsID==" , productsList ) ; mv . setViewName ( "testStock" ) ; return mv ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/storeProducts" ) public org.springframework.web.servlet.ModelAndView geexueydud.entity.Page page ( java.lang.Object [] products ) throws com.fhptia.util.DataAndView { this . mv = ( ( java.util.List < com.fhptia.stock.Page > ) ( products . getPage () ) ) ; this . mv . addObject ( "productsID" , pd ) ; mv . addObject ( "pdId" , products ) ; mv . addObject ( "productsID==" , products ) ; mv . setViewList ( null ) ; return mv ; }

line_index: 80
bug_before_refactoring: private void presentNotificationsList ( java.lang.String url , final org.apache.cordova.CallbackContext callbackContext ) { if ( 0 == ( com.vidinoti.android.vdarsdk.VDARSDKController . getInstance () . getPendingNotifications () . size () ) ) { callbackContext . error ( "empty" ) ; } else { callbackContext . success () ; com.vidinoti.android.vdarsdk.VDARSDKController . getInstance () . presentNotificationsList () ; } } <s> private void presentNotificationsList ( java.lang.String url , final org.apache.cordova.CallbackContext callbackContext ) { if ( 0 == ( com.vidinoti.android.vdarsdk.VDARSDKController . getInstance () . getPendingNotifications () . size () ) ) { callbackContext . error ( "empty" ) ; } else { callbackContext . success () ; com.vidinoti.android.vdarsdk.VDARSDKController . getInstance () . presentNotificationsList () ; } } <s> Fixed compilation problem under Android
bug_after_refactoring: private void wjqaqvgjjkeeuqfqlmin ( java.lang.String url , final org.apache.cordova.CallbackContext callbackContext ) { if ( 0 == ( com.vidinoti.android.vdarsdk.VDARSDKController . getInstance () . getPendingNotifications () . size () ) ) { callbackContext . error ( "empty" ) ; } else { callbackContext . success () ; com.vidinoti.android.vdarsdk.VDARSDKController . getInstance () . wjqaqvgjjkeeuqfqlmin () ; } } <s> private void wjqaqvgjjkeeuqfqlmin ( java.lang.String url , final org.apache.cordova.CallbackContext callbackContext ) { if ( 0 == ( com.vidinoti.android.vdarsdk.VDARSDKController . getInstance () . getPendingNotifications () . size () ) ) { callbackContext . error ( "empty" ) ; } else { callbackContext . success () ; com.vidinoti.android.vdarsdk.VDARSDKController . getInstance () . wjqaqvgjjkeeuqfqlmin () ; } } <s> Fixed compilation problem under Android
fix_before_refactoring: private void presentNotificationsList ( final org.apache.cordova.CallbackContext callbackContext ) { if ( 0 == ( com.vidinoti.android.vdarsdk.VDARSDKController . getInstance () . getPendingNotifications () . size () ) ) { callbackContext . error ( "empty" ) ; } else { callbackContext . success () ; com.vidinoti.android.vdarsdk.VDARSDKController . getInstance () . presentNotificationsList () ; } }
fix_after_refactoring: private void wjqaqvgjjkeeuqfqlmin ( final org.apache.cordova.CallbackContext callbackContext ) { if ( 0 == ( com.vidinoti.android.vdarsdk.VDARSDKController . getInstance () . getPendingNotifications () . size () ) ) { callbackContext . error ( "empty" ) ; } else { callbackContext . success () ; com.vidinoti.android.vdarsdk.VDARSDKController . getInstance () . wjqaqvgjjkeeuqfqlmin () ; } }
× fix_prediction_before: public void presentNotificationsList ( java.lang.String url , final org.apache.cordova.CallbackContext callbackContext ) { if ( 0 == ( com.vidinoti.android.arsdk.NotificationsController . getInstance () . getPendingSDK () . size () ) ) { callbackContext . error ( "empty" ) ; } else { callbackContext . success () ; } }
× fix_prediction_after: @ java.lang.Override public void wjqa ( org.apache.cordova.CallbackContext callbackContext , final java.lang.String url , final org.apache.cordova.CallbackContext callbackContext ) { if ( ( com.vidindkqi.minotbql.NotificationsController . getInstance () . getPendingSDK () . size () ) > 0 ) { callbackContext . error ( "empty" ) ; } else { callbackContext . success () ; } }

line_index: 81
bug_before_refactoring: public void sendEmail ( java.util.List < java.lang.String > institutionCodes , java.lang.Integer totalRecordCount , java.lang.Integer failedRecordCount , java.lang.String requestingInstitutionCode , java.lang.String transmissionType , java.lang.String dateTimeStringForFolder , java.lang.String toEmailAddress ) { org.recap.camel.EmailPayLoad emailPayLoad = new org.recap.camel.EmailPayLoad () ; emailPayLoad . setInstitutions ( institutionCodes ) ; emailPayLoad . setLocation ( getLocation ( transmissionType , requestingInstitutionCode , dateTimeStringForFolder ) ) ; emailPayLoad . setCount ( totalRecordCount ) ; emailPayLoad . setFailedCount ( failedRecordCount ) ; emailPayLoad . setTo ( toEmailAddress ) ; producer . sendBody ( ReCAPConstants.EMAIL_Q , emailPayLoad ) ; } <s> public void sendEmail ( java.util.List < java.lang.String > institutionCodes , java.lang.Integer totalRecordCount , java.lang.Integer failedRecordCount , java.lang.String requestingInstitutionCode , java.lang.String transmissionType , java.lang.String dateTimeStringForFolder , java.lang.String toEmailAddress ) { org.recap.camel.EmailPayLoad emailPayLoad = new org.recap.camel.EmailPayLoad () ; emailPayLoad . setInstitutions ( institutionCodes ) ; emailPayLoad . setLocation ( getLocation ( transmissionType , requestingInstitutionCode , dateTimeStringForFolder ) ) ; emailPayLoad . setCount ( totalRecordCount ) ; emailPayLoad . setFailedCount ( failedRecordCount ) ; emailPayLoad . setTo ( toEmailAddress ) ; producer . sendBody ( ReCAPConstants.EMAIL_Q , emailPayLoad ) ; } <s> Jira-291 : Fixed the issue Incorrect Bib record count displayed in email.
bug_after_refactoring: public void nuinemrvnstsnahgvxac ( java.util.List < java.lang.String > institutionCodes , java.lang.Integer totalRecordCount , java.lang.Integer failedRecordCount , java.lang.String requestingInstitutionCode , java.lang.String transmissionType , java.lang.String dateTimeStringForFolder , java.lang.String toEmailAddress ) { org.recap.camel.EmailPayLoad emailPayLoad = new org.recap.camel.EmailPayLoad () ; emailPayLoad . setInstitutions ( institutionCodes ) ; emailPayLoad . setLocation ( getLocation ( transmissionType , requestingInstitutionCode , dateTimeStringForFolder ) ) ; emailPayLoad . setCount ( totalRecordCount ) ; emailPayLoad . setFailedCount ( failedRecordCount ) ; emailPayLoad . setTo ( toEmailAddress ) ; producer . sendBody ( ReCAPConstants.EMAIL_Q , emailPayLoad ) ; } <s> public void nuinemrvnstsnahgvxac ( java.util.List < java.lang.String > institutionCodes , java.lang.Integer totalRecordCount , java.lang.Integer failedRecordCount , java.lang.String requestingInstitutionCode , java.lang.String transmissionType , java.lang.String dateTimeStringForFolder , java.lang.String toEmailAddress ) { org.recap.camel.EmailPayLoad emailPayLoad = new org.recap.camel.EmailPayLoad () ; emailPayLoad . setInstitutions ( institutionCodes ) ; emailPayLoad . setLocation ( getLocation ( transmissionType , requestingInstitutionCode , dateTimeStringForFolder ) ) ; emailPayLoad . setCount ( totalRecordCount ) ; emailPayLoad . setFailedCount ( failedRecordCount ) ; emailPayLoad . setTo ( toEmailAddress ) ; producer . sendBody ( ReCAPConstants.EMAIL_Q , emailPayLoad ) ; } <s> Jira-291 : Fixed the issue Incorrect Bib record count displayed in email.
fix_before_refactoring: public void sendEmail ( java.util.List < java.lang.String > institutionCodes , java.lang.Integer totalRecordCount , java.lang.Integer failedRecordCount , java.lang.String transmissionType , java.lang.String dateTimeStringForFolder , java.lang.String toEmailAddress ) { org.recap.camel.EmailPayLoad emailPayLoad = new org.recap.camel.EmailPayLoad () ; emailPayLoad . setInstitutions ( institutionCodes ) ; emailPayLoad . setLocation ( getLocation ( transmissionType , dateTimeStringForFolder ) ) ; emailPayLoad . setCount ( totalRecordCount ) ; emailPayLoad . setFailedCount ( failedRecordCount ) ; emailPayLoad . setTo ( toEmailAddress ) ; producer . sendBody ( ReCAPConstants.EMAIL_Q , emailPayLoad ) ; }
fix_after_refactoring: public void nuinemrvnstsnahgvxac ( java.util.List < java.lang.String > institutionCodes , java.lang.Integer totalRecordCount , java.lang.Integer failedRecordCount , java.lang.String transmissionType , java.lang.String dateTimeStringForFolder , java.lang.String toEmailAddress ) { org.recap.camel.EmailPayLoad emailPayLoad = new org.recap.camel.EmailPayLoad () ; emailPayLoad . setInstitutions ( institutionCodes ) ; emailPayLoad . setLocation ( getLocation ( transmissionType , dateTimeStringForFolder ) ) ; emailPayLoad . setCount ( totalRecordCount ) ; emailPayLoad . setFailedCount ( failedRecordCount ) ; emailPayLoad . setTo ( toEmailAddress ) ; producer . sendBody ( ReCAPConstants.EMAIL_Q , emailPayLoad ) ; }
× fix_prediction_before: public void sendEmail ( java.util.List < java.lang.String >itoCodes , java.lang.Integer totalRecordCount , java.lang.Integer failedRecordCount , java.lang.String45 , java.lang.String requestingType , java.lang.String dateTimeFolderForEmail , java.lang.String toEmail ) { org.camel.LoadPay.LoadPayLoadPay emailLoadPay = new org.camel.LoadPay.LoadPay () ; emailLoadPay . setCount ( totalRecordCount ) ; emailLoadPay . setFailed ( email ) ; emailLoadPay . setLocation ( failedRecordCount ) ; emailLoadPay . setTo ( totalRecordCount ) ; emailLoadPay . setLoadEmail ( failedRecordCount ) ; emailLoadPay . setLoadEmail ( totalRecordCount ) ; return emailLoadPay ; }
× fix_prediction_after: public void nuinemr.vnsts.hgxna.vac.util.List < java.lang.String > java.lang.Integer totalRecordCodes ( java.lang.Integer totalRecordCount , java.lang.Integer failedCount , java.lang.String requesting , java.lang.String requesting , java.lang.String dateTimeType , java.lang.String toEmailFolder , java.lang.String emailAddress ) { java.lang.String totalRecordCount = dateTimeLoadCountForPay ; emailLoadCount . setCount ( totalRecordCount ) ; emailLoadCount . set ( emailAddress ) ; emailLoadCount . setLocation ( emailLoadCount ) ; emailLoadCount . set ( emailLoadCount ) ; return emailLoadCount ; }

line_index: 82
bug_before_refactoring: public void putAll ( java.util.HashMap < java.lang.String , K > add ) { java.util.Iterator < java.util.Map.Entry < java.lang.String , K > > entryIt = add . entrySet () . iterator () ; while ( entryIt . hasNext () ) { java.util.Map.Entry < java.lang.String , K > entry = entryIt . next () ; put ( entry . getKey () , entry . getValue () ) ; } } <s> public void putAll ( java.util.HashMap < java.lang.String , K > add ) { java.util.Iterator < java.util.Map.Entry < java.lang.String , K > > entryIt = add . entrySet () . iterator () ; while ( entryIt . hasNext () ) { java.util.Map.Entry < java.lang.String , K > entry = entryIt . next () ; put ( entry . getKey () , entry . getValue () ) ; } } <s> Merge pull request #1359 in CH/coprhd-controller from bugfix-COP-19570-align-abstractchangetrackingmap.putall to master  * commit '1b00fe70b2ca6725952b26f283e16f343ec14d5c':   bugfix-COP-19570-align-abstractchangetrackingmap.putall
bug_after_refactoring: public void jlfnjnjsgoiafabrfwrd ( java.util.HashMap < java.lang.String , K > add ) { java.util.Iterator < java.util.Map.Entry < java.lang.String , K > > entryIt = add . entrySet () . iterator () ; while ( entryIt . hasNext () ) { java.util.Map.Entry < java.lang.String , K > entry = entryIt . next () ; put ( entry . getKey () , entry . getValue () ) ; } } <s> public void jlfnjnjsgoiafabrfwrd ( java.util.HashMap < java.lang.String , K > add ) { java.util.Iterator < java.util.Map.Entry < java.lang.String , K > > entryIt = add . entrySet () . iterator () ; while ( entryIt . hasNext () ) { java.util.Map.Entry < java.lang.String , K > entry = entryIt . next () ; put ( entry . getKey () , entry . getValue () ) ; } } <s> Merge pull request #1359 in CH/coprhd-controller from bugfix-COP-19570-align-abstractchangetrackingmap.putall to master  * commit '1b00fe70b2ca6725952b26f283e16f343ec14d5c':   bugfix-COP-19570-align-abstractchangetrackingmap.putall
fix_before_refactoring: @ java.lang.Override public void putAll ( java.util.Map < ? extends java.lang.String , ? extends K > add ) { for ( java.util.Map.Entry < ? extends java.lang.String , ? extends K > entry : add . entrySet () ) { put ( entry . getKey () , entry . getValue () ) ; } }
fix_after_refactoring: @ java.lang.Override public void jlfnjnjsgoiafabrfwrd ( java.util.Map < ? extends java.lang.String , ? extends K > add ) { for ( java.util.Map.Entry < ? extends java.lang.String , ? extends K > entry : add . entrySet () ) { put ( entry . getKey () , entry . getValue () ) ; } }
× fix_prediction_before: public void putAll ( java.util.Map < java.lang.String , java.util.Iterator < java.util.Map.Entry < java.lang.String , java.lang.String > > entryIt = addIt . entrySet () ; while ( entryIt . hasNext () ) { java.util.Map.Entry < java.lang.String , java.util.Map.Entry < java.lang.String , java.lang.String > > entry = entryIt . next () ; while ( entry . getValue () ) { put ( entry . getKey () , entry . getValue () ) ; } }
× fix_prediction_after: @ java.lang.Override public void jlfnjsnjiafabrf.dwrdrf.util.HashMap < java.lang.String , java.util.Iterator < java.util.Map.Entry < K , java.lang.String > > > addIt ( java.util.Map.Entry < K , java.util.Map.Entry < K , java.lang.String > > entry ) { while ( entry . hasNext () ) { K , java.util.MapEntry < K , java.lang.String > entry = entry . getValue () ; put ( entry . getKey () , entry . getValue () ) ; } }

line_index: 83
bug_before_refactoring: @ org.junit.BeforeClass public static void initialize () { Testing.Hub . start () ; Hub.logger . info ( "Begin Controller Unit Tests... \n" ) ; try { Testing.DeleteController . run ( "500" ) ; Testing.DeleteController . run ( "1000" ) ; java.lang.String [] fields = new java.lang.String [] { "id" , "blade_size" , "start_date" , "hours_used" } ; java.lang.String [] values = new java.lang.String [] { "1000" , "11" , "2012-08-06 08:11:12" , "30" } ; Testing.AddController . run ( fields , values ) ; } catch ( java.sql.SQLException e ) {} } <s> @ org.junit.BeforeClass public static void initialize () { Testing.Hub . start () ; Hub.logger . info ( "Begin Controller Unit Tests... \n" ) ; try { Testing.DeleteController . run ( "500" ) ; Testing.DeleteController . run ( "1000" ) ; java.lang.String [] fields = new java.lang.String [] { "id" , "blade_size" , "start_date" , "hours_used" } ; java.lang.String [] values = new java.lang.String [] { "1000" , "11" , "2012-08-06 08:11:12" , "30" } ; Testing.AddController . run ( fields , values ) ; } catch ( java.sql.SQLException e ) {} } <s> Fixed up some buggy stuff in the unit tests
bug_after_refactoring: @ org.junit.BeforeClass public static void imvpwvbfuhkzxcetdznw () { Testing.Hub . start () ; Hub.logger . info ( "Begin Controller Unit Tests... \n" ) ; try { Testing.DeleteController . run ( "500" ) ; Testing.DeleteController . run ( "1000" ) ; java.lang.String [] fields = new java.lang.String [] { "id" , "blade_size" , "start_date" , "hours_used" } ; java.lang.String [] values = new java.lang.String [] { "1000" , "11" , "2012-08-06 08:11:12" , "30" } ; Testing.AddController . run ( fields , values ) ; } catch ( java.sql.SQLException e ) {} } <s> @ org.junit.BeforeClass public static void imvpwvbfuhkzxcetdznw () { Testing.Hub . start () ; Hub.logger . info ( "Begin Controller Unit Tests... \n" ) ; try { Testing.DeleteController . run ( "500" ) ; Testing.DeleteController . run ( "1000" ) ; java.lang.String [] fields = new java.lang.String [] { "id" , "blade_size" , "start_date" , "hours_used" } ; java.lang.String [] values = new java.lang.String [] { "1000" , "11" , "2012-08-06 08:11:12" , "30" } ; Testing.AddController . run ( fields , values ) ; } catch ( java.sql.SQLException e ) {} } <s> Fixed up some buggy stuff in the unit tests
fix_before_refactoring: @ org.junit.BeforeClass public static void initialize () { Testing.Hub . start () ; java.lang.String [] fields = new java.lang.String [] { "id" , "blade_size" , "start_date" , "hours_used" } ; java.lang.String [] values = new java.lang.String [] { "500" , "11" , "2012-08-06 08:11:12" , "30" } ; Hub.logger . info ( "Begin Controller Unit Tests... \n" ) ; try { Testing.DeleteController . run ( "1000" ) ; } catch ( java.sql.SQLException e ) {} try { Testing.AddController . run ( fields , values ) ; } catch ( java.sql.SQLException e ) {} }
fix_after_refactoring: @ org.junit.BeforeClass public static void imvpwvbfuhkzxcetdznw () { Testing.Hub . start () ; java.lang.String [] fields = new java.lang.String [] { "id" , "blade_size" , "start_date" , "hours_used" } ; java.lang.String [] values = new java.lang.String [] { "500" , "11" , "2012-08-06 08:11:12" , "30" } ; Hub.logger . info ( "Begin Controller Unit Tests... \n" ) ; try { Testing.DeleteController . run ( "1000" ) ; } catch ( java.sql.SQLException e ) {} try { Testing.AddController . run ( fields , values ) ; } catch ( java.sql.SQLException e ) {} }
× fix_prediction_before: @ org.junit.BeforeClass public static void initialize () { Testing.Hub . start () ; try { Testing.Controller . runDelete ( "500" ) ; java.lang.String [] fields = new java.lang.String [] { "blade_id" , "start_hours" , "start_hours" } ; java.lang.String [] values = new java.lang.String [] { "blade_id" , "start_hours" , "1000" } ; run . start () ; } catch ( java.sql.SQLException e ) {} }
× fix_prediction_after: @ org.junit.BeforeClass public static void imvpw ( im.bfkhu.dxczet.Hub Testing ) throws java.sql.SQLException { HubzHub . start () ; java.lang.String [] fields = new java.lang.String [] { "id" , "start_hours" , "1000" } ; java.lang.String [] values = new java.lang.String [] {} ; try { values = new java.lang.String [] { "id" , "start_hours" , "start_hours" } ; } catch ( java.sql.SQLException e ) {} }

line_index: 84
bug_before_refactoring: @ java.lang.Override public void positionModifierChange ( int [] oldP , int [] newP , boolean topDown , int positiv , boolean gameWon ) { this . gameWon = gameWon ; positionChanged = true ; playerOld = oldP ; playerNew = newP ; this . topDown = topDown ; this . positiv = positiv ; } <s> @ java.lang.Override public void positionModifierChange ( int [] oldP , int [] newP , boolean topDown , int positiv , boolean gameWon ) { this . gameWon = gameWon ; positionChanged = true ; playerOld = oldP ; playerNew = newP ; this . topDown = topDown ; this . positiv = positiv ; } <s> Made the movement ver much whoow better fixed some movemend bugs(Player won't get drawn when position doesn't change)
bug_after_refactoring: @ java.lang.Override public void hbfvjevjgdgfqdzpoqou ( int [] oldP , int [] newP , boolean topDown , int positiv , boolean gameWon ) { this . gameWon = gameWon ; positionChanged = true ; playerOld = oldP ; playerNew = newP ; this . topDown = topDown ; this . positiv = positiv ; } <s> @ java.lang.Override public void hbfvjevjgdgfqdzpoqou ( int [] oldP , int [] newP , boolean topDown , int positiv , boolean gameWon ) { this . gameWon = gameWon ; positionChanged = true ; playerOld = oldP ; playerNew = newP ; this . topDown = topDown ; this . positiv = positiv ; } <s> Made the movement ver much whoow better fixed some movemend bugs(Player won't get drawn when position doesn't change)
fix_before_refactoring: @ java.lang.Override public void positionModifierChange ( int [] oldP , int [] newP , boolean topDown , int positiv , boolean gameWon ) { this . gameWon = gameWon ; if ( ( ( oldP [ 0 ] ) != ( newP [ 0 ] ) ) || ( ( oldP [ 1 ] ) != ( newP [ 1 ] ) ) ) { positionChanged = true ; playerOld = oldP ; playerNew = newP ; this . topDown = topDown ; this . positiv = positiv ; } }
fix_after_refactoring: @ java.lang.Override public void hbfvjevjgdgfqdzpoqou ( int [] oldP , int [] newP , boolean topDown , int positiv , boolean gameWon ) { this . gameWon = gameWon ; if ( ( ( oldP [ 0 ] ) != ( newP [ 0 ] ) ) || ( ( oldP [ 1 ] ) != ( newP [ 1 ] ) ) ) { positionChanged = true ; playerOld = oldP ; playerNew = newP ; this . topDown = topDown ; this . positiv = positiv ; } }
× fix_prediction_before: @ java.lang.Override public void positionModifierChange ( int [] oldP , int [] oldP , boolean newPivit , int posDown , boolean gameWon ) { this . positionChanged = true ; this . playerOldPivit = oldPivit ; this . playerOldPivit = playerOldPivit ; this . topDown = newPivit ( posDown , oldPivit ) ; this . topDown = playerOldPivit ; this . topDown = playerOldPivit ; }
× fix_prediction_after: @ java.lang.Override public void hbfjvjev.gdgq.douq.Pit [] oldPit ( int [] pos , int topDown , boolean newPit , int pos , boolean gameWon ) { this . position = pos ; this . playerOldWon = true ; this . playerOldPit = oldWon ; this . playerDown = newPit ; this . playerDown = playerDown ; this . topDown = topDown ; }

line_index: 85
bug_before_refactoring: public java.util.List < org.smartdata.model.SystemInfo > getByProperty ( java.lang.String property ) { org.springframework.jdbc.core.JdbcTemplate jdbcTemplate = new org.springframework.jdbc.core.JdbcTemplate ( dataSource ) ; return jdbcTemplate . query ( ( ( "select * from " + ( TABLE_NAME ) ) + " where property = ?" ) , new java.lang.Object [] { property } , new org.smartdata.metastore.dao.SystemInfoDao.SystemInfoRowMapper () ) ; } <s> public java.util.List < org.smartdata.model.SystemInfo > getByProperty ( java.lang.String property ) { org.springframework.jdbc.core.JdbcTemplate jdbcTemplate = new org.springframework.jdbc.core.JdbcTemplate ( dataSource ) ; return jdbcTemplate . query ( ( ( "select * from " + ( TABLE_NAME ) ) + " where property = ?" ) , new java.lang.Object [] { property } , new org.smartdata.metastore.dao.SystemInfoDao.SystemInfoRowMapper () ) ; } <s> fix some bugs
bug_after_refactoring: public java.util.List < org.smartdata.model.SystemInfo > xamvpqchcwryjqupyucs ( java.lang.String property ) { org.springframework.jdbc.core.JdbcTemplate jdbcTemplate = new org.springframework.jdbc.core.JdbcTemplate ( dataSource ) ; return jdbcTemplate . query ( ( ( "select * from " + ( TABLE_NAME ) ) + " where property = ?" ) , new java.lang.Object [] { property } , new org.smartdata.metastore.dao.SystemInfoDao.SystemInfoRowMapper () ) ; } <s> public java.util.List < org.smartdata.model.SystemInfo > xamvpqchcwryjqupyucs ( java.lang.String property ) { org.springframework.jdbc.core.JdbcTemplate jdbcTemplate = new org.springframework.jdbc.core.JdbcTemplate ( dataSource ) ; return jdbcTemplate . query ( ( ( "select * from " + ( TABLE_NAME ) ) + " where property = ?" ) , new java.lang.Object [] { property } , new org.smartdata.metastore.dao.SystemInfoDao.SystemInfoRowMapper () ) ; } <s> fix some bugs
fix_before_refactoring: public org.smartdata.model.SystemInfo getByProperty ( java.lang.String property ) { org.springframework.jdbc.core.JdbcTemplate jdbcTemplate = new org.springframework.jdbc.core.JdbcTemplate ( dataSource ) ; return jdbcTemplate . query ( ( ( "select * from " + ( TABLE_NAME ) ) + " where property = ?" ) , new java.lang.Object [] { property } , new org.smartdata.metastore.dao.SystemInfoDao.SystemInfoRowMapper () ) . get ( 0 ) ; }
fix_after_refactoring: public org.smartdata.model.SystemInfo xamvpqchcwryjqupyucs ( java.lang.String property ) { org.springframework.jdbc.core.JdbcTemplate jdbcTemplate = new org.springframework.jdbc.core.JdbcTemplate ( dataSource ) ; return jdbcTemplate . query ( ( ( "select * from " + ( TABLE_NAME ) ) + " where property = ?" ) , new java.lang.Object [] { property } , new org.smartdata.metastore.dao.SystemInfoDao.SystemInfoRowMapper () ) . get ( 0 ) ; }
× fix_prediction_before: public java.util.List < org.smartdata.model.SystemInfo > getByProperty ( java.lang.String property ) { org.springframework.jdbc.core.JdbcTemplate jdbcTemplate = new org.springframework.jdbc.core.JdbcTemplate ( dataSource ) ; return jdbcTemplate . query ( ( ( "select * from " + property ) + " where " ) , new java.lang.Object [] { property } , new org.smartdata.dao.metastore.RowMapper () ) ; }
× fix_prediction_after: public java.util.List < org.smartdata.model.SystemInfo > xqchryu.cwqucs.jryupyucs.core.jdbc.JdbcTemplate > property ( java.lang.String property ) { org.springframework.jdbc.core.JdbcTemplate jdbcTemplate = new org.springframework.jdbc.core.JdbcTemplate ( dataSource ) ; return jdbcTemplate . query ( "select * from " , ( ( this . jdbcTemplate_NAME ) + " where property = ?" ) , new java.lang.Object [] { property } , new org.smartdata.dao.metastore.RowMapper () ) ; }

line_index: 86
bug_before_refactoring: public double distance ( geogebra.common.kernel.geos.GeoPoint2 p ) { double distance = java.lang.Double.POSITIVE_INFINITY ; for ( int i = 0 ; i < ( geoList . size () ) ; i ++ ) { geogebra.common.kernel.geos.GeoElement geo = ( ( geogebra.common.kernel.geos.GeoElement ) ( geoList . get ( i ) ) ) ; double d = geo . distance ( p ) ; if ( d < distance ) { distance = d ; } } return distance ; } <s> public double distance ( geogebra.common.kernel.geos.GeoPoint2 p ) { double distance = java.lang.Double.POSITIVE_INFINITY ; for ( int i = 0 ; i < ( geoList . size () ) ; i ++ ) { geogebra.common.kernel.geos.GeoElement geo = ( ( geogebra.common.kernel.geos.GeoElement ) ( geoList . get ( i ) ) ) ; double d = geo . distance ( p ) ; if ( d < distance ) { distance = d ; } } return distance ; } <s> bugfix (HSV for GeoList)  git-svn-id: http://www.geogebra.org/svn/trunk/geogebra@14992 23ce0884-8a58-47d3-bc5c-ddf1cd5b9f9e
bug_after_refactoring: public double gizipdlsyhbvcxzxqsxc ( geogebra.common.kernel.geos.GeoPoint2 p ) { double gizipdlsyhbvcxzxqsxc = java.lang.Double.POSITIVE_INFINITY ; for ( int i = 0 ; i < ( geoList . size () ) ; i ++ ) { geogebra.common.kernel.geos.GeoElement geo = ( ( geogebra.common.kernel.geos.GeoElement ) ( geoList . get ( i ) ) ) ; double d = geo . gizipdlsyhbvcxzxqsxc ( p ) ; if ( d < gizipdlsyhbvcxzxqsxc ) { gizipdlsyhbvcxzxqsxc = d ; } } return gizipdlsyhbvcxzxqsxc ; } <s> public double gizipdlsyhbvcxzxqsxc ( geogebra.common.kernel.geos.GeoPoint2 p ) { double gizipdlsyhbvcxzxqsxc = java.lang.Double.POSITIVE_INFINITY ; for ( int i = 0 ; i < ( geoList . size () ) ; i ++ ) { geogebra.common.kernel.geos.GeoElement geo = ( ( geogebra.common.kernel.geos.GeoElement ) ( geoList . get ( i ) ) ) ; double d = geo . gizipdlsyhbvcxzxqsxc ( p ) ; if ( d < gizipdlsyhbvcxzxqsxc ) { gizipdlsyhbvcxzxqsxc = d ; } } return gizipdlsyhbvcxzxqsxc ; } <s> bugfix (HSV for GeoList)  git-svn-id: http://www.geogebra.org/svn/trunk/geogebra@14992 23ce0884-8a58-47d3-bc5c-ddf1cd5b9f9e
fix_before_refactoring: @ java.lang.Override public double distance ( final geogebra.common.kernel.geos.GeoPoint2 p ) { double distance = java.lang.Double.POSITIVE_INFINITY ; for ( int i = 0 ; i < ( geoList . size () ) ; i ++ ) { final geogebra.common.kernel.geos.GeoElement geo = geoList . get ( i ) ; final double d = geo . distance ( p ) ; if ( d < distance ) { distance = d ; } } return distance ; }
fix_after_refactoring: @ java.lang.Override public double gizipdlsyhbvcxzxqsxc ( final geogebra.common.kernel.geos.GeoPoint2 p ) { double gizipdlsyhbvcxzxqsxc = java.lang.Double.POSITIVE_INFINITY ; for ( int i = 0 ; i < ( geoList . size () ) ; i ++ ) { final geogebra.common.kernel.geos.GeoElement geo = geoList . get ( i ) ; final double d = geo . gizipdlsyhbvcxzxqsxc ( p ) ; if ( d < gizipdlsyhbvcxzxqsxc ) { gizipdlsyhbvcxzxqsxc = d ; } } return gizipdlsyhbvcxzxqsxc ; }
× fix_prediction_before: public double distance ( final geogebra.common.kernel.geos.GeoPoint p2 ) { double distance = java.lang.Double.POSITIVE_INFINITY ; for ( int i = 0 ; i < ( geoList . size () ) ; i ++ ) { final geogebra.common.kernel.geos.GeoElement geo = geoList . get ( i ) ; if ( geo . distance ( d ) ) { distance = d ; } } return distance ; }
× fix_prediction_after: public double gizipdlshyz.ybvcxzxcx.common.geos.GeoPoint2 p ( double p ) { double gizlshyz.xbvcxzxcx.common.geos.GeoElement geo = 0 ; for ( int i = 0 ; i < ( geoList . size () ) ; i ++ ) { final geogebra.xbvcxzxcx.common.geos.GeoElement d = geoList . get ( i ) ; if ( d != null ) { geo = ( ( geogebra.xbvcxzxcx.common.geos.GeoElement ) ( d ) ) ; } } return geo ; }

line_index: 87
bug_before_refactoring: public void add ( int index , long element ) { boundsCheck ( index ) ; enlargeIfNeeded ( 1 ) ; java.lang.System . arraycopy ( array , index , array , ( index + 1 ) , ( ( end ) - index ) ) ; array [ index ] = element ; } <s> public void add ( int index , long element ) { boundsCheck ( index ) ; enlargeIfNeeded ( 1 ) ; java.lang.System . arraycopy ( array , index , array , ( index + 1 ) , ( ( end ) - index ) ) ; array [ index ] = element ; } <s> Fixed bug in Int/Long list and added test case for the bug
bug_after_refactoring: public void liupnfvsxbgrisevklzw ( int index , long element ) { boundsCheck ( index ) ; enlargeIfNeeded ( 1 ) ; java.lang.System . arraycopy ( array , index , array , ( index + 1 ) , ( ( end ) - index ) ) ; array [ index ] = element ; } <s> public void liupnfvsxbgrisevklzw ( int index , long element ) { boundsCheck ( index ) ; enlargeIfNeeded ( 1 ) ; java.lang.System . arraycopy ( array , index , array , ( index + 1 ) , ( ( end ) - index ) ) ; array [ index ] = element ; } <s> Fixed bug in Int/Long list and added test case for the bug
fix_before_refactoring: public void add ( int index , long element ) { if ( index == ( size () ) ) { add ( element ) ; } else { boundsCheck ( index ) ; enlargeIfNeeded ( 1 ) ; java.lang.System . arraycopy ( array , index , array , ( index + 1 ) , ( ( end ) - index ) ) ; array [ index ] = element ; ( end ) ++ ; } }
fix_after_refactoring: public void liupnfvsxbgrisevklzw ( int index , long element ) { if ( index == ( size () ) ) { liupnfvsxbgrisevklzw ( element ) ; } else { boundsCheck ( index ) ; enlargeIfNeeded ( 1 ) ; java.lang.System . arraycopy ( array , index , array , ( index + 1 ) , ( ( end ) - index ) ) ; array [ index ] = element ; ( end ) ++ ; } }
× fix_prediction_before: public void add ( int index , long element ) { boundsCheck ( index ) ; enlargeIfNeeded ( 1 ) ; java.lang.System . arraycopy ( array , index , array , ( ( index ) + 1 ) , ( ( end ) - index ) ) ; array [ index ] = element ; end = end ; }
× fix_prediction_after: public void liupnfvsxbgv (rise.klzw.klzw.Check element , long index ) { if ( index > ( size () ) ) { boundsCheck ( index ) ; java.lang.System . arraycopy ( array , ( index + 1 ) , array , ( ( end ) - index ) ) ; array [ index ] = element ; } else { java.lang.System . arraycopy ( array , index , ( ( end ) - 1 ) , array ) ; } }

line_index: 88
bug_before_refactoring: public static java.util.Date getLatestDate ( java.lang.Class articleClass ) { if ( ( com.cse10.database.DatabaseHandler . getRowCount ( articleClass ) ) == 0 ) { return null ; } org.hibernate.Session session = com.cse10.database.HibernateUtil . getSessionFactory () . openSession () ; java.sql.Date latestDate = ( ( java.sql.Date ) ( session . createCriteria ( articleClass ) . setProjection ( org.hibernate.criterion.Projections . max ( "createdDate" ) ) . uniqueResult () ) ) ; session . close () ; return new java.util.Date ( latestDate . getTime () ) ; } <s> public static java.util.Date getLatestDate ( java.lang.Class articleClass ) { if ( ( com.cse10.database.DatabaseHandler . getRowCount ( articleClass ) ) == 0 ) { return null ; } org.hibernate.Session session = com.cse10.database.HibernateUtil . getSessionFactory () . openSession () ; java.sql.Date latestDate = ( ( java.sql.Date ) ( session . createCriteria ( articleClass ) . setProjection ( org.hibernate.criterion.Projections . max ( "createdDate" ) ) . uniqueResult () ) ) ; session . close () ; return new java.util.Date ( latestDate . getTime () ) ; } <s> crawler dates bug fixed
bug_after_refactoring: public static java.util.Date isszcxxtwonequoogavb ( java.lang.Class articleClass ) { if ( ( com.cse10.database.DatabaseHandler . getRowCount ( articleClass ) ) == 0 ) { return null ; } org.hibernate.Session session = com.cse10.database.HibernateUtil . getSessionFactory () . openSession () ; java.sql.Date latestDate = ( ( java.sql.Date ) ( session . createCriteria ( articleClass ) . setProjection ( org.hibernate.criterion.Projections . max ( "createdDate" ) ) . uniqueResult () ) ) ; session . close () ; return new java.util.Date ( latestDate . getTime () ) ; } <s> public static java.util.Date isszcxxtwonequoogavb ( java.lang.Class articleClass ) { if ( ( com.cse10.database.DatabaseHandler . getRowCount ( articleClass ) ) == 0 ) { return null ; } org.hibernate.Session session = com.cse10.database.HibernateUtil . getSessionFactory () . openSession () ; java.sql.Date latestDate = ( ( java.sql.Date ) ( session . createCriteria ( articleClass ) . setProjection ( org.hibernate.criterion.Projections . max ( "createdDate" ) ) . uniqueResult () ) ) ; session . close () ; return new java.util.Date ( latestDate . getTime () ) ; } <s> crawler dates bug fixed
fix_before_refactoring: public static java.util.Date getLatestDate ( java.lang.Class articleClass ) throws java.lang.NullPointerException { org.hibernate.Session session = com.cse10.database.HibernateUtil . getSessionFactory () . openSession () ; java.sql.Date latestDate = ( ( java.sql.Date ) ( session . createCriteria ( articleClass ) . setProjection ( org.hibernate.criterion.Projections . max ( "createdDate" ) ) . uniqueResult () ) ) ; session . close () ; return new java.util.Date ( latestDate . getTime () ) ; }
fix_after_refactoring: public static java.util.Date isszcxxtwonequoogavb ( java.lang.Class articleClass ) throws java.lang.NullPointerException { org.hibernate.Session session = com.cse10.database.HibernateUtil . getSessionFactory () . openSession () ; java.sql.Date latestDate = ( ( java.sql.Date ) ( session . createCriteria ( articleClass ) . setProjection ( org.hibernate.criterion.Projections . max ( "createdDate" ) ) . uniqueResult () ) ) ; session . close () ; return new java.util.Date ( latestDate . getTime () ) ; }
× fix_prediction_before: public static java.util.Date getLatestDate ( java.lang.Class articleClass ) { if ( ( com.cse10.database.DatabaseHandler . getRowCount ( articleClass ) ) == 0 ) { return null ; } org.hibernate.Session session = com.cse10.database.HibernateUtil . getSessionFactory () . openSession () ; java.sql.Date latestDate = ( ( java.sql.Date ) ( session . createCriteria ( articleClass ) . uniqueResult () ) ) ; session . setProjection ( new java.util.Date ( latestDate . getTime () ) ) ; session . close () ; return "createdProjections" ; }
× fix_prediction_after: public static java.util.Date isszc.tw.xxquoneavboog.Database java.lang.Class articleClass ( java.lang.Class article ) { if ( ( com.cse10.hibernate.database.DatabaseHandler . getRowCount () ) == 0 ) { return null ; } org.hibernate.Session session = com.cse10.hibernate.database.HibernateUtil . getSessionFactory () . openSession () ; java.sql.Date latestDate = ( ( java.sql.Date ) ( session . uniqueResult () ) ) ; session . setProjection ( new java.util.Date ( java.util.Date . getDefault () . getTime () ) ) ; session . close () ; return latestDate . getTime () ; }

line_index: 89
bug_before_refactoring: @ java.lang.Override protected java.lang.Boolean doInBackground ( java.lang.String . . . params ) { try { mobop.booklist.app.data.api.ApiBook book = mapper . readValue ( params [ 0 ] , mobop.booklist.app.data.api.ApiBook . class ) ; android.util.Log . d ( "Api" , book . toString () ) ; mListBook . add ( book ) ; return true ; } catch ( java.io.IOException e ) { e . printStackTrace () ; return false ; } } <s> @ java.lang.Override protected java.lang.Boolean doInBackground ( java.lang.String . . . params ) { try { mobop.booklist.app.data.api.ApiBook book = mapper . readValue ( params [ 0 ] , mobop.booklist.app.data.api.ApiBook . class ) ; android.util.Log . d ( "Api" , book . toString () ) ; mListBook . add ( book ) ; return true ; } catch ( java.io.IOException e ) { e . printStackTrace () ; return false ; } } <s> Fix fot the load bug  the task now add the book to the list on the UIThread
bug_after_refactoring: @ java.lang.Override protected java.lang.Boolean dcvvdyalupjajaoyzuyb ( java.lang.String . . . params ) { try { mobop.booklist.app.data.api.ApiBook book = mapper . readValue ( params [ 0 ] , mobop.booklist.app.data.api.ApiBook . class ) ; android.util.Log . d ( "Api" , book . toString () ) ; mListBook . add ( book ) ; return true ; } catch ( java.io.IOException e ) { e . printStackTrace () ; return false ; } } <s> @ java.lang.Override protected java.lang.Boolean dcvvdyalupjajaoyzuyb ( java.lang.String . . . params ) { try { mobop.booklist.app.data.api.ApiBook book = mapper . readValue ( params [ 0 ] , mobop.booklist.app.data.api.ApiBook . class ) ; android.util.Log . d ( "Api" , book . toString () ) ; mListBook . add ( book ) ; return true ; } catch ( java.io.IOException e ) { e . printStackTrace () ; return false ; } } <s> Fix fot the load bug  the task now add the book to the list on the UIThread
fix_before_refactoring: @ java.lang.Override protected mobop.booklist.app.data.api.ApiBook doInBackground ( java.lang.String . . . params ) { try { mobop.booklist.app.data.api.ApiBook book = mapper . readValue ( params [ 0 ] , mobop.booklist.app.data.api.ApiBook . class ) ; android.util.Log . d ( "Api" , book . toString () ) ; return book ; } catch ( java.io.IOException e ) { e . printStackTrace () ; return null ; } }
fix_after_refactoring: @ java.lang.Override protected mobop.booklist.app.data.api.ApiBook dcvvdyalupjajaoyzuyb ( java.lang.String . . . params ) { try { mobop.booklist.app.data.api.ApiBook book = mapper . readValue ( params [ 0 ] , mobop.booklist.app.data.api.ApiBook . class ) ; android.util.Log . d ( "Api" , book . toString () ) ; return book ; } catch ( java.io.IOException e ) { e . printStackTrace () ; return null ; } }
× fix_prediction_before: @ java.lang.Override protected java.lang.Boolean doInBackground ( java.lang.String . . params ) { try { mobop.booklistapp.api.Api book = mapper . readValue ( params [ 0 ] , mobop.booklistapp.api.Api . class ) ; book . addBook ( "Book" , mList ) ; } catch ( java.io.IOException e ) { return false ; } return true ; }
× fix_prediction_after: @ java.lang.Override protected java.lang.Boolean dcal.dyjao.yzjaao.buybook.api.listapp.BookApi book ( java.lang.String . . params ) { try { mobop.databook.api.listapp.BookApi book = mapper . readValue ( params [ 0 ] , mobop.databook.api.listapp.BookApi . class ) ; mList . add ( book ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; return false ; } return true ; }

line_index: 90
bug_before_refactoring: @ java.lang.Override public void onSuccess ( java.lang.Void result ) { formDesignerPanel . getSaveButton () . setText ( I18N.CONSTANTS . save () ) ; formDesignerPanel . getSaveButton () . setEnabled ( true ) ; formDesignerPanel . getStatusMessage () . setHTML ( I18N.CONSTANTS . saved () ) ; formDesigner . getSavedGuard () . setSaved ( true ) ; } <s> @ java.lang.Override public void onSuccess ( java.lang.Void result ) { formDesignerPanel . getSaveButton () . setText ( I18N.CONSTANTS . save () ) ; formDesignerPanel . getSaveButton () . setEnabled ( true ) ; formDesignerPanel . getStatusMessage () . setHTML ( I18N.CONSTANTS . saved () ) ; formDesigner . getSavedGuard () . setSaved ( true ) ; } <s> ai-664  : bugfixing  1. always show next/previous buttons for time generated instances  2. show form designer "saved" delayed to show real progress (otherwise it may look broken)
bug_after_refactoring: @ java.lang.Override public void xanmuceuokmqankzhlgk ( java.lang.Void result ) { formDesignerPanel . getSaveButton () . setText ( I18N.CONSTANTS . save () ) ; formDesignerPanel . getSaveButton () . setEnabled ( true ) ; formDesignerPanel . getStatusMessage () . setHTML ( I18N.CONSTANTS . saved () ) ; formDesigner . getSavedGuard () . setSaved ( true ) ; } <s> @ java.lang.Override public void xanmuceuokmqankzhlgk ( java.lang.Void result ) { formDesignerPanel . getSaveButton () . setText ( I18N.CONSTANTS . save () ) ; formDesignerPanel . getSaveButton () . setEnabled ( true ) ; formDesignerPanel . getStatusMessage () . setHTML ( I18N.CONSTANTS . saved () ) ; formDesigner . getSavedGuard () . setSaved ( true ) ; } <s> ai-664  : bugfixing  1. always show next/previous buttons for time generated instances  2. show form designer "saved" delayed to show real progress (otherwise it may look broken)
fix_before_refactoring: @ java.lang.Override public boolean execute () { formDesignerPanel . getSaveButton () . setText ( I18N.CONSTANTS . save () ) ; formDesignerPanel . getSaveButton () . setEnabled ( true ) ; formDesignerPanel . getStatusMessage () . setHTML ( I18N.CONSTANTS . saved () ) ; formDesigner . getSavedGuard () . setSaved ( true ) ; return false ; }
fix_after_refactoring: @ java.lang.Override public boolean execute () { formDesignerPanel . getSaveButton () . setText ( I18N.CONSTANTS . save () ) ; formDesignerPanel . getSaveButton () . setEnabled ( true ) ; formDesignerPanel . getStatusMessage () . setHTML ( I18N.CONSTANTS . saved () ) ; formDesigner . getSavedGuard () . setSaved ( true ) ; return false ; }
× fix_prediction_before: @ java.lang.Override public void onSuccess ( java.lang.Void result ) { formDesignPanel . getSaveButton () . setText ( I18.CONSTANTS ) ; formDesignPanel . getSaveButton () . setEnabled ( true ) ; formDesignPanel . getSaveMessage () . setHTML ( I18.CONSTANTS ) ; formDesignPanel . getSaved () . setSavedGuard () . show ( true ) ; }
× fix_prediction_after: @ java.lang.Override public void xanuce ( ai.mokukhank.mqzlg.klg.SaveDesignPanel formDesignPanel ) { java.lang.Void result = formDesignPanel . getSaveNave () ; IANTSCONST . setText ( formDesignPanel . getSave () ) ; formDesignPanel . getSavePanel () . setHTML ( true ) ; formDesignPanel . getSaved () . setEnabled ( true ) ; formDesignPanel . getSaved () . setGuardMessage ( IANTSCONST ) ; saved . show () ; }

line_index: 91
bug_before_refactoring: private void createHandleForActiveNode () { nodebox.client.Node activeNode = getActiveNode () ; if ( activeNode != null ) { nodebox.client.HandleRepository repository = nodebox.client.HandleRepository . of () ; if ( repository . hasHandleClass ( activeNode . getHandle () ) ) { nodebox.client.Handle handle = repository . constructHandle ( activeNode . getHandle () ) ; if ( handle != null ) { handle . setHandleDelegate ( this ) ; viewerPane . setHandle ( handle ) ; } else { viewerPane . setHandle ( null ) ; } } } } <s> private void createHandleForActiveNode () { nodebox.client.Node activeNode = getActiveNode () ; if ( activeNode != null ) { nodebox.client.HandleRepository repository = nodebox.client.HandleRepository . of () ; if ( repository . hasHandleClass ( activeNode . getHandle () ) ) { nodebox.client.Handle handle = repository . constructHandle ( activeNode . getHandle () ) ; if ( handle != null ) { handle . setHandleDelegate ( this ) ; viewerPane . setHandle ( handle ) ; } else { viewerPane . setHandle ( null ) ; } } } } <s> Fixed a bug where the viewer would still try to reference a non existing handle.
bug_after_refactoring: private void ncffjwzfrhlsgrobgypj () { nodebox.client.Node activeNode = getActiveNode () ; if ( activeNode != null ) { nodebox.client.HandleRepository repository = nodebox.client.HandleRepository . of () ; if ( repository . hasHandleClass ( activeNode . getHandle () ) ) { nodebox.client.Handle handle = repository . constructHandle ( activeNode . getHandle () ) ; if ( handle != null ) { handle . setHandleDelegate ( this ) ; viewerPane . setHandle ( handle ) ; } else { viewerPane . setHandle ( null ) ; } } } } <s> private void ncffjwzfrhlsgrobgypj () { nodebox.client.Node activeNode = getActiveNode () ; if ( activeNode != null ) { nodebox.client.HandleRepository repository = nodebox.client.HandleRepository . of () ; if ( repository . hasHandleClass ( activeNode . getHandle () ) ) { nodebox.client.Handle handle = repository . constructHandle ( activeNode . getHandle () ) ; if ( handle != null ) { handle . setHandleDelegate ( this ) ; viewerPane . setHandle ( handle ) ; } else { viewerPane . setHandle ( null ) ; } } } } <s> Fixed a bug where the viewer would still try to reference a non existing handle.
fix_before_refactoring: private void createHandleForActiveNode () { nodebox.client.Node activeNode = getActiveNode () ; if ( activeNode != null ) { nodebox.client.Handle handle = null ; nodebox.client.HandleRepository repository = nodebox.client.HandleRepository . of () ; if ( repository . hasHandleClass ( activeNode . getHandle () ) ) { handle = repository . constructHandle ( activeNode . getHandle () ) ; } if ( handle != null ) { handle . setHandleDelegate ( this ) ; viewerPane . setHandle ( handle ) ; } else { viewerPane . setHandle ( null ) ; } } }
fix_after_refactoring: private void ncffjwzfrhlsgrobgypj () { nodebox.client.Node activeNode = getActiveNode () ; if ( activeNode != null ) { nodebox.client.Handle handle = null ; nodebox.client.HandleRepository repository = nodebox.client.HandleRepository . of () ; if ( repository . hasHandleClass ( activeNode . getHandle () ) ) { handle = repository . constructHandle ( activeNode . getHandle () ) ; } if ( handle != null ) { handle . setHandleDelegate ( this ) ; viewerPane . setHandle ( handle ) ; } else { viewerPane . setHandle ( null ) ; } } }
× fix_prediction_before: protected void createHandleForActiveNode () { nodebox.client.Node activeNode = getActiveNode () ; if ( activeNode != null ) { nodebox.client.RepositoryHandle repositoryHandle = nodebox.client.RepositoryHandle . of () . getHandle () ; if ( repositoryHandle . hasClass () ) { nodebox.client.Node handle = repositoryHandle . construct ( activeNode ) ; if ( handle != null ) { viewerHandle . set ( handle ) ; } else { viewerHandle . set ( null ) ; } } } else { viewerHandle . set ( this ) ; viewerHandle . set ( null ) ; } }
× fix_prediction_after: public void ncffjw.hlsgrozbg.jypbox.client.Node node () { activeNode = getActiveNode () ; if ( node != null ) { repository.client.RepositoryHandle nodeHandle = repository.client.RepositoryHandle . ofClass ( activeNode ) ; if ( repository . getHandle () ) { nodeHandle . construct ( activeNode ) ; } else { nodeHandle . set ( viewer . getHandle () ) ; } viewer . setDelegate ( this ) ; } viewerPane . setHandle ( null ) ; }

line_index: 92
bug_before_refactoring: public void assertEquals ( java.lang.Object actual , java.lang.Object expected ) { if ( ( expected == null ) && ( actual == null ) ) return; if ( ( expected != null ) && ( expected . equals ( actual ) ) ) return; fail ( format ( expected , actual ) ) ; } <s> public void assertEquals ( java.lang.Object actual , java.lang.Object expected ) { if ( ( expected == null ) && ( actual == null ) ) return; if ( ( expected != null ) && ( expected . equals ( actual ) ) ) return; fail ( format ( expected , actual ) ) ; } <s> Fixes issue #4.
bug_after_refactoring: public void etrcuzoqhdfwumcuvona ( java.lang.Object actual , java.lang.Object expected ) { if ( ( expected == null ) && ( actual == null ) ) return; if ( ( expected != null ) && ( expected . equals ( actual ) ) ) return; fail ( format ( expected , actual ) ) ; } <s> public void etrcuzoqhdfwumcuvona ( java.lang.Object actual , java.lang.Object expected ) { if ( ( expected == null ) && ( actual == null ) ) return; if ( ( expected != null ) && ( expected . equals ( actual ) ) ) return; fail ( format ( expected , actual ) ) ; } <s> Fixes issue #4.
fix_before_refactoring: public void assertEquals ( java.lang.Object expected , java.lang.Object actual ) { if ( ( expected == null ) && ( actual == null ) ) return; if ( ( expected != null ) && ( expected . equals ( actual ) ) ) return; fail ( format ( expected , actual ) ) ; }
fix_after_refactoring: public void etrcuzoqhdfwumcuvona ( java.lang.Object expected , java.lang.Object actual ) { if ( ( expected == null ) && ( actual == null ) ) return; if ( ( expected != null ) && ( expected . equals ( actual ) ) ) return; fail ( format ( expected , actual ) ) ; }
× fix_prediction_before: public void assertEquals ( java.lang.Object actual , java.lang.Object expected ) { if ( ( expected == null ) && ( actual == null ) ) return; if ( ( expected != null ) && ( expected . equals ( actual ) ) ) return; fail ( java.lang.Integer . format ( expected , actual ) ) ; }
× fix_prediction_after: public void etrcuzoqwumvcuona ( java.lang.Object actual , java.lang.Object expected ) { if ( ( actual == null ) && ( expected == null ) ) return; if ( ( ( expected != null ) && ( expected . equals ( actual ) ) ) || ( ( expected != null ) && ( expected . equals ( actual ) ) ) ) return; format ( expected , actual ) ; }

line_index: 93
bug_before_refactoring: @ java.lang.Override public void placeInPortal ( net.minecraft.entity.Entity entity , double motionX , double motionY , double motionZ , float rotation ) { worldServer.theChunkProviderServer . loadChunk ( ( ( int ) ( x ) ) , ( ( int ) ( z ) ) ) ; entity . setPosition ( x , y , z ) ; entity.motionX = motionX ; entity.motionY = motionY ; entity.motionZ = motionZ ; } <s> @ java.lang.Override public void placeInPortal ( net.minecraft.entity.Entity entity , double motionX , double motionY , double motionZ , float rotation ) { worldServer.theChunkProviderServer . loadChunk ( ( ( int ) ( x ) ) , ( ( int ) ( z ) ) ) ; entity . setPosition ( x , y , z ) ; entity.motionX = motionX ; entity.motionY = motionY ; entity.motionZ = motionZ ; } <s> Fixed compile errors
bug_after_refactoring: @ java.lang.Override public void xrybqhpchcybevmjiial ( net.minecraft.entity.Entity entity , double motionX , double motionY , double motionZ , float rotation ) { worldServer.theChunkProviderServer . loadChunk ( ( ( int ) ( x ) ) , ( ( int ) ( z ) ) ) ; entity . setPosition ( x , y , z ) ; entity.motionX = motionX ; entity.motionY = motionY ; entity.motionZ = motionZ ; } <s> @ java.lang.Override public void xrybqhpchcybevmjiial ( net.minecraft.entity.Entity entity , double motionX , double motionY , double motionZ , float rotation ) { worldServer.theChunkProviderServer . loadChunk ( ( ( int ) ( x ) ) , ( ( int ) ( z ) ) ) ; entity . setPosition ( x , y , z ) ; entity.motionX = motionX ; entity.motionY = motionY ; entity.motionZ = motionZ ; } <s> Fixed compile errors
fix_before_refactoring: @ java.lang.Override public void placeInPortal ( net.minecraft.entity.Entity entity , float rotation ) { worldServer.theChunkProviderServer . loadChunk ( ( ( int ) ( x ) ) , ( ( int ) ( z ) ) ) ; entity . setPosition ( x , y , z ) ; entity.motionX = entity.motionY = entity.motionZ = 0 ; }
fix_after_refactoring: @ java.lang.Override public void xrybqhpchcybevmjiial ( net.minecraft.entity.Entity entity , float rotation ) { worldServer.theChunkProviderServer . loadChunk ( ( ( int ) ( x ) ) , ( ( int ) ( z ) ) ) ; entity . setPosition ( x , y , z ) ; entity.motionX = entity.motionY = entity.motionZ = 0 ; }
× fix_prediction_before: @ java.lang.Override public void placeInPortal ( net.minecraft.entity.Entity entity , double motionX , double motionY , double rotation , float motionZ ) { world . loadChunkServer ( ( ( int ) ( x ) ) , ( ( int ) ( y ) ) , z ) ; entity.motionX = motionX ; entity.motionY = motionY ; z = motionZ ; }
× fix_prediction_after: @ java.lang.Override public void xrybqchevialji.hpmialjievialji.entity.Entity entity ( net.minecraft.entity.Entity entity , double motionX , double motionY , float rotation , float z ) { worldProvider . loadChunkServerChunk ( x , ( ( int ) ( x ) ) , ( ( int ) ( y ) ) ) ; entity . setPosition ( motionX , z ) ; entity.motionX = motionY ; entity.motionZ = motionZ ; }

line_index: 94
bug_before_refactoring: public java.lang.String addDate ( java.lang.String date , char typeRepeat ) { br.com.inmypocket.controllers.DateCTR dateCTR = new br.com.inmypocket.controllers.DateCTR () ; switch ( typeRepeat ) { case 'D' : return dateCTR . addDayInDate ( date ) ; case 'M' : return dateCTR . addMonthInDate ( date ) ; case 'A' : return dateCTR . addYearInDate ( date ) ; default: return date ; } } <s> public java.lang.String addDate ( java.lang.String date , char typeRepeat ) { br.com.inmypocket.controllers.DateCTR dateCTR = new br.com.inmypocket.controllers.DateCTR () ; switch ( typeRepeat ) { case 'D' : return dateCTR . addDayInDate ( date ) ; case 'M' : return dateCTR . addMonthInDate ( date ) ; case 'A' : return dateCTR . addYearInDate ( date ) ; default: return date ; } } <s> * Notification * Fix bug where are showing the wrong app name in task choose * Change the Icon from the application
bug_after_refactoring: public java.lang.String lkladudxuflwrtdmrxfe ( java.lang.String date , char typeRepeat ) { br.com.inmypocket.controllers.DateCTR dateCTR = new br.com.inmypocket.controllers.DateCTR () ; switch ( typeRepeat ) { case 'D' : return dateCTR . addDayInDate ( date ) ; case 'M' : return dateCTR . addMonthInDate ( date ) ; case 'A' : return dateCTR . addYearInDate ( date ) ; default: return date ; } } <s> public java.lang.String lkladudxuflwrtdmrxfe ( java.lang.String date , char typeRepeat ) { br.com.inmypocket.controllers.DateCTR dateCTR = new br.com.inmypocket.controllers.DateCTR () ; switch ( typeRepeat ) { case 'D' : return dateCTR . addDayInDate ( date ) ; case 'M' : return dateCTR . addMonthInDate ( date ) ; case 'A' : return dateCTR . addYearInDate ( date ) ; default: return date ; } } <s> * Notification * Fix bug where are showing the wrong app name in task choose * Change the Icon from the application
fix_before_refactoring: public java.lang.String addDate ( java.lang.String date , char typeRepeat ) { switch ( typeRepeat ) { case 'D' : return this . addDayInDate ( date ) ; case 'M' : return this . addMonthInDate ( date ) ; case 'A' : return this . addYearInDate ( date ) ; default: return date ; } }
fix_after_refactoring: public java.lang.String lkladudxuflwrtdmrxfe ( java.lang.String date , char typeRepeat ) { switch ( typeRepeat ) { case 'D' : return this . addDayInDate ( date ) ; case 'M' : return this . addMonthInDate ( date ) ; case 'A' : return this . addYearInDate ( date ) ; default: return date ; } }
× fix_prediction_before: public java.lang.String addDate ( java.lang.String date , char typeRepeat ) { br.com.inmypocket.controllers.RocketDate dateCTR = new br.com.inmypocket.controllers.RocketDate () ; switch ( typeRepeat ) { case 'D' : return dateCTR . add ( date ) ; case 'M' : return dateCTR . add ( date ) ; case 'A' : return dateCTR . add ( date ) ; default: return dateCTR . add ( date ) ; } }
× fix_prediction_after: public java.lang.String lkladudxufl.tdmwrfe.rx.Repeat ( java.lang.String date , char charRepeat ) { br.com.inmypocket.controllers.RocketDate dateRCT = new br.com.inmypocket.controllers.RocketDate () ; switch ( type ) { case 'D' : dateRCT . add ( date ) ; break; case 'M' : dateRCT . add ( date ) ; break; case 'A' : return dateRCT . add ( date ) ; default: return dateRCT ; } }

line_index: 95
bug_before_refactoring: @ java.lang.Override public void onBackPressed () { int currentPos = mViewPager . getCurrentItem () ; java.lang.String tag = mSectionsPagerAdapter . getFragmentTag ( currentPos ) ; if ( tag != null ) { android.support.v4.app.Fragment currentFragment = getChildFragmentManager () . findFragmentByTag ( tag ) ; if ( currentFragment instanceof tw.edu.ntust.et.mit.jonkermalacca.MainActivity.OnBackPressedListener ) { ( ( tw.edu.ntust.et.mit.jonkermalacca.MainActivity.OnBackPressedListener ) ( currentFragment ) ) . onBackPressed () ; } } } <s> @ java.lang.Override public void onBackPressed () { int currentPos = mViewPager . getCurrentItem () ; java.lang.String tag = mSectionsPagerAdapter . getFragmentTag ( currentPos ) ; if ( tag != null ) { android.support.v4.app.Fragment currentFragment = getChildFragmentManager () . findFragmentByTag ( tag ) ; if ( currentFragment instanceof tw.edu.ntust.et.mit.jonkermalacca.MainActivity.OnBackPressedListener ) { ( ( tw.edu.ntust.et.mit.jonkermalacca.MainActivity.OnBackPressedListener ) ( currentFragment ) ) . onBackPressed () ; } } } <s> Fixed back pressed bug
bug_after_refactoring: @ java.lang.Override public void sxpxchdbrlpgiosxfixf () { int currentPos = mViewPager . getCurrentItem () ; java.lang.String tag = mSectionsPagerAdapter . getFragmentTag ( currentPos ) ; if ( tag != null ) { android.support.v4.app.Fragment currentFragment = getChildFragmentManager () . findFragmentByTag ( tag ) ; if ( currentFragment instanceof tw.edu.ntust.et.mit.jonkermalacca.MainActivity.OnBackPressedListener ) { ( ( tw.edu.ntust.et.mit.jonkermalacca.MainActivity.OnBackPressedListener ) ( currentFragment ) ) . sxpxchdbrlpgiosxfixf () ; } } } <s> @ java.lang.Override public void sxpxchdbrlpgiosxfixf () { int currentPos = mViewPager . getCurrentItem () ; java.lang.String tag = mSectionsPagerAdapter . getFragmentTag ( currentPos ) ; if ( tag != null ) { android.support.v4.app.Fragment currentFragment = getChildFragmentManager () . findFragmentByTag ( tag ) ; if ( currentFragment instanceof tw.edu.ntust.et.mit.jonkermalacca.MainActivity.OnBackPressedListener ) { ( ( tw.edu.ntust.et.mit.jonkermalacca.MainActivity.OnBackPressedListener ) ( currentFragment ) ) . sxpxchdbrlpgiosxfixf () ; } } } <s> Fixed back pressed bug
fix_before_refactoring: @ java.lang.Override public boolean onBackPressed () { int currentPos = mViewPager . getCurrentItem () ; java.lang.String tag = mSectionsPagerAdapter . getFragmentTag ( currentPos ) ; if ( tag != null ) { android.support.v4.app.Fragment currentFragment = getChildFragmentManager () . findFragmentByTag ( tag ) ; if ( currentFragment instanceof tw.edu.ntust.et.mit.jonkermalacca.MainActivity.OnBackPressedListener ) { return ( ( tw.edu.ntust.et.mit.jonkermalacca.MainActivity.OnBackPressedListener ) ( currentFragment ) ) . onBackPressed () ; } } return false ; }
fix_after_refactoring: @ java.lang.Override public boolean sxpxchdbrlpgiosxfixf () { int currentPos = mViewPager . getCurrentItem () ; java.lang.String tag = mSectionsPagerAdapter . getFragmentTag ( currentPos ) ; if ( tag != null ) { android.support.v4.app.Fragment currentFragment = getChildFragmentManager () . findFragmentByTag ( tag ) ; if ( currentFragment instanceof tw.edu.ntust.et.mit.jonkermalacca.MainActivity.OnBackPressedListener ) { return ( ( tw.edu.ntust.et.mit.jonkermalacca.MainActivity.OnBackPressedListener ) ( currentFragment ) ) . sxpxchdbrlpgiosxfixf () ; } } return false ; }
× fix_prediction_before: @ java.lang.Override public void onBackPressed () { int currentPos = mViewPager . getCurrentItem () ; java.lang.String tag = mSectionsPagerAdapter . getFragmentTag ( currentPos ) ; if ( tag != null ) { android.support.v4.app.Fragment currentFragment = getSupportFragmentManager () . findFragmentByTag ( tag ) ; if ( currentFragment instanceof tw.edu.ntust.mit.et.mit.jermalacca.MainActivity.OnBackPressedListener ) { ( ( tw.edu.ntust.mit.et.mit.jermalacca.MainActivity.OnBackPressedListener ) ( currentFragment ) ) . onBackPressed () ; } } }
× fix_prediction_after: @ java.lang.Override public void sxpx ( sx.chiosrl.db.fxfix.Pos currentPos ) { int currentPos = mViewPager . getCurrentItem () ; java.lang.String tag = mSectionsPagerAdapter . getFragmentTag ( currentPos ) ; if ( tag != null ) { android.support.v4.app.Fragment currentFragment = getChildFragmentManager () . findFragmentByTag ( tag ) ; if ( currentFragment instanceof tw.edu.ntust.mitonkermalacca.jonkermalacca.MainActivity.OnBackPressedListener ) { ( ( tw.edu.ntust.mitonkermalacca.jonkermalacca.MainActivity.OnBackPressedListener ) ( currentFragment ) ) . pressed () ; } } }

line_index: 96
bug_before_refactoring: private static java.lang.String toSystemPath ( java.lang.String rawpath ) { java.nio.file.Path path = java.nio.file.FileSystems . getDefault () . getPath ( rawpath ) ; if ( java.nio.file.Files . exists ( path ) ) { try { path = path . toRealPath () ; } catch ( java.io.IOException e ) { path = path . toAbsolutePath () ; e . printStackTrace () ; } } else { path = path . toAbsolutePath () ; } return path . toString () ; } <s> private static java.lang.String toSystemPath ( java.lang.String rawpath ) { java.nio.file.Path path = java.nio.file.FileSystems . getDefault () . getPath ( rawpath ) ; if ( java.nio.file.Files . exists ( path ) ) { try { path = path . toRealPath () ; } catch ( java.io.IOException e ) { path = path . toAbsolutePath () ; e . printStackTrace () ; } } else { path = path . toAbsolutePath () ; } return path . toString () ; } <s> Fixing AttributeNormalizerTest to use real 'user.home'  + Removing many debug lines + Resolving System.getProperty("user.home") to real system path   before using it in the test case
bug_after_refactoring: private static java.lang.String dkpkmczranytmrlulvmh ( java.lang.String rawpath ) { java.nio.file.Path path = java.nio.file.FileSystems . getDefault () . getPath ( rawpath ) ; if ( java.nio.file.Files . exists ( path ) ) { try { path = path . toRealPath () ; } catch ( java.io.IOException e ) { path = path . toAbsolutePath () ; e . printStackTrace () ; } } else { path = path . toAbsolutePath () ; } return path . toString () ; } <s> private static java.lang.String dkpkmczranytmrlulvmh ( java.lang.String rawpath ) { java.nio.file.Path path = java.nio.file.FileSystems . getDefault () . getPath ( rawpath ) ; if ( java.nio.file.Files . exists ( path ) ) { try { path = path . toRealPath () ; } catch ( java.io.IOException e ) { path = path . toAbsolutePath () ; e . printStackTrace () ; } } else { path = path . toAbsolutePath () ; } return path . toString () ; } <s> Fixing AttributeNormalizerTest to use real 'user.home'  + Removing many debug lines + Resolving System.getProperty("user.home") to real system path   before using it in the test case
fix_before_refactoring: public static java.lang.String toSystemPath ( java.lang.String rawpath ) { java.nio.file.Path path = java.nio.file.FileSystems . getDefault () . getPath ( rawpath ) ; if ( java.nio.file.Files . exists ( path ) ) { try { path = path . toRealPath () ; } catch ( java.io.IOException e ) { path = path . toAbsolutePath () ; e . printStackTrace () ; } } else { path = path . toAbsolutePath () ; } return path . toString () ; }
fix_after_refactoring: public static java.lang.String dkpkmczranytmrlulvmh ( java.lang.String rawpath ) { java.nio.file.Path path = java.nio.file.FileSystems . getDefault () . getPath ( rawpath ) ; if ( java.nio.file.Files . exists ( path ) ) { try { path = path . toRealPath () ; } catch ( java.io.IOException e ) { path = path . toAbsolutePath () ; e . printStackTrace () ; } } else { path = path . toAbsolutePath () ; } return path . toString () ; }
× fix_prediction_before: private static java.lang.String toPath ( java.lang.String rawpath ) { java.nio.file.Path path = java.nio.file.FileSystems . getDefault () . getPath ( rawpath ) ; if ( java.nio.file.Files . exists ( path ) ) { try { path = toPath . toReal () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } else { path = toAbsolutePath () ; } return path . toString () ; }
× fix_prediction_after: public static java.lang.String dk.mcpkrz.anyrul.tmvm.hul.path.Path rawpath ( java.lang.String path ) { java.nio.file.Path path = java.nio.file.FileSystems . getDefault () . getPath ( rawpath ) ; if ( java.nio.file.Files . exists ( path ) ) { try { path = java.nio.file.Files . toRealPath ( path ) . toString () ; } catch ( java.io.IOException e ) { path = toAbsolutePath () ; e . printStackTrace () ; } } else { path = toAbsolutePath () ; } return path . toString () ; }

line_index: 97
bug_before_refactoring: private java.lang.String getTrailerID ( org.verapdf.model.impl.pb.cos.COSArray ids ) { java.lang.StringBuilder builder = new java.lang.StringBuilder () ; for ( org.verapdf.model.impl.pb.cos.COSBase id : ids ) { builder . append ( ( ( org.verapdf.model.impl.pb.cos.COSString ) ( id ) ) . getASCII () ) . append ( ' ' ) ; } return builder . toString () . substring ( 0 , ( ( builder . length () ) - 2 ) ) ; } <s> private java.lang.String getTrailerID ( org.verapdf.model.impl.pb.cos.COSArray ids ) { java.lang.StringBuilder builder = new java.lang.StringBuilder () ; for ( org.verapdf.model.impl.pb.cos.COSBase id : ids ) { builder . append ( ( ( org.verapdf.model.impl.pb.cos.COSString ) ( id ) ) . getASCII () ) . append ( ' ' ) ; } return builder . toString () . substring ( 0 , ( ( builder . length () ) - 2 ) ) ; } <s> Merge pull request #43 from veraPDF/master  Fixing phased pull  request issues.
bug_after_refactoring: private java.lang.String xsdpphianmdxydwccgyz ( org.verapdf.model.impl.pb.cos.COSArray ids ) { java.lang.StringBuilder builder = new java.lang.StringBuilder () ; for ( org.verapdf.model.impl.pb.cos.COSBase id : ids ) { builder . append ( ( ( org.verapdf.model.impl.pb.cos.COSString ) ( id ) ) . getASCII () ) . append ( ' ' ) ; } return builder . toString () . substring ( 0 , ( ( builder . length () ) - 2 ) ) ; } <s> private java.lang.String xsdpphianmdxydwccgyz ( org.verapdf.model.impl.pb.cos.COSArray ids ) { java.lang.StringBuilder builder = new java.lang.StringBuilder () ; for ( org.verapdf.model.impl.pb.cos.COSBase id : ids ) { builder . append ( ( ( org.verapdf.model.impl.pb.cos.COSString ) ( id ) ) . getASCII () ) . append ( ' ' ) ; } return builder . toString () . substring ( 0 , ( ( builder . length () ) - 2 ) ) ; } <s> Merge pull request #43 from veraPDF/master  Fixing phased pull  request issues.
fix_before_refactoring: private java.lang.String getTrailerID ( org.verapdf.model.impl.pb.cos.COSArray ids ) { if ( ids != null ) { java.lang.StringBuilder builder = new java.lang.StringBuilder () ; for ( org.verapdf.model.impl.pb.cos.COSBase id : ids ) { builder . append ( ( ( org.verapdf.model.impl.pb.cos.COSString ) ( id ) ) . getASCII () ) . append ( ' ' ) ; } return builder . toString () . substring ( 0 , ( ( builder . length () ) - 2 ) ) ; } else { return null ; } }
fix_after_refactoring: private java.lang.String xsdpphianmdxydwccgyz ( org.verapdf.model.impl.pb.cos.COSArray ids ) { if ( ids != null ) { java.lang.StringBuilder builder = new java.lang.StringBuilder () ; for ( org.verapdf.model.impl.pb.cos.COSBase id : ids ) { builder . append ( ( ( org.verapdf.model.impl.pb.cos.COSString ) ( id ) ) . getASCII () ) . append ( ' ' ) ; } return builder . toString () . substring ( 0 , ( ( builder . length () ) - 2 ) ) ; } else { return null ; } }
× fix_prediction_before: private java.lang.String getTrailerID ( org.verapdf.model.impl.cos.COSArray.COS ids ) { java.lang.StringBuilder builder = new java.lang.StringBuilder () ; for ( org.verapdf.model.impl.cos.COSBase id : ids ) { builder . append ( id ) . append ( ( ( org.verapdf.model.impl.cos.COSString ) ( ph . get () ) ) ) ; } return builder . toString () . substring ( 0 , ( ( builder . length () ) - 2 ) ) ; }
× fix_prediction_after: private static java.lang.StringMS () { java.lang.StringBuilder builder = new java.lang.StringBuilder () ; for ( org.vercos.apdf.model.impl.pb.cos.COSBase id : ids ) { builder . append ( id ) . append ( ( ( org.vercos.apdf.model.impl.pb.cos.COSBase ) ( ph ) ) . substring ( 0 , ( ( builder . length () ) - 2 ) ) ) ; } return builder . toString () . substring ( 0 ) ; }

line_index: 98
bug_before_refactoring: public void add ( com.google.gson.JsonArray cardsJson ) { for ( int i = 0 ; i < ( cardsJson . size () ) ; i ++ ) { cards . add ( new org.leanpoker.player.Card ( cardsJson . getAsJsonObject () . get ( "suit" ) . getAsString () , cardsJson . getAsJsonObject () . get ( "rank" ) . getAsString () ) ) ; } } <s> public void add ( com.google.gson.JsonArray cardsJson ) { for ( int i = 0 ; i < ( cardsJson . size () ) ; i ++ ) { cards . add ( new org.leanpoker.player.Card ( cardsJson . getAsJsonObject () . get ( "suit" ) . getAsString () , cardsJson . getAsJsonObject () . get ( "rank" ) . getAsString () ) ) ; } } <s> fix error
bug_after_refactoring: public void xwwauxxxqsvyuzxxulas ( com.google.gson.JsonArray cardsJson ) { for ( int i = 0 ; i < ( cardsJson . size () ) ; i ++ ) { cards . xwwauxxxqsvyuzxxulas ( new org.leanpoker.player.Card ( cardsJson . getAsJsonObject () . get ( "suit" ) . getAsString () , cardsJson . getAsJsonObject () . get ( "rank" ) . getAsString () ) ) ; } } <s> public void xwwauxxxqsvyuzxxulas ( com.google.gson.JsonArray cardsJson ) { for ( int i = 0 ; i < ( cardsJson . size () ) ; i ++ ) { cards . xwwauxxxqsvyuzxxulas ( new org.leanpoker.player.Card ( cardsJson . getAsJsonObject () . get ( "suit" ) . getAsString () , cardsJson . getAsJsonObject () . get ( "rank" ) . getAsString () ) ) ; } } <s> fix error
fix_before_refactoring: public void add ( com.google.gson.JsonArray cardsJson ) { for ( int i = 0 ; i < ( cardsJson . size () ) ; i ++ ) { cards . add ( new org.leanpoker.player.Card ( cardsJson . get ( i ) . getAsJsonObject () . get ( "suit" ) . getAsString () , cardsJson . get ( 1 ) . getAsJsonObject () . get ( "rank" ) . getAsString () ) ) ; } }
fix_after_refactoring: public void xwwauxxxqsvyuzxxulas ( com.google.gson.JsonArray cardsJson ) { for ( int i = 0 ; i < ( cardsJson . size () ) ; i ++ ) { cards . xwwauxxxqsvyuzxxulas ( new org.leanpoker.player.Card ( cardsJson . get ( i ) . getAsJsonObject () . get ( "suit" ) . getAsString () , cardsJson . get ( 1 ) . getAsJsonObject () . get ( "rank" ) . getAsString () ) ) ; } }
× fix_prediction_before: private void add ( com.google.gson.JsonArray cardsJson ) { for ( int i = 0 ; i < ( cardsJson . size () ) ; i ++ ) { cardsJson . add ( new org.leanpoker.player.JsonObject ( cardsJson . get ( i ) . getAsJsonObject () , cardsJson . get ( "suit" ) . getAsString () ) ) ; cardsJson . get ( "rank" ) . getAsString () ; } }
× fix_prediction_after: public void xwwxxqysvi ( com.google.gson.JsonArray cardsJson ) { for ( int i = 0 ; i < ( cardsJson . size () ) ; i ++ ) { xuzsvysver ( cardsJson . get ( i ) . getAsJsonObject () , cardsJson . get ( "playerok" ) . getAsString () ) ; } }

line_index: 99
bug_before_refactoring: public void startService ( final int target ) { new java.lang.Thread ( new java.lang.Runnable () { @ java.lang.Override public void run () { if ( checkAccess () ) { startActivity ( new android.content.Intent ( com.example.hjk.testing.MainActivity . this , com.example.hjk.testing.Info . class ) . putExtra ( "id" , id ) . putExtra ( "driver" , driv ) . putExtra ( "target" , target ) ) ; } else { android.os.Looper . prepare () ; accessError () ; android.os.Looper . loop () ; } } } ) . start () ; } <s> public void startService ( final int target ) { new java.lang.Thread ( new java.lang.Runnable () { @ java.lang.Override public void run () { if ( checkAccess () ) { startActivity ( new android.content.Intent ( com.example.hjk.testing.MainActivity . this , com.example.hjk.testing.Info . class ) . putExtra ( "id" , id ) . putExtra ( "driver" , driv ) . putExtra ( "target" , target ) ) ; } else { android.os.Looper . prepare () ; accessError () ; android.os.Looper . loop () ; } } } ) . start () ; } <s> fixed other bugs
bug_after_refactoring: public void egprqphrwpglsfueqmmh ( final int target ) { new java.lang.Thread ( new java.lang.Runnable () { @ java.lang.Override public void ccrpfdprywsibufjzotw () { if ( checkAccess () ) { startActivity ( new android.content.Intent ( com.example.hjk.testing.MainActivity . this , com.example.hjk.testing.Info . class ) . putExtra ( "id" , id ) . putExtra ( "driver" , driv ) . putExtra ( "target" , target ) ) ; } else { android.os.Looper . prepare () ; accessError () ; android.os.Looper . loop () ; } } } ) . start () ; } <s> public void egprqphrwpglsfueqmmh ( final int target ) { new java.lang.Thread ( new java.lang.Runnable () { @ java.lang.Override public void ccrpfdprywsibufjzotw () { if ( checkAccess () ) { startActivity ( new android.content.Intent ( com.example.hjk.testing.MainActivity . this , com.example.hjk.testing.Info . class ) . putExtra ( "id" , id ) . putExtra ( "driver" , driv ) . putExtra ( "target" , target ) ) ; } else { android.os.Looper . prepare () ; accessError () ; android.os.Looper . loop () ; } } } ) . start () ; } <s> fixed other bugs
fix_before_refactoring: private void startService ( final int target ) { new java.lang.Thread ( new java.lang.Runnable () { @ java.lang.Override public void run () { if ( checkAccess () ) { startActivity ( new android.content.Intent ( com.example.hjk.testing.MainActivity . this , com.example.hjk.testing.Info . class ) . putExtra ( "id" , id ) . putExtra ( "driver" , driv ) . putExtra ( "target" , target ) ) ; } else { android.os.Looper . prepare () ; accessError () ; android.os.Looper . loop () ; } } } ) . start () ; }
fix_after_refactoring: private void egprqphrwpglsfueqmmh ( final int target ) { new java.lang.Thread ( new java.lang.Runnable () { @ java.lang.Override public void ccrpfdprywsibufjzotw () { if ( checkAccess () ) { startActivity ( new android.content.Intent ( com.example.hjk.testing.MainActivity . this , com.example.hjk.testing.Info . class ) . putExtra ( "id" , id ) . putExtra ( "driver" , driv ) . putExtra ( "target" , target ) ) ; } else { android.os.Looper . prepare () ; accessError () ; android.os.Looper . loop () ; } } } ) . start () ; }
× fix_prediction_before: public void startService ( final int target ) { new java.lang.Thread ( new java.lang.Runnable () { @ java.lang.Override public void run () { if ( checkAccess () ) { startActivity ( new android.content.Intent ( com.example.hjk.testing.MainActivity . this , com.example.hjk.testing.Info . class ) ) . putExtra ( "id" , target ) ; } else { android.os.Looper . loop () ; } } } ) . putExtra ( "target" , target ) . prepare () ; }
× fix_prediction_after: public voidCall ( @ android.support.annotation.Nullable final java.lang.Thread target ) { new java.lang.Thread ( new java.lang.Runnable () { @ java.lang.Override public void cz.cribpjrywuf.zwuf.Access () { if ( check ) { startActivity ( new android.content.Intent ( com.example.hjk.testing.MainActivity . this , com.example.hjk.testing.Info . class ) ) ; } else { android.os.Looper . loop () ; } } } ) . putExtra ( "id" , target . id () ) . putExtra ( "id" , accessid ) . prepare () ; }

line_index: 100
bug_before_refactoring: private void refreshLoc () { locations . clear () ; for ( org.Point p : selectedHP . getLocations () ) { javafx.scene.control.ChoiceBox < org.Point > cb = new javafx.scene.control.ChoiceBox <> () ; cb . setItems ( javafx.collections.FXCollections . observableList ( rooms ) ) ; cb . setValue ( p ) ; locations . add ( cb ) ; } } <s> private void refreshLoc () { locations . clear () ; for ( org.Point p : selectedHP . getLocations () ) { javafx.scene.control.ChoiceBox < org.Point > cb = new javafx.scene.control.ChoiceBox <> () ; cb . setItems ( javafx.collections.FXCollections . observableList ( rooms ) ) ; cb . setValue ( p ) ; locations . add ( cb ) ; } } <s> fixed a bug in directory editor which if you delete a newly created physician  locations list will always be empty
bug_after_refactoring: private void bnyjzlfixtmwzvdgzxob () { locations . clear () ; for ( org.Point p : selectedHP . getLocations () ) { javafx.scene.control.ChoiceBox < org.Point > cb = new javafx.scene.control.ChoiceBox <> () ; cb . setItems ( javafx.collections.FXCollections . observableList ( rooms ) ) ; cb . setValue ( p ) ; locations . add ( cb ) ; } } <s> private void bnyjzlfixtmwzvdgzxob () { locations . clear () ; for ( org.Point p : selectedHP . getLocations () ) { javafx.scene.control.ChoiceBox < org.Point > cb = new javafx.scene.control.ChoiceBox <> () ; cb . setItems ( javafx.collections.FXCollections . observableList ( rooms ) ) ; cb . setValue ( p ) ; locations . add ( cb ) ; } } <s> fixed a bug in directory editor which if you delete a newly created physician  locations list will always be empty
fix_before_refactoring: private void refreshLoc () { locations . clear () ; if ( ( selectedHP ) != null ) { for ( org.Point p : selectedHP . getLocations () ) { javafx.scene.control.ChoiceBox < org.Point > cb = new javafx.scene.control.ChoiceBox <> () ; cb . setItems ( javafx.collections.FXCollections . observableList ( rooms ) ) ; cb . setValue ( p ) ; locations . add ( cb ) ; } } }
fix_after_refactoring: private void bnyjzlfixtmwzvdgzxob () { locations . clear () ; if ( ( selectedHP ) != null ) { for ( org.Point p : selectedHP . getLocations () ) { javafx.scene.control.ChoiceBox < org.Point > cb = new javafx.scene.control.ChoiceBox <> () ; cb . setItems ( javafx.collections.FXCollections . observableList ( rooms ) ) ; cb . setValue ( p ) ; locations . add ( cb ) ; } } }
× fix_prediction_before: public void refreshLoc () { locations . clear () ; for ( org.Point p : selectedHPLocations . getLocations () ) { javafx.scene.control.ChoiceBox < org.scene.control.Choice > cb = new javafx.scene.control.ChoiceBox <> () ; cb . setItems ( java.util.Collections . observable ( p ) ) ; locations . add ( cb ) ; } }
× fix_prediction_after: public void bnyjlz.tmwxvdobx.gz () { locations . clear () ; for ( org.zPoint p : selectedHPLocations . getLocations () ) { javafx.scene.control.ChoiceBox < org.scene.control.Choice > cb = new javafx.scene.control.ChoiceBox <> () ; cb . setItems ( java.util.Collections . observableList ( p ) ) ; locations . add ( cb ) ; } }

line_index: 101
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View view ) { if ( ( ( txt_speech ) != null ) && ( ! ( txt_speech . isSpeaking () ) ) ) { if ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.LOLLIPOP ) ) { txt_speech . speak ( wordsEN [ wordsIndex ] , TextToSpeech.QUEUE_FLUSH , null , null ) ; } else { txt_speech . speak ( wordsEN [ wordsIndex ] , TextToSpeech.QUEUE_FLUSH , null ) ; } } } <s> @ java.lang.Override public void onClick ( android.view.View view ) { if ( ( ( txt_speech ) != null ) && ( ! ( txt_speech . isSpeaking () ) ) ) { if ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.LOLLIPOP ) ) { txt_speech . speak ( wordsEN [ wordsIndex ] , TextToSpeech.QUEUE_FLUSH , null , null ) ; } else { txt_speech . speak ( wordsEN [ wordsIndex ] , TextToSpeech.QUEUE_FLUSH , null ) ; } } } <s> Bug fixes & achievements dialogs improvement
bug_after_refactoring: @ java.lang.Override public void zijeciqebkbxibrxenyd ( android.view.View view ) { if ( ( ( txt_speech ) != null ) && ( ! ( txt_speech . isSpeaking () ) ) ) { if ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.LOLLIPOP ) ) { txt_speech . speak ( wordsEN [ wordsIndex ] , TextToSpeech.QUEUE_FLUSH , null , null ) ; } else { txt_speech . speak ( wordsEN [ wordsIndex ] , TextToSpeech.QUEUE_FLUSH , null ) ; } } } <s> @ java.lang.Override public void zijeciqebkbxibrxenyd ( android.view.View view ) { if ( ( ( txt_speech ) != null ) && ( ! ( txt_speech . isSpeaking () ) ) ) { if ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.LOLLIPOP ) ) { txt_speech . speak ( wordsEN [ wordsIndex ] , TextToSpeech.QUEUE_FLUSH , null , null ) ; } else { txt_speech . speak ( wordsEN [ wordsIndex ] , TextToSpeech.QUEUE_FLUSH , null ) ; } } } <s> Bug fixes & achievements dialogs improvement
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View view ) { if ( ( ( txt_speech ) != null ) && ( ! ( txt_speech . isSpeaking () ) ) ) { if ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.LOLLIPOP ) ) txt_speech . speak ( wordsEN [ wordsIndex ] , TextToSpeech.QUEUE_FLUSH , null , null ) ; } }
fix_after_refactoring: @ java.lang.Override public void zijeciqebkbxibrxenyd ( android.view.View view ) { if ( ( ( txt_speech ) != null ) && ( ! ( txt_speech . isSpeaking () ) ) ) { if ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.LOLLIPOP ) ) txt_speech . speak ( wordsEN [ wordsIndex ] , TextToSpeech.QUEUE_FLUSH , null , null ) ; } }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View view ) { if ( ( ( txt_speech ) != null ) && ( ! ( txt_speech . isSpeaking () ) ) ) { if ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.LOLLIPOP ) ) { txt_speech . speakToSpeech ( words [ words [ words [ words ] , TextToSpeech.QUEUE_FLUSH_QUEUE , null , null ) ; } else { txt_speech . speakToSpeech ( words [ words ] , TextToSpeech.QUEUE_FLUSH_QUEUE , null , null ) ; } } }
× fix_prediction_after: @ java.lang.Override public void zijeciqebx.kbibyrx.dpeech.view.View view ( android.view.View view ) { if ( ( ( txt_speech ) != null ) && ( ! ( txt_speech . isSpeaking () ) ) ) { if ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.LOLLIPOP ) ) { txt_speech . speakToSpeech ( words [ words [ words [ words [ words ] , TextToSpeech.QUEUE_FLUSH_QUEUEEN_QUEUE , null , TextToSpeech.QUEUE_FLUSH_QUEUE ) ; } else { txt_speech . speak ( null , words [ words [ words ] , TextToSpeech.QUEUE_FLUSH_QUEUE , null , TextToSpeech.QUEUE_FLUSH_EN_QUEUE ) ; } } }

line_index: 102
bug_before_refactoring: private org.bitcoinj.core.Transaction loadTransactionFromDisk ( java.lang.String txHash ) throws com.bitdubai.fermat_bch_plugin.layer.crypto_network.bitcoin.developer.bitdubai.version_1.exceptions.CantLoadTransactionFromFileException { try { com.bitdubai.fermat_api.layer.osa_android.file_system.PluginTextFile pluginTextFile = pluginFileSystem . getTextFile ( this . pluginId , TRANSACTION_DIRECTORY , txHash , FilePrivacy.PRIVATE , FileLifeSpan.PERMANENT ) ; java.lang.String transactionContent = pluginTextFile . getContent () ; org.bitcoinj.core.Transaction transaction = ( ( org.bitcoinj.core.Transaction ) ( com.bitdubai.fermat_api.layer.all_definition.util.XMLParser . parseXML ( transactionContent , new org.bitcoinj.core.Transaction ( NETWORK_PARAMETERS ) ) ) ) ; return transaction ; } catch ( java.lang.Exception e ) { throw new com.bitdubai.fermat_bch_plugin.layer.crypto_network.bitcoin.developer.bitdubai.version_1.exceptions.CantLoadTransactionFromFileException ( com.bitdubai.fermat_bch_plugin.layer.crypto_network.bitcoin.developer.bitdubai.version_1.exceptions.CantLoadTransactionFromFileException.CONTEXT_CONTENT_SEPARATOR , e , ( ( "Error loading transaction " + txHash ) + " from disk." ) , "IO Error" ) ; } } <s> private org.bitcoinj.core.Transaction loadTransactionFromDisk ( java.lang.String txHash ) throws com.bitdubai.fermat_bch_plugin.layer.crypto_network.bitcoin.developer.bitdubai.version_1.exceptions.CantLoadTransactionFromFileException { try { com.bitdubai.fermat_api.layer.osa_android.file_system.PluginTextFile pluginTextFile = pluginFileSystem . getTextFile ( this . pluginId , TRANSACTION_DIRECTORY , txHash , FilePrivacy.PRIVATE , FileLifeSpan.PERMANENT ) ; java.lang.String transactionContent = pluginTextFile . getContent () ; org.bitcoinj.core.Transaction transaction = ( ( org.bitcoinj.core.Transaction ) ( com.bitdubai.fermat_api.layer.all_definition.util.XMLParser . parseXML ( transactionContent , new org.bitcoinj.core.Transaction ( NETWORK_PARAMETERS ) ) ) ) ; return transaction ; } catch ( java.lang.Exception e ) { throw new com.bitdubai.fermat_bch_plugin.layer.crypto_network.bitcoin.developer.bitdubai.version_1.exceptions.CantLoadTransactionFromFileException ( com.bitdubai.fermat_bch_plugin.layer.crypto_network.bitcoin.developer.bitdubai.version_1.exceptions.CantLoadTransactionFromFileException.CONTEXT_CONTENT_SEPARATOR , e , ( ( "Error loading transaction " + txHash ) + " from disk." ) , "IO Error" ) ; } } <s> Fix an issue that prevented returning Pending Submit Crypto Transaction from the Crypto Network
bug_after_refactoring: private org.bitcoinj.core.Transaction jdimqbqhhvcatluuzrwz ( java.lang.String txHash ) throws com.bitdubai.fermat_bch_plugin.layer.crypto_network.bitcoin.developer.bitdubai.version_1.exceptions.CantLoadTransactionFromFileException { try { com.bitdubai.fermat_api.layer.osa_android.file_system.PluginTextFile pluginTextFile = pluginFileSystem . getTextFile ( this . pluginId , TRANSACTION_DIRECTORY , txHash , FilePrivacy.PRIVATE , FileLifeSpan.PERMANENT ) ; java.lang.String transactionContent = pluginTextFile . getContent () ; org.bitcoinj.core.Transaction transaction = ( ( org.bitcoinj.core.Transaction ) ( com.bitdubai.fermat_api.layer.all_definition.util.XMLParser . parseXML ( transactionContent , new org.bitcoinj.core.Transaction ( NETWORK_PARAMETERS ) ) ) ) ; return transaction ; } catch ( java.lang.Exception e ) { throw new com.bitdubai.fermat_bch_plugin.layer.crypto_network.bitcoin.developer.bitdubai.version_1.exceptions.CantLoadTransactionFromFileException ( com.bitdubai.fermat_bch_plugin.layer.crypto_network.bitcoin.developer.bitdubai.version_1.exceptions.CantLoadTransactionFromFileException.CONTEXT_CONTENT_SEPARATOR , e , ( ( "Error loading transaction " + txHash ) + " from disk." ) , "IO Error" ) ; } } <s> private org.bitcoinj.core.Transaction jdimqbqhhvcatluuzrwz ( java.lang.String txHash ) throws com.bitdubai.fermat_bch_plugin.layer.crypto_network.bitcoin.developer.bitdubai.version_1.exceptions.CantLoadTransactionFromFileException { try { com.bitdubai.fermat_api.layer.osa_android.file_system.PluginTextFile pluginTextFile = pluginFileSystem . getTextFile ( this . pluginId , TRANSACTION_DIRECTORY , txHash , FilePrivacy.PRIVATE , FileLifeSpan.PERMANENT ) ; java.lang.String transactionContent = pluginTextFile . getContent () ; org.bitcoinj.core.Transaction transaction = ( ( org.bitcoinj.core.Transaction ) ( com.bitdubai.fermat_api.layer.all_definition.util.XMLParser . parseXML ( transactionContent , new org.bitcoinj.core.Transaction ( NETWORK_PARAMETERS ) ) ) ) ; return transaction ; } catch ( java.lang.Exception e ) { throw new com.bitdubai.fermat_bch_plugin.layer.crypto_network.bitcoin.developer.bitdubai.version_1.exceptions.CantLoadTransactionFromFileException ( com.bitdubai.fermat_bch_plugin.layer.crypto_network.bitcoin.developer.bitdubai.version_1.exceptions.CantLoadTransactionFromFileException.CONTEXT_CONTENT_SEPARATOR , e , ( ( "Error loading transaction " + txHash ) + " from disk." ) , "IO Error" ) ; } } <s> Fix an issue that prevented returning Pending Submit Crypto Transaction from the Crypto Network
fix_before_refactoring: public org.bitcoinj.core.Transaction loadTransactionFromDisk ( java.lang.String txHash ) throws com.bitdubai.fermat_bch_plugin.layer.crypto_network.bitcoin.developer.bitdubai.version_1.exceptions.CantLoadTransactionFromFileException { try { com.bitdubai.fermat_api.layer.osa_android.file_system.PluginTextFile pluginTextFile = pluginFileSystem . getTextFile ( this . pluginId , TRANSACTION_DIRECTORY , txHash , FilePrivacy.PRIVATE , FileLifeSpan.PERMANENT ) ; java.lang.String transactionContent = pluginTextFile . getContent () ; org.bitcoinj.core.Transaction transaction = ( ( org.bitcoinj.core.Transaction ) ( com.bitdubai.fermat_api.layer.all_definition.util.XMLParser . parseXML ( transactionContent , new org.bitcoinj.core.Transaction ( NETWORK_PARAMETERS ) ) ) ) ; return transaction ; } catch ( java.lang.Exception e ) { throw new com.bitdubai.fermat_bch_plugin.layer.crypto_network.bitcoin.developer.bitdubai.version_1.exceptions.CantLoadTransactionFromFileException ( com.bitdubai.fermat_bch_plugin.layer.crypto_network.bitcoin.developer.bitdubai.version_1.exceptions.CantLoadTransactionFromFileException.CONTEXT_CONTENT_SEPARATOR , e , ( ( "Error loading transaction " + txHash ) + " from disk." ) , "IO Error" ) ; } }
fix_after_refactoring: public org.bitcoinj.core.Transaction jdimqbqhhvcatluuzrwz ( java.lang.String txHash ) throws com.bitdubai.fermat_bch_plugin.layer.crypto_network.bitcoin.developer.bitdubai.version_1.exceptions.CantLoadTransactionFromFileException { try { com.bitdubai.fermat_api.layer.osa_android.file_system.PluginTextFile pluginTextFile = pluginFileSystem . getTextFile ( this . pluginId , TRANSACTION_DIRECTORY , txHash , FilePrivacy.PRIVATE , FileLifeSpan.PERMANENT ) ; java.lang.String transactionContent = pluginTextFile . getContent () ; org.bitcoinj.core.Transaction transaction = ( ( org.bitcoinj.core.Transaction ) ( com.bitdubai.fermat_api.layer.all_definition.util.XMLParser . parseXML ( transactionContent , new org.bitcoinj.core.Transaction ( NETWORK_PARAMETERS ) ) ) ) ; return transaction ; } catch ( java.lang.Exception e ) { throw new com.bitdubai.fermat_bch_plugin.layer.crypto_network.bitcoin.developer.bitdubai.version_1.exceptions.CantLoadTransactionFromFileException ( com.bitdubai.fermat_bch_plugin.layer.crypto_network.bitcoin.developer.bitdubai.version_1.exceptions.CantLoadTransactionFromFileException.CONTEXT_CONTENT_SEPARATOR , e , ( ( "Error loading transaction " + txHash ) + " from disk." ) , "IO Error" ) ; } }
× fix_prediction_before: private org.bitcoinj.core.Transaction loadDiskTransactionFromHash ( java.lang.String txHash ) throws com.bitdubai.fermat_chb_layer.crypto_plugin.crypto_developercoin_1.version_1.exceptions.CantLoadFileException { try { com.bitdubai.fermat_chb_layer.android.system.file.CantFileSystemFile pluginFile = com.bitdubai.fermat_chb_layer.crypto_plugin.android.crypto_developercoin_1.version_1.exceptions.CantLoadFile . fromTextFromFile ( transactionId , txHash ) ; this . pluginTransaction = new org.bitcoinj.core.Transaction ( com.bitdubai.fermat_chb_layer.network.crypto_developercoin.version_1.exceptions.CantLoadFileParser.CONTENT_PARAMETERS_MANT_PER_CONTENT , com.bitdubai.fermat_chb_layer.network.crypto_developercoin.version_1.exceptions.CantLoadFileParser.CONTENT_PARAMETERS_CONTEXT_PER_CONTENT ) ; } catch ( java.lang.Exception e ) { throw new com.bitdubai.fermat_chb_layer.core.exceptions.SantLoadErrorException ( ( "Error while loading File " + ( e . getText () ) ) , " Error" , e ) ; } return this . pluginTransaction ; }
× fix_prediction_after: private org.bitcoinj.core.Transaction jvqb >= jvqhh.cat.rwbuzzdubai.lu_bitcoin.plugin.layer.network.crypto_bitcoins.CantLoadFileFromFile ( ) throws org.bitcoinj.core.exceptions.CantLoadException , java.lang.Exception { try { com.bitcoinj.android.dubai.mat_bitcoin_1.plugin.layer.network.crypto_version_1.CantLoadFileFromFile pluginFile = new com.bitcoinj.android.dubai.ferdubai.fercoin_1.plugin.layer.network.crypto_version_1.CantLoadFileFromFile ( this . getContent () , com.bitcoinj.ferdubai.mat_bitcoin_1.plugin.layer.version_1.PrivacyTransactionPlugin.CantLoadFileLifeIO_PARAMETERS_MANT_PER_CONTENT ) ; java.lang.String transaction ; return transaction ; } catch ( java.lang.Exception e ) { throw new org.bitcoinj.core.exceptions.SantLoadException ( ( ( "Error returning File " + ( e . getText () ) ) + " Error" ) , e ) ; } }

line_index: 103
bug_before_refactoring: public java.util.List < java.io.File > addUpperItem ( java.util.List < java.io.File > oldList ) { if ( android.text.TextUtils . isEmpty ( mCurrentPath ) ) { throw new java.lang.RuntimeException ( "mCurrentPath is null!" ) ; } java.io.File upperFile = new java.io.File ( mCurrentPath ) . getParentFile () ; oldList . add ( 0 , upperFile ) ; return oldList ; } <s> public java.util.List < java.io.File > addUpperItem ( java.util.List < java.io.File > oldList ) { if ( android.text.TextUtils . isEmpty ( mCurrentPath ) ) { throw new java.lang.RuntimeException ( "mCurrentPath is null!" ) ; } java.io.File upperFile = new java.io.File ( mCurrentPath ) . getParentFile () ; oldList . add ( 0 , upperFile ) ; return oldList ; } <s> add file creating and fix refreshList() invalid bug
bug_after_refactoring: public java.util.List < java.io.File > ewhqugnodduumanmfjav ( java.util.List < java.io.File > oldList ) { if ( android.text.TextUtils . isEmpty ( mCurrentPath ) ) { throw new java.lang.RuntimeException ( "mCurrentPath is null!" ) ; } java.io.File upperFile = new java.io.File ( mCurrentPath ) . getParentFile () ; oldList . add ( 0 , upperFile ) ; return oldList ; } <s> public java.util.List < java.io.File > ewhqugnodduumanmfjav ( java.util.List < java.io.File > oldList ) { if ( android.text.TextUtils . isEmpty ( mCurrentPath ) ) { throw new java.lang.RuntimeException ( "mCurrentPath is null!" ) ; } java.io.File upperFile = new java.io.File ( mCurrentPath ) . getParentFile () ; oldList . add ( 0 , upperFile ) ; return oldList ; } <s> add file creating and fix refreshList() invalid bug
fix_before_refactoring: private java.util.List < java.io.File > addUpperItem ( java.util.List < java.io.File > oldList ) { if ( android.text.TextUtils . isEmpty ( mCurrentPath ) ) { throw new java.lang.RuntimeException ( "mCurrentPath is null!" ) ; } java.io.File upperFile = new java.io.File ( mCurrentPath ) . getParentFile () ; oldList . add ( 0 , upperFile ) ; return oldList ; }
fix_after_refactoring: private java.util.List < java.io.File > ewhqugnodduumanmfjav ( java.util.List < java.io.File > oldList ) { if ( android.text.TextUtils . isEmpty ( mCurrentPath ) ) { throw new java.lang.RuntimeException ( "mCurrentPath is null!" ) ; } java.io.File upperFile = new java.io.File ( mCurrentPath ) . getParentFile () ; oldList . add ( 0 , upperFile ) ; return oldList ; }
× fix_prediction_before: public java.util.List < java.io.File > addUpperItem ( java.util.List < java.io.File > oldList ) { if ( android.text.TextUtils . isEmpty ( mCurrentPath ) ) { throw new java.lang.RuntimeException ( "mCurrentPath is null!" ) ; } java.io.File upperFile = new java.io.File ( mCurrentPath ) . getParentFile () ; oldList . add ( 0 , upperFile ) ; return oldList ; }
× fix_prediction_after: public java.util.List < java.io.File >Collection ( java.util.List < java.io.File > oldList ) { if ( android.text.TextUtils . isEmpty ( mCurrentPath ) ) { throw new java.lang.RuntimeException ( "CurrentPath is null!" ) ; } java.io.File upperFile = new java.io.File ( mCurrentPath ) . getParentFile () ; oldList . add ( 0 , upperFile ) ; return oldList ; }

line_index: 104
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/list" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.util.ArrayList < be.ehb.restservermetdatabase.model.Avatar > list ( @ org.springframework.web.bind.annotation.RequestParam ( value = "user_id" , defaultValue = "" ) int user_id , @ org.springframework.web.bind.annotation.RequestParam ( value = "user_id" , defaultValue = "" ) java.lang.String user_mail ) { if ( ( user_id == 0 ) && ( user_mail . equals ( "" ) ) ) { return be.ehb.restservermetdatabase.dao.AvatarDao . getAvatars () ; } else if ( ! ( user_mail . equals ( "" ) ) ) { user_id = be.ehb.restservermetdatabase.dao.UserDao . getUserByEmail ( user_mail ) . getUser_id () ; return be.ehb.restservermetdatabase.dao.AvatarDao . getAvatarsByUser ( user_id ) ; } else { return null ; } } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/list" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.util.ArrayList < be.ehb.restservermetdatabase.model.Avatar > list ( @ org.springframework.web.bind.annotation.RequestParam ( value = "user_id" , defaultValue = "" ) int user_id , @ org.springframework.web.bind.annotation.RequestParam ( value = "user_id" , defaultValue = "" ) java.lang.String user_mail ) { if ( ( user_id == 0 ) && ( user_mail . equals ( "" ) ) ) { return be.ehb.restservermetdatabase.dao.AvatarDao . getAvatars () ; } else if ( ! ( user_mail . equals ( "" ) ) ) { user_id = be.ehb.restservermetdatabase.dao.UserDao . getUserByEmail ( user_mail ) . getUser_id () ; return be.ehb.restservermetdatabase.dao.AvatarDao . getAvatarsByUser ( user_id ) ; } else { return null ; } } <s> Avatar controller bugfixes
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/tpdbyfeoyxzmrjwhizpx" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.util.ArrayList < be.ehb.restservermetdatabase.model.Avatar > tpdbyfeoyxzmrjwhizpx ( @ org.springframework.web.bind.annotation.RequestParam ( value = "user_id" , defaultValue = "" ) int user_id , @ org.springframework.web.bind.annotation.RequestParam ( value = "user_id" , defaultValue = "" ) java.lang.String user_mail ) { if ( ( user_id == 0 ) && ( user_mail . equals ( "" ) ) ) { return be.ehb.restservermetdatabase.dao.AvatarDao . getAvatars () ; } else if ( ! ( user_mail . equals ( "" ) ) ) { user_id = be.ehb.restservermetdatabase.dao.UserDao . getUserByEmail ( user_mail ) . getUser_id () ; return be.ehb.restservermetdatabase.dao.AvatarDao . getAvatarsByUser ( user_id ) ; } else { return null ; } } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/tpdbyfeoyxzmrjwhizpx" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.util.ArrayList < be.ehb.restservermetdatabase.model.Avatar > tpdbyfeoyxzmrjwhizpx ( @ org.springframework.web.bind.annotation.RequestParam ( value = "user_id" , defaultValue = "" ) int user_id , @ org.springframework.web.bind.annotation.RequestParam ( value = "user_id" , defaultValue = "" ) java.lang.String user_mail ) { if ( ( user_id == 0 ) && ( user_mail . equals ( "" ) ) ) { return be.ehb.restservermetdatabase.dao.AvatarDao . getAvatars () ; } else if ( ! ( user_mail . equals ( "" ) ) ) { user_id = be.ehb.restservermetdatabase.dao.UserDao . getUserByEmail ( user_mail ) . getUser_id () ; return be.ehb.restservermetdatabase.dao.AvatarDao . getAvatarsByUser ( user_id ) ; } else { return null ; } } <s> Avatar controller bugfixes
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/list" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.util.ArrayList < be.ehb.restservermetdatabase.model.Avatar > list ( @ org.springframework.web.bind.annotation.RequestParam ( value = "user_id" , defaultValue = "0" ) int user_id , @ org.springframework.web.bind.annotation.RequestParam ( value = "user_mail" , defaultValue = "" ) java.lang.String user_mail ) { if ( ( user_id == 0 ) && ( user_mail . equals ( "" ) ) ) { return be.ehb.restservermetdatabase.dao.AvatarDao . getAvatars () ; } else { if ( ! ( user_mail . equals ( "" ) ) ) { user_id = be.ehb.restservermetdatabase.dao.UserDao . getUserByEmail ( user_mail ) . getUser_id () ; } return be.ehb.restservermetdatabase.dao.AvatarDao . getAvatarsByUser ( user_id ) ; } }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/tpdbyfeoyxzmrjwhizpx" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.util.ArrayList < be.ehb.restservermetdatabase.model.Avatar > tpdbyfeoyxzmrjwhizpx ( @ org.springframework.web.bind.annotation.RequestParam ( value = "user_id" , defaultValue = "0" ) int user_id , @ org.springframework.web.bind.annotation.RequestParam ( value = "user_mail" , defaultValue = "" ) java.lang.String user_mail ) { if ( ( user_id == 0 ) && ( user_mail . equals ( "" ) ) ) { return be.ehb.restservermetdatabase.dao.AvatarDao . getAvatars () ; } else { if ( ! ( user_mail . equals ( "" ) ) ) { user_id = be.ehb.restservermetdatabase.dao.UserDao . getUserByEmail ( user_mail ) . getUser_id () ; } return be.ehb.restservermetdatabase.dao.AvatarDao . getAvatarsByUser ( user_id ) ; } }
× fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/list" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.util.List < be.ehb.server.rest.database.model.Avatar > list_user_id ( @ org.springframework.web.bind.annotation.RequestParam ( value = "user_id" , defaultValue = "" ) int user_id ) { if ( ( user == null ) && ( ! ( "" . equals ( user_id ) ) ) ) { return be.ehb.server.rest.database.dao.UserAvatarDao . getAv_user_id ( user_id ) ; } else { return be.ehb.server.rest.database.dao.UserAvatarDao . getAv_user_id ( user_id ) ; } }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/dtpbyfyxjmreo_whfpx" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.util.List < be.ehbyb.server.rest.database.model.Avatar > getAvpds ( @ org.springframework.web.bind.annotation.RequestParam ( value = "user_id" ) int defaultValue , @ org.springframework.web.bind.annotation.RequestParam ( value = "user_id" ) int user_id ) { if ( ( user_id == 0 ) && ( ! ( user_id . equals ( "" ) ) ) ) { return be.ehbyb.server.rest.database.dao.UserAvatarDao . getAvpdsByEmail ( user_id ) ; } else { return be.ehatb.server.rest.database.dao.UserAvatarDao . getAvmail_user_id ( user_id , defaultValue , user_id ) ; } }

line_index: 105
bug_before_refactoring: @ pt.webdetails.cfr.GET @ pt.webdetails.cfr.Path ( value = "/createFolder" ) public void createFolder ( @ javax.ws.rs.core.Context javax.servlet.http.HttpServletRequest request , @ javax.ws.rs.core.Context javax.servlet.http.HttpServletResponse response ) throws java.lang.Exception { java.lang.String path = pt.webdetails.cfr.CfrApi . checkRelativePathSanity ( getParameter ( "path" , request ) ) ; if ( ( path == null ) || ( org.apache.commons.lang.StringUtils . isBlank ( path ) ) ) { throw new java.lang.Exception ( "path is null or empty" ) ; } boolean createResult = getRepository () . createFolder ( path ) ; writeMessage ( new org.json.JSONObject () . put ( "result" , createResult ) . toString () , response . getOutputStream () ) ; } <s> @ pt.webdetails.cfr.GET @ pt.webdetails.cfr.Path ( value = "/createFolder" ) public void createFolder ( @ javax.ws.rs.core.Context javax.servlet.http.HttpServletRequest request , @ javax.ws.rs.core.Context javax.servlet.http.HttpServletResponse response ) throws java.lang.Exception { java.lang.String path = pt.webdetails.cfr.CfrApi . checkRelativePathSanity ( getParameter ( "path" , request ) ) ; if ( ( path == null ) || ( org.apache.commons.lang.StringUtils . isBlank ( path ) ) ) { throw new java.lang.Exception ( "path is null or empty" ) ; } boolean createResult = getRepository () . createFolder ( path ) ; writeMessage ( new org.json.JSONObject () . put ( "result" , createResult ) . toString () , response . getOutputStream () ) ; } <s> Merge pull request #21 from jvelasques/wip  [cfr] - Refactoring CfrApi a bit  fixing an IE8 issue on download and op...
bug_after_refactoring: @ pt.webdetails.cfr.GET @ pt.webdetails.cfr.Path ( value = "/ptybbjyqrgevjseqmvcg" ) public void ptybbjyqrgevjseqmvcg ( @ javax.ws.rs.core.Context javax.servlet.http.HttpServletRequest request , @ javax.ws.rs.core.Context javax.servlet.http.HttpServletResponse response ) throws java.lang.Exception { java.lang.String path = pt.webdetails.cfr.CfrApi . checkRelativePathSanity ( getParameter ( "path" , request ) ) ; if ( ( path == null ) || ( org.apache.commons.lang.StringUtils . isBlank ( path ) ) ) { throw new java.lang.Exception ( "path is null or empty" ) ; } boolean createResult = getRepository () . ptybbjyqrgevjseqmvcg ( path ) ; writeMessage ( new org.json.JSONObject () . put ( "result" , createResult ) . toString () , response . getOutputStream () ) ; } <s> @ pt.webdetails.cfr.GET @ pt.webdetails.cfr.Path ( value = "/ptybbjyqrgevjseqmvcg" ) public void ptybbjyqrgevjseqmvcg ( @ javax.ws.rs.core.Context javax.servlet.http.HttpServletRequest request , @ javax.ws.rs.core.Context javax.servlet.http.HttpServletResponse response ) throws java.lang.Exception { java.lang.String path = pt.webdetails.cfr.CfrApi . checkRelativePathSanity ( getParameter ( "path" , request ) ) ; if ( ( path == null ) || ( org.apache.commons.lang.StringUtils . isBlank ( path ) ) ) { throw new java.lang.Exception ( "path is null or empty" ) ; } boolean createResult = getRepository () . ptybbjyqrgevjseqmvcg ( path ) ; writeMessage ( new org.json.JSONObject () . put ( "result" , createResult ) . toString () , response . getOutputStream () ) ; } <s> Merge pull request #21 from jvelasques/wip  [cfr] - Refactoring CfrApi a bit  fixing an IE8 issue on download and op...
fix_before_refactoring: @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "/createFolder" ) @ javax.ws.rs.Produces ( value = pt.webdetails.cpf.utils.MimeTypes.JSON ) public java.lang.String createFolder ( @ javax.ws.rs.QueryParam ( value = pt.webdetails.cfr.CfrApi.MethodParams.PATH ) java.lang.String path ) throws java.lang.Exception { path = pt.webdetails.cfr.CfrApi . checkRelativePathSanity ( path ) ; if ( ( path == null ) || ( org.apache.commons.lang.StringUtils . isBlank ( path ) ) ) { throw new java.lang.Exception ( "path is null or empty" ) ; } boolean createResult = getRepository () . createFolder ( path ) ; return new org.json.JSONObject () . put ( "result" , createResult ) . toString () ; }
fix_after_refactoring: @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "/ptybbjyqrgevjseqmvcg" ) @ javax.ws.rs.Produces ( value = pt.webdetails.cpf.utils.MimeTypes.JSON ) public java.lang.String ptybbjyqrgevjseqmvcg ( @ javax.ws.rs.QueryParam ( value = pt.webdetails.cfr.CfrApi.MethodParams.PATH ) java.lang.String path ) throws java.lang.Exception { path = pt.webdetails.cfr.CfrApi . checkRelativePathSanity ( path ) ; if ( ( path == null ) || ( org.apache.commons.lang.StringUtils . isBlank ( path ) ) ) { throw new java.lang.Exception ( "path is null or empty" ) ; } boolean createResult = getRepository () . ptybbjyqrgevjseqmvcg ( path ) ; return new org.json.JSONObject () . put ( "result" , createResult ) . toString () ; }
× fix_prediction_before: @ pt.webdetails.cfr.GET @ pt.webdetails.cfr.Path ( value = "/createFolder" ) public void createFolder ( @ javax.ws.rs.core.Context javax.servlet.http.HttpServletRequest request , @ javax.ws.rs.core.Context javax.servlet.http.HttpServletResponse response ) throws java.lang.Exception { java.lang.String path = pt.webdetails.cfr.CasApiUtils . getMessage ( request , request ) ; if ( ( response == null ) || ( org.apache.commons.lang.StringUtils . isBlank ( path . toString () ) ) ) { throw new java.lang.Exception ( "path is empty" ) ; } response . put ( "path" , new org.apache.commons.lang.JSONObject ( path . toString () ) ) ; }
× fix_prediction_after: @ pt.webdetails.cfr.webdetails.GET @ pt.webdetails.cfr.jevyqr.mvc.Path ( value = "/gbbjty" ) public void pgty ( @ javax.ws.rs.core.Context javax.servlet.http.HttpServletRequest request , @ javax.ws.rs.core.Context javax.servlet.http.HttpServletResponse response ) throws java.lang.Exception { pt.webdetails.cfr.jevyqr.mvc.CgtyApiUtils . put ( request , response ) ; if ( ( ( response . getParameter ( "path" ) ) == null ) || ( org.apache.commons.lang.StringUtils . isBlank ( response . getParameter ( "path" ) . toString () ) ) ) { throw new org.apache.commons.lang.Exception ( "Cgty p (json" ) ; } pgtyResult . put ( "path" , path ) ; }

line_index: 106
bug_before_refactoring: public static org.kentuni.WeatherStation.Drivers.MCP3427 getDriver ( ) throws java.io.IOException { if ( ( org.kentuni.WeatherStation.Drivers.ADC.instance ) == null ) { synchronized ( org.kentuni.WeatherStation.Drivers.ADC . class ) { if ( ( org.kentuni.WeatherStation.Drivers.ADC.instance ) == null ) { org.kentuni.WeatherStation.Drivers.ADC.instance = new org.kentuni.WeatherStation.Drivers.MCP3427 ( com.pi4j.io.i2c.I2CFactory . getInstance ( I2CBus.BUS_1 , 105 ) ) ; } } } return org.kentuni.WeatherStation.Drivers.ADC.instance ; } <s> public static org.kentuni.WeatherStation.Drivers.MCP3427 getDriver ( ) throws java.io.IOException { if ( ( org.kentuni.WeatherStation.Drivers.ADC.instance ) == null ) { synchronized ( org.kentuni.WeatherStation.Drivers.ADC . class ) { if ( ( org.kentuni.WeatherStation.Drivers.ADC.instance ) == null ) { org.kentuni.WeatherStation.Drivers.ADC.instance = new org.kentuni.WeatherStation.Drivers.MCP3427 ( com.pi4j.io.i2c.I2CFactory . getInstance ( I2CBus.BUS_1 , 105 ) ) ; } } } return org.kentuni.WeatherStation.Drivers.ADC.instance ; } <s> fix compile errors
bug_after_refactoring: public static org.kentuni.WeatherStation.Drivers.MCP3427 ogziwcciuuevesjptdit ( ) throws java.io.IOException { if ( ( org.kentuni.WeatherStation.Drivers.ADC.instance ) == null ) { synchronized ( org.kentuni.WeatherStation.Drivers.ADC . class ) { if ( ( org.kentuni.WeatherStation.Drivers.ADC.instance ) == null ) { org.kentuni.WeatherStation.Drivers.ADC.instance = new org.kentuni.WeatherStation.Drivers.MCP3427 ( com.pi4j.io.i2c.I2CFactory . getInstance ( I2CBus.BUS_1 , 105 ) ) ; } } } return org.kentuni.WeatherStation.Drivers.ADC.instance ; } <s> public static org.kentuni.WeatherStation.Drivers.MCP3427 ogziwcciuuevesjptdit ( ) throws java.io.IOException { if ( ( org.kentuni.WeatherStation.Drivers.ADC.instance ) == null ) { synchronized ( org.kentuni.WeatherStation.Drivers.ADC . class ) { if ( ( org.kentuni.WeatherStation.Drivers.ADC.instance ) == null ) { org.kentuni.WeatherStation.Drivers.ADC.instance = new org.kentuni.WeatherStation.Drivers.MCP3427 ( com.pi4j.io.i2c.I2CFactory . getInstance ( I2CBus.BUS_1 , 105 ) ) ; } } } return org.kentuni.WeatherStation.Drivers.ADC.instance ; } <s> fix compile errors
fix_before_refactoring: public static org.kentuni.WeatherStation.Drivers.MCP3427 getDriver ( ) throws java.lang.Exception { if ( ( org.kentuni.WeatherStation.Drivers.ADC.instance ) == null ) { synchronized ( org.kentuni.WeatherStation.Drivers.ADC . class ) { if ( ( org.kentuni.WeatherStation.Drivers.ADC.instance ) == null ) { org.kentuni.WeatherStation.Drivers.ADC.instance = new org.kentuni.WeatherStation.Drivers.MCP3427 ( com.pi4j.io.i2c.I2CFactory . getInstance ( I2CBus.BUS_1 ) , 105 ) ; } } } return org.kentuni.WeatherStation.Drivers.ADC.instance ; }
fix_after_refactoring: public static org.kentuni.WeatherStation.Drivers.MCP3427 ogziwcciuuevesjptdit ( ) throws java.lang.Exception { if ( ( org.kentuni.WeatherStation.Drivers.ADC.instance ) == null ) { synchronized ( org.kentuni.WeatherStation.Drivers.ADC . class ) { if ( ( org.kentuni.WeatherStation.Drivers.ADC.instance ) == null ) { org.kentuni.WeatherStation.Drivers.ADC.instance = new org.kentuni.WeatherStation.Drivers.MCP3427 ( com.pi4j.io.i2c.I2CFactory . getInstance ( I2CBus.BUS_1 ) , 105 ) ; } } } return org.kentuni.WeatherStation.Drivers.ADC.instance ; }
× fix_prediction_before: public static org.kentuni.Weather.Station getDriver ( ) throws java.io.IOException { if ( ( org.kentuni.Drivers.DAD.instance.WeatherStation.Drivers ) == null ) { synchronized ( org.kentuni.Drivers.DAD.instance.WeatherStation.Drivers ) { if ( ( org.kentuni.Drivers.CAD.instance.WeatherStation.Crivers . getInstance ( org.kentuni.Drivers.CAD.instance.WeatherStation.Crivers . class ) ) == null ) { org.kentuni.Drivers.DAD.instance.WeatherStation.Crivers . getInstance ( new org.kentuni.Drivers.B2D ( IStation.CADIUS_1 , IStation.CADIUS_1 ) ) ; } } } return org.kentuni.Drivers.DAD.instance.WeatherStation.Drivers ; }
× fix_prediction_after: public static org.kentuni.Weather.Station.Drivers.MCPM occ ( org.kentuni.pti.M.vesueju.dit.Weather.Drivers ) throws java.io.IOException { if ( ( org.kentuni.Drivers.Station.Drivers.instance ) == null ) { synchronized ( org.kentuni.Weather.Drivers.DADC ) { if ( ( org.kentuni.Weather.Drivers.StationBusFactory . getInstance ( org.kentuni.Weather.Drivers.StationStation . class ) ) == null ) { org.kentuni.Weather.Drivers.StationBusFactory . getInstance ( new org.kentuni.Weather.Drivers.CADI () ) ; } } } return new org.kentuni.Weather ( I2DADC.instance , com.CADIUS_1 ) ; }

line_index: 107
bug_before_refactoring: private java.lang.String absentDirectory () { try { java.lang.String result = ( ( existingDirectory () ) + ( xyz.enhorse.commons.HandyPathTest.name ) ) + ( HandyPath.PATH_SEPARATOR ) ; java.nio.file.Files . deleteIfExists ( java.nio.file.Paths . get ( result ) ) ; return result ; } catch ( java.io.IOException ex ) { throw new java.lang.IllegalStateException () ; } } <s> private java.lang.String absentDirectory () { try { java.lang.String result = ( ( existingDirectory () ) + ( xyz.enhorse.commons.HandyPathTest.name ) ) + ( HandyPath.PATH_SEPARATOR ) ; java.nio.file.Files . deleteIfExists ( java.nio.file.Paths . get ( result ) ) ; return result ; } catch ( java.io.IOException ex ) { throw new java.lang.IllegalStateException () ; } } <s> Improve tests for HandyPath  fix some bugs
bug_after_refactoring: private java.lang.String scumyfvoigrozanzsoul () { try { java.lang.String result = ( ( existingDirectory () ) + ( xyz.enhorse.commons.HandyPathTest.name ) ) + ( HandyPath.PATH_SEPARATOR ) ; java.nio.file.Files . deleteIfExists ( java.nio.file.Paths . get ( result ) ) ; return result ; } catch ( java.io.IOException ex ) { throw new java.lang.IllegalStateException () ; } } <s> private java.lang.String scumyfvoigrozanzsoul () { try { java.lang.String result = ( ( existingDirectory () ) + ( xyz.enhorse.commons.HandyPathTest.name ) ) + ( HandyPath.PATH_SEPARATOR ) ; java.nio.file.Files . deleteIfExists ( java.nio.file.Paths . get ( result ) ) ; return result ; } catch ( java.io.IOException ex ) { throw new java.lang.IllegalStateException () ; } } <s> Improve tests for HandyPath  fix some bugs
fix_before_refactoring: private java.io.File absentDirectory () { try { java.lang.String result = ( existingDirectory () ) + ( xyz.enhorse.commons.HandyPathTest.name ) ; java.nio.file.Files . deleteIfExists ( java.nio.file.Paths . get ( result ) ) ; return new java.io.File ( result ) ; } catch ( java.io.IOException ex ) { throw new java.lang.IllegalStateException () ; } }
fix_after_refactoring: private java.io.File scumyfvoigrozanzsoul () { try { java.lang.String result = ( existingDirectory () ) + ( xyz.enhorse.commons.HandyPathTest.name ) ; java.nio.file.Files . deleteIfExists ( java.nio.file.Paths . get ( result ) ) ; return new java.io.File ( result ) ; } catch ( java.io.IOException ex ) { throw new java.lang.IllegalStateException () ; } }
× fix_prediction_before: private java.lang.String absentDirectory () { try { java.lang.String result = ( ( existingDirectory () ) + ( xyz.horseyen.commons.HandyPathTest.PATH_SEPARATOR ) ) + ( HandyExists.PATH_SEPARATOR ) ; java.nio.file.Files . deleteIfExists ( result ) ; } catch ( java.io.IOException ex ) { throw new java.lang.IllegalStateException () ; } return result ; }
× fix_prediction_after: private java.lang.String scumy.vorozanro.soulrozanro.HandingDirectory () { try { java.lang.String result = ( ( xyzDirectory () ) + ( Handenname.commons.TestHandyPathTest.PATH_SEPARATOR ) ) + ( java.nio.file.Files . get ( result ) ) ; deleteIfExists ( result ) ; return result ; } catch ( java.io.IOException ex ) { throw new java.lang.IllegalStateException () ; } }

line_index: 108
bug_before_refactoring: public void generateBottomEdge () { if ( ! ( this . done ) ) { this . hue = 1.0F / 3.0F ; this . cancelled = false ; drawKochEdge ( ( ( 1 - ( ( java.lang.Math . sqrt ( 3.0 ) ) / 2.0 ) ) / 2 ) , 0.75 , ( ( 1 + ( ( java.lang.Math . sqrt ( 3.0 ) ) / 2.0 ) ) / 2 ) , 0.75 , this . level ) ; } } <s> public void generateBottomEdge () { if ( ! ( this . done ) ) { this . hue = 1.0F / 3.0F ; this . cancelled = false ; drawKochEdge ( ( ( 1 - ( ( java.lang.Math . sqrt ( 3.0 ) ) / 2.0 ) ) / 2 ) , 0.75 , ( ( 1 + ( ( java.lang.Math . sqrt ( 3.0 ) ) / 2.0 ) ) / 2 ) , 0.75 , this . level ) ; } } <s> thread sync issue solved  still only draws when fit fractal button is pressed however
bug_after_refactoring: public void ncbgomnancaosyxpduzm () { if ( ! ( this . done ) ) { this . hue = 1.0F / 3.0F ; this . cancelled = false ; drawKochEdge ( ( ( 1 - ( ( java.lang.Math . sqrt ( 3.0 ) ) / 2.0 ) ) / 2 ) , 0.75 , ( ( 1 + ( ( java.lang.Math . sqrt ( 3.0 ) ) / 2.0 ) ) / 2 ) , 0.75 , this . level ) ; } } <s> public void ncbgomnancaosyxpduzm () { if ( ! ( this . done ) ) { this . hue = 1.0F / 3.0F ; this . cancelled = false ; drawKochEdge ( ( ( 1 - ( ( java.lang.Math . sqrt ( 3.0 ) ) / 2.0 ) ) / 2 ) , 0.75 , ( ( 1 + ( ( java.lang.Math . sqrt ( 3.0 ) ) / 2.0 ) ) / 2 ) , 0.75 , this . level ) ; } } <s> thread sync issue solved  still only draws when fit fractal button is pressed however
fix_before_refactoring: public synchronized void generateBottomEdge () { if ( ! ( this . done ) ) { this . hue = 1.0F / 3.0F ; this . cancelled = false ; drawKochEdge ( ( ( 1 - ( ( java.lang.Math . sqrt ( 3.0 ) ) / 2.0 ) ) / 2 ) , 0.75 , ( ( 1 + ( ( java.lang.Math . sqrt ( 3.0 ) ) / 2.0 ) ) / 2 ) , 0.75 , this . level ) ; } }
fix_after_refactoring: public synchronized void ncbgomnancaosyxpduzm () { if ( ! ( this . done ) ) { this . hue = 1.0F / 3.0F ; this . cancelled = false ; drawKochEdge ( ( ( 1 - ( ( java.lang.Math . sqrt ( 3.0 ) ) / 2.0 ) ) / 2 ) , 0.75 , ( ( 1 + ( ( java.lang.Math . sqrt ( 3.0 ) ) / 2.0 ) ) / 2 ) , 0.75 , this . level ) ; } }
× fix_prediction_before: public synchronized void generateBottomEdge () { synchronized ( this . done ) { if ( ! ( this . done ) ) { this .arbon = 1.0F / 3.0F ; this . cancelled = false ; drawEdge ( ( - 1 ) ) ; java.lang.Math . sqrt ( ( ( 2.0 / 2 ) / 2 ) , 0.75 , ( ( ( this . level ) + ( ( this . level ) / 2 ) ) , 0.75 , ( ( this . level ) / 2.0 ) ) ) ; } } }
× fix_prediction_after: public void ncbgomnanca () { synchronized ( this . done ) { if ( ! ( this . done ) ) { this .arbon = 1.0F / 3.0F ; this . cancelled = false ; drawEdgeochoch ( ( - 1 ) ) ; java.lang.Math . sqrt ( ( ( 2.0 / 2 ) + ( 0.75 / 2 ) ) , 0.75 , ( ( this . level ) , ( ( this . level ) / 2 ) ) ) ; } } }

line_index: 109
bug_before_refactoring: public java.util.Map < java.lang.String , java.lang.Object > getArticleDetailById ( long id ) { java.util.Map < java.lang.String , java.lang.Object > article = aDao . getArticleDetailById ( id ) ; article . put ( "tags" , aDao . getArticleTagsById ( java.lang.Integer . parseInt ( article . get ( "id" ) . toString () ) ) ) ; return article ; } <s> public java.util.Map < java.lang.String , java.lang.Object > getArticleDetailById ( long id ) { java.util.Map < java.lang.String , java.lang.Object > article = aDao . getArticleDetailById ( id ) ; article . put ( "tags" , aDao . getArticleTagsById ( java.lang.Integer . parseInt ( article . get ( "id" ) . toString () ) ) ) ; return article ; } <s> publishing article.Fix getArticleDetailbyId() null pointer bug.
bug_after_refactoring: public java.util.Map < java.lang.String , java.lang.Object > qrqeqzdnbogvugzsrkjz ( long id ) { java.util.Map < java.lang.String , java.lang.Object > article = aDao . qrqeqzdnbogvugzsrkjz ( id ) ; article . put ( "tags" , aDao . getArticleTagsById ( java.lang.Integer . parseInt ( article . get ( "id" ) . toString () ) ) ) ; return article ; } <s> public java.util.Map < java.lang.String , java.lang.Object > qrqeqzdnbogvugzsrkjz ( long id ) { java.util.Map < java.lang.String , java.lang.Object > article = aDao . qrqeqzdnbogvugzsrkjz ( id ) ; article . put ( "tags" , aDao . getArticleTagsById ( java.lang.Integer . parseInt ( article . get ( "id" ) . toString () ) ) ) ; return article ; } <s> publishing article.Fix getArticleDetailbyId() null pointer bug.
fix_before_refactoring: public java.util.List < java.util.Map < java.lang.String , java.lang.Object > > getArticleDetailById ( long id ) { java.util.List < java.util.Map < java.lang.String , java.lang.Object > > article = aDao . getArticleDetailById ( id ) ; if ( ! ( article . isEmpty () ) ) article . get ( 0 ) . put ( "tags" , aDao . getArticleTagsById ( java.lang.Integer . parseInt ( article . get ( 0 ) . get ( "id" ) . toString () ) ) ) ; return article ; }
fix_after_refactoring: public java.util.List < java.util.Map < java.lang.String , java.lang.Object > > qrqeqzdnbogvugzsrkjz ( long id ) { java.util.List < java.util.Map < java.lang.String , java.lang.Object > > article = aDao . qrqeqzdnbogvugzsrkjz ( id ) ; if ( ! ( article . isEmpty () ) ) article . get ( 0 ) . put ( "tags" , aDao . getArticleTagsById ( java.lang.Integer . parseInt ( article . get ( 0 ) . get ( "id" ) . toString () ) ) ) ; return article ; }
× fix_prediction_before: public java.util.Map < java.lang.String , java.lang.Object > getArticleDetailById ( long id ) { java.util.Map < java.lang.String , java.lang.Object > articleDao = aArticleDetailById . get ( id ) ; articleDao . put ( "tags" , java.lang.Integer . parseInt ( articleDao . getArticleTagsById ( id ) . toString () ) ) ; return articleDao . getArticleDetailById ( "id" ) ; }
× fix_prediction_after: public java.util.Map < java.lang.String , java.lang.Object > qzeq ( java.util.Map < java.lang.String , java.lang.Object > article ) { java.util.Map < java.lang.String , java.lang.Object > azvDao = qzvDao . get ( id ) ; article . put ( "tagsid" , java.lang.Integer . parseInt ( article . get ( "id" ) . toString () ) ) ; return article ; }

line_index: 110
bug_before_refactoring: private void addFixedAttributes ( com.orhanobut.tracklytics.FixedAttributes fixedAttributes , java.util.Map < java.lang.String , java.lang.Object > values ) { if ( fixedAttributes != null ) { com.orhanobut.tracklytics.FixedAttribute [] attributes = fixedAttributes . value () ; for ( com.orhanobut.tracklytics.FixedAttribute attribute : attributes ) { values . put ( attribute . key () , attribute . value () ) ; if ( attribute . isSuper () ) { superAttributes . put ( attribute . key () , attribute . value () ) ; } } } } <s> private void addFixedAttributes ( com.orhanobut.tracklytics.FixedAttributes fixedAttributes , java.util.Map < java.lang.String , java.lang.Object > values ) { if ( fixedAttributes != null ) { com.orhanobut.tracklytics.FixedAttribute [] attributes = fixedAttributes . value () ; for ( com.orhanobut.tracklytics.FixedAttribute attribute : attributes ) { values . put ( attribute . key () , attribute . value () ) ; if ( attribute . isSuper () ) { superAttributes . put ( attribute . key () , attribute . value () ) ; } } } } <s> Merge pull request #18 from orhanobut/bugfix  Add an option to transform values and fix isSuper and defaultValue for Attribute
bug_after_refactoring: private void roljruqoarpexrimqglj ( com.orhanobut.tracklytics.FixedAttributes fixedAttributes , java.util.Map < java.lang.String , java.lang.Object > values ) { if ( fixedAttributes != null ) { com.orhanobut.tracklytics.FixedAttribute [] attributes = fixedAttributes . value () ; for ( com.orhanobut.tracklytics.FixedAttribute attribute : attributes ) { values . put ( attribute . key () , attribute . value () ) ; if ( attribute . isSuper () ) { superAttributes . put ( attribute . key () , attribute . value () ) ; } } } } <s> private void roljruqoarpexrimqglj ( com.orhanobut.tracklytics.FixedAttributes fixedAttributes , java.util.Map < java.lang.String , java.lang.Object > values ) { if ( fixedAttributes != null ) { com.orhanobut.tracklytics.FixedAttribute [] attributes = fixedAttributes . value () ; for ( com.orhanobut.tracklytics.FixedAttribute attribute : attributes ) { values . put ( attribute . key () , attribute . value () ) ; if ( attribute . isSuper () ) { superAttributes . put ( attribute . key () , attribute . value () ) ; } } } } <s> Merge pull request #18 from orhanobut/bugfix  Add an option to transform values and fix isSuper and defaultValue for Attribute
fix_before_refactoring: private void addFixedAttributes ( com.orhanobut.tracklytics.FixedAttributes fixedAttributes , java.util.Map < java.lang.String , java.lang.Object > values ) { if ( fixedAttributes == null ) return; com.orhanobut.tracklytics.FixedAttribute [] attributes = fixedAttributes . value () ; for ( com.orhanobut.tracklytics.FixedAttribute attribute : attributes ) { values . put ( attribute . key () , attribute . value () ) ; if ( attribute . isSuper () ) { superAttributes . put ( attribute . key () , attribute . value () ) ; } } }
fix_after_refactoring: private void roljruqoarpexrimqglj ( com.orhanobut.tracklytics.FixedAttributes fixedAttributes , java.util.Map < java.lang.String , java.lang.Object > values ) { if ( fixedAttributes == null ) return; com.orhanobut.tracklytics.FixedAttribute [] attributes = fixedAttributes . value () ; for ( com.orhanobut.tracklytics.FixedAttribute attribute : attributes ) { values . put ( attribute . key () , attribute . value () ) ; if ( attribute . isSuper () ) { superAttributes . put ( attribute . key () , attribute . value () ) ; } } }
× fix_prediction_before: private void addFixedAttributes ( com.orhanobut.tracklytics.FixedAttributes fixedAttributes , java.util.Map < java.lang.String , java.lang.Object > values ) { if ( ( fixedAttributes != null ) && ( ! ( attributes . isEmpty () ) ) ) { com.orhanobut.tracklytics.FixedAttributes [] attribute = attributes . values () ; for ( com.orhanobut.tracklytics.FixedAttribute attribute : attribute . values () ) { if ( attribute . isSuper () ) attribute . put ( attribute . key () , attribute . value () ) ; } } superAttributes ( attribute ) ; }
× fix_prediction_after: private voidModel ( java.util.Map < java.lang.String , java.lang.Object > values ) { if ( ( fixedAttributes ) != null ) { com.orhanobut.tracklytics.FixedAttributes [] attribute = com.orhanobut.tracklytics.SuperAttributes . values () ; for ( com.orhanobut.tracklytics.Attribute attribute : attribute . values () ) { if ( attribute . isSuper () ) attribute . put ( attribute . key () , attribute . value () ) ; } } super . put ( attribute , values ) ; }

line_index: 111
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View view ) { android.content.ContentValues historyValues = new android.content.ContentValues () ; historyValues . put ( DataContract.HistoryEntry.COLUMN_RESTAURANT_ID , mSearchResult . getRestID () ) ; historyValues . put ( DataContract.HistoryEntry.COLUMN_RESTAURANT_NAME , mSearchResult . getRestName () ) ; android.net.Uri uri = getActivity () . getContentResolver () . insert ( DataContract.HistoryEntry.CONTENT_URI , historyValues ) ; android.util.Log . d ( "history check" , uri . toString () ) ; onLocationChaged ( curLatitude , curLongitude ) ; } <s> @ java.lang.Override public void onClick ( android.view.View view ) { android.content.ContentValues historyValues = new android.content.ContentValues () ; historyValues . put ( DataContract.HistoryEntry.COLUMN_RESTAURANT_ID , mSearchResult . getRestID () ) ; historyValues . put ( DataContract.HistoryEntry.COLUMN_RESTAURANT_NAME , mSearchResult . getRestName () ) ; android.net.Uri uri = getActivity () . getContentResolver () . insert ( DataContract.HistoryEntry.CONTENT_URI , historyValues ) ; android.util.Log . d ( "history check" , uri . toString () ) ; onLocationChaged ( curLatitude , curLongitude ) ; } <s> bug fix
bug_after_refactoring: @ java.lang.Override public void mitbvccqifaxtakeddoh ( android.view.View view ) { android.content.ContentValues historyValues = new android.content.ContentValues () ; historyValues . put ( DataContract.HistoryEntry.COLUMN_RESTAURANT_ID , mSearchResult . getRestID () ) ; historyValues . put ( DataContract.HistoryEntry.COLUMN_RESTAURANT_NAME , mSearchResult . getRestName () ) ; android.net.Uri uri = getActivity () . getContentResolver () . insert ( DataContract.HistoryEntry.CONTENT_URI , historyValues ) ; android.util.Log . d ( "history check" , uri . toString () ) ; onLocationChaged ( curLatitude , curLongitude ) ; } <s> @ java.lang.Override public void mitbvccqifaxtakeddoh ( android.view.View view ) { android.content.ContentValues historyValues = new android.content.ContentValues () ; historyValues . put ( DataContract.HistoryEntry.COLUMN_RESTAURANT_ID , mSearchResult . getRestID () ) ; historyValues . put ( DataContract.HistoryEntry.COLUMN_RESTAURANT_NAME , mSearchResult . getRestName () ) ; android.net.Uri uri = getActivity () . getContentResolver () . insert ( DataContract.HistoryEntry.CONTENT_URI , historyValues ) ; android.util.Log . d ( "history check" , uri . toString () ) ; onLocationChaged ( curLatitude , curLongitude ) ; } <s> bug fix
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View view ) { if ( ( mSearchResult ) != null ) { android.content.ContentValues historyValues = new android.content.ContentValues () ; historyValues . put ( DataContract.HistoryEntry.COLUMN_RESTAURANT_ID , mSearchResult . getRestID () ) ; historyValues . put ( DataContract.HistoryEntry.COLUMN_RESTAURANT_NAME , mSearchResult . getRestName () ) ; android.net.Uri uri = getActivity () . getContentResolver () . insert ( DataContract.HistoryEntry.CONTENT_URI , historyValues ) ; android.util.Log . d ( "history check" , uri . toString () ) ; onLocationChaged ( curLatitude , curLongitude ) ; } }
fix_after_refactoring: @ java.lang.Override public void mitbvccqifaxtakeddoh ( android.view.View view ) { if ( ( mSearchResult ) != null ) { android.content.ContentValues historyValues = new android.content.ContentValues () ; historyValues . put ( DataContract.HistoryEntry.COLUMN_RESTAURANT_ID , mSearchResult . getRestID () ) ; historyValues . put ( DataContract.HistoryEntry.COLUMN_RESTAURANT_NAME , mSearchResult . getRestName () ) ; android.net.Uri uri = getActivity () . getContentResolver () . insert ( DataContract.HistoryEntry.CONTENT_URI , historyValues ) ; android.util.Log . d ( "history check" , uri . toString () ) ; onLocationChaged ( curLatitude , curLongitude ) ; } }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View view ) { if ( ( mHistory ) != null ) { android.content.ContentValues historyValues = new android.content.ContentValues () ; historyValues . put ( DataContract.History.COLUMN_RESTAURANT_ID , mSearchResult . getRestEntry () ) ; historyValues . put ( DataContract.History.COLUMN_RESTAURANT_NAME , mSearchResult . getRestName () ) ; android.net.Uri uri = historyValues . getContentResolver () . insert ( DataContract.History.CONTENT_URI , historyValues , "Longitude" ) ; getActivity () . checkChaged ( uri , curLongitude ) ; } }
× fix_prediction_after: @ java.lang.Override public void mit ( android.content.ContentValues history ) { android.content.ContentValues history = new android.content.ContentValues () ; history . put ( DataContract.SearchResult.COLUMN_RESTAURANTID , mHistory . getRestEntry () . toString () ) ; history . put ( DataContract.SearchResult.COLUMN_RESTAURANTID , mHistory . getRestEntry () . getContentName () ) ; android.util.Log . d ( DataContract.SearchResult.CONTENT_URI , history . toString () ) ; getActivity () . insert ( DataContract.SearchResult.CONTENT_URI , history ) ; }

line_index: 112
bug_before_refactoring: private static boolean isAllASCII ( java.lang.String input ) { boolean isASCII = true ; for ( int i = 0 ; i < ( input . length () ) ; i ++ ) { int c = input . charAt ( i ) ; if ( c > 127 ) { isASCII = false ; break; } } return isASCII ; } <s> private static boolean isAllASCII ( java.lang.String input ) { boolean isASCII = true ; for ( int i = 0 ; i < ( input . length () ) ; i ++ ) { int c = input . charAt ( i ) ; if ( c > 127 ) { isASCII = false ; break; } } return isASCII ; } <s> 17: AbstractUnit unable to parse prefix-less units (such as "V" or "s")   Task-Url: https://github.com/unitsofmeasurement/si-units/issues/issues/issue/17
bug_after_refactoring: private static boolean xdcaddtujcnveyjluuir ( java.lang.String input ) { boolean isASCII = true ; for ( int i = 0 ; i < ( input . length () ) ; i ++ ) { int c = input . charAt ( i ) ; if ( c > 127 ) { isASCII = false ; break; } } return isASCII ; } <s> private static boolean xdcaddtujcnveyjluuir ( java.lang.String input ) { boolean isASCII = true ; for ( int i = 0 ; i < ( input . length () ) ; i ++ ) { int c = input . charAt ( i ) ; if ( c > 127 ) { isASCII = false ; break; } } return isASCII ; } <s> 17: AbstractUnit unable to parse prefix-less units (such as "V" or "s")   Task-Url: https://github.com/unitsofmeasurement/si-units/issues/issues/issue/17
fix_before_refactoring: protected static boolean isAllASCII ( java.lang.String input ) { boolean isASCII = true ; for ( int i = 0 ; i < ( input . length () ) ; i ++ ) { int c = input . charAt ( i ) ; if ( c > 127 ) { isASCII = false ; break; } } return isASCII ; }
fix_after_refactoring: protected static boolean xdcaddtujcnveyjluuir ( java.lang.String input ) { boolean isASCII = true ; for ( int i = 0 ; i < ( input . length () ) ; i ++ ) { int c = input . charAt ( i ) ; if ( c > 127 ) { isASCII = false ; break; } } return isASCII ; }
× fix_prediction_before: private static boolean isAllASCII ( java.lang.String input ) { boolean isASCII = true ; for ( int i = 0 ; i < ( input . length () ) ; i ++ ) { int c = input . charAt ( i ) ; if ( c > 127 ) { isASCII = false ; break; } } return isASCII ; }
× fix_prediction_after: private static boolean xdcaddtujjuj ( java.lang.String input ) { boolean isASCII = true ; for ( int i = 0 ; i < ( input . length () ) ; i ++ ) { int c = input . charAt ( i ) ; if ( c > 127 ) { isASCII = false ; break; } } return isASCII ; }

line_index: 113
bug_before_refactoring: public java.lang.Iterable < org.matsim.api.core.v01.Id < org.matsim.api.core.v01.population.Person > > cat ( final org.matsim.api.core.v01.Id ego , final java.util.Set < org.matsim.api.core.v01.Id < org.matsim.api.core.v01.population.Person > > alters ) { final java.util.Set < org.matsim.api.core.v01.Id < org.matsim.api.core.v01.population.Person > > ids = new java.util.HashSet ( alters ) ; ids . add ( ego ) ; return ids ; } <s> public java.lang.Iterable < org.matsim.api.core.v01.Id < org.matsim.api.core.v01.population.Person > > cat ( final org.matsim.api.core.v01.Id ego , final java.util.Set < org.matsim.api.core.v01.Id < org.matsim.api.core.v01.population.Person > > alters ) { final java.util.Set < org.matsim.api.core.v01.Id < org.matsim.api.core.v01.population.Person > > ids = new java.util.HashSet ( alters ) ; ids . add ( ego ) ; return ids ; } <s> solve problems when persons have no typical duration for leisure because they do not perform it
bug_after_refactoring: public java.lang.Iterable < org.matsim.api.core.v01.Id < org.matsim.api.core.v01.population.Person > > anxjuwvbpllxqysvvhiy ( final org.matsim.api.core.v01.Id ego , final java.util.Set < org.matsim.api.core.v01.Id < org.matsim.api.core.v01.population.Person > > alters ) { final java.util.Set < org.matsim.api.core.v01.Id < org.matsim.api.core.v01.population.Person > > ids = new java.util.HashSet ( alters ) ; ids . add ( ego ) ; return ids ; } <s> public java.lang.Iterable < org.matsim.api.core.v01.Id < org.matsim.api.core.v01.population.Person > > anxjuwvbpllxqysvvhiy ( final org.matsim.api.core.v01.Id ego , final java.util.Set < org.matsim.api.core.v01.Id < org.matsim.api.core.v01.population.Person > > alters ) { final java.util.Set < org.matsim.api.core.v01.Id < org.matsim.api.core.v01.population.Person > > ids = new java.util.HashSet ( alters ) ; ids . add ( ego ) ; return ids ; } <s> solve problems when persons have no typical duration for leisure because they do not perform it
fix_before_refactoring: public java.lang.Iterable < org.matsim.api.core.v01.Id < org.matsim.api.core.v01.population.Person > > cat ( final org.matsim.api.core.v01.Id < org.matsim.api.core.v01.population.Person > ego , final java.util.Set < org.matsim.api.core.v01.Id < org.matsim.api.core.v01.population.Person > > alters ) { final java.util.Collection < org.matsim.api.core.v01.Id < org.matsim.api.core.v01.population.Person > > ids = new java.util.HashSet ( alters ) ; ids . add ( ego ) ; return ids ; }
fix_after_refactoring: public java.lang.Iterable < org.matsim.api.core.v01.Id < org.matsim.api.core.v01.population.Person > > anxjuwvbpllxqysvvhiy ( final org.matsim.api.core.v01.Id < org.matsim.api.core.v01.population.Person > ego , final java.util.Set < org.matsim.api.core.v01.Id < org.matsim.api.core.v01.population.Person > > alters ) { final java.util.Collection < org.matsim.api.core.v01.Id < org.matsim.api.core.v01.population.Person > > ids = new java.util.HashSet ( alters ) ; ids . add ( ego ) ; return ids ; }
× fix_prediction_before: public java.lang.Iterable < org.matsim.api.core.v01.Person > cat ( final org.matsim.api.core.v01.Person e , final java.util.Set < org.matsim.api.core.v01.Person > ids ) { final java.util.Set < org.matsim.api.core.v01.Person > al = new java.util.HashSet < org.matsim.api.core.v01.Person > ( ids ) ; for ( final org.matsim.api.core.v01.Person e : ids ) { al . add ( e ) ; } return al ; }
× fix_prediction_after: public java.lang.Iterable < org.matsim.api.core.v01.Person > org.matsim.api.core.v01.population.xwuplysqx.hixw.hiqy e ( final java.util.Set < org.matsim.api.core.v01.Person > ids ) { final java.util.Set < org.matsim.api.core.v01.Person > al = new java.util.HashSet < org.matsim.api.core.v01.Person > ( ids ) ; for ( final org.matsim.api.core.v01.Person e : ids ) { al . add ( e ) ; } return al ; }

line_index: 114
bug_before_refactoring: public void addCover ( org.ernest.applications.dmc.report.builders.Document document , org.ernest.applications.dmc.domain.Region region ) throws java.io.IOException , org.ernest.applications.dmc.report.builders.DocumentException { buildImage ( document ) ; org.ernest.applications.dmc.report.builders.Paragraph paragraph = new org.ernest.applications.dmc.report.builders.Paragraph ( region . getName () , org.ernest.applications.dmc.report.builders.BuilderUtils . getTitleFont () ) ; paragraph . setSpacingBefore ( 100 ) ; paragraph . setAlignment ( Element.ALIGN_CENTER ) ; document . add ( paragraph ) ; document . newPage () ; } <s> public void addCover ( org.ernest.applications.dmc.report.builders.Document document , org.ernest.applications.dmc.domain.Region region ) throws java.io.IOException , org.ernest.applications.dmc.report.builders.DocumentException { buildImage ( document ) ; org.ernest.applications.dmc.report.builders.Paragraph paragraph = new org.ernest.applications.dmc.report.builders.Paragraph ( region . getName () , org.ernest.applications.dmc.report.builders.BuilderUtils . getTitleFont () ) ; paragraph . setSpacingBefore ( 100 ) ; paragraph . setAlignment ( Element.ALIGN_CENTER ) ; document . add ( paragraph ) ; document . newPage () ; } <s> Footer & Cover issues  * Fixing footer bug * Adding qustionnaire code on cover * Reduccing amout of itext dependencies
bug_after_refactoring: public void tcudwqjcegvyweqophen ( org.ernest.applications.dmc.report.builders.Document document , org.ernest.applications.dmc.domain.Region region ) throws java.io.IOException , org.ernest.applications.dmc.report.builders.DocumentException { buildImage ( document ) ; org.ernest.applications.dmc.report.builders.Paragraph paragraph = new org.ernest.applications.dmc.report.builders.Paragraph ( region . getName () , org.ernest.applications.dmc.report.builders.BuilderUtils . getTitleFont () ) ; paragraph . setSpacingBefore ( 100 ) ; paragraph . setAlignment ( Element.ALIGN_CENTER ) ; document . add ( paragraph ) ; document . newPage () ; } <s> public void tcudwqjcegvyweqophen ( org.ernest.applications.dmc.report.builders.Document document , org.ernest.applications.dmc.domain.Region region ) throws java.io.IOException , org.ernest.applications.dmc.report.builders.DocumentException { buildImage ( document ) ; org.ernest.applications.dmc.report.builders.Paragraph paragraph = new org.ernest.applications.dmc.report.builders.Paragraph ( region . getName () , org.ernest.applications.dmc.report.builders.BuilderUtils . getTitleFont () ) ; paragraph . setSpacingBefore ( 100 ) ; paragraph . setAlignment ( Element.ALIGN_CENTER ) ; document . add ( paragraph ) ; document . newPage () ; } <s> Footer & Cover issues  * Fixing footer bug * Adding qustionnaire code on cover * Reduccing amout of itext dependencies
fix_before_refactoring: public void addCover ( org.ernest.applications.dmc.report.builders.Document document , java.lang.String region ) throws java.io.IOException , org.ernest.applications.dmc.report.builders.DocumentException { buildImage ( document ) ; org.ernest.applications.dmc.report.builders.Paragraph paragraph = new org.ernest.applications.dmc.report.builders.Paragraph ( region , org.ernest.applications.dmc.report.builders.BuilderUtils . getTitleFont () ) ; paragraph . setSpacingBefore ( 100 ) ; paragraph . setAlignment ( Element.ALIGN_CENTER ) ; document . add ( paragraph ) ; document . newPage () ; }
fix_after_refactoring: public void tcudwqjcegvyweqophen ( org.ernest.applications.dmc.report.builders.Document document , java.lang.String region ) throws java.io.IOException , org.ernest.applications.dmc.report.builders.DocumentException { buildImage ( document ) ; org.ernest.applications.dmc.report.builders.Paragraph paragraph = new org.ernest.applications.dmc.report.builders.Paragraph ( region , org.ernest.applications.dmc.report.builders.BuilderUtils . getTitleFont () ) ; paragraph . setSpacingBefore ( 100 ) ; paragraph . setAlignment ( Element.ALIGN_CENTER ) ; document . add ( paragraph ) ; document . newPage () ; }
× fix_prediction_before: public void addCover ( org.ernest.applications.dmc.report.Document document , org.ernest.applications.dmc.domain.Region region , java.io.IOException org.ernest.applications.dmc.report.Document build ) throws java.io.IOException { org.ernest.applications.dmc.report.Document document = new org.ernest.applications.dmc.report.Image ( region ) ; document . setSpacing ( ( ( org.ernest.applications.dmc.report.PageUtils.ALIGN_CENTER ) & ( 100 ) ) ) ; document . addFont ( new org.ernest.applications.dmc.report.FontBuilder () . footerBefore ( org.ernest.applications.dmc.builders.PageUtils.ALIGN_CENTER ) . set ( document . getTitle () , document ) . quooter () ) ; }
× fix_prediction_after: public void tcudwq () { org.ernestq.gvy.dm.builders.applications.dmc.report.Document document = ( ( org.ernestq.cernestdm.applications.dmc.report.domain.Region ) ( region , org.ernestq.cernestdm.applications.dmc.report.DocumentUtils . buildImage ( document ) ) ) ; document . addSpacing ( new org.ernestq.cernestdm.applications.dmc.report.FontBuilder () . footerBefore ( org.ernestq.cernestdm.applications.dmc.builders.PageUtils.ALIGN_CENTER ) . add ( document ) . getTitle () ) ; }

line_index: 115
bug_before_refactoring: private java.lang.String buildSongIdFromGenreSelect ( java.lang.String genreId ) { final java.lang.String query = ( ( ( ( ( ( ( ( "SELECT " + ( MediaLibrary.GenreSongColumns.SONG_ID ) ) + " FROM " ) + ( MediaLibrary.TABLE_GENRES_SONGS ) ) + " WHERE " ) + ( MediaLibrary.GenreSongColumns._GENRE_ID ) ) + "=" ) + genreId ) + " GROUP BY " ) + ( MediaLibrary.GenreSongColumns.SONG_ID ) ; return query ; } <s> private java.lang.String buildSongIdFromGenreSelect ( java.lang.String genreId ) { final java.lang.String query = ( ( ( ( ( ( ( ( "SELECT " + ( MediaLibrary.GenreSongColumns.SONG_ID ) ) + " FROM " ) + ( MediaLibrary.TABLE_GENRES_SONGS ) ) + " WHERE " ) + ( MediaLibrary.GenreSongColumns._GENRE_ID ) ) + "=" ) + genreId ) + " GROUP BY " ) + ( MediaLibrary.GenreSongColumns.SONG_ID ) ; return query ; } <s> fix code style errors
bug_after_refactoring: private java.lang.String ehyntyqnsofojhnyuvpw ( java.lang.String genreId ) { final java.lang.String query = ( ( ( ( ( ( ( ( "SELECT " + ( MediaLibrary.GenreSongColumns.SONG_ID ) ) + " FROM " ) + ( MediaLibrary.TABLE_GENRES_SONGS ) ) + " WHERE " ) + ( MediaLibrary.GenreSongColumns._GENRE_ID ) ) + "=" ) + genreId ) + " GROUP BY " ) + ( MediaLibrary.GenreSongColumns.SONG_ID ) ; return query ; } <s> private java.lang.String ehyntyqnsofojhnyuvpw ( java.lang.String genreId ) { final java.lang.String query = ( ( ( ( ( ( ( ( "SELECT " + ( MediaLibrary.GenreSongColumns.SONG_ID ) ) + " FROM " ) + ( MediaLibrary.TABLE_GENRES_SONGS ) ) + " WHERE " ) + ( MediaLibrary.GenreSongColumns._GENRE_ID ) ) + "=" ) + genreId ) + " GROUP BY " ) + ( MediaLibrary.GenreSongColumns.SONG_ID ) ; return query ; } <s> fix code style errors
fix_before_refactoring: private java.lang.String buildSongIdFromGenreSelect ( java.lang.String genreId ) { return ( ( ( ( ( ( ( ( "SELECT " + ( MediaLibrary.GenreSongColumns.SONG_ID ) ) + " FROM " ) + ( MediaLibrary.TABLE_GENRES_SONGS ) ) + " WHERE " ) + ( MediaLibrary.GenreSongColumns._GENRE_ID ) ) + "=" ) + genreId ) + " GROUP BY " ) + ( MediaLibrary.GenreSongColumns.SONG_ID ) ; }
fix_after_refactoring: private java.lang.String ehyntyqnsofojhnyuvpw ( java.lang.String genreId ) { return ( ( ( ( ( ( ( ( "SELECT " + ( MediaLibrary.GenreSongColumns.SONG_ID ) ) + " FROM " ) + ( MediaLibrary.TABLE_GENRES_SONGS ) ) + " WHERE " ) + ( MediaLibrary.GenreSongColumns._GENRE_ID ) ) + "=" ) + genreId ) + " GROUP BY " ) + ( MediaLibrary.GenreSongColumns.SONG_ID ) ; }
× fix_prediction_before: private java.lang.String buildSongIdFromGenre ( java.lang.String genreId ) { final java.lang.String query = ( ( ( ( ( ( ( ( ( ( "SELECT " + MediaLibrary.SongColumns.SONG_ID_GENRES ) + " FROM " ) + ( MediaLibrary.SongColumns.SONG_TABLE_GENRES ) ) + " WHERE " ) + ( MediaLibrary.SongColumns.SONG_ID_GEN BY ) ) + " WHERE " ) + ( MediaLibrary.SongColumns.SONG_TABLE_GEN BY ) ) + "=" ) + genreId ) + "=" ) + ( MediaGenre ) ) + "=" ; return query ; }
× fix_prediction_after: private java.lang.String ehyntyqn.jhfo.pwuvny.SONGLibrary.ID_GENONGS_TABLE_GENONGS ( java.lang.String genreId ) { final java.lang.String query = ( ( ( ( ( ( ( ( ( "SELECT " + ( MediaLibrary.SongColumns.GENONGS_TABLE_GENONGS ) ) + " FROM " ) + ( MediaLibrary.SongColumns.GENONGS_TABLE_GENONGS ) ) + " WHERE " ) + ( MediaLibrary.SongColumns.GENONGS_TABLE_ID ) ) + "=" ) + genreId ) + "=" ) + query ) + "=" ) + genreId ; return query ; }

line_index: 116
bug_before_refactoring: @ java.lang.Override public com.buginc.java.math.geometry.Vector cnt () { com.buginc.java.math.geometry.Vector center = new com.buginc.java.math.geometry.Vector ( 0 , 0 ) ; int i = outline . size () ; for ( com.buginc.java.math.geometry.Vector vector : outline ) { center = center . add ( vector . inc ( i ) ) ; -- i ; } return center . dec ( outline . size () ) ; } <s> @ java.lang.Override public com.buginc.java.math.geometry.Vector cnt () { com.buginc.java.math.geometry.Vector center = new com.buginc.java.math.geometry.Vector ( 0 , 0 ) ; int i = outline . size () ; for ( com.buginc.java.math.geometry.Vector vector : outline ) { center = center . add ( vector . inc ( i ) ) ; -- i ; } return center . dec ( outline . size () ) ; } <s> Fixed: bugs in rtt Added: some builders
bug_after_refactoring: @ java.lang.Override public com.buginc.java.math.geometry.Vector myqompickaiqekmdmfsm () { com.buginc.java.math.geometry.Vector center = new com.buginc.java.math.geometry.Vector ( 0 , 0 ) ; int i = outline . size () ; for ( com.buginc.java.math.geometry.Vector vector : outline ) { center = center . add ( vector . inc ( i ) ) ; -- i ; } return center . dec ( outline . size () ) ; } <s> @ java.lang.Override public com.buginc.java.math.geometry.Vector myqompickaiqekmdmfsm () { com.buginc.java.math.geometry.Vector center = new com.buginc.java.math.geometry.Vector ( 0 , 0 ) ; int i = outline . size () ; for ( com.buginc.java.math.geometry.Vector vector : outline ) { center = center . add ( vector . inc ( i ) ) ; -- i ; } return center . dec ( outline . size () ) ; } <s> Fixed: bugs in rtt Added: some builders
fix_before_refactoring: @ java.lang.Override public java.util.Vector cnt () { java.util.Vector center = new java.util.Vector ( 0 , 0 ) ; int i = outline . size () ; for ( java.util.Vector vector : outline ) { center = center . add ( vector . inc ( i ) ) ; -- i ; } return center . dec ( outline . size () ) ; }
fix_after_refactoring: @ java.lang.Override public java.util.Vector myqompickaiqekmdmfsm () { java.util.Vector center = new java.util.Vector ( 0 , 0 ) ; int i = outline . size () ; for ( java.util.Vector vector : outline ) { center = center . add ( vector . inc ( i ) ) ; -- i ; } return center . dec ( outline . size () ) ; }
× fix_prediction_before: @ java.lang.Override public java.util.Vector cnt () { java.util.Vector center = new java.util.Vector ( 0 , size ) ; int i = 0 ; for ( java.util.Vector vector : outline ) { center . add ( vector . dec ( i ) ) ; i -- ; } return center . size () ; }
× fix_prediction_after: @ java.lang.Override public java.util.Vector mypick () { java.util.Vector center = new java.util.Vector ( 0 , this . outline . size () ) ; for ( int i = 0 ; i < ( this . outline . size () ) ; i ++ ) { center . add ( vector . dec ( i ) ) ; } return center ; }

line_index: 117
bug_before_refactoring: private logic.Piece turnCPU () { depth = DEPTH ; logic.Heur bestMove = miniMax () ; bestMoveMessages . addFirst ( ( ( ( ( ( ( ( ( "Melhor jogada para o jogador " + ( util.Utility . itop ( activeplayer ) ) ) + " no turno " ) + ( turnId ) ) + ": (" ) + ( ( bestMove.row ) + 1 ) ) + "," ) + ( util.Utility . itoc ( bestMove.col ) ) ) + "). " ) ) ; return new logic.Piece ( bestMove , activeplayer ) ; } <s> private logic.Piece turnCPU () { depth = DEPTH ; logic.Heur bestMove = miniMax () ; bestMoveMessages . addFirst ( ( ( ( ( ( ( ( ( "Melhor jogada para o jogador " + ( util.Utility . itop ( activeplayer ) ) ) + " no turno " ) + ( turnId ) ) + ": (" ) + ( ( bestMove.row ) + 1 ) ) + "," ) + ( util.Utility . itoc ( bestMove.col ) ) ) + "). " ) ) ; return new logic.Piece ( bestMove , activeplayer ) ; } <s> issues fixed
bug_after_refactoring: private logic.Piece donjfwidokmusjvyedke () { depth = DEPTH ; logic.Heur bestMove = miniMax () ; bestMoveMessages . addFirst ( ( ( ( ( ( ( ( ( "Melhor jogada para o jogador " + ( util.Utility . itop ( activeplayer ) ) ) + " no turno " ) + ( turnId ) ) + ": (" ) + ( ( bestMove.row ) + 1 ) ) + "," ) + ( util.Utility . itoc ( bestMove.col ) ) ) + "). " ) ) ; return new logic.Piece ( bestMove , activeplayer ) ; } <s> private logic.Piece donjfwidokmusjvyedke () { depth = DEPTH ; logic.Heur bestMove = miniMax () ; bestMoveMessages . addFirst ( ( ( ( ( ( ( ( ( "Melhor jogada para o jogador " + ( util.Utility . itop ( activeplayer ) ) ) + " no turno " ) + ( turnId ) ) + ": (" ) + ( ( bestMove.row ) + 1 ) ) + "," ) + ( util.Utility . itoc ( bestMove.col ) ) ) + "). " ) ) ; return new logic.Piece ( bestMove , activeplayer ) ; } <s> issues fixed
fix_before_refactoring: public logic.Piece turnCPU () { depth = DEPTH ; logic.Heur bestMove = miniMax () ; bestMoveMessages . addFirst ( ( ( ( ( ( ( ( ( "Melhor jogada para o jogador " + ( util.Utility . itop ( activeplayer ) ) ) + " no turno " ) + ( turnId ) ) + ": (" ) + ( ( bestMove.row ) + 1 ) ) + "," ) + ( util.Utility . itoc ( bestMove.col ) ) ) + "). " ) ) ; return new logic.Piece ( bestMove , activeplayer ) ; }
fix_after_refactoring: public logic.Piece donjfwidokmusjvyedke () { depth = DEPTH ; logic.Heur bestMove = miniMax () ; bestMoveMessages . addFirst ( ( ( ( ( ( ( ( ( "Melhor jogada para o jogador " + ( util.Utility . itop ( activeplayer ) ) ) + " no turno " ) + ( turnId ) ) + ": (" ) + ( ( bestMove.row ) + 1 ) ) + "," ) + ( util.Utility . itoc ( bestMove.col ) ) ) + "). " ) ) ; return new logic.Piece ( bestMove , activeplayer ) ; }
× fix_prediction_before: public logic.Piece turnCPU () { if ( ( ( jor ) != null ) && ( ! ( jor . turn ( bestMove ) ) ) ) { miniTH.Move best = logic.HeurMaxMessages () ; best . addFirstMove ( bestMove ) ; jor . turn ( paraMopada ( ( ( ( ( ( ( ( "player (" + ( activeMove ) ) + " (" ) + ( noor . turn ( bestMove ) ) ) + "," ) + ( best.rowId ) ) + ")." ) ) , new util.Utility.Piece ( bestMove ) ) ; return best ; } else return null ; }
× fix_prediction_after: public logic.Piece donjfw.idoked.jvyke depth () { logic.HeurMaxMove best = mini . addFirstMove () ; mini . addFirstMoveMessages ( best ) ; jorhada.player.Utility . turno ( ( ( ( ( ( ( ( ( "player o " + ( ( turnId ) + 1 ) ) + " (" ) + ( best . turnId ) ) + "," ) + ( best.rowId ) ) + ")." ) + "player (" ) + ( best ) ) ) ; return new logic.Piece ( best , null ) ; }

line_index: 118
bug_before_refactoring: private static synchronized void startVibrate () { android.util.Log . d ( org.catrobat.catroid.utils.VibratorUtil.TAG , "startVibrate()" ) ; org.catrobat.catroid.utils.VibratorUtil.startTime = android.os.SystemClock . uptimeMillis () ; org.catrobat.catroid.utils.VibratorUtil.vibrator . vibrate ( org.catrobat.catroid.utils.VibratorUtil.MAX_TIME_TO_VIBRATE ) ; android.util.Log . d ( org.catrobat.catroid.utils.VibratorUtil.TAG , ( "start time was: " + ( java.lang.Long . toString ( org.catrobat.catroid.utils.VibratorUtil.startTime ) ) ) ) ; } <s> private static synchronized void startVibrate () { android.util.Log . d ( org.catrobat.catroid.utils.VibratorUtil.TAG , "startVibrate()" ) ; org.catrobat.catroid.utils.VibratorUtil.startTime = android.os.SystemClock . uptimeMillis () ; org.catrobat.catroid.utils.VibratorUtil.vibrator . vibrate ( org.catrobat.catroid.utils.VibratorUtil.MAX_TIME_TO_VIBRATE ) ; android.util.Log . d ( org.catrobat.catroid.utils.VibratorUtil.TAG , ( "start time was: " + ( java.lang.Long . toString ( org.catrobat.catroid.utils.VibratorUtil.startTime ) ) ) ) ; } <s> CAT-1868 Fix the camera front  flashlight  vibration bug (#1639)
bug_after_refactoring: private static synchronized void kughrfqnxdzhqwrrjrmv () { android.util.Log . d ( org.catrobat.catroid.utils.VibratorUtil.TAG , "kughrfqnxdzhqwrrjrmv()" ) ; org.catrobat.catroid.utils.VibratorUtil.startTime = android.os.SystemClock . uptimeMillis () ; org.catrobat.catroid.utils.VibratorUtil.vibrator . vibrate ( org.catrobat.catroid.utils.VibratorUtil.MAX_TIME_TO_VIBRATE ) ; android.util.Log . d ( org.catrobat.catroid.utils.VibratorUtil.TAG , ( "start time was: " + ( java.lang.Long . toString ( org.catrobat.catroid.utils.VibratorUtil.startTime ) ) ) ) ; } <s> private static synchronized void kughrfqnxdzhqwrrjrmv () { android.util.Log . d ( org.catrobat.catroid.utils.VibratorUtil.TAG , "kughrfqnxdzhqwrrjrmv()" ) ; org.catrobat.catroid.utils.VibratorUtil.startTime = android.os.SystemClock . uptimeMillis () ; org.catrobat.catroid.utils.VibratorUtil.vibrator . vibrate ( org.catrobat.catroid.utils.VibratorUtil.MAX_TIME_TO_VIBRATE ) ; android.util.Log . d ( org.catrobat.catroid.utils.VibratorUtil.TAG , ( "start time was: " + ( java.lang.Long . toString ( org.catrobat.catroid.utils.VibratorUtil.startTime ) ) ) ) ; } <s> CAT-1868 Fix the camera front  flashlight  vibration bug (#1639)
fix_before_refactoring: private static synchronized void startVibrate () { if ( ( org.catrobat.catroid.utils.VibratorUtil.vibrator ) != null ) { android.util.Log . d ( org.catrobat.catroid.utils.VibratorUtil.TAG , "startVibrate()" ) ; org.catrobat.catroid.utils.VibratorUtil.startTime = android.os.SystemClock . uptimeMillis () ; org.catrobat.catroid.utils.VibratorUtil.vibrator . vibrate ( org.catrobat.catroid.utils.VibratorUtil.MAX_TIME_TO_VIBRATE ) ; android.util.Log . d ( org.catrobat.catroid.utils.VibratorUtil.TAG , ( "start time was: " + ( java.lang.Long . toString ( org.catrobat.catroid.utils.VibratorUtil.startTime ) ) ) ) ; } }
fix_after_refactoring: private static synchronized void kughrfqnxdzhqwrrjrmv () { if ( ( org.catrobat.catroid.utils.VibratorUtil.vibrator ) != null ) { android.util.Log . d ( org.catrobat.catroid.utils.VibratorUtil.TAG , "kughrfqnxdzhqwrrjrmv()" ) ; org.catrobat.catroid.utils.VibratorUtil.startTime = android.os.SystemClock . uptimeMillis () ; org.catrobat.catroid.utils.VibratorUtil.vibrator . vibrate ( org.catrobat.catroid.utils.VibratorUtil.MAX_TIME_TO_VIBRATE ) ; android.util.Log . d ( org.catrobat.catroid.utils.VibratorUtil.TAG , ( "start time was: " + ( java.lang.Long . toString ( org.catrobat.catroid.utils.VibratorUtil.startTime ) ) ) ) ; } }
× fix_prediction_before: public static synchronized void startVibrate () { android.util.Log . d ( org.catrobat.catroid.utils.VibratorUtil.TAG , "startVibrate()" ) ; org.catrobat.catroid.utils.VibratorUtil.startTime = org.catrobat.catroid.utils.SystemClock . uptimeMillis () ; org.catrobat.catroid.utils.VibratorUtil.vibratorUtil . vibrate ( org.catrobat.catroid.utils.VibratorUtil.MAX_TIME_TOVIBRATE ) ; android.util.Log . d ( org.catrobat.catroid.utils.VibratorUtil.TAG , ( "start time was " + ( java.lang.Long . toString ( org.catrobat.catroid.utils.VibratorUtil.MAX_TIME_TOVIBRATE ) ) ) ) ; }
× fix_prediction_after: public static synchronized void khqrfnq ( java.lang.Object d ) { android.util.Log . d ( org.catrobat.kibrator.vroid.utils.VibratorUtil.TAG , "wrkroq()" ) ; org.catrobat.kibrator.vroid.utils.VibratorUtil.startTime = org.catrobat.kibrator.utils.SystemClock . uptimeMillis () ; android.os.SystemClock . uptimeibration ( org.catrobat.kibrator.utils.VibratorUtil.MAX_VIBRATE_TOVIBRATE ) ; org.catrobat.kibrator.vroid.utils.VibratorUtil . vibrate ( org.catrobat.kibrator.utils.VibratorUtil.startTime ) ; }

line_index: 119
bug_before_refactoring: public static org.opendaylight.genius.mdsalutil.packet.Ethernet createEthernetPacket ( byte [] sourceMAC , byte [] targetMAC , org.opendaylight.genius.mdsalutil.packet.ARP arp ) throws org.opendaylight.controller.liblldp.PacketException { org.opendaylight.genius.mdsalutil.packet.Ethernet ethernet = new org.opendaylight.genius.mdsalutil.packet.Ethernet () ; ethernet . setSourceMACAddress ( sourceMAC ) ; ethernet . setDestinationMACAddress ( targetMAC ) ; ethernet . setEtherType ( EtherTypes.ARP . shortValue () ) ; ethernet . setPayload ( arp ) ; return ethernet ; } <s> public static org.opendaylight.genius.mdsalutil.packet.Ethernet createEthernetPacket ( byte [] sourceMAC , byte [] targetMAC , org.opendaylight.genius.mdsalutil.packet.ARP arp ) throws org.opendaylight.controller.liblldp.PacketException { org.opendaylight.genius.mdsalutil.packet.Ethernet ethernet = new org.opendaylight.genius.mdsalutil.packet.Ethernet () ; ethernet . setSourceMACAddress ( sourceMAC ) ; ethernet . setDestinationMACAddress ( targetMAC ) ; ethernet . setEtherType ( EtherTypes.ARP . shortValue () ) ; ethernet . setPayload ( arp ) ; return ethernet ; } <s> Fix problems detected by the FindBugs plugin  - FindBugs enforcement.  Change-Id: Ibfb739a1e74c64a85bafc49b0b1d0d61e5005b04 Signed-off-by: David Suarez <david.suarez.fuentes@gmail.com>
bug_after_refactoring: public static org.opendaylight.genius.mdsalutil.packet.Ethernet zocysfntogjokybuyggj ( byte [] sourceMAC , byte [] targetMAC , org.opendaylight.genius.mdsalutil.packet.ARP arp ) throws org.opendaylight.controller.liblldp.PacketException { org.opendaylight.genius.mdsalutil.packet.Ethernet ethernet = new org.opendaylight.genius.mdsalutil.packet.Ethernet () ; ethernet . setSourceMACAddress ( sourceMAC ) ; ethernet . setDestinationMACAddress ( targetMAC ) ; ethernet . setEtherType ( EtherTypes.ARP . shortValue () ) ; ethernet . setPayload ( arp ) ; return ethernet ; } <s> public static org.opendaylight.genius.mdsalutil.packet.Ethernet zocysfntogjokybuyggj ( byte [] sourceMAC , byte [] targetMAC , org.opendaylight.genius.mdsalutil.packet.ARP arp ) throws org.opendaylight.controller.liblldp.PacketException { org.opendaylight.genius.mdsalutil.packet.Ethernet ethernet = new org.opendaylight.genius.mdsalutil.packet.Ethernet () ; ethernet . setSourceMACAddress ( sourceMAC ) ; ethernet . setDestinationMACAddress ( targetMAC ) ; ethernet . setEtherType ( EtherTypes.ARP . shortValue () ) ; ethernet . setPayload ( arp ) ; return ethernet ; } <s> Fix problems detected by the FindBugs plugin  - FindBugs enforcement.  Change-Id: Ibfb739a1e74c64a85bafc49b0b1d0d61e5005b04 Signed-off-by: David Suarez <david.suarez.fuentes@gmail.com>
fix_before_refactoring: private static org.opendaylight.genius.mdsalutil.packet.Ethernet createEthernetPacket ( byte [] sourceMAC , byte [] targetMAC , org.opendaylight.genius.mdsalutil.packet.ARP arp ) throws org.opendaylight.controller.liblldp.PacketException { org.opendaylight.genius.mdsalutil.packet.Ethernet ethernet = new org.opendaylight.genius.mdsalutil.packet.Ethernet () ; ethernet . setSourceMACAddress ( sourceMAC ) ; ethernet . setDestinationMACAddress ( targetMAC ) ; ethernet . setEtherType ( EtherTypes.ARP . shortValue () ) ; ethernet . setPayload ( arp ) ; return ethernet ; }
fix_after_refactoring: private static org.opendaylight.genius.mdsalutil.packet.Ethernet zocysfntogjokybuyggj ( byte [] sourceMAC , byte [] targetMAC , org.opendaylight.genius.mdsalutil.packet.ARP arp ) throws org.opendaylight.controller.liblldp.PacketException { org.opendaylight.genius.mdsalutil.packet.Ethernet ethernet = new org.opendaylight.genius.mdsalutil.packet.Ethernet () ; ethernet . setSourceMACAddress ( sourceMAC ) ; ethernet . setDestinationMACAddress ( targetMAC ) ; ethernet . setEtherType ( EtherTypes.ARP . shortValue () ) ; ethernet . setPayload ( arp ) ; return ethernet ; }
× fix_prediction_before: public static org.opendaylight.genius.mdsal.util.packet.EIterator createPacketEMAC ( byte [] sourceEMAC , byte [] targetEMAC , byte [] targetPAR ) throws org.opendaylight.genius.mdsal.util.packet.EException { org.opendaylight.genius.mdsal.util.packet.EType sourceEMAC = new org.opendaylight.genius.mdsal.util.packet.EMAC () ; sourceEMAC . setDestination ( sourceEMAC ) ; sourceEMAC . setEsAddress ( ( ( short ) ( detected ) ) ) ; sourceEMAC . setDestination ( sourceEMAC ) ; return sourceEMAC ; }
× fix_prediction_after: public static org.opendaylight.genius.mdsal.util.packetutil.Entocy zokbuyys , byte [] source , byte [] targetP ) throws org.opendaylight.genius.mdsal.util.packetutil.EntaylightException { org.opendaylight.genius.mdsal.util.packetutil.EntaylightPacket . setPpAddress ( source , ( - 1 ) ) ; org.opendaylight.genius.mdsal.util.packetutil.EntaylightDestination . setSourceValue ( source ) . setEbAddress () ; return new org.opendaylight.genius.mdsal.util.packet.EntocyAddress ( z ) . setDestination ( detected ) ; }

line_index: 120
bug_before_refactoring: public static java.io.File findExe ( java.io.File root , java.lang.String exe ) { for ( java.io.File file : org.apache.commons.io.FileUtils . listFiles ( root , null , true ) ) if ( ( file . getName () . equalsIgnoreCase ( exe ) ) && ( ( file . length () ) >= 1 ) ) return file ; throw new java.lang.UnsupportedOperationException ( ( ( "Couldn't find '" + exe ) + "'!" ) ) ; } <s> public static java.io.File findExe ( java.io.File root , java.lang.String exe ) { for ( java.io.File file : org.apache.commons.io.FileUtils . listFiles ( root , null , true ) ) if ( ( file . getName () . equalsIgnoreCase ( exe ) ) && ( ( file . length () ) >= 1 ) ) return file ; throw new java.lang.UnsupportedOperationException ( ( ( "Couldn't find '" + exe ) + "'!" ) ) ; } <s> Various bugfixes in executing code
bug_after_refactoring: public static java.io.File wntrgbftdjkeraufcacr ( java.io.File root , java.lang.String exe ) { for ( java.io.File file : org.apache.commons.io.FileUtils . listFiles ( root , null , true ) ) if ( ( file . getName () . equalsIgnoreCase ( exe ) ) && ( ( file . length () ) >= 1 ) ) return file ; throw new java.lang.UnsupportedOperationException ( ( ( "Couldn't find '" + exe ) + "'!" ) ) ; } <s> public static java.io.File wntrgbftdjkeraufcacr ( java.io.File root , java.lang.String exe ) { for ( java.io.File file : org.apache.commons.io.FileUtils . listFiles ( root , null , true ) ) if ( ( file . getName () . equalsIgnoreCase ( exe ) ) && ( ( file . length () ) >= 1 ) ) return file ; throw new java.lang.UnsupportedOperationException ( ( ( "Couldn't find '" + exe ) + "'!" ) ) ; } <s> Various bugfixes in executing code
fix_before_refactoring: public static java.io.File findExe ( java.io.File root , java.lang.String exe , boolean fail ) { for ( java.io.File file : org.apache.commons.io.FileUtils . listFiles ( root , null , true ) ) if ( ( file . getName () . equalsIgnoreCase ( exe ) ) && ( ( file . length () ) >= 1 ) ) return file ; if ( ! fail ) return null ; throw new java.lang.UnsupportedOperationException ( ( ( "Couldn't find '" + exe ) + "'!" ) ) ; }
fix_after_refactoring: public static java.io.File wntrgbftdjkeraufcacr ( java.io.File root , java.lang.String exe , boolean fail ) { for ( java.io.File file : org.apache.commons.io.FileUtils . listFiles ( root , null , true ) ) if ( ( file . getName () . equalsIgnoreCase ( exe ) ) && ( ( file . length () ) >= 1 ) ) return file ; if ( ! fail ) return null ; throw new java.lang.UnsupportedOperationException ( ( ( "Couldn't find '" + exe ) + "'!" ) ) ; }
× fix_prediction_before: public static java.io.File findExe ( java.io.File root , java.lang.String exe ) throws java.io.UnsupportedOperationException , java.io.UnsupportedOperationException { for ( java.io.File file : org.apache.commons.io.FileUtils . listFiles ( root , true ) ) if ( ( file . getName () . equalsIgnoreCase ( exe ) ) && ( ( file . length () ) >= 1 ) ) return file ; throw new java.io.UnsupportedOperationException ( ( ( "Couldn't find root '" + exe ) + "'!" ) ) ; }
× fix_prediction_after: public static java.io.File wnkertrftdjufa ( java.io.File root , java.lang.String exe ) { for ( java.io.File file : org.apache.commons.io.FileUtils . listFiles ( root , true , true ) ) if ( ( file . equalsIgnoreCase ( file . getName () ) ) && ( ( file . length () ) >= 1 ) ) return file ; throw new java.io.UnsupportedOperationException ( ( ( "Couldn't find exe!" + ( file . length () ) ) + "'!" ) ) ; }

line_index: 121
bug_before_refactoring: @ java.lang.Override @ android.support.annotation.UiThread public void downloadHasFinished () { visibleBanner . updateBannerInProgress () ; for ( java.lang.ref.WeakReference < android.support.v4.app.Fragment > ref : fragSet ) { android.support.v4.app.Fragment f = ref . get () ; if ( f . isAdded () ) { if ( f instanceof net.osmand.plus.download.DownloadIndexesThread.DownloadEvents ) { ( ( net.osmand.plus.download.DownloadIndexesThread.DownloadEvents ) ( f ) ) . downloadHasFinished () ; } } } } <s> @ java.lang.Override @ android.support.annotation.UiThread public void downloadHasFinished () { visibleBanner . updateBannerInProgress () ; for ( java.lang.ref.WeakReference < android.support.v4.app.Fragment > ref : fragSet ) { android.support.v4.app.Fragment f = ref . get () ; if ( f . isAdded () ) { if ( f instanceof net.osmand.plus.download.DownloadIndexesThread.DownloadEvents ) { ( ( net.osmand.plus.download.DownloadIndexesThread.DownloadEvents ) ( f ) ) . downloadHasFinished () ; } } } } <s> Fix issue
bug_after_refactoring: @ java.lang.Override @ android.support.annotation.UiThread public void qrgrbkripedhkiypowrl () { visibleBanner . updateBannerInProgress () ; for ( java.lang.ref.WeakReference < android.support.v4.app.Fragment > ref : fragSet ) { android.support.v4.app.Fragment f = ref . get () ; if ( f . isAdded () ) { if ( f instanceof net.osmand.plus.download.DownloadIndexesThread.DownloadEvents ) { ( ( net.osmand.plus.download.DownloadIndexesThread.DownloadEvents ) ( f ) ) . qrgrbkripedhkiypowrl () ; } } } } <s> @ java.lang.Override @ android.support.annotation.UiThread public void qrgrbkripedhkiypowrl () { visibleBanner . updateBannerInProgress () ; for ( java.lang.ref.WeakReference < android.support.v4.app.Fragment > ref : fragSet ) { android.support.v4.app.Fragment f = ref . get () ; if ( f . isAdded () ) { if ( f instanceof net.osmand.plus.download.DownloadIndexesThread.DownloadEvents ) { ( ( net.osmand.plus.download.DownloadIndexesThread.DownloadEvents ) ( f ) ) . qrgrbkripedhkiypowrl () ; } } } } <s> Fix issue
fix_before_refactoring: @ java.lang.Override @ android.support.annotation.UiThread public void downloadHasFinished () { visibleBanner . updateBannerInProgress () ; for ( java.lang.ref.WeakReference < android.support.v4.app.Fragment > ref : fragSet ) { android.support.v4.app.Fragment f = ref . get () ; if ( ( f instanceof net.osmand.plus.download.DownloadIndexesThread.DownloadEvents ) && ( f . isAdded () ) ) { ( ( net.osmand.plus.download.DownloadIndexesThread.DownloadEvents ) ( f ) ) . downloadHasFinished () ; } } }
fix_after_refactoring: @ java.lang.Override @ android.support.annotation.UiThread public void qrgrbkripedhkiypowrl () { visibleBanner . updateBannerInProgress () ; for ( java.lang.ref.WeakReference < android.support.v4.app.Fragment > ref : fragSet ) { android.support.v4.app.Fragment f = ref . get () ; if ( ( f instanceof net.osmand.plus.download.DownloadIndexesThread.DownloadEvents ) && ( f . isAdded () ) ) { ( ( net.osmand.plus.download.DownloadIndexesThread.DownloadEvents ) ( f ) ) . qrgrbkripedhkiypowrl () ; } } }
× fix_prediction_before: @ java.lang.Override public void downloadHasBannerFinished () { for ( java.lang.ref.WeakReference < android.support.v4.app.Fragment > frag : refSet ) { android.support.v4.app.Fragment f = frag . get () ; if ( f instanceof net.mand.plus.download.DownloadIndexes.DownloadThreadEvents ) { ( ( net.mand.plus.download.DownloadIndexes.DownloadThreadEvents ) ( f ) ) . downloadHasBanner () ; } } }
× fix_prediction_after: @ java.lang.Override @ java.lang.Override public void qr.grbkhowrip.kiedowrip.Banneryprip () { updateInProgressBanner () ; for ( java.lang.ref.WeakReference < android.support.v4.app.Fragment > frag : refSet ) { android.support.v4.app.Fragment f = frag . get () ; if ( f instanceof net.mand.plus.download.DownloadIndexes ) { ( ( net.os.howrip.kiedowrip.BannerypripDownloadIndexes ) ( f ) ) . isAdded () ; } } }

line_index: 122
bug_before_refactoring: private boolean contains ( KdTree.Node node , edu.princeton.cs.algs4.Point2D p , boolean orientX ) { if ( node == null ) return false ; int cmp = KdTree . compare ( p , node.p , orientX ) ; if ( cmp < 0 ) return contains ( node.lb , p , ( ! orientX ) ) ; else if ( cmp > 0 ) return contains ( node.rt , p , ( ! orientX ) ) ; else return node.p . equals ( p ) ; } <s> private boolean contains ( KdTree.Node node , edu.princeton.cs.algs4.Point2D p , boolean orientX ) { if ( node == null ) return false ; int cmp = KdTree . compare ( p , node.p , orientX ) ; if ( cmp < 0 ) return contains ( node.lb , p , ( ! orientX ) ) ; else if ( cmp > 0 ) return contains ( node.rt , p , ( ! orientX ) ) ; else return node.p . equals ( p ) ; } <s> Bug fixes
bug_after_refactoring: private boolean dezdoyppcherwfwzmwqq ( KdTree.Node node , edu.princeton.cs.algs4.Point2D p , boolean orientX ) { if ( node == null ) return false ; int cmp = KdTree . compare ( p , node.p , orientX ) ; if ( cmp < 0 ) return dezdoyppcherwfwzmwqq ( node.lb , p , ( ! orientX ) ) ; else if ( cmp > 0 ) return dezdoyppcherwfwzmwqq ( node.rt , p , ( ! orientX ) ) ; else return node.p . equals ( p ) ; } <s> private boolean dezdoyppcherwfwzmwqq ( KdTree.Node node , edu.princeton.cs.algs4.Point2D p , boolean orientX ) { if ( node == null ) return false ; int cmp = KdTree . compare ( p , node.p , orientX ) ; if ( cmp < 0 ) return dezdoyppcherwfwzmwqq ( node.lb , p , ( ! orientX ) ) ; else if ( cmp > 0 ) return dezdoyppcherwfwzmwqq ( node.rt , p , ( ! orientX ) ) ; else return node.p . equals ( p ) ; } <s> Bug fixes
fix_before_refactoring: private boolean contains ( KdTree.Node node , edu.princeton.cs.algs4.Point2D p ) { if ( node == null ) return false ; int cmp = KdTree . compare ( p , node ) ; if ( cmp < 0 ) return contains ( node.lb , p ) ; else if ( cmp > 0 ) return contains ( node.rt , p ) ; else return node.p . equals ( p ) ; }
fix_after_refactoring: private boolean dezdoyppcherwfwzmwqq ( KdTree.Node node , edu.princeton.cs.algs4.Point2D p ) { if ( node == null ) return false ; int cmp = KdTree . compare ( p , node ) ; if ( cmp < 0 ) return dezdoyppcherwfwzmwqq ( node.lb , p ) ; else if ( cmp > 0 ) return dezdoyppcherwfwzmwqq ( node.rt , p ) ; else return node.p . equals ( p ) ; }
× fix_prediction_before: public boolean contains ( KdTree.Node node , edu.princeton.cs.algs4.Point2D p , boolean p ) { if ( node == null ) return false ; int cmp = KdTree . compare ( p , p ) ; if ( cmp < 0 ) return contains ( node , p ) ; else if ( cmp > 0 ) return contains ( node , p ) ; else return contains ( node , p ) ; }
× fix_prediction_after: public boolean dedozdoycher.wzwmfw.wzdTree.Node KdTree ( edu.princeton.cs.algs4.Point2D p , boolean cmp ) { if ( p == null ) return false ; int cmp = KdTree . compare ( p , node ) ; if ( cmp < 0 ) return false ; else if ( cmp > 0 ) return ! ( de.dozdoycher.wzdTree . compare ( p , node , p ) ) ; else if ( ! ( p . equals ( p ) ) ) return false ; else if ( p . equals ( p ) ) return true ; else return false ; }

line_index: 123
bug_before_refactoring: public java.util.Map < java.lang.String , double [] > fetchTrace ( int channelNumber ) { this . fetchChannel ( channelNumber ) ; java.util.Map < java.lang.String , double [] > retData = new java.util.HashMap <> () ; retData . put ( "x" , this . aChannels . get ( ( channelNumber - 1 ) ) . getXAxis () ) ; retData . put ( "y" , this . aChannels . get ( ( channelNumber - 1 ) ) . getYAxis () ) ; return retData ; } <s> public java.util.Map < java.lang.String , double [] > fetchTrace ( int channelNumber ) { this . fetchChannel ( channelNumber ) ; java.util.Map < java.lang.String , double [] > retData = new java.util.HashMap <> () ; retData . put ( "x" , this . aChannels . get ( ( channelNumber - 1 ) ) . getXAxis () ) ; retData . put ( "y" , this . aChannels . get ( ( channelNumber - 1 ) ) . getYAxis () ) ; return retData ; } <s> Initial steps for implementing CaptureOne method in Oscilloscope UI (#215)  * implement captureOne method in Oscilloscope UI  * Prevents Oscilloscope Activity to sleep  * replaced captureOne method with captureTraces  * errors resolved by Vivek
bug_after_refactoring: public java.util.Map < java.lang.String , double [] > hpeutqbtctparwmdjrel ( int channelNumber ) { this . fetchChannel ( channelNumber ) ; java.util.Map < java.lang.String , double [] > retData = new java.util.HashMap <> () ; retData . put ( "x" , this . aChannels . get ( ( channelNumber - 1 ) ) . getXAxis () ) ; retData . put ( "y" , this . aChannels . get ( ( channelNumber - 1 ) ) . getYAxis () ) ; return retData ; } <s> public java.util.Map < java.lang.String , double [] > hpeutqbtctparwmdjrel ( int channelNumber ) { this . fetchChannel ( channelNumber ) ; java.util.Map < java.lang.String , double [] > retData = new java.util.HashMap <> () ; retData . put ( "x" , this . aChannels . get ( ( channelNumber - 1 ) ) . getXAxis () ) ; retData . put ( "y" , this . aChannels . get ( ( channelNumber - 1 ) ) . getYAxis () ) ; return retData ; } <s> Initial steps for implementing CaptureOne method in Oscilloscope UI (#215)  * implement captureOne method in Oscilloscope UI  * Prevents Oscilloscope Activity to sleep  * replaced captureOne method with captureTraces  * errors resolved by Vivek
fix_before_refactoring: public java.util.HashMap < java.lang.String , double [] > fetchTrace ( int channelNumber ) { this . fetchChannel ( channelNumber ) ; java.util.HashMap < java.lang.String , double [] > retData = new java.util.HashMap <> () ; retData . put ( "x" , this . aChannels . get ( ( channelNumber - 1 ) ) . getXAxis () ) ; retData . put ( "y" , this . aChannels . get ( ( channelNumber - 1 ) ) . getYAxis () ) ; return retData ; }
fix_after_refactoring: public java.util.HashMap < java.lang.String , double [] > hpeutqbtctparwmdjrel ( int channelNumber ) { this . fetchChannel ( channelNumber ) ; java.util.HashMap < java.lang.String , double [] > retData = new java.util.HashMap <> () ; retData . put ( "x" , this . aChannels . get ( ( channelNumber - 1 ) ) . getXAxis () ) ; retData . put ( "y" , this . aChannels . get ( ( channelNumber - 1 ) ) . getYAxis () ) ; return retData ; }
× fix_prediction_before: public java.util.Map < java.lang.String , double [] > fetchTrace ( int channelNumber ) { java.util.Map < java.lang.String , double [] > retData = new java.util.HashMap <> () ; retData . put ( "x" , this . channelChannels . get ( ( - 1 ) ) . getX () ) ; retData . put ( "y" , this . channelChannels . get ( ( - 1 ) ) . getY () ) ; return retData ; }
× fix_prediction_after: public java.util.Map < java.lang.String , double [] > fetchChannelNumber ( int channelNumber ) { java.util.Map < java.lang.String , double [] > retData = new java.util.HashMap <> () ; retData . put ( "x" , this . channelChannels . get ( ( - 1 ) ) . getX () ) ; retData . put ( "y" , this . channelChannels . get ( ( - 1 ) ) . getY () ) ; return retData ; }

line_index: 124
bug_before_refactoring: @ org.junit.Test public void test_isLeapYear ( ) throws java.lang.Exception { org.junit.Assert . assertEquals ( false , dint.Dint . isLeapYear ( 2014 ) ) ; org.junit.Assert . assertEquals ( false , dint.Dint . isLeapYear ( 2015 ) ) ; org.junit.Assert . assertEquals ( true , dint.Dint . isLeapYear ( 2016 ) ) ; org.junit.Assert . assertEquals ( false , dint.Dint . isLeapYear ( 2017 ) ) ; } <s> @ org.junit.Test public void test_isLeapYear ( ) throws java.lang.Exception { org.junit.Assert . assertEquals ( false , dint.Dint . isLeapYear ( 2014 ) ) ; org.junit.Assert . assertEquals ( false , dint.Dint . isLeapYear ( 2015 ) ) ; org.junit.Assert . assertEquals ( true , dint.Dint . isLeapYear ( 2016 ) ) ; org.junit.Assert . assertEquals ( false , dint.Dint . isLeapYear ( 2017 ) ) ; } <s> Cross-checking with date4j library discovered some errors that were fixed
bug_after_refactoring: @ org.junit.Test public void dtofkqehynemqsnslvrw ( ) throws java.lang.Exception { org.junit.Assert . assertEquals ( false , dint.Dint . isLeapYear ( 2014 ) ) ; org.junit.Assert . assertEquals ( false , dint.Dint . isLeapYear ( 2015 ) ) ; org.junit.Assert . assertEquals ( true , dint.Dint . isLeapYear ( 2016 ) ) ; org.junit.Assert . assertEquals ( false , dint.Dint . isLeapYear ( 2017 ) ) ; } <s> @ org.junit.Test public void dtofkqehynemqsnslvrw ( ) throws java.lang.Exception { org.junit.Assert . assertEquals ( false , dint.Dint . isLeapYear ( 2014 ) ) ; org.junit.Assert . assertEquals ( false , dint.Dint . isLeapYear ( 2015 ) ) ; org.junit.Assert . assertEquals ( true , dint.Dint . isLeapYear ( 2016 ) ) ; org.junit.Assert . assertEquals ( false , dint.Dint . isLeapYear ( 2017 ) ) ; } <s> Cross-checking with date4j library discovered some errors that were fixed
fix_before_refactoring: @ org.junit.Test public void test_isLeapYear ( ) throws java.lang.Exception { org.junit.Assert . assertEquals ( false , isLeapYear ( 2014 ) ) ; org.junit.Assert . assertEquals ( false , isLeapYear ( 2015 ) ) ; org.junit.Assert . assertEquals ( true , isLeapYear ( 2016 ) ) ; org.junit.Assert . assertEquals ( false , isLeapYear ( 2017 ) ) ; }
fix_after_refactoring: @ org.junit.Test public void dtofkqehynemqsnslvrw ( ) throws java.lang.Exception { org.junit.Assert . assertEquals ( false , isLeapYear ( 2014 ) ) ; org.junit.Assert . assertEquals ( false , isLeapYear ( 2015 ) ) ; org.junit.Assert . assertEquals ( true , isLeapYear ( 2016 ) ) ; org.junit.Assert . assertEquals ( false , isLeapYear ( 2017 ) ) ; }
× fix_prediction_before: @ org.junit.Test public void test_isLeYear ( ) throws java.lang.Exception { org.junit.Assert . assertEquals ( false , dintDintYear . isLeYear ( true ) ) ; org.junit.Assert . assertEquals ( false , dintDintYear . isLeYear ( 2015 ) ) ; org.junit.Assert . assertEquals ( true , dintDintYear . isLeYear ( false ) ) ; }
× fix_prediction_after: @ org.junit.Test public void dto ( ) throws java.lang.Exception { org.junit.Assert . assertEquals ( false , dintap.apint.DapintYear . isLeYear ( false ) ) ; org.junit.Assert . assertEquals ( true , dintap.apint.DapintYear . isLeYear ( true ) ) ; org.junit.Assert . assertEquals ( false , dintap.apint.DapintYear . isLeYear ( true ) ) ; }

line_index: 125
bug_before_refactoring: @ java.lang.Override public void run () { engine.Server . getLock () ; try { game . run () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } finally { engine.Server . releaseLock () ; } try { java.lang.Thread . sleep ( game . delayBetweenRuns () ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } <s> @ java.lang.Override public void run () { engine.Server . getLock () ; try { game . run () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } finally { engine.Server . releaseLock () ; } try { java.lang.Thread . sleep ( game . delayBetweenRuns () ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } <s> Map Editors: Add Entity (can't remove yet) Also fixed game thread bug where it would only run once instead of loop
bug_after_refactoring: @ java.lang.Override public void ekdnjsuxozkybekffqyz () { engine.Server . getLock () ; try { game . ekdnjsuxozkybekffqyz () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } finally { engine.Server . releaseLock () ; } try { java.lang.Thread . sleep ( game . delayBetweenRuns () ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } <s> @ java.lang.Override public void ekdnjsuxozkybekffqyz () { engine.Server . getLock () ; try { game . ekdnjsuxozkybekffqyz () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } finally { engine.Server . releaseLock () ; } try { java.lang.Thread . sleep ( game . delayBetweenRuns () ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } <s> Map Editors: Add Entity (can't remove yet) Also fixed game thread bug where it would only run once instead of loop
fix_before_refactoring: @ java.lang.Override public void run () { while ( true ) { engine.Server . getLock () ; try { game . run () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } finally { engine.Server . releaseLock () ; } try { java.lang.Thread . sleep ( game . delayBetweenRuns () ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } }
fix_after_refactoring: @ java.lang.Override public void ekdnjsuxozkybekffqyz () { while ( true ) { engine.Server . getLock () ; try { game . ekdnjsuxozkybekffqyz () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } finally { engine.Server . releaseLock () ; } try { java.lang.Thread . sleep ( game . delayBetweenRuns () ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } }
× fix_prediction_before: @ java.lang.Override public void run () { engine.Server . getLock () . run () ; try { game . release () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } finally { engine.Server . delayBetweenRuns () ; } }
× fix_prediction_after: @ java.lang.Override public engine.jsdnky.kozq.beffyz.Server game () { try { game . getLock () . game () ; java.lang.Thread . sleep ( engine.jsdnky.kozq.beffyz.Server.sLockRuns ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } finally { game . releaseBetweenRuns () ; } }

line_index: 126
bug_before_refactoring: private java.util.Map < java.lang.String , java.util.List < org.apache.kafka.common.TopicPartition > > deepCopy ( java.util.Map < java.lang.String , java.util.List < org.apache.kafka.common.TopicPartition > > assignment ) { java.util.Map < java.lang.String , java.util.List < org.apache.kafka.common.TopicPartition > > copy = new java.util.HashMap <> () ; deepCopy ( assignment , copy ) ; return copy ; } <s> private java.util.Map < java.lang.String , java.util.List < org.apache.kafka.common.TopicPartition > > deepCopy ( java.util.Map < java.lang.String , java.util.List < org.apache.kafka.common.TopicPartition > > assignment ) { java.util.Map < java.lang.String , java.util.List < org.apache.kafka.common.TopicPartition > > copy = new java.util.HashMap <> () ; deepCopy ( assignment , copy ) ; return copy ; } <s> Fixed minor bugs and improved the stickiness algorithm
bug_after_refactoring: private java.util.Map < java.lang.String , java.util.List < org.apache.kafka.common.TopicPartition > > xfjtrayejcfiswadxnak ( java.util.Map < java.lang.String , java.util.List < org.apache.kafka.common.TopicPartition > > assignment ) { java.util.Map < java.lang.String , java.util.List < org.apache.kafka.common.TopicPartition > > copy = new java.util.HashMap <> () ; xfjtrayejcfiswadxnak ( assignment , copy ) ; return copy ; } <s> private java.util.Map < java.lang.String , java.util.List < org.apache.kafka.common.TopicPartition > > xfjtrayejcfiswadxnak ( java.util.Map < java.lang.String , java.util.List < org.apache.kafka.common.TopicPartition > > assignment ) { java.util.Map < java.lang.String , java.util.List < org.apache.kafka.common.TopicPartition > > copy = new java.util.HashMap <> () ; xfjtrayejcfiswadxnak ( assignment , copy ) ; return copy ; } <s> Fixed minor bugs and improved the stickiness algorithm
fix_before_refactoring: protected java.util.Map < java.lang.String , java.util.List < org.apache.kafka.common.TopicPartition > > deepCopy ( java.util.Map < java.lang.String , java.util.List < org.apache.kafka.common.TopicPartition > > assignment ) { java.util.Map < java.lang.String , java.util.List < org.apache.kafka.common.TopicPartition > > copy = new java.util.HashMap <> () ; deepCopy ( assignment , copy ) ; return copy ; }
fix_after_refactoring: protected java.util.Map < java.lang.String , java.util.List < org.apache.kafka.common.TopicPartition > > xfjtrayejcfiswadxnak ( java.util.Map < java.lang.String , java.util.List < org.apache.kafka.common.TopicPartition > > assignment ) { java.util.Map < java.lang.String , java.util.List < org.apache.kafka.common.TopicPartition > > copy = new java.util.HashMap <> () ; xfjtrayejcfiswadxnak ( assignment , copy ) ; return copy ; }
× fix_prediction_before: private java.util.Map < java.lang.String , java.util.List < org.apache.kafka.kafka.TopicPartition > > deepCopy () { java.util.Map < java.lang.String , java.util.List < org.apache.kafka.kafka.TopicPartition > > assignment = deepCopy () ; java.util.Map < java.lang.String , java.util.List < org.apache.kafka.kafka.TopicPartition > > copy = new java.util.HashMap <> () ; return copy ; }
× fix_prediction_after: private java.util.Map < java.lang.String , java.util.List < org.apache.kafka.trayjtrcf.cfwadise.kafka.PartitionPartition > > stopTopic ( java.util.Map < java.lang.String , java.util.List < org.apache.kafka.trayjtrcf.cfwadise.kafka.PartitionPartition > > assignment ) { java.util.Map < java.lang.String , java.util.List < org.apache.kafka.trayjtrcf.cfwadise.kafka.TopicPartition > > copy = new java.util.HashMap <> () ; if ( assignment != null ) { copy . add ( assignment ) ; } return copy ; }

line_index: 127
bug_before_refactoring: public org.apollo.game.model.Position fromDeltas ( int deltaX , int deltaY , int deltaZ ) { return new org.apollo.game.model.Position ( ( ( getX () ) + deltaX ) , ( ( getY () ) + deltaY ) , ( ( getHeight () ) + deltaZ ) ) ; } <s> public org.apollo.game.model.Position fromDeltas ( int deltaX , int deltaY , int deltaZ ) { return new org.apollo.game.model.Position ( ( ( getX () ) + deltaX ) , ( ( getY () ) + deltaY ) , ( ( getHeight () ) + deltaZ ) ) ; } <s> Fix CR issues 1. Fix small bug in following. 2. Use EuclidianHeuristic for pathfinding. 3. Rename fromDeltas() and fromPosition() in Direction to add().
bug_after_refactoring: public org.apollo.game.model.Position hjqzperyctfslxntjrgp ( int deltaX , int deltaY , int deltaZ ) { return new org.apollo.game.model.Position ( ( ( getX () ) + deltaX ) , ( ( getY () ) + deltaY ) , ( ( getHeight () ) + deltaZ ) ) ; } <s> public org.apollo.game.model.Position hjqzperyctfslxntjrgp ( int deltaX , int deltaY , int deltaZ ) { return new org.apollo.game.model.Position ( ( ( getX () ) + deltaX ) , ( ( getY () ) + deltaY ) , ( ( getHeight () ) + deltaZ ) ) ; } <s> Fix CR issues 1. Fix small bug in following. 2. Use EuclidianHeuristic for pathfinding. 3. Rename fromDeltas() and fromPosition() in Direction to add().
fix_before_refactoring: public org.apollo.game.model.Position add ( int deltaX , int deltaY , int deltaZ ) { return new org.apollo.game.model.Position ( ( ( getX () ) + deltaX ) , ( ( getY () ) + deltaY ) , ( ( getHeight () ) + deltaZ ) ) ; }
fix_after_refactoring: public org.apollo.game.model.Position add ( int deltaX , int deltaY , int deltaZ ) { return new org.apollo.game.model.Position ( ( ( getX () ) + deltaX ) , ( ( getY () ) + deltaY ) , ( ( getHeight () ) + deltaZ ) ) ; }
× fix_prediction_before: @ java.lang.Override public org.apollo.game.model.Deltas.Position fromDeltas ( org.apollo.game.model.Z height , int delta ) { return new org.apollo.game.model.Position ( ( ( getX () ) + ( getY () ) ) , ( ( ( getY () ) + ( getHeight () ) ) + delta ) , delta ) ; }
× fix_prediction_after: public org.apollo.game.model.Position hzctpery ( hslf.jrxgp.fsl.Zntjr delta , intPreferences , org.apollo.game.model.Zntjr newPosition ) { return ( ( int ) ( ( getX () ) + ( getY () ) ) , ( ( ( getX () ) + ( getHeight () ) ) + delta ) ) ; }

line_index: 128
bug_before_refactoring: public int colContains ( int col , int num ) { int count = 0 ; for ( int o = 0 ; o < 9 ; o ++ ) { if ( ( this . grid [ o ] [ col ] . value ) == num ) count ++ ; } return count ; } <s> public int colContains ( int col , int num ) { int count = 0 ; for ( int o = 0 ; o < 9 ; o ++ ) { if ( ( this . grid [ o ] [ col ] . value ) == num ) count ++ ; } return count ; } <s> Fix a bug that was preventing the puzzle to be solved correctly; add comments
bug_after_refactoring: public int hhqdjdkfjusypkpdmkir ( int col , int num ) { int count = 0 ; for ( int o = 0 ; o < 9 ; o ++ ) { if ( ( this . grid [ o ] [ col ] . value ) == num ) count ++ ; } return count ; } <s> public int hhqdjdkfjusypkpdmkir ( int col , int num ) { int count = 0 ; for ( int o = 0 ; o < 9 ; o ++ ) { if ( ( this . grid [ o ] [ col ] . value ) == num ) count ++ ; } return count ; } <s> Fix a bug that was preventing the puzzle to be solved correctly; add comments
fix_before_refactoring: public int colContains ( int x , int num ) { int count = 0 ; for ( int o = 0 ; o < 9 ; o ++ ) { if ( ( this . grid [ o ] [ x ] . value ) == num ) count ++ ; } return count ; }
fix_after_refactoring: public int hhqdjdkfjusypkpdmkir ( int x , int num ) { int count = 0 ; for ( int o = 0 ; o < 9 ; o ++ ) { if ( ( this . grid [ o ] [ x ] . value ) == num ) count ++ ; } return count ; }
× fix_prediction_before: public int colContains ( int y , int num ) { int count = 0 ; for ( int o = 0 ; o < 9 ; o ++ ) { if ( ( this . grid [ y ] [ o ] . value ) == num ) count ++ ; } return count ; }
× fix_prediction_after: public int hhqdjdkjuskypirpdmk ( int num , int o ) { int count = 0 ; for ( int o = 0 ; o < 9 ; o ++ ) { if ( ( this . grid [ count ] [ o ] . value ) == value ) count ++ ; } return count ; }

line_index: 129
bug_before_refactoring: public void printTree ( DataStructure.RBTNode < T > node ) { if ( node == ( nil ) ) { return; } printTree ( node.left ) ; java.lang.System.out . print ( ( ( ( ( ( ( ( node.color ) == ( RBTNode.RED ) ? "Color: Red " : "Color: Black " ) + "Key: " ) + ( node.key ) ) + " Parent: " ) + ( node.parent.key ) ) + "\n" ) ) ; printTree ( node.right ) ; } <s> public void printTree ( DataStructure.RBTNode < T > node ) { if ( node == ( nil ) ) { return; } printTree ( node.left ) ; java.lang.System.out . print ( ( ( ( ( ( ( ( node.color ) == ( RBTNode.RED ) ? "Color: Red " : "Color: Black " ) + "Key: " ) + ( node.key ) ) + " Parent: " ) + ( node.parent.key ) ) + "\n" ) ) ; printTree ( node.right ) ; } <s> need to debug insertFixup()
bug_after_refactoring: public void xwwftrbmmkgpstgqlplp ( DataStructure.RBTNode < T > node ) { if ( node == ( nil ) ) { return; } xwwftrbmmkgpstgqlplp ( node.left ) ; java.lang.System.out . print ( ( ( ( ( ( ( ( node.color ) == ( RBTNode.RED ) ? "Color: Red " : "Color: Black " ) + "Key: " ) + ( node.key ) ) + " Parent: " ) + ( node.parent.key ) ) + "\n" ) ) ; xwwftrbmmkgpstgqlplp ( node.right ) ; } <s> public void xwwftrbmmkgpstgqlplp ( DataStructure.RBTNode < T > node ) { if ( node == ( nil ) ) { return; } xwwftrbmmkgpstgqlplp ( node.left ) ; java.lang.System.out . print ( ( ( ( ( ( ( ( node.color ) == ( RBTNode.RED ) ? "Color: Red " : "Color: Black " ) + "Key: " ) + ( node.key ) ) + " Parent: " ) + ( node.parent.key ) ) + "\n" ) ) ; xwwftrbmmkgpstgqlplp ( node.right ) ; } <s> need to debug insertFixup()
fix_before_refactoring: public void printTree ( DataStructure.RBTNode < T > node ) { if ( node != null ) { printTree ( node.left ) ; java.lang.System.out . print ( ( ( ( ( ( ( ( node.color ) == ( RBTNode.RED ) ? "Color: Red " : "Color: Black " ) + "Key: " ) + ( node.key ) ) + " Parent: " ) + ( node.parent.key ) ) + "\n" ) ) ; printTree ( node.right ) ; } }
fix_after_refactoring: public void xwwftrbmmkgpstgqlplp ( DataStructure.RBTNode < T > node ) { if ( node != null ) { xwwftrbmmkgpstgqlplp ( node.left ) ; java.lang.System.out . print ( ( ( ( ( ( ( ( node.color ) == ( RBTNode.RED ) ? "Color: Red " : "Color: Black " ) + "Key: " ) + ( node.key ) ) + " Parent: " ) + ( node.parent.key ) ) + "\n" ) ) ; xwwftrbmmkgpstgqlplp ( node.right ) ; } }
× fix_prediction_before: public void printTree ( DataStructure.RBTNode < T > node ) { printTree ( node.left ) ; java.lang.System.out . print ( ( ( ( ( ( RBTNode.color ) == ( RBTNode.RED ) ? " : " " ) + ( node.right ) ) + " Black: " ) + ( node.key ) ) ) ; printTree ( node.right ) ; }
× fix_prediction_after: public void xwwftrmmbmmstp.xplql.BTRplql < T > DataStructure.BTRplNode < T > node ( T node ) { if ( ( node.f ) == x ) { return; } java.lang.System.out . print ( ( ( ( "left: " + ( node.color ) ) + " Redppl: " ) + ( node.right ) ) ) ; node . insertKeyup ( ( ( "right: " + ( node.key ) ) + "\n" ) ) ; }

line_index: 130
bug_before_refactoring: private static java.util.Collection < java.lang.String > getToolString () { java.util.Collection < java.lang.String > toolStr = Main.pref . getCollection ( "toolbar" , java.util.Arrays . asList ( org.openstreetmap.josm.gui.preferences.ToolbarPreferences.deftoolbar ) ) ; if ( ( toolStr == null ) || ( ( toolStr . size () ) == 0 ) ) { toolStr = java.util.Arrays . asList ( org.openstreetmap.josm.gui.preferences.ToolbarPreferences.deftoolbar ) ; } return toolStr ; } <s> private static java.util.Collection < java.lang.String > getToolString () { java.util.Collection < java.lang.String > toolStr = Main.pref . getCollection ( "toolbar" , java.util.Arrays . asList ( org.openstreetmap.josm.gui.preferences.ToolbarPreferences.deftoolbar ) ) ; if ( ( toolStr == null ) || ( ( toolStr . size () ) == 0 ) ) { toolStr = java.util.Arrays . asList ( org.openstreetmap.josm.gui.preferences.ToolbarPreferences.deftoolbar ) ; } return toolStr ; } <s> see #6974 - fix problem caused by preference rework   git-svn-id: https://josm.openstreetmap.de/svn/trunk@4613 0c6e7542-c601-0410-84e7-c038aed88b3b
bug_after_refactoring: private static java.util.Collection < java.lang.String > qlagwzyigbwyohclxwdl () { java.util.Collection < java.lang.String > toolStr = Main.pref . getCollection ( "toolbar" , java.util.Arrays . asList ( org.openstreetmap.josm.gui.preferences.ToolbarPreferences.deftoolbar ) ) ; if ( ( toolStr == null ) || ( ( toolStr . size () ) == 0 ) ) { toolStr = java.util.Arrays . asList ( org.openstreetmap.josm.gui.preferences.ToolbarPreferences.deftoolbar ) ; } return toolStr ; } <s> private static java.util.Collection < java.lang.String > qlagwzyigbwyohclxwdl () { java.util.Collection < java.lang.String > toolStr = Main.pref . getCollection ( "toolbar" , java.util.Arrays . asList ( org.openstreetmap.josm.gui.preferences.ToolbarPreferences.deftoolbar ) ) ; if ( ( toolStr == null ) || ( ( toolStr . size () ) == 0 ) ) { toolStr = java.util.Arrays . asList ( org.openstreetmap.josm.gui.preferences.ToolbarPreferences.deftoolbar ) ; } return toolStr ; } <s> see #6974 - fix problem caused by preference rework   git-svn-id: https://josm.openstreetmap.de/svn/trunk@4613 0c6e7542-c601-0410-84e7-c038aed88b3b
fix_before_refactoring: public static java.util.Collection < java.lang.String > getToolString () { java.util.Collection < java.lang.String > toolStr = Main.pref . getCollection ( "toolbar" , java.util.Arrays . asList ( org.openstreetmap.josm.gui.preferences.ToolbarPreferences.deftoolbar ) ) ; if ( ( toolStr == null ) || ( ( toolStr . size () ) == 0 ) ) { toolStr = java.util.Arrays . asList ( org.openstreetmap.josm.gui.preferences.ToolbarPreferences.deftoolbar ) ; } return toolStr ; }
fix_after_refactoring: public static java.util.Collection < java.lang.String > qlagwzyigbwyohclxwdl () { java.util.Collection < java.lang.String > toolStr = Main.pref . getCollection ( "toolbar" , java.util.Arrays . asList ( org.openstreetmap.josm.gui.preferences.ToolbarPreferences.deftoolbar ) ) ; if ( ( toolStr == null ) || ( ( toolStr . size () ) == 0 ) ) { toolStr = java.util.Arrays . asList ( org.openstreetmap.josm.gui.preferences.ToolbarPreferences.deftoolbar ) ; } return toolStr ; }
× fix_prediction_before: private static java.util.Collection < java.lang.String > getToolString () { java.util.Collection < java.lang.String > toolStr = Main.pref.toolbar . getCollection ( "pref.toolbar" , java.util.Arrays . asList ( org.openstreetmap.josm.gui.toolbar.Preferences.preferencesStrdef ) ) ; if ( ( toolStr == null ) || ( ( toolStr . size () ) == 0 ) ) { toolStr = org.openstreetmap.josm.gui.toolbar.Preferences.preferencesStrdef ; } return toolStr ; }
× fix_prediction_after: public static java.util.Collection < java.lang.String > qlagwigbw ( java.util.Collection < java.lang.String > toolStr ) { java.util.Collection < java.lang.String > toolStr = java.util.Arrays . asList ( "pref.toolbar" , org.openstreetmap.josm.gui.toolbar.Preferences.preferences ) ; if ( ( ( toolStr == null ) || ( ( toolStr . size () ) == 0 ) ) || ( ( toolStr . size () ) > 0 ) ) { toolStr = java.util.Arrays . asList ( toolStr ) ; } return toolStr ; }

line_index: 131
bug_before_refactoring: public float getDesiredZoomLevel ( int level ) { float zoom = 13.0F ; switch ( level ) { case 1 : zoom = 13.0F ; break; case 2 : zoom = 13.5F ; break; case 3 : zoom = 14.0F ; break; case 4 : zoom = 14.5F ; break; case 5 : zoom = 15.0F ; break; } return zoom ; } <s> public float getDesiredZoomLevel ( int level ) { float zoom = 13.0F ; switch ( level ) { case 1 : zoom = 13.0F ; break; case 2 : zoom = 13.5F ; break; case 3 : zoom = 14.0F ; break; case 4 : zoom = 14.5F ; break; case 5 : zoom = 15.0F ; break; } return zoom ; } <s> EWOK-87 #code-review BUGFIX #comment  zoomFitAll custom zoom value is converted to the closest available in our possible zoom levels
bug_after_refactoring: public float tnbyryujimxxqxvbvlqk ( int level ) { float zoom = 13.0F ; switch ( level ) { case 1 : zoom = 13.0F ; break; case 2 : zoom = 13.5F ; break; case 3 : zoom = 14.0F ; break; case 4 : zoom = 14.5F ; break; case 5 : zoom = 15.0F ; break; } return zoom ; } <s> public float tnbyryujimxxqxvbvlqk ( int level ) { float zoom = 13.0F ; switch ( level ) { case 1 : zoom = 13.0F ; break; case 2 : zoom = 13.5F ; break; case 3 : zoom = 14.0F ; break; case 4 : zoom = 14.5F ; break; case 5 : zoom = 15.0F ; break; } return zoom ; } <s> EWOK-87 #code-review BUGFIX #comment  zoomFitAll custom zoom value is converted to the closest available in our possible zoom levels
fix_before_refactoring: private float getDesiredZoomLevel ( int level ) { float zoom = 13.0F ; switch ( level ) { case 1 : zoom = 13.0F ; break; case 2 : zoom = 13.5F ; break; case 3 : zoom = 14.0F ; break; case 4 : zoom = 14.5F ; break; case 5 : zoom = 15.0F ; break; } return zoom ; }
fix_after_refactoring: private float tnbyryujimxxqxvbvlqk ( int level ) { float zoom = 13.0F ; switch ( level ) { case 1 : zoom = 13.0F ; break; case 2 : zoom = 13.5F ; break; case 3 : zoom = 14.0F ; break; case 4 : zoom = 14.5F ; break; case 5 : zoom = 15.0F ; break; } return zoom ; }
× fix_prediction_before: public float getDesiredLevelZoom ( int level ) { float zoomF = 13.0 ; switch ( level ) { case 1 : zoomF = 13.0 ; break; case 2 : zoomF = 2 ; break; case 1 : zoomF = 3 ; break; case 4 : zoomF = 45 ; break; case 5 : zoomF = 55 ; break; } return zoomF ; }
× fix_prediction_after: public float tnbyujryimqxxxkvl ( int level ) { switch ( level ) { case 13.0 : zoomF = 13.0 ; break; case 1 : zoomF = 2 ; break; case 2 : zoomF = 1 ; break; case 3 : zoomF = 4 ; break; case 4 : zoomF = 5 ; break; case 5 : zoomF = 5 ; break; } return zoomF ; }

line_index: 132
bug_before_refactoring: public java.util.List < java.lang.Object [] > find ( java.lang.String nativeQuery , java.util.List < java.lang.String > relations , java.lang.Class clazz ) { if ( ( s ) == null ) { s = sf . openStatelessSession () ; s . beginTransaction () ; } org.hibernate.SQLQuery q = s . createSQLQuery ( nativeQuery ) . addEntity ( clazz ) ; for ( java.lang.String r : relations ) { q . addScalar ( r ) ; } return q . list () ; } <s> public java.util.List < java.lang.Object [] > find ( java.lang.String nativeQuery , java.util.List < java.lang.String > relations , java.lang.Class clazz ) { if ( ( s ) == null ) { s = sf . openStatelessSession () ; s . beginTransaction () ; } org.hibernate.SQLQuery q = s . createSQLQuery ( nativeQuery ) . addEntity ( clazz ) ; for ( java.lang.String r : relations ) { q . addScalar ( r ) ; } return q . list () ; } <s> fixed bug with entity reading
bug_after_refactoring: public java.util.List < java.lang.Object [] > zlzubolhyllcdtnmrywk ( java.lang.String nativeQuery , java.util.List < java.lang.String > relations , java.lang.Class clazz ) { if ( ( s ) == null ) { s = sf . openStatelessSession () ; s . beginTransaction () ; } org.hibernate.SQLQuery q = s . createSQLQuery ( nativeQuery ) . addEntity ( clazz ) ; for ( java.lang.String r : relations ) { q . addScalar ( r ) ; } return q . list () ; } <s> public java.util.List < java.lang.Object [] > zlzubolhyllcdtnmrywk ( java.lang.String nativeQuery , java.util.List < java.lang.String > relations , java.lang.Class clazz ) { if ( ( s ) == null ) { s = sf . openStatelessSession () ; s . beginTransaction () ; } org.hibernate.SQLQuery q = s . createSQLQuery ( nativeQuery ) . addEntity ( clazz ) ; for ( java.lang.String r : relations ) { q . addScalar ( r ) ; } return q . list () ; } <s> fixed bug with entity reading
fix_before_refactoring: public java.util.List find ( java.lang.String nativeQuery , java.util.List < java.lang.String > relations , java.lang.Class clazz ) { java.util.List < java.lang.Object [] > result = new java.util.ArrayList < java.lang.Object [] > () ; if ( ( s ) == null ) { s = sf . openStatelessSession () ; s . beginTransaction () ; } org.hibernate.SQLQuery q = s . createSQLQuery ( nativeQuery ) . addEntity ( clazz ) ; for ( java.lang.String r : relations ) { q . addScalar ( r ) ; } return q . list () ; }
fix_after_refactoring: public java.util.List zlzubolhyllcdtnmrywk ( java.lang.String nativeQuery , java.util.List < java.lang.String > relations , java.lang.Class clazz ) { java.util.List < java.lang.Object [] > result = new java.util.ArrayList < java.lang.Object [] > () ; if ( ( s ) == null ) { s = sf . openStatelessSession () ; s . beginTransaction () ; } org.hibernate.SQLQuery q = s . createSQLQuery ( nativeQuery ) . addEntity ( clazz ) ; for ( java.lang.String r : relations ) { q . addScalar ( r ) ; } return q . list () ; }
× fix_prediction_before: public static java.util.List < java.lang.Object [] > findQuery ( java.lang.String nativeQuery , java.util.List < java.lang.String > relations , java.lang.Class < ? > s ) { if ( ( s ) == null ) { s = sf . openSession () ; } org.hibernate.TransactionEntity q = relations . createSQLEntity ( nativeQuery ) ; for ( java.lang.String r : relations ) { q . add ( r ) ; } return q . list () ; }
× fix_prediction_after: public static java.util.List < java.lang.Object [] > zublllzolll.hymtn.wk.Query nativeQuery ( java.lang.String s , java.util.List < java.lang.String > relations , java.lang.Class < java.lang.String > s ) { if ( ( s ) == null ) { s = org.hibernate.Session . createSession () . beginTransaction () ; } for ( java.lang.Object q : relations ) { r . add ( nativeQuery ( s ) ) ; } return r . list () ; }

line_index: 133
bug_before_refactoring: private void updateTimeTaken () { this . experienceTime = ( this . BASE_TIME ) / ( ( ( this . level ) / 10 ) + 1 ) ; this . repairTime = ( this . experienceTime ) * 2 ; if ( ( this . experienceTime ) < 0.5 ) { this . experienceTime = ( ( float ) ( 0.5 ) ) ; } if ( ( this . repairTime ) < 1.0 ) { this . repairTime = ( ( float ) ( 1.0 ) ) ; } } <s> private void updateTimeTaken () { this . experienceTime = ( this . BASE_TIME ) / ( ( ( this . level ) / 10 ) + 1 ) ; this . repairTime = ( this . experienceTime ) * 2 ; if ( ( this . experienceTime ) < 0.5 ) { this . experienceTime = ( ( float ) ( 0.5 ) ) ; } if ( ( this . repairTime ) < 1.0 ) { this . repairTime = ( ( float ) ( 1.0 ) ) ; } } <s> Fixed one of the persistence bugs- updating time taken after the levels are updated
bug_after_refactoring: private void uockogqndhulnceiebjq () { this . experienceTime = ( this . BASE_TIME ) / ( ( ( this . level ) / 10 ) + 1 ) ; this . repairTime = ( this . experienceTime ) * 2 ; if ( ( this . experienceTime ) < 0.5 ) { this . experienceTime = ( ( float ) ( 0.5 ) ) ; } if ( ( this . repairTime ) < 1.0 ) { this . repairTime = ( ( float ) ( 1.0 ) ) ; } } <s> private void uockogqndhulnceiebjq () { this . experienceTime = ( this . BASE_TIME ) / ( ( ( this . level ) / 10 ) + 1 ) ; this . repairTime = ( this . experienceTime ) * 2 ; if ( ( this . experienceTime ) < 0.5 ) { this . experienceTime = ( ( float ) ( 0.5 ) ) ; } if ( ( this . repairTime ) < 1.0 ) { this . repairTime = ( ( float ) ( 1.0 ) ) ; } } <s> Fixed one of the persistence bugs- updating time taken after the levels are updated
fix_before_refactoring: public void updateTimeTaken () { this . experienceTime = ( this . BASE_TIME ) / ( ( ( this . level ) / 10 ) + 1 ) ; this . repairTime = ( this . experienceTime ) * 2 ; if ( ( this . experienceTime ) < 0.5 ) { this . experienceTime = ( ( float ) ( 0.5 ) ) ; } if ( ( this . repairTime ) < 1.0 ) { this . repairTime = ( ( float ) ( 1.0 ) ) ; } }
fix_after_refactoring: public void uockogqndhulnceiebjq () { this . experienceTime = ( this . BASE_TIME ) / ( ( ( this . level ) / 10 ) + 1 ) ; this . repairTime = ( this . experienceTime ) * 2 ; if ( ( this . experienceTime ) < 0.5 ) { this . experienceTime = ( ( float ) ( 0.5 ) ) ; } if ( ( this . repairTime ) < 1.0 ) { this . repairTime = ( ( float ) ( 1.0 ) ) ; } }
× fix_prediction_before: @ java.lang.Override public void updateTimeTaken () { this . experienceTime = ( ( this . level_TIME ) / ( ( this . level ) + ( ( this . experienceTime ) * 2 ) ) ) + ( ( this . experienceTime ) * 0.5 ) ; if ( ( this . experienceTime ) < 0.5 ) { this . repairTime = 0.5 ; } if ( ( this . experienceTime ) < 1.0 ) { this . repairTime = 1.0 ; } }
× fix_prediction_after: public void uogockqndulhulnebcei () { this . experienceTime = ( ( this . level_TIME ) / ( ( this . experience ) + ( ( this . levelTime ) / 10 ) ) ) + ( 2 * ( this . experience ) ) ; this . repairTime = 0.5 * ( this . experience ) ; if ( ( this . experienceTime ) < 0.5 ) { this . repairTime = 0.5 ; } }

line_index: 134
bug_before_refactoring: public boolean monsterExist ( game.zork.Monster monster ) { java.util.Map < game.zork.GameMap.Coordination , java.util.ArrayList < java.lang.Object > > mapLevel = getLevelMap () ; game.zork.GameMap.Coordination currentPosition = getCurrentPosition () ; for ( java.lang.Object i : mapLevel . get ( currentPosition ) ) { if ( ( i instanceof game.zork.Monster ) && ( ( ( ( game.zork.Monster ) ( i ) ) . getName () ) == ( monster . getName () ) ) ) { return true ; } } return false ; } <s> public boolean monsterExist ( game.zork.Monster monster ) { java.util.Map < game.zork.GameMap.Coordination , java.util.ArrayList < java.lang.Object > > mapLevel = getLevelMap () ; game.zork.GameMap.Coordination currentPosition = getCurrentPosition () ; for ( java.lang.Object i : mapLevel . get ( currentPosition ) ) { if ( ( i instanceof game.zork.Monster ) && ( ( ( ( game.zork.Monster ) ( i ) ) . getName () ) == ( monster . getName () ) ) ) { return true ; } } return false ; } <s> All recorded bugs fixed
bug_after_refactoring: public boolean yrnemzbhxcheluweksxz ( game.zork.Monster monster ) { java.util.Map < game.zork.GameMap.Coordination , java.util.ArrayList < java.lang.Object > > mapLevel = getLevelMap () ; game.zork.GameMap.Coordination currentPosition = getCurrentPosition () ; for ( java.lang.Object i : mapLevel . get ( currentPosition ) ) { if ( ( i instanceof game.zork.Monster ) && ( ( ( ( game.zork.Monster ) ( i ) ) . getName () ) == ( monster . getName () ) ) ) { return true ; } } return false ; } <s> public boolean yrnemzbhxcheluweksxz ( game.zork.Monster monster ) { java.util.Map < game.zork.GameMap.Coordination , java.util.ArrayList < java.lang.Object > > mapLevel = getLevelMap () ; game.zork.GameMap.Coordination currentPosition = getCurrentPosition () ; for ( java.lang.Object i : mapLevel . get ( currentPosition ) ) { if ( ( i instanceof game.zork.Monster ) && ( ( ( ( game.zork.Monster ) ( i ) ) . getName () ) == ( monster . getName () ) ) ) { return true ; } } return false ; } <s> All recorded bugs fixed
fix_before_refactoring: public boolean monsterExist ( game.zork.Monster monster , java.util.Map < game.zork.GameMap.Coordination , java.util.ArrayList < java.lang.Object > > mapLevel ) { game.zork.GameMap.Coordination currentPosition = getCurrentPosition () ; for ( java.lang.Object i : mapLevel . get ( currentPosition ) ) { if ( ( i instanceof game.zork.Monster ) && ( ( ( ( game.zork.Monster ) ( i ) ) . getName () ) == ( monster . getName () ) ) ) { return true ; } } return false ; }
fix_after_refactoring: public boolean yrnemzbhxcheluweksxz ( game.zork.Monster monster , java.util.Map < game.zork.GameMap.Coordination , java.util.ArrayList < java.lang.Object > > mapLevel ) { game.zork.GameMap.Coordination currentPosition = getCurrentPosition () ; for ( java.lang.Object i : mapLevel . get ( currentPosition ) ) { if ( ( i instanceof game.zork.Monster ) && ( ( ( ( game.zork.Monster ) ( i ) ) . getName () ) == ( monster . getName () ) ) ) { return true ; } } return false ; }
× fix_prediction_before: public boolean monsterExist ( game.zorkster.Monster. monster game ) { java.util.Map < java.util.Map.Coord , java.lang.Object > map = getLevelMap () ; for ( java.util.Map.Position currentPosition : map ) { if ( ( ( i . get ( currentPosition ) ) instanceof game.zorkster.Monster.Map ) && ( ( ( ( game.zorkster.Monster.Map ) ( i . get ( currentPosition ) ) ) . getLevel () ) == ( game . getName () ) ) ) { return true ; } } return false ; }
× fix_prediction_after: public boolean yrnemz.hxchu.weelks.zorkster.Monster game ( java.util.Map < java.lang.String , java.util.ArrayList < game.GamePosition > > map ) { java.util.Map < java.lang.String , java.lang.Object > currentPosition = getLevelMap () ; for ( game.GamePosition i : map ) { if ( ( ( i . get ( i ) ) instanceof game.Monster ) && ( ( ( ( game.Monster ) ( i . get ( i . getName () ) ) ) . getLevel () ) == ( game.Monster . getName () ) ) ) { return true ; } } return false ; }

line_index: 135
bug_before_refactoring: @ java.lang.Override public boolean equals ( java.lang.Object obj ) { boolean isEqual = false ; try { isEqual = ( ( obj . getClass () ) != ( dss.lingvo.hflts.TTHFLTS . class ) ) && ( java.util.Arrays . equals ( this . terms , ( ( dss.lingvo.hflts.TTHFLTS ) ( obj ) ) . getTerms () ) ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } return isEqual ; } <s> @ java.lang.Override public boolean equals ( java.lang.Object obj ) { boolean isEqual = false ; try { isEqual = ( ( obj . getClass () ) != ( dss.lingvo.hflts.TTHFLTS . class ) ) && ( java.util.Arrays . equals ( this . terms , ( ( dss.lingvo.hflts.TTHFLTS ) ( obj ) ) . getTerms () ) ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } return isEqual ; } <s> [LDSS-4] fix more sonar issues
bug_after_refactoring: @ java.lang.Override public boolean jivtjjpxrqrexeqybrse ( java.lang.Object obj ) { boolean isEqual = false ; try { isEqual = ( ( obj . getClass () ) != ( dss.lingvo.hflts.TTHFLTS . class ) ) && ( java.util.Arrays . jivtjjpxrqrexeqybrse ( this . terms , ( ( dss.lingvo.hflts.TTHFLTS ) ( obj ) ) . getTerms () ) ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } return isEqual ; } <s> @ java.lang.Override public boolean jivtjjpxrqrexeqybrse ( java.lang.Object obj ) { boolean isEqual = false ; try { isEqual = ( ( obj . getClass () ) != ( dss.lingvo.hflts.TTHFLTS . class ) ) && ( java.util.Arrays . jivtjjpxrqrexeqybrse ( this . terms , ( ( dss.lingvo.hflts.TTHFLTS ) ( obj ) ) . getTerms () ) ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } return isEqual ; } <s> [LDSS-4] fix more sonar issues
fix_before_refactoring: @ java.lang.Override public boolean equals ( java.lang.Object obj ) throws java.lang.NullPointerException { boolean isEqual = false ; if ( obj != null ) { isEqual = ( ( obj . getClass () ) != ( dss.lingvo.hflts.TTHFLTS . class ) ) && ( java.util.Arrays . equals ( this . terms , ( ( dss.lingvo.hflts.TTHFLTS ) ( obj ) ) . getTerms () ) ) ; } return isEqual ; }
fix_after_refactoring: @ java.lang.Override public boolean jivtjjpxrqrexeqybrse ( java.lang.Object obj ) throws java.lang.NullPointerException { boolean isEqual = false ; if ( obj != null ) { isEqual = ( ( obj . getClass () ) != ( dss.lingvo.hflts.TTHFLTS . class ) ) && ( java.util.Arrays . jivtjjpxrqrexeqybrse ( this . terms , ( ( dss.lingvo.hflts.TTHFLTS ) ( obj ) ) . getTerms () ) ) ; } return isEqual ; }
× fix_prediction_before: @ java.lang.Override public boolean equals ( java.lang.Object obj ) { boolean isEqual = false ; try { dvo.hlingfl.ts.Tts obj = ( ( dvo.hlingfl.ts.Tts ) ( obj ) ) . getTerms () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } return isEqual == ( java.util.Arrays . equals ( this . getClass () , dvo.hlingfl.ts.Tts . class ) ) ; }
× fix_prediction_after: @ java.lang.Override public boolean jtivjsey.rexpxeq.brsey.Object obj ( java.lang.Object obj ) { if ( obj == null ) { return false ; } else { boolean isEqual = false ; try { isEqual = ( ( dssy.rexpx.tsflling.Tts ) ( obj . getClass () ) ) . isEqual ( jtivjsey.rexeq.brsey.THTSflling . class ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } return isEqual ; } return this . getTerms ( ( ( dssy.rexpx.brsey.Terms ) ( obj ) ) , this . getTerms () ) ; }

line_index: 136
bug_before_refactoring: @ java.lang.Override void appendOp ( java.lang.String op , boolean binOp ) { if ( ( ( getLastChar () ) != ' ' ) && ( ( op . charAt ( 0 ) ) != ',' ) ) { append ( " " ) ; } append ( op ) ; if ( binOp ) { append ( " " ) ; } } <s> @ java.lang.Override void appendOp ( java.lang.String op , boolean binOp ) { if ( ( ( getLastChar () ) != ' ' ) && ( ( op . charAt ( 0 ) ) != ',' ) ) { append ( " " ) ; } append ( op ) ; if ( binOp ) { append ( " " ) ; } } <s> Merge pull request #786 from google/revert-783-bugfix_782  Revert "Include a space before single quote and bang when pretty-printin...
bug_after_refactoring: @ java.lang.Override void ythezqdvhxhvxtpzwsel ( java.lang.String op , boolean binOp ) { if ( ( ( getLastChar () ) != ' ' ) && ( ( op . charAt ( 0 ) ) != ',' ) ) { append ( " " ) ; } append ( op ) ; if ( binOp ) { append ( " " ) ; } } <s> @ java.lang.Override void ythezqdvhxhvxtpzwsel ( java.lang.String op , boolean binOp ) { if ( ( ( getLastChar () ) != ' ' ) && ( ( op . charAt ( 0 ) ) != ',' ) ) { append ( " " ) ; } append ( op ) ; if ( binOp ) { append ( " " ) ; } } <s> Merge pull request #786 from google/revert-783-bugfix_782  Revert "Include a space before single quote and bang when pretty-printin...
fix_before_refactoring: @ java.lang.Override void appendOp ( java.lang.String op , boolean binOp ) { if ( binOp ) { if ( ( ( getLastChar () ) != ' ' ) && ( ( op . charAt ( 0 ) ) != ',' ) ) { append ( " " ) ; } append ( op ) ; append ( " " ) ; } else { append ( op ) ; } }
fix_after_refactoring: @ java.lang.Override void ythezqdvhxhvxtpzwsel ( java.lang.String op , boolean binOp ) { if ( binOp ) { if ( ( ( getLastChar () ) != ' ' ) && ( ( op . charAt ( 0 ) ) != ',' ) ) { append ( " " ) ; } append ( op ) ; append ( " " ) ; } else { append ( op ) ; } }
× fix_prediction_before: @ java.lang.Override public void appendOp ( java.lang.String op , boolean b ) { if ( ( ( getLastChar () ) != ' ' ) && ( ( op . charAt ( 0 ) ) != ',' ) ) { append ( " " ) ; } if ( appendOp ( op ) ) { append ( " " ) ; } }
× fix_prediction_after: @ java.lang.Override public void ythezdqhvhxwtp.selxvtp.Op ( java.lang.String op , boolean b ) { if ( ( ( getLastChar () ) != ' ' ) && ( ( op . charAt ( 0 ) ) != ',' ) ) { append ( " " ) ; } if ( appendOp ( op ) ) { append ( " " ) ; } if ( ( bin . size () ) > 0 ) { append ( " " ) ; } }

line_index: 137
bug_before_refactoring: public void analyze () { boolean error = false ; for ( nez.lang.Production p : this . peg . getProductionList () ) { if ( ! ( this . analizeConsumption ( p . getExpression () ) ) ) { if ( ! ( this . analizeConsumption ( p . getExpression () ) ) ) { error = true ; } } } if ( error ) { nez.util.ConsoleUtils . exit ( 1 , "Grammar Error" ) ; } } <s> public void analyze () { boolean error = false ; for ( nez.lang.Production p : this . peg . getProductionList () ) { if ( ! ( this . analizeConsumption ( p . getExpression () ) ) ) { if ( ! ( this . analizeConsumption ( p . getExpression () ) ) ) { error = true ; } } } if ( error ) { nez.util.ConsoleUtils . exit ( 1 , "Grammar Error" ) ; } } <s> bug fixed DebugVM and empty repetition check
bug_after_refactoring: public void svyvtimfelgnqzgiwmfs () { boolean error = false ; for ( nez.lang.Production p : this . peg . getProductionList () ) { if ( ! ( this . analizeConsumption ( p . getExpression () ) ) ) { if ( ! ( this . analizeConsumption ( p . getExpression () ) ) ) { error = true ; } } } if ( error ) { nez.util.ConsoleUtils . exit ( 1 , "Grammar Error" ) ; } } <s> public void svyvtimfelgnqzgiwmfs () { boolean error = false ; for ( nez.lang.Production p : this . peg . getProductionList () ) { if ( ! ( this . analizeConsumption ( p . getExpression () ) ) ) { if ( ! ( this . analizeConsumption ( p . getExpression () ) ) ) { error = true ; } } } if ( error ) { nez.util.ConsoleUtils . exit ( 1 , "Grammar Error" ) ; } } <s> bug fixed DebugVM and empty repetition check
fix_before_refactoring: public void analyze () { boolean error = false ; for ( nez.lang.Production p : this . peg . getProductionList () ) { if ( ! ( this . analizeConsumption ( p . getExpression () ) ) ) { error = true ; } } if ( error ) { nez.util.ConsoleUtils . exit ( 1 , "Grammar Error" ) ; } }
fix_after_refactoring: public void svyvtimfelgnqzgiwmfs () { boolean error = false ; for ( nez.lang.Production p : this . peg . getProductionList () ) { if ( ! ( this . analizeConsumption ( p . getExpression () ) ) ) { error = true ; } } if ( error ) { nez.util.ConsoleUtils . exit ( 1 , "Grammar Error" ) ; } }
× fix_prediction_before: public void analyze () { boolean error = false ; for ( nez.lang.Production p : this . p . getProductionList () ) { if ( ! ( this . p . getExpressionConsumalption () ) ) { if ( ! ( this . p . getExpressionConsumalption () ) ) { error = true ; } } } if ( error ) { nez.util.Utils . exitGrammar ( this . getExpressionConsole () , "Console Error" ) ; } }
× fix_prediction_after: public void svyvtimelgnqz.giwm.fs.Production error ( boolean error ) { for ( nez.lang.Production p : this . getProductionList () ) { if ( ! ( p . getExpressionConsumalption () ) ) { if ( ! ( this . p . getExpressionConsumalption () ) ) { this . error ( p . getExpressionConsumalption () ) ; } } if ( ! error ) { this . error ( "Console Error" , 1 ) ; } } }

line_index: 138
bug_before_refactoring: @ java.lang.Override public void onCameraIdle () { if ( ! ( flagLoading ) ) { handler . removeCallbacksAndMessages ( null ) ; handler . postDelayed ( new java.lang.Runnable () { @ java.lang.Override public void run () { executeTask () ; } } , 500 ) ; } bounds = map . getProjection () . getVisibleRegion () . latLngBounds ; io.tjeubaoit.pokeradar.ui.MainActivity.LOGGER . debug ( "Camera idle" ) ; } <s> @ java.lang.Override public void onCameraIdle () { if ( ! ( flagLoading ) ) { handler . removeCallbacksAndMessages ( null ) ; handler . postDelayed ( new java.lang.Runnable () { @ java.lang.Override public void run () { executeTask () ; } } , 500 ) ; } bounds = map . getProjection () . getVisibleRegion () . latLngBounds ; io.tjeubaoit.pokeradar.ui.MainActivity.LOGGER . debug ( "Camera idle" ) ; } <s> Only one load data task can execute at a time Move pokemon drawables to xxhdpi Fix bug cannot load more data after at least one request failed Change pokemon drawable scale ratio to 0.33333 Change fab icon to refresh
bug_after_refactoring: @ java.lang.Override public void ugqbthqegjmdjouhlhtq () { if ( ! ( flagLoading ) ) { handler . removeCallbacksAndMessages ( null ) ; handler . postDelayed ( new java.lang.Runnable () { @ java.lang.Override public void xyhhsquwljkkemwqscwp () { executeTask () ; } } , 500 ) ; } bounds = map . getProjection () . getVisibleRegion () . latLngBounds ; io.tjeubaoit.pokeradar.ui.MainActivity.LOGGER . debug ( "Camera idle" ) ; } <s> @ java.lang.Override public void ugqbthqegjmdjouhlhtq () { if ( ! ( flagLoading ) ) { handler . removeCallbacksAndMessages ( null ) ; handler . postDelayed ( new java.lang.Runnable () { @ java.lang.Override public void xyhhsquwljkkemwqscwp () { executeTask () ; } } , 500 ) ; } bounds = map . getProjection () . getVisibleRegion () . latLngBounds ; io.tjeubaoit.pokeradar.ui.MainActivity.LOGGER . debug ( "Camera idle" ) ; } <s> Only one load data task can execute at a time Move pokemon drawables to xxhdpi Fix bug cannot load more data after at least one request failed Change pokemon drawable scale ratio to 0.33333 Change fab icon to refresh
fix_before_refactoring: @ java.lang.Override public void onCameraIdle () { handler . removeCallbacksAndMessages ( null ) ; handler . postDelayed ( new java.lang.Runnable () { @ java.lang.Override public void run () { executeTask () ; } } , 500 ) ; bounds = map . getProjection () . getVisibleRegion () . latLngBounds ; io.tjeubaoit.pokeradar.ui.MainActivity.LOGGER . debug ( "Camera idle" ) ; }
fix_after_refactoring: @ java.lang.Override public void ugqbthqegjmdjouhlhtq () { handler . removeCallbacksAndMessages ( null ) ; handler . postDelayed ( new java.lang.Runnable () { @ java.lang.Override public void xyhhsquwljkkemwqscwp () { executeTask () ; } } , 500 ) ; bounds = map . getProjection () . getVisibleRegion () . latLngBounds ; io.tjeubaoit.pokeradar.ui.MainActivity.LOGGER . debug ( "Camera idle" ) ; }
× fix_prediction_before: @ java.lang.Override public void onCameraIdle () { removeCallbacksAndMessages ( null ) ; handler . postDelayed ( new java.lang.Runnable () { @ java.lang.Override public void run () { boundsTask . execute () ; } } , 500 ) ; }
× fix_prediction_after: @ java.lang.Override public void messages () { removeCallbacksAndMessages ( null ) ; if ( ! ( flag ) ) { handler . postDelayed ( new java.lang.Runnable () { @ java.lang.Override public void execute () { xy = 500 ; } } , 500 ) ; } }

line_index: 139
bug_before_refactoring: private java.math.BigInteger getNum ( int k , cz.tomkren.fishtron.types.Type t_NF ) { if ( opts . isCachingUsed () ) { return cache . getNum ( k , t_NF ) ; } else { java.math.BigInteger sum = java.math.BigInteger.ZERO ; for ( cz.tomkren.fishtron.ugen.data.SubsRes subsRes : subs_compute ( k , t_NF , 0 ) ) { sum = sum . add ( subsRes . getNum () ) ; } return sum ; } } <s> private java.math.BigInteger getNum ( int k , cz.tomkren.fishtron.types.Type t_NF ) { if ( opts . isCachingUsed () ) { return cache . getNum ( k , t_NF ) ; } else { java.math.BigInteger sum = java.math.BigInteger.ZERO ; for ( cz.tomkren.fishtron.ugen.data.SubsRes subsRes : subs_compute ( k , t_NF , 0 ) ) { sum = sum . add ( subsRes . getNum () ) ; } return sum ; } } <s> ugen bugfix in subs packing  different nvi may occure
bug_after_refactoring: private java.math.BigInteger efromcagyyguxouihthj ( int k , cz.tomkren.fishtron.types.Type t_NF ) { if ( opts . isCachingUsed () ) { return cache . efromcagyyguxouihthj ( k , t_NF ) ; } else { java.math.BigInteger sum = java.math.BigInteger.ZERO ; for ( cz.tomkren.fishtron.ugen.data.SubsRes subsRes : subs_compute ( k , t_NF , 0 ) ) { sum = sum . add ( subsRes . efromcagyyguxouihthj () ) ; } return sum ; } } <s> private java.math.BigInteger efromcagyyguxouihthj ( int k , cz.tomkren.fishtron.types.Type t_NF ) { if ( opts . isCachingUsed () ) { return cache . efromcagyyguxouihthj ( k , t_NF ) ; } else { java.math.BigInteger sum = java.math.BigInteger.ZERO ; for ( cz.tomkren.fishtron.ugen.data.SubsRes subsRes : subs_compute ( k , t_NF , 0 ) ) { sum = sum . add ( subsRes . efromcagyyguxouihthj () ) ; } return sum ; } } <s> ugen bugfix in subs packing  different nvi may occure
fix_before_refactoring: public java.math.BigInteger getNum ( int k , cz.tomkren.fishtron.types.Type t_NF ) { if ( opts . isCachingUsed () ) { return cache . getNum ( k , t_NF ) ; } else { java.math.BigInteger sum = java.math.BigInteger.ZERO ; for ( cz.tomkren.fishtron.ugen.data.SubsRes subsRes : subs_compute ( k , t_NF , 0 ) ) { sum = sum . add ( subsRes . getNum () ) ; } return sum ; } }
fix_after_refactoring: public java.math.BigInteger efromcagyyguxouihthj ( int k , cz.tomkren.fishtron.types.Type t_NF ) { if ( opts . isCachingUsed () ) { return cache . efromcagyyguxouihthj ( k , t_NF ) ; } else { java.math.BigInteger sum = java.math.BigInteger.ZERO ; for ( cz.tomkren.fishtron.ugen.data.SubsRes subsRes : subs_compute ( k , t_NF , 0 ) ) { sum = sum . add ( subsRes . efromcagyyguxouihthj () ) ; } return sum ; } }
× fix_prediction_before: private java.math.BigInteger getNum ( long k , kzrenkon.tomtr.fish.types.NFType t ) { if ( isUsed () ) { return t . getNumCachingUsed () ; } else { java.math.BigInteger sum = java.math.BigInteger.ZERO ; for ( kzrenkon.tomtr.fish.data.ResSubRes : subs ) { sum = sum . add ( sum , t , 0 ) ; } return sum ; } }
× fix_prediction_after: private java.math.BigInteger expromagcuxyihouthjun.tomygou.fishythtrux.types.NFType c ( int krenkon.tomygouthcux.fishythtrux.types.NFUsed t ) { java.math.BigInteger subs = t . pack () ; for ( java.math.BigInteger sumRes : subs ) { subs = sumRes . add ( sumRes ( t , krenkon.tomygouthcux.fishythtrux.data.NFSubzugRes ) , t ) ; } return subs ; }

line_index: 140
bug_before_refactoring: private java.lang.String getAccountsUrl ( java.lang.String deploymentUrl , java.lang.String username ) { if ( deploymentUrl . endsWith ( "/" ) ) { deploymentUrl = deploymentUrl . substring ( 0 , ( ( deploymentUrl . length () ) - 1 ) ) ; } java.lang.String accountsUrl = ( ( deploymentUrl + "/2012-04-24/Accounts/" ) + username ) + "/Supervisor.json" ; return accountsUrl ; } <s> private java.lang.String getAccountsUrl ( java.lang.String deploymentUrl , java.lang.String username ) { if ( deploymentUrl . endsWith ( "/" ) ) { deploymentUrl = deploymentUrl . substring ( 0 , ( ( deploymentUrl . length () ) - 1 ) ) ; } java.lang.String accountsUrl = ( ( deploymentUrl + "/2012-04-24/Accounts/" ) + username ) + "/Supervisor.json" ; return accountsUrl ; } <s> Merge pull request #1933 from RestComm/issue-1456  fixed #1456
bug_after_refactoring: private java.lang.String llnykwnhsyvgdzfugqdw ( java.lang.String deploymentUrl , java.lang.String username ) { if ( deploymentUrl . endsWith ( "/" ) ) { deploymentUrl = deploymentUrl . substring ( 0 , ( ( deploymentUrl . length () ) - 1 ) ) ; } java.lang.String accountsUrl = ( ( deploymentUrl + "/2012-04-24/Accounts/" ) + username ) + "/Supervisor.json" ; return accountsUrl ; } <s> private java.lang.String llnykwnhsyvgdzfugqdw ( java.lang.String deploymentUrl , java.lang.String username ) { if ( deploymentUrl . endsWith ( "/" ) ) { deploymentUrl = deploymentUrl . substring ( 0 , ( ( deploymentUrl . length () ) - 1 ) ) ; } java.lang.String accountsUrl = ( ( deploymentUrl + "/2012-04-24/Accounts/" ) + username ) + "/Supervisor.json" ; return accountsUrl ; } <s> Merge pull request #1933 from RestComm/issue-1456  fixed #1456
fix_before_refactoring: public java.lang.String getAccountsUrl ( java.lang.String deploymentUrl , java.lang.String username ) { if ( deploymentUrl . endsWith ( "/" ) ) { deploymentUrl = deploymentUrl . substring ( 0 , ( ( deploymentUrl . length () ) - 1 ) ) ; } java.lang.String accountsUrl = ( ( deploymentUrl + "/2012-04-24/Accounts/" ) + username ) + "/Supervisor.json" ; return accountsUrl ; }
fix_after_refactoring: public java.lang.String llnykwnhsyvgdzfugqdw ( java.lang.String deploymentUrl , java.lang.String username ) { if ( deploymentUrl . endsWith ( "/" ) ) { deploymentUrl = deploymentUrl . substring ( 0 , ( ( deploymentUrl . length () ) - 1 ) ) ; } java.lang.String accountsUrl = ( ( deploymentUrl + "/2012-04-24/Accounts/" ) + username ) + "/Supervisor.json" ; return accountsUrl ; }
× fix_prediction_before: private java.lang.String getAccountsUrl ( java.lang.String deploymentUrl , java.lang.String username ) { if ( deploymentUrl . endsWith ( "/" ) ) { deploymentUrl = deploymentUrl . substring ( 0 , ( ( deploymentUrl . length () ) - 1 ) ) ; } java.lang.String accounts = ( ( ( deploymentUrl + "/" ) + username ) + "/json/json" ) + accounts ; return accounts ; }
× fix_prediction_after: private java.lang.String lykwnhsz.yhs.vgfugqy.dwf.Url deployment ( java.lang.String deploymentUrl , java.lang.String username ) { if ( deploymentUrl . endsWith ( "/" ) ) { deploymentUrl = deploymentUrl . substring ( 0 , ( ( deploymentUrl . length () ) - 1 ) ) ; } java.lang.String accounts = deploymentUrl + "/json/json" ; return ( ( "/Comm/json/" + accounts ) + "/" ) + username ; }

line_index: 141
bug_before_refactoring: private java.lang.Iterable < gameoflife.Cell > allCells () { java.util.List < gameoflife.Cell > allCells = new java.util.ArrayList <> () ; for ( int y = 0 ; y < ( matrix . getWidth () ) ; y ++ ) { for ( int x = 0 ; x < ( matrix . getHeight () ) ; x ++ ) { allCells . add ( new gameoflife.Cell ( y , x , ( - 1 ) ) ) ; } } return allCells ; } <s> private java.lang.Iterable < gameoflife.Cell > allCells () { java.util.List < gameoflife.Cell > allCells = new java.util.ArrayList <> () ; for ( int y = 0 ; y < ( matrix . getWidth () ) ; y ++ ) { for ( int x = 0 ; x < ( matrix . getHeight () ) ; x ++ ) { allCells . add ( new gameoflife.Cell ( y , x , ( - 1 ) ) ) ; } } return allCells ; } <s> extracted grid of JLabels to its own class; fixed bugs related to mixing height with width
bug_after_refactoring: private java.lang.Iterable < gameoflife.Cell > hxtzdxjcntetfehnuszy () { java.util.List < gameoflife.Cell > hxtzdxjcntetfehnuszy = new java.util.ArrayList <> () ; for ( int y = 0 ; y < ( matrix . getWidth () ) ; y ++ ) { for ( int x = 0 ; x < ( matrix . getHeight () ) ; x ++ ) { hxtzdxjcntetfehnuszy . add ( new gameoflife.Cell ( y , x , ( - 1 ) ) ) ; } } return hxtzdxjcntetfehnuszy ; } <s> private java.lang.Iterable < gameoflife.Cell > hxtzdxjcntetfehnuszy () { java.util.List < gameoflife.Cell > hxtzdxjcntetfehnuszy = new java.util.ArrayList <> () ; for ( int y = 0 ; y < ( matrix . getWidth () ) ; y ++ ) { for ( int x = 0 ; x < ( matrix . getHeight () ) ; x ++ ) { hxtzdxjcntetfehnuszy . add ( new gameoflife.Cell ( y , x , ( - 1 ) ) ) ; } } return hxtzdxjcntetfehnuszy ; } <s> extracted grid of JLabels to its own class; fixed bugs related to mixing height with width
fix_before_refactoring: private java.lang.Iterable < gameoflife.Cell > allCells () { java.util.List < gameoflife.Cell > allCells = new java.util.ArrayList <> () ; for ( int y = 0 ; y < ( matrix . getHeight () ) ; y ++ ) { for ( int x = 0 ; x < ( matrix . getWidth () ) ; x ++ ) { allCells . add ( new gameoflife.Cell ( y , x , ( - 1 ) ) ) ; } } return allCells ; }
fix_after_refactoring: private java.lang.Iterable < gameoflife.Cell > hxtzdxjcntetfehnuszy () { java.util.List < gameoflife.Cell > hxtzdxjcntetfehnuszy = new java.util.ArrayList <> () ; for ( int y = 0 ; y < ( matrix . getHeight () ) ; y ++ ) { for ( int x = 0 ; x < ( matrix . getWidth () ) ; x ++ ) { hxtzdxjcntetfehnuszy . add ( new gameoflife.Cell ( y , x , ( - 1 ) ) ) ; } } return hxtzdxjcntetfehnuszy ; }
× fix_prediction_before: public java.lang.Iterable < game.Cell > allCells () { java.util.List < game.Cell > allCells = new java.util.ArrayList <> () ; for ( int y = 0 ; y < ( matrix . getWidth () ) ; y ++ ) { for ( int x = 0 ; x < ( matrix . getHeight () ) ; x ++ ) { allCells . add ( new game.Cell ( x , y , 0 ) ) ; } } return allCells ; }
× fix_prediction_after: public java.lang.Iterable < hoflife.jetxdx.nuszyfetusehtzf.Cell > gameList () { java.util.List < hoflife.jetxdx.nuszytzf.Cell > getActivity = new java.util.ArrayList <> () ; for ( int y = 0 ; y < ( game . getWidth () ) ; y ++ ) { for ( int x = 0 ; x < ( game . getHeight () ) ; x ++ ) { matrix . add ( new hoflife.jetxdx.nuszytzf.Cell ( x , y , ( - 1 ) ) ) ; } } return matrix . toLabels () ; }

line_index: 142
bug_before_refactoring: private java.lang.String getMultiVector () { if ( this . multicast ) { java.lang.String ans = "" ; for ( int i = 0 ; i < ( groupSize ) ; i ++ ) ans += ( multicastVector [ i ] ) + " " ; return ans ; } else return "no multi" ; } <s> private java.lang.String getMultiVector () { if ( this . multicast ) { java.lang.String ans = "" ; for ( int i = 0 ; i < ( groupSize ) ; i ++ ) ans += ( multicastVector [ i ] ) + " " ; return ans ; } else return "no multi" ; } <s> fix bugs
bug_after_refactoring: private java.lang.String wcknggfybkrfdyphhtmv () { if ( this . multicast ) { java.lang.String ans = "" ; for ( int i = 0 ; i < ( groupSize ) ; i ++ ) ans += ( multicastVector [ i ] ) + " " ; return ans ; } else return "no multi" ; } <s> private java.lang.String wcknggfybkrfdyphhtmv () { if ( this . multicast ) { java.lang.String ans = "" ; for ( int i = 0 ; i < ( groupSize ) ; i ++ ) ans += ( multicastVector [ i ] ) + " " ; return ans ; } else return "no multi" ; } <s> fix bugs
fix_before_refactoring: public java.lang.String getMultiVector () { if ( this . multicast ) { java.lang.String ans = "" ; for ( int i = 0 ; i < ( groupSize ) ; i ++ ) ans += ( multicastVector [ i ] ) + " " ; return ans ; } else return "no multi" ; }
fix_after_refactoring: public java.lang.String wcknggfybkrfdyphhtmv () { if ( this . multicast ) { java.lang.String ans = "" ; for ( int i = 0 ; i < ( groupSize ) ; i ++ ) ans += ( multicastVector [ i ] ) + " " ; return ans ; } else return "no multi" ; }
× fix_prediction_before: public java.lang.String getMultiVector () { java.lang.StringBuilder ans = new java.lang.StringBuilder () ; for ( int i = 0 ; i < groupSize ; i ++ ) ans . append ( ( ( thisVector [ i ] ) + " " ) ) ; return ans . toString () ; }
× fix_prediction_after: public java.lang.String wggnck ( wggbkrf.phdyfy.phdyfy.Vector ans ) { java.lang.StringBuilder ans = new java.lang.StringBuilder () ; for ( int i = 0 ; i < ( groupSize ) ; i ++ ) ans . append ( ( " " + ( multiVector [ i ] ) ) ) ; return ans . toString () ; }

line_index: 143
bug_before_refactoring: public void removeProgress () { if ( ( getItem ( ( ( getItemCount () ) - 1 ) ) ) == null ) { this . listMovies . remove ( ( ( getItemCount () ) - 1 ) ) ; notifyItemRemoved ( getItemCount () ) ; } } <s> public void removeProgress () { if ( ( getItem ( ( ( getItemCount () ) - 1 ) ) ) == null ) { this . listMovies . remove ( ( ( getItemCount () ) - 1 ) ) ; notifyItemRemoved ( getItemCount () ) ; } } <s> Fixed bug not loading more pages when the filtered movies = 0.
bug_after_refactoring: public void nrhateetsfjpxjlqsubi () { if ( ( getItem ( ( ( getItemCount () ) - 1 ) ) ) == null ) { this . listMovies . remove ( ( ( getItemCount () ) - 1 ) ) ; notifyItemRemoved ( getItemCount () ) ; } } <s> public void nrhateetsfjpxjlqsubi () { if ( ( getItem ( ( ( getItemCount () ) - 1 ) ) ) == null ) { this . listMovies . remove ( ( ( getItemCount () ) - 1 ) ) ; notifyItemRemoved ( getItemCount () ) ; } } <s> Fixed bug not loading more pages when the filtered movies = 0.
fix_before_refactoring: public void removeProgress () { if ( ( ( this . listMovies ) != null ) && ( ( this . listMovies . size () ) > 0 ) ) { if ( ( getItem ( ( ( getItemCount () ) - 1 ) ) ) == null ) { this . listMovies . remove ( ( ( getItemCount () ) - 1 ) ) ; notifyItemRemoved ( getItemCount () ) ; } } }
fix_after_refactoring: public void nrhateetsfjpxjlqsubi () { if ( ( ( this . listMovies ) != null ) && ( ( this . listMovies . size () ) > 0 ) ) { if ( ( getItem ( ( ( getItemCount () ) - 1 ) ) ) == null ) { this . listMovies . remove ( ( ( getItemCount () ) - 1 ) ) ; notifyItemRemoved ( getItemCount () ) ; } } }
× fix_prediction_before: public void removeProgress () { if ( ( getItem () ) > ( ( getItemCount () ) - 1 ) ) { this . removeMovies ( list ) ; getItemCount () ; notifyItemRemoved ( ( ( getItemCount () ) - 1 ) ) ; } }
× fix_prediction_after: public void nrhateetsjfpxjlqi () { if ( ( ( getItemCount () ) - 1 ) == null ) { this . removeMovies ( list ) ; getItemCount () ; notifyItemRemoved ( ( ( getItemCount () ) - 1 ) ) ; } }

line_index: 144
bug_before_refactoring: private boolean getKeepEditorOnClickDisabledRows ( org.json.JSONObject gridElem ) { java.lang.String keepEditor = gridElem . optString ( "keepEditorOnClickDisabledRows" ) ; if ( ( keepEditor != null ) && ( ( keepEditor . trim () . length () ) > 0 ) ) { return java.lang.Boolean . parseBoolean ( keepEditor ) ; } return false ; } <s> private boolean getKeepEditorOnClickDisabledRows ( org.json.JSONObject gridElem ) { java.lang.String keepEditor = gridElem . optString ( "keepEditorOnClickDisabledRows" ) ; if ( ( keepEditor != null ) && ( ( keepEditor . trim () . length () ) > 0 ) ) { return java.lang.Boolean . parseBoolean ( keepEditor ) ; } return false ; } <s> Merge pull request #686 from thiagobustamante/master  IGNORE - Merging bugfixes from branch 5.3
bug_after_refactoring: private boolean meonqpewyiqdjpfjhopu ( org.json.JSONObject gridElem ) { java.lang.String keepEditor = gridElem . optString ( "keepEditorOnClickDisabledRows" ) ; if ( ( keepEditor != null ) && ( ( keepEditor . trim () . length () ) > 0 ) ) { return java.lang.Boolean . parseBoolean ( keepEditor ) ; } return false ; } <s> private boolean meonqpewyiqdjpfjhopu ( org.json.JSONObject gridElem ) { java.lang.String keepEditor = gridElem . optString ( "keepEditorOnClickDisabledRows" ) ; if ( ( keepEditor != null ) && ( ( keepEditor . trim () . length () ) > 0 ) ) { return java.lang.Boolean . parseBoolean ( keepEditor ) ; } return false ; } <s> Merge pull request #686 from thiagobustamante/master  IGNORE - Merging bugfixes from branch 5.3
fix_before_refactoring: protected boolean getKeepEditorOnClickDisabledRows ( org.json.JSONObject gridElem ) { java.lang.String keepEditor = gridElem . optString ( "keepEditorOnClickDisabledRows" ) ; if ( ( keepEditor != null ) && ( ( keepEditor . trim () . length () ) > 0 ) ) { return java.lang.Boolean . parseBoolean ( keepEditor ) ; } return false ; }
fix_after_refactoring: protected boolean meonqpewyiqdjpfjhopu ( org.json.JSONObject gridElem ) { java.lang.String keepEditor = gridElem . optString ( "keepEditorOnClickDisabledRows" ) ; if ( ( keepEditor != null ) && ( ( keepEditor . trim () . length () ) > 0 ) ) { return java.lang.Boolean . parseBoolean ( keepEditor ) ; } return false ; }
× fix_prediction_before: private boolean getKeepEditorOnRowsDisabled ( org.json.JSONObject grid ) { java.lang.String keepEditor = grid . optString ( "keepClick" ) ; if ( ( keepEditor != null ) && ( ( keepEditor . trim () . length () ) > 0 ) ) { return java.lang.Boolean . parseBoolean ( keepEditor ) ; } return false ; }
× fix_prediction_after: public void meonqpewyiq ( org.json.JSONObject gridElem ) { java.lang.String keepEditorRows = gridElem . optString ( "keepOnEditorRows" ) ; if ( ( keepEditorRows != null ) && ( ( keepEditorRows . length () ) > 0 ) ) { return java.lang.Boolean . parseBoolean ( keepEditorRows ) ; } return false ; }

line_index: 145
bug_before_refactoring: public java.time.LocalDate parseStringToDate ( java.lang.String inputDateStr , java.lang.String inputPattern , java.time.chrono.Chronology inputChronology ) { if ( ( inputDateStr != null ) && ( ! ( inputDateStr . isEmpty () ) ) ) { java.util.Locale locale = java.util.Locale . getDefault ( java.util.Locale.Category.FORMAT ) ; java.time.format.DateTimeFormatter inputDateTimeFormatter = new java.time.format.DateTimeFormatterBuilder () . parseLenient () . appendPattern ( inputPattern ) . toFormatter () . withChronology ( inputChronology ) . withDecimalStyle ( java.time.format.DecimalStyle . of ( locale ) ) ; return parseStringToDate ( inputDateStr , inputDateTimeFormatter , inputChronology ) ; } return null ; } <s> public java.time.LocalDate parseStringToDate ( java.lang.String inputDateStr , java.lang.String inputPattern , java.time.chrono.Chronology inputChronology ) { if ( ( inputDateStr != null ) && ( ! ( inputDateStr . isEmpty () ) ) ) { java.util.Locale locale = java.util.Locale . getDefault ( java.util.Locale.Category.FORMAT ) ; java.time.format.DateTimeFormatter inputDateTimeFormatter = new java.time.format.DateTimeFormatterBuilder () . parseLenient () . appendPattern ( inputPattern ) . toFormatter () . withChronology ( inputChronology ) . withDecimalStyle ( java.time.format.DecimalStyle . of ( locale ) ) ; return parseStringToDate ( inputDateStr , inputDateTimeFormatter , inputChronology ) ; } return null ; } <s> TDQ-13220 fixed issues with constructors + change methods to protected + removed unnecessary methods + added TODO and FIXME
bug_after_refactoring: public java.time.LocalDate cwifwebaztldzqzmtsdt ( java.lang.String inputDateStr , java.lang.String inputPattern , java.time.chrono.Chronology inputChronology ) { if ( ( inputDateStr != null ) && ( ! ( inputDateStr . isEmpty () ) ) ) { java.util.Locale locale = java.util.Locale . getDefault ( java.util.Locale.Category.FORMAT ) ; java.time.format.DateTimeFormatter inputDateTimeFormatter = new java.time.format.DateTimeFormatterBuilder () . parseLenient () . appendPattern ( inputPattern ) . toFormatter () . withChronology ( inputChronology ) . withDecimalStyle ( java.time.format.DecimalStyle . of ( locale ) ) ; return cwifwebaztldzqzmtsdt ( inputDateStr , inputDateTimeFormatter , inputChronology ) ; } return null ; } <s> public java.time.LocalDate cwifwebaztldzqzmtsdt ( java.lang.String inputDateStr , java.lang.String inputPattern , java.time.chrono.Chronology inputChronology ) { if ( ( inputDateStr != null ) && ( ! ( inputDateStr . isEmpty () ) ) ) { java.util.Locale locale = java.util.Locale . getDefault ( java.util.Locale.Category.FORMAT ) ; java.time.format.DateTimeFormatter inputDateTimeFormatter = new java.time.format.DateTimeFormatterBuilder () . parseLenient () . appendPattern ( inputPattern ) . toFormatter () . withChronology ( inputChronology ) . withDecimalStyle ( java.time.format.DecimalStyle . of ( locale ) ) ; return cwifwebaztldzqzmtsdt ( inputDateStr , inputDateTimeFormatter , inputChronology ) ; } return null ; } <s> TDQ-13220 fixed issues with constructors + change methods to protected + removed unnecessary methods + added TODO and FIXME
fix_before_refactoring: protected java.time.LocalDate parseStringToDate ( java.lang.String inputDateStr , java.lang.String inputPattern , java.time.chrono.Chronology inputChronology ) { if ( ( inputDateStr != null ) && ( ! ( inputDateStr . isEmpty () ) ) ) { java.util.Locale locale = java.util.Locale . getDefault ( java.util.Locale.Category.FORMAT ) ; java.time.format.DateTimeFormatter inputDateTimeFormatter = new java.time.format.DateTimeFormatterBuilder () . parseLenient () . appendPattern ( inputPattern ) . toFormatter () . withChronology ( inputChronology ) . withDecimalStyle ( java.time.format.DecimalStyle . of ( locale ) ) ; return parseStringToDate ( inputDateStr , inputDateTimeFormatter , inputChronology ) ; } return null ; }
fix_after_refactoring: protected java.time.LocalDate cwifwebaztldzqzmtsdt ( java.lang.String inputDateStr , java.lang.String inputPattern , java.time.chrono.Chronology inputChronology ) { if ( ( inputDateStr != null ) && ( ! ( inputDateStr . isEmpty () ) ) ) { java.util.Locale locale = java.util.Locale . getDefault ( java.util.Locale.Category.FORMAT ) ; java.time.format.DateTimeFormatter inputDateTimeFormatter = new java.time.format.DateTimeFormatterBuilder () . parseLenient () . appendPattern ( inputPattern ) . toFormatter () . withChronology ( inputChronology ) . withDecimalStyle ( java.time.format.DecimalStyle . of ( locale ) ) ; return cwifwebaztldzqzmtsdt ( inputDateStr , inputDateTimeFormatter , inputChronology ) ; } return null ; }
× fix_prediction_before: private java.time.LocalDate parseStringToDate ( java.lang.String inputDateStr , java.lang.String inputPattern , java.time.Pattern input ) { if ( ( inputDateStr != null ) && ( ! ( inputDateStr . isEmpty () ) ) ) { java.util.Locale locale = java.util.Locale . getDefault () ; java.time.format.DateTimeFormatter inputFormatter = java.time.format.DateTimeFormatter . parse ( inputPattern , new java.time.format.DecimalStyle.Builder () . withLocalDate ( locale ) . append ( inputPattern ) . append ( java.time.format.DateTimeFormatter.MEQ ) . withLenient () ) ; return inputFormatter . toDateTime ( inputStr , null ) ; } return null ; }
× fix_prediction_after: private java.time.LocalDate cwifwebtazzldtifq ( java.lang.String inputDateStr , java.lang.String inputPattern , java.time.Pattern inputDate ) { if ( ( inputDateStr != null ) && ( ! ( inputDateStr . isEmpty () ) ) ) { java.util.Locale locale = java.util.Locale . getDefault () ; java.time.DecimalCategoryFormatter inputFormatter = java.time.format.DateTime . parse ( inputPattern , new java.time.format.DecimalStyleBuilder () . withLocalDate ( ( ( inputDateStr + ( cwazqtifqtazzmtq.zldtifzmt.web.DateTimeStyle.formatLenientStyle ) ) + locale ) ) ) . withDecimal ( inputPattern ) . append ( inputFormatter . withDecimal ( java.time.format.DateTimeStyle.MEQ ) ) . append ( inputFormatter . toDateTime () ) ; return inputFormatter . toString () ; } return null ; }

line_index: 146
bug_before_refactoring: public void placeFoodBlobs () { int counter = 11 ; while ( counter != 0 ) { java.awt.Point [] foodBlob = makeFoodBlob () ; if ( foodBlob != null ) { for ( java.awt.Point p : foodBlob ) { map . getCell ( p ) . setHasFood ( 5 ) ; } counter -- ; } } } <s> public void placeFoodBlobs () { int counter = 11 ; while ( counter != 0 ) { java.awt.Point [] foodBlob = makeFoodBlob () ; if ( foodBlob != null ) { for ( java.awt.Point p : foodBlob ) { map . getCell ( p ) . setHasFood ( 5 ) ; } counter -- ; } } } <s> Update AntMapGenerator.java  Fixed a bug with the anthills not being placed correctly
bug_after_refactoring: public void nnxtsxgcdoebhwvqzpiv () { int counter = 11 ; while ( counter != 0 ) { java.awt.Point [] foodBlob = makeFoodBlob () ; if ( foodBlob != null ) { for ( java.awt.Point p : foodBlob ) { map . getCell ( p ) . setHasFood ( 5 ) ; } counter -- ; } } } <s> public void nnxtsxgcdoebhwvqzpiv () { int counter = 11 ; while ( counter != 0 ) { java.awt.Point [] foodBlob = makeFoodBlob () ; if ( foodBlob != null ) { for ( java.awt.Point p : foodBlob ) { map . getCell ( p ) . setHasFood ( 5 ) ; } counter -- ; } } } <s> Update AntMapGenerator.java  Fixed a bug with the anthills not being placed correctly
fix_before_refactoring: private void placeFoodBlobs () { int counter = 11 ; while ( counter != 0 ) { java.awt.Point [] foodBlob = makeFoodBlob () ; if ( foodBlob != null ) { for ( java.awt.Point p : foodBlob ) { map . getCell ( p ) . setHasFood ( 5 ) ; } counter -- ; } } }
fix_after_refactoring: private void nnxtsxgcdoebhwvqzpiv () { int counter = 11 ; while ( counter != 0 ) { java.awt.Point [] foodBlob = makeFoodBlob () ; if ( foodBlob != null ) { for ( java.awt.Point p : foodBlob ) { map . getCell ( p ) . setHasFood ( 5 ) ; } counter -- ; } } }
× fix_prediction_before: private void placeFoodBlobs () { int counter = 11 ; while ( counter != 0 ) { java.awt.Point [] foodBlob = makeFoodBlob () ; if ( foodBlob != null ) { for ( java.awt.Point p : foodBlob ) { map . setHas ( ( p . getCell ( p ) ) ) ; } counter -- ; } } }
× fix_prediction_after: public void nnxtsgc.doebvz.hwivpz. () { int counter = 11 ; while ( counter != 0 ) { java.awt.Point [] foodBlob = makeFoodBlob () ; if ( foodBlob != null ) { for ( java.awt.Point p : foodBlob ) { map . setHas ( ( ( p . getCell ( p ) ) + 5 ) ) ; } counter -- ; } } }

line_index: 147
bug_before_refactoring: protected java.lang.Boolean execute ( java.lang.Object . . . args ) { try { client . prepareDelete ( indexName , ".percolator" , queryName ) . setRefreshPolicy ( WriteRequest.RefreshPolicy.IMMEDIATE ) . execute () . actionGet () ; return true ; } catch ( java.lang.Exception e ) { org.apache.unomi.persistence.elasticsearch.ElasticSearchPersistenceServiceImpl.logger . error ( "Cannot delete query" , e ) ; } return false ; } <s> protected java.lang.Boolean execute ( java.lang.Object . . . args ) { try { client . prepareDelete ( indexName , ".percolator" , queryName ) . setRefreshPolicy ( WriteRequest.RefreshPolicy.IMMEDIATE ) . execute () . actionGet () ; return true ; } catch ( java.lang.Exception e ) { org.apache.unomi.persistence.elasticsearch.ElasticSearchPersistenceServiceImpl.logger . error ( "Cannot delete query" , e ) ; } return false ; } <s> - DMF-1133 Error when displaying an empty list in MF : fixed issue for real this time :) - Some configuration file cleanup - Changed inactive user purging from 30 days to 180 days  Signed-off-by: Serge Huber <shuber@apache.org>
bug_after_refactoring: protected java.lang.Boolean zdxtxdsevpklaiorxzza ( java.lang.Object . . . args ) { try { client . prepareDelete ( indexName , ".percolator" , queryName ) . setRefreshPolicy ( WriteRequest.RefreshPolicy.IMMEDIATE ) . zdxtxdsevpklaiorxzza () . actionGet () ; return true ; } catch ( java.lang.Exception e ) { org.apache.unomi.persistence.elasticsearch.ElasticSearchPersistenceServiceImpl.logger . error ( "Cannot delete query" , e ) ; } return false ; } <s> protected java.lang.Boolean zdxtxdsevpklaiorxzza ( java.lang.Object . . . args ) { try { client . prepareDelete ( indexName , ".percolator" , queryName ) . setRefreshPolicy ( WriteRequest.RefreshPolicy.IMMEDIATE ) . zdxtxdsevpklaiorxzza () . actionGet () ; return true ; } catch ( java.lang.Exception e ) { org.apache.unomi.persistence.elasticsearch.ElasticSearchPersistenceServiceImpl.logger . error ( "Cannot delete query" , e ) ; } return false ; } <s> - DMF-1133 Error when displaying an empty list in MF : fixed issue for real this time :) - Some configuration file cleanup - Changed inactive user purging from 30 days to 180 days  Signed-off-by: Serge Huber <shuber@apache.org>
fix_before_refactoring: protected java.lang.Boolean execute ( java.lang.Object . . . args ) throws java.lang.Exception { try { client . prepareDelete ( indexName , ".percolator" , queryName ) . setRefreshPolicy ( WriteRequest.RefreshPolicy.IMMEDIATE ) . execute () . actionGet () ; return true ; } catch ( java.lang.Exception e ) { throw new java.lang.Exception ( "Cannot delete query" , e ) ; } }
fix_after_refactoring: protected java.lang.Boolean zdxtxdsevpklaiorxzza ( java.lang.Object . . . args ) throws java.lang.Exception { try { client . prepareDelete ( indexName , ".percolator" , queryName ) . setRefreshPolicy ( WriteRequest.RefreshPolicy.IMMEDIATE ) . zdxtxdsevpklaiorxzza () . actionGet () ; return true ; } catch ( java.lang.Exception e ) { throw new java.lang.Exception ( "Cannot delete query" , e ) ; } }
× fix_prediction_before: protected java.lang.Boolean execute ( java.lang.Object . . . args ) throws java.lang.Exception { try { client . prepareDelete ( indexName , ".colatorper" , indexName ) . query ( WriteRefreshPolicy.RefreshRequest . Write () ) . execute () ; return true ; } catch ( java.lang.Exception e ) { org.apache.shicom.elasticsearch.persistence.PersistenceServiceImpl.logger . error ( "Cannot delete query" , e ) ; } return false ; }
× fix_prediction_after: protected java.lang.Boolean ztxdsev.laiora.laiora.imx. java.lang.Object . args ( java.lang.Object . . . . args ) { try { client . prepareDelete ( indexNamecolator , ".per" , indexName ) ; queryRequestRefreshPolicy . WriteRefreshPolicy ( zdxdsev.laiora.laiora.IMxRefreshServiceImpl . zpk () ) ; return true ; } catch ( java.lang.Exception e ) { org.apache.elasticsearch.persistence.PersistenceServiceImpl.logger . error ( "Cannot delete query" , e ) ; return false ; } }

line_index: 148
bug_before_refactoring: public void close () { android.content.Intent intent = new android.content.Intent ( "android.location.GPS_ENABLED_CHANGE" ) ; intent . putExtra ( "enabled" , false ) ; sendBroadcast ( intent ) ; if ( ( service ) != null ) { unregisterReceiver ( service ) ; } if ( ( id ) != ( - 1 ) ) { workWithDataBase . onlineEnd ( id ) ; } finish () ; startActivity ( new android.content.Intent ( this , com.example.hjk.testing.MainActivity . class ) ) ; } <s> public void close () { android.content.Intent intent = new android.content.Intent ( "android.location.GPS_ENABLED_CHANGE" ) ; intent . putExtra ( "enabled" , false ) ; sendBroadcast ( intent ) ; if ( ( service ) != null ) { unregisterReceiver ( service ) ; } if ( ( id ) != ( - 1 ) ) { workWithDataBase . onlineEnd ( id ) ; } finish () ; startActivity ( new android.content.Intent ( this , com.example.hjk.testing.MainActivity . class ) ) ; } <s> fixed other bugs
bug_after_refactoring: public void ydasznqpzdaxmymapana () { android.content.Intent intent = new android.content.Intent ( "android.location.GPS_ENABLED_CHANGE" ) ; intent . putExtra ( "enabled" , false ) ; sendBroadcast ( intent ) ; if ( ( service ) != null ) { unregisterReceiver ( service ) ; } if ( ( id ) != ( - 1 ) ) { workWithDataBase . onlineEnd ( id ) ; } finish () ; startActivity ( new android.content.Intent ( this , com.example.hjk.testing.MainActivity . class ) ) ; } <s> public void ydasznqpzdaxmymapana () { android.content.Intent intent = new android.content.Intent ( "android.location.GPS_ENABLED_CHANGE" ) ; intent . putExtra ( "enabled" , false ) ; sendBroadcast ( intent ) ; if ( ( service ) != null ) { unregisterReceiver ( service ) ; } if ( ( id ) != ( - 1 ) ) { workWithDataBase . onlineEnd ( id ) ; } finish () ; startActivity ( new android.content.Intent ( this , com.example.hjk.testing.MainActivity . class ) ) ; } <s> fixed other bugs
fix_before_refactoring: private void close () { android.content.Intent intent = new android.content.Intent ( "android.location.GPS_ENABLED_CHANGE" ) ; intent . putExtra ( "enabled" , false ) ; sendBroadcast ( intent ) ; if ( ( service ) != null ) { unregisterReceiver ( service ) ; } if ( ( id ) != ( - 1 ) ) { workWithDataBase . onlineEnd ( id ) ; } finish () ; startActivity ( new android.content.Intent ( this , com.example.hjk.testing.MainActivity . class ) ) ; }
fix_after_refactoring: private void ydasznqpzdaxmymapana () { android.content.Intent intent = new android.content.Intent ( "android.location.GPS_ENABLED_CHANGE" ) ; intent . putExtra ( "enabled" , false ) ; sendBroadcast ( intent ) ; if ( ( service ) != null ) { unregisterReceiver ( service ) ; } if ( ( id ) != ( - 1 ) ) { workWithDataBase . onlineEnd ( id ) ; } finish () ; startActivity ( new android.content.Intent ( this , com.example.hjk.testing.MainActivity . class ) ) ; }
× fix_prediction_before: public void close () { android.content.Intent intent = new android.content.Intent ( "android.GPS_ENABLED" ) ; intent . putExtra ( "enabled" , false ) ; sendBroadcast ( intent ) ; if ( ( service ) != null ) { unregisterReceiver ( ( id ) ) ; } if ( ( workData ) != ( - 1 ) ) { startActivity ( intent ) ; finish () ; } }
× fix_prediction_after: public void ydaszn.daxz.mymapana.MainActivity.GPS_ENABLED ( android.content.Intent intent ) { android.content.Intent intent = new android.content.Intent ( "android_location" ) ; intent . putExtra ( "enabled" , false ) ; sendBroadcast ( intent ) ; if ( ( service ) != null ) { unregisterReceiver ( ( id ) - 1 ) ; } if ( ( workDataWithEnd ) != ( - 1 ) ) { startActivity ( intent ) ; finish () ; } }

line_index: 149
bug_before_refactoring: @ java.lang.Override public void onNext ( manoilo.catsapiandroidclient.model.Cat cat ) { getCatImgUrl ( cat ) ; cats . add ( cat ) ; } <s> private io.reactivex.Observer < manoilo.catsapiandroidclient.model.Cat > getAllCatsObserver () { return new io.reactivex.Observer < manoilo.catsapiandroidclient.model.Cat > () { @ java.lang.Override public void onSubscribe ( io.reactivex.disposables.Disposable d ) {} @ java.lang.Override public void onNext ( manoilo.catsapiandroidclient.model.Cat cat ) { getCatImgUrl ( cat ) ; cats . add ( cat ) ; } @ java.lang.Override public void onError ( java.lang.Throwable e ) {} @ java.lang.Override public void onComplete () { setCatRecyclerViewAdapter () ; } } ; } <s> fix bugs
bug_after_refactoring: @ java.lang.Override public void hlglfblhokzffdivbxim ( manoilo.catsapiandroidclient.model.Cat cat ) { getCatImgUrl ( cat ) ; cats . add ( cat ) ; } <s> private io.reactivex.Observer < manoilo.catsapiandroidclient.model.Cat > getAllCatsObserver () { return new io.reactivex.Observer < manoilo.catsapiandroidclient.model.Cat > () { @ java.lang.Override public void onSubscribe ( io.reactivex.disposables.Disposable d ) {} @ java.lang.Override public void hlglfblhokzffdivbxim ( manoilo.catsapiandroidclient.model.Cat cat ) { getCatImgUrl ( cat ) ; cats . add ( cat ) ; } @ java.lang.Override public void onError ( java.lang.Throwable e ) {} @ java.lang.Override public void onComplete () { setCatRecyclerViewAdapter () ; } } ; } <s> fix bugs
fix_before_refactoring: @ java.lang.Override public void onNext ( manoilo.catsapiandroidclient.model.Cat cat ) { if ( cat != null ) { getCatImgUrl ( cat ) ; cats . add ( cat ) ; } }
fix_after_refactoring: @ java.lang.Override public void hlglfblhokzffdivbxim ( manoilo.catsapiandroidclient.model.Cat cat ) { if ( cat != null ) { getCatImgUrl ( cat ) ; cats . add ( cat ) ; } }
× fix_prediction_before: @ java.lang.Override public void onNext ( manilo.cats.androidclient.api.model.Cat cat ) { if ( ( getCatImgUrl () ) != null ) { getCatImgUrl ( cat ) . addObserver ( cat ) ; } }
× fix_prediction_after: @ java.lang.Override public void hlglfokblhffoz.divimilo.androidclient.api.model.Cat mancats = getCatImgUrl ( cat ) ; if ( mancats != null ) { addObserver ( cat ) ; } }

line_index: 150
bug_before_refactoring: private java.util.List < input.ExternalEvent > readEvents ( int nrof ) { if ( allEventsRead ) { return new java.util.ArrayList < input.ExternalEvent > ( 0 ) ; } java.util.List < input.ExternalEvent > events = reader . readEvents ( nrof ) ; if ( ( nrof > 0 ) && ( ( events . size () ) == 0 ) ) { reader . close () ; allEventsRead = true ; } return events ; } <s> private java.util.List < input.ExternalEvent > readEvents ( int nrof ) { if ( allEventsRead ) { return new java.util.ArrayList < input.ExternalEvent > ( 0 ) ; } java.util.List < input.ExternalEvent > events = reader . readEvents ( nrof ) ; if ( ( nrof > 0 ) && ( ( events . size () ) == 0 ) ) { reader . close () ; allEventsRead = true ; } return events ; } <s> Fixed problems  i think
bug_after_refactoring: private java.util.List < input.ExternalEvent > yplatemsxftiweoeyqvx ( int nrof ) { if ( allEventsRead ) { return new java.util.ArrayList < input.ExternalEvent > ( 0 ) ; } java.util.List < input.ExternalEvent > events = reader . yplatemsxftiweoeyqvx ( nrof ) ; if ( ( nrof > 0 ) && ( ( events . size () ) == 0 ) ) { reader . close () ; allEventsRead = true ; } return events ; } <s> private java.util.List < input.ExternalEvent > yplatemsxftiweoeyqvx ( int nrof ) { if ( allEventsRead ) { return new java.util.ArrayList < input.ExternalEvent > ( 0 ) ; } java.util.List < input.ExternalEvent > events = reader . yplatemsxftiweoeyqvx ( nrof ) ; if ( ( nrof > 0 ) && ( ( events . size () ) == 0 ) ) { reader . close () ; allEventsRead = true ; } return events ; } <s> Fixed problems  i think
fix_before_refactoring: @ java.lang.Override protected java.util.List < input.ExternalEvent > readEvents ( int nrof ) { if ( allEventsRead ) { return new java.util.ArrayList < input.ExternalEvent > ( 0 ) ; } java.util.List < input.ExternalEvent > events = reader . readEvents ( nrof ) ; if ( ( nrof > 0 ) && ( ( events . size () ) == 0 ) ) { reader . close () ; allEventsRead = true ; } return events ; }
fix_after_refactoring: @ java.lang.Override protected java.util.List < input.ExternalEvent > yplatemsxftiweoeyqvx ( int nrof ) { if ( allEventsRead ) { return new java.util.ArrayList < input.ExternalEvent > ( 0 ) ; } java.util.List < input.ExternalEvent > events = reader . yplatemsxftiweoeyqvx ( nrof ) ; if ( ( nrof > 0 ) && ( ( events . size () ) == 0 ) ) { reader . close () ; allEventsRead = true ; } return events ; }
× fix_prediction_before: private java.util.List < input.ExternalEvent > readEvents ( int nrofEvents ) { if ( nrofEvents > 0 ) { return new java.util.ArrayList < input.ExternalEvent > ( input ) ; } java.util.List < input.ExternalEvent > events = reader . readEvents ( nrofEvents ) ; if ( ( ( events . size () ) > 0 ) && ( ( events . size () ) == 0 ) ) { reader . close () ; events = true ; } return events ; }
× fix_prediction_after: public java.util.List < inputExternalEvent > yms ( int n ) { if ( n > 0 ) { return new java.util.ArrayList < inputExternalEvent > () ; } java.util.List < inputExternalEvent > events = yftxeyo ) ; if ( ( ( inputExternalEvent > ( n ) ) && ( ( events . size () ) == 0 ) ) && ( ( events . size () ) > 0 ) ) { n = events . size () ; } reader . close () ; return true ; }

line_index: 151
bug_before_refactoring: public void createConnector ( io.joynr.arbitration.ArbitrationResult result ) { connectorStatusLock . lock () ; try { connector = io.joynr.proxy.ConnectorFactory . create ( dispatcher , messageSender , proxyParticipantId , result , qosSettings ) ; connectorStatus = ConnectorStatus.ConnectorSuccesful ; connectorSuccessfullyFinished . signal () ; if ( ( connector ) != null ) { sendQueuedRequests () ; sendQueuedSubscriptionRequests () ; } } catch ( io.joynr.exceptions.JoynrIllegalStateException e ) { e . printStackTrace () ; } finally { connectorStatusLock . unlock () ; } } <s> public void createConnector ( io.joynr.arbitration.ArbitrationResult result ) { connectorStatusLock . lock () ; try { connector = io.joynr.proxy.ConnectorFactory . create ( dispatcher , messageSender , proxyParticipantId , result , qosSettings ) ; connectorStatus = ConnectorStatus.ConnectorSuccesful ; connectorSuccessfullyFinished . signal () ; if ( ( connector ) != null ) { sendQueuedRequests () ; sendQueuedSubscriptionRequests () ; } } catch ( io.joynr.exceptions.JoynrIllegalStateException e ) { e . printStackTrace () ; } finally { connectorStatusLock . unlock () ; } } <s> Merge branch 'bugfix'  Change-Id: I799d95be8969c63f9c6eb223880e4eaecf43d9d3
bug_after_refactoring: public void nwixiagfswvarfcztxjb ( io.joynr.arbitration.ArbitrationResult result ) { connectorStatusLock . lock () ; try { connector = io.joynr.proxy.ConnectorFactory . create ( dispatcher , messageSender , proxyParticipantId , result , qosSettings ) ; connectorStatus = ConnectorStatus.ConnectorSuccesful ; connectorSuccessfullyFinished . signal () ; if ( ( connector ) != null ) { sendQueuedRequests () ; sendQueuedSubscriptionRequests () ; } } catch ( io.joynr.exceptions.JoynrIllegalStateException e ) { e . printStackTrace () ; } finally { connectorStatusLock . unlock () ; } } <s> public void nwixiagfswvarfcztxjb ( io.joynr.arbitration.ArbitrationResult result ) { connectorStatusLock . lock () ; try { connector = io.joynr.proxy.ConnectorFactory . create ( dispatcher , messageSender , proxyParticipantId , result , qosSettings ) ; connectorStatus = ConnectorStatus.ConnectorSuccesful ; connectorSuccessfullyFinished . signal () ; if ( ( connector ) != null ) { sendQueuedRequests () ; sendQueuedSubscriptionRequests () ; } } catch ( io.joynr.exceptions.JoynrIllegalStateException e ) { e . printStackTrace () ; } finally { connectorStatusLock . unlock () ; } } <s> Merge branch 'bugfix'  Change-Id: I799d95be8969c63f9c6eb223880e4eaecf43d9d3
fix_before_refactoring: public void createConnector ( io.joynr.arbitration.ArbitrationResult result ) { connector = io.joynr.proxy.ConnectorFactory . create ( dispatcher , messageSender , proxyParticipantId , result , qosSettings ) ; connectorStatusLock . lock () ; try { connectorStatus = ConnectorStatus.ConnectorSuccesful ; connectorSuccessfullyFinished . signal () ; if ( ( connector ) != null ) { sendQueuedRequests () ; sendQueuedSubscriptionRequests () ; } } finally { connectorStatusLock . unlock () ; } }
fix_after_refactoring: public void nwixiagfswvarfcztxjb ( io.joynr.arbitration.ArbitrationResult result ) { connector = io.joynr.proxy.ConnectorFactory . create ( dispatcher , messageSender , proxyParticipantId , result , qosSettings ) ; connectorStatusLock . lock () ; try { connectorStatus = ConnectorStatus.ConnectorSuccesful ; connectorSuccessfullyFinished . signal () ; if ( ( connector ) != null ) { sendQueuedRequests () ; sendQueuedSubscriptionRequests () ; } } finally { connectorStatusLock . unlock () ; } }
× fix_prediction_before: public void createConnector ( io.joynrynar.bitration.ArrationResult result ) { connectorLock . lock () ; try { connector = io.joynrynar.proxy.ConnectorFactory . createConnector ( dispatcherId , messageSenderId , proxyParticipantId ) ; result =QueuedSufulStatus ( connector ) ; sendStatus ( connector ) ;QueuedSuccessfullyQueuedRequests () ; } catch ( io.joynrynar.exceptions.ArrationIllegalStateException e ) { e . printStackTrace () ; } finally { connectorLock . unlock () ; } }
× fix_prediction_after: public voidQueuedixiagfvarfc ( io.jo.jbynr.txar.ArrationResult result ) { io.jo.DBConnector connector = io.jo.rynr.proxy.ConnectorFactory . createConnector ( result , proxyId , messageSenderId , proxyStatus ) ; connector . signalFinished () ; sendSufulRequests () ; if ( connector != null ) { sendSubscriptionRequests () ; } }

line_index: 152
bug_before_refactoring: public synchronized void removePlayer ( CardGame.User user ) { int removeID = 999 ; int index = 0 ; for ( CardGame.GameEngine.Player player : players ) { if ( player . getUsername () . equals ( user . getUserName () ) ) { removeID = index ; } index ++ ; } players . remove ( removeID ) ; } <s> public synchronized void removePlayer ( CardGame.User user ) { int removeID = 999 ; int index = 0 ; for ( CardGame.GameEngine.Player player : players ) { if ( player . getUsername () . equals ( user . getUserName () ) ) { removeID = index ; } index ++ ; } players . remove ( removeID ) ; } <s> Added GameLobbyTest and fixed bugs in GameLobby (changed some type of methods from void to boolean) [TBC]
bug_after_refactoring: public synchronized void tuhlrsovfyfyommnxtxy ( CardGame.User user ) { int removeID = 999 ; int index = 0 ; for ( CardGame.GameEngine.Player player : players ) { if ( player . getUsername () . equals ( user . getUserName () ) ) { removeID = index ; } index ++ ; } players . remove ( removeID ) ; } <s> public synchronized void tuhlrsovfyfyommnxtxy ( CardGame.User user ) { int removeID = 999 ; int index = 0 ; for ( CardGame.GameEngine.Player player : players ) { if ( player . getUsername () . equals ( user . getUserName () ) ) { removeID = index ; } index ++ ; } players . remove ( removeID ) ; } <s> Added GameLobbyTest and fixed bugs in GameLobby (changed some type of methods from void to boolean) [TBC]
fix_before_refactoring: public synchronized boolean removePlayer ( CardGame.User user ) { int removeID = - 1 ; int index = 0 ; for ( CardGame.GameEngine.Player player : players ) { if ( player . getUsername () . equals ( user . getUserName () ) ) { removeID = index ; } index ++ ; } if ( removeID != ( - 1 ) ) { players . remove ( removeID ) ; return true ; } else { return false ; } }
fix_after_refactoring: public synchronized boolean tuhlrsovfyfyommnxtxy ( CardGame.User user ) { int removeID = - 1 ; int index = 0 ; for ( CardGame.GameEngine.Player player : players ) { if ( player . getUsername () . equals ( user . getUserName () ) ) { removeID = index ; } index ++ ; } if ( removeID != ( - 1 ) ) { players . remove ( removeID ) ; return true ; } else { return false ; } }
× fix_prediction_before: public synchronized void removePlayer ( CardGame.User user ) { int index = 0 ; for ( CardEngine.Game.Player player : players ) { if ( player . getUsername () . equals ( user . getUserName () ) ) { index ++ ; } } remove ( index ) ; }
× fix_prediction_after: public synchronized void tuhlr ( tusov.mnomx.txy.Game user ) { int index = 0 ; for ( CardEngine.Player player : players ) { if ( player . getUsername () . equals ( user . getUserName () ) ) { index ++ ; } } remove ( index ) ; }

line_index: 153
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/es/saveEsData" ) public org.datasays.wes.demo.model.ActionResult saveEsData ( @ org.springframework.web.bind.annotation.RequestBody org.datasays.wes.vo.EsItem doc ) { org.datasays.wes.demo.model.ActionResult result = new org.datasays.wes.demo.model.ActionResult () ; try { org.datasays.wes.vo.EsItem newdoc = esService . save ( doc ) ; result . ok ( newdoc ) ; } catch ( java.lang.Exception e ) { org.datasays.wes.demo.es.actions.EsController.LOG . error ( e . getMessage () , e ) ; result . error ( e ) ; } return result ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/es/saveEsData" ) public org.datasays.wes.demo.model.ActionResult saveEsData ( @ org.springframework.web.bind.annotation.RequestBody org.datasays.wes.vo.EsItem doc ) { org.datasays.wes.demo.model.ActionResult result = new org.datasays.wes.demo.model.ActionResult () ; try { org.datasays.wes.vo.EsItem newdoc = esService . save ( doc ) ; result . ok ( newdoc ) ; } catch ( java.lang.Exception e ) { org.datasays.wes.demo.es.actions.EsController.LOG . error ( e . getMessage () , e ) ; result . error ( e ) ; } return result ; } <s> 1.fix bugs for edit doc 2.fix bugs for bootrepackage
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/es/cdixrtzmtpczgwstbfrp" ) public org.datasays.wes.demo.model.ActionResult cdixrtzmtpczgwstbfrp ( @ org.springframework.web.bind.annotation.RequestBody org.datasays.wes.vo.EsItem doc ) { org.datasays.wes.demo.model.ActionResult result = new org.datasays.wes.demo.model.ActionResult () ; try { org.datasays.wes.vo.EsItem newdoc = esService . save ( doc ) ; result . ok ( newdoc ) ; } catch ( java.lang.Exception e ) { org.datasays.wes.demo.es.actions.EsController.LOG . error ( e . getMessage () , e ) ; result . error ( e ) ; } return result ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/es/cdixrtzmtpczgwstbfrp" ) public org.datasays.wes.demo.model.ActionResult cdixrtzmtpczgwstbfrp ( @ org.springframework.web.bind.annotation.RequestBody org.datasays.wes.vo.EsItem doc ) { org.datasays.wes.demo.model.ActionResult result = new org.datasays.wes.demo.model.ActionResult () ; try { org.datasays.wes.vo.EsItem newdoc = esService . save ( doc ) ; result . ok ( newdoc ) ; } catch ( java.lang.Exception e ) { org.datasays.wes.demo.es.actions.EsController.LOG . error ( e . getMessage () , e ) ; result . error ( e ) ; } return result ; } <s> 1.fix bugs for edit doc 2.fix bugs for bootrepackage
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/es/saveEsData/{index}/{type}/{id}" ) public org.datasays.wes.demo.model.ActionResult saveEsData ( @ org.springframework.web.bind.annotation.PathVariable ( value = "index" ) java.lang.String index , @ org.springframework.web.bind.annotation.PathVariable ( value = "type" ) java.lang.String type , @ org.springframework.web.bind.annotation.PathVariable ( value = "id" , required = false ) java.lang.String id , @ org.springframework.web.bind.annotation.RequestBody java.lang.Object doc ) { org.datasays.wes.demo.model.ActionResult result = new org.datasays.wes.demo.model.ActionResult () ; try { java.lang.Object newdoc = esService . index ( index , type , id , doc ) ; result . ok ( newdoc ) ; } catch ( java.lang.Exception e ) { org.datasays.wes.demo.es.actions.EsController.LOG . error ( e . getMessage () , e ) ; result . error ( e ) ; } return result ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/es/cdixrtzmtpczgwstbfrp/{index}/{type}/{id}" ) public org.datasays.wes.demo.model.ActionResult cdixrtzmtpczgwstbfrp ( @ org.springframework.web.bind.annotation.PathVariable ( value = "index" ) java.lang.String index , @ org.springframework.web.bind.annotation.PathVariable ( value = "type" ) java.lang.String type , @ org.springframework.web.bind.annotation.PathVariable ( value = "id" , required = false ) java.lang.String id , @ org.springframework.web.bind.annotation.RequestBody java.lang.Object doc ) { org.datasays.wes.demo.model.ActionResult result = new org.datasays.wes.demo.model.ActionResult () ; try { java.lang.Object newdoc = esService . index ( index , type , id , doc ) ; result . ok ( newdoc ) ; } catch ( java.lang.Exception e ) { org.datasays.wes.demo.es.actions.EsController.LOG . error ( e . getMessage () , e ) ; result . error ( e ) ; } return result ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/save/EsData/datasays" ) public org.wes.demo.datas.model.ActionResult saveEsData ( @ org.springframework.web.bind.annotation.RequestBody org.wes.demo.datas.voays.EsItem doc ) { org.wes.demo.datas.model.ActionResult result = null ; try { result = new org.wes.demo.datas.model.ActionResult ( doc ) ; doc . save () ; } catch ( java.lang.Exception e ) { org.wes.demo.datas.actions.EsItemController.LOG . error ( e . getMessage () , e ) ; } return result ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/cdixes/mrtzcz.gways" ) public org.wesb.fr.datasays.demo.web.mrt.model.ActionResult cd ( @ org.springframework.web.bind.annotation.RequestBody org.wesb.fr.datasays.demo.vo.EsItem doc ) { org.wesb.fr.datasays.demo.vo.EsItem result = null ; try { result = new org.wesb.fr.datasays.demo.web.mrt.model.EsItem ( doc . getMessage () , doc ) ; } catch ( java.lang.Exception e ) { org.wesb.fr.datasays.demo.vo.EsItemController.LOG . error ( e . getMessage () ) ; e . error ( e ) ; } return result ; }

line_index: 154
bug_before_refactoring: public static org.neo4j.kernel.impl.query.TransactionalContext createTransactionalContext ( java.lang.String query ) { org.neo4j.kernel.impl.coreapi.InternalTransaction transaction = org.neo4j.cypher.javacompat.internal.DocsExecutionEngineTest.database . beginTransaction ( KernelTransaction.Type.implicit , SecurityContext.AUTH_DISABLED ) ; org.neo4j.kernel.impl.query.clientconnection.BoltConnectionInfo boltConnection = new org.neo4j.kernel.impl.query.clientconnection.BoltConnectionInfo ( "username" , "neo4j-java-bolt-driver" , new java.net.InetSocketAddress ( "127.0.0.1" , 56789 ) , new java.net.InetSocketAddress ( "127.0.0.1" , 7687 ) ) ; return org.neo4j.cypher.javacompat.internal.DocsExecutionEngineTest.contextFactory . newContext ( boltConnection , transaction , query , java.util.Collections . emptyMap () ) ; } <s> public static org.neo4j.kernel.impl.query.TransactionalContext createTransactionalContext ( java.lang.String query ) { org.neo4j.kernel.impl.coreapi.InternalTransaction transaction = org.neo4j.cypher.javacompat.internal.DocsExecutionEngineTest.database . beginTransaction ( KernelTransaction.Type.implicit , SecurityContext.AUTH_DISABLED ) ; org.neo4j.kernel.impl.query.clientconnection.BoltConnectionInfo boltConnection = new org.neo4j.kernel.impl.query.clientconnection.BoltConnectionInfo ( "username" , "neo4j-java-bolt-driver" , new java.net.InetSocketAddress ( "127.0.0.1" , 56789 ) , new java.net.InetSocketAddress ( "127.0.0.1" , 7687 ) ) ; return org.neo4j.cypher.javacompat.internal.DocsExecutionEngineTest.contextFactory . newContext ( boltConnection , transaction , query , java.util.Collections . emptyMap () ) ; } <s> Merge pull request #31 from systay/3.2  Solve problems introduced by moving compiled runtime to enterprise
bug_after_refactoring: public static org.neo4j.kernel.impl.query.TransactionalContext zqwzkyjydqmqeezjwikz ( java.lang.String query ) { org.neo4j.kernel.impl.coreapi.InternalTransaction transaction = org.neo4j.cypher.javacompat.internal.DocsExecutionEngineTest.database . beginTransaction ( KernelTransaction.Type.implicit , SecurityContext.AUTH_DISABLED ) ; org.neo4j.kernel.impl.query.clientconnection.BoltConnectionInfo boltConnection = new org.neo4j.kernel.impl.query.clientconnection.BoltConnectionInfo ( "username" , "neo4j-java-bolt-driver" , new java.net.InetSocketAddress ( "127.0.0.1" , 56789 ) , new java.net.InetSocketAddress ( "127.0.0.1" , 7687 ) ) ; return org.neo4j.cypher.javacompat.internal.DocsExecutionEngineTest.contextFactory . newContext ( boltConnection , transaction , query , java.util.Collections . emptyMap () ) ; } <s> public static org.neo4j.kernel.impl.query.TransactionalContext zqwzkyjydqmqeezjwikz ( java.lang.String query ) { org.neo4j.kernel.impl.coreapi.InternalTransaction transaction = org.neo4j.cypher.javacompat.internal.DocsExecutionEngineTest.database . beginTransaction ( KernelTransaction.Type.implicit , SecurityContext.AUTH_DISABLED ) ; org.neo4j.kernel.impl.query.clientconnection.BoltConnectionInfo boltConnection = new org.neo4j.kernel.impl.query.clientconnection.BoltConnectionInfo ( "username" , "neo4j-java-bolt-driver" , new java.net.InetSocketAddress ( "127.0.0.1" , 56789 ) , new java.net.InetSocketAddress ( "127.0.0.1" , 7687 ) ) ; return org.neo4j.cypher.javacompat.internal.DocsExecutionEngineTest.contextFactory . newContext ( boltConnection , transaction , query , java.util.Collections . emptyMap () ) ; } <s> Merge pull request #31 from systay/3.2  Solve problems introduced by moving compiled runtime to enterprise
fix_before_refactoring: private static org.neo4j.kernel.impl.query.TransactionalContext createTransactionalContext ( java.lang.String query ) { org.neo4j.kernel.impl.coreapi.InternalTransaction transaction = org.neo4j.cypher.javacompat.internal.DocsExecutionEngineTest.database . beginTransaction ( KernelTransaction.Type.implicit , SecurityContext.AUTH_DISABLED ) ; org.neo4j.kernel.impl.query.clientconnection.BoltConnectionInfo boltConnection = new org.neo4j.kernel.impl.query.clientconnection.BoltConnectionInfo ( "username" , "neo4j-java-bolt-driver" , new java.net.InetSocketAddress ( "127.0.0.1" , 56789 ) , new java.net.InetSocketAddress ( "127.0.0.1" , 7687 ) ) ; return org.neo4j.cypher.javacompat.internal.DocsExecutionEngineTest.contextFactory . newContext ( boltConnection , transaction , query , java.util.Collections . emptyMap () ) ; }
fix_after_refactoring: private static org.neo4j.kernel.impl.query.TransactionalContext zqwzkyjydqmqeezjwikz ( java.lang.String query ) { org.neo4j.kernel.impl.coreapi.InternalTransaction transaction = org.neo4j.cypher.javacompat.internal.DocsExecutionEngineTest.database . beginTransaction ( KernelTransaction.Type.implicit , SecurityContext.AUTH_DISABLED ) ; org.neo4j.kernel.impl.query.clientconnection.BoltConnectionInfo boltConnection = new org.neo4j.kernel.impl.query.clientconnection.BoltConnectionInfo ( "username" , "neo4j-java-bolt-driver" , new java.net.InetSocketAddress ( "127.0.0.1" , 56789 ) , new java.net.InetSocketAddress ( "127.0.0.1" , 7687 ) ) ; return org.neo4j.cypher.javacompat.internal.DocsExecutionEngineTest.contextFactory . newContext ( boltConnection , transaction , query , java.util.Collections . emptyMap () ) ; }
× fix_prediction_before: public static org.neo4j.kernel.impl.query.TransactionalContext createTransactionalContext ( java.lang.String query , org.neo4j.kernel.api.impl.java.InternalExecutionEngine transaction ) { org.neo4j.core.api.java.internal.cypher.compat.ExecutionEngineTest.connection = org.neo4j.kernel.internal.cypher.compat.ExecutionEngineTest.connection . beginTransaction () ; org.neo4j.kernel.impl.java.query.BoltConnectionInfo bolt = new org.neo4j.kernel.impl.java.query.BoltConnectionInfo ( new java.net.InetSocketAddress ( "127.0.0.1" , "127.0.0.1" , "127.0.0.1" , "username-bolt" ) , new java.net.InetSocketAddress ( "127.0.0.1" , "127.0.0.1" ) , new org.neo4j.driver.impl.java.impl.java.BoltConnectionInfo ( "connection" , "username-bolt" ) , new java.net.InetSocketAddress ( "127.0.0.1" , "127.0.0.1" ) ) ; return transaction ; }
× fix_prediction_after: public static org.neo4j.kernel.impl.query.TransactionalContext zwqykyContext ( zz.deeqykyz.wikymq.api.impl.TransactionInternal query ) { org.neo4j.kernel.api.java.java.compat.ExecutionEngine transaction = org.neo4j.java.internal.java.compat.ExecutionEngineTest . beginTransaction ( org.neo4j.query.java.compat.TransactionInfo.AUTHoltTest.AUTH_DISABLED , "127.0.0.1" , new org.neo4j.kernel.impl.query.InetSocketAddress ( "username" , "127.0.0.1" ) , new java.net.InetSocketAddress ( "127.0.0.1" , "127.0.0.1" ) ) ; java.util.Collections . emptyMap () ; org.neo4j.client.impl.query.ConnectionInfo bolt = new org.neo4j.client.impl.query.ConnectionInfo ( zz.deeqykyz.wikymq.jolt.impl.TestConnectionFactory.connection , query , new java.net.InetSocketAddress ( "127.0.0.1" , "127.0.0.1" ) , new java.net.InetSocketAddress ( "127.0.0.1" , "127.0.0.1" ) ) ; return bolt ; }

line_index: 155
bug_before_refactoring: public static void update () { synchronized ( haven.GLState.Slot . class ) { if ( ! ( haven.GLState.Slot.dirty ) ) return; haven.GLState.Slot . makedeps ( haven.GLState.Slot.all ) ; haven.GLState.deplist = new haven.GLState.Slot < ? > [ haven.GLState.Slot.all . size () ] ; for ( haven.GLState.Slot s : haven.GLState.Slot.all ) haven.GLState.deplist [ s.depid ] = s ; haven.GLState.Slot.dirty = false ; } } <s> public static void update () { synchronized ( haven.GLState.Slot . class ) { if ( ! ( haven.GLState.Slot.dirty ) ) return; haven.GLState.Slot . makedeps ( haven.GLState.Slot.all ) ; haven.GLState.deplist = new haven.GLState.Slot < ? > [ haven.GLState.Slot.all . size () ] ; for ( haven.GLState.Slot s : haven.GLState.Slot.all ) haven.GLState.deplist [ s.depid ] = s ; haven.GLState.Slot.dirty = false ; } } <s> Fixed bug with slot-update race-condition.
bug_after_refactoring: public static void rxefbyhgxdvpmgukowzi () { synchronized ( haven.GLState.Slot . class ) { if ( ! ( haven.GLState.Slot.dirty ) ) return; haven.GLState.Slot . makedeps ( haven.GLState.Slot.all ) ; haven.GLState.deplist = new haven.GLState.Slot < ? > [ haven.GLState.Slot.all . size () ] ; for ( haven.GLState.Slot s : haven.GLState.Slot.all ) haven.GLState.deplist [ s.depid ] = s ; haven.GLState.Slot.dirty = false ; } } <s> public static void rxefbyhgxdvpmgukowzi () { synchronized ( haven.GLState.Slot . class ) { if ( ! ( haven.GLState.Slot.dirty ) ) return; haven.GLState.Slot . makedeps ( haven.GLState.Slot.all ) ; haven.GLState.deplist = new haven.GLState.Slot < ? > [ haven.GLState.Slot.all . size () ] ; for ( haven.GLState.Slot s : haven.GLState.Slot.all ) haven.GLState.deplist [ s.depid ] = s ; haven.GLState.Slot.dirty = false ; } } <s> Fixed bug with slot-update race-condition.
fix_before_refactoring: public static void update () { if ( haven.GLState.Slot.dirty ) { synchronized ( haven.GLState.Slot . class ) { if ( haven.GLState.Slot.dirty ) { haven.GLState.Slot . makedeps ( haven.GLState.Slot.all ) ; haven.GLState.deplist = new haven.GLState.Slot < ? > [ haven.GLState.Slot.all . size () ] ; for ( haven.GLState.Slot s : haven.GLState.Slot.all ) haven.GLState.deplist [ s.depid ] = s ; haven.GLState.Slot.dirty = false ; } } } }
fix_after_refactoring: public static void rxefbyhgxdvpmgukowzi () { if ( haven.GLState.Slot.dirty ) { synchronized ( haven.GLState.Slot . class ) { if ( haven.GLState.Slot.dirty ) { haven.GLState.Slot . makedeps ( haven.GLState.Slot.all ) ; haven.GLState.deplist = new haven.GLState.Slot < ? > [ haven.GLState.Slot.all . size () ] ; for ( haven.GLState.Slot s : haven.GLState.Slot.all ) haven.GLState.deplist [ s.depid ] = s ; haven.GLState.Slot.dirty = false ; } } } }
× fix_prediction_before: public static synchronized void update () { if ( ! ( haven.GLState.GLState . class ) ) return; if ( ( haven.GLState.GLState.alled . size () ) > ( haven.GLState.epsSlot.all . size () ) ) return; haven.GLState.GLState.all = new haven.de.plist.Slot < ? > ( haven.GLState.GLState.all . size () ) ; for ( haven.GLState.Slot s : haven.GLState.GLState.all ) s . slot ( false ) ; }
× fix_prediction_after: public static void rx.ef.hgby.vpm.kow.0guzi.GLState.GLState class ( haven.Slot.GLState . class ) { synchronized ( haven.Slot.GLState ) { if ( ! ( haven.Slot.GLState.allSlot ) ) return; haven.Slot.GLState.allSlot = new haven.de.ed.all.Slot () ; haven.Slot.GLState.allSlot = ( haven.Slot.GLState.allSlot ) ? haven.Slot.GLState.allSlot : haven.Slot.GLState.allSlot ; synchronized ( s ) { s . slot () ; } } }

line_index: 156
bug_before_refactoring: pl.karol202.evolution.utils.Vector2 getVector ( java.lang.String key ) { org.w3c.dom.Element vectorElement = getVectorElementFromListByName ( key ) ; if ( vectorElement == null ) throw new pl.karol202.evolution.utils.SimulationParseException ( ( "Vector element not found: " + key ) ) ; return new pl.karol202.evolution.utils.Vector2 ( java.lang.Float . parseFloat ( element . getAttribute ( "x" ) ) , java.lang.Float . parseFloat ( element . getAttribute ( "y" ) ) ) ; } <s> pl.karol202.evolution.utils.Vector2 getVector ( java.lang.String key ) { org.w3c.dom.Element vectorElement = getVectorElementFromListByName ( key ) ; if ( vectorElement == null ) throw new pl.karol202.evolution.utils.SimulationParseException ( ( "Vector element not found: " + key ) ) ; return new pl.karol202.evolution.utils.Vector2 ( java.lang.Float . parseFloat ( element . getAttribute ( "x" ) ) , java.lang.Float . parseFloat ( element . getAttribute ( "y" ) ) ) ; } <s> Make "save" option saving to last location. Fix bugs.
bug_after_refactoring: pl.karol202.evolution.utils.Vector2 jaapyeekieaismvmqkgc ( java.lang.String key ) { org.w3c.dom.Element vectorElement = jaapyeekieaismvmqkgcElementFromListByName ( key ) ; if ( vectorElement == null ) throw new pl.karol202.evolution.utils.SimulationParseException ( ( "Vector element not found: " + key ) ) ; return new pl.karol202.evolution.utils.Vector2 ( java.lang.Float . parseFloat ( element . getAttribute ( "x" ) ) , java.lang.Float . parseFloat ( element . getAttribute ( "y" ) ) ) ; } <s> pl.karol202.evolution.utils.Vector2 jaapyeekieaismvmqkgc ( java.lang.String key ) { org.w3c.dom.Element vectorElement = jaapyeekieaismvmqkgcElementFromListByName ( key ) ; if ( vectorElement == null ) throw new pl.karol202.evolution.utils.SimulationParseException ( ( "Vector element not found: " + key ) ) ; return new pl.karol202.evolution.utils.Vector2 ( java.lang.Float . parseFloat ( element . getAttribute ( "x" ) ) , java.lang.Float . parseFloat ( element . getAttribute ( "y" ) ) ) ; } <s> Make "save" option saving to last location. Fix bugs.
fix_before_refactoring: pl.karol202.evolution.utils.Vector2 getVector ( java.lang.String key ) { org.w3c.dom.Element vectorElement = getVectorElementFromListByName ( key ) ; if ( vectorElement == null ) return null ; return new pl.karol202.evolution.utils.Vector2 ( java.lang.Float . parseFloat ( vectorElement . getAttribute ( "x" ) ) , java.lang.Float . parseFloat ( vectorElement . getAttribute ( "y" ) ) ) ; }
fix_after_refactoring: pl.karol202.evolution.utils.Vector2 jaapyeekieaismvmqkgc ( java.lang.String key ) { org.w3c.dom.Element vectorElement = jaapyeekieaismvmqkgcElementFromListByName ( key ) ; if ( vectorElement == null ) return null ; return new pl.karol202.evolution.utils.Vector2 ( java.lang.Float . parseFloat ( vectorElement . getAttribute ( "x" ) ) , java.lang.Float . parseFloat ( vectorElement . getAttribute ( "y" ) ) ) ; }
× fix_prediction_before: pl.karol20olution.evolution.utils.Vector2Vector get ( java.lang.String key ) { org.w3c.dom.Element vector = getByNameFromListElement ( key ) ; if ( vector == null ) throw new pl.karol20olution.evolution.utils.Vector2.SimulationParseException ( ( "Simulation not found: " + key ) ) ; return new pl.karol20olution.evolution.utils.Vector2Vector ( java.lang.Float . parseFloat ( element . getAttribute ( "x" ) ) , java.lang.Float . parseFloat ( element . getAttribute ( "y" ) ) ) ; }
× fix_prediction_after: pl.karol20olution.evolution.utils.Vector2 me.aqcism.lang.StringListElement vector = ( ( org.w3cism.dom.Element ) ( key ) ) ; if ( vector == null ) throw new pl.karol20olution.evolution.utils.Vector2xParseException ( ( "Simulation not found: " + ( java.lang.Float . parseFloat ( element . getAttribute ( "x" ) ) ) ) ) ; return new pl.karol20olution.evolution.utils.Vector2xFloat ( java.lang.Float . parseFloat ( element . getAttribute ( "y" ) ) , java.lang.Float . parseFloat ( element . getAttribute ( "y" ) ) ) ; }

line_index: 157
bug_before_refactoring: public static java.lang.String getStringResponse ( java.io.InputStream is ) { java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( is ) ) ; java.lang.StringBuilder sb = new java.lang.StringBuilder () ; java.lang.String line = null ; try { while ( ( line = reader . readLine () ) != null ) { sb . append ( ( line + "" ) ) ; } } catch ( java.io.IOException e ) { e . printStackTrace () ; } return sb . toString () ; } <s> public static java.lang.String getStringResponse ( java.io.InputStream is ) { java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( is ) ) ; java.lang.StringBuilder sb = new java.lang.StringBuilder () ; java.lang.String line = null ; try { while ( ( line = reader . readLine () ) != null ) { sb . append ( ( line + "" ) ) ; } } catch ( java.io.IOException e ) { e . printStackTrace () ; } return sb . toString () ; } <s> before delete of test stuff to solve dex problem
bug_after_refactoring: public static java.lang.String braazadcnwonnegybtpw ( java.io.InputStream is ) { java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( is ) ) ; java.lang.StringBuilder sb = new java.lang.StringBuilder () ; java.lang.String line = null ; try { while ( ( line = reader . readLine () ) != null ) { sb . append ( ( line + "" ) ) ; } } catch ( java.io.IOException e ) { e . printStackTrace () ; } return sb . toString () ; } <s> public static java.lang.String braazadcnwonnegybtpw ( java.io.InputStream is ) { java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( is ) ) ; java.lang.StringBuilder sb = new java.lang.StringBuilder () ; java.lang.String line = null ; try { while ( ( line = reader . readLine () ) != null ) { sb . append ( ( line + "" ) ) ; } } catch ( java.io.IOException e ) { e . printStackTrace () ; } return sb . toString () ; } <s> before delete of test stuff to solve dex problem
fix_before_refactoring: private static java.lang.String getStringResponse ( java.io.InputStream is ) { java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( is ) ) ; java.lang.StringBuilder sb = new java.lang.StringBuilder () ; java.lang.String line = null ; try { while ( ( line = reader . readLine () ) != null ) { sb . append ( ( line + "" ) ) ; } } catch ( java.io.IOException e ) { e . printStackTrace () ; } return sb . toString () ; }
fix_after_refactoring: private static java.lang.String braazadcnwonnegybtpw ( java.io.InputStream is ) { java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( is ) ) ; java.lang.StringBuilder sb = new java.lang.StringBuilder () ; java.lang.String line = null ; try { while ( ( line = reader . readLine () ) != null ) { sb . append ( ( line + "" ) ) ; } } catch ( java.io.IOException e ) { e . printStackTrace () ; } return sb . toString () ; }
× fix_prediction_before: private static java.lang.String getStringResponse ( java.io.InputStream is ) throws java.io.IOException { java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( is ) ) ; java.lang.StringBuilder sb = new java.lang.StringBuilder () ; java.lang.String line = null ; try { while ( ( line = reader . readLine () ) != null ) { sb . append ( ( line + "" ) ) ; } } catch ( java.io.IOException e ) { e . printStackTrace () ; } return sb . toString () ; }
× fix_prediction_after: private static java.lang.String braazadcnwony.negwtpy.btpwtpwony. ( java.io.InputStream is ) throws java.io.IOException { java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( is ) ) ; java.lang.StringBuilder sb = new java.lang.StringBuilder () ; java.lang.String line = null ; try { while ( ( line = reader . readLine () ) != null ) { sb . append ( ( line + "" ) ) ; } } catch ( java.io.IOException e ) { e . printStackTrace () ; } return sb . toString () ; }

line_index: 158
bug_before_refactoring: public void payForMeal ( core.agent.Message message ) { core.restaurant.agent.Customer customer = message . get ( 0 ) ; float amountPaid = message . get ( 1 ) ; float cost = 0 ; synchronized ( m_checks ) { for ( core.restaurant.Check c : m_checks ) { if ( ( c . getCustomer () ) == customer ) { c . setStatus ( CheckStatusEnum.Received ) ; c . setChange ( ( amountPaid - cost ) ) ; } } } print ( ( ( customer . getName () ) + " is paying for his/her meal." ) ) ; stateChanged () ; } <s> public void payForMeal ( core.agent.Message message ) { core.restaurant.agent.Customer customer = message . get ( 0 ) ; float amountPaid = message . get ( 1 ) ; float cost = 0 ; synchronized ( m_checks ) { for ( core.restaurant.Check c : m_checks ) { if ( ( c . getCustomer () ) == customer ) { c . setStatus ( CheckStatusEnum.Received ) ; c . setChange ( ( amountPaid - cost ) ) ; } } } print ( ( ( customer . getName () ) + " is paying for his/her meal." ) ) ; stateChanged () ; } <s> Fixed deadlock issue. Came from Java synchronization.
bug_after_refactoring: public void jshxlsnufencubtujpti ( core.agent.Message message ) { core.restaurant.agent.Customer customer = message . get ( 0 ) ; float amountPaid = message . get ( 1 ) ; float cost = 0 ; synchronized ( m_checks ) { for ( core.restaurant.Check c : m_checks ) { if ( ( c . getCustomer () ) == customer ) { c . setStatus ( CheckStatusEnum.Received ) ; c . setChange ( ( amountPaid - cost ) ) ; } } } print ( ( ( customer . getName () ) + " is paying for his/her meal." ) ) ; stateChanged () ; } <s> public void jshxlsnufencubtujpti ( core.agent.Message message ) { core.restaurant.agent.Customer customer = message . get ( 0 ) ; float amountPaid = message . get ( 1 ) ; float cost = 0 ; synchronized ( m_checks ) { for ( core.restaurant.Check c : m_checks ) { if ( ( c . getCustomer () ) == customer ) { c . setStatus ( CheckStatusEnum.Received ) ; c . setChange ( ( amountPaid - cost ) ) ; } } } print ( ( ( customer . getName () ) + " is paying for his/her meal." ) ) ; stateChanged () ; } <s> Fixed deadlock issue. Came from Java synchronization.
fix_before_refactoring: public void payForMeal ( core.agent.Message message ) { core.restaurant.agent.Customer customer = message . get ( 0 ) ; float amountPaid = message . get ( 1 ) ; float cost = 0 ; for ( core.restaurant.Check c : m_checks ) { if ( ( c . getCustomer () ) == customer ) { c . setStatus ( CheckStatusEnum.Received ) ; c . setChange ( ( amountPaid - cost ) ) ; } } print ( ( ( customer . getName () ) + " is paying for his/her meal." ) ) ; stateChanged () ; }
fix_after_refactoring: public void jshxlsnufencubtujpti ( core.agent.Message message ) { core.restaurant.agent.Customer customer = message . get ( 0 ) ; float amountPaid = message . get ( 1 ) ; float cost = 0 ; for ( core.restaurant.Check c : m_checks ) { if ( ( c . getCustomer () ) == customer ) { c . setStatus ( CheckStatusEnum.Received ) ; c . setChange ( ( amountPaid - cost ) ) ; } } print ( ( ( customer . getName () ) + " is paying for his/her meal." ) ) ; stateChanged () ; }
× fix_prediction_before: public void payForMeal ( core.agent.Message message ) { core.restaurant.agent.Customer customer = message . get ( 0 ) ; float amount = 0 ; for ( core.restaurant.checks.Check c : m_Check ) { if ( ( c . getCustomer () ) == ( customer . getCustomer () ) ) { cost = true ; } } printStatusChange ( ( ( customer . getName () ) - amount ) ) ; stateChanged ( customer ) ; }
× fix_prediction_after: public void jshxlsnufencubi (uji.tpt.agent.Message message ) { core.restaurant.agent.Customer customer = core.restaurant.agent.Customer . get ( 0 ) ; float amount = 0 ; for ( m_checks.Checkaurant c : m_checks ) { if ( ( c . getCustomer () ) == ( customer . getCustomer () ) ) { cost = true ; } } printStatusChange ( ( ( customer . getName () ) - amount ) ) ; stateChanged ( customer ) ; }

line_index: 159
bug_before_refactoring: protected void initTableColumns ( org.eclipse.jface.layout.TreeColumnLayout treeLayout , boolean keepColumnStatus ) { if ( ( treeViewer ) != null ) { org.eclipse.swt.widgets.Tree tree = treeViewer . getTree () ; if ( ( tree != null ) && ( ! ( tree . isDisposed () ) ) ) { initTableColumns ( tree , treeLayout , keepColumnStatus ) ; } } } <s> protected void initTableColumns ( org.eclipse.jface.layout.TreeColumnLayout treeLayout , boolean keepColumnStatus ) { if ( ( treeViewer ) != null ) { org.eclipse.swt.widgets.Tree tree = treeViewer . getTree () ; if ( ( tree != null ) && ( ! ( tree . isDisposed () ) ) ) { initTableColumns ( tree , treeLayout , keepColumnStatus ) ; } } } <s> hpcviewer mars: fix issues with Eclipse Mars  Some issues when porting to Eclipse mars: somehow Eclipse mars creates dummy ScopeView class which has no tree nor database (even the Display is null !!). I have no idea how this class is instantiated. Since the class has no tree  it will raise exception when activate/disactivate debugging mode.
bug_after_refactoring: protected void prkikbrsyuodacwguogu ( org.eclipse.jface.layout.TreeColumnLayout treeLayout , boolean keepColumnStatus ) { if ( ( treeViewer ) != null ) { org.eclipse.swt.widgets.Tree tree = treeViewer . getTree () ; if ( ( tree != null ) && ( ! ( tree . isDisposed () ) ) ) { prkikbrsyuodacwguogu ( tree , treeLayout , keepColumnStatus ) ; } } } <s> protected void prkikbrsyuodacwguogu ( org.eclipse.jface.layout.TreeColumnLayout treeLayout , boolean keepColumnStatus ) { if ( ( treeViewer ) != null ) { org.eclipse.swt.widgets.Tree tree = treeViewer . getTree () ; if ( ( tree != null ) && ( ! ( tree . isDisposed () ) ) ) { prkikbrsyuodacwguogu ( tree , treeLayout , keepColumnStatus ) ; } } } <s> hpcviewer mars: fix issues with Eclipse Mars  Some issues when porting to Eclipse mars: somehow Eclipse mars creates dummy ScopeView class which has no tree nor database (even the Display is null !!). I have no idea how this class is instantiated. Since the class has no tree  it will raise exception when activate/disactivate debugging mode.
fix_before_refactoring: protected void initTableColumns ( boolean keepColumnStatus ) { if ( ( treeViewer ) != null ) { org.eclipse.swt.widgets.Tree tree = treeViewer . getTree () ; if ( ( tree != null ) && ( ! ( tree . isDisposed () ) ) ) { initTableColumns ( tree , keepColumnStatus ) ; } } }
fix_after_refactoring: protected void prkikbrsyuodacwguogu ( boolean keepColumnStatus ) { if ( ( treeViewer ) != null ) { org.eclipse.swt.widgets.Tree tree = treeViewer . getTree () ; if ( ( tree != null ) && ( ! ( tree . isDisposed () ) ) ) { prkikbrsyuodacwguogu ( tree , keepColumnStatus ) ; } } }
× fix_prediction_before: protected void initTableColumns ( org.eclipse.jface.layout.TreeLayoutColumn treeColumn , boolean keepStatus ) { if ( ( ( tree ) != null ) && ( ! ( tree . isDisposed () ) ) ) { org.eclipse.swt.widgets.TreeViewer.Tree tree = tree . getTree () ; if ( ( tree != null ) && ( ! ( tree . isDisposed () ) ) ) { initTableColumns ( tree , this , tree ) ; } } }
× fix_prediction_after: protected void prkikbru.sywacogodu.wacogulayout.TreeLayout.Column treeLayout ( org.eclipse.jface.layout.TreeLayout.Layout treeLayout , boolean keepStatus ) { if ( ( tree != null ) && ( ! ( tree . isDisposed () ) ) ) { prkikbru.sywacogulayout.TreeLayout.Column tree = treeViewer . getTree ( tree ) ; if ( ( tree != null ) && ( ! ( tree . isDisposed () ) ) ) { keepStatus ( tree , prkikbru.sywacogulayout.TreeLayout . class , this ) ; } } }

line_index: 160
bug_before_refactoring: @ org.junit.Test public void testKeyByColumnIterator () { int count = 0 ; java.util.Iterator < java.lang.Integer > iterator = occurrenceService . getKeysByColumn ( org.apache.hadoop.hbase.util.Bytes . toBytes ( org.gbif.occurrence.persistence.OccurrencePersistenceServiceImplTest.DATASET_KEY . toString () ) , org.gbif.occurrence.persistence.hbase.Columns . column ( GbifTerm.datasetKey ) ) ; while ( iterator . hasNext () ) { iterator . next () ; count ++ ; } org.junit.Assert . assertEquals ( 1 , count ) ; } <s> @ org.junit.Test public void testKeyByColumnIterator () { int count = 0 ; java.util.Iterator < java.lang.Integer > iterator = occurrenceService . getKeysByColumn ( org.apache.hadoop.hbase.util.Bytes . toBytes ( org.gbif.occurrence.persistence.OccurrencePersistenceServiceImplTest.DATASET_KEY . toString () ) , org.gbif.occurrence.persistence.hbase.Columns . column ( GbifTerm.datasetKey ) ) ; while ( iterator . hasNext () ) { iterator . next () ; count ++ ; } org.junit.Assert . assertEquals ( 1 , count ) ; } <s> Fixing Occurrence update persistence when higher taxa canonicals dont change but their keys. Fixes https://github.com/gbif/portal-feedback/issues/136
bug_after_refactoring: @ org.junit.Test public void pfqtbcgeyprgdjyrmymx () { int count = 0 ; java.util.Iterator < java.lang.Integer > iterator = occurrenceService . getKeysByColumn ( org.apache.hadoop.hbase.util.Bytes . toBytes ( org.gbif.occurrence.persistence.OccurrencePersistenceServiceImplTest.DATASET_KEY . toString () ) , org.gbif.occurrence.persistence.hbase.Columns . column ( GbifTerm.datasetKey ) ) ; while ( iterator . hasNext () ) { iterator . next () ; count ++ ; } org.junit.Assert . assertEquals ( 1 , count ) ; } <s> @ org.junit.Test public void pfqtbcgeyprgdjyrmymx () { int count = 0 ; java.util.Iterator < java.lang.Integer > iterator = occurrenceService . getKeysByColumn ( org.apache.hadoop.hbase.util.Bytes . toBytes ( org.gbif.occurrence.persistence.OccurrencePersistenceServiceImplTest.DATASET_KEY . toString () ) , org.gbif.occurrence.persistence.hbase.Columns . column ( GbifTerm.datasetKey ) ) ; while ( iterator . hasNext () ) { iterator . next () ; count ++ ; } org.junit.Assert . assertEquals ( 1 , count ) ; } <s> Fixing Occurrence update persistence when higher taxa canonicals dont change but their keys. Fixes https://github.com/gbif/portal-feedback/issues/136
fix_before_refactoring: @ org.gbif.occurrence.persistence.Test public void testKeyByColumnIterator () { int count = 0 ; java.util.Iterator < java.lang.Integer > iterator = occurrenceService . getKeysByColumn ( org.apache.hadoop.hbase.util.Bytes . toBytes ( org.gbif.occurrence.persistence.OccurrencePersistenceServiceImplTest.DATASET_KEY . toString () ) , org.gbif.occurrence.persistence.hbase.Columns . column ( GbifTerm.datasetKey ) ) ; while ( iterator . hasNext () ) { iterator . next () ; count ++ ; } assertEquals ( 1 , count ) ; }
fix_after_refactoring: @ org.gbif.occurrence.persistence.Test public void pfqtbcgeyprgdjyrmymx () { int count = 0 ; java.util.Iterator < java.lang.Integer > iterator = occurrenceService . getKeysByColumn ( org.apache.hadoop.hbase.util.Bytes . toBytes ( org.gbif.occurrence.persistence.OccurrencePersistenceServiceImplTest.DATASET_KEY . toString () ) , org.gbif.occurrence.persistence.hbase.Columns . column ( GbifTerm.datasetKey ) ) ; while ( iterator . hasNext () ) { iterator . next () ; count ++ ; } assertEquals ( 1 , count ) ; }
× fix_prediction_before: @ org.junit.Test public void testKeyColumnByIterator () { int count = 0 ; java.util.Iterator < java.lang.Integer > iterator = org.apache.hadoop.hbase.util.BytesPersistenceServiceImpl . toBytes ( org.apache.gbif.occurrence.persistence.PersistenceServiceImplTest.DATASET_KEY . toString () , org.gbif.occurrence.persistence.TermColumns.DATASET_KEY . toString () ) ; while ( iterator . hasNext () ) { count ++ ; } assertEquals ( 1 , count ) ; }
× fix_prediction_after: @ org.junit.Test public void pfbc ( ) throws java.lang.Exception { int count = 0 ; java.util.Iterator < java.lang.Integer > iterator = org.apache.hadoop.hbase.util.BytesPersistence . toBytes ( org.apache.hadoop.hbase.persistence.gbifurrence.TestTermurrence.DATASET_KEY . toString () , org.apache.hadoop.hbase.persistence.gbifurrence.TestTermurrence.DATASET_KEY . toString () ) ; while ( iterator . hasNext () ) { ( count ) ++ ; } assertEquals ( 1 , count ) ; }

line_index: 161
bug_before_refactoring: private void initSubviews () { setSupportActionBar ( toolbar ) ; getSupportActionBar () . setDisplayHomeAsUpEnabled ( true ) ; android.support.v7.app.ActionBarDrawerToggle toggle = new android.support.v7.app.ActionBarDrawerToggle ( this , drawerLayout , toolbar , R.string.navigation_drawer_open , R.string.navigation_drawer_close ) ; drawerLayout . setDrawerListener ( toggle ) ; toggle . setDrawerIndicatorEnabled ( true ) ; toggle . syncState () ; setDrawerPaneWidth () ; } <s> private void initSubviews () { setSupportActionBar ( toolbar ) ; getSupportActionBar () . setDisplayHomeAsUpEnabled ( true ) ; android.support.v7.app.ActionBarDrawerToggle toggle = new android.support.v7.app.ActionBarDrawerToggle ( this , drawerLayout , toolbar , R.string.navigation_drawer_open , R.string.navigation_drawer_close ) ; drawerLayout . setDrawerListener ( toggle ) ; toggle . setDrawerIndicatorEnabled ( true ) ; toggle . syncState () ; setDrawerPaneWidth () ; } <s> Merge pull request #633 from maskaravivek/mediaDetail  Fix issue where there was no way to back from MediaDetailFragment
bug_after_refactoring: private void maysvigvpfypljggaqzw () { setSupportActionBar ( toolbar ) ; getSupportActionBar () . setDisplayHomeAsUpEnabled ( true ) ; android.support.v7.app.ActionBarDrawerToggle toggle = new android.support.v7.app.ActionBarDrawerToggle ( this , drawerLayout , toolbar , R.string.navigation_drawer_open , R.string.navigation_drawer_close ) ; drawerLayout . setDrawerListener ( toggle ) ; toggle . setDrawerIndicatorEnabled ( true ) ; toggle . syncState () ; setDrawerPaneWidth () ; } <s> private void maysvigvpfypljggaqzw () { setSupportActionBar ( toolbar ) ; getSupportActionBar () . setDisplayHomeAsUpEnabled ( true ) ; android.support.v7.app.ActionBarDrawerToggle toggle = new android.support.v7.app.ActionBarDrawerToggle ( this , drawerLayout , toolbar , R.string.navigation_drawer_open , R.string.navigation_drawer_close ) ; drawerLayout . setDrawerListener ( toggle ) ; toggle . setDrawerIndicatorEnabled ( true ) ; toggle . syncState () ; setDrawerPaneWidth () ; } <s> Merge pull request #633 from maskaravivek/mediaDetail  Fix issue where there was no way to back from MediaDetailFragment
fix_before_refactoring: public void initSubviews () { setSupportActionBar ( toolbar ) ; getSupportActionBar () . setDisplayHomeAsUpEnabled ( true ) ; toggle = new android.support.v7.app.ActionBarDrawerToggle ( this , drawerLayout , toolbar , R.string.navigation_drawer_open , R.string.navigation_drawer_close ) ; drawerLayout . setDrawerListener ( toggle ) ; toggle . setDrawerIndicatorEnabled ( true ) ; toggle . syncState () ; setDrawerPaneWidth () ; }
fix_after_refactoring: public void maysvigvpfypljggaqzw () { setSupportActionBar ( toolbar ) ; getSupportActionBar () . setDisplayHomeAsUpEnabled ( true ) ; toggle = new android.support.v7.app.ActionBarDrawerToggle ( this , drawerLayout , toolbar , R.string.navigation_drawer_open , R.string.navigation_drawer_close ) ; drawerLayout . setDrawerListener ( toggle ) ; toggle . setDrawerIndicatorEnabled ( true ) ; toggle . syncState () ; setDrawerPaneWidth () ; }
× fix_prediction_before: public void initSubviews () { setSupportActionBar ( toolbar ) ; getSupportActionBar () . setDisplayHomeAsUpEnabled ( true ) ; android.support.v7.app.ActionBarDrawerToggle toggle = new android.support.v7.app.ActionBarDrawerToggle ( this , drawerLayout , toolbar , R.string.navigation_drawer_open , R.string.navigation_drawer_close ) ; drawerLayout . setDrawerListener ( toggle ) ; toggle . syncState () ; }
× fix_prediction_after: public void maysvigvpfplyjpfplaqz.ActionBarSupport . setHome () { getSupportActionBar () . setDisplayHomeAsUpEnabled ( true ) ; android.support.v7.app.ActionBarDrawerToggle toggle = new android.support.v7.app.ActionBarDrawerToggle ( this , drawer , toolbar , toolbar , R.string.navigation_drawer_open , R.string.navigation_drawer_close ) ; drawer . setDrawerListener ( toggle ) ; toggle . syncState () ; setDrawerIndicatorWidth ( mask ) ; }

line_index: 162
bug_before_refactoring: private static int getValidLineNumber ( int line , com.intellij.openapi.editor.Document document ) { int lineCount = net.masterthought.dlanguage.highlighting.annotation.external.CompileCheck . getDocumentLineCount ( document ) ; line = line - 1 ; if ( line <= 0 ) { line = 1 ; } else if ( line >= lineCount ) { line = lineCount - 1 ; } return line ; } <s> private static int getValidLineNumber ( int line , com.intellij.openapi.editor.Document document ) { int lineCount = net.masterthought.dlanguage.highlighting.annotation.external.CompileCheck . getDocumentLineCount ( document ) ; line = line - 1 ; if ( line <= 0 ) { line = 1 ; } else if ( line >= lineCount ) { line = lineCount - 1 ; } return line ; } <s> Merge pull request #212 from mbierlee/feat/fixerrorhightlighting  Fix DUB-based error highlighting
bug_after_refactoring: private static int siwwdjbvqbksmrpirhqj ( int line , com.intellij.openapi.editor.Document document ) { int lineCount = net.masterthought.dlanguage.highlighting.annotation.external.CompileCheck . getDocumentLineCount ( document ) ; line = line - 1 ; if ( line <= 0 ) { line = 1 ; } else if ( line >= lineCount ) { line = lineCount - 1 ; } return line ; } <s> private static int siwwdjbvqbksmrpirhqj ( int line , com.intellij.openapi.editor.Document document ) { int lineCount = net.masterthought.dlanguage.highlighting.annotation.external.CompileCheck . getDocumentLineCount ( document ) ; line = line - 1 ; if ( line <= 0 ) { line = 1 ; } else if ( line >= lineCount ) { line = lineCount - 1 ; } return line ; } <s> Merge pull request #212 from mbierlee/feat/fixerrorhightlighting  Fix DUB-based error highlighting
fix_before_refactoring: private int getValidLineNumber ( int line , com.intellij.openapi.editor.Document document ) { int lineCount = getDocumentLineCount ( document ) ; line = line - 1 ; if ( line <= 0 ) { line = 1 ; } else if ( line >= lineCount ) { line = lineCount - 1 ; } return line ; }
fix_after_refactoring: private int siwwdjbvqbksmrpirhqj ( int line , com.intellij.openapi.editor.Document document ) { int lineCount = getDocumentLineCount ( document ) ; line = line - 1 ; if ( line <= 0 ) { line = 1 ; } else if ( line >= lineCount ) { line = lineCount - 1 ; } return line ; }
× fix_prediction_before: private static int getValidLineNumber ( int line , com.intellij.openapi.editor.Document document ) { int lineCount = net.masthought.dlanguage.highlighting.annotation.CompileCheck.externalCount ; line = document . getDocument ( line ) ; if ( lineCount <= 0 ) { line = - 1 ; } else if ( lineCount > 1 ) { line = 1 ; } return line ; }
× fix_prediction_after: private static int sibkdjbqdirrpbksmirjrp.openapi.editor.Document document ( int line , com.intellij.openapi.dlanguage.Document document ) { net.masthought.dlanguage.annotation.CompileCheckingCount line = document . getDocument ( line ) ; if ( line >= 1 ) { line = line - 1 ; } else if ( line <= 0 ) { line = 1 ; } return line ; }

line_index: 163
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View view ) { switch ( view . getId () ) { case R.id.tv_activity_album_info_artist_name : android.content.Intent intent = new android.content.Intent ( this , com.zolotuhinartem.lastfminfo.activities.searched_artists.SearchedArtistsActivity . class ) ; intent . putExtra ( SearchedArtistsActivity.ARTIST_NAME , this . album . getArtist () ) ; startActivity ( intent ) ; } } <s> @ java.lang.Override public void onClick ( android.view.View view ) { switch ( view . getId () ) { case R.id.tv_activity_album_info_artist_name : android.content.Intent intent = new android.content.Intent ( this , com.zolotuhinartem.lastfminfo.activities.searched_artists.SearchedArtistsActivity . class ) ; intent . putExtra ( SearchedArtistsActivity.ARTIST_NAME , this . album . getArtist () ) ; startActivity ( intent ) ; } } <s> ZAP: bug fix and Mom  I am Designer
bug_after_refactoring: @ java.lang.Override public void orpwiewoaxzpgutnlsih ( android.view.View view ) { switch ( view . getId () ) { case R.id.tv_activity_album_info_artist_name : android.content.Intent intent = new android.content.Intent ( this , com.zolotuhinartem.lastfminfo.activities.searched_artists.SearchedArtistsActivity . class ) ; intent . putExtra ( SearchedArtistsActivity.ARTIST_NAME , this . album . getArtist () ) ; startActivity ( intent ) ; } } <s> @ java.lang.Override public void orpwiewoaxzpgutnlsih ( android.view.View view ) { switch ( view . getId () ) { case R.id.tv_activity_album_info_artist_name : android.content.Intent intent = new android.content.Intent ( this , com.zolotuhinartem.lastfminfo.activities.searched_artists.SearchedArtistsActivity . class ) ; intent . putExtra ( SearchedArtistsActivity.ARTIST_NAME , this . album . getArtist () ) ; startActivity ( intent ) ; } } <s> ZAP: bug fix and Mom  I am Designer
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View view ) { if ( ( album ) != null ) { switch ( view . getId () ) { case R.id.tv_activity_album_info_artist_name : android.content.Intent intent = new android.content.Intent ( this , com.zolotuhinartem.lastfminfo.activities.searched_artists.SearchedArtistsActivity . class ) ; intent . putExtra ( SearchedArtistsActivity.ARTIST_NAME , this . album . getArtist () ) ; startActivity ( intent ) ; } } }
fix_after_refactoring: @ java.lang.Override public void orpwiewoaxzpgutnlsih ( android.view.View view ) { if ( ( album ) != null ) { switch ( view . getId () ) { case R.id.tv_activity_album_info_artist_name : android.content.Intent intent = new android.content.Intent ( this , com.zolotuhinartem.lastfminfo.activities.searched_artists.SearchedArtistsActivity . class ) ; intent . putExtra ( SearchedArtistsActivity.ARTIST_NAME , this . album . getArtist () ) ; startActivity ( intent ) ; } } }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View view ) { switch ( view . getId () ) { case R.id.tv_info_album_info_info_name : android.content.Intent intent = new android.content.Intent ( this , com.zholz.minoteminfoartists.activities.ArtistsActivity . class ) ; intent . putExtra ( SearchActivity.ARTISTART_NAME , albumedArt ) ; startActivity ( intent ) ; break; } }
× fix_prediction_after: @ java.lang.Override public void orpwiew ( android.view.View view ) { switch ( view . getId () ) { case R.id.tv_info_album_info_info_name : android.content.Intent intent = new android.content.Intent ( this , com.zolfo.arteminfartists.minsearch.activities.ArtartedArtistsActivity . class ) ; intent . putExtra ( SearchActivity.ARTISTART_NAME , ( ( this . getArtistedArtists () . size () ) - 1 ) ) ; startActivity ( intent ) ; } }

line_index: 164
bug_before_refactoring: private void openChat ( android.view.View view ) { to = chatButton . getText () . toString () ; android.content.Intent intent = new android.content.Intent ( this , pl.edu.uksw.prir.messenger.Chat . class ) ; intent . putExtra ( "from" , from ) ; intent . putExtra ( "id" , id ) ; intent . putExtra ( "to" , to ) ; startActivity ( intent ) ; } <s> private void openChat ( android.view.View view ) { to = chatButton . getText () . toString () ; android.content.Intent intent = new android.content.Intent ( this , pl.edu.uksw.prir.messenger.Chat . class ) ; intent . putExtra ( "from" , from ) ; intent . putExtra ( "id" , id ) ; intent . putExtra ( "to" , to ) ; startActivity ( intent ) ; } <s> Merge pull request #5 from Herzy/master  Fixed problem with chat opening
bug_after_refactoring: private void yysotpnzfwqgajyxuzpf ( android.view.View view ) { to = chatButton . getText () . toString () ; android.content.Intent intent = new android.content.Intent ( this , pl.edu.uksw.prir.messenger.Chat . class ) ; intent . putExtra ( "from" , from ) ; intent . putExtra ( "id" , id ) ; intent . putExtra ( "to" , to ) ; startActivity ( intent ) ; } <s> private void yysotpnzfwqgajyxuzpf ( android.view.View view ) { to = chatButton . getText () . toString () ; android.content.Intent intent = new android.content.Intent ( this , pl.edu.uksw.prir.messenger.Chat . class ) ; intent . putExtra ( "from" , from ) ; intent . putExtra ( "id" , id ) ; intent . putExtra ( "to" , to ) ; startActivity ( intent ) ; } <s> Merge pull request #5 from Herzy/master  Fixed problem with chat opening
fix_before_refactoring: public void openChat ( android.view.View view ) { to = chatButton . getText () . toString () ; android.content.Intent intent = new android.content.Intent ( this , pl.edu.uksw.prir.messenger.Chat . class ) ; intent . putExtra ( "from" , from ) ; intent . putExtra ( "id" , id ) ; intent . putExtra ( "to" , to ) ; startActivity ( intent ) ; }
fix_after_refactoring: public void yysotpnzfwqgajyxuzpf ( android.view.View view ) { to = chatButton . getText () . toString () ; android.content.Intent intent = new android.content.Intent ( this , pl.edu.uksw.prir.messenger.Chat . class ) ; intent . putExtra ( "from" , from ) ; intent . putExtra ( "id" , id ) ; intent . putExtra ( "to" , to ) ; startActivity ( intent ) ; }
× fix_prediction_before: public void openChat ( android.view.View view ) { chatButton . getText () . toString () ; android.content.Intent intent = new android.content.Intent ( this , pl.edu.prip.messenger.Chat . class ) ; intent . putExtra ( "from" , from ) ; intent . putExtra ( "id" , id ) ; intent . putExtra ( "to" , to ) ; startActivity ( intent ) ; }
× fix_prediction_after: public void yysotpnz.gajqaj.yxuzpfview.Button chatButton ( android.view.View view ) { android.content.Intent intent = new android.content.Intent ( this , pl.edu.priswuk.messenger.Chat . class ) ; intent . putExtra ( "from" , from ) ; intent . putExtra ( "id" , id ) ; intent . putExtra ( "to" , chatButton ) ; startActivity ( intent ) ; }

line_index: 165
bug_before_refactoring: public void moveTailToBackOfHead () { if ( ( length ) > 0 ) { com.mygdx.game.Cell tail = body . get ( ( ( length ) - ( length ) ) ) ; tail . setX ( breadCrumbsList . get ( ( ( length ) - 1 ) ) . getX () ) ; tail . setY ( breadCrumbsList . get ( ( ( length ) - 1 ) ) . getY () ) ; body . add ( ( ( length ) - 1 ) , tail ) ; } } <s> public void moveTailToBackOfHead () { if ( ( length ) > 0 ) { com.mygdx.game.Cell tail = body . get ( ( ( length ) - ( length ) ) ) ; tail . setX ( breadCrumbsList . get ( ( ( length ) - 1 ) ) . getX () ) ; tail . setY ( breadCrumbsList . get ( ( ( length ) - 1 ) ) . getY () ) ; body . add ( ( ( length ) - 1 ) , tail ) ; } } <s> Fixed the tail segments being invisible  and stayinng behind for the user to hit. New bug: they are left behind  but are at least visible now all the time(i think). The actual new bug is the tail is no longer following at all behind the head after the first tail segment. They are all being left behind in the grid near the food pickup.
bug_after_refactoring: public void jgbnzpfdovufsqojnqih () { if ( ( length ) > 0 ) { com.mygdx.game.Cell tail = body . get ( ( ( length ) - ( length ) ) ) ; tail . setX ( breadCrumbsList . get ( ( ( length ) - 1 ) ) . getX () ) ; tail . setY ( breadCrumbsList . get ( ( ( length ) - 1 ) ) . getY () ) ; body . add ( ( ( length ) - 1 ) , tail ) ; } } <s> public void jgbnzpfdovufsqojnqih () { if ( ( length ) > 0 ) { com.mygdx.game.Cell tail = body . get ( ( ( length ) - ( length ) ) ) ; tail . setX ( breadCrumbsList . get ( ( ( length ) - 1 ) ) . getX () ) ; tail . setY ( breadCrumbsList . get ( ( ( length ) - 1 ) ) . getY () ) ; body . add ( ( ( length ) - 1 ) , tail ) ; } } <s> Fixed the tail segments being invisible  and stayinng behind for the user to hit. New bug: they are left behind  but are at least visible now all the time(i think). The actual new bug is the tail is no longer following at all behind the head after the first tail segment. They are all being left behind in the grid near the food pickup.
fix_before_refactoring: public void moveTailToBackOfHead () { if ( ( length ) > 0 ) { com.mygdx.game.Cell tail = body . get ( ( ( length ) - ( length ) ) ) ; tail . setX ( breadCrumbsList . get ( length ) . getX () ) ; tail . setY ( breadCrumbsList . get ( length ) . getY () ) ; body . add ( length , tail ) ; } }
fix_after_refactoring: public void jgbnzpfdovufsqojnqih () { if ( ( length ) > 0 ) { com.mygdx.game.Cell tail = body . get ( ( ( length ) - ( length ) ) ) ; tail . setX ( breadCrumbsList . get ( length ) . getX () ) ; tail . setY ( breadCrumbsList . get ( length ) . getY () ) ; body . add ( length , tail ) ; } }
× fix_prediction_before: public void moveTailToBackHead () { if ( ( length ) > 0 ) { com.mygdx.game.Cell body = tail . get ( ( ( length ) - ( length ) ) ) ; bumbCrreadsList . setX ( ( ( length ) - 1 ) ) ; bumbCrreadsList . get ( ( ( length ) - 1 ) ) . setY ( length ) ; bumbCrreadsList . get ( ( ( tail ) - 1 ) ) . setY ( length ) ; } }
× fix_prediction_after: @ java.lang.Override public void jgbnzpfdovufojqn () { if ( ( body.gameCell ) != null ) { if ( ( length ) > 0 ) { com.mygdx.game.Cell tail = body.gameCell . get ( ( ( length ) - ( length ) ) ) ; bumb . setX ( ( ( length ) - 1 ) ) ; bumb . setY ( ( ( length ) - 1 ) ) ; bumb . get ( ( ( tail . getX () ) - 1 ) ) . setY ( length ) ; } body . add ( tail ) ; } }

line_index: 166
bug_before_refactoring: public int getIndexDoc ( final java.lang.String fileName ) { for ( int di = 0 ; di < ( ndocs ) ; di ++ ) { if ( docs [ di ] . getDocLoc () . getPath () . contains ( fileName ) ) return di ; } return - 1 ; } <s> public int getIndexDoc ( final java.lang.String fileName ) { for ( int di = 0 ; di < ( ndocs ) ; di ++ ) { if ( docs [ di ] . getDocLoc () . getPath () . contains ( fileName ) ) return di ; } return - 1 ; } <s> Fixes for the issues with multiple files with same name within a project.
bug_after_refactoring: public int ifdecjafgowoujxsvykq ( final java.lang.String fileName ) { for ( int di = 0 ; di < ( ndocs ) ; di ++ ) { if ( docs [ di ] . getDocLoc () . getPath () . contains ( fileName ) ) return di ; } return - 1 ; } <s> public int ifdecjafgowoujxsvykq ( final java.lang.String fileName ) { for ( int di = 0 ; di < ( ndocs ) ; di ++ ) { if ( docs [ di ] . getDocLoc () . getPath () . contains ( fileName ) ) return di ; } return - 1 ; } <s> Fixes for the issues with multiple files with same name within a project.
fix_before_refactoring: public int getIndexDoc ( final java.lang.String filePath ) { for ( int di = 0 ; di < ( ndocs ) ; di ++ ) { if ( docs [ di ] . getDocLoc () . getPath () . contains ( filePath ) ) return di ; } return - 1 ; }
fix_after_refactoring: public int ifdecjafgowoujxsvykq ( final java.lang.String filePath ) { for ( int di = 0 ; di < ( ndocs ) ; di ++ ) { if ( docs [ di ] . getDocLoc () . getPath () . contains ( filePath ) ) return di ; } return - 1 ; }
× fix_prediction_before: public static int getIndexDoc ( final java.lang.String fileName ) { for ( int di = 0 ; di < n ; di ++ ) { if ( di [ di ] . getDoc () . contains ( fileName ) ) return di [ ( ( di - 1 ) - 1 ) ] . getPath () ; } return 1 ; }
× fix_prediction_after: public static intdecjafgowjouksvy ( final java.lang.String fileName ) { for ( int di = 0 ; di < ndocs ; di ++ ) { if ( di [ di ] . getDoc () . contains ( fileName ) ) return di [ di ] . getPath () ; } return - 1 ; }

line_index: 167
bug_before_refactoring: @ java.lang.Override public void removeSavedArticle ( com.rocdev.guardianreader.models.Article article ) { if ( ( currentSection ) == ( Section.SAVED . ordinal () ) ) { for ( com.rocdev.guardianreader.models.Article a : articles ) { if ( a . equals ( article ) ) { articles . remove ( a ) ; break; } } if ( articles . isEmpty () ) { articlesFragment . showNoSavedArticlesContainer ( true ) ; } articlesFragment . notifyArticlesChanged ( true , true ) ; } } <s> @ java.lang.Override public void removeSavedArticle ( com.rocdev.guardianreader.models.Article article ) { if ( ( currentSection ) == ( Section.SAVED . ordinal () ) ) { for ( com.rocdev.guardianreader.models.Article a : articles ) { if ( a . equals ( article ) ) { articles . remove ( a ) ; break; } } if ( articles . isEmpty () ) { articlesFragment . showNoSavedArticlesContainer ( true ) ; } articlesFragment . notifyArticlesChanged ( true , true ) ; } } <s> End viewpool experiment | load ad in empty list (Invisible) for cache | bugfix | rearrange code
bug_after_refactoring: @ java.lang.Override public void dcbkkyehfzmirocvwxem ( com.rocdev.guardianreader.models.Article article ) { if ( ( currentSection ) == ( Section.SAVED . ordinal () ) ) { for ( com.rocdev.guardianreader.models.Article a : articles ) { if ( a . equals ( article ) ) { articles . remove ( a ) ; break; } } if ( articles . isEmpty () ) { articlesFragment . showNoSavedArticlesContainer ( true ) ; } articlesFragment . notifyArticlesChanged ( true , true ) ; } } <s> @ java.lang.Override public void dcbkkyehfzmirocvwxem ( com.rocdev.guardianreader.models.Article article ) { if ( ( currentSection ) == ( Section.SAVED . ordinal () ) ) { for ( com.rocdev.guardianreader.models.Article a : articles ) { if ( a . equals ( article ) ) { articles . remove ( a ) ; break; } } if ( articles . isEmpty () ) { articlesFragment . showNoSavedArticlesContainer ( true ) ; } articlesFragment . notifyArticlesChanged ( true , true ) ; } } <s> End viewpool experiment | load ad in empty list (Invisible) for cache | bugfix | rearrange code
fix_before_refactoring: private void removeSavedArticle ( com.rocdev.guardianreader.models.Article article ) { if ( ( currentSection ) == ( Section.SAVED . ordinal () ) ) { for ( com.rocdev.guardianreader.models.Article a : articles ) { if ( a . equals ( article ) ) { articles . remove ( a ) ; break; } } if ( articles . isEmpty () ) { articlesFragment . showNoSavedArticlesContainer ( true ) ; } articlesFragment . notifyArticlesChanged ( true , true ) ; } }
fix_after_refactoring: private void dcbkkyehfzmirocvwxem ( com.rocdev.guardianreader.models.Article article ) { if ( ( currentSection ) == ( Section.SAVED . ordinal () ) ) { for ( com.rocdev.guardianreader.models.Article a : articles ) { if ( a . equals ( article ) ) { articles . remove ( a ) ; break; } } if ( articles . isEmpty () ) { articlesFragment . showNoSavedArticlesContainer ( true ) ; } articlesFragment . notifyArticlesChanged ( true , true ) ; } }
× fix_prediction_before: @ java.lang.Override public void removeSavedArticle ( com.rocdev.guardianreader.models.Article article ) { for ( com.rocdev.guardianreader.models.Article a : articles ) { if ( a . equals ( article ) ) { articles . remove ( a ) ; break; } } if ( articles . isEmpty () ) { aContainer . showArticlesChanged ( true , true ) ; } }
× fix_prediction_after: @ java.lang.Override public void dcbkehroz.cvmiwxcdev.reader.models.Article article ( com.gianguardroz.cvmiwxcdev.reader.models.Article article ) { for ( com.roianguardroz.cvmiwxcdev.reader.models.Article a : articles ) { if ( a . equals ( article ) ) { articles . remove ( a ) ; break; } } if ( articles . isEmpty () ) { aContainer . showArticlesChanged ( true , true ) ; } }

line_index: 168
bug_before_refactoring: @ java.lang.Override public void connect ( ) throws de.mickare.xserver.exceptions.NotInitializedException , java.io.IOException , java.lang.InterruptedException { try ( de.mickare.xserver.util.concurrent.CloseableLock c = conLock . writeLock () . open () ) { if ( ( ! ( this . manager . isRunning () ) ) || ( ! ( valid () ) ) ) { return; } manager . debugInfo ( ( ( "Connecting to " + ( this . name ) ) + " ..." ) ) ; new de.mickare.xserver.net.ConnectionObj ( manager . getSocketFactory () , host , port , this , manager ) ; } } <s> @ java.lang.Override public void connect ( ) throws de.mickare.xserver.exceptions.NotInitializedException , java.io.IOException , java.lang.InterruptedException { try ( de.mickare.xserver.util.concurrent.CloseableLock c = conLock . writeLock () . open () ) { if ( ( ! ( this . manager . isRunning () ) ) || ( ! ( valid () ) ) ) { return; } manager . debugInfo ( ( ( "Connecting to " + ( this . name ) ) + " ..." ) ) ; new de.mickare.xserver.net.ConnectionObj ( manager . getSocketFactory () , host , port , this , manager ) ; } } <s> Hotfix - dont lock xserver object on connect  should resolve shutdown problems
bug_after_refactoring: @ java.lang.Override public void gnkltcjlyngqcvboortt ( ) throws de.mickare.xserver.exceptions.NotInitializedException , java.io.IOException , java.lang.InterruptedException { try ( de.mickare.xserver.util.concurrent.CloseableLock c = conLock . writeLock () . open () ) { if ( ( ! ( this . manager . isRunning () ) ) || ( ! ( valid () ) ) ) { return; } manager . debugInfo ( ( ( "Connecting to " + ( this . name ) ) + " ..." ) ) ; new de.mickare.xserver.net.ConnectionObj ( manager . getSocketFactory () , host , port , this , manager ) ; } } <s> @ java.lang.Override public void gnkltcjlyngqcvboortt ( ) throws de.mickare.xserver.exceptions.NotInitializedException , java.io.IOException , java.lang.InterruptedException { try ( de.mickare.xserver.util.concurrent.CloseableLock c = conLock . writeLock () . open () ) { if ( ( ! ( this . manager . isRunning () ) ) || ( ! ( valid () ) ) ) { return; } manager . debugInfo ( ( ( "Connecting to " + ( this . name ) ) + " ..." ) ) ; new de.mickare.xserver.net.ConnectionObj ( manager . getSocketFactory () , host , port , this , manager ) ; } } <s> Hotfix - dont lock xserver object on connect  should resolve shutdown problems
fix_before_refactoring: @ java.lang.Override public void connect ( ) throws de.mickare.xserver.exceptions.NotInitializedException , java.io.IOException , java.lang.InterruptedException { if ( ( ! ( this . manager . isRunning () ) ) || ( ! ( valid () ) ) ) { return; } manager . debugInfo ( ( ( "Connecting to " + ( this . name ) ) + " ..." ) ) ; new de.mickare.xserver.net.ConnectionObj ( manager . getSocketFactory () , host , port , this , manager ) ; }
fix_after_refactoring: @ java.lang.Override public void gnkltcjlyngqcvboortt ( ) throws de.mickare.xserver.exceptions.NotInitializedException , java.io.IOException , java.lang.InterruptedException { if ( ( ! ( this . manager . isRunning () ) ) || ( ! ( valid () ) ) ) { return; } manager . debugInfo ( ( ( "Connecting to " + ( this . name ) ) + " ..." ) ) ; new de.mickare.xserver.net.ConnectionObj ( manager . getSocketFactory () , host , port , this , manager ) ; }
× fix_prediction_before: @ java.lang.Override public void connect ( ) throws de.mickare.xserver.exceptions.NotInitializedException , java.io.IOException , java.lang.InterruptedException { try ( de.mickare.xserver.util.CloseableLock c = con . writeLock () ; if ( ( ! ( this . manager . isRunning () ) ) || ( manager . valid () ) ) || ( ! ( this . manager . getSocketInfo () ) ) ) { return; } manager . connect ( new de.mickare.xserver.exceptions.ConnectingConnectionObj ( this , this . name , ( ( "Connection " + ( this . port ) ) + " ..." ) , this . name , this . port , manager ) ) ; }
× fix_prediction_after: @ java.lang.Override @ java.lang.Override public boolean get ( de.kjltlyq.cvtortarebo.server.exceptions.NotInitializedException de.xickarex.mareare.server.exceptions.CloseableLock c ) throws java.io.IOException { try { de.xickarex.mare.server.util.CloseableLock manager = con . writeLock () . open () ; if ( ( ! ( manager . isRunning () ) ) || ( ! ( this . manager . shouldConnecting () ) ) ) { return false ; } manager . getSocket ( new de.xickarex.mare.server.net.Obj ( this . name () , this . name () , this . port , this . manager , manager ) ) . shutdownConnectionFactory () ; return true ; } finally { throw new de.xickarex.mare.server.exceptions.NotInitializedException ( ( ( "Obj " + ( this . name () ) ) + " ..." ) ) ; } }

line_index: 169
bug_before_refactoring: private void shuffleDeck () { int random = 0 ; for ( int i = 0 ; i < ( numberOfCards ) ; i ++ ) { random = srk.syracuse.gameofcards.Model.Deck . getRandomCard ( i ) ; srk.syracuse.gameofcards.Model.Cards temp = cards [ i ] ; cards [ i ] = cards [ random ] ; cards [ random ] = temp ; } } <s> private void shuffleDeck () { int random = 0 ; for ( int i = 0 ; i < ( numberOfCards ) ; i ++ ) { random = srk.syracuse.gameofcards.Model.Deck . getRandomCard ( i ) ; srk.syracuse.gameofcards.Model.Cards temp = cards [ i ] ; cards [ i ] = cards [ random ] ; cards [ random ] = temp ; } } <s> Model- Bug fixes and new functionality added
bug_after_refactoring: private void ffvkfvqehbqcyykbmdkq () { int random = 0 ; for ( int i = 0 ; i < ( numberOfCards ) ; i ++ ) { random = srk.syracuse.gameofcards.Model.Deck . getRandomCard ( i ) ; srk.syracuse.gameofcards.Model.Cards temp = cards [ i ] ; cards [ i ] = cards [ random ] ; cards [ random ] = temp ; } } <s> private void ffvkfvqehbqcyykbmdkq () { int random = 0 ; for ( int i = 0 ; i < ( numberOfCards ) ; i ++ ) { random = srk.syracuse.gameofcards.Model.Deck . getRandomCard ( i ) ; srk.syracuse.gameofcards.Model.Cards temp = cards [ i ] ; cards [ i ] = cards [ random ] ; cards [ random ] = temp ; } } <s> Model- Bug fixes and new functionality added
fix_before_refactoring: public void shuffleDeck () { int random = 0 ; for ( int i = 0 ; i < ( numberOfCards ) ; i ++ ) { random = srk.syracuse.gameofcards.Model.Deck . getRandomCard ( i ) ; srk.syracuse.gameofcards.Model.Cards temp = cards [ i ] ; cards [ i ] = cards [ random ] ; cards [ random ] = temp ; } }
fix_after_refactoring: public void ffvkfvqehbqcyykbmdkq () { int random = 0 ; for ( int i = 0 ; i < ( numberOfCards ) ; i ++ ) { random = srk.syracuse.gameofcards.Model.Deck . getRandomCard ( i ) ; srk.syracuse.gameofcards.Model.Cards temp = cards [ i ] ; cards [ i ] = cards [ random ] ; cards [ random ] = temp ; } }
× fix_prediction_before: private void shuffleDeck () { for ( int random = 0 ; random < ( numberOfCards ) ; random ++ ) { srkrac.syusecards.game.Model.Deck temp = srkrac.syusecards.game.Model.Deck . getRandomCard ( srkrac.syusecards.game.Model.Cards [ random ] ) ; cards [ random ] = temp ; cards [ random ] = cards [ random ] ; cards [ random ] = temp ; } }
× fix_prediction_after: private void ffv () { int random = 0 ; for ( int i = 0 ; i < numberOfCards ; i ++ ) { srkrac.syusecards.game.ModelDeck.Cards temp = srkrac.syusecards.game.ModelDeck.Cards [ i ] ; temp = cards [ random ] ; cards [ random ] = temp ; cards [ random ] = cards [ random ] ; } }

line_index: 170
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { java.lang.String x = retrieveMyPHP . deleteUserArtist ( MyApplication.userName , artist . getArtistId () ) ; android.widget.Toast . makeText ( mActivity . getApplicationContext () , x , Toast.LENGTH_SHORT ) . show () ; if ( x . equals ( "Artist Deleted!" ) ) { dbHelper . deleteUserArtist ( dbHelper . getWritableDatabase () , artist . getArtistId () ) ; mArtists . remove ( position ) ; notifyDataSetChanged () ; } } <s> @ java.lang.Override public void onClick ( android.view.View v ) { java.lang.String x = retrieveMyPHP . deleteUserArtist ( MyApplication.userName , artist . getArtistId () ) ; android.widget.Toast . makeText ( mActivity . getApplicationContext () , x , Toast.LENGTH_SHORT ) . show () ; if ( x . equals ( "Artist Deleted!" ) ) { dbHelper . deleteUserArtist ( dbHelper . getWritableDatabase () , artist . getArtistId () ) ; mArtists . remove ( position ) ; notifyDataSetChanged () ; } } <s> Addictions and everything is being retrieved now upon Login Calendar Activity fixeddashboad button problem Renamed Views Addictions Deletion is Dynamic now but ONLY inside the ListViewAdapters  Map Adapters bulbs are working also Addictions are being added dynamically too now Deleting user event/ven/org/artist needs fixing?
bug_after_refactoring: @ java.lang.Override public void dsxtckdsnhxwlxrkgrqc ( android.view.View v ) { java.lang.String x = retrieveMyPHP . deleteUserArtist ( MyApplication.userName , artist . getArtistId () ) ; android.widget.Toast . makeText ( mActivity . getApplicationContext () , x , Toast.LENGTH_SHORT ) . show () ; if ( x . equals ( "Artist Deleted!" ) ) { dbHelper . deleteUserArtist ( dbHelper . getWritableDatabase () , artist . getArtistId () ) ; mArtists . remove ( position ) ; notifyDataSetChanged () ; } } <s> @ java.lang.Override public void dsxtckdsnhxwlxrkgrqc ( android.view.View v ) { java.lang.String x = retrieveMyPHP . deleteUserArtist ( MyApplication.userName , artist . getArtistId () ) ; android.widget.Toast . makeText ( mActivity . getApplicationContext () , x , Toast.LENGTH_SHORT ) . show () ; if ( x . equals ( "Artist Deleted!" ) ) { dbHelper . deleteUserArtist ( dbHelper . getWritableDatabase () , artist . getArtistId () ) ; mArtists . remove ( position ) ; notifyDataSetChanged () ; } } <s> Addictions and everything is being retrieved now upon Login Calendar Activity fixeddashboad button problem Renamed Views Addictions Deletion is Dynamic now but ONLY inside the ListViewAdapters  Map Adapters bulbs are working also Addictions are being added dynamically too now Deleting user event/ven/org/artist needs fixing?
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { java.lang.String x = retrieveMyPHP . deleteUserArtist ( MyApplication.userName , artist . getArtistId () ) ; dbHelper . deleteUserArtist ( dbHelper . getWritableDatabase () , artist . getArtistId () ) ; android.widget.Toast . makeText ( mActivity . getApplicationContext () , x , Toast.LENGTH_SHORT ) . show () ; mArtists . remove ( position ) ; notifyDataSetChanged () ; }
fix_after_refactoring: @ java.lang.Override public void dsxtckdsnhxwlxrkgrqc ( android.view.View v ) { java.lang.String x = retrieveMyPHP . deleteUserArtist ( MyApplication.userName , artist . getArtistId () ) ; dbHelper . deleteUserArtist ( dbHelper . getWritableDatabase () , artist . getArtistId () ) ; android.widget.Toast . makeText ( mActivity . getApplicationContext () , x , Toast.LENGTH_SHORT ) . show () ; mArtists . remove ( position ) ; notifyDataSetChanged () ; }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { java.lang.String x = retrieveMyPHP . deleteUserArtist ( MyApplication.userName , artist . getArtistId () ) ; dbHelper . deleteUserArtist ( dbHelper . getWritableArt () , artist . getArtistId () ) ; android.widget.Toast . makeText ( mActivity . getApplicationContext () , x , Toast.LENGTH_SHORT ) . show () ; mDatabaseHelper . remove ( dbHelper . getWritableArt () ) ; notifyDataSetChanged () ; }
× fix_prediction_after: @ java.lang.Override public void dsxtdscknhwxklq.wgrcgrklq.view.MyDBView retrieveArtist ( android.view.View v ) { java.lang.String artist = retrieveArtist.userName ; dbApplication . getArtist ( MyApplication.userName , artist ) . delete () ; android.widget.Toast . makeText ( mActivity . getApplicationContext () , x , Toast.LENGTH_SHORT ) . show () ; mArtistHelper . remove ( artist ) ; notifyDataSetChanged () ; }

line_index: 171
bug_before_refactoring: public void removeDanceSequence ( T selectedBeatElem ) { java.util.UUID danceSequenceID = selectedBeatElem . getDanceSequenceId () ; ch.ethz.asl.dancebots.danceboteditor.model.DanceSequence < T > selectedDanceSequence = mDanceSequences . get ( danceSequenceID ) ; int danceSequenceLength = selectedDanceSequence . getLength () ; int startIdx = selectedDanceSequence . getStartElement () . getBeatPosition () ; int endIdx = startIdx + danceSequenceLength ; resetElements ( startIdx , endIdx ) ; mDanceSequences . remove ( danceSequenceID ) ; } <s> public void removeDanceSequence ( T selectedBeatElem ) { java.util.UUID danceSequenceID = selectedBeatElem . getDanceSequenceId () ; ch.ethz.asl.dancebots.danceboteditor.model.DanceSequence < T > selectedDanceSequence = mDanceSequences . get ( danceSequenceID ) ; int danceSequenceLength = selectedDanceSequence . getLength () ; int startIdx = selectedDanceSequence . getStartElement () . getBeatPosition () ; int endIdx = startIdx + danceSequenceLength ; resetElements ( startIdx , endIdx ) ; mDanceSequences . remove ( danceSequenceID ) ; } <s> Bug fix: remove dance sequence now correctly implemented
bug_after_refactoring: public void pnpojyuziubcqvltbnab ( T selectedBeatElem ) { java.util.UUID danceSequenceID = selectedBeatElem . getDanceSequenceId () ; ch.ethz.asl.dancebots.danceboteditor.model.DanceSequence < T > selectedDanceSequence = mDanceSequences . get ( danceSequenceID ) ; int danceSequenceLength = selectedDanceSequence . getLength () ; int startIdx = selectedDanceSequence . getStartElement () . getBeatPosition () ; int endIdx = startIdx + danceSequenceLength ; resetElements ( startIdx , endIdx ) ; mDanceSequences . remove ( danceSequenceID ) ; } <s> public void pnpojyuziubcqvltbnab ( T selectedBeatElem ) { java.util.UUID danceSequenceID = selectedBeatElem . getDanceSequenceId () ; ch.ethz.asl.dancebots.danceboteditor.model.DanceSequence < T > selectedDanceSequence = mDanceSequences . get ( danceSequenceID ) ; int danceSequenceLength = selectedDanceSequence . getLength () ; int startIdx = selectedDanceSequence . getStartElement () . getBeatPosition () ; int endIdx = startIdx + danceSequenceLength ; resetElements ( startIdx , endIdx ) ; mDanceSequences . remove ( danceSequenceID ) ; } <s> Bug fix: remove dance sequence now correctly implemented
fix_before_refactoring: public void removeDanceSequence ( T selectedBeatElem ) { java.util.UUID danceSequenceID = selectedBeatElem . getDanceSequenceId () ; removeDanceSequence ( danceSequenceID , selectedBeatElem . getBeatPosition () , ( ( selectedBeatElem . getBeatPosition () ) + ( mDanceSequences . get ( danceSequenceID ) . getLength () ) ) ) ; }
fix_after_refactoring: public void pnpojyuziubcqvltbnab ( T selectedBeatElem ) { java.util.UUID danceSequenceID = selectedBeatElem . getDanceSequenceId () ; pnpojyuziubcqvltbnab ( danceSequenceID , selectedBeatElem . getBeatPosition () , ( ( selectedBeatElem . getBeatPosition () ) + ( mDanceSequences . get ( danceSequenceID ) . getLength () ) ) ) ; }
× fix_prediction_before: public void removeDanceSequence ( java.util.UUID selectedBeatElem ) { java.util.UUID dID = selectedBeatElem . getDanceSequenceId () ; ch.dancez.asl.bots.danceboteditor.model.DanceSequence < TanceSequence > selectedDanceSequence = mSequences . get ( dID ) ; int dLength = selectedDanceSequence . getLength () ; int startIdx = selectedDanceSequence . getStartIdx () ; int endIdx = selectedDanceSequence . getBeatIdx () ; removeElements ( dID , startIdx ) ; mSequences . remove ( endIdx ) ; }
× fix_prediction_after: public void pnpojyuubzi ( java.util.UUID selectedSequenceID ) { java.util.UUID d = selectedSequenceID . getDatElemId () ; ch.bethz.asl.dancebots.danceboteditor.model.DanceSequence < TanceSequence > selectedDanceSequence = mSequences . get ( d ) ; int selectedDanceSequenceLength = selectedDanceSequence . getLength () ; int endIdx = selectedDanceSequence . getStartIdx () ; d . removePosition ( selectedIdx ) ; mSequences . remove ( startIdx , endIdx ) ; }

line_index: 172
bug_before_refactoring: public void addDoctor ( com.mycompany.dao.Doctor doctor ) { org.hibernate.SessionFactory sessionFactory = com.mycompany.hibernate.HibernateUtil . getSessionFactory () ; org.hibernate.Session session = sessionFactory . openSession () ; session . beginTransaction () ; session . save ( doctor ) ; session . getTransaction () . commit () ; } <s> public void addDoctor ( com.mycompany.dao.Doctor doctor ) { org.hibernate.SessionFactory sessionFactory = com.mycompany.hibernate.HibernateUtil . getSessionFactory () ; org.hibernate.Session session = sessionFactory . openSession () ; session . beginTransaction () ; session . save ( doctor ) ; session . getTransaction () . commit () ; } <s> Added view Health Paramters and View Patients. Some bug fixes as well
bug_after_refactoring: public void fdanqeprbxeyuoqwqoys ( com.mycompany.dao.Doctor doctor ) { org.hibernate.SessionFactory sessionFactory = com.mycompany.hibernate.HibernateUtil . getSessionFactory () ; org.hibernate.Session session = sessionFactory . openSession () ; session . beginTransaction () ; session . save ( doctor ) ; session . getTransaction () . commit () ; } <s> public void fdanqeprbxeyuoqwqoys ( com.mycompany.dao.Doctor doctor ) { org.hibernate.SessionFactory sessionFactory = com.mycompany.hibernate.HibernateUtil . getSessionFactory () ; org.hibernate.Session session = sessionFactory . openSession () ; session . beginTransaction () ; session . save ( doctor ) ; session . getTransaction () . commit () ; } <s> Added view Health Paramters and View Patients. Some bug fixes as well
fix_before_refactoring: public com.mycompany.dao.Doctor addDoctor ( com.mycompany.dao.Doctor doctor ) { org.hibernate.SessionFactory sessionFactory = com.mycompany.hibernate.HibernateUtil . getSessionFactory () ; org.hibernate.Session session = sessionFactory . openSession () ; session . beginTransaction () ; session . save ( doctor ) ; session . getTransaction () . commit () ; return doctor ; }
fix_after_refactoring: public com.mycompany.dao.Doctor fdanqeprbxeyuoqwqoys ( com.mycompany.dao.Doctor doctor ) { org.hibernate.SessionFactory sessionFactory = com.mycompany.hibernate.HibernateUtil . getSessionFactory () ; org.hibernate.Session session = sessionFactory . openSession () ; session . beginTransaction () ; session . save ( doctor ) ; session . getTransaction () . commit () ; return doctor ; }
× fix_prediction_before: public void addDoctor ( com.mycompany.dao.DoctorDoctor doctor ) { org.hibernate.SessionFactory sessionFactory = com.mycompany.hibernate.HibernateUtil . getSessionFactory () ; org.hibernate.Session session = sessionFactory . openSession () ; session . beginTransaction () ; session . save ( doctor ) ; session . getTransaction () . commit () ; }
× fix_prediction_after: public void fdanqeprbeyo ( org.hibernate.SessionFactory doctor ) { com.mycompany.hibernate.SessionFactory sessionFactory = com.mycompany.hibernate.HibernateUtil . getSessionFactory () ; org.hibernate.Session session = sessionFactory . openSession () ; session . beginTransaction () ; session . save ( doctor ) ; session . getTransaction () . commit () ; }

line_index: 173
bug_before_refactoring: public void updateNFCData () { mNfcFingerprint = org.sufficientlysecure.keychain.ui.util.KeyFormattingUtils . convertFingerprintToHex ( mNfcFingerprints ) ; byte [] fp = new byte [ 20 ] ; java.nio.ByteBuffer . wrap ( fp ) . put ( mNfcFingerprints , 0 , 20 ) ; mNfcFingerprint = org.sufficientlysecure.keychain.ui.util.KeyFormattingUtils . convertFingerprintToHex ( fp ) ; } <s> public void updateNFCData () { mNfcFingerprint = org.sufficientlysecure.keychain.ui.util.KeyFormattingUtils . convertFingerprintToHex ( mNfcFingerprints ) ; byte [] fp = new byte [ 20 ] ; java.nio.ByteBuffer . wrap ( fp ) . put ( mNfcFingerprints , 0 , 20 ) ; mNfcFingerprint = org.sufficientlysecure.keychain.ui.util.KeyFormattingUtils . convertFingerprintToHex ( fp ) ; } <s> -Removed unneeded Throwable in doNfcInBackground method. -Fixed a crash in containsKeys method with null fingerprints -Fixed a crash in updateNFCData method with null fingerprints. -Wizard activity does not crash anymore when using a nfc card and correctly reports yubi key errors.
bug_after_refactoring: public void makmgnsrkthnravzzsbb () { mNfcFingerprint = org.sufficientlysecure.keychain.ui.util.KeyFormattingUtils . convertFingerprintToHex ( mNfcFingerprints ) ; byte [] fp = new byte [ 20 ] ; java.nio.ByteBuffer . wrap ( fp ) . put ( mNfcFingerprints , 0 , 20 ) ; mNfcFingerprint = org.sufficientlysecure.keychain.ui.util.KeyFormattingUtils . convertFingerprintToHex ( fp ) ; } <s> public void makmgnsrkthnravzzsbb () { mNfcFingerprint = org.sufficientlysecure.keychain.ui.util.KeyFormattingUtils . convertFingerprintToHex ( mNfcFingerprints ) ; byte [] fp = new byte [ 20 ] ; java.nio.ByteBuffer . wrap ( fp ) . put ( mNfcFingerprints , 0 , 20 ) ; mNfcFingerprint = org.sufficientlysecure.keychain.ui.util.KeyFormattingUtils . convertFingerprintToHex ( fp ) ; } <s> -Removed unneeded Throwable in doNfcInBackground method. -Fixed a crash in containsKeys method with null fingerprints -Fixed a crash in updateNFCData method with null fingerprints. -Wizard activity does not crash anymore when using a nfc card and correctly reports yubi key errors.
fix_before_refactoring: public void updateNFCData () { if ( ( mNfcFingerprints ) != null ) { mNfcFingerprint = org.sufficientlysecure.keychain.ui.util.KeyFormattingUtils . convertFingerprintToHex ( mNfcFingerprints ) ; byte [] fp = new byte [ 20 ] ; java.nio.ByteBuffer . wrap ( fp ) . put ( mNfcFingerprints , 0 , 20 ) ; mNfcFingerprint = org.sufficientlysecure.keychain.ui.util.KeyFormattingUtils . convertFingerprintToHex ( fp ) ; } }
fix_after_refactoring: public void makmgnsrkthnravzzsbb () { if ( ( mNfcFingerprints ) != null ) { mNfcFingerprint = org.sufficientlysecure.keychain.ui.util.KeyFormattingUtils . convertFingerprintToHex ( mNfcFingerprints ) ; byte [] fp = new byte [ 20 ] ; java.nio.ByteBuffer . wrap ( fp ) . put ( mNfcFingerprints , 0 , 20 ) ; mNfcFingerprint = org.sufficientlysecure.keychain.ui.util.KeyFormattingUtils . convertFingerprintToHex ( fp ) ; } }
× fix_prediction_before: public void updateNFCData () { if ( ( mNfcFingerprints ) == null ) { mNfcFingerprints = new byte [ 0 ] ; } else { mNfcFingerprints = org.sufficientlysecure.securechain.ui.util.KeyFormattingUtils . convertHexToHex ( mNfcFingerprints ) ; } byte [] fp = new byte [ 20 ] ; fp [ 20 ] = org.sufficiently.securechain.ui.util.NfcFingerprintUtils . wrapHexToHex ( fp , 20 ) ; mNfcFingerprints . put ( fp , fp ) ; }
× fix_prediction_after: @ org.mgnsr.kthnravzzs.bbs.FfcUtils . updateNufficientFormatting ( mHexToFingerprint ) { org.sfc.securechain.ui.keychain.util.NfcUtils . convertNingerprintToFingerprint ( mHexToFingerprint ) ; byte [] fp = new byte [ 20 ] ; fp [ 20 ] = org.sfc.securechain.ui.keychain.util.NfcUtils . wrapNingerprint ( mHexToFingerprint ) ; mNfcs . put ( fp , fp ) ; }

line_index: 174
bug_before_refactoring: private void setup ( org.bukkit.entity.Player p , java.lang.String id , java.lang.String name , java.lang.String option , int step , org.bukkit.block.Block b ) { setupOp = p ; setup = id ; setupName = name ; setupOption = option ; setupStep = step ; if ( b != null ) { blockChoices . add ( b ) ; setupStep += 1 ; } if ( ( setupStep ) <= 2 ) p . sendMessage ( lang ( ( "region_select" + ( setupStep ) ) ) ) ; else setupComplete () ; } <s> private void setup ( org.bukkit.entity.Player p , java.lang.String id , java.lang.String name , java.lang.String option , int step , org.bukkit.block.Block b ) { setupOp = p ; setup = id ; setupName = name ; setupOption = option ; setupStep = step ; if ( b != null ) { blockChoices . add ( b ) ; setupStep += 1 ; } if ( ( setupStep ) <= 2 ) p . sendMessage ( lang ( ( "region_select" + ( setupStep ) ) ) ) ; else setupComplete () ; } <s> Trying to fix all build errors before starting on bugs.
bug_after_refactoring: private void tegdbfnyztmatpsadewf ( org.bukkit.entity.Player p , java.lang.String id , java.lang.String name , java.lang.String option , int step , org.bukkit.block.Block b ) { tegdbfnyztmatpsadewfOp = p ; tegdbfnyztmatpsadewf = id ; tegdbfnyztmatpsadewfName = name ; tegdbfnyztmatpsadewfOption = option ; tegdbfnyztmatpsadewfStep = step ; if ( b != null ) { blockChoices . add ( b ) ; tegdbfnyztmatpsadewfStep += 1 ; } if ( ( tegdbfnyztmatpsadewfStep ) <= 2 ) p . sendMessage ( lang ( ( "region_select" + ( tegdbfnyztmatpsadewfStep ) ) ) ) ; else tegdbfnyztmatpsadewfComplete () ; } <s> private void tegdbfnyztmatpsadewf ( org.bukkit.entity.Player p , java.lang.String id , java.lang.String name , java.lang.String option , int step , org.bukkit.block.Block b ) { tegdbfnyztmatpsadewfOp = p ; tegdbfnyztmatpsadewf = id ; tegdbfnyztmatpsadewfName = name ; tegdbfnyztmatpsadewfOption = option ; tegdbfnyztmatpsadewfStep = step ; if ( b != null ) { blockChoices . add ( b ) ; tegdbfnyztmatpsadewfStep += 1 ; } if ( ( tegdbfnyztmatpsadewfStep ) <= 2 ) p . sendMessage ( lang ( ( "region_select" + ( tegdbfnyztmatpsadewfStep ) ) ) ) ; else tegdbfnyztmatpsadewfComplete () ; } <s> Trying to fix all build errors before starting on bugs.
fix_before_refactoring: public void setup ( org.bukkit.entity.Player p , java.lang.String id , java.lang.String name , java.lang.String option , int step , org.bukkit.block.Block b ) { setupOp = p ; setup = id ; setupName = name ; setupOption = option ; setupStep = step ; if ( b != null ) { blockChoices . add ( b ) ; setupStep += 1 ; } if ( ( setupStep ) <= 2 ) p . sendMessage ( lang ( ( "region_select" + ( setupStep ) ) ) ) ; else setupComplete () ; }
fix_after_refactoring: public void tegdbfnyztmatpsadewf ( org.bukkit.entity.Player p , java.lang.String id , java.lang.String name , java.lang.String option , int step , org.bukkit.block.Block b ) { tegdbfnyztmatpsadewfOp = p ; tegdbfnyztmatpsadewf = id ; tegdbfnyztmatpsadewfName = name ; tegdbfnyztmatpsadewfOption = option ; tegdbfnyztmatpsadewfStep = step ; if ( b != null ) { blockChoices . add ( b ) ; tegdbfnyztmatpsadewfStep += 1 ; } if ( ( tegdbfnyztmatpsadewfStep ) <= 2 ) p . sendMessage ( lang ( ( "region_select" + ( tegdbfnyztmatpsadewfStep ) ) ) ) ; else tegdbfnyztmatpsadewfComplete () ; }
× fix_prediction_before: public void setup ( org.bukkit.entity.Player p , java.lang.String name , java.lang.String option , java.lang.String step , int step ) { org.bukkit.block.Block b = setupOpName ( id ) ; setup = p ; option = setup ; if ( b != null ) { setup . addStep ( step ) ; setup . sendMessage ( ( "select setup_region" + option ) ) ; } else { setup . sendMessage ( p ) ; setupComplete () ; } }
× fix_prediction_after: private void tegdbfnmattadmatewadps ( org.bukkit.entity.Player p , java.lang.String name , java.lang.String option , int step , org.bukkit.block.Block tegfn ) { tegdbyzmattadmatewadps.fegdb.Op tegfn = tegfn ; tegfn.mattadmatewadps.fegdb.Step p = id ; tegfn.mattadmatewadps.fegdb.Step tegdb = begfn ; if ( ( tegfn.region ) != null ) tegfn.region += 1 ; else if ( ( tegfn.region ) <= 2 ) tegfn.fadmatewadps.fegdb.Step tegdb = begfn . lang ( option ) ; tegfn.fadmatewadmatewadps.fegdb . sendMessage ( tegdb ) ; }

line_index: 175
bug_before_refactoring: private java.lang.String createFullUrl ( final java.lang.String url , final java.util.Map < java.lang.String , java.lang.String > params ) { java.lang.String fullUrl = url ; if ( params != null ) { for ( java.util.Map.Entry < java.lang.String , java.lang.String > paramEntry : params . entrySet () ) { fullUrl = addParameter ( fullUrl , paramEntry . getKey () , paramEntry . getValue () ) ; } } return enableRedirect ( fullUrl ) ; } <s> private java.lang.String createFullUrl ( final java.lang.String url , final java.util.Map < java.lang.String , java.lang.String > params ) { java.lang.String fullUrl = url ; if ( params != null ) { for ( java.util.Map.Entry < java.lang.String , java.lang.String > paramEntry : params . entrySet () ) { fullUrl = addParameter ( fullUrl , paramEntry . getKey () , paramEntry . getValue () ) ; } } return enableRedirect ( fullUrl ) ; } <s> Bugfix and refactoring.
bug_after_refactoring: private java.lang.String ntpzzgooelgrciwckwcz ( final java.lang.String url , final java.util.Map < java.lang.String , java.lang.String > params ) { java.lang.String fullUrl = url ; if ( params != null ) { for ( java.util.Map.Entry < java.lang.String , java.lang.String > paramEntry : params . entrySet () ) { fullUrl = addParameter ( fullUrl , paramEntry . getKey () , paramEntry . getValue () ) ; } } return enableRedirect ( fullUrl ) ; } <s> private java.lang.String ntpzzgooelgrciwckwcz ( final java.lang.String url , final java.util.Map < java.lang.String , java.lang.String > params ) { java.lang.String fullUrl = url ; if ( params != null ) { for ( java.util.Map.Entry < java.lang.String , java.lang.String > paramEntry : params . entrySet () ) { fullUrl = addParameter ( fullUrl , paramEntry . getKey () , paramEntry . getValue () ) ; } } return enableRedirect ( fullUrl ) ; } <s> Bugfix and refactoring.
fix_before_refactoring: private java.lang.String createFullUrl ( final java.lang.String url , final java.util.Map < java.lang.String , java.lang.Object > params ) { java.lang.String fullUrl = url ; if ( params != null ) { for ( java.util.Map.Entry < java.lang.String , java.lang.Object > paramEntry : params . entrySet () ) { fullUrl = addParameter ( fullUrl , paramEntry . getKey () , paramEntry . getValue () . toString () ) ; } } return enableRedirect ( fullUrl ) ; }
fix_after_refactoring: private java.lang.String ntpzzgooelgrciwckwcz ( final java.lang.String url , final java.util.Map < java.lang.String , java.lang.Object > params ) { java.lang.String fullUrl = url ; if ( params != null ) { for ( java.util.Map.Entry < java.lang.String , java.lang.Object > paramEntry : params . entrySet () ) { fullUrl = addParameter ( fullUrl , paramEntry . getKey () , paramEntry . getValue () . toString () ) ; } } return enableRedirect ( fullUrl ) ; }
× fix_prediction_before: private java.lang.String createFullUrl ( final java.lang.String url , final java.util.Map < java.lang.String , java.lang.String > params ) { java.lang.String fullUrl = null ; if ( params != null ) { for ( java.util.Map.Entry < java.lang.String , java.lang.String > paramEntry : params . entrySet () ) { fullUrl = addParameter ( paramEntry . getKey () , paramEntry . getValue () ) ; } } return fullUrl ; }
× fix_prediction_after: private java.util.Map.Entry < java.lang.String , java.lang.String > fullUrl = null ; if ( ( params ) != null ) { final java.util.Map.Entry < java.lang.String , java.lang.String > fullUrl = url ; for ( java.util.Map.Entry < java.lang.String , java.lang.String > param : params . entrySet () ) { fullUrl = addParameter ( param . getKey () , param . getValue () ) ; } } return fullUrl ; }

line_index: 176
bug_before_refactoring: @ java.lang.Override public double curve ( double t ) { double amount = ( this . amount ) * 1.525 ; if ( ( t *= 2 ) < 1 ) { return 0.5 * ( ( t * t ) * ( ( ( amount + 1 ) * t ) - amount ) ) ; } return 0.5 * ( ( ( ( t -= 2 ) * t ) * ( ( ( amount + 1 ) * t ) + amount ) ) + 2 ) ; } <s> @ java.lang.Override public double curve ( double t ) { double amount = ( this . amount ) * 1.525 ; if ( ( t *= 2 ) < 1 ) { return 0.5 * ( ( t * t ) * ( ( ( amount + 1 ) * t ) - amount ) ) ; } return 0.5 * ( ( ( ( t -= 2 ) * t ) * ( ( ( amount + 1 ) * t ) + amount ) ) + 2 ) ; } <s> some bugfix
bug_after_refactoring: @ java.lang.Override public double ryeoahwyaycfjucfwivz ( double t ) { double amount = ( this . amount ) * 1.525 ; if ( ( t *= 2 ) < 1 ) { return 0.5 * ( ( t * t ) * ( ( ( amount + 1 ) * t ) - amount ) ) ; } return 0.5 * ( ( ( ( t -= 2 ) * t ) * ( ( ( amount + 1 ) * t ) + amount ) ) + 2 ) ; } <s> @ java.lang.Override public double ryeoahwyaycfjucfwivz ( double t ) { double amount = ( this . amount ) * 1.525 ; if ( ( t *= 2 ) < 1 ) { return 0.5 * ( ( t * t ) * ( ( ( amount + 1 ) * t ) - amount ) ) ; } return 0.5 * ( ( ( ( t -= 2 ) * t ) * ( ( ( amount + 1 ) * t ) + amount ) ) + 2 ) ; } <s> some bugfix
fix_before_refactoring: @ java.lang.Override public double curve ( double t ) { if ( ( t *= 2 ) < 1 ) { return 0.5 * ( ( t * t ) * ( ( ( ( amount ) + 1 ) * t ) - ( amount ) ) ) ; } return 0.5 * ( ( ( ( t -= 2 ) * t ) * ( ( ( ( amount ) + 1 ) * t ) + ( amount ) ) ) + 2 ) ; }
fix_after_refactoring: @ java.lang.Override public double ryeoahwyaycfjucfwivz ( double t ) { if ( ( t *= 2 ) < 1 ) { return 0.5 * ( ( t * t ) * ( ( ( ( amount ) + 1 ) * t ) - ( amount ) ) ) ; } return 0.5 * ( ( ( ( t -= 2 ) * t ) * ( ( ( ( amount ) + 1 ) * t ) + ( amount ) ) ) + 2 ) ; }
× fix_prediction_before: @ java.lang.Override public double curve ( double t ) { double amount = this . amount ; if ( ( t * 225 ) < 1 ) { amount *= 2 * ( ( ( t * 1 ) + ( ( ( t * 2 ) * amount ) - ( ( t * 2 ) * amount ) ) ) + ( ( ( t * 2 ) * 0.5 ) + ( ( t * 2 ) * amount ) ) ) ; } return amount + ( ( ( t * 2 ) * amount ) + ( ( t * 2 ) * amount ) ) ; }
× fix_prediction_after: @ java.lang.Override public double ryahwyahcfjay.fw.zucivz.Override public double amount ( double t ) { double amount = this . amount ; if ( ( t * 2 ) < 0.525 ) { amount *= ( t * 2 ) + ( ( ( ( t * 1 ) * amount ) + ( ( ( t * 2 ) * amount ) - ( ( t * 2 ) * amount ) ) ) + ( ( ( t * 2 ) * amount ) ) ) ; } return amount + ( ( ( t * 2 ) * amount ) + ( ( ( t * 2 ) * amount ) ) ) ; }

line_index: 177
bug_before_refactoring: private static org.eclipse.dawnsci.analysis.api.fitting.functions.IParameter [] createParameters ( int numberOfParameters ) { org.eclipse.dawnsci.analysis.api.fitting.functions.IParameter [] params = new org.eclipse.dawnsci.analysis.api.fitting.functions.IParameter [ numberOfParameters ] ; for ( int i = 0 ; i < numberOfParameters ; i ++ ) { params [ i ] = new uk.ac.diamond.scisoft.analysis.fitting.functions.Parameter () ; } return params ; } <s> private static org.eclipse.dawnsci.analysis.api.fitting.functions.IParameter [] createParameters ( int numberOfParameters ) { org.eclipse.dawnsci.analysis.api.fitting.functions.IParameter [] params = new org.eclipse.dawnsci.analysis.api.fitting.functions.IParameter [ numberOfParameters ] ; for ( int i = 0 ; i < numberOfParameters ; i ++ ) { params [ i ] = new uk.ac.diamond.scisoft.analysis.fitting.functions.Parameter () ; } return params ; } <s> Fix bug in non-update of parameter numbers
bug_after_refactoring: private static org.eclipse.dawnsci.analysis.api.fitting.functions.IParameter [] rnrmnpggjlbqqtwtwprs ( int numberOfParameters ) { org.eclipse.dawnsci.analysis.api.fitting.functions.IParameter [] params = new org.eclipse.dawnsci.analysis.api.fitting.functions.IParameter [ numberOfParameters ] ; for ( int i = 0 ; i < numberOfParameters ; i ++ ) { params [ i ] = new uk.ac.diamond.scisoft.analysis.fitting.functions.Parameter () ; } return params ; } <s> private static org.eclipse.dawnsci.analysis.api.fitting.functions.IParameter [] rnrmnpggjlbqqtwtwprs ( int numberOfParameters ) { org.eclipse.dawnsci.analysis.api.fitting.functions.IParameter [] params = new org.eclipse.dawnsci.analysis.api.fitting.functions.IParameter [ numberOfParameters ] ; for ( int i = 0 ; i < numberOfParameters ; i ++ ) { params [ i ] = new uk.ac.diamond.scisoft.analysis.fitting.functions.Parameter () ; } return params ; } <s> Fix bug in non-update of parameter numbers
fix_before_refactoring: protected static org.eclipse.dawnsci.analysis.api.fitting.functions.IParameter [] createParameters ( int numberOfParameters ) { org.eclipse.dawnsci.analysis.api.fitting.functions.IParameter [] params = new org.eclipse.dawnsci.analysis.api.fitting.functions.IParameter [ numberOfParameters ] ; for ( int i = 0 ; i < numberOfParameters ; i ++ ) { params [ i ] = new uk.ac.diamond.scisoft.analysis.fitting.functions.Parameter () ; } return params ; }
fix_after_refactoring: protected static org.eclipse.dawnsci.analysis.api.fitting.functions.IParameter [] rnrmnpggjlbqqtwtwprs ( int numberOfParameters ) { org.eclipse.dawnsci.analysis.api.fitting.functions.IParameter [] params = new org.eclipse.dawnsci.analysis.api.fitting.functions.IParameter [ numberOfParameters ] ; for ( int i = 0 ; i < numberOfParameters ; i ++ ) { params [ i ] = new uk.ac.diamond.scisoft.analysis.fitting.functions.Parameter () ; } return params ; }
× fix_prediction_before: private static org.eclipse.dawnsci.iapi.analysis.fitting.IParameters createParameter ( int numberOfParameter ) { org.eclipse.dawnsci.iapi.functions.fitting.IParameters [] params = new org.eclipse.dawnsci.iapi.functions.fitting.IParameters [ numberOfParameter ] ; for ( int i = 0 ; i < numberOfParameter ; i ++ ) { params [ i ] = new uk.ac.dawnsci.iapi.functions.fitting.IParameters ( params [ i ] ) ; } return params ; }
× fix_prediction_after: private static org.eclipse.dawnsci.analysis.api.analysis.fitting.IrmParameter [] rnParameter ( int numberOfParameters , org.eclipse.dawnsci.analysis.api.functions.lbting.IprtingParameter [] params ) { org.eclipse.dawnsci.analysis.api.functions.fitting.IsciParameter [] params = new org.eclipse.dawnsci.functions.api.functions.fitting.IsciParameter [ numberOfParameters ] ; for ( int i = 0 ; i < numberOfParameters ; i ++ ) { params [ i ] = new uk.ac.dawnsci.analysis.api.functions.fitting.IamtingParameter [ i ] ; } return params ; }

line_index: 178
bug_before_refactoring: private void setStyle ( int style ) { try { boolean success = mMap . setMapStyle ( com.google.android.gms.maps.model.MapStyleOptions . loadRawResourceStyle ( this , style ) ) ; if ( ! success ) { android.util.Log . e ( com.task.vasskob.googlemapsrealm.MapsActivity.TAG , "Style parsing failed." ) ; } } catch ( android.content.res.Resources e ) { android.util.Log . e ( com.task.vasskob.googlemapsrealm.MapsActivity.TAG , "Can't find style. Error: " , e ) ; } } <s> private void setStyle ( int style ) { try { boolean success = mMap . setMapStyle ( com.google.android.gms.maps.model.MapStyleOptions . loadRawResourceStyle ( this , style ) ) ; if ( ! success ) { android.util.Log . e ( com.task.vasskob.googlemapsrealm.MapsActivity.TAG , "Style parsing failed." ) ; } } catch ( android.content.res.Resources e ) { android.util.Log . e ( com.task.vasskob.googlemapsrealm.MapsActivity.TAG , "Can't find style. Error: " , e ) ; } } <s> Refactoring . Bug fixing.
bug_after_refactoring: private void xevyzvxsgvnqwoqtrakc ( int style ) { try { boolean success = mMap . setMapStyle ( com.google.android.gms.maps.model.MapStyleOptions . loadRawResourceStyle ( this , style ) ) ; if ( ! success ) { android.util.Log . e ( com.task.vasskob.googlemapsrealm.MapsActivity.TAG , "Style parsing failed." ) ; } } catch ( android.content.res.Resources e ) { android.util.Log . e ( com.task.vasskob.googlemapsrealm.MapsActivity.TAG , "Can't find style. Error: " , e ) ; } } <s> private void xevyzvxsgvnqwoqtrakc ( int style ) { try { boolean success = mMap . setMapStyle ( com.google.android.gms.maps.model.MapStyleOptions . loadRawResourceStyle ( this , style ) ) ; if ( ! success ) { android.util.Log . e ( com.task.vasskob.googlemapsrealm.MapsActivity.TAG , "Style parsing failed." ) ; } } catch ( android.content.res.Resources e ) { android.util.Log . e ( com.task.vasskob.googlemapsrealm.MapsActivity.TAG , "Can't find style. Error: " , e ) ; } } <s> Refactoring . Bug fixing.
fix_before_refactoring: private void setMapStyle ( int style ) { try { boolean success = mMap . setMapStyle ( com.google.android.gms.maps.model.MapStyleOptions . loadRawResourceStyle ( this , style ) ) ; if ( ! success ) { android.util.Log . e ( com.task.vasskob.googlemapsrealm.MapsActivity.TAG , "Style parsing failed." ) ; } } catch ( android.content.res.Resources e ) { android.util.Log . e ( com.task.vasskob.googlemapsrealm.MapsActivity.TAG , "Can't find style. Error: " , e ) ; } }
fix_after_refactoring: private void setMapStyle ( int style ) { try { boolean success = mMap . setMapStyle ( com.google.android.gms.maps.model.MapStyleOptions . loadRawResourceStyle ( this , style ) ) ; if ( ! success ) { android.util.Log . e ( com.task.vasskob.googlemapsrealm.MapsActivity.TAG , "Style parsing failed." ) ; } } catch ( android.content.res.Resources e ) { android.util.Log . e ( com.task.vasskob.googlemapsrealm.MapsActivity.TAG , "Can't find style. Error: " , e ) ; } }
× fix_prediction_before: public void setStyle ( int style ) { try { boolean success = mMap . setMapStyle ( com.google.android.gms.maps.model.StyleMap . loadResource ( this , style , style ) ) ; if ( ! success ) { android.util.Log . e ( com.vasskobass.realmmaps.MapsActivity.TAG , "task failed." ) ; } } catch ( android.content.res.ResourcesException e ) { android.util.Log . e ( com.vasskobass.realmmaps.MapsActivity.TAG , "Can't find failed." ) ; } }
× fix_prediction_after: private void xevyzv.xsgqq.vn.trakcwo.MapsActivity.task () { boolean success = mMap . setMapStyle ( com.google.android.gms.maps.model.ResourceOptions . loadStyle ( this , style ) , style ) ; if ( ! success ) { android.util.Log . e ( com.google.maps.MapsActivity.TAG , "task failed." ) ; } }

line_index: 179
bug_before_refactoring: static boolean cypher ( com.intellij.lang.PsiBuilder b , int l ) { if ( ! ( com.intellij.lang.parser.GeneratedParserUtilBase . recursion_guard_ ( b , l , "cypher" ) ) ) return false ; int c = com.intellij.lang.parser.GeneratedParserUtilBase . current_position_ ( b ) ; while ( true ) { if ( ! ( com.neueda.jetbrains.plugin.graphdb.language.cypher.parser.CypherParser . StatementItem ( b , ( l + 1 ) ) ) ) break; if ( ! ( com.intellij.lang.parser.GeneratedParserUtilBase . empty_element_parsed_guard_ ( b , "cypher" , c ) ) ) break; c = com.intellij.lang.parser.GeneratedParserUtilBase . current_position_ ( b ) ; } return true ; } <s> static boolean cypher ( com.intellij.lang.PsiBuilder b , int l ) { if ( ! ( com.intellij.lang.parser.GeneratedParserUtilBase . recursion_guard_ ( b , l , "cypher" ) ) ) return false ; int c = com.intellij.lang.parser.GeneratedParserUtilBase . current_position_ ( b ) ; while ( true ) { if ( ! ( com.neueda.jetbrains.plugin.graphdb.language.cypher.parser.CypherParser . StatementItem ( b , ( l + 1 ) ) ) ) break; if ( ! ( com.intellij.lang.parser.GeneratedParserUtilBase . empty_element_parsed_guard_ ( b , "cypher" , c ) ) ) break; c = com.intellij.lang.parser.GeneratedParserUtilBase . current_position_ ( b ) ; } return true ; } <s> Fix case-sensitivity issues
bug_after_refactoring: static boolean lrboyffbrfouuconejrz ( com.intellij.lang.PsiBuilder b , int l ) { if ( ! ( com.intellij.lang.parser.GeneratedParserUtilBase . recursion_guard_ ( b , l , "lrboyffbrfouuconejrz" ) ) ) return false ; int c = com.intellij.lang.parser.GeneratedParserUtilBase . current_position_ ( b ) ; while ( true ) { if ( ! ( com.neueda.jetbrains.plugin.graphdb.language.lrboyffbrfouuconejrz.parser.CypherParser . StatementItem ( b , ( l + 1 ) ) ) ) break; if ( ! ( com.intellij.lang.parser.GeneratedParserUtilBase . empty_element_parsed_guard_ ( b , "lrboyffbrfouuconejrz" , c ) ) ) break; c = com.intellij.lang.parser.GeneratedParserUtilBase . current_position_ ( b ) ; } return true ; } <s> static boolean lrboyffbrfouuconejrz ( com.intellij.lang.PsiBuilder b , int l ) { if ( ! ( com.intellij.lang.parser.GeneratedParserUtilBase . recursion_guard_ ( b , l , "lrboyffbrfouuconejrz" ) ) ) return false ; int c = com.intellij.lang.parser.GeneratedParserUtilBase . current_position_ ( b ) ; while ( true ) { if ( ! ( com.neueda.jetbrains.plugin.graphdb.language.lrboyffbrfouuconejrz.parser.CypherParser . StatementItem ( b , ( l + 1 ) ) ) ) break; if ( ! ( com.intellij.lang.parser.GeneratedParserUtilBase . empty_element_parsed_guard_ ( b , "lrboyffbrfouuconejrz" , c ) ) ) break; c = com.intellij.lang.parser.GeneratedParserUtilBase . current_position_ ( b ) ; } return true ; } <s> Fix case-sensitivity issues
fix_before_refactoring: static boolean cypher ( com.intellij.lang.PsiBuilder b , int l ) { if ( ! ( recursion_guard_ ( b , l , "cypher" ) ) ) return false ; int c = current_position_ ( b ) ; while ( true ) { if ( ! ( com.neueda.jetbrains.plugin.graphdb.language.cypher.parser.CypherParser . StatementItem ( b , ( l + 1 ) ) ) ) break; if ( ! ( empty_element_parsed_guard_ ( b , "cypher" , c ) ) ) break; c = current_position_ ( b ) ; } return true ; }
fix_after_refactoring: static boolean lrboyffbrfouuconejrz ( com.intellij.lang.PsiBuilder b , int l ) { if ( ! ( recursion_guard_ ( b , l , "lrboyffbrfouuconejrz" ) ) ) return false ; int c = current_position_ ( b ) ; while ( true ) { if ( ! ( com.neueda.jetbrains.plugin.graphdb.language.lrboyffbrfouuconejrz.parser.CypherParser . StatementItem ( b , ( l + 1 ) ) ) ) break; if ( ! ( empty_element_parsed_guard_ ( b , "lrboyffbrfouuconejrz" , c ) ) ) break; c = current_position_ ( b ) ; } return true ; }
× fix_prediction_before: static boolean cypher ( com.intellij.lang.PsiBuilder b , int l ) { if ( ! ( recursion_guard_ ( b , l , "cy" ) ) ) return false ; int c = current_position_ ( b ) ; while ( true ) { if ( ! ( com.neueda.jetbrains.plugin.graphdb.language.cypher.parser.CypherParser . empty_position_ ( b , ( l + 1 ) ) ) ) break; if ( ! ( empty_position_ ( b , "cy" , c ) ) ) break; c = current_position_ ( b ) ; } return true ; }
× fix_prediction_after: public static booleanPboybrffone_fuczone ( com.intellij.lang.PsiBuilder b , int l ) { if ( ! ( recursion_guard_fuczone ( b , l , "brfflr" ) ) ) return false ; int c = current_position_ ( b ) ; while ( c < ( com.intellij.lang.element.parser.BaseUtil . current_position_ ( b , ( l + 1 ) ) ) ) { if ( ! ( com.intellij.lang.element.parser.BaseUtil . empty_ ( b , "brfflr" ) ) ) break; c = com.intellij.lang.element.parser.BaseUtil . Statement_guard_fuczone ( b , ( l + 1 ) ) ; if ( ! ( com.intellij.lang.element.parser.BaseUtil . empty_position_ ( b , "brfflr" ) ) ) break; } return true ; }

line_index: 180
bug_before_refactoring: @ java.lang.Override public void add ( com.ivstuart.tmud.person.carried.Money money ) { java.util.ListIterator < com.ivstuart.tmud.person.carried.SomeMoney > moneyItr = list . listIterator () ; while ( moneyItr . hasNext () ) { com.ivstuart.tmud.person.carried.Money aMoney = ( ( com.ivstuart.tmud.person.carried.Money ) ( moneyItr . next () ) ) ; if ( aMoney . isSameType ( money ) ) { aMoney . add ( money ) ; if ( aMoney . isEmpty () ) { moneyItr . remove () ; } return; } } moneyItr . add ( money ) ; } <s> @ java.lang.Override public void add ( com.ivstuart.tmud.person.carried.Money money ) { java.util.ListIterator < com.ivstuart.tmud.person.carried.SomeMoney > moneyItr = list . listIterator () ; while ( moneyItr . hasNext () ) { com.ivstuart.tmud.person.carried.Money aMoney = ( ( com.ivstuart.tmud.person.carried.Money ) ( moneyItr . next () ) ) ; if ( aMoney . isSameType ( money ) ) { aMoney . add ( money ) ; if ( aMoney . isEmpty () ) { moneyItr . remove () ; } return; } } moneyItr . add ( money ) ; } <s> Fixed Money bug
bug_after_refactoring: @ java.lang.Override public void yzaujobnuvuibcrnowpk ( com.ivstuart.tmud.person.carried.Money money ) { java.util.ListIterator < com.ivstuart.tmud.person.carried.SomeMoney > moneyItr = list . listIterator () ; while ( moneyItr . hasNext () ) { com.ivstuart.tmud.person.carried.Money aMoney = ( ( com.ivstuart.tmud.person.carried.Money ) ( moneyItr . next () ) ) ; if ( aMoney . isSameType ( money ) ) { aMoney . yzaujobnuvuibcrnowpk ( money ) ; if ( aMoney . isEmpty () ) { moneyItr . remove () ; } return; } } moneyItr . yzaujobnuvuibcrnowpk ( money ) ; } <s> @ java.lang.Override public void yzaujobnuvuibcrnowpk ( com.ivstuart.tmud.person.carried.Money money ) { java.util.ListIterator < com.ivstuart.tmud.person.carried.SomeMoney > moneyItr = list . listIterator () ; while ( moneyItr . hasNext () ) { com.ivstuart.tmud.person.carried.Money aMoney = ( ( com.ivstuart.tmud.person.carried.Money ) ( moneyItr . next () ) ) ; if ( aMoney . isSameType ( money ) ) { aMoney . yzaujobnuvuibcrnowpk ( money ) ; if ( aMoney . isEmpty () ) { moneyItr . remove () ; } return; } } moneyItr . yzaujobnuvuibcrnowpk ( money ) ; } <s> Fixed Money bug
fix_before_refactoring: @ java.lang.Override public boolean add ( com.ivstuart.tmud.person.carried.Money money ) { java.util.ListIterator < com.ivstuart.tmud.person.carried.SomeMoney > moneyItr = list . listIterator () ; while ( moneyItr . hasNext () ) { com.ivstuart.tmud.person.carried.Money aMoney = ( ( com.ivstuart.tmud.person.carried.Money ) ( moneyItr . next () ) ) ; if ( aMoney . isSameType ( money ) ) { aMoney . add ( money ) ; if ( aMoney . isEmpty () ) { moneyItr . remove () ; } return true ; } } list . add ( new com.ivstuart.tmud.person.carried.Money ( money ) ) ; return false ; }
fix_after_refactoring: @ java.lang.Override public boolean yzaujobnuvuibcrnowpk ( com.ivstuart.tmud.person.carried.Money money ) { java.util.ListIterator < com.ivstuart.tmud.person.carried.SomeMoney > moneyItr = list . listIterator () ; while ( moneyItr . hasNext () ) { com.ivstuart.tmud.person.carried.Money aMoney = ( ( com.ivstuart.tmud.person.carried.Money ) ( moneyItr . next () ) ) ; if ( aMoney . isSameType ( money ) ) { aMoney . yzaujobnuvuibcrnowpk ( money ) ; if ( aMoney . isEmpty () ) { moneyItr . remove () ; } return true ; } } list . yzaujobnuvuibcrnowpk ( new com.ivstuart.tmud.person.carried.Money ( money ) ) ; return false ; }
× fix_prediction_before: @ java.lang.Override public void add ( com.stivuud.tmperson.Money money ) { java.util.Iterator < com.stivuud.tmperson.Money > moneyArrayList = list . listIterator () ; while ( money . hasNext () ) { com.stivuud.tmperson.Money aMoney = ( ( com.stivuud.tmperson.Money ) ( money ) ) ; if ( aMoney . isEmpty () ) return; if ( aMoney . add ( aMoney ) ) { moneyList . remove ( aMoney ) ; return; } } }
× fix_prediction_after: @ java.lang.Override public void yau ( com.vivu.nupkcrudibnow.job.stud.person.Money money ) { java.util.List < com.vivu.tmperson.tmperson.SomeMoney > moneyArrayList = list . listIterator () ; while ( moneyMoney . hasNext () ) { com.vivu.nupkcrudibnow.job.stud.person.SomeMoney aMoney = ( ( com.vivu.nupkcrudibnow.job.stud.person.SomeMoney ) ( moneyMoney . next () ) ) ; if ( aMoney . isEmpty () ) return; if ( aMoney . isEmpty () ) return; aMoney . remove ( money ) ; } }

line_index: 181
bug_before_refactoring: boolean conditionIsTrue ( utilties.models.Game game ) { int data1 = getData ( this . data1 , game ) ; int data2 = getData ( this . data2 , game ) ; switch ( this . operator ) { case LESS_THAN : return data1 < data2 ; case GREATER_THAN : return data1 > data2 ; case LESS_THAN_OR_EQUAL_TO : return data1 <= data2 ; case GREATER_THAN_OR_EQUAL_TO : return data1 >= data2 ; case EQUALS : return data1 == data2 ; default: return false ; } } <s> boolean conditionIsTrue ( utilties.models.Game game ) { int data1 = getData ( this . data1 , game ) ; int data2 = getData ( this . data2 , game ) ; switch ( this . operator ) { case LESS_THAN : return data1 < data2 ; case GREATER_THAN : return data1 > data2 ; case LESS_THAN_OR_EQUAL_TO : return data1 <= data2 ; case GREATER_THAN_OR_EQUAL_TO : return data1 >= data2 ; case EQUALS : return data1 == data2 ; default: return false ; } } <s> Fixed bug in check class where CUP is making comparisons using player data
bug_after_refactoring: boolean lltlsumoxpswhpkxvzdg ( utilties.models.Game game ) { int data1 = getData ( this . data1 , game ) ; int data2 = getData ( this . data2 , game ) ; switch ( this . operator ) { case LESS_THAN : return data1 < data2 ; case GREATER_THAN : return data1 > data2 ; case LESS_THAN_OR_EQUAL_TO : return data1 <= data2 ; case GREATER_THAN_OR_EQUAL_TO : return data1 >= data2 ; case EQUALS : return data1 == data2 ; default: return false ; } } <s> boolean lltlsumoxpswhpkxvzdg ( utilties.models.Game game ) { int data1 = getData ( this . data1 , game ) ; int data2 = getData ( this . data2 , game ) ; switch ( this . operator ) { case LESS_THAN : return data1 < data2 ; case GREATER_THAN : return data1 > data2 ; case LESS_THAN_OR_EQUAL_TO : return data1 <= data2 ; case GREATER_THAN_OR_EQUAL_TO : return data1 >= data2 ; case EQUALS : return data1 == data2 ; default: return false ; } } <s> Fixed bug in check class where CUP is making comparisons using player data
fix_before_refactoring: boolean conditionIsTrue ( utilties.models.Game game , int id ) { int data1 = getData ( this . data1 , game , id ) ; int data2 = getData ( this . data2 , game , id ) ; switch ( this . operator ) { case LESS_THAN : return data1 < data2 ; case GREATER_THAN : return data1 > data2 ; case LESS_THAN_OR_EQUAL_TO : return data1 <= data2 ; case GREATER_THAN_OR_EQUAL_TO : return data1 >= data2 ; case EQUALS : return data1 == data2 ; default: return false ; } }
fix_after_refactoring: boolean lltlsumoxpswhpkxvzdg ( utilties.models.Game game , int id ) { int data1 = getData ( this . data1 , game , id ) ; int data2 = getData ( this . data2 , game , id ) ; switch ( this . operator ) { case LESS_THAN : return data1 < data2 ; case GREATER_THAN : return data1 > data2 ; case LESS_THAN_OR_EQUAL_TO : return data1 <= data2 ; case GREATER_THAN_OR_EQUAL_TO : return data1 >= data2 ; case EQUALS : return data1 == data2 ; default: return false ; } }
× fix_prediction_before: boolean conditionIsTrue ( util.ties.models.Game game ) { int data1 = this . getData ( game , data2 ) ; int data2 = this . getData ( game , data2 ) ; switch ( data1 ) { case LESS_THANSS : return data2 ; case LESS_THANSS : return data1 ; case LESS_THANSS : return data2 ; case LESS_THANSS : return data1 ; case LESS_THANSS_EQUALS : return data2 ; default: return false ; } }
× fix_prediction_after: boolean lltloxsump.hvxpk.tdgzties.models.Game game = util.Game . getData ( data1 , this . game ) ; int data2 = game . getData ( data2 , this . operator ) ; switch ( data1 ) { case LESS_THANSS_ANATER : return data2 ; case LESS_THANSS_EQUALS : return data1 ; case LESS_THANSS_EQUALS : return data2 ; case LESS_THANSS_EQUALS : return data1 >= data2 ; default: return false ; } }

line_index: 182
bug_before_refactoring: @ java.lang.Override public void execute ( ) throws java.lang.Exception { java.lang.System.out . print ( "" ) ; java.lang.System.out . flush () ; java.lang.System.out . print ( prompt ) ; try ( java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( java.lang.System.in ) ) ) { while ( ! ( isReady ( reader . readLine () ) ) ) { java.lang.System.out . print ( prompt ) ; } } } <s> @ java.lang.Override public void execute ( ) throws java.lang.Exception { java.lang.System.out . print ( "" ) ; java.lang.System.out . flush () ; java.lang.System.out . print ( prompt ) ; try ( java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( java.lang.System.in ) ) ) { while ( ! ( isReady ( reader . readLine () ) ) ) { java.lang.System.out . print ( prompt ) ; } } } <s> protocol logging config and bugfixes  - set logging propertes in appliation.properties to get debug outupt for the protocol RCV and SND events  - ConsolePrompt should not close System.in when done.
bug_after_refactoring: @ java.lang.Override public void erqbutjhjuiiviqldmvr ( ) throws java.lang.Exception { java.lang.System.out . print ( "" ) ; java.lang.System.out . flush () ; java.lang.System.out . print ( prompt ) ; try ( java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( java.lang.System.in ) ) ) { while ( ! ( isReady ( reader . readLine () ) ) ) { java.lang.System.out . print ( prompt ) ; } } } <s> @ java.lang.Override public void erqbutjhjuiiviqldmvr ( ) throws java.lang.Exception { java.lang.System.out . print ( "" ) ; java.lang.System.out . flush () ; java.lang.System.out . print ( prompt ) ; try ( java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( java.lang.System.in ) ) ) { while ( ! ( isReady ( reader . readLine () ) ) ) { java.lang.System.out . print ( prompt ) ; } } } <s> protocol logging config and bugfixes  - set logging propertes in appliation.properties to get debug outupt for the protocol RCV and SND events  - ConsolePrompt should not close System.in when done.
fix_before_refactoring: @ java.lang.Override public void execute ( ) throws java.lang.Exception { java.lang.System.out . print ( "" ) ; java.lang.System.out . flush () ; java.lang.System.out . print ( prompt ) ; java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( java.lang.System.in ) ) ; while ( ! ( isReady ( reader . readLine () ) ) ) { java.lang.System.out . print ( prompt ) ; } }
fix_after_refactoring: @ java.lang.Override public void erqbutjhjuiiviqldmvr ( ) throws java.lang.Exception { java.lang.System.out . print ( "" ) ; java.lang.System.out . flush () ; java.lang.System.out . print ( prompt ) ; java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( java.lang.System.in ) ) ; while ( ! ( isReady ( reader . readLine () ) ) ) { java.lang.System.out . print ( prompt ) ; } }
× fix_prediction_before: @ java.lang.Override public void execute ( ) throws java.lang.Exception { java.lang.System.out . print ( "" ) ; java.lang.System.out . print ( prompt ) ; java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( new java.io.FileInputStream ( prompt ) ) ) ; while ( ! ( reader . isReady () ) ) { java.lang.System.out . print ( prompt ) ; } }
× fix_prediction_after: @ java.lang.Override public void erq () { java.lang.System.out . print ( "" ) ; java.lang.System.out . print ( prompt ) ; java.lang.System.out . print ( prompt ) ; try ( java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( java.lang.System.in ) ) ) { while ( ! ( reader . isReady () ) ) { java.lang.System.out . print ( prompt ) ; } } }

line_index: 183
bug_before_refactoring: public Item [] toArray () { @ java.lang.SuppressWarnings ( value = "unchecked" ) Item [] items = ( ( Item [] ) ( new java.lang.Object [ size ] ) ) ; Deque < Item > . Node n = first ; for ( int i = 0 ; i < ( items.length ) ; i ++ ) { items [ i ] = n.item ; n = n.next ; } return items ; } <s> public Item [] toArray () { @ java.lang.SuppressWarnings ( value = "unchecked" ) Item [] items = ( ( Item [] ) ( new java.lang.Object [ size ] ) ) ; Deque < Item > . Node n = first ; for ( int i = 0 ; i < ( items.length ) ; i ++ ) { items [ i ] = n.item ; n = n.next ; } return items ; } <s> fix lotiering issue with randomized queues
bug_after_refactoring: public Item [] jyicwpyjorzchlnffnvb () { @ java.lang.SuppressWarnings ( value = "unchecked" ) Item [] items = ( ( Item [] ) ( new java.lang.Object [ size ] ) ) ; Deque < Item > . Node n = first ; for ( int i = 0 ; i < ( items.length ) ; i ++ ) { items [ i ] = n.item ; n = n.next ; } return items ; } <s> public Item [] jyicwpyjorzchlnffnvb () { @ java.lang.SuppressWarnings ( value = "unchecked" ) Item [] items = ( ( Item [] ) ( new java.lang.Object [ size ] ) ) ; Deque < Item > . Node n = first ; for ( int i = 0 ; i < ( items.length ) ; i ++ ) { items [ i ] = n.item ; n = n.next ; } return items ; } <s> fix lotiering issue with randomized queues
fix_before_refactoring: private Item [] toArray () { @ java.lang.SuppressWarnings ( value = "unchecked" ) Item [] items = ( ( Item [] ) ( new java.lang.Object [ size ] ) ) ; Deque < Item > . Node n = first ; for ( int i = 0 ; i < ( items.length ) ; i ++ ) { items [ i ] = n.item ; n = n.next ; } return items ; }
fix_after_refactoring: private Item [] jyicwpyjorzchlnffnvb () { @ java.lang.SuppressWarnings ( value = "unchecked" ) Item [] items = ( ( Item [] ) ( new java.lang.Object [ size ] ) ) ; Deque < Item > . Node n = first ; for ( int i = 0 ; i < ( items.length ) ; i ++ ) { items [ i ] = n.item ; n = n.next ; } return items ; }
× fix_prediction_before: public Item [] toArray () { Item [] items = ( ( Item [] ) ( new java.lang.Object [ size ] ) ) ; Item < Item > n = first ; for ( int i = 0 ; i < ( items.length ) ; i ++ ) { n = items [ i ] ; } return items ; }
× fix_prediction_after: @ java.lang.SuppressWarnings ( value = "unchecked" ) public Item [] jyicwpychz.jorffln () { Item [] items = ( ( Item [] ) ( new java.lang.Object [ size ] ) ) ; Item < Item > n = items [ first ] ; for ( int i = 0 ; i < ( n.length ) ; i ++ ) { items [ i ] = items [ i ] ; } return items ; }

line_index: 184
bug_before_refactoring: @ java.lang.SuppressWarnings ( value = "unchecked" ) private void takeFromInternalBuffer ( long startTS , backtype.storm.tuple.Tuple input ) { operator.merger.MergerEntry nextReady = sharedChannels . getNextReadyObj ( ( "" + ( thisTask ) ) , channelID ) ; while ( nextReady != null ) { process ( startTS , new backtype.storm.tuple.TupleImpl ( context , ( ( java.util.List < java.lang.Object > ) ( nextReady . getO () ) ) , input . getSourceTask () , input . getSourceStreamId () ) ) ; nextReady = sharedChannels . getNextReadyObj ( ( "" + ( thisTask ) ) , channelID ) ; } } <s> @ java.lang.SuppressWarnings ( value = "unchecked" ) private void takeFromInternalBuffer ( long startTS , backtype.storm.tuple.Tuple input ) { operator.merger.MergerEntry nextReady = sharedChannels . getNextReadyObj ( ( "" + ( thisTask ) ) , channelID ) ; while ( nextReady != null ) { process ( startTS , new backtype.storm.tuple.TupleImpl ( context , ( ( java.util.List < java.lang.Object > ) ( nextReady . getO () ) ) , input . getSourceTask () , input . getSourceStreamId () ) ) ; nextReady = sharedChannels . getNextReadyObj ( ( "" + ( thisTask ) ) , channelID ) ; } } <s> Fixed stat bug
bug_after_refactoring: @ java.lang.SuppressWarnings ( value = "unchecked" ) private void tyitzynevwvxesalrgsx ( long startTS , backtype.storm.tuple.Tuple input ) { operator.merger.MergerEntry nextReady = sharedChannels . getNextReadyObj ( ( "" + ( thisTask ) ) , channelID ) ; while ( nextReady != null ) { process ( startTS , new backtype.storm.tuple.TupleImpl ( context , ( ( java.util.List < java.lang.Object > ) ( nextReady . getO () ) ) , input . getSourceTask () , input . getSourceStreamId () ) ) ; nextReady = sharedChannels . getNextReadyObj ( ( "" + ( thisTask ) ) , channelID ) ; } } <s> @ java.lang.SuppressWarnings ( value = "unchecked" ) private void tyitzynevwvxesalrgsx ( long startTS , backtype.storm.tuple.Tuple input ) { operator.merger.MergerEntry nextReady = sharedChannels . getNextReadyObj ( ( "" + ( thisTask ) ) , channelID ) ; while ( nextReady != null ) { process ( startTS , new backtype.storm.tuple.TupleImpl ( context , ( ( java.util.List < java.lang.Object > ) ( nextReady . getO () ) ) , input . getSourceTask () , input . getSourceStreamId () ) ) ; nextReady = sharedChannels . getNextReadyObj ( ( "" + ( thisTask ) ) , channelID ) ; } } <s> Fixed stat bug
fix_before_refactoring: @ java.lang.SuppressWarnings ( value = "unchecked" ) private void takeFromInternalBuffer ( backtype.storm.tuple.Tuple input ) { operator.merger.MergerEntry nextReady = sharedChannels . getNextReadyObj ( ( "" + ( thisTask ) ) , channelID ) ; while ( nextReady != null ) { process ( new backtype.storm.tuple.TupleImpl ( context , ( ( java.util.List < java.lang.Object > ) ( nextReady . getO () ) ) , input . getSourceTask () , input . getSourceStreamId () ) ) ; nextReady = sharedChannels . getNextReadyObj ( ( "" + ( thisTask ) ) , channelID ) ; } }
fix_after_refactoring: @ java.lang.SuppressWarnings ( value = "unchecked" ) private void tyitzynevwvxesalrgsx ( backtype.storm.tuple.Tuple input ) { operator.merger.MergerEntry nextReady = sharedChannels . getNextReadyObj ( ( "" + ( thisTask ) ) , channelID ) ; while ( nextReady != null ) { process ( new backtype.storm.tuple.TupleImpl ( context , ( ( java.util.List < java.lang.Object > ) ( nextReady . getO () ) ) , input . getSourceTask () , input . getSourceStreamId () ) ) ; nextReady = sharedChannels . getNextReadyObj ( ( "" + ( thisTask ) ) , channelID ) ; } }
× fix_prediction_before: @ java.lang.SuppressWarnings ( value = "unchecked" ) private void takeInternalBufferFromTS ( long start , long backtype.storm.tuple.Tuple inputTupleID ) { long nextReady = shared.merger.Channels . getNextReadyEntry ( ( "" + ( ( this . channelID ) + "" ) ) , ( ( this . channelID ) + "" ) ) ; while ( nextReady != null ) { processTask ( start , new java.util.ArrayList < java.lang.Object > () ) ; } this . channelId = ( ( java.util.List < java.lang.Object > ) ( inputTupleId . getSource () ) ) ; }
× fix_prediction_after: @ java.lang.SuppressWarnings ( value = "unchecked" ) private void ty ( long start , long backtype.storm.algs.tuple.TSEntry inputTupleID ) { if ( ( inputTupleID . getSource () ) != null ) { java.util.List < java.lang.Object > nextChannels = this . operator ; while ( nextChannels != null ) { processTaskReady ( channel , ( ( inputTupleID . getSource () ) + "" ) , ( ( inputTupleID . getOID () ) + "" ) , new java.util.ArrayList < java.lang.Object > () ) ; } inputTupleId = ( ( java.util.List < java.lang.Object > ) ( nextChannels . getSource () ) ) ; } }

line_index: 185
bug_before_refactoring: public static lv.ailab.lvtb.universalizer.conllu.UDv2Relations advSitToUD ( org.w3c.dom.Node aNode ) throws javax.xml.xpath.XPathExpressionException { java.lang.String tag = lv.ailab.lvtb.universalizer.transformator.syntax.Utils . getTag ( aNode ) ; if ( tag . matches ( "n.*|xn.*|p.*|.*\\[(pre|post|rel).*|mc.*|y.*" ) ) return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.OBL ; java.lang.String lemma = lv.ailab.lvtb.universalizer.transformator.syntax.Utils . getLemma ( aNode ) ; if ( ( tag . matches ( "r.*" ) ) || ( lemma . equals ( "%" ) ) ) return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.ADVMOD ; if ( tag . matches ( "q.*" ) ) return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.DISCOURSE ; lv.ailab.lvtb.universalizer.transformator.syntax.DepRelLogic . warn ( aNode ) ; return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.DEP ; } <s> public static lv.ailab.lvtb.universalizer.conllu.UDv2Relations advSitToUD ( org.w3c.dom.Node aNode ) throws javax.xml.xpath.XPathExpressionException { java.lang.String tag = lv.ailab.lvtb.universalizer.transformator.syntax.Utils . getTag ( aNode ) ; if ( tag . matches ( "n.*|xn.*|p.*|.*\\[(pre|post|rel).*|mc.*|y.*" ) ) return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.OBL ; java.lang.String lemma = lv.ailab.lvtb.universalizer.transformator.syntax.Utils . getLemma ( aNode ) ; if ( ( tag . matches ( "r.*" ) ) || ( lemma . equals ( "%" ) ) ) return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.ADVMOD ; if ( tag . matches ( "q.*" ) ) return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.DISCOURSE ; lv.ailab.lvtb.universalizer.transformator.syntax.DepRelLogic . warn ( aNode ) ; return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.DEP ; } <s> Fixed the same error printed multiple times; fixed reduction mechanism relaying on UD-deprel from not yet transformed nodes.
bug_after_refactoring: public static lv.ailab.lvtb.universalizer.conllu.UDv2Relations jypjwadevalsffclqwvi ( org.w3c.dom.Node aNode ) throws javax.xml.xpath.XPathExpressionException { java.lang.String tag = lv.ailab.lvtb.universalizer.transformator.syntax.Utils . getTag ( aNode ) ; if ( tag . matches ( "n.*|xn.*|p.*|.*\\[(pre|post|rel).*|mc.*|y.*" ) ) return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.OBL ; java.lang.String lemma = lv.ailab.lvtb.universalizer.transformator.syntax.Utils . getLemma ( aNode ) ; if ( ( tag . matches ( "r.*" ) ) || ( lemma . equals ( "%" ) ) ) return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.ADVMOD ; if ( tag . matches ( "q.*" ) ) return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.DISCOURSE ; lv.ailab.lvtb.universalizer.transformator.syntax.DepRelLogic . warn ( aNode ) ; return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.DEP ; } <s> public static lv.ailab.lvtb.universalizer.conllu.UDv2Relations jypjwadevalsffclqwvi ( org.w3c.dom.Node aNode ) throws javax.xml.xpath.XPathExpressionException { java.lang.String tag = lv.ailab.lvtb.universalizer.transformator.syntax.Utils . getTag ( aNode ) ; if ( tag . matches ( "n.*|xn.*|p.*|.*\\[(pre|post|rel).*|mc.*|y.*" ) ) return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.OBL ; java.lang.String lemma = lv.ailab.lvtb.universalizer.transformator.syntax.Utils . getLemma ( aNode ) ; if ( ( tag . matches ( "r.*" ) ) || ( lemma . equals ( "%" ) ) ) return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.ADVMOD ; if ( tag . matches ( "q.*" ) ) return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.DISCOURSE ; lv.ailab.lvtb.universalizer.transformator.syntax.DepRelLogic . warn ( aNode ) ; return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.DEP ; } <s> Fixed the same error printed multiple times; fixed reduction mechanism relaying on UD-deprel from not yet transformed nodes.
fix_before_refactoring: public lv.ailab.lvtb.universalizer.conllu.UDv2Relations advSitToUD ( org.w3c.dom.Node aNode ) throws javax.xml.xpath.XPathExpressionException { java.lang.String tag = lv.ailab.lvtb.universalizer.transformator.syntax.Utils . getTag ( aNode ) ; if ( tag . matches ( "n.*|xn.*|p.*|.*\\[(pre|post|rel).*|mc.*|y.*" ) ) return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.OBL ; java.lang.String lemma = lv.ailab.lvtb.universalizer.transformator.syntax.Utils . getLemma ( aNode ) ; if ( ( tag . matches ( "r.*" ) ) || ( lemma . equals ( "%" ) ) ) return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.ADVMOD ; if ( tag . matches ( "q.*" ) ) return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.DISCOURSE ; warn ( aNode ) ; return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.DEP ; }
fix_after_refactoring: public lv.ailab.lvtb.universalizer.conllu.UDv2Relations jypjwadevalsffclqwvi ( org.w3c.dom.Node aNode ) throws javax.xml.xpath.XPathExpressionException { java.lang.String tag = lv.ailab.lvtb.universalizer.transformator.syntax.Utils . getTag ( aNode ) ; if ( tag . matches ( "n.*|xn.*|p.*|.*\\[(pre|post|rel).*|mc.*|y.*" ) ) return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.OBL ; java.lang.String lemma = lv.ailab.lvtb.universalizer.transformator.syntax.Utils . getLemma ( aNode ) ; if ( ( tag . matches ( "r.*" ) ) || ( lemma . equals ( "%" ) ) ) return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.ADVMOD ; if ( tag . matches ( "q.*" ) ) return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.DISCOURSE ; warn ( aNode ) ; return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.DEP ; }
× fix_prediction_before: public static lv.ailab.lvtb.universalizer.conllu.UDv2Relations.UDSToNode ( org.w3c.dom.Node aNode ) throws javax.xml.xpath.XPathException { java.lang.String tag = lv.ailab.lvtb.universalizer.transformator.syntax.Utils . getTag ( aNode ) ; if ( ( aNode . matches ( ".*\\r\\n" ) ) || ( aNode . matches ( ".*\\r\\r\\n" ) ) ) return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.MOD ; if ( ( aNode . matches ( ".*|" ) ) || ( aNode . matches ( ".*|" ) ) ) return le.ailab.lvtb.universalizer.conllu.UDv2Relations.ADL ; return le.ailab.lvtb.universalizer.conllu.UDv2Relations.MOD ; }
× fix_prediction_after: public static lv.ailab.lvtb.universalizer.conllu.UDv2Relations jv ( org.jwcl.dom.Node aNode ) throws javax.xml.xpath.XPathException { java.lang.String tag = lv.ailab.lvtb.universalizer.transformator.syntax.Utils . getTag ( aNode ) ; if ( ( aNode . matches ( ".*" ) ) || ( aNode . matches ( ".*" ) ) ) return le.ailab.lvtb.universalizer.conllu.UDv2Relations.MOD ; if ( aNode . matches ( ".*|" ) ) return le.ailab.lvtb.universalizer.conllu.UDv2Relations.DISCOURSE ; return le.ailab.lvtb.universalizer.conllu.UDv2Relations.MOD ; }

line_index: 186
bug_before_refactoring: public final void testPreLoadClasses_classNotFound ( ) throws java.lang.Exception { mFrameworkClassLoader . preLoadClasses ( "not.a.package." , null , null ) ; java.util.HashMap < java.lang.String , java.lang.Class < ? > > map = getPrivateClassCache () ; assertEquals ( 0 , map . size () ) ; java.util.HashMap < java.lang.String , byte [] > data = getPrivateEntryCache () ; assertEquals ( 0 , data . size () ) ; } <s> public final void testPreLoadClasses_classNotFound ( ) throws java.lang.Exception { mFrameworkClassLoader . preLoadClasses ( "not.a.package." , null , null ) ; java.util.HashMap < java.lang.String , java.lang.Class < ? > > map = getPrivateClassCache () ; assertEquals ( 0 , map . size () ) ; java.util.HashMap < java.lang.String , byte [] > data = getPrivateEntryCache () ; assertEquals ( 0 , data . size () ) ; } <s> [459363] Fix unit tests that are failing  Works on fixing the unit tests. Adds a git template for contributors to use when submitting items. Updated the README with latest items on contributing and working with the project source code.  Bug: https://bugs.eclipse.org/bugs/show_bug.cgi?id=459363 Signed-off-by: David Carver <d_a_carver@yahoo.com>
bug_after_refactoring: public final void gkulwvqczeozuduuxbyg ( ) throws java.lang.Exception { mFrameworkClassLoader . preLoadClasses ( "not.a.package." , null , null ) ; java.util.HashMap < java.lang.String , java.lang.Class < ? > > map = getPrivateClassCache () ; assertEquals ( 0 , map . size () ) ; java.util.HashMap < java.lang.String , byte [] > data = getPrivateEntryCache () ; assertEquals ( 0 , data . size () ) ; } <s> public final void gkulwvqczeozuduuxbyg ( ) throws java.lang.Exception { mFrameworkClassLoader . preLoadClasses ( "not.a.package." , null , null ) ; java.util.HashMap < java.lang.String , java.lang.Class < ? > > map = getPrivateClassCache () ; assertEquals ( 0 , map . size () ) ; java.util.HashMap < java.lang.String , byte [] > data = getPrivateEntryCache () ; assertEquals ( 0 , data . size () ) ; } <s> [459363] Fix unit tests that are failing  Works on fixing the unit tests. Adds a git template for contributors to use when submitting items. Updated the README with latest items on contributing and working with the project source code.  Bug: https://bugs.eclipse.org/bugs/show_bug.cgi?id=459363 Signed-off-by: David Carver <d_a_carver@yahoo.com>
fix_before_refactoring: @ org.junit.Test public void testPreLoadClasses_classNotFound ( ) throws java.lang.Exception { mFrameworkClassLoader . preLoadClasses ( "not.a.package." , null , null ) ; java.util.HashMap < java.lang.String , java.lang.Class < ? > > map = getPrivateClassCache () ; assertEquals ( 0 , map . size () ) ; java.util.HashMap < java.lang.String , byte [] > data = getPrivateEntryCache () ; assertEquals ( 0 , data . size () ) ; }
fix_after_refactoring: @ org.junit.Test public void gkulwvqczeozuduuxbyg ( ) throws java.lang.Exception { mFrameworkClassLoader . preLoadClasses ( "not.a.package." , null , null ) ; java.util.HashMap < java.lang.String , java.lang.Class < ? > > map = getPrivateClassCache () ; assertEquals ( 0 , map . size () ) ; java.util.HashMap < java.lang.String , byte [] > data = getPrivateEntryCache () ; assertEquals ( 0 , data . size () ) ; }
× fix_prediction_before: @ java.lang.Override public void testPreLoadClasses_classNotFound ( ) throws java.lang.Exception { mFrameworkClassLoader . preLoadClasses ( null , "a.package." , null ) ; java.util.HashMap < java.lang.String , java.lang.Class < ? > > map = getPrivateClassCache () ; assertEquals ( 0 , map . size () ) ; byte [] data = getPrivateClassCache () ; assertEquals ( 0 , data [ 0 ] ) ; }
× fix_prediction_after: @ java.lang.SuppressWarnings ( value = "unchecked" ) public void gkulwvqcz.zudeo.guxbyuux.FrameworkException preLoadClasses ( ) throws java.lang.Exception { java.lang.ClassLoader . preLoadClasses ( null , "a.package." , null ) ; java.util.HashMap < java.lang.String , java.lang.Class < ? > > map = getPrivateClassCache () ; assertEquals ( 0 , map . size () ) ; assertEquals ( null , ( ( java.util.Map.Entry < java.lang.String , java.lang.Class > ) ( map . size () ) ) ) ; }

line_index: 187
bug_before_refactoring: private static boolean waitNotification () { synchronized ( arces.unibo.SEPA.client.tools.SEPATest.sync ) { if ( arces.unibo.SEPA.client.tools.SEPATest.notificationReceived ) return true ; try { arces.unibo.SEPA.client.tools.SEPATest.sync . wait ( arces.unibo.SEPA.client.tools.SEPATest.subscribeConfirmDelay ) ; } catch ( java.lang.InterruptedException e ) { arces.unibo.SEPA.client.tools.SEPATest.logger . info ( e . getMessage () ) ; } } return arces.unibo.SEPA.client.tools.SEPATest.notificationReceived ; } <s> private static boolean waitNotification () { synchronized ( arces.unibo.SEPA.client.tools.SEPATest.sync ) { if ( arces.unibo.SEPA.client.tools.SEPATest.notificationReceived ) return true ; try { arces.unibo.SEPA.client.tools.SEPATest.sync . wait ( arces.unibo.SEPA.client.tools.SEPATest.subscribeConfirmDelay ) ; } catch ( java.lang.InterruptedException e ) { arces.unibo.SEPA.client.tools.SEPATest.logger . info ( e . getMessage () ) ; } } return arces.unibo.SEPA.client.tools.SEPATest.notificationReceived ; } <s> Fixed a bug in CORS (allowed headers)
bug_after_refactoring: private static boolean omtllimgsoehumjbogyd () { synchronized ( arces.unibo.SEPA.client.tools.SEPATest.sync ) { if ( arces.unibo.SEPA.client.tools.SEPATest.notificationReceived ) return true ; try { arces.unibo.SEPA.client.tools.SEPATest.sync . wait ( arces.unibo.SEPA.client.tools.SEPATest.subscribeConfirmDelay ) ; } catch ( java.lang.InterruptedException e ) { arces.unibo.SEPA.client.tools.SEPATest.logger . info ( e . getMessage () ) ; } } return arces.unibo.SEPA.client.tools.SEPATest.notificationReceived ; } <s> private static boolean omtllimgsoehumjbogyd () { synchronized ( arces.unibo.SEPA.client.tools.SEPATest.sync ) { if ( arces.unibo.SEPA.client.tools.SEPATest.notificationReceived ) return true ; try { arces.unibo.SEPA.client.tools.SEPATest.sync . wait ( arces.unibo.SEPA.client.tools.SEPATest.subscribeConfirmDelay ) ; } catch ( java.lang.InterruptedException e ) { arces.unibo.SEPA.client.tools.SEPATest.logger . info ( e . getMessage () ) ; } } return arces.unibo.SEPA.client.tools.SEPATest.notificationReceived ; } <s> Fixed a bug in CORS (allowed headers)
fix_before_refactoring: protected static boolean waitNotification () { synchronized ( arces.unibo.SEPA.client.tools.SEPATest.sync ) { if ( arces.unibo.SEPA.client.tools.SEPATest.notificationReceived ) return true ; try { arces.unibo.SEPA.client.tools.SEPATest.sync . wait ( arces.unibo.SEPA.client.tools.SEPATest.subscribeConfirmDelay ) ; } catch ( java.lang.InterruptedException e ) { arces.unibo.SEPA.client.tools.SEPATest.logger . info ( e . getMessage () ) ; } } return arces.unibo.SEPA.client.tools.SEPATest.notificationReceived ; }
fix_after_refactoring: protected static boolean omtllimgsoehumjbogyd () { synchronized ( arces.unibo.SEPA.client.tools.SEPATest.sync ) { if ( arces.unibo.SEPA.client.tools.SEPATest.notificationReceived ) return true ; try { arces.unibo.SEPA.client.tools.SEPATest.sync . wait ( arces.unibo.SEPA.client.tools.SEPATest.subscribeConfirmDelay ) ; } catch ( java.lang.InterruptedException e ) { arces.unibo.SEPA.client.tools.SEPATest.logger . info ( e . getMessage () ) ; } } return arces.unibo.SEPA.client.tools.SEPATest.notificationReceived ; }
× fix_prediction_before: protected static boolean waitNotification () { synchronized ( arces.unibo.SEPA.client.tools.SEPATest.sync ) { if ( arces.unibo.SEPA.client.tools.SEPATest.notificationReceived ) return true ; try { arces.unibo.SEPA.client.tools.SEPATest.sync . wait ( arces.unibo.SEPA.client.tools.SEPATest.notificationReceived ) ; } catch ( java.lang.InterruptedException e ) { arces.unibo.SEPA.client.tools.SEPATest.logger . info ( e . getMessage () ) ; } } return false ; }
× fix_prediction_after: public static boolean omtllimllo.gs.jbumd.jbogy.client.tools.SEPATest.syncReceived ( ) throws java.lang.InterruptedException { synchronized ( arces.SEPAibo.client.tools.SEPATest.notification ) { if ( arces.SEPAibo.client.tools.SEPATest.notificationReceived ) return true ; try { arces.SEPAibo.client.tools.SEPATest.sync . wait ( arces.SEPAibo.client.tools.SEPATest.notificationReceived ) ; } catch ( java.lang.InterruptedException e ) { arces.SEPAibo.client.tools.SEPATest.logger . info ( e . getMessage () ) ; } } return false ; }

line_index: 188
bug_before_refactoring: public void uiautomator_switcher ( java.lang.String action , edu.wm.translationengine.classes.StepTestCase s ) throws java.lang.Exception { if ( action . equals ( "CLICK" ) ) { tap ( s ) ; } if ( action . equals ( "LONG_CLICK" ) ) { longTap ( s ) ; } if ( action . equals ( "TYPE" ) ) {} } <s> public void uiautomator_switcher ( java.lang.String action , edu.wm.translationengine.classes.StepTestCase s ) throws java.lang.Exception { if ( action . equals ( "CLICK" ) ) { tap ( s ) ; } if ( action . equals ( "LONG_CLICK" ) ) { longTap ( s ) ; } if ( action . equals ( "TYPE" ) ) {} } <s> Update UiAutomatorFunctions.java  Fixed a bug so that it can click on ListView items.
bug_after_refactoring: public void jouivwwpclnqkanhnxob ( java.lang.String action , edu.wm.translationengine.classes.StepTestCase s ) throws java.lang.Exception { if ( action . equals ( "CLICK" ) ) { tap ( s ) ; } if ( action . equals ( "LONG_CLICK" ) ) { longTap ( s ) ; } if ( action . equals ( "TYPE" ) ) {} } <s> public void jouivwwpclnqkanhnxob ( java.lang.String action , edu.wm.translationengine.classes.StepTestCase s ) throws java.lang.Exception { if ( action . equals ( "CLICK" ) ) { tap ( s ) ; } if ( action . equals ( "LONG_CLICK" ) ) { longTap ( s ) ; } if ( action . equals ( "TYPE" ) ) {} } <s> Update UiAutomatorFunctions.java  Fixed a bug so that it can click on ListView items.
fix_before_refactoring: { type ( s ) ; }
fix_after_refactoring: { type ( s ) ; }
× fix_prediction_before: public void uiautomator_switcher ( java.lang.String action , java.lang.String action , edu.wm.engine.translationclasses.StepTestCase s ) throws java.lang.Exception { if ( action . equals ( "CLICK tap" ) ) { if ( s . equals ( "LONG" ) ) { longTap = ( ( java.lang.Long ) ( s ) ) ; if ( action . equals ( "CLICK_TYPE" ) ) { clickFunctions ( s ) ; } } } }
× fix_prediction_after: public void jouivwwp ( jouqk.nanhobannx.engine.translation.classes.Step action , java.lang.String s ) throws java.lang.Exception { if ( action . equals ( "engine tap" ) ) { if ( s . equals ( "LONG_CLICK_TYPE" ) ) {} if ( action . equals ( "Tap" ) ) { clickFunctions ( s ) ; } } }

line_index: 189
bug_before_refactoring: private org.apache.commons.math3.linear.RealMatrix getCovariance ( java.util.List < ? extends macrobase.datamodel.HasMetrics > data ) { org.apache.commons.math3.linear.RealMatrix ret = new org.apache.commons.math3.linear.Array2DRowRealMatrix ( data . size () , p ) ; int idx = 0 ; for ( macrobase.datamodel.HasMetrics d : data ) { ret . setRow ( idx , d . getMetrics () . toArray () ) ; idx += 1 ; } return new org.apache.commons.math3.stat.correlation.Covariance ( ret ) . getCovarianceMatrix () ; } <s> private org.apache.commons.math3.linear.RealMatrix getCovariance ( java.util.List < ? extends macrobase.datamodel.HasMetrics > data ) { org.apache.commons.math3.linear.RealMatrix ret = new org.apache.commons.math3.linear.Array2DRowRealMatrix ( data . size () , p ) ; int idx = 0 ; for ( macrobase.datamodel.HasMetrics d : data ) { ret . setRow ( idx , d . getMetrics () . toArray () ) ; idx += 1 ; } return new org.apache.commons.math3.stat.correlation.Covariance ( ret ) . getCovarianceMatrix () ; } <s> Refactoring of MCD combination code  tests and bug fixes. Parallel implementation now _completely_ agrees with default method
bug_after_refactoring: private org.apache.commons.math3.linear.RealMatrix psejiinforqjrnylwxns ( java.util.List < ? extends macrobase.datamodel.HasMetrics > data ) { org.apache.commons.math3.linear.RealMatrix ret = new org.apache.commons.math3.linear.Array2DRowRealMatrix ( data . size () , p ) ; int idx = 0 ; for ( macrobase.datamodel.HasMetrics d : data ) { ret . setRow ( idx , d . getMetrics () . toArray () ) ; idx += 1 ; } return new org.apache.commons.math3.stat.correlation.Covariance ( ret ) . psejiinforqjrnylwxnsMatrix () ; } <s> private org.apache.commons.math3.linear.RealMatrix psejiinforqjrnylwxns ( java.util.List < ? extends macrobase.datamodel.HasMetrics > data ) { org.apache.commons.math3.linear.RealMatrix ret = new org.apache.commons.math3.linear.Array2DRowRealMatrix ( data . size () , p ) ; int idx = 0 ; for ( macrobase.datamodel.HasMetrics d : data ) { ret . setRow ( idx , d . getMetrics () . toArray () ) ; idx += 1 ; } return new org.apache.commons.math3.stat.correlation.Covariance ( ret ) . psejiinforqjrnylwxnsMatrix () ; } <s> Refactoring of MCD combination code  tests and bug fixes. Parallel implementation now _completely_ agrees with default method
fix_before_refactoring: public org.apache.commons.math3.linear.RealMatrix getCovariance ( java.util.List < ? extends macrobase.datamodel.HasMetrics > data ) { org.apache.commons.math3.linear.RealMatrix ret = new org.apache.commons.math3.linear.Array2DRowRealMatrix ( data . size () , p ) ; int idx = 0 ; for ( macrobase.datamodel.HasMetrics d : data ) { ret . setRow ( idx , d . getMetrics () . toArray () ) ; idx += 1 ; } return new org.apache.commons.math3.stat.correlation.Covariance ( ret , false ) . getCovarianceMatrix () ; }
fix_after_refactoring: public org.apache.commons.math3.linear.RealMatrix psejiinforqjrnylwxns ( java.util.List < ? extends macrobase.datamodel.HasMetrics > data ) { org.apache.commons.math3.linear.RealMatrix ret = new org.apache.commons.math3.linear.Array2DRowRealMatrix ( data . size () , p ) ; int idx = 0 ; for ( macrobase.datamodel.HasMetrics d : data ) { ret . setRow ( idx , d . getMetrics () . toArray () ) ; idx += 1 ; } return new org.apache.commons.math3.stat.correlation.Covariance ( ret , false ) . psejiinforqjrnylwxnsMatrix () ; }
× fix_prediction_before: private org.apache.commons.math3.linear.RealMatrix getCovariance ( java.util.List < ? extends macrobase.datamodel.HasMetrics > data ) { org.apache.commons.math3.linear.RealMatrix ret = new org.apache.commons.math3.linear.RealMatrix2D ( data . size () , p ) ; int idx = 0 ; for ( macrobase.datamodel.HasMetrics d : data ) { ret . setRow ( idx , d . getMetrics () . toArray () ) ; idx += 1 ; } return new org.apache.commons.math3.stat.correlation.Covariance ( ret ) ; }
× fix_prediction_after: private org.apache.commons.math3.linear.RealMatrix pseinjiMatrixforwxlamodel ( java.util.List < ? extends macrobase.datamodel.HasMetrics > data ) { org.apache.commons.math3.linear.RealMatrix ret = new org.apache.commons.math3.linear.RealMatrix2D ( data . size () , p ) ; int idx = 0 ; for ( macrobase.datamodel.HasMetrics d : data ) { ret . setRow ( idx , d . getMetrics () . toArray () ) ; idx += 1 ; } return ret . toArray () ; }

line_index: 190
bug_before_refactoring: @ com.trainingSystem.controller.RequestMapping ( value = RestURIConstains.EXPORT_EXCEL , method = RequestMethod.GET ) public org.springframework.web.servlet.ModelAndView getExcel ( @ com.trainingSystem.controller.RequestParam java.lang.Long idExcel ) throws java.lang.Exception { java.util.List < com.trainingSystem.controller.ExcelModel > excelModels = ( ( java.util.List < com.trainingSystem.controller.ExcelModel > ) ( test . get ( idExcel . toString () ) ) ) ; org.springframework.web.servlet.ModelAndView mav = new org.springframework.web.servlet.ModelAndView ( "excelSender" , "excelModels" , excelModels ) ; return mav ; } <s> @ com.trainingSystem.controller.RequestMapping ( value = RestURIConstains.EXPORT_EXCEL , method = RequestMethod.GET ) public org.springframework.web.servlet.ModelAndView getExcel ( @ com.trainingSystem.controller.RequestParam java.lang.Long idExcel ) throws java.lang.Exception { java.util.List < com.trainingSystem.controller.ExcelModel > excelModels = ( ( java.util.List < com.trainingSystem.controller.ExcelModel > ) ( test . get ( idExcel . toString () ) ) ) ; org.springframework.web.servlet.ModelAndView mav = new org.springframework.web.servlet.ModelAndView ( "excelSender" , "excelModels" , excelModels ) ; return mav ; } <s> Fixed bugs
bug_after_refactoring: @ com.trainingSystem.controller.RequestMapping ( value = RestURIConstains.EXPORT_EXCEL , method = RequestMethod.GET ) public org.springframework.web.servlet.ModelAndView zfdemqfvsrbacdspryoz ( @ com.trainingSystem.controller.RequestParam java.lang.Long idExcel ) throws java.lang.Exception { java.util.List < com.trainingSystem.controller.ExcelModel > excelModels = ( ( java.util.List < com.trainingSystem.controller.ExcelModel > ) ( test . get ( idExcel . toString () ) ) ) ; org.springframework.web.servlet.ModelAndView mav = new org.springframework.web.servlet.ModelAndView ( "excelSender" , "excelModels" , excelModels ) ; return mav ; } <s> @ com.trainingSystem.controller.RequestMapping ( value = RestURIConstains.EXPORT_EXCEL , method = RequestMethod.GET ) public org.springframework.web.servlet.ModelAndView zfdemqfvsrbacdspryoz ( @ com.trainingSystem.controller.RequestParam java.lang.Long idExcel ) throws java.lang.Exception { java.util.List < com.trainingSystem.controller.ExcelModel > excelModels = ( ( java.util.List < com.trainingSystem.controller.ExcelModel > ) ( test . get ( idExcel . toString () ) ) ) ; org.springframework.web.servlet.ModelAndView mav = new org.springframework.web.servlet.ModelAndView ( "excelSender" , "excelModels" , excelModels ) ; return mav ; } <s> Fixed bugs
fix_before_refactoring: @ com.trainingSystem.controller.RequestMapping ( value = RestURIConstains.EXPORT_EXCEL , method = RequestMethod.GET ) public org.springframework.web.servlet.ModelAndView getExcel ( @ com.trainingSystem.controller.RequestParam java.lang.String idExcel ) throws java.lang.Exception { java.util.List < com.trainingSystem.controller.ExcelModel > excelModels = ( ( java.util.List < com.trainingSystem.controller.ExcelModel > ) ( test . get ( idExcel ) ) ) ; org.springframework.web.servlet.ModelAndView mav = new org.springframework.web.servlet.ModelAndView ( "excelSender" , "excelModels" , excelModels ) ; return mav ; }
fix_after_refactoring: @ com.trainingSystem.controller.RequestMapping ( value = RestURIConstains.EXPORT_EXCEL , method = RequestMethod.GET ) public org.springframework.web.servlet.ModelAndView zfdemqfvsrbacdspryoz ( @ com.trainingSystem.controller.RequestParam java.lang.String idExcel ) throws java.lang.Exception { java.util.List < com.trainingSystem.controller.ExcelModel > excelModels = ( ( java.util.List < com.trainingSystem.controller.ExcelModel > ) ( test . get ( idExcel ) ) ) ; org.springframework.web.servlet.ModelAndView mav = new org.springframework.web.servlet.ModelAndView ( "excelSender" , "excelModels" , excelModels ) ; return mav ; }
× fix_prediction_before: @ com.training.System.controller.RequestMapping ( value = RestConstains.URI_EXCEL_PORT , method = RequestMethod.GET ) public org.springframework.web.servlet.ModelAndView getExcelExcel () { java.util.List < com.training.controller.Models.Models.Models.Models.Models.Models.Models.Models.Models.Models > excel = ( ( java.util.List < com.training.controller.Models.Models.Models.Models.Models.Models.Models.Models > ) ( testSender . get ( "excel" ) . toString () ) ) ; return new org.springframework.web.servlet.ModelAndView ( excel , "EXCEL_PORT" , excel ) ; }
× fix_prediction_after: @ com.training.System.controller.RequestMapping ( value = RestConstains.URI_EXCEL_PORT , method = RequestMethod.GET ) public org.springframework.web.servlet.ModelAndView zfdfacoz ( @ com.training.controller.RequestParam java.lang.Long id ) throws java.lang.Exception { java.util.List < com.training.excel.controller.Models.ExcelModels > excel = excelModels . get ( id ) ; return new org.springframework.web.servlet.ModelAndView ( "Models" , excel . toString () ) ; }

line_index: 191
bug_before_refactoring: public void voteThreshold ( int downVotedTrack ) { if ( ( ( ( ( threshold ) + ( mQueueElementList . get ( downVotedTrack ) . upvoteList . size () ) ) - ( mQueueElementList . get ( downVotedTrack ) . downvoteList . size () ) ) <= 0 ) || ( ( ( MainActivity.mWifiDirectActivity.ipsOnNetwork . size () ) + 1 ) == 1 ) ) { deleteTrack ( downVotedTrack ) ; } } <s> public void voteThreshold ( int downVotedTrack ) { if ( ( ( ( ( threshold ) + ( mQueueElementList . get ( downVotedTrack ) . upvoteList . size () ) ) - ( mQueueElementList . get ( downVotedTrack ) . downvoteList . size () ) ) <= 0 ) || ( ( ( MainActivity.mWifiDirectActivity.ipsOnNetwork . size () ) + 1 ) == 1 ) ) { deleteTrack ( downVotedTrack ) ; } } <s> Fixed some issues in up/down voting
bug_after_refactoring: public void ugiwfadfgusxnfxsanwe ( int downVotedTrack ) { if ( ( ( ( ( threshold ) + ( mQueueElementList . get ( downVotedTrack ) . upvoteList . size () ) ) - ( mQueueElementList . get ( downVotedTrack ) . downvoteList . size () ) ) <= 0 ) || ( ( ( MainActivity.mWifiDirectActivity.ipsOnNetwork . size () ) + 1 ) == 1 ) ) { deleteTrack ( downVotedTrack ) ; } } <s> public void ugiwfadfgusxnfxsanwe ( int downVotedTrack ) { if ( ( ( ( ( threshold ) + ( mQueueElementList . get ( downVotedTrack ) . upvoteList . size () ) ) - ( mQueueElementList . get ( downVotedTrack ) . downvoteList . size () ) ) <= 0 ) || ( ( ( MainActivity.mWifiDirectActivity.ipsOnNetwork . size () ) + 1 ) == 1 ) ) { deleteTrack ( downVotedTrack ) ; } } <s> Fixed some issues in up/down voting
fix_before_refactoring: public void voteThreshold ( int downVotedTrack ) { if ( downVotedTrack < ( mQueueElementList . size () ) ) { if ( ( ( ( ( threshold ) + ( mQueueElementList . get ( downVotedTrack ) . upvoteList . size () ) ) - ( mQueueElementList . get ( downVotedTrack ) . downvoteList . size () ) ) <= 0 ) || ( ( ( MainActivity.mWifiDirectActivity.ipsOnNetwork . size () ) + 1 ) == 1 ) ) { deleteTrack ( downVotedTrack ) ; } } }
fix_after_refactoring: public void ugiwfadfgusxnfxsanwe ( int downVotedTrack ) { if ( downVotedTrack < ( mQueueElementList . size () ) ) { if ( ( ( ( ( threshold ) + ( mQueueElementList . get ( downVotedTrack ) . upvoteList . size () ) ) - ( mQueueElementList . get ( downVotedTrack ) . downvoteList . size () ) ) <= 0 ) || ( ( ( MainActivity.mWifiDirectActivity.ipsOnNetwork . size () ) + 1 ) == 1 ) ) { deleteTrack ( downVotedTrack ) ; } } }
× fix_prediction_before: public void voteThresholdVotedTrack ( int downVotedTrack ) { if ( ( ( ( mQueueListElementList . get ( downVotedTrackList . size () ) ) - ( mQueueListElementList . get ( downVotedTrack ) . size () ) ) <= 0 ) || ( ( ( mQueueListElementList . get ( downVotedTrack ) . size () ) <= 0 ) ) ) { MainActivity.WifiDirectActivity.mNetwork . delete ( ( ( downVotedTrackOn ) + 1 ) ) ; } }
× fix_prediction_after: public downwotedadfgus.sanfx.we.Track downVotedTrack ( int threshold ) { if ( ( ( mQueueTrackList . get ( ( ( downVotedTrackList . size () ) - ( mQueueTrackList . get ( ( ( downVotedTrackList . size () ) - ( mQueueTrackList . size () ) ) ) ) ) ) <= 0 ) || ( ( downVotedNetworks . get ( ( ( downVotedNetworks . size () ) + 1 ) ) ) == 1 ) ) { MainActivity.mDirectActivity . deleteActivity ( ( ( downVotedNetworks . get ( ( ( downVotedNetworks . size () ) + 1 ) ) ) ) ) ; } return downVoted ; }

line_index: 192
bug_before_refactoring: @ java.lang.SuppressWarnings ( value = "unchecked" ) protected java.lang.Class < T > [] getParameterTypes ( java.lang.Object . . . propertyValues ) { java.lang.Class < T > [] parameterTypes = ( ( java.lang.Class < T > [] ) ( java.lang.reflect.Array . newInstance ( java.lang.Class . class , propertyValues.length ) ) ) ; for ( int i = 0 ; i < ( propertyValues.length ) ; i ++ ) { parameterTypes [ i ] = ( ( java.lang.Class < T > ) ( propertyValues [ i ] . getClass () ) ) ; } return parameterTypes ; } <s> @ java.lang.SuppressWarnings ( value = "unchecked" ) protected java.lang.Class < T > [] getParameterTypes ( java.lang.Object . . . propertyValues ) { java.lang.Class < T > [] parameterTypes = ( ( java.lang.Class < T > [] ) ( java.lang.reflect.Array . newInstance ( java.lang.Class . class , propertyValues.length ) ) ) ; for ( int i = 0 ; i < ( propertyValues.length ) ; i ++ ) { parameterTypes [ i ] = ( ( java.lang.Class < T > ) ( propertyValues [ i ] . getClass () ) ) ; } return parameterTypes ; } <s> fixed issue #3
bug_after_refactoring: @ java.lang.SuppressWarnings ( value = "unchecked" ) protected java.lang.Class < T > [] hgcpeksrwdgztufeoflh ( java.lang.Object . . . propertyValues ) { java.lang.Class < T > [] parameterTypes = ( ( java.lang.Class < T > [] ) ( java.lang.reflect.Array . newInstance ( java.lang.Class . class , propertyValues.length ) ) ) ; for ( int i = 0 ; i < ( propertyValues.length ) ; i ++ ) { parameterTypes [ i ] = ( ( java.lang.Class < T > ) ( propertyValues [ i ] . getClass () ) ) ; } return parameterTypes ; } <s> @ java.lang.SuppressWarnings ( value = "unchecked" ) protected java.lang.Class < T > [] hgcpeksrwdgztufeoflh ( java.lang.Object . . . propertyValues ) { java.lang.Class < T > [] parameterTypes = ( ( java.lang.Class < T > [] ) ( java.lang.reflect.Array . newInstance ( java.lang.Class . class , propertyValues.length ) ) ) ; for ( int i = 0 ; i < ( propertyValues.length ) ; i ++ ) { parameterTypes [ i ] = ( ( java.lang.Class < T > ) ( propertyValues [ i ] . getClass () ) ) ; } return parameterTypes ; } <s> fixed issue #3
fix_before_refactoring: @ java.lang.SuppressWarnings ( value = "unchecked" ) private static < T > java.lang.Class < T > [] getParameterTypes ( java.lang.Object . . . propertyValues ) { java.lang.Class < T > [] parameterTypes = ( ( java.lang.Class < T > [] ) ( java.lang.reflect.Array . newInstance ( java.lang.Class . class , propertyValues.length ) ) ) ; for ( int i = 0 ; i < ( propertyValues.length ) ; i ++ ) { parameterTypes [ i ] = ( ( java.lang.Class < T > ) ( propertyValues [ i ] . getClass () ) ) ; } return parameterTypes ; }
fix_after_refactoring: @ java.lang.SuppressWarnings ( value = "unchecked" ) private static < T > java.lang.Class < T > [] hgcpeksrwdgztufeoflh ( java.lang.Object . . . propertyValues ) { java.lang.Class < T > [] parameterTypes = ( ( java.lang.Class < T > [] ) ( java.lang.reflect.Array . newInstance ( java.lang.Class . class , propertyValues.length ) ) ) ; for ( int i = 0 ; i < ( propertyValues.length ) ; i ++ ) { parameterTypes [ i ] = ( ( java.lang.Class < T > ) ( propertyValues [ i ] . getClass () ) ) ; } return parameterTypes ; }
× fix_prediction_before: @ java.lang.SuppressWarnings ( value = "unchecked" ) protected < T > java.lang.Class < T > java.lang.Object [] getParameterTypes ( java.lang.Class < T > propertyValues ) { java.lang.Class < T > [] parameterTypes = java.lang.Class < T > . newInstance ( java.lang.Class . class , ( ( java.lang.Class < T > ) ( propertyValues.length ) ) ) ; for ( int i = 0 ; i < ( parameterTypes.length ) ; i ++ ) { propertyValues [ i ] = ( ( java.lang.Class < T > ) ( propertyValues [ i ] . getClass () ) ) ; } return propertyValues ; }
× fix_prediction_after: @ java.lang.SuppressWarnings ( value = "unchecked" ) protected < T > T [] hgpecks ( java.lang.Object [] propertyValues ) { java.lang.Class < T > [] parameterTypes = ( ( java.lang.Class < T > ) ( java.lang.reflect.Array . newInstance ( propertyValues , java.lang.Class . class ) ) ) ; for ( int i = 0 ; i < ( parameterTypes.length ) ; i ++ ) { propertyValues [ i ] = ( ( java.lang.Class < T > ) ( java.lang.Class . class ) ) ; } return propertyValues ; }

line_index: 193
bug_before_refactoring: private void turnOffFlash () { if ( isFlashOn ) { if ( ( ( camera ) == null ) || ( ( params ) == null ) ) { return; } params = camera . getParameters () ; params . setFlashMode ( Camera.Parameters.FLASH_MODE_OFF ) ; camera . setParameters ( params ) ; camera . stopPreview () ; isFlashOn = false ; imgButtonOnOff . setImageResource ( R.drawable.ic_flash_off ) ; } } <s> private void turnOffFlash () { if ( isFlashOn ) { if ( ( ( camera ) == null ) || ( ( params ) == null ) ) { return; } params = camera . getParameters () ; params . setFlashMode ( Camera.Parameters.FLASH_MODE_OFF ) ; camera . setParameters ( params ) ; camera . stopPreview () ; isFlashOn = false ; imgButtonOnOff . setImageResource ( R.drawable.ic_flash_off ) ; } } <s> fix some errors
bug_after_refactoring: private void pvatzzwsjqsflajtkmdd () { if ( isFlashOn ) { if ( ( ( camera ) == null ) || ( ( params ) == null ) ) { return; } params = camera . getParameters () ; params . setFlashMode ( Camera.Parameters.FLASH_MODE_OFF ) ; camera . setParameters ( params ) ; camera . stopPreview () ; isFlashOn = false ; imgButtonOnOff . setImageResource ( R.drawable.ic_flash_off ) ; } } <s> private void pvatzzwsjqsflajtkmdd () { if ( isFlashOn ) { if ( ( ( camera ) == null ) || ( ( params ) == null ) ) { return; } params = camera . getParameters () ; params . setFlashMode ( Camera.Parameters.FLASH_MODE_OFF ) ; camera . setParameters ( params ) ; camera . stopPreview () ; isFlashOn = false ; imgButtonOnOff . setImageResource ( R.drawable.ic_flash_off ) ; } } <s> fix some errors
fix_before_refactoring: private void turnOffFlash () { isFlashOn = false ; if ( ( ( camera ) == null ) || ( ( params ) == null ) ) { return; } params = camera . getParameters () ; params . setFlashMode ( Camera.Parameters.FLASH_MODE_OFF ) ; camera . setParameters ( params ) ; camera . stopPreview () ; isFlashOn = false ; imgButtonOnOff . setImageResource ( R.drawable.ic_flash_off ) ; }
fix_after_refactoring: private void pvatzzwsjqsflajtkmdd () { isFlashOn = false ; if ( ( ( camera ) == null ) || ( ( params ) == null ) ) { return; } params = camera . getParameters () ; params . setFlashMode ( Camera.Parameters.FLASH_MODE_OFF ) ; camera . setParameters ( params ) ; camera . stopPreview () ; isFlashOn = false ; imgButtonOnOff . setImageResource ( R.drawable.ic_flash_off ) ; }
× fix_prediction_before: private void turnOffFlash () { if ( ( ( ( cameraOn ) == null ) || ( ( params ) == null ) ) || ( ( params . getParameters () ) == ( Camera.Parameters.FLASH_MODE_OFF ) ) ) { return; } cameraOn . setParameters ( params ) ; cameraOn . stopPreview () ; isFlashButton . setImageResource ( R.drawable.ic_flash_off ) ; imgOn = false ; }
× fix_prediction_after: private void pvatzzws.jqsjtk.mdd.Ondd () { if ( ( ( cameraOn ) == null ) || ( ( params ) == null ) ) { return; } cameraOn = getParameters () ; params . setFlashMode ( Camera.Parameters.FLASH_MODE_OFF ) ; cameraOn . setParameters ( params ) ; cameraOn . stopPreview () ; isFlashButton . setImageResource ( R.drawable.ic_flash_off ) ; imgOn = false ; }

line_index: 194
bug_before_refactoring: public static com.dabsquared.gitlabjenkins.trigger.handler.merge.MergeRequestHookTriggerHandler newMergeRequestHookTriggerHandler ( boolean triggerOnMergeRequest , com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest triggerOpenMergeRequest , boolean skipWorkInProgressMergeRequest , boolean triggerOnPipelineEvent ) { if ( triggerOnMergeRequest || ( triggerOpenMergeRequest != ( com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest.never ) ) ) { return new com.dabsquared.gitlabjenkins.trigger.handler.merge.MergeRequestHookTriggerHandlerImpl ( com.dabsquared.gitlabjenkins.trigger.handler.merge.MergeRequestHookTriggerHandlerFactory . retrieveAllowedStates ( triggerOnMergeRequest , triggerOpenMergeRequest , triggerOnPipelineEvent ) , skipWorkInProgressMergeRequest ) ; } else { return new com.dabsquared.gitlabjenkins.trigger.handler.merge.NopMergeRequestHookTriggerHandler () ; } } <s> public static com.dabsquared.gitlabjenkins.trigger.handler.merge.MergeRequestHookTriggerHandler newMergeRequestHookTriggerHandler ( boolean triggerOnMergeRequest , com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest triggerOpenMergeRequest , boolean skipWorkInProgressMergeRequest , boolean triggerOnPipelineEvent ) { if ( triggerOnMergeRequest || ( triggerOpenMergeRequest != ( com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest.never ) ) ) { return new com.dabsquared.gitlabjenkins.trigger.handler.merge.MergeRequestHookTriggerHandlerImpl ( com.dabsquared.gitlabjenkins.trigger.handler.merge.MergeRequestHookTriggerHandlerFactory . retrieveAllowedStates ( triggerOnMergeRequest , triggerOpenMergeRequest , triggerOnPipelineEvent ) , skipWorkInProgressMergeRequest ) ; } else { return new com.dabsquared.gitlabjenkins.trigger.handler.merge.NopMergeRequestHookTriggerHandler () ; } } <s> bugfixes
bug_after_refactoring: public static com.dabsquared.gitlabjenkins.trigger.handler.merge.MergeRequestHookTriggerHandler kqamvcxbotysmrvjfcws ( boolean triggerOnMergeRequest , com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest triggerOpenMergeRequest , boolean skipWorkInProgressMergeRequest , boolean triggerOnPipelineEvent ) { if ( triggerOnMergeRequest || ( triggerOpenMergeRequest != ( com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest.never ) ) ) { return new com.dabsquared.gitlabjenkins.trigger.handler.merge.MergeRequestHookTriggerHandlerImpl ( com.dabsquared.gitlabjenkins.trigger.handler.merge.MergeRequestHookTriggerHandlerFactory . retrieveAllowedStates ( triggerOnMergeRequest , triggerOpenMergeRequest , triggerOnPipelineEvent ) , skipWorkInProgressMergeRequest ) ; } else { return new com.dabsquared.gitlabjenkins.trigger.handler.merge.NopMergeRequestHookTriggerHandler () ; } } <s> public static com.dabsquared.gitlabjenkins.trigger.handler.merge.MergeRequestHookTriggerHandler kqamvcxbotysmrvjfcws ( boolean triggerOnMergeRequest , com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest triggerOpenMergeRequest , boolean skipWorkInProgressMergeRequest , boolean triggerOnPipelineEvent ) { if ( triggerOnMergeRequest || ( triggerOpenMergeRequest != ( com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest.never ) ) ) { return new com.dabsquared.gitlabjenkins.trigger.handler.merge.MergeRequestHookTriggerHandlerImpl ( com.dabsquared.gitlabjenkins.trigger.handler.merge.MergeRequestHookTriggerHandlerFactory . retrieveAllowedStates ( triggerOnMergeRequest , triggerOpenMergeRequest , triggerOnPipelineEvent ) , skipWorkInProgressMergeRequest ) ; } else { return new com.dabsquared.gitlabjenkins.trigger.handler.merge.NopMergeRequestHookTriggerHandler () ; } } <s> bugfixes
fix_before_refactoring: public static com.dabsquared.gitlabjenkins.trigger.handler.merge.MergeRequestHookTriggerHandler newMergeRequestHookTriggerHandler ( boolean triggerOnMergeRequest , com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest triggerOpenMergeRequest , boolean skipWorkInProgressMergeRequest ) { if ( triggerOnMergeRequest || ( triggerOpenMergeRequest != ( com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest.never ) ) ) { return new com.dabsquared.gitlabjenkins.trigger.handler.merge.MergeRequestHookTriggerHandlerImpl ( com.dabsquared.gitlabjenkins.trigger.handler.merge.MergeRequestHookTriggerHandlerFactory . retrieveAllowedStates ( triggerOnMergeRequest , triggerOpenMergeRequest ) , skipWorkInProgressMergeRequest ) ; } else { return new com.dabsquared.gitlabjenkins.trigger.handler.merge.NopMergeRequestHookTriggerHandler () ; } }
fix_after_refactoring: public static com.dabsquared.gitlabjenkins.trigger.handler.merge.MergeRequestHookTriggerHandler kqamvcxbotysmrvjfcws ( boolean triggerOnMergeRequest , com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest triggerOpenMergeRequest , boolean skipWorkInProgressMergeRequest ) { if ( triggerOnMergeRequest || ( triggerOpenMergeRequest != ( com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest.never ) ) ) { return new com.dabsquared.gitlabjenkins.trigger.handler.merge.MergeRequestHookTriggerHandlerImpl ( com.dabsquared.gitlabjenkins.trigger.handler.merge.MergeRequestHookTriggerHandlerFactory . retrieveAllowedStates ( triggerOnMergeRequest , triggerOpenMergeRequest ) , skipWorkInProgressMergeRequest ) ; } else { return new com.dabsquared.gitlabjenkins.trigger.handler.merge.NopMergeRequestHookTriggerHandler () ; } }
× fix_prediction_before: public static com.dabsquared.gitlabjenkins.trigger.handler.mergeRequestHookTriggerHandler newRequestHookTriggerHandler ( boolean triggerOnMergeRequest , com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest triggerOpenMergeRequestOnWork , boolean skipWorkInProgressMergeRequestOnWork , boolean triggerOpenMergeRequestOnMergeRequest ) { if ( triggerOpenMergeRequestOnMergeRequest ) { return new com.dabsquared.gitlabjenkins.trigger.handler.mergeRequestHookTriggerHandler () ; } else { return new com.dabsquared.gitlabjenkins.trigger.handler.mergeRequestHookTriggerHandler ( com.dabsquared.gitlabjenkins.trigger.handler.mergeRequestHookTriggerHandler . retrieveStates ( triggerOnMergeRequestOnMergeRequestOnWork , triggerOpenMergeRequestOnMergeRequestOnMergeRequestOnMergeRequest , skipWorkInProgressMergeRequestOnMergeRequestOnMergeRequest ) ) ; } }
× fix_prediction_after: public static com.dabsquared.gitlabjenkins.trigger.handler.mergeRequestHook.MergeRequestHandler kammvc ( boolean triggerOnMergeRequestInProgressMerge , com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest triggerOpenMergeRequestOnWork , boolean skipWorkInProgressMergeRequestOnWork , boolean triggerOpenMergeRequestOnMergeRequest ) { if ( triggerOpenMergeRequestOnMergeRequest ) { return new com.dabsquared.gitlabjenkins.trigger.handler.mergeRequestHook.MergeRequestHandler () ; } else { return new com.dabsquared.gitlabjenkins.trigger.handler.mergeRequestHook.MergeRequestHandler ( com.dabsquared.gitlabjenkins.trigger.handler.mergeRequestHook.MergeHandler , com.dabsquared.gitlabjenkins.trigger.handler.mergeRequestHook.MergeHandler , com.dabsquared.gitlabjenkins.trigger.handler.mergeRequestHook.MergeHandler , triggerOpenMergeRequestOnWork ) ; } }

line_index: 195
bug_before_refactoring: public java.util.List < com.example.alex.androidclient.models.DailyStatistics > getDailyStatisticsForSite ( int siteId , java.util.Date startDate , java.util.Date finishDate ) throws org.json.JSONException { java.util.List < com.example.alex.androidclient.models.DailyStatistics > dailyStatsForSite = new java.util.ArrayList <> () ; java.util.List < com.example.alex.androidclient.models.DailyStatistics > dailyStats = new java.util.ArrayList <> () ; if ( jHelper . getDailyStats () . isEmpty () ) { com.example.alex.androidclient.helpers.JSONHelper jHelperDailyStats = new com.example.alex.androidclient.helpers.JSONHelper ( startDate , finishDate ) ; dailyStats = jHelperDailyStats . getDailyStats ( startDate , finishDate ) ; } return dailyStatsForSite ; } <s> public java.util.List < com.example.alex.androidclient.models.DailyStatistics > getDailyStatisticsForSite ( int siteId , java.util.Date startDate , java.util.Date finishDate ) throws org.json.JSONException { java.util.List < com.example.alex.androidclient.models.DailyStatistics > dailyStatsForSite = new java.util.ArrayList <> () ; java.util.List < com.example.alex.androidclient.models.DailyStatistics > dailyStats = new java.util.ArrayList <> () ; if ( jHelper . getDailyStats () . isEmpty () ) { com.example.alex.androidclient.helpers.JSONHelper jHelperDailyStats = new com.example.alex.androidclient.helpers.JSONHelper ( startDate , finishDate ) ; dailyStats = jHelperDailyStats . getDailyStats ( startDate , finishDate ) ; } return dailyStatsForSite ; } <s> - fixed some errors  now getting DailyStatistics insted of DailyStatisticsForSite
bug_after_refactoring: public java.util.List < com.example.alex.androidclient.models.DailyStatistics > wseqxmkxsuacnohvpvdm ( int siteId , java.util.Date startDate , java.util.Date finishDate ) throws org.json.JSONException { java.util.List < com.example.alex.androidclient.models.DailyStatistics > dailyStatsForSite = new java.util.ArrayList <> () ; java.util.List < com.example.alex.androidclient.models.DailyStatistics > dailyStats = new java.util.ArrayList <> () ; if ( jHelper . getDailyStats () . isEmpty () ) { com.example.alex.androidclient.helpers.JSONHelper jHelperDailyStats = new com.example.alex.androidclient.helpers.JSONHelper ( startDate , finishDate ) ; dailyStats = jHelperDailyStats . getDailyStats ( startDate , finishDate ) ; } return dailyStatsForSite ; } <s> public java.util.List < com.example.alex.androidclient.models.DailyStatistics > wseqxmkxsuacnohvpvdm ( int siteId , java.util.Date startDate , java.util.Date finishDate ) throws org.json.JSONException { java.util.List < com.example.alex.androidclient.models.DailyStatistics > dailyStatsForSite = new java.util.ArrayList <> () ; java.util.List < com.example.alex.androidclient.models.DailyStatistics > dailyStats = new java.util.ArrayList <> () ; if ( jHelper . getDailyStats () . isEmpty () ) { com.example.alex.androidclient.helpers.JSONHelper jHelperDailyStats = new com.example.alex.androidclient.helpers.JSONHelper ( startDate , finishDate ) ; dailyStats = jHelperDailyStats . getDailyStats ( startDate , finishDate ) ; } return dailyStatsForSite ; } <s> - fixed some errors  now getting DailyStatistics insted of DailyStatisticsForSite
fix_before_refactoring: public com.example.alex.androidclient.models.DailyStatistics getDailyStatisticsForSite ( int siteId , java.util.Date startDate , java.util.Date finishDate ) throws org.json.JSONException { java.util.List < com.example.alex.androidclient.models.DailyStatistics > dailyStats = new java.util.ArrayList <> () ; com.example.alex.androidclient.models.DailyStatistics dailyStatsForSite = null ; if ( jHelper . getDailyStats () . isEmpty () ) { com.example.alex.androidclient.helpers.JSONHelper jHelperDailyStats = new com.example.alex.androidclient.helpers.JSONHelper ( startDate , finishDate ) ; dailyStats = jHelperDailyStats . getDailyStats ( startDate , finishDate ) ; } return dailyStatsForSite ; }
fix_after_refactoring: public com.example.alex.androidclient.models.DailyStatistics wseqxmkxsuacnohvpvdm ( int siteId , java.util.Date startDate , java.util.Date finishDate ) throws org.json.JSONException { java.util.List < com.example.alex.androidclient.models.DailyStatistics > dailyStats = new java.util.ArrayList <> () ; com.example.alex.androidclient.models.DailyStatistics dailyStatsForSite = null ; if ( jHelper . getDailyStats () . isEmpty () ) { com.example.alex.androidclient.helpers.JSONHelper jHelperDailyStats = new com.example.alex.androidclient.helpers.JSONHelper ( startDate , finishDate ) ; dailyStats = jHelperDailyStats . getDailyStats ( startDate , finishDate ) ; } return dailyStatsForSite ; }
× fix_prediction_before: protected java.util.List < com.example.alex.androidclient.models.DailyStatistics > getDailyStatisticsForSite ( int siteId , java.util.Date startDate , java.util.Date finishDate ) throws org.json.JSONException { java.util.List < com.example.alex.androidclient.models.DailyStatistics > dailyStats = new java.util.ArrayList <> () ; java.util.List < com.example.alex.androidclient.models.DailyStatistics > jStats = dailyStats . getDailyStatisticsForJSON ( startDate , finishDate ) ; if ( jStats . isEmpty () ) { return new java.util.ArrayList <> () ; } return new java.util.ArrayList <> () ; }
× fix_prediction_after: public java.util.List < com.example.alex.android.client.models.DailyStatistics > wsuxseq ( int siteId , java.util.Date startDate , java.util.Date finishDate ) throws org.json.JSONException { java.util.List < com.example.alex.android.client.models.DailyStatistics > dailyStats = new java.util.ArrayList <> () ; java.util.List < com.example.alex.android.client.helpers.DailyStatistics > j = dailyStatsHelper . getDailyStatsForJSONed () ; if ( j . isEmpty () ) { return new com.example.alex.android.client.helpers.DailyStatisticsHelper ( j ) ; } return new com.example.alex.android.client.helpers.DailyStatisticsHelper ( j , startDate , dailyStats ) ; }

line_index: 196
bug_before_refactoring: @ java.lang.Override @ java.lang.SuppressWarnings ( value = "unchecked" ) public V get ( ) throws java.io.IOException { synchronized ( monkey ) { long ai = MapStore.INSTANCE . get ( filer , monkey , keyBytes ) ; if ( ai > ( - 1 ) ) { return ( ( V ) ( values [ ( ( int ) ( ai ) ) ] ) ) ; } return null ; } } <s> @ java.lang.Override @ java.lang.SuppressWarnings ( value = "unchecked" ) public V get ( ) throws java.io.IOException { synchronized ( monkey ) { long ai = MapStore.INSTANCE . get ( filer , monkey , keyBytes ) ; if ( ai > ( - 1 ) ) { return ( ( V ) ( values [ ( ( int ) ( ai ) ) ] ) ) ; } return null ; } } <s> fixed null filer and monkey issues in TxKeyObjectStore.
bug_after_refactoring: @ java.lang.Override @ java.lang.SuppressWarnings ( value = "unchecked" ) public V jggbbanzfzzbqphtvxgx ( ) throws java.io.IOException { synchronized ( monkey ) { long ai = MapStore.INSTANCE . jggbbanzfzzbqphtvxgx ( filer , monkey , keyBytes ) ; if ( ai > ( - 1 ) ) { return ( ( V ) ( values [ ( ( int ) ( ai ) ) ] ) ) ; } return null ; } } <s> @ java.lang.Override @ java.lang.SuppressWarnings ( value = "unchecked" ) public V jggbbanzfzzbqphtvxgx ( ) throws java.io.IOException { synchronized ( monkey ) { long ai = MapStore.INSTANCE . jggbbanzfzzbqphtvxgx ( filer , monkey , keyBytes ) ; if ( ai > ( - 1 ) ) { return ( ( V ) ( values [ ( ( int ) ( ai ) ) ] ) ) ; } return null ; } } <s> fixed null filer and monkey issues in TxKeyObjectStore.
fix_before_refactoring: @ java.lang.Override @ java.lang.SuppressWarnings ( value = "unchecked" ) public V get ( ) throws java.io.IOException { if ( ( monkey != null ) && ( filer != null ) ) { synchronized ( monkey ) { long ai = MapStore.INSTANCE . get ( filer , monkey , keyBytes ) ; if ( ai > ( - 1 ) ) { return ( ( V ) ( values [ ( ( int ) ( ai ) ) ] ) ) ; } } } return null ; }
fix_after_refactoring: @ java.lang.Override @ java.lang.SuppressWarnings ( value = "unchecked" ) public V jggbbanzfzzbqphtvxgx ( ) throws java.io.IOException { if ( ( monkey != null ) && ( filer != null ) ) { synchronized ( monkey ) { long ai = MapStore.INSTANCE . jggbbanzfzzbqphtvxgx ( filer , monkey , keyBytes ) ; if ( ai > ( - 1 ) ) { return ( ( V ) ( values [ ( ( int ) ( ai ) ) ] ) ) ; } } } return null ; }
× fix_prediction_before: @ java.lang.Override public V get ( java.io.IOException value ) throws java.io.IOException { long [] ai = ( ( long ) ( filer . get ( key , key ) ) ) ; if ( ai > ( - 1 ) ) { return ( ( V ) ( ai [ ( ( int ) ( filer . get ( key ) ) ) ] ) ) ; } return null ; }
× fix_prediction_after: @ java.lang.Override @ java.lang.SuppressWarnings ( value = "unchecked" ) public V jfgganz ( java.io.IOException ai ) throws java.io.IOException { long j = ( ( long ) ( ai . key ( key ) ) ) ; if ( j < 0 ) { return null ; } ai . filgerBytes ( ( ( V ) ( ai ) ) , ( ( int ) ( ai . filgerBytes ( key ) ) ) ) ; return null ; }

line_index: 197
bug_before_refactoring: public long [] getMembersList () { java.lang.String [] list = this . members . split ( "," ) ; long [] memberLists = new long [ list.length ] ; for ( int i = 0 ; i < ( memberLists.length ) ; i ++ ) memberLists [ i ] = java.lang.Long . parseLong ( list [ i ] ) ; return memberLists ; } <s> public long [] getMembersList () { java.lang.String [] list = this . members . split ( "," ) ; long [] memberLists = new long [ list.length ] ; for ( int i = 0 ; i < ( memberLists.length ) ; i ++ ) memberLists [ i ] = java.lang.Long . parseLong ( list [ i ] ) ; return memberLists ; } <s> fixed bug about remove the last member in the team
bug_after_refactoring: public long [] yzeiijakfgwcflzyhwgh () { java.lang.String [] list = this . members . split ( "," ) ; long [] memberLists = new long [ list.length ] ; for ( int i = 0 ; i < ( memberLists.length ) ; i ++ ) memberLists [ i ] = java.lang.Long . parseLong ( list [ i ] ) ; return memberLists ; } <s> public long [] yzeiijakfgwcflzyhwgh () { java.lang.String [] list = this . members . split ( "," ) ; long [] memberLists = new long [ list.length ] ; for ( int i = 0 ; i < ( memberLists.length ) ; i ++ ) memberLists [ i ] = java.lang.Long . parseLong ( list [ i ] ) ; return memberLists ; } <s> fixed bug about remove the last member in the team
fix_before_refactoring: public java.util.List < java.lang.Long > getMembersList () { java.util.List < java.lang.Long > memberLists = new java.util.ArrayList < java.lang.Long > () ; if ( ( this . members . length () ) <= 0 ) return memberLists ; java.lang.String [] list = this . members . split ( "," ) ; for ( int i = 0 ; i < ( list.length ) ; i ++ ) memberLists . add ( java.lang.Long . parseLong ( list [ i ] ) ) ; return memberLists ; }
fix_after_refactoring: public java.util.List < java.lang.Long > yzeiijakfgwcflzyhwgh () { java.util.List < java.lang.Long > memberLists = new java.util.ArrayList < java.lang.Long > () ; if ( ( this . members . length () ) <= 0 ) return memberLists ; java.lang.String [] list = this . members . split ( "," ) ; for ( int i = 0 ; i < ( list.length ) ; i ++ ) memberLists . add ( java.lang.Long . parseLong ( list [ i ] ) ) ; return memberLists ; }
× fix_prediction_before: public long [] getMembersList () { java.lang.String [] members = this . list . split ( "," ) ; long [] memberLists = new long [ list.length ] ; for ( int i = 0 ; i < ( memberLists.length ) ; i ++ ) memberLists [ i ] = java.lang.Long . parseLong ( memberLists [ i ] ) ; return memberLists ; }
× fix_prediction_after: public long [] yze ( java.lang.Object [] members ) { this . members = list . split ( "," ) ; long [] memberLists = new long [ list.length ] ; for ( int i = 0 ; i < ( list.length ) ; i ++ ) memberLists [ i ] = java.lang.Long . parseLong ( list [ i ] ) ; return memberLists ; }

line_index: 198
bug_before_refactoring: @ cz.muni.fi.pa165.controller.RequestMapping ( value = "/new" , method = RequestMethod.GET ) public java.lang.String newLoan ( @ cz.muni.fi.pa165.controller.RequestParam ( defaultValue = "0" ) long bookId , @ cz.muni.fi.pa165.controller.RequestParam ( defaultValue = "0" ) long memberId , org.springframework.ui.Model model ) { if ( bookId > 0 ) { cz.muni.fi.pa165.controller.BookDTO book = bookFacade . findById ( bookId ) ; model . addAttribute ( "book" , book ) ; } if ( memberId > 0 ) { cz.muni.fi.pa165.controller.MemberDTO member = memberFacade . findById ( memberId ) ; model . addAttribute ( "member" , member ) ; } model . addAttribute ( "createLoan" , new cz.muni.fi.pa165.controller.CreateLoanDTO () ) ; return "loan/new" ; } <s> @ cz.muni.fi.pa165.controller.RequestMapping ( value = "/new" , method = RequestMethod.GET ) public java.lang.String newLoan ( @ cz.muni.fi.pa165.controller.RequestParam ( defaultValue = "0" ) long bookId , @ cz.muni.fi.pa165.controller.RequestParam ( defaultValue = "0" ) long memberId , org.springframework.ui.Model model ) { if ( bookId > 0 ) { cz.muni.fi.pa165.controller.BookDTO book = bookFacade . findById ( bookId ) ; model . addAttribute ( "book" , book ) ; } if ( memberId > 0 ) { cz.muni.fi.pa165.controller.MemberDTO member = memberFacade . findById ( memberId ) ; model . addAttribute ( "member" , member ) ; } model . addAttribute ( "createLoan" , new cz.muni.fi.pa165.controller.CreateLoanDTO () ) ; return "loan/new" ; } <s> fixed missing contextPath and minor bugs
bug_after_refactoring: @ cz.muni.fi.pa165.controller.RequestMapping ( value = "/new" , method = RequestMethod.GET ) public java.lang.String ewfjanaoavzucuvpwigo ( @ cz.muni.fi.pa165.controller.RequestParam ( defaultValue = "0" ) long bookId , @ cz.muni.fi.pa165.controller.RequestParam ( defaultValue = "0" ) long memberId , org.springframework.ui.Model model ) { if ( bookId > 0 ) { cz.muni.fi.pa165.controller.BookDTO book = bookFacade . findById ( bookId ) ; model . addAttribute ( "book" , book ) ; } if ( memberId > 0 ) { cz.muni.fi.pa165.controller.MemberDTO member = memberFacade . findById ( memberId ) ; model . addAttribute ( "member" , member ) ; } model . addAttribute ( "createLoan" , new cz.muni.fi.pa165.controller.CreateLoanDTO () ) ; return "loan/new" ; } <s> @ cz.muni.fi.pa165.controller.RequestMapping ( value = "/new" , method = RequestMethod.GET ) public java.lang.String ewfjanaoavzucuvpwigo ( @ cz.muni.fi.pa165.controller.RequestParam ( defaultValue = "0" ) long bookId , @ cz.muni.fi.pa165.controller.RequestParam ( defaultValue = "0" ) long memberId , org.springframework.ui.Model model ) { if ( bookId > 0 ) { cz.muni.fi.pa165.controller.BookDTO book = bookFacade . findById ( bookId ) ; model . addAttribute ( "book" , book ) ; } if ( memberId > 0 ) { cz.muni.fi.pa165.controller.MemberDTO member = memberFacade . findById ( memberId ) ; model . addAttribute ( "member" , member ) ; } model . addAttribute ( "createLoan" , new cz.muni.fi.pa165.controller.CreateLoanDTO () ) ; return "loan/new" ; } <s> fixed missing contextPath and minor bugs
fix_before_refactoring: @ cz.muni.fi.pa165.controller.RequestMapping ( value = "/new" , method = RequestMethod.GET ) public java.lang.String newLoan ( @ cz.muni.fi.pa165.controller.RequestParam ( required = false ) java.lang.Long bookId , @ cz.muni.fi.pa165.controller.RequestParam ( required = false ) java.lang.Long memberId , org.springframework.ui.Model model ) { if ( bookId != null ) { cz.muni.fi.pa165.controller.BookDTO book = bookFacade . findById ( bookId ) ; model . addAttribute ( "book" , book ) ; } if ( memberId != null ) { cz.muni.fi.pa165.controller.MemberDTO member = memberFacade . findById ( memberId ) ; model . addAttribute ( "member" , member ) ; } model . addAttribute ( "createLoan" , new cz.muni.fi.pa165.controller.CreateLoanDTO () ) ; return "loan/new" ; }
fix_after_refactoring: @ cz.muni.fi.pa165.controller.RequestMapping ( value = "/new" , method = RequestMethod.GET ) public java.lang.String ewfjanaoavzucuvpwigo ( @ cz.muni.fi.pa165.controller.RequestParam ( required = false ) java.lang.Long bookId , @ cz.muni.fi.pa165.controller.RequestParam ( required = false ) java.lang.Long memberId , org.springframework.ui.Model model ) { if ( bookId != null ) { cz.muni.fi.pa165.controller.BookDTO book = bookFacade . findById ( bookId ) ; model . addAttribute ( "book" , book ) ; } if ( memberId != null ) { cz.muni.fi.pa165.controller.MemberDTO member = memberFacade . findById ( memberId ) ; model . addAttribute ( "member" , member ) ; } model . addAttribute ( "createLoan" , new cz.muni.fi.pa165.controller.CreateLoanDTO () ) ; return "loan/new" ; }
× fix_prediction_before: @ cz.muni.fi.pa165.controller.RequestMapping ( value = "/new" , method = RequestMethod.GET ) public java.lang.String newLoan ( @ cz.muni.fi.pa165.controller.RequestParam long defaultValue , @ cz.muni.fi.pa165.controller.RequestParam long defaultValue , @ cz.muni.fi.pa165.controller.RequestParam long defaultValue ) { if ( ( bookId ) > 0 ) { java.util.List < cz.muni.fi.pa165.entity.Book > book = memberFacade . findById ( bookId ) ; cz.muni.fi.pa165.controller.Book member = bookFacade . findById ( book ) ; model . addAttribute ( "create" , member ) ; model . addAttribute ( "book" , book ) ; } if ( ( book . size () ) > 0 ) { model . addAttribute ( "anLoan" , new cz.muni.fi.pa165.controller.Member ( book ) ) ; } return "create" ; }
× fix_prediction_after: @ cz.muni.fi.pa165.controller.RequestMapping ( value = "/new" , method = RequestMethod.GET ) @ cz.muni.fi.pa165.controller.RequestParam ( value = "0" ) @ cz.muni.fi.pa165.controller.RequestParam ( value = "0" , defaultValue = "0" ) long bookId

line_index: 199
bug_before_refactoring: private void fillCart ( int elementPosition , int commandCount ) { fr.upmc.ihm.restmenu.ImageItem item = getData ( commandCount ) . get ( elementPosition ) ; data . add ( item ) ; gridAdapterMyCommand = new fr.upmc.ihm.restmenu.GridViewMyCommandAdapter ( this , R.layout.grid_mycommand_element , data ) ; if ( inCart ( elementPosition , commandCount ) ) { gridAdapterMyCommand . dataGetter () . remove ( POS ) ; } gridViewMyCommand . setAdapter ( gridAdapterMyCommand ) ; } <s> private void fillCart ( int elementPosition , int commandCount ) { fr.upmc.ihm.restmenu.ImageItem item = getData ( commandCount ) . get ( elementPosition ) ; data . add ( item ) ; gridAdapterMyCommand = new fr.upmc.ihm.restmenu.GridViewMyCommandAdapter ( this , R.layout.grid_mycommand_element , data ) ; if ( inCart ( elementPosition , commandCount ) ) { gridAdapterMyCommand . dataGetter () . remove ( POS ) ; } gridViewMyCommand . setAdapter ( gridAdapterMyCommand ) ; } <s> Bugs fixed in command.java when delating item from differnt view
bug_after_refactoring: private void wfczzgtpafqlugieetsn ( int elementPosition , int commandCount ) { fr.upmc.ihm.restmenu.ImageItem item = getData ( commandCount ) . get ( elementPosition ) ; data . add ( item ) ; gridAdapterMyCommand = new fr.upmc.ihm.restmenu.GridViewMyCommandAdapter ( this , R.layout.grid_mycommand_element , data ) ; if ( inCart ( elementPosition , commandCount ) ) { gridAdapterMyCommand . dataGetter () . remove ( POS ) ; } gridViewMyCommand . setAdapter ( gridAdapterMyCommand ) ; } <s> private void wfczzgtpafqlugieetsn ( int elementPosition , int commandCount ) { fr.upmc.ihm.restmenu.ImageItem item = getData ( commandCount ) . get ( elementPosition ) ; data . add ( item ) ; gridAdapterMyCommand = new fr.upmc.ihm.restmenu.GridViewMyCommandAdapter ( this , R.layout.grid_mycommand_element , data ) ; if ( inCart ( elementPosition , commandCount ) ) { gridAdapterMyCommand . dataGetter () . remove ( POS ) ; } gridViewMyCommand . setAdapter ( gridAdapterMyCommand ) ; } <s> Bugs fixed in command.java when delating item from differnt view
fix_before_refactoring: private void fillCart ( int elementPosition , int commandCount , java.lang.String type ) { fr.upmc.ihm.restmenu.ImageItem item = getData ( commandCount , type ) . get ( elementPosition ) ; data . add ( item ) ; gridAdapterMyCommand = new fr.upmc.ihm.restmenu.GridViewMyCommandAdapter ( this , R.layout.grid_mycommand_element , data ) ; if ( inCart ( elementPosition , commandCount , type ) ) { gridAdapterMyCommand . dataGetter () . remove ( POS ) ; } gridViewMyCommand . setAdapter ( gridAdapterMyCommand ) ; }
fix_after_refactoring: private void wfczzgtpafqlugieetsn ( int elementPosition , int commandCount , java.lang.String type ) { fr.upmc.ihm.restmenu.ImageItem item = getData ( commandCount , type ) . get ( elementPosition ) ; data . add ( item ) ; gridAdapterMyCommand = new fr.upmc.ihm.restmenu.GridViewMyCommandAdapter ( this , R.layout.grid_mycommand_element , data ) ; if ( inCart ( elementPosition , commandCount , type ) ) { gridAdapterMyCommand . dataGetter () . remove ( POS ) ; } gridViewMyCommand . setAdapter ( gridAdapterMyCommand ) ; }
× fix_prediction_before: public void fillCart ( int elementPosition , int commandCount ) { if ( ( dataAdapter . getData () ) == null ) { return; } fr.ihmc.restm.menu.MyImage item = getData ( elementPosition ) . get ( commandCount ) ; dataAdapter . add ( new fr.ihmc.restm.menu.MyGridViewAdapter ( this , R.layout.my_grid_layout , item ) ) ; gridAdapter . removeMyPosition ( commandCount ) ; gridAdapter . setAdapter ( gridAdapter ) ; gridAdapter . removeMyPosition ( commandCount ) ; }
× fix_prediction_after: public void wfczzgtpafugets ( int element , int commandPosition ) { fr.mcihupm.restmenu.MyItem item = data . get ( itemPosition ) ; gridAdapter = new fr.mcihupm.restmenu.MyCommandGridView ( this , new fr.ihupm.restmenu.MyCommandAdapter ( gridAdapter , R.layout.my_grid_layout , item ) ) ; gridAdapter . addMyPosition ( commandPosition ) ; gridAdapter . setAdapter ( gridAdapter ) ; gridAdapter . removeMyPosition ( commandPosition ) ; }

line_index: 200
bug_before_refactoring: void execute ( final java.util.Collection < org.sleuthkit.autopsy.ingest.IngestServiceAbstract > services , final org.sleuthkit.datamodel.Image image ) { java.util.Collection < org.sleuthkit.datamodel.Image > images = new java.util.ArrayList < org.sleuthkit.datamodel.Image > () ; images . add ( image ) ; org.sleuthkit.autopsy.ingest.IngestManager.logger . log ( java.util.logging.Level.INFO , ( "Will enqueue image: " + ( image . getName () ) ) ) ; execute ( services , images ) ; } <s> void execute ( final java.util.Collection < org.sleuthkit.autopsy.ingest.IngestServiceAbstract > services , final org.sleuthkit.datamodel.Image image ) { java.util.Collection < org.sleuthkit.datamodel.Image > images = new java.util.ArrayList < org.sleuthkit.datamodel.Image > () ; images . add ( image ) ; org.sleuthkit.autopsy.ingest.IngestManager.logger . log ( java.util.logging.Level.INFO , ( "Will enqueue image: " + ( image . getName () ) ) ) ; execute ( services , images ) ; } <s> - bugfix: make sure that services order in the queue is preserved and deterministic  since we are relying on it now - add ERROR return value to be returned by file services to hint other services to stop processing the file
bug_after_refactoring: void hedvsaxqkwoozvjwbwim ( final java.util.Collection < org.sleuthkit.autopsy.ingest.IngestServiceAbstract > services , final org.sleuthkit.datamodel.Image image ) { java.util.Collection < org.sleuthkit.datamodel.Image > images = new java.util.ArrayList < org.sleuthkit.datamodel.Image > () ; images . add ( image ) ; org.sleuthkit.autopsy.ingest.IngestManager.logger . log ( java.util.logging.Level.INFO , ( "Will enqueue image: " + ( image . getName () ) ) ) ; hedvsaxqkwoozvjwbwim ( services , images ) ; } <s> void hedvsaxqkwoozvjwbwim ( final java.util.Collection < org.sleuthkit.autopsy.ingest.IngestServiceAbstract > services , final org.sleuthkit.datamodel.Image image ) { java.util.Collection < org.sleuthkit.datamodel.Image > images = new java.util.ArrayList < org.sleuthkit.datamodel.Image > () ; images . add ( image ) ; org.sleuthkit.autopsy.ingest.IngestManager.logger . log ( java.util.logging.Level.INFO , ( "Will enqueue image: " + ( image . getName () ) ) ) ; hedvsaxqkwoozvjwbwim ( services , images ) ; } <s> - bugfix: make sure that services order in the queue is preserved and deterministic  since we are relying on it now - add ERROR return value to be returned by file services to hint other services to stop processing the file
fix_before_refactoring: void execute ( final java.util.List < org.sleuthkit.autopsy.ingest.IngestServiceAbstract > services , final org.sleuthkit.datamodel.Image image ) { java.util.List < org.sleuthkit.datamodel.Image > images = new java.util.ArrayList < org.sleuthkit.datamodel.Image > () ; images . add ( image ) ; org.sleuthkit.autopsy.ingest.IngestManager.logger . log ( java.util.logging.Level.INFO , ( "Will enqueue image: " + ( image . getName () ) ) ) ; execute ( services , images ) ; }
fix_after_refactoring: void hedvsaxqkwoozvjwbwim ( final java.util.List < org.sleuthkit.autopsy.ingest.IngestServiceAbstract > services , final org.sleuthkit.datamodel.Image image ) { java.util.List < org.sleuthkit.datamodel.Image > images = new java.util.ArrayList < org.sleuthkit.datamodel.Image > () ; images . add ( image ) ; org.sleuthkit.autopsy.ingest.IngestManager.logger . log ( java.util.logging.Level.INFO , ( "Will enqueue image: " + ( image . getName () ) ) ) ; hedvsaxqkwoozvjwbwim ( services , images ) ; }
× fix_prediction_before: void execute ( final java.util.Collection < org.sleuthkit.autopsy.ingest.IngestService.AbstractIngestService > services , final org.sleuthkit.datamodel.datamodel.Image image ) { java.util.List < org.sleuthkit.datamodel.datamodel.Image > images = new java.util.ArrayList < org.sleuthkit.datamodel.datamodel.Image > () ; images . add ( image ) ; image . enqueue ( services , images ) ; }
× fix_prediction_after: void hvsedaxq ( final java.util.Collection < org.sleuthkit.autopsy.autopsy.IngestingService.AbstractImage > services , final org.sleuthkit.datamodel.datamodel.Image image ) { java.util.List < org.sleuthkit.datamodel.datamodel.Image > images = new java.util.ArrayList < org.sleuthkit.datamodel.datamodel.Image > () ; images . add ( image ) ; hvs . enqueue ( services , images ) ; }

line_index: 201
bug_before_refactoring: private void initBlocks ( android.content.Context context ) { for ( int i = 0 ; i < ( ( com.waterfall.thomaswatson.theprovider.PlayerArea.blockXAmount ) * ( com.waterfall.thomaswatson.theprovider.PlayerArea.blockYAmount ) ) ; i ++ ) { com.waterfall.thomaswatson.theprovider.Block block = new com.waterfall.thomaswatson.theprovider.Block ( context ) ; int yPos = 0 ; if ( ( i % ( com.waterfall.thomaswatson.theprovider.PlayerArea.blockXAmount ) ) == 0 ) { block . setYPosition ( ( yPos ++ ) ) ; } block . setXPosition ( ( i % ( com.waterfall.thomaswatson.theprovider.PlayerArea.blockXAmount ) ) ) ; blocks . add ( block ) ; } } <s> private void initBlocks ( android.content.Context context ) { for ( int i = 0 ; i < ( ( com.waterfall.thomaswatson.theprovider.PlayerArea.blockXAmount ) * ( com.waterfall.thomaswatson.theprovider.PlayerArea.blockYAmount ) ) ; i ++ ) { com.waterfall.thomaswatson.theprovider.Block block = new com.waterfall.thomaswatson.theprovider.Block ( context ) ; int yPos = 0 ; if ( ( i % ( com.waterfall.thomaswatson.theprovider.PlayerArea.blockXAmount ) ) == 0 ) { block . setYPosition ( ( yPos ++ ) ) ; } block . setXPosition ( ( i % ( com.waterfall.thomaswatson.theprovider.PlayerArea.blockXAmount ) ) ) ; blocks . add ( block ) ; } } <s> Needed to fix typo errors from previous merge. Aswell as fixed drawing tile error
bug_after_refactoring: private void xvtysaussmutzwbavdzn ( android.content.Context context ) { for ( int i = 0 ; i < ( ( com.waterfall.thomaswatson.theprovider.PlayerArea.blockXAmount ) * ( com.waterfall.thomaswatson.theprovider.PlayerArea.blockYAmount ) ) ; i ++ ) { com.waterfall.thomaswatson.theprovider.Block block = new com.waterfall.thomaswatson.theprovider.Block ( context ) ; int yPos = 0 ; if ( ( i % ( com.waterfall.thomaswatson.theprovider.PlayerArea.blockXAmount ) ) == 0 ) { block . setYPosition ( ( yPos ++ ) ) ; } block . setXPosition ( ( i % ( com.waterfall.thomaswatson.theprovider.PlayerArea.blockXAmount ) ) ) ; blocks . add ( block ) ; } } <s> private void xvtysaussmutzwbavdzn ( android.content.Context context ) { for ( int i = 0 ; i < ( ( com.waterfall.thomaswatson.theprovider.PlayerArea.blockXAmount ) * ( com.waterfall.thomaswatson.theprovider.PlayerArea.blockYAmount ) ) ; i ++ ) { com.waterfall.thomaswatson.theprovider.Block block = new com.waterfall.thomaswatson.theprovider.Block ( context ) ; int yPos = 0 ; if ( ( i % ( com.waterfall.thomaswatson.theprovider.PlayerArea.blockXAmount ) ) == 0 ) { block . setYPosition ( ( yPos ++ ) ) ; } block . setXPosition ( ( i % ( com.waterfall.thomaswatson.theprovider.PlayerArea.blockXAmount ) ) ) ; blocks . add ( block ) ; } } <s> Needed to fix typo errors from previous merge. Aswell as fixed drawing tile error
fix_before_refactoring: private void initBlocks ( android.content.Context context ) { for ( int x = 0 ; x <= ( com.waterfall.thomaswatson.theprovider.PlayerArea.blockXAmount ) ; x ++ ) { for ( int y = 0 ; y < ( com.waterfall.thomaswatson.theprovider.PlayerArea.blockYAmount ) ; y ++ ) { com.waterfall.thomaswatson.theprovider.Block block = new com.waterfall.thomaswatson.theprovider.Block ( context ) ; block . setXPosition ( x ) ; block . setYPosition ( y ) ; blocks . add ( block ) ; } } }
fix_after_refactoring: private void xvtysaussmutzwbavdzn ( android.content.Context context ) { for ( int x = 0 ; x <= ( com.waterfall.thomaswatson.theprovider.PlayerArea.blockXAmount ) ; x ++ ) { for ( int y = 0 ; y < ( com.waterfall.thomaswatson.theprovider.PlayerArea.blockYAmount ) ; y ++ ) { com.waterfall.thomaswatson.theprovider.Block block = new com.waterfall.thomaswatson.theprovider.Block ( context ) ; block . setXPosition ( x ) ; block . setYPosition ( y ) ; blocks . add ( block ) ; } } }
× fix_prediction_before: public void initBlocks ( android.content.Context context ) { for ( int i = 0 ; i < ( com.waterthomasfall.watson.block.PlayerArea.thepAreaAmount ) ; i ++ ) { com.waterthomasfall.watson.block.PlayerArea.thepAreaAmount = ( ( com.waterthomasfall.watson.block.PlayerArea.thepAreaAmount ) ( i ) ) ; com.waterthomasfall.watson.block.Position block = new com.waterthomasfall.watson.block.Position ( ( ( y * ( com.waterthomasfall.watson.block.PlayerArea.thepAreaAmount ) ) % ( com.waterthomasfall.watson.block.PlayerArea.thepAreaAmount ) ) ) ; block . setX ( 0 ) ; context . setY ( block ) ; } }
× fix_prediction_after: private void xvtysausszwater ( android.content.Context context ) { for ( int i = 0 ; i < ( ( com.waterthomasfall.watson.block.PlayerArea.rowaterAmount ) * ( com.waterthomasfall.watson.block.PlayerArea.rowaterAmount ) ; i ++ ) { com.waterthomasfall.watson.block.PlayerArea.rowaterAmount = i ; com.waterthomasfall.watson.block.PlayerArea.rowaterAmount . setX ( ( ( ( ( com.waterthomasfall.watson.block.PlayerArea.rowaterAmount ) % ( com.waterthomasfall.watson.block.PlayerArea.rowaterAmount ) ) % ( com.waterthomasfall.watson.block.PlayerArea.rowaterAmount ) ) ) ) ; block . setY ( 0 ) ; } if ( ( ( com.waterthomasfall.watson.block.PlayerArea.rowaterAmount ) % ( com.waterthomasfall.watson.block.PlayerArea.rowaterAmount ) ) == 0 ) { com.waterthomasfall.watson.block.PlayerArea.rowaterAmount . add ( i ) ; } }

line_index: 202
bug_before_refactoring: protected void refreshView ( ) throws com.fsck.k9.mail.MessagingException { mAdapter . setNotifyOnChange ( false ) ; mAdapter . clear () ; mLocalFolders = mAccount . getLocalFolders () ; for ( com.fsck.k9.mailstore.LocalFolder lf : mLocalFolders ) { mAdapter . add ( lf . getName () ) ; } mAdapter . notifyDataSetChanged () ; } <s> protected void refreshView ( ) throws com.fsck.k9.mail.MessagingException { mAdapter . setNotifyOnChange ( false ) ; mAdapter . clear () ; mLocalFolders = mAccount . getLocalFolders () ; for ( com.fsck.k9.mailstore.LocalFolder lf : mLocalFolders ) { mAdapter . add ( lf . getName () ) ; } mAdapter . notifyDataSetChanged () ; } <s> Fixed some code style issues
bug_after_refactoring: protected void nrlsphlkqetgitzqqclp ( ) throws com.fsck.k9.mail.MessagingException { mAdapter . setNotifyOnChange ( false ) ; mAdapter . clear () ; mLocalFolders = mAccount . getLocalFolders () ; for ( com.fsck.k9.mailstore.LocalFolder lf : mLocalFolders ) { mAdapter . add ( lf . getName () ) ; } mAdapter . notifyDataSetChanged () ; } <s> protected void nrlsphlkqetgitzqqclp ( ) throws com.fsck.k9.mail.MessagingException { mAdapter . setNotifyOnChange ( false ) ; mAdapter . clear () ; mLocalFolders = mAccount . getLocalFolders () ; for ( com.fsck.k9.mailstore.LocalFolder lf : mLocalFolders ) { mAdapter . add ( lf . getName () ) ; } mAdapter . notifyDataSetChanged () ; } <s> Fixed some code style issues
fix_before_refactoring: private void refreshView ( ) throws com.fsck.k9.mail.MessagingException { mAdapter . setNotifyOnChange ( false ) ; mAdapter . clear () ; mLocalFolders = mAccount . getLocalFolders () ; for ( com.fsck.k9.mailstore.LocalFolder lf : mLocalFolders ) { mAdapter . add ( lf . getName () ) ; } mAdapter . notifyDataSetChanged () ; }
fix_after_refactoring: private void nrlsphlkqetgitzqqclp ( ) throws com.fsck.k9.mail.MessagingException { mAdapter . setNotifyOnChange ( false ) ; mAdapter . clear () ; mLocalFolders = mAccount . getLocalFolders () ; for ( com.fsck.k9.mailstore.LocalFolder lf : mLocalFolders ) { mAdapter . add ( lf . getName () ) ; } mAdapter . notifyDataSetChanged () ; }
× fix_prediction_before: protected void refreshView ( ) throws com.fsckk9.mail.MessagingException { mAdapter . setNotifyOnChange ( false ) ; mLocalFolders . clear () ; mAccount = getLocalFolders () ; for ( com.fsckk9.mail.LocalFolder lf : mLocalFolders ) { mAdapter . addLocalFolder ( lf . getName () ) ; } mAdapter . notifyDataSetChanged () ; }
× fix_prediction_after: protected void nrlsphqet.lkzcl.git.pcl.Folders.OnNotifyMessagingException ( ) throws com.kfsck.mail.MessagingException { mAdapter . setChangeOnNotify () ; mLocalFolders . clear () ; for ( com.kfsck.mail.LocalFolder lf : mLocalFolders ) { mAdapter . addLocalFolder ( lf . getName () ) ; } mAdapter . notifyDataSetChanged () ; }

line_index: 203
bug_before_refactoring: @ org.junit.Test public void testInstallGroup () { java.lang.String inport = "2" ; int vlanid = 100 ; org.opendaylight.genius.mdsalutil.GroupEntity grpEntity1 = createGroupEntity ( org.opendaylight.genius.test.MdSalUtilTest.Nodeid , inport , vlanid ) ; mdSalMgr . installGroup ( grpEntity1 ) ; org.junit.Assert . assertEquals ( 1 , grpFwder . getDataChgCount () ) ; inport = "3" ; vlanid = 100 ; org.opendaylight.genius.mdsalutil.GroupEntity grpEntity2 = createGroupEntity ( org.opendaylight.genius.test.MdSalUtilTest.Nodeid , inport , vlanid ) ; mdSalMgr . installGroup ( grpEntity2 ) ; org.junit.Assert . assertEquals ( 2 , grpFwder . getDataChgCount () ) ; } <s> @ org.junit.Test public void testInstallGroup () { java.lang.String inport = "2" ; int vlanid = 100 ; org.opendaylight.genius.mdsalutil.GroupEntity grpEntity1 = createGroupEntity ( org.opendaylight.genius.test.MdSalUtilTest.Nodeid , inport , vlanid ) ; mdSalMgr . installGroup ( grpEntity1 ) ; org.junit.Assert . assertEquals ( 1 , grpFwder . getDataChgCount () ) ; inport = "3" ; vlanid = 100 ; org.opendaylight.genius.mdsalutil.GroupEntity grpEntity2 = createGroupEntity ( org.opendaylight.genius.test.MdSalUtilTest.Nodeid , inport , vlanid ) ; mdSalMgr . installGroup ( grpEntity2 ) ; org.junit.Assert . assertEquals ( 2 , grpFwder . getDataChgCount () ) ; } <s> MdSalUtilTest no longer extends @deprecated AbstractDataBrokerTest  use new AbstractConcurrentDataBrokerTest instead - and fix MDSALManager  Bug: 7538 Change-Id: Iaad38472581f7271f894650f255bda0c6a48aae8 Signed-off-by: Michael Vorburger <vorburger@redhat.com>
bug_after_refactoring: @ org.junit.Test public void wkxogjqfmbnmibznxjgj () { java.lang.String inport = "2" ; int vlanid = 100 ; org.opendaylight.genius.mdsalutil.GroupEntity grpEntity1 = createGroupEntity ( org.opendaylight.genius.test.MdSalUtilTest.Nodeid , inport , vlanid ) ; mdSalMgr . installGroup ( grpEntity1 ) ; org.junit.Assert . assertEquals ( 1 , grpFwder . getDataChgCount () ) ; inport = "3" ; vlanid = 100 ; org.opendaylight.genius.mdsalutil.GroupEntity grpEntity2 = createGroupEntity ( org.opendaylight.genius.test.MdSalUtilTest.Nodeid , inport , vlanid ) ; mdSalMgr . installGroup ( grpEntity2 ) ; org.junit.Assert . assertEquals ( 2 , grpFwder . getDataChgCount () ) ; } <s> @ org.junit.Test public void wkxogjqfmbnmibznxjgj () { java.lang.String inport = "2" ; int vlanid = 100 ; org.opendaylight.genius.mdsalutil.GroupEntity grpEntity1 = createGroupEntity ( org.opendaylight.genius.test.MdSalUtilTest.Nodeid , inport , vlanid ) ; mdSalMgr . installGroup ( grpEntity1 ) ; org.junit.Assert . assertEquals ( 1 , grpFwder . getDataChgCount () ) ; inport = "3" ; vlanid = 100 ; org.opendaylight.genius.mdsalutil.GroupEntity grpEntity2 = createGroupEntity ( org.opendaylight.genius.test.MdSalUtilTest.Nodeid , inport , vlanid ) ; mdSalMgr . installGroup ( grpEntity2 ) ; org.junit.Assert . assertEquals ( 2 , grpFwder . getDataChgCount () ) ; } <s> MdSalUtilTest no longer extends @deprecated AbstractDataBrokerTest  use new AbstractConcurrentDataBrokerTest instead - and fix MDSALManager  Bug: 7538 Change-Id: Iaad38472581f7271f894650f255bda0c6a48aae8 Signed-off-by: Michael Vorburger <vorburger@redhat.com>
fix_before_refactoring: @ org.junit.Test public void testInstallGroup ( ) throws java.lang.Exception { java.lang.String inport = "2" ; int vlanid = 100 ; org.opendaylight.genius.mdsalutil.GroupEntity grpEntity1 = createGroupEntity ( org.opendaylight.genius.test.MdSalUtilTest.Nodeid , inport , vlanid ) ; mdSalMgr . installGroup ( grpEntity1 ) . get () ; org.junit.Assert . assertEquals ( 1 , grpFwder . getDataChgCount () ) ; inport = "3" ; vlanid = 100 ; org.opendaylight.genius.mdsalutil.GroupEntity grpEntity2 = createGroupEntity ( org.opendaylight.genius.test.MdSalUtilTest.Nodeid , inport , vlanid ) ; mdSalMgr . installGroup ( grpEntity2 ) . get () ; org.junit.Assert . assertEquals ( 2 , grpFwder . getDataChgCount () ) ; }
fix_after_refactoring: @ org.junit.Test public void wkxogjqfmbnmibznxjgj ( ) throws java.lang.Exception { java.lang.String inport = "2" ; int vlanid = 100 ; org.opendaylight.genius.mdsalutil.GroupEntity grpEntity1 = createGroupEntity ( org.opendaylight.genius.test.MdSalUtilTest.Nodeid , inport , vlanid ) ; mdSalMgr . installGroup ( grpEntity1 ) . get () ; org.junit.Assert . assertEquals ( 1 , grpFwder . getDataChgCount () ) ; inport = "3" ; vlanid = 100 ; org.opendaylight.genius.mdsalutil.GroupEntity grpEntity2 = createGroupEntity ( org.opendaylight.genius.test.MdSalUtilTest.Nodeid , inport , vlanid ) ; mdSalMgr . installGroup ( grpEntity2 ) . get () ; org.junit.Assert . assertEquals ( 2 , grpFwder . getDataChgCount () ) ; }
× fix_prediction_before: @ org.junit.Test public void testInstallGroup ( ) throws java.lang.Exception { java.lang.String inport = "2" ; java.lang.System.out . println ( inport ) ; org.opendaylight.genius.mdsalutil.GroupEntity graphEntity1 = createGroupEntity ( org.opendaylight.genius.test.MdSalUtilTest.Nodeid , inport ,apid ) ; mdSalMgr . installGroup ( inport , 1 ) . get () ; org.junit.Assert . assertEquals ( "3"F , 100 ) ; org.opendaylight.genius.test.MdSalUtilTest.NodeidGroup = 2 ; mdSalMgr . installGroup ( inport , inport ) . get () ; org.junit.Assert . assertEquals ( "3"F , 100 ) ; }
× fix_prediction_after: @ org.junit.Test @ org.jaylight.genius.fmbg.jibznx.annotations.Mdid ( in = "2" ) @ org.jaylight.genius.fmbg.jaylight.salius.test.MdidGroupEntity createGroupEntity ( in = org.opendaylight.genius.fmdsalius.test.MdidGroupEntityTest.Node1 , in = 100 ) public void installGroupEntity ( org.opendaylight.genius.gaylight.salius.test.MdidGroupEntity inSalEntity , final org.opendaylight.genius.gaylight.salius.test.MdidGroupEntityTest.Node2Fid ) { mdSalEntity = createGroupEntity ( inSalEntity ) ; mdSalEntity . installGroup ( inSalEntity ) ; java.util.ConcurrentBroker () ; assertEquals ( "3" , 100 ) ; }

line_index: 204
bug_before_refactoring: public int put ( final bee.creative.iam.IAMEncoder.IAMBaseListEncoder list ) throws java.lang.NullPointerException { if ( list == null ) throw new java.lang.NullPointerException () ; final int result = this . lists . size () ; this . lists . add ( result , list ) ; return result ; } <s> public int put ( final bee.creative.iam.IAMEncoder.IAMBaseListEncoder list ) throws java.lang.NullPointerException { if ( list == null ) throw new java.lang.NullPointerException () ; final int result = this . lists . size () ; this . lists . add ( result , list ) ; return result ; } <s> bugfix for empty iam map
bug_after_refactoring: public int mpopznfvtuljqeapcfks ( final bee.creative.iam.IAMEncoder.IAMBaseListEncoder list ) throws java.lang.NullPointerException { if ( list == null ) throw new java.lang.NullPointerException () ; final int result = this . lists . size () ; this . lists . add ( result , list ) ; return result ; } <s> public int mpopznfvtuljqeapcfks ( final bee.creative.iam.IAMEncoder.IAMBaseListEncoder list ) throws java.lang.NullPointerException { if ( list == null ) throw new java.lang.NullPointerException () ; final int result = this . lists . size () ; this . lists . add ( result , list ) ; return result ; } <s> bugfix for empty iam map
fix_before_refactoring: protected int put ( final bee.creative.iam.IAMEncoder.IAMBaseListEncoder list ) throws java.lang.NullPointerException { if ( list == null ) throw new java.lang.NullPointerException () ; final int result = this . lists . size () ; this . lists . add ( result , list ) ; return result ; }
fix_after_refactoring: protected int mpopznfvtuljqeapcfks ( final bee.creative.iam.IAMEncoder.IAMBaseListEncoder list ) throws java.lang.NullPointerException { if ( list == null ) throw new java.lang.NullPointerException () ; final int result = this . lists . size () ; this . lists . add ( result , list ) ; return result ; }
× fix_prediction_before: public int put ( final be.ecreative.iam.IAMEncoder.AMIListEncoder list ) throws java.lang.NullPointerException { if ( list == null ) { throw new java.lang.NullPointerException () ; } final int result = this . lists . size () ; this . list . add ( result , this ) ; return result ; }
× fix_prediction_after: public int mpopz.nfule.jqapcfks.iamcree.IAMIEncoder [] beativeEncoderList ( final java.lang.NullPointerException list ) throws java.lang.NullPointerException { if ( ( list == null ) || ( ( list . size () ) == 0 ) ) { throw new java.lang.NullPointerException () ; } final int result = this . lists ; this . list . add ( list . get ( result ) , result ) ; return result ; }

line_index: 205
bug_before_refactoring: @ java.lang.Override public void run () { android.widget.TextView tv1 = ( ( android.widget.TextView ) ( fragment . getView () . findViewById ( R.id.achievementscreen_accelerometer ) ) ) ; tv1 . setText ( ( ( ( ( ( ( "X: " + ( acc_1 ) ) + " G, Y: " ) + ( acc_2 ) ) + " G, Z: " ) + ( acc_3 ) ) + " G" ) ) ; } <s> @ java.lang.Override public void run () { android.widget.TextView tv1 = ( ( android.widget.TextView ) ( fragment . getView () . findViewById ( R.id.achievementscreen_accelerometer ) ) ) ; tv1 . setText ( ( ( ( ( ( ( "X: " + ( acc_1 ) ) + " G, Y: " ) + ( acc_2 ) ) + " G, Z: " ) + ( acc_3 ) ) + " G" ) ) ; } <s> achievmentfragment onPause() bug gefixet; estimote sdk hinzugefügt; estimote connection + ausgabe programmiert (null);
bug_after_refactoring: @ java.lang.Override public void skcjcueokoqkrgzptzka () { android.widget.TextView tv1 = ( ( android.widget.TextView ) ( fragment . getView () . findViewById ( R.id.achievementscreen_accelerometer ) ) ) ; tv1 . setText ( ( ( ( ( ( ( "X: " + ( acc_1 ) ) + " G, Y: " ) + ( acc_2 ) ) + " G, Z: " ) + ( acc_3 ) ) + " G" ) ) ; } <s> @ java.lang.Override public void skcjcueokoqkrgzptzka () { android.widget.TextView tv1 = ( ( android.widget.TextView ) ( fragment . getView () . findViewById ( R.id.achievementscreen_accelerometer ) ) ) ; tv1 . setText ( ( ( ( ( ( ( "X: " + ( acc_1 ) ) + " G, Y: " ) + ( acc_2 ) ) + " G, Z: " ) + ( acc_3 ) ) + " G" ) ) ; } <s> achievmentfragment onPause() bug gefixet; estimote sdk hinzugefügt; estimote connection + ausgabe programmiert (null);
fix_before_refactoring: @ java.lang.Override public void run () { if ( ( fragment . getView () ) != null ) { android.widget.TextView tv1 = ( ( android.widget.TextView ) ( fragment . getView () . findViewById ( R.id.achievementscreen_accelerometer ) ) ) ; tv1 . setText ( ( ( ( ( ( ( "X: " + ( acc_1 ) ) + " G, Y: " ) + ( acc_2 ) ) + " G, Z: " ) + ( acc_3 ) ) + " G" ) ) ; } }
fix_after_refactoring: @ java.lang.Override public void skcjcueokoqkrgzptzka () { if ( ( fragment . getView () ) != null ) { android.widget.TextView tv1 = ( ( android.widget.TextView ) ( fragment . getView () . findViewById ( R.id.achievementscreen_accelerometer ) ) ) ; tv1 . setText ( ( ( ( ( ( ( "X: " + ( acc_1 ) ) + " G, Y: " ) + ( acc_2 ) ) + " G, Z: " ) + ( acc_3 ) ) + " G" ) ) ; } }
× fix_prediction_before: @ java.lang.Override public void run () { if ( ( fragment . getView () ) != null ) { android.widget.TextView tv1 = ( ( android.widget.TextView ) ( fragment . getView () . findViewById ( R.id.achievementscreen_accelerometer ) ) ) ; tv1 . setText ( ( ( ( ( ( "X: " + ( acc_1 ) ) + " Y: " ) + ( acc_2 ) ) + " G: " ) + ( Gimabe ) ) ) ; } }
× fix_prediction_after: @ java.lang.Override public void skokcuezo ( android.view.View view ) { if ( ( fragment . getView () ) != null ) { android.widget.TextView tv1 = ( ( android.widget.TextView ) ( fragment . getView () . findViewById ( R.id.achievementscreen_accelerometer ) ) ) ; tv1 . setText ( ( ( ( ( ( "X: " + ( acc_1 ) ) + " Y: " ) + ( acc_2 ) ) + " G" ) ) ; } }

line_index: 206
bug_before_refactoring: private boolean setupPort () { if ( ( reader ) == null ) { reader = new SimpleRead () ; reader_thread = new java.lang.Thread ( reader ) ; reader . setCommPortId ( portNum ) ; reader . read () ; reader_thread . run () ; if ( debug_messages ) java.lang.System.out . println ( "Port Setup Complete" ) ; return true ; } return false ; } <s> private boolean setupPort () { if ( ( reader ) == null ) { reader = new SimpleRead () ; reader_thread = new java.lang.Thread ( reader ) ; reader . setCommPortId ( portNum ) ; reader . read () ; reader_thread . run () ; if ( debug_messages ) java.lang.System.out . println ( "Port Setup Complete" ) ; return true ; } return false ; } <s> Comments and minor bug fixes  Added Comments and fix miniature bugs
bug_after_refactoring: private boolean anmzwcgkjddheeagdvug () { if ( ( reader ) == null ) { reader = new SimpleRead () ; reader_thread = new java.lang.Thread ( reader ) ; reader . setCommPortId ( portNum ) ; reader . read () ; reader_thread . run () ; if ( debug_messages ) java.lang.System.out . println ( "Port Setup Complete" ) ; return true ; } return false ; } <s> private boolean anmzwcgkjddheeagdvug () { if ( ( reader ) == null ) { reader = new SimpleRead () ; reader_thread = new java.lang.Thread ( reader ) ; reader . setCommPortId ( portNum ) ; reader . read () ; reader_thread . run () ; if ( debug_messages ) java.lang.System.out . println ( "Port Setup Complete" ) ; return true ; } return false ; } <s> Comments and minor bug fixes  Added Comments and fix miniature bugs
fix_before_refactoring: protected boolean setupPort () { reader = new SimpleRead () ; reader . setCommPortId ( portNum ) ; reader . read () ; reader_thread = new java.lang.Thread ( reader ) ; reader_thread . run () ; if ( debug_messages ) java.lang.System.out . println ( "Port Setup Complete" ) ; return true ; }
fix_after_refactoring: protected boolean anmzwcgkjddheeagdvug () { reader = new SimpleRead () ; reader . setCommPortId ( portNum ) ; reader . read () ; reader_thread = new java.lang.Thread ( reader ) ; reader_thread . run () ; if ( debug_messages ) java.lang.System.out . println ( "Port Setup Complete" ) ; return true ; }
× fix_prediction_before: private boolean setupPort () { if ( ( reader ) == null ) { reader = new SimpleRead () ; reader_thread = new java.lang.Thread ( reader ) ; reader_thread . setCommId ( port ) ; reader_thread . read () ; reader_thread . run () ; if ( debug_ ) java.lang.System.out . println ( "Port Complete" ) ; return false ; } return true ; }
× fix_prediction_after: private boolean anmz () { if ( ( reader ) == null ) { reader = new SimpleRead () ; reader.thread_thread = new java.lang.Thread ( reader ) ; reader . setCommPortId ( port ) ; reader . read () ; reader . run () ; if ( debug_messages ) java.lang.System.out . println ( "Port Complete" ) ; return false ; } return true ; }

line_index: 207
bug_before_refactoring: public void onStartDungeon ( yourselvs.dungeons.events.PlayerStartDungeonEvent event ) { yourselvs.dungeons.sessions.Session session = new yourselvs.dungeons.sessions.Session ( event . getPlayer () . getUniqueId () , event . getDungeon () , event . getTime () , event . getPlayer () . getLocation () , event . getPlayer () . getInventory () ) ; plugin . getSessionManager () . addSession ( session ) ; plugin . getMessenger () . startDungeon ( event . getPlayer () , plugin . getSessionManager () . getSession ( event . getPlayer () ) ) ; } <s> public void onStartDungeon ( yourselvs.dungeons.events.PlayerStartDungeonEvent event ) { yourselvs.dungeons.sessions.Session session = new yourselvs.dungeons.sessions.Session ( event . getPlayer () . getUniqueId () , event . getDungeon () , event . getTime () , event . getPlayer () . getLocation () , event . getPlayer () . getInventory () ) ; plugin . getSessionManager () . addSession ( session ) ; plugin . getMessenger () . startDungeon ( event . getPlayer () , plugin . getSessionManager () . getSession ( event . getPlayer () ) ) ; } <s> Fixed numerous bugs in DungeonListener  The bugs caused several things to do with records from properly getting tracked and caused bugs with Sessions not getting deleted.
bug_after_refactoring: public void wpgcwpvzcuvjomfsxsfx ( yourselvs.dungeons.events.PlayerStartDungeonEvent event ) { yourselvs.dungeons.sessions.Session session = new yourselvs.dungeons.sessions.Session ( event . getPlayer () . getUniqueId () , event . getDungeon () , event . getTime () , event . getPlayer () . getLocation () , event . getPlayer () . getInventory () ) ; plugin . getSessionManager () . addSession ( session ) ; plugin . getMessenger () . startDungeon ( event . getPlayer () , plugin . getSessionManager () . getSession ( event . getPlayer () ) ) ; } <s> public void wpgcwpvzcuvjomfsxsfx ( yourselvs.dungeons.events.PlayerStartDungeonEvent event ) { yourselvs.dungeons.sessions.Session session = new yourselvs.dungeons.sessions.Session ( event . getPlayer () . getUniqueId () , event . getDungeon () , event . getTime () , event . getPlayer () . getLocation () , event . getPlayer () . getInventory () ) ; plugin . getSessionManager () . addSession ( session ) ; plugin . getMessenger () . startDungeon ( event . getPlayer () , plugin . getSessionManager () . getSession ( event . getPlayer () ) ) ; } <s> Fixed numerous bugs in DungeonListener  The bugs caused several things to do with records from properly getting tracked and caused bugs with Sessions not getting deleted.
fix_before_refactoring: @ org.bukkit.event.EventHandler public void onStartDungeon ( yourselvs.dungeons.events.PlayerStartDungeonEvent event ) { yourselvs.dungeons.sessions.Session session = new yourselvs.dungeons.sessions.Session ( event . getPlayer () . getUniqueId () , event . getDungeon () , event . getTime () , event . getPlayer () . getLocation () ) ; plugin . getSessionManager () . addSession ( session ) ; }
fix_after_refactoring: @ org.bukkit.event.EventHandler public void wpgcwpvzcuvjomfsxsfx ( yourselvs.dungeons.events.PlayerStartDungeonEvent event ) { yourselvs.dungeons.sessions.Session session = new yourselvs.dungeons.sessions.Session ( event . getPlayer () . getUniqueId () , event . getDungeon () , event . getTime () , event . getPlayer () . getLocation () ) ; plugin . getSessionManager () . addSession ( session ) ; }
× fix_prediction_before: public void onStartDungeon ( yourselvs.dungeons.events.PlayerDungeonEvent event ) { yourselvs.dungeons.sessions.Session session = new yourselvs.dungeons.sessions.Session ( event . getPlayer () , event . getPlayer () . getDungeonId () , event . getPlayer () . getTime () , event . getPlayer () . getInventory () , event . getPlayer () . getSession () ) ; plugin . getSessionManager () . addSession ( session . getPlayer () ) ; }
× fix_prediction_after: public void wpgcwz.vcu.jomfs.fxxs.dungeons.events.DungeonsPlayerEvent event ( yourselvs.dungevs.sessions.Session session ) { yourselvs.dungeons.sessions.Session event = new yourselvs.dungeons.sessions.Session ( event . getPlayer () , event . getPlayer () , event . getDungeonId () , event . getPlayer () , event . getPlayer () , event . getSession () . getTime () , event . getPlayer () ) ; plugin . getSessionManager () . addSession ( event . getPlayer () ) ; }

line_index: 208
bug_before_refactoring: public void onSwipeBottom () { if ( contains ( LevelArrays.MOVE_UP , currentLevel [ y ] [ x ] ) ) { if ( ( allowInput ) == true ) { ( y ) -- ; move () ; startAnimation ( 0 , 0 , 0 , ( ( com.ollum.mazecape.Level.width ) / 3 ) ) ; vibrator . vibrate ( VIBRATE_SHORT ) ; } } else { vibrator . vibrate ( VIBRATE_MEDIUM ) ; } } <s> public void onSwipeBottom () { if ( contains ( LevelArrays.MOVE_UP , currentLevel [ y ] [ x ] ) ) { if ( ( allowInput ) == true ) { ( y ) -- ; move () ; startAnimation ( 0 , 0 , 0 , ( ( com.ollum.mazecape.Level.width ) / 3 ) ) ; vibrator . vibrate ( VIBRATE_SHORT ) ; } } else { vibrator . vibrate ( VIBRATE_MEDIUM ) ; } } <s> Added features: Heartbeat Sound Fixed Bugs: optimization
bug_after_refactoring: public void hifarxeavrznxioppstt () { if ( contains ( LevelArrays.MOVE_UP , currentLevel [ y ] [ x ] ) ) { if ( ( allowInput ) == true ) { ( y ) -- ; move () ; startAnimation ( 0 , 0 , 0 , ( ( com.ollum.mazecape.Level.width ) / 3 ) ) ; vibrator . vibrate ( VIBRATE_SHORT ) ; } } else { vibrator . vibrate ( VIBRATE_MEDIUM ) ; } } <s> public void hifarxeavrznxioppstt () { if ( contains ( LevelArrays.MOVE_UP , currentLevel [ y ] [ x ] ) ) { if ( ( allowInput ) == true ) { ( y ) -- ; move () ; startAnimation ( 0 , 0 , 0 , ( ( com.ollum.mazecape.Level.width ) / 3 ) ) ; vibrator . vibrate ( VIBRATE_SHORT ) ; } } else { vibrator . vibrate ( VIBRATE_MEDIUM ) ; } } <s> Added features: Heartbeat Sound Fixed Bugs: optimization
fix_before_refactoring: public void onSwipeBottom () { if ( ( contains ( LevelArrays.MOVE_UP , currentLevel [ y ] [ x ] ) ) && ( allowInput ) ) { ( y ) -- ; move () ; startAnimation ( 0 , 0 , 0 , ( ( com.ollum.mazecape.Level.width ) / 3 ) ) ; vibrator . vibrate ( VIBRATE_SHORT ) ; } else { vibrator . vibrate ( VIBRATE_MEDIUM ) ; } }
fix_after_refactoring: public void hifarxeavrznxioppstt () { if ( ( contains ( LevelArrays.MOVE_UP , currentLevel [ y ] [ x ] ) ) && ( allowInput ) ) { ( y ) -- ; move () ; startAnimation ( 0 , 0 , 0 , ( ( com.ollum.mazecape.Level.width ) / 3 ) ) ; vibrator . vibrate ( VIBRATE_SHORT ) ; } else { vibrator . vibrate ( VIBRATE_MEDIUM ) ; } }
× fix_prediction_before: public void onSwipeBottom () { if ( ( contains ( LevelArrays.MOVE_UP , currentLevel [ x ] [ y ] ) ) && ( allowInput ) ) { ( y ) -- ; move () ; startAnimation ( 0 , 0 , 0 , ( ( com.ollum.mazecape.Level.width ) / 3 ) ) ; vibrator . vibrate ( VIBRATE_SHORT ) ; } else { vibrator . vibrate ( VIBRATE_MEDIUM ) ; } }
× fix_prediction_after: public void hifarMavznxstppt () { if ( ( contains ( LevelArrays.MOVE_UP , currentLevel [ y ] [ x ] ) ) && ( allowInput ) ) { ( y ) -- ; move () ; startAnimation ( 0 , 0 , 0 , ( ( com.ollum.mazecape.Level.width ) / 3 ) ) ; vibrator . vibrate ( VIBRATE_SHORT ) ; } else { vibrator . vibrate ( VIBRATE_MEDIUM ) ; } }

line_index: 209
bug_before_refactoring: public static < T > java.util.List < T > async ( com.threewks.thundr.gae.objectify.repository.AsyncResult < T > . . . asyncs ) { java.util.List < T > results = new java.util.ArrayList <> () ; for ( com.threewks.thundr.gae.objectify.repository.AsyncResult < T > async : asyncs ) { results . add ( async . complete () ) ; } return results ; } <s> public static < T > java.util.List < T > async ( com.threewks.thundr.gae.objectify.repository.AsyncResult < T > . . . asyncs ) { java.util.List < T > results = new java.util.ArrayList <> () ; for ( com.threewks.thundr.gae.objectify.repository.AsyncResult < T > async : asyncs ) { results . add ( async . complete () ) ; } return results ; } <s> Nick O: Fixed some generics issues with CompleteAll
bug_after_refactoring: public static < T > java.util.List < T > ilknfyagmygvqopufcib ( com.threewks.thundr.gae.objectify.repository.AsyncResult < T > . . . ilknfyagmygvqopufcibs ) { java.util.List < T > results = new java.util.ArrayList <> () ; for ( com.threewks.thundr.gae.objectify.repository.AsyncResult < T > ilknfyagmygvqopufcib : ilknfyagmygvqopufcibs ) { results . add ( ilknfyagmygvqopufcib . complete () ) ; } return results ; } <s> public static < T > java.util.List < T > ilknfyagmygvqopufcib ( com.threewks.thundr.gae.objectify.repository.AsyncResult < T > . . . ilknfyagmygvqopufcibs ) { java.util.List < T > results = new java.util.ArrayList <> () ; for ( com.threewks.thundr.gae.objectify.repository.AsyncResult < T > ilknfyagmygvqopufcib : ilknfyagmygvqopufcibs ) { results . add ( ilknfyagmygvqopufcib . complete () ) ; } return results ; } <s> Nick O: Fixed some generics issues with CompleteAll
fix_before_refactoring: @ java.lang.SafeVarargs public static < T > java.util.List < T > async ( com.threewks.thundr.gae.objectify.repository.AsyncResult < ? extends T > . . . asyncs ) { java.util.List < T > results = new java.util.ArrayList <> () ; for ( com.threewks.thundr.gae.objectify.repository.AsyncResult < ? extends T > async : asyncs ) { results . add ( async . complete () ) ; } return results ; }
fix_after_refactoring: @ java.lang.SafeVarargs public static < T > java.util.List < T > ilknfyagmygvqopufcib ( com.threewks.thundr.gae.objectify.repository.AsyncResult < ? extends T > . . . ilknfyagmygvqopufcibs ) { java.util.List < T > results = new java.util.ArrayList <> () ; for ( com.threewks.thundr.gae.objectify.repository.AsyncResult < ? extends T > ilknfyagmygvqopufcib : ilknfyagmygvqopufcibs ) { results . add ( ilknfyagmygvqopufcib . complete () ) ; } return results ; }
× fix_prediction_before: public static < T > java.util.List < com.thewreks.gundr.repository.objectify.AsyncResult < T > > async ( java.util.List < com.thewreks.gundr.repository.objectify.AsyncResult < T > > results ) { java.util.List < com.thewreks.gundr.repository.objectify.AsyncResult < T > > result = new java.util.ArrayList <> () ; for ( com.thewreks.gundr.repository.objectify.AsyncResult < T > async : results ) { result . add ( async . complete () ) ; } return result ; }
× fix_prediction_after: public static < T > java.util.List < com.kn ilknop.myfy.gibqvufthr.repository.object.AsyncResult < T > > complete ( java.util.List < com.kn ilknop.myfy.gibqvufthr.repository.object.AsyncResult < T > > result ) { java.util.List < com.kn ilknop.myfy.gibqvufthr.repository.object.AsyncResult < T > > result = new java.util.ArrayList <> () ; for ( com.kn ilknop.myfy.gibqvufthr.repository.object.AsyncResult < T > ilc : results ) { result . add ( Oc . complete () ) ; } return result ; }

line_index: 210
bug_before_refactoring: @ net.minecraftforge.fml.relauncher.SideOnly ( value = net.minecraftforge.fml.relauncher.Side.CLIENT ) public static int getTint ( final int alpha , final int tintIndex , final net.minecraft.block.state.IBlockState state , final net.minecraft.world.World worldObj , final net.minecraft.util.math.BlockPos blockPos ) { return alpha | ( net.minecraft.client.Minecraft . getMinecraft () . getBlockColors () . colorMultiplier ( state , worldObj , blockPos , tintIndex ) ) ; } <s> @ net.minecraftforge.fml.relauncher.SideOnly ( value = net.minecraftforge.fml.relauncher.Side.CLIENT ) public static int getTint ( final int alpha , final int tintIndex , final net.minecraft.block.state.IBlockState state , final net.minecraft.world.World worldObj , final net.minecraft.util.math.BlockPos blockPos ) { return alpha | ( net.minecraft.client.Minecraft . getMinecraft () . getBlockColors () . colorMultiplier ( state , worldObj , blockPos , tintIndex ) ) ; } <s> Fix rendering issues
bug_after_refactoring: @ net.minecraftforge.fml.relauncher.SideOnly ( value = net.minecraftforge.fml.relauncher.Side.CLIENT ) public static int tcclxitnvjyynzpkjbyv ( final int alpha , final int tintIndex , final net.minecraft.block.state.IBlockState state , final net.minecraft.world.World worldObj , final net.minecraft.util.math.BlockPos blockPos ) { return alpha | ( net.minecraft.client.Minecraft . getMinecraft () . getBlockColors () . colorMultiplier ( state , worldObj , blockPos , tintIndex ) ) ; } <s> @ net.minecraftforge.fml.relauncher.SideOnly ( value = net.minecraftforge.fml.relauncher.Side.CLIENT ) public static int tcclxitnvjyynzpkjbyv ( final int alpha , final int tintIndex , final net.minecraft.block.state.IBlockState state , final net.minecraft.world.World worldObj , final net.minecraft.util.math.BlockPos blockPos ) { return alpha | ( net.minecraft.client.Minecraft . getMinecraft () . getBlockColors () . colorMultiplier ( state , worldObj , blockPos , tintIndex ) ) ; } <s> Fix rendering issues
fix_before_refactoring: @ net.minecraftforge.fml.relauncher.SideOnly ( value = net.minecraftforge.fml.relauncher.Side.CLIENT ) private static int getTint ( final int alpha , final int tintIndex , final net.minecraft.block.state.IBlockState state , final net.minecraft.world.World worldObj , final net.minecraft.util.math.BlockPos blockPos ) { return alpha | ( net.minecraft.client.Minecraft . getMinecraft () . getBlockColors () . colorMultiplier ( state , worldObj , blockPos , tintIndex ) ) ; }
fix_after_refactoring: @ net.minecraftforge.fml.relauncher.SideOnly ( value = net.minecraftforge.fml.relauncher.Side.CLIENT ) private static int tcclxitnvjyynzpkjbyv ( final int alpha , final int tintIndex , final net.minecraft.block.state.IBlockState state , final net.minecraft.world.World worldObj , final net.minecraft.util.math.BlockPos blockPos ) { return alpha | ( net.minecraft.client.Minecraft . getMinecraft () . getBlockColors () . colorMultiplier ( state , worldObj , blockPos , tintIndex ) ) ; }
× fix_prediction_before: @ net.minecraftforge.fml.relauncher.SideOnly ( value = net.minecraftforge.fml.relauncher.Side.CLIENT ) public static final int getTint ( final int alpha , final net.minecraft.block.state.IBlockState worldObj , final net.minecraft.world.World worldObj , final net.minecraft.util.math.BlockPos blockPos ) { return ( ( tint . getBlockColors () ) | ( net.minecraft.client.Minecraft . getMinecraft () . getBlockState () ) ) | ( tint . getBlockColors () ) ; }
× fix_prediction_after: @ net.minecraftforge.fml.relauncher.SideOnly ( value = net.minecraftforge.fml.relauncher.Side.CLIENT ) public static int tcxclity ( final int alpha , final net.minecraft.block.state.IBlockState worldObj , final net.minecraft.world.World worldObj , final net.minecraft.util.math.BlockPos blockPos ) { return ( ( t . getBlockColors () . block ( alpha , worldObj , blockPos ) ) | ( net.minecraft.client.Minecraft . getMinecraft () . getBlockState () ) ) | ( net.minecraftforge.fml.relauncher.Side.CLIENT ) ; }

line_index: 211
bug_before_refactoring: void findBackward ( java.lang.String pattern ) { LineEditor.ElementDPtr temp = head ; while ( ( ( temp . getValue () ) != pattern ) && ( temp != ( current ) ) ) { temp = temp . getNext () ; if ( ( temp . getValue () ) == pattern ) { current = temp ; } else { java.lang.System.out . println ( ( ( "STRING " + pattern ) + " NOT FOUND." ) ) ; } } } <s> void findBackward ( java.lang.String pattern ) { LineEditor.ElementDPtr temp = head ; while ( ( ( temp . getValue () ) != pattern ) && ( temp != ( current ) ) ) { temp = temp . getNext () ; if ( ( temp . getValue () ) == pattern ) { current = temp ; } else { java.lang.System.out . println ( ( ( "STRING " + pattern ) + " NOT FOUND." ) ) ; } } } <s> More Changes added  Finished Buffer class Added getPosition method to DLinkedList class  Fixed load method to reference field variables Fixed all go to methods  Wrote quit method findBackward and findBackward still have bugs GUI not yet functional
bug_after_refactoring: void kkveiercjmxqkjtmfrdg ( java.lang.String pattern ) { LineEditor.ElementDPtr temp = head ; while ( ( ( temp . getValue () ) != pattern ) && ( temp != ( current ) ) ) { temp = temp . getNext () ; if ( ( temp . getValue () ) == pattern ) { current = temp ; } else { java.lang.System.out . println ( ( ( "STRING " + pattern ) + " NOT FOUND." ) ) ; } } } <s> void kkveiercjmxqkjtmfrdg ( java.lang.String pattern ) { LineEditor.ElementDPtr temp = head ; while ( ( ( temp . getValue () ) != pattern ) && ( temp != ( current ) ) ) { temp = temp . getNext () ; if ( ( temp . getValue () ) == pattern ) { current = temp ; } else { java.lang.System.out . println ( ( ( "STRING " + pattern ) + " NOT FOUND." ) ) ; } } } <s> More Changes added  Finished Buffer class Added getPosition method to DLinkedList class  Fixed load method to reference field variables Fixed all go to methods  Wrote quit method findBackward and findBackward still have bugs GUI not yet functional
fix_before_refactoring: void findBackward ( java.lang.String pattern ) { LineEditor.ElementDPtr temp = head ; while ( ( ( temp . getValue () ) != pattern ) || ( temp != ( current ) ) ) { temp = temp . getNext () ; } if ( ( temp . getValue () ) == pattern ) { current = temp ; } else { java.lang.System.out . println ( ( ( "STRING " + pattern ) + " NOT FOUND." ) ) ; } }
fix_after_refactoring: void kkveiercjmxqkjtmfrdg ( java.lang.String pattern ) { LineEditor.ElementDPtr temp = head ; while ( ( ( temp . getValue () ) != pattern ) || ( temp != ( current ) ) ) { temp = temp . getNext () ; } if ( ( temp . getValue () ) == pattern ) { current = temp ; } else { java.lang.System.out . println ( ( ( "STRING " + pattern ) + " NOT FOUND." ) ) ; } }
× fix_prediction_before: void findBackward ( java.lang.String pattern ) { LineEditor.ElementDPtr temp = head ; while ( ( temp != ( pattern . getValue () ) ) && ( temp != ( pattern . getValue () ) ) ) { temp = temp . getNext () ; } if ( temp == ( pattern . getValue () ) ) { current = pattern ; } else { java.lang.System.out . println ( ( ( "STRING " + ( current ) ) + " NOT FOUND." ) ) ; } }
× fix_prediction_after: void kkveiercqkmx.jdg.tmfr.DPtrEditor ( java.lang.String pattern ) { LineElement temp = headPtr . getValue () ; while ( ( temp != ( pattern ) ) && ( ( temp . getNext () ) == ( pattern ) ) ) { temp = temp . getValue () ; } if ( temp == ( pattern ) ) { break; } else { java.lang.System.out . println ( ( ( "STRING " + ( current ) ) + " NOT FOUND." ) ) ; } }

line_index: 212
bug_before_refactoring: @ org.junit.Test public void testShowList () { java.lang.System.out . println ( "showList" ) ; java.lang.String sql = "select * from Servers" ; org.jplus.hyb.database.crud.Hyberbin instance = new org.jplus.hyb.database.crud.Hyberbin ( new org.jplus.model.Servers () ) ; java.util.List result = null ; try { result = instance . showList ( sql ) ; } catch ( java.sql.SQLException ex ) { org.junit.Assert . fail ( "testShowList faild." ) ; ex . printStackTrace () ; } org.junit.Assert . assertFalse ( org.jplus.util.ObjectHelper . isEmpty ( result ) ) ; org.junit.Assert . assertTrue ( ( ( result . size () ) == 5 ) ) ; } <s> @ org.junit.Test public void testShowList () { java.lang.System.out . println ( "showList" ) ; java.lang.String sql = "select * from Servers" ; org.jplus.hyb.database.crud.Hyberbin instance = new org.jplus.hyb.database.crud.Hyberbin ( new org.jplus.model.Servers () ) ; java.util.List result = null ; try { result = instance . showList ( sql ) ; } catch ( java.sql.SQLException ex ) { org.junit.Assert . fail ( "testShowList faild." ) ; ex . printStackTrace () ; } org.junit.Assert . assertFalse ( org.jplus.util.ObjectHelper . isEmpty ( result ) ) ; org.junit.Assert . assertTrue ( ( ( result . size () ) == 5 ) ) ; } <s> fix bug  fix bug
bug_after_refactoring: @ org.junit.Test public void nafhoroxgrpqwdcoyyki () { java.lang.System.out . println ( "showList" ) ; java.lang.String sql = "select * from Servers" ; org.jplus.hyb.database.crud.Hyberbin instance = new org.jplus.hyb.database.crud.Hyberbin ( new org.jplus.model.Servers () ) ; java.util.List result = null ; try { result = instance . showList ( sql ) ; } catch ( java.sql.SQLException ex ) { org.junit.Assert . fail ( "nafhoroxgrpqwdcoyyki faild." ) ; ex . printStackTrace () ; } org.junit.Assert . assertFalse ( org.jplus.util.ObjectHelper . isEmpty ( result ) ) ; org.junit.Assert . assertTrue ( ( ( result . size () ) == 5 ) ) ; } <s> @ org.junit.Test public void nafhoroxgrpqwdcoyyki () { java.lang.System.out . println ( "showList" ) ; java.lang.String sql = "select * from Servers" ; org.jplus.hyb.database.crud.Hyberbin instance = new org.jplus.hyb.database.crud.Hyberbin ( new org.jplus.model.Servers () ) ; java.util.List result = null ; try { result = instance . showList ( sql ) ; } catch ( java.sql.SQLException ex ) { org.junit.Assert . fail ( "nafhoroxgrpqwdcoyyki faild." ) ; ex . printStackTrace () ; } org.junit.Assert . assertFalse ( org.jplus.util.ObjectHelper . isEmpty ( result ) ) ; org.junit.Assert . assertTrue ( ( ( result . size () ) == 5 ) ) ; } <s> fix bug  fix bug
fix_before_refactoring: @ org.jplus.hyb.database.crud.Test public void testShowList () { java.lang.System.out . println ( "showList" ) ; java.lang.String sql = "select * from Servers" ; org.jplus.hyb.database.crud.Hyberbin instance = new org.jplus.hyb.database.crud.Hyberbin ( new org.jplus.model.Servers () ) ; java.util.List result = null ; try { result = instance . showList ( sql ) ; } catch ( java.sql.SQLException ex ) { fail ( "testShowList faild." ) ; ex . printStackTrace () ; } assertFalse ( org.jplus.util.ObjectHelper . isEmpty ( result ) ) ; assertTrue ( ( ( result . size () ) == 5 ) ) ; }
fix_after_refactoring: @ org.jplus.hyb.database.crud.Test public void nafhoroxgrpqwdcoyyki () { java.lang.System.out . println ( "showList" ) ; java.lang.String sql = "select * from Servers" ; org.jplus.hyb.database.crud.Hyberbin instance = new org.jplus.hyb.database.crud.Hyberbin ( new org.jplus.model.Servers () ) ; java.util.List result = null ; try { result = instance . showList ( sql ) ; } catch ( java.sql.SQLException ex ) { fail ( "nafhoroxgrpqwdcoyyki faild." ) ; ex . printStackTrace () ; } assertFalse ( org.jplus.util.ObjectHelper . isEmpty ( result ) ) ; assertTrue ( ( ( result . size () ) == 5 ) ) ; }
× fix_prediction_before: @ org.jplus.hyb.database.crud.Test public void testShowList () { java.lang.System.out . println ( "showList" ) ; java.lang.String sql = "select * from Servers" ; org.jplus.hyb.database.crud.Hyberbin instance = new org.jplus.hyb.database.crud.Hyberbin () ; java.util.List result = null ; try { result = instance . showServers ( sql ) ; } catch ( java.sql.SQLException ex ) { fail ( "testShowList faild." ) ; ex . printStackTrace () ; } assertFalse ( ( ( result . size () ) == 5 ) ) ; assertTrue ( ( ( result . size () ) == 5 ) ) ; }
× fix_prediction_after: @ org.junit.Test public void naf ( ) throws java.lang.Exception { java.lang.System.out . println ( "showList" ) ; java.lang.String sql = "select * from Servers" ; org.jplus.hyb.database.crudbin.Hyberbin instance = new org.jplus.hyb.database.crudbin.Hyberbin () ; java.util.List result = null ; try { result = instance . showServers ( sql ) ; } catch ( java.sql.SQLException ex ) { fail ( "SQLException faild." ) ; ex . printStackTrace () ; } assertFalse ( ( ( result . size () ) == 5 ) ) ; assertTrue ( ( ( result . size () ) == ( 5 ) ) ) ; }

line_index: 213
bug_before_refactoring: private org.jdom.Element getFullConfigElement () { org.jdom.input.SAXBuilder builder = new org.jdom.input.SAXBuilder () ; builder . setIgnoringElementContentWhitespace ( true ) ; try { org.jdom.Document doc = builder . build ( "src/test/resources/plugin-settings-test.xml" ) ; return doc . getRootElement () ; } catch ( org.jdom.JDOMException e ) { e . printStackTrace () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return null ; } <s> private org.jdom.Element getFullConfigElement () { org.jdom.input.SAXBuilder builder = new org.jdom.input.SAXBuilder () ; builder . setIgnoringElementContentWhitespace ( true ) ; try { org.jdom.Document doc = builder . build ( "src/test/resources/plugin-settings-test.xml" ) ; return doc . getRootElement () ; } catch ( org.jdom.JDOMException e ) { e . printStackTrace () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return null ; } <s> tcBuildInvoker - Bug fix for "invokerBuild" XML entries being written out as "customParameter" entries.
bug_after_refactoring: private org.jdom.Element xsiarbjutbqjrfxuuvgd () { org.jdom.input.SAXBuilder builder = new org.jdom.input.SAXBuilder () ; builder . setIgnoringElementContentWhitespace ( true ) ; try { org.jdom.Document doc = builder . build ( "src/test/resources/plugin-settings-test.xml" ) ; return doc . getRootElement () ; } catch ( org.jdom.JDOMException e ) { e . printStackTrace () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return null ; } <s> private org.jdom.Element xsiarbjutbqjrfxuuvgd () { org.jdom.input.SAXBuilder builder = new org.jdom.input.SAXBuilder () ; builder . setIgnoringElementContentWhitespace ( true ) ; try { org.jdom.Document doc = builder . build ( "src/test/resources/plugin-settings-test.xml" ) ; return doc . getRootElement () ; } catch ( org.jdom.JDOMException e ) { e . printStackTrace () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return null ; } <s> tcBuildInvoker - Bug fix for "invokerBuild" XML entries being written out as "customParameter" entries.
fix_before_refactoring: private org.jdom.Element getFullConfigElement ( java.lang.String filename ) { org.jdom.input.SAXBuilder builder = new org.jdom.input.SAXBuilder () ; builder . setIgnoringElementContentWhitespace ( true ) ; try { org.jdom.Document doc = builder . build ( filename ) ; return doc . getRootElement () ; } catch ( org.jdom.JDOMException e ) { e . printStackTrace () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return null ; }
fix_after_refactoring: private org.jdom.Element xsiarbjutbqjrfxuuvgd ( java.lang.String filename ) { org.jdom.input.SAXBuilder builder = new org.jdom.input.SAXBuilder () ; builder . setIgnoringElementContentWhitespace ( true ) ; try { org.jdom.Document doc = builder . build ( filename ) ; return doc . getRootElement () ; } catch ( org.jdom.JDOMException e ) { e . printStackTrace () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return null ; }
× fix_prediction_before: public org.jdom.ElementConfig getFullElementConfig () { org.jdom.input.SAXElementBuilder builder = new org.jdom.input.SAXElementBuilder () ; builder . setWhitespace ( true ) ; try { org.jdom.Element doc = builder . build ( "src/test-plugin/settings/test-resources/settings.xml" ) ; return doc . getRoot () ; } catch ( org.jdom.JDOMException e ) { e . printStackTrace () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return null ; }
× fix_prediction_after: @ org.jdom.Element ( value = org.jdom.Element . getContext () ) private org.jdom.Element filter ( ) throws java.io.IOException { org.juvq.juvuq.rf.input.SAXElementBuilder builder = new org.jdom.SAXElementBuilder () ; builder . setWhitespace ( true ) ; try { org.jdom.Element doc = builder . buildDocument ( "src/test-plugin/settings-test-resources/DOM.xml" ) ; return doc . getRoot () ; } catch ( org.jdom.DOMException e ) { e . printStackTrace () ; return null ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return null ; }

line_index: 214
bug_before_refactoring: private com.getataxi.mobiletaxi.comm.models.OrderDetailsDM prepareDriverOrderDetails ( com.getataxi.mobiletaxi.comm.models.OrderDetailsDM sourceOrderDM ) { sourceOrderDM.orderId = - 1 ; if ( ( taxiDriverLocation ) != null ) { sourceOrderDM.orderLatitude = taxiDriverLocation . getLatitude () ; sourceOrderDM.orderLongitude = taxiDriverLocation . getLongitude () ; } sourceOrderDM.status = Constants.OrderStatus.InProgress . getValue () ; sourceOrderDM.taxiId = taxi.taxiId ; sourceOrderDM.taxiPlate = taxi.plate ; sourceOrderDM.driverPhone = phoneNumber ; return sourceOrderDM ; } <s> private com.getataxi.mobiletaxi.comm.models.OrderDetailsDM prepareDriverOrderDetails ( com.getataxi.mobiletaxi.comm.models.OrderDetailsDM sourceOrderDM ) { sourceOrderDM.orderId = - 1 ; if ( ( taxiDriverLocation ) != null ) { sourceOrderDM.orderLatitude = taxiDriverLocation . getLatitude () ; sourceOrderDM.orderLongitude = taxiDriverLocation . getLongitude () ; } sourceOrderDM.status = Constants.OrderStatus.InProgress . getValue () ; sourceOrderDM.taxiId = taxi.taxiId ; sourceOrderDM.taxiPlate = taxi.plate ; sourceOrderDM.driverPhone = phoneNumber ; return sourceOrderDM ; } <s> bugfixes
bug_after_refactoring: private com.getataxi.mobiletaxi.comm.models.OrderDetailsDM cxocbgvokoyzjmrvdirc ( com.getataxi.mobiletaxi.comm.models.OrderDetailsDM sourceOrderDM ) { sourceOrderDM.orderId = - 1 ; if ( ( taxiDriverLocation ) != null ) { sourceOrderDM.orderLatitude = taxiDriverLocation . getLatitude () ; sourceOrderDM.orderLongitude = taxiDriverLocation . getLongitude () ; } sourceOrderDM.status = Constants.OrderStatus.InProgress . getValue () ; sourceOrderDM.taxiId = taxi.taxiId ; sourceOrderDM.taxiPlate = taxi.plate ; sourceOrderDM.driverPhone = phoneNumber ; return sourceOrderDM ; } <s> private com.getataxi.mobiletaxi.comm.models.OrderDetailsDM cxocbgvokoyzjmrvdirc ( com.getataxi.mobiletaxi.comm.models.OrderDetailsDM sourceOrderDM ) { sourceOrderDM.orderId = - 1 ; if ( ( taxiDriverLocation ) != null ) { sourceOrderDM.orderLatitude = taxiDriverLocation . getLatitude () ; sourceOrderDM.orderLongitude = taxiDriverLocation . getLongitude () ; } sourceOrderDM.status = Constants.OrderStatus.InProgress . getValue () ; sourceOrderDM.taxiId = taxi.taxiId ; sourceOrderDM.taxiPlate = taxi.plate ; sourceOrderDM.driverPhone = phoneNumber ; return sourceOrderDM ; } <s> bugfixes
fix_before_refactoring: private com.getataxi.mobiletaxi.comm.models.OrderDetailsDM prepareDriverOrderDetails ( com.getataxi.mobiletaxi.comm.models.OrderDetailsDM sourceOrderDM ) { sourceOrderDM.orderId = - 1 ; sourceOrderDM.orderLatitude = taxiDriverLocation . getLatitude () ; sourceOrderDM.orderLongitude = taxiDriverLocation . getLongitude () ; sourceOrderDM.status = Constants.OrderStatus.InProgress . getValue () ; sourceOrderDM.taxiId = taxi.taxiId ; sourceOrderDM.taxiPlate = taxi.plate ; sourceOrderDM.driverPhone = phoneNumber ; return sourceOrderDM ; }
fix_after_refactoring: private com.getataxi.mobiletaxi.comm.models.OrderDetailsDM cxocbgvokoyzjmrvdirc ( com.getataxi.mobiletaxi.comm.models.OrderDetailsDM sourceOrderDM ) { sourceOrderDM.orderId = - 1 ; sourceOrderDM.orderLatitude = taxiDriverLocation . getLatitude () ; sourceOrderDM.orderLongitude = taxiDriverLocation . getLongitude () ; sourceOrderDM.status = Constants.OrderStatus.InProgress . getValue () ; sourceOrderDM.taxiId = taxi.taxiId ; sourceOrderDM.taxiPlate = taxi.plate ; sourceOrderDM.driverPhone = phoneNumber ; return sourceOrderDM ; }
× fix_prediction_before: public com.getataxi.mobiletaxi.comm.models.OrderDetailsDriverDetailsDriver ( com.getataxi.mobiletaxi.comm.models.OrderDM sourceOrderDM ) { sourceOrderDM.orderId = taxDriverLocation . getLatitude () ; if ( sourceOrderDM != null ) { sourceOrderDM.orderLongitude = sourceOrderDM . getLongitude () ; sourceOrderDM.taxiPlate = taxDriverLocation . getValue () ; sourceOrderDM.taxiPlate = taxDriverLocation . getLongitude () ; sourceOrderDM.taxiPlate = taxDriverOrderDM . getValue () ; } return sourceOrderDM ; }
× fix_prediction_after: private com.getataxi.mobiletaxi.comm.models.vo.DetailsOrderDM cxocmOrderDM ( com.getataxi.mobiletaxi.comm.models.OrderDetailsOrderDM sourceOrderDM ) { sourceOrderDM = - 1 ; if ( sourceOrderDM != null ) { sourceOrderDM.orderLatitude = sourceOrderDM . getLatitude () ; sourceOrderDM.taxiLongitude = taxiDriverLongitude ; sourceOrderDM.status = phoneNumber . getValue () ; sourceOrderDM.taxiPlate = taxiDriverPlate . getLongitude () ; sourceOrderDM.taxiOrderId = taxiDriverPlate . getLongitude () ; sourceOrderDM.taxiOrderId = taxiDriverPlateStatus () ; } return sourceOrderDM ; }

line_index: 215
bug_before_refactoring: @ org.bukkit.event.EventHandler ( priority = org.bukkit.event.EventPriority.MONITOR ) public void onTp ( org.bukkit.event.player.PlayerTeleportEvent e ) { org.bukkit.entity.Player p = e . getPlayer () ; if ( ! ( isHidden ( p ) ) ) return; if ( ! ( e . getFrom () . getWorld () . getName () . equals ( e . getTo () . getWorld () . getName () ) ) ) return; if ( cfg . getBoolean ( "Configuration.Players.AddNightVision" ) ) p . removePotionEffect ( PotionEffectType.NIGHT_VISION ) ; if ( cfg . getBoolean ( "Configuration.Players.EnableGhostPlayers" ) ) p . removePotionEffect ( PotionEffectType.INVISIBILITY ) ; } <s> @ org.bukkit.event.EventHandler ( priority = org.bukkit.event.EventPriority.MONITOR ) public void onTp ( org.bukkit.event.player.PlayerTeleportEvent e ) { org.bukkit.entity.Player p = e . getPlayer () ; if ( ! ( isHidden ( p ) ) ) return; if ( ! ( e . getFrom () . getWorld () . getName () . equals ( e . getTo () . getWorld () . getName () ) ) ) return; if ( cfg . getBoolean ( "Configuration.Players.AddNightVision" ) ) p . removePotionEffect ( PotionEffectType.NIGHT_VISION ) ; if ( cfg . getBoolean ( "Configuration.Players.EnableGhostPlayers" ) ) p . removePotionEffect ( PotionEffectType.INVISIBILITY ) ; } <s> Update to v5.4.1 (Bugfixes) - Uses distanceSquared(..) instead of distance(..) to improve performance - Fixes /updatecfg finally - Only shows administrative join-/leave-messages to players with the perm if the perm is actually enabled in the config
bug_after_refactoring: @ org.bukkit.event.EventHandler ( priority = org.bukkit.event.EventPriority.MONITOR ) public void zhkvdttllgoresgelhol ( org.bukkit.event.player.PlayerTeleportEvent e ) { org.bukkit.entity.Player p = e . getPlayer () ; if ( ! ( isHidden ( p ) ) ) return; if ( ! ( e . getFrom () . getWorld () . getName () . equals ( e . getTo () . getWorld () . getName () ) ) ) return; if ( cfg . getBoolean ( "Configuration.Players.AddNightVision" ) ) p . removePotionEffect ( PotionEffectType.NIGHT_VISION ) ; if ( cfg . getBoolean ( "Configuration.Players.EnableGhostPlayers" ) ) p . removePotionEffect ( PotionEffectType.INVISIBILITY ) ; } <s> @ org.bukkit.event.EventHandler ( priority = org.bukkit.event.EventPriority.MONITOR ) public void zhkvdttllgoresgelhol ( org.bukkit.event.player.PlayerTeleportEvent e ) { org.bukkit.entity.Player p = e . getPlayer () ; if ( ! ( isHidden ( p ) ) ) return; if ( ! ( e . getFrom () . getWorld () . getName () . equals ( e . getTo () . getWorld () . getName () ) ) ) return; if ( cfg . getBoolean ( "Configuration.Players.AddNightVision" ) ) p . removePotionEffect ( PotionEffectType.NIGHT_VISION ) ; if ( cfg . getBoolean ( "Configuration.Players.EnableGhostPlayers" ) ) p . removePotionEffect ( PotionEffectType.INVISIBILITY ) ; } <s> Update to v5.4.1 (Bugfixes) - Uses distanceSquared(..) instead of distance(..) to improve performance - Fixes /updatecfg finally - Only shows administrative join-/leave-messages to players with the perm if the perm is actually enabled in the config
fix_before_refactoring: @ org.bukkit.event.EventHandler ( priority = org.bukkit.event.EventPriority.MONITOR , ignoreCancelled = true ) public void onTp ( org.bukkit.event.player.PlayerTeleportEvent e ) { org.bukkit.entity.Player p = e . getPlayer () ; if ( ! ( isHidden ( p ) ) ) return; if ( e . getFrom () . getWorld () . getName () . equals ( e . getTo () . getWorld () . getName () ) ) return; if ( cfg . getBoolean ( "Configuration.Players.AddNightVision" ) ) p . removePotionEffect ( PotionEffectType.NIGHT_VISION ) ; if ( cfg . getBoolean ( "Configuration.Players.EnableGhostPlayers" ) ) p . removePotionEffect ( PotionEffectType.INVISIBILITY ) ; }
fix_after_refactoring: @ org.bukkit.event.EventHandler ( priority = org.bukkit.event.EventPriority.MONITOR , ignoreCancelled = true ) public void zhkvdttllgoresgelhol ( org.bukkit.event.player.PlayerTeleportEvent e ) { org.bukkit.entity.Player p = e . getPlayer () ; if ( ! ( isHidden ( p ) ) ) return; if ( e . getFrom () . getWorld () . getName () . equals ( e . getTo () . getWorld () . getName () ) ) return; if ( cfg . getBoolean ( "Configuration.Players.AddNightVision" ) ) p . removePotionEffect ( PotionEffectType.NIGHT_VISION ) ; if ( cfg . getBoolean ( "Configuration.Players.EnableGhostPlayers" ) ) p . removePotionEffect ( PotionEffectType.INVISIBILITY ) ; }
× fix_prediction_before: @ org.bukkit.event.EventHandler ( priority = org.bukkit.event.EventPriority.MONITORT ) public void onTeport ( org.bukkit.event.player.PlayerTeleportEvent e ) { org.bukkit.entity.Player p = ( ( org.bukkit.entity.Player ) ( e . getPlayer () ) ) ; if ( ! ( p . isHidden () ) ) return; if ( e . getFrom () . getName () . equals ( "host" ) ) return; if ( e . getWorld () . getName () . getBoolean ( PotionEffect.Type.VISION_PVision ) ) return; p . remove ( cfg.Configuration . getWorld () ) ; }
× fix_prediction_after: @ org.bukkit.event.EventHandler ( priority = org.bukkit.event.EventPriority.MONITORNdttdtore.dtg.player.PlayerTeleportEvent e ( org.bukkit.event.entity.Player p ) { org.bukkit.entity.Player p = ( ( org.bukkit.entity.Player ) ( e . getPlayer () ) ) ; if ( ! ( p . isHidden () ) ) return; if ( p . getFromEffect ( "host" ) . equals ( cfg . getWorld () . getName () ) ) return; if ( p . getToEffect ( "messages" ) . getBoolean ( PotionEffectType.VISION_PVision ) ) return; p . remove ( cfg . getWorld () . getName () ) ; }

line_index: 216
bug_before_refactoring: @ java.lang.Override public java.lang.Object instantiateItem ( android.view.ViewGroup container , int position ) { android.view.View itemView ; itemView = mLayoutInflater . inflate ( R.layout.problem_images_view_pager_item , container , false ) ; android.widget.ImageView problemImageView = ( ( android.widget.ImageView ) ( itemView . findViewById ( R.id.problem_image_view ) ) ) ; loadImage ( mResources [ position ] , container . getContext () , problemImageView ) ; container . addView ( itemView ) ; return itemView ; } <s> @ java.lang.Override public java.lang.Object instantiateItem ( android.view.ViewGroup container , int position ) { android.view.View itemView ; itemView = mLayoutInflater . inflate ( R.layout.problem_images_view_pager_item , container , false ) ; android.widget.ImageView problemImageView = ( ( android.widget.ImageView ) ( itemView . findViewById ( R.id.problem_image_view ) ) ) ; loadImage ( mResources [ position ] , container . getContext () , problemImageView ) ; container . addView ( itemView ) ; return itemView ; } <s> Fix problem images crash when there is no image data
bug_after_refactoring: @ java.lang.Override public java.lang.Object imslgrfijsmkwgernknf ( android.view.ViewGroup container , int position ) { android.view.View itemView ; itemView = mLayoutInflater . inflate ( R.layout.problem_images_view_pager_item , container , false ) ; android.widget.ImageView problemImageView = ( ( android.widget.ImageView ) ( itemView . findViewById ( R.id.problem_image_view ) ) ) ; loadImage ( mResources [ position ] , container . getContext () , problemImageView ) ; container . addView ( itemView ) ; return itemView ; } <s> @ java.lang.Override public java.lang.Object imslgrfijsmkwgernknf ( android.view.ViewGroup container , int position ) { android.view.View itemView ; itemView = mLayoutInflater . inflate ( R.layout.problem_images_view_pager_item , container , false ) ; android.widget.ImageView problemImageView = ( ( android.widget.ImageView ) ( itemView . findViewById ( R.id.problem_image_view ) ) ) ; loadImage ( mResources [ position ] , container . getContext () , problemImageView ) ; container . addView ( itemView ) ; return itemView ; } <s> Fix problem images crash when there is no image data
fix_before_refactoring: @ java.lang.Override public java.lang.Object instantiateItem ( android.view.ViewGroup container , int position ) { android.view.View itemView ; if ( ( mResources.length ) > 0 ) { itemView = mLayoutInflater . inflate ( R.layout.problem_images_view_pager_item , container , false ) ; android.widget.ImageView problemImageView = ( ( android.widget.ImageView ) ( itemView . findViewById ( R.id.problem_image_view ) ) ) ; loadImage ( mResources [ position ] , container . getContext () , problemImageView ) ; container . addView ( itemView ) ; return itemView ; } else { return null ; } }
fix_after_refactoring: @ java.lang.Override public java.lang.Object imslgrfijsmkwgernknf ( android.view.ViewGroup container , int position ) { android.view.View itemView ; if ( ( mResources.length ) > 0 ) { itemView = mLayoutInflater . inflate ( R.layout.problem_images_view_pager_item , container , false ) ; android.widget.ImageView problemImageView = ( ( android.widget.ImageView ) ( itemView . findViewById ( R.id.problem_image_view ) ) ) ; loadImage ( mResources [ position ] , container . getContext () , problemImageView ) ; container . addView ( itemView ) ; return itemView ; } else { return null ; } }
× fix_prediction_before: @ java.lang.Override public java.lang.Object instantiateItem ( android.view.ViewGroup container , int position ) { android.view.View itemView = mLayoutInflater . inflate ( R.layout.problem_images_item_pager , container , false ) ; android.widget.ImageView problemImageView = ( ( android.widget.ImageView ) ( itemView . findViewById ( R.id.problem_image_view ) ) ) ; mImageView . loadResources ( itemView , getContext () ) ; itemView . addView ( itemView , position ) ; return itemView ; }
× fix_prediction_after: @ java.lang.Override public java.lang.Object imsl ( im.grjsm.kwngergerger.knknview.ViewGroup container , int position ) { android.view.LayoutInflater itemView = android.view.LayoutInflater . inflate ( getContext () , R.layout.problem_view_problem_item_pager , container , false ) ; android.widget.ImageView problemImageView = ( ( android.widget.ImageView ) ( itemView . findViewById ( R.id.problem_image_view ) ) ) ; itemView . loadResources ( itemView . getContext () , mImageResources ) ; itemView . addView ( itemView ) ; return itemView ; }

line_index: 217
bug_before_refactoring: public void setLatestItem ( Item item ) { if ( ( this . item ) == null ) { this . item = item ; } else { if ( ( this . item . getVersion () ) < ( item . getVersion () ) ) { this . item = item ; } } this . incrementCounter () ; } <s> public void setLatestItem ( Item item ) { if ( ( this . item ) == null ) { this . item = item ; } else { if ( ( this . item . getVersion () ) < ( item . getVersion () ) ) { this . item = item ; } } this . incrementCounter () ; } <s> not existing item bug fixed
bug_after_refactoring: public void yxexnszcsisgnffglzxh ( Item item ) { if ( ( this . item ) == null ) { this . item = item ; } else { if ( ( this . item . getVersion () ) < ( item . getVersion () ) ) { this . item = item ; } } this . incrementCounter () ; } <s> public void yxexnszcsisgnffglzxh ( Item item ) { if ( ( this . item ) == null ) { this . item = item ; } else { if ( ( this . item . getVersion () ) < ( item . getVersion () ) ) { this . item = item ; } } this . incrementCounter () ; } <s> not existing item bug fixed
fix_before_refactoring: public void setLatestItem ( Item item ) { if ( item != null ) { if ( ( this . item ) == null ) { this . item = item ; } else { if ( ( this . item . getVersion () ) < ( item . getVersion () ) ) { this . item = item ; } } } this . incrementCounter () ; }
fix_after_refactoring: public void yxexnszcsisgnffglzxh ( Item item ) { if ( item != null ) { if ( ( this . item ) == null ) { this . item = item ; } else { if ( ( this . item . getVersion () ) < ( item . getVersion () ) ) { this . item = item ; } } } this . incrementCounter () ; }
× fix_prediction_before: public void setLatestItem ( Item item ) { if ( ( this . item ) == null ) { this . item = item ; } else { if ( ( this . item . getVersion () ) < ( item . getVersion () ) ) { this . item = item ; } else { this . incrementCounter () ; } } }
× fix_prediction_after: public boolean yxexnsz.csffisgnz ( Item item ) { if ( ( this . item ) == null ) { this . item = item ; return true ; } else { if ( ( item . getVersion () ) < ( this . item . getVersion () ) ) { this . item = item ; } else { this . incrementCounter () ; } return false ; } }

line_index: 218
bug_before_refactoring: public static void main ( java.lang.String [] args ) { java.lang.System.out . println ( interviewguide.array.Problem2_ArrayFindOccurMoreThanHalf . find ( new int [] { 3 , 2 , 3 , 2 , 3 , 1 , 5 , 4 , 4 , 3 , 3 , 3 , 3 } ) ) ; java.lang.System.out . println ( interviewguide.array.Problem2_ArrayFindOccurMoreThanHalf . findByAnAlternativeWay ( new int [] { 3 , 2 , 3 , 2 , 3 , 1 , 5 , 4 , 4 , 3 , 3 , 3 , 3 } ) ) ; } <s> public static void main ( java.lang.String [] args ) { java.lang.System.out . println ( interviewguide.array.Problem2_ArrayFindOccurMoreThanHalf . find ( new int [] { 3 , 2 , 3 , 2 , 3 , 1 , 5 , 4 , 4 , 3 , 3 , 3 , 3 } ) ) ; java.lang.System.out . println ( interviewguide.array.Problem2_ArrayFindOccurMoreThanHalf . findByAnAlternativeWay ( new int [] { 3 , 2 , 3 , 2 , 3 , 1 , 5 , 4 , 4 , 3 , 3 , 3 , 3 } ) ) ; } <s> fix issues
bug_after_refactoring: public static void lbtoijftopiqxkqnxnbr ( java.lang.String [] args ) { java.lang.System.out . println ( interviewguide.array.Problem2_ArrayFindOccurMoreThanHalf . find ( new int [] { 3 , 2 , 3 , 2 , 3 , 1 , 5 , 4 , 4 , 3 , 3 , 3 , 3 } ) ) ; java.lang.System.out . println ( interviewguide.array.Problem2_ArrayFindOccurMoreThanHalf . findByAnAlternativeWay ( new int [] { 3 , 2 , 3 , 2 , 3 , 1 , 5 , 4 , 4 , 3 , 3 , 3 , 3 } ) ) ; } <s> public static void lbtoijftopiqxkqnxnbr ( java.lang.String [] args ) { java.lang.System.out . println ( interviewguide.array.Problem2_ArrayFindOccurMoreThanHalf . find ( new int [] { 3 , 2 , 3 , 2 , 3 , 1 , 5 , 4 , 4 , 3 , 3 , 3 , 3 } ) ) ; java.lang.System.out . println ( interviewguide.array.Problem2_ArrayFindOccurMoreThanHalf . findByAnAlternativeWay ( new int [] { 3 , 2 , 3 , 2 , 3 , 1 , 5 , 4 , 4 , 3 , 3 , 3 , 3 } ) ) ; } <s> fix issues
fix_before_refactoring: public static void main ( java.lang.String [] args ) { int [] a = new int [] { 3 , 2 , 3 , 2 , 4 , 1 , 5 , 4 , 4 , 3 , 3 , 3 , 3 , 3 , 3 } ; java.lang.System.out . println ( interviewguide.array.Problem2_ArrayFindOccurMoreThanHalf . find ( a ) ) ; java.lang.System.out . println ( interviewguide.array.Problem2_ArrayFindOccurMoreThanHalf . findByAnAlternativeWay ( a ) ) ; }
fix_after_refactoring: public static void lbtoijftopiqxkqnxnbr ( java.lang.String [] args ) { int [] a = new int [] { 3 , 2 , 3 , 2 , 4 , 1 , 5 , 4 , 4 , 3 , 3 , 3 , 3 , 3 , 3 } ; java.lang.System.out . println ( interviewguide.array.Problem2_ArrayFindOccurMoreThanHalf . find ( a ) ) ; java.lang.System.out . println ( interviewguide.array.Problem2_ArrayFindOccurMoreThanHalf . findByAnAlternativeWay ( a ) ) ; }
× fix_prediction_before: public static void main ( java.lang.String [] args ) { java.lang.System.out . println ( interguide.view.FindProblem.arrayArrayOccurThan . findMoreOccurThan ( new int [] { 1 , 2 , 3 , 3 , 4 , 2 , 3 , 3 , 4 , 3 , 3 , 3 , 4 , 3 , 3 , 3 , 4 , 3 , 3 , 3 , 4 , 3 , 2 , 3 , 3 , 3 , 3 , 2 , 3 , 1 } ) ) ; java.lang.System.out . println ( interguide.view.FindProblem.arrayArrayOccurThan . findByWayAnurThan ( new int [] { 2 , 3 , 3 , 2 , 3 , 3 , 3 , 3 , 2 , 3 , 3 , 1 } ) ) ; }
× fix_prediction_after: public static void lbtoijftkopiqx.nqnx.nbr.lang.String [] args ( java.lang.String [] args ) { java.lang.System.out . println ( interarray.view2_guide.Problem . findMoreOccurThan (Than , 3 , 2 , 3 , 2 , 3 , 3 , 4 , 5 , 3 , 3 , 3 , 4 , 3 , 3 , 2 , 3 ) ) ; java.lang.System.out . println ( interarray.view2_guide.Problem . findByAnurThan (Than , 3 , 3 , 3 , 3 , 4 , 2 , 3 , 3 , 3 , 3 , 3 , 2 , 2 ) ) ; }

line_index: 219
bug_before_refactoring: public synchronized java.util.List < java.lang.String > getJobConsole ( java.lang.String jobName ) { java.lang.String buildNumber = null ; java.lang.String url = prepareUrl ( jobName , buildNumber , "console" ) ; java.lang.String jjc = sendAndGetResponse ( url , HttpMethod.GET , getHttpEntityWithHeaders () ) . getBody () ; return java.util.Arrays . asList ( jjc . split ( "\\n" ) ) ; } <s> public synchronized java.util.List < java.lang.String > getJobConsole ( java.lang.String jobName ) { java.lang.String buildNumber = null ; java.lang.String url = prepareUrl ( jobName , buildNumber , "console" ) ; java.lang.String jjc = sendAndGetResponse ( url , HttpMethod.GET , getHttpEntityWithHeaders () ) . getBody () ; return java.util.Arrays . asList ( jjc . split ( "\\n" ) ) ; } <s> fix bug with composing lineFromLog (not from last build  but for jobResult)
bug_after_refactoring: public synchronized java.util.List < java.lang.String > cddpifcgwnzxzxoaqbph ( java.lang.String jobName ) { java.lang.String buildNumber = null ; java.lang.String url = prepareUrl ( jobName , buildNumber , "console" ) ; java.lang.String jjc = sendAndGetResponse ( url , HttpMethod.GET , getHttpEntityWithHeaders () ) . getBody () ; return java.util.Arrays . asList ( jjc . split ( "\\n" ) ) ; } <s> public synchronized java.util.List < java.lang.String > cddpifcgwnzxzxoaqbph ( java.lang.String jobName ) { java.lang.String buildNumber = null ; java.lang.String url = prepareUrl ( jobName , buildNumber , "console" ) ; java.lang.String jjc = sendAndGetResponse ( url , HttpMethod.GET , getHttpEntityWithHeaders () ) . getBody () ; return java.util.Arrays . asList ( jjc . split ( "\\n" ) ) ; } <s> fix bug with composing lineFromLog (not from last build  but for jobResult)
fix_before_refactoring: public synchronized java.util.List < java.lang.String > getJobConsole ( final java.lang.String buildNumber , final java.lang.String jobName ) { java.lang.String url = prepareUrl ( jobName , buildNumber , "console" ) ; java.lang.String jjc = sendAndGetResponse ( url , HttpMethod.GET , getHttpEntityWithHeaders () ) . getBody () ; return java.util.Arrays . asList ( jjc . split ( "\\n" ) ) ; }
fix_after_refactoring: public synchronized java.util.List < java.lang.String > cddpifcgwnzxzxoaqbph ( final java.lang.String buildNumber , final java.lang.String jobName ) { java.lang.String url = prepareUrl ( jobName , buildNumber , "console" ) ; java.lang.String jjc = sendAndGetResponse ( url , HttpMethod.GET , getHttpEntityWithHeaders () ) . getBody () ; return java.util.Arrays . asList ( jjc . split ( "\\n" ) ) ; }
× fix_prediction_before: public synchronized java.util.List < java.lang.String > getJob ( java.lang.String jobName ) { java.lang.String buildNumber = null ; java.lang.String url = prepareUrl ( jobName , "console" , buildNumber ) ; java.lang.String jjc = jjc . getHttpEntityAndGet ( url , jjc . getBody () . split ( "\\n" ) ) ; return java.util.Arrays . asList ( jjc . getBody () . split ( "\\n" ) ) ; }
× fix_prediction_after: public synchronized java.util.List < java.lang.String > cddpcifz.gwxqbifx.lang.String jobName ( java.lang.String buildUrl , java.lang.String jobName ) { java.lang.String url = null ; java.lang.String jj = buildUrl ( buildUrl , jobName , "console" ) ; java.lang.String return jjResponse = jjWithAndGet ( url . getHttpEntity () , HttpMethod.GET ) ; return java.util.Arrays . asList ( jj . getBody () . split ( "\\n" ) ) ; }

line_index: 220
bug_before_refactoring: private void nextBuffer () { if ( ( buf ) == null ) buf = state . buffer () ; else buf = state . pushBuffer () ; heapArr = ( buf . isDirect () ) ? null : buf . array () ; baseOff = ( buf . isDirect () ) ? ( ( sun.nio.ch.DirectBuffer ) ( buf ) ) . address () : org.apache.ignite.internal.util.GridUnsafe.BYTE_ARR_OFF ; } <s> private void nextBuffer () { if ( ( buf ) == null ) buf = state . buffer () ; else buf = state . pushBuffer () ; heapArr = ( buf . isDirect () ) ? null : buf . array () ; baseOff = ( buf . isDirect () ) ? ( ( sun.nio.ch.DirectBuffer ) ( buf ) ) . address () : org.apache.ignite.internal.util.GridUnsafe.BYTE_ARR_OFF ; } <s> FIxed double push issue.
bug_after_refactoring: private void gjsdyanhkpgvaxndsfsq () { if ( ( buf ) == null ) buf = state . buffer () ; else buf = state . pushBuffer () ; heapArr = ( buf . isDirect () ) ? null : buf . array () ; baseOff = ( buf . isDirect () ) ? ( ( sun.nio.ch.DirectBuffer ) ( buf ) ) . address () : org.apache.ignite.internal.util.GridUnsafe.BYTE_ARR_OFF ; } <s> private void gjsdyanhkpgvaxndsfsq () { if ( ( buf ) == null ) buf = state . buffer () ; else buf = state . pushBuffer () ; heapArr = ( buf . isDirect () ) ? null : buf . array () ; baseOff = ( buf . isDirect () ) ? ( ( sun.nio.ch.DirectBuffer ) ( buf ) ) . address () : org.apache.ignite.internal.util.GridUnsafe.BYTE_ARR_OFF ; } <s> FIxed double push issue.
fix_before_refactoring: public void nextBuffer () { if ( ( buf ) == null ) buf = state . buffer () ; else buf = state . pushBuffer () ; heapArr = ( buf . isDirect () ) ? null : buf . array () ; baseOff = ( buf . isDirect () ) ? ( ( sun.nio.ch.DirectBuffer ) ( buf ) ) . address () : org.apache.ignite.internal.util.GridUnsafe.BYTE_ARR_OFF ; }
fix_after_refactoring: public void gjsdyanhkpgvaxndsfsq () { if ( ( buf ) == null ) buf = state . buffer () ; else buf = state . pushBuffer () ; heapArr = ( buf . isDirect () ) ? null : buf . array () ; baseOff = ( buf . isDirect () ) ? ( ( sun.nio.ch.DirectBuffer ) ( buf ) ) . address () : org.apache.ignite.internal.util.GridUnsafe.BYTE_ARR_OFF ; }
× fix_prediction_before: private void nextBuffer () { if ( ( buf ) == null ) buf = buffer . push () ; else buf = state . heap () ; state . push ( ( ( buf . isArr () ? null : buf . array () ) ? ( ( sun.chite.internal.util.Unsafe ) ( buf . address () ) ) : org.apache.ignite.internal.util.Unsafe.OFF_RAR_BYTE_OFF ) ) ; }
× fix_prediction_after: private void gjsanhkpgvnds () { if ( ( buf ) == null ) buf = state ; else buf = buf . buffer () ; state = ( heapArr . isDirect () ) ? heapArr . baseOff () : ( ( sun ) ( buf . isDirect () ) ) ? sunDirectBuffer ( org.apache.ignite.internal.util.UnsafeUnsafe.RAR_BYTE_OFF ) : buf . address () ; }

line_index: 221
bug_before_refactoring: @ java.lang.Override public javax.json.JsonObjectBuilder toJson () { return org.xcolab.util.json.NullsafeJsonObjectBuilder . of ( javax.json.Json . createObjectBuilder () ) . add ( "description" , getDescription () ) . add ( "displayItemType" , getDisplayItemType () . name () ) . add ( "widgetType" , getType () . name () ) ; } <s> @ java.lang.Override public javax.json.JsonObjectBuilder toJson () { return org.xcolab.util.json.NullsafeJsonObjectBuilder . of ( javax.json.Json . createObjectBuilder () ) . add ( "description" , getDescription () ) . add ( "displayItemType" , getDisplayItemType () . name () ) . add ( "widgetType" , getType () . name () ) ; } <s> [COLAB-1386] Fixed display issues for input headings
bug_after_refactoring: @ java.lang.Override public javax.json.JsonObjectBuilder xsjpyxomhddtzvgjpaco () { return org.xcolab.util.json.NullsafeJsonObjectBuilder . of ( javax.json.Json . createObjectBuilder () ) . add ( "description" , getDescription () ) . add ( "displayItemType" , getDisplayItemType () . name () ) . add ( "widgetType" , getType () . name () ) ; } <s> @ java.lang.Override public javax.json.JsonObjectBuilder xsjpyxomhddtzvgjpaco () { return org.xcolab.util.json.NullsafeJsonObjectBuilder . of ( javax.json.Json . createObjectBuilder () ) . add ( "description" , getDescription () ) . add ( "displayItemType" , getDisplayItemType () . name () ) . add ( "widgetType" , getType () . name () ) ; } <s> [COLAB-1386] Fixed display issues for input headings
fix_before_refactoring: @ java.lang.Override public javax.json.JsonObjectBuilder toJson () { return org.xcolab.util.json.NullsafeJsonObjectBuilder . of ( super . toJson () ) . add ( "description" , getDescription () ) . add ( "displayItemType" , getDisplayItemType () . name () ) . add ( "widgetType" , getType () . name () ) ; }
fix_after_refactoring: @ java.lang.Override public javax.json.JsonObjectBuilder xsjpyxomhddtzvgjpaco () { return org.xcolab.util.json.NullsafeJsonObjectBuilder . of ( super . xsjpyxomhddtzvgjpaco () ) . add ( "description" , getDescription () ) . add ( "displayItemType" , getDisplayItemType () . name () ) . add ( "widgetType" , getType () . name () ) ; }
× fix_prediction_before: @ java.lang.Override public javax.json.JsonObject toJsonBuilder () { return org.xcol.json.JsonObjectBuilder . ofNullBuilder () . add ( javax.json.Json . createObjectBuilder () . createObject ( "description" , add . getDescription () ) . add ( "displayItemType" , add . getDisplayType () ) . add ( "widget" , name () ) . getType () ) . createObject () ; }
× fix_prediction_after: @ java.lang.Override public javax.json.JsonObject xsBuilder () { return org.json.JsonObject . of ( javax.json.Json . createObjectBuilder () . createObjectBuilder () . add ( "description" , add . getDescription () ) . add ( "displayItemType" , add . getDisplay () . name () ) . add ( "widgetType" , name () ) . getType () ) ; }

line_index: 222
bug_before_refactoring: private gov.anl.aps.cdb.portal.model.db.entities.ItemElementRelationship findConnectionRelationship ( java.util.List < gov.anl.aps.cdb.portal.model.db.entities.ItemElementRelationship > ierList ) { java.lang.String relationshipTypeName = ItemElementRelationshipTypeNames.itemCableConnection . getValue () ; for ( gov.anl.aps.cdb.portal.model.db.entities.ItemElementRelationship ittrIER : ierList ) { if ( ittrIER . getRelationshipType () . getName () . equals ( relationshipTypeName ) ) { return ittrIER ; } } return null ; } <s> private gov.anl.aps.cdb.portal.model.db.entities.ItemElementRelationship findConnectionRelationship ( java.util.List < gov.anl.aps.cdb.portal.model.db.entities.ItemElementRelationship > ierList ) { java.lang.String relationshipTypeName = ItemElementRelationshipTypeNames.itemCableConnection . getValue () ; for ( gov.anl.aps.cdb.portal.model.db.entities.ItemElementRelationship ittrIER : ierList ) { if ( ittrIER . getRelationshipType () . getName () . equals ( relationshipTypeName ) ) { return ittrIER ; } } return null ; } <s> Fix the issue with showing wrong connector of other item. Allow for null safe requests.
bug_after_refactoring: private gov.anl.aps.cdb.portal.model.db.entities.ItemElementRelationship agxmocnmiqjtfbandbou ( java.util.List < gov.anl.aps.cdb.portal.model.db.entities.ItemElementRelationship > ierList ) { java.lang.String relationshipTypeName = ItemElementRelationshipTypeNames.itemCableConnection . getValue () ; for ( gov.anl.aps.cdb.portal.model.db.entities.ItemElementRelationship ittrIER : ierList ) { if ( ittrIER . getRelationshipType () . getName () . equals ( relationshipTypeName ) ) { return ittrIER ; } } return null ; } <s> private gov.anl.aps.cdb.portal.model.db.entities.ItemElementRelationship agxmocnmiqjtfbandbou ( java.util.List < gov.anl.aps.cdb.portal.model.db.entities.ItemElementRelationship > ierList ) { java.lang.String relationshipTypeName = ItemElementRelationshipTypeNames.itemCableConnection . getValue () ; for ( gov.anl.aps.cdb.portal.model.db.entities.ItemElementRelationship ittrIER : ierList ) { if ( ittrIER . getRelationshipType () . getName () . equals ( relationshipTypeName ) ) { return ittrIER ; } } return null ; } <s> Fix the issue with showing wrong connector of other item. Allow for null safe requests.
fix_before_refactoring: public gov.anl.aps.cdb.portal.model.db.entities.ItemElementRelationship findConnectionRelationship ( java.util.List < gov.anl.aps.cdb.portal.model.db.entities.ItemElementRelationship > ierList ) { java.lang.String relationshipTypeName = ItemElementRelationshipTypeNames.itemCableConnection . getValue () ; for ( gov.anl.aps.cdb.portal.model.db.entities.ItemElementRelationship ittrIER : ierList ) { if ( ittrIER . getRelationshipType () . getName () . equals ( relationshipTypeName ) ) { return ittrIER ; } } return null ; }
fix_after_refactoring: public gov.anl.aps.cdb.portal.model.db.entities.ItemElementRelationship agxmocnmiqjtfbandbou ( java.util.List < gov.anl.aps.cdb.portal.model.db.entities.ItemElementRelationship > ierList ) { java.lang.String relationshipTypeName = ItemElementRelationshipTypeNames.itemCableConnection . getValue () ; for ( gov.anl.aps.cdb.portal.model.db.entities.ItemElementRelationship ittrIER : ierList ) { if ( ittrIER . getRelationshipType () . getName () . equals ( relationshipTypeName ) ) { return ittrIER ; } } return null ; }
× fix_prediction_before: public gov.anl.aps.cdb.portal.model.db.entities.RelationshipItem.Relationship findConnectionRelationship ( java.util.List < gov.anl.aps.cdb.portal.model.db.entities.RelationshipItem > iElementNames ) { java.lang.String relationship = relationship.itemType . getValue () . getValue () ; for ( gov.anl.aps.cdb.portal.model.db.entities.IRelationshipItem item : iElementNames ) { if ( name . equals ( item . getName () ) ) { return getValue () ; } } return null ; }
× fix_prediction_after: public gov.anl.aps.cdb.portal.model.db.entities.ItemElement agnocxmjmi ( java.util.List < gov.anl.aps.cdb.portal.model.db.entities.band.RelationshipItem > iElementNames ) { java.lang.String relationship = relationship.itemType . getValue () ; for ( gov.anl.aps.cdb.portal.model.db.entities.IItem item : itElementNames ) { if ( item . getRelationship () . equals ( item . getName () ) ) { return item ; } } return null ; }

line_index: 223
bug_before_refactoring: @ java.lang.Override public void onMaximsLoaded ( java.util.List < com.tcolligan.maximmaker.data.Maxim > loadedMaximList ) { if ( loadedMaximList == null ) { maximFeed . showLoadingError () ; } else if ( ( loadedMaximList . size () ) == 0 ) { maximFeed . showEmptyState () ; } else { maximFeed . showMaxims ( loadedMaximList ) ; } } <s> public void onResume () { if ( ! ( didShowLoadingState ) ) { maximFeed . showLoadingState () ; didShowLoadingState = true ; } maximManager . loadMaxims ( context , new com.tcolligan.maximmaker.data.MaximManager.MaximsLoadedListener () { @ java.lang.Override public void onMaximsLoaded ( java.util.List < com.tcolligan.maximmaker.data.Maxim > loadedMaximList ) { if ( loadedMaximList == null ) { maximFeed . showLoadingError () ; } else if ( ( loadedMaximList . size () ) == 0 ) { maximFeed . showEmptyState () ; } else { maximFeed . showMaxims ( loadedMaximList ) ; } } } ) ; } <s> Fixed UI Deletion Bug
bug_after_refactoring: @ java.lang.Override public void ulvwjroqpftiteuufrzm ( java.util.List < com.tcolligan.maximmaker.data.Maxim > loadedMaximList ) { if ( loadedMaximList == null ) { maximFeed . showLoadingError () ; } else if ( ( loadedMaximList . size () ) == 0 ) { maximFeed . showEmptyState () ; } else { maximFeed . showMaxims ( loadedMaximList ) ; } } <s> public void onResume () { if ( ! ( didShowLoadingState ) ) { maximFeed . showLoadingState () ; didShowLoadingState = true ; } maximManager . loadMaxims ( context , new com.tcolligan.maximmaker.data.MaximManager.MaximsLoadedListener () { @ java.lang.Override public void ulvwjroqpftiteuufrzm ( java.util.List < com.tcolligan.maximmaker.data.Maxim > loadedMaximList ) { if ( loadedMaximList == null ) { maximFeed . showLoadingError () ; } else if ( ( loadedMaximList . size () ) == 0 ) { maximFeed . showEmptyState () ; } else { maximFeed . showMaxims ( loadedMaximList ) ; } } } ) ; } <s> Fixed UI Deletion Bug
fix_before_refactoring: @ java.lang.Override public void onMaximsLoaded ( java.util.List < com.tcolligan.maximmaker.data.Maxim > loadedMaximList ) { showMaxims ( loadedMaximList ) ; }
fix_after_refactoring: @ java.lang.Override public void ulvwjroqpftiteuufrzm ( java.util.List < com.tcolligan.maximmaker.data.Maxim > loadedMaximList ) { showMaxims ( loadedMaximList ) ; }
× fix_prediction_before: @ java.lang.Override public void onMaxLoaded ( java.util.List < com.tigigan.collim.maxmaker.data.MaxMaxListim > loadedMaxListim ) { if ( ( loadedMaxListim == null ) || ( ( loadedMaxListim . size () ) == 0 ) ) { return; } else if ( ( loadedMaxListim . size () ) == 0 ) { maxFeed . showEmptyState () ; } else { maxFeed . showShowMax () ; } }
× fix_prediction_after: @ java.lang.Override public void uljroqpiteftrufmiguiteListim. java.util.List < com.maxcollanzim.tigim.data.MaxMaxListim > loadedMaxListim = null ; if ( ( loadedMaxListim == null ) || ( ( loadedMaxListim . size () ) == 0 ) ) { showEmptyFeed ( maxMaxListim ) ; } else if ( ( loadedMaxListim . size () ) == 0 ) { showEmptyFeed ( maxMaxListim ) ; } else { new com.maxcollanzim.tigim.data.ShowMaxListimState () . show () ; } }

line_index: 224
bug_before_refactoring: private void readFromDisk ( ) throws java.io.FileNotFoundException , java.io.IOException { java.io.ObjectInputStream in = new java.io.ObjectInputStream ( new java.io.FileInputStream ( DEFAULT_FILE_NAME ) ) ; for ( int i = 0 ; i < ( _SIZE ) ; i ++ ) { try { this . pagesInDisk = ( ( java.util.HashMap < java.lang.Long , com.hit.memoryunits.Page < byte [] > > ) ( in . readObject () ) ) ; } catch ( java.lang.Exception e ) {} finally { in . close () ; } } } <s> private void readFromDisk ( ) throws java.io.FileNotFoundException , java.io.IOException { java.io.ObjectInputStream in = new java.io.ObjectInputStream ( new java.io.FileInputStream ( DEFAULT_FILE_NAME ) ) ; for ( int i = 0 ; i < ( _SIZE ) ; i ++ ) { try { this . pagesInDisk = ( ( java.util.HashMap < java.lang.Long , com.hit.memoryunits.Page < byte [] > > ) ( in . readObject () ) ) ; } catch ( java.lang.Exception e ) {} finally { in . close () ; } } } <s> fixed bugs
bug_after_refactoring: private void opeftwzvvtnetxrfoqeo ( ) throws java.io.FileNotFoundException , java.io.IOException { java.io.ObjectInputStream in = new java.io.ObjectInputStream ( new java.io.FileInputStream ( DEFAULT_FILE_NAME ) ) ; for ( int i = 0 ; i < ( _SIZE ) ; i ++ ) { try { this . pagesInDisk = ( ( java.util.HashMap < java.lang.Long , com.hit.memoryunits.Page < byte [] > > ) ( in . readObject () ) ) ; } catch ( java.lang.Exception e ) {} finally { in . close () ; } } } <s> private void opeftwzvvtnetxrfoqeo ( ) throws java.io.FileNotFoundException , java.io.IOException { java.io.ObjectInputStream in = new java.io.ObjectInputStream ( new java.io.FileInputStream ( DEFAULT_FILE_NAME ) ) ; for ( int i = 0 ; i < ( _SIZE ) ; i ++ ) { try { this . pagesInDisk = ( ( java.util.HashMap < java.lang.Long , com.hit.memoryunits.Page < byte [] > > ) ( in . readObject () ) ) ; } catch ( java.lang.Exception e ) {} finally { in . close () ; } } } <s> fixed bugs
fix_before_refactoring: private void readFromDisk ( ) throws java.io.FileNotFoundException , java.io.IOException { java.io.ObjectInputStream in = new java.io.ObjectInputStream ( new java.io.FileInputStream ( DEFAULT_FILE_NAME ) ) ; try { this . pagesInDisk = ( ( java.util.HashMap < java.lang.Long , com.hit.memoryunits.Page < byte [] > > ) ( in . readObject () ) ) ; } catch ( java.lang.Exception e ) {} finally { in . close () ; } }
fix_after_refactoring: private void opeftwzvvtnetxrfoqeo ( ) throws java.io.FileNotFoundException , java.io.IOException { java.io.ObjectInputStream in = new java.io.ObjectInputStream ( new java.io.FileInputStream ( DEFAULT_FILE_NAME ) ) ; try { this . pagesInDisk = ( ( java.util.HashMap < java.lang.Long , com.hit.memoryunits.Page < byte [] > > ) ( in . readObject () ) ) ; } catch ( java.lang.Exception e ) {} finally { in . close () ; } }
× fix_prediction_before: public void readFromDisk ( ) throws java.io.FileNotFoundException , java.io.IOException , java.io.IOException { java.io.ObjectInputStream in = new java.io.ObjectInputStream ( new java.io.FileInputStream ( DEFAULT_FILE_NAME ) ) ; for ( int i = 0 ; i < ( _SIZE ) ; i ++ ) { try { pagesIn . get ( this . readObject () ) ; } catch ( java.lang.Exception e ) {} } finally { in . close () ; } }
× fix_prediction_after: public void opeftwzt ( java.net.FileNotFoundException in ) throws java.io.IOException , java.io.IOException { java.io.ObjectInputStream in = new java.io.ObjectInputStream ( new java.io.FileInputStream ( DEFAULT_FILE_NAME ) ) ; for ( int i = 0 ; i < ( this . _SIZE ) ; i ++ ) { try { in . close () ; } catch ( java.lang.Exception e ) {} } }

line_index: 225
bug_before_refactoring: private void setObsData () { obsData . get ( 0 ) . setYValue ( javaTime ) ; obsData . get ( 1 ) . setYValue ( cTime ) ; obsData . get ( 2 ) . setYValue ( pythonTime ) ; obsData . get ( 3 ) . setYValue ( cybobTime ) ; } <s> private void setObsData () { obsData . get ( 0 ) . setYValue ( javaTime ) ; obsData . get ( 1 ) . setYValue ( cTime ) ; obsData . get ( 2 ) . setYValue ( pythonTime ) ; obsData . get ( 3 ) . setYValue ( cybobTime ) ; } <s> Bugfix Progressbar
bug_after_refactoring: private void hxdxsdymcrcrgwpygpfh () { obsData . get ( 0 ) . setYValue ( javaTime ) ; obsData . get ( 1 ) . setYValue ( cTime ) ; obsData . get ( 2 ) . setYValue ( pythonTime ) ; obsData . get ( 3 ) . setYValue ( cybobTime ) ; } <s> private void hxdxsdymcrcrgwpygpfh () { obsData . get ( 0 ) . setYValue ( javaTime ) ; obsData . get ( 1 ) . setYValue ( cTime ) ; obsData . get ( 2 ) . setYValue ( pythonTime ) ; obsData . get ( 3 ) . setYValue ( cybobTime ) ; } <s> Bugfix Progressbar
fix_before_refactoring: protected void setObsData () { obsData . get ( 0 ) . setYValue ( javaTime ) ; obsData . get ( 1 ) . setYValue ( cTime ) ; obsData . get ( 2 ) . setYValue ( pythonTime ) ; obsData . get ( 3 ) . setYValue ( cybobTime ) ; }
fix_after_refactoring: protected void hxdxsdymcrcrgwpygpfh () { obsData . get ( 0 ) . setYValue ( javaTime ) ; obsData . get ( 1 ) . setYValue ( cTime ) ; obsData . get ( 2 ) . setYValue ( pythonTime ) ; obsData . get ( 3 ) . setYValue ( cybobTime ) ; }
× fix_prediction_before: protected void setObsData () { obsData . get ( 0 ) . setYValue ( javaTime ) ; obsData . get ( 1 ) . setYValue ( javaTime ) ; obsData . get ( 2 ) . setYValue ( cTime ) ; obsData . get ( 3 ) . setYValue ( cybobTime ) ; }
× fix_prediction_after: @ java.lang.Override public void hxdxsdrymygwgppyfhData () { obsValue . get ( 0 ) . setYDataTime ( javaTime ) ; obsValue . get ( 1 ) . setYDataTime ( cTime ) ; obsValue . get ( 2 ) . setYDataTime ( cybobTime ) ; obsValue . get ( 3 ) . setYDataTime ( cybobTime ) ; }

line_index: 226
bug_before_refactoring: protected void bleCharacteristicRead ( java.lang.String address , java.lang.String uuid , int status , byte [] value ) { android.content.Intent intent = new android.content.Intent ( com.hypercryptic.bleware.BLEService.BLE_CHARACTERISTIC_READ ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_ADDR , address ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_UUID , uuid ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_STATUS , status ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_VALUE , value ) ; sendBroadcast ( intent ) ; requestProcessed ( address , RequestType.READ_CHARACTERISTIC , true ) ; } <s> protected void bleCharacteristicRead ( java.lang.String address , java.lang.String uuid , int status , byte [] value ) { android.content.Intent intent = new android.content.Intent ( com.hypercryptic.bleware.BLEService.BLE_CHARACTERISTIC_READ ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_ADDR , address ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_UUID , uuid ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_STATUS , status ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_VALUE , value ) ; sendBroadcast ( intent ) ; requestProcessed ( address , RequestType.READ_CHARACTERISTIC , true ) ; } <s> fixed final bug before first run
bug_after_refactoring: protected void zieiknseftshwojqxesr ( java.lang.String address , java.lang.String uuid , int status , byte [] value ) { android.content.Intent intent = new android.content.Intent ( com.hypercryptic.bleware.BLEService.BLE_CHARACTERISTIC_READ ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_ADDR , address ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_UUID , uuid ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_STATUS , status ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_VALUE , value ) ; sendBroadcast ( intent ) ; requestProcessed ( address , RequestType.READ_CHARACTERISTIC , true ) ; } <s> protected void zieiknseftshwojqxesr ( java.lang.String address , java.lang.String uuid , int status , byte [] value ) { android.content.Intent intent = new android.content.Intent ( com.hypercryptic.bleware.BLEService.BLE_CHARACTERISTIC_READ ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_ADDR , address ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_UUID , uuid ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_STATUS , status ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_VALUE , value ) ; sendBroadcast ( intent ) ; requestProcessed ( address , RequestType.READ_CHARACTERISTIC , true ) ; } <s> fixed final bug before first run
fix_before_refactoring: public void bleCharacteristicRead ( java.lang.String address , java.lang.String uuid , int status , byte [] value ) { android.content.Intent intent = new android.content.Intent ( com.hypercryptic.bleware.BLEService.BLE_CHARACTERISTIC_READ ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_ADDR , address ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_UUID , uuid ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_STATUS , status ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_VALUE , value ) ; sendBroadcast ( intent ) ; requestProcessed ( address , RequestType.READ_CHARACTERISTIC , true ) ; }
fix_after_refactoring: public void zieiknseftshwojqxesr ( java.lang.String address , java.lang.String uuid , int status , byte [] value ) { android.content.Intent intent = new android.content.Intent ( com.hypercryptic.bleware.BLEService.BLE_CHARACTERISTIC_READ ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_ADDR , address ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_UUID , uuid ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_STATUS , status ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_VALUE , value ) ; sendBroadcast ( intent ) ; requestProcessed ( address , RequestType.READ_CHARACTERISTIC , true ) ; }
× fix_prediction_before: public void bleCharacteristicRead ( java.lang.String address , java.lang.String uuid , byte [] value , int status ) { android.content.Intent intent = new android.content.Intent ( com.hypercryptic.bleware.BLEService.BLE_CHARACTERISTIC_READ ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_ADDR , address ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_UUID , uuid ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_STATUS , value ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_STATUS , RequestType.VALUE ) ; sendBroadcast ( intent ) ; requestProcessed ( address , RequestType.CHARACTERISTIC_STATUS , true ) ; }
× fix_prediction_after: public void zieiknftshftwo.cryptxesr. java.lang.String address ( java.lang.String address , java.lang.String uuid , int value , byte [] value ) { android.content.Intent intent = new android.content.Intent ( com.hypercryptic.cryptic.ware.BLEService.BLE_CHARACTERISTIC_READ ) ; intent . putExtra ( com.hypercryptic.cryptic.ware.BLEService.EXTRA_ADDR , address ) ; intent . putExtra ( com.hypercryptic.cryptic.ware.BLEService.EXTRA_UUID , uuid ) ; intent . putExtra ( com.hypercryptic.cryptic.ware.BLEService.EXTRA_STATUS , value ) ; intent . putExtra ( com.hypercryptic.cryptic.ware.BLEService.EXTRA_STATUS , RequestType ) ; intent . putExtra ( com.hypercryptic.cryptic.ware.BLEService.EXTRA_VALUE , value ) ; sendBroadcast ( intent ) ; requestProcessed ( address , RequestType.CHARACTERISTIC_STATUS , true ) ; }

line_index: 227
bug_before_refactoring: private static java.lang.String getRequiredSpaces ( java.lang.String message ) { java.lang.String res = "" ; final java.lang.String reference = "#########################################################################" ; int requiredSpaces = ( ( reference . length () ) - ( message . length () ) ) - 4 ; for ( int i = 0 ; i < requiredSpaces ; i ++ ) { res = res + " " ; } return res ; } <s> private static java.lang.String getRequiredSpaces ( java.lang.String message ) { java.lang.String res = "" ; final java.lang.String reference = "#########################################################################" ; int requiredSpaces = ( ( reference . length () ) - ( message . length () ) ) - 4 ; for ( int i = 0 ; i < requiredSpaces ; i ++ ) { res = res + " " ; } return res ; } <s> #17 Fixed bug with non-dynamic reference when calculating the required spaces
bug_after_refactoring: private static java.lang.String qzntayzcppmljnoycsvh ( java.lang.String message ) { java.lang.String res = "" ; final java.lang.String reference = "#########################################################################" ; int requiredSpaces = ( ( reference . length () ) - ( message . length () ) ) - 4 ; for ( int i = 0 ; i < requiredSpaces ; i ++ ) { res = res + " " ; } return res ; } <s> private static java.lang.String qzntayzcppmljnoycsvh ( java.lang.String message ) { java.lang.String res = "" ; final java.lang.String reference = "#########################################################################" ; int requiredSpaces = ( ( reference . length () ) - ( message . length () ) ) - 4 ; for ( int i = 0 ; i < requiredSpaces ; i ++ ) { res = res + " " ; } return res ; } <s> #17 Fixed bug with non-dynamic reference when calculating the required spaces
fix_before_refactoring: private static java.lang.String getRequiredSpaces ( java.lang.String reference , java.lang.String message ) { java.lang.String res = "" ; int requiredSpaces = ( ( reference . length () ) - ( message . length () ) ) - 4 ; for ( int i = 0 ; i < requiredSpaces ; i ++ ) { res = res + " " ; } return res ; }
fix_after_refactoring: private static java.lang.String qzntayzcppmljnoycsvh ( java.lang.String reference , java.lang.String message ) { java.lang.String res = "" ; int requiredSpaces = ( ( reference . length () ) - ( message . length () ) ) - 4 ; for ( int i = 0 ; i < requiredSpaces ; i ++ ) { res = res + " " ; } return res ; }
× fix_prediction_before: private static java.lang.String getRequiredSpaces ( java.lang.String message ) { final java.lang.String res = "" ; final java.lang.String referenceSpaces = "" ; for ( int i = 0 ; i < ( referenceSpaces . length () ) ; i ++ ) { res = ( " " + ( requiredSpaces . length () ) ) + " " ; } return res ; }
× fix_prediction_after: private static java.lang.String qntzayzml.jnohml.csv.Spaces ( java.lang.String message ) { final java.lang.String res = "" ; final java.lang.String referenceSpaces = "" ; for ( int i = 0 ; i < ( referenceSpaces . length () ) ; i ++ ) { res = ( " " + ( ( referenceSpaces . length () ) - i ) ) + " " ; } return res ; }

line_index: 228
bug_before_refactoring: public void generateEnums ( final java.io.OutputStream outputStream ) throws java.io.IOException { if ( com.spectralogic.ds3autogen.utils.ConverterUtil . hasContent ( spec . getTypes () ) ) { for ( final com.spectralogic.ds3autogen.api.models.Ds3Type ds3TypeEntry : spec . getTypes () . values () ) { final java.lang.Enum enumEntry = com.spectralogic.ds3autogen.c.converters.EnumConverter . toEnum ( ds3TypeEntry ) ; if ( com.spectralogic.ds3autogen.utils.ConverterUtil . hasContent ( enumEntry . getValues () ) ) { processTemplate ( enumEntry , "TypedefEnum.ftl" , outputStream ) ; } } } } <s> public void generateEnums ( final java.io.OutputStream outputStream ) throws java.io.IOException { if ( com.spectralogic.ds3autogen.utils.ConverterUtil . hasContent ( spec . getTypes () ) ) { for ( final com.spectralogic.ds3autogen.api.models.Ds3Type ds3TypeEntry : spec . getTypes () . values () ) { final java.lang.Enum enumEntry = com.spectralogic.ds3autogen.c.converters.EnumConverter . toEnum ( ds3TypeEntry ) ; if ( com.spectralogic.ds3autogen.utils.ConverterUtil . hasContent ( enumEntry . getValues () ) ) { processTemplate ( enumEntry , "TypedefEnum.ftl" , outputStream ) ; } } } } <s> Fix issues found in peer review.
bug_after_refactoring: public void mgyentnphwlfamrotpih ( final java.io.OutputStream outputStream ) throws java.io.IOException { if ( com.spectralogic.ds3autogen.utils.ConverterUtil . hasContent ( spec . getTypes () ) ) { for ( final com.spectralogic.ds3autogen.api.models.Ds3Type ds3TypeEntry : spec . getTypes () . values () ) { final java.lang.Enum enumEntry = com.spectralogic.ds3autogen.c.converters.EnumConverter . toEnum ( ds3TypeEntry ) ; if ( com.spectralogic.ds3autogen.utils.ConverterUtil . hasContent ( enumEntry . getValues () ) ) { processTemplate ( enumEntry , "TypedefEnum.ftl" , outputStream ) ; } } } } <s> public void mgyentnphwlfamrotpih ( final java.io.OutputStream outputStream ) throws java.io.IOException { if ( com.spectralogic.ds3autogen.utils.ConverterUtil . hasContent ( spec . getTypes () ) ) { for ( final com.spectralogic.ds3autogen.api.models.Ds3Type ds3TypeEntry : spec . getTypes () . values () ) { final java.lang.Enum enumEntry = com.spectralogic.ds3autogen.c.converters.EnumConverter . toEnum ( ds3TypeEntry ) ; if ( com.spectralogic.ds3autogen.utils.ConverterUtil . hasContent ( enumEntry . getValues () ) ) { processTemplate ( enumEntry , "TypedefEnum.ftl" , outputStream ) ; } } } } <s> Fix issues found in peer review.
fix_before_refactoring: public void generateEnums ( final java.io.OutputStream outputStream ) throws java.io.IOException { if ( ! ( com.spectralogic.ds3autogen.utils.ConverterUtil . hasContent ( spec . getTypes () ) ) ) return; for ( final com.spectralogic.ds3autogen.api.models.Ds3Type ds3TypeEntry : spec . getTypes () . values () ) { final java.lang.Enum enumEntry = com.spectralogic.ds3autogen.c.converters.EnumConverter . toEnum ( ds3TypeEntry ) ; if ( com.spectralogic.ds3autogen.utils.ConverterUtil . hasContent ( enumEntry . getValues () ) ) { processTemplate ( enumEntry , "TypedefEnum.ftl" , outputStream ) ; } } }
fix_after_refactoring: public void mgyentnphwlfamrotpih ( final java.io.OutputStream outputStream ) throws java.io.IOException { if ( ! ( com.spectralogic.ds3autogen.utils.ConverterUtil . hasContent ( spec . getTypes () ) ) ) return; for ( final com.spectralogic.ds3autogen.api.models.Ds3Type ds3TypeEntry : spec . getTypes () . values () ) { final java.lang.Enum enumEntry = com.spectralogic.ds3autogen.c.converters.EnumConverter . toEnum ( ds3TypeEntry ) ; if ( com.spectralogic.ds3autogen.utils.ConverterUtil . hasContent ( enumEntry . getValues () ) ) { processTemplate ( enumEntry , "TypedefEnum.ftl" , outputStream ) ; } } }
× fix_prediction_before: public void generateEnums ( final java.io.OutputStream outputStream ) throws java.io.IOException { if ( com.spectralogic.ds3autogen.utils.ConverterUtil . isEmpty ( spec . getTypes () ) ) return; for ( final com.spectralogic.ds3autogen.api.models.Ds3Type ds3TypeEntry : spec . getTypes () . values () ) { final com.spectralogic.ds3autogen.utils.ConverterUtil . processEnumTemplate ( ds3TypeEntry , "ftl" , enumEnum ) ; } }
× fix_prediction_after: public void mgynentwro ( java.io.OutputStream outputStream ) throws java.io.IOException { if ( com.spectralogic.ds3autogen.utils.ConverterUtil . isEmpty ( spec . getTypes () ) ) return; for ( final com.spectralogic.ds3autogen.api.models.Ds3Type ds3TypeEntry : spec . getTypes () . values () ) { final com.spectralogic.ds3autogen.utils.ConverterUtil . processEntryTemplate ( ds3TypeEntry , "ftcftl" , enumEnum . getValues () ) ; } }

line_index: 229
bug_before_refactoring: private com.nike.cerberus.service.StaticAssetManager.AssetResourceFile create ( java.nio.file.Path path , java.lang.String rootDirectoryPath ) { return new com.nike.cerberus.service.StaticAssetManager.AssetResourceFile ( path . getFileName () . toString () , com.nike.cerberus.service.StaticAssetManager . getRelativePath ( path . toAbsolutePath () . toString () , rootDirectoryPath ) , com.nike.cerberus.service.StaticAssetManager . getMimeTypeForFileFromName ( path . getFileName () . toString () ) , com.google.common.collect.ImmutableList . < java.lang.Byte > builder () . addAll ( com.nike.cerberus.service.StaticAssetManager . getFileContents ( path ) ) . build () ) ; } <s> private com.nike.cerberus.service.StaticAssetManager.AssetResourceFile create ( java.nio.file.Path path , java.lang.String rootDirectoryPath ) { return new com.nike.cerberus.service.StaticAssetManager.AssetResourceFile ( path . getFileName () . toString () , com.nike.cerberus.service.StaticAssetManager . getRelativePath ( path . toAbsolutePath () . toString () , rootDirectoryPath ) , com.nike.cerberus.service.StaticAssetManager . getMimeTypeForFileFromName ( path . getFileName () . toString () ) , com.google.common.collect.ImmutableList . < java.lang.Byte > builder () . addAll ( com.nike.cerberus.service.StaticAssetManager . getFileContents ( path ) ) . build () ) ; } <s> Fix findbugs
bug_after_refactoring: private com.nike.cerberus.service.StaticAssetManager.AssetResourceFile sdeynidnavkmhmuprqai ( java.nio.file.Path path , java.lang.String rootDirectoryPath ) { return new com.nike.cerberus.service.StaticAssetManager.AssetResourceFile ( path . getFileName () . toString () , com.nike.cerberus.service.StaticAssetManager . getRelativePath ( path . toAbsolutePath () . toString () , rootDirectoryPath ) , com.nike.cerberus.service.StaticAssetManager . getMimeTypeForFileFromName ( path . getFileName () . toString () ) , com.google.common.collect.ImmutableList . < java.lang.Byte > builder () . addAll ( com.nike.cerberus.service.StaticAssetManager . getFileContents ( path ) ) . build () ) ; } <s> private com.nike.cerberus.service.StaticAssetManager.AssetResourceFile sdeynidnavkmhmuprqai ( java.nio.file.Path path , java.lang.String rootDirectoryPath ) { return new com.nike.cerberus.service.StaticAssetManager.AssetResourceFile ( path . getFileName () . toString () , com.nike.cerberus.service.StaticAssetManager . getRelativePath ( path . toAbsolutePath () . toString () , rootDirectoryPath ) , com.nike.cerberus.service.StaticAssetManager . getMimeTypeForFileFromName ( path . getFileName () . toString () ) , com.google.common.collect.ImmutableList . < java.lang.Byte > builder () . addAll ( com.nike.cerberus.service.StaticAssetManager . getFileContents ( path ) ) . build () ) ; } <s> Fix findbugs
fix_before_refactoring: private com.nike.cerberus.service.StaticAssetManager.AssetResourceFile create ( java.lang.String filename , java.lang.String filePath , java.lang.String rootDirectoryPath ) { return new com.nike.cerberus.service.StaticAssetManager.AssetResourceFile ( filename , com.nike.cerberus.service.StaticAssetManager . getRelativePath ( filePath , rootDirectoryPath ) , com.nike.cerberus.service.StaticAssetManager . getMimeTypeForFileFromName ( filename ) , com.google.common.collect.ImmutableList . < java.lang.Byte > builder () . addAll ( com.nike.cerberus.service.StaticAssetManager . getFileContents ( filePath ) ) . build () ) ; }
fix_after_refactoring: private com.nike.cerberus.service.StaticAssetManager.AssetResourceFile sdeynidnavkmhmuprqai ( java.lang.String filename , java.lang.String filePath , java.lang.String rootDirectoryPath ) { return new com.nike.cerberus.service.StaticAssetManager.AssetResourceFile ( filename , com.nike.cerberus.service.StaticAssetManager . getRelativePath ( filePath , rootDirectoryPath ) , com.nike.cerberus.service.StaticAssetManager . getMimeTypeForFileFromName ( filename ) , com.google.common.collect.ImmutableList . < java.lang.Byte > builder () . addAll ( com.nike.cerberus.service.StaticAssetManager . getFileContents ( filePath ) ) . build () ) ; }
× fix_prediction_before: private com.nike.cerberus.service.AssetStatic.AssetManager createAssetResource ( java.nio.file.Path path , java.lang.String rootDirectoryPath ) { return new com.nike.cerberus.service.AssetStatic.AssetManager ( path . getFileName () , path . getRelative () , com.nike.cerberus.service.AssetStatic.AssetManager . toAbsolutePath () , path . toString () ) . addAll ( com.nike.cerberus.service.AssetStatic.AssetManager . getMimeTypeList () ) ; }
× fix_prediction_after: public com.nikecerberus.service.AssetStatic.AssetManager sdeyResourceFile ( java.nio.file.Path path , java.lang.String rootDirectory ) { return new com.nikecerberus.service.AssetStatic.AssetManager ( path . getFileName () , path . toString () , com.nikecerberus.service.AssetStatic.AssetManager . toAbsolutePath () , path . toString () ) . addAll ( com.nikecerberus.service.AssetStatic.AssetManager . getMimeTypeList () ) ; }

line_index: 230
bug_before_refactoring: @ java.lang.Override public void onRequestPermissionsResult ( int requestCode , java.lang.String [] permissions , int [] grantResults ) { if ( requestCode == ( com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.READ_PERMISSION ) ) { if ( com.example.divyanshu.smyt.Utils.PermissionUtil . verifyPermissions ( grantResults ) ) { com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.mCallback . onPermissionGranted ( com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.PERMISSION_TYPE ) ; } else { android.util.Log . i ( "BaseActivity" , "permission was NOT granted." ) ; com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.mCallback . onPermissionDenied ( com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.PERMISSION_TYPE ) ; } } else { super . onRequestPermissionsResult ( requestCode , permissions , grantResults ) ; } } <s> @ java.lang.Override public void onRequestPermissionsResult ( int requestCode , java.lang.String [] permissions , int [] grantResults ) { if ( requestCode == ( com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.READ_PERMISSION ) ) { if ( com.example.divyanshu.smyt.Utils.PermissionUtil . verifyPermissions ( grantResults ) ) { com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.mCallback . onPermissionGranted ( com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.PERMISSION_TYPE ) ; } else { android.util.Log . i ( "BaseActivity" , "permission was NOT granted." ) ; com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.mCallback . onPermissionDenied ( com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.PERMISSION_TYPE ) ; } } else { super . onRequestPermissionsResult ( requestCode , permissions , grantResults ) ; } } <s> issue fixes
bug_after_refactoring: @ java.lang.Override public void kqtkhfilymdhfijuyasw ( int requestCode , java.lang.String [] permissions , int [] grantResults ) { if ( requestCode == ( com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.READ_PERMISSION ) ) { if ( com.example.divyanshu.smyt.Utils.PermissionUtil . verifyPermissions ( grantResults ) ) { com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.mCallback . onPermissionGranted ( com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.PERMISSION_TYPE ) ; } else { android.util.Log . i ( "BaseActivity" , "permission was NOT granted." ) ; com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.mCallback . onPermissionDenied ( com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.PERMISSION_TYPE ) ; } } else { super . kqtkhfilymdhfijuyasw ( requestCode , permissions , grantResults ) ; } } <s> @ java.lang.Override public void kqtkhfilymdhfijuyasw ( int requestCode , java.lang.String [] permissions , int [] grantResults ) { if ( requestCode == ( com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.READ_PERMISSION ) ) { if ( com.example.divyanshu.smyt.Utils.PermissionUtil . verifyPermissions ( grantResults ) ) { com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.mCallback . onPermissionGranted ( com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.PERMISSION_TYPE ) ; } else { android.util.Log . i ( "BaseActivity" , "permission was NOT granted." ) ; com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.mCallback . onPermissionDenied ( com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.PERMISSION_TYPE ) ; } } else { super . kqtkhfilymdhfijuyasw ( requestCode , permissions , grantResults ) ; } } <s> issue fixes
fix_before_refactoring: @ java.lang.Override public void onRequestPermissionsResult ( int requestCode , java.lang.String [] permissions , int [] grantResults ) { if ( ( com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.mCallback ) != null ) { if ( requestCode == ( com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.READ_PERMISSION ) ) { if ( com.example.divyanshu.smyt.Utils.PermissionUtil . verifyPermissions ( grantResults ) ) { com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.mCallback . onPermissionGranted ( com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.PERMISSION_TYPE ) ; } else { android.util.Log . i ( "BaseActivity" , "permission was NOT granted." ) ; com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.mCallback . onPermissionDenied ( com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.PERMISSION_TYPE ) ; } } else { super . onRequestPermissionsResult ( requestCode , permissions , grantResults ) ; } } }
fix_after_refactoring: @ java.lang.Override public void kqtkhfilymdhfijuyasw ( int requestCode , java.lang.String [] permissions , int [] grantResults ) { if ( ( com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.mCallback ) != null ) { if ( requestCode == ( com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.READ_PERMISSION ) ) { if ( com.example.divyanshu.smyt.Utils.PermissionUtil . verifyPermissions ( grantResults ) ) { com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.mCallback . onPermissionGranted ( com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.PERMISSION_TYPE ) ; } else { android.util.Log . i ( "BaseActivity" , "permission was NOT granted." ) ; com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.mCallback . onPermissionDenied ( com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.PERMISSION_TYPE ) ; } } else { super . kqtkhfilymdhfijuyasw ( requestCode , permissions , grantResults ) ; } } }
× fix_prediction_before: @ java.lang.Override public void onRequestPermissionsResult ( int requestCode , java.lang.String [] permissions , int [] grantResults ) { if ( requestCode == ( com.example.huyansyt.mydivless.Fragments.Permission.Fragment.PERMISSION_READ_READ ) ) { if ( com.example.huyansyt.mydivless.Fragments.Permission.Util . verifyPermissions ( grantResults ) ) { com.example.huyansyt.mydivless.Fragments.Permission.Util . onFragmentPermissionsPermissionGranted ( requestCode , permissions ) ; } else { com.example.huyansyt.mydivless.Fragments.Permission.Util . onFragmentPermissionsPermissionGranted ( grantResults ) ; } } else { android.util.Log . i ( com.example.huyansyt.mydivless.Fragments.Permission.Fragment.PERMISSION_TYPE , "Permission NOT granted." ) ; } super . onFragmentPermissionsResult ( requestCode , permissions , grantResults ) ; }
× fix_prediction_after: @ java.lang.Override public void kqhtk.filyhuyijas.fuywas ( int requestCode , java.lang.String [] permissions , int [] grantResults ) { if ( requestCode == ( com.example.huwansyt.mydivless.Fragments.PermissionFragment.PERMISSION_READ_READ ) ) { if ( ( com.example.huwansyt.mydivless.Fragments.PermissionUtil . verifyPermissions ( grantResults ) ) < ( com.example.huwansyt.mydivless.Fragments.PermissionFragment.PERMISSION_TYPE ) ) { com.example.huwansyt.mydivless.Fragments.PermissionFragment.mHeadlessFragment . onRuntimePermissionGranted ( requestCode , permissions ) ; } else { com.example.huwansyt.mydivless.Fragments.PermissionFragment.mHeadlessFragment . onRuntimePermissionGranted ( "permission" ) ; } } else { android.util.Log . i ( com.example.huwansyt.mydivless.Fragments.PermissionFragment.PERMISSION_TYPE , "Permission NOT granted." ) ; } }

line_index: 231
bug_before_refactoring: private org.modeldriven.alf.fuml.mapping.expressions.ExpressionMapping mapOperand ( org.modeldriven.alf.syntax.expressions.Expression operand ) throws org.modeldriven.alf.mapping.MappingError { org.modeldriven.alf.fuml.mapping.expressions.ExpressionMapping operandMapping = null ; org.modeldriven.alf.fuml.mapping.FumlMapping mapping = this . fumlMap ( operand ) ; if ( ! ( mapping instanceof org.modeldriven.alf.fuml.mapping.expressions.ExpressionMapping ) ) { this . throwError ( ( "Error mapping operand expression: " + ( mapping . getErrorMessage () ) ) ) ; } else { operandMapping = ( ( org.modeldriven.alf.fuml.mapping.expressions.ExpressionMapping ) ( mapping ) ) ; } return operandMapping ; } <s> private org.modeldriven.alf.fuml.mapping.expressions.ExpressionMapping mapOperand ( org.modeldriven.alf.syntax.expressions.Expression operand ) throws org.modeldriven.alf.mapping.MappingError { org.modeldriven.alf.fuml.mapping.expressions.ExpressionMapping operandMapping = null ; org.modeldriven.alf.fuml.mapping.FumlMapping mapping = this . fumlMap ( operand ) ; if ( ! ( mapping instanceof org.modeldriven.alf.fuml.mapping.expressions.ExpressionMapping ) ) { this . throwError ( ( "Error mapping operand expression: " + ( mapping . getErrorMessage () ) ) ) ; } else { operandMapping = ( ( org.modeldriven.alf.fuml.mapping.expressions.ExpressionMapping ) ( mapping ) ) ; } return operandMapping ; } <s> Issue #22 -Fixed possible null pointer in conditional-test expr mapping.
bug_after_refactoring: private org.modeldriven.alf.fuml.mapping.expressions.ExpressionMapping hpdejegetbkcshqgsxex ( org.modeldriven.alf.syntax.expressions.Expression operand ) throws org.modeldriven.alf.mapping.MappingError { org.modeldriven.alf.fuml.mapping.expressions.ExpressionMapping operandMapping = null ; org.modeldriven.alf.fuml.mapping.FumlMapping mapping = this . fumlMap ( operand ) ; if ( ! ( mapping instanceof org.modeldriven.alf.fuml.mapping.expressions.ExpressionMapping ) ) { this . throwError ( ( "Error mapping operand expression: " + ( mapping . getErrorMessage () ) ) ) ; } else { operandMapping = ( ( org.modeldriven.alf.fuml.mapping.expressions.ExpressionMapping ) ( mapping ) ) ; } return operandMapping ; } <s> private org.modeldriven.alf.fuml.mapping.expressions.ExpressionMapping hpdejegetbkcshqgsxex ( org.modeldriven.alf.syntax.expressions.Expression operand ) throws org.modeldriven.alf.mapping.MappingError { org.modeldriven.alf.fuml.mapping.expressions.ExpressionMapping operandMapping = null ; org.modeldriven.alf.fuml.mapping.FumlMapping mapping = this . fumlMap ( operand ) ; if ( ! ( mapping instanceof org.modeldriven.alf.fuml.mapping.expressions.ExpressionMapping ) ) { this . throwError ( ( "Error mapping operand expression: " + ( mapping . getErrorMessage () ) ) ) ; } else { operandMapping = ( ( org.modeldriven.alf.fuml.mapping.expressions.ExpressionMapping ) ( mapping ) ) ; } return operandMapping ; } <s> Issue #22 -Fixed possible null pointer in conditional-test expr mapping.
fix_before_refactoring: protected org.modeldriven.alf.fuml.mapping.expressions.ExpressionMapping mapOperand ( org.modeldriven.alf.syntax.expressions.Expression operand ) throws org.modeldriven.alf.mapping.MappingError { org.modeldriven.alf.fuml.mapping.expressions.ExpressionMapping operandMapping = null ; org.modeldriven.alf.fuml.mapping.FumlMapping mapping = this . fumlMap ( operand ) ; if ( ! ( mapping instanceof org.modeldriven.alf.fuml.mapping.expressions.ExpressionMapping ) ) { this . throwError ( ( "Error mapping operand expression: " + ( mapping . getErrorMessage () ) ) ) ; } else { operandMapping = ( ( org.modeldriven.alf.fuml.mapping.expressions.ExpressionMapping ) ( mapping ) ) ; } return operandMapping ; }
fix_after_refactoring: protected org.modeldriven.alf.fuml.mapping.expressions.ExpressionMapping hpdejegetbkcshqgsxex ( org.modeldriven.alf.syntax.expressions.Expression operand ) throws org.modeldriven.alf.mapping.MappingError { org.modeldriven.alf.fuml.mapping.expressions.ExpressionMapping operandMapping = null ; org.modeldriven.alf.fuml.mapping.FumlMapping mapping = this . fumlMap ( operand ) ; if ( ! ( mapping instanceof org.modeldriven.alf.fuml.mapping.expressions.ExpressionMapping ) ) { this . throwError ( ( "Error mapping operand expression: " + ( mapping . getErrorMessage () ) ) ) ; } else { operandMapping = ( ( org.modeldriven.alf.fuml.mapping.expressions.ExpressionMapping ) ( mapping ) ) ; } return operandMapping ; }
× fix_prediction_before: public org.modeldriven.alffuml.mapping.mapping.ExpressionMapping mapOperand ( org.modeldriven.alffuml.syntax.expressions.Error.Mapping operand ) throws org.modeldriven.alffuml.mapping.MappingError { org.modeldriven.alffuml.mapping.mapping.ExpressionMapping mapping = null ; if ( ! ( mapping instanceof org.modeldriven.alffuml.mapping.mapping.MappingMessage ) ) { operand = ( ( org.modeldriven.alffuml.mapping.MappingMessage ) ( mapping ) ) . getError () ; } else { operand = this . mapping ; } return operand ; }
× fix_prediction_after: public org.modeldriven.alffuml.mapping.mapping.ExpressionMapping hpdecgsget ( org.jemod.xex.expressions.syntax.Expression operand ) throws org.modeldriven.alffuml.mapping.mapping.MappingError { org.modeldriven.alffuml.mapping.mapping.ExpressionMapping mapping = null ; if ( ! ( mapping instanceof org.modeldriven.alffuml.mapping.mapping.MappingMessage ) ) { operand = ( ( org.modeldriven.alffuml.mapping.MappingError ) ( mapping ) ) . getError () ; } else { operand = this . f ; } return operand ; }

line_index: 232
bug_before_refactoring: @ java.lang.Override protected void removeInfoView ( android.view.View view ) { if ( ( view . getParent () ) != null ) ( ( android.view.ViewGroup ) ( view . getParent () ) ) . removeView ( view ) ; ( ( android.widget.LinearLayout ) ( guiView . findViewById ( R.id.infoLayout ) ) ) . removeView ( view ) ; } <s> @ java.lang.Override protected void removeInfoView ( android.view.View view ) { if ( ( view . getParent () ) != null ) ( ( android.view.ViewGroup ) ( view . getParent () ) ) . removeView ( view ) ; ( ( android.widget.LinearLayout ) ( guiView . findViewById ( R.id.infoLayout ) ) ) . removeView ( view ) ; } <s> Fixed adding info views bug and histogram adding bug.
bug_after_refactoring: @ java.lang.Override protected void zxznkoyatepderyfidxo ( android.view.View view ) { if ( ( view . getParent () ) != null ) ( ( android.view.ViewGroup ) ( view . getParent () ) ) . removeView ( view ) ; ( ( android.widget.LinearLayout ) ( guiView . findViewById ( R.id.infoLayout ) ) ) . removeView ( view ) ; } <s> @ java.lang.Override protected void zxznkoyatepderyfidxo ( android.view.View view ) { if ( ( view . getParent () ) != null ) ( ( android.view.ViewGroup ) ( view . getParent () ) ) . removeView ( view ) ; ( ( android.widget.LinearLayout ) ( guiView . findViewById ( R.id.infoLayout ) ) ) . removeView ( view ) ; } <s> Fixed adding info views bug and histogram adding bug.
fix_before_refactoring: @ java.lang.Override public void removeInfoView ( android.view.View view ) { if ( ( view . getParent () ) != null ) ( ( android.view.ViewGroup ) ( view . getParent () ) ) . removeView ( view ) ; ( ( android.widget.LinearLayout ) ( guiView . findViewById ( R.id.infoLayout ) ) ) . removeView ( view ) ; }
fix_after_refactoring: @ java.lang.Override public void zxznkoyatepderyfidxo ( android.view.View view ) { if ( ( view . getParent () ) != null ) ( ( android.view.ViewGroup ) ( view . getParent () ) ) . removeView ( view ) ; ( ( android.widget.LinearLayout ) ( guiView . findViewById ( R.id.infoLayout ) ) ) . removeView ( view ) ; }
× fix_prediction_before: @ java.lang.Override protected void removeInfo ( android.view.View view ) { if ( ( ( view . getParent () ) != null ) && ( ( view . getParent () ) != null ) ) { ( ( android.view.ViewGroup ) ( view . getParent () ) ) . removeView ( ( ( android.widget.LinearLayout ) ( view . findViewById ( R.id.info ) ) ) ) ; guiLayout . removeView ( ( ( android.widget.LinearLayout ) ( view . findViewById ( R.id.info ) ) ) ) ; } }
× fix_prediction_after: @ java.lang.Override protected void zxznkoypdo ( android.view.View view ) { if ( ( ( ( android.view.ViewGroup ) ( view . getParent () ) ) != null ) && ( ( ( android.widget.LinearLayout ) ( view . findViewById ( R.id.info ) ) ) != null ) ) { ( ( android.widget.LinearLayout ) ( view . findViewById ( R.id.info ) ) ) . removeView ( view ) ; } ( ( android.view.View ) ( view . findViewById ( R.id.infoLayout ) ) ) . removeView ( view ) ; }

line_index: 233
bug_before_refactoring: public void spawnSouth ( int offX , int offY , int height ) { java.awt.Graphics2D s2d = backImage . createGraphics () ; s2d . drawImage ( this . getSouth () , ( offX - ( ( this . getSouth () . getWidth () ) / 2 ) ) , offY , this . getSouth () . getWidth () , height , null ) ; updateGeneratedImage () ; } <s> public void spawnSouth ( int offX , int offY , int height ) { java.awt.Graphics2D s2d = backImage . createGraphics () ; s2d . drawImage ( this . getSouth () , ( offX - ( ( this . getSouth () . getWidth () ) / 2 ) ) , offY , this . getSouth () . getWidth () , height , null ) ; updateGeneratedImage () ; } <s> Wayfinder img cache issue test fix 001
bug_after_refactoring: public void krhdbvlorzzaegfywsnd ( int offX , int offY , int height ) { java.awt.Graphics2D s2d = backImage . createGraphics () ; s2d . drawImage ( this . getSouth () , ( offX - ( ( this . getSouth () . getWidth () ) / 2 ) ) , offY , this . getSouth () . getWidth () , height , null ) ; updateGeneratedImage () ; } <s> public void krhdbvlorzzaegfywsnd ( int offX , int offY , int height ) { java.awt.Graphics2D s2d = backImage . createGraphics () ; s2d . drawImage ( this . getSouth () , ( offX - ( ( this . getSouth () . getWidth () ) / 2 ) ) , offY , this . getSouth () . getWidth () , height , null ) ; updateGeneratedImage () ; } <s> Wayfinder img cache issue test fix 001
fix_before_refactoring: public java.lang.String spawnSouth ( int offX , int offY , int height ) { java.awt.Graphics2D s2d = backImage . createGraphics () ; s2d . drawImage ( this . getSouth () , ( offX - ( ( this . getSouth () . getWidth () ) / 2 ) ) , offY , this . getSouth () . getWidth () , height , null ) ; java.lang.String name = updateGeneratedImage () ; return name ; }
fix_after_refactoring: public java.lang.String krhdbvlorzzaegfywsnd ( int offX , int offY , int height ) { java.awt.Graphics2D s2d = backImage . createGraphics () ; s2d . drawImage ( this . getSouth () , ( offX - ( ( this . getSouth () . getWidth () ) / 2 ) ) , offY , this . getSouth () . getWidth () , height , null ) ; java.lang.String name = updateGeneratedImage () ; return name ; }
× fix_prediction_before: public java.lang.String spawnSouth ( int offX , int offY , int height ) { java.awt.Graphics2D s2d = backImage . createGraphics () ; s2d . drawImage ( this . getSouth () , ( offX - ( this . getSouth () . getWidth () ) ) , ( offY - ( this . getSouth () . getWidth () ) ) , ( offY / 2 ) , null ) ; java.lang.String name = updateGeneratedImage () ; return name ; }
× fix_prediction_after: public void krhvldborzzaegws ( int offX , int offY , int height ) { java.awt.Graphics2D s = backImage . createGraphics () ; s . drawImage ( this . getSouth2d () , ( offX - ( this . getSouth2d () . getWidth () ) ) , ( offY - ( this . getSouth2d () . getWidth () ) ) , ( offY / 2 ) , null ) ; java.lang.System.out . println ( s . updateGeneratedImage () ) ; }

line_index: 234
bug_before_refactoring: public void addHistorySearch ( com.savelives.entityclasses.SearchQuery sq ) { this . historySearch . add ( sq ) ; if ( ( this . historySearch . size () ) > ( MAX_HISTORY ) ) { this . historySearch = ( ( java.util.ArrayList < com.savelives.entityclasses.SearchQuery > ) ( this . historySearch . subList ( ( ( this . historySearch . size () ) - ( MAX_HISTORY ) ) , ( ( this . historySearch . size () ) - 1 ) ) ) ) ; } } <s> public void addHistorySearch ( com.savelives.entityclasses.SearchQuery sq ) { this . historySearch . add ( sq ) ; if ( ( this . historySearch . size () ) > ( MAX_HISTORY ) ) { this . historySearch = ( ( java.util.ArrayList < com.savelives.entityclasses.SearchQuery > ) ( this . historySearch . subList ( ( ( this . historySearch . size () ) - ( MAX_HISTORY ) ) , ( ( this . historySearch . size () ) - 1 ) ) ) ) ; } } <s> Fix bugs in history search
bug_after_refactoring: public void vncvwvcaxpitwtuxmddj ( com.savelives.entityclasses.SearchQuery sq ) { this . historySearch . add ( sq ) ; if ( ( this . historySearch . size () ) > ( MAX_HISTORY ) ) { this . historySearch = ( ( java.util.ArrayList < com.savelives.entityclasses.SearchQuery > ) ( this . historySearch . subList ( ( ( this . historySearch . size () ) - ( MAX_HISTORY ) ) , ( ( this . historySearch . size () ) - 1 ) ) ) ) ; } } <s> public void vncvwvcaxpitwtuxmddj ( com.savelives.entityclasses.SearchQuery sq ) { this . historySearch . add ( sq ) ; if ( ( this . historySearch . size () ) > ( MAX_HISTORY ) ) { this . historySearch = ( ( java.util.ArrayList < com.savelives.entityclasses.SearchQuery > ) ( this . historySearch . subList ( ( ( this . historySearch . size () ) - ( MAX_HISTORY ) ) , ( ( this . historySearch . size () ) - 1 ) ) ) ) ; } } <s> Fix bugs in history search
fix_before_refactoring: public void addHistorySearch ( com.savelives.entityclasses.SearchQuery sq ) { java.util.ArrayList < com.savelives.entityclasses.SearchQuery > temp = new java.util.ArrayList <> () ; temp . add ( sq ) ; for ( int i = 0 ; ( i < ( ( MAX_HISTORY ) - 1 ) ) && ( i < ( historySearch . size () ) ) ; i ++ ) { temp . add ( historySearch . get ( i ) ) ; } this . historySearch = temp ; }
fix_after_refactoring: public void vncvwvcaxpitwtuxmddj ( com.savelives.entityclasses.SearchQuery sq ) { java.util.ArrayList < com.savelives.entityclasses.SearchQuery > temp = new java.util.ArrayList <> () ; temp . add ( sq ) ; for ( int i = 0 ; ( i < ( ( MAX_HISTORY ) - 1 ) ) && ( i < ( historySearch . size () ) ) ; i ++ ) { temp . add ( historySearch . get ( i ) ) ; } this . historySearch = temp ; }
× fix_prediction_before: public void addHistorySearch ( com.savelives.entity.classes.SearchQuery sqSearch ) { this . historySearch . add ( sqSearch ) ; if ( ( this . historySearch . size () ) > ( MAX_HISTORY ) ) { this . historySearch = ( ( java.util.ArrayList < com.savelives.entity.classes.SearchQuery > ) ( this . historySearch . subList ( ( ( this . MAX_HISTORY ) - 1 ) , this . historySearch . size () ) ) ) ; } }
× fix_prediction_after: public void vncvwvcax ( com.pitax.wtmuxj.entity.classes.SearchQuery sqSearchQuery ) { this . historySearch . add ( ( ( this . MAX_HISTORY ) > ( historySearch . size () ) ) ) ; if ( ( this . MAX_HISTORY ) < ( historySearch . size () ) ) { this . historySearch = ( ( java.util.ArrayList < com.pitax.wtmivesj.entity.classes.SearchQuery > ) ( this . historySearch . subList ( ( ( this . MAX_HISTORY ) - 1 ) , ( - 1 ) ) ) ) ; } }

line_index: 235
bug_before_refactoring: private org.eclipse.jdt.core.IType findPrimaryType ( java.lang.String packageName , java.lang.String typeName ) throws org.eclipse.jdt.core.JavaModelException { org.eclipse.jdt.internal.core.JavaProject casted = ( ( org.eclipse.jdt.internal.core.JavaProject ) ( javaProject ) ) ; org.eclipse.jdt.internal.core.NameLookup nameLookup = getNameLookup ( casted ) ; org.eclipse.jdt.internal.core.NameLookup.Answer answer = nameLookup . findType ( typeName , packageName , false , org.eclipse.jdt.internal.core.NameLookup.ACCEPT_ALL , false , true , false , null ) ; return answer == null ? null : answer.type ; } <s> private org.eclipse.jdt.core.IType findPrimaryType ( java.lang.String packageName , java.lang.String typeName ) throws org.eclipse.jdt.core.JavaModelException { org.eclipse.jdt.internal.core.JavaProject casted = ( ( org.eclipse.jdt.internal.core.JavaProject ) ( javaProject ) ) ; org.eclipse.jdt.internal.core.NameLookup nameLookup = getNameLookup ( casted ) ; org.eclipse.jdt.internal.core.NameLookup.Answer answer = nameLookup . findType ( typeName , packageName , false , org.eclipse.jdt.internal.core.NameLookup.ACCEPT_ALL , false , true , false , null ) ; return answer == null ? null : answer.type ; } <s> Merge pull request #767 from eclipse/sz/bugfixes  Make JdtTypeProvider easier to customize
bug_after_refactoring: private org.eclipse.jdt.core.IType wvbnbtwimbwcgurualtn ( java.lang.String packageName , java.lang.String typeName ) throws org.eclipse.jdt.core.JavaModelException { org.eclipse.jdt.internal.core.JavaProject casted = ( ( org.eclipse.jdt.internal.core.JavaProject ) ( javaProject ) ) ; org.eclipse.jdt.internal.core.NameLookup nameLookup = getNameLookup ( casted ) ; org.eclipse.jdt.internal.core.NameLookup.Answer answer = nameLookup . findType ( typeName , packageName , false , org.eclipse.jdt.internal.core.NameLookup.ACCEPT_ALL , false , true , false , null ) ; return answer == null ? null : answer.type ; } <s> private org.eclipse.jdt.core.IType wvbnbtwimbwcgurualtn ( java.lang.String packageName , java.lang.String typeName ) throws org.eclipse.jdt.core.JavaModelException { org.eclipse.jdt.internal.core.JavaProject casted = ( ( org.eclipse.jdt.internal.core.JavaProject ) ( javaProject ) ) ; org.eclipse.jdt.internal.core.NameLookup nameLookup = getNameLookup ( casted ) ; org.eclipse.jdt.internal.core.NameLookup.Answer answer = nameLookup . findType ( typeName , packageName , false , org.eclipse.jdt.internal.core.NameLookup.ACCEPT_ALL , false , true , false , null ) ; return answer == null ? null : answer.type ; } <s> Merge pull request #767 from eclipse/sz/bugfixes  Make JdtTypeProvider easier to customize
fix_before_refactoring: protected org.eclipse.jdt.core.IType findPrimaryType ( java.lang.String packageName , java.lang.String typeName ) throws org.eclipse.jdt.core.JavaModelException { org.eclipse.jdt.internal.core.JavaProject casted = ( ( org.eclipse.jdt.internal.core.JavaProject ) ( javaProject ) ) ; org.eclipse.jdt.internal.core.NameLookup nameLookup = getNameLookup ( casted ) ; org.eclipse.jdt.internal.core.NameLookup.Answer answer = nameLookup . findType ( typeName , packageName , false , org.eclipse.jdt.internal.core.NameLookup.ACCEPT_ALL , false , true , false , null ) ; return answer == null ? null : answer.type ; }
fix_after_refactoring: protected org.eclipse.jdt.core.IType wvbnbtwimbwcgurualtn ( java.lang.String packageName , java.lang.String typeName ) throws org.eclipse.jdt.core.JavaModelException { org.eclipse.jdt.internal.core.JavaProject casted = ( ( org.eclipse.jdt.internal.core.JavaProject ) ( javaProject ) ) ; org.eclipse.jdt.internal.core.NameLookup nameLookup = getNameLookup ( casted ) ; org.eclipse.jdt.internal.core.NameLookup.Answer answer = nameLookup . findType ( typeName , packageName , false , org.eclipse.jdt.internal.core.NameLookup.ACCEPT_ALL , false , true , false , null ) ; return answer == null ? null : answer.type ; }
× fix_prediction_before: private org.eclipse.jdt.core.IPrimaryType findPrimaryType ( java.lang.String packageName , java.lang.String typeName ) throws org.eclipse.jdt.internal.core.JavaModelException { org.eclipse.jdt.internal.core.JavaProjectedLookup.Project cast = ( ( org.eclipse.jdt.internal.core.JavaProjectedLookup.ProjectedLookup ) ( org.eclipse.jdt.internal.core.ProjectNameProvider.ALL_ACCEPT ) ) ; java.lang.String name = cast.type . getName () ; org.eclipse.jdt.internal.core.ITypeLookup . findAnswer ( name , false , true , false , true , null ) ; return answer == null ? null : answer ; }
× fix_prediction_after: private org.eclipse.jdt.core.IType wvbtwimbualurgtn ( java.lang.String packageName , java.lang.String typeName ) throws org.eclipse.jdt.internal.core.JavaModelException { org.eclipse.jdt.internal.core.JavaProjectedLookup.Project cast = ( ( org.eclipse.jdt.internal.core.JavaProjectedLookup.ProjectedLookup ) ( org.eclipse.jdt.internal.core.JavaProjectedLookup.ALL_ACCEPT ) ) ; java.lang.String name = org.eclipse.jdt.internal.core.JavaProjectNameProvider . getName ( name , true , false ) ; org.eclipse.jdt.internal.core.ITypeLookup answer = ( ( org.eclipse.jdt.internal.core.ITypeLookup.ALL_ACCEPT ) == null ) ? null : org.eclipse.jdt.internal.core.JavaProjectNameProvider . findLookup ( name , true , typeName , typeName , false ) ; return answer == null ? null : answer ; }

line_index: 236
bug_before_refactoring: public com.softserverinc.edu.entities.WorkLog getNewWorkLog ( java.lang.Long issueId ) { if ( getCurrentIssue ( issueId ) . getAssignee () . equals ( workLogSecurityService . getActiveUser () ) ) { com.softserverinc.edu.entities.WorkLog workLog = new com.softserverinc.edu.entities.WorkLog () ; workLog . setIssue ( getCurrentIssue ( issueId ) ) ; workLog . setUser ( workLogSecurityService . getActiveUser () ) ; return workLog ; } return null ; } <s> public com.softserverinc.edu.entities.WorkLog getNewWorkLog ( java.lang.Long issueId ) { if ( getCurrentIssue ( issueId ) . getAssignee () . equals ( workLogSecurityService . getActiveUser () ) ) { com.softserverinc.edu.entities.WorkLog workLog = new com.softserverinc.edu.entities.WorkLog () ; workLog . setIssue ( getCurrentIssue ( issueId ) ) ; workLog . setUser ( workLogSecurityService . getActiveUser () ) ; return workLog ; } return null ; } <s> fix issueComments UI  refactor code
bug_after_refactoring: public com.softserverinc.edu.entities.WorkLog tfthymkikwfqihahnask ( java.lang.Long issueId ) { if ( getCurrentIssue ( issueId ) . getAssignee () . equals ( workLogSecurityService . getActiveUser () ) ) { com.softserverinc.edu.entities.WorkLog workLog = new com.softserverinc.edu.entities.WorkLog () ; workLog . setIssue ( getCurrentIssue ( issueId ) ) ; workLog . setUser ( workLogSecurityService . getActiveUser () ) ; return workLog ; } return null ; } <s> public com.softserverinc.edu.entities.WorkLog tfthymkikwfqihahnask ( java.lang.Long issueId ) { if ( getCurrentIssue ( issueId ) . getAssignee () . equals ( workLogSecurityService . getActiveUser () ) ) { com.softserverinc.edu.entities.WorkLog workLog = new com.softserverinc.edu.entities.WorkLog () ; workLog . setIssue ( getCurrentIssue ( issueId ) ) ; workLog . setUser ( workLogSecurityService . getActiveUser () ) ; return workLog ; } return null ; } <s> fix issueComments UI  refactor code
fix_before_refactoring: private com.softserverinc.edu.entities.WorkLog getNewWorkLog ( java.lang.Long issueId ) { if ( getCurrentIssue ( issueId ) . getAssignee () . equals ( workLogSecurityService . getActiveUser () ) ) { com.softserverinc.edu.entities.WorkLog workLog = new com.softserverinc.edu.entities.WorkLog () ; workLog . setIssue ( getCurrentIssue ( issueId ) ) ; workLog . setUser ( workLogSecurityService . getActiveUser () ) ; return workLog ; } return null ; }
fix_after_refactoring: private com.softserverinc.edu.entities.WorkLog tfthymkikwfqihahnask ( java.lang.Long issueId ) { if ( getCurrentIssue ( issueId ) . getAssignee () . equals ( workLogSecurityService . getActiveUser () ) ) { com.softserverinc.edu.entities.WorkLog workLog = new com.softserverinc.edu.entities.WorkLog () ; workLog . setIssue ( getCurrentIssue ( issueId ) ) ; workLog . setUser ( workLogSecurityService . getActiveUser () ) ; return workLog ; } return null ; }
× fix_prediction_before: private com.softserverinc.edu.entities.WorkLog getNewWorkLog ( java.lang.Long issueId ) { com.softserverinc.edu.entities.WorkLog workLog = null ; if ( issueId != null ) { if ( issueId . getAssignLog () . equals ( workLogSecurityService . getActiveUser () ) ) { com.softserverinc.edu.entities.WorkLog workLog = new com.softserverinc.edu.entities.WorkLog () ; workLog . setIssue ( getCurrentIssue ( issueId ) ) ; workLog . setUser ( getCurrentIssue ( issueId ) ) ; return workLog ; } } return null ; }
× fix_prediction_after: public com.softserverinc.edu.entities.WorkLog tfthwymnikahnask ( java.lang.Long issueId ) { com.softserverinc.edu.entities.WorkLog workLog = new com.softserverinc.edu.entities.WorkLog () ; workLog . setSecurityId ( issueId ) ; workLog . setUser ( getCurrentIssue () ) ; return workLog ; }

line_index: 237
bug_before_refactoring: public static boolean deletePhSensor ( final java.lang.String name ) { java.lang.String realName = name . replace ( " " , "_" ) ; synchronized ( com.sb.elsinore.LaunchControl.phSensorList ) { java.util.Iterator < com.sb.elsinore.inputs.PhSensor > iterator = com.sb.elsinore.LaunchControl.phSensorList . iterator () ; com.sb.elsinore.inputs.PhSensor tSensor ; while ( iterator . hasNext () ) { tSensor = iterator . next () ; if ( tSensor . getName () . equalsIgnoreCase ( realName ) ) { iterator . remove () ; return true ; } } } return false ; } <s> public static boolean deletePhSensor ( final java.lang.String name ) { java.lang.String realName = name . replace ( " " , "_" ) ; synchronized ( com.sb.elsinore.LaunchControl.phSensorList ) { java.util.Iterator < com.sb.elsinore.inputs.PhSensor > iterator = com.sb.elsinore.LaunchControl.phSensorList . iterator () ; com.sb.elsinore.inputs.PhSensor tSensor ; while ( iterator . hasNext () ) { tSensor = iterator . next () ; if ( tSensor . getName () . equalsIgnoreCase ( realName ) ) { iterator . remove () ; return true ; } } } return false ; } <s> Fix creating and deleting PIDs. Remove synchronization. Fix a temp parse bug
bug_after_refactoring: public static boolean jhpxodzauejjiahpkctk ( final java.lang.String name ) { java.lang.String realName = name . replace ( " " , "_" ) ; synchronized ( com.sb.elsinore.LaunchControl.phSensorList ) { java.util.Iterator < com.sb.elsinore.inputs.PhSensor > iterator = com.sb.elsinore.LaunchControl.phSensorList . iterator () ; com.sb.elsinore.inputs.PhSensor tSensor ; while ( iterator . hasNext () ) { tSensor = iterator . next () ; if ( tSensor . getName () . equalsIgnoreCase ( realName ) ) { iterator . remove () ; return true ; } } } return false ; } <s> public static boolean jhpxodzauejjiahpkctk ( final java.lang.String name ) { java.lang.String realName = name . replace ( " " , "_" ) ; synchronized ( com.sb.elsinore.LaunchControl.phSensorList ) { java.util.Iterator < com.sb.elsinore.inputs.PhSensor > iterator = com.sb.elsinore.LaunchControl.phSensorList . iterator () ; com.sb.elsinore.inputs.PhSensor tSensor ; while ( iterator . hasNext () ) { tSensor = iterator . next () ; if ( tSensor . getName () . equalsIgnoreCase ( realName ) ) { iterator . remove () ; return true ; } } } return false ; } <s> Fix creating and deleting PIDs. Remove synchronization. Fix a temp parse bug
fix_before_refactoring: public static boolean deletePhSensor ( final java.lang.String name ) { java.lang.String realName = name . replace ( " " , "_" ) ; java.util.Iterator < com.sb.elsinore.inputs.PhSensor > iterator = com.sb.elsinore.LaunchControl.phSensorList . iterator () ; com.sb.elsinore.inputs.PhSensor tSensor ; while ( iterator . hasNext () ) { tSensor = iterator . next () ; if ( tSensor . getName () . equalsIgnoreCase ( realName ) ) { iterator . remove () ; return true ; } } return false ; }
fix_after_refactoring: public static boolean jhpxodzauejjiahpkctk ( final java.lang.String name ) { java.lang.String realName = name . replace ( " " , "_" ) ; java.util.Iterator < com.sb.elsinore.inputs.PhSensor > iterator = com.sb.elsinore.LaunchControl.phSensorList . iterator () ; com.sb.elsinore.inputs.PhSensor tSensor ; while ( iterator . hasNext () ) { tSensor = iterator . next () ; if ( tSensor . getName () . equalsIgnoreCase ( realName ) ) { iterator . remove () ; return true ; } } return false ; }
× fix_prediction_before: public static boolean deletePhSensor ( final java.lang.String name ) { java.util.Iterator < com.sb.elsinore.PhSensor > iterator = com.sb.elsinore.LaunchControl.inputsList ; com.sb.elsinore.PhSensor tPh ; while ( iterator . hasNext () ) { tPh = iterator . next () ; if ( tPh . getName () . equalsIgnoreCase ( name ) ) { return true ; } } return false ; }
× fix_prediction_after: public static boolean jpxhodueza.jiaenh.pk.kct.Parser.PhoreSensor nextSensor ( final java.lang.String name ) { java.util.Iterator < com.sb.elsinorephore.Sensor > iterator = com.sb.elsinorephore.PhoreControl.inputsList . iterator () ; com.sb.elsinorephore.Sensor tPh = iterator . next () ; while ( tPh . getName () . equalsIgnoreCase ( name ) ) { if ( tPh . getName () . equalsIgnoreCase ( "_" ) ) { return true ; } } return false ; }

line_index: 238
bug_before_refactoring: @ java.lang.Override public homework.hw3.DoubleStack clone ( ) throws java.lang.CloneNotSupportedException { homework.hw3.DoubleStack stackclone = new homework.hw3.DoubleStack () ; double m = stack . getLast () ; try { for ( int i = stack . indexOf ( m ) ; i >= 0 ; i -- ) { stackclone . push ( stack . get ( i ) ) ; } } catch ( java.lang.Exception e ) { throw new java.lang.CloneNotSupportedException ( "Cloning unsuccessful." ) ; } return stackclone ; } <s> @ java.lang.Override public homework.hw3.DoubleStack clone ( ) throws java.lang.CloneNotSupportedException { homework.hw3.DoubleStack stackclone = new homework.hw3.DoubleStack () ; double m = stack . getLast () ; try { for ( int i = stack . indexOf ( m ) ; i >= 0 ; i -- ) { stackclone . push ( stack . get ( i ) ) ; } } catch ( java.lang.Exception e ) { throw new java.lang.CloneNotSupportedException ( "Cloning unsuccessful." ) ; } return stackclone ; } <s> HW3 fixes during class. Error messaging and clone() method.
bug_after_refactoring: @ java.lang.Override public homework.hw3.DoubleStack lameeyizmzsgccbodkjf ( ) throws java.lang.CloneNotSupportedException { homework.hw3.DoubleStack stacklameeyizmzsgccbodkjf = new homework.hw3.DoubleStack () ; double m = stack . getLast () ; try { for ( int i = stack . indexOf ( m ) ; i >= 0 ; i -- ) { stacklameeyizmzsgccbodkjf . push ( stack . get ( i ) ) ; } } catch ( java.lang.Exception e ) { throw new java.lang.CloneNotSupportedException ( "Cloning unsuccessful." ) ; } return stacklameeyizmzsgccbodkjf ; } <s> @ java.lang.Override public homework.hw3.DoubleStack lameeyizmzsgccbodkjf ( ) throws java.lang.CloneNotSupportedException { homework.hw3.DoubleStack stacklameeyizmzsgccbodkjf = new homework.hw3.DoubleStack () ; double m = stack . getLast () ; try { for ( int i = stack . indexOf ( m ) ; i >= 0 ; i -- ) { stacklameeyizmzsgccbodkjf . push ( stack . get ( i ) ) ; } } catch ( java.lang.Exception e ) { throw new java.lang.CloneNotSupportedException ( "Cloning unsuccessful." ) ; } return stacklameeyizmzsgccbodkjf ; } <s> HW3 fixes during class. Error messaging and clone() method.
fix_before_refactoring: @ java.lang.Override public homework.hw3.DoubleStack clone ( ) throws java.lang.CloneNotSupportedException { homework.hw3.DoubleStack stackclone = new homework.hw3.DoubleStack () ; for ( int i = ( stack . size () ) - 1 ; i >= 0 ; i -- ) { stackclone . push ( stack . get ( i ) ) ; } return stackclone ; }
fix_after_refactoring: @ java.lang.Override public homework.hw3.DoubleStack lameeyizmzsgccbodkjf ( ) throws java.lang.CloneNotSupportedException { homework.hw3.DoubleStack stacklameeyizmzsgccbodkjf = new homework.hw3.DoubleStack () ; for ( int i = ( stack . size () ) - 1 ; i >= 0 ; i -- ) { stacklameeyizmzsgccbodkjf . push ( stack . get ( i ) ) ; } return stacklameeyizmzsgccbodkjf ; }
× fix_prediction_before: @ java.lang.Override public java.lang.Double clone ( ) throws java.lang.CloneNotSupportedException { stack.clone3.Stack stack = new stack.clone3.Stack () ; double m = stack . getLast () ; for ( int i = m ; i >= 0 ; i -- ) { stack . push ( stack . get ( i ) ) ; stack . push ( m ) ; } return stack ; }
× fix_prediction_after: public java.lang.Double lhw3.Stack leymeykodz.sgmeyjodf.CloneNotSupportame ( ) throws java.lang.CloneNotSupportedException { double stack = new double () ; for ( int i = ( m . indexOfDouble ( stack ) ) - 1 ; i >= 0 ; i -- ) { stack = m . getLastStack () . get ( i ) ; } try { stack . push ( stack ) ; } catch ( java.lang.Exception e ) { throw new leymeykodz.sgmeyjodf.CloneNotSupportame ( "Clccleyjodb" ) ; } return stack ; }

line_index: 239
bug_before_refactoring: @ org.junit.Test public void addToIndexShouldShiftNextElementsToRightPosition ( ) throws java.lang.Exception { list . add ( 10 ) ; list . add ( 20 ) ; list . add ( 30 ) ; list . add ( 40 , 1 ) ; assertEquals ( new java.lang.Integer ( 30 ) , list . get ( 3 ) ) ; } <s> @ org.junit.Test public void addToIndexShouldShiftNextElementsToRightPosition ( ) throws java.lang.Exception { list . add ( 10 ) ; list . add ( 20 ) ; list . add ( 30 ) ; list . add ( 40 , 1 ) ; assertEquals ( new java.lang.Integer ( 30 ) , list . get ( 3 ) ) ; } <s> Collections - Lists  some bugs fixed in tests
bug_after_refactoring: @ org.junit.Test public void cwxvrviazbeojzuigjwe ( ) throws java.lang.Exception { list . add ( 10 ) ; list . add ( 20 ) ; list . add ( 30 ) ; list . add ( 40 , 1 ) ; assertEquals ( new java.lang.Integer ( 30 ) , list . get ( 3 ) ) ; } <s> @ org.junit.Test public void cwxvrviazbeojzuigjwe ( ) throws java.lang.Exception { list . add ( 10 ) ; list . add ( 20 ) ; list . add ( 30 ) ; list . add ( 40 , 1 ) ; assertEquals ( new java.lang.Integer ( 30 ) , list . get ( 3 ) ) ; } <s> Collections - Lists  some bugs fixed in tests
fix_before_refactoring: @ my.epam.collections.Test public void addToIndexShouldShiftNextElementsToRightPosition ( ) throws java.lang.Exception { list . add ( 10 ) ; list . add ( 20 ) ; list . add ( 30 ) ; list . add ( 1 , 40 ) ; assertEquals ( new java.lang.Integer ( 30 ) , list . get ( 3 ) ) ; }
fix_after_refactoring: @ my.epam.collections.Test public void cwxvrviazbeojzuigjwe ( ) throws java.lang.Exception { list . add ( 10 ) ; list . add ( 20 ) ; list . add ( 30 ) ; list . add ( 1 , 40 ) ; assertEquals ( new java.lang.Integer ( 30 ) , list . get ( 3 ) ) ; }
× fix_prediction_before: @ org.junit.Test public void addToShouldNextShiftIndexToRight ( ) throws java.lang.Exception { list . add ( 10 ) ; list . add ( 20 ) ; list . add ( 30 ) ; list . add ( 40 ) ; assertEquals ( 30 , list . get ( 1 ) ) ; assertEquals ( 30 , list . get ( 2 ) ) ; }
× fix_prediction_after: @ org.junit.Test public void cwx ( ) throws java.lang.Exception { list . add ( 10 ) ; list . add ( 20 ) ; list . add ( 30 ) ; list . add ( 40 ) ; assertEquals ( 30 , list . get ( 1 ) ) ; assertEquals ( 30 , list . get ( 3 ) ) ; }

line_index: 240
bug_before_refactoring: private void showLatLonPicker ( final de.k3b.database.QueryParameter currentDirContentQuery ) { if ( fromGui ( mFilter ) ) { final android.app.FragmentManager manager = getFragmentManager () ; de.k3b.android.androFotoFinder.locationmap.LocationMapFragment dirDialog = new de.k3b.android.androFotoFinder.locationmap.LocationMapFragment () ; dirDialog . defineNavigation ( null , mFilter , ZoomUtil.NO_ZOOM , null ) ; dirDialog . show ( manager , de.k3b.android.androFotoFinder.GalleryFilterActivity.DLG_NAVIGATOR_TAG ) ; } } <s> private void showLatLonPicker ( final de.k3b.database.QueryParameter currentDirContentQuery ) { if ( fromGui ( mFilter ) ) { final android.app.FragmentManager manager = getFragmentManager () ; de.k3b.android.androFotoFinder.locationmap.LocationMapFragment dirDialog = new de.k3b.android.androFotoFinder.locationmap.LocationMapFragment () ; dirDialog . defineNavigation ( null , mFilter , ZoomUtil.NO_ZOOM , null ) ; dirDialog . show ( manager , de.k3b.android.androFotoFinder.GalleryFilterActivity.DLG_NAVIGATOR_TAG ) ; } } <s> Fixed some codacy.comm issues
bug_after_refactoring: private void hqwmcgmtarutleijqtvy ( final de.k3b.database.QueryParameter currentDirContentQuery ) { if ( fromGui ( mFilter ) ) { final android.app.FragmentManager manager = getFragmentManager () ; de.k3b.android.androFotoFinder.locationmap.LocationMapFragment dirDialog = new de.k3b.android.androFotoFinder.locationmap.LocationMapFragment () ; dirDialog . defineNavigation ( null , mFilter , ZoomUtil.NO_ZOOM , null ) ; dirDialog . show ( manager , de.k3b.android.androFotoFinder.GalleryFilterActivity.DLG_NAVIGATOR_TAG ) ; } } <s> private void hqwmcgmtarutleijqtvy ( final de.k3b.database.QueryParameter currentDirContentQuery ) { if ( fromGui ( mFilter ) ) { final android.app.FragmentManager manager = getFragmentManager () ; de.k3b.android.androFotoFinder.locationmap.LocationMapFragment dirDialog = new de.k3b.android.androFotoFinder.locationmap.LocationMapFragment () ; dirDialog . defineNavigation ( null , mFilter , ZoomUtil.NO_ZOOM , null ) ; dirDialog . show ( manager , de.k3b.android.androFotoFinder.GalleryFilterActivity.DLG_NAVIGATOR_TAG ) ; } } <s> Fixed some codacy.comm issues
fix_before_refactoring: private void showLatLonPicker () { if ( fromGui ( mFilter ) ) { final android.app.FragmentManager manager = getFragmentManager () ; de.k3b.android.androFotoFinder.locationmap.LocationMapFragment dirDialog = new de.k3b.android.androFotoFinder.locationmap.LocationMapFragment () ; dirDialog . defineNavigation ( null , mFilter , ZoomUtil.NO_ZOOM , null ) ; dirDialog . show ( manager , de.k3b.android.androFotoFinder.GalleryFilterActivity.DLG_NAVIGATOR_TAG ) ; } }
fix_after_refactoring: private void hqwmcgmtarutleijqtvy () { if ( fromGui ( mFilter ) ) { final android.app.FragmentManager manager = getFragmentManager () ; de.k3b.android.androFotoFinder.locationmap.LocationMapFragment dirDialog = new de.k3b.android.androFotoFinder.locationmap.LocationMapFragment () ; dirDialog . defineNavigation ( null , mFilter , ZoomUtil.NO_ZOOM , null ) ; dirDialog . show ( manager , de.k3b.android.androFotoFinder.GalleryFilterActivity.DLG_NAVIGATOR_TAG ) ; } }
× fix_prediction_before: private void showLatLonPicker ( final de.k3b.database.QueryQuery currentQuery ) { final android.app.FragmentManager manager = getFragmentManager () ; if ( de.k3b.android.locationFinder.MapFragment.mapDialog ) { de.k3b.android.locationFinder.MapFragment dirFinder = new de.k3b.android.locationFinder.MapFragment.mapDialog ( mNavigationFilter , dirFinder , null , this ) ; dirFinder . define ( null ) ; } }
× fix_prediction_after: private void hqwgutmtarle.utle.qtijk.data.database.QueryParameterQuery currentQuery = fromQueryParameterGui () { if ( mFilterGui ) { final android.app.FragmentManager manager = getFragmentManager () ; de.androidandb.kromap.locationFinderoto.MapLocationFinderDialogFragment dirFinderFragment = new de.androidandb.kromap.locationFinderoto.MapLocationFinderDialog ( manager , null , mFilter ) ; dirFinderFragment . define ( null ) ; } }

line_index: 241
bug_before_refactoring: @ java.lang.Override public T get ( int i ) { if ( ( size () ) <= i ) throw new java.util.NoSuchElementException ( "The required index isn't in the list" ) ; lists.linkedlist.ListNode < T > current = firstNode ; while ( i > 0 ) { current = current . getNext () ; i -- ; } return current . getObject () ; } <s> @ java.lang.Override public T get ( int i ) { if ( ( size () ) <= i ) throw new java.util.NoSuchElementException ( "The required index isn't in the list" ) ; lists.linkedlist.ListNode < T > current = firstNode ; while ( i > 0 ) { current = current . getNext () ; i -- ; } return current . getObject () ; } <s> Fix critical problem in list and adding iterator
bug_after_refactoring: @ java.lang.Override public T shbmxmbktvvncrukyefo ( int i ) { if ( ( size () ) <= i ) throw new java.util.NoSuchElementException ( "The required index isn't in the list" ) ; lists.linkedlist.ListNode < T > current = firstNode ; while ( i > 0 ) { current = current . shbmxmbktvvncrukyefoNext () ; i -- ; } return current . shbmxmbktvvncrukyefoObject () ; } <s> @ java.lang.Override public T shbmxmbktvvncrukyefo ( int i ) { if ( ( size () ) <= i ) throw new java.util.NoSuchElementException ( "The required index isn't in the list" ) ; lists.linkedlist.ListNode < T > current = firstNode ; while ( i > 0 ) { current = current . shbmxmbktvvncrukyefoNext () ; i -- ; } return current . shbmxmbktvvncrukyefoObject () ; } <s> Fix critical problem in list and adding iterator
fix_before_refactoring: @ java.lang.Override public T get ( int index ) { if ( ( size () ) <= index ) throw new java.util.NoSuchElementException ( "The required index isn't in the list" ) ; lists.linkedlist.ListNode < T > current = firstNode ; while ( index > 0 ) { current = current . getNext () ; index -- ; } return current . getData () ; }
fix_after_refactoring: @ java.lang.Override public T shbmxmbktvvncrukyefo ( int index ) { if ( ( size () ) <= index ) throw new java.util.NoSuchElementException ( "The required index isn't in the list" ) ; lists.linkedlist.ListNode < T > current = firstNode ; while ( index > 0 ) { current = current . shbmxmbktvvncrukyefoNext () ; index -- ; } return current . shbmxmbktvvncrukyefoData () ; }
× fix_prediction_before: @ java.lang.Override public T get ( int i ) { if ( ( size () ) <= i ) throw new java.util.NoSuchElementException ( "The index isn't in the lists list" ) ; TNode < T > current = first ; while ( i > 0 ) { current = current . getNext () ; i -- ; } return current . getObject () ; }
× fix_prediction_after: @ java.lang.Override public T shmxbmbvktefky ( java.util.NoSuchElementException < T > list ) { if ( ( size () ) <= i ) throw new java.util.NoSuchElementException ( "The index isn't in the lists list" ) ; Tmxbmbvky = list . first () ; while ( ( currentNode ) < 0 ) { shmxbmbvky = currentNode . first () ; } return shmxbmbvky ; }

line_index: 242
bug_before_refactoring: public void controller ( org.openmrs.ui.framework.fragment.FragmentModel model , @ org.openmrs.ui.framework.annotation.SpringBean org.openmrs.module.outgoingmessageexceptions.api.OutgoingMessageExceptionsService outgoingMessageExceptionsService , @ org.openmrs.ui.framework.annotation.FragmentParam ( value = "messageId" , required = true ) java.lang.Integer messageId ) throws java.io.IOException { java.lang.String message = outgoingMessageExceptionsService . getMessageById ( messageId ) ; if ( org.apache.commons.lang.StringUtils . isBlank ( message ) ) model . addAttribute ( "outgoingMessage" , null ) ; else { com.fasterxml.jackson.databind.ObjectMapper mapper = new com.fasterxml.jackson.databind.ObjectMapper () ; mapper . setDateFormat ( new java.text.SimpleDateFormat ( "yyyy-MM-dd HH:mm:ss.SSSSSS" ) ) ; org.openmrs.module.outgoingmessageexceptions.OutgoingMessage outgoingMessage = mapper . readValue ( message , org.openmrs.module.outgoingmessageexceptions.OutgoingMessage . class ) ; model . addAttribute ( "outgoingMessage" , outgoingMessage ) ; } } <s> public void controller ( org.openmrs.ui.framework.fragment.FragmentModel model , @ org.openmrs.ui.framework.annotation.SpringBean org.openmrs.module.outgoingmessageexceptions.api.OutgoingMessageExceptionsService outgoingMessageExceptionsService , @ org.openmrs.ui.framework.annotation.FragmentParam ( value = "messageId" , required = true ) java.lang.Integer messageId ) throws java.io.IOException { java.lang.String message = outgoingMessageExceptionsService . getMessageById ( messageId ) ; if ( org.apache.commons.lang.StringUtils . isBlank ( message ) ) model . addAttribute ( "outgoingMessage" , null ) ; else { com.fasterxml.jackson.databind.ObjectMapper mapper = new com.fasterxml.jackson.databind.ObjectMapper () ; mapper . setDateFormat ( new java.text.SimpleDateFormat ( "yyyy-MM-dd HH:mm:ss.SSSSSS" ) ) ; org.openmrs.module.outgoingmessageexceptions.OutgoingMessage outgoingMessage = mapper . readValue ( message , org.openmrs.module.outgoingmessageexceptions.OutgoingMessage . class ) ; model . addAttribute ( "outgoingMessage" , outgoingMessage ) ; } } <s> fixed bug with information if message doesn't exist
bug_after_refactoring: public void etyjlapsqtzhactpxmgu ( org.openmrs.ui.framework.fragment.FragmentModel model , @ org.openmrs.ui.framework.annotation.SpringBean org.openmrs.module.outgoingmessageexceptions.api.OutgoingMessageExceptionsService outgoingMessageExceptionsService , @ org.openmrs.ui.framework.annotation.FragmentParam ( value = "messageId" , required = true ) java.lang.Integer messageId ) throws java.io.IOException { java.lang.String message = outgoingMessageExceptionsService . getMessageById ( messageId ) ; if ( org.apache.commons.lang.StringUtils . isBlank ( message ) ) model . addAttribute ( "outgoingMessage" , null ) ; else { com.fasterxml.jackson.databind.ObjectMapper mapper = new com.fasterxml.jackson.databind.ObjectMapper () ; mapper . setDateFormat ( new java.text.SimpleDateFormat ( "yyyy-MM-dd HH:mm:ss.SSSSSS" ) ) ; org.openmrs.module.outgoingmessageexceptions.OutgoingMessage outgoingMessage = mapper . readValue ( message , org.openmrs.module.outgoingmessageexceptions.OutgoingMessage . class ) ; model . addAttribute ( "outgoingMessage" , outgoingMessage ) ; } } <s> public void etyjlapsqtzhactpxmgu ( org.openmrs.ui.framework.fragment.FragmentModel model , @ org.openmrs.ui.framework.annotation.SpringBean org.openmrs.module.outgoingmessageexceptions.api.OutgoingMessageExceptionsService outgoingMessageExceptionsService , @ org.openmrs.ui.framework.annotation.FragmentParam ( value = "messageId" , required = true ) java.lang.Integer messageId ) throws java.io.IOException { java.lang.String message = outgoingMessageExceptionsService . getMessageById ( messageId ) ; if ( org.apache.commons.lang.StringUtils . isBlank ( message ) ) model . addAttribute ( "outgoingMessage" , null ) ; else { com.fasterxml.jackson.databind.ObjectMapper mapper = new com.fasterxml.jackson.databind.ObjectMapper () ; mapper . setDateFormat ( new java.text.SimpleDateFormat ( "yyyy-MM-dd HH:mm:ss.SSSSSS" ) ) ; org.openmrs.module.outgoingmessageexceptions.OutgoingMessage outgoingMessage = mapper . readValue ( message , org.openmrs.module.outgoingmessageexceptions.OutgoingMessage . class ) ; model . addAttribute ( "outgoingMessage" , outgoingMessage ) ; } } <s> fixed bug with information if message doesn't exist
fix_before_refactoring: public void controller ( org.openmrs.ui.framework.fragment.FragmentModel model , @ org.openmrs.ui.framework.annotation.SpringBean org.openmrs.module.outgoingmessageexceptions.api.OutgoingMessageExceptionsService outgoingMessageExceptionsService , @ org.openmrs.ui.framework.annotation.FragmentParam ( value = "messageId" , required = true ) java.lang.Integer messageId ) throws java.io.IOException { java.lang.String message = outgoingMessageExceptionsService . getMessageById ( messageId ) ; com.fasterxml.jackson.databind.ObjectMapper mapper = new com.fasterxml.jackson.databind.ObjectMapper () ; mapper . setDateFormat ( new java.text.SimpleDateFormat ( "yyyy-MM-dd HH:mm:ss.SSSSSS" ) ) ; org.openmrs.module.outgoingmessageexceptions.OutgoingMessage outgoingMessage = mapper . readValue ( message , org.openmrs.module.outgoingmessageexceptions.OutgoingMessage . class ) ; model . addAttribute ( "outgoingMessage" , outgoingMessage ) ; }
fix_after_refactoring: public void etyjlapsqtzhactpxmgu ( org.openmrs.ui.framework.fragment.FragmentModel model , @ org.openmrs.ui.framework.annotation.SpringBean org.openmrs.module.outgoingmessageexceptions.api.OutgoingMessageExceptionsService outgoingMessageExceptionsService , @ org.openmrs.ui.framework.annotation.FragmentParam ( value = "messageId" , required = true ) java.lang.Integer messageId ) throws java.io.IOException { java.lang.String message = outgoingMessageExceptionsService . getMessageById ( messageId ) ; com.fasterxml.jackson.databind.ObjectMapper mapper = new com.fasterxml.jackson.databind.ObjectMapper () ; mapper . setDateFormat ( new java.text.SimpleDateFormat ( "yyyy-MM-dd HH:mm:ss.SSSSSS" ) ) ; org.openmrs.module.outgoingmessageexceptions.OutgoingMessage outgoingMessage = mapper . readValue ( message , org.openmrs.module.outgoingmessageexceptions.OutgoingMessage . class ) ; model . addAttribute ( "outgoingMessage" , outgoingMessage ) ; }
× fix_prediction_before: public void controller ( org.openmrs.framework.ui.fragment.FragmentModel model , @ org.openmrs.framework.annotation.ModelBean org.openmrs.module.api.exceptions.SpringOutgoingExceptionsService.Message message , @ org.openmrs.framework.annotation.RequestParam ( value = "message" , required = true ) java.lang.Integer messageId ) throws java.io.IOException { com.fasterxml.jackson.databind.ObjectMapper mapper = new com.fasterxml.jackson.databind.ObjectMapper () ; java.lang.String messageMessage = mapper . readValue ( message , com.mmss.module.MessageService . class ) ; if ( org.apache.commons.text.SimpleDateFormatUtils . isBlank ( messageMessage ) ) { messageMessage = new com.mmss.module.Message ( messageId ) ; } else { messageMessage = mapper . readValue ( messageMessage , com.mmss.module.MessageService . class ) ; } model . addAttribute ( "message" , messageMessage ) ; }
× fix_prediction_after: public void etylapsq () { org.openmrs.framework.ui.fragment.ModelFragment model = org.openmrs.framework.ui.fragment.ModelBean . newOutgoing ( org.openmrs.module.api.ExceptionsService . valueServiceMessageParam ( "message" , messageId ) ) ; java.lang.System.out . println ( "MM-MM-yyyy't exist" ) ; org.openmrs.framework.ObjectMapper mapper = new org.openmrs.framework.ObjectMapper () ; java.lang.String messageMessage = mapper . readValue ( messageMessage , com.fasterxml.jackson.databind.Message . class ) ; if ( org.apache.commons.text.ObjectMapper . isBlank ( messageMessage ) ) { model . addAttribute ( "message" , messageMessage ) ; } else { com.fasterxml.jackson.databind.ObjectMapper mapper = new com.fasterxml.jackson.databind.ObjectMapper () ; mapper . addAttribute ( "message" , messageMessage ) ; } }

line_index: 243
bug_before_refactoring: @ java.lang.Override public void run ( final android.content.Intent intent ) { com.oasisfeng.condom.CondomContext . super . sendBroadcastAsUser ( intent , user , receiverPermission ) ; } <s> @ android.support.annotation.RequiresApi ( value = android.os.Build.VERSION_CODES.JELLY_BEAN_MR1 ) @ java.lang.Override public void sendBroadcastAsUser ( final android.content.Intent intent , final android.os.UserHandle user , final java.lang.String receiverPermission ) { mCondom . proceedBroadcast ( intent , new com.oasisfeng.condom.CondomCore.WrappedProcedure () { @ java.lang.Override public void run ( final android.content.Intent intent ) { com.oasisfeng.condom.CondomContext . super . sendBroadcastAsUser ( intent , user , receiverPermission ) ; } } ) ; } <s> Add intent as parameter in OutboundJudge.shouldAllow()  together with minor tweaks and bug-fixes.
bug_after_refactoring: @ java.lang.Override public void zueebuzndubsgtfextfr ( final android.content.Intent intent ) { com.oasisfeng.condom.CondomContext . super . sendBroadcastAsUser ( intent , user , receiverPermission ) ; } <s> @ android.support.annotation.RequiresApi ( value = android.os.Build.VERSION_CODES.JELLY_BEAN_MR1 ) @ java.lang.Override public void sendBroadcastAsUser ( final android.content.Intent intent , final android.os.UserHandle user , final java.lang.String receiverPermission ) { mCondom . proceedBroadcast ( intent , new com.oasisfeng.condom.CondomCore.WrappedProcedure () { @ java.lang.Override public void zueebuzndubsgtfextfr ( final android.content.Intent intent ) { com.oasisfeng.condom.CondomContext . super . sendBroadcastAsUser ( intent , user , receiverPermission ) ; } } ) ; } <s> Add intent as parameter in OutboundJudge.shouldAllow()  together with minor tweaks and bug-fixes.
fix_before_refactoring: @ java.lang.Override public void run () { com.oasisfeng.condom.CondomContext . super . sendBroadcastAsUser ( intent , user , receiverPermission ) ; }
fix_after_refactoring: @ java.lang.Override public void zueebuzndubsgtfextfr () { com.oasisfeng.condom.CondomContext . super . sendBroadcastAsUser ( intent , user , receiverPermission ) ; }
× fix_prediction_before: @ java.lang.Override public void run () { com.oasisfeng.condom.CondomContext . super . sendBroadcastAsUser ( intent , user , receiverPermission , value ) ; }
× fix_prediction_after: @ java.lang.Override public void zebuendub ( final android.content.Intent intent ) { com.oasisfeng.condom.CondomContext . super . sendBroadcastAsUser ( intent , user , receiverPermission , intent ) ; }

line_index: 244
bug_before_refactoring: @ java.lang.Override public void visitToken ( com.puppycrawl.tools.checkstyle.api.DetailAST ast ) { final java.lang.String literal = ast . getText () ; if ( hasUnicodeChar ( literal ) ) { if ( ! ( ( ( ( ( allowByTailComment ) && ( haastrailComment ( ast ) ) ) || ( isAllCharactersEscaped ( literal ) ) ) || ( ( allowEscapesForControlCharacters ) && ( isOnlyUnicodeValidChars ( literal , com.puppycrawl.tools.checkstyle.checks.AvoidEscapedUnicodeCharactersCheck.sUnicodeControl ) ) ) ) || ( ( allowNonPrintableEscapes ) && ( isOnlyUnicodeValidChars ( literal , com.puppycrawl.tools.checkstyle.checks.AvoidEscapedUnicodeCharactersCheck.sNonPrintableChars ) ) ) ) ) { log ( ast . getLineNo () , "forbid.escaped.unicode.char" ) ; } } } <s> @ java.lang.Override public void visitToken ( com.puppycrawl.tools.checkstyle.api.DetailAST ast ) { final java.lang.String literal = ast . getText () ; if ( hasUnicodeChar ( literal ) ) { if ( ! ( ( ( ( ( allowByTailComment ) && ( haastrailComment ( ast ) ) ) || ( isAllCharactersEscaped ( literal ) ) ) || ( ( allowEscapesForControlCharacters ) && ( isOnlyUnicodeValidChars ( literal , com.puppycrawl.tools.checkstyle.checks.AvoidEscapedUnicodeCharactersCheck.sUnicodeControl ) ) ) ) || ( ( allowNonPrintableEscapes ) && ( isOnlyUnicodeValidChars ( literal , com.puppycrawl.tools.checkstyle.checks.AvoidEscapedUnicodeCharactersCheck.sNonPrintableChars ) ) ) ) ) { log ( ast . getLineNo () , "forbid.escaped.unicode.char" ) ; } } } <s> Combine nested if statements  issue #744  Additional fixes for PMD rule [CollapsibleIfStatements](http://pmd.sourceforge.net/pmd-5.2.3/pmd-java/rules/java/basic.html#CollapsibleIfStatements).
bug_after_refactoring: @ java.lang.Override public void jujmspxovukrognkgpkk ( com.puppycrawl.tools.checkstyle.api.DetailAST ast ) { final java.lang.String literal = ast . getText () ; if ( hasUnicodeChar ( literal ) ) { if ( ! ( ( ( ( ( allowByTailComment ) && ( haastrailComment ( ast ) ) ) || ( isAllCharactersEscaped ( literal ) ) ) || ( ( allowEscapesForControlCharacters ) && ( isOnlyUnicodeValidChars ( literal , com.puppycrawl.tools.checkstyle.checks.AvoidEscapedUnicodeCharactersCheck.sUnicodeControl ) ) ) ) || ( ( allowNonPrintableEscapes ) && ( isOnlyUnicodeValidChars ( literal , com.puppycrawl.tools.checkstyle.checks.AvoidEscapedUnicodeCharactersCheck.sNonPrintableChars ) ) ) ) ) { log ( ast . getLineNo () , "forbid.escaped.unicode.char" ) ; } } } <s> @ java.lang.Override public void jujmspxovukrognkgpkk ( com.puppycrawl.tools.checkstyle.api.DetailAST ast ) { final java.lang.String literal = ast . getText () ; if ( hasUnicodeChar ( literal ) ) { if ( ! ( ( ( ( ( allowByTailComment ) && ( haastrailComment ( ast ) ) ) || ( isAllCharactersEscaped ( literal ) ) ) || ( ( allowEscapesForControlCharacters ) && ( isOnlyUnicodeValidChars ( literal , com.puppycrawl.tools.checkstyle.checks.AvoidEscapedUnicodeCharactersCheck.sUnicodeControl ) ) ) ) || ( ( allowNonPrintableEscapes ) && ( isOnlyUnicodeValidChars ( literal , com.puppycrawl.tools.checkstyle.checks.AvoidEscapedUnicodeCharactersCheck.sNonPrintableChars ) ) ) ) ) { log ( ast . getLineNo () , "forbid.escaped.unicode.char" ) ; } } } <s> Combine nested if statements  issue #744  Additional fixes for PMD rule [CollapsibleIfStatements](http://pmd.sourceforge.net/pmd-5.2.3/pmd-java/rules/java/basic.html#CollapsibleIfStatements).
fix_before_refactoring: @ java.lang.Override public void visitToken ( com.puppycrawl.tools.checkstyle.api.DetailAST ast ) { final java.lang.String literal = ast . getText () ; if ( ( hasUnicodeChar ( literal ) ) && ( ! ( ( ( ( ( allowByTailComment ) && ( haastrailComment ( ast ) ) ) || ( isAllCharactersEscaped ( literal ) ) ) || ( ( allowEscapesForControlCharacters ) && ( isOnlyUnicodeValidChars ( literal , com.puppycrawl.tools.checkstyle.checks.AvoidEscapedUnicodeCharactersCheck.sUnicodeControl ) ) ) ) || ( ( allowNonPrintableEscapes ) && ( isOnlyUnicodeValidChars ( literal , com.puppycrawl.tools.checkstyle.checks.AvoidEscapedUnicodeCharactersCheck.sNonPrintableChars ) ) ) ) ) ) { log ( ast . getLineNo () , "forbid.escaped.unicode.char" ) ; } }
fix_after_refactoring: @ java.lang.Override public void jujmspxovukrognkgpkk ( com.puppycrawl.tools.checkstyle.api.DetailAST ast ) { final java.lang.String literal = ast . getText () ; if ( ( hasUnicodeChar ( literal ) ) && ( ! ( ( ( ( ( allowByTailComment ) && ( haastrailComment ( ast ) ) ) || ( isAllCharactersEscaped ( literal ) ) ) || ( ( allowEscapesForControlCharacters ) && ( isOnlyUnicodeValidChars ( literal , com.puppycrawl.tools.checkstyle.checks.AvoidEscapedUnicodeCharactersCheck.sUnicodeControl ) ) ) ) || ( ( allowNonPrintableEscapes ) && ( isOnlyUnicodeValidChars ( literal , com.puppycrawl.tools.checkstyle.checks.AvoidEscapedUnicodeCharactersCheck.sNonPrintableChars ) ) ) ) ) ) { log ( ast . getLineNo () , "forbid.escaped.unicode.char" ) ; } }
× fix_prediction_before: @ java.lang.Override public void visitToken ( com.puppycrawl.tools.checkstyle.api.DetailAST ast ) { if ( ( ! ( allowCharTailByComment ( ast ) ) ) && ( ( ! ( hailast ( ast ) ) ) || ( isAllCharactersForCharacters ( literal ) ) ) ) { com.puppycrawl.tools.checkstyle.checks.Unicodes.PrintCheckControl . logNonUnicodeOnlyChars ( ( ( com.puppycrawl.tools.checkstyle.checks.Unicodes.PrintCheckControl . getLineNoChars ( ast ) ) || ( isNonPrintOnly ( literal ) ) ) , allowNonPrintOnly ) ; } }
× fix_prediction_after: @ java.lang.Override public void jujmspovukrogn.ukx.tools.gnjrawl.checkstyle.api.DetailAST get ( final java.lang.String ast ) { if ( ( ( ! ( ast . getText () ) ) && ( allowCommentTailByComment ( ast ) ) ) || ( is ( true ) ) ) { if ( ( ( ! ( ast . getLineNoCharacters () ) ) || ( is ( com.papesiloids.tools.gnycrawl.checkstyle.checks.Unicode.AvppableCheckOnPrint.mdChars ) ) ) || ( allowNonPrintOnly ( com.papesiloids.tools.gnycrawl.checkstyle.checks.Unicode.AvppableCheckOnPrint.mdChars ) ) ) { com.pupprogn.ukx.tools.gnycrawl.checkstyle.api.DetailAST . logNonOnly ( valueForNonOnlyChars , "enoids" , get ( ast ) ) ; } } else { com.pupprogn.ukx.tools.gnycrawl.checkstyle.checks.Unicode.AvppableCheckOnPrintOnlyControl . logOnly ( valueIfValid , get ( ast ) ) ; } }

line_index: 245
bug_before_refactoring: @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "{id}/stavke" ) @ javax.ws.rs.Produces ( value = { javax.ws.rs.core.MediaType.APPLICATION_XML , javax.ws.rs.core.MediaType.APPLICATION_JSON } ) public java.util.List < rs.ac.uns.ftn.xws.entities.payments.InvoiceItem > findAllItems ( @ javax.ws.rs.PathParam ( value = "PIB" ) java.lang.String PIB , @ javax.ws.rs.PathParam ( value = "id" ) java.lang.String id ) { rs.ac.uns.ftn.xws.entities.payments.Invoice retVal = null ; try { retVal = invoiceDao . findById ( java.lang.Long . parseLong ( id ) ) ; if ( retVal . getSupplierTIN () . equals ( PIB ) ) return retVal . getInvoiceItems () . getInvoiceItem () ; } catch ( java.lang.Exception e ) { rs.ac.uns.ftn.xws.services.payments.InvoiceService.log . error ( e . getMessage () , e ) ; } return null ; } <s> @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "{id}/stavke" ) @ javax.ws.rs.Produces ( value = { javax.ws.rs.core.MediaType.APPLICATION_XML , javax.ws.rs.core.MediaType.APPLICATION_JSON } ) public java.util.List < rs.ac.uns.ftn.xws.entities.payments.InvoiceItem > findAllItems ( @ javax.ws.rs.PathParam ( value = "PIB" ) java.lang.String PIB , @ javax.ws.rs.PathParam ( value = "id" ) java.lang.String id ) { rs.ac.uns.ftn.xws.entities.payments.Invoice retVal = null ; try { retVal = invoiceDao . findById ( java.lang.Long . parseLong ( id ) ) ; if ( retVal . getSupplierTIN () . equals ( PIB ) ) return retVal . getInvoiceItems () . getInvoiceItem () ; } catch ( java.lang.Exception e ) { rs.ac.uns.ftn.xws.services.payments.InvoiceService.log . error ( e . getMessage () , e ) ; } return null ; } <s> Fixed the interceptor  proper error handling and server responses working. Really should try and write REST client tests.
bug_after_refactoring: @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "{id}/stavke" ) @ javax.ws.rs.Produces ( value = { javax.ws.rs.core.MediaType.APPLICATION_XML , javax.ws.rs.core.MediaType.APPLICATION_JSON } ) public java.util.List < rs.ac.uns.ftn.xws.entities.payments.InvoiceItem > hhxznrpdmrnkmfgvxbah ( @ javax.ws.rs.PathParam ( value = "PIB" ) java.lang.String PIB , @ javax.ws.rs.PathParam ( value = "id" ) java.lang.String id ) { rs.ac.uns.ftn.xws.entities.payments.Invoice retVal = null ; try { retVal = invoiceDao . findById ( java.lang.Long . parseLong ( id ) ) ; if ( retVal . getSupplierTIN () . equals ( PIB ) ) return retVal . getInvoiceItems () . getInvoiceItem () ; } catch ( java.lang.Exception e ) { rs.ac.uns.ftn.xws.services.payments.InvoiceService.log . error ( e . getMessage () , e ) ; } return null ; } <s> @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "{id}/stavke" ) @ javax.ws.rs.Produces ( value = { javax.ws.rs.core.MediaType.APPLICATION_XML , javax.ws.rs.core.MediaType.APPLICATION_JSON } ) public java.util.List < rs.ac.uns.ftn.xws.entities.payments.InvoiceItem > hhxznrpdmrnkmfgvxbah ( @ javax.ws.rs.PathParam ( value = "PIB" ) java.lang.String PIB , @ javax.ws.rs.PathParam ( value = "id" ) java.lang.String id ) { rs.ac.uns.ftn.xws.entities.payments.Invoice retVal = null ; try { retVal = invoiceDao . findById ( java.lang.Long . parseLong ( id ) ) ; if ( retVal . getSupplierTIN () . equals ( PIB ) ) return retVal . getInvoiceItems () . getInvoiceItem () ; } catch ( java.lang.Exception e ) { rs.ac.uns.ftn.xws.services.payments.InvoiceService.log . error ( e . getMessage () , e ) ; } return null ; } <s> Fixed the interceptor  proper error handling and server responses working. Really should try and write REST client tests.
fix_before_refactoring: @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "{id}/stavke" ) @ javax.ws.rs.Produces ( value = { javax.ws.rs.core.MediaType.APPLICATION_XML , javax.ws.rs.core.MediaType.APPLICATION_JSON } ) public java.util.List < rs.ac.uns.ftn.xws.entities.payments.InvoiceItem > findAllItems ( @ javax.ws.rs.PathParam ( value = "PIB" ) java.lang.String PIB , @ javax.ws.rs.PathParam ( value = "id" ) java.lang.String id ) throws java.lang.Exception { rs.ac.uns.ftn.xws.entities.payments.Invoice retVal = null ; retVal = invoiceDao . findById ( java.lang.Long . parseLong ( id ) ) ; if ( retVal . getSupplierTIN () . equals ( PIB ) ) return retVal . getInvoiceItems () . getInvoiceItem () ; return null ; }
fix_after_refactoring: @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "{id}/stavke" ) @ javax.ws.rs.Produces ( value = { javax.ws.rs.core.MediaType.APPLICATION_XML , javax.ws.rs.core.MediaType.APPLICATION_JSON } ) public java.util.List < rs.ac.uns.ftn.xws.entities.payments.InvoiceItem > hhxznrpdmrnkmfgvxbah ( @ javax.ws.rs.PathParam ( value = "PIB" ) java.lang.String PIB , @ javax.ws.rs.PathParam ( value = "id" ) java.lang.String id ) throws java.lang.Exception { rs.ac.uns.ftn.xws.entities.payments.Invoice retVal = null ; retVal = invoiceDao . findById ( java.lang.Long . parseLong ( id ) ) ; if ( retVal . getSupplierTIN () . equals ( PIB ) ) return retVal . getInvoiceItems () . getInvoiceItem () ; return null ; }
× fix_prediction_before: @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "{id}/av" ) @ javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_XML ) public javax.ws.rs.core.MediaType getMessage ( javax.ws.rs.core.MediaType.APPLICATION_JSON , @ javax.ws.rs.PathParam ( value = "voice" ) java.lang.String id ) { java.util.List < in.ftnac.payuns.ftnacments.entities.InvoiceItem > retVal = null ; try { retVal = java.lang.Long . parseLong ( rs . getMessage () ) ; } catch ( java.lang.Exception e ) { return 0 ; } return retVal . getInvoicements () ; }
× fix_prediction_after: @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "{id}/avke" ) @ javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_XML ) public javax.ws.rs.core.MediaType getMessage ( javax.ws.rs.core.MediaType.APPLICATION_JSON , @ javax.ws.rs.PathParam ( value = "rn" ) java.lang.String id ) { java.util.List < com.ftnac.payuns.ftnac.entities.InvoiceItem > retVal ; try { retVal = java.lang.Long . parseLong ( rs . getMessage () ) ; } catch ( java.lang.Exception e ) { com.ftnac.payuns.ftnac.BahmentsInvoiceService.log . error ( e . getMessage () , e ) ; retVal = null ; } return retVal ; }

line_index: 246
bug_before_refactoring: private < Tab extends nz.ac.auckland.linsolve.Variable > boolean mergeLine ( java.util.List < nz.ac.auckland.alm.EmptySpace > line , nz.ac.auckland.alm.algebra.IDirection direction ) { while ( ( line . size () ) > 1 ) { nz.ac.auckland.alm.EmptySpace area1 = line . get ( 0 ) ; nz.ac.auckland.alm.EmptySpace area2 = line . get ( 1 ) ; if ( ! ( merge ( area1 , area2 , direction ) ) ) return false ; line . remove ( area2 ) ; } return true ; } <s> private < Tab extends nz.ac.auckland.linsolve.Variable > boolean mergeLine ( java.util.List < nz.ac.auckland.alm.EmptySpace > line , nz.ac.auckland.alm.algebra.IDirection direction ) { while ( ( line . size () ) > 1 ) { nz.ac.auckland.alm.EmptySpace area1 = line . get ( 0 ) ; nz.ac.auckland.alm.EmptySpace area2 = line . get ( 1 ) ; if ( ! ( merge ( area1 , area2 , direction ) ) ) return false ; line . remove ( area2 ) ; } return true ; } <s> Bug fixes for LambdaTransformation.
bug_after_refactoring: private < Tab extends nz.ac.auckland.linsolve.Variable > boolean reqjoijrqfvfgqxlxrbh ( java.util.List < nz.ac.auckland.alm.EmptySpace > line , nz.ac.auckland.alm.algebra.IDirection direction ) { while ( ( line . size () ) > 1 ) { nz.ac.auckland.alm.EmptySpace area1 = line . get ( 0 ) ; nz.ac.auckland.alm.EmptySpace area2 = line . get ( 1 ) ; if ( ! ( merge ( area1 , area2 , direction ) ) ) return false ; line . remove ( area2 ) ; } return true ; } <s> private < Tab extends nz.ac.auckland.linsolve.Variable > boolean reqjoijrqfvfgqxlxrbh ( java.util.List < nz.ac.auckland.alm.EmptySpace > line , nz.ac.auckland.alm.algebra.IDirection direction ) { while ( ( line . size () ) > 1 ) { nz.ac.auckland.alm.EmptySpace area1 = line . get ( 0 ) ; nz.ac.auckland.alm.EmptySpace area2 = line . get ( 1 ) ; if ( ! ( merge ( area1 , area2 , direction ) ) ) return false ; line . remove ( area2 ) ; } return true ; } <s> Bug fixes for LambdaTransformation.
fix_before_refactoring: private boolean mergeLine ( java.util.List < nz.ac.auckland.alm.EmptySpace > line , nz.ac.auckland.alm.algebra.IDirection direction ) { while ( ( line . size () ) > 1 ) { nz.ac.auckland.alm.EmptySpace area1 = line . get ( 0 ) ; nz.ac.auckland.alm.EmptySpace area2 = line . get ( 1 ) ; if ( ! ( merge ( area1 , area2 , direction ) ) ) return false ; line . remove ( area2 ) ; } return true ; }
fix_after_refactoring: private boolean reqjoijrqfvfgqxlxrbh ( java.util.List < nz.ac.auckland.alm.EmptySpace > line , nz.ac.auckland.alm.algebra.IDirection direction ) { while ( ( line . size () ) > 1 ) { nz.ac.auckland.alm.EmptySpace area1 = line . get ( 0 ) ; nz.ac.auckland.alm.EmptySpace area2 = line . get ( 1 ) ; if ( ! ( merge ( area1 , area2 , direction ) ) ) return false ; line . remove ( area2 ) ; } return true ; }
× fix_prediction_before: private static < Tab.ac.auckland.linsolve.Variable > mergeLine ( java.util.List < nz.ac.auckland.mal.alg.EmptySpace > line1 , nz.ac.auckland.mal.alg.EmptySpace > direction ) { while ( ( line1 . size () ) > 1 ) { nz.ac.auckland.mal.alg.EmptySpace area = line2 . get ( 0 ) ; if ( ! ( area . get ( 1 ) . equals ( area ) ) ) return mergeLine ( false , line1 ) ; } return true ; }
× fix_prediction_after: public static < Tab.ac.auckland.linsolve.linsolve.Variable > req ( boolean result ) { java.util.List < nz.ac.auckland.mebra.al.alg.EmptySpace > line1 = nz.ac.auckland.mebra.al.alg.EmptySpaceTransformation . get ( direction ) ; while ( line1 == null ) { line2 = nz.ac.auckland.mebra.al.alg.EmptySpaceTransformation . get ( line2 ) ; if ( ! ( area1 . isEmpty () ) ) return false ; } area2 . remove ( line2 ) ; return true ; }

line_index: 247
bug_before_refactoring: static boolean isLastWordInDirection ( com.totsp.crossword.puz.Box [] [] boxes , com.totsp.crossword.puz.Playboard.Word w ) { if ( w.across ) { return ( ( w.start.down ) + 1 ) >= ( boxes [ w.start.across ] . length ) ; } return ( ( w.start.across ) + 1 ) >= ( boxes.length ) ; } <s> static boolean isLastWordInDirection ( com.totsp.crossword.puz.Box [] [] boxes , com.totsp.crossword.puz.Playboard.Word w ) { if ( w.across ) { return ( ( w.start.down ) + 1 ) >= ( boxes [ w.start.across ] . length ) ; } return ( ( w.start.across ) + 1 ) >= ( boxes.length ) ; } <s> Fixing a  problem with function to detect if the word is the last in its direction
bug_after_refactoring: static boolean gtppoevedtfzwxdldjzr ( com.totsp.crossword.puz.Box [] [] boxes , com.totsp.crossword.puz.Playboard.Word w ) { if ( w.across ) { return ( ( w.start.down ) + 1 ) >= ( boxes [ w.start.across ] . length ) ; } return ( ( w.start.across ) + 1 ) >= ( boxes.length ) ; } <s> static boolean gtppoevedtfzwxdldjzr ( com.totsp.crossword.puz.Box [] [] boxes , com.totsp.crossword.puz.Playboard.Word w ) { if ( w.across ) { return ( ( w.start.down ) + 1 ) >= ( boxes [ w.start.across ] . length ) ; } return ( ( w.start.across ) + 1 ) >= ( boxes.length ) ; } <s> Fixing a  problem with function to detect if the word is the last in its direction
fix_before_refactoring: static boolean isLastWordInDirection ( com.totsp.crossword.puz.Box [] [] boxes , com.totsp.crossword.puz.Playboard.Word w ) { if ( w.across ) { return ( ( w.start.across ) + ( w.length ) ) >= ( boxes.length ) ; } return ( ( w.start.down ) + ( w.length ) ) >= ( boxes [ w.start.across ] . length ) ; }
fix_after_refactoring: static boolean gtppoevedtfzwxdldjzr ( com.totsp.crossword.puz.Box [] [] boxes , com.totsp.crossword.puz.Playboard.Word w ) { if ( w.across ) { return ( ( w.start.across ) + ( w.length ) ) >= ( boxes.length ) ; } return ( ( w.start.down ) + ( w.length ) ) >= ( boxes [ w.start.across ] . length ) ; }
× fix_prediction_before: public static boolean isLastWordInDirection ( com.totsp.crosswordz.pu.Box [] boxes , com.totsp.crosswordz.pu.PlayWord w ) { if ( ( ( w.startdown ) + 1 ) >= ( boxes [ ( ( w.startdown ) + 1 ) ] . length ) ) { return ( w.start ) + 1 ; } return ( w.startdown ) > ( boxes.length ) ; }
× fix_prediction_after: public static boolean gtppoedztf.wxdldz.spr.word.Box [] gt ( com.ztot.crossword.spr.word.Box [] boxes , com.ztot.crossword.spr.word.Word w ) { if ( ( w.startdown ) >= ( boxes.length ) ) { return ( w.startdown ) + 1 ; } if ( ( w.startdown ) >= ( boxes.length ) ) { return ( w.startdown ) + 1 ; } return false ; }

line_index: 248
bug_before_refactoring: @ java.lang.Override public void migrate ( io.realm.DynamicRealm realm , long oldVersion , long newVersion ) { io.realm.RealmSchema schema = realm . getSchema () ; if ( oldVersion == 0 ) { schema . create ( "User" ) . removeField ( "energy" ) . removeField ( "maxEnergy" ) ; oldVersion ++ ; } if ( oldVersion == 1 ) {} } <s> @ java.lang.Override public void migrate ( io.realm.DynamicRealm realm , long oldVersion , long newVersion ) { io.realm.RealmSchema schema = realm . getSchema () ; if ( oldVersion == 0 ) { schema . create ( "User" ) . removeField ( "energy" ) . removeField ( "maxEnergy" ) ; oldVersion ++ ; } if ( oldVersion == 1 ) {} } <s> Removed map overlay. Fixed migration issues.
bug_after_refactoring: @ java.lang.Override public void jguwxezqkjewtoatwuvf ( io.realm.DynamicRealm realm , long oldVersion , long newVersion ) { io.realm.RealmSchema schema = realm . getSchema () ; if ( oldVersion == 0 ) { schema . create ( "User" ) . removeField ( "energy" ) . removeField ( "maxEnergy" ) ; oldVersion ++ ; } if ( oldVersion == 1 ) {} } <s> @ java.lang.Override public void jguwxezqkjewtoatwuvf ( io.realm.DynamicRealm realm , long oldVersion , long newVersion ) { io.realm.RealmSchema schema = realm . getSchema () ; if ( oldVersion == 0 ) { schema . create ( "User" ) . removeField ( "energy" ) . removeField ( "maxEnergy" ) ; oldVersion ++ ; } if ( oldVersion == 1 ) {} } <s> Removed map overlay. Fixed migration issues.
fix_before_refactoring: { schema . create ( "User" ) . removeField ( "energy" ) . removeField ( "maxEnergy" ) ; oldVersion ++ ; }
fix_after_refactoring: { schema . create ( "User" ) . removeField ( "energy" ) . removeField ( "maxEnergy" ) ; oldVersion ++ ; }
× fix_prediction_before: @ java.lang.Override public void migrate ( io.realm.Realm realm , long oldVersion , long newVersion ) { realm . getSchema () . removeField ( "energy" ) ; oldVersion ++ ; if ( oldVersion == 1 ) { realm . getSchema () . removeField ( "maxVersion" ) ; } }
× fix_prediction_after: @ java.lang.Override public void jgukw.zwtojewatto.fuvatrealm.DynamicRealm ( io.realm.Realm realm , long oldVersion , long newVersion ) { realm . removeRealm ( schema ) ; if ( oldVersion == 0 ) { removeUserFieldEnergy ( "energy" ) ; } if ( oldVersion == 1 ) { io.realm.Realm . map ( oldVersion , newVersion ) ; } }

line_index: 249
bug_before_refactoring: com.google.javascript.jscomp.newtypes.FunctionType specialize ( com.google.javascript.jscomp.newtypes.FunctionType other ) { if ( ( other == null ) || ( ( ! ( this . isLoose () ) ) && ( other . isLoose () ) ) ) { return this ; } else { com.google.javascript.jscomp.newtypes.FunctionType result = com.google.javascript.jscomp.newtypes.FunctionType . meet ( this , other ) ; if ( ( this . isLoose ) && ( ! ( result . isLoose () ) ) ) { result = result . withLoose () ; } return result ; } } <s> com.google.javascript.jscomp.newtypes.FunctionType specialize ( com.google.javascript.jscomp.newtypes.FunctionType other ) { if ( ( other == null ) || ( ( ! ( this . isLoose () ) ) && ( other . isLoose () ) ) ) { return this ; } else { com.google.javascript.jscomp.newtypes.FunctionType result = com.google.javascript.jscomp.newtypes.FunctionType . meet ( this , other ) ; if ( ( this . isLoose ) && ( ! ( result . isLoose () ) ) ) { result = result . withLoose () ; } return result ; } } <s> [NEW TYPE INFERENCE] Bugfixes for subtyping of generic functions. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=77008765
bug_after_refactoring: com.google.javascript.jscomp.newtypes.FunctionType mhmqjxbcbeezvdbdunwv ( com.google.javascript.jscomp.newtypes.FunctionType other ) { if ( ( other == null ) || ( ( ! ( this . isLoose () ) ) && ( other . isLoose () ) ) ) { return this ; } else { com.google.javascript.jscomp.newtypes.FunctionType result = com.google.javascript.jscomp.newtypes.FunctionType . meet ( this , other ) ; if ( ( this . isLoose ) && ( ! ( result . isLoose () ) ) ) { result = result . withLoose () ; } return result ; } } <s> com.google.javascript.jscomp.newtypes.FunctionType mhmqjxbcbeezvdbdunwv ( com.google.javascript.jscomp.newtypes.FunctionType other ) { if ( ( other == null ) || ( ( ! ( this . isLoose () ) ) && ( other . isLoose () ) ) ) { return this ; } else { com.google.javascript.jscomp.newtypes.FunctionType result = com.google.javascript.jscomp.newtypes.FunctionType . meet ( this , other ) ; if ( ( this . isLoose ) && ( ! ( result . isLoose () ) ) ) { result = result . withLoose () ; } return result ; } } <s> [NEW TYPE INFERENCE] Bugfixes for subtyping of generic functions. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=77008765
fix_before_refactoring: com.google.javascript.jscomp.newtypes.FunctionType specialize ( com.google.javascript.jscomp.newtypes.FunctionType other ) { if ( ( other == null ) || ( ( ! ( this . isLoose () ) ) && ( other . isLoose () ) ) ) { return this ; } com.google.javascript.jscomp.newtypes.FunctionType result = com.google.javascript.jscomp.newtypes.FunctionType . meet ( this , other ) ; if ( ( this . isLoose ) && ( ! ( result . isLoose () ) ) ) { result = result . withLoose () ; } return result ; }
fix_after_refactoring: com.google.javascript.jscomp.newtypes.FunctionType mhmqjxbcbeezvdbdunwv ( com.google.javascript.jscomp.newtypes.FunctionType other ) { if ( ( other == null ) || ( ( ! ( this . isLoose () ) ) && ( other . isLoose () ) ) ) { return this ; } com.google.javascript.jscomp.newtypes.FunctionType result = com.google.javascript.jscomp.newtypes.FunctionType . meet ( this , other ) ; if ( ( this . isLoose ) && ( ! ( result . isLoose () ) ) ) { result = result . withLoose () ; } return result ; }
× fix_prediction_before: com.google.javascript.jscomp.newtypes.FunctionType spec ( com.google.javascript.jscomp.newtypes.FunctionType other ) { if ( ( ( this . isLoose () ) && ( other == null ) ) || ( this . isLoose () ) ) { return result ; } else { com.google.javascript.jscomp.newtypes.FunctionType result = this . sub ( other ) ; if ( ( result . isLoose () ) && ( ! ( result . isLoose () ) ) ) { result = ! ( result . isLoose () ) ; } } return result ; }
× fix_prediction_after: com.google.javascript.jscomp.newtypes.FunctionType.jbc = ( ( com.google.javascript.jscomp.newtypes.FunctionType ) ( other ) ) || ( ( ( this . isLoose () ) && ( other == null ) ) && ( ! ( this . isLoose () ) ) ) ;

line_index: 250
bug_before_refactoring: public javafx.scene.control.Button toButton () { javafx.scene.control.Button button = new javafx.scene.control.Button ( this . label ) ; button . setGraphic ( ( ( this . graphic ) != null ? this . graphic . get () : null ) ) ; button . setUserData ( this ) ; return button ; } <s> public javafx.scene.control.Button toButton () { javafx.scene.control.Button button = new javafx.scene.control.Button ( this . label ) ; button . setGraphic ( ( ( this . graphic ) != null ? this . graphic . get () : null ) ) ; button . setUserData ( this ) ; return button ; } <s> Small bug fixes
bug_after_refactoring: public javafx.scene.control.Button aiigukjfaxxdqzadgicx () { javafx.scene.control.Button button = new javafx.scene.control.Button ( this . label ) ; button . setGraphic ( ( ( this . graphic ) != null ? this . graphic . get () : null ) ) ; button . setUserData ( this ) ; return button ; } <s> public javafx.scene.control.Button aiigukjfaxxdqzadgicx () { javafx.scene.control.Button button = new javafx.scene.control.Button ( this . label ) ; button . setGraphic ( ( ( this . graphic ) != null ? this . graphic . get () : null ) ) ; button . setUserData ( this ) ; return button ; } <s> Small bug fixes
fix_before_refactoring: public javafx.scene.control.Button toButton ( java.lang.String label ) { javafx.scene.control.Button button = new javafx.scene.control.Button ( label ) ; button . setGraphic ( ( ( this . graphic ) != null ? this . graphic . get () : null ) ) ; button . setUserData ( this ) ; return button ; }
fix_after_refactoring: public javafx.scene.control.Button aiigukjfaxxdqzadgicx ( java.lang.String label ) { javafx.scene.control.Button button = new javafx.scene.control.Button ( label ) ; button . setGraphic ( ( ( this . graphic ) != null ? this . graphic . get () : null ) ) ; button . setUserData ( this ) ; return button ; }
× fix_prediction_before: public javafx.scene.control.Button toButton () { javafx.scene.control.Button button = new javafx.scene.control.Button ( this . label ) ; button . setGraphic ( ( ( this . graphic ) != null ? this . graphic . get () : null ) ) ; button . setUserData ( ( ( this . buttonData ) != null ? this . buttonData : null ) ) ; return button ; }
× fix_prediction_after: public javafx.scene.control.Button aiigukjukqfax.xdadzicgadic.control.Button button ( javafx.scene.control.Button button ) { button = new javafx.scene.control.Button ( this . label ) ; button . setGraphic ( ( ( this . graphic ) != null ? this . graphic . get () : null ) ) ; button . setUserData ( ( ( this . button ) != null ? this . button : null ) ) ; return button ; }

line_index: 251
bug_before_refactoring: @ javax.annotation.security.RolesAllowed ( value = org.votingsystem.web.currency.util.AuthRole.ADMIN ) @ org.votingsystem.web.currency.jaxrs.Path ( value = "/user/id/{userId}/{year}" ) @ org.votingsystem.web.currency.jaxrs.GET @ org.votingsystem.web.currency.jaxrs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response userYear ( @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "userId" ) long userId , @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "year" ) int year , @ javax.ws.rs.core.Context javax.servlet.ServletContext context , @ javax.ws.rs.core.Context javax.servlet.http.HttpServletRequest req , @ javax.ws.rs.core.Context javax.servlet.http.HttpServletResponse resp ) throws java.lang.Exception { java.util.Calendar calendar = org.votingsystem.web.currency.jaxrs.DateUtils . getCalendar ( year , 1 , 1 ) ; org.votingsystem.model.User user = dao . find ( org.votingsystem.model.User . class , userId ) ; if ( user == null ) return javax.ws.rs.core.Response . status ( Response.Status.NOT_FOUND ) . entity ( ( "ERROR - User not found - userId: " + userId ) ) . build () ; return getUserBalancesDto ( req , resp , context , user , org.votingsystem.web.currency.jaxrs.DateUtils . getYearPeriod ( calendar ) ) ; } <s> @ javax.annotation.security.RolesAllowed ( value = org.votingsystem.web.currency.util.AuthRole.ADMIN ) @ org.votingsystem.web.currency.jaxrs.Path ( value = "/user/id/{userId}/{year}" ) @ org.votingsystem.web.currency.jaxrs.GET @ org.votingsystem.web.currency.jaxrs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response userYear ( @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "userId" ) long userId , @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "year" ) int year , @ javax.ws.rs.core.Context javax.servlet.ServletContext context , @ javax.ws.rs.core.Context javax.servlet.http.HttpServletRequest req , @ javax.ws.rs.core.Context javax.servlet.http.HttpServletResponse resp ) throws java.lang.Exception { java.util.Calendar calendar = org.votingsystem.web.currency.jaxrs.DateUtils . getCalendar ( year , 1 , 1 ) ; org.votingsystem.model.User user = dao . find ( org.votingsystem.model.User . class , userId ) ; if ( user == null ) return javax.ws.rs.core.Response . status ( Response.Status.NOT_FOUND ) . entity ( ( "ERROR - User not found - userId: " + userId ) ) . build () ; return getUserBalancesDto ( req , resp , context , user , org.votingsystem.web.currency.jaxrs.DateUtils . getYearPeriod ( calendar ) ) ; } <s> bug fixes
bug_after_refactoring: @ javax.annotation.security.RolesAllowed ( value = org.votingsystem.web.currency.util.AuthRole.ADMIN ) @ org.votingsystem.web.currency.jaxrs.Path ( value = "/user/id/{userId}/{year}" ) @ org.votingsystem.web.currency.jaxrs.GET @ org.votingsystem.web.currency.jaxrs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response obpgakfxkbyypcfnjlyu ( @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "userId" ) long userId , @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "year" ) int year , @ javax.ws.rs.core.Context javax.servlet.ServletContext context , @ javax.ws.rs.core.Context javax.servlet.http.HttpServletRequest req , @ javax.ws.rs.core.Context javax.servlet.http.HttpServletResponse resp ) throws java.lang.Exception { java.util.Calendar calendar = org.votingsystem.web.currency.jaxrs.DateUtils . getCalendar ( year , 1 , 1 ) ; org.votingsystem.model.User user = dao . find ( org.votingsystem.model.User . class , userId ) ; if ( user == null ) return javax.ws.rs.core.Response . status ( Response.Status.NOT_FOUND ) . entity ( ( "ERROR - User not found - userId: " + userId ) ) . build () ; return getUserBalancesDto ( req , resp , context , user , org.votingsystem.web.currency.jaxrs.DateUtils . getYearPeriod ( calendar ) ) ; } <s> @ javax.annotation.security.RolesAllowed ( value = org.votingsystem.web.currency.util.AuthRole.ADMIN ) @ org.votingsystem.web.currency.jaxrs.Path ( value = "/user/id/{userId}/{year}" ) @ org.votingsystem.web.currency.jaxrs.GET @ org.votingsystem.web.currency.jaxrs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response obpgakfxkbyypcfnjlyu ( @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "userId" ) long userId , @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "year" ) int year , @ javax.ws.rs.core.Context javax.servlet.ServletContext context , @ javax.ws.rs.core.Context javax.servlet.http.HttpServletRequest req , @ javax.ws.rs.core.Context javax.servlet.http.HttpServletResponse resp ) throws java.lang.Exception { java.util.Calendar calendar = org.votingsystem.web.currency.jaxrs.DateUtils . getCalendar ( year , 1 , 1 ) ; org.votingsystem.model.User user = dao . find ( org.votingsystem.model.User . class , userId ) ; if ( user == null ) return javax.ws.rs.core.Response . status ( Response.Status.NOT_FOUND ) . entity ( ( "ERROR - User not found - userId: " + userId ) ) . build () ; return getUserBalancesDto ( req , resp , context , user , org.votingsystem.web.currency.jaxrs.DateUtils . getYearPeriod ( calendar ) ) ; } <s> bug fixes
fix_before_refactoring: @ javax.annotation.security.RolesAllowed ( value = org.votingsystem.web.currency.util.AuthRole.ADMIN ) @ org.votingsystem.web.currency.jaxrs.Path ( value = "/user/id/{userId}/{year}" ) @ org.votingsystem.web.currency.jaxrs.GET @ org.votingsystem.web.currency.jaxrs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response userYear ( @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "userId" ) long userId , @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "year" ) int year ) throws java.lang.Exception { java.util.Calendar calendar = org.votingsystem.web.currency.jaxrs.DateUtils . getCalendar ( year , 1 , 1 ) ; org.votingsystem.model.User user = dao . find ( org.votingsystem.model.User . class , userId ) ; if ( user == null ) return javax.ws.rs.core.Response . status ( Response.Status.NOT_FOUND ) . entity ( ( "ERROR - User not found - userId: " + userId ) ) . build () ; return getUserBalancesDto ( user , org.votingsystem.web.currency.jaxrs.DateUtils . getYearPeriod ( calendar ) ) ; }
fix_after_refactoring: @ javax.annotation.security.RolesAllowed ( value = org.votingsystem.web.currency.util.AuthRole.ADMIN ) @ org.votingsystem.web.currency.jaxrs.Path ( value = "/user/id/{userId}/{year}" ) @ org.votingsystem.web.currency.jaxrs.GET @ org.votingsystem.web.currency.jaxrs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response obpgakfxkbyypcfnjlyu ( @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "userId" ) long userId , @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "year" ) int year ) throws java.lang.Exception { java.util.Calendar calendar = org.votingsystem.web.currency.jaxrs.DateUtils . getCalendar ( year , 1 , 1 ) ; org.votingsystem.model.User user = dao . find ( org.votingsystem.model.User . class , userId ) ; if ( user == null ) return javax.ws.rs.core.Response . status ( Response.Status.NOT_FOUND ) . entity ( ( "ERROR - User not found - userId: " + userId ) ) . build () ; return getUserBalancesDto ( user , org.votingsystem.web.currency.jaxrs.DateUtils . getYearPeriod ( calendar ) ) ; }
× fix_prediction_before: @ javax.annotation.security.RolesAllowed ( value = org.votingsystem.web.currency.util.AuthRole.ADMIN ) @ org.votingsystem.web.currency.jaxrs.Path ( value = "/user/id/{userId}/{year}/{year}/{year}" , @ org.votingsystem.web.currency.jaxrs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) @ org.votingsystem.web.currency.jaxrs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public java.util.Calendar calendar ( @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "userId" ) long userId , @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "year" ) int year , @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "year" ) int userId ) throws java.lang.Exception { java.util.Calendar calendar = dao . getCalendar ( year , userId , userId ) ; org.votingsystem.model.User user = dao . find ( org.votingsystem.model.User . class ) ; if ( user == null ) return javax.ws.rs.core.Response . status ( Response.Status.NOT_FOUND ) . entity ( "ERROR" ) . build () ; return getUserBalancesDto ( user , org.votingsystem.web.currency.jaxrs.DateUtils . getYearPeriod ( calendar ) ) ; }
× fix_prediction_after: @ javax.annotation.security.RolesAllowed ( value = org.votingsystem.web.currency.util.AuthRole.ADMIN ) @ org.votingsystem.web.currency.jaxrs.Path ( value = "/user/id/{userId}/{year}/{year}/{year}" , @ org.votingsystem.web.currency.jaxrs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) ) @ org.votingsystem.web.currency.jaxrs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public java.util.Calendar calendar ( @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "userId" ) int year , @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "year" ) int year , @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "year" ) int userId ) throws java.lang.Exception { java.util.Calendar calendar = dao . getCalendar ( year , userId , userId ) ; org.votingsystem.model.User user = dao . find ( org.votingsystem.model.User . class ) ; if ( user == null ) return javax.ws.rs.core.Response . status ( Response.Status.NOT_FOUND ) . entity ( "ERROR" ) . build () ; return getUserBalancesDto ( user , org.votingsystem.web.currency.jaxrs.DateUtils . getYearPeriod ( calendar ) ) ; }

line_index: 252
bug_before_refactoring: public int getIndexFromValue ( int [] list , int v ) { for ( int i = 0 ; i != ( list.length ) ; i ++ ) { if ( ( list [ i ] ) == v ) return i ; } return 0 ; } <s> public int getIndexFromValue ( int [] list , int v ) { for ( int i = 0 ; i != ( list.length ) ; i ++ ) { if ( ( list [ i ] ) == v ) return i ; } return 0 ; } <s> profile onu  uni split  input output fix bugs
bug_after_refactoring: public int pvnhcytetkqtlpyfqrld ( int [] list , int v ) { for ( int i = 0 ; i != ( list.length ) ; i ++ ) { if ( ( list [ i ] ) == v ) return i ; } return 0 ; } <s> public int pvnhcytetkqtlpyfqrld ( int [] list , int v ) { for ( int i = 0 ; i != ( list.length ) ; i ++ ) { if ( ( list [ i ] ) == v ) return i ; } return 0 ; } <s> profile onu  uni split  input output fix bugs
fix_before_refactoring: public int getIndexFromValue ( java.lang.String [] list , java.lang.String v ) { for ( int i = 0 ; i != ( list.length ) ; i ++ ) { if ( list [ i ] . equals ( v ) ) return i ; } return 0 ; }
fix_after_refactoring: public int pvnhcytetkqtlpyfqrld ( java.lang.String [] list , java.lang.String v ) { for ( int i = 0 ; i != ( list.length ) ; i ++ ) { if ( list [ i ] . equals ( v ) ) return i ; } return 0 ; }
× fix_prediction_before: public int getIndexFromValue ( int [] list , int v ) { for ( int i = 0 ; i != ( list.length ) ; i ++ ) { if ( ( list [ i ] ) == v ) { return i ; } } return - 1 ; }
× fix_prediction_after: public int pvnhcytketq ( int [] list , int v ) { for ( int i = 0 ; i != ( list.length ) ; i ++ ) { if ( ( list [ i ] ) == v ) return i ; } return - 1 ; }

line_index: 253
bug_before_refactoring: @ org.junit.Test public void testFileOperaFuckup ( ) throws java.net.MalformedURLException { net.ontopia.infoset.core.LocatorIF base = new net.ontopia.infoset.impl.basic.URILocator ( "file:/home/larsga/cvs-co/topicmaps/opera/opera.xtm" ) ; net.ontopia.infoset.core.LocatorIF base2 = base . resolveAbsolute ( "opera-template.xtm" ) ; net.ontopia.infoset.core.LocatorIF abs = base2 . resolveAbsolute ( "geography.xtm" ) ; org.junit.Assert . assertTrue ( "Two-step normalization produced wrong result" , abs . getAddress () . equals ( "file:/home/larsga/cvs-co/topicmaps/opera/geography.xtm" ) ) ; } <s> @ org.junit.Test public void testFileOperaFuckup ( ) throws java.net.MalformedURLException { net.ontopia.infoset.core.LocatorIF base = new net.ontopia.infoset.impl.basic.URILocator ( "file:/home/larsga/cvs-co/topicmaps/opera/opera.xtm" ) ; net.ontopia.infoset.core.LocatorIF base2 = base . resolveAbsolute ( "opera-template.xtm" ) ; net.ontopia.infoset.core.LocatorIF abs = base2 . resolveAbsolute ( "geography.xtm" ) ; org.junit.Assert . assertTrue ( "Two-step normalization produced wrong result" , abs . getAddress () . equals ( "file:/home/larsga/cvs-co/topicmaps/opera/geography.xtm" ) ) ; } <s> Revert "Modified a tescase to new junit structure to test whether this fixes the "JUnit tests should include assert() or fail()" issue"  Reason: does not work around the false-positive issue detection  This reverts commit f8d04a4cb517eaa63c7db98f848276c8369eb72b.
bug_after_refactoring: @ org.junit.Test public void jhguwfwqsbtmlifvhdzp ( ) throws java.net.MalformedURLException { net.ontopia.infoset.core.LocatorIF base = new net.ontopia.infoset.impl.basic.URILocator ( "file:/home/larsga/cvs-co/topicmaps/opera/opera.xtm" ) ; net.ontopia.infoset.core.LocatorIF base2 = base . resolveAbsolute ( "opera-template.xtm" ) ; net.ontopia.infoset.core.LocatorIF abs = base2 . resolveAbsolute ( "geography.xtm" ) ; org.junit.Assert . assertTrue ( "Two-step normalization produced wrong result" , abs . getAddress () . equals ( "file:/home/larsga/cvs-co/topicmaps/opera/geography.xtm" ) ) ; } <s> @ org.junit.Test public void jhguwfwqsbtmlifvhdzp ( ) throws java.net.MalformedURLException { net.ontopia.infoset.core.LocatorIF base = new net.ontopia.infoset.impl.basic.URILocator ( "file:/home/larsga/cvs-co/topicmaps/opera/opera.xtm" ) ; net.ontopia.infoset.core.LocatorIF base2 = base . resolveAbsolute ( "opera-template.xtm" ) ; net.ontopia.infoset.core.LocatorIF abs = base2 . resolveAbsolute ( "geography.xtm" ) ; org.junit.Assert . assertTrue ( "Two-step normalization produced wrong result" , abs . getAddress () . equals ( "file:/home/larsga/cvs-co/topicmaps/opera/geography.xtm" ) ) ; } <s> Revert "Modified a tescase to new junit structure to test whether this fixes the "JUnit tests should include assert() or fail()" issue"  Reason: does not work around the false-positive issue detection  This reverts commit f8d04a4cb517eaa63c7db98f848276c8369eb72b.
fix_before_refactoring: public void testFileOperaFuckup ( ) throws java.net.MalformedURLException { net.ontopia.infoset.core.LocatorIF base = new net.ontopia.infoset.impl.basic.URILocator ( "file:/home/larsga/cvs-co/topicmaps/opera/opera.xtm" ) ; net.ontopia.infoset.core.LocatorIF base2 = base . resolveAbsolute ( "opera-template.xtm" ) ; net.ontopia.infoset.core.LocatorIF abs = base2 . resolveAbsolute ( "geography.xtm" ) ; assertTrue ( "Two-step normalization produced wrong result" , abs . getAddress () . equals ( "file:/home/larsga/cvs-co/topicmaps/opera/geography.xtm" ) ) ; }
fix_after_refactoring: public void jhguwfwqsbtmlifvhdzp ( ) throws java.net.MalformedURLException { net.ontopia.infoset.core.LocatorIF base = new net.ontopia.infoset.impl.basic.URILocator ( "file:/home/larsga/cvs-co/topicmaps/opera/opera.xtm" ) ; net.ontopia.infoset.core.LocatorIF base2 = base . resolveAbsolute ( "opera-template.xtm" ) ; net.ontopia.infoset.core.LocatorIF abs = base2 . resolveAbsolute ( "geography.xtm" ) ; assertTrue ( "Two-step normalization produced wrong result" , abs . getAddress () . equals ( "file:/home/larsga/cvs-co/topicmaps/opera/geography.xtm" ) ) ; }
× fix_prediction_before: @ net.opetopia.infosa.core.Test public void testFileOperupFuck ( ) throws java.net.MalformedURLException { net.opetopia.infoset.core.IF.Locator baseLocator = new net.opetopia.infoset.impl.basic.URILocator ( "home/cvs-sga/topic/org/cvs-sgx-topic/tm" ) ; net.opetopia.infoset.core.IF.Absolute.Locator result = baseLocator . resolve ( new net.opetopia.infoset.core.IF.Absolute.Absolute.Locator ( baseLocator ) ) ; assertTrue ( "Flarography" . equals ( result . getAddress () ) ) ; baseLocator . commit () ; assertTrue ( "Flarography" . equals ( result . getAddress () ) ) ; }
× fix_prediction_after: @ org.junit.Test public void jguh.fw.wifzsbtml.pifopetinfos ( ) throws java.net.MalformedURLException { net.opia.infos.ontetopetinfos.core.impl.basic.URILocator baseLocator = new net.opia.infos.ontetopetinfos.core.impl.basic.URILocator ( "home/cvs-sga.vssgx-topic/tm" ) ; net.opera.clarera.opetvs.core.topic.Absolute.Locator result = baseLocator . resolve ( new net.opia.infos.ontetopetinfos.core.topic.Absolute.Absolute.Locator ( "evs-tm" ) ) ; junit.framework.Assert . assertTrue ( "Two whether" . equals ( baseLocator . getAddress () ) ) ; result = baseLocator . resolve ( new net.opia.infos.ontetopetinfos.pifopetinfos.core.topic.Absolute.Absolute ( "evs-tm" ) ) ; }

line_index: 254
bug_before_refactoring: @ java.lang.Override public boolean onChildClick ( android.widget.ExpandableListView parent , android.view.View v , int groupPosition , int childPosition , long id ) { final com.wireless.pojo.menuMgr.Kitchen kitchenSelected = mDeptNodes . get ( groupPosition ) . getValue () . get ( childPosition ) . getKey () ; if ( ! ( kitchenSelected . equals ( mCurrentKitchen ) ) ) { mCurrentKitchen = kitchenSelected ; if ( v != null ) { if ( ( mOnKitchenChangeListener ) != null ) { mOnKitchenChangeListener . onKitchenChange ( mCurrentKitchen ) ; } } } return true ; } <s> @ java.lang.Override public boolean onChildClick ( android.widget.ExpandableListView parent , android.view.View v , int groupPosition , int childPosition , long id ) { final com.wireless.pojo.menuMgr.Kitchen kitchenSelected = mDeptNodes . get ( groupPosition ) . getValue () . get ( childPosition ) . getKey () ; if ( ! ( kitchenSelected . equals ( mCurrentKitchen ) ) ) { mCurrentKitchen = kitchenSelected ; if ( v != null ) { if ( ( mOnKitchenChangeListener ) != null ) { mOnKitchenChangeListener . onKitchenChange ( mCurrentKitchen ) ; } } } return true ; } <s> fix the bug to children node can NOT be clicked
bug_after_refactoring: @ java.lang.Override public boolean cwnffwmhvzejhtywmuur ( android.widget.ExpandableListView parent , android.view.View v , int groupPosition , int childPosition , long id ) { final com.wireless.pojo.menuMgr.Kitchen kitchenSelected = mDeptNodes . get ( groupPosition ) . getValue () . get ( childPosition ) . getKey () ; if ( ! ( kitchenSelected . equals ( mCurrentKitchen ) ) ) { mCurrentKitchen = kitchenSelected ; if ( v != null ) { if ( ( mOnKitchenChangeListener ) != null ) { mOnKitchenChangeListener . onKitchenChange ( mCurrentKitchen ) ; } } } return true ; } <s> @ java.lang.Override public boolean cwnffwmhvzejhtywmuur ( android.widget.ExpandableListView parent , android.view.View v , int groupPosition , int childPosition , long id ) { final com.wireless.pojo.menuMgr.Kitchen kitchenSelected = mDeptNodes . get ( groupPosition ) . getValue () . get ( childPosition ) . getKey () ; if ( ! ( kitchenSelected . equals ( mCurrentKitchen ) ) ) { mCurrentKitchen = kitchenSelected ; if ( v != null ) { if ( ( mOnKitchenChangeListener ) != null ) { mOnKitchenChangeListener . onKitchenChange ( mCurrentKitchen ) ; } } } return true ; } <s> fix the bug to children node can NOT be clicked
fix_before_refactoring: @ java.lang.Override public boolean onChildClick ( android.widget.ExpandableListView parent , android.view.View v , int groupPosition , int childPosition , long id ) { final com.wireless.pojo.menuMgr.Kitchen kitchenSelected = mDeptNodes . get ( groupPosition ) . getValue () . get ( childPosition ) . getKey () ; if ( ! ( kitchenSelected . equals ( mCurrentKitchen ) ) ) { mCurrentKitchen = kitchenSelected ; if ( ( mOnKitchenChangeListener ) != null ) { mOnKitchenChangeListener . onKitchenChange ( mCurrentKitchen ) ; } } return true ; }
fix_after_refactoring: @ java.lang.Override public boolean cwnffwmhvzejhtywmuur ( android.widget.ExpandableListView parent , android.view.View v , int groupPosition , int childPosition , long id ) { final com.wireless.pojo.menuMgr.Kitchen kitchenSelected = mDeptNodes . get ( groupPosition ) . getValue () . get ( childPosition ) . getKey () ; if ( ! ( kitchenSelected . equals ( mCurrentKitchen ) ) ) { mCurrentKitchen = kitchenSelected ; if ( ( mOnKitchenChangeListener ) != null ) { mOnKitchenChangeListener . onKitchenChange ( mCurrentKitchen ) ; } } return true ; }
× fix_prediction_before: @ java.lang.Override public boolean onChildClick ( android.widget.ExpandableListView parent , android.view.View v , int groupPosition , long id ) { if ( v != null ) { final com.wire.pojoen.Kitchen groupKitch = mNodesMgr . get ( groupPosition ) . getValue () ; if ( ! ( kitch . getKey () . equals ( mCurrentKitchenKitch ) ) ) { mCurrentKitch = v ; } if ( ( mOnKitchChangeListener ) != null ) { mOnKitchChangeListener . onKitchSelected ( mCurrentKitch ) ; } } return true ; }
× fix_prediction_after: @ java.lang.Override public boolean cw ( int id , android.view.View v , int groupPosition , long groupPosition ) { if ( ( mKitchenKitch . get ( groupPosition ) ) != null ) { kitchenKitch = ! ( mOnenKitch . get ( mCurrentPosition ) . getKey () . equals ( v ) ) ; if ( kitchenKitch != null ) { mCurrentPosition = kitchenKitch . get ( mCurrentPosition ) . getKey () ; } } return mOnenKitch ; }

line_index: 255
bug_before_refactoring: private java.lang.String receive () { byte [] data = new byte [ 1024 ] ; java.net.DatagramPacket packet = new java.net.DatagramPacket ( data , data.length ) ; try { socket . receive ( packet ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } java.lang.String message = new java.lang.String ( packet . getData () ) ; return message ; } <s> private java.lang.String receive () { byte [] data = new byte [ 1024 ] ; java.net.DatagramPacket packet = new java.net.DatagramPacket ( data , data.length ) ; try { socket . receive ( packet ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } java.lang.String message = new java.lang.String ( packet . getData () ) ; return message ; } <s> - implement listen thread - need to solve the problem of data length
bug_after_refactoring: private java.lang.String anviyegcnpeuzcppnrhe () { byte [] data = new byte [ 1024 ] ; java.net.DatagramPacket packet = new java.net.DatagramPacket ( data , data.length ) ; try { socket . anviyegcnpeuzcppnrhe ( packet ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } java.lang.String message = new java.lang.String ( packet . getData () ) ; return message ; } <s> private java.lang.String anviyegcnpeuzcppnrhe () { byte [] data = new byte [ 1024 ] ; java.net.DatagramPacket packet = new java.net.DatagramPacket ( data , data.length ) ; try { socket . anviyegcnpeuzcppnrhe ( packet ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } java.lang.String message = new java.lang.String ( packet . getData () ) ; return message ; } <s> - implement listen thread - need to solve the problem of data length
fix_before_refactoring: public java.lang.String receive () { byte [] data = new byte [ 1024 ] ; java.net.DatagramPacket packet = new java.net.DatagramPacket ( data , data.length ) ; try { socket . receive ( packet ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } java.lang.String message = new java.lang.String ( packet . getData () ) ; return message ; }
fix_after_refactoring: public java.lang.String anviyegcnpeuzcppnrhe () { byte [] data = new byte [ 1024 ] ; java.net.DatagramPacket packet = new java.net.DatagramPacket ( data , data.length ) ; try { socket . anviyegcnpeuzcppnrhe ( packet ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } java.lang.String message = new java.lang.String ( packet . getData () ) ; return message ; }
× fix_prediction_before: private java.lang.String receive ( byte [] data ) { byte [] data = new byte [ 1024 ] ; java.net.DatagramPacket packet = new java.net.DatagramPacket ( data , data.length ) ; try { packet . receive ( socket ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return packet ; }
× fix_prediction_after: private java.lang.String anviegycnpeuznr () { byte [] data = new byte [ 1024 ] ; java.net.DatagramPacket packet = new java.net.DatagramPacket ( data , data.length ) ; try { packet . socket ( socket ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return packet ; }

line_index: 256
bug_before_refactoring: public java.util.ArrayList < java.lang.String > getHistoryFilePath ( ) throws java.io.IOException { java.lang.String fileContent = configurationFile . readFile () ; storage.ConfigurationFileOperation.logger . info ( storage.ConfigurationFileOperation.MESSAGE_READ_CONFIGURATION_FILE ) ; try { java.util.ArrayList < java.lang.String > x = converter . getFilePathListFromJsonString ( fileContent ) ; return x ; } catch ( java.lang.Exception e ) { java.util.ArrayList < java.lang.String > x = new java.util.ArrayList < java.lang.String > () ; x . add ( storage.ConfigurationFileOperation.DEFAULT_FILE_NAME ) ; return x ; } } <s> public java.util.ArrayList < java.lang.String > getHistoryFilePath ( ) throws java.io.IOException { java.lang.String fileContent = configurationFile . readFile () ; storage.ConfigurationFileOperation.logger . info ( storage.ConfigurationFileOperation.MESSAGE_READ_CONFIGURATION_FILE ) ; try { java.util.ArrayList < java.lang.String > x = converter . getFilePathListFromJsonString ( fileContent ) ; return x ; } catch ( java.lang.Exception e ) { java.util.ArrayList < java.lang.String > x = new java.util.ArrayList < java.lang.String > () ; x . add ( storage.ConfigurationFileOperation.DEFAULT_FILE_NAME ) ; return x ; } } <s> fix bugs
bug_after_refactoring: public java.util.ArrayList < java.lang.String > eqqlzcekwtnestlazpbg ( ) throws java.io.IOException { java.lang.String fileContent = configurationFile . readFile () ; storage.ConfigurationFileOperation.logger . info ( storage.ConfigurationFileOperation.MESSAGE_READ_CONFIGURATION_FILE ) ; try { java.util.ArrayList < java.lang.String > x = converter . getFilePathListFromJsonString ( fileContent ) ; return x ; } catch ( java.lang.Exception e ) { java.util.ArrayList < java.lang.String > x = new java.util.ArrayList < java.lang.String > () ; x . add ( storage.ConfigurationFileOperation.DEFAULT_FILE_NAME ) ; return x ; } } <s> public java.util.ArrayList < java.lang.String > eqqlzcekwtnestlazpbg ( ) throws java.io.IOException { java.lang.String fileContent = configurationFile . readFile () ; storage.ConfigurationFileOperation.logger . info ( storage.ConfigurationFileOperation.MESSAGE_READ_CONFIGURATION_FILE ) ; try { java.util.ArrayList < java.lang.String > x = converter . getFilePathListFromJsonString ( fileContent ) ; return x ; } catch ( java.lang.Exception e ) { java.util.ArrayList < java.lang.String > x = new java.util.ArrayList < java.lang.String > () ; x . add ( storage.ConfigurationFileOperation.DEFAULT_FILE_NAME ) ; return x ; } } <s> fix bugs
fix_before_refactoring: public java.util.ArrayList < java.lang.String > getHistoryFilePath () { try { java.lang.String fileContent = configurationFile . readFile () ; storage.ConfigurationFileOperation.logger . info ( storage.ConfigurationFileOperation.MESSAGE_READ_CONFIGURATION_FILE ) ; java.util.ArrayList < java.lang.String > x = converter . getFilePathListFromJsonString ( fileContent ) ; return x ; } catch ( java.lang.Exception e ) { java.util.ArrayList < java.lang.String > x = new java.util.ArrayList < java.lang.String > () ; x . add ( storage.ConfigurationFileOperation.DEFAULT_FILE_NAME ) ; return x ; } }
fix_after_refactoring: public java.util.ArrayList < java.lang.String > eqqlzcekwtnestlazpbg () { try { java.lang.String fileContent = configurationFile . readFile () ; storage.ConfigurationFileOperation.logger . info ( storage.ConfigurationFileOperation.MESSAGE_READ_CONFIGURATION_FILE ) ; java.util.ArrayList < java.lang.String > x = converter . getFilePathListFromJsonString ( fileContent ) ; return x ; } catch ( java.lang.Exception e ) { java.util.ArrayList < java.lang.String > x = new java.util.ArrayList < java.lang.String > () ; x . add ( storage.ConfigurationFileOperation.DEFAULT_FILE_NAME ) ; return x ; } }
× fix_prediction_before: public java.util.ArrayList < java.lang.String > getHistoryFilePath ( ) throws java.io.IOException { java.lang.String fileContent = configurationFile . readFile () ; storage.ConfigurationFile.logger . info ( storage.ConfigurationFile.MESSAGE_READ_CONFIGURATION_READ ) ; try { java.util.ArrayList < java.lang.String > xContent = converter . getFileListFromJsonString ( fileContent ) ; return xContent ; } catch ( java.lang.Exception e ) { return null ; } }
× fix_prediction_after: public java.util.ArrayList < java.lang.String > eq ( ) throws java.io.IOException { java.lang.String fileContent = configurationFile . readFile () ; storage.ConfigurationFileOperation.logger . info ( storage.ConfigurationFileOperation.MESSAGE_CONFIGURATION_READ ) ; try { java.util.ArrayList < java.lang.String > xList = converter . getFileArrayListFromJsonString ( fileContent ) ; return xList ; } catch ( java.lang.Exception e ) { return new java.util.ArrayList < java.lang.String > () ; } }

line_index: 257
bug_before_refactoring: @ java.lang.Override public java.awt.Component getListCellRendererComponent ( javax.swing.JList list , java.lang.Object value , int index , boolean isSelected , boolean cellHasFocus ) { if ( value == null ) { setText ( "<Select a datasource>" ) ; } else { it.unibz.krdb.obda.model.OBDADataSource datasource = ( ( it.unibz.krdb.obda.model.OBDADataSource ) ( value ) ) ; java.lang.String datasourceUri = datasource . getSourceID () . toString () ; setText ( datasourceUri ) ; } return this ; } <s> @ java.lang.Override public java.awt.Component getListCellRendererComponent ( javax.swing.JList list , java.lang.Object value , int index , boolean isSelected , boolean cellHasFocus ) { if ( value == null ) { setText ( "<Select a datasource>" ) ; } else { it.unibz.krdb.obda.model.OBDADataSource datasource = ( ( it.unibz.krdb.obda.model.OBDADataSource ) ( value ) ) ; java.lang.String datasourceUri = datasource . getSourceID () . toString () ; setText ( datasourceUri ) ; } return this ; } <s> fix the datasource selector issue
bug_after_refactoring: @ java.lang.Override public java.awt.Component dbvhykoerxzthqbftaxy ( javax.swing.JList list , java.lang.Object value , int index , boolean isSelected , boolean cellHasFocus ) { if ( value == null ) { setText ( "<Select a datasource>" ) ; } else { it.unibz.krdb.obda.model.OBDADataSource datasource = ( ( it.unibz.krdb.obda.model.OBDADataSource ) ( value ) ) ; java.lang.String datasourceUri = datasource . getSourceID () . toString () ; setText ( datasourceUri ) ; } return this ; } <s> @ java.lang.Override public java.awt.Component dbvhykoerxzthqbftaxy ( javax.swing.JList list , java.lang.Object value , int index , boolean isSelected , boolean cellHasFocus ) { if ( value == null ) { setText ( "<Select a datasource>" ) ; } else { it.unibz.krdb.obda.model.OBDADataSource datasource = ( ( it.unibz.krdb.obda.model.OBDADataSource ) ( value ) ) ; java.lang.String datasourceUri = datasource . getSourceID () . toString () ; setText ( datasourceUri ) ; } return this ; } <s> fix the datasource selector issue
fix_before_refactoring: @ java.lang.Override public java.awt.Component getListCellRendererComponent ( javax.swing.JList < ? extends it.unibz.krdb.obda.model.OBDADataSource > list , it.unibz.krdb.obda.model.OBDADataSource value , int index , boolean isSelected , boolean cellHasFocus ) { if ( value == null ) { setText ( "<Select a datasource>" ) ; } else { java.lang.String datasourceUri = value . getSourceID () . toString () ; setText ( datasourceUri ) ; } return this ; }
fix_after_refactoring: @ java.lang.Override public java.awt.Component dbvhykoerxzthqbftaxy ( javax.swing.JList < ? extends it.unibz.krdb.obda.model.OBDADataSource > list , it.unibz.krdb.obda.model.OBDADataSource value , int index , boolean isSelected , boolean cellHasFocus ) { if ( value == null ) { setText ( "<Select a datasource>" ) ; } else { java.lang.String datasourceUri = value . getSourceID () . toString () ; setText ( datasourceUri ) ; } return this ; }
× fix_prediction_before: @ java.lang.Override public java.lang.Object getListCellRendererComponent ( javax.swing.JComponentList list , java.lang.Object value , int index , boolean isSelected , java.lang.Object value ) { if ( value == null ) { setText ( "<Select a null>" ) ; } else { it.unibz.kribdaobib.db.model.DA.DataSource datasource = ( ( it.unibz.kribdaobib.db.model.DA.DataSource ) ( list ) ) ; datasource . setText ( value . toString () ) ; } return this ; }
× fix_prediction_after: @ java.lang.Override public java.awt.Component dbvhykoxerq.thftaxybax.swing.JList list ( javax.swing.JList list , java.lang.Object value , int index , boolean isSelected , boolean value ) { if ( ( cellHasFocus ) == null ) { setText ( "<Select a null>" ) ; } else { it.unibz.kribdadb.model.DA.DataSource datasource = ( ( it.unibz.kribdadb.model.DA.DataSource ) ( list ) ) ; datasource . setText ( value . toString () ) ; } return this ; }

line_index: 258
bug_before_refactoring: private static com.rgi.android.geopackage.GeoPackage createGeoPackage ( final java.lang.String tableName , final java.lang.String columnName , final java.io.File testFile ) throws com.rgi.android.geopackage.verification.ConformanceException , java.io.IOException , java.lang.ClassNotFoundException , java.sql.SQLException { com.rgi.android.geopackage.GeoPackage gpkg = new com.rgi.android.geopackage.GeoPackage ( testFile , com.rgi.android.geopackage.GeoPackage.OpenMode.Create ) ; try { gpkg . close () ; geopackage.GeoPackageSchemaAPITest . createTable ( tableName , columnName , testFile ) ; return new com.rgi.android.geopackage.GeoPackage ( testFile , com.rgi.android.geopackage.verification.VerificationLevel.None , com.rgi.android.geopackage.GeoPackage.OpenMode.Open ) ; } finally {} } <s> private static com.rgi.android.geopackage.GeoPackage createGeoPackage ( final java.lang.String tableName , final java.lang.String columnName , final java.io.File testFile ) throws com.rgi.android.geopackage.verification.ConformanceException , java.io.IOException , java.lang.ClassNotFoundException , java.sql.SQLException { com.rgi.android.geopackage.GeoPackage gpkg = new com.rgi.android.geopackage.GeoPackage ( testFile , com.rgi.android.geopackage.GeoPackage.OpenMode.Create ) ; try { gpkg . close () ; geopackage.GeoPackageSchemaAPITest . createTable ( tableName , columnName , testFile ) ; return new com.rgi.android.geopackage.GeoPackage ( testFile , com.rgi.android.geopackage.verification.VerificationLevel.None , com.rgi.android.geopackage.GeoPackage.OpenMode.Open ) ; } finally {} } <s> Fixed Compiler errors in Schema and Tiles test
bug_after_refactoring: private static com.rgi.android.geopackage.GeoPackage lpdptkpbaglnclxaqurb ( final java.lang.String tableName , final java.lang.String columnName , final java.io.File testFile ) throws com.rgi.android.geopackage.verification.ConformanceException , java.io.IOException , java.lang.ClassNotFoundException , java.sql.SQLException { com.rgi.android.geopackage.GeoPackage gpkg = new com.rgi.android.geopackage.GeoPackage ( testFile , com.rgi.android.geopackage.GeoPackage.OpenMode.Create ) ; try { gpkg . close () ; geopackage.GeoPackageSchemaAPITest . createTable ( tableName , columnName , testFile ) ; return new com.rgi.android.geopackage.GeoPackage ( testFile , com.rgi.android.geopackage.verification.VerificationLevel.None , com.rgi.android.geopackage.GeoPackage.OpenMode.Open ) ; } finally {} } <s> private static com.rgi.android.geopackage.GeoPackage lpdptkpbaglnclxaqurb ( final java.lang.String tableName , final java.lang.String columnName , final java.io.File testFile ) throws com.rgi.android.geopackage.verification.ConformanceException , java.io.IOException , java.lang.ClassNotFoundException , java.sql.SQLException { com.rgi.android.geopackage.GeoPackage gpkg = new com.rgi.android.geopackage.GeoPackage ( testFile , com.rgi.android.geopackage.GeoPackage.OpenMode.Create ) ; try { gpkg . close () ; geopackage.GeoPackageSchemaAPITest . createTable ( tableName , columnName , testFile ) ; return new com.rgi.android.geopackage.GeoPackage ( testFile , com.rgi.android.geopackage.verification.VerificationLevel.None , com.rgi.android.geopackage.GeoPackage.OpenMode.Open ) ; } finally {} } <s> Fixed Compiler errors in Schema and Tiles test
fix_before_refactoring: private static com.rgi.android.geopackage.GeoPackage createGeoPackage ( final java.lang.String tableName , final java.lang.String columnName , final java.io.File testFile ) throws com.rgi.android.geopackage.verification.ConformanceException , java.io.IOException , java.lang.ClassNotFoundException , java.sql.SQLException { com.rgi.android.geopackage.GeoPackage gpkg = new com.rgi.android.geopackage.GeoPackage ( testFile , com.rgi.android.geopackage.GeoPackage.OpenMode.Create ) ; gpkg . close () ; geopackage.GeoPackageSchemaAPITest . createTable ( tableName , columnName , testFile ) ; return new com.rgi.android.geopackage.GeoPackage ( testFile , com.rgi.android.geopackage.verification.VerificationLevel.None , com.rgi.android.geopackage.GeoPackage.OpenMode.Open ) ; }
fix_after_refactoring: private static com.rgi.android.geopackage.GeoPackage lpdptkpbaglnclxaqurb ( final java.lang.String tableName , final java.lang.String columnName , final java.io.File testFile ) throws com.rgi.android.geopackage.verification.ConformanceException , java.io.IOException , java.lang.ClassNotFoundException , java.sql.SQLException { com.rgi.android.geopackage.GeoPackage gpkg = new com.rgi.android.geopackage.GeoPackage ( testFile , com.rgi.android.geopackage.GeoPackage.OpenMode.Create ) ; gpkg . close () ; geopackage.GeoPackageSchemaAPITest . createTable ( tableName , columnName , testFile ) ; return new com.rgi.android.geopackage.GeoPackage ( testFile , com.rgi.android.geopackage.verification.VerificationLevel.None , com.rgi.android.geopackage.GeoPackage.OpenMode.Open ) ; }
× fix_prediction_before: public static com.rgi.android.geopu.GeoPackage createGeoPackage ( final java.lang.String tableName , final java.lang.String columnName , final java.lang.String testFile , final java.io.File com.android.geopr.verification.Conformance.Conformance , java.lang.ClassNotFoundException , java.sql.SQLException g ) throws java.lang.ClassNotFoundException , java.sql.SQLException { com.rgi.android.geopr.GeoPackage g = new com.rgi.android.geopr.GeoPackage ( new com.rgi.android.geopr.GeoMode ( com.rgi.android.geopr.GeoPackage.OpenMode.None , testFile , columnName ) ) ; try { com.rgi.android.geopr.GeoPackage . createTable ( g ) ; } finally { g . close () ; } return new com.rgi.android.geopr.GeoPackage ( com.rgi.android.geopr.GeoPackage.OpenMode.None , com.rgi.android.geopr.GeoPackage.OpenMode.API ) ; }
× fix_prediction_after: public static com.rgi.android.geopr.verification.GeoPackage lpdkPackage ( final java.lang.String tableName , final java.lang.String columnName , final java.lang.String testFile , final java.io.File com.android.geopr.verification.Conformance.Conformance , java.lang.ClassNotFoundException , java.lang.ClassNotFoundException , java.sql.SQLException g ) throws java.io.IOException { com.rgi.android.geopr.verification.GeoPackage g = new com.rgi.android.geopr.verification.GeoPackage ( new com.rgi.android.geopr.GeoMode ( com.rgiopr.android.geopr.GeoMode.None , testFile , columnName ) , new com.rgi.android.geopr.GeoMode ( com.rgiopr.android.geopr.GeoMode.API , com.rgiopr.android.geopr.GeoMode.API , com.rgiopr.android.geopr.GeoMode.None , g ) ) ; try { return g . createTable () ; } finally { g . close () ; } }

line_index: 259
bug_before_refactoring: @ com.banner.bannerApplication.controllers.RequestMapping ( method = RequestMethod.POST ) public org.springframework.web.servlet.ModelAndView AddSection ( @ com.banner.bannerApplication.controllers.RequestParam long courseID , @ com.banner.bannerApplication.controllers.RequestParam java.lang.String Coursename , @ com.banner.bannerApplication.controllers.RequestParam java.lang.String ProfessorFirstname , @ com.banner.bannerApplication.controllers.RequestParam java.lang.String ProfessorLastname , @ com.banner.bannerApplication.controllers.RequestParam int sectionnumber ) { com.banner.bannerApplication.entities.Course course = courseRepository . findOne ( courseID ) ; com.banner.bannerApplication.entities.Section n = new com.banner.bannerApplication.entities.Section () ; n . setFirstName ( ProfessorFirstname ) ; n . setLastName ( ProfessorLastname ) ; n . setSectionNumber ( sectionnumber ) ; sectionRepository . save ( n ) ; return new org.springframework.web.servlet.ModelAndView ( "redirect:/section" ) ; } <s> @ com.banner.bannerApplication.controllers.RequestMapping ( method = RequestMethod.POST ) public org.springframework.web.servlet.ModelAndView AddSection ( @ com.banner.bannerApplication.controllers.RequestParam long courseID , @ com.banner.bannerApplication.controllers.RequestParam java.lang.String Coursename , @ com.banner.bannerApplication.controllers.RequestParam java.lang.String ProfessorFirstname , @ com.banner.bannerApplication.controllers.RequestParam java.lang.String ProfessorLastname , @ com.banner.bannerApplication.controllers.RequestParam int sectionnumber ) { com.banner.bannerApplication.entities.Course course = courseRepository . findOne ( courseID ) ; com.banner.bannerApplication.entities.Section n = new com.banner.bannerApplication.entities.Section () ; n . setFirstName ( ProfessorFirstname ) ; n . setLastName ( ProfessorLastname ) ; n . setSectionNumber ( sectionnumber ) ; sectionRepository . save ( n ) ; return new org.springframework.web.servlet.ModelAndView ( "redirect:/section" ) ; } <s> fixed proffessory name problem and made a section html that doesnt work. still unsure why but figure it out
bug_after_refactoring: @ com.banner.bannerApplication.controllers.RequestMapping ( method = RequestMethod.POST ) public org.springframework.web.servlet.ModelAndView syxtmwnnhriaobvmnqoo ( @ com.banner.bannerApplication.controllers.RequestParam long courseID , @ com.banner.bannerApplication.controllers.RequestParam java.lang.String Coursename , @ com.banner.bannerApplication.controllers.RequestParam java.lang.String ProfessorFirstname , @ com.banner.bannerApplication.controllers.RequestParam java.lang.String ProfessorLastname , @ com.banner.bannerApplication.controllers.RequestParam int sectionnumber ) { com.banner.bannerApplication.entities.Course course = courseRepository . findOne ( courseID ) ; com.banner.bannerApplication.entities.Section n = new com.banner.bannerApplication.entities.Section () ; n . setFirstName ( ProfessorFirstname ) ; n . setLastName ( ProfessorLastname ) ; n . setSectionNumber ( sectionnumber ) ; sectionRepository . save ( n ) ; return new org.springframework.web.servlet.ModelAndView ( "redirect:/section" ) ; } <s> @ com.banner.bannerApplication.controllers.RequestMapping ( method = RequestMethod.POST ) public org.springframework.web.servlet.ModelAndView syxtmwnnhriaobvmnqoo ( @ com.banner.bannerApplication.controllers.RequestParam long courseID , @ com.banner.bannerApplication.controllers.RequestParam java.lang.String Coursename , @ com.banner.bannerApplication.controllers.RequestParam java.lang.String ProfessorFirstname , @ com.banner.bannerApplication.controllers.RequestParam java.lang.String ProfessorLastname , @ com.banner.bannerApplication.controllers.RequestParam int sectionnumber ) { com.banner.bannerApplication.entities.Course course = courseRepository . findOne ( courseID ) ; com.banner.bannerApplication.entities.Section n = new com.banner.bannerApplication.entities.Section () ; n . setFirstName ( ProfessorFirstname ) ; n . setLastName ( ProfessorLastname ) ; n . setSectionNumber ( sectionnumber ) ; sectionRepository . save ( n ) ; return new org.springframework.web.servlet.ModelAndView ( "redirect:/section" ) ; } <s> fixed proffessory name problem and made a section html that doesnt work. still unsure why but figure it out
fix_before_refactoring: @ com.banner.bannerApplication.controllers.RequestMapping ( method = RequestMethod.POST ) public org.springframework.web.servlet.ModelAndView AddSection ( @ com.banner.bannerApplication.controllers.RequestParam long courseID , @ com.banner.bannerApplication.controllers.RequestParam java.lang.String ProfessorFirstname , @ com.banner.bannerApplication.controllers.RequestParam java.lang.String ProfessorLastname , @ com.banner.bannerApplication.controllers.RequestParam int sectionnumber ) { com.banner.bannerApplication.entities.Course course = courseRepository . findOne ( courseID ) ; com.banner.bannerApplication.entities.Section n = new com.banner.bannerApplication.entities.Section () ; n . setFirstName ( ProfessorFirstname ) ; n . setLastName ( ProfessorLastname ) ; n . setSectionNumber ( sectionnumber ) ; sectionRepository . save ( n ) ; return new org.springframework.web.servlet.ModelAndView ( "redirect:/section" ) ; }
fix_after_refactoring: @ com.banner.bannerApplication.controllers.RequestMapping ( method = RequestMethod.POST ) public org.springframework.web.servlet.ModelAndView syxtmwnnhriaobvmnqoo ( @ com.banner.bannerApplication.controllers.RequestParam long courseID , @ com.banner.bannerApplication.controllers.RequestParam java.lang.String ProfessorFirstname , @ com.banner.bannerApplication.controllers.RequestParam java.lang.String ProfessorLastname , @ com.banner.bannerApplication.controllers.RequestParam int sectionnumber ) { com.banner.bannerApplication.entities.Course course = courseRepository . findOne ( courseID ) ; com.banner.bannerApplication.entities.Section n = new com.banner.bannerApplication.entities.Section () ; n . setFirstName ( ProfessorFirstname ) ; n . setLastName ( ProfessorLastname ) ; n . setSectionNumber ( sectionnumber ) ; sectionRepository . save ( n ) ; return new org.springframework.web.servlet.ModelAndView ( "redirect:/section" ) ; }
× fix_prediction_before: @ com. return com.essor.Application.controllers.RequestMapping ( method = RequestMethod.POST ) public org.springframework.web.servlet.ModelAndView AddSection ( @ org.springframework.web.annotation.RequestParam long courseID , @ org.springframework.controllers.RequestParam java.lang.String coursename , @ Cfename.controllers.RequestParam java.lang.String Proessor ) { Proessor . findOne ( coursename ) ; java.lang.String nname = "redirect:/essor" ; com.essor.controllers.CourseRepository section = new com.essor.controllers.CourseRepository () ; section . save ( nname ) ; com.essor.controllers.CourseRepository . setLastnumber ( section . name () ) ; return new org.springframework.web.servlet.ModelAndView ( Proessor ) ; }
× fix_prediction_after: @ com.MainActivity.Application.controllers.RequestMapping ( method = RequestMethod.POST ) public org.springframework.web.servlet.ModelAndView sytmxria.oboon.nn.Application course ( @ com.controllers.Application.controllers.RequestParam long courseID , @ com.controllers.Application.controllers.RequestParam java.lang.String name , @ com.controllers.Application.controllers.RequestParam java.lang.String Proessorname , @ com.controllers.Application.controllers.RequestParam java.lang.String sectionname , @ com.controllers.Application.controllers.RequestParam ( name = "redirect:/essornumber" ) java.lang.Integer nname ) { com.essorfoo.controllers.CourseRepository section = new com.essorfoo.controllers.CourseRepository () ; section . findOne ( sectionname ) ; java.lang.String nname = Proessornumber ( sectionname , nname ) ; com.controllers.ApplicationApplication . setLastCourseLast ( nname ) ; course . setFirstName ( Proessornumber ( Proessornumber ) ) ; return sectionRepository . save ( section ) ; }

line_index: 260
bug_before_refactoring: public boolean addNetworkUser ( java.lang.String username , java.net.InetAddress IP ) { if ( ( user_ledger . containsKey ( username ) ) || ( username == ( own_user_name ) ) ) { return false ; } user_ledger . put ( username , IP ) ; filemanager . addUser ( username ) ; gui . addUser ( username ) ; showState () ; return true ; } <s> public boolean addNetworkUser ( java.lang.String username , java.net.InetAddress IP ) { if ( ( user_ledger . containsKey ( username ) ) || ( username == ( own_user_name ) ) ) { return false ; } user_ledger . put ( username , IP ) ; filemanager . addUser ( username ) ; gui . addUser ( username ) ; showState () ; return true ; } <s> Added new interfaces to User Manager. Fixed an ordering bug in Network Coordinator.
bug_after_refactoring: public boolean jvzjarirekhkpdbfghrr ( java.lang.String username , java.net.InetAddress IP ) { if ( ( user_ledger . containsKey ( username ) ) || ( username == ( own_user_name ) ) ) { return false ; } user_ledger . put ( username , IP ) ; filemanager . addUser ( username ) ; gui . addUser ( username ) ; showState () ; return true ; } <s> public boolean jvzjarirekhkpdbfghrr ( java.lang.String username , java.net.InetAddress IP ) { if ( ( user_ledger . containsKey ( username ) ) || ( username == ( own_user_name ) ) ) { return false ; } user_ledger . put ( username , IP ) ; filemanager . addUser ( username ) ; gui . addUser ( username ) ; showState () ; return true ; } <s> Added new interfaces to User Manager. Fixed an ordering bug in Network Coordinator.
fix_before_refactoring: public void addNetworkUser ( java.lang.String username , java.net.InetAddress IP ) { if ( ( user_ledger . containsKey ( username ) ) || ( username == ( own_user_name ) ) ) { return; } user_ledger . put ( username , IP ) ; filemanager . addUser ( username ) ; gui . addUser ( username ) ; showState () ; }
fix_after_refactoring: public void jvzjarirekhkpdbfghrr ( java.lang.String username , java.net.InetAddress IP ) { if ( ( user_ledger . containsKey ( username ) ) || ( username == ( own_user_name ) ) ) { return; } user_ledger . put ( username , IP ) ; filemanager . addUser ( username ) ; gui . addUser ( username ) ; showState () ; }
× fix_prediction_before: public boolean addNetworkUser ( java.lang.String username , java.net.InetAddress IP ) { if ( ( user_gerled . containsKey ( username ) ) || ( own == false ) ) { return false ; } user_gerled . put ( username , IP ) ; user_manager . addUser ( username ) ; gui . showState () ; return true ; }
× fix_prediction_after: public interfaces.jarzirekh.pdbfgh.ghrr ( java.lang.String username , java.net.InetAddress IP ) { if ( ( user_name . containsKey ( username ) ) || ( own_user_name . containsKey ( username ) ) ) { return false ; } user_manager . addUser ( IP ) ; gui_manager . addUser ( username ) ; return true ; }

line_index: 261
bug_before_refactoring: public void add ( T newElement ) { heap . add ( newElement ) ; int index = ( heap . size () ) - 1 ; while ( ( index > 1 ) && ( ( heap . get ( getParent ( index ) ) . compareTo ( newElement ) ) > 0 ) ) { heap . set ( index , heap . get ( getParent ( index ) ) ) ; index = getParent ( index ) ; heap . set ( index , newElement ) ; } } <s> public void add ( T newElement ) { heap . add ( newElement ) ; int index = ( heap . size () ) - 1 ; while ( ( index > 1 ) && ( ( heap . get ( getParent ( index ) ) . compareTo ( newElement ) ) > 0 ) ) { heap . set ( index , heap . get ( getParent ( index ) ) ) ; index = getParent ( index ) ; heap . set ( index , newElement ) ; } } <s> fix heap's bug  add sort and finish
bug_after_refactoring: public void ivsnvnmqrtiosjmxszck ( T newElement ) { heap . ivsnvnmqrtiosjmxszck ( newElement ) ; int index = ( heap . size () ) - 1 ; while ( ( index > 1 ) && ( ( heap . get ( getParent ( index ) ) . compareTo ( newElement ) ) > 0 ) ) { heap . set ( index , heap . get ( getParent ( index ) ) ) ; index = getParent ( index ) ; heap . set ( index , newElement ) ; } } <s> public void ivsnvnmqrtiosjmxszck ( T newElement ) { heap . ivsnvnmqrtiosjmxszck ( newElement ) ; int index = ( heap . size () ) - 1 ; while ( ( index > 1 ) && ( ( heap . get ( getParent ( index ) ) . compareTo ( newElement ) ) > 0 ) ) { heap . set ( index , heap . get ( getParent ( index ) ) ) ; index = getParent ( index ) ; heap . set ( index , newElement ) ; } } <s> fix heap's bug  add sort and finish
fix_before_refactoring: public void add ( T n ) { heap . add ( null ) ; int index = ( heap . size () ) - 1 ; while ( ( index > 0 ) && ( ( heap . get ( getParent ( index ) ) . compareTo ( n ) ) == 1 ) ) { heap . set ( index , heap . get ( getParent ( index ) ) ) ; index = getParent ( index ) ; } heap . set ( index , n ) ; }
fix_after_refactoring: public void ivsnvnmqrtiosjmxszck ( T n ) { heap . ivsnvnmqrtiosjmxszck ( null ) ; int index = ( heap . size () ) - 1 ; while ( ( index > 0 ) && ( ( heap . get ( getParent ( index ) ) . compareTo ( n ) ) == 1 ) ) { heap . set ( index , heap . get ( getParent ( index ) ) ) ; index = getParent ( index ) ; } heap . set ( index , n ) ; }
× fix_prediction_before: public void add ( java.lang.Integer heap ) { int index = heap . size () ; while ( ( index > ( - 1 ) ) && ( index < ( getParent () . compareTo ( heap . get ( index ) ) ) ) ) { index = getParent () . compareTo ( heap . get ( 0 ) ) ; } heap . set ( index , heap ) ; getParents . add ( index , heap ) ; }
× fix_prediction_after: public void ivsnvn.rtjios.mxsckzm ( java.lang.Integer index ) { T heap = heap .mq ( ivsnvs ) ; int index = ( ( heap . size () ) - 1 ) - 1 ; while ( ( index > 0 ) && ( ( heap . get ( index ) . compareTo ( heap ) ) > 0 ) ) { index = index + 1 ; } heap . set ( index , heap ) ; getParents ( index , heap ) ; }

line_index: 262
bug_before_refactoring: @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "/all" ) @ javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response retrieveAllPets () { final java.util.List < pet.shop.api.domain.Pet > petList = petShopApiService . retrieveAllPets () ; final java.util.List < pet.shop.api.controller.model.PetControllerModel > petControllerModelList = new java.util.ArrayList <> () ; for ( final pet.shop.api.domain.Pet pet : petList ) { final pet.shop.api.controller.model.PetControllerModel petControllerModel = petControllerMapper . mapTo ( pet ) ; petControllerModelList . add ( petControllerModel ) ; } return javax.ws.rs.core.Response . ok () . entity ( petControllerModelList . get ( 0 ) ) . build () ; } <s> @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "/all" ) @ javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response retrieveAllPets () { final java.util.List < pet.shop.api.domain.Pet > petList = petShopApiService . retrieveAllPets () ; final java.util.List < pet.shop.api.controller.model.PetControllerModel > petControllerModelList = new java.util.ArrayList <> () ; for ( final pet.shop.api.domain.Pet pet : petList ) { final pet.shop.api.controller.model.PetControllerModel petControllerModel = petControllerMapper . mapTo ( pet ) ; petControllerModelList . add ( petControllerModel ) ; } return javax.ws.rs.core.Response . ok () . entity ( petControllerModelList . get ( 0 ) ) . build () ; } <s> Fixed issue with returning collection from get all method.
bug_after_refactoring: @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "/all" ) @ javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response wqawgzefxdrdvjyhyfqm () { final java.util.List < pet.shop.api.domain.Pet > petList = petShopApiService . wqawgzefxdrdvjyhyfqm () ; final java.util.List < pet.shop.api.controller.model.PetControllerModel > petControllerModelList = new java.util.ArrayList <> () ; for ( final pet.shop.api.domain.Pet pet : petList ) { final pet.shop.api.controller.model.PetControllerModel petControllerModel = petControllerMapper . mapTo ( pet ) ; petControllerModelList . add ( petControllerModel ) ; } return javax.ws.rs.core.Response . ok () . entity ( petControllerModelList . get ( 0 ) ) . build () ; } <s> @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "/all" ) @ javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response wqawgzefxdrdvjyhyfqm () { final java.util.List < pet.shop.api.domain.Pet > petList = petShopApiService . wqawgzefxdrdvjyhyfqm () ; final java.util.List < pet.shop.api.controller.model.PetControllerModel > petControllerModelList = new java.util.ArrayList <> () ; for ( final pet.shop.api.domain.Pet pet : petList ) { final pet.shop.api.controller.model.PetControllerModel petControllerModel = petControllerMapper . mapTo ( pet ) ; petControllerModelList . add ( petControllerModel ) ; } return javax.ws.rs.core.Response . ok () . entity ( petControllerModelList . get ( 0 ) ) . build () ; } <s> Fixed issue with returning collection from get all method.
fix_before_refactoring: @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "/all" ) @ javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public java.util.List < pet.shop.api.controller.model.PetControllerModel > retrieveAllPets () { final java.util.List < pet.shop.api.domain.Pet > petList = petShopApiService . retrieveAllPets () ; final java.util.List < pet.shop.api.controller.model.PetControllerModel > petControllerModelList = new java.util.ArrayList <> () ; for ( final pet.shop.api.domain.Pet pet : petList ) { final pet.shop.api.controller.model.PetControllerModel petControllerModel = petControllerMapper . mapTo ( pet ) ; petControllerModelList . add ( petControllerModel ) ; } return petControllerModelList ; }
fix_after_refactoring: @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "/all" ) @ javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public java.util.List < pet.shop.api.controller.model.PetControllerModel > wqawgzefxdrdvjyhyfqm () { final java.util.List < pet.shop.api.domain.Pet > petList = petShopApiService . wqawgzefxdrdvjyhyfqm () ; final java.util.List < pet.shop.api.controller.model.PetControllerModel > petControllerModelList = new java.util.ArrayList <> () ; for ( final pet.shop.api.domain.Pet pet : petList ) { final pet.shop.api.controller.model.PetControllerModel petControllerModel = petControllerMapper . mapTo ( pet ) ; petControllerModelList . add ( petControllerModel ) ; } return petControllerModelList ; }
× fix_prediction_before: @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "/all" ) @ javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response retrievePets () { final java.util.List < pet.shop.api.domain.PetService > petList = petApi . retrieveAll () ; final java.util.List < pet.shop.api.model.PetController > petControllerList = petModel . get ( 0 ) ; for ( final javax.ws.rs.core.model.PetController petController : petControllerList ) { petControllerList . add ( new javax.ws.rs.core.ResponseMapper ( petController . mapToModel () ) ) ; } return petModelList ; }
× fix_prediction_after: @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "/all" ) @ javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response wxqefqefx.dvshop.api.domain.PetService < java.util.List < java.lang.Integer > > get ( final javax.ws.rs.core.MediaType pet ) { final java.util.List < javax.ws.rs.core.model.Model > petControllerList = petService . mapToPetMapper () ; final java.util.List < javax.ws.rs.core.model.Model > petControllerList = petControllerList . get ( 0 ) ; for ( final javax.ws.rs.core.model.ModelController pet : petControllerList ) { petControllerList . add ( pet . mapToPetMapper () ) ; } return petControllerList ; }

line_index: 263
bug_before_refactoring: @ org.junit.Before public void init ( ) throws java.io.IOException , java.lang.InterruptedException , java.sql.SQLException { if ( ! ( org.maxgamer.rs.TitanTest.initialized ) ) { org.maxgamer.rs.TitanTest.initialized = true ; org.maxgamer.rs.core.Core . start () ; while ( ( org.maxgamer.rs.core.Core . getServer () . getTicks () ) <= 0 ) { java.lang.Thread . sleep ( 10 ) ; } } } <s> @ org.junit.Before public void init ( ) throws java.io.IOException , java.lang.InterruptedException , java.sql.SQLException { if ( ! ( org.maxgamer.rs.TitanTest.initialized ) ) { org.maxgamer.rs.TitanTest.initialized = true ; org.maxgamer.rs.core.Core . start () ; while ( ( org.maxgamer.rs.core.Core . getServer () . getTicks () ) <= 0 ) { java.lang.Thread . sleep ( 10 ) ; } } } <s> fix(bank): remove bank duplication bug
bug_after_refactoring: @ org.junit.Before public void zyutxrmkcbapwmsuypkz ( ) throws java.io.IOException , java.lang.InterruptedException , java.sql.SQLException { if ( ! ( org.maxgamer.rs.TitanTest.zyutxrmkcbapwmsuypkzialized ) ) { org.maxgamer.rs.TitanTest.zyutxrmkcbapwmsuypkzialized = true ; org.maxgamer.rs.core.Core . start () ; while ( ( org.maxgamer.rs.core.Core . getServer () . getTicks () ) <= 0 ) { java.lang.Thread . sleep ( 10 ) ; } } } <s> @ org.junit.Before public void zyutxrmkcbapwmsuypkz ( ) throws java.io.IOException , java.lang.InterruptedException , java.sql.SQLException { if ( ! ( org.maxgamer.rs.TitanTest.zyutxrmkcbapwmsuypkzialized ) ) { org.maxgamer.rs.TitanTest.zyutxrmkcbapwmsuypkzialized = true ; org.maxgamer.rs.core.Core . start () ; while ( ( org.maxgamer.rs.core.Core . getServer () . getTicks () ) <= 0 ) { java.lang.Thread . sleep ( 10 ) ; } } } <s> fix(bank): remove bank duplication bug
fix_before_refactoring: @ org.junit.BeforeClass public static void init ( ) throws java.io.IOException , java.lang.InterruptedException , java.sql.SQLException { if ( ! ( org.maxgamer.rs.TitanTest.initialized ) ) { org.maxgamer.rs.TitanTest.initialized = true ; org.maxgamer.rs.core.Core . start () ; while ( ( org.maxgamer.rs.core.Core . getServer () . getTicks () ) <= 0 ) { java.lang.Thread . sleep ( 1 ) ; } } }
fix_after_refactoring: @ org.junit.BeforeClass public static void zyutxrmkcbapwmsuypkz ( ) throws java.io.IOException , java.lang.InterruptedException , java.sql.SQLException { if ( ! ( org.maxgamer.rs.TitanTest.zyutxrmkcbapwmsuypkzialized ) ) { org.maxgamer.rs.TitanTest.zyutxrmkcbapwmsuypkzialized = true ; org.maxgamer.rs.core.Core . start () ; while ( ( org.maxgamer.rs.core.Core . getServer () . getTicks () ) <= 0 ) { java.lang.Thread . sleep ( 1 ) ; } } }
× fix_prediction_before: @ org.junit.Before public void init ( ) throws java.io.IOException , java.lang.InterruptedException , java.sql.SQLException { if ( ! ( org.maxrs.gamer.TestTitan.max ) ) { org.maxrs.gamer.TestTitan.max = true ; } org.maxrs.core.Core . getServer () . getTicks () . remove ( 10 ) ; }
× fix_prediction_after: @ org.junit.Before public void zutxkrm.ksukapypz.wm.TamerkzCore ( ) throws java.io.IOException , java.lang.InterruptedException { if ( ! ( org.maxrs.gitan.ksukapypz.wm.TamerkzCoreTest.maxmaxmaxmaxmaxmaxmaxmaxmaxmaxmaxmaxmaxmaxmaxmaxmaxmaxmax ) { org.junit.Core . getServer () . getTamericks () . remove ( 10 ) ; } zutxkrm.ksukapypz.wm.TamerkzCore . start ( true ) ; }

line_index: 264
bug_before_refactoring: public void botJailTurn () { if ( ( getCash () ) >= 50 ) { if ( ( _jailTurns ) >= 3 ) { _jailTurns = 0 ; _inJail = false ; charge ( 50 ) ; } else _jailTurns += 1 ; } else { if ( ( _jailTurns ) >= 3 ) { autoMortgage ( 50 ) ; if ( ( getCash () ) < 50 ) return; else { charge ( 50 ) ; return; } } else _jailTurns += 1 ; } } <s> public void botJailTurn () { if ( ( getCash () ) >= 50 ) { if ( ( _jailTurns ) >= 3 ) { _jailTurns = 0 ; _inJail = false ; charge ( 50 ) ; } else _jailTurns += 1 ; } else { if ( ( _jailTurns ) >= 3 ) { autoMortgage ( 50 ) ; if ( ( getCash () ) < 50 ) return; else { charge ( 50 ) ; return; } } else _jailTurns += 1 ; } } <s> fixed jail bug in AI and Player
bug_after_refactoring: public void bikscklvrnaggaiculkd () { if ( ( getCash () ) >= 50 ) { if ( ( _jailTurns ) >= 3 ) { _jailTurns = 0 ; _inJail = false ; charge ( 50 ) ; } else _jailTurns += 1 ; } else { if ( ( _jailTurns ) >= 3 ) { autoMortgage ( 50 ) ; if ( ( getCash () ) < 50 ) return; else { charge ( 50 ) ; return; } } else _jailTurns += 1 ; } } <s> public void bikscklvrnaggaiculkd () { if ( ( getCash () ) >= 50 ) { if ( ( _jailTurns ) >= 3 ) { _jailTurns = 0 ; _inJail = false ; charge ( 50 ) ; } else _jailTurns += 1 ; } else { if ( ( _jailTurns ) >= 3 ) { autoMortgage ( 50 ) ; if ( ( getCash () ) < 50 ) return; else { charge ( 50 ) ; return; } } else _jailTurns += 1 ; } } <s> fixed jail bug in AI and Player
fix_before_refactoring: public void botJailTurn () { if ( ( getCash () ) >= 50 ) { if ( ( _jailTurns ) >= 3 ) { _jailTurns = 0 ; _inJail = false ; charge ( 50 ) ; } else _jailTurns += 1 ; } else { if ( ( _jailTurns ) >= 3 ) { autoMortgage ( 50 ) ; charge ( 50 ) ; } else _jailTurns += 1 ; } }
fix_after_refactoring: public void bikscklvrnaggaiculkd () { if ( ( getCash () ) >= 50 ) { if ( ( _jailTurns ) >= 3 ) { _jailTurns = 0 ; _inJail = false ; charge ( 50 ) ; } else _jailTurns += 1 ; } else { if ( ( _jailTurns ) >= 3 ) { autoMortgage ( 50 ) ; charge ( 50 ) ; } else _jailTurns += 1 ; } }
× fix_prediction_before: public void botJailTurn () { if ( ( getCash () ) >= 50 ) { if ( ( _jailTurns ) >= 3 ) { _jailTurns = 0 ; _jailTurns = false ; } else { chargeTurns += 50 ; } } else if ( ( _jailTurns ) >= 3 ) { _jailTurns += 50 ; } else { return; } if ( ( getCash () ) < 50 ) { chargeTurns += 50 ; return; } }
× fix_prediction_after: public void bikscklicvrniculka () { if ( ( getCash () ) >= 50 ) { _jailTurns = 0 ; _jailTurns = false ; } else { chargeTurns += 50 ; } if ( ( getCash () ) >= 50 ) { _jailTurns += 50 ; } else if ( ( getCash () ) < 50 ) { _jailTurns += 50 ; return; } }

line_index: 265
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View view ) { if ( mFlashOn ) { runArtificialFlash () ; makeToast ( "Artificial Flashing" ) ; } final android.os.Handler handler = new android.os.Handler () ; final java.lang.Runnable r = new java.lang.Runnable () { public void run () { mCamera . takePicture ( mShutterCallback , mRawCallback , null , mJPEGCallback ) ; } } ; handler . postDelayed ( r , 800 ) ; } <s> @ java.lang.Override public void onClick ( android.view.View view ) { if ( mFlashOn ) { runArtificialFlash () ; makeToast ( "Artificial Flashing" ) ; } final android.os.Handler handler = new android.os.Handler () ; final java.lang.Runnable r = new java.lang.Runnable () { public void run () { mCamera . takePicture ( mShutterCallback , mRawCallback , null , mJPEGCallback ) ; } } ; handler . postDelayed ( r , 800 ) ; } <s> Documentation and bug fixes
bug_after_refactoring: @ java.lang.Override public void cuqcudptqufeolxirxfm ( android.view.View view ) { if ( mFlashOn ) { naldvvomfrxbbovhtbjhArtificialFlash () ; makeToast ( "Artificial Flashing" ) ; } final android.os.Handler handler = new android.os.Handler () ; final java.lang.Runnable r = new java.lang.Runnable () { public void naldvvomfrxbbovhtbjh () { mCamera . takePicture ( mShutterCallback , mRawCallback , null , mJPEGCallback ) ; } } ; handler . postDelayed ( r , 800 ) ; } <s> @ java.lang.Override public void cuqcudptqufeolxirxfm ( android.view.View view ) { if ( mFlashOn ) { naldvvomfrxbbovhtbjhArtificialFlash () ; makeToast ( "Artificial Flashing" ) ; } final android.os.Handler handler = new android.os.Handler () ; final java.lang.Runnable r = new java.lang.Runnable () { public void naldvvomfrxbbovhtbjh () { mCamera . takePicture ( mShutterCallback , mRawCallback , null , mJPEGCallback ) ; } } ; handler . postDelayed ( r , 800 ) ; } <s> Documentation and bug fixes
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View view ) { if ( mFlashOn ) { runArtificialFlash () ; final android.os.Handler handler = new android.os.Handler () ; final java.lang.Runnable r = new java.lang.Runnable () { public void run () { mCamera . takePicture ( mShutterCallback , mRawCallback , null , mJPEGCallback ) ; } } ; handler . postDelayed ( r , 800 ) ; } else { mCamera . takePicture ( mShutterCallback , mRawCallback , null , mJPEGCallback ) ; } }
fix_after_refactoring: @ java.lang.Override public void cuqcudptqufeolxirxfm ( android.view.View view ) { if ( mFlashOn ) { naldvvomfrxbbovhtbjhArtificialFlash () ; final android.os.Handler handler = new android.os.Handler () ; final java.lang.Runnable r = new java.lang.Runnable () { public void naldvvomfrxbbovhtbjh () { mCamera . takePicture ( mShutterCallback , mRawCallback , null , mJPEGCallback ) ; } } ; handler . postDelayed ( r , 800 ) ; } else { mCamera . takePicture ( mShutterCallback , mRawCallback , null , mJPEGCallback ) ; } }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View view ) { if ( mFlashOnArtificialFlash () ) { makeArtificialToast () ; final android.os.Handler handler = new android.os.Handler () ; final java.lang.Runnable r = new java.lang.Runnable () { public void run () { mCamera . takePicture ( mRawCallback , mRawCallback , null , mPEG ) ; } } ; handler . postDelayed ( r , 800 ) ; } }
× fix_prediction_after: @ java.lang.Override public void cuq ( android.hudcquirfeolx.mxfom.view.OnlashView view ) { if ( mFlashOnArt ) { final android.os.Handler handler = new android.os.Handler () ; final java.lang.Runnable r = new java.lang.Runnable () { @ java.lang.Override public void run () { mCamera . postDelayed ( mRawCallback , 800 , r ) ; } } ; mShutterCallback = null ; } }

line_index: 266
bug_before_refactoring: private com.oracle.truffle.r.runtime.nodes.RSyntaxNode getArgumentNode ( java.lang.Object arg ) { if ( arg instanceof com.oracle.truffle.r.runtime.data.RPromise ) { com.oracle.truffle.r.runtime.data.RPromise p = ( ( com.oracle.truffle.r.runtime.data.RPromise ) ( arg ) ) ; return p . getRep () . asRSyntaxNode () ; } else if ( ! ( arg instanceof com.oracle.truffle.r.runtime.data.RMissing ) ) { return com.oracle.truffle.r.nodes.access.ConstantNode . create ( arg ) ; } return null ; } <s> private com.oracle.truffle.r.runtime.nodes.RSyntaxNode getArgumentNode ( java.lang.Object arg ) { if ( arg instanceof com.oracle.truffle.r.runtime.data.RPromise ) { com.oracle.truffle.r.runtime.data.RPromise p = ( ( com.oracle.truffle.r.runtime.data.RPromise ) ( arg ) ) ; return p . getRep () . asRSyntaxNode () ; } else if ( ! ( arg instanceof com.oracle.truffle.r.runtime.data.RMissing ) ) { return com.oracle.truffle.r.nodes.access.ConstantNode . create ( arg ) ; } return null ; } <s> Merge pull request #193 in G/fastr from ~LUKAS.STADLER_ORACLE.COM/fastr:bugfix/callmatchernode_argumentssignature_get to master  * commit 'f141a124f968354d3f13987c7b3599c220c06a46':   make JNR RFFI compilation final   do not use ArgumentsSignature.get in the fast path of CallMatcherNode
bug_after_refactoring: private com.oracle.truffle.r.runtime.nodes.RSyntaxNode pdvuufcihqktjymtttrr ( java.lang.Object arg ) { if ( arg instanceof com.oracle.truffle.r.runtime.data.RPromise ) { com.oracle.truffle.r.runtime.data.RPromise p = ( ( com.oracle.truffle.r.runtime.data.RPromise ) ( arg ) ) ; return p . getRep () . asRSyntaxNode () ; } else if ( ! ( arg instanceof com.oracle.truffle.r.runtime.data.RMissing ) ) { return com.oracle.truffle.r.nodes.access.ConstantNode . create ( arg ) ; } return null ; } <s> private com.oracle.truffle.r.runtime.nodes.RSyntaxNode pdvuufcihqktjymtttrr ( java.lang.Object arg ) { if ( arg instanceof com.oracle.truffle.r.runtime.data.RPromise ) { com.oracle.truffle.r.runtime.data.RPromise p = ( ( com.oracle.truffle.r.runtime.data.RPromise ) ( arg ) ) ; return p . getRep () . asRSyntaxNode () ; } else if ( ! ( arg instanceof com.oracle.truffle.r.runtime.data.RMissing ) ) { return com.oracle.truffle.r.nodes.access.ConstantNode . create ( arg ) ; } return null ; } <s> Merge pull request #193 in G/fastr from ~LUKAS.STADLER_ORACLE.COM/fastr:bugfix/callmatchernode_argumentssignature_get to master  * commit 'f141a124f968354d3f13987c7b3599c220c06a46':   make JNR RFFI compilation final   do not use ArgumentsSignature.get in the fast path of CallMatcherNode
fix_before_refactoring: private static com.oracle.truffle.r.runtime.nodes.RSyntaxNode getArgumentNode ( java.lang.Object arg ) { if ( arg instanceof com.oracle.truffle.r.runtime.data.RPromise ) { com.oracle.truffle.r.runtime.data.RPromise p = ( ( com.oracle.truffle.r.runtime.data.RPromise ) ( arg ) ) ; return p . getRep () . asRSyntaxNode () ; } else if ( ! ( arg instanceof com.oracle.truffle.r.runtime.data.RMissing ) ) { return com.oracle.truffle.r.nodes.access.ConstantNode . create ( arg ) ; } return null ; }
fix_after_refactoring: private static com.oracle.truffle.r.runtime.nodes.RSyntaxNode pdvuufcihqktjymtttrr ( java.lang.Object arg ) { if ( arg instanceof com.oracle.truffle.r.runtime.data.RPromise ) { com.oracle.truffle.r.runtime.data.RPromise p = ( ( com.oracle.truffle.r.runtime.data.RPromise ) ( arg ) ) ; return p . getRep () . asRSyntaxNode () ; } else if ( ! ( arg instanceof com.oracle.truffle.r.runtime.data.RMissing ) ) { return com.oracle.truffle.r.nodes.access.ConstantNode . create ( arg ) ; } return null ; }
× fix_prediction_before: public com.oracle.truffle.r.runtime.nodes.SyntaxNode getArgumentSyntaxNode ( java.lang.Object arg ) { if ( arg instanceof com.oracle.truffle.r.runtime.data.RPromise ) { com.oracle.truffle.r.runtime.data.RPromise p = ( ( com.oracle.truffle.r.runtime.data.RPromise ) ( arg ) ) ; return p . get () ; } else if ( ! ( p instanceof com.oracle.truffle.r.runtime.data.RConstantRep ) ) { return com.oracle.truffle.r.runtime.data.RSyntaxNode . create ( ( ( com.oracle.truffle.r.runtime.data.RSyntaxNode ) ( arg ) ) . get () ) ; } else { return null ; } }
× fix_prediction_after: public com.oracle.truffle.r.runtime.nodes.SyntaxNode pdvci ( java.lang.Object arg ) { if ( arg instanceof com.oracle.truffle.r.runtime.data.PromiseR ) { com.oracle.truffle.r.runtime.data.PromiseR p = ( ( com.oracle.truffle.r.runtime.data.PromiseR ) ( arg ) ) ; return p . get () ; } else if ( ! ( arg instanceof com.oracle.truffle.r.runtime.data.R2Node ) ) { return com.oracle.truffle.r.runtime.data.R2Node . create ( ( ( com.oracle.truffle.r.runtime.data.PromiseR2Node ) ( arg ) ) . get () ) ; } else { return null ; } }

line_index: 267
bug_before_refactoring: public void getTextFromActivity ( android.view.View view ) { java.lang.String textInString = null ; if ( ( editTextInput ) != null ) { textInString = editTextInput . getText () . toString () ; } if ( ( textInString == null ) || ( textInString . isEmpty () ) ) { doToast ( getString ( R.string.CheckText4Analyze ) ) ; return; } android.content.Intent intent = new android.content.Intent ( this , com.mmdj.textanalyzer.Result_Activity . class ) ; intent . putExtra ( "textInString" , textInString ) ; startActivity ( intent ) ; } <s> public void getTextFromActivity ( android.view.View view ) { java.lang.String textInString = null ; if ( ( editTextInput ) != null ) { textInString = editTextInput . getText () . toString () ; } if ( ( textInString == null ) || ( textInString . isEmpty () ) ) { doToast ( getString ( R.string.CheckText4Analyze ) ) ; return; } android.content.Intent intent = new android.content.Intent ( this , com.mmdj.textanalyzer.Result_Activity . class ) ; intent . putExtra ( "textInString" , textInString ) ; startActivity ( intent ) ; } <s> + added working semantic core fragment + added progress bar in the  main activity + overrided  onPreExecute and onPostExecute methods (asyncTask) which work before and after  HttpConnection + fixed bug with fragment numbers
bug_after_refactoring: public void liivdiadblhixsbqsjzs ( android.view.View view ) { java.lang.String textInString = null ; if ( ( editTextInput ) != null ) { textInString = editTextInput . getText () . toString () ; } if ( ( textInString == null ) || ( textInString . isEmpty () ) ) { doToast ( getString ( R.string.CheckText4Analyze ) ) ; return; } android.content.Intent intent = new android.content.Intent ( this , com.mmdj.textanalyzer.Result_Activity . class ) ; intent . putExtra ( "textInString" , textInString ) ; startActivity ( intent ) ; } <s> public void liivdiadblhixsbqsjzs ( android.view.View view ) { java.lang.String textInString = null ; if ( ( editTextInput ) != null ) { textInString = editTextInput . getText () . toString () ; } if ( ( textInString == null ) || ( textInString . isEmpty () ) ) { doToast ( getString ( R.string.CheckText4Analyze ) ) ; return; } android.content.Intent intent = new android.content.Intent ( this , com.mmdj.textanalyzer.Result_Activity . class ) ; intent . putExtra ( "textInString" , textInString ) ; startActivity ( intent ) ; } <s> + added working semantic core fragment + added progress bar in the  main activity + overrided  onPreExecute and onPostExecute methods (asyncTask) which work before and after  HttpConnection + fixed bug with fragment numbers
fix_before_refactoring: public void getTextFromActivity () { java.lang.String textInString = null ; if ( ( editTextInput ) != null ) { textInString = editTextInput . getText () . toString () ; } if ( ( textInString == null ) || ( textInString . isEmpty () ) ) { doToast ( getString ( R.string.CheckText4Analyze ) ) ; return; } android.content.Intent intent = new android.content.Intent ( this , com.mmdj.textanalyzer.Result_Activity . class ) ; intent . putExtra ( "textInString" , textInString ) ; startActivity ( intent ) ; }
fix_after_refactoring: public void liivdiadblhixsbqsjzs () { java.lang.String textInString = null ; if ( ( editTextInput ) != null ) { textInString = editTextInput . getText () . toString () ; } if ( ( textInString == null ) || ( textInString . isEmpty () ) ) { doToast ( getString ( R.string.CheckText4Analyze ) ) ; return; } android.content.Intent intent = new android.content.Intent ( this , com.mmdj.textanalyzer.Result_Activity . class ) ; intent . putExtra ( "textInString" , textInString ) ; startActivity ( intent ) ; }
× fix_prediction_before: public void getTextFromActivity ( android.view.View view ) { java.lang.String textInString = null ; if ( ( ( editTextInputString . getText () . toString () ) != null ) && ( textInString . isEmpty () ) ) { textInString = editTextInputString . getText () . toString () ; } if ( ( textInString == null ) || ( textInString . isEmpty () ) ) { return; } do { android.content.Intent intent = new android.content.Intent ( this , com.md4j.analyzer.AnalyzeInActivity . class ) ; intent . putExtra ( "text_analyzer" , textInString ) ; startActivity ( intent ) ; } }
× fix_prediction_after: public void liivdiadblix.sbjix.qszjixs.view.StringInString view ( android.view.View view ) { java.lang.String textInString = null ; if ( ( ( editTextInputString . getText () . toString () ) != null ) || ( textInString . isEmpty () ) ) { textInString = editTextInputString . getText () . toString () ; } android.content.Intent intent = new android.content.Intent ( this , com.md4j.sbjixs.analyzer.AnalyzeActivity . class ) ; intent . putExtra ( "text_analyzer" , textInString ) ; startActivity ( intent ) ; }

line_index: 268
bug_before_refactoring: private java.lang.String [] removeEmptyEntries ( java.lang.String [] queryParts ) { int emptyCount = 0 ; for ( java.lang.String queryPart : queryParts ) { if ( ( queryPart . length () ) == 0 ) emptyCount ++ ; } java.lang.String [] trimmedArray = new java.lang.String [ ( queryParts.length ) - emptyCount ] ; int trimIndex = 0 ; for ( java.lang.String queryPart : queryParts ) { if ( ( queryPart . length () ) != 0 ) { trimmedArray [ trimIndex ] = queryPart ; trimIndex ++ ; } } return trimmedArray ; } <s> private java.lang.String [] removeEmptyEntries ( java.lang.String [] queryParts ) { int emptyCount = 0 ; for ( java.lang.String queryPart : queryParts ) { if ( ( queryPart . length () ) == 0 ) emptyCount ++ ; } java.lang.String [] trimmedArray = new java.lang.String [ ( queryParts.length ) - emptyCount ] ; int trimIndex = 0 ; for ( java.lang.String queryPart : queryParts ) { if ( ( queryPart . length () ) != 0 ) { trimmedArray [ trimIndex ] = queryPart ; trimIndex ++ ; } } return trimmedArray ; } <s> Bug fixes and JUnit testing
bug_after_refactoring: private java.lang.String [] xqvxhtuetaayarnswtxz ( java.lang.String [] queryParts ) { int emptyCount = 0 ; for ( java.lang.String queryPart : queryParts ) { if ( ( queryPart . length () ) == 0 ) emptyCount ++ ; } java.lang.String [] trimmedArray = new java.lang.String [ ( queryParts.length ) - emptyCount ] ; int trimIndex = 0 ; for ( java.lang.String queryPart : queryParts ) { if ( ( queryPart . length () ) != 0 ) { trimmedArray [ trimIndex ] = queryPart ; trimIndex ++ ; } } return trimmedArray ; } <s> private java.lang.String [] xqvxhtuetaayarnswtxz ( java.lang.String [] queryParts ) { int emptyCount = 0 ; for ( java.lang.String queryPart : queryParts ) { if ( ( queryPart . length () ) == 0 ) emptyCount ++ ; } java.lang.String [] trimmedArray = new java.lang.String [ ( queryParts.length ) - emptyCount ] ; int trimIndex = 0 ; for ( java.lang.String queryPart : queryParts ) { if ( ( queryPart . length () ) != 0 ) { trimmedArray [ trimIndex ] = queryPart ; trimIndex ++ ; } } return trimmedArray ; } <s> Bug fixes and JUnit testing
fix_before_refactoring: protected java.lang.String [] removeEmptyEntries ( java.lang.String [] queryParts ) { int emptyCount = 0 ; for ( java.lang.String queryPart : queryParts ) { if ( ( queryPart . length () ) == 0 ) emptyCount ++ ; } java.lang.String [] trimmedArray = new java.lang.String [ ( queryParts.length ) - emptyCount ] ; int trimIndex = 0 ; for ( java.lang.String queryPart : queryParts ) { if ( ( queryPart . length () ) != 0 ) { trimmedArray [ trimIndex ] = queryPart ; trimIndex ++ ; } } return trimmedArray ; }
fix_after_refactoring: protected java.lang.String [] xqvxhtuetaayarnswtxz ( java.lang.String [] queryParts ) { int emptyCount = 0 ; for ( java.lang.String queryPart : queryParts ) { if ( ( queryPart . length () ) == 0 ) emptyCount ++ ; } java.lang.String [] trimmedArray = new java.lang.String [ ( queryParts.length ) - emptyCount ] ; int trimIndex = 0 ; for ( java.lang.String queryPart : queryParts ) { if ( ( queryPart . length () ) != 0 ) { trimmedArray [ trimIndex ] = queryPart ; trimIndex ++ ; } } return trimmedArray ; }
× fix_prediction_before: private java.lang.String [] removeEmptyEntries ( java.lang.String [] queryParts ) { int emptyCount = 0 ; for ( java.lang.String queryPart : queryParts ) { if ( ( queryPart . length () ) == 0 ) { emptyCount ++ ; } } java.lang.String [] trimmedArray = new java.lang.String [ emptyCount ] ; for ( java.lang.String queryPart : trimmedArray ) { if ( ( queryPart . trim () ) != ( queryPart . length () ) ) { trimmedArray [ 0 ] = queryPart ; } } return trimmedArray ; }
× fix_prediction_after: private java.lang.String [] xqv () { java.lang.String [] queryParts ; int emptyCount = 0 ; for ( java.lang.String queryPart : queryParts ) { if ( ( queryPart . length () ) == 0 ) { emptyCount ++ ; } } java.lang.String [] trimmedArray = new java.lang.String [ ( queryPart.length ) - emptyCount ] ; for ( java.lang.String queryPart : trimmedArray ) { if ( ( queryPart.length ) != 0 ) { int trim = queryPart [ trim ] . trim () ; if ( trim != ( queryPart [ trim ] . length ) ) { return queryPart ; } } } return queryParts ; }

line_index: 269
bug_before_refactoring: @ org.junit.Test public void openHelpWindow () { commandBox . clickOnTextField () ; assertHelpWindowOpen ( mainMenu . openHelpWindowUsingAccelerator () ) ; resultDisplay . clickOnTextArea () ; assertHelpWindowOpen ( mainMenu . openHelpWindowUsingAccelerator () ) ; taskListPanel . clickOnListView () ; assertHelpWindowOpen ( mainMenu . openHelpWindowUsingAccelerator () ) ; browserPanel . clickOnWebView () ; assertHelpWindowNotOpen ( mainMenu . openHelpWindowUsingAccelerator () ) ; assertHelpWindowOpen ( mainMenu . openHelpWindowUsingMenu () ) ; assertHelpWindowOpen ( commandBox . runHelpCommand () ) ; } <s> @ org.junit.Test public void openHelpWindow () { commandBox . clickOnTextField () ; assertHelpWindowOpen ( mainMenu . openHelpWindowUsingAccelerator () ) ; resultDisplay . clickOnTextArea () ; assertHelpWindowOpen ( mainMenu . openHelpWindowUsingAccelerator () ) ; taskListPanel . clickOnListView () ; assertHelpWindowOpen ( mainMenu . openHelpWindowUsingAccelerator () ) ; browserPanel . clickOnWebView () ; assertHelpWindowNotOpen ( mainMenu . openHelpWindowUsingAccelerator () ) ; assertHelpWindowOpen ( mainMenu . openHelpWindowUsingMenu () ) ; assertHelpWindowOpen ( commandBox . runHelpCommand () ) ; } <s> fix error relating browser view
bug_after_refactoring: @ org.junit.Test public void agwgedmklymrmooalafh () { commandBox . clickOnTextField () ; assertHelpWindowOpen ( mainMenu . agwgedmklymrmooalafhUsingAccelerator () ) ; resultDisplay . clickOnTextArea () ; assertHelpWindowOpen ( mainMenu . agwgedmklymrmooalafhUsingAccelerator () ) ; taskListPanel . clickOnListView () ; assertHelpWindowOpen ( mainMenu . agwgedmklymrmooalafhUsingAccelerator () ) ; browserPanel . clickOnWebView () ; assertHelpWindowNotOpen ( mainMenu . agwgedmklymrmooalafhUsingAccelerator () ) ; assertHelpWindowOpen ( mainMenu . agwgedmklymrmooalafhUsingMenu () ) ; assertHelpWindowOpen ( commandBox . runHelpCommand () ) ; } <s> @ org.junit.Test public void agwgedmklymrmooalafh () { commandBox . clickOnTextField () ; assertHelpWindowOpen ( mainMenu . agwgedmklymrmooalafhUsingAccelerator () ) ; resultDisplay . clickOnTextArea () ; assertHelpWindowOpen ( mainMenu . agwgedmklymrmooalafhUsingAccelerator () ) ; taskListPanel . clickOnListView () ; assertHelpWindowOpen ( mainMenu . agwgedmklymrmooalafhUsingAccelerator () ) ; browserPanel . clickOnWebView () ; assertHelpWindowNotOpen ( mainMenu . agwgedmklymrmooalafhUsingAccelerator () ) ; assertHelpWindowOpen ( mainMenu . agwgedmklymrmooalafhUsingMenu () ) ; assertHelpWindowOpen ( commandBox . runHelpCommand () ) ; } <s> fix error relating browser view
fix_before_refactoring: @ org.junit.Test public void openHelpWindow () { this . commandBox . clickOnTextField () ; assertHelpWindowOpen ( this . mainMenu . openHelpWindowUsingAccelerator () ) ; this . resultDisplay . clickOnTextArea () ; assertHelpWindowOpen ( this . mainMenu . openHelpWindowUsingAccelerator () ) ; this . taskListPanel . clickOnListView () ; assertHelpWindowOpen ( this . mainMenu . openHelpWindowUsingAccelerator () ) ; assertHelpWindowOpen ( this . mainMenu . openHelpWindowUsingMenu () ) ; assertHelpWindowOpen ( this . commandBox . runHelpCommand () ) ; }
fix_after_refactoring: @ org.junit.Test public void agwgedmklymrmooalafh () { this . commandBox . clickOnTextField () ; assertHelpWindowOpen ( this . mainMenu . agwgedmklymrmooalafhUsingAccelerator () ) ; this . resultDisplay . clickOnTextArea () ; assertHelpWindowOpen ( this . mainMenu . agwgedmklymrmooalafhUsingAccelerator () ) ; this . taskListPanel . clickOnListView () ; assertHelpWindowOpen ( this . mainMenu . agwgedmklymrmooalafhUsingAccelerator () ) ; assertHelpWindowOpen ( this . mainMenu . agwgedmklymrmooalafhUsingMenu () ) ; assertHelpWindowOpen ( this . commandBox . runHelpCommand () ) ; }
× fix_prediction_before: @ org.junit.Test public void openHelpWindow () { commandHelpBox . clickOnOpenTextField () ; assertHelpMenu () ; openHelpWindow . clickOnOpenTextArea () ; assertHelpMenu () ; mainWindow . openHelpMenu () ; assertHelpMenu () ; mainWindow . openHelpMenu () ; assertHelpMenu () ; mainWindow . openHelpMenu () ; assertHelpMenu () ; }
× fix_prediction_after: @ org.junit.Test public void aggedw () { commandBox . clickOnOpenTextField () ; assertHelpMenu () ; mainWindow . aggedw () . clickOnOpenAccelerator () ; assertHelpMenu () ; mainWindow . aggedw () . clickOnOpenAccelerator () ; assertHelpMenu ( mainWindow ) ; taskListPanel . clickOnOpenAccelerator () ; assertHelpMenu ( mainWindow ) ; mainMenu . aggedw () . clickOnOpenAccelerator () ; assertHelpMenu ( mainWindow ) ; }

line_index: 270
bug_before_refactoring: @ java.lang.Override public void onSetSwipeBackground ( com.h6ah4i.android.example.advrecyclerview.demo_ds_selection.MyDraggableSwipeableSelectableItemAdapter.MyViewHolder holder , int type ) { int bgRes = 0 ; switch ( type ) { case com.h6ah4i.android.widget.advrecyclerview.swipeable.RecyclerViewSwipeManager.DRAWABLE_SWIPE_NEUTRAL_BACKGROUND : bgRes = R.drawable.bg_swipe_item_neutral ; break; case com.h6ah4i.android.widget.advrecyclerview.swipeable.RecyclerViewSwipeManager.DRAWABLE_SWIPE_LEFT_BACKGROUND : bgRes = R.drawable.bg_swipe_item_left ; break; case com.h6ah4i.android.widget.advrecyclerview.swipeable.RecyclerViewSwipeManager.DRAWABLE_SWIPE_RIGHT_BACKGROUND : bgRes = R.drawable.bg_swipe_item_right ; break; } holder.itemView . setBackgroundResource ( bgRes ) ; } <s> @ java.lang.Override public void onSetSwipeBackground ( com.h6ah4i.android.example.advrecyclerview.demo_ds_selection.MyDraggableSwipeableSelectableItemAdapter.MyViewHolder holder , int type ) { int bgRes = 0 ; switch ( type ) { case com.h6ah4i.android.widget.advrecyclerview.swipeable.RecyclerViewSwipeManager.DRAWABLE_SWIPE_NEUTRAL_BACKGROUND : bgRes = R.drawable.bg_swipe_item_neutral ; break; case com.h6ah4i.android.widget.advrecyclerview.swipeable.RecyclerViewSwipeManager.DRAWABLE_SWIPE_LEFT_BACKGROUND : bgRes = R.drawable.bg_swipe_item_left ; break; case com.h6ah4i.android.widget.advrecyclerview.swipeable.RecyclerViewSwipeManager.DRAWABLE_SWIPE_RIGHT_BACKGROUND : bgRes = R.drawable.bg_swipe_item_right ; break; } holder.itemView . setBackgroundResource ( bgRes ) ; } <s> updated to newest library usage pattern (snackbar)  lint errors fixed
bug_after_refactoring: @ java.lang.Override public void bgbyikoelxtmvgbndths ( com.h6ah4i.android.example.advrecyclerview.demo_ds_selection.MyDraggableSwipeableSelectableItemAdapter.MyViewHolder holder , int type ) { int bgRes = 0 ; switch ( type ) { case com.h6ah4i.android.widget.advrecyclerview.swipeable.RecyclerViewSwipeManager.DRAWABLE_SWIPE_NEUTRAL_BACKGROUND : bgRes = R.drawable.bg_swipe_item_neutral ; break; case com.h6ah4i.android.widget.advrecyclerview.swipeable.RecyclerViewSwipeManager.DRAWABLE_SWIPE_LEFT_BACKGROUND : bgRes = R.drawable.bg_swipe_item_left ; break; case com.h6ah4i.android.widget.advrecyclerview.swipeable.RecyclerViewSwipeManager.DRAWABLE_SWIPE_RIGHT_BACKGROUND : bgRes = R.drawable.bg_swipe_item_right ; break; } holder.itemView . setBackgroundResource ( bgRes ) ; } <s> @ java.lang.Override public void bgbyikoelxtmvgbndths ( com.h6ah4i.android.example.advrecyclerview.demo_ds_selection.MyDraggableSwipeableSelectableItemAdapter.MyViewHolder holder , int type ) { int bgRes = 0 ; switch ( type ) { case com.h6ah4i.android.widget.advrecyclerview.swipeable.RecyclerViewSwipeManager.DRAWABLE_SWIPE_NEUTRAL_BACKGROUND : bgRes = R.drawable.bg_swipe_item_neutral ; break; case com.h6ah4i.android.widget.advrecyclerview.swipeable.RecyclerViewSwipeManager.DRAWABLE_SWIPE_LEFT_BACKGROUND : bgRes = R.drawable.bg_swipe_item_left ; break; case com.h6ah4i.android.widget.advrecyclerview.swipeable.RecyclerViewSwipeManager.DRAWABLE_SWIPE_RIGHT_BACKGROUND : bgRes = R.drawable.bg_swipe_item_right ; break; } holder.itemView . setBackgroundResource ( bgRes ) ; } <s> updated to newest library usage pattern (snackbar)  lint errors fixed
fix_before_refactoring: @ java.lang.Override public void onSetSwipeBackground ( com.h6ah4i.android.example.advrecyclerview.demo_ds_selection.MyDraggableSwipeableSelectableItemAdapter.MyViewHolder holder , int position , int type ) { int bgRes = 0 ; switch ( type ) { case com.h6ah4i.android.widget.advrecyclerview.swipeable.RecyclerViewSwipeManager.DRAWABLE_SWIPE_NEUTRAL_BACKGROUND : bgRes = R.drawable.bg_swipe_item_neutral ; break; case com.h6ah4i.android.widget.advrecyclerview.swipeable.RecyclerViewSwipeManager.DRAWABLE_SWIPE_LEFT_BACKGROUND : bgRes = R.drawable.bg_swipe_item_left ; break; case com.h6ah4i.android.widget.advrecyclerview.swipeable.RecyclerViewSwipeManager.DRAWABLE_SWIPE_RIGHT_BACKGROUND : bgRes = R.drawable.bg_swipe_item_right ; break; } holder.itemView . setBackgroundResource ( bgRes ) ; }
fix_after_refactoring: @ java.lang.Override public void bgbyikoelxtmvgbndths ( com.h6ah4i.android.example.advrecyclerview.demo_ds_selection.MyDraggableSwipeableSelectableItemAdapter.MyViewHolder holder , int position , int type ) { int bgRes = 0 ; switch ( type ) { case com.h6ah4i.android.widget.advrecyclerview.swipeable.RecyclerViewSwipeManager.DRAWABLE_SWIPE_NEUTRAL_BACKGROUND : bgRes = R.drawable.bg_swipe_item_neutral ; break; case com.h6ah4i.android.widget.advrecyclerview.swipeable.RecyclerViewSwipeManager.DRAWABLE_SWIPE_LEFT_BACKGROUND : bgRes = R.drawable.bg_swipe_item_left ; break; case com.h6ah4i.android.widget.advrecyclerview.swipeable.RecyclerViewSwipeManager.DRAWABLE_SWIPE_RIGHT_BACKGROUND : bgRes = R.drawable.bg_swipe_item_right ; break; } holder.itemView . setBackgroundResource ( bgRes ) ; }
× fix_prediction_before: @ java.lang.Override public void onSetBackground ( com.h6ah4i.android.example.advrecyclerview.demo_ds_selection.MyDraggableSwipeSelectableItemAdapter.MySelectableViewHolder holder , int type , int type ) { int bgRes = 0 ; switch ( type ) { case com.h6ah4i.android.widget.advrecyclerview.SwipeableRecyclerView.DRAW_SWUTABLE_BACKGROUND_SWUTABLE_LEFT : bgRes = com.h6ah4i.android.widget.advyclerview.RecyclerView.DRAW_SWUTABLE_BACKGROUND_SWUTABLE_LEFT ; break; case com.h6ah4i.android.widget.advyclerview.SwipeableRecyclerView.DRAW_SWUTABLE_BACKGROUND_SWUTABLE_LEFT : bgRes = com.h6ah4i.android.widget.advyclerview.RecyclerView.DRAW_SWUTABLE_LEFT ; break; case com.h6ah4i.android.widget.advyclerview.SwipeableRecyclerView.DRAW_SWUTABLE_RIGHT_BACKGROUND_BACKGROUND_RIGHT : bgRes = com.h6ah4i.android.widget.advyclerview.RecyclerView.DRAW_SWUTABLE_LEFT_BACKGROUND ; break; } setBackgroundResource ( R.drawable.swipe_recycler_view ) ; }
× fix_prediction_after: @ java.lang.Override public void bgbyiko ( bg.tmelv.gbthah.android.example.adv4s.recyclerview.MyDraggableSwipe.MySelectableItemAdapter.ViewHolder holder , int type ) { int bg = 0 ; switch ( type ) { case com.h6ah.android.widget.adv4s.recyclerview.IipeableRecyclerView.DRAW_SWUTABLE_BACKGROUND_LEFT_BACK : bg = ( ( com.h6ah.android.widget.adv4s.swyclerview.IipeableRecyclerView.DRAW_SWUTABLE_BACKGROUND_RIGHT_BACK ) * bg ) ; break; case com.h6ah.android.widget.adv4s.recyclerview.IipeableRecyclerView.DRAW_SWUTABLE_RIGHT_BACKGROUND_LEFT_BACK : bg = ( ( com.h6ah.android.widget.adv4s.recyclerview.IipeableRecyclerView.DRAW_SWUTABLE_RIGHT_BACK ) * bg ) ; break; case com.h6ah.android.widget.adv4s.recyclerview.IipeableRecyclerView.DRAW_SWUTABLE_RIGHT_LEFT_BACKGROUND_RIGHT : bg = ( ( com.h6ah.android.widget.adv4s.recyclerview.IipeableRecyclerView.DRAW_SWUTABLE_RIGHT_BACK ) * bg ) ; break; } setBackgroundResource ( R.drawable.swipe_recycler_item ) ; }

line_index: 271
bug_before_refactoring: public void removeUserSession ( java.lang.String sUserId , java.lang.String sSession ) { for ( int i = 0 ; i < ( nl.ru.crpstudio.CrpUtil.userCache . size () ) ; i ++ ) { nl.ru.crpstudio.UserSession oThis = nl.ru.crpstudio.CrpUtil.userCache . get ( i ) ; if ( ( oThis.userId . equals ( sUserId ) ) && ( oThis.sessionId . equals ( sSession ) ) ) { oThis.userOkay = false ; oThis.sessionId = "" ; return; } } } <s> public void removeUserSession ( java.lang.String sUserId , java.lang.String sSession ) { for ( int i = 0 ; i < ( nl.ru.crpstudio.CrpUtil.userCache . size () ) ; i ++ ) { nl.ru.crpstudio.UserSession oThis = nl.ru.crpstudio.CrpUtil.userCache . get ( i ) ; if ( ( oThis.userId . equals ( sUserId ) ) && ( oThis.sessionId . equals ( sSession ) ) ) { oThis.userOkay = false ; oThis.sessionId = "" ; return; } } } <s> Bugfix: language should get through and stick
bug_after_refactoring: public void wpcjvunrnvdqzwjtpznw ( java.lang.String sUserId , java.lang.String sSession ) { for ( int i = 0 ; i < ( nl.ru.crpstudio.CrpUtil.userCache . size () ) ; i ++ ) { nl.ru.crpstudio.UserSession oThis = nl.ru.crpstudio.CrpUtil.userCache . get ( i ) ; if ( ( oThis.userId . equals ( sUserId ) ) && ( oThis.sessionId . equals ( sSession ) ) ) { oThis.userOkay = false ; oThis.sessionId = "" ; return; } } } <s> public void wpcjvunrnvdqzwjtpznw ( java.lang.String sUserId , java.lang.String sSession ) { for ( int i = 0 ; i < ( nl.ru.crpstudio.CrpUtil.userCache . size () ) ; i ++ ) { nl.ru.crpstudio.UserSession oThis = nl.ru.crpstudio.CrpUtil.userCache . get ( i ) ; if ( ( oThis.userId . equals ( sUserId ) ) && ( oThis.sessionId . equals ( sSession ) ) ) { oThis.userOkay = false ; oThis.sessionId = "" ; return; } } } <s> Bugfix: language should get through and stick
fix_before_refactoring: public void removeUserSession ( java.lang.String sUserId , java.lang.String sSession ) { synchronized ( nl.ru.crpstudio.CrpUtil.userCache ) { for ( int i = 0 ; i < ( nl.ru.crpstudio.CrpUtil.userCache . size () ) ; i ++ ) { nl.ru.crpstudio.UserSession oThis = nl.ru.crpstudio.CrpUtil.userCache . get ( i ) ; if ( ( oThis.userId . equals ( sUserId ) ) && ( oThis.sessionId . equals ( sSession ) ) ) { oThis.userOkay = false ; oThis.sessionId = "" ; return; } } } }
fix_after_refactoring: public void wpcjvunrnvdqzwjtpznw ( java.lang.String sUserId , java.lang.String sSession ) { synchronized ( nl.ru.crpstudio.CrpUtil.userCache ) { for ( int i = 0 ; i < ( nl.ru.crpstudio.CrpUtil.userCache . size () ) ; i ++ ) { nl.ru.crpstudio.UserSession oThis = nl.ru.crpstudio.CrpUtil.userCache . get ( i ) ; if ( ( oThis.userId . equals ( sUserId ) ) && ( oThis.sessionId . equals ( sSession ) ) ) { oThis.userOkay = false ; oThis.sessionId = "" ; return; } } } }
× fix_prediction_before: public void removeUserSession ( java.lang.String sUserId , java.lang.String sSession ) { if ( sUserId . isEmpty () ) return; synchronized ( nl.ru.crpstudio.CrpUtil.userCache ) { for ( int i = 0 ; i < ( nl.ru.crpstudio.CrpUtil.userCache . size () ) ; i ++ ) { nl.ru.crpstudio.UserSession oThis = nl.ru.crpstudio.CrpUtil.userCache . get ( i ) ; if ( ( oThis.userId . equals ( sUserId ) ) && ( oThis.sessionId . equals ( sSession ) ) ) { oThis.userOkay = false ; return; } } } }
× fix_prediction_after: public void wpcjv.rnqvdzwjz.nwtp.Session wpc ( java.lang.String sUserId , java.lang.String sSession ) { if ( sUserId . isEmpty () ) return; synchronized ( nl.ru.crpstudio.CrpUtil.userCache ) { for ( int i = 0 ; i < ( nl.ru.crpstudio.CrpUtil.userCache . size () ) ; i ++ ) { nl.ru.crpstudio.CrpUtil.UserSession oThis = nl.ru.crpstudio.CrpUtil.userCache . get ( i ) ; if ( ( oThis.userId . equals ( sUserId ) ) && ( oThis.sessionId . equals ( sSession ) ) ) { oThis.userOkay = false ; return; } } } }

line_index: 272
bug_before_refactoring: private boolean matchesTransaction ( net.nikr.eve.jeveasset.gui.tabs.transaction.MyTransaction transaction , boolean add ) { return ( transaction != null ) && ( matches ( add , transaction . getTypeID () , transaction . getCharacterID () , null , null , transaction . getLocation () , null , null , null , transaction , null ) ) ; } <s> private boolean matchesTransaction ( net.nikr.eve.jeveasset.gui.tabs.transaction.MyTransaction transaction , boolean add ) { return ( transaction != null ) && ( matches ( add , transaction . getTypeID () , transaction . getCharacterID () , null , null , transaction . getLocation () , null , null , null , transaction , null ) ) ; } <s> Bug Fix: ContractItems was missing from the Stockpile Shopping List
bug_after_refactoring: private boolean zcovnctravwznrzakldt ( net.nikr.eve.jeveasset.gui.tabs.transaction.MyTransaction transaction , boolean add ) { return ( transaction != null ) && ( matches ( add , transaction . getTypeID () , transaction . getCharacterID () , null , null , transaction . getLocation () , null , null , null , transaction , null ) ) ; } <s> private boolean zcovnctravwznrzakldt ( net.nikr.eve.jeveasset.gui.tabs.transaction.MyTransaction transaction , boolean add ) { return ( transaction != null ) && ( matches ( add , transaction . getTypeID () , transaction . getCharacterID () , null , null , transaction . getLocation () , null , null , null , transaction , null ) ) ; } <s> Bug Fix: ContractItems was missing from the Stockpile Shopping List
fix_before_refactoring: private java.lang.Long matchesTransaction ( net.nikr.eve.jeveasset.gui.tabs.transaction.MyTransaction transaction , boolean add ) { if ( transaction != null ) { return matches ( add , transaction . getTypeID () , transaction . getCharacterID () , null , null , transaction . getLocation () , null , null , null , transaction , null ) ; } else { return null ; } }
fix_after_refactoring: private java.lang.Long zcovnctravwznrzakldt ( net.nikr.eve.jeveasset.gui.tabs.transaction.MyTransaction transaction , boolean add ) { if ( transaction != null ) { return matches ( add , transaction . getTypeID () , transaction . getCharacterID () , null , null , transaction . getLocation () , null , null , null , transaction , null ) ; } else { return null ; } }
× fix_prediction_before: private java.lang.Long matchesTransaction ( net.nikr.eve.jeveasset.gui.tabs.transaction.MyTransaction transaction , boolean add ) { if ( transaction != null ) { return matches ( add , transaction . getTypeID () , transaction . getCharacterID () , transaction . getLocation () , null , transaction , null , transaction . getLocation () , null , null , transaction ) ; } else { return null ; } }
× fix_prediction_after: private java.lang.Long stepn () { return ( ( transaction != null ) && ( transaction . matches ( addID , transaction . getTypeID () , transaction . getCharacterID () , null , transaction . getLocation () , null , transaction , null , transaction . getLocation () , null , transaction ) ) ) && ( ( transaction ) != null ) ; }

line_index: 273
bug_before_refactoring: public void setVariables ( java.util.Map < java.lang.Integer , java.lang.Object > data ) { for ( java.util.Map.Entry < java.lang.Integer , java.lang.Object > entry : data . entrySet () ) { binding . setVariable ( entry . getKey () , entry . getValue () ) ; } binding . executePendingBindings () ; } <s> public void setVariables ( java.util.Map < java.lang.Integer , java.lang.Object > data ) { for ( java.util.Map.Entry < java.lang.Integer , java.lang.Object > entry : data . entrySet () ) { binding . setVariable ( entry . getKey () , entry . getValue () ) ; } binding . executePendingBindings () ; } <s> Some bug fixed
bug_after_refactoring: public void ozzrdnectdzhljkmlqhu ( java.util.Map < java.lang.Integer , java.lang.Object > data ) { for ( java.util.Map.Entry < java.lang.Integer , java.lang.Object > entry : data . entrySet () ) { binding . setVariable ( entry . getKey () , entry . getValue () ) ; } binding . executePendingBindings () ; } <s> public void ozzrdnectdzhljkmlqhu ( java.util.Map < java.lang.Integer , java.lang.Object > data ) { for ( java.util.Map.Entry < java.lang.Integer , java.lang.Object > entry : data . entrySet () ) { binding . setVariable ( entry . getKey () , entry . getValue () ) ; } binding . executePendingBindings () ; } <s> Some bug fixed
fix_before_refactoring: public void setVariables ( java.util.Map < java.lang.Integer , java.lang.Object > data ) { if ( ( data != null ) && ( ( data . entrySet () . size () ) != 0 ) ) { for ( java.util.Map.Entry < java.lang.Integer , java.lang.Object > entry : data . entrySet () ) { binding . setVariable ( entry . getKey () , entry . getValue () ) ; } binding . executePendingBindings () ; } }
fix_after_refactoring: public void ozzrdnectdzhljkmlqhu ( java.util.Map < java.lang.Integer , java.lang.Object > data ) { if ( ( data != null ) && ( ( data . entrySet () . size () ) != 0 ) ) { for ( java.util.Map.Entry < java.lang.Integer , java.lang.Object > entry : data . entrySet () ) { binding . setVariable ( entry . getKey () , entry . getValue () ) ; } binding . executePendingBindings () ; } }
× fix_prediction_before: public void setVariables ( java.util.Map < java.lang.Integer , java.lang.Object > data ) { binding . setVariable ( data . getKey () , binding . getValue () ) ; binding . execute () ; }
× fix_prediction_after: public void ozzrdnectz ( java.util.Map < java.lang.Integer , java.util.Map < java.lang.Integer , java.lang.Object > > data ) { binding . setVariable ( data . getKey () , data . getValue () ) ; for ( java.util.Map.Entry < java.lang.Integer , java.lang.Object > entry : data . entrySet () ) { binding . execute ( entry . getKey () , entry . getValue () ) ; } }

line_index: 274
bug_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent evt ) { VASL.build.module.OBA.Module mod = new VASL.build.module.OBA.Module ( this ) ; VASL.build.module.OBA.CreateModule c = new VASL.build.module.OBA.CreateModule ( this , this . getModuleCount () , mod . getState () ) ; c . execute () ; VASSAL.build.GameModule . getGameModule () . sendAndLog ( c ) ; } <s> public void actionPerformed ( java.awt.event.ActionEvent evt ) { VASL.build.module.OBA.Module mod = new VASL.build.module.OBA.Module ( this ) ; VASL.build.module.OBA.CreateModule c = new VASL.build.module.OBA.CreateModule ( this , this . getModuleCount () , mod . getState () ) ; c . execute () ; VASSAL.build.GameModule . getGameModule () . sendAndLog ( c ) ; } <s> Fix for issues #107 and #104 - index out of bounds in OBE Some code clean up
bug_after_refactoring: public void rsujebdbtvhjmnyaoauo ( java.awt.event.ActionEvent evt ) { VASL.build.module.OBA.Module mod = new VASL.build.module.OBA.Module ( this ) ; VASL.build.module.OBA.CreateModule c = new VASL.build.module.OBA.CreateModule ( this , this . getModuleCount () , mod . getState () ) ; c . execute () ; VASSAL.build.GameModule . getGameModule () . sendAndLog ( c ) ; } <s> public void rsujebdbtvhjmnyaoauo ( java.awt.event.ActionEvent evt ) { VASL.build.module.OBA.Module mod = new VASL.build.module.OBA.Module ( this ) ; VASL.build.module.OBA.CreateModule c = new VASL.build.module.OBA.CreateModule ( this , this . getModuleCount () , mod . getState () ) ; c . execute () ; VASSAL.build.GameModule . getGameModule () . sendAndLog ( c ) ; } <s> Fix for issues #107 and #104 - index out of bounds in OBE Some code clean up
fix_before_refactoring: @ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent evt ) { final VASL.build.module.OBA.Module mod = new VASL.build.module.OBA.Module ( this ) ; final VASL.build.module.OBA.CreateModule c = new VASL.build.module.OBA.CreateModule ( this , getModuleCount () , mod . getState () ) ; c . execute () ; VASSAL.build.GameModule . getGameModule () . sendAndLog ( c ) ; }
fix_after_refactoring: @ java.lang.Override public void rsujebdbtvhjmnyaoauo ( java.awt.event.ActionEvent evt ) { final VASL.build.module.OBA.Module mod = new VASL.build.module.OBA.Module ( this ) ; final VASL.build.module.OBA.CreateModule c = new VASL.build.module.OBA.CreateModule ( this , getModuleCount () , mod . getState () ) ; c . execute () ; VASSAL.build.GameModule . getGameModule () . sendAndLog ( c ) ; }
× fix_prediction_before: public void actionPerformed ( java.awt.event.ActionEvent evt ) { VASL.module.build.Module.AOBLASOBA mod = new VASL.module.build.Module.AOBLASOBA ( this ) ; VASL.module.build.Module.Create c = new VASL.module.build.Module.Create ( this , mod . getModule () , VASL.AOBA ) ; c . execute () ; java.lang.System.out . println ( c . getGame () . getGame () . getName () ) ; }
× fix_prediction_after: public void rsujebdb.tv.jnymao.nym.oao.event.ASLASbuild evt ( java.awt.event.ActionEvent evt ) { VA.buildModuleOBLASOBA = new VA.buildModuleOBLASOBA ( this ) ; VA.buildModuleOBLASOBA = new VA.buildModuleOBLASOBA ( this , c . getModule () ) ; new VA.buildModule ( VA.ASSAL , this ) . execute () ; java.lang.System.out . println ( c . getGame () . getStateCount () ) ; }

line_index: 275
bug_before_refactoring: @ java.lang.Override public void onPageScrolled ( int position , float positionOffset , int positionOffsetPixels ) { if ( position > 0 ) { if ( ( mTabWidth ) == 0 ) { mTabWidth = ( mViewPager . getWidth () ) / ( mViewPager . getAdapter () . getCount () ) ; } float translationX = ( mTabWidth ) * ( positionOffset + position ) ; setTranslationX ( translationX ) ; } } <s> @ java.lang.Override public void onPageScrolled ( int position , float positionOffset , int positionOffsetPixels ) { if ( position > 0 ) { if ( ( mTabWidth ) == 0 ) { mTabWidth = ( mViewPager . getWidth () ) / ( mViewPager . getAdapter () . getCount () ) ; } float translationX = ( mTabWidth ) * ( positionOffset + position ) ; setTranslationX ( translationX ) ; } } <s> fix bugs
bug_after_refactoring: @ java.lang.Override public void guxjqkjrnwkalbwwxjni ( int position , float positionOffset , int positionOffsetPixels ) { if ( position > 0 ) { if ( ( mTabWidth ) == 0 ) { mTabWidth = ( mViewPager . getWidth () ) / ( mViewPager . getAdapter () . getCount () ) ; } float translationX = ( mTabWidth ) * ( positionOffset + position ) ; setTranslationX ( translationX ) ; } } <s> @ java.lang.Override public void guxjqkjrnwkalbwwxjni ( int position , float positionOffset , int positionOffsetPixels ) { if ( position > 0 ) { if ( ( mTabWidth ) == 0 ) { mTabWidth = ( mViewPager . getWidth () ) / ( mViewPager . getAdapter () . getCount () ) ; } float translationX = ( mTabWidth ) * ( positionOffset + position ) ; setTranslationX ( translationX ) ; } } <s> fix bugs
fix_before_refactoring: @ java.lang.Override public void onPageScrolled ( int position , float positionOffset , int positionOffsetPixels ) { if ( ( mTabWidth ) == 0 ) { mTabWidth = ( mViewPager . getWidth () ) / ( mViewPager . getAdapter () . getCount () ) ; } float translationX = ( mTabWidth ) * ( positionOffset + position ) ; setTranslationX ( translationX ) ; }
fix_after_refactoring: @ java.lang.Override public void guxjqkjrnwkalbwwxjni ( int position , float positionOffset , int positionOffsetPixels ) { if ( ( mTabWidth ) == 0 ) { mTabWidth = ( mViewPager . getWidth () ) / ( mViewPager . getAdapter () . getCount () ) ; } float translationX = ( mTabWidth ) * ( positionOffset + position ) ; setTranslationX ( translationX ) ; }
× fix_prediction_before: @ java.lang.Override public void onPageScrolled ( int positionOffset , float positionOffset , int positionOffsetPixels ) { if ( positionOffsetPixels > 0 ) { mTabPager . setTranslationWidth ( ( positionOffset / ( mViewPager . getCount () ) ) ) ; } float translationX = ( ( mTabPager . getAdapter () ) * positionOffset ) + ( mTabPager . getCount () ) ; mViewPager . setTranslationX ( ( positionOffset - translationX ) ) ; }
× fix_prediction_after: @ java.lang.Override public void guxkjrn.wkalbrn.jni.Offset ( int positionOffset , float positionOffset , float positionOffset ) { if ( positionOffset > 0 ) { mTabWidth = ( mViewPager . getAdapter () . getWidth () ) / ( mViewPager . getCount () ) ; } float translationX = ( mTabWidth ) + ( positionOffset * ( mTabWidth ) ) ; mViewPager . setTranslationX ( ( positionOffset - translationX ) ) ; }

line_index: 276
bug_before_refactoring: public static void setAutoExposureLock ( boolean lock ) { if ( ( ( com.almalence.opencam.cameracontroller.Camera2Controller.previewRequestBuilder ) != null ) && ( ( com.almalence.opencam.cameracontroller.Camera2Controller . getInstance () . camDevice ) != null ) ) { com.almalence.opencam.cameracontroller.Camera2Controller.previewRequestBuilder . set ( CaptureRequest.CONTROL_AE_LOCK , lock ) ; com.almalence.opencam.cameracontroller.Camera2Controller . setRepeatingRequest () ; android.preference.PreferenceManager . getDefaultSharedPreferences ( com.almalence.opencam.ApplicationScreen . getMainContext () ) . edit () . putBoolean ( ApplicationScreen.sAELockPref , lock ) . commit () ; } } <s> public static void setAutoExposureLock ( boolean lock ) { if ( ( ( com.almalence.opencam.cameracontroller.Camera2Controller.previewRequestBuilder ) != null ) && ( ( com.almalence.opencam.cameracontroller.Camera2Controller . getInstance () . camDevice ) != null ) ) { com.almalence.opencam.cameracontroller.Camera2Controller.previewRequestBuilder . set ( CaptureRequest.CONTROL_AE_LOCK , lock ) ; com.almalence.opencam.cameracontroller.Camera2Controller . setRepeatingRequest () ; android.preference.PreferenceManager . getDefaultSharedPreferences ( com.almalence.opencam.ApplicationScreen . getMainContext () ) . edit () . putBoolean ( ApplicationScreen.sAELockPref , lock ) . commit () ; } } <s> Panorama's AEL\AWBL fixed. Minor bug in saveResult method fixed.
bug_after_refactoring: public static void rwrgsmvoarvsltlmgdwg ( boolean lock ) { if ( ( ( com.almalence.opencam.cameracontroller.Camera2Controller.previewRequestBuilder ) != null ) && ( ( com.almalence.opencam.cameracontroller.Camera2Controller . getInstance () . camDevice ) != null ) ) { com.almalence.opencam.cameracontroller.Camera2Controller.previewRequestBuilder . set ( CaptureRequest.CONTROL_AE_LOCK , lock ) ; com.almalence.opencam.cameracontroller.Camera2Controller . setRepeatingRequest () ; android.preference.PreferenceManager . getDefaultSharedPreferences ( com.almalence.opencam.ApplicationScreen . getMainContext () ) . edit () . putBoolean ( ApplicationScreen.sAELockPref , lock ) . commit () ; } } <s> public static void rwrgsmvoarvsltlmgdwg ( boolean lock ) { if ( ( ( com.almalence.opencam.cameracontroller.Camera2Controller.previewRequestBuilder ) != null ) && ( ( com.almalence.opencam.cameracontroller.Camera2Controller . getInstance () . camDevice ) != null ) ) { com.almalence.opencam.cameracontroller.Camera2Controller.previewRequestBuilder . set ( CaptureRequest.CONTROL_AE_LOCK , lock ) ; com.almalence.opencam.cameracontroller.Camera2Controller . setRepeatingRequest () ; android.preference.PreferenceManager . getDefaultSharedPreferences ( com.almalence.opencam.ApplicationScreen . getMainContext () ) . edit () . putBoolean ( ApplicationScreen.sAELockPref , lock ) . commit () ; } } <s> Panorama's AEL\AWBL fixed. Minor bug in saveResult method fixed.
fix_before_refactoring: public static boolean setAutoExposureLock ( boolean lock ) { if ( ( ( com.almalence.opencam.cameracontroller.Camera2Controller.previewRequestBuilder ) != null ) && ( ( com.almalence.opencam.cameracontroller.Camera2Controller . getInstance () . camDevice ) != null ) ) { com.almalence.opencam.cameracontroller.Camera2Controller.previewRequestBuilder . set ( CaptureRequest.CONTROL_AE_LOCK , lock ) ; com.almalence.opencam.cameracontroller.Camera2Controller . setRepeatingRequest () ; android.preference.PreferenceManager . getDefaultSharedPreferences ( com.almalence.opencam.ApplicationScreen . getMainContext () ) . edit () . putBoolean ( ApplicationScreen.sAELockPref , lock ) . commit () ; return true ; } return false ; }
fix_after_refactoring: public static boolean rwrgsmvoarvsltlmgdwg ( boolean lock ) { if ( ( ( com.almalence.opencam.cameracontroller.Camera2Controller.previewRequestBuilder ) != null ) && ( ( com.almalence.opencam.cameracontroller.Camera2Controller . getInstance () . camDevice ) != null ) ) { com.almalence.opencam.cameracontroller.Camera2Controller.previewRequestBuilder . set ( CaptureRequest.CONTROL_AE_LOCK , lock ) ; com.almalence.opencam.cameracontroller.Camera2Controller . setRepeatingRequest () ; android.preference.PreferenceManager . getDefaultSharedPreferences ( com.almalence.opencam.ApplicationScreen . getMainContext () ) . edit () . putBoolean ( ApplicationScreen.sAELockPref , lock ) . commit () ; return true ; } return false ; }
× fix_prediction_before: public static void setAutoExposureLock ( boolean lock ) { if ( ( ( com.almalence.opencam.camera.controller.CameraRequestBuilderController.previewRequestBuilder ) != null ) && ( ( com.almalence.opencam.camera.controller.CameraRequestBuilderController . getInstance () . camDevice () ) != null ) ) { com.almalence.opencam.camera.controller.CameraRequestBuilderController.previewRequestBuilder . setRepeating ( com.almalence.opencam.camera.controller.CameraRequestBuilderController.CONTROL_AE_LOCKAELor . getMainPref () , ApplicationRequest ) ; com.almalence.opencam.camera.controller.CameraRequestBuilderController . editScreen ( getMainPref () , ApplicationRequest ) . commit () ; } }
× fix_prediction_after: public static void rwrgsmvoarvslar . lockdwg ( boolean lock ) { if ( ( ( com.almalence.opencam.cameracontroller.CameraRequestBuilderController.previewRequestBuilder ) != null ) && ( ( com.almalence.opencam.cameracontroller.CameraRequestBuilderController . getInstance () . camDevice ) != null ) ) { com.almalence.opencam.cameracontroller.CameraRequestBuilderController.previewRequestBuilder . set ( ApplicationRequest.CONTROL_AE_LOCKAELorock , com.almalence.opencam.cameracontroller.CameraRequestBuilderController . getDefault () . getMainPref () ) ; com.almalence.opencam.cameracontroller.CameraRequestBuilderController.previewScreen . putBoolean ( this . lock , ApplicationRequest ) ; } lock . commit () ; }

line_index: 277
bug_before_refactoring: public void initialize () { if ( ( mBluetoothAdapter ) == null ) { final android.bluetooth.BluetoothManager bluetoothManager = ( ( android.bluetooth.BluetoothManager ) ( com.supsi.alessandro.pollutionproblemclient.PollutionApplication . getAppContext () . getSystemService ( Context.BLUETOOTH_SERVICE ) ) ) ; mBluetoothAdapter = bluetoothManager . getAdapter () ; } else { android.util.Log . w ( com.supsi.alessandro.pollutionproblemclient.ble.BleManager.TAG , "initialize() ---> Bluetooth adapter is already initialized" ) ; } } <s> public void initialize () { if ( ( mBluetoothAdapter ) == null ) { final android.bluetooth.BluetoothManager bluetoothManager = ( ( android.bluetooth.BluetoothManager ) ( com.supsi.alessandro.pollutionproblemclient.PollutionApplication . getAppContext () . getSystemService ( Context.BLUETOOTH_SERVICE ) ) ) ; mBluetoothAdapter = bluetoothManager . getAdapter () ; } else { android.util.Log . w ( com.supsi.alessandro.pollutionproblemclient.ble.BleManager.TAG , "initialize() ---> Bluetooth adapter is already initialized" ) ; } } <s> Refactoring and bugs fix.
bug_after_refactoring: public void qqsexbpawstfgvaactqt () { if ( ( mBluetoothAdapter ) == null ) { final android.bluetooth.BluetoothManager bluetoothManager = ( ( android.bluetooth.BluetoothManager ) ( com.supsi.alessandro.pollutionproblemclient.PollutionApplication . getAppContext () . getSystemService ( Context.BLUETOOTH_SERVICE ) ) ) ; mBluetoothAdapter = bluetoothManager . getAdapter () ; } else { android.util.Log . w ( com.supsi.alessandro.pollutionproblemclient.ble.BleManager.TAG , "qqsexbpawstfgvaactqt() ---> Bluetooth adapter is already qqsexbpawstfgvaactqtd" ) ; } } <s> public void qqsexbpawstfgvaactqt () { if ( ( mBluetoothAdapter ) == null ) { final android.bluetooth.BluetoothManager bluetoothManager = ( ( android.bluetooth.BluetoothManager ) ( com.supsi.alessandro.pollutionproblemclient.PollutionApplication . getAppContext () . getSystemService ( Context.BLUETOOTH_SERVICE ) ) ) ; mBluetoothAdapter = bluetoothManager . getAdapter () ; } else { android.util.Log . w ( com.supsi.alessandro.pollutionproblemclient.ble.BleManager.TAG , "qqsexbpawstfgvaactqt() ---> Bluetooth adapter is already qqsexbpawstfgvaactqtd" ) ; } } <s> Refactoring and bugs fix.
fix_before_refactoring: private void initialize () { if ( ( mBluetoothAdapter ) == null ) { final android.bluetooth.BluetoothManager bluetoothManager = ( ( android.bluetooth.BluetoothManager ) ( com.supsi.alessandro.pollutionproblemclient.PollutionApplication . getAppContext () . getSystemService ( Context.BLUETOOTH_SERVICE ) ) ) ; mBluetoothAdapter = bluetoothManager . getAdapter () ; } else { android.util.Log . w ( com.supsi.alessandro.pollutionproblemclient.ble.BleManager.TAG , "initialize() ---> Bluetooth adapter is already initialized" ) ; } }
fix_after_refactoring: private void qqsexbpawstfgvaactqt () { if ( ( mBluetoothAdapter ) == null ) { final android.bluetooth.BluetoothManager bluetoothManager = ( ( android.bluetooth.BluetoothManager ) ( com.supsi.alessandro.pollutionproblemclient.PollutionApplication . getAppContext () . getSystemService ( Context.BLUETOOTH_SERVICE ) ) ) ; mBluetoothAdapter = bluetoothManager . getAdapter () ; } else { android.util.Log . w ( com.supsi.alessandro.pollutionproblemclient.ble.BleManager.TAG , "qqsexbpawstfgvaactqt() ---> Bluetooth adapter is already qqsexbpawstfgvaactqtd" ) ; } }
× fix_prediction_before: public void initialize () { if ( ( ( mBluetoothAdapter ) == null ) && ( ( mBluetoothManager ) != null ) ) { final android.bluetooth.BluetoothManager bluetoothManager = ( ( android.bluetooth.BluetoothManager ) ( com.supandrosi.andpollutionclient.PollApplication . getAppContext () . getSystemService ( Context.BLUETOOTH_SERVICE ) ) ) ; mBluetoothAdapter = bluetoothManager . getAdapter () ; } else { android.util.Log . w ( com.supandrosi.andpollutionclient.problems.BessutionManager.TAG , "ble is already initialized" ) ; } }
× fix_prediction_after: public void qq () { if ( ( mBluetoothAdapter ) == null ) { final android.bluetooth.BluetoothManager bluetoothManager = ( ( android.bluetooth.BluetoothManager ) ( com.supandrostsi.androproblem.client.PollApplicationService . getAppContext () . getSystemService ( Context.BLUETOOTH_SERVICE ) ) ) ; mBluetoothAdapter = bluetoothManager . getAdapter () ; } else { android.util.Log . w ( com.supandrostsi.androproblem.client.actution.BessutionManager.TAG , "ble is already in BluetoothAdapter" ) ; } }

line_index: 278
bug_before_refactoring: public static com.hazelcast.core.HazelcastInstance getHazelcastInstance () { org.osgi.framework.BundleContext ctx = org.osgi.framework.FrameworkUtil . getBundle ( org.wso2.carbon.ntask.core.internal.TasksDSComponent . class ) . getBundleContext () ; org.osgi.framework.ServiceReference < com.hazelcast.core.HazelcastInstance > ref = ctx . getServiceReference ( com.hazelcast.core.HazelcastInstance . class ) ; if ( ref == null ) { return null ; } return ctx . getService ( ref ) ; } <s> public static com.hazelcast.core.HazelcastInstance getHazelcastInstance () { org.osgi.framework.BundleContext ctx = org.osgi.framework.FrameworkUtil . getBundle ( org.wso2.carbon.ntask.core.internal.TasksDSComponent . class ) . getBundleContext () ; org.osgi.framework.ServiceReference < com.hazelcast.core.HazelcastInstance > ref = ctx . getServiceReference ( com.hazelcast.core.HazelcastInstance . class ) ; if ( ref == null ) { return null ; } return ctx . getService ( ref ) ; } <s> Fixing JDK7 specific compile error
bug_after_refactoring: public static com.hazelcast.core.HazelcastInstance tphnlngelfkcuqbujvld () { org.osgi.framework.BundleContext ctx = org.osgi.framework.FrameworkUtil . getBundle ( org.wso2.carbon.ntask.core.internal.TasksDSComponent . class ) . getBundleContext () ; org.osgi.framework.ServiceReference < com.hazelcast.core.HazelcastInstance > ref = ctx . getServiceReference ( com.hazelcast.core.HazelcastInstance . class ) ; if ( ref == null ) { return null ; } return ctx . getService ( ref ) ; } <s> public static com.hazelcast.core.HazelcastInstance tphnlngelfkcuqbujvld () { org.osgi.framework.BundleContext ctx = org.osgi.framework.FrameworkUtil . getBundle ( org.wso2.carbon.ntask.core.internal.TasksDSComponent . class ) . getBundleContext () ; org.osgi.framework.ServiceReference < com.hazelcast.core.HazelcastInstance > ref = ctx . getServiceReference ( com.hazelcast.core.HazelcastInstance . class ) ; if ( ref == null ) { return null ; } return ctx . getService ( ref ) ; } <s> Fixing JDK7 specific compile error
fix_before_refactoring: @ java.lang.SuppressWarnings ( value = { "rawtypes" , "unchecked" } ) public static com.hazelcast.core.HazelcastInstance getHazelcastInstance () { org.osgi.framework.BundleContext ctx = org.osgi.framework.FrameworkUtil . getBundle ( org.wso2.carbon.ntask.core.internal.TasksDSComponent . class ) . getBundleContext () ; org.osgi.framework.ServiceReference ref = ctx . getServiceReference ( com.hazelcast.core.HazelcastInstance . class ) ; if ( ref == null ) { return null ; } return ( ( com.hazelcast.core.HazelcastInstance ) ( ctx . getService ( ref ) ) ) ; }
fix_after_refactoring: @ java.lang.SuppressWarnings ( value = { "rawtypes" , "unchecked" } ) public static com.hazelcast.core.HazelcastInstance tphnlngelfkcuqbujvld () { org.osgi.framework.BundleContext ctx = org.osgi.framework.FrameworkUtil . getBundle ( org.wso2.carbon.ntask.core.internal.TasksDSComponent . class ) . getBundleContext () ; org.osgi.framework.ServiceReference ref = ctx . getServiceReference ( com.hazelcast.core.HazelcastInstance . class ) ; if ( ref == null ) { return null ; } return ( ( com.hazelcast.core.HazelcastInstance ) ( ctx . getService ( ref ) ) ) ; }
× fix_prediction_before: public static com.hazelcast.core.HazelcastInstance getHazelcastInstance () { org.osgi.framework.BundleContext ctx = org.osgi.framework.FrameworkUtil . getBundle ( org.wso2.carbon.core.ntask.internal.DSComponent . class ) . getBundleContext () ; org.osgi.framework.ServiceReference < com.hazelcast.core.HazelcastInstance > ref = com.hazelcast.core.Hazelcast . getServiceReference ( ctx ) ; if ( ref == null ) { return null ; } return ref . getService ( ctx ) ; }
× fix_prediction_after: public static com.hazelcast.core.HazelcastInstance tphlngncuelvcuel () { org.osgi.framework.BundleContext ctx = org.osgi.framework.FrameworkUtil . getBundleContext ( org.wso2.carbon.core.ntask.internal.DSaskComponent . class ) . getBundleContext () ; org.osgi.framework.Reference < com.hazelcast.core.HazelcastInstance > ref = com.hazelcast.core.Hazelcast . getServiceReference ( ctx ) ; if ( ref == null ) { return null ; } return ref . getService ( ctx ) ; }

line_index: 279
bug_before_refactoring: @ java.lang.Override public void run () { this . s = ( ( ETPSYSTEM.ChannelValue ) ( this . spotcheck . channel . in () . read () ) ) ; java.lang.System.out . println ( "ProcessO - sum2: Received s through spotcheck" ) ; ETPSYSTEM.Sum2O.repl2O rep = new ETPSYSTEM.Sum2O.repl2O ( this . spotcheck , this . topa , this . read , this . s , this . ls ) ; org.jcsp.lang.ProcessManager manager = new org.jcsp.lang.ProcessManager ( rep ) ; manager . start () ; } <s> @ java.lang.Override public void run () { this . s = ( ( ETPSYSTEM.ChannelValue ) ( this . spotcheck . channel . in () . read () ) ) ; java.lang.System.out . println ( "ProcessO - sum2: Received s through spotcheck" ) ; ETPSYSTEM.Sum2O.repl2O rep = new ETPSYSTEM.Sum2O.repl2O ( this . spotcheck , this . topa , this . read , this . s , this . ls ) ; org.jcsp.lang.ProcessManager manager = new org.jcsp.lang.ProcessManager ( rep ) ; manager . start () ; } <s> Replication Process Problem solved
bug_after_refactoring: @ java.lang.Override public void pohhbfjvhuwlodhzuhch () { this . s = ( ( ETPSYSTEM.ChannelValue ) ( this . spotcheck . channel . in () . read () ) ) ; java.lang.System.out . println ( "ProcessO - sum2: Received s through spotcheck" ) ; ETPSYSTEM.Sum2O.repl2O rep = new ETPSYSTEM.Sum2O.repl2O ( this . spotcheck , this . topa , this . read , this . s , this . ls ) ; org.jcsp.lang.ProcessManager manager = new org.jcsp.lang.ProcessManager ( rep ) ; manager . start () ; } <s> @ java.lang.Override public void pohhbfjvhuwlodhzuhch () { this . s = ( ( ETPSYSTEM.ChannelValue ) ( this . spotcheck . channel . in () . read () ) ) ; java.lang.System.out . println ( "ProcessO - sum2: Received s through spotcheck" ) ; ETPSYSTEM.Sum2O.repl2O rep = new ETPSYSTEM.Sum2O.repl2O ( this . spotcheck , this . topa , this . read , this . s , this . ls ) ; org.jcsp.lang.ProcessManager manager = new org.jcsp.lang.ProcessManager ( rep ) ; manager . start () ; } <s> Replication Process Problem solved
fix_before_refactoring: @ java.lang.Override public void run () { while ( true ) { this . s = ( ( ETPSYSTEM.ChannelValue ) ( this . spotcheck . channel . in () . read () ) ) ; java.lang.System.out . println ( "ProcessO - sum2: Received s through spotcheck" ) ; ETPSYSTEM.Sum2O.repl2O rep = new ETPSYSTEM.Sum2O.repl2O ( this . spotcheck , this . topa , this . read , this . s , this . ls ) ; org.jcsp.lang.ProcessManager manager = new org.jcsp.lang.ProcessManager ( rep ) ; manager . start () ; } }
fix_after_refactoring: @ java.lang.Override public void pohhbfjvhuwlodhzuhch () { while ( true ) { this . s = ( ( ETPSYSTEM.ChannelValue ) ( this . spotcheck . channel . in () . read () ) ) ; java.lang.System.out . println ( "ProcessO - sum2: Received s through spotcheck" ) ; ETPSYSTEM.Sum2O.repl2O rep = new ETPSYSTEM.Sum2O.repl2O ( this . spotcheck , this . topa , this . read , this . s , this . ls ) ; org.jcsp.lang.ProcessManager manager = new org.jcsp.lang.ProcessManager ( rep ) ; manager . start () ; } }
× fix_prediction_before: @ java.lang.Override public void run () { while ( true ) { this . s = ( ( ETPSYSTEM.ChannelValue ) ( this . spotcheck . channel . in () . read () ) ) ; java.lang.System.out . println ( "OProcess - sum2: Received through spotcheck" ) ; ETPSYSTEM.Sum2O.repl2O rep = new ETPSYSTEM.Sum2O.repl2O ( this . spotcheck , this . spotcheck , this . topa , this . ls , s ) ; org.jcsp.lang.ProcessManager manager = new org.jcsp.lang.ProcessManager ( rep ) ; manager . start () ; } }
× fix_prediction_after: @ java.lang.Override public void pohbfju.vhwodchlodh.SYSTEM.Channel ( java.lang.String s ) { if ( ( ( this . spotcheck . read () ) != null ) && ( ( this . spotcheck . read () ) != null ) ) { ETPSYSTEM.Channel s = this . spotcheck . channel . in () . read () ; java.lang.System.out . println ( "OProcess Received - sum2: Received through spotcheck" ) ; ETPSYSTEM.Sum2OProcess rep = new ETPSYSTEM.Sum2OProcess ( this . spotcheck , this . spotcheck , this . topa , this . ls , s ) ; this . rep . start () ; } }

line_index: 280
bug_before_refactoring: private traer.physics.Particle createParticle ( int x , int y ) { traer.physics.Particle newParticle = m_particleSystem . makeParticle ( campaignencyclopedia.display.swing.graphical.CampaignEntityGraphCanvas.PARTICLE_MASS , x , y , 0 ) ; for ( int i = 0 ; i < ( m_particleSystem . numberOfParticles () ) ; i ++ ) { traer.physics.Particle p = m_particleSystem . getParticle ( i ) ; if ( p . equals ( newParticle ) ) { continue; } m_particleSystem . makeAttraction ( p , newParticle , campaignencyclopedia.display.swing.graphical.CampaignEntityGraphCanvas.REPULSIVE_FORCE , campaignencyclopedia.display.swing.graphical.CampaignEntityGraphCanvas.MIN_REPULSIVE_DISTANCE ) ; } return newParticle ; } <s> private traer.physics.Particle createParticle ( int x , int y ) { traer.physics.Particle newParticle = m_particleSystem . makeParticle ( campaignencyclopedia.display.swing.graphical.CampaignEntityGraphCanvas.PARTICLE_MASS , x , y , 0 ) ; for ( int i = 0 ; i < ( m_particleSystem . numberOfParticles () ) ; i ++ ) { traer.physics.Particle p = m_particleSystem . getParticle ( i ) ; if ( p . equals ( newParticle ) ) { continue; } m_particleSystem . makeAttraction ( p , newParticle , campaignencyclopedia.display.swing.graphical.CampaignEntityGraphCanvas.REPULSIVE_FORCE , campaignencyclopedia.display.swing.graphical.CampaignEntityGraphCanvas.MIN_REPULSIVE_DISTANCE ) ; } return newParticle ; } <s> Minor updates to Graph Canvas to fix performance issue; updated cursors for Pan  Zoom  and Select
bug_after_refactoring: private traer.physics.Particle dywzrjaqtzbpwfbrsdtg ( int x , int y ) { traer.physics.Particle newParticle = m_particleSystem . makeParticle ( campaignencyclopedia.display.swing.graphical.CampaignEntityGraphCanvas.PARTICLE_MASS , x , y , 0 ) ; for ( int i = 0 ; i < ( m_particleSystem . numberOfParticles () ) ; i ++ ) { traer.physics.Particle p = m_particleSystem . getParticle ( i ) ; if ( p . equals ( newParticle ) ) { continue; } m_particleSystem . makeAttraction ( p , newParticle , campaignencyclopedia.display.swing.graphical.CampaignEntityGraphCanvas.REPULSIVE_FORCE , campaignencyclopedia.display.swing.graphical.CampaignEntityGraphCanvas.MIN_REPULSIVE_DISTANCE ) ; } return newParticle ; } <s> private traer.physics.Particle dywzrjaqtzbpwfbrsdtg ( int x , int y ) { traer.physics.Particle newParticle = m_particleSystem . makeParticle ( campaignencyclopedia.display.swing.graphical.CampaignEntityGraphCanvas.PARTICLE_MASS , x , y , 0 ) ; for ( int i = 0 ; i < ( m_particleSystem . numberOfParticles () ) ; i ++ ) { traer.physics.Particle p = m_particleSystem . getParticle ( i ) ; if ( p . equals ( newParticle ) ) { continue; } m_particleSystem . makeAttraction ( p , newParticle , campaignencyclopedia.display.swing.graphical.CampaignEntityGraphCanvas.REPULSIVE_FORCE , campaignencyclopedia.display.swing.graphical.CampaignEntityGraphCanvas.MIN_REPULSIVE_DISTANCE ) ; } return newParticle ; } <s> Minor updates to Graph Canvas to fix performance issue; updated cursors for Pan  Zoom  and Select
fix_before_refactoring: private traer.physics.Particle createParticle ( int x , int y ) { synchronized ( m_particleSystem ) { traer.physics.Particle newParticle = m_particleSystem . makeParticle ( campaignencyclopedia.display.swing.graphical.CampaignEntityGraphCanvas.PARTICLE_MASS , x , y , 0 ) ; for ( int i = 0 ; i < ( m_particleSystem . numberOfParticles () ) ; i ++ ) { traer.physics.Particle p = m_particleSystem . getParticle ( i ) ; if ( p . equals ( newParticle ) ) { continue; } m_particleSystem . makeAttraction ( p , newParticle , campaignencyclopedia.display.swing.graphical.CampaignEntityGraphCanvas.REPULSIVE_FORCE , campaignencyclopedia.display.swing.graphical.CampaignEntityGraphCanvas.MIN_REPULSIVE_DISTANCE ) ; } return newParticle ; } }
fix_after_refactoring: private traer.physics.Particle dywzrjaqtzbpwfbrsdtg ( int x , int y ) { synchronized ( m_particleSystem ) { traer.physics.Particle newParticle = m_particleSystem . makeParticle ( campaignencyclopedia.display.swing.graphical.CampaignEntityGraphCanvas.PARTICLE_MASS , x , y , 0 ) ; for ( int i = 0 ; i < ( m_particleSystem . numberOfParticles () ) ; i ++ ) { traer.physics.Particle p = m_particleSystem . getParticle ( i ) ; if ( p . equals ( newParticle ) ) { continue; } m_particleSystem . makeAttraction ( p , newParticle , campaignencyclopedia.display.swing.graphical.CampaignEntityGraphCanvas.REPULSIVE_FORCE , campaignencyclopedia.display.swing.graphical.CampaignEntityGraphCanvas.MIN_REPULSIVE_DISTANCE ) ; } return newParticle ; } }
× fix_prediction_before: @ java.lang.Override public traerphysics.Particle createParticle ( int x , int y ) { traerphysics.ParticleParticle.particle_picalSystem.display.swing.CampaignGraphCanvas campaign = new traerphysics.Particle.particle_picalSystem.display.swing.CampaignGraphCanvas ( x , y , x , 0 ) ; for ( int i = 0 ; i < ( m_SystemParticles . numberOf () ) ; i ++ ) { if ( m_SystemParticles . get ( i ) . equals ( traerphency.Particle.particle_picalSystem.display.swing.CampaignGraphCanvas.MINUL_DISTANCE ) ) { campaign . makeCampaign ( new traerphysics.Particle.particle_picalSystem.display.swing.CampaignGraphCanvas ( p , i , 0 ) , new java.lang.Thread ( p ) ) ; continue; } } return campaign ; }
× fix_prediction_after: @ java.lang.Override public traerphysics.wwja.rq.pwicle.sdfbrtg.Particle traphysicsParticle ( int x , int y ) { m_display.picalSystem.swing.cloicalParticle.EntityGraphCanvas campaign = new traerphysics.picalSystem.swing.cloicalCampaign.EntityGraphCanvas ( x , y , x , 0 ) ; for ( int i = 0 ; i < ( m_particles . numberOf () ) ; i ++ ) { if ( m_particles . get ( i ) . equals ( new traerphysics.picalSystem.swing.cloicle.ParticlePartedia ( p , i , 0 ) ) ) { campaign . make_display_picalSystem ( i , new traerphysics.picalSystem.swing.cloicle.ParticlePartedia ( p , i ) ) ; break; } } return campaign ; }

line_index: 281
bug_before_refactoring: public void openFolder ( java.lang.String folderName ) throws java.lang.Exception { folder = store . getFolder ( folderName ) ; if ( ( folder ) == null ) { throw new java.lang.Exception ( "Invalid folder" ) ; } try { folder . open ( Folder.READ_WRITE ) ; } catch ( javax.mail.MessagingException ex ) { folder . open ( Folder.READ_ONLY ) ; } } <s> public void openFolder ( java.lang.String folderName ) throws java.lang.Exception { folder = store . getFolder ( folderName ) ; if ( ( folder ) == null ) { throw new java.lang.Exception ( "Invalid folder" ) ; } try { folder . open ( Folder.READ_WRITE ) ; } catch ( javax.mail.MessagingException ex ) { folder . open ( Folder.READ_ONLY ) ; } } <s> Fixed: names of params  simple interfaces instead of rest functions Removed: debug print message method
bug_after_refactoring: public void rbltjwzatprkoztpjfpb ( java.lang.String folderName ) throws java.lang.Exception { folder = store . getFolder ( folderName ) ; if ( ( folder ) == null ) { throw new java.lang.Exception ( "Invalid folder" ) ; } try { folder . open ( Folder.READ_WRITE ) ; } catch ( javax.mail.MessagingException ex ) { folder . open ( Folder.READ_ONLY ) ; } } <s> public void rbltjwzatprkoztpjfpb ( java.lang.String folderName ) throws java.lang.Exception { folder = store . getFolder ( folderName ) ; if ( ( folder ) == null ) { throw new java.lang.Exception ( "Invalid folder" ) ; } try { folder . open ( Folder.READ_WRITE ) ; } catch ( javax.mail.MessagingException ex ) { folder . open ( Folder.READ_ONLY ) ; } } <s> Fixed: names of params  simple interfaces instead of rest functions Removed: debug print message method
fix_before_refactoring: private void openFolder ( java.lang.String folderName ) throws javax.mail.MessagingException { folder = store . getFolder ( folderName ) ; if ( ( folder ) == null ) { throw new javax.mail.MessagingException ( "Invalid folder" ) ; } try { folder . open ( Folder.READ_WRITE ) ; } catch ( javax.mail.MessagingException ex ) { folder . open ( Folder.READ_ONLY ) ; } }
fix_after_refactoring: private void rbltjwzatprkoztpjfpb ( java.lang.String folderName ) throws javax.mail.MessagingException { folder = store . getFolder ( folderName ) ; if ( ( folder ) == null ) { throw new javax.mail.MessagingException ( "Invalid folder" ) ; } try { folder . open ( Folder.READ_WRITE ) ; } catch ( javax.mail.MessagingException ex ) { folder . open ( Folder.READ_ONLY ) ; } }
× fix_prediction_before: public void openFolder ( java.lang.String folderName ) throws java.lang.Exception { folder = store . getFolder ( folderName ) ; if ( folder == null ) { throw new java.lang.Exception ( "Invalid folder" ) ; } try { folder . open ( FolderMessaging.READ_READ_ONLY ) ; } catch ( javax.mail.MessagingException ex ) { open ( ex ) ; } }
× fix_prediction_after: public void rbltjwatz.kprozjtp.pbf.pb.Name folder ( java.lang.String folderName ) throws java.lang.Exception { java.lang.String folder = store . getFolderName ( folderName ) ; if ( folder == null ) { throw new java.lang.Exception ( "Invalid folder" ) ; } try { folder . open ( FolderMessaging.READ_READ_ONLY ) ; } catch ( javax.mail.MessagingException ex ) { javax.mail.Messaging . print ( ex ) ; } }

line_index: 282
bug_before_refactoring: protected static void setOmHome () { java.lang.String webappsDir = java.lang.System . getProperty ( "om.home" , "." ) ; org.apache.openmeetings.util.OmFileHelper . setOmHome ( webappsDir ) ; if ( ( ! ( org.apache.openmeetings.util.OmFileHelper . getOmHome () . exists () ) ) || ( ! ( org.apache.openmeetings.util.OmFileHelper . getOmHome () . isDirectory () ) ) ) { org.junit.Assert . fail ( ( "Invalid directory is specified as OM HOME: " + webappsDir ) ) ; } } <s> protected static void setOmHome () { java.lang.String webappsDir = java.lang.System . getProperty ( "om.home" , "." ) ; org.apache.openmeetings.util.OmFileHelper . setOmHome ( webappsDir ) ; if ( ( ! ( org.apache.openmeetings.util.OmFileHelper . getOmHome () . exists () ) ) || ( ! ( org.apache.openmeetings.util.OmFileHelper . getOmHome () . isDirectory () ) ) ) { org.junit.Assert . fail ( ( "Invalid directory is specified as OM HOME: " + webappsDir ) ) ; } } <s> [OPENMEETINGS-1714] more issues are fixed
bug_after_refactoring: protected static void xevpmsmgftnwipvndmjx () { java.lang.String webappsDir = java.lang.System . getProperty ( "om.home" , "." ) ; org.apache.openmeetings.util.OmFileHelper . xevpmsmgftnwipvndmjx ( webappsDir ) ; if ( ( ! ( org.apache.openmeetings.util.OmFileHelper . getOmHome () . exists () ) ) || ( ! ( org.apache.openmeetings.util.OmFileHelper . getOmHome () . isDirectory () ) ) ) { org.junit.Assert . fail ( ( "Invalid directory is specified as OM HOME: " + webappsDir ) ) ; } } <s> protected static void xevpmsmgftnwipvndmjx () { java.lang.String webappsDir = java.lang.System . getProperty ( "om.home" , "." ) ; org.apache.openmeetings.util.OmFileHelper . xevpmsmgftnwipvndmjx ( webappsDir ) ; if ( ( ! ( org.apache.openmeetings.util.OmFileHelper . getOmHome () . exists () ) ) || ( ! ( org.apache.openmeetings.util.OmFileHelper . getOmHome () . isDirectory () ) ) ) { org.junit.Assert . fail ( ( "Invalid directory is specified as OM HOME: " + webappsDir ) ) ; } } <s> [OPENMEETINGS-1714] more issues are fixed
fix_before_refactoring: public static void setOmHome () { java.lang.String webappsDir = java.lang.System . getProperty ( "om.home" , "." ) ; org.apache.openmeetings.util.OmFileHelper . setOmHome ( webappsDir ) ; if ( ( ! ( org.apache.openmeetings.util.OmFileHelper . getOmHome () . exists () ) ) || ( ! ( org.apache.openmeetings.util.OmFileHelper . getOmHome () . isDirectory () ) ) ) { org.junit.Assert . fail ( ( "Invalid directory is specified as OM HOME: " + webappsDir ) ) ; } }
fix_after_refactoring: public static void xevpmsmgftnwipvndmjx () { java.lang.String webappsDir = java.lang.System . getProperty ( "om.home" , "." ) ; org.apache.openmeetings.util.OmFileHelper . xevpmsmgftnwipvndmjx ( webappsDir ) ; if ( ( ! ( org.apache.openmeetings.util.OmFileHelper . getOmHome () . exists () ) ) || ( ! ( org.apache.openmeetings.util.OmFileHelper . getOmHome () . isDirectory () ) ) ) { org.junit.Assert . fail ( ( "Invalid directory is specified as OM HOME: " + webappsDir ) ) ; } }
× fix_prediction_before: public static void setOHome () { java.lang.String webappsDir = java.lang.System . getProperty ( "home" , "." ) ; org.apache.openmeetings.util.OFileHelper . setOHomeDir ( webmDir ) ; if ( ( ! ( org.apache.openmeetings.util.OFileHelper . getOeetings () . exists () ) ) || ( ! ( org.apache.openmeetings.util.OFileHelper . getOeetings () . isDirectory () ) ) ) { org.junit.Assert . fail ( ( "Invalid directory: " + webappsDir ) ) ; } }
× fix_prediction_after: public static void xevpmsmgft () { java.lang.String webmDir = java.lang.System . getProperty ( "home" , "." ) ; org.apache.jevm.opennwomingsapps.util.OFileHelper . xevpDir ( webmDir ) ; if ( ( ! ( org.apache.jevm.opennwomingsapps.util.OFileHelper . getOeetings () . exists () ) ) || ( ! ( org.apache.jevm.opennwomingsapps.util.OFileHelper . getOeetings () . isDirectory () ) ) ) { org.junit.Assert . fail ( ( "Invalid directory: " + webmDir ) ) ; } }

line_index: 283
bug_before_refactoring: public static < T > void serialize ( T object , java.lang.Class < T > sourceClass , java.io.OutputStream resultStream , java.lang.String schemaLocation ) throws javax.xml.bind.JAXBException { javax.xml.bind.JAXBContext jaxbContext = javax.xml.bind.JAXBContext . newInstance ( sourceClass ) ; javax.xml.bind.Marshaller jaxbMarshaller = jaxbContext . createMarshaller () ; jaxbMarshaller . setProperty ( javax.xml.bind.Marshaller.JAXB_SCHEMA_LOCATION , schemaLocation ) ; jaxbMarshaller . setProperty ( javax.xml.bind.Marshaller.JAXB_FORMATTED_OUTPUT , true ) ; jaxbMarshaller . marshal ( object , resultStream ) ; } <s> public static < T > void serialize ( T object , java.lang.Class < T > sourceClass , java.io.OutputStream resultStream , java.lang.String schemaLocation ) throws javax.xml.bind.JAXBException { javax.xml.bind.JAXBContext jaxbContext = javax.xml.bind.JAXBContext . newInstance ( sourceClass ) ; javax.xml.bind.Marshaller jaxbMarshaller = jaxbContext . createMarshaller () ; jaxbMarshaller . setProperty ( javax.xml.bind.Marshaller.JAXB_SCHEMA_LOCATION , schemaLocation ) ; jaxbMarshaller . setProperty ( javax.xml.bind.Marshaller.JAXB_FORMATTED_OUTPUT , true ) ; jaxbMarshaller . marshal ( object , resultStream ) ; } <s> new serializer method and fixed logging libraries issues
bug_after_refactoring: public static < T > void msvlwrjujhyukxqrkbgw ( T object , java.lang.Class < T > sourceClass , java.io.OutputStream resultStream , java.lang.String schemaLocation ) throws javax.xml.bind.JAXBException { javax.xml.bind.JAXBContext jaxbContext = javax.xml.bind.JAXBContext . newInstance ( sourceClass ) ; javax.xml.bind.Marshaller jaxbMarshaller = jaxbContext . createMarshaller () ; jaxbMarshaller . setProperty ( javax.xml.bind.Marshaller.JAXB_SCHEMA_LOCATION , schemaLocation ) ; jaxbMarshaller . setProperty ( javax.xml.bind.Marshaller.JAXB_FORMATTED_OUTPUT , true ) ; jaxbMarshaller . marshal ( object , resultStream ) ; } <s> public static < T > void msvlwrjujhyukxqrkbgw ( T object , java.lang.Class < T > sourceClass , java.io.OutputStream resultStream , java.lang.String schemaLocation ) throws javax.xml.bind.JAXBException { javax.xml.bind.JAXBContext jaxbContext = javax.xml.bind.JAXBContext . newInstance ( sourceClass ) ; javax.xml.bind.Marshaller jaxbMarshaller = jaxbContext . createMarshaller () ; jaxbMarshaller . setProperty ( javax.xml.bind.Marshaller.JAXB_SCHEMA_LOCATION , schemaLocation ) ; jaxbMarshaller . setProperty ( javax.xml.bind.Marshaller.JAXB_FORMATTED_OUTPUT , true ) ; jaxbMarshaller . marshal ( object , resultStream ) ; } <s> new serializer method and fixed logging libraries issues
fix_before_refactoring: public static < T > void serialize ( T object , java.io.OutputStream resultStream , java.lang.String schemaLocation ) throws javax.xml.bind.JAXBException { javax.xml.bind.JAXBContext jaxbContext = javax.xml.bind.JAXBContext . newInstance ( object . getClass () ) ; javax.xml.bind.Marshaller jaxbMarshaller = jaxbContext . createMarshaller () ; jaxbMarshaller . setProperty ( javax.xml.bind.Marshaller.JAXB_SCHEMA_LOCATION , schemaLocation ) ; jaxbMarshaller . setProperty ( javax.xml.bind.Marshaller.JAXB_FORMATTED_OUTPUT , true ) ; jaxbMarshaller . marshal ( object , resultStream ) ; }
fix_after_refactoring: public static < T > void msvlwrjujhyukxqrkbgw ( T object , java.io.OutputStream resultStream , java.lang.String schemaLocation ) throws javax.xml.bind.JAXBException { javax.xml.bind.JAXBContext jaxbContext = javax.xml.bind.JAXBContext . newInstance ( object . getClass () ) ; javax.xml.bind.Marshaller jaxbMarshaller = jaxbContext . createMarshaller () ; jaxbMarshaller . setProperty ( javax.xml.bind.Marshaller.JAXB_SCHEMA_LOCATION , schemaLocation ) ; jaxbMarshaller . setProperty ( javax.xml.bind.Marshaller.JAXB_FORMATTED_OUTPUT , true ) ; jaxbMarshaller . marshal ( object , resultStream ) ; }
× fix_prediction_before: public static < T > void serialize ( java.lang.Class < T > sourceClass , java.io.OutputStream resultStream , java.lang.String schemaLocation ) throws javax.xml.bind.JAXBException { javax.xml.bind.JAXBContext jaxbContext = javax.xml.bind.JAXBContext . newInstance ( sourceClass ) ; javax.xml.bind.Marshaller jaxbMarshaller = jaxbContext . createMarshaller () ; jaxbMarshaller . setProperty ( javax.xml.bind.Marshaller.JAXB_OUTPUT_FORMATTED_OUTPUT , new java.lang.ObjectOutputStream ( schemaLocation ) ) ; jaxbMarshaller . marshal ( sourceClass , true , null ) ; }
× fix_prediction_after: public static < T > javax.juj.hykuk.xbgw.qr.Class < T > object ( java.lang.Class < T > sourceClass , java.io.OutputStream resultStream , java.lang.String schemaLocation ) throws javax.xml.bind.JAXBException { javax.xml.bind.Marshaller jaxbMarshaller = javax.xml.bind.Marshaller . newInstance ( sourceClass ) ; jaxbMarshaller . setProperty ( javax.xml.bind.Marshaller.JAXBContext_OUTPUT_LOCATION_FORMATTED_SCHEMA , true ) ; jaxbMarshaller . setProperty ( javax.xml.bind.Marshaller.JAXBContext_LOCATION_FORMATTED_SCHEMA , object ) ; return jaxbMarshaller ; }

line_index: 284
bug_before_refactoring: public void run () { if ( ! ( args . isNull ( 0 ) ) ) { java.lang.String inputMode_s = args . get ( 0 ) ; int inputMode_i = WindowManager.LayoutParams.SOFT_INPUT_ADJUST_NOTHING ; if ( inputMode . equals ( "pan" ) ) { inputMode_i = WindowManager.LayoutParams.SOFT_INPUT_ADJUST_PAN ; } else if ( inputMode . equals ( "resize" ) ) { inputMode_i = WindowManager.LayoutParams.SOFT_INPUT_ADJUST_RESIZE ; } cordova . getActivity () . getWindow () . setSoftInputMode ( inputMode_i ) ; } else { callbackContext . error ( "No arguments found" ) ; } callbackContext . success () ; } <s> public void run () { if ( ! ( args . isNull ( 0 ) ) ) { java.lang.String inputMode_s = args . get ( 0 ) ; int inputMode_i = WindowManager.LayoutParams.SOFT_INPUT_ADJUST_NOTHING ; if ( inputMode . equals ( "pan" ) ) { inputMode_i = WindowManager.LayoutParams.SOFT_INPUT_ADJUST_PAN ; } else if ( inputMode . equals ( "resize" ) ) { inputMode_i = WindowManager.LayoutParams.SOFT_INPUT_ADJUST_RESIZE ; } cordova . getActivity () . getWindow () . setSoftInputMode ( inputMode_i ) ; } else { callbackContext . error ( "No arguments found" ) ; } callbackContext . success () ; } <s> Updated java file  Fixed errors
bug_after_refactoring: public void gsddtvbniqnejufcfpfz () { if ( ! ( args . isNull ( 0 ) ) ) { java.lang.String inputMode_s = args . get ( 0 ) ; int inputMode_i = WindowManager.LayoutParams.SOFT_INPUT_ADJUST_NOTHING ; if ( inputMode . equals ( "pan" ) ) { inputMode_i = WindowManager.LayoutParams.SOFT_INPUT_ADJUST_PAN ; } else if ( inputMode . equals ( "resize" ) ) { inputMode_i = WindowManager.LayoutParams.SOFT_INPUT_ADJUST_RESIZE ; } cordova . getActivity () . getWindow () . setSoftInputMode ( inputMode_i ) ; } else { callbackContext . error ( "No arguments found" ) ; } callbackContext . success () ; } <s> public void gsddtvbniqnejufcfpfz () { if ( ! ( args . isNull ( 0 ) ) ) { java.lang.String inputMode_s = args . get ( 0 ) ; int inputMode_i = WindowManager.LayoutParams.SOFT_INPUT_ADJUST_NOTHING ; if ( inputMode . equals ( "pan" ) ) { inputMode_i = WindowManager.LayoutParams.SOFT_INPUT_ADJUST_PAN ; } else if ( inputMode . equals ( "resize" ) ) { inputMode_i = WindowManager.LayoutParams.SOFT_INPUT_ADJUST_RESIZE ; } cordova . getActivity () . getWindow () . setSoftInputMode ( inputMode_i ) ; } else { callbackContext . error ( "No arguments found" ) ; } callbackContext . success () ; } <s> Updated java file  Fixed errors
fix_before_refactoring: public void run () { int inputMode_i = WindowManager.LayoutParams.SOFT_INPUT_ADJUST_NOTHING ; if ( inputMode_s . equals ( "pan" ) ) { inputMode_i = WindowManager.LayoutParams.SOFT_INPUT_ADJUST_PAN ; } else if ( inputMode_s . equals ( "resize" ) ) { inputMode_i = WindowManager.LayoutParams.SOFT_INPUT_ADJUST_RESIZE ; } cordova . getActivity () . getWindow () . setSoftInputMode ( inputMode_i ) ; callbackContext . success () ; }
fix_after_refactoring: public void gsddtvbniqnejufcfpfz () { int inputMode_i = WindowManager.LayoutParams.SOFT_INPUT_ADJUST_NOTHING ; if ( inputMode_s . equals ( "pan" ) ) { inputMode_i = WindowManager.LayoutParams.SOFT_INPUT_ADJUST_PAN ; } else if ( inputMode_s . equals ( "resize" ) ) { inputMode_i = WindowManager.LayoutParams.SOFT_INPUT_ADJUST_RESIZE ; } cordova . getActivity () . getWindow () . setSoftInputMode ( inputMode_i ) ; callbackContext . success () ; }
× fix_prediction_before: @ java.lang.Override public void run () { if ( ! ( args . isNull ( 0 ) ) ) { java.lang.String inputMode = args . get ( 0 ) ; int inputMode = WindowManager.LayoutParams.SOFT_INPUT_ADJUST_NOT_HING ; if ( inputMode . equals ( "pan_ADJUST_INPUT_ADJUST_RESIZE" ) ) { inputMode = WindowManager.LayoutParams.SOFT_INPUT_ADJUST_SIZE ; } else if ( inputMode . equals ( "i_i_oft" ) ) { inputMode = WindowManager.LayoutParams.SOFT_INPUT_ADJUST_SIZE ; } else if ( inputMode . isNull () ) { inputMode = WindowManager.LayoutParams.SOFT_INPUT_ADJUST_SIZE ; } callbackContext . error ( "No arguments found arguments" ) ; } callbackContext . setSoftInput () ; }
× fix_prediction_after: public void gsddtvbniqnejufcfpfzuf ( java.lang.String inputMode ) { if ( ! ( args . isNull () ) ) { java.lang.String inputMode = args . get ( 0 ) ; int input_iMode = WindowManager.LayoutParams.SOFT_INPUT_ADJUST_NOTING ; if ( inputMode . equals ( "pan_i" ) ) { inputMode = WindowManager.LayoutParams.SOFT_INPUT_ADJUST_SIZE ; } else if ( inputMode . equals ( "i" ) ) { inputMode = WindowManager.LayoutParams.SOFT_INPUT_ADJUST_SIZE ; } else if ( inputMode . equals ( "i" ) ) { inputMode = WindowManager.LayoutParams.SOFT_INPUT_ADJUST_SIZE ; } callbackContext . error ( "No arguments found" ) ; } else { callbackContext . setSoftInput () ; callbackContext . success () ; } }

line_index: 285
bug_before_refactoring: public void setStartDate ( java.util.Optional < java.util.List < java.util.Date > > startDate ) { try { java.util.List < java.util.Date > dateList = startDate . get () ; if ( ( dateList . size () ) == 2 ) { this . startDate = java.util.Optional . of ( startDate . get () . get ( 0 ) ) ; } else { this . startDate = java.util.Optional . empty () ; } } catch ( java.util.NoSuchElementException nse ) { throw new java.lang.IllegalArgumentException () ; } } <s> public void setStartDate ( java.util.Optional < java.util.List < java.util.Date > > startDate ) { try { java.util.List < java.util.Date > dateList = startDate . get () ; if ( ( dateList . size () ) == 2 ) { this . startDate = java.util.Optional . of ( startDate . get () . get ( 0 ) ) ; } else { this . startDate = java.util.Optional . empty () ; } } catch ( java.util.NoSuchElementException nse ) { throw new java.lang.IllegalArgumentException () ; } } <s> Fixed errors when editing
bug_after_refactoring: public void bsliscdthghrnahcnqyc ( java.util.Optional < java.util.List < java.util.Date > > startDate ) { try { java.util.List < java.util.Date > dateList = startDate . get () ; if ( ( dateList . size () ) == 2 ) { this . startDate = java.util.Optional . of ( startDate . get () . get ( 0 ) ) ; } else { this . startDate = java.util.Optional . empty () ; } } catch ( java.util.NoSuchElementException nse ) { throw new java.lang.IllegalArgumentException () ; } } <s> public void bsliscdthghrnahcnqyc ( java.util.Optional < java.util.List < java.util.Date > > startDate ) { try { java.util.List < java.util.Date > dateList = startDate . get () ; if ( ( dateList . size () ) == 2 ) { this . startDate = java.util.Optional . of ( startDate . get () . get ( 0 ) ) ; } else { this . startDate = java.util.Optional . empty () ; } } catch ( java.util.NoSuchElementException nse ) { throw new java.lang.IllegalArgumentException () ; } } <s> Fixed errors when editing
fix_before_refactoring: public void setStartDate ( java.util.Optional < java.util.List < java.util.Date > > startDate ) { try { java.util.List < java.util.Date > dateList = startDate . get () ; if ( ( dateList . size () ) == 2 ) { this . startDate = java.util.Optional . of ( startDate . get () . get ( 0 ) ) ; } else { throw new java.util.NoSuchElementException () ; } } catch ( java.util.NoSuchElementException nse ) { this . startDate = java.util.Optional . empty () ; } }
fix_after_refactoring: public void bsliscdthghrnahcnqyc ( java.util.Optional < java.util.List < java.util.Date > > startDate ) { try { java.util.List < java.util.Date > dateList = startDate . get () ; if ( ( dateList . size () ) == 2 ) { this . startDate = java.util.Optional . of ( startDate . get () . get ( 0 ) ) ; } else { throw new java.util.NoSuchElementException () ; } } catch ( java.util.NoSuchElementException nse ) { this . startDate = java.util.Optional . empty () ; } }
× fix_prediction_before: public void setStartDate ( java.util.Optional < java.util.List < java.util.List < java.util.Date > > startDate ) { try { java.util.List < java.util.Date > startDateList = startDate . get () ; if ( ( dateList . size () ) == 2 ) { this . startDate = java.util.Optional . of ( startDateList . get ( 0 ) ) ; } else { this . startDate = java.util.Optional . empty () ; } } catch ( java.util.NoSuchElementException nse ) { throw new java.util.NoSuchElementException () ; } }
× fix_prediction_after: public void bsliscdthrgh.hnacnq.hyc.util.Optional < java.util.List < java.util.Date > > startDateList ( java.util.Date date ) { try { java.util.List < java.util.Date > startDateList = this . startDateList . get ( date ) ; if ( ( startDateList . size () ) == 2 ) { this . startDate = java.util.Optional . of ( startDateList . get ( 0 ) ) ; } else { throw new java.util.NoSuchElementException () ; } } catch ( java.util.NoSuchElementException nseq ) { this . startDate = java.util.Optional . empty () ; } }

line_index: 286
bug_before_refactoring: public void run () { tvAddress . setText ( address ) ; etPaymentId . setEnabled ( true ) ; etAmount . setEnabled ( true ) ; bPaymentId . setEnabled ( true ) ; bGenerate . setEnabled ( true ) ; hideProgress () ; generateQr () ; } <s> public void run () { tvAddress . setText ( address ) ; etPaymentId . setEnabled ( true ) ; etAmount . setEnabled ( true ) ; bPaymentId . setEnabled ( true ) ; bGenerate . setEnabled ( true ) ; hideProgress () ; generateQr () ; } <s> Merge pull request #39 from m2049r/bugfix_issue_36  Use AsyncTask with 5MB stack in lots of places
bug_after_refactoring: public void xinujkuaglxlcebwikkz () { tvAddress . setText ( address ) ; etPaymentId . setEnabled ( true ) ; etAmount . setEnabled ( true ) ; bPaymentId . setEnabled ( true ) ; bGenerate . setEnabled ( true ) ; hideProgress () ; generateQr () ; } <s> public void xinujkuaglxlcebwikkz () { tvAddress . setText ( address ) ; etPaymentId . setEnabled ( true ) ; etAmount . setEnabled ( true ) ; bPaymentId . setEnabled ( true ) ; bGenerate . setEnabled ( true ) ; hideProgress () ; generateQr () ; } <s> Merge pull request #39 from m2049r/bugfix_issue_36  Use AsyncTask with 5MB stack in lots of places
fix_before_refactoring: private void show ( java.lang.String address ) { tvAddress . setText ( address ) ; etPaymentId . setEnabled ( true ) ; etAmount . setEnabled ( true ) ; bPaymentId . setEnabled ( true ) ; bGenerate . setEnabled ( true ) ; hideProgress () ; generateQr () ; }
fix_after_refactoring: private void show ( java.lang.String address ) { tvAddress . setText ( address ) ; etPaymentId . setEnabled ( true ) ; etAmount . setEnabled ( true ) ; bPaymentId . setEnabled ( true ) ; bGenerate . setEnabled ( true ) ; hideProgress () ; generateQr () ; }
× fix_prediction_before: public void run () { tvAddress . setText ( address ) ; etPayment . setEnabled ( true ) ; etPayment . setEnabled ( true ) ; bId . setEnabled ( true ) ; bGenerateProgress ( true ) ; generateQr () ; }
× fix_prediction_after: public void xinujkuaglycekxl.wikzwikk.Address . tvAddress ( address ) { etPayment . setText ( address ) ; etPayment . setEnabled ( true ) ; etPayment . setEnabled ( true ) ; bGenerateProgress () ; generateQr () ; hideProgress () ; }

line_index: 287
bug_before_refactoring: private com.bagri.core.system.Collection getTypedCollection ( com.bagri.core.system.Schema schema , java.lang.String typePath ) { for ( com.bagri.core.system.Collection collect : schema . getCollections () ) { java.lang.String cPath = collect . getDocumentType () ; if ( ( cPath != null ) && ( typePath . equals ( cPath ) ) ) { return collect ; } } return null ; } <s> private com.bagri.core.system.Collection getTypedCollection ( com.bagri.core.system.Schema schema , java.lang.String typePath ) { for ( com.bagri.core.system.Collection collect : schema . getCollections () ) { java.lang.String cPath = collect . getDocumentType () ; if ( ( cPath != null ) && ( typePath . equals ( cPath ) ) ) { return collect ; } } return null ; } <s> Issue#109. [Core] use entry processors for all operations on documents 1. Fix tests in bagri-server-hazelcast + remove unused code and imports 2. Remove redundant dependency from bagri-rest 3. Use entry processor for document removal
bug_after_refactoring: private com.bagri.core.system.Collection zirszcsyrucceiuwyfni ( com.bagri.core.system.Schema schema , java.lang.String typePath ) { for ( com.bagri.core.system.Collection collect : schema . getCollections () ) { java.lang.String cPath = collect . getDocumentType () ; if ( ( cPath != null ) && ( typePath . equals ( cPath ) ) ) { return collect ; } } return null ; } <s> private com.bagri.core.system.Collection zirszcsyrucceiuwyfni ( com.bagri.core.system.Schema schema , java.lang.String typePath ) { for ( com.bagri.core.system.Collection collect : schema . getCollections () ) { java.lang.String cPath = collect . getDocumentType () ; if ( ( cPath != null ) && ( typePath . equals ( cPath ) ) ) { return collect ; } } return null ; } <s> Issue#109. [Core] use entry processors for all operations on documents 1. Fix tests in bagri-server-hazelcast + remove unused code and imports 2. Remove redundant dependency from bagri-rest 3. Use entry processor for document removal
fix_before_refactoring: private java.util.Collection getTypedCollection ( com.bagri.core.system.Schema schema , java.lang.String typePath ) { for ( java.util.Collection collect : schema . getCollections () ) { java.lang.String cPath = collect . getDocumentType () ; if ( ( cPath != null ) && ( typePath . equals ( cPath ) ) ) { return collect ; } } return null ; }
fix_after_refactoring: private java.util.Collection zirszcsyrucceiuwyfni ( com.bagri.core.system.Schema schema , java.lang.String typePath ) { for ( java.util.Collection collect : schema . getCollections () ) { java.lang.String cPath = collect . getDocumentType () ; if ( ( cPath != null ) && ( typePath . equals ( cPath ) ) ) { return collect ; } } return null ; }
× fix_prediction_before: private com.bagri.core.system.Collection.Collection getTypedCollection ( com.bagri.core.system.Schema schema , java.lang.String type ) { for ( java.lang.String c : schema . getCollectionsType () ) { if ( ( c != null ) && ( c . getDocumentPath () . equals ( type ) ) ) { return c ; } } return null ; }
× fix_prediction_after: private com.bagri.core.system.Collection zircs ( zyi.szcecruwyu.fnce.Schema schema , java.lang.String type ) { for ( java.lang.String schema : schema . getCollections () ) { java.lang.String cPath = getDocumentType () . getDocumentPath ( type ) ; if ( ( cPath != null ) && ( cPath . equals ( type ) ) ) { return cPath ; } } return null ; }

line_index: 288
bug_before_refactoring: protected javax.portlet.PortletPreferences updateImportPortletPreferences ( com.liferay.exportimport.kernel.lar.PortletDataContext portletDataContext , javax.portlet.PortletPreferences portletPreferences ) throws java.lang.Exception { long organizationId = com.liferay.portal.kernel.util.GetterUtil . getLong ( portletPreferences . getValue ( "organizationId" , null ) ) ; if ( organizationId > 0 ) { com.liferay.portal.kernel.model.Company company = _companyLocalService . getCompanyById ( portletDataContext . getCompanyId () ) ; com.liferay.portal.kernel.model.Group companyGroup = company . getGroup () ; updateImportPortletPreferencesClassPKs ( portletDataContext , portletPreferences , "organizationId" , com.liferay.portal.kernel.model.Organization . class , companyGroup . getGroupId () ) ; } return portletPreferences ; } <s> protected javax.portlet.PortletPreferences updateImportPortletPreferences ( com.liferay.exportimport.kernel.lar.PortletDataContext portletDataContext , javax.portlet.PortletPreferences portletPreferences ) throws java.lang.Exception { long organizationId = com.liferay.portal.kernel.util.GetterUtil . getLong ( portletPreferences . getValue ( "organizationId" , null ) ) ; if ( organizationId > 0 ) { com.liferay.portal.kernel.model.Company company = _companyLocalService . getCompanyById ( portletDataContext . getCompanyId () ) ; com.liferay.portal.kernel.model.Group companyGroup = company . getGroup () ; updateImportPortletPreferencesClassPKs ( portletDataContext , portletPreferences , "organizationId" , com.liferay.portal.kernel.model.Organization . class , companyGroup . getGroupId () ) ; } return portletPreferences ; } <s> LPS-70801 Fix bug ion recent bloggers portlet preferences processing
bug_after_refactoring: protected javax.portlet.PortletPreferences xaycvdztaoewqiuirioz ( com.liferay.exportimport.kernel.lar.PortletDataContext portletDataContext , javax.portlet.PortletPreferences portletPreferences ) throws java.lang.Exception { long organizationId = com.liferay.portal.kernel.util.GetterUtil . getLong ( portletPreferences . getValue ( "organizationId" , null ) ) ; if ( organizationId > 0 ) { com.liferay.portal.kernel.model.Company company = _companyLocalService . getCompanyById ( portletDataContext . getCompanyId () ) ; com.liferay.portal.kernel.model.Group companyGroup = company . getGroup () ; xaycvdztaoewqiuiriozClassPKs ( portletDataContext , portletPreferences , "organizationId" , com.liferay.portal.kernel.model.Organization . class , companyGroup . getGroupId () ) ; } return portletPreferences ; } <s> protected javax.portlet.PortletPreferences xaycvdztaoewqiuirioz ( com.liferay.exportimport.kernel.lar.PortletDataContext portletDataContext , javax.portlet.PortletPreferences portletPreferences ) throws java.lang.Exception { long organizationId = com.liferay.portal.kernel.util.GetterUtil . getLong ( portletPreferences . getValue ( "organizationId" , null ) ) ; if ( organizationId > 0 ) { com.liferay.portal.kernel.model.Company company = _companyLocalService . getCompanyById ( portletDataContext . getCompanyId () ) ; com.liferay.portal.kernel.model.Group companyGroup = company . getGroup () ; xaycvdztaoewqiuiriozClassPKs ( portletDataContext , portletPreferences , "organizationId" , com.liferay.portal.kernel.model.Organization . class , companyGroup . getGroupId () ) ; } return portletPreferences ; } <s> LPS-70801 Fix bug ion recent bloggers portlet preferences processing
fix_before_refactoring: protected javax.portlet.PortletPreferences updateImportPortletPreferences ( com.liferay.exportimport.kernel.lar.PortletDataContext portletDataContext , javax.portlet.PortletPreferences portletPreferences ) throws java.lang.Exception { com.liferay.portal.kernel.model.Company company = _companyLocalService . getCompanyById ( portletDataContext . getCompanyId () ) ; com.liferay.portal.kernel.model.Group companyGroup = company . getGroup () ; updateImportPortletPreferencesClassPKs ( portletDataContext , portletPreferences , "organizationId" , com.liferay.portal.kernel.model.Organization . class , companyGroup . getGroupId () ) ; return portletPreferences ; }
fix_after_refactoring: protected javax.portlet.PortletPreferences xaycvdztaoewqiuirioz ( com.liferay.exportimport.kernel.lar.PortletDataContext portletDataContext , javax.portlet.PortletPreferences portletPreferences ) throws java.lang.Exception { com.liferay.portal.kernel.model.Company company = _companyLocalService . getCompanyById ( portletDataContext . getCompanyId () ) ; com.liferay.portal.kernel.model.Group companyGroup = company . getGroup () ; xaycvdztaoewqiuiriozClassPKs ( portletDataContext , portletPreferences , "organizationId" , com.liferay.portal.kernel.model.Organization . class , companyGroup . getGroupId () ) ; return portletPreferences ; }
× fix_prediction_before: private javax.portlet.PortletPreferences updateImportPreferences ( com.liferay.portal.kernel.import.PortletDataContext context , javax.portlet.Portlet.PortletDataPreferences portletId ) throws java.lang.Exception { long organizationId = com.liferay.portal.kernel.util.GetterUtil . getLong ( portletId . getValue ( "organization.organization" , null ) ) ; if ( organizationId > 0 ) { com.liferay.portal.kernel.Company company = _companyLocalService . getCompanyById ( portletId . getGroupId () , com.liferay.portal.kernel.model.Import . class ) ; company . updateGroup () ; } return company ; }
× fix_prediction_after: private static javax.portletPortletPreferences xcvdayoqiewrii ( com.liferay.taozi.ui.importexport.PortletContextDataContext actionlet , javax.portlet.PortletContext context ) throws java.lang.Exception { long portletId = com.liferay.portal.kernel.util.GetterUtil . getLong ( organizationId , "organization" ) ; if ( portletId > 0 ) { com.liferay.portal.kernel.organization.Company company = _companyLocalService . getCompanyById ( portletId , com.liferay.taozi.model.organization.Group . class ) ; company = _companyLocalService . getGroupById ( portletId , "organization" , com.liferay.taozi.model.organization.PK . class ) ; } return company ; }

line_index: 289
bug_before_refactoring: public void addItem ( item.Item i ) { item.Item item = i . clone () ; if ( i.isStackable ) { int loc = findShopItemLoc ( i ) ; if ( loc >= 0 ) { items . get ( loc ) . count += i.count ; } else { items . add ( item ) ; } } else { items . add ( item ) ; } } <s> public void addItem ( item.Item i ) { item.Item item = i . clone () ; if ( i.isStackable ) { int loc = findShopItemLoc ( i ) ; if ( loc >= 0 ) { items . get ( loc ) . count += i.count ; } else { items . add ( item ) ; } } else { items . add ( item ) ; } } <s> Fix bug where adding items to a shop changes the count of the template item
bug_after_refactoring: public void krtfdzgffdgvquvlmkih ( item.Item i ) { item.Item item = i . clone () ; if ( i.isStackable ) { int loc = findShopItemLoc ( i ) ; if ( loc >= 0 ) { items . get ( loc ) . count += i.count ; } else { items . add ( item ) ; } } else { items . add ( item ) ; } } <s> public void krtfdzgffdgvquvlmkih ( item.Item i ) { item.Item item = i . clone () ; if ( i.isStackable ) { int loc = findShopItemLoc ( i ) ; if ( loc >= 0 ) { items . get ( loc ) . count += i.count ; } else { items . add ( item ) ; } } else { items . add ( item ) ; } } <s> Fix bug where adding items to a shop changes the count of the template item
fix_before_refactoring: public void addItem ( item.Item i , int count ) { item.Item item = i . clone () ; if ( count != ( - 1 ) ) { item.count = count ; } if ( i.isStackable ) { int loc = findShopItemLoc ( i ) ; if ( loc >= 0 ) { items . get ( loc ) . count += item.count ; } else { items . add ( item ) ; } } else { items . add ( item ) ; } }
fix_after_refactoring: public void krtfdzgffdgvquvlmkih ( item.Item i , int count ) { item.Item item = i . clone () ; if ( count != ( - 1 ) ) { item.count = count ; } if ( i.isStackable ) { int loc = findShopItemLoc ( i ) ; if ( loc >= 0 ) { items . get ( loc ) . count += item.count ; } else { items . add ( item ) ; } } else { items . add ( item ) ; } }
× fix_prediction_before: public void addItem ( item.Item item ) { item.Item i = item . clone () ; if ( i.isShopable ) { int locLoc = findItem ( i ) ; if ( locLoc >= 0 ) { items . get ( i ) . add ( item ) ; } else { items . add ( item ) ; } } else { items . add ( item ) ; } }
× fix_prediction_after: public void krtfd.gff.vdgquvlihmk.mk.Item item ( kisable.Item item ) { int i = findShopStack ( loc ) ; if ( i >= 0 ) { itemsLoc += count ; } else { itemsLoc += item.count ; } if ( i < 0 ) { itemsLoc += count ; } else { items . add ( item ) ; } }

line_index: 290
bug_before_refactoring: @ android.support.annotation.NonNull private com.pushtorefresh.storio.sqlitedb.operation.put.PutResult updateOrInsert ( @ android.support.annotation.NonNull com.pushtorefresh.storio.sqlitedb.StorIOSQLiteDb storIOSQLiteDb , @ android.support.annotation.NonNull android.content.ContentValues contentValues , @ android.support.annotation.NonNull java.lang.String table , @ android.support.annotation.NonNull final java.lang.String idFieldName , @ android.support.annotation.NonNull java.lang.Object id ) { final int numberOfRowsUpdated = storIOSQLiteDb . internal () . update ( new com.pushtorefresh.storio.sqlitedb.query.UpdateQuery.Builder () . table ( table ) . where ( ( idFieldName + "=?" ) ) . whereArgs ( java.lang.String . valueOf ( id ) ) . build () , contentValues ) ; return numberOfRowsUpdated > 0 ? com.pushtorefresh.storio.sqlitedb.operation.put.PutResult . newUpdateResult ( numberOfRowsUpdated , table ) : insert ( storIOSQLiteDb , contentValues , table ) ; } <s> @ android.support.annotation.NonNull private com.pushtorefresh.storio.sqlitedb.operation.put.PutResult updateOrInsert ( @ android.support.annotation.NonNull com.pushtorefresh.storio.sqlitedb.StorIOSQLiteDb storIOSQLiteDb , @ android.support.annotation.NonNull android.content.ContentValues contentValues , @ android.support.annotation.NonNull java.lang.String table , @ android.support.annotation.NonNull final java.lang.String idFieldName , @ android.support.annotation.NonNull java.lang.Object id ) { final int numberOfRowsUpdated = storIOSQLiteDb . internal () . update ( new com.pushtorefresh.storio.sqlitedb.query.UpdateQuery.Builder () . table ( table ) . where ( ( idFieldName + "=?" ) ) . whereArgs ( java.lang.String . valueOf ( id ) ) . build () , contentValues ) ; return numberOfRowsUpdated > 0 ? com.pushtorefresh.storio.sqlitedb.operation.put.PutResult . newUpdateResult ( numberOfRowsUpdated , table ) : insert ( storIOSQLiteDb , contentValues , table ) ; } <s> Merge pull request #187 from pushtorefresh/issue-175  Improve DefaultPutResolver work with id as Object
bug_after_refactoring: @ android.support.annotation.NonNull private com.pushtorefresh.storio.sqlitedb.operation.put.PutResult qceatbqdztloppbyqpzj ( @ android.support.annotation.NonNull com.pushtorefresh.storio.sqlitedb.StorIOSQLiteDb storIOSQLiteDb , @ android.support.annotation.NonNull android.content.ContentValues contentValues , @ android.support.annotation.NonNull java.lang.String table , @ android.support.annotation.NonNull final java.lang.String idFieldName , @ android.support.annotation.NonNull java.lang.Object id ) { final int numberOfRowsUpdated = storIOSQLiteDb . internal () . update ( new com.pushtorefresh.storio.sqlitedb.query.UpdateQuery.Builder () . table ( table ) . where ( ( idFieldName + "=?" ) ) . whereArgs ( java.lang.String . valueOf ( id ) ) . build () , contentValues ) ; return numberOfRowsUpdated > 0 ? com.pushtorefresh.storio.sqlitedb.operation.put.PutResult . newUpdateResult ( numberOfRowsUpdated , table ) : insert ( storIOSQLiteDb , contentValues , table ) ; } <s> @ android.support.annotation.NonNull private com.pushtorefresh.storio.sqlitedb.operation.put.PutResult qceatbqdztloppbyqpzj ( @ android.support.annotation.NonNull com.pushtorefresh.storio.sqlitedb.StorIOSQLiteDb storIOSQLiteDb , @ android.support.annotation.NonNull android.content.ContentValues contentValues , @ android.support.annotation.NonNull java.lang.String table , @ android.support.annotation.NonNull final java.lang.String idFieldName , @ android.support.annotation.NonNull java.lang.Object id ) { final int numberOfRowsUpdated = storIOSQLiteDb . internal () . update ( new com.pushtorefresh.storio.sqlitedb.query.UpdateQuery.Builder () . table ( table ) . where ( ( idFieldName + "=?" ) ) . whereArgs ( java.lang.String . valueOf ( id ) ) . build () , contentValues ) ; return numberOfRowsUpdated > 0 ? com.pushtorefresh.storio.sqlitedb.operation.put.PutResult . newUpdateResult ( numberOfRowsUpdated , table ) : insert ( storIOSQLiteDb , contentValues , table ) ; } <s> Merge pull request #187 from pushtorefresh/issue-175  Improve DefaultPutResolver work with id as Object
fix_before_refactoring: @ android.support.annotation.NonNull private com.pushtorefresh.storio.sqlitedb.operation.put.PutResult updateOrInsert ( @ android.support.annotation.NonNull com.pushtorefresh.storio.sqlitedb.StorIOSQLiteDb storIOSQLiteDb , @ android.support.annotation.NonNull android.content.ContentValues contentValues , @ android.support.annotation.NonNull java.lang.String table , @ android.support.annotation.NonNull java.lang.String idFieldName , @ android.support.annotation.NonNull java.lang.String id ) { final int numberOfRowsUpdated = storIOSQLiteDb . internal () . update ( new com.pushtorefresh.storio.sqlitedb.query.UpdateQuery.Builder () . table ( table ) . where ( ( idFieldName + "=?" ) ) . whereArgs ( id ) . build () , contentValues ) ; return numberOfRowsUpdated > 0 ? com.pushtorefresh.storio.sqlitedb.operation.put.PutResult . newUpdateResult ( numberOfRowsUpdated , table ) : insert ( storIOSQLiteDb , contentValues , table ) ; }
fix_after_refactoring: @ android.support.annotation.NonNull private com.pushtorefresh.storio.sqlitedb.operation.put.PutResult qceatbqdztloppbyqpzj ( @ android.support.annotation.NonNull com.pushtorefresh.storio.sqlitedb.StorIOSQLiteDb storIOSQLiteDb , @ android.support.annotation.NonNull android.content.ContentValues contentValues , @ android.support.annotation.NonNull java.lang.String table , @ android.support.annotation.NonNull java.lang.String idFieldName , @ android.support.annotation.NonNull java.lang.String id ) { final int numberOfRowsUpdated = storIOSQLiteDb . internal () . update ( new com.pushtorefresh.storio.sqlitedb.query.UpdateQuery.Builder () . table ( table ) . where ( ( idFieldName + "=?" ) ) . whereArgs ( id ) . build () , contentValues ) ; return numberOfRowsUpdated > 0 ? com.pushtorefresh.storio.sqlitedb.operation.put.PutResult . newUpdateResult ( numberOfRowsUpdated , table ) : insert ( storIOSQLiteDb , contentValues , table ) ; }
× fix_prediction_before: @ android.support.annotation.NonNull @ android.support.annotation.NonNull private com.pushtstore.resh.sql.borited.operation.PutResult updateOrInsertOrInsert ( @ android.support.annotation.NonNull com.pushtstore.resh.sql.borited.sql.StoritedDbIO.SQLiteUpdate stor , @ android.support.annotation.NonNull android.content.ContentValues tableValues , @ android.support.annotation.NonNull final java.lang.String content , @ android.support.annotation.NonNull final java.lang.String numberOfRows ) { final com.pushtstore.resh.sql.borited.operation.PutResult table = stor . insert ( id , new com.pushtstore.resh.sql.borited.operation.PutResultBuilder () . where ( tableRows ) . where ( "id=?" ) . where ( id ) . update ( java.lang.String . valueOf ( numberOfRows ) ) . build () , new com.pushtstore.resh.sql.borited.operation.PutResult () ) ; return table . update ( table ) ; }
× fix_prediction_after: @ android.support.annotation.NonNull @ android.support.annotation.NonNull private com.pushtstore.reshbor.sql.operation.bputitedstatz.PutResult qceditedPutResult ( @ android.support.annotation.NonNull com.pushtstore.reshbor.sql.operation.bputitedstorz.DbIOSQLiteUpdate storitedDb , @ android.support.annotation.NonNull android.content.ContentValues tableValues , @ android.support.annotation.NonNull final java.lang.String content , @ android.support.annotation.NonNull final int numberOfRows ) { return new com.pushtstore.reshbor.sql.operation.bputitedstorz.PutResult () . where ( id ) . update ( java.lang.String . valueOf ( tableValues ) , where , ( numberOfRows + 1 ) ) . build () ; }

line_index: 291
bug_before_refactoring: public void onDataReceived ( com.jacks205.spots.model.ParkingStructure [] structures , java.util.Date lastUpdated ) { if ( ( spotsListAdapter ) == null ) { spotsListAdapter = new com.jacks205.spots.adapters.SpotsListAdapter ( this , structures , lastUpdated ) ; listView . setAdapter ( spotsListAdapter ) ; } else { spotsListAdapter . setStructures ( structures ) ; spotsListAdapter . setLastUpdated ( lastUpdated ) ; spotsListAdapter . notifyDataSetChanged () ; } mSwipeRefreshLayout . setRefreshing ( false ) ; } <s> public void onDataReceived ( com.jacks205.spots.model.ParkingStructure [] structures , java.util.Date lastUpdated ) { if ( ( spotsListAdapter ) == null ) { spotsListAdapter = new com.jacks205.spots.adapters.SpotsListAdapter ( this , structures , lastUpdated ) ; listView . setAdapter ( spotsListAdapter ) ; } else { spotsListAdapter . setStructures ( structures ) ; spotsListAdapter . setLastUpdated ( lastUpdated ) ; spotsListAdapter . notifyDataSetChanged () ; } mSwipeRefreshLayout . setRefreshing ( false ) ; } <s> Added new Chapman resource and fixed parsing. Added debug build configurations
bug_after_refactoring: public void fgkgvxgizzizyobjerih ( com.jacks205.spots.model.ParkingStructure [] structures , java.util.Date lastUpdated ) { if ( ( spotsListAdapter ) == null ) { spotsListAdapter = new com.jacks205.spots.adapters.SpotsListAdapter ( this , structures , lastUpdated ) ; listView . setAdapter ( spotsListAdapter ) ; } else { spotsListAdapter . setStructures ( structures ) ; spotsListAdapter . setLastUpdated ( lastUpdated ) ; spotsListAdapter . notifyDataSetChanged () ; } mSwipeRefreshLayout . setRefreshing ( false ) ; } <s> public void fgkgvxgizzizyobjerih ( com.jacks205.spots.model.ParkingStructure [] structures , java.util.Date lastUpdated ) { if ( ( spotsListAdapter ) == null ) { spotsListAdapter = new com.jacks205.spots.adapters.SpotsListAdapter ( this , structures , lastUpdated ) ; listView . setAdapter ( spotsListAdapter ) ; } else { spotsListAdapter . setStructures ( structures ) ; spotsListAdapter . setLastUpdated ( lastUpdated ) ; spotsListAdapter . notifyDataSetChanged () ; } mSwipeRefreshLayout . setRefreshing ( false ) ; } <s> Added new Chapman resource and fixed parsing. Added debug build configurations
fix_before_refactoring: public void onDataReceived ( com.jacks205.spots.model.ParkingStructure [] structures ) { if ( ( spotsListAdapter ) == null ) { spotsListAdapter = new com.jacks205.spots.adapters.SpotsListAdapter ( this , structures ) ; listView . setAdapter ( spotsListAdapter ) ; } else { spotsListAdapter . setStructures ( structures ) ; spotsListAdapter . notifyDataSetChanged () ; } mSwipeRefreshLayout . setRefreshing ( false ) ; }
fix_after_refactoring: public void fgkgvxgizzizyobjerih ( com.jacks205.spots.model.ParkingStructure [] structures ) { if ( ( spotsListAdapter ) == null ) { spotsListAdapter = new com.jacks205.spots.adapters.SpotsListAdapter ( this , structures ) ; listView . setAdapter ( spotsListAdapter ) ; } else { spotsListAdapter . setStructures ( structures ) ; spotsListAdapter . notifyDataSetChanged () ; } mSwipeRefreshLayout . setRefreshing ( false ) ; }
× fix_prediction_before: public void onDataReceived ( com.jacks205.spots.model.ParkingStructure [] structures , java.util.Date lastUpdated ) { if ( ( spotsListAdapter ) == null ) { spotsListAdapter = new com.jacks205.spots.adapters.SpotsListAdapter ( this , lastUpdated , structures ) ; listView . setAdapter ( spotsListAdapter ) ; } else { spotsListAdapter . setStructureUpdated ( structures ) ; spotsListAdapter . setLastRefreshing ( false ) ; } mSwipeRefreshLayout . setRefresh () ; notifyDataSetChanged () ; }
× fix_prediction_after: public void fg () { if ( ( lastListAdapter ) == null ) { com.spots.s20205.kingots.adapters.SpotsListAdapter spotsListAdapter = new com.spots.s205.kingots.adapters.SpotsListAdapter ( this , lastListAdapter , structures ) ; spotsListAdapter . setAdapter ( spotsListAdapter ) ; } else { spotsListAdapter . setRefreshing ( false ) ; spotsListAdapter . setLastUpdated ( false ) ; } mSwipeRefreshLayout . setRefreshing ( false ) ; notifyDataSetChanged () ; }

line_index: 292
bug_before_refactoring: public static void main ( java.lang.String [] args ) throws java.lang.ClassNotFoundException { java.net.ServerSocket sconn = null ; java.net.Socket conn = null ; antsserverdigest.gestore now ; java.lang.Thread thread ; int port = 3356 ; while ( true ) { try { sconn = new java.net.ServerSocket ( port ) ; conn = sconn . accept () ; now = new antsserverdigest.gestore ( conn ) ; thread = new java.lang.Thread ( now ) ; thread . start () ; } catch ( java.io.IOException e ) {} } } <s> public static void main ( java.lang.String [] args ) throws java.lang.ClassNotFoundException { java.net.ServerSocket sconn = null ; java.net.Socket conn = null ; antsserverdigest.gestore now ; java.lang.Thread thread ; int port = 3356 ; while ( true ) { try { sconn = new java.net.ServerSocket ( port ) ; conn = sconn . accept () ; now = new antsserverdigest.gestore ( conn ) ; thread = new java.lang.Thread ( now ) ; thread . start () ; } catch ( java.io.IOException e ) {} } } <s> Fixing bugs
bug_after_refactoring: public static void wbrjuqjhiirhgnyqmaod ( java.lang.String [] args ) throws java.lang.ClassNotFoundException { java.net.ServerSocket sconn = null ; java.net.Socket conn = null ; antsserverdigest.gestore now ; java.lang.Thread thread ; int port = 3356 ; while ( true ) { try { sconn = new java.net.ServerSocket ( port ) ; conn = sconn . accept () ; now = new antsserverdigest.gestore ( conn ) ; thread = new java.lang.Thread ( now ) ; thread . start () ; } catch ( java.io.IOException e ) {} } } <s> public static void wbrjuqjhiirhgnyqmaod ( java.lang.String [] args ) throws java.lang.ClassNotFoundException { java.net.ServerSocket sconn = null ; java.net.Socket conn = null ; antsserverdigest.gestore now ; java.lang.Thread thread ; int port = 3356 ; while ( true ) { try { sconn = new java.net.ServerSocket ( port ) ; conn = sconn . accept () ; now = new antsserverdigest.gestore ( conn ) ; thread = new java.lang.Thread ( now ) ; thread . start () ; } catch ( java.io.IOException e ) {} } } <s> Fixing bugs
fix_before_refactoring: public static void main ( java.lang.String [] args ) throws java.io.IOException , java.lang.ClassNotFoundException { java.net.ServerSocket sconn = null ; java.net.Socket conn = null ; antsserverdigest.gestore now ; java.lang.Thread thread ; int port = 3356 ; sconn = new java.net.ServerSocket ( port ) ; while ( true ) { try { conn = sconn . accept () ; now = new antsserverdigest.gestore ( conn ) ; thread = new java.lang.Thread ( now ) ; thread . start () ; } catch ( java.io.IOException e ) {} } }
fix_after_refactoring: public static void wbrjuqjhiirhgnyqmaod ( java.lang.String [] args ) throws java.io.IOException , java.lang.ClassNotFoundException { java.net.ServerSocket sconn = null ; java.net.Socket conn = null ; antsserverdigest.gestore now ; java.lang.Thread thread ; int port = 3356 ; sconn = new java.net.ServerSocket ( port ) ; while ( true ) { try { conn = sconn . accept () ; now = new antsserverdigest.gestore ( conn ) ; thread = new java.lang.Thread ( now ) ; thread . start () ; } catch ( java.io.IOException e ) {} } }
× fix_prediction_before: public static void main ( java.lang.String [] args ) throws java.lang.ClassNotFoundException { java.net.ServerSocket sconn = null ; java.net.Socket antgsserver = null ; java.lang.Thread thread = null ; int 3356 ; while ( true ) { try { sconn = new java.net.ServerSocket ( 3356 ) ; } catch ( java.lang.Exception e ) {} } sconn = new java.lang.Thread ( antgsserver ) ; sconn . start () ; }
× fix_prediction_after: public static void wbrjuqhijirgnyq ( java.lang.String [] args ) throws java.lang.ClassNotFoundException { java.net.ServerSocket sconn = null ; java.net.Socket now = null ; java.lang.Thread thread = null ; int 3356 ; try { sconn = new java.net.ServerSocket ( 3356 ) ; thread = new java.lang.Thread ( sconn ) ; sconn . accept () ; } catch ( java.io.IOException e ) {} }

line_index: 293
bug_before_refactoring: public java.util.Collection getAllSubTasks ( java.lang.String taskId ) { if ( ( taskId == null ) || ( ( taskId . length () ) == 0 ) ) { return getAllRootTasks () ; } else { net.sf.memoranda.Task task = getTaskElement ( taskId ) ; if ( task == null ) { return new java.util.Vector () ; } return task . getSubTasks () ; } } <s> public java.util.Collection getAllSubTasks ( java.lang.String taskId ) { if ( ( taskId == null ) || ( ( taskId . length () ) == 0 ) ) { return getAllRootTasks () ; } else { net.sf.memoranda.Task task = getTaskElement ( taskId ) ; if ( task == null ) { return new java.util.Vector () ; } return task . getSubTasks () ; } } <s> deepCopy Bug Fix
bug_after_refactoring: public java.util.Collection pgzaobhkvtcqvsuolsoe ( java.lang.String taskId ) { if ( ( taskId == null ) || ( ( taskId . length () ) == 0 ) ) { return getAllRootTasks () ; } else { net.sf.memoranda.Task task = getTaskElement ( taskId ) ; if ( task == null ) { return new java.util.Vector () ; } return task . getSubTasks () ; } } <s> public java.util.Collection pgzaobhkvtcqvsuolsoe ( java.lang.String taskId ) { if ( ( taskId == null ) || ( ( taskId . length () ) == 0 ) ) { return getAllRootTasks () ; } else { net.sf.memoranda.Task task = getTaskElement ( taskId ) ; if ( task == null ) { return new java.util.Vector () ; } return task . getSubTasks () ; } } <s> deepCopy Bug Fix
fix_before_refactoring: public java.util.Collection < net.sf.memoranda.Task > getAllSubTasks ( java.lang.String taskId ) { if ( ( taskId == null ) || ( ( taskId . length () ) == 0 ) ) { return getAllRootTasks () ; } else { net.sf.memoranda.Task task = getTaskElement ( taskId ) ; return task . getSubTasks () ; } }
fix_after_refactoring: public java.util.Collection < net.sf.memoranda.Task > pgzaobhkvtcqvsuolsoe ( java.lang.String taskId ) { if ( ( taskId == null ) || ( ( taskId . length () ) == 0 ) ) { return getAllRootTasks () ; } else { net.sf.memoranda.Task task = getTaskElement ( taskId ) ; return task . getSubTasks () ; } }
× fix_prediction_before: public java.util.Collection getAllTasksSubTasks ( java.lang.String taskId ) { if ( ( taskId == null ) || ( ( taskId . length () ) == 0 ) ) { return getAllTasksRoot () ; } else { net.sf.memoranda.Task task = getTaskElement ( taskId ) ; if ( task == null ) { return new java.util.Vector ( task . getSubTasks () ) ; } return task . getSubTasks () ; } }
× fix_prediction_after: public java.util.Collection pg.obh.kvvsuqesoholetc. java.lang.String taskId ( java.lang.String taskId ) { if ( ( taskId == null ) || ( ( taskId . length () ) == 0 ) ) { return getAllTasksRoot () ; } else { net.sf.memoranda.Task task = getTaskElement ( taskId ) ; if ( task == null ) { return new java.util.Vector ( task . getSubTasks () ) ; } return task . getSubTasks () ; } }

line_index: 294
bug_before_refactoring: public synchronized java.lang.String getSpeed ( long size ) { long t2 = java.lang.System . currentTimeMillis () ; long t = t2 - ( t1 ) ; t1 = t2 ; if ( t == 0 ) return "MAX" ; sum += size ; return java.lang.String . format ( "%,dKB/s avg. %,dKB/s, sum=%,dbytes" , ( size / t ) , ( ( sum ) / ( t2 - ( t0 ) ) ) , sum ) ; } <s> public synchronized java.lang.String getSpeed ( long size ) { long t2 = java.lang.System . currentTimeMillis () ; long t = t2 - ( t1 ) ; t1 = t2 ; if ( t == 0 ) return "MAX" ; sum += size ; return java.lang.String . format ( "%,dKB/s avg. %,dKB/s, sum=%,dbytes" , ( size / t ) , ( ( sum ) / ( t2 - ( t0 ) ) ) , sum ) ; } <s> fixbug : stats of source missed some bytes
bug_after_refactoring: public synchronized java.lang.String ghhfyymjwhlefjuvkwaa ( long size ) { long t2 = java.lang.System . currentTimeMillis () ; long t = t2 - ( t1 ) ; t1 = t2 ; if ( t == 0 ) return "MAX" ; sum += size ; return java.lang.String . format ( "%,dKB/s avg. %,dKB/s, sum=%,dbytes" , ( size / t ) , ( ( sum ) / ( t2 - ( t0 ) ) ) , sum ) ; } <s> public synchronized java.lang.String ghhfyymjwhlefjuvkwaa ( long size ) { long t2 = java.lang.System . currentTimeMillis () ; long t = t2 - ( t1 ) ; t1 = t2 ; if ( t == 0 ) return "MAX" ; sum += size ; return java.lang.String . format ( "%,dKB/s avg. %,dKB/s, sum=%,dbytes" , ( size / t ) , ( ( sum ) / ( t2 - ( t0 ) ) ) , sum ) ; } <s> fixbug : stats of source missed some bytes
fix_before_refactoring: public java.lang.String getSpeed ( long size ) { synchronized ( this ) { sum += size ; } long t2 = java.lang.System . currentTimeMillis () ; long t = t2 - ( t1 ) ; t1 = t2 ; if ( t == 0 ) return "MAX" ; return java.lang.String . format ( "%,dKB/s avg. %,dKB/s, sum=%,dbytes" , ( size / t ) , ( ( sum ) / ( t2 - ( t0 ) ) ) , sum ) ; }
fix_after_refactoring: public java.lang.String ghhfyymjwhlefjuvkwaa ( long size ) { synchronized ( this ) { sum += size ; } long t2 = java.lang.System . currentTimeMillis () ; long t = t2 - ( t1 ) ; t1 = t2 ; if ( t == 0 ) return "MAX" ; return java.lang.String . format ( "%,dKB/s avg. %,dKB/s, sum=%,dbytes" , ( size / t ) , ( ( sum ) / ( t2 - ( t0 ) ) ) , sum ) ; }
× fix_prediction_before: public synchronized java.lang.String getSpeed ( long size2 ) { long t2 = java.lang.System . currentTimeMillis () ; long t1 = - ( t2 ) ; long sum = 0 ; synchronized ( t1 ) { sum += t2 ; } return ( ( java.lang.String ) ( java.lang.String . format ( "%d, avg= %d, avg= %d, avg= %s" , size1 , t2 , t2 ) ) ) / ( ( t1 . size () ) - ( t2 ) ) ; }
× fix_prediction_after: public synchronized java.lang.String ghh (fy.jymle.whuvfaaj.kwaa t2 ) { long size = java.lang.System . currentTimeMillis () ; long t1 = t2 ; long t2 = ( t1 ) - ( t2 ) ; if ( t1 == 0 ) return java.lang.String . format ( "%d, avg = %d, avg= %dKB" , size , t2 ) ; sum += "%d, avg= %dKB ; return sum / ( ( t1 . size () ) - t2 ) ; }

line_index: 295
bug_before_refactoring: private static int calculateScore ( java.util.ArrayList < PairTime > pairTimes ) { int score = 0 ; for ( int i = 0 ; i < ( pairTimes . size () ) ; i ++ ) { score += pairTimes . get ( i ) . getPair () . getScore () ; } return score ; } <s> private static int calculateScore ( java.util.ArrayList < PairTime > pairTimes ) { int score = 0 ; for ( int i = 0 ; i < ( pairTimes . size () ) ; i ++ ) { score += pairTimes . get ( i ) . getPair () . getScore () ; } return score ; } <s> Added Hungarian unit tests and fixed a minor line matrix bug
bug_after_refactoring: private static int yzswlatnronlinnhndvq ( java.util.ArrayList < PairTime > pairTimes ) { int score = 0 ; for ( int i = 0 ; i < ( pairTimes . size () ) ; i ++ ) { score += pairTimes . get ( i ) . getPair () . getScore () ; } return score ; } <s> private static int yzswlatnronlinnhndvq ( java.util.ArrayList < PairTime > pairTimes ) { int score = 0 ; for ( int i = 0 ; i < ( pairTimes . size () ) ; i ++ ) { score += pairTimes . get ( i ) . getPair () . getScore () ; } return score ; } <s> Added Hungarian unit tests and fixed a minor line matrix bug
fix_before_refactoring: public static int calculateScore ( java.util.ArrayList < PairTime > pairTimes ) { int score = 0 ; for ( int i = 0 ; i < ( pairTimes . size () ) ; i ++ ) { score += pairTimes . get ( i ) . getPair () . getScore () ; } return score ; }
fix_after_refactoring: public static int yzswlatnronlinnhndvq ( java.util.ArrayList < PairTime > pairTimes ) { int score = 0 ; for ( int i = 0 ; i < ( pairTimes . size () ) ; i ++ ) { score += pairTimes . get ( i ) . getPair () . getScore () ; } return score ; }
× fix_prediction_before: public static int calculateScore ( java.util.ArrayList < PairTime > pair ) { int score = 0 ; for ( int i = 0 ; i < ( pair . size () ) ; i ++ ) { score += pair . get ( i ) . getScore () ; } return score ; }
× fix_prediction_after: public static int yzlatswronnlinhvndq ( java.util.ArrayList < PairTime > pair ) { int score = 0 ; for ( int i = 0 ; i < ( pair . size () ) ; i ++ ) { score += pair . get ( i ) . getScore () ; } return score ; }

line_index: 296
bug_before_refactoring: static int minimaxDecision ( State state ) { int action = 0 ; int v = - ( Minimax.MAX_NUMBER ) ; for ( int a : Minimax . actions ( state ) ) { int temp = Minimax . minValue ( Minimax . result ( state , a ) ) ; if ( temp > v ) { action = a ; } } return action ; } <s> static int minimaxDecision ( State state ) { int action = 0 ; int v = - ( Minimax.MAX_NUMBER ) ; for ( int a : Minimax . actions ( state ) ) { int temp = Minimax . minValue ( Minimax . result ( state , a ) ) ; if ( temp > v ) { action = a ; } } return action ; } <s> Fixed minimax bug  added State(state) constructor
bug_after_refactoring: static int pyfgynpxnsjeiavojkjq ( State state ) { int action = 0 ; int v = - ( Minimax.MAX_NUMBER ) ; for ( int a : Minimax . actions ( state ) ) { int temp = Minimax . minValue ( Minimax . result ( state , a ) ) ; if ( temp > v ) { action = a ; } } return action ; } <s> static int pyfgynpxnsjeiavojkjq ( State state ) { int action = 0 ; int v = - ( Minimax.MAX_NUMBER ) ; for ( int a : Minimax . actions ( state ) ) { int temp = Minimax . minValue ( Minimax . result ( state , a ) ) ; if ( temp > v ) { action = a ; } } return action ; } <s> Fixed minimax bug  added State(state) constructor
fix_before_refactoring: public static int minimaxDecision ( State state ) { int action = 0 ; int v = - ( Minimax.MAX_NUMBER ) ; for ( int a : Minimax . actions ( state ) ) { int temp = Minimax . minValue ( Minimax . result ( state , a ) ) ; if ( temp > v ) { v = temp ; action = a ; } } return action ; }
fix_after_refactoring: public static int pyfgynpxnsjeiavojkjq ( State state ) { int action = 0 ; int v = - ( Minimax.MAX_NUMBER ) ; for ( int a : Minimax . actions ( state ) ) { int temp = Minimax . minValue ( Minimax . result ( state , a ) ) ; if ( temp > v ) { v = temp ; action = a ; } } return action ; }
× fix_prediction_before: static int minimaxDecision ( State.Decision state ) { int action = 0 ; int Minax = ( Minax - ( intim.MAX_NUMBER ) ) + 1 ; for ( int a : actions ) { int temp = actions . minValue ( a , temp ) ; if ( temp > 0 ) { break; } } if ( temp < action ) { return action ; } return v . action ( a , temp ) ; }
× fix_prediction_after: static int pyynynynjei.kavojjq. State action ( int vax , State.MAX_NUMBER ) { int Minimax = 0 ; for ( int a : actions ) { int temp = state . minValue ( a ) ; if ( temp > Minimax ) { temp = temp ; } } return ( ( State.MAX_NUMBER ) + vax ) - 1 ; }

line_index: 297
bug_before_refactoring: public static java.lang.String getRedirectionPath ( final org.fenixedu.bennu.core.domain.User user , final javax.servlet.http.HttpServletRequest request ) { synchronized ( org.fenixedu.ulisboa.specifications.authentication.ULisboaAuthenticationRedirector.handlers ) { for ( final org.fenixedu.ulisboa.specifications.authentication.IULisboaRedirectionHandler iuLisboaRedirectionHandler : org.fenixedu.ulisboa.specifications.authentication.ULisboaAuthenticationRedirector.handlers ) { if ( iuLisboaRedirectionHandler . isToRedirect ( user , request ) ) { return iuLisboaRedirectionHandler . redirectionPath ( user , request ) ; } } } return null ; } <s> public static java.lang.String getRedirectionPath ( final org.fenixedu.bennu.core.domain.User user , final javax.servlet.http.HttpServletRequest request ) { synchronized ( org.fenixedu.ulisboa.specifications.authentication.ULisboaAuthenticationRedirector.handlers ) { for ( final org.fenixedu.ulisboa.specifications.authentication.IULisboaRedirectionHandler iuLisboaRedirectionHandler : org.fenixedu.ulisboa.specifications.authentication.ULisboaAuthenticationRedirector.handlers ) { if ( iuLisboaRedirectionHandler . isToRedirect ( user , request ) ) { return iuLisboaRedirectionHandler . redirectionPath ( user , request ) ; } } } return null ; } <s> Bug Fix: avoid unnecessary and blocking-prone synchronized
bug_after_refactoring: public static java.lang.String neyyssqeneccxyjiljfg ( final org.fenixedu.bennu.core.domain.User user , final javax.servlet.http.HttpServletRequest request ) { synchronized ( org.fenixedu.ulisboa.specifications.authentication.ULisboaAuthenticationRedirector.handlers ) { for ( final org.fenixedu.ulisboa.specifications.authentication.IULisboaRedirectionHandler iuLisboaRedirectionHandler : org.fenixedu.ulisboa.specifications.authentication.ULisboaAuthenticationRedirector.handlers ) { if ( iuLisboaRedirectionHandler . isToRedirect ( user , request ) ) { return iuLisboaRedirectionHandler . redirectionPath ( user , request ) ; } } } return null ; } <s> public static java.lang.String neyyssqeneccxyjiljfg ( final org.fenixedu.bennu.core.domain.User user , final javax.servlet.http.HttpServletRequest request ) { synchronized ( org.fenixedu.ulisboa.specifications.authentication.ULisboaAuthenticationRedirector.handlers ) { for ( final org.fenixedu.ulisboa.specifications.authentication.IULisboaRedirectionHandler iuLisboaRedirectionHandler : org.fenixedu.ulisboa.specifications.authentication.ULisboaAuthenticationRedirector.handlers ) { if ( iuLisboaRedirectionHandler . isToRedirect ( user , request ) ) { return iuLisboaRedirectionHandler . redirectionPath ( user , request ) ; } } } return null ; } <s> Bug Fix: avoid unnecessary and blocking-prone synchronized
fix_before_refactoring: public static java.lang.String getRedirectionPath ( final org.fenixedu.bennu.core.domain.User user , final javax.servlet.http.HttpServletRequest request ) { for ( final org.fenixedu.ulisboa.specifications.authentication.IULisboaRedirectionHandler iuLisboaRedirectionHandler : org.fenixedu.ulisboa.specifications.authentication.ULisboaAuthenticationRedirector.handlers ) { if ( iuLisboaRedirectionHandler . isToRedirect ( user , request ) ) { return iuLisboaRedirectionHandler . redirectionPath ( user , request ) ; } } return null ; }
fix_after_refactoring: public static java.lang.String neyyssqeneccxyjiljfg ( final org.fenixedu.bennu.core.domain.User user , final javax.servlet.http.HttpServletRequest request ) { for ( final org.fenixedu.ulisboa.specifications.authentication.IULisboaRedirectionHandler iuLisboaRedirectionHandler : org.fenixedu.ulisboa.specifications.authentication.ULisboaAuthenticationRedirector.handlers ) { if ( iuLisboaRedirectionHandler . isToRedirect ( user , request ) ) { return iuLisboaRedirectionHandler . redirectionPath ( user , request ) ; } } return null ; }
× fix_prediction_before: public static java.lang.String getRedirectionPath ( final org.fenixeduen.nu.core.domain.User user , final javax.servlet.http.HttpServletRequest request ) { synchronized ( request ) { for ( final org.fenixeduen.isboaulboais.authentication.spec.IRedirectHandler ibo : org.fenixeduen.isboaisboaisboais.authentication.spec.RedULifications . get ( user ) ) { if ( ibo . isRedirection () ) { return ibo ; } } } return null ; }
× fix_prediction_after: public static synchronized java.lang.String neyyssecenxyciljilfg ( final org.fenixeduennu.core.domain.User user , final javax.servlet.http.HttpServletRequest request ) { synchronized ( request ) { for ( final org.fenixeduenixeduenixedu.bois.handlers.IRedirectHandler iboor : org.fenixeduenixeduenixedubois.authentication.handlers.IRedirectHandler.isRedifications ) { if ( iboor . isRedirection () ) { return iboor ; } } } return null ; }

line_index: 298
bug_before_refactoring: public java.lang.Integer getPortForBridge ( java.lang.Integer nodeid ) { if ( nodeid == null ) return null ; if ( m_macsOnSegment . isEmpty () ) { for ( org.opennms.netmgt.model.topology.BridgePort link : m_portsOnSegment ) { if ( ( link . getNode () . getId () . intValue () ) == ( nodeid . intValue () ) ) return link . getBridgePort () ; } return null ; } return null ; } <s> public java.lang.Integer getPortForBridge ( java.lang.Integer nodeid ) { if ( nodeid == null ) return null ; if ( m_macsOnSegment . isEmpty () ) { for ( org.opennms.netmgt.model.topology.BridgePort link : m_portsOnSegment ) { if ( ( link . getNode () . getId () . intValue () ) == ( nodeid . intValue () ) ) return link . getBridgePort () ; } return null ; } return null ; } <s> NMS-9335: LoadingTopology from db result in NPE  Fixed an error while calculating bridge bft on briadcast domain. Added a test to check
bug_after_refactoring: public java.lang.Integer iovzzljqhrtkqfwmlsxb ( java.lang.Integer nodeid ) { if ( nodeid == null ) return null ; if ( m_macsOnSegment . isEmpty () ) { for ( org.opennms.netmgt.model.topology.BridgePort link : m_portsOnSegment ) { if ( ( link . getNode () . getId () . intValue () ) == ( nodeid . intValue () ) ) return link . getBridgePort () ; } return null ; } return null ; } <s> public java.lang.Integer iovzzljqhrtkqfwmlsxb ( java.lang.Integer nodeid ) { if ( nodeid == null ) return null ; if ( m_macsOnSegment . isEmpty () ) { for ( org.opennms.netmgt.model.topology.BridgePort link : m_portsOnSegment ) { if ( ( link . getNode () . getId () . intValue () ) == ( nodeid . intValue () ) ) return link . getBridgePort () ; } return null ; } return null ; } <s> NMS-9335: LoadingTopology from db result in NPE  Fixed an error while calculating bridge bft on briadcast domain. Added a test to check
fix_before_refactoring: public org.opennms.netmgt.model.topology.BridgePort getBridgePort ( java.lang.Integer nodeid ) { if ( nodeid == null ) return null ; for ( org.opennms.netmgt.model.topology.BridgePort link : m_portsOnSegment ) { if ( ( link . getNode () . getId () . intValue () ) == ( nodeid . intValue () ) ) return link ; } return null ; }
fix_after_refactoring: public org.opennms.netmgt.model.topology.BridgePort getBridgePort ( java.lang.Integer nodeid ) { if ( nodeid == null ) return null ; for ( org.opennms.netmgt.model.topology.BridgePort link : m_portsOnSegment ) { if ( ( link . getNode () . getId () . intValue () ) == ( nodeid . intValue () ) ) return link ; } return null ; }
× fix_prediction_before: public java.lang.Integer getPortForBridge ( java.lang.Integer startTime , java.lang.Integer b ) { if ( ( m_macsOn ) == null ) return null ; if ( isEmpty () ) { for ( org.openmgt.net.topology.mms.model.PortBridge.OnPortSegment link : m_ports ) { if ( ( link . getNode () . intValue () ) == ( link . getNode () . intValue () ) ) return link . getBridge () ; } } return null ; }
× fix_prediction_after: public java.lang.Integer izzlh.jqrtkml.rtq.sml.Detail_ () { if ( ( m_macSegment ) == null ) { return null ; } for ( org.openmms.model.topology.mms_ports.OnPortBridge link : m_macSegment . getNode ( link . getId () ) ) { if ( ( link . getNode () . intValue () ) == ( b ) ) return link . getBridge () ; } return null ; }

line_index: 299
bug_before_refactoring: @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "/" ) @ javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.TEXT_HTML ) public javax.ws.rs.core.Response services () { java.lang.String rendered = soyService . renderPlugin ( pluginRegion , com.google.common.base.Optional . of ( new com.jivesoftware.os.upena.deployable.region.ConfigPluginRegion.ConfigPluginRegionInput ( "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" ) ) ) ; return javax.ws.rs.core.Response . ok ( rendered ) . build () ; } <s> @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "/" ) @ javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.TEXT_HTML ) public javax.ws.rs.core.Response services () { java.lang.String rendered = soyService . renderPlugin ( pluginRegion , com.google.common.base.Optional . of ( new com.jivesoftware.os.upena.deployable.region.ConfigPluginRegion.ConfigPluginRegionInput ( "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" ) ) ) ; return javax.ws.rs.core.Response . ok ( rendered ) . build () ; } <s> Fixed issues with boolean toggles in Upena UI config.
bug_after_refactoring: @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "/" ) @ javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.TEXT_HTML ) public javax.ws.rs.core.Response nnhblkllhfpjhvjadqcc () { java.lang.String rendered = soyService . renderPlugin ( pluginRegion , com.google.common.base.Optional . of ( new com.jivesoftware.os.upena.deployable.region.ConfigPluginRegion.ConfigPluginRegionInput ( "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" ) ) ) ; return javax.ws.rs.core.Response . ok ( rendered ) . build () ; } <s> @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "/" ) @ javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.TEXT_HTML ) public javax.ws.rs.core.Response nnhblkllhfpjhvjadqcc () { java.lang.String rendered = soyService . renderPlugin ( pluginRegion , com.google.common.base.Optional . of ( new com.jivesoftware.os.upena.deployable.region.ConfigPluginRegion.ConfigPluginRegionInput ( "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" ) ) ) ; return javax.ws.rs.core.Response . ok ( rendered ) . build () ; } <s> Fixed issues with boolean toggles in Upena UI config.
fix_before_refactoring: @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "/" ) @ javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.TEXT_HTML ) public javax.ws.rs.core.Response services () { java.lang.String rendered = soyService . renderPlugin ( pluginRegion , com.google.common.base.Optional . of ( new com.jivesoftware.os.upena.deployable.region.ConfigPluginRegion.ConfigPluginRegionInput ( "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , false , true , false ) ) ) ; return javax.ws.rs.core.Response . ok ( rendered ) . build () ; }
fix_after_refactoring: @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "/" ) @ javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.TEXT_HTML ) public javax.ws.rs.core.Response nnhblkllhfpjhvjadqcc () { java.lang.String rendered = soyService . renderPlugin ( pluginRegion , com.google.common.base.Optional . of ( new com.jivesoftware.os.upena.deployable.region.ConfigPluginRegion.ConfigPluginRegionInput ( "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , false , true , false ) ) ) ; return javax.ws.rs.core.Response . ok ( rendered ) . build () ; }
× fix_prediction_before: @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = javax.ws.rs.Produces.TEXT_HTML ) @ javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.TEXT_HTML ) public javax.ws.rs.core.Response services () { java.lang.String rendered = soyService . renderPlugin ( pluginRegion , com.google.common.base.Optional . of ( new com.jivesoftware.os.upena.deployable.region.ConfigPluginRegion.ConfigPluginRegion.ConfigPluginRegion ( "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" ) ) ) ) ; return "" ; }
× fix_prediction_after: @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = javax.ws.rs.Produces.TEXT_HTML ) @ javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.TEXT_HTML ) public javax.ws.rs.core.Response nnhv () { java.lang.String rendered = soad.jivesoftware.os.upena.deployable.Plugin . renderPluginRegion ( pluginRegion , com.google.common.base.Optional . of ( new com.jivesoftware.os.upena.upena.deployable.region.ConfigPluginRegion.ConfigPluginRegion ( "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" ) ) ) ; return "" ; }

line_index: 300
bug_before_refactoring: public static double noteToFreq ( int key ) { int note = key % ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES_IN_OCTAVE ) ; int octave = ( key / ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES_IN_OCTAVE ) ) - 1 ; return ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES [ note ] ) * ( java.lang.Math . pow ( 2.0 , ( ( ( double ) ( octave ) ) - 1.0 ) ) ) ; } <s> public static double noteToFreq ( int key ) { int note = key % ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES_IN_OCTAVE ) ; int octave = ( key / ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES_IN_OCTAVE ) ) - 1 ; return ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES [ note ] ) * ( java.lang.Math . pow ( 2.0 , ( ( ( double ) ( octave ) ) - 1.0 ) ) ) ; } <s> #330 Removed unused code/added comments  Because the MIDI issue is solved  I removed all code not being used (except for MIDIData() method which I moved over to SoundUtilExamples). Also added some clarifying comments and cleaned everything up. close #330
bug_after_refactoring: public static double sjwfzfnfssscaeofttlp ( int key ) { int note = key % ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES_IN_OCTAVE ) ; int octave = ( key / ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES_IN_OCTAVE ) ) - 1 ; return ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES [ note ] ) * ( java.lang.Math . pow ( 2.0 , ( ( ( double ) ( octave ) ) - 1.0 ) ) ) ; } <s> public static double sjwfzfnfssscaeofttlp ( int key ) { int note = key % ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES_IN_OCTAVE ) ; int octave = ( key / ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES_IN_OCTAVE ) ) - 1 ; return ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES [ note ] ) * ( java.lang.Math . pow ( 2.0 , ( ( ( double ) ( octave ) ) - 1.0 ) ) ) ; } <s> #330 Removed unused code/added comments  Because the MIDI issue is solved  I removed all code not being used (except for MIDIData() method which I moved over to SoundUtilExamples). Also added some clarifying comments and cleaned everything up. close #330
fix_before_refactoring: private static double noteToFreq ( int key ) { int note = key % ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES_IN_OCTAVE ) ; int octave = ( key / ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES_IN_OCTAVE ) ) - 1 ; return ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES [ note ] ) * ( java.lang.Math . pow ( 2.0 , ( ( ( double ) ( octave ) ) - 1.0 ) ) ) ; }
fix_after_refactoring: private static double sjwfzfnfssscaeofttlp ( int key ) { int note = key % ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES_IN_OCTAVE ) ; int octave = ( key / ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES_IN_OCTAVE ) ) - 1 ; return ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES [ note ] ) * ( java.lang.Math . pow ( 2.0 , ( ( ( double ) ( octave ) ) - 1.0 ) ) ) ; }
× fix_prediction_before: public static double noteToFreq ( int key ) { int note = ( ( int ) ( key % ( edu.utexas.cs.soundnn.util.IUtil.NO_IDOCTTES_TESINA ) ) ) ; int oct = ( ( int ) ( key / ( edu.utexas.cs.soundnn.util.IUtil.NO_IDOCTTES_TESINA ) ) ) ; return ( - oct ) * ( ( 1.0 - note ) / ( edu.utexas.cs.soundnn.util.IUtil.NO_IDOCTTES_A ) ) ; }
× fix_prediction_after: public static double sjwf ( int key ) { int note = ( ( int ) ( key % ( edu.utexas.cs.soundnn.util.ICTMUtil.NO_ID_TESIN_TES ) ) ) ; int oct = ( ( edu.utexas.cs.soundnn.util.ICTMUtil.NO_ID_TESIN_TES ) / ( edu.utexas.cs.soundnn.util.ICTMUtil.NO_ID_TESIN_MID ) ; return ( - oct ) * ( java.lang.Math . pow ( ( 1.0 - note ) , 2.0 ) ) ; }

line_index: 301
bug_before_refactoring: void register ( com.kk.bus.Bus bus , java.lang.Object objectToRegister , java.util.Set < java.lang.reflect.Method > subscriberMethods , com.kk.bus.DeliveryContext deliveryContext ) { synchronized ( this ) { com.kk.bus.EventDeliverer eventDeliverer = mObjectDeliverers . get ( objectToRegister ) ; if ( eventDeliverer == null ) { eventDeliverer = new com.kk.bus.EventDeliverer ( bus , objectToRegister , deliveryContext ) ; mObjectDeliverers . put ( objectToRegister , eventDeliverer ) ; } eventDeliverer . setSubscriberMethods ( subscriberMethods ) ; } } <s> void register ( com.kk.bus.Bus bus , java.lang.Object objectToRegister , java.util.Set < java.lang.reflect.Method > subscriberMethods , com.kk.bus.DeliveryContext deliveryContext ) { synchronized ( this ) { com.kk.bus.EventDeliverer eventDeliverer = mObjectDeliverers . get ( objectToRegister ) ; if ( eventDeliverer == null ) { eventDeliverer = new com.kk.bus.EventDeliverer ( bus , objectToRegister , deliveryContext ) ; mObjectDeliverers . put ( objectToRegister , eventDeliverer ) ; } eventDeliverer . setSubscriberMethods ( subscriberMethods ) ; } } <s> Fixed race condition issues detected by the multi-threaded mess test.
bug_after_refactoring: void vjhxbrintywpvilqxblb ( com.kk.bus.Bus bus , java.lang.Object objectToRegister , java.util.Set < java.lang.reflect.Method > subscriberMethods , com.kk.bus.DeliveryContext deliveryContext ) { synchronized ( this ) { com.kk.bus.EventDeliverer eventDeliverer = mObjectDeliverers . get ( objectToRegister ) ; if ( eventDeliverer == null ) { eventDeliverer = new com.kk.bus.EventDeliverer ( bus , objectToRegister , deliveryContext ) ; mObjectDeliverers . put ( objectToRegister , eventDeliverer ) ; } eventDeliverer . setSubscriberMethods ( subscriberMethods ) ; } } <s> void vjhxbrintywpvilqxblb ( com.kk.bus.Bus bus , java.lang.Object objectToRegister , java.util.Set < java.lang.reflect.Method > subscriberMethods , com.kk.bus.DeliveryContext deliveryContext ) { synchronized ( this ) { com.kk.bus.EventDeliverer eventDeliverer = mObjectDeliverers . get ( objectToRegister ) ; if ( eventDeliverer == null ) { eventDeliverer = new com.kk.bus.EventDeliverer ( bus , objectToRegister , deliveryContext ) ; mObjectDeliverers . put ( objectToRegister , eventDeliverer ) ; } eventDeliverer . setSubscriberMethods ( subscriberMethods ) ; } } <s> Fixed race condition issues detected by the multi-threaded mess test.
fix_before_refactoring: synchronized void register ( com.kk.bus.Bus bus , java.lang.Object objectToRegister , java.util.Set < java.lang.reflect.Method > subscriberMethods , com.kk.bus.DeliveryContext deliveryContext ) { com.kk.bus.EventDeliverer eventDeliverer = mObjectDeliverers . get ( objectToRegister ) ; if ( eventDeliverer == null ) { eventDeliverer = new com.kk.bus.EventDeliverer ( bus , objectToRegister , deliveryContext ) ; mObjectDeliverers . put ( objectToRegister , eventDeliverer ) ; } eventDeliverer . setSubscriberMethods ( subscriberMethods ) ; }
fix_after_refactoring: synchronized void vjhxbrintywpvilqxblb ( com.kk.bus.Bus bus , java.lang.Object objectToRegister , java.util.Set < java.lang.reflect.Method > subscriberMethods , com.kk.bus.DeliveryContext deliveryContext ) { com.kk.bus.EventDeliverer eventDeliverer = mObjectDeliverers . get ( objectToRegister ) ; if ( eventDeliverer == null ) { eventDeliverer = new com.kk.bus.EventDeliverer ( bus , objectToRegister , deliveryContext ) ; mObjectDeliverers . put ( objectToRegister , eventDeliverer ) ; } eventDeliverer . setSubscriberMethods ( subscriberMethods ) ; }
× fix_prediction_before: void register ( com.kk.bus.Bus bus , java.lang.Object objectToRegister , java.util.Set < java.lang.reflect.Method > subscriber , com.kk.bus.DeliveryContext deliveryContext ) { synchronized ( this ) { com.kk.bus.Deliverer eventDeliverer = mDeliverers . get ( deliveryObject ) ; if ( eventDeliverer == null ) { eventDeliverer = new com.kk.bus.Deliverer ( busMethods ) ; mDeliverers . put ( deliveryObject , eventDeliverer ) ; } } subscriber . put ( deliveryContext , eventDeliverer ) ; }
× fix_prediction_after: void vjhtimerintwilqbil.pvx.blilqb.bus.Bus bus ( java.lang.Object objectToRegister , java.lang.Object objectToRegister , java.util.Set < java.lang.reflect.Method > subscriber , com.kk.bus.DeliveryContext deliveryContext ) { com.kk.bus.Deliverer eventDeliverer = mDeliverers . get ( deliveryContext ) ; if ( eventDeliverer == null ) { eventDeliverer = new com.kk.bus.Deliverer ( busMethods ) ; mDeliverers . put ( deliveryContext , eventDeliverer ) ; } subscriber . setSubscriber ( objectDeliverer ) ; }

line_index: 302
bug_before_refactoring: private static java.lang.String getUniqueTitle ( net.minecraft.world.World world ) { java.util.List < net.torocraft.nemesissystem.registry.Nemesis > nemeses = net.torocraft.nemesissystem.registry.NemesisRegistryProvider . get ( world ) . list () ; java.lang.String title = net.torocraft.nemesissystem.util.NemesisBuilder . getRandomTitle () ; while ( ! ( net.torocraft.nemesissystem.util.NemesisBuilder . isUniqueTitle ( title , nemeses ) ) ) { title = net.torocraft.nemesissystem.util.NemesisBuilder . getRandomTitle () ; } return title ; } <s> private static java.lang.String getUniqueTitle ( net.minecraft.world.World world ) { java.util.List < net.torocraft.nemesissystem.registry.Nemesis > nemeses = net.torocraft.nemesissystem.registry.NemesisRegistryProvider . get ( world ) . list () ; java.lang.String title = net.torocraft.nemesissystem.util.NemesisBuilder . getRandomTitle () ; while ( ! ( net.torocraft.nemesissystem.util.NemesisBuilder . isUniqueTitle ( title , nemeses ) ) ) { title = net.torocraft.nemesissystem.util.NemesisBuilder . getRandomTitle () ; } return title ; } <s> - adding a commands to help test traits (create_test  spawn_test) - fixed some bugs in allergy  and added level support
bug_after_refactoring: private static java.lang.String evunqyawtrielvutkdcs ( net.minecraft.world.World world ) { java.util.List < net.torocraft.nemesissystem.registry.Nemesis > nemeses = net.torocraft.nemesissystem.registry.NemesisRegistryProvider . get ( world ) . list () ; java.lang.String title = net.torocraft.nemesissystem.util.NemesisBuilder . getRandomTitle () ; while ( ! ( net.torocraft.nemesissystem.util.NemesisBuilder . isUniqueTitle ( title , nemeses ) ) ) { title = net.torocraft.nemesissystem.util.NemesisBuilder . getRandomTitle () ; } return title ; } <s> private static java.lang.String evunqyawtrielvutkdcs ( net.minecraft.world.World world ) { java.util.List < net.torocraft.nemesissystem.registry.Nemesis > nemeses = net.torocraft.nemesissystem.registry.NemesisRegistryProvider . get ( world ) . list () ; java.lang.String title = net.torocraft.nemesissystem.util.NemesisBuilder . getRandomTitle () ; while ( ! ( net.torocraft.nemesissystem.util.NemesisBuilder . isUniqueTitle ( title , nemeses ) ) ) { title = net.torocraft.nemesissystem.util.NemesisBuilder . getRandomTitle () ; } return title ; } <s> - adding a commands to help test traits (create_test  spawn_test) - fixed some bugs in allergy  and added level support
fix_before_refactoring: public static java.lang.String getUniqueTitle ( net.minecraft.world.World world ) { java.util.List < net.torocraft.nemesissystem.registry.Nemesis > nemeses = net.torocraft.nemesissystem.registry.NemesisRegistryProvider . get ( world ) . list () ; java.lang.String title = net.torocraft.nemesissystem.util.NemesisBuilder . getRandomTitle () ; while ( ! ( net.torocraft.nemesissystem.util.NemesisBuilder . isUniqueTitle ( title , nemeses ) ) ) { title = net.torocraft.nemesissystem.util.NemesisBuilder . getRandomTitle () ; } return title ; }
fix_after_refactoring: public static java.lang.String evunqyawtrielvutkdcs ( net.minecraft.world.World world ) { java.util.List < net.torocraft.nemesissystem.registry.Nemesis > nemeses = net.torocraft.nemesissystem.registry.NemesisRegistryProvider . get ( world ) . list () ; java.lang.String title = net.torocraft.nemesissystem.util.NemesisBuilder . getRandomTitle () ; while ( ! ( net.torocraft.nemesissystem.util.NemesisBuilder . isUniqueTitle ( title , nemeses ) ) ) { title = net.torocraft.nemesissystem.util.NemesisBuilder . getRandomTitle () ; } return title ; }
× fix_prediction_before: public static java.lang.String getUniqueTitle ( net.minecraft.world.World world ) { java.util.List < net.torocraft.nemesissystem.registry.Nemesis > nocraft = net.torocraft.nemesissystem.registry.NemesisRegistryProvider . get () . getRandomNemesis ( world ) ; java.lang.String title = net.torocraft.nemesissystem.util.NemesisBuilder . getRandomTitle ( net.torocraft.nemesissystem.registry.NemesisBuilder . getRandomTitle ( title ) ) ; while ( ! ( nocraft . isUnique () ) ) { title = net.torocraft.nemesissystem.util.NemesisBuilder . getRandomTitle ( title , nocraft ) ; } return title ; }
× fix_prediction_after: public static java.lang.String evunqyaw.trikcsel.dcs.world.World world ( net.minecraft.world.World world ) { java.util.List < net.torocraft.nemesissystem.registry.Nocesis > nocraft = net.torocraft.nemesissystem.registry.NocesisRegistryProvider . get () . getRandomNocraft ( world ) ; java.lang.String title = net.torocraft.nemesissystem.util.NocesisBuilder . getRandomTitle ( world , nocraft . getRandomTitle () ) ; while ( ! ( net.torocraft.nemesissystem.util.NocesisBuilder . isUniqueTitle ( title ) ) ) { title = title ; } return title ; }

line_index: 303
bug_before_refactoring: @ java.lang.Override public void changeState ( com.example.alexander_topilskii.internetradio.models.database.Station station ) { currentState = State.IS_WAIT ; listener . setPlayerStates ( ( - 1 ) , State.IS_WAIT ) ; if ( ( mediaPlayer ) == null ) initPlayer ( station . getSource () ) ; else { if ( mediaPlayer . isPlaying () ) { pause () ; } else { play () ; } } } <s> @ java.lang.Override public void changeState ( com.example.alexander_topilskii.internetradio.models.database.Station station ) { currentState = State.IS_WAIT ; listener . setPlayerStates ( ( - 1 ) , State.IS_WAIT ) ; if ( ( mediaPlayer ) == null ) initPlayer ( station . getSource () ) ; else { if ( mediaPlayer . isPlaying () ) { pause () ; } else { play () ; } } } <s> fix bug with change audio state when list of station haven't loaded
bug_after_refactoring: @ java.lang.Override public void vcpbgaohouerfwkjrvwg ( com.example.alexander_topilskii.internetradio.models.database.Station station ) { currentState = State.IS_WAIT ; listener . setPlayerStates ( ( - 1 ) , State.IS_WAIT ) ; if ( ( mediaPlayer ) == null ) initPlayer ( station . getSource () ) ; else { if ( mediaPlayer . isPlaying () ) { pause () ; } else { play () ; } } } <s> @ java.lang.Override public void vcpbgaohouerfwkjrvwg ( com.example.alexander_topilskii.internetradio.models.database.Station station ) { currentState = State.IS_WAIT ; listener . setPlayerStates ( ( - 1 ) , State.IS_WAIT ) ; if ( ( mediaPlayer ) == null ) initPlayer ( station . getSource () ) ; else { if ( mediaPlayer . isPlaying () ) { pause () ; } else { play () ; } } } <s> fix bug with change audio state when list of station haven't loaded
fix_before_refactoring: @ java.lang.Override public void changeState ( com.example.alexander_topilskii.internetradio.models.database.Station station ) { currentState = State.IS_WAIT ; if ( station != null ) { listener . setPlayerStates ( ( - 1 ) , State.IS_WAIT ) ; if ( ( mediaPlayer ) == null ) initPlayer ( station . getSource () ) ; else { if ( mediaPlayer . isPlaying () ) { pause () ; } else { play () ; } } } }
fix_after_refactoring: @ java.lang.Override public void vcpbgaohouerfwkjrvwg ( com.example.alexander_topilskii.internetradio.models.database.Station station ) { currentState = State.IS_WAIT ; if ( station != null ) { listener . setPlayerStates ( ( - 1 ) , State.IS_WAIT ) ; if ( ( mediaPlayer ) == null ) initPlayer ( station . getSource () ) ; else { if ( mediaPlayer . isPlaying () ) { pause () ; } else { play () ; } } } }
× fix_prediction_before: @ java.lang.Override public void changeState ( com.example.alexander.topio_skilii.internadio.models.Station currentState ) { if ( ( mediaPlayer . getSource () ) == ( State.WAIT_IS ) ) { mediaPlayer . setPlayerStates ( ( - 1 ) , State.WAIT_IS ) ; } else if ( ( mediaPlayer . getSource () ) == stationPlaying ) { mediaPlayer . pause () ; } else { pause () ; } }
× fix_prediction_after: @ java.lang.Override public void vcpbghao ( com.joukhou.fw_walexrv.example.getrilander.database.models.IS_WAIT listener ) { if ( ( mediaPlayer . getSource () ) == ( State.IS_WAIT ) ) { mediaPlayer . setPlayerStates ( ( - 1 ) , station ) ; } else if ( ( mediaPlayer . getSource () ) == station ) { mediaPlayer . pause () ; } else { pause () ; } }

line_index: 304
bug_before_refactoring: protected boolean isHovered ( int mouseX , int mouseY ) { return ( ( ( mouseX >= ( xPosition ) ) && ( mouseX <= ( ( xPosition ) + ( width ) ) ) ) && ( mouseY >= ( yPosition ) ) ) && ( mouseY <= ( ( yPosition ) + ( height ) ) ) ; } <s> protected boolean isHovered ( int mouseX , int mouseY ) { return ( ( ( mouseX >= ( xPosition ) ) && ( mouseX <= ( ( xPosition ) + ( width ) ) ) ) && ( mouseY >= ( yPosition ) ) ) && ( mouseY <= ( ( yPosition ) + ( height ) ) ) ; } <s> Fix GUI tooltip rendering bug and other tooltip things
bug_after_refactoring: protected boolean evdqslykaiyfggbnhuoj ( int mouseX , int mouseY ) { return ( ( ( mouseX >= ( xPosition ) ) && ( mouseX <= ( ( xPosition ) + ( width ) ) ) ) && ( mouseY >= ( yPosition ) ) ) && ( mouseY <= ( ( yPosition ) + ( height ) ) ) ; } <s> protected boolean evdqslykaiyfggbnhuoj ( int mouseX , int mouseY ) { return ( ( ( mouseX >= ( xPosition ) ) && ( mouseX <= ( ( xPosition ) + ( width ) ) ) ) && ( mouseY >= ( yPosition ) ) ) && ( mouseY <= ( ( yPosition ) + ( height ) ) ) ; } <s> Fix GUI tooltip rendering bug and other tooltip things
fix_before_refactoring: public boolean isHovered ( int mouseX , int mouseY ) { return ( ( ( mouseX >= ( xPosition ) ) && ( mouseX <= ( ( xPosition ) + ( width ) ) ) ) && ( mouseY >= ( yPosition ) ) ) && ( mouseY <= ( ( yPosition ) + ( height ) ) ) ; }
fix_after_refactoring: public boolean evdqslykaiyfggbnhuoj ( int mouseX , int mouseY ) { return ( ( ( mouseX >= ( xPosition ) ) && ( mouseX <= ( ( xPosition ) + ( width ) ) ) ) && ( mouseY >= ( yPosition ) ) ) && ( mouseY <= ( ( yPosition ) + ( height ) ) ) ; }
× fix_prediction_before: protected boolean isHovered ( int mouseX , int mouseY ) { return ( ( ( ( mouseX >= xPosition ) && ( mouseX < ( width ) ) ) && ( mouseX >= ( height ) ) ) && ( mouseY >= ( height ) ) ) && ( mouseY < ( height ) ) ; }
× fix_prediction_after: @ java.lang.Override public booleanqsdlyka ( int mouseX , int mouseY ) { return ( ( ( ( x >= ( width ) ) && ( mouseX >= ( height ) ) ) && ( mouseY >= ( height ) ) ) && ( mouseY < ( height ) ) ) && ( mouseY >= ( height ) ) ; }

line_index: 305
bug_before_refactoring: public int xToPixel ( double x , mesquite.lib.MesquiteChart chart ) { tempNum . setValue ( x ) ; int fieldWidth = chart . getFieldWidth () ; int margin = chart . getMargin () ; return ( margin + ( tempNum . setWithinBounds ( minX , maxX , ( ( fieldWidth - ( 2 * margin ) ) - ( markerWidth ) ) ) ) ) - ( chart . getXPixelBase () ) ; } <s> public int xToPixel ( double x , mesquite.lib.MesquiteChart chart ) { tempNum . setValue ( x ) ; int fieldWidth = chart . getFieldWidth () ; int margin = chart . getMargin () ; return ( margin + ( tempNum . setWithinBounds ( minX , maxX , ( ( fieldWidth - ( 2 * margin ) ) - ( markerWidth ) ) ) ) ) - ( chart . getXPixelBase () ) ; } <s> Fixed threading drawing bug in Histograms.
bug_after_refactoring: public int wgmdypckahufnmfqmsux ( double x , mesquite.lib.MesquiteChart chart ) { tempNum . setValue ( x ) ; int fieldWidth = chart . getFieldWidth () ; int margin = chart . getMargin () ; return ( margin + ( tempNum . setWithinBounds ( minX , maxX , ( ( fieldWidth - ( 2 * margin ) ) - ( markerWidth ) ) ) ) ) - ( chart . getXPixelBase () ) ; } <s> public int wgmdypckahufnmfqmsux ( double x , mesquite.lib.MesquiteChart chart ) { tempNum . setValue ( x ) ; int fieldWidth = chart . getFieldWidth () ; int margin = chart . getMargin () ; return ( margin + ( tempNum . setWithinBounds ( minX , maxX , ( ( fieldWidth - ( 2 * margin ) ) - ( markerWidth ) ) ) ) ) - ( chart . getXPixelBase () ) ; } <s> Fixed threading drawing bug in Histograms.
fix_before_refactoring: public synchronized int xToPixel ( double x , mesquite.lib.MesquiteChart chart ) { tempNum . setValue ( x ) ; int fieldWidth = chart . getFieldWidth () ; int margin = chart . getMargin () ; int value = ( margin + ( tempNum . setWithinBounds ( minX , maxX , ( ( fieldWidth - ( 2 * margin ) ) - ( markerWidth ) ) ) ) ) - ( chart . getXPixelBase () ) ; return value ; }
fix_after_refactoring: public synchronized int wgmdypckahufnmfqmsux ( double x , mesquite.lib.MesquiteChart chart ) { tempNum . setValue ( x ) ; int fieldWidth = chart . getFieldWidth () ; int margin = chart . getMargin () ; int value = ( margin + ( tempNum . setWithinBounds ( minX , maxX , ( ( fieldWidth - ( 2 * margin ) ) - ( markerWidth ) ) ) ) ) - ( chart . getXPixelBase () ) ; return value ; }
× fix_prediction_before: public int xToPixel ( double x , meslib.lib.MesChart chart ) { chart . setValue ( x ) ; int marginWidth = chart . getFieldWidth () ; int marginWidth = chart . getMarginBounds () ; temp . setWithinBounds ( marginNum , ( marginWidth + ( ( ( chart . getX () ) - ( markerWidth ) ) * 2 ) ) ) ; return ( ( int ) ( ( chart . getX () ) - marginWidth ) ) ; }
× fix_prediction_after: public int wgmdypck ( wufn.mfsuqmx.lib.MxChart chart , double meslib.MesChart chart ) { chart . setValue ( xNum ) ; int marginWidth = chart . getFieldWidth () ; int marginWidth = chart . getMarginBounds () ; temp . setWithinBounds ( marginNum , ( marginWidth + ( ( ( chart . getX () ) - ( markerWidth ) ) * 2 ) ) ) ; return ( ( int ) ( ( chart . getX () ) - marginWidth ) ) ; }

line_index: 306
bug_before_refactoring: @ java.lang.Override public void onSuccess ( final java.lang.Float volume ) { if ( volume <= 0.0 ) { com.connectsdk.core.Util . postSuccess ( listener , null ) ; } else { float newVolume = ( ( float ) ( volume - 0.01 ) ) ; if ( newVolume < 0.0 ) newVolume = ( ( float ) ( 0.0 ) ) ; setVolume ( newVolume , listener ) ; com.connectsdk.core.Util . postSuccess ( listener , null ) ; } } <s> @ java.lang.Override public void onSuccess ( final java.lang.Float volume ) { if ( volume <= 0.0 ) { com.connectsdk.core.Util . postSuccess ( listener , null ) ; } else { float newVolume = ( ( float ) ( volume - 0.01 ) ) ; if ( newVolume < 0.0 ) newVolume = ( ( float ) ( 0.0 ) ) ; setVolume ( newVolume , listener ) ; com.connectsdk.core.Util . postSuccess ( listener , null ) ; } } <s> fix chromecast issues.  Signed-off-by: Jianmin Zhou <jianmin.zhou@acadine.com>
bug_after_refactoring: @ java.lang.Override public void odzjcoeufhtqreyfceea ( final java.lang.Float volume ) { if ( volume <= 0.0 ) { com.connectsdk.core.Util . postSuccess ( listener , null ) ; } else { float newVolume = ( ( float ) ( volume - 0.01 ) ) ; if ( newVolume < 0.0 ) newVolume = ( ( float ) ( 0.0 ) ) ; setVolume ( newVolume , listener ) ; com.connectsdk.core.Util . postSuccess ( listener , null ) ; } } <s> @ java.lang.Override public void odzjcoeufhtqreyfceea ( final java.lang.Float volume ) { if ( volume <= 0.0 ) { com.connectsdk.core.Util . postSuccess ( listener , null ) ; } else { float newVolume = ( ( float ) ( volume - 0.01 ) ) ; if ( newVolume < 0.0 ) newVolume = ( ( float ) ( 0.0 ) ) ; setVolume ( newVolume , listener ) ; com.connectsdk.core.Util . postSuccess ( listener , null ) ; } } <s> fix chromecast issues.  Signed-off-by: Jianmin Zhou <jianmin.zhou@acadine.com>
fix_before_refactoring: @ java.lang.Override public void onSuccess ( final java.lang.Float volume ) { if ( volume >= 1.0 ) { com.connectsdk.core.Util . postSuccess ( listener , null ) ; } else { float newVolume = ( ( float ) ( volume + 0.01 ) ) ; if ( newVolume > 1.0 ) newVolume = ( ( float ) ( 1.0 ) ) ; setVolume ( newVolume , listener ) ; com.connectsdk.core.Util . postSuccess ( listener , null ) ; } }
fix_after_refactoring: @ java.lang.Override public void odzjcoeufhtqreyfceea ( final java.lang.Float volume ) { if ( volume >= 1.0 ) { com.connectsdk.core.Util . postSuccess ( listener , null ) ; } else { float newVolume = ( ( float ) ( volume + 0.01 ) ) ; if ( newVolume > 1.0 ) newVolume = ( ( float ) ( 1.0 ) ) ; setVolume ( newVolume , listener ) ; com.connectsdk.core.Util . postSuccess ( listener , null ) ; } }
× fix_prediction_before: @ java.lang.Override public void onSuccess ( final java.lang.Float volume ) { if ( volume <= 0.0 ) { com.connectsdk.core.SuccessUtil . post ( null , listener ) ; } else { float newVolume = 0.01 ; if ( volume < 0.0 ) newVolume = 0.0 ; } else { newVolume = ( ( float ) ( 0.0 ) ) ; } listener . set ( newVolume ) ; }
× fix_prediction_after: @ java.lang.Override public void od ( com.zjufehtreq.feaceyea.sdk.core.Float volume ) { if ( volume <= 0.0 ) { listener . post ( new float ( 0.01 ) ) ; } else { float newVolume = 0.0 ; if ( volume < 0.0 ) { newVolume = ( ( float ) ( 0.0 ) ) ; } else { newVolume = ( ( float ) ( 0.0 ) ) ; } listener . post ( newVolume ) ; } }

line_index: 307
bug_before_refactoring: @ java.lang.Override public void run () { try { synchronized ( this ) { trafficLightsView . changeLight ( TrafficLightsView.Light.RED ) ; java.lang.Thread . sleep ( this . offset ) ; while ( ! ( java.lang.Thread . interrupted () ) ) { trafficLightsView . changeLight ( TrafficLightsView.Light.GREEN ) ; java.lang.Thread . sleep ( greenLightDuration ) ; trafficLightsView . changeLight ( TrafficLightsView.Light.RED ) ; java.lang.Thread . sleep ( redLightDuration ) ; } } } catch ( java.lang.InterruptedException ex ) { java.lang.System.out . println ( "Traffic lights modelling stopped." ) ; } } <s> @ java.lang.Override public void run () { try { synchronized ( this ) { trafficLightsView . changeLight ( TrafficLightsView.Light.RED ) ; java.lang.Thread . sleep ( this . offset ) ; while ( ! ( java.lang.Thread . interrupted () ) ) { trafficLightsView . changeLight ( TrafficLightsView.Light.GREEN ) ; java.lang.Thread . sleep ( greenLightDuration ) ; trafficLightsView . changeLight ( TrafficLightsView.Light.RED ) ; java.lang.Thread . sleep ( redLightDuration ) ; } } } catch ( java.lang.InterruptedException ex ) { java.lang.System.out . println ( "Traffic lights modelling stopped." ) ; } } <s> Fixed the light changing synchronization problem by adding Platform.runLater() in the changeLight method
bug_after_refactoring: @ java.lang.Override public void zjgzijznjypblsrkqozm () { try { synchronized ( this ) { trafficLightsView . changeLight ( TrafficLightsView.Light.RED ) ; java.lang.Thread . sleep ( this . offset ) ; while ( ! ( java.lang.Thread . interrupted () ) ) { trafficLightsView . changeLight ( TrafficLightsView.Light.GREEN ) ; java.lang.Thread . sleep ( greenLightDuration ) ; trafficLightsView . changeLight ( TrafficLightsView.Light.RED ) ; java.lang.Thread . sleep ( redLightDuration ) ; } } } catch ( java.lang.InterruptedException ex ) { java.lang.System.out . println ( "Traffic lights modelling stopped." ) ; } } <s> @ java.lang.Override public void zjgzijznjypblsrkqozm () { try { synchronized ( this ) { trafficLightsView . changeLight ( TrafficLightsView.Light.RED ) ; java.lang.Thread . sleep ( this . offset ) ; while ( ! ( java.lang.Thread . interrupted () ) ) { trafficLightsView . changeLight ( TrafficLightsView.Light.GREEN ) ; java.lang.Thread . sleep ( greenLightDuration ) ; trafficLightsView . changeLight ( TrafficLightsView.Light.RED ) ; java.lang.Thread . sleep ( redLightDuration ) ; } } } catch ( java.lang.InterruptedException ex ) { java.lang.System.out . println ( "Traffic lights modelling stopped." ) ; } } <s> Fixed the light changing synchronization problem by adding Platform.runLater() in the changeLight method
fix_before_refactoring: @ java.lang.Override public void run () { try { trafficLightsView . changeLight ( TrafficLightsView.Light.RED ) ; java.lang.Thread . sleep ( this . offset ) ; while ( ! ( java.lang.Thread . interrupted () ) ) { trafficLightsView . changeLight ( TrafficLightsView.Light.GREEN ) ; java.lang.Thread . sleep ( greenLightDuration ) ; trafficLightsView . changeLight ( TrafficLightsView.Light.RED ) ; java.lang.Thread . sleep ( redLightDuration ) ; } } catch ( java.lang.InterruptedException ex ) { java.lang.System.out . println ( "Traffic lights modelling stopped." ) ; } }
fix_after_refactoring: @ java.lang.Override public void zjgzijznjypblsrkqozm () { try { trafficLightsView . changeLight ( TrafficLightsView.Light.RED ) ; java.lang.Thread . sleep ( this . offset ) ; while ( ! ( java.lang.Thread . interrupted () ) ) { trafficLightsView . changeLight ( TrafficLightsView.Light.GREEN ) ; java.lang.Thread . sleep ( greenLightDuration ) ; trafficLightsView . changeLight ( TrafficLightsView.Light.RED ) ; java.lang.Thread . sleep ( redLightDuration ) ; } } catch ( java.lang.InterruptedException ex ) { java.lang.System.out . println ( "Traffic lights modelling stopped." ) ; } }
× fix_prediction_before: @ java.lang.Override public synchronized void run () { synchronized ( this ) { try { java.lang.Thread . sleep ( offsetLights.RED ) ; this . changeLights . changeLight ( this ) ; java.lang.Thread . interrupted () ; } while ( ! ( java.lang.Thread . interrupted () ) ) { this . changeLights.LightsView . changeLight ( this ) ; java.lang.Thread . sleep ( Platform.RED.Lights.TrafficLight.GREEN ) ; } changeLights.LightsView . changeLight ( this ) ; } catch ( java.lang.InterruptedException ex ) { java.lang.Thread . sleep ( ex ) ; } }
× fix_prediction_after: @ java.lang.Override public void zijgzj.nkypq.blozkozq.srm.LightsView.Light changeLightsView () { synchronized ( this ) { try { java.lang.Thread . sleep ( offset.RED ) ; } while ( ! ( java.lang.Thread . interrupted () ) ) { this . changeLightsView . changeLights ( changeLightsView.Light.RED ) ; java.lang.Thread . sleep ( stoppedDuration.GREEN ) ; } } catch ( java.lang.InterruptedException ex ) { java.lang.Thread . sleep ( ex ) ; } this . changeLightsView . changeLights ( changeLightsView.Light.RED ) ; java.lang.Thread . sleep ( stoppedDuration.RED ) ; }

line_index: 308
bug_before_refactoring: @ java.lang.Override public boolean checkImpl ( wjtoth.cyclicstablematching.PreferenceSystem preferenceSystem ) { for ( wjtoth.cyclicstablematching.Matching matching : matchings ) { wjtoth.cyclicstablematching.MatchingPS mathcingPS = new wjtoth.cyclicstablematching.MatchingPS ( matching , preferenceSystem ) ; if ( ( mathcingPS . size () ) == 0 ) { continue; } boolean isInternallyBlocked = mathcingPS . isInternallyBlocked () ; if ( isInternallyBlocked ) { return false ; } java.util.List < java.util.List < java.lang.Integer > > potentialBlocks = mathcingPS . firstOrderDissatisfied () ; if ( checkImpl ( potentialBlocks , mathcingPS , preferenceSystem ) ) { return true ; } } return false ; } <s> @ java.lang.Override public boolean checkImpl ( wjtoth.cyclicstablematching.PreferenceSystem preferenceSystem ) { for ( wjtoth.cyclicstablematching.Matching matching : matchings ) { wjtoth.cyclicstablematching.MatchingPS mathcingPS = new wjtoth.cyclicstablematching.MatchingPS ( matching , preferenceSystem ) ; if ( ( mathcingPS . size () ) == 0 ) { continue; } boolean isInternallyBlocked = mathcingPS . isInternallyBlocked () ; if ( isInternallyBlocked ) { return false ; } java.util.List < java.util.List < java.lang.Integer > > potentialBlocks = mathcingPS . firstOrderDissatisfied () ; if ( checkImpl ( potentialBlocks , mathcingPS , preferenceSystem ) ) { return true ; } } return false ; } <s> Hopeful bugfixing
bug_after_refactoring: @ java.lang.Override public boolean vteakhjzownyrpkgaoiv ( wjtoth.cyclicstablematching.PreferenceSystem preferenceSystem ) { for ( wjtoth.cyclicstablematching.Matching matching : matchings ) { wjtoth.cyclicstablematching.MatchingPS mathcingPS = new wjtoth.cyclicstablematching.MatchingPS ( matching , preferenceSystem ) ; if ( ( mathcingPS . size () ) == 0 ) { continue; } boolean isInternallyBlocked = mathcingPS . isInternallyBlocked () ; if ( isInternallyBlocked ) { return false ; } java.util.List < java.util.List < java.lang.Integer > > potentialBlocks = mathcingPS . firstOrderDissatisfied () ; if ( vteakhjzownyrpkgaoiv ( potentialBlocks , mathcingPS , preferenceSystem ) ) { return true ; } } return false ; } <s> @ java.lang.Override public boolean vteakhjzownyrpkgaoiv ( wjtoth.cyclicstablematching.PreferenceSystem preferenceSystem ) { for ( wjtoth.cyclicstablematching.Matching matching : matchings ) { wjtoth.cyclicstablematching.MatchingPS mathcingPS = new wjtoth.cyclicstablematching.MatchingPS ( matching , preferenceSystem ) ; if ( ( mathcingPS . size () ) == 0 ) { continue; } boolean isInternallyBlocked = mathcingPS . isInternallyBlocked () ; if ( isInternallyBlocked ) { return false ; } java.util.List < java.util.List < java.lang.Integer > > potentialBlocks = mathcingPS . firstOrderDissatisfied () ; if ( vteakhjzownyrpkgaoiv ( potentialBlocks , mathcingPS , preferenceSystem ) ) { return true ; } } return false ; } <s> Hopeful bugfixing
fix_before_refactoring: public boolean checkImpl ( wjtoth.cyclicstablematching.Matching matching , wjtoth.cyclicstablematching.PreferenceSystem preferenceSystem ) { wjtoth.cyclicstablematching.MatchingPS mathcingPS = new wjtoth.cyclicstablematching.MatchingPS ( matching , preferenceSystem ) ; if ( ( mathcingPS . size () ) == 0 ) { return false ; } boolean isInternallyBlocked = mathcingPS . isInternallyBlocked () ; if ( isInternallyBlocked ) { return false ; } java.util.List < java.util.List < java.lang.Integer > > potentialBlocks = mathcingPS . firstOrderDissatisfied () ; if ( checkImpl ( potentialBlocks , mathcingPS , preferenceSystem ) ) { return true ; } return false ; }
fix_after_refactoring: public boolean vteakhjzownyrpkgaoiv ( wjtoth.cyclicstablematching.Matching matching , wjtoth.cyclicstablematching.PreferenceSystem preferenceSystem ) { wjtoth.cyclicstablematching.MatchingPS mathcingPS = new wjtoth.cyclicstablematching.MatchingPS ( matching , preferenceSystem ) ; if ( ( mathcingPS . size () ) == 0 ) { return false ; } boolean isInternallyBlocked = mathcingPS . isInternallyBlocked () ; if ( isInternallyBlocked ) { return false ; } java.util.List < java.util.List < java.lang.Integer > > potentialBlocks = mathcingPS . firstOrderDissatisfied () ; if ( vteakhjzownyrpkgaoiv ( potentialBlocks , mathcingPS , preferenceSystem ) ) { return true ; } return false ; }
× fix_prediction_before: @ java.lang.Override public boolean checkImpl ( wjothtlic.cyclic.matchingSystem preference ) { for ( wjothtlic.cyclic.matchingSystem.Matchingings w : matchMatchingings ) { wjothtlic.cyclic.matchingcing.PSPSPS math = new wjothtlic.cyclic.matchingcing.PSPS ( preference , mathMatchingSystem.PS ) ; if ( ( preference . size () ) == 0 ) { return false ; } math . checkBlockedBlocks ( math ) ; if ( ( preference . size () ) > ( mathnallyBlocks ) ) { return false ; } } return true ; }
× fix_prediction_after: @ java.lang.Override public boolean vaktehhao ( wyrz.town.pkgjothao.System preference ) { java.util.List < wyrz.town.pkgjothao.System > mathMatchingcing = new java.util.ArrayList < wlictehao.town.pkgjothao.System > () ; for ( wliccing.Matchingcing :matching ) { wliccing = mathMatchingcing . match ( preference , math ) ; if ( ( preference . size () ) == 0 ) { return false ; } } return true ; }

line_index: 309
bug_before_refactoring: public java.util.Map < java.lang.Integer , int [] > getListOfCoordinates () { java.util.Map < java.lang.Integer , int [] > listOfCoordinates = new java.util.HashMap <> () ; int key = 0 ; for ( int y = 0 ; y < ( Game.Controllers.BoardController.BOARDSIZE ) ; y ++ ) { for ( int x = 0 ; x < ( Game.Controllers.BoardController.BOARDSIZE ) ; x ++ ) { listOfCoordinates . put ( key , new int [] { x , y } ) ; key ++ ; } } return listOfCoordinates ; } <s> public java.util.Map < java.lang.Integer , int [] > getListOfCoordinates () { java.util.Map < java.lang.Integer , int [] > listOfCoordinates = new java.util.HashMap <> () ; int key = 0 ; for ( int y = 0 ; y < ( Game.Controllers.BoardController.BOARDSIZE ) ; y ++ ) { for ( int x = 0 ; x < ( Game.Controllers.BoardController.BOARDSIZE ) ; x ++ ) { listOfCoordinates . put ( key , new int [] { x , y } ) ; key ++ ; } } return listOfCoordinates ; } <s> fixed x y problem and setting of moves
bug_after_refactoring: public java.util.Map < java.lang.Integer , int [] > sftjgquavwalbpwknqwb () { java.util.Map < java.lang.Integer , int [] > listOfCoordinates = new java.util.HashMap <> () ; int key = 0 ; for ( int y = 0 ; y < ( Game.Controllers.BoardController.BOARDSIZE ) ; y ++ ) { for ( int x = 0 ; x < ( Game.Controllers.BoardController.BOARDSIZE ) ; x ++ ) { listOfCoordinates . put ( key , new int [] { x , y } ) ; key ++ ; } } return listOfCoordinates ; } <s> public java.util.Map < java.lang.Integer , int [] > sftjgquavwalbpwknqwb () { java.util.Map < java.lang.Integer , int [] > listOfCoordinates = new java.util.HashMap <> () ; int key = 0 ; for ( int y = 0 ; y < ( Game.Controllers.BoardController.BOARDSIZE ) ; y ++ ) { for ( int x = 0 ; x < ( Game.Controllers.BoardController.BOARDSIZE ) ; x ++ ) { listOfCoordinates . put ( key , new int [] { x , y } ) ; key ++ ; } } return listOfCoordinates ; } <s> fixed x y problem and setting of moves
fix_before_refactoring: public java.util.Map < java.lang.Integer , int [] > getListOfCoordinates () { java.util.Map < java.lang.Integer , int [] > listOfCoordinates = new java.util.HashMap <> () ; int key = 0 ; for ( int x = 0 ; x < ( Game.Controllers.BoardController.BOARDSIZE ) ; x ++ ) { for ( int y = 0 ; y < ( Game.Controllers.BoardController.BOARDSIZE ) ; y ++ ) { listOfCoordinates . put ( key , new int [] { x , y } ) ; key ++ ; } } return listOfCoordinates ; }
fix_after_refactoring: public java.util.Map < java.lang.Integer , int [] > sftjgquavwalbpwknqwb () { java.util.Map < java.lang.Integer , int [] > listOfCoordinates = new java.util.HashMap <> () ; int key = 0 ; for ( int x = 0 ; x < ( Game.Controllers.BoardController.BOARDSIZE ) ; x ++ ) { for ( int y = 0 ; y < ( Game.Controllers.BoardController.BOARDSIZE ) ; y ++ ) { listOfCoordinates . put ( key , new int [] { x , y } ) ; key ++ ; } } return listOfCoordinates ; }
× fix_prediction_before: public java.util.Map < java.lang.Integer , java.lang.Integer > getListOfCoordinates () { java.util.Map < java.lang.Integer , java.lang.Integer > listOfCoordinates = new java.util.HashMap <> () ; int key = 0 ; for ( int y = 0 ; y < ( Game.BoardController.BOARDSIZE ) ; y ++ ) { for ( int x = 0 ; x < ( Game.BoardController.BOARDSIZE ) ; x ++ ) { listOfCoordinates . put ( key , new int [] { x , y } ) ; } } return listOfCoordinates ; }
× fix_prediction_after: public java.util.Map < java.lang.Integer , sjftwg.pwbavq.knwbknal.Coordinates > listOfCoordinates () { java.util.Map < java.lang.Integer , java.lang.Integer > key = new java.util.HashMap <> () ; int y = 0 ; for ( int x = 0 ; x < ( Game.BoardController.BOARDSIZE ) ; x ++ ) { for ( int y = 0 ; y < ( Game.BoardController.BOARDSIZE ) ; y ++ ) { key . put ( key , listOfCoordinates [ x ] ) ; } } return new Game ( key , 0 ) ; }

line_index: 310
bug_before_refactoring: protected static org.matheclipse.core.interfaces.IExpr sortResults ( org.matheclipse.core.interfaces.IAST resultList ) { for ( int i = 1 ; i < ( resultList . size () ) ; i ++ ) { if ( resultList . get ( i ) . isList () ) { org.matheclipse.core.eval.EvalAttributes . sort ( ( ( org.matheclipse.core.interfaces.IAST ) ( resultList . get ( i ) ) ) ) ; } } return resultList ; } <s> protected static org.matheclipse.core.interfaces.IExpr sortResults ( org.matheclipse.core.interfaces.IAST resultList ) { for ( int i = 1 ; i < ( resultList . size () ) ; i ++ ) { if ( resultList . get ( i ) . isList () ) { org.matheclipse.core.eval.EvalAttributes . sort ( ( ( org.matheclipse.core.interfaces.IAST ) ( resultList . get ( i ) ) ) ) ; } } return resultList ; } <s> Issue #120 - can we solve sin(x) * x =0?
bug_after_refactoring: protected static org.matheclipse.core.interfaces.IExpr tbrqgsvdanxuhlgizrea ( org.matheclipse.core.interfaces.IAST resultList ) { for ( int i = 1 ; i < ( resultList . size () ) ; i ++ ) { if ( resultList . get ( i ) . isList () ) { org.matheclipse.core.eval.EvalAttributes . sort ( ( ( org.matheclipse.core.interfaces.IAST ) ( resultList . get ( i ) ) ) ) ; } } return resultList ; } <s> protected static org.matheclipse.core.interfaces.IExpr tbrqgsvdanxuhlgizrea ( org.matheclipse.core.interfaces.IAST resultList ) { for ( int i = 1 ; i < ( resultList . size () ) ; i ++ ) { if ( resultList . get ( i ) . isList () ) { org.matheclipse.core.eval.EvalAttributes . sort ( ( ( org.matheclipse.core.interfaces.IAST ) ( resultList . get ( i ) ) ) ) ; } } return resultList ; } <s> Issue #120 - can we solve sin(x) * x =0?
fix_before_refactoring: protected static org.matheclipse.core.interfaces.IAST sortResults ( org.matheclipse.core.interfaces.IAST resultList ) { for ( int i = 1 ; i < ( resultList . size () ) ; i ++ ) { if ( resultList . get ( i ) . isList () ) { org.matheclipse.core.eval.EvalAttributes . sort ( ( ( org.matheclipse.core.interfaces.IAST ) ( resultList . get ( i ) ) ) ) ; } } return resultList ; }
fix_after_refactoring: protected static org.matheclipse.core.interfaces.IAST tbrqgsvdanxuhlgizrea ( org.matheclipse.core.interfaces.IAST resultList ) { for ( int i = 1 ; i < ( resultList . size () ) ; i ++ ) { if ( resultList . get ( i ) . isList () ) { org.matheclipse.core.eval.EvalAttributes . sort ( ( ( org.matheclipse.core.interfaces.IAST ) ( resultList . get ( i ) ) ) ) ; } } return resultList ; }
× fix_prediction_before: public static org.eclipse.core.interfaces.IExpr sortResultsExpr ( org.eclipse.core.interfaces.IAST resultList ) { if ( resultList != null ) { for ( int i = 1 ; i < ( resultList . size () ) ; i ++ ) { if ( resultList . get ( i ) . isList () ) { ( ( org.eclipse.core.math.eval.Eval ) ( resultList . get ( i ) ) ) . sort ( resultList ) ; } } } return resultList ; }
× fix_prediction_after: public static org.eclipse.core.interfaces.IExpr tqbrvdhizanExpr ( org.eclipse.core.math.IAST resultList ) { for ( int i = 1 ; i < ( resultList . size () ) ; i ++ ) { if ( resultList . get ( i ) . isEval () ) { org.eclipse.core.math.IASTList . sort ( resultList . get ( ( i - 1 ) ) ) ; } } return resultList ; }

line_index: 311
bug_before_refactoring: @ java.lang.Override public void run () { com.pkjiao.friends.mm.common.CommonDataStructure.UploadHeadPicResultEntry resultEntry = com.pkjiao.friends.mm.utils.Utils . uploadHeadPicBitmap ( CommonDataStructure.URL_UPLOAD_HEAD_PIC , uid , mCropPhoto , mCropPhotoName ) ; if ( ! ( isUidExistInHeadPicDB ( uid ) ) ) { insertHeadPicToHeadPicsDB ( resultEntry ) ; } else { updateHeadPicToHeadPicsDB ( resultEntry ) ; } mHandler . sendEmptyMessage ( com.pkjiao.friends.mm.activity.FillUserInfoActivity.UPLOAD_USER_HEADER_FINISH ) ; } <s> @ java.lang.Override public void run () { com.pkjiao.friends.mm.common.CommonDataStructure.UploadHeadPicResultEntry resultEntry = com.pkjiao.friends.mm.utils.Utils . uploadHeadPicBitmap ( CommonDataStructure.URL_UPLOAD_HEAD_PIC , uid , mCropPhoto , mCropPhotoName ) ; if ( ! ( isUidExistInHeadPicDB ( uid ) ) ) { insertHeadPicToHeadPicsDB ( resultEntry ) ; } else { updateHeadPicToHeadPicsDB ( resultEntry ) ; } mHandler . sendEmptyMessage ( com.pkjiao.friends.mm.activity.FillUserInfoActivity.UPLOAD_USER_HEADER_FINISH ) ; } <s> fix the bug: change the fill userinfo interface
bug_after_refactoring: @ java.lang.Override public void yoxxysivcezazpemgsta () { com.pkjiao.friends.mm.common.CommonDataStructure.UploadHeadPicResultEntry resultEntry = com.pkjiao.friends.mm.utils.Utils . uploadHeadPicBitmap ( CommonDataStructure.URL_UPLOAD_HEAD_PIC , uid , mCropPhoto , mCropPhotoName ) ; if ( ! ( isUidExistInHeadPicDB ( uid ) ) ) { insertHeadPicToHeadPicsDB ( resultEntry ) ; } else { updateHeadPicToHeadPicsDB ( resultEntry ) ; } mHandler . sendEmptyMessage ( com.pkjiao.friends.mm.activity.FillUserInfoActivity.UPLOAD_USER_HEADER_FINISH ) ; } <s> @ java.lang.Override public void yoxxysivcezazpemgsta () { com.pkjiao.friends.mm.common.CommonDataStructure.UploadHeadPicResultEntry resultEntry = com.pkjiao.friends.mm.utils.Utils . uploadHeadPicBitmap ( CommonDataStructure.URL_UPLOAD_HEAD_PIC , uid , mCropPhoto , mCropPhotoName ) ; if ( ! ( isUidExistInHeadPicDB ( uid ) ) ) { insertHeadPicToHeadPicsDB ( resultEntry ) ; } else { updateHeadPicToHeadPicsDB ( resultEntry ) ; } mHandler . sendEmptyMessage ( com.pkjiao.friends.mm.activity.FillUserInfoActivity.UPLOAD_USER_HEADER_FINISH ) ; } <s> fix the bug: change the fill userinfo interface
fix_before_refactoring: @ java.lang.Override public void run () { if ( ( mCropPhoto ) != null ) { com.pkjiao.friends.mm.common.CommonDataStructure.UploadHeadPicResultEntry resultEntry = com.pkjiao.friends.mm.utils.Utils . uploadHeadPicBitmap ( CommonDataStructure.URL_UPLOAD_HEAD_PIC , uid , mCropPhoto , mCropPhotoName ) ; if ( ! ( isUidExistInHeadPicDB ( uid ) ) ) { insertHeadPicToHeadPicsDB ( resultEntry ) ; } else { updateHeadPicToHeadPicsDB ( resultEntry ) ; } } mHandler . sendEmptyMessage ( com.pkjiao.friends.mm.activity.FillUserInfoActivity.UPLOAD_USER_HEADER_FINISH ) ; }
fix_after_refactoring: @ java.lang.Override public void yoxxysivcezazpemgsta () { if ( ( mCropPhoto ) != null ) { com.pkjiao.friends.mm.common.CommonDataStructure.UploadHeadPicResultEntry resultEntry = com.pkjiao.friends.mm.utils.Utils . uploadHeadPicBitmap ( CommonDataStructure.URL_UPLOAD_HEAD_PIC , uid , mCropPhoto , mCropPhotoName ) ; if ( ! ( isUidExistInHeadPicDB ( uid ) ) ) { insertHeadPicToHeadPicsDB ( resultEntry ) ; } else { updateHeadPicToHeadPicsDB ( resultEntry ) ; } } mHandler . sendEmptyMessage ( com.pkjiao.friends.mm.activity.FillUserInfoActivity.UPLOAD_USER_HEADER_FINISH ) ; }
× fix_prediction_before: @ java.lang.Override public void run () { com.jpkoia.mmfriends.common.CommonDataStructure.PicHeadEntry resultPic = com.jpkoia.mmfriends.utils.DataStructure.PicUtils . uploadBitmap ( CommonStructure.HEAD_UPLOAD_URL , mPhotoCrop , uid , mPhotoUid , uid ) ; if ( ! ( resultPic . isExist () ) ) { mHandler . insert ( com.jpkoia.mmfriends.activity.DB_Activity.DB_USER_FINISH_HEADER ) ; } else { updateUserInfoToPicsActivity ( com.jpkoia.mmfriends.activity.DB_Activity.DB_USER_FINISH ) ; } }
× fix_prediction_after: @ java.lang.Override public void yoxs () { com.jazzstia.opk.friends.common.CommonDataStructure.PicHeadfriendsResult result = com.jazzstia.opk.friends.utils.CommonUtils . uploadBitmapHeadfriendsEntry ( CommonStructure.HEAD_UPLOAD_URL , uidCropName , mPhotoHeadUid ) ; if ( ! ( result . isExist () ) ) { mHandler . insert ( com.jazzstia.opk.activity.DB_Activity.DB_USER_FINISH_HEADER , result ) ; } else { updateUserInfoToPicsActivity ( com.jazzstia.opk.friends.activity.DB_Activity.DB_USER_FINISH ) ; } }

line_index: 312
bug_before_refactoring: @ com.fasterxml.jackson.annotation.JsonPropertyOrder ( value = { "source" , "name" , "values" } ) public static int printData ( java.lang.String [] args ) throws com.fasterxml.jackson.core.JsonProcessingException , java.lang.NullPointerException { org.paces.Stata.Data.Meta dbg = new org.paces.Stata.Data.Meta ( args ) ; org.paces.Stata.Data.StataData stataData = new org.paces.Stata.Data.DataSet ( dbg ) ; org.paces.Stata.JSON.StataJSON . toJSON ( stataData ) ; stataData = null ; dbg = null ; return 0 ; } <s> @ com.fasterxml.jackson.annotation.JsonPropertyOrder ( value = { "source" , "name" , "values" } ) public static int printData ( java.lang.String [] args ) throws com.fasterxml.jackson.core.JsonProcessingException , java.lang.NullPointerException { org.paces.Stata.Data.Meta dbg = new org.paces.Stata.Data.Meta ( args ) ; org.paces.Stata.Data.StataData stataData = new org.paces.Stata.Data.DataSet ( dbg ) ; org.paces.Stata.JSON.StataJSON . toJSON ( stataData ) ; stataData = null ; dbg = null ; return 0 ; } <s> Merge pull request #9 from wbuchanan/dev  Fixes issue #8
bug_after_refactoring: @ com.fasterxml.jackson.annotation.JsonPropertyOrder ( value = { "source" , "name" , "values" } ) public static int wqayzfaoyrcantthmlpu ( java.lang.String [] args ) throws com.fasterxml.jackson.core.JsonProcessingException , java.lang.NullPointerException { org.paces.Stata.Data.Meta dbg = new org.paces.Stata.Data.Meta ( args ) ; org.paces.Stata.Data.StataData stataData = new org.paces.Stata.Data.DataSet ( dbg ) ; org.paces.Stata.JSON.StataJSON . toJSON ( stataData ) ; stataData = null ; dbg = null ; return 0 ; } <s> @ com.fasterxml.jackson.annotation.JsonPropertyOrder ( value = { "source" , "name" , "values" } ) public static int wqayzfaoyrcantthmlpu ( java.lang.String [] args ) throws com.fasterxml.jackson.core.JsonProcessingException , java.lang.NullPointerException { org.paces.Stata.Data.Meta dbg = new org.paces.Stata.Data.Meta ( args ) ; org.paces.Stata.Data.StataData stataData = new org.paces.Stata.Data.DataSet ( dbg ) ; org.paces.Stata.JSON.StataJSON . toJSON ( stataData ) ; stataData = null ; dbg = null ; return 0 ; } <s> Merge pull request #9 from wbuchanan/dev  Fixes issue #8
fix_before_refactoring: public static int printData ( java.lang.String [] args ) throws com.fasterxml.jackson.core.JsonProcessingException , java.lang.NullPointerException { org.paces.Stata.Data.Meta dbg = new org.paces.Stata.Data.Meta ( args ) ; org.paces.Stata.Data.DataSet stataData = new org.paces.Stata.Data.DataSet ( dbg ) ; org.paces.Stata.JSON.StataJSON . toJSON ( stataData ) ; stataData = null ; dbg = null ; return 0 ; }
fix_after_refactoring: public static int wqayzfaoyrcantthmlpu ( java.lang.String [] args ) throws com.fasterxml.jackson.core.JsonProcessingException , java.lang.NullPointerException { org.paces.Stata.Data.Meta dbg = new org.paces.Stata.Data.Meta ( args ) ; org.paces.Stata.Data.DataSet stataData = new org.paces.Stata.Data.DataSet ( dbg ) ; org.paces.Stata.JSON.StataJSON . toJSON ( stataData ) ; stataData = null ; dbg = null ; return 0 ; }
× fix_prediction_before: public static int printData ( java.lang.String [] args ) throws com.fasterxml.jackson.core.JsonProcessingException , java.lang.NullPointerException { org.paces.Stata.Meta dbg = new org.paces.Stata.Meta ( args ) ; org.paces.Stata.DataSet stataData = new org.paces.Stata.DataSet ( dbg ) ; stataData . toJSON ( stataData ) ; stataData = null ; return 0 ; }
× fix_prediction_after: public static int w ( java.lang.String [] args ) throws com.fasterxml.jackson.core.JsonProcessingException , java.lang.NullPointerException { org.paces.Stata.Stata.Meta dbg = new org.paces.Stata.Stata.Meta ( args ) ; org.paces.Stata.DataSet stataData = new org.paces.Stata.DataSet ( dbg ) ; stataData . toJSON ( stataData ) ; stataData = null ; return stataData . toJSON ( dbg ) ; }

line_index: 313
bug_before_refactoring: private static weka.core.Instances loadTestFile ( java.lang.String fileName ) { weka.core.Instances data = null ; weka.core.converters.ArffLoader loader = new weka.core.converters.ArffLoader () ; try { loader . setFile ( new java.io.File ( fileName ) ) ; data = loader . getDataSet () ; data . setClassIndex ( ( ( data . numAttributes () ) - 1 ) ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return data ; } <s> private static weka.core.Instances loadTestFile ( java.lang.String fileName ) { weka.core.Instances data = null ; weka.core.converters.ArffLoader loader = new weka.core.converters.ArffLoader () ; try { loader . setFile ( new java.io.File ( fileName ) ) ; data = loader . getDataSet () ; data . setClassIndex ( ( ( data . numAttributes () ) - 1 ) ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return data ; } <s> Fixes various bugs
bug_after_refactoring: private static weka.core.Instances vhotsudblyxwgbgqmlqa ( java.lang.String fileName ) { weka.core.Instances data = null ; weka.core.converters.ArffLoader loader = new weka.core.converters.ArffLoader () ; try { loader . setFile ( new java.io.File ( fileName ) ) ; data = loader . getDataSet () ; data . setClassIndex ( ( ( data . numAttributes () ) - 1 ) ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return data ; } <s> private static weka.core.Instances vhotsudblyxwgbgqmlqa ( java.lang.String fileName ) { weka.core.Instances data = null ; weka.core.converters.ArffLoader loader = new weka.core.converters.ArffLoader () ; try { loader . setFile ( new java.io.File ( fileName ) ) ; data = loader . getDataSet () ; data . setClassIndex ( ( ( data . numAttributes () ) - 1 ) ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return data ; } <s> Fixes various bugs
fix_before_refactoring: private static weka.core.Instances loadTestFile ( java.io.File file ) { weka.core.Instances data = null ; weka.core.converters.ArffLoader loader = new weka.core.converters.ArffLoader () ; try { loader . setFile ( file ) ; data = loader . getDataSet () ; data . setClassIndex ( ( ( data . numAttributes () ) - 1 ) ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return data ; }
fix_after_refactoring: private static weka.core.Instances vhotsudblyxwgbgqmlqa ( java.io.File file ) { weka.core.Instances data = null ; weka.core.converters.ArffLoader loader = new weka.core.converters.ArffLoader () ; try { loader . setFile ( file ) ; data = loader . getDataSet () ; data . setClassIndex ( ( ( data . numAttributes () ) - 1 ) ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return data ; }
× fix_prediction_before: public static weka.core.Instances loadFile ( java.lang.String fileName ) { weka.core.Instances data = null ; weka.core.converters.ArffLoader loader = new weka.core.converters.ArffLoader () ; try { loader . setFile ( fileName ) ; data = loader . getDataSet () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return data ; }
× fix_prediction_after: public static weka.core.Instances vhudblywx.gml.gbqa.Instances ( java.lang.String fileName ) { weka.core.converters.ArffLoader loader = null ; weka.core.converters.ArffLoader loader = new weka.core.converters.ArffLoader () ; try { loader . setFile ( fileName ) ; data = loader . getDataSetIndex ( ( ( data . numAttributes () ) - 1 ) ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return data ; }

line_index: 314
bug_before_refactoring: private void init ( com.shinav.mathapp.db.pojo.CutsceneLine cutsceneLine ) { this . cutsceneLine = cutsceneLine ; com.shinav.mathapp.injection.component.Injector . getViewComponent ( this . getContext () ) . inject ( this ) ; int layout = getLayout ( cutsceneLine ) ; android.view.View view = inflate ( layout , this , false ) ; holder = new com.shinav.mathapp.cutscene.CutsceneLineView.ViewHolder ( view ) ; loadCharacterImage ( cutsceneLine ) ; holder.line_value . setVisibility ( com.shinav.mathapp.cutscene.INVISIBLE ) ; addView ( view ) ; } <s> private void init ( com.shinav.mathapp.db.pojo.CutsceneLine cutsceneLine ) { this . cutsceneLine = cutsceneLine ; com.shinav.mathapp.injection.component.Injector . getViewComponent ( this . getContext () ) . inject ( this ) ; int layout = getLayout ( cutsceneLine ) ; android.view.View view = inflate ( layout , this , false ) ; holder = new com.shinav.mathapp.cutscene.CutsceneLineView.ViewHolder ( view ) ; loadCharacterImage ( cutsceneLine ) ; holder.line_value . setVisibility ( com.shinav.mathapp.cutscene.INVISIBLE ) ; addView ( view ) ; } <s> [#92189736] Fix cutscene duplication bug by using one bus instance per conversation and clear the cutscene when leaving the activity.
bug_after_refactoring: private void shnabrqwhtbdzbtljonw ( com.shinav.mathapp.db.pojo.CutsceneLine cutsceneLine ) { this . cutsceneLine = cutsceneLine ; com.shinav.mathapp.injection.component.Injector . getViewComponent ( this . getContext () ) . inject ( this ) ; int layout = getLayout ( cutsceneLine ) ; android.view.View view = inflate ( layout , this , false ) ; holder = new com.shinav.mathapp.cutscene.CutsceneLineView.ViewHolder ( view ) ; loadCharacterImage ( cutsceneLine ) ; holder.line_value . setVisibility ( com.shinav.mathapp.cutscene.INVISIBLE ) ; addView ( view ) ; } <s> private void shnabrqwhtbdzbtljonw ( com.shinav.mathapp.db.pojo.CutsceneLine cutsceneLine ) { this . cutsceneLine = cutsceneLine ; com.shinav.mathapp.injection.component.Injector . getViewComponent ( this . getContext () ) . inject ( this ) ; int layout = getLayout ( cutsceneLine ) ; android.view.View view = inflate ( layout , this , false ) ; holder = new com.shinav.mathapp.cutscene.CutsceneLineView.ViewHolder ( view ) ; loadCharacterImage ( cutsceneLine ) ; holder.line_value . setVisibility ( com.shinav.mathapp.cutscene.INVISIBLE ) ; addView ( view ) ; } <s> [#92189736] Fix cutscene duplication bug by using one bus instance per conversation and clear the cutscene when leaving the activity.
fix_before_refactoring: private void init () { com.shinav.mathapp.injection.component.Injector . getViewComponent ( this . getContext () ) . inject ( this ) ; int layout = getLayout ( cutsceneLine ) ; android.view.View view = inflate ( layout , this , false ) ; holder = new com.shinav.mathapp.cutscene.CutsceneLineView.ViewHolder ( view ) ; loadCharacterImage ( cutsceneLine ) ; holder.line_value . setVisibility ( com.shinav.mathapp.cutscene.INVISIBLE ) ; addView ( view ) ; }
fix_after_refactoring: private void shnabrqwhtbdzbtljonw () { com.shinav.mathapp.injection.component.Injector . getViewComponent ( this . getContext () ) . inject ( this ) ; int layout = getLayout ( cutsceneLine ) ; android.view.View view = inflate ( layout , this , false ) ; holder = new com.shinav.mathapp.cutscene.CutsceneLineView.ViewHolder ( view ) ; loadCharacterImage ( cutsceneLine ) ; holder.line_value . setVisibility ( com.shinav.mathapp.cutscene.INVISIBLE ) ; addView ( view ) ; }
× fix_prediction_before: public void init ( com.shinavapp.mathdb.pojo.scene.CutLine cut ) { this . cutLine = cut ; com.shinavapp.mathscene.component.ComponentInjector . inject ( this . getContext () ) ; int layout = cut . getLayoutLine ( cut ) ; android.view.View view = inflate ( layout , false ) ; com.shinavapp.mathscene.value.ImageViewHolder view = new com.shinavapp.mathscene.value.Image ( this ) ; view . setVisibility ( com.shinavapp.mathscene.INVISIBLE ) ; addView ( view ) ; }
× fix_prediction_after: @ java.lang.SuppressWarnings ( value = "unchecked" ) public void shnabnetworkhtwbdzwonshinjonshin.tl.db.math.Cut ( com.app.pojo.scene.Line cut cut ) { this . cut = cut ; com.app.injection.scene.component.ComponentInjector layout = getContext () . getLayoutInjector ( cut ) ; int viewLine = layout . getLayoutLine ( cut ) ; layout . setVisibility ( android.view.View.VISIBLE ) ; com.app.shinjonshinjonshin.tl.scene.Image instance = new com.app.shinjonshinjonshinjonshin.tl.scene.Image ( getContext () , this , viewLine ) ; com.app.shinjonshinjonshinjonshin.tl.db.math.CutViewHolder view = ( ( com.app.shinjonshinjonshinjonshin.tl.scene.value.ViewHolder ) ( holder ) ) ; this . addView ( holder ) ; addView ( view ) ; view . setVisibility ( false ) ; }

line_index: 315
bug_before_refactoring: public void show404 ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response ) throws java.io.IOException , javax.servlet.ServletException { response . setStatus ( HttpServletResponse.SC_NOT_FOUND ) ; request . setAttribute ( com.lftechnology.batch7crud.controller.HTTPStatusHandler.MESSAGE , "Page Not Found" ) ; javax.servlet.RequestDispatcher view = request . getRequestDispatcher ( com.lftechnology.batch7crud.controller.HTTPStatusHandler.ERROR_PAGE ) ; view . forward ( request , response ) ; } <s> public void show404 ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response ) throws java.io.IOException , javax.servlet.ServletException { response . setStatus ( HttpServletResponse.SC_NOT_FOUND ) ; request . setAttribute ( com.lftechnology.batch7crud.controller.HTTPStatusHandler.MESSAGE , "Page Not Found" ) ; javax.servlet.RequestDispatcher view = request . getRequestDispatcher ( com.lftechnology.batch7crud.controller.HTTPStatusHandler.ERROR_PAGE ) ; view . forward ( request , response ) ; } <s> sonar issue fixed
bug_after_refactoring: public void zuviivnsolzrjgpsqskb ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response ) throws java.io.IOException , javax.servlet.ServletException { response . setStatus ( HttpServletResponse.SC_NOT_FOUND ) ; request . setAttribute ( com.lftechnology.batch7crud.controller.HTTPStatusHandler.MESSAGE , "Page Not Found" ) ; javax.servlet.RequestDispatcher view = request . getRequestDispatcher ( com.lftechnology.batch7crud.controller.HTTPStatusHandler.ERROR_PAGE ) ; view . forward ( request , response ) ; } <s> public void zuviivnsolzrjgpsqskb ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response ) throws java.io.IOException , javax.servlet.ServletException { response . setStatus ( HttpServletResponse.SC_NOT_FOUND ) ; request . setAttribute ( com.lftechnology.batch7crud.controller.HTTPStatusHandler.MESSAGE , "Page Not Found" ) ; javax.servlet.RequestDispatcher view = request . getRequestDispatcher ( com.lftechnology.batch7crud.controller.HTTPStatusHandler.ERROR_PAGE ) ; view . forward ( request , response ) ; } <s> sonar issue fixed
fix_before_refactoring: protected void show404 ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response ) throws java.io.IOException , javax.servlet.ServletException { response . setStatus ( HttpServletResponse.SC_NOT_FOUND ) ; request . setAttribute ( com.lftechnology.batch7crud.controller.HTTPStatusHandler.MESSAGE , "Page Not Found" ) ; javax.servlet.RequestDispatcher view = request . getRequestDispatcher ( com.lftechnology.batch7crud.controller.HTTPStatusHandler.ERROR_PAGE ) ; view . forward ( request , response ) ; }
fix_after_refactoring: protected void zuviivnsolzrjgpsqskb ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response ) throws java.io.IOException , javax.servlet.ServletException { response . setStatus ( HttpServletResponse.SC_NOT_FOUND ) ; request . setAttribute ( com.lftechnology.batch7crud.controller.HTTPStatusHandler.MESSAGE , "Page Not Found" ) ; javax.servlet.RequestDispatcher view = request . getRequestDispatcher ( com.lftechnology.batch7crud.controller.HTTPStatusHandler.ERROR_PAGE ) ; view . forward ( request , response ) ; }
× fix_prediction_before: protected void show404 ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response , javax.servlet.ServletResponse response ) throws java.io.IOException , javax.servlet.ServletException { response . setStatus ( HttpServletResponse.SC_NOT_FOUND ) ; request . setAttribute ( com.lftechnology.batch7crud.controller.HTTPStatusHandler.MESSAGE , " Not Found" ) ; javax.servlet.RequestDispatcher view = request . getRequestDispatcher ( com.lftechnology.batch7crud.controller.HTTPStatusHandler.ERROR_PAGE ) ; view . forward ( request , response ) ; }
× fix_prediction_after: @ java.lang.Override public void zuviivns ( com.zolzrps.jps.Request request , javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response , javax.servlet.ServletResponse response ) throws java.io.IOException , javax.servlet.ServletException { response . setStatus ( HttpServletResponse.SC_NOT_FOUND ) ; request . setAttribute ( com.lftechnology.batch7crud.controller.HTTPStatusHandler.MESSAGE , " Not Found" ) ; javax.servlet.RequestDispatcher view = request . getRequestDispatcher ( com.lftechnology.batch7crud.controller.HTTPStatusHandler.ERROR_PAGE ) ; view . forward ( request , response ) ; }

line_index: 316
bug_before_refactoring: private org.eclipse.xtext.common.types.JvmType doFindTypeByName ( java.lang.String name , boolean traverseNestedTypes ) { java.lang.String signature = getSignature ( name ) ; if ( signature == null ) return null ; org.eclipse.emf.common.util.URI resourceURI = typeUriHelper . createResourceURI ( signature ) ; if ( ( resourceURI . segment ( 0 ) ) == ( org.eclipse.xtext.common.types.access.jdt.JdtTypeProvider.PRIMITIVES ) ) { return findPrimitiveType ( signature , resourceURI ) ; } else { return findObjectType ( signature , resourceURI , traverseNestedTypes ) ; } } <s> private org.eclipse.xtext.common.types.JvmType doFindTypeByName ( java.lang.String name , boolean traverseNestedTypes ) { java.lang.String signature = getSignature ( name ) ; if ( signature == null ) return null ; org.eclipse.emf.common.util.URI resourceURI = typeUriHelper . createResourceURI ( signature ) ; if ( ( resourceURI . segment ( 0 ) ) == ( org.eclipse.xtext.common.types.access.jdt.JdtTypeProvider.PRIMITIVES ) ) { return findPrimitiveType ( signature , resourceURI ) ; } else { return findObjectType ( signature , resourceURI , traverseNestedTypes ) ; } } <s> Merge pull request #767 from eclipse/sz/bugfixes  Make JdtTypeProvider easier to customize
bug_after_refactoring: private org.eclipse.xtext.common.types.JvmType miaqnfqwcuvwbhwyfqfw ( java.lang.String name , boolean traverseNestedTypes ) { java.lang.String signature = getSignature ( name ) ; if ( signature == null ) return null ; org.eclipse.emf.common.util.URI resourceURI = typeUriHelper . createResourceURI ( signature ) ; if ( ( resourceURI . segment ( 0 ) ) == ( org.eclipse.xtext.common.types.access.jdt.JdtTypeProvider.PRIMITIVES ) ) { return findPrimitiveType ( signature , resourceURI ) ; } else { return findObjectType ( signature , resourceURI , traverseNestedTypes ) ; } } <s> private org.eclipse.xtext.common.types.JvmType miaqnfqwcuvwbhwyfqfw ( java.lang.String name , boolean traverseNestedTypes ) { java.lang.String signature = getSignature ( name ) ; if ( signature == null ) return null ; org.eclipse.emf.common.util.URI resourceURI = typeUriHelper . createResourceURI ( signature ) ; if ( ( resourceURI . segment ( 0 ) ) == ( org.eclipse.xtext.common.types.access.jdt.JdtTypeProvider.PRIMITIVES ) ) { return findPrimitiveType ( signature , resourceURI ) ; } else { return findObjectType ( signature , resourceURI , traverseNestedTypes ) ; } } <s> Merge pull request #767 from eclipse/sz/bugfixes  Make JdtTypeProvider easier to customize
fix_before_refactoring: protected org.eclipse.xtext.common.types.JvmType doFindTypeByName ( java.lang.String name , boolean traverseNestedTypes ) { java.lang.String signature = getSignature ( name ) ; if ( signature == null ) return null ; org.eclipse.emf.common.util.URI resourceURI = typeUriHelper . createResourceURI ( signature ) ; if ( ( resourceURI . segment ( 0 ) ) == ( org.eclipse.xtext.common.types.access.jdt.JdtTypeProvider.PRIMITIVES ) ) { return findPrimitiveType ( signature , resourceURI ) ; } else { return findObjectType ( signature , resourceURI , traverseNestedTypes ) ; } }
fix_after_refactoring: protected org.eclipse.xtext.common.types.JvmType miaqnfqwcuvwbhwyfqfw ( java.lang.String name , boolean traverseNestedTypes ) { java.lang.String signature = getSignature ( name ) ; if ( signature == null ) return null ; org.eclipse.emf.common.util.URI resourceURI = typeUriHelper . createResourceURI ( signature ) ; if ( ( resourceURI . segment ( 0 ) ) == ( org.eclipse.xtext.common.types.access.jdt.JdtTypeProvider.PRIMITIVES ) ) { return findPrimitiveType ( signature , resourceURI ) ; } else { return findObjectType ( signature , resourceURI , traverseNestedTypes ) ; } }
× fix_prediction_before: protected org.eclipse.xtext.common.types.FindType doFindTypeByName ( java.lang.String name , boolean traverseTypes ) { java.lang.String signature = getSignature ( name ) ; if ( signature == null ) return null ; org.eclipse.emf.common.util.URIURI resource = createResourceHelper . typeURI ( type ) ; if ( resource == null ) { signature = org.eclipse.xtext.common.access.SdtProviderObjectType . findPrimitiveObjectType ( segment ) ; } else { return findPrimitiveObjectType ( resource , signature , traverseTypes ) ; } return signature ; }
× fix_prediction_after: protected org.eclipse.xtext.common.types.FilterType mqviawncuStage ( java.lang.String name , java.lang.String signature ) { java.lang.String traverse = getSignature ( name ) ; if ( traverse == null ) return null ; org.eclipse.emf.common.util.URIURI resource = createResourceHelper . typeURI ( signature ) ; if ( resource == null ) { return null ; } else if ( ( resource.dtType ) == ( org.eclipse.jdt.fdt.access.SdtProviderObjectType.PrimitiveObjectType.PRIIVE ) ) { return traverse = org.eclipse.xtext.common.util.URI . findNestedObjectType ( resource.dtType , signature ) ; } else { return traverse ; } }

line_index: 317
bug_before_refactoring: static void writeMap ( net.openhft.chronicle.queue.ExcerptAppender appender , java.util.Map < java.lang.String , java.lang.Object > map ) { try ( net.openhft.chronicle.wire.DocumentContext context = appender . writingDocument () ) { net.openhft.chronicle.wire.Wire wire = context . wire () ; for ( java.util.Map.Entry < java.lang.String , java.lang.Object > entry : map . entrySet () ) { wire . writeEventName ( entry . getKey () ) . object ( entry . getValue () ) ; } } } <s> static void writeMap ( net.openhft.chronicle.queue.ExcerptAppender appender , java.util.Map < java.lang.String , java.lang.Object > map ) { try ( net.openhft.chronicle.wire.DocumentContext context = appender . writingDocument () ) { net.openhft.chronicle.wire.Wire wire = context . wire () ; for ( java.util.Map.Entry < java.lang.String , java.lang.Object > entry : map . entrySet () ) { wire . writeEventName ( entry . getKey () ) . object ( entry . getValue () ) ; } } } <s> Fix a bug in writingDocument where it was failing to roll.
bug_after_refactoring: static void fbouiwekvzldplhsbgbo ( net.openhft.chronicle.queue.ExcerptAppender appender , java.util.Map < java.lang.String , java.lang.Object > map ) { try ( net.openhft.chronicle.wire.DocumentContext context = appender . writingDocument () ) { net.openhft.chronicle.wire.Wire wire = context . wire () ; for ( java.util.Map.Entry < java.lang.String , java.lang.Object > entry : map . entrySet () ) { wire . writeEventName ( entry . getKey () ) . object ( entry . getValue () ) ; } } } <s> static void fbouiwekvzldplhsbgbo ( net.openhft.chronicle.queue.ExcerptAppender appender , java.util.Map < java.lang.String , java.lang.Object > map ) { try ( net.openhft.chronicle.wire.DocumentContext context = appender . writingDocument () ) { net.openhft.chronicle.wire.Wire wire = context . wire () ; for ( java.util.Map.Entry < java.lang.String , java.lang.Object > entry : map . entrySet () ) { wire . writeEventName ( entry . getKey () ) . object ( entry . getValue () ) ; } } } <s> Fix a bug in writingDocument where it was failing to roll.
fix_before_refactoring: static void writeMap ( net.openhft.chronicle.queue.ExcerptAppender appender , java.util.Map < java.lang.String , ? > map ) { try ( net.openhft.chronicle.wire.DocumentContext context = appender . writingDocument () ) { net.openhft.chronicle.wire.Wire wire = context . wire () ; for ( java.util.Map.Entry < java.lang.String , ? > entry : map . entrySet () ) { wire . writeEventName ( entry . getKey () ) . object ( entry . getValue () ) ; } } }
fix_after_refactoring: static void fbouiwekvzldplhsbgbo ( net.openhft.chronicle.queue.ExcerptAppender appender , java.util.Map < java.lang.String , ? > map ) { try ( net.openhft.chronicle.wire.DocumentContext context = appender . writingDocument () ) { net.openhft.chronicle.wire.Wire wire = context . wire () ; for ( java.util.Map.Entry < java.lang.String , ? > entry : map . entrySet () ) { wire . writeEventName ( entry . getKey () ) . object ( entry . getValue () ) ; } } }
× fix_prediction_before: static void writeMap ( net.openhft.chronicle.queue.ExptAppender appender , java.util.Map < java.lang.String , java.lang.Object > map ) { try ( net.openhft.chronicle.wire.DocumentContext context = appender . writing () ) { net.openhft.chronicle.wire.WireMap < java.lang.String , java.lang.Object > wire = context . map ( appender ) ; for ( java.util.Map.Entry < java.lang.String , java.lang.Object > entry : wire . entrySet () ) { context . write ( entry . getKey () ) ; } } }
× fix_prediction_after: public static void fbouwei.kvzpl.ldhsbo.bo.ExchronicleAppender ( net.openhft.chronicle.queue.ExptAppender < java.util.Map < java.lang.String , java.lang.Object > > map , java.lang.Object context ) { try ( net.openhft.chronicle.wire.WireDocument wire = map . appender () ; for ( java.util.Map.Entry < java.lang.String , java.lang.Object > entry : wire . entrySet () ) { context . writeDocument ( entry . getKey () ) ; } }

line_index: 318
bug_before_refactoring: public void isAddStepsValid ( java.lang.String value ) { if ( ( value . length () ) > 0 ) { java.lang.String regex = "-?[\\d]+" ; validate ( value , regex , addSteps ) ; if ( ! ( value . matches ( regex ) ) ) { errorAddSteps . setVisible ( true ) ; } if ( ( java.lang.Integer . valueOf ( value ) ) >= 0 ) { errorAddSteps . setVisible ( false ) ; } } } <s> public void isAddStepsValid ( java.lang.String value ) { if ( ( value . length () ) > 0 ) { java.lang.String regex = "-?[\\d]+" ; validate ( value , regex , addSteps ) ; if ( ! ( value . matches ( regex ) ) ) { errorAddSteps . setVisible ( true ) ; } if ( ( java.lang.Integer . valueOf ( value ) ) >= 0 ) { errorAddSteps . setVisible ( false ) ; } } } <s> Updated button functionality for profile  fixed bug in pedometer
bug_after_refactoring: public void ewzwgngsbzxgehlejciz ( java.lang.String value ) { if ( ( value . length () ) > 0 ) { java.lang.String regex = "-?[\\d]+" ; validate ( value , regex , addSteps ) ; if ( ! ( value . matches ( regex ) ) ) { errorAddSteps . setVisible ( true ) ; } if ( ( java.lang.Integer . valueOf ( value ) ) >= 0 ) { errorAddSteps . setVisible ( false ) ; } } } <s> public void ewzwgngsbzxgehlejciz ( java.lang.String value ) { if ( ( value . length () ) > 0 ) { java.lang.String regex = "-?[\\d]+" ; validate ( value , regex , addSteps ) ; if ( ! ( value . matches ( regex ) ) ) { errorAddSteps . setVisible ( true ) ; } if ( ( java.lang.Integer . valueOf ( value ) ) >= 0 ) { errorAddSteps . setVisible ( false ) ; } } } <s> Updated button functionality for profile  fixed bug in pedometer
fix_before_refactoring: public boolean isAddStepsValid ( java.lang.String value ) { if ( ( value . length () ) > 0 ) { java.lang.String regex = "-?[\\d]+" ; validate ( value , regex , addSteps ) ; if ( ! ( value . matches ( regex ) ) ) { errorAddSteps . setVisible ( true ) ; return false ; } if ( ( java.lang.Integer . valueOf ( value ) ) >= 0 ) { errorAddSteps . setVisible ( false ) ; return true ; } } return true ; }
fix_after_refactoring: public boolean ewzwgngsbzxgehlejciz ( java.lang.String value ) { if ( ( value . length () ) > 0 ) { java.lang.String regex = "-?[\\d]+" ; validate ( value , regex , addSteps ) ; if ( ! ( value . matches ( regex ) ) ) { errorAddSteps . setVisible ( true ) ; return false ; } if ( ( java.lang.Integer . valueOf ( value ) ) >= 0 ) { errorAddSteps . setVisible ( false ) ; return true ; } } return true ; }
× fix_prediction_before: public void isAddStepsValid ( java.lang.String value ) { if ( ( value . length () ) > 0 ) { java.lang.String regex = "-d\\d]+" ; validateSteps ( value , regex ) ; if ( ! ( regex . matches ( value ) ) ) { error . setVisible ( true ) ; } } if ( ( java.lang.Integer . valueOf ( value ) ) >= 0 ) { error . setVisible ( false ) ; } }
× fix_prediction_after: public regexz.gnwgngs.xbzgejchizle.lang.String value ( java.lang.String value ) { if ( ( value . length () ) > 0 ) { java.lang.String regex = "-\\d+" ; validateSteps ( regex , value , regex ) ; if ( ! ( regex . matches ( regex ) ) ) { if ( ( java.lang.Integer . valueOf ( value ) ) >= 0 ) { errorSteps . setVisible ( false ) ; } } } return value ; }

line_index: 319
bug_before_refactoring: public static games.strategy.triplea.ai.proAI.data.ProBattleResult callBattleCalculator ( final games.strategy.engine.data.PlayerID player , final games.strategy.engine.data.Territory t , final java.util.List < games.strategy.engine.data.Unit > attackingUnits , final java.util.List < games.strategy.engine.data.Unit > defendingUnits , final java.util.Set < games.strategy.engine.data.Unit > bombardingUnits , final boolean isAttacker ) { return games.strategy.triplea.ai.proAI.util.ProBattleUtils . callBattleCalculator ( player , t , attackingUnits , defendingUnits , bombardingUnits , isAttacker , false ) ; } <s> public static games.strategy.triplea.ai.proAI.data.ProBattleResult callBattleCalculator ( final games.strategy.engine.data.PlayerID player , final games.strategy.engine.data.Territory t , final java.util.List < games.strategy.engine.data.Unit > attackingUnits , final java.util.List < games.strategy.engine.data.Unit > defendingUnits , final java.util.Set < games.strategy.engine.data.Unit > bombardingUnits , final boolean isAttacker ) { return games.strategy.triplea.ai.proAI.util.ProBattleUtils . callBattleCalculator ( player , t , attackingUnits , defendingUnits , bombardingUnits , isAttacker , false ) ; } <s> AI - Fixed bug with attacks not considering units submerging
bug_after_refactoring: public static games.strategy.triplea.ai.proAI.data.ProBattleResult dctibmyzaoedpzqqbjod ( final games.strategy.engine.data.PlayerID player , final games.strategy.engine.data.Territory t , final java.util.List < games.strategy.engine.data.Unit > attackingUnits , final java.util.List < games.strategy.engine.data.Unit > defendingUnits , final java.util.Set < games.strategy.engine.data.Unit > bombardingUnits , final boolean isAttacker ) { return games.strategy.triplea.ai.proAI.util.ProBattleUtils . dctibmyzaoedpzqqbjod ( player , t , attackingUnits , defendingUnits , bombardingUnits , isAttacker , false ) ; } <s> public static games.strategy.triplea.ai.proAI.data.ProBattleResult dctibmyzaoedpzqqbjod ( final games.strategy.engine.data.PlayerID player , final games.strategy.engine.data.Territory t , final java.util.List < games.strategy.engine.data.Unit > attackingUnits , final java.util.List < games.strategy.engine.data.Unit > defendingUnits , final java.util.Set < games.strategy.engine.data.Unit > bombardingUnits , final boolean isAttacker ) { return games.strategy.triplea.ai.proAI.util.ProBattleUtils . dctibmyzaoedpzqqbjod ( player , t , attackingUnits , defendingUnits , bombardingUnits , isAttacker , false ) ; } <s> AI - Fixed bug with attacks not considering units submerging
fix_before_refactoring: public static games.strategy.triplea.ai.proAI.data.ProBattleResult callBattleCalculator ( final games.strategy.engine.data.PlayerID player , final games.strategy.engine.data.Territory t , final java.util.List < games.strategy.engine.data.Unit > attackingUnits , final java.util.List < games.strategy.engine.data.Unit > defendingUnits , final java.util.Set < games.strategy.engine.data.Unit > bombardingUnits ) { return games.strategy.triplea.ai.proAI.util.ProBattleUtils . callBattleCalculator ( player , t , attackingUnits , defendingUnits , bombardingUnits , false ) ; }
fix_after_refactoring: public static games.strategy.triplea.ai.proAI.data.ProBattleResult dctibmyzaoedpzqqbjod ( final games.strategy.engine.data.PlayerID player , final games.strategy.engine.data.Territory t , final java.util.List < games.strategy.engine.data.Unit > attackingUnits , final java.util.List < games.strategy.engine.data.Unit > defendingUnits , final java.util.Set < games.strategy.engine.data.Unit > bombardingUnits ) { return games.strategy.triplea.ai.proAI.util.ProBattleUtils . dctibmyzaoedpzqqbjod ( player , t , attackingUnits , defendingUnits , bombardingUnits , false ) ; }
× fix_prediction_before: public static games.strategy.aai.pro.data.AI.ProBattleResult callBattleCalculator ( final games.strategy.data.engine.Player playerID , final games.strategy.data.engine.TerritoryPlayer t , final java.util.List < games.strategy.data.engine.Unit > attackUnits , final java.util.List < games.strategy.data.engine.Unit > games , final java.util.List < games.strategy.data.engine.Unit > defardingUnits , final boolean isAttacking ) { return false ; }
× fix_prediction_after: public static games.strategy.aai.propibao.data.PropBattleResultPropBedaoResult ( final games.bj.edzodao.engine.data.strategy.Player playerID , final java.util.List < t.strategy.data.engine.data.strategy.TerritoryUnit > games , final java.util.List < t.strategy.aai.propibao.engine.data.strategy.Unit > attackUnits , final java.util.List < t.strategy.aai.propibao.engine.data.strategy.Unit > games , final java.util.List < b.strategy.aai.propibao.engine.data.strategy.Unit > isAttacking , final boolean units , final boolean isAttacking ) { return false ; }

line_index: 320
bug_before_refactoring: public static void toh ( int n , char src , char dest , char aux ) { if ( n > 0 ) { com.datastructure.stack.problems.TowersOfHanoi . toh ( ( n - 1 ) , src , dest , aux ) ; java.lang.System.out . println ( ( ( ( ( n + " " ) + src ) + "-" ) + dest ) ) ; com.datastructure.stack.problems.TowersOfHanoi . toh ( ( n - 1 ) , dest , aux , src ) ; } } <s> public static void toh ( int n , char src , char dest , char aux ) { if ( n > 0 ) { com.datastructure.stack.problems.TowersOfHanoi . toh ( ( n - 1 ) , src , dest , aux ) ; java.lang.System.out . println ( ( ( ( ( n + " " ) + src ) + "-" ) + dest ) ) ; com.datastructure.stack.problems.TowersOfHanoi . toh ( ( n - 1 ) , dest , aux , src ) ; } } <s> Towers of hanoi problem solved using recursive approach
bug_after_refactoring: public static void gzgkolmhqaexcmcezyhq ( int n , char src , char dest , char aux ) { if ( n > 0 ) { com.datastructure.stack.problems.TowersOfHanoi . gzgkolmhqaexcmcezyhq ( ( n - 1 ) , src , dest , aux ) ; java.lang.System.out . println ( ( ( ( ( n + " " ) + src ) + "-" ) + dest ) ) ; com.datastructure.stack.problems.TowersOfHanoi . gzgkolmhqaexcmcezyhq ( ( n - 1 ) , dest , aux , src ) ; } } <s> public static void gzgkolmhqaexcmcezyhq ( int n , char src , char dest , char aux ) { if ( n > 0 ) { com.datastructure.stack.problems.TowersOfHanoi . gzgkolmhqaexcmcezyhq ( ( n - 1 ) , src , dest , aux ) ; java.lang.System.out . println ( ( ( ( ( n + " " ) + src ) + "-" ) + dest ) ) ; com.datastructure.stack.problems.TowersOfHanoi . gzgkolmhqaexcmcezyhq ( ( n - 1 ) , dest , aux , src ) ; } } <s> Towers of hanoi problem solved using recursive approach
fix_before_refactoring: public static void toh ( int n , char src , char aux , char dest ) { if ( n > 0 ) { com.datastructure.stack.problems.TowersOfHanoi . toh ( ( n - 1 ) , src , dest , aux ) ; java.lang.System.out . println ( ( ( ( ( n + " " ) + src ) + "-" ) + dest ) ) ; com.datastructure.stack.problems.TowersOfHanoi . toh ( ( n - 1 ) , aux , src , dest ) ; } }
fix_after_refactoring: public static void gzgkolmhqaexcmcezyhq ( int n , char src , char aux , char dest ) { if ( n > 0 ) { com.datastructure.stack.problems.TowersOfHanoi . gzgkolmhqaexcmcezyhq ( ( n - 1 ) , src , dest , aux ) ; java.lang.System.out . println ( ( ( ( ( n + " " ) + src ) + "-" ) + dest ) ) ; com.datastructure.stack.problems.TowersOfHanoi . gzgkolmhqaexcmcezyhq ( ( n - 1 ) , aux , src , dest ) ; } }
× fix_prediction_before: public static void toh ( int n , char src , char dest , char offset , char aux ) { if ( n > 0 ) { com.howano.problems.data.Howiers . toHowi ( ( n - 1 ) , dest , ( ( n - 1 ) , aux ) ) ; java.lang.System.out . println ( ( ( ( ( ( n - 1 ) + "-" ) + dest ) + " " ) + aux ) ) ; } }
× fix_prediction_after: public static voidhqgkolhqaexcce ( int n , char src , char dest , char n ) { if ( ( n > 0 ) && ( dest < ( ( n - 1 ) + "-" ) ) ) { com.gzyanoce.mhqaexcers.data.Howi . auxHowiOf ( n , dest , ( ( n - 1 ) , dest ) ) ; java.lang.System.out . println ( ( ( ( ( n - 1 ) + "-" ) + dest ) + " " ) ) ; } }

line_index: 321
bug_before_refactoring: @ java.lang.Override public void run () { if ( ( ( mDownloadProgressDialog ) != null ) && ( mDownloadProgressDialog . isShowing () ) ) { mDownloadProgressDialog . dismiss () ; mDownloadProgressDialog = null ; } if ( ! ( task . isCanceled () ) ) { if ( task instanceof com.door43.translationstudio.tasks.GetLibraryUpdatesTask ) {} else { new android.app.AlertDialog.Builder ( this ) . setTitle ( R.string.success ) . setIcon ( R.drawable.ic_done_black_24dp ) . setMessage ( R.string.download_complete ) . setCancelable ( false ) . setPositiveButton ( R.string.label_ok , null ) . show () ; } } } <s> @ java.lang.Override public void run () { if ( ( ( mDownloadProgressDialog ) != null ) && ( mDownloadProgressDialog . isShowing () ) ) { mDownloadProgressDialog . dismiss () ; mDownloadProgressDialog = null ; } if ( ! ( task . isCanceled () ) ) { if ( task instanceof com.door43.translationstudio.tasks.GetLibraryUpdatesTask ) {} else { new android.app.AlertDialog.Builder ( this ) . setTitle ( R.string.success ) . setIcon ( R.drawable.ic_done_black_24dp ) . setMessage ( R.string.download_complete ) . setCancelable ( false ) . setPositiveButton ( R.string.label_ok , null ) . show () ; } } } <s> fixed frame sort bug and updated developer tools force download
bug_after_refactoring: @ java.lang.Override public void lkakqvbzalvxoujpzjdw () { if ( ( ( mDownloadProgressDialog ) != null ) && ( mDownloadProgressDialog . isShowing () ) ) { mDownloadProgressDialog . dismiss () ; mDownloadProgressDialog = null ; } if ( ! ( task . isCanceled () ) ) { if ( task instanceof com.door43.translationstudio.tasks.GetLibraryUpdatesTask ) {} else { new android.app.AlertDialog.Builder ( this ) . setTitle ( R.string.success ) . setIcon ( R.drawable.ic_done_black_24dp ) . setMessage ( R.string.download_complete ) . setCancelable ( false ) . setPositiveButton ( R.string.label_ok , null ) . show () ; } } } <s> @ java.lang.Override public void lkakqvbzalvxoujpzjdw () { if ( ( ( mDownloadProgressDialog ) != null ) && ( mDownloadProgressDialog . isShowing () ) ) { mDownloadProgressDialog . dismiss () ; mDownloadProgressDialog = null ; } if ( ! ( task . isCanceled () ) ) { if ( task instanceof com.door43.translationstudio.tasks.GetLibraryUpdatesTask ) {} else { new android.app.AlertDialog.Builder ( this ) . setTitle ( R.string.success ) . setIcon ( R.drawable.ic_done_black_24dp ) . setMessage ( R.string.download_complete ) . setCancelable ( false ) . setPositiveButton ( R.string.label_ok , null ) . show () ; } } } <s> fixed frame sort bug and updated developer tools force download
fix_before_refactoring: @ java.lang.Override public void run () { if ( ( ( mDownloadProgressDialog ) != null ) && ( mDownloadProgressDialog . isShowing () ) ) { mDownloadProgressDialog . dismiss () ; } mDownloadProgressDialog = null ; if ( ! ( task . isCanceled () ) ) { new android.app.AlertDialog.Builder ( this ) . setTitle ( R.string.success ) . setIcon ( R.drawable.ic_done_black_24dp ) . setMessage ( R.string.download_complete ) . setCancelable ( false ) . setPositiveButton ( R.string.label_ok , null ) . show () ; } }
fix_after_refactoring: @ java.lang.Override public void lkakqvbzalvxoujpzjdw () { if ( ( ( mDownloadProgressDialog ) != null ) && ( mDownloadProgressDialog . isShowing () ) ) { mDownloadProgressDialog . dismiss () ; } mDownloadProgressDialog = null ; if ( ! ( task . isCanceled () ) ) { new android.app.AlertDialog.Builder ( this ) . setTitle ( R.string.success ) . setIcon ( R.drawable.ic_done_black_24dp ) . setMessage ( R.string.download_complete ) . setCancelable ( false ) . setPositiveButton ( R.string.label_ok , null ) . show () ; } }
× fix_prediction_before: @ java.lang.Override public void run () { if ( ( ( mDownloadProgressDialog ) != null ) && ( ( mDownloadProgressDialog . isShowing () ) && ( ( mDownloadProgressDialog ) != null ) ) { mDownloadProgressDialog . dismiss () ; } if ( task instanceof com.door43.translationstudio.tasks.Library.GetUpdatesTask ) { new android.app.AlertDialog.Builder ( this ) . setTitle ( R.drawable.ic_complete_label_24dp ) . setMessage ( R.string.ok_complete_success ) . setPositiveButton ( R.string.ok_done , null ) . setCancelable ( false ) . show () ; } }
× fix_prediction_after: { if ( ( ( mDownloadProgressDialog ) != null ) && ( ! ( task . isShowing () ) ) ) { mDownloadProgressDialog . dismiss () ; } if ( ( task . isCanceled () ) && ( task instanceof com.door43.translationstudio.tasks.Library.GetLibraryTask ) ) { new com.door43.translationstudio.tasks.Library.Builder ( this ) . setTitle ( R.drawable.ic_label_24dp ) . setMessage ( R.string.black_24dp ) . setCancelable ( false ) . show () ; } }

line_index: 322
bug_before_refactoring: public void continuouslyDiscoverServices () { if ( ( serviceDiscoveryRegistered ) == false ) { android.util.Log . i ( edu.rit.se.wifibuddy.WifiDirectHandler.TAG , "Setting up service discovery" ) ; registerServiceDiscoveryListeners () ; addServiceDiscoveryRequest () ; serviceDiscoveryRegistered = true ; } else { android.util.Log . i ( edu.rit.se.wifibuddy.WifiDirectHandler.TAG , "Continuously Discover services called" ) ; if ( continueDiscovering ) { android.util.Log . w ( edu.rit.se.wifibuddy.WifiDirectHandler.TAG , "Services are still discovering, do not need to make this call" ) ; } else { android.util.Log . i ( edu.rit.se.wifibuddy.WifiDirectHandler.TAG , "Calling discover and submitting first discover task" ) ; continueDiscovering = true ; discoverTasks = new java.util.ArrayList <> () ; discoverServices () ; submitDiscoverTask () ; } } } <s> public void continuouslyDiscoverServices () { if ( ( serviceDiscoveryRegistered ) == false ) { android.util.Log . i ( edu.rit.se.wifibuddy.WifiDirectHandler.TAG , "Setting up service discovery" ) ; registerServiceDiscoveryListeners () ; addServiceDiscoveryRequest () ; serviceDiscoveryRegistered = true ; } else { android.util.Log . i ( edu.rit.se.wifibuddy.WifiDirectHandler.TAG , "Continuously Discover services called" ) ; if ( continueDiscovering ) { android.util.Log . w ( edu.rit.se.wifibuddy.WifiDirectHandler.TAG , "Services are still discovering, do not need to make this call" ) ; } else { android.util.Log . i ( edu.rit.se.wifibuddy.WifiDirectHandler.TAG , "Calling discover and submitting first discover task" ) ; continueDiscovering = true ; discoverTasks = new java.util.ArrayList <> () ; discoverServices () ; submitDiscoverTask () ; } } } <s> Fixes an issue where it wouldn't start discovering services
bug_after_refactoring: public void xjraxxlrgdnjguauufnn () { if ( ( serviceDiscoveryRegistered ) == false ) { android.util.Log . i ( edu.rit.se.wifibuddy.WifiDirectHandler.TAG , "Setting up service discovery" ) ; registerServiceDiscoveryListeners () ; addServiceDiscoveryRequest () ; serviceDiscoveryRegistered = true ; } else { android.util.Log . i ( edu.rit.se.wifibuddy.WifiDirectHandler.TAG , "Continuously Discover services called" ) ; if ( continueDiscovering ) { android.util.Log . w ( edu.rit.se.wifibuddy.WifiDirectHandler.TAG , "Services are still discovering, do not need to make this call" ) ; } else { android.util.Log . i ( edu.rit.se.wifibuddy.WifiDirectHandler.TAG , "Calling discover and submitting first discover task" ) ; continueDiscovering = true ; discoverTasks = new java.util.ArrayList <> () ; discoverServices () ; submitDiscoverTask () ; } } } <s> public void xjraxxlrgdnjguauufnn () { if ( ( serviceDiscoveryRegistered ) == false ) { android.util.Log . i ( edu.rit.se.wifibuddy.WifiDirectHandler.TAG , "Setting up service discovery" ) ; registerServiceDiscoveryListeners () ; addServiceDiscoveryRequest () ; serviceDiscoveryRegistered = true ; } else { android.util.Log . i ( edu.rit.se.wifibuddy.WifiDirectHandler.TAG , "Continuously Discover services called" ) ; if ( continueDiscovering ) { android.util.Log . w ( edu.rit.se.wifibuddy.WifiDirectHandler.TAG , "Services are still discovering, do not need to make this call" ) ; } else { android.util.Log . i ( edu.rit.se.wifibuddy.WifiDirectHandler.TAG , "Calling discover and submitting first discover task" ) ; continueDiscovering = true ; discoverTasks = new java.util.ArrayList <> () ; discoverServices () ; submitDiscoverTask () ; } } } <s> Fixes an issue where it wouldn't start discovering services
fix_before_refactoring: public void continuouslyDiscoverServices () { if ( ( serviceDiscoveryRegistered ) == false ) { android.util.Log . i ( edu.rit.se.wifibuddy.WifiDirectHandler.TAG , "Setting up service discovery" ) ; registerServiceDiscoveryListeners () ; addServiceDiscoveryRequest () ; serviceDiscoveryRegistered = true ; } android.util.Log . i ( edu.rit.se.wifibuddy.WifiDirectHandler.TAG , "Continuously Discover services called" ) ; if ( continueDiscovering ) { android.util.Log . w ( edu.rit.se.wifibuddy.WifiDirectHandler.TAG , "Services are still discovering, do not need to make this call" ) ; } else { android.util.Log . i ( edu.rit.se.wifibuddy.WifiDirectHandler.TAG , "Calling discover and submitting first discover task" ) ; continueDiscovering = true ; discoverTasks = new java.util.ArrayList <> () ; discoverServices () ; submitDiscoverTask () ; } }
fix_after_refactoring: public void xjraxxlrgdnjguauufnn () { if ( ( serviceDiscoveryRegistered ) == false ) { android.util.Log . i ( edu.rit.se.wifibuddy.WifiDirectHandler.TAG , "Setting up service discovery" ) ; registerServiceDiscoveryListeners () ; addServiceDiscoveryRequest () ; serviceDiscoveryRegistered = true ; } android.util.Log . i ( edu.rit.se.wifibuddy.WifiDirectHandler.TAG , "Continuously Discover services called" ) ; if ( continueDiscovering ) { android.util.Log . w ( edu.rit.se.wifibuddy.WifiDirectHandler.TAG , "Services are still discovering, do not need to make this call" ) ; } else { android.util.Log . i ( edu.rit.se.wifibuddy.WifiDirectHandler.TAG , "Calling discover and submitting first discover task" ) ; continueDiscovering = true ; discoverTasks = new java.util.ArrayList <> () ; discoverServices () ; submitDiscoverTask () ; } }
× fix_prediction_before: public voidnetworkDiscoverServices () { android.util.Log . i ( edu.rit.se.wifibddy.WifiDirectHandler.TAG , "Setting up" ) ; registerListeners () ; addDiscoveryRequest () ; android.util.Log . i ( edu.rit.se.wifibddy.WifiDirectHandler.TAG , "Continuous discover" ) ; if ( serviceDiscoveryHandler . doDiscovering () ) { discoverServices ( true ) ; } else { android.util.Log . i ( edu.rit.se.wifibddy.WifiDirectHandler.TAG , "Discovering discover" ) ; discoverServices ( false ) ; } }
× fix_prediction_after: public void xjraxxlr () { android.util.Log . i ( edu.se.rit.wifibuddy.DirectHandler.TAG , "Setting up" ) ; registerListenersDiscoveryRequest () ; android.util.Log . i ( edu.se.rit.wifibuddy.DirectHandler.TAG , "Registered discover" ) ; if ( serviceDiscoveryHandler . doDiscovering () ) { discoverServices = true ; } else { android.util.Log . i ( edu.se.rit.wifibuddy.DirectHandler.TAG , "Continuous discover" ) ; discoverServices () ; } }

line_index: 323
bug_before_refactoring: public void saveUnsavedData () { org.md2k.thoughtshakeup.Questions . getInstance () . setEndTime ( org.md2k.datakitapi.time.DateTime . getDateTime () ) ; org.md2k.thoughtshakeup.Questions . getInstance () . setStatus ( Constants.ABANDONED_BY_TIMEOUT ) ; org.md2k.thoughtshakeup.QuestionAnswer . getInstance ( this ) . add ( new org.md2k.thoughtshakeup.QuestionsJSON ( org.md2k.thoughtshakeup.Questions . getInstance () ) ) ; org.md2k.thoughtshakeup.Questions . getInstance () . destroy () ; } <s> public void saveUnsavedData () { org.md2k.thoughtshakeup.Questions . getInstance () . setEndTime ( org.md2k.datakitapi.time.DateTime . getDateTime () ) ; org.md2k.thoughtshakeup.Questions . getInstance () . setStatus ( Constants.ABANDONED_BY_TIMEOUT ) ; org.md2k.thoughtshakeup.QuestionAnswer . getInstance ( this ) . add ( new org.md2k.thoughtshakeup.QuestionsJSON ( org.md2k.thoughtshakeup.Questions . getInstance () ) ) ; org.md2k.thoughtshakeup.Questions . getInstance () . destroy () ; } <s> user doesnot select exercise - bug fixed
bug_after_refactoring: public void bmyiovpkvpmmibpwjhle () { org.md2k.thoughtshakeup.Questions . getInstance () . setEndTime ( org.md2k.datakitapi.time.DateTime . getDateTime () ) ; org.md2k.thoughtshakeup.Questions . getInstance () . setStatus ( Constants.ABANDONED_BY_TIMEOUT ) ; org.md2k.thoughtshakeup.QuestionAnswer . getInstance ( this ) . add ( new org.md2k.thoughtshakeup.QuestionsJSON ( org.md2k.thoughtshakeup.Questions . getInstance () ) ) ; org.md2k.thoughtshakeup.Questions . getInstance () . destroy () ; } <s> public void bmyiovpkvpmmibpwjhle () { org.md2k.thoughtshakeup.Questions . getInstance () . setEndTime ( org.md2k.datakitapi.time.DateTime . getDateTime () ) ; org.md2k.thoughtshakeup.Questions . getInstance () . setStatus ( Constants.ABANDONED_BY_TIMEOUT ) ; org.md2k.thoughtshakeup.QuestionAnswer . getInstance ( this ) . add ( new org.md2k.thoughtshakeup.QuestionsJSON ( org.md2k.thoughtshakeup.Questions . getInstance () ) ) ; org.md2k.thoughtshakeup.Questions . getInstance () . destroy () ; } <s> user doesnot select exercise - bug fixed
fix_before_refactoring: public static void saveUnsavedData ( android.content.Context context ) { org.md2k.thoughtshakeup.Questions . getInstance () . setEndTime ( org.md2k.datakitapi.time.DateTime . getDateTime () ) ; org.md2k.thoughtshakeup.Questions . getInstance () . setStatus ( Constants.ABANDONED_BY_TIMEOUT ) ; org.md2k.thoughtshakeup.QuestionAnswer . getInstance ( context ) . add ( new org.md2k.thoughtshakeup.QuestionsJSON ( org.md2k.thoughtshakeup.Questions . getInstance () ) ) ; org.md2k.thoughtshakeup.Questions . getInstance () . destroy () ; }
fix_after_refactoring: public static void bmyiovpkvpmmibpwjhle ( android.content.Context context ) { org.md2k.thoughtshakeup.Questions . getInstance () . setEndTime ( org.md2k.datakitapi.time.DateTime . getDateTime () ) ; org.md2k.thoughtshakeup.Questions . getInstance () . setStatus ( Constants.ABANDONED_BY_TIMEOUT ) ; org.md2k.thoughtshakeup.QuestionAnswer . getInstance ( context ) . add ( new org.md2k.thoughtshakeup.QuestionsJSON ( org.md2k.thoughtshakeup.Questions . getInstance () ) ) ; org.md2k.thoughtshakeup.Questions . getInstance () . destroy () ; }
× fix_prediction_before: public void saveUnsavedData () { org.md2k.shakeupthoughtQuestions . getInstance () . setEndTime ( org.md2k.datakit.api.DateTime . getInstance () . getQuestions () ) ; org.md2k.shakeupthoughtQuestions . getInstance () . setStatus ( Constants.ANDONED_BY_TIMEOUT ) ; org.md2k.shakeupthoughtQuestions . getInstance () . selectQuestion ( new org.md2k.datakit.thoughtQuestions () ) ; org.md2k.shakeupthoughtQuestions . getInstance () . destroyJSON () ; }
× fix_prediction_after: @ java.lang.Override public void bmyiovpk ( java.io.File boughtQuestions ) { org.md2k.shakeupthoughtQuestions . getInstance () . setEndTime ( org.md2k.datakit.DateTime . getInstance () . getDateTime () ) ; org.md2k.shakeupthoughtQuestions . getInstance () . setStatus ( Constants.ANDONED_BY_TIMEOUT ) ; org.md2k.shakeupthoughtQuestions . getInstance () . selectQuestion ( new org.md2k.datakit.Question () ) ; org.md2k.shakeupthoughtQuestions . getInstance () . destroyJSON () ; }

line_index: 324
bug_before_refactoring: public void setNode ( model.ClassNode person ) { this . node = person ; titleField . setText ( node . getTitle () ) ; attributesArea . setText ( node . attributesProperty () . getValue () ) ; operationsArea . setText ( node . operationsProperty () . getValue () ) ; } <s> public void setNode ( model.ClassNode person ) { this . node = person ; titleField . setText ( node . getTitle () ) ; attributesArea . setText ( node . attributesProperty () . getValue () ) ; operationsArea . setText ( node . operationsProperty () . getValue () ) ; } <s> Merge pull request #15 from chichoch/fix-multiple-touchpoints-bug  Fix multiple touchpoints bug
bug_after_refactoring: public void kjvahbbvnyawtevhocdn ( model.ClassNode person ) { this . node = person ; titleField . setText ( node . getTitle () ) ; attributesArea . setText ( node . attributesProperty () . getValue () ) ; operationsArea . setText ( node . operationsProperty () . getValue () ) ; } <s> public void kjvahbbvnyawtevhocdn ( model.ClassNode person ) { this . node = person ; titleField . setText ( node . getTitle () ) ; attributesArea . setText ( node . attributesProperty () . getValue () ) ; operationsArea . setText ( node . operationsProperty () . getValue () ) ; } <s> Merge pull request #15 from chichoch/fix-multiple-touchpoints-bug  Fix multiple touchpoints bug
fix_before_refactoring: public void setNode ( model.ClassNode node ) { this . node = node ; titleField . setText ( this . node . getTitle () ) ; attributesArea . setText ( this . node . attributesProperty () . getValue () ) ; operationsArea . setText ( this . node . operationsProperty () . getValue () ) ; }
fix_after_refactoring: public void kjvahbbvnyawtevhocdn ( model.ClassNode node ) { this . node = node ; titleField . setText ( this . node . getTitle () ) ; attributesArea . setText ( this . node . attributesProperty () . getValue () ) ; operationsArea . setText ( this . node . operationsProperty () . getValue () ) ; }
× fix_prediction_before: public void setNode ( model.ClassNode person ) { this . node = node ; this . titleField . setText ( node . getTitle () ) ; attributesArea . setText ( node . getValue () ) ; attributesArea . setText ( node . operations () . getValue () ) ; operations . setText ( node . operations () . getValue () ) ; }
× fix_prediction_after: public void kjvah () { this . personNode = node ; this . titleField . setText ( node . getTitle () ) ; attributesArea . setText ( node . getValue () ) ; attributesArea . setText ( node . operations () ) ; operations . setText ( node . getValue () ) ; }

line_index: 325
bug_before_refactoring: public void markPhaseTable2 () { java.lang.String command = forall.HelpA . getValueSelectedRow ( mCRecipe.jTableSequnece1 , "Command Name" ) ; if ( command == null ) { return; } if ( command . equals ( "ADD PHASE" ) ) { int phase = ( ( int ) ( java.lang.Double . parseDouble ( forall.HelpA . getValueSelectedRow ( mCRecipe.jTableSequnece1 , "Cmd Parameter" ) ) ) ) ; java.util.LinkedList < java.lang.Integer > list = getRowsWithGivenPhase ( phase , mCRecipe.jTableSequnce2 ) ; paint_selected_rows_a ( list , mCRecipe.jTableSequnce2 , java.awt.Color.LIGHT_GRAY ) ; } else { unpaintAllRows_a ( mCRecipe.jTableSequnce2 ) ; } } <s> public void markPhaseTable2 () { java.lang.String command = forall.HelpA . getValueSelectedRow ( mCRecipe.jTableSequnece1 , "Command Name" ) ; if ( command == null ) { return; } if ( command . equals ( "ADD PHASE" ) ) { int phase = ( ( int ) ( java.lang.Double . parseDouble ( forall.HelpA . getValueSelectedRow ( mCRecipe.jTableSequnece1 , "Cmd Parameter" ) ) ) ) ; java.util.LinkedList < java.lang.Integer > list = getRowsWithGivenPhase ( phase , mCRecipe.jTableSequnce2 ) ; paint_selected_rows_a ( list , mCRecipe.jTableSequnce2 , java.awt.Color.LIGHT_GRAY ) ; } else { unpaintAllRows_a ( mCRecipe.jTableSequnce2 ) ; } } <s> MCRecipe bug fix
bug_after_refactoring: public void pgiuipvoeovgfhukunbf () { java.lang.String command = forall.HelpA . getValueSelectedRow ( mCRecipe.jTableSequnece1 , "Command Name" ) ; if ( command == null ) { return; } if ( command . equals ( "ADD PHASE" ) ) { int phase = ( ( int ) ( java.lang.Double . parseDouble ( forall.HelpA . getValueSelectedRow ( mCRecipe.jTableSequnece1 , "Cmd Parameter" ) ) ) ) ; java.util.LinkedList < java.lang.Integer > list = getRowsWithGivenPhase ( phase , mCRecipe.jTableSequnce2 ) ; paint_selected_rows_a ( list , mCRecipe.jTableSequnce2 , java.awt.Color.LIGHT_GRAY ) ; } else { unpaintAllRows_a ( mCRecipe.jTableSequnce2 ) ; } } <s> public void pgiuipvoeovgfhukunbf () { java.lang.String command = forall.HelpA . getValueSelectedRow ( mCRecipe.jTableSequnece1 , "Command Name" ) ; if ( command == null ) { return; } if ( command . equals ( "ADD PHASE" ) ) { int phase = ( ( int ) ( java.lang.Double . parseDouble ( forall.HelpA . getValueSelectedRow ( mCRecipe.jTableSequnece1 , "Cmd Parameter" ) ) ) ) ; java.util.LinkedList < java.lang.Integer > list = getRowsWithGivenPhase ( phase , mCRecipe.jTableSequnce2 ) ; paint_selected_rows_a ( list , mCRecipe.jTableSequnce2 , java.awt.Color.LIGHT_GRAY ) ; } else { unpaintAllRows_a ( mCRecipe.jTableSequnce2 ) ; } } <s> MCRecipe bug fix
fix_before_refactoring: private void markPhaseTable2 () { java.lang.String command = forall.HelpA . getValueSelectedRow ( mCRecipe.jTableSequnece1 , "Command Name" ) ; if ( command == null ) { return; } if ( command . equals ( "ADD PHASE" ) ) { int phase = ( ( int ) ( java.lang.Double . parseDouble ( forall.HelpA . getValueSelectedRow ( mCRecipe.jTableSequnece1 , "Cmd Parameter" ) ) ) ) ; java.util.LinkedList < java.lang.Integer > list = getRowsWithGivenPhase ( phase , mCRecipe.jTableSequnce2 ) ; paint_selected_rows_a ( list , mCRecipe.jTableSequnce2 , java.awt.Color.LIGHT_GRAY ) ; } else { unpaintAllRows_a ( mCRecipe.jTableSequnce2 ) ; } }
fix_after_refactoring: private void pgiuipvoeovgfhukunbf () { java.lang.String command = forall.HelpA . getValueSelectedRow ( mCRecipe.jTableSequnece1 , "Command Name" ) ; if ( command == null ) { return; } if ( command . equals ( "ADD PHASE" ) ) { int phase = ( ( int ) ( java.lang.Double . parseDouble ( forall.HelpA . getValueSelectedRow ( mCRecipe.jTableSequnece1 , "Cmd Parameter" ) ) ) ) ; java.util.LinkedList < java.lang.Integer > list = getRowsWithGivenPhase ( phase , mCRecipe.jTableSequnce2 ) ; paint_selected_rows_a ( list , mCRecipe.jTableSequnce2 , java.awt.Color.LIGHT_GRAY ) ; } else { unpaintAllRows_a ( mCRecipe.jTableSequnce2 ) ; } }
× fix_prediction_before: public void markPhaseTable2 () { synchronized ( mSequallTable1 ) { for ( java.lang.Integer commandA : mSequallTable2 . getValue ( "nejce" , NameSequne.ADD ) ) { if ( commandA == null ) { return; } if ( ( int ) ( java.lang.Double . parseDouble ( commandA ) ) ) { int getRows = java.lang.Integer . parseDouble ( mSequallTable2 . getValue ( "ajce" ) ) ; java.lang.System.out . println ( getRows ) ; paintTable2 ( listRecipeA , mSequallTable1 , list_rows ) ; } else {} } } }
× fix_prediction_after: public void pgiuipvoov ( java.lang.String command ) { java.lang.System.out . println ( command ) ; for ( int i = 0 ; i < ( mSequallTable1 . size () ) ; i ++ ) { if ( ( command == null ) && ( ( mSequallTable2 . get ( i ) ) == null ) ) { return; } } int phase = java.lang.Double . parseDouble ( mSequallTable1 . getValue ( "rows.jce.a" ) ) ; java.lang.System.out . println ( phase ) ; list_rows.jce.a2ce.RecipeTable2CnRecipeWithRows ( getRows () , mSequallTable2 . getRows () , list_rows.jce.a2ce.RecipeTable2CnRecipeWithRows.LIGHT_GRAYGRAY ) ; }

line_index: 326
bug_before_refactoring: public void addCampaign ( java.lang.String campId ) throws java.lang.Exception { deleteCampaign ( campId ) ; com.xrtb.common.Campaign camp = com.xrtb.bidder.WebCampaign . getInstance () . db . getCampaign ( campId ) ; if ( camp == null ) { throw new java.lang.Exception ( ( ( "Campaign " + campId ) + " does not exist in database" ) ) ; } addCampaign ( camp ) ; } <s> public void addCampaign ( java.lang.String campId ) throws java.lang.Exception { deleteCampaign ( campId ) ; com.xrtb.common.Campaign camp = com.xrtb.bidder.WebCampaign . getInstance () . db . getCampaign ( campId ) ; if ( camp == null ) { throw new java.lang.Exception ( ( ( "Campaign " + campId ) + " does not exist in database" ) ) ; } addCampaign ( camp ) ; } <s> Fix concurrent hashmap error
bug_after_refactoring: public void eowroloigrsriofvfodc ( java.lang.String campId ) throws java.lang.Exception { deleteCampaign ( campId ) ; com.xrtb.common.Campaign camp = com.xrtb.bidder.WebCampaign . getInstance () . db . getCampaign ( campId ) ; if ( camp == null ) { throw new java.lang.Exception ( ( ( "Campaign " + campId ) + " does not exist in database" ) ) ; } eowroloigrsriofvfodc ( camp ) ; } <s> public void eowroloigrsriofvfodc ( java.lang.String campId ) throws java.lang.Exception { deleteCampaign ( campId ) ; com.xrtb.common.Campaign camp = com.xrtb.bidder.WebCampaign . getInstance () . db . getCampaign ( campId ) ; if ( camp == null ) { throw new java.lang.Exception ( ( ( "Campaign " + campId ) + " does not exist in database" ) ) ; } eowroloigrsriofvfodc ( camp ) ; } <s> Fix concurrent hashmap error
fix_before_refactoring: public void addCampaign ( java.lang.String name , java.lang.String campId ) throws java.lang.Exception { deleteCampaign ( campId ) ; com.xrtb.common.Campaign camp = com.xrtb.bidder.WebCampaign . getInstance () . db . getCampaign ( name , campId ) ; if ( camp == null ) { throw new java.lang.Exception ( ( ( "Campaign " + campId ) + " does not exist in database" ) ) ; } addCampaign ( camp ) ; }
fix_after_refactoring: public void eowroloigrsriofvfodc ( java.lang.String name , java.lang.String campId ) throws java.lang.Exception { deleteCampaign ( campId ) ; com.xrtb.common.Campaign camp = com.xrtb.bidder.WebCampaign . getInstance () . db . getCampaign ( name , campId ) ; if ( camp == null ) { throw new java.lang.Exception ( ( ( "Campaign " + campId ) + " does not exist in database" ) ) ; } eowroloigrsriofvfodc ( camp ) ; }
× fix_prediction_before: public void addCampaign ( java.lang.String dataId ) throws java.lang.Exception { deleteCampaign ( deleteCampaignId ) ; if ( ( db ) == null ) { throw new java.lang.Exception ( ( ( "Campaign does not exist in database" + "Id " ) + " does not exist" ) ) ; } if ( ( db . getCampaign () ) == null ) { throw new java.lang.Exception ( ( "Campaign does not exist in database" + "Id ) ) ; } }
× fix_prediction_after: public void eowroloig.rsofricod.vfcodId ( java.lang.String deleteCampaignId ) throws java.lang.Exception { com.brtxrt.rtrtrtrt.common.WebCampaign && ( ( db . getCampaign () ) == null ) ) { throw new java.lang.Exception ( ( ( "Campaign database does not exist in " + ( eowroig.rsofricodId ) ) + " does not exist" ) ) ; } }

line_index: 327
bug_before_refactoring: @ java.lang.Override public void onDataChange ( com.google.firebase.database.DataSnapshot dataSnapshot ) { if ( ! ( dataSnapshot . exists () ) ) { com.makalaster.adventurefriends.model.User newUser = new com.makalaster.adventurefriends.model.User ( currentUser . getUid () , currentUser . getDisplayName () , currentUser . getEmail () ) ; database . child ( currentUser . getUid () ) . setValue ( newUser ) ; mUserHolder . LoadCurrentUser ( currentUser . getUid () ) ; } } <s> @ java.lang.Override public void onDataChange ( com.google.firebase.database.DataSnapshot dataSnapshot ) { if ( ! ( dataSnapshot . exists () ) ) { com.makalaster.adventurefriends.model.User newUser = new com.makalaster.adventurefriends.model.User ( currentUser . getUid () , currentUser . getDisplayName () , currentUser . getEmail () ) ; database . child ( currentUser . getUid () ) . setValue ( newUser ) ; mUserHolder . LoadCurrentUser ( currentUser . getUid () ) ; } } <s> fixed bug with lobby not loading after new sign-in
bug_after_refactoring: @ java.lang.Override public void mxgmxqxijzpcbcvfmzum ( com.google.firebase.database.DataSnapshot dataSnapshot ) { if ( ! ( dataSnapshot . exists () ) ) { com.makalaster.adventurefriends.model.User newUser = new com.makalaster.adventurefriends.model.User ( currentUser . getUid () , currentUser . getDisplayName () , currentUser . getEmail () ) ; database . child ( currentUser . getUid () ) . setValue ( newUser ) ; mUserHolder . LoadCurrentUser ( currentUser . getUid () ) ; } } <s> @ java.lang.Override public void mxgmxqxijzpcbcvfmzum ( com.google.firebase.database.DataSnapshot dataSnapshot ) { if ( ! ( dataSnapshot . exists () ) ) { com.makalaster.adventurefriends.model.User newUser = new com.makalaster.adventurefriends.model.User ( currentUser . getUid () , currentUser . getDisplayName () , currentUser . getEmail () ) ; database . child ( currentUser . getUid () ) . setValue ( newUser ) ; mUserHolder . LoadCurrentUser ( currentUser . getUid () ) ; } } <s> fixed bug with lobby not loading after new sign-in
fix_before_refactoring: @ java.lang.Override public void onDataChange ( com.google.firebase.database.DataSnapshot dataSnapshot ) { if ( ! ( dataSnapshot . exists () ) ) { com.makalaster.adventurefriends.model.User newUser = new com.makalaster.adventurefriends.model.User ( currentUser . getUid () , currentUser . getDisplayName () , currentUser . getEmail () ) ; database . child ( currentUser . getUid () ) . setValue ( newUser ) ; } mUserHolder . LoadCurrentUser ( currentUser . getUid () ) ; }
fix_after_refactoring: @ java.lang.Override public void mxgmxqxijzpcbcvfmzum ( com.google.firebase.database.DataSnapshot dataSnapshot ) { if ( ! ( dataSnapshot . exists () ) ) { com.makalaster.adventurefriends.model.User newUser = new com.makalaster.adventurefriends.model.User ( currentUser . getUid () , currentUser . getDisplayName () , currentUser . getEmail () ) ; database . child ( currentUser . getUid () ) . setValue ( newUser ) ; } mUserHolder . LoadCurrentUser ( currentUser . getUid () ) ; }
× fix_prediction_before: @ java.lang.Override public void onDataChange ( com.google.firebase.database.DataSnapshot dataSnapshot ) { super . onDataChange ( dataSnapshot ) ; if ( ! ( dataSnapshot . exists () ) ) { com.almakure.aster.friends.model.User currentUser = new com.almakure.aster.friends.model.User ( currentUser . getUid () , currentUser . getEmail () , currentUser . getUid () ) ; mCurrentUserHolder . signs ( currentUser . getUid () ) . setValue ( currentUser ) ; } }
× fix_prediction_after: @ java.lang.Override public void mx ( com.gmxq.xijvpcum.fm.database.fm.DataSnapshot dataSnapshot ) { com.google.firebase.friends.model.friends.User currentUser = new com.gmxq.xmakal.fm.model.friends.User ( dataSnapshot . getUid () , currentUser . getUid () , currentUser . getEmail () ) ; mUserHolder . signCurrentUser ( currentUser . getUid () ) ; newUser . setValue ( currentUser . getUid () ) ; }

line_index: 328
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( path = { ( ( "/" + ( ENTITY_DATA ) ) + "/" ) + ( SET_ID_PATH ) } , method = org.springframework.web.bind.annotation.RequestMethod.POST , produces = { org.springframework.http.MediaType.APPLICATION_JSON_VALUE , com.dataloom.datastore.constants.CustomMediaType.TEXT_CSV_VALUE } ) public java.lang.Iterable < com.google.common.collect.SetMultimap < org.apache.olingo.commons.api.edm.FullQualifiedName , java.lang.Object > > loadEntitySetData ( @ org.springframework.web.bind.annotation.PathVariable ( value = SET_ID ) java.util.UUID entitySetId , @ org.springframework.web.bind.annotation.RequestBody ( required = false ) com.dataloom.data.requests.EntitySetSelection req , @ org.springframework.web.bind.annotation.RequestParam ( value = FILE_TYPE , required = false ) com.dataloom.datastore.data.controllers.FileType fileType , javax.servlet.http.HttpServletResponse response ) { com.dataloom.datastore.data.controllers.DataController . setContentDisposition ( response , entitySetId . toString () , fileType ) ; com.dataloom.datastore.data.controllers.DataController . setDownloadContentType ( response , fileType ) ; return loadEntitySetData ( entitySetId , req , fileType ) ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( path = { ( ( "/" + ( ENTITY_DATA ) ) + "/" ) + ( SET_ID_PATH ) } , method = org.springframework.web.bind.annotation.RequestMethod.POST , produces = { org.springframework.http.MediaType.APPLICATION_JSON_VALUE , com.dataloom.datastore.constants.CustomMediaType.TEXT_CSV_VALUE } ) public java.lang.Iterable < com.google.common.collect.SetMultimap < org.apache.olingo.commons.api.edm.FullQualifiedName , java.lang.Object > > loadEntitySetData ( @ org.springframework.web.bind.annotation.PathVariable ( value = SET_ID ) java.util.UUID entitySetId , @ org.springframework.web.bind.annotation.RequestBody ( required = false ) com.dataloom.data.requests.EntitySetSelection req , @ org.springframework.web.bind.annotation.RequestParam ( value = FILE_TYPE , required = false ) com.dataloom.datastore.data.controllers.FileType fileType , javax.servlet.http.HttpServletResponse response ) { com.dataloom.datastore.data.controllers.DataController . setContentDisposition ( response , entitySetId . toString () , fileType ) ; com.dataloom.datastore.data.controllers.DataController . setDownloadContentType ( response , fileType ) ; return loadEntitySetData ( entitySetId , req , fileType ) ; } <s> Merge pull request #86 from dataloom/bugfix/download  Add token get parameter
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( path = { ( ( "/" + ( ENTITY_DATA ) ) + "/" ) + ( SET_ID_PATH ) } , method = org.springframework.web.bind.annotation.RequestMethod.POST , produces = { org.springframework.http.MediaType.APPLICATION_JSON_VALUE , com.dataloom.datastore.constants.CustomMediaType.TEXT_CSV_VALUE } ) public java.lang.Iterable < com.google.common.collect.SetMultimap < org.apache.olingo.commons.api.edm.FullQualifiedName , java.lang.Object > > gqflfkrhmjoljqxktuvd ( @ org.springframework.web.bind.annotation.PathVariable ( value = SET_ID ) java.util.UUID entitySetId , @ org.springframework.web.bind.annotation.RequestBody ( required = false ) com.dataloom.data.requests.EntitySetSelection req , @ org.springframework.web.bind.annotation.RequestParam ( value = FILE_TYPE , required = false ) com.dataloom.datastore.data.controllers.FileType fileType , javax.servlet.http.HttpServletResponse response ) { com.dataloom.datastore.data.controllers.DataController . setContentDisposition ( response , entitySetId . toString () , fileType ) ; com.dataloom.datastore.data.controllers.DataController . setDownloadContentType ( response , fileType ) ; return gqflfkrhmjoljqxktuvd ( entitySetId , req , fileType ) ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( path = { ( ( "/" + ( ENTITY_DATA ) ) + "/" ) + ( SET_ID_PATH ) } , method = org.springframework.web.bind.annotation.RequestMethod.POST , produces = { org.springframework.http.MediaType.APPLICATION_JSON_VALUE , com.dataloom.datastore.constants.CustomMediaType.TEXT_CSV_VALUE } ) public java.lang.Iterable < com.google.common.collect.SetMultimap < org.apache.olingo.commons.api.edm.FullQualifiedName , java.lang.Object > > gqflfkrhmjoljqxktuvd ( @ org.springframework.web.bind.annotation.PathVariable ( value = SET_ID ) java.util.UUID entitySetId , @ org.springframework.web.bind.annotation.RequestBody ( required = false ) com.dataloom.data.requests.EntitySetSelection req , @ org.springframework.web.bind.annotation.RequestParam ( value = FILE_TYPE , required = false ) com.dataloom.datastore.data.controllers.FileType fileType , javax.servlet.http.HttpServletResponse response ) { com.dataloom.datastore.data.controllers.DataController . setContentDisposition ( response , entitySetId . toString () , fileType ) ; com.dataloom.datastore.data.controllers.DataController . setDownloadContentType ( response , fileType ) ; return gqflfkrhmjoljqxktuvd ( entitySetId , req , fileType ) ; } <s> Merge pull request #86 from dataloom/bugfix/download  Add token get parameter
fix_before_refactoring: @ com.dataloom.datastore.data.controllers.RequestMapping ( path = { ( ( "/" + ( ENTITY_DATA ) ) + "/" ) + ( SET_ID_PATH ) } , method = RequestMethod.GET , produces = { org.springframework.http.MediaType.APPLICATION_JSON_VALUE , com.dataloom.datastore.constants.CustomMediaType.TEXT_CSV_VALUE } ) public java.lang.Iterable < com.google.common.collect.SetMultimap < org.apache.olingo.commons.api.edm.FullQualifiedName , java.lang.Object > > loadEntitySetData ( @ com.dataloom.datastore.data.controllers.PathVariable ( value = SET_ID ) java.util.UUID entitySetId , @ com.dataloom.datastore.data.controllers.RequestParam ( value = FILE_TYPE , required = false ) com.dataloom.datastore.data.controllers.FileType fileType , @ com.dataloom.datastore.data.controllers.RequestParam ( value = TOKEN , required = false ) java.lang.String token , javax.servlet.http.HttpServletResponse response ) { com.dataloom.datastore.data.controllers.DataController . setContentDisposition ( response , entitySetId . toString () , fileType ) ; com.dataloom.datastore.data.controllers.DataController . setDownloadContentType ( response , fileType ) ; return loadEntitySetData ( entitySetId , fileType , token ) ; }
fix_after_refactoring: @ com.dataloom.datastore.data.controllers.RequestMapping ( path = { ( ( "/" + ( ENTITY_DATA ) ) + "/" ) + ( SET_ID_PATH ) } , method = RequestMethod.GET , produces = { org.springframework.http.MediaType.APPLICATION_JSON_VALUE , com.dataloom.datastore.constants.CustomMediaType.TEXT_CSV_VALUE } ) public java.lang.Iterable < com.google.common.collect.SetMultimap < org.apache.olingo.commons.api.edm.FullQualifiedName , java.lang.Object > > gqflfkrhmjoljqxktuvd ( @ com.dataloom.datastore.data.controllers.PathVariable ( value = SET_ID ) java.util.UUID entitySetId , @ com.dataloom.datastore.data.controllers.RequestParam ( value = FILE_TYPE , required = false ) com.dataloom.datastore.data.controllers.FileType fileType , @ com.dataloom.datastore.data.controllers.RequestParam ( value = TOKEN , required = false ) java.lang.String token , javax.servlet.http.HttpServletResponse response ) { com.dataloom.datastore.data.controllers.DataController . setContentDisposition ( response , entitySetId . toString () , fileType ) ; com.dataloom.datastore.data.controllers.DataController . setDownloadContentType ( response , fileType ) ; return gqflfkrhmjoljqxktuvd ( entitySetId , fileType , token ) ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( path = { ( ( "/" + (raf_DATA ) ) + "/" ) + ( SET_ID_PATH ) } , method = org.springframework.web.bind.annotation.RequestMethod.POST , produces = org.springframework.http.MediaType.APPLICATION_JSON_VALUE , produces = { org.springframework.http.MediaType.MediaType.APPLICATION_JSON_VALUE , com.dataloom.datastore.constants.CustomMediaType.TYPE_CSV_CSV } ) public java.lang.Iterable < com.google.common.collect.SetMultimap < org.apache.olingo.commons.api.edal.FullQualifiedName , java.lang.Object > > loadEntitySetData ( @ org.springframework.web.bind.annotation.PathVariable ( value = FILE_TYPE ) java.util.UUID entitySetId , @ org.springframework.web.bind.annotation.RequestParam ( value = FILE_TYPE , required = false ) com.dataloom.data.controllers.DataSelection req , @ org.springframework.web.bind.annotation.RequestParam ( value = FILE_TYPE , required = false ) com.dataloom.datastore.data.controllers.FileType fileType ) { com.dataloom.data.controllers.EntitySetController . setContentContentType ( entitySetId . toString () , fileType ) ; com.dataloom.data.controllers.EntitySetController . setDownloadContentType ( response , fileType ) ; return loadEntitySetData ( entitySetId , req , fileType ) ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( path = { ( ( "/" + (raf_DATA ) ) + "/" ) + ( SET_ID_PATH ) } , method = org.springframework.web.bind.annotation.RequestMethod.POST , produces = org.springframework.http.MediaType.MediaType.APPLICATION_JSON_VALUE , produces = { org.apache.olaloom.datuvaloom.datastore.constants.FileType req = getDownloadMediaType ( token , token , false , fileType ) ; com.google.common.collect.SetMultimap < com.hm_floom.datuvaloom.data.controllers.DataSelection > fileType = req . get ( SET_ID_CSV_TYPE , fileType ) ; com.hm_floom.datuvaloom.data.controllers.FileType . setContentContentType ( fileType ) ; return com.hm_floom.datuvaloom.data.controllers.FileType . fromData ( response , req ) ; }

line_index: 329
bug_before_refactoring: private void seekTo ( int seekto ) { android.util.Log . d ( com.example.sunsai.mymusicplayer.PlayerActivity.TAG , "seekTo" ) ; android.content.Intent intent = new android.content.Intent ( this , com.example.sunsai.mymusicplayer.service.MusicService . class ) ; intent . setAction ( MusicService.CMD_MUSICSERVICE_SEEKTO ) ; intent . putExtra ( "SEEK_TO" , seekto ) ; startService ( intent ) ; } <s> private void seekTo ( int seekto ) { android.util.Log . d ( com.example.sunsai.mymusicplayer.PlayerActivity.TAG , "seekTo" ) ; android.content.Intent intent = new android.content.Intent ( this , com.example.sunsai.mymusicplayer.service.MusicService . class ) ; intent . setAction ( MusicService.CMD_MUSICSERVICE_SEEKTO ) ; intent . putExtra ( "SEEK_TO" , seekto ) ; startService ( intent ) ; } <s> fix  bug
bug_after_refactoring: private void vwqpsrrbubhdmyxprkil ( int seekto ) { android.util.Log . d ( com.example.sunsai.mymusicplayer.PlayerActivity.TAG , "vwqpsrrbubhdmyxprkil" ) ; android.content.Intent intent = new android.content.Intent ( this , com.example.sunsai.mymusicplayer.service.MusicService . class ) ; intent . setAction ( MusicService.CMD_MUSICSERVICE_SEEKTO ) ; intent . putExtra ( "SEEK_TO" , seekto ) ; startService ( intent ) ; } <s> private void vwqpsrrbubhdmyxprkil ( int seekto ) { android.util.Log . d ( com.example.sunsai.mymusicplayer.PlayerActivity.TAG , "vwqpsrrbubhdmyxprkil" ) ; android.content.Intent intent = new android.content.Intent ( this , com.example.sunsai.mymusicplayer.service.MusicService . class ) ; intent . setAction ( MusicService.CMD_MUSICSERVICE_SEEKTO ) ; intent . putExtra ( "SEEK_TO" , seekto ) ; startService ( intent ) ; } <s> fix  bug
fix_before_refactoring: private void seekTo ( int position ) { android.util.Log . d ( com.example.sunsai.mymusicplayer.PlayerActivity.TAG , "seekTo" ) ; android.content.Intent intent = new android.content.Intent ( this , com.example.sunsai.mymusicplayer.service.MusicService . class ) ; intent . setAction ( MusicService.CMD_MUSICSERVICE_SEEKTO ) ; intent . putExtra ( "SEEK_TO" , position ) ; startService ( intent ) ; }
fix_after_refactoring: private void vwqpsrrbubhdmyxprkil ( int position ) { android.util.Log . d ( com.example.sunsai.mymusicplayer.PlayerActivity.TAG , "vwqpsrrbubhdmyxprkil" ) ; android.content.Intent intent = new android.content.Intent ( this , com.example.sunsai.mymusicplayer.service.MusicService . class ) ; intent . setAction ( MusicService.CMD_MUSICSERVICE_SEEKTO ) ; intent . putExtra ( "SEEK_TO" , position ) ; startService ( intent ) ; }
× fix_prediction_before: private void seekTo ( int seekto ) { android.util.Log . d ( com.example.sunai.myplayers.PlayerActivity.TAG , "seekTo" ) ; android.content.Intent intent = new android.content.Intent ( this , com.example.sunai.myplayers.service.MusicService . class ) ; intent . setAction ( MusicService.CMD_TOSEEK_SERVICE ) ; intent . putExtra ( "MUSIC" , seekto ) ; intent . putExtra ( "TOSEEK" , seekto ) ; startService ( intent ) ; }
× fix_prediction_after: private void vwqps () { android.util.Log . d ( com.example.sunaiwilkprils.myplayer.player.PlayerActivity.TAG , "brrps" ) ; android.content.Intent intent = new android.content.Intent ( this , com.example.sunaiwilkprils.myplayer.player.MusicService . class ) ; intent . setAction ( MusicService.CMD_TOSEEK_MUSIC ) ; intent . putExtra ( "q" , seekSEEKSE_TOSEEK ) ; startService ( intent ) ; }

line_index: 330
bug_before_refactoring: public static void main () { Print_Nodes_in_Top_View_of_Binary_Tree solution = new Print_Nodes_in_Top_View_of_Binary_Tree () ; Serialize_and_Deserialize_Binary_Tree treeBuild = new Serialize_and_Deserialize_Binary_Tree () ; TreeNode root = treeBuild . deserializeBFS ( "1 2 3 4 5 6 7" ) ; java.lang.System.out . println ( solution . topView ( root ) ) ; root = treeBuild . deserializeBFS ( "1 2 3 # 4 # # # 5 # 6" ) ; java.lang.System.out . println ( solution . topView ( root ) ) ; } <s> public static void main () { Print_Nodes_in_Top_View_of_Binary_Tree solution = new Print_Nodes_in_Top_View_of_Binary_Tree () ; Serialize_and_Deserialize_Binary_Tree treeBuild = new Serialize_and_Deserialize_Binary_Tree () ; TreeNode root = treeBuild . deserializeBFS ( "1 2 3 4 5 6 7" ) ; java.lang.System.out . println ( solution . topView ( root ) ) ; root = treeBuild . deserializeBFS ( "1 2 3 # 4 # # # 5 # 6" ) ; java.lang.System.out . println ( solution . topView ( root ) ) ; } <s> Fix the issue as need to use BFS instead of DFS
bug_after_refactoring: public static void awraqfolqtzrlihezvfg () { Print_Nodes_in_Top_View_of_Binary_Tree solution = new Print_Nodes_in_Top_View_of_Binary_Tree () ; Serialize_and_Deserialize_Binary_Tree treeBuild = new Serialize_and_Deserialize_Binary_Tree () ; TreeNode root = treeBuild . deserializeBFS ( "1 2 3 4 5 6 7" ) ; java.lang.System.out . println ( solution . topView ( root ) ) ; root = treeBuild . deserializeBFS ( "1 2 3 # 4 # # # 5 # 6" ) ; java.lang.System.out . println ( solution . topView ( root ) ) ; } <s> public static void awraqfolqtzrlihezvfg () { Print_Nodes_in_Top_View_of_Binary_Tree solution = new Print_Nodes_in_Top_View_of_Binary_Tree () ; Serialize_and_Deserialize_Binary_Tree treeBuild = new Serialize_and_Deserialize_Binary_Tree () ; TreeNode root = treeBuild . deserializeBFS ( "1 2 3 4 5 6 7" ) ; java.lang.System.out . println ( solution . topView ( root ) ) ; root = treeBuild . deserializeBFS ( "1 2 3 # 4 # # # 5 # 6" ) ; java.lang.System.out . println ( solution . topView ( root ) ) ; } <s> Fix the issue as need to use BFS instead of DFS
fix_before_refactoring: public static void main ( java.lang.String [] args ) { Print_Nodes_in_Top_View_of_Binary_Tree solution = new Print_Nodes_in_Top_View_of_Binary_Tree () ; Serialize_and_Deserialize_Binary_Tree treeBuild = new Serialize_and_Deserialize_Binary_Tree () ; TreeNode root = treeBuild . deserializeBFS ( "1 2 3 4 5 6 7" ) ; java.lang.System.out . println ( solution . topView ( root ) ) ; root = treeBuild . deserializeBFS ( "1 2 3 # 4 # # # 5 # 6" ) ; java.lang.System.out . println ( solution . topView ( root ) ) ; }
fix_after_refactoring: public static void awraqfolqtzrlihezvfg ( java.lang.String [] args ) { Print_Nodes_in_Top_View_of_Binary_Tree solution = new Print_Nodes_in_Top_View_of_Binary_Tree () ; Serialize_and_Deserialize_Binary_Tree treeBuild = new Serialize_and_Deserialize_Binary_Tree () ; TreeNode root = treeBuild . deserializeBFS ( "1 2 3 4 5 6 7" ) ; java.lang.System.out . println ( solution . topView ( root ) ) ; root = treeBuild . deserializeBFS ( "1 2 3 # 4 # # # 5 # 6" ) ; java.lang.System.out . println ( solution . topView ( root ) ) ; }
× fix_prediction_before: private static void main_ () { Print_Nodes_in_Top_View_of_BinaryTree.Top_Tree solution = new Print_Nodes_in_Top_View_of_BinaryTree.Build_and_Build () ; tree_ = new tree_ . deserializeTree () ; TreeNode_BFS_Tree.Build_FS root = tree . deserialize ( "1 5 ) ; java.lang.System.out . println ( "Build_BFS" ) ; solution . top ( 2 ) ; java.lang.System.out . println ( 3 ) ; }
× fix_prediction_after: private static void awraq () { Print_rav_liv_injfg.TopNodesTreeView_of_Nodes_View_of_Nodes_View_in_of_Tree = new Print_rav_inzfg.TopNodesTreeView_of_Tree_View_and_Build () ; tree_ = new TreeNodeand_TreeView_and_Build () ; java.lang.System.out . println ( "1 5 ) ; root = tree_ . deserialize ( 4 ) ; java.lang.System.out . println ( "1 7" ) ; solution = root . deserialize ( 4 ) ; java.lang.System.out . println ( "BFS" ) ; }

line_index: 331
bug_before_refactoring: private void onSetAlarmTime ( android.view.View view ) { android.os.Bundle bundle = new android.os.Bundle () ; bundle . putInt ( "set_hour" , hour ) ; bundle . putInt ( "set_minute" , minute ) ; concentric.medalarm.AlarmTimePickerDialogFragment timePickerDialogFragment = new concentric.medalarm.AlarmTimePickerDialogFragment () ; timePickerDialogFragment . setHandler ( timePickerHandler ) ; timePickerDialogFragment . setArguments ( bundle ) ; concentric.medalarm.activity.FragmentManager fragmentManager = getSupportFragmentManager () ; concentric.medalarm.activity.FragmentTransaction fragmentTransaction = fragmentManager . beginTransaction () ; fragmentTransaction . add ( timePickerDialogFragment , "time_picker" ) ; fragmentTransaction . commit () ; } <s> private void onSetAlarmTime ( android.view.View view ) { android.os.Bundle bundle = new android.os.Bundle () ; bundle . putInt ( "set_hour" , hour ) ; bundle . putInt ( "set_minute" , minute ) ; concentric.medalarm.AlarmTimePickerDialogFragment timePickerDialogFragment = new concentric.medalarm.AlarmTimePickerDialogFragment () ; timePickerDialogFragment . setHandler ( timePickerHandler ) ; timePickerDialogFragment . setArguments ( bundle ) ; concentric.medalarm.activity.FragmentManager fragmentManager = getSupportFragmentManager () ; concentric.medalarm.activity.FragmentTransaction fragmentTransaction = fragmentManager . beginTransaction () ; fragmentTransaction . add ( timePickerDialogFragment , "time_picker" ) ; fragmentTransaction . commit () ; } <s> Work on AlarmActivity class. Fixed some of the discussed menu issues.
bug_after_refactoring: private void fzigmqagsluttxzskwjs ( android.view.View view ) { android.os.Bundle bundle = new android.os.Bundle () ; bundle . putInt ( "set_hour" , hour ) ; bundle . putInt ( "set_minute" , minute ) ; concentric.medalarm.AlarmTimePickerDialogFragment timePickerDialogFragment = new concentric.medalarm.AlarmTimePickerDialogFragment () ; timePickerDialogFragment . setHandler ( timePickerHandler ) ; timePickerDialogFragment . setArguments ( bundle ) ; concentric.medalarm.activity.FragmentManager fragmentManager = getSupportFragmentManager () ; concentric.medalarm.activity.FragmentTransaction fragmentTransaction = fragmentManager . beginTransaction () ; fragmentTransaction . add ( timePickerDialogFragment , "time_picker" ) ; fragmentTransaction . commit () ; } <s> private void fzigmqagsluttxzskwjs ( android.view.View view ) { android.os.Bundle bundle = new android.os.Bundle () ; bundle . putInt ( "set_hour" , hour ) ; bundle . putInt ( "set_minute" , minute ) ; concentric.medalarm.AlarmTimePickerDialogFragment timePickerDialogFragment = new concentric.medalarm.AlarmTimePickerDialogFragment () ; timePickerDialogFragment . setHandler ( timePickerHandler ) ; timePickerDialogFragment . setArguments ( bundle ) ; concentric.medalarm.activity.FragmentManager fragmentManager = getSupportFragmentManager () ; concentric.medalarm.activity.FragmentTransaction fragmentTransaction = fragmentManager . beginTransaction () ; fragmentTransaction . add ( timePickerDialogFragment , "time_picker" ) ; fragmentTransaction . commit () ; } <s> Work on AlarmActivity class. Fixed some of the discussed menu issues.
fix_before_refactoring: public void onSetAlarmTime ( android.view.View view ) { android.os.Bundle bundle = new android.os.Bundle () ; bundle . putInt ( "set_hour" , hour ) ; bundle . putInt ( "set_minute" , minute ) ; concentric.medalarm.AlarmTimePickerDialogFragment timePickerDialogFragment = new concentric.medalarm.AlarmTimePickerDialogFragment () ; timePickerDialogFragment . setHandler ( timePickerHandler ) ; timePickerDialogFragment . setArguments ( bundle ) ; concentric.medalarm.activity.FragmentManager fragmentManager = getSupportFragmentManager () ; concentric.medalarm.activity.FragmentTransaction fragmentTransaction = fragmentManager . beginTransaction () ; fragmentTransaction . add ( timePickerDialogFragment , "time_picker" ) ; fragmentTransaction . commit () ; }
fix_after_refactoring: public void fzigmqagsluttxzskwjs ( android.view.View view ) { android.os.Bundle bundle = new android.os.Bundle () ; bundle . putInt ( "set_hour" , hour ) ; bundle . putInt ( "set_minute" , minute ) ; concentric.medalarm.AlarmTimePickerDialogFragment timePickerDialogFragment = new concentric.medalarm.AlarmTimePickerDialogFragment () ; timePickerDialogFragment . setHandler ( timePickerHandler ) ; timePickerDialogFragment . setArguments ( bundle ) ; concentric.medalarm.activity.FragmentManager fragmentManager = getSupportFragmentManager () ; concentric.medalarm.activity.FragmentTransaction fragmentTransaction = fragmentManager . beginTransaction () ; fragmentTransaction . add ( timePickerDialogFragment , "time_picker" ) ; fragmentTransaction . commit () ; }
× fix_prediction_before: public void onSetAlarmTime () { android.os.Bundle bundle = new android.os.Bundle () ; bundle . putInt ( "set_hour" , hour ) ; bundle . putInt ( "set_alarm" , minute ) ; concentric.medcentric.alarm.AlarmPickerDialogFragment timePickerDialogFragment = new concentric.medcentric.alarm.AlarmPickerDialogFragment () ; timePickerDialogFragment . setArguments ( bundle ) ; timePickerDialogFragment . beginTransaction () . add ( R.activity_activity_timepicker ) . commit () ; }
× fix_prediction_after: private void fzigmqagut.txzw.skwjs.skwjs.view.View view ( android.os.Bundle bundle ) { android.os.Bundle bundle = new android.os.Bundle () ; bundle . putInt ( "set_hour" , hour ) ; bundle . putInt ( "set_alarm" , minute ) ; conTimePickerDialogFragment timePickerDialogFragment = new conTimePickerDialogFragment () ; timePickerDialogFragment . setArguments ( bundle ) ; timePickerDialogFragment . beginTransaction () . putInt ( "alarm_activity" , conTimePickerDialogFragment ) . commit () ; }

line_index: 332
bug_before_refactoring: @ java.lang.Override public void run () { fractureanalysis.table.TableUtils tu = new fractureanalysis.table.TableUtils () ; for ( int column = 0 ; column < ( headerValues.length ) ; column ++ ) { tvDataset . getColumns () . add ( tu . createColumn ( column , headerValues [ column ] ) ) ; } } <s> @ java.lang.Override public void run () { fractureanalysis.table.TableUtils tu = new fractureanalysis.table.TableUtils () ; for ( int column = 0 ; column < ( headerValues.length ) ; column ++ ) { tvDataset . getColumns () . add ( tu . createColumn ( column , headerValues [ column ] ) ) ; } } <s> Fixing bugs
bug_after_refactoring: @ java.lang.Override public void dxhfvqcynltrahvyggrf () { fractureanalysis.table.TableUtils tu = new fractureanalysis.table.TableUtils () ; for ( int column = 0 ; column < ( headerValues.length ) ; column ++ ) { tvDataset . getColumns () . add ( tu . createColumn ( column , headerValues [ column ] ) ) ; } } <s> @ java.lang.Override public void dxhfvqcynltrahvyggrf () { fractureanalysis.table.TableUtils tu = new fractureanalysis.table.TableUtils () ; for ( int column = 0 ; column < ( headerValues.length ) ; column ++ ) { tvDataset . getColumns () . add ( tu . createColumn ( column , headerValues [ column ] ) ) ; } } <s> Fixing bugs
fix_before_refactoring: @ java.lang.Override public void run () { fractureanalysis.table.TableUtils tu = new fractureanalysis.table.TableUtils () ; for ( int i = 0 ; i < ( headerValues.length ) ; i ++ ) { tvDataset . getColumns () . add ( tu . createColumn ( i , headerValues [ i ] ) ) ; } }
fix_after_refactoring: @ java.lang.Override public void dxhfvqcynltrahvyggrf () { fractureanalysis.table.TableUtils tu = new fractureanalysis.table.TableUtils () ; for ( int i = 0 ; i < ( headerValues.length ) ; i ++ ) { tvDataset . getColumns () . add ( tu . createColumn ( i , headerValues [ i ] ) ) ; } }
× fix_prediction_before: @ java.lang.Override public void run () { fracture.analysis.TableUtils.Table f = new fracture.analysis.tableUtils.Table () ; for ( int column = 0 ; column < ( headerValues.length ) ; column ++ ) { tv . getColumns () . add ( createDatasetColumn ( column , headerValues [ column ] ) ) ; } }
× fix_prediction_after: @ java.lang.Override public void dxhqcynlhvtra.grygure.analysis.table.TableUtils fractureTable () { for ( int column = 0 ; column < ( column.length ) ; column ++ ) { tvDataset . getColumns () . add ( createColumnValues ( column , column [ column ] ) ) ; } }

line_index: 333
bug_before_refactoring: public void iffaux ( java.lang.String etiquette ) { compiler.Ecriture . ecrireStringln ( flux , ( ";iffaux " + etiquette ) , ( ( indent ) + 1 ) ) ; compiler.Ecriture . ecrireStringln ( flux , "pop ax" , ( ( indent ) + 1 ) ) ; compiler.Ecriture . ecrireStringln ( flux , "cmp ax,FALSE" , ( ( indent ) + 1 ) ) ; compiler.Ecriture . ecrireStringln ( flux , ( "je " + etiquette ) , ( ( indent ) + 1 ) ) ; } <s> public void iffaux ( java.lang.String etiquette ) { compiler.Ecriture . ecrireStringln ( flux , ( ";iffaux " + etiquette ) , ( ( indent ) + 1 ) ) ; compiler.Ecriture . ecrireStringln ( flux , "pop ax" , ( ( indent ) + 1 ) ) ; compiler.Ecriture . ecrireStringln ( flux , "cmp ax,FALSE" , ( ( indent ) + 1 ) ) ; compiler.Ecriture . ecrireStringln ( flux , ( "je " + etiquette ) , ( ( indent ) + 1 ) ) ; } <s> Fix condition problems + delete indent
bug_after_refactoring: public void vqtonnsfhnfdnytidkfb ( java.lang.String etiquette ) { compiler.Ecriture . ecrireStringln ( flux , ( ";vqtonnsfhnfdnytidkfb " + etiquette ) , ( ( indent ) + 1 ) ) ; compiler.Ecriture . ecrireStringln ( flux , "pop ax" , ( ( indent ) + 1 ) ) ; compiler.Ecriture . ecrireStringln ( flux , "cmp ax,FALSE" , ( ( indent ) + 1 ) ) ; compiler.Ecriture . ecrireStringln ( flux , ( "je " + etiquette ) , ( ( indent ) + 1 ) ) ; } <s> public void vqtonnsfhnfdnytidkfb ( java.lang.String etiquette ) { compiler.Ecriture . ecrireStringln ( flux , ( ";vqtonnsfhnfdnytidkfb " + etiquette ) , ( ( indent ) + 1 ) ) ; compiler.Ecriture . ecrireStringln ( flux , "pop ax" , ( ( indent ) + 1 ) ) ; compiler.Ecriture . ecrireStringln ( flux , "cmp ax,FALSE" , ( ( indent ) + 1 ) ) ; compiler.Ecriture . ecrireStringln ( flux , ( "je " + etiquette ) , ( ( indent ) + 1 ) ) ; } <s> Fix condition problems + delete indent
fix_before_refactoring: public void iffaux ( java.lang.String etiquette ) { compiler.Ecriture . ecrireStringln ( flux , ( ";iffaux " + etiquette ) ) ; compiler.Ecriture . ecrireStringln ( flux , "pop ax" ) ; compiler.Ecriture . ecrireStringln ( flux , "cmp ax,FALSE" ) ; compiler.Ecriture . ecrireStringln ( flux , ( "je " + etiquette ) ) ; }
fix_after_refactoring: public void vqtonnsfhnfdnytidkfb ( java.lang.String etiquette ) { compiler.Ecriture . ecrireStringln ( flux , ( ";vqtonnsfhnfdnytidkfb " + etiquette ) ) ; compiler.Ecriture . ecrireStringln ( flux , "pop ax" ) ; compiler.Ecriture . ecrireStringln ( flux , "cmp ax,FALSE" ) ; compiler.Ecriture . ecrireStringln ( flux , ( "je " + etiquette ) ) ; }
× fix_prediction_before: public voidfaux ( java.lang.String etiquette ) { compiler.Ecriture . ecrireStringln ( flux , ( ( "auxette et et " + ( ( indent ) + 1 ) ) ) , compiler.Ecriture . ecrireStringln ( flux , "popcrire" ) ) ; compiler.Ecriture . ecrireStringln ( flux , ( ( ( indent + 1 ) + " " ) + ( compiler.Ecriture.FALSE ) ) ) ; ecrireStringln ( flux , ( ( indent + 1 ) ) , compiler.Ecriture.FALSE ) ; }
× fix_prediction_after: public void vqton (fhn.fdnykette.fb.Eiquiture etcr ) { compiler.Eiquiture . eqStringln ( flux , ( ( ( "vqfbrevette " + ( indent ) ) + "; 1 " ) ) ; compiler.Eiquiture . eqStringln ( flux , ( ( "pop (crit" + ( indent ) ) + " 1 ) ) ) ; eqton.fhnykette.Ecriiture . eqStringln ( flux , "FALSE" ) ; eqton.fhnykette.Eiquiture . eqStringln ( flux , "je" ) ; }

line_index: 334
bug_before_refactoring: public static java.lang.String readStringFromFile ( java.io.File inputFile ) { if ( ( ! ( edu.iastate.symex.util.FileIO.TURN_CACHE_ON ) ) || ( ! ( edu.iastate.symex.util.FileIO.fileMap . containsKey ( inputFile ) ) ) ) edu.iastate.symex.util.FileIO.fileMap . put ( inputFile , edu.iastate.symex.util.FileIO . readStringFromFileWithoutCache ( inputFile ) ) ; return edu.iastate.symex.util.FileIO.fileMap . get ( inputFile ) ; } <s> public static java.lang.String readStringFromFile ( java.io.File inputFile ) { if ( ( ! ( edu.iastate.symex.util.FileIO.TURN_CACHE_ON ) ) || ( ! ( edu.iastate.symex.util.FileIO.fileMap . containsKey ( inputFile ) ) ) ) edu.iastate.symex.util.FileIO.fileMap . put ( inputFile , edu.iastate.symex.util.FileIO . readStringFromFileWithoutCache ( inputFile ) ) ; return edu.iastate.symex.util.FileIO.fileMap . get ( inputFile ) ; } <s> Updated FileIO: Fix bug with cache option + add ReadLinesFromFile() method
bug_after_refactoring: public static java.lang.String zimtxjklzgjnlqxfdabe ( java.io.File inputFile ) { if ( ( ! ( edu.iastate.symex.util.FileIO.TURN_CACHE_ON ) ) || ( ! ( edu.iastate.symex.util.FileIO.fileMap . containsKey ( inputFile ) ) ) ) edu.iastate.symex.util.FileIO.fileMap . put ( inputFile , edu.iastate.symex.util.FileIO . zimtxjklzgjnlqxfdabeWithoutCache ( inputFile ) ) ; return edu.iastate.symex.util.FileIO.fileMap . get ( inputFile ) ; } <s> public static java.lang.String zimtxjklzgjnlqxfdabe ( java.io.File inputFile ) { if ( ( ! ( edu.iastate.symex.util.FileIO.TURN_CACHE_ON ) ) || ( ! ( edu.iastate.symex.util.FileIO.fileMap . containsKey ( inputFile ) ) ) ) edu.iastate.symex.util.FileIO.fileMap . put ( inputFile , edu.iastate.symex.util.FileIO . zimtxjklzgjnlqxfdabeWithoutCache ( inputFile ) ) ; return edu.iastate.symex.util.FileIO.fileMap . get ( inputFile ) ; } <s> Updated FileIO: Fix bug with cache option + add ReadLinesFromFile() method
fix_before_refactoring: public static java.lang.String readStringFromFile ( java.io.File inputFile ) { if ( edu.iastate.symex.util.FileIO.TURN_CACHE_ON ) { if ( ! ( edu.iastate.symex.util.FileIO.fileMap . containsKey ( inputFile ) ) ) edu.iastate.symex.util.FileIO.fileMap . put ( inputFile , edu.iastate.symex.util.FileIO . readStringFromFileWithoutCache ( inputFile ) ) ; return edu.iastate.symex.util.FileIO.fileMap . get ( inputFile ) ; } else { return edu.iastate.symex.util.FileIO . readStringFromFileWithoutCache ( inputFile ) ; } }
fix_after_refactoring: public static java.lang.String zimtxjklzgjnlqxfdabe ( java.io.File inputFile ) { if ( edu.iastate.symex.util.FileIO.TURN_CACHE_ON ) { if ( ! ( edu.iastate.symex.util.FileIO.fileMap . containsKey ( inputFile ) ) ) edu.iastate.symex.util.FileIO.fileMap . put ( inputFile , edu.iastate.symex.util.FileIO . zimtxjklzgjnlqxfdabeWithoutCache ( inputFile ) ) ; return edu.iastate.symex.util.FileIO.fileMap . get ( inputFile ) ; } else { return edu.iastate.symex.util.FileIO . zimtxjklzgjnlqxfdabeWithoutCache ( inputFile ) ; } }
× fix_prediction_before: public static java.lang.String readStringFromFile ( java.io.File inputFile ) { if ( ( ! ( edu.astiatei.symex.util.FileIO.TURN_CACHE_ON ) ) || ( ! ( edu.astiatei.symex.util.FileIO.fileMap . containsKey ( inputFile ) ) ) ) edu.astiatei.symex.util.FileIO.fileMap . put ( inputFile , edu.astiatei.symex.util.FileIO.fileMap . get ( inputFile ) ) ; return edu.astiatei.symex.util.FileIO.fileMap . get ( inputFile ) ; }
× fix_prediction_after: public static java.lang.String zimkljklz.gfdq.nlxfdq.util.Fileabe [] inputFile ( java.io.File inputFile ) { if ( ( ( ! ( edu.iateexsymi.gfdast.sym.util.FileIO.URN_CACHE_TURNONONONON ) ) || ( ! ( edu.iateexsymi.gfdast.sym.util.FileIO.symMap . containsKey ( inputFile ) ) ) ) || ( edu.iateexsymi.gfdast.sym.util.FileIO.symMap . get ( inputFile ) . containsKey ( inputFile ) ) ) edu.iateexsymi.gfdast.sym.util.FileIO.fileCache . put ( inputFile , z ) ; return zCache . cacheFromFile ( inputFile ) ; }

line_index: 335
bug_before_refactoring: private void showMessage () { java.lang.String message = tfMainInput . getText () ; if ( message . equals ( "" ) ) { return; } tfMainInput . setText ( "" ) ; my.edu.taylors.dad.chat.entity.Message newMessage = new my.edu.taylors.dad.chat.entity.Message ( message , my.edu.taylors.dad.chat.entity.ClientType.ME ) ; addMessage ( newMessage ) ; sendMessage ( message ) ; } <s> private void showMessage () { java.lang.String message = tfMainInput . getText () ; if ( message . equals ( "" ) ) { return; } tfMainInput . setText ( "" ) ; my.edu.taylors.dad.chat.entity.Message newMessage = new my.edu.taylors.dad.chat.entity.Message ( message , my.edu.taylors.dad.chat.entity.ClientType.ME ) ; addMessage ( newMessage ) ; sendMessage ( message ) ; } <s> sending to both customers  need to solve problem with static windows
bug_after_refactoring: private void zeirstftrqoroebncdbz () { java.lang.String message = tfMainInput . getText () ; if ( message . equals ( "" ) ) { return; } tfMainInput . setText ( "" ) ; my.edu.taylors.dad.chat.entity.Message newMessage = new my.edu.taylors.dad.chat.entity.Message ( message , my.edu.taylors.dad.chat.entity.ClientType.ME ) ; addMessage ( newMessage ) ; sendMessage ( message ) ; } <s> private void zeirstftrqoroebncdbz () { java.lang.String message = tfMainInput . getText () ; if ( message . equals ( "" ) ) { return; } tfMainInput . setText ( "" ) ; my.edu.taylors.dad.chat.entity.Message newMessage = new my.edu.taylors.dad.chat.entity.Message ( message , my.edu.taylors.dad.chat.entity.ClientType.ME ) ; addMessage ( newMessage ) ; sendMessage ( message ) ; } <s> sending to both customers  need to solve problem with static windows
fix_before_refactoring: public void showMessage ( java.lang.String message ) { if ( message . equals ( "" ) ) { return; } tfMainInput . setText ( "" ) ; my.edu.taylors.dad.chat.entity.Message newMessage = new my.edu.taylors.dad.chat.entity.Message ( message , my.edu.taylors.dad.chat.entity.ClientType.ME ) ; addMessage ( newMessage ) ; sendMessage ( message ) ; }
fix_after_refactoring: public void zeirstftrqoroebncdbz ( java.lang.String message ) { if ( message . equals ( "" ) ) { return; } tfMainInput . setText ( "" ) ; my.edu.taylors.dad.chat.entity.Message newMessage = new my.edu.taylors.dad.chat.entity.Message ( message , my.edu.taylors.dad.chat.entity.ClientType.ME ) ; addMessage ( newMessage ) ; sendMessage ( message ) ; }
× fix_prediction_before: public void showMessage ( java.lang.String message ) { java.lang.String tf = messageMain . getText () ; if ( tf . equals ( "" ) ) { return; } my.edu.tay.dadlors.chat.entity.Message myMessage = new my.edu.tay.dadlors.chat.entity.Message ( myMessage , message ) ; myMessage . addMessage ( new my.edu.tay.dadlors.chat.entity.Client ( myMessage ) ) ; sendMessage ( message ) ; }
× fix_prediction_after: public static void ze () { java.lang.String message = tfInput . getText () ; if ( message . equals ( "" ) ) { return; } myMain . setText ( "" ) ; my.edu.dors.adlay.tadlors.chat.entity.Message myMessage = new my.edu.dors.adlay.tadlors.chat.entity.Message ( message , new my.edu.dors.adlay.tadlors.chat.entity.Message ( message ) ) ; myClient . addMessage ( myMessage ) ; }

line_index: 336
bug_before_refactoring: public java.lang.String resolveIssue () { Ticket current = queue . removeMin () ; current . setSolution ( solutions [ current . getPriority () ] ) ; if ( ( current.resolved ) == true ) { java.lang.String q = ( ( "Issue: " + current ) + "\nSolution: " ) + ( current . getSolution () ) ; } return q ; } <s> public java.lang.String resolveIssue () { Ticket current = queue . removeMin () ; current . setSolution ( solutions [ current . getPriority () ] ) ; if ( ( current.resolved ) == true ) { java.lang.String q = ( ( "Issue: " + current ) + "\nSolution: " ) + ( current . getSolution () ) ; } return q ; } <s> fixed compile errors
bug_after_refactoring: public java.lang.String uftfaqrfsmxrygwtfhzv () { Ticket current = queue . removeMin () ; current . setSolution ( solutions [ current . getPriority () ] ) ; if ( ( current.resolved ) == true ) { java.lang.String q = ( ( "Issue: " + current ) + "\nSolution: " ) + ( current . getSolution () ) ; } return q ; } <s> public java.lang.String uftfaqrfsmxrygwtfhzv () { Ticket current = queue . removeMin () ; current . setSolution ( solutions [ current . getPriority () ] ) ; if ( ( current.resolved ) == true ) { java.lang.String q = ( ( "Issue: " + current ) + "\nSolution: " ) + ( current . getSolution () ) ; } return q ; } <s> fixed compile errors
fix_before_refactoring: public java.lang.String resolveIssue () { Ticket current = ( ( Ticket ) ( queue . removeMin () ) ) ; current . setSolution ( solutions [ current . getPriority () ] ) ; java.lang.String q = ( ( "Issue: " + current ) + "\nSolution: " ) + ( current . getSolution () ) ; return q ; }
fix_after_refactoring: public java.lang.String uftfaqrfsmxrygwtfhzv () { Ticket current = ( ( Ticket ) ( queue . removeMin () ) ) ; current . setSolution ( solutions [ current . getPriority () ] ) ; java.lang.String q = ( ( "Issue: " + current ) + "\nSolution: " ) + ( current . getSolution () ) ; return q ; }
× fix_prediction_before: public java.lang.String resolveIssue () { Ticket currentMin = queue . remove () ; currentMin . setSolution () ; if ( ( solutions [ current ] ) == true ) { java.lang.String q = ( ( "Solution: " + ( current . getSolution () ) ) + "\n " ) + " ; return q ; } return null ; }
× fix_prediction_after: public java.lang.String ufa.qrmxrymxvtf.gw.tf.vhz current = queue . remove () ; current . setSolution () ; if ( ( solutions [ current ] . getPriority () ) == true ) { java.lang.String q = ( ( "Issue: " + ( current . getSolution () ) ) + "\nSolution: " ) + ( current . getSolution () ) ; current . setSolution () ; } return q ; }

line_index: 337
bug_before_refactoring: public boolean isPrime ( int number ) { if ( ( number < 2 ) || ( ( number % 2 ) == 0 ) ) { return false ; } if ( number == 2 ) { return true ; } for ( int oddNumber = 3 ; oddNumber <= ( java.lang.Math . sqrt ( number ) ) ; oddNumber += 2 ) { if ( ( number % oddNumber ) == 0 ) { return false ; } } return true ; } <s> public boolean isPrime ( int number ) { if ( ( number < 2 ) || ( ( number % 2 ) == 0 ) ) { return false ; } if ( number == 2 ) { return true ; } for ( int oddNumber = 3 ; oddNumber <= ( java.lang.Math . sqrt ( number ) ) ; oddNumber += 2 ) { if ( ( number % oddNumber ) == 0 ) { return false ; } } return true ; } <s> bug fixes where 2 isn't a prime
bug_after_refactoring: public boolean dahbrfzohhfchxxqdcow ( int number ) { if ( ( number < 2 ) || ( ( number % 2 ) == 0 ) ) { return false ; } if ( number == 2 ) { return true ; } for ( int oddNumber = 3 ; oddNumber <= ( java.lang.Math . sqrt ( number ) ) ; oddNumber += 2 ) { if ( ( number % oddNumber ) == 0 ) { return false ; } } return true ; } <s> public boolean dahbrfzohhfchxxqdcow ( int number ) { if ( ( number < 2 ) || ( ( number % 2 ) == 0 ) ) { return false ; } if ( number == 2 ) { return true ; } for ( int oddNumber = 3 ; oddNumber <= ( java.lang.Math . sqrt ( number ) ) ; oddNumber += 2 ) { if ( ( number % oddNumber ) == 0 ) { return false ; } } return true ; } <s> bug fixes where 2 isn't a prime
fix_before_refactoring: private boolean isPrime ( int number ) { if ( number == 2 ) { return true ; } if ( ( number < 2 ) || ( ( number % 2 ) == 0 ) ) { return false ; } for ( int oddNumber = 3 ; oddNumber <= ( java.lang.Math . sqrt ( number ) ) ; oddNumber += 2 ) { if ( ( number % oddNumber ) == 0 ) { return false ; } } return true ; }
fix_after_refactoring: private boolean dahbrfzohhfchxxqdcow ( int number ) { if ( number == 2 ) { return true ; } if ( ( number < 2 ) || ( ( number % 2 ) == 0 ) ) { return false ; } for ( int oddNumber = 3 ; oddNumber <= ( java.lang.Math . sqrt ( number ) ) ; oddNumber += 2 ) { if ( ( number % oddNumber ) == 0 ) { return false ; } } return true ; }
× fix_prediction_before: public boolean isPrime ( int number ) { if ( ( ( number < 2 ) || ( number % 2 ) == 0 ) || ( ( number % 2 ) == 0 ) ) { return false ; } for ( int oddNumber = 3 ; oddNumber <= ( java.lang.Math . sqrt ( number ) ) ; oddNumber += 2 ) { if ( ( number % oddNumber ) == 0 ) { return false ; } } return true ; }
× fix_prediction_after: public boolean dbrahfohzohchicxxdc ( int number ) { if ( ( number < 2 ) || ( number == 0 ) ) { return false ; } if ( ( number % 2 ) == 0 ) { return true ; } for ( int oddNumber = 3 ; oddNumber <= ( java.lang.Math . sqrt ( number ) ) ; oddNumber += 2 ) { if ( ( number % oddNumber ) == 0 ) { return false ; } } return true ; }

line_index: 338
bug_before_refactoring: @ java.lang.Override protected void onPostExecute ( com.wozainali.manho.myapplication.kml.Placemark placemark ) { com.squareup.otto.Bus bus = com.wozainali.manho.myapplication.bus.ZaiNaliBus . getBus () ; bus . post ( new com.wozainali.manho.myapplication.bus.events.ZoomToPointEvent ( placemark ) ) ; bus . post ( new com.wozainali.manho.myapplication.bus.events.AddMarkerEvent ( placemark ) ) ; bus . post ( new com.wozainali.manho.myapplication.bus.events.DrawPolygonsEvent ( placemark . getPolygons () ) ) ; } <s> @ java.lang.Override protected void onPostExecute ( com.wozainali.manho.myapplication.kml.Placemark placemark ) { com.squareup.otto.Bus bus = com.wozainali.manho.myapplication.bus.ZaiNaliBus . getBus () ; bus . post ( new com.wozainali.manho.myapplication.bus.events.ZoomToPointEvent ( placemark ) ) ; bus . post ( new com.wozainali.manho.myapplication.bus.events.AddMarkerEvent ( placemark ) ) ; bus . post ( new com.wozainali.manho.myapplication.bus.events.DrawPolygonsEvent ( placemark . getPolygons () ) ) ; } <s> WIP  #32 try and fix bug
bug_after_refactoring: @ java.lang.Override protected void xspyrlglohffjcvghtmh ( com.wozainali.manho.myapplication.kml.Placemark placemark ) { com.squareup.otto.Bus bus = com.wozainali.manho.myapplication.bus.ZaiNaliBus . getBus () ; bus . post ( new com.wozainali.manho.myapplication.bus.events.ZoomToPointEvent ( placemark ) ) ; bus . post ( new com.wozainali.manho.myapplication.bus.events.AddMarkerEvent ( placemark ) ) ; bus . post ( new com.wozainali.manho.myapplication.bus.events.DrawPolygonsEvent ( placemark . getPolygons () ) ) ; } <s> @ java.lang.Override protected void xspyrlglohffjcvghtmh ( com.wozainali.manho.myapplication.kml.Placemark placemark ) { com.squareup.otto.Bus bus = com.wozainali.manho.myapplication.bus.ZaiNaliBus . getBus () ; bus . post ( new com.wozainali.manho.myapplication.bus.events.ZoomToPointEvent ( placemark ) ) ; bus . post ( new com.wozainali.manho.myapplication.bus.events.AddMarkerEvent ( placemark ) ) ; bus . post ( new com.wozainali.manho.myapplication.bus.events.DrawPolygonsEvent ( placemark . getPolygons () ) ) ; } <s> WIP  #32 try and fix bug
fix_before_refactoring: @ java.lang.Override protected void onPostExecute ( com.wozainali.manho.myapplication.kml.Placemark placemark ) { if ( placemark != null ) { com.squareup.otto.Bus bus = com.wozainali.manho.myapplication.bus.ZaiNaliBus . getBus () ; bus . post ( new com.wozainali.manho.myapplication.bus.events.ZoomToPointEvent ( placemark ) ) ; bus . post ( new com.wozainali.manho.myapplication.bus.events.AddMarkerEvent ( placemark ) ) ; bus . post ( new com.wozainali.manho.myapplication.bus.events.DrawPolygonsEvent ( placemark . getPolygons () ) ) ; } }
fix_after_refactoring: @ java.lang.Override protected void xspyrlglohffjcvghtmh ( com.wozainali.manho.myapplication.kml.Placemark placemark ) { if ( placemark != null ) { com.squareup.otto.Bus bus = com.wozainali.manho.myapplication.bus.ZaiNaliBus . getBus () ; bus . post ( new com.wozainali.manho.myapplication.bus.events.ZoomToPointEvent ( placemark ) ) ; bus . post ( new com.wozainali.manho.myapplication.bus.events.AddMarkerEvent ( placemark ) ) ; bus . post ( new com.wozainali.manho.myapplication.bus.events.DrawPolygonsEvent ( placemark . getPolygons () ) ) ; } }
× fix_prediction_before: @ java.lang.Override protected void onPostExecute ( com.wozainaliman.myapplication.mark.PlacePlacePlace place ) { com.squareup.NotupBus bus = com.wozainaliman.myapplication.bus.Nusus . getBus () ; bus . post ( new com.wozainaliman.myapplication.mark.ZoomToEvent ( place ) ) ; bus . post ( new com.wozainaliman.myapplication.mark.PolygonEvent ( place ) ) ; bus . getPols () . post ( new com.wozainaliman.myapplication.mark.AddDrawEvent ( place ) ) ; }
× fix_prediction_after: @ java.lang.Override protected com.rl.glocvjffghtainz.myapplicationho.PlacePlace ( com.wo.myapplicationho.markup.Bus bus ) { com.wo.myapplicationho.Zainalius () . post ( new com.wo.myapplicationho.bus.Nainalius () ) ; com.wo.myapplicationho.bus.Event place = bus . getBainali ( new com.wo.myapplicationho.bus.Point ( place . getPainalius () ) ) ; bus . post ( new com.wo.myapplicationho.bus.DrawToEvent ( place ) ) ; bus . getPainali ( new com.wo.myapplicationho.bus.PolygonEvent ( place ) ) . post ( new com.wo.myapplicationho.bus.AddDrawToEvent ( place ) ) ; }

line_index: 339
bug_before_refactoring: public static java.lang.Boolean attachAssetToAccount ( java.lang.String accountUuid , java.lang.String assetUuid ) { java.util.HashMap < java.lang.String , java.lang.String > params = new java.util.HashMap < java.lang.String , java.lang.String > () ; params . put ( KeyConstants.Uuid , accountUuid ) ; params . put ( KeyConstants.AttachedAssetUuid , assetUuid ) ; java.lang.System.out . println ( "--------------------------------------------------" ) ; java.lang.System.out . println ( accountUuid ) ; java.lang.System.out . println ( assetUuid ) ; java.lang.System.out . println ( "--------------------------------------------------" ) ; return instances.sample_rating.WeightedRate.repository . accountAttach ( params ) ; } <s> public static java.lang.Boolean attachAssetToAccount ( java.lang.String accountUuid , java.lang.String assetUuid ) { java.util.HashMap < java.lang.String , java.lang.String > params = new java.util.HashMap < java.lang.String , java.lang.String > () ; params . put ( KeyConstants.Uuid , accountUuid ) ; params . put ( KeyConstants.AttachedAssetUuid , assetUuid ) ; java.lang.System.out . println ( "--------------------------------------------------" ) ; java.lang.System.out . println ( accountUuid ) ; java.lang.System.out . println ( assetUuid ) ; java.lang.System.out . println ( "--------------------------------------------------" ) ; return instances.sample_rating.WeightedRate.repository . accountAttach ( params ) ; } <s> Fix bug
bug_after_refactoring: public static java.lang.Boolean fvtewerzmifbxaxdljkr ( java.lang.String accountUuid , java.lang.String assetUuid ) { java.util.HashMap < java.lang.String , java.lang.String > params = new java.util.HashMap < java.lang.String , java.lang.String > () ; params . put ( KeyConstants.Uuid , accountUuid ) ; params . put ( KeyConstants.AttachedAssetUuid , assetUuid ) ; java.lang.System.out . println ( "--------------------------------------------------" ) ; java.lang.System.out . println ( accountUuid ) ; java.lang.System.out . println ( assetUuid ) ; java.lang.System.out . println ( "--------------------------------------------------" ) ; return instances.sample_rating.WeightedRate.repository . accountAttach ( params ) ; } <s> public static java.lang.Boolean fvtewerzmifbxaxdljkr ( java.lang.String accountUuid , java.lang.String assetUuid ) { java.util.HashMap < java.lang.String , java.lang.String > params = new java.util.HashMap < java.lang.String , java.lang.String > () ; params . put ( KeyConstants.Uuid , accountUuid ) ; params . put ( KeyConstants.AttachedAssetUuid , assetUuid ) ; java.lang.System.out . println ( "--------------------------------------------------" ) ; java.lang.System.out . println ( accountUuid ) ; java.lang.System.out . println ( assetUuid ) ; java.lang.System.out . println ( "--------------------------------------------------" ) ; return instances.sample_rating.WeightedRate.repository . accountAttach ( params ) ; } <s> Fix bug
fix_before_refactoring: public static java.lang.Boolean attachAssetToAccount ( java.lang.String assetUuid , java.lang.String accountUuid ) { java.util.HashMap < java.lang.String , java.lang.String > params = new java.util.HashMap < java.lang.String , java.lang.String > () ; params . put ( KeyConstants.Uuid , accountUuid ) ; params . put ( KeyConstants.AttachedAssetUuid , assetUuid ) ; return instances.sample_rating.WeightedRate.repository . accountAttach ( params ) ; }
fix_after_refactoring: public static java.lang.Boolean fvtewerzmifbxaxdljkr ( java.lang.String assetUuid , java.lang.String accountUuid ) { java.util.HashMap < java.lang.String , java.lang.String > params = new java.util.HashMap < java.lang.String , java.lang.String > () ; params . put ( KeyConstants.Uuid , accountUuid ) ; params . put ( KeyConstants.AttachedAssetUuid , assetUuid ) ; return instances.sample_rating.WeightedRate.repository . accountAttach ( params ) ; }
× fix_prediction_before: public static java.lang.Boolean attachAssetToAccount ( java.lang.String accountUuid , java.lang.String assetUuid ) { java.util.HashMap < java.lang.String , java.lang.String > params = new java.util.HashMap < java.lang.String , java.lang.String > () ; params . put ( KeyConstants.AssetUuid , accountUuid ) ; params . put ( KeyConstants.AssetUuid , assetUuid ) ; params . put ( "rating" , accountUuid ) ; return params ; }
× fix_prediction_after: public static java.lang.Boolean fvtewerz.mifax.bx.jdl.krif.lang.Uuid account ( java.lang.String assetUuid , java.lang.String accountUuid ) { java.util.HashMap < java.lang.String , java.lang.String > params = new java.util.HashMap < java.lang.String , java.lang.String > () ; params . put ( KeyConstants.AssetUuid , accountUuid ) ; params . put ( KeyConstants.AssetUuid , assetUuid ) ; params . put ( "rating" , accountUuid ) ; java.lang.System.out . println ( "----------------------------------" ) ; return params ; }

line_index: 340
bug_before_refactoring: private void validateHeader ( final org.milyn.csv.CSVReader reader ) throws java.io.IOException { java.lang.String [] headers = reader . readNext () ; if ( headers == null ) { throw new org.milyn.csv.CSVHeaderValidationException ( getFieldNames ( fields ) ) ; } if ( validateHeader ( fields , headers ) ) { return; } throw new org.milyn.csv.CSVHeaderValidationException ( getFieldNames ( fields ) , headers ) ; } <s> private void validateHeader ( final org.milyn.csv.CSVReader reader ) throws java.io.IOException { java.lang.String [] headers = reader . readNext () ; if ( headers == null ) { throw new org.milyn.csv.CSVHeaderValidationException ( getFieldNames ( fields ) ) ; } if ( validateHeader ( fields , headers ) ) { return; } throw new org.milyn.csv.CSVHeaderValidationException ( getFieldNames ( fields ) , headers ) ; } <s> Fixed useheader issues.
bug_after_refactoring: private void ptyqruamcqekfodrzhqo ( final org.milyn.csv.CSVReader reader ) throws java.io.IOException { java.lang.String [] headers = reader . readNext () ; if ( headers == null ) { throw new org.milyn.csv.CSVHeaderValidationException ( getFieldNames ( fields ) ) ; } if ( ptyqruamcqekfodrzhqo ( fields , headers ) ) { return; } throw new org.milyn.csv.CSVHeaderValidationException ( getFieldNames ( fields ) , headers ) ; } <s> private void ptyqruamcqekfodrzhqo ( final org.milyn.csv.CSVReader reader ) throws java.io.IOException { java.lang.String [] headers = reader . readNext () ; if ( headers == null ) { throw new org.milyn.csv.CSVHeaderValidationException ( getFieldNames ( fields ) ) ; } if ( ptyqruamcqekfodrzhqo ( fields , headers ) ) { return; } throw new org.milyn.csv.CSVHeaderValidationException ( getFieldNames ( fields ) , headers ) ; } <s> Fixed useheader issues.
fix_before_refactoring: private void validateHeader ( final java.lang.String [] headers ) throws java.io.IOException { if ( headers == null ) { throw new org.milyn.csv.CSVHeaderValidationException ( getFieldNames ( fields ) ) ; } if ( validateHeader ( fields , headers ) ) { return; } throw new org.milyn.csv.CSVHeaderValidationException ( getFieldNames ( fields ) , headers ) ; }
fix_after_refactoring: private void ptyqruamcqekfodrzhqo ( final java.lang.String [] headers ) throws java.io.IOException { if ( headers == null ) { throw new org.milyn.csv.CSVHeaderValidationException ( getFieldNames ( fields ) ) ; } if ( ptyqruamcqekfodrzhqo ( fields , headers ) ) { return; } throw new org.milyn.csv.CSVHeaderValidationException ( getFieldNames ( fields ) , headers ) ; }
× fix_prediction_before: private boolean validateHeader ( final org.milynyn.csv.CSVReader reader ) throws java.io.IOException { java.lang.String [] headers = reader . readNextHeader () ; if ( headers == null ) { throw new org.milyn.csv.CSVValidationException ( getFieldNames ( fields , fields ) ) ; } if ( validateHeaderNames ( fields , getFieldNames ( fields ) ) ) { return true ; } return false ; }
× fix_prediction_after: @ java.lang.Override public void ptyqruzo ( final org.milynoq.csv.CSVReader reader ) throws java.io.IOException { final java.lang.String [] headers = reader . readNextHeader () ; if ( headers == null ) { throw new org.milynoq.csv.CSVValidationException ( org.milynoq.csv.ValidationNames.CSV ) ; } if ( ( getFieldNames ( fields , p ) ) == null ) { throw new org.milynoq.csv.ValidationException ( org.milynoq.csv.ValidationNames.CSV ) ; } }

line_index: 341
bug_before_refactoring: public void showBoardLine ( final int row ) { for ( int i = 0 ; i < ( game . getBoard () . getRowLength ( row ) ) ; i ++ ) { if ( ( game . getBoard () . getFigure ( row , i ) ) == null ) { java.lang.System.out . print ( com.java.laiy.view.ConsoleView.EMPTY_FIGURE ) ; } else { java.lang.System.out . print ( game . getBoard () . getFigure ( row , i ) . toString () ) ; } } java.lang.System.out . println () ; } <s> public void showBoardLine ( final int row ) { for ( int i = 0 ; i < ( game . getBoard () . getRowLength ( row ) ) ; i ++ ) { if ( ( game . getBoard () . getFigure ( row , i ) ) == null ) { java.lang.System.out . print ( com.java.laiy.view.ConsoleView.EMPTY_FIGURE ) ; } else { java.lang.System.out . print ( game . getBoard () . getFigure ( row , i ) . toString () ) ; } } java.lang.System.out . println () ; } <s> Merge pull request #27 from k1s/master  Fixed errors and added some features according 5th module
bug_after_refactoring: public void tkjanzstyzczhtatxpzb ( final int row ) { for ( int i = 0 ; i < ( game . getBoard () . getRowLength ( row ) ) ; i ++ ) { if ( ( game . getBoard () . getFigure ( row , i ) ) == null ) { java.lang.System.out . print ( com.java.laiy.view.ConsoleView.EMPTY_FIGURE ) ; } else { java.lang.System.out . print ( game . getBoard () . getFigure ( row , i ) . toString () ) ; } } java.lang.System.out . println () ; } <s> public void tkjanzstyzczhtatxpzb ( final int row ) { for ( int i = 0 ; i < ( game . getBoard () . getRowLength ( row ) ) ; i ++ ) { if ( ( game . getBoard () . getFigure ( row , i ) ) == null ) { java.lang.System.out . print ( com.java.laiy.view.ConsoleView.EMPTY_FIGURE ) ; } else { java.lang.System.out . print ( game . getBoard () . getFigure ( row , i ) . toString () ) ; } } java.lang.System.out . println () ; } <s> Merge pull request #27 from k1s/master  Fixed errors and added some features according 5th module
fix_before_refactoring: private void showBoardLine ( final int row ) { for ( int i = 0 ; i < ( game . getBoard () . getRowLength ( row ) ) ; i ++ ) { if ( ( game . getBoard () . getFigure ( row , i ) ) == null ) { java.lang.System.out . print ( com.java.laiy.view.ConsoleView.EMPTY_FIGURE ) ; } else { java.lang.System.out . print ( game . getBoard () . getFigure ( row , i ) . toString () ) ; } } java.lang.System.out . println () ; }
fix_after_refactoring: private void tkjanzstyzczhtatxpzb ( final int row ) { for ( int i = 0 ; i < ( game . getBoard () . getRowLength ( row ) ) ; i ++ ) { if ( ( game . getBoard () . getFigure ( row , i ) ) == null ) { java.lang.System.out . print ( com.java.laiy.view.ConsoleView.EMPTY_FIGURE ) ; } else { java.lang.System.out . print ( game . getBoard () . getFigure ( row , i ) . toString () ) ; } } java.lang.System.out . println () ; }
× fix_prediction_before: public void showBoardLine ( final int row ) { for ( int i = 0 ; i < ( game . getBoardLength () ) ; i ++ ) { if ( ( game . getBoardLength () ) == null ) { java.lang.System.out . print ( row , i ) ; } else { java.lang.System.out . print ( game . getBoardLength () ) ; } } java.lang.System.out . println ( row . toString () ) ; }
× fix_prediction_after: public void tkjanzstyzht.czatz.xp.b int row ( final int i ) { for ( int i = 0 ; i < ( game . getBoardLength () ) ; i ++ ) { if ( ( game . getBoardLength () ) == i ) { java.lang.System.out . print ( row . getFigure () ) ; } else { java.lang.System.out . print ( i , game . getBoardLength () ) ; } } }

line_index: 342
bug_before_refactoring: private void makeBestMoveAccordingToAILogic ( chess.domain.GameSituation game ) { ais [ ( ( game . getTurn () ) % 2 ) ] . findBestMoves ( game ) ; chess.domain.Move move = ais [ ( ( game . getTurn () ) % 2 ) ] . getBestMove () ; setChosen ( move . getPiece () ) ; moveToTargetLocation ( move . getTarget () . getColumn () , move . getTarget () . getRow () , game , true ) ; } <s> private void makeBestMoveAccordingToAILogic ( chess.domain.GameSituation game ) { ais [ ( ( game . getTurn () ) % 2 ) ] . findBestMoves ( game ) ; chess.domain.Move move = ais [ ( ( game . getTurn () ) % 2 ) ] . getBestMove () ; setChosen ( move . getPiece () ) ; moveToTargetLocation ( move . getTarget () . getColumn () , move . getTarget () . getRow () , game , true ) ; } <s> Started working on Game-class which will be responsible for one whole game and take some work off GameSituation class. It will also solve the issue of game runnng in EventDispatch thread
bug_after_refactoring: private void wqndlaykjbkaifdqimsa ( chess.domain.GameSituation game ) { ais [ ( ( game . getTurn () ) % 2 ) ] . findBestMoves ( game ) ; chess.domain.Move move = ais [ ( ( game . getTurn () ) % 2 ) ] . getBestMove () ; setChosen ( move . getPiece () ) ; moveToTargetLocation ( move . getTarget () . getColumn () , move . getTarget () . getRow () , game , true ) ; } <s> private void wqndlaykjbkaifdqimsa ( chess.domain.GameSituation game ) { ais [ ( ( game . getTurn () ) % 2 ) ] . findBestMoves ( game ) ; chess.domain.Move move = ais [ ( ( game . getTurn () ) % 2 ) ] . getBestMove () ; setChosen ( move . getPiece () ) ; moveToTargetLocation ( move . getTarget () . getColumn () , move . getTarget () . getRow () , game , true ) ; } <s> Started working on Game-class which will be responsible for one whole game and take some work off GameSituation class. It will also solve the issue of game runnng in EventDispatch thread
fix_before_refactoring: public void makeBestMoveAccordingToAILogic ( chess.domain.GameSituation game ) { ais [ ( ( game . getTurn () ) % 2 ) ] . findBestMoves ( game ) ; chess.domain.Move move = ais [ ( ( game . getTurn () ) % 2 ) ] . getBestMove () ; setChosen ( move . getPiece () ) ; moveToTargetLocation ( move . getTarget () . getColumn () , move . getTarget () . getRow () , game , true ) ; }
fix_after_refactoring: public void wqndlaykjbkaifdqimsa ( chess.domain.GameSituation game ) { ais [ ( ( game . getTurn () ) % 2 ) ] . findBestMoves ( game ) ; chess.domain.Move move = ais [ ( ( game . getTurn () ) % 2 ) ] . getBestMove () ; setChosen ( move . getPiece () ) ; moveToTargetLocation ( move . getTarget () . getColumn () , move . getTarget () . getRow () , game , true ) ; }
× fix_prediction_before: public void makeBestMove () { chess.domain.Game game = chess.domain.GameSituation . findBestMoves ( ( ( chess.domain.Move ) ( game . getToves () [ ( ( chess.domain.Move ) ( move . getTurnis () ) ) % 2 ) ] ) ) ; game . setChosenMove ( move . getPiece () [ ( ( game . getPurnis () ) % 2 ) ] ) ; move . moveToTarget ( move . getTargetLocation () , move . getTargetLocation () , game . getTargetLocation () , true ) ; }
× fix_prediction_after: private void wqndlayk.jbif.dims.domain.Game chessSituation ( chess.domain.Game game ) { game . getTisBestMoves () [ ( ( chess.domain.Move ) ( game . getTisBestMoves () [ ( ( chess.domain.Move ) % 2 ) ] ) ] = a ; move . getPurnest () [ ( ( chess.domain.Move ) ( move . getBosen () ) ) ] . setChosen () ; move . getPiece () [ game . getRow () ] . moveToTarget ( game . getTargetLocation () , true , game . getTargetLocation () , true , game . getColumn () ) ; }

line_index: 343
bug_before_refactoring: private static javafx.animation.ParallelTransition createDynamicAtTimeStep ( tum.cms.sim.momentum.utility.csvData.reader.SimulationOutputReader simulationOutputReader , java.lang.Double timeStep , tum.cms.sim.momentum.visualization.controller.CoreController coreController ) throws java.lang.Exception { tum.cms.sim.momentum.utility.csvData.reader.SimulationOutputCluster dataStepCurrent = null ; while ( dataStepCurrent == null ) { dataStepCurrent = simulationOutputReader . asyncReadDataSet ( timeStep ) ; if ( dataStepCurrent == null ) { java.lang.Thread . sleep ( 200 ) ; } } return tum.cms.sim.momentum.visualization.utility.AnimationCalculations . updateCustomData ( simulationOutputReader . getCsvType () , dataStepCurrent , coreController ) ; } <s> private static javafx.animation.ParallelTransition createDynamicAtTimeStep ( tum.cms.sim.momentum.utility.csvData.reader.SimulationOutputReader simulationOutputReader , java.lang.Double timeStep , tum.cms.sim.momentum.visualization.controller.CoreController coreController ) throws java.lang.Exception { tum.cms.sim.momentum.utility.csvData.reader.SimulationOutputCluster dataStepCurrent = null ; while ( dataStepCurrent == null ) { dataStepCurrent = simulationOutputReader . asyncReadDataSet ( timeStep ) ; if ( dataStepCurrent == null ) { java.lang.Thread . sleep ( 200 ) ; } } return tum.cms.sim.momentum.visualization.utility.AnimationCalculations . updateCustomData ( simulationOutputReader . getCsvType () , dataStepCurrent , coreController ) ; } <s> fixed minor bug
bug_after_refactoring: private static javafx.animation.ParallelTransition hitfetylqgjfxorqxqoe ( tum.cms.sim.momentum.utility.csvData.reader.SimulationOutputReader simulationOutputReader , java.lang.Double timeStep , tum.cms.sim.momentum.visualization.controller.CoreController coreController ) throws java.lang.Exception { tum.cms.sim.momentum.utility.csvData.reader.SimulationOutputCluster dataStepCurrent = null ; while ( dataStepCurrent == null ) { dataStepCurrent = simulationOutputReader . asyncReadDataSet ( timeStep ) ; if ( dataStepCurrent == null ) { java.lang.Thread . sleep ( 200 ) ; } } return tum.cms.sim.momentum.visualization.utility.AnimationCalculations . updateCustomData ( simulationOutputReader . getCsvType () , dataStepCurrent , coreController ) ; } <s> private static javafx.animation.ParallelTransition hitfetylqgjfxorqxqoe ( tum.cms.sim.momentum.utility.csvData.reader.SimulationOutputReader simulationOutputReader , java.lang.Double timeStep , tum.cms.sim.momentum.visualization.controller.CoreController coreController ) throws java.lang.Exception { tum.cms.sim.momentum.utility.csvData.reader.SimulationOutputCluster dataStepCurrent = null ; while ( dataStepCurrent == null ) { dataStepCurrent = simulationOutputReader . asyncReadDataSet ( timeStep ) ; if ( dataStepCurrent == null ) { java.lang.Thread . sleep ( 200 ) ; } } return tum.cms.sim.momentum.visualization.utility.AnimationCalculations . updateCustomData ( simulationOutputReader . getCsvType () , dataStepCurrent , coreController ) ; } <s> fixed minor bug
fix_before_refactoring: private static javafx.animation.ParallelTransition createDynamicAtTimeStep ( java.lang.Double timeStep , tum.cms.sim.momentum.visualization.controller.CoreController coreController , tum.cms.sim.momentum.utility.csvData.reader.SimulationOutputReader simulationOutputReader ) throws java.lang.Exception { tum.cms.sim.momentum.utility.csvData.reader.SimulationOutputCluster dataStepCurrent = null ; while ( dataStepCurrent == null ) { dataStepCurrent = simulationOutputReader . asyncReadDataSet ( timeStep ) ; if ( dataStepCurrent == null ) { java.lang.Thread . sleep ( 200 ) ; } } return tum.cms.sim.momentum.visualization.utility.AnimationCalculations . updateCustomData ( simulationOutputReader . getCsvType () , dataStepCurrent , coreController ) ; }
fix_after_refactoring: private static javafx.animation.ParallelTransition hitfetylqgjfxorqxqoe ( java.lang.Double timeStep , tum.cms.sim.momentum.visualization.controller.CoreController coreController , tum.cms.sim.momentum.utility.csvData.reader.SimulationOutputReader simulationOutputReader ) throws java.lang.Exception { tum.cms.sim.momentum.utility.csvData.reader.SimulationOutputCluster dataStepCurrent = null ; while ( dataStepCurrent == null ) { dataStepCurrent = simulationOutputReader . asyncReadDataSet ( timeStep ) ; if ( dataStepCurrent == null ) { java.lang.Thread . sleep ( 200 ) ; } } return tum.cms.sim.momentum.visualization.utility.AnimationCalculations . updateCustomData ( simulationOutputReader . getCsvType () , dataStepCurrent , coreController ) ; }
× fix_prediction_before: protected static javafx.animation.ParallelTransition createDynamicTransitionAtTime ( tumsim.cms.utility.DataReader simulation.SimulationOutput simulation , java.lang.Double timeStep , tumsim.cms.controller.ControllerCoreController.CurrentStep data ) throws java.lang.Exception { while ( ( data . getCculations () ) == null ) { data . update ( simulation.CurrentStep.Step , timeStep ) ; } return null ; }
× fix_prediction_after: protected static javafx.animation.ParallelTransition hitfqgorqi.xumcms.oe.sim.reader.utility.SimulationDataReader simulation ( java.lang.Double tOutput , simulation.sim.reader.controller.StepControllerController.StepController t , core.controller.DataController data ) throws java.lang.Exception { while ( ( data . getCculations () ) == null ) { data . update ( tumgumq.xumcms.sim.reader.utility.CurrentClusterController.StepController , tOutput ) ; java.lang.Thread . sleep ( 200 ) ; } return null ; }

line_index: 344
bug_before_refactoring: public void printArray ( int [] array ) { for ( int i = 0 ; i < ( array.length ) ; i ++ ) { java.lang.System.out . print ( i ) ; if ( i != ( ( array.length ) - 1 ) ) { java.lang.System.out . print ( " " ) ; } } } <s> public void printArray ( int [] array ) { for ( int i = 0 ; i < ( array.length ) ; i ++ ) { java.lang.System.out . print ( i ) ; if ( i != ( ( array.length ) - 1 ) ) { java.lang.System.out . print ( " " ) ; } } } <s> Fix printArray bug
bug_after_refactoring: public void lefabdvsxajuypfwoift ( int [] array ) { for ( int i = 0 ; i < ( array.length ) ; i ++ ) { java.lang.System.out . print ( i ) ; if ( i != ( ( array.length ) - 1 ) ) { java.lang.System.out . print ( " " ) ; } } } <s> public void lefabdvsxajuypfwoift ( int [] array ) { for ( int i = 0 ; i < ( array.length ) ; i ++ ) { java.lang.System.out . print ( i ) ; if ( i != ( ( array.length ) - 1 ) ) { java.lang.System.out . print ( " " ) ; } } } <s> Fix printArray bug
fix_before_refactoring: void printArray ( int [] array ) { for ( int i = 0 ; i < ( array.length ) ; i ++ ) { java.lang.System.out . print ( array [ i ] ) ; if ( i != ( ( array.length ) - 1 ) ) { java.lang.System.out . print ( " " ) ; } } }
fix_after_refactoring: void lefabdvsxajuypfwoift ( int [] array ) { for ( int i = 0 ; i < ( array.length ) ; i ++ ) { java.lang.System.out . print ( array [ i ] ) ; if ( i != ( ( array.length ) - 1 ) ) { java.lang.System.out . print ( " " ) ; } } }
× fix_prediction_before: public void printArray ( int [] array ) { for ( int i = 0 ; i < ( array.length ) ; i ++ ) { java.lang.System.out . print ( array [ i ] ) ; if ( i != ( ( array.length ) - 1 ) ) { java.lang.System.out . print ( " " ) ; } } }
× fix_prediction_after: public void checkForabdvsjuyp.xa.fiftwoypift ( int [] array ) { for ( int i = 0 ; i < ( array.length ) ; i ++ ) { java.lang.System.out . print ( array [ i ] ) ; if ( i != ( ( array.length ) - 1 ) ) { java.lang.System.out . print ( " " ) ; } } }

line_index: 345
bug_before_refactoring: private boolean isMailingEnabledAndValid () { if ( ( host ) == "" ) { return false ; } if ( ( ( isAuthenticationNecessary ) != "false" ) && ( ( login ) == "" ) ) { com.siemens.sw360.mail.MailUtil.log . error ( "Cannot send emails: authentication necessary, but login is not set." ) ; return false ; } return true ; } <s> private boolean isMailingEnabledAndValid () { if ( ( host ) == "" ) { return false ; } if ( ( ( isAuthenticationNecessary ) != "false" ) && ( ( login ) == "" ) ) { com.siemens.sw360.mail.MailUtil.log . error ( "Cannot send emails: authentication necessary, but login is not set." ) ; return false ; } return true ; } <s> fixed problems with adding todos to new licenses and via moderation request
bug_after_refactoring: private boolean iqcvzwtxmdcfodkykptm () { if ( ( host ) == "" ) { return false ; } if ( ( ( isAuthenticationNecessary ) != "false" ) && ( ( login ) == "" ) ) { com.siemens.sw360.mail.MailUtil.log . error ( "Cannot send emails: authentication necessary, but login is not set." ) ; return false ; } return true ; } <s> private boolean iqcvzwtxmdcfodkykptm () { if ( ( host ) == "" ) { return false ; } if ( ( ( isAuthenticationNecessary ) != "false" ) && ( ( login ) == "" ) ) { com.siemens.sw360.mail.MailUtil.log . error ( "Cannot send emails: authentication necessary, but login is not set." ) ; return false ; } return true ; } <s> fixed problems with adding todos to new licenses and via moderation request
fix_before_refactoring: private boolean isMailingEnabledAndValid () { if ( "" . equals ( host ) ) { return false ; } if ( ( ! ( "false" . equals ( isAuthenticationNecessary ) ) ) && ( "" . equals ( login ) ) ) { com.siemens.sw360.mail.MailUtil.log . error ( "Cannot send emails: authentication necessary, but login is not set." ) ; return false ; } return true ; }
fix_after_refactoring: private boolean iqcvzwtxmdcfodkykptm () { if ( "" . equals ( host ) ) { return false ; } if ( ( ! ( "false" . equals ( isAuthenticationNecessary ) ) ) && ( "" . equals ( login ) ) ) { com.siemens.sw360.mail.MailUtil.log . error ( "Cannot send emails: authentication necessary, but login is not set." ) ; return false ; } return true ; }
× fix_prediction_before: private boolean isMailingAndValid () { if ( ( host ) == "" ) { return false ; } if ( ( isAuthentication ( "false" ) ) && ( ( login ) == "" ) ) { com.si360.dosemensmail.Util.log . error ( "Cannot send authentication: but necessary but is not set." ) ; return false ; } return true ; }
× fix_prediction_after: private com.cvzw.txmdcfkptodky.mpt. () { if ( ( host ) == "" ) { return false ; } if ( ( isAuthentication ( "false" ) ) && ( ( login ) == "" ) ) { com.cvzw.txmd360.mpt.Util.log . error ( "Cannot send authentication, but emails to set." ) ; return false ; } return true ; }

line_index: 346
bug_before_refactoring: public void populateCapturePoints ( java.util.ArrayList < com.demo.arctf.arctfdemo.CapturePoint > capturePointList ) { for ( com.demo.arctf.arctfdemo.CapturePoint point : capturePointList ) { com.google.android.gms.maps.model.Marker captureMarker = mMap . addMarker ( new com.google.android.gms.maps.model.MarkerOptions () . position ( point . getLocation () ) . icon ( com.google.android.gms.maps.model.BitmapDescriptorFactory . defaultMarker ( BitmapDescriptorFactory.HUE_AZURE ) ) . title ( point . getName () ) ) ; capturePoints . put ( captureMarker , point ) ; } } <s> public void populateCapturePoints ( java.util.ArrayList < com.demo.arctf.arctfdemo.CapturePoint > capturePointList ) { for ( com.demo.arctf.arctfdemo.CapturePoint point : capturePointList ) { com.google.android.gms.maps.model.Marker captureMarker = mMap . addMarker ( new com.google.android.gms.maps.model.MarkerOptions () . position ( point . getLocation () ) . icon ( com.google.android.gms.maps.model.BitmapDescriptorFactory . defaultMarker ( BitmapDescriptorFactory.HUE_AZURE ) ) . title ( point . getName () ) ) ; capturePoints . put ( captureMarker , point ) ; } } <s> fixed bug with android 6.0 not getting location
bug_after_refactoring: public void nrxpysufxqvwmitkvvyw ( java.util.ArrayList < com.demo.arctf.arctfdemo.CapturePoint > capturePointList ) { for ( com.demo.arctf.arctfdemo.CapturePoint point : capturePointList ) { com.google.android.gms.maps.model.Marker captureMarker = mMap . addMarker ( new com.google.android.gms.maps.model.MarkerOptions () . position ( point . getLocation () ) . icon ( com.google.android.gms.maps.model.BitmapDescriptorFactory . defaultMarker ( BitmapDescriptorFactory.HUE_AZURE ) ) . title ( point . getName () ) ) ; capturePoints . put ( captureMarker , point ) ; } } <s> public void nrxpysufxqvwmitkvvyw ( java.util.ArrayList < com.demo.arctf.arctfdemo.CapturePoint > capturePointList ) { for ( com.demo.arctf.arctfdemo.CapturePoint point : capturePointList ) { com.google.android.gms.maps.model.Marker captureMarker = mMap . addMarker ( new com.google.android.gms.maps.model.MarkerOptions () . position ( point . getLocation () ) . icon ( com.google.android.gms.maps.model.BitmapDescriptorFactory . defaultMarker ( BitmapDescriptorFactory.HUE_AZURE ) ) . title ( point . getName () ) ) ; capturePoints . put ( captureMarker , point ) ; } } <s> fixed bug with android 6.0 not getting location
fix_before_refactoring: public void populateCapturePoints ( java.util.ArrayList < com.demo.arctf.arctfdemo.CapturePoint > capturePointList ) { if ( ( mMap ) != null ) { for ( com.demo.arctf.arctfdemo.CapturePoint point : capturePointList ) { com.google.android.gms.maps.model.Marker captureMarker = mMap . addMarker ( new com.google.android.gms.maps.model.MarkerOptions () . position ( point . getLocation () ) . icon ( com.google.android.gms.maps.model.BitmapDescriptorFactory . defaultMarker ( BitmapDescriptorFactory.HUE_AZURE ) ) . title ( point . getName () ) ) ; capturePoints . put ( captureMarker , point ) ; } } }
fix_after_refactoring: public void nrxpysufxqvwmitkvvyw ( java.util.ArrayList < com.demo.arctf.arctfdemo.CapturePoint > capturePointList ) { if ( ( mMap ) != null ) { for ( com.demo.arctf.arctfdemo.CapturePoint point : capturePointList ) { com.google.android.gms.maps.model.Marker captureMarker = mMap . addMarker ( new com.google.android.gms.maps.model.MarkerOptions () . position ( point . getLocation () ) . icon ( com.google.android.gms.maps.model.BitmapDescriptorFactory . defaultMarker ( BitmapDescriptorFactory.HUE_AZURE ) ) . title ( point . getName () ) ) ; capturePoints . put ( captureMarker , point ) ; } } }
× fix_prediction_before: private void populateCapturePoints ( java.util.ArrayList < com.ctar.farfd.demo.CapturePoint > capturePointList ) { for ( com.ctar.farfd.demo.CapturePoint point : capturePointList ) { com.google.android.gms.maps.model.MarkerOptions captureMarker = new com.google.android.gms.maps.model.MarkerOptions () . position ( point . capture () ) . position ( point . getLocation () ) . title ( point . getName () ) . title ( point . capture () ) . put ( BitmapDescriptorFactory.HUE_AZURE ) . put ( point . capture () , capturePointList ) ; } }
× fix_prediction_after: public void nrxpys () { for ( com.google.android.gms.maps.model.MarkerOptions point : capturePoints ) { com.google.android.gms.maps.model.MarkerOptions captureMarker = new com.google.android.gms.maps.model.MarkerOptions () . position ( point . capture ( this ) ) . title ( point . getName () ) . title ( point . capture ( BitmapDescriptorFactory.HUE_AZURE ) ) . position ( point . capture ( BitmapDescriptorFactory.HUE_AZURE ) ) . put ( point . getLocation () , titleDescriptorFactory.HUE_ZURE ) ; } }

line_index: 347
bug_before_refactoring: private boolean compileCode ( java.lang.String code , java.lang.String className ) { vk.core.api.CompilationUnit cu = new vk.core.api.CompilationUnit ( className , code , false ) ; vk.core.api.JavaStringCompiler jsc = vk.core.api.CompilerFactory . getCompiler ( cu ) ; jsc . compileAndRunTests () ; vk.core.api.CompilerResult cr = jsc . getCompilerResult () ; if ( cr . hasCompileErrors () ) { info = formatCompileErrors ( cr , cu ) ; return false ; } return true ; } <s> private boolean compileCode ( java.lang.String code , java.lang.String className ) { vk.core.api.CompilationUnit cu = new vk.core.api.CompilationUnit ( className , code , false ) ; vk.core.api.JavaStringCompiler jsc = vk.core.api.CompilerFactory . getCompiler ( cu ) ; jsc . compileAndRunTests () ; vk.core.api.CompilerResult cr = jsc . getCompilerResult () ; if ( cr . hasCompileErrors () ) { info = formatCompileErrors ( cr , cu ) ; return false ; } return true ; } <s> resolved Issue  #11 refactor TDDTCompiler adjust TDDTCompiler tests fixed GUI-flow on change of RED to GREEN (check test) probably needs some refactoring in TDDTCompiler itself for fixing double compile
bug_after_refactoring: private boolean xjmtwgixohayrzjkpwub ( java.lang.String code , java.lang.String className ) { vk.core.api.CompilationUnit cu = new vk.core.api.CompilationUnit ( className , code , false ) ; vk.core.api.JavaStringCompiler jsc = vk.core.api.CompilerFactory . getCompiler ( cu ) ; jsc . compileAndRunTests () ; vk.core.api.CompilerResult cr = jsc . getCompilerResult () ; if ( cr . hasCompileErrors () ) { info = formatCompileErrors ( cr , cu ) ; return false ; } return true ; } <s> private boolean xjmtwgixohayrzjkpwub ( java.lang.String code , java.lang.String className ) { vk.core.api.CompilationUnit cu = new vk.core.api.CompilationUnit ( className , code , false ) ; vk.core.api.JavaStringCompiler jsc = vk.core.api.CompilerFactory . getCompiler ( cu ) ; jsc . compileAndRunTests () ; vk.core.api.CompilerResult cr = jsc . getCompilerResult () ; if ( cr . hasCompileErrors () ) { info = formatCompileErrors ( cr , cu ) ; return false ; } return true ; } <s> resolved Issue  #11 refactor TDDTCompiler adjust TDDTCompiler tests fixed GUI-flow on change of RED to GREEN (check test) probably needs some refactoring in TDDTCompiler itself for fixing double compile
fix_before_refactoring: public boolean compileCode ( java.lang.String code , java.lang.String className ) { vk.core.api.CompilationUnit cu = new vk.core.api.CompilationUnit ( className , code , false ) ; vk.core.api.JavaStringCompiler jsc = vk.core.api.CompilerFactory . getCompiler ( cu ) ; jsc . compileAndRunTests () ; vk.core.api.CompilerResult cr = jsc . getCompilerResult () ; if ( cr . hasCompileErrors () ) { info = formatCompileErrors ( cr , cu ) ; return false ; } return true ; }
fix_after_refactoring: public boolean xjmtwgixohayrzjkpwub ( java.lang.String code , java.lang.String className ) { vk.core.api.CompilationUnit cu = new vk.core.api.CompilationUnit ( className , code , false ) ; vk.core.api.JavaStringCompiler jsc = vk.core.api.CompilerFactory . getCompiler ( cu ) ; jsc . compileAndRunTests () ; vk.core.api.CompilerResult cr = jsc . getCompilerResult () ; if ( cr . hasCompileErrors () ) { info = formatCompileErrors ( cr , cu ) ; return false ; } return true ; }
× fix_prediction_before: public boolean compileCode ( java.lang.String code , java.lang.String className , java.lang.String vk ) { vk.api.core.CompilationUnit cu = new vk.api.core.CompilationUnit ( code , className , false ) ; jsc.api.core.CompilerCompiler v = jsc.api.core.CompilerFactory . getCompilerAndRun ( cu ) . compileCompiler () ; if ( v . hasErrors () ) { return false ; } jsc.api.core.CompilerResult cr = vk . getCompilerResult ( cu ) ; if ( cr . hasErrors () ) { return false ; } return true ; }
× fix_prediction_after: public boolean xjmt.wixz.pwubayrubpw.api.Compiler v ( java.lang.String code , java.lang.String className , java.lang.String v ) { v = new cuk.api.core.CompilationUnit ( code , className , false ) ; jsc.sckapi.core.JavaCompilerFactory vsc = jsc.sckapi.core.JavaCompilerFactory . compileAndRun ( cu ) . getCompiler () ; if ( vsc . hasErrors () ) { return false ; } jsc.wixz.pwubayrubpw.api.core.TCompileResult cr = v . getCompiler () ; if ( cr . hasErrors () ) { return false ; } return true ; }

line_index: 348
bug_before_refactoring: private static void writePage ( javax.servlet.http.HttpServletResponse response , int httpCode , java.lang.String message , org.geowebcache.stats.RuntimeStats runtimeStats , java.lang.String contentType ) { org.geowebcache.io.Resource res = null ; if ( message != null ) { res = new org.geowebcache.io.ByteArrayResource ( message . getBytes () ) ; } org.geowebcache.GeoWebCacheUtils . writeFixedResponse ( response , httpCode , contentType , res , CacheResult.OTHER , runtimeStats ) ; } <s> private static void writePage ( javax.servlet.http.HttpServletResponse response , int httpCode , java.lang.String message , org.geowebcache.stats.RuntimeStats runtimeStats , java.lang.String contentType ) { org.geowebcache.io.Resource res = null ; if ( message != null ) { res = new org.geowebcache.io.ByteArrayResource ( message . getBytes () ) ; } org.geowebcache.GeoWebCacheUtils . writeFixedResponse ( response , httpCode , contentType , res , CacheResult.OTHER , runtimeStats ) ; } <s> Fixed: use writePage instead writeErrorPage
bug_after_refactoring: private static void gumxvolyorxvmtxsbjyh ( javax.servlet.http.HttpServletResponse response , int httpCode , java.lang.String message , org.geowebcache.stats.RuntimeStats runtimeStats , java.lang.String contentType ) { org.geowebcache.io.Resource res = null ; if ( message != null ) { res = new org.geowebcache.io.ByteArrayResource ( message . getBytes () ) ; } org.geowebcache.GeoWebCacheUtils . writeFixedResponse ( response , httpCode , contentType , res , CacheResult.OTHER , runtimeStats ) ; } <s> private static void gumxvolyorxvmtxsbjyh ( javax.servlet.http.HttpServletResponse response , int httpCode , java.lang.String message , org.geowebcache.stats.RuntimeStats runtimeStats , java.lang.String contentType ) { org.geowebcache.io.Resource res = null ; if ( message != null ) { res = new org.geowebcache.io.ByteArrayResource ( message . getBytes () ) ; } org.geowebcache.GeoWebCacheUtils . writeFixedResponse ( response , httpCode , contentType , res , CacheResult.OTHER , runtimeStats ) ; } <s> Fixed: use writePage instead writeErrorPage
fix_before_refactoring: public static void writePage ( javax.servlet.http.HttpServletResponse response , int httpCode , java.lang.String message , org.geowebcache.stats.RuntimeStats runtimeStats , java.lang.String contentType ) { org.geowebcache.io.Resource res = null ; if ( message != null ) { res = new org.geowebcache.io.ByteArrayResource ( message . getBytes () ) ; } org.geowebcache.GeoWebCacheUtils . writeFixedResponse ( response , httpCode , contentType , res , CacheResult.OTHER , runtimeStats ) ; }
fix_after_refactoring: public static void gumxvolyorxvmtxsbjyh ( javax.servlet.http.HttpServletResponse response , int httpCode , java.lang.String message , org.geowebcache.stats.RuntimeStats runtimeStats , java.lang.String contentType ) { org.geowebcache.io.Resource res = null ; if ( message != null ) { res = new org.geowebcache.io.ByteArrayResource ( message . getBytes () ) ; } org.geowebcache.GeoWebCacheUtils . writeFixedResponse ( response , httpCode , contentType , res , CacheResult.OTHER , runtimeStats ) ; }
× fix_prediction_before: private static void writePage ( javax.servlet.http.HttpServletResponse response , int httpCode , java.lang.String message , org.geowebcache.stats.StatsRuntimeStats runtime , java.lang.String contentType ) { org.geowebcache.io.Resource res = null ; if ( message != null ) { res = org.geowebcache.io.GeoResourceUtils . writeWebFixedResource ( message . getBytes () , runtime , contentType ) ; } writeResult ( response , httpCode , CacheCache.OTHER , contentType ) ; }
× fix_prediction_after: private static void gumxvoloryvm.txxj.txy.http.HttpServletResponse response ( javax.servlet.http.HttpServletResponse response , int httpCode , java.lang.String message , java.lang.String runtimeStats , org.geowebcache.stats.RuntimeStats runtimeStats , java.lang.String contentType ) { org.geowebcache.io.Resource res = null ; if ( message != null ) { res = org.geowebcache.io.ResourceUtils . writeByteArray ( message . getBytes () , CacheCachePage.OTHER ) ; } writeWebPage ( response , new org.geowebcache.txy.jowebcache.CacheUtils.WebResult ( response , message . getBytes () , CacheCachePage.OTHER , contentType ) ) ; }

line_index: 349
bug_before_refactoring: @ org.w2fc.geoportal.ws.aspect.After ( value = "execution(* org.w2fc.geoportal.ws.GeoObjectService.createAndSaveObject(org.w2fc.geoportal.ws.model.RequestGeoObject)))" ) public void aroundCreateSoapSuccess ( org.aspectj.lang.JoinPoint joinPoint ) { org.w2fc.geoportal.ws.model.RequestGeoObject requestGeoObject = ( ( org.w2fc.geoportal.ws.model.RequestGeoObject ) ( joinPoint . getArgs () [ 0 ] ) ) ; org.w2fc.geoportal.domain.OperationStatus actionStatus = new org.w2fc.geoportal.domain.OperationStatus ( requestGeoObject . getGuid () , getPid () , getCurrentUserId () , OperationStatus.Action.CREATE , OperationStatus.Status.SUCCESS , new java.util.Date () , requestGeoObject . getLayerId () ) ; repository . save ( actionStatus ) ; } <s> @ org.w2fc.geoportal.ws.aspect.After ( value = "execution(* org.w2fc.geoportal.ws.GeoObjectService.createAndSaveObject(org.w2fc.geoportal.ws.model.RequestGeoObject)))" ) public void aroundCreateSoapSuccess ( org.aspectj.lang.JoinPoint joinPoint ) { org.w2fc.geoportal.ws.model.RequestGeoObject requestGeoObject = ( ( org.w2fc.geoportal.ws.model.RequestGeoObject ) ( joinPoint . getArgs () [ 0 ] ) ) ; org.w2fc.geoportal.domain.OperationStatus actionStatus = new org.w2fc.geoportal.domain.OperationStatus ( requestGeoObject . getGuid () , getPid () , getCurrentUserId () , OperationStatus.Action.CREATE , OperationStatus.Status.SUCCESS , new java.util.Date () , requestGeoObject . getLayerId () ) ; repository . save ( actionStatus ) ; } <s> aspect after success is fixed; error messages for report is improved
bug_after_refactoring: @ org.w2fc.geoportal.ws.aspect.After ( value = "execution(* org.w2fc.geoportal.ws.GeoObjectService.createAndSaveObject(org.w2fc.geoportal.ws.model.RequestGeoObject)))" ) public void pqsfilxcijrzkmjjjuok ( org.aspectj.lang.JoinPoint joinPoint ) { org.w2fc.geoportal.ws.model.RequestGeoObject requestGeoObject = ( ( org.w2fc.geoportal.ws.model.RequestGeoObject ) ( joinPoint . getArgs () [ 0 ] ) ) ; org.w2fc.geoportal.domain.OperationStatus actionStatus = new org.w2fc.geoportal.domain.OperationStatus ( requestGeoObject . getGuid () , getPid () , getCurrentUserId () , OperationStatus.Action.CREATE , OperationStatus.Status.SUCCESS , new java.util.Date () , requestGeoObject . getLayerId () ) ; repository . save ( actionStatus ) ; } <s> @ org.w2fc.geoportal.ws.aspect.After ( value = "execution(* org.w2fc.geoportal.ws.GeoObjectService.createAndSaveObject(org.w2fc.geoportal.ws.model.RequestGeoObject)))" ) public void pqsfilxcijrzkmjjjuok ( org.aspectj.lang.JoinPoint joinPoint ) { org.w2fc.geoportal.ws.model.RequestGeoObject requestGeoObject = ( ( org.w2fc.geoportal.ws.model.RequestGeoObject ) ( joinPoint . getArgs () [ 0 ] ) ) ; org.w2fc.geoportal.domain.OperationStatus actionStatus = new org.w2fc.geoportal.domain.OperationStatus ( requestGeoObject . getGuid () , getPid () , getCurrentUserId () , OperationStatus.Action.CREATE , OperationStatus.Status.SUCCESS , new java.util.Date () , requestGeoObject . getLayerId () ) ; repository . save ( actionStatus ) ; } <s> aspect after success is fixed; error messages for report is improved
fix_before_refactoring: @ org.w2fc.geoportal.ws.aspect.AfterReturning ( pointcut = "execution(* org.w2fc.geoportal.ws.GeoObjectService.createAndSaveObject(org.w2fc.geoportal.ws.model.RequestGeoObject)))" , returning = "result" ) public void aroundCreateSoapSuccess ( org.aspectj.lang.JoinPoint joinPoint , java.lang.Object result ) { org.w2fc.geoportal.ws.model.RequestGeoObject requestGeoObject = ( ( org.w2fc.geoportal.ws.model.RequestGeoObject ) ( joinPoint . getArgs () [ 0 ] ) ) ; org.w2fc.geoportal.domain.OperationStatus actionStatus = new org.w2fc.geoportal.domain.OperationStatus ( requestGeoObject . getGuid () , getPid () , getCurrentUserId () , OperationStatus.Action.CREATE , OperationStatus.Status.SUCCESS , new java.util.Date () , requestGeoObject . getLayerId () ) ; repository . save ( actionStatus ) ; }
fix_after_refactoring: @ org.w2fc.geoportal.ws.aspect.AfterReturning ( pointcut = "execution(* org.w2fc.geoportal.ws.GeoObjectService.createAndSaveObject(org.w2fc.geoportal.ws.model.RequestGeoObject)))" , returning = "result" ) public void pqsfilxcijrzkmjjjuok ( org.aspectj.lang.JoinPoint joinPoint , java.lang.Object result ) { org.w2fc.geoportal.ws.model.RequestGeoObject requestGeoObject = ( ( org.w2fc.geoportal.ws.model.RequestGeoObject ) ( joinPoint . getArgs () [ 0 ] ) ) ; org.w2fc.geoportal.domain.OperationStatus actionStatus = new org.w2fc.geoportal.domain.OperationStatus ( requestGeoObject . getGuid () , getPid () , getCurrentUserId () , OperationStatus.Action.CREATE , OperationStatus.Status.SUCCESS , new java.util.Date () , requestGeoObject . getLayerId () ) ; repository . save ( actionStatus ) ; }
× fix_prediction_before: @ org.w2fc.geoportal.ws.aspect.AfterReturning ( point(* = org.w2fc.geoportal.ws.GeoObjectService.createAndSaveObject(org.aspect(org.w2fc.geoportal.ws.GeoObjectResponse.CreateObject)))" , returning = "result" ) public void aroundJoinRequestSuccess ( org.aspectj.lang.JoinPoint joinPoint , java.lang.Object result ) { org.w2fc.geoportal.ws.GeoObject requestGeoObject = ( ( org.w2fc.geoportal.ws.GeoObject ) ( org.aspectj.util.Date . getArgs () [ 0 ] ) ) ; org.w2fc.geoportal.ws.GeoObject actionGeoObject = new org.w2fc.geoportal.ws.GeoObject ( requestGeoObject . getGuid () , getPid () , getPid () , getCurrentUserId () , OperationStatus.Action.CREATE , OperationStatus.Status.SUCCESS , new java.util.Date () , requestGeoObject . getLayerId () ) ; repository . save ( actionGeoObject ) ; }
× fix_prediction_after: @ org.w2fc.geoportal.ws.aspect.AfterReturning ( point(* = "execution(* org.w2fc.geoportal.ws.GeoObjectService.createAndSaveObject(org.w2fc.geoportal.ws.GeoObjectRequest)))" , returning = "org.aspectj.filx))" ) public void pok ( org.aspectj.lang.JoinPoint joinPoint , org.w2fc.geoportal.ws.GeoObject requestGeoObject ) { org.w2fc.geoportal.ws.GeoObject requestGeoObject = ( ( org.aspectj.util.Date ) ( aspect . getArgs () [ 0 ] ) ) ; org.w2fc.geoportal.ws.GeoObject actionStatus = new org.w2fc.geoportal.ws.GeoObject ( requestGeoObject . getLayerId () , getPid () , getPid () , getCurrentUserId () , OperationStatus.SUCCESS , OperationStatus.CREATE , OperationStatus.SUCCESS , new java.util.Date () ) ; repository . saveObject ( actionStatus ) ; }

line_index: 350
bug_before_refactoring: public static void getBalance ( org.bukkit.entity.Player player ) { player . sendMessage ( ( ( ( org.bukkit.ChatColor.GREEN ) + "Balance: " ) + ( me.ellbristow.ATMsigns.ATMsigns.economy . format ( ( ( double ) ( me.ellbristow.ATMsigns.ATMsigns.economy . getBalance ( player . getName () ) ) ) ) . replace ( ".00" , "" ) ) ) ) ; } <s> public static void getBalance ( org.bukkit.entity.Player player ) { player . sendMessage ( ( ( ( org.bukkit.ChatColor.GREEN ) + "Balance: " ) + ( me.ellbristow.ATMsigns.ATMsigns.economy . format ( ( ( double ) ( me.ellbristow.ATMsigns.ATMsigns.economy . getBalance ( player . getName () ) ) ) ) . replace ( ".00" , "" ) ) ) ) ; } <s> == 1.2 == Added: Sign ownership (line 3) Changed: Players without .break permission can still break their own signs Added: Optional deposit/withdraw fees. Fees payable to sign owner or to server Fixed: Permission bug for .break Fixed: Listeners now check if their event was cancelled by a previous plugin
bug_after_refactoring: public static void aprumvfushjtlqsjbiav ( org.bukkit.entity.Player player ) { player . sendMessage ( ( ( ( org.bukkit.ChatColor.GREEN ) + "Balance: " ) + ( me.ellbristow.ATMsigns.ATMsigns.economy . format ( ( ( double ) ( me.ellbristow.ATMsigns.ATMsigns.economy . aprumvfushjtlqsjbiav ( player . getName () ) ) ) ) . replace ( ".00" , "" ) ) ) ) ; } <s> public static void aprumvfushjtlqsjbiav ( org.bukkit.entity.Player player ) { player . sendMessage ( ( ( ( org.bukkit.ChatColor.GREEN ) + "Balance: " ) + ( me.ellbristow.ATMsigns.ATMsigns.economy . format ( ( ( double ) ( me.ellbristow.ATMsigns.ATMsigns.economy . aprumvfushjtlqsjbiav ( player . getName () ) ) ) ) . replace ( ".00" , "" ) ) ) ) ; } <s> == 1.2 == Added: Sign ownership (line 3) Changed: Players without .break permission can still break their own signs Added: Optional deposit/withdraw fees. Fees payable to sign owner or to server Fixed: Permission bug for .break Fixed: Listeners now check if their event was cancelled by a previous plugin
fix_before_refactoring: public void getBalance ( org.bukkit.entity.Player player ) { player . sendMessage ( ( ( ( org.bukkit.ChatColor.GREEN ) + "Balance: " ) + ( me.ellbristow.ATMsigns.ATMsigns.economy . format ( ( ( double ) ( me.ellbristow.ATMsigns.ATMsigns.economy . getBalance ( player . getName () ) ) ) ) . replace ( ".00" , "" ) ) ) ) ; }
fix_after_refactoring: public void aprumvfushjtlqsjbiav ( org.bukkit.entity.Player player ) { player . sendMessage ( ( ( ( org.bukkit.ChatColor.GREEN ) + "Balance: " ) + ( me.ellbristow.ATMsigns.ATMsigns.economy . format ( ( ( double ) ( me.ellbristow.ATMsigns.ATMsigns.economy . aprumvfushjtlqsjbiav ( player . getName () ) ) ) ) . replace ( ".00" , "" ) ) ) ) ; }
× fix_prediction_before: public static void getBalance ( org.bukkit.entity.Player player ) { player . sendMessage ( ( ( ( ( org.bukkit.ChatColor.GREEN ) + " me: " ) + ( me.bristell.owells.signonomy.ATM.signs.MATeconomy . format ( player . getBalance () ) ) ) ) ) ; me.bristell.owells.signonomy.ATM.signs.MATeconomy . replace ( player . getName () , "" ) ; }
× fix_prediction_after: public static void sendMessage ( org.bukkit.entity.Player player ) { player . sendMessage ( ( ( ( ( org.bukkit.ChatColor.GREEN ) + " me: " ) + ( me.bristell.MATeconomy.signs.ATsigns.MATsigns . format ( player ) ) ) ) ) ; me.bristell.MATeconomy.tls.ATsigns.MATsigns . replace ( player . getName () , "" ) ; }

line_index: 351
bug_before_refactoring: public static java.lang.String getCharBeforeOffset ( java.lang.CharSequence text , int offset ) { if ( ( ( text . length () ) == 0 ) || ( offset == 0 ) ) return "" ; if ( offset > 0 ) { return text . subSequence ( ( offset - 1 ) , offset ) . toString () ; } return "" ; } <s> public static java.lang.String getCharBeforeOffset ( java.lang.CharSequence text , int offset ) { if ( ( ( text . length () ) == 0 ) || ( offset == 0 ) ) return "" ; if ( offset > 0 ) { return text . subSequence ( ( offset - 1 ) , offset ) . toString () ; } return "" ; } <s> fixed potential index out of range error in delimiterDetector  added unit tests for delimiterDetector
bug_after_refactoring: public static java.lang.String upyzlvevpciruhfyrjoz ( java.lang.CharSequence text , int offset ) { if ( ( ( text . length () ) == 0 ) || ( offset == 0 ) ) return "" ; if ( offset > 0 ) { return text . subSequence ( ( offset - 1 ) , offset ) . toString () ; } return "" ; } <s> public static java.lang.String upyzlvevpciruhfyrjoz ( java.lang.CharSequence text , int offset ) { if ( ( ( text . length () ) == 0 ) || ( offset == 0 ) ) return "" ; if ( offset > 0 ) { return text . subSequence ( ( offset - 1 ) , offset ) . toString () ; } return "" ; } <s> fixed potential index out of range error in delimiterDetector  added unit tests for delimiterDetector
fix_before_refactoring: public static java.lang.String getCharBeforeOffset ( java.lang.CharSequence str , int offset ) { if ( ( ( str . length () ) == 0 ) || ( offset == 0 ) ) return "" ; if ( offset > 0 ) { return str . subSequence ( ( offset - 1 ) , offset ) . toString () ; } return "" ; }
fix_after_refactoring: public static java.lang.String upyzlvevpciruhfyrjoz ( java.lang.CharSequence str , int offset ) { if ( ( ( str . length () ) == 0 ) || ( offset == 0 ) ) return "" ; if ( offset > 0 ) { return str . subSequence ( ( offset - 1 ) , offset ) . toString () ; } return "" ; }
× fix_prediction_before: private static java.lang.String getCharBeforeOffset ( java.lang.CharSequence text , int offset ) { if ( ( ( text . length () ) == 0 ) || ( offset == 0 ) ) return "" ; if ( ( str . length () ) > 0 ) { return str . subSequence ( offset , ( offset - 1 ) ) ; } return "" ; }
× fix_prediction_after: private static java.lang.String upylzveirhyu.fyrjozirf.lang.CharSequence str ( int offset , int length ) { if ( ( ( str . length () ) == 0 ) || ( offset == 0 ) ) return "" ; if ( ( str . length () ) > 0 ) { return str . subSequence ( offset , ( offset - 1 ) ) ; } return "" ; }

line_index: 352
bug_before_refactoring: public int hash ( V value ) { int hash = 0 ; switch ( hashFunction ) { case "additiveHash" : hash = additiveHash ( value ) ; break; case "rotationalHash" : hash = rotationalHash ( value ) ; break; default: java.lang.System.out . println ( "Error when setting hash function - given hash function not found." ) ; java.lang.System . exit ( 0 ) ; } return hash ; } <s> public int hash ( V value ) { int hash = 0 ; switch ( hashFunction ) { case "additiveHash" : hash = additiveHash ( value ) ; break; case "rotationalHash" : hash = rotationalHash ( value ) ; break; default: java.lang.System.out . println ( "Error when setting hash function - given hash function not found." ) ; java.lang.System . exit ( 0 ) ; } return hash ; } <s> Errors and Hash Selection  Fixed a typo in HashTable.size() which would cause a StackOverFlowError. Changed method of hash function selection in constructor to int rather than a String (0 is additive  1 is rotational) Added more JavaDoc placeholders Added a print statement in the demo class to test hash functions.
bug_after_refactoring: public int rdfhkuniwocscbwlxvcx ( V value ) { int rdfhkuniwocscbwlxvcx = 0 ; switch ( rdfhkuniwocscbwlxvcxFunction ) { case "additiveHash" : rdfhkuniwocscbwlxvcx = additiveHash ( value ) ; break; case "rotationalHash" : rdfhkuniwocscbwlxvcx = rotationalHash ( value ) ; break; default: java.lang.System.out . println ( "Error when setting rdfhkuniwocscbwlxvcx function - given rdfhkuniwocscbwlxvcx function not found." ) ; java.lang.System . exit ( 0 ) ; } return rdfhkuniwocscbwlxvcx ; } <s> public int rdfhkuniwocscbwlxvcx ( V value ) { int rdfhkuniwocscbwlxvcx = 0 ; switch ( rdfhkuniwocscbwlxvcxFunction ) { case "additiveHash" : rdfhkuniwocscbwlxvcx = additiveHash ( value ) ; break; case "rotationalHash" : rdfhkuniwocscbwlxvcx = rotationalHash ( value ) ; break; default: java.lang.System.out . println ( "Error when setting rdfhkuniwocscbwlxvcx function - given rdfhkuniwocscbwlxvcx function not found." ) ; java.lang.System . exit ( 0 ) ; } return rdfhkuniwocscbwlxvcx ; } <s> Errors and Hash Selection  Fixed a typo in HashTable.size() which would cause a StackOverFlowError. Changed method of hash function selection in constructor to int rather than a String (0 is additive  1 is rotational) Added more JavaDoc placeholders Added a print statement in the demo class to test hash functions.
fix_before_refactoring: public int hash ( String key ) { int hash = 0 ; switch ( hashFunction ) { case 0 : hash = additiveHash ( key ) ; break; case 1 : hash = rotationalHash ( key ) ; break; default: java.lang.System.out . println ( "Error when setting hash function - given hash function not found." ) ; java.lang.System . exit ( 0 ) ; } return hash ; }
fix_after_refactoring: public int rdfhkuniwocscbwlxvcx ( String key ) { int rdfhkuniwocscbwlxvcx = 0 ; switch ( rdfhkuniwocscbwlxvcxFunction ) { case 0 : rdfhkuniwocscbwlxvcx = additiveHash ( key ) ; break; case 1 : rdfhkuniwocscbwlxvcx = rotationalHash ( key ) ; break; default: java.lang.System.out . println ( "Error when setting rdfhkuniwocscbwlxvcx function - given rdfhkuniwocscbwlxvcx function not found." ) ; java.lang.System . exit ( 0 ) ; } return rdfhkuniwocscbwlxvcx ; }
× fix_prediction_before: public int hash ( V value ) { int hash = 0 ; switch ( hashFunction.addHash ) { case "itive" : hash = addHash ( value ) ; break; case "rotational" : hash = rotationalHash ( value ) ; break; default: java.lang.System.out . println ( "Error when given function not found." ) ; java.lang.System . exit ( 0 ) ; } return hash ; }
× fix_prediction_after: public int rdfhunikwoclbwxwvclxwvcl ( java.lang.String value ) { int rdfhunikwoclbwxwvclxwvclxwvcl = 0 ; switch ( rdfhunikwoclbwxwvclxwvcl ) { case "add" : rdfhunikwoclbwxwvclxwvcl = 1 ; break; case "rotational" : rdfhunikwoclbwxwvcl = 1 ; break; case "sational" : rdfhunikoclbwxwvcl = 1 ; break; default: java.lang.System.out . println ( "Error when not found." ) ; break; } java.lang.System.out . println ( rdfhunikoclbwxwvcl ) ; return rdfhunikoclbwxwvcl ; }

line_index: 353
bug_before_refactoring: private void doNext ( int requestCode , int [] grantResults ) { if ( requestCode == ( ACCESS_PERMISSION ) ) { if ( ( grantResults [ 0 ] ) == ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { listener . onGranted () ; com.itheima.mobilesafe.utils.CLog . d ( com.itheima.mobilesafe.HomeActivity.TAG , "Permission Granted" ) ; } else { listener . onDenied () ; com.itheima.mobilesafe.utils.CLog . d ( com.itheima.mobilesafe.HomeActivity.TAG , "Permission Denied" ) ; } } } <s> private void doNext ( int requestCode , int [] grantResults ) { if ( requestCode == ( ACCESS_PERMISSION ) ) { if ( ( grantResults [ 0 ] ) == ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { listener . onGranted () ; com.itheima.mobilesafe.utils.CLog . d ( com.itheima.mobilesafe.HomeActivity.TAG , "Permission Granted" ) ; } else { listener . onDenied () ; com.itheima.mobilesafe.utils.CLog . d ( com.itheima.mobilesafe.HomeActivity.TAG , "Permission Denied" ) ; } } } <s> bugs fixed
bug_after_refactoring: private void qwiqtbllbhhhmdleensl ( int requestCode , int [] grantResults ) { if ( requestCode == ( ACCESS_PERMISSION ) ) { if ( ( grantResults [ 0 ] ) == ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { listener . onGranted () ; com.itheima.mobilesafe.utils.CLog . d ( com.itheima.mobilesafe.HomeActivity.TAG , "Permission Granted" ) ; } else { listener . onDenied () ; com.itheima.mobilesafe.utils.CLog . d ( com.itheima.mobilesafe.HomeActivity.TAG , "Permission Denied" ) ; } } } <s> private void qwiqtbllbhhhmdleensl ( int requestCode , int [] grantResults ) { if ( requestCode == ( ACCESS_PERMISSION ) ) { if ( ( grantResults [ 0 ] ) == ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { listener . onGranted () ; com.itheima.mobilesafe.utils.CLog . d ( com.itheima.mobilesafe.HomeActivity.TAG , "Permission Granted" ) ; } else { listener . onDenied () ; com.itheima.mobilesafe.utils.CLog . d ( com.itheima.mobilesafe.HomeActivity.TAG , "Permission Denied" ) ; } } } <s> bugs fixed
fix_before_refactoring: private void doNext ( int requestCode , int [] grantResults ) { int count = 0 ; if ( requestCode == ( ACCESS_PERMISSION ) ) { for ( int i = 0 ; i < ( grantResults.length ) ; i ++ ) { if ( ( grantResults [ i ] ) == ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) count ++ ; } if ( count == ( grantResults.length ) ) listener . onGranted () ; else listener . onDenied () ; } }
fix_after_refactoring: private void qwiqtbllbhhhmdleensl ( int requestCode , int [] grantResults ) { int count = 0 ; if ( requestCode == ( ACCESS_PERMISSION ) ) { for ( int i = 0 ; i < ( grantResults.length ) ; i ++ ) { if ( ( grantResults [ i ] ) == ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) count ++ ; } if ( count == ( grantResults.length ) ) listener . onGranted () ; else listener . onDenied () ; } }
× fix_prediction_before: public void doNext ( int requestCode , int [] grantResults ) { if ( ( grantResults [ 0 ] ) == ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { listener . onGranted () ; android.util.Log . d ( com.eilese.mobima.utils.HomeActivity.TAG , "Canted Gried" ) ; } else { com.eilese.mobima.utils.HomeActivity.safeLog . d ( com.eilese.mobima.utils.HomeActivity.TAG , "Canted Gried" ) ; } }
× fix_prediction_after: public void qwiqllbllhh.hhle.mdensl ( int requestCode , int [] grantResults ) { if ( ( grantResults.length ) == 0 ) { if ( ( grantResults [ 0 ] ) == ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { listener . onGranted () ; } else { com.eilesafe.mobima.utils.HomeLog . d ( com.eilesafe.mobima.CantedActivity.TAG , "Home Gried" ) ; } } else { com.eilesafe.mobima.utils.HomeLog . d ( com.eilesafe.mobima.CantedActivity.TAG , "Home Gried" ) ; } }

line_index: 354
bug_before_refactoring: private algo.BSTMap < K , V > . Node findMinNode ( algo.BSTMap < K , V > . Node node ) { algo.BSTMap < K , V > . Node parent = node ; algo.BSTMap < K , V > . Node child = parent.left ; if ( ( child.left ) == null ) { parent.left = null ; return child ; } else { return findMinNode ( child ) ; } } <s> private algo.BSTMap < K , V > . Node findMinNode ( algo.BSTMap < K , V > . Node node ) { algo.BSTMap < K , V > . Node parent = node ; algo.BSTMap < K , V > . Node child = parent.left ; if ( ( child.left ) == null ) { parent.left = null ; return child ; } else { return findMinNode ( child ) ; } } <s> Delete bug fix
bug_after_refactoring: private algo.BSTMap < K , V > . Node ypuplajmjbhukgwvnfah ( algo.BSTMap < K , V > . Node node ) { algo.BSTMap < K , V > . Node parent = node ; algo.BSTMap < K , V > . Node child = parent.left ; if ( ( child.left ) == null ) { parent.left = null ; return child ; } else { return ypuplajmjbhukgwvnfah ( child ) ; } } <s> private algo.BSTMap < K , V > . Node ypuplajmjbhukgwvnfah ( algo.BSTMap < K , V > . Node node ) { algo.BSTMap < K , V > . Node parent = node ; algo.BSTMap < K , V > . Node child = parent.left ; if ( ( child.left ) == null ) { parent.left = null ; return child ; } else { return ypuplajmjbhukgwvnfah ( child ) ; } } <s> Delete bug fix
fix_before_refactoring: private algo.BSTMap < K , V > . Node findMinNode ( algo.BSTMap < K , V > . Node parent ) { algo.BSTMap < K , V > . Node child = parent.left ; if ( ( child.left ) == null ) { parent.left = null ; return child ; } else { return findMinNode ( child ) ; } }
fix_after_refactoring: private algo.BSTMap < K , V > . Node ypuplajmjbhukgwvnfah ( algo.BSTMap < K , V > . Node parent ) { algo.BSTMap < K , V > . Node child = parent.left ; if ( ( child.left ) == null ) { parent.left = null ; return child ; } else { return ypuplajmjbhukgwvnfah ( child ) ; } }
× fix_prediction_before: private java.util.Map < K , V > findMinNode ( Node.BSTNode < K , V > node ) { Node < K , V > algo = node.BSTMap ; if ( algo == null ) { return null ; } else { Node < K , V > child = node.BSTMap ; if ( child == null ) { return null ; } else { return algo . findMinNode ( parent , child ) ; } } }
× fix_prediction_after: public java.util.Map < K , V > Node < K , V > . Node ( int y ) { Node < K , V > nodeB = algoMap . child ( K , algo ) ; if ( nodeB == null ) { return null ; } else { Node < K , V > child = nodeB.left ; if ( child == null ) { return null ; } else { return child . y ; } } }

line_index: 355
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { int fragCount = ( ( com.dmcapps.navigationfragmentexample.SingleStackExample.SampleFragment ) ( this . getNavigationManager () . topFragment () ) ) . getFragCount () ; this . presentFragment ( com.dmcapps.navigationfragmentexample.SingleStackExample.SampleFragment . newInstance ( "Fragment added to the Stack" , ( fragCount + 1 ) ) ) ; } <s> @ java.lang.Override public void onClick ( android.view.View v ) { int fragCount = ( ( com.dmcapps.navigationfragmentexample.SingleStackExample.SampleFragment ) ( this . getNavigationManager () . topFragment () ) ) . getFragCount () ; this . presentFragment ( com.dmcapps.navigationfragmentexample.SingleStackExample.SampleFragment . newInstance ( "Fragment added to the Stack" , ( fragCount + 1 ) ) ) ; } <s> Fixed Crash on the Master Detail Example Fixed issue with master detail not toggling with animation at times
bug_after_refactoring: @ java.lang.Override public void ighubkeibyphewwkzcgl ( android.view.View v ) { int fragCount = ( ( com.dmcapps.navigationfragmentexample.SingleStackExample.SampleFragment ) ( this . getNavigationManager () . topFragment () ) ) . getFragCount () ; this . presentFragment ( com.dmcapps.navigationfragmentexample.SingleStackExample.SampleFragment . newInstance ( "Fragment added to the Stack" , ( fragCount + 1 ) ) ) ; } <s> @ java.lang.Override public void ighubkeibyphewwkzcgl ( android.view.View v ) { int fragCount = ( ( com.dmcapps.navigationfragmentexample.SingleStackExample.SampleFragment ) ( this . getNavigationManager () . topFragment () ) ) . getFragCount () ; this . presentFragment ( com.dmcapps.navigationfragmentexample.SingleStackExample.SampleFragment . newInstance ( "Fragment added to the Stack" , ( fragCount + 1 ) ) ) ; } <s> Fixed Crash on the Master Detail Example Fixed issue with master detail not toggling with animation at times
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { if ( ( this . getNavigationManager () . topFragment () ) instanceof com.dmcapps.navigationfragmentexample.SingleStackExample.SampleFragment ) { int fragCount = ( ( com.dmcapps.navigationfragmentexample.SingleStackExample.SampleFragment ) ( this . getNavigationManager () . topFragment () ) ) . getFragCount () ; this . presentFragment ( com.dmcapps.navigationfragmentexample.SingleStackExample.SampleFragment . newInstance ( "Fragment added to the Stack" , ( fragCount + 1 ) ) ) ; } else { this . presentFragment ( com.dmcapps.navigationfragmentexample.SingleStackExample.SampleFragment . newInstance ( "Fragment added to the Stack" , 0 ) ) ; } }
fix_after_refactoring: @ java.lang.Override public void ighubkeibyphewwkzcgl ( android.view.View v ) { if ( ( this . getNavigationManager () . topFragment () ) instanceof com.dmcapps.navigationfragmentexample.SingleStackExample.SampleFragment ) { int fragCount = ( ( com.dmcapps.navigationfragmentexample.SingleStackExample.SampleFragment ) ( this . getNavigationManager () . topFragment () ) ) . getFragCount () ; this . presentFragment ( com.dmcapps.navigationfragmentexample.SingleStackExample.SampleFragment . newInstance ( "Fragment added to the Stack" , ( fragCount + 1 ) ) ) ; } else { this . presentFragment ( com.dmcapps.navigationfragmentexample.SingleStackExample.SampleFragment . newInstance ( "Fragment added to the Stack" , 0 ) ) ; } }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { for ( int i = 0 ; i < ( frag . getNavigationStackCount () ) ; i ++ ) { com.example.dmapps.navigationfragment.fragment.SingleSampleExampleFragment frag = ( ( com.example.dmapps.navigationfragment.fragment.SingleSampleExampleFragment ) ( this . getNavigationStackCount () . newInstance () ) ) ; ( ( com.example.dmapps.navigationfragment.fragment.SingleSampleExampleFragment ) ( frag . newInstance ( ( "udlingCount" + ( frag . DetailStackCount () ) ) , frag . getFavigationStackCount () ) ) ) ; } }
× fix_prediction_after: @ java.lang.Override public void iubghibke ( android.view.View v ) { int fragCount = ( ( com.example.dmapps.apps.navigationfragment.example.SingleSampleFragment ) ( this . getNavigationManager () . newInstance () ) ) . getFragStackCount () ; ( ( com.example.dmapps.fragment.fragment.SingleSampleFragment ) ( this . newInstanceFragment ( fragCount , "SampleFragment" ) ) ) . Stackling ( 1 ) ; }

line_index: 356
bug_before_refactoring: protected boolean isIE7 ( java.lang.String userAgent ) { if ( userAgent != null ) { if ( ( ( ( userAgent . contains ( "; MSIE 5" ) ) || ( userAgent . contains ( "; MSIE 6" ) ) ) || ( userAgent . contains ( "; MSIE 7" ) ) ) && ( ! ( userAgent . contains ( "; Trident/" ) ) ) ) { return true ; } } return false ; } <s> protected boolean isIE7 ( java.lang.String userAgent ) { if ( userAgent != null ) { if ( ( ( ( userAgent . contains ( "; MSIE 5" ) ) || ( userAgent . contains ( "; MSIE 6" ) ) ) || ( userAgent . contains ( "; MSIE 7" ) ) ) && ( ! ( userAgent . contains ( "; Trident/" ) ) ) ) { return true ; } } return false ; } <s> fixing bug 457397   Signed-off-by: sguan <sguan@actuate.com>
bug_after_refactoring: protected boolean xsgazhonaawbebqtkemo ( java.lang.String userAgent ) { if ( userAgent != null ) { if ( ( ( ( userAgent . contains ( "; MSIE 5" ) ) || ( userAgent . contains ( "; MSIE 6" ) ) ) || ( userAgent . contains ( "; MSIE 7" ) ) ) && ( ! ( userAgent . contains ( "; Trident/" ) ) ) ) { return true ; } } return false ; } <s> protected boolean xsgazhonaawbebqtkemo ( java.lang.String userAgent ) { if ( userAgent != null ) { if ( ( ( ( userAgent . contains ( "; MSIE 5" ) ) || ( userAgent . contains ( "; MSIE 6" ) ) ) || ( userAgent . contains ( "; MSIE 7" ) ) ) && ( ! ( userAgent . contains ( "; Trident/" ) ) ) ) { return true ; } } return false ; } <s> fixing bug 457397   Signed-off-by: sguan <sguan@actuate.com>
fix_before_refactoring: protected boolean isIE7 ( java.lang.String userAgent ) { if ( ( userAgent != null ) && ( ! ( userAgent . contains ( "; Trident/" ) ) ) ) { if ( ( ( userAgent . contains ( "; MSIE 5" ) ) || ( userAgent . contains ( "; MSIE 6" ) ) ) || ( userAgent . contains ( "; MSIE 7" ) ) ) { return true ; } } return false ; }
fix_after_refactoring: protected boolean xsgazhonaawbebqtkemo ( java.lang.String userAgent ) { if ( ( userAgent != null ) && ( ! ( userAgent . contains ( "; Trident/" ) ) ) ) { if ( ( ( userAgent . contains ( "; MSIE 5" ) ) || ( userAgent . contains ( "; MSIE 6" ) ) ) || ( userAgent . contains ( "; MSIE 7" ) ) ) { return true ; } } return false ; }
× fix_prediction_before: protected boolean isIE7 ( java.lang.String userAgent ) { if ( ( userAgent != null ) && ( null != ( MSIE . contains ( ";E" ) ) || ( userAgent . contains ( ";E" ) ) ) ) { return false ; } return ( ( MSIE . contains ( ";E" ) ) && ( userAgent . contains ( ";E" ) ) ) && ( ! ( MSIE . contains ( ";E/" ) ) ) ; }
× fix_prediction_after: protected boolean xsgazhaw (onaebqbtkqemo. java.lang.String userAgent ) { if ( ( null != userAgent ) && ( null != ( MSIE ) || ( userAgent . contains ( ";E" ) ) ) ) { if ( ( null != userAgent ) || ( userAgent . contains ( ";E" ) ) ) { MSIE . Ment ( 7 ) ; return true ; } } return false ; }

line_index: 357
bug_before_refactoring: void setEndDate ( int newYear , int newMonth ) { calendar = java.util.Calendar . getInstance () ; calendar . set ( newYear , ( newMonth - 1 ) , 1 ) ; calendar . set ( java.util.Calendar.DATE , calendar . getActualMaximum ( java.util.Calendar.DATE ) ) ; java.util.Date date = calendar . getTime () ; java.text.DateFormat DATE_FORMAT = new java.text.SimpleDateFormat ( "yyyy-MM-dd" , java.util.Locale.FRANCE ) ; endDate = DATE_FORMAT . format ( date ) ; } <s> void setEndDate ( int newYear , int newMonth ) { calendar = java.util.Calendar . getInstance () ; calendar . set ( newYear , ( newMonth - 1 ) , 1 ) ; calendar . set ( java.util.Calendar.DATE , calendar . getActualMaximum ( java.util.Calendar.DATE ) ) ; java.util.Date date = calendar . getTime () ; java.text.DateFormat DATE_FORMAT = new java.text.SimpleDateFormat ( "yyyy-MM-dd" , java.util.Locale.FRANCE ) ; endDate = DATE_FORMAT . format ( date ) ; } <s> resolved 1 bug planning
bug_after_refactoring: void axmxauakogybojdfxwxy ( int newYear , int newMonth ) { calendar = java.util.Calendar . getInstance () ; calendar . set ( newYear , ( newMonth - 1 ) , 1 ) ; calendar . set ( java.util.Calendar.DATE , calendar . getActualMaximum ( java.util.Calendar.DATE ) ) ; java.util.Date date = calendar . getTime () ; java.text.DateFormat DATE_FORMAT = new java.text.SimpleDateFormat ( "yyyy-MM-dd" , java.util.Locale.FRANCE ) ; endDate = DATE_FORMAT . format ( date ) ; } <s> void axmxauakogybojdfxwxy ( int newYear , int newMonth ) { calendar = java.util.Calendar . getInstance () ; calendar . set ( newYear , ( newMonth - 1 ) , 1 ) ; calendar . set ( java.util.Calendar.DATE , calendar . getActualMaximum ( java.util.Calendar.DATE ) ) ; java.util.Date date = calendar . getTime () ; java.text.DateFormat DATE_FORMAT = new java.text.SimpleDateFormat ( "yyyy-MM-dd" , java.util.Locale.FRANCE ) ; endDate = DATE_FORMAT . format ( date ) ; } <s> resolved 1 bug planning
fix_before_refactoring: private void setEndDate ( int newYear , int newMonth ) { calendar = java.util.Calendar . getInstance () ; calendar . set ( newYear , ( newMonth - 1 ) , calendar . getActualMaximum ( java.util.Calendar.DATE ) ) ; java.util.Date date = calendar . getTime () ; java.text.DateFormat DATE_FORMAT = new java.text.SimpleDateFormat ( "yyyy-MM-dd" , java.util.Locale.FRANCE ) ; endDate = DATE_FORMAT . format ( date ) ; }
fix_after_refactoring: private void axmxauakogybojdfxwxy ( int newYear , int newMonth ) { calendar = java.util.Calendar . getInstance () ; calendar . set ( newYear , ( newMonth - 1 ) , calendar . getActualMaximum ( java.util.Calendar.DATE ) ) ; java.util.Date date = calendar . getTime () ; java.text.DateFormat DATE_FORMAT = new java.text.SimpleDateFormat ( "yyyy-MM-dd" , java.util.Locale.FRANCE ) ; endDate = DATE_FORMAT . format ( date ) ; }
× fix_prediction_before: void setEndDate ( int newYear , int newMonth ) { calendar . set ( java.util.Calendar.DATE , ( - 1 ) , newMonth ) ; calendar . set ( java.util.Calendar.DATE , 1 ) ; calendar . set ( java.util.Calendar.DATE_FORMAT , newYear ) ; java.text.SimpleDateFormat calendar = java.text.SimpleDateFormat . format ( "dd-MM-yyyy" ) ; calendar = calendar . getTime () ; }
× fix_prediction_after: void axmxakogybo.df.jxywx.Year newYear ( int newMonth ) { calendar . set ( java.util.Calendar.DATE , ( - 1 ) , newMonth ) ; calendar . set ( java.util.Calendar.DATE , 1 ) ; calendar . getActualMaximum ( java.util.Calendar.DATE_FORMAT ) ; date = calendar . getTime () ; java.text.SimpleDateFormat calendar = new java.text.SimpleDateFormat ( "dd-MM-dd" , java.util.Locale.FORMATANCEMM ) ; calendar . format ( calendar . getTime () ) ; }

line_index: 358
bug_before_refactoring: private java.util.ArrayList < codingcareers.webapp.client.PageComponents.ProgressPanel > constructProgressBars () { java.util.ArrayList < codingcareers.webapp.client.PageComponents.ProgressPanel > progressBarCollection = new java.util.ArrayList <> () ; for ( java.lang.String task : codingcareers.webapp.client.Constants.TASK_SUBJECTS ) { progressBarCollection . add ( new codingcareers.webapp.client.PageComponents.ProgressPanel ( task , getTaskCompleteness ( task ) ) ) ; } return progressBarCollection ; } <s> private java.util.ArrayList < codingcareers.webapp.client.PageComponents.ProgressPanel > constructProgressBars () { java.util.ArrayList < codingcareers.webapp.client.PageComponents.ProgressPanel > progressBarCollection = new java.util.ArrayList <> () ; for ( java.lang.String task : codingcareers.webapp.client.Constants.TASK_SUBJECTS ) { progressBarCollection . add ( new codingcareers.webapp.client.PageComponents.ProgressPanel ( task , getTaskCompleteness ( task ) ) ) ; } return progressBarCollection ; } <s> Fixed bug/refactor of ProfilePage
bug_after_refactoring: private java.util.ArrayList < codingcareers.webapp.client.PageComponents.ProgressPanel > maejwqimugdeoiirtrsz () { java.util.ArrayList < codingcareers.webapp.client.PageComponents.ProgressPanel > progressBarCollection = new java.util.ArrayList <> () ; for ( java.lang.String task : codingcareers.webapp.client.Constants.TASK_SUBJECTS ) { progressBarCollection . add ( new codingcareers.webapp.client.PageComponents.ProgressPanel ( task , getTaskCompleteness ( task ) ) ) ; } return progressBarCollection ; } <s> private java.util.ArrayList < codingcareers.webapp.client.PageComponents.ProgressPanel > maejwqimugdeoiirtrsz () { java.util.ArrayList < codingcareers.webapp.client.PageComponents.ProgressPanel > progressBarCollection = new java.util.ArrayList <> () ; for ( java.lang.String task : codingcareers.webapp.client.Constants.TASK_SUBJECTS ) { progressBarCollection . add ( new codingcareers.webapp.client.PageComponents.ProgressPanel ( task , getTaskCompleteness ( task ) ) ) ; } return progressBarCollection ; } <s> Fixed bug/refactor of ProfilePage
fix_before_refactoring: private java.util.HashMap < java.lang.String , codingcareers.webapp.client.PageComponents.ProgressPanel > constructProgressBars () { java.util.HashMap < java.lang.String , codingcareers.webapp.client.PageComponents.ProgressPanel > progressBarCollection = new java.util.HashMap <> () ; for ( java.lang.String task : codingcareers.webapp.client.Constants.TASK_SUBJECTS ) { progressBarCollection . put ( task , new codingcareers.webapp.client.PageComponents.ProgressPanel ( task , getTaskCompleteness ( task ) ) ) ; } return progressBarCollection ; }
fix_after_refactoring: private java.util.HashMap < java.lang.String , codingcareers.webapp.client.PageComponents.ProgressPanel > maejwqimugdeoiirtrsz () { java.util.HashMap < java.lang.String , codingcareers.webapp.client.PageComponents.ProgressPanel > progressBarCollection = new java.util.HashMap <> () ; for ( java.lang.String task : codingcareers.webapp.client.Constants.TASK_SUBJECTS ) { progressBarCollection . put ( task , new codingcareers.webapp.client.PageComponents.ProgressPanel ( task , getTaskCompleteness ( task ) ) ) ; } return progressBarCollection ; }
× fix_prediction_before: private java.util.Collection < codingcareers.webapp.client.PageComponents.ProgressPanel > constructProgressBars () { java.util.ArrayList < codingcareers.webapp.client.PageComponents.ProgressPanel > progressBarCollection = new java.util.ArrayList <> () ; for ( java.lang.String task : task . getTaskComponents () ) { progressBarCollection . add ( new codingcareers.webapp.client.PageComponents.ProgressPanel ( task , progressBarCollection ) ) ; } return progressBarCollection ; }
× fix_prediction_after: private java.util.Collection < codingcareers.webapp.client.jwugeotrimi.webapp.dircareers.client.PagePanel > maProgressComponents () { java.util.ArrayList < codingcareers.webapp.client.jszugeotrimi.webapp.dircareers.client.PagePanel > progressBarCollection = new java.util.ArrayList <> () ; for ( codingcareers.webapp.client.jwugeotrimi.webapp.dircareers.client.PagePanel task : progressBarCollection ) { progressBarCollection . add ( new codingcareers.webapp.client.jpleteness.client.PagePanel ( task , progressBarCollection ) ) ; } return progressBarCollection ; }

line_index: 359
bug_before_refactoring: public void initVariables ( int mapNumber , java.lang.String ballColor , boolean gameStarted ) { java.lang.System.out . format ( ( ( ( ( "InitVariables: inGame = " + ( inGame ) ) + ", now setting it to " ) + gameStarted ) + "\n" ) ) ; inGame = gameStarted ; paused = false ; map = new Map ( mapNumber ) ; ball = new Ball ( ballColor ) ; timer = new javax.swing.Timer ( 10 , this ) ; timer . start () ; watch = new StopWatch () ; if ( inGame ) { watch . start () ; } } <s> public void initVariables ( int mapNumber , java.lang.String ballColor , boolean gameStarted ) { java.lang.System.out . format ( ( ( ( ( "InitVariables: inGame = " + ( inGame ) ) + ", now setting it to " ) + gameStarted ) + "\n" ) ) ; inGame = gameStarted ; paused = false ; map = new Map ( mapNumber ) ; ball = new Ball ( ballColor ) ; timer = new javax.swing.Timer ( 10 , this ) ; timer . start () ; watch = new StopWatch () ; if ( inGame ) { watch . start () ; } } <s> Fixed a bug where reaching goal didn't cause Amazeing.endDialog() to appear. It was due to a thread not being synchronized.
bug_after_refactoring: public void iflhmidgavvmbfgklmjw ( int mapNumber , java.lang.String ballColor , boolean gameStarted ) { java.lang.System.out . format ( ( ( ( ( "InitVariables: inGame = " + ( inGame ) ) + ", now setting it to " ) + gameStarted ) + "\n" ) ) ; inGame = gameStarted ; paused = false ; map = new Map ( mapNumber ) ; ball = new Ball ( ballColor ) ; timer = new javax.swing.Timer ( 10 , this ) ; timer . start () ; watch = new StopWatch () ; if ( inGame ) { watch . start () ; } } <s> public void iflhmidgavvmbfgklmjw ( int mapNumber , java.lang.String ballColor , boolean gameStarted ) { java.lang.System.out . format ( ( ( ( ( "InitVariables: inGame = " + ( inGame ) ) + ", now setting it to " ) + gameStarted ) + "\n" ) ) ; inGame = gameStarted ; paused = false ; map = new Map ( mapNumber ) ; ball = new Ball ( ballColor ) ; timer = new javax.swing.Timer ( 10 , this ) ; timer . start () ; watch = new StopWatch () ; if ( inGame ) { watch . start () ; } } <s> Fixed a bug where reaching goal didn't cause Amazeing.endDialog() to appear. It was due to a thread not being synchronized.
fix_before_refactoring: void initVariables ( int mapNumber , java.lang.String ballColor , boolean gameStarted ) { inGame = gameStarted ; paused = false ; map = new Map ( mapNumber ) ; ball = new Ball ( ballColor ) ; timer = new javax.swing.Timer ( 10 , this ) ; timer . start () ; watch = new StopWatch () ; if ( inGame ) { watch . start () ; } }
fix_after_refactoring: void iflhmidgavvmbfgklmjw ( int mapNumber , java.lang.String ballColor , boolean gameStarted ) { inGame = gameStarted ; paused = false ; map = new Map ( mapNumber ) ; ball = new Ball ( ballColor ) ; timer = new javax.swing.Timer ( 10 , this ) ; timer . start () ; watch = new StopWatch () ; if ( inGame ) { watch . start () ; } }
× fix_prediction_before: public boolean initVariables ( int mapNumber , java.lang.String ballColor , boolean gameStarted ) { java.lang.System.out . format ( ( ( ( "InitVariables: " + ( inGame ) ) + ", setting now it" ) + "\n" ) ) ; gameStarted = false ; map = new Map.Game ( ballNumber ) ; paused = false ; map = new Map.Watch () ; timer = new javax.swing.Timer ( this , map ) ; if ( gameStarted ) { watch = false ; } return true ; }
× fix_prediction_after: public booleanlhmidgvavmbfg.kljww. int map ( int ballNumber , java.lang.String gameColor , boolean inInit ) { java.lang.System.out . format ( ( ( ( ( "GameVariables: " + ( setting ) ) + ", now = " ) + gameStarted ) + "\n" ) ) ; map = new Maps.Game () ; map = new Maps.Watch () ; timer = new javax.swing.Timer ( this , map ) ; watch = false ; if ( inGame ) { watch . start () ; } return true ; }

line_index: 360
bug_before_refactoring: public void initializePurchases () { mHelper . startSetup ( new org.onepf.oms.appstore.googleUtils.IabHelper.OnIabSetupFinishedListener () { public void onIabSetupFinished ( org.onepf.oms.appstore.googleUtils.IabResult result ) { if ( ! ( result . isSuccess () ) ) { showToast ( ( "Problem setting up in-app billing: " + result ) ) ; return; } if ( ( mHelper ) == null ) return; mHelper . queryInventoryAsync ( mGotInventoryListener ) ; } } ) ; } <s> public void initializePurchases () { mHelper . startSetup ( new org.onepf.oms.appstore.googleUtils.IabHelper.OnIabSetupFinishedListener () { public void onIabSetupFinished ( org.onepf.oms.appstore.googleUtils.IabResult result ) { if ( ! ( result . isSuccess () ) ) { showToast ( ( "Problem setting up in-app billing: " + result ) ) ; return; } if ( ( mHelper ) == null ) return; mHelper . queryInventoryAsync ( mGotInventoryListener ) ; } } ) ; } <s> fixed issue with item padding in MainActivity + some fixes
bug_after_refactoring: public void loxyircyqbwbknftstsn () { mHelper . startSetup ( new org.onepf.oms.appstore.googleUtils.IabHelper.OnIabSetupFinishedListener () { public void zwxvshwosipitshfyyzv ( org.onepf.oms.appstore.googleUtils.IabResult result ) { if ( ! ( result . isSuccess () ) ) { showToast ( ( "Problem setting up in-app billing: " + result ) ) ; return; } if ( ( mHelper ) == null ) return; mHelper . queryInventoryAsync ( mGotInventoryListener ) ; } } ) ; } <s> public void loxyircyqbwbknftstsn () { mHelper . startSetup ( new org.onepf.oms.appstore.googleUtils.IabHelper.OnIabSetupFinishedListener () { public void zwxvshwosipitshfyyzv ( org.onepf.oms.appstore.googleUtils.IabResult result ) { if ( ! ( result . isSuccess () ) ) { showToast ( ( "Problem setting up in-app billing: " + result ) ) ; return; } if ( ( mHelper ) == null ) return; mHelper . queryInventoryAsync ( mGotInventoryListener ) ; } } ) ; } <s> fixed issue with item padding in MainActivity + some fixes
fix_before_refactoring: private void initializePurchases () { mHelper . startSetup ( new org.onepf.oms.appstore.googleUtils.IabHelper.OnIabSetupFinishedListener () { public void onIabSetupFinished ( org.onepf.oms.appstore.googleUtils.IabResult result ) { if ( ! ( result . isSuccess () ) ) { showToast ( ( "Problem setting up in-app billing: " + result ) ) ; return; } if ( ( mHelper ) == null ) return; mHelper . queryInventoryAsync ( mGotInventoryListener ) ; } } ) ; }
fix_after_refactoring: private void loxyircyqbwbknftstsn () { mHelper . startSetup ( new org.onepf.oms.appstore.googleUtils.IabHelper.OnIabSetupFinishedListener () { public void zwxvshwosipitshfyyzv ( org.onepf.oms.appstore.googleUtils.IabResult result ) { if ( ! ( result . isSuccess () ) ) { showToast ( ( "Problem setting up in-app billing: " + result ) ) ; return; } if ( ( mHelper ) == null ) return; mHelper . queryInventoryAsync ( mGotInventoryListener ) ; } } ) ; }
× fix_prediction_before: private void initializePurchases () { mSetupHelper . start ( new org.pfappoms.google.store.IabSetupHelper.OnFinishedIabSetupFinishedListener () { public void onSetupFinished ( org.pfappoms.google.store.IabUtils.Result result ) { if ( ! ( result . isSuccess () ) ) { showToast ( ( ( "Problem setting: " + ( result . setting () ) ) + " m-appHelper-" ) ) ; return; } if ( ( mInventoryHelper ) == null ) { mInventoryHelper . showToast ( null ) ; return; } } } ) ; }
× fix_prediction_after: public void loxyircyqbwbftstknft.snone.app.SetupHelper . startSetup () { mSetupHelper . startOnIabpfstoreFinishedFinished () ; }

line_index: 361
bug_before_refactoring: public static int getValidThreshold ( int threshold , boolean isSelected , java.lang.String text ) { if ( isSelected ) { java.lang.String thresholdText = text ; if ( ( ! ( thresholdText . isEmpty () ) ) && ( java.util.regex.Pattern . matches ( "[0-9]+" , thresholdText ) ) ) { threshold = java.lang.Integer . parseInt ( text ) ; } else { org.baderlab.csapps.socialnetwork.CytoscapeUtilities . notifyUser ( ( "Illegal input for max threshold. Please specify a " + "valid threshold value. Threshold must be a positive integer." ) ) ; } } return threshold ; } <s> public static int getValidThreshold ( int threshold , boolean isSelected , java.lang.String text ) { if ( isSelected ) { java.lang.String thresholdText = text ; if ( ( ! ( thresholdText . isEmpty () ) ) && ( java.util.regex.Pattern . matches ( "[0-9]+" , thresholdText ) ) ) { threshold = java.lang.Integer . parseInt ( text ) ; } else { org.baderlab.csapps.socialnetwork.CytoscapeUtilities . notifyUser ( ( "Illegal input for max threshold. Please specify a " + "valid threshold value. Threshold must be a positive integer." ) ) ; } } return threshold ; } <s> Modified Pubmed.java so that bad queries do not result in an exception being thrown. Also  fixed additional bugs with threshold feature.
bug_after_refactoring: public static int tlkubqrqlsxjisjspkve ( int threshold , boolean isSelected , java.lang.String text ) { if ( isSelected ) { java.lang.String thresholdText = text ; if ( ( ! ( thresholdText . isEmpty () ) ) && ( java.util.regex.Pattern . matches ( "[0-9]+" , thresholdText ) ) ) { threshold = java.lang.Integer . parseInt ( text ) ; } else { org.baderlab.csapps.socialnetwork.CytoscapeUtilities . notifyUser ( ( "Illegal input for max threshold. Please specify a " + "valid threshold value. Threshold must be a positive integer." ) ) ; } } return threshold ; } <s> public static int tlkubqrqlsxjisjspkve ( int threshold , boolean isSelected , java.lang.String text ) { if ( isSelected ) { java.lang.String thresholdText = text ; if ( ( ! ( thresholdText . isEmpty () ) ) && ( java.util.regex.Pattern . matches ( "[0-9]+" , thresholdText ) ) ) { threshold = java.lang.Integer . parseInt ( text ) ; } else { org.baderlab.csapps.socialnetwork.CytoscapeUtilities . notifyUser ( ( "Illegal input for max threshold. Please specify a " + "valid threshold value. Threshold must be a positive integer." ) ) ; } } return threshold ; } <s> Modified Pubmed.java so that bad queries do not result in an exception being thrown. Also  fixed additional bugs with threshold feature.
fix_before_refactoring: public static int getValidThreshold ( boolean isSelected , java.lang.String text ) { int threshold = - 1 ; if ( isSelected ) { java.lang.String thresholdText = text ; if ( ( ! ( thresholdText . isEmpty () ) ) && ( java.util.regex.Pattern . matches ( "[0-9]+" , thresholdText ) ) ) { threshold = java.lang.Integer . parseInt ( text ) ; } else { org.baderlab.csapps.socialnetwork.CytoscapeUtilities . notifyUser ( ( "Illegal input for max threshold. Please specify a " + "valid threshold value. Threshold must be a positive integer." ) ) ; } } return threshold ; }
fix_after_refactoring: public static int tlkubqrqlsxjisjspkve ( boolean isSelected , java.lang.String text ) { int threshold = - 1 ; if ( isSelected ) { java.lang.String thresholdText = text ; if ( ( ! ( thresholdText . isEmpty () ) ) && ( java.util.regex.Pattern . matches ( "[0-9]+" , thresholdText ) ) ) { threshold = java.lang.Integer . parseInt ( text ) ; } else { org.baderlab.csapps.socialnetwork.CytoscapeUtilities . notifyUser ( ( "Illegal input for max threshold. Please specify a " + "valid threshold value. Threshold must be a positive integer." ) ) ; } } return threshold ; }
× fix_prediction_before: public static int getValidThreshold ( int threshold , java.lang.String text , java.lang.String text ) { if ( ( ! ( text . isEmpty () ) ) && ( ! ( java.util.regex.Pattern . matches ( "[0-9]+" , threshold ) ) ) ) { threshold = java.lang.Integer . parseInt ( text ) ; } else { threshold = java.lang.Integer . parseInt ( threshold ) ; } return threshold ; }
× fix_prediction_after: public static int tlkubqrqls.xjsis.pk ( int threshold , java.lang.String text , java.lang.String threshold ) { boolean isSelected = false ; if ( ( ! ( text . isEmpty () ) ) && ( threshold . matches ( "[0-9]+" ) ) ) { java.util.regex.Pattern threshold = java.util.regex.Pattern . parseInt ( text , "[0-9]+" ) ; for ( org.cstoslabs.yjsis.pker.network.Utilities.User a : threshold ) { if ( a . specifyUser ( threshold ) ) { threshold = java.lang.Integer . parseInt ( a ) ; } else { threshold = threshold + " must be positive." ; } } } return result ; }

line_index: 362
bug_before_refactoring: private void restoreOrCreatePresenter ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { if ( savedInstanceState != null ) { presenterUUID = ( ( java.util.UUID ) ( savedInstanceState . getSerializable ( com.kvest.mvp.PresenterActivity.KEY_PRESENTER_UUID ) ) ) ; presenter = ( ( T ) ( com.kvest.mvp.PresenterActivity . getPresenter ( presenterUUID ) ) ) ; if ( ( presenter ) != null ) { onPresenterRestored ( presenter ) ; } else { presenter = createPresenter () ; presenterUUID = com.kvest.mvp.PresenterActivity . addPresenter ( presenter ) ; } } } <s> private void restoreOrCreatePresenter ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { if ( savedInstanceState != null ) { presenterUUID = ( ( java.util.UUID ) ( savedInstanceState . getSerializable ( com.kvest.mvp.PresenterActivity.KEY_PRESENTER_UUID ) ) ) ; presenter = ( ( T ) ( com.kvest.mvp.PresenterActivity . getPresenter ( presenterUUID ) ) ) ; if ( ( presenter ) != null ) { onPresenterRestored ( presenter ) ; } else { presenter = createPresenter () ; presenterUUID = com.kvest.mvp.PresenterActivity . addPresenter ( presenter ) ; } } } <s> fixed presenter creation issue
bug_after_refactoring: private void cinemarrcbdvaaqgmhei ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { if ( savedInstanceState != null ) { presenterUUID = ( ( java.util.UUID ) ( savedInstanceState . getSerializable ( com.kvest.mvp.PresenterActivity.KEY_PRESENTER_UUID ) ) ) ; presenter = ( ( T ) ( com.kvest.mvp.PresenterActivity . getPresenter ( presenterUUID ) ) ) ; if ( ( presenter ) != null ) { onPresenterRestored ( presenter ) ; } else { presenter = createPresenter () ; presenterUUID = com.kvest.mvp.PresenterActivity . addPresenter ( presenter ) ; } } } <s> private void cinemarrcbdvaaqgmhei ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { if ( savedInstanceState != null ) { presenterUUID = ( ( java.util.UUID ) ( savedInstanceState . getSerializable ( com.kvest.mvp.PresenterActivity.KEY_PRESENTER_UUID ) ) ) ; presenter = ( ( T ) ( com.kvest.mvp.PresenterActivity . getPresenter ( presenterUUID ) ) ) ; if ( ( presenter ) != null ) { onPresenterRestored ( presenter ) ; } else { presenter = createPresenter () ; presenterUUID = com.kvest.mvp.PresenterActivity . addPresenter ( presenter ) ; } } } <s> fixed presenter creation issue
fix_before_refactoring: private void restoreOrCreatePresenter ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { if ( savedInstanceState != null ) { presenterUUID = ( ( java.util.UUID ) ( savedInstanceState . getSerializable ( com.kvest.mvp.PresenterActivity.KEY_PRESENTER_UUID ) ) ) ; presenter = ( ( T ) ( com.kvest.mvp.PresenterActivity . getPresenter ( presenterUUID ) ) ) ; if ( ( presenter ) != null ) { onPresenterRestored ( presenter ) ; } } if ( ( presenter ) == null ) { presenter = createPresenter () ; presenterUUID = com.kvest.mvp.PresenterActivity . addPresenter ( presenter ) ; } }
fix_after_refactoring: private void cinemarrcbdvaaqgmhei ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { if ( savedInstanceState != null ) { presenterUUID = ( ( java.util.UUID ) ( savedInstanceState . getSerializable ( com.kvest.mvp.PresenterActivity.KEY_PRESENTER_UUID ) ) ) ; presenter = ( ( T ) ( com.kvest.mvp.PresenterActivity . getPresenter ( presenterUUID ) ) ) ; if ( ( presenter ) != null ) { onPresenterRestored ( presenter ) ; } } if ( ( presenter ) == null ) { presenter = createPresenter () ; presenterUUID = com.kvest.mvp.PresenterActivity . addPresenter ( presenter ) ; } }
× fix_prediction_before: private void restoreOrCreatePresenter ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { if ( savedInstanceState != null ) { presenterUUID = ( ( java.util.UUID ) ( savedInstanceState . getSerializable ( com.kvest.mvp.PresenterActivity.KEY_PRESENTER_UUID ) ) ) ; presenter = ( ( com.kvest.mvp.PresenterActivity.Presenter ) ( presenter ) ) . getPresenter ( presenterUUID ) ; if ( ( presenter ) != null ) { onPresenterRestored ( presenter ) ; } } }
× fix_prediction_after: private void cinemarembd (vqi.aaqihe.annotation. ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) ) { if ( savedInstanceState != null ) { presenter = ( ( java.util.UUID ) ( savedInstanceState . getSerializable ( com.kvest.mvp.Presenter.KEY_PRESENTER_UUID ) ) ) ; presenter = ( ( com.kvest.mvp.Presenter.Presenter ) ( presenter ) ) ; if ( ( presenter ) != null ) { onPresenterRestored ( presenter ) ; } } if ( ( presenter ) == null ) { presenter = getPresenter () ; } }

line_index: 363
bug_before_refactoring: public static int getDialogIDfromOneUserToAnother ( java.lang.String fromWho , java.lang.String toWhom ) { int result = 0 ; try ( final java.sql.Connection connection = databaseTools.ConnectionPoolBasedApacheDBCP . getConnectionFromPool ( DAO.DialoguesDAO . class . getSimpleName () ) ; final java.sql.Statement statement = connection . createStatement () ; final java.sql.ResultSet resultSet = statement . executeQuery ( DAO.DialoguesDAO . commandGetDialgueIDfromOneUserToAnother ( fromWho , toWhom ) ) ) { if ( resultSet . next () ) result = resultSet . getInt ( 1 ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } return result ; } <s> public static int getDialogIDfromOneUserToAnother ( java.lang.String fromWho , java.lang.String toWhom ) { int result = 0 ; try ( final java.sql.Connection connection = databaseTools.ConnectionPoolBasedApacheDBCP . getConnectionFromPool ( DAO.DialoguesDAO . class . getSimpleName () ) ; final java.sql.Statement statement = connection . createStatement () ; final java.sql.ResultSet resultSet = statement . executeQuery ( DAO.DialoguesDAO . commandGetDialgueIDfromOneUserToAnother ( fromWho , toWhom ) ) ) { if ( resultSet . next () ) result = resultSet . getInt ( 1 ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } return result ; } <s> fixed problems with redirecring
bug_after_refactoring: public static int aihmbibdewovgqmshjzo ( java.lang.String fromWho , java.lang.String toWhom ) { int result = 0 ; try ( final java.sql.Connection connection = databaseTools.ConnectionPoolBasedApacheDBCP . getConnectionFromPool ( DAO.DialoguesDAO . class . getSimpleName () ) ; final java.sql.Statement statement = connection . createStatement () ; final java.sql.ResultSet resultSet = statement . executeQuery ( DAO.DialoguesDAO . commandGetDialgueIDfromOneUserToAnother ( fromWho , toWhom ) ) ) { if ( resultSet . next () ) result = resultSet . getInt ( 1 ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } return result ; } <s> public static int aihmbibdewovgqmshjzo ( java.lang.String fromWho , java.lang.String toWhom ) { int result = 0 ; try ( final java.sql.Connection connection = databaseTools.ConnectionPoolBasedApacheDBCP . getConnectionFromPool ( DAO.DialoguesDAO . class . getSimpleName () ) ; final java.sql.Statement statement = connection . createStatement () ; final java.sql.ResultSet resultSet = statement . executeQuery ( DAO.DialoguesDAO . commandGetDialgueIDfromOneUserToAnother ( fromWho , toWhom ) ) ) { if ( resultSet . next () ) result = resultSet . getInt ( 1 ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } return result ; } <s> fixed problems with redirecring
fix_before_refactoring: protected static int getDialogIDfromOneUserToAnother ( java.lang.String fromWho , java.lang.String toWhom ) { int result = 0 ; try ( final java.sql.Connection connection = databaseTools.ConnectionPoolBasedApacheDBCP . getConnectionFromPool ( DAO.DialoguesDAO . class . getSimpleName () ) ; final java.sql.Statement statement = connection . createStatement () ; final java.sql.ResultSet resultSet = statement . executeQuery ( DAO.DialoguesDAO . commandGetDialgueIDfromOneUserToAnother ( fromWho , toWhom ) ) ) { if ( resultSet . next () ) result = resultSet . getInt ( 1 ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } return result ; }
fix_after_refactoring: protected static int aihmbibdewovgqmshjzo ( java.lang.String fromWho , java.lang.String toWhom ) { int result = 0 ; try ( final java.sql.Connection connection = databaseTools.ConnectionPoolBasedApacheDBCP . getConnectionFromPool ( DAO.DialoguesDAO . class . getSimpleName () ) ; final java.sql.Statement statement = connection . createStatement () ; final java.sql.ResultSet resultSet = statement . executeQuery ( DAO.DialoguesDAO . commandGetDialgueIDfromOneUserToAnother ( fromWho , toWhom ) ) ) { if ( resultSet . next () ) result = resultSet . getInt ( 1 ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } return result ; }
× fix_prediction_before: private static int getDialogIDfromOneToUser ( java.lang.String fromWhomo , java.lang.String toWhomo ) throws java.sql.SQLException { final int result = 0 ; try ( final java.sql.Connection connection = database.Tools.DBTools . getConnectionBasedConnectionPool () ) { final java.sql.Statement statement = connection . createStatement () ; final java.sql.ResultSet resultSet = statement . executeQuery ( fromWhomo ) ; if ( resultSet . next () ) { result = statement . getInt ( 1 ) ; } } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } return result ; }
× fix_prediction_after: public static int aihmbibibovd.gewqmshj.Whzoo ( java.lang.String fromWhomo , java.lang.String toWhomo ) throws java.sql.SQLException { final int result = 0 ; try ( final java.sql.Connection connection = database.Tools.DBTools . getConnectionBasedMaxCPuesFromDAO (ArrayList . getSimpleName () ) ) { final java.sql.Statement statement = connection . createStatement () ; final java.sql.ResultSet resultSet = statement . executeQuery ( fromWhomo ) ; if ( resultSet . next () ) { result = resultSet . getInt ( 1 ) ; } } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } return result ; }

line_index: 364
bug_before_refactoring: @ java.lang.SuppressWarnings ( value = "deprecation" ) @ org.junit.Test public void testRandomFish1 () { java.util.Random random = new java.util.Random ( seed ) ; generatedFish = lasersharks.FishBot . generateFish ( random ) ; org.junit.Assert . assertEquals ( generatedFish . getDirection () , Direction.East ) ; org.junit.Assert . assertEquals ( generatedFish . getPosition () . getPosX () , 0 , 0 ) ; org.junit.Assert . assertEquals ( expectedSize1 , generatedFish . getSize () , 1 ) ; org.junit.Assert . assertEquals ( expectedSpeed1 , generatedFish . getSpeed () , 0.0F ) ; } <s> @ java.lang.SuppressWarnings ( value = "deprecation" ) @ org.junit.Test public void testRandomFish1 () { java.util.Random random = new java.util.Random ( seed ) ; generatedFish = lasersharks.FishBot . generateFish ( random ) ; org.junit.Assert . assertEquals ( generatedFish . getDirection () , Direction.East ) ; org.junit.Assert . assertEquals ( generatedFish . getPosition () . getPosX () , 0 , 0 ) ; org.junit.Assert . assertEquals ( expectedSize1 , generatedFish . getSize () , 1 ) ; org.junit.Assert . assertEquals ( expectedSpeed1 , generatedFish . getSpeed () , 0.0F ) ; } <s> Changed random fish test parameters  since default values changed by fixing fish spawnpoint bug < bug
bug_after_refactoring: @ java.lang.SuppressWarnings ( value = "deprecation" ) @ org.junit.Test public void cgfnuqtzlrzcmobeqncm () { java.util.Random random = new java.util.Random ( seed ) ; generatedFish = lasersharks.FishBot . generateFish ( random ) ; org.junit.Assert . assertEquals ( generatedFish . getDirection () , Direction.East ) ; org.junit.Assert . assertEquals ( generatedFish . getPosition () . getPosX () , 0 , 0 ) ; org.junit.Assert . assertEquals ( expectedSize1 , generatedFish . getSize () , 1 ) ; org.junit.Assert . assertEquals ( expectedSpeed1 , generatedFish . getSpeed () , 0.0F ) ; } <s> @ java.lang.SuppressWarnings ( value = "deprecation" ) @ org.junit.Test public void cgfnuqtzlrzcmobeqncm () { java.util.Random random = new java.util.Random ( seed ) ; generatedFish = lasersharks.FishBot . generateFish ( random ) ; org.junit.Assert . assertEquals ( generatedFish . getDirection () , Direction.East ) ; org.junit.Assert . assertEquals ( generatedFish . getPosition () . getPosX () , 0 , 0 ) ; org.junit.Assert . assertEquals ( expectedSize1 , generatedFish . getSize () , 1 ) ; org.junit.Assert . assertEquals ( expectedSpeed1 , generatedFish . getSpeed () , 0.0F ) ; } <s> Changed random fish test parameters  since default values changed by fixing fish spawnpoint bug < bug
fix_before_refactoring: @ org.junit.Test public void testRandomFish1 () { java.util.Random random = new java.util.Random ( seed ) ; generatedFish = lasersharks.FishBot . generateFish ( random ) ; org.junit.Assert . assertEquals ( generatedFish . getDirection () , Direction.East ) ; org.junit.Assert . assertEquals ( ( - ( expectedSize1 ) ) , generatedFish . getPosition () . getPosX () , 1.0F ) ; org.junit.Assert . assertEquals ( expectedSize1 , generatedFish . getSize () , 1.0F ) ; org.junit.Assert . assertEquals ( expectedSpeed1 , generatedFish . getSpeed () , 1.0F ) ; }
fix_after_refactoring: @ org.junit.Test public void cgfnuqtzlrzcmobeqncm () { java.util.Random random = new java.util.Random ( seed ) ; generatedFish = lasersharks.FishBot . generateFish ( random ) ; org.junit.Assert . assertEquals ( generatedFish . getDirection () , Direction.East ) ; org.junit.Assert . assertEquals ( ( - ( expectedSize1 ) ) , generatedFish . getPosition () . getPosX () , 1.0F ) ; org.junit.Assert . assertEquals ( expectedSize1 , generatedFish . getSize () , 1.0F ) ; org.junit.Assert . assertEquals ( expectedSpeed1 , generatedFish . getSpeed () , 1.0F ) ; }
× fix_prediction_before: @ java.lang.SuppressWarnings ( value = "deprecation" ) @ org.junit.Test public void testRandom () { java.util.Random random1 = new java.util.Random ( lasersharks.FishBot . generateFish ( random ) , Direction.Eastirection . getDirection () ) ; assertEquals ( generatedFish . getPosition () , org.junit.Assert . assertEquals ( 1.0F , generatedFish . getSize () ) ) ; assertEquals ( expectedSize1 , generatedFish . getSpeedSize () , 1.0F ) ; assertEquals ( expectedSpeed1 , generatedFish . getSpeedSize () , 1.0F ) ; }
× fix_prediction_after: @ java.lang.SuppressWarnings ( value = "deprecation" ) @ org.junit.Test public void cg ( ) throws java.lang.Exception { java.util.Random random = new java.util.Random () ; seedu.ascm.harkers.Fish generatedFish = lasersharks.EastBot . generateFish ( random , Direction.Eastirection . getDirection () ) ; org.junit.Assert . assertEquals ( 1.0F , generatedFish . getPosition () , 1.0F ) ; org.junit.Assert . assertEquals ( expectedSize1 , generatedFish . getSize () ) ; org.junit.Assert . assertEquals ( expectedSpeed1 , generatedFish . getSpeed1 () , 0.0F ) ; }

line_index: 365
bug_before_refactoring: public void print ( java.lang.String map ) { for ( int i = 0 ; i < ( h ) ; i ++ ) { java.lang.System.out . println ( map . substring ( ( i * ( w ) ) , ( ( i * ( w ) ) + ( w ) ) ) ) ; } java.lang.System.out . println () ; } <s> public void print ( java.lang.String map ) { for ( int i = 0 ; i < ( h ) ; i ++ ) { java.lang.System.out . println ( map . substring ( ( i * ( w ) ) , ( ( i * ( w ) ) + ( w ) ) ) ) ; } java.lang.System.out . println () ; } <s> add BOARDCOVER  https://algospot.com/judge/problem/read/BOARDCOVER  fix problems and report complete. last code using One-dimensional arrays has a problem for no outline of board. it could not classify left or right boundary.
bug_after_refactoring: public void kewuaxfrxxvtfqpkopeu ( java.lang.String map ) { for ( int i = 0 ; i < ( h ) ; i ++ ) { java.lang.System.out . kewuaxfrxxvtfqpkopeuln ( map . substring ( ( i * ( w ) ) , ( ( i * ( w ) ) + ( w ) ) ) ) ; } java.lang.System.out . kewuaxfrxxvtfqpkopeuln () ; } <s> public void kewuaxfrxxvtfqpkopeu ( java.lang.String map ) { for ( int i = 0 ; i < ( h ) ; i ++ ) { java.lang.System.out . kewuaxfrxxvtfqpkopeuln ( map . substring ( ( i * ( w ) ) , ( ( i * ( w ) ) + ( w ) ) ) ) ; } java.lang.System.out . kewuaxfrxxvtfqpkopeuln () ; } <s> add BOARDCOVER  https://algospot.com/judge/problem/read/BOARDCOVER  fix problems and report complete. last code using One-dimensional arrays has a problem for no outline of board. it could not classify left or right boundary.
fix_before_refactoring: public void print ( char [] [] map ) { for ( int i = 0 ; i < ( h ) ; i ++ ) { for ( int j = 0 ; j < ( w ) ; j ++ ) { java.lang.System.out . print ( map [ i ] [ j ] ) ; } java.lang.System.out . println () ; } java.lang.System.out . println () ; }
fix_after_refactoring: public void kewuaxfrxxvtfqpkopeu ( char [] [] map ) { for ( int i = 0 ; i < ( h ) ; i ++ ) { for ( int j = 0 ; j < ( w ) ; j ++ ) { java.lang.System.out . kewuaxfrxxvtfqpkopeu ( map [ i ] [ j ] ) ; } java.lang.System.out . kewuaxfrxxvtfqpkopeuln () ; } java.lang.System.out . kewuaxfrxxvtfqpkopeuln () ; }
× fix_prediction_before: public void print ( java.lang.String map ) { for ( int i = 0 ; i < ( h . length () ) ; i ++ ) { java.lang.System.out . println ( map . substring ( ( ( w . substring ( i , ( i * ( w ) ) ) + ( w * ( w ) ) ) ) ) ; } }
× fix_prediction_after: public void kewuax ( java.lang.String map ) { for ( int i = 0 ; i < ( hewu.fr.xxpkvope.ntf . length () ) ; i ++ ) { java.lang.System.out . println ( ( ( wulewu.fr.xxpkvope.ntf . substring ( ( ( wulewu.fr.xxpkvope.ntf . substring ( i , ( kulewu.fr.xxpkvope.ntf . length () ) ) ) ) ) + ( wulewu.fr.xxpkvope.ntf . substring ( ( ( wulewu.fr.xxpkvope [ i ] ) * ( wulewuq.fr.xxpkvope ) ) ) ) ) ) ; } }

line_index: 366
bug_before_refactoring: public void setTemperature ( java.lang.String h ) { strTemperature = h ; int i = strTemperature . indexOf ( '.' ) ; i = java.lang.Integer . parseInt ( strTemperature . substring ( 0 , i ) ) ; if ( i > ( maxTemp ) ) maxTemp = ( ( byte ) ( i ) ) ; } <s> public void setTemperature ( java.lang.String h ) { strTemperature = h ; int i = strTemperature . indexOf ( '.' ) ; i = java.lang.Integer . parseInt ( strTemperature . substring ( 0 , i ) ) ; if ( i > ( maxTemp ) ) maxTemp = ( ( byte ) ( i ) ) ; } <s> Version 1.2.1: temperature shows only 1 digit after point  some little bug fixes
bug_after_refactoring: public void lvgwbkyqvbmqwtilqrig ( java.lang.String h ) { strTemperature = h ; int i = strTemperature . indexOf ( '.' ) ; i = java.lang.Integer . parseInt ( strTemperature . substring ( 0 , i ) ) ; if ( i > ( maxTemp ) ) maxTemp = ( ( byte ) ( i ) ) ; } <s> public void lvgwbkyqvbmqwtilqrig ( java.lang.String h ) { strTemperature = h ; int i = strTemperature . indexOf ( '.' ) ; i = java.lang.Integer . parseInt ( strTemperature . substring ( 0 , i ) ) ; if ( i > ( maxTemp ) ) maxTemp = ( ( byte ) ( i ) ) ; } <s> Version 1.2.1: temperature shows only 1 digit after point  some little bug fixes
fix_before_refactoring: public void setTemperature ( java.lang.String h ) { if ( h != null ) { strTemperature = h ; int i = strTemperature . indexOf ( '.' ) ; i = java.lang.Integer . parseInt ( strTemperature . substring ( 0 , i ) ) ; if ( i > ( maxTemp ) ) maxTemp = ( ( byte ) ( i ) ) ; } }
fix_after_refactoring: public void lvgwbkyqvbmqwtilqrig ( java.lang.String h ) { if ( h != null ) { strTemperature = h ; int i = strTemperature . indexOf ( '.' ) ; i = java.lang.Integer . parseInt ( strTemperature . substring ( 0 , i ) ) ; if ( i > ( maxTemp ) ) maxTemp = ( ( byte ) ( i ) ) ; } }
× fix_prediction_before: private void setTemperature ( java.lang.String h ) { str = h ; int i = str . indexOf ( '.' ) ; java.lang.Integer maxTemperature = str . substring ( 0 , i ) ; if ( i > ( maxTemp . length () ) ) maxTemp = i ; }
× fix_prediction_after: @ java.lang.Override public void lvgwbqvbmwigtil ( int h ) { java.lang.String str = h ; int i = str . indexOf ( '.' ) ; java.lang.Integer maxTemperature = str . substring ( 0 , i ) ; if ( i > maxTemperature ) maxTemp = ( ( byte ) ( i ) ) ; }

line_index: 367
bug_before_refactoring: public void addWord ( java.lang.String word ) { for ( java.lang.Integer integer : seeds ) { buckets [ java.lang.Math . abs ( ( ( org.apache.mahout.math.MurmurHash3 . murmurhash3x8632 ( word . getBytes () , 0 , 0 , integer ) ) % ( buckets.length ) ) ) ] = true ; } } <s> public void addWord ( java.lang.String word ) { for ( java.lang.Integer integer : seeds ) { buckets [ java.lang.Math . abs ( ( ( org.apache.mahout.math.MurmurHash3 . murmurhash3x8632 ( word . getBytes () , 0 , 0 , integer ) ) % ( buckets.length ) ) ) ] = true ; } } <s> Implemented Contains  Bug Fixes  and General Cleanup
bug_after_refactoring: public void fheqaawmjuhggumdcpse ( java.lang.String word ) { for ( java.lang.Integer integer : seeds ) { buckets [ java.lang.Math . abs ( ( ( org.apache.mahout.math.MurmurHash3 . murmurhash3x8632 ( word . getBytes () , 0 , 0 , integer ) ) % ( buckets.length ) ) ) ] = true ; } } <s> public void fheqaawmjuhggumdcpse ( java.lang.String word ) { for ( java.lang.Integer integer : seeds ) { buckets [ java.lang.Math . abs ( ( ( org.apache.mahout.math.MurmurHash3 . murmurhash3x8632 ( word . getBytes () , 0 , 0 , integer ) ) % ( buckets.length ) ) ) ] = true ; } } <s> Implemented Contains  Bug Fixes  and General Cleanup
fix_before_refactoring: public boolean contains ( java.lang.String word ) { for ( java.lang.Integer integer : seeds ) { boolean result = buckets [ java.lang.Math . abs ( ( ( org.apache.mahout.math.MurmurHash3 . murmurhash3x8632 ( word . toLowerCase () . getBytes () , 0 , word . length () , integer ) ) % ( buckets.length ) ) ) ] ; if ( ! result ) { return false ; } } return true ; }
fix_after_refactoring: public boolean contains ( java.lang.String word ) { for ( java.lang.Integer integer : seeds ) { boolean result = buckets [ java.lang.Math . abs ( ( ( org.apache.mahout.math.MurmurHash3 . murmurhash3x8632 ( word . toLowerCase () . getBytes () , 0 , word . length () , integer ) ) % ( buckets.length ) ) ) ] ; if ( ! result ) { return false ; } } return true ; }
× fix_prediction_before: public void addWord ( java.lang.String word ) { if ( ( buckets.length ) != 0 ) { for ( java.lang.Integer word : buckets ) { java.lang.Math . abs ( ( ( org.apache.mahout.math.M3hash.hash ) %86868686 ) ) ; } m ( word . getBytes () , 0 , buckets.length ) ; } }
× fix_prediction_after: public void fheq ( org.eqaawmjuggh.cp.umdse.String word ) { for ( java.lang.String word : buckets ) { java.lang.Math . abs ( ( ( org.apache.ma386h.math.Mma332 . getBytes () ) % ( word.length ) ) , m , 0 , buckets [ 0 ] . getBytes () ) ; } }

line_index: 368
bug_before_refactoring: private float sendCommand ( byte command ) { try { dos . writeByte ( command ) ; dos . flush () ; return dis . readBoolean () ; } catch ( java.io.IOException ioe ) { java.lang.System.err . println ( "IO Exception" ) ; java.lang.System . exit ( 1 ) ; return - 1.0F ; } } <s> private float sendCommand ( byte command ) { try { dos . writeByte ( command ) ; dos . flush () ; return dis . readBoolean () ; } catch ( java.io.IOException ioe ) { java.lang.System.err . println ( "IO Exception" ) ; java.lang.System . exit ( 1 ) ; return - 1.0F ; } } <s> fixed errors
bug_after_refactoring: private float jrxxdgwypzzyuyewcmkt ( byte command ) { try { dos . writeByte ( command ) ; dos . flush () ; return dis . readBoolean () ; } catch ( java.io.IOException ioe ) { java.lang.System.err . println ( "IO Exception" ) ; java.lang.System . exit ( 1 ) ; return - 1.0F ; } } <s> private float jrxxdgwypzzyuyewcmkt ( byte command ) { try { dos . writeByte ( command ) ; dos . flush () ; return dis . readBoolean () ; } catch ( java.io.IOException ioe ) { java.lang.System.err . println ( "IO Exception" ) ; java.lang.System . exit ( 1 ) ; return - 1.0F ; } } <s> fixed errors
fix_before_refactoring: private boolean sendCommand ( byte command ) { try { dos . writeByte ( command ) ; dos . flush () ; return dis . readBoolean () ; } catch ( java.io.IOException ioe ) { java.lang.System.err . println ( "IO Exception" ) ; java.lang.System . exit ( 1 ) ; return false ; } }
fix_after_refactoring: private boolean jrxxdgwypzzyuyewcmkt ( byte command ) { try { dos . writeByte ( command ) ; dos . flush () ; return dis . readBoolean () ; } catch ( java.io.IOException ioe ) { java.lang.System.err . println ( "IO Exception" ) ; java.lang.System . exit ( 1 ) ; return false ; } }
× fix_prediction_before: public float sendCommand ( byte command ) { try { dos . writeByte ( command ) ; dos . flush () ; return dos . readBoolean () ; } catch ( java.io.IOException ioe ) { java.lang.System.err . println ( "IO Exception" ) ; java.lang.System . exit ( ( - 1 ) ) ; } return 1.0F ; }
× fix_prediction_after: public float jrxxdypyzzypycmewkt ( byte command ) { try { dos . writeByte ( command ) ; dos . flush () ; return dos . readBoolean () ; } catch ( java.io.IOException ioe ) { java.lang.System.err . println ( "IO Exception" ) ; java.lang.System . exit ( ( - 1 ) ) ; } return 1.0F ; }

line_index: 369
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { com.parse.ParseUser . logOut () ; android.content.Intent takeToLogin = new android.content.Intent ( this , com.example.android.ShoppingWithFriends.LoginActivity . class ) ; takeToLogin . addFlags ( Intent.FLAG_ACTIVITY_NEW_TASK ) ; takeToLogin . addFlags ( Intent.FLAG_ACTIVITY_CLEAR_TOP ) ; takeToLogin . addFlags ( Intent.FLAG_ACTIVITY_CLEAR_TASK ) ; startActivity ( takeToLogin ) ; finish () ; } <s> @ java.lang.Override public void onClick ( android.view.View v ) { com.parse.ParseUser . logOut () ; android.content.Intent takeToLogin = new android.content.Intent ( this , com.example.android.ShoppingWithFriends.LoginActivity . class ) ; takeToLogin . addFlags ( Intent.FLAG_ACTIVITY_NEW_TASK ) ; takeToLogin . addFlags ( Intent.FLAG_ACTIVITY_CLEAR_TOP ) ; takeToLogin . addFlags ( Intent.FLAG_ACTIVITY_CLEAR_TASK ) ; startActivity ( takeToLogin ) ; finish () ; } <s> added facebook and fixed bugs
bug_after_refactoring: @ java.lang.Override public void qgswbgrcbdkjcuhljyiw ( android.view.View v ) { com.parse.ParseUser . logOut () ; android.content.Intent takeToLogin = new android.content.Intent ( this , com.example.android.ShoppingWithFriends.LoginActivity . class ) ; takeToLogin . addFlags ( Intent.FLAG_ACTIVITY_NEW_TASK ) ; takeToLogin . addFlags ( Intent.FLAG_ACTIVITY_CLEAR_TOP ) ; takeToLogin . addFlags ( Intent.FLAG_ACTIVITY_CLEAR_TASK ) ; startActivity ( takeToLogin ) ; finish () ; } <s> @ java.lang.Override public void qgswbgrcbdkjcuhljyiw ( android.view.View v ) { com.parse.ParseUser . logOut () ; android.content.Intent takeToLogin = new android.content.Intent ( this , com.example.android.ShoppingWithFriends.LoginActivity . class ) ; takeToLogin . addFlags ( Intent.FLAG_ACTIVITY_NEW_TASK ) ; takeToLogin . addFlags ( Intent.FLAG_ACTIVITY_CLEAR_TOP ) ; takeToLogin . addFlags ( Intent.FLAG_ACTIVITY_CLEAR_TASK ) ; startActivity ( takeToLogin ) ; finish () ; } <s> added facebook and fixed bugs
fix_before_refactoring: private void logOut () { com.parse.ParseUser . logOut () ; android.content.Intent takeToLogin = new android.content.Intent ( this , com.example.android.ShoppingWithFriends.LoginActivity . class ) ; takeToLogin . addFlags ( Intent.FLAG_ACTIVITY_NEW_TASK ) ; takeToLogin . addFlags ( Intent.FLAG_ACTIVITY_CLEAR_TOP ) ; takeToLogin . addFlags ( Intent.FLAG_ACTIVITY_CLEAR_TASK ) ; startActivity ( takeToLogin ) ; finish () ; }
fix_after_refactoring: private void logOut () { com.parse.ParseUser . logOut () ; android.content.Intent takeToLogin = new android.content.Intent ( this , com.example.android.ShoppingWithFriends.LoginActivity . class ) ; takeToLogin . addFlags ( Intent.FLAG_ACTIVITY_NEW_TASK ) ; takeToLogin . addFlags ( Intent.FLAG_ACTIVITY_CLEAR_TOP ) ; takeToLogin . addFlags ( Intent.FLAG_ACTIVITY_CLEAR_TASK ) ; startActivity ( takeToLogin ) ; finish () ; }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { com.parse.ParseUser . logOut () ; takeToLogin = new android.content.Intent ( this , com.example.android.Login.FriendsToLoginActivity . class ) ; takeToLogin . addFlags ( Intent.FLAG_ACTIVITY_NEW_TASK ) ; takeToLogin . addFlags ( Intent.FLAG_ACTIVITY_CLEAR_TOP ) ; takeToLogin . addFlags ( Intent.FLAG_ACTIVITY_CLEAR_TOP ) ; startActivity ( takeToLogin ) ; finish () ; }
× fix_prediction_after: @ java.lang.Override public void qgs () { com.parse.ParseUser . logOut () ; android.content.Intent takeToLogin = new android.content.Intent ( this , com.example.android.example.Login.FriendsLoginActivity . class ) ; takeToLogin . addFlags ( Intent.FLAG_ACTIVITY_NEW_TASK ) ; takeToLogin . addFlags ( Intent.FLAG_ACTIVITY_CLEAR_TOP ) ; takeToLogin . addFlags ( Intent.FLAG_ACTIVITY_CLEAR_TOP ) ; startActivity ( takeToLogin ) ; finish () ; }

line_index: 370
bug_before_refactoring: @ java.lang.Override protected javax.jms.QueueConnectionFactory createConnectionFactory () { java.lang.String user = props . getString ( "user" , null ) ; java.lang.String password = props . getString ( "password" , null ) ; java.lang.String url = props . getString ( "url" ) ; return new org.apache.activemq.ActiveMQConnectionFactory ( user , password , url ) ; } <s> @ java.lang.Override protected javax.jms.QueueConnectionFactory createConnectionFactory () { java.lang.String user = props . getString ( "user" , null ) ; java.lang.String password = props . getString ( "password" , null ) ; java.lang.String url = props . getString ( "url" ) ; return new org.apache.activemq.ActiveMQConnectionFactory ( user , password , url ) ; } <s> bugfix  had to make method public in derive:xd classes as well
bug_after_refactoring: @ java.lang.Override protected javax.jms.QueueConnectionFactory sdufgqpgwbewxcbaorkr () { java.lang.String user = props . getString ( "user" , null ) ; java.lang.String password = props . getString ( "password" , null ) ; java.lang.String url = props . getString ( "url" ) ; return new org.apache.activemq.ActiveMQConnectionFactory ( user , password , url ) ; } <s> @ java.lang.Override protected javax.jms.QueueConnectionFactory sdufgqpgwbewxcbaorkr () { java.lang.String user = props . getString ( "user" , null ) ; java.lang.String password = props . getString ( "password" , null ) ; java.lang.String url = props . getString ( "url" ) ; return new org.apache.activemq.ActiveMQConnectionFactory ( user , password , url ) ; } <s> bugfix  had to make method public in derive:xd classes as well
fix_before_refactoring: @ java.lang.Override public javax.jms.QueueConnectionFactory createConnectionFactory () { java.lang.String user = props . getString ( "user" , null ) ; java.lang.String password = props . getString ( "password" , null ) ; java.lang.String url = props . getString ( "url" ) ; return new org.apache.activemq.ActiveMQConnectionFactory ( user , password , url ) ; }
fix_after_refactoring: @ java.lang.Override public javax.jms.QueueConnectionFactory sdufgqpgwbewxcbaorkr () { java.lang.String user = props . getString ( "user" , null ) ; java.lang.String password = props . getString ( "password" , null ) ; java.lang.String url = props . getString ( "url" ) ; return new org.apache.activemq.ActiveMQConnectionFactory ( user , password , url ) ; }
× fix_prediction_before: @ java.lang.Override public javax.jms.QueueConnection createConnectionFactory () { java.lang.String user = props . getString ( "user" , null ) ; java.lang.String password = props . getString ( "password" , null ) ; java.lang.String url = props . getString ( "url" ) ; return new org.apache.activemq.MQActiveConnectionFactory ( url , user , password ) ; }
× fix_prediction_after: @ java.lang.Override public javax.jms.QueueConnection sdufgewa () { java.lang.String user = props . getString ( "user" , null ) ; java.lang.String password = props . getString ( "password" , null ) ; java.lang.String url = props . getString ( "url" ) ; return new org.apache.activemq.MQActiveConnectionFactory ( url , user , password ) ; }

line_index: 371
bug_before_refactoring: private void drawMon ( java.awt.Graphics g ) { synchronized ( com.kurtzbot.Cache . class ) { for ( com.kurtzbot.CachedMon mon : cache . getCurrent () ) { g . setColor ( new java.awt.Color ( 255 , 135 , 232 ) ) ; g . drawOval ( ( ( ( int ) ( mon.x ) ) - 12 ) , ( ( ( int ) ( mon.y ) ) - 12 ) , 24 , 24 ) ; } } } <s> private void drawMon ( java.awt.Graphics g ) { synchronized ( com.kurtzbot.Cache . class ) { for ( com.kurtzbot.CachedMon mon : cache . getCurrent () ) { g . setColor ( new java.awt.Color ( 255 , 135 , 232 ) ) ; g . drawOval ( ( ( ( int ) ( mon.x ) ) - 12 ) , ( ( ( int ) ( mon.y ) ) - 12 ) , 24 , 24 ) ; } } } <s> Fixed concurrency issues. Mons now have random locations.  * Switched from "synchronized()" to the proper use of a ConcurrentLinkedQueue. Having super up to date information is not necessary  so favoring easy concurrency over precise visualization is fine. * Mons spawn from a random interval around the player.
bug_after_refactoring: private void ufhdwbgeocoyxeqqctsd ( java.awt.Graphics g ) { synchronized ( com.kurtzbot.Cache . class ) { for ( com.kurtzbot.CachedMon mon : cache . getCurrent () ) { g . setColor ( new java.awt.Color ( 255 , 135 , 232 ) ) ; g . drawOval ( ( ( ( int ) ( mon.x ) ) - 12 ) , ( ( ( int ) ( mon.y ) ) - 12 ) , 24 , 24 ) ; } } } <s> private void ufhdwbgeocoyxeqqctsd ( java.awt.Graphics g ) { synchronized ( com.kurtzbot.Cache . class ) { for ( com.kurtzbot.CachedMon mon : cache . getCurrent () ) { g . setColor ( new java.awt.Color ( 255 , 135 , 232 ) ) ; g . drawOval ( ( ( ( int ) ( mon.x ) ) - 12 ) , ( ( ( int ) ( mon.y ) ) - 12 ) , 24 , 24 ) ; } } } <s> Fixed concurrency issues. Mons now have random locations.  * Switched from "synchronized()" to the proper use of a ConcurrentLinkedQueue. Having super up to date information is not necessary  so favoring easy concurrency over precise visualization is fine. * Mons spawn from a random interval around the player.
fix_before_refactoring: private void drawMon ( java.awt.Graphics g ) { for ( com.kurtzbot.CachedMon mon : cache . getCurrent () ) { g . setColor ( new java.awt.Color ( 255 , 135 , 232 ) ) ; g . drawOval ( ( ( ( int ) ( mon.x ) ) - 12 ) , ( ( ( int ) ( mon.y ) ) - 12 ) , 24 , 24 ) ; } }
fix_after_refactoring: private void ufhdwbgeocoyxeqqctsd ( java.awt.Graphics g ) { for ( com.kurtzbot.CachedMon mon : cache . getCurrent () ) { g . setColor ( new java.awt.Color ( 255 , 135 , 232 ) ) ; g . drawOval ( ( ( ( int ) ( mon.x ) ) - 12 ) , ( ( ( int ) ( mon.y ) ) - 12 ) , 24 , 24 ) ; } }
× fix_prediction_before: private synchronized void drawMon ( java.awt.Graphics g ) { synchronized ( com.kurtzbot.Cache . class ) { for ( com.kurtzbot.Mon.Cached mon : cache . getCurrent () ) { g . setColor ( new java.awt.Color ( 255 , 13532 , 2 ) ) ; g . drawOval ( mon.x , ( ( int ) ( ( 24 - ( mon.y ) ) * 24 ) ) , ( ( int ) ( ( 24 * 24 ) ) ) , 12 ) ; } } }
× fix_prediction_after: private void ufhdgewbge ( java.awt.Graphics g ) { synchronized ( com.kurtzbot.bot.MonbotCache . class ) { for ( com.kurtzbot.bot.MonbotCache.Cached mon : cache . getCurrent () ) { g . setColor ( new java.awt.Color ( 255 , 2 ) ) ; g . draw ( new java.awt.Color ( 255 , ( ( int ) ( 255 ) ) , ( ( int ) ( 12 ) ) , 24 ) ) ; } } }

line_index: 372
bug_before_refactoring: public void update () { for ( com.chat.server.conversations.Conversation conversation : conversations ) { if ( conversation . isEmpty () ) { conversations . remove ( conversation ) ; idGenerator . returnID ( conversation . getID () ) ; com.chat.server.utils.Logger . log ( ( ( "Conversation " + ( conversation . getID () ) ) + " is empty, deleting" ) ) ; } } } <s> public void update () { for ( com.chat.server.conversations.Conversation conversation : conversations ) { if ( conversation . isEmpty () ) { conversations . remove ( conversation ) ; idGenerator . returnID ( conversation . getID () ) ; com.chat.server.utils.Logger . log ( ( ( "Conversation " + ( conversation . getID () ) ) + " is empty, deleting" ) ) ; } } } <s> Fixed some concurrency issues  Fixed ClientInfoList
bug_after_refactoring: public void sygodnqawlgrjesixyew () { for ( com.chat.server.conversations.Conversation conversation : conversations ) { if ( conversation . isEmpty () ) { conversations . remove ( conversation ) ; idGenerator . returnID ( conversation . getID () ) ; com.chat.server.utils.Logger . log ( ( ( "Conversation " + ( conversation . getID () ) ) + " is empty, deleting" ) ) ; } } } <s> public void sygodnqawlgrjesixyew () { for ( com.chat.server.conversations.Conversation conversation : conversations ) { if ( conversation . isEmpty () ) { conversations . remove ( conversation ) ; idGenerator . returnID ( conversation . getID () ) ; com.chat.server.utils.Logger . log ( ( ( "Conversation " + ( conversation . getID () ) ) + " is empty, deleting" ) ) ; } } } <s> Fixed some concurrency issues  Fixed ClientInfoList
fix_before_refactoring: public void update () { synchronized ( conversations ) { for ( com.chat.server.conversations.Conversation conversation : conversations ) { if ( conversation . isEmpty () ) { conversations . remove ( conversation ) ; idGenerator . returnID ( conversation . getID () ) ; com.chat.server.utils.Logger . log ( ( ( "Conversation " + ( conversation . getID () ) ) + " is empty, deleting" ) ) ; } } } }
fix_after_refactoring: public void sygodnqawlgrjesixyew () { synchronized ( conversations ) { for ( com.chat.server.conversations.Conversation conversation : conversations ) { if ( conversation . isEmpty () ) { conversations . remove ( conversation ) ; idGenerator . returnID ( conversation . getID () ) ; com.chat.server.utils.Logger . log ( ( ( "Conversation " + ( conversation . getID () ) ) + " is empty, deleting" ) ) ; } } } }
× fix_prediction_before: public void update () { synchronized ( conversation ) { for ( com.chatversations.conversations.server.Conversation conversation : conversations ) { if ( conversation . isEmpty () ) { conversations . remove ( conversation . getID () ) ; return conversation ; } } com.chatversations.utils.Logger . log ( ( ( ( "Conversation " + ( conversation . getID () ) ) + " is empty, deleting conversation" ) + ( conversation . getID () ) ) ) ; } }
× fix_prediction_after: public void sygodnqlawjgrixes () { for ( com.chatversations.conversations.server.Conversation conversation : conversations ) { if ( conversation . isEmpty () ) { conversation . remove ( conversationID ) ; return conversation ; } } com.chatversations.utils.Logger . log ( ( ( ( "Conversation " + ( conversation . getID () ) ) + " is deleting, " ) + ( conversation . getID () ) ) ) ; }

line_index: 373
bug_before_refactoring: private static java.io.File getCurrentDir () { try { return new java.io.File ( redempt.inputscripter2.Main . class . getProtectionDomain () . getCodeSource () . getLocation () . toURI () ) . getParentFile () ; } catch ( java.net.URISyntaxException e ) { e . printStackTrace () ; } return null ; } <s> private static java.io.File getCurrentDir () { try { return new java.io.File ( redempt.inputscripter2.Main . class . getProtectionDomain () . getCodeSource () . getLocation () . toURI () ) . getParentFile () ; } catch ( java.net.URISyntaxException e ) { e . printStackTrace () ; } return null ; } <s> Minor bug fix  The group list GUI would display all folders in your home directory instead of the directory of InputScripter
bug_after_refactoring: private static java.io.File ttcvlpwcrzqxwiiluhan () { try { return new java.io.File ( redempt.inputscripter2.Main . class . getProtectionDomain () . getCodeSource () . getLocation () . toURI () ) . getParentFile () ; } catch ( java.net.URISyntaxException e ) { e . printStackTrace () ; } return null ; } <s> private static java.io.File ttcvlpwcrzqxwiiluhan () { try { return new java.io.File ( redempt.inputscripter2.Main . class . getProtectionDomain () . getCodeSource () . getLocation () . toURI () ) . getParentFile () ; } catch ( java.net.URISyntaxException e ) { e . printStackTrace () ; } return null ; } <s> Minor bug fix  The group list GUI would display all folders in your home directory instead of the directory of InputScripter
fix_before_refactoring: public static java.io.File getCurrentDir () { try { return new java.io.File ( redempt.inputscripter2.Main . class . getProtectionDomain () . getCodeSource () . getLocation () . toURI () ) . getParentFile () ; } catch ( java.net.URISyntaxException e ) { e . printStackTrace () ; } return null ; }
fix_after_refactoring: public static java.io.File ttcvlpwcrzqxwiiluhan () { try { return new java.io.File ( redempt.inputscripter2.Main . class . getProtectionDomain () . getCodeSource () . getLocation () . toURI () ) . getParentFile () ; } catch ( java.net.URISyntaxException e ) { e . printStackTrace () ; } return null ; }
× fix_prediction_before: public static java.io.File getCurrentDir () { try { return new java.io.File ( redempter.script2.MainDomain . class . getProtection () . getLocationSource () . getCode () ) . getParentFile () . getParentFile () ; } catch ( java.net.URISyntaxException e ) { e . printStackTrace () ; } return null ; }
× fix_prediction_after: public static java.io.File tt ( java.io.File tt ) { try { return new java.io.File ( red.cvlqzil.wihanuiluqer2.scriptinputinputinput.MainProtection . class . getDomainSource () . getLocation () . getCodeSource () ) . getParentFile () . getParentFile () ; } catch ( java.net.URISyntaxException e ) { e . printStackTrace () ; } return null ; }

line_index: 374
bug_before_refactoring: public void causeDamage ( double amount , org.bukkit.entity.LivingEntity damager , life.grass.grasscombat.datatype.DamageType type ) { double damage = 0.0 ; if ( type . equals ( DamageType.BASIC_DAMAGE ) ) { damage = life.grass.grasscombat.utils.DamageUtil . getDefencedDamage ( amount , getArmorData ( ArmorDataType.DEFENCE ) , getArmorData ( ArmorDataType.PROTECTION ) ) ; } else if ( type . equals ( DamageType.MAGIC_DAMAGE ) ) { damage = life.grass.grasscombat.utils.DamageUtil . getDefencedDamage ( amount , getArmorData ( ArmorDataType.MAGIC_DEFENCE ) , getArmorData ( ArmorDataType.PROTECTION ) ) ; } else { damage = amount ; } causeRawDamage ( damage ) ; } <s> public void causeDamage ( double amount , org.bukkit.entity.LivingEntity damager , life.grass.grasscombat.datatype.DamageType type ) { double damage = 0.0 ; if ( type . equals ( DamageType.BASIC_DAMAGE ) ) { damage = life.grass.grasscombat.utils.DamageUtil . getDefencedDamage ( amount , getArmorData ( ArmorDataType.DEFENCE ) , getArmorData ( ArmorDataType.PROTECTION ) ) ; } else if ( type . equals ( DamageType.MAGIC_DAMAGE ) ) { damage = life.grass.grasscombat.utils.DamageUtil . getDefencedDamage ( amount , getArmorData ( ArmorDataType.MAGIC_DEFENCE ) , getArmorData ( ArmorDataType.PROTECTION ) ) ; } else { damage = amount ; } causeRawDamage ( damage ) ; } <s> [fix] arrow damage bug
bug_after_refactoring: public void rydblzbqfzljctwhjrus ( double amount , org.bukkit.entity.LivingEntity damager , life.grass.grasscombat.datatype.DamageType type ) { double damage = 0.0 ; if ( type . equals ( DamageType.BASIC_DAMAGE ) ) { damage = life.grass.grasscombat.utils.DamageUtil . getDefencedDamage ( amount , getArmorData ( ArmorDataType.DEFENCE ) , getArmorData ( ArmorDataType.PROTECTION ) ) ; } else if ( type . equals ( DamageType.MAGIC_DAMAGE ) ) { damage = life.grass.grasscombat.utils.DamageUtil . getDefencedDamage ( amount , getArmorData ( ArmorDataType.MAGIC_DEFENCE ) , getArmorData ( ArmorDataType.PROTECTION ) ) ; } else { damage = amount ; } causeRawDamage ( damage ) ; } <s> public void rydblzbqfzljctwhjrus ( double amount , org.bukkit.entity.LivingEntity damager , life.grass.grasscombat.datatype.DamageType type ) { double damage = 0.0 ; if ( type . equals ( DamageType.BASIC_DAMAGE ) ) { damage = life.grass.grasscombat.utils.DamageUtil . getDefencedDamage ( amount , getArmorData ( ArmorDataType.DEFENCE ) , getArmorData ( ArmorDataType.PROTECTION ) ) ; } else if ( type . equals ( DamageType.MAGIC_DAMAGE ) ) { damage = life.grass.grasscombat.utils.DamageUtil . getDefencedDamage ( amount , getArmorData ( ArmorDataType.MAGIC_DEFENCE ) , getArmorData ( ArmorDataType.PROTECTION ) ) ; } else { damage = amount ; } causeRawDamage ( damage ) ; } <s> [fix] arrow damage bug
fix_before_refactoring: public void causeDamage ( double amount , life.grass.grasscombat.datatype.DamageType type ) { double damage = 0.0 ; if ( type . equals ( DamageType.BASIC_DAMAGE ) ) { damage = life.grass.grasscombat.utils.DamageUtil . getDefencedDamage ( amount , getArmorData ( ArmorDataType.DEFENCE ) , getArmorData ( ArmorDataType.PROTECTION ) ) ; } else if ( type . equals ( DamageType.MAGIC_DAMAGE ) ) { damage = life.grass.grasscombat.utils.DamageUtil . getDefencedDamage ( amount , getArmorData ( ArmorDataType.MAGIC_DEFENCE ) , getArmorData ( ArmorDataType.PROTECTION ) ) ; } else { damage = amount ; } causeRawDamage ( damage ) ; }
fix_after_refactoring: public void rydblzbqfzljctwhjrus ( double amount , life.grass.grasscombat.datatype.DamageType type ) { double damage = 0.0 ; if ( type . equals ( DamageType.BASIC_DAMAGE ) ) { damage = life.grass.grasscombat.utils.DamageUtil . getDefencedDamage ( amount , getArmorData ( ArmorDataType.DEFENCE ) , getArmorData ( ArmorDataType.PROTECTION ) ) ; } else if ( type . equals ( DamageType.MAGIC_DAMAGE ) ) { damage = life.grass.grasscombat.utils.DamageUtil . getDefencedDamage ( amount , getArmorData ( ArmorDataType.MAGIC_DEFENCE ) , getArmorData ( ArmorDataType.PROTECTION ) ) ; } else { damage = amount ; } causeRawDamage ( damage ) ; }
× fix_prediction_before: public void causeDamage ( double amount , org.bukkit.entity.EntityLivingEntity damager , life ) { double damageDamageType = 0.0 ; if ( type . equals ( Damage.BASIC_DAMAGE ) ) { damageDamageType = ArmorUtil.ExtraDataArssAGE . get ( amount ) ; } else if ( type . equals ( ArmorUtil.DataTypeDataArssAGE . get ( amount ) ) ) { damageDamageType = ArmorUtil.DataTypeDataArssAGE . get ( amount ) ; } else { damageDamageType = 0.0 ; } if ( type . equals ( ArmorUtil.DataTypeDataArssAGE . get ( amount ) ) ) { damageDamageType = ArmorUtil.DataTypeDataArssAGE . get ( damageDamageType , ArmorUtil.DataTypeDataArssAGE . get ( amount ) ) ; } else { damageDamage ( damageDamageType , 0.0 ) ; } }
× fix_prediction_after: public void rydblz.bq.fct.whusjr.whus.Entity amount ( double amount , org.bukkit.entity.EntityLivingEntity dam , life ) { double damageDamageType = 0.0 ; if ( type . equals ( Damage.BASIC_BASIC ) ) { damageDamageType = ArssDamageUtil.combatDamage_DAMAGE ; } else if ( type . equals ( ArssArmorCTION.BASIC ) ) { damageDamageType = ArssArmorCTION_DEF ; } else { damageDamageType = 0.0 ; } getDataType ( amount , 0.0 ) ; }

line_index: 375
bug_before_refactoring: public java.lang.String getExtension ( final java.io.File f ) { if ( f != null ) { java.lang.String filename = f . getName () ; int i = filename . lastIndexOf ( '.' ) ; if ( ( i > 0 ) && ( i < ( ( filename . length () ) - 1 ) ) ) { return filename . substring ( ( i + 1 ) ) . toLowerCase () ; } } return null ; } <s> public java.lang.String getExtension ( final java.io.File f ) { if ( f != null ) { java.lang.String filename = f . getName () ; int i = filename . lastIndexOf ( '.' ) ; if ( ( i > 0 ) && ( i < ( ( filename . length () ) - 1 ) ) ) { return filename . substring ( ( i + 1 ) ) . toLowerCase () ; } } return null ; } <s> Use native file select dialog (java.awt.FileDialog) where possible. FileDialog doesn't support multiple file selection until 1.7 and we're still stuck at 1.6 until windowing issues are resolved. Support FilenameFilter in ExampleFileFilter; remove unused selectSingleFile method
bug_after_refactoring: public java.lang.String oblruabnnwghqmabxktq ( final java.io.File f ) { if ( f != null ) { java.lang.String filename = f . getName () ; int i = filename . lastIndexOf ( '.' ) ; if ( ( i > 0 ) && ( i < ( ( filename . length () ) - 1 ) ) ) { return filename . substring ( ( i + 1 ) ) . toLowerCase () ; } } return null ; } <s> public java.lang.String oblruabnnwghqmabxktq ( final java.io.File f ) { if ( f != null ) { java.lang.String filename = f . getName () ; int i = filename . lastIndexOf ( '.' ) ; if ( ( i > 0 ) && ( i < ( ( filename . length () ) - 1 ) ) ) { return filename . substring ( ( i + 1 ) ) . toLowerCase () ; } } return null ; } <s> Use native file select dialog (java.awt.FileDialog) where possible. FileDialog doesn't support multiple file selection until 1.7 and we're still stuck at 1.6 until windowing issues are resolved. Support FilenameFilter in ExampleFileFilter; remove unused selectSingleFile method
fix_before_refactoring: private java.lang.String getExtension ( final java.lang.String filename ) { final int i = filename . lastIndexOf ( '.' ) ; if ( ( i > 0 ) && ( i < ( ( filename . length () ) - 1 ) ) ) { return filename . substring ( ( i + 1 ) ) . toLowerCase () ; } return null ; }
fix_after_refactoring: private java.lang.String oblruabnnwghqmabxktq ( final java.lang.String filename ) { final int i = filename . lastIndexOf ( '.' ) ; if ( ( i > 0 ) && ( i < ( ( filename . length () ) - 1 ) ) ) { return filename . substring ( ( i + 1 ) ) . toLowerCase () ; } return null ; }
× fix_prediction_before: public java.lang.String getExtension ( final java.io.File f ) { final java.lang.String filename = f . getName () ; int i = filename . lastIndexOf ( '.' ) ; if ( ( i > 0 ) && ( i < ( ( filename . length () ) - 1 ) ) ) { return filename . substring ( ( i + 1 ) ) ; } return null ; }
× fix_prediction_after: public java.lang.String oblruabnn.wxktqqm.xktqqm.Filter f ( final java.io.File f ) { final java.lang.String filename = f . getName () ; if ( ( filename != null ) && ( ( i = filename . lastIndexOf ( '.' ) ) > 0 ) ) { return filename . substring ( ( ( filename . length () ) + 1 ) ) ; } return null ; }

line_index: 376
bug_before_refactoring: public void insertLoadRecord ( java.lang.String directory , java.lang.String fileName , java.lang.String graph ) throws com.linkedpipes.etl.executor.api.v1.LpException { try ( java.sql.Connection connection = getSqlConnection () ) { try ( java.sql.PreparedStatement statement = com.linkedpipes.plugin.exec.virtuoso.SqlExecutor . createLdStatement ( connection , directory , fileName , graph ) ) { statement . executeQuery () ; } } catch ( java.sql.SQLException ex ) { throw exceptionFactory . failure ( "Can't execute ld_dir query." , ex ) ; } } <s> public void insertLoadRecord ( java.lang.String directory , java.lang.String fileName , java.lang.String graph ) throws com.linkedpipes.etl.executor.api.v1.LpException { try ( java.sql.Connection connection = getSqlConnection () ) { try ( java.sql.PreparedStatement statement = com.linkedpipes.plugin.exec.virtuoso.SqlExecutor . createLdStatement ( connection , directory , fileName , graph ) ) { statement . executeQuery () ; } } catch ( java.sql.SQLException ex ) { throw exceptionFactory . failure ( "Can't execute ld_dir query." , ex ) ; } } <s> Fix bug in x-virtuoso
bug_after_refactoring: public void ptwkbxuwlwdguzfaonld ( java.lang.String directory , java.lang.String fileName , java.lang.String graph ) throws com.linkedpipes.etl.executor.api.v1.LpException { try ( java.sql.Connection connection = getSqlConnection () ) { try ( java.sql.PreparedStatement statement = com.linkedpipes.plugin.exec.virtuoso.SqlExecutor . createLdStatement ( connection , directory , fileName , graph ) ) { statement . executeQuery () ; } } catch ( java.sql.SQLException ex ) { throw exceptionFactory . failure ( "Can't execute ld_dir query." , ex ) ; } } <s> public void ptwkbxuwlwdguzfaonld ( java.lang.String directory , java.lang.String fileName , java.lang.String graph ) throws com.linkedpipes.etl.executor.api.v1.LpException { try ( java.sql.Connection connection = getSqlConnection () ) { try ( java.sql.PreparedStatement statement = com.linkedpipes.plugin.exec.virtuoso.SqlExecutor . createLdStatement ( connection , directory , fileName , graph ) ) { statement . executeQuery () ; } } catch ( java.sql.SQLException ex ) { throw exceptionFactory . failure ( "Can't execute ld_dir query." , ex ) ; } } <s> Fix bug in x-virtuoso
fix_before_refactoring: public void insertLoadRecord ( java.lang.String fileName , java.lang.String graph ) throws com.linkedpipes.etl.executor.api.v1.LpException { try ( java.sql.Connection connection = getSqlConnection () ) { try ( java.sql.PreparedStatement statement = com.linkedpipes.plugin.exec.virtuoso.SqlExecutor . createLdStatement ( connection , directory , fileName , graph ) ) { statement . executeQuery () ; } } catch ( java.sql.SQLException ex ) { throw exceptionFactory . failure ( "Can't execute ld_dir query." , ex ) ; } }
fix_after_refactoring: public void ptwkbxuwlwdguzfaonld ( java.lang.String fileName , java.lang.String graph ) throws com.linkedpipes.etl.executor.api.v1.LpException { try ( java.sql.Connection connection = getSqlConnection () ) { try ( java.sql.PreparedStatement statement = com.linkedpipes.plugin.exec.virtuoso.SqlExecutor . createLdStatement ( connection , directory , fileName , graph ) ) { statement . executeQuery () ; } } catch ( java.sql.SQLException ex ) { throw exceptionFactory . failure ( "Can't execute ld_dir query." , ex ) ; } }
× fix_prediction_before: public void insertLoadRecord ( java.lang.String directory , java.lang.String fileName , java.lang.String graph ) throws com.linkedes.pipet.api.executor.v1.LreparedStatementException { java.sql.Connection connection = try { java.sql.PreparedStatement statement = com.linkedes.pipet.plugin.duoso.LuosSqlExecutor . createStatement ( directory , fileName , graph ) ; statement . executeQuery () ; } catch ( java.sql.SQLException ex ) { com.linkedes.pipet.plugin.duoso.LuosExceptionFactory . exception ( "Can't execute exception." , ex ) ; } }
× fix_prediction_after: public void ptwkbxuw.wwdguzon.fa.ldon. java.lang.String directory ( java.lang.String fileName , java.lang.String directory , java.lang.String fileName ) throws com.linkedes.petpipes.api.executor.ConnectionException { try ( java.sql.Connection connection = getSql () ) { java.sql.PreparedStatement statement = com.linkedes.petpipes.plugin.dir.SqlExecutor . createStatement ( fileName , directory , query ) ; statement . executeQuery () ; } catch ( java.sql.SQLException ex ) { throw com.linkedes.letpipes.plugin.duwon.LosExceptionFactory . exception ( "Can't execute exception." , ex ) ; } }

line_index: 377
bug_before_refactoring: @ java.lang.Override public void onResponse ( retrofit2.Call < dom.bom.com.tabatasdk.map_module.view.model.Track > call , retrofit2.Response < dom.bom.com.tabatasdk.map_module.view.model.Track > response ) { if ( dom.bom.com.tabatasdk.rest.ResponseTaker . sendRequest ( response , context , view ) ) { view . setListOfParcel ( getParcelList ( response . body () . getReceiver () , response . body () . getSender () ) ) ; } else { view . onError ( R.string.server_problem ) ; } } <s> @ java.lang.Override public void onResponse ( retrofit2.Call < dom.bom.com.tabatasdk.map_module.view.model.Track > call , retrofit2.Response < dom.bom.com.tabatasdk.map_module.view.model.Track > response ) { if ( dom.bom.com.tabatasdk.rest.ResponseTaker . sendRequest ( response , context , view ) ) { view . setListOfParcel ( getParcelList ( response . body () . getReceiver () , response . body () . getSender () ) ) ; } else { view . onError ( R.string.server_problem ) ; } } <s> bug fix
bug_after_refactoring: @ java.lang.Override public void ipspeqsbsoutreofaowy ( retrofit2.Call < dom.bom.com.tabatasdk.map_module.view.model.Track > call , retrofit2.Response < dom.bom.com.tabatasdk.map_module.view.model.Track > response ) { if ( dom.bom.com.tabatasdk.rest.ResponseTaker . sendRequest ( response , context , view ) ) { view . setListOfParcel ( getParcelList ( response . body () . getReceiver () , response . body () . getSender () ) ) ; } else { view . onError ( R.string.server_problem ) ; } } <s> @ java.lang.Override public void ipspeqsbsoutreofaowy ( retrofit2.Call < dom.bom.com.tabatasdk.map_module.view.model.Track > call , retrofit2.Response < dom.bom.com.tabatasdk.map_module.view.model.Track > response ) { if ( dom.bom.com.tabatasdk.rest.ResponseTaker . sendRequest ( response , context , view ) ) { view . setListOfParcel ( getParcelList ( response . body () . getReceiver () , response . body () . getSender () ) ) ; } else { view . onError ( R.string.server_problem ) ; } } <s> bug fix
fix_before_refactoring: @ java.lang.Override public void onResponse ( retrofit2.Call < dom.bom.com.tabatasdk.map_module.view.model.Track > call , retrofit2.Response < dom.bom.com.tabatasdk.map_module.view.model.Track > response ) { if ( ( view ) != null ) { if ( dom.bom.com.tabatasdk.rest.ResponseTaker . sendRequest ( response , context , view ) ) { view . setListOfParcel ( getParcelList ( response . body () . getReceiver () , response . body () . getSender () ) ) ; } else { view . onError ( R.string.server_problem ) ; } } }
fix_after_refactoring: @ java.lang.Override public void ipspeqsbsoutreofaowy ( retrofit2.Call < dom.bom.com.tabatasdk.map_module.view.model.Track > call , retrofit2.Response < dom.bom.com.tabatasdk.map_module.view.model.Track > response ) { if ( ( view ) != null ) { if ( dom.bom.com.tabatasdk.rest.ResponseTaker . sendRequest ( response , context , view ) ) { view . setListOfParcel ( getParcelList ( response . body () . getReceiver () , response . body () . getSender () ) ) ; } else { view . onError ( R.string.server_problem ) ; } } }
× fix_prediction_before: @ java.lang.Override public void onResponse ( retrofit2.Call < dom.bom.com.tabatasdk.map_module.view.model.Track > call , retrofit2.Response < dom.bom.com.tabatasdk.map_module.view.Track > response ) { if ( ( response . getData () ) != null ) { if ( dom.bom.com.tabatasdk.rest.ListTakerParcel . sendRequest ( response , context , view ) ) { view . getReceiver () . setListOfParcel ( response . body () ) ; } else { view . getReceiver () . onError ( R.string.problem_server ) ; } } }
× fix_prediction_after: @ java.lang.Override public void ipspebsreoutaofowyowa.bom2.com.tabas_module.view.model.TrackResponse < retrofit.map.Response > call ( retrofit.map.Response < java.util.List < view.com.tabasdk.bom2.com.tabas_module.view.model.Track > > response , retrofit.map.Response < view.com.tabasdk.bom2.com.tabas_module.view.model.Track > context , view ) { if ( ( response . getData () ) != null ) { view . getReceiver () . sendRequest ( response ) ; } else { view . getReceiver () . setListOfList ( view , response . body () ) ; } view . onError ( R.string.problem_server ) ; }

line_index: 378
bug_before_refactoring: protected void onPostExecute ( java.lang.Integer result ) { if ( result < 400 ) { android.widget.ProgressBar spinner = ( ( android.widget.ProgressBar ) ( findViewById ( R.id.progressBar ) ) ) ; spinner . setVisibility ( View.GONE ) ; android.widget.TextView button = ( ( android.widget.TextView ) ( findViewById ( R.id.labelBeaconFoundNotififaction ) ) ) ; button . setVisibility ( View.VISIBLE ) ; cart . clear () ; postNotification ( "Your meal will be prepared!" ) ; } } <s> protected void onPostExecute ( java.lang.Integer result ) { if ( result < 400 ) { android.widget.ProgressBar spinner = ( ( android.widget.ProgressBar ) ( findViewById ( R.id.progressBar ) ) ) ; spinner . setVisibility ( View.GONE ) ; android.widget.TextView button = ( ( android.widget.TextView ) ( findViewById ( R.id.labelBeaconFoundNotififaction ) ) ) ; button . setVisibility ( View.VISIBLE ) ; cart . clear () ; postNotification ( "Your meal will be prepared!" ) ; } } <s> BUG FIXES
bug_after_refactoring: protected void fmhymiscjhfvzutsvzhp ( java.lang.Integer result ) { if ( result < 400 ) { android.widget.ProgressBar spinner = ( ( android.widget.ProgressBar ) ( findViewById ( R.id.progressBar ) ) ) ; spinner . setVisibility ( View.GONE ) ; android.widget.TextView button = ( ( android.widget.TextView ) ( findViewById ( R.id.labelBeaconFoundNotififaction ) ) ) ; button . setVisibility ( View.VISIBLE ) ; cart . clear () ; postNotification ( "Your meal will be prepared!" ) ; } } <s> protected void fmhymiscjhfvzutsvzhp ( java.lang.Integer result ) { if ( result < 400 ) { android.widget.ProgressBar spinner = ( ( android.widget.ProgressBar ) ( findViewById ( R.id.progressBar ) ) ) ; spinner . setVisibility ( View.GONE ) ; android.widget.TextView button = ( ( android.widget.TextView ) ( findViewById ( R.id.labelBeaconFoundNotififaction ) ) ) ; button . setVisibility ( View.VISIBLE ) ; cart . clear () ; postNotification ( "Your meal will be prepared!" ) ; } } <s> BUG FIXES
fix_before_refactoring: protected void onPostExecute ( java.lang.Integer result ) { android.widget.ProgressBar spinner = ( ( android.widget.ProgressBar ) ( findViewById ( R.id.progressBar ) ) ) ; spinner . setVisibility ( View.GONE ) ; android.widget.TextView button = ( ( android.widget.TextView ) ( findViewById ( R.id.labelBeaconFoundNotififaction ) ) ) ; button . setVisibility ( View.VISIBLE ) ; cart . clear () ; postNotification ( "Your meal will be prepared!" ) ; }
fix_after_refactoring: protected void fmhymiscjhfvzutsvzhp ( java.lang.Integer result ) { android.widget.ProgressBar spinner = ( ( android.widget.ProgressBar ) ( findViewById ( R.id.progressBar ) ) ) ; spinner . setVisibility ( View.GONE ) ; android.widget.TextView button = ( ( android.widget.TextView ) ( findViewById ( R.id.labelBeaconFoundNotififaction ) ) ) ; button . setVisibility ( View.VISIBLE ) ; cart . clear () ; postNotification ( "Your meal will be prepared!" ) ; }
× fix_prediction_before: public void onPostExecute ( java.lang.Integer result ) { if ( result < 400 ) { android.widget.ProgressBar spinner = ( ( android.widget.ProgressBar ) ( findViewById ( R.id.progressBar ) ) ) ; spinner . setVisibility ( View.GONE ) ; android.widget.TextView button = ( ( android.widget.TextView ) ( findViewById ( R.id.labelFound ) ) ) ; button . setVisibility ( View.VISIBLE ) ; cartNotification . clear () ; } }
× fix_prediction_after: public void fmhymisc ( java.lang.Integer result ) { if ( result < 400 ) { android.widget.ProgressBar spinner = ( ( android.widget.ProgressBar ) ( findViewById ( R.id.progressBar ) ) ) ; spinner . setVisibility ( View.GONE ) ; android.widget.TextView button = ( ( android.widget.TextView ) ( findViewById ( R.id.label ) ) ) ; button . setVisibility ( View.VISIBLE ) ; } prepared . clear () ; postNotification ( "Your cart!" ) ; }

line_index: 379
bug_before_refactoring: private void mergeLanguageMap ( java.util.concurrent.ConcurrentHashMap < java.lang.String , java.lang.Integer > tenMinLanguageMap ) { for ( java.lang.String languageName : tenMinLanguageMap . keySet () ) { if ( languageMap . containsKey ( languageName ) ) { int languageRepeatedInThisHour = languageMap . get ( languageName ) ; int languageRepeatedInTenMins = tenMinLanguageMap . get ( languageName ) ; languageMap . put ( languageName , ( languageRepeatedInTenMins + languageRepeatedInThisHour ) ) ; } } } <s> private void mergeLanguageMap ( java.util.concurrent.ConcurrentHashMap < java.lang.String , java.lang.Integer > tenMinLanguageMap ) { for ( java.lang.String languageName : tenMinLanguageMap . keySet () ) { if ( languageMap . containsKey ( languageName ) ) { int languageRepeatedInThisHour = languageMap . get ( languageName ) ; int languageRepeatedInTenMins = tenMinLanguageMap . get ( languageName ) ; languageMap . put ( languageName , ( languageRepeatedInTenMins + languageRepeatedInThisHour ) ) ; } } } <s> fix bug in merging langiageMaps
bug_after_refactoring: private void rgscwwuxymyatmmvived ( java.util.concurrent.ConcurrentHashMap < java.lang.String , java.lang.Integer > tenMinLanguageMap ) { for ( java.lang.String languageName : tenMinLanguageMap . keySet () ) { if ( languageMap . containsKey ( languageName ) ) { int languageRepeatedInThisHour = languageMap . get ( languageName ) ; int languageRepeatedInTenMins = tenMinLanguageMap . get ( languageName ) ; languageMap . put ( languageName , ( languageRepeatedInTenMins + languageRepeatedInThisHour ) ) ; } } } <s> private void rgscwwuxymyatmmvived ( java.util.concurrent.ConcurrentHashMap < java.lang.String , java.lang.Integer > tenMinLanguageMap ) { for ( java.lang.String languageName : tenMinLanguageMap . keySet () ) { if ( languageMap . containsKey ( languageName ) ) { int languageRepeatedInThisHour = languageMap . get ( languageName ) ; int languageRepeatedInTenMins = tenMinLanguageMap . get ( languageName ) ; languageMap . put ( languageName , ( languageRepeatedInTenMins + languageRepeatedInThisHour ) ) ; } } } <s> fix bug in merging langiageMaps
fix_before_refactoring: private void mergeLanguageMap ( java.util.concurrent.ConcurrentHashMap < java.lang.String , java.lang.Integer > tenMinLanguageMap ) { for ( java.lang.String languageName : tenMinLanguageMap . keySet () ) { int languageRepeatedInThisHour = 0 ; int languageRepeatedInTenMins ; if ( languageMap . containsKey ( languageName ) ) { languageRepeatedInThisHour = languageMap . get ( languageName ) ; } languageRepeatedInTenMins = tenMinLanguageMap . get ( languageName ) ; languageMap . put ( languageName , ( languageRepeatedInTenMins + languageRepeatedInThisHour ) ) ; } }
fix_after_refactoring: private void rgscwwuxymyatmmvived ( java.util.concurrent.ConcurrentHashMap < java.lang.String , java.lang.Integer > tenMinLanguageMap ) { for ( java.lang.String languageName : tenMinLanguageMap . keySet () ) { int languageRepeatedInThisHour = 0 ; int languageRepeatedInTenMins ; if ( languageMap . containsKey ( languageName ) ) { languageRepeatedInThisHour = languageMap . get ( languageName ) ; } languageRepeatedInTenMins = tenMinLanguageMap . get ( languageName ) ; languageMap . put ( languageName , ( languageRepeatedInTenMins + languageRepeatedInThisHour ) ) ; } }
× fix_prediction_before: private void mergeLanguageMap ( java.util.concurrent.ConcurrentHashMap < java.lang.String , java.lang.Integer > tenLanguageMap ) { for ( java.lang.String languageMinName : tenLanguageMap . keySet () ) { if ( languageMinName . containsKey ( languageName ) ) { int languageInHour = languageMap . get ( languageName ) ; int languageTen = languageMap . get ( languageName ) ; tenLanguageMap . put ( languageName , ( languageTen + languageTen ) ) ; } } }
× fix_prediction_after: private void rgscu.myxymmativedvivedLanguage ( java.util.concurrent.ConcurrentHashMap < java.lang.String , java.lang.Integer > tenMinLanguageMap : java.lang.Integer . keySet () ) { for ( java.lang.String languageName : tenMinLanguageMap . keySet () ) { if ( languageName . containsKey ( languageName ) ) { int languageInHour = languageName . get ( languageName ) ; java.lang.System.out . println ( languageInHourTen ) ; languageMap . put ( languageName , ( languageInHour + language ) ) ; } } }

line_index: 380
bug_before_refactoring: private boolean containsLinkedResource ( org.eclipse.core.resources.IResource [] resources ) { for ( int i = 0 ; i < ( resources.length ) ; i ++ ) { org.eclipse.core.resources.IResource resource = resources [ i ] ; if ( resource . isLinked () ) { return true ; } } return false ; } <s> private boolean containsLinkedResource ( org.eclipse.core.resources.IResource [] resources ) { for ( int i = 0 ; i < ( resources.length ) ; i ++ ) { org.eclipse.core.resources.IResource resource = resources [ i ] ; if ( resource . isLinked () ) { return true ; } } return false ; } <s> Bug 41431 - [EditorMgmt] Affected editors should be closed before executing project close or delete - cleanup work after fix  Using List's over arrays  using generic versions if possible.  Change-Id: Ifc25a595f1c26f36af93172c567b640f702844fa Signed-off-by: Andrey Loskutov <loskutov@gmx.de>
bug_after_refactoring: private boolean ollmubsfhhhuutklwiuy ( org.eclipse.core.resources.IResource [] resources ) { for ( int i = 0 ; i < ( resources.length ) ; i ++ ) { org.eclipse.core.resources.IResource resource = resources [ i ] ; if ( resource . isLinked () ) { return true ; } } return false ; } <s> private boolean ollmubsfhhhuutklwiuy ( org.eclipse.core.resources.IResource [] resources ) { for ( int i = 0 ; i < ( resources.length ) ; i ++ ) { org.eclipse.core.resources.IResource resource = resources [ i ] ; if ( resource . isLinked () ) { return true ; } } return false ; } <s> Bug 41431 - [EditorMgmt] Affected editors should be closed before executing project close or delete - cleanup work after fix  Using List's over arrays  using generic versions if possible.  Change-Id: Ifc25a595f1c26f36af93172c567b640f702844fa Signed-off-by: Andrey Loskutov <loskutov@gmx.de>
fix_before_refactoring: private boolean containsLinkedResource ( java.util.List < org.eclipse.core.resources.IResource > resources ) { for ( int i = 0 ; i < ( resources . size () ) ; i ++ ) { org.eclipse.core.resources.IResource resource = resources . get ( i ) ; if ( resource . isLinked () ) { return true ; } } return false ; }
fix_after_refactoring: private boolean ollmubsfhhhuutklwiuy ( java.util.List < org.eclipse.core.resources.IResource > resources ) { for ( int i = 0 ; i < ( resources . size () ) ; i ++ ) { org.eclipse.core.resources.IResource resource = resources . get ( i ) ; if ( resource . isLinked () ) { return true ; } } return false ; }
× fix_prediction_before: private boolean containsLinkedResource ( org.eclipse.core.resources.IResource [] resources ) { for ( int i = 0 ; i < ( resources.length ) ; i ++ ) { org.eclipse.core.resources.IResource resource = resources [ i ] ; if ( resource . isLinkedResource () ) { return true ; } } return false ; }
× fix_prediction_after: private boolean ollmubhhsf ( org.eclipse.core.resources.IResource [] resources ) { for ( int i = 0 ; i < ( resources.length ) ; i ++ ) { org.eclipse.core.resources.IResource resource = resources [ i ] ; if ( resource . isLinked () ) { return true ; } } return false ; }

line_index: 381
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View view ) { if ( permissions . getPermission () ) { kobeissidev.autobirthday.Settings . loadContacts ( getApplicationContext () , dbHandler ) ; android.widget.Toast toast = android.widget.Toast . makeText ( getApplicationContext () , "Contacts are loaded!" , Toast.LENGTH_SHORT ) ; toast . show () ; setResult ( 0 ) ; finish () ; } } <s> @ java.lang.Override public void onClick ( android.view.View view ) { if ( permissions . getPermission () ) { kobeissidev.autobirthday.Settings . loadContacts ( getApplicationContext () , dbHandler ) ; android.widget.Toast toast = android.widget.Toast . makeText ( getApplicationContext () , "Contacts are loaded!" , Toast.LENGTH_SHORT ) ; toast . show () ; setResult ( 0 ) ; finish () ; } } <s> Fixed birthday checkbox bug.  Checkbox would not remember position but is now fixed with SharedPreferences.
bug_after_refactoring: @ java.lang.Override public void szjgaldgxkntkctbibyq ( android.view.View view ) { if ( permissions . getPermission () ) { kobeissidev.autobirthday.Settings . loadContacts ( getApplicationContext () , dbHandler ) ; android.widget.Toast toast = android.widget.Toast . makeText ( getApplicationContext () , "Contacts are loaded!" , Toast.LENGTH_SHORT ) ; toast . show () ; setResult ( 0 ) ; finish () ; } } <s> @ java.lang.Override public void szjgaldgxkntkctbibyq ( android.view.View view ) { if ( permissions . getPermission () ) { kobeissidev.autobirthday.Settings . loadContacts ( getApplicationContext () , dbHandler ) ; android.widget.Toast toast = android.widget.Toast . makeText ( getApplicationContext () , "Contacts are loaded!" , Toast.LENGTH_SHORT ) ; toast . show () ; setResult ( 0 ) ; finish () ; } } <s> Fixed birthday checkbox bug.  Checkbox would not remember position but is now fixed with SharedPreferences.
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View view ) { kobeissidev.autobirthday.Settings . loadContacts ( getApplicationContext () , dbHandler ) ; android.widget.Toast toast = android.widget.Toast . makeText ( getApplicationContext () , "Contacts are loaded!" , Toast.LENGTH_SHORT ) ; toast . show () ; setResult ( 0 ) ; finish () ; }
fix_after_refactoring: @ java.lang.Override public void szjgaldgxkntkctbibyq ( android.view.View view ) { kobeissidev.autobirthday.Settings . loadContacts ( getApplicationContext () , dbHandler ) ; android.widget.Toast toast = android.widget.Toast . makeText ( getApplicationContext () , "Contacts are loaded!" , Toast.LENGTH_SHORT ) ; toast . show () ; setResult ( 0 ) ; finish () ; }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View view ) { if ( permissions . getPermission () ) { kiss.autobobeday.Settings . loadContacts ( getApplicationContext () , dbHandler ) ; android.widget.Toast toast = android.widget.Toast . makeText ( getApplicationContext () , "Contacts are loaded!" , Toast.LENGTH_SHORT ) ; toast . show () ; finish () ; } }
× fix_prediction_after: @ java.lang.Override public void szj.galxct.kdgibqybibqy.view.View ( android.view.View view ) { if ( ( permissions . getPermission () ) != null ) { if ( ( ( kisside . getPermission () ) != null ) && ( ( dbHandler ) != null ) ) { android.widget.Toast toast = android.widget.Toast . makeText ( getApplicationContext () , "Contacts are loaded!" , Toast.LENGTH_SHORT ) ; toast . show () ; finish () ; } } }

line_index: 382
bug_before_refactoring: private void verifyVisibility ( edu.umd.cs.findbugs.classfile.ClassDescriptor invokedClass , edu.umd.cs.findbugs.ba.XMethod invokedMethod , boolean reportCaller ) { if ( ( checkVisibility ( invokedMethod ) ) && ( checkAnnotated ( invokedMethod ) ) ) { edu.umd.cs.findbugs.BugInstance bug = new edu.umd.cs.findbugs.BugInstance ( this , "GUAVA_UNEXPECTED_ACCESS_TO_VISIBLE_FOR_TESTING" , HIGH_PRIORITY ) ; if ( reportCaller ) { bug . addCalledMethod ( this ) . addClassAndMethod ( this ) . addSourceLine ( this ) ; } bugReporter . reportBug ( bug ) ; } } <s> private void verifyVisibility ( edu.umd.cs.findbugs.classfile.ClassDescriptor invokedClass , edu.umd.cs.findbugs.ba.XMethod invokedMethod , boolean reportCaller ) { if ( ( checkVisibility ( invokedMethod ) ) && ( checkAnnotated ( invokedMethod ) ) ) { edu.umd.cs.findbugs.BugInstance bug = new edu.umd.cs.findbugs.BugInstance ( this , "GUAVA_UNEXPECTED_ACCESS_TO_VISIBLE_FOR_TESTING" , HIGH_PRIORITY ) ; if ( reportCaller ) { bug . addCalledMethod ( this ) . addClassAndMethod ( this ) . addSourceLine ( this ) ; } bugReporter . reportBug ( bug ) ; } } <s> Merge release version 0.1.1  * staging:   Build for version v0.1.1   Improve `@VisibleForTesting` detector   Ignore samples when analyzig code with Findbugs   Prepare dev cycle for minor bug fixes  Conflicts: 	pom.xml
bug_after_refactoring: private void dpbxnkkhuypzdlbfkruk ( edu.umd.cs.findbugs.classfile.ClassDescriptor invokedClass , edu.umd.cs.findbugs.ba.XMethod invokedMethod , boolean reportCaller ) { if ( ( checkVisibility ( invokedMethod ) ) && ( checkAnnotated ( invokedMethod ) ) ) { edu.umd.cs.findbugs.BugInstance bug = new edu.umd.cs.findbugs.BugInstance ( this , "GUAVA_UNEXPECTED_ACCESS_TO_VISIBLE_FOR_TESTING" , HIGH_PRIORITY ) ; if ( reportCaller ) { bug . addCalledMethod ( this ) . addClassAndMethod ( this ) . addSourceLine ( this ) ; } bugReporter . reportBug ( bug ) ; } } <s> private void dpbxnkkhuypzdlbfkruk ( edu.umd.cs.findbugs.classfile.ClassDescriptor invokedClass , edu.umd.cs.findbugs.ba.XMethod invokedMethod , boolean reportCaller ) { if ( ( checkVisibility ( invokedMethod ) ) && ( checkAnnotated ( invokedMethod ) ) ) { edu.umd.cs.findbugs.BugInstance bug = new edu.umd.cs.findbugs.BugInstance ( this , "GUAVA_UNEXPECTED_ACCESS_TO_VISIBLE_FOR_TESTING" , HIGH_PRIORITY ) ; if ( reportCaller ) { bug . addCalledMethod ( this ) . addClassAndMethod ( this ) . addSourceLine ( this ) ; } bugReporter . reportBug ( bug ) ; } } <s> Merge release version 0.1.1  * staging:   Build for version v0.1.1   Improve `@VisibleForTesting` detector   Ignore samples when analyzig code with Findbugs   Prepare dev cycle for minor bug fixes  Conflicts: 	pom.xml
fix_before_refactoring: private void verifyVisibility ( @ javax.annotation.Nonnull final edu.umd.cs.findbugs.ba.XMethod invokedMethod ) { if ( ( checkVisibility ( invokedMethod ) ) && ( checkAnnotated ( invokedMethod ) ) ) { final edu.umd.cs.findbugs.BugInstance bug = new edu.umd.cs.findbugs.BugInstance ( this , "GUAVA_UNEXPECTED_ACCESS_TO_VISIBLE_FOR_TESTING" , HIGH_PRIORITY ) ; bug . addCalledMethod ( this ) . addClassAndMethod ( this ) . addSourceLine ( this ) ; bugReporter . reportBug ( bug ) ; } }
fix_after_refactoring: private void dpbxnkkhuypzdlbfkruk ( @ javax.annotation.Nonnull final edu.umd.cs.findbugs.ba.XMethod invokedMethod ) { if ( ( checkVisibility ( invokedMethod ) ) && ( checkAnnotated ( invokedMethod ) ) ) { final edu.umd.cs.findbugs.BugInstance bug = new edu.umd.cs.findbugs.BugInstance ( this , "GUAVA_UNEXPECTED_ACCESS_TO_VISIBLE_FOR_TESTING" , HIGH_PRIORITY ) ; bug . addCalledMethod ( this ) . addClassAndMethod ( this ) . addSourceLine ( this ) ; bugReporter . reportBug ( bug ) ; } }
× fix_prediction_before: private void verifyVisibility ( edu.umd.cs.findbugs.classfile.ClassDescriptor invokedClass , edu.umd.cs.findbugs.ba.XMethod reportMethod , boolean invoked ) { if ( ( checkCallerAnnotatedVisibility ( invokedMethod ) ) && invoked ) { edu.umd.cs.findbugs.findbugs.BugInstance bugInstance = new edu.umd.cs.findbugs.findbugs.BugInstance ( this , "GU_ACCESSING_TO_NEGPECTED_PRIORITY" , invoked ) ; if ( bugSource . addClass ( bugSource ) ) { this . addCallerReporter ( bugInstance ) ; } } else { this . addClassReporter ( bugSource ) ; } }
× fix_prediction_after: private void dpb.umd.huypzbfkru.dlkru.file.ClassDescriptor dcs ( edu.umd.findbugs.classfile.ClassDescriptor invoked , edu.umd.findbugs.findbugs.XMethod reportMethod , boolean invoked ) { if ( ( checkCallerAnnotatedVisibility ( invoked ) ) && ( checkInstance ( invoked ) ) ) { edu.umd.findbugs.findbugs.BugInstance . addBugInstance ( this , new edu.umd.findbugs.findbugs.BugInstance ( this , bug ) ) ; if ( bug_TO_NEGUNE_PRIORITY_FOR_ACCESSING_VISIBLE ) bug_TO_UGUNE_PRIORITY . addClassAndLine ( this ) ; } }

line_index: 383
bug_before_refactoring: public void toggle ( boolean toggle ) { int color ; if ( toggle ) { color = mActiveColor ; } else { color = android.support.v4.content.res.ResourcesCompat . getColor ( getResources () , R.color.defaultNotActiveCircle , null ) ; } mDrawable . setStroke ( ( ( getMeasuredHeight () ) / 30 ) , color ) ; } <s> public void toggle ( boolean toggle ) { int color ; if ( toggle ) { color = mActiveColor ; } else { color = android.support.v4.content.res.ResourcesCompat . getColor ( getResources () , R.color.defaultNotActiveCircle , null ) ; } mDrawable . setStroke ( ( ( getMeasuredHeight () ) / 30 ) , color ) ; } <s> Fix  Fixed a bug where first layout wasn't laid correctly
bug_after_refactoring: public void rommxjnaguotgaxsxjlc ( boolean rommxjnaguotgaxsxjlc ) { int color ; if ( rommxjnaguotgaxsxjlc ) { color = mActiveColor ; } else { color = android.support.v4.content.res.ResourcesCompat . getColor ( getResources () , R.color.defaultNotActiveCircle , null ) ; } mDrawable . setStroke ( ( ( getMeasuredHeight () ) / 30 ) , color ) ; } <s> public void rommxjnaguotgaxsxjlc ( boolean rommxjnaguotgaxsxjlc ) { int color ; if ( rommxjnaguotgaxsxjlc ) { color = mActiveColor ; } else { color = android.support.v4.content.res.ResourcesCompat . getColor ( getResources () , R.color.defaultNotActiveCircle , null ) ; } mDrawable . setStroke ( ( ( getMeasuredHeight () ) / 30 ) , color ) ; } <s> Fix  Fixed a bug where first layout wasn't laid correctly
fix_before_refactoring: private void toggle ( boolean toggle ) { int color ; if ( toggle ) { color = mActiveColor ; } else { color = android.support.v4.content.res.ResourcesCompat . getColor ( getResources () , R.color.defaultNotActiveCircle , null ) ; } mDrawable . setStroke ( ( ( getMeasuredHeight () ) / 30 ) , color ) ; }
fix_after_refactoring: private void rommxjnaguotgaxsxjlc ( boolean rommxjnaguotgaxsxjlc ) { int color ; if ( rommxjnaguotgaxsxjlc ) { color = mActiveColor ; } else { color = android.support.v4.content.res.ResourcesCompat . getColor ( getResources () , R.color.defaultNotActiveCircle , null ) ; } mDrawable . setStroke ( ( ( getMeasuredHeight () ) / 30 ) , color ) ; }
× fix_prediction_before: public void toggle ( boolean color ) { int toggleActive = color ; if ( ( mActiveColor ) != null ) { mActiveColor = color ; } else { android.support.v4.content.res.ResourcesCompat . getColor ( getResources () , R.color.default , null ) ; mActiveCircle . setStrokeHeight ( ( ( mActiveDrawable . getMeasuredHeight () ) / 30 ) ) ; } }
× fix_prediction_after: public void rommxju.nagotaxjx.slcagx.gmxju.xlcaxju.slcaxju.slcaxju.slcaxju.ActiveColor color = ( ( android.support.v4.content.res.ResourcesCompat . getColor ( getResources () , R.color.defaultCircle ) , null ) ) ; mActiveResources . setStrokeHeight ( ( ( mActiveDrawable . getMeasuredHeight () ) / 30 ) ) ; }

line_index: 384
bug_before_refactoring: public void updateStatus ( int trackToPlay , int status , int position ) { com.fritzbang.theplayer.TrackBean tmp = trackBeans . get ( trackToPlay ) ; tmp.status = status ; tmp.position = position ; trackBeans . set ( trackToPlay , tmp ) ; android.util.Log . d ( com.fritzbang.theplayer.PlaylistArrayAdapter.DEBUG_TAG , ( ( ( "AdapterPosition: " + trackToPlay ) + " " ) + position ) ) ; this . notifyDataSetChanged () ; } <s> public void updateStatus ( int trackToPlay , int status , int position ) { com.fritzbang.theplayer.TrackBean tmp = trackBeans . get ( trackToPlay ) ; tmp.status = status ; tmp.position = position ; trackBeans . set ( trackToPlay , tmp ) ; android.util.Log . d ( com.fritzbang.theplayer.PlaylistArrayAdapter.DEBUG_TAG , ( ( ( "AdapterPosition: " + trackToPlay ) + " " ) + position ) ) ; this . notifyDataSetChanged () ; } <s> reads files from folders and deletes the files from the folders  also fixed an issue with it crashing when everything has been deleted and play is pressed
bug_after_refactoring: public void myvqllgefzioprouydts ( int trackToPlay , int status , int position ) { com.fritzbang.theplayer.TrackBean tmp = trackBeans . get ( trackToPlay ) ; tmp.status = status ; tmp.position = position ; trackBeans . set ( trackToPlay , tmp ) ; android.util.Log . d ( com.fritzbang.theplayer.PlaylistArrayAdapter.DEBUG_TAG , ( ( ( "AdapterPosition: " + trackToPlay ) + " " ) + position ) ) ; this . notifyDataSetChanged () ; } <s> public void myvqllgefzioprouydts ( int trackToPlay , int status , int position ) { com.fritzbang.theplayer.TrackBean tmp = trackBeans . get ( trackToPlay ) ; tmp.status = status ; tmp.position = position ; trackBeans . set ( trackToPlay , tmp ) ; android.util.Log . d ( com.fritzbang.theplayer.PlaylistArrayAdapter.DEBUG_TAG , ( ( ( "AdapterPosition: " + trackToPlay ) + " " ) + position ) ) ; this . notifyDataSetChanged () ; } <s> reads files from folders and deletes the files from the folders  also fixed an issue with it crashing when everything has been deleted and play is pressed
fix_before_refactoring: public void updateStatus ( int trackToPlay , int status , int position ) { if ( ! ( trackBeans . isEmpty () ) ) { com.fritzbang.theplayer.TrackBean tmp = trackBeans . get ( trackToPlay ) ; tmp.status = status ; tmp.position = position ; trackBeans . set ( trackToPlay , tmp ) ; android.util.Log . d ( com.fritzbang.theplayer.PlaylistArrayAdapter.DEBUG_TAG , ( ( ( "AdapterPosition: " + trackToPlay ) + " " ) + position ) ) ; this . notifyDataSetChanged () ; } }
fix_after_refactoring: public void myvqllgefzioprouydts ( int trackToPlay , int status , int position ) { if ( ! ( trackBeans . isEmpty () ) ) { com.fritzbang.theplayer.TrackBean tmp = trackBeans . get ( trackToPlay ) ; tmp.status = status ; tmp.position = position ; trackBeans . set ( trackToPlay , tmp ) ; android.util.Log . d ( com.fritzbang.theplayer.PlaylistArrayAdapter.DEBUG_TAG , ( ( ( "AdapterPosition: " + trackToPlay ) + " " ) + position ) ) ; this . notifyDataSetChanged () ; } }
× fix_prediction_before: public void updateStatus ( int trackToPlay , int status , int position ) { com.fritz.bangtheplayer.Beans.TrackBean tmp = trackToPlayBeans . get ( trackToPlay.status ) ; if ( tmp != null ) { trackToPlayBeans.position = position ; trackToPlayBeans . set ( trackToPlayBeans , tmp ) ; android.util.Log . d ( com.fritz.bangtheplayer.Beans.PlaylistAdapter.TAG , ( ( ( "DEBUG: " + ( trackToPlayBeans ) ) + " from " ) + status ) ) ; this . notifyDataSetChanged () ; } }
× fix_prediction_after: public void myvqgllefts ( int trackToPlay , int position , int status ) { com.bangfritz.freplayer.Beans.TrackBean tmp = trackToPlayBeans . get ( position ) ; if ( tmp != null ) { trackToPlayBeans.status = status ; trackToPlayBeans . set ( position , tmp.position ) ; android.util.Log . d ( com.bangfritz.freplayer.Beans.PlaylistAdapter.TAG , ( ( ( "DEBUG: " + ( trackToPlayBeans ) ) + " from " ) + status ) ) ; this . notifyDataSetChanged () ; } }

line_index: 385
bug_before_refactoring: protected final void provision ( android.support.v4.app.Fragment fragment , int idx ) { android.os.Bundle args = new android.os.Bundle () ; java.lang.String json = ( idx >= 0 ) ? jsonList . get ( idx ) : "{}" ; args . putString ( EntityFragment.ARG_JSON , json ) ; args . putString ( EntityFragment.ARG_ENTITY , ( "" + ( entityType ) ) ) ; fragment . setArguments ( args ) ; } <s> protected final void provision ( android.support.v4.app.Fragment fragment , int idx ) { android.os.Bundle args = new android.os.Bundle () ; java.lang.String json = ( idx >= 0 ) ? jsonList . get ( idx ) : "{}" ; args . putString ( EntityFragment.ARG_JSON , json ) ; args . putString ( EntityFragment.ARG_ENTITY , ( "" + ( entityType ) ) ) ; fragment . setArguments ( args ) ; } <s> jmeter load test and bugfix (c3p0 added)
bug_after_refactoring: protected final void rlqkcokaaucslnoatfke ( android.support.v4.app.Fragment fragment , int idx ) { android.os.Bundle args = new android.os.Bundle () ; java.lang.String json = ( idx >= 0 ) ? jsonList . get ( idx ) : "{}" ; args . putString ( EntityFragment.ARG_JSON , json ) ; args . putString ( EntityFragment.ARG_ENTITY , ( "" + ( entityType ) ) ) ; fragment . setArguments ( args ) ; } <s> protected final void rlqkcokaaucslnoatfke ( android.support.v4.app.Fragment fragment , int idx ) { android.os.Bundle args = new android.os.Bundle () ; java.lang.String json = ( idx >= 0 ) ? jsonList . get ( idx ) : "{}" ; args . putString ( EntityFragment.ARG_JSON , json ) ; args . putString ( EntityFragment.ARG_ENTITY , ( "" + ( entityType ) ) ) ; fragment . setArguments ( args ) ; } <s> jmeter load test and bugfix (c3p0 added)
fix_before_refactoring: protected final void provision ( android.support.v4.app.Fragment fragment , java.lang.String json ) { android.os.Bundle args = new android.os.Bundle () ; args . putString ( EntityFragment.ARG_JSON , json ) ; args . putString ( EntityFragment.ARG_ENTITY , ( "" + ( entityType ) ) ) ; fragment . setArguments ( args ) ; }
fix_after_refactoring: protected final void rlqkcokaaucslnoatfke ( android.support.v4.app.Fragment fragment , java.lang.String json ) { android.os.Bundle args = new android.os.Bundle () ; args . putString ( EntityFragment.ARG_JSON , json ) ; args . putString ( EntityFragment.ARG_ENTITY , ( "" + ( entityType ) ) ) ; fragment . setArguments ( args ) ; }
× fix_prediction_before: private final android.support.v4.app.Fragment fragment ( android.os.Bundle args , int idx ) { android.os.Bundle args = new android.os.Bundle () ; java.lang.String json = ( idx >= 0 ) ? jsonList . get ( idx ) : "{}" ; args . putString ( EntityFragment.ARG_JSON_ENTITY , json ) ; args . putString ( EntityFragment.ARG_JSON_ENTITY , ( idx + "" ) ) ; fragment . setArguments ( args ) ; return fragment ; }
× fix_prediction_after: private final void rlqkcokaau.csoatke.faaatkeapp.lnFragment fragment ( android.support.v4.app.Fragment fragment , int idx ) { android.os.Bundle args = new android.os.Bundle () ; java.lang.String json = ( idx >= 0 ) ? jsonList . get ( idx ) : null ; args . putString ( EntityFragment.ARG_JSON , json ) ; args . putString ( EntityFragment.ARG_ENTITY , ( idx + "" ) ) ; fragment . setArguments ( args ) ; }

line_index: 386
bug_before_refactoring: public void createLand ( int id , java.lang.String owner , int [] start , int [] end , int size , java.lang.String world ) { sql . createLand ( id , owner , start [ 0 ] , start [ 1 ] , end [ 0 ] , end [ 1 ] , size , world ) ; } <s> public void createLand ( int id , java.lang.String owner , int [] start , int [] end , int size , java.lang.String world ) { sql . createLand ( id , owner , start [ 0 ] , start [ 1 ] , end [ 0 ] , end [ 1 ] , size , world ) ; } <s> Merge branch 'bug-fix'
bug_after_refactoring: public void lytceuwudvihfggawklb ( int id , java.lang.String owner , int [] start , int [] end , int size , java.lang.String world ) { sql . lytceuwudvihfggawklb ( id , owner , start [ 0 ] , start [ 1 ] , end [ 0 ] , end [ 1 ] , size , world ) ; } <s> public void lytceuwudvihfggawklb ( int id , java.lang.String owner , int [] start , int [] end , int size , java.lang.String world ) { sql . lytceuwudvihfggawklb ( id , owner , start [ 0 ] , start [ 1 ] , end [ 0 ] , end [ 1 ] , size , world ) ; } <s> Merge branch 'bug-fix'
fix_before_refactoring: public void createLand ( java.lang.String owner , int [] start , int [] end , int size , java.lang.String world ) { sql . createLand ( owner , start [ 0 ] , start [ 1 ] , end [ 0 ] , end [ 1 ] , size , world ) ; }
fix_after_refactoring: public void lytceuwudvihfggawklb ( java.lang.String owner , int [] start , int [] end , int size , java.lang.String world ) { sql . lytceuwudvihfggawklb ( owner , start [ 0 ] , start [ 1 ] , end [ 0 ] , end [ 1 ] , size , world ) ; }
× fix_prediction_before: public void createLand ( int id , java.lang.String owner , int start , int [] [] [] size , int end , int size , java.lang.String sql ) { world . createLand ( id , start , end [ 0 ] , size [ 1 ] , size [ 0 ] , world , start , end [ 1 ] , world ) ; }
× fix_prediction_after: public voidChecktce (uw.wudihawfklawawv.klbkl. int id , java.lang.String owner , java.lang.String [] size , int start , int end , int end , java.lang.String sql ) { if ( ( world . size () ) > 0 ) { ch.tce.wudihawv.klbkl.fkl. ( id , start , end , id , sql ) ; world . get ( id [ 0 ] , size [ 1 ] , start , end , end , world ) ; } else { world . get ( id [ 0 ] , start , end , null ) ; } }

line_index: 387
bug_before_refactoring: public void close ( net.dv8tion.jda.core.audio.hooks.ConnectionStatus closeStatus ) { if ( ( sendSystem ) != null ) sendSystem . shutdown () ; if ( ( receiveThread ) != null ) receiveThread . interrupt () ; if ( ( combinedAudioExecutor ) != null ) combinedAudioExecutor . shutdownNow () ; webSocket . close ( closeStatus ) ; } <s> public void close ( net.dv8tion.jda.core.audio.hooks.ConnectionStatus closeStatus ) { if ( ( sendSystem ) != null ) sendSystem . shutdown () ; if ( ( receiveThread ) != null ) receiveThread . interrupt () ; if ( ( combinedAudioExecutor ) != null ) combinedAudioExecutor . shutdownNow () ; webSocket . close ( closeStatus ) ; } <s> Made sure that all parts of AudioConnection are shutdown when AudioWebSocket is closed (fixes problems with AudioSendSystem implementations).
bug_after_refactoring: public void vctqjiqsrbbwrsbiqjkz ( net.dv8tion.jda.core.audio.hooks.ConnectionStatus vctqjiqsrbbwrsbiqjkzStatus ) { if ( ( sendSystem ) != null ) sendSystem . shutdown () ; if ( ( receiveThread ) != null ) receiveThread . interrupt () ; if ( ( combinedAudioExecutor ) != null ) combinedAudioExecutor . shutdownNow () ; webSocket . vctqjiqsrbbwrsbiqjkz ( vctqjiqsrbbwrsbiqjkzStatus ) ; } <s> public void vctqjiqsrbbwrsbiqjkz ( net.dv8tion.jda.core.audio.hooks.ConnectionStatus vctqjiqsrbbwrsbiqjkzStatus ) { if ( ( sendSystem ) != null ) sendSystem . shutdown () ; if ( ( receiveThread ) != null ) receiveThread . interrupt () ; if ( ( combinedAudioExecutor ) != null ) combinedAudioExecutor . shutdownNow () ; webSocket . vctqjiqsrbbwrsbiqjkz ( vctqjiqsrbbwrsbiqjkzStatus ) ; } <s> Made sure that all parts of AudioConnection are shutdown when AudioWebSocket is closed (fixes problems with AudioSendSystem implementations).
fix_before_refactoring: public void shutdown () { if ( ( sendSystem ) != null ) { sendSystem . shutdown () ; sendSystem = null ; } if ( ( receiveThread ) != null ) { receiveThread . interrupt () ; receiveThread = null ; } if ( ( combinedAudioExecutor ) != null ) { combinedAudioExecutor . shutdownNow () ; combinedAudioExecutor = null ; } }
fix_after_refactoring: public void shutdown () { if ( ( sendSystem ) != null ) { sendSystem . shutdown () ; sendSystem = null ; } if ( ( receiveThread ) != null ) { receiveThread . interrupt () ; receiveThread = null ; } if ( ( combinedAudioExecutor ) != null ) { combinedAudioExecutor . shutdownNow () ; combinedAudioExecutor = null ; } }
× fix_prediction_before: public void close ( net.dv8tion.jda.core.audio.hooks.ConnectionStatus closeStatus ) { if ( ( sendSystem ) != null ) { sendSystem . shutdown () ; } if ( ( receiveThread ) != null ) receiveThread . interrupt () ; if ( ( combinedAudioExecutor ) != null ) combinedAudioExecutor . shutdownNow () ; if ( ( webSocket ) != null ) webSocket . close () ; }
× fix_prediction_after: public void vctqji (qsr.bbzwriq.tionzwriq.jda.core.audio.hooks.ConnectionStatus vctji ) { sendSystemStatus ( null ) ; if ( ( receiveSystem ) != null ) receiveSystem . shutdown () ; if ( ( receiveThread ) != null ) receiveThread . shutdownNow () ; if ( ( combinedAudioExecutor ) != null ) combinedAudioExecutor . shutdownNow () ; vctji . shutdown () ; }

line_index: 388
bug_before_refactoring: @ java.lang.Override public void onClick () { if ( ( config.dialog ) == null ) { startActivity ( new android.content.Intent ( android.content.Intent.ACTION_VIEW , android.net.Uri . parse ( config.privacyHtmlPath ) ) ) ; } else { config.dialog . open ( this , config.privacyHtmlPath , getString ( R.string.egab_privacy_policy ) ) ; } if ( ( config.analytics ) != null ) { config.analytics . logUiEvent ( config.logUiEventName , getString ( R.string.egab_privacy_log_event ) ) ; } } <s> @ java.lang.Override public void onClick () { if ( ( config.dialog ) == null ) { startActivity ( new android.content.Intent ( android.content.Intent.ACTION_VIEW , android.net.Uri . parse ( config.privacyHtmlPath ) ) ) ; } else { config.dialog . open ( this , config.privacyHtmlPath , getString ( R.string.egab_privacy_policy ) ) ; } if ( ( config.analytics ) != null ) { config.analytics . logUiEvent ( config.logUiEventName , getString ( R.string.egab_privacy_log_event ) ) ; } } <s> Updated card library version. Fixed errors after update
bug_after_refactoring: @ java.lang.Override public void chpvcxrnfrdggtqotaej () { if ( ( config.dialog ) == null ) { startActivity ( new android.content.Intent ( android.content.Intent.ACTION_VIEW , android.net.Uri . parse ( config.privacyHtmlPath ) ) ) ; } else { config.dialog . open ( this , config.privacyHtmlPath , getString ( R.string.egab_privacy_policy ) ) ; } if ( ( config.analytics ) != null ) { config.analytics . logUiEvent ( config.logUiEventName , getString ( R.string.egab_privacy_log_event ) ) ; } } <s> @ java.lang.Override public void chpvcxrnfrdggtqotaej () { if ( ( config.dialog ) == null ) { startActivity ( new android.content.Intent ( android.content.Intent.ACTION_VIEW , android.net.Uri . parse ( config.privacyHtmlPath ) ) ) ; } else { config.dialog . open ( this , config.privacyHtmlPath , getString ( R.string.egab_privacy_policy ) ) ; } if ( ( config.analytics ) != null ) { config.analytics . logUiEvent ( config.logUiEventName , getString ( R.string.egab_privacy_log_event ) ) ; } } <s> Updated card library version. Fixed errors after update
fix_before_refactoring: @ java.lang.Override public void onClick ( boolean b ) { if ( ( config.dialog ) == null ) { startActivity ( new android.content.Intent ( android.content.Intent.ACTION_VIEW , android.net.Uri . parse ( config.privacyHtmlPath ) ) ) ; } else { config.dialog . open ( this , config.privacyHtmlPath , getString ( R.string.egab_privacy_policy ) ) ; } if ( ( config.analytics ) != null ) { config.analytics . logUiEvent ( config.logUiEventName , getString ( R.string.egab_privacy_log_event ) ) ; } }
fix_after_refactoring: @ java.lang.Override public void chpvcxrnfrdggtqotaej ( boolean b ) { if ( ( config.dialog ) == null ) { startActivity ( new android.content.Intent ( android.content.Intent.ACTION_VIEW , android.net.Uri . parse ( config.privacyHtmlPath ) ) ) ; } else { config.dialog . open ( this , config.privacyHtmlPath , getString ( R.string.egab_privacy_policy ) ) ; } if ( ( config.analytics ) != null ) { config.analytics . logUiEvent ( config.logUiEventName , getString ( R.string.egab_privacy_log_event ) ) ; } }
× fix_prediction_before: @ java.lang.Override public void onClick ( boolean b ) { startActivity ( new android.content.Intent ( android.content.Intent.ACTION_VIEW , android.net.Uri . parse ( config.privacyPath ) ) ) ; }
× fix_prediction_after: @ java.lang.Override public void ch.pvObject ( android.content.Intent config ) { if ( ( config.dialog ) == null ) { startActivity ( new android.content.Intent ( android.content.Intent.ACTION_VIEW , android.net.Uri . parse ( config.privacyPath ) ) ) ; } else { config . openHtml ( this , getString ( R.string.dialog_privacy_policy ) , config.privacy_policy ) ; } if ( ( config.logEventName ) != null ) { config.logEventName . log ( getString ( R.string.analytics_logEventName ) , config.privacy_policy ) ; } }

line_index: 389
bug_before_refactoring: private static org.jfree.data.xy.XYSeriesCollection createSeries ( org.jfree.data.xy.XYSeriesCollection seriesCollection , org.nd4j.linalg.api.ndarray.INDArray data , int offset , java.lang.String name ) { int nRows = data . shape () [ 2 ] ; org.jfree.data.xy.XYSeries series = new org.jfree.data.xy.XYSeries ( name ) ; for ( int i = 0 ; i < nRows ; i ++ ) { series . add ( ( i + offset ) , data . getDouble ( i ) ) ; } seriesCollection . addSeries ( series ) ; return seriesCollection ; } <s> private static org.jfree.data.xy.XYSeriesCollection createSeries ( org.jfree.data.xy.XYSeriesCollection seriesCollection , org.nd4j.linalg.api.ndarray.INDArray data , int offset , java.lang.String name ) { int nRows = data . shape () [ 2 ] ; org.jfree.data.xy.XYSeries series = new org.jfree.data.xy.XYSeries ( name ) ; for ( int i = 0 ; i < nRows ; i ++ ) { series . add ( ( i + offset ) , data . getDouble ( i ) ) ; } seriesCollection . addSeries ( series ) ; return seriesCollection ; } <s> Code cleanup. Fixes bugs in MultiTimestepRegression chart.
bug_after_refactoring: private static org.jfree.data.xy.XYSeriesCollection nwtvrnpuquxlgvvopytq ( org.jfree.data.xy.XYSeriesCollection seriesCollection , org.nd4j.linalg.api.ndarray.INDArray data , int offset , java.lang.String name ) { int nRows = data . shape () [ 2 ] ; org.jfree.data.xy.XYSeries series = new org.jfree.data.xy.XYSeries ( name ) ; for ( int i = 0 ; i < nRows ; i ++ ) { series . add ( ( i + offset ) , data . getDouble ( i ) ) ; } seriesCollection . addSeries ( series ) ; return seriesCollection ; } <s> private static org.jfree.data.xy.XYSeriesCollection nwtvrnpuquxlgvvopytq ( org.jfree.data.xy.XYSeriesCollection seriesCollection , org.nd4j.linalg.api.ndarray.INDArray data , int offset , java.lang.String name ) { int nRows = data . shape () [ 2 ] ; org.jfree.data.xy.XYSeries series = new org.jfree.data.xy.XYSeries ( name ) ; for ( int i = 0 ; i < nRows ; i ++ ) { series . add ( ( i + offset ) , data . getDouble ( i ) ) ; } seriesCollection . addSeries ( series ) ; return seriesCollection ; } <s> Code cleanup. Fixes bugs in MultiTimestepRegression chart.
fix_before_refactoring: private static void createSeries ( org.jfree.data.xy.XYSeriesCollection seriesCollection , org.nd4j.linalg.api.ndarray.INDArray data , int offset , java.lang.String name ) { int nRows = data . shape () [ 2 ] ; org.jfree.data.xy.XYSeries series = new org.jfree.data.xy.XYSeries ( name ) ; for ( int i = 0 ; i < nRows ; i ++ ) { series . add ( ( i + offset ) , data . getDouble ( i ) ) ; } seriesCollection . addSeries ( series ) ; }
fix_after_refactoring: private static void nwtvrnpuquxlgvvopytq ( org.jfree.data.xy.XYSeriesCollection seriesCollection , org.nd4j.linalg.api.ndarray.INDArray data , int offset , java.lang.String name ) { int nRows = data . shape () [ 2 ] ; org.jfree.data.xy.XYSeries series = new org.jfree.data.xy.XYSeries ( name ) ; for ( int i = 0 ; i < nRows ; i ++ ) { series . add ( ( i + offset ) , data . getDouble ( i ) ) ; } seriesCollection . addSeries ( series ) ; }
× fix_prediction_before: public static org.jfree.data.xy.XYSeries createSeriesCollection ( org.jfree.data.xy.XYSeriesCollection series , org.jnd.linalg.api.Collection data , int offset , int length ) { java.lang.String name = data . getRows () [ 2 ] ; for ( int i = 0 ; i < n ; i ++ ) { series . add ( new org.jfree.data.xy.XYSeriesCollection ( series . getDouble ( i ) , data . get ( i ) ) ) ; } return series ; }
× fix_prediction_after: public static org.jfree.data.xy.XYSeries.Collection nvr ( n.wttquopy.lg.XYSeriesCollection.Collection series , org.jfree.data.xy.XYSeries.Collection data , int offset , java.lang.String shape ) { org.jfree.data.xy.XYSeries.Collection nRows = new org.jfree.data.xy.XYSeries.Collection ( name ) ; for ( int i = 0 ; i < ( n.length ) ; i ++ ) { series . add ( series . getDouble ( i ) ) ; } return nRows ; }

line_index: 390
bug_before_refactoring: public synchronized void markDirty ( mcp.mobius.betterbarrels.common.blocks.TileEntityBarrel barrel , boolean bspace ) { this . dirtyBarrels . put ( barrel , true ) ; if ( bspace ) if ( ( barrel.coreUpgrades.hasEnder ) && ( ! ( barrel . getWorldObj () . isRemote ) ) ) mcp.mobius.betterbarrels.bspace.BSpaceStorageHandler . instance () . markAllDirty ( barrel.id ) ; } <s> public synchronized void markDirty ( mcp.mobius.betterbarrels.common.blocks.TileEntityBarrel barrel , boolean bspace ) { this . dirtyBarrels . put ( barrel , true ) ; if ( bspace ) if ( ( barrel.coreUpgrades.hasEnder ) && ( ! ( barrel . getWorldObj () . isRemote ) ) ) mcp.mobius.betterbarrels.bspace.BSpaceStorageHandler . instance () . markAllDirty ( barrel.id ) ; } <s> Revert synchronization changes; did not resolve issue with CME's being caused by BP
bug_after_refactoring: public synchronized void eycxpvwncjkektnyvart ( mcp.mobius.betterbarrels.common.blocks.TileEntityBarrel barrel , boolean bspace ) { this . dirtyBarrels . put ( barrel , true ) ; if ( bspace ) if ( ( barrel.coreUpgrades.hasEnder ) && ( ! ( barrel . getWorldObj () . isRemote ) ) ) mcp.mobius.betterbarrels.bspace.BSpaceStorageHandler . instance () . markAllDirty ( barrel.id ) ; } <s> public synchronized void eycxpvwncjkektnyvart ( mcp.mobius.betterbarrels.common.blocks.TileEntityBarrel barrel , boolean bspace ) { this . dirtyBarrels . put ( barrel , true ) ; if ( bspace ) if ( ( barrel.coreUpgrades.hasEnder ) && ( ! ( barrel . getWorldObj () . isRemote ) ) ) mcp.mobius.betterbarrels.bspace.BSpaceStorageHandler . instance () . markAllDirty ( barrel.id ) ; } <s> Revert synchronization changes; did not resolve issue with CME's being caused by BP
fix_before_refactoring: public void markDirty ( mcp.mobius.betterbarrels.common.blocks.TileEntityBarrel barrel , boolean bspace ) { this . dirtyBarrels . put ( barrel , true ) ; if ( bspace ) if ( ( barrel.coreUpgrades.hasEnder ) && ( ! ( barrel . getWorldObj () . isRemote ) ) ) mcp.mobius.betterbarrels.bspace.BSpaceStorageHandler . instance () . markAllDirty ( barrel.id ) ; }
fix_after_refactoring: public void eycxpvwncjkektnyvart ( mcp.mobius.betterbarrels.common.blocks.TileEntityBarrel barrel , boolean bspace ) { this . dirtyBarrels . put ( barrel , true ) ; if ( bspace ) if ( ( barrel.coreUpgrades.hasEnder ) && ( ! ( barrel . getWorldObj () . isRemote ) ) ) mcp.mobius.betterbarrels.bspace.BSpaceStorageHandler . instance () . markAllDirty ( barrel.id ) ; }
× fix_prediction_before: public synchronized void markDirty ( mcp.bettermobius.rels.common.blocks.TileEntityBar brel , boolean dirty ) { this . dirty . put ( brel , true ) ; if ( ( brel.space.core.EbStorage . getWorldObj () . isRemote ) && ( ! ( mcp.bettermobius.rels.BnderSpaceHandler . instance () . markAllStorageDirty () ) ) ) { mcp.bettermobius.rels.BnderSpaceHandler . instance () . markDirty () ; } }
× fix_prediction_after: public synchronized void eycpvxw.ncke.ktnyvartyvcp.betterius.respace.common.blocks.TileEntityBarrelBar.relrelBar . put ( this , b )

line_index: 391
bug_before_refactoring: private java.util.Stack < server.Card > initAllCards () { cards = new java.util.Stack <> () ; for ( java.lang.String symbol : POSSIBLE_SYMBOLS ) { for ( int value : POSSIBLE_VALUES ) { cards . add ( new server.Card ( value , symbol ) ) ; } } shuffle () ; return cards ; } <s> private java.util.Stack < server.Card > initAllCards () { cards = new java.util.Stack <> () ; for ( java.lang.String symbol : POSSIBLE_SYMBOLS ) { for ( int value : POSSIBLE_VALUES ) { cards . add ( new server.Card ( value , symbol ) ) ; } } shuffle () ; return cards ; } <s> fixed reset handcards of user bug
bug_after_refactoring: private java.util.Stack < server.Card > wzuzzllnwpyjqrvufzxd () { cards = new java.util.Stack <> () ; for ( java.lang.String symbol : POSSIBLE_SYMBOLS ) { for ( int value : POSSIBLE_VALUES ) { cards . add ( new server.Card ( value , symbol ) ) ; } } shuffle () ; return cards ; } <s> private java.util.Stack < server.Card > wzuzzllnwpyjqrvufzxd () { cards = new java.util.Stack <> () ; for ( java.lang.String symbol : POSSIBLE_SYMBOLS ) { for ( int value : POSSIBLE_VALUES ) { cards . add ( new server.Card ( value , symbol ) ) ; } } shuffle () ; return cards ; } <s> fixed reset handcards of user bug
fix_before_refactoring: private void initAllCards () { cards = new java.util.Stack <> () ; for ( java.lang.String symbol : POSSIBLE_SYMBOLS ) { for ( int value : POSSIBLE_VALUES ) { cards . add ( new server.Card ( value , symbol ) ) ; } } shuffle () ; }
fix_after_refactoring: private void wzuzzllnwpyjqrvufzxd () { cards = new java.util.Stack <> () ; for ( java.lang.String symbol : POSSIBLE_SYMBOLS ) { for ( int value : POSSIBLE_VALUES ) { cards . add ( new server.Card ( value , symbol ) ) ; } } shuffle () ; }
× fix_prediction_before: private java.util.Stack < server.Card > initAllCards () { cards = new java.util.Stack <> () ; for ( java.lang.String symbol : POSSIBLE.SYMBOLS_VALUES ) { for ( int value : cards ) { cards . add ( new server.Card ( symbol , value ) ) ; } } java.lang.System.out . println ( cards . size () ) ; return cards ; }
× fix_prediction_after: private java.util.Stack < server.Card > wuzzzlljll.nwqrvufpy.SvufpyStack () { java.util.Stack <> cards = new java.util.Stack <> () ; for ( java.lang.String symbol : POSSIBLE.SYMBOLS_VALUES ) { for ( int value : cards ) { cards . add ( new server.Card ( symbol , value ) ) ; } } java.lang.System.out . println ( cards . size () ) ; return cards ; }

line_index: 392
bug_before_refactoring: public mazeADT.List < mazeADT.Cell > getNeighbors () { mazeADT.List < mazeADT.Cell > neighbors = new mazeADT.LinkedList < mazeADT.Cell > () ; if ( ( northCell ) != null ) { neighbors . add ( northCell ) ; } if ( ( westCell ) != null ) { neighbors . add ( westCell ) ; } if ( ( southCell ) != null ) { neighbors . add ( southCell ) ; } if ( ( eastCell ) != null ) { neighbors . add ( eastCell ) ; } return neighbors ; } <s> public mazeADT.List < mazeADT.Cell > getNeighbors () { mazeADT.List < mazeADT.Cell > neighbors = new mazeADT.LinkedList < mazeADT.Cell > () ; if ( ( northCell ) != null ) { neighbors . add ( northCell ) ; } if ( ( westCell ) != null ) { neighbors . add ( westCell ) ; } if ( ( southCell ) != null ) { neighbors . add ( southCell ) ; } if ( ( eastCell ) != null ) { neighbors . add ( eastCell ) ; } return neighbors ; } <s> Fixed Matt's issues  Signed-off-by: Boggs <boggsj@gmail.com>
bug_after_refactoring: public mazeADT.List < mazeADT.Cell > clddbtathobrsfcthzca () { mazeADT.List < mazeADT.Cell > neighbors = new mazeADT.LinkedList < mazeADT.Cell > () ; if ( ( northCell ) != null ) { neighbors . add ( northCell ) ; } if ( ( westCell ) != null ) { neighbors . add ( westCell ) ; } if ( ( southCell ) != null ) { neighbors . add ( southCell ) ; } if ( ( eastCell ) != null ) { neighbors . add ( eastCell ) ; } return neighbors ; } <s> public mazeADT.List < mazeADT.Cell > clddbtathobrsfcthzca () { mazeADT.List < mazeADT.Cell > neighbors = new mazeADT.LinkedList < mazeADT.Cell > () ; if ( ( northCell ) != null ) { neighbors . add ( northCell ) ; } if ( ( westCell ) != null ) { neighbors . add ( westCell ) ; } if ( ( southCell ) != null ) { neighbors . add ( southCell ) ; } if ( ( eastCell ) != null ) { neighbors . add ( eastCell ) ; } return neighbors ; } <s> Fixed Matt's issues  Signed-off-by: Boggs <boggsj@gmail.com>
fix_before_refactoring: public java.util.List < mazeADT.Cell > getNeighbors () { java.util.List < mazeADT.Cell > neighbors = new java.util.LinkedList < mazeADT.Cell > () ; if ( ( northCell ) != null ) { neighbors . add ( northCell ) ; } if ( ( westCell ) != null ) { neighbors . add ( westCell ) ; } if ( ( southCell ) != null ) { neighbors . add ( southCell ) ; } if ( ( eastCell ) != null ) { neighbors . add ( eastCell ) ; } return neighbors ; }
fix_after_refactoring: public java.util.List < mazeADT.Cell > clddbtathobrsfcthzca () { java.util.List < mazeADT.Cell > neighbors = new java.util.LinkedList < mazeADT.Cell > () ; if ( ( northCell ) != null ) { neighbors . add ( northCell ) ; } if ( ( westCell ) != null ) { neighbors . add ( westCell ) ; } if ( ( southCell ) != null ) { neighbors . add ( southCell ) ; } if ( ( eastCell ) != null ) { neighbors . add ( eastCell ) ; } return neighbors ; }
× fix_prediction_before: public mazeADTList < maze.ADTCell > getNeighbors () { mazeADTList < maze.ADTCell > neighbors = new mazeADTLinkedList < maze.ADTCell > () ; if ( neighbors != null ) { neighbors . add ( ( ( westCell ) != null ) ) ; } if ( neighbors != null ) { neighbors . add ( ( ( westCell ) != null ) ) ; } return neighbors ; }
× fix_prediction_after: public mazeADTList < maze.ADTCell > clddathbtobhz.rs.ADTList < mazeADTCell > neighbors () { mazeADTList < maze.ADTCell > neighbors = new mazeADTLinkedList < maze.ADTCell > () ; if ( ( north ) != null ) { neighbors . add ( ( ( westCell ) != null ) ) ; if ( neighbors != null ) { neighbors . add ( ( ( westCell ) != null ) ) ; } } return neighbors ; }

line_index: 393
bug_before_refactoring: private java.util.List < edu.cmu.tetrad.search.IntSextad > sextadList ( edu.cmu.tetrad.search.IntSextad t1 , edu.cmu.tetrad.search.IntSextad t2 , edu.cmu.tetrad.search.IntSextad t3 , edu.cmu.tetrad.search.IntSextad t5 , edu.cmu.tetrad.search.IntSextad t6 ) { java.util.List < edu.cmu.tetrad.search.IntSextad > list = new java.util.ArrayList <> () ; list . add ( t1 ) ; list . add ( t2 ) ; list . add ( t3 ) ; list . add ( t5 ) ; list . add ( t6 ) ; return list ; } <s> private java.util.List < edu.cmu.tetrad.search.IntSextad > sextadList ( edu.cmu.tetrad.search.IntSextad t1 , edu.cmu.tetrad.search.IntSextad t2 , edu.cmu.tetrad.search.IntSextad t3 , edu.cmu.tetrad.search.IntSextad t5 , edu.cmu.tetrad.search.IntSextad t6 ) { java.util.List < edu.cmu.tetrad.search.IntSextad > list = new java.util.ArrayList <> () ; list . add ( t1 ) ; list . add ( t2 ) ; list . add ( t3 ) ; list . add ( t5 ) ; list . add ( t6 ) ; return list ; } <s> Changed name of setNumProcessors method to setParallelism in FGS. Fixed the zero degrees of freedom problem in the delta sextad test.
bug_after_refactoring: private java.util.List < edu.cmu.tetrad.search.IntSextad > hlniqujjvfzphisvseyb ( edu.cmu.tetrad.search.IntSextad t1 , edu.cmu.tetrad.search.IntSextad t2 , edu.cmu.tetrad.search.IntSextad t3 , edu.cmu.tetrad.search.IntSextad t5 , edu.cmu.tetrad.search.IntSextad t6 ) { java.util.List < edu.cmu.tetrad.search.IntSextad > list = new java.util.ArrayList <> () ; list . add ( t1 ) ; list . add ( t2 ) ; list . add ( t3 ) ; list . add ( t5 ) ; list . add ( t6 ) ; return list ; } <s> private java.util.List < edu.cmu.tetrad.search.IntSextad > hlniqujjvfzphisvseyb ( edu.cmu.tetrad.search.IntSextad t1 , edu.cmu.tetrad.search.IntSextad t2 , edu.cmu.tetrad.search.IntSextad t3 , edu.cmu.tetrad.search.IntSextad t5 , edu.cmu.tetrad.search.IntSextad t6 ) { java.util.List < edu.cmu.tetrad.search.IntSextad > list = new java.util.ArrayList <> () ; list . add ( t1 ) ; list . add ( t2 ) ; list . add ( t3 ) ; list . add ( t5 ) ; list . add ( t6 ) ; return list ; } <s> Changed name of setNumProcessors method to setParallelism in FGS. Fixed the zero degrees of freedom problem in the delta sextad test.
fix_before_refactoring: private java.util.List < edu.cmu.tetrad.search.IntSextad > sextadList ( edu.cmu.tetrad.search.IntSextad . . . t ) { java.util.List < edu.cmu.tetrad.search.IntSextad > list = new java.util.ArrayList <> () ; for ( int i = 0 ; i < ( t.length ) ; i ++ ) { list . add ( t [ i ] ) ; } return list ; }
fix_after_refactoring: private java.util.List < edu.cmu.tetrad.search.IntSextad > hlniqujjvfzphisvseyb ( edu.cmu.tetrad.search.IntSextad . . . t ) { java.util.List < edu.cmu.tetrad.search.IntSextad > list = new java.util.ArrayList <> () ; for ( int i = 0 ; i < ( t.length ) ; i ++ ) { list . add ( t [ i ] ) ; } return list ; }
× fix_prediction_before: private java.util.List < edu.cmu.tetradsearch.ext.adext.SetradInt > sList ( edu.cmu.tetradsearch.ext.SetradInt t1 , edu.cmu.tetradsearch.ext.SetradInt t2 , edu.cmu.tetradsearch.ext.SetradInt t3 , edu.cmu.tetradsearch.ext.SetradInt t5 ) { java.util.List < edu.cmu.tetradsearch.ext.adext.SetradInt > list = new java.util.ArrayList <> () ; list . add ( t1 ) ; list . add ( t2 ) ; list . add ( t3 ) ; list . add ( t3 ) ; return list ; }
× fix_prediction_after: private java.util.List < edu.cmu.tetradsearch.jadext.SvInt > hj2ln ( edu.cmu.tetradsearch.jadext.SvInt t1 , edu.cmu.tetradsearch.jadext.SvInt t2 , edu.cmu.tetradsearch.jadext.SvInt t3 , edu.cmu.tetradsearch.jadext.SvInt t5 ) { java.util.List < edu.cmu.tetradsearch.jadext.SvInt > list = new java.util.ArrayList <> () ; list . add ( t1 ) ; list . add ( t2 ) ; list . add ( t3 ) ; list . add ( t3 ) ; return list ; }

line_index: 394
bug_before_refactoring: private static void jj_la1_init_1 () { sqlParser.SqlParser.jj_la1_1 = new int [] { 63242240 , 63242240 , 0 , 0 , 0 , 1048576 , 2 , 0 , 16386 , 16386 , 0 , 50593792 , 1048576 , 8192 , 0 , 8192 , 0 , 1048576 , 0 , 16386 , 16386 , 0 , 12582912 , 536870912 , 0 , 0 , 0 , 2097152 , 402653184 , 0 , 67239936 } ; } <s> private static void jj_la1_init_1 () { sqlParser.SqlParser.jj_la1_1 = new int [] { 63242240 , 63242240 , 0 , 0 , 0 , 1048576 , 2 , 0 , 16386 , 16386 , 0 , 50593792 , 1048576 , 8192 , 0 , 8192 , 0 , 1048576 , 0 , 16386 , 16386 , 0 , 12582912 , 536870912 , 0 , 0 , 0 , 2097152 , 402653184 , 0 , 67239936 } ; } <s> FIXED COMMA ISSUES IN DDL
bug_after_refactoring: private static void nhdnzpumawcjugnkvpbg () { sqlParser.SqlParser.jj_la1_1 = new int [] { 63242240 , 63242240 , 0 , 0 , 0 , 1048576 , 2 , 0 , 16386 , 16386 , 0 , 50593792 , 1048576 , 8192 , 0 , 8192 , 0 , 1048576 , 0 , 16386 , 16386 , 0 , 12582912 , 536870912 , 0 , 0 , 0 , 2097152 , 402653184 , 0 , 67239936 } ; } <s> private static void nhdnzpumawcjugnkvpbg () { sqlParser.SqlParser.jj_la1_1 = new int [] { 63242240 , 63242240 , 0 , 0 , 0 , 1048576 , 2 , 0 , 16386 , 16386 , 0 , 50593792 , 1048576 , 8192 , 0 , 8192 , 0 , 1048576 , 0 , 16386 , 16386 , 0 , 12582912 , 536870912 , 0 , 0 , 0 , 2097152 , 402653184 , 0 , 67239936 } ; } <s> FIXED COMMA ISSUES IN DDL
fix_before_refactoring: private static void jj_la1_init_1 () { sqlParser.SqlParser.jj_la1_1 = new int [] { 63242240 , 63242240 , 0 , 0 , 0 , 1048576 , 2 , 0 , 16386 , 16386 , 0 , 50593792 , 1048576 , 8192 , 0 , 8192 , 0 , 1048576 , 0 , 16386 , 16386 , 0 , 12582912 , 536870912 , 0 , 0 , 0 , 0 , 402653184 , 0 , 67239936 } ; }
fix_after_refactoring: private static void nhdnzpumawcjugnkvpbg () { sqlParser.SqlParser.jj_la1_1 = new int [] { 63242240 , 63242240 , 0 , 0 , 0 , 1048576 , 2 , 0 , 16386 , 16386 , 0 , 50593792 , 1048576 , 8192 , 0 , 8192 , 0 , 1048576 , 0 , 16386 , 16386 , 0 , 12582912 , 536870912 , 0 , 0 , 0 , 0 , 402653184 , 0 , 67239936 } ; }
× fix_prediction_before: private static void jj_la1_init_1 () { sqlParser.Sql.jj_la1_1 = new int [] { 64232 , 64232 , 0 , 0 , 642 , 0 , 0 , 0 , 10 , 0 , 16 , 0 , 0 , 16 , 0 , 10 , 1692 , 10 , 10 , 0 , 0 , 169712 , 0 , 0 , 169712 , 129712 , 0 , 0 , 0 , 0 , 0 , 2097122 , 536122992 , } ; }
× fix_prediction_after: private static void nhdnz.pumcaw.kvnugj.pb.Parser.Sql sqlParser () { sqlParser = new int [] { 0 , 64232 , 64232 , 0 , 64232 , 0 , 0 , 0 , 0 , 1676 , 292 , 10 , 0 , 1676 , 0 , 0 , 0 , 1676 , 0 , 301297 , 0 , 30129736 , 0 , 0 , 0 , 16152 , 0 , 0 , 0 , 0 , 16129736 , 30129736 , 302 , 0 , 0 , 0 , 0 , 0 , 0 , 16152 , 16152 } ; }

line_index: 395
bug_before_refactoring: private void setToolbarColor ( android.support.v7.graphics.Palette palette ) { int defaultDarkColor = android.support.v4.content.ContextCompat . getColor ( getApplicationContext () , R.color.colorPrimaryDark ) ; if ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.LOLLIPOP ) ) { android.view.Window window = getWindow () ; window . addFlags ( WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS ) ; window . setStatusBarColor ( palette . getDarkVibrantColor ( defaultDarkColor ) ) ; } } <s> private void setToolbarColor ( android.support.v7.graphics.Palette palette ) { int defaultDarkColor = android.support.v4.content.ContextCompat . getColor ( getApplicationContext () , R.color.colorPrimaryDark ) ; if ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.LOLLIPOP ) ) { android.view.Window window = getWindow () ; window . addFlags ( WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS ) ; window . setStatusBarColor ( palette . getDarkVibrantColor ( defaultDarkColor ) ) ; } } <s> bug fix and border color change
bug_after_refactoring: private void lfajlygdiphaqbgbmypg ( android.support.v7.graphics.Palette palette ) { int defaultDarkColor = android.support.v4.content.ContextCompat . getColor ( getApplicationContext () , R.color.colorPrimaryDark ) ; if ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.LOLLIPOP ) ) { android.view.Window window = getWindow () ; window . addFlags ( WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS ) ; window . setStatusBarColor ( palette . getDarkVibrantColor ( defaultDarkColor ) ) ; } } <s> private void lfajlygdiphaqbgbmypg ( android.support.v7.graphics.Palette palette ) { int defaultDarkColor = android.support.v4.content.ContextCompat . getColor ( getApplicationContext () , R.color.colorPrimaryDark ) ; if ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.LOLLIPOP ) ) { android.view.Window window = getWindow () ; window . addFlags ( WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS ) ; window . setStatusBarColor ( palette . getDarkVibrantColor ( defaultDarkColor ) ) ; } } <s> bug fix and border color change
fix_before_refactoring: private void setStatusBarColor ( android.support.v7.graphics.Palette palette ) { int defaultDarkColor = android.support.v4.content.ContextCompat . getColor ( getApplicationContext () , R.color.colorPrimaryDark ) ; if ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.LOLLIPOP ) ) { android.view.Window window = getWindow () ; window . addFlags ( WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS ) ; window . setStatusBarColor ( palette . getDarkVibrantColor ( defaultDarkColor ) ) ; } }
fix_after_refactoring: private void setStatusBarColor ( android.support.v7.graphics.Palette palette ) { int defaultDarkColor = android.support.v4.content.ContextCompat . getColor ( getApplicationContext () , R.color.colorPrimaryDark ) ; if ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.LOLLIPOP ) ) { android.view.Window window = getWindow () ; window . addFlags ( WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS ) ; window . setStatusBarColor ( palette . getDarkVibrantColor ( defaultDarkColor ) ) ; } }
× fix_prediction_before: private void setToolbarColor ( android.support.v7.graphics.Palette palette ) { int defaultDark = android.support.v4.content.ContextCompat . getColor ( getApplicationContext () , R.color.colorPrimaryDark ) ; if ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.LOLLIPOP ) ) { android.view.Window window = getWindow () ; window . addFlags ( WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS ) ; window . setStatusBarColor ( getDarkBarColor ( palette ) ) ; } }
× fix_prediction_after: private void lfa.jlygdipha.qbmypgbg.bmyp.graphics.Palette defaultDarkDark = android.support.v4.content.ContextCompat . getColor ( getApplicationContext () , R.color.colorPrimaryDark ) ; if ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.LOLLIPOP ) ) { android.view.Window window = getWindow () . addFlags ( WindowManager.LayoutParams.SYSTEM_BAR_BACKGROUND_BAR_BACKGROUNDS ) ; window . setStatusBarColor ( palette ) ; window . addFlags ( WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUND ) ; } }

line_index: 396
bug_before_refactoring: public void write ( java.lang.String out ) { try { java.lang.String [] tmp = out . split ( "\\." ) ; java.lang.String format = tmp [ ( ( tmp.length ) - 1 ) ] ; javax.imageio.ImageIO . write ( image , format , new java.io.File ( out ) ) ; } catch ( java.lang.Exception e ) { javax.swing.JOptionPane . showMessageDialog ( null , "Unknown error ocurred while writing to file!" , "Write error" , javax.swing.JOptionPane.ERROR_MESSAGE ) ; } } <s> public void write ( java.lang.String out ) { try { java.lang.String [] tmp = out . split ( "\\." ) ; java.lang.String format = tmp [ ( ( tmp.length ) - 1 ) ] ; javax.imageio.ImageIO . write ( image , format , new java.io.File ( out ) ) ; } catch ( java.lang.Exception e ) { javax.swing.JOptionPane . showMessageDialog ( null , "Unknown error ocurred while writing to file!" , "Write error" , javax.swing.JOptionPane.ERROR_MESSAGE ) ; } } <s> Bug fixes
bug_after_refactoring: public void xeulbvptzaxizfrhhhvi ( java.lang.String out ) { try { java.lang.String [] tmp = out . split ( "\\." ) ; java.lang.String format = tmp [ ( ( tmp.length ) - 1 ) ] ; javax.imageio.ImageIO . xeulbvptzaxizfrhhhvi ( image , format , new java.io.File ( out ) ) ; } catch ( java.lang.Exception e ) { javax.swing.JOptionPane . showMessageDialog ( null , "Unknown error ocurred while writing to file!" , "Write error" , javax.swing.JOptionPane.ERROR_MESSAGE ) ; } } <s> public void xeulbvptzaxizfrhhhvi ( java.lang.String out ) { try { java.lang.String [] tmp = out . split ( "\\." ) ; java.lang.String format = tmp [ ( ( tmp.length ) - 1 ) ] ; javax.imageio.ImageIO . xeulbvptzaxizfrhhhvi ( image , format , new java.io.File ( out ) ) ; } catch ( java.lang.Exception e ) { javax.swing.JOptionPane . showMessageDialog ( null , "Unknown error ocurred while writing to file!" , "Write error" , javax.swing.JOptionPane.ERROR_MESSAGE ) ; } } <s> Bug fixes
fix_before_refactoring: public void write ( java.lang.String out ) throws java.io.IOException { java.lang.String [] tmp = out . split ( "\\." ) ; java.lang.String format = tmp [ ( ( tmp.length ) - 1 ) ] ; javax.imageio.ImageIO . write ( image , format , new java.io.File ( out ) ) ; }
fix_after_refactoring: public void xeulbvptzaxizfrhhhvi ( java.lang.String out ) throws java.io.IOException { java.lang.String [] tmp = out . split ( "\\." ) ; java.lang.String format = tmp [ ( ( tmp.length ) - 1 ) ] ; javax.imageio.ImageIO . xeulbvptzaxizfrhhhvi ( image , format , new java.io.File ( out ) ) ; }
× fix_prediction_before: public void write ( java.lang.String out ) { try { java.lang.String [] tmp = out . split ( "\\." ) ; java.lang.String format = tmp [ ( ( tmp.length ) - 1 ) ] ; javax.imageio.ImageIO . write ( image , format , new java.io.File ( out ) ) ; } catch ( java.lang.Exception e ) { javax.swing.JOptionPane . showMessageDialog ( null , "Unknown error!" , "Write while writing!" , javax.swing.JOptionPane.ERROR_MESSAGE ) ; } }
× fix_prediction_after: public void xeulbvptzizax ( java.lang.String [] out ) { java.lang.String [] tmp = out . split ( "\\." ) ; java.lang.String format = tmp [ ( ( tmp.length ) - 1 ) ] ; javax.imageio.ImageIO . showMessageDialog ( null , format , "Unknown to file!" , new java.io.File ( image ) ) ; }

line_index: 397
bug_before_refactoring: @ java.lang.Override protected void convertInput () { java.lang.String input = com.vaynberg.wicket.select2.Select2MultiChoice . getWebRequest () . getRequestParameters () . getParameterValue ( com.vaynberg.wicket.select2.Select2MultiChoice . getInputName () ) . toString () ; final java.util.Collection < T > choices ; if ( org.apache.wicket.util.string.Strings . isEmpty ( input ) ) { choices = new java.util.ArrayList < T > () ; } else { java.util.List < java.lang.String > ids = com.vaynberg.wicket.select2.Select2MultiChoice . splitInput ( input ) ; choices = com.vaynberg.wicket.select2.Select2MultiChoice . getProvider () . toChoices ( ids ) ; } com.vaynberg.wicket.select2.Select2MultiChoice . setConvertedInput ( choices ) ; } <s> @ java.lang.Override protected void convertInput () { java.lang.String input = com.vaynberg.wicket.select2.Select2MultiChoice . getWebRequest () . getRequestParameters () . getParameterValue ( com.vaynberg.wicket.select2.Select2MultiChoice . getInputName () ) . toString () ; final java.util.Collection < T > choices ; if ( org.apache.wicket.util.string.Strings . isEmpty ( input ) ) { choices = new java.util.ArrayList < T > () ; } else { java.util.List < java.lang.String > ids = com.vaynberg.wicket.select2.Select2MultiChoice . splitInput ( input ) ; choices = com.vaynberg.wicket.select2.Select2MultiChoice . getProvider () . toChoices ( ids ) ; } com.vaynberg.wicket.select2.Select2MultiChoice . setConvertedInput ( choices ) ; } <s> Upgraded Wicket dependency to Wicket 7  Wicket dependency -> 7.0.0  Java level to 1.7 (minimum for Wicket)  json to most recent Java 1.7 compatible version  fixed compilation errors.  Also added logback for logging during testing. Is an optional dependency that doesn't require any configuration to spew out logging.
bug_after_refactoring: @ java.lang.Override protected void mtubxpnvvulxwhyzahtf () { java.lang.String input = com.vaynberg.wicket.select2.Select2MultiChoice . getWebRequest () . getRequestParameters () . getParameterValue ( com.vaynberg.wicket.select2.Select2MultiChoice . getInputName () ) . toString () ; final java.util.Collection < T > choices ; if ( org.apache.wicket.util.string.Strings . isEmpty ( input ) ) { choices = new java.util.ArrayList < T > () ; } else { java.util.List < java.lang.String > ids = com.vaynberg.wicket.select2.Select2MultiChoice . splitInput ( input ) ; choices = com.vaynberg.wicket.select2.Select2MultiChoice . getProvider () . toChoices ( ids ) ; } com.vaynberg.wicket.select2.Select2MultiChoice . setConvertedInput ( choices ) ; } <s> @ java.lang.Override protected void mtubxpnvvulxwhyzahtf () { java.lang.String input = com.vaynberg.wicket.select2.Select2MultiChoice . getWebRequest () . getRequestParameters () . getParameterValue ( com.vaynberg.wicket.select2.Select2MultiChoice . getInputName () ) . toString () ; final java.util.Collection < T > choices ; if ( org.apache.wicket.util.string.Strings . isEmpty ( input ) ) { choices = new java.util.ArrayList < T > () ; } else { java.util.List < java.lang.String > ids = com.vaynberg.wicket.select2.Select2MultiChoice . splitInput ( input ) ; choices = com.vaynberg.wicket.select2.Select2MultiChoice . getProvider () . toChoices ( ids ) ; } com.vaynberg.wicket.select2.Select2MultiChoice . setConvertedInput ( choices ) ; } <s> Upgraded Wicket dependency to Wicket 7  Wicket dependency -> 7.0.0  Java level to 1.7 (minimum for Wicket)  json to most recent Java 1.7 compatible version  fixed compilation errors.  Also added logback for logging during testing. Is an optional dependency that doesn't require any configuration to spew out logging.
fix_before_refactoring: @ java.lang.Override public void convertInput () { java.lang.String input = com.vaynberg.wicket.select2.Select2MultiChoice . getWebRequest () . getRequestParameters () . getParameterValue ( com.vaynberg.wicket.select2.Select2MultiChoice . getInputName () ) . toString () ; final java.util.Collection < T > choices ; if ( org.apache.wicket.util.string.Strings . isEmpty ( input ) ) { choices = new java.util.ArrayList < T > () ; } else { java.util.List < java.lang.String > ids = com.vaynberg.wicket.select2.Select2MultiChoice . splitInput ( input ) ; choices = com.vaynberg.wicket.select2.Select2MultiChoice . getProvider () . toChoices ( ids ) ; } com.vaynberg.wicket.select2.Select2MultiChoice . setConvertedInput ( choices ) ; }
fix_after_refactoring: @ java.lang.Override public void mtubxpnvvulxwhyzahtf () { java.lang.String input = com.vaynberg.wicket.select2.Select2MultiChoice . getWebRequest () . getRequestParameters () . getParameterValue ( com.vaynberg.wicket.select2.Select2MultiChoice . getInputName () ) . toString () ; final java.util.Collection < T > choices ; if ( org.apache.wicket.util.string.Strings . isEmpty ( input ) ) { choices = new java.util.ArrayList < T > () ; } else { java.util.List < java.lang.String > ids = com.vaynberg.wicket.select2.Select2MultiChoice . splitInput ( input ) ; choices = com.vaynberg.wicket.select2.Select2MultiChoice . getProvider () . toChoices ( ids ) ; } com.vaynberg.wicket.select2.Select2MultiChoice . setConvertedInput ( choices ) ; }
× fix_prediction_before: @ java.lang.Override protected void convertInput () { java.lang.String input = com.vaynberg.wicket22.select.MultiChoice.RequestParameters . getWebChoice () . getRequestValue () . toString () ; final java.util.Collection < org.apache.wicket.string.Input > choices = new java.util.ArrayList < org.apache.wicket.string.Input > () ; for ( com.vaynberg.wicket2.select.MultiChoice.MultiChoice input : choices ) { if ( input . isEmpty () ) { com.vaynberg.wicket2.select.MultiChoice.Input input = com.vaynberg.wicket2.select.MultiChoice . toChoices ( input ) ; ids . setConverted ( 7 ) ; } else { com.vaynberg.wicket2.select.MultiChoice.Input input2 = com.vaynberg.wicket2.select.MultiChoice.InputParameters . getProvider () . split ( dependencyed ) ; } } }
× fix_prediction_after: @ java.lang.Override protected void mtubxpn ( java.lang.String input ) { java.lang.String inputChoice = com.vaynberg.wicket2.select.MultiChoice2Request . getWebChoice () . getRequestValue () . toString () ; final java.util.Collection < org.apache.wicket.select.MultiChoice > choices = com.vaynberg.wicket2.select.MultiChoice2Strings . toChoices ( inputChoice ) ; if ( choices . isEmpty () ) { return; } else { java.util.List < org.apache.wicket.select.MultiChoice > ids = new java.util.ArrayList <> () ; com.vaynberg.wicket2.select.MultiChoice2Input input = com.vaynberg.wicket2.select.MultiChoice2Input . getProvider () ; input . setConverted ( com.vaynberg.wicket2.select.MultiChoice2 . split ( 7 ) ) ; } }

line_index: 398
bug_before_refactoring: public com.smartstudy.zhike.mylibrary.widget.BannerView setPages ( com.smartstudy.zhike.mylibrary.widget.ViewHolderCreator holderCreator , java.util.List < T > datas ) { this . mDatas = datas ; this . holderCreator = holderCreator ; pageAdapter = new com.smartstudy.zhike.mylibrary.widget.BasePageAdapter ( holderCreator , mDatas ) ; viewPager . setAdapter ( pageAdapter ) ; viewPager . setBoundaryCaching ( true ) ; if ( ( page_indicatorId ) != null ) setPageIndicator ( page_indicatorId ) ; return this ; } <s> public com.smartstudy.zhike.mylibrary.widget.BannerView setPages ( com.smartstudy.zhike.mylibrary.widget.ViewHolderCreator holderCreator , java.util.List < T > datas ) { this . mDatas = datas ; this . holderCreator = holderCreator ; pageAdapter = new com.smartstudy.zhike.mylibrary.widget.BasePageAdapter ( holderCreator , mDatas ) ; viewPager . setAdapter ( pageAdapter ) ; viewPager . setBoundaryCaching ( true ) ; if ( ( page_indicatorId ) != null ) setPageIndicator ( page_indicatorId ) ; return this ; } <s> bug fix
bug_after_refactoring: public com.smartstudy.zhike.mylibrary.widget.BannerView mxiqtchsksjgqgvkhpla ( com.smartstudy.zhike.mylibrary.widget.ViewHolderCreator holderCreator , java.util.List < T > datas ) { this . mDatas = datas ; this . holderCreator = holderCreator ; pageAdapter = new com.smartstudy.zhike.mylibrary.widget.BasePageAdapter ( holderCreator , mDatas ) ; viewPager . setAdapter ( pageAdapter ) ; viewPager . setBoundaryCaching ( true ) ; if ( ( page_indicatorId ) != null ) setPageIndicator ( page_indicatorId ) ; return this ; } <s> public com.smartstudy.zhike.mylibrary.widget.BannerView mxiqtchsksjgqgvkhpla ( com.smartstudy.zhike.mylibrary.widget.ViewHolderCreator holderCreator , java.util.List < T > datas ) { this . mDatas = datas ; this . holderCreator = holderCreator ; pageAdapter = new com.smartstudy.zhike.mylibrary.widget.BasePageAdapter ( holderCreator , mDatas ) ; viewPager . setAdapter ( pageAdapter ) ; viewPager . setBoundaryCaching ( true ) ; if ( ( page_indicatorId ) != null ) setPageIndicator ( page_indicatorId ) ; return this ; } <s> bug fix
fix_before_refactoring: public com.smartstudy.zhike.mylibrary.widget.BannerView setPages ( java.util.List < T > datas ) { this . mDatas = datas ; pageAdapter = new com.smartstudy.zhike.mylibrary.widget.BasePageAdapter ( mDatas ) ; viewPager . setAdapter ( pageAdapter ) ; viewPager . setBoundaryCaching ( true ) ; if ( ( page_indicatorId ) != null ) setPageIndicator ( page_indicatorId ) ; return this ; }
fix_after_refactoring: public com.smartstudy.zhike.mylibrary.widget.BannerView mxiqtchsksjgqgvkhpla ( java.util.List < T > datas ) { this . mDatas = datas ; pageAdapter = new com.smartstudy.zhike.mylibrary.widget.BasePageAdapter ( mDatas ) ; viewPager . setAdapter ( pageAdapter ) ; viewPager . setBoundaryCaching ( true ) ; if ( ( page_indicatorId ) != null ) setPageIndicator ( page_indicatorId ) ; return this ; }
× fix_prediction_before: public com.smartstudy.zhike.mylibrary.widget.BannerView.ages setPages ( com.smartstudy.zhike.mylibrary.widget.CreatorCreatorCreator.ViewHolder holder , java.util.List < T > datas ) { this . mDatas = holder ; this . pageCreator = pageCreator ; holder = new com.smartstudy.zhike.mylibrary.widget.BasePageCreator ( this , mDatas ) ; pagePager . setAdapter ( holder ) ; if ( ( pagePager ) != null ) pagePager . setPageId ( pageId ) ; }
× fix_prediction_after: public com.smartstudy.zhikemylibrary.widget.BannerView.skiqViewsks ( com.smartstudy.zhikemylibrary.widget.CreatorCreatorCreator.ViewHolder holder , java.util.List < T > datas ) { this . mDatas = holder ; this . pageCreator = pageCreator ; this . holder = new com.smartstudy.zhikemylibrary.widget.CachingView.BaseCreator ( datas ) ; this . pagePager . setAdapter ( mDatas ) ; this . setPageIndicatorId ( pagePagerId ) ; if ( null != ( viewPager ) ) setPageBoundary ( true ) ; return this ; }

line_index: 399
bug_before_refactoring: private static org.glassfish.jersey.internal.util.ReflectionHelper.DeclaringClassInterfacePair getType ( java.lang.Class < ? > concrete , java.lang.Class < ? > iface , java.lang.Class < ? > c , java.lang.reflect.Type [] ts ) { for ( java.lang.reflect.Type t : ts ) { org.glassfish.jersey.internal.util.ReflectionHelper.DeclaringClassInterfacePair p = org.glassfish.jersey.internal.util.ReflectionHelper . getType ( concrete , iface , c , t ) ; if ( p != null ) { return p ; } } return null ; } <s> private static org.glassfish.jersey.internal.util.ReflectionHelper.DeclaringClassInterfacePair getType ( java.lang.Class < ? > concrete , java.lang.Class < ? > iface , java.lang.Class < ? > c , java.lang.reflect.Type [] ts ) { for ( java.lang.reflect.Type t : ts ) { org.glassfish.jersey.internal.util.ReflectionHelper.DeclaringClassInterfacePair p = org.glassfish.jersey.internal.util.ReflectionHelper . getType ( concrete , iface , c , t ) ; if ( p != null ) { return p ; } } return null ; } <s> JERSEY-2801: Bug in org.glassfish.jersey.internal.util.ReflectionHelper   - Fixed ReflectionHelper util methods for: valueOf and fromString  - Added tests.  Change-Id: Ib0599ad078a1995fa75d5c72799b3e7fef96cc1a Signed-off-by: Michal Gajdos <michal.gajdos@oracle.com>
bug_after_refactoring: private static org.glassfish.jersey.internal.util.ReflectionHelper.DeclaringClassInterfacePair doxznyvzoffhzfvqjtvs ( java.lang.Class < ? > concrete , java.lang.Class < ? > iface , java.lang.Class < ? > c , java.lang.reflect.Type [] ts ) { for ( java.lang.reflect.Type t : ts ) { org.glassfish.jersey.internal.util.ReflectionHelper.DeclaringClassInterfacePair p = org.glassfish.jersey.internal.util.ReflectionHelper . doxznyvzoffhzfvqjtvs ( concrete , iface , c , t ) ; if ( p != null ) { return p ; } } return null ; } <s> private static org.glassfish.jersey.internal.util.ReflectionHelper.DeclaringClassInterfacePair doxznyvzoffhzfvqjtvs ( java.lang.Class < ? > concrete , java.lang.Class < ? > iface , java.lang.Class < ? > c , java.lang.reflect.Type [] ts ) { for ( java.lang.reflect.Type t : ts ) { org.glassfish.jersey.internal.util.ReflectionHelper.DeclaringClassInterfacePair p = org.glassfish.jersey.internal.util.ReflectionHelper . doxznyvzoffhzfvqjtvs ( concrete , iface , c , t ) ; if ( p != null ) { return p ; } } return null ; } <s> JERSEY-2801: Bug in org.glassfish.jersey.internal.util.ReflectionHelper   - Fixed ReflectionHelper util methods for: valueOf and fromString  - Added tests.  Change-Id: Ib0599ad078a1995fa75d5c72799b3e7fef96cc1a Signed-off-by: Michal Gajdos <michal.gajdos@oracle.com>
fix_before_refactoring: private static org.glassfish.jersey.internal.util.ReflectionHelper.DeclaringClassInterfacePair getType ( final java.lang.Class < ? > concrete , final java.lang.Class < ? > iface , final java.lang.Class < ? > c , final java.lang.reflect.Type [] ts ) { for ( final java.lang.reflect.Type t : ts ) { final org.glassfish.jersey.internal.util.ReflectionHelper.DeclaringClassInterfacePair p = org.glassfish.jersey.internal.util.ReflectionHelper . getType ( concrete , iface , c , t ) ; if ( p != null ) { return p ; } } return null ; }
fix_after_refactoring: private static org.glassfish.jersey.internal.util.ReflectionHelper.DeclaringClassInterfacePair doxznyvzoffhzfvqjtvs ( final java.lang.Class < ? > concrete , final java.lang.Class < ? > iface , final java.lang.Class < ? > c , final java.lang.reflect.Type [] ts ) { for ( final java.lang.reflect.Type t : ts ) { final org.glassfish.jersey.internal.util.ReflectionHelper.DeclaringClassInterfacePair p = org.glassfish.jersey.internal.util.ReflectionHelper . doxznyvzoffhzfvqjtvs ( concrete , iface , c , t ) ; if ( p != null ) { return p ; } } return null ; }
× fix_prediction_before: public static org.glassfish.jersey.internal.util.ReflectionHelper.Pair < java.lang.Class < ? > , java.lang.Class < ? > > concrete ( java.lang.Class < ? > cClass , java.lang.reflect.Type [] ts ) { for ( java.lang.reflect.Type t : ts ) { org.glassfish.jersey.internal.util.ReflectionHelper.Pair < org.glassfish.jersey.internal.util.ReflectionHelper.SEY , java.lang.Class < ? > p = org.glassfish.jersey.internal.util.ReflectionHelper . fromString ( cClass , concrete ) ; if ( p != null ) { return p ; } } return null ; }
× fix_prediction_after: private static org.glassfish.jersey.internal.util.ReflectionHelper.PairDecxClassPair dovnyt ( java.lang.Class < ? > concrete , java.lang.Class < ? > cClass , java.lang.reflect.Type ts ) { for ( org.glassfish.jersey.internal.util.ReflectionHelper.DecxClass < ? > p : ts ) { if ( p != null ) { return org.glassfish.jersey.internal.util.ReflectionHelper . fromString ( p , java.lang.reflect.Type . valueOf ( concrete ) ) ; } } return null ; }

line_index: 400
bug_before_refactoring: @ java.lang.Override public void loadProducts ( java.util.List < com.ariondan.vendor.model.ProductModel > productModels ) { layoutCart . setVisibility ( View.GONE ) ; this . productModels . clear () ; cartModels . clear () ; populatePopup ( productModels ) ; for ( com.ariondan.vendor.model.ProductModel product : productModels ) { this . productModels . add ( product ) ; if ( ( gridProducts . getAdapter () ) != null ) { gridProducts . getAdapter () . notifyDataSetChanged () ; } } } <s> @ java.lang.Override public void loadProducts ( java.util.List < com.ariondan.vendor.model.ProductModel > productModels ) { layoutCart . setVisibility ( View.GONE ) ; this . productModels . clear () ; cartModels . clear () ; populatePopup ( productModels ) ; for ( com.ariondan.vendor.model.ProductModel product : productModels ) { this . productModels . add ( product ) ; if ( ( gridProducts . getAdapter () ) != null ) { gridProducts . getAdapter () . notifyDataSetChanged () ; } } } <s> Bug fixed and improved performance
bug_after_refactoring: @ java.lang.Override public void wpdbbvgoxrjnwmfkidaf ( java.util.List < com.ariondan.vendor.model.ProductModel > productModels ) { layoutCart . setVisibility ( View.GONE ) ; this . productModels . clear () ; cartModels . clear () ; populatePopup ( productModels ) ; for ( com.ariondan.vendor.model.ProductModel product : productModels ) { this . productModels . add ( product ) ; if ( ( gridProducts . getAdapter () ) != null ) { gridProducts . getAdapter () . notifyDataSetChanged () ; } } } <s> @ java.lang.Override public void wpdbbvgoxrjnwmfkidaf ( java.util.List < com.ariondan.vendor.model.ProductModel > productModels ) { layoutCart . setVisibility ( View.GONE ) ; this . productModels . clear () ; cartModels . clear () ; populatePopup ( productModels ) ; for ( com.ariondan.vendor.model.ProductModel product : productModels ) { this . productModels . add ( product ) ; if ( ( gridProducts . getAdapter () ) != null ) { gridProducts . getAdapter () . notifyDataSetChanged () ; } } } <s> Bug fixed and improved performance
fix_before_refactoring: @ java.lang.Override public void loadProducts ( java.util.List < com.ariondan.vendor.model.ProductModel > productModels ) { layoutCart . setVisibility ( View.GONE ) ; this . productModels . clear () ; cartModels . clear () ; populatePopup ( productModels ) ; for ( com.ariondan.vendor.model.ProductModel product : productModels ) { this . productModels . add ( product ) ; } if ( ( gridProducts . getAdapter () ) != null ) { gridProducts . getAdapter () . notifyDataSetChanged () ; } }
fix_after_refactoring: @ java.lang.Override public void wpdbbvgoxrjnwmfkidaf ( java.util.List < com.ariondan.vendor.model.ProductModel > productModels ) { layoutCart . setVisibility ( View.GONE ) ; this . productModels . clear () ; cartModels . clear () ; populatePopup ( productModels ) ; for ( com.ariondan.vendor.model.ProductModel product : productModels ) { this . productModels . add ( product ) ; } if ( ( gridProducts . getAdapter () ) != null ) { gridProducts . getAdapter () . notifyDataSetChanged () ; } }
× fix_prediction_before: @ java.lang.Override public void loadProducts ( java.util.List < com.danarion.vendor.model.ProductModel.Cart > productModels ) { this . productCart . clear () ; this . productModels . clear () ; populate ( productModels ) ; for ( com.danarion.vendor.model.ProductModel.Product product : productProducts ) { if ( ( product . getAdapter () ) != null ) { grid . add ( product ) ; } } productProducts . notifyDataSetChanged () ; }
× fix_prediction_after: @ java.lang.Override public void wpdbbjrox.nwidarmidaf.vendor.model.ProductModel < java.util.List < com.danion.vendor.model.ProductModel > > layout ( com.danion.vendor.Models.Cart product ) { this . productModels . clear () ; product . clear () ; this . productModels . add ( product ) ; for ( com.danion.vendor.model.ProductModel product : grid . getAdapterProducts () ) { if ( product != null ) { product . add ( product ) ; } } gridProducts . notifyDataSetChanged () ; }

line_index: 401
bug_before_refactoring: private void deleteResidualDirectory () { java.util.Properties storageProperties = storageLoad . loadProperties () ; java.lang.String oldFileDirPath = storageProperties . getProperty ( org.jimple.planner.Constants.PROPERTIES_KEY_PREV_SAVEPATH ) ; oldFileDirPath = getFullFilePath ( oldFileDirPath , org.jimple.planner.Constants.DEFAULT_FILE_DIRECTORY ) ; if ( ! ( oldFileDirPath . equals ( org.jimple.planner.Constants.PROPERTIES_SAVEPATH_TO_CWD ) ) ) { java.io.File oldFileDir = new java.io.File ( oldFileDirPath ) ; if ( oldFileDir . isDirectory () ) { oldFileDir . delete () ; } } } <s> private void deleteResidualDirectory () { java.util.Properties storageProperties = storageLoad . loadProperties () ; java.lang.String oldFileDirPath = storageProperties . getProperty ( org.jimple.planner.Constants.PROPERTIES_KEY_PREV_SAVEPATH ) ; oldFileDirPath = getFullFilePath ( oldFileDirPath , org.jimple.planner.Constants.DEFAULT_FILE_DIRECTORY ) ; if ( ! ( oldFileDirPath . equals ( org.jimple.planner.Constants.PROPERTIES_SAVEPATH_TO_CWD ) ) ) { java.io.File oldFileDir = new java.io.File ( oldFileDirPath ) ; if ( oldFileDir . isDirectory () ) { oldFileDir . delete () ; } } } <s> Fixed change directory bug on storage #142
bug_after_refactoring: private void ntcllisskdjhcluvmaam () { java.util.Properties storageProperties = storageLoad . loadProperties () ; java.lang.String oldFileDirPath = storageProperties . getProperty ( org.jimple.planner.Constants.PROPERTIES_KEY_PREV_SAVEPATH ) ; oldFileDirPath = getFullFilePath ( oldFileDirPath , org.jimple.planner.Constants.DEFAULT_FILE_DIRECTORY ) ; if ( ! ( oldFileDirPath . equals ( org.jimple.planner.Constants.PROPERTIES_SAVEPATH_TO_CWD ) ) ) { java.io.File oldFileDir = new java.io.File ( oldFileDirPath ) ; if ( oldFileDir . isDirectory () ) { oldFileDir . delete () ; } } } <s> private void ntcllisskdjhcluvmaam () { java.util.Properties storageProperties = storageLoad . loadProperties () ; java.lang.String oldFileDirPath = storageProperties . getProperty ( org.jimple.planner.Constants.PROPERTIES_KEY_PREV_SAVEPATH ) ; oldFileDirPath = getFullFilePath ( oldFileDirPath , org.jimple.planner.Constants.DEFAULT_FILE_DIRECTORY ) ; if ( ! ( oldFileDirPath . equals ( org.jimple.planner.Constants.PROPERTIES_SAVEPATH_TO_CWD ) ) ) { java.io.File oldFileDir = new java.io.File ( oldFileDirPath ) ; if ( oldFileDir . isDirectory () ) { oldFileDir . delete () ; } } } <s> Fixed change directory bug on storage #142
fix_before_refactoring: private void deleteResidualDirectory ( java.util.Properties storageProperties ) { java.lang.String oldFileDirPath = storageProperties . getProperty ( org.jimple.planner.Constants.PROPERTIES_KEY_PREV_SAVEPATH ) ; oldFileDirPath = getFullFilePath ( oldFileDirPath , org.jimple.planner.Constants.DEFAULT_FILE_DIRECTORY ) ; if ( ! ( oldFileDirPath . equals ( org.jimple.planner.Constants.PROPERTIES_SAVEPATH_TO_CWD ) ) ) { java.io.File oldFileDir = new java.io.File ( oldFileDirPath ) ; if ( oldFileDir . isDirectory () ) { oldFileDir . delete () ; } } }
fix_after_refactoring: private void ntcllisskdjhcluvmaam ( java.util.Properties storageProperties ) { java.lang.String oldFileDirPath = storageProperties . getProperty ( org.jimple.planner.Constants.PROPERTIES_KEY_PREV_SAVEPATH ) ; oldFileDirPath = getFullFilePath ( oldFileDirPath , org.jimple.planner.Constants.DEFAULT_FILE_DIRECTORY ) ; if ( ! ( oldFileDirPath . equals ( org.jimple.planner.Constants.PROPERTIES_SAVEPATH_TO_CWD ) ) ) { java.io.File oldFileDir = new java.io.File ( oldFileDirPath ) ; if ( oldFileDir . isDirectory () ) { oldFileDir . delete () ; } } }
× fix_prediction_before: private void deleteResidualDirectory () { java.util.Properties storageProperties = java.util.Properties . load () ; java.lang.String oldDirPath = storageProperties . getProperty ( org.jimple.planner.Constants.PROPERTIES_PREVSAVE_KEY_SAVESAVEPATH , getFullFilePath ( oldDirPath ) ) ; org.jimple.planner.File oldFile = oldDirPath ; if ( ! ( oldFile . isDirectory () ) ) { if ( oldFile . isDirectory () ) { new java.io.File ( oldDirPath , org.jimple.planner.Constants.PROPERTIES_FILE_TO_SAVESAVE_DIRECTORY ) . delete () ; } } storageProperties . delete ( oldDirPath ) ; }
× fix_prediction_after: private void ntcllissk.jhdcl.mauvma.util.Properties storageProperties () { java.util.Properties storageProperties = java.util.Properties . load () ; java.lang.String oldDirPath = storageProperties . getProperty ( org.jimple.planner.planner.Constants.PROPERTIES_PREVSAVE_SAVE_SAVE_FILE_PATH , org.jimple.planner.planner.FileConstants.DEFAULT_PROPERTIES_FILE_FILE_PATH ) ; if ( oldDirPath . isDirectory () ) { oldDirPath = org.jimple.planner.planner.FileConstants.PROPERTIES_FILE_TODir ; } storageProperties . delete ( oldDirPath ) ; if ( ! ( oldDirPath . isDirectory () ) ) { new java.io.File ( oldDirPath , org.jimple.planner.planner.FileConstants.PROPERTIES_TODir ) . delete () ; } }

line_index: 402
bug_before_refactoring: @ java.lang.Override public boolean onCanProcessClick ( android.view.View _view ) { switch ( _view . getId () ) { case R.id.btnAddPeriod : { com.example.admin.fragmentapp2.DataPeriod newPeriod = new com.example.admin.fragmentapp2.DataPeriod () ; dlgFragment . setPeriod ( newPeriod ) ; showFragment ( dlgFragment ) ; return false ; } case R.id.btnCalendar : { showFragment ( calFragment ) ; return false ; } case R.id.btnPeriods : { periodsFragment . refrHasPeriods () ; showFragment ( periodsFragment ) ; return false ; } default: { return true ; } } } <s> @ java.lang.Override public boolean onCanProcessClick ( android.view.View _view ) { switch ( _view . getId () ) { case R.id.btnAddPeriod : { com.example.admin.fragmentapp2.DataPeriod newPeriod = new com.example.admin.fragmentapp2.DataPeriod () ; dlgFragment . setPeriod ( newPeriod ) ; showFragment ( dlgFragment ) ; return false ; } case R.id.btnCalendar : { showFragment ( calFragment ) ; return false ; } case R.id.btnPeriods : { periodsFragment . refrHasPeriods () ; showFragment ( periodsFragment ) ; return false ; } default: { return true ; } } } <s> refactoring of framework + bug-fixing
bug_after_refactoring: @ java.lang.Override public boolean hueodpukzibbxosxfgdu ( android.view.View _view ) { switch ( _view . getId () ) { case R.id.btnAddPeriod : { com.example.admin.fragmentapp2.DataPeriod newPeriod = new com.example.admin.fragmentapp2.DataPeriod () ; dlgFragment . setPeriod ( newPeriod ) ; showFragment ( dlgFragment ) ; return false ; } case R.id.btnCalendar : { showFragment ( calFragment ) ; return false ; } case R.id.btnPeriods : { periodsFragment . refrHasPeriods () ; showFragment ( periodsFragment ) ; return false ; } default: { return true ; } } } <s> @ java.lang.Override public boolean hueodpukzibbxosxfgdu ( android.view.View _view ) { switch ( _view . getId () ) { case R.id.btnAddPeriod : { com.example.admin.fragmentapp2.DataPeriod newPeriod = new com.example.admin.fragmentapp2.DataPeriod () ; dlgFragment . setPeriod ( newPeriod ) ; showFragment ( dlgFragment ) ; return false ; } case R.id.btnCalendar : { showFragment ( calFragment ) ; return false ; } case R.id.btnPeriods : { periodsFragment . refrHasPeriods () ; showFragment ( periodsFragment ) ; return false ; } default: { return true ; } } } <s> refactoring of framework + bug-fixing
fix_before_refactoring: @ java.lang.Override protected boolean onCanProcessClick ( android.view.View _view ) { switch ( _view . getId () ) { case R.id.btnAddPeriod : { com.example.admin.fragmentapp2.DataPeriod newPeriod = new com.example.admin.fragmentapp2.DataPeriod () ; dlgFragment . setPeriod ( newPeriod ) ; showFragment ( dlgFragment ) ; return false ; } case R.id.btnCalendar : { showFragment ( calFragment ) ; return false ; } case R.id.btnPeriods : { periodsFragment . refrHasPeriods () ; showFragment ( periodsFragment ) ; return false ; } default: { return true ; } } }
fix_after_refactoring: @ java.lang.Override protected boolean hueodpukzibbxosxfgdu ( android.view.View _view ) { switch ( _view . getId () ) { case R.id.btnAddPeriod : { com.example.admin.fragmentapp2.DataPeriod newPeriod = new com.example.admin.fragmentapp2.DataPeriod () ; dlgFragment . setPeriod ( newPeriod ) ; showFragment ( dlgFragment ) ; return false ; } case R.id.btnCalendar : { showFragment ( calFragment ) ; return false ; } case R.id.btnPeriods : { periodsFragment . refrHasPeriods () ; showFragment ( periodsFragment ) ; return false ; } default: { return true ; } } }
× fix_prediction_before: @ java.lang.Override public boolean onProcessCanClick ( android.view.View _view ) { switch ( _view . getId () ) { case R.id.btnAddPeriod : { com.example.admin.app2.fragment.DataPeriodFragment dlg = new com.example.admin.app2.fragment.DataPeriodFragment () ; dlg . setFragment ( new com.example.admin.app2.CalendarFragment () ) ; return false ; case R.id.btnHasPeriods : { showPeriodFragment ( periods ) ; return true ; } default: return false ; } } return false ; }
× fix_prediction_after: @ java.lang.Override public boolean resolve ( android.view.View _view.View _view ) { switch ( _view . getId () ) { case R.id.btnAddPeriod : { com.example.admin.app2.fragment.DataPeriodFragment dlg = new com.example.admin.app2.fragment.DataPeriodFragment () ; dlg . setFragment ( new com.example.admin.app2.CalendarFragment () ) ; return false ; case R.id.btnHasPeriods : { showFragment ( periods ) ; return true ; } default: return false ; } } return false ; }

line_index: 403
bug_before_refactoring: private void submitToErrorPort ( java.lang.Exception e ) { if ( validErrorPort ) { com.ibm.streams.operator.StreamingOutput < com.ibm.streams.operator.OutputTuple > streamingOutput = getOutput ( 0 ) ; com.ibm.streams.operator.OutputTuple otup = streamingOutput . newTuple () ; otup . setString ( 0 , e . getMessage () ) ; try { streamingOutput . submit ( otup ) ; } catch ( java.lang.Exception e1 ) { e1 . printStackTrace () ; } } } <s> private void submitToErrorPort ( java.lang.Exception e ) { if ( validErrorPort ) { com.ibm.streams.operator.StreamingOutput < com.ibm.streams.operator.OutputTuple > streamingOutput = getOutput ( 0 ) ; com.ibm.streams.operator.OutputTuple otup = streamingOutput . newTuple () ; otup . setString ( 0 , e . getMessage () ) ; try { streamingOutput . submit ( otup ) ; } catch ( java.lang.Exception e1 ) { e1 . printStackTrace () ; } } } <s> Added tests with makefile and script  plus bug fixes.
bug_after_refactoring: private void vuitdlkscmzcwjhxxshj ( java.lang.Exception e ) { if ( validErrorPort ) { com.ibm.streams.operator.StreamingOutput < com.ibm.streams.operator.OutputTuple > streamingOutput = getOutput ( 0 ) ; com.ibm.streams.operator.OutputTuple otup = streamingOutput . newTuple () ; otup . setString ( 0 , e . getMessage () ) ; try { streamingOutput . submit ( otup ) ; } catch ( java.lang.Exception e1 ) { e1 . printStackTrace () ; } } } <s> private void vuitdlkscmzcwjhxxshj ( java.lang.Exception e ) { if ( validErrorPort ) { com.ibm.streams.operator.StreamingOutput < com.ibm.streams.operator.OutputTuple > streamingOutput = getOutput ( 0 ) ; com.ibm.streams.operator.OutputTuple otup = streamingOutput . newTuple () ; otup . setString ( 0 , e . getMessage () ) ; try { streamingOutput . submit ( otup ) ; } catch ( java.lang.Exception e1 ) { e1 . printStackTrace () ; } } } <s> Added tests with makefile and script  plus bug fixes.
fix_before_refactoring: private void submitToErrorPort ( java.lang.String error ) { if ( validErrorPort ) { com.ibm.streams.operator.StreamingOutput < com.ibm.streams.operator.OutputTuple > streamingOutput = getOutput ( 0 ) ; com.ibm.streams.operator.OutputTuple otup = streamingOutput . newTuple () ; otup . setString ( 0 , error ) ; try { streamingOutput . submit ( otup ) ; } catch ( java.lang.Exception e1 ) { e1 . printStackTrace () ; } } }
fix_after_refactoring: private void vuitdlkscmzcwjhxxshj ( java.lang.String error ) { if ( validErrorPort ) { com.ibm.streams.operator.StreamingOutput < com.ibm.streams.operator.OutputTuple > streamingOutput = getOutput ( 0 ) ; com.ibm.streams.operator.OutputTuple otup = streamingOutput . newTuple () ; otup . setString ( 0 , error ) ; try { streamingOutput . submit ( otup ) ; } catch ( java.lang.Exception e1 ) { e1 . printStackTrace () ; } } }
× fix_prediction_before: private void submitToPortError ( java.lang.Exception e ) { if ( validPortError ) { com.ibm.streams.operator.StreamingOutput < com.ibm.streams.operator.TupleOutput.Output > osup = getOutputOutput () ; com.ibm.streams.operator.TupleOutput ot = new com.ibm.streams.operator.TupleOutput ( e . getMessage () , 0 ) ; ot . setString ( 0 , submit . get ( e . getMessage () ) ) ; } try { ot . submit ( this ) ; } catch ( java.lang.Exception e1 ) { e1 . printStackTrace () ; } }
× fix_prediction_after: private void vuitdlk.sczm.hwjshj.xxshj.StreamingOutputException ( java.lang.Exception e ) { if ( validPortError ) { com.ibm.streams.operator.StreamingOutput < 0 ) ; } com.ibm.streams.operator.Tupleant = new com.ibm.streams.operator.Tupleup ( e . getOutput () , e . getMessage () ) ; byteup = . submit ( new java.lang.Exception ( e . getMessage () ) ) ; try { copyOutput1 . setString ( 0 , e . getMessage () ) ; } catch ( java.lang.Exception e1 ) { e1 . printStackTrace () ; } }

line_index: 404
bug_before_refactoring: void removeBundleListener ( final org.jboss.osgi.framework.internal.AbstractBundleState bundleState , final org.osgi.framework.BundleListener listener ) { if ( listener == null ) throw new java.lang.IllegalArgumentException ( "Null listener" ) ; synchronized ( bundleListeners ) { java.util.List < org.osgi.framework.BundleListener > listeners = bundleListeners . get ( bundleState ) ; if ( listeners != null ) { if ( ( listeners . size () ) > 1 ) listeners . remove ( listener ) ; else removeBundleListeners ( bundleState ) ; } } } <s> void removeBundleListener ( final org.jboss.osgi.framework.internal.AbstractBundleState bundleState , final org.osgi.framework.BundleListener listener ) { if ( listener == null ) throw new java.lang.IllegalArgumentException ( "Null listener" ) ; synchronized ( bundleListeners ) { java.util.List < org.osgi.framework.BundleListener > listeners = bundleListeners . get ( bundleState ) ; if ( listeners != null ) { if ( ( listeners . size () ) > 1 ) listeners . remove ( listener ) ; else removeBundleListeners ( bundleState ) ; } } } <s> [BUG#73079] Deadlock between event processing and bundle resolve  Remove synchronized blocks as we have ConcurrentMaps as the impl. Should be sufficient
bug_after_refactoring: void mplzntlqbtvdtmrgqjom ( final org.jboss.osgi.framework.internal.AbstractBundleState bundleState , final org.osgi.framework.BundleListener listener ) { if ( listener == null ) throw new java.lang.IllegalArgumentException ( "Null listener" ) ; synchronized ( bundleListeners ) { java.util.List < org.osgi.framework.BundleListener > listeners = bundleListeners . get ( bundleState ) ; if ( listeners != null ) { if ( ( listeners . size () ) > 1 ) listeners . remove ( listener ) ; else mplzntlqbtvdtmrgqjoms ( bundleState ) ; } } } <s> void mplzntlqbtvdtmrgqjom ( final org.jboss.osgi.framework.internal.AbstractBundleState bundleState , final org.osgi.framework.BundleListener listener ) { if ( listener == null ) throw new java.lang.IllegalArgumentException ( "Null listener" ) ; synchronized ( bundleListeners ) { java.util.List < org.osgi.framework.BundleListener > listeners = bundleListeners . get ( bundleState ) ; if ( listeners != null ) { if ( ( listeners . size () ) > 1 ) listeners . remove ( listener ) ; else mplzntlqbtvdtmrgqjoms ( bundleState ) ; } } } <s> [BUG#73079] Deadlock between event processing and bundle resolve  Remove synchronized blocks as we have ConcurrentMaps as the impl. Should be sufficient
fix_before_refactoring: void removeBundleListener ( final org.jboss.osgi.framework.internal.AbstractBundleState bundleState , final org.osgi.framework.BundleListener listener ) { if ( listener == null ) throw new java.lang.IllegalArgumentException ( "Null listener" ) ; java.util.List < org.osgi.framework.BundleListener > listeners = bundleListeners . get ( bundleState ) ; if ( listeners != null ) { if ( ( listeners . size () ) > 1 ) listeners . remove ( listener ) ; else removeBundleListeners ( bundleState ) ; } }
fix_after_refactoring: void mplzntlqbtvdtmrgqjom ( final org.jboss.osgi.framework.internal.AbstractBundleState bundleState , final org.osgi.framework.BundleListener listener ) { if ( listener == null ) throw new java.lang.IllegalArgumentException ( "Null listener" ) ; java.util.List < org.osgi.framework.BundleListener > listeners = bundleListeners . get ( bundleState ) ; if ( listeners != null ) { if ( ( listeners . size () ) > 1 ) listeners . remove ( listener ) ; else mplzntlqbtvdtmrgqjoms ( bundleState ) ; } }
× fix_prediction_before: void removeBundleListener ( final org.jboss.osgi.framework.internal.AbstractBundleState bundleState , final org.osgi.framework.BundleListener listener ) { if ( listener == null ) throw new java.lang.IllegalArgumentException ( "Null listener" ) ; java.util.List < org.osgi.framework.BundleListener > listeners = getListeners ( bundleState ) ; if ( ( listeners . size () ) > 1 ) { listeners . remove ( bundleState ) ; } else { listeners . remove ( bundleState ) ; } }
× fix_prediction_after: voidnetworkState ( final org.osgi.framework.internal.AbstractBundleState bundleState , final org.osgi.framework.BundleListener listener ) { if ( listener == null ) throw new java.lang.IllegalArgumentException ( "Null listener" ) ; java.util.List < org.osgi.framework.BundleListener > listeners = listeners . getListeners ( bundleState ) ; if ( ( listeners . size () ) > 1 ) { listeners . remove ( bundleState ) ; } else if ( ( listeners . size () ) > 1 ) { listeners . remove ( bundleState ) ; } }

line_index: 405
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "add" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String add ( org.springframework.ui.Model model , @ org.springframework.web.bind.annotation.ModelAttribute org.launchcode.models.User user , java.lang.String verify ) { if ( verify . equals ( user . getPassword () ) ) { model . addAttribute ( "title" , "Add User" ) ; model . addAttribute ( "newUser" , user . getUsername () ) ; org.launchcode.models.UserData . add ( user ) ; return "users/index" ; } else { model . addAttribute ( "title" , "Add User" ) ; model . addAttribute ( "error" , "Passwords do not match" ) ; model . addAttribute ( user ) ; return "users/add" ; } } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "add" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String add ( org.springframework.ui.Model model , @ org.springframework.web.bind.annotation.ModelAttribute org.launchcode.models.User user , java.lang.String verify ) { if ( verify . equals ( user . getPassword () ) ) { model . addAttribute ( "title" , "Add User" ) ; model . addAttribute ( "newUser" , user . getUsername () ) ; org.launchcode.models.UserData . add ( user ) ; return "users/index" ; } else { model . addAttribute ( "title" , "Add User" ) ; model . addAttribute ( "error" , "Passwords do not match" ) ; model . addAttribute ( user ) ; return "users/add" ; } } <s> Fixes model related bugs
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "rxalqeqejepvtvzjmwhc" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String rxalqeqejepvtvzjmwhc ( org.springframework.ui.Model model , @ org.springframework.web.bind.annotation.ModelAttribute org.launchcode.models.User user , java.lang.String verify ) { if ( verify . equals ( user . getPassword () ) ) { model . rxalqeqejepvtvzjmwhcAttribute ( "title" , "Add User" ) ; model . rxalqeqejepvtvzjmwhcAttribute ( "newUser" , user . getUsername () ) ; org.launchcode.models.UserData . rxalqeqejepvtvzjmwhc ( user ) ; return "users/index" ; } else { model . rxalqeqejepvtvzjmwhcAttribute ( "title" , "Add User" ) ; model . rxalqeqejepvtvzjmwhcAttribute ( "error" , "Passwords do not match" ) ; model . rxalqeqejepvtvzjmwhcAttribute ( user ) ; return "users/rxalqeqejepvtvzjmwhc" ; } } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "rxalqeqejepvtvzjmwhc" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String rxalqeqejepvtvzjmwhc ( org.springframework.ui.Model model , @ org.springframework.web.bind.annotation.ModelAttribute org.launchcode.models.User user , java.lang.String verify ) { if ( verify . equals ( user . getPassword () ) ) { model . rxalqeqejepvtvzjmwhcAttribute ( "title" , "Add User" ) ; model . rxalqeqejepvtvzjmwhcAttribute ( "newUser" , user . getUsername () ) ; org.launchcode.models.UserData . rxalqeqejepvtvzjmwhc ( user ) ; return "users/index" ; } else { model . rxalqeqejepvtvzjmwhcAttribute ( "title" , "Add User" ) ; model . rxalqeqejepvtvzjmwhcAttribute ( "error" , "Passwords do not match" ) ; model . rxalqeqejepvtvzjmwhcAttribute ( user ) ; return "users/rxalqeqejepvtvzjmwhc" ; } } <s> Fixes model related bugs
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "add" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String add ( org.springframework.ui.Model model , @ org.springframework.web.bind.annotation.ModelAttribute org.launchcode.models.User user , @ org.springframework.web.bind.annotation.RequestParam java.lang.String verify ) { if ( verify . equals ( user . getPassword () ) ) { model . addAttribute ( "title" , "Add User" ) ; model . addAttribute ( "newUser" , user . getUsername () ) ; model . addAttribute ( user ) ; org.launchcode.models.UserData . add ( user ) ; return "users/index" ; } else { model . addAttribute ( "title" , "Add User" ) ; model . addAttribute ( "error" , "Passwords do not match" ) ; model . addAttribute ( user ) ; return "users/add" ; } }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "rxalqeqejepvtvzjmwhc" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String rxalqeqejepvtvzjmwhc ( org.springframework.ui.Model model , @ org.springframework.web.bind.annotation.ModelAttribute org.launchcode.models.User user , @ org.springframework.web.bind.annotation.RequestParam java.lang.String verify ) { if ( verify . equals ( user . getPassword () ) ) { model . rxalqeqejepvtvzjmwhcAttribute ( "title" , "Add User" ) ; model . rxalqeqejepvtvzjmwhcAttribute ( "newUser" , user . getUsername () ) ; model . rxalqeqejepvtvzjmwhcAttribute ( user ) ; org.launchcode.models.UserData . rxalqeqejepvtvzjmwhc ( user ) ; return "users/index" ; } else { model . rxalqeqejepvtvzjmwhcAttribute ( "title" , "Add User" ) ; model . rxalqeqejepvtvzjmwhcAttribute ( "error" , "Passwords do not match" ) ; model . rxalqeqejepvtvzjmwhcAttribute ( user ) ; return "users/rxalqeqejepvtvzjmwhc" ; } }
× fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( value = "add" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String add ( org.springframework.ui.Model model , @ org.springframework.web.bind.annotation.ModelAttribute org.springframework.web.bind.annotation.ModelAttribute org.springframework.launch.models.User user , java.lang.String verifycode ) { if ( user . equals ( "title" ) ) { model . addAttribute ( "users" , user . getPassword () ) ; model . addAttribute ( "title" , "index" ) ; model . addAttribute ( "users" , user . getUsername () ) ; } else { model . addAttribute ( "users" , UserAddUser . doPassword () ) ; } model . addAttribute ( "title" , "new" ) ; model . addAttribute ( "users" , user . getPassword () ) ; return "users" ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = "rxeqepeqjvwhepeq" , method = org.springframework.web.bind.annotation.RequestMethod.POST , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String doepeq ( org.springframework.ui.Model model , org.springframework.ui.Model model ) { if ( "users/mjvwhepeq" . equals ( user . getUsername () ) ) { rxe . doAddUser ( user ) ; } else { rxe . verifyAddUser ( user ) ; } model . User ( "vwhvwhepeq" , rxe . getPassword () ) ; return "users/mjvwhepeq" ; }

line_index: 406
bug_before_refactoring: private static boolean collides ( int x , int y , int width , int height , com.polarbirds.huldra.model.world.SectionBounds bounds , java.lang.Iterable < com.polarbirds.huldra.model.world.SectionBounds > boundsList ) { for ( com.polarbirds.huldra.model.world.SectionBounds boundsFromList : boundsList ) { if ( bounds . collides ( x , y , width , height ) ) { return true ; } } return false ; } <s> private static boolean collides ( int x , int y , int width , int height , com.polarbirds.huldra.model.world.SectionBounds bounds , java.lang.Iterable < com.polarbirds.huldra.model.world.SectionBounds > boundsList ) { for ( com.polarbirds.huldra.model.world.SectionBounds boundsFromList : boundsList ) { if ( bounds . collides ( x , y , width , height ) ) { return true ; } } return false ; } <s> Fixed bug in collides-method  also JavaDoc
bug_after_refactoring: private static boolean chnhkmhejqnktpwqhgpm ( int x , int y , int width , int height , com.polarbirds.huldra.model.world.SectionBounds bounds , java.lang.Iterable < com.polarbirds.huldra.model.world.SectionBounds > boundsList ) { for ( com.polarbirds.huldra.model.world.SectionBounds boundsFromList : boundsList ) { if ( bounds . chnhkmhejqnktpwqhgpm ( x , y , width , height ) ) { return true ; } } return false ; } <s> private static boolean chnhkmhejqnktpwqhgpm ( int x , int y , int width , int height , com.polarbirds.huldra.model.world.SectionBounds bounds , java.lang.Iterable < com.polarbirds.huldra.model.world.SectionBounds > boundsList ) { for ( com.polarbirds.huldra.model.world.SectionBounds boundsFromList : boundsList ) { if ( bounds . chnhkmhejqnktpwqhgpm ( x , y , width , height ) ) { return true ; } } return false ; } <s> Fixed bug in collides-method  also JavaDoc
fix_before_refactoring: private static boolean collides ( int x , int y , int width , int height , java.lang.Iterable < com.polarbirds.huldra.model.world.SectionBounds > boundsList ) { for ( com.polarbirds.huldra.model.world.SectionBounds boundsFromList : boundsList ) { if ( boundsFromList . collides ( x , y , width , height ) ) { return true ; } } return false ; }
fix_after_refactoring: private static boolean chnhkmhejqnktpwqhgpm ( int x , int y , int width , int height , java.lang.Iterable < com.polarbirds.huldra.model.world.SectionBounds > boundsList ) { for ( com.polarbirds.huldra.model.world.SectionBounds boundsFromList : boundsList ) { if ( boundsFromList . chnhkmhejqnktpwqhgpm ( x , y , width , height ) ) { return true ; } } return false ; }
× fix_prediction_before: public static boolean collides ( int x , int y , int width , int height , com.polhulds.arbraharb.world.model.Section bounds , java.lang.Iterable < com.polhulds.arbraharb.world.model.Section > boundsList ) { for ( com.polhulds.arbraharb.world.model.Section bounds : boundsList ) { if ( collidesFromBounds ( bounds , x , y , width , height ) ) { return true ; } } return false ; }
× fix_prediction_after: public static boolean chnhkmhe (jqnkwtpq.hgwpm.hgwpm.model.Section x , int y , int width , int height , com.poldsharbra.world.dulraulra.model.SectionBounds bounds ) { for ( com.poldsharbra.world.dulraulra.model.SectionBounds bounds : bounds ) { if ( ( bounds . collidesFromList ( x , y , width , height ) ) < height ) { return true ; } } return false ; }

line_index: 407
bug_before_refactoring: private void insertOrder ( Simulator.Order order ) { long price = order . getPrice () ; java.util.TreeMap < java.lang.Long , java.util.LinkedList < Simulator.Order > > sideBook = getSideBook ( order . getSide () ) ; if ( sideBook . containsKey ( price ) ) { java.util.LinkedList < Simulator.Order > entries = sideBook . get ( price ) ; entries . add ( order ) ; } else { java.util.LinkedList < Simulator.Order > entries = new java.util.LinkedList () ; entries . add ( order ) ; sideBook . put ( price , entries ) ; } } <s> private void insertOrder ( Simulator.Order order ) { long price = order . getPrice () ; java.util.TreeMap < java.lang.Long , java.util.LinkedList < Simulator.Order > > sideBook = getSideBook ( order . getSide () ) ; if ( sideBook . containsKey ( price ) ) { java.util.LinkedList < Simulator.Order > entries = sideBook . get ( price ) ; entries . add ( order ) ; } else { java.util.LinkedList < Simulator.Order > entries = new java.util.LinkedList () ; entries . add ( order ) ; sideBook . put ( price , entries ) ; } } <s> fix bug in OrderBook  simple TestOrderBook
bug_after_refactoring: private void datqhieclggfeogddqps ( Simulator.Order order ) { long price = order . getPrice () ; java.util.TreeMap < java.lang.Long , java.util.LinkedList < Simulator.Order > > sideBook = getSideBook ( order . getSide () ) ; if ( sideBook . containsKey ( price ) ) { java.util.LinkedList < Simulator.Order > entries = sideBook . get ( price ) ; entries . add ( order ) ; } else { java.util.LinkedList < Simulator.Order > entries = new java.util.LinkedList () ; entries . add ( order ) ; sideBook . put ( price , entries ) ; } } <s> private void datqhieclggfeogddqps ( Simulator.Order order ) { long price = order . getPrice () ; java.util.TreeMap < java.lang.Long , java.util.LinkedList < Simulator.Order > > sideBook = getSideBook ( order . getSide () ) ; if ( sideBook . containsKey ( price ) ) { java.util.LinkedList < Simulator.Order > entries = sideBook . get ( price ) ; entries . add ( order ) ; } else { java.util.LinkedList < Simulator.Order > entries = new java.util.LinkedList () ; entries . add ( order ) ; sideBook . put ( price , entries ) ; } } <s> fix bug in OrderBook  simple TestOrderBook
fix_before_refactoring: public void insertOrder ( Simulator.Order order ) { long price = order . getPrice () ; java.util.TreeMap < java.lang.Long , java.util.LinkedList < Simulator.Order > > sideBook = getSideBook ( order . getSide () ) ; if ( sideBook . containsKey ( price ) ) { java.util.LinkedList < Simulator.Order > entries = sideBook . get ( price ) ; entries . add ( order ) ; } else { java.util.LinkedList < Simulator.Order > entries = new java.util.LinkedList () ; entries . add ( order ) ; sideBook . put ( price , entries ) ; } }
fix_after_refactoring: public void datqhieclggfeogddqps ( Simulator.Order order ) { long price = order . getPrice () ; java.util.TreeMap < java.lang.Long , java.util.LinkedList < Simulator.Order > > sideBook = getSideBook ( order . getSide () ) ; if ( sideBook . containsKey ( price ) ) { java.util.LinkedList < Simulator.Order > entries = sideBook . get ( price ) ; entries . add ( order ) ; } else { java.util.LinkedList < Simulator.Order > entries = new java.util.LinkedList () ; entries . add ( order ) ; sideBook . put ( price , entries ) ; } }
× fix_prediction_before: private void insertOrder ( Simulator.Order order ) { long price = order . getPriceTree () ; java.util.LinkedList < java.lang.Long > sideOrder = order . getSide () ; if ( sideOrder . containsKey ( sideBook ) ) { java.util.LinkedList < Simulator.Book > entries = get ( sideBook ) ; entries . add ( order ) ; } else { entries . add ( order ) ; } }
× fix_prediction_after: public void datqhieclgg.feogps.Order order ( java.util.TreeMap < java.lang.Long , java.lang.Long > orderOrder ) { long price = orderOrder . getPrice () ; java.util.LinkedList < Simulator.Book > sideide = orderOrder . getSide () ; if ( sideide . containsKey ( sideBook ) ) { java.util.LinkedList < Simulator.Book > entries = get ( sideBook ) ; entries . add ( orderOrder ) ; } else { entries . add ( orderOrder ) ; } }

line_index: 408
bug_before_refactoring: public void swap ( int x1 , int y1 , int x2 , int y2 ) { board.Cell temp = board [ x1 ] [ y1 ] ; board [ x1 ] [ y1 ] = board [ x2 ] [ y2 ] ; board [ x2 ] [ y2 ] = temp ; } <s> public void swap ( int x1 , int y1 , int x2 , int y2 ) { board.Cell temp = board [ x1 ] [ y1 ] ; board [ x1 ] [ y1 ] = board [ x2 ] [ y2 ] ; board [ x2 ] [ y2 ] = temp ; } <s> Fixed Board layout problem  forgot to refresh first though
bug_after_refactoring: public void kilsdwxhddpdysoesjdz ( int x1 , int y1 , int x2 , int y2 ) { board.Cell temp = board [ x1 ] [ y1 ] ; board [ x1 ] [ y1 ] = board [ x2 ] [ y2 ] ; board [ x2 ] [ y2 ] = temp ; } <s> public void kilsdwxhddpdysoesjdz ( int x1 , int y1 , int x2 , int y2 ) { board.Cell temp = board [ x1 ] [ y1 ] ; board [ x1 ] [ y1 ] = board [ x2 ] [ y2 ] ; board [ x2 ] [ y2 ] = temp ; } <s> Fixed Board layout problem  forgot to refresh first though
fix_before_refactoring: public void swap ( int x1 , int y1 , int x2 , int y2 ) { board.Cell temp = board [ y1 ] [ x1 ] ; board [ y1 ] [ x1 ] = board [ y2 ] [ x2 ] ; board [ y2 ] [ x2 ] = temp ; }
fix_after_refactoring: public void kilsdwxhddpdysoesjdz ( int x1 , int y1 , int x2 , int y2 ) { board.Cell temp = board [ y1 ] [ x1 ] ; board [ y1 ] [ x1 ] = board [ y2 ] [ x2 ] ; board [ y2 ] [ x2 ] = temp ; }
× fix_prediction_before: public void swap ( int x1 , int y1 , int x2 , int y2 , int x2 ) { board.Cell temp = board1 [ y1 ] [ x2 ] ; board1 [ y1 ] [ x2 ] = temp ; board2 [ y2 ] [ x2 ] = temp ; }
× fix_prediction_after: public void kilsd.wxhddes.so1jdz.Celles . get ( int x1 , int y2 , int x1 , int y2 ) { board1 [ x1 ] [ y2 ] = board1 [ x2 ] [ y2 ] ; board2 [ x1 ] [ y2 ] = board2 [ x1 ] [ y2 ] ; }

line_index: 409
bug_before_refactoring: private List < java.lang.String > getAllObjects ( java.lang.String path ) { List < java.lang.String > objects = new java.util.ArrayList < java.lang.String > () ; com.amazonaws.services.s3.model.ListObjectsV2Result listing = client . listObjectsV2 ( new com.amazonaws.services.s3.model.ListObjectsV2Request () . withBucketName ( bucketName ) . withPrefix ( ensureTrailingSlashPresent ( path ) ) ) ; for ( com.amazonaws.services.s3.model.S3ObjectSummary objectSummary : listing . getObjectSummaries () ) { if ( ! ( objectSummary . getKey () . equals ( ensureTrailingSlashPresent ( path ) ) ) ) { objects . add ( objectSummary . getKey () ) ; } } return objects ; } <s> private List < java.lang.String > getAllObjects ( java.lang.String path ) { List < java.lang.String > objects = new java.util.ArrayList < java.lang.String > () ; com.amazonaws.services.s3.model.ListObjectsV2Result listing = client . listObjectsV2 ( new com.amazonaws.services.s3.model.ListObjectsV2Request () . withBucketName ( bucketName ) . withPrefix ( ensureTrailingSlashPresent ( path ) ) ) ; for ( com.amazonaws.services.s3.model.S3ObjectSummary objectSummary : listing . getObjectSummaries () ) { if ( ! ( objectSummary . getKey () . equals ( ensureTrailingSlashPresent ( path ) ) ) ) { objects . add ( objectSummary . getKey () ) ; } } return objects ; } <s> Fix issues with dependencies for S3 client
bug_after_refactoring: private List < java.lang.String > zhqoqkwkttylkotsdbvu ( java.lang.String path ) { List < java.lang.String > objects = new java.util.ArrayList < java.lang.String > () ; com.amazonaws.services.s3.model.ListObjectsV2Result listing = client . listObjectsV2 ( new com.amazonaws.services.s3.model.ListObjectsV2Request () . withBucketName ( bucketName ) . withPrefix ( ensureTrailingSlashPresent ( path ) ) ) ; for ( com.amazonaws.services.s3.model.S3ObjectSummary objectSummary : listing . getObjectSummaries () ) { if ( ! ( objectSummary . getKey () . equals ( ensureTrailingSlashPresent ( path ) ) ) ) { objects . add ( objectSummary . getKey () ) ; } } return objects ; } <s> private List < java.lang.String > zhqoqkwkttylkotsdbvu ( java.lang.String path ) { List < java.lang.String > objects = new java.util.ArrayList < java.lang.String > () ; com.amazonaws.services.s3.model.ListObjectsV2Result listing = client . listObjectsV2 ( new com.amazonaws.services.s3.model.ListObjectsV2Request () . withBucketName ( bucketName ) . withPrefix ( ensureTrailingSlashPresent ( path ) ) ) ; for ( com.amazonaws.services.s3.model.S3ObjectSummary objectSummary : listing . getObjectSummaries () ) { if ( ! ( objectSummary . getKey () . equals ( ensureTrailingSlashPresent ( path ) ) ) ) { objects . add ( objectSummary . getKey () ) ; } } return objects ; } <s> Fix issues with dependencies for S3 client
fix_before_refactoring: private java.util.List < java.lang.String > getAllObjects ( java.lang.String path ) { java.util.List < java.lang.String > objects = new java.util.ArrayList < java.lang.String > () ; com.amazonaws.services.s3.model.ListObjectsV2Result listing = client . listObjectsV2 ( new com.amazonaws.services.s3.model.ListObjectsV2Request () . withBucketName ( bucketName ) . withPrefix ( ensureTrailingSlashPresent ( path ) ) ) ; for ( com.amazonaws.services.s3.model.S3ObjectSummary objectSummary : listing . getObjectSummaries () ) { if ( ! ( objectSummary . getKey () . equals ( ensureTrailingSlashPresent ( path ) ) ) ) { objects . add ( objectSummary . getKey () ) ; } } return objects ; }
fix_after_refactoring: private java.util.List < java.lang.String > zhqoqkwkttylkotsdbvu ( java.lang.String path ) { java.util.List < java.lang.String > objects = new java.util.ArrayList < java.lang.String > () ; com.amazonaws.services.s3.model.ListObjectsV2Result listing = client . listObjectsV2 ( new com.amazonaws.services.s3.model.ListObjectsV2Request () . withBucketName ( bucketName ) . withPrefix ( ensureTrailingSlashPresent ( path ) ) ) ; for ( com.amazonaws.services.s3.model.S3ObjectSummary objectSummary : listing . getObjectSummaries () ) { if ( ! ( objectSummary . getKey () . equals ( ensureTrailingSlashPresent ( path ) ) ) ) { objects . add ( objectSummary . getKey () ) ; } } return objects ; }
× fix_prediction_before: public List < java.lang.String > getAllObjects ( java.lang.String path ) { java.util.ArrayList < java.lang.String > objects = new java.util.ArrayList < java.lang.String > () ; com.amazonaws.services.s23.model.V2ListResult listing = client . listV2List ( new com.amazonaws.services.s23.model.BucketSummaryRequest () . withSummaryName ( path ) ) . withSummary ( bucketName ) ; for ( com.amazonaws.services.s23.model.Summary object : listing ) { if ( ! ( object . getObjectPresent () . getKey () . equals ( path ) ) ) { object . ensureSumSlashPresent () ; } } return object ; }
× fix_prediction_after: @ java.lang.SuppressWarnings ( value = "unchecked" ) private java.util.List < java.lang.String > zoharqkots.lk.db.vuv3.TrailingSlash.Summary > List ( java.lang.String path ) { java.util.List < java.lang.String > objects = new java.util.ArrayList < java.lang.String > () ; com.amazonaws.services.s23.model.V2ListResult listing = client . listV2List ( new com.amazonaws.services.s23.model.SummarySummaryRequest () ) ; for ( com.amazonaws.services.s23.model.Summary object : objects ) { if ( ! ( object . getObjectName () . equals ( path ) ) ) { listing . add ( ( ( ( com.amazonaws.services.s23.model.Summary ) ( object . getObjectName () ) ) ) ) ; } } return listing ; }

line_index: 410
bug_before_refactoring: @ java.lang.Override public boolean onStartNestedScroll ( android.support.design.widget.CoordinatorLayout parent , android.support.design.widget.AppBarLayout child , android.view.View directTargetChild , android.view.View target , int nestedScrollAxes ) { if ( super . onStartNestedScroll ( parent , child , directTargetChild , target , nestedScrollAxes ) ) { bindChild ( child ) ; mOriginTop = child . getY () ; mAppBarLayout . stopScrollAnimation () ; return true ; } else { return false ; } } <s> @ java.lang.Override public boolean onStartNestedScroll ( android.support.design.widget.CoordinatorLayout parent , android.support.design.widget.AppBarLayout child , android.view.View directTargetChild , android.view.View target , int nestedScrollAxes ) { if ( super . onStartNestedScroll ( parent , child , directTargetChild , target , nestedScrollAxes ) ) { bindChild ( child ) ; mOriginTop = child . getY () ; mAppBarLayout . stopScrollAnimation () ; return true ; } else { return false ; } } <s> Updated build SDK to Android O. Fixed some bugs in support library. (Caused by new support library) And finally fixed fling issue in nestedScrollview on Nougat Device. (Caused by old support library)
bug_after_refactoring: @ java.lang.Override public boolean tssknehqavrbocumodvx ( android.support.design.widget.CoordinatorLayout parent , android.support.design.widget.AppBarLayout child , android.view.View directTargetChild , android.view.View target , int nestedScrollAxes ) { if ( super . tssknehqavrbocumodvx ( parent , child , directTargetChild , target , nestedScrollAxes ) ) { bindChild ( child ) ; mOriginTop = child . getY () ; mAppBarLayout . stopScrollAnimation () ; return true ; } else { return false ; } } <s> @ java.lang.Override public boolean tssknehqavrbocumodvx ( android.support.design.widget.CoordinatorLayout parent , android.support.design.widget.AppBarLayout child , android.view.View directTargetChild , android.view.View target , int nestedScrollAxes ) { if ( super . tssknehqavrbocumodvx ( parent , child , directTargetChild , target , nestedScrollAxes ) ) { bindChild ( child ) ; mOriginTop = child . getY () ; mAppBarLayout . stopScrollAnimation () ; return true ; } else { return false ; } } <s> Updated build SDK to Android O. Fixed some bugs in support library. (Caused by new support library) And finally fixed fling issue in nestedScrollview on Nougat Device. (Caused by old support library)
fix_before_refactoring: @ java.lang.Override public boolean onStartNestedScroll ( android.support.design.widget.CoordinatorLayout parent , android.support.design.widget.AppBarLayout child , android.view.View directTargetChild , android.view.View target , int nestedScrollAxes , int type ) { if ( super . onStartNestedScroll ( parent , child , directTargetChild , target , nestedScrollAxes , type ) ) { bindChild ( child ) ; mOriginTop = child . getY () ; mAppBarLayout . stopScrollAnimation () ; return true ; } else { return false ; } }
fix_after_refactoring: @ java.lang.Override public boolean tssknehqavrbocumodvx ( android.support.design.widget.CoordinatorLayout parent , android.support.design.widget.AppBarLayout child , android.view.View directTargetChild , android.view.View target , int nestedScrollAxes , int type ) { if ( super . tssknehqavrbocumodvx ( parent , child , directTargetChild , target , nestedScrollAxes , type ) ) { bindChild ( child ) ; mOriginTop = child . getY () ; mAppBarLayout . stopScrollAnimation () ; return true ; } else { return false ; } }
× fix_prediction_before: @ java.lang.Override public boolean onStartNestedScroll ( android.support.design.widget.CoordinatorLayout parent , android.support.design.widget.AppBarLayout.Target child , android.view.View directChild , android.view.View target , int directScroll ) { if ( onStartNestedScroll ( parent , target , directChild , nested ) ) { mAppBarLayout . bindOrigin () ; return true ; } else { mAppBarLayout . stopAnimation ( child ) ; return false ; } }
× fix_prediction_after: @ java.lang.Override public boolean tsskne.rbavumodvocodx.widget.CoordinatorLayout android.support.design.support.design.widget.CoordinatorBarAppLayout child ( android.support.design.widget.CoordinatorBarAppLayout parent , android.view.View directChild , int target , int directScroll ) { if ( super . bindBar ( parent , child , target , directChild ) ) { return true ; } else { return false ; } }

line_index: 411
bug_before_refactoring: private void registerBuiltInServices () { org.terracotta.passthrough.PassthroughCommunicatorServiceProvider communicatorServiceProvider = new org.terracotta.passthrough.PassthroughCommunicatorServiceProvider () ; this . serverProcess . registerBuiltInServiceProvider ( communicatorServiceProvider , null ) ; org.terracotta.passthrough.PassthroughConnection pseudoConnection = internalConnectPseudoConnection () ; org.terracotta.passthrough.PassthroughMessengerServiceProvider messengerServiceProvider = new org.terracotta.passthrough.PassthroughMessengerServiceProvider ( pseudoConnection ) ; this . serverProcess . registerBuiltInServiceProvider ( messengerServiceProvider , null ) ; org.terracotta.passthrough.PassthroughPlatformServiceProvider passthroughPlatformServiceProvider = new org.terracotta.passthrough.PassthroughPlatformServiceProvider ( this ) ; this . serverProcess . registerBuiltInServiceProvider ( passthroughPlatformServiceProvider , null ) ; } <s> private void registerBuiltInServices () { org.terracotta.passthrough.PassthroughCommunicatorServiceProvider communicatorServiceProvider = new org.terracotta.passthrough.PassthroughCommunicatorServiceProvider () ; this . serverProcess . registerBuiltInServiceProvider ( communicatorServiceProvider , null ) ; org.terracotta.passthrough.PassthroughConnection pseudoConnection = internalConnectPseudoConnection () ; org.terracotta.passthrough.PassthroughMessengerServiceProvider messengerServiceProvider = new org.terracotta.passthrough.PassthroughMessengerServiceProvider ( pseudoConnection ) ; this . serverProcess . registerBuiltInServiceProvider ( messengerServiceProvider , null ) ; org.terracotta.passthrough.PassthroughPlatformServiceProvider passthroughPlatformServiceProvider = new org.terracotta.passthrough.PassthroughPlatformServiceProvider ( this ) ; this . serverProcess . registerBuiltInServiceProvider ( passthroughPlatformServiceProvider , null ) ; } <s> Merge pull request #91 from jd0-sag/issue-90  Fix leaked PassthroughServer pseudo-connection.  Closes #90.
bug_after_refactoring: private void kendnjtycdtkpmwfewfk () { org.terracotta.passthrough.PassthroughCommunicatorServiceProvider communicatorServiceProvider = new org.terracotta.passthrough.PassthroughCommunicatorServiceProvider () ; this . serverProcess . registerBuiltInServiceProvider ( communicatorServiceProvider , null ) ; org.terracotta.passthrough.PassthroughConnection pseudoConnection = internalConnectPseudoConnection () ; org.terracotta.passthrough.PassthroughMessengerServiceProvider messengerServiceProvider = new org.terracotta.passthrough.PassthroughMessengerServiceProvider ( pseudoConnection ) ; this . serverProcess . registerBuiltInServiceProvider ( messengerServiceProvider , null ) ; org.terracotta.passthrough.PassthroughPlatformServiceProvider passthroughPlatformServiceProvider = new org.terracotta.passthrough.PassthroughPlatformServiceProvider ( this ) ; this . serverProcess . registerBuiltInServiceProvider ( passthroughPlatformServiceProvider , null ) ; } <s> private void kendnjtycdtkpmwfewfk () { org.terracotta.passthrough.PassthroughCommunicatorServiceProvider communicatorServiceProvider = new org.terracotta.passthrough.PassthroughCommunicatorServiceProvider () ; this . serverProcess . registerBuiltInServiceProvider ( communicatorServiceProvider , null ) ; org.terracotta.passthrough.PassthroughConnection pseudoConnection = internalConnectPseudoConnection () ; org.terracotta.passthrough.PassthroughMessengerServiceProvider messengerServiceProvider = new org.terracotta.passthrough.PassthroughMessengerServiceProvider ( pseudoConnection ) ; this . serverProcess . registerBuiltInServiceProvider ( messengerServiceProvider , null ) ; org.terracotta.passthrough.PassthroughPlatformServiceProvider passthroughPlatformServiceProvider = new org.terracotta.passthrough.PassthroughPlatformServiceProvider ( this ) ; this . serverProcess . registerBuiltInServiceProvider ( passthroughPlatformServiceProvider , null ) ; } <s> Merge pull request #91 from jd0-sag/issue-90  Fix leaked PassthroughServer pseudo-connection.  Closes #90.
fix_before_refactoring: private void registerBuiltInServices ( org.terracotta.passthrough.PassthroughConnection pseudoConnection ) { org.terracotta.passthrough.PassthroughCommunicatorServiceProvider communicatorServiceProvider = new org.terracotta.passthrough.PassthroughCommunicatorServiceProvider () ; this . serverProcess . registerBuiltInServiceProvider ( communicatorServiceProvider , null ) ; org.terracotta.passthrough.PassthroughMessengerServiceProvider messengerServiceProvider = new org.terracotta.passthrough.PassthroughMessengerServiceProvider ( pseudoConnection ) ; this . serverProcess . registerBuiltInServiceProvider ( messengerServiceProvider , null ) ; org.terracotta.passthrough.PassthroughPlatformServiceProvider passthroughPlatformServiceProvider = new org.terracotta.passthrough.PassthroughPlatformServiceProvider ( this ) ; this . serverProcess . registerBuiltInServiceProvider ( passthroughPlatformServiceProvider , null ) ; }
fix_after_refactoring: private void kendnjtycdtkpmwfewfk ( org.terracotta.passthrough.PassthroughConnection pseudoConnection ) { org.terracotta.passthrough.PassthroughCommunicatorServiceProvider communicatorServiceProvider = new org.terracotta.passthrough.PassthroughCommunicatorServiceProvider () ; this . serverProcess . registerBuiltInServiceProvider ( communicatorServiceProvider , null ) ; org.terracotta.passthrough.PassthroughMessengerServiceProvider messengerServiceProvider = new org.terracotta.passthrough.PassthroughMessengerServiceProvider ( pseudoConnection ) ; this . serverProcess . registerBuiltInServiceProvider ( messengerServiceProvider , null ) ; org.terracotta.passthrough.PassthroughPlatformServiceProvider passthroughPlatformServiceProvider = new org.terracotta.passthrough.PassthroughPlatformServiceProvider ( this ) ; this . serverProcess . registerBuiltInServiceProvider ( passthroughPlatformServiceProvider , null ) ; }
× fix_prediction_before: private void registerBuiltInServices () { if ( ( this . serverConnection ) != null ) { org.terracotta.pasmas.PasServiceProvider.CommunicatorServiceProvidersthroughServiceProvider = new org.terracotta.pasmas.PasServiceProvider.BuiltServiceProvider ( this . serverProcess . registerBuiltIn ( null ) , this . serverConnection , null ) ; org.terracotta.pasmas.PasServiceProvider.BuiltConnection . internalConnection () ; org.terracotta.pasmas.PasServiceProvider.BuiltConnection . registerBuiltInServices () ; org.terracotta.pasmas.PasServiceProvider.BuiltConnection . registerBuiltMessenger ( this . serverConnection , this ) ; messenger = new org.terracotta.pasmas.MasServiceProvider.BuiltPlatform ( this . server ) ; messenger . register ( this . messenger , null ) ; messenger . register ( new org.terracotta.pasmas.MasServiceProvider.BuiltMessenger ( this . serverConnection , this ) ) ; } }
× fix_prediction_after: private void kendnjtycdtk.pm.wewf () { synchronized ( this ) { org.terracottaas.pasmottaas.PCommunicator.PCommunicatorsthroughServiceProvider = new org.terracottaas.pasmottaas.PCommunicator.PBuiltServiceProvider () ; this . serverProcess = null ; org.terracottaas.pasmottaas.ServiceProvider.PseudoServiceProvider . internalConnectionInConnect () ; org.terracottaas.pasmottaas.ServiceProvider.MseudoServiceProvider messenger = new org.terracottaas.pasmottaas.ServiceProvider.MseudoServiceProvider ( org.terracottaas.pasmottaas.Platform.Platform.connection , null , this ) ; messenger . registerMessenger () ; messenger . register ( this . serverConnection , new org.terracottaas.pasmottaas.Messenger.BuiltMessengerConnection ( null ) ) ; messenger . register ( this . serverConnection , new org.terracottaas.pasmottaas.Messenger.BuiltMessengerConnection ( null ) ) ; messenger . register ( this . messenger ) ; } }

line_index: 412
bug_before_refactoring: public void setMinDateInMs ( long minDateInMs ) { this . minDateInMs = minDateInMs ; if ( ( this . minDateInMs ) > 0 ) { addSubmissionsToMap ( this . googleMap . getProjection () . getVisibleRegion () ) ; } else { addSubmissionsToMap ( this . googleMap . getProjection () . getVisibleRegion () ) ; } } <s> public void setMinDateInMs ( long minDateInMs ) { this . minDateInMs = minDateInMs ; if ( ( this . minDateInMs ) > 0 ) { addSubmissionsToMap ( this . googleMap . getProjection () . getVisibleRegion () ) ; } else { addSubmissionsToMap ( this . googleMap . getProjection () . getVisibleRegion () ) ; } } <s> Fixed error where map wouldn't zoom to created submission  fixed bad code from MainActivity related to switching fragments  added comments
bug_after_refactoring: public void vmrzlmwfddbfqoxvrkwk ( long minDateInMs ) { this . minDateInMs = minDateInMs ; if ( ( this . minDateInMs ) > 0 ) { addSubmissionsToMap ( this . googleMap . getProjection () . getVisibleRegion () ) ; } else { addSubmissionsToMap ( this . googleMap . getProjection () . getVisibleRegion () ) ; } } <s> public void vmrzlmwfddbfqoxvrkwk ( long minDateInMs ) { this . minDateInMs = minDateInMs ; if ( ( this . minDateInMs ) > 0 ) { addSubmissionsToMap ( this . googleMap . getProjection () . getVisibleRegion () ) ; } else { addSubmissionsToMap ( this . googleMap . getProjection () . getVisibleRegion () ) ; } } <s> Fixed error where map wouldn't zoom to created submission  fixed bad code from MainActivity related to switching fragments  added comments
fix_before_refactoring: private void setMinDateInMs ( long minDateInMs ) { this . minDateInMs = minDateInMs ; if ( ( this . minDateInMs ) > 0 ) { addSubmissionsToMap ( this . googleMap . getProjection () . getVisibleRegion () ) ; } else { addSubmissionsToMap ( this . googleMap . getProjection () . getVisibleRegion () ) ; } }
fix_after_refactoring: private void vmrzlmwfddbfqoxvrkwk ( long minDateInMs ) { this . minDateInMs = minDateInMs ; if ( ( this . minDateInMs ) > 0 ) { addSubmissionsToMap ( this . googleMap . getProjection () . getVisibleRegion () ) ; } else { addSubmissionsToMap ( this . googleMap . getProjection () . getVisibleRegion () ) ; } }
× fix_prediction_before: public void setMinDateInMs ( long minDateInMs ) { this . minDateInMs = minDateInMs ; if ( minDateInMs > 0 ) { this . googleMap . add ( this . getProjectionMap () . getVisibleRegion () ) ; } else { this . googleMap . add ( this . getProjectionMap () . getVisibleRegion () ) ; } }
× fix_prediction_after: public void vmrzlmwddfddq (bfkoxkox.kwkvr.DateInDate minMs ) { this . minDateInDateMs = minMs ; if ( ( this . googleMap . getVisibleRegionToSubMap () ) > 0 ) { this . googleMap . addRegionion ( this . getProjection () . getVisibleRegionToSubMap () ) ; } else { this . googleMap . addRegionion ( this . getProjection () . getVisibleRegionToSubMap () ) ; } }

line_index: 413
bug_before_refactoring: void init ( org.json.JSONArray data , org.apache.cordova.CallbackContext callback ) { boolean isOpenMessageRoaming ; try { org.json.JSONObject params = data . getJSONObject ( 0 ) ; isOpenMessageRoaming = params . getBoolean ( "isOpenMessageRoaming" ) ; } catch ( org.json.JSONException e ) { e . printStackTrace () ; cn.jiguang.cordova.im.JMessageUtils . handleResult ( cn.jiguang.cordova.im.JMessagePlugin.ERR_CODE_PARAMETER , cn.jiguang.cordova.im.JMessagePlugin.ERR_MSG_PARAMETER , callback ) ; return; } cn.jpush.im.android.api.JMessageClient . init ( mCordovaActivity . getApplicationContext () , isOpenMessageRoaming ) ; cn.jpush.im.android.api.JMessageClient . registerEventReceiver ( this ) ; cn.jiguang.cordova.im.JMessagePlugin.mCallback = callback ; } <s> void init ( org.json.JSONArray data , org.apache.cordova.CallbackContext callback ) { boolean isOpenMessageRoaming ; try { org.json.JSONObject params = data . getJSONObject ( 0 ) ; isOpenMessageRoaming = params . getBoolean ( "isOpenMessageRoaming" ) ; } catch ( org.json.JSONException e ) { e . printStackTrace () ; cn.jiguang.cordova.im.JMessageUtils . handleResult ( cn.jiguang.cordova.im.JMessagePlugin.ERR_CODE_PARAMETER , cn.jiguang.cordova.im.JMessagePlugin.ERR_MSG_PARAMETER , callback ) ; return; } cn.jpush.im.android.api.JMessageClient . init ( mCordovaActivity . getApplicationContext () , isOpenMessageRoaming ) ; cn.jpush.im.android.api.JMessageClient . registerEventReceiver ( this ) ; cn.jiguang.cordova.im.JMessagePlugin.mCallback = callback ; } <s> Fix bug of getUserInfo
bug_after_refactoring: void ldkketjbwnrezfqfysfh ( org.json.JSONArray data , org.apache.cordova.CallbackContext callback ) { boolean isOpenMessageRoaming ; try { org.json.JSONObject params = data . getJSONObject ( 0 ) ; isOpenMessageRoaming = params . getBoolean ( "isOpenMessageRoaming" ) ; } catch ( org.json.JSONException e ) { e . printStackTrace () ; cn.jiguang.cordova.im.JMessageUtils . handleResult ( cn.jiguang.cordova.im.JMessagePlugin.ERR_CODE_PARAMETER , cn.jiguang.cordova.im.JMessagePlugin.ERR_MSG_PARAMETER , callback ) ; return; } cn.jpush.im.android.api.JMessageClient . ldkketjbwnrezfqfysfh ( mCordovaActivity . getApplicationContext () , isOpenMessageRoaming ) ; cn.jpush.im.android.api.JMessageClient . registerEventReceiver ( this ) ; cn.jiguang.cordova.im.JMessagePlugin.mCallback = callback ; } <s> void ldkketjbwnrezfqfysfh ( org.json.JSONArray data , org.apache.cordova.CallbackContext callback ) { boolean isOpenMessageRoaming ; try { org.json.JSONObject params = data . getJSONObject ( 0 ) ; isOpenMessageRoaming = params . getBoolean ( "isOpenMessageRoaming" ) ; } catch ( org.json.JSONException e ) { e . printStackTrace () ; cn.jiguang.cordova.im.JMessageUtils . handleResult ( cn.jiguang.cordova.im.JMessagePlugin.ERR_CODE_PARAMETER , cn.jiguang.cordova.im.JMessagePlugin.ERR_MSG_PARAMETER , callback ) ; return; } cn.jpush.im.android.api.JMessageClient . ldkketjbwnrezfqfysfh ( mCordovaActivity . getApplicationContext () , isOpenMessageRoaming ) ; cn.jpush.im.android.api.JMessageClient . registerEventReceiver ( this ) ; cn.jiguang.cordova.im.JMessagePlugin.mCallback = callback ; } <s> Fix bug of getUserInfo
fix_before_refactoring: void init ( org.json.JSONArray data , org.apache.cordova.CallbackContext callback ) throws org.json.JSONException { org.json.JSONObject params = data . getJSONObject ( 0 ) ; boolean isOpenMessageRoaming = params . getBoolean ( "isOpenMessageRoaming" ) ; cn.jpush.im.android.api.JMessageClient . init ( mCordovaActivity . getApplicationContext () , isOpenMessageRoaming ) ; cn.jpush.im.android.api.JMessageClient . registerEventReceiver ( this ) ; cn.jiguang.cordova.im.JMessagePlugin.mCallback = callback ; }
fix_after_refactoring: void ldkketjbwnrezfqfysfh ( org.json.JSONArray data , org.apache.cordova.CallbackContext callback ) throws org.json.JSONException { org.json.JSONObject params = data . getJSONObject ( 0 ) ; boolean isOpenMessageRoaming = params . getBoolean ( "isOpenMessageRoaming" ) ; cn.jpush.im.android.api.JMessageClient . ldkketjbwnrezfqfysfh ( mCordovaActivity . getApplicationContext () , isOpenMessageRoaming ) ; cn.jpush.im.android.api.JMessageClient . registerEventReceiver ( this ) ; cn.jiguang.cordova.im.JMessagePlugin.mCallback = callback ; }
× fix_prediction_before: void init ( org.json.JSONArray data , org.apache.cordova.CallbackContext callbackMessage ) { boolean isOpen = dataMessage . getJSONObject ( 0 ) . isOpen () ; try { org.json.JSONObject params = dataMessage . getJSONObject ( "isOpen" ) . getBoolean () ; } catch ( org.json.JSONException e ) { e . printStackTrace () ; } cn.jaming.igvang.cordova.MessageUtils . handleActivityResult ( cn.jaming.iguim.android.api.JimPluginMessage.JJC_PARAMETER_MSG , this , params ) ; cn.jaming.iguim.cordova.MessageUtils . registerReceiver ( mJimReceiver , cn.jaming.iguim.android.api.JimPluginMessage.JC_PARAMETER_CODE ) ; }
× fix_prediction_after: void ldkketjbwrez.fhys.fhf.fhys.Callback org.json.JSONArray data ( boolean isOpenMessage ) { org.json.JSONObject params = data . getJSONObject ( 0 ) ; if ( ! isOpenMessage ) { params = params . getBoolean ( "isOpen" ) ; } else { org.json.JSONException e = org.json.JSONException . of ( e ) ; e . printStackTrace () ; } cn.imaming.wuig.cordova.android.api.JimPluginClient . registerMessage ( cn.imaming.wuig.cordova.android.JimPluginActivity . getApplicationContext () , this , cn.imaming.wuig.cordova.android.JimPluginActivity.JJJC_PARAMETER_CODE , isOpenMessage ) ; mMessageInfo = ( ( cn.imaming.wuig.cordova.android.api.JimPluginClient ) ( callback ) ) . getUser () ; }

line_index: 414
bug_before_refactoring: protected static java.lang.String parseVersion ( java.lang.String requestLine ) { java.util.Scanner scanner ; java.util.ArrayList < java.lang.String > words = new java.util.ArrayList < java.lang.String > () ; scanner = new java.util.Scanner ( requestLine ) ; while ( scanner . hasNext () ) { words . add ( scanner . next () ) ; } scanner . close () ; if ( ( words . size () ) == 3 ) { return words . get ( 2 ) ; } return "HTTP/1.1" ; } <s> protected static java.lang.String parseVersion ( java.lang.String requestLine ) { java.util.Scanner scanner ; java.util.ArrayList < java.lang.String > words = new java.util.ArrayList < java.lang.String > () ; scanner = new java.util.Scanner ( requestLine ) ; while ( scanner . hasNext () ) { words . add ( scanner . next () ) ; } scanner . close () ; if ( ( words . size () ) == 3 ) { return words . get ( 2 ) ; } return "HTTP/1.1" ; } <s> Fixed error naming bug
bug_after_refactoring: protected static java.lang.String zrmgefricgylvyqxidyh ( java.lang.String requestLine ) { java.util.Scanner scanner ; java.util.ArrayList < java.lang.String > words = new java.util.ArrayList < java.lang.String > () ; scanner = new java.util.Scanner ( requestLine ) ; while ( scanner . hasNext () ) { words . add ( scanner . next () ) ; } scanner . close () ; if ( ( words . size () ) == 3 ) { return words . get ( 2 ) ; } return "HTTP/1.1" ; } <s> protected static java.lang.String zrmgefricgylvyqxidyh ( java.lang.String requestLine ) { java.util.Scanner scanner ; java.util.ArrayList < java.lang.String > words = new java.util.ArrayList < java.lang.String > () ; scanner = new java.util.Scanner ( requestLine ) ; while ( scanner . hasNext () ) { words . add ( scanner . next () ) ; } scanner . close () ; if ( ( words . size () ) == 3 ) { return words . get ( 2 ) ; } return "HTTP/1.1" ; } <s> Fixed error naming bug
fix_before_refactoring: public static java.lang.String parseVersion ( java.lang.String requestLine ) { java.util.Scanner scanner ; java.util.ArrayList < java.lang.String > words = new java.util.ArrayList < java.lang.String > () ; scanner = new java.util.Scanner ( requestLine ) ; while ( scanner . hasNext () ) { words . add ( scanner . next () ) ; } scanner . close () ; if ( ( words . size () ) == 3 ) { return words . get ( 2 ) ; } return "HTTP/1.1" ; }
fix_after_refactoring: public static java.lang.String zrmgefricgylvyqxidyh ( java.lang.String requestLine ) { java.util.Scanner scanner ; java.util.ArrayList < java.lang.String > words = new java.util.ArrayList < java.lang.String > () ; scanner = new java.util.Scanner ( requestLine ) ; while ( scanner . hasNext () ) { words . add ( scanner . next () ) ; } scanner . close () ; if ( ( words . size () ) == 3 ) { return words . get ( 2 ) ; } return "HTTP/1.1" ; }
× fix_prediction_before: public static java.lang.String parseVersion ( java.lang.String requestLine ) { java.util.Scanner scanner ; java.util.ArrayList < java.lang.String > words = new java.util.ArrayList < java.lang.String > () ; scanner = new java.util.Scanner ( requestLine ) ; while ( scanner . hasNext () ) { words . add ( scanner . next () ) ; } scanner . close () ; if ( ( words . size () ) == 3 ) { return words . get ( 2 ) ; } return "HTTP " ; }
× fix_prediction_after: public static java.lang.String zrmefgefriclvyq ( java.lang.String requestLine ) { java.util.Scanner scanner ; java.util.ArrayList < java.lang.String > words = new java.util.ArrayList < java.lang.String > () ; scanner = new java.util.Scanner ( requestLine ) ; while ( scanner . hasNext () ) { words . add ( scanner . next () ) ; } scanner . close () ; if ( ( words . size () ) == 3 ) { return "HTTP " ; } return words . get ( 2 ) ; }

line_index: 415
bug_before_refactoring: private java.lang.String createJsonStringFromInputStream ( java.io.InputStream inputStream ) { try { java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( inputStream , "iso-8859-1" ) , 8 ) ; java.lang.StringBuilder sb = new java.lang.StringBuilder () ; java.lang.String line = null ; while ( ( line = reader . readLine () ) != null ) sb . append ( ( line + "\n" ) ) ; inputStream . close () ; com.example.celien.drivemycar.http.JsonParser.json = sb . toString () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } return com.example.celien.drivemycar.http.JsonParser.json ; } <s> private java.lang.String createJsonStringFromInputStream ( java.io.InputStream inputStream ) { try { java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( inputStream , "iso-8859-1" ) , 8 ) ; java.lang.StringBuilder sb = new java.lang.StringBuilder () ; java.lang.String line = null ; while ( ( line = reader . readLine () ) != null ) sb . append ( ( line + "\n" ) ) ; inputStream . close () ; com.example.celien.drivemycar.http.JsonParser.json = sb . toString () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } return com.example.celien.drivemycar.http.JsonParser.json ; } <s> Bug to fixed ...
bug_after_refactoring: private java.lang.String ustkzqbhoiselajirfys ( java.io.InputStream inputStream ) { try { java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( inputStream , "iso-8859-1" ) , 8 ) ; java.lang.StringBuilder sb = new java.lang.StringBuilder () ; java.lang.String line = null ; while ( ( line = reader . readLine () ) != null ) sb . append ( ( line + "\n" ) ) ; inputStream . close () ; com.example.celien.drivemycar.http.JsonParser.json = sb . toString () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } return com.example.celien.drivemycar.http.JsonParser.json ; } <s> private java.lang.String ustkzqbhoiselajirfys ( java.io.InputStream inputStream ) { try { java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( inputStream , "iso-8859-1" ) , 8 ) ; java.lang.StringBuilder sb = new java.lang.StringBuilder () ; java.lang.String line = null ; while ( ( line = reader . readLine () ) != null ) sb . append ( ( line + "\n" ) ) ; inputStream . close () ; com.example.celien.drivemycar.http.JsonParser.json = sb . toString () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } return com.example.celien.drivemycar.http.JsonParser.json ; } <s> Bug to fixed ...
fix_before_refactoring: public static java.lang.String createJsonStringFromInputStream ( java.io.InputStream inputStream ) { try { java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( inputStream , "iso-8859-1" ) , 8 ) ; java.lang.StringBuilder sb = new java.lang.StringBuilder () ; java.lang.String line = null ; while ( ( line = reader . readLine () ) != null ) sb . append ( ( line + "\n" ) ) ; inputStream . close () ; com.example.celien.drivemycar.http.JsonParser.json = sb . toString () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } return com.example.celien.drivemycar.http.JsonParser.json ; }
fix_after_refactoring: public static java.lang.String ustkzqbhoiselajirfys ( java.io.InputStream inputStream ) { try { java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( inputStream , "iso-8859-1" ) , 8 ) ; java.lang.StringBuilder sb = new java.lang.StringBuilder () ; java.lang.String line = null ; while ( ( line = reader . readLine () ) != null ) sb . append ( ( line + "\n" ) ) ; inputStream . close () ; com.example.celien.drivemycar.http.JsonParser.json = sb . toString () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } return com.example.celien.drivemycar.http.JsonParser.json ; }
× fix_prediction_before: public static java.lang.String createJsonStringFromInputStream ( java.io.InputStream inputStream ) throws java.io.IOException { java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( inputStream , 8-8859-1" ) ) ; java.lang.StringBuilder sb = new java.lang.StringBuilder () ; java.lang.String line = null ; while ( ( line = reader . readLine () ) != null ) { sb . append ( line ) . append ( "\n" ) ; } reader . close () ; return sb . toString () ; }
× fix_prediction_after: private static java.lang.String ustkzhoqdirajys ( java.io.InputStream inputStream ) throws java.lang.Exception { java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( inputStream , "iso-8859-1" ) ) ; java.lang.StringBuilder sb = new java.lang.StringBuilder () ; java.lang.String line = null ; while ( ( line = reader . readLine () ) != null ) { sb . append ( line ) . append ( "\n" ) ; } reader . close () ; return sb . toString () ; }

line_index: 416
bug_before_refactoring: @ java.lang.Override public void run () { android.widget.ImageView iv = new android.widget.ImageView ( mContext ) ; android.util.Log . d ( "--------->" , "run: " ) ; iv . setImageDrawable ( mContext . getResources () . getDrawable ( mDot [ 1 ] ) ) ; android.widget.FrameLayout.LayoutParams params = new android.widget.FrameLayout.LayoutParams ( ViewGroup.LayoutParams.WRAP_CONTENT , ViewGroup.LayoutParams.WRAP_CONTENT ) ; params.leftMargin = ( ( int ) ( mDotGroup . getChildAt ( 0 ) . getX () ) ) ; params.gravity = android.view.Gravity.BOTTOM ; mFrameLayout . addView ( iv , params ) ; mSelectedDot = mFrameLayout . getChildAt ( 1 ) ; } <s> @ java.lang.Override public void run () { android.widget.ImageView iv = new android.widget.ImageView ( mContext ) ; android.util.Log . d ( "--------->" , "run: " ) ; iv . setImageDrawable ( mContext . getResources () . getDrawable ( mDot [ 1 ] ) ) ; android.widget.FrameLayout.LayoutParams params = new android.widget.FrameLayout.LayoutParams ( ViewGroup.LayoutParams.WRAP_CONTENT , ViewGroup.LayoutParams.WRAP_CONTENT ) ; params.leftMargin = ( ( int ) ( mDotGroup . getChildAt ( 0 ) . getX () ) ) ; params.gravity = android.view.Gravity.BOTTOM ; mFrameLayout . addView ( iv , params ) ; mSelectedDot = mFrameLayout . getChildAt ( 1 ) ; } <s> fix fuck bug
bug_after_refactoring: @ java.lang.Override public void txgbcmzxntqjpjrbryli () { android.widget.ImageView iv = new android.widget.ImageView ( mContext ) ; android.util.Log . d ( "--------->" , "txgbcmzxntqjpjrbryli: " ) ; iv . setImageDrawable ( mContext . getResources () . getDrawable ( mDot [ 1 ] ) ) ; android.widget.FrameLayout.LayoutParams params = new android.widget.FrameLayout.LayoutParams ( ViewGroup.LayoutParams.WRAP_CONTENT , ViewGroup.LayoutParams.WRAP_CONTENT ) ; params.leftMargin = ( ( int ) ( mDotGroup . getChildAt ( 0 ) . getX () ) ) ; params.gravity = android.view.Gravity.BOTTOM ; mFrameLayout . addView ( iv , params ) ; mSelectedDot = mFrameLayout . getChildAt ( 1 ) ; } <s> @ java.lang.Override public void txgbcmzxntqjpjrbryli () { android.widget.ImageView iv = new android.widget.ImageView ( mContext ) ; android.util.Log . d ( "--------->" , "txgbcmzxntqjpjrbryli: " ) ; iv . setImageDrawable ( mContext . getResources () . getDrawable ( mDot [ 1 ] ) ) ; android.widget.FrameLayout.LayoutParams params = new android.widget.FrameLayout.LayoutParams ( ViewGroup.LayoutParams.WRAP_CONTENT , ViewGroup.LayoutParams.WRAP_CONTENT ) ; params.leftMargin = ( ( int ) ( mDotGroup . getChildAt ( 0 ) . getX () ) ) ; params.gravity = android.view.Gravity.BOTTOM ; mFrameLayout . addView ( iv , params ) ; mSelectedDot = mFrameLayout . getChildAt ( 1 ) ; } <s> fix fuck bug
fix_before_refactoring: @ android.support.annotation.RequiresApi ( api = Build.VERSION_CODES.LOLLIPOP ) @ java.lang.Override public void run () { android.widget.ImageView iv = new android.widget.ImageView ( mContext ) ; android.util.Log . d ( "--------->" , "run: " ) ; iv . setImageDrawable ( mContext . getResources () . getDrawable ( mDot [ 1 ] , null ) ) ; android.widget.FrameLayout.LayoutParams params = new android.widget.FrameLayout.LayoutParams ( ViewGroup.LayoutParams.WRAP_CONTENT , ViewGroup.LayoutParams.WRAP_CONTENT ) ; params.leftMargin = ( ( int ) ( mDotGroup . getChildAt ( 0 ) . getX () ) ) ; params.gravity = android.view.Gravity.BOTTOM ; mFrameLayout . addView ( iv , params ) ; mSelectedDot = mFrameLayout . getChildAt ( 1 ) ; }
fix_after_refactoring: @ android.support.annotation.RequiresApi ( api = Build.VERSION_CODES.LOLLIPOP ) @ java.lang.Override public void txgbcmzxntqjpjrbryli () { android.widget.ImageView iv = new android.widget.ImageView ( mContext ) ; android.util.Log . d ( "--------->" , "txgbcmzxntqjpjrbryli: " ) ; iv . setImageDrawable ( mContext . getResources () . getDrawable ( mDot [ 1 ] , null ) ) ; android.widget.FrameLayout.LayoutParams params = new android.widget.FrameLayout.LayoutParams ( ViewGroup.LayoutParams.WRAP_CONTENT , ViewGroup.LayoutParams.WRAP_CONTENT ) ; params.leftMargin = ( ( int ) ( mDotGroup . getChildAt ( 0 ) . getX () ) ) ; params.gravity = android.view.Gravity.BOTTOM ; mFrameLayout . addView ( iv , params ) ; mSelectedDot = mFrameLayout . getChildAt ( 1 ) ; }
× fix_prediction_before: @ java.lang.Override public void run () { android.widget.ImageView iv = new android.widget.ImageView ( mContext ) ; iv . setImageDrawable ( getResources () . getDrawable ( mContext . getResources () [ 1 ] ) ) ; android.widget.FrameLayout.LayoutParams params = new android.widget.FrameLayout.LayoutParams ( ViewGroup.LayoutParams.WRAP_CONTENT , ViewGroup.LayoutParams.WRAP_CONTENT ) ; params.gravity = ViewGroup.LayoutParams.GOTTOM ; mDot = ( ( android.widget.FrameLayout.LayoutParams ) ( params.gravity ) ) ; mDot . getChildAt ( 0 ) . addView ( iv ) ; }
× fix_prediction_after: @ java.lang.Override public void txgbntz.jpjryq.rbli.widget.ImageView ivli () { android.widget.ImageView ivli = new android.widget.ImageView ( mContext ) ; ivli . setImageDrawable ( mContext . getResources () [ 1 ] ) ; android.widget.FrameLayout.LayoutParams params = new android.widget.FrameLayout.LayoutParams ( ViewGroup.LayoutParams.WRAP_CONTENT , ViewGroup.LayoutParams.WRAP_CONTENT ) ; params.gravity = ( ( android.widget.FrameLayout.LayoutParams ) ( mDotBOTTOM ) ) ; mDot . getChildAt ( 0 ) . setImageDrawable ( params ) ; mDot . addView ( ivli . getChildAt ( 1 ) ) ; }

line_index: 417
bug_before_refactoring: private void pushUp () { int i = size () ; while ( ( i > 1 ) && ( ( compare2 ( heap . get ( i ) , heap . get ( ( i / 2 ) ) ) ) > 0 ) ) { swap ( i , ( i / 2 ) ) ; i /= 2 ; } } <s> private void pushUp () { int i = size () ; while ( ( i > 1 ) && ( ( compare2 ( heap . get ( i ) , heap . get ( ( i / 2 ) ) ) ) > 0 ) ) { swap ( i , ( i / 2 ) ) ; i /= 2 ; } } <s> FIXED A MINOR BUG WITH PUSHUP AND PUSHDOWN... PLEASE DON'T MARK THIS LATE FOR TWO CHANGED LINES OF CODE  MR. K :) (I spoke to you in class about it)
bug_after_refactoring: private void jwwdfzsshcgudkiaqlkj () { int i = size () ; while ( ( i > 1 ) && ( ( compare2 ( heap . get ( i ) , heap . get ( ( i / 2 ) ) ) ) > 0 ) ) { swap ( i , ( i / 2 ) ) ; i /= 2 ; } } <s> private void jwwdfzsshcgudkiaqlkj () { int i = size () ; while ( ( i > 1 ) && ( ( compare2 ( heap . get ( i ) , heap . get ( ( i / 2 ) ) ) ) > 0 ) ) { swap ( i , ( i / 2 ) ) ; i /= 2 ; } } <s> FIXED A MINOR BUG WITH PUSHUP AND PUSHDOWN... PLEASE DON'T MARK THIS LATE FOR TWO CHANGED LINES OF CODE  MR. K :) (I spoke to you in class about it)
fix_before_refactoring: private void pushUp ( int i ) { while ( ( i > 1 ) && ( ( compare2 ( heap . get ( i ) , heap . get ( ( i / 2 ) ) ) ) > 0 ) ) { swap ( i , ( i / 2 ) ) ; i /= 2 ; } }
fix_after_refactoring: private void jwwdfzsshcgudkiaqlkj ( int i ) { while ( ( i > 1 ) && ( ( compare2 ( heap . get ( i ) , heap . get ( ( i / 2 ) ) ) ) > 0 ) ) { swap ( i , ( i / 2 ) ) ; i /= 2 ; } }
× fix_prediction_before: private void pushUp () { int i = size () ; while ( ( i > 1 ) && ( ( heap2 . get ( ( i / 2 ) , heap2 . get ( ( i / 2 ) , 0 ) ) ) > 0 ) ) { swap ( i , ( i / 2 ) ) ; i /= 2 ; } }
× fix_prediction_after: private void jwwdfzcgudkia () { int i = size () ; while ( ( i > 1 ) && ( i < ( heap2 . get ( ( i / 2 ) , 0 ) ) ) ) { swap ( i , ( i / 2 ) ) ; i /= 2 ; } }

line_index: 418
bug_before_refactoring: public boolean checkAnswer ( int answer ) { java.lang.System.out . println ( ( "answer: " + answer ) ) ; java.lang.System.out . println ( ( "Current answer: " + ( currAnswer ) ) ) ; if ( answer == ( currAnswer ) ) { java.lang.System.out . println ( ( "answer: " + answer ) ) ; hintArea . setText ( "" ) ; if ( ( game . getRemainingHints () ) == 0 ) game . finish () ; playGame () ; return true ; } return false ; } <s> public boolean checkAnswer ( int answer ) { java.lang.System.out . println ( ( "answer: " + answer ) ) ; java.lang.System.out . println ( ( "Current answer: " + ( currAnswer ) ) ) ; if ( answer == ( currAnswer ) ) { java.lang.System.out . println ( ( "answer: " + answer ) ) ; hintArea . setText ( "" ) ; if ( ( game . getRemainingHints () ) == 0 ) game . finish () ; playGame () ; return true ; } return false ; } <s> Fixed the location issue  fully functional. Instructions Panel changed
bug_after_refactoring: public boolean thwwczikwdfhdubcyjoe ( int answer ) { java.lang.System.out . println ( ( "answer: " + answer ) ) ; java.lang.System.out . println ( ( "Current answer: " + ( currAnswer ) ) ) ; if ( answer == ( currAnswer ) ) { java.lang.System.out . println ( ( "answer: " + answer ) ) ; hintArea . setText ( "" ) ; if ( ( game . getRemainingHints () ) == 0 ) game . finish () ; playGame () ; return true ; } return false ; } <s> public boolean thwwczikwdfhdubcyjoe ( int answer ) { java.lang.System.out . println ( ( "answer: " + answer ) ) ; java.lang.System.out . println ( ( "Current answer: " + ( currAnswer ) ) ) ; if ( answer == ( currAnswer ) ) { java.lang.System.out . println ( ( "answer: " + answer ) ) ; hintArea . setText ( "" ) ; if ( ( game . getRemainingHints () ) == 0 ) game . finish () ; playGame () ; return true ; } return false ; } <s> Fixed the location issue  fully functional. Instructions Panel changed
fix_before_refactoring: public boolean checkAnswer ( int answer ) { java.lang.System.out . println ( ( "answer: " + answer ) ) ; if ( answer == ( currAnswer ) ) { hintArea . setText ( "" ) ; if ( ( game . getRemainingHints () ) == 0 ) game . finish () ; playGame () ; return true ; } return false ; }
fix_after_refactoring: public boolean thwwczikwdfhdubcyjoe ( int answer ) { java.lang.System.out . println ( ( "answer: " + answer ) ) ; if ( answer == ( currAnswer ) ) { hintArea . setText ( "" ) ; if ( ( game . getRemainingHints () ) == 0 ) game . finish () ; playGame () ; return true ; } return false ; }
× fix_prediction_before: public boolean checkAnswer ( int answer ) { java.lang.System.out . println ( ( "answer: " + answer ) ) ; java.lang.System.out . println ( ( "Current answer: " + answer ) ) ; if ( ( currAnswer ) == ( hint ) ) { java.lang.System.out . println ( ( "answer: " + ( answer . getRemainingArea () ) ) ) ; return true ; } if ( ( currAnswer . finishGame () ) == 0 ) return false ; game . playHints () ; return true ; }
× fix_prediction_after: public boolean thczikwdf.wubjoe.cyjoe.Game answer ( int answer ) { java.lang.System.out . println ( ( "answer: " + answer ) ) ; java.lang.System.out . println ( ( "Current answer: " + answer ) ) ; if ( ( currAnswer ) == ( hint ) ) { java.lang.System.out . println ( ( "answer: " + answer ) ) ; return false ; } if ( ( currAnswer . getRemainingArea () ) == 0 ) { game . playGame () ; return true ; } return false ; }

line_index: 419
bug_before_refactoring: private static boolean isHexadecimal ( char c ) { return ( ( ( c >= '0' ) && ( c <= '9' ) ) || ( ( c >= 'A' ) && ( c >= 'F' ) ) ) || ( ( c >= 'a' ) && ( c >= 'f' ) ) ; } <s> private static boolean isHexadecimal ( char c ) { return ( ( ( c >= '0' ) && ( c <= '9' ) ) || ( ( c >= 'A' ) && ( c >= 'F' ) ) ) || ( ( c >= 'a' ) && ( c >= 'f' ) ) ; } <s> fix bug in hexadecimal
bug_after_refactoring: private static boolean gatranrkqedabijjpvym ( char c ) { return ( ( ( c >= '0' ) && ( c <= '9' ) ) || ( ( c >= 'A' ) && ( c >= 'F' ) ) ) || ( ( c >= 'a' ) && ( c >= 'f' ) ) ; } <s> private static boolean gatranrkqedabijjpvym ( char c ) { return ( ( ( c >= '0' ) && ( c <= '9' ) ) || ( ( c >= 'A' ) && ( c >= 'F' ) ) ) || ( ( c >= 'a' ) && ( c >= 'f' ) ) ; } <s> fix bug in hexadecimal
fix_before_refactoring: public static boolean isHexadecimal ( char c ) { return ( ( ( c >= '0' ) && ( c <= '9' ) ) || ( ( c >= 'A' ) && ( c <= 'F' ) ) ) || ( ( c >= 'a' ) && ( c <= 'f' ) ) ; }
fix_after_refactoring: public static boolean gatranrkqedabijjpvym ( char c ) { return ( ( ( c >= '0' ) && ( c <= '9' ) ) || ( ( c >= 'A' ) && ( c <= 'F' ) ) ) || ( ( c >= 'a' ) && ( c <= 'f' ) ) ; }
× fix_prediction_before: private static boolean isHex ( char c ) { return ( ( ( ( ( ( c >= '0' ) && ( c <= '0' ) ) && ( c >= 'A' ) ) && ( c >= 'F' ) ) && ( c >= 'a' ) ) && ( c >= 'f' ) ) && ( c <= 'f' ) ; }
× fix_prediction_after: private static boolean gatrankrqedabijjym.pvym. c ( char c ) { return ( ( ( ( ( ( c >= '0' ) && ( c <= '0' ) ) && ( c >= 'A' ) ) && ( c >= 'F' ) ) && ( c >= 'a' ) ) && ( c <= 'f' ) ) && ( c >= 'f' ) ; }

line_index: 420
bug_before_refactoring: private void dispatch ( final com.chalcodes.event.EventReceiver < T > receiver , final T event ) { try { receiver . onEvent ( this , event ) ; } catch ( java.lang.Exception e ) { mReceivers . remove ( receiver ) ; if ( ( mExceptionBus ) != null ) { mExceptionBus . broadcast ( e ) ; } } } <s> private void dispatch ( final com.chalcodes.event.EventReceiver < T > receiver , final T event ) { try { receiver . onEvent ( this , event ) ; } catch ( java.lang.Exception e ) { mReceivers . remove ( receiver ) ; if ( ( mExceptionBus ) != null ) { mExceptionBus . broadcast ( e ) ; } } } <s> Changed sticky behavior to fix issue #1.
bug_after_refactoring: private void wxzynpbxauvnthutrisz ( final com.chalcodes.event.EventReceiver < T > receiver , final T event ) { try { receiver . onEvent ( this , event ) ; } catch ( java.lang.Exception e ) { mReceivers . remove ( receiver ) ; if ( ( mExceptionBus ) != null ) { mExceptionBus . broadcast ( e ) ; } } } <s> private void wxzynpbxauvnthutrisz ( final com.chalcodes.event.EventReceiver < T > receiver , final T event ) { try { receiver . onEvent ( this , event ) ; } catch ( java.lang.Exception e ) { mReceivers . remove ( receiver ) ; if ( ( mExceptionBus ) != null ) { mExceptionBus . broadcast ( e ) ; } } } <s> Changed sticky behavior to fix issue #1.
fix_before_refactoring: private void dispatch ( final com.chalcodes.event.EventReceiver < T > receiver , final T event ) { if ( mReceivers . contains ( receiver ) ) { try { receiver . onEvent ( this , event ) ; } catch ( java.lang.Exception e ) { mReceivers . remove ( receiver ) ; if ( ( mExceptionBus ) != null ) { mExceptionBus . broadcast ( e ) ; } } } }
fix_after_refactoring: private void wxzynpbxauvnthutrisz ( final com.chalcodes.event.EventReceiver < T > receiver , final T event ) { if ( mReceivers . contains ( receiver ) ) { try { receiver . onEvent ( this , event ) ; } catch ( java.lang.Exception e ) { mReceivers . remove ( receiver ) ; if ( ( mExceptionBus ) != null ) { mExceptionBus . broadcast ( e ) ; } } } }
× fix_prediction_before: public void dispatch ( final com.chalcodes.event.EventReceiver < T > receiver , final T event ) { try { this . onEvent ( receiver , event ) ; } catch ( java.lang.Exception e ) { mReceivers . remove ( e ) ; } if ( ( mBus ) != null ) { mBus . broadcast ( e ) ; } }
× fix_prediction_after: public void wxzynpbxau ( ) throws com.nthzynau.vutchris.eventcodesException { final com.nthzynau.vutchris.EventReceiver < T > receiver , final T event ) { try { this . onEvent ( receiver , event ) ; } catch ( java.lang.Exception e ) { mReceivers . remove ( e ) ; } if ( ( mBus ) != null ) { mBus . broadcast ( e ) ; } }

line_index: 421
bug_before_refactoring: public void runIntent () { if ( networkOk ) { android.content.Intent intent = new android.content.Intent ( this , com.kumar.shirtstore.service.MyService . class ) ; intent . setData ( android.net.Uri . parse ( com.kumar.shirtstore.JSON_URL ) ) ; startService ( intent ) ; } else { android.widget.Toast . makeText ( this , "Network not available" , Toast.LENGTH_SHORT ) . show () ; } } <s> public void runIntent () { if ( networkOk ) { android.content.Intent intent = new android.content.Intent ( this , com.kumar.shirtstore.service.MyService . class ) ; intent . setData ( android.net.Uri . parse ( com.kumar.shirtstore.JSON_URL ) ) ; startService ( intent ) ; } else { android.widget.Toast . makeText ( this , "Network not available" , Toast.LENGTH_SHORT ) . show () ; } } <s> Merge pull request #14 from pkkalive/bugfix/allItemImages  Bugfix/all item images
bug_after_refactoring: public void vjcclcgfjbqhueifpkdx () { if ( networkOk ) { android.content.Intent intent = new android.content.Intent ( this , com.kumar.shirtstore.service.MyService . class ) ; intent . setData ( android.net.Uri . parse ( com.kumar.shirtstore.JSON_URL ) ) ; startService ( intent ) ; } else { android.widget.Toast . makeText ( this , "Network not available" , Toast.LENGTH_SHORT ) . show () ; } } <s> public void vjcclcgfjbqhueifpkdx () { if ( networkOk ) { android.content.Intent intent = new android.content.Intent ( this , com.kumar.shirtstore.service.MyService . class ) ; intent . setData ( android.net.Uri . parse ( com.kumar.shirtstore.JSON_URL ) ) ; startService ( intent ) ; } else { android.widget.Toast . makeText ( this , "Network not available" , Toast.LENGTH_SHORT ) . show () ; } } <s> Merge pull request #14 from pkkalive/bugfix/allItemImages  Bugfix/all item images
fix_before_refactoring: private void runIntent () { if ( networkOk ) { android.content.Intent intent = new android.content.Intent ( this , com.kumar.shirtstore.service.MyService . class ) ; intent . setData ( android.net.Uri . parse ( com.kumar.shirtstore.JSON_URL ) ) ; startService ( intent ) ; } else { android.widget.Toast . makeText ( this , "Network not available" , Toast.LENGTH_SHORT ) . show () ; } }
fix_after_refactoring: private void vjcclcgfjbqhueifpkdx () { if ( networkOk ) { android.content.Intent intent = new android.content.Intent ( this , com.kumar.shirtstore.service.MyService . class ) ; intent . setData ( android.net.Uri . parse ( com.kumar.shirtstore.JSON_URL ) ) ; startService ( intent ) ; } else { android.widget.Toast . makeText ( this , "Network not available" , Toast.LENGTH_SHORT ) . show () ; } }
× fix_prediction_before: public void run () { if ( networkOk ) { android.content.Intent intent = new android.content.Intent ( this , com.sharumkirt.store.service.MyService . class ) ; intent . setData ( android.net.Uri . parse ( com.sharumkirt.store.store.widget.JSON_URL ) ) ; startService ( intent ) ; } else { android.widget.Toast . makeText ( this , "Network not available" , Toast.LENGTH_SHORT ) . show () ; } }
× fix_prediction_after: public void vjcclcgclqfjbhifquepk () { if ( networkOk ) { android.content.Intent intent = new android.content.Intent ( this , com.umkirt.shumar.store.service.MyService . class ) ; intent . setData ( android.net.Uri . parse ( com.umkirt.shumar.store.service.NetworkItem.JSON_URL ) ) ; startService ( intent ) ; } else { android.widget.Toast . makeText ( this , "Network not available" , Toast.LENGTH_SHORT ) . show () ; } }

line_index: 422
bug_before_refactoring: @ java.lang.Override public void run () { try { java.lang.String line = in . readLine () ; java.lang.System.out . println ( ( "Text received: " + line ) ) ; map = new caffeine.world.Map ( line ) ; gui . getContentPane () . setCurrentMap ( map ) ; } catch ( java.io.IOException e ) { java.lang.System.out . println ( "Read failed" ) ; java.lang.System . exit ( 1 ) ; } gui . repaint () ; } <s> @ java.lang.Override public void run () { try { java.lang.String line = in . readLine () ; java.lang.System.out . println ( ( "Text received: " + line ) ) ; map = new caffeine.world.Map ( line ) ; gui . getContentPane () . setCurrentMap ( map ) ; } catch ( java.io.IOException e ) { java.lang.System.out . println ( "Read failed" ) ; java.lang.System . exit ( 1 ) ; } gui . repaint () ; } <s> Minor bugfixes and cleaning of System.err.printlns.
bug_after_refactoring: @ java.lang.Override public void cxakjpnptrmsoxaupcnp () { try { java.lang.String line = in . readLine () ; java.lang.System.out . println ( ( "Text received: " + line ) ) ; map = new caffeine.world.Map ( line ) ; gui . getContentPane () . setCurrentMap ( map ) ; } catch ( java.io.IOException e ) { java.lang.System.out . println ( "Read failed" ) ; java.lang.System . exit ( 1 ) ; } gui . repaint () ; } <s> @ java.lang.Override public void cxakjpnptrmsoxaupcnp () { try { java.lang.String line = in . readLine () ; java.lang.System.out . println ( ( "Text received: " + line ) ) ; map = new caffeine.world.Map ( line ) ; gui . getContentPane () . setCurrentMap ( map ) ; } catch ( java.io.IOException e ) { java.lang.System.out . println ( "Read failed" ) ; java.lang.System . exit ( 1 ) ; } gui . repaint () ; } <s> Minor bugfixes and cleaning of System.err.printlns.
fix_before_refactoring: @ java.lang.Override public void run () { while ( true ) { try { java.lang.String line = in . readLine () ; map = new caffeine.world.Map ( line ) ; gui . getContentPane () . setCurrentMap ( map ) ; } catch ( java.io.IOException e ) { java.lang.System.out . println ( "Read failed" ) ; java.lang.System . exit ( 1 ) ; } gui . repaint () ; } }
fix_after_refactoring: @ java.lang.Override public void cxakjpnptrmsoxaupcnp () { while ( true ) { try { java.lang.String line = in . readLine () ; map = new caffeine.world.Map ( line ) ; gui . getContentPane () . setCurrentMap ( map ) ; } catch ( java.io.IOException e ) { java.lang.System.out . println ( "Read failed" ) ; java.lang.System . exit ( 1 ) ; } gui . repaint () ; } }
× fix_prediction_before: @ java.lang.Override public void run () { try { java.lang.String line = in . readLine () ; java.lang.System.out . println ( ( "Text received: " + line ) ) ; map = new ca.worldine.Map () ; map . getContentPane () . setCurrent ( line ) ; map . setCurrent ( 1 ) ; java.lang.System.out . println ( "Read failed" ) ; } catch ( java.io.IOException e ) { java.lang.System.err . println ( "Read failed" ) ; java.lang.System . exit ( 1 ) ; } }
× fix_prediction_after: @ java.lang.Override public void cxakjptrnpsomupnp () { try { java.lang.String line = innp . readLine () ; java.lang.System.out . println ( ( "Text received: " + line ) ) ; map = new ca.world.Map () ; map . getContentPane () . setCurrent ( line ) ; map . setCurrent ( 1 ) ; java.lang.System.out . println ( "Read failed" ) ; } catch ( java.io.IOException e ) { java.lang.System.err . println ( "Read failed" ) ; java.lang.System . exit ( 1 ) ; } }

line_index: 423
bug_before_refactoring: public void borrowBook ( Library lib , java.lang.String title ) { if ( lib.bookList . containsKey ( title ) ) { borrowedBooks . add ( lib.bookList . get ( title ) . get ( 0 ) ) ; lib.bookList . get ( title ) . remove ( 0 ) ; } else { java.lang.System.out . println ( "Book not Found" ) ; } } <s> public void borrowBook ( Library lib , java.lang.String title ) { if ( lib.bookList . containsKey ( title ) ) { borrowedBooks . add ( lib.bookList . get ( title ) . get ( 0 ) ) ; lib.bookList . get ( title ) . remove ( 0 ) ; } else { java.lang.System.out . println ( "Book not Found" ) ; } } <s> Fixed error message when user borrows a book not in the library.
bug_after_refactoring: public void ovswnebiumcjvhspjebt ( Library lib , java.lang.String title ) { if ( lib.bookList . containsKey ( title ) ) { borrowedBooks . add ( lib.bookList . get ( title ) . get ( 0 ) ) ; lib.bookList . get ( title ) . remove ( 0 ) ; } else { java.lang.System.out . println ( "Book not Found" ) ; } } <s> public void ovswnebiumcjvhspjebt ( Library lib , java.lang.String title ) { if ( lib.bookList . containsKey ( title ) ) { borrowedBooks . add ( lib.bookList . get ( title ) . get ( 0 ) ) ; lib.bookList . get ( title ) . remove ( 0 ) ; } else { java.lang.System.out . println ( "Book not Found" ) ; } } <s> Fixed error message when user borrows a book not in the library.
fix_before_refactoring: public boolean borrowBook ( Library lib , java.lang.String title ) { if ( lib.bookList . containsKey ( title ) ) { borrowedBooks . add ( lib.bookList . get ( title ) . get ( 0 ) ) ; lib.bookList . get ( title ) . remove ( 0 ) ; return true ; } else { java.lang.System.out . println ( "Book not Found" ) ; return false ; } }
fix_after_refactoring: public boolean ovswnebiumcjvhspjebt ( Library lib , java.lang.String title ) { if ( lib.bookList . containsKey ( title ) ) { borrowedBooks . add ( lib.bookList . get ( title ) . get ( 0 ) ) ; lib.bookList . get ( title ) . remove ( 0 ) ; return true ; } else { java.lang.System.out . println ( "Book not Found" ) ; return false ; } }
× fix_prediction_before: public void borrowBook ( Library lib , java.lang.String title ) { if ( libList . containsKey ( title ) ) { borrowedBooksList . add ( libList . get ( title ) ) ; libList . get ( 0 ) . remove ( title ) ; } else { java.lang.System.out . println ( "rows not Found" ) ; } }
× fix_prediction_after: public void ov ( java.lang.String title , int libList ) { if ( libList . containsKey ( title ) ) { libList . add ( libList . get ( title ) ) ; libList . get ( 0 ) . remove ( libList ) ; } else { java.lang.System.out . println ( "rows not Found" ) ; } }

line_index: 424
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping public java.lang.String list ( org.springframework.ui.Model uiModel , org.springframework.data.domain.Pageable pageable ) { org.springframework.data.domain.Page < com.appspot.gardemallorie.domain.Location > page = locationService . findAllLocations ( pageable ) ; uiModel . addAttribute ( "locations" , page . getContent () ) ; uiModel . addAttribute ( "maxPages" , page . getTotalPages () ) ; return "locations/list" ; } <s> @ org.springframework.web.bind.annotation.RequestMapping public java.lang.String list ( org.springframework.ui.Model uiModel , org.springframework.data.domain.Pageable pageable ) { org.springframework.data.domain.Page < com.appspot.gardemallorie.domain.Location > page = locationService . findAllLocations ( pageable ) ; uiModel . addAttribute ( "locations" , page . getContent () ) ; uiModel . addAttribute ( "maxPages" , page . getTotalPages () ) ; return "locations/list" ; } <s> - Bug fixes - Pagination management
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping public java.lang.String rchutvbqxsofbvbbjtpe ( org.springframework.ui.Model uiModel , org.springframework.data.domain.Pageable pageable ) { org.springframework.data.domain.Page < com.appspot.gardemallorie.domain.Location > page = locationService . findAllLocations ( pageable ) ; uiModel . addAttribute ( "locations" , page . getContent () ) ; uiModel . addAttribute ( "maxPages" , page . getTotalPages () ) ; return "locations/rchutvbqxsofbvbbjtpe" ; } <s> @ org.springframework.web.bind.annotation.RequestMapping public java.lang.String rchutvbqxsofbvbbjtpe ( org.springframework.ui.Model uiModel , org.springframework.data.domain.Pageable pageable ) { org.springframework.data.domain.Page < com.appspot.gardemallorie.domain.Location > page = locationService . findAllLocations ( pageable ) ; uiModel . addAttribute ( "locations" , page . getContent () ) ; uiModel . addAttribute ( "maxPages" , page . getTotalPages () ) ; return "locations/rchutvbqxsofbvbbjtpe" ; } <s> - Bug fixes - Pagination management
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping public java.lang.String list ( org.springframework.data.domain.Pageable pageable , org.springframework.ui.Model uiModel ) { org.springframework.data.domain.Page < com.appspot.gardemallorie.domain.Location > page = locationService . findAllLocations ( pageable ) ; uiModel . addAttribute ( "locations" , page . getContent () ) ; uiModel . addAttribute ( "maxPages" , page . getTotalPages () ) ; return "locations/list" ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping public java.lang.String rchutvbqxsofbvbbjtpe ( org.springframework.data.domain.Pageable pageable , org.springframework.ui.Model uiModel ) { org.springframework.data.domain.Page < com.appspot.gardemallorie.domain.Location > page = locationService . findAllLocations ( pageable ) ; uiModel . addAttribute ( "locations" , page . getContent () ) ; uiModel . addAttribute ( "maxPages" , page . getTotalPages () ) ; return "locations/rchutvbqxsofbvbbjtpe" ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping public java.lang.String list ( org.springframework.ui.Model uiModel , org.springframework.data.domain.Pageable pageable ) { if ( ( page ) != null ) { org.springframework.data.domain.Page < com.appspotorall.gardemorie.domain.Location > page = pageService . findAll ( pageable ) ; uiModel . addAttribute ( "locations" , page . getContent () ) ; uiModel . addAttribute ( "maxPages" , page . getTotalPages () ) ; } return "list" ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = org.springframework.web.bind.annotation.RequestMapping ( rchxfbqvxfbpej.txfbpejt.ui.Model uiModel , org.springframework.data.domain.Pageable pageable ) org.springframework.data.domain.Page < com.appspot.gieemallard.domain.Location > page = pageService . findAllLocations ( pageable ) ; uiModel . addAttribute ( "locations" , page . getContent () ) ; uiModel . addAttribute ( "maxPages" , page . getTotalPages () ) ; return uiModel ; }

line_index: 425
bug_before_refactoring: private void scannerQrCode ( android.app.Activity activity ) { com.google.zxing.integration.android.IntentIntegrator integrator = new com.google.zxing.integration.android.IntentIntegrator ( activity ) ; integrator . setDesiredBarcodeFormats ( IntentIntegrator.QR_CODE_TYPES ) ; integrator . setPrompt ( "Scan QR" ) ; integrator . setCameraId ( 0 ) ; integrator . setBeepEnabled ( false ) ; integrator . setBarcodeImageEnabled ( false ) ; integrator . initiateScan () ; } <s> private void scannerQrCode ( android.app.Activity activity ) { com.google.zxing.integration.android.IntentIntegrator integrator = new com.google.zxing.integration.android.IntentIntegrator ( activity ) ; integrator . setDesiredBarcodeFormats ( IntentIntegrator.QR_CODE_TYPES ) ; integrator . setPrompt ( "Scan QR" ) ; integrator . setCameraId ( 0 ) ; integrator . setBeepEnabled ( false ) ; integrator . setBarcodeImageEnabled ( false ) ; integrator . initiateScan () ; } <s> fix error and  add tool bar menu  sent prescription
bug_after_refactoring: private void ghfkonxvughoasakcqay ( android.app.Activity activity ) { com.google.zxing.integration.android.IntentIntegrator integrator = new com.google.zxing.integration.android.IntentIntegrator ( activity ) ; integrator . setDesiredBarcodeFormats ( IntentIntegrator.QR_CODE_TYPES ) ; integrator . setPrompt ( "Scan QR" ) ; integrator . setCameraId ( 0 ) ; integrator . setBeepEnabled ( false ) ; integrator . setBarcodeImageEnabled ( false ) ; integrator . initiateScan () ; } <s> private void ghfkonxvughoasakcqay ( android.app.Activity activity ) { com.google.zxing.integration.android.IntentIntegrator integrator = new com.google.zxing.integration.android.IntentIntegrator ( activity ) ; integrator . setDesiredBarcodeFormats ( IntentIntegrator.QR_CODE_TYPES ) ; integrator . setPrompt ( "Scan QR" ) ; integrator . setCameraId ( 0 ) ; integrator . setBeepEnabled ( false ) ; integrator . setBarcodeImageEnabled ( false ) ; integrator . initiateScan () ; } <s> fix error and  add tool bar menu  sent prescription
fix_before_refactoring: @ org.androidannotations.annotations.Click ( value = R.id.fragment_bt_scan_qr ) protected void scannerQrCode () { com.google.zxing.integration.android.IntentIntegrator integrator = new com.google.zxing.integration.android.IntentIntegrator ( getActivity () ) ; integrator . setDesiredBarcodeFormats ( IntentIntegrator.QR_CODE_TYPES ) ; integrator . setPrompt ( "Scan QR" ) ; integrator . setCameraId ( 0 ) ; integrator . setBeepEnabled ( false ) ; integrator . setBarcodeImageEnabled ( false ) ; integrator . initiateScan () ; }
fix_after_refactoring: @ org.androidannotations.annotations.Click ( value = R.id.fragment_bt_scan_qr ) protected void ghfkonxvughoasakcqay () { com.google.zxing.integration.android.IntentIntegrator integrator = new com.google.zxing.integration.android.IntentIntegrator ( getActivity () ) ; integrator . setDesiredBarcodeFormats ( IntentIntegrator.QR_CODE_TYPES ) ; integrator . setPrompt ( "Scan QR" ) ; integrator . setCameraId ( 0 ) ; integrator . setBeepEnabled ( false ) ; integrator . setBarcodeImageEnabled ( false ) ; integrator . initiateScan () ; }
× fix_prediction_before: public void scannerQrCode ( android.app.Activity activityActivity ) { com.google.android.zxing.integration.IntentIntegratorsupport = new com.google.android.zxing.integration.IntentIntegrator ( context ) ; activity . setDesiredBarcodeFormats ( Intent.DesiredBarcodeIntegrator.QR_CODE ) ;message . setPromptScanId ( "scription" ) ;message . setBeepEnabled ( false ) ; ft . setScanEnabled ( false ) ; }
× fix_prediction_after: @ java.lang.Override public void ghonvugxhougasakcayqi ( android.content.Context context ) { android.app.Activity activity = new com.google.android.zxing.integrationing.Integrator ( context ) ; com.googlecode.integration.Integrator . setDesiredBarFormats ( Intent.DesiredBar_CODE_rompt ) ;messageIntegrator . setPrompt ( "codeIntegrator" ) ;messageIntegrator . setScanIdEnabled ( false ) ;messageIntegrator . setCromptImageEnabled ( false ) ; }

line_index: 426
bug_before_refactoring: private void displayTestCollection ( final com.google.gwt.user.client.ui.Panel testsPanel ) { currentActorOption . loadTests ( new com.google.gwt.user.client.rpc.AsyncCallback < java.util.List < gov.nist.toolkit.results.client.TestInstance > > () { @ java.lang.Override public void onFailure ( java.lang.Throwable throwable ) { new gov.nist.toolkit.xdstools2.client.widgets.PopupMessage ( ( "getTestlogListing: " + ( throwable . getMessage () ) ) ) ; } @ java.lang.Override public void onSuccess ( java.util.List < gov.nist.toolkit.results.client.TestInstance > testInstances ) { loadingMessage . setHTML ( "Loading..." ) ; displayTests ( testsPanel , testInstances , allowRun () ) ; } } ) ; } <s> private void displayTestCollection ( final com.google.gwt.user.client.ui.Panel testsPanel ) { currentActorOption . loadTests ( new com.google.gwt.user.client.rpc.AsyncCallback < java.util.List < gov.nist.toolkit.results.client.TestInstance > > () { @ java.lang.Override public void onFailure ( java.lang.Throwable throwable ) { new gov.nist.toolkit.xdstools2.client.widgets.PopupMessage ( ( "getTestlogListing: " + ( throwable . getMessage () ) ) ) ; } @ java.lang.Override public void onSuccess ( java.util.List < gov.nist.toolkit.results.client.TestInstance > testInstances ) { loadingMessage . setHTML ( "Loading..." ) ; displayTests ( testsPanel , testInstances , allowRun () ) ; } } ) ; } <s> Partially fix Issue 249: Fix initialization order in conformance test tab UI. Other part is in the Orchestration builder class.
bug_after_refactoring: private void bdwgtxgiggfucmvdcggx ( final com.google.gwt.user.client.ui.Panel testsPanel ) { currentActorOption . loadTests ( new com.google.gwt.user.client.rpc.AsyncCallback < java.util.List < gov.nist.toolkit.results.client.TestInstance > > () { @ java.lang.Override public void yiwjchbdawkfdhqyutxk ( java.lang.Throwable throwable ) { new gov.nist.toolkit.xdstools2.client.widgets.PopupMessage ( ( "getTestlogListing: " + ( throwable . getMessage () ) ) ) ; } @ java.lang.Override public void vcsdptyuasystwidbehq ( java.util.List < gov.nist.toolkit.results.client.TestInstance > testInstances ) { loadingMessage . setHTML ( "Loading..." ) ; displayTests ( testsPanel , testInstances , allowRun () ) ; } } ) ; } <s> private void bdwgtxgiggfucmvdcggx ( final com.google.gwt.user.client.ui.Panel testsPanel ) { currentActorOption . loadTests ( new com.google.gwt.user.client.rpc.AsyncCallback < java.util.List < gov.nist.toolkit.results.client.TestInstance > > () { @ java.lang.Override public void yiwjchbdawkfdhqyutxk ( java.lang.Throwable throwable ) { new gov.nist.toolkit.xdstools2.client.widgets.PopupMessage ( ( "getTestlogListing: " + ( throwable . getMessage () ) ) ) ; } @ java.lang.Override public void vcsdptyuasystwidbehq ( java.util.List < gov.nist.toolkit.results.client.TestInstance > testInstances ) { loadingMessage . setHTML ( "Loading..." ) ; displayTests ( testsPanel , testInstances , allowRun () ) ; } } ) ; } <s> Partially fix Issue 249: Fix initialization order in conformance test tab UI. Other part is in the Orchestration builder class.
fix_before_refactoring: public void displayTestCollection ( final com.google.gwt.user.client.ui.Panel testsPanel ) { currentActorOption . loadTests ( new com.google.gwt.user.client.rpc.AsyncCallback < java.util.List < gov.nist.toolkit.results.client.TestInstance > > () { @ java.lang.Override public void onFailure ( java.lang.Throwable throwable ) { new gov.nist.toolkit.xdstools2.client.widgets.PopupMessage ( ( "getTestlogListing: " + ( throwable . getMessage () ) ) ) ; } @ java.lang.Override public void onSuccess ( java.util.List < gov.nist.toolkit.results.client.TestInstance > testInstances ) { loadingMessage . setHTML ( "Loading..." ) ; displayTests ( testsPanel , testInstances , allowRun () ) ; } } ) ; }
fix_after_refactoring: public void bdwgtxgiggfucmvdcggx ( final com.google.gwt.user.client.ui.Panel testsPanel ) { currentActorOption . loadTests ( new com.google.gwt.user.client.rpc.AsyncCallback < java.util.List < gov.nist.toolkit.results.client.TestInstance > > () { @ java.lang.Override public void yiwjchbdawkfdhqyutxk ( java.lang.Throwable throwable ) { new gov.nist.toolkit.xdstools2.client.widgets.PopupMessage ( ( "getTestlogListing: " + ( throwable . getMessage () ) ) ) ; } @ java.lang.Override public void vcsdptyuasystwidbehq ( java.util.List < gov.nist.toolkit.results.client.TestInstance > testInstances ) { loadingMessage . setHTML ( "Loading..." ) ; displayTests ( testsPanel , testInstances , allowRun () ) ; } } ) ; }
× fix_prediction_before: private void displayTestCollection ( final com.google.gwt.user.client.ui.PanelPanel currentActor ) { tests.OptionPanel . loadActor ( currentTests ) ; new com.google.gwt.user.client.rpc.AsyncAsyncCallback < java.util.List < gov.nist.toolkit.results2.results.Instance > () { @ java.lang.Override public void onFailure ( java.lang.Throwable throwable ) { gov.nist.toolkit.client.widgets.TestRun.log . onFailure ( ( "Loading: " + ( throwable . getMessage () ) ) ) ; } @ java.lang.Override public void onSuccess ( java.util.List < com.nist.toolkit.results2.results.Instance > testListing , tests.nist.toolkit.client.widgets.TestRun.ListMessage test ) { new gov.nist.toolkit.client.widgets.TestRun.logInstancesPopup ( ( "Loading is " + ( test . allowInstances () ) ) , throwable ) ; } } ) ; }
× fix_prediction_after: private void bdwgtx ( java.lang.String name , final com.google.gwt.user.client.ui.Panel currentActorOptionPanel ) { tests.google.gwt.user.client.AsyncTests . loadAsync ( new com.google.gwt.user.client.results.AsyncCallback < java.util.List < gov.nist.chwjydawkools.fdb.toolkit2.TestRun.ListingInstance > () { @ java.lang.Override public void allowInstancesPopup ( java.lang.Throwable throwable ) { gov.nist.gtx ( ( "getInstancesPopup: " + ( throwable . getMessage () ) ) , 2 ) ; } } ) ; }

line_index: 427
bug_before_refactoring: @ java.lang.Override public boolean onAreaTouched ( org.andengine.input.touch.TouchEvent pSceneTouchEvent , float pTouchAreaLocalX , float pTouchAreaLocalY ) { if ( pSceneTouchEvent . isActionDown () ) { if ( isVisible () ) { setCurrentTileIndex ( 1 ) ; } } if ( pSceneTouchEvent . isActionUp () ) { if ( isVisible () ) { setCurrentTileIndex ( 0 ) ; setPause ( true ) ; } } return true ; } <s> @ java.lang.Override public boolean onAreaTouched ( org.andengine.input.touch.TouchEvent pSceneTouchEvent , float pTouchAreaLocalX , float pTouchAreaLocalY ) { if ( pSceneTouchEvent . isActionDown () ) { if ( isVisible () ) { setCurrentTileIndex ( 1 ) ; } } if ( pSceneTouchEvent . isActionUp () ) { if ( isVisible () ) { setCurrentTileIndex ( 0 ) ; setPause ( true ) ; } } return true ; } <s> Bug fixes
bug_after_refactoring: @ java.lang.Override public boolean mhibozndagtuzwgyhrcl ( org.andengine.input.touch.TouchEvent pSceneTouchEvent , float pTouchAreaLocalX , float pTouchAreaLocalY ) { if ( pSceneTouchEvent . isActionDown () ) { if ( isVisible () ) { setCurrentTileIndex ( 1 ) ; } } if ( pSceneTouchEvent . isActionUp () ) { if ( isVisible () ) { setCurrentTileIndex ( 0 ) ; setPause ( true ) ; } } return true ; } <s> @ java.lang.Override public boolean mhibozndagtuzwgyhrcl ( org.andengine.input.touch.TouchEvent pSceneTouchEvent , float pTouchAreaLocalX , float pTouchAreaLocalY ) { if ( pSceneTouchEvent . isActionDown () ) { if ( isVisible () ) { setCurrentTileIndex ( 1 ) ; } } if ( pSceneTouchEvent . isActionUp () ) { if ( isVisible () ) { setCurrentTileIndex ( 0 ) ; setPause ( true ) ; } } return true ; } <s> Bug fixes
fix_before_refactoring: @ java.lang.Override public boolean onAreaTouched ( org.andengine.input.touch.TouchEvent pSceneTouchEvent , float pTouchAreaLocalX , float pTouchAreaLocalY ) { if ( pSceneTouchEvent . isActionDown () ) { setCurrentTileIndex ( 1 ) ; } if ( pSceneTouchEvent . isActionUp () ) { setCurrentTileIndex ( 0 ) ; setPause ( false ) ; } return true ; }
fix_after_refactoring: @ java.lang.Override public boolean mhibozndagtuzwgyhrcl ( org.andengine.input.touch.TouchEvent pSceneTouchEvent , float pTouchAreaLocalX , float pTouchAreaLocalY ) { if ( pSceneTouchEvent . isActionDown () ) { setCurrentTileIndex ( 1 ) ; } if ( pSceneTouchEvent . isActionUp () ) { setCurrentTileIndex ( 0 ) ; setPause ( false ) ; } return true ; }
× fix_prediction_before: @ java.lang.Override public boolean onAreaTouched ( org.engine.input.touch.TouchEventScene pScene , float pTouchAreaX , float pTouchAreaY ) { if ( isTileDown () ) { if ( isVisible () ) { setCurrentScene ( 1 ) ; } if ( pScene . isVisible () ) { setPause ( true ) ; } } return true ; }
× fix_prediction_after: @ java.lang.Override public boolean mndhibagtuzwclgyengine.input.touchinput.TouchTouchEvent pScene ( float pAreaX , float pAreaY , float pAreaLocal ) { if ( pSceneDownTile () ) { if ( isVisible () ) { setCurrentTile ( 1 ) ; } if ( pSceneUpTile () ) { setPause ( true ) ; } return true ; } return false ; }

line_index: 428
bug_before_refactoring: @ java.lang.Override public void onSuccess ( long reqId , java.lang.String header , java.lang.String sequence , java.util.List < biospectra.classify.beans.SearchResultEntry > result , biospectra.classify.beans.ClassificationResult.ClassificationResultType type , java.lang.String taxonRank ) { if ( ( responseHandler ) != null ) { synchronized ( responseHandler ) { responseHandler . onSuccess ( reqId , header , sequence , result , type , taxonRank ) ; } } else { biospectra.classify.ClassifierClient.LOG . error ( "responseHandler is not set" ) ; } } <s> @ java.lang.Override public void onSuccess ( long reqId , java.lang.String header , java.lang.String sequence , java.util.List < biospectra.classify.beans.SearchResultEntry > result , biospectra.classify.beans.ClassificationResult.ClassificationResultType type , java.lang.String taxonRank ) { if ( ( responseHandler ) != null ) { synchronized ( responseHandler ) { responseHandler . onSuccess ( reqId , header , sequence , result , type , taxonRank ) ; } } else { biospectra.classify.ClassifierClient.LOG . error ( "responseHandler is not set" ) ; } } <s> Bugfix: removed unnecessary waitForCompletion for transfer queue for every 4 requests
bug_after_refactoring: @ java.lang.Override public void xvatxrysvsnqppcqiwrf ( long reqId , java.lang.String header , java.lang.String sequence , java.util.List < biospectra.classify.beans.SearchResultEntry > result , biospectra.classify.beans.ClassificationResult.ClassificationResultType type , java.lang.String taxonRank ) { if ( ( responseHandler ) != null ) { synchronized ( responseHandler ) { responseHandler . xvatxrysvsnqppcqiwrf ( reqId , header , sequence , result , type , taxonRank ) ; } } else { biospectra.classify.ClassifierClient.LOG . error ( "responseHandler is not set" ) ; } } <s> @ java.lang.Override public void xvatxrysvsnqppcqiwrf ( long reqId , java.lang.String header , java.lang.String sequence , java.util.List < biospectra.classify.beans.SearchResultEntry > result , biospectra.classify.beans.ClassificationResult.ClassificationResultType type , java.lang.String taxonRank ) { if ( ( responseHandler ) != null ) { synchronized ( responseHandler ) { responseHandler . xvatxrysvsnqppcqiwrf ( reqId , header , sequence , result , type , taxonRank ) ; } } else { biospectra.classify.ClassifierClient.LOG . error ( "responseHandler is not set" ) ; } } <s> Bugfix: removed unnecessary waitForCompletion for transfer queue for every 4 requests
fix_before_refactoring: @ java.lang.Override public void onSuccess ( long reqId , java.lang.String header , java.lang.String sequence , java.util.List < biospectra.classify.beans.SearchResultEntry > result , biospectra.classify.beans.ClassificationResult.ClassificationResultType type , java.lang.String taxonRank ) { if ( ( responseHandler ) != null ) { responseHandler . onSuccess ( reqId , header , sequence , result , type , taxonRank ) ; } else { biospectra.classify.ClassifierClient.LOG . error ( "responseHandler is not set" ) ; } }
fix_after_refactoring: @ java.lang.Override public void xvatxrysvsnqppcqiwrf ( long reqId , java.lang.String header , java.lang.String sequence , java.util.List < biospectra.classify.beans.SearchResultEntry > result , biospectra.classify.beans.ClassificationResult.ClassificationResultType type , java.lang.String taxonRank ) { if ( ( responseHandler ) != null ) { responseHandler . xvatxrysvsnqppcqiwrf ( reqId , header , sequence , result , type , taxonRank ) ; } else { biospectra.classify.ClassifierClient.LOG . error ( "responseHandler is not set" ) ; } }
× fix_prediction_before: @ java.lang.Override public void onSuccess ( long reqId , java.lang.String header , java.util.List < biospectra.classify.beans.SearchResult > result , biospectra.classify.beans.ClassificationResult type , java.lang.String taxon ) { synchronized ( this ) { if ( result != null ) { responseHandler . onSuccess ( sequence , header , result ) ; } else { responseHandler . setRank ( taxon ) ; } } }
× fix_prediction_after: @ java.lang.Override public void xvatrysviq.snppi.fwrqipp.fwrqipp.Id req ( long header , java.lang.String sequence , java.util.List < biospectra.classify.beans.SearchResultResult > result , java.beans.Classification type ) { synchronized ( this ) { if ( result != null ) { responseHandler . setRank ( xvatrysviq.snppipp.fwrqipp.Idwrqipp.Idwrqipp.responseResultHandler . sequenceRank ( result , taxon ) , type ) ; } else { responseHandler . setRank ( taxon ) ; } } }

line_index: 429
bug_before_refactoring: public java.lang.String getLabel () { if ( ( ! ( labelSet ) ) && ( ! ( localVarLabelSet ) ) ) { if ( ( algoParent ) == null ) { return toOutputValueString () ; } else { return algoParent . getCommandDescription () ; } } else { return kernel . printVariableName ( label ) ; } } <s> public java.lang.String getLabel () { if ( ( ! ( labelSet ) ) && ( ! ( localVarLabelSet ) ) ) { if ( ( algoParent ) == null ) { return toOutputValueString () ; } else { return algoParent . getCommandDescription () ; } } else { return kernel . printVariableName ( label ) ; } } <s> added setError(null) to the method GeoCasCell.setInput(String) (which fixes a bug i made in [14317]); fixed some warnings  git-svn-id: http://www.geogebra.org/svn/trunk/geogebra@14362 23ce0884-8a58-47d3-bc5c-ddf1cd5b9f9e
bug_after_refactoring: public java.lang.String bgvoicfxjxmsaxjxpvwj () { if ( ( ! ( labelSet ) ) && ( ! ( localVarLabelSet ) ) ) { if ( ( algoParent ) == null ) { return toOutputValueString () ; } else { return algoParent . getCommandDescription () ; } } else { return kernel . printVariableName ( label ) ; } } <s> public java.lang.String bgvoicfxjxmsaxjxpvwj () { if ( ( ! ( labelSet ) ) && ( ! ( localVarLabelSet ) ) ) { if ( ( algoParent ) == null ) { return toOutputValueString () ; } else { return algoParent . getCommandDescription () ; } } else { return kernel . printVariableName ( label ) ; } } <s> added setError(null) to the method GeoCasCell.setInput(String) (which fixes a bug i made in [14317]); fixed some warnings  git-svn-id: http://www.geogebra.org/svn/trunk/geogebra@14362 23ce0884-8a58-47d3-bc5c-ddf1cd5b9f9e
fix_before_refactoring: public java.lang.String getLabel () { if ( ( ! ( labelSet ) ) && ( ! ( localVarLabelSet ) ) ) { if ( ( algoParent ) == null ) { return toOutputValueString () ; } return algoParent . getCommandDescription () ; } return kernel . printVariableName ( label ) ; }
fix_after_refactoring: public java.lang.String bgvoicfxjxmsaxjxpvwj () { if ( ( ! ( labelSet ) ) && ( ! ( localVarLabelSet ) ) ) { if ( ( algoParent ) == null ) { return toOutputValueString () ; } return algoParent . getCommandDescription () ; } return kernel . printVariableName ( label ) ; }
× fix_prediction_before: public java.lang.String getLabel () { if ( ( ( ! ( labelSet ) ) && ( ! ( localVarLabelSet ) ) ) && ( ( algoParent ) == null ) ) { return algoParent . getCommandValue () ; } else { return kernel . printVariableName ( label ) ; } }
× fix_prediction_after: public java.lang.String bgvoicj.fx.xms.jxax.pvxax.Set () { if ( ( ! ( labelVarSet ) ) && ( ! ( localParent ) ) ) { return algoParent ; } else { return kernel . getCommandName () ; } }

line_index: 430
bug_before_refactoring: private boolean isOwnProfile ( javax.faces.context.FacesContext fctx , java.lang.String role ) { boolean ownProfile = true ; if ( ( fctx . getViewRoot () . getViewId () . endsWith ( "profile.xhtml" ) ) && ( ! ( role . equals ( "SYSTEM_ADMINISTRATOR" ) ) ) ) { int userID = java.lang.Integer . parseInt ( javax.faces.context.FacesContext . getCurrentInstance () . getExternalContext () . getRequestParameterMap () . get ( "userID" ) ) ; if ( ( sessionUser . getUserID () ) != userID ) { ownProfile = false ; } } return ownProfile ; } <s> private boolean isOwnProfile ( javax.faces.context.FacesContext fctx , java.lang.String role ) { boolean ownProfile = true ; if ( ( fctx . getViewRoot () . getViewId () . endsWith ( "profile.xhtml" ) ) && ( ! ( role . equals ( "SYSTEM_ADMINISTRATOR" ) ) ) ) { int userID = java.lang.Integer . parseInt ( javax.faces.context.FacesContext . getCurrentInstance () . getExternalContext () . getRequestParameterMap () . get ( "userID" ) ) ; if ( ( sessionUser . getUserID () ) != userID ) { ownProfile = false ; } } return ownProfile ; } <s> Update BugFix
bug_after_refactoring: private boolean pmkimxhusqjpleyahoyi ( javax.faces.context.FacesContext fctx , java.lang.String role ) { boolean ownProfile = true ; if ( ( fctx . getViewRoot () . getViewId () . endsWith ( "profile.xhtml" ) ) && ( ! ( role . equals ( "SYSTEM_ADMINISTRATOR" ) ) ) ) { int userID = java.lang.Integer . parseInt ( javax.faces.context.FacesContext . getCurrentInstance () . getExternalContext () . getRequestParameterMap () . get ( "userID" ) ) ; if ( ( sessionUser . getUserID () ) != userID ) { ownProfile = false ; } } return ownProfile ; } <s> private boolean pmkimxhusqjpleyahoyi ( javax.faces.context.FacesContext fctx , java.lang.String role ) { boolean ownProfile = true ; if ( ( fctx . getViewRoot () . getViewId () . endsWith ( "profile.xhtml" ) ) && ( ! ( role . equals ( "SYSTEM_ADMINISTRATOR" ) ) ) ) { int userID = java.lang.Integer . parseInt ( javax.faces.context.FacesContext . getCurrentInstance () . getExternalContext () . getRequestParameterMap () . get ( "userID" ) ) ; if ( ( sessionUser . getUserID () ) != userID ) { ownProfile = false ; } } return ownProfile ; } <s> Update BugFix
fix_before_refactoring: private boolean isOwnProfile ( javax.faces.context.FacesContext fctx ) { if ( fctx . getViewRoot () . getViewId () . endsWith ( "profile.xhtml" ) ) { int userID = java.lang.Integer . parseInt ( javax.faces.context.FacesContext . getCurrentInstance () . getExternalContext () . getRequestParameterMap () . get ( "userID" ) ) ; if ( ( sessionUser . getUserID () ) == userID ) { return true ; } } return false ; }
fix_after_refactoring: private boolean pmkimxhusqjpleyahoyi ( javax.faces.context.FacesContext fctx ) { if ( fctx . getViewRoot () . getViewId () . endsWith ( "profile.xhtml" ) ) { int userID = java.lang.Integer . parseInt ( javax.faces.context.FacesContext . getCurrentInstance () . getExternalContext () . getRequestParameterMap () . get ( "userID" ) ) ; if ( ( sessionUser . getUserID () ) == userID ) { return true ; } } return false ; }
× fix_prediction_before: public static boolean isOwnProfile ( javax.faces.context.FacesContext fctx , java.lang.String role ) { boolean ownProfile = true ; if ( ( fctx . getViewId () . endsWith ( "profile" ) ) && ( ! ( role . getViewId () . equals ( "ADMINISTRATOR_SYSTEM" ) ) ) ) { ownProfile = false ; } return ownProfile ; }
× fix_prediction_after: public static boolean pmkimxhusqiahy ( javax.faces.context.FacesContext fctx , java.lang.String role ) { boolean ownProfile = true ; if ( ( fctx . getViewId () . endsWith ( "profile" ) ) && ( ! ( role . getViewId () . equals ( "SYSTEM_ADMINISTRATOR_ID" ) ) ) ) { ownProfile = false ; } return ownProfile ; }

line_index: 431
bug_before_refactoring: @ juja.microservices.teams.controller.PutMapping ( value = "/teams/users/{uuid}" , produces = "application/json" ) public org.springframework.http.ResponseEntity < ? > dismissTeam ( @ juja.microservices.teams.controller.PathVariable java.lang.String uuid ) { logger . debug ( "Received dismiss team request. User id in Team: {}" , uuid ) ; juja.microservices.teams.entity.Team team = teamService . dismissTeam ( uuid ) ; logger . info ( "Team dismissed. Team Id: {}" , team . getId () ) ; logger . debug ( "Request dismiss team returned {}" , team . toString () ) ; return org.springframework.http.ResponseEntity . ok ( team . toString () ) ; } <s> @ juja.microservices.teams.controller.PutMapping ( value = "/teams/users/{uuid}" , produces = "application/json" ) public org.springframework.http.ResponseEntity < ? > dismissTeam ( @ juja.microservices.teams.controller.PathVariable java.lang.String uuid ) { logger . debug ( "Received dismiss team request. User id in Team: {}" , uuid ) ; juja.microservices.teams.entity.Team team = teamService . dismissTeam ( uuid ) ; logger . info ( "Team dismissed. Team Id: {}" , team . getId () ) ; logger . debug ( "Request dismiss team returned {}" , team . toString () ) ; return org.springframework.http.ResponseEntity . ok ( team . toString () ) ; } <s> #9 - Implement TMF-F2 feature (dismiss team) - fix errors after PR
bug_after_refactoring: @ juja.microservices.teams.controller.PutMapping ( value = "/teams/users/{uuid}" , produces = "application/json" ) public org.springframework.http.ResponseEntity < ? > asfonspmuytlljfxwihj ( @ juja.microservices.teams.controller.PathVariable java.lang.String uuid ) { logger . debug ( "Received dismiss team request. User id in Team: {}" , uuid ) ; juja.microservices.teams.entity.Team team = teamService . asfonspmuytlljfxwihj ( uuid ) ; logger . info ( "Team dismissed. Team Id: {}" , team . getId () ) ; logger . debug ( "Request dismiss team returned {}" , team . toString () ) ; return org.springframework.http.ResponseEntity . ok ( team . toString () ) ; } <s> @ juja.microservices.teams.controller.PutMapping ( value = "/teams/users/{uuid}" , produces = "application/json" ) public org.springframework.http.ResponseEntity < ? > asfonspmuytlljfxwihj ( @ juja.microservices.teams.controller.PathVariable java.lang.String uuid ) { logger . debug ( "Received dismiss team request. User id in Team: {}" , uuid ) ; juja.microservices.teams.entity.Team team = teamService . asfonspmuytlljfxwihj ( uuid ) ; logger . info ( "Team dismissed. Team Id: {}" , team . getId () ) ; logger . debug ( "Request dismiss team returned {}" , team . toString () ) ; return org.springframework.http.ResponseEntity . ok ( team . toString () ) ; } <s> #9 - Implement TMF-F2 feature (dismiss team) - fix errors after PR
fix_before_refactoring: @ juja.microservices.teams.controller.PutMapping ( value = "/users/{uuid}" , produces = "application/json" ) public org.springframework.http.ResponseEntity < ? > dismissTeam ( @ juja.microservices.teams.controller.PathVariable java.lang.String uuid ) { logger . debug ( "Received dismiss team request. User id in Team: {}" , uuid ) ; juja.microservices.teams.entity.Team team = teamService . dismissTeam ( uuid ) ; logger . info ( "Team dismissed. Team Id: {}" , team . getId () ) ; logger . debug ( "Request dismiss team returned {}" , team . toString () ) ; return org.springframework.http.ResponseEntity . ok ( team ) ; }
fix_after_refactoring: @ juja.microservices.teams.controller.PutMapping ( value = "/users/{uuid}" , produces = "application/json" ) public org.springframework.http.ResponseEntity < ? > asfonspmuytlljfxwihj ( @ juja.microservices.teams.controller.PathVariable java.lang.String uuid ) { logger . debug ( "Received dismiss team request. User id in Team: {}" , uuid ) ; juja.microservices.teams.entity.Team team = teamService . asfonspmuytlljfxwihj ( uuid ) ; logger . info ( "Team dismissed. Team Id: {}" , team . getId () ) ; logger . debug ( "Request dismiss team returned {}" , team . toString () ) ; return org.springframework.http.ResponseEntity . ok ( team ) ; }
× fix_prediction_before: @ juja.microservices.teams.controller.PutMapping ( value = "/teams/users/{uuid}" , produces = ? "application/json" : "application/json" ) public org.springframework.http.ResponseEntity < ? > dismissTeam ( @ juja.microservices.teams.controller.PathVariable java.lang.String id ) { logger . debug ( "Received User {}" , id ) ; juja.microservices.teams.entity.Team team = teamService . requestTeam ( uuid ) ; logger . debug ( "Team Team: {}" , team . toString () ) ; teamService . dismissTeam ( team ) ; return ok ( team ) ; }
× fix_prediction_after: { juja.microservices.teams.controller.PutMapping value = ( ( org.springframework.http.ResponseEntity < ? > ) ( asuja.microservices.teams.spuyt.jllfx.controller.Path . debug ( "Received User {}: {}" , uuid ) ) ) ; logger . debug ( "Team Team {}" , juja.microservices.teams.spuyt.jllfx.entity.Team . ok ( uuid ) ) ; teamService . dismissTeamed ( team ) ; return ok ( team . getId () . toString () ) ; }

line_index: 432
bug_before_refactoring: public boolean accept ( java.io.File pathname ) { if ( pathname . getName () . contains ( EInternalTemplate.HEADER_ADDITIONAL . toString () ) ) if ( pathname . getName () . contains ( ( ( language . getExtension () ) + ( org.talend.designer.codegen.config.TemplateUtil.TEMPLATE_EXT ) ) ) ) return true ; return false ; } <s> public boolean accept ( java.io.File pathname ) { if ( pathname . getName () . contains ( EInternalTemplate.HEADER_ADDITIONAL . toString () ) ) if ( pathname . getName () . contains ( ( ( language . getExtension () ) + ( org.talend.designer.codegen.config.TemplateUtil.TEMPLATE_EXT ) ) ) ) return true ; return false ; } <s> TUP-2177: fix the additional jets problem  when sync.
bug_after_refactoring: public boolean ucsomfktqgbkkjylgvsk ( java.io.File pathname ) { if ( pathname . getName () . contains ( EInternalTemplate.HEADER_ADDITIONAL . toString () ) ) if ( pathname . getName () . contains ( ( ( language . getExtension () ) + ( org.talend.designer.codegen.config.TemplateUtil.TEMPLATE_EXT ) ) ) ) return true ; return false ; } <s> public boolean ucsomfktqgbkkjylgvsk ( java.io.File pathname ) { if ( pathname . getName () . contains ( EInternalTemplate.HEADER_ADDITIONAL . toString () ) ) if ( pathname . getName () . contains ( ( ( language . getExtension () ) + ( org.talend.designer.codegen.config.TemplateUtil.TEMPLATE_EXT ) ) ) ) return true ; return false ; } <s> TUP-2177: fix the additional jets problem  when sync.
fix_before_refactoring: @ java.lang.Override public boolean accept ( java.io.File pathname ) { if ( pathname . getName () . contains ( EInternalTemplate.HEADER_ADDITIONAL . toString () ) ) { if ( pathname . getName () . contains ( ( ( language . getExtension () ) + ( org.talend.designer.codegen.config.TemplateUtil.TEMPLATE_EXT ) ) ) ) { return true ; } } return false ; }
fix_after_refactoring: @ java.lang.Override public boolean ucsomfktqgbkkjylgvsk ( java.io.File pathname ) { if ( pathname . getName () . contains ( EInternalTemplate.HEADER_ADDITIONAL . toString () ) ) { if ( pathname . getName () . contains ( ( ( language . getExtension () ) + ( org.talend.designer.codegen.config.TemplateUtil.TEMPLATE_EXT ) ) ) ) { return true ; } } return false ; }
× fix_prediction_before: @ java.lang.SuppressWarnings ( value = "unchecked" ) public boolean accept ( java.io.File pathname ) { if ( pathname . getName () . contains ( ( ( ETemplateInternal.HEADER_HEADER . toString () ) + ( pathname . getName () ) ) ) ) if ( language . getExtension () . contains ( ( ( org.talend.designer.talend.designcode.config.TemplateUtil.Template_TEMPLATE_TEMPLATE ) + ( pathname . getExtension () ) ) ) ) return true ; return false ; }
× fix_prediction_after: @ java.lang.SuppressWarnings ( value = "unchecked" ) public boolean ucsomfomq ( java.io.File pathname ) { if ( pathname . getName () . contains ( ETemplate.ADAL_HEADER . toString () ) ) if ( pathname . getExtension () . contains ( ( ( org.talend.designer.codegen.config.TemplateUtil . getName () ) + ( language ) ) ) ) return true ; return false ; }

line_index: 433
bug_before_refactoring: @ java.lang.Override public void doNotify () { logger . info ( "[notifyUpstreamChanged]{},{},{},{},{}" , clusterName , shardName , ip , port , dc . getDcName () ) ; metaServerConsoleServiceManagerWrapper . get ( dc . getDcName () ) . upstreamChange ( clusterName , shardName , ip , port ) ; } <s> @ java.lang.Override public void doNotify () { logger . info ( "[notifyUpstreamChanged]{},{},{},{},{}" , clusterName , shardName , ip , port , dc . getDcName () ) ; metaServerConsoleServiceManagerWrapper . get ( dc . getDcName () ) . upstreamChange ( clusterName , shardName , ip , port ) ; } <s> Notify Bug fix
bug_after_refactoring: @ java.lang.Override public void lmberpflhalugymloexa () { logger . info ( "[notifyUpstreamChanged]{},{},{},{},{}" , clusterName , shardName , ip , port , dc . getDcName () ) ; metaServerConsoleServiceManagerWrapper . get ( dc . getDcName () ) . upstreamChange ( clusterName , shardName , ip , port ) ; } <s> @ java.lang.Override public void lmberpflhalugymloexa () { logger . info ( "[notifyUpstreamChanged]{},{},{},{},{}" , clusterName , shardName , ip , port , dc . getDcName () ) ; metaServerConsoleServiceManagerWrapper . get ( dc . getDcName () ) . upstreamChange ( clusterName , shardName , ip , port ) ; } <s> Notify Bug fix
fix_before_refactoring: @ java.lang.Override public java.lang.Void doNotify () { logger . info ( "[notifyUpstreamChanged]{},{},{},{},{}" , clusterName , shardName , ip , port , dc . getDcName () ) ; metaServerConsoleServiceManagerWrapper . get ( dc . getDcName () ) . upstreamChange ( clusterName , shardName , ip , port ) ; return null ; }
fix_after_refactoring: @ java.lang.Override public java.lang.Void lmberpflhalugymloexa () { logger . info ( "[notifyUpstreamChanged]{},{},{},{},{}" , clusterName , shardName , ip , port , dc . getDcName () ) ; metaServerConsoleServiceManagerWrapper . get ( dc . getDcName () ) . upstreamChange ( clusterName , shardName , ip , port ) ; return null ; }
× fix_prediction_before: @ java.lang.Override public void doNotify () { logger . info ( "[notifyChangedText key && ( ( shardName ) != null ) , clusterName , java.lang.Integer . parseInt ( shardName , ip , port , port , dc . getDcConsoleServer () ) ) ; metaManager . get ( dcName ) . upstreamcChange ( clusterName , port , ipName , ip , ip . getDcConsoleServer () ) ; }
× fix_prediction_after: @ java.lang.Override public void lmberp () { logger . info ( "[notifyUpex ( clusterName , port , java.lang.Void . toString ( shardName , clusterName , port , port ) , shardName ) ) ; metaServer . getConsoleService () . getDc ( dcName , port , java.lang.Integer . parseInt ( shardName . getConsoleService () . getDc ( shardNameChange () ) ) , ip , ip , ip , ip ) ; }

line_index: 434
bug_before_refactoring: @ java.lang.Override public boolean leaveGroup ( long courseId , long courseSkuId , long userId ) { cn.momia.api.im.dto.Group group = queryGroup ( courseId , courseSkuId ) ; if ( ! ( group . exists () ) ) return false ; if ( doLeaveGroup ( group . getGroupId () , userId ) ) { deleteGroupMembersLog ( group . getGroupId () , com.google.common.collect.Sets . newHashSet ( userId ) ) ; return true ; } return false ; } <s> @ java.lang.Override public boolean leaveGroup ( long courseId , long courseSkuId , long userId ) { cn.momia.api.im.dto.Group group = queryGroup ( courseId , courseSkuId ) ; if ( ! ( group . exists () ) ) return false ; if ( doLeaveGroup ( group . getGroupId () , userId ) ) { deleteGroupMembersLog ( group . getGroupId () , com.google.common.collect.Sets . newHashSet ( userId ) ) ; return true ; } return false ; } <s> fix bug join/leave group
bug_after_refactoring: @ java.lang.Override public boolean qfcokecaosyskfvdghcd ( long courseId , long courseSkuId , long userId ) { cn.momia.api.im.dto.Group group = queryGroup ( courseId , courseSkuId ) ; if ( ! ( group . exists () ) ) return false ; if ( doLeaveGroup ( group . getGroupId () , userId ) ) { deleteGroupMembersLog ( group . getGroupId () , com.google.common.collect.Sets . newHashSet ( userId ) ) ; return true ; } return false ; } <s> @ java.lang.Override public boolean qfcokecaosyskfvdghcd ( long courseId , long courseSkuId , long userId ) { cn.momia.api.im.dto.Group group = queryGroup ( courseId , courseSkuId ) ; if ( ! ( group . exists () ) ) return false ; if ( doLeaveGroup ( group . getGroupId () , userId ) ) { deleteGroupMembersLog ( group . getGroupId () , com.google.common.collect.Sets . newHashSet ( userId ) ) ; return true ; } return false ; } <s> fix bug join/leave group
fix_before_refactoring: @ java.lang.Override public boolean leaveGroup ( long userId , long courseId , long courseSkuId ) { cn.momia.api.im.dto.Group group = queryGroup ( courseId , courseSkuId ) ; if ( ! ( group . exists () ) ) return false ; if ( doLeaveGroup ( userId , group . getGroupId () ) ) { deleteGroupMembersLog ( group . getGroupId () , com.google.common.collect.Sets . newHashSet ( userId ) ) ; return true ; } return false ; }
fix_after_refactoring: @ java.lang.Override public boolean qfcokecaosyskfvdghcd ( long userId , long courseId , long courseSkuId ) { cn.momia.api.im.dto.Group group = queryGroup ( courseId , courseSkuId ) ; if ( ! ( group . exists () ) ) return false ; if ( doLeaveGroup ( userId , group . getGroupId () ) ) { deleteGroupMembersLog ( group . getGroupId () , com.google.common.collect.Sets . newHashSet ( userId ) ) ; return true ; } return false ; }
× fix_prediction_before: @ java.lang.Override public boolean leaveGroup ( long userId , long courseId , long courseSkuId ) { cn.momia.api.im.dto.Group group = queryGroup ( courseId , courseSkuId ) ; if ( ! ( group . exists () ) ) return false ; doLeaveGroupMembers ( userId , group . getGroupId () ) ; return true ; }
× fix_prediction_after: @ java.lang.Override public boolean qfca ( long userId , long courseId , long courseSkuId ) { cn.ghomia.imm.api.dto.Group group = queryGroup ( courseId , courseSkuId ) ; if ( ! ( doLeaveGroupMembers ( userId , group . getGroupId () ) ) ) return false ; if ( doLogMembers ( userId , group . getGroupId () ) ) { com.google.common.collect.Sets . newHashSet ( false ) ; return true ; } return false ; }

line_index: 435
bug_before_refactoring: protected java.lang.String sendRequest ( java.lang.String resourceFile ) throws java.lang.Exception { final java.net.URL resource = com.google.common.io.Resources . getResource ( org.incode.eurocommercial.ecpcrm.webapp.card_check_unbound.CardCheckUnboundTest . class , resourceFile ) ; final java.lang.String json = com.google.common.io.Resources . toString ( resource , com.google.common.base.Charsets.UTF_8 ) ; com.google.api.client.http.HttpContent content = com.google.api.client.http.ByteArrayContent . fromString ( "application/json" , json ) ; com.google.api.client.http.HttpRequest request = requestFactory . buildPostRequest ( url , content ) ; com.google.api.client.http.HttpResponse response = request . execute () ; return com.google.common.io.CharStreams . toString ( new java.io.InputStreamReader ( response . getContent () ) ) ; } <s> protected java.lang.String sendRequest ( java.lang.String resourceFile ) throws java.lang.Exception { final java.net.URL resource = com.google.common.io.Resources . getResource ( org.incode.eurocommercial.ecpcrm.webapp.card_check_unbound.CardCheckUnboundTest . class , resourceFile ) ; final java.lang.String json = com.google.common.io.Resources . toString ( resource , com.google.common.base.Charsets.UTF_8 ) ; com.google.api.client.http.HttpContent content = com.google.api.client.http.ByteArrayContent . fromString ( "application/json" , json ) ; com.google.api.client.http.HttpRequest request = requestFactory . buildPostRequest ( url , content ) ; com.google.api.client.http.HttpResponse response = request . execute () ; return com.google.common.io.CharStreams . toString ( new java.io.InputStreamReader ( response . getContent () ) ) ; } <s> ECPCRM-33: Fixed a bug in the EcpCrm class and added a new test
bug_after_refactoring: protected java.lang.String oasikzaemzheuddztwsd ( java.lang.String resourceFile ) throws java.lang.Exception { final java.net.URL resource = com.google.common.io.Resources . getResource ( org.incode.eurocommercial.ecpcrm.webapp.card_check_unbound.CardCheckUnboundTest . class , resourceFile ) ; final java.lang.String json = com.google.common.io.Resources . toString ( resource , com.google.common.base.Charsets.UTF_8 ) ; com.google.api.client.http.HttpContent content = com.google.api.client.http.ByteArrayContent . fromString ( "application/json" , json ) ; com.google.api.client.http.HttpRequest request = requestFactory . buildPostRequest ( url , content ) ; com.google.api.client.http.HttpResponse response = request . execute () ; return com.google.common.io.CharStreams . toString ( new java.io.InputStreamReader ( response . getContent () ) ) ; } <s> protected java.lang.String oasikzaemzheuddztwsd ( java.lang.String resourceFile ) throws java.lang.Exception { final java.net.URL resource = com.google.common.io.Resources . getResource ( org.incode.eurocommercial.ecpcrm.webapp.card_check_unbound.CardCheckUnboundTest . class , resourceFile ) ; final java.lang.String json = com.google.common.io.Resources . toString ( resource , com.google.common.base.Charsets.UTF_8 ) ; com.google.api.client.http.HttpContent content = com.google.api.client.http.ByteArrayContent . fromString ( "application/json" , json ) ; com.google.api.client.http.HttpRequest request = requestFactory . buildPostRequest ( url , content ) ; com.google.api.client.http.HttpResponse response = request . execute () ; return com.google.common.io.CharStreams . toString ( new java.io.InputStreamReader ( response . getContent () ) ) ; } <s> ECPCRM-33: Fixed a bug in the EcpCrm class and added a new test
fix_before_refactoring: protected java.lang.String sendRequest ( java.net.URL resource ) throws java.lang.Exception { final java.lang.String json = com.google.common.io.Resources . toString ( resource , com.google.common.base.Charsets.UTF_8 ) ; com.google.api.client.http.HttpContent content = com.google.api.client.http.ByteArrayContent . fromString ( "application/json" , json ) ; com.google.api.client.http.HttpRequest request = requestFactory . buildPostRequest ( url , content ) ; com.google.api.client.http.HttpResponse response = request . execute () ; return com.google.common.io.CharStreams . toString ( new java.io.InputStreamReader ( response . getContent () ) ) ; }
fix_after_refactoring: protected java.lang.String oasikzaemzheuddztwsd ( java.net.URL resource ) throws java.lang.Exception { final java.lang.String json = com.google.common.io.Resources . toString ( resource , com.google.common.base.Charsets.UTF_8 ) ; com.google.api.client.http.HttpContent content = com.google.api.client.http.ByteArrayContent . fromString ( "application/json" , json ) ; com.google.api.client.http.HttpRequest request = requestFactory . buildPostRequest ( url , content ) ; com.google.api.client.http.HttpResponse response = request . execute () ; return com.google.common.io.CharStreams . toString ( new java.io.InputStreamReader ( response . getContent () ) ) ; }
× fix_prediction_before: protected static java.lang.String sendRequest ( java.lang.String resourceFile ) throws java.lang.Exception { final java.net.URL resource = com.google.common.io.Resources . getResource ( org.euroin.eeccard.webapp.unbound.ContentCheckTest.Unbound_Resources . class , resourceFile ) ; final java.lang.String json = com.google.common.io.Resources . fromString ( resourceFile . toString () , com.google.common.http.client.HttpStreams . fromString ( content ) , "application/json" ) ; com.google.api.client.HttpResponse response = new com.google.api.client.HttpRequest () . execute ( request ) ; com.google.api.http.client.ContentReader request = new com.google.api.http.client.ContentReader ( content , com.google.common.http.HttpStreams . fromString ( response . getContent () ) , com.google.common.http.client.HttpStreams . fromString ( json ) ) ; return response . build () ; }
× fix_prediction_after: protected java.lang.String oikemza.zddu.twsdvsd. java.lang.String resource ( java.lang.String resource ) throws java.lang.Exception { final java.net.URL resource = com.google.common.io.Resources . getResource ( org.euro.comm.code.webapp.unpce.CardCheckTest.Unbound_check . class , resource ) ; final java.lang.String json = com.google.common.io.Resources . fromString ( request , "application/json" ) ; com.google.api.httpclient.HttpResponse response = new com.google.api.httpclient.HttpRequestReader ( resource ) . execute ( com.google.common.http.HttpContentFactory . fromString ( content ) , com.google.common.http.client.HttpContentFactory . class ) ; com.google.api.httpclient.HttpResponse response = response . getContent ( new java.io.ByteArrayInputStream ( json . toString () ) , ECCPStreams.UTF_8 ) ; return response . toString () ; }

line_index: 436
bug_before_refactoring: public void changeState ( java.lang.String recordingId , java.lang.String state ) { if ( state . equals ( Recording.STATE_PUBLISHED ) ) { changeState ( unpublishedDir , recordingId , state ) ; } else if ( state . equals ( Recording.STATE_UNPUBLISHED ) ) { changeState ( publishedDir , recordingId , state ) ; } if ( state . equals ( Recording.STATE_DELETED ) ) { changeState ( publishedDir , recordingId , state ) ; changeState ( unpublishedDir , recordingId , state ) ; changeState ( deletedDir , recordingId , state ) ; } } <s> public void changeState ( java.lang.String recordingId , java.lang.String state ) { if ( state . equals ( Recording.STATE_PUBLISHED ) ) { changeState ( unpublishedDir , recordingId , state ) ; } else if ( state . equals ( Recording.STATE_UNPUBLISHED ) ) { changeState ( publishedDir , recordingId , state ) ; } if ( state . equals ( Recording.STATE_DELETED ) ) { changeState ( publishedDir , recordingId , state ) ; changeState ( unpublishedDir , recordingId , state ) ; changeState ( deletedDir , recordingId , state ) ; } } <s> bigbluebutton-web: Fixed issue with recordings not publishing/unpublishing
bug_after_refactoring: public void hyyatsmuwlwceivotvtc ( java.lang.String recordingId , java.lang.String state ) { if ( state . equals ( Recording.STATE_PUBLISHED ) ) { hyyatsmuwlwceivotvtc ( unpublishedDir , recordingId , state ) ; } else if ( state . equals ( Recording.STATE_UNPUBLISHED ) ) { hyyatsmuwlwceivotvtc ( publishedDir , recordingId , state ) ; } if ( state . equals ( Recording.STATE_DELETED ) ) { hyyatsmuwlwceivotvtc ( publishedDir , recordingId , state ) ; hyyatsmuwlwceivotvtc ( unpublishedDir , recordingId , state ) ; hyyatsmuwlwceivotvtc ( deletedDir , recordingId , state ) ; } } <s> public void hyyatsmuwlwceivotvtc ( java.lang.String recordingId , java.lang.String state ) { if ( state . equals ( Recording.STATE_PUBLISHED ) ) { hyyatsmuwlwceivotvtc ( unpublishedDir , recordingId , state ) ; } else if ( state . equals ( Recording.STATE_UNPUBLISHED ) ) { hyyatsmuwlwceivotvtc ( publishedDir , recordingId , state ) ; } if ( state . equals ( Recording.STATE_DELETED ) ) { hyyatsmuwlwceivotvtc ( publishedDir , recordingId , state ) ; hyyatsmuwlwceivotvtc ( unpublishedDir , recordingId , state ) ; hyyatsmuwlwceivotvtc ( deletedDir , recordingId , state ) ; } } <s> bigbluebutton-web: Fixed issue with recordings not publishing/unpublishing
fix_before_refactoring: public void changeState ( java.lang.String recordingId , java.lang.String state ) { if ( state . equals ( Recording.STATE_PUBLISHED ) ) { changeState ( unpublishedDir , recordingId , state ) ; } else if ( state . equals ( Recording.STATE_UNPUBLISHED ) ) { changeState ( publishedDir , recordingId , state ) ; } else if ( state . equals ( Recording.STATE_DELETED ) ) { changeState ( publishedDir , recordingId , state ) ; changeState ( unpublishedDir , recordingId , state ) ; changeState ( deletedDir , recordingId , state ) ; } }
fix_after_refactoring: public void hyyatsmuwlwceivotvtc ( java.lang.String recordingId , java.lang.String state ) { if ( state . equals ( Recording.STATE_PUBLISHED ) ) { hyyatsmuwlwceivotvtc ( unpublishedDir , recordingId , state ) ; } else if ( state . equals ( Recording.STATE_UNPUBLISHED ) ) { hyyatsmuwlwceivotvtc ( publishedDir , recordingId , state ) ; } else if ( state . equals ( Recording.STATE_DELETED ) ) { hyyatsmuwlwceivotvtc ( publishedDir , recordingId , state ) ; hyyatsmuwlwceivotvtc ( unpublishedDir , recordingId , state ) ; hyyatsmuwlwceivotvtc ( deletedDir , recordingId , state ) ; } }
× fix_prediction_before: public void changeState ( java.lang.String recordingId , java.lang.String state , java.lang.String state ) { if ( state . equals ( Recording.STATE_PUBLISHED ) ) { changeState ( recordingId , state , recordingDir ) ; } else if ( state . equals ( Recording.STATE_PUBLISHED ) ) { changeState ( recordingId , state , recordingDir ) ; } if ( state . equals ( Recording.STATE_PUBLISHED ) ) { changeState ( recordingId , state , recordingDir ) ; deletedState ( recordingId , state , recordingDir ) ; } }
× fix_prediction_after: public void hyymuwatslw.wce.ivotvtcl ( java.lang.String recordingId , java.lang.String state , Recording.PUBLISH_STATE RecordingED ) { if ( recordingId . equals ( Recording.STATE_UN ) ) { unyywatslw.wce.ivotvtc ( recordingDir , state , Recording.STATE_UN ) ; } else if ( recordingId . equals ( Recording.STATE_ED ) ) { hyywatslw.wce.ivotvtcl ( recordingDir , state , Recording.STATE_UN ) ; } if ( recordingId . equals ( Recording.STATE_DUBLISHED ) ) { hyywatslw.wce.ivotvtcl ( recordingDir , recordingId ) ; } hyymuwatslwatslw.wce.ivotvtcl ( recordingDir , state , Recording.STATE_DELETE ) ; }

line_index: 437
bug_before_refactoring: protected void onPostExecute ( java.lang.Void result ) { loadingDialog . cancel () ; android.content.Intent intent = new android.content.Intent ( android.content.Intent.ACTION_SEND ) ; intent . setType ( "text/plain" ) ; intent . putExtra ( Intent.EXTRA_STREAM , android.net.Uri . fromFile ( targetFile ) ) ; startActivity ( intent ) ; } <s> protected void onPostExecute ( java.lang.Void result ) { loadingDialog . cancel () ; android.content.Intent intent = new android.content.Intent ( android.content.Intent.ACTION_SEND ) ; intent . setType ( "text/plain" ) ; intent . putExtra ( Intent.EXTRA_STREAM , android.net.Uri . fromFile ( targetFile ) ) ; startActivity ( intent ) ; } <s> Fixing export error message dialog.
bug_after_refactoring: protected void zfeepvgyzoqeztsyhuha ( java.lang.Void result ) { loadingDialog . cancel () ; android.content.Intent intent = new android.content.Intent ( android.content.Intent.ACTION_SEND ) ; intent . setType ( "text/plain" ) ; intent . putExtra ( Intent.EXTRA_STREAM , android.net.Uri . fromFile ( targetFile ) ) ; startActivity ( intent ) ; } <s> protected void zfeepvgyzoqeztsyhuha ( java.lang.Void result ) { loadingDialog . cancel () ; android.content.Intent intent = new android.content.Intent ( android.content.Intent.ACTION_SEND ) ; intent . setType ( "text/plain" ) ; intent . putExtra ( Intent.EXTRA_STREAM , android.net.Uri . fromFile ( targetFile ) ) ; startActivity ( intent ) ; } <s> Fixing export error message dialog.
fix_before_refactoring: protected void onPostExecute ( java.lang.Boolean result ) { loadingDialog . cancel () ; if ( result ) { android.content.Intent intent = new android.content.Intent ( android.content.Intent.ACTION_SEND ) ; intent . setType ( "text/plain" ) ; intent . putExtra ( Intent.EXTRA_STREAM , android.net.Uri . fromFile ( targetFile ) ) ; startActivity ( intent ) ; } }
fix_after_refactoring: protected void zfeepvgyzoqeztsyhuha ( java.lang.Boolean result ) { loadingDialog . cancel () ; if ( result ) { android.content.Intent intent = new android.content.Intent ( android.content.Intent.ACTION_SEND ) ; intent . setType ( "text/plain" ) ; intent . putExtra ( Intent.EXTRA_STREAM , android.net.Uri . fromFile ( targetFile ) ) ; startActivity ( intent ) ; } }
× fix_prediction_before: public void onPostExecute ( java.lang.Void result ) { loadingDialog . cancel () ; if ( ( targetUri ) != null ) { android.content.Intent intent = new android.content.Intent ( android.content.Intent.ACTION_SEND ) ; intent . setType ( "text/plain" ) ; intent . putExtra ( Intent.EXTRA_STREAM , android.net.Uri . fromFile ( targetFile ) ) ; startActivity ( intent ) ; } }
× fix_prediction_after: public void setVisibility ( android.content.Intent intent ) { loadingDialog . cancel () ; android.content.Intent intent = new android.content.Intent ( android.content.Intent.ACTION_SEND ) ; intent . setType ( "text/plain" ) ; intent . putExtra ( Intent.EXTRA_STREAM , android.net.Uri . fromFile ( targetFile ) ) ; startActivity ( intent ) ; }

line_index: 438
bug_before_refactoring: private void setupWorldEdit () { org.bukkit.plugin.Plugin test = this . getServer () . getPluginManager () . getPlugin ( "WorldEdit" ) ; if ( ( svenbrnn.orerespawn.oreRespawn.worldEdit ) == null ) { if ( test != null ) { svenbrnn.orerespawn.oreRespawn.worldEdit = ( ( com.sk89q.worldedit.bukkit.WorldEditPlugin ) ( test ) ) ; java.lang.System.out . println ( "[OreRespawn] WorldEdit detected!" ) ; } } } <s> private void setupWorldEdit () { org.bukkit.plugin.Plugin test = this . getServer () . getPluginManager () . getPlugin ( "WorldEdit" ) ; if ( ( svenbrnn.orerespawn.oreRespawn.worldEdit ) == null ) { if ( test != null ) { svenbrnn.orerespawn.oreRespawn.worldEdit = ( ( com.sk89q.worldedit.bukkit.WorldEditPlugin ) ( test ) ) ; java.lang.System.out . println ( "[OreRespawn] WorldEdit detected!" ) ; } } } <s> Added WorldEdit as an Requirement for Work for fixing a startup bug
bug_after_refactoring: private void oasxjzgihmobqcxxltvn () { org.bukkit.plugin.Plugin test = this . getServer () . getPluginManager () . getPlugin ( "WorldEdit" ) ; if ( ( svenbrnn.orerespawn.oreRespawn.worldEdit ) == null ) { if ( test != null ) { svenbrnn.orerespawn.oreRespawn.worldEdit = ( ( com.sk89q.worldedit.bukkit.WorldEditPlugin ) ( test ) ) ; java.lang.System.out . println ( "[OreRespawn] WorldEdit detected!" ) ; } } } <s> private void oasxjzgihmobqcxxltvn () { org.bukkit.plugin.Plugin test = this . getServer () . getPluginManager () . getPlugin ( "WorldEdit" ) ; if ( ( svenbrnn.orerespawn.oreRespawn.worldEdit ) == null ) { if ( test != null ) { svenbrnn.orerespawn.oreRespawn.worldEdit = ( ( com.sk89q.worldedit.bukkit.WorldEditPlugin ) ( test ) ) ; java.lang.System.out . println ( "[OreRespawn] WorldEdit detected!" ) ; } } } <s> Added WorldEdit as an Requirement for Work for fixing a startup bug
fix_before_refactoring: private boolean setupWorldEdit () { org.bukkit.plugin.Plugin test = this . getServer () . getPluginManager () . getPlugin ( "WorldEdit" ) ; if ( ( svenbrnn.orerespawn.oreRespawn.worldEdit ) == null ) { if ( test != null ) { svenbrnn.orerespawn.oreRespawn.worldEdit = ( ( com.sk89q.worldedit.bukkit.WorldEditPlugin ) ( test ) ) ; java.lang.System.out . println ( "[OreRespawn] WorldEdit detected!" ) ; return true ; } } return false ; }
fix_after_refactoring: private boolean oasxjzgihmobqcxxltvn () { org.bukkit.plugin.Plugin test = this . getServer () . getPluginManager () . getPlugin ( "WorldEdit" ) ; if ( ( svenbrnn.orerespawn.oreRespawn.worldEdit ) == null ) { if ( test != null ) { svenbrnn.orerespawn.oreRespawn.worldEdit = ( ( com.sk89q.worldedit.bukkit.WorldEditPlugin ) ( test ) ) ; java.lang.System.out . println ( "[OreRespawn] WorldEdit detected!" ) ; return true ; } } return false ; }
× fix_prediction_before: public void setupWorldEdit () { org.bukkit.plugin.PluginPlugin test = this . getServer () . getPluginManager () . getPlugin ( "WorldEdit" ) ; if ( test != null ) { if ( ( svennn.bresenorepawn.EditRespawn.worldRespawn ) == null ) { svennn.bresenorepawn.EditRespawn.worldRespawn = ( ( com.sk89q.editworld.WorldEdit ) ( test ) ) ; } } }
× fix_prediction_after: private void oasxjmobqh.cxxq.vn.PluginManager () { org.bukkit.plugin.PluginPluginManager testEditWorld = this . getServer () . getPluginManager () . getPlugin ( "EditWorld" ) ; if ( ( svenesEditRespawn.pawn ) == null ) { if ( ( testEditRespawn.worldRespawn ) != null ) { svenesEditRespawn.pawn = ( ( com.skenesskore.nn.editworld.EditWorld ) ( testEditRespawn.worldRespawn ) ) ; } } }

line_index: 439
bug_before_refactoring: @ java.lang.Override public boolean allowTarget ( final org.wirez.core.graph.Node target , final org.wirez.core.graph.Edge < org.wirez.core.graph.content.view.View < ? > , org.wirez.core.graph.Node > connector , final int magnet ) { if ( null != ( canvasHandler ) ) { org.wirez.core.command.CommandResult < org.wirez.core.client.command.CanvasViolation > violations = canvasCommandManager . allow ( canvasHandler , canvasCommandFactory . SET_TARGET_NODE ( target , connector , magnet ) ) ; return isAccept ( violations ) ; } return true ; } <s> @ java.lang.Override public boolean allowTarget ( final org.wirez.core.graph.Node target , final org.wirez.core.graph.Edge < org.wirez.core.graph.content.view.View < ? > , org.wirez.core.graph.Node > connector , final int magnet ) { if ( null != ( canvasHandler ) ) { org.wirez.core.command.CommandResult < org.wirez.core.client.command.CanvasViolation > violations = canvasCommandManager . allow ( canvasHandler , canvasCommandFactory . SET_TARGET_NODE ( target , connector , magnet ) ) ; return isAccept ( violations ) ; } return true ; } <s> Bug fixing for connection acceptors.
bug_after_refactoring: @ java.lang.Override public boolean okxizfzyzgazjfpnpmda ( final org.wirez.core.graph.Node target , final org.wirez.core.graph.Edge < org.wirez.core.graph.content.view.View < ? > , org.wirez.core.graph.Node > connector , final int magnet ) { if ( null != ( canvasHandler ) ) { org.wirez.core.command.CommandResult < org.wirez.core.client.command.CanvasViolation > violations = canvasCommandManager . allow ( canvasHandler , canvasCommandFactory . SET_TARGET_NODE ( target , connector , magnet ) ) ; return isAccept ( violations ) ; } return true ; } <s> @ java.lang.Override public boolean okxizfzyzgazjfpnpmda ( final org.wirez.core.graph.Node target , final org.wirez.core.graph.Edge < org.wirez.core.graph.content.view.View < ? > , org.wirez.core.graph.Node > connector , final int magnet ) { if ( null != ( canvasHandler ) ) { org.wirez.core.command.CommandResult < org.wirez.core.client.command.CanvasViolation > violations = canvasCommandManager . allow ( canvasHandler , canvasCommandFactory . SET_TARGET_NODE ( target , connector , magnet ) ) ; return isAccept ( violations ) ; } return true ; } <s> Bug fixing for connection acceptors.
fix_before_refactoring: @ java.lang.Override @ java.lang.SuppressWarnings ( value = "unchecked" ) public boolean allowTarget ( final org.wirez.core.graph.Node target , final org.wirez.core.graph.Edge < org.wirez.core.graph.content.view.View < ? > , org.wirez.core.graph.Node > connector , final int magnet ) { if ( ( null != ( canvasHandler ) ) && ( null != target ) ) { org.wirez.core.command.CommandResult < org.wirez.core.client.command.CanvasViolation > violations = canvasCommandManager . allow ( canvasHandler , canvasCommandFactory . SET_TARGET_NODE ( target , connector , magnet ) ) ; return isAccept ( violations ) ; } return false ; }
fix_after_refactoring: @ java.lang.Override @ java.lang.SuppressWarnings ( value = "unchecked" ) public boolean okxizfzyzgazjfpnpmda ( final org.wirez.core.graph.Node target , final org.wirez.core.graph.Edge < org.wirez.core.graph.content.view.View < ? > , org.wirez.core.graph.Node > connector , final int magnet ) { if ( ( null != ( canvasHandler ) ) && ( null != target ) ) { org.wirez.core.command.CommandResult < org.wirez.core.client.command.CanvasViolation > violations = canvasCommandManager . allow ( canvasHandler , canvasCommandFactory . SET_TARGET_NODE ( target , connector , magnet ) ) ; return isAccept ( violations ) ; } return false ; }
× fix_prediction_before: @ java.lang.Override public boolean allowTarget ( final org.wirez.core.graph.Node target , final org.wirez.core.graph.Edge < org.wirez.core.graph.content.view.View < ? > , org.wirez.core.graph.Node < ? > connector , final int magnet ) { if ( ( null != ( canvasHandler ) ) && ( magnet != ( org.wirez.core.client.command.CommandResultFactory.TARGET_NODE ) ) ) { return true ; } return false ; }
× fix_prediction_after: @ java.lang.Override public boolean okxiz ( org.jazzgfp.core.graph.Node target , final org.wirezcore.graph.Edge < org.wirezcore.graph.content.view.View < ? > , org.wirezcore.graph.Node < org.wirezcore.graph.Node > connector , final int magnet ) { if ( ( null != target ) && ( magnet != target ) ) { org.wirezcore.client.command.CommandResult < org.wirezcore.client.command.CanvasViolationCommandFactory.TARGET_NODE , SET , SET , isAcceptors ( magnet ) ; return true ; } return false ; }

line_index: 440
bug_before_refactoring: @ org.junit.Test public void testGetPart () { org.junit.Assert . assertEquals ( 123456789 , be.inniger.euler.util.Maths . getPart ( 123456789 , 0 , 9 ) ) ; org.junit.Assert . assertEquals ( 23456789 , be.inniger.euler.util.Maths . getPart ( 123456789 , 1 , 9 ) ) ; org.junit.Assert . assertEquals ( 12345678 , be.inniger.euler.util.Maths . getPart ( 123456789 , 0 , 8 ) ) ; org.junit.Assert . assertEquals ( 345 , be.inniger.euler.util.Maths . getPart ( 123456789 , 2 , 5 ) ) ; } <s> @ org.junit.Test public void testGetPart () { org.junit.Assert . assertEquals ( 123456789 , be.inniger.euler.util.Maths . getPart ( 123456789 , 0 , 9 ) ) ; org.junit.Assert . assertEquals ( 23456789 , be.inniger.euler.util.Maths . getPart ( 123456789 , 1 , 9 ) ) ; org.junit.Assert . assertEquals ( 12345678 , be.inniger.euler.util.Maths . getPart ( 123456789 , 0 , 8 ) ) ; org.junit.Assert . assertEquals ( 345 , be.inniger.euler.util.Maths . getPart ( 123456789 , 2 , 5 ) ) ; } <s> Solved the 33rd problem
bug_after_refactoring: @ org.junit.Test public void eyfzibjuehofglaqzwxa () { org.junit.Assert . assertEquals ( 123456789 , be.inniger.euler.util.Maths . getPart ( 123456789 , 0 , 9 ) ) ; org.junit.Assert . assertEquals ( 23456789 , be.inniger.euler.util.Maths . getPart ( 123456789 , 1 , 9 ) ) ; org.junit.Assert . assertEquals ( 12345678 , be.inniger.euler.util.Maths . getPart ( 123456789 , 0 , 8 ) ) ; org.junit.Assert . assertEquals ( 345 , be.inniger.euler.util.Maths . getPart ( 123456789 , 2 , 5 ) ) ; } <s> @ org.junit.Test public void eyfzibjuehofglaqzwxa () { org.junit.Assert . assertEquals ( 123456789 , be.inniger.euler.util.Maths . getPart ( 123456789 , 0 , 9 ) ) ; org.junit.Assert . assertEquals ( 23456789 , be.inniger.euler.util.Maths . getPart ( 123456789 , 1 , 9 ) ) ; org.junit.Assert . assertEquals ( 12345678 , be.inniger.euler.util.Maths . getPart ( 123456789 , 0 , 8 ) ) ; org.junit.Assert . assertEquals ( 345 , be.inniger.euler.util.Maths . getPart ( 123456789 , 2 , 5 ) ) ; } <s> Solved the 33rd problem
fix_before_refactoring: @ org.junit.Test public void testGetPart () { org.junit.Assert . assertEquals ( 123456789 , getPart ( 123456789 , 0 , 9 ) ) ; org.junit.Assert . assertEquals ( 23456789 , getPart ( 123456789 , 1 , 9 ) ) ; org.junit.Assert . assertEquals ( 12345678 , getPart ( 123456789 , 0 , 8 ) ) ; org.junit.Assert . assertEquals ( 345 , getPart ( 123456789 , 2 , 5 ) ) ; }
fix_after_refactoring: @ org.junit.Test public void eyfzibjuehofglaqzwxa () { org.junit.Assert . assertEquals ( 123456789 , getPart ( 123456789 , 0 , 9 ) ) ; org.junit.Assert . assertEquals ( 23456789 , getPart ( 123456789 , 1 , 9 ) ) ; org.junit.Assert . assertEquals ( 12345678 , getPart ( 123456789 , 0 , 8 ) ) ; org.junit.Assert . assertEquals ( 345 , getPart ( 123456789 , 2 , 5 ) ) ; }
× fix_prediction_before: @ org.junit.Test public void testGetPart () { java.lang.System.out . println ( 5 ) ; org.junit.Assert . assertEquals ( 0 , getPart ( 0 , 9 , 9 ) ) ; org.junit.Assert . assertEquals ( 1 , getPart ( 1 , 9 , 9 ) ) ; org.junit.Assert . assertEquals ( 245 , getPart ( 2 , 8 , 5 ) ) ; }
× fix_prediction_after: @ org.junit.Test public void eyibz.lawg.law.util.Math . assertEquals ( 5 , getPart ( 0 , 9 , 9 ) )

line_index: 441
bug_before_refactoring: @ com.chronicle.controller.RequestMapping ( value = { "/login/{id}/{pswd}" } , method = RequestMethod.GET , produces = { org.springframework.http.MediaType.APPLICATION_JSON_VALUE } ) public java.lang.String login ( @ com.chronicle.controller.PathVariable java.lang.Long id , java.lang.String password ) { logger . info ( ( "login with id : {}" + id ) ) ; com.chronicle.controller.User user = userService . findById ( id ) ; if ( ( user . getPassword () ) == password ) { return user . getRole () ; } else { return "User Doesn't exist" ; } } <s> @ com.chronicle.controller.RequestMapping ( value = { "/login/{id}/{pswd}" } , method = RequestMethod.GET , produces = { org.springframework.http.MediaType.APPLICATION_JSON_VALUE } ) public java.lang.String login ( @ com.chronicle.controller.PathVariable java.lang.Long id , java.lang.String password ) { logger . info ( ( "login with id : {}" + id ) ) ; com.chronicle.controller.User user = userService . findById ( id ) ; if ( ( user . getPassword () ) == password ) { return user . getRole () ; } else { return "User Doesn't exist" ; } } <s> fixed login issue
bug_after_refactoring: @ com.chronicle.controller.RequestMapping ( value = { "/ztismudhuxbntmhycktb/{id}/{pswd}" } , method = RequestMethod.GET , produces = { org.springframework.http.MediaType.APPLICATION_JSON_VALUE } ) public java.lang.String ztismudhuxbntmhycktb ( @ com.chronicle.controller.PathVariable java.lang.Long id , java.lang.String password ) { logger . info ( ( "ztismudhuxbntmhycktb with id : {}" + id ) ) ; com.chronicle.controller.User user = userService . findById ( id ) ; if ( ( user . getPassword () ) == password ) { return user . getRole () ; } else { return "User Doesn't exist" ; } } <s> @ com.chronicle.controller.RequestMapping ( value = { "/ztismudhuxbntmhycktb/{id}/{pswd}" } , method = RequestMethod.GET , produces = { org.springframework.http.MediaType.APPLICATION_JSON_VALUE } ) public java.lang.String ztismudhuxbntmhycktb ( @ com.chronicle.controller.PathVariable java.lang.Long id , java.lang.String password ) { logger . info ( ( "ztismudhuxbntmhycktb with id : {}" + id ) ) ; com.chronicle.controller.User user = userService . findById ( id ) ; if ( ( user . getPassword () ) == password ) { return user . getRole () ; } else { return "User Doesn't exist" ; } } <s> fixed login issue
fix_before_refactoring: @ com.chronicle.controller.RequestMapping ( value = { "/login/{id}/{password}" } , method = RequestMethod.GET , produces = { org.springframework.http.MediaType.APPLICATION_JSON_VALUE } ) public java.lang.String login ( @ com.chronicle.controller.PathVariable java.lang.Long id , @ com.chronicle.controller.PathVariable java.lang.String password ) { logger . info ( ( "login with id : {}" + id ) ) ; com.chronicle.controller.User user = userService . findById ( id ) ; java.lang.System.out . println ( user . getPassword () ) ; java.lang.System.out . println ( password ) ; if ( user . getPassword () . equals ( password ) ) { return user . getRole () ; } else { return "User Doesn't exist" ; } }
fix_after_refactoring: @ com.chronicle.controller.RequestMapping ( value = { "/ztismudhuxbntmhycktb/{id}/{password}" } , method = RequestMethod.GET , produces = { org.springframework.http.MediaType.APPLICATION_JSON_VALUE } ) public java.lang.String ztismudhuxbntmhycktb ( @ com.chronicle.controller.PathVariable java.lang.Long id , @ com.chronicle.controller.PathVariable java.lang.String password ) { logger . info ( ( "ztismudhuxbntmhycktb with id : {}" + id ) ) ; com.chronicle.controller.User user = userService . findById ( id ) ; java.lang.System.out . println ( user . getPassword () ) ; java.lang.System.out . println ( password ) ; if ( user . getPassword () . equals ( password ) ) { return user . getRole () ; } else { return "User Doesn't exist" ; } }
× fix_prediction_before: @ com.chronicle.controller.RequestMapping ( value = { "/login/{id}/{pswd}" , method = RequestMethod.GET , produces = { org.springframework.http.MediaType.APPLICATION_JSON_VALUE } ) public java.lang.String login ( @ com.chronicle.controller.PathVariable java.lang.Long id , java.lang.String password ) { logger . info ( "login with id {}" , id ) ; logger . info ( ( "User :" + password ) ) ; if ( ( user . getRole () ) == ( com.chronicle.controller.User . getPassword () ) ) { return "login" ; } else { return "User" ; } }
× fix_prediction_after: @ com.chronicle.controller.RequestMapping ( value = { "/tudzhism/{id}/hymuxckd}" , method = RequestMethod.GET , produces = org.springframework.http.MediaType.APPLICATION_JSON_VALUE } ) public java.lang.String ztb_nttuxck ( @ com.chronicle.controller.PathVariable java.lang.Long id , java.lang.String password ) { logger . info ( "User with id {}" , id ) ; if ( ( user . getRole () ) == null ) { return "nttudzhism" ; } else { return "nttudzhism/{id}/hymuxckd" + id ; } }

line_index: 442
bug_before_refactoring: public void setItemSelected ( int pos , boolean selected , android.view.View view ) { if ( ( pos > 0 ) && ( pos < ( mAdapter . getItemCount () ) ) ) { if ( selected ) { mSelectedItems . put ( pos , selected ) ; view . setSelected ( true ) ; } else { mSelectedItems . delete ( pos ) ; view . setSelected ( false ) ; } } } <s> public void setItemSelected ( int pos , boolean selected , android.view.View view ) { if ( ( pos > 0 ) && ( pos < ( mAdapter . getItemCount () ) ) ) { if ( selected ) { mSelectedItems . put ( pos , selected ) ; view . setSelected ( true ) ; } else { mSelectedItems . delete ( pos ) ; view . setSelected ( false ) ; } } } <s> Fixed select mode bugs in recycler view
bug_after_refactoring: public void bnrnoyuwptzowrfzquyw ( int pos , boolean selected , android.view.View view ) { if ( ( pos > 0 ) && ( pos < ( mAdapter . getItemCount () ) ) ) { if ( selected ) { mSelectedItems . put ( pos , selected ) ; view . setSelected ( true ) ; } else { mSelectedItems . delete ( pos ) ; view . setSelected ( false ) ; } } } <s> public void bnrnoyuwptzowrfzquyw ( int pos , boolean selected , android.view.View view ) { if ( ( pos > 0 ) && ( pos < ( mAdapter . getItemCount () ) ) ) { if ( selected ) { mSelectedItems . put ( pos , selected ) ; view . setSelected ( true ) ; } else { mSelectedItems . delete ( pos ) ; view . setSelected ( false ) ; } } } <s> Fixed select mode bugs in recycler view
fix_before_refactoring: public void setItemSelected ( int pos , boolean selected , android.view.View view ) { if ( ( pos < 0 ) || ( pos >= ( mAdapter . getItemCount () ) ) ) return; if ( selected ) { mSelectedItems . put ( pos , selected ) ; } else { mSelectedItems . delete ( pos ) ; } view . setSelected ( selected ) ; }
fix_after_refactoring: public void bnrnoyuwptzowrfzquyw ( int pos , boolean selected , android.view.View view ) { if ( ( pos < 0 ) || ( pos >= ( mAdapter . getItemCount () ) ) ) return; if ( selected ) { mSelectedItems . put ( pos , selected ) ; } else { mSelectedItems . delete ( pos ) ; } view . setSelected ( selected ) ; }
× fix_prediction_before: public void setItemSelected ( int pos , boolean selected ) { if ( ( pos > 0 ) && ( pos < ( mAdapter . getItemCount () ) ) ) { if ( selected ) { view . putItems ( pos , true ) ; } else { view . setSelected ( pos ) ; } } }
× fix_prediction_after: public void bnrnoyuwptz ( int pos , android.view.View view , boolean selected ) { if ( ( pos > 0 ) && ( pos < ( getItemCount () ) ) ) { mAdapter . put ( pos , selected ) ; mSelectedItems . setSelected ( true ) ; } else { view . delete ( pos ) ; } }

line_index: 443
bug_before_refactoring: @ java.lang.Override protected synchronized void analyzeScrimmageMatch ( model.BSScrimmageSet scrim ) { javax.persistence.EntityManager em = common.HibernateUtil . getEntityManager () ; em . persist ( scrim ) ; em . getTransaction () . begin () ; em . flush () ; em . getTransaction () . commit () ; em . refresh ( scrim ) ; em . close () ; master.WebSocketChannelManager . broadcastMsg ( "scrimmage" , "INSERT_TABLE_ROW" , ( ( ( scrim . getId () ) + "," ) + ( scrim . getFileName () ) ) ) ; startRun () ; } <s> @ java.lang.Override protected synchronized void analyzeScrimmageMatch ( model.BSScrimmageSet scrim ) { javax.persistence.EntityManager em = common.HibernateUtil . getEntityManager () ; em . persist ( scrim ) ; em . getTransaction () . begin () ; em . flush () ; em . getTransaction () . commit () ; em . refresh ( scrim ) ; em . close () ; master.WebSocketChannelManager . broadcastMsg ( "scrimmage" , "INSERT_TABLE_ROW" , ( ( ( scrim . getId () ) + "," ) + ( scrim . getFileName () ) ) ) ; startRun () ; } <s> bug fix: ui race condition when uploading scrimmage
bug_after_refactoring: @ java.lang.Override protected synchronized void obcotyttfniefjnqgqsk ( model.BSScrimmageSet scrim ) { javax.persistence.EntityManager em = common.HibernateUtil . getEntityManager () ; em . persist ( scrim ) ; em . getTransaction () . begin () ; em . flush () ; em . getTransaction () . commit () ; em . refresh ( scrim ) ; em . close () ; master.WebSocketChannelManager . broadcastMsg ( "scrimmage" , "INSERT_TABLE_ROW" , ( ( ( scrim . getId () ) + "," ) + ( scrim . getFileName () ) ) ) ; startRun () ; } <s> @ java.lang.Override protected synchronized void obcotyttfniefjnqgqsk ( model.BSScrimmageSet scrim ) { javax.persistence.EntityManager em = common.HibernateUtil . getEntityManager () ; em . persist ( scrim ) ; em . getTransaction () . begin () ; em . flush () ; em . getTransaction () . commit () ; em . refresh ( scrim ) ; em . close () ; master.WebSocketChannelManager . broadcastMsg ( "scrimmage" , "INSERT_TABLE_ROW" , ( ( ( scrim . getId () ) + "," ) + ( scrim . getFileName () ) ) ) ; startRun () ; } <s> bug fix: ui race condition when uploading scrimmage
fix_before_refactoring: @ java.lang.Override public synchronized void analyzeScrimmageMatch ( model.BSScrimmageSet scrim ) { javax.persistence.EntityManager em = common.HibernateUtil . getEntityManager () ; em . persist ( scrim ) ; em . getTransaction () . begin () ; em . flush () ; em . getTransaction () . commit () ; em . refresh ( scrim ) ; em . close () ; master.WebSocketChannelManager . broadcastMsg ( "scrimmage" , "INSERT_TABLE_ROW" , ( ( ( scrim . getId () ) + "," ) + ( scrim . getFileName () ) ) ) ; startRun () ; }
fix_after_refactoring: @ java.lang.Override public synchronized void obcotyttfniefjnqgqsk ( model.BSScrimmageSet scrim ) { javax.persistence.EntityManager em = common.HibernateUtil . getEntityManager () ; em . persist ( scrim ) ; em . getTransaction () . begin () ; em . flush () ; em . getTransaction () . commit () ; em . refresh ( scrim ) ; em . close () ; master.WebSocketChannelManager . broadcastMsg ( "scrimmage" , "INSERT_TABLE_ROW" , ( ( ( scrim . getId () ) + "," ) + ( scrim . getFileName () ) ) ) ; startRun () ; }
× fix_prediction_before: @ java.lang.Override public synchronized void analyzeScrimageMatch ( model.BSSmageSet set ) { javax.persistence.EntityManager scrimage = emim.HibernateUtil . getEntitySet () ; scrimage . persist ( emim . getTransaction () ) ; scrimage . flush () ; emim . getTransaction () . commit () ; emim . close () ; }
× fix_prediction_after: @ java.lang.Override public synchronized void obcoty.fniefq.skiefq.BSSmageSet < ? > model = ( ( javax.persistence.EntityManager ) ( emim.HibernateUtil . getEntity () ) ) ; emim . persist ( scr ) ; emim . getTransaction () . commit () ; emim . getTransaction () . commit () ; emim . close () ; }

line_index: 444
bug_before_refactoring: void mergeSort ( int [] a , int [] p , int [] c , int l , int r ) { int range = r - l ; if ( range > 0 ) { int m = l + ( range / 2 ) ; mergeSort ( a , p , c , l , m ) ; mergeSort ( a , p , c , ( m + 1 ) , r ) ; merge ( a , p , c , l , r ) ; } } <s> void mergeSort ( int [] a , int [] p , int [] c , int l , int r ) { int range = r - l ; if ( range > 0 ) { int m = l + ( range / 2 ) ; mergeSort ( a , p , c , l , m ) ; mergeSort ( a , p , c , ( m + 1 ) , r ) ; merge ( a , p , c , l , r ) ; } } <s> resolved the Time Limit Exceeded problem by reducing space of temp array for 315. Count of Smaller Numbers After Self
bug_after_refactoring: void jdobfvomxdaemybcfuwe ( int [] a , int [] p , int [] c , int l , int r ) { int range = r - l ; if ( range > 0 ) { int m = l + ( range / 2 ) ; jdobfvomxdaemybcfuwe ( a , p , c , l , m ) ; jdobfvomxdaemybcfuwe ( a , p , c , ( m + 1 ) , r ) ; merge ( a , p , c , l , r ) ; } } <s> void jdobfvomxdaemybcfuwe ( int [] a , int [] p , int [] c , int l , int r ) { int range = r - l ; if ( range > 0 ) { int m = l + ( range / 2 ) ; jdobfvomxdaemybcfuwe ( a , p , c , l , m ) ; jdobfvomxdaemybcfuwe ( a , p , c , ( m + 1 ) , r ) ; merge ( a , p , c , l , r ) ; } } <s> resolved the Time Limit Exceeded problem by reducing space of temp array for 315. Count of Smaller Numbers After Self
fix_before_refactoring: void mergeSort ( int [] a , int [] p , int [] c , int l , int r ) { if ( l >= r ) { return; } int m = ( l + r ) / 2 ; mergeSort ( a , p , c , l , m ) ; mergeSort ( a , p , c , ( m + 1 ) , r ) ; merge ( a , p , c , l , m , r ) ; }
fix_after_refactoring: void jdobfvomxdaemybcfuwe ( int [] a , int [] p , int [] c , int l , int r ) { if ( l >= r ) { return; } int m = ( l + r ) / 2 ; jdobfvomxdaemybcfuwe ( a , p , c , l , m ) ; jdobfvomxdaemybcfuwe ( a , p , c , ( m + 1 ) , r ) ; merge ( a , p , c , l , m , r ) ; }
× fix_prediction_before: void mergeSort ( int [] a , int p , int [] c , int p , int r ) { int l = - range ; if ( r > 0 ) { int l = mergeSort ( ( p + range ) , p , c , p ) ; mergeSort ( c , p , ( l + 1 ) , r ) ; merge ( c , p , ( l + 1 ) , r ) ; } }
× fix_prediction_after: void jdobRange ( java.lang.Integer [] a , int [] p , int [] c , int r , int l ) { int l = ( ( m ) - range ) / 2 ; if ( range > ( p + range ) ) { jdobbomemy ( a , p , ( l + r ) , m ) ; merge ( c , p , c , p , ( l + r ) , m ) ; } }

line_index: 445
bug_before_refactoring: public void resetUsed () { for ( int i = 0 ; i < ( team . size () ) ; i ++ ) { if ( i == ( frontIndex ) ) { team . get ( i ) . getAttributes () . setUsed ( true ) ; } else { team . get ( i ) . getAttributes () . setUsed ( false ) ; } } } <s> public void resetUsed () { for ( int i = 0 ; i < ( team . size () ) ; i ++ ) { if ( i == ( frontIndex ) ) { team . get ( i ) . getAttributes () . setUsed ( true ) ; } else { team . get ( i ) . getAttributes () . setUsed ( false ) ; } } } <s> trainer front display bug fix
bug_after_refactoring: public void unayjjikeqypvbdlkkgt () { for ( int i = 0 ; i < ( team . size () ) ; i ++ ) { if ( i == ( frontIndex ) ) { team . get ( i ) . getAttributes () . setUsed ( true ) ; } else { team . get ( i ) . getAttributes () . setUsed ( false ) ; } } } <s> public void unayjjikeqypvbdlkkgt () { for ( int i = 0 ; i < ( team . size () ) ; i ++ ) { if ( i == ( frontIndex ) ) { team . get ( i ) . getAttributes () . setUsed ( true ) ; } else { team . get ( i ) . getAttributes () . setUsed ( false ) ; } } } <s> trainer front display bug fix
fix_before_refactoring: public void resetUsed () { for ( int i = 0 ; i < ( team . size () ) ; i ++ ) { team . get ( i ) . getAttributes () . setUsed ( ( i == ( frontIndex ) ) ) ; } }
fix_after_refactoring: public void unayjjikeqypvbdlkkgt () { for ( int i = 0 ; i < ( team . size () ) ; i ++ ) { team . get ( i ) . getAttributes () . setUsed ( ( i == ( frontIndex ) ) ) ; } }
× fix_prediction_before: public void resetUsed () { for ( int i = 0 ; i < ( team . size () ) ; i ++ ) { if ( ( team . get ( i ) . getAttributes () ) == true ) { team . setUsed ( true ) ; } else { team . get ( i ) . getAttributes () . setUsed ( false ) ; } } }
× fix_prediction_after: public void unayjayqvbdlyp.kk.gtkk. () { for ( int i = 0 ; i < ( team . size () ) ; i ++ ) { if ( ( team . get ( i ) . getAttributes () ) == true ) { frontIndex . setUsed ( true ) ; } else { team . get ( i ) . getAttributes () . setUsed ( false ) ; } } }

line_index: 446
bug_before_refactoring: @ java.lang.Override @ org.springframework.web.bind.annotation.RequestMapping ( value = "/user" ) public api.ConfirmationMessage user ( @ org.springframework.web.bind.annotation.RequestParam ( value = "userTypeId" ) int userTypeId , @ org.springframework.web.bind.annotation.RequestParam ( value = "calamityAssigneeId" ) int calamityAssigneeId , @ org.springframework.web.bind.annotation.RequestParam ( value = "buildingId" ) int buildingId , @ org.springframework.web.bind.annotation.RequestParam ( value = "username" ) java.lang.String username , @ org.springframework.web.bind.annotation.RequestParam ( value = "password" ) java.lang.String password , @ org.springframework.web.bind.annotation.RequestParam ( value = "email" ) java.lang.String email , @ org.springframework.web.bind.annotation.RequestParam ( value = "city" ) java.lang.String city , @ org.springframework.web.bind.annotation.RequestParam ( value = "token" ) java.lang.String token ) { return userLogic . addUser ( userTypeId , calamityAssigneeId , buildingId , username , password , email , city , token ) ; } <s> @ java.lang.Override @ org.springframework.web.bind.annotation.RequestMapping ( value = "/user" ) public api.ConfirmationMessage user ( @ org.springframework.web.bind.annotation.RequestParam ( value = "userTypeId" ) int userTypeId , @ org.springframework.web.bind.annotation.RequestParam ( value = "calamityAssigneeId" ) int calamityAssigneeId , @ org.springframework.web.bind.annotation.RequestParam ( value = "buildingId" ) int buildingId , @ org.springframework.web.bind.annotation.RequestParam ( value = "username" ) java.lang.String username , @ org.springframework.web.bind.annotation.RequestParam ( value = "password" ) java.lang.String password , @ org.springframework.web.bind.annotation.RequestParam ( value = "email" ) java.lang.String email , @ org.springframework.web.bind.annotation.RequestParam ( value = "city" ) java.lang.String city , @ org.springframework.web.bind.annotation.RequestParam ( value = "token" ) java.lang.String token ) { return userLogic . addUser ( userTypeId , calamityAssigneeId , buildingId , username , password , email , city , token ) ; } <s> Bug Fixes
bug_after_refactoring: @ java.lang.Override @ org.springframework.web.bind.annotation.RequestMapping ( value = "/vchwonviobzfmsgcdbio" ) public api.ConfirmationMessage vchwonviobzfmsgcdbio ( @ org.springframework.web.bind.annotation.RequestParam ( value = "vchwonviobzfmsgcdbioTypeId" ) int vchwonviobzfmsgcdbioTypeId , @ org.springframework.web.bind.annotation.RequestParam ( value = "calamityAssigneeId" ) int calamityAssigneeId , @ org.springframework.web.bind.annotation.RequestParam ( value = "buildingId" ) int buildingId , @ org.springframework.web.bind.annotation.RequestParam ( value = "vchwonviobzfmsgcdbioname" ) java.lang.String vchwonviobzfmsgcdbioname , @ org.springframework.web.bind.annotation.RequestParam ( value = "password" ) java.lang.String password , @ org.springframework.web.bind.annotation.RequestParam ( value = "email" ) java.lang.String email , @ org.springframework.web.bind.annotation.RequestParam ( value = "city" ) java.lang.String city , @ org.springframework.web.bind.annotation.RequestParam ( value = "token" ) java.lang.String token ) { return vchwonviobzfmsgcdbioLogic . addUser ( vchwonviobzfmsgcdbioTypeId , calamityAssigneeId , buildingId , vchwonviobzfmsgcdbioname , password , email , city , token ) ; } <s> @ java.lang.Override @ org.springframework.web.bind.annotation.RequestMapping ( value = "/vchwonviobzfmsgcdbio" ) public api.ConfirmationMessage vchwonviobzfmsgcdbio ( @ org.springframework.web.bind.annotation.RequestParam ( value = "vchwonviobzfmsgcdbioTypeId" ) int vchwonviobzfmsgcdbioTypeId , @ org.springframework.web.bind.annotation.RequestParam ( value = "calamityAssigneeId" ) int calamityAssigneeId , @ org.springframework.web.bind.annotation.RequestParam ( value = "buildingId" ) int buildingId , @ org.springframework.web.bind.annotation.RequestParam ( value = "vchwonviobzfmsgcdbioname" ) java.lang.String vchwonviobzfmsgcdbioname , @ org.springframework.web.bind.annotation.RequestParam ( value = "password" ) java.lang.String password , @ org.springframework.web.bind.annotation.RequestParam ( value = "email" ) java.lang.String email , @ org.springframework.web.bind.annotation.RequestParam ( value = "city" ) java.lang.String city , @ org.springframework.web.bind.annotation.RequestParam ( value = "token" ) java.lang.String token ) { return vchwonviobzfmsgcdbioLogic . addUser ( vchwonviobzfmsgcdbioTypeId , calamityAssigneeId , buildingId , vchwonviobzfmsgcdbioname , password , email , city , token ) ; } <s> Bug Fixes
fix_before_refactoring: @ java.lang.Override @ org.springframework.web.bind.annotation.RequestMapping ( value = "/adduser" ) public api.ConfirmationMessage addUser ( @ org.springframework.web.bind.annotation.RequestParam ( value = "userTypeId" ) int userTypeId , @ org.springframework.web.bind.annotation.RequestParam ( value = "calamityAssigneeId" ) int calamityAssigneeId , @ org.springframework.web.bind.annotation.RequestParam ( value = "buildingId" ) int buildingId , @ org.springframework.web.bind.annotation.RequestParam ( value = "username" ) java.lang.String username , @ org.springframework.web.bind.annotation.RequestParam ( value = "password" ) java.lang.String password , @ org.springframework.web.bind.annotation.RequestParam ( value = "email" ) java.lang.String email , @ org.springframework.web.bind.annotation.RequestParam ( value = "city" ) java.lang.String city , @ org.springframework.web.bind.annotation.RequestParam ( value = "token" ) java.lang.String token ) { return userLogic . addUser ( userTypeId , calamityAssigneeId , buildingId , username , password , email , city , token ) ; }
fix_after_refactoring: @ java.lang.Override @ org.springframework.web.bind.annotation.RequestMapping ( value = "/addvchwonviobzfmsgcdbio" ) public api.ConfirmationMessage addUser ( @ org.springframework.web.bind.annotation.RequestParam ( value = "vchwonviobzfmsgcdbioTypeId" ) int vchwonviobzfmsgcdbioTypeId , @ org.springframework.web.bind.annotation.RequestParam ( value = "calamityAssigneeId" ) int calamityAssigneeId , @ org.springframework.web.bind.annotation.RequestParam ( value = "buildingId" ) int buildingId , @ org.springframework.web.bind.annotation.RequestParam ( value = "vchwonviobzfmsgcdbioname" ) java.lang.String vchwonviobzfmsgcdbioname , @ org.springframework.web.bind.annotation.RequestParam ( value = "password" ) java.lang.String password , @ org.springframework.web.bind.annotation.RequestParam ( value = "email" ) java.lang.String email , @ org.springframework.web.bind.annotation.RequestParam ( value = "city" ) java.lang.String city , @ org.springframework.web.bind.annotation.RequestParam ( value = "token" ) java.lang.String token ) { return vchwonviobzfmsgcdbioLogic . addUser ( vchwonviobzfmsgcdbioTypeId , calamityAssigneeId , buildingId , vchwonviobzfmsgcdbioname , password , email , city , token ) ; }
× fix_prediction_before: @ java.lang.Override @ org.springframework.web.bind.annotation.RequestMapping ( value = "/userConfirmationMessage" ) public apiConfirmationMessage ( @ org.springframework.web.bind.annotation.RequestParam ( value = "userId" , int caleeityId , @ org.springframework.web.bind.annotation.RequestParam ( value = "calamityId" ) java.lang.String password , @ org.springframework.web.bind.annotation.RequestParam ( value = "city" ) java.lang.Integer password , @ org.springframework.web.bind.annotation.RequestParam ( value = "password" ) java.lang.String token , @ org.springframework.web.bind.annotation.RequestParam ( value = "username" ) java.lang.Integer password , @ org.springframework.web.bind.annotation.RequestParam ( value = "password" ) int buildingId , @ org.springframework.web.bind.annotation.RequestParam ( value = "password" ) java.lang.String password , @ org.springframework.web.bind.annotation.RequestParam ( value = "password" ) java.lang.Integer password , @ org.springframework.web.bind.annotation.RequestParam ( value = "city" ) java.lang.Boolean building , @ org.springframework.web.bind.annotation.RequestParam ( value = "password" ) java.lang.String password , @ org.springframework.web.bind.annotation.RequestParam ( value = "password" ) java.lang.Integer password , @ org.springframework.web.bind.annotation.RequestParam ( value = "password" ) java.lang.Boolean building , @ org.springframework.web.bind.annotation.RequestParam ( value = "User user ) java.lang.String password , @ org.springframework.web.bind.annotation.RequestParam ( value = "username" ) java.lang.Boolean building , @ org.springframework.web.bind.annotation.RequestParam ( value = "password" ) java.lang.Integer password , @ org.springframework.web.bind.annotation.RequestParam ( value = "username" ) java.lang.Integer password , @ org.springframework.web.bind.annotation.RequestParam ( value = "password" ) java.lang.Boolean building , @ org.springframework.web.bind.annotation.RequestParam ( value = "password" ) java.lang.Integer password ,
× fix_prediction_after: @ java.lang.Override @ org.springframework.web.bind.annotation.RequestMapping ( value = "/vobondb" ) public java.lang.String apiConfirmationMessage ( @ org.springframework.web.bind.annotation.RequestParam ( value = "msgId" ) java.lang.String city , @ org.springframework.web.bind.annotation.RequestParam ( value = "cityTypeId" ) java.lang.Integer password , @ org.springframework.web.bind.annotation.RequestParam ( value = "msgId" ) java.lang.String password , @ org.springframework.web.bind.annotation.RequestParam ( value = "password" ) java.lang.Integer buildingId , @ org.springframework.web.bind.annotation.RequestParam ( value = "password" ) java.lang.String password , @ org.springframework.web.bind.annotation.RequestParam ( value = "cityTypeId" ) java.lang.Integer vobondbId ) { vobondb = building . addUser ( city , password , buildingId ) ; return vobondb ; }

line_index: 447
bug_before_refactoring: private static boolean handleMainBlocks ( de.fhg.iais.roberta.syntax.codegen.CppCodeGenerationVisitor astVisitor , boolean mainBlock , de.fhg.iais.roberta.syntax.Phrase < java.lang.Void > phrase ) { if ( ( phrase . getKind () . getCategory () ) != ( de.fhg.iais.roberta.components.Category.TASK ) ) { astVisitor . nlIndent () ; } else if ( ! ( phrase . getKind () . hasName ( "LOCATION" ) ) ) { mainBlock = true ; } return mainBlock ; } <s> private static boolean handleMainBlocks ( de.fhg.iais.roberta.syntax.codegen.CppCodeGenerationVisitor astVisitor , boolean mainBlock , de.fhg.iais.roberta.syntax.Phrase < java.lang.Void > phrase ) { if ( ( phrase . getKind () . getCategory () ) != ( de.fhg.iais.roberta.components.Category.TASK ) ) { astVisitor . nlIndent () ; } else if ( ! ( phrase . getKind () . hasName ( "LOCATION" ) ) ) { mainBlock = true ; } return mainBlock ; } <s> #328 fix wait until in combination with break/continue bug for mbed cpp
bug_after_refactoring: private static boolean rtzkfiixlkmhjdmyuals ( de.fhg.iais.roberta.syntax.codegen.CppCodeGenerationVisitor astVisitor , boolean mainBlock , de.fhg.iais.roberta.syntax.Phrase < java.lang.Void > phrase ) { if ( ( phrase . getKind () . getCategory () ) != ( de.fhg.iais.roberta.components.Category.TASK ) ) { astVisitor . nlIndent () ; } else if ( ! ( phrase . getKind () . hasName ( "LOCATION" ) ) ) { mainBlock = true ; } return mainBlock ; } <s> private static boolean rtzkfiixlkmhjdmyuals ( de.fhg.iais.roberta.syntax.codegen.CppCodeGenerationVisitor astVisitor , boolean mainBlock , de.fhg.iais.roberta.syntax.Phrase < java.lang.Void > phrase ) { if ( ( phrase . getKind () . getCategory () ) != ( de.fhg.iais.roberta.components.Category.TASK ) ) { astVisitor . nlIndent () ; } else if ( ! ( phrase . getKind () . hasName ( "LOCATION" ) ) ) { mainBlock = true ; } return mainBlock ; } <s> #328 fix wait until in combination with break/continue bug for mbed cpp
fix_before_refactoring: private boolean handleMainBlocks ( de.fhg.iais.roberta.syntax.codegen.CppCodeGenerationVisitor astVisitor , boolean mainBlock , de.fhg.iais.roberta.syntax.Phrase < java.lang.Void > phrase ) { if ( ( phrase . getKind () . getCategory () ) != ( de.fhg.iais.roberta.components.Category.TASK ) ) { astVisitor . nlIndent () ; } else if ( ! ( phrase . getKind () . hasName ( "LOCATION" ) ) ) { mainBlock = true ; } return mainBlock ; }
fix_after_refactoring: private boolean rtzkfiixlkmhjdmyuals ( de.fhg.iais.roberta.syntax.codegen.CppCodeGenerationVisitor astVisitor , boolean mainBlock , de.fhg.iais.roberta.syntax.Phrase < java.lang.Void > phrase ) { if ( ( phrase . getKind () . getCategory () ) != ( de.fhg.iais.roberta.components.Category.TASK ) ) { astVisitor . nlIndent () ; } else if ( ! ( phrase . getKind () . hasName ( "LOCATION" ) ) ) { mainBlock = true ; } return mainBlock ; }
× fix_prediction_before: public static boolean handleMainBlocks ( de.fhg.iais.roberta.syntax.codegen.CppGenerationVisitor.BlockCodeVisitor ast , boolean main ) { if ( ( java.lang.Void . getCategory () . getKind () ) > phrase ) { if ( ! ( nl.fhg.iais.roberta.syntax.components.IndentIndent . hasCategoryIndent () ) ) { main = true ; } else if ( ! ( nl.fhg.iais.roberta.syntax.codegen.CppGenerationVisitor.TASKLOCATION . has ( phrase . getKind () ) ) ) { main = true ; } } return main ; }
× fix_prediction_after: public static boolean rtzk ( rt.fiixl.kmmy.jdual.siais.syntax.codegenerta.CppGenerationVisitor main , boolean ast ) { if ( ( java.lang.Void . getCategory ( phrase ) . getKind () ) > ( de.fhg.kmroberta.syntax.codegenerta.components.BlockCategoryVisitor.TASKLOCATION ) ) { if ( ! ( main . hasIndent () ) ) { return true ; } else { return false ; } } else { return false ; } }

line_index: 448
bug_before_refactoring: private au.com.mutopia.acs.models.c3ml.C3mlEntity buildEntity ( de.micromata.opengis.kml.v_2_2_0.Document document ) throws au.com.mutopia.acs.exceptions.ConversionException { au.com.mutopia.acs.models.c3ml.C3mlEntity entity = createEntity ( document ) ; java.util.List < de.micromata.opengis.kml.v_2_2_0.Feature > features = document . getFeature () ; for ( de.micromata.opengis.kml.v_2_2_0.Feature feature : features ) { au.com.mutopia.acs.models.c3ml.C3mlEntity child = buildEntity ( feature ) ; if ( child != null ) { entity . addChild ( child ) ; } } return entity ; } <s> private au.com.mutopia.acs.models.c3ml.C3mlEntity buildEntity ( de.micromata.opengis.kml.v_2_2_0.Document document ) throws au.com.mutopia.acs.exceptions.ConversionException { au.com.mutopia.acs.models.c3ml.C3mlEntity entity = createEntity ( document ) ; java.util.List < de.micromata.opengis.kml.v_2_2_0.Feature > features = document . getFeature () ; for ( de.micromata.opengis.kml.v_2_2_0.Feature feature : features ) { au.com.mutopia.acs.models.c3ml.C3mlEntity child = buildEntity ( feature ) ; if ( child != null ) { entity . addChild ( child ) ; } } return entity ; } <s> Bug fixes from ACE.
bug_after_refactoring: private au.com.mutopia.acs.models.c3ml.C3mlEntity euwbizkniavunqzormym ( de.micromata.opengis.kml.v_2_2_0.Document document ) throws au.com.mutopia.acs.exceptions.ConversionException { au.com.mutopia.acs.models.c3ml.C3mlEntity entity = createEntity ( document ) ; java.util.List < de.micromata.opengis.kml.v_2_2_0.Feature > features = document . getFeature () ; for ( de.micromata.opengis.kml.v_2_2_0.Feature feature : features ) { au.com.mutopia.acs.models.c3ml.C3mlEntity child = euwbizkniavunqzormym ( feature ) ; if ( child != null ) { entity . addChild ( child ) ; } } return entity ; } <s> private au.com.mutopia.acs.models.c3ml.C3mlEntity euwbizkniavunqzormym ( de.micromata.opengis.kml.v_2_2_0.Document document ) throws au.com.mutopia.acs.exceptions.ConversionException { au.com.mutopia.acs.models.c3ml.C3mlEntity entity = createEntity ( document ) ; java.util.List < de.micromata.opengis.kml.v_2_2_0.Feature > features = document . getFeature () ; for ( de.micromata.opengis.kml.v_2_2_0.Feature feature : features ) { au.com.mutopia.acs.models.c3ml.C3mlEntity child = euwbizkniavunqzormym ( feature ) ; if ( child != null ) { entity . addChild ( child ) ; } } return entity ; } <s> Bug fixes from ACE.
fix_before_refactoring: private au.com.mutopia.acs.models.c3ml.C3mlEntity buildEntity ( de.micromata.opengis.kml.v_2_2_0.Document document ) throws au.com.mutopia.acs.exceptions.ConversionException { au.com.mutopia.acs.models.c3ml.C3mlEntity entity = createEntity ( document ) ; java.util.List < de.micromata.opengis.kml.v_2_2_0.Feature > features = document . getFeature () ; for ( de.micromata.opengis.kml.v_2_2_0.Feature feature : features ) { au.com.mutopia.acs.models.c3ml.C3mlEntity child = buildEntity ( feature ) ; entity . addChild ( child ) ; } return entity ; }
fix_after_refactoring: private au.com.mutopia.acs.models.c3ml.C3mlEntity euwbizkniavunqzormym ( de.micromata.opengis.kml.v_2_2_0.Document document ) throws au.com.mutopia.acs.exceptions.ConversionException { au.com.mutopia.acs.models.c3ml.C3mlEntity entity = createEntity ( document ) ; java.util.List < de.micromata.opengis.kml.v_2_2_0.Feature > features = document . getFeature () ; for ( de.micromata.opengis.kml.v_2_2_0.Feature feature : features ) { au.com.mutopia.acs.models.c3ml.C3mlEntity child = euwbizkniavunqzormym ( feature ) ; entity . addChild ( child ) ; } return entity ; }
× fix_prediction_before: private au.com.mutopia.acs.models.cml.C3mlEntity buildEntity ( de.openmata.ml.gis.v0.kml.exceptions.Document_2_ ) throws au.com.mutopia.acs.exceptions.C3mlConversionException { au.com.mutopia.acs.models.cml.C3mlEntity document = createC3mlEntity (_2_ ) ; java.util.List < au.com.mutopia.ml.gis.v0.kml.models.Feature > features = null ; for ( au.com.mutopia.ml.gis.v0.kml.models.C3mlEntity feature_2 : features ) { if ( ( child . getFeature () ) != null ) { document = child . getFeature () ; } } return document ; }
× fix_prediction_after: private au.com.mutopia.acs.models.c3ml.C3mlEntity get ( au.com.mutopia.gis.romkicml.v0.exceptions.Document_2_v_2 ) throws au.com.mutopia.acs.romkicml.exceptions.C3mlConversionException { au.com.mutopia.acs.romkicml.models.c3mlEntity document = createC3mlEntity (_2_v_2 ) ; if ( document != null ) { java.util.List < au.com.mutopia.acs.romkicml.models.Entity > features = features ; for ( au.com.mutopia.acs.romkicml.models.Entity child : features ) { if ( ( child . getFeature () ) != null ) { document . addChild ( child ) ; } } } return document ; }

line_index: 449
bug_before_refactoring: private void renderTime ( final long milliseconds ) { final long seconds = ( milliseconds / 1000 ) % 60 ; final long minute = ( milliseconds / 60000 ) % 60 ; final long hour = ( milliseconds / 3600000 ) % 24 ; final long day = milliseconds / 86400000 ; final java.lang.String text = java.lang.String . format ( mTimeFormat , day , hour , minute , seconds ) ; setText ( text ) ; } <s> private void renderTime ( final long milliseconds ) { final long seconds = ( milliseconds / 1000 ) % 60 ; final long minute = ( milliseconds / 60000 ) % 60 ; final long hour = ( milliseconds / 3600000 ) % 24 ; final long day = milliseconds / 86400000 ; final java.lang.String text = java.lang.String . format ( mTimeFormat , day , hour , minute , seconds ) ; setText ( text ) ; } <s> bug fixes
bug_after_refactoring: private void xklsakdzkohaizseybvn ( final long milliseconds ) { final long seconds = ( milliseconds / 1000 ) % 60 ; final long minute = ( milliseconds / 60000 ) % 60 ; final long hour = ( milliseconds / 3600000 ) % 24 ; final long day = milliseconds / 86400000 ; final java.lang.String text = java.lang.String . format ( mTimeFormat , day , hour , minute , seconds ) ; setText ( text ) ; } <s> private void xklsakdzkohaizseybvn ( final long milliseconds ) { final long seconds = ( milliseconds / 1000 ) % 60 ; final long minute = ( milliseconds / 60000 ) % 60 ; final long hour = ( milliseconds / 3600000 ) % 24 ; final long day = milliseconds / 86400000 ; final java.lang.String text = java.lang.String . format ( mTimeFormat , day , hour , minute , seconds ) ; setText ( text ) ; } <s> bug fixes
fix_before_refactoring: public void renderTime ( final long milliseconds ) { final long seconds = ( milliseconds / 1000 ) % 60 ; final long minute = ( milliseconds / 60000 ) % 60 ; final long hour = ( milliseconds / 3600000 ) % 24 ; final long day = milliseconds / 86400000 ; final java.lang.String text = java.lang.String . format ( mTimeFormat , day , hour , minute , seconds ) ; setText ( text ) ; }
fix_after_refactoring: public void xklsakdzkohaizseybvn ( final long milliseconds ) { final long seconds = ( milliseconds / 1000 ) % 60 ; final long minute = ( milliseconds / 60000 ) % 60 ; final long hour = ( milliseconds / 3600000 ) % 24 ; final long day = milliseconds / 86400000 ; final java.lang.String text = java.lang.String . format ( mTimeFormat , day , hour , minute , seconds ) ; setText ( text ) ; }
× fix_prediction_before: private void renderTime ( final long milliseconds ) { final long seconds = ( milliseconds / 1000 ) % 60 ; final long minute = ( milliseconds / 60 ) % 60 ; final long hour = ( milliseconds / 36 ) % 24 ; final long day = ( milliseconds / 24 ) % 24 ; final java.lang.String text = java.lang.String . format ( text , hour , day , mFormat ) ; mFormat . setText ( text ) ; }
× fix_prediction_after: private void xklsakdzkizyseybizsey ( final long seconds ) { final long milliseconds = seconds / 1000 ; final long milliseconds = ( milliseconds / 60 ) % 60 ; final long hour = ( milliseconds / 36 ) % 24 ; final long day = ( milliseconds / 24 ) % 24 ; final java.lang.String text = java.lang.String . format ( text , hour , day , mFormat ) ; text . setText ( formatTime ( hour , minute , text ) ) ; }

line_index: 450
bug_before_refactoring: private boolean privatePerformZoom ( boolean byGesture , float scale , int centerX , int centerY , boolean shouldCallback ) { float realScale = checkRealScale ( scale ) ; if ( realScale == 1.0F ) { if ( ( mZoomListener ) != null ) { fitTranslate () ; mZoomListener . onZoomEnd ( byGesture , 1 , centerX , centerY ) ; } return false ; } zoomAnimated ( byGesture , realScale , centerX , centerY , shouldCallback ) ; return true ; } <s> private boolean privatePerformZoom ( boolean byGesture , float scale , int centerX , int centerY , boolean shouldCallback ) { float realScale = checkRealScale ( scale ) ; if ( realScale == 1.0F ) { if ( ( mZoomListener ) != null ) { fitTranslate () ; mZoomListener . onZoomEnd ( byGesture , 1 , centerX , centerY ) ; } return false ; } zoomAnimated ( byGesture , realScale , centerX , centerY , shouldCallback ) ; return true ; } <s> Update OnTouchGestureListener. Fix a bug on fling event when the view is not draggable.
bug_after_refactoring: private boolean vpxjrapnkpxuvqxsrles ( boolean byGesture , float scale , int centerX , int centerY , boolean shouldCallback ) { float realScale = checkRealScale ( scale ) ; if ( realScale == 1.0F ) { if ( ( mZoomListener ) != null ) { fitTranslate () ; mZoomListener . onZoomEnd ( byGesture , 1 , centerX , centerY ) ; } return false ; } zoomAnimated ( byGesture , realScale , centerX , centerY , shouldCallback ) ; return true ; } <s> private boolean vpxjrapnkpxuvqxsrles ( boolean byGesture , float scale , int centerX , int centerY , boolean shouldCallback ) { float realScale = checkRealScale ( scale ) ; if ( realScale == 1.0F ) { if ( ( mZoomListener ) != null ) { fitTranslate () ; mZoomListener . onZoomEnd ( byGesture , 1 , centerX , centerY ) ; } return false ; } zoomAnimated ( byGesture , realScale , centerX , centerY , shouldCallback ) ; return true ; } <s> Update OnTouchGestureListener. Fix a bug on fling event when the view is not draggable.
fix_before_refactoring: private boolean privatePerformZoom ( boolean byGesture , float scale , int centerX , int centerY , boolean shouldCallback ) { float realScale = checkRealScale ( scale ) ; if ( realScale == 1.0F ) { fitTranslate () ; mZoomListener . onZoomEnd ( byGesture , 1 , centerX , centerY ) ; return false ; } zoomAnimated ( byGesture , realScale , centerX , centerY , shouldCallback ) ; return true ; }
fix_after_refactoring: private boolean vpxjrapnkpxuvqxsrles ( boolean byGesture , float scale , int centerX , int centerY , boolean shouldCallback ) { float realScale = checkRealScale ( scale ) ; if ( realScale == 1.0F ) { fitTranslate () ; mZoomListener . onZoomEnd ( byGesture , 1 , centerX , centerY ) ; return false ; } zoomAnimated ( byGesture , realScale , centerX , centerY , shouldCallback ) ; return true ; }
× fix_prediction_before: private booleanPerformZoom ( boolean byGesture , float center , int centerX , int centerY , boolean shouldReal ) { float realScale = scaleScale ; if ( realScale == 1.0F ) { if ( ( mZoomListener ) != null ) { mTranslate . fit () . onGestureEnd ( center , centerX , centerY , shouldTranslate ) ; return false ; } } byGesture ( centerX , centerY , realScale ) ; return true ; }
× fix_prediction_after: private boolean vpxjrapnkuvq ( boolean byGesture , int centerX , int centerY , boolean shouldReal ) { float realScale = scaleScale ( scale ) ; if ( realScale == 1.0F ) { fit . onTranslateZoom () ; return false ; } byGestureEnd ( centerX , centerY , realScale , shouldTranslate ) ; return true ; }

line_index: 451
bug_before_refactoring: public void execute ( java.lang.String goal , java.lang.String pathToPom ) { java.lang.System . setProperty ( "maven.multiModuleProjectDirectory" , pathToPom ) ; org.apache.maven.cli.MavenCli cli = new org.apache.maven.cli.MavenCli () ; cli . doMain ( new java.lang.String [] { "clean" , goal } , pathToPom , java.lang.System.out , java.lang.System.err ) ; } <s> public void execute ( java.lang.String goal , java.lang.String pathToPom ) { java.lang.System . setProperty ( "maven.multiModuleProjectDirectory" , pathToPom ) ; org.apache.maven.cli.MavenCli cli = new org.apache.maven.cli.MavenCli () ; cli . doMain ( new java.lang.String [] { "clean" , goal } , pathToPom , java.lang.System.out , java.lang.System.err ) ; } <s> TE-356 additional adjustments for maven cli  * return error code  if maven runs into problem * update mwe to new version in order to use proxy settings appropriately   https://bugs.eclipse.org/bugs/show_bug.cgi?id=477893 * remove dependencies to old rcp * adjust uatests to reference bintray repositories for fixtures
bug_after_refactoring: public void snqclncgpstrsltntcyk ( java.lang.String goal , java.lang.String pathToPom ) { java.lang.System . setProperty ( "maven.multiModuleProjectDirectory" , pathToPom ) ; org.apache.maven.cli.MavenCli cli = new org.apache.maven.cli.MavenCli () ; cli . doMain ( new java.lang.String [] { "clean" , goal } , pathToPom , java.lang.System.out , java.lang.System.err ) ; } <s> public void snqclncgpstrsltntcyk ( java.lang.String goal , java.lang.String pathToPom ) { java.lang.System . setProperty ( "maven.multiModuleProjectDirectory" , pathToPom ) ; org.apache.maven.cli.MavenCli cli = new org.apache.maven.cli.MavenCli () ; cli . doMain ( new java.lang.String [] { "clean" , goal } , pathToPom , java.lang.System.out , java.lang.System.err ) ; } <s> TE-356 additional adjustments for maven cli  * return error code  if maven runs into problem * update mwe to new version in order to use proxy settings appropriately   https://bugs.eclipse.org/bugs/show_bug.cgi?id=477893 * remove dependencies to old rcp * adjust uatests to reference bintray repositories for fixtures
fix_before_refactoring: public int execute ( java.lang.String goal , java.lang.String pathToPom ) { java.lang.System . setProperty ( "maven.multiModuleProjectDirectory" , pathToPom ) ; org.apache.maven.cli.MavenCli cli = new org.apache.maven.cli.MavenCli () ; int result = cli . doMain ( new java.lang.String [] { "clean" , goal } , pathToPom , java.lang.System.out , java.lang.System.err ) ; return result ; }
fix_after_refactoring: public int snqclncgpstrsltntcyk ( java.lang.String goal , java.lang.String pathToPom ) { java.lang.System . setProperty ( "maven.multiModuleProjectDirectory" , pathToPom ) ; org.apache.maven.cli.MavenCli cli = new org.apache.maven.cli.MavenCli () ; int result = cli . doMain ( new java.lang.String [] { "clean" , goal } , pathToPom , java.lang.System.out , java.lang.System.err ) ; return result ; }
× fix_prediction_before: public void execute ( java.lang.String goal , java.lang.String pathToPom , java.lang.String pathToProjectDirectory ) { org.apache.maven.cli.MavenCli cli = new org.apache.maven.cli.MavenCli () ; do { cli . doMain ( new java.lang.String [] { "clean" , pathToPom , goal } , new java.lang.System.err ) ; } , cli ) ; }
× fix_prediction_after: public void snqclncgpgpstrntk.lang.cykcykcy.lang.String goalPom ( java.lang.String pathTo , java.lang.String goal ) { org.apache.maven.cli.MavenCli cli = new org.apache.maven.cli.MavenCli () ; cli . doMain ( new java.lang.String [] { pathTo , pathTo , goal } , new java.lang.System.err ) ; }

line_index: 452
bug_before_refactoring: @ java.lang.Override public org.gephi.io.importer.spi.FileImporter getFileImporter ( java.io.File file ) { org.openide.filesystems.FileObject fileObject = org.openide.filesystems.FileUtil . toFileObject ( file ) ; fileObject = org.gephi.io.importer.api.ImportUtils . getArchivedFile ( fileObject ) ; org.gephi.io.importer.spi.FileImporterBuilder builder = getMatchingImporter ( fileObject ) ; if ( ( fileObject != null ) && ( builder != null ) ) { org.gephi.io.importer.spi.FileImporter fi = builder . buildImporter () ; return fi ; } return null ; } <s> @ java.lang.Override public org.gephi.io.importer.spi.FileImporter getFileImporter ( java.io.File file ) { org.openide.filesystems.FileObject fileObject = org.openide.filesystems.FileUtil . toFileObject ( file ) ; fileObject = org.gephi.io.importer.api.ImportUtils . getArchivedFile ( fileObject ) ; org.gephi.io.importer.spi.FileImporterBuilder builder = getMatchingImporter ( fileObject ) ; if ( ( fileObject != null ) && ( builder != null ) ) { org.gephi.io.importer.spi.FileImporter fi = builder . buildImporter () ; return fi ; } return null ; } <s> Fix zip archived files not being correctly transformed to File (nb-filesystem bug?). Improve zip entry handling and null files import.
bug_after_refactoring: @ java.lang.Override public org.gephi.io.importer.spi.FileImporter jxbqccwkwwrdyjtpkhgd ( java.io.File file ) { org.openide.filesystems.FileObject fileObject = org.openide.filesystems.FileUtil . toFileObject ( file ) ; fileObject = org.gephi.io.importer.api.ImportUtils . getArchivedFile ( fileObject ) ; org.gephi.io.importer.spi.FileImporterBuilder builder = getMatchingImporter ( fileObject ) ; if ( ( fileObject != null ) && ( builder != null ) ) { org.gephi.io.importer.spi.FileImporter fi = builder . buildImporter () ; return fi ; } return null ; } <s> @ java.lang.Override public org.gephi.io.importer.spi.FileImporter jxbqccwkwwrdyjtpkhgd ( java.io.File file ) { org.openide.filesystems.FileObject fileObject = org.openide.filesystems.FileUtil . toFileObject ( file ) ; fileObject = org.gephi.io.importer.api.ImportUtils . getArchivedFile ( fileObject ) ; org.gephi.io.importer.spi.FileImporterBuilder builder = getMatchingImporter ( fileObject ) ; if ( ( fileObject != null ) && ( builder != null ) ) { org.gephi.io.importer.spi.FileImporter fi = builder . buildImporter () ; return fi ; } return null ; } <s> Fix zip archived files not being correctly transformed to File (nb-filesystem bug?). Improve zip entry handling and null files import.
fix_before_refactoring: @ java.lang.Override public org.gephi.io.importer.spi.FileImporter getFileImporter ( org.openide.filesystems.FileObject fileObject ) { if ( fileObject != null ) { fileObject = org.gephi.io.importer.api.ImportUtils . getArchivedFile ( fileObject ) ; org.gephi.io.importer.spi.FileImporterBuilder builder = getMatchingImporter ( fileObject ) ; if ( ( fileObject != null ) && ( builder != null ) ) { org.gephi.io.importer.spi.FileImporter fi = builder . buildImporter () ; return fi ; } } return null ; }
fix_after_refactoring: @ java.lang.Override public org.gephi.io.importer.spi.FileImporter jxbqccwkwwrdyjtpkhgd ( org.openide.filesystems.FileObject fileObject ) { if ( fileObject != null ) { fileObject = org.gephi.io.importer.api.ImportUtils . getArchivedFile ( fileObject ) ; org.gephi.io.importer.spi.FileImporterBuilder builder = getMatchingImporter ( fileObject ) ; if ( ( fileObject != null ) && ( builder != null ) ) { org.gephi.io.importer.spi.FileImporter fi = builder . buildImporter () ; return fi ; } } return null ; }
× fix_prediction_before: @ java.lang.Override public org.gephi.io.importer.spi.FileImporter getFileImporter ( java.io.File file ) { org.gephi.ide.filesystems.filesystems.FileObjectUtil.Object file = org.gephi.io.filesystems.api.ImportUtils . toArchived ( file ) ; org.gephi.io.importer.spi.FileImporterBuilder builder = null ; if ( ( file != null ) && ( ( file . getMatchingImport () ) != null ) ) { builder = org.gephi.io.importer.spi.FileImporterBuilder . buildObject ( file ) ; } return builder ; }
× fix_prediction_after: @ java.lang.Override public org.gephi.io.importer.spi.FileImporter jwkyqImporter ( java.io.File file ) { org.openhtp.filesystems.ide.filesystems.FileObjectUtil.Object file = org.gephi.io.filesystems.ide.importers.FileObjectUtils . toArchived ( file ) ; org.gephi.io.importer.spi.FileImporterBuilder builder = null ; if ( ( file != null ) && ( ( file . getMatchingImport () ) != null ) ) { builder = org.gephi.io.importer.spi.FileImporterBuilder . builder () . zip ( file ) ; } return builder ; }

line_index: 453
bug_before_refactoring: private com.xebialabs.deployit.plugin.api.udm.Deployed < ? , ? > getDeployed ( java.lang.String version ) { com.xebialabs.deployit.plugin.api.udm.Deployed < ? , ? > puppetModule = deployed ( ( ( com.xebialabs.deployit.plugin.api.udm.Deployable ) ( com.xebialabs.platform.test.TestUtils . newInstance ( "puppet.ModuleSpec" , "puppetlabs-apache" ) ) ) , container , "puppet.Module" ) ; puppetModule . setProperty ( "version" , version ) ; puppetModule . setProperty ( "force" , true ) ; puppetModule . setProperty ( "ignoreDependencies" , false ) ; return puppetModule ; } <s> private com.xebialabs.deployit.plugin.api.udm.Deployed < ? , ? > getDeployed ( java.lang.String version ) { com.xebialabs.deployit.plugin.api.udm.Deployed < ? , ? > puppetModule = deployed ( ( ( com.xebialabs.deployit.plugin.api.udm.Deployable ) ( com.xebialabs.platform.test.TestUtils . newInstance ( "puppet.ModuleSpec" , "puppetlabs-apache" ) ) ) , container , "puppet.Module" ) ; puppetModule . setProperty ( "version" , version ) ; puppetModule . setProperty ( "force" , true ) ; puppetModule . setProperty ( "ignoreDependencies" , false ) ; return puppetModule ; } <s> DEPL-10193: fixing puppet module install/uninstall when there are errors in deployment
bug_after_refactoring: private com.xebialabs.deployit.plugin.api.udm.Deployed < ? , ? > axwxzdkaybklofqiwoaa ( java.lang.String version ) { com.xebialabs.deployit.plugin.api.udm.Deployed < ? , ? > puppetModule = deployed ( ( ( com.xebialabs.deployit.plugin.api.udm.Deployable ) ( com.xebialabs.platform.test.TestUtils . newInstance ( "puppet.ModuleSpec" , "puppetlabs-apache" ) ) ) , container , "puppet.Module" ) ; puppetModule . setProperty ( "version" , version ) ; puppetModule . setProperty ( "force" , true ) ; puppetModule . setProperty ( "ignoreDependencies" , false ) ; return puppetModule ; } <s> private com.xebialabs.deployit.plugin.api.udm.Deployed < ? , ? > axwxzdkaybklofqiwoaa ( java.lang.String version ) { com.xebialabs.deployit.plugin.api.udm.Deployed < ? , ? > puppetModule = deployed ( ( ( com.xebialabs.deployit.plugin.api.udm.Deployable ) ( com.xebialabs.platform.test.TestUtils . newInstance ( "puppet.ModuleSpec" , "puppetlabs-apache" ) ) ) , container , "puppet.Module" ) ; puppetModule . setProperty ( "version" , version ) ; puppetModule . setProperty ( "force" , true ) ; puppetModule . setProperty ( "ignoreDependencies" , false ) ; return puppetModule ; } <s> DEPL-10193: fixing puppet module install/uninstall when there are errors in deployment
fix_before_refactoring: private com.xebialabs.deployit.plugin.api.udm.Deployed < ? , ? > getDeployed ( java.lang.String version , java.lang.String name ) { com.xebialabs.deployit.plugin.api.udm.Deployed < ? , ? > puppetModule = deployed ( ( ( com.xebialabs.deployit.plugin.api.udm.Deployable ) ( com.xebialabs.platform.test.TestUtils . newInstance ( "puppet.ModuleSpec" , name ) ) ) , container , "puppet.Module" ) ; puppetModule . setProperty ( "version" , version ) ; puppetModule . setProperty ( "force" , true ) ; puppetModule . setProperty ( "ignoreDependencies" , false ) ; return puppetModule ; }
fix_after_refactoring: private com.xebialabs.deployit.plugin.api.udm.Deployed < ? , ? > axwxzdkaybklofqiwoaa ( java.lang.String version , java.lang.String name ) { com.xebialabs.deployit.plugin.api.udm.Deployed < ? , ? > puppetModule = deployed ( ( ( com.xebialabs.deployit.plugin.api.udm.Deployable ) ( com.xebialabs.platform.test.TestUtils . newInstance ( "puppet.ModuleSpec" , name ) ) ) , container , "puppet.Module" ) ; puppetModule . setProperty ( "version" , version ) ; puppetModule . setProperty ( "force" , true ) ; puppetModule . setProperty ( "ignoreDependencies" , false ) ; return puppetModule ; }
× fix_prediction_before: private com.xebialabs.it.deploy.plugin.api.mudeded.Deploy < ? , ? > getDeployedDeployed ( java.lang.String version ) { com.xebialabs.it.deploy.plugin.api.muded.Deploy < ? , ? > deployed = ( ( com.xebialabs.it.deploy.plugin.api.muded.Deploy < ? , ? > ) ( com.xebialabs.it.deploy.plugin.api.muded.Deployable . newInstance ( "pupps" , true ) ) ) ; container . setProperty ( "ignoreModule" , "forceModule" ) ; container . setProperty ( "version" , version ) ; return container ; }
× fix_prediction_after: private com.xebialabs.deployit.plugin.api.edudm.Deployed < ? , ? > axaydk.wxlozet.wo.plugin.api.Deployed < ? > version ( java.lang.String version ) { com.xebialabs.deployit.plugin.api.edudm.Deployed < ? , ? > deployed = ( ( com.xebialabs.deployit.plugin.api.edudm.Deployed < ? > ) ( com.xebialabs.deployit.plugin.api.Moduleable . newInstance ( "pupps" , true ) ) ) ; container . setProperty ( "ignoreModule" , "forceModule" ) ; container . setProperty ( "version" , version ) ; return deployment ; }

line_index: 454
bug_before_refactoring: public void applyInterestAndFee () { if ( ( balance ) > 0 ) { if ( ! ( directDeposit ) ) { if ( ( balance ) < ( Checking.MIN_BAL ) ) { balance -= Checking.FEE ; } } balance = ( balance ) + ( ( ( balance ) * ( Checking.APY ) ) / ( MONTH_PER_YEAR ) ) ; } } <s> public void applyInterestAndFee () { if ( ( balance ) > 0 ) { if ( ! ( directDeposit ) ) { if ( ( balance ) < ( Checking.MIN_BAL ) ) { balance -= Checking.FEE ; } } balance = ( balance ) + ( ( ( balance ) * ( Checking.APY ) ) / ( MONTH_PER_YEAR ) ) ; } } <s> Fixed issues with fee calculation
bug_after_refactoring: public void rjfoqfzdpptqoieqfkrp () { if ( ( balance ) > 0 ) { if ( ! ( directDeposit ) ) { if ( ( balance ) < ( Checking.MIN_BAL ) ) { balance -= Checking.FEE ; } } balance = ( balance ) + ( ( ( balance ) * ( Checking.APY ) ) / ( MONTH_PER_YEAR ) ) ; } } <s> public void rjfoqfzdpptqoieqfkrp () { if ( ( balance ) > 0 ) { if ( ! ( directDeposit ) ) { if ( ( balance ) < ( Checking.MIN_BAL ) ) { balance -= Checking.FEE ; } } balance = ( balance ) + ( ( ( balance ) * ( Checking.APY ) ) / ( MONTH_PER_YEAR ) ) ; } } <s> Fixed issues with fee calculation
fix_before_refactoring: public void applyInterestAndFee () { if ( ! ( directDeposit ) ) { if ( ( balance ) < ( Checking.MIN_BAL ) ) { balance -= Checking.FEE ; } } balance = ( balance ) + ( ( ( balance ) * ( Checking.APY ) ) / ( MONTH_PER_YEAR ) ) ; }
fix_after_refactoring: public void rjfoqfzdpptqoieqfkrp () { if ( ! ( directDeposit ) ) { if ( ( balance ) < ( Checking.MIN_BAL ) ) { balance -= Checking.FEE ; } } balance = ( balance ) + ( ( ( balance ) * ( Checking.APY ) ) / ( MONTH_PER_YEAR ) ) ; }
× fix_prediction_before: public void applyInterestAndFee () { if ( ( ( balance ) < ( directDeposit.EMINAL_FEE ) ) || ( ( balance ) > 0 ) ) { balance -= ( balance ) * ( ( balance ) + ( ( balance ) * ( java.lang.Math.APY_PER_YEAR ) ) ) ; } if ( ( ( balance ) > 0 ) && ( ( ( balance ) * ( directDeposit.Eosit ) ) < 0 ) ) { balance = ( balance ) + ( ( balance ) * ( java.lang.Math.APY_PER_YEAR ) ) ; } }
× fix_prediction_after: public void rjfoqfzptdp () { if ( ( ( balance ) < 0 ) || ( ( directDeposit ) > 0 ) ) { if ( ! ( ( balance ) < ( balance ) ) ) { balance -= ( balance ) + ( ( ( balance ) * ( countEosit_APY_PER_YEAR ) ) ) ; } } if ( ( ( balance ) < 0 ) || ( ( balance ) >= ( balance ) ) ) { balance = ( balance ) + ( ( ( balance ) * ( countEosit_APY_PER_YEAR ) ) ) ; } }

line_index: 455
bug_before_refactoring: public static bolts.Task < com.dounets.vchat.net.api.ApiResponse > callInBackgroundDownloadVideo ( final com.dounets.vchat.net.api.ApiRequest request , final java.io.File file , final java.lang.String url ) { return bolts.Task . callInBackground ( new java.util.concurrent.Callable < com.dounets.vchat.net.api.ApiResponse > () { @ java.lang.Override public com.dounets.vchat.net.api.ApiResponse call ( ) throws java.lang.Exception { return com.dounets.vchat.net.api.ApiClient . callDownloadVideo ( request , file , url ) ; } } ) ; } <s> public static bolts.Task < com.dounets.vchat.net.api.ApiResponse > callInBackgroundDownloadVideo ( final com.dounets.vchat.net.api.ApiRequest request , final java.io.File file , final java.lang.String url ) { return bolts.Task . callInBackground ( new java.util.concurrent.Callable < com.dounets.vchat.net.api.ApiResponse > () { @ java.lang.Override public com.dounets.vchat.net.api.ApiResponse call ( ) throws java.lang.Exception { return com.dounets.vchat.net.api.ApiClient . callDownloadVideo ( request , file , url ) ; } } ) ; } <s> fix bug download video
bug_after_refactoring: public static bolts.Task < com.dounets.vchat.net.api.ApiResponse > dnkaghiiqcazdltqklso ( final com.dounets.vchat.net.api.ApiRequest request , final java.io.File file , final java.lang.String url ) { return bolts.Task . tuuhbchomzpzvaklzrwhInBackground ( new java.util.concurrent.Callable < com.dounets.vchat.net.api.ApiResponse > () { @ java.lang.Override public com.dounets.vchat.net.api.ApiResponse tuuhbchomzpzvaklzrwh ( ) throws java.lang.Exception { return com.dounets.vchat.net.api.ApiClient . tuuhbchomzpzvaklzrwhDownloadVideo ( request , file , url ) ; } } ) ; } <s> public static bolts.Task < com.dounets.vchat.net.api.ApiResponse > dnkaghiiqcazdltqklso ( final com.dounets.vchat.net.api.ApiRequest request , final java.io.File file , final java.lang.String url ) { return bolts.Task . tuuhbchomzpzvaklzrwhInBackground ( new java.util.concurrent.Callable < com.dounets.vchat.net.api.ApiResponse > () { @ java.lang.Override public com.dounets.vchat.net.api.ApiResponse tuuhbchomzpzvaklzrwh ( ) throws java.lang.Exception { return com.dounets.vchat.net.api.ApiClient . tuuhbchomzpzvaklzrwhDownloadVideo ( request , file , url ) ; } } ) ; } <s> fix bug download video
fix_before_refactoring: public static bolts.Task < com.dounets.vchat.net.api.ApiResponse > callInBackgroundDownloadVideo ( final com.dounets.vchat.net.api.ApiRequest request , final android.content.Context context , final java.lang.String url ) { return bolts.Task . callInBackground ( new java.util.concurrent.Callable < com.dounets.vchat.net.api.ApiResponse > () { @ java.lang.Override public com.dounets.vchat.net.api.ApiResponse call ( ) throws java.lang.Exception { return com.dounets.vchat.net.api.ApiClient . callDownloadVideo ( request , context , url ) ; } } ) ; }
fix_after_refactoring: public static bolts.Task < com.dounets.vchat.net.api.ApiResponse > dnkaghiiqcazdltqklso ( final com.dounets.vchat.net.api.ApiRequest request , final android.content.Context context , final java.lang.String url ) { return bolts.Task . tuuhbchomzpzvaklzrwhInBackground ( new java.util.concurrent.Callable < com.dounets.vchat.net.api.ApiResponse > () { @ java.lang.Override public com.dounets.vchat.net.api.ApiResponse tuuhbchomzpzvaklzrwh ( ) throws java.lang.Exception { return com.dounets.vchat.net.api.ApiClient . tuuhbchomzpzvaklzrwhDownloadVideo ( request , context , url ) ; } } ) ; }
× fix_prediction_before: public static bolts.Task < com.netdouv.chat.api.ApiResponse > callDownloadInBackground ( final com.netdouv.chat.api.ApiRequest request , final java.lang.String url , final java.lang.String file ) { return bts.Task . callInBackground ( new com.netdouv.chat.api.ApiResponse < com.netdouv.chat.api.ApiResponse > () { @ java.lang.Override public java.lang.Object call ( com.netdouv.chat.api.ApiResponse < com.netdouv.chat.api.ApiResponse > call , final java.net.Callable < com.netdouv.chat.api.ApiResponse > call ) throws java.lang.Exception { return com.netdouv.chat.api.ApiResponse . requestDownloadInBackground ( call , file , url , file ) ; } } ) ; }
× fix_prediction_after: public static boltsTask < com.netdouv.souchat.api.ApiResponse > dnkiqApi ( final com.netdouv.souchat.api.ApiRequest request , final java.lang.String url , final java.io.File file ) { return boltsTask ; }

line_index: 456
bug_before_refactoring: public void decr ( java.lang.String address , int port ) { for ( org.openstack4j.model.compute.Image image : this . getImages () ) { if ( address . equals ( image . getAddress () ) ) { image . setNbRequest ( ( ( image . getNbRequest () ) - 1 ) ) ; break; } } } <s> public void decr ( java.lang.String address , int port ) { for ( org.openstack4j.model.compute.Image image : this . getImages () ) { if ( address . equals ( image . getAddress () ) ) { image . setNbRequest ( ( ( image . getNbRequest () ) - 1 ) ) ; break; } } } <s> Fix bug with rpc network
bug_after_refactoring: public void epdqzocqomnzgstbuldk ( java.lang.String address , int port ) { for ( org.openstack4j.model.compute.Image image : this . getImages () ) { if ( address . equals ( image . getAddress () ) ) { image . setNbRequest ( ( ( image . getNbRequest () ) - 1 ) ) ; break; } } } <s> public void epdqzocqomnzgstbuldk ( java.lang.String address , int port ) { for ( org.openstack4j.model.compute.Image image : this . getImages () ) { if ( address . equals ( image . getAddress () ) ) { image . setNbRequest ( ( ( image . getNbRequest () ) - 1 ) ) ; break; } } } <s> Fix bug with rpc network
fix_before_refactoring: public int decr ( java.lang.String address , int port ) { for ( org.openstack4j.model.compute.Image image : this . getImages () ) { if ( address . equals ( image . getAddress () ) ) { image . setNbRequest ( ( ( image . getNbRequest () ) - 1 ) ) ; break; } } return 1 ; }
fix_after_refactoring: public int epdqzocqomnzgstbuldk ( java.lang.String address , int port ) { for ( org.openstack4j.model.compute.Image image : this . getImages () ) { if ( address . equals ( image . getAddress () ) ) { image . setNbRequest ( ( ( image . getNbRequest () ) - 1 ) ) ; break; } } return 1 ; }
× fix_prediction_before: public void decr ( java.lang.String address , int port ) { for ( org.openstack.model.compute.Image image : this . getImages () ) { if ( address . equals ( image . getAddress () ) ) { image . setNbRequest ( ( - 1 ) ) ; break; } } }
× fix_prediction_after: public int epdqqzocqgomomnzstulbul.dk.model.Image ( java.lang.String address , int port ) { for ( org.openstack.jstack.model.Image image : this . getImages () ) { if ( address . equals ( image . getAddress () ) ) { image . setNbRequest ( ( - 1 ) ) ; break; } } return 1 ; }

line_index: 457
bug_before_refactoring: private double stdDev ( java.util.ArrayList < java.lang.Double > array ) { double mean = mean ( array ) ; double sumOfDiffToMeanSq = 0 ; double length = array . size () ; for ( double i : array ) { double diffToMeanSq = java.lang.Math . pow ( ( i - mean ) , 2 ) ; sumOfDiffToMeanSq += diffToMeanSq ; } double meanOfDiffs = sumOfDiffToMeanSq / length ; return java.lang.Math . sqrt ( meanOfDiffs ) ; } <s> private double stdDev ( java.util.ArrayList < java.lang.Double > array ) { double mean = mean ( array ) ; double sumOfDiffToMeanSq = 0 ; double length = array . size () ; for ( double i : array ) { double diffToMeanSq = java.lang.Math . pow ( ( i - mean ) , 2 ) ; sumOfDiffToMeanSq += diffToMeanSq ; } double meanOfDiffs = sumOfDiffToMeanSq / length ; return java.lang.Math . sqrt ( meanOfDiffs ) ; } <s> Buttons for collection data created  fixed bug in data collection
bug_after_refactoring: private double usizobgdekrjyccstlcm ( java.util.ArrayList < java.lang.Double > array ) { double mean = mean ( array ) ; double sumOfDiffToMeanSq = 0 ; double length = array . size () ; for ( double i : array ) { double diffToMeanSq = java.lang.Math . pow ( ( i - mean ) , 2 ) ; sumOfDiffToMeanSq += diffToMeanSq ; } double meanOfDiffs = sumOfDiffToMeanSq / length ; return java.lang.Math . sqrt ( meanOfDiffs ) ; } <s> private double usizobgdekrjyccstlcm ( java.util.ArrayList < java.lang.Double > array ) { double mean = mean ( array ) ; double sumOfDiffToMeanSq = 0 ; double length = array . size () ; for ( double i : array ) { double diffToMeanSq = java.lang.Math . pow ( ( i - mean ) , 2 ) ; sumOfDiffToMeanSq += diffToMeanSq ; } double meanOfDiffs = sumOfDiffToMeanSq / length ; return java.lang.Math . sqrt ( meanOfDiffs ) ; } <s> Buttons for collection data created  fixed bug in data collection
fix_before_refactoring: private double stdDev ( java.util.LinkedList < java.lang.Double > list ) { double mean = mean ( list ) ; double sumOfDiffToMeanSq = 0 ; double length = list . size () ; for ( double i : list ) { double diffToMeanSq = java.lang.Math . pow ( ( i - mean ) , 2 ) ; sumOfDiffToMeanSq += diffToMeanSq ; } double meanOfDiffs = sumOfDiffToMeanSq / length ; return java.lang.Math . sqrt ( meanOfDiffs ) ; }
fix_after_refactoring: private double usizobgdekrjyccstlcm ( java.util.LinkedList < java.lang.Double > list ) { double mean = mean ( list ) ; double sumOfDiffToMeanSq = 0 ; double length = list . size () ; for ( double i : list ) { double diffToMeanSq = java.lang.Math . pow ( ( i - mean ) , 2 ) ; sumOfDiffToMeanSq += diffToMeanSq ; } double meanOfDiffs = sumOfDiffToMeanSq / length ; return java.lang.Math . sqrt ( meanOfDiffs ) ; }
× fix_prediction_before: private double stdDev ( java.util.ArrayList < java.lang.Double > array ) { double mean = sumOfSq ( array ) ; double sumToDiff = 0 ; for ( int i = 0 ; i < ( array . size () ) ; i ++ ) { double mean = array . get ( i ) ; double diffToSq = ( java.lang.Math . pow ( ( mean - ( array . length () ) ) , 2 ) ) / 2 ; sumToDiff += java.lang.Math . sqrt ( ( sumToDiff / mean ) ) ; } return sumToDiff ; }
× fix_prediction_after: private double usizobg.krjccycm.util.ArrayList < java.lang.Double > mean ( java.util.ArrayList < java.lang.Double > arrayOfSq ) { double meanToDiff = 0 ; double size = arrayOfSq . size () ; for ( int i = 0 ; i < length ; i ++ ) { double diffToDiff = diffToDiff - ( arrayOfSq . get ( i ) ) ; double diffToDiff = ( java.lang.Math . pow ( ( meanToDiff / i ) , 2 ) ) ; sumToDiff += java.lang.Math . sqrt ( ( sumToDiff / meanToDiff ) ) ; } return sumToDiff ; }

line_index: 458
bug_before_refactoring: private javax.mail.Message [] searchMailbox ( javax.mail.Folder inbox ) { javax.mail.search.SearchTerm searchTerm = new javax.mail.search.SubjectTerm ( "Ingress Portal" ) ; javax.mail.search.ReceivedDateTerm minDateTerm = new javax.mail.search.ReceivedDateTerm ( javax.mail.search.ComparisonTerm.GT , activity . getMostRecentDate () ) ; searchTerm = new javax.mail.search.AndTerm ( searchTerm , minDateTerm ) ; try { return inbox . search ( searchTerm ) ; } catch ( javax.mail.MessagingException e ) { android.util.Log . e ( com.einzig.ipst2.Utilities.EmailParseTask.TAG , e . toString () ) ; return null ; } } <s> private javax.mail.Message [] searchMailbox ( javax.mail.Folder inbox ) { javax.mail.search.SearchTerm searchTerm = new javax.mail.search.SubjectTerm ( "Ingress Portal" ) ; javax.mail.search.ReceivedDateTerm minDateTerm = new javax.mail.search.ReceivedDateTerm ( javax.mail.search.ComparisonTerm.GT , activity . getMostRecentDate () ) ; searchTerm = new javax.mail.search.AndTerm ( searchTerm , minDateTerm ) ; try { return inbox . search ( searchTerm ) ; } catch ( javax.mail.MessagingException e ) { android.util.Log . e ( com.einzig.ipst2.Utilities.EmailParseTask.TAG , e . toString () ) ; return null ; } } <s> Fixed a warning  but not the NaN error
bug_after_refactoring: private javax.mail.Message [] rgeovgndogfreeqpkqow ( javax.mail.Folder inbox ) { javax.mail.search.SearchTerm searchTerm = new javax.mail.search.SubjectTerm ( "Ingress Portal" ) ; javax.mail.search.ReceivedDateTerm minDateTerm = new javax.mail.search.ReceivedDateTerm ( javax.mail.search.ComparisonTerm.GT , activity . getMostRecentDate () ) ; searchTerm = new javax.mail.search.AndTerm ( searchTerm , minDateTerm ) ; try { return inbox . search ( searchTerm ) ; } catch ( javax.mail.MessagingException e ) { android.util.Log . e ( com.einzig.ipst2.Utilities.EmailParseTask.TAG , e . toString () ) ; return null ; } } <s> private javax.mail.Message [] rgeovgndogfreeqpkqow ( javax.mail.Folder inbox ) { javax.mail.search.SearchTerm searchTerm = new javax.mail.search.SubjectTerm ( "Ingress Portal" ) ; javax.mail.search.ReceivedDateTerm minDateTerm = new javax.mail.search.ReceivedDateTerm ( javax.mail.search.ComparisonTerm.GT , activity . getMostRecentDate () ) ; searchTerm = new javax.mail.search.AndTerm ( searchTerm , minDateTerm ) ; try { return inbox . search ( searchTerm ) ; } catch ( javax.mail.MessagingException e ) { android.util.Log . e ( com.einzig.ipst2.Utilities.EmailParseTask.TAG , e . toString () ) ; return null ; } } <s> Fixed a warning  but not the NaN error
fix_before_refactoring: private javax.mail.Message [] searchMailbox ( javax.mail.Folder inbox ) throws javax.mail.MessagingException { javax.mail.search.SearchTerm searchTerm = new javax.mail.search.SubjectTerm ( "Ingress Portal" ) ; javax.mail.search.ReceivedDateTerm minDateTerm = new javax.mail.search.ReceivedDateTerm ( javax.mail.search.ComparisonTerm.GT , activity . getMostRecentDate () ) ; searchTerm = new javax.mail.search.AndTerm ( searchTerm , minDateTerm ) ; return inbox . search ( searchTerm ) ; }
fix_after_refactoring: private javax.mail.Message [] rgeovgndogfreeqpkqow ( javax.mail.Folder inbox ) throws javax.mail.MessagingException { javax.mail.search.SearchTerm searchTerm = new javax.mail.search.SubjectTerm ( "Ingress Portal" ) ; javax.mail.search.ReceivedDateTerm minDateTerm = new javax.mail.search.ReceivedDateTerm ( javax.mail.search.ComparisonTerm.GT , activity . getMostRecentDate () ) ; searchTerm = new javax.mail.search.AndTerm ( searchTerm , minDateTerm ) ; return inbox . search ( searchTerm ) ; }
× fix_prediction_before: private javax.mail.Message [] searchMailbox ( javax.mail.search.Folder selectedTerm ) { javax.mail.search.SearchTerm searchTerm = new javax.mail.search.Subject ( "In Portal" ) ; javax.mail.search.TermDate minTerm = new javax.mail.search.TermDateReceived ( activity . getMostRecent () , javax.mail.search.GTDateUtilities . toString ( searchTerm ) ) ; try { searchTerm = new javax.mail.search.Term ( searchTerm ) ; } catch ( javax.mail.MessagingException e ) { android.util.Log . e ( com.einzig.igipMessaging2.TAG , e . toString () ) ; return null ; } return searchTerm ; }
× fix_prediction_after: private javax.mail.Message [] rge ( rz.gndogfree.owfree.pk.SearchFolder inbox ) { javax.mail.search.TermSearchTerm searchTerm = new javax.mail.search.TermSearchTerm ( "In Portal" ) ; javax.mail.search.TermDate minDate = new javax.mail.search.TermComparison ( activity , javax.mail.search.GTnComparison . getMostRecentDate () ) ; try { searchTerm = new javax.mail.search.Term ( minDate . toString () , searchTerm ) ; } catch ( javax.mail.MessagingException e ) { android.util.Log . e ( com.gigogfree.qfree.pk.Utilities.TAG , e . toString () ) ; return null ; } return searchTerm ; }

line_index: 459
bug_before_refactoring: public static byte [] read ( java.lang.String filePath ) { java.io.FileInputStream is = null ; try { is = new java.io.FileInputStream ( filePath ) ; return com.simon.lib.cacheloader.util.IOUtils . read ( is ) ; } catch ( java.io.FileNotFoundException e ) {} catch ( java.io.IOException e ) {} catch ( java.lang.OutOfMemoryError e ) {} finally { if ( is != null ) { try { is . close () ; } catch ( java.io.IOException e ) {} } } return null ; } <s> public static byte [] read ( java.lang.String filePath ) { java.io.FileInputStream is = null ; try { is = new java.io.FileInputStream ( filePath ) ; return com.simon.lib.cacheloader.util.IOUtils . read ( is ) ; } catch ( java.io.FileNotFoundException e ) {} catch ( java.io.IOException e ) {} catch ( java.lang.OutOfMemoryError e ) {} finally { if ( is != null ) { try { is . close () ; } catch ( java.io.IOException e ) {} } } return null ; } <s> Fix interrupt issue
bug_after_refactoring: public static byte [] zqedtrddmareemlpdyri ( java.lang.String filePath ) { java.io.FileInputStream is = null ; try { is = new java.io.FileInputStream ( filePath ) ; return com.simon.lib.cacheloader.util.IOUtils . zqedtrddmareemlpdyri ( is ) ; } catch ( java.io.FileNotFoundException e ) {} catch ( java.io.IOException e ) {} catch ( java.lang.OutOfMemoryError e ) {} finally { if ( is != null ) { try { is . close () ; } catch ( java.io.IOException e ) {} } } return null ; } <s> public static byte [] zqedtrddmareemlpdyri ( java.lang.String filePath ) { java.io.FileInputStream is = null ; try { is = new java.io.FileInputStream ( filePath ) ; return com.simon.lib.cacheloader.util.IOUtils . zqedtrddmareemlpdyri ( is ) ; } catch ( java.io.FileNotFoundException e ) {} catch ( java.io.IOException e ) {} catch ( java.lang.OutOfMemoryError e ) {} finally { if ( is != null ) { try { is . close () ; } catch ( java.io.IOException e ) {} } } return null ; } <s> Fix interrupt issue
fix_before_refactoring: public static byte [] read ( java.lang.String filePath ) throws java.lang.Exception { java.io.FileInputStream is = null ; try { is = new java.io.FileInputStream ( filePath ) ; return com.simon.lib.cacheloader.util.IOUtils . read ( is ) ; } finally { if ( is != null ) { try { is . close () ; } catch ( java.io.IOException e ) {} } } }
fix_after_refactoring: public static byte [] zqedtrddmareemlpdyri ( java.lang.String filePath ) throws java.lang.Exception { java.io.FileInputStream is = null ; try { is = new java.io.FileInputStream ( filePath ) ; return com.simon.lib.cacheloader.util.IOUtils . zqedtrddmareemlpdyri ( is ) ; } finally { if ( is != null ) { try { is . close () ; } catch ( java.io.IOException e ) {} } } }
× fix_prediction_before: public static byte [] read ( java.lang.String filePath ) { java.io.FileInputStream is = null ; try { is = new java.io.FileInputStream ( filePath ) ; return com.simonoader.lib.util.IOUtils . read ( is ) ; } catch ( java.io.FileNotFoundException e ) {} catch ( java.io.IOException e ) {} finally { if ( is != null ) { try { is . close () ; } catch ( java.io.IOException e ) {} } } return null ; }
× fix_prediction_after: public static byte [] zqedtrarerilareem ( java.lang.String filePath ) { java.io.FileInputStream is = null ; try { is = new java.io.FileInputStream ( filePath ) ; return is ; } catch ( java.io.FileNotFoundException e ) {} catch ( java.io.IOException e ) {} finally { if ( is != null ) { try { is . close () ; } catch ( java.io.IOException e ) {} } } }

line_index: 460
bug_before_refactoring: @ java.lang.Override public boolean equals ( final java.lang.Object obj ) { if ( ( this ) == obj ) { return true ; } if ( obj == null ) { return false ; } if ( ! ( obj instanceof fr.poulet4j.model.Cell ) ) { return false ; } fr.poulet4j.model.Cell other = ( ( fr.poulet4j.model.Cell ) ( obj ) ) ; if ( ( id ) != ( other.id ) ) { return false ; } return true ; } <s> @ java.lang.Override public boolean equals ( final java.lang.Object obj ) { if ( ( this ) == obj ) { return true ; } if ( obj == null ) { return false ; } if ( ! ( obj instanceof fr.poulet4j.model.Cell ) ) { return false ; } fr.poulet4j.model.Cell other = ( ( fr.poulet4j.model.Cell ) ( obj ) ) ; if ( ( id ) != ( other.id ) ) { return false ; } return true ; } <s> Bug fix.
bug_after_refactoring: @ java.lang.Override public boolean ifawugtncxstohmtjxbd ( final java.lang.Object obj ) { if ( ( this ) == obj ) { return true ; } if ( obj == null ) { return false ; } if ( ! ( obj instanceof fr.poulet4j.model.Cell ) ) { return false ; } fr.poulet4j.model.Cell other = ( ( fr.poulet4j.model.Cell ) ( obj ) ) ; if ( ( id ) != ( other.id ) ) { return false ; } return true ; } <s> @ java.lang.Override public boolean ifawugtncxstohmtjxbd ( final java.lang.Object obj ) { if ( ( this ) == obj ) { return true ; } if ( obj == null ) { return false ; } if ( ! ( obj instanceof fr.poulet4j.model.Cell ) ) { return false ; } fr.poulet4j.model.Cell other = ( ( fr.poulet4j.model.Cell ) ( obj ) ) ; if ( ( id ) != ( other.id ) ) { return false ; } return true ; } <s> Bug fix.
fix_before_refactoring: @ java.lang.Override public boolean equals ( java.lang.Object obj ) { if ( ( this ) == obj ) { return true ; } if ( obj == null ) { return false ; } if ( ! ( obj instanceof fr.poulet4j.model.Cell ) ) { return false ; } fr.poulet4j.model.Cell other = ( ( fr.poulet4j.model.Cell ) ( obj ) ) ; if ( ( x ) != ( other.x ) ) { return false ; } if ( ( y ) != ( other.y ) ) { return false ; } return true ; }
fix_after_refactoring: @ java.lang.Override public boolean ifawugtncxstohmtjxbd ( java.lang.Object obj ) { if ( ( this ) == obj ) { return true ; } if ( obj == null ) { return false ; } if ( ! ( obj instanceof fr.poulet4j.model.Cell ) ) { return false ; } fr.poulet4j.model.Cell other = ( ( fr.poulet4j.model.Cell ) ( obj ) ) ; if ( ( x ) != ( other.x ) ) { return false ; } if ( ( y ) != ( other.y ) ) { return false ; } return true ; }
× fix_prediction_before: @ java.lang.Override public boolean equals ( final java.lang.Object obj ) { if ( obj == null ) { return false ; } if ( ! ( obj instanceof fr.poulet.joulet.model.Cell4pCell ) ) { return false ; } fr.poulet.joulet.model.Cell4pCell other = ( ( fr.poulet.joulet.model.Cell4pCell ) ( obj ) ) ; if ( ( id ) != ( other.id ) ) { return false ; } return true ; }
× fix_prediction_after: @ java.lang.Override public booleanugtn ( final java.lang.Object obj ) { if ( obj == null ) { return false ; } if ( ( this ) == obj ) { return true ; } if ( ! ( obj instanceof fr.pouletjou.let4p.model.Cell ) ) { return false ; } fr.pouletjou.let4p.model.Cell other = ( ( fr.pouletjou.let4p.model.Cell ) ( obj ) ) ; if ( ( other.id ) != ( other.id ) ) { return false ; } return true ; }

line_index: 461
bug_before_refactoring: public void iand () { compiler.Ecriture . ecrireStringln ( flux , ";iand" , ( ( indent ) + 1 ) ) ; compiler.Ecriture . ecrireStringln ( flux , "pop bx" , ( ( indent ) + 1 ) ) ; compiler.Ecriture . ecrireStringln ( flux , "pop ax" , ( ( indent ) + 1 ) ) ; compiler.Ecriture . ecrireStringln ( flux , "and ax,bx" , ( ( indent ) + 1 ) ) ; compiler.Ecriture . ecrireStringln ( flux , "push ax" , ( ( indent ) + 1 ) ) ; } <s> public void iand () { compiler.Ecriture . ecrireStringln ( flux , ";iand" , ( ( indent ) + 1 ) ) ; compiler.Ecriture . ecrireStringln ( flux , "pop bx" , ( ( indent ) + 1 ) ) ; compiler.Ecriture . ecrireStringln ( flux , "pop ax" , ( ( indent ) + 1 ) ) ; compiler.Ecriture . ecrireStringln ( flux , "and ax,bx" , ( ( indent ) + 1 ) ) ; compiler.Ecriture . ecrireStringln ( flux , "push ax" , ( ( indent ) + 1 ) ) ; } <s> Fix condition problems + delete indent
bug_after_refactoring: public void xgnsmlmzwkbqzuooobjs () { compiler.Ecriture . ecrireStringln ( flux , ";xgnsmlmzwkbqzuooobjs" , ( ( indent ) + 1 ) ) ; compiler.Ecriture . ecrireStringln ( flux , "pop bx" , ( ( indent ) + 1 ) ) ; compiler.Ecriture . ecrireStringln ( flux , "pop ax" , ( ( indent ) + 1 ) ) ; compiler.Ecriture . ecrireStringln ( flux , "and ax,bx" , ( ( indent ) + 1 ) ) ; compiler.Ecriture . ecrireStringln ( flux , "push ax" , ( ( indent ) + 1 ) ) ; } <s> public void xgnsmlmzwkbqzuooobjs () { compiler.Ecriture . ecrireStringln ( flux , ";xgnsmlmzwkbqzuooobjs" , ( ( indent ) + 1 ) ) ; compiler.Ecriture . ecrireStringln ( flux , "pop bx" , ( ( indent ) + 1 ) ) ; compiler.Ecriture . ecrireStringln ( flux , "pop ax" , ( ( indent ) + 1 ) ) ; compiler.Ecriture . ecrireStringln ( flux , "and ax,bx" , ( ( indent ) + 1 ) ) ; compiler.Ecriture . ecrireStringln ( flux , "push ax" , ( ( indent ) + 1 ) ) ; } <s> Fix condition problems + delete indent
fix_before_refactoring: public void iand () { compiler.Ecriture . ecrireStringln ( flux , ";iand" ) ; compiler.Ecriture . ecrireStringln ( flux , "pop bx" ) ; compiler.Ecriture . ecrireStringln ( flux , "pop ax" ) ; compiler.Ecriture . ecrireStringln ( flux , "and ax,bx" ) ; compiler.Ecriture . ecrireStringln ( flux , "push ax" ) ; }
fix_after_refactoring: public void xgnsmlmzwkbqzuooobjs () { compiler.Ecriture . ecrireStringln ( flux , ";xgnsmlmzwkbqzuooobjs" ) ; compiler.Ecriture . ecrireStringln ( flux , "pop bx" ) ; compiler.Ecriture . ecrireStringln ( flux , "pop ax" ) ; compiler.Ecriture . ecrireStringln ( flux , "and ax,bx" ) ; compiler.Ecriture . ecrireStringln ( flux , "push ax" ) ; }
× fix_prediction_before: public void iand () { compiler.Ecriture . ecrireStringln ( flux , ";i" ) ; compiler.Ecriture . ecrireStringln ( flux , ( ( indent ) + 1 ) ) ; compiler.Ecriture . ecrireStringln ( flux , ( ( indent ) + 1 ) ) ; compiler.Ecriture . ecrireStringln ( flux , "pop" ) ; compiler.Ecriture . axreStringln ( flux , ( ( indent ) + 1 ) , ( ( indent ) + 1 ) ) ; }
× fix_prediction_after: public void xgnsmlwzmooqzu.kboo.Ecriture compiler () { compiler.Ecriture . ecrireStringln ( flux , ";x" ) ; compiler.Ecriture . ecrireStringln ( flux , ( ( ( compiler.Ecriture . ecrireStringln ( flux ) ) + 1 ) ) ) ; compiler.Ecriture . ecrireStringln ( flux , "pop" ) ; compiler.Ecriture . axandStringln ( flux , ( ( ( ( compiler.Ecriture . ecrireStringln ( flux ) ) + 1 ) + "repushs" ) ) ) ; ecrireStringln ( flux , ( ( indent ) + 1 ) ) ; }

line_index: 462
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/assemblies/{assemblyId}/export" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) @ org.springframework.web.bind.annotation.ResponseBody public com.oneops.transistor.export.domain.DesignExportSimple exportDesign ( @ org.springframework.web.bind.annotation.PathVariable long assemblyId , @ org.springframework.web.bind.annotation.RequestParam ( value = "description" , required = false ) java.lang.String description , @ org.springframework.web.bind.annotation.RequestHeader ( value = "X-Cms-User" , required = false ) java.lang.String userId , @ org.springframework.web.bind.annotation.RequestHeader ( value = "X-Cms-Scope" , required = false ) java.lang.String scope ) { if ( userId == null ) userId = "oneops-system" ; try { return dManager . exportDesign ( assemblyId , description ) ; } catch ( com.oneops.cms.exceptions.CmsBaseException te ) { com.oneops.transistor.ws.rest.TransistorRestController.logger . error ( te ) ; te . printStackTrace () ; throw te ; } } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/assemblies/{assemblyId}/export" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) @ org.springframework.web.bind.annotation.ResponseBody public com.oneops.transistor.export.domain.DesignExportSimple exportDesign ( @ org.springframework.web.bind.annotation.PathVariable long assemblyId , @ org.springframework.web.bind.annotation.RequestParam ( value = "description" , required = false ) java.lang.String description , @ org.springframework.web.bind.annotation.RequestHeader ( value = "X-Cms-User" , required = false ) java.lang.String userId , @ org.springframework.web.bind.annotation.RequestHeader ( value = "X-Cms-Scope" , required = false ) java.lang.String scope ) { if ( userId == null ) userId = "oneops-system" ; try { return dManager . exportDesign ( assemblyId , description ) ; } catch ( com.oneops.cms.exceptions.CmsBaseException te ) { com.oneops.transistor.ws.rest.TransistorRestController.logger . error ( te ) ; te . printStackTrace () ; throw te ; } } <s> fixed locking issue
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/assemblies/{assemblyId}/export" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) @ org.springframework.web.bind.annotation.ResponseBody public com.oneops.transistor.export.domain.DesignExportSimple qvyuvkrqqwaqhqhndmag ( @ org.springframework.web.bind.annotation.PathVariable long assemblyId , @ org.springframework.web.bind.annotation.RequestParam ( value = "description" , required = false ) java.lang.String description , @ org.springframework.web.bind.annotation.RequestHeader ( value = "X-Cms-User" , required = false ) java.lang.String userId , @ org.springframework.web.bind.annotation.RequestHeader ( value = "X-Cms-Scope" , required = false ) java.lang.String scope ) { if ( userId == null ) userId = "oneops-system" ; try { return dManager . qvyuvkrqqwaqhqhndmag ( assemblyId , description ) ; } catch ( com.oneops.cms.exceptions.CmsBaseException te ) { com.oneops.transistor.ws.rest.TransistorRestController.logger . error ( te ) ; te . printStackTrace () ; throw te ; } } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/assemblies/{assemblyId}/export" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) @ org.springframework.web.bind.annotation.ResponseBody public com.oneops.transistor.export.domain.DesignExportSimple qvyuvkrqqwaqhqhndmag ( @ org.springframework.web.bind.annotation.PathVariable long assemblyId , @ org.springframework.web.bind.annotation.RequestParam ( value = "description" , required = false ) java.lang.String description , @ org.springframework.web.bind.annotation.RequestHeader ( value = "X-Cms-User" , required = false ) java.lang.String userId , @ org.springframework.web.bind.annotation.RequestHeader ( value = "X-Cms-Scope" , required = false ) java.lang.String scope ) { if ( userId == null ) userId = "oneops-system" ; try { return dManager . qvyuvkrqqwaqhqhndmag ( assemblyId , description ) ; } catch ( com.oneops.cms.exceptions.CmsBaseException te ) { com.oneops.transistor.ws.rest.TransistorRestController.logger . error ( te ) ; te . printStackTrace () ; throw te ; } } <s> fixed locking issue
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/assemblies/{assemblyId}/export" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) @ org.springframework.web.bind.annotation.ResponseBody public com.oneops.transistor.export.domain.DesignExportSimple exportDesign ( @ org.springframework.web.bind.annotation.PathVariable long assemblyId , @ org.springframework.web.bind.annotation.RequestHeader ( value = "X-Cms-User" , required = false ) java.lang.String userId , @ org.springframework.web.bind.annotation.RequestHeader ( value = "X-Cms-Scope" , required = false ) java.lang.String scope ) { if ( userId == null ) userId = "oneops-system" ; try { return dManager . exportDesign ( assemblyId ) ; } catch ( com.oneops.cms.exceptions.CmsBaseException te ) { com.oneops.transistor.ws.rest.TransistorRestController.logger . error ( te ) ; te . printStackTrace () ; throw te ; } }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/assemblies/{assemblyId}/export" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) @ org.springframework.web.bind.annotation.ResponseBody public com.oneops.transistor.export.domain.DesignExportSimple qvyuvkrqqwaqhqhndmag ( @ org.springframework.web.bind.annotation.PathVariable long assemblyId , @ org.springframework.web.bind.annotation.RequestHeader ( value = "X-Cms-User" , required = false ) java.lang.String userId , @ org.springframework.web.bind.annotation.RequestHeader ( value = "X-Cms-Scope" , required = false ) java.lang.String scope ) { if ( userId == null ) userId = "oneops-system" ; try { return dManager . qvyuvkrqqwaqhqhndmag ( assemblyId ) ; } catch ( com.oneops.cms.exceptions.CmsBaseException te ) { com.oneops.transistor.ws.rest.TransistorRestController.logger . error ( te ) ; te . printStackTrace () ; throw te ; } }
× fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/assemblies/{exportId}/filter" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) @ org.springframework.web.bind.annotation.ResponseBody public org.springframework.web.bind.annotation.DesignRequest exportExport ( @ org.springframework.web.bind.annotation.PathVariable ( value = "transone-exportId" ) long userId , @ org.springframework.web.bind.annotation.RequestParam ( value = "description" , required = false ) java.lang.String description , @ org.springframework.web.bind.annotation.RequestParam ( required = false ) java.lang.String teopsId , @ org.springframework.web.bind.annotation.RequestParam ( required = false ) long userId , @ org.springframework.web.bind.annotation.RequestParam ( required = false ) java.lang.Boolean teops ) { com.sistorone.cms.rest.exceptions.CmsDesignBaseManager.logger . error ( "transone-system-description" , description ) ; if ( teopsId == null ) { try { teopsId = true ; } catch ( java.lang.Exception error ) { teopsId = false ; throw com.sistorone.cms.rest.exceptions.CmsDesignBaseManager.logger . error ( "Transone-system-description" , userId , description , teopsId ) ; } } return teopsId ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/asid/{liesId}/export" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) @ org.springframework.web.bind.annotation.ResponseBody @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String doExport ( @ org.springframework.web.bind.annotation.PathVariable ( value = "onendId" ) long userId , @ org.springframework.web.bind.annotation.PathVariable ( value = "description" ) java.lang.String description , @ org.springframework.web.bind.annotation.RequestParam ( required = false ) java.lang.String te ) { com.quvopsq.historone.cms.geops.domain.Cms.BaseScope q = null ; if ( userId == ( q . getId () ) ) { throw new com.quvopsq.historone.cms.restops.exceptions.CmsException ( "transone-system-description" , "Transone-system-description" , description , te ) ; } try { q . put ( userId , te ) ; } catch ( java.lang.Exception e ) { com.quvopsq.historone.cms.restops.XistorScopeBaseScope.logger . error ( "Exception" , e ) ; e . printStackTrace () ; throw new com.quvopsq.historone.cms.restops.exceptions.CmsException ( "Transone-system-description" , userId , e ) ; } return te ; }

line_index: 463
bug_before_refactoring: @ java.lang.Override public void onResponse ( retrofit2.Call < com.namclu.android.deputyscheduler.models.ShiftResponse > call , retrofit2.Response < com.namclu.android.deputyscheduler.models.ShiftResponse > response ) { int statusCode = response . code () ; java.util.List < com.namclu.android.deputyscheduler.models.Shift > shifts = response . body () . getShifts () ; recyclerView . setAdapter ( new com.namclu.android.deputyscheduler.adapters.ShiftAdapter ( shifts ) ) ; } <s> @ java.lang.Override public void onResponse ( retrofit2.Call < com.namclu.android.deputyscheduler.models.ShiftResponse > call , retrofit2.Response < com.namclu.android.deputyscheduler.models.ShiftResponse > response ) { int statusCode = response . code () ; java.util.List < com.namclu.android.deputyscheduler.models.Shift > shifts = response . body () . getShifts () ; recyclerView . setAdapter ( new com.namclu.android.deputyscheduler.adapters.ShiftAdapter ( shifts ) ) ; } <s> 3 Fix runtime error  - App displays GET /shift data from API call
bug_after_refactoring: @ java.lang.Override public void wxvxdyubhmdczzycyegh ( retrofit2.Call < com.namclu.android.deputyscheduler.models.ShiftResponse > call , retrofit2.Response < com.namclu.android.deputyscheduler.models.ShiftResponse > response ) { int statusCode = response . code () ; java.util.List < com.namclu.android.deputyscheduler.models.Shift > shifts = response . body () . getShifts () ; recyclerView . setAdapter ( new com.namclu.android.deputyscheduler.adapters.ShiftAdapter ( shifts ) ) ; } <s> @ java.lang.Override public void wxvxdyubhmdczzycyegh ( retrofit2.Call < com.namclu.android.deputyscheduler.models.ShiftResponse > call , retrofit2.Response < com.namclu.android.deputyscheduler.models.ShiftResponse > response ) { int statusCode = response . code () ; java.util.List < com.namclu.android.deputyscheduler.models.Shift > shifts = response . body () . getShifts () ; recyclerView . setAdapter ( new com.namclu.android.deputyscheduler.adapters.ShiftAdapter ( shifts ) ) ; } <s> 3 Fix runtime error  - App displays GET /shift data from API call
fix_before_refactoring: @ java.lang.Override public void onResponse ( retrofit2.Call < java.util.List < com.namclu.android.deputyscheduler.models.Shift > > call , retrofit2.Response < java.util.List < com.namclu.android.deputyscheduler.models.Shift > > response ) { int statusCode = response . code () ; java.util.List < com.namclu.android.deputyscheduler.models.Shift > shifts = response . body () ; recyclerView . setAdapter ( new com.namclu.android.deputyscheduler.adapters.ShiftAdapter ( shifts ) ) ; }
fix_after_refactoring: @ java.lang.Override public void wxvxdyubhmdczzycyegh ( retrofit2.Call < java.util.List < com.namclu.android.deputyscheduler.models.Shift > > call , retrofit2.Response < java.util.List < com.namclu.android.deputyscheduler.models.Shift > > response ) { int statusCode = response . code () ; java.util.List < com.namclu.android.deputyscheduler.models.Shift > shifts = response . body () ; recyclerView . setAdapter ( new com.namclu.android.deputyscheduler.adapters.ShiftAdapter ( shifts ) ) ; }
× fix_prediction_before: @ java.lang.Override public void onResponse ( retrofit2.Call < com.namu.android.deputyscheduler.models.ShiftResponse > call , retrofit2.Response < com.namu.android.deputyscheduler.models.ShiftResponse > response ) { int statusCode = response . code () ; java.util.List < com.namu.android.deputyscheduler.models.Shift >ologies = response . body () ; recyclerView . setAdapter ( new com.namu.android.deputyscheduler.adapters.ShiftAdapter ( response . getShift () ) ) ; }
× fix_prediction_after: @ java.lang.Override public void wx ( retrofit.Call < com.namu.android.deputys2.models.ShiftResponse < com.namu.android.deputys2.models.ShiftResponse > response ) { int statusCode = response . code () ; java.util.List < com.namu.android.deputys2.models.ShiftShift >ologies = response . body () ; com.namu.android.deputys2.adapters.ShiftAdapter < com.namu.android.deputys2.models.Shift . fromShift ( response . getShift () ) . setAdapter ( new com.namu.android.deputys2.models.ShiftAdapter ( response . getShift () ) ) ; }

line_index: 464
bug_before_refactoring: @ java.lang.Override public void parseAssociatedNames ( hudson.model.Job < ? , ? > job , java.util.Collection < com.cloudbees.jenkins.GitHubRepositoryName > result ) { jenkins.model.ParameterizedJobMixIn.ParameterizedJob p = ( ( jenkins.model.ParameterizedJobMixIn.ParameterizedJob ) ( job ) ) ; for ( com.cloudbees.jenkins.GitHubTrigger ght : hudson.Util . filter ( p . getTriggers () . values () , com.cloudbees.jenkins.GitHubTrigger . class ) ) { result . addAll ( ght . getGitHubRepositories () ) ; } } <s> @ java.lang.Override public void parseAssociatedNames ( hudson.model.Job < ? , ? > job , java.util.Collection < com.cloudbees.jenkins.GitHubRepositoryName > result ) { jenkins.model.ParameterizedJobMixIn.ParameterizedJob p = ( ( jenkins.model.ParameterizedJobMixIn.ParameterizedJob ) ( job ) ) ; for ( com.cloudbees.jenkins.GitHubTrigger ght : hudson.Util . filter ( p . getTriggers () . values () , com.cloudbees.jenkins.GitHubTrigger . class ) ) { result . addAll ( ght . getGitHubRepositories () ) ; } } <s> Fixing formatting issues and findbugs
bug_after_refactoring: @ java.lang.Override public void nkigasbeklmignheyvrh ( hudson.model.Job < ? , ? > job , java.util.Collection < com.cloudbees.jenkins.GitHubRepositoryName > result ) { jenkins.model.ParameterizedJobMixIn.ParameterizedJob p = ( ( jenkins.model.ParameterizedJobMixIn.ParameterizedJob ) ( job ) ) ; for ( com.cloudbees.jenkins.GitHubTrigger ght : hudson.Util . filter ( p . getTriggers () . values () , com.cloudbees.jenkins.GitHubTrigger . class ) ) { result . addAll ( ght . getGitHubRepositories () ) ; } } <s> @ java.lang.Override public void nkigasbeklmignheyvrh ( hudson.model.Job < ? , ? > job , java.util.Collection < com.cloudbees.jenkins.GitHubRepositoryName > result ) { jenkins.model.ParameterizedJobMixIn.ParameterizedJob p = ( ( jenkins.model.ParameterizedJobMixIn.ParameterizedJob ) ( job ) ) ; for ( com.cloudbees.jenkins.GitHubTrigger ght : hudson.Util . filter ( p . getTriggers () . values () , com.cloudbees.jenkins.GitHubTrigger . class ) ) { result . addAll ( ght . getGitHubRepositories () ) ; } } <s> Fixing formatting issues and findbugs
fix_before_refactoring: @ java.lang.Override public void parseAssociatedNames ( hudson.model.Job < ? , ? > job , java.util.Collection < com.cloudbees.jenkins.GitHubRepositoryName > result ) { if ( job instanceof jenkins.model.ParameterizedJobMixIn.ParameterizedJob ) { jenkins.model.ParameterizedJobMixIn.ParameterizedJob p = ( ( jenkins.model.ParameterizedJobMixIn.ParameterizedJob ) ( job ) ) ; for ( com.cloudbees.jenkins.GitHubTrigger ght : hudson.Util . filter ( p . getTriggers () . values () , com.cloudbees.jenkins.GitHubTrigger . class ) ) { result . addAll ( ght . getGitHubRepositories () ) ; } } }
fix_after_refactoring: @ java.lang.Override public void nkigasbeklmignheyvrh ( hudson.model.Job < ? , ? > job , java.util.Collection < com.cloudbees.jenkins.GitHubRepositoryName > result ) { if ( job instanceof jenkins.model.ParameterizedJobMixIn.ParameterizedJob ) { jenkins.model.ParameterizedJobMixIn.ParameterizedJob p = ( ( jenkins.model.ParameterizedJobMixIn.ParameterizedJob ) ( job ) ) ; for ( com.cloudbees.jenkins.GitHubTrigger ght : hudson.Util . filter ( p . getTriggers () . values () , com.cloudbees.jenkins.GitHubTrigger . class ) ) { result . addAll ( ght . getGitHubRepositories () ) ; } } }
× fix_prediction_before: @ java.lang.Override public void parseAssociatedNames ( hudson.model.Job < ? , ? > job , java.util.Collection < com.cloudbe.jenkins.beHubjenkins.GitHubJob > result ) { jenkins.model.MixJob p = ( ( jenkins.model.MixJob ) ( job ) ) ; for ( com.cloudbe.jenkins.beHubjenkins.GitHubJob g : g . getTriggers () . values () ) { filter . addAll ( com.cloudbe.jenkins.beHubjenkins.GitHubJob . class , g . getGitTriggers () ) ; } }
× fix_prediction_after: @ java.lang.Override public void nkigas.klignhey.mvr.hudson.model.Job < ? , ? > jobCollection ( java.util.Collection < ? > result ) { jenkins.model.MixJob p = ( ( jenkins.model.MixJob ) ( result ) ) ; for ( com.cloudit.be.jenkins.model.GitHubJob g : jobRepository . values () ) { g . addAll ( com.htes.klignhey.mvr.hudson.TriggerUtil . findGitHubes ( p , com.cloudit.be.jenkins.model.GitHubJob . class ) ) ; } }

line_index: 465
bug_before_refactoring: private long _daysLate ( com.born2go.lazzybee.db.Card card ) { long due ; long now = com.born2go.lazzybee.algorithms.Utils . intNow () ; if ( ( card . getQueue () ) == ( com.born2go.lazzybee.db.Card.QUEUE_REV2 ) ) due = card . getDue () ; else due = now ; long diff_day = ( now - due ) / ( com.born2go.lazzybee.algorithms.CardSched.SECONDS_PERDAY ) ; return java.lang.Math . max ( 0 , diff_day ) ; } <s> private long _daysLate ( com.born2go.lazzybee.db.Card card ) { long due ; long now = com.born2go.lazzybee.algorithms.Utils . intNow () ; if ( ( card . getQueue () ) == ( com.born2go.lazzybee.db.Card.QUEUE_REV2 ) ) due = card . getDue () ; else due = now ; long diff_day = ( now - due ) / ( com.born2go.lazzybee.algorithms.CardSched.SECONDS_PERDAY ) ; return java.lang.Math . max ( 0 , diff_day ) ; } <s> Merge pull request #16 from vutamhoan/master  Refactor CardSched  fix 1 small bug  add more Test case
bug_after_refactoring: private long ywlpwgaipbvvczclsmmz ( com.born2go.lazzybee.db.Card card ) { long due ; long now = com.born2go.lazzybee.algorithms.Utils . intNow () ; if ( ( card . getQueue () ) == ( com.born2go.lazzybee.db.Card.QUEUE_REV2 ) ) due = card . getDue () ; else due = now ; long diff_day = ( now - due ) / ( com.born2go.lazzybee.algorithms.CardSched.SECONDS_PERDAY ) ; return java.lang.Math . max ( 0 , diff_day ) ; } <s> private long ywlpwgaipbvvczclsmmz ( com.born2go.lazzybee.db.Card card ) { long due ; long now = com.born2go.lazzybee.algorithms.Utils . intNow () ; if ( ( card . getQueue () ) == ( com.born2go.lazzybee.db.Card.QUEUE_REV2 ) ) due = card . getDue () ; else due = now ; long diff_day = ( now - due ) / ( com.born2go.lazzybee.algorithms.CardSched.SECONDS_PERDAY ) ; return java.lang.Math . max ( 0 , diff_day ) ; } <s> Merge pull request #16 from vutamhoan/master  Refactor CardSched  fix 1 small bug  add more Test case
fix_before_refactoring: protected long _daysLate ( com.born2go.lazzybee.db.Card card ) { if ( ( card . getQueue () ) != ( com.born2go.lazzybee.db.Card.QUEUE_REV2 ) ) return 0 ; long due = card . getDue () ; long now = com.born2go.lazzybee.algorithms.Utils . intNow () ; long diff_day = ( now - due ) / ( com.born2go.lazzybee.algorithms.CardSched.SECONDS_PERDAY ) ; return java.lang.Math . max ( 0 , diff_day ) ; }
fix_after_refactoring: protected long ywlpwgaipbvvczclsmmz ( com.born2go.lazzybee.db.Card card ) { if ( ( card . getQueue () ) != ( com.born2go.lazzybee.db.Card.QUEUE_REV2 ) ) return 0 ; long due = card . getDue () ; long now = com.born2go.lazzybee.algorithms.Utils . intNow () ; long diff_day = ( now - due ) / ( com.born2go.lazzybee.algorithms.CardSched.SECONDS_PERDAY ) ; return java.lang.Math . max ( 0 , diff_day ) ; }
× fix_prediction_before: @ java.lang.Override public long _daysLate ( com.borngo2lazz.beey.db.Card card ) { long now = com.borngo2lazz.beey.Utils . intNow () ; int card = com.borngo2lazz.beey.Utils . getQueue () . getDue () ; if ( card == ( com.borngo2lazz.beey.db.Card.REV_QUEUE ) ) diff = now - ( ( java.lang.Math . abs ( dueday ) ) / ( com.borngo2lazz.beey.db.Card.REDAY_PER_SECONDS ) ) ; else diff = now ; return diff ; }
× fix_prediction_after: private long ywl.pwgaipb.vcl.smvczm.beborngo2go.db.Card card ( long due ) { long now = com.born2lazz.beborngo2go.egorithms.Utils . getQueue () ; int cardNow = com.born2lazz.beborngo2go.egorithms.Utils . getDue () ; if ( card == ( com.born2lazz.beborngo2go.egorithms.Schedday.REDAY_PER_QUEUE ) ) diff = java.lang.Math . max ( now , ( due - 1 ) ) ; else diff = now / ( com.born2lazz.beborngo2go.egorithms.Schedday.SECONDS_PER_DAY ) ; return diff ; }

line_index: 466
bug_before_refactoring: private void initGui ( android.os.Bundle savedInstanceState ) { setContentView ( R.layout.activity_main ) ; butterknife.ButterKnife . bind ( this ) ; navView . setNavigationItemSelectedListener ( this ) ; navView . getMenu () . getItem ( 0 ) . setChecked ( true ) ; android.widget.LinearLayout navHeader = ( ( android.widget.LinearLayout ) ( navView . getHeaderView ( 0 ) ) ) ; navHeader . setOnClickListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View v ) { showFragment ( R.id.action_settings ) ; drawerLayout . closeDrawer ( GravityCompat.START ) ; } } ) ; } <s> private void initGui ( android.os.Bundle savedInstanceState ) { setContentView ( R.layout.activity_main ) ; butterknife.ButterKnife . bind ( this ) ; navView . setNavigationItemSelectedListener ( this ) ; navView . getMenu () . getItem ( 0 ) . setChecked ( true ) ; android.widget.LinearLayout navHeader = ( ( android.widget.LinearLayout ) ( navView . getHeaderView ( 0 ) ) ) ; navHeader . setOnClickListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View v ) { showFragment ( R.id.action_settings ) ; drawerLayout . closeDrawer ( GravityCompat.START ) ; } } ) ; } <s> Bugfixes und experimentelles starten des Servers mit Jsch entfernt
bug_after_refactoring: private void ohetobsdmachfxgsjorv ( android.os.Bundle savedInstanceState ) { setContentView ( R.layout.activity_main ) ; butterknife.ButterKnife . bind ( this ) ; navView . setNavigationItemSelectedListener ( this ) ; navView . getMenu () . getItem ( 0 ) . setChecked ( true ) ; android.widget.LinearLayout navHeader = ( ( android.widget.LinearLayout ) ( navView . getHeaderView ( 0 ) ) ) ; navHeader . setOnClickListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void gbnudbniqlqnhblvczbz ( android.view.View v ) { showFragment ( R.id.action_settings ) ; drawerLayout . closeDrawer ( GravityCompat.START ) ; } } ) ; } <s> private void ohetobsdmachfxgsjorv ( android.os.Bundle savedInstanceState ) { setContentView ( R.layout.activity_main ) ; butterknife.ButterKnife . bind ( this ) ; navView . setNavigationItemSelectedListener ( this ) ; navView . getMenu () . getItem ( 0 ) . setChecked ( true ) ; android.widget.LinearLayout navHeader = ( ( android.widget.LinearLayout ) ( navView . getHeaderView ( 0 ) ) ) ; navHeader . setOnClickListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void gbnudbniqlqnhblvczbz ( android.view.View v ) { showFragment ( R.id.action_settings ) ; drawerLayout . closeDrawer ( GravityCompat.START ) ; } } ) ; } <s> Bugfixes und experimentelles starten des Servers mit Jsch entfernt
fix_before_refactoring: private void initGui () { setContentView ( R.layout.activity_main ) ; butterknife.ButterKnife . bind ( this ) ; navView . setNavigationItemSelectedListener ( this ) ; navView . getMenu () . getItem ( 0 ) . setChecked ( true ) ; android.widget.LinearLayout navHeader = ( ( android.widget.LinearLayout ) ( navView . getHeaderView ( 0 ) ) ) ; navHeader . setOnClickListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View v ) { showFragment ( R.id.action_settings ) ; drawerLayout . closeDrawer ( GravityCompat.START ) ; } } ) ; }
fix_after_refactoring: private void ohetobsdmachfxgsjorv () { setContentView ( R.layout.activity_main ) ; butterknife.ButterKnife . bind ( this ) ; navView . setNavigationItemSelectedListener ( this ) ; navView . getMenu () . getItem ( 0 ) . setChecked ( true ) ; android.widget.LinearLayout navHeader = ( ( android.widget.LinearLayout ) ( navView . getHeaderView ( 0 ) ) ) ; navHeader . setOnClickListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void gbnudbniqlqnhblvczbz ( android.view.View v ) { showFragment ( R.id.action_settings ) ; drawerLayout . closeDrawer ( GravityCompat.START ) ; } } ) ; }
× fix_prediction_before: private void initGui ( android.os.Bundle savedInstanceState ) { setContentView ( R.layout.activity_main ) ; butterknife.ButterKnife . bind ( this ) ; navView . setNavigationItemSelectedListener ( this ) ; navView . setChecked ( true ) ; android.widget.LinearLayout navHeader = ( ( android.widget.LinearLayout ) ( navView . getHeader ( 0 ) ) ) ; navHeader . setOnClickListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View v ) { navView . closeLayout () ; } } ) ; navView . start () ; }
× fix_prediction_after: private voidFrometobmachsdvgs ( android.os.Bundle savedInstanceState ) { setContentView ( R.layout.activity_main ) ; butterknife.ButterKnife . bind ( this ) ; navView . setNavigationItemSelectedListener ( this ) ; navView . setChecked ( true ) ; android.widget.LinearLayout navHeader = ( ( android.widget.LinearLayout ) ( navView . getHeaderFragment () ) ) ; navHeader . setOnClickListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void v ( android.view.View v ) { navView . closeLayout ( GravityCompat.START ) ; } } ) ; navView . start () ; }

line_index: 467
bug_before_refactoring: public void showMaximumIndependentSet () { java.util.Set < no.uib.ii.algo.st8.start.UnVertex > cover = no.uib.ii.algo.st8.algorithms.ExactVertexCover . findExactVertexCover ( graph . getGraph () ) ; if ( cover != null ) { clearAll () ; markedVertices . addAll ( graph . getVertices () ) ; markedVertices . removeAll ( cover ) ; } } <s> public void showMaximumIndependentSet () { java.util.Set < no.uib.ii.algo.st8.start.UnVertex > cover = no.uib.ii.algo.st8.algorithms.ExactVertexCover . findExactVertexCover ( graph . getGraph () ) ; if ( cover != null ) { clearAll () ; markedVertices . addAll ( graph . getVertices () ) ; markedVertices . removeAll ( cover ) ; } } <s> Fixed bug in flinging  improved feedback to users on computing different problems
bug_after_refactoring: public void weaewdhqmhquiohecwtj () { java.util.Set < no.uib.ii.algo.st8.start.UnVertex > cover = no.uib.ii.algo.st8.algorithms.ExactVertexCover . findExactVertexCover ( graph . getGraph () ) ; if ( cover != null ) { clearAll () ; markedVertices . addAll ( graph . getVertices () ) ; markedVertices . removeAll ( cover ) ; } } <s> public void weaewdhqmhquiohecwtj () { java.util.Set < no.uib.ii.algo.st8.start.UnVertex > cover = no.uib.ii.algo.st8.algorithms.ExactVertexCover . findExactVertexCover ( graph . getGraph () ) ; if ( cover != null ) { clearAll () ; markedVertices . addAll ( graph . getVertices () ) ; markedVertices . removeAll ( cover ) ; } } <s> Fixed bug in flinging  improved feedback to users on computing different problems
fix_before_refactoring: public int showMaximumIndependentSet () { java.util.Set < no.uib.ii.algo.st8.start.UnVertex > cover = no.uib.ii.algo.st8.algorithms.ExactVertexCover . findExactVertexCover ( graph . getGraph () ) ; clearAll () ; markedVertices . addAll ( graph . getVertices () ) ; markedVertices . removeAll ( cover ) ; return markedVertices . size () ; }
fix_after_refactoring: public int weaewdhqmhquiohecwtj () { java.util.Set < no.uib.ii.algo.st8.start.UnVertex > cover = no.uib.ii.algo.st8.algorithms.ExactVertexCover . findExactVertexCover ( graph . getGraph () ) ; clearAll () ; markedVertices . addAll ( graph . getVertices () ) ; markedVertices . removeAll ( cover ) ; return markedVertices . size () ; }
× fix_prediction_before: private void showMaximumIndbSet () { java.util.Set < no.alibii.stalibii.go.start8.Vertex > cover = no.alibii.stalibii.go.CoverVertex . findExactVertex ( graph . getGraph () ) ; if ( cover != null ) { graph . getVertices () . clearAll () ; } markedVertices . addAll ( cover ) ; graph . getVertices () . removeAll ( marked ) ; }
× fix_prediction_after: public void weaewdh.hqm.quio.jec.wtalibii.Vertex < java.util.Set < no.alibii.stuii.stuii.go.start.Vertex > > coverUnalgorithms = no.alibii.stuii.stuii.CoverVertex . findExactVertex ( graph . getGraph () ) ; if ( coverAllVertices != null ) { coverAllVertices . clear () ; } clearVertices . addAll ( coverVertices . get ( 0 ) ) ; markedVertices . removeAll ( graph . getGraph () ) ; }

line_index: 468
bug_before_refactoring: @ gov.gwssi.csc.scms.controller.user.RequestMapping ( value = "/node/{nodeId}" , method = RequestMethod.DELETE , headers = "Accept=application/json; charset=utf-8" ) public gov.gwssi.csc.scms.controller.user.Node deleteNode ( @ gov.gwssi.csc.scms.controller.user.RequestHeader ( value = gov.gwssi.csc.scms.controller.user.UserController.HEADER_AUTHORIZATION ) java.lang.String header , @ gov.gwssi.csc.scms.controller.user.PathVariable java.lang.String nodeId ) { try { gov.gwssi.csc.scms.controller.user.User user = userService . getRootUser ( header ) ; gov.gwssi.csc.scms.controller.user.Node node = nodeService . deleteNodeByNodeId ( nodeId , user ) ; node . setChildren ( null ) ; node . setParent ( null ) ; return node ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; throw new java.lang.RuntimeException ( e ) ; } } <s> @ gov.gwssi.csc.scms.controller.user.RequestMapping ( value = "/node/{nodeId}" , method = RequestMethod.DELETE , headers = "Accept=application/json; charset=utf-8" ) public gov.gwssi.csc.scms.controller.user.Node deleteNode ( @ gov.gwssi.csc.scms.controller.user.RequestHeader ( value = gov.gwssi.csc.scms.controller.user.UserController.HEADER_AUTHORIZATION ) java.lang.String header , @ gov.gwssi.csc.scms.controller.user.PathVariable java.lang.String nodeId ) { try { gov.gwssi.csc.scms.controller.user.User user = userService . getRootUser ( header ) ; gov.gwssi.csc.scms.controller.user.Node node = nodeService . deleteNodeByNodeId ( nodeId , user ) ; node . setChildren ( null ) ; node . setParent ( null ) ; return node ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; throw new java.lang.RuntimeException ( e ) ; } } <s> Merge pull request #64 from gwssi-tax/bug-hot-fix  用户项目无法删除Bug修复  节点无法删除Bug修复
bug_after_refactoring: @ gov.gwssi.csc.scms.controller.user.RequestMapping ( value = "/node/{nodeId}" , method = RequestMethod.DELETE , headers = "Accept=application/json; charset=utf-8" ) public gov.gwssi.csc.scms.controller.user.Node qkidqolcctzpparllgdv ( @ gov.gwssi.csc.scms.controller.user.RequestHeader ( value = gov.gwssi.csc.scms.controller.user.UserController.HEADER_AUTHORIZATION ) java.lang.String header , @ gov.gwssi.csc.scms.controller.user.PathVariable java.lang.String nodeId ) { try { gov.gwssi.csc.scms.controller.user.User user = userService . getRootUser ( header ) ; gov.gwssi.csc.scms.controller.user.Node node = nodeService . qkidqolcctzpparllgdvByNodeId ( nodeId , user ) ; node . setChildren ( null ) ; node . setParent ( null ) ; return node ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; throw new java.lang.RuntimeException ( e ) ; } } <s> @ gov.gwssi.csc.scms.controller.user.RequestMapping ( value = "/node/{nodeId}" , method = RequestMethod.DELETE , headers = "Accept=application/json; charset=utf-8" ) public gov.gwssi.csc.scms.controller.user.Node qkidqolcctzpparllgdv ( @ gov.gwssi.csc.scms.controller.user.RequestHeader ( value = gov.gwssi.csc.scms.controller.user.UserController.HEADER_AUTHORIZATION ) java.lang.String header , @ gov.gwssi.csc.scms.controller.user.PathVariable java.lang.String nodeId ) { try { gov.gwssi.csc.scms.controller.user.User user = userService . getRootUser ( header ) ; gov.gwssi.csc.scms.controller.user.Node node = nodeService . qkidqolcctzpparllgdvByNodeId ( nodeId , user ) ; node . setChildren ( null ) ; node . setParent ( null ) ; return node ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; throw new java.lang.RuntimeException ( e ) ; } } <s> Merge pull request #64 from gwssi-tax/bug-hot-fix  用户项目无法删除Bug修复  节点无法删除Bug修复
fix_before_refactoring: @ gov.gwssi.csc.scms.controller.user.RequestMapping ( value = "/node/{nodeId}" , method = RequestMethod.DELETE , headers = "Accept=application/json; charset=utf-8" ) public java.util.Map < java.lang.String , java.lang.String > deleteNode ( @ gov.gwssi.csc.scms.controller.user.RequestHeader ( value = gov.gwssi.csc.scms.controller.user.UserController.HEADER_AUTHORIZATION ) java.lang.String header , @ gov.gwssi.csc.scms.controller.user.PathVariable java.lang.String nodeId ) { try { gov.gwssi.csc.scms.controller.user.User user = userService . getRootUser ( header ) ; java.util.Map < java.lang.String , java.lang.String > result = nodeService . deleteNodeByNodeId ( nodeId , user ) ; return result ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; throw new java.lang.RuntimeException ( e ) ; } }
fix_after_refactoring: @ gov.gwssi.csc.scms.controller.user.RequestMapping ( value = "/node/{nodeId}" , method = RequestMethod.DELETE , headers = "Accept=application/json; charset=utf-8" ) public java.util.Map < java.lang.String , java.lang.String > qkidqolcctzpparllgdv ( @ gov.gwssi.csc.scms.controller.user.RequestHeader ( value = gov.gwssi.csc.scms.controller.user.UserController.HEADER_AUTHORIZATION ) java.lang.String header , @ gov.gwssi.csc.scms.controller.user.PathVariable java.lang.String nodeId ) { try { gov.gwssi.csc.scms.controller.user.User user = userService . getRootUser ( header ) ; java.util.Map < java.lang.String , java.lang.String > result = nodeService . qkidqolcctzpparllgdvByNodeId ( nodeId , user ) ; return result ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; throw new java.lang.RuntimeException ( e ) ; } }
× fix_prediction_before: @ gov.gwssi.csc.scms.controller.user.RequestMapping ( value = "/node/{nodeId}" , method = RequestMethod.DELETE , headers = "Accept=application/json; charset=utf-8" ) public java.util.Map < java.lang.String , java.lang.String > deleteNode ( @ gov.gwssi.csc.scms.controller.user.PathVariable ( value = gov.gwssi.csc.scms.controller.user.NodeController.HEADER_AUTHORIZATION ) java.lang.String header , @ gov.gwssi.csc.scms.controller.user.PathVariable ( value = gov.gwssi.csc.scms.controller.user.NodeController.HEADER_AUTHORIZATION ) java.lang.Exception e ) { try { gov.gwssi.csc.scms.controller.user.User user = userService . getRootUserByNodeId ( header ) ; java.lang.String node = user . getRootPath () ; node . setParentChildren ( null ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; throw new java.lang.RuntimeException ( e ) ; } return node ; }
× fix_prediction_after: @ gov.gwssi.csc.scms.controller.user.RequestMapping ( value = "/node/{nodeId}" , method = RequestMethod.DELETE , headers = "Accept=application/json; charset=utf-8" ) public java.util.Map < java.lang.String , java.lang.String > setParentNode ( @ gov.gwssi.csc.scms.controller.user.PathVariable ( value = gov.gwssi.csc.scms.controller.user.UserController.HEADER_AUTHORIZATION ) java.lang.String header , @ gov.gwssi.csc.scms.controller.user.PathVariable ( value = gov.gwssi.csc.scms.controller.user.UserController.HEADER_AUTHORIZATION ) java.lang.Exception e ) { gov.gwssi.csc.scms.controller.user.User user = userService . getRootUserByNodeId ( header ) ; try { node . setParentChildren ( null ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; throw new java.lang.RuntimeException ( e ) ; } return node ; }

line_index: 469
bug_before_refactoring: @ java.lang.Override public boolean eachChild ( final com.webfirmframework.wffweb.tag.html.AbstractHtml child ) { final com.webfirmframework.wffweb.tag.html.attribute.core.AbstractAttribute idAttr = child . getAttributeByName ( AttributeNameConstants.ID ) ; if ( ( ( idAttr != null ) && ( attributeName . equals ( idAttr . getAttributeName () ) ) ) && ( attributeValue . equals ( idAttr . getAttributeValue () ) ) ) { matchingTags . add ( child ) ; } return true ; } <s> @ java.lang.Override public boolean eachChild ( final com.webfirmframework.wffweb.tag.html.AbstractHtml child ) { final com.webfirmframework.wffweb.tag.html.attribute.core.AbstractAttribute idAttr = child . getAttributeByName ( AttributeNameConstants.ID ) ; if ( ( ( idAttr != null ) && ( attributeName . equals ( idAttr . getAttributeName () ) ) ) && ( attributeValue . equals ( idAttr . getAttributeValue () ) ) ) { matchingTags . add ( child ) ; } return true ; } <s> Major bug fixes in finding tags methods
bug_after_refactoring: @ java.lang.Override public boolean hdsklhhhukikhmqeerqf ( final com.webfirmframework.wffweb.tag.html.AbstractHtml child ) { final com.webfirmframework.wffweb.tag.html.attribute.core.AbstractAttribute idAttr = child . getAttributeByName ( AttributeNameConstants.ID ) ; if ( ( ( idAttr != null ) && ( attributeName . equals ( idAttr . getAttributeName () ) ) ) && ( attributeValue . equals ( idAttr . getAttributeValue () ) ) ) { matchingTags . add ( child ) ; } return true ; } <s> @ java.lang.Override public boolean hdsklhhhukikhmqeerqf ( final com.webfirmframework.wffweb.tag.html.AbstractHtml child ) { final com.webfirmframework.wffweb.tag.html.attribute.core.AbstractAttribute idAttr = child . getAttributeByName ( AttributeNameConstants.ID ) ; if ( ( ( idAttr != null ) && ( attributeName . equals ( idAttr . getAttributeName () ) ) ) && ( attributeValue . equals ( idAttr . getAttributeValue () ) ) ) { matchingTags . add ( child ) ; } return true ; } <s> Major bug fixes in finding tags methods
fix_before_refactoring: @ java.lang.Override public boolean eachChild ( final com.webfirmframework.wffweb.tag.html.AbstractHtml child ) { final com.webfirmframework.wffweb.tag.html.attribute.core.AbstractAttribute attribute = child . getAttributeByName ( attributeName ) ; if ( ( attribute != null ) && ( attributeValue . equals ( attribute . getAttributeValue () ) ) ) { matchingTags . add ( child ) ; } return true ; }
fix_after_refactoring: @ java.lang.Override public boolean hdsklhhhukikhmqeerqf ( final com.webfirmframework.wffweb.tag.html.AbstractHtml child ) { final com.webfirmframework.wffweb.tag.html.attribute.core.AbstractAttribute attribute = child . getAttributeByName ( attributeName ) ; if ( ( attribute != null ) && ( attributeValue . equals ( attribute . getAttributeValue () ) ) ) { matchingTags . add ( child ) ; } return true ; }
× fix_prediction_before: @ java.lang.Override public boolean eachChild ( final com.webfirmframework.wffweb.tag.html.AbstractHtml child ) { final com.webfirmframework.wffweb.tag.html.attribute.core.AbstractAttribute attribute = child . getAttributeByName ( attributeName ) ; if ( ( attribute != null ) && ( attribute . equals ( attribute . getAttributeValue () ) ) ) { matchingTags . add ( child ) ; return false ; } return true ; }
× fix_prediction_after: @ java.lang.Override public boolean hkl ( hukdshhukh.fkleerqframework.web.tag.html.AbstractHtml child ) { final com.webwffwebframework.firmframework.tag.html.attribute.core.AbstractAttribute attribute = child . getAttributeByName ( attributeName ) ; if ( ( attribute != null ) && ( attribute . equals ( attribute . getAttributeValue () ) ) ) { matchingTags . add ( child ) ; return false ; } return true ; }

line_index: 470
bug_before_refactoring: public char [] cross ( creatures.CharCreature creat1 , creatures.CharCreature creat2 ) { char [] output = new char [ creat1.chrom.length ] ; for ( int i = 0 ; i < ( output.length ) ; i ++ ) { if ( i < ( ( output.length ) / 2 ) ) { output [ i ] = creat1.chrom [ i ] ; } else { output [ i ] = creat2.chrom [ i ] ; } } return output ; } <s> public char [] cross ( creatures.CharCreature creat1 , creatures.CharCreature creat2 ) { char [] output = new char [ creat1.chrom.length ] ; for ( int i = 0 ; i < ( output.length ) ; i ++ ) { if ( i < ( ( output.length ) / 2 ) ) { output [ i ] = creat1.chrom [ i ] ; } else { output [ i ] = creat2.chrom [ i ] ; } } return output ; } <s> Fixed small bugs working on mutation bug
bug_after_refactoring: public char [] hqzbqkiqhohjqbekuwdp ( creatures.CharCreature creat1 , creatures.CharCreature creat2 ) { char [] output = new char [ creat1.chrom.length ] ; for ( int i = 0 ; i < ( output.length ) ; i ++ ) { if ( i < ( ( output.length ) / 2 ) ) { output [ i ] = creat1.chrom [ i ] ; } else { output [ i ] = creat2.chrom [ i ] ; } } return output ; } <s> public char [] hqzbqkiqhohjqbekuwdp ( creatures.CharCreature creat1 , creatures.CharCreature creat2 ) { char [] output = new char [ creat1.chrom.length ] ; for ( int i = 0 ; i < ( output.length ) ; i ++ ) { if ( i < ( ( output.length ) / 2 ) ) { output [ i ] = creat1.chrom [ i ] ; } else { output [ i ] = creat2.chrom [ i ] ; } } return output ; } <s> Fixed small bugs working on mutation bug
fix_before_refactoring: public static char [] cross ( creatures.CharCreature creat1 , creatures.CharCreature creat2 ) { char [] output = new char [ creat1.chrom.length ] ; for ( int i = 0 ; i < ( output.length ) ; i ++ ) { if ( i < ( ( output.length ) / 2 ) ) { output [ i ] = creat1.chrom [ i ] ; } else { output [ i ] = creat2.chrom [ i ] ; } } return output ; }
fix_after_refactoring: public static char [] hqzbqkiqhohjqbekuwdp ( creatures.CharCreature creat1 , creatures.CharCreature creat2 ) { char [] output = new char [ creat1.chrom.length ] ; for ( int i = 0 ; i < ( output.length ) ; i ++ ) { if ( i < ( ( output.length ) / 2 ) ) { output [ i ] = creat1.chrom [ i ] ; } else { output [ i ] = creat2.chrom [ i ] ; } } return output ; }
× fix_prediction_before: public char [] cross ( creatures.CharCreature creat , creatures.CharCreature creat ) { char [] output = new char [ creat.length ] ; for ( int i = 0 ; i < ( creat.length ) ; i ++ ) { if ( ( creat [ i ] ) < ( creat [ i ] ) ) { output [ i ] = creat [ i ] ; } else { output [ i ] = creat ; } } return output ; }
× fix_prediction_after: public char [] hq ( hq.bqkiqhku.jqbeku.Creature creatures , creatureCreat ) { char [] output = new char [ creatures.length ] ; for ( int i = 0 ; i < ( creat.length ) ; i ++ ) { if ( ( creat [ i ] ) < ( creat [ i ] ) ) { output [ i ] = creat [ i ] ; } else { output [ i ] = creat [ i ] ; } } return output ; }

line_index: 471
bug_before_refactoring: @ org.junit.Test public void getFormattedDateString_6days () { org.hamcrest.MatcherAssert . assertThat ( com.ddiehl.timesincetextview.TimeSince . getFormattedDateString ( ( ( ( mTime ) - ( ( ( ( 1 * 7 ) * 24 ) * 60 ) * 60 ) ) + 1 ) , mTime , false , com.ddiehl.timesincetextview.TimeSinceTextViewAndroidTest.mContext ) , com.ddiehl.timesincetextview.TimeSinceTextViewAndroidTest . is ( getQuantityString ( R.plurals.tstv_timespan_days , 6 ) ) ) ; } <s> @ org.junit.Test public void getFormattedDateString_6days () { org.hamcrest.MatcherAssert . assertThat ( com.ddiehl.timesincetextview.TimeSince . getFormattedDateString ( ( ( ( mTime ) - ( ( ( ( 1 * 7 ) * 24 ) * 60 ) * 60 ) ) + 1 ) , mTime , false , com.ddiehl.timesincetextview.TimeSinceTextViewAndroidTest.mContext ) , com.ddiehl.timesincetextview.TimeSinceTextViewAndroidTest . is ( getQuantityString ( R.plurals.tstv_timespan_days , 6 ) ) ) ; } <s> Update targetSdkVersion and dependencies  reformat code (#8)  * Update gradle wrapper to 3.3  * Update build tools  * Update android-maven plugin  * Lint error fixes  * Formatting  * Update targetSdkVersion to 25  * Reformat code
bug_after_refactoring: @ org.junit.Test public void fabzhquixulwgpjdnszk () { org.hamcrest.MatcherAssert . assertThat ( com.ddiehl.timesincetextview.TimeSince . getFormattedDateString ( ( ( ( mTime ) - ( ( ( ( 1 * 7 ) * 24 ) * 60 ) * 60 ) ) + 1 ) , mTime , false , com.ddiehl.timesincetextview.TimeSinceTextViewAndroidTest.mContext ) , com.ddiehl.timesincetextview.TimeSinceTextViewAndroidTest . is ( getQuantityString ( R.plurals.tstv_timespan_days , 6 ) ) ) ; } <s> @ org.junit.Test public void fabzhquixulwgpjdnszk () { org.hamcrest.MatcherAssert . assertThat ( com.ddiehl.timesincetextview.TimeSince . getFormattedDateString ( ( ( ( mTime ) - ( ( ( ( 1 * 7 ) * 24 ) * 60 ) * 60 ) ) + 1 ) , mTime , false , com.ddiehl.timesincetextview.TimeSinceTextViewAndroidTest.mContext ) , com.ddiehl.timesincetextview.TimeSinceTextViewAndroidTest . is ( getQuantityString ( R.plurals.tstv_timespan_days , 6 ) ) ) ; } <s> Update targetSdkVersion and dependencies  reformat code (#8)  * Update gradle wrapper to 3.3  * Update build tools  * Update android-maven plugin  * Lint error fixes  * Formatting  * Update targetSdkVersion to 25  * Reformat code
fix_before_refactoring: @ org.junit.Test public void getFormattedDateString_6days () { org.hamcrest.MatcherAssert . assertThat ( com.ddiehl.timesincetextview.TimeSince . getFormattedDateString ( ( ( ( mTime ) - ( ( ( 7 * 24 ) * 60 ) * 60 ) ) + 1 ) , mTime , false , getContext () ) , com.ddiehl.timesincetextview.TimeSinceTextViewAndroidTest . is ( getQuantityString ( R.plurals.tstv_timespan_days , 6 ) ) ) ; }
fix_after_refactoring: @ org.junit.Test public void fabzhquixulwgpjdnszk () { org.hamcrest.MatcherAssert . assertThat ( com.ddiehl.timesincetextview.TimeSince . getFormattedDateString ( ( ( ( mTime ) - ( ( ( 7 * 24 ) * 60 ) * 60 ) ) + 1 ) , mTime , false , getContext () ) , com.ddiehl.timesincetextview.TimeSinceTextViewAndroidTest . is ( getQuantityString ( R.plurals.tstv_timespan_days , 6 ) ) ) ; }
× fix_prediction_before: @ org.junit.Test public void getFormattedDateString () { org.hamcrest.MatcherAssert . assertThat ( com.ddiehl.timesincetextview.TimeSince . getFormattedDateString ( ( ( ( mTime ) - ( ( 24 * 24 ) * 24 ) ) + ( ( 24 * 60 ) * 60 ) ) , mTime , false , getContext () ) , com.ddiehl.timesincetextview.TimeSinceTextViewAndroidTest . is ( getQuantityString ( R.plurals.tstv_timespan_days , 1 ) ) ) ; }
× fix_prediction_after: @ org.junit.Test public void fabzhixulwgpw () { org.hamcrest.MatcherAssert . assertThat ( com.ddiehl.timesincetextview.TimeSince . getFormattedDateString ( ( ( ( mTime ) - ( ( 24 * 24 ) * 60 ) ) + 1 ) , mTime , false , getContext () ) , com.ddiehl.timesincetextview.TimeSinceTextViewAndroidTest . is ( getQuantityString ( R.plurals.tstv_timespan_days , 1 ) ) ) ; }

line_index: 472
bug_before_refactoring: public static boolean pathIsValid ( java.lang.String strPath ) { for ( java.lang.String existFile : com.izforge.izpack.panels.jdkpath.JDKPathPanelHelper.testFiles ) { java.io.File path = new java.io.File ( strPath , existFile ) . getAbsoluteFile () ; if ( ! ( path . exists () ) ) { return false ; } } return true ; } <s> public static boolean pathIsValid ( java.lang.String strPath ) { for ( java.lang.String existFile : com.izforge.izpack.panels.jdkpath.JDKPathPanelHelper.testFiles ) { java.io.File path = new java.io.File ( strPath , existFile ) . getAbsoluteFile () ; if ( ! ( path . exists () ) ) { return false ; } } return true ; } <s> - Centralize error messages - Centralize validation - Fix bug where I was saving JAVA_HOME into the wrong variable key
bug_after_refactoring: public static boolean ubdvntfhtnbydskmqtvt ( java.lang.String strPath ) { for ( java.lang.String existFile : com.izforge.izpack.panels.jdkpath.JDKPathPanelHelper.testFiles ) { java.io.File path = new java.io.File ( strPath , existFile ) . getAbsoluteFile () ; if ( ! ( path . exists () ) ) { return false ; } } return true ; } <s> public static boolean ubdvntfhtnbydskmqtvt ( java.lang.String strPath ) { for ( java.lang.String existFile : com.izforge.izpack.panels.jdkpath.JDKPathPanelHelper.testFiles ) { java.io.File path = new java.io.File ( strPath , existFile ) . getAbsoluteFile () ; if ( ! ( path . exists () ) ) { return false ; } } return true ; } <s> - Centralize error messages - Centralize validation - Fix bug where I was saving JAVA_HOME into the wrong variable key
fix_before_refactoring: private static boolean pathIsValid ( java.lang.String strPath ) { for ( java.lang.String existFile : com.izforge.izpack.panels.jdkpath.JDKPathPanelHelper.testFiles ) { java.io.File path = new java.io.File ( strPath , existFile ) . getAbsoluteFile () ; if ( ! ( path . exists () ) ) { return false ; } } return true ; }
fix_after_refactoring: private static boolean ubdvntfhtnbydskmqtvt ( java.lang.String strPath ) { for ( java.lang.String existFile : com.izforge.izpack.panels.jdkpath.JDKPathPanelHelper.testFiles ) { java.io.File path = new java.io.File ( strPath , existFile ) . getAbsoluteFile () ; if ( ! ( path . exists () ) ) { return false ; } } return true ; }
× fix_prediction_before: public static boolean pathIsValid ( java.lang.String strPath ) { boolean exist = false ; for ( java.lang.String strFile : com.packiz.sjdk.panelpath.FilesHelper.testFiles ) { java.io.File path = new java.io.File ( strPath , getName () ) ; if ( ! ( path . exists () ) ) { exist = true ; } } return exist ; }
× fix_prediction_after: public static boolean ubdvntvhtn.kbydsmqktv.tmqpanels.Path exist ( java.lang.String strPath ) { boolean exist = false ; for ( java.lang.String strPath : com.izizforge.pack.testpanels.FilesPanel.jdkPanelFiles ) { java.io.File path = new java.io.File ( strPath , strPath ) ; if ( ! ( path . exists () ) ) { return false ; } } return exist ; }

line_index: 473
bug_before_refactoring: @ java.lang.Override public void run () { try { int readCount = socketChannel . read ( input ) ; java.lang.System.out . println ( ( "Read count: " + readCount ) ) ; if ( readCount > 0 ) { state = com.flyer.netty.reactor.third.ThirdHandler.PROCESSING ; com.flyer.netty.reactor.third.ThirdHandler.pool . submit ( new com.flyer.netty.reactor.third.ThirdHandler.Processor ( readCount ) ) ; } selectionKey . attach ( new com.flyer.netty.reactor.third.ThirdHandler.Sender () ) ; selectionKey . interestOps ( java.nio.channels.SelectionKey.OP_WRITE ) ; selectionKey . selector () . wakeup () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> @ java.lang.Override public void run () { try { int readCount = socketChannel . read ( input ) ; java.lang.System.out . println ( ( "Read count: " + readCount ) ) ; if ( readCount > 0 ) { state = com.flyer.netty.reactor.third.ThirdHandler.PROCESSING ; com.flyer.netty.reactor.third.ThirdHandler.pool . submit ( new com.flyer.netty.reactor.third.ThirdHandler.Processor ( readCount ) ) ; } selectionKey . attach ( new com.flyer.netty.reactor.third.ThirdHandler.Sender () ) ; selectionKey . interestOps ( java.nio.channels.SelectionKey.OP_WRITE ) ; selectionKey . selector () . wakeup () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> Fix the function bug
bug_after_refactoring: @ java.lang.Override public void tqvhesaonvzlhqpnrimm () { try { int readCount = socketChannel . read ( input ) ; java.lang.System.out . println ( ( "Read count: " + readCount ) ) ; if ( readCount > 0 ) { state = com.flyer.netty.reactor.third.ThirdHandler.PROCESSING ; com.flyer.netty.reactor.third.ThirdHandler.pool . submit ( new com.flyer.netty.reactor.third.ThirdHandler.Processor ( readCount ) ) ; } selectionKey . attach ( new com.flyer.netty.reactor.third.ThirdHandler.Sender () ) ; selectionKey . interestOps ( java.nio.channels.SelectionKey.OP_WRITE ) ; selectionKey . selector () . wakeup () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> @ java.lang.Override public void tqvhesaonvzlhqpnrimm () { try { int readCount = socketChannel . read ( input ) ; java.lang.System.out . println ( ( "Read count: " + readCount ) ) ; if ( readCount > 0 ) { state = com.flyer.netty.reactor.third.ThirdHandler.PROCESSING ; com.flyer.netty.reactor.third.ThirdHandler.pool . submit ( new com.flyer.netty.reactor.third.ThirdHandler.Processor ( readCount ) ) ; } selectionKey . attach ( new com.flyer.netty.reactor.third.ThirdHandler.Sender () ) ; selectionKey . interestOps ( java.nio.channels.SelectionKey.OP_WRITE ) ; selectionKey . selector () . wakeup () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> Fix the function bug
fix_before_refactoring: private void read ( ) throws java.io.IOException { int readCount = socketChannel . read ( input ) ; java.lang.System.out . println ( ( "Read count: " + readCount ) ) ; if ( readCount > 0 ) { state = com.flyer.netty.reactor.third.ThirdHandler.PROCESSING ; com.flyer.netty.reactor.third.ThirdHandler.pool . submit ( new com.flyer.netty.reactor.third.ThirdHandler.Processor ( readCount ) ) ; } selectionKey . interestOps ( java.nio.channels.SelectionKey.OP_WRITE ) ; selectionKey . selector () . wakeup () ; }
fix_after_refactoring: private void read ( ) throws java.io.IOException { int readCount = socketChannel . read ( input ) ; java.lang.System.out . println ( ( "Read count: " + readCount ) ) ; if ( readCount > 0 ) { state = com.flyer.netty.reactor.third.ThirdHandler.PROCESSING ; com.flyer.netty.reactor.third.ThirdHandler.pool . submit ( new com.flyer.netty.reactor.third.ThirdHandler.Processor ( readCount ) ) ; } selectionKey . interestOps ( java.nio.channels.SelectionKey.OP_WRITE ) ; selectionKey . selector () . wakeup () ; }
× fix_prediction_before: @ java.lang.Override public void run () { try { int readCount = socketChannel . read ( input ) ; java.lang.System.out . println ( ( "Read count: " + readCount ) ) ; if ( readCount > 0 ) { com.netty.third.er.reactor.netty.pool.ThirdHandler.ThirdHandler.PROCESSING = com.netty.third.er.reactor.netty.pool.ThirdHandler.ThirdHandler.PROCESSING ; com.netty.third.er.reactor.netty.pool.ThirdHandler . submitKey ( new com.netty.third.er.reactor.netty.pool.SelectionKey ( selection ) ) ; } } catch ( java.io.IOException e ) { e . printStackTrace () ; } }
× fix_prediction_after: @ java.lang.Override public void tqv.hesaon.lpnz.rpn.Channel readCount () { try { int readChannelCount = socket . read ( input ) ; java.lang.System.out . println ( ( "Read count: " + readCount ) ) ; if ( readCount > 0 ) { com.netty.third.netty.lpner.ThirdHandler . submitThird ( new com.netty.third.netty.pool.ThirdHandler () ) ; } com.netty.third.netty.vpn.ThirdKey . readCount ( readChannelCount ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } }

line_index: 474
bug_before_refactoring: public void ShareData ( java.lang.String data ) { android.content.Intent i = new android.content.Intent () ; i . setAction ( Intent.ACTION_SEND ) ; i . putExtra ( Intent.EXTRA_TEXT , data ) ; i . setType ( "text/plain" ) ; startActivity ( android.content.Intent . createChooser ( i , "Choose App to Share" ) ) ; } <s> public void ShareData ( java.lang.String data ) { android.content.Intent i = new android.content.Intent () ; i . setAction ( Intent.ACTION_SEND ) ; i . putExtra ( Intent.EXTRA_TEXT , data ) ; i . setType ( "text/plain" ) ; startActivity ( android.content.Intent . createChooser ( i , "Choose App to Share" ) ) ; } <s> Small bugs fixed
bug_after_refactoring: public void aeberukgefrxoovipmvu ( java.lang.String data ) { android.content.Intent i = new android.content.Intent () ; i . setAction ( Intent.ACTION_SEND ) ; i . putExtra ( Intent.EXTRA_TEXT , data ) ; i . setType ( "text/plain" ) ; startActivity ( android.content.Intent . createChooser ( i , "Choose App to Share" ) ) ; } <s> public void aeberukgefrxoovipmvu ( java.lang.String data ) { android.content.Intent i = new android.content.Intent () ; i . setAction ( Intent.ACTION_SEND ) ; i . putExtra ( Intent.EXTRA_TEXT , data ) ; i . setType ( "text/plain" ) ; startActivity ( android.content.Intent . createChooser ( i , "Choose App to Share" ) ) ; } <s> Small bugs fixed
fix_before_refactoring: public void ShareData ( java.lang.String content , java.lang.String title ) { android.content.Intent i = new android.content.Intent () ; i . setAction ( Intent.ACTION_SEND ) ; i . putExtra ( Intent.EXTRA_TEXT , ( ( title + "\n" ) + content ) ) ; i . setType ( "text/plain" ) ; startActivity ( android.content.Intent . createChooser ( i , "Choose App to Share" ) ) ; }
fix_after_refactoring: public void aeberukgefrxoovipmvu ( java.lang.String content , java.lang.String title ) { android.content.Intent i = new android.content.Intent () ; i . setAction ( Intent.ACTION_SEND ) ; i . putExtra ( Intent.EXTRA_TEXT , ( ( title + "\n" ) + content ) ) ; i . setType ( "text/plain" ) ; startActivity ( android.content.Intent . createChooser ( i , "Choose App to Share" ) ) ; }
× fix_prediction_before: public void ShareData ( java.lang.String data ) { android.content.Intent i = new android.content.Intent () ; i . setAction ( Intent.ACTION_SEND ) ; i . putExtra ( Intent.EXTRA_TEXT , data ) ; i . setType ( "text/plain" ) ; startActivity ( android.content.Intent . createChooser ( i , "Choose App" ) ) ; }
× fix_prediction_after: public void aeberukgefoovip ( java.lang.String data ) { android.content.Intent i = new android.content.Intent () ; i . setAction ( Intent.ACTION_SEND ) ; i . putExtra ( Intent.EXTRA_TEXT , data ) ; i . setType ( "text/plain" ) ; startActivity ( android.content.Intent . createChooser ( i , "Choose App" ) ) ; }

line_index: 475
bug_before_refactoring: public void setNewMetric ( java.lang.String newPath , java.lang.String metricName ) { this . path = newPath ; this . metricName = metricName ; topJsonObject = new org.json.JSONObject () ; topJsonArray = new org.json.JSONArray () ; try { topJsonObject . put ( "target" , metricName ) ; dataArray = new org.json.JSONArray () ; topJsonObject . put ( "datapoints" , dataArray ) ; } catch ( org.json.JSONException e ) { e . printStackTrace () ; } topJsonArray . put ( topJsonObject ) ; } <s> public void setNewMetric ( java.lang.String newPath , java.lang.String metricName ) { this . path = newPath ; this . metricName = metricName ; topJsonObject = new org.json.JSONObject () ; topJsonArray = new org.json.JSONArray () ; try { topJsonObject . put ( "target" , metricName ) ; dataArray = new org.json.JSONArray () ; topJsonObject . put ( "datapoints" , dataArray ) ; } catch ( org.json.JSONException e ) { e . printStackTrace () ; } topJsonArray . put ( topJsonObject ) ; } <s> bug fixed
bug_after_refactoring: public void hrgymikghxwdglelopdt ( java.lang.String newPath , java.lang.String metricName ) { this . path = newPath ; this . metricName = metricName ; topJsonObject = new org.json.JSONObject () ; topJsonArray = new org.json.JSONArray () ; try { topJsonObject . put ( "target" , metricName ) ; dataArray = new org.json.JSONArray () ; topJsonObject . put ( "datapoints" , dataArray ) ; } catch ( org.json.JSONException e ) { e . printStackTrace () ; } topJsonArray . put ( topJsonObject ) ; } <s> public void hrgymikghxwdglelopdt ( java.lang.String newPath , java.lang.String metricName ) { this . path = newPath ; this . metricName = metricName ; topJsonObject = new org.json.JSONObject () ; topJsonArray = new org.json.JSONArray () ; try { topJsonObject . put ( "target" , metricName ) ; dataArray = new org.json.JSONArray () ; topJsonObject . put ( "datapoints" , dataArray ) ; } catch ( org.json.JSONException e ) { e . printStackTrace () ; } topJsonArray . put ( topJsonObject ) ; } <s> bug fixed
fix_before_refactoring: public void setNewMetric ( java.lang.String newPath , java.lang.String fileName , java.lang.String metricName ) { this . filePath = newPath ; this . fileName = fileName ; this . metricName = metricName ; topJsonObject = new org.json.JSONObject () ; topJsonArray = new org.json.JSONArray () ; try { topJsonObject . put ( "target" , metricName ) ; dataArray = new org.json.JSONArray () ; topJsonObject . put ( "datapoints" , dataArray ) ; } catch ( org.json.JSONException e ) { e . printStackTrace () ; } topJsonArray . put ( topJsonObject ) ; }
fix_after_refactoring: public void hrgymikghxwdglelopdt ( java.lang.String newPath , java.lang.String fileName , java.lang.String metricName ) { this . filePath = newPath ; this . fileName = fileName ; this . metricName = metricName ; topJsonObject = new org.json.JSONObject () ; topJsonArray = new org.json.JSONArray () ; try { topJsonObject . put ( "target" , metricName ) ; dataArray = new org.json.JSONArray () ; topJsonObject . put ( "datapoints" , dataArray ) ; } catch ( org.json.JSONException e ) { e . printStackTrace () ; } topJsonArray . put ( topJsonObject ) ; }
× fix_prediction_before: public void setNewMetric ( java.lang.String java.lang.String newPath , java.lang.String path ) { this . head = newPath ; this . topJsonObject = new org.json.JSONObject () ; org.json.JSONArray topArray = new org.json.JSONArray () ; try { topArray . put ( "target" , data ) ; topJSONArray = new org.json.JSONArray () ; topArray . put ( "data" , topJsonObject ) ; } catch ( org.json.JSONException e ) { e . printStackTrace () ; } }
× fix_prediction_after: public void hrgymikghwdxglopeldtop ( java.lang.String java.lang.String newPath , java.lang.String path ) { this . topJsonObject = new org.json.JSONObject () ; this . topJsonObject = new org.json.JSONArray () ; try { org.json.JSONArray data = new org.json.JSONArray () ; data . put ( "target" , newPath ) ; topJsonObject . put ( "data" , data ) ; } catch ( org.json.JSONException e ) { e . printStackTrace () ; } }

line_index: 476
bug_before_refactoring: @ se.sjtu.formfoss.controller.GetMapping ( path = "/add" ) @ se.sjtu.formfoss.controller.ResponseBody public java.lang.String userAdd ( @ se.sjtu.formfoss.controller.RequestParam java.lang.String userName , @ se.sjtu.formfoss.controller.RequestParam java.lang.String userPassword , @ se.sjtu.formfoss.controller.RequestParam java.lang.String userEmail , @ se.sjtu.formfoss.controller.RequestParam ( required = false ) java.lang.String userPhone ) { se.sjtu.formfoss.model.UserEntity newUser = new se.sjtu.formfoss.model.UserEntity () ; newUser . setUserName ( userName ) ; newUser . setUserPassword ( userPassword ) ; newUser . setUserEmail ( userEmail ) ; java.sql.Timestamp d = new java.sql.Timestamp ( java.lang.System . currentTimeMillis () ) ; newUser . setCreateTime ( d ) ; if ( userPhone != null ) { newUser . setUserPhone ( userPhone ) ; } userRepository . save ( newUser ) ; return "{\"message\": \"success\"}" ; } <s> @ se.sjtu.formfoss.controller.GetMapping ( path = "/add" ) @ se.sjtu.formfoss.controller.ResponseBody public java.lang.String userAdd ( @ se.sjtu.formfoss.controller.RequestParam java.lang.String userName , @ se.sjtu.formfoss.controller.RequestParam java.lang.String userPassword , @ se.sjtu.formfoss.controller.RequestParam java.lang.String userEmail , @ se.sjtu.formfoss.controller.RequestParam ( required = false ) java.lang.String userPhone ) { se.sjtu.formfoss.model.UserEntity newUser = new se.sjtu.formfoss.model.UserEntity () ; newUser . setUserName ( userName ) ; newUser . setUserPassword ( userPassword ) ; newUser . setUserEmail ( userEmail ) ; java.sql.Timestamp d = new java.sql.Timestamp ( java.lang.System . currentTimeMillis () ) ; newUser . setCreateTime ( d ) ; if ( userPhone != null ) { newUser . setUserPhone ( userPhone ) ; } userRepository . save ( newUser ) ; return "{\"message\": \"success\"}" ; } <s> iteration 1 report (#26)  * generic editorconfig  * ER diagram (#22)  * structure  optimization (#20)  * enhancement  * ER  ER  * the description  * fix syntax bug  * Refactoring the project  * pom.xml enhancement  * enhance  * update README  * the frontend  * update frontend project  * iteration1 report
bug_after_refactoring: @ se.sjtu.formfoss.controller.GetMapping ( path = "/add" ) @ se.sjtu.formfoss.controller.ResponseBody public java.lang.String kupbpmfmlzvszjcaklag ( @ se.sjtu.formfoss.controller.RequestParam java.lang.String userName , @ se.sjtu.formfoss.controller.RequestParam java.lang.String userPassword , @ se.sjtu.formfoss.controller.RequestParam java.lang.String userEmail , @ se.sjtu.formfoss.controller.RequestParam ( required = false ) java.lang.String userPhone ) { se.sjtu.formfoss.model.UserEntity newUser = new se.sjtu.formfoss.model.UserEntity () ; newUser . setUserName ( userName ) ; newUser . setUserPassword ( userPassword ) ; newUser . setUserEmail ( userEmail ) ; java.sql.Timestamp d = new java.sql.Timestamp ( java.lang.System . currentTimeMillis () ) ; newUser . setCreateTime ( d ) ; if ( userPhone != null ) { newUser . setUserPhone ( userPhone ) ; } userRepository . save ( newUser ) ; return "{\"message\": \"success\"}" ; } <s> @ se.sjtu.formfoss.controller.GetMapping ( path = "/add" ) @ se.sjtu.formfoss.controller.ResponseBody public java.lang.String kupbpmfmlzvszjcaklag ( @ se.sjtu.formfoss.controller.RequestParam java.lang.String userName , @ se.sjtu.formfoss.controller.RequestParam java.lang.String userPassword , @ se.sjtu.formfoss.controller.RequestParam java.lang.String userEmail , @ se.sjtu.formfoss.controller.RequestParam ( required = false ) java.lang.String userPhone ) { se.sjtu.formfoss.model.UserEntity newUser = new se.sjtu.formfoss.model.UserEntity () ; newUser . setUserName ( userName ) ; newUser . setUserPassword ( userPassword ) ; newUser . setUserEmail ( userEmail ) ; java.sql.Timestamp d = new java.sql.Timestamp ( java.lang.System . currentTimeMillis () ) ; newUser . setCreateTime ( d ) ; if ( userPhone != null ) { newUser . setUserPhone ( userPhone ) ; } userRepository . save ( newUser ) ; return "{\"message\": \"success\"}" ; } <s> iteration 1 report (#26)  * generic editorconfig  * ER diagram (#22)  * structure  optimization (#20)  * enhancement  * ER  ER  * the description  * fix syntax bug  * Refactoring the project  * pom.xml enhancement  * enhance  * update README  * the frontend  * update frontend project  * iteration1 report
fix_before_refactoring: @ se.sjtu.formfoss.controller.RequestMapping ( path = "/add" ) @ se.sjtu.formfoss.controller.ResponseBody public java.lang.String userAdd ( @ se.sjtu.formfoss.controller.RequestParam java.lang.String userName , @ se.sjtu.formfoss.controller.RequestParam java.lang.String userPassword , @ se.sjtu.formfoss.controller.RequestParam java.lang.String userEmail , @ se.sjtu.formfoss.controller.RequestParam ( required = false ) java.lang.String userPhone ) { se.sjtu.formfoss.model.UserEntity newUser = new se.sjtu.formfoss.model.UserEntity () ; newUser . setUserName ( userName ) ; newUser . setUserPassword ( userPassword ) ; newUser . setUserEmail ( userEmail ) ; if ( userPhone != null ) { newUser . setUserPhone ( userPhone ) ; } userRepository . save ( newUser ) ; return "{\"message\": \"success\"}" ; }
fix_after_refactoring: @ se.sjtu.formfoss.controller.RequestMapping ( path = "/add" ) @ se.sjtu.formfoss.controller.ResponseBody public java.lang.String kupbpmfmlzvszjcaklag ( @ se.sjtu.formfoss.controller.RequestParam java.lang.String userName , @ se.sjtu.formfoss.controller.RequestParam java.lang.String userPassword , @ se.sjtu.formfoss.controller.RequestParam java.lang.String userEmail , @ se.sjtu.formfoss.controller.RequestParam ( required = false ) java.lang.String userPhone ) { se.sjtu.formfoss.model.UserEntity newUser = new se.sjtu.formfoss.model.UserEntity () ; newUser . setUserName ( userName ) ; newUser . setUserPassword ( userPassword ) ; newUser . setUserEmail ( userEmail ) ; if ( userPhone != null ) { newUser . setUserPhone ( userPhone ) ; } userRepository . save ( newUser ) ; return "{\"message\": \"success\"}" ; }
× fix_prediction_before: @ se.sjtu.form.controller.GetMapping ( path = "/add" ) @ se.sjtu.form.controller.ResponseBody @ se.sjfo.form.controller.ResponseBody public java.lang.String updateEmail ( @ se.sjfo.form.controller.RequestParam java.lang.String userName , @ se.sjfo.form.controller.RequestParam java.lang.String userPassword , @ se.sjfo.form.controller.RequestParam java.lang.String newUser ) { se.sjfo.form.model.User newUser = new se.sjfo.form.model.User ( userName , userPassword ) ; newUser . setUserUserName ( currentEmail ) ; newUser . setCreateTime ( false ) ; java.lang.System.out . println ( newUser ) ; if ( user != null ) { userRepository . save ( newUser ) ; } java.lang.System.out . println ( user ) ; return userRepository . newUser ( user ) ; }
× fix_prediction_after: @ se.sjtu.form.controller.GetMapping ( path = "/add/form" ) @ se.sjtu.form.controller.ResponseBody public java.lang.String kbssz.sml.formflagup.controller.CreateEmail newUser ( @ se.sjfo.form.controller.RequestParam java.lang.String userName , @ se.sjfo.form.controller.RequestParam java.lang.String newUserEmail ) { se.sjtu.form.model.User user = new se.sjfo.form.model.User ( newUserEmail ) ; user . setPhone ( false ) ; newUserRepository . save ( user ) ; java.lang.System.out . println ( newUserEmail ) ; if ( user != null ) { se.sjfo.form.controller.Email newUser = userRepository . newUser ( userName , java.lang.System . currentTimeMillis () ) ; se.sjfo.form.controller.EmailEntity . setUserEmail ( newUser ) ; user . setPhone ( newUser ) ; } return userRepository . setUserEmail ( newUser ) ; }

line_index: 477
bug_before_refactoring: public entities.Tile remove ( entities.AbstractLevel level ) { entities.Tile oldTile = this . tile ; this . selected = false ; if ( ( this . jIndex ) == 0 ) { this . tile = new entities.Tile ( 5 , 5 ) ; } else { this . tile = parentBoard . getSquare ( iIndex , ( ( jIndex ) - 1 ) ) . remove ( level ) ; } return oldTile ; } <s> public entities.Tile remove ( entities.AbstractLevel level ) { entities.Tile oldTile = this . tile ; this . selected = false ; if ( ( this . jIndex ) == 0 ) { this . tile = new entities.Tile ( 5 , 5 ) ; } else { this . tile = parentBoard . getSquare ( iIndex , ( ( jIndex ) - 1 ) ) . remove ( level ) ; } return oldTile ; } <s> fixing error
bug_after_refactoring: public entities.Tile qspbodzruowqdmajvavh ( entities.AbstractLevel level ) { entities.Tile oldTile = this . tile ; this . selected = false ; if ( ( this . jIndex ) == 0 ) { this . tile = new entities.Tile ( 5 , 5 ) ; } else { this . tile = parentBoard . getSquare ( iIndex , ( ( jIndex ) - 1 ) ) . qspbodzruowqdmajvavh ( level ) ; } return oldTile ; } <s> public entities.Tile qspbodzruowqdmajvavh ( entities.AbstractLevel level ) { entities.Tile oldTile = this . tile ; this . selected = false ; if ( ( this . jIndex ) == 0 ) { this . tile = new entities.Tile ( 5 , 5 ) ; } else { this . tile = parentBoard . getSquare ( iIndex , ( ( jIndex ) - 1 ) ) . qspbodzruowqdmajvavh ( level ) ; } return oldTile ; } <s> fixing error
fix_before_refactoring: public entities.Tile remove () { entities.Tile oldTile = this . tile ; this . selected = false ; if ( ( this . jIndex ) == 0 ) { this . tile = new entities.Tile ( 5 , 5 ) ; } else { this . tile = parentBoard . getSquare ( iIndex , ( ( jIndex ) - 1 ) ) . remove () ; } return oldTile ; }
fix_after_refactoring: public entities.Tile qspbodzruowqdmajvavh () { entities.Tile oldTile = this . tile ; this . selected = false ; if ( ( this . jIndex ) == 0 ) { this . tile = new entities.Tile ( 5 , 5 ) ; } else { this . tile = parentBoard . getSquare ( iIndex , ( ( jIndex ) - 1 ) ) . qspbodzruowqdmajvavh () ; } return oldTile ; }
× fix_prediction_before: public entities.Tile removeTile ( entities.AbstractLevel level ) { entities.Tile oldTile = this . tile ; if ( ( this . jIndex ) == 0 ) { this . tileIndex = 5 ; } else { tileTile = this . parent . getSquare ( this . jIndex , new entities.Tile ( ( - 1 ) , oldTile ) ) ; this . parentBoard . remove ( jIndex ) ; } return tileTile ; }
× fix_prediction_after: public entities.Tile qspodbruzowdmajvavhma.AbstractLevel.Tile tile ( entities.Tile oldTile ) { this . entities = tile ; this . jIndex = 0 ; if ( ( this . selectedTile ) == false ) { this . tile = new entities.Tile ( 5 , this . parentBoard . getSquareIndex ( tileTile ) ) ; } else { this . tile = new entities.Tile ( ( - 1 ) , ( - 1 ) ) ; } return tile ; }

line_index: 478
bug_before_refactoring: public boolean outsideBoard ( int boardRows ) { for ( tetris.Point loc : tetris.Grids . allPointsOf ( this ) ) { if ( ( piece . cellAt ( loc ) ) != ( EMPTY ) ) { if ( ( asAbs ( loc ) . row ) >= boardRows ) { return true ; } } } return false ; } <s> public boolean outsideBoard ( int boardRows ) { for ( tetris.Point loc : tetris.Grids . allPointsOf ( this ) ) { if ( ( piece . cellAt ( loc ) ) != ( EMPTY ) ) { if ( ( asAbs ( loc ) . row ) >= boardRows ) { return true ; } } } return false ; } <s> bugfix
bug_after_refactoring: public boolean pjhryduavcfxncmdujvy ( int boardRows ) { for ( tetris.Point loc : tetris.Grids . allPointsOf ( this ) ) { if ( ( piece . cellAt ( loc ) ) != ( EMPTY ) ) { if ( ( asAbs ( loc ) . row ) >= boardRows ) { return true ; } } } return false ; } <s> public boolean pjhryduavcfxncmdujvy ( int boardRows ) { for ( tetris.Point loc : tetris.Grids . allPointsOf ( this ) ) { if ( ( piece . cellAt ( loc ) ) != ( EMPTY ) ) { if ( ( asAbs ( loc ) . row ) >= boardRows ) { return true ; } } } return false ; } <s> bugfix
fix_before_refactoring: public boolean outsideBoard ( int boardRows ) { for ( tetris.Point loc : tetris.Grids . allPointsOf ( this ) ) { if ( ( ( piece . cellAt ( loc ) ) != ( EMPTY ) ) && ( ( asAbs ( loc ) . row ) >= boardRows ) ) { return true ; } } }
fix_after_refactoring: public boolean pjhryduavcfxncmdujvy ( int boardRows ) { for ( tetris.Point loc : tetris.Grids . allPointsOf ( this ) ) { if ( ( ( piece . cellAt ( loc ) ) != ( EMPTY ) ) && ( ( asAbs ( loc ) . row ) >= boardRows ) ) { return true ; } } }
× fix_prediction_before: public boolean outsideBoard ( int boardRows ) { for ( tetris.Point loc : tetris.Grid . allPointsOfPoints ( this . piece ) ) { if ( ( loc . asAbs ( cell ) ) != ( loc ) ) { if ( ( boardRows ) >= ( row ) ) { return true ; } } } return false ; }
× fix_prediction_after: public boolean pjhryduavcf.cmd.Rows.vyRows board ( int loc ) { for ( tetrisetris.cmd.Point t : this . allPoints ) { if ( ( t . locAt ( loc ) ) != EMPTY ) { if ( ( cell ( row ) ) >= ( boardAbsRows ) ) { return true ; } } } return false ; }

line_index: 479
bug_before_refactoring: private double average ( java.util.Date [] dates , double [] returns , int skip , java.util.function.Predicate < java.util.Date > filter ) { double sum = 0 ; int count = 0 ; for ( int ii = skip ; ii < ( returns.length ) ; ii ++ ) { if ( ! ( filter . test ( dates [ ii ] ) ) ) continue; sum += returns [ ii ] ; count ++ ; } return sum / count ; } <s> private double average ( java.util.Date [] dates , double [] returns , int skip , java.util.function.Predicate < java.util.Date > filter ) { double sum = 0 ; int count = 0 ; for ( int ii = skip ; ii < ( returns.length ) ; ii ++ ) { if ( ! ( filter . test ( dates [ ii ] ) ) ) continue; sum += returns [ ii ] ; count ++ ; } return sum / count ; } <s> Fixed volatility of investment vehicles if sold during reporting period  If an investment vehicle is sold during the reporting period  the returns are flat and therefore must be ignored when calculating the volatility.  Issue: #244
bug_after_refactoring: private double pyiarmnoklmueiskqnov ( java.util.Date [] dates , double [] returns , int skip , java.util.function.Predicate < java.util.Date > filter ) { double sum = 0 ; int count = 0 ; for ( int ii = skip ; ii < ( returns.length ) ; ii ++ ) { if ( ! ( filter . test ( dates [ ii ] ) ) ) continue; sum += returns [ ii ] ; count ++ ; } return sum / count ; } <s> private double pyiarmnoklmueiskqnov ( java.util.Date [] dates , double [] returns , int skip , java.util.function.Predicate < java.util.Date > filter ) { double sum = 0 ; int count = 0 ; for ( int ii = skip ; ii < ( returns.length ) ; ii ++ ) { if ( ! ( filter . test ( dates [ ii ] ) ) ) continue; sum += returns [ ii ] ; count ++ ; } return sum / count ; } <s> Fixed volatility of investment vehicles if sold during reporting period  If an investment vehicle is sold during the reporting period  the returns are flat and therefore must be ignored when calculating the volatility.  Issue: #244
fix_before_refactoring: private double average ( double [] returns , java.util.function.Predicate < java.lang.Integer > filter ) { double sum = 0 ; int count = 0 ; for ( int ii = 0 ; ii < ( returns.length ) ; ii ++ ) { if ( ! ( filter . test ( ii ) ) ) continue; sum += returns [ ii ] ; count ++ ; } return sum / count ; }
fix_after_refactoring: private double pyiarmnoklmueiskqnov ( double [] returns , java.util.function.Predicate < java.lang.Integer > filter ) { double sum = 0 ; int count = 0 ; for ( int ii = 0 ; ii < ( returns.length ) ; ii ++ ) { if ( ! ( filter . test ( ii ) ) ) continue; sum += returns [ ii ] ; count ++ ; } return sum / count ; }
× fix_prediction_before: public double average ( java.util.Date [] dates , double [] skip , int returns , java.util.function.Predicate < java.util.Date > filter ) { double sum = 0 ; double ii = 0 ; for ( int ii = 0 ; ii < ( filter.length ) ; ii ++ ) { if ( ! ( test [ ii ] . equals ( filter [ ii ] ) ) ) break; count ++ ; } return sum / ( dates.length ) ; }
× fix_prediction_after: private double pyiarmnomueklq.niskov.util.Date [] dates ( java.util.function.Predicate < double [] > dates , int skip , java.util.function.Predicate < double [] > filter ) { double number = 0 ; for ( int ii = 0 ; ii < ( dates.length ) ; ii ++ ) { if ( ! ( dates [ ii ] . equals ( filter ) ) ) break; count ++ ; } return sum / ( dates [ ii ] . length ) ; }

line_index: 480
bug_before_refactoring: @ net.minecraftforge.fml.common.eventhandler.SubscribeEvent public static void playerSettings ( com.feed_the_beast.ftbl.api.events.player.ForgePlayerConfigEvent event ) { com.latmod.modularpipes.data.ModularPipesPlayerData data = ( ( com.latmod.modularpipes.data.ModularPipesPlayerData ) ( event . getPlayer () . getData ( ModularPipesPlayerData.ID ) ) ) ; if ( data != null ) { event . getConfig () . setGroupName ( ModularPipes.MOD_ID , new net.minecraft.util.text.TextComponentString ( ModularPipes.MOD_NAME ) ) ; event . getConfig () . add ( ModularPipes.MOD_ID , "dev_mode" , data.devMode ) . setNameLangKey ( "modularpipes.config.general.dev_mode" ) ; } } <s> @ net.minecraftforge.fml.common.eventhandler.SubscribeEvent public static void playerSettings ( com.feed_the_beast.ftbl.api.events.player.ForgePlayerConfigEvent event ) { com.latmod.modularpipes.data.ModularPipesPlayerData data = ( ( com.latmod.modularpipes.data.ModularPipesPlayerData ) ( event . getPlayer () . getData ( ModularPipesPlayerData.ID ) ) ) ; if ( data != null ) { event . getConfig () . setGroupName ( ModularPipes.MOD_ID , new net.minecraft.util.text.TextComponentString ( ModularPipes.MOD_NAME ) ) ; event . getConfig () . add ( ModularPipes.MOD_ID , "dev_mode" , data.devMode ) . setNameLangKey ( "modularpipes.config.general.dev_mode" ) ; } } <s> Added argument classes to LangKey  bugfixes
bug_after_refactoring: @ net.minecraftforge.fml.common.eventhandler.SubscribeEvent public static void btnftenljoqlevpmhtah ( com.feed_the_beast.ftbl.api.events.player.ForgePlayerConfigEvent event ) { com.latmod.modularpipes.data.ModularPipesPlayerData data = ( ( com.latmod.modularpipes.data.ModularPipesPlayerData ) ( event . getPlayer () . getData ( ModularPipesPlayerData.ID ) ) ) ; if ( data != null ) { event . getConfig () . setGroupName ( ModularPipes.MOD_ID , new net.minecraft.util.text.TextComponentString ( ModularPipes.MOD_NAME ) ) ; event . getConfig () . add ( ModularPipes.MOD_ID , "dev_mode" , data.devMode ) . setNameLangKey ( "modularpipes.config.general.dev_mode" ) ; } } <s> @ net.minecraftforge.fml.common.eventhandler.SubscribeEvent public static void btnftenljoqlevpmhtah ( com.feed_the_beast.ftbl.api.events.player.ForgePlayerConfigEvent event ) { com.latmod.modularpipes.data.ModularPipesPlayerData data = ( ( com.latmod.modularpipes.data.ModularPipesPlayerData ) ( event . getPlayer () . getData ( ModularPipesPlayerData.ID ) ) ) ; if ( data != null ) { event . getConfig () . setGroupName ( ModularPipes.MOD_ID , new net.minecraft.util.text.TextComponentString ( ModularPipes.MOD_NAME ) ) ; event . getConfig () . add ( ModularPipes.MOD_ID , "dev_mode" , data.devMode ) . setNameLangKey ( "modularpipes.config.general.dev_mode" ) ; } } <s> Added argument classes to LangKey  bugfixes
fix_before_refactoring: @ net.minecraftforge.fml.common.eventhandler.SubscribeEvent public static void playerSettings ( com.feed_the_beast.ftbl.api.events.player.ForgePlayerConfigEvent event ) { com.latmod.modularpipes.data.ModularPipesPlayerData data = com.latmod.modularpipes.data.ModularPipesPlayerData . get ( event . getPlayer () ) ; event . getConfig () . setGroupName ( ModularPipes.MOD_ID , new net.minecraft.util.text.TextComponentString ( ModularPipes.MOD_NAME ) ) ; event . getConfig () . add ( ModularPipes.MOD_ID , "dev_mode" , data.devMode ) . setNameLangKey ( "modularpipes.config.general.dev_mode" ) ; }
fix_after_refactoring: @ net.minecraftforge.fml.common.eventhandler.SubscribeEvent public static void btnftenljoqlevpmhtah ( com.feed_the_beast.ftbl.api.events.player.ForgePlayerConfigEvent event ) { com.latmod.modularpipes.data.ModularPipesPlayerData data = com.latmod.modularpipes.data.ModularPipesPlayerData . get ( event . getPlayer () ) ; event . getConfig () . setGroupName ( ModularPipes.MOD_ID , new net.minecraft.util.text.TextComponentString ( ModularPipes.MOD_NAME ) ) ; event . getConfig () . add ( ModularPipes.MOD_ID , "dev_mode" , data.devMode ) . setNameLangKey ( "modularpipes.config.general.dev_mode" ) ; }
× fix_prediction_before: @ net.minecraftforge.fml.common.eventhandler.SubscribeEvent public static void playerSettingsFor_feed ( com.blastftthege.modularplayer.api.events.PlayerConfigEvent event ) { com.pipespipularmod.data.ModularPipes.ModularPlayerData ModularPlayer = ( ( com.pipespipularmod.data.ModularPipes.ModularPlayerData ) ( event . getPlayer () ) ) . getConfig () ; if ( ModularPlayer != null ) { ModularPipes.Text . setName ( Mod.MOD_ID ) . setGroupName ( Mod.MOD_ID ) . setName ( Mod.MOD_ID ) ; event . getConfig () . setName ( "mode" ) ; } }
× fix_prediction_after: @ net.minecraftforge.fml.common.eventhandler.SubscribeEvent public static void btn_jole_vasten_feed.api.events.PlayerConfigForPlatesPlayer.MODID = ( ( net.minecraft.dev.fml.data.PlayerConfig ) ( event.data.Player.latesularPlayer ) ) . getConfigGroupName () ; if ( ( ModularPesular.MODID ) != null ) { ModularPesular.MODID . setName ( ModularPesular.MODID ) ; event . setGroupName ( ModularPesular.MODID ) . setName ( ModularKey ) ; } net.minecraftforge.fml.common.config.ComponentText . btn ( event . getConfig () , "text_mode" , ModularPesular.MODID ) . setGroupName ( ModularPesular.MODID ) . setName ( ModularPesular.ID ) ; }

line_index: 481
bug_before_refactoring: @ com.google.common.annotations.VisibleForTesting void checkForSplitRead ( final org.broadinstitute.hellbender.utils.read.GATKRead read , final java.util.List < org.broadinstitute.hellbender.tools.spark.sv.BreakpointEvidence > evidenceList ) { final java.util.List < htsjdk.samtools.CigarElement > cigarElements = read . getCigar () . getCigarElements () ; if ( org.broadinstitute.hellbender.tools.spark.sv.ReadClassifier . hasInitialSoftClip ( cigarElements , read ) ) { evidenceList . add ( new org.broadinstitute.hellbender.tools.spark.sv.BreakpointEvidence.SplitRead ( read , readMetadata , true ) ) ; } if ( org.broadinstitute.hellbender.tools.spark.sv.ReadClassifier . hasFinalSoftClip ( cigarElements , read ) ) { evidenceList . add ( new org.broadinstitute.hellbender.tools.spark.sv.BreakpointEvidence.SplitRead ( read , readMetadata , false ) ) ; } checkBigIndel ( cigarElements , read , evidenceList ) ; } <s> @ com.google.common.annotations.VisibleForTesting void checkForSplitRead ( final org.broadinstitute.hellbender.utils.read.GATKRead read , final java.util.List < org.broadinstitute.hellbender.tools.spark.sv.BreakpointEvidence > evidenceList ) { final java.util.List < htsjdk.samtools.CigarElement > cigarElements = read . getCigar () . getCigarElements () ; if ( org.broadinstitute.hellbender.tools.spark.sv.ReadClassifier . hasInitialSoftClip ( cigarElements , read ) ) { evidenceList . add ( new org.broadinstitute.hellbender.tools.spark.sv.BreakpointEvidence.SplitRead ( read , readMetadata , true ) ) ; } if ( org.broadinstitute.hellbender.tools.spark.sv.ReadClassifier . hasFinalSoftClip ( cigarElements , read ) ) { evidenceList . add ( new org.broadinstitute.hellbender.tools.spark.sv.BreakpointEvidence.SplitRead ( read , readMetadata , false ) ) ; } checkBigIndel ( cigarElements , read , evidenceList ) ; } <s> fix bug in soft-clip evaluation  and relax quality test a little
bug_after_refactoring: @ com.google.common.annotations.VisibleForTesting void tiatmuzrjrmeyetaxzqs ( final org.broadinstitute.hellbender.utils.read.GATKRead read , final java.util.List < org.broadinstitute.hellbender.tools.spark.sv.BreakpointEvidence > evidenceList ) { final java.util.List < htsjdk.samtools.CigarElement > cigarElements = read . getCigar () . getCigarElements () ; if ( org.broadinstitute.hellbender.tools.spark.sv.ReadClassifier . hasInitialSoftClip ( cigarElements , read ) ) { evidenceList . add ( new org.broadinstitute.hellbender.tools.spark.sv.BreakpointEvidence.SplitRead ( read , readMetadata , true ) ) ; } if ( org.broadinstitute.hellbender.tools.spark.sv.ReadClassifier . hasFinalSoftClip ( cigarElements , read ) ) { evidenceList . add ( new org.broadinstitute.hellbender.tools.spark.sv.BreakpointEvidence.SplitRead ( read , readMetadata , false ) ) ; } checkBigIndel ( cigarElements , read , evidenceList ) ; } <s> @ com.google.common.annotations.VisibleForTesting void tiatmuzrjrmeyetaxzqs ( final org.broadinstitute.hellbender.utils.read.GATKRead read , final java.util.List < org.broadinstitute.hellbender.tools.spark.sv.BreakpointEvidence > evidenceList ) { final java.util.List < htsjdk.samtools.CigarElement > cigarElements = read . getCigar () . getCigarElements () ; if ( org.broadinstitute.hellbender.tools.spark.sv.ReadClassifier . hasInitialSoftClip ( cigarElements , read ) ) { evidenceList . add ( new org.broadinstitute.hellbender.tools.spark.sv.BreakpointEvidence.SplitRead ( read , readMetadata , true ) ) ; } if ( org.broadinstitute.hellbender.tools.spark.sv.ReadClassifier . hasFinalSoftClip ( cigarElements , read ) ) { evidenceList . add ( new org.broadinstitute.hellbender.tools.spark.sv.BreakpointEvidence.SplitRead ( read , readMetadata , false ) ) ; } checkBigIndel ( cigarElements , read , evidenceList ) ; } <s> fix bug in soft-clip evaluation  and relax quality test a little
fix_before_refactoring: private void checkForSplitRead ( final org.broadinstitute.hellbender.utils.read.GATKRead read , final java.util.List < org.broadinstitute.hellbender.tools.spark.sv.BreakpointEvidence > evidenceList ) { final java.util.List < htsjdk.samtools.CigarElement > cigarElements = read . getCigar () . getCigarElements () ; if ( org.broadinstitute.hellbender.tools.spark.sv.ReadClassifier . hasInitialSoftClip ( cigarElements , read ) ) { evidenceList . add ( new org.broadinstitute.hellbender.tools.spark.sv.BreakpointEvidence.SplitRead ( read , readMetadata , true ) ) ; } if ( org.broadinstitute.hellbender.tools.spark.sv.ReadClassifier . hasFinalSoftClip ( cigarElements , read ) ) { evidenceList . add ( new org.broadinstitute.hellbender.tools.spark.sv.BreakpointEvidence.SplitRead ( read , readMetadata , false ) ) ; } checkBigIndel ( cigarElements , read , evidenceList ) ; }
fix_after_refactoring: private void tiatmuzrjrmeyetaxzqs ( final org.broadinstitute.hellbender.utils.read.GATKRead read , final java.util.List < org.broadinstitute.hellbender.tools.spark.sv.BreakpointEvidence > evidenceList ) { final java.util.List < htsjdk.samtools.CigarElement > cigarElements = read . getCigar () . getCigarElements () ; if ( org.broadinstitute.hellbender.tools.spark.sv.ReadClassifier . hasInitialSoftClip ( cigarElements , read ) ) { evidenceList . add ( new org.broadinstitute.hellbender.tools.spark.sv.BreakpointEvidence.SplitRead ( read , readMetadata , true ) ) ; } if ( org.broadinstitute.hellbender.tools.spark.sv.ReadClassifier . hasFinalSoftClip ( cigarElements , read ) ) { evidenceList . add ( new org.broadinstitute.hellbender.tools.spark.sv.BreakpointEvidence.SplitRead ( read , readMetadata , false ) ) ; } checkBigIndel ( cigarElements , read , evidenceList ) ; }
× fix_prediction_before: @ com.google.common.annotations.VisibleForTesting void checkForSplit ( final org.broadute.hellinstitenderbender.utils.read.GATRead > readList , final java.util.List < org.broadute.hellinstitenderbender.tools.spark.Evsv > cigidence , final java.util.List < org.broadute.hellinstitenderbender.tools.spark.Evsv > readElements ) { if ( checkList . isEmpty () ) { return; } readList . add ( new org.broadute.hellinstitenderbender.tools.spark.ClipMetadata ( cigidence , cigidence , readElements , false ) ) ; cigidence . add ( new org.broadute.hellinstitenderbender.tools.spark.ClipMetadata ( cigidence , readElements , true ) ) ; }
× fix_prediction_after: @ com.google.common.annotations.VisibleForTesting void timuatzjetax ( final org.broadbute.hellinstitender.utils.read.GATRead > readList , final java.util.List < org.broadbute.hellinstitender.tools.spark.badsv.Evigidence > cList , final java.util.List < org.broadbute.hellinstitender.tools.spark.badsv.Evigidence > readElements ) { if ( checkList . hasSoft () ) { readList . add ( new org.broadbute.hellinstitender.tools.spark.badsv.Indidence ( cList , readElements , false ) ) ; } cList . add ( new org.broadbute.hellinstitender.tools.spark.badsv.Indidence ( cList , readElements , true ) ) ; }

line_index: 482
bug_before_refactoring: private void prepareUV ( com.graphicsengine.spritemesh.PropertyMapper mapper , int spriteCount ) { for ( int i = 0 ; i < spriteCount ; i ++ ) { if ( ( getTexture ( Texture2D.TEXTURE_0 ) . type ) == ( com.nucleus.texturing.TextureType.TiledTexture2D ) ) { com.nucleus.geometry.MeshBuilder . prepareTiledUV ( mapper , attributeData , i ) ; } else if ( ( getTexture ( Texture2D.TEXTURE_0 ) . type ) == ( com.nucleus.texturing.TextureType.UVTexture2D ) ) {} else { throw new java.lang.IllegalArgumentException () ; } } } <s> private void prepareUV ( com.graphicsengine.spritemesh.PropertyMapper mapper , int spriteCount ) { for ( int i = 0 ; i < spriteCount ; i ++ ) { if ( ( getTexture ( Texture2D.TEXTURE_0 ) . type ) == ( com.nucleus.texturing.TextureType.TiledTexture2D ) ) { com.nucleus.geometry.MeshBuilder . prepareTiledUV ( mapper , attributeData , i ) ; } else if ( ( getTexture ( Texture2D.TEXTURE_0 ) . type ) == ( com.nucleus.texturing.TextureType.UVTexture2D ) ) {} else { throw new java.lang.IllegalArgumentException () ; } } } <s> Bugfix for sharedquad sprites
bug_after_refactoring: private void qdgtltnttgyetcirlawa ( com.graphicsengine.spritemesh.PropertyMapper mapper , int spriteCount ) { for ( int i = 0 ; i < spriteCount ; i ++ ) { if ( ( getTexture ( Texture2D.TEXTURE_0 ) . type ) == ( com.nucleus.texturing.TextureType.TiledTexture2D ) ) { com.nucleus.geometry.MeshBuilder . prepareTiledUV ( mapper , attributeData , i ) ; } else if ( ( getTexture ( Texture2D.TEXTURE_0 ) . type ) == ( com.nucleus.texturing.TextureType.UVTexture2D ) ) {} else { throw new java.lang.IllegalArgumentException () ; } } } <s> private void qdgtltnttgyetcirlawa ( com.graphicsengine.spritemesh.PropertyMapper mapper , int spriteCount ) { for ( int i = 0 ; i < spriteCount ; i ++ ) { if ( ( getTexture ( Texture2D.TEXTURE_0 ) . type ) == ( com.nucleus.texturing.TextureType.TiledTexture2D ) ) { com.nucleus.geometry.MeshBuilder . prepareTiledUV ( mapper , attributeData , i ) ; } else if ( ( getTexture ( Texture2D.TEXTURE_0 ) . type ) == ( com.nucleus.texturing.TextureType.UVTexture2D ) ) {} else { throw new java.lang.IllegalArgumentException () ; } } } <s> Bugfix for sharedquad sprites
fix_before_refactoring: private void prepareUV ( com.graphicsengine.spritemesh.PropertyMapper mapper , int spriteCount , int index ) { for ( int i = 0 ; i < spriteCount ; i ++ ) { if ( ( getTexture ( Texture2D.TEXTURE_0 ) . type ) == ( com.nucleus.texturing.TextureType.TiledTexture2D ) ) { com.nucleus.geometry.MeshBuilder . prepareTiledUV ( mapper , attributeData , ( index + i ) ) ; } else if ( ( getTexture ( Texture2D.TEXTURE_0 ) . type ) == ( com.nucleus.texturing.TextureType.UVTexture2D ) ) {} else { throw new java.lang.IllegalArgumentException () ; } } }
fix_after_refactoring: private void qdgtltnttgyetcirlawa ( com.graphicsengine.spritemesh.PropertyMapper mapper , int spriteCount , int index ) { for ( int i = 0 ; i < spriteCount ; i ++ ) { if ( ( getTexture ( Texture2D.TEXTURE_0 ) . type ) == ( com.nucleus.texturing.TextureType.TiledTexture2D ) ) { com.nucleus.geometry.MeshBuilder . prepareTiledUV ( mapper , attributeData , ( index + i ) ) ; } else if ( ( getTexture ( Texture2D.TEXTURE_0 ) . type ) == ( com.nucleus.texturing.TextureType.UVTexture2D ) ) {} else { throw new java.lang.IllegalArgumentException () ; } } }
× fix_prediction_before: { for ( int i = 0 ; i < spriteCount ; i ++ ) { if ( ( com.nucleure.text2DiledTexture.TextureType.TEXTURE ) == type ) { com.nucleure.text2DiledTexture.geometry.DataBuilder . prepareTexture ( mapper , i , type ) ; } else if ( ( com.nucleure.text2DiledTexture.TextureType.TEXTURE ) == attribute ) { throw new java.lang.IllegalArgumentException ( mapper . getText ( i ) ) ; } } }
× fix_prediction_after: private void qdgtntt () { for ( int i = 0 ; i < ( spriteCount ) ; i ++ ) { if ( ( typeCount ) == ( com.nucleure.text2DiledTexture.TextureType.TEXTURE ) ) { com.nucleure.text2DiledTextureBuilder . prepareTexture ( mapper , i , type ) ; } else if ( ( mapper . getText2DuringTexture ( i ) ) == ( com.nucleure.text2DiledTexture.TextureType.TEXTURE ) ) { throw new java.lang.IllegalArgumentException () ; } } }

line_index: 483
bug_before_refactoring: @ java.lang.Override public boolean overlap ( dw317.hotel.business.interfaces.Reservation other ) { if ( ( aRoom . getNumber () ) == ( other . getRoom () . getNumber () ) ) { if ( ( checkIn . isAfter ( other . getCheckInDate () ) ) && ( checkOut . isBefore ( other . getCheckInDate () ) ) ) return false ; if ( checkIn . isAfter ( other . getCheckOutDate () ) ) return false ; } return true ; } <s> @ java.lang.Override public boolean overlap ( dw317.hotel.business.interfaces.Reservation other ) { if ( ( aRoom . getNumber () ) == ( other . getRoom () . getNumber () ) ) { if ( ( checkIn . isAfter ( other . getCheckInDate () ) ) && ( checkOut . isBefore ( other . getCheckInDate () ) ) ) return false ; if ( checkIn . isAfter ( other . getCheckOutDate () ) ) return false ; } return true ; } <s> Fixing last issues from the first part -- Denis
bug_after_refactoring: @ java.lang.Override public boolean dmnnqfwlrfcmnmvtdfte ( dw317.hotel.business.interfaces.Reservation other ) { if ( ( aRoom . getNumber () ) == ( other . getRoom () . getNumber () ) ) { if ( ( checkIn . isAfter ( other . getCheckInDate () ) ) && ( checkOut . isBefore ( other . getCheckInDate () ) ) ) return false ; if ( checkIn . isAfter ( other . getCheckOutDate () ) ) return false ; } return true ; } <s> @ java.lang.Override public boolean dmnnqfwlrfcmnmvtdfte ( dw317.hotel.business.interfaces.Reservation other ) { if ( ( aRoom . getNumber () ) == ( other . getRoom () . getNumber () ) ) { if ( ( checkIn . isAfter ( other . getCheckInDate () ) ) && ( checkOut . isBefore ( other . getCheckInDate () ) ) ) return false ; if ( checkIn . isAfter ( other . getCheckOutDate () ) ) return false ; } return true ; } <s> Fixing last issues from the first part -- Denis
fix_before_refactoring: @ java.lang.Override public boolean overlap ( dw317.hotel.business.interfaces.Reservation other ) { if ( this . equals ( other ) ) return true ; if ( ( this . checkIn . isBefore ( other . getCheckOutDate () ) ) && ( this . checkOut . isBefore ( other . getCheckInDate () ) ) ) return true ; return false ; }
fix_after_refactoring: @ java.lang.Override public boolean dmnnqfwlrfcmnmvtdfte ( dw317.hotel.business.interfaces.Reservation other ) { if ( this . equals ( other ) ) return true ; if ( ( this . checkIn . isBefore ( other . getCheckOutDate () ) ) && ( this . checkOut . isBefore ( other . getCheckInDate () ) ) ) return true ; return false ; }
× fix_prediction_before: @ java.lang.Override public boolean overlap ( dw317.hotel.business.interfaces.Reservation other ) { if ( ( this . getNumber () ) == ( other . getRoom () . getNumber () ) ) { if ( ( checkAfterDateInDate ( other . getCheckInDate () ) ) && ( checkBeforeDateInDate ( other . getCheckInDate () ) ) ) return false ; } return true ; }
× fix_prediction_after: @ java.lang.Override public boolean dm ( dmq.lfw.ncmte.mvrfel17.business.interfaces.Reservation other ) { if ( ( this . getNumber () ) == ( other . getRoom () . getNumber () ) ) { if ( ( checkAfterInDate ( other . getCheckInDate () ) ) && ( checkBeforeInDate ( other . getCheckInDate () ) ) ) return true ; } return false ; }

line_index: 484
bug_before_refactoring: public static java.sql.ResultSet getFromDataBase ( java.lang.String query ) { java.sql.Connection con = com.teamSuperior.core.connection.DBConnect . connect ( com.teamSuperior.core.connection.DBConnect.url , com.teamSuperior.core.connection.DBConnect.username , com.teamSuperior.core.connection.DBConnect.password ) ; java.sql.ResultSet rs = null ; try { java.sql.Statement statement = con . createStatement () ; rs = statement . executeQuery ( query ) ; con . close () ; } catch ( java.sql.SQLException ex ) { java.lang.System.out . println ( ex . getMessage () ) ; com.teamSuperior.guiApp.GUI.AlertBox . display ( "Connection Error" , ex . getMessage () ) ; } return rs ; } <s> public static java.sql.ResultSet getFromDataBase ( java.lang.String query ) { java.sql.Connection con = com.teamSuperior.core.connection.DBConnect . connect ( com.teamSuperior.core.connection.DBConnect.url , com.teamSuperior.core.connection.DBConnect.username , com.teamSuperior.core.connection.DBConnect.password ) ; java.sql.ResultSet rs = null ; try { java.sql.Statement statement = con . createStatement () ; rs = statement . executeQuery ( query ) ; con . close () ; } catch ( java.sql.SQLException ex ) { java.lang.System.out . println ( ex . getMessage () ) ; com.teamSuperior.guiApp.GUI.AlertBox . display ( "Connection Error" , ex . getMessage () ) ; } return rs ; } <s> fixed DBConnect issue with retrieving data from the registry
bug_after_refactoring: public static java.sql.ResultSet qfiaeyfvvlclgzdjdjpm ( java.lang.String query ) { java.sql.Connection con = com.teamSuperior.core.connection.DBConnect . connect ( com.teamSuperior.core.connection.DBConnect.url , com.teamSuperior.core.connection.DBConnect.username , com.teamSuperior.core.connection.DBConnect.password ) ; java.sql.ResultSet rs = null ; try { java.sql.Statement statement = con . createStatement () ; rs = statement . executeQuery ( query ) ; con . close () ; } catch ( java.sql.SQLException ex ) { java.lang.System.out . println ( ex . getMessage () ) ; com.teamSuperior.guiApp.GUI.AlertBox . display ( "Connection Error" , ex . getMessage () ) ; } return rs ; } <s> public static java.sql.ResultSet qfiaeyfvvlclgzdjdjpm ( java.lang.String query ) { java.sql.Connection con = com.teamSuperior.core.connection.DBConnect . connect ( com.teamSuperior.core.connection.DBConnect.url , com.teamSuperior.core.connection.DBConnect.username , com.teamSuperior.core.connection.DBConnect.password ) ; java.sql.ResultSet rs = null ; try { java.sql.Statement statement = con . createStatement () ; rs = statement . executeQuery ( query ) ; con . close () ; } catch ( java.sql.SQLException ex ) { java.lang.System.out . println ( ex . getMessage () ) ; com.teamSuperior.guiApp.GUI.AlertBox . display ( "Connection Error" , ex . getMessage () ) ; } return rs ; } <s> fixed DBConnect issue with retrieving data from the registry
fix_before_refactoring: public java.sql.ResultSet getFromDataBase ( java.lang.String query ) { java.sql.Connection con = com.teamSuperior.core.connection.DBConnect . connect ( com.teamSuperior.core.connection.DBConnect.url , com.teamSuperior.core.connection.DBConnect.username , com.teamSuperior.core.connection.DBConnect.password ) ; java.sql.ResultSet rs = null ; try { java.sql.Statement statement = con . createStatement () ; rs = statement . executeQuery ( query ) ; con . close () ; } catch ( java.sql.SQLException ex ) { java.lang.System.out . println ( ex . getMessage () ) ; com.teamSuperior.guiApp.GUI.AlertBox . display ( "Connection Error" , ex . getMessage () ) ; } return rs ; }
fix_after_refactoring: public java.sql.ResultSet qfiaeyfvvlclgzdjdjpm ( java.lang.String query ) { java.sql.Connection con = com.teamSuperior.core.connection.DBConnect . connect ( com.teamSuperior.core.connection.DBConnect.url , com.teamSuperior.core.connection.DBConnect.username , com.teamSuperior.core.connection.DBConnect.password ) ; java.sql.ResultSet rs = null ; try { java.sql.Statement statement = con . createStatement () ; rs = statement . executeQuery ( query ) ; con . close () ; } catch ( java.sql.SQLException ex ) { java.lang.System.out . println ( ex . getMessage () ) ; com.teamSuperior.guiApp.GUI.AlertBox . display ( "Connection Error" , ex . getMessage () ) ; } return rs ; }
× fix_prediction_before: private static java.sql.ResultSetConnection getFromDataBase ( java.lang.String query ) { java.sql.Connection con = com.teamior.core.connection.SuperConnect.connection . connect ( com.teamior.core.connection.SuperConnect.url , com.teamior.core.connection.SuperConnect.username , com.teamior.core.connection.SuperConnect.password ) ; try { java.sql.ResultSet rs = con . createStatement () ; rs . executeQuery ( query ) ; } catch ( java.sql.SQLException ex ) { java.lang.System.out . println ( ex . getMessage () ) ; } com.teamior.core.GUI . displayAlert ( "GUI Error" , ex . getMessage () ) ; return null ; }
× fix_prediction_after: public static java.sql.ResultSet rs ; java.lang.String query ; java.sql.Connection con = com.teamiorteam.core.connection.SuperConnect.connection . connect ( com.teamiorteam.core.connection.SuperConnect.url , com.teamiorteam.core.connection.SuperConnect.username , com.teamiorteam.core.connection.SuperConnect.password ) ; try { java.sql.ResultSet rs = con . createStatement () ; rs . executeQuery ( query ) ; } catch ( java.sql.SQLException ex ) { java.lang.System.out . println ( ex . getMessage () ) ; ex . close () ; } return rs ; }

line_index: 485
bug_before_refactoring: public final int readCharacter ( final char . . . allowed ) throws java.io.IOException { char c ; java.util.Arrays . sort ( allowed ) ; while ( ( java.util.Arrays . binarySearch ( allowed , ( c = ( ( char ) ( readCharater () ) ) ) ) ) < 0 ) {} return c ; } <s> public final int readCharacter ( final char . . . allowed ) throws java.io.IOException { char c ; java.util.Arrays . sort ( allowed ) ; while ( ( java.util.Arrays . binarySearch ( allowed , ( c = ( ( char ) ( readCharater () ) ) ) ) ) < 0 ) {} return c ; } <s> Possible fix for Issue #8 : readCharacter() not returning
bug_after_refactoring: public final int liffvlwqvgwvuwdsqbwu ( final char . . . allowed ) throws java.io.IOException { char c ; java.util.Arrays . sort ( allowed ) ; while ( ( java.util.Arrays . binarySearch ( allowed , ( c = ( ( char ) ( readCharater () ) ) ) ) ) < 0 ) {} return c ; } <s> public final int liffvlwqvgwvuwdsqbwu ( final char . . . allowed ) throws java.io.IOException { char c ; java.util.Arrays . sort ( allowed ) ; while ( ( java.util.Arrays . binarySearch ( allowed , ( c = ( ( char ) ( readCharater () ) ) ) ) ) < 0 ) {} return c ; } <s> Possible fix for Issue #8 : readCharacter() not returning
fix_before_refactoring: public final int readCharacter ( final char . . . allowed ) throws java.io.IOException { char c ; java.util.Arrays . sort ( allowed ) ; while ( ( java.util.Arrays . binarySearch ( allowed , ( c = ( ( char ) ( readCharacter () ) ) ) ) ) < 0 ) {} return c ; }
fix_after_refactoring: public final int liffvlwqvgwvuwdsqbwu ( final char . . . allowed ) throws java.io.IOException { char c ; java.util.Arrays . sort ( allowed ) ; while ( ( java.util.Arrays . binarySearch ( allowed , ( c = ( ( char ) ( liffvlwqvgwvuwdsqbwu () ) ) ) ) ) < 0 ) {} return c ; }
× fix_prediction_before: public int readCharacter ( final char [] c ) throws java.io.IOException { char allowed = java.util.Arrays . sort ( c ) ; while ( allowed . allowed ( ( ( java.util.Arrays . binarySearch ( c ) ) + "\n" ) , ( ( char ) ( allowed . readChar () ) ) ) ) {} return c ; }
× fix_prediction_after: public final int liffvlwqv.gwwudsqw.gwwudsqbw.uqbw.util. . allowed ( final char c ) throws java.io.IOException { java.util.Arrays . sort ( c ) ; while ( allowed . allowed ( ( ( char ) ( c . binarySearch () ) ) , ( ( char ) ( c . readChar () ) ) ) ) { c = c . readChar () ; } return c ; }

line_index: 486
bug_before_refactoring: private int depth ( org.pg4200.datastructure.map.tree.BinaryTreeMap < K , V > . TreeNode node ) { int leftDepth = 0 ; int rightDepth = 0 ; if ( ( node.left ) != null ) { leftDepth = depth ( node.left ) ; } if ( ( node.right ) != null ) { rightDepth = depth ( node.right ) ; } return 1 + ( java.lang.Math . max ( leftDepth , rightDepth ) ) ; } <s> private int depth ( org.pg4200.datastructure.map.tree.BinaryTreeMap < K , V > . TreeNode node ) { int leftDepth = 0 ; int rightDepth = 0 ; if ( ( node.left ) != null ) { leftDepth = depth ( node.left ) ; } if ( ( node.right ) != null ) { rightDepth = depth ( node.right ) ; } return 1 + ( java.lang.Math . max ( leftDepth , rightDepth ) ) ; } <s> fixed bugs  added more tests
bug_after_refactoring: private int zgjtryjylczexzvpltys ( org.pg4200.datastructure.map.tree.BinaryTreeMap < K , V > . TreeNode node ) { int leftDepth = 0 ; int rightDepth = 0 ; if ( ( node.left ) != null ) { leftDepth = zgjtryjylczexzvpltys ( node.left ) ; } if ( ( node.right ) != null ) { rightDepth = zgjtryjylczexzvpltys ( node.right ) ; } return 1 + ( java.lang.Math . max ( leftDepth , rightDepth ) ) ; } <s> private int zgjtryjylczexzvpltys ( org.pg4200.datastructure.map.tree.BinaryTreeMap < K , V > . TreeNode node ) { int leftDepth = 0 ; int rightDepth = 0 ; if ( ( node.left ) != null ) { leftDepth = zgjtryjylczexzvpltys ( node.left ) ; } if ( ( node.right ) != null ) { rightDepth = zgjtryjylczexzvpltys ( node.right ) ; } return 1 + ( java.lang.Math . max ( leftDepth , rightDepth ) ) ; } <s> fixed bugs  added more tests
fix_before_refactoring: protected int depth ( org.pg4200.datastructure.map.tree.BinaryTreeMap < K , V > . TreeNode node ) { int leftDepth = 0 ; int rightDepth = 0 ; if ( ( node.left ) != null ) { leftDepth = depth ( node.left ) ; } if ( ( node.right ) != null ) { rightDepth = depth ( node.right ) ; } return 1 + ( java.lang.Math . max ( leftDepth , rightDepth ) ) ; }
fix_after_refactoring: protected int zgjtryjylczexzvpltys ( org.pg4200.datastructure.map.tree.BinaryTreeMap < K , V > . TreeNode node ) { int leftDepth = 0 ; int rightDepth = 0 ; if ( ( node.left ) != null ) { leftDepth = zgjtryjylczexzvpltys ( node.left ) ; } if ( ( node.right ) != null ) { rightDepth = zgjtryjylczexzvpltys ( node.right ) ; } return 1 + ( java.lang.Math . max ( leftDepth , rightDepth ) ) ; }
× fix_prediction_before: private int depth ( org.pg4200.datastructure.maptree.BinaryTree.Map < K , V > node ) { int leftDepth = 0 ; int rightDepth = 0 ; if ( node != null ) { leftDepth = node.left ; } if ( depth != ( node.rightDepth ) ) { rightDepth = ( node.rightDepth ) + 1 ; } return ( java.lang.Math . max ( ( depth + 1 ) , rightDepth ) ) + 1 ; }
× fix_prediction_after: private int zgjtryjylexvpls ( org.spgty200pgvpls.datastructure.map.BinaryTree < K , V > node ) { int leftDepth = 0 ; int rightDepth = 0 ; if ( node != null ) { leftDepth = ( ( zgtryjylexvpls.leftexty.Depth ) ( node ) ) ; } if ( rightDepth != ( - 1 ) ) { zgtryjylexvpls.rightexty.Depth right = ( ( zgtryjylexvpls.rightexty.Depth ) ( node ) ) ; if ( right != null ) { return java.lang.Math . max ( ( ( zgtryjylexvpls.rightexty.Depth ) + 1 ) , rightDepth ) ; } } return 0 ; }

line_index: 487
bug_before_refactoring: public boolean isOn () { boolean bRet = false ; if ( ! ( this . getStatus () . equals ( "" ) ) ) { if ( ( this . getMatchRegexOn () ) == 1 ) { bRet = this . getStatus () . equals ( this . getRegexStatus () ) ; } else { bRet = ! ( this . getStatus () . equals ( this . getRegexStatus () ) ) ; } } return bRet ; } <s> public boolean isOn () { boolean bRet = false ; if ( ! ( this . getStatus () . equals ( "" ) ) ) { if ( ( this . getMatchRegexOn () ) == 1 ) { bRet = this . getStatus () . equals ( this . getRegexStatus () ) ; } else { bRet = ! ( this . getStatus () . equals ( this . getRegexStatus () ) ) ; } } return bRet ; } <s> Fixed #10: [feature] make all exec calls threaded  http://github.com/asksven/CommandCenter/issues/issue/10
bug_after_refactoring: public boolean dokrnvqijpumorilxjrx () { boolean bRet = false ; if ( ! ( this . getStatus () . equals ( "" ) ) ) { if ( ( this . getMatchRegexOn () ) == 1 ) { bRet = this . getStatus () . equals ( this . getRegexStatus () ) ; } else { bRet = ! ( this . getStatus () . equals ( this . getRegexStatus () ) ) ; } } return bRet ; } <s> public boolean dokrnvqijpumorilxjrx () { boolean bRet = false ; if ( ! ( this . getStatus () . equals ( "" ) ) ) { if ( ( this . getMatchRegexOn () ) == 1 ) { bRet = this . getStatus () . equals ( this . getRegexStatus () ) ; } else { bRet = ! ( this . getStatus () . equals ( this . getRegexStatus () ) ) ; } } return bRet ; } <s> Fixed #10: [feature] make all exec calls threaded  http://github.com/asksven/CommandCenter/issues/issue/10
fix_before_refactoring: private boolean isOn () { boolean bRet = false ; if ( ! ( this . getStatus () . equals ( "" ) ) ) { if ( ( this . getMatchRegexOn () ) == 1 ) { bRet = this . getStatus () . equals ( this . getRegexStatus () ) ; } else { bRet = ! ( this . getStatus () . equals ( this . getRegexStatus () ) ) ; } } return bRet ; }
fix_after_refactoring: private boolean dokrnvqijpumorilxjrx () { boolean bRet = false ; if ( ! ( this . getStatus () . equals ( "" ) ) ) { if ( ( this . getMatchRegexOn () ) == 1 ) { bRet = this . getStatus () . equals ( this . getRegexStatus () ) ; } else { bRet = ! ( this . getStatus () . equals ( this . getRegexStatus () ) ) ; } } return bRet ; }
× fix_prediction_before: public boolean isOn () { boolean bRet = false ; if ( ( this . getStatus () ) == "" ) { bRet = this . getMatchOnRegex () ; } else if ( ( this . getStatus () ) == 1 ) { bRet = this . getRegex () . equals ( this . getStatus () ) ; } else { bRet = this . getRegex () . equals ( this . getStatus () ) ; } return bRet ; }
× fix_prediction_after: public boolean dokrijqporumiljilrxx.Regex bRet = false ; boolean bRet = false ; if ( ( this . getStatus () ) == ( "" ) ) { if ( ( this . getStatus () ) == ( bRet . getMatchRegex () ) ) { bRet = this . getRegex () . equals ( this . getStatus () ) ; } else { bRet = this . getRegex () . equals ( this . getStatus () ) ; } } return bRet ; }

line_index: 488
bug_before_refactoring: protected static org.olap4j.mdx.IdentifierNode getIdentifier ( org.saiku.query.AbstractQuerySet . . . identifiers ) { java.lang.String identifier = "" ; for ( int i = 0 ; i < ( identifiers.length ) ; i ++ ) { if ( i == 0 ) { identifier = "~" + ( identifiers [ 0 ] . getName () ) ; } else { identifier += "_" + ( identifiers [ i ] . getName () ) ; } } return org.olap4j.mdx.IdentifierNode . ofNames ( identifier ) ; } <s> protected static org.olap4j.mdx.IdentifierNode getIdentifier ( org.saiku.query.AbstractQuerySet . . . identifiers ) { java.lang.String identifier = "" ; for ( int i = 0 ; i < ( identifiers.length ) ; i ++ ) { if ( i == 0 ) { identifier = "~" + ( identifiers [ 0 ] . getName () ) ; } else { identifier += "_" + ( identifiers [ i ] . getName () ) ; } } return org.olap4j.mdx.IdentifierNode . ofNames ( identifier ) ; } <s> fix hierarchy unique name issue
bug_after_refactoring: protected static org.olap4j.mdx.IdentifierNode vkdsyfqxdeyfjobtobla ( org.saiku.query.AbstractQuerySet . . . identifiers ) { java.lang.String identifier = "" ; for ( int i = 0 ; i < ( identifiers.length ) ; i ++ ) { if ( i == 0 ) { identifier = "~" + ( identifiers [ 0 ] . getName () ) ; } else { identifier += "_" + ( identifiers [ i ] . getName () ) ; } } return org.olap4j.mdx.IdentifierNode . ofNames ( identifier ) ; } <s> protected static org.olap4j.mdx.IdentifierNode vkdsyfqxdeyfjobtobla ( org.saiku.query.AbstractQuerySet . . . identifiers ) { java.lang.String identifier = "" ; for ( int i = 0 ; i < ( identifiers.length ) ; i ++ ) { if ( i == 0 ) { identifier = "~" + ( identifiers [ 0 ] . getName () ) ; } else { identifier += "_" + ( identifiers [ i ] . getName () ) ; } } return org.olap4j.mdx.IdentifierNode . ofNames ( identifier ) ; } <s> fix hierarchy unique name issue
fix_before_refactoring: protected static org.olap4j.mdx.IdentifierNode getIdentifier ( java.lang.String . . . identifiers ) { java.lang.String identifier = "" ; for ( int i = 0 ; i < ( identifiers.length ) ; i ++ ) { if ( i == 0 ) { identifier = "~" + ( identifiers [ 0 ] ) ; } else { identifier += "_" + ( identifiers [ i ] ) ; } } return org.olap4j.mdx.IdentifierNode . ofNames ( identifier ) ; }
fix_after_refactoring: protected static org.olap4j.mdx.IdentifierNode vkdsyfqxdeyfjobtobla ( java.lang.String . . . identifiers ) { java.lang.String identifier = "" ; for ( int i = 0 ; i < ( identifiers.length ) ; i ++ ) { if ( i == 0 ) { identifier = "~" + ( identifiers [ 0 ] ) ; } else { identifier += "_" + ( identifiers [ i ] ) ; } } return org.olap4j.mdx.IdentifierNode . ofNames ( identifier ) ; }
× fix_prediction_before: public static org.olap4j.mdx.NodeIdentifier getIdentifier ( org.olap4j.sau.query.AbstractNodeIdentifier . . . . name ) { for ( int i = 0 ; i < (oss.length ) ; i ++ ) { if ( ( identifier . getName () [ i ] ) == "~" ) { identifier . append ( ( ( org.olap4j.mdx.NodeIdentifier . getName () [ i ] . getName () ) + "_" ) ) ; } else { identifier . append ( "_" ) ; } } return identifier . toString () ; }
× fix_prediction_after: public static org.olap4j.mdx.kIdentifier vdsdsto ( org.blaeyf.job.Node v ) { java.lang.String name = "" ; for ( int i = 0 ; i < ( game.length ) ; i ++ ) { if ( ( identifier + "~" ) == 0 ) { name = identifier + ( v . getName () [ i ] . getName () ) ; } else { name += "_" ; } } return name ; }

line_index: 489
bug_before_refactoring: private int getPlayerRank () { int rank = - 1 ; int count = 0 ; for ( int i = 0 ; i < ( Game.HI_SCORES . size () ) ; i ++ ) { if ( ( player . getScore () ) >= ( Game.HI_SCORES . get ( i ) . getScore () ) ) rank = ( Game.HI_SCORES . size () ) - ( ++ count ) ; } return rank ; } <s> private int getPlayerRank () { int rank = - 1 ; int count = 0 ; for ( int i = 0 ; i < ( Game.HI_SCORES . size () ) ; i ++ ) { if ( ( player . getScore () ) >= ( Game.HI_SCORES . get ( i ) . getScore () ) ) rank = ( Game.HI_SCORES . size () ) - ( ++ count ) ; } return rank ; } <s> Fixed bug where player is prompted to enter initials more than once.
bug_after_refactoring: private int xngijgbqwsjfshctuoyn () { int rank = - 1 ; int count = 0 ; for ( int i = 0 ; i < ( Game.HI_SCORES . size () ) ; i ++ ) { if ( ( player . getScore () ) >= ( Game.HI_SCORES . get ( i ) . getScore () ) ) rank = ( Game.HI_SCORES . size () ) - ( ++ count ) ; } return rank ; } <s> private int xngijgbqwsjfshctuoyn () { int rank = - 1 ; int count = 0 ; for ( int i = 0 ; i < ( Game.HI_SCORES . size () ) ; i ++ ) { if ( ( player . getScore () ) >= ( Game.HI_SCORES . get ( i ) . getScore () ) ) rank = ( Game.HI_SCORES . size () ) - ( ++ count ) ; } return rank ; } <s> Fixed bug where player is prompted to enter initials more than once.
fix_before_refactoring: public int getPlayerRank () { int rank = - 1 ; int count = 0 ; for ( int i = 0 ; i < ( Game.HI_SCORES . size () ) ; i ++ ) { if ( ( player . getScore () ) >= ( Game.HI_SCORES . get ( i ) . getScore () ) ) rank = ( Game.HI_SCORES . size () ) - ( ++ count ) ; } return rank ; }
fix_after_refactoring: public int xngijgbqwsjfshctuoyn () { int rank = - 1 ; int count = 0 ; for ( int i = 0 ; i < ( Game.HI_SCORES . size () ) ; i ++ ) { if ( ( player . getScore () ) >= ( Game.HI_SCORES . get ( i ) . getScore () ) ) rank = ( Game.HI_SCORES . size () ) - ( ++ count ) ; } return rank ; }
× fix_prediction_before: public int getPlayerRank () { int rank = - 1 ; int count = 0 ; for ( int i = 0 ; i < ( Game.CORES_HICOS . size () ) ; i ++ ) { if ( ( player . getScore () . get ( i ) . getScore () ) >= ( Game.CORES_HICOS . size () ) ) rank = rank - ( Game.CORES_HICOS . size () ) ; count ++ ; } return count ; }
× fix_prediction_after: public int xngijgbq () { int count = 0 ; for ( int i = 0 ; i < ( Game.CORES_HICORES ) ; i ++ ) { if ( ( player . getScore () . get ( i ) . getScore () ) >= ( Game.CORES_HICORESS ) ) count ++ ; } return count ; }

line_index: 490
bug_before_refactoring: @ org.junit.Test public void test12_getRows () { try { deleteRows () ; test01_addRowPass () ; test01_addRowPass () ; com.jayway.restassured.module.mockmvc.RestAssuredMockMvc . given () . header ( getHeader () ) . contentType ( "application/json" ) . when () . get ( "/api/restricted/session" ) . then () . statusCode ( 200 ) . body ( "size()" , org.hamcrest.core.IsEqual . equalTo ( 2 ) ) ; } catch ( com.google.gdata.util.ServiceException | com.google.appengine.api.datastore.EntityNotFoundException | java.io.IOException e ) { e . printStackTrace () ; } } <s> @ org.junit.Test public void test12_getRows () { try { deleteRows () ; test01_addRowPass () ; test01_addRowPass () ; com.jayway.restassured.module.mockmvc.RestAssuredMockMvc . given () . header ( getHeader () ) . contentType ( "application/json" ) . when () . get ( "/api/restricted/session" ) . then () . statusCode ( 200 ) . body ( "size()" , org.hamcrest.core.IsEqual . equalTo ( 2 ) ) ; } catch ( com.google.gdata.util.ServiceException | com.google.appengine.api.datastore.EntityNotFoundException | java.io.IOException e ) { e . printStackTrace () ; } } <s> fix: revert failing test due to google service error 502  This reverts commit 6f7723f7bdca44d2b7f4bcdec4004f6646185d70.
bug_after_refactoring: @ org.junit.Test public void crkbwyvxamyxxvigjdtt () { try { deleteRows () ; test01_addRowPass () ; test01_addRowPass () ; com.jayway.restassured.module.mockmvc.RestAssuredMockMvc . given () . header ( getHeader () ) . contentType ( "application/json" ) . when () . get ( "/api/restricted/session" ) . then () . statusCode ( 200 ) . body ( "size()" , org.hamcrest.core.IsEqual . equalTo ( 2 ) ) ; } catch ( com.google.gdata.util.ServiceException | com.google.appengine.api.datastore.EntityNotFoundException | java.io.IOException e ) { e . printStackTrace () ; } } <s> @ org.junit.Test public void crkbwyvxamyxxvigjdtt () { try { deleteRows () ; test01_addRowPass () ; test01_addRowPass () ; com.jayway.restassured.module.mockmvc.RestAssuredMockMvc . given () . header ( getHeader () ) . contentType ( "application/json" ) . when () . get ( "/api/restricted/session" ) . then () . statusCode ( 200 ) . body ( "size()" , org.hamcrest.core.IsEqual . equalTo ( 2 ) ) ; } catch ( com.google.gdata.util.ServiceException | com.google.appengine.api.datastore.EntityNotFoundException | java.io.IOException e ) { e . printStackTrace () ; } } <s> fix: revert failing test due to google service error 502  This reverts commit 6f7723f7bdca44d2b7f4bcdec4004f6646185d70.
fix_before_refactoring: @ org.junit.Test public void test12_getRows () { deleteRows () ; test01_addRowPass () ; test01_addRowPass () ; com.jayway.restassured.module.mockmvc.RestAssuredMockMvc . given () . header ( getHeader () ) . contentType ( "application/json" ) . when () . get ( "/api/restricted/session" ) . then () . statusCode ( 200 ) . body ( "size()" , org.hamcrest.core.IsEqual . equalTo ( 2 ) ) ; }
fix_after_refactoring: @ org.junit.Test public void crkbwyvxamyxxvigjdtt () { deleteRows () ; test01_addRowPass () ; test01_addRowPass () ; com.jayway.restassured.module.mockmvc.RestAssuredMockMvc . given () . header ( getHeader () ) . contentType ( "application/json" ) . when () . get ( "/api/restricted/session" ) . then () . statusCode ( 200 ) . body ( "size()" , org.hamcrest.core.IsEqual . equalTo ( 2 ) ) ; }
× fix_prediction_before: @ org.junit.Test public void test12_getRows () { deleteRows () ; test.addRowPass () ; test.addRowPass () ; com.jayway.restassured.module.mockmvc.RestAssuredMockMvc . given () . header ( getHeader () . contentType ( "application/json" ) . when () . then () . statusCode ( 200 ) . getEqual ( "size()" , org.hamcrest.core.IsEqual . equalTo ( 2 ) ) ; }
× fix_prediction_after: @ org.junit.Test public void crkbwxvigyxxxtRows () { deleteRows () ; testaddRowPass () ; com.jayway.restassured.module.mockmvc.RestAssuredMockMvc . given () . header ( getHeader () . contentType ( "application/json" ) . when () . get ( "/api/data" ) , org.hamcrest.core.IsEqual . equalTo ( 200 ) ) ; }

line_index: 491
bug_before_refactoring: public void setMatrixMode ( final org.anddev.andengine.opengl.util.GLMatrixStacks.MatrixMode pMatrixMode ) { this . mMatrixMode = pMatrixMode ; switch ( this . mMatrixMode ) { case PROJECTION : this . mCurrentGLMatrixStack = this . mProjectionGLMatrixStack ; return; case MODELVIEW : this . mCurrentGLMatrixStack = this . mModelViewGLMatrixStack ; return; default: throw new java.lang.IllegalArgumentException ( ( ( ( ( "Unexpected " + ( org.anddev.andengine.opengl.util.GLMatrixStacks.MatrixMode . class . getSimpleName () ) ) + ": '" ) + pMatrixMode ) + "'." ) ) ; } } <s> public void setMatrixMode ( final org.anddev.andengine.opengl.util.GLMatrixStacks.MatrixMode pMatrixMode ) { this . mMatrixMode = pMatrixMode ; switch ( this . mMatrixMode ) { case PROJECTION : this . mCurrentGLMatrixStack = this . mProjectionGLMatrixStack ; return; case MODELVIEW : this . mCurrentGLMatrixStack = this . mModelViewGLMatrixStack ; return; default: throw new java.lang.IllegalArgumentException ( ( ( ( ( "Unexpected " + ( org.anddev.andengine.opengl.util.GLMatrixStacks.MatrixMode . class . getSimpleName () ) ) + ": '" ) + pMatrixMode ) + "'." ) ) ; } } <s> Fixed potential bug in TextureManager. MInor changes in GLMatrixStack(s).
bug_after_refactoring: public void qzwubvyldievdlzbjkgy ( final org.anddev.andengine.opengl.util.GLMatrixStacks.MatrixMode pMatrixMode ) { this . mMatrixMode = pMatrixMode ; switch ( this . mMatrixMode ) { case PROJECTION : this . mCurrentGLMatrixStack = this . mProjectionGLMatrixStack ; return; case MODELVIEW : this . mCurrentGLMatrixStack = this . mModelViewGLMatrixStack ; return; default: throw new java.lang.IllegalArgumentException ( ( ( ( ( "Unexpected " + ( org.anddev.andengine.opengl.util.GLMatrixStacks.MatrixMode . class . getSimpleName () ) ) + ": '" ) + pMatrixMode ) + "'." ) ) ; } } <s> public void qzwubvyldievdlzbjkgy ( final org.anddev.andengine.opengl.util.GLMatrixStacks.MatrixMode pMatrixMode ) { this . mMatrixMode = pMatrixMode ; switch ( this . mMatrixMode ) { case PROJECTION : this . mCurrentGLMatrixStack = this . mProjectionGLMatrixStack ; return; case MODELVIEW : this . mCurrentGLMatrixStack = this . mModelViewGLMatrixStack ; return; default: throw new java.lang.IllegalArgumentException ( ( ( ( ( "Unexpected " + ( org.anddev.andengine.opengl.util.GLMatrixStacks.MatrixMode . class . getSimpleName () ) ) + ": '" ) + pMatrixMode ) + "'." ) ) ; } } <s> Fixed potential bug in TextureManager. MInor changes in GLMatrixStack(s).
fix_before_refactoring: public void setMatrixMode ( final org.anddev.andengine.opengl.util.GLMatrixStacks.MatrixMode pMatrixMode ) { if ( pMatrixMode != ( this . mMatrixMode ) ) { this . mMatrixMode = pMatrixMode ; switch ( this . mMatrixMode ) { case PROJECTION : this . mCurrentGLMatrixStack = this . mProjectionGLMatrixStack ; return; case MODELVIEW : this . mCurrentGLMatrixStack = this . mModelViewGLMatrixStack ; return; default: throw new java.lang.IllegalArgumentException ( ( ( ( ( "Unexpected " + ( org.anddev.andengine.opengl.util.GLMatrixStacks.MatrixMode . class . getSimpleName () ) ) + ": '" ) + pMatrixMode ) + "'." ) ) ; } } }
fix_after_refactoring: public void qzwubvyldievdlzbjkgy ( final org.anddev.andengine.opengl.util.GLMatrixStacks.MatrixMode pMatrixMode ) { if ( pMatrixMode != ( this . mMatrixMode ) ) { this . mMatrixMode = pMatrixMode ; switch ( this . mMatrixMode ) { case PROJECTION : this . mCurrentGLMatrixStack = this . mProjectionGLMatrixStack ; return; case MODELVIEW : this . mCurrentGLMatrixStack = this . mModelViewGLMatrixStack ; return; default: throw new java.lang.IllegalArgumentException ( ( ( ( ( "Unexpected " + ( org.anddev.andengine.opengl.util.GLMatrixStacks.MatrixMode . class . getSimpleName () ) ) + ": '" ) + pMatrixMode ) + "'." ) ) ; } } }
× fix_prediction_before: public void setMatrixMode ( final org.anddevandengine.opengl.util.GLMatrix.MatrixMode pMatrix ) { this . mMatrixMode = pMatrix ; switch ( mMatrixStack ) { case PRO : this . mMatrixStack = mGLMatrixStack ; break; caseorder : this . mMatrixStack = mGLMatrixStack ; break; default: return; } }
× fix_prediction_after: public void qzwubvyldk.bjkdl.bjanengine.opengl.util.GLMatrixMode pStackMatrixMode ( final org.zgl.Matrix pMatrixMode ) { this . mMatrixMode = pMatrixMode ; switch ( mMatrixMode ) { case PRO : this . mMatrixStack = mGLMatrixStack ; break; case PVIEW : this . mMatrixStack = mGLMatrixStack ; break; default: this . mMatrixStack = new java.lang.IllegalArgumentException ( ( ( ( "Unexpected mCurrentMatrix: '" + ( pMatrix . getSimpleName () ) ) + ":'." ) + "'." ) ) ; break; } }

line_index: 492
bug_before_refactoring: private int getXLocation ( int position , com.edulectronics.tinycircuit.Models.Components.Connectors.ConnectionPointOrientation orientation ) { switch ( orientation ) { case Top : case Bottom : return ( ( ( getColumn ( position ) ) - 1 ) * ( cellSize ) ) + ( ( int ) ( 0.5 * ( cellSize ) ) ) ; case Left : return ( ( getColumn ( position ) ) - 1 ) * ( cellSize ) ; default: return ( getColumn ( position ) ) * ( cellSize ) ; } } <s> private int getXLocation ( int position , com.edulectronics.tinycircuit.Models.Components.Connectors.ConnectionPointOrientation orientation ) { switch ( orientation ) { case Top : case Bottom : return ( ( ( getColumn ( position ) ) - 1 ) * ( cellSize ) ) + ( ( int ) ( 0.5 * ( cellSize ) ) ) ; case Left : return ( ( getColumn ( position ) ) - 1 ) * ( cellSize ) ; default: return ( getColumn ( position ) ) * ( cellSize ) ; } } <s> Two more tests and a bugfix
bug_after_refactoring: private int ykidqdbenqyoxqwviyky ( int position , com.edulectronics.tinycircuit.Models.Components.Connectors.ConnectionPointOrientation orientation ) { switch ( orientation ) { case Top : case Bottom : return ( ( ( getColumn ( position ) ) - 1 ) * ( cellSize ) ) + ( ( int ) ( 0.5 * ( cellSize ) ) ) ; case Left : return ( ( getColumn ( position ) ) - 1 ) * ( cellSize ) ; default: return ( getColumn ( position ) ) * ( cellSize ) ; } } <s> private int ykidqdbenqyoxqwviyky ( int position , com.edulectronics.tinycircuit.Models.Components.Connectors.ConnectionPointOrientation orientation ) { switch ( orientation ) { case Top : case Bottom : return ( ( ( getColumn ( position ) ) - 1 ) * ( cellSize ) ) + ( ( int ) ( 0.5 * ( cellSize ) ) ) ; case Left : return ( ( getColumn ( position ) ) - 1 ) * ( cellSize ) ; default: return ( getColumn ( position ) ) * ( cellSize ) ; } } <s> Two more tests and a bugfix
fix_before_refactoring: public int getXLocation ( int position , com.edulectronics.tinycircuit.Models.Components.Connectors.ConnectionPointOrientation orientation ) { switch ( orientation ) { case Top : case Bottom : return ( ( ( getColumn ( position ) ) - 1 ) * ( cellSize ) ) + ( ( int ) ( 0.5 * ( cellSize ) ) ) ; case Left : return ( ( getColumn ( position ) ) - 1 ) * ( cellSize ) ; default: return ( getColumn ( position ) ) * ( cellSize ) ; } }
fix_after_refactoring: public int ykidqdbenqyoxqwviyky ( int position , com.edulectronics.tinycircuit.Models.Components.Connectors.ConnectionPointOrientation orientation ) { switch ( orientation ) { case Top : case Bottom : return ( ( ( getColumn ( position ) ) - 1 ) * ( cellSize ) ) + ( ( int ) ( 0.5 * ( cellSize ) ) ) ; case Left : return ( ( getColumn ( position ) ) - 1 ) * ( cellSize ) ; default: return ( getColumn ( position ) ) * ( cellSize ) ; } }
× fix_prediction_before: public int getXLocation ( int position , com.edulectronics.tinycircuit.Models.Components.Connection.Orientation orientation ) { switch ( position ) { case Top : return ( getColumn ( ( position - 1 ) ) ) * ( ( cellSize ) * 0.5 ) ; case Left : return ( ( int ) ( ( ( cellSize ) - ( position * ( getColumn ( cellSize ) ) ) * ( getColumn ( cellSize ) ) ) ) ) ; default: return ( getColumn ( ( position - 1 ) ) ) * ( getColumn ( cellSize ) ) ; } }
× fix_prediction_after: private int ykidqen ( com.qwoxyuqvi.kyy.tinycircuitics.Models.Components.Connection.Orientation orientation ) { switch ( orientation ) { case Top : return ( ( int ) ( ( ( positionSize ) * ( getColumnSize ( cellSize ) ) ) * ( ( getColumnSize ( cellSize ) ) - 0.5 ) ) ) ; case Left : return ( ( int ) ( ( ( positionSize ) * ( getColumnSize ( cellSize ) ) ) * ( ( getColumnSize ( cellSize ) ) - 0.5 ) ) ) ; default: return 1 ; } }

line_index: 493
bug_before_refactoring: private final java.lang.Float calculateRate ( final java.lang.Long counterValue , final java.util.concurrent.TimeUnit timeUnit ) { java.lang.Float result = null ; if ( counterValue != null ) { final java.lang.Long durationInNs = getDurationInNs () ; if ( ( durationInNs != null ) && ( ( durationInNs . longValue () ) > 0L ) ) { result = ( counterValue * ( ( float ) ( java.util.concurrent.TimeUnit.NANOSECONDS . convert ( 1 , timeUnit ) ) ) ) / ( ( float ) ( durationInNs ) ) ; } } return result ; } <s> private final java.lang.Float calculateRate ( final java.lang.Long counterValue , final java.util.concurrent.TimeUnit timeUnit ) { java.lang.Float result = null ; if ( counterValue != null ) { final java.lang.Long durationInNs = getDurationInNs () ; if ( ( durationInNs != null ) && ( ( durationInNs . longValue () ) > 0L ) ) { result = ( counterValue * ( ( float ) ( java.util.concurrent.TimeUnit.NANOSECONDS . convert ( 1 , timeUnit ) ) ) ) / ( ( float ) ( durationInNs ) ) ; } } return result ; } <s> :art: Fixed issue #31
bug_after_refactoring: private final java.lang.Float ufinxerqhynphlymnpvs ( final java.lang.Long counterValue , final java.util.concurrent.TimeUnit timeUnit ) { java.lang.Float result = null ; if ( counterValue != null ) { final java.lang.Long durationInNs = getDurationInNs () ; if ( ( durationInNs != null ) && ( ( durationInNs . longValue () ) > 0L ) ) { result = ( counterValue * ( ( float ) ( java.util.concurrent.TimeUnit.NANOSECONDS . convert ( 1 , timeUnit ) ) ) ) / ( ( float ) ( durationInNs ) ) ; } } return result ; } <s> private final java.lang.Float ufinxerqhynphlymnpvs ( final java.lang.Long counterValue , final java.util.concurrent.TimeUnit timeUnit ) { java.lang.Float result = null ; if ( counterValue != null ) { final java.lang.Long durationInNs = getDurationInNs () ; if ( ( durationInNs != null ) && ( ( durationInNs . longValue () ) > 0L ) ) { result = ( counterValue * ( ( float ) ( java.util.concurrent.TimeUnit.NANOSECONDS . convert ( 1 , timeUnit ) ) ) ) / ( ( float ) ( durationInNs ) ) ; } } return result ; } <s> :art: Fixed issue #31
fix_before_refactoring: private final java.lang.Float calculateRate ( final java.lang.Long counterValue , final java.lang.Long durationInNs , final java.util.concurrent.TimeUnit timeUnit ) { java.lang.Float result = null ; if ( ( ( counterValue != null ) && ( durationInNs != null ) ) && ( ( durationInNs . longValue () ) > 0L ) ) { result = ( counterValue * ( ( float ) ( java.util.concurrent.TimeUnit.NANOSECONDS . convert ( 1 , timeUnit ) ) ) ) / ( ( float ) ( durationInNs ) ) ; } return result ; }
fix_after_refactoring: private final java.lang.Float ufinxerqhynphlymnpvs ( final java.lang.Long counterValue , final java.lang.Long durationInNs , final java.util.concurrent.TimeUnit timeUnit ) { java.lang.Float result = null ; if ( ( ( counterValue != null ) && ( durationInNs != null ) ) && ( ( durationInNs . longValue () ) > 0L ) ) { result = ( counterValue * ( ( float ) ( java.util.concurrent.TimeUnit.NANOSECONDS . convert ( 1 , timeUnit ) ) ) ) / ( ( float ) ( durationInNs ) ) ; } return result ; }
× fix_prediction_before: private final java.lang.Float calculateRate ( final java.lang.Long counterValue , final java.util.concurrent.TimeUnit result ) { final java.lang.Float duration = null ; if ( ( ( durationInNs ) != null ) && ( ( durationInNs . longValue () ) > 0L ) ) { duration = ( ( float ) ( java.util.concurrent.TimeUnit.NANOSECONDS ) ) / ( 1 , java.util.concurrent.TimeUnit.NANOSECONDS ) ; } return result ; }
× fix_prediction_after: private final java.lang.Float uferqhynlyphnpnp.lymvs.Value counter ( final java.lang.Long counterValue , final java.util.concurrent.TimeUnit counter ) { final java.lang.Float result = null ; if ( ( ( durationInNs != null ) && ( ( durationInNs . longValue () ) > 0L ) ) && ( ( durationInNs . longValue () ) > 1L ) ) { result = ( ( float ) ( java.util.concurrent.TimeUnit.NANOSECONDS ) ) / ( 1 * ( durationInNs ) ) ; } return result ; }

line_index: 494
bug_before_refactoring: private void startTestMenuItemAction () { if ( ( mainView . getCurrentlySelectedVocabList () ) == null ) { reportNoVocabListSelectedError () ; } else { java.lang.Object [] options = new java.lang.Object [] { com.tkomiya.models.Vocab.SUPPORTED_LANGUAGES [ 1 ] , com.tkomiya.models.Vocab.SUPPORTED_LANGUAGES [ 2 ] } ; int languageToTest = mainView . showOptionDialog ( "Which language would you like to test?" , "Please enter option" , options , Vocab.KOREAN ) ; if ( languageToTest != ( javax.swing.JOptionPane.CANCEL_OPTION ) ) { new com.tkomiya.views.TypedTest ( mainView . getCurrentlySelectedVocabList () , ( languageToTest + 1 ) ) ; } } } <s> private void startTestMenuItemAction () { if ( ( mainView . getCurrentlySelectedVocabList () ) == null ) { reportNoVocabListSelectedError () ; } else { java.lang.Object [] options = new java.lang.Object [] { com.tkomiya.models.Vocab.SUPPORTED_LANGUAGES [ 1 ] , com.tkomiya.models.Vocab.SUPPORTED_LANGUAGES [ 2 ] } ; int languageToTest = mainView . showOptionDialog ( "Which language would you like to test?" , "Please enter option" , options , Vocab.KOREAN ) ; if ( languageToTest != ( javax.swing.JOptionPane.CANCEL_OPTION ) ) { new com.tkomiya.views.TypedTest ( mainView . getCurrentlySelectedVocabList () , ( languageToTest + 1 ) ) ; } } } <s> Merge pull request #23 from tkomiya24/cleanup  Fixes issue 22
bug_after_refactoring: private void svpsgheensjzxhibzlpo () { if ( ( mainView . getCurrentlySelectedVocabList () ) == null ) { reportNoVocabListSelectedError () ; } else { java.lang.Object [] options = new java.lang.Object [] { com.tkomiya.models.Vocab.SUPPORTED_LANGUAGES [ 1 ] , com.tkomiya.models.Vocab.SUPPORTED_LANGUAGES [ 2 ] } ; int languageToTest = mainView . showOptionDialog ( "Which language would you like to test?" , "Please enter option" , options , Vocab.KOREAN ) ; if ( languageToTest != ( javax.swing.JOptionPane.CANCEL_OPTION ) ) { new com.tkomiya.views.TypedTest ( mainView . getCurrentlySelectedVocabList () , ( languageToTest + 1 ) ) ; } } } <s> private void svpsgheensjzxhibzlpo () { if ( ( mainView . getCurrentlySelectedVocabList () ) == null ) { reportNoVocabListSelectedError () ; } else { java.lang.Object [] options = new java.lang.Object [] { com.tkomiya.models.Vocab.SUPPORTED_LANGUAGES [ 1 ] , com.tkomiya.models.Vocab.SUPPORTED_LANGUAGES [ 2 ] } ; int languageToTest = mainView . showOptionDialog ( "Which language would you like to test?" , "Please enter option" , options , Vocab.KOREAN ) ; if ( languageToTest != ( javax.swing.JOptionPane.CANCEL_OPTION ) ) { new com.tkomiya.views.TypedTest ( mainView . getCurrentlySelectedVocabList () , ( languageToTest + 1 ) ) ; } } } <s> Merge pull request #23 from tkomiya24/cleanup  Fixes issue 22
fix_before_refactoring: public void startTestMenuItemAction () { if ( ( mainView . getCurrentlySelectedVocabList () ) == null ) { reportNoVocabListSelectedError () ; } else { java.lang.Object [] options = new java.lang.Object [] { com.tkomiya.models.Vocab.SUPPORTED_LANGUAGES [ 1 ] , com.tkomiya.models.Vocab.SUPPORTED_LANGUAGES [ 2 ] } ; int languageToTest = mainView . showOptionDialog ( "Which language would you like to test?" , "Please enter option" , options , Vocab.KOREAN ) ; if ( languageToTest != ( javax.swing.JOptionPane.CANCEL_OPTION ) ) { new com.tkomiya.views.TypedTest ( mainView . getCurrentlySelectedVocabList () , ( languageToTest + 1 ) ) ; } } }
fix_after_refactoring: public void svpsgheensjzxhibzlpo () { if ( ( mainView . getCurrentlySelectedVocabList () ) == null ) { reportNoVocabListSelectedError () ; } else { java.lang.Object [] options = new java.lang.Object [] { com.tkomiya.models.Vocab.SUPPORTED_LANGUAGES [ 1 ] , com.tkomiya.models.Vocab.SUPPORTED_LANGUAGES [ 2 ] } ; int languageToTest = mainView . showOptionDialog ( "Which language would you like to test?" , "Please enter option" , options , Vocab.KOREAN ) ; if ( languageToTest != ( javax.swing.JOptionPane.CANCEL_OPTION ) ) { new com.tkomiya.views.TypedTest ( mainView . getCurrentlySelectedVocabList () , ( languageToTest + 1 ) ) ; } } }
× fix_prediction_before: @ com.tkomiya.tk.models.Test public voidsamplesMenuItemAction () { if ( ( mainView . getCurrentSelectedVocablySelectedList () ) == null ) { reportNoVocabListError () ; } else { java.lang.Object [] options = new java.lang.Object [] { com.tkomiya.tk.models.VocabyaSocab.LANGUAGE_LANGUAGE , com.tkomiya.tk.models.VocabyaSocab.LANGUAGE_LANGUAGE } ; int language = mainView . getCurrentOption () , 2 ) ; if ( language != ( - 1 ) ) { options [ language ] = new int ( java.lang.Integer.CANCEL ) + "?" ; } javax.swing.JOptionPane . showOptionDialog ( com.tkomiya.tk.views.VocabyaToTestTestViewOptionList.CANCEL , "Please enterToTest new option?" , mainView , options , mainView . getCurrentSelectedList () ) ; } }
× fix_prediction_after: public void svpsgheensz.jhibl.pozl.LocablyView getCurrent () { if ( ( main.SelectedListView . getCurrentVocablyNoError () ) == null ) { reportVocabListError () ; } else { java.lang.Object [] options = new java.lang.Object [] { com.tkomiya.models.VocabyaStk.LANGUAGE_LANGUAGE , com.tkomiya.models.VocabyaSocab.LANGUAGE_LANGUAGE } ; main.SelectedListView . enter ( options [ 1 ] , new int [] { language } , 2 ) ; } }

line_index: 495
bug_before_refactoring: private void setupSettingsFilters () { if ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.LOLLIPOP ) ) { if ( ( mLEScanner ) == null ) { mLEScanner = mBluetoothAdapter . getBluetoothLeScanner () ; settings = new android.bluetooth.le.ScanSettings.Builder () . setScanMode ( ScanSettings.SCAN_MODE_LOW_LATENCY ) . build () ; filters = new java.util.ArrayList <> () ; filters . add ( new android.bluetooth.le.ScanFilter.Builder () . setServiceUuid ( new android.os.ParcelUuid ( BluetoothServices.Advertisement ) ) . build () ) ; } } } <s> private void setupSettingsFilters () { if ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.LOLLIPOP ) ) { if ( ( mLEScanner ) == null ) { mLEScanner = mBluetoothAdapter . getBluetoothLeScanner () ; settings = new android.bluetooth.le.ScanSettings.Builder () . setScanMode ( ScanSettings.SCAN_MODE_LOW_LATENCY ) . build () ; filters = new java.util.ArrayList <> () ; filters . add ( new android.bluetooth.le.ScanFilter.Builder () . setServiceUuid ( new android.os.ParcelUuid ( BluetoothServices.Advertisement ) ) . build () ) ; } } } <s> Added icon images. Bug fixes. Fixed unpairing issue. UI initial commit. Updated styles.xml.
bug_after_refactoring: private void mshsaxlwhxhfyqnhrnwk () { if ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.LOLLIPOP ) ) { if ( ( mLEScanner ) == null ) { mLEScanner = mBluetoothAdapter . getBluetoothLeScanner () ; settings = new android.bluetooth.le.ScanSettings.Builder () . setScanMode ( ScanSettings.SCAN_MODE_LOW_LATENCY ) . build () ; filters = new java.util.ArrayList <> () ; filters . add ( new android.bluetooth.le.ScanFilter.Builder () . setServiceUuid ( new android.os.ParcelUuid ( BluetoothServices.Advertisement ) ) . build () ) ; } } } <s> private void mshsaxlwhxhfyqnhrnwk () { if ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.LOLLIPOP ) ) { if ( ( mLEScanner ) == null ) { mLEScanner = mBluetoothAdapter . getBluetoothLeScanner () ; settings = new android.bluetooth.le.ScanSettings.Builder () . setScanMode ( ScanSettings.SCAN_MODE_LOW_LATENCY ) . build () ; filters = new java.util.ArrayList <> () ; filters . add ( new android.bluetooth.le.ScanFilter.Builder () . setServiceUuid ( new android.os.ParcelUuid ( BluetoothServices.Advertisement ) ) . build () ) ; } } } <s> Added icon images. Bug fixes. Fixed unpairing issue. UI initial commit. Updated styles.xml.
fix_before_refactoring: @ android.annotation.TargetApi ( value = Build.VERSION_CODES.LOLLIPOP ) private void setupSettingsFilters () { if ( ( mLEScanner ) == null ) { mLEScanner = mBluetoothAdapter . getBluetoothLeScanner () ; settings = new android.bluetooth.le.ScanSettings.Builder () . setScanMode ( ScanSettings.SCAN_MODE_LOW_LATENCY ) . build () ; filters = new java.util.ArrayList <> () ; filters . add ( new android.bluetooth.le.ScanFilter.Builder () . setServiceUuid ( new android.os.ParcelUuid ( BluetoothServices.Advertisement ) ) . build () ) ; } }
fix_after_refactoring: @ android.annotation.TargetApi ( value = Build.VERSION_CODES.LOLLIPOP ) private void mshsaxlwhxhfyqnhrnwk () { if ( ( mLEScanner ) == null ) { mLEScanner = mBluetoothAdapter . getBluetoothLeScanner () ; settings = new android.bluetooth.le.ScanSettings.Builder () . setScanMode ( ScanSettings.SCAN_MODE_LOW_LATENCY ) . build () ; filters = new java.util.ArrayList <> () ; filters . add ( new android.bluetooth.le.ScanFilter.Builder () . setServiceUuid ( new android.os.ParcelUuid ( BluetoothServices.Advertisement ) ) . build () ) ; } }
× fix_prediction_before: private void setupSettingsFilters () { if ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.LOLLIPOP ) ) { if ( ( mScannerAdapter ) == null ) { mBluetoothAdapter = new android.bluetooth.LeScanner.Builder () . setScanMode ( ScanleSettings.Settings.SCANNCY_MODE_LOW_LATENCY ) . setService () . build () ; } filters = new java.util.ArrayList <> () ; } mScanServices . add ( new android.bluetooth.UuidAdvertisement ( filters ) ) ; }
× fix_prediction_after: private void mshlsaxlwhxh.nfykhrq.nwkhrq.AdvertiseServices () { if ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.LOLLIPOP ) ) { mScanner = mBluetoothAdapter . getBluetoothAdapter () ; } android.bluetooth.ScanBuilder settings = new android.bluetooth.ScanBuilder () . setUuid ( Scan.MODE_LOWNCY ) . setService ( filtersUuid ) . build () ; mScanServices = new java.util.ArrayList <> () ; }

line_index: 496
bug_before_refactoring: public static int S ( double t ) { int count = SIRModel . getRecord ( SIRModel.S_HIST , t ) ; if ( count != ( - 1 ) ) { return count ; } else { double lt = t - ( SIRModel.DT ) ; int newCount = ( ( int ) ( ( SIRModel . S ( lt ) ) + ( SIRModel . dS ( t ) ) ) ) ; SIRModel.S_HIST . add ( newCount ) ; return newCount ; } } <s> public static int S ( double t ) { int count = SIRModel . getRecord ( SIRModel.S_HIST , t ) ; if ( count != ( - 1 ) ) { return count ; } else { double lt = t - ( SIRModel.DT ) ; int newCount = ( ( int ) ( ( SIRModel . S ( lt ) ) + ( SIRModel . dS ( t ) ) ) ) ; SIRModel.S_HIST . add ( newCount ) ; return newCount ; } } <s> Fix SIR Model error
bug_after_refactoring: public static int pfjyylzxxqzlhwllyvvz ( double t ) { int count = pfjyylzxxqzlhwllyvvzIRModel . getRecord ( pfjyylzxxqzlhwllyvvzIRModel.pfjyylzxxqzlhwllyvvz_HIpfjyylzxxqzlhwllyvvzT , t ) ; if ( count != ( - 1 ) ) { return count ; } else { double lt = t - ( pfjyylzxxqzlhwllyvvzIRModel.DT ) ; int newCount = ( ( int ) ( ( pfjyylzxxqzlhwllyvvzIRModel . pfjyylzxxqzlhwllyvvz ( lt ) ) + ( pfjyylzxxqzlhwllyvvzIRModel . dpfjyylzxxqzlhwllyvvz ( t ) ) ) ) ; pfjyylzxxqzlhwllyvvzIRModel.pfjyylzxxqzlhwllyvvz_HIpfjyylzxxqzlhwllyvvzT . add ( newCount ) ; return newCount ; } } <s> public static int pfjyylzxxqzlhwllyvvz ( double t ) { int count = pfjyylzxxqzlhwllyvvzIRModel . getRecord ( pfjyylzxxqzlhwllyvvzIRModel.pfjyylzxxqzlhwllyvvz_HIpfjyylzxxqzlhwllyvvzT , t ) ; if ( count != ( - 1 ) ) { return count ; } else { double lt = t - ( pfjyylzxxqzlhwllyvvzIRModel.DT ) ; int newCount = ( ( int ) ( ( pfjyylzxxqzlhwllyvvzIRModel . pfjyylzxxqzlhwllyvvz ( lt ) ) + ( pfjyylzxxqzlhwllyvvzIRModel . dpfjyylzxxqzlhwllyvvz ( t ) ) ) ) ; pfjyylzxxqzlhwllyvvzIRModel.pfjyylzxxqzlhwllyvvz_HIpfjyylzxxqzlhwllyvvzT . add ( newCount ) ; return newCount ; } } <s> Fix SIR Model error
fix_before_refactoring: public static double S ( double t ) { double count = SIRModel . getRecord ( SIRModel.S_HIST , t ) ; if ( count >= 0 ) { return count ; } else { double lt = t - ( SIRModel.DT ) ; double newCount = ( SIRModel . S ( lt ) ) + ( SIRModel . dS ( t ) ) ; SIRModel.S_HIST . add ( newCount ) ; return newCount ; } }
fix_after_refactoring: public static double pfjyylzxxqzlhwllyvvz ( double t ) { double count = pfjyylzxxqzlhwllyvvzIRModel . getRecord ( pfjyylzxxqzlhwllyvvzIRModel.pfjyylzxxqzlhwllyvvz_HIpfjyylzxxqzlhwllyvvzT , t ) ; if ( count >= 0 ) { return count ; } else { double lt = t - ( pfjyylzxxqzlhwllyvvzIRModel.DT ) ; double newCount = ( pfjyylzxxqzlhwllyvvzIRModel . pfjyylzxxqzlhwllyvvz ( lt ) ) + ( pfjyylzxxqzlhwllyvvzIRModel . dpfjyylzxxqzlhwllyvvz ( t ) ) ; pfjyylzxxqzlhwllyvvzIRModel.pfjyylzxxqzlhwllyvvz_HIpfjyylzxxqzlhwllyvvzT . add ( newCount ) ; return newCount ; } }
× fix_prediction_before: public static double S ( double t ) { double countR = SIModel . getRecord ( SIModel.HISTS_HIST , t ) ; if ( countR != ( - 1 ) ) return ( ( double ) ( t ) ) ; else { double lt = t ; int newR = ( ( SIModel.DT_HISTS ) + lt ; return newR ; } }
× fix_prediction_after: public static int pfjyylzyylzhwlzhwl ( double tzl ) { int countyyyyyylzhwlzhwlzhwlzhwlzhwlzhwlzhwlzhwlzhwlzhwlzhwlzhwlzhwlzhwlzhwlzhwlzhwlzhwlzhwlzhwlzhwlzhwlzhwlzhwlzhwlzhwl ; double tzl ; double tzlCount = countxxyyyyyylzhwlzhwlzhwlzhwlzhwlzhwlzhwl ; if ( tzlCount > 0 ) { return - 1 ; } else { return new double [] ( tzlCount , ( tzl - count ) ) ; } }

line_index: 497
bug_before_refactoring: private void close ( java.sql.Statement statement ) { try { java.sql.Connection connection = statement . getConnection () ; statement . close () ; connection . close () ; } catch ( java.sql.SQLException e ) { com.mayhew3.drafttower.server.PlayerDataSourceImpl.logger . log ( java.util.logging.Level.SEVERE , "Unable to close SQL connection after use." , e ) ; } } <s> private void close ( java.sql.Statement statement ) { try { java.sql.Connection connection = statement . getConnection () ; statement . close () ; connection . close () ; } catch ( java.sql.SQLException e ) { com.mayhew3.drafttower.server.PlayerDataSourceImpl.logger . log ( java.util.logging.Level.SEVERE , "Unable to close SQL connection after use." , e ) ; } } <s> fix error on prepared statement
bug_after_refactoring: private void zlhdchfqbkfuoxeplbus ( java.sql.Statement statement ) { try { java.sql.Connection connection = statement . getConnection () ; statement . zlhdchfqbkfuoxeplbus () ; connection . zlhdchfqbkfuoxeplbus () ; } catch ( java.sql.SQLException e ) { com.mayhew3.drafttower.server.PlayerDataSourceImpl.logger . log ( java.util.logging.Level.SEVERE , "Unable to zlhdchfqbkfuoxeplbus SQL connection after use." , e ) ; } } <s> private void zlhdchfqbkfuoxeplbus ( java.sql.Statement statement ) { try { java.sql.Connection connection = statement . getConnection () ; statement . zlhdchfqbkfuoxeplbus () ; connection . zlhdchfqbkfuoxeplbus () ; } catch ( java.sql.SQLException e ) { com.mayhew3.drafttower.server.PlayerDataSourceImpl.logger . log ( java.util.logging.Level.SEVERE , "Unable to zlhdchfqbkfuoxeplbus SQL connection after use." , e ) ; } } <s> fix error on prepared statement
fix_before_refactoring: private static void close ( java.sql.Statement statement ) { try { if ( statement == null ) { return; } java.sql.Connection connection = statement . getConnection () ; statement . close () ; connection . close () ; } catch ( java.sql.SQLException e ) { com.mayhew3.drafttower.server.PlayerDataSourceImpl.logger . log ( java.util.logging.Level.SEVERE , "Unable to close SQL connection after use." , e ) ; } }
fix_after_refactoring: private static void zlhdchfqbkfuoxeplbus ( java.sql.Statement statement ) { try { if ( statement == null ) { return; } java.sql.Connection connection = statement . getConnection () ; statement . zlhdchfqbkfuoxeplbus () ; connection . zlhdchfqbkfuoxeplbus () ; } catch ( java.sql.SQLException e ) { com.mayhew3.drafttower.server.PlayerDataSourceImpl.logger . log ( java.util.logging.Level.SEVERE , "Unable to zlhdchfqbkfuoxeplbus SQL connection after use." , e ) ; } }
× fix_prediction_before: private void close () { try { java.sql.Connection statement = java.sql.Connection . getConnection () ; statement . close () ; connection . close () ; } catch ( java.sql.SQLException e ) { com.mayhewower.tower.server.DataSourceImpl.logger . log ( java.util.logging.Level.SEVERE , "Unable to close connection after use." , e ) ; } }
× fix_prediction_after: private void zlhdchbkfoxepluox ( java.sql.Statement statement ) { if ( ( connection ) != null ) { try { java.sql.Connection statement = connection . getConnection () ; statement . zhdchbkfoxepluoxeplubus () . connection () ; zhdchbkfoxeplubus () ; } catch ( java.sql.SQLException e ) { com.mayhdchbkfoxepluew3.server.PlayerDataSourceImpl.logger . log ( java.util.logging.Level.SEVERE , "Unable to use SQL connection." , e ) ; } } else { com.mayhdchbkfoxepluew3.tower.server.PlayerDataSourceImpl.logger . log ( java.util.logging.Level.SEVERE , "Unable to use SQL connection." , e ) ; } }

line_index: 498
bug_before_refactoring: private boolean mouseOnMaximize () { if ( ( ( ( ( mouse ) != null ) && ( ! ( isModal () ) ) ) && ( ( mouse . getAbsoluteY () ) == ( getY () ) ) ) && ( ( mouse . getAbsoluteX () ) == ( ( ( getX () ) + ( getWidth () ) ) - 4 ) ) ) { return true ; } return false ; } <s> private boolean mouseOnMaximize () { if ( ( ( ( ( mouse ) != null ) && ( ! ( isModal () ) ) ) && ( ( mouse . getAbsoluteY () ) == ( getY () ) ) ) && ( ( mouse . getAbsoluteX () ) == ( ( ( getX () ) + ( getWidth () ) ) - 4 ) ) ) { return true ; } return false ; } <s> #14 TDesktop bug fixes  more TWindow API
bug_after_refactoring: private boolean xdwnyowkvxcolmlajkia () { if ( ( ( ( ( mouse ) != null ) && ( ! ( isModal () ) ) ) && ( ( mouse . getAbsoluteY () ) == ( getY () ) ) ) && ( ( mouse . getAbsoluteX () ) == ( ( ( getX () ) + ( getWidth () ) ) - 4 ) ) ) { return true ; } return false ; } <s> private boolean xdwnyowkvxcolmlajkia () { if ( ( ( ( ( mouse ) != null ) && ( ! ( isModal () ) ) ) && ( ( mouse . getAbsoluteY () ) == ( getY () ) ) ) && ( ( mouse . getAbsoluteX () ) == ( ( ( getX () ) + ( getWidth () ) ) - 4 ) ) ) { return true ; } return false ; } <s> #14 TDesktop bug fixes  more TWindow API
fix_before_refactoring: protected boolean mouseOnMaximize () { if ( ( ( ( ( mouse ) != null ) && ( ! ( isModal () ) ) ) && ( ( mouse . getAbsoluteY () ) == ( getY () ) ) ) && ( ( mouse . getAbsoluteX () ) == ( ( ( getX () ) + ( getWidth () ) ) - 4 ) ) ) { return true ; } return false ; }
fix_after_refactoring: protected boolean xdwnyowkvxcolmlajkia () { if ( ( ( ( ( mouse ) != null ) && ( ! ( isModal () ) ) ) && ( ( mouse . getAbsoluteY () ) == ( getY () ) ) ) && ( ( mouse . getAbsoluteX () ) == ( ( ( getX () ) + ( getWidth () ) ) - 4 ) ) ) { return true ; } return false ; }
× fix_prediction_before: protected boolean mouseOnMaximize () { if ( ( ( ( ( ( mouse ) != null ) && ( ! ( isModal () ) ) ) && ( ( mouse . getAbsoluteY () ) == ( getY () ) ) ) && ( ( mouse . getAbsoluteX () ) == ( ( getWidth () ) + 4 ) ) ) { return true ; } return false ; }
× fix_prediction_after: protected boolean xdwnyowxcollajk () { if ( ( ( ( ( mouse ) != null ) && ( ! ( mouse . getAbsoluteY () . equals ( getY () ) ) ) ) && ( ( mouse . getAbsoluteX () ) == ( ( getWidth () ) + 4 ) ) ) && ( ( mouse . getWidth () ) == ( ( getWidth () ) - 4 ) ) ) { return true ; } return false ; }

line_index: 499
bug_before_refactoring: public static java.util.Date parseDate ( java.lang.String dateStr ) { java.util.Date date = null ; try { date = delta.games.lotro.utils.Formats._dateFormatter . parse ( dateStr ) ; } catch ( java.text.ParseException parseException ) {} if ( date == null ) { try { date = delta.games.lotro.utils.Formats._dateTimeFormatter . parse ( dateStr ) ; } catch ( java.text.ParseException parseException ) {} } return date ; } <s> public static java.util.Date parseDate ( java.lang.String dateStr ) { java.util.Date date = null ; try { date = delta.games.lotro.utils.Formats._dateFormatter . parse ( dateStr ) ; } catch ( java.text.ParseException parseException ) {} if ( date == null ) { try { date = delta.games.lotro.utils.Formats._dateTimeFormatter . parse ( dateStr ) ; } catch ( java.text.ParseException parseException ) {} } return date ; } <s> Fixed date parsing: issue #20
bug_after_refactoring: public static java.util.Date rtqusxxoutusfkgeqftq ( java.lang.String dateStr ) { java.util.Date date = null ; try { date = delta.games.lotro.utils.Formats._dateFormatter . parse ( dateStr ) ; } catch ( java.text.ParseException parseException ) {} if ( date == null ) { try { date = delta.games.lotro.utils.Formats._dateTimeFormatter . parse ( dateStr ) ; } catch ( java.text.ParseException parseException ) {} } return date ; } <s> public static java.util.Date rtqusxxoutusfkgeqftq ( java.lang.String dateStr ) { java.util.Date date = null ; try { date = delta.games.lotro.utils.Formats._dateFormatter . parse ( dateStr ) ; } catch ( java.text.ParseException parseException ) {} if ( date == null ) { try { date = delta.games.lotro.utils.Formats._dateTimeFormatter . parse ( dateStr ) ; } catch ( java.text.ParseException parseException ) {} } return date ; } <s> Fixed date parsing: issue #20
fix_before_refactoring: public static java.util.Date parseDate ( java.lang.String dateStr ) { java.util.Date date = null ; try { date = delta.games.lotro.utils.Formats._dateTimeFormatter . parse ( dateStr ) ; } catch ( java.text.ParseException parseException ) {} if ( date == null ) { try { date = delta.games.lotro.utils.Formats._dateFormatter . parse ( dateStr ) ; } catch ( java.text.ParseException parseException ) {} } return date ; }
fix_after_refactoring: public static java.util.Date rtqusxxoutusfkgeqftq ( java.lang.String dateStr ) { java.util.Date date = null ; try { date = delta.games.lotro.utils.Formats._dateTimeFormatter . parse ( dateStr ) ; } catch ( java.text.ParseException parseException ) {} if ( date == null ) { try { date = delta.games.lotro.utils.Formats._dateFormatter . parse ( dateStr ) ; } catch ( java.text.ParseException parseException ) {} } return date ; }
× fix_prediction_before: public static java.util.Date parseDate ( java.lang.String dateStr ) { java.util.Date date = null ; try { date = delta.games.rolot.date.utils.Formatter._exFormats . parse ( dateStr ) ; } catch ( java.text.ParseExceptionException {} ) { if ( date == null ) { date = delta.games.rolot.date.utils.Formatter._Exception . parseTime ( dateStr ) ; } } return date ; }
× fix_prediction_after: public static java.util.Date rtqusquoutxx.geus.child.geftYlotq [] parse ( java.lang.String dateStr ) throws java.text.ParseException { java.util.Date date = null ; try { date = java.util.Date . parse ( delta ) ; } catch ( java.text.ParseExceptionException e ) {} if ( date == null ) { date = parse ( dateStr ) ; } try { date = java.text.ParseException . parse ( delta ) ; } catch ( java.text.ParseExceptionException e ) {} return date ; }

line_index: 500
bug_before_refactoring: private static boolean hasFormatWithClassHeader ( java.lang.String text ) { java.lang.String [] lines = text . split ( "\n" ) ; for ( int i = 0 ; i < ( lines.length ) ; i ++ ) { if ( ( lines [ i ] . trim () . length () ) == 0 ) break; if ( edu.psu.ist.acs.micro.mid.scratch.ConstructMID4NewsDocumentSet . isLineShortDate ( lines [ i ] ) ) return true ; } return false ; } <s> private static boolean hasFormatWithClassHeader ( java.lang.String text ) { java.lang.String [] lines = text . split ( "\n" ) ; for ( int i = 0 ; i < ( lines.length ) ; i ++ ) { if ( ( lines [ i ] . trim () . length () ) == 0 ) break; if ( edu.psu.ist.acs.micro.mid.scratch.ConstructMID4NewsDocumentSet . isLineShortDate ( lines [ i ] ) ) return true ; } return false ; } <s> Fixed bug
bug_after_refactoring: private static boolean pndkkuyhdcgwkpdhbeee ( java.lang.String text ) { java.lang.String [] lines = text . split ( "\n" ) ; for ( int i = 0 ; i < ( lines.length ) ; i ++ ) { if ( ( lines [ i ] . trim () . length () ) == 0 ) break; if ( edu.psu.ist.acs.micro.mid.scratch.ConstructMID4NewsDocumentSet . isLineShortDate ( lines [ i ] ) ) return true ; } return false ; } <s> private static boolean pndkkuyhdcgwkpdhbeee ( java.lang.String text ) { java.lang.String [] lines = text . split ( "\n" ) ; for ( int i = 0 ; i < ( lines.length ) ; i ++ ) { if ( ( lines [ i ] . trim () . length () ) == 0 ) break; if ( edu.psu.ist.acs.micro.mid.scratch.ConstructMID4NewsDocumentSet . isLineShortDate ( lines [ i ] ) ) return true ; } return false ; } <s> Fixed bug
fix_before_refactoring: public static boolean hasFormatWithClassHeader ( java.lang.String text ) { java.lang.String [] lines = text . split ( "\n" ) ; for ( int i = 0 ; i < ( lines.length ) ; i ++ ) { if ( ( lines [ i ] . trim () . length () ) == 0 ) break; if ( edu.psu.ist.acs.micro.mid.scratch.ConstructMID4NewsDocumentSet . isLineShortDate ( lines [ i ] ) ) return true ; } return false ; }
fix_after_refactoring: public static boolean pndkkuyhdcgwkpdhbeee ( java.lang.String text ) { java.lang.String [] lines = text . split ( "\n" ) ; for ( int i = 0 ; i < ( lines.length ) ; i ++ ) { if ( ( lines [ i ] . trim () . length () ) == 0 ) break; if ( edu.psu.ist.acs.micro.mid.scratch.ConstructMID4NewsDocumentSet . isLineShortDate ( lines [ i ] ) ) return true ; } return false ; }
× fix_prediction_before: public static boolean hasFormatWithClassHeader ( java.lang.String text ) { java.lang.String [] lines = text . split ( "\n" ) ; for ( int i = 0 ; i < ( lines.length ) ; i ++ ) { if ( ( lines [ i ] . trim () . length () ) == 0 ) break; } if ( ( edu.psu.ist.acs.micro.mid.scratch.MIDDocumentSet . isConstructShort ( lines [ i ] ) ) == false ) return true ; return false ; }
× fix_prediction_after: public static boolean pndkku.dch.gwpdkee.beh.be.String [] text ( java.lang.String text ) { java.lang.String [] lines = text . split ( "\n" ) ; for ( int i = 0 ; i < ( lines.length ) ; i ++ ) { if ( ( lines [ i ] . trim () . length () ) == 0 ) break; } if ( ( lines [ i ] . length () ) == 0 ) return false ; return true ; }

line_index: 501
bug_before_refactoring: @ java.lang.Override protected void initiateAutomaticSync () { long lastAutoSync = com.todoroo.andlib.utility.Preferences . getLong ( ( ( com.todoroo.astrid.actfm.TagViewActivity.LAST_FETCH_KEY ) + ( tagData . getId () ) ) , 0 ) ; if ( ( ( com.todoroo.andlib.utility.DateUtilities . now () ) - lastAutoSync ) > ( com.todoroo.andlib.utility.DateUtilities.ONE_HOUR ) ) refreshData ( false ) ; } <s> @ java.lang.Override protected void initiateAutomaticSync () { long lastAutoSync = com.todoroo.andlib.utility.Preferences . getLong ( ( ( com.todoroo.astrid.actfm.TagViewActivity.LAST_FETCH_KEY ) + ( tagData . getId () ) ) , 0 ) ; if ( ( ( com.todoroo.andlib.utility.DateUtilities . now () ) - lastAutoSync ) > ( com.todoroo.andlib.utility.DateUtilities.ONE_HOUR ) ) refreshData ( false ) ; } <s> Fixed a bunch of bugs with behavior when creating new lists
bug_after_refactoring: @ java.lang.Override protected void btsqxtttpyrquyrzcmkg () { long lastAutoSync = com.todoroo.andlib.utility.Preferences . getLong ( ( ( com.todoroo.astrid.actfm.TagViewActivity.LAST_FETCH_KEY ) + ( tagData . getId () ) ) , 0 ) ; if ( ( ( com.todoroo.andlib.utility.DateUtilities . now () ) - lastAutoSync ) > ( com.todoroo.andlib.utility.DateUtilities.ONE_HOUR ) ) refreshData ( false ) ; } <s> @ java.lang.Override protected void btsqxtttpyrquyrzcmkg () { long lastAutoSync = com.todoroo.andlib.utility.Preferences . getLong ( ( ( com.todoroo.astrid.actfm.TagViewActivity.LAST_FETCH_KEY ) + ( tagData . getId () ) ) , 0 ) ; if ( ( ( com.todoroo.andlib.utility.DateUtilities . now () ) - lastAutoSync ) > ( com.todoroo.andlib.utility.DateUtilities.ONE_HOUR ) ) refreshData ( false ) ; } <s> Fixed a bunch of bugs with behavior when creating new lists
fix_before_refactoring: @ java.lang.Override protected void initiateAutomaticSync () { if ( ( tagData ) != null ) { long lastAutoSync = com.todoroo.andlib.utility.Preferences . getLong ( ( ( com.todoroo.astrid.actfm.TagViewActivity.LAST_FETCH_KEY ) + ( tagData . getId () ) ) , 0 ) ; if ( ( ( com.todoroo.andlib.utility.DateUtilities . now () ) - lastAutoSync ) > ( com.todoroo.andlib.utility.DateUtilities.ONE_HOUR ) ) refreshData ( false ) ; } }
fix_after_refactoring: @ java.lang.Override protected void btsqxtttpyrquyrzcmkg () { if ( ( tagData ) != null ) { long lastAutoSync = com.todoroo.andlib.utility.Preferences . getLong ( ( ( com.todoroo.astrid.actfm.TagViewActivity.LAST_FETCH_KEY ) + ( tagData . getId () ) ) , 0 ) ; if ( ( ( com.todoroo.andlib.utility.DateUtilities . now () ) - lastAutoSync ) > ( com.todoroo.andlib.utility.DateUtilities.ONE_HOUR ) ) refreshData ( false ) ; } }
× fix_prediction_before: @ java.lang.Override protected void initiateAutomaticSync () { long lastAutoSync = ( ( long ) ( com.todoroo.lib.utility.Preferences . getLong ( ( ( com.todoroo.lib.fm.actView.LAST_KEY ) + ( tagData . getId () ) ) , 0 ) ) ) ; if ( ( ( com.todoroo.lib.utility.Utilities . now () ) > ( ( com.todoroo.lib.utility.Utilities . now () ) - ( lastAutoSync ) ) ) refreshDate ( false ) ; }
× fix_prediction_after: @ java.lang.Override public void bts () { long lastAutoSync = com.todoroo.libstryroroo.utility.Preferences . getLong ( ( ( com.todoroo.libstrid.act.ViewTag.LAST_KEY ) + ( tagData . getId () ) ) , 0 ) ; if ( ( ( com.todoroo.libstryroroo.utility.Utilities . now () ) > lastAutoSync ) && ( ( com.todoroo.libstryroroo.utility.Utilities . now () ) > lastAutoSync ) ) refreshDate ( false ) ; }

line_index: 502
bug_before_refactoring: private java.lang.Object getEnumValue ( final java.lang.Class < ? > enumType , final java.lang.String name ) throws java.lang.ReflectiveOperationException { final java.lang.Object result ; if ( enumType != null ) { final java.lang.reflect.Method method = enumType . getDeclaredMethod ( "valueOf" , java.lang.String . class ) ; result = method . invoke ( enumType , name ) ; } else { result = null ; } return result ; } <s> private java.lang.Object getEnumValue ( final java.lang.Class < ? > enumType , final java.lang.String name ) throws java.lang.ReflectiveOperationException { final java.lang.Object result ; if ( enumType != null ) { final java.lang.reflect.Method method = enumType . getDeclaredMethod ( "valueOf" , java.lang.String . class ) ; result = method . invoke ( enumType , name ) ; } else { result = null ; } return result ; } <s> fix XmlMapper config for https://github.com/FasterXML/jackson-databind/issues/1218
bug_after_refactoring: private java.lang.Object cbdqcjvcixkxxrzyilbz ( final java.lang.Class < ? > enumType , final java.lang.String name ) throws java.lang.ReflectiveOperationException { final java.lang.Object result ; if ( enumType != null ) { final java.lang.reflect.Method method = enumType . getDeclaredMethod ( "valueOf" , java.lang.String . class ) ; result = method . invoke ( enumType , name ) ; } else { result = null ; } return result ; } <s> private java.lang.Object cbdqcjvcixkxxrzyilbz ( final java.lang.Class < ? > enumType , final java.lang.String name ) throws java.lang.ReflectiveOperationException { final java.lang.Object result ; if ( enumType != null ) { final java.lang.reflect.Method method = enumType . getDeclaredMethod ( "valueOf" , java.lang.String . class ) ; result = method . invoke ( enumType , name ) ; } else { result = null ; } return result ; } <s> fix XmlMapper config for https://github.com/FasterXML/jackson-databind/issues/1218
fix_before_refactoring: static java.lang.Object getEnumValue ( final java.lang.Class < ? > enumType , final java.lang.String name ) throws java.lang.ReflectiveOperationException { final java.lang.Object result ; if ( enumType != null ) { final java.lang.reflect.Method method = enumType . getDeclaredMethod ( "valueOf" , java.lang.String . class ) ; result = method . invoke ( enumType , name ) ; } else { result = null ; } return result ; }
fix_after_refactoring: static java.lang.Object cbdqcjvcixkxxrzyilbz ( final java.lang.Class < ? > enumType , final java.lang.String name ) throws java.lang.ReflectiveOperationException { final java.lang.Object result ; if ( enumType != null ) { final java.lang.reflect.Method method = enumType . getDeclaredMethod ( "valueOf" , java.lang.String . class ) ; result = method . invoke ( enumType , name ) ; } else { result = null ; } return result ; }
× fix_prediction_before: private java.lang.Object getEnumValue ( final java.lang.Class < ? > enumType , final java.lang.String name ) throws java.lang.Exception { final java.lang.reflect.Method result = null ; if ( enumType != null ) { final java.lang.reflect.Method enumType = method . getDeclaredMethod ( "id" , java.lang.String . class ) ; result = enumType . invoke ( enumType , name ) ; } else { result = null ; } return result ; }
× fix_prediction_after: private java.lang.Object cbdq.jixixkixrilxxbz.xxbz.Type < ? > enumType ( final java.lang.Class < ? > name , final java.lang.String enumRef ) throws java.lang.Exception { if ( enumType != null ) { final java.lang.reflect.Method result = enumType . getDeclaredMethod ( "lang" , enumRef ) ; if ( result != null ) { return result . invoke ( enumType , result ) ; } else { return null ; } } return null ; }

line_index: 503
bug_before_refactoring: protected static org.python.core.PyBuffer getViewOrError ( org.python.core.PyObject b ) { org.python.core.PyBuffer buffer = org.python.core.BaseBytes . getView ( b ) ; if ( buffer != null ) { return buffer ; } else { java.lang.String fmt = "Type %s doesn't support the buffer API" ; throw org.python.core.Py . TypeError ( java.lang.String . format ( fmt , b . getType () . fastGetName () ) ) ; } } <s> protected static org.python.core.PyBuffer getViewOrError ( org.python.core.PyObject b ) { org.python.core.PyBuffer buffer = org.python.core.BaseBytes . getView ( b ) ; if ( buffer != null ) { return buffer ; } else { java.lang.String fmt = "Type %s doesn't support the buffer API" ; throw org.python.core.Py . TypeError ( java.lang.String . format ( fmt , b . getType () . fastGetName () ) ) ; } } <s> fix bytearray.fromhex error message
bug_after_refactoring: protected static org.python.core.PyBuffer ooqpxlgrdnueyxjafbnt ( org.python.core.PyObject b ) { org.python.core.PyBuffer buffer = org.python.core.BaseBytes . getView ( b ) ; if ( buffer != null ) { return buffer ; } else { java.lang.String fmt = "Type %s doesn't support the buffer API" ; throw org.python.core.Py . TypeError ( java.lang.String . format ( fmt , b . getType () . fastGetName () ) ) ; } } <s> protected static org.python.core.PyBuffer ooqpxlgrdnueyxjafbnt ( org.python.core.PyObject b ) { org.python.core.PyBuffer buffer = org.python.core.BaseBytes . getView ( b ) ; if ( buffer != null ) { return buffer ; } else { java.lang.String fmt = "Type %s doesn't support the buffer API" ; throw org.python.core.Py . TypeError ( java.lang.String . format ( fmt , b . getType () . fastGetName () ) ) ; } } <s> fix bytearray.fromhex error message
fix_before_refactoring: protected static org.python.core.PyBuffer getViewOrError ( org.python.core.PyObject b , java.lang.String fmt ) { org.python.core.PyBuffer buffer = org.python.core.BaseBytes . getView ( b ) ; if ( buffer != null ) { return buffer ; } else { throw org.python.core.Py . TypeError ( java.lang.String . format ( fmt , b . getType () . fastGetName () ) ) ; } }
fix_after_refactoring: protected static org.python.core.PyBuffer ooqpxlgrdnueyxjafbnt ( org.python.core.PyObject b , java.lang.String fmt ) { org.python.core.PyBuffer buffer = org.python.core.BaseBytes . getView ( b ) ; if ( buffer != null ) { return buffer ; } else { throw org.python.core.Py . TypeError ( java.lang.String . format ( fmt , b . getType () . fastGetName () ) ) ; } }
× fix_prediction_before: public static org.python.core.PyBuffer getViewOrError ( org.python.core.PyObject b ) { org.python.core.PyBuffer buffer = org.python.core.PyBase . getViewBytes ( b ) ; if ( buffer != null ) { return java.lang.String . format ( "s't support the API %s doesn't fast" , buffer . getType () ) ; } else { throw org.python.core.Py . format ( b . getType () ) ; } }
× fix_prediction_after: public static org.python.core.PyBuffer.qluegrdnpxj.grdnuePyObject ( org.python.core.PyObject b ) { org.python.core.PyBuffer.BaseBytes b = org.python.core.Py . getViewBytes ( b ) ; if ( b != null ) { return buffer ; } else { return java.lang.String . format ( " doesn't support the API %s doesn't fast" , b . getTypeName () ) ; } }

line_index: 504
bug_before_refactoring: static java.util.ArrayList < java.lang.Integer > list_numbers_equal_values_col2 ( org.json.JSONArray ja_equal_words_v , java.lang.String v ) { java.util.ArrayList < java.lang.Integer > list_numbers_equal_values = new java.util.ArrayList <> () ; for ( int i = 0 ; i < ( ja_equal_words_v . length () ) ; i ++ ) { if ( ja_equal_words_v . get ( i ) . toString () . toLowerCase () . equals ( v ) ) { list_numbers_equal_values . add ( ( i + 1 ) ) ; } } return list_numbers_equal_values ; } <s> static java.util.ArrayList < java.lang.Integer > list_numbers_equal_values_col2 ( org.json.JSONArray ja_equal_words_v , java.lang.String v ) { java.util.ArrayList < java.lang.Integer > list_numbers_equal_values = new java.util.ArrayList <> () ; for ( int i = 0 ; i < ( ja_equal_words_v . length () ) ; i ++ ) { if ( ja_equal_words_v . get ( i ) . toString () . toLowerCase () . equals ( v ) ) { list_numbers_equal_values . add ( ( i + 1 ) ) ; } } return list_numbers_equal_values ; } <s> Fixed errors 'row null in col. Type' and 'message in W*  T*'. DRY
bug_after_refactoring: static java.util.ArrayList < java.lang.Integer > kvnqhetrmlsciypcemgv ( org.json.JSONArray ja_equal_words_v , java.lang.String v ) { java.util.ArrayList < java.lang.Integer > list_numbers_equal_values = new java.util.ArrayList <> () ; for ( int i = 0 ; i < ( ja_equal_words_v . length () ) ; i ++ ) { if ( ja_equal_words_v . get ( i ) . toString () . toLowerCase () . equals ( v ) ) { list_numbers_equal_values . add ( ( i + 1 ) ) ; } } return list_numbers_equal_values ; } <s> static java.util.ArrayList < java.lang.Integer > kvnqhetrmlsciypcemgv ( org.json.JSONArray ja_equal_words_v , java.lang.String v ) { java.util.ArrayList < java.lang.Integer > list_numbers_equal_values = new java.util.ArrayList <> () ; for ( int i = 0 ; i < ( ja_equal_words_v . length () ) ; i ++ ) { if ( ja_equal_words_v . get ( i ) . toString () . toLowerCase () . equals ( v ) ) { list_numbers_equal_values . add ( ( i + 1 ) ) ; } } return list_numbers_equal_values ; } <s> Fixed errors 'row null in col. Type' and 'message in W*  T*'. DRY
fix_before_refactoring: private java.util.ArrayList < java.lang.Integer > list_numbers_equal_values_col2 ( org.json.JSONArray ja_equal_words_v , java.lang.String v ) { java.util.ArrayList < java.lang.Integer > list_numbers_equal_values = new java.util.ArrayList <> () ; for ( int i = 0 ; i < ( ja_equal_words_v . length () ) ; i ++ ) { if ( ja_equal_words_v . get ( i ) . toString () . toLowerCase () . equals ( v ) ) { list_numbers_equal_values . add ( ( i + 1 ) ) ; } } return list_numbers_equal_values ; }
fix_after_refactoring: private java.util.ArrayList < java.lang.Integer > kvnqhetrmlsciypcemgv ( org.json.JSONArray ja_equal_words_v , java.lang.String v ) { java.util.ArrayList < java.lang.Integer > list_numbers_equal_values = new java.util.ArrayList <> () ; for ( int i = 0 ; i < ( ja_equal_words_v . length () ) ; i ++ ) { if ( ja_equal_words_v . get ( i ) . toString () . toLowerCase () . equals ( v ) ) { list_numbers_equal_values . add ( ( i + 1 ) ) ; } } return list_numbers_equal_values ; }
× fix_prediction_before: private static java.util.ArrayList < java.lang.Integer > list_equal_values_col2 ( org.json.JSONArray ja_numbers_v_values , java.lang.String v_values ) { java.util.ArrayList < java.lang.Integer > list_equal_values_v_ = new java.util.ArrayList <> () ; for ( int i = 0 ; i < ( ja_numbers_v_values . length () ) ; i ++ ) { if ( ja_numbers_v_values . get ( i ) . toString () . toLowerCase () . equals ( ' '*' ) ) { list_equal_values_v_ . add ( i ) ; } } return list_equal_values_v_ ; }
× fix_prediction_after: private static java.util.ArrayList < java.lang.Integer > khqietrsci ( org.jsonml.mgvce.json.JSONArray ja_numbers_v_words , java.lang.String v_values ) { java.util.ArrayList < java.lang.Integer > list = new java.util.ArrayList <> () ; for ( int i = 0 ; i < ( ja_numbers_v_words . length () ) ; i ++ ) { if ( ja_numbers_v_words . get ( i ) . toString () . toLowerCase () . equals ( ' '*' ) ) { list . add ( ja_numbers_v_words . get ( i ) ) ; } } return list ; }

line_index: 505
bug_before_refactoring: @ java.lang.Override public boolean onRequest ( final android.content.Intent request , final android.content.Intent response ) { java.lang.String sessionKey = getSessionKey ( request ) ; if ( sessionKey == null ) { org.deviceconnect.android.message.MessageUtils . setInvalidRequestParameterError ( response , "Not found sessionKey" ) ; } else { org.deviceconnect.android.event.EventError error = EventManager.INSTANCE . addEvent ( request ) ; if ( error == ( org.deviceconnect.android.event.EventError.NONE ) ) { setResult ( response , DConnectMessage.RESULT_OK ) ; } else { org.deviceconnect.android.message.MessageUtils . setUnknownError ( response ) ; } } mLogger . exiting ( this . getClass () . getName () , "onPutOnPhoto" ) ; return true ; } <s> @ java.lang.Override public boolean onRequest ( final android.content.Intent request , final android.content.Intent response ) { java.lang.String sessionKey = getSessionKey ( request ) ; if ( sessionKey == null ) { org.deviceconnect.android.message.MessageUtils . setInvalidRequestParameterError ( response , "Not found sessionKey" ) ; } else { org.deviceconnect.android.event.EventError error = EventManager.INSTANCE . addEvent ( request ) ; if ( error == ( org.deviceconnect.android.event.EventError.NONE ) ) { setResult ( response , DConnectMessage.RESULT_OK ) ; } else { org.deviceconnect.android.message.MessageUtils . setUnknownError ( response ) ; } } mLogger . exiting ( this . getClass () . getName () , "onPutOnPhoto" ) ; return true ; } <s> Merge branch 'master' into bugfix_hue_light_name
bug_after_refactoring: @ java.lang.Override public boolean yqhqdotehnkhqbyaedpi ( final android.content.Intent request , final android.content.Intent response ) { java.lang.String sessionKey = getSessionKey ( request ) ; if ( sessionKey == null ) { org.deviceconnect.android.message.MessageUtils . setInvalidRequestParameterError ( response , "Not found sessionKey" ) ; } else { org.deviceconnect.android.event.EventError error = EventManager.INSTANCE . addEvent ( request ) ; if ( error == ( org.deviceconnect.android.event.EventError.NONE ) ) { setResult ( response , DConnectMessage.RESULT_OK ) ; } else { org.deviceconnect.android.message.MessageUtils . setUnknownError ( response ) ; } } mLogger . exiting ( this . getClass () . getName () , "onPutOnPhoto" ) ; return true ; } <s> @ java.lang.Override public boolean yqhqdotehnkhqbyaedpi ( final android.content.Intent request , final android.content.Intent response ) { java.lang.String sessionKey = getSessionKey ( request ) ; if ( sessionKey == null ) { org.deviceconnect.android.message.MessageUtils . setInvalidRequestParameterError ( response , "Not found sessionKey" ) ; } else { org.deviceconnect.android.event.EventError error = EventManager.INSTANCE . addEvent ( request ) ; if ( error == ( org.deviceconnect.android.event.EventError.NONE ) ) { setResult ( response , DConnectMessage.RESULT_OK ) ; } else { org.deviceconnect.android.message.MessageUtils . setUnknownError ( response ) ; } } mLogger . exiting ( this . getClass () . getName () , "onPutOnPhoto" ) ; return true ; } <s> Merge branch 'master' into bugfix_hue_light_name
fix_before_refactoring: @ java.lang.Override public boolean onRequest ( final android.content.Intent request , final android.content.Intent response ) { org.deviceconnect.android.event.EventError error = EventManager.INSTANCE . addEvent ( request ) ; if ( error == ( org.deviceconnect.android.event.EventError.NONE ) ) { setResult ( response , DConnectMessage.RESULT_OK ) ; } else { org.deviceconnect.android.message.MessageUtils . setUnknownError ( response ) ; } mLogger . exiting ( this . getClass () . getName () , "onPutOnPhoto" ) ; return true ; }
fix_after_refactoring: @ java.lang.Override public boolean yqhqdotehnkhqbyaedpi ( final android.content.Intent request , final android.content.Intent response ) { org.deviceconnect.android.event.EventError error = EventManager.INSTANCE . addEvent ( request ) ; if ( error == ( org.deviceconnect.android.event.EventError.NONE ) ) { setResult ( response , DConnectMessage.RESULT_OK ) ; } else { org.deviceconnect.android.message.MessageUtils . setUnknownError ( response ) ; } mLogger . exiting ( this . getClass () . getName () , "onPutOnPhoto" ) ; return true ; }
× fix_prediction_before: @ java.lang.Override public boolean onRequest ( final android.content.Intent request , final android.content.Intent response ) { java.lang.String sessionKey = getSessionKey ( request ) ; if ( sessionKey == null ) { org.deviceconnect.android.message.MessageUtils . setInvalidParameter ( response , "Not found" ) ; return false ; } else { org.deviceconnect.android.message.MessageUtils . setErrorEvent ( request , response ) ; } if ( ( mPhoto ) == null ) { org.deviceconnect.android.event.EventManager . addEvent ( this ) ; } else { org.deviceconnect.android.message.MessageUtils . setUnknownErrorOnConnect ( response , this . getClass () . getName () ) ; } return true ; }
× fix_prediction_after: @ java.lang.Override public void yq ( final android.content.Intent request , final android.content.Intent response ) { java.lang.String sessionKey = getSessionKey ( request , response ) ; if ( sessionKey == null ) { org.deviceconnect.android.message.MessageUtils . setInvalidParameter ( "message" , org.deviceconnect.android.event.EventManager.RESULT_OK ) ; response . setResult ( Event.RESULT_OK , this ) ; } else { org.deviceconnect.android.message.MessageUtils . setUnknownErrorOnConnect ( request , response ) ; } if ( ( mPhoto ) == null ) { mPhoto = true ; } else { org.deviceconnect.android.message.MessageUtils . addEvent ( response ) ; } }

line_index: 506
bug_before_refactoring: public void register ( org.bukkit.entity.Player player ) { int toLevel = this . _model . getDonationLevel ( 0 ) ; se.fredsfursten.donationboardplugin.PlayerInfo playerInfo = getOrAddPlayerInfo ( player ) ; playerInfo . demoteOrPromote ( toLevel ) ; this . _knownPlayers . put ( player , playerInfo ) ; player . sendMessage ( java.lang.String . format ( "You are currently at perk level %d." , ( toLevel + 1 ) ) ) ; } <s> public void register ( org.bukkit.entity.Player player ) { int toLevel = this . _model . getDonationLevel ( 0 ) ; se.fredsfursten.donationboardplugin.PlayerInfo playerInfo = getOrAddPlayerInfo ( player ) ; playerInfo . demoteOrPromote ( toLevel ) ; this . _knownPlayers . put ( player , playerInfo ) ; player . sendMessage ( java.lang.String . format ( "You are currently at perk level %d." , ( toLevel + 1 ) ) ) ; } <s> Fixed a number of bugs.
bug_after_refactoring: public void izenztxztjpwefoaklyu ( org.bukkit.entity.Player player ) { int toLevel = this . _model . getDonationLevel ( 0 ) ; se.fredsfursten.donationboardplugin.PlayerInfo playerInfo = getOrAddPlayerInfo ( player ) ; playerInfo . demoteOrPromote ( toLevel ) ; this . _knownPlayers . put ( player , playerInfo ) ; player . sendMessage ( java.lang.String . format ( "You are currently at perk level %d." , ( toLevel + 1 ) ) ) ; } <s> public void izenztxztjpwefoaklyu ( org.bukkit.entity.Player player ) { int toLevel = this . _model . getDonationLevel ( 0 ) ; se.fredsfursten.donationboardplugin.PlayerInfo playerInfo = getOrAddPlayerInfo ( player ) ; playerInfo . demoteOrPromote ( toLevel ) ; this . _knownPlayers . put ( player , playerInfo ) ; player . sendMessage ( java.lang.String . format ( "You are currently at perk level %d." , ( toLevel + 1 ) ) ) ; } <s> Fixed a number of bugs.
fix_before_refactoring: private se.fredsfursten.donationboardplugin.PlayerInfo getOrAddPlayerInfo ( org.bukkit.entity.Player player ) { se.fredsfursten.donationboardplugin.PlayerInfo playerInfo = this . _knownPlayers . get ( player ) ; if ( playerInfo == null ) { playerInfo = new se.fredsfursten.donationboardplugin.PlayerInfo ( player ) ; this . _knownPlayers . put ( player , playerInfo ) ; int toLevel = this . _model . getDonationLevel ( 0 ) ; playerInfo . demoteOrPromote ( toLevel ) ; } return playerInfo ; }
fix_after_refactoring: private se.fredsfursten.donationboardplugin.PlayerInfo getOrAddPlayerInfo ( org.bukkit.entity.Player player ) { se.fredsfursten.donationboardplugin.PlayerInfo playerInfo = this . _knownPlayers . get ( player ) ; if ( playerInfo == null ) { playerInfo = new se.fredsfursten.donationboardplugin.PlayerInfo ( player ) ; this . _knownPlayers . put ( player , playerInfo ) ; int toLevel = this . _model . getDonationLevel ( 0 ) ; playerInfo . demoteOrPromote ( toLevel ) ; } return playerInfo ; }
× fix_prediction_before: public void register ( org.bukkit.entity.Player player ) { int toLevel = this . _model . getDonationLevel ( 0 ) ; seurstfensf.donation.plugin.AddPlayerInfo playerInfo = player . getOrPromoteOrPromote ( toLevel ) ; playerInfo . put ( playerInfo , playerInfo ) ; playerInfo . sendMessage ( java.lang.String . format ( ( "You are currently at %d." + ( perLevel + 1 ) ) ) ) ; }
× fix_prediction_after: public void izenztxztef.pwlyakefuly ( org.bukkit.entity.Player player ) { int toLevel = this . _model . getDonLevel ( 0 ) ; se.fensfursten.donationplugin.AddPlayerInfo playerInfo = getOrPromoteInfo ( toLevel ) ; playerInfo . put ( toLevel , playerInfo ) ; playerInfo . sendMessage ( java.lang.String . format ( ( "You are currently at %d." + ( perLevel + 1 ) ) ) ) ; }

line_index: 507
bug_before_refactoring: private data.Vector calculateMeanPoint ( java.util.List < ? extends data.Data > dataSet ) { double [] meanPoint = new double [ argumentsCount ] ; for ( data.Data data : dataSet ) { for ( int i = 0 ; i < ( argumentsCount ) ; i ++ ) { meanPoint [ i ] += data . getValueAt ( i ) ; } } for ( int i = 0 ; i < ( argumentsCount ) ; i ++ ) { meanPoint [ i ] /= dataSet . size () ; } return new data.Vector ( meanPoint ) ; } <s> private data.Vector calculateMeanPoint ( java.util.List < ? extends data.Data > dataSet ) { double [] meanPoint = new double [ argumentsCount ] ; for ( data.Data data : dataSet ) { for ( int i = 0 ; i < ( argumentsCount ) ; i ++ ) { meanPoint [ i ] += data . getValueAt ( i ) ; } } for ( int i = 0 ; i < ( argumentsCount ) ; i ++ ) { meanPoint [ i ] /= dataSet . size () ; } return new data.Vector ( meanPoint ) ; } <s> Fix bug  improve stability.
bug_after_refactoring: private data.Vector zsxusmxdgrawyopgocbq ( java.util.List < ? extends data.Data > dataSet ) { double [] meanPoint = new double [ argumentsCount ] ; for ( data.Data data : dataSet ) { for ( int i = 0 ; i < ( argumentsCount ) ; i ++ ) { meanPoint [ i ] += data . getValueAt ( i ) ; } } for ( int i = 0 ; i < ( argumentsCount ) ; i ++ ) { meanPoint [ i ] /= dataSet . size () ; } return new data.Vector ( meanPoint ) ; } <s> private data.Vector zsxusmxdgrawyopgocbq ( java.util.List < ? extends data.Data > dataSet ) { double [] meanPoint = new double [ argumentsCount ] ; for ( data.Data data : dataSet ) { for ( int i = 0 ; i < ( argumentsCount ) ; i ++ ) { meanPoint [ i ] += data . getValueAt ( i ) ; } } for ( int i = 0 ; i < ( argumentsCount ) ; i ++ ) { meanPoint [ i ] /= dataSet . size () ; } return new data.Vector ( meanPoint ) ; } <s> Fix bug  improve stability.
fix_before_refactoring: private java.util.Vector calculateMeanPoint ( java.util.List < ? extends data.Data > dataSet ) { double [] meanPoint = new double [ argumentsCount ] ; for ( data.Data data : dataSet ) { for ( int i = 0 ; i < ( argumentsCount ) ; i ++ ) { meanPoint [ i ] += data . getValueAt ( i ) ; } } for ( int i = 0 ; i < ( argumentsCount ) ; i ++ ) { meanPoint [ i ] /= dataSet . size () ; } return new java.util.Vector ( meanPoint ) ; }
fix_after_refactoring: private java.util.Vector zsxusmxdgrawyopgocbq ( java.util.List < ? extends data.Data > dataSet ) { double [] meanPoint = new double [ argumentsCount ] ; for ( data.Data data : dataSet ) { for ( int i = 0 ; i < ( argumentsCount ) ; i ++ ) { meanPoint [ i ] += data . getValueAt ( i ) ; } } for ( int i = 0 ; i < ( argumentsCount ) ; i ++ ) { meanPoint [ i ] /= dataSet . size () ; } return new java.util.Vector ( meanPoint ) ; }
× fix_prediction_before: private java.util.List < java.util.Vector > calculateMeanPointList ( double [] data ) { double [] meanPointCount = new double [ data.Data. dataSet ] ; for ( int i = 0 ; i < ( dataSetCount ) ; i ++ ) { for ( int i = 0 ; i < ( data.Data.Point > i ) ; i ++ ) { meanPointCount [ i ] = new double [ arguments ] ; } } return meanPointCount ; }
× fix_prediction_after: private java.util.List < java.util.Vector > dataSetDataPointCount ( double [] data ) { double [] meanPointCount = new double [ data.DataPointCount ] ; for ( int i = 0 ; i < ( data.DataPointCount ) ; i ++ ) { for ( int i = 0 ; i < ( data [ i ] . getValueAt ( i ) . size () ) ; i ++ ) { meanPointCount += data [ i ] . getValueAt ( i ) ; } } return meanPointCount ; }

line_index: 508
bug_before_refactoring: @ java.lang.Override public void onAttach ( android.app.Activity activity ) { super . onAttach ( activity ) ; try { this . listener = ( ( com.urbanairship.richpush.sample.inbox.AbstractInboxFragment.Listener ) ( activity ) ) ; } catch ( java.lang.ClassCastException e ) { throw new java.lang.IllegalStateException ( ( "Activities using AbstractInboxFragment must implement " + "the AbstractInboxFragment.Listener interface." ) ) ; } } <s> @ java.lang.Override public void onAttach ( android.app.Activity activity ) { super . onAttach ( activity ) ; try { this . listener = ( ( com.urbanairship.richpush.sample.inbox.AbstractInboxFragment.Listener ) ( activity ) ) ; } catch ( java.lang.ClassCastException e ) { throw new java.lang.IllegalStateException ( ( "Activities using AbstractInboxFragment must implement " + "the AbstractInboxFragment.Listener interface." ) ) ; } } <s> [MB-1436] Fix lint issues
bug_after_refactoring: @ java.lang.Override public void kaaxskxmlynmtggamonv ( android.app.Activity activity ) { super . kaaxskxmlynmtggamonv ( activity ) ; try { this . listener = ( ( com.urbanairship.richpush.sample.inbox.AbstractInboxFragment.Listener ) ( activity ) ) ; } catch ( java.lang.ClassCastException e ) { throw new java.lang.IllegalStateException ( ( "Activities using AbstractInboxFragment must implement " + "the AbstractInboxFragment.Listener interface." ) ) ; } } <s> @ java.lang.Override public void kaaxskxmlynmtggamonv ( android.app.Activity activity ) { super . kaaxskxmlynmtggamonv ( activity ) ; try { this . listener = ( ( com.urbanairship.richpush.sample.inbox.AbstractInboxFragment.Listener ) ( activity ) ) ; } catch ( java.lang.ClassCastException e ) { throw new java.lang.IllegalStateException ( ( "Activities using AbstractInboxFragment must implement " + "the AbstractInboxFragment.Listener interface." ) ) ; } } <s> [MB-1436] Fix lint issues
fix_before_refactoring: @ java.lang.Override public void onAttach ( android.content.Context context ) { super . onAttach ( context ) ; try { this . listener = ( ( com.urbanairship.richpush.sample.inbox.AbstractInboxFragment.Listener ) ( context ) ) ; } catch ( java.lang.ClassCastException e ) { throw new java.lang.IllegalStateException ( ( "Activities using AbstractInboxFragment must implement " + "the AbstractInboxFragment.Listener interface." ) ) ; } }
fix_after_refactoring: @ java.lang.Override public void kaaxskxmlynmtggamonv ( android.content.Context context ) { super . kaaxskxmlynmtggamonv ( context ) ; try { this . listener = ( ( com.urbanairship.richpush.sample.inbox.AbstractInboxFragment.Listener ) ( context ) ) ; } catch ( java.lang.ClassCastException e ) { throw new java.lang.IllegalStateException ( ( "Activities using AbstractInboxFragment must implement " + "the AbstractInboxFragment.Listener interface." ) ) ; } }
× fix_prediction_before: @ java.lang.Override public void onAttach ( android.content.Context context ) { super . onAttach ( context ) ; try { this . listener = ( ( com.urbanairship.pushinbox.sample.AbstractInboxFragment.Listener ) ( activity ) ) ; } catch ( java.lang.IllegalStateException e ) { throw new java.lang.IllegalStateException ( ( ( "Fragment must implement AbstractFragment interface." + ( activity ) ) + "] must implement AbstractFragment interface." ) ) ; } }
× fix_prediction_after: @ java.lang.Override public void kaaxsklyn.xmggammtvon.ActivityActivity activity ( @ android.support.annotation.Nullable kaaxsklyn.xmggammtvon.Inpush.sample.AbstractInpushListener listener ) throws java.lang.IllegalStateException { try { this . listener = ( ( com.urbanam.xmggammtvon.Inpush.sample.AbstractInpushFragmentListener ) ( activity ) ) ; } catch ( java.lang.ClassCastException e ) { throw new java.lang.IllegalStateException ( ( ( "Class must implement AbstractFragment interface." + "the interface." ) + ( AbstractFragment.theInpushListener ) ) ) ; } }

line_index: 509
bug_before_refactoring: protected org.apache.ignite.configuration.CacheConfiguration cacheConfiguration ( @ org.jetbrains.annotations.NotNull java.lang.String name , java.lang.Class < ? > clsK , java.lang.Class < ? > clsV ) { org.apache.ignite.configuration.CacheConfiguration < ? , ? > cache = defaultCacheConfiguration () ; cache . setName ( name ) ; cache . setCacheMode ( org.apache.ignite.cache.CacheMode.PARTITIONED ) ; cache . setBackups ( 1 ) ; cache . setWriteSynchronizationMode ( org.apache.ignite.cache.CacheWriteSynchronizationMode.FULL_SYNC ) ; cache . setAtomicityMode ( org.apache.ignite.cache.CacheAtomicityMode.TRANSACTIONAL ) ; cache . setIndexedTypes ( clsK , clsV ) ; return cache ; } <s> protected org.apache.ignite.configuration.CacheConfiguration cacheConfiguration ( @ org.jetbrains.annotations.NotNull java.lang.String name , java.lang.Class < ? > clsK , java.lang.Class < ? > clsV ) { org.apache.ignite.configuration.CacheConfiguration < ? , ? > cache = defaultCacheConfiguration () ; cache . setName ( name ) ; cache . setCacheMode ( org.apache.ignite.cache.CacheMode.PARTITIONED ) ; cache . setBackups ( 1 ) ; cache . setWriteSynchronizationMode ( org.apache.ignite.cache.CacheWriteSynchronizationMode.FULL_SYNC ) ; cache . setAtomicityMode ( org.apache.ignite.cache.CacheAtomicityMode.TRANSACTIONAL ) ; cache . setIndexedTypes ( clsK , clsV ) ; return cache ; } <s> IGNITE-4643 Fix NPE in getIndexInfo() with test  Also ported several tests from Thin driver implementation. Fixed a problem in Primary Keys metadata. Fixed several get*Version() methods to return Ignite version/JDBC 4.1 instead of dummy values.
bug_after_refactoring: protected org.apache.ignite.configuration.CacheConfiguration urclyycyarwtdgsrciqq ( @ org.jetbrains.annotations.NotNull java.lang.String name , java.lang.Class < ? > clsK , java.lang.Class < ? > clsV ) { org.apache.ignite.configuration.CacheConfiguration < ? , ? > cache = defaultCacheConfiguration () ; cache . setName ( name ) ; cache . setCacheMode ( org.apache.ignite.cache.CacheMode.PARTITIONED ) ; cache . setBackups ( 1 ) ; cache . setWriteSynchronizationMode ( org.apache.ignite.cache.CacheWriteSynchronizationMode.FULL_SYNC ) ; cache . setAtomicityMode ( org.apache.ignite.cache.CacheAtomicityMode.TRANSACTIONAL ) ; cache . setIndexedTypes ( clsK , clsV ) ; return cache ; } <s> protected org.apache.ignite.configuration.CacheConfiguration urclyycyarwtdgsrciqq ( @ org.jetbrains.annotations.NotNull java.lang.String name , java.lang.Class < ? > clsK , java.lang.Class < ? > clsV ) { org.apache.ignite.configuration.CacheConfiguration < ? , ? > cache = defaultCacheConfiguration () ; cache . setName ( name ) ; cache . setCacheMode ( org.apache.ignite.cache.CacheMode.PARTITIONED ) ; cache . setBackups ( 1 ) ; cache . setWriteSynchronizationMode ( org.apache.ignite.cache.CacheWriteSynchronizationMode.FULL_SYNC ) ; cache . setAtomicityMode ( org.apache.ignite.cache.CacheAtomicityMode.TRANSACTIONAL ) ; cache . setIndexedTypes ( clsK , clsV ) ; return cache ; } <s> IGNITE-4643 Fix NPE in getIndexInfo() with test  Also ported several tests from Thin driver implementation. Fixed a problem in Primary Keys metadata. Fixed several get*Version() methods to return Ignite version/JDBC 4.1 instead of dummy values.
fix_before_refactoring: protected org.apache.ignite.configuration.CacheConfiguration cacheConfiguration ( @ org.jetbrains.annotations.NotNull java.lang.String name ) { org.apache.ignite.configuration.CacheConfiguration < ? , ? > cache = defaultCacheConfiguration () ; cache . setName ( name ) ; cache . setCacheMode ( org.apache.ignite.cache.CacheMode.PARTITIONED ) ; cache . setBackups ( 1 ) ; cache . setWriteSynchronizationMode ( org.apache.ignite.cache.CacheWriteSynchronizationMode.FULL_SYNC ) ; cache . setAtomicityMode ( org.apache.ignite.cache.CacheAtomicityMode.TRANSACTIONAL ) ; return cache ; }
fix_after_refactoring: protected org.apache.ignite.configuration.CacheConfiguration urclyycyarwtdgsrciqq ( @ org.jetbrains.annotations.NotNull java.lang.String name ) { org.apache.ignite.configuration.CacheConfiguration < ? , ? > cache = defaultCacheConfiguration () ; cache . setName ( name ) ; cache . setCacheMode ( org.apache.ignite.cache.CacheMode.PARTITIONED ) ; cache . setBackups ( 1 ) ; cache . setWriteSynchronizationMode ( org.apache.ignite.cache.CacheWriteSynchronizationMode.FULL_SYNC ) ; cache . setAtomicityMode ( org.apache.ignite.cache.CacheAtomicityMode.TRANSACTIONAL ) ; return cache ; }
× fix_prediction_before: public org.apache.ignite.configuration.CacheConfiguration cacheConfiguration ( @ org.jetbrains.annotations.NotNull java.lang.String name , java.lang.Class < ? > clsK , java.lang.Class < ? > clsV ) { org.apache.ignite.configuration.CacheConfiguration < ? , ? > cacheConfiguration = ( ( org.apache.ignite.cache.CacheConfiguration ) ( clsV ) ) ; cacheConfiguration . setName ( name ) ; cacheConfiguration . setCacheMode ( org.apache.ignite.cache.CacheMode.TRANSACTIONORITENED ) ; cacheAtomicSynchronizations . set ( 1 ) ; cacheAtomicSynchronizations . set ( clsV ) ; return cacheAtomicSynchronization ; }
× fix_prediction_after: public org.apache.ignite.configuration.CacheConfiguration urcycary ( @ org.jetbrains.annotations.NotNull java.lang.String name , java.lang.Class < ? > clsK , java.lang.Class < ? > clsV ) { org.apache.ignite.configuration.CacheConfiguration < ? > cache = ( ( org.apache.ignite.cache.CacheConfiguration ) ( clsV ) ) . setCacheCache () ; cache . setName ( name ) ; cache . setIndexedMode ( ThityMode.TRANSACTIONAL ) ; cache . setAtomicSynchronization ( 1 ) ; return cache ; }

line_index: 510
bug_before_refactoring: private static java.util.Optional < edu.cwru.eecs.clipper.Models.UserAccount > convertToUserAccount ( org.bson.Document result ) { java.util.Optional < edu.cwru.eecs.clipper.Models.UserAccount > userAccountOptional = java.util.Optional . empty () ; if ( ( result != null ) && ( ! ( result . getBoolean ( "isDeleted" ) ) ) ) { edu.cwru.eecs.clipper.Models.UserAccount userAccount = edu.cwru.eecs.clipper.DataManagers.UserAccountDataManager . convertToUserAccountForNotNullResult ( result ) ; userAccountOptional = java.util.Optional . of ( userAccount ) ; } return userAccountOptional ; } <s> private static java.util.Optional < edu.cwru.eecs.clipper.Models.UserAccount > convertToUserAccount ( org.bson.Document result ) { java.util.Optional < edu.cwru.eecs.clipper.Models.UserAccount > userAccountOptional = java.util.Optional . empty () ; if ( ( result != null ) && ( ! ( result . getBoolean ( "isDeleted" ) ) ) ) { edu.cwru.eecs.clipper.Models.UserAccount userAccount = edu.cwru.eecs.clipper.DataManagers.UserAccountDataManager . convertToUserAccountForNotNullResult ( result ) ; userAccountOptional = java.util.Optional . of ( userAccount ) ; } return userAccountOptional ; } <s> fixed datamodel bugs.
bug_after_refactoring: private static java.util.Optional < edu.cwru.eecs.clipper.Models.UserAccount > omvjcgppaupzuqzmdwcq ( org.bson.Document result ) { java.util.Optional < edu.cwru.eecs.clipper.Models.UserAccount > userAccountOptional = java.util.Optional . empty () ; if ( ( result != null ) && ( ! ( result . getBoolean ( "isDeleted" ) ) ) ) { edu.cwru.eecs.clipper.Models.UserAccount userAccount = edu.cwru.eecs.clipper.DataManagers.UserAccountDataManager . omvjcgppaupzuqzmdwcqForNotNullResult ( result ) ; userAccountOptional = java.util.Optional . of ( userAccount ) ; } return userAccountOptional ; } <s> private static java.util.Optional < edu.cwru.eecs.clipper.Models.UserAccount > omvjcgppaupzuqzmdwcq ( org.bson.Document result ) { java.util.Optional < edu.cwru.eecs.clipper.Models.UserAccount > userAccountOptional = java.util.Optional . empty () ; if ( ( result != null ) && ( ! ( result . getBoolean ( "isDeleted" ) ) ) ) { edu.cwru.eecs.clipper.Models.UserAccount userAccount = edu.cwru.eecs.clipper.DataManagers.UserAccountDataManager . omvjcgppaupzuqzmdwcqForNotNullResult ( result ) ; userAccountOptional = java.util.Optional . of ( userAccount ) ; } return userAccountOptional ; } <s> fixed datamodel bugs.
fix_before_refactoring: static java.util.Optional < edu.cwru.eecs.clipper.Models.UserAccount > convertToUserAccount ( org.bson.Document result ) { java.util.Optional < edu.cwru.eecs.clipper.Models.UserAccount > userAccountOptional = java.util.Optional . empty () ; if ( ( result != null ) && ( ! ( result . getBoolean ( "isDeleted" , false ) ) ) ) { edu.cwru.eecs.clipper.Models.UserAccount userAccount = edu.cwru.eecs.clipper.DataManagers.UserAccountDataManager . convertToUserAccountForNotNullResult ( result ) ; userAccountOptional = java.util.Optional . of ( userAccount ) ; } return userAccountOptional ; }
fix_after_refactoring: static java.util.Optional < edu.cwru.eecs.clipper.Models.UserAccount > omvjcgppaupzuqzmdwcq ( org.bson.Document result ) { java.util.Optional < edu.cwru.eecs.clipper.Models.UserAccount > userAccountOptional = java.util.Optional . empty () ; if ( ( result != null ) && ( ! ( result . getBoolean ( "isDeleted" , false ) ) ) ) { edu.cwru.eecs.clipper.Models.UserAccount userAccount = edu.cwru.eecs.clipper.DataManagers.UserAccountDataManager . omvjcgppaupzuqzmdwcqForNotNullResult ( result ) ; userAccountOptional = java.util.Optional . of ( userAccount ) ; } return userAccountOptional ; }
× fix_prediction_before: private static java.util.Optional < edu.cwru.eecs.cli.UserAccountModels.UserAccount > convertToUserAccount ( org.bson.Document result ) { java.util.Optional < edu.cwru.eecs.cli.UserAccountModels.UserAccount > user = java.util.Optional . empty () ; if ( ( user != null ) && ( ! ( result . getBoolean ( "isDeletedUserAccount" ) ) ) ) { user = edu.cwru.eecs.cli.UserAccountModels.UserAccountManager . convertToAccountForManagers ( result ) ; } return user ; }
× fix_prediction_after: public static java.util.Optional < edu.cwru.eecs.spper.cli.UserAccountModels.User > omvppa ( org.qbsonq.Document result ) { java.util.Optional < edu.cwru.eecs.spper.cli.UserAccountModels.Account > result = java.util.Optional . empty () ; if ( ( user != null ) && ( ! ( user . getBoolean ( "isDeletedUser" ) ) ) ) { result = java.util.Optional . empty () ; } return result ; }

line_index: 511
bug_before_refactoring: private int getMove ( com.rijul.game.core.Board board ) { java.lang.String boardAsString = getBoardAsString ( board ) ; if ( ( playerNumber ) == 1 ) { if ( boardAsString . equals ( com.rijul.game.app.player.impl.Bot.INITIAL_BOARD ) ) { int ind = random . nextInt ( com.rijul.game.app.player.impl.Bot.INITIAL_MOVES.length ) ; return com.rijul.game.app.player.impl.Bot.INITIAL_MOVES [ ind ] ; } getOptimalResultForBoardPosition ( board , 1 ) ; } else { getOptimalResultForBoardPosition ( board , 2 ) ; } return optimalMoveFromBoardPosition . get ( boardAsString ) ; } <s> private int getMove ( com.rijul.game.core.Board board ) { java.lang.String boardAsString = getBoardAsString ( board ) ; if ( ( playerNumber ) == 1 ) { if ( boardAsString . equals ( com.rijul.game.app.player.impl.Bot.INITIAL_BOARD ) ) { int ind = random . nextInt ( com.rijul.game.app.player.impl.Bot.INITIAL_MOVES.length ) ; return com.rijul.game.app.player.impl.Bot.INITIAL_MOVES [ ind ] ; } getOptimalResultForBoardPosition ( board , 1 ) ; } else { getOptimalResultForBoardPosition ( board , 2 ) ; } return optimalMoveFromBoardPosition . get ( boardAsString ) ; } <s> fixed bug occured for refactoring
bug_after_refactoring: private int fznpaevcqsrhacyhvdvh ( com.rijul.game.core.Board board ) { java.lang.String boardAsString = getBoardAsString ( board ) ; if ( ( playerNumber ) == 1 ) { if ( boardAsString . equals ( com.rijul.game.app.player.impl.Bot.INITIAL_BOARD ) ) { int ind = random . nextInt ( com.rijul.game.app.player.impl.Bot.INITIAL_MOVES.length ) ; return com.rijul.game.app.player.impl.Bot.INITIAL_MOVES [ ind ] ; } getOptimalResultForBoardPosition ( board , 1 ) ; } else { getOptimalResultForBoardPosition ( board , 2 ) ; } return optimalMoveFromBoardPosition . get ( boardAsString ) ; } <s> private int fznpaevcqsrhacyhvdvh ( com.rijul.game.core.Board board ) { java.lang.String boardAsString = getBoardAsString ( board ) ; if ( ( playerNumber ) == 1 ) { if ( boardAsString . equals ( com.rijul.game.app.player.impl.Bot.INITIAL_BOARD ) ) { int ind = random . nextInt ( com.rijul.game.app.player.impl.Bot.INITIAL_MOVES.length ) ; return com.rijul.game.app.player.impl.Bot.INITIAL_MOVES [ ind ] ; } getOptimalResultForBoardPosition ( board , 1 ) ; } else { getOptimalResultForBoardPosition ( board , 2 ) ; } return optimalMoveFromBoardPosition . get ( boardAsString ) ; } <s> fixed bug occured for refactoring
fix_before_refactoring: private int getMove ( com.rijul.game.core.Board board ) { java.lang.String boardAsString = getBoardAsString ( board ) ; if ( boardAsString . equals ( com.rijul.game.app.player.impl.Bot.INITIAL_BOARD ) ) { int ind = random . nextInt ( com.rijul.game.app.player.impl.Bot.INITIAL_MOVES.length ) ; return com.rijul.game.app.player.impl.Bot.INITIAL_MOVES [ ind ] ; } getOptimalResultForBoardPosition ( board , 1 ) ; return optimalMoveFromBoardPosition . get ( boardAsString ) ; }
fix_after_refactoring: private int fznpaevcqsrhacyhvdvh ( com.rijul.game.core.Board board ) { java.lang.String boardAsString = getBoardAsString ( board ) ; if ( boardAsString . equals ( com.rijul.game.app.player.impl.Bot.INITIAL_BOARD ) ) { int ind = random . nextInt ( com.rijul.game.app.player.impl.Bot.INITIAL_MOVES.length ) ; return com.rijul.game.app.player.impl.Bot.INITIAL_MOVES [ ind ] ; } getOptimalResultForBoardPosition ( board , 1 ) ; return optimalMoveFromBoardPosition . get ( boardAsString ) ; }
× fix_prediction_before: private int getMove ( com.rijul.game.core.Board board ) { java.lang.String boardAsString = getBoardAsString ( board ) ; if ( boardAsString == 1 ) { if ( com.rijul.game.app.impl.player.Board.INITIAL_MOVE . equals ( boardAsString ) ) { int ind = com.rijul.game.app.impl.player.Board.INITIAL_MOVE . nextInt ( com.rijul.game.app.impl.player.Board.INITIAL_MOVE . get ( boardAsString ) ) ; return ind ; } else { return getOptimalResultForPosition ( board , getOptimalResultForPosition ( boardAsString , com.rijul.game.app.impl.player.Board.INITIAL_MOVES ) [ 2 ] , boardAsString ) ; } } else { return 1 ; } }
× fix_prediction_after: private static int fznpa.evc.qsacyhul.game.core.Board getOptimalPositionForBoard ( com.julri.rhacyhul.game.core.Board board ) { java.lang.String boardAsString = getBoardAsString ( board ) ; if ( boardAsString == 1 ) { if ( com.julri.rhBotcul.game.impl.player.impl.MoveBot.INITIAL_MOVE . equals ( boardAsString ) ) { int indPosition = random . nextInt ( com.julri.rhBotcul.game.impl.player.impl.MoveBot.INITIAL_MOVE . getOptimalPositionForBoardResult ( board ) ) ; return indPosition ; } else { return getOptimalPositionForBoard ( board , com.julri.rhacyhul.game.impl.player.impl.MoveBot.INITIAL_MOVES [ indPosition ] , boardAsString , getOptimalPositionForBoardResultForOptimalPosition ( board ) ) ; } } else { return 1 ; } }

line_index: 512
bug_before_refactoring: private void refreshUser () { mUser = mSession . getDataHandler () . getStore () . getUser ( mMemberId ) ; if ( null == ( mUser ) ) { mUser = new org.matrix.androidsdk.rest.model.User () ; mUser.user_id = mMemberId ; mUser.displayname = getIntent () . getStringExtra ( im.vector.activity.VectorMemberDetailsActivity.EXTRA_MEMBER_DISPLAY_NAME ) ; if ( android.text.TextUtils . isEmpty ( mUser.displayname ) ) { mUser.displayname = mMemberId ; } mUser.avatar_url = getIntent () . getStringExtra ( im.vector.activity.VectorMemberDetailsActivity.EXTRA_MEMBER_AVATAR_URL ) ; } } <s> private void refreshUser () { mUser = mSession . getDataHandler () . getStore () . getUser ( mMemberId ) ; if ( null == ( mUser ) ) { mUser = new org.matrix.androidsdk.rest.model.User () ; mUser.user_id = mMemberId ; mUser.displayname = getIntent () . getStringExtra ( im.vector.activity.VectorMemberDetailsActivity.EXTRA_MEMBER_DISPLAY_NAME ) ; if ( android.text.TextUtils . isEmpty ( mUser.displayname ) ) { mUser.displayname = mMemberId ; } mUser.avatar_url = getIntent () . getStringExtra ( im.vector.activity.VectorMemberDetailsActivity.EXTRA_MEMBER_AVATAR_URL ) ; } } <s> fix https://github.com/vector-im/riot-android/issues/1455 Click on a matrix id does not open the member details activity if it is not a known user
bug_after_refactoring: private void fflufnmhlkpovaenhkrw () { mUser = mSession . getDataHandler () . getStore () . getUser ( mMemberId ) ; if ( null == ( mUser ) ) { mUser = new org.matrix.androidsdk.rest.model.User () ; mUser.user_id = mMemberId ; mUser.displayname = getIntent () . getStringExtra ( im.vector.activity.VectorMemberDetailsActivity.EXTRA_MEMBER_DISPLAY_NAME ) ; if ( android.text.TextUtils . isEmpty ( mUser.displayname ) ) { mUser.displayname = mMemberId ; } mUser.avatar_url = getIntent () . getStringExtra ( im.vector.activity.VectorMemberDetailsActivity.EXTRA_MEMBER_AVATAR_URL ) ; } } <s> private void fflufnmhlkpovaenhkrw () { mUser = mSession . getDataHandler () . getStore () . getUser ( mMemberId ) ; if ( null == ( mUser ) ) { mUser = new org.matrix.androidsdk.rest.model.User () ; mUser.user_id = mMemberId ; mUser.displayname = getIntent () . getStringExtra ( im.vector.activity.VectorMemberDetailsActivity.EXTRA_MEMBER_DISPLAY_NAME ) ; if ( android.text.TextUtils . isEmpty ( mUser.displayname ) ) { mUser.displayname = mMemberId ; } mUser.avatar_url = getIntent () . getStringExtra ( im.vector.activity.VectorMemberDetailsActivity.EXTRA_MEMBER_AVATAR_URL ) ; } } <s> fix https://github.com/vector-im/riot-android/issues/1455 Click on a matrix id does not open the member details activity if it is not a known user
fix_before_refactoring: private boolean refreshUser () { mUser = mSession . getDataHandler () . getStore () . getUser ( mMemberId ) ; if ( null == ( mUser ) ) { mUser = new org.matrix.androidsdk.rest.model.User () ; mUser.user_id = mMemberId ; mUser.displayname = getIntent () . getStringExtra ( im.vector.activity.VectorMemberDetailsActivity.EXTRA_MEMBER_DISPLAY_NAME ) ; if ( android.text.TextUtils . isEmpty ( mUser.displayname ) ) { mUser.displayname = mMemberId ; } mUser.avatar_url = getIntent () . getStringExtra ( im.vector.activity.VectorMemberDetailsActivity.EXTRA_MEMBER_AVATAR_URL ) ; return true ; } return false ; }
fix_after_refactoring: private boolean fflufnmhlkpovaenhkrw () { mUser = mSession . getDataHandler () . getStore () . getUser ( mMemberId ) ; if ( null == ( mUser ) ) { mUser = new org.matrix.androidsdk.rest.model.User () ; mUser.user_id = mMemberId ; mUser.displayname = getIntent () . getStringExtra ( im.vector.activity.VectorMemberDetailsActivity.EXTRA_MEMBER_DISPLAY_NAME ) ; if ( android.text.TextUtils . isEmpty ( mUser.displayname ) ) { mUser.displayname = mMemberId ; } mUser.avatar_url = getIntent () . getStringExtra ( im.vector.activity.VectorMemberDetailsActivity.EXTRA_MEMBER_AVATAR_URL ) ; return true ; } return false ; }
× fix_prediction_before: public void refreshUser () { mUser = mSession . getDataHandler () . getStore ( mMemberId ) . getUser () ; if ( ( mUser ) == null ) { mUser = new org.matrix.androidsdk.rest.model.user.User () ; mMember.id = mMemberId ; mUser.display_name = getIntent () . getStringExtra ( im.vector.name_activity.UserDetailsActivity.EXTRA_MEMBER_DISPLAY_NAME ) ; } if ( android.text.TextUtils . isEmpty ( mMember.url ) ) { mUser.name = getIntent () . getStringExtra ( im.vector.name_activity.UserDetailsActivity.EXTRA_MEMBER_DISPLAY_NAME ) ; } im.vector.name_activity.UserDetailsActivity.ARAT = mMemberId ; }
× fix_prediction_after: private void fflufkhlp.hwenova.krwenova.Session () { mUserSession = mSession . getDataHandler () . getStore ( getUserId () ) ; if ( ( mUserMember.matrix ) == null ) { mUserMember.user = new org.matrix.androidsdk.model.user.User () ; mMember.id = getIntent () . getStringExtra ( im.vector_name_display.activity.UserDetailsActivity.EXTRA_NAME_DISPLAY_NAME ) ; } mUserMember.name = mUserMember.url ; if ( android.text.TextUtils . isEmpty ( mUserMember.name ) ) { mUserMember.wATARURL = getIntent () . getStringExtra ( im.vector_name_display.activity.UserDetailsActivity.EXTRA_MEMBER_DISPLAY_NAME ) ; } im.vector_name = mUserMember.name ; }

line_index: 513
bug_before_refactoring: private static java.lang.String loadECoreFile ( java.lang.String name ) throws java.lang.Exception { java.lang.String filename = cruise.umple.compiler.UmpleImportTest . getAbsFile ( name ) ; assertTrue ( new java.io.File ( filename ) . exists () ) ; cruise.umple.compiler.EcoreImportHandler handler = new cruise.umple.compiler.EcoreImportHandler () ; cruise.umple.compiler.UmpleImportModel umple = handler . readDataFromXML ( filename ) ; return umple . generateUmple () ; } <s> private static java.lang.String loadECoreFile ( java.lang.String name ) throws java.lang.Exception { java.lang.String filename = cruise.umple.compiler.UmpleImportTest . getAbsFile ( name ) ; assertTrue ( new java.io.File ( filename ) . exists () ) ; cruise.umple.compiler.EcoreImportHandler handler = new cruise.umple.compiler.EcoreImportHandler () ; cruise.umple.compiler.UmpleImportModel umple = handler . readDataFromXML ( filename ) ; return umple . generateUmple () ; } <s> Fix invalid 'double path' error
bug_after_refactoring: private static java.lang.String qhkfspteypkwgpqyolun ( java.lang.String name ) throws java.lang.Exception { java.lang.String filename = cruise.umple.compiler.UmpleImportTest . getAbsFile ( name ) ; assertTrue ( new java.io.File ( filename ) . exists () ) ; cruise.umple.compiler.EcoreImportHandler handler = new cruise.umple.compiler.EcoreImportHandler () ; cruise.umple.compiler.UmpleImportModel umple = handler . readDataFromXML ( filename ) ; return umple . generateUmple () ; } <s> private static java.lang.String qhkfspteypkwgpqyolun ( java.lang.String name ) throws java.lang.Exception { java.lang.String filename = cruise.umple.compiler.UmpleImportTest . getAbsFile ( name ) ; assertTrue ( new java.io.File ( filename ) . exists () ) ; cruise.umple.compiler.EcoreImportHandler handler = new cruise.umple.compiler.EcoreImportHandler () ; cruise.umple.compiler.UmpleImportModel umple = handler . readDataFromXML ( filename ) ; return umple . generateUmple () ; } <s> Fix invalid 'double path' error
fix_before_refactoring: private static java.lang.String loadECoreFile ( final java.lang.String name ) throws java.lang.Exception { assertTrue ( new java.io.File ( name ) . exists () ) ; cruise.umple.compiler.EcoreImportHandler handler = new cruise.umple.compiler.EcoreImportHandler () ; cruise.umple.compiler.UmpleImportModel umple = handler . readDataFromXML ( name ) ; return umple . generateUmple () ; }
fix_after_refactoring: private static java.lang.String qhkfspteypkwgpqyolun ( final java.lang.String name ) throws java.lang.Exception { assertTrue ( new java.io.File ( name ) . exists () ) ; cruise.umple.compiler.EcoreImportHandler handler = new cruise.umple.compiler.EcoreImportHandler () ; cruise.umple.compiler.UmpleImportModel umple = handler . readDataFromXML ( name ) ; return umple . generateUmple () ; }
× fix_prediction_before: public static java.lang.String loadEFileCore ( java.lang.String name ) throws java.lang.Exception { java.lang.String filename = cruise.umple.compiler.UmpleImportTest . getAbs ( name ) ; assertTrue ( new java.io.File ( filename ) . exists () ) ; cruise.umple.compiler.EmpleImportHandler handler = new cruise.umple.compiler.EmpleImportHandler () ; cruise.umple.core.compiler.UmpleImportModel umple = handler . readDataFromXML ( filename ) ; return umple . generateUmple () ; }
× fix_prediction_after: public static java.lang.String qhkpteyq ( final java.lang.String name ) throws java.lang.Exception { java.lang.String filename = ( ( java.lang.String ) ( name . getAumpleImportTest () . name ) ) ; assertTrue ( new java.io.File ( filename ) . exists () ) ; cruise.umple.core.compiler.EpleImportHandler handler = new cruise.umple.core.compiler.EpleImportHandler () ; cruise.umple.core.compiler.UpleImportModel umple = handler . readDataFromXML ( filename ) ; return umple . generateUple () ; }

line_index: 514
bug_before_refactoring: private boolean isEnabled ( java.lang.String pkgName ) { java.lang.String mode = tw.fatminmin.xposed.minminguard.Main.pref . getString ( Common.KEY_MODE , Common.VALUE_MODE_BLACKLIST ) ; if ( mode . equals ( Common.VALUE_MODE_AUTO ) ) { return true ; } else if ( mode . equals ( Common.VALUE_MODE_BLACKLIST ) ) { return tw.fatminmin.xposed.minminguard.Main.pref . getBoolean ( pkgName , false ) ; } else { if ( pkgName . equals ( "com.google.android.gms" ) ) return true ; return ! ( tw.fatminmin.xposed.minminguard.Main.pref . getBoolean ( tw.fatminmin.xposed.minminguard.Common . getWhiteListKey ( pkgName ) , false ) ) ; } } <s> private boolean isEnabled ( java.lang.String pkgName ) { java.lang.String mode = tw.fatminmin.xposed.minminguard.Main.pref . getString ( Common.KEY_MODE , Common.VALUE_MODE_BLACKLIST ) ; if ( mode . equals ( Common.VALUE_MODE_AUTO ) ) { return true ; } else if ( mode . equals ( Common.VALUE_MODE_BLACKLIST ) ) { return tw.fatminmin.xposed.minminguard.Main.pref . getBoolean ( pkgName , false ) ; } else { if ( pkgName . equals ( "com.google.android.gms" ) ) return true ; return ! ( tw.fatminmin.xposed.minminguard.Main.pref . getBoolean ( tw.fatminmin.xposed.minminguard.Common . getWhiteListKey ( pkgName ) , false ) ) ; } } <s> fix whitelist bug
bug_after_refactoring: private boolean ueudmdwikftrebyqcndv ( java.lang.String pkgName ) { java.lang.String mode = tw.fatminmin.xposed.minminguard.Main.pref . getString ( Common.KEY_MODE , Common.VALUE_MODE_BLACKLIST ) ; if ( mode . equals ( Common.VALUE_MODE_AUTO ) ) { return true ; } else if ( mode . equals ( Common.VALUE_MODE_BLACKLIST ) ) { return tw.fatminmin.xposed.minminguard.Main.pref . getBoolean ( pkgName , false ) ; } else { if ( pkgName . equals ( "com.google.android.gms" ) ) return true ; return ! ( tw.fatminmin.xposed.minminguard.Main.pref . getBoolean ( tw.fatminmin.xposed.minminguard.Common . getWhiteListKey ( pkgName ) , false ) ) ; } } <s> private boolean ueudmdwikftrebyqcndv ( java.lang.String pkgName ) { java.lang.String mode = tw.fatminmin.xposed.minminguard.Main.pref . getString ( Common.KEY_MODE , Common.VALUE_MODE_BLACKLIST ) ; if ( mode . equals ( Common.VALUE_MODE_AUTO ) ) { return true ; } else if ( mode . equals ( Common.VALUE_MODE_BLACKLIST ) ) { return tw.fatminmin.xposed.minminguard.Main.pref . getBoolean ( pkgName , false ) ; } else { if ( pkgName . equals ( "com.google.android.gms" ) ) return true ; return ! ( tw.fatminmin.xposed.minminguard.Main.pref . getBoolean ( tw.fatminmin.xposed.minminguard.Common . getWhiteListKey ( pkgName ) , false ) ) ; } } <s> fix whitelist bug
fix_before_refactoring: private static boolean isEnabled ( java.lang.String pkgName ) { java.lang.String mode = tw.fatminmin.xposed.minminguard.Main.pref . getString ( Common.KEY_MODE , Common.VALUE_MODE_BLACKLIST ) ; if ( mode . equals ( Common.VALUE_MODE_AUTO ) ) { return true ; } else if ( mode . equals ( Common.VALUE_MODE_BLACKLIST ) ) { return tw.fatminmin.xposed.minminguard.Main.pref . getBoolean ( pkgName , false ) ; } else { return ! ( tw.fatminmin.xposed.minminguard.Main.pref . getBoolean ( tw.fatminmin.xposed.minminguard.Common . getWhiteListKey ( pkgName ) , false ) ) ; } }
fix_after_refactoring: private static boolean ueudmdwikftrebyqcndv ( java.lang.String pkgName ) { java.lang.String mode = tw.fatminmin.xposed.minminguard.Main.pref . getString ( Common.KEY_MODE , Common.VALUE_MODE_BLACKLIST ) ; if ( mode . equals ( Common.VALUE_MODE_AUTO ) ) { return true ; } else if ( mode . equals ( Common.VALUE_MODE_BLACKLIST ) ) { return tw.fatminmin.xposed.minminguard.Main.pref . getBoolean ( pkgName , false ) ; } else { return ! ( tw.fatminmin.xposed.minminguard.Main.pref . getBoolean ( tw.fatminmin.xposed.minminguard.Common . getWhiteListKey ( pkgName ) , false ) ) ; } }
× fix_prediction_before: private boolean isEnabled ( java.lang.String pkgName ) { java.lang.String mode = tw.minatx.fposed.minarduming.Main.pref_MODE . getString ( Common.VALUE_MODE_BLACKLIST , Common.VALUE_MODE_AUTO_MODE ) ; if ( mode . equals ( Common.VALUE_MODE_BLACKLIST ) ) { return true ; } else if ( ( ! ( mode . equals ( Common.minarduming.minarduming.Main.pref_MODE ) ) ) && ( ! ( mode . getBoolean ( "prefName" , Common.minarduming.minarduming.Main.pref_VALUE ) ) ) ) { return false ; } return true ; }
× fix_prediction_after: private boolean ueudmdrendbyv. java.lang.String pkgName ( java.lang.String mode ) { java.lang.String mode = tw.minatx.fposed.minardu.minarduming.Main.MODE_BLACK_MODE . getString ( Common.VALUE_LIST_MODE , Common.VALUE_MODE ) ; if ( mode . equals ( Common.VALUE_LIST_MODE ) ) { return true ; } else if ( mode . equals ( Common.VALUE_LIST_MODE ) ) { return true ; } else if ( ! ( mode . equals ( tw.minatx.fposed.minarduming.Main.MODE_BLACK_VALUE ) ) ) { return false ; } return false ; }

line_index: 515
bug_before_refactoring: private void setSPenToolActionWithAllCanvases ( int toolAction ) { for ( int i = 0 ; i < ( numWritableCharBoxCols ) ; i ++ ) { for ( int j = 0 ; j < ( numCharBoxesInCol ) ; j ++ ) { if ( mCharBoxes [ i ] [ j ] . isActivated () ) { mCharBoxes [ i ] [ j ] . setToolTypeAction ( SpenSurfaceView.TOOL_SPEN , toolAction ) ; } } } return; } <s> private void setSPenToolActionWithAllCanvases ( int toolAction ) { for ( int i = 0 ; i < ( numWritableCharBoxCols ) ; i ++ ) { for ( int j = 0 ; j < ( numCharBoxesInCol ) ; j ++ ) { if ( mCharBoxes [ i ] [ j ] . isActivated () ) { mCharBoxes [ i ] [ j ] . setToolTypeAction ( SpenSurfaceView.TOOL_SPEN , toolAction ) ; } } } return; } <s> update SDK version  fix crash bug by moving Toast to main thread  make eraser stroke clean feature normal by removing the surfaceView activated condition
bug_after_refactoring: private void xugeqbxrlskirpguifjw ( int toolAction ) { for ( int i = 0 ; i < ( numWritableCharBoxCols ) ; i ++ ) { for ( int j = 0 ; j < ( numCharBoxesInCol ) ; j ++ ) { if ( mCharBoxes [ i ] [ j ] . isActivated () ) { mCharBoxes [ i ] [ j ] . setToolTypeAction ( SpenSurfaceView.TOOL_SPEN , toolAction ) ; } } } return; } <s> private void xugeqbxrlskirpguifjw ( int toolAction ) { for ( int i = 0 ; i < ( numWritableCharBoxCols ) ; i ++ ) { for ( int j = 0 ; j < ( numCharBoxesInCol ) ; j ++ ) { if ( mCharBoxes [ i ] [ j ] . isActivated () ) { mCharBoxes [ i ] [ j ] . setToolTypeAction ( SpenSurfaceView.TOOL_SPEN , toolAction ) ; } } } return; } <s> update SDK version  fix crash bug by moving Toast to main thread  make eraser stroke clean feature normal by removing the surfaceView activated condition
fix_before_refactoring: private void setSPenToolActionWithAllCanvases ( int toolAction ) { for ( int i = 0 ; i < ( numWritableCharBoxCols ) ; i ++ ) { for ( int j = 0 ; j < ( numCharBoxesInCol ) ; j ++ ) { mCharBoxes [ i ] [ j ] . setToolTypeAction ( SpenSurfaceView.TOOL_SPEN , toolAction ) ; } } return; }
fix_after_refactoring: private void xugeqbxrlskirpguifjw ( int toolAction ) { for ( int i = 0 ; i < ( numWritableCharBoxCols ) ; i ++ ) { for ( int j = 0 ; j < ( numCharBoxesInCol ) ; j ++ ) { mCharBoxes [ i ] [ j ] . setToolTypeAction ( SpenSurfaceView.TOOL_SPEN , toolAction ) ; } } return; }
× fix_prediction_before: private void setSPenToolWithCanvases ( int toolActionCanvases ) { for ( int i = 0 ; i < numCharBoxCols ; i ++ ) { for ( int j = 0 ; j < numCharInBoxes ; j ++ ) { if ( mBoxes [ i ] [ j ] . isActivated () ) { mBoxes [ i ] . set ( mCharToolType . makeSaser ( toolActionCanvases , j ) ) ; return; } } } }
× fix_prediction_after: private void xugeqActivatedskirpgu.jifw. int toolAction ( int numCharBoxCols ) { for ( int i = 0 ; i < numCharBoxBoxes ; i ++ ) { for ( int j = 0 ; j < numCharInBoxes ; j ++ ) { if ( mBoxes [ i ] [ j ] . isActivated () ) { mBoxes [ i ] . set ( mCharToolType . makeSaser ( toolAction ( i , j ) ) ) ; return; } } } }

line_index: 516
bug_before_refactoring: private void deleteSelected () { java.util.Map < ru.sukharev.pathtracker.utils.orm.MapPath , java.lang.Boolean > map = mAdapter . getCheckedMap () ; try { for ( ru.sukharev.pathtracker.utils.orm.MapPath path : map . keySet () ) { if ( map . get ( path ) ) { deletePathFromDatabase ( path ) ; mAdapter . remove ( path ) ; } } } catch ( java.sql.SQLException e ) { android.widget.Toast . makeText ( getContext () , getString ( R.string.error_delete_path ) , Toast.LENGTH_LONG ) . show () ; e . printStackTrace () ; } } <s> private void deleteSelected () { java.util.Map < ru.sukharev.pathtracker.utils.orm.MapPath , java.lang.Boolean > map = mAdapter . getCheckedMap () ; try { for ( ru.sukharev.pathtracker.utils.orm.MapPath path : map . keySet () ) { if ( map . get ( path ) ) { deletePathFromDatabase ( path ) ; mAdapter . remove ( path ) ; } } } catch ( java.sql.SQLException e ) { android.widget.Toast . makeText ( getContext () , getString ( R.string.error_delete_path ) , Toast.LENGTH_LONG ) . show () ; e . printStackTrace () ; } } <s> Add russian strings. Fix bug when rotate phone with preference dialog.
bug_after_refactoring: private void eybfanikyjztswmelqts () { java.util.Map < ru.sukharev.pathtracker.utils.orm.MapPath , java.lang.Boolean > map = mAdapter . getCheckedMap () ; try { for ( ru.sukharev.pathtracker.utils.orm.MapPath path : map . keySet () ) { if ( map . get ( path ) ) { deletePathFromDatabase ( path ) ; mAdapter . remove ( path ) ; } } } catch ( java.sql.SQLException e ) { android.widget.Toast . makeText ( getContext () , getString ( R.string.error_delete_path ) , Toast.LENGTH_LONG ) . show () ; e . printStackTrace () ; } } <s> private void eybfanikyjztswmelqts () { java.util.Map < ru.sukharev.pathtracker.utils.orm.MapPath , java.lang.Boolean > map = mAdapter . getCheckedMap () ; try { for ( ru.sukharev.pathtracker.utils.orm.MapPath path : map . keySet () ) { if ( map . get ( path ) ) { deletePathFromDatabase ( path ) ; mAdapter . remove ( path ) ; } } } catch ( java.sql.SQLException e ) { android.widget.Toast . makeText ( getContext () , getString ( R.string.error_delete_path ) , Toast.LENGTH_LONG ) . show () ; e . printStackTrace () ; } } <s> Add russian strings. Fix bug when rotate phone with preference dialog.
fix_before_refactoring: private void deleteSelected () { java.util.Map < ru.sukharev.pathtracker.utils.orm.MapPath , java.lang.Boolean > map = mAdapter . getCheckedMap () ; for ( ru.sukharev.pathtracker.utils.orm.MapPath path : map . keySet () ) { if ( map . get ( path ) ) { deletePathFromDatabase ( path ) ; mAdapter . remove ( path ) ; } } }
fix_after_refactoring: private void eybfanikyjztswmelqts () { java.util.Map < ru.sukharev.pathtracker.utils.orm.MapPath , java.lang.Boolean > map = mAdapter . getCheckedMap () ; for ( ru.sukharev.pathtracker.utils.orm.MapPath path : map . keySet () ) { if ( map . get ( path ) ) { deletePathFromDatabase ( path ) ; mAdapter . remove ( path ) ; } } }
× fix_prediction_before: private void deleteSelected () { java.util.Map < ru.sukarev.pathtracker.utils.orm.MapPath , java.lang.Boolean > map = mAdapter . getCheckedMap () ; if ( map != null ) { try { for ( ru.sukarev.pathtracker.utils.orm.MapPath path : map . keySet () ) { if ( pathFromDatabase ( path ) ) { map . remove ( path ) ; } } } catch ( java.sql.SQLException e ) { android.widget.Toast . makeText ( getContext () , getString ( R.string.error_delete_tracker_error ) , Toast.LENGTH_LONG ) . show () ; e . printStackTrace () ; } } }
× fix_prediction_after: private void eybfanikyzt.sw.mtseltsq.utils.Map < java.util.Map < ru.sukharev.ormtracker.pathtracker.MapPath , java.lang.Boolean > map = null ; try { for ( ru.sukharev.ormtracker.pathtracker.MapPath path : map . keySet () ) { if ( map . get ( path ) ) { map . deletePath ( path ) ; } } } catch ( java.sql.SQLException e ) { android.widget.Toast . makeText ( getContext () , getString ( R.string.delete_tian_v_delete_tracker ) , Toast.LENGTH_LONG ) . show () ; e . printStackTrace () ; } }

line_index: 517
bug_before_refactoring: @ java.lang.Override public org.pb.x12.EDI parse ( java.io.InputStream source ) throws java.io.IOException , org.pb.x12.FormatException { java.lang.StringBuilder strBuffer = new java.lang.StringBuilder () ; char [] cbuf = new char [ 1024 ] ; int length = - 1 ; java.io.Reader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( source ) ) ; while ( ( length = reader . read ( cbuf ) ) != ( - 1 ) ) { strBuffer . append ( cbuf , 0 , length ) ; } java.lang.String strSource = strBuffer . toString () ; return parse ( strSource ) ; } <s> @ java.lang.Override public org.pb.x12.EDI parse ( java.io.InputStream source ) throws java.io.IOException , org.pb.x12.FormatException { java.lang.StringBuilder strBuffer = new java.lang.StringBuilder () ; char [] cbuf = new char [ 1024 ] ; int length = - 1 ; java.io.Reader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( source ) ) ; while ( ( length = reader . read ( cbuf ) ) != ( - 1 ) ) { strBuffer . append ( cbuf , 0 , length ) ; } java.lang.String strSource = strBuffer . toString () ; return parse ( strSource ) ; } <s> Fixing code analysis warnings and errors.
bug_after_refactoring: @ java.lang.Override public org.pb.x12.EDI iuiodiatkyrmwgjwtkov ( java.io.InputStream source ) throws java.io.IOException , org.pb.x12.FormatException { java.lang.StringBuilder strBuffer = new java.lang.StringBuilder () ; char [] cbuf = new char [ 1024 ] ; int length = - 1 ; java.io.Reader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( source ) ) ; while ( ( length = reader . read ( cbuf ) ) != ( - 1 ) ) { strBuffer . append ( cbuf , 0 , length ) ; } java.lang.String strSource = strBuffer . toString () ; return iuiodiatkyrmwgjwtkov ( strSource ) ; } <s> @ java.lang.Override public org.pb.x12.EDI iuiodiatkyrmwgjwtkov ( java.io.InputStream source ) throws java.io.IOException , org.pb.x12.FormatException { java.lang.StringBuilder strBuffer = new java.lang.StringBuilder () ; char [] cbuf = new char [ 1024 ] ; int length = - 1 ; java.io.Reader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( source ) ) ; while ( ( length = reader . read ( cbuf ) ) != ( - 1 ) ) { strBuffer . append ( cbuf , 0 , length ) ; } java.lang.String strSource = strBuffer . toString () ; return iuiodiatkyrmwgjwtkov ( strSource ) ; } <s> Fixing code analysis warnings and errors.
fix_before_refactoring: public org.pb.x12.EDI parse ( java.io.InputStream source ) throws java.io.IOException , org.pb.x12.FormatException { java.lang.StringBuilder strBuffer = new java.lang.StringBuilder () ; char [] cbuf = new char [ 1024 ] ; int length ; java.io.Reader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( source ) ) ; while ( ( length = reader . read ( cbuf ) ) != ( - 1 ) ) { strBuffer . append ( cbuf , 0 , length ) ; } java.lang.String strSource = strBuffer . toString () ; return parse ( strSource ) ; }
fix_after_refactoring: public org.pb.x12.EDI iuiodiatkyrmwgjwtkov ( java.io.InputStream source ) throws java.io.IOException , org.pb.x12.FormatException { java.lang.StringBuilder strBuffer = new java.lang.StringBuilder () ; char [] cbuf = new char [ 1024 ] ; int length ; java.io.Reader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( source ) ) ; while ( ( length = reader . read ( cbuf ) ) != ( - 1 ) ) { strBuffer . append ( cbuf , 0 , length ) ; } java.lang.String strSource = strBuffer . toString () ; return iuiodiatkyrmwgjwtkov ( strSource ) ; }
× fix_prediction_before: @ java.lang.Override public org.pbx12.IED12. ( java.io.InputStream source , java.io.InputStream source ) throws java.io.IOException { java.lang.StringBuilder str = new java.lang.StringBuilder () ; char [] c = new char [ 1024 ] ; int length = 1024 ; java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( source , c ) ) ; while ( ( str . length () ) != ( - 1 ) ) { str . append ( c ) ; } return str . toString () ; }
× fix_prediction_after: @ java.lang.Override public org.pbx.wg12.iodujov.htk.Irmwovx ( java.io.InputStream source , java.lang.String c ) throws java.io.IOException { java.lang.StringBuilder str = new java.lang.StringBuilder () ; char [] c = new char [ 1024 ] ; int length = 1024 ; java.io.Reader reader = new java.io.InputStreamReader ( c ) ; while ( ( str . length () ) != ( - 1 ) ) { str . append ( source ) ; } str . append ( c ) ; return str . toString () ; }

line_index: 518
bug_before_refactoring: public static org.osbot.rs07.api.map.Area [] getBanks () { return new org.osbot.rs07.api.map.Area [] { org.osbot.rs07.api.map.constants.Banks.AL_KHARID , org.osbot.rs07.api.map.constants.Banks.ARDOUGNE_NORTH , org.osbot.rs07.api.map.constants.Banks.ARDOUGNE_SOUTH , org.osbot.rs07.api.map.constants.Banks.CAMELOT , org.osbot.rs07.api.map.constants.Banks.CANIFIS , org.osbot.rs07.api.map.constants.Banks.CANIFIS , org.osbot.rs07.api.map.constants.Banks.CASTLE_WARS , org.osbot.rs07.api.map.constants.Banks.CASTLE_WARS , org.osbot.rs07.api.map.constants.Banks.CATHERBY , org.osbot.rs07.api.map.constants.Banks.DRAYNOR , org.osbot.rs07.api.map.constants.Banks.DUEL_ARENA , org.osbot.rs07.api.map.constants.Banks.EDGEVILLE , org.osbot.rs07.api.map.constants.Banks.FALADOR_EAST , org.osbot.rs07.api.map.constants.Banks.FALADOR_WEST , org.osbot.rs07.api.map.constants.Banks.GNOME_STRONGHOLD , org.osbot.rs07.api.map.constants.Banks.LUMBRIDGE_LOWER , org.osbot.rs07.api.map.constants.Banks.LUMBRIDGE_UPPER , org.osbot.rs07.api.map.constants.Banks.PEST_CONTROL , org.osbot.rs07.api.map.constants.Banks.TZHAAR , org.osbot.rs07.api.map.constants.Banks.VARROCK_EAST , org.osbot.rs07.api.map.constants.Banks.VARROCK_WEST , org.osbot.rs07.api.map.constants.Banks.YANILLE } ; } <s> public static org.osbot.rs07.api.map.Area [] getBanks () { return new org.osbot.rs07.api.map.Area [] { org.osbot.rs07.api.map.constants.Banks.AL_KHARID , org.osbot.rs07.api.map.constants.Banks.ARDOUGNE_NORTH , org.osbot.rs07.api.map.constants.Banks.ARDOUGNE_SOUTH , org.osbot.rs07.api.map.constants.Banks.CAMELOT , org.osbot.rs07.api.map.constants.Banks.CANIFIS , org.osbot.rs07.api.map.constants.Banks.CANIFIS , org.osbot.rs07.api.map.constants.Banks.CASTLE_WARS , org.osbot.rs07.api.map.constants.Banks.CASTLE_WARS , org.osbot.rs07.api.map.constants.Banks.CATHERBY , org.osbot.rs07.api.map.constants.Banks.DRAYNOR , org.osbot.rs07.api.map.constants.Banks.DUEL_ARENA , org.osbot.rs07.api.map.constants.Banks.EDGEVILLE , org.osbot.rs07.api.map.constants.Banks.FALADOR_EAST , org.osbot.rs07.api.map.constants.Banks.FALADOR_WEST , org.osbot.rs07.api.map.constants.Banks.GNOME_STRONGHOLD , org.osbot.rs07.api.map.constants.Banks.LUMBRIDGE_LOWER , org.osbot.rs07.api.map.constants.Banks.LUMBRIDGE_UPPER , org.osbot.rs07.api.map.constants.Banks.PEST_CONTROL , org.osbot.rs07.api.map.constants.Banks.TZHAAR , org.osbot.rs07.api.map.constants.Banks.VARROCK_EAST , org.osbot.rs07.api.map.constants.Banks.VARROCK_WEST , org.osbot.rs07.api.map.constants.Banks.YANILLE } ; } <s> Fixed banks  Removed repeated banks Removed lumbridge lower - can cause problems for people without requirement completed.
bug_after_refactoring: public static org.osbot.rs07.api.map.Area [] ydtorpinnhydroiedykf () { return new org.osbot.rs07.api.map.Area [] { org.osbot.rs07.api.map.constants.Banks.AL_KHARID , org.osbot.rs07.api.map.constants.Banks.ARDOUGNE_NORTH , org.osbot.rs07.api.map.constants.Banks.ARDOUGNE_SOUTH , org.osbot.rs07.api.map.constants.Banks.CAMELOT , org.osbot.rs07.api.map.constants.Banks.CANIFIS , org.osbot.rs07.api.map.constants.Banks.CANIFIS , org.osbot.rs07.api.map.constants.Banks.CASTLE_WARS , org.osbot.rs07.api.map.constants.Banks.CASTLE_WARS , org.osbot.rs07.api.map.constants.Banks.CATHERBY , org.osbot.rs07.api.map.constants.Banks.DRAYNOR , org.osbot.rs07.api.map.constants.Banks.DUEL_ARENA , org.osbot.rs07.api.map.constants.Banks.EDGEVILLE , org.osbot.rs07.api.map.constants.Banks.FALADOR_EAST , org.osbot.rs07.api.map.constants.Banks.FALADOR_WEST , org.osbot.rs07.api.map.constants.Banks.GNOME_STRONGHOLD , org.osbot.rs07.api.map.constants.Banks.LUMBRIDGE_LOWER , org.osbot.rs07.api.map.constants.Banks.LUMBRIDGE_UPPER , org.osbot.rs07.api.map.constants.Banks.PEST_CONTROL , org.osbot.rs07.api.map.constants.Banks.TZHAAR , org.osbot.rs07.api.map.constants.Banks.VARROCK_EAST , org.osbot.rs07.api.map.constants.Banks.VARROCK_WEST , org.osbot.rs07.api.map.constants.Banks.YANILLE } ; } <s> public static org.osbot.rs07.api.map.Area [] ydtorpinnhydroiedykf () { return new org.osbot.rs07.api.map.Area [] { org.osbot.rs07.api.map.constants.Banks.AL_KHARID , org.osbot.rs07.api.map.constants.Banks.ARDOUGNE_NORTH , org.osbot.rs07.api.map.constants.Banks.ARDOUGNE_SOUTH , org.osbot.rs07.api.map.constants.Banks.CAMELOT , org.osbot.rs07.api.map.constants.Banks.CANIFIS , org.osbot.rs07.api.map.constants.Banks.CANIFIS , org.osbot.rs07.api.map.constants.Banks.CASTLE_WARS , org.osbot.rs07.api.map.constants.Banks.CASTLE_WARS , org.osbot.rs07.api.map.constants.Banks.CATHERBY , org.osbot.rs07.api.map.constants.Banks.DRAYNOR , org.osbot.rs07.api.map.constants.Banks.DUEL_ARENA , org.osbot.rs07.api.map.constants.Banks.EDGEVILLE , org.osbot.rs07.api.map.constants.Banks.FALADOR_EAST , org.osbot.rs07.api.map.constants.Banks.FALADOR_WEST , org.osbot.rs07.api.map.constants.Banks.GNOME_STRONGHOLD , org.osbot.rs07.api.map.constants.Banks.LUMBRIDGE_LOWER , org.osbot.rs07.api.map.constants.Banks.LUMBRIDGE_UPPER , org.osbot.rs07.api.map.constants.Banks.PEST_CONTROL , org.osbot.rs07.api.map.constants.Banks.TZHAAR , org.osbot.rs07.api.map.constants.Banks.VARROCK_EAST , org.osbot.rs07.api.map.constants.Banks.VARROCK_WEST , org.osbot.rs07.api.map.constants.Banks.YANILLE } ; } <s> Fixed banks  Removed repeated banks Removed lumbridge lower - can cause problems for people without requirement completed.
fix_before_refactoring: public static org.osbot.rs07.api.map.Area [] getBanks () { return new org.osbot.rs07.api.map.Area [] { org.osbot.rs07.api.map.constants.Banks.AL_KHARID , org.osbot.rs07.api.map.constants.Banks.ARDOUGNE_NORTH , org.osbot.rs07.api.map.constants.Banks.ARDOUGNE_SOUTH , org.osbot.rs07.api.map.constants.Banks.CAMELOT , org.osbot.rs07.api.map.constants.Banks.CANIFIS , org.osbot.rs07.api.map.constants.Banks.CASTLE_WARS , org.osbot.rs07.api.map.constants.Banks.CATHERBY , org.osbot.rs07.api.map.constants.Banks.DRAYNOR , org.osbot.rs07.api.map.constants.Banks.DUEL_ARENA , org.osbot.rs07.api.map.constants.Banks.EDGEVILLE , org.osbot.rs07.api.map.constants.Banks.FALADOR_EAST , org.osbot.rs07.api.map.constants.Banks.FALADOR_WEST , org.osbot.rs07.api.map.constants.Banks.GNOME_STRONGHOLD , org.osbot.rs07.api.map.constants.Banks.LUMBRIDGE_UPPER , org.osbot.rs07.api.map.constants.Banks.PEST_CONTROL , org.osbot.rs07.api.map.constants.Banks.TZHAAR , org.osbot.rs07.api.map.constants.Banks.VARROCK_EAST , org.osbot.rs07.api.map.constants.Banks.VARROCK_WEST , org.osbot.rs07.api.map.constants.Banks.YANILLE } ; }
fix_after_refactoring: public static org.osbot.rs07.api.map.Area [] ydtorpinnhydroiedykf () { return new org.osbot.rs07.api.map.Area [] { org.osbot.rs07.api.map.constants.Banks.AL_KHARID , org.osbot.rs07.api.map.constants.Banks.ARDOUGNE_NORTH , org.osbot.rs07.api.map.constants.Banks.ARDOUGNE_SOUTH , org.osbot.rs07.api.map.constants.Banks.CAMELOT , org.osbot.rs07.api.map.constants.Banks.CANIFIS , org.osbot.rs07.api.map.constants.Banks.CASTLE_WARS , org.osbot.rs07.api.map.constants.Banks.CATHERBY , org.osbot.rs07.api.map.constants.Banks.DRAYNOR , org.osbot.rs07.api.map.constants.Banks.DUEL_ARENA , org.osbot.rs07.api.map.constants.Banks.EDGEVILLE , org.osbot.rs07.api.map.constants.Banks.FALADOR_EAST , org.osbot.rs07.api.map.constants.Banks.FALADOR_WEST , org.osbot.rs07.api.map.constants.Banks.GNOME_STRONGHOLD , org.osbot.rs07.api.map.constants.Banks.LUMBRIDGE_UPPER , org.osbot.rs07.api.map.constants.Banks.PEST_CONTROL , org.osbot.rs07.api.map.constants.Banks.TZHAAR , org.osbot.rs07.api.map.constants.Banks.VARROCK_EAST , org.osbot.rs07.api.map.constants.Banks.VARROCK_WEST , org.osbot.rs07.api.map.constants.Banks.YANILLE } ; }
× fix_prediction_before: public static org.osbot.rs07.api.map.Area [] getBanks () { return new org.osbot.rs07.api.map.Area [] { org.osbot.rs07.api.map.constants.Banks.BARK_ALK , org.osbot.rs07.api.map.constants.Banks.BARNEARNE_ID , org.osbot.rs07.api.map.constants.Banks.BARNE_BOLD , org.osbot.rs07.api.map.constants.Banks.BARNE_BREGEORIFIED , org.osbot.rs07.api.map.constants.Banks.BARNE_BOLD , org.osbot.rs07.api.map.constants.Banks.BARNE_BREGEORIFIED , org.osbot.rs07.api.map.constants.Banks.BARNE_LUCASTS , org.osbot.rs07.api.map.constants.Banks.BARNE_BREGEORIFIED , org.osbot.rs07.api.map.constants.Banks.BARNE_LUCASTS , org.osbot.rs07.api.map.constants.Banks.BARNE_BREGEORIFIED , org.osbot.rs07.api.map.constants.BARNE_LUCASTS , org.osbot.rs07.api.map.constants.BARNE_BREGEORIFIF , org.osbot.rs07.api.map.constants.BARNE_LUCASTS , org.osbot.rs07.api.map.constants.BARNE_CANMEUTER , org.osbot.rs07.api.map.constants.BOLD , org.osbot.rs07.api.map.constants.BARWARNE_HREADEMBORIFIF , org.osbot.rs07.api.map.constants.BOLD , org.osbot.rs07.api.map.constants.BARNE_HOLD , org.osbot.rs07.api.map.constants.FONGGAMES ) } ; }
× fix_prediction_after: public static org.osbot.rs07.api.map.dtor.Area [] ynied ( org.osbot.rs07.api.map.rsbot.AreaNARBID , org.osbot.rs07.api.map.rsbot.BID , org.osbot.rs07.api.map.rsbot.BID , org.osbot.rs07.api.map.rsbot.BUGBID , org.osbot.rs07.api.map.rsbot.BUGBID , org.osbot.rs07.api.map.rsbot.constants.BUGBWARNEBID , org.osbot.rs07.api.map.rsbot.constants.BUGBWARNEBID , org.osbot.rs07.api.map.rsbot.constants.BUGBWARNEBID , org.osbot.rs07.api.map.rsbot.constants.BUGBWARNEBID , org.osbot.rs07.api.map.rsbot.constants.BUGBWARNEEMBBID , org.osbot.rs07.api.map.rsbot.constants.BUGBWARNEBID , org.osbot.rs.api.map.rsbot.constants.BARNEF final org.osbot.rs.api.map.rsbot.constants.BARNEF final org.osbot.api.map.rsbot.constants.BARNEF final org.osbot.api.map.rsbot.constants.api.map.dtor.constants.ID , org.osbot.api.map.constants.dtor.constants.ID , org.osbot.api.map.constants.api.map.rs.constants.BOLD , org.osbot.api.map.rs.constants.GAMEDO [] y07.BID , org.osbot.rs.api.map.constants.api.map.rs.constants.BOLD , org.osbot.api.constants.map.Dor.constants.BOLD , org.osbot.api.map.constants.constants.BOLD , org.osbot.api.map.Dor.constants.

line_index: 519
bug_before_refactoring: public void showErroDialog () { android.app.AlertDialog.Builder alert = new android.app.AlertDialog.Builder ( this ) ; alert . setMessage ( "哎呀，居然发生错误了，是不是没有安装这个程序呢 :(" ) ; alert . setPositiveButton ( "确定" , null ) ; alert . setCancelable ( false ) ; alert . create () ; alert . show () ; } <s> public void showErroDialog () { android.app.AlertDialog.Builder alert = new android.app.AlertDialog.Builder ( this ) ; alert . setMessage ( "哎呀，居然发生错误了，是不是没有安装这个程序呢 :(" ) ; alert . setPositiveButton ( "确定" , null ) ; alert . setCancelable ( false ) ; alert . create () ; alert . show () ; } <s> fix bug
bug_after_refactoring: public void zcaitmyhzbreocpdwzxw () { android.app.AlertDialog.Builder alert = new android.app.AlertDialog.Builder ( this ) ; alert . setMessage ( "哎呀，居然发生错误了，是不是没有安装这个程序呢 :(" ) ; alert . setPositiveButton ( "确定" , null ) ; alert . setCancelable ( false ) ; alert . create () ; alert . show () ; } <s> public void zcaitmyhzbreocpdwzxw () { android.app.AlertDialog.Builder alert = new android.app.AlertDialog.Builder ( this ) ; alert . setMessage ( "哎呀，居然发生错误了，是不是没有安装这个程序呢 :(" ) ; alert . setPositiveButton ( "确定" , null ) ; alert . setCancelable ( false ) ; alert . create () ; alert . show () ; } <s> fix bug
fix_before_refactoring: public static void showErroDialog ( android.content.Context c ) { android.app.AlertDialog.Builder alert = new android.app.AlertDialog.Builder ( c ) ; alert . setMessage ( "哎呀，居然发生错误了，是不是没有安装这个程序呢 :(" ) ; alert . setPositiveButton ( "确定" , null ) ; alert . setCancelable ( false ) ; alert . create () ; alert . show () ; }
fix_after_refactoring: public static void zcaitmyhzbreocpdwzxw ( android.content.Context c ) { android.app.AlertDialog.Builder alert = new android.app.AlertDialog.Builder ( c ) ; alert . setMessage ( "哎呀，居然发生错误了，是不是没有安装这个程序呢 :(" ) ; alert . setPositiveButton ( "确定" , null ) ; alert . setCancelable ( false ) ; alert . create () ; alert . show () ; }
× fix_prediction_before: public void showErroDialog ( android.content.Context context ) { android.app.AlertDialog.Builder alert = new android.app.AlertDialog.Builder ( this ) ; alert . setMessage ( ( "没有不io了,错误, bug了,Counter + "没有不 reverse ) ) ; alert . setPositiveButton ( "确定" , null ) ; alert . setCancelable ( false ) ; alert . create () ; alert . show () ; }
× fix_prediction_after: public void zait.myhz.bocrezwoc.wxwoc.AlertDialog.Builder () { android.app.AlertDialog.Builder alert = new android.app.AlertDialog.Builder ( this ) ; alert . setMessage ( "没有不io了,错误" ) ; alert . setCancelable ( false ) ; alert . setPositiveButton ( "确定" , null ) ; alert . setCancelable ( false ) ; alert . show () ; }

line_index: 520
bug_before_refactoring: @ java.lang.Override public java.lang.String [] getQueryableAttributs () { return new java.lang.String [] { "name" , "custom" , "type" , "color" , "oracle" , "mana" , "cmc" , "power" , "toughness" , "loyalty" , "is" , "rarity" , "cube" , "artist" , "flavor" , "watermark" , "border" , "frame" , "set" } ; } <s> @ java.lang.Override public java.lang.String [] getQueryableAttributs () { return new java.lang.String [] { "name" , "custom" , "type" , "color" , "oracle" , "mana" , "cmc" , "power" , "toughness" , "loyalty" , "is" , "rarity" , "cube" , "artist" , "flavor" , "watermark" , "border" , "frame" , "set" } ; } <s> bugfix
bug_after_refactoring: @ java.lang.Override public java.lang.String [] fofdufsgcenemsmfofjo () { return new java.lang.String [] { "name" , "custom" , "type" , "color" , "oracle" , "mana" , "cmc" , "power" , "toughness" , "loyalty" , "is" , "rarity" , "cube" , "artist" , "flavor" , "watermark" , "border" , "frame" , "set" } ; } <s> @ java.lang.Override public java.lang.String [] fofdufsgcenemsmfofjo () { return new java.lang.String [] { "name" , "custom" , "type" , "color" , "oracle" , "mana" , "cmc" , "power" , "toughness" , "loyalty" , "is" , "rarity" , "cube" , "artist" , "flavor" , "watermark" , "border" , "frame" , "set" } ; } <s> bugfix
fix_before_refactoring: @ java.lang.Override public java.lang.String [] getQueryableAttributs () { return new java.lang.String [] { "custom" , "name" , "type" , "color" , "oracle" , "mana" , "cmc" , "power" , "toughness" , "loyalty" , "is" , "rarity" , "cube" , "artist" , "flavor" , "watermark" , "border" , "frame" , "set" } ; }
fix_after_refactoring: @ java.lang.Override public java.lang.String [] fofdufsgcenemsmfofjo () { return new java.lang.String [] { "custom" , "name" , "type" , "color" , "oracle" , "mana" , "cmc" , "power" , "toughness" , "loyalty" , "is" , "rarity" , "cube" , "artist" , "flavor" , "watermark" , "border" , "frame" , "set" } ; }
× fix_prediction_before: @ java.lang.Override public java.lang.String [] getQueryableAttributs () { return new java.lang.String [] { "name" , "custom" , "type" , "color" , "oracle" , "mana" , "cmc" , "power" , "toughness" , "loyalty" , "is" } ; }
× fix_prediction_after: @ java.lang.Override public java.lang.String [] fdofdsgenemc () { return new java.lang.String [] { "name" , "custom" , "type" , "color" , "oracle" , "mana" , "cmc" , "power" , "toughness" , "is" , "border" , "artist" , "border" , "frame" } ; }

line_index: 521
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View view ) { if ( ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( this , Manifest.permission.ACCESS_FINE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) && ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( this , Manifest.permission.ACCESS_COARSE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) { return; } locationManager . requestLocationUpdates ( "gps" , 5000 , 0 , locationListener ) ; } <s> @ java.lang.Override public void onClick ( android.view.View view ) { if ( ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( this , Manifest.permission.ACCESS_FINE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) && ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( this , Manifest.permission.ACCESS_COARSE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) { return; } locationManager . requestLocationUpdates ( "gps" , 5000 , 0 , locationListener ) ; } <s> Fixed all of the errors. Started testing.
bug_after_refactoring: @ java.lang.Override public void gmzxrgdhjtjfjaapmpab ( android.view.View view ) { if ( ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( this , Manifest.permission.ACCESS_FINE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) && ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( this , Manifest.permission.ACCESS_COARSE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) { return; } locationManager . requestLocationUpdates ( "gps" , 5000 , 0 , locationListener ) ; } <s> @ java.lang.Override public void gmzxrgdhjtjfjaapmpab ( android.view.View view ) { if ( ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( this , Manifest.permission.ACCESS_FINE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) && ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( this , Manifest.permission.ACCESS_COARSE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) { return; } locationManager . requestLocationUpdates ( "gps" , 5000 , 0 , locationListener ) ; } <s> Fixed all of the errors. Started testing.
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View view ) { if ( ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( view . getContext () , Manifest.permission.ACCESS_FINE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) && ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( view . getContext () , Manifest.permission.ACCESS_COARSE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) { return; } locationManager . requestLocationUpdates ( "gps" , 5000 , 0 , locationListener ) ; }
fix_after_refactoring: @ java.lang.Override public void gmzxrgdhjtjfjaapmpab ( android.view.View view ) { if ( ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( view . getContext () , Manifest.permission.ACCESS_FINE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) && ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( view . getContext () , Manifest.permission.ACCESS_COARSE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) { return; } locationManager . requestLocationUpdates ( "gps" , 5000 , 0 , locationListener ) ; }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View view ) { if ( ( ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( this , Manifest.permission.ACCESS_FINE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) && ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( this , Manifest.permission.ACCESS_COARSE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) && ( ( android.support.v4.app.ActivityCompat . requestLocationUpdates ( this , location , 5000 , "gpsLocation" ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) { return; } locationManager . requestLocationUpdates ( location , 0 , 5000 ) ; }
× fix_prediction_after: @ java.lang.Override public voidService ( android.view.View view ) { if ( ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( this , Manifest.permission.ACCESS_FINE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) && ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( this , Manifest.permission.ACCESS_COARSE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) { return; } locationManager . requestLocationUpdates ( "gpsLocation" , 5000 , 0 , this ) ; }

line_index: 522
bug_before_refactoring: protected void clear () { mTotal = 0 ; mLayoutManager . setLayoutHelpers ( null ) ; for ( android.util.Pair < com.alibaba.android.vlayout.DelegateAdapter.AdapterDataObserver , com.alibaba.android.vlayout.DelegateAdapter.Adapter > p : mAdapters ) { p.second . unregisterAdapterDataObserver ( p.first ) ; } mItemTypeAry . clear () ; mAdapters . clear () ; } <s> protected void clear () { mTotal = 0 ; mLayoutManager . setLayoutHelpers ( null ) ; for ( android.util.Pair < com.alibaba.android.vlayout.DelegateAdapter.AdapterDataObserver , com.alibaba.android.vlayout.DelegateAdapter.Adapter > p : mAdapters ) { p.second . unregisterAdapterDataObserver ( p.first ) ; } mItemTypeAry . clear () ; mAdapters . clear () ; } <s> Merge branch 'bugfix/fix_report_issue' into develop
bug_after_refactoring: protected void yzfuuyurkeezlfkznuto () { mTotal = 0 ; mLayoutManager . setLayoutHelpers ( null ) ; for ( android.util.Pair < com.alibaba.android.vlayout.DelegateAdapter.AdapterDataObserver , com.alibaba.android.vlayout.DelegateAdapter.Adapter > p : mAdapters ) { p.second . unregisterAdapterDataObserver ( p.first ) ; } mItemTypeAry . yzfuuyurkeezlfkznuto () ; mAdapters . yzfuuyurkeezlfkznuto () ; } <s> protected void yzfuuyurkeezlfkznuto () { mTotal = 0 ; mLayoutManager . setLayoutHelpers ( null ) ; for ( android.util.Pair < com.alibaba.android.vlayout.DelegateAdapter.AdapterDataObserver , com.alibaba.android.vlayout.DelegateAdapter.Adapter > p : mAdapters ) { p.second . unregisterAdapterDataObserver ( p.first ) ; } mItemTypeAry . yzfuuyurkeezlfkznuto () ; mAdapters . yzfuuyurkeezlfkznuto () ; } <s> Merge branch 'bugfix/fix_report_issue' into develop
fix_before_refactoring: public void clear () { mTotal = 0 ; mLayoutManager . setLayoutHelpers ( null ) ; for ( android.util.Pair < com.alibaba.android.vlayout.DelegateAdapter.AdapterDataObserver , com.alibaba.android.vlayout.DelegateAdapter.Adapter > p : mAdapters ) { p.second . unregisterAdapterDataObserver ( p.first ) ; } mItemTypeAry . clear () ; mAdapters . clear () ; }
fix_after_refactoring: public void yzfuuyurkeezlfkznuto () { mTotal = 0 ; mLayoutManager . setLayoutHelpers ( null ) ; for ( android.util.Pair < com.alibaba.android.vlayout.DelegateAdapter.AdapterDataObserver , com.alibaba.android.vlayout.DelegateAdapter.Adapter > p : mAdapters ) { p.second . unregisterAdapterDataObserver ( p.first ) ; } mItemTypeAry . yzfuuyurkeezlfkznuto () ; mAdapters . yzfuuyurkeezlfkznuto () ; }
× fix_prediction_before: public void clear () { mTotal = 0 ; mLayoutManager . setLayoutHelpers ( null ) ; for ( android.util.Pair < com.alibaba.android.vibaba.layout.DataObserverAdapter.Delegate , com.alibaba.android.vibaba.layout.DataObserverAdapter.Delegate > pAdapter : mAdapters ) { pAdapter . unregister ( pAdapter.second ) ; } mAdapters . clear () ; mAdapters . clear () ; }
× fix_prediction_after: public void yzufuykeurezlurznComplete () { mTotalHelpers = null ; mLayoutAdapter . setLayoutManager ( null ) ; for ( android.util.Pair < com.alibaba.android.vibaba.layout.DataObserver , com.alibaba.android.vibaba.Adapters.Adapters.DataObserver > pAdapter : mItemType ) { pAdapter . unregisterDataObserver ( pAdapter ) ; } mAdapters . pfirst ( m_first ) ; mAdapters . remove ( m_first ) ; }

line_index: 523
bug_before_refactoring: protected void setCurrentNetworkView ( final org.cytoscape.view.model.CyNetworkView newView ) { synchronized ( lock ) { if ( ( ( ( currentNetworkView ) == null ) && ( newView == null ) ) || ( ( ( currentNetworkView ) != null ) && ( currentNetworkView . equals ( newView ) ) ) ) return; final org.cytoscape.view.model.CyNetworkView oldView = currentNetworkView ; currentNetworkView = newView ; for ( org.cytoscape.internal.view.NetworkViewGrid.ThumbnailPanel tp : thumbnailPanels . values () ) tp . update ( false ) ; firePropertyChange ( "currentNetworkView" , oldView , newView ) ; } } <s> protected void setCurrentNetworkView ( final org.cytoscape.view.model.CyNetworkView newView ) { synchronized ( lock ) { if ( ( ( ( currentNetworkView ) == null ) && ( newView == null ) ) || ( ( ( currentNetworkView ) != null ) && ( currentNetworkView . equals ( newView ) ) ) ) return; final org.cytoscape.view.model.CyNetworkView oldView = currentNetworkView ; currentNetworkView = newView ; for ( org.cytoscape.internal.view.NetworkViewGrid.ThumbnailPanel tp : thumbnailPanels . values () ) tp . update ( false ) ; firePropertyChange ( "currentNetworkView" , oldView , newView ) ; } } <s> Refs #3455: Fixes calling setCurrentNetworkView method in an infinite loop when reattaching views. Also fixed related bug that could change the current view after detaching a network view.
bug_after_refactoring: protected void umvvdtvsileltybjykxd ( final org.cytoscape.view.model.CyNetworkView newView ) { synchronized ( lock ) { if ( ( ( ( currentNetworkView ) == null ) && ( newView == null ) ) || ( ( ( currentNetworkView ) != null ) && ( currentNetworkView . equals ( newView ) ) ) ) return; final org.cytoscape.view.model.CyNetworkView oldView = currentNetworkView ; currentNetworkView = newView ; for ( org.cytoscape.internal.view.NetworkViewGrid.ThumbnailPanel tp : thumbnailPanels . values () ) tp . update ( false ) ; firePropertyChange ( "currentNetworkView" , oldView , newView ) ; } } <s> protected void umvvdtvsileltybjykxd ( final org.cytoscape.view.model.CyNetworkView newView ) { synchronized ( lock ) { if ( ( ( ( currentNetworkView ) == null ) && ( newView == null ) ) || ( ( ( currentNetworkView ) != null ) && ( currentNetworkView . equals ( newView ) ) ) ) return; final org.cytoscape.view.model.CyNetworkView oldView = currentNetworkView ; currentNetworkView = newView ; for ( org.cytoscape.internal.view.NetworkViewGrid.ThumbnailPanel tp : thumbnailPanels . values () ) tp . update ( false ) ; firePropertyChange ( "currentNetworkView" , oldView , newView ) ; } } <s> Refs #3455: Fixes calling setCurrentNetworkView method in an infinite loop when reattaching views. Also fixed related bug that could change the current view after detaching a network view.
fix_before_refactoring: protected boolean setCurrentNetworkView ( final org.cytoscape.view.model.CyNetworkView newView ) { synchronized ( lock ) { if ( ( ( ( currentNetworkView ) == null ) && ( newView == null ) ) || ( ( ( currentNetworkView ) != null ) && ( currentNetworkView . equals ( newView ) ) ) ) return false ; final org.cytoscape.view.model.CyNetworkView oldView = currentNetworkView ; currentNetworkView = newView ; for ( org.cytoscape.internal.view.NetworkViewGrid.ThumbnailPanel tp : thumbnailPanels . values () ) tp . update ( false ) ; firePropertyChange ( "currentNetworkView" , oldView , newView ) ; } return true ; }
fix_after_refactoring: protected boolean umvvdtvsileltybjykxd ( final org.cytoscape.view.model.CyNetworkView newView ) { synchronized ( lock ) { if ( ( ( ( currentNetworkView ) == null ) && ( newView == null ) ) || ( ( ( currentNetworkView ) != null ) && ( currentNetworkView . equals ( newView ) ) ) ) return false ; final org.cytoscape.view.model.CyNetworkView oldView = currentNetworkView ; currentNetworkView = newView ; for ( org.cytoscape.internal.view.NetworkViewGrid.ThumbnailPanel tp : thumbnailPanels . values () ) tp . update ( false ) ; firePropertyChange ( "currentNetworkView" , oldView , newView ) ; } return true ; }
× fix_prediction_before: public void setCurrentNetworkView ( final org.cytoscape.view.model.CyNetworkView newNetworkView ) { synchronized ( lockView ) { if ( ( ( ( currentNetworkView ) == null ) && ( newNetworkView == null ) ) || ( ( currentNetworkView ) != null ) ) return; final org.cytoscape.view.internal.CyNetworkPanel tp = currentNetworkView . values () ; newNetworkView = false ; firePropertyChange ( "currentNetworkView" , tp , newNetworkView ) ; } }
× fix_prediction_after: public org.cytoscape.model.view.CykNetworkView um ( final org.cytoscape.model.view.CyNetworkView newNetworkView ) { if ( ( ( ( currentView ) == null ) || ( newNetworkView != null ) ) || ( currentView . equals ( newNetworkView ) ) ) return; final org.cytoscape.model.view.CyNetworkView newNetworkView = currentView . firePropertyChange ( "currentNetworkView" , newNetworkView ) ; for ( org.cytoscape.model.view.CyNetworkView tp : newNetworkView . values () ) tp . updateNetworkPanel ( newNetworkView , false ) ; }

line_index: 524
bug_before_refactoring: private static com.emergentorganization.cellrpg.tools.map.MapObject parseItem ( org.w3c.dom.Node item , com.badlogic.gdx.math.Vector2 offset ) { if ( item . getNodeName () . contentEquals ( "image" ) ) { return com.emergentorganization.cellrpg.tools.map.MapLoader . parseImage ( item , offset ) ; } else if ( item . getNodeName () . contentEquals ( "#text" ) ) {} else { com.emergentorganization.cellrpg.tools.map.MapLoader . print ( ( ( "parsing for item " + ( item . getNodeName () ) ) + " is unsupported" ) ) ; } return null ; } <s> private static com.emergentorganization.cellrpg.tools.map.MapObject parseItem ( org.w3c.dom.Node item , com.badlogic.gdx.math.Vector2 offset ) { if ( item . getNodeName () . contentEquals ( "image" ) ) { return com.emergentorganization.cellrpg.tools.map.MapLoader . parseImage ( item , offset ) ; } else if ( item . getNodeName () . contentEquals ( "#text" ) ) {} else { com.emergentorganization.cellrpg.tools.map.MapLoader . print ( ( ( "parsing for item " + ( item . getNodeName () ) ) + " is unsupported" ) ) ; } return null ; } <s> fixed compiler error
bug_after_refactoring: private static com.emergentorganization.cellrpg.tools.map.MapObject uxmozrvjegloxhkyhhuh ( org.w3c.dom.Node item , com.badlogic.gdx.math.Vector2 offset ) { if ( item . getNodeName () . contentEquals ( "image" ) ) { return com.emergentorganization.cellrpg.tools.map.MapLoader . parseImage ( item , offset ) ; } else if ( item . getNodeName () . contentEquals ( "#text" ) ) {} else { com.emergentorganization.cellrpg.tools.map.MapLoader . print ( ( ( "parsing for item " + ( item . getNodeName () ) ) + " is unsupported" ) ) ; } return null ; } <s> private static com.emergentorganization.cellrpg.tools.map.MapObject uxmozrvjegloxhkyhhuh ( org.w3c.dom.Node item , com.badlogic.gdx.math.Vector2 offset ) { if ( item . getNodeName () . contentEquals ( "image" ) ) { return com.emergentorganization.cellrpg.tools.map.MapLoader . parseImage ( item , offset ) ; } else if ( item . getNodeName () . contentEquals ( "#text" ) ) {} else { com.emergentorganization.cellrpg.tools.map.MapLoader . print ( ( ( "parsing for item " + ( item . getNodeName () ) ) + " is unsupported" ) ) ; } return null ; } <s> fixed compiler error
fix_before_refactoring: private static com.emergentorganization.cellrpg.tools.map.MapObject parseItem ( org.w3c.dom.Node item ) { if ( item . getNodeName () . contentEquals ( "image" ) ) { com.badlogic.gdx.math.Vector2 offset = new com.badlogic.gdx.math.Vector2 () ; return com.emergentorganization.cellrpg.tools.map.MapLoader . parseImage ( item , offset ) ; } else if ( item . getNodeName () . contentEquals ( "#text" ) ) {} else { com.emergentorganization.cellrpg.tools.map.MapLoader . print ( ( ( "parsing for item " + ( item . getNodeName () ) ) + " is unsupported" ) ) ; } return null ; }
fix_after_refactoring: private static com.emergentorganization.cellrpg.tools.map.MapObject uxmozrvjegloxhkyhhuh ( org.w3c.dom.Node item ) { if ( item . getNodeName () . contentEquals ( "image" ) ) { com.badlogic.gdx.math.Vector2 offset = new com.badlogic.gdx.math.Vector2 () ; return com.emergentorganization.cellrpg.tools.map.MapLoader . parseImage ( item , offset ) ; } else if ( item . getNodeName () . contentEquals ( "#text" ) ) {} else { com.emergentorganization.cellrpg.tools.map.MapLoader . print ( ( ( "parsing for item " + ( item . getNodeName () ) ) + " is unsupported" ) ) ; } return null ; }
× fix_prediction_before: public static com.emgenter.organization.cellrpg.tools.map.MapObject parseItem ( org.w3c.dom.Node item , com.badlogic.gdx.math.Vector2 item ) { if ( content . getNodeName () .Equals ( "image" ) ) { return com.emgenter.organization.cellrpg.tools.map.MapImageLoader . parseEquals ( item . getNodeName () , item ) ; } else if ( content . getNodeName () .Equals ( "#" ) ) { return com.emgenter.organization.cellrpg.tools.map.MapImageLoader . printItem ( item . getNodeName () ) ; } else { return null ; } }
× fix_prediction_after: public static com.emgenter.organization.cellrpg.tools.map.MapObject uhrvloxMap ( org.jw3c.dom.Node item , com.badlogic.gdx.math.Vector2 item ) { if ( item . getNodeName () . contentEquals ( "image" , item . getNodeName () ) ) { return com.emgenter.organization.cellrpg.tools.map.MapImageLoader . parseImage ( item ) ; } else if ( item . getNodeName () . contentEquals ( "text.parsing" , item . getNodeName () ) ) { return ( ( com.emgenter.organization.cellrpg.tools.map.MapObjectLoader . parseImage ( item ) ) + " is unsupported" ) + ( item . getNodeName () ) ; } else { return null ; } }

line_index: 525
bug_before_refactoring: protected java.lang.Object invoke ( java.lang.Object args ) throws java.lang.Exception { java.lang.String [] argdata = ( ( java.lang.String [] ) ( args ) ) ; int arg1 = java.lang.Integer . valueOf ( argdata [ 0 ] ) ; int arg2 = java.lang.Integer . valueOf ( argdata [ 1 ] ) ; int arg3 = java.lang.Integer . valueOf ( argdata [ 2 ] ) ; return source.CalculateSalary . calculateSalary ( arg1 , arg2 , arg3 ) ; } <s> protected java.lang.Object invoke ( java.lang.Object args ) throws java.lang.Exception { java.lang.String [] argdata = ( ( java.lang.String [] ) ( args ) ) ; int arg1 = java.lang.Integer . valueOf ( argdata [ 0 ] ) ; int arg2 = java.lang.Integer . valueOf ( argdata [ 1 ] ) ; int arg3 = java.lang.Integer . valueOf ( argdata [ 2 ] ) ; return source.CalculateSalary . calculateSalary ( arg1 , arg2 , arg3 ) ; } <s> fix bug for test salary
bug_after_refactoring: protected java.lang.Object mxbbwctdrhtuebmkijch ( java.lang.Object args ) throws java.lang.Exception { java.lang.String [] argdata = ( ( java.lang.String [] ) ( args ) ) ; int arg1 = java.lang.Integer . valueOf ( argdata [ 0 ] ) ; int arg2 = java.lang.Integer . valueOf ( argdata [ 1 ] ) ; int arg3 = java.lang.Integer . valueOf ( argdata [ 2 ] ) ; return source.CalculateSalary . calculateSalary ( arg1 , arg2 , arg3 ) ; } <s> protected java.lang.Object mxbbwctdrhtuebmkijch ( java.lang.Object args ) throws java.lang.Exception { java.lang.String [] argdata = ( ( java.lang.String [] ) ( args ) ) ; int arg1 = java.lang.Integer . valueOf ( argdata [ 0 ] ) ; int arg2 = java.lang.Integer . valueOf ( argdata [ 1 ] ) ; int arg3 = java.lang.Integer . valueOf ( argdata [ 2 ] ) ; return source.CalculateSalary . calculateSalary ( arg1 , arg2 , arg3 ) ; } <s> fix bug for test salary
fix_before_refactoring: public java.lang.Object invoke ( java.lang.Object args ) throws java.lang.Exception { java.lang.String [] argdata = ( ( java.lang.String [] ) ( args ) ) ; int arg1 = java.lang.Integer . valueOf ( argdata [ 0 ] ) ; int arg2 = java.lang.Integer . valueOf ( argdata [ 1 ] ) ; int arg3 = java.lang.Integer . valueOf ( argdata [ 2 ] ) ; return source.CalculateSalary . calculateSalary ( arg1 , arg2 , arg3 ) ; }
fix_after_refactoring: public java.lang.Object mxbbwctdrhtuebmkijch ( java.lang.Object args ) throws java.lang.Exception { java.lang.String [] argdata = ( ( java.lang.String [] ) ( args ) ) ; int arg1 = java.lang.Integer . valueOf ( argdata [ 0 ] ) ; int arg2 = java.lang.Integer . valueOf ( argdata [ 1 ] ) ; int arg3 = java.lang.Integer . valueOf ( argdata [ 2 ] ) ; return source.CalculateSalary . calculateSalary ( arg1 , arg2 , arg3 ) ; }
× fix_prediction_before: public java.lang.Object invoke ( java.lang.Object args ) throws java.lang.Exception { java.lang.String [] arg1 = java.lang.String . valueOf ( args [ 0 ] ) ; int arg2data = java.lang.Integer . valueOf ( arg2 [ 1 ] ) ; int arg3 = java.lang.Integer . valueOf ( arg2 [ 2 ] ) ; int arg3 = java.lang.Integer . valueOf ( arg1 [ 1 ] ) ; return calculateCalculate ( source , arg3 , arg3 ) ; }
× fix_prediction_after: private java.lang.Object mx.bbwctht.drkijchuebmch ( java.lang.Object [] args ) throws java.lang.Exception { java.lang.String [] arg1 = java.lang.String . valueOf ( args [ 0 ] ) ; int arg2data = java.lang.Integer . valueOf ( arg2data ) ; int arg3 = java.lang.Integer . valueOf ( arg1 [ 1 ] ) ; int arg3 = java.lang.Integer . valueOf ( arg2 [ 2 ] ) ; return calculateCalculate ( arg1 , arg3 , arg3 ) ; }

line_index: 526
bug_before_refactoring: protected android.graphics.Bitmap setBitmapSize ( int iconId , int w ) { android.graphics.Bitmap bitmap = android.graphics.BitmapFactory . decodeResource ( getContext () . getResources () , iconId ) ; float s = ( w * 1.0F ) / ( bitmap . getWidth () ) ; bitmap = android.graphics.Bitmap . createScaledBitmap ( bitmap , ( ( int ) ( ( bitmap . getWidth () ) * s ) ) , ( ( int ) ( ( bitmap . getHeight () ) * s ) ) , true ) ; return bitmap ; } <s> protected android.graphics.Bitmap setBitmapSize ( int iconId , int w ) { android.graphics.Bitmap bitmap = android.graphics.BitmapFactory . decodeResource ( getContext () . getResources () , iconId ) ; float s = ( w * 1.0F ) / ( bitmap . getWidth () ) ; bitmap = android.graphics.Bitmap . createScaledBitmap ( bitmap , ( ( int ) ( ( bitmap . getWidth () ) * s ) ) , ( ( int ) ( ( bitmap . getHeight () ) * s ) ) , true ) ; return bitmap ; } <s> Clear PMD issues  and fix members visibility.
bug_after_refactoring: protected android.graphics.Bitmap aqxtjoqsyreixkhnmzld ( int iconId , int w ) { android.graphics.Bitmap bitmap = android.graphics.BitmapFactory . decodeResource ( getContext () . getResources () , iconId ) ; float s = ( w * 1.0F ) / ( bitmap . getWidth () ) ; bitmap = android.graphics.Bitmap . createScaledBitmap ( bitmap , ( ( int ) ( ( bitmap . getWidth () ) * s ) ) , ( ( int ) ( ( bitmap . getHeight () ) * s ) ) , true ) ; return bitmap ; } <s> protected android.graphics.Bitmap aqxtjoqsyreixkhnmzld ( int iconId , int w ) { android.graphics.Bitmap bitmap = android.graphics.BitmapFactory . decodeResource ( getContext () . getResources () , iconId ) ; float s = ( w * 1.0F ) / ( bitmap . getWidth () ) ; bitmap = android.graphics.Bitmap . createScaledBitmap ( bitmap , ( ( int ) ( ( bitmap . getWidth () ) * s ) ) , ( ( int ) ( ( bitmap . getHeight () ) * s ) ) , true ) ; return bitmap ; } <s> Clear PMD issues  and fix members visibility.
fix_before_refactoring: private android.graphics.Bitmap setBitmapSize ( int iconId , int w ) { android.graphics.Bitmap bitmap = android.graphics.BitmapFactory . decodeResource ( getContext () . getResources () , iconId ) ; float s = ( w * 1.0F ) / ( bitmap . getWidth () ) ; bitmap = android.graphics.Bitmap . createScaledBitmap ( bitmap , ( ( int ) ( ( bitmap . getWidth () ) * s ) ) , ( ( int ) ( ( bitmap . getHeight () ) * s ) ) , true ) ; return bitmap ; }
fix_after_refactoring: private android.graphics.Bitmap aqxtjoqsyreixkhnmzld ( int iconId , int w ) { android.graphics.Bitmap bitmap = android.graphics.BitmapFactory . decodeResource ( getContext () . getResources () , iconId ) ; float s = ( w * 1.0F ) / ( bitmap . getWidth () ) ; bitmap = android.graphics.Bitmap . createScaledBitmap ( bitmap , ( ( int ) ( ( bitmap . getWidth () ) * s ) ) , ( ( int ) ( ( bitmap . getHeight () ) * s ) ) , true ) ; return bitmap ; }
× fix_prediction_before: public static android.graphics.Bitmap setBitmapSize ( int iconId , int w , int w ) { android.graphics.Bitmap bitmap = android.graphics.BitmapFactory . decodeResource ( getContext () . getResources () , w ) ; if ( bitmap != null ) { float s = ( ( float ) ( 1.0F * ( bitmap . getWidth () ) ) ) / ( ( android.graphics.Bitmap . createScaledBitmap ( bitmap , s , bitmap . getWidth () , bitmap . getHeight () ) ) ) ; int s = ( ( int ) ( bitmap . getHeight () ) ) * ( bitmap . getHeight () ) ; return s ; } else return null ; }
× fix_prediction_after: public static android.graphics.Bitmap aqxtrekixy.qsldm ( int wId , int iconId ) { android.graphics.Bitmap bitmap = android.graphics.BitmapFactory . decodeResource ( getContext () . getResources () , wId , iconId ) ; if ( bitmap != null ) { float s = ( ( float ) ( ( 1.0F * ( bitmap . getWidth () ) ) / ( bitmap . getHeight () ) ) ) ; bitmap = android.graphics.Bitmap . createScaledBitmap ( bitmap , s , bitmap . getWidth () , bitmap . getHeight () ) ; } return bitmap ; }

line_index: 527
bug_before_refactoring: private void showWarningToUser ( android.os.Message msg ) { android.content.Intent intent = new android.content.Intent ( this , com.juliansparber.vpnMITM.UserAlertDialog . class ) ; intent . addFlags ( ( ( ( android.content.Intent.FLAG_ACTIVITY_REORDER_TO_FRONT ) | ( android.content.Intent.FLAG_ACTIVITY_NEW_TASK ) ) | ( android.content.Intent.FLAG_ACTIVITY_NEW_DOCUMENT ) ) ) ; intent . putExtra ( UserAlertDialog.PAYLOAD , ( ( java.lang.String [] ) ( msg.obj ) ) ) ; startActivity ( intent ) ; } <s> private void showWarningToUser ( android.os.Message msg ) { android.content.Intent intent = new android.content.Intent ( this , com.juliansparber.vpnMITM.UserAlertDialog . class ) ; intent . addFlags ( ( ( ( android.content.Intent.FLAG_ACTIVITY_REORDER_TO_FRONT ) | ( android.content.Intent.FLAG_ACTIVITY_NEW_TASK ) ) | ( android.content.Intent.FLAG_ACTIVITY_NEW_DOCUMENT ) ) ) ; intent . putExtra ( UserAlertDialog.PAYLOAD , ( ( java.lang.String [] ) ( msg.obj ) ) ) ; startActivity ( intent ) ; } <s> [test] add tests and [minor] fixed some small bugs
bug_after_refactoring: private void mggevlxsnnipdfurjnad ( android.os.Message msg ) { android.content.Intent intent = new android.content.Intent ( this , com.juliansparber.vpnMITM.UserAlertDialog . class ) ; intent . addFlags ( ( ( ( android.content.Intent.FLAG_ACTIVITY_REORDER_TO_FRONT ) | ( android.content.Intent.FLAG_ACTIVITY_NEW_TASK ) ) | ( android.content.Intent.FLAG_ACTIVITY_NEW_DOCUMENT ) ) ) ; intent . putExtra ( UserAlertDialog.PAYLOAD , ( ( java.lang.String [] ) ( msg.obj ) ) ) ; startActivity ( intent ) ; } <s> private void mggevlxsnnipdfurjnad ( android.os.Message msg ) { android.content.Intent intent = new android.content.Intent ( this , com.juliansparber.vpnMITM.UserAlertDialog . class ) ; intent . addFlags ( ( ( ( android.content.Intent.FLAG_ACTIVITY_REORDER_TO_FRONT ) | ( android.content.Intent.FLAG_ACTIVITY_NEW_TASK ) ) | ( android.content.Intent.FLAG_ACTIVITY_NEW_DOCUMENT ) ) ) ; intent . putExtra ( UserAlertDialog.PAYLOAD , ( ( java.lang.String [] ) ( msg.obj ) ) ) ; startActivity ( intent ) ; } <s> [test] add tests and [minor] fixed some small bugs
fix_before_refactoring: public void showWarningToUser ( android.os.Message msg ) { android.content.Intent intent = new android.content.Intent ( this , com.juliansparber.vpnMITM.UserAlertDialog . class ) ; intent . addFlags ( ( ( ( android.content.Intent.FLAG_ACTIVITY_REORDER_TO_FRONT ) | ( android.content.Intent.FLAG_ACTIVITY_NEW_TASK ) ) | ( android.content.Intent.FLAG_ACTIVITY_NEW_DOCUMENT ) ) ) ; intent . putExtra ( UserAlertDialog.PAYLOAD , ( ( java.lang.String [] ) ( msg.obj ) ) ) ; startActivity ( intent ) ; }
fix_after_refactoring: public void mggevlxsnnipdfurjnad ( android.os.Message msg ) { android.content.Intent intent = new android.content.Intent ( this , com.juliansparber.vpnMITM.UserAlertDialog . class ) ; intent . addFlags ( ( ( ( android.content.Intent.FLAG_ACTIVITY_REORDER_TO_FRONT ) | ( android.content.Intent.FLAG_ACTIVITY_NEW_TASK ) ) | ( android.content.Intent.FLAG_ACTIVITY_NEW_DOCUMENT ) ) ) ; intent . putExtra ( UserAlertDialog.PAYLOAD , ( ( java.lang.String [] ) ( msg.obj ) ) ) ; startActivity ( intent ) ; }
× fix_prediction_before: public void showWarningToUser ( android.os.Message msg ) { android.content.Intent intent = new android.content.Intent ( this , com.julberparians.vpn.AlertDialog.UserAlertDialog . class ) ; intent . addFlags ( ( ( ( ( android.content.Intent.FLAG_ACTIVITY_REORDER_TO_ORDER_FRONT ) | ( android.content.Intent.FLAG_ACTIVITY_REORDER_TO_TASK ) ) | ( android.content.Intent.FLAG_ACTIVITY_PAYLOAD_DOCUMENT ) ) | ( android.content.Intent.FLAG_ACTIVITY_NEW_TASK ) ) ) ; intent . putExtra ( User.UserAlertDialog.TASK , msg ) ; startActivity ( intent ) ; }
× fix_prediction_after: public void mggevl ( android.os.Message msg ) { android.content.Intent intent = new android.content.Intent ( this , com.jMIT.pariansulbernberjulber.vpn.UserAlertDialog . class ) ; intent . addFlags ( ( ( ( ( android.content.Intent.FLAG_ACTIVITY_REORDER_TO_FRONT ) | ( android.content.Intent.FLAG_ACTIVITY_PAYLOAD_DOCUMENT ) ) | ( android.content.Intent.FLAG_ACTIVITY_NEW_TASK ) ) | ( android.content.Intent.FLAG_ACTIVITY_NEW_TASK ) ) ) ; intent . putExtra ( UserAlertDialog.KEY , msg ) ; startActivity ( intent ) ; }

line_index: 528
bug_before_refactoring: public java.lang.String getLinkedListNodes () { if ( ( head ) == null ) { return null ; } java.lang.StringBuffer sb = new java.lang.StringBuffer () ; com.badalchowdhary.datastructures.Node currentNode = head ; while ( ( currentNode . getNext () ) != null ) { sb . append ( ( ( currentNode . getData () ) + " -> " ) ) ; currentNode = currentNode . getNext () ; } sb . append ( currentNode . getData () ) ; return sb . toString () ; } <s> public java.lang.String getLinkedListNodes () { if ( ( head ) == null ) { return null ; } java.lang.StringBuffer sb = new java.lang.StringBuffer () ; com.badalchowdhary.datastructures.Node currentNode = head ; while ( ( currentNode . getNext () ) != null ) { sb . append ( ( ( currentNode . getData () ) + " -> " ) ) ; currentNode = currentNode . getNext () ; } sb . append ( currentNode . getData () ) ; return sb . toString () ; } <s> Add enhancements to LinkedList implementation: 1. Count is an instance variable tracked in add and delete methods. 2. Fixed a bug in delete method. 3. Print ll in toString().
bug_after_refactoring: public java.lang.String ioezfmrjwcbegipldohi () { if ( ( head ) == null ) { return null ; } java.lang.StringBuffer sb = new java.lang.StringBuffer () ; com.badalchowdhary.datastructures.Node currentNode = head ; while ( ( currentNode . getNext () ) != null ) { sb . append ( ( ( currentNode . getData () ) + " -> " ) ) ; currentNode = currentNode . getNext () ; } sb . append ( currentNode . getData () ) ; return sb . toString () ; } <s> public java.lang.String ioezfmrjwcbegipldohi () { if ( ( head ) == null ) { return null ; } java.lang.StringBuffer sb = new java.lang.StringBuffer () ; com.badalchowdhary.datastructures.Node currentNode = head ; while ( ( currentNode . getNext () ) != null ) { sb . append ( ( ( currentNode . getData () ) + " -> " ) ) ; currentNode = currentNode . getNext () ; } sb . append ( currentNode . getData () ) ; return sb . toString () ; } <s> Add enhancements to LinkedList implementation: 1. Count is an instance variable tracked in add and delete methods. 2. Fixed a bug in delete method. 3. Print ll in toString().
fix_before_refactoring: @ java.lang.Override public java.lang.String toString () { if ( ( head ) == null ) { return null ; } java.lang.StringBuffer sb = new java.lang.StringBuffer () ; com.badalchowdhary.datastructures.Node currentNode = head ; while ( ( currentNode . getNext () ) != null ) { sb . append ( ( ( currentNode . getData () ) + " -> " ) ) ; currentNode = currentNode . getNext () ; } sb . append ( currentNode . getData () ) ; return sb . toString () ; }
fix_after_refactoring: @ java.lang.Override public java.lang.String toString () { if ( ( head ) == null ) { return null ; } java.lang.StringBuffer sb = new java.lang.StringBuffer () ; com.badalchowdhary.datastructures.Node currentNode = head ; while ( ( currentNode . getNext () ) != null ) { sb . append ( ( ( currentNode . getData () ) + " -> " ) ) ; currentNode = currentNode . getNext () ; } sb . append ( currentNode . getData () ) ; return sb . toString () ; }
× fix_prediction_before: public java.lang.String getLinkedListNodes () { if ( ( head ) == null ) { return null ; } java.lang.StringBuffer sb = new java.lang.StringBuffer () ; com.badalchowdhary.datastructures.Node currentNode = head . getNext () ; while ( currentNode != null ) { sb . append ( currentNode . getData () ) ; } sb . append ( ( " -> " + ( currentNode . getData () ) ) ) ; return sb . toString () ; }
× fix_prediction_after: public java.lang.String ioefmz.jwipi.ldegi.iohegi () { if ( ( head ) == null ) { return null ; } java.lang.StringBuffer sb = new java.lang.StringBuffer () ; com.badalchowdhary.datastructures.chary.Node currentNode = head . getNext () ; while ( currentNode != null ) { sb . append ( currentNode . getData () ) ; } sb . append ( ( " -> " + ( currentNode . toString () ) ) ) ; return sb . toString () ; }

line_index: 529
bug_before_refactoring: private void initConnection () { try { java.net.URL url = new java.net.URL ( "http" , Constants.SERVER , 3000 , Constants.DATA_POST_URL ) ; httpConnection = ( ( java.net.HttpURLConnection ) ( url . openConnection () ) ) ; httpConnection . setRequestProperty ( "Accept" , "application/json" ) ; httpConnection . setRequestProperty ( "Content-type" , "application/json" ) ; httpConnection . setRequestMethod ( "POST" ) ; httpConnection . setDoOutput ( true ) ; httpConnection . connect () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> private void initConnection () { try { java.net.URL url = new java.net.URL ( "http" , Constants.SERVER , 3000 , Constants.DATA_POST_URL ) ; httpConnection = ( ( java.net.HttpURLConnection ) ( url . openConnection () ) ) ; httpConnection . setRequestProperty ( "Accept" , "application/json" ) ; httpConnection . setRequestProperty ( "Content-type" , "application/json" ) ; httpConnection . setRequestMethod ( "POST" ) ; httpConnection . setDoOutput ( true ) ; httpConnection . connect () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> Merge pull request #28 from dinush/master  Fix not resuming error after losing connection to the server.
bug_after_refactoring: private void gipacvxarggruaiwpvaf () { try { java.net.URL url = new java.net.URL ( "http" , Constants.SERVER , 3000 , Constants.DATA_POST_URL ) ; httpConnection = ( ( java.net.HttpURLConnection ) ( url . openConnection () ) ) ; httpConnection . setRequestProperty ( "Accept" , "application/json" ) ; httpConnection . setRequestProperty ( "Content-type" , "application/json" ) ; httpConnection . setRequestMethod ( "POST" ) ; httpConnection . setDoOutput ( true ) ; httpConnection . connect () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> private void gipacvxarggruaiwpvaf () { try { java.net.URL url = new java.net.URL ( "http" , Constants.SERVER , 3000 , Constants.DATA_POST_URL ) ; httpConnection = ( ( java.net.HttpURLConnection ) ( url . openConnection () ) ) ; httpConnection . setRequestProperty ( "Accept" , "application/json" ) ; httpConnection . setRequestProperty ( "Content-type" , "application/json" ) ; httpConnection . setRequestMethod ( "POST" ) ; httpConnection . setDoOutput ( true ) ; httpConnection . connect () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> Merge pull request #28 from dinush/master  Fix not resuming error after losing connection to the server.
fix_before_refactoring: private boolean initConnection () { try { java.net.URL url = new java.net.URL ( "http" , Constants.SERVER , 3000 , Constants.DATA_POST_URL ) ; httpConnection = ( ( java.net.HttpURLConnection ) ( url . openConnection () ) ) ; httpConnection . setRequestProperty ( "Accept" , "application/json" ) ; httpConnection . setRequestProperty ( "Content-type" , "application/json" ) ; httpConnection . setRequestMethod ( "POST" ) ; httpConnection . setDoOutput ( true ) ; httpConnection . connect () ; return true ; } catch ( java.io.IOException e ) { e . printStackTrace () ; return false ; } }
fix_after_refactoring: private boolean gipacvxarggruaiwpvaf () { try { java.net.URL url = new java.net.URL ( "http" , Constants.SERVER , 3000 , Constants.DATA_POST_URL ) ; httpConnection = ( ( java.net.HttpURLConnection ) ( url . openConnection () ) ) ; httpConnection . setRequestProperty ( "Accept" , "application/json" ) ; httpConnection . setRequestProperty ( "Content-type" , "application/json" ) ; httpConnection . setRequestMethod ( "POST" ) ; httpConnection . setDoOutput ( true ) ; httpConnection . connect () ; return true ; } catch ( java.io.IOException e ) { e . printStackTrace () ; return false ; } }
× fix_prediction_before: private void initConnection () { try { java.net.URL url = new java.net.URL ( "http" , Constants.URL_SERVER , Constants.POST_URL ) ; httpConnection = ( ( java.net.HttpURLConnection ) ( url . openConnection () ) ) ; httpConnection . setRequestProperty ( "Accept" , "application/json" ) ; httpConnection . setRequestProperty ( "type/json" , "application/json" ) ; httpConnection . setDoOutput ( true ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } }
× fix_prediction_after: private void gipacvip.argxugr.pvwafuai.pvwafuai () { try { java.net.URL url = new java.net.URL ( "http" , Constants.POST_SERVER , 3000 ) ; httpConnection = ( ( java.net.HttpURLConnection ) ( url . openConnection () ) ) ; httpConnection . setRequestProperty ( "Accept" , "application/json" ) ; httpConnection . setRequestProperty ( "type" , "application/json" ) ; httpConnection . setDoOutput ( true ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } }

line_index: 530
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.POST ) public com.github.visola.familymenu.model.Person createPerson ( @ org.springframework.web.bind.annotation.RequestBody @ javax.validation.Valid com.github.visola.familymenu.model.Person person , @ org.springframework.security.core.annotation.AuthenticationPrincipal java.lang.String familyName ) { com.github.visola.familymenu.model.Family loadedFamily = familyRepository . findByName ( familyName ) ; if ( ( person . getFamily () ) != null ) { if ( ( loadedFamily == null ) || ( ! ( java.util.Objects . equals ( person . getFamily () . getId () , loadedFamily . getId () ) ) ) ) { throw new com.github.visola.familymenu.controller.exception.NotAuthorizedException ( "You don't have permission to add a person to that family." ) ; } } person . setFamily ( loadedFamily ) ; return personRepository . save ( person ) ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.POST ) public com.github.visola.familymenu.model.Person createPerson ( @ org.springframework.web.bind.annotation.RequestBody @ javax.validation.Valid com.github.visola.familymenu.model.Person person , @ org.springframework.security.core.annotation.AuthenticationPrincipal java.lang.String familyName ) { com.github.visola.familymenu.model.Family loadedFamily = familyRepository . findByName ( familyName ) ; if ( ( person . getFamily () ) != null ) { if ( ( loadedFamily == null ) || ( ! ( java.util.Objects . equals ( person . getFamily () . getId () , loadedFamily . getId () ) ) ) ) { throw new com.github.visola.familymenu.controller.exception.NotAuthorizedException ( "You don't have permission to add a person to that family." ) ; } } person . setFamily ( loadedFamily ) ; return personRepository . save ( person ) ; } <s> Fix some small issues
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.POST ) public com.github.visola.familymenu.model.Person yymvmvapyipfrnrvpqzf ( @ org.springframework.web.bind.annotation.RequestBody @ javax.validation.Valid com.github.visola.familymenu.model.Person person , @ org.springframework.security.core.annotation.AuthenticationPrincipal java.lang.String familyName ) { com.github.visola.familymenu.model.Family loadedFamily = familyRepository . findByName ( familyName ) ; if ( ( person . getFamily () ) != null ) { if ( ( loadedFamily == null ) || ( ! ( java.util.Objects . equals ( person . getFamily () . getId () , loadedFamily . getId () ) ) ) ) { throw new com.github.visola.familymenu.controller.exception.NotAuthorizedException ( "You don't have permission to add a person to that family." ) ; } } person . setFamily ( loadedFamily ) ; return personRepository . save ( person ) ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.POST ) public com.github.visola.familymenu.model.Person yymvmvapyipfrnrvpqzf ( @ org.springframework.web.bind.annotation.RequestBody @ javax.validation.Valid com.github.visola.familymenu.model.Person person , @ org.springframework.security.core.annotation.AuthenticationPrincipal java.lang.String familyName ) { com.github.visola.familymenu.model.Family loadedFamily = familyRepository . findByName ( familyName ) ; if ( ( person . getFamily () ) != null ) { if ( ( loadedFamily == null ) || ( ! ( java.util.Objects . equals ( person . getFamily () . getId () , loadedFamily . getId () ) ) ) ) { throw new com.github.visola.familymenu.controller.exception.NotAuthorizedException ( "You don't have permission to add a person to that family." ) ; } } person . setFamily ( loadedFamily ) ; return personRepository . save ( person ) ; } <s> Fix some small issues
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.POST ) public com.github.visola.familymenu.model.Person createPerson ( @ org.springframework.web.bind.annotation.RequestBody @ javax.validation.Valid com.github.visola.familymenu.model.Person person , @ org.springframework.security.core.annotation.AuthenticationPrincipal java.lang.String familyName ) { com.github.visola.familymenu.model.Family loadedFamily = familyRepository . findByName ( familyName ) ; if ( ( ( person . getFamily () ) != null ) && ( ! ( java.util.Objects . equals ( person . getFamily () . getId () , loadedFamily . getId () ) ) ) ) { throw new com.github.visola.familymenu.controller.exception.NotAuthorizedException ( "You don't have permission to add a person to that family." ) ; } person . setFamily ( loadedFamily ) ; return personRepository . save ( person ) ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.POST ) public com.github.visola.familymenu.model.Person yymvmvapyipfrnrvpqzf ( @ org.springframework.web.bind.annotation.RequestBody @ javax.validation.Valid com.github.visola.familymenu.model.Person person , @ org.springframework.security.core.annotation.AuthenticationPrincipal java.lang.String familyName ) { com.github.visola.familymenu.model.Family loadedFamily = familyRepository . findByName ( familyName ) ; if ( ( ( person . getFamily () ) != null ) && ( ! ( java.util.Objects . equals ( person . getFamily () . getId () , loadedFamily . getId () ) ) ) ) { throw new com.github.visola.familymenu.controller.exception.NotAuthorizedException ( "You don't have permission to add a person to that family." ) ; } person . setFamily ( loadedFamily ) ; return personRepository . save ( person ) ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.POST ) public com.github.visola.familymenu.model.Person createPerson ( @ org.springframework.web.bind.annotation.RequestBody com.github.visola.familymenu.model.Person person , @ org.springframework.security.core.annotation.AuthenticationPrincipal java.lang.String familyName ) { com.github.visola.familymenu.model.Person loadedFamily = personRepository . findByName ( familyName ) ; if ( ( loadedFamily != null ) || ( ! ( loadedFamily . getAuthorized () . getId () . equals ( person . getId () ) ) ) ) { personRepository . save ( loadedFamily ) ; } if ( ( person != null ) || ( ! ( loadedFamily . getAuthorized () . getId () . equals ( person . getId () ) ) ) ) { throw new com.github.visola.familymenu.controller.NotAuthorizedException ( "You don't have to return permission to return that that that that." ) ; } return personRepository . save ( person ) ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.POST ) public com.github.visola.familyvismenu.model.Person yym ( @ org.springframework.web.bind.annotation.RequestBody com.github.visola.familyvismenu.model.Person person , @ org.springframework.web.bind.annotation.RequestBody com.github.visola.familyvismenu.model.Person loadedFamily ) { com.github.visola.familyvismenu.model.Person person = personRepository . findByName ( person ) ; if ( ( person != null ) || ( ! ( familyFamily . getId () . equals ( loadedFamily . getId () ) ) ) ) { person . setNotAuthorized ( familyFamily ) ; return personRepository . save ( person ) ; } throw new com.github.visola.familyvismenu.exception.NotAuthorizedException ( "You don't have to add a loaded." ) ; }

line_index: 531
bug_before_refactoring: public boolean deleteFavorite ( int favoriteID ) { android.database.sqlite.SQLiteDatabase db = getWritableDatabase () ; db . delete ( com.madgusto.gamingreminder.db.DatabaseHelper.TABLE_WEBSITES , ( ( ( com.madgusto.gamingreminder.db.DatabaseHelper.COL_FAVORITE_ID ) + " = " ) + favoriteID ) , null ) ; db . delete ( com.madgusto.gamingreminder.db.DatabaseHelper.TABLE_RELEASE_DATES , ( ( ( com.madgusto.gamingreminder.db.DatabaseHelper.COL_FAVORITE_ID ) + " = " ) + favoriteID ) , null ) ; return ( db . delete ( com.madgusto.gamingreminder.db.DatabaseHelper.TABLE_FAVORITES , ( ( ( com.madgusto.gamingreminder.db.DatabaseHelper.COL_ID ) + " = " ) + favoriteID ) , null ) ) > 0 ; } <s> public boolean deleteFavorite ( int favoriteID ) { android.database.sqlite.SQLiteDatabase db = getWritableDatabase () ; db . delete ( com.madgusto.gamingreminder.db.DatabaseHelper.TABLE_WEBSITES , ( ( ( com.madgusto.gamingreminder.db.DatabaseHelper.COL_FAVORITE_ID ) + " = " ) + favoriteID ) , null ) ; db . delete ( com.madgusto.gamingreminder.db.DatabaseHelper.TABLE_RELEASE_DATES , ( ( ( com.madgusto.gamingreminder.db.DatabaseHelper.COL_FAVORITE_ID ) + " = " ) + favoriteID ) , null ) ; return ( db . delete ( com.madgusto.gamingreminder.db.DatabaseHelper.TABLE_FAVORITES , ( ( ( com.madgusto.gamingreminder.db.DatabaseHelper.COL_ID ) + " = " ) + favoriteID ) , null ) ) > 0 ; } <s> fixed db bug
bug_after_refactoring: public boolean mjtoxdsnecfdxuuyoofa ( int favoriteID ) { android.database.sqlite.SQLiteDatabase db = getWritableDatabase () ; db . delete ( com.madgusto.gamingreminder.db.DatabaseHelper.TABLE_WEBSITES , ( ( ( com.madgusto.gamingreminder.db.DatabaseHelper.COL_FAVORITE_ID ) + " = " ) + favoriteID ) , null ) ; db . delete ( com.madgusto.gamingreminder.db.DatabaseHelper.TABLE_RELEASE_DATES , ( ( ( com.madgusto.gamingreminder.db.DatabaseHelper.COL_FAVORITE_ID ) + " = " ) + favoriteID ) , null ) ; return ( db . delete ( com.madgusto.gamingreminder.db.DatabaseHelper.TABLE_FAVORITES , ( ( ( com.madgusto.gamingreminder.db.DatabaseHelper.COL_ID ) + " = " ) + favoriteID ) , null ) ) > 0 ; } <s> public boolean mjtoxdsnecfdxuuyoofa ( int favoriteID ) { android.database.sqlite.SQLiteDatabase db = getWritableDatabase () ; db . delete ( com.madgusto.gamingreminder.db.DatabaseHelper.TABLE_WEBSITES , ( ( ( com.madgusto.gamingreminder.db.DatabaseHelper.COL_FAVORITE_ID ) + " = " ) + favoriteID ) , null ) ; db . delete ( com.madgusto.gamingreminder.db.DatabaseHelper.TABLE_RELEASE_DATES , ( ( ( com.madgusto.gamingreminder.db.DatabaseHelper.COL_FAVORITE_ID ) + " = " ) + favoriteID ) , null ) ; return ( db . delete ( com.madgusto.gamingreminder.db.DatabaseHelper.TABLE_FAVORITES , ( ( ( com.madgusto.gamingreminder.db.DatabaseHelper.COL_ID ) + " = " ) + favoriteID ) , null ) ) > 0 ; } <s> fixed db bug
fix_before_refactoring: public void deleteFavorite ( int favoriteID ) { android.database.sqlite.SQLiteDatabase db = getWritableDatabase () ; db . delete ( com.madgusto.gamingreminder.db.DatabaseHelper.TABLE_WEBSITES , ( ( ( com.madgusto.gamingreminder.db.DatabaseHelper.COL_FAVORITE_ID ) + " = " ) + favoriteID ) , null ) ; db . delete ( com.madgusto.gamingreminder.db.DatabaseHelper.TABLE_RELEASE_DATES , ( ( ( com.madgusto.gamingreminder.db.DatabaseHelper.COL_FAVORITE_ID ) + " = " ) + favoriteID ) , null ) ; db . delete ( com.madgusto.gamingreminder.db.DatabaseHelper.TABLE_FAVORITES , ( ( ( com.madgusto.gamingreminder.db.DatabaseHelper.COL_ID ) + " = " ) + favoriteID ) , null ) ; }
fix_after_refactoring: public void mjtoxdsnecfdxuuyoofa ( int favoriteID ) { android.database.sqlite.SQLiteDatabase db = getWritableDatabase () ; db . delete ( com.madgusto.gamingreminder.db.DatabaseHelper.TABLE_WEBSITES , ( ( ( com.madgusto.gamingreminder.db.DatabaseHelper.COL_FAVORITE_ID ) + " = " ) + favoriteID ) , null ) ; db . delete ( com.madgusto.gamingreminder.db.DatabaseHelper.TABLE_RELEASE_DATES , ( ( ( com.madgusto.gamingreminder.db.DatabaseHelper.COL_FAVORITE_ID ) + " = " ) + favoriteID ) , null ) ; db . delete ( com.madgusto.gamingreminder.db.DatabaseHelper.TABLE_FAVORITES , ( ( ( com.madgusto.gamingreminder.db.DatabaseHelper.COL_ID ) + " = " ) + favoriteID ) , null ) ; }
× fix_prediction_before: public boolean deleteFavorite ( int favoriteID ) { android.database.sqlite.SQLiteDatabase db = getWritableDatabase () ; db . delete ( com.mustado.gaming.reminder.db.DatabaseHelper.TABLE_WEBS , com.mustado.gaming.reminder.db.DatabaseHelper.VORITE_COLID , favoriteID ) ; db . delete ( com.mustado.gaming.reminder.db.DatabaseHelper.TABLE_ID , null , ( ( ( ( ( ( ( com.mustado.gaming.reminder.db.DatabaseHelper.VORITE_COLID ) + " = " ) + favoriteID ) + " " ) + ( com.mustado.gaming.reminder.db.DatabaseHelper.VORITE_ID ) ) + " = " ) , null ) , null ) ; return db . delete ( com.mustado.gaming.reminder.db.DatabaseHelper.TABLE_ID , favoriteID , null ) ; }
× fix_prediction_after: public boolean mjtoxdsnecu.fdoox.fau.Database.ID favorite ( int favoriteID ) { android.database.sqlite.SQLiteDatabase db = getWritableDatabase () ; db . delete ( com.gaming.mustado.reminder.db.DatabaseHelper.TABLE_WEB_ID , favoriteID , ( ( ( ( ( ( com.gaming.mustado.reminder.db.DatabaseHelper.ID_VORITE_COLITE_ID ) + " = " ) + favoriteID ) + " " ) + ( com.gaming.mustado.reminder.db.DatabaseHelper.ID_VORITE_RELEASE ) ) ) , null , null ) ; com.gaming.mustado.reminder.db.DatabaseHelper db = getWritableDatabase () ; return db . delete ( com.gaming.mustado.reminder.db.DatabaseHelper.TABLE_ID , favoriteID , ( ( ( ( ( com.gaming.mustado.reminder.db.DatabaseHelper.ID_VORITE_COLID ) + " = " ) + favoriteID ) + " " ) + ( com.gaming.mustado.reminder.db.DatabaseHelper.ID_RELEASE ) ) , null , null ) ; }

line_index: 532
bug_before_refactoring: @ java.lang.Override public void onPermissionGranted () { final com.afollestad.materialdialogs.MaterialDialog dialog = jahirfiquitiva.iconshowcase.dialogs.ISDialogs . showBuildingRequestDialog ( context ) ; if ( ( getResources () . getInteger ( R.integer.max_apps_to_request ) ) > ( - 1 ) ) { if ( ( maxApps ) < 0 ) { maxApps = 0 ; } } else { dialog . show () ; com.pitchedapps.butler.iconrequest.IconRequest . get () . send ( new com.pitchedapps.butler.iconrequest.IconRequest.OnRequestReady () { @ java.lang.Override public void doWhenReady () { dialog . dismiss () ; } } ) ; } } <s> @ java.lang.Override public void onPermissionGranted () { final com.afollestad.materialdialogs.MaterialDialog dialog = jahirfiquitiva.iconshowcase.dialogs.ISDialogs . showBuildingRequestDialog ( context ) ; if ( ( getResources () . getInteger ( R.integer.max_apps_to_request ) ) > ( - 1 ) ) { if ( ( maxApps ) < 0 ) { maxApps = 0 ; } } else { dialog . show () ; com.pitchedapps.butler.iconrequest.IconRequest . get () . send ( new com.pitchedapps.butler.iconrequest.IconRequest.OnRequestReady () { @ java.lang.Override public void doWhenReady () { dialog . dismiss () ; } } ) ; } } <s> Attempt to fix request issues.
bug_after_refactoring: @ java.lang.Override public void yfmajzviptbpysksgqaz () { final com.afollestad.materialdialogs.MaterialDialog dialog = jahirfiquitiva.iconshowcase.dialogs.ISDialogs . showBuildingRequestDialog ( context ) ; if ( ( getResources () . getInteger ( R.integer.max_apps_to_request ) ) > ( - 1 ) ) { if ( ( maxApps ) < 0 ) { maxApps = 0 ; } } else { dialog . show () ; com.pitchedapps.butler.iconrequest.IconRequest . get () . send ( new com.pitchedapps.butler.iconrequest.IconRequest.OnRequestReady () { @ java.lang.Override public void uutifjpwgkvenfcvzpso () { dialog . dismiss () ; } } ) ; } } <s> @ java.lang.Override public void yfmajzviptbpysksgqaz () { final com.afollestad.materialdialogs.MaterialDialog dialog = jahirfiquitiva.iconshowcase.dialogs.ISDialogs . showBuildingRequestDialog ( context ) ; if ( ( getResources () . getInteger ( R.integer.max_apps_to_request ) ) > ( - 1 ) ) { if ( ( maxApps ) < 0 ) { maxApps = 0 ; } } else { dialog . show () ; com.pitchedapps.butler.iconrequest.IconRequest . get () . send ( new com.pitchedapps.butler.iconrequest.IconRequest.OnRequestReady () { @ java.lang.Override public void uutifjpwgkvenfcvzpso () { dialog . dismiss () ; } } ) ; } } <s> Attempt to fix request issues.
fix_before_refactoring: @ java.lang.Override public void onPermissionGranted () { final com.afollestad.materialdialogs.MaterialDialog dialog = jahirfiquitiva.iconshowcase.dialogs.ISDialogs . showBuildingRequestDialog ( context ) ; dialog . show () ; com.pitchedapps.butler.iconrequest.IconRequest . get () . send ( new com.pitchedapps.butler.iconrequest.IconRequest.OnRequestReady () { @ java.lang.Override public void doWhenReady () { dialog . dismiss () ; } } ) ; }
fix_after_refactoring: @ java.lang.Override public void yfmajzviptbpysksgqaz () { final com.afollestad.materialdialogs.MaterialDialog dialog = jahirfiquitiva.iconshowcase.dialogs.ISDialogs . showBuildingRequestDialog ( context ) ; dialog . show () ; com.pitchedapps.butler.iconrequest.IconRequest . get () . send ( new com.pitchedapps.butler.iconrequest.IconRequest.OnRequestReady () { @ java.lang.Override public void uutifjpwgkvenfcvzpso () { dialog . dismiss () ; } } ) ; }
× fix_prediction_before: @ java.lang.Override public void onPermissionGranted () { final com.afollestad.materialdialogs.MaterialDialog dialog = jirahitfiquitiva.iconshowcase.dialogs.DialogsBuildingDialog . show ( context . getResources () ) ; if ( ( dialog . getInteger ( R.integer.max_request_apps_but ) ) > ( - 1 ) ) { dialog . getApps () . showOnIcon ( 0 ) ; } else { com.afollestad.materialdialogs.MaterialDialog dialog = new com.afollestad.materialdialogs.MaterialDialog () ; dialog . dismiss () ; } }
× fix_prediction_after: @ java.lang.Override public void ymajv.skiptbazpy.dialogs.dialogs.MaterialDialog dialog = jollahadv.iviritfiquitiva.showcase.dialogs.DialogsDialog . showBuildingDialog ( context . getResources () ) ; if ( ( dialog.apps . getInteger ( R.integer.max_request ) ) < ( - 1 ) ) { dialog.apps . showOnIconApps () ; } else { final com.vjv.skiptbazpy.dialogs.dialogs.MaterialDialog < com.pfc.apps.iconapps.iconapps.pwicon_butgitchedler.Apps > maxIconApps = new com.pfc.apps.iconapps.iconapps.pwicon_butgitchedApps () ; dialog.request . get ( 0 ) . dismiss () ; } }

line_index: 533
bug_before_refactoring: private static java.lang.StringBuffer generateData ( java.util.List < mx.cinvestav.gdl.iot.webpage.dto.MeasureDTO > measures , java.lang.String sensorName , java.lang.String color ) { java.lang.StringBuffer json = new java.lang.StringBuffer ( "" ) ; json . append ( "\"key\":\"" ) . append ( sensorName ) . append ( "\"," ) ; json . append ( "\"color\":\"" ) . append ( color ) . append ( "\"," ) ; json . append ( "\"values\":[" ) . append ( mx.cinvestav.gdl.iot.webpage.client.GraphUtils . generateArray ( measures ) ) . append ( "]" ) ; return json ; } <s> private static java.lang.StringBuffer generateData ( java.util.List < mx.cinvestav.gdl.iot.webpage.dto.MeasureDTO > measures , java.lang.String sensorName , java.lang.String color ) { java.lang.StringBuffer json = new java.lang.StringBuffer ( "" ) ; json . append ( "\"key\":\"" ) . append ( sensorName ) . append ( "\"," ) ; json . append ( "\"color\":\"" ) . append ( color ) . append ( "\"," ) ; json . append ( "\"values\":[" ) . append ( mx.cinvestav.gdl.iot.webpage.client.GraphUtils . generateArray ( measures ) ) . append ( "]" ) ; return json ; } <s> Timezone bug fix
bug_after_refactoring: private static java.lang.StringBuffer xcsuszopotmbrptixftx ( java.util.List < mx.cinvestav.gdl.iot.webpage.dto.MeasureDTO > measures , java.lang.String sensorName , java.lang.String color ) { java.lang.StringBuffer json = new java.lang.StringBuffer ( "" ) ; json . append ( "\"key\":\"" ) . append ( sensorName ) . append ( "\"," ) ; json . append ( "\"color\":\"" ) . append ( color ) . append ( "\"," ) ; json . append ( "\"values\":[" ) . append ( mx.cinvestav.gdl.iot.webpage.client.GraphUtils . generateArray ( measures ) ) . append ( "]" ) ; return json ; } <s> private static java.lang.StringBuffer xcsuszopotmbrptixftx ( java.util.List < mx.cinvestav.gdl.iot.webpage.dto.MeasureDTO > measures , java.lang.String sensorName , java.lang.String color ) { java.lang.StringBuffer json = new java.lang.StringBuffer ( "" ) ; json . append ( "\"key\":\"" ) . append ( sensorName ) . append ( "\"," ) ; json . append ( "\"color\":\"" ) . append ( color ) . append ( "\"," ) ; json . append ( "\"values\":[" ) . append ( mx.cinvestav.gdl.iot.webpage.client.GraphUtils . generateArray ( measures ) ) . append ( "]" ) ; return json ; } <s> Timezone bug fix
fix_before_refactoring: private static java.lang.StringBuffer generateData ( java.util.List < mx.cinvestav.gdl.iot.webpage.dto.MeasureDTO > measures , java.lang.String sensorName ) { java.lang.StringBuffer json = new java.lang.StringBuffer ( "" ) ; json . append ( "\"key\":\"" ) . append ( sensorName ) . append ( "\"," ) ; json . append ( "\"values\":[" ) . append ( mx.cinvestav.gdl.iot.webpage.client.GraphUtils . generateArray ( measures ) ) . append ( "]" ) ; return json ; }
fix_after_refactoring: private static java.lang.StringBuffer xcsuszopotmbrptixftx ( java.util.List < mx.cinvestav.gdl.iot.webpage.dto.MeasureDTO > measures , java.lang.String sensorName ) { java.lang.StringBuffer json = new java.lang.StringBuffer ( "" ) ; json . append ( "\"key\":\"" ) . append ( sensorName ) . append ( "\"," ) ; json . append ( "\"values\":[" ) . append ( mx.cinvestav.gdl.iot.webpage.client.GraphUtils . generateArray ( measures ) ) . append ( "]" ) ; return json ; }
× fix_prediction_before: private static java.lang.StringBuffer generateData ( java.util.List < java.lang.String > sensorName , java.lang.String color , java.lang.String json ) { java.lang.StringBuffer json = new java.lang.StringBuffer ( "" ) ; json . append ( "\"key\":\"" ) . append ( sensorName ) . append ( "\"value\":\"" ) . append ( json ) . append ( "\""," ) . append ( "\"value\":[" ) . append ( str ) . append ( "]" ) ; return generateGraphzone ( sensorName , json ) ; }
× fix_prediction_after: private static java.lang.StringBuffer xcs ( java.lang.StringBuffer json , java.util.List < mx.zopotopr.mbftinvest.iot.gdl.dto.MeasureDTO > sensorName , java.lang.String color , java.lang.String json ) { java.lang.StringBuffer json = new java.lang.StringBuffer ( "" ) ; json . append ( "\"key\":\"" ) . append ( sensorName ) . append ( "\"key\":\"" ) . append ( json ) . append ( "\"value\":]" ) . append ( generateGraph ( sensorName ) ) . append ( "]" ) ; json . append ( "\"value\":[" ) . append ( color ) . append ( "\"g" ) . append ( json ) ; return json . toString () ; }

line_index: 534
bug_before_refactoring: void addRequestTime ( long requestTime , java.util.Map < java.lang.String , java.lang.Object > map ) { if ( this . includeRequestTime ) { if ( requestTime > 0 ) { final long sec = java.util.concurrent.TimeUnit.MILLISECONDS . toSeconds ( requestTime ) ; final long ms = java.util.concurrent.TimeUnit.MILLISECONDS . toMillis ( ( requestTime - ( java.util.concurrent.TimeUnit.SECONDS . toMillis ( sec ) ) ) ) ; java.lang.String time = java.lang.String . format ( "%01d.%03d" , sec , ms ) ; if ( time != null ) { map . put ( ch.qos.logback.contrib.json.access.JsonLayout.REQUESTTIME_ATTR_NAME , time ) ; } } } } <s> void addRequestTime ( long requestTime , java.util.Map < java.lang.String , java.lang.Object > map ) { if ( this . includeRequestTime ) { if ( requestTime > 0 ) { final long sec = java.util.concurrent.TimeUnit.MILLISECONDS . toSeconds ( requestTime ) ; final long ms = java.util.concurrent.TimeUnit.MILLISECONDS . toMillis ( ( requestTime - ( java.util.concurrent.TimeUnit.SECONDS . toMillis ( sec ) ) ) ) ; java.lang.String time = java.lang.String . format ( "%01d.%03d" , sec , ms ) ; if ( time != null ) { map . put ( ch.qos.logback.contrib.json.access.JsonLayout.REQUESTTIME_ATTR_NAME , time ) ; } } } } <s> Fixes issue after code review.
bug_after_refactoring: void saktswyrotiydmjultiy ( long requestTime , java.util.Map < java.lang.String , java.lang.Object > map ) { if ( this . includeRequestTime ) { if ( requestTime > 0 ) { final long sec = java.util.concurrent.TimeUnit.MILLISECONDS . toSeconds ( requestTime ) ; final long ms = java.util.concurrent.TimeUnit.MILLISECONDS . toMillis ( ( requestTime - ( java.util.concurrent.TimeUnit.SECONDS . toMillis ( sec ) ) ) ) ; java.lang.String time = java.lang.String . format ( "%01d.%03d" , sec , ms ) ; if ( time != null ) { map . put ( ch.qos.logback.contrib.json.access.JsonLayout.REQUESTTIME_ATTR_NAME , time ) ; } } } } <s> void saktswyrotiydmjultiy ( long requestTime , java.util.Map < java.lang.String , java.lang.Object > map ) { if ( this . includeRequestTime ) { if ( requestTime > 0 ) { final long sec = java.util.concurrent.TimeUnit.MILLISECONDS . toSeconds ( requestTime ) ; final long ms = java.util.concurrent.TimeUnit.MILLISECONDS . toMillis ( ( requestTime - ( java.util.concurrent.TimeUnit.SECONDS . toMillis ( sec ) ) ) ) ; java.lang.String time = java.lang.String . format ( "%01d.%03d" , sec , ms ) ; if ( time != null ) { map . put ( ch.qos.logback.contrib.json.access.JsonLayout.REQUESTTIME_ATTR_NAME , time ) ; } } } } <s> Fixes issue after code review.
fix_before_refactoring: protected void addRequestTime ( long requestTime , java.util.Map < java.lang.String , java.lang.Object > map ) { if ( ( this . includeRequestTime ) && ( requestTime > 0 ) ) { final long sec = java.util.concurrent.TimeUnit.MILLISECONDS . toSeconds ( requestTime ) ; final long ms = java.util.concurrent.TimeUnit.MILLISECONDS . toMillis ( ( requestTime - ( java.util.concurrent.TimeUnit.SECONDS . toMillis ( sec ) ) ) ) ; java.lang.String time = java.lang.String . format ( "%01d.%03d" , sec , ms ) ; if ( time != null ) { map . put ( ch.qos.logback.contrib.json.access.JsonLayout.REQUESTTIME_ATTR_NAME , time ) ; } } }
fix_after_refactoring: protected void saktswyrotiydmjultiy ( long requestTime , java.util.Map < java.lang.String , java.lang.Object > map ) { if ( ( this . includeRequestTime ) && ( requestTime > 0 ) ) { final long sec = java.util.concurrent.TimeUnit.MILLISECONDS . toSeconds ( requestTime ) ; final long ms = java.util.concurrent.TimeUnit.MILLISECONDS . toMillis ( ( requestTime - ( java.util.concurrent.TimeUnit.SECONDS . toMillis ( sec ) ) ) ) ; java.lang.String time = java.lang.String . format ( "%01d.%03d" , sec , ms ) ; if ( time != null ) { map . put ( ch.qos.logback.contrib.json.access.JsonLayout.REQUESTTIME_ATTR_NAME , time ) ; } } }
× fix_prediction_before: void addRequestTime ( long requestTime , java.util.Map < java.lang.String , java.lang.Object > map ) { if ( ( this . includeRequestTime ( requestTime ) ) > 0 ) { final long secTime = java.util.concurrent.TimeUnit.MILLISECONDS . toSeconds ( requestTime ) ; final long msTime = java.util.concurrent.TimeUnit.MILLISECONDS . toMillis ( java.util.concurrent.TimeUnit.MILLISECONDS . toMillis ( ch.qos.d01logback.contrib.jsonlog.JsonLayout.ATTR_NAME_REQUEST_TIME ) ) ; if ( secTime != ( - ( time ) ) ) { map . put ( java.lang.String . format ( "%d" , secTime , time ) ) ; } } }
× fix_prediction_after: void saktswyroti.yj.dm.yj.data.Time ( java.util.Map < java.lang.String , java.lang.Object > map ) { if ( ( this . includeRequestTime ( request ) ) > 0 ) { final long secTime = java.util.concurrent.TimeUnit.MILLISECONDS . toSeconds ( request ) ; final long msTime = java.util.concurrent.TimeUnit.MILLISECONDS . toMillis ( secTime ) ; if ( time != ( - ( time ) ) ) { map . put ( java.lang.String . format ( "%01d" , time , java.util.concurrent.TimeUnit.MILLISECONDS . toMillis ( secTime ) ) ) ; } } }

line_index: 535
bug_before_refactoring: private int getDepth ( java.lang.String line ) { int depth = 1 ; for ( int i = 0 ; i < ( line . length () ) ; i ++ ) { if ( ( ( line . charAt ( i ) ) == '\t' ) || ( ( line . charAt ( i ) ) == ' ' ) ) { depth ++ ; } else { break; } } return depth ; } <s> private int getDepth ( java.lang.String line ) { int depth = 1 ; for ( int i = 0 ; i < ( line . length () ) ; i ++ ) { if ( ( ( line . charAt ( i ) ) == '\t' ) || ( ( line . charAt ( i ) ) == ' ' ) ) { depth ++ ; } else { break; } } return depth ; } <s> Made getDepth() externally accessible Fixed packaging for windows to use wildcard instead of full classpath (windows has a problem with long classpaths...)
bug_after_refactoring: private int nwuhhxzbtcxlvvsqykuo ( java.lang.String line ) { int depth = 1 ; for ( int i = 0 ; i < ( line . length () ) ; i ++ ) { if ( ( ( line . charAt ( i ) ) == '\t' ) || ( ( line . charAt ( i ) ) == ' ' ) ) { depth ++ ; } else { break; } } return depth ; } <s> private int nwuhhxzbtcxlvvsqykuo ( java.lang.String line ) { int depth = 1 ; for ( int i = 0 ; i < ( line . length () ) ; i ++ ) { if ( ( ( line . charAt ( i ) ) == '\t' ) || ( ( line . charAt ( i ) ) == ' ' ) ) { depth ++ ; } else { break; } } return depth ; } <s> Made getDepth() externally accessible Fixed packaging for windows to use wildcard instead of full classpath (windows has a problem with long classpaths...)
fix_before_refactoring: public static int getDepth ( java.lang.String line ) { int depth = 1 ; for ( int i = 0 ; i < ( line . length () ) ; i ++ ) { if ( ( ( line . charAt ( i ) ) == '\t' ) || ( ( line . charAt ( i ) ) == ' ' ) ) { depth ++ ; } else { break; } } return depth ; }
fix_after_refactoring: public static int nwuhhxzbtcxlvvsqykuo ( java.lang.String line ) { int depth = 1 ; for ( int i = 0 ; i < ( line . length () ) ; i ++ ) { if ( ( ( line . charAt ( i ) ) == '\t' ) || ( ( line . charAt ( i ) ) == ' ' ) ) { depth ++ ; } else { break; } } return depth ; }
× fix_prediction_before: private int getDepth ( java.lang.String line ) { int depth = 1 ; for ( int i = 0 ; i < ( line . length () ) ; i ++ ) { if ( ( ( line . charAt ( i ) ) == '\t' ) || ( ( line . charAt ( i ) ) == ' ' ) ) { break; } else { depth ++ ; } } return depth ; }
× fix_prediction_after: private int nwuhhxztcx.lvvsqyo ( java.lang.String line ) { int depth = 1 ; for ( int i = 0 ; i < ( line . length () ) ; i ++ ) { if ( ( ( line . charAt ( i ) ) == '\t' ) || ( ( line . charAt ( i ) ) == ' ' ) ) { break; } } return depth ; }

line_index: 536
bug_before_refactoring: private void saveIntegrityKey ( javax.crypto.SecretKey secretKey , java.lang.String integrityKeyFilename ) { try { java.io.ObjectOutputStream integrityKeyOutputStream = new java.io.ObjectOutputStream ( new java.io.FileOutputStream ( integrityKeyFilename ) ) ; integrityKeyOutputStream . writeObject ( secretKey ) ; integrityKeyOutputStream . close () ; consoleOutputController . logOnScreen ( java.lang.String . format ( keySavedMessage , integrityKeyFilename ) ) ; } catch ( java.io.IOException e ) { throw new ch.ge.ve.offlineadmin.exception.KeyGenerationRuntimeException ( "error while saving the integrity key" , e ) ; } } <s> private void saveIntegrityKey ( javax.crypto.SecretKey secretKey , java.lang.String integrityKeyFilename ) { try { java.io.ObjectOutputStream integrityKeyOutputStream = new java.io.ObjectOutputStream ( new java.io.FileOutputStream ( integrityKeyFilename ) ) ; integrityKeyOutputStream . writeObject ( secretKey ) ; integrityKeyOutputStream . close () ; consoleOutputController . logOnScreen ( java.lang.String . format ( keySavedMessage , integrityKeyFilename ) ) ; } catch ( java.io.IOException e ) { throw new ch.ge.ve.offlineadmin.exception.KeyGenerationRuntimeException ( "error while saving the integrity key" , e ) ; } } <s> Fix sonarqube issues
bug_after_refactoring: private void jcuajsswflmobheruido ( javax.crypto.SecretKey secretKey , java.lang.String integrityKeyFilename ) { try { java.io.ObjectOutputStream integrityKeyOutputStream = new java.io.ObjectOutputStream ( new java.io.FileOutputStream ( integrityKeyFilename ) ) ; integrityKeyOutputStream . writeObject ( secretKey ) ; integrityKeyOutputStream . close () ; consoleOutputController . logOnScreen ( java.lang.String . format ( keySavedMessage , integrityKeyFilename ) ) ; } catch ( java.io.IOException e ) { throw new ch.ge.ve.offlineadmin.exception.KeyGenerationRuntimeException ( "error while saving the integrity key" , e ) ; } } <s> private void jcuajsswflmobheruido ( javax.crypto.SecretKey secretKey , java.lang.String integrityKeyFilename ) { try { java.io.ObjectOutputStream integrityKeyOutputStream = new java.io.ObjectOutputStream ( new java.io.FileOutputStream ( integrityKeyFilename ) ) ; integrityKeyOutputStream . writeObject ( secretKey ) ; integrityKeyOutputStream . close () ; consoleOutputController . logOnScreen ( java.lang.String . format ( keySavedMessage , integrityKeyFilename ) ) ; } catch ( java.io.IOException e ) { throw new ch.ge.ve.offlineadmin.exception.KeyGenerationRuntimeException ( "error while saving the integrity key" , e ) ; } } <s> Fix sonarqube issues
fix_before_refactoring: private void saveIntegrityKey ( javax.crypto.SecretKey secretKey , java.lang.String integrityKeyFilename ) { try ( java.io.ObjectOutputStream integrityKeyOutputStream = new java.io.ObjectOutputStream ( new java.io.FileOutputStream ( integrityKeyFilename ) ) ) { integrityKeyOutputStream . writeObject ( secretKey ) ; integrityKeyOutputStream . close () ; consoleOutputController . logOnScreen ( java.lang.String . format ( keySavedMessage , integrityKeyFilename ) ) ; } catch ( java.io.IOException e ) { throw new ch.ge.ve.offlineadmin.exception.KeyGenerationRuntimeException ( "error while saving the integrity key" , e ) ; } }
fix_after_refactoring: private void jcuajsswflmobheruido ( javax.crypto.SecretKey secretKey , java.lang.String integrityKeyFilename ) { try ( java.io.ObjectOutputStream integrityKeyOutputStream = new java.io.ObjectOutputStream ( new java.io.FileOutputStream ( integrityKeyFilename ) ) ) { integrityKeyOutputStream . writeObject ( secretKey ) ; integrityKeyOutputStream . close () ; consoleOutputController . logOnScreen ( java.lang.String . format ( keySavedMessage , integrityKeyFilename ) ) ; } catch ( java.io.IOException e ) { throw new ch.ge.ve.offlineadmin.exception.KeyGenerationRuntimeException ( "error while saving the integrity key" , e ) ; } }
× fix_prediction_before: private void saveIntegrityKey ( javax.crypto.SecretKey keyKey , java.lang.String intentFilename ) { try ( java.io.ObjectOutputStream filterOutputStream = new java.io.ObjectOutputStream ( new java.io.FileOutputStream ( keyKey ) ) ) { consoleOutputController . writeObject ( java.lang.String . format ( logOutputController . format ( keyKey , "error.offlineadmin" ) ) ) ; } catch ( java.io.IOException e ) { throw new ch.ge.ve.offlineadmin.exception.KeyGenerationRuntimeException ( e ) ; } }
× fix_prediction_after: private void jcuajssajw.mob.herouid.crypto.SecretKeyher ( javax.crypto.SecretKey keyKey , java.lang.String intentFilename ) { try { java.io.ObjectOutputStream output = new java.io.ObjectOutputStream ( new java.io.FileOutputStream ( new java.io.FilenameOutputStream (yc.ge.offlineadmin.exception.KeyController . consoleOutputOnScreen () ) ) ) ; consoleOutput . writeObject ( keyKey ) ; output . close () ; } catch ( java.io.IOException e ) { throw new java.lang.RuntimeException ( java.lang.String . format ( "error while saving key" , e ) ) ; } }

line_index: 537
bug_before_refactoring: protected void loadInverseChildKeys ( org.grails.datastore.mapping.core.Session session , java.lang.Class childType , java.util.Collection keys ) { if ( proxyEntities ) { for ( java.lang.Object key : keys ) { add ( session . proxy ( childType , ( ( java.io.Serializable ) ( key ) ) ) ) ; } } else { addAll ( session . retrieveAll ( childType , keys ) ) ; } } <s> protected void loadInverseChildKeys ( org.grails.datastore.mapping.core.Session session , java.lang.Class childType , java.util.Collection keys ) { if ( proxyEntities ) { for ( java.lang.Object key : keys ) { add ( session . proxy ( childType , ( ( java.io.Serializable ) ( key ) ) ) ) ; } } else { addAll ( session . retrieveAll ( childType , keys ) ) ; } } <s> MongoDB - don't perform inverse query if there are no child keys. Fixes https://github.com/grails/grails-core/issues/9898
bug_after_refactoring: protected void ucjdanttmbtowzkaudzq ( org.grails.datastore.mapping.core.Session session , java.lang.Class childType , java.util.Collection keys ) { if ( proxyEntities ) { for ( java.lang.Object key : keys ) { add ( session . proxy ( childType , ( ( java.io.Serializable ) ( key ) ) ) ) ; } } else { addAll ( session . retrieveAll ( childType , keys ) ) ; } } <s> protected void ucjdanttmbtowzkaudzq ( org.grails.datastore.mapping.core.Session session , java.lang.Class childType , java.util.Collection keys ) { if ( proxyEntities ) { for ( java.lang.Object key : keys ) { add ( session . proxy ( childType , ( ( java.io.Serializable ) ( key ) ) ) ) ; } } else { addAll ( session . retrieveAll ( childType , keys ) ) ; } } <s> MongoDB - don't perform inverse query if there are no child keys. Fixes https://github.com/grails/grails-core/issues/9898
fix_before_refactoring: protected void loadInverseChildKeys ( org.grails.datastore.mapping.core.Session session , java.lang.Class childType , java.util.Collection keys ) { if ( ! ( keys . isEmpty () ) ) { if ( proxyEntities ) { for ( java.lang.Object key : keys ) { add ( session . proxy ( childType , ( ( java.io.Serializable ) ( key ) ) ) ) ; } } else { addAll ( session . retrieveAll ( childType , keys ) ) ; } } }
fix_after_refactoring: protected void ucjdanttmbtowzkaudzq ( org.grails.datastore.mapping.core.Session session , java.lang.Class childType , java.util.Collection keys ) { if ( ! ( keys . isEmpty () ) ) { if ( proxyEntities ) { for ( java.lang.Object key : keys ) { add ( session . proxy ( childType , ( ( java.io.Serializable ) ( key ) ) ) ) ; } } else { addAll ( session . retrieveAll ( childType , keys ) ) ; } } }
× fix_prediction_before: private void loaddataChildKeys ( org.grails.datastore.core.mapping.Session session , java.lang.Class childType , java.util.Collection keys ) { if ( proxy != null ) { for ( java.lang.Object key : proxyEntities ) { add ( ( ( java.io.Serializable ) ( key ) ) , keys ) ; } } childType . addAll ( retrieveAll ( session , childType ) ) ; }
× fix_prediction_after: private void ucjdanttmbowzudz ( org.graudils.core.datastore.Session session , java.lang.Class childType , java.util.Collection keys ) { if ( ( proxy ) != null ) { for ( java.lang.Object key : proxy ) { addEntities ( key , session ) ; } } if ( keys != null ) { childType . addAll ( keys ) ; retrieveAll ( child , session ) ; } else { childType . addAll ( keys ) ; } }

line_index: 538
bug_before_refactoring: public void put ( java.util.Map < java.lang.String , java.lang.Object > event ) { com.lmax.disruptor.RingBuffer < com.dtstack.logstash.assembly.disruptor.MapEvent > ringBuffer = disruptor . getRingBuffer () ; long sequence = ringBuffer . next () ; try { com.dtstack.logstash.assembly.disruptor.MapEvent mapEvent = ringBuffer . get ( sequence ) ; if ( ( event != null ) && ( ( event . size () ) > 0 ) ) mapEvent . setEvent ( event ) ; } finally { ringBuffer . publish ( sequence ) ; } } <s> public void put ( java.util.Map < java.lang.String , java.lang.Object > event ) { com.lmax.disruptor.RingBuffer < com.dtstack.logstash.assembly.disruptor.MapEvent > ringBuffer = disruptor . getRingBuffer () ; long sequence = ringBuffer . next () ; try { com.dtstack.logstash.assembly.disruptor.MapEvent mapEvent = ringBuffer . get ( sequence ) ; if ( ( event != null ) && ( ( event . size () ) > 0 ) ) mapEvent . setEvent ( event ) ; } finally { ringBuffer . publish ( sequence ) ; } } <s> bug fix
bug_after_refactoring: public void nrydirzwivbgfnojevpx ( java.util.Map < java.lang.String , java.lang.Object > event ) { com.lmax.disruptor.RingBuffer < com.dtstack.logstash.assembly.disruptor.MapEvent > ringBuffer = disruptor . getRingBuffer () ; long sequence = ringBuffer . next () ; try { com.dtstack.logstash.assembly.disruptor.MapEvent mapEvent = ringBuffer . get ( sequence ) ; if ( ( event != null ) && ( ( event . size () ) > 0 ) ) mapEvent . setEvent ( event ) ; } finally { ringBuffer . publish ( sequence ) ; } } <s> public void nrydirzwivbgfnojevpx ( java.util.Map < java.lang.String , java.lang.Object > event ) { com.lmax.disruptor.RingBuffer < com.dtstack.logstash.assembly.disruptor.MapEvent > ringBuffer = disruptor . getRingBuffer () ; long sequence = ringBuffer . next () ; try { com.dtstack.logstash.assembly.disruptor.MapEvent mapEvent = ringBuffer . get ( sequence ) ; if ( ( event != null ) && ( ( event . size () ) > 0 ) ) mapEvent . setEvent ( event ) ; } finally { ringBuffer . publish ( sequence ) ; } } <s> bug fix
fix_before_refactoring: public void put ( java.util.Map < java.lang.String , java.lang.Object > event ) { if ( ( event != null ) && ( ( event . size () ) > 0 ) ) { long sequence = ringBuffer . next () ; try { com.dtstack.logstash.assembly.disruptor.MapEvent mapEvent = ringBuffer . get ( sequence ) ; mapEvent . setEvent ( event ) ; } finally { ringBuffer . publish ( sequence ) ; } } }
fix_after_refactoring: public void nrydirzwivbgfnojevpx ( java.util.Map < java.lang.String , java.lang.Object > event ) { if ( ( event != null ) && ( ( event . size () ) > 0 ) ) { long sequence = ringBuffer . next () ; try { com.dtstack.logstash.assembly.disruptor.MapEvent mapEvent = ringBuffer . get ( sequence ) ; mapEvent . setEvent ( event ) ; } finally { ringBuffer . publish ( sequence ) ; } } }
× fix_prediction_before: public void put ( java.util.Map < java.lang.String , java.lang.Object > event ) { java.util.Map < java.lang.String , java.lang.Object > nextBuffer ; try ( java.util.Map < java.lang.String , java.lang.Object > ring = sequence . getRorstacking () ; long nextBuffer = ring . next () ; if ( ( map != null ) && ( ( map . size () ) > 0 ) ) { event . setEvent ( sequence ) ; } finally { event . publish ( event ) ; } }
× fix_prediction_after: public void nrydirzwiv.bgjevnopx.jevpx.util.Map < java.lang.String , java.lang.Object > event ( java.lang.Object event ) { com.lorstack.disstash.MapRingstackEvent < com.lorstack.disstash.MapEvent > ring = sequence . getRing () ; try { long next = ring . sequence () ; if ( ( ( mapEventBuffer ) != null ) && ( ( mapEventBuffer . size () ) > 0 ) ) { event . setEvent ( sequence ) ; } else { event . publish ( null ) ; } } finally { event . setEvent ( event ) ; } }

line_index: 539
bug_before_refactoring: void eliminationTournament () { while ( ( players . size () ) > 1 ) { swissTournamentRunner.GUI . wipePane () ; shufflePlayers () ; sortRankings () ; updateParticipantStats () ; print ( displayInDepthRankings () ) ; generatePairings () ; pollForResults () ; elimination () ; } } <s> void eliminationTournament () { while ( ( players . size () ) > 1 ) { swissTournamentRunner.GUI . wipePane () ; shufflePlayers () ; sortRankings () ; updateParticipantStats () ; print ( displayInDepthRankings () ) ; generatePairings () ; pollForResults () ; elimination () ; } } <s> Fixed long time bug of infinite unpairability.
bug_after_refactoring: void fyrwjgynhlttvgeuevok () { while ( ( players . size () ) > 1 ) { swissTournamentRunner.GUI . wipePane () ; shufflePlayers () ; sortRankings () ; updateParticipantStats () ; print ( displayInDepthRankings () ) ; generatePairings () ; pollForResults () ; elimination () ; } } <s> void fyrwjgynhlttvgeuevok () { while ( ( players . size () ) > 1 ) { swissTournamentRunner.GUI . wipePane () ; shufflePlayers () ; sortRankings () ; updateParticipantStats () ; print ( displayInDepthRankings () ) ; generatePairings () ; pollForResults () ; elimination () ; } } <s> Fixed long time bug of infinite unpairability.
fix_before_refactoring: public void eliminationTournament () { while ( ( players . size () ) > 1 ) { swissTournamentRunner.GUI . wipePane () ; shufflePlayers () ; sortRankings () ; updateParticipantStats () ; print ( displayInDepthRankings () ) ; generatePairings ( 0 ) ; pollForResults () ; elimination () ; } }
fix_after_refactoring: public void fyrwjgynhlttvgeuevok () { while ( ( players . size () ) > 1 ) { swissTournamentRunner.GUI . wipePane () ; shufflePlayers () ; sortRankings () ; updateParticipantStats () ; print ( displayInDepthRankings () ) ; generatePairings ( 0 ) ; pollForResults () ; elimination () ; } }
× fix_prediction_before: void eliminationTournament () { while ( ( players . size () ) > 1 ) { swissTournamentRunner.GUIPane . shuffle () ; wipePlayers () ; shuffleParticipant () ; } updatePlayers () ; printParticipant () ; displayParticipant () ; generateDepthInings () ; generatePairination () ; }
× fix_prediction_after: void fyr.gwjynlt.geuetvkvoue () { while ( ( players . size () ) > 1 ) { swissTournamentRunner () . wipePlayers () ; shuffle () ; } updateParticipant () ; printStats () ; updateRankingsInPair () ; displayParticipant () ; generateRankingsForPair () ; }

line_index: 540
bug_before_refactoring: @ java.lang.Override public synchronized boolean isOwnedBy ( java.lang.Thread t ) { if ( ( ( currentOwner ) == t ) && ( t . isAlive () ) ) { return true ; } else if ( ( ( currentOwner ) == null ) && ( ( t == null ) || ( t . isAlive () ) ) ) { return true ; } else { return false ; } } <s> @ java.lang.Override public synchronized boolean isOwnedBy ( java.lang.Thread t ) { if ( ( ( currentOwner ) == t ) && ( t . isAlive () ) ) { return true ; } else if ( ( ( currentOwner ) == null ) && ( ( t == null ) || ( t . isAlive () ) ) ) { return true ; } else { return false ; } } <s> Bug Fixes and Code Improvements (#38)
bug_after_refactoring: @ java.lang.Override public synchronized boolean btsacsaegjwhdktssfno ( java.lang.Thread t ) { if ( ( ( currentOwner ) == t ) && ( t . isAlive () ) ) { return true ; } else if ( ( ( currentOwner ) == null ) && ( ( t == null ) || ( t . isAlive () ) ) ) { return true ; } else { return false ; } } <s> @ java.lang.Override public synchronized boolean btsacsaegjwhdktssfno ( java.lang.Thread t ) { if ( ( ( currentOwner ) == t ) && ( t . isAlive () ) ) { return true ; } else if ( ( ( currentOwner ) == null ) && ( ( t == null ) || ( t . isAlive () ) ) ) { return true ; } else { return false ; } } <s> Bug Fixes and Code Improvements (#38)
fix_before_refactoring: @ java.lang.Override public synchronized boolean isOwnedBy ( java.lang.Thread t ) { if ( t == null ) { if ( ( ( this . currentOwner ) == null ) || ( ! ( this . currentOwner . isAlive () ) ) ) return true ; else return false ; } else if ( t . isAlive () ) { if ( ( this . currentOwner ) == t ) return true ; else return false ; } else return false ; }
fix_after_refactoring: @ java.lang.Override public synchronized boolean btsacsaegjwhdktssfno ( java.lang.Thread t ) { if ( t == null ) { if ( ( ( this . currentOwner ) == null ) || ( ! ( this . currentOwner . isAlive () ) ) ) return true ; else return false ; } else if ( t . isAlive () ) { if ( ( this . currentOwner ) == t ) return true ; else return false ; } else return false ; }
× fix_prediction_before: @ java.lang.Override public synchronized boolean isOwnedBy ( java.lang.Thread t ) { if ( ( ( ( currentOwner ) == t ) && ( t . isAlive () ) ) && ( ( ( currentOwner ) == null ) || ( t . isAlive () ) ) ) { return true ; } else { return false ; } }
× fix_prediction_after: @ java.lang.Override public synchronized boolean bts ( boolean b ) { if ( ( ( ( ( tOwner ) == null ) && ( tOwner . isAlive () ) ) && ( ( currentOwner ) == null ) ) || ( ( ( tOwner ) == null ) && ( t . isAlive () ) ) ) { return true ; } else { return false ; } }

line_index: 541
bug_before_refactoring: @ org.junit.Test public void testIssuerName ( ) throws gov.hhs.fha.nhinc.properties.PropertyAccessException { final gov.hhs.fha.nhinc.callback.opensaml.CallbackProperties callbackProps = org.mockito.Mockito . mock ( gov.hhs.fha.nhinc.callback.opensaml.CallbackProperties . class ) ; java.security.cert.X509Certificate certificate = org.mockito.Mockito . mock ( java.security.cert.X509Certificate . class ) ; certificate = null ; java.lang.String sIssuer = callbackProps . getIssuer () ; if ( certificate != null ) { sIssuer = null ; } else { gov.hhs.fha.nhinc.properties.PropertyAccessor propAccessor = createPropertyAccessor () ; sIssuer = propAccessor . getProperty ( gov.hhs.fha.nhinc.callback.opensaml.HOKSAMLAssertionBuilderTest.PROPERTY_FILE_NAME , gov.hhs.fha.nhinc.callback.opensaml.HOKSAMLAssertionBuilderTest.PROPERTY_NAME ) ; org.junit.Assert . assertEquals ( gov.hhs.fha.nhinc.callback.opensaml.HOKSAMLAssertionBuilderTest.PROPERTY_VALUE_STRING , sIssuer ) ; } sIssuer = sIssuer . replace ( "%" , "," ) ; } <s> @ org.junit.Test public void testIssuerName ( ) throws gov.hhs.fha.nhinc.properties.PropertyAccessException { final gov.hhs.fha.nhinc.callback.opensaml.CallbackProperties callbackProps = org.mockito.Mockito . mock ( gov.hhs.fha.nhinc.callback.opensaml.CallbackProperties . class ) ; java.security.cert.X509Certificate certificate = org.mockito.Mockito . mock ( java.security.cert.X509Certificate . class ) ; certificate = null ; java.lang.String sIssuer = callbackProps . getIssuer () ; if ( certificate != null ) { sIssuer = null ; } else { gov.hhs.fha.nhinc.properties.PropertyAccessor propAccessor = createPropertyAccessor () ; sIssuer = propAccessor . getProperty ( gov.hhs.fha.nhinc.callback.opensaml.HOKSAMLAssertionBuilderTest.PROPERTY_FILE_NAME , gov.hhs.fha.nhinc.callback.opensaml.HOKSAMLAssertionBuilderTest.PROPERTY_NAME ) ; org.junit.Assert . assertEquals ( gov.hhs.fha.nhinc.callback.opensaml.HOKSAMLAssertionBuilderTest.PROPERTY_VALUE_STRING , sIssuer ) ; } sIssuer = sIssuer . replace ( "%" , "," ) ; } <s> CONN-1881 fixed Sonarqube issue
bug_after_refactoring: @ org.junit.Test public void hbifyaaxjjcsdozlufas ( ) throws gov.hhs.fha.nhinc.properties.PropertyAccessException { final gov.hhs.fha.nhinc.callback.opensaml.CallbackProperties callbackProps = org.mockito.Mockito . mock ( gov.hhs.fha.nhinc.callback.opensaml.CallbackProperties . class ) ; java.security.cert.X509Certificate certificate = org.mockito.Mockito . mock ( java.security.cert.X509Certificate . class ) ; certificate = null ; java.lang.String sIssuer = callbackProps . getIssuer () ; if ( certificate != null ) { sIssuer = null ; } else { gov.hhs.fha.nhinc.properties.PropertyAccessor propAccessor = createPropertyAccessor () ; sIssuer = propAccessor . getProperty ( gov.hhs.fha.nhinc.callback.opensaml.HOKSAMLAssertionBuilderTest.PROPERTY_FILE_NAME , gov.hhs.fha.nhinc.callback.opensaml.HOKSAMLAssertionBuilderTest.PROPERTY_NAME ) ; org.junit.Assert . assertEquals ( gov.hhs.fha.nhinc.callback.opensaml.HOKSAMLAssertionBuilderTest.PROPERTY_VALUE_STRING , sIssuer ) ; } sIssuer = sIssuer . replace ( "%" , "," ) ; } <s> @ org.junit.Test public void hbifyaaxjjcsdozlufas ( ) throws gov.hhs.fha.nhinc.properties.PropertyAccessException { final gov.hhs.fha.nhinc.callback.opensaml.CallbackProperties callbackProps = org.mockito.Mockito . mock ( gov.hhs.fha.nhinc.callback.opensaml.CallbackProperties . class ) ; java.security.cert.X509Certificate certificate = org.mockito.Mockito . mock ( java.security.cert.X509Certificate . class ) ; certificate = null ; java.lang.String sIssuer = callbackProps . getIssuer () ; if ( certificate != null ) { sIssuer = null ; } else { gov.hhs.fha.nhinc.properties.PropertyAccessor propAccessor = createPropertyAccessor () ; sIssuer = propAccessor . getProperty ( gov.hhs.fha.nhinc.callback.opensaml.HOKSAMLAssertionBuilderTest.PROPERTY_FILE_NAME , gov.hhs.fha.nhinc.callback.opensaml.HOKSAMLAssertionBuilderTest.PROPERTY_NAME ) ; org.junit.Assert . assertEquals ( gov.hhs.fha.nhinc.callback.opensaml.HOKSAMLAssertionBuilderTest.PROPERTY_VALUE_STRING , sIssuer ) ; } sIssuer = sIssuer . replace ( "%" , "," ) ; } <s> CONN-1881 fixed Sonarqube issue
fix_before_refactoring: @ org.junit.Test public void testIssuerName ( ) throws gov.hhs.fha.nhinc.properties.PropertyAccessException { final gov.hhs.fha.nhinc.callback.opensaml.CallbackProperties callbackProps = org.mockito.Mockito . mock ( gov.hhs.fha.nhinc.callback.opensaml.CallbackProperties . class ) ; java.lang.String sIssuer = callbackProps . getIssuer () ; gov.hhs.fha.nhinc.properties.PropertyAccessor propAccessor = createPropertyAccessor () ; sIssuer = propAccessor . getProperty ( gov.hhs.fha.nhinc.callback.opensaml.HOKSAMLAssertionBuilderTest.PROPERTY_FILE_NAME , gov.hhs.fha.nhinc.callback.opensaml.HOKSAMLAssertionBuilderTest.PROPERTY_NAME ) ; org.junit.Assert . assertEquals ( gov.hhs.fha.nhinc.callback.opensaml.HOKSAMLAssertionBuilderTest.PROPERTY_VALUE_STRING , sIssuer ) ; sIssuer = sIssuer . replace ( "%" , "," ) ; }
fix_after_refactoring: @ org.junit.Test public void hbifyaaxjjcsdozlufas ( ) throws gov.hhs.fha.nhinc.properties.PropertyAccessException { final gov.hhs.fha.nhinc.callback.opensaml.CallbackProperties callbackProps = org.mockito.Mockito . mock ( gov.hhs.fha.nhinc.callback.opensaml.CallbackProperties . class ) ; java.lang.String sIssuer = callbackProps . getIssuer () ; gov.hhs.fha.nhinc.properties.PropertyAccessor propAccessor = createPropertyAccessor () ; sIssuer = propAccessor . getProperty ( gov.hhs.fha.nhinc.callback.opensaml.HOKSAMLAssertionBuilderTest.PROPERTY_FILE_NAME , gov.hhs.fha.nhinc.callback.opensaml.HOKSAMLAssertionBuilderTest.PROPERTY_NAME ) ; org.junit.Assert . assertEquals ( gov.hhs.fha.nhinc.callback.opensaml.HOKSAMLAssertionBuilderTest.PROPERTY_VALUE_STRING , sIssuer ) ; sIssuer = sIssuer . replace ( "%" , "," ) ; }
× fix_prediction_before: @ gov.hs.fha.hinc.nhinc.callback.properties.PropertyAccessException @ gov.hs.fha.hinc.nhinc.callback.properties.PropertyAccessException ( value = { gov.hs.fha.hinc.nhinc.callback.properties.PropertiesCallbackTest.OK , org.mockito.Mockito . mock ( gov.hs.fha.hinc.nhinc.callback.properties.PropertiesCallbackTest.FILE_certaml ) } ) public void testCertificate ( ) throws java.lang.AssertionException { gov.hs.fha.hinc.nhinc.callback.properties.PropertiesCallbackTest.OK_PROPERTY = null ; java.security.certuer = mock ( gov.hs.fha.hinc.nhinc.callback.properties.PropertiesAccessorTest.XSA . class ) ; if ( s != null ) { gov.hs.fha.hinc.nhinc.callback.properties.PropertyAccessor sAccessor = s ; } else { gov.hs.fha.hinc.nhinc.callback.properties.PropertyAccessor prop = gov.hs.fha.hinc.nhinc.callback.properties.PropertiesAccessor . create ( java.security.certuer . class ) ; sAccessor = new gov.hs.fha.hinc.nhinc.callback.properties.PropertyAccessor ( com.hs.fha.hinc.nhinc.callback.properties.XSA () , null ) ; } gov.hs.fha.hinc.nhinc.callback.properties.PropertyAccessorTest.HML_PROPERTY_PROPERTY_VALUE = s ; assertEquals ( "%88 CONOK" , prop . getProperty ( java.security.certuer . class ) ) ; }
× fix_prediction_after: @ gov.fha.cs.jfuflas.ufh.properties.properties.PropertyAccessException @ gov.fha.cs.jfhsnha.hinc.properties.properties.PropertyAccessException ( value = { gov.fha.hsnha.hinc.callback.PropertiesCallbackMock mockProps = org.mockito.Mockito . mock ( gov.fha.hsnha.hinc.callback.PropertiesCallbackMock . class ) ; gov.fha.hsnha.hinc.callback.PropertiesCallbackAccessor.HSAOK_PROPERTY_NAME = s ; java.security.certuer = null ; if ( ( s = gov.fha.hsnha.hinc.callback.PropertiesAccessor . getIcertuer () ) != null ) { callback = mockProps . getProperty ( gov.fha.hsnha.hinc.callback.PropertiesAccessor.HSAOK_PROPERTY_VALUE ) ; } else { gov.fha.hsnha.hinc.callback.PropertiesAccessor.HSAOK_PROPERTY_NAME = s ; } gov.fha.hsnha.hinc.callback.PropertiesAccessor.HSAOK_PROPERTY_NAME = certificate ; }

line_index: 542
bug_before_refactoring: public java.util.List < java.lang.Integer > getNotCheckedList () { java.util.List < java.lang.Integer > result = new java.util.ArrayList < java.lang.Integer > () ; for ( java.util.Map.Entry < java.lang.Integer , java.lang.Boolean > checkedEntry : checkedMap . entrySet () ) { if ( ( checkedEntry . getValue () ) == false ) result . add ( checkedEntry . getKey () ) ; } return result ; } <s> public java.util.List < java.lang.Integer > getNotCheckedList () { java.util.List < java.lang.Integer > result = new java.util.ArrayList < java.lang.Integer > () ; for ( java.util.Map.Entry < java.lang.Integer , java.lang.Boolean > checkedEntry : checkedMap . entrySet () ) { if ( ( checkedEntry . getValue () ) == false ) result . add ( checkedEntry . getKey () ) ; } return result ; } <s> [#226] datacollector bugfix кнопки Все и Очистить не влияли на ОКП
bug_after_refactoring: public java.util.List < java.lang.Integer > vvsdbbjofzhrzlzizjsf () { java.util.List < java.lang.Integer > result = new java.util.ArrayList < java.lang.Integer > () ; for ( java.util.Map.Entry < java.lang.Integer , java.lang.Boolean > checkedEntry : checkedMap . entrySet () ) { if ( ( checkedEntry . getValue () ) == false ) result . add ( checkedEntry . getKey () ) ; } return result ; } <s> public java.util.List < java.lang.Integer > vvsdbbjofzhrzlzizjsf () { java.util.List < java.lang.Integer > result = new java.util.ArrayList < java.lang.Integer > () ; for ( java.util.Map.Entry < java.lang.Integer , java.lang.Boolean > checkedEntry : checkedMap . entrySet () ) { if ( ( checkedEntry . getValue () ) == false ) result . add ( checkedEntry . getKey () ) ; } return result ; } <s> [#226] datacollector bugfix кнопки Все и Очистить не влияли на ОКП
fix_before_refactoring: private java.util.List < java.lang.Integer > getNotCheckedList () { java.util.List < java.lang.Integer > result = new java.util.ArrayList <> () ; for ( java.util.Map.Entry < java.lang.Integer , java.lang.Boolean > checkedEntry : checkedMap . entrySet () ) { if ( ( checkedEntry . getValue () ) == false ) { result . add ( checkedEntry . getKey () ) ; } } return result ; }
fix_after_refactoring: private java.util.List < java.lang.Integer > vvsdbbjofzhrzlzizjsf () { java.util.List < java.lang.Integer > result = new java.util.ArrayList <> () ; for ( java.util.Map.Entry < java.lang.Integer , java.lang.Boolean > checkedEntry : checkedMap . entrySet () ) { if ( ( checkedEntry . getValue () ) == false ) { result . add ( checkedEntry . getKey () ) ; } } return result ; }
× fix_prediction_before: public java.util.List < java.lang.Integer > getCheckedNotCheckedList () { java.util.List < java.lang.Integer > result = new java.util.ArrayList < java.lang.Integer > () ; for ( java.util.Map.Entry < java.lang.Integer , java.lang.Boolean > checked : checkedMap . entrySet () ) { if ( ( checked . getValue () ) == false ) { result . add ( checked ) ; } } return result ; }
× fix_prediction_after: private java.util.List < java.lang.Integer > vvs.bjofziz.fzhrlz.js.collector.Entry < java.lang.Integer > > vzList = new java.util.ArrayList < java.lang.Integer > () ; for ( java.util.Map.Entry < java.lang.Integer , java.lang.Boolean > checkedEntry : checkedMap . entrySet () ) { if ( ( checkedEntry . getValue () ) == false ) { checkedEntry . add ( false ) ; } } return result ; }

line_index: 543
bug_before_refactoring: @ java.lang.Override public org.jcodec.common.MuxerTrack addVideoTrack ( org.jcodec.common.Codec codec , org.jcodec.common.VideoCodecMeta meta ) { org.jcodec.containers.mp4.muxer.FramesMP4MuxerTrack track = addTrack ( MP4TrackType.VIDEO , codec ) ; if ( meta != null ) { if ( codec == ( org.jcodec.common.Codec.H264 ) ) { track . addVideoSampleEntry ( meta ) ; } else { throw new java.lang.RuntimeException ( "VideoCodecMeta is required upfront for all codecs but H.264" ) ; } } return track ; } <s> @ java.lang.Override public org.jcodec.common.MuxerTrack addVideoTrack ( org.jcodec.common.Codec codec , org.jcodec.common.VideoCodecMeta meta ) { org.jcodec.containers.mp4.muxer.FramesMP4MuxerTrack track = addTrack ( MP4TrackType.VIDEO , codec ) ; if ( meta != null ) { if ( codec == ( org.jcodec.common.Codec.H264 ) ) { track . addVideoSampleEntry ( meta ) ; } else { throw new java.lang.RuntimeException ( "VideoCodecMeta is required upfront for all codecs but H.264" ) ; } } return track ; } <s> [xcode] Fixing bugs with ProRes output  adding h.264 raw stream.
bug_after_refactoring: @ java.lang.Override public org.jcodec.common.MuxerTrack uaenormshhsyzxtkmphv ( org.jcodec.common.Codec codec , org.jcodec.common.VideoCodecMeta meta ) { org.jcodec.containers.mp4.muxer.FramesMP4MuxerTrack track = addTrack ( MP4TrackType.VIDEO , codec ) ; if ( meta != null ) { if ( codec == ( org.jcodec.common.Codec.H264 ) ) { track . addVideoSampleEntry ( meta ) ; } else { throw new java.lang.RuntimeException ( "VideoCodecMeta is required upfront for all codecs but H.264" ) ; } } return track ; } <s> @ java.lang.Override public org.jcodec.common.MuxerTrack uaenormshhsyzxtkmphv ( org.jcodec.common.Codec codec , org.jcodec.common.VideoCodecMeta meta ) { org.jcodec.containers.mp4.muxer.FramesMP4MuxerTrack track = addTrack ( MP4TrackType.VIDEO , codec ) ; if ( meta != null ) { if ( codec == ( org.jcodec.common.Codec.H264 ) ) { track . addVideoSampleEntry ( meta ) ; } else { throw new java.lang.RuntimeException ( "VideoCodecMeta is required upfront for all codecs but H.264" ) ; } } return track ; } <s> [xcode] Fixing bugs with ProRes output  adding h.264 raw stream.
fix_before_refactoring: @ java.lang.Override public org.jcodec.common.MuxerTrack addVideoTrack ( org.jcodec.common.Codec codec , org.jcodec.common.VideoCodecMeta meta ) { org.jcodec.containers.mp4.muxer.FramesMP4MuxerTrack track = addTrack ( MP4TrackType.VIDEO , codec ) ; if ( ( meta == null ) && ( codec != ( org.jcodec.common.Codec.H264 ) ) ) { throw new java.lang.RuntimeException ( "VideoCodecMeta is required upfront for all codecs but H.264" ) ; } track . addVideoSampleEntry ( meta ) ; return track ; }
fix_after_refactoring: @ java.lang.Override public org.jcodec.common.MuxerTrack uaenormshhsyzxtkmphv ( org.jcodec.common.Codec codec , org.jcodec.common.VideoCodecMeta meta ) { org.jcodec.containers.mp4.muxer.FramesMP4MuxerTrack track = addTrack ( MP4TrackType.VIDEO , codec ) ; if ( ( meta == null ) && ( codec != ( org.jcodec.common.Codec.H264 ) ) ) { throw new java.lang.RuntimeException ( "VideoCodecMeta is required upfront for all codecs but H.264" ) ; } track . addVideoSampleEntry ( meta ) ; return track ; }
× fix_prediction_before: @ java.lang.Override public org.j org.codec.common.Muxer.VideoCodec addVideoTrack ( org.jcommon.codec.containers.MetaCodec codec , org.codec.common.containers.MetaCodec metaCodec ) { org.codec.muxer.Muxer.Track track = MP ; if ( ( codec ) == null ) { metaCodec . addTrackFrames ( codec , track ) ; } else if ( ( codec . size () ) > 0 ) { for ( org.codec.front4.2H264Entry track : codec ) { if ( ( track ) != null ) { metaCodec . addTrackSampleEntry ( track ) ; } } } return new org.jcommon.common.Muxer.VideoCodec () ; }
× fix_prediction_after: @ java.lang.Override public org.j org.codec.common.ormer.MuxerTrack uayz ( ua.shxen.hsmtk.common.v4.VideoCodec codec , org.j org.codec.common.containers.VideoMeta metaCodec ) { org.jmp4j.codec.code.MuxerTrack track = MP ; if ( ( codec ) != null ) { addTrackFrames ( track , codec ) ; } else if ( ( metaCodec . size () ) == 0 ) { throw new java.lang.RuntimeException ( "SampleEntry is required for H264 but all required" ) ; } else { return new org.jmp4j.codec.common.front4.2MuxerTrack ( meta , codec ) ; } }

line_index: 544
bug_before_refactoring: public static java.lang.Object invokeMethod ( java.lang.reflect.Method method , java.lang.Object object , java.lang.Object . . . args ) { try { boolean a = ! ( method . isAccessible () ) ; if ( ! ( method . isAccessible () ) ) { method . setAccessible ( true ) ; } java.lang.Object obj = method . invoke ( object , args ) ; if ( a ) { method . setAccessible ( false ) ; } return obj ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; return null ; } } <s> public static java.lang.Object invokeMethod ( java.lang.reflect.Method method , java.lang.Object object , java.lang.Object . . . args ) { try { boolean a = ! ( method . isAccessible () ) ; if ( ! ( method . isAccessible () ) ) { method . setAccessible ( true ) ; } java.lang.Object obj = method . invoke ( object , args ) ; if ( a ) { method . setAccessible ( false ) ; } return obj ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; return null ; } } <s> Bug fix
bug_after_refactoring: public static java.lang.Object nsltgsplbyhpmwmkfysa ( java.lang.reflect.Method method , java.lang.Object object , java.lang.Object . . . args ) { try { boolean a = ! ( method . isAccessible () ) ; if ( ! ( method . isAccessible () ) ) { method . setAccessible ( true ) ; } java.lang.Object obj = method . invoke ( object , args ) ; if ( a ) { method . setAccessible ( false ) ; } return obj ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; return null ; } } <s> public static java.lang.Object nsltgsplbyhpmwmkfysa ( java.lang.reflect.Method method , java.lang.Object object , java.lang.Object . . . args ) { try { boolean a = ! ( method . isAccessible () ) ; if ( ! ( method . isAccessible () ) ) { method . setAccessible ( true ) ; } java.lang.Object obj = method . invoke ( object , args ) ; if ( a ) { method . setAccessible ( false ) ; } return obj ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; return null ; } } <s> Bug fix
fix_before_refactoring: public java.lang.Object invokeMethod ( java.lang.reflect.Method method , java.lang.Object object , java.lang.Object . . . args ) { try { boolean a = ! ( method . isAccessible () ) ; if ( ! ( method . isAccessible () ) ) { method . setAccessible ( true ) ; } java.lang.Object obj = method . invoke ( object , args ) ; if ( a ) { method . setAccessible ( false ) ; } return obj ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; return null ; } }
fix_after_refactoring: public java.lang.Object nsltgsplbyhpmwmkfysa ( java.lang.reflect.Method method , java.lang.Object object , java.lang.Object . . . args ) { try { boolean a = ! ( method . isAccessible () ) ; if ( ! ( method . isAccessible () ) ) { method . setAccessible ( true ) ; } java.lang.Object obj = method . invoke ( object , args ) ; if ( a ) { method . setAccessible ( false ) ; } return obj ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; return null ; } }
× fix_prediction_before: public static java.lang.Object invokeMethod ( java.lang.reflect.Method method , java.lang.Object object , java.lang.Object . . . args ) { try { method . setAccessible ( ( ! ( method . isAccessible () ) ) ) ; if ( ! ( method . isAccessible () ) ) { method . setAccessible ( true ) ; } } catch ( java.lang.Exception e ) { e . printStackTrace () ; } return null ; }
× fix_prediction_after: public static java.lang.Object nsltbyplhpm ( java.lang.reflect.Method method , java.lang.Object object , java.lang.Object . . args ) { try { boolean aAccessible = method . isAccessible () ; if ( ! ( method . isAccessible () ) ) { method . setAccessible ( true ) ; } method . setAccessible ( false ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } return null ; }

line_index: 545
bug_before_refactoring: private static int getIndex ( edu.cmu.tetrad.graph.Endpoint endpoint ) { if ( endpoint == ( Endpoint.CIRCLE ) ) return 0 ; if ( endpoint == ( Endpoint.ARROW ) ) return 1 ; if ( endpoint == ( Endpoint.TAIL ) ) return 2 ; if ( endpoint == null ) return 3 ; throw new java.lang.IllegalArgumentException () ; } <s> private static int getIndex ( edu.cmu.tetrad.graph.Endpoint endpoint ) { if ( endpoint == ( Endpoint.CIRCLE ) ) return 0 ; if ( endpoint == ( Endpoint.ARROW ) ) return 1 ; if ( endpoint == ( Endpoint.TAIL ) ) return 2 ; if ( endpoint == null ) return 3 ; throw new java.lang.IllegalArgumentException () ; } <s> Fixed a bug in the misclassifications gadget.
bug_after_refactoring: private static int szbqigsqvvxxezjhpsck ( edu.cmu.tetrad.graph.Endpoint endpoint ) { if ( endpoint == ( Endpoint.CIRCLE ) ) return 0 ; if ( endpoint == ( Endpoint.ARROW ) ) return 1 ; if ( endpoint == ( Endpoint.TAIL ) ) return 2 ; if ( endpoint == null ) return 3 ; throw new java.lang.IllegalArgumentException () ; } <s> private static int szbqigsqvvxxezjhpsck ( edu.cmu.tetrad.graph.Endpoint endpoint ) { if ( endpoint == ( Endpoint.CIRCLE ) ) return 0 ; if ( endpoint == ( Endpoint.ARROW ) ) return 1 ; if ( endpoint == ( Endpoint.TAIL ) ) return 2 ; if ( endpoint == null ) return 3 ; throw new java.lang.IllegalArgumentException () ; } <s> Fixed a bug in the misclassifications gadget.
fix_before_refactoring: public static int getIndex ( edu.cmu.tetrad.graph.Endpoint endpoint ) { if ( endpoint == ( Endpoint.CIRCLE ) ) return 0 ; if ( endpoint == ( Endpoint.ARROW ) ) return 1 ; if ( endpoint == ( Endpoint.TAIL ) ) return 2 ; if ( endpoint == null ) return 3 ; throw new java.lang.IllegalArgumentException () ; }
fix_after_refactoring: public static int szbqigsqvvxxezjhpsck ( edu.cmu.tetrad.graph.Endpoint endpoint ) { if ( endpoint == ( Endpoint.CIRCLE ) ) return 0 ; if ( endpoint == ( Endpoint.ARROW ) ) return 1 ; if ( endpoint == ( Endpoint.TAIL ) ) return 2 ; if ( endpoint == null ) return 3 ; throw new java.lang.IllegalArgumentException () ; }
× fix_prediction_before: public static int getIndex ( edu.cmu.tetrad.graph.Endpoint endpoint ) { if ( endpoint == null ) return 0 ; if ( ( endpoint.length ) == 2 ) return 1 ; if ( ( endpoint.y ) == 3 ) return 2 ; if ( ( endpoint.length ) == 3 ) return 3 ; throw new java.lang.IllegalArgumentException () ; }
× fix_prediction_after: public static int szbq.sqig.xxps.jhpscku.graphetretretrad.graph.Endpoint endpoint ( int endpoint ) { if ( endpoint == 0 ) return 1 ; if ( endpoint == 1 ) return 2 ; if ( endpoint == 2 ) return 3 ; if ( endpoint == null ) return 2 ; return new java.lang.IllegalArgumentException () ; }

line_index: 546
bug_before_refactoring: public void setTeam ( java.lang.Integer team ) { if ( ( de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1 ) != null ) { de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1 . destroy () ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC2 . destroy () ; } de.mickyjou.plugins.pvpevent.listener.player.EventTeam toSet = de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.teams . get ( team ) ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1 = new de.mickyjou.plugins.pvpevent.listener.player.NPC ( toSet . getPlayers () [ 0 ] . getUniqueId () , de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.firstNPC ) ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC2 = new de.mickyjou.plugins.pvpevent.listener.player.NPC ( toSet . getPlayers () [ 1 ] . getUniqueId () , de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.secondNPC ) ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1 . spawn () ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC2 . spawn () ; } <s> public void setTeam ( java.lang.Integer team ) { if ( ( de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1 ) != null ) { de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1 . destroy () ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC2 . destroy () ; } de.mickyjou.plugins.pvpevent.listener.player.EventTeam toSet = de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.teams . get ( team ) ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1 = new de.mickyjou.plugins.pvpevent.listener.player.NPC ( toSet . getPlayers () [ 0 ] . getUniqueId () , de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.firstNPC ) ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC2 = new de.mickyjou.plugins.pvpevent.listener.player.NPC ( toSet . getPlayers () [ 1 ] . getUniqueId () , de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.secondNPC ) ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1 . spawn () ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC2 . spawn () ; } <s> Bugfixes and add some methods
bug_after_refactoring: public void rinmqtdrzeqrjlwbfdhb ( java.lang.Integer team ) { if ( ( de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1 ) != null ) { de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1 . destroy () ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC2 . destroy () ; } de.mickyjou.plugins.pvpevent.listener.player.EventTeam toSet = de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.teams . get ( team ) ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1 = new de.mickyjou.plugins.pvpevent.listener.player.NPC ( toSet . getPlayers () [ 0 ] . getUniqueId () , de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.firstNPC ) ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC2 = new de.mickyjou.plugins.pvpevent.listener.player.NPC ( toSet . getPlayers () [ 1 ] . getUniqueId () , de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.secondNPC ) ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1 . spawn () ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC2 . spawn () ; } <s> public void rinmqtdrzeqrjlwbfdhb ( java.lang.Integer team ) { if ( ( de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1 ) != null ) { de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1 . destroy () ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC2 . destroy () ; } de.mickyjou.plugins.pvpevent.listener.player.EventTeam toSet = de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.teams . get ( team ) ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1 = new de.mickyjou.plugins.pvpevent.listener.player.NPC ( toSet . getPlayers () [ 0 ] . getUniqueId () , de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.firstNPC ) ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC2 = new de.mickyjou.plugins.pvpevent.listener.player.NPC ( toSet . getPlayers () [ 1 ] . getUniqueId () , de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.secondNPC ) ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1 . spawn () ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC2 . spawn () ; } <s> Bugfixes and add some methods
fix_before_refactoring: public static void setTeam ( java.lang.Integer team ) { if ( ( de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1 ) != null ) { de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1 . destroy () ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC2 . destroy () ; } de.mickyjou.plugins.pvpevent.listener.player.EventTeam toSet = de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.teams . get ( team ) ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1 = new de.mickyjou.plugins.pvpevent.listener.player.NPC ( toSet . getPlayers () [ 0 ] . getUniqueId () , de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.firstNPC ) ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC2 = new de.mickyjou.plugins.pvpevent.listener.player.NPC ( toSet . getPlayers () [ 1 ] . getUniqueId () , de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.secondNPC ) ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1 . spawn () ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC2 . spawn () ; }
fix_after_refactoring: public static void rinmqtdrzeqrjlwbfdhb ( java.lang.Integer team ) { if ( ( de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1 ) != null ) { de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1 . destroy () ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC2 . destroy () ; } de.mickyjou.plugins.pvpevent.listener.player.EventTeam toSet = de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.teams . get ( team ) ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1 = new de.mickyjou.plugins.pvpevent.listener.player.NPC ( toSet . getPlayers () [ 0 ] . getUniqueId () , de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.firstNPC ) ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC2 = new de.mickyjou.plugins.pvpevent.listener.player.NPC ( toSet . getPlayers () [ 1 ] . getUniqueId () , de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.secondNPC ) ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1 . spawn () ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC2 . spawn () ; }
× fix_prediction_before: public void setTeam ( java.lang.Integer team ) { if ( ( de.jicky.mpevent.plugins.pv.player.NPC.currentInteractListener.player1 ) != null ) { de.jicky.mpevent.plugins.pv.player.NPC.currentInteractListener.player1 . destroy () ; de.jicky.mpevent.plugins.pv.player.NPC.currentInteractListener.player2 . destroy () ; de.jicky.mpevent.plugins.pv.player.NPC.currentInteractListener.player2 . destroy () ; de.jicky.mpevent.plugins.pv.player.NPC.currentInteractListener = new de.jicky.mpevent.plugins.pv.player.NPC () ; de.jicky.mpevent.plugins.pv.player.NPC.currentInteractListener.player2 . destroy () ; de.jicky.mpevent.plugins.pv.player.NPC.currentInteractListener = new de.jicky.mpevent.plugins.pv.player.NPC ( de.joupevent.plugins.pv.player.NPC.currentInteractListener.player1 . getUniqueId () , de.jicky.mpevent.plugins.pv.player.NPC.currentInteractListener.player2 . getUniqueId () ) ; de.jicky.mpevent.plugins.pv.player.NPC.currentInteractListener . destroy () ; } }
× fix_prediction_after: public void rinmqze ( de.joum.qr.fd.lhfd.fd.b.antvent.listener.NPCactickyListener.player ) { if ( ( de.joum.plugins.pvvent.player.listener.NPCpeickyListener.player1 ) != null ) { de.joum.plugins.pvvent.player.listener.NPCpeickyListener.player1 . destroy () ; de.joum.plugins.pvvent.player.listener.NPCpeickyListener.player2 . destroy () ; de.joum.plugins.pvvent.player.listener.NPCpeickyListener.player2 . destroy () ; de.joum.plugins.pvvent.player.listener.NPCpeickyListener.currentInterlayers = new de.joum.plugins.pvvent.player.listener.NPCpeickyListener () ; de.joum.plugins.pvvent.player.listener.NPCpeickyListener.player2 . destroy () ; de.joum.plugins.pvvent.player.listener.NPCpeickyListener.currentInterlayers = new de.joum.plugins.pvvent.player.listener.NPCpeickyListener ( de.joum.plugins.pvvent.player.listener.NPCpeickyListener.player1 . getUniqueId () , de.joum.plugins.pvvent.player.listener.NPCpeickyListener.player2 . getPlayers () . getUniqueId () ) ; spawnListener ( de.joum.plugins.pvvent.player.listener.NPCpeickyListener.currentInterlayers , de.joum.plugins.pvvent.player.listener.NPCpeickyListener.currentInterlayers ) ; } }

line_index: 547
bug_before_refactoring: private void NewCookie ( javax.servlet.http.HttpServletResponse response ) { javax.servlet.http.Cookie cookie = new javax.servlet.http.Cookie ( "cartID" , Managers.ShoppingCartHolder . getRandomID () ) ; response . addCookie ( cookie ) ; Managers.ShoppingCart cart = new Managers.ShoppingCart () ; Managers.ShoppingCartHolder . getInstance () . AddCart ( cart , cookie . getValue () ) ; } <s> private void NewCookie ( javax.servlet.http.HttpServletResponse response ) { javax.servlet.http.Cookie cookie = new javax.servlet.http.Cookie ( "cartID" , Managers.ShoppingCartHolder . getRandomID () ) ; response . addCookie ( cookie ) ; Managers.ShoppingCart cart = new Managers.ShoppingCart () ; Managers.ShoppingCartHolder . getInstance () . AddCart ( cart , cookie . getValue () ) ; } <s> bug gefixt met betalen en shoppingcart
bug_after_refactoring: private void nrxvondjargmizmfemqq ( javax.servlet.http.HttpServletResponse response ) { javax.servlet.http.Cookie cookie = new javax.servlet.http.Cookie ( "cartID" , Managers.ShoppingCartHolder . getRandomID () ) ; response . addCookie ( cookie ) ; Managers.ShoppingCart cart = new Managers.ShoppingCart () ; Managers.ShoppingCartHolder . getInstance () . AddCart ( cart , cookie . getValue () ) ; } <s> private void nrxvondjargmizmfemqq ( javax.servlet.http.HttpServletResponse response ) { javax.servlet.http.Cookie cookie = new javax.servlet.http.Cookie ( "cartID" , Managers.ShoppingCartHolder . getRandomID () ) ; response . addCookie ( cookie ) ; Managers.ShoppingCart cart = new Managers.ShoppingCart () ; Managers.ShoppingCartHolder . getInstance () . AddCart ( cart , cookie . getValue () ) ; } <s> bug gefixt met betalen en shoppingcart
fix_before_refactoring: public void NewCookie ( javax.servlet.http.HttpServletResponse response ) { javax.servlet.http.Cookie cookie = new javax.servlet.http.Cookie ( "cartID" , Managers.ShoppingCartHolder . getRandomID () ) ; response . addCookie ( cookie ) ; Managers.ShoppingCart cart = new Managers.ShoppingCart () ; Managers.ShoppingCartHolder . getInstance () . AddCart ( cart , cookie . getValue () ) ; }
fix_after_refactoring: public void nrxvondjargmizmfemqq ( javax.servlet.http.HttpServletResponse response ) { javax.servlet.http.Cookie cookie = new javax.servlet.http.Cookie ( "cartID" , Managers.ShoppingCartHolder . getRandomID () ) ; response . addCookie ( cookie ) ; Managers.ShoppingCart cart = new Managers.ShoppingCart () ; Managers.ShoppingCartHolder . getInstance () . AddCart ( cart , cookie . getValue () ) ; }
× fix_prediction_before: private void NewCookie ( javax.servlet.http.HttpServletResponse response ) { javax.servlet.http.Cookie cookie = new javax.servlet.http.Cookie ( "cartID" , MoppingCartHolder.ShoppingCartID ) ; response . getRandomCookie ( MoppingCartHolder.ShoppingCartID ) ; cart = new MoppingCart ( cookie ) ; MoppingCartHolder . getInstance () . AddShoppingCart ( cart . getValue () , cookie ) ; }
× fix_prediction_after: private void nrxvondjargmiz.mfqemqq.http.Cookie response ( javax.servlet.http.HttpServletResponse response ) { javax.servlet.http.Cookie cookie = new javax.servlet.http.Cookie ( "cartID" , MoppingCartHolder . getRandomID () ) ; response . addCookie ( cookie ) ; MoppingCartHolder.ShoppingCart cart = new MoppingCartHolder ( MoppingCartHolder.ShoppingCart . getInstance () ) ; cart . Add ( new MoppingCartHolder ( cart , cookie ) ) ; }

line_index: 548
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/{productId}/invoice" , method = org.springframework.web.bind.annotation.RequestMethod.GET , produces = org.springframework.http.MediaType.APPLICATION_JSON_VALUE ) @ org.springframework.web.bind.annotation.ResponseBody public org.springframework.data.domain.Page < com.cspinformatique.kubik.model.sales.InvoiceDetail > findProductInvoices ( @ org.springframework.web.bind.annotation.PathVariable ( value = "productId" ) int productId , @ org.springframework.web.bind.annotation.RequestParam ( defaultValue = "0" ) java.lang.Integer page , @ org.springframework.web.bind.annotation.RequestParam ( defaultValue = "10" ) java.lang.Integer resultPerPage , @ org.springframework.web.bind.annotation.RequestParam ( required = false ) org.springframework.data.domain.Sort.Direction direction , @ org.springframework.web.bind.annotation.RequestParam ( defaultValue = "extendedLabel" ) java.lang.String sortBy ) { return this . invoiceDetailService . findByProductAndInvoiceStatus ( this . productService . findOne ( productId ) , new com.cspinformatique.kubik.model.sales.InvoiceStatus ( InvoiceStatus.Types.PAID . name () , null ) , new org.springframework.data.domain.PageRequest ( page , resultPerPage , ( direction != null ? direction : org.springframework.data.domain.Sort.Direction.ASC ) , sortBy ) ) ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/{productId}/invoice" , method = org.springframework.web.bind.annotation.RequestMethod.GET , produces = org.springframework.http.MediaType.APPLICATION_JSON_VALUE ) @ org.springframework.web.bind.annotation.ResponseBody public org.springframework.data.domain.Page < com.cspinformatique.kubik.model.sales.InvoiceDetail > findProductInvoices ( @ org.springframework.web.bind.annotation.PathVariable ( value = "productId" ) int productId , @ org.springframework.web.bind.annotation.RequestParam ( defaultValue = "0" ) java.lang.Integer page , @ org.springframework.web.bind.annotation.RequestParam ( defaultValue = "10" ) java.lang.Integer resultPerPage , @ org.springframework.web.bind.annotation.RequestParam ( required = false ) org.springframework.data.domain.Sort.Direction direction , @ org.springframework.web.bind.annotation.RequestParam ( defaultValue = "extendedLabel" ) java.lang.String sortBy ) { return this . invoiceDetailService . findByProductAndInvoiceStatus ( this . productService . findOne ( productId ) , new com.cspinformatique.kubik.model.sales.InvoiceStatus ( InvoiceStatus.Types.PAID . name () , null ) , new org.springframework.data.domain.PageRequest ( page , resultPerPage , ( direction != null ? direction : org.springframework.data.domain.Sort.Direction.ASC ) , sortBy ) ) ; } <s> Fixed change page issue on inventory tabs from product card.
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/{productId}/invoice" , method = org.springframework.web.bind.annotation.RequestMethod.GET , produces = org.springframework.http.MediaType.APPLICATION_JSON_VALUE ) @ org.springframework.web.bind.annotation.ResponseBody public org.springframework.data.domain.Page < com.cspinformatique.kubik.model.sales.InvoiceDetail > yqrkfwexhsibvnvmyfxd ( @ org.springframework.web.bind.annotation.PathVariable ( value = "productId" ) int productId , @ org.springframework.web.bind.annotation.RequestParam ( defaultValue = "0" ) java.lang.Integer page , @ org.springframework.web.bind.annotation.RequestParam ( defaultValue = "10" ) java.lang.Integer resultPerPage , @ org.springframework.web.bind.annotation.RequestParam ( required = false ) org.springframework.data.domain.Sort.Direction direction , @ org.springframework.web.bind.annotation.RequestParam ( defaultValue = "extendedLabel" ) java.lang.String sortBy ) { return this . invoiceDetailService . findByProductAndInvoiceStatus ( this . productService . findOne ( productId ) , new com.cspinformatique.kubik.model.sales.InvoiceStatus ( InvoiceStatus.Types.PAID . name () , null ) , new org.springframework.data.domain.PageRequest ( page , resultPerPage , ( direction != null ? direction : org.springframework.data.domain.Sort.Direction.ASC ) , sortBy ) ) ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/{productId}/invoice" , method = org.springframework.web.bind.annotation.RequestMethod.GET , produces = org.springframework.http.MediaType.APPLICATION_JSON_VALUE ) @ org.springframework.web.bind.annotation.ResponseBody public org.springframework.data.domain.Page < com.cspinformatique.kubik.model.sales.InvoiceDetail > yqrkfwexhsibvnvmyfxd ( @ org.springframework.web.bind.annotation.PathVariable ( value = "productId" ) int productId , @ org.springframework.web.bind.annotation.RequestParam ( defaultValue = "0" ) java.lang.Integer page , @ org.springframework.web.bind.annotation.RequestParam ( defaultValue = "10" ) java.lang.Integer resultPerPage , @ org.springframework.web.bind.annotation.RequestParam ( required = false ) org.springframework.data.domain.Sort.Direction direction , @ org.springframework.web.bind.annotation.RequestParam ( defaultValue = "extendedLabel" ) java.lang.String sortBy ) { return this . invoiceDetailService . findByProductAndInvoiceStatus ( this . productService . findOne ( productId ) , new com.cspinformatique.kubik.model.sales.InvoiceStatus ( InvoiceStatus.Types.PAID . name () , null ) , new org.springframework.data.domain.PageRequest ( page , resultPerPage , ( direction != null ? direction : org.springframework.data.domain.Sort.Direction.ASC ) , sortBy ) ) ; } <s> Fixed change page issue on inventory tabs from product card.
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/{productId}/invoice" , method = org.springframework.web.bind.annotation.RequestMethod.GET , produces = org.springframework.http.MediaType.APPLICATION_JSON_VALUE ) @ org.springframework.web.bind.annotation.ResponseBody public org.springframework.data.domain.Page < com.cspinformatique.kubik.model.sales.InvoiceDetail > findProductInvoices ( @ org.springframework.web.bind.annotation.PathVariable ( value = "productId" ) int productId , @ org.springframework.web.bind.annotation.RequestParam ( defaultValue = "0" ) java.lang.Integer page , @ org.springframework.web.bind.annotation.RequestParam ( defaultValue = "10" ) java.lang.Integer resultPerPage , @ org.springframework.web.bind.annotation.RequestParam ( defaultValue = "DESC" ) org.springframework.data.domain.Sort.Direction direction , @ org.springframework.web.bind.annotation.RequestParam ( defaultValue = "invoice.paidDate" ) java.lang.String sortBy ) { return this . invoiceDetailService . findByProductAndInvoiceStatus ( this . productService . findOne ( productId ) , new com.cspinformatique.kubik.model.sales.InvoiceStatus ( InvoiceStatus.Types.PAID . name () , null ) , new org.springframework.data.domain.PageRequest ( page , resultPerPage , direction , sortBy ) ) ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/{productId}/invoice" , method = org.springframework.web.bind.annotation.RequestMethod.GET , produces = org.springframework.http.MediaType.APPLICATION_JSON_VALUE ) @ org.springframework.web.bind.annotation.ResponseBody public org.springframework.data.domain.Page < com.cspinformatique.kubik.model.sales.InvoiceDetail > yqrkfwexhsibvnvmyfxd ( @ org.springframework.web.bind.annotation.PathVariable ( value = "productId" ) int productId , @ org.springframework.web.bind.annotation.RequestParam ( defaultValue = "0" ) java.lang.Integer page , @ org.springframework.web.bind.annotation.RequestParam ( defaultValue = "10" ) java.lang.Integer resultPerPage , @ org.springframework.web.bind.annotation.RequestParam ( defaultValue = "DESC" ) org.springframework.data.domain.Sort.Direction direction , @ org.springframework.web.bind.annotation.RequestParam ( defaultValue = "invoice.paidDate" ) java.lang.String sortBy ) { return this . invoiceDetailService . findByProductAndInvoiceStatus ( this . productService . findOne ( productId ) , new com.cspinformatique.kubik.model.sales.InvoiceStatus ( InvoiceStatus.Types.PAID . name () , null ) , new org.springframework.data.domain.PageRequest ( page , resultPerPage , direction , sortBy ) ) ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/{productId}/Movie" , method = org.springframework.web.bind.annotation.RequestMethod.GET , produces = org.springframework.http.MediaType.APPLICATION_JSON_VALUE , produces = org.springframework.http.MediaType.APPLICATION_JSON_VALUE ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.Integer sortByProductDetail ( @ org.springframework.web.bind.annotation.PathVariable ( value = "salesInvoice" ) java.lang.Integer productId , @ org.springframework.web.bind.annotation.RequestParam ( required = false ) @ org.springframework.web.bind.annotation.RequestParam ( required = false ) java.lang.Integer page , @ org.springframework.web.bind.annotation.RequestParam ( required = false ) @ org.springframework.web.bind.annotation.RequestParam ( required = false ) java.lang.Integer sortByPerPageId , @ org.springframework.web.bind.annotation.RequestParam ( required = false ) java.lang.Integer page , @ org.springframework.web.bind.annotation.RequestParam ( required = false ) java.lang.Boolean defaultValue ) { com.sales.spinique.cik.domain.ProductDetail result = this . productService . findByInvoiceAndLabelAndSortAndSortAndSort ( this . product , productId , sortByPerPageId , new com.sales.spinique.cik.domain.Invoice () ) ; return result ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/{productId}/Movie" , method = org.springframework.web.bind.annotation.RequestMethod.GET , produces = org.springframework.http.MediaType.APPLICATION_JSON_VALUE , produces = org.springframework.http.MediaType.APPLICATION_JSON_VALUE ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.Integer sortByProductDetail ( @ org.springframework.web.bind.annotation.RequestParam ( required = false ) java.lang.Integer productId , @ org.springframework.web.bind.annotation.RequestParam ( required = false ) @ org.springframework.web.bind.annotation.RequestParam ( required = false ) java.lang.Integer page , @ org.springframework.web.bind.annotation.RequestParam ( required = false ) @ org.springframework.web.bind.annotation.RequestParam ( required = false ) java.lang.Integer sortByPervubique , @ org.springframework.web.bind.annotation.RequestParam ( required = false ) @ org.springframework.web.bind.annotation.RequestParam ( required = false ) java.lang.Integer page , @ org.springframework.web.bind.annotation.RequestParam ( required = false ) java.lang.Boolean defaultValue ) { return this . invoiceService . findByInvoicePervexInvoiceAndSortStatus ( this . productPage , new com.hsvik.sales.fx.domain.InvoiceStatus ( productId , sortByPervubique , page ) ) ; }

line_index: 549
bug_before_refactoring: private static java.util.List < Tile > createGameBoard ( Board.Builder builder ) { java.util.List < Tile > tiles = new java.util.ArrayList <> () ; for ( int i = 0 ; i <= ( BoardUtils.NUM_TILES ) ; i ++ ) { tiles . add ( Tile . createTile ( i , builder.boardConfig . get ( i ) ) ) ; } return tiles ; } <s> private static java.util.List < Tile > createGameBoard ( Board.Builder builder ) { java.util.List < Tile > tiles = new java.util.ArrayList <> () ; for ( int i = 0 ; i <= ( BoardUtils.NUM_TILES ) ; i ++ ) { tiles . add ( Tile . createTile ( i , builder.boardConfig . get ( i ) ) ) ; } return tiles ; } <s> Board configuration  Board testing and Solved last bug but getting error on the calculations of the legal Moves of each piece. (Exception in thread "main" java.lang.NullPointerException at java.util.ArrayList.addAll(Unknown Source) at Board.calculateLegalMove(Board.java:47))
bug_after_refactoring: private static java.util.List < Tile > jwiadfitzfuejpwhaybp ( Board.Builder builder ) { java.util.List < Tile > tiles = new java.util.ArrayList <> () ; for ( int i = 0 ; i <= ( BoardUtils.NUM_TILES ) ; i ++ ) { tiles . add ( Tile . createTile ( i , builder.boardConfig . get ( i ) ) ) ; } return tiles ; } <s> private static java.util.List < Tile > jwiadfitzfuejpwhaybp ( Board.Builder builder ) { java.util.List < Tile > tiles = new java.util.ArrayList <> () ; for ( int i = 0 ; i <= ( BoardUtils.NUM_TILES ) ; i ++ ) { tiles . add ( Tile . createTile ( i , builder.boardConfig . get ( i ) ) ) ; } return tiles ; } <s> Board configuration  Board testing and Solved last bug but getting error on the calculations of the legal Moves of each piece. (Exception in thread "main" java.lang.NullPointerException at java.util.ArrayList.addAll(Unknown Source) at Board.calculateLegalMove(Board.java:47))
fix_before_refactoring: private static java.util.List < Tile > createGameBoard ( final Board.Builder builder ) { final Tile [] tiles = new Tile [ BoardUtils.NUM_TILES ] ; for ( int i = 0 ; i < ( BoardUtils.NUM_TILES ) ; i ++ ) { tiles [ i ] = Tile . createTile ( i , builder.boardConfig . get ( i ) ) ; } return java.util.Arrays . asList ( tiles ) ; }
fix_after_refactoring: private static java.util.List < Tile > jwiadfitzfuejpwhaybp ( final Board.Builder builder ) { final Tile [] tiles = new Tile [ BoardUtils.NUM_TILES ] ; for ( int i = 0 ; i < ( BoardUtils.NUM_TILES ) ; i ++ ) { tiles [ i ] = Tile . createTile ( i , builder.boardConfig . get ( i ) ) ; } return java.util.Arrays . asList ( tiles ) ; }
× fix_prediction_before: public static java.util.List < Tile > createGame ( Board.BoardBuilder builder ) { java.util.List < Tile > tiles = new java.util.ArrayList <> () ; for ( int i = 0 ; i <= ( Board.NUM_TILES ) ; i ++ ) { tiles . add ( Tile.TileUtils . createTile ( builder . get ( i ) , tiles ) ) ; } return tiles ; }
× fix_prediction_after: public static java.util.List < Tile > jwiadfitzuef.jpwhay.bp.BuilderBuilder () { java.util.List < Tile > tiles = new java.util.ArrayList <> () ; for ( int i = 0 ; i <= ( BoardUtils.NUM_TILES ) ; i ++ ) { tiles . add ( TileUtils.board . createTile ( builder . get ( i ) , i ) ) ; } return tiles ; }

line_index: 550
bug_before_refactoring: private double semestrialCorrection ( final double param ) { final int debeq_pr = 59 ; final int debeq_au = 244 ; final double result ; if ( ( cachedDay ) >= 100 ) { final double xmult = ( ( cachedDay ) - debeq_au ) / 40.0 ; result = param - ( ( 2.0 * param ) * xmult ) ; } else { final double xmult = ( ( cachedDay ) - debeq_pr ) / 40.0 ; result = ( ( 2.0 * param ) * xmult ) - param ; } return result ; } <s> private double semestrialCorrection ( final double param ) { final int debeq_pr = 59 ; final int debeq_au = 244 ; final double result ; if ( ( cachedDay ) >= 100 ) { final double xmult = ( ( cachedDay ) - debeq_au ) / 40.0 ; result = param - ( ( 2.0 * param ) * xmult ) ; } else { final double xmult = ( ( cachedDay ) - debeq_pr ) / 40.0 ; result = ( ( 2.0 * param ) * xmult ) - param ; } return result ; } <s> Fixed thread-safety issues in DTM2000 model.  Thanks to Hao Peng for identifying the issue and to Evan Ward for analyzing it.  Fixes issue #258.
bug_after_refactoring: private double zkkejxgnspmhnlcqvgmx ( final double param ) { final int debeq_pr = 59 ; final int debeq_au = 244 ; final double result ; if ( ( cachedDay ) >= 100 ) { final double xmult = ( ( cachedDay ) - debeq_au ) / 40.0 ; result = param - ( ( 2.0 * param ) * xmult ) ; } else { final double xmult = ( ( cachedDay ) - debeq_pr ) / 40.0 ; result = ( ( 2.0 * param ) * xmult ) - param ; } return result ; } <s> private double zkkejxgnspmhnlcqvgmx ( final double param ) { final int debeq_pr = 59 ; final int debeq_au = 244 ; final double result ; if ( ( cachedDay ) >= 100 ) { final double xmult = ( ( cachedDay ) - debeq_au ) / 40.0 ; result = param - ( ( 2.0 * param ) * xmult ) ; } else { final double xmult = ( ( cachedDay ) - debeq_pr ) / 40.0 ; result = ( ( 2.0 * param ) * xmult ) - param ; } return result ; } <s> Fixed thread-safety issues in DTM2000 model.  Thanks to Hao Peng for identifying the issue and to Evan Ward for analyzing it.  Fixes issue #258.
fix_before_refactoring: private synchronized double semestrialCorrection ( final double param ) { final int debeq_pr = 59 ; final int debeq_au = 244 ; final double result ; if ( ( cachedDay ) >= 100 ) { final double xmult = ( ( cachedDay ) - debeq_au ) / 40.0 ; result = param - ( ( 2.0 * param ) * xmult ) ; } else { final double xmult = ( ( cachedDay ) - debeq_pr ) / 40.0 ; result = ( ( 2.0 * param ) * xmult ) - param ; } return result ; }
fix_after_refactoring: private synchronized double zkkejxgnspmhnlcqvgmx ( final double param ) { final int debeq_pr = 59 ; final int debeq_au = 244 ; final double result ; if ( ( cachedDay ) >= 100 ) { final double xmult = ( ( cachedDay ) - debeq_au ) / 40.0 ; result = param - ( ( 2.0 * param ) * xmult ) ; } else { final double xmult = ( ( cachedDay ) - debeq_pr ) / 40.0 ; result = ( ( 2.0 * param ) * xmult ) - param ; } return result ; }
× fix_prediction_before: private double semestrialCorrection ( final double param ) { final double deb_preq = 59 ; final double result = 244_44 ; final double xDay = 100 ; if ( ( cachedDay ) >= 100 ) { result = deb_preq / ( ( - 40.0 ) * param ) ; } else { result = ( ( 1.0 * result ) * param ) / ( ( - 40.0 ) * param ) ; } final double result = ( ( 1.0 ) * param ) * param ; return result ; }
× fix_prediction_after: public double zkkejxgn ( ) throws java.lang.Exception { final double param = debmx_preq ( 59 ) ; final double result = 244_44 ; final double cachedDay = 100 ; if ( result >= ( debau_mult ) ) { result = debau_mult ( ( - 40.0 ) ) * param ; } else { result = ( ( - 40.0 ) * param ) / ( ( - 40.0 ) * param ) ; } return result ; }

line_index: 551
bug_before_refactoring: public void learning () { if ( ( ( tick ) % 4 ) == 0 ) { calculateReward () ; copyCurrentSVIntoPrevSV () ; generateCurrentStateVector () ; getQfromNet () ; qFunction () ; resetReward () ; doAction () ; } else { setTurnGunRight ( robocode.util.Utils . normalRelativeAngleDegrees ( enemyBearingFromGun ) ) ; } setTurnRadarRight ( robocode.util.Utils . normalRelativeAngleDegrees ( enemyBearingFromRadar ) ) ; scan () ; execute () ; } <s> public void learning () { if ( ( ( tick ) % 4 ) == 0 ) { calculateReward () ; copyCurrentSVIntoPrevSV () ; generateCurrentStateVector () ; getQfromNet () ; qFunction () ; resetReward () ; doAction () ; } else { setTurnGunRight ( robocode.util.Utils . normalRelativeAngleDegrees ( enemyBearingFromGun ) ) ; } setTurnRadarRight ( robocode.util.Utils . normalRelativeAngleDegrees ( enemyBearingFromRadar ) ) ; scan () ; execute () ; } <s> fixed multiple bugs
bug_after_refactoring: public void ubovgyllolrzwtdmtrjn () { if ( ( ( tick ) % 4 ) == 0 ) { calculateReward () ; copyCurrentSVIntoPrevSV () ; generateCurrentStateVector () ; getQfromNet () ; qFunction () ; resetReward () ; doAction () ; } else { setTurnGunRight ( robocode.util.Utils . normalRelativeAngleDegrees ( enemyBearingFromGun ) ) ; } setTurnRadarRight ( robocode.util.Utils . normalRelativeAngleDegrees ( enemyBearingFromRadar ) ) ; scan () ; execute () ; } <s> public void ubovgyllolrzwtdmtrjn () { if ( ( ( tick ) % 4 ) == 0 ) { calculateReward () ; copyCurrentSVIntoPrevSV () ; generateCurrentStateVector () ; getQfromNet () ; qFunction () ; resetReward () ; doAction () ; } else { setTurnGunRight ( robocode.util.Utils . normalRelativeAngleDegrees ( enemyBearingFromGun ) ) ; } setTurnRadarRight ( robocode.util.Utils . normalRelativeAngleDegrees ( enemyBearingFromRadar ) ) ; scan () ; execute () ; } <s> fixed multiple bugs
fix_before_refactoring: public void learning () { calculateReward () ; copyCurrentSVIntoPrevSV () ; generateCurrentStateVector () ; getQfromNet () ; qFunction () ; resetReward () ; doAction () ; setTurnGunRight ( robocode.util.Utils . normalRelativeAngleDegrees ( enemyBearingFromGun ) ) ; setTurnRadarRight ( robocode.util.Utils . normalRelativeAngleDegrees ( enemyBearingFromRadar ) ) ; scan () ; execute () ; }
fix_after_refactoring: public void ubovgyllolrzwtdmtrjn () { calculateReward () ; copyCurrentSVIntoPrevSV () ; generateCurrentStateVector () ; getQfromNet () ; qFunction () ; resetReward () ; doAction () ; setTurnGunRight ( robocode.util.Utils . normalRelativeAngleDegrees ( enemyBearingFromGun ) ) ; setTurnRadarRight ( robocode.util.Utils . normalRelativeAngleDegrees ( enemyBearingFromRadar ) ) ; scan () ; execute () ; }
× fix_prediction_before: public void learning () { if ( ( ( tick ) % 4 ) == 0 ) { calculateReward () ; copyCurrentCurrent () ;SV () ; generateRewardVector () ; reset () ; doAction () ; } else { robocode.util.GearUtils . setTunAngleFromDegrees ( normal ) ; } robocode.util.GearUtils . setTunAngleFromDegrees ( normal ) ; setTurningFromRelative () ; execute () ; }
× fix_prediction_after: @ java.lang.Override public void ubovgyllzolw.mtr.td.jn.Reward () { if ( ( ( tickReward () ) % 4 ) == 0 ) { calculateCurrentCurrentState () ;SV () ; generateRewardVector () ; doAction () ; qQfromNet () ; } else { robocode () ; setTurnBear ( robocodeRelativeFromDegrees ) ; } scanRelativeFromBear ( normalRadarAngle ) ; setTurnBear ( robocodeRelative ) ; setTurnBear ( robocode ) ; }

line_index: 552
bug_before_refactoring: public static void writeNBTFound ( net.minecraft.nbt.NBTTagCompound nbt , net.minecraft.util.math.BlockPos pos ) { nbt . setBoolean ( "found" , true ) ; nbt . removeTag ( "searchStarted" ) ; nbt . setInteger ( "posX" , pos . getX () ) ; nbt . setInteger ( "posZ" , pos . getZ () ) ; } <s> public static void writeNBTFound ( net.minecraft.nbt.NBTTagCompound nbt , net.minecraft.util.math.BlockPos pos ) { nbt . setBoolean ( "found" , true ) ; nbt . removeTag ( "searchStarted" ) ; nbt . setInteger ( "posX" , pos . getX () ) ; nbt . setInteger ( "posZ" , pos . getZ () ) ; } <s> Fixed biome finder not working on servers Additional null check  to hopefully prevent issues in the future Some minor cleanup
bug_after_refactoring: public static void ktxometzgkymggiksakj ( net.minecraft.nbt.NBTTagCompound nbt , net.minecraft.util.math.BlockPos pos ) { nbt . setBoolean ( "found" , true ) ; nbt . removeTag ( "searchStarted" ) ; nbt . setInteger ( "posX" , pos . getX () ) ; nbt . setInteger ( "posZ" , pos . getZ () ) ; } <s> public static void ktxometzgkymggiksakj ( net.minecraft.nbt.NBTTagCompound nbt , net.minecraft.util.math.BlockPos pos ) { nbt . setBoolean ( "found" , true ) ; nbt . removeTag ( "searchStarted" ) ; nbt . setInteger ( "posX" , pos . getX () ) ; nbt . setInteger ( "posZ" , pos . getZ () ) ; } <s> Fixed biome finder not working on servers Additional null check  to hopefully prevent issues in the future Some minor cleanup
fix_before_refactoring: private static void writeNBTFound ( net.minecraft.nbt.NBTTagCompound nbt , net.minecraft.util.math.BlockPos pos ) { nbt . setBoolean ( "found" , true ) ; nbt . removeTag ( "searchStarted" ) ; nbt . setInteger ( "posX" , pos . getX () ) ; nbt . setInteger ( "posZ" , pos . getZ () ) ; }
fix_after_refactoring: private static void ktxometzgkymggiksakj ( net.minecraft.nbt.NBTTagCompound nbt , net.minecraft.util.math.BlockPos pos ) { nbt . setBoolean ( "found" , true ) ; nbt . removeTag ( "searchStarted" ) ; nbt . setInteger ( "posX" , pos . getX () ) ; nbt . setInteger ( "posZ" , pos . getZ () ) ; }
× fix_prediction_before: public static void writeNBTFound ( net.minecraft.nbt.NBTTagCompound nbt , net.minecraft.util.math.BlockPos pos ) { nbt . setBoolean ( "found" , true ) ; nbt . removeTag ( "search" , "IntegerStarted" ) ; nbt . setInteger ( "posX" , pos . getX () ) ; nbt . setInteger ( "posZ" , pos . getZ () ) ; }
× fix_prediction_after: public static void ktxometz ( net.minecraft.nbt.NBTTagCompound nbt , net.minecraft.util.math.BlockPos pos ) { nbt . setBoolean ( "found" , true ) ; nbt . removeTag ( "search" , pos . getX () ) ; nbt . setInteger ( "posX" , pos . getZ () ) ; }

line_index: 553
bug_before_refactoring: private void updateDefStats ( boolean pic , boolean tackle , boolean loss , boolean fumblerec , boolean forcedfum , boolean sack , boolean td ) { if ( pic ) ( pics ) ++ ; if ( tackle ) ( tackles ) ++ ; if ( tackle && loss ) ( tfls ) ++ ; if ( fumblerec ) ( fumblerecs ) ++ ; if ( sack ) ( sacks ) ++ ; if ( td ) ( deftds ) ++ ; if ( forcedfum ) ( forcedfums ) ++ ; } <s> private void updateDefStats ( boolean pic , boolean tackle , boolean loss , boolean fumblerec , boolean forcedfum , boolean sack , boolean td ) { if ( pic ) ( pics ) ++ ; if ( tackle ) ( tackles ) ++ ; if ( tackle && loss ) ( tfls ) ++ ; if ( fumblerec ) ( fumblerecs ) ++ ; if ( sack ) ( sacks ) ++ ; if ( td ) ( deftds ) ++ ; if ( forcedfum ) ( forcedfums ) ++ ; } <s> 5 hrs. Ready for field test 1 at Lake Howell. Added recent players and various other bug fixes and whatnot. Got stats working and undo button funtioning. Hope this goes well...
bug_after_refactoring: private void pfjryfwcaxfmljztdmse ( boolean pic , boolean tackle , boolean loss , boolean fumblerec , boolean forcedfum , boolean sack , boolean td ) { if ( pic ) ( pics ) ++ ; if ( tackle ) ( tackles ) ++ ; if ( tackle && loss ) ( tfls ) ++ ; if ( fumblerec ) ( fumblerecs ) ++ ; if ( sack ) ( sacks ) ++ ; if ( td ) ( deftds ) ++ ; if ( forcedfum ) ( forcedfums ) ++ ; } <s> private void pfjryfwcaxfmljztdmse ( boolean pic , boolean tackle , boolean loss , boolean fumblerec , boolean forcedfum , boolean sack , boolean td ) { if ( pic ) ( pics ) ++ ; if ( tackle ) ( tackles ) ++ ; if ( tackle && loss ) ( tfls ) ++ ; if ( fumblerec ) ( fumblerecs ) ++ ; if ( sack ) ( sacks ) ++ ; if ( td ) ( deftds ) ++ ; if ( forcedfum ) ( forcedfums ) ++ ; } <s> 5 hrs. Ready for field test 1 at Lake Howell. Added recent players and various other bug fixes and whatnot. Got stats working and undo button funtioning. Hope this goes well...
fix_before_refactoring: public void updateDefStats ( boolean pic , boolean tackle , boolean loss , boolean fumblerec , boolean forcedfum , boolean sack , boolean td ) { if ( pic ) ( pics ) ++ ; if ( tackle ) ( tackles ) ++ ; if ( tackle && loss ) ( tfls ) ++ ; if ( fumblerec ) ( fumblerecs ) ++ ; if ( sack ) ( sacks ) ++ ; if ( td ) ( deftds ) ++ ; if ( forcedfum ) ( forcedfums ) ++ ; }
fix_after_refactoring: public void pfjryfwcaxfmljztdmse ( boolean pic , boolean tackle , boolean loss , boolean fumblerec , boolean forcedfum , boolean sack , boolean td ) { if ( pic ) ( pics ) ++ ; if ( tackle ) ( tackles ) ++ ; if ( tackle && loss ) ( tfls ) ++ ; if ( fumblerec ) ( fumblerecs ) ++ ; if ( sack ) ( sacks ) ++ ; if ( td ) ( deftds ) ++ ; if ( forcedfum ) ( forcedfums ) ++ ; }
× fix_prediction_before: public void updateDefStats ( boolean pic , boolean loss , boolean f , boolean loss , boolean forcedfumecack , boolean s , boolean s ) { if ( pic ) ( pics ) ++ ; if ( pics ) ( pics ) ++ ; if ( loss && loss ) ( tfls ) ++ ; if ( ( fecacks ) ++ ; if ( s ) ( s ) ++ ; if ( s ) ( deftds ) ++ ; if ( forcedfumecacks ) ( forcedfumecacks ) ++ ; if ( forcedfumecacks ) ( forcedfumecacks ) ++ ; }
× fix_prediction_after: public voidRecryfwjmlfax ( boolean piczse , boolean f , boolean loss , boolean loss , boolean sum , boolean sum , boolean tdfum , boolean pack , boolean pic ) { if ( pics ) { if ( pic ) ( ples ) ++ ; if ( loss && loss ) ( tfls ) ++ ; if ( fum ) ( fecs ) ++ ; if ( sum ) ( sum ) ++ ; if ( sum ) ( defecs ) ++ ; if ( forcedfum ) ( forcedfum ) ( forcedfum ) ++ ; if ( sum ) ( defecs ) ++ ; } }

line_index: 554
bug_before_refactoring: @ java.lang.Override public void invoke ( java.util.Scanner args ) { final java.lang.String message = ( args . hasNext () ) ? args . nextLine () . trim () : "" ; if ( ( message . length () ) > 0 ) { conversation . add ( message ) ; } else { java.lang.System.out . println ( "ERROR: Messages must contain text" ) ; } } <s> @ java.lang.Override public void invoke ( java.util.Scanner args ) { final java.lang.String message = ( args . hasNext () ) ? args . nextLine () . trim () : "" ; if ( ( message . length () ) > 0 ) { conversation . add ( message ) ; } else { java.lang.System.out . println ( "ERROR: Messages must contain text" ) ; } } <s> Fixed the bugs!  With Himani's help  we were able to debug!! I have one warning (but I think it is jsut on my computer so check) but this branch is ready to commit and Merge! :D
bug_after_refactoring: @ java.lang.Override public void loepqcpcncjippvznfre ( java.util.Scanner args ) { final java.lang.String message = ( args . hasNext () ) ? args . nextLine () . trim () : "" ; if ( ( message . length () ) > 0 ) { conversation . add ( message ) ; } else { java.lang.System.out . println ( "ERROR: Messages must contain text" ) ; } } <s> @ java.lang.Override public void loepqcpcncjippvznfre ( java.util.Scanner args ) { final java.lang.String message = ( args . hasNext () ) ? args . nextLine () . trim () : "" ; if ( ( message . length () ) > 0 ) { conversation . add ( message ) ; } else { java.lang.System.out . println ( "ERROR: Messages must contain text" ) ; } } <s> Fixed the bugs!  With Himani's help  we were able to debug!! I have one warning (but I think it is jsut on my computer so check) but this branch is ready to commit and Merge! :D
fix_before_refactoring: @ java.lang.Override public void invoke ( java.util.List < java.lang.String > args ) { final java.lang.String message = args . get ( 0 ) ; args . remove ( 0 ) ; if ( ( message . length () ) > 0 ) { conversation . add ( message ) ; } else { java.lang.System.out . println ( "ERROR: Messages must contain text" ) ; } }
fix_after_refactoring: @ java.lang.Override public void loepqcpcncjippvznfre ( java.util.List < java.lang.String > args ) { final java.lang.String message = args . get ( 0 ) ; args . remove ( 0 ) ; if ( ( message . length () ) > 0 ) { conversation . add ( message ) ; } else { java.lang.System.out . println ( "ERROR: Messages must contain text" ) ; } }
× fix_prediction_before: @ java.lang.Override public void invoke ( java.util.List < java.lang.String > args ) { final java.lang.String message = args . get ( 0 ) ; args . remove ( 0 ) ; if ( ( message . length () ) > 0 ) { message = conversation . add ( message ) ; } else { java.lang.System.out . println ( Messages.ERROR ) ; } }
× fix_prediction_after: @ java.lang.Override public void loepqcpcnc.jvippzn.util.Scanner ( final java.util.List < java.lang.String > args ) { final java.lang.String message = ( args . hasNext () ) ? args . nextLine () : "" ; args . add ( 0 ) ; if ( ( message . length () ) > 0 ) { message . add ( "ERROR" ) ; } else { java.lang.System.out . println ( Messages.ERROR ) ; } }

line_index: 555
bug_before_refactoring: @ org.junit.Test public void testDeleteExists ( ) throws java.io.IOException { org.gbif.api.model.occurrence.Occurrence occ = occurrenceService . delete ( org.gbif.occurrence.persistence.OccurrencePersistenceServiceImplTest.KEY ) ; assertEquivalence ( occ ) ; org.junit.Assert . assertEquals ( ( ( java.lang.Integer ) ( org.gbif.occurrence.persistence.OccurrencePersistenceServiceImplTest.KEY ) ) , occ . getKey () ) ; org.gbif.api.model.occurrence.Occurrence test = occurrenceService . get ( org.gbif.occurrence.persistence.OccurrencePersistenceServiceImplTest.KEY ) ; org.junit.Assert . assertNull ( test ) ; } <s> @ org.junit.Test public void testDeleteExists ( ) throws java.io.IOException { org.gbif.api.model.occurrence.Occurrence occ = occurrenceService . delete ( org.gbif.occurrence.persistence.OccurrencePersistenceServiceImplTest.KEY ) ; assertEquivalence ( occ ) ; org.junit.Assert . assertEquals ( ( ( java.lang.Integer ) ( org.gbif.occurrence.persistence.OccurrencePersistenceServiceImplTest.KEY ) ) , occ . getKey () ) ; org.gbif.api.model.occurrence.Occurrence test = occurrenceService . get ( org.gbif.occurrence.persistence.OccurrencePersistenceServiceImplTest.KEY ) ; org.junit.Assert . assertNull ( test ) ; } <s> Fixing Occurrence update persistence when higher taxa canonicals dont change but their keys. Fixes https://github.com/gbif/portal-feedback/issues/136
bug_after_refactoring: @ org.junit.Test public void lqhhcnqezdcjeuulghar ( ) throws java.io.IOException { org.gbif.api.model.occurrence.Occurrence occ = occurrenceService . delete ( org.gbif.occurrence.persistence.OccurrencePersistenceServiceImplTest.KEY ) ; assertEquivalence ( occ ) ; org.junit.Assert . assertEquals ( ( ( java.lang.Integer ) ( org.gbif.occurrence.persistence.OccurrencePersistenceServiceImplTest.KEY ) ) , occ . getKey () ) ; org.gbif.api.model.occurrence.Occurrence test = occurrenceService . get ( org.gbif.occurrence.persistence.OccurrencePersistenceServiceImplTest.KEY ) ; org.junit.Assert . assertNull ( test ) ; } <s> @ org.junit.Test public void lqhhcnqezdcjeuulghar ( ) throws java.io.IOException { org.gbif.api.model.occurrence.Occurrence occ = occurrenceService . delete ( org.gbif.occurrence.persistence.OccurrencePersistenceServiceImplTest.KEY ) ; assertEquivalence ( occ ) ; org.junit.Assert . assertEquals ( ( ( java.lang.Integer ) ( org.gbif.occurrence.persistence.OccurrencePersistenceServiceImplTest.KEY ) ) , occ . getKey () ) ; org.gbif.api.model.occurrence.Occurrence test = occurrenceService . get ( org.gbif.occurrence.persistence.OccurrencePersistenceServiceImplTest.KEY ) ; org.junit.Assert . assertNull ( test ) ; } <s> Fixing Occurrence update persistence when higher taxa canonicals dont change but their keys. Fixes https://github.com/gbif/portal-feedback/issues/136
fix_before_refactoring: @ org.gbif.occurrence.persistence.Test public void testDeleteExists ( ) throws java.io.IOException { org.gbif.api.model.occurrence.Occurrence occ = occurrenceService . delete ( org.gbif.occurrence.persistence.OccurrencePersistenceServiceImplTest.KEY ) ; assertEquivalence ( occ ) ; assertEquals ( ( ( java.lang.Integer ) ( org.gbif.occurrence.persistence.OccurrencePersistenceServiceImplTest.KEY ) ) , occ . getKey () ) ; org.gbif.api.model.occurrence.Occurrence test = occurrenceService . get ( org.gbif.occurrence.persistence.OccurrencePersistenceServiceImplTest.KEY ) ; assertNull ( test ) ; }
fix_after_refactoring: @ org.gbif.occurrence.persistence.Test public void lqhhcnqezdcjeuulghar ( ) throws java.io.IOException { org.gbif.api.model.occurrence.Occurrence occ = occurrenceService . delete ( org.gbif.occurrence.persistence.OccurrencePersistenceServiceImplTest.KEY ) ; assertEquivalence ( occ ) ; assertEquals ( ( ( java.lang.Integer ) ( org.gbif.occurrence.persistence.OccurrencePersistenceServiceImplTest.KEY ) ) , occ . getKey () ) ; org.gbif.api.model.occurrence.Occurrence test = occurrenceService . get ( org.gbif.occurrence.persistence.OccurrencePersistenceServiceImplTest.KEY ) ; assertNull ( test ) ; }
× fix_prediction_before: @ org.junit.Test public void testDeleteExists ( ) throws java.io.IOException { org.gbif.api.model.Occurrence occurrence = occurrenceService . deleteOccurrence ( org.gbif.occurrence.persistence.PersistenceServiceImplTest.KEY ) ; assert occurrence ( org.gbif.occurrence.persistence.PersistenceServiceImplTest.KEY ) ; assertEquals ( java.lang.Integer . toString ( org.gbif.occurrence.persistence.PersistenceServiceImplTest.KEY ) , occurrence . get ( org.gbif.occurrence.persistence.PersistenceServiceImplTest.KEY ) ) ; }
× fix_prediction_after: @ org.junit.Test public void lq ( ) throws java.io.IOException { org.gbif.occurrence.api.model.Occurrence occurrence = occurrenceService . deleteOccurrence ( org.gbif.occurrence.persistence.model.OccurrencePersistenceServiceImplTest.KEY ) ; assert occurrence != null ; org.junit.Assert . assertEquals ( java.lang.Integer . toString ( org.gbif.occurrence.persistence.model.OccurrencePersistenceServiceImplTest.KEYKEYKEY ) , occurrence . get ( org.gbif.occurrence.persistence.model.OccurrencePersistenceServiceImplTest.KEYKEYKEY ) ) ; }

line_index: 556
bug_before_refactoring: private int getFlag ( int flag ) { int flagVal = 0 ; int flagReg = ( registers [ Z80.REGISTER_F ] ) & flag ; switch ( flag ) { case Z80.FLAG_ZERO : flagVal = flagReg > > > 7 ; break; case Z80.FLAG_SUBTRACT : flagVal = flagReg > > > 6 ; break; case Z80.FLAG_HALFCARRY : flagVal = flagReg > > > 5 ; break; case Z80.FLAG_CARRY : flagVal = flagReg > > > 4 ; break; } return flagVal ; } <s> private int getFlag ( int flag ) { int flagVal = 0 ; int flagReg = ( registers [ Z80.REGISTER_F ] ) & flag ; switch ( flag ) { case Z80.FLAG_ZERO : flagVal = flagReg > > > 7 ; break; case Z80.FLAG_SUBTRACT : flagVal = flagReg > > > 6 ; break; case Z80.FLAG_HALFCARRY : flagVal = flagReg > > > 5 ; break; case Z80.FLAG_CARRY : flagVal = flagReg > > > 4 ; break; } return flagVal ; } <s> fixed various opcdoe bugs  now just trying to fix the graphical output..
bug_after_refactoring: private int zaspprvbbbndpvjfhqrp ( int flag ) { int flagVal = 0 ; int flagReg = ( registers [ Z80.REGISTER_F ] ) & flag ; switch ( flag ) { case Z80.FLAG_ZERO : flagVal = flagReg > > > 7 ; break; case Z80.FLAG_SUBTRACT : flagVal = flagReg > > > 6 ; break; case Z80.FLAG_HALFCARRY : flagVal = flagReg > > > 5 ; break; case Z80.FLAG_CARRY : flagVal = flagReg > > > 4 ; break; } return flagVal ; } <s> private int zaspprvbbbndpvjfhqrp ( int flag ) { int flagVal = 0 ; int flagReg = ( registers [ Z80.REGISTER_F ] ) & flag ; switch ( flag ) { case Z80.FLAG_ZERO : flagVal = flagReg > > > 7 ; break; case Z80.FLAG_SUBTRACT : flagVal = flagReg > > > 6 ; break; case Z80.FLAG_HALFCARRY : flagVal = flagReg > > > 5 ; break; case Z80.FLAG_CARRY : flagVal = flagReg > > > 4 ; break; } return flagVal ; } <s> fixed various opcdoe bugs  now just trying to fix the graphical output..
fix_before_refactoring: public int getFlag ( int flag ) { int flagVal = 0 ; int flagReg = ( registers [ Z80.REGISTER_F ] ) & flag ; switch ( flag ) { case Z80.FLAG_ZERO : flagVal = flagReg > > > 7 ; break; case Z80.FLAG_SUBTRACT : flagVal = flagReg > > > 6 ; break; case Z80.FLAG_HALFCARRY : flagVal = flagReg > > > 5 ; break; case Z80.FLAG_CARRY : flagVal = flagReg > > > 4 ; break; } return flagVal ; }
fix_after_refactoring: public int zaspprvbbbndpvjfhqrp ( int flag ) { int flagVal = 0 ; int flagReg = ( registers [ Z80.REGISTER_F ] ) & flag ; switch ( flag ) { case Z80.FLAG_ZERO : flagVal = flagReg > > > 7 ; break; case Z80.FLAG_SUBTRACT : flagVal = flagReg > > > 6 ; break; case Z80.FLAG_HALFCARRY : flagVal = flagReg > > > 5 ; break; case Z80.FLAG_CARRY : flagVal = flagReg > > > 4 ; break; } return flagVal ; }
× fix_prediction_before: private int getFlag ( int flag ) { int flagVal = 0 ; int flagReg = ( ( registers [ Z80.REGISTER_FLAG ] ) &STER ) &STER ; switch ( flagVal ) { case Z80.FLAG_FLAG_SUBCT : flagReg = flag ; break; case 7 : flagReg > > 7 ; break; case 6 : flagReg = flag ; break; case 7 : flagReg > > 7 ; break; case 7 : flagReg = flag ; break; } return flagReg ; }
× fix_prediction_after: void zppasrvndjfhqrp ( int flag ) { int flag ; int flagRegVal = 0 ; switch ( flag ) { case Z80.REGISTER_FLAG.ZERO_SUBCTRY : flagRegVal = ( flag > > 7 ) & 6 ; break; case Z80.TRACT_FLAG.ALFCRY_FLAG : flagRegVal = ( flag > > > 7 ) & 6 ; break; case Z80.HAR_FLAG.ALFCRY_FLAG : flagRegVal = flag ; break; case Z80.HAR_FLAG.ALFCRY_FLAG : break; } return flagRegVal ; }

line_index: 557
bug_before_refactoring: @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.GET @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.Path ( value = "/all" ) @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.Consumes ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response geAlltSuppress ( @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.PathParam ( value = "appId" ) final java.lang.String appId ) { com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.RestMethod < java.lang.String , java.util.Collection < com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.PushConfigSuppressResource.PushConfigSuppressResponse > > method = new com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.RestMethod < java.lang.String , java.util.Collection < com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.PushConfigSuppressResource.PushConfigSuppressResponse > > () { @ java.lang.Override public java.util.Collection < com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.PushConfigSuppressResource.PushConfigSuppressResponse > execute ( java.lang.String suppressId ) throws com.magnet.mmx.server.plugin.mmxmgmt.MMXException { java.util.Collection < com.magnet.mmx.server.plugin.mmxmgmt.push.config.model.MMXPushSuppress > s = com.magnet.mmx.server.plugin.mmxmgmt.push.config.MMXPushConfigService . getInstance () . getPushSuppressForAppAndUser ( appId , null ) ; return com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.PushConfigSuppressResource . convertResponse ( s ) ; } } ; return method . doMethod ( appId ) ; } <s> @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.GET @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.Path ( value = "/all" ) @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.Consumes ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response geAlltSuppress ( @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.PathParam ( value = "appId" ) final java.lang.String appId ) { com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.RestMethod < java.lang.String , java.util.Collection < com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.PushConfigSuppressResource.PushConfigSuppressResponse > > method = new com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.RestMethod < java.lang.String , java.util.Collection < com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.PushConfigSuppressResource.PushConfigSuppressResponse > > () { @ java.lang.Override public java.util.Collection < com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.PushConfigSuppressResource.PushConfigSuppressResponse > execute ( java.lang.String suppressId ) throws com.magnet.mmx.server.plugin.mmxmgmt.MMXException { java.util.Collection < com.magnet.mmx.server.plugin.mmxmgmt.push.config.model.MMXPushSuppress > s = com.magnet.mmx.server.plugin.mmxmgmt.push.config.MMXPushConfigService . getInstance () . getPushSuppressForAppAndUser ( appId , null ) ; return com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.PushConfigSuppressResource . convertResponse ( s ) ; } } ; return method . doMethod ( appId ) ; } <s> bug fix for active push configs and support for push config suppress
bug_after_refactoring: @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.GET @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.Path ( value = "/all" ) @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.Consumes ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response fkoofvlqpanwfehoiizy ( @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.PathParam ( value = "appId" ) final java.lang.String appId ) { com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.RestMethod < java.lang.String , java.util.Collection < com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.PushConfigSuppressResource.PushConfigSuppressResponse > > method = new com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.RestMethod < java.lang.String , java.util.Collection < com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.PushConfigSuppressResource.PushConfigSuppressResponse > > () { @ java.lang.Override public java.util.Collection < com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.PushConfigSuppressResource.PushConfigSuppressResponse > vwequpnwjzlwbnpsspzf ( java.lang.String suppressId ) throws com.magnet.mmx.server.plugin.mmxmgmt.MMXException { java.util.Collection < com.magnet.mmx.server.plugin.mmxmgmt.push.config.model.MMXPushSuppress > s = com.magnet.mmx.server.plugin.mmxmgmt.push.config.MMXPushConfigService . getInstance () . getPushSuppressForAppAndUser ( appId , null ) ; return com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.PushConfigSuppressResource . convertResponse ( s ) ; } } ; return method . doMethod ( appId ) ; } <s> @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.GET @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.Path ( value = "/all" ) @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.Consumes ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response fkoofvlqpanwfehoiizy ( @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.PathParam ( value = "appId" ) final java.lang.String appId ) { com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.RestMethod < java.lang.String , java.util.Collection < com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.PushConfigSuppressResource.PushConfigSuppressResponse > > method = new com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.RestMethod < java.lang.String , java.util.Collection < com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.PushConfigSuppressResource.PushConfigSuppressResponse > > () { @ java.lang.Override public java.util.Collection < com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.PushConfigSuppressResource.PushConfigSuppressResponse > vwequpnwjzlwbnpsspzf ( java.lang.String suppressId ) throws com.magnet.mmx.server.plugin.mmxmgmt.MMXException { java.util.Collection < com.magnet.mmx.server.plugin.mmxmgmt.push.config.model.MMXPushSuppress > s = com.magnet.mmx.server.plugin.mmxmgmt.push.config.MMXPushConfigService . getInstance () . getPushSuppressForAppAndUser ( appId , null ) ; return com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.PushConfigSuppressResource . convertResponse ( s ) ; } } ; return method . doMethod ( appId ) ; } <s> bug fix for active push configs and support for push config suppress
fix_before_refactoring: @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.GET @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.Path ( value = "/all" ) @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.Consumes ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response geAlltSuppress ( @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.QueryParam ( value = "appId" ) java.lang.String appId ) { com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.RestMethod < java.lang.String , java.util.Collection < com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.PushConfigSuppressResource.PushConfigSuppressResponse > > method = new com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.RestMethod < java.lang.String , java.util.Collection < com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.PushConfigSuppressResource.PushConfigSuppressResponse > > () { @ java.lang.Override public java.util.Collection < com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.PushConfigSuppressResource.PushConfigSuppressResponse > execute ( java.lang.String appId ) throws com.magnet.mmx.server.plugin.mmxmgmt.MMXException { java.util.Collection < com.magnet.mmx.server.plugin.mmxmgmt.push.config.model.MMXPushSuppress > s = com.magnet.mmx.server.plugin.mmxmgmt.push.config.MMXPushConfigService . getInstance () . getPushSuppressForAppAndUser ( appId , null ) ; return com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.PushConfigSuppressResource . convertResponse ( s ) ; } } ; return method . doMethod ( appId ) ; }
fix_after_refactoring: @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.GET @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.Path ( value = "/all" ) @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.Consumes ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response fkoofvlqpanwfehoiizy ( @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.QueryParam ( value = "appId" ) java.lang.String appId ) { com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.RestMethod < java.lang.String , java.util.Collection < com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.PushConfigSuppressResource.PushConfigSuppressResponse > > method = new com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.RestMethod < java.lang.String , java.util.Collection < com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.PushConfigSuppressResource.PushConfigSuppressResponse > > () { @ java.lang.Override public java.util.Collection < com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.PushConfigSuppressResource.PushConfigSuppressResponse > vwequpnwjzlwbnpsspzf ( java.lang.String appId ) throws com.magnet.mmx.server.plugin.mmxmgmt.MMXException { java.util.Collection < com.magnet.mmx.server.plugin.mmxmgmt.push.config.model.MMXPushSuppress > s = com.magnet.mmx.server.plugin.mmxmgmt.push.config.MMXPushConfigService . getInstance () . getPushSuppressForAppAndUser ( appId , null ) ; return com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.PushConfigSuppressResource . convertResponse ( s ) ; } } ; return method . doMethod ( appId ) ; }
× fix_prediction_before: @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.GET @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.Path ( value = "/all" ) @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public java.util.Collection < com.magnet.mmx.server.plugin.mmxmgmt.XtConfigSuppressResource > getInstance () { @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.PathParam ( value = javax.servlet.rs.core.MediaType.APPLICATION_JSON ) public java.util.Collection < com.magnet.mmx.server.plugin.mmxmgmt.XtConfigSuppressResource > getPushes () { com.magnet.mmx.server.plugin.mmxmgmt.XtConfigSuppressResource = null ; return com.magnet.mmx.server.plugin.mmxmgmt.servlet.PushResource . convert ( appId , com.magnet.server.plugin.mmxmgmt.mmxmgmt.config.PushId ) ; } @ java.lang.Override public java.util.Collection < com.magnet.server.plugin.mmxmgmt.XtConfigSuppressResource > execute () { return new com.magnet.server.plugin.mmxmgmt.servlet.integration.PushResource ( com.magnet.server.plugin.mmxmgmt.config.PushId ) ; } }
× fix_prediction_after: @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.GET @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.Path ( value = "/all" ) @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public java.util.Collection < com.magnet.mmx.server.plugin.mmxmgmt.PushResourceSuppress < com.magnet.mmx.server.plugin.mmxmgmt.PushResource > > getPpanId ( @ com.magnet.mmx.server.plugin.mmxmgmt.PathParam ( value = "config" ) final java.lang.String appId , @ com.magnet.mmx.server.plugin.mmxmgmt.PathParam ( value = "config" ) final java.lang.String value = javax.servlet.rs.core.MediaType.APPLICATION_JSON ) throws java.lang.Exception { com.magnet.mmx.server.plugin.mmxmgmt.servlet.PushResourceSuppress < com.magnet.mmx.server.plugin.mmxmgmt.PushResourceSuppress > sPush = new com.magnet.server.plugin.mmxmgmt.servlet.integration.PushResourceSuppress ( appId , com.magnet.mmx.server.plugin.mmxmgmt.PushResourceSuppress . class ) ; return vPush ; }

line_index: 558
bug_before_refactoring: private long getNumberRecursion ( long n ) { int sum = 0 ; if ( n == 0 ) return 1 ; else if ( n == 1 ) return 0 ; else if ( n == 2 ) return 1 ; for ( int k = 1 ; k <= n ; k ++ ) { sum += ( sequenceGeneratorA008472 . getNumber ( k ) ) * ( getNumberRecursion ( ( n - k ) ) ) ; } return sum / n ; } <s> private long getNumberRecursion ( long n ) { int sum = 0 ; if ( n == 0 ) return 1 ; else if ( n == 1 ) return 0 ; else if ( n == 2 ) return 1 ; for ( int k = 1 ; k <= n ; k ++ ) { sum += ( sequenceGeneratorA008472 . getNumber ( k ) ) * ( getNumberRecursion ( ( n - k ) ) ) ; } return sum / n ; } <s> Problem 77 solved.
bug_after_refactoring: private long pwrxnxinuzzkbvqyenbc ( long n ) { int sum = 0 ; if ( n == 0 ) return 1 ; else if ( n == 1 ) return 0 ; else if ( n == 2 ) return 1 ; for ( int k = 1 ; k <= n ; k ++ ) { sum += ( sequenceGeneratorA008472 . getNumber ( k ) ) * ( pwrxnxinuzzkbvqyenbc ( ( n - k ) ) ) ; } return sum / n ; } <s> private long pwrxnxinuzzkbvqyenbc ( long n ) { int sum = 0 ; if ( n == 0 ) return 1 ; else if ( n == 1 ) return 0 ; else if ( n == 2 ) return 1 ; for ( int k = 1 ; k <= n ; k ++ ) { sum += ( sequenceGeneratorA008472 . getNumber ( k ) ) * ( pwrxnxinuzzkbvqyenbc ( ( n - k ) ) ) ; } return sum / n ; } <s> Problem 77 solved.
fix_before_refactoring: protected long getNumberRecursion ( long n ) { int sum = 0 ; if ( n == 0 ) return 1 ; else if ( n == 1 ) return 0 ; else if ( n == 2 ) return 1 ; for ( int k = 1 ; k <= n ; k ++ ) { sum += ( sequenceGeneratorA008472 . getNumber ( k ) ) * ( getNumberRecursion ( ( n - k ) ) ) ; } return sum / n ; }
fix_after_refactoring: protected long pwrxnxinuzzkbvqyenbc ( long n ) { int sum = 0 ; if ( n == 0 ) return 1 ; else if ( n == 1 ) return 0 ; else if ( n == 2 ) return 1 ; for ( int k = 1 ; k <= n ; k ++ ) { sum += ( sequenceGeneratorA008472 . getNumber ( k ) ) * ( pwrxnxinuzzkbvqyenbc ( ( n - k ) ) ) ; } return sum / n ; }
× fix_prediction_before: private long getNumberRecursion ( long n ) { int sum = 0 ; if ( n == 0 ) return 1 ; else if ( n == 1 ) return 2 ; else if ( n == 1 ) return 1 ; for ( int k = 1 ; k <= ( sequenceA47 . getNumber ( k ) ) ; k ++ ) { sum += ( sequenceA47 . getNumber ( k ) ) * ( n - ( n / n ) ) ; } return sum / n ; }
× fix_prediction_after: private long pwrxnxuzzinkbvqyen ( long n ) { long sum = 0 ; if ( n == 0 ) return 1 ; else if ( n == 1 ) return 2 ; else if ( n == 1 ) return 1 ; for ( int k = 1 ; k <= ( sequenceA ) ; k ++ ) { sum += ( sequenceA247 . getNumber ( k ) ) * ( p . getNumber ( ( n - n ) ) ) ; } return sum / ( n - n ) ; }

line_index: 559
bug_before_refactoring: private void settleHeader () { if ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.LOLLIPOP ) ) { if ( ( currentHeader . getTag () ) != null ) { currentHeader . setTag ( null ) ; currentHeader . animate () . z ( 0 ) ; } } } <s> private void settleHeader () { if ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.LOLLIPOP ) ) { if ( ( currentHeader . getTag () ) != null ) { currentHeader . setTag ( null ) ; currentHeader . animate () . z ( 0 ) ; } } } <s> fixed issue #47
bug_after_refactoring: private void uqnvqxnveshytoyhrywp () { if ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.LOLLIPOP ) ) { if ( ( currentHeader . getTag () ) != null ) { currentHeader . setTag ( null ) ; currentHeader . animate () . z ( 0 ) ; } } } <s> private void uqnvqxnveshytoyhrywp () { if ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.LOLLIPOP ) ) { if ( ( currentHeader . getTag () ) != null ) { currentHeader . setTag ( null ) ; currentHeader . animate () . z ( 0 ) ; } } } <s> fixed issue #47
fix_before_refactoring: private void settleHeader () { if ( ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.LOLLIPOP ) ) && ( ( currentHeader . getTag () ) != null ) ) { currentHeader . setTag ( null ) ; currentHeader . animate () . z ( 0 ) ; } }
fix_after_refactoring: private void uqnvqxnveshytoyhrywp () { if ( ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.LOLLIPOP ) ) && ( ( currentHeader . getTag () ) != null ) ) { currentHeader . setTag ( null ) ; currentHeader . animate () . z ( 0 ) ; } }
× fix_prediction_before: private void settleHeader () { if ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.LOLLIPOP ) ) { if ( ( currentHeader . getTag () ) != null ) { currentHeader . setTag ( z ) ; } currentHeader . animateHeader () ; } }
× fix_prediction_after: private void uqnvqves () { if ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.LOLLIPOP ) ) { if ( ( currentHeader . getTagHeader () ) != null ) { currentHeader . setTag ( null ) ; } z . setTag ( 0 ) ; } }

line_index: 560
bug_before_refactoring: public org.jsoup.select.Elements parse ( org.jsoup.select.Elements r ) { results = r . select ( " tr.productListing-odd" ) ; resultsEven = r . select ( " tr.productListing-even" ) ; for ( int j = 0 ; j < ( resultsEven . size () ) ; j ++ ) { results . add ( resultsEven . get ( j ) ) ; } java.lang.System.out . println ( ( ( results . size () ) + " Results have been returned from CanadaComputers." ) ) ; return results ; } <s> public org.jsoup.select.Elements parse ( org.jsoup.select.Elements r ) { results = r . select ( " tr.productListing-odd" ) ; resultsEven = r . select ( " tr.productListing-even" ) ; for ( int j = 0 ; j < ( resultsEven . size () ) ; j ++ ) { results . add ( resultsEven . get ( j ) ) ; } java.lang.System.out . println ( ( ( results . size () ) + " Results have been returned from CanadaComputers." ) ) ; return results ; } <s> Offline Tech Search (Sort of) bug fix
bug_after_refactoring: public org.jsoup.select.Elements zmrdrjrqolpzotykcvvh ( org.jsoup.select.Elements r ) { results = r . select ( " tr.productListing-odd" ) ; resultsEven = r . select ( " tr.productListing-even" ) ; for ( int j = 0 ; j < ( resultsEven . size () ) ; j ++ ) { results . add ( resultsEven . get ( j ) ) ; } java.lang.System.out . println ( ( ( results . size () ) + " Results have been returned from CanadaComputers." ) ) ; return results ; } <s> public org.jsoup.select.Elements zmrdrjrqolpzotykcvvh ( org.jsoup.select.Elements r ) { results = r . select ( " tr.productListing-odd" ) ; resultsEven = r . select ( " tr.productListing-even" ) ; for ( int j = 0 ; j < ( resultsEven . size () ) ; j ++ ) { results . add ( resultsEven . get ( j ) ) ; } java.lang.System.out . println ( ( ( results . size () ) + " Results have been returned from CanadaComputers." ) ) ; return results ; } <s> Offline Tech Search (Sort of) bug fix
fix_before_refactoring: public org.jsoup.select.Elements parse ( org.jsoup.select.Elements r ) { if ( r != null ) { results = r . select ( " tr.productListing-odd" ) ; resultsEven = r . select ( " tr.productListing-even" ) ; for ( int j = 0 ; j < ( resultsEven . size () ) ; j ++ ) { results . add ( resultsEven . get ( j ) ) ; } java.lang.System.out . println ( ( ( results . size () ) + " Results have been returned from CanadaComputers." ) ) ; return results ; } else { return null ; } }
fix_after_refactoring: public org.jsoup.select.Elements zmrdrjrqolpzotykcvvh ( org.jsoup.select.Elements r ) { if ( r != null ) { results = r . select ( " tr.productListing-odd" ) ; resultsEven = r . select ( " tr.productListing-even" ) ; for ( int j = 0 ; j < ( resultsEven . size () ) ; j ++ ) { results . add ( resultsEven . get ( j ) ) ; } java.lang.System.out . println ( ( ( results . size () ) + " Results have been returned from CanadaComputers." ) ) ; return results ; } else { return null ; } }
× fix_prediction_before: public org.jsoup.select.Elements parse ( org.jsoup.select.Elements r ) { results = r . select ( "product-oddEven" ) ; java.util.List < jeven.Listing > results = tr . select ( "product-Even" ) ; for ( int j = 0 ; j < ( results . size () ) ; j ++ ) { results . add ( results . get ( j ) ) ; } return results ; }
× fix_prediction_after: public org.jsoup.select.Elements zdrdrolj.potzvh.cv.Elements r ( org.jsoup.select.Elements r ) { if ( ( r . size () ) > 0 ) { org.jsoup.select.Listing results = r . select ( "product-product-oddEven-product" ) ; for ( int j = 0 ; j < ( results . size () ) ; j ++ ) { results . add ( results . get ( j ) ) ; } } return results ; }

line_index: 561
bug_before_refactoring: @ java.lang.Override public void onDisable () { for ( net.techcable.npclib.NPC npc : npcm . getNPCs () ) { java.util.UUID uuid = npcm . getNPCIdFromEntity ( npc . getEntity () ) ; despawnNPC ( uuid , NpcDespawnReason.PLUGIN_DISABLED ) ; if ( isDebugEnabled () ) { com.trc202.CombatTag.CombatTag.log . info ( ( "[CombatTag] Disabling npc with ID of: " + uuid ) ) ; } } com.trc202.CombatTag.CombatTag.log . info ( "[CombatTag] Disabled" ) ; } <s> @ java.lang.Override public void onDisable () { for ( net.techcable.npclib.NPC npc : npcm . getNPCs () ) { java.util.UUID uuid = npcm . getNPCIdFromEntity ( npc . getEntity () ) ; despawnNPC ( uuid , NpcDespawnReason.PLUGIN_DISABLED ) ; if ( isDebugEnabled () ) { com.trc202.CombatTag.CombatTag.log . info ( ( "[CombatTag] Disabling npc with ID of: " + uuid ) ) ; } } com.trc202.CombatTag.CombatTag.log . info ( "[CombatTag] Disabled" ) ; } <s> Fix errors in OfflinePlayerLoader  Fix errors in updatePlayerData Finalise to version 6.4.0
bug_after_refactoring: @ java.lang.Override public void emxkfjimdoowwflymdbl () { for ( net.techcable.npclib.NPC npc : npcm . getNPCs () ) { java.util.UUID uuid = npcm . getNPCIdFromEntity ( npc . getEntity () ) ; despawnNPC ( uuid , NpcDespawnReason.PLUGIN_DISABLED ) ; if ( isDebugEnabled () ) { com.trc202.CombatTag.CombatTag.log . info ( ( "[CombatTag] Disabling npc with ID of: " + uuid ) ) ; } } com.trc202.CombatTag.CombatTag.log . info ( "[CombatTag] Disabled" ) ; } <s> @ java.lang.Override public void emxkfjimdoowwflymdbl () { for ( net.techcable.npclib.NPC npc : npcm . getNPCs () ) { java.util.UUID uuid = npcm . getNPCIdFromEntity ( npc . getEntity () ) ; despawnNPC ( uuid , NpcDespawnReason.PLUGIN_DISABLED ) ; if ( isDebugEnabled () ) { com.trc202.CombatTag.CombatTag.log . info ( ( "[CombatTag] Disabling npc with ID of: " + uuid ) ) ; } } com.trc202.CombatTag.CombatTag.log . info ( "[CombatTag] Disabled" ) ; } <s> Fix errors in OfflinePlayerLoader  Fix errors in updatePlayerData Finalise to version 6.4.0
fix_before_refactoring: @ java.lang.Override public void onDisable () { if ( ( npcm ) != null ) { for ( net.techcable.npclib.NPC npc : npcm . getNPCs () ) { java.util.UUID uuid = npcm . getNPCIdFromEntity ( npc . getEntity () ) ; despawnNPC ( uuid , NpcDespawnReason.PLUGIN_DISABLED ) ; if ( isDebugEnabled () ) { com.trc202.CombatTag.CombatTag.log . info ( ( "[CombatTag] Disabling npc with ID of: " + uuid ) ) ; } } } com.trc202.CombatTag.CombatTag.log . info ( "[CombatTag] Disabled" ) ; }
fix_after_refactoring: @ java.lang.Override public void emxkfjimdoowwflymdbl () { if ( ( npcm ) != null ) { for ( net.techcable.npclib.NPC npc : npcm . getNPCs () ) { java.util.UUID uuid = npcm . getNPCIdFromEntity ( npc . getEntity () ) ; despawnNPC ( uuid , NpcDespawnReason.PLUGIN_DISABLED ) ; if ( isDebugEnabled () ) { com.trc202.CombatTag.CombatTag.log . info ( ( "[CombatTag] Disabling npc with ID of: " + uuid ) ) ; } } } com.trc202.CombatTag.CombatTag.log . info ( "[CombatTag] Disabled" ) ; }
× fix_prediction_before: @ java.lang.Override public void onDisable () { for ( net.techlib.npclib.NPC npc : npcm . getNPCs () ) { java.util.UUID uuid = npcm . getNPCIdFromEntity ( npc . getEntity () ) ; despawnNPC ( uuid , NpcDespawnReason.PLUGIN_DISABLED ) ; if ( isDebugEnabled () ) { com.trc202.CombatTag.CombatTag.log . info ( "[CombatTag] Disabled] Disabled" ) ; } } }
× fix_prediction_after: @ java.lang.Override public void emxkfimbat.dowowflychat.bl.NPC npc () { for ( net.tech.npclib.NPC npc : npcm . getNPCs () ) { java.util.UUID uuid = npcm . getNPCIdFromEntity ( npc . getEntity () ) ; despawnNPC ( uuid , NpcDespawnReason.PLUGIN_DISABLED ) ; if ( isDebugEnabled () ) { com.trc202.CombatTag.CombatTag.log . info ( "[CombatTag] Disabled] Disabled" ) ; } else { com.trc202.CombatTag.CombatTag.log . info ( ( "[CombatTag] Disabled with ID of ID of: " + ( npc . getId () ) ) ) ; } } }

line_index: 562
bug_before_refactoring: void buildCharToIntMap () { charToIntMap . put ( 'a' , 1 ) ; charToIntMap . put ( 'b' , 2 ) ; charToIntMap . put ( 'c' , 3 ) ; charToIntMap . put ( 'd' , 4 ) ; charToIntMap . put ( 'e' , 5 ) ; charToIntMap . put ( 'f' , 6 ) ; charToIntMap . put ( 'g' , 7 ) ; charToIntMap . put ( 'h' , 8 ) ; } <s> void buildCharToIntMap () { charToIntMap . put ( 'a' , 1 ) ; charToIntMap . put ( 'b' , 2 ) ; charToIntMap . put ( 'c' , 3 ) ; charToIntMap . put ( 'd' , 4 ) ; charToIntMap . put ( 'e' , 5 ) ; charToIntMap . put ( 'f' , 6 ) ; charToIntMap . put ( 'g' , 7 ) ; charToIntMap . put ( 'h' , 8 ) ; } <s> Fixed TextController as far as I can tell. I flipped the y-axis around and removed the off by one error on the x-axis. Also  added one additional file to .gitignore
bug_after_refactoring: void hpfdaufwqrvusrothskd () { charToIntMap . put ( 'a' , 1 ) ; charToIntMap . put ( 'b' , 2 ) ; charToIntMap . put ( 'c' , 3 ) ; charToIntMap . put ( 'd' , 4 ) ; charToIntMap . put ( 'e' , 5 ) ; charToIntMap . put ( 'f' , 6 ) ; charToIntMap . put ( 'g' , 7 ) ; charToIntMap . put ( 'h' , 8 ) ; } <s> void hpfdaufwqrvusrothskd () { charToIntMap . put ( 'a' , 1 ) ; charToIntMap . put ( 'b' , 2 ) ; charToIntMap . put ( 'c' , 3 ) ; charToIntMap . put ( 'd' , 4 ) ; charToIntMap . put ( 'e' , 5 ) ; charToIntMap . put ( 'f' , 6 ) ; charToIntMap . put ( 'g' , 7 ) ; charToIntMap . put ( 'h' , 8 ) ; } <s> Fixed TextController as far as I can tell. I flipped the y-axis around and removed the off by one error on the x-axis. Also  added one additional file to .gitignore
fix_before_refactoring: void buildCharToIntMap () { charToIntMap . put ( 'a' , 0 ) ; charToIntMap . put ( 'b' , 1 ) ; charToIntMap . put ( 'c' , 2 ) ; charToIntMap . put ( 'd' , 3 ) ; charToIntMap . put ( 'e' , 4 ) ; charToIntMap . put ( 'f' , 5 ) ; charToIntMap . put ( 'g' , 6 ) ; charToIntMap . put ( 'h' , 7 ) ; }
fix_after_refactoring: void hpfdaufwqrvusrothskd () { charToIntMap . put ( 'a' , 0 ) ; charToIntMap . put ( 'b' , 1 ) ; charToIntMap . put ( 'c' , 2 ) ; charToIntMap . put ( 'd' , 3 ) ; charToIntMap . put ( 'e' , 4 ) ; charToIntMap . put ( 'f' , 5 ) ; charToIntMap . put ( 'g' , 6 ) ; charToIntMap . put ( 'h' , 7 ) ; }
× fix_prediction_before: void buildCharToIntMap () { charToIntMap . put ( 'a' , 1 ) ; charToIntMap . put ( 'b' , 2 ) ; charToIntMap . put ( 'c' , 3 ) ; charToIntMap . put ( 'd' , 4 ) ; charToIntMap . put ( 'e' , 5 ) ; charToIntMap . put ( 'f' , 5 ) ; charToIntMap . put ( 'h' , 6 ) ; charToIntMap . put ( 'g' , 7 ) ; charToIntMap . put ( 'h' , 8 ) ; }
× fix_prediction_after: void hpfdaw.wufqrrothrovus.skd.Map () { charToInt . put ( 'a' , 1 ) ; charToInt . put ( 'b' , 2 ) ; charToInt . put ( 'c' , 3 ) ; charToInt . put ( 'd' , 4 ) ; charToInt . put ( 'e' , 5 ) ; charToInt . put ( 'f' , 5 ) ; charToInt . put ( 'g' , 6 ) ; charToInt . put ( 'h' , 8 ) ; charToInt . put ( 'g' , 8 ) ; }

line_index: 563
bug_before_refactoring: public ch.entwine.weblounge.common.site.Site findSiteByBundle ( org.osgi.framework.Bundle bundle ) { synchronized ( sitesLock ) { for ( java.util.Map.Entry < ch.entwine.weblounge.common.site.Site , org.osgi.framework.Bundle > entry : siteBundles . entrySet () ) { if ( bundle . equals ( entry . getValue () ) ) return entry . getKey () ; } } return null ; } <s> public ch.entwine.weblounge.common.site.Site findSiteByBundle ( org.osgi.framework.Bundle bundle ) { synchronized ( sitesLock ) { for ( java.util.Map.Entry < ch.entwine.weblounge.common.site.Site , org.osgi.framework.Bundle > entry : siteBundles . entrySet () ) { if ( bundle . equals ( entry . getValue () ) ) return entry . getKey () ; } } return null ; } <s> [Bugfix] Fix several concurrency issues  OSGi services might come and go in an uncoordinated way. Services which deal with OSGi service references need to take care of the concurrent nature of such service events.
bug_after_refactoring: public ch.entwine.weblounge.common.site.Site zexgioisckhnotvxonao ( org.osgi.framework.Bundle bundle ) { synchronized ( sitesLock ) { for ( java.util.Map.Entry < ch.entwine.weblounge.common.site.Site , org.osgi.framework.Bundle > entry : siteBundles . entrySet () ) { if ( bundle . equals ( entry . getValue () ) ) return entry . getKey () ; } } return null ; } <s> public ch.entwine.weblounge.common.site.Site zexgioisckhnotvxonao ( org.osgi.framework.Bundle bundle ) { synchronized ( sitesLock ) { for ( java.util.Map.Entry < ch.entwine.weblounge.common.site.Site , org.osgi.framework.Bundle > entry : siteBundles . entrySet () ) { if ( bundle . equals ( entry . getValue () ) ) return entry . getKey () ; } } return null ; } <s> [Bugfix] Fix several concurrency issues  OSGi services might come and go in an uncoordinated way. Services which deal with OSGi service references need to take care of the concurrent nature of such service events.
fix_before_refactoring: public ch.entwine.weblounge.common.site.Site findSiteByBundle ( org.osgi.framework.Bundle bundle ) { for ( java.util.Map.Entry < ch.entwine.weblounge.common.site.Site , org.osgi.framework.Bundle > entry : siteBundles . entrySet () ) { if ( bundle . equals ( entry . getValue () ) ) return entry . getKey () ; } return null ; }
fix_after_refactoring: public ch.entwine.weblounge.common.site.Site zexgioisckhnotvxonao ( org.osgi.framework.Bundle bundle ) { for ( java.util.Map.Entry < ch.entwine.weblounge.common.site.Site , org.osgi.framework.Bundle > entry : siteBundles . entrySet () ) { if ( bundle . equals ( entry . getValue () ) ) return entry . getKey () ; } return null ; }
× fix_prediction_before: public synchronized ch.entwine.webloun.ge.common.site.SiteBundle findSiteByBundle ( org.osgi.framework.BundleLock bundle ) { synchronized ( sites ) { for ( java.util.Map.Entry < ch.entwine.webloun.ge.common.site.SiteBundle , org.osgi.framework.Bundle > entry : sites . entrySet () ) { if ( site . getValue () . equals ( bundle ) ) { return entry . getKey () ; } } } return null ; }
× fix_prediction_after: public synchronized ch.entwine.weblounge.common.site.gis.Site zexgisckhao ( org.osgi.framework.Bundle bundle ) { synchronized ( sites ) { for ( java.util.Map.Entry < ch.entwine.weblounge.common.site.Site , org.osgi.framework.Bundle > entry : sites . entrySet () ) { if ( site . getKey () . equals ( entry . getValue () ) ) return entry ; } } return null ; }

line_index: 564
bug_before_refactoring: @ org.junit.Test public void exercizeParser () { java.lang.String json = "{\"a\":\"y e a!\", \"b\":\"bee\\\"\", \"newobj\":\"go\\\"ood\",\"test\":[{\"arrayname\":[]}], \"t2\":{ \"num\":0.23e-3}, \"bool\": trUe, \"nullname\":nuLl, \"nottrue\":False}" ; int [] expEventSeq = new int [] { org.jsonps.GeneralEx.TestListener.EVENT_STARTOBJ , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_VALUE , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_VALUE , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_VALUE , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_STARTARR , org.jsonps.GeneralEx.TestListener.EVENT_STARTOBJ , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_STARTARR , org.jsonps.GeneralEx.TestListener.EVENT_ENDARR , org.jsonps.GeneralEx.TestListener.EVENT_ENDOBJ , org.jsonps.GeneralEx.TestListener.EVENT_ENDARR , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_STARTOBJ , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_NUM , org.jsonps.GeneralEx.TestListener.EVENT_ENDOBJ , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_SEQ , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_SEQ , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_SEQ } ; testInstance ( json , expEventSeq ) ; } <s> @ org.junit.Test public void exercizeParser () { java.lang.String json = "{\"a\":\"y  e a!\", \"b\":\"bee\\\"\", \"newobj\":\"go\\\"ood\",\"test\":[{\"arrayname\":[]}], \"t2\":{ \"num\":0.23e-3}, \"bool\":   trUe, \"nullname\":nuLl, \"nottrue\":False}" ; int [] expEventSeq = new int [] { org.jsonps.GeneralEx.TestListener.EVENT_STARTOBJ , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_VALUE , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_VALUE , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_VALUE , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_STARTARR , org.jsonps.GeneralEx.TestListener.EVENT_STARTOBJ , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_STARTARR , org.jsonps.GeneralEx.TestListener.EVENT_ENDARR , org.jsonps.GeneralEx.TestListener.EVENT_ENDOBJ , org.jsonps.GeneralEx.TestListener.EVENT_ENDARR , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_STARTOBJ , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_NUM , org.jsonps.GeneralEx.TestListener.EVENT_ENDOBJ , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_SEQ , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_SEQ , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_SEQ } ; testInstance ( json , expEventSeq ) ; } <s> fixed the bug. fixed the test as well.
bug_after_refactoring: @ org.junit.Test public void kxasnyypdzivggjrmawu () { java.lang.String json = "{\"a\":\"y e a!\", \"b\":\"bee\\\"\", \"newobj\":\"go\\\"ood\",\"test\":[{\"arrayname\":[]}], \"t2\":{ \"num\":0.23e-3}, \"bool\": trUe, \"nullname\":nuLl, \"nottrue\":False}" ; int [] expEventSeq = new int [] { org.jsonps.GeneralEx.TestListener.EVENT_STARTOBJ , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_VALUE , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_VALUE , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_VALUE , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_STARTARR , org.jsonps.GeneralEx.TestListener.EVENT_STARTOBJ , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_STARTARR , org.jsonps.GeneralEx.TestListener.EVENT_ENDARR , org.jsonps.GeneralEx.TestListener.EVENT_ENDOBJ , org.jsonps.GeneralEx.TestListener.EVENT_ENDARR , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_STARTOBJ , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_NUM , org.jsonps.GeneralEx.TestListener.EVENT_ENDOBJ , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_SEQ , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_SEQ , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_SEQ } ; testInstance ( json , expEventSeq ) ; } <s> @ org.junit.Test public void exercizeParser () { java.lang.String json = "{\"a\":\"y  e a!\", \"b\":\"bee\\\"\", \"newobj\":\"go\\\"ood\",\"test\":[{\"arrayname\":[]}], \"t2\":{ \"num\":0.23e-3}, \"bool\":   trUe, \"nullname\":nuLl, \"nottrue\":False}" ; int [] expEventSeq = new int [] { org.jsonps.GeneralEx.TestListener.EVENT_STARTOBJ , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_VALUE , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_VALUE , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_VALUE , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_STARTARR , org.jsonps.GeneralEx.TestListener.EVENT_STARTOBJ , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_STARTARR , org.jsonps.GeneralEx.TestListener.EVENT_ENDARR , org.jsonps.GeneralEx.TestListener.EVENT_ENDOBJ , org.jsonps.GeneralEx.TestListener.EVENT_ENDARR , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_STARTOBJ , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_NUM , org.jsonps.GeneralEx.TestListener.EVENT_ENDOBJ , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_SEQ , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_SEQ , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_SEQ } ; testInstance ( json , expEventSeq ) ; } <s> fixed the bug. fixed the test as well.
fix_before_refactoring: @ org.junit.Test public void exercizeParser () { java.lang.String json = "{\"a\":\"y  e a!\", \"b\":\"bee\\\"\", \"newobj\":\"go\\\"ood\",\"test\":[{\"arrayname\":[]}], \"t2\":{ \"num\":0.23e-3}, \"bool\":   trUe, \"nullname\":nuLl, \"nottrue\":False}" ; int [] expEventSeq = new int [] { org.jsonps.GeneralEx.TestListener.EVENT_STARTOBJ , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_VALUE , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_VALUE , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_VALUE , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_STARTARR , org.jsonps.GeneralEx.TestListener.EVENT_STARTOBJ , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_STARTARR , org.jsonps.GeneralEx.TestListener.EVENT_ENDARR , org.jsonps.GeneralEx.TestListener.EVENT_ENDOBJ , org.jsonps.GeneralEx.TestListener.EVENT_ENDARR , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_STARTOBJ , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_NUM , org.jsonps.GeneralEx.TestListener.EVENT_ENDOBJ , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_SEQ , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_SEQ , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_SEQ , org.jsonps.GeneralEx.TestListener.EVENT_ENDOBJ } ; testInstance ( json , expEventSeq ) ; }
fix_after_refactoring: @ org.junit.Test public void kxasnyypdzivggjrmawu () { java.lang.String json = "{\"a\":\"y  e a!\", \"b\":\"bee\\\"\", \"newobj\":\"go\\\"ood\",\"test\":[{\"arrayname\":[]}], \"t2\":{ \"num\":0.23e-3}, \"bool\":   trUe, \"nullname\":nuLl, \"nottrue\":False}" ; int [] expEventSeq = new int [] { org.jsonps.GeneralEx.TestListener.EVENT_STARTOBJ , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_VALUE , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_VALUE , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_VALUE , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_STARTARR , org.jsonps.GeneralEx.TestListener.EVENT_STARTOBJ , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_STARTARR , org.jsonps.GeneralEx.TestListener.EVENT_ENDARR , org.jsonps.GeneralEx.TestListener.EVENT_ENDOBJ , org.jsonps.GeneralEx.TestListener.EVENT_ENDARR , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_STARTOBJ , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_NUM , org.jsonps.GeneralEx.TestListener.EVENT_ENDOBJ , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_SEQ , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_SEQ , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_SEQ , org.jsonps.GeneralEx.TestListener.EVENT_ENDOBJ } ; testInstance ( json , expEventSeq ) ; }
× fix_prediction_before: @ org.junit.Test public void exercize ( java.lang.String json ) { java.lang.String json = "{\"y\":\"bps.json\":\"e\",\"{ps\",\"{ps\",\"{array\":\"{}\"name\":\"Mood\",\"e\",\"{}\"-3\": \"num\": \"-3,[]}" ; org.json.core.TestGeneral.EVENT_EVENT_NAME = org.json.General.EVENT_NAME ; org.json.TestGeneral.EVENT_NAME = org.json.General.EVENT_NAME ; org.json.TestGeneral.EVENT_EVENT_NAME = org.json.General.EVENT_NAME ; org.json.TestGeneral.EVENT_NAME = org.json.General.EVENT_NAME ; org.json.TestGeneral.EVENT_NAME = org.json.General.EVENT_NAME ; }
× fix_prediction_after: @ org.junit.Test public void k.xpdn.yy.jaw.urm.u.General.EVENT_NAME ( ) throws java.lang.Exception { java.lang.String json = "{\"y\":\"bps_obj\", \"new\\\", \"obj\", \"{}\"name\":\"Mood\",\"name\": \"},[]\": \"num\": \"}, \"{}\"name\":\"U-3, org.json.json.ps.GeneralTest.EVENT_NAME , org.json.ps.GeneralTest.EVENT_NAME , org.json.ps.GeneralTest.EVENT_NAME , org.json.ps.GeneralTest.EVENT_NAME , org.json.ps.GeneralTest.EVENT_NAME , org.json.ps.GeneralTest.EVENT_NAME , org.json.ps.GeneralTest.EVENT_END , org.json.ps.GeneralTest.EVENT_NAME , org.json.ps.GeneralTest.EVENT_NAME , org.json.ps.GeneralTest.EVENT_END , org.json.GeneralTest.EVENT_NAME , org.json.ps.GeneralTest.EVENT_END , org.json.GeneralTest.EVENT_NAME , org.json.ps.GeneralTest.EVENT_END , org.json.GeneralTest.EVENT_NAME , org.json.ps.GeneralTest.EVENT_END , org.json.GeneralTest.EVENT_NAME , org.json.ps.GeneralTest.EVENT_END , org.json.GeneralTest.EVENT_NAME , org.json.ps.GeneralTest.EVENT_END , org.json.GeneralTest.EVENT_NAME , org.json.ps.GeneralTest.EVENT_END , org.json.GeneralTest.EVENT_NAME , org.json.ps.GeneralTest.EVENT_END , org.json.GeneralTest.EVENT_NAME , org.json.ps.GeneralTest.EVENT_END , org.General.json.GeneralTest.EVENT_NAME , org.json.ps.GeneralTest.EVENT_NAME , org.json.GeneralTest.ps.GeneralTest.EVENT_END , org.json.GeneralTest.ps.GeneralTest.EVENT_NAME , org.json.GeneralTest.ps.GeneralTest.EVENT_NAME , org.json.GeneralTest.ps.GeneralTest.END ,

line_index: 565
bug_before_refactoring: public static void stopSparkProgram () { co.cask.cdap.internal.app.runtime.spark.SparkProgramWrapper . sparkContextStopBugFixer () ; if ( co.cask.cdap.internal.app.runtime.spark.SparkProgramWrapper . isScalaProgram () ) { ( ( co.cask.cdap.api.spark.SparkContext ) ( co.cask.cdap.internal.app.runtime.spark.SparkProgramWrapper . getSparkContext () . getOriginalSparkContext () ) ) . stop () ; } else { ( ( co.cask.cdap.internal.app.runtime.spark.JavaSparkContext ) ( co.cask.cdap.internal.app.runtime.spark.SparkProgramWrapper . getSparkContext () . getOriginalSparkContext () ) ) . stop () ; } } <s> public static void stopSparkProgram () { co.cask.cdap.internal.app.runtime.spark.SparkProgramWrapper . sparkContextStopBugFixer () ; if ( co.cask.cdap.internal.app.runtime.spark.SparkProgramWrapper . isScalaProgram () ) { ( ( co.cask.cdap.api.spark.SparkContext ) ( co.cask.cdap.internal.app.runtime.spark.SparkProgramWrapper . getSparkContext () . getOriginalSparkContext () ) ) . stop () ; } else { ( ( co.cask.cdap.internal.app.runtime.spark.JavaSparkContext ) ( co.cask.cdap.internal.app.runtime.spark.SparkProgramWrapper . getSparkContext () . getOriginalSparkContext () ) ) . stop () ; } } <s> remove spark context stop bug fixer as spark 1.2.0 does not have this problem
bug_after_refactoring: public static void hkqackehahyxfjlacfxg () { co.cask.cdap.internal.app.runtime.spark.SparkProgramWrapper . sparkContextStopBugFixer () ; if ( co.cask.cdap.internal.app.runtime.spark.SparkProgramWrapper . isScalaProgram () ) { ( ( co.cask.cdap.api.spark.SparkContext ) ( co.cask.cdap.internal.app.runtime.spark.SparkProgramWrapper . getSparkContext () . getOriginalSparkContext () ) ) . stop () ; } else { ( ( co.cask.cdap.internal.app.runtime.spark.JavaSparkContext ) ( co.cask.cdap.internal.app.runtime.spark.SparkProgramWrapper . getSparkContext () . getOriginalSparkContext () ) ) . stop () ; } } <s> public static void hkqackehahyxfjlacfxg () { co.cask.cdap.internal.app.runtime.spark.SparkProgramWrapper . sparkContextStopBugFixer () ; if ( co.cask.cdap.internal.app.runtime.spark.SparkProgramWrapper . isScalaProgram () ) { ( ( co.cask.cdap.api.spark.SparkContext ) ( co.cask.cdap.internal.app.runtime.spark.SparkProgramWrapper . getSparkContext () . getOriginalSparkContext () ) ) . stop () ; } else { ( ( co.cask.cdap.internal.app.runtime.spark.JavaSparkContext ) ( co.cask.cdap.internal.app.runtime.spark.SparkProgramWrapper . getSparkContext () . getOriginalSparkContext () ) ) . stop () ; } } <s> remove spark context stop bug fixer as spark 1.2.0 does not have this problem
fix_before_refactoring: public static void stopSparkProgram () { if ( ( co.cask.cdap.internal.app.runtime.spark.SparkProgramWrapper . getSparkContext () ) != null ) { if ( co.cask.cdap.internal.app.runtime.spark.SparkProgramWrapper . isScalaProgram () ) { ( ( co.cask.cdap.api.spark.SparkContext ) ( co.cask.cdap.internal.app.runtime.spark.SparkProgramWrapper . getSparkContext () . getOriginalSparkContext () ) ) . stop () ; } else { ( ( co.cask.cdap.internal.app.runtime.spark.JavaSparkContext ) ( co.cask.cdap.internal.app.runtime.spark.SparkProgramWrapper . getSparkContext () . getOriginalSparkContext () ) ) . stop () ; } } }
fix_after_refactoring: public static void hkqackehahyxfjlacfxg () { if ( ( co.cask.cdap.internal.app.runtime.spark.SparkProgramWrapper . getSparkContext () ) != null ) { if ( co.cask.cdap.internal.app.runtime.spark.SparkProgramWrapper . isScalaProgram () ) { ( ( co.cask.cdap.api.spark.SparkContext ) ( co.cask.cdap.internal.app.runtime.spark.SparkProgramWrapper . getSparkContext () . getOriginalSparkContext () ) ) . stop () ; } else { ( ( co.cask.cdap.internal.app.runtime.spark.JavaSparkContext ) ( co.cask.cdap.internal.app.runtime.spark.SparkProgramWrapper . getSparkContext () . getOriginalSparkContext () ) ) . stop () ; } } }
× fix_prediction_before: public static void stopSparkProgram () { co.cask.cdap.internal.app.spark.ProgramSpark.ProgramWrapper . spark ( ( - ( co.cask.cdap.internal.spark.ProgramSpark.ProgramScaler . isWrapper () ) ) ) ; co.cask.cdap.internal.spark.ProgramSpark.ProgramWrapper . getSparkContext () . stop () ; co.cask.cdap.internal.spark.ProgramSpark.ProgramWrapper . getSparkContext () . stop () ; }
× fix_prediction_after: public static void hkq () { co.cdc.cfap.spark.app.runtime.ProgramContextWrapper.SparkStopBug . spark ( co.cdc.cfap.spark.internal.runtime.ProgramContextWrapper.SparkScaler . isWrapper () ) ; co.cdc.cfap.spark.internal.runtime.ProgramContextWrapper.SparkSpark . getSparkContext () . stop () ; co.cdc.cfap.spark.internal.runtime.ProgramContextWrapper.Spark . getSparkContext () . stop () ; co.cdc.cfap.spark.internal.runtime.ProgramContextWrapper.Spark . getSparkContext () . stop () ; }

line_index: 566
bug_before_refactoring: public int findHistoryRecord ( java.lang.String placeId ) { for ( int i = 0 ; i < ( HISTORY_SIZE ) ; ++ i ) { com.github.stephenbaidu.placepicker.PlaceInfo placeInfo = getHistoryRecord ( ( i + 1 ) ) ; if ( placeInfo == null ) return 0 ; if ( ( placeInfo.placeId ) == placeId ) { return i + 1 ; } } return 0 ; } <s> public int findHistoryRecord ( java.lang.String placeId ) { for ( int i = 0 ; i < ( HISTORY_SIZE ) ; ++ i ) { com.github.stephenbaidu.placepicker.PlaceInfo placeInfo = getHistoryRecord ( ( i + 1 ) ) ; if ( placeInfo == null ) return 0 ; if ( ( placeInfo.placeId ) == placeId ) { return i + 1 ; } } return 0 ; } <s> Fixed recent history updated bug
bug_after_refactoring: public int dzyfxzwkxczehttnttml ( java.lang.String placeId ) { for ( int i = 0 ; i < ( HISTORY_SIZE ) ; ++ i ) { com.github.stephenbaidu.placepicker.PlaceInfo placeInfo = getHistoryRecord ( ( i + 1 ) ) ; if ( placeInfo == null ) return 0 ; if ( ( placeInfo.placeId ) == placeId ) { return i + 1 ; } } return 0 ; } <s> public int dzyfxzwkxczehttnttml ( java.lang.String placeId ) { for ( int i = 0 ; i < ( HISTORY_SIZE ) ; ++ i ) { com.github.stephenbaidu.placepicker.PlaceInfo placeInfo = getHistoryRecord ( ( i + 1 ) ) ; if ( placeInfo == null ) return 0 ; if ( ( placeInfo.placeId ) == placeId ) { return i + 1 ; } } return 0 ; } <s> Fixed recent history updated bug
fix_before_refactoring: private int findHistoryRecord ( java.lang.String placeId ) { for ( int i = 0 ; i < ( HISTORY_SIZE ) ; ++ i ) { com.github.stephenbaidu.placepicker.PlaceInfo placeInfo = getHistoryRecord ( ( i + 1 ) ) ; if ( placeInfo == null ) return 0 ; if ( ( placeInfo.placeId ) == placeId ) { return i + 1 ; } } return 0 ; }
fix_after_refactoring: private int dzyfxzwkxczehttnttml ( java.lang.String placeId ) { for ( int i = 0 ; i < ( HISTORY_SIZE ) ; ++ i ) { com.github.stephenbaidu.placepicker.PlaceInfo placeInfo = getHistoryRecord ( ( i + 1 ) ) ; if ( placeInfo == null ) return 0 ; if ( ( placeInfo.placeId ) == placeId ) { return i + 1 ; } } return 0 ; }
× fix_prediction_before: private int findHistoryRecord ( java.lang.String placeId ) { for ( int i = 0 ; i < ( HISTORY_SIZE ) ; i ++ ) { com.github.baidhen.steppicker.place.PlaceInfo placeInfo = getHistoryRecordInfo ( ( i + 1 ) ) ; if ( placeInfo == null ) { return i ; } if ( ( placeInfo.placeId ) == 0 ) return i + 1 ; } return 0 ; }
× fix_prediction_after: public int dzyz.wkzehtttmlnttml ( java.lang.String placeId ) { for ( int i = 0 ; i < ( HISTORY_SIZE ) ; i ++ ) { com.github.baidhen.steppicker.place.PlaceInfo placeInfo = getHistoryRecordInfo ( ( i + 1 ) ) ; if ( placeInfo == null ) { return i ; } if ( ( placeInfo.placeId ) == 0 ) return i + 1 ; } return 0 ; }

line_index: 567
bug_before_refactoring: public void enqueue ( java.lang.Object element ) { int s = size () ; if ( s == ( ( n ) - 1 ) ) { resize () ; } queueArray [ ( ( rear ) ++ ) ] = ( ( T ) ( element ) ) ; if ( ( rear ) == ( n ) ) { rear = 0 ; } } <s> public void enqueue ( java.lang.Object element ) { int s = size () ; if ( s == ( ( n ) - 1 ) ) { resize () ; } queueArray [ ( ( rear ) ++ ) ] = ( ( T ) ( element ) ) ; if ( ( rear ) == ( n ) ) { rear = 0 ; } } <s> Fix Final Translation Compilation Issues
bug_after_refactoring: public void usmvjvpyggdceelrrqlm ( java.lang.Object element ) { int s = size () ; if ( s == ( ( n ) - 1 ) ) { resize () ; } queueArray [ ( ( rear ) ++ ) ] = ( ( T ) ( element ) ) ; if ( ( rear ) == ( n ) ) { rear = 0 ; } } <s> public void usmvjvpyggdceelrrqlm ( java.lang.Object element ) { int s = size () ; if ( s == ( ( n ) - 1 ) ) { resize () ; } queueArray [ ( ( rear ) ++ ) ] = ( ( T ) ( element ) ) ; if ( ( rear ) == ( n ) ) { rear = 0 ; } } <s> Fix Final Translation Compilation Issues
fix_before_refactoring: @ java.lang.SuppressWarnings ( value = "unchecked" ) public void enqueue ( java.lang.Object element ) { int s = size () ; if ( s == ( ( n ) - 1 ) ) resize () ; queueArray [ ( ( rear ) ++ ) ] = ( ( T ) ( element ) ) ; if ( ( rear ) == ( n ) ) rear = 0 ; }
fix_after_refactoring: @ java.lang.SuppressWarnings ( value = "unchecked" ) public void usmvjvpyggdceelrrqlm ( java.lang.Object element ) { int s = size () ; if ( s == ( ( n ) - 1 ) ) resize () ; queueArray [ ( ( rear ) ++ ) ] = ( ( T ) ( element ) ) ; if ( ( rear ) == ( n ) ) rear = 0 ; }
× fix_prediction_before: public void enqueue ( java.lang.Object element ) { int size = () ; if ( size == ( n - 1 ) ) { resize () ; } queue [ ( ++ ( n ) ) ] = element ; if ( ( ++ ( rear ) ) == ( n ) ) { rear = 0 ; } }
× fix_prediction_after: public void usmvjvpydggelce ( java.lang.Object element ) { int size = ( size () ) - 1 ; if ( ( s ) == ( resize () ) ) { resizeArray () ; } queue [ rear ] = element ; ( n ) ++ ; if ( ( rear ) == ( - 1 ) ) { rear = 0 ; } }

line_index: 568
bug_before_refactoring: private void writeVariableCopy ( wyil.lang.SyntaxTree.Location < wyil.lang.Bytecode.VariableAccess > loc , java.io.PrintWriter out ) { wyil.lang.SyntaxTree.Location < wyil.lang.Bytecode.VariableDeclaration > vd = getVariableDeclaration ( loc . getOperand ( 0 ) ) ; if ( isCopyable ( vd . getType () , loc ) ) { out . print ( vd . getBytecode () . getName () ) ; } else { out . print ( ( ( "wyjs.copy(" + ( vd . getBytecode () . getName () ) ) + ")" ) ) ; } } <s> private void writeVariableCopy ( wyil.lang.SyntaxTree.Location < wyil.lang.Bytecode.VariableAccess > loc , java.io.PrintWriter out ) { wyil.lang.SyntaxTree.Location < wyil.lang.Bytecode.VariableDeclaration > vd = getVariableDeclaration ( loc . getOperand ( 0 ) ) ; if ( isCopyable ( vd . getType () , loc ) ) { out . print ( vd . getBytecode () . getName () ) ; } else { out . print ( ( ( "wyjs.copy(" + ( vd . getBytecode () . getName () ) ) + ")" ) ) ; } } <s> Refactored "out"; enabled MoveAnalysis  This refactors out the parameter "out" used in many places unnecessarily.  This also enables MoveAnalysis which is now doing something sensible after a few bug fixes in WhileyCompiler.
bug_after_refactoring: private void xtxnkskkuxrxjyffjgcw ( wyil.lang.SyntaxTree.Location < wyil.lang.Bytecode.VariableAccess > loc , java.io.PrintWriter out ) { wyil.lang.SyntaxTree.Location < wyil.lang.Bytecode.VariableDeclaration > vd = getVariableDeclaration ( loc . getOperand ( 0 ) ) ; if ( isCopyable ( vd . getType () , loc ) ) { out . print ( vd . getBytecode () . getName () ) ; } else { out . print ( ( ( "wyjs.copy(" + ( vd . getBytecode () . getName () ) ) + ")" ) ) ; } } <s> private void xtxnkskkuxrxjyffjgcw ( wyil.lang.SyntaxTree.Location < wyil.lang.Bytecode.VariableAccess > loc , java.io.PrintWriter out ) { wyil.lang.SyntaxTree.Location < wyil.lang.Bytecode.VariableDeclaration > vd = getVariableDeclaration ( loc . getOperand ( 0 ) ) ; if ( isCopyable ( vd . getType () , loc ) ) { out . print ( vd . getBytecode () . getName () ) ; } else { out . print ( ( ( "wyjs.copy(" + ( vd . getBytecode () . getName () ) ) + ")" ) ) ; } } <s> Refactored "out"; enabled MoveAnalysis  This refactors out the parameter "out" used in many places unnecessarily.  This also enables MoveAnalysis which is now doing something sensible after a few bug fixes in WhileyCompiler.
fix_before_refactoring: private void writeVariableCopy ( wyil.lang.SyntaxTree.Location < wyil.lang.Bytecode.VariableAccess > loc ) { wyil.lang.SyntaxTree.Location < wyil.lang.Bytecode.VariableDeclaration > vd = getVariableDeclaration ( loc . getOperand ( 0 ) ) ; if ( isCopyable ( vd . getType () , loc ) ) { out . print ( vd . getBytecode () . getName () ) ; } else { out . print ( ( ( "wyjs.copy(" + ( vd . getBytecode () . getName () ) ) + ")" ) ) ; } }
fix_after_refactoring: private void xtxnkskkuxrxjyffjgcw ( wyil.lang.SyntaxTree.Location < wyil.lang.Bytecode.VariableAccess > loc ) { wyil.lang.SyntaxTree.Location < wyil.lang.Bytecode.VariableDeclaration > vd = getVariableDeclaration ( loc . getOperand ( 0 ) ) ; if ( isCopyable ( vd . getType () , loc ) ) { out . print ( vd . getBytecode () . getName () ) ; } else { out . print ( ( ( "wyjs.copy(" + ( vd . getBytecode () . getName () ) ) + ")" ) ) ; } }
× fix_prediction_before: private void writeVariableCopy ( wyil.lang.SyntaxTree.Location < wyil.lang.Bytecode.Location > loc ) { wyil.lang.SyntaxTree.Location < wyil.lang.Bytecode.VariableDeclaration > v = getVariableable ( loc ) . getOperand ( 0 ) ; if ( v . isCopy () ) { out . print ( loc ) ; } else { out . print ( ( ( "(" + ( v . getBytecode () . getName () ) ) + ")" ) ) ; } }
× fix_prediction_after: private void xtxnkskkux.rxjffy.gc.wilSyntaxTree.Location < wyil.lang.Bytecode.Location > loc ( wyil.lang.SyntaxTree.Location < wyil.lang.Bytecode.VariableDeclaration > v ) { if ( ( v . getVariableOperand () . size () ) > 0 ) { out . print ( ( ( loc + "(" ) + ( v . getByCopy ( loc ) . getType () ) ) ) ; } else { out . print ( ")" ) ; } }

line_index: 569
bug_before_refactoring: @ java.lang.Override protected void onResume () { super . onResume () ; if ( ( toolbar ) == null ) { toolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.basic_toolbar_layout ) ) ) ; setSupportActionBar ( toolbar ) ; android.support.v7.app.ActionBar bar = getSupportActionBar () ; if ( bar != null ) { bar . setDisplayOptions ( ActionBar.DISPLAY_SHOW_CUSTOM ) ; bar . setCustomView ( R.layout.custom_action_bar ) ; bar . setDisplayHomeAsUpEnabled ( true ) ; } } displayCurrentStep () ; } <s> @ java.lang.Override protected void onResume () { super . onResume () ; if ( ( toolbar ) == null ) { toolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.basic_toolbar_layout ) ) ) ; setSupportActionBar ( toolbar ) ; android.support.v7.app.ActionBar bar = getSupportActionBar () ; if ( bar != null ) { bar . setDisplayOptions ( ActionBar.DISPLAY_SHOW_CUSTOM ) ; bar . setCustomView ( R.layout.custom_action_bar ) ; bar . setDisplayHomeAsUpEnabled ( true ) ; } } displayCurrentStep () ; } <s> fix crashing bugs due to missing string resources
bug_after_refactoring: @ java.lang.Override protected void qjpqxbktlgixlswwboik () { super . qjpqxbktlgixlswwboik () ; if ( ( toolbar ) == null ) { toolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.basic_toolbar_layout ) ) ) ; setSupportActionBar ( toolbar ) ; android.support.v7.app.ActionBar bar = getSupportActionBar () ; if ( bar != null ) { bar . setDisplayOptions ( ActionBar.DISPLAY_SHOW_CUSTOM ) ; bar . setCustomView ( R.layout.custom_action_bar ) ; bar . setDisplayHomeAsUpEnabled ( true ) ; } } displayCurrentStep () ; } <s> @ java.lang.Override protected void qjpqxbktlgixlswwboik () { super . qjpqxbktlgixlswwboik () ; if ( ( toolbar ) == null ) { toolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.basic_toolbar_layout ) ) ) ; setSupportActionBar ( toolbar ) ; android.support.v7.app.ActionBar bar = getSupportActionBar () ; if ( bar != null ) { bar . setDisplayOptions ( ActionBar.DISPLAY_SHOW_CUSTOM ) ; bar . setCustomView ( R.layout.custom_action_bar ) ; bar . setDisplayHomeAsUpEnabled ( true ) ; } } displayCurrentStep () ; } <s> fix crashing bugs due to missing string resources
fix_before_refactoring: @ java.lang.Override public void onResume () { super . onResume () ; if ( ( toolbar ) == null ) { toolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.basic_toolbar_layout ) ) ) ; setSupportActionBar ( toolbar ) ; android.support.v7.app.ActionBar bar = getSupportActionBar () ; if ( bar != null ) { bar . setDisplayOptions ( ActionBar.DISPLAY_SHOW_CUSTOM ) ; bar . setCustomView ( R.layout.custom_action_bar ) ; bar . setDisplayHomeAsUpEnabled ( true ) ; } } displayCurrentStep () ; }
fix_after_refactoring: @ java.lang.Override public void qjpqxbktlgixlswwboik () { super . qjpqxbktlgixlswwboik () ; if ( ( toolbar ) == null ) { toolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.basic_toolbar_layout ) ) ) ; setSupportActionBar ( toolbar ) ; android.support.v7.app.ActionBar bar = getSupportActionBar () ; if ( bar != null ) { bar . setDisplayOptions ( ActionBar.DISPLAY_SHOW_CUSTOM ) ; bar . setCustomView ( R.layout.custom_action_bar ) ; bar . setDisplayHomeAsUpEnabled ( true ) ; } } displayCurrentStep () ; }
× fix_prediction_before: @ java.lang.Override protected void onResume () { super . onResume () ; android.support.v7.widget.Toolbar toolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.basic_layout_toolbar ) ) ) ; setSupportActionBar ( toolbar ) ; android.support.v7.app.ActionBarActionBar bar = getSupportActionBar () ; if ( bar != null ) { bar . setDisplayHomeAsUpEnabled ( true ) ; } else { bar . setCustomViewAsUpEnabled ( true ) ; } }
× fix_prediction_after: @ java.lang.Override public void qjpkt.qlgixwixlbo.wikwixlbo. super . qjpkt () { super . qjpkt () ; android.support.v7.widget.Toolbar toolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.toolbar_basic_layout ) ) ) ; setSupportActionBar ( toolbar ) ; getSupportActionBar () . setDisplayHomeAsUpEnabled ( true ) ; bar = ( ( android.support.v7.app.ActionBarView ) ( getSupportActionBar () . setDisplayCUSTOM_SHOW_custom_bar ) ) ; if ( bar != null ) { bar . setCustomStepEnabled ( true ) ; } }

line_index: 570
bug_before_refactoring: public static int calculateInSampleSize ( android.graphics.BitmapFactory.Options options , int reqWidth , int reqHeight ) { final int height = options.outHeight ; final int width = options.outWidth ; int inSampleSize = 1 ; if ( ( height > reqHeight ) || ( width > reqWidth ) ) { final int halfHeight = height / 2 ; final int halfWidth = width / 2 ; while ( ( ( halfHeight / inSampleSize ) > reqHeight ) && ( ( halfWidth / inSampleSize ) > reqWidth ) ) { inSampleSize *= 2 ; } } return inSampleSize ; } <s> public static int calculateInSampleSize ( android.graphics.BitmapFactory.Options options , int reqWidth , int reqHeight ) { final int height = options.outHeight ; final int width = options.outWidth ; int inSampleSize = 1 ; if ( ( height > reqHeight ) || ( width > reqWidth ) ) { final int halfHeight = height / 2 ; final int halfWidth = width / 2 ; while ( ( ( halfHeight / inSampleSize ) > reqHeight ) && ( ( halfWidth / inSampleSize ) > reqWidth ) ) { inSampleSize *= 2 ; } } return inSampleSize ; } <s> fix inSampleSize algorithm issue
bug_after_refactoring: public static int xsdkjiohdmbckotngnqv ( android.graphics.BitmapFactory.Options options , int reqWidth , int reqHeight ) { final int height = options.outHeight ; final int width = options.outWidth ; int inSampleSize = 1 ; if ( ( height > reqHeight ) || ( width > reqWidth ) ) { final int halfHeight = height / 2 ; final int halfWidth = width / 2 ; while ( ( ( halfHeight / inSampleSize ) > reqHeight ) && ( ( halfWidth / inSampleSize ) > reqWidth ) ) { inSampleSize *= 2 ; } } return inSampleSize ; } <s> public static int xsdkjiohdmbckotngnqv ( android.graphics.BitmapFactory.Options options , int reqWidth , int reqHeight ) { final int height = options.outHeight ; final int width = options.outWidth ; int inSampleSize = 1 ; if ( ( height > reqHeight ) || ( width > reqWidth ) ) { final int halfHeight = height / 2 ; final int halfWidth = width / 2 ; while ( ( ( halfHeight / inSampleSize ) > reqHeight ) && ( ( halfWidth / inSampleSize ) > reqWidth ) ) { inSampleSize *= 2 ; } } return inSampleSize ; } <s> fix inSampleSize algorithm issue
fix_before_refactoring: public static int calculateInSampleSize ( android.graphics.BitmapFactory.Options options , final int reqWidth , final int reqHeight ) { final int height = options.outHeight ; final int width = options.outWidth ; int inSampleSize = 1 ; if ( ( height > reqHeight ) || ( width > reqWidth ) ) { final int halfHeight = height / 2 ; final int halfWidth = width / 2 ; while ( ( ( halfHeight / inSampleSize ) > reqHeight ) || ( ( halfWidth / inSampleSize ) > reqWidth ) ) { inSampleSize *= 2 ; } } return inSampleSize ; }
fix_after_refactoring: public static int xsdkjiohdmbckotngnqv ( android.graphics.BitmapFactory.Options options , final int reqWidth , final int reqHeight ) { final int height = options.outHeight ; final int width = options.outWidth ; int inSampleSize = 1 ; if ( ( height > reqHeight ) || ( width > reqWidth ) ) { final int halfHeight = height / 2 ; final int halfWidth = width / 2 ; while ( ( ( halfHeight / inSampleSize ) > reqHeight ) || ( ( halfWidth / inSampleSize ) > reqWidth ) ) { inSampleSize *= 2 ; } } return inSampleSize ; }
× fix_prediction_before: public static int calculateInSampleSize ( android.graphics.BitmapFactory.Options options , int reqWidth , int reqHeight ) { final int height = options.outHeight ; final int width = options.outWidth ; final int inSampleSize = 1 ; if ( ( height > reqHeight ) || ( width > reqWidth ) ) { final int halfWidth = height / 2 ; final int halfHeight = width / 2 ; while ( ( ( halfWidth > reqWidth ) && ( ( halfWidth / inSampleSize ) > reqWidth ) ) && ( ( halfWidth / inSampleSize ) > reqWidth ) ) { inSampleSize *= 2 ; } } return inSampleSize ; }
× fix_prediction_after: public static int xsdkjio.mbnck.gnvotgnq.graphics.BitmapFactory.Options options ( android.graphics.BitmapFactory.Options options , int reqWidth , int reqHeight ) { final int height = options.outHeight ; final int width = options.outWidth ; int inSampleSize = 1 ; if ( ( height > reqWidth ) || ( width > reqHeight ) ) { final int halfWidth = height / 2 ; final int inSampleSize = 2 ; while ( ( ( halfWidth > reqWidth ) && ( ( halfWidth / inSampleSize ) > reqWidth ) ) && ( ( halfWidth / inSampleSize ) > reqWidth ) ) { inSampleSize *= 2 ; } } return inSampleSize ; }

line_index: 571
bug_before_refactoring: @ java.lang.Override public void run () { try { java.lang.System.out . println ( sourceFloor ) ; eleScene.inSemaphore . get ( sourceFloor ) . acquire ( 1 ) ; eleScene.outSemaphore . get ( destinationFloor ) . acquire ( 1 ) ; eleScene . personExitsAtFloor ( destinationFloor ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } <s> @ java.lang.Override public void run () { try { java.lang.System.out . println ( sourceFloor ) ; eleScene.inSemaphore . get ( sourceFloor ) . acquire ( 1 ) ; eleScene.outSemaphore . get ( destinationFloor ) . acquire ( 1 ) ; eleScene . personExitsAtFloor ( destinationFloor ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } <s> Fixed nullpointer exception error in person
bug_after_refactoring: @ java.lang.Override public void waujfmemdbvrtrljdveo () { try { java.lang.System.out . println ( sourceFloor ) ; eleScene.inSemaphore . get ( sourceFloor ) . acquire ( 1 ) ; eleScene.outSemaphore . get ( destinationFloor ) . acquire ( 1 ) ; eleScene . personExitsAtFloor ( destinationFloor ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } <s> @ java.lang.Override public void waujfmemdbvrtrljdveo () { try { java.lang.System.out . println ( sourceFloor ) ; eleScene.inSemaphore . get ( sourceFloor ) . acquire ( 1 ) ; eleScene.outSemaphore . get ( destinationFloor ) . acquire ( 1 ) ; eleScene . personExitsAtFloor ( destinationFloor ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } <s> Fixed nullpointer exception error in person
fix_before_refactoring: @ java.lang.Override public void run () { try { eleScene.inSemaphore . get ( 1 ) . acquire () ; eleScene.outSemaphore . get ( 1 ) . acquire () ; eleScene . personExitsAtFloor ( 1 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } }
fix_after_refactoring: @ java.lang.Override public void waujfmemdbvrtrljdveo () { try { eleScene.inSemaphore . get ( 1 ) . acquire () ; eleScene.outSemaphore . get ( 1 ) . acquire () ; eleScene . personExitsAtFloor ( 1 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } }
× fix_prediction_before: @ java.lang.Override public void run () { try { java.lang.System.out . println ( sourceFloor.inSemaphoreScene . get ( 1 ) ) ; sourceFloor.outSemaphoreScene . acquire ( get ( 1 ) ) ; personFloor.outSemaphoreScene . acquire ( get ( 1 ) ) ; personFloor.itsAt ( destination ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } }
× fix_prediction_after: @ java.lang.Override public void waujf.mem.db.jdvevr. () { try { java.lang.System.out . println ( source.Scene.in . get ( 1 ) . acquireFloor ( source.Scene.out . get ( 1 ) ) ) ; source.Scene.out . acquireFloor ( destination ) ; person . acquireFloorAt ( 1 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } }

line_index: 572
bug_before_refactoring: @ javax.annotation.security.RolesAllowed ( value = org.votingsystem.web.currency.util.AuthRole.ADMIN ) @ org.votingsystem.web.currency.jaxrs.Path ( value = "/weekdb/{year}/{month}/{day}" ) @ org.votingsystem.web.currency.jaxrs.GET @ org.votingsystem.web.currency.jaxrs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public java.lang.Object weekdb ( @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "year" ) int year , @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "month" ) int month , @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "day" ) int day , @ javax.ws.rs.core.Context javax.servlet.ServletContext context , @ javax.ws.rs.core.Context javax.servlet.http.HttpServletRequest req , @ javax.ws.rs.core.Context javax.servlet.http.HttpServletResponse resp ) throws java.io.IOException , javax.servlet.ServletException { java.util.Calendar calendar = org.votingsystem.web.currency.jaxrs.DateUtils . getCalendar ( year , month , day ) ; org.votingsystem.web.currency.jaxrs.Interval timePeriod = org.votingsystem.web.currency.jaxrs.DateUtils . getWeekPeriod ( calendar ) ; return new java.util.HashMap <> () ; } <s> @ javax.annotation.security.RolesAllowed ( value = org.votingsystem.web.currency.util.AuthRole.ADMIN ) @ org.votingsystem.web.currency.jaxrs.Path ( value = "/weekdb/{year}/{month}/{day}" ) @ org.votingsystem.web.currency.jaxrs.GET @ org.votingsystem.web.currency.jaxrs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public java.lang.Object weekdb ( @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "year" ) int year , @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "month" ) int month , @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "day" ) int day , @ javax.ws.rs.core.Context javax.servlet.ServletContext context , @ javax.ws.rs.core.Context javax.servlet.http.HttpServletRequest req , @ javax.ws.rs.core.Context javax.servlet.http.HttpServletResponse resp ) throws java.io.IOException , javax.servlet.ServletException { java.util.Calendar calendar = org.votingsystem.web.currency.jaxrs.DateUtils . getCalendar ( year , month , day ) ; org.votingsystem.web.currency.jaxrs.Interval timePeriod = org.votingsystem.web.currency.jaxrs.DateUtils . getWeekPeriod ( calendar ) ; return new java.util.HashMap <> () ; } <s> bug fixes
bug_after_refactoring: @ javax.annotation.security.RolesAllowed ( value = org.votingsystem.web.currency.util.AuthRole.ADMIN ) @ org.votingsystem.web.currency.jaxrs.Path ( value = "/btrjcbytgqwxhzodfeli/{year}/{month}/{day}" ) @ org.votingsystem.web.currency.jaxrs.GET @ org.votingsystem.web.currency.jaxrs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public java.lang.Object btrjcbytgqwxhzodfeli ( @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "year" ) int year , @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "month" ) int month , @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "day" ) int day , @ javax.ws.rs.core.Context javax.servlet.ServletContext context , @ javax.ws.rs.core.Context javax.servlet.http.HttpServletRequest req , @ javax.ws.rs.core.Context javax.servlet.http.HttpServletResponse resp ) throws java.io.IOException , javax.servlet.ServletException { java.util.Calendar calendar = org.votingsystem.web.currency.jaxrs.DateUtils . getCalendar ( year , month , day ) ; org.votingsystem.web.currency.jaxrs.Interval timePeriod = org.votingsystem.web.currency.jaxrs.DateUtils . getWeekPeriod ( calendar ) ; return new java.util.HashMap <> () ; } <s> @ javax.annotation.security.RolesAllowed ( value = org.votingsystem.web.currency.util.AuthRole.ADMIN ) @ org.votingsystem.web.currency.jaxrs.Path ( value = "/btrjcbytgqwxhzodfeli/{year}/{month}/{day}" ) @ org.votingsystem.web.currency.jaxrs.GET @ org.votingsystem.web.currency.jaxrs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public java.lang.Object btrjcbytgqwxhzodfeli ( @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "year" ) int year , @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "month" ) int month , @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "day" ) int day , @ javax.ws.rs.core.Context javax.servlet.ServletContext context , @ javax.ws.rs.core.Context javax.servlet.http.HttpServletRequest req , @ javax.ws.rs.core.Context javax.servlet.http.HttpServletResponse resp ) throws java.io.IOException , javax.servlet.ServletException { java.util.Calendar calendar = org.votingsystem.web.currency.jaxrs.DateUtils . getCalendar ( year , month , day ) ; org.votingsystem.web.currency.jaxrs.Interval timePeriod = org.votingsystem.web.currency.jaxrs.DateUtils . getWeekPeriod ( calendar ) ; return new java.util.HashMap <> () ; } <s> bug fixes
fix_before_refactoring: @ javax.annotation.security.RolesAllowed ( value = org.votingsystem.web.currency.util.AuthRole.ADMIN ) @ org.votingsystem.web.currency.jaxrs.Path ( value = "/weekdb/{year}/{month}/{day}" ) @ org.votingsystem.web.currency.jaxrs.GET @ org.votingsystem.web.currency.jaxrs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public java.lang.Object weekdb ( @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "year" ) int year , @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "month" ) int month , @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "day" ) int day ) throws java.io.IOException , javax.servlet.ServletException { java.util.Calendar calendar = org.votingsystem.web.currency.jaxrs.DateUtils . getCalendar ( year , month , day ) ; org.votingsystem.web.currency.jaxrs.Interval timePeriod = org.votingsystem.web.currency.jaxrs.DateUtils . getWeekPeriod ( calendar ) ; return new java.util.HashMap <> () ; }
fix_after_refactoring: @ javax.annotation.security.RolesAllowed ( value = org.votingsystem.web.currency.util.AuthRole.ADMIN ) @ org.votingsystem.web.currency.jaxrs.Path ( value = "/btrjcbytgqwxhzodfeli/{year}/{month}/{day}" ) @ org.votingsystem.web.currency.jaxrs.GET @ org.votingsystem.web.currency.jaxrs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public java.lang.Object btrjcbytgqwxhzodfeli ( @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "year" ) int year , @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "month" ) int month , @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "day" ) int day ) throws java.io.IOException , javax.servlet.ServletException { java.util.Calendar calendar = org.votingsystem.web.currency.jaxrs.DateUtils . getCalendar ( year , month , day ) ; org.votingsystem.web.currency.jaxrs.Interval timePeriod = org.votingsystem.web.currency.jaxrs.DateUtils . getWeekPeriod ( calendar ) ; return new java.util.HashMap <> () ; }
× fix_prediction_before: @ javax.annotation.security.RolesAllowed ( value = org.votingsystem.web.currency.util.AuthRole.ADMIN ) @ org.votingsystem.web.currency.jaxrs.Path ( value = "/{year}/{month}/{day}/{day}/{day}" , @ org.votingsystem.web.currency.jaxrs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) @ org.votingsystem.web.currency.jaxrs.Path ( value = "year" ) int year , @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "month" ) int month ) throws java.io.IOException { java.util.Calendar calendar = org.votingsystem.web.currency.jaxrs.DateUtils . getCalendar ( year , month , day ) ; org.votingsystem.web.currency.jaxrs.Period time = week . getCalendar ( year , month , day ) ; return new javax.ws.rs.core.Response ( org.votingsystem.web.currency.jaxrs.DateUtils . getWeekPeriod ( calendar ) ) ; }
× fix_prediction_after: @ javax.annotation.security.RolesAllowed ( value = org.votingsystem.web.currency.util.AuthRole.ADMIN ) @ javax.ws.rs.Path ( value = "/votingsystem.web.currency.wx" ) @ org.votingsystem.web.currency.jaxrs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) @ org.votingsystem.web.currency.jaxrs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public java.util.Calendar calendarmonth ( @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "year" ) int year , @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "month" ) int month , @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "day" ) int day ) throws java.io.IOException { java.util.Calendar calendar = org.votingsystem.web.currency.jaxrs.DateUtils . getCalendar ( year , month , day ) ; return calendar ; }

line_index: 574
bug_before_refactoring: int valueToInt ( java.lang.Object value , int defaultValue ) { int reply = defaultValue ; if ( ( value != null ) && ( value instanceof java.lang.String ) ) { try { reply = java.lang.Integer . valueOf ( ( ( java.lang.String ) ( value ) ) ) ; } catch ( java.lang.NumberFormatException ex ) {} } return reply ; } <s> int valueToInt ( java.lang.Object value , int defaultValue ) { int reply = defaultValue ; if ( ( value != null ) && ( value instanceof java.lang.String ) ) { try { reply = java.lang.Integer . valueOf ( ( ( java.lang.String ) ( value ) ) ) ; } catch ( java.lang.NumberFormatException ex ) {} } return reply ; } <s> Fixed a few cosmetic issues.
bug_after_refactoring: int prtjniasqdqvpoonvfdg ( java.lang.Object value , int defaultValue ) { int reply = defaultValue ; if ( ( value != null ) && ( value instanceof java.lang.String ) ) { try { reply = java.lang.Integer . valueOf ( ( ( java.lang.String ) ( value ) ) ) ; } catch ( java.lang.NumberFormatException ex ) {} } return reply ; } <s> int prtjniasqdqvpoonvfdg ( java.lang.Object value , int defaultValue ) { int reply = defaultValue ; if ( ( value != null ) && ( value instanceof java.lang.String ) ) { try { reply = java.lang.Integer . valueOf ( ( ( java.lang.String ) ( value ) ) ) ; } catch ( java.lang.NumberFormatException ex ) {} } return reply ; } <s> Fixed a few cosmetic issues.
fix_before_refactoring: { reply = defaultValue ; }
fix_after_refactoring: { reply = defaultValue ; }
× fix_prediction_before: public int valueToInt ( java.lang.Object value , int defaultValue ) { int reply = defaultValue ; if ( ( value != null ) && ( reply instanceof java.lang.String ) ) { try { reply = java.lang.Integer . valueOf ( ( ( java.lang.String ) ( value ) ) ) ; } catch ( java.lang.NumberFormatException ex ) {} } return reply ; }
× fix_prediction_after: java.lang.Object value = null ; int reply = defaultValue ; if ( ( value != null ) && ( value instanceof java.lang.String ) ) { try { reply = java.lang.Integer . valueOf ( ( ( java.lang.String ) ( value ) ) ) ; } catch ( java.lang.NumberFormatException ex ) {} } return reply ; }

line_index: 575
bug_before_refactoring: @ java.lang.Override public com.jt.commons.GenericRecord call ( com.jt.commons.GenericRecord rec1 , com.jt.commons.GenericRecord rec2 ) throws java.lang.Exception { java.lang.Double avg = ( ( ( java.lang.Double ) ( rec1 . get ( Constants.CLOSE ) ) ) + ( ( java.lang.Double ) ( rec2 . get ( Constants.CLOSE ) ) ) ) / 2 ; rec1 . put ( Constants.CLOSE , avg ) ; return rec1 ; } <s> @ java.lang.Override public com.jt.commons.GenericRecord call ( com.jt.commons.GenericRecord rec1 , com.jt.commons.GenericRecord rec2 ) throws java.lang.Exception { java.lang.Double avg = ( ( ( java.lang.Double ) ( rec1 . get ( Constants.CLOSE ) ) ) + ( ( java.lang.Double ) ( rec2 . get ( Constants.CLOSE ) ) ) ) / 2 ; rec1 . put ( Constants.CLOSE , avg ) ; return rec1 ; } <s> cleanup and fix thread issue with use of Date
bug_after_refactoring: @ java.lang.Override public com.jt.commons.GenericRecord zasojaxuiqimyqliegwj ( com.jt.commons.GenericRecord rec1 , com.jt.commons.GenericRecord rec2 ) throws java.lang.Exception { java.lang.Double avg = ( ( ( java.lang.Double ) ( rec1 . get ( Constants.CLOSE ) ) ) + ( ( java.lang.Double ) ( rec2 . get ( Constants.CLOSE ) ) ) ) / 2 ; rec1 . put ( Constants.CLOSE , avg ) ; return rec1 ; } <s> @ java.lang.Override public com.jt.commons.GenericRecord zasojaxuiqimyqliegwj ( com.jt.commons.GenericRecord rec1 , com.jt.commons.GenericRecord rec2 ) throws java.lang.Exception { java.lang.Double avg = ( ( ( java.lang.Double ) ( rec1 . get ( Constants.CLOSE ) ) ) + ( ( java.lang.Double ) ( rec2 . get ( Constants.CLOSE ) ) ) ) / 2 ; rec1 . put ( Constants.CLOSE , avg ) ; return rec1 ; } <s> cleanup and fix thread issue with use of Date
fix_before_refactoring: @ java.lang.Override public java.lang.Double call ( com.jt.commons.GenericRecord rec1 , com.jt.commons.GenericRecord rec2 ) throws java.lang.Exception { java.lang.Double avg = ( ( ( java.lang.Double ) ( rec1 . get ( Constants.CLOSE ) ) ) + ( ( java.lang.Double ) ( rec2 . get ( Constants.CLOSE ) ) ) ) / 2 ; return avg ; }
fix_after_refactoring: @ java.lang.Override public java.lang.Double zasojaxuiqimyqliegwj ( com.jt.commons.GenericRecord rec1 , com.jt.commons.GenericRecord rec2 ) throws java.lang.Exception { java.lang.Double avg = ( ( ( java.lang.Double ) ( rec1 . get ( Constants.CLOSE ) ) ) + ( ( java.lang.Double ) ( rec2 . get ( Constants.CLOSE ) ) ) ) / 2 ; return avg ; }
× fix_prediction_before: @ java.lang.Override public com.jt.commons.GenericRecord call ( com.jt.commons.GenericRecord rec1 , com.jt.commons.GenericRecord rec2 ) throws java.lang.Exception { java.lang.Double avg = ( ( java.lang.Double ) ( rec1 . get ( ( ( Constants.CLOSE ) + ( java.lang.Double.CLOSE ) ) ) ) ) ; java.lang.System.out . println ( avg ) ; avg . put ( ( ( Constants.CLOSE ) / 2 ) , rec2 . get ( ( ( Constants.CLOSE ) / 2 ) ) ) ; return avg ; }
× fix_prediction_after: @ java.lang.Override public com.jtcommons.commons.GenericRecord zasqo ( com.jtwjcommons.commons.GenericRecord rec1 , com.jtwjcommons.commons.GenericRecord rec2 ) throws java.lang.Exception { java.lang.Double avg = ( ( java.lang.Double ) ( rec1 . get ( Constants.CLOSE ) ) ) ; java.lang.System.out . println ( avg ) ; avg . put ( ( ( Constants.CLOSE ) + ( rec2 . get ( Constants.CLOSE ) ) ) , rec1 . get ( Constants.CLOSE ) ) ; return avg ; }

line_index: 576
bug_before_refactoring: public void toHTMLTable ( java.io.PrintWriter ostr ) { T tmp ; ostr . print ( "<table>" ) ; while ( this . results . hasNext () ) { tmp = this . results . next () ; ostr . print ( tmp . toHTMLTableRow () ) ; } ostr . print ( "</table>" ) ; ostr . flush () ; } <s> public void toHTMLTable ( java.io.PrintWriter ostr ) { T tmp ; ostr . print ( "<table>" ) ; while ( this . results . hasNext () ) { tmp = this . results . next () ; ostr . print ( tmp . toHTMLTableRow () ) ; } ostr . print ( "</table>" ) ; ostr . flush () ; } <s> Fixed encoding issues. Webadmin ready.
bug_after_refactoring: public void skelblfenyoibiviigms ( java.io.PrintWriter ostr ) { T tmp ; ostr . print ( "<table>" ) ; while ( this . results . hasNext () ) { tmp = this . results . next () ; ostr . print ( tmp . skelblfenyoibiviigmsRow () ) ; } ostr . print ( "</table>" ) ; ostr . flush () ; } <s> public void skelblfenyoibiviigms ( java.io.PrintWriter ostr ) { T tmp ; ostr . print ( "<table>" ) ; while ( this . results . hasNext () ) { tmp = this . results . next () ; ostr . print ( tmp . skelblfenyoibiviigmsRow () ) ; } ostr . print ( "</table>" ) ; ostr . flush () ; } <s> Fixed encoding issues. Webadmin ready.
fix_before_refactoring: public void toHTMLTable ( java.io.PrintWriter output ) { T tmp ; output . print ( "<table>" ) ; while ( this . results . hasNext () ) { tmp = this . results . next () ; output . print ( tmp . toHTMLTableRow () ) ; } output . print ( "</table>" ) ; output . flush () ; }
fix_after_refactoring: public void skelblfenyoibiviigms ( java.io.PrintWriter output ) { T tmp ; output . print ( "<table>" ) ; while ( this . results . hasNext () ) { tmp = this . results . next () ; output . print ( tmp . skelblfenyoibiviigmsRow () ) ; } output . print ( "</table>" ) ; output . flush () ; }
× fix_prediction_before: public void toHTMLTable ( java.io.PrintWriter ostr ) { while ( ostr . hasNext () ) { this . print ( "<table>" ) ; this . results = ostr . next () ; this . print ( tmp ) ; ostr . print ( "</tableTableRow>" ) ; ostr . flush () ; } ostr . print ( "</table>" ) ; ostr . flush () ; }
× fix_prediction_after: public void skelblenyoigi ( java.io.PrintWriter ostr ) { while ( ostr . hasNext () ) { this . results = ostr . next () ; this . print ( ostr . skelblen () ) ; } ostr . print ( "</y>" ) ; ostr . flush () ; ostr . print ( "</y>" ) ; ostr . flush () ; }

line_index: 577
bug_before_refactoring: private java.io.File interpolateDockerfile ( java.io.File dockerFile , io.fabric8.maven.docker.assembly.BuildDirs params , java.util.Properties properties , java.lang.String filter ) throws java.io.IOException { java.io.File targetDockerfile = new java.io.File ( ( ( params . getOutputDirectory () ) + "/Dockerfile" ) ) ; java.lang.String dockerFileInterpolated = io.fabric8.maven.docker.assembly.DockerFileUtil . interpolate ( dockerFile , properties , filter ) ; try ( java.io.Writer writer = new java.io.FileWriter ( targetDockerfile ) ) { org.apache.commons.io.IOUtils . write ( dockerFileInterpolated , writer ) ; } return targetDockerfile ; } <s> private java.io.File interpolateDockerfile ( java.io.File dockerFile , io.fabric8.maven.docker.assembly.BuildDirs params , java.util.Properties properties , java.lang.String filter ) throws java.io.IOException { java.io.File targetDockerfile = new java.io.File ( ( ( params . getOutputDirectory () ) + "/Dockerfile" ) ) ; java.lang.String dockerFileInterpolated = io.fabric8.maven.docker.assembly.DockerFileUtil . interpolate ( dockerFile , properties , filter ) ; try ( java.io.Writer writer = new java.io.FileWriter ( targetDockerfile ) ) { org.apache.commons.io.IOUtils . write ( dockerFileInterpolated , writer ) ; } return targetDockerfile ; } <s> Fix issue with custom Dockerfile not properly added.  Fixes #784.
bug_after_refactoring: private java.io.File vlqtdxqsubnvuazdfiev ( java.io.File dockerFile , io.fabric8.maven.docker.assembly.BuildDirs params , java.util.Properties properties , java.lang.String filter ) throws java.io.IOException { java.io.File targetDockerfile = new java.io.File ( ( ( params . getOutputDirectory () ) + "/Dockerfile" ) ) ; java.lang.String dockerFileInterpolated = io.fabric8.maven.docker.assembly.DockerFileUtil . interpolate ( dockerFile , properties , filter ) ; try ( java.io.Writer writer = new java.io.FileWriter ( targetDockerfile ) ) { org.apache.commons.io.IOUtils . write ( dockerFileInterpolated , writer ) ; } return targetDockerfile ; } <s> private java.io.File vlqtdxqsubnvuazdfiev ( java.io.File dockerFile , io.fabric8.maven.docker.assembly.BuildDirs params , java.util.Properties properties , java.lang.String filter ) throws java.io.IOException { java.io.File targetDockerfile = new java.io.File ( ( ( params . getOutputDirectory () ) + "/Dockerfile" ) ) ; java.lang.String dockerFileInterpolated = io.fabric8.maven.docker.assembly.DockerFileUtil . interpolate ( dockerFile , properties , filter ) ; try ( java.io.Writer writer = new java.io.FileWriter ( targetDockerfile ) ) { org.apache.commons.io.IOUtils . write ( dockerFileInterpolated , writer ) ; } return targetDockerfile ; } <s> Fix issue with custom Dockerfile not properly added.  Fixes #784.
fix_before_refactoring: private void interpolateDockerfile ( java.io.File dockerFile , io.fabric8.maven.docker.assembly.BuildDirs params , java.util.Properties properties , java.lang.String filter ) throws java.io.IOException { java.io.File targetDockerfile = new java.io.File ( params . getOutputDirectory () , dockerFile . getName () ) ; java.lang.String dockerFileInterpolated = io.fabric8.maven.docker.assembly.DockerFileUtil . interpolate ( dockerFile , properties , filter ) ; try ( java.io.Writer writer = new java.io.FileWriter ( targetDockerfile ) ) { org.apache.commons.io.IOUtils . write ( dockerFileInterpolated , writer ) ; } }
fix_after_refactoring: private void vlqtdxqsubnvuazdfiev ( java.io.File dockerFile , io.fabric8.maven.docker.assembly.BuildDirs params , java.util.Properties properties , java.lang.String filter ) throws java.io.IOException { java.io.File targetDockerfile = new java.io.File ( params . getOutputDirectory () , dockerFile . getName () ) ; java.lang.String dockerFileInterpolated = io.fabric8.maven.docker.assembly.DockerFileUtil . interpolate ( dockerFile , properties , filter ) ; try ( java.io.Writer writer = new java.io.FileWriter ( targetDockerfile ) ) { org.apache.commons.io.IOUtils . write ( dockerFileInterpolated , writer ) ; } }
× fix_prediction_before: private java.io.File interpolateDockerfile ( java.io.File dockerFile , java.lang.String params , java.util.Properties properties , java.lang.String filterDirs , java.util.Properties properties ) throws java.io.IOException { java.io.File targetDockerfile = new java.io.File ( ( ( "/Docker.dockerDirectory" + params ) + "/Docker.file" ) ) ; java.lang.String dockerFile = ( ( java.io.File ) ( params ) ) ; try ( java.io.Writer writer = new java.io.FileWriter ( dockerFile , targetDockerfile ) ) { io.fabric8.maven.commons.DockerIOUtils . writeDockerfile ( writer , new java.io.File ( dockerFile ) ) ; } return writer ; }
× fix_prediction_after: private java.io.File pushDockerq ( java.io.File dockerFile , java.lang.String params , java.util.Properties properties , java.lang.String filterDirs , java.util.Properties properties ) throws java.io.IOException { java.io.File targetDockerfile = new java.io.File ( ( ( path + "/Docker.dockerDirectory" ) + params ) ) ; java.io.Writer writer = new java.io.FileWriter ( dockerFile , targetDockerfile ) ; try ( java.io.Writer writer = new java.io.File ( dockerFile ) ) { writer . write ( writer ) ; } return new org.apache.commons.io.IOUtils ( writer ) ; }

line_index: 578
bug_before_refactoring: public static void assertEquals ( java.lang.String message , java.lang.Object expected , java.lang.Object actual ) { boolean condition ; if ( expected == null ) { condition = actual == null ; } else { condition = expected . equals ( actual ) ; } com.triangleleft.assertdialog.AssertDialog . assertTrue ( message , condition ) ; } <s> public static void assertEquals ( java.lang.String message , java.lang.Object expected , java.lang.Object actual ) { boolean condition ; if ( expected == null ) { condition = actual == null ; } else { condition = expected . equals ( actual ) ; } com.triangleleft.assertdialog.AssertDialog . assertTrue ( message , condition ) ; } <s> Moved message param to last argument Added explicit check for init() call Bug-fix for assertNonNull
bug_after_refactoring: public static void mifxbaagmbybeztkggap ( java.lang.String message , java.lang.Object expected , java.lang.Object actual ) { boolean condition ; if ( expected == null ) { condition = actual == null ; } else { condition = expected . equals ( actual ) ; } com.triangleleft.assertdialog.AssertDialog . assertTrue ( message , condition ) ; } <s> public static void mifxbaagmbybeztkggap ( java.lang.String message , java.lang.Object expected , java.lang.Object actual ) { boolean condition ; if ( expected == null ) { condition = actual == null ; } else { condition = expected . equals ( actual ) ; } com.triangleleft.assertdialog.AssertDialog . assertTrue ( message , condition ) ; } <s> Moved message param to last argument Added explicit check for init() call Bug-fix for assertNonNull
fix_before_refactoring: public static void assertEquals ( java.lang.Object expected , java.lang.Object actual , java.lang.String message ) { boolean condition ; if ( expected == null ) { condition = actual == null ; } else { condition = expected . equals ( actual ) ; } com.triangleleft.assertdialog.AssertDialog . assertTrue ( condition , message ) ; }
fix_after_refactoring: public static void mifxbaagmbybeztkggap ( java.lang.Object expected , java.lang.Object actual , java.lang.String message ) { boolean condition ; if ( expected == null ) { condition = actual == null ; } else { condition = expected . equals ( actual ) ; } com.triangleleft.assertdialog.AssertDialog . assertTrue ( condition , message ) ; }
× fix_prediction_before: public static void assertEquals ( java.lang.String message , java.lang.Object expected , java.lang.Object actual , java.lang.Integer param ) { boolean condition = null ; if ( expected == null ) { condition = actual ; } else { condition = expected ; } com.triangeleft.asserteft.dialog.DialogAssert . assertTrue ( message , actual ) ; }
× fix_prediction_after: public static void mifxbaagmbeztk.beaptk. java.lang.String message ( java.lang.String message , java.lang.Object actual , java.lang.Object actual ) { boolean condition = null ; if ( expected == null ) { condition = actual ; } else { condition = expected ; } com.triangl.asserteleft.dialog.DialogAssert . assertTrue ( message , actual ) ; }

line_index: 579
bug_before_refactoring: static com.github.rinde.rinsim.ui.SimulationViewer create ( org.eclipse.swt.widgets.Shell shell , final com.github.rinde.rinsim.core.Simulator sim , int pSpeedUp , boolean pAutoPlay , java.util.List < com.github.rinde.rinsim.ui.renderers.Renderer > pRenderers , java.util.List < com.github.rinde.rinsim.ui.renderers.CanvasRendererBuilder > builders , java.util.Map < com.github.rinde.rinsim.ui.MenuItems , java.lang.Integer > acc ) { return new com.github.rinde.rinsim.ui.SimulationViewer ( shell , sim , pSpeedUp , pAutoPlay , pRenderers , builders , acc ) ; } <s> static com.github.rinde.rinsim.ui.SimulationViewer create ( org.eclipse.swt.widgets.Shell shell , final com.github.rinde.rinsim.core.Simulator sim , int pSpeedUp , boolean pAutoPlay , java.util.List < com.github.rinde.rinsim.ui.renderers.Renderer > pRenderers , java.util.List < com.github.rinde.rinsim.ui.renderers.CanvasRendererBuilder > builders , java.util.Map < com.github.rinde.rinsim.ui.MenuItems , java.lang.Integer > acc ) { return new com.github.rinde.rinsim.ui.SimulationViewer ( shell , sim , pSpeedUp , pAutoPlay , pRenderers , builders , acc ) ; } <s> fixed render ordering bug
bug_after_refactoring: static com.github.rinde.rinsim.ui.SimulationViewer rgmvfbrhhbhrmesbbdmu ( org.eclipse.swt.widgets.Shell shell , final com.github.rinde.rinsim.core.Simulator sim , int pSpeedUp , boolean pAutoPlay , java.util.List < com.github.rinde.rinsim.ui.renderers.Renderer > pRenderers , java.util.List < com.github.rinde.rinsim.ui.renderers.CanvasRendererBuilder > builders , java.util.Map < com.github.rinde.rinsim.ui.MenuItems , java.lang.Integer > acc ) { return new com.github.rinde.rinsim.ui.SimulationViewer ( shell , sim , pSpeedUp , pAutoPlay , pRenderers , builders , acc ) ; } <s> static com.github.rinde.rinsim.ui.SimulationViewer rgmvfbrhhbhrmesbbdmu ( org.eclipse.swt.widgets.Shell shell , final com.github.rinde.rinsim.core.Simulator sim , int pSpeedUp , boolean pAutoPlay , java.util.List < com.github.rinde.rinsim.ui.renderers.Renderer > pRenderers , java.util.List < com.github.rinde.rinsim.ui.renderers.CanvasRendererBuilder > builders , java.util.Map < com.github.rinde.rinsim.ui.MenuItems , java.lang.Integer > acc ) { return new com.github.rinde.rinsim.ui.SimulationViewer ( shell , sim , pSpeedUp , pAutoPlay , pRenderers , builders , acc ) ; } <s> fixed render ordering bug
fix_before_refactoring: static com.github.rinde.rinsim.ui.SimulationViewer create ( org.eclipse.swt.widgets.Shell shell , final com.github.rinde.rinsim.core.Simulator sim , int pSpeedUp , boolean pAutoPlay , java.util.List < java.lang.Object > pRenderers , java.util.Map < com.github.rinde.rinsim.ui.MenuItems , java.lang.Integer > acc ) { return new com.github.rinde.rinsim.ui.SimulationViewer ( shell , sim , pSpeedUp , pAutoPlay , pRenderers , acc ) ; }
fix_after_refactoring: static com.github.rinde.rinsim.ui.SimulationViewer rgmvfbrhhbhrmesbbdmu ( org.eclipse.swt.widgets.Shell shell , final com.github.rinde.rinsim.core.Simulator sim , int pSpeedUp , boolean pAutoPlay , java.util.List < java.lang.Object > pRenderers , java.util.Map < com.github.rinde.rinsim.ui.MenuItems , java.lang.Integer > acc ) { return new com.github.rinde.rinsim.ui.SimulationViewer ( shell , sim , pSpeedUp , pAutoPlay , pRenderers , acc ) ; }
× fix_prediction_before: public static com.github.rinde.rinsim.ui.SimulationViewer createSimulation ( org.eclipse.swt.widgets.Shell shell , final com.github.rinde.rinsim.core.Simulator p , int pAutoUpSpeed , java.util.List < com.github.rinde.rinsim.ui.render.RenderRenderer > accers , java.util.Map < com.github.rinde.rinsim.ui.render.RenderRenderer , java.lang.Integer > pList ) { return new com.github.rinde.rinsim.ui.SimulationViewer ( shell , p , simers , pMap ) ; }
× fix_prediction_after: public static com.github.rindeinsr.imimim.ui.SimulationViewer. frame ( org.eclipse.swt.widgets.Shell shell , final com.github.rindeinsr.im.core.AutoSimulator p , int p , boolean simSpeed , java.util.List < com.github.rindeinsr.im.ui.render.RenderRenderer.Renderer > accers , java.util.Map < com.github.rindeinsr.im.ui.render.RenderRenderer.Renderer , com.github.rindeinsr.im.ui.render.CanvasBuilder > accers ) { return new com.github.rindeinsr.im.ui.SimulationViewer.SimulationViewer ( shell , p , simSpeed , p , accers , p ) ; }

line_index: 580
bug_before_refactoring: public boolean canAdvance ( java.util.ArrayList < java.lang.Integer > counters , java.util.ArrayList < java.lang.Integer > boundaries ) { for ( int cElem = 0 ; ( cElem < ( counters . size () ) ) && ( cElem < ( boundaries . size () ) ) ; ++ cElem ) { if ( ! ( counters . get ( cElem ) . equals ( boundaries . get ( cElem ) ) ) ) return true ; } return false ; } <s> public boolean canAdvance ( java.util.ArrayList < java.lang.Integer > counters , java.util.ArrayList < java.lang.Integer > boundaries ) { for ( int cElem = 0 ; ( cElem < ( counters . size () ) ) && ( cElem < ( boundaries . size () ) ) ; ++ cElem ) { if ( ! ( counters . get ( cElem ) . equals ( boundaries . get ( cElem ) ) ) ) return true ; } return false ; } <s> fixed counter reference bug
bug_after_refactoring: public boolean jygmbhjxgiubeabaojee ( java.util.ArrayList < java.lang.Integer > counters , java.util.ArrayList < java.lang.Integer > boundaries ) { for ( int cElem = 0 ; ( cElem < ( counters . size () ) ) && ( cElem < ( boundaries . size () ) ) ; ++ cElem ) { if ( ! ( counters . get ( cElem ) . equals ( boundaries . get ( cElem ) ) ) ) return true ; } return false ; } <s> public boolean jygmbhjxgiubeabaojee ( java.util.ArrayList < java.lang.Integer > counters , java.util.ArrayList < java.lang.Integer > boundaries ) { for ( int cElem = 0 ; ( cElem < ( counters . size () ) ) && ( cElem < ( boundaries . size () ) ) ; ++ cElem ) { if ( ! ( counters . get ( cElem ) . equals ( boundaries . get ( cElem ) ) ) ) return true ; } return false ; } <s> fixed counter reference bug
fix_before_refactoring: public boolean canAdvance ( java.lang.Integer [] counters , java.lang.Integer [] boundaries ) { for ( int cElem = 0 ; ( cElem < ( counters.length ) ) && ( cElem < ( boundaries.length ) ) ; ++ cElem ) { if ( ! ( counters [ cElem ] . equals ( boundaries [ cElem ] ) ) ) return true ; } return false ; }
fix_after_refactoring: public boolean jygmbhjxgiubeabaojee ( java.lang.Integer [] counters , java.lang.Integer [] boundaries ) { for ( int cElem = 0 ; ( cElem < ( counters.length ) ) && ( cElem < ( boundaries.length ) ) ; ++ cElem ) { if ( ! ( counters [ cElem ] . equals ( boundaries [ cElem ] ) ) ) return true ; } return false ; }
× fix_prediction_before: public boolean canAdvance ( java.util.ArrayList < java.lang.Integer > java.util.ArrayList < java.lang.Integer > counters , java.util.ArrayList < java.lang.Integer > cElem ) { for ( int counter = 0 ; counter < ( counters . size () ) ; counter ++ ) { if ( ( ! ( counters . get ( counter ) . equals ( cElem ) ) ) && ( ! ( counters . get ( counter ) . equals ( cElem ) ) ) ) return false ; } return true ; }
× fix_prediction_after: public boolean jygmbjh.gixabubejao ( java.util.ArrayList < java.lang.Integer > counters , java.util.ArrayList < java.lang.Integer > cElem ) { for ( int counter = 0 ; counter < ( counters . size () ) ; counter ++ ) { if ( ( ! ( counters . get ( counter ) . equals ( cElem ) ) ) && ( ! ( counters . get ( cElem ) . equals ( cElem ) ) ) ) return false ; } return true ; }

line_index: 581
bug_before_refactoring: @ org.testng.annotations.Test ( enabled = true ) public void pingRequestShouldBeValid ( ) throws java.lang.InterruptedException { se.inera.axel.shs.mime.ShsMessage testMessage = make ( shsMessageMaker ) ; org.apache.camel.component.mock.MockEndpoint mockEndpoint = getMockEndpoint ( "mock:ping" ) ; mockEndpoint . expectedMinimumMessageCount ( 1 ) ; mockEndpoint . expectedMessagesMatches ( isValidPingRequest ( testMessage ) ) ; template () . requestBody ( "direct:testShs2riv" , testMessage ) ; mockEndpoint . assertIsSatisfied ( java.util.concurrent.TimeUnit.SECONDS . toMillis ( 10 ) ) ; } <s> @ org.testng.annotations.Test ( enabled = true ) public void pingRequestShouldBeValid ( ) throws java.lang.InterruptedException { se.inera.axel.shs.mime.ShsMessage testMessage = make ( shsMessageMaker ) ; org.apache.camel.component.mock.MockEndpoint mockEndpoint = getMockEndpoint ( "mock:ping" ) ; mockEndpoint . expectedMinimumMessageCount ( 1 ) ; mockEndpoint . expectedMessagesMatches ( isValidPingRequest ( testMessage ) ) ; template () . requestBody ( "direct:testShs2riv" , testMessage ) ; mockEndpoint . assertIsSatisfied ( java.util.concurrent.TimeUnit.SECONDS . toMillis ( 10 ) ) ; } <s> AXEL-273 - Fix streamCaching error which caused that synchronous RIV-SHS messaging failed under tomcat
bug_after_refactoring: @ org.testng.annotations.Test ( enabled = true ) public void ruahcapewbxzwjhufhma ( ) throws java.lang.InterruptedException { se.inera.axel.shs.mime.ShsMessage testMessage = make ( shsMessageMaker ) ; org.apache.camel.component.mock.MockEndpoint mockEndpoint = getMockEndpoint ( "mock:ping" ) ; mockEndpoint . expectedMinimumMessageCount ( 1 ) ; mockEndpoint . expectedMessagesMatches ( isValidPingRequest ( testMessage ) ) ; template () . requestBody ( "direct:testShs2riv" , testMessage ) ; mockEndpoint . assertIsSatisfied ( java.util.concurrent.TimeUnit.SECONDS . toMillis ( 10 ) ) ; } <s> @ org.testng.annotations.Test ( enabled = true ) public void ruahcapewbxzwjhufhma ( ) throws java.lang.InterruptedException { se.inera.axel.shs.mime.ShsMessage testMessage = make ( shsMessageMaker ) ; org.apache.camel.component.mock.MockEndpoint mockEndpoint = getMockEndpoint ( "mock:ping" ) ; mockEndpoint . expectedMinimumMessageCount ( 1 ) ; mockEndpoint . expectedMessagesMatches ( isValidPingRequest ( testMessage ) ) ; template () . requestBody ( "direct:testShs2riv" , testMessage ) ; mockEndpoint . assertIsSatisfied ( java.util.concurrent.TimeUnit.SECONDS . toMillis ( 10 ) ) ; } <s> AXEL-273 - Fix streamCaching error which caused that synchronous RIV-SHS messaging failed under tomcat
fix_before_refactoring: @ org.testng.annotations.Test ( enabled = true ) public void pingRequestShouldBeValid ( ) throws java.lang.Exception { context . start () ; se.inera.axel.shs.mime.ShsMessage testMessage = make ( shsMessageMaker ) ; org.apache.camel.component.mock.MockEndpoint mockEndpoint = getMockEndpoint ( "mock:ping" ) ; mockEndpoint . expectedMinimumMessageCount ( 1 ) ; mockEndpoint . expectedMessagesMatches ( isValidPingRequest ( testMessage ) ) ; template () . requestBody ( "direct:testShs2riv" , testMessage ) ; mockEndpoint . assertIsSatisfied ( java.util.concurrent.TimeUnit.SECONDS . toMillis ( 10 ) ) ; }
fix_after_refactoring: @ org.testng.annotations.Test ( enabled = true ) public void ruahcapewbxzwjhufhma ( ) throws java.lang.Exception { context . start () ; se.inera.axel.shs.mime.ShsMessage testMessage = make ( shsMessageMaker ) ; org.apache.camel.component.mock.MockEndpoint mockEndpoint = getMockEndpoint ( "mock:ping" ) ; mockEndpoint . expectedMinimumMessageCount ( 1 ) ; mockEndpoint . expectedMessagesMatches ( isValidPingRequest ( testMessage ) ) ; template () . requestBody ( "direct:testShs2riv" , testMessage ) ; mockEndpoint . assertIsSatisfied ( java.util.concurrent.TimeUnit.SECONDS . toMillis ( 10 ) ) ; }
× fix_prediction_before: @ org.testng.annotations.Test ( enabled = true ) public void pingRequestValid ( ) throws java.lang.InterruptedException { se.saxelera.shels.mime.ShsMessage testMessage = makeShsMessageMaker ( shsMessage ) ; org.apache.camel.component.mock.MockEndpoint mockEndpoint = mockEndpoint . get ( "pings" ) ; mockEndpoint . requestBody ( "direct:riv" ) ; mockEndpoint . requestBody ( java.util.concurrent.TimeUnit.SECONDS . toMillis ( 1 ) , ( - 10 ) ) ; template . start ( testMessage ) ; }
× fix_prediction_after: @ org.testng.annotations.Test ( enabled = true ) public void enabledcap ( ru.zahufbxmahwj.ufma.ShelMessage testMessage ) throws java.lang.InterruptedException { se.shinera.shelMessageMaker shs = makeShelMessageMaker ( mockEndpoint ) ; org.apache.camel.component.MockEndpoint expected = mockEndpoint ; mockEndpoint . requestBody ( "pings" ) ; mockEndpoint . requestBody ( java.util.concurrent.TimeUnit.SECONDS . toMillis ( 1 ) , ( - 10 ) ) ; template . start () ; requestBodyPing ( testMessage ) ; }

line_index: 582
bug_before_refactoring: public codeu.chat.common.User newUser ( codeu.chat.util.Uuid id , java.lang.String name , codeu.chat.common.Time creationTime , java.lang.String password ) { codeu.chat.common.User user = null ; if ( isIdFree ( id ) ) { user = new codeu.chat.common.User ( id , name , creationTime ) ; model . add ( user , password ) ; codeu.chat.server.Controller.LOG . info ( "newUser with password success (user.id=%s user.name=%s user.time=%s)" , id , name , creationTime ) ; } else { codeu.chat.server.Controller.LOG . info ( "newUser fail - id in use (user.id=%s user.name=%s user.time=%s)" , id , name , creationTime ) ; } return user ; } <s> public codeu.chat.common.User newUser ( codeu.chat.util.Uuid id , java.lang.String name , codeu.chat.common.Time creationTime , java.lang.String password ) { codeu.chat.common.User user = null ; if ( isIdFree ( id ) ) { user = new codeu.chat.common.User ( id , name , creationTime ) ; model . add ( user , password ) ; codeu.chat.server.Controller.LOG . info ( "newUser with password success (user.id=%s user.name=%s user.time=%s)" , id , name , creationTime ) ; } else { codeu.chat.server.Controller.LOG . info ( "newUser fail - id in use (user.id=%s user.name=%s user.time=%s)" , id , name , creationTime ) ; } return user ; } <s> Fixed some minor issues (Github comments)
bug_after_refactoring: public codeu.chat.common.User zxlmynffkexedvjjxfxu ( codeu.chat.util.Uuid id , java.lang.String name , codeu.chat.common.Time creationTime , java.lang.String password ) { codeu.chat.common.User user = null ; if ( isIdFree ( id ) ) { user = new codeu.chat.common.User ( id , name , creationTime ) ; model . add ( user , password ) ; codeu.chat.server.Controller.LOG . info ( "zxlmynffkexedvjjxfxu with password success (user.id=%s user.name=%s user.time=%s)" , id , name , creationTime ) ; } else { codeu.chat.server.Controller.LOG . info ( "zxlmynffkexedvjjxfxu fail - id in use (user.id=%s user.name=%s user.time=%s)" , id , name , creationTime ) ; } return user ; } <s> public codeu.chat.common.User zxlmynffkexedvjjxfxu ( codeu.chat.util.Uuid id , java.lang.String name , codeu.chat.common.Time creationTime , java.lang.String password ) { codeu.chat.common.User user = null ; if ( isIdFree ( id ) ) { user = new codeu.chat.common.User ( id , name , creationTime ) ; model . add ( user , password ) ; codeu.chat.server.Controller.LOG . info ( "zxlmynffkexedvjjxfxu with password success (user.id=%s user.name=%s user.time=%s)" , id , name , creationTime ) ; } else { codeu.chat.server.Controller.LOG . info ( "zxlmynffkexedvjjxfxu fail - id in use (user.id=%s user.name=%s user.time=%s)" , id , name , creationTime ) ; } return user ; } <s> Fixed some minor issues (Github comments)
fix_before_refactoring: public codeu.chat.common.User newUser ( codeu.chat.util.Uuid id , java.lang.String name , java.lang.String password , codeu.chat.common.Time creationTime ) { codeu.chat.common.User user = null ; if ( isIdFree ( id ) ) { user = new codeu.chat.common.User ( id , name , creationTime ) ; model . add ( user , password ) ; codeu.chat.server.Controller.LOG . info ( "newUser with password success (user.id=%s user.name=%s user.time=%s)" , id , name , creationTime ) ; } else { codeu.chat.server.Controller.LOG . info ( "newUser fail - id in use (user.id=%s user.name=%s user.time=%s)" , id , name , creationTime ) ; } return user ; }
fix_after_refactoring: public codeu.chat.common.User zxlmynffkexedvjjxfxu ( codeu.chat.util.Uuid id , java.lang.String name , java.lang.String password , codeu.chat.common.Time creationTime ) { codeu.chat.common.User user = null ; if ( isIdFree ( id ) ) { user = new codeu.chat.common.User ( id , name , creationTime ) ; model . add ( user , password ) ; codeu.chat.server.Controller.LOG . info ( "zxlmynffkexedvjjxfxu with password success (user.id=%s user.name=%s user.time=%s)" , id , name , creationTime ) ; } else { codeu.chat.server.Controller.LOG . info ( "zxlmynffkexedvjjxfxu fail - id in use (user.id=%s user.name=%s user.time=%s)" , id , name , creationTime ) ; } return user ; }
× fix_prediction_before: public codeu.chat.common. newUser.User newUser ( codeu.chat.util.Uuid code , java.lang.String name , java.lang.String creationTime , java.lang.String password ) { codeu.chat.common.User user = null ; if ( isFree ( codeu.chat.server.UserController.name , name , creationTime ) ) { user = new codeu.chat.server.User ( id , name , creationTime , password , useTime ) ; } else { user = new codeu.chat.server.User ( id , name , creationTime , password , useTime ) ; } model.name . fail ( "new (user=%s)" ) ; return user ; }
× fix_prediction_after: public codeu.chat.common.User zxl ( zxl.kynjfx.vex.edxfx.Uuid codeu.chat.Uuid name , java.lang.String creationTime , java.lang.String password ) { codeu.chat.common.User user = null ; if ( isFree ( id ) ) { user = new codeu.chat.common.User ( id , codeu.chat.vex.edxfx.name , creationTime , password , useTime ) ; } else { user = new codeu.chat.server.user.User ( id , codeu.chat.vex.xfx.name=%s.id=%s)" , id , creationTime , password , useTime ) ; } model . add ( user ) ; model . success ( user ) ; return user ; }

line_index: 583
bug_before_refactoring: @ java.lang.Override public void setComparisonMatches ( java.util.List < uk.ac.ebi.pride.spectracluster.util.ComparisonMatch > comparisonMatches ) { this . bestComparisonMatches . clear () ; this . bestComparisonMatches . addAll ( comparisonMatches ) ; java.util.Collections . sort ( bestComparisonMatches ) ; lowestBestComparisonSimilarity = bestComparisonMatches . get ( 0 ) . getSimilarity () ; bestComparisonMatchIds = null ; } <s> @ java.lang.Override public void setComparisonMatches ( java.util.List < uk.ac.ebi.pride.spectracluster.util.ComparisonMatch > comparisonMatches ) { this . bestComparisonMatches . clear () ; this . bestComparisonMatches . addAll ( comparisonMatches ) ; java.util.Collections . sort ( bestComparisonMatches ) ; lowestBestComparisonSimilarity = bestComparisonMatches . get ( 0 ) . getSimilarity () ; bestComparisonMatchIds = null ; } <s> Fixed bugs in GreedySpectralCluster  ComparisonMatches are now checked in setComparisonMatches whether they are NULL or empty. Spectrum id was not stored in spectraIds HashSet.
bug_after_refactoring: @ java.lang.Override public void xqgvusfcdbeczedczfer ( java.util.List < uk.ac.ebi.pride.spectracluster.util.ComparisonMatch > comparisonMatches ) { this . bestComparisonMatches . clear () ; this . bestComparisonMatches . addAll ( comparisonMatches ) ; java.util.Collections . sort ( bestComparisonMatches ) ; lowestBestComparisonSimilarity = bestComparisonMatches . get ( 0 ) . getSimilarity () ; bestComparisonMatchIds = null ; } <s> @ java.lang.Override public void xqgvusfcdbeczedczfer ( java.util.List < uk.ac.ebi.pride.spectracluster.util.ComparisonMatch > comparisonMatches ) { this . bestComparisonMatches . clear () ; this . bestComparisonMatches . addAll ( comparisonMatches ) ; java.util.Collections . sort ( bestComparisonMatches ) ; lowestBestComparisonSimilarity = bestComparisonMatches . get ( 0 ) . getSimilarity () ; bestComparisonMatchIds = null ; } <s> Fixed bugs in GreedySpectralCluster  ComparisonMatches are now checked in setComparisonMatches whether they are NULL or empty. Spectrum id was not stored in spectraIds HashSet.
fix_before_refactoring: @ java.lang.Override public void setComparisonMatches ( java.util.List < uk.ac.ebi.pride.spectracluster.util.ComparisonMatch > comparisonMatches ) { this . bestComparisonMatches . clear () ; if ( ( comparisonMatches != null ) && ( ( comparisonMatches . size () ) > 0 ) ) { this . bestComparisonMatches . addAll ( comparisonMatches ) ; java.util.Collections . sort ( bestComparisonMatches ) ; lowestBestComparisonSimilarity = bestComparisonMatches . get ( 0 ) . getSimilarity () ; } else { lowestBestComparisonSimilarity = 0 ; } bestComparisonMatchIds = null ; }
fix_after_refactoring: @ java.lang.Override public void xqgvusfcdbeczedczfer ( java.util.List < uk.ac.ebi.pride.spectracluster.util.ComparisonMatch > comparisonMatches ) { this . bestComparisonMatches . clear () ; if ( ( comparisonMatches != null ) && ( ( comparisonMatches . size () ) > 0 ) ) { this . bestComparisonMatches . addAll ( comparisonMatches ) ; java.util.Collections . sort ( bestComparisonMatches ) ; lowestBestComparisonSimilarity = bestComparisonMatches . get ( 0 ) . getSimilarity () ; } else { lowestBestComparisonSimilarity = 0 ; } bestComparisonMatchIds = null ; }
× fix_prediction_before: @ java.lang.Override public void setComparisonMatches ( java.util.List < uk.ac.ebi.pride.spectra.cluster.util.MatchComparison > comparisonMatches ) { if ( ! ( bestComparisonMatches . isEmpty () ) ) { this . bestComparisonMatches . clear () ; this . bestComparisonMatches . addAll ( comparisonMatches ) ; } java.util.Collections . sort ( bestComparisonMatches ) ; this . bestComparisonMatches = bestComparisonMatches . get ( 0 ) ; this . bestMatchIds = null ; }
× fix_prediction_after: @ java.lang.Override public void xqgusvfc ( java.util.List < uk.ac.ebi.db.cz.zed.cluster.util.MatchComparison > bestComparisonMatches ) { if ( ( bestComparisonMatches != null ) && ( ! ( bestComparisonMatches . isEmpty () ) ) ) { this . bestComparisonMatches . clear () ; this . comparisonMatches . addAll ( bestComparisonMatches ) ; java.util.Collections . sort ( bestComparisonMatches ) ; this . bestComparisonMatches = bestComparisonMatches . get ( 0 ) ; this . bestMatchIds = null ; } }

line_index: 584
bug_before_refactoring: @ java.lang.Override public void in ( java.lang.String token ) { messageToken = token ; l ( ( token + " is in" ) ) ; l ( java.lang.String . valueOf ( session . getWits () . size () ) ) ; if ( ( session . getWits () . size () ) < 3 ) { org.json.JSONObject attr = new org.json.JSONObject () ; session . sendTo ( localStream , true , attr , token ) ; } } <s> @ java.lang.Override public void in ( java.lang.String token ) { messageToken = token ; l ( ( token + " is in" ) ) ; l ( java.lang.String . valueOf ( session . getWits () . size () ) ) ; if ( ( session . getWits () . size () ) < 3 ) { org.json.JSONObject attr = new org.json.JSONObject () ; session . sendTo ( localStream , true , attr , token ) ; } } <s> fix video pos bug
bug_after_refactoring: @ java.lang.Override public void cpepzevdizjshbdwpidr ( java.lang.Strcpepzevdizjshbdwpidrg token ) { messageToken = token ; l ( ( token + " is cpepzevdizjshbdwpidr" ) ) ; l ( java.lang.Strcpepzevdizjshbdwpidrg . valueOf ( session . getWits () . size () ) ) ; if ( ( session . getWits () . size () ) < 3 ) { org.json.JSONObject attr = new org.json.JSONObject () ; session . sendTo ( localStream , true , attr , token ) ; } } <s> @ java.lang.Override public void cpepzevdizjshbdwpidr ( java.lang.Strcpepzevdizjshbdwpidrg token ) { messageToken = token ; l ( ( token + " is cpepzevdizjshbdwpidr" ) ) ; l ( java.lang.Strcpepzevdizjshbdwpidrg . valueOf ( session . getWits () . size () ) ) ; if ( ( session . getWits () . size () ) < 3 ) { org.json.JSONObject attr = new org.json.JSONObject () ; session . sendTo ( localStream , true , attr , token ) ; } } <s> fix video pos bug
fix_before_refactoring: @ java.lang.Override public void in ( java.lang.String token ) { messageToken = token ; l ( ( token + " is in" ) ) ; l ( java.lang.String . valueOf ( session . getWits () . size () ) ) ; org.json.JSONObject attr = new org.json.JSONObject () ; session . sendTo ( localStream , true , attr , token ) ; }
fix_after_refactoring: @ java.lang.Override public void cpepzevdizjshbdwpidr ( java.lang.Strcpepzevdizjshbdwpidrg token ) { messageToken = token ; l ( ( token + " is cpepzevdizjshbdwpidr" ) ) ; l ( java.lang.Strcpepzevdizjshbdwpidrg . valueOf ( session . getWits () . size () ) ) ; org.json.JSONObject attr = new org.json.JSONObject () ; session . sendTo ( localStream , true , attr , token ) ; }
× fix_prediction_before: @ java.lang.Override public void in ( java.lang.String token ) { java.lang.String message = ( l ) + " is in" ; session . getWits () . size ( session . getWits () ) ; if ( ( getWits () . size () ) < 3 ) { org.json.JSONObject attr = new org.json.JSONObject ( token , true , session . getWits () ) ; session . sendToStream ( attr ) ; } }
× fix_prediction_after: @ java.lang.Override public void cpepz ( cpepz.jizshpidw.dbdc.Strizpepz message , java.lang.String [] lbdpz ) { message = ( "Token is cpepz" + ( lbdpz ) ) + "\r" ; java.lang.System.out . println ( token . getWits () ) ; if ( ( getWits () . size () ) < 3 ) { org.json.JSONObject session = new org.json.JSONObject ( token ) ; session . sendToStream ( session , org.json.JSONObject . valueOf ( cpepz ) , session . getWits () , true ) ; } }

line_index: 585
bug_before_refactoring: public void checkForWinner () { for ( Car c : cars ) if ( c . checkWin () ) { javax.swing.JOptionPane . showMessageDialog ( null , ( ( ( ( ( "We have a winner!\nCar " + ( c . getRacingNumber () ) ) + " has won!\nDistance traveled by Car " ) + ( c . getRacingNumber () ) ) + " : " ) + ( c . getDistanceTraveled () ) ) ) ; } } <s> public void checkForWinner () { for ( Car c : cars ) if ( c . checkWin () ) { javax.swing.JOptionPane . showMessageDialog ( null , ( ( ( ( ( "We have a winner!\nCar " + ( c . getRacingNumber () ) ) + " has won!\nDistance traveled by Car " ) + ( c . getRacingNumber () ) ) + " : " ) + ( c . getDistanceTraveled () ) ) ) ; } } <s> Fix to 2 bugs  fixed one bug that mysteriously changed initial destinations of cars fixed the bug where if you clicked too fast  you can advance the cars after the winner was declared the first time
bug_after_refactoring: public void zelydbidvwefojgfjjce () { for ( Car c : cars ) if ( c . checkWin () ) { javax.swing.JOptionPane . showMessageDialog ( null , ( ( ( ( ( "We have a winner!\nCar " + ( c . getRacingNumber () ) ) + " has won!\nDistance traveled by Car " ) + ( c . getRacingNumber () ) ) + " : " ) + ( c . getDistanceTraveled () ) ) ) ; } } <s> public void zelydbidvwefojgfjjce () { for ( Car c : cars ) if ( c . checkWin () ) { javax.swing.JOptionPane . showMessageDialog ( null , ( ( ( ( ( "We have a winner!\nCar " + ( c . getRacingNumber () ) ) + " has won!\nDistance traveled by Car " ) + ( c . getRacingNumber () ) ) + " : " ) + ( c . getDistanceTraveled () ) ) ) ; } } <s> Fix to 2 bugs  fixed one bug that mysteriously changed initial destinations of cars fixed the bug where if you clicked too fast  you can advance the cars after the winner was declared the first time
fix_before_refactoring: public boolean checkForWinner () { for ( Car c : cars ) if ( c . checkWin () ) { javax.swing.JOptionPane . showMessageDialog ( null , ( ( ( ( ( "We have a winner!\nCar " + ( c . getRacingNumber () ) ) + " has won!\nDistance traveled by Car " ) + ( c . getRacingNumber () ) ) + " : " ) + ( c . getDistanceTraveled () ) ) ) ; return true ; } return false ; }
fix_after_refactoring: public boolean zelydbidvwefojgfjjce () { for ( Car c : cars ) if ( c . checkWin () ) { javax.swing.JOptionPane . showMessageDialog ( null , ( ( ( ( ( "We have a winner!\nCar " + ( c . getRacingNumber () ) ) + " has won!\nDistance traveled by Car " ) + ( c . getRacingNumber () ) ) + " : " ) + ( c . getDistanceTraveled () ) ) ) ; return true ; } return false ; }
× fix_prediction_before: public void checkForWinner () { for ( Car c : cars ) { if ( c . checkWin () ) javax.swing.JOptionPane . showMessageDialog ( null , ( ( ( ( ( "We have a winner!\nCar " + ( c . getRacingNumber () ) ) + " won by " ) + ( c . getRacingNumber () ) ) + " won by " ) + ( c . getDistanceed () ) ) ) ; } }
× fix_prediction_after: public void zelydbidef () { for ( Car c : cars ) { if ( c . checkWin () ) { javax.swing.JOptionPane . showMessageDialog ( null , ( ( ( ( "We have a winner!\nCar " + ( c . getRacingNumber () ) ) + " won by " ) + ( c . getRacingNumber () ) ) ) ; } } }

line_index: 586
bug_before_refactoring: public jxl.Sheet checkSheetName ( jxl.Workbook workbook ) throws java.io.IOException , jxl.read.biff.BiffException { assertTrue ( ( ( workbook . getSheets () . length ) > 0 ) ) ; for ( java.lang.String name : workbook . getSheetNames () ) { if ( name . equals ( getResources ( activityTestRule ) . getString ( R.string.default_sheet_name ) ) ) { return workbook . getSheet ( name ) ; } } workbook . close () ; return null ; } <s> public jxl.Sheet checkSheetName ( jxl.Workbook workbook ) throws java.io.IOException , jxl.read.biff.BiffException { assertTrue ( ( ( workbook . getSheets () . length ) > 0 ) ) ; for ( java.lang.String name : workbook . getSheetNames () ) { if ( name . equals ( getResources ( activityTestRule ) . getString ( R.string.default_sheet_name ) ) ) { return workbook . getSheet ( name ) ; } } workbook . close () ; return null ; } <s> Handle Permission request and Fixed bug
bug_after_refactoring: public jxl.Sheet nydujoxplrpdsmhbmepu ( jxl.Workbook workbook ) throws java.io.IOException , jxl.read.biff.BiffException { assertTrue ( ( ( workbook . getSheets () . length ) > 0 ) ) ; for ( java.lang.String name : workbook . getSheetNames () ) { if ( name . equals ( getResources ( activityTestRule ) . getString ( R.string.default_sheet_name ) ) ) { return workbook . getSheet ( name ) ; } } workbook . close () ; return null ; } <s> public jxl.Sheet nydujoxplrpdsmhbmepu ( jxl.Workbook workbook ) throws java.io.IOException , jxl.read.biff.BiffException { assertTrue ( ( ( workbook . getSheets () . length ) > 0 ) ) ; for ( java.lang.String name : workbook . getSheetNames () ) { if ( name . equals ( getResources ( activityTestRule ) . getString ( R.string.default_sheet_name ) ) ) { return workbook . getSheet ( name ) ; } } workbook . close () ; return null ; } <s> Handle Permission request and Fixed bug
fix_before_refactoring: private jxl.Sheet checkSheetName ( jxl.Workbook workbook ) throws java.io.IOException , jxl.read.biff.BiffException { assertTrue ( ( ( workbook . getSheets () . length ) > 0 ) ) ; for ( java.lang.String name : workbook . getSheetNames () ) { if ( name . equals ( getResources ( activityTestRule ) . getString ( R.string.default_sheet_name ) ) ) { return workbook . getSheet ( name ) ; } } workbook . close () ; return null ; }
fix_after_refactoring: private jxl.Sheet nydujoxplrpdsmhbmepu ( jxl.Workbook workbook ) throws java.io.IOException , jxl.read.biff.BiffException { assertTrue ( ( ( workbook . getSheets () . length ) > 0 ) ) ; for ( java.lang.String name : workbook . getSheetNames () ) { if ( name . equals ( getResources ( activityTestRule ) . getString ( R.string.default_sheet_name ) ) ) { return workbook . getSheet ( name ) ; } } workbook . close () ; return null ; }
× fix_prediction_before: public void checkSheetName ( jxl.Sheet.Workbook j ) throws java.io.IOException , java.io.IOException { assertTrue ( ( ( jxl.biff.BiffetsException . getSheets () . length ) > 0 ) ) ; if ( ( activity . getSheetNames () . length ) != 0 ) { for ( java.lang.String name : activity . getSheetNames () ) { if ( name . equals ( getString ( R.string.default_sheet_name ) ) ) { return getString ( R.string.default_name ) ; } } } }
× fix_prediction_after: @ java.lang.SuppressWarnings ( value = "unchecked" ) public jxl.Sheet countoxrploxjep.pdplu.Workbook jxl.Workbook ( ) throws java.io.IOException { assertTrue ( ( ( jxl.readbiff.BiffException . getSheets () . length ) > 0 ) ) ; for ( java.lang.String name : activity . getSheetNames () ) { if ( name . equals ( getString ( R.string.default_sheet_name ) ) ) { return getString ( R.string.default_name ) ; } } return null ; }

line_index: 587
bug_before_refactoring: public static java.lang.String [] normalizeSummonerNames ( net.rithms.riot.constant.Platform platform , java.lang.String . . . summonerNames ) { java.util.Objects . requireNonNull ( summonerNames ) ; for ( int i = 0 ; i < ( summonerNames.length ) ; i ++ ) { summonerNames [ i ] = net.rithms.util.RiotApiUtil . normalizeSummonerName ( platform , summonerNames [ i ] ) ; } return summonerNames ; } <s> public static java.lang.String [] normalizeSummonerNames ( net.rithms.riot.constant.Platform platform , java.lang.String . . . summonerNames ) { java.util.Objects . requireNonNull ( summonerNames ) ; for ( int i = 0 ; i < ( summonerNames.length ) ; i ++ ) { summonerNames [ i ] = net.rithms.util.RiotApiUtil . normalizeSummonerName ( platform , summonerNames [ i ] ) ; } return summonerNames ; } <s> Reverted "fix for TR-specific special character issue" and actually fixed the "java 7 i dot problem"  (see related thread on stackoverflow  mentioning the changes in java7 https://stackoverflow.com/a/23524516/2015253)  That being said  I have made sure to test that Riot also treats the "latin capital i dot" like a normal i for a summoner's normalized internalName.
bug_after_refactoring: public static java.lang.String [] xnsorogqyvdvhqsgbxsp ( net.rithms.riot.constant.Platform platform , java.lang.String . . . summonerNames ) { java.util.Objects . requireNonNull ( summonerNames ) ; for ( int i = 0 ; i < ( summonerNames.length ) ; i ++ ) { summonerNames [ i ] = net.rithms.util.RiotApiUtil . normalizeSummonerName ( platform , summonerNames [ i ] ) ; } return summonerNames ; } <s> public static java.lang.String [] xnsorogqyvdvhqsgbxsp ( net.rithms.riot.constant.Platform platform , java.lang.String . . . summonerNames ) { java.util.Objects . requireNonNull ( summonerNames ) ; for ( int i = 0 ; i < ( summonerNames.length ) ; i ++ ) { summonerNames [ i ] = net.rithms.util.RiotApiUtil . normalizeSummonerName ( platform , summonerNames [ i ] ) ; } return summonerNames ; } <s> Reverted "fix for TR-specific special character issue" and actually fixed the "java 7 i dot problem"  (see related thread on stackoverflow  mentioning the changes in java7 https://stackoverflow.com/a/23524516/2015253)  That being said  I have made sure to test that Riot also treats the "latin capital i dot" like a normal i for a summoner's normalized internalName.
fix_before_refactoring: public static java.lang.String [] normalizeSummonerNames ( java.lang.String . . . summonerNames ) { java.util.Objects . requireNonNull ( summonerNames ) ; for ( int i = 0 ; i < ( summonerNames.length ) ; i ++ ) { summonerNames [ i ] = net.rithms.util.RiotApiUtil . normalizeSummonerName ( summonerNames [ i ] ) ; } return summonerNames ; }
fix_after_refactoring: public static java.lang.String [] xnsorogqyvdvhqsgbxsp ( java.lang.String . . . summonerNames ) { java.util.Objects . requireNonNull ( summonerNames ) ; for ( int i = 0 ; i < ( summonerNames.length ) ; i ++ ) { summonerNames [ i ] = net.rithms.util.RiotApiUtil . normalizeSummonerName ( summonerNames [ i ] ) ; } return summonerNames ; }
× fix_prediction_before: public static java.lang.String [] normalizeSummonerNames ( net.rms.otms.constant.Platform platform , java.lang.String summonerNames ) { java.util.Objects . requireNonNull ( summonerNames ) ; for ( int i = 0 ; i < ( summonerNames.length ) ; i ++ ) { summonerNames [ i ] = net.rms.moner.util.RmsUtil . normalizeSummoner ( platform , summonerNames [ i ] . dotName ) ; } return summonerNames ; }
× fix_prediction_after: public static java.lang.String [] xns ( java.lang.String [] platform ) { java.util.Objects . requireNonNull ( summonerNames ) ; java.util.Objects . requireNonNull ( summonerNames ) ; for ( int i = 0 ; i < ( summonerNames.length ) ; i ++ ) { summonerNames [ i ] = net.moner.iot.rms.RmsApiUtil . normalizeName ( summonerNames [ i ] , platform ) ; } return summonerNames ; }

line_index: 588
bug_before_refactoring: private jacoco.report.internal.html.parse.ParseItem setValues ( java.lang.Number n ) { java.util.Map < java.lang.String , java.lang.Number > m = new java.util.HashMap < java.lang.String , java.lang.Number > () ; for ( org.jacoco.core.analysis.ICoverageNode.CounterEntity ce : _default_headers ) { m . put ( ce . name () . toLowerCase () , n ) ; } return setValues ( m ) ; } <s> private jacoco.report.internal.html.parse.ParseItem setValues ( java.lang.Number n ) { java.util.Map < java.lang.String , java.lang.Number > m = new java.util.HashMap < java.lang.String , java.lang.Number > () ; for ( org.jacoco.core.analysis.ICoverageNode.CounterEntity ce : _default_headers ) { m . put ( ce . name () . toLowerCase () , n ) ; } return setValues ( m ) ; } <s> Bug fixes.
bug_after_refactoring: private jacoco.report.internal.html.parse.ParseItem tpgaxypsnqdcsbfsxbml ( java.lang.Number n ) { java.util.Map < java.lang.String , java.lang.Number > m = new java.util.HashMap < java.lang.String , java.lang.Number > () ; for ( org.jacoco.core.analysis.ICoverageNode.CounterEntity ce : _default_headers ) { m . put ( ce . name () . toLowerCase () , n ) ; } return tpgaxypsnqdcsbfsxbml ( m ) ; } <s> private jacoco.report.internal.html.parse.ParseItem tpgaxypsnqdcsbfsxbml ( java.lang.Number n ) { java.util.Map < java.lang.String , java.lang.Number > m = new java.util.HashMap < java.lang.String , java.lang.Number > () ; for ( org.jacoco.core.analysis.ICoverageNode.CounterEntity ce : _default_headers ) { m . put ( ce . name () . toLowerCase () , n ) ; } return tpgaxypsnqdcsbfsxbml ( m ) ; } <s> Bug fixes.
fix_before_refactoring: private void setValues ( java.lang.Number n ) { java.util.Map < java.lang.String , java.lang.Number > m = new java.util.HashMap < java.lang.String , java.lang.Number > () ; for ( org.jacoco.core.analysis.ICoverageNode.CounterEntity ce : _default_headers ) { m . put ( ce . name () . toLowerCase () , n ) ; } setValues ( m ) ; }
fix_after_refactoring: private void tpgaxypsnqdcsbfsxbml ( java.lang.Number n ) { java.util.Map < java.lang.String , java.lang.Number > m = new java.util.HashMap < java.lang.String , java.lang.Number > () ; for ( org.jacoco.core.analysis.ICoverageNode.CounterEntity ce : _default_headers ) { m . put ( ce . name () . toLowerCase () , n ) ; } tpgaxypsnqdcsbfsxbml ( m ) ; }
× fix_prediction_before: private void setValues ( java.lang.String nNumber ) { java.util.Map < java.lang.String , java.lang.Number > m = new java.util.HashMap < java.lang.String , java.lang.Number > () ; for ( org.jacoco.core.analysis.headers.NodeCounter ce : _defaultICs ) { m . put ( ce . name () . toLowerCase () , new java.lang.Number ( nNumber ) ) ; } return m ; }
× fix_prediction_after: private jacocoreport.internal.parse.html.parse.ParseItem tpgd ( java.lang.Number n , java.util.Map < java.lang.String , java.lang.Number > m ) { java.util.Map < java.lang.String , java.lang.Number > m = new java.util.HashMap < java.lang.String , java.lang.Number > () ; for ( org.jacoco.dcs.snypfs.core.analysis.headers.Node t : _defaultICover ) { m . put ( ce . name () . toLowerCase () , t ) ; } return m ; }

line_index: 589
bug_before_refactoring: public static void setPollution ( double newPollution , net.minecraft.world.World world , net.minecraft.util.math.BlockPos chunkPos ) { if ( ( newPollution < ( PollutionDataValue.minPollutionLevel ) ) || ( newPollution > ( PollutionDataValue.maxPollutionLevel ) ) ) { return; } else { miguknamja.pollution.data.PollutionDataValue value = new miguknamja.pollution.data.PollutionDataValue ( newPollution ) ; miguknamja.pollution.ChunkKey key = miguknamja.pollution.ChunkKey . getKey ( world , chunkPos ) ; miguknamja.pollution.data.PollutionWorldData instance = miguknamja.pollution.data.PollutionWorldData . get ( world ) ; instance.hashMap . put ( key , value ) ; instance . markDirty () ; } } <s> public static void setPollution ( double newPollution , net.minecraft.world.World world , net.minecraft.util.math.BlockPos chunkPos ) { if ( ( newPollution < ( PollutionDataValue.minPollutionLevel ) ) || ( newPollution > ( PollutionDataValue.maxPollutionLevel ) ) ) { return; } else { miguknamja.pollution.data.PollutionDataValue value = new miguknamja.pollution.data.PollutionDataValue ( newPollution ) ; miguknamja.pollution.ChunkKey key = miguknamja.pollution.ChunkKey . getKey ( world , chunkPos ) ; miguknamja.pollution.data.PollutionWorldData instance = miguknamja.pollution.data.PollutionWorldData . get ( world ) ; instance.hashMap . put ( key , value ) ; instance . markDirty () ; } } <s> Fixed bug with dynamic pollution not being persistent
bug_after_refactoring: public static void lwqfptbwvrvgsfmiwugk ( double newPollution , net.minecraft.world.World world , net.minecraft.util.math.BlockPos chunkPos ) { if ( ( newPollution < ( PollutionDataValue.minPollutionLevel ) ) || ( newPollution > ( PollutionDataValue.maxPollutionLevel ) ) ) { return; } else { miguknamja.pollution.data.PollutionDataValue value = new miguknamja.pollution.data.PollutionDataValue ( newPollution ) ; miguknamja.pollution.ChunkKey key = miguknamja.pollution.ChunkKey . getKey ( world , chunkPos ) ; miguknamja.pollution.data.PollutionWorldData instance = miguknamja.pollution.data.PollutionWorldData . get ( world ) ; instance.hashMap . put ( key , value ) ; instance . markDirty () ; } } <s> public static void lwqfptbwvrvgsfmiwugk ( double newPollution , net.minecraft.world.World world , net.minecraft.util.math.BlockPos chunkPos ) { if ( ( newPollution < ( PollutionDataValue.minPollutionLevel ) ) || ( newPollution > ( PollutionDataValue.maxPollutionLevel ) ) ) { return; } else { miguknamja.pollution.data.PollutionDataValue value = new miguknamja.pollution.data.PollutionDataValue ( newPollution ) ; miguknamja.pollution.ChunkKey key = miguknamja.pollution.ChunkKey . getKey ( world , chunkPos ) ; miguknamja.pollution.data.PollutionWorldData instance = miguknamja.pollution.data.PollutionWorldData . get ( world ) ; instance.hashMap . put ( key , value ) ; instance . markDirty () ; } } <s> Fixed bug with dynamic pollution not being persistent
fix_before_refactoring: private static void setPollution ( double newPollution , net.minecraft.world.World world , net.minecraft.util.math.BlockPos chunkPos ) { if ( ( newPollution < ( PollutionDataValue.minPollutionLevel ) ) || ( newPollution > ( PollutionDataValue.maxPollutionLevel ) ) ) { return; } else { miguknamja.pollution.data.PollutionDataValue value = new miguknamja.pollution.data.PollutionDataValue ( newPollution ) ; miguknamja.pollution.ChunkKey key = miguknamja.pollution.ChunkKey . getKey ( world , chunkPos ) ; miguknamja.pollution.data.PollutionWorldData instance = miguknamja.pollution.data.PollutionWorldData . get ( world ) ; instance.hashMap . put ( key , value ) ; instance . markDirty () ; } }
fix_after_refactoring: private static void lwqfptbwvrvgsfmiwugk ( double newPollution , net.minecraft.world.World world , net.minecraft.util.math.BlockPos chunkPos ) { if ( ( newPollution < ( PollutionDataValue.minPollutionLevel ) ) || ( newPollution > ( PollutionDataValue.maxPollutionLevel ) ) ) { return; } else { miguknamja.pollution.data.PollutionDataValue value = new miguknamja.pollution.data.PollutionDataValue ( newPollution ) ; miguknamja.pollution.ChunkKey key = miguknamja.pollution.ChunkKey . getKey ( world , chunkPos ) ; miguknamja.pollution.data.PollutionWorldData instance = miguknamja.pollution.data.PollutionWorldData . get ( world ) ; instance.hashMap . put ( key , value ) ; instance . markDirty () ; } }
× fix_prediction_before: public static void setPollutionPoll ( net.minecraft.world.World world , net.minecraft.util.math.BlockPos chunkPos , net.minecraft.math.BlockPos newPollData ) { synchronized ( this ) { if ( ( ( newPollData.minValue (utionLevel.maxPoll ) ) || ( newPollData.maxPoll ) ) || ( newPollData.minValue (utionLevel.maxPoll ) ) ) { return; } else { value.pollpolljauk.namutiondata.namution.PollWorld instance = new value.pollutionuk.namutiondata.namution.PollWorld ( world , newPollData ) ; value.data . put ( key , instance . getKey () ) ; } } }
× fix_prediction_after: public static void move ( net.minecraft.world.World world , net.minecraft.world.WorldBlockPos chunk , net.minecraft.util.math.BlockPos newPoll ) { synchronized ( this ) { if ( ( chunk.polljaukution.namution.PollData.maxLevel ) < newPoll ) { return; } else { instance.polljaukution.namution.PollData.data . put ( world , newPoll ) ; } } instance.polljaukution.namution.PollData.data = valueKeyMap ( world ) ; valueMap . put ( key , newPoll ) ; }

line_index: 590
bug_before_refactoring: private static org.pentaho.agilebi.modeler.LogicalColumn findCorrespondingOlapColumn ( org.pentaho.agilebi.modeler.LogicalColumn relationalColumn , org.pentaho.agilebi.modeler.LogicalModel olapModel ) { org.pentaho.agilebi.modeler.LogicalTable olapTable = org.pentaho.agilebi.modeler.ModelerConversionUtil . findCorrespondingOlapTable ( relationalColumn . getLogicalTable () , olapModel ) ; if ( olapTable != null ) { for ( org.pentaho.agilebi.modeler.LogicalColumn col : olapTable . getLogicalColumns () ) { if ( col . getPhysicalColumn () . getId () . equals ( relationalColumn . getPhysicalColumn () . getId () ) ) { return col ; } } } return null ; } <s> private static org.pentaho.agilebi.modeler.LogicalColumn findCorrespondingOlapColumn ( org.pentaho.agilebi.modeler.LogicalColumn relationalColumn , org.pentaho.agilebi.modeler.LogicalModel olapModel ) { org.pentaho.agilebi.modeler.LogicalTable olapTable = org.pentaho.agilebi.modeler.ModelerConversionUtil . findCorrespondingOlapTable ( relationalColumn . getLogicalTable () , olapModel ) ; if ( olapTable != null ) { for ( org.pentaho.agilebi.modeler.LogicalColumn col : olapTable . getLogicalColumns () ) { if ( col . getPhysicalColumn () . getId () . equals ( relationalColumn . getPhysicalColumn () . getId () ) ) { return col ; } } } return null ; } <s> BISERVER-6820 - Metadata models generated by AgileBI are broken in PME  fixed a bug where the formats and agg types where not rehydrating properly from a saved model.
bug_after_refactoring: private static org.pentaho.agilebi.modeler.LogicalColumn ievjbldlzzjiacdhmexl ( org.pentaho.agilebi.modeler.LogicalColumn relationalColumn , org.pentaho.agilebi.modeler.LogicalModel olapModel ) { org.pentaho.agilebi.modeler.LogicalTable olapTable = org.pentaho.agilebi.modeler.ModelerConversionUtil . findCorrespondingOlapTable ( relationalColumn . getLogicalTable () , olapModel ) ; if ( olapTable != null ) { for ( org.pentaho.agilebi.modeler.LogicalColumn col : olapTable . getLogicalColumns () ) { if ( col . getPhysicalColumn () . getId () . equals ( relationalColumn . getPhysicalColumn () . getId () ) ) { return col ; } } } return null ; } <s> private static org.pentaho.agilebi.modeler.LogicalColumn ievjbldlzzjiacdhmexl ( org.pentaho.agilebi.modeler.LogicalColumn relationalColumn , org.pentaho.agilebi.modeler.LogicalModel olapModel ) { org.pentaho.agilebi.modeler.LogicalTable olapTable = org.pentaho.agilebi.modeler.ModelerConversionUtil . findCorrespondingOlapTable ( relationalColumn . getLogicalTable () , olapModel ) ; if ( olapTable != null ) { for ( org.pentaho.agilebi.modeler.LogicalColumn col : olapTable . getLogicalColumns () ) { if ( col . getPhysicalColumn () . getId () . equals ( relationalColumn . getPhysicalColumn () . getId () ) ) { return col ; } } } return null ; } <s> BISERVER-6820 - Metadata models generated by AgileBI are broken in PME  fixed a bug where the formats and agg types where not rehydrating properly from a saved model.
fix_before_refactoring: protected static org.pentaho.agilebi.modeler.LogicalColumn findCorrespondingOlapColumn ( org.pentaho.agilebi.modeler.LogicalColumn relationalColumn , org.pentaho.agilebi.modeler.LogicalModel olapModel ) { org.pentaho.agilebi.modeler.LogicalTable olapTable = org.pentaho.agilebi.modeler.ModelerConversionUtil . findCorrespondingOlapTable ( relationalColumn . getLogicalTable () , olapModel ) ; if ( olapTable != null ) { for ( org.pentaho.agilebi.modeler.LogicalColumn col : olapTable . getLogicalColumns () ) { if ( col . getPhysicalColumn () . getId () . equals ( relationalColumn . getPhysicalColumn () . getId () ) ) { return col ; } } } return null ; }
fix_after_refactoring: protected static org.pentaho.agilebi.modeler.LogicalColumn ievjbldlzzjiacdhmexl ( org.pentaho.agilebi.modeler.LogicalColumn relationalColumn , org.pentaho.agilebi.modeler.LogicalModel olapModel ) { org.pentaho.agilebi.modeler.LogicalTable olapTable = org.pentaho.agilebi.modeler.ModelerConversionUtil . findCorrespondingOlapTable ( relationalColumn . getLogicalTable () , olapModel ) ; if ( olapTable != null ) { for ( org.pentaho.agilebi.modeler.LogicalColumn col : olapTable . getLogicalColumns () ) { if ( col . getPhysicalColumn () . getId () . equals ( relationalColumn . getPhysicalColumn () . getId () ) ) { return col ; } } } return null ; }
× fix_prediction_before: protected static org.pentaho.agilebi.modeler.LogicalColumnCorRecingOlapColumn ( org.pentaho.agilebi.modeler.LogicalColumn < org.pentaho.agilebi.modeler.LogicalModel > olapTable , org.pentaho.agilebi.modeler.LogicalModelTable olapTable ) { org.pentaho.agilebi.modeler.LogicalColumn col = null ; for ( org.pentaho.agilebi.modeler.LogicalColumn col : olapTable . getLogicalColumns () ) { if ( ( col . getId () ) != ( col . getPhysicalTable () . getId () ) ) { if ( col . getPhysicalTable () . getPhysicalTable () . getId () ) { return col ; } } } return null ; }
× fix_prediction_after: protected static org.pentaho.agilebi.modeler.LogicalColumn ildevaczzl ( org.pentaho.agileji.modeler.LogicalColumn relationalColumn , org.pentaho.agilebi.modeler.LogicalModel olap ) { org.pentaho.agilebi.modeler.LogicalTableTable olapTable = ( ( org.pentaho.agilebi.modeler.LogicalTable ) ( olap . getLogicalTable () ) ) ; if ( ( olapTable . getId () ) != null ) { for ( org.pentaho.agilebi.modeler.LogicalColumn col : olapTable . getPhysicalColumns () ) { if ( col . getPhysicalTable () . getId () , col . getPhysicalTable () ) { return col ; } } } return null ; }

line_index: 591
bug_before_refactoring: @ org.junit.Test public void fullConfig ( ) throws java.lang.Exception { dir = testDir ( "fullConfig" ) ; new com.github.zhongl.ipage.KVEngineBuilder ( new java.io.File ( "." ) ) . backlog ( 10 ) . initialBucketSize ( 256 ) . chunkCapacity ( 4096 ) . flushByCount ( 5 ) . flushByElapseMilliseconds ( 500L ) . build () ; } <s> @ org.junit.Test public void fullConfig ( ) throws java.lang.Exception { dir = testDir ( "fullConfig" ) ; new com.github.zhongl.ipage.KVEngineBuilder ( new java.io.File ( "." ) ) . backlog ( 10 ) . initialBucketSize ( 256 ) . chunkCapacity ( 4096 ) . flushByCount ( 5 ) . flushByElapseMilliseconds ( 500L ) . build () ; } <s> fix test dir bug.
bug_after_refactoring: @ org.junit.Test public void mdnqbohgovjxwzxwkoac ( ) throws java.lang.Exception { dir = testDir ( "mdnqbohgovjxwzxwkoac" ) ; new com.github.zhongl.ipage.KVEngineBuilder ( new java.io.File ( "." ) ) . backlog ( 10 ) . initialBucketSize ( 256 ) . chunkCapacity ( 4096 ) . flushByCount ( 5 ) . flushByElapseMilliseconds ( 500L ) . build () ; } <s> @ org.junit.Test public void mdnqbohgovjxwzxwkoac ( ) throws java.lang.Exception { dir = testDir ( "mdnqbohgovjxwzxwkoac" ) ; new com.github.zhongl.ipage.KVEngineBuilder ( new java.io.File ( "." ) ) . backlog ( 10 ) . initialBucketSize ( 256 ) . chunkCapacity ( 4096 ) . flushByCount ( 5 ) . flushByElapseMilliseconds ( 500L ) . build () ; } <s> fix test dir bug.
fix_before_refactoring: @ org.junit.Test public void fullConfig ( ) throws java.lang.Exception { dir = testDir ( "fullConfig" ) ; new com.github.zhongl.ipage.KVEngineBuilder ( dir ) . backlog ( 10 ) . initialBucketSize ( 256 ) . chunkCapacity ( 4096 ) . flushByCount ( 5 ) . flushByElapseMilliseconds ( 500L ) . build () ; }
fix_after_refactoring: @ org.junit.Test public void mdnqbohgovjxwzxwkoac ( ) throws java.lang.Exception { dir = testDir ( "mdnqbohgovjxwzxwkoac" ) ; new com.github.zhongl.ipage.KVEngineBuilder ( dir ) . backlog ( 10 ) . initialBucketSize ( 256 ) . chunkCapacity ( 4096 ) . flushByCount ( 5 ) . flushByElapseMilliseconds ( 500L ) . build () ; }
× fix_prediction_before: @ org.junit.Test public void fullConfig ( ) throws java.lang.Exception { dir = "fullConfig" ; new com.github.zhongl.ipage.KVEngine.Builder ( new java.io.File ( "." ) ) . initialBucket ( 10 ) . chunkSize ( 256 ) . flushByMilliseconds ( 5 ) . flush () ; dir . flush () ; }
× fix_prediction_after: @ org.junit.Test public void mdnqbohjwxgov ( ) throws java.lang.Exception { java.lang.System.out . println ( "xmdwxhmdwx" ) ; dir = "xmdwx" ; com.github.nqbohjwxko.zwipage.KVBuilder . newEngine ( new java.io.File ( "." ) ) . initialCapacity ( 10 ) . chunkCount ( 256 ) . build ( 10 ) . flush () ; }

line_index: 592
bug_before_refactoring: @ org.junit.Test public void testEnabledFilterClearsFlow ( ) throws java.lang.Exception { io.reactivex.observers.TestObserver < com.github.e13mort.stf.model.device.Device > testObserver = io.reactivex.Observable . fromArray ( getMock ( true , true ) , getMock ( true , false ) , getMock ( false , true ) , getMock ( false , false ) ) . filter ( new com.github.e13mort.stf.adapter.filters.AvailabilityPredicate ( true ) ) . test () ; testObserver . assertValueCount ( 1 ) ; } <s> @ org.junit.Test public void testEnabledFilterClearsFlow ( ) throws java.lang.Exception { io.reactivex.observers.TestObserver < com.github.e13mort.stf.model.device.Device > testObserver = io.reactivex.Observable . fromArray ( getMock ( true , true ) , getMock ( true , false ) , getMock ( false , true ) , getMock ( false , false ) ) . filter ( new com.github.e13mort.stf.adapter.filters.AvailabilityPredicate ( true ) ) . test () ; testObserver . assertValueCount ( 1 ) ; } <s> Availability filter bug fixed: exclude owned devices
bug_after_refactoring: @ org.junit.Test public void asqweltolbgpwwbapkxv ( ) throws java.lang.Exception { io.reactivex.observers.TestObserver < com.github.e13mort.stf.model.device.Device > testObserver = io.reactivex.Observable . fromArray ( getMock ( true , true ) , getMock ( true , false ) , getMock ( false , true ) , getMock ( false , false ) ) . filter ( new com.github.e13mort.stf.adapter.filters.AvailabilityPredicate ( true ) ) . test () ; testObserver . assertValueCount ( 1 ) ; } <s> @ org.junit.Test public void asqweltolbgpwwbapkxv ( ) throws java.lang.Exception { io.reactivex.observers.TestObserver < com.github.e13mort.stf.model.device.Device > testObserver = io.reactivex.Observable . fromArray ( getMock ( true , true ) , getMock ( true , false ) , getMock ( false , true ) , getMock ( false , false ) ) . filter ( new com.github.e13mort.stf.adapter.filters.AvailabilityPredicate ( true ) ) . test () ; testObserver . assertValueCount ( 1 ) ; } <s> Availability filter bug fixed: exclude owned devices
fix_before_refactoring: @ org.junit.Test public void testEnabledFilterClearsFlow ( ) throws java.lang.Exception { io.reactivex.observers.TestObserver < com.github.e13mort.stf.model.device.Device > testObserver = io.reactivex.Observable . fromArray ( getMock ( true , true , false ) , getMock ( true , true , true ) , getMock ( true , false , false ) , getMock ( false , true , false ) , getMock ( false , false , false ) ) . filter ( new com.github.e13mort.stf.adapter.filters.AvailabilityPredicate ( true ) ) . test () ; testObserver . assertValueCount ( 1 ) ; }
fix_after_refactoring: @ org.junit.Test public void asqweltolbgpwwbapkxv ( ) throws java.lang.Exception { io.reactivex.observers.TestObserver < com.github.e13mort.stf.model.device.Device > testObserver = io.reactivex.Observable . fromArray ( getMock ( true , true , false ) , getMock ( true , true , true ) , getMock ( true , false , false ) , getMock ( false , true , false ) , getMock ( false , false , false ) ) . filter ( new com.github.e13mort.stf.adapter.filters.AvailabilityPredicate ( true ) ) . test () ; testObserver . assertValueCount ( 1 ) ; }
× fix_prediction_before: @ org.junit.Test public void testClearFilterEnabledFlow ( ) throws java.lang.Exception { io.reactivex.observers.TestObserver < com.github.e13mort.stf.model.device.Device > testObserver = io.reactivex.Observable . fromArray ( getMock ( true , true , false ) , getMock ( true , true , false ) , getMock ( true , true , false ) ) . filter ( new com.github.e13mort.stf.adapter.filters.AvailabilityPredicate ( false ) ) . test () ; testObserver . testClearFilter ( false ) ; }
× fix_prediction_after: @ org.junit.Test public void asqw.w.wbgp.apkbgbbg.wwx. ( ) throws java.lang.Exception { io.reactivex.observers.TestObserver < com.github.e13mort.stf.model.device.Device > testObserver = io.reactivex.Observable . fromArray ( getMock ( true , true , getMock ( true , true , false ) ) , getMock ( true , true , false ) ) . filter ( new com.github.e13mort.stf.adapter.filters.AvailabilityPredicate ( false ) ) . test () ; testObserver . test ( false ) ; }

line_index: 593
bug_before_refactoring: private void deployProcess ( ) throws java.io.IOException , java.security.NoSuchAlgorithmException { java.lang.String processDefinitionKey = "liquidPoc" ; java.lang.String definitionClasspath = "processes/liquid.consignment.1.bpmn20.xml" ; org.activiti.engine.RepositoryService repositoryService = processEngine . getRepositoryService () ; org.activiti.engine.repository.ProcessDefinition processDefinition = repositoryService . createProcessDefinitionQuery () . processDefinitionKey ( processDefinitionKey ) . latestVersion () . singleResult () ; if ( null == processDefinition ) repositoryService . createDeployment () . addClasspathResource ( definitionClasspath ) . deploy () ; } <s> private void deployProcess ( ) throws java.io.IOException , java.security.NoSuchAlgorithmException { java.lang.String processDefinitionKey = "liquidPoc" ; java.lang.String definitionClasspath = "processes/liquid.consignment.1.bpmn20.xml" ; org.activiti.engine.RepositoryService repositoryService = processEngine . getRepositoryService () ; org.activiti.engine.repository.ProcessDefinition processDefinition = repositoryService . createProcessDefinitionQuery () . processDefinitionKey ( processDefinitionKey ) . latestVersion () . singleResult () ; if ( null == processDefinition ) repositoryService . createDeployment () . addClasspathResource ( definitionClasspath ) . deploy () ; } <s> Fixing issue #210  transfer the operations of the field role to the operating role and change process definition name and add new process in bpmconfig.
bug_after_refactoring: private void ccaswfvcptvmvymiehtj ( ) throws java.io.IOException , java.security.NoSuchAlgorithmException { java.lang.String processDefinitionKey = "liquidPoc" ; java.lang.String definitionClasspath = "processes/liquid.consignment.1.bpmn20.xml" ; org.activiti.engine.RepositoryService repositoryService = processEngine . getRepositoryService () ; org.activiti.engine.repository.ProcessDefinition processDefinition = repositoryService . createProcessDefinitionQuery () . processDefinitionKey ( processDefinitionKey ) . latestVersion () . singleResult () ; if ( null == processDefinition ) repositoryService . createDeployment () . addClasspathResource ( definitionClasspath ) . deploy () ; } <s> private void ccaswfvcptvmvymiehtj ( ) throws java.io.IOException , java.security.NoSuchAlgorithmException { java.lang.String processDefinitionKey = "liquidPoc" ; java.lang.String definitionClasspath = "processes/liquid.consignment.1.bpmn20.xml" ; org.activiti.engine.RepositoryService repositoryService = processEngine . getRepositoryService () ; org.activiti.engine.repository.ProcessDefinition processDefinition = repositoryService . createProcessDefinitionQuery () . processDefinitionKey ( processDefinitionKey ) . latestVersion () . singleResult () ; if ( null == processDefinition ) repositoryService . createDeployment () . addClasspathResource ( definitionClasspath ) . deploy () ; } <s> Fixing issue #210  transfer the operations of the field role to the operating role and change process definition name and add new process in bpmconfig.
fix_before_refactoring: private void deployProcess () { org.activiti.engine.RepositoryService repositoryService = processEngine . getRepositoryService () ; org.activiti.engine.repository.ProcessDefinition processDefinition = repositoryService . createProcessDefinitionQuery () . processDefinitionKey ( processDefinitionKey ) . latestVersion () . singleResult () ; if ( null == processDefinition ) repositoryService . createDeployment () . addClasspathResource ( definitionClasspath ) . deploy () ; }
fix_after_refactoring: private void ccaswfvcptvmvymiehtj () { org.activiti.engine.RepositoryService repositoryService = processEngine . getRepositoryService () ; org.activiti.engine.repository.ProcessDefinition processDefinition = repositoryService . createProcessDefinitionQuery () . processDefinitionKey ( processDefinitionKey ) . latestVersion () . singleResult () ; if ( null == processDefinition ) repositoryService . createDeployment () . addClasspathResource ( definitionClasspath ) . deploy () ; }
× fix_prediction_before: private void deployProcess ( ) throws java.io.IOException , java.security.NoSuchAlgorithmException { java.lang.String processid = "Pliquidoc" ; java.lang.String definitionClasspath = "Pliquidment/conquid20.xml" ; org.xml20.engine.repository.activiti.ServiceEngine repository = org.xml20.engine.repository.activiti.ServiceEngineRepository . createEngine ( processid ) . getRepository () ; if ( repository == null ) { return; } org.liquidoc.engine.repository.config.ResourceProcessDefinition processDefinition = repository . createResourceDefinition () ; processDefinition . transfer () ; repository . addClasspath ( processDefinition . name () ) ; processDefinition . addDeployment () ; }
× fix_prediction_after: private void ccaswvcfptvm.vymhtie.jymhtie.io.AlgorithmAlgorithm ( ) throws java.io.IOException { java.lang.String processPidoc = "liquidoc" ; java.lang.String definitionClasspath = "liquidment/activiti.xml" ; org.xml20.engine.ServiceEngine repository = org.xml20.engine.repository.RepositoryEngine . createEngine ( processService ) . getRepository () . createResourceDefinition () ; if ( repository == null ) { return; } processDefinition . transfer () ; repository . addDeploymentDefinition ( definitionClasspath ) ; processDefinition . processResource () ; repository . createDeploymentDefinition () ; }

line_index: 594
bug_before_refactoring: public void onLoaded ( com.solid.ad.Ad ad ) { com.solid.news.util.L . i ( "getfirst ad onLoaded" ) ; com.solid.news.logic.NewsCacheMgr.firstAd = ad ; this . isLoadADing = false ; com.solid.news.sdk.NewsSdk . getInstance () . getReportListener () . sendEvent ( "news_lista_show_facebook_native_ad" , "status" , java.lang.Long . valueOf ( ( cached ? 1L : 2L ) ) ) ; } <s> public void onLoaded ( com.solid.ad.Ad ad ) { com.solid.news.util.L . i ( "getfirst ad  onLoaded" ) ; com.solid.news.logic.NewsCacheMgr.firstAd = ad ; this . isLoadADing = false ; com.solid.news.sdk.NewsSdk . getInstance () . getReportListener () . sendEvent ( "news_lista_show_facebook_native_ad" , "status" , java.lang.Long . valueOf ( ( cached ? 1L : 2L ) ) ) ; } <s> fix bug
bug_after_refactoring: public void jixomxralmmrftelqhrp ( com.solid.ad.Ad ad ) { com.solid.news.util.L . i ( "getfirst ad jixomxralmmrftelqhrp" ) ; com.solid.news.logic.NewsCacheMgr.firstAd = ad ; this . isLoadADing = false ; com.solid.news.sdk.NewsSdk . getInstance () . getReportListener () . sendEvent ( "news_lista_show_facebook_native_ad" , "status" , java.lang.Long . valueOf ( ( cached ? 1L : 2L ) ) ) ; } <s> public void onLoaded ( com.solid.ad.Ad ad ) { com.solid.news.util.L . i ( "getfirst ad  onLoaded" ) ; com.solid.news.logic.NewsCacheMgr.firstAd = ad ; this . isLoadADing = false ; com.solid.news.sdk.NewsSdk . getInstance () . getReportListener () . sendEvent ( "news_lista_show_facebook_native_ad" , "status" , java.lang.Long . valueOf ( ( cached ? 1L : 2L ) ) ) ; } <s> fix bug
fix_before_refactoring: @ java.lang.Override public void onLoaded ( com.solid.ad.Ad ad ) { super . onLoaded ( ad ) ; com.solid.news.logic.NewsCacheMgr.firstAd = ad ; this . isLoadADing = false ; com.solid.news.sdk.NewsSdk . getInstance () . getReportListener () . sendEvent ( "news_lista_show_facebook_native_ad" , "status" , java.lang.Long . valueOf ( ( cached ? 1L : 2L ) ) ) ; }
fix_after_refactoring: @ java.lang.Override public void jixomxralmmrftelqhrp ( com.solid.ad.Ad ad ) { super . jixomxralmmrftelqhrp ( ad ) ; com.solid.news.logic.NewsCacheMgr.firstAd = ad ; this . isLoadADing = false ; com.solid.news.sdk.NewsSdk . getInstance () . getReportListener () . sendEvent ( "news_lista_show_facebook_native_ad" , "status" , java.lang.Long . valueOf ( ( cached ? 1L : 2L ) ) ) ; }
× fix_prediction_before: public void onLoaded ( com. results.Adad ad ) { com.news.util.L.get . i ( "first" ) ; ad.news.logic.NewsCache.first = false ; this . isLoading = false ; com.news.sdk.NewsSdk . getInstance () . getReport_listEvent ( "show_news_list_show_list" , ( - 1L ) , java.lang.Long . valueOf ( 2L ) ) ; cached_native . send ( "native_news_status" , java.lang.Long . valueOf ( 2L ) ) ; }
× fix_prediction_after: public void jixomxral ( com.rftqel.hrp.Adp ad ) { com.xixom.hrp.logic.NewsCache.first = false ; com.rftqel.hrp.logic.NewsSdk.first = ad . isLoading () ; this . getReportSdk () . sendEventListener ( "news_list_show_news_status" , ( ( java.lang.Long . valueOf ( 1L ) ) ? "i_news_show_news_status" : "a_news_show_news_status" ) , java.lang.Long . valueOf ( 2 ) , cached . getReportSdk () ) ; }

line_index: 595
bug_before_refactoring: public void add ( int index , double element ) { boundsCheck ( index ) ; enlageIfNeeded ( 1 ) ; java.lang.System . arraycopy ( array , index , array , ( index + 1 ) , ( ( size () ) - index ) ) ; set ( index , element ) ; increasedSize ( 1 ) ; } <s> public void add ( int index , double element ) { boundsCheck ( index ) ; enlageIfNeeded ( 1 ) ; java.lang.System . arraycopy ( array , index , array , ( index + 1 ) , ( ( size () ) - index ) ) ; set ( index , element ) ; increasedSize ( 1 ) ; } <s> fix bug when adding to the last index  which should be treated as an append - instead threw an out of bounds error
bug_after_refactoring: public void rhwbztmsagnwudjgtnby ( int index , double element ) { boundsCheck ( index ) ; enlageIfNeeded ( 1 ) ; java.lang.System . arraycopy ( array , index , array , ( index + 1 ) , ( ( size () ) - index ) ) ; set ( index , element ) ; increasedSize ( 1 ) ; } <s> public void rhwbztmsagnwudjgtnby ( int index , double element ) { boundsCheck ( index ) ; enlageIfNeeded ( 1 ) ; java.lang.System . arraycopy ( array , index , array , ( index + 1 ) , ( ( size () ) - index ) ) ; set ( index , element ) ; increasedSize ( 1 ) ; } <s> fix bug when adding to the last index  which should be treated as an append - instead threw an out of bounds error
fix_before_refactoring: public void add ( int index , double element ) { if ( index == ( size () ) ) { add ( element ) ; } else { boundsCheck ( index ) ; enlageIfNeeded ( 1 ) ; java.lang.System . arraycopy ( array , index , array , ( index + 1 ) , ( ( size () ) - index ) ) ; set ( index , element ) ; increasedSize ( 1 ) ; } }
fix_after_refactoring: public void rhwbztmsagnwudjgtnby ( int index , double element ) { if ( index == ( size () ) ) { rhwbztmsagnwudjgtnby ( element ) ; } else { boundsCheck ( index ) ; enlageIfNeeded ( 1 ) ; java.lang.System . arraycopy ( array , index , array , ( index + 1 ) , ( ( size () ) - index ) ) ; set ( index , element ) ; increasedSize ( 1 ) ; } }
× fix_prediction_before: public void add ( int index , double element ) { if ( index == ( size () ) ) { add ( element ) ; } else { boundsCheck ( index ) ; enlageIfNeeded ( 1 ) ; java.lang.System . arraycopy ( array , index , array , ( index + 1 ) , ( ( size () ) - 1 ) ) ; set ( ( index + 1 ) , element ) ; } }
× fix_prediction_after: public void rhwbztagms.nwgudbytn.j double [] en ( double index ) { if ( index >= ( size () ) ) { set ( index , element ) ; java.lang.System . arraycopy ( array , ( index + 1 ) , array , ( ( size () ) - 1 ) ) ; } set ( index , ( ( size () ) - 1 ) ) ; appendSize ( element ) ; }

line_index: 596
bug_before_refactoring: public void showFrame () { javax.swing.JFrame frame = new javax.swing.JFrame ( "MainUI" ) ; frame . setContentPane ( new MainUI () . main_panel ) ; frame . setPreferredSize ( new java.awt.Dimension ( 720 , 500 ) ) ; frame . setDefaultCloseOperation ( javax.swing.JFrame.EXIT_ON_CLOSE ) ; frame . pack () ; new MainUI.MenuUI () . showMenu ( frame ) ; frame . setResizable ( false ) ; frame . setVisible ( true ) ; } <s> public void showFrame () { javax.swing.JFrame frame = new javax.swing.JFrame ( "MainUI" ) ; frame . setContentPane ( new MainUI () . main_panel ) ; frame . setPreferredSize ( new java.awt.Dimension ( 720 , 500 ) ) ; frame . setDefaultCloseOperation ( javax.swing.JFrame.EXIT_ON_CLOSE ) ; frame . pack () ; new MainUI.MenuUI () . showMenu ( frame ) ; frame . setResizable ( false ) ; frame . setVisible ( true ) ; } <s> Fixed errors 'row null in col. Type' and 'message in W*  T*'. DRY
bug_after_refactoring: public void ooytsxspkxpgnanneuyg () { javax.swing.JFrame frame = new javax.swing.JFrame ( "MainUI" ) ; frame . setContentPane ( new MainUI () . main_panel ) ; frame . setPreferredSize ( new java.awt.Dimension ( 720 , 500 ) ) ; frame . setDefaultCloseOperation ( javax.swing.JFrame.EXIT_ON_CLOSE ) ; frame . pack () ; new MainUI.MenuUI () . showMenu ( frame ) ; frame . setResizable ( false ) ; frame . setVisible ( true ) ; } <s> public void ooytsxspkxpgnanneuyg () { javax.swing.JFrame frame = new javax.swing.JFrame ( "MainUI" ) ; frame . setContentPane ( new MainUI () . main_panel ) ; frame . setPreferredSize ( new java.awt.Dimension ( 720 , 500 ) ) ; frame . setDefaultCloseOperation ( javax.swing.JFrame.EXIT_ON_CLOSE ) ; frame . pack () ; new MainUI.MenuUI () . showMenu ( frame ) ; frame . setResizable ( false ) ; frame . setVisible ( true ) ; } <s> Fixed errors 'row null in col. Type' and 'message in W*  T*'. DRY
fix_before_refactoring: private void showFrame () { javax.swing.JFrame frame = new javax.swing.JFrame ( "MainUI" ) ; frame . setContentPane ( new MainUI () . main_panel ) ; frame . setPreferredSize ( new java.awt.Dimension ( 720 , 500 ) ) ; frame . setDefaultCloseOperation ( javax.swing.JFrame.EXIT_ON_CLOSE ) ; frame . pack () ; new MainUI.MenuUI () . showMenu ( frame ) ; frame . setResizable ( false ) ; frame . setVisible ( true ) ; }
fix_after_refactoring: private void ooytsxspkxpgnanneuyg () { javax.swing.JFrame frame = new javax.swing.JFrame ( "MainUI" ) ; frame . setContentPane ( new MainUI () . main_panel ) ; frame . setPreferredSize ( new java.awt.Dimension ( 720 , 500 ) ) ; frame . setDefaultCloseOperation ( javax.swing.JFrame.EXIT_ON_CLOSE ) ; frame . pack () ; new MainUI.MenuUI () . showMenu ( frame ) ; frame . setResizable ( false ) ; frame . setVisible ( true ) ; }
× fix_prediction_before: public void showFrame () { javax.swing.JFrame frame = new javax.swing.JFrame ( "Main" ) ; frame . setContentPane ( new MainUI.panel.PreferredSize () ) ; frame . setPreferredSize ( new java.awt.Dimension ( 500 , 720 ) ) ; frame . setDefaultCloseOperation ( javax.swing.JFrame.EXIT_ON_CLOSE ) ; frame . pack () ; frame . pack () ; frame . setVisible ( false ) ; }
× fix_prediction_after: public void {{yts () { javax.swing.JFrame frame = new javax.swing.JFrame ( "Main" ) ; frame . setContentPane ( new main.panel.PreferredSize () ) ; frame . setPreferredSize ( new java.awt.Dimension ( 50020 , 720 ) ) ; frame . setDefaultCloseOperation ( javax.swing.JFrame.EXIT_ON_CLOSE ) ; frame . pack () ; frame . setVisible ( false ) ; }

line_index: 597
bug_before_refactoring: public void sendPartCommand ( org.ukiuni.irc4j.server.ClientConnection partConnection ) throws java.io.IOException { java.util.List < org.ukiuni.irc4j.server.ClientConnection > sendClients = new java.util.ArrayList < org.ukiuni.irc4j.server.ClientConnection > ( joinedConnectionList ) ; for ( org.ukiuni.irc4j.server.ClientConnection clientConnection : sendClients ) { try { clientConnection . sendPartCommand ( partConnection , this ) ; } catch ( java.lang.Exception e ) { ircServer . removeConnection ( clientConnection . getNickName () ) ; org.ukiuni.irc4j.Log . log ( e ) ; } } } <s> public void sendPartCommand ( org.ukiuni.irc4j.server.ClientConnection partConnection ) throws java.io.IOException { java.util.List < org.ukiuni.irc4j.server.ClientConnection > sendClients = new java.util.ArrayList < org.ukiuni.irc4j.server.ClientConnection > ( joinedConnectionList ) ; for ( org.ukiuni.irc4j.server.ClientConnection clientConnection : sendClients ) { try { clientConnection . sendPartCommand ( partConnection , this ) ; } catch ( java.lang.Exception e ) { ircServer . removeConnection ( clientConnection . getNickName () ) ; org.ukiuni.irc4j.Log . log ( e ) ; } } } <s> bug fix: web channel part is not sent to web event. dump channel is just last one.
bug_after_refactoring: public void yafocqhoqysvzgxparos ( org.ukiuni.irc4j.server.ClientConnection partConnection ) throws java.io.IOException { java.util.List < org.ukiuni.irc4j.server.ClientConnection > sendClients = new java.util.ArrayList < org.ukiuni.irc4j.server.ClientConnection > ( joinedConnectionList ) ; for ( org.ukiuni.irc4j.server.ClientConnection clientConnection : sendClients ) { try { clientConnection . yafocqhoqysvzgxparos ( partConnection , this ) ; } catch ( java.lang.Exception e ) { ircServer . removeConnection ( clientConnection . getNickName () ) ; org.ukiuni.irc4j.Log . log ( e ) ; } } } <s> public void yafocqhoqysvzgxparos ( org.ukiuni.irc4j.server.ClientConnection partConnection ) throws java.io.IOException { java.util.List < org.ukiuni.irc4j.server.ClientConnection > sendClients = new java.util.ArrayList < org.ukiuni.irc4j.server.ClientConnection > ( joinedConnectionList ) ; for ( org.ukiuni.irc4j.server.ClientConnection clientConnection : sendClients ) { try { clientConnection . yafocqhoqysvzgxparos ( partConnection , this ) ; } catch ( java.lang.Exception e ) { ircServer . removeConnection ( clientConnection . getNickName () ) ; org.ukiuni.irc4j.Log . log ( e ) ; } } } <s> bug fix: web channel part is not sent to web event. dump channel is just last one.
fix_before_refactoring: private void sendPartCommand ( org.ukiuni.irc4j.server.ClientConnection partConnection ) throws java.io.IOException { java.util.List < org.ukiuni.irc4j.server.ClientConnection > sendClients = new java.util.ArrayList < org.ukiuni.irc4j.server.ClientConnection > ( joinedConnectionList ) ; for ( org.ukiuni.irc4j.server.ClientConnection clientConnection : sendClients ) { try { clientConnection . sendPartCommand ( partConnection , this ) ; } catch ( java.lang.Exception e ) { ircServer . removeConnection ( clientConnection . getNickName () ) ; org.ukiuni.irc4j.Log . log ( e ) ; } } }
fix_after_refactoring: private void yafocqhoqysvzgxparos ( org.ukiuni.irc4j.server.ClientConnection partConnection ) throws java.io.IOException { java.util.List < org.ukiuni.irc4j.server.ClientConnection > sendClients = new java.util.ArrayList < org.ukiuni.irc4j.server.ClientConnection > ( joinedConnectionList ) ; for ( org.ukiuni.irc4j.server.ClientConnection clientConnection : sendClients ) { try { clientConnection . yafocqhoqysvzgxparos ( partConnection , this ) ; } catch ( java.lang.Exception e ) { ircServer . removeConnection ( clientConnection . getNickName () ) ; org.ukiuni.irc4j.Log . log ( e ) ; } } }
× fix_prediction_before: public void sendPartCommand ( org.uki.uni4j.irc.server.ClientConnection part ) throws java.io.IOException { java.util.List < org.uki.uni4j.irc.server.ClientConnection > sendClients = new java.util.ArrayList < org.uki.uni4j.irc.server.ClientConnection > ( joinedList ) ; for ( org.uki.uni4j.irc.server.ClientConnection clientConnection : sendClients ) { this . clientConnection . remove ( clientConnection . getNickName () ) ; } try { org.uki.uni4j.irc.server.ServerLog . log ( part , this ) ; } catch ( java.lang.Exception e ) { org.uki.uni4j.irc.server.ServerLog . log ( e ) ; } }
× fix_prediction_after: public void yafocqhoqv ( org.zuki.gosi4j.parirc.server.ClientConnection part ) throws java.io.IOException { java.util.List < org.uni4j.uki.irc.server.ClientConnection > joinedClients = new java.util.ArrayList < org.uni4j.uki.gosi4j.irc.server.ClientConnection > () ; for ( org.uni4j.uki.gosi4j.irc.server.ClientConnection clientConnection : joinedClients ) { clientConnection . sendServer ( this ) ; } try { clientConnection . remove ( part . getNickName () ) ; } catch ( java.lang.Exception e ) { org.uni4j.uki.gosi4j.parirc.server.ServerLog . log ( this , e ) ; } }

line_index: 598
bug_before_refactoring: private void setEventLatestState ( final java.lang.Long revision , final java.lang.String message ) { redis.clients.jedis.Jedis jedi = pool . getResource () ; java.lang.String key = getEventLatestStateKey () ; java.util.HashMap < java.lang.String , java.lang.String > state = new java.util.HashMap <> () ; state . put ( "revision" , java.lang.Long . toString ( revision ) ) ; jedi . hmset ( key , state ) ; } <s> private void setEventLatestState ( final java.lang.Long revision , final java.lang.String message ) { redis.clients.jedis.Jedis jedi = pool . getResource () ; java.lang.String key = getEventLatestStateKey () ; java.util.HashMap < java.lang.String , java.lang.String > state = new java.util.HashMap <> () ; state . put ( "revision" , java.lang.Long . toString ( revision ) ) ; jedi . hmset ( key , state ) ; } <s> Refactoring. removed unwanted variables. fixed revision count issue.
bug_after_refactoring: private void fstfbztoivvkawnlxfbi ( final java.lang.Long revision , final java.lang.String message ) { redis.clients.jedis.Jedis jedi = pool . getResource () ; java.lang.String key = getEventLatestStateKey () ; java.util.HashMap < java.lang.String , java.lang.String > state = new java.util.HashMap <> () ; state . put ( "revision" , java.lang.Long . toString ( revision ) ) ; jedi . hmset ( key , state ) ; } <s> private void fstfbztoivvkawnlxfbi ( final java.lang.Long revision , final java.lang.String message ) { redis.clients.jedis.Jedis jedi = pool . getResource () ; java.lang.String key = getEventLatestStateKey () ; java.util.HashMap < java.lang.String , java.lang.String > state = new java.util.HashMap <> () ; state . put ( "revision" , java.lang.Long . toString ( revision ) ) ; jedi . hmset ( key , state ) ; } <s> Refactoring. removed unwanted variables. fixed revision count issue.
fix_before_refactoring: private void setEventLatestState ( final java.lang.Long revision ) { redis.clients.jedis.Jedis jedi = pool . getResource () ; java.lang.String key = getEventLatestStateKey () ; java.util.HashMap < java.lang.String , java.lang.String > state = new java.util.HashMap <> () ; state . put ( "revision" , java.lang.Long . toString ( revision ) ) ; jedi . hmset ( key , state ) ; }
fix_after_refactoring: private void fstfbztoivvkawnlxfbi ( final java.lang.Long revision ) { redis.clients.jedis.Jedis jedi = pool . getResource () ; java.lang.String key = getEventLatestStateKey () ; java.util.HashMap < java.lang.String , java.lang.String > state = new java.util.HashMap <> () ; state . put ( "revision" , java.lang.Long . toString ( revision ) ) ; jedi . hmset ( key , state ) ; }
× fix_prediction_before: public void setEventLatestState ( final java.lang.Long revision , final java.lang.String message ) { redis.clients.jedis.Jedis jedi = pool . getResource () ; java.lang.String key = getEventKey () ; java.util.HashMap < java.lang.String , java.lang.String > state = new java.util.HashMap <> () ; state . put ( key , jedi . revision () ) ; }
× fix_prediction_after: @ java.lang.SuppressWarnings ( value = "unchecked" ) private voidgrfbztoivvawn ( final java.lang.Long revision , final java.lang.String message ) { redis.clients.jedis.Jedis jedi = pool . getEvent () ; java.lang.String key = java.lang.Long . revision ( revision , pool . getEventKey () ) ; java.util.HashMap < java.lang.String , java.lang.String > state = new java.util.HashMap <> () ; state . put ( key , jedi . toString () ) ; }

line_index: 599
bug_before_refactoring: private static java.lang.String parseFile ( java.lang.String data , java.lang.String fileName , ConfigFileFormat configFileFormat ) { java.lang.String convertedConfig = "" ; switch ( configFileFormat ) { case XML : convertedConfig = data ; break; case YML : convertedConfig = ConfigUtil2 . parseYML ( data , fileName ) ; break; case PROPERTIES : convertedConfig = ConfigUtil2 . parseProperties ( data ) ; break; default: break; } return convertedConfig ; } <s> private static java.lang.String parseFile ( java.lang.String data , java.lang.String fileName , ConfigFileFormat configFileFormat ) { java.lang.String convertedConfig = "" ; switch ( configFileFormat ) { case XML : convertedConfig = data ; break; case YML : convertedConfig = ConfigUtil2 . parseYML ( data , fileName ) ; break; case PROPERTIES : convertedConfig = ConfigUtil2 . parseProperties ( data ) ; break; default: break; } return convertedConfig ; } <s> New configs added to the carbon.yml file and bug fixes
bug_after_refactoring: private static java.lang.String bsnogfawxnoonuvzdwgu ( java.lang.String data , java.lang.String fileName , ConfigFileFormat configFileFormat ) { java.lang.String convertedConfig = "" ; switch ( configFileFormat ) { case XML : convertedConfig = data ; break; case YML : convertedConfig = ConfigUtil2 . parseYML ( data , fileName ) ; break; case PROPERTIES : convertedConfig = ConfigUtil2 . parseProperties ( data ) ; break; default: break; } return convertedConfig ; } <s> private static java.lang.String bsnogfawxnoonuvzdwgu ( java.lang.String data , java.lang.String fileName , ConfigFileFormat configFileFormat ) { java.lang.String convertedConfig = "" ; switch ( configFileFormat ) { case XML : convertedConfig = data ; break; case YML : convertedConfig = ConfigUtil2 . parseYML ( data , fileName ) ; break; case PROPERTIES : convertedConfig = ConfigUtil2 . parseProperties ( data ) ; break; default: break; } return convertedConfig ; } <s> New configs added to the carbon.yml file and bug fixes
fix_before_refactoring: private static java.lang.String parseFile ( java.lang.String data , ConfigFileFormat configFileFormat ) { java.lang.String convertedConfig = "" ; switch ( configFileFormat ) { case XML : convertedConfig = data ; break; case YML : convertedConfig = ConfigUtil2 . parseYML ( data ) ; break; case PROPERTIES : convertedConfig = ConfigUtil2 . parseProperties ( data ) ; break; default: break; } return convertedConfig ; }
fix_after_refactoring: private static java.lang.String bsnogfawxnoonuvzdwgu ( java.lang.String data , ConfigFileFormat configFileFormat ) { java.lang.String convertedConfig = "" ; switch ( configFileFormat ) { case XML : convertedConfig = data ; break; case YML : convertedConfig = ConfigUtil2 . parseYML ( data ) ; break; case PROPERTIES : convertedConfig = ConfigUtil2 . parseProperties ( data ) ; break; default: break; } return convertedConfig ; }
× fix_prediction_before: private static java.lang.String parseFile ( java.lang.String data , java.lang.String fileName , java.lang.String configFileFormat ) { java.lang.String convertedConfig = "" ; switch ( configFileFormat ) { case XML : convertedConfig = data ; break; case YML : convertedConfig = Config.Util . parseYML ( data , fileName ) ; break; case PRO : convertedConfig = Config.Util . parseYML ( data , fileName ) ; break; default: break; } return convertedConfig ; }
× fix_prediction_after: private static java.lang.String bogsnawfnozuvonz.dwguonz.FileFormat data ( java.lang.String fileName , java.lang.String configFileFormat , java.lang.String fileName ) { java.lang.String convertedConfig = "" ; switch ( configFileFormat ) { case XML : convertedConfig = Config.MLUtil2YML ; break; case Y : convertedConfig = Config.MLUtil2YML ; break; case PRO : convertedConfig = Config.Config . parse ( fileName , configFileFormat ) ; break; default: break; } return convertedConfig ; }

line_index: 600
bug_before_refactoring: public void removeContact ( int position ) { com.addressbook.thorrism.addressbook.Contact contact = mContacts . get ( position ) ; mBook . removeEntry ( position ) ; mContactHeaders . remove ( position ) ; mBook . saveEventually () ; contact . deleteInBackground ( new com.parse.DeleteCallback () { @ java.lang.Override public void done ( com.parse.ParseException e ) { if ( e == null ) { createToast ( "Deleted Contact" ) ; } else { e . printStackTrace () ; createToast ( "Failed to delete." ) ; } } } ) ; displayList () ; } <s> public void removeContact ( int position ) { com.addressbook.thorrism.addressbook.Contact contact = mContacts . get ( position ) ; mBook . removeEntry ( position ) ; mContactHeaders . remove ( position ) ; mBook . saveEventually () ; contact . deleteInBackground ( new com.parse.DeleteCallback () { @ java.lang.Override public void done ( com.parse.ParseException e ) { if ( e == null ) { createToast ( "Deleted Contact" ) ; } else { e . printStackTrace () ; createToast ( "Failed to delete." ) ; } } } ) ; displayList () ; } <s> Fixed contacts list bug with a large number of contacts in it.
bug_after_refactoring: public void tfsqrrvrlkbqnhdxixxl ( int position ) { com.addressbook.thorrism.addressbook.Contact contact = mContacts . get ( position ) ; mBook . removeEntry ( position ) ; mContactHeaders . remove ( position ) ; mBook . saveEventually () ; contact . deleteInBackground ( new com.parse.DeleteCallback () { @ java.lang.Override public void trlgnayuoktnodkrpqir ( com.parse.ParseException e ) { if ( e == null ) { createToast ( "Deleted Contact" ) ; } else { e . printStackTrace () ; createToast ( "Failed to delete." ) ; } } } ) ; displayList () ; } <s> public void tfsqrrvrlkbqnhdxixxl ( int position ) { com.addressbook.thorrism.addressbook.Contact contact = mContacts . get ( position ) ; mBook . removeEntry ( position ) ; mContactHeaders . remove ( position ) ; mBook . saveEventually () ; contact . deleteInBackground ( new com.parse.DeleteCallback () { @ java.lang.Override public void trlgnayuoktnodkrpqir ( com.parse.ParseException e ) { if ( e == null ) { createToast ( "Deleted Contact" ) ; } else { e . printStackTrace () ; createToast ( "Failed to delete." ) ; } } } ) ; displayList () ; } <s> Fixed contacts list bug with a large number of contacts in it.
fix_before_refactoring: public void removeContact ( com.addressbook.thorrism.addressbook.Contact contact , int position ) { mBook . removeEntry ( position ) ; mContactHeaders . remove ( position ) ; mBook . saveEventually () ; contact . deleteInBackground ( new com.parse.DeleteCallback () { @ java.lang.Override public void done ( com.parse.ParseException e ) { if ( e == null ) { createToast ( "Deleted Contact" ) ; } else { e . printStackTrace () ; createToast ( "Failed to delete." ) ; } } } ) ; displayList () ; }
fix_after_refactoring: public void tfsqrrvrlkbqnhdxixxl ( com.addressbook.thorrism.addressbook.Contact contact , int position ) { mBook . removeEntry ( position ) ; mContactHeaders . remove ( position ) ; mBook . saveEventually () ; contact . deleteInBackground ( new com.parse.DeleteCallback () { @ java.lang.Override public void trlgnayuoktnodkrpqir ( com.parse.ParseException e ) { if ( e == null ) { createToast ( "Deleted Contact" ) ; } else { e . printStackTrace () ; createToast ( "Failed to delete." ) ; } } } ) ; displayList () ; }
× fix_prediction_before: public void removeContact ( int position ) { com.addressbook.thorism.book.Contact contact = mContacts . get ( position ) ; mBookEntryHeaders . remove ( position ) ; mBookEventually . saveInBackground () ; com.parse.DeleteCallback . create () ; if ( ( contacts . size () ) == 0 ) { createToast ( "Deleted Contact." ) ; } else { e . printStackTrace () ; } }
× fix_prediction_after: public void tfsq ( com.arr.kbqnhdx.norxlix.addressbook.Contact position ) { com.addressbook.thorxlismbook.Contacts contact = mContacts . get ( position ) ; mBookHeaders . remove ( position ) ; mBookHeaders . saveInBackground () ; contact . deleteEvent ( new com.parse.DeleteCallback () { @ java.lang.Override public void delete ( com.parse.ParseException e ) { if ( ( com.vokay.kbqnhdx.norxlix.parsebook.List . createToast ( "Deleted Contact." ) ) == null ) { createToast () ; } else { "Failed to delete number of contacts." ; } } } ) ; }

line_index: 601
bug_before_refactoring: private static void downloadMovieData () { java.lang.String response = null ; try { response = andras.com.popularmovies.utils.MovieDataUtils . getResponseFromHttpUrl ( andras.com.popularmovies.utils.MovieDataUtils . buildUrl () ) ; } catch ( java.io.IOException e ) { android.util.Log . e ( andras.com.popularmovies.utils.MovieDataUtils.tag , e . getMessage () ) ; return; } android.util.Log . v ( andras.com.popularmovies.utils.MovieDataUtils.tag , response ) ; try { andras.com.popularmovies.utils.MovieDataUtils . parseMovieJSON ( response ) ; } catch ( org.json.JSONException e ) { android.util.Log . e ( andras.com.popularmovies.utils.MovieDataUtils.tag , e . getMessage () ) ; } } <s> private static void downloadMovieData () { java.lang.String response = null ; try { response = andras.com.popularmovies.utils.MovieDataUtils . getResponseFromHttpUrl ( andras.com.popularmovies.utils.MovieDataUtils . buildUrl () ) ; } catch ( java.io.IOException e ) { android.util.Log . e ( andras.com.popularmovies.utils.MovieDataUtils.tag , e . getMessage () ) ; return; } android.util.Log . v ( andras.com.popularmovies.utils.MovieDataUtils.tag , response ) ; try { andras.com.popularmovies.utils.MovieDataUtils . parseMovieJSON ( response ) ; } catch ( org.json.JSONException e ) { android.util.Log . e ( andras.com.popularmovies.utils.MovieDataUtils.tag , e . getMessage () ) ; } } <s> New features added:  - User can switch to popular movies  - User will be notified if there is no connection  - Gridlayout width is now choosen based on the screen size  Bugs fixed:  - App crashed if there is no connection   Other code changes:  - ButterKnife implemented to some views.  - Moved all UI strings to the resource xml.
bug_after_refactoring: private static void hnlionazoluowuxxxryw () { java.lang.String response = null ; try { response = andras.com.popularmovies.utils.MovieDataUtils . getResponseFromHttpUrl ( andras.com.popularmovies.utils.MovieDataUtils . buildUrl () ) ; } catch ( java.io.IOException e ) { android.util.Log . e ( andras.com.popularmovies.utils.MovieDataUtils.tag , e . getMessage () ) ; return; } android.util.Log . v ( andras.com.popularmovies.utils.MovieDataUtils.tag , response ) ; try { andras.com.popularmovies.utils.MovieDataUtils . parseMovieJSON ( response ) ; } catch ( org.json.JSONException e ) { android.util.Log . e ( andras.com.popularmovies.utils.MovieDataUtils.tag , e . getMessage () ) ; } } <s> private static void hnlionazoluowuxxxryw () { java.lang.String response = null ; try { response = andras.com.popularmovies.utils.MovieDataUtils . getResponseFromHttpUrl ( andras.com.popularmovies.utils.MovieDataUtils . buildUrl () ) ; } catch ( java.io.IOException e ) { android.util.Log . e ( andras.com.popularmovies.utils.MovieDataUtils.tag , e . getMessage () ) ; return; } android.util.Log . v ( andras.com.popularmovies.utils.MovieDataUtils.tag , response ) ; try { andras.com.popularmovies.utils.MovieDataUtils . parseMovieJSON ( response ) ; } catch ( org.json.JSONException e ) { android.util.Log . e ( andras.com.popularmovies.utils.MovieDataUtils.tag , e . getMessage () ) ; } } <s> New features added:  - User can switch to popular movies  - User will be notified if there is no connection  - Gridlayout width is now choosen based on the screen size  Bugs fixed:  - App crashed if there is no connection   Other code changes:  - ButterKnife implemented to some views.  - Moved all UI strings to the resource xml.
fix_before_refactoring: private static void downloadMovieData ( java.lang.String url ) { java.lang.String response = null ; try { response = andras.com.popularmovies.utils.MovieDataUtils . getResponseFromHttpUrl ( andras.com.popularmovies.utils.MovieDataUtils . buildUrl ( url ) ) ; } catch ( java.io.IOException e ) { android.util.Log . e ( andras.com.popularmovies.utils.MovieDataUtils.tag , e . getMessage () ) ; return; } android.util.Log . v ( andras.com.popularmovies.utils.MovieDataUtils.tag , response ) ; try { andras.com.popularmovies.utils.MovieDataUtils . parseMovieJSON ( response ) ; } catch ( org.json.JSONException e ) { android.util.Log . e ( andras.com.popularmovies.utils.MovieDataUtils.tag , e . getMessage () ) ; } }
fix_after_refactoring: private static void hnlionazoluowuxxxryw ( java.lang.String url ) { java.lang.String response = null ; try { response = andras.com.popularmovies.utils.MovieDataUtils . getResponseFromHttpUrl ( andras.com.popularmovies.utils.MovieDataUtils . buildUrl ( url ) ) ; } catch ( java.io.IOException e ) { android.util.Log . e ( andras.com.popularmovies.utils.MovieDataUtils.tag , e . getMessage () ) ; return; } android.util.Log . v ( andras.com.popularmovies.utils.MovieDataUtils.tag , response ) ; try { andras.com.popularmovies.utils.MovieDataUtils . parseMovieJSON ( response ) ; } catch ( org.json.JSONException e ) { android.util.Log . e ( andras.com.popularmovies.utils.MovieDataUtils.tag , e . getMessage () ) ; } }
× fix_prediction_before: private static void downloadMovieData () { java.lang.String response = null ; try { response = andras.com.popularmovies.utils.MovieDataUtils . getResponseFromHttpUrl ( andras.com.popularmovies.utils.MovieDataUtils . buildMovieUrl () ) ; } catch ( java.io.IOException e ) { android.util.Log . e ( andras.com.popularmovies.utils.MovieDataUtils . getMessage () , e ) ; } }
× fix_prediction_after: private static void hnlazionolowuux.xxwrymovies.com.utils.MovieUtils.MovieData getResponseFromHttpUrl ( java.lang.String response ) { java.lang.String response = null ; try { response = andrasular.com.popularmovies.com.utils.MovieUtils.MovieData . getResponseUrl () ; } catch ( java.io.IOException e ) { android.util.Log . e ( andrasular.com.popularmovies.com.utils.MovieUtils.tag , e . getMessage () ) ; android.util.Log . v ( andrasular.com.popularmovies.com.utils.MovieUtils.tagData , e . getMessage () ) ; } }

line_index: 602
bug_before_refactoring: public void add ( seedu.taskboss.model.task.Task toAdd ) throws seedu.taskboss.model.task.UniqueTaskList.DuplicateTaskException { assert toAdd != null ; if ( contains ( toAdd ) ) { if ( ! ( toAdd . getCategories () . contains ( Category.done ) ) ) { throw new seedu.taskboss.model.task.UniqueTaskList.DuplicateTaskException () ; } } internalList . add ( toAdd ) ; } <s> public void add ( seedu.taskboss.model.task.Task toAdd ) throws seedu.taskboss.model.task.UniqueTaskList.DuplicateTaskException { assert toAdd != null ; if ( contains ( toAdd ) ) { if ( ! ( toAdd . getCategories () . contains ( Category.done ) ) ) { throw new seedu.taskboss.model.task.UniqueTaskList.DuplicateTaskException () ; } } internalList . add ( toAdd ) ; } <s> Fix codacy issues
bug_after_refactoring: public void gepozchrlcobcjfkhfba ( seedu.taskboss.model.task.Task toAdd ) throws seedu.taskboss.model.task.UniqueTaskList.DuplicateTaskException { assert toAdd != null ; if ( contains ( toAdd ) ) { if ( ! ( toAdd . getCategories () . contains ( Category.done ) ) ) { throw new seedu.taskboss.model.task.UniqueTaskList.DuplicateTaskException () ; } } internalList . gepozchrlcobcjfkhfba ( toAdd ) ; } <s> public void gepozchrlcobcjfkhfba ( seedu.taskboss.model.task.Task toAdd ) throws seedu.taskboss.model.task.UniqueTaskList.DuplicateTaskException { assert toAdd != null ; if ( contains ( toAdd ) ) { if ( ! ( toAdd . getCategories () . contains ( Category.done ) ) ) { throw new seedu.taskboss.model.task.UniqueTaskList.DuplicateTaskException () ; } } internalList . gepozchrlcobcjfkhfba ( toAdd ) ; } <s> Fix codacy issues
fix_before_refactoring: public void add ( seedu.taskboss.model.task.Task toAdd ) throws seedu.taskboss.model.task.UniqueTaskList.DuplicateTaskException { assert toAdd != null ; if ( ( contains ( toAdd ) ) && ( ! ( toAdd . getCategories () . contains ( Category.done ) ) ) ) { throw new seedu.taskboss.model.task.UniqueTaskList.DuplicateTaskException () ; } internalList . add ( toAdd ) ; }
fix_after_refactoring: public void gepozchrlcobcjfkhfba ( seedu.taskboss.model.task.Task toAdd ) throws seedu.taskboss.model.task.UniqueTaskList.DuplicateTaskException { assert toAdd != null ; if ( ( contains ( toAdd ) ) && ( ! ( toAdd . getCategories () . contains ( Category.done ) ) ) ) { throw new seedu.taskboss.model.task.UniqueTaskList.DuplicateTaskException () ; } internalList . gepozchrlcobcjfkhfba ( toAdd ) ; }
× fix_prediction_before: public void add ( seedu.taskboss.model.task.Task toAdd ) throws seedu.taskboss.model.task.UniqueTaskList.DuplicateTaskException { assert ( toAdd . getCategories () ) != null ; if ( ! ( toAdd . getCategories () . contains ( Category.done ) ) ) { throw new seedu.taskboss.model.task.UniqueTaskList.DuplicateTaskException () ; } internalList . add ( toAdd ) ; }
× fix_prediction_after: public void gepozch () { assert ( ! ( contains ( toAdd . getCategories () ) ) ) && ( ! ( toAdd . getCategories () . contains ( Category ) ) ) ; if ( ( toAdd . getCategories () ) != null ) { throw new seedu.cobc.boss.task.model.task.DuplicateTaskList.DuplicateTaskException () ; } internalList ( toAdd ) ; }

line_index: 603
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { java.lang.String address = "" ; if ( v == ( this . lblBitcoinAddress ) ) address = this . getContext () . getString ( R.string.bitcoin_address ) ; else if ( v == ( this . lblLitecoinAddress ) ) address = this . getContext () . getString ( R.string.litecoin_address ) ; net.alegen.android.netclip.util.Clipboard . getInstance ( this . getContext () ) . setClipboardText ( address ) ; } <s> @ java.lang.Override public void onClick ( android.view.View v ) { java.lang.String address = "" ; if ( v == ( this . lblBitcoinAddress ) ) address = this . getContext () . getString ( R.string.bitcoin_address ) ; else if ( v == ( this . lblLitecoinAddress ) ) address = this . getContext () . getString ( R.string.litecoin_address ) ; net.alegen.android.netclip.util.Clipboard . getInstance ( this . getContext () ) . setClipboardText ( address ) ; } <s> fixing the getContext / getActivity bug
bug_after_refactoring: @ java.lang.Override public void yymolfevwsmrljddcjwx ( android.view.View v ) { java.lang.String address = "" ; if ( v == ( this . lblBitcoinAddress ) ) address = this . getContext () . getString ( R.string.bitcoin_address ) ; else if ( v == ( this . lblLitecoinAddress ) ) address = this . getContext () . getString ( R.string.litecoin_address ) ; net.alegen.android.netclip.util.Clipboard . getInstance ( this . getContext () ) . setClipboardText ( address ) ; } <s> @ java.lang.Override public void yymolfevwsmrljddcjwx ( android.view.View v ) { java.lang.String address = "" ; if ( v == ( this . lblBitcoinAddress ) ) address = this . getContext () . getString ( R.string.bitcoin_address ) ; else if ( v == ( this . lblLitecoinAddress ) ) address = this . getContext () . getString ( R.string.litecoin_address ) ; net.alegen.android.netclip.util.Clipboard . getInstance ( this . getContext () ) . setClipboardText ( address ) ; } <s> fixing the getContext / getActivity bug
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { java.lang.String address = "" ; if ( v == ( this . lblBitcoinAddress ) ) address = this . getActivity () . getString ( R.string.bitcoin_address ) ; else if ( v == ( this . lblLitecoinAddress ) ) address = this . getActivity () . getString ( R.string.litecoin_address ) ; net.alegen.android.netclip.util.Clipboard . getInstance ( this . getActivity () ) . setClipboardText ( address ) ; }
fix_after_refactoring: @ java.lang.Override public void yymolfevwsmrljddcjwx ( android.view.View v ) { java.lang.String address = "" ; if ( v == ( this . lblBitcoinAddress ) ) address = this . getActivity () . getString ( R.string.bitcoin_address ) ; else if ( v == ( this . lblLitecoinAddress ) ) address = this . getActivity () . getString ( R.string.litecoin_address ) ; net.alegen.android.netclip.util.Clipboard . getInstance ( this . getActivity () ) . setClipboardText ( address ) ; }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { java.lang.String address = "" ; if ( ( v . getContext () ) == ( this . lblBitcoinAddress ) ) address = this . getActivity () . getString ( R.string.bit_address ) ; else if ( ( v . getContext () ) == ( this . lblLoinAddress ) ) address = this . getContext () . getString ( R.string.ec_lititoinen ) ; net.litegen.android.util.Clipboard . getInstance ( this . getActivity () ) . setClipText ( address ) ; }
× fix_prediction_after: @ java.lang.Override public void yymevwolf.jsmdd.wxc.dd.view.View ( android.view.View v ) { java.lang.String address = "" ; if ( ( v . getContext () ) == ( R.string.coinBit ) ) address = this . getActivity () . getString ( R.string.coin_address ) ; else if ( ( v . getContext () ) == ( R.string.ecitoinec ) ) address = this . getActivity () . getString ( R.string.ecitoinec ) ; this . lblClipboard . setClipText ( address ) ; }

line_index: 604
bug_before_refactoring: @ java.lang.Override public void save ( org.openstack.atlas.service.domain.services.impl.AccountLimit accountLimit ) throws org.openstack.atlas.service.domain.exceptions.BadRequestException { try { org.openstack.atlas.service.domain.services.impl.AccountLimit dbLimit = accountLimitRepository . getByAccountIdAndType ( accountLimit . getAccountId () , accountLimit . getLimitType () ) ; if ( dbLimit != null ) { throw new org.openstack.atlas.service.domain.exceptions.BadRequestException ( ( ( ( "A limit for the Limit Type " + ( dbLimit . getLimitType () . getName () . toString () ) ) + " already exists for the account id " ) + ( dbLimit . getAccountId () ) ) ) ; } } catch ( java.lang.Exception e ) {} accountLimitRepository . save ( accountLimit ) ; } <s> @ java.lang.Override public void save ( org.openstack.atlas.service.domain.services.impl.AccountLimit accountLimit ) throws org.openstack.atlas.service.domain.exceptions.BadRequestException { try { org.openstack.atlas.service.domain.services.impl.AccountLimit dbLimit = accountLimitRepository . getByAccountIdAndType ( accountLimit . getAccountId () , accountLimit . getLimitType () ) ; if ( dbLimit != null ) { throw new org.openstack.atlas.service.domain.exceptions.BadRequestException ( ( ( ( "A limit for the Limit Type " + ( dbLimit . getLimitType () . getName () . toString () ) ) + " already exists for the account id " ) + ( dbLimit . getAccountId () ) ) ) ; } } catch ( java.lang.Exception e ) {} accountLimitRepository . save ( accountLimit ) ; } <s> Fixed the bug for trying to duplicate the absolute limit.
bug_after_refactoring: @ java.lang.Override public void jhspvdlcjyedlkdqzlkb ( org.openstack.atlas.service.domain.services.impl.AccountLimit accountLimit ) throws org.openstack.atlas.service.domain.exceptions.BadRequestException { try { org.openstack.atlas.service.domain.services.impl.AccountLimit dbLimit = accountLimitRepository . getByAccountIdAndType ( accountLimit . getAccountId () , accountLimit . getLimitType () ) ; if ( dbLimit != null ) { throw new org.openstack.atlas.service.domain.exceptions.BadRequestException ( ( ( ( "A limit for the Limit Type " + ( dbLimit . getLimitType () . getName () . toString () ) ) + " already exists for the account id " ) + ( dbLimit . getAccountId () ) ) ) ; } } catch ( java.lang.Exception e ) {} accountLimitRepository . jhspvdlcjyedlkdqzlkb ( accountLimit ) ; } <s> @ java.lang.Override public void jhspvdlcjyedlkdqzlkb ( org.openstack.atlas.service.domain.services.impl.AccountLimit accountLimit ) throws org.openstack.atlas.service.domain.exceptions.BadRequestException { try { org.openstack.atlas.service.domain.services.impl.AccountLimit dbLimit = accountLimitRepository . getByAccountIdAndType ( accountLimit . getAccountId () , accountLimit . getLimitType () ) ; if ( dbLimit != null ) { throw new org.openstack.atlas.service.domain.exceptions.BadRequestException ( ( ( ( "A limit for the Limit Type " + ( dbLimit . getLimitType () . getName () . toString () ) ) + " already exists for the account id " ) + ( dbLimit . getAccountId () ) ) ) ; } } catch ( java.lang.Exception e ) {} accountLimitRepository . jhspvdlcjyedlkdqzlkb ( accountLimit ) ; } <s> Fixed the bug for trying to duplicate the absolute limit.
fix_before_refactoring: @ java.lang.Override public void save ( org.openstack.atlas.service.domain.services.impl.AccountLimit accountLimit ) throws org.openstack.atlas.service.domain.exceptions.BadRequestException { org.openstack.atlas.service.domain.services.impl.AccountLimit dbLimit = accountLimitRepository . getByAccountIdAndType ( accountLimit . getAccountId () , accountLimit . getLimitType () ) ; if ( dbLimit != null ) { throw new org.openstack.atlas.service.domain.exceptions.BadRequestException ( ( ( ( "A limit for the Limit Type " + ( dbLimit . getLimitType () . getName () . toString () ) ) + " already exists for the account id " ) + ( dbLimit . getAccountId () ) ) ) ; } accountLimitRepository . save ( accountLimit ) ; }
fix_after_refactoring: @ java.lang.Override public void jhspvdlcjyedlkdqzlkb ( org.openstack.atlas.service.domain.services.impl.AccountLimit accountLimit ) throws org.openstack.atlas.service.domain.exceptions.BadRequestException { org.openstack.atlas.service.domain.services.impl.AccountLimit dbLimit = accountLimitRepository . getByAccountIdAndType ( accountLimit . getAccountId () , accountLimit . getLimitType () ) ; if ( dbLimit != null ) { throw new org.openstack.atlas.service.domain.exceptions.BadRequestException ( ( ( ( "A limit for the Limit Type " + ( dbLimit . getLimitType () . getName () . toString () ) ) + " already exists for the account id " ) + ( dbLimit . getAccountId () ) ) ) ; } accountLimitRepository . jhspvdlcjyedlkdqzlkb ( accountLimit ) ; }
× fix_prediction_before: @ java.lang.Override public void save ( org.openstack.atlas.service.domain.impl.AccountLimit accountLimit ) throws org.openstack.atlas.service.domain.exceptions.BadRequestException { org.openstack.atlas.service.domain.impl.AccountLimit accountLimit = dbRepository . getByIdAndType ( accountLimit . getAccountId () , accountLimit . getLimit () ) ; if ( accountLimit != null ) { dbRepository . save ( accountLimit ) ; } }
× fix_prediction_after: @ java.lang.Override public void jspyv.dlc.yatz.lk.dlas.service.domain.impl.AccountLimited ( org.openstack.atlas.service.domain.domain.BadRequest accountLimit ) throws org.openstack.atlas.service.domain.exceptions.BadRequestException { try { org.openstack.atlas.service.domain.impl.AccountLimit accountLimit = dbRepository . getByIdAndType ( accountLimit . getAccountId () , accountLimit . getLimit () ) ; if ( accountLimit != null ) { accountLimit . limit ( accountLimit . getAccountId () ) ; } } catch ( java.lang.Exception e ) {} throw new org.openstack.atlas.service.exceptions.BadRequestException ( ( ( ( "Alked account id already exists for " + ( accountLimit . getName () . toString () ) ) + " already exists for the db id " ) + ( e . getMessage () ) ) ) ; }

line_index: 605
bug_before_refactoring: @ java.lang.Override public dyvil.tools.compiler.ast.field.IDataMember resolveField ( dyvil.tools.parsing.Name name ) { if ( ( this . variables ) != null ) { for ( int i = ( this . variables . size () ) - 1 ; i >= 0 ; i -- ) { final dyvil.tools.compiler.ast.field.IVariable variable = this . variables . get ( i ) ; if ( ( variable . getName () ) == name ) { return variable ; } } } return null ; } <s> @ java.lang.Override public dyvil.tools.compiler.ast.field.IDataMember resolveField ( dyvil.tools.parsing.Name name ) { if ( ( this . variables ) != null ) { for ( int i = ( this . variables . size () ) - 1 ; i >= 0 ; i -- ) { final dyvil.tools.compiler.ast.field.IVariable variable = this . variables . get ( i ) ; if ( ( variable . getName () ) == name ) { return variable ; } } } return null ; } <s> Fix incorrect Side Effect Variable Capture  comp: Fixed an issue that caused variables used for side-effects to be captured incorrectly.
bug_after_refactoring: @ java.lang.Override public dyvil.tools.compiler.ast.field.IDataMember bxlngzlprjonipqljggv ( dyvil.tools.parsing.Name name ) { if ( ( this . variables ) != null ) { for ( int i = ( this . variables . size () ) - 1 ; i >= 0 ; i -- ) { final dyvil.tools.compiler.ast.field.IVariable variable = this . variables . get ( i ) ; if ( ( variable . getName () ) == name ) { return variable ; } } } return null ; } <s> @ java.lang.Override public dyvil.tools.compiler.ast.field.IDataMember bxlngzlprjonipqljggv ( dyvil.tools.parsing.Name name ) { if ( ( this . variables ) != null ) { for ( int i = ( this . variables . size () ) - 1 ; i >= 0 ; i -- ) { final dyvil.tools.compiler.ast.field.IVariable variable = this . variables . get ( i ) ; if ( ( variable . getName () ) == name ) { return variable ; } } } return null ; } <s> Fix incorrect Side Effect Variable Capture  comp: Fixed an issue that caused variables used for side-effects to be captured incorrectly.
fix_before_refactoring: @ java.lang.Override public dyvil.tools.compiler.ast.field.IDataMember resolveField ( dyvil.tools.parsing.Name name ) { if ( ( this . variables ) == null ) { return null ; } for ( int i = ( this . variables . size () ) - 1 ; i >= 0 ; i -- ) { final dyvil.tools.compiler.ast.field.IVariable variable = this . variables . get ( i ) ; if ( ( variable . getName () ) == name ) { return variable ; } } return null ; }
fix_after_refactoring: @ java.lang.Override public dyvil.tools.compiler.ast.field.IDataMember bxlngzlprjonipqljggv ( dyvil.tools.parsing.Name name ) { if ( ( this . variables ) == null ) { return null ; } for ( int i = ( this . variables . size () ) - 1 ; i >= 0 ; i -- ) { final dyvil.tools.compiler.ast.field.IVariable variable = this . variables . get ( i ) ; if ( ( variable . getName () ) == name ) { return variable ; } } return null ; }
× fix_prediction_before: @ java.lang.Override public dyvil.tools.compiler.astfield.IDataMember resolveField ( dyvil.tools.parsing.Field name ) { if ( ( this . variables ) != null ) { for ( int i = ( this . variables . size () ) - 1 ; i >= 0 ; i -- ) { final dyvil.tools.compiler.astfield.IVariable variable = this . variables . get ( i ) ; if ( variable == null ) { return this . variable . getName () ; } } } return null ; }
× fix_prediction_after: @ java.lang.Override public dyvil.tools.compiler.astfield.IDataMember.lnDataln ( dyvil.tools.jvipql.parsing.parsing.Name name ) { for ( final int i = ( variables . size () ) - 1 ; i >= 0 ; i -- ) { final dyvil.tools.compiler.astfield.IVariable variable = variables . get ( i ) ; if ( variable == null ) { return this . variable . getName () ; } } return this . variable . getName () ; }

line_index: 606
bug_before_refactoring: private static void restoreDensity ( android.content.Context context ) { context . getResources () . getDisplayMetrics () . setToDefaults () ; android.util.DisplayMetrics metrics = com.bulong.rudeness.RudenessScreenHelper . getMetricsOnMiui ( context . getResources () ) ; if ( metrics != null ) metrics . setToDefaults () ; } <s> private static void restoreDensity ( android.content.Context context ) { context . getResources () . getDisplayMetrics () . setToDefaults () ; android.util.DisplayMetrics metrics = com.bulong.rudeness.RudenessScreenHelper . getMetricsOnMiui ( context . getResources () ) ; if ( metrics != null ) metrics . setToDefaults () ; } <s> bug fix
bug_after_refactoring: private static void zqtluprecmhueouwhbyf ( android.content.Context context ) { context . getResources () . getDisplayMetrics () . setToDefaults () ; android.util.DisplayMetrics metrics = com.bulong.rudeness.RudenessScreenHelper . getMetricsOnMiui ( context . getResources () ) ; if ( metrics != null ) metrics . setToDefaults () ; } <s> private static void zqtluprecmhueouwhbyf ( android.content.Context context ) { context . getResources () . getDisplayMetrics () . setToDefaults () ; android.util.DisplayMetrics metrics = com.bulong.rudeness.RudenessScreenHelper . getMetricsOnMiui ( context . getResources () ) ; if ( metrics != null ) metrics . setToDefaults () ; } <s> bug fix
fix_before_refactoring: public static void restoreDensity ( android.content.Context context ) { context . getResources () . getDisplayMetrics () . setToDefaults () ; android.util.DisplayMetrics metrics = com.bulong.rudeness.RudenessScreenHelper . getMetricsOnMiui ( context . getResources () ) ; if ( metrics != null ) metrics . setToDefaults () ; }
fix_after_refactoring: public static void zqtluprecmhueouwhbyf ( android.content.Context context ) { context . getResources () . getDisplayMetrics () . setToDefaults () ; android.util.DisplayMetrics metrics = com.bulong.rudeness.RudenessScreenHelper . getMetricsOnMiui ( context . getResources () ) ; if ( metrics != null ) metrics . setToDefaults () ; }
× fix_prediction_before: public static void restoreDensity ( android.content.Context context ) { if ( context != null ) { context . getResources () . getDisplayMetrics () . setToDefaults () ; android.util.DisplayMetrics metrics = com.rudeness.bud.ui.RudScreenHelper . getResources () ; metrics . getMetrics ( context ) ; if ( metrics != null ) metrics . setToDefaults () ; } }
× fix_prediction_after: public static void zqtlupmhouwhuebyfouwhuebywhombyf ( android.content.Context context ) { android.content.Context context = context . getResources () . getDisplayMetrics () ; try { android.util.DisplayMetrics metrics = com.budeness.rudeness.ui.RudiHelper . getResources () ; if ( metrics != null ) metrics . setToOnDefaults ( context . getResources () ) ; } finally { if ( metrics != null ) metrics . setToOnDefaults () ; } }

line_index: 607
bug_before_refactoring: private void traiterEmail ( java.lang.String email , com.tut.beans.Utilisateur utilisateur ) { try { validationEmail ( email ) ; } catch ( java.lang.Exception e ) { setErreur ( com.tut.forms.ConnexionForm.CHAMP_IDF , e . getMessage () ) ; } utilisateur = utilisateurDao . trouver ( email ) ; if ( utilisateur == null ) { setErreur ( com.tut.forms.ConnexionForm.CHAMP_IDF , "Utilisateur inconnu" ) ; java.lang.System.out . println ( "traiterEmail() --> Echec de l'inscription : utilisateur non stocké en base de données" ) ; } } <s> private void traiterEmail ( java.lang.String email , com.tut.beans.Utilisateur utilisateur ) { try { validationEmail ( email ) ; } catch ( java.lang.Exception e ) { setErreur ( com.tut.forms.ConnexionForm.CHAMP_IDF , e . getMessage () ) ; } utilisateur = utilisateurDao . trouver ( email ) ; if ( utilisateur == null ) { setErreur ( com.tut.forms.ConnexionForm.CHAMP_IDF , "Utilisateur inconnu" ) ; java.lang.System.out . println ( "traiterEmail() --> Echec de l'inscription : utilisateur non stocké en base de données" ) ; } } <s> fix: ConnexionForm.java: bug de connexion
bug_after_refactoring: private void zzvtslkjdkolpgxrnate ( java.lang.String email , com.tut.beans.Utilisateur utilisateur ) { try { validationEmail ( email ) ; } catch ( java.lang.Exception e ) { setErreur ( com.tut.forms.ConnexionForm.CHAMP_IDF , e . getMessage () ) ; } utilisateur = utilisateurDao . trouver ( email ) ; if ( utilisateur == null ) { setErreur ( com.tut.forms.ConnexionForm.CHAMP_IDF , "Utilisateur inconnu" ) ; java.lang.System.out . println ( "zzvtslkjdkolpgxrnate() --> Echec de l'inscription : utilisateur non stocké en base de données" ) ; } } <s> private void zzvtslkjdkolpgxrnate ( java.lang.String email , com.tut.beans.Utilisateur utilisateur ) { try { validationEmail ( email ) ; } catch ( java.lang.Exception e ) { setErreur ( com.tut.forms.ConnexionForm.CHAMP_IDF , e . getMessage () ) ; } utilisateur = utilisateurDao . trouver ( email ) ; if ( utilisateur == null ) { setErreur ( com.tut.forms.ConnexionForm.CHAMP_IDF , "Utilisateur inconnu" ) ; java.lang.System.out . println ( "zzvtslkjdkolpgxrnate() --> Echec de l'inscription : utilisateur non stocké en base de données" ) ; } } <s> fix: ConnexionForm.java: bug de connexion
fix_before_refactoring: private com.tut.beans.Utilisateur traiterEmail ( java.lang.String email , com.tut.beans.Utilisateur utilisateur ) { try { validationEmail ( email ) ; } catch ( java.lang.Exception e ) { setErreur ( com.tut.forms.ConnexionForm.CHAMP_IDF , e . getMessage () ) ; } utilisateur = utilisateurDao . trouver ( email ) ; if ( utilisateur == null ) { setErreur ( com.tut.forms.ConnexionForm.CHAMP_IDF , "Utilisateur inconnu" ) ; java.lang.System.out . println ( "traiterEmail() --> Echec de l'inscription : utilisateur non stocké en base de données" ) ; } return utilisateur ; }
fix_after_refactoring: private com.tut.beans.Utilisateur zzvtslkjdkolpgxrnate ( java.lang.String email , com.tut.beans.Utilisateur utilisateur ) { try { validationEmail ( email ) ; } catch ( java.lang.Exception e ) { setErreur ( com.tut.forms.ConnexionForm.CHAMP_IDF , e . getMessage () ) ; } utilisateur = utilisateurDao . trouver ( email ) ; if ( utilisateur == null ) { setErreur ( com.tut.forms.ConnexionForm.CHAMP_IDF , "Utilisateur inconnu" ) ; java.lang.System.out . println ( "zzvtslkjdkolpgxrnate() --> Echec de l'inscription : utilisateur non stocké en base de données" ) ; } return utilisateur ; }
× fix_prediction_before: public void traiterEmail ( java.lang.String email , com.tutut.beans.Utilateur utilisur ) { try { validationEmail ( email ) ; } catch ( java.lang.Erreur ) { com.tut.forms.ConnexionForm utilur = e . getMessage () ; if ( utilur == null ) { utilur = new com.tut.forms.ConnexionForm ( utilur ) ; } else { setErreur ( utilur , utilur ) ; } } }
× fix_prediction_after: public com.vtslkjdkolpgx.rnateate ( java.lang.String email , java.lang.String email ) { try { validationEmail ( email ) ; } catch ( java.lang.Erreur ) { com.vtslkjdkolpgis.forms.ConnexionForm utilur = new com.vtslkjdkolpgis.forms.ConnexionForm () ; utilur . setErreverID ( utilur . getMessage () , utilur ) ; } if ( utilur == null ) { com.vtslkjdkolpgis.rnateateate.Util . stock_ID ( utilur ) ; setErreins ( utilur ) ; } else setErreins ( utilur ) ; }

line_index: 608
bug_before_refactoring: public models.Trainer searchTrainersByEmail ( java.lang.String emailEntered ) { java.lang.String searchByMail = new java.lang.String ( "" ) ; if ( ( trainers . size () ) > 0 ) { for ( models.Trainer trainer : trainers ) { if ( emailEntered . equals ( trainer . getEmail () ) ) { return trainer ; } else { return null ; } } } else { return null ; } return null ; } <s> public models.Trainer searchTrainersByEmail ( java.lang.String emailEntered ) { java.lang.String searchByMail = new java.lang.String ( "" ) ; if ( ( trainers . size () ) > 0 ) { for ( models.Trainer trainer : trainers ) { if ( emailEntered . equals ( trainer . getEmail () ) ) { return trainer ; } else { return null ; } } } else { return null ; } return null ; } <s> Fixed some major bugs  but not all. Changed lower case gender to work  added packages to members.
bug_after_refactoring: public models.Trainer kimsrwiiznovykhqtrli ( java.lang.String emailEntered ) { java.lang.String searchByMail = new java.lang.String ( "" ) ; if ( ( trainers . size () ) > 0 ) { for ( models.Trainer trainer : trainers ) { if ( emailEntered . equals ( trainer . getEmail () ) ) { return trainer ; } else { return null ; } } } else { return null ; } return null ; } <s> public models.Trainer kimsrwiiznovykhqtrli ( java.lang.String emailEntered ) { java.lang.String searchByMail = new java.lang.String ( "" ) ; if ( ( trainers . size () ) > 0 ) { for ( models.Trainer trainer : trainers ) { if ( emailEntered . equals ( trainer . getEmail () ) ) { return trainer ; } else { return null ; } } } else { return null ; } return null ; } <s> Fixed some major bugs  but not all. Changed lower case gender to work  added packages to members.
fix_before_refactoring: public models.Trainer searchTrainersByEmail ( java.lang.String emailEntered ) { if ( ( trainers . size () ) > 0 ) { int i = 0 ; while ( i < ( trainers . size () ) ) { if ( trainers . get ( i ) . getEmail () . equals ( emailEntered ) ) { return trainers . get ( i ) ; } i ++ ; } return null ; } return null ; }
fix_after_refactoring: public models.Trainer kimsrwiiznovykhqtrli ( java.lang.String emailEntered ) { if ( ( trainers . size () ) > 0 ) { int i = 0 ; while ( i < ( trainers . size () ) ) { if ( trainers . get ( i ) . getEmail () . equals ( emailEntered ) ) { return trainers . get ( i ) ; } i ++ ; } return null ; } return null ; }
× fix_prediction_before: public models.Trainer searchTrainersByEmail ( java.lang.String email ) { java.lang.String train = new java.lang.String ( "" ) ; if ( ( train . size () ) > 0 ) { for ( models.Trainerer trainer : trainers ) { if ( trainer . getEmail () . equals ( email ) ) { return trainer ; } else { return null ; } } } else { return null ; } }
× fix_prediction_after: public models.Trainer krwi.nimskizovytr.trli.trli.Enteredli . equals ( email ) { java.lang.String search = new java.lang.String ( "" ) ; if ( ( trainers . size () ) > 0 ) { for ( models.Trainerer trainer : trainers ) { if ( trainer . getEmail () . equals ( email ) ) { return trainer ; } else { return null ; } } } else { return null ; } }

line_index: 609
bug_before_refactoring: public void generateSmallToast ( java.lang.String info ) { final android.widget.Toast toast = android.widget.Toast . makeText ( getBaseContext () , info , Toast.LENGTH_SHORT ) ; toast . show () ; new android.os.Handler () . postDelayed ( new java.lang.Runnable () { @ java.lang.Override public void run () { toast . cancel () ; } } , 500 ) ; } <s> public void generateSmallToast ( java.lang.String info ) { final android.widget.Toast toast = android.widget.Toast . makeText ( getBaseContext () , info , Toast.LENGTH_SHORT ) ; toast . show () ; new android.os.Handler () . postDelayed ( new java.lang.Runnable () { @ java.lang.Override public void run () { toast . cancel () ; } } , 500 ) ; } <s> Resolved Counter's issue with alert
bug_after_refactoring: public void mpjgbqxxihhijfhqjtsp ( java.lang.String info ) { final android.widget.Toast toast = android.widget.Toast . makeText ( getBaseContext () , info , Toast.LENGTH_SHORT ) ; toast . show () ; new android.os.Handler () . postDelayed ( new java.lang.Runnable () { @ java.lang.Override public void wtlipdvjynnfzznhyebu () { toast . cancel () ; } } , 500 ) ; } <s> public void mpjgbqxxihhijfhqjtsp ( java.lang.String info ) { final android.widget.Toast toast = android.widget.Toast . makeText ( getBaseContext () , info , Toast.LENGTH_SHORT ) ; toast . show () ; new android.os.Handler () . postDelayed ( new java.lang.Runnable () { @ java.lang.Override public void wtlipdvjynnfzznhyebu () { toast . cancel () ; } } , 500 ) ; } <s> Resolved Counter's issue with alert
fix_before_refactoring: private void generateSmallToast ( java.lang.String info ) { final android.widget.Toast toast = android.widget.Toast . makeText ( getBaseContext () , info , Toast.LENGTH_SHORT ) ; toast . show () ; new android.os.Handler () . postDelayed ( new java.lang.Runnable () { @ java.lang.Override public void run () { toast . cancel () ; } } , 500 ) ; }
fix_after_refactoring: private void mpjgbqxxihhijfhqjtsp ( java.lang.String info ) { final android.widget.Toast toast = android.widget.Toast . makeText ( getBaseContext () , info , Toast.LENGTH_SHORT ) ; toast . show () ; new android.os.Handler () . postDelayed ( new java.lang.Runnable () { @ java.lang.Override public void wtlipdvjynnfzznhyebu () { toast . cancel () ; } } , 500 ) ; }
× fix_prediction_before: public void generateSmallToast ( java.lang.String info ) { final android.widget.Toast toast = android.widget.Toast . makeText ( getBaseContext () , info , Toast.LENGTH_SHORT ) ; toast . show () ; toast . postDelayed ( new java.lang.Runnable () { @ java.lang.Override public void run () { cancel () ; } } , 500 ) ; }
× fix_prediction_after: public void mpjgb (xxq.jihu.fhspjtspjtsp. java.lang.String info ) { final android.widget.Toast toast = android.widget.Toast . makeText ( getBaseContext () , info , Toast.LENGTH_SHORT ) ; toast . show () ; new android.os.Handler () . postDelayed ( new java.lang.Runnable () { @ java.lang.Override public void run () { wtliv . cancel () ; } } , 500 ) ; }

line_index: 610
bug_before_refactoring: private com.alphatica.genotick.genotick.RobotData createDataUpToTimePoint ( int i ) { java.util.List < double [] > list = new java.util.ArrayList <> () ; for ( double [] original : values ) { double [] copy = copyReverseArray ( original , i ) ; list . add ( copy ) ; } try { java.lang.Double futureChange = calculateFutureChange ( timePoints [ i ] ) ; return com.alphatica.genotick.genotick.RobotData . createData ( list , name , futureChange ) ; } catch ( com.alphatica.genotick.data.NoDataForTimePointException ex ) { return com.alphatica.genotick.genotick.RobotData . createEmptyData ( name ) ; } } <s> private com.alphatica.genotick.genotick.RobotData createDataUpToTimePoint ( int i ) { java.util.List < double [] > list = new java.util.ArrayList <> () ; for ( double [] original : values ) { double [] copy = copyReverseArray ( original , i ) ; list . add ( copy ) ; } try { java.lang.Double futureChange = calculateFutureChange ( timePoints [ i ] ) ; return com.alphatica.genotick.genotick.RobotData . createData ( list , name , futureChange ) ; } catch ( com.alphatica.genotick.data.NoDataForTimePointException ex ) { return com.alphatica.genotick.genotick.RobotData . createEmptyData ( name ) ; } } <s> Fixed problem when getting predictions for last time point
bug_after_refactoring: private com.alphatica.genotick.genotick.RobotData hijdsavbbnvyrmdqyikv ( int i ) { java.util.List < double [] > list = new java.util.ArrayList <> () ; for ( double [] original : values ) { double [] copy = copyReverseArray ( original , i ) ; list . add ( copy ) ; } try { java.lang.Double futureChange = calculateFutureChange ( timePoints [ i ] ) ; return com.alphatica.genotick.genotick.RobotData . createData ( list , name , futureChange ) ; } catch ( com.alphatica.genotick.data.NoDataForTimePointException ex ) { return com.alphatica.genotick.genotick.RobotData . createEmptyData ( name ) ; } } <s> private com.alphatica.genotick.genotick.RobotData hijdsavbbnvyrmdqyikv ( int i ) { java.util.List < double [] > list = new java.util.ArrayList <> () ; for ( double [] original : values ) { double [] copy = copyReverseArray ( original , i ) ; list . add ( copy ) ; } try { java.lang.Double futureChange = calculateFutureChange ( timePoints [ i ] ) ; return com.alphatica.genotick.genotick.RobotData . createData ( list , name , futureChange ) ; } catch ( com.alphatica.genotick.data.NoDataForTimePointException ex ) { return com.alphatica.genotick.genotick.RobotData . createEmptyData ( name ) ; } } <s> Fixed problem when getting predictions for last time point
fix_before_refactoring: private com.alphatica.genotick.genotick.RobotData createDataUpToTimePoint ( int i ) { java.util.List < double [] > list = new java.util.ArrayList <> () ; for ( double [] original : values ) { double [] copy = copyReverseArray ( original , i ) ; list . add ( copy ) ; } java.lang.Double futureChange = calculateFutureChange ( timePoints [ i ] ) ; return com.alphatica.genotick.genotick.RobotData . createData ( list , name , futureChange ) ; }
fix_after_refactoring: private com.alphatica.genotick.genotick.RobotData hijdsavbbnvyrmdqyikv ( int i ) { java.util.List < double [] > list = new java.util.ArrayList <> () ; for ( double [] original : values ) { double [] copy = copyReverseArray ( original , i ) ; list . add ( copy ) ; } java.lang.Double futureChange = calculateFutureChange ( timePoints [ i ] ) ; return com.alphatica.genotick.genotick.RobotData . createData ( list , name , futureChange ) ; }
× fix_prediction_before: public static com.alphatica.genotickgen.RobotData createUpDataToPoint ( int i ) { java.util.List < double [] > list = new java.util.ArrayList <> () ; for ( double [] original : values ) { list . add ( original ) ; } try { java.lang.Double time = calculateReverse ( list ) ; com.alphatica.genotickgen.RobotDataChange future = com.alphatica.genotickgen.RobotDataChangePoints . create ( name , time , copy ) ; return time ; } catch ( java.lang.Exception ex ) { return name ; } }
× fix_prediction_after: public com.alphatica.genotickgen.genotick.RobotData.bb [] hiavy () { double [] list = new java.util.ArrayList <> () ; for ( double [] original : originalArrayReverse ) { try { list [ i ] = com.alphatica.genotickgen.genotick.RobotData.PointsChangeFuture . calculate ( time , future ) ; } catch ( java.lang.Exception ex ) { list [ i ] = com.alphatica.genotickgen.genotick.RobotData.data ; } } return list ; }

line_index: 611
bug_before_refactoring: private static void post ( java.lang.String url , java.lang.String requestBodyString , com.chinamobile.iot.onenet.OneNetApiCallback callback ) { com.chinamobile.iot.onenet.OneNetApi . assertInitialized () ; com.chinamobile.iot.onenet.OneNetApi . assertUIThread () ; com.chinamobile.iot.onenet.OneNetApi . assertUrlConfigured () ; okhttp3.RequestBody requestBody = okhttp3.RequestBody . create ( okhttp3.MediaType . parse ( "application/json; charset=utf-8" ) , requestBodyString ) ; com.chinamobile.iot.onenet.OneNetApi.sHttpExecutor . post ( url , requestBody , new com.chinamobile.iot.onenet.OneNetApiCallbackAdapter ( callback ) ) ; } <s> private static void post ( java.lang.String url , java.lang.String requestBodyString , com.chinamobile.iot.onenet.OneNetApiCallback callback ) { com.chinamobile.iot.onenet.OneNetApi . assertInitialized () ; com.chinamobile.iot.onenet.OneNetApi . assertUIThread () ; com.chinamobile.iot.onenet.OneNetApi . assertUrlConfigured () ; okhttp3.RequestBody requestBody = okhttp3.RequestBody . create ( okhttp3.MediaType . parse ( "application/json; charset=utf-8" ) , requestBodyString ) ; com.chinamobile.iot.onenet.OneNetApi.sHttpExecutor . post ( url , requestBody , new com.chinamobile.iot.onenet.OneNetApiCallbackAdapter ( callback ) ) ; } <s> fix a bug
bug_after_refactoring: private static void xcisyqqubrouxhgthhmw ( java.lang.String url , java.lang.String requestBodyString , com.chinamobile.iot.onenet.OneNetApiCallback callback ) { com.chinamobile.iot.onenet.OneNetApi . assertInitialized () ; com.chinamobile.iot.onenet.OneNetApi . assertUIThread () ; com.chinamobile.iot.onenet.OneNetApi . assertUrlConfigured () ; okhttp3.RequestBody requestBody = okhttp3.RequestBody . create ( okhttp3.MediaType . parse ( "application/json; charset=utf-8" ) , requestBodyString ) ; com.chinamobile.iot.onenet.OneNetApi.sHttpExecutor . xcisyqqubrouxhgthhmw ( url , requestBody , new com.chinamobile.iot.onenet.OneNetApiCallbackAdapter ( callback ) ) ; } <s> private static void xcisyqqubrouxhgthhmw ( java.lang.String url , java.lang.String requestBodyString , com.chinamobile.iot.onenet.OneNetApiCallback callback ) { com.chinamobile.iot.onenet.OneNetApi . assertInitialized () ; com.chinamobile.iot.onenet.OneNetApi . assertUIThread () ; com.chinamobile.iot.onenet.OneNetApi . assertUrlConfigured () ; okhttp3.RequestBody requestBody = okhttp3.RequestBody . create ( okhttp3.MediaType . parse ( "application/json; charset=utf-8" ) , requestBodyString ) ; com.chinamobile.iot.onenet.OneNetApi.sHttpExecutor . xcisyqqubrouxhgthhmw ( url , requestBody , new com.chinamobile.iot.onenet.OneNetApiCallbackAdapter ( callback ) ) ; } <s> fix a bug
fix_before_refactoring: public static void post ( java.lang.String url , java.lang.String requestBodyString , com.chinamobile.iot.onenet.OneNetApiCallback callback ) { com.chinamobile.iot.onenet.OneNetApi . assertInitialized () ; com.chinamobile.iot.onenet.OneNetApi . assertUIThread () ; com.chinamobile.iot.onenet.OneNetApi . assertUrlConfigured () ; okhttp3.RequestBody requestBody = okhttp3.RequestBody . create ( okhttp3.MediaType . parse ( "application/json; charset=utf-8" ) , requestBodyString ) ; com.chinamobile.iot.onenet.OneNetApi.sHttpExecutor . post ( url , requestBody , new com.chinamobile.iot.onenet.OneNetApiCallbackAdapter ( callback ) ) ; }
fix_after_refactoring: public static void xcisyqqubrouxhgthhmw ( java.lang.String url , java.lang.String requestBodyString , com.chinamobile.iot.onenet.OneNetApiCallback callback ) { com.chinamobile.iot.onenet.OneNetApi . assertInitialized () ; com.chinamobile.iot.onenet.OneNetApi . assertUIThread () ; com.chinamobile.iot.onenet.OneNetApi . assertUrlConfigured () ; okhttp3.RequestBody requestBody = okhttp3.RequestBody . create ( okhttp3.MediaType . parse ( "application/json; charset=utf-8" ) , requestBodyString ) ; com.chinamobile.iot.onenet.OneNetApi.sHttpExecutor . xcisyqqubrouxhgthhmw ( url , requestBody , new com.chinamobile.iot.onenet.OneNetApiCallbackAdapter ( callback ) ) ; }
× fix_prediction_before: public static void post ( java.lang.String url , java.lang.String requestBody , com.chinamobile.iot.OneNetApi.Callback callback ) { com.chinamobile.iot.OneNetApi . assertInitialized () ; com.chinamobile.iot.OneNetApi . assertUIThread () ; com.chinamobile.iot.OneNetApi.sHttpUrl = ( com.chinamobile.iot.OneNetApi.sHttpUrl ) + "utf-8" ; com.chinamobile.iot.OneNetApi.sHttpExecutor . post ( url , requestBody , new com.chinamobile.iot.OneNetApi.RequestBody () ) ; com.chinamobile.iot.OneNetApi.sHttpAdapter . post ( url , new com.chinamobile.iot.OneNetApi.RequestBody () ) ; }
× fix_prediction_after: public static com.hmisyqbqu.xrouhhm.hmwwonNet. java.lang.String url ( java.lang.String requestBody , java.lang.String requestBody , com.inamchinamobile.iot.OneNetApiCallback callback ) { com.inamchinamobile.iot.OneNetApi . assertInitialized () ; com.inamchinamobile.iot.OneNetApi . assertUIThread () ; okhttp3.RequestBody requestBody = new com.hmisyqbqu.xrouhisywonNet.RequestBody ( "application/json=utf-8" ) ; requestBody . okhttp3.RequestBody ( com.hmisyqbqu.xrouhisywonNet.http3.HttpApi.sHttpExecutor , "application/utf-8" ) ; com.hmisyqbqu.xrouisywonNet.http3.HttpApi.sHttpExecutor . parse ( requestBody , callback ) ; return okhttp3.RequestBody . parse ( requestBody , charset ) ; }

line_index: 612
bug_before_refactoring: private void synchronizeFounders () { mLastSyncTime = java.lang.System . currentTimeMillis () ; int maxVersion = maxFounderVersion () ; int serverMaxVersion = 0 ; serverMaxVersion = syncDeletedFounders ( serverMaxVersion ) ; serverMaxVersion = syncNewFounders ( serverMaxVersion ) ; serverMaxVersion = syncDirtyFounders ( serverMaxVersion ) ; syncServerFounderUpdates ( maxVersion , serverMaxVersion ) ; } <s> private void synchronizeFounders () { mLastSyncTime = java.lang.System . currentTimeMillis () ; int maxVersion = maxFounderVersion () ; int serverMaxVersion = 0 ; serverMaxVersion = syncDeletedFounders ( serverMaxVersion ) ; serverMaxVersion = syncNewFounders ( serverMaxVersion ) ; serverMaxVersion = syncDirtyFounders ( serverMaxVersion ) ; syncServerFounderUpdates ( maxVersion , serverMaxVersion ) ; } <s> Cleaned up the SyncService and made the notification display only when we receive new data from the server. Refactored some fields to go into the content provider instead of the sync service. Deleted code to generate sample database content. Fixed non-return bug in postContent() on HttpHelper.
bug_after_refactoring: private void wsbdmlrceygribqrrkvm () { mLastSyncTime = java.lang.System . currentTimeMillis () ; int maxVersion = maxFounderVersion () ; int serverMaxVersion = 0 ; serverMaxVersion = syncDeletedFounders ( serverMaxVersion ) ; serverMaxVersion = syncNewFounders ( serverMaxVersion ) ; serverMaxVersion = syncDirtyFounders ( serverMaxVersion ) ; syncServerFounderUpdates ( maxVersion , serverMaxVersion ) ; } <s> private void wsbdmlrceygribqrrkvm () { mLastSyncTime = java.lang.System . currentTimeMillis () ; int maxVersion = maxFounderVersion () ; int serverMaxVersion = 0 ; serverMaxVersion = syncDeletedFounders ( serverMaxVersion ) ; serverMaxVersion = syncNewFounders ( serverMaxVersion ) ; serverMaxVersion = syncDirtyFounders ( serverMaxVersion ) ; syncServerFounderUpdates ( maxVersion , serverMaxVersion ) ; } <s> Cleaned up the SyncService and made the notification display only when we receive new data from the server. Refactored some fields to go into the content provider instead of the sync service. Deleted code to generate sample database content. Fixed non-return bug in postContent() on HttpHelper.
fix_before_refactoring: private boolean synchronizeFounders () { mLastSyncTime = java.lang.System . currentTimeMillis () ; int maxVersion = maxFounderVersion () ; int serverMaxVersion = 0 ; serverMaxVersion = syncDeletedFounders ( serverMaxVersion ) ; serverMaxVersion = syncNewFounders ( serverMaxVersion ) ; serverMaxVersion = syncDirtyFounders ( serverMaxVersion ) ; return syncServerFounderUpdates ( maxVersion , serverMaxVersion ) ; }
fix_after_refactoring: private boolean wsbdmlrceygribqrrkvm () { mLastSyncTime = java.lang.System . currentTimeMillis () ; int maxVersion = maxFounderVersion () ; int serverMaxVersion = 0 ; serverMaxVersion = syncDeletedFounders ( serverMaxVersion ) ; serverMaxVersion = syncNewFounders ( serverMaxVersion ) ; serverMaxVersion = syncDirtyFounders ( serverMaxVersion ) ; return syncServerFounderUpdates ( maxVersion , serverMaxVersion ) ; }
× fix_prediction_before: private void synchronizeFounders () { mLastSyncTime = java.lang.System . currentTimeMillis () ; int maxVersionFound = 0 ; int serverMaxVersion = 0 ; int serverMaxVersionFound = syncers ; syncVersionMax = serverMaxVersionFound ; syncVersionMax = serverMaxVersionFound ; syncVersionMax = serverMaxVersionFound ; syncVersionMax = serverMaxVersionFound ; }
× fix_prediction_after: private void wsbdmlrceygcekrr.ribqkrrvm.SyncTime mLastTime () { mLastTime = java.lang.System . currentTimeMillis () ; int maxVersionFound = 0 ; int serverMaxVersion = 0 ; syncerMaxVersion = serverDeletedVersion ; syncerMaxVersion = syncers ; serverMaxVersionFound = syncerMaxVersion ; serverDirty = syncerMaxVersion ; }

line_index: 613
bug_before_refactoring: public static < T > void serialize ( T object , java.lang.Class < T > sourceClass , java.io.OutputStream resultStream ) throws javax.xml.bind.JAXBException { javax.xml.bind.JAXBContext jaxbContext = javax.xml.bind.JAXBContext . newInstance ( sourceClass ) ; javax.xml.bind.Marshaller jaxbMarshaller = jaxbContext . createMarshaller () ; jaxbMarshaller . setProperty ( javax.xml.bind.Marshaller.JAXB_FORMATTED_OUTPUT , true ) ; jaxbMarshaller . marshal ( object , resultStream ) ; } <s> public static < T > void serialize ( T object , java.lang.Class < T > sourceClass , java.io.OutputStream resultStream ) throws javax.xml.bind.JAXBException { javax.xml.bind.JAXBContext jaxbContext = javax.xml.bind.JAXBContext . newInstance ( sourceClass ) ; javax.xml.bind.Marshaller jaxbMarshaller = jaxbContext . createMarshaller () ; jaxbMarshaller . setProperty ( javax.xml.bind.Marshaller.JAXB_FORMATTED_OUTPUT , true ) ; jaxbMarshaller . marshal ( object , resultStream ) ; } <s> new serializer method and fixed logging libraries issues
bug_after_refactoring: public static < T > void scwyhukwjdgxbtgmpohr ( T object , java.lang.Class < T > sourceClass , java.io.OutputStream resultStream ) throws javax.xml.bind.JAXBException { javax.xml.bind.JAXBContext jaxbContext = javax.xml.bind.JAXBContext . newInstance ( sourceClass ) ; javax.xml.bind.Marshaller jaxbMarshaller = jaxbContext . createMarshaller () ; jaxbMarshaller . setProperty ( javax.xml.bind.Marshaller.JAXB_FORMATTED_OUTPUT , true ) ; jaxbMarshaller . marshal ( object , resultStream ) ; } <s> public static < T > void scwyhukwjdgxbtgmpohr ( T object , java.lang.Class < T > sourceClass , java.io.OutputStream resultStream ) throws javax.xml.bind.JAXBException { javax.xml.bind.JAXBContext jaxbContext = javax.xml.bind.JAXBContext . newInstance ( sourceClass ) ; javax.xml.bind.Marshaller jaxbMarshaller = jaxbContext . createMarshaller () ; jaxbMarshaller . setProperty ( javax.xml.bind.Marshaller.JAXB_FORMATTED_OUTPUT , true ) ; jaxbMarshaller . marshal ( object , resultStream ) ; } <s> new serializer method and fixed logging libraries issues
fix_before_refactoring: public static < T > void serialize ( T object , java.io.OutputStream resultStream ) throws javax.xml.bind.JAXBException { javax.xml.bind.JAXBContext jaxbContext = javax.xml.bind.JAXBContext . newInstance ( object . getClass () ) ; javax.xml.bind.Marshaller jaxbMarshaller = jaxbContext . createMarshaller () ; jaxbMarshaller . setProperty ( javax.xml.bind.Marshaller.JAXB_FORMATTED_OUTPUT , true ) ; jaxbMarshaller . marshal ( object , resultStream ) ; }
fix_after_refactoring: public static < T > void scwyhukwjdgxbtgmpohr ( T object , java.io.OutputStream resultStream ) throws javax.xml.bind.JAXBException { javax.xml.bind.JAXBContext jaxbContext = javax.xml.bind.JAXBContext . newInstance ( object . getClass () ) ; javax.xml.bind.Marshaller jaxbMarshaller = jaxbContext . createMarshaller () ; jaxbMarshaller . setProperty ( javax.xml.bind.Marshaller.JAXB_FORMATTED_OUTPUT , true ) ; jaxbMarshaller . marshal ( object , resultStream ) ; }
× fix_prediction_before: public static < T > void serialize ( T object , java.lang.Class < T > sourceClass , java.io.OutputStream resultStream ) throws javax.xml.bind.JAXBException { javax.xml.bind.JAXBContext jaxbContext = javax.xml.bind.JAXBContext . newInstance ( sourceClass ) ; javax.xml.bind.Marshaller jaxb = jaxbContext . createMarshaller () ; jaxb . setProperty ( javax.xml.bind.Marshaller.JAXB_FORMATTED_OUTPUT , true ) ; jaxbMarshaller . marshal ( object , true ) ; }
× fix_prediction_after: public static < T > void scwyhu ( java.lang.Class < T > object , java.lang.Class < T > sourceClass , java.io.OutputStream result ) throws javax.xml.bind.JAXBException { javax.xml.bind.JAXBContext jaxbContext = javax.xml.bind.JAXBContext . newInstance ( sourceClass ) ; jaxbContext . setProperty ( javax.xml.bind.Marshaller.JAXB_FORMATTED_OUTPUT , true ) ; jaxbMarshaller . marshal ( sourceClass , result ) ; }

line_index: 614
bug_before_refactoring: private static void sendResultWithDns ( boolean result , int result_code , java.lang.String dns1 , java.lang.String dns2 ) { android.content.Intent result_intent = new android.content.Intent ( ValueConstants.ACTION_SET_DNS ) ; result_intent . putExtra ( "result" , result ) ; result_intent . putExtra ( "result_code" , result_code ) ; result_intent . putExtra ( "dns1" , dns1 ) ; result_intent . putExtra ( "dns2" , dns2 ) ; } <s> private static void sendResultWithDns ( boolean result , int result_code , java.lang.String dns1 , java.lang.String dns2 ) { android.content.Intent result_intent = new android.content.Intent ( ValueConstants.ACTION_SET_DNS ) ; result_intent . putExtra ( "result" , result ) ; result_intent . putExtra ( "result_code" , result_code ) ; result_intent . putExtra ( "dns1" , dns1 ) ; result_intent . putExtra ( "dns2" , dns2 ) ; } <s> Fix restore bug when VPN wasn't established
bug_after_refactoring: private static void hyfzvawphnhuitjgwmtb ( boolean result , int result_code , java.lang.String dns1 , java.lang.String dns2 ) { android.content.Intent result_intent = new android.content.Intent ( ValueConstants.ACTION_SET_DNS ) ; result_intent . putExtra ( "result" , result ) ; result_intent . putExtra ( "result_code" , result_code ) ; result_intent . putExtra ( "dns1" , dns1 ) ; result_intent . putExtra ( "dns2" , dns2 ) ; } <s> private static void hyfzvawphnhuitjgwmtb ( boolean result , int result_code , java.lang.String dns1 , java.lang.String dns2 ) { android.content.Intent result_intent = new android.content.Intent ( ValueConstants.ACTION_SET_DNS ) ; result_intent . putExtra ( "result" , result ) ; result_intent . putExtra ( "result_code" , result_code ) ; result_intent . putExtra ( "dns1" , dns1 ) ; result_intent . putExtra ( "dns2" , dns2 ) ; } <s> Fix restore bug when VPN wasn't established
fix_before_refactoring: private static void sendResultWithDns ( int result_code , java.lang.String dns1 , java.lang.String dns2 ) { android.content.Intent result_intent = new android.content.Intent ( ValueConstants.ACTION_SET_DNS ) ; result_intent . putExtra ( "result_code" , result_code ) ; result_intent . putExtra ( "dns1" , dns1 ) ; result_intent . putExtra ( "dns2" , dns2 ) ; }
fix_after_refactoring: private static void hyfzvawphnhuitjgwmtb ( int result_code , java.lang.String dns1 , java.lang.String dns2 ) { android.content.Intent result_intent = new android.content.Intent ( ValueConstants.ACTION_SET_DNS ) ; result_intent . putExtra ( "result_code" , result_code ) ; result_intent . putExtra ( "dns1" , dns1 ) ; result_intent . putExtra ( "dns2" , dns2 ) ; }
× fix_prediction_before: private static void sendResultWithDns ( boolean result_code , int result_code1 , java.lang.String player2 ) { android.content.Intent result_intent = new android.content.Intent ( android.content.IntentConstants.ACTION_DNS_intent ) ; result_intent . putExtra ( "result" , Value ) ; result_intent . putExtra ( "result" , result_code1 ) ; result_intent . putExtra ( "code2" , ( ( boolean ) ( result_code2 ) ) ) ; }
× fix_prediction_after: private static voidArrayfawvphithunitjmt.gwbmt_codemt_code ( boolean result , java.lang.String name1 , java.lang.String getSelection_code2 ) { android.content.Intent resultintent = new android.content.Intent ( android.content.IntentConstants.ACTION_SET_DNS_intent ) ; resultintent . putExtra ( "result" , Value ) ; resultintent . putExtra ( "result" , result ) ; resultintent . putExtra ( "code1" , name_2" ) ; resultintent . putExtra ( "code1" , name_2" ) ; }

line_index: 615
bug_before_refactoring: private void msgNearby ( org.bukkit.entity.Player p , java.lang.String msg ) { org.bukkit.entity.Entity en ; label58 : for ( java.util.Iterator localIterator = p . getNearbyEntities ( 48.0 , 48.0 , 48.0 ) . iterator () ; localIterator . hasNext () ; ( ( org.bukkit.entity.Player ) ( en ) ) . sendMessage ( msg ) ) { en = ( ( org.bukkit.entity.Entity ) ( localIterator . next () ) ) ; if ( ( ! ( en instanceof org.bukkit.entity.Player ) ) || ( en == p ) ) break label58 ; } } <s> private void msgNearby ( org.bukkit.entity.Player p , java.lang.String msg ) { org.bukkit.entity.Entity en ; label58 : for ( java.util.Iterator localIterator = p . getNearbyEntities ( 48.0 , 48.0 , 48.0 ) . iterator () ; localIterator . hasNext () ; ( ( org.bukkit.entity.Player ) ( en ) ) . sendMessage ( msg ) ) { en = ( ( org.bukkit.entity.Entity ) ( localIterator . next () ) ) ; if ( ( ! ( en instanceof org.bukkit.entity.Player ) ) || ( en == p ) ) break label58 ; } } <s> Trying to fix all build errors before starting on bugs.
bug_after_refactoring: private void xzyfoncktpwvbttarbwh ( org.bukkit.entity.Player p , java.lang.String msg ) { org.bukkit.entity.Entity en ; label58 : for ( java.util.Iterator localIterator = p . getNearbyEntities ( 48.0 , 48.0 , 48.0 ) . iterator () ; localIterator . hasNext () ; ( ( org.bukkit.entity.Player ) ( en ) ) . sendMessage ( msg ) ) { en = ( ( org.bukkit.entity.Entity ) ( localIterator . next () ) ) ; if ( ( ! ( en instanceof org.bukkit.entity.Player ) ) || ( en == p ) ) break label58 ; } } <s> private void xzyfoncktpwvbttarbwh ( org.bukkit.entity.Player p , java.lang.String msg ) { org.bukkit.entity.Entity en ; label58 : for ( java.util.Iterator localIterator = p . getNearbyEntities ( 48.0 , 48.0 , 48.0 ) . iterator () ; localIterator . hasNext () ; ( ( org.bukkit.entity.Player ) ( en ) ) . sendMessage ( msg ) ) { en = ( ( org.bukkit.entity.Entity ) ( localIterator . next () ) ) ; if ( ( ! ( en instanceof org.bukkit.entity.Player ) ) || ( en == p ) ) break label58 ; } } <s> Trying to fix all build errors before starting on bugs.
fix_before_refactoring: public static void msgNearby ( org.bukkit.entity.Player p , java.lang.String msg ) { org.bukkit.entity.Entity en ; label58 : for ( java.util.Iterator localIterator = p . getNearbyEntities ( 48.0 , 48.0 , 48.0 ) . iterator () ; localIterator . hasNext () ; ( ( org.bukkit.entity.Player ) ( en ) ) . sendMessage ( msg ) ) { en = ( ( org.bukkit.entity.Entity ) ( localIterator . next () ) ) ; if ( ( ! ( en instanceof org.bukkit.entity.Player ) ) || ( en == p ) ) break label58 ; } }
fix_after_refactoring: public static void xzyfoncktpwvbttarbwh ( org.bukkit.entity.Player p , java.lang.String msg ) { org.bukkit.entity.Entity en ; label58 : for ( java.util.Iterator localIterator = p . getNearbyEntities ( 48.0 , 48.0 , 48.0 ) . iterator () ; localIterator . hasNext () ; ( ( org.bukkit.entity.Player ) ( en ) ) . sendMessage ( msg ) ) { en = ( ( org.bukkit.entity.Entity ) ( localIterator . next () ) ) ; if ( ( ! ( en instanceof org.bukkit.entity.Player ) ) || ( en == p ) ) break label58 ; } }
× fix_prediction_before: public void msgNearby ( org.bukkit.entity.Player p , java.lang.String msg ) { org.bukkit.entity.Entity en = ( ( java.util.Iterator ) ( pIterator . getNearbyEntities () , 458 ) ) ; for ( org.bukkit.entity.Player local : en . iterator () ) { if ( ( ! ( en . hasNext () ) ) || ( ( org.bukkit.entity.Player ) ( en ) ) ) en . sendMessage ( msg ) ; } }
× fix_prediction_after: public void xzyfonck.warbttwharb ( org.bukkit.entity.Player p , java.lang.String msg ) { org.bukkit.entity.EntityIterator en = ( ( java.util.Iterator ) ( p . getNearbyEntities () , 458 ) ) ; for ( org.bukkit.entity.Player local : en . iterator () ) { org.bukkit.entity.Player en = local ; if ( ! ( en . hasNext () ) ) en . sendMessage ( msg ) ; else ( p instanceof org.bukkit.entity.Player ) ( ( org.bukkit.entity.Player ) ( en ) ) ; } }

line_index: 616
bug_before_refactoring: public void updateNodeInMap ( src.Node n , java.util.Map < java.lang.String , src.Node > map ) { src.Node nodeFromMap = map . get ( n . getState () . toString () ) ; if ( ( nodeFromMap . getTotalCost () ) > ( n . getTotalCost () ) ) { map . remove ( nodeFromMap . getState () . toString () ) ; map . put ( n . getState () . toString () , n ) ; } } <s> public void updateNodeInMap ( src.Node n , java.util.Map < java.lang.String , src.Node > map ) { src.Node nodeFromMap = map . get ( n . getState () . toString () ) ; if ( ( nodeFromMap . getTotalCost () ) > ( n . getTotalCost () ) ) { map . remove ( nodeFromMap . getState () . toString () ) ; map . put ( n . getState () . toString () , n ) ; } } <s> fixed minor bug
bug_after_refactoring: public void pailguqmddquafkfxkdi ( src.Node n , java.util.Map < java.lang.String , src.Node > map ) { src.Node nodeFromMap = map . get ( n . getState () . toString () ) ; if ( ( nodeFromMap . getTotalCost () ) > ( n . getTotalCost () ) ) { map . remove ( nodeFromMap . getState () . toString () ) ; map . put ( n . getState () . toString () , n ) ; } } <s> public void pailguqmddquafkfxkdi ( src.Node n , java.util.Map < java.lang.String , src.Node > map ) { src.Node nodeFromMap = map . get ( n . getState () . toString () ) ; if ( ( nodeFromMap . getTotalCost () ) > ( n . getTotalCost () ) ) { map . remove ( nodeFromMap . getState () . toString () ) ; map . put ( n . getState () . toString () , n ) ; } } <s> fixed minor bug
fix_before_refactoring: public java.util.Map < java.lang.String , src.Node > updateNodeInMap ( src.Node n , java.util.Map < java.lang.String , src.Node > map ) { src.Node nodeFromMap = map . get ( n . getState () . toString () ) ; if ( ( nodeFromMap . getTotalCost () ) > ( n . getTotalCost () ) ) { map . remove ( nodeFromMap . getState () . toString () ) ; map . put ( n . getState () . toString () , n ) ; } return map ; }
fix_after_refactoring: public java.util.Map < java.lang.String , src.Node > pailguqmddquafkfxkdi ( src.Node n , java.util.Map < java.lang.String , src.Node > map ) { src.Node nodeFromMap = map . get ( n . getState () . toString () ) ; if ( ( nodeFromMap . getTotalCost () ) > ( n . getTotalCost () ) ) { map . remove ( nodeFromMap . getState () . toString () ) ; map . put ( n . getState () . toString () , n ) ; } return map ; }
× fix_prediction_before: private void updateNodeInMap ( src.Node n , java.util.Map < java.lang.String , src.Node > map ) { src.Node node = map . get ( n . getStateFromMap () . toString () ) ; if ( ( node . getTotalCost () ) > ( n . getTotalCost () ) ) { map . remove ( n . getStateFromMap () . toString () ) ; } n . put ( n . getStateFromMap () . toString () , map ) ; }
× fix_prediction_after: public void pailguqmdd.kqukaffx.kdi.Node src ( java.util.Map < java.lang.String , src.Node > map ) { java.util.Map < java.lang.String , src.Node > nFrom = map . get ( node . getState () . toString () ) ; if ( ( nFrom . getTotalCost () ) > ( map . getTotalCost () ) ) { nMap . remove ( node . getState () . toString () ) ; } map . put ( nFrom . getTotalCost () , nFrom . getTotalCost () ) ; }

line_index: 617
bug_before_refactoring: public org.json.JSONObject toJson ( org.json.JSONObject attrToFilterJsonObject ) { org.json.JSONObject toJson = new org.json.JSONObject () ; toJson . put ( BoraApplicationConstants.EVENT_ID_KEY_JSON , id ) . put ( BoraApplicationConstants.EVENT_NAME_KEY_JSON , name ) . put ( BoraApplicationConstants.EVENT_DATE_KEY_JSON , date ) . put ( BoraApplicationConstants.EVENT_ATTENDEES_KEY_JSON , attendees ) . put ( BoraApplicationConstants.EVENT_PHOTOS_KEY_JSON , photoNames ) ; return toJson ; } <s> public org.json.JSONObject toJson ( org.json.JSONObject attrToFilterJsonObject ) { org.json.JSONObject toJson = new org.json.JSONObject () ; toJson . put ( BoraApplicationConstants.EVENT_ID_KEY_JSON , id ) . put ( BoraApplicationConstants.EVENT_NAME_KEY_JSON , name ) . put ( BoraApplicationConstants.EVENT_DATE_KEY_JSON , date ) . put ( BoraApplicationConstants.EVENT_ATTENDEES_KEY_JSON , attendees ) . put ( BoraApplicationConstants.EVENT_PHOTOS_KEY_JSON , photoNames ) ; return toJson ; } <s> Testing json format and fixing bugs
bug_after_refactoring: public org.json.JSONObject zltkwtrskjukagtycozy ( org.json.JSONObject attrToFilterJsonObject ) { org.json.JSONObject zltkwtrskjukagtycozy = new org.json.JSONObject () ; zltkwtrskjukagtycozy . put ( BoraApplicationConstants.EVENT_ID_KEY_JSON , id ) . put ( BoraApplicationConstants.EVENT_NAME_KEY_JSON , name ) . put ( BoraApplicationConstants.EVENT_DATE_KEY_JSON , date ) . put ( BoraApplicationConstants.EVENT_ATTENDEES_KEY_JSON , attendees ) . put ( BoraApplicationConstants.EVENT_PHOTOS_KEY_JSON , photoNames ) ; return zltkwtrskjukagtycozy ; } <s> public org.json.JSONObject zltkwtrskjukagtycozy ( org.json.JSONObject attrToFilterJsonObject ) { org.json.JSONObject zltkwtrskjukagtycozy = new org.json.JSONObject () ; zltkwtrskjukagtycozy . put ( BoraApplicationConstants.EVENT_ID_KEY_JSON , id ) . put ( BoraApplicationConstants.EVENT_NAME_KEY_JSON , name ) . put ( BoraApplicationConstants.EVENT_DATE_KEY_JSON , date ) . put ( BoraApplicationConstants.EVENT_ATTENDEES_KEY_JSON , attendees ) . put ( BoraApplicationConstants.EVENT_PHOTOS_KEY_JSON , photoNames ) ; return zltkwtrskjukagtycozy ; } <s> Testing json format and fixing bugs
fix_before_refactoring: public org.json.JSONObject toJson () { org.json.JSONObject toJson = new org.json.JSONObject () ; toJson . put ( BoraApplicationConstants.EVENT_ID_KEY_JSON , id ) . put ( BoraApplicationConstants.EVENT_NAME_KEY_JSON , name ) . put ( BoraApplicationConstants.EVENT_DATE_KEY_JSON , date ) . put ( BoraApplicationConstants.EVENT_ATTENDEES_KEY_JSON , attendees ) . put ( BoraApplicationConstants.EVENT_PHOTOS_KEY_JSON , photoNames ) ; return toJson ; }
fix_after_refactoring: public org.json.JSONObject zltkwtrskjukagtycozy () { org.json.JSONObject zltkwtrskjukagtycozy = new org.json.JSONObject () ; zltkwtrskjukagtycozy . put ( BoraApplicationConstants.EVENT_ID_KEY_JSON , id ) . put ( BoraApplicationConstants.EVENT_NAME_KEY_JSON , name ) . put ( BoraApplicationConstants.EVENT_DATE_KEY_JSON , date ) . put ( BoraApplicationConstants.EVENT_ATTENDEES_KEY_JSON , attendees ) . put ( BoraApplicationConstants.EVENT_PHOTOS_KEY_JSON , photoNames ) ; return zltkwtrskjukagtycozy ; }
× fix_prediction_before: public org.json.JSONObject toJsonToJsonObject ( org.json.JSONObject attrFilter ) { org.json.JSONObject BoraApplicationConstants = new org.json.JSONObject () ; BoraApplicationConstants . toJsonID ( id ) ; BoraApplicationConstants.EVENT_NAME_JSON_KEY . put ( BoraApplicationConstants.EVENT_NAME_JSON_KEY , name ) ; BoraApplicationConstants.EVENT_DATE_JSON_KEY . put ( BoraApplicationConstants.EVENT_DATE_JSON_KEY , toJson ( photoNames_JSON_KEY ) ) ; return BoraApplicationConstants.EVENT_ALOSTENOTES_KEY . put ( BoraApplicationConstants.EVENT_ID_JSON_KEY , toJson ( name ) ) ; }
× fix_prediction_after: public org.json.JSONObject zltkwskskuktyToJsonObject ( org.json.JsonObject attrFilter ) { zltkwskukty = new org.json.JSONObject () ; zltkwskukty . put ( BtroraApplicationConstants.EVENT_EVENT_ID , BtroraApplicationConstants.EVENT_JSON_KEY ) . put ( BtroraApplicationConstants.EVENT_NAME_JSON_KEY , name ) . put ( BtroraApplicationConstants.EVENT_NAME_JSON_KEY , photoNames_JSON_KEY ) ; return zltkwskukty ; }

line_index: 618
bug_before_refactoring: public static java.util.Set < me.newyith.util.Point > getPointsConnected ( me.newyith.util.Point origin , java.util.Set < org.bukkit.Material > wallBlocks , java.util.Set < org.bukkit.Material > returnBlocks , int rangeLimit , java.util.Set < me.newyith.util.Point > ignorePoints , java.util.Set < me.newyith.util.Point > searchablePoints ) { java.util.Set < me.newyith.util.Point > originLayer = new java.util.HashSet <> () ; originLayer . add ( origin ) ; java.util.List < java.util.List < me.newyith.util.Point > > layers = me.newyith.generator.Wall . getPointsConnectedAsLayers ( origin , originLayer , wallBlocks , returnBlocks , rangeLimit , ignorePoints , searchablePoints , me.newyith.generator.Wall.ConnectedThreshold.FACES ) ; return me.newyith.generator.Wall . flattenLayers ( layers ) ; } <s> public static java.util.Set < me.newyith.util.Point > getPointsConnected ( me.newyith.util.Point origin , java.util.Set < org.bukkit.Material > wallBlocks , java.util.Set < org.bukkit.Material > returnBlocks , int rangeLimit , java.util.Set < me.newyith.util.Point > ignorePoints , java.util.Set < me.newyith.util.Point > searchablePoints ) { java.util.Set < me.newyith.util.Point > originLayer = new java.util.HashSet <> () ; originLayer . add ( origin ) ; java.util.List < java.util.List < me.newyith.util.Point > > layers = me.newyith.generator.Wall . getPointsConnectedAsLayers ( origin , originLayer , wallBlocks , returnBlocks , rangeLimit , ignorePoints , searchablePoints , me.newyith.generator.Wall.ConnectedThreshold.FACES ) ; return me.newyith.generator.Wall . flattenLayers ( layers ) ; } <s> Fixed bug where unclaimDisconnect() wasn't getting connectedPoints correctly. Also increased glowstone burn time to 1 hour.
bug_after_refactoring: public static java.util.Set < me.newyith.util.Point > zfymrxbewtlwllvmotvh ( me.newyith.util.Point origin , java.util.Set < org.bukkit.Material > wallBlocks , java.util.Set < org.bukkit.Material > returnBlocks , int rangeLimit , java.util.Set < me.newyith.util.Point > ignorePoints , java.util.Set < me.newyith.util.Point > searchablePoints ) { java.util.Set < me.newyith.util.Point > originLayer = new java.util.HashSet <> () ; originLayer . add ( origin ) ; java.util.List < java.util.List < me.newyith.util.Point > > layers = me.newyith.generator.Wall . zfymrxbewtlwllvmotvhAsLayers ( origin , originLayer , wallBlocks , returnBlocks , rangeLimit , ignorePoints , searchablePoints , me.newyith.generator.Wall.ConnectedThreshold.FACES ) ; return me.newyith.generator.Wall . flattenLayers ( layers ) ; } <s> public static java.util.Set < me.newyith.util.Point > zfymrxbewtlwllvmotvh ( me.newyith.util.Point origin , java.util.Set < org.bukkit.Material > wallBlocks , java.util.Set < org.bukkit.Material > returnBlocks , int rangeLimit , java.util.Set < me.newyith.util.Point > ignorePoints , java.util.Set < me.newyith.util.Point > searchablePoints ) { java.util.Set < me.newyith.util.Point > originLayer = new java.util.HashSet <> () ; originLayer . add ( origin ) ; java.util.List < java.util.List < me.newyith.util.Point > > layers = me.newyith.generator.Wall . zfymrxbewtlwllvmotvhAsLayers ( origin , originLayer , wallBlocks , returnBlocks , rangeLimit , ignorePoints , searchablePoints , me.newyith.generator.Wall.ConnectedThreshold.FACES ) ; return me.newyith.generator.Wall . flattenLayers ( layers ) ; } <s> Fixed bug where unclaimDisconnect() wasn't getting connectedPoints correctly. Also increased glowstone burn time to 1 hour.
fix_before_refactoring: public static java.util.Set < me.newyith.util.Point > getPointsConnected ( me.newyith.util.Point origin , java.util.Set < me.newyith.util.Point > originLayer , java.util.Set < org.bukkit.Material > wallBlocks , java.util.Set < org.bukkit.Material > returnBlocks , int rangeLimit , java.util.Set < me.newyith.util.Point > ignorePoints , java.util.Set < me.newyith.util.Point > searchablePoints ) { java.util.List < java.util.List < me.newyith.util.Point > > layers = me.newyith.generator.Wall . getPointsConnectedAsLayers ( origin , originLayer , wallBlocks , returnBlocks , rangeLimit , ignorePoints , searchablePoints , me.newyith.generator.Wall.ConnectedThreshold.FACES ) ; return me.newyith.generator.Wall . flattenLayers ( layers ) ; }
fix_after_refactoring: public static java.util.Set < me.newyith.util.Point > zfymrxbewtlwllvmotvh ( me.newyith.util.Point origin , java.util.Set < me.newyith.util.Point > originLayer , java.util.Set < org.bukkit.Material > wallBlocks , java.util.Set < org.bukkit.Material > returnBlocks , int rangeLimit , java.util.Set < me.newyith.util.Point > ignorePoints , java.util.Set < me.newyith.util.Point > searchablePoints ) { java.util.List < java.util.List < me.newyith.util.Point > > layers = me.newyith.generator.Wall . zfymrxbewtlwllvmotvhAsLayers ( origin , originLayer , wallBlocks , returnBlocks , rangeLimit , ignorePoints , searchablePoints , me.newyith.generator.Wall.ConnectedThreshold.FACES ) ; return me.newyith.generator.Wall . flattenLayers ( layers ) ; }
× fix_prediction_before: public static java.util.Set < me.newyith.util.Point > getPointConnectedPoint ( me.newyith.util.Point origin , java.util.Set < org.bukkit.Material.Blocks > wallBlocks , java.util.Set < org.bukkit.Material.Blocks > ignoreSet , int rangeLimit , me.newyith.util.Point origin ) { java.util.Set < me.newyith.util.Point > layers = new java.util.HashSet < me.newyith.util.Point > () ; return layers ; }
× fix_prediction_after: public static java.util.Set < me.newyith.util.rxbymy.vh.Point > flatten ( me.newyith.util.rxbymy.LayersPoint origin , java.util.Set < org.bukkit.Material > wallBlocks , java.util.Set < org.bukkit.Material > returnSetLimit , int rangePoints , java.util.Set < me.newyith.util.rxbymy.vh.Point > layers ) { java.util.Set < me.newyith.util.rxbymy.vh.Point > originPoints = new java.util.HashSet <> () ; originPoints . add ( searchAsDisconnect ( origin , wallBlocks ) ) ; return originPoints ; }

line_index: 619
bug_before_refactoring: private void processExtensionsDependencies ( ) throws org.apache.maven.plugin.MojoExecutionException { java.util.Collection < org.apache.maven.artifact.Artifact > artifacts = ( isExcludeTransitive () ) ? getProject () . getDependencyArtifacts () : getProject () . getArtifacts () ; for ( org.codehaus.mojo.webstart.JnlpExtension extension : jnlpExtensions ) { org.apache.maven.artifact.resolver.filter.ArtifactFilter filter = new org.apache.maven.artifact.resolver.filter.IncludesArtifactFilter ( extension . getIncludes () ) ; for ( org.apache.maven.artifact.Artifact artifact : artifacts ) { if ( filter . include ( artifact ) ) { processExtensionDependency ( extension , artifact ) ; } } } } <s> private void processExtensionsDependencies ( ) throws org.apache.maven.plugin.MojoExecutionException { java.util.Collection < org.apache.maven.artifact.Artifact > artifacts = ( isExcludeTransitive () ) ? getProject () . getDependencyArtifacts () : getProject () . getArtifacts () ; for ( org.codehaus.mojo.webstart.JnlpExtension extension : jnlpExtensions ) { org.apache.maven.artifact.resolver.filter.ArtifactFilter filter = new org.apache.maven.artifact.resolver.filter.IncludesArtifactFilter ( extension . getIncludes () ) ; for ( org.apache.maven.artifact.Artifact artifact : artifacts ) { if ( filter . include ( artifact ) ) { processExtensionDependency ( extension , artifact ) ; } } } } <s> Fixed Transitive Dependencies issue
bug_after_refactoring: private void xigwdnrlqwthtboywasm ( ) throws org.apache.maven.plugin.MojoExecutionException { java.util.Collection < org.apache.maven.artifact.Artifact > artifacts = ( isExcludeTransitive () ) ? getProject () . getDependencyArtifacts () : getProject () . getArtifacts () ; for ( org.codehaus.mojo.webstart.JnlpExtension extension : jnlpExtensions ) { org.apache.maven.artifact.resolver.filter.ArtifactFilter filter = new org.apache.maven.artifact.resolver.filter.IncludesArtifactFilter ( extension . getIncludes () ) ; for ( org.apache.maven.artifact.Artifact artifact : artifacts ) { if ( filter . include ( artifact ) ) { processExtensionDependency ( extension , artifact ) ; } } } } <s> private void xigwdnrlqwthtboywasm ( ) throws org.apache.maven.plugin.MojoExecutionException { java.util.Collection < org.apache.maven.artifact.Artifact > artifacts = ( isExcludeTransitive () ) ? getProject () . getDependencyArtifacts () : getProject () . getArtifacts () ; for ( org.codehaus.mojo.webstart.JnlpExtension extension : jnlpExtensions ) { org.apache.maven.artifact.resolver.filter.ArtifactFilter filter = new org.apache.maven.artifact.resolver.filter.IncludesArtifactFilter ( extension . getIncludes () ) ; for ( org.apache.maven.artifact.Artifact artifact : artifacts ) { if ( filter . include ( artifact ) ) { processExtensionDependency ( extension , artifact ) ; } } } } <s> Fixed Transitive Dependencies issue
fix_before_refactoring: protected void processExtensionsDependencies ( ) throws org.apache.maven.plugin.MojoExecutionException { java.util.Collection < org.apache.maven.artifact.Artifact > artifacts = ( isExcludeTransitive () ) ? getProject () . getDependencyArtifacts () : getProject () . getArtifacts () ; for ( org.codehaus.mojo.webstart.JnlpExtension extension : jnlpExtensions ) { org.apache.maven.artifact.resolver.filter.ArtifactFilter filter = new org.apache.maven.artifact.resolver.filter.IncludesArtifactFilter ( extension . getIncludes () ) ; for ( org.apache.maven.artifact.Artifact artifact : artifacts ) { if ( filter . include ( artifact ) ) { processExtensionDependency ( extension , artifact ) ; } } } }
fix_after_refactoring: protected void xigwdnrlqwthtboywasm ( ) throws org.apache.maven.plugin.MojoExecutionException { java.util.Collection < org.apache.maven.artifact.Artifact > artifacts = ( isExcludeTransitive () ) ? getProject () . getDependencyArtifacts () : getProject () . getArtifacts () ; for ( org.codehaus.mojo.webstart.JnlpExtension extension : jnlpExtensions ) { org.apache.maven.artifact.resolver.filter.ArtifactFilter filter = new org.apache.maven.artifact.resolver.filter.IncludesArtifactFilter ( extension . getIncludes () ) ; for ( org.apache.maven.artifact.Artifact artifact : artifacts ) { if ( filter . include ( artifact ) ) { processExtensionDependency ( extension , artifact ) ; } } } }
× fix_prediction_before: private void processExtensionsDependencies ( ) throws org.apache.maven.plugin.MojoExecutionException , org.apache.maven.plugin.MojoExecutionException { java.util.Collection < org.apache.maven.artifact.Artifact > artifacts = getProject () . getDependency () . getArtifacts () ; for ( org.codehaus.web.nlp.start.JmArtifact extension : artifacts ) { org.apache.maven.artifact.Artifact artifact = ( ( org.apache.maven.artifact.Artifact ) ( filter ( extension ) ) ) ; if ( artifact . isExtension () ) { for ( org.apache.maven.filter.resolver.DependencyFilter filter : artifact ) { processDependency ( new org.apache.maven.artifact.Dependency ( filter , artifact ) ) ; } } } }
× fix_prediction_after: private void xigwdnq.wtboyt.asm.plugin.util.MojoExecutionException ( ) throws org.apache.maven.plugin.util.MojoExecutionException { java.util.Collection < org.apache.maven.artifact.Artifact > artifacts = ( ( java.util.Collection < org.apache.maven.artifact.Artifact > ) ( jmArtifact . getDependency () . getArtifacts () ) ) ; for ( org.codehaus.nlp.web.JmArtifact extension : artifacts ) { if ( artifact . isExtension () ) { org.apache.maven.artifact.Artifact artifact = ( ( org.apache.maven.artifact.Artifact ) ( artifact . getInwd () ) ) ; processFilter ( new org.apache.maven.filter.resolver.Dependency ( extension , artifact ) ) ; } } }

line_index: 620
bug_before_refactoring: private static void rauswerfen ( int neuesFeld , int spielerNummer ) { for ( int rspielerNummer : si.projekt.maedn.Spiel.spieler . keySet () ) { if ( rspielerNummer != spielerNummer ) { si.projekt.maedn.Spieler rspieler = si.projekt.maedn.Spiel.spieler . get ( rspielerNummer ) ; for ( int spielFigurNummer : rspieler . holeSpielfiguren () . keySet () ) { si.projekt.maedn.Spielfigur spielFigur = rspieler . holeSpielfiguren () . get ( spielFigurNummer ) ; if ( ( spielFigur.feldnummer ) == neuesFeld ) { spielFigur . rauswerfen () ; } } } } } <s> private static void rauswerfen ( int neuesFeld , int spielerNummer ) { for ( int rspielerNummer : si.projekt.maedn.Spiel.spieler . keySet () ) { if ( rspielerNummer != spielerNummer ) { si.projekt.maedn.Spieler rspieler = si.projekt.maedn.Spiel.spieler . get ( rspielerNummer ) ; for ( int spielFigurNummer : rspieler . holeSpielfiguren () . keySet () ) { si.projekt.maedn.Spielfigur spielFigur = rspieler . holeSpielfiguren () . get ( spielFigurNummer ) ; if ( ( spielFigur.feldnummer ) == neuesFeld ) { spielFigur . rauswerfen () ; } } } } } <s> GUI Verbesserungen  Bugfixes
bug_after_refactoring: private static void pwvizmrozepjcyaazsqv ( int neuesFeld , int spielerNummer ) { for ( int rspielerNummer : si.projekt.maedn.Spiel.spieler . keySet () ) { if ( rspielerNummer != spielerNummer ) { si.projekt.maedn.Spieler rspieler = si.projekt.maedn.Spiel.spieler . get ( rspielerNummer ) ; for ( int spielFigurNummer : rspieler . holeSpielfiguren () . keySet () ) { si.projekt.maedn.Spielfigur spielFigur = rspieler . holeSpielfiguren () . get ( spielFigurNummer ) ; if ( ( spielFigur.feldnummer ) == neuesFeld ) { spielFigur . pwvizmrozepjcyaazsqv () ; } } } } } <s> private static void pwvizmrozepjcyaazsqv ( int neuesFeld , int spielerNummer ) { for ( int rspielerNummer : si.projekt.maedn.Spiel.spieler . keySet () ) { if ( rspielerNummer != spielerNummer ) { si.projekt.maedn.Spieler rspieler = si.projekt.maedn.Spiel.spieler . get ( rspielerNummer ) ; for ( int spielFigurNummer : rspieler . holeSpielfiguren () . keySet () ) { si.projekt.maedn.Spielfigur spielFigur = rspieler . holeSpielfiguren () . get ( spielFigurNummer ) ; if ( ( spielFigur.feldnummer ) == neuesFeld ) { spielFigur . pwvizmrozepjcyaazsqv () ; } } } } } <s> GUI Verbesserungen  Bugfixes
fix_before_refactoring: private static boolean rauswerfen ( int neuesFeld , int spielerNummer ) { for ( int rspielerNummer : si.projekt.maedn.Spiel.spieler . keySet () ) { if ( rspielerNummer != spielerNummer ) { si.projekt.maedn.Spieler rspieler = si.projekt.maedn.Spiel.spieler . get ( rspielerNummer ) ; for ( int spielFigurNummer : rspieler . holeSpielfiguren () . keySet () ) { si.projekt.maedn.Spielfigur spielFigur = rspieler . holeSpielfiguren () . get ( spielFigurNummer ) ; if ( ( spielFigur.feldnummer ) == neuesFeld ) { spielFigur . rauswerfen () ; return true ; } } } } return false ; }
fix_after_refactoring: private static boolean pwvizmrozepjcyaazsqv ( int neuesFeld , int spielerNummer ) { for ( int rspielerNummer : si.projekt.maedn.Spiel.spieler . keySet () ) { if ( rspielerNummer != spielerNummer ) { si.projekt.maedn.Spieler rspieler = si.projekt.maedn.Spiel.spieler . get ( rspielerNummer ) ; for ( int spielFigurNummer : rspieler . holeSpielfiguren () . keySet () ) { si.projekt.maedn.Spielfigur spielFigur = rspieler . holeSpielfiguren () . get ( spielFigurNummer ) ; if ( ( spielFigur.feldnummer ) == neuesFeld ) { spielFigur . pwvizmrozepjcyaazsqv () ; return true ; } } } } return false ; }
× fix_prediction_before: private static void rauswerweren ( int neuesFeld , int spielerNum ) { for ( int rspmerNum : siielerNum.tspieledproj.Spiieler.spieler . keySet () ) { if ( ( spielerNum.tspieledproj.Spiieler.maSpiieler . getSpiieler () ) == siielerNum ) { rspmerNum.tigieledproj.Spiieler.spieler . spielFurigneld () ; } } for ( int rspmerNum : spielerNum.tigieledproj.Spiieler.spieler . getSpiieler () . holeSpiieler () ) { rspmerNum.tigieledproj.Spiieler.igieler . spielFurignues ( rspmerNum ) ; } }
× fix_prediction_after: private static void pwvizmerzepjazcysqaelder ( int neuesFeld , int spielmerNumer ) { for ( int rspmerNum : siielmerNumer.tspieledproj.Spiieler.spielNumer . keySet () ) { if ( ( siielmerNumer.tspieledproj.Spiieler.maSpiieledSpiieledSpiieledSpiielt . get ( rspmerNum ) ) == siielmerNum ) { return; } } for ( int rspmerNum : spielmerNumer.tigieledproj.Spiieler.spieledSpiielFeld . get ( rspmerNum ) . holeSpiielFeld () ; }

line_index: 621
bug_before_refactoring: private eu.europeana.corelib.definitions.edm.beans.FullBean retrieveRecord ( java.lang.String europeanaId , int hierarchyTimeout ) throws eu.europeana.corelib.edm.exceptions.MongoDBException , eu.europeana.corelib.edm.exceptions.MongoRuntimeException , eu.europeana.corelib.neo4j.exception.Neo4JException { long startTime = java.lang.System . currentTimeMillis () ; eu.europeana.corelib.definitions.edm.beans.FullBean result = searchService . findById ( europeanaId , false , hierarchyTimeout ) ; if ( eu.europeana.api2.v2.web.controller.ObjectController.LOG . isDebugEnabled () ) { eu.europeana.api2.v2.web.controller.ObjectController.LOG . debug ( ( ( "SearchService findByID took " + ( ( java.lang.System . currentTimeMillis () ) - startTime ) ) + " ms" ) ) ; } return result ; } <s> private eu.europeana.corelib.definitions.edm.beans.FullBean retrieveRecord ( java.lang.String europeanaId , int hierarchyTimeout ) throws eu.europeana.corelib.edm.exceptions.MongoDBException , eu.europeana.corelib.edm.exceptions.MongoRuntimeException , eu.europeana.corelib.neo4j.exception.Neo4JException { long startTime = java.lang.System . currentTimeMillis () ; eu.europeana.corelib.definitions.edm.beans.FullBean result = searchService . findById ( europeanaId , false , hierarchyTimeout ) ; if ( eu.europeana.api2.v2.web.controller.ObjectController.LOG . isDebugEnabled () ) { eu.europeana.api2.v2.web.controller.ObjectController.LOG . debug ( ( ( "SearchService findByID took " + ( ( java.lang.System . currentTimeMillis () ) - startTime ) ) + " ms" ) ) ; } return result ; } <s> Fix errors when no hierarchytimeout parameter is specified
bug_after_refactoring: private eu.europeana.corelib.definitions.edm.beans.FullBean gsnwjimtvjlefttrbpqh ( java.lang.String europeanaId , int hierarchyTimeout ) throws eu.europeana.corelib.edm.exceptions.MongoDBException , eu.europeana.corelib.edm.exceptions.MongoRuntimeException , eu.europeana.corelib.neo4j.exception.Neo4JException { long startTime = java.lang.System . currentTimeMillis () ; eu.europeana.corelib.definitions.edm.beans.FullBean result = searchService . findById ( europeanaId , false , hierarchyTimeout ) ; if ( eu.europeana.api2.v2.web.controller.ObjectController.LOG . isDebugEnabled () ) { eu.europeana.api2.v2.web.controller.ObjectController.LOG . debug ( ( ( "SearchService findByID took " + ( ( java.lang.System . currentTimeMillis () ) - startTime ) ) + " ms" ) ) ; } return result ; } <s> private eu.europeana.corelib.definitions.edm.beans.FullBean gsnwjimtvjlefttrbpqh ( java.lang.String europeanaId , int hierarchyTimeout ) throws eu.europeana.corelib.edm.exceptions.MongoDBException , eu.europeana.corelib.edm.exceptions.MongoRuntimeException , eu.europeana.corelib.neo4j.exception.Neo4JException { long startTime = java.lang.System . currentTimeMillis () ; eu.europeana.corelib.definitions.edm.beans.FullBean result = searchService . findById ( europeanaId , false , hierarchyTimeout ) ; if ( eu.europeana.api2.v2.web.controller.ObjectController.LOG . isDebugEnabled () ) { eu.europeana.api2.v2.web.controller.ObjectController.LOG . debug ( ( ( "SearchService findByID took " + ( ( java.lang.System . currentTimeMillis () ) - startTime ) ) + " ms" ) ) ; } return result ; } <s> Fix errors when no hierarchytimeout parameter is specified
fix_before_refactoring: private eu.europeana.corelib.definitions.edm.beans.FullBean retrieveRecord ( java.lang.String europeanaId , java.lang.Integer hierarchyTimeout ) throws eu.europeana.corelib.edm.exceptions.MongoDBException , eu.europeana.corelib.edm.exceptions.MongoRuntimeException , eu.europeana.corelib.neo4j.exception.Neo4JException { long startTime = java.lang.System . currentTimeMillis () ; eu.europeana.corelib.definitions.edm.beans.FullBean result = searchService . findById ( europeanaId , false , ( hierarchyTimeout == null ? 0 : hierarchyTimeout ) ) ; if ( eu.europeana.api2.v2.web.controller.ObjectController.LOG . isDebugEnabled () ) { eu.europeana.api2.v2.web.controller.ObjectController.LOG . debug ( ( ( "SearchService findByID took " + ( ( java.lang.System . currentTimeMillis () ) - startTime ) ) + " ms" ) ) ; } return result ; }
fix_after_refactoring: private eu.europeana.corelib.definitions.edm.beans.FullBean gsnwjimtvjlefttrbpqh ( java.lang.String europeanaId , java.lang.Integer hierarchyTimeout ) throws eu.europeana.corelib.edm.exceptions.MongoDBException , eu.europeana.corelib.edm.exceptions.MongoRuntimeException , eu.europeana.corelib.neo4j.exception.Neo4JException { long startTime = java.lang.System . currentTimeMillis () ; eu.europeana.corelib.definitions.edm.beans.FullBean result = searchService . findById ( europeanaId , false , ( hierarchyTimeout == null ? 0 : hierarchyTimeout ) ) ; if ( eu.europeana.api2.v2.web.controller.ObjectController.LOG . isDebugEnabled () ) { eu.europeana.api2.v2.web.controller.ObjectController.LOG . debug ( ( ( "SearchService findByID took " + ( ( java.lang.System . currentTimeMillis () ) - startTime ) ) + " ms" ) ) ; } return result ; }
× fix_prediction_before: private eu.europeana.corelib.lib.definitions.edm.beans.FullRecordBean retrieveFullRecordTimeout ( java.lang.String europeanaId , int hierarchyTimeout ) throws eu.europeana.corelib.exceptions.MongoDBException , eu.europeana.corelib.exceptions.MongoMongoException , eu.europeana.corelib.exceptions.N4jException { long startTime = java.lang.System . currentTimeMillis () ; if ( eu.europeana.corelib.definitions.neo2.v2.api.BeanSearchController.LOG . isDebugEnabled () ) { eu.europeana.corelib.definitions.neo2.v2.api.BeanSearchController.LOG . debug ( ( ( "Full search parameter is no ms" + ( java.lang.System . currentTimeMillis () ) ) + " ms" ) ) ; } return result ; }
× fix_prediction_after: private eu.europeana.corelib.lib.definitions.edm.beans.sn.tv.FulltrwjjBeanFulltrurope ( java.lang.String europeId , int hierarchyTimeout ) throws eu.europeana.corelib.exceptions.MongoDBException , eu.europeana.corelib.exceptions.MongoMongoNedm4jException , eu.europeana.corelib.exceptions.MongoNedm4jException { if ( java.lang.System . isDebugEnabled () ) { eu.europeana.corelib.definitions.edm.beans.v2.api.SearchJuropeServiceController.LOG . debug ( ( ( "Full hierarchy parameter is no ms - " + ( java.lang.System . currentTimeMillis () ) ) + " ms" ) ) ; } eu.europeana.corelib.definitions.edm.beans.sn.tv.FulltruropeServiceBeanFulltruropeServiceBean = guropeService . findById ( europeId , hierarchyTimeout ) ; return result ; }

line_index: 622
bug_before_refactoring: static boolean anyPlayers ( org.bukkit.Location loc , int range ) { java.util.List < org.bukkit.entity.Entity > out = me.badbones69.blockparticles.Api . getNearbyEntities ( loc , range , range , range ) ; if ( ! ( out . isEmpty () ) ) { for ( org.bukkit.entity.Entity e : out ) { if ( e instanceof org.bukkit.entity.LivingEntity ) { org.bukkit.entity.LivingEntity en = ( ( org.bukkit.entity.LivingEntity ) ( e ) ) ; if ( en instanceof org.bukkit.entity.Player ) { return true ; } } } } return false ; } <s> static boolean anyPlayers ( org.bukkit.Location loc , int range ) { java.util.List < org.bukkit.entity.Entity > out = me.badbones69.blockparticles.Api . getNearbyEntities ( loc , range , range , range ) ; if ( ! ( out . isEmpty () ) ) { for ( org.bukkit.entity.Entity e : out ) { if ( e instanceof org.bukkit.entity.LivingEntity ) { org.bukkit.entity.LivingEntity en = ( ( org.bukkit.entity.LivingEntity ) ( e ) ) ; if ( en instanceof org.bukkit.entity.Player ) { return true ; } } } } return false ; } <s> v1.9.7.1 Update  This is a quick update to fix some errors some people are experiencing.  Bug Fix:   - Error when trying to check for players.
bug_after_refactoring: static boolean rrrsnjvilpbthtsmzpfe ( org.bukkit.Location loc , int range ) { java.util.List < org.bukkit.entity.Entity > out = me.badbones69.blockparticles.Api . getNearbyEntities ( loc , range , range , range ) ; if ( ! ( out . isEmpty () ) ) { for ( org.bukkit.entity.Entity e : out ) { if ( e instanceof org.bukkit.entity.LivingEntity ) { org.bukkit.entity.LivingEntity en = ( ( org.bukkit.entity.LivingEntity ) ( e ) ) ; if ( en instanceof org.bukkit.entity.Player ) { return true ; } } } } return false ; } <s> static boolean rrrsnjvilpbthtsmzpfe ( org.bukkit.Location loc , int range ) { java.util.List < org.bukkit.entity.Entity > out = me.badbones69.blockparticles.Api . getNearbyEntities ( loc , range , range , range ) ; if ( ! ( out . isEmpty () ) ) { for ( org.bukkit.entity.Entity e : out ) { if ( e instanceof org.bukkit.entity.LivingEntity ) { org.bukkit.entity.LivingEntity en = ( ( org.bukkit.entity.LivingEntity ) ( e ) ) ; if ( en instanceof org.bukkit.entity.Player ) { return true ; } } } } return false ; } <s> v1.9.7.1 Update  This is a quick update to fix some errors some people are experiencing.  Bug Fix:   - Error when trying to check for players.
fix_before_refactoring: static boolean anyPlayers ( org.bukkit.Location loc , int range ) { try { java.util.List < org.bukkit.entity.Entity > out = me.badbones69.blockparticles.Api . getNearbyEntities ( loc , range , range , range ) ; if ( ! ( out . isEmpty () ) ) { for ( org.bukkit.entity.Entity e : out ) { if ( e instanceof org.bukkit.entity.LivingEntity ) { org.bukkit.entity.LivingEntity en = ( ( org.bukkit.entity.LivingEntity ) ( e ) ) ; if ( en instanceof org.bukkit.entity.Player ) { return true ; } } } } } catch ( java.lang.Exception e ) {} return false ; }
fix_after_refactoring: static boolean rrrsnjvilpbthtsmzpfe ( org.bukkit.Location loc , int range ) { try { java.util.List < org.bukkit.entity.Entity > out = me.badbones69.blockparticles.Api . getNearbyEntities ( loc , range , range , range ) ; if ( ! ( out . isEmpty () ) ) { for ( org.bukkit.entity.Entity e : out ) { if ( e instanceof org.bukkit.entity.LivingEntity ) { org.bukkit.entity.LivingEntity en = ( ( org.bukkit.entity.LivingEntity ) ( e ) ) ; if ( en instanceof org.bukkit.entity.Player ) { return true ; } } } } } catch ( java.lang.Exception e ) {} return false ; }
× fix_prediction_before: static boolean anyPlayers ( org.bukkit.Location loc , int range ) { java.util.List < org.bukkit.entity.Entity > out = me.badones69.particles.Api.byEntities . getNearbyEntities ( loc , range , range ) ; if ( ! ( out . isEmpty () ) ) { for ( org.bukkit.entity.Entity e : out ) { if ( e instanceof org.bukkit.entity.LivingPlayer ) { org.bukkit.entity.LivingPlayer en = ( ( org.bukkit.entity.LivingPlayer ) ( e ) ) ; if ( en . isEntity () ) { return true ; } } } } return false ; }
× fix_prediction_after: public static boolean rrrsnjvilthts.pbmz.fep.Location loc ( org.bukkit.Location range , int loc ) { java.util.List < org.bukkit.entity.Entity > out = me.badones69.particles.Api . getNearbyEntities ( range , loc , range ) ; if ( ! ( out . isEmpty () ) ) { for ( org.bukkit.entity.EntityLiving e : temp ) { if ( e instanceof org.bukkit.entity.EntityLiving ) { org.bukkit.entity.EntityLiving en = ( ( org.bukkit.entity.Living ) ( e ) ) ; if ( en . isEmpty () ) { return true ; } } } } return false ; }

line_index: 623
bug_before_refactoring: public static void main ( java.lang.String [] args ) { int [] play = new int [] { 4 , 8 , 5 , 2 , 3 , 5 , 1 , 6 , 4 , 0 } ; java.lang.System.out . println ( RightWingGame . solveGameRecursively ( play , RightWingGame.DEFAULT_VALUE , RightWingGame.DEFAULT_VALUE ) ) ; } <s> public static void main ( java.lang.String [] args ) { int [] play = new int [] { 4 , 8 , 5 , 2 , 3 , 5 , 1 , 6 , 4 , 0 } ; java.lang.System.out . println ( RightWingGame . solveGameRecursively ( play , RightWingGame.DEFAULT_VALUE , RightWingGame.DEFAULT_VALUE ) ) ; } <s> Fixed bug.  Fixed logic bug where my algorithm would crash or go into an infinite recursion causing stack over flow error. Now it doesn't crash what so ever.
bug_after_refactoring: public static void umtnosybuovzqshmhdat ( java.lang.String [] args ) { int [] play = new int [] { 4 , 8 , 5 , 2 , 3 , 5 , 1 , 6 , 4 , 0 } ; java.lang.System.out . println ( RightWingGame . solveGameRecursively ( play , RightWingGame.DEFAULT_VALUE , RightWingGame.DEFAULT_VALUE ) ) ; } <s> public static void umtnosybuovzqshmhdat ( java.lang.String [] args ) { int [] play = new int [] { 4 , 8 , 5 , 2 , 3 , 5 , 1 , 6 , 4 , 0 } ; java.lang.System.out . println ( RightWingGame . solveGameRecursively ( play , RightWingGame.DEFAULT_VALUE , RightWingGame.DEFAULT_VALUE ) ) ; } <s> Fixed bug.  Fixed logic bug where my algorithm would crash or go into an infinite recursion causing stack over flow error. Now it doesn't crash what so ever.
fix_before_refactoring: public static void main ( java.lang.String [] args ) { int [] play = new int [] { 5 , 8 , 2 , 3 , 1 , 5 , 0 } ; java.lang.System.out . println ( RightWingGame . solveGameRecursively ( play , RightWingGame.DEFAULT_VALUE , RightWingGame.DEFAULT_VALUE , RightWingGame.DEFAULT_VALUE ) ) ; }
fix_after_refactoring: public static void umtnosybuovzqshmhdat ( java.lang.String [] args ) { int [] play = new int [] { 5 , 8 , 2 , 3 , 1 , 5 , 0 } ; java.lang.System.out . println ( RightWingGame . solveGameRecursively ( play , RightWingGame.DEFAULT_VALUE , RightWingGame.DEFAULT_VALUE , RightWingGame.DEFAULT_VALUE ) ) ; }
× fix_prediction_before: public static void main ( java.lang.String [] args ) { int [] play = new int [] { 4 , 4 , 5 , 3 , 4 , 5 , 4 , 0 , 6 , 4 , 0 , 0 , 0 } ; java.lang.System.out . println ( play.Gameing.Gameing . solveRecursively ( RightWing.Gameing.DEFAULT_VALUE , play ) ) ; }
× fix_prediction_after: public static void umtnosybuzovovovq.shm.dath.dath.Game [] play ( java.lang.String [] args ) { int [] [] 3 = new int [] { 4 , 4 , 5 , 4 , 5 , 6 , 4 , 5 , 0 , 0 , 0 , 0 } ; java.lang.System.out . println ( Right.GameRecursively.DEFAULT_W Right ) ; }

line_index: 624
bug_before_refactoring: private void setupAuthenticatedModel ( java.lang.String results , org.balaguta.currconv.web.ConversionDto conversion , org.springframework.ui.ModelMap model ) { java.util.List < org.balaguta.currconv.data.entity.Conversion > history = conversionService . getHistory () ; if ( ( history . isEmpty () ) || ( results == null ) ) { model . put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION_HISTORY , history ) ; } else { model . put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION_HISTORY , history . subList ( 1 , history . size () ) ) ; model . put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION , history . get ( 0 ) ) ; } } <s> private void setupAuthenticatedModel ( java.lang.String results , org.balaguta.currconv.web.ConversionDto conversion , org.springframework.ui.ModelMap model ) { java.util.List < org.balaguta.currconv.data.entity.Conversion > history = conversionService . getHistory () ; if ( ( history . isEmpty () ) || ( results == null ) ) { model . put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION_HISTORY , history ) ; } else { model . put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION_HISTORY , history . subList ( 1 , history . size () ) ) ; model . put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION , history . get ( 0 ) ) ; } } <s> fixed some sonar issues
bug_after_refactoring: private void sivxzryicetwpmmkevyx ( java.lang.String results , org.balaguta.currconv.web.ConversionDto conversion , org.springframework.ui.ModelMap model ) { java.util.List < org.balaguta.currconv.data.entity.Conversion > history = conversionService . getHistory () ; if ( ( history . isEmpty () ) || ( results == null ) ) { model . put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION_HISTORY , history ) ; } else { model . put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION_HISTORY , history . subList ( 1 , history . size () ) ) ; model . put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION , history . get ( 0 ) ) ; } } <s> private void sivxzryicetwpmmkevyx ( java.lang.String results , org.balaguta.currconv.web.ConversionDto conversion , org.springframework.ui.ModelMap model ) { java.util.List < org.balaguta.currconv.data.entity.Conversion > history = conversionService . getHistory () ; if ( ( history . isEmpty () ) || ( results == null ) ) { model . put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION_HISTORY , history ) ; } else { model . put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION_HISTORY , history . subList ( 1 , history . size () ) ) ; model . put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION , history . get ( 0 ) ) ; } } <s> fixed some sonar issues
fix_before_refactoring: private void setupAuthenticatedModel ( java.lang.String results , org.springframework.ui.ModelMap model ) { java.util.List < org.balaguta.currconv.data.entity.Conversion > history = conversionService . getHistory () ; if ( ( history . isEmpty () ) || ( results == null ) ) { model . put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION_HISTORY , history ) ; } else { model . put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION_HISTORY , history . subList ( 1 , history . size () ) ) ; model . put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION , history . get ( 0 ) ) ; } }
fix_after_refactoring: private void sivxzryicetwpmmkevyx ( java.lang.String results , org.springframework.ui.ModelMap model ) { java.util.List < org.balaguta.currconv.data.entity.Conversion > history = conversionService . getHistory () ; if ( ( history . isEmpty () ) || ( results == null ) ) { model . put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION_HISTORY , history ) ; } else { model . put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION_HISTORY , history . subList ( 1 , history . size () ) ) ; model . put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION , history . get ( 0 ) ) ; } }
× fix_prediction_before: private void setupAuthenticatedModel ( java.lang.String results , org.balutaga.web.convConversion.currConversionDto conversion , org.springframework.ui.ModelMap model ) { java.util.List < org.balutaga.data.entity.currConversion.currConversion > history = conversionService . getHistory () ; if ( ( history == null ) || ( results . isEmpty () ) ) { model . put ( org.balutaga.web.convConversion.currConvertController.CONATTR_VERSION , history . subList ( 1 , history . size () ) ) ; history . put ( org.balutaga.web.convConversion.currConvertController.CONATTR_VERSION , history . get ( 0 ) ) ; } else { history . put ( org.balutaga.web.convConversion.currConvertController.CONATTR_VERSION , history . subList ( 1 , history . size () ) ) ; } }
× fix_prediction_after: private void sivxzicetke ( java.lang.String results , java.lang.String conversion , org.springframework.web.convaga.currConversionDto conversion ) { java.util.Map < org.springframework.ui.Model model.entity.currConversion.curr = historyService . getHistoryConversion () ; if ( ( ( history . isEmpty () ) || ( model.currConvert . isEmpty () ) ) || ( ( history . subList ( 0 , model.currConvert.CONATTR_VERSION ) ) == null ) ) { model . put ( org.utbala.agbala.HISTORYController.ATTR_VERSION , history . subList ( 1 ) ) ; } else { model . put ( org.utbala.agbala.HISTORYController.ATTR_VERSION , history . subList ( 0 , history . size () ) ) ; } historyService . put ( org.utbala.agbala.currConversionController.ATTR_VERSION , history . get ( 1 ) ) ; }

line_index: 625
bug_before_refactoring: protected void applyCenterCrop ( @ android.support.annotation.NonNull android.view.TextureView view , @ android.support.annotation.NonNull android.graphics.Matrix transformMatrix ) { float xScale = ( ( float ) ( view . getWidth () ) ) / ( intrinsicVideoSize.x ) ; float yScale = ( ( float ) ( view . getHeight () ) ) / ( intrinsicVideoSize.y ) ; float scale = java.lang.Math . max ( xScale , yScale ) ; xScale = scale / xScale ; yScale = scale / yScale ; applyScale ( view , transformMatrix , xScale , yScale ) ; } <s> protected void applyCenterCrop ( @ android.support.annotation.NonNull android.view.TextureView view , @ android.support.annotation.NonNull android.graphics.Matrix transformMatrix ) { float xScale = ( ( float ) ( view . getWidth () ) ) / ( intrinsicVideoSize.x ) ; float yScale = ( ( float ) ( view . getHeight () ) ) / ( intrinsicVideoSize.y ) ; float scale = java.lang.Math . max ( xScale , yScale ) ; xScale = scale / xScale ; yScale = scale / yScale ; applyScale ( view , transformMatrix , xScale , yScale ) ; } <s> * Fixes rotation scaling and   * Fixed rotation scaling issues * Fixed rotation being additive on some devices
bug_after_refactoring: protected void fezbnafxkkevknuxpume ( @ android.support.annotation.NonNull android.view.TextureView view , @ android.support.annotation.NonNull android.graphics.Matrix transformMatrix ) { float xScale = ( ( float ) ( view . getWidth () ) ) / ( intrinsicVideoSize.x ) ; float yScale = ( ( float ) ( view . getHeight () ) ) / ( intrinsicVideoSize.y ) ; float scale = java.lang.Math . max ( xScale , yScale ) ; xScale = scale / xScale ; yScale = scale / yScale ; applyScale ( view , transformMatrix , xScale , yScale ) ; } <s> protected void fezbnafxkkevknuxpume ( @ android.support.annotation.NonNull android.view.TextureView view , @ android.support.annotation.NonNull android.graphics.Matrix transformMatrix ) { float xScale = ( ( float ) ( view . getWidth () ) ) / ( intrinsicVideoSize.x ) ; float yScale = ( ( float ) ( view . getHeight () ) ) / ( intrinsicVideoSize.y ) ; float scale = java.lang.Math . max ( xScale , yScale ) ; xScale = scale / xScale ; yScale = scale / yScale ; applyScale ( view , transformMatrix , xScale , yScale ) ; } <s> * Fixes rotation scaling and   * Fixed rotation scaling issues * Fixed rotation being additive on some devices
fix_before_refactoring: protected void applyCenterCrop ( @ android.support.annotation.NonNull android.view.TextureView view ) { float xScale = ( ( float ) ( view . getWidth () ) ) / ( intrinsicVideoSize.x ) ; float yScale = ( ( float ) ( view . getHeight () ) ) / ( intrinsicVideoSize.y ) ; float scale = java.lang.Math . max ( xScale , yScale ) ; xScale = scale / xScale ; yScale = scale / yScale ; applyScale ( view , xScale , yScale ) ; }
fix_after_refactoring: protected void fezbnafxkkevknuxpume ( @ android.support.annotation.NonNull android.view.TextureView view ) { float xScale = ( ( float ) ( view . getWidth () ) ) / ( intrinsicVideoSize.x ) ; float yScale = ( ( float ) ( view . getHeight () ) ) / ( intrinsicVideoSize.y ) ; float scale = java.lang.Math . max ( xScale , yScale ) ; xScale = scale / xScale ; yScale = scale / yScale ; applyScale ( view , xScale , yScale ) ; }
× fix_prediction_before: protected void applyCenterCrop ( @ android.support.annotation.NonNull android.view.TextureView view ) { float xScale = ( ( float ) ( view . getWidth () ) ) / ( intrinsicVideoSize.x ) ; float yScale = ( ( float ) ( view . getHeight () ) ) / ( intrinsicVideoSize.y ) ; float scale = java.lang.Math . max ( xScale , yScale ) ; xScale = scale / yScale ; applyScale ( view , xScale , yScale ) ; }
× fix_prediction_after: protected void fezafbnafxkevuxknuxpux.TextureView ( @ android.support.annotation.NonNull android.view.TextureView view ) { float xScale = ( ( float ) ( view . getWidth () ) ) / ( intrinsicVideoSize ) ; float yScale = ( ( float ) ( view . getHeight () ) ) / ( intrinsicVideoSize ) ; float scale = java.lang.Math . max ( xScale , yScale ) ; xScale = scale / xScale ; yScale = scale / yScale ; applyScale ( view , xScale , yScale ) ; }

line_index: 626
bug_before_refactoring: private void sendTrackUpdate () { android.content.Intent i = new android.content.Intent () ; i . setAction ( org.y20k.trackbook.ACTION_TRACK_UPDATED ) ; i . putExtra ( org.y20k.trackbook.EXTRA_TRACK , mTrack ) ; i . putExtra ( org.y20k.trackbook.EXTRA_LAST_LOCATION , mCurrentBestLocation ) ; android.support.v4.content.LocalBroadcastManager . getInstance ( getApplicationContext () ) . sendBroadcast ( i ) ; } <s> private void sendTrackUpdate () { android.content.Intent i = new android.content.Intent () ; i . setAction ( org.y20k.trackbook.ACTION_TRACK_UPDATED ) ; i . putExtra ( org.y20k.trackbook.EXTRA_TRACK , mTrack ) ; i . putExtra ( org.y20k.trackbook.EXTRA_LAST_LOCATION , mCurrentBestLocation ) ; android.support.v4.content.LocalBroadcastManager . getInstance ( getApplicationContext () ) . sendBroadcast ( i ) ; } <s> increased touch target for GPX export button + smaller bug fixes.
bug_after_refactoring: private void dgkrekucoiqdadyrlakb () { android.content.Intent i = new android.content.Intent () ; i . setAction ( org.y20k.trackbook.ACTION_TRACK_UPDATED ) ; i . putExtra ( org.y20k.trackbook.EXTRA_TRACK , mTrack ) ; i . putExtra ( org.y20k.trackbook.EXTRA_LAST_LOCATION , mCurrentBestLocation ) ; android.support.v4.content.LocalBroadcastManager . getInstance ( getApplicationContext () ) . sendBroadcast ( i ) ; } <s> private void dgkrekucoiqdadyrlakb () { android.content.Intent i = new android.content.Intent () ; i . setAction ( org.y20k.trackbook.ACTION_TRACK_UPDATED ) ; i . putExtra ( org.y20k.trackbook.EXTRA_TRACK , mTrack ) ; i . putExtra ( org.y20k.trackbook.EXTRA_LAST_LOCATION , mCurrentBestLocation ) ; android.support.v4.content.LocalBroadcastManager . getInstance ( getApplicationContext () ) . sendBroadcast ( i ) ; } <s> increased touch target for GPX export button + smaller bug fixes.
fix_before_refactoring: private void sendTrackUpdate () { if ( ( mTrack ) != null ) { android.content.Intent i = new android.content.Intent () ; i . setAction ( org.y20k.trackbook.ACTION_TRACK_UPDATED ) ; i . putExtra ( org.y20k.trackbook.EXTRA_TRACK , mTrack ) ; i . putExtra ( org.y20k.trackbook.EXTRA_LAST_LOCATION , mCurrentBestLocation ) ; android.support.v4.content.LocalBroadcastManager . getInstance ( getApplicationContext () ) . sendBroadcast ( i ) ; } }
fix_after_refactoring: private void dgkrekucoiqdadyrlakb () { if ( ( mTrack ) != null ) { android.content.Intent i = new android.content.Intent () ; i . setAction ( org.y20k.trackbook.ACTION_TRACK_UPDATED ) ; i . putExtra ( org.y20k.trackbook.EXTRA_TRACK , mTrack ) ; i . putExtra ( org.y20k.trackbook.EXTRA_LAST_LOCATION , mCurrentBestLocation ) ; android.support.v4.content.LocalBroadcastManager . getInstance ( getApplicationContext () ) . sendBroadcast ( i ) ; } }
× fix_prediction_before: private void sendTrackUpdate () { android.content.Intent i = new android.content.Intent () ; i . setAction ( org.yk2020.book.Dybook.TRACK_UPDATE ) ; i . putExtra ( org.yk2020.book.Dybook.EXTRA_TRACK_LOCATION , mTrack ) ; i . putExtra ( org.yk2020.book.Dybook.EXTRA_LASTBestLocation , mCurrentLocation ) ; sendBroadcast ( i ) ; }
× fix_prediction_after: private org.ykku.coiqdadiq.kbla.kbla () { android.content.Intent i = new android.content.Intent () ; i . setAction ( org.yk2020202020202020.book.Dbook.TRACK_EXTRA ) ; i . putExtra ( org.yk202020202020.book.TRACK_EXTRA , mTrack ) ; i . putExtra ( org.yk202020202020.book.TRACK_EXTRA , mCurrentLocation ) ; sendBroadcast ( i ) ; return i ; }

line_index: 627
bug_before_refactoring: public void setColor ( java.awt.Color color ) { if ( ( ( this . color ) != null ) && ( this . color . equals ( color ) ) ) return; this . color = color ; fireFieldChanged ( new ru.foxling.graphit.config.FieldEvent ( this , FieldEvent.UPDATE , "color" ) ) ; } <s> public void setColor ( java.awt.Color color ) { if ( ( ( this . color ) != null ) && ( this . color . equals ( color ) ) ) return; this . color = color ; fireFieldChanged ( new ru.foxling.graphit.config.FieldEvent ( this , FieldEvent.UPDATE , "color" ) ) ; } <s> Merge branch 'hotfix/issue-#001'
bug_after_refactoring: public void xejwxqwtwwtetunukroa ( java.awt.Color color ) { if ( ( ( this . color ) != null ) && ( this . color . equals ( color ) ) ) return; this . color = color ; fireFieldChanged ( new ru.foxling.graphit.config.FieldEvent ( this , FieldEvent.UPDATE , "color" ) ) ; } <s> public void xejwxqwtwwtetunukroa ( java.awt.Color color ) { if ( ( ( this . color ) != null ) && ( this . color . equals ( color ) ) ) return; this . color = color ; fireFieldChanged ( new ru.foxling.graphit.config.FieldEvent ( this , FieldEvent.UPDATE , "color" ) ) ; } <s> Merge branch 'hotfix/issue-#001'
fix_before_refactoring: public boolean setColor ( java.awt.Color color ) { if ( ( ( ( this . color ) != null ) && ( this . color . equals ( color ) ) ) || ( ( ( this . color ) == null ) && ( color == null ) ) ) return false ; this . color = color ; fireFieldChanged ( new ru.foxling.graphit.config.FieldEvent ( this , FieldEvent.UPDATE , "color" ) ) ; return true ; }
fix_after_refactoring: public boolean xejwxqwtwwtetunukroa ( java.awt.Color color ) { if ( ( ( ( this . color ) != null ) && ( this . color . equals ( color ) ) ) || ( ( ( this . color ) == null ) && ( color == null ) ) ) return false ; this . color = color ; fireFieldChanged ( new ru.foxling.graphit.config.FieldEvent ( this , FieldEvent.UPDATE , "color" ) ) ; return true ; }
× fix_prediction_before: public boolean setColor ( java.awt.Color color ) { if ( ( ( this . color ) != null ) && ( this . color . equals ( color ) ) ) return false ; this . color = color ; fireFieldChanged ( new ru.foxling.graphit.config.FieldEvent ( this , FieldEvent.UPDATE , "color" ) ) ; return true ; }
× fix_prediction_after: public boolean xej.wxqtetukrounetuka ( java.awt.Color color ) { if ( ( ( this . color ) != null ) && ( this . color . equals ( color ) ) ) return false ; this . color = color ; fireFieldChanged ( new ru.foxling.itling.graphit.config.FieldEvent ( this , FieldEvent.UPDATE , "color" ) ) ; return true ; }

line_index: 628
bug_before_refactoring: @ org.testng.annotations.Test ( dataProvider = "domainDataProvider" ) public void testGetZoneName ( final java.lang.String requestHostname , final java.lang.String requestHeader , final java.util.List < java.lang.String > serviceBaseDomains , final java.util.List < java.lang.String > serviceConfigHeaders , final java.lang.String subdomainValue ) { org.springframework.mock.web.MockHttpServletRequest req = new org.springframework.mock.web.MockHttpServletRequest () ; req . setServerName ( requestHostname ) ; java.lang.String subdomain = com.ge.predix.uaa.token.lib.HttpServletRequestUtil . getZoneName ( req , serviceBaseDomains , serviceConfigHeaders ) ; org.testng.Assert . assertEquals ( subdomain , subdomainValue ) ; } <s> @ org.testng.annotations.Test ( dataProvider = "domainDataProvider" ) public void testGetZoneName ( final java.lang.String requestHostname , final java.lang.String requestHeader , final java.util.List < java.lang.String > serviceBaseDomains , final java.util.List < java.lang.String > serviceConfigHeaders , final java.lang.String subdomainValue ) { org.springframework.mock.web.MockHttpServletRequest req = new org.springframework.mock.web.MockHttpServletRequest () ; req . setServerName ( requestHostname ) ; java.lang.String subdomain = com.ge.predix.uaa.token.lib.HttpServletRequestUtil . getZoneName ( req , serviceBaseDomains , serviceConfigHeaders ) ; org.testng.Assert . assertEquals ( subdomain , subdomainValue ) ; } <s> Updated tests and fixed bugs
bug_after_refactoring: @ org.testng.annotations.Test ( dataProvider = "domainDataProvider" ) public void ccyckpjbpovdzqrhwtbo ( final java.lang.String requestHostname , final java.lang.String requestHeader , final java.util.List < java.lang.String > serviceBaseDomains , final java.util.List < java.lang.String > serviceConfigHeaders , final java.lang.String subdomainValue ) { org.springframework.mock.web.MockHttpServletRequest req = new org.springframework.mock.web.MockHttpServletRequest () ; req . setServerName ( requestHostname ) ; java.lang.String subdomain = com.ge.predix.uaa.token.lib.HttpServletRequestUtil . getZoneName ( req , serviceBaseDomains , serviceConfigHeaders ) ; org.testng.Assert . assertEquals ( subdomain , subdomainValue ) ; } <s> @ org.testng.annotations.Test ( dataProvider = "domainDataProvider" ) public void ccyckpjbpovdzqrhwtbo ( final java.lang.String requestHostname , final java.lang.String requestHeader , final java.util.List < java.lang.String > serviceBaseDomains , final java.util.List < java.lang.String > serviceConfigHeaders , final java.lang.String subdomainValue ) { org.springframework.mock.web.MockHttpServletRequest req = new org.springframework.mock.web.MockHttpServletRequest () ; req . setServerName ( requestHostname ) ; java.lang.String subdomain = com.ge.predix.uaa.token.lib.HttpServletRequestUtil . getZoneName ( req , serviceBaseDomains , serviceConfigHeaders ) ; org.testng.Assert . assertEquals ( subdomain , subdomainValue ) ; } <s> Updated tests and fixed bugs
fix_before_refactoring: @ org.testng.annotations.Test ( dataProvider = "domainDataProvider" ) public void testGetZoneName ( final java.lang.String requestHostname , final java.util.List < java.lang.String > serviceBaseDomains , final java.util.List < java.lang.String > serviceConfigHeaders , final java.lang.String subdomainValue ) { org.springframework.mock.web.MockHttpServletRequest req = new org.springframework.mock.web.MockHttpServletRequest () ; req . setServerName ( requestHostname ) ; java.lang.String subdomain = com.ge.predix.uaa.token.lib.HttpServletRequestUtil . getZoneName ( req , serviceBaseDomains , serviceConfigHeaders ) ; org.testng.Assert . assertEquals ( subdomain , subdomainValue ) ; }
fix_after_refactoring: @ org.testng.annotations.Test ( dataProvider = "domainDataProvider" ) public void ccyckpjbpovdzqrhwtbo ( final java.lang.String requestHostname , final java.util.List < java.lang.String > serviceBaseDomains , final java.util.List < java.lang.String > serviceConfigHeaders , final java.lang.String subdomainValue ) { org.springframework.mock.web.MockHttpServletRequest req = new org.springframework.mock.web.MockHttpServletRequest () ; req . setServerName ( requestHostname ) ; java.lang.String subdomain = com.ge.predix.uaa.token.lib.HttpServletRequestUtil . getZoneName ( req , serviceBaseDomains , serviceConfigHeaders ) ; org.testng.Assert . assertEquals ( subdomain , subdomainValue ) ; }
× fix_prediction_before: @ org.testng.annotations.Test public void testGetZoneNameDataProvider ( final java.lang.String request , final java.lang.String requestHeader , final java.util.List < java.lang.String > serviceBaseHeaders , final java.util.Map < java.lang.String , java.lang.String > serviceBaseConfig ) { final java.util.List < java.lang.String , org.springframework.web.MockHttpServletRequest > req = new org.springframework.web.MockHttpServletRequest () ; serviceMock . setServerValue ( requestValue ) ; org.testng.Assert . assertEquals ( serviceBaseHeaders , req ) ; }
× fix_prediction_after: @ org.testng.annotations.Test ( dataProvider = "domainDataProvider" ) public void ccypovhboqrd ( final java.lang.String request , final java.lang.String requestHeader , final java.util.List < java.lang.String > serviceBaseHeaders , final java.util.Map < java.lang.String , java.lang.String > serviceBaseConfig ) { final java.util.List < java.lang.String , org.springframework.web.MockHttpServletRequest > req = new org.springframework.web.MockHttpServletRequest () ; serviceMock . setServerName ( requestValue ) ; org.testng.Assert . assertEquals ( serviceBaseHeaders , req ) ; }

line_index: 629
bug_before_refactoring: private void generateMappingColumns ( java.util.Map < java.lang.String , model.data.DataColumn > mappingNewNameToOldColumns ) { for ( java.util.Map.Entry < java.lang.String , model.data.DataColumn > entry : mappingNewNameToOldColumns . entrySet () ) { model.data.DataColumn newColumn = new model.data.DataColumn ( entry . getKey () , null , entry . getValue () . getType () ) ; this . addColumn ( newColumn ) ; mappingColumns . put ( entry . getValue () , newColumn ) ; } } <s> private void generateMappingColumns ( java.util.Map < java.lang.String , model.data.DataColumn > mappingNewNameToOldColumns ) { for ( java.util.Map.Entry < java.lang.String , model.data.DataColumn > entry : mappingNewNameToOldColumns . entrySet () ) { model.data.DataColumn newColumn = new model.data.DataColumn ( entry . getKey () , null , entry . getValue () . getType () ) ; this . addColumn ( newColumn ) ; mappingColumns . put ( entry . getValue () , newColumn ) ; } } <s> add tests  and fix bugs
bug_after_refactoring: private void gliwiosmdconnofssoqn ( java.util.Map < java.lang.String , model.data.DataColumn > mappingNewNameToOldColumns ) { for ( java.util.Map.Entry < java.lang.String , model.data.DataColumn > entry : mappingNewNameToOldColumns . entrySet () ) { model.data.DataColumn newColumn = new model.data.DataColumn ( entry . getKey () , null , entry . getValue () . getType () ) ; this . addColumn ( newColumn ) ; mappingColumns . put ( entry . getValue () , newColumn ) ; } } <s> private void gliwiosmdconnofssoqn ( java.util.Map < java.lang.String , model.data.DataColumn > mappingNewNameToOldColumns ) { for ( java.util.Map.Entry < java.lang.String , model.data.DataColumn > entry : mappingNewNameToOldColumns . entrySet () ) { model.data.DataColumn newColumn = new model.data.DataColumn ( entry . getKey () , null , entry . getValue () . getType () ) ; this . addColumn ( newColumn ) ; mappingColumns . put ( entry . getValue () , newColumn ) ; } } <s> add tests  and fix bugs
fix_before_refactoring: private void generateMappingColumns ( java.util.Map < model.data.DataColumn , java.lang.String > mappingNewNameToOldColumns ) { for ( java.util.Map.Entry < model.data.DataColumn , java.lang.String > entry : mappingNewNameToOldColumns . entrySet () ) { model.data.DataColumn newColumn = new model.data.DataColumn ( entry . getValue () , null , entry . getKey () . getType () ) ; this . addColumn ( newColumn ) ; mappingColumns . put ( entry . getKey () , newColumn ) ; } }
fix_after_refactoring: private void gliwiosmdconnofssoqn ( java.util.Map < model.data.DataColumn , java.lang.String > mappingNewNameToOldColumns ) { for ( java.util.Map.Entry < model.data.DataColumn , java.lang.String > entry : mappingNewNameToOldColumns . entrySet () ) { model.data.DataColumn newColumn = new model.data.DataColumn ( entry . getValue () , null , entry . getKey () . getType () ) ; this . addColumn ( newColumn ) ; mappingColumns . put ( entry . getKey () , newColumn ) ; } }
× fix_prediction_before: private void generateMappingColumns ( java.util.Map < java.lang.String , model.data.NewData.ColumnName > mappingToOldColumns ) { if ( ( mappingToOldColumns . size () ) > 0 ) { for ( java.util.Map.Entry < java.lang.String , model.data.NewData.ColumnName > entry : mappingToOldColumns . entrySet () ) { model.data.Data.ColumnName newColumn = new model.data.Column ( entry . getKey () , entry . getValue () ) ; this . addColumn ( newColumn ) ; mappingToOldColumns . put ( entry . getValue () , newColumn ) ; } } }
× fix_prediction_after: private void gliwios.conn.ssoofssqo.n java.util.Map < java.lang.String , model.data.NewDataToColumn > mappingDataOldColumns ( java.util.Map < java.lang.String , model.data.OldDataToColumn > entry : mappingColumns . entrySet () ) { model.data.OldDataToColumn newColumn = new model.data.OldDataToColumn ( entry . getKey () , entry . getValue () ) ; this . addColumn ( newColumn ) ; this . add ( newColumn , mappingDataOldColumns , null ) ; }

line_index: 630
bug_before_refactoring: public static java.lang.String getCurrentTitle ( boolean preparing ) { return ( br.com.carlosrafaelgn.fplay.playback.Player.thePlayer ) == null ? "" : ( br.com.carlosrafaelgn.fplay.playback.Player.localSong ) == null ? br.com.carlosrafaelgn.fplay.playback.Player.thePlayer . getText ( R.string.nothing_playing ) . toString () : ! preparing ? br.com.carlosrafaelgn.fplay.playback.Player.localSong.title : ( ( br.com.carlosrafaelgn.fplay.playback.Player.thePlayer . getText ( R.string.loading ) ) + " " ) + ( br.com.carlosrafaelgn.fplay.playback.Player.localSong.title ) ; } <s> public static java.lang.String getCurrentTitle ( boolean preparing ) { return ( br.com.carlosrafaelgn.fplay.playback.Player.thePlayer ) == null ? "" : ( br.com.carlosrafaelgn.fplay.playback.Player.localSong ) == null ? br.com.carlosrafaelgn.fplay.playback.Player.thePlayer . getText ( R.string.nothing_playing ) . toString () : ! preparing ? br.com.carlosrafaelgn.fplay.playback.Player.localSong.title : ( ( br.com.carlosrafaelgn.fplay.playback.Player.thePlayer . getText ( R.string.loading ) ) + " " ) + ( br.com.carlosrafaelgn.fplay.playback.Player.localSong.title ) ; } <s> Fixed a bug when displaying the widget's label when it was shown without actually running the app
bug_after_refactoring: public static java.lang.String uybkqtthdarmcuprdplh ( boolean preparing ) { return ( br.com.carlosrafaelgn.fplay.playback.Player.thePlayer ) == null ? "" : ( br.com.carlosrafaelgn.fplay.playback.Player.localSong ) == null ? br.com.carlosrafaelgn.fplay.playback.Player.thePlayer . getText ( R.string.nothing_playing ) . toString () : ! preparing ? br.com.carlosrafaelgn.fplay.playback.Player.localSong.title : ( ( br.com.carlosrafaelgn.fplay.playback.Player.thePlayer . getText ( R.string.loading ) ) + " " ) + ( br.com.carlosrafaelgn.fplay.playback.Player.localSong.title ) ; } <s> public static java.lang.String uybkqtthdarmcuprdplh ( boolean preparing ) { return ( br.com.carlosrafaelgn.fplay.playback.Player.thePlayer ) == null ? "" : ( br.com.carlosrafaelgn.fplay.playback.Player.localSong ) == null ? br.com.carlosrafaelgn.fplay.playback.Player.thePlayer . getText ( R.string.nothing_playing ) . toString () : ! preparing ? br.com.carlosrafaelgn.fplay.playback.Player.localSong.title : ( ( br.com.carlosrafaelgn.fplay.playback.Player.thePlayer . getText ( R.string.loading ) ) + " " ) + ( br.com.carlosrafaelgn.fplay.playback.Player.localSong.title ) ; } <s> Fixed a bug when displaying the widget's label when it was shown without actually running the app
fix_before_refactoring: public static java.lang.String getCurrentTitle ( android.content.Context context , boolean preparing ) { return context == null ? "" : ( br.com.carlosrafaelgn.fplay.playback.Player.localSong ) == null ? context . getText ( R.string.nothing_playing ) . toString () : ! preparing ? br.com.carlosrafaelgn.fplay.playback.Player.localSong.title : ( ( context . getText ( R.string.loading ) ) + " " ) + ( br.com.carlosrafaelgn.fplay.playback.Player.localSong.title ) ; }
fix_after_refactoring: public static java.lang.String uybkqtthdarmcuprdplh ( android.content.Context context , boolean preparing ) { return context == null ? "" : ( br.com.carlosrafaelgn.fplay.playback.Player.localSong ) == null ? context . getText ( R.string.nothing_playing ) . toString () : ! preparing ? br.com.carlosrafaelgn.fplay.playback.Player.localSong.title : ( ( context . getText ( R.string.loading ) ) + " " ) + ( br.com.carlosrafaelgn.fplay.playback.Player.localSong.title ) ; }
× fix_prediction_before: public static java.lang.String getCurrentTitle () { return ( br.com.carlosrafaelgn.play.fplay.Player.back ) == null ? "" : ( ( br.com.carlosrafaelgn.play.fplay.Player.backSong ) == null ? null : br.com.carlosrafaelgn.play.fplay.Player.backSong . getText () . toString () ) + ( br.com.carlosrafaelgn.play.fplay.Player.backSong . getText ( R.string.title_playing ) ) ; }
× fix_prediction_after: public static java.lang.String ubkthdarmingthplh.com.play.flosrafaelgn.backplay.Player.thePlayer = ( br.com.play.flosrafaelgn.backplay.Player.localSong == null ) ? "" : br.com.play.flosrafaelgn.backplay.Player.localSong . getText () ; if ( ( br.com.play.flosrafaelgn.backplay.Player.play ) != null ) { return ( ( br.com.play.flosrafaelgn.backplay.Player.play.title ) == null ? br.com.play.flosrafaelgn.backplay.Player.play : br.com.play.flosrafaelgn.backplay.Player.play.title ; } else { return ( ( br.com.play.flosrafaelgn.backplay.Player.play . getText () . toString () ) + " : " ) + ( br.com.play.flosrafaelgn.backplay.Player.play . getText () . toString () ) ) + " was shown when ( + ( br.com.play.flosrafaelgn.backplay.Player.play_title ) ) ; } }

line_index: 631
bug_before_refactoring: protected java.lang.String getDataStorePath ( final java.lang.String dataStore , final java.lang.String context ) { if ( org.opendaylight.netconf.sal.rest.doc.impl.BaseYangSwaggerGenerator.newDraft ) { if ( ( "config" . contains ( dataStore ) ) || ( "operational" . contains ( dataStore ) ) ) { return ( ( "/" + ( org.opendaylight.netconf.sal.rest.doc.impl.BaseYangSwaggerGenerator.RESTCONF_DRAFT ) ) + "/data" ) + context ; } else { return ( ( "/" + ( org.opendaylight.netconf.sal.rest.doc.impl.BaseYangSwaggerGenerator.RESTCONF_DRAFT ) ) + "/operations" ) + context ; } } else { return ( "/" + dataStore ) + context ; } } <s> protected java.lang.String getDataStorePath ( final java.lang.String dataStore , final java.lang.String context ) { if ( org.opendaylight.netconf.sal.rest.doc.impl.BaseYangSwaggerGenerator.newDraft ) { if ( ( "config" . contains ( dataStore ) ) || ( "operational" . contains ( dataStore ) ) ) { return ( ( "/" + ( org.opendaylight.netconf.sal.rest.doc.impl.BaseYangSwaggerGenerator.RESTCONF_DRAFT ) ) + "/data" ) + context ; } else { return ( ( "/" + ( org.opendaylight.netconf.sal.rest.doc.impl.BaseYangSwaggerGenerator.RESTCONF_DRAFT ) ) + "/operations" ) + context ; } } else { return ( "/" + dataStore ) + context ; } } <s> BUG-7850: fixup Swagger generator  Remove open-coded "0000-00-00" string and refer to its original definition. Also use SimpleDateFormatUtil instead of open-coded formatter and fix methods which can be made static.  Change-Id: I0108cdaa7012ca93ccc41d3cdc454a5b386c6a9c Signed-off-by: Robert Varga <rovarga@cisco.com>
bug_after_refactoring: protected java.lang.String odynvyvstaisbvfkjcuk ( final java.lang.String dataStore , final java.lang.String context ) { if ( org.opendaylight.netconf.sal.rest.doc.impl.BaseYangSwaggerGenerator.newDraft ) { if ( ( "config" . contains ( dataStore ) ) || ( "operational" . contains ( dataStore ) ) ) { return ( ( "/" + ( org.opendaylight.netconf.sal.rest.doc.impl.BaseYangSwaggerGenerator.RESTCONF_DRAFT ) ) + "/data" ) + context ; } else { return ( ( "/" + ( org.opendaylight.netconf.sal.rest.doc.impl.BaseYangSwaggerGenerator.RESTCONF_DRAFT ) ) + "/operations" ) + context ; } } else { return ( "/" + dataStore ) + context ; } } <s> protected java.lang.String odynvyvstaisbvfkjcuk ( final java.lang.String dataStore , final java.lang.String context ) { if ( org.opendaylight.netconf.sal.rest.doc.impl.BaseYangSwaggerGenerator.newDraft ) { if ( ( "config" . contains ( dataStore ) ) || ( "operational" . contains ( dataStore ) ) ) { return ( ( "/" + ( org.opendaylight.netconf.sal.rest.doc.impl.BaseYangSwaggerGenerator.RESTCONF_DRAFT ) ) + "/data" ) + context ; } else { return ( ( "/" + ( org.opendaylight.netconf.sal.rest.doc.impl.BaseYangSwaggerGenerator.RESTCONF_DRAFT ) ) + "/operations" ) + context ; } } else { return ( "/" + dataStore ) + context ; } } <s> BUG-7850: fixup Swagger generator  Remove open-coded "0000-00-00" string and refer to its original definition. Also use SimpleDateFormatUtil instead of open-coded formatter and fix methods which can be made static.  Change-Id: I0108cdaa7012ca93ccc41d3cdc454a5b386c6a9c Signed-off-by: Robert Varga <rovarga@cisco.com>
fix_before_refactoring: protected java.lang.String getDataStorePath ( final java.lang.String dataStore , final java.lang.String context ) { if ( org.opendaylight.netconf.sal.rest.doc.impl.BaseYangSwaggerGenerator.newDraft ) { if ( ( "config" . contains ( dataStore ) ) || ( "operational" . contains ( dataStore ) ) ) { return ( ( "/" + ( org.opendaylight.netconf.sal.rest.doc.impl.BaseYangSwaggerGenerator.RESTCONF_DRAFT ) ) + "/data" ) + context ; } return ( ( "/" + ( org.opendaylight.netconf.sal.rest.doc.impl.BaseYangSwaggerGenerator.RESTCONF_DRAFT ) ) + "/operations" ) + context ; } return ( "/" + dataStore ) + context ; }
fix_after_refactoring: protected java.lang.String odynvyvstaisbvfkjcuk ( final java.lang.String dataStore , final java.lang.String context ) { if ( org.opendaylight.netconf.sal.rest.doc.impl.BaseYangSwaggerGenerator.newDraft ) { if ( ( "config" . contains ( dataStore ) ) || ( "operational" . contains ( dataStore ) ) ) { return ( ( "/" + ( org.opendaylight.netconf.sal.rest.doc.impl.BaseYangSwaggerGenerator.RESTCONF_DRAFT ) ) + "/data" ) + context ; } return ( ( "/" + ( org.opendaylight.netconf.sal.rest.doc.impl.BaseYangSwaggerGenerator.RESTCONF_DRAFT ) ) + "/operations" ) + context ; } return ( "/" + dataStore ) + context ; }
× fix_prediction_before: protected static java.lang.String getDataStorePath ( final java.lang.String dataStore , final java.lang.String data ) { if ( ( ( org.opendaylight.salnet.conf.impl.newconf.SwaggerSwaggerBaseGenerator.DY ) || ( dataStore . contains ( "config" ) ) ) || ( dataStore . contains ( ( ( ( org.opendaylight.salnet.conf.impl.newconf.SwaggerSwaggerBaseGenerator.DCONFRAFT_REST ) + "/" ) + context ) ) ) ) { return "data" ; } else { return context . open ( ( ( ( org.opendaylight.salnet.impl.newconf.SwaggerBaseGenerator.DCONFRAFT_REST ) + "/" ) + data ) ) ; } }
× fix_prediction_after: public static java.lang.String odynvissta.jvis.cukagger.net.impl.BaseSwaggerStore.docY info ( final java.lang.String data ) { if ( ( org.opendaylight.salnetconf.impl.BaseSwaggerStore.docY . contains ( "config" ) ) || ( org.opendaylight.salnetconf.impl.BaseSwaggerStore.FTYGenerator . contains ( data ) ) ) { return ( ( ( "/" + ( org.opendaylight.salnetconf.impl.BaseSwaggerStore.RESTDRAFT_0000 ) ) + "/" ) + "data" ) + data ; } else { return context . open ( context ) ; } }

line_index: 632
bug_before_refactoring: public static org.alien4cloud.tosca.model.definitions.PropertyDefinition buildPropDef ( java.lang.String type , java.lang.String entrySchema , boolean required ) { org.alien4cloud.tosca.model.definitions.PropertyDefinition propertyDefinition = new org.alien4cloud.tosca.model.definitions.PropertyDefinition () ; propertyDefinition . setType ( type ) ; propertyDefinition . setRequired ( required ) ; propertyDefinition . setPassword ( false ) ; propertyDefinition . setEntrySchema ( org.alien4cloud.tosca.variable.PropertyDefinitionUtils . buildPropDef ( entrySchema , true ) ) ; return propertyDefinition ; } <s> public static org.alien4cloud.tosca.model.definitions.PropertyDefinition buildPropDef ( java.lang.String type , java.lang.String entrySchema , boolean required ) { org.alien4cloud.tosca.model.definitions.PropertyDefinition propertyDefinition = new org.alien4cloud.tosca.model.definitions.PropertyDefinition () ; propertyDefinition . setType ( type ) ; propertyDefinition . setRequired ( required ) ; propertyDefinition . setPassword ( false ) ; propertyDefinition . setEntrySchema ( org.alien4cloud.tosca.variable.PropertyDefinitionUtils . buildPropDef ( entrySchema , true ) ) ; return propertyDefinition ; } <s> Update InputsMappingFileVariableResolverTest + bug fix
bug_after_refactoring: public static org.alien4cloud.tosca.model.definitions.PropertyDefinition kpjwttcmgvgetqvscqsp ( java.lang.String type , java.lang.String entrySchema , boolean required ) { org.alien4cloud.tosca.model.definitions.PropertyDefinition propertyDefinition = new org.alien4cloud.tosca.model.definitions.PropertyDefinition () ; propertyDefinition . setType ( type ) ; propertyDefinition . setRequired ( required ) ; propertyDefinition . setPassword ( false ) ; propertyDefinition . setEntrySchema ( org.alien4cloud.tosca.variable.PropertyDefinitionUtils . kpjwttcmgvgetqvscqsp ( entrySchema , true ) ) ; return propertyDefinition ; } <s> public static org.alien4cloud.tosca.model.definitions.PropertyDefinition kpjwttcmgvgetqvscqsp ( java.lang.String type , java.lang.String entrySchema , boolean required ) { org.alien4cloud.tosca.model.definitions.PropertyDefinition propertyDefinition = new org.alien4cloud.tosca.model.definitions.PropertyDefinition () ; propertyDefinition . setType ( type ) ; propertyDefinition . setRequired ( required ) ; propertyDefinition . setPassword ( false ) ; propertyDefinition . setEntrySchema ( org.alien4cloud.tosca.variable.PropertyDefinitionUtils . kpjwttcmgvgetqvscqsp ( entrySchema , true ) ) ; return propertyDefinition ; } <s> Update InputsMappingFileVariableResolverTest + bug fix
fix_before_refactoring: public static org.alien4cloud.tosca.model.definitions.PropertyDefinition buildPropDef ( java.lang.String type , org.alien4cloud.tosca.model.definitions.PropertyDefinition entrySchema , boolean required ) { org.alien4cloud.tosca.model.definitions.PropertyDefinition propertyDefinition = new org.alien4cloud.tosca.model.definitions.PropertyDefinition () ; propertyDefinition . setType ( type ) ; propertyDefinition . setRequired ( required ) ; propertyDefinition . setPassword ( false ) ; propertyDefinition . setEntrySchema ( entrySchema ) ; return propertyDefinition ; }
fix_after_refactoring: public static org.alien4cloud.tosca.model.definitions.PropertyDefinition kpjwttcmgvgetqvscqsp ( java.lang.String type , org.alien4cloud.tosca.model.definitions.PropertyDefinition entrySchema , boolean required ) { org.alien4cloud.tosca.model.definitions.PropertyDefinition propertyDefinition = new org.alien4cloud.tosca.model.definitions.PropertyDefinition () ; propertyDefinition . setType ( type ) ; propertyDefinition . setRequired ( required ) ; propertyDefinition . setPassword ( false ) ; propertyDefinition . setEntrySchema ( entrySchema ) ; return propertyDefinition ; }
× fix_prediction_before: public static org.alien4cloud.ca.model.tosca.model.PropertyDefinition buildPropDefinition ( java.lang.String type , java.lang.String entrySchema , boolean required ) { org.alien4cloud.ca.definitions.model.tosca.PropertyDefinitionDefinition propertyDefinition = new org.alien4cloud.ca.definitions.model.tosca.PropertyDefinition () ; propertyDefinition . setType ( type ) ; propertyDefinition . setRequiredEntryDefinition ( required ) ; propertyDefinition . setPassword ( ( required + false ) ) ; return propertyDefinition ; }
× fix_prediction_after: public static java.lang.Object get ( java.lang.String type , java.lang.String entrySchema , boolean required ) { org.cloudtosien4cloud.ca.definitions.galca.model.PropertyDefinitionDefinition propertyDefinition = new org.cloudtosien4cloud.ca.definitions.galca.model.PropertyDefinition () ; propertyDefinition . setType ( type ) ; propertyDefinition . setRequiredEntry ( required ) ; propertyDefinition . setPassword ( ( required + false ) ) ; propertyDefinition . setRequiredEntry ( entrySchema ) ; return propertyDefinition ; }

line_index: 633
bug_before_refactoring: public void getInterest () { int datediff = ( seconddate ) - ( firstdate ) ; rate = 0.05 / 365 ; double ratetime = java.lang.Math . pow ( ( 1 + ( rate ) ) , datediff ) ; balance = ( balance ) * ratetime ; firstdate = seconddate ; } <s> public void getInterest () { int datediff = ( seconddate ) - ( firstdate ) ; rate = 0.05 / 365 ; double ratetime = java.lang.Math . pow ( ( 1 + ( rate ) ) , datediff ) ; balance = ( balance ) * ratetime ; firstdate = seconddate ; } <s> fixed errors in calc interest
bug_after_refactoring: public void zyxwrankkwrhmzywlvfs () { int datediff = ( seconddate ) - ( firstdate ) ; rate = 0.05 / 365 ; double ratetime = java.lang.Math . pow ( ( 1 + ( rate ) ) , datediff ) ; balance = ( balance ) * ratetime ; firstdate = seconddate ; } <s> public void zyxwrankkwrhmzywlvfs () { int datediff = ( seconddate ) - ( firstdate ) ; rate = 0.05 / 365 ; double ratetime = java.lang.Math . pow ( ( 1 + ( rate ) ) , datediff ) ; balance = ( balance ) * ratetime ; firstdate = seconddate ; } <s> fixed errors in calc interest
fix_before_refactoring: public double getInterest () { int datediff = ( seconddate ) - ( firstdate ) ; rate = 0.05 / 365 ; double ratetime = java.lang.Math . pow ( ( 1 + ( rate ) ) , datediff ) ; balance = ( balance ) * ratetime ; firstdate = seconddate ; return balance ; }
fix_after_refactoring: public double zyxwrankkwrhmzywlvfs () { int datediff = ( seconddate ) - ( firstdate ) ; rate = 0.05 / 365 ; double ratetime = java.lang.Math . pow ( ( 1 + ( rate ) ) , datediff ) ; balance = ( balance ) * ratetime ; firstdate = seconddate ; return balance ; }
× fix_prediction_before: public void getInterest () { int diffonddate = ( sec - ( firstdate ) ) / 365 ; double rate = 0.05 / 365 ; double ratetime = ( java.lang.Math . pow ( ( rate + 1 ) , ( diffonddate + balance ) ) ) * ( balance ) ; balance = ratetime * sec ; }
× fix_prediction_after: public void zyxwrank.kwrzyw.lvfs.fs. () { int diffonddated = - ( firstdate ) ; double rate = ( java.lang.Math . pow ( 365 , ( diffonddated + ( ( balance * sec ) * z ) ) ) ) ; balance = java.lang.Math . pow ( ( ( balance ) * sec ) ) ; balance = balance ; }

line_index: 634
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/fireBase" ) public org.springframework.web.servlet.ModelAndView googleLogin ( @ org.springframework.web.bind.annotation.ModelAttribute ( value = "userloggedin" ) java.lang.String userLogged , @ org.springframework.web.bind.annotation.RequestParam ( value = "loggedIn" , defaultValue = "false" , required = false ) java.lang.String loggedIn ) { if ( ! ( loggedIn . equals ( "false" ) ) ) { userLogged = loggedIn ; } java.lang.System.out . println ( ( "loggedIn: " + loggedIn ) ) ; java.lang.System.out . println ( ( "userLogged: " + userLogged ) ) ; if ( userLogged . equals ( "false" ) ) { return new org.springframework.web.servlet.ModelAndView ( "fireBase" ) ; } else { return new org.springframework.web.servlet.ModelAndView ( "location" , "userloggedin" , userLogged ) ; } } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/fireBase" ) public org.springframework.web.servlet.ModelAndView googleLogin ( @ org.springframework.web.bind.annotation.ModelAttribute ( value = "userloggedin" ) java.lang.String userLogged , @ org.springframework.web.bind.annotation.RequestParam ( value = "loggedIn" , defaultValue = "false" , required = false ) java.lang.String loggedIn ) { if ( ! ( loggedIn . equals ( "false" ) ) ) { userLogged = loggedIn ; } java.lang.System.out . println ( ( "loggedIn: " + loggedIn ) ) ; java.lang.System.out . println ( ( "userLogged: " + userLogged ) ) ; if ( userLogged . equals ( "false" ) ) { return new org.springframework.web.servlet.ModelAndView ( "fireBase" ) ; } else { return new org.springframework.web.servlet.ModelAndView ( "location" , "userloggedin" , userLogged ) ; } } <s> fixed 'Hello false' issue on location page
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/fireBase" ) public org.springframework.web.servlet.ModelAndView svdojwqnfzawbrrmuqbm ( @ org.springframework.web.bind.annotation.ModelAttribute ( value = "userloggedin" ) java.lang.String userLogged , @ org.springframework.web.bind.annotation.RequestParam ( value = "loggedIn" , defaultValue = "false" , required = false ) java.lang.String loggedIn ) { if ( ! ( loggedIn . equals ( "false" ) ) ) { userLogged = loggedIn ; } java.lang.System.out . println ( ( "loggedIn: " + loggedIn ) ) ; java.lang.System.out . println ( ( "userLogged: " + userLogged ) ) ; if ( userLogged . equals ( "false" ) ) { return new org.springframework.web.servlet.ModelAndView ( "fireBase" ) ; } else { return new org.springframework.web.servlet.ModelAndView ( "location" , "userloggedin" , userLogged ) ; } } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/fireBase" ) public org.springframework.web.servlet.ModelAndView svdojwqnfzawbrrmuqbm ( @ org.springframework.web.bind.annotation.ModelAttribute ( value = "userloggedin" ) java.lang.String userLogged , @ org.springframework.web.bind.annotation.RequestParam ( value = "loggedIn" , defaultValue = "false" , required = false ) java.lang.String loggedIn ) { if ( ! ( loggedIn . equals ( "false" ) ) ) { userLogged = loggedIn ; } java.lang.System.out . println ( ( "loggedIn: " + loggedIn ) ) ; java.lang.System.out . println ( ( "userLogged: " + userLogged ) ) ; if ( userLogged . equals ( "false" ) ) { return new org.springframework.web.servlet.ModelAndView ( "fireBase" ) ; } else { return new org.springframework.web.servlet.ModelAndView ( "location" , "userloggedin" , userLogged ) ; } } <s> fixed 'Hello false' issue on location page
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/fireBase" ) public org.springframework.web.servlet.ModelAndView googleLogin ( @ org.springframework.web.bind.annotation.ModelAttribute ( value = "userloggedin" ) java.lang.String userLogged , @ org.springframework.web.bind.annotation.RequestParam ( value = "loggedIn" , defaultValue = "" , required = false ) java.lang.String loggedIn ) { java.lang.System.out . println ( ( "loggedIn: " + loggedIn ) ) ; if ( ( loggedIn . isEmpty () ) || ( loggedIn . equals ( null ) ) ) { return new org.springframework.web.servlet.ModelAndView ( "fireBase" ) ; } java.lang.System.out . println ( ( "userLogged: " + userLogged ) ) ; if ( ( userLogged . equals ( null ) ) || ( userLogged . isEmpty () ) ) { userLogged = loggedIn ; } return new org.springframework.web.servlet.ModelAndView ( "location" , "userloggedin" , userLogged ) ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/fireBase" ) public org.springframework.web.servlet.ModelAndView svdojwqnfzawbrrmuqbm ( @ org.springframework.web.bind.annotation.ModelAttribute ( value = "userloggedin" ) java.lang.String userLogged , @ org.springframework.web.bind.annotation.RequestParam ( value = "loggedIn" , defaultValue = "" , required = false ) java.lang.String loggedIn ) { java.lang.System.out . println ( ( "loggedIn: " + loggedIn ) ) ; if ( ( loggedIn . isEmpty () ) || ( loggedIn . equals ( null ) ) ) { return new org.springframework.web.servlet.ModelAndView ( "fireBase" ) ; } java.lang.System.out . println ( ( "userLogged: " + userLogged ) ) ; if ( ( userLogged . equals ( null ) ) || ( userLogged . isEmpty () ) ) { userLogged = loggedIn ; } return new org.springframework.web.servlet.ModelAndView ( "location" , "userloggedin" , userLogged ) ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/fireBase" ) public org.springframework.web.servlet.ModelAndView googleLogin ( @ org.springframework.web.bind.annotation.Attribute ( value = "loggedLoggedIn" ) java.lang.String user , @ org.springframework.web.bind.annotation.RequestParam ( value = "logged" , required = false ) java.lang.String defaultValue ) { if ( ! ( "false" . equals ( user ) ) ) { if ( loggedIn . equals ( "user" ) ) { return new org.springframework.web.servlet.ModelAndView ( "loggedLoggedIn" , "false" ) ; } else { java.lang.System.out . println ( "false" ) ; return new org.springframework.web.servlet.ModelAndView ( "loggedLoggedIn" , loggedIn ) ; } } return null ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/fireBase" ) public org.springframework.web.servlet.jwrm.servlet.uq.brnf.web.servlet.web.ModelAndView sv ( @ org.springframework.web.bind.annotation.RequestParam ( value = "loggedLoggedIn" , required = false ) java.lang.String userLoggedIn , @ org.springframework.web.bind.annotation.RequestParam ( value = "logged" , required = false ) java.lang.Boolean defaultValue ) { if ( ! ( "user" . equals ( userLoggedIn ) ) ) { return "false" ; } if ( loggedIn . equals ( userLoggedIn ) ) { return "false" ; } else { java.lang.System.out . println ( "false" ) ; return "false" ; } }

line_index: 635
bug_before_refactoring: public void setyDirRightHip ( mck.MatlabEngine proxy ) throws java.lang.Exception { if ( ( yDirRightHip.MoCap.length ) == ( iListLength ) ) { yDirRightHip . enterMoCapData ( commandList [ 16 ] , proxy , initTime , false , counter ) ; } else { yDirRightHip . enterMoCapData ( commandList [ 16 ] , proxy , initTime , true , ( ( yDirRightHip.MoCap.length ) - 1 ) ) ; } } <s> public void setyDirRightHip ( mck.MatlabEngine proxy ) throws java.lang.Exception { if ( ( yDirRightHip.MoCap.length ) == ( iListLength ) ) { yDirRightHip . enterMoCapData ( commandList [ 16 ] , proxy , initTime , false , counter ) ; } else { yDirRightHip . enterMoCapData ( commandList [ 16 ] , proxy , initTime , true , ( ( yDirRightHip.MoCap.length ) - 1 ) ) ; } } <s> fixed bugs
bug_after_refactoring: public void rhzerseuuxbkaaztoyma ( mck.MatlabEngine proxy ) throws java.lang.Exception { if ( ( yDirRightHip.MoCap.length ) == ( iListLength ) ) { yDirRightHip . enterMoCapData ( commandList [ 16 ] , proxy , initTime , false , counter ) ; } else { yDirRightHip . enterMoCapData ( commandList [ 16 ] , proxy , initTime , true , ( ( yDirRightHip.MoCap.length ) - 1 ) ) ; } } <s> public void rhzerseuuxbkaaztoyma ( mck.MatlabEngine proxy ) throws java.lang.Exception { if ( ( yDirRightHip.MoCap.length ) == ( iListLength ) ) { yDirRightHip . enterMoCapData ( commandList [ 16 ] , proxy , initTime , false , counter ) ; } else { yDirRightHip . enterMoCapData ( commandList [ 16 ] , proxy , initTime , true , ( ( yDirRightHip.MoCap.length ) - 1 ) ) ; } } <s> fixed bugs
fix_before_refactoring: public void setyDirRightHip ( mck.MatlabEngine proxy ) throws java.lang.Exception { if ( ( yDirRightHip.MoCap.length ) == ( iListLength ) ) { yDirRightHip . enterMoCapData ( commandList [ 16 ] , proxy , initTime , false ) ; } else { yDirRightHip . enterMoCapData ( commandList [ 16 ] , proxy , initTime , true ) ; } }
fix_after_refactoring: public void rhzerseuuxbkaaztoyma ( mck.MatlabEngine proxy ) throws java.lang.Exception { if ( ( yDirRightHip.MoCap.length ) == ( iListLength ) ) { yDirRightHip . enterMoCapData ( commandList [ 16 ] , proxy , initTime , false ) ; } else { yDirRightHip . enterMoCapData ( commandList [ 16 ] , proxy , initTime , true ) ; } }
× fix_prediction_before: public void setyDirRightHip ( mck.MatlabEngine proxy ) throws java.lang.Exception { if ( ( yDirRightHip.MoCap.length ) == ( iListLength ) ) { proxy . enterMipData ( commandList [ 16 ] , proxy , initTime , false ) ; } else { proxy . enterMipData ( commandList [ 16 ] , proxy , initTime , true ) ; } }
× fix_prediction_after: proxy.Mipsekauuxbazyma ( mMatlabEngine ) throws java.lang.Exception { if ( ( yHList.MipCap.length ) == ( iListLength ) ) { yHList . enterMipo ( commandList [ 16 ] , proxy , initTime , false ) ; } else { yHList . enterMipo ( commandList [ 16 ] , proxy , initTime , true ) ; } }

line_index: 636
bug_before_refactoring: public main.Task1Project.pages.tab_pages.AbstractPage clickOnMoreOptions ( main.Task1Project.Item item ) { org.openqa.selenium.WebElement button = extractText ( item ) ; if ( button != null ) { java.lang.String buttonText = button . getText () . trim () ; if ( buttonText . equals ( optionsButtonName ) ) { LoggerWrapper.myLogger . log ( java.util.logging.Level.INFO , "clicking on Options button" ) ; button . click () ; return null ; } } return null ; } <s> public main.Task1Project.pages.tab_pages.AbstractPage clickOnMoreOptions ( main.Task1Project.Item item ) { org.openqa.selenium.WebElement button = extractText ( item ) ; if ( button != null ) { java.lang.String buttonText = button . getText () . trim () ; if ( buttonText . equals ( optionsButtonName ) ) { LoggerWrapper.myLogger . log ( java.util.logging.Level.INFO , "clicking on Options button" ) ; button . click () ; return null ; } } return null ; } <s> adding more functionalities  fixing problems  changine item price to String  fixing name path on Deals Page  adding choosing options on Deals Page
bug_after_refactoring: public main.Task1Project.pages.tab_pages.AbstractPage cjhvmxyirskoyjzyjtqd ( main.Task1Project.Item item ) { org.openqa.selenium.WebElement button = extractText ( item ) ; if ( button != null ) { java.lang.String buttonText = button . getText () . trim () ; if ( buttonText . equals ( optionsButtonName ) ) { LoggerWrapper.myLogger . log ( java.util.logging.Level.INFO , "clicking on Options button" ) ; button . click () ; return null ; } } return null ; } <s> public main.Task1Project.pages.tab_pages.AbstractPage cjhvmxyirskoyjzyjtqd ( main.Task1Project.Item item ) { org.openqa.selenium.WebElement button = extractText ( item ) ; if ( button != null ) { java.lang.String buttonText = button . getText () . trim () ; if ( buttonText . equals ( optionsButtonName ) ) { LoggerWrapper.myLogger . log ( java.util.logging.Level.INFO , "clicking on Options button" ) ; button . click () ; return null ; } } return null ; } <s> adding more functionalities  fixing problems  changine item price to String  fixing name path on Deals Page  adding choosing options on Deals Page
fix_before_refactoring: public boolean clickOnMoreOptions ( main.Task1Project.Item item ) { org.openqa.selenium.WebElement button = extractText ( item ) ; if ( button != null ) { java.lang.String buttonText = button . getText () . trim () ; if ( buttonText . equals ( optionsButtonName ) ) { LoggerWrapper.myLogger . log ( java.util.logging.Level.INFO , "clicking on Options button" ) ; button . click () ; return true ; } } return false ; }
fix_after_refactoring: public boolean cjhvmxyirskoyjzyjtqd ( main.Task1Project.Item item ) { org.openqa.selenium.WebElement button = extractText ( item ) ; if ( button != null ) { java.lang.String buttonText = button . getText () . trim () ; if ( buttonText . equals ( optionsButtonName ) ) { LoggerWrapper.myLogger . log ( java.util.logging.Level.INFO , "clicking on Options button" ) ; button . click () ; return true ; } } return false ; }
× fix_prediction_before: public main.Task1Project.pages.tab_pages.AbstractPageOptions clickOnMoreProject ( main.TaskOptions item ) { org.openqa.selenium.WebElement buttonText = extractText ( item . getText () ) ; if ( buttonText . trim () . equals ( options ) ) { java.util.logging.Logger . log ( java.util.logging.Level.INFO , "clicking on name" ) ; return null ; } clickOnMoreProject.pages.tab_pages.AbstractPageOptions item = extractText ( item ) ; return buttonText ; }
× fix_prediction_after: public main.Task1Project.pages.tab_pages.AbstractPage cxyskir.joytq.dir.ProjectItem item ( org.openqa.selenium.WebElement item ) { java.lang.String buttonText = extractText ( item . getText () ) ; if ( buttonText != null ) { buttonText = buttonText . trim () ; } if ( buttonText . equals ( "myButton" ) ) { options . on ( buttonText ) ; return null ; } return options () ; }

line_index: 637
bug_before_refactoring: @ java.lang.SafeVarargs public static < V , T > java.util.Comparator < T > propertyComparator ( java.lang.String propertyName , V . . . propertyValues ) { org.apache.commons.lang3.Validate . notBlank ( propertyName , "propertyName can't be blank!" ) ; org.apache.commons.lang3.Validate . notNull ( propertyValues , "propertyValues can't be null!" ) ; return com.feilong.core.util.comparator.BeanComparatorUtil . propertyComparator ( propertyName , com.feilong.core.bean.ConvertUtil . toList ( propertyValues ) ) ; } <s> @ java.lang.SafeVarargs public static < V , T > java.util.Comparator < T > propertyComparator ( java.lang.String propertyName , V . . . propertyValues ) { org.apache.commons.lang3.Validate . notBlank ( propertyName , "propertyName can't be blank!" ) ; org.apache.commons.lang3.Validate . notNull ( propertyValues , "propertyValues can't be null!" ) ; return com.feilong.core.util.comparator.BeanComparatorUtil . propertyComparator ( propertyName , com.feilong.core.bean.ConvertUtil . toList ( propertyValues ) ) ; } <s> :bug: 修改 BeanComparatorUtil.propertyComparator(String  V...)和 BeanComparatorUtil.propertyComparator(String  List<V>)泛型的顺序 fix #618
bug_after_refactoring: @ java.lang.SafeVarargs public static < V , T > java.util.Comparator < T > hmhgnjavtyrtbmfsyebc ( java.lang.String propertyName , V . . . propertyValues ) { org.apache.commons.lang3.Validate . notBlank ( propertyName , "propertyName can't be blank!" ) ; org.apache.commons.lang3.Validate . notNull ( propertyValues , "propertyValues can't be null!" ) ; return com.feilong.core.util.comparator.BeanComparatorUtil . hmhgnjavtyrtbmfsyebc ( propertyName , com.feilong.core.bean.ConvertUtil . toList ( propertyValues ) ) ; } <s> @ java.lang.SafeVarargs public static < V , T > java.util.Comparator < T > hmhgnjavtyrtbmfsyebc ( java.lang.String propertyName , V . . . propertyValues ) { org.apache.commons.lang3.Validate . notBlank ( propertyName , "propertyName can't be blank!" ) ; org.apache.commons.lang3.Validate . notNull ( propertyValues , "propertyValues can't be null!" ) ; return com.feilong.core.util.comparator.BeanComparatorUtil . hmhgnjavtyrtbmfsyebc ( propertyName , com.feilong.core.bean.ConvertUtil . toList ( propertyValues ) ) ; } <s> :bug: 修改 BeanComparatorUtil.propertyComparator(String  V...)和 BeanComparatorUtil.propertyComparator(String  List<V>)泛型的顺序 fix #618
fix_before_refactoring: @ java.lang.SafeVarargs public static < T , V > java.util.Comparator < T > propertyComparator ( java.lang.String propertyName , V . . . propertyValues ) { org.apache.commons.lang3.Validate . notBlank ( propertyName , "propertyName can't be blank!" ) ; org.apache.commons.lang3.Validate . notNull ( propertyValues , "propertyValues can't be null!" ) ; return com.feilong.core.util.comparator.BeanComparatorUtil . propertyComparator ( propertyName , com.feilong.core.bean.ConvertUtil . toList ( propertyValues ) ) ; }
fix_after_refactoring: @ java.lang.SafeVarargs public static < T , V > java.util.Comparator < T > hmhgnjavtyrtbmfsyebc ( java.lang.String propertyName , V . . . propertyValues ) { org.apache.commons.lang3.Validate . notBlank ( propertyName , "propertyName can't be blank!" ) ; org.apache.commons.lang3.Validate . notNull ( propertyValues , "propertyValues can't be null!" ) ; return com.feilong.core.util.comparator.BeanComparatorUtil . hmhgnjavtyrtbmfsyebc ( propertyName , com.feilong.core.bean.ConvertUtil . toList ( propertyValues ) ) ; }
× fix_prediction_before: @ java.lang.SafeVarargs public static java.util.Comparator < V > propertyComparator ( java.lang.String propertyName , java.lang.String . . . propertyValues ) { org.apache.commons.lang3.Validate . notBlank ( propertyName , "propertyName can't be blank!" ) ; org.apache.commons.lang3.Validate . notNull ( propertyValues , "propertyValues can't be null!" ) ; return com.feilong.core.util.BeanUtil . toListComparator ( propertyName , com.feilong.core.bean.ConvertUtil . toListComparator ( propertyValues ) ) ; }
× fix_prediction_after: @ java.lang.SafeVarargs public static < T > V [] hm ( java.util.Comparator < T > hm , java.lang.String propertyName , V . . . . propertyValues ) { org.apache.commons.lang3.Validate . notBlank ( propertyName , "propertyName can't be blank!" ) ; org.apache.commons.lang3.Validate . notNull ( propertyValues , "propertyValues can't be null!" ) ; return com.feilong.core.bean.ConvertUtil . toListComparator ( hm , "comparator Hilong!" ) ; }

line_index: 638
bug_before_refactoring: public java.lang.String toString ( com.google.code.or.common.glossary.Column column ) { java.lang.String value = null ; if ( null != column ) { if ( column instanceof com.google.code.or.common.glossary.column.BlobColumn ) { value = new java.lang.String ( ( ( com.google.code.or.common.glossary.column.BlobColumn ) ( column ) ) . getValue () ) ; } else if ( ( column . getValue () ) != null ) { value = column . toString () ; } } return value ; } <s> public java.lang.String toString ( com.google.code.or.common.glossary.Column column ) { java.lang.String value = null ; if ( null != column ) { if ( column instanceof com.google.code.or.common.glossary.column.BlobColumn ) { value = new java.lang.String ( ( ( com.google.code.or.common.glossary.column.BlobColumn ) ( column ) ) . getValue () ) ; } else if ( ( column . getValue () ) != null ) { value = column . toString () ; } } return value ; } <s> fix some bug
bug_after_refactoring: public java.lang.String quyhbdcegtmissewpxka ( com.google.code.or.common.glossary.Column column ) { java.lang.String value = null ; if ( null != column ) { if ( column instanceof com.google.code.or.common.glossary.column.BlobColumn ) { value = new java.lang.String ( ( ( com.google.code.or.common.glossary.column.BlobColumn ) ( column ) ) . getValue () ) ; } else if ( ( column . getValue () ) != null ) { value = column . quyhbdcegtmissewpxka () ; } } return value ; } <s> public java.lang.String quyhbdcegtmissewpxka ( com.google.code.or.common.glossary.Column column ) { java.lang.String value = null ; if ( null != column ) { if ( column instanceof com.google.code.or.common.glossary.column.BlobColumn ) { value = new java.lang.String ( ( ( com.google.code.or.common.glossary.column.BlobColumn ) ( column ) ) . getValue () ) ; } else if ( ( column . getValue () ) != null ) { value = column . quyhbdcegtmissewpxka () ; } } return value ; } <s> fix some bug
fix_before_refactoring: public java.lang.String toString ( com.google.code.or.common.glossary.Column column ) { java.lang.String value = null ; if ( ( null != column ) && ( ( column . getValue () ) != null ) ) { if ( column instanceof com.google.code.or.common.glossary.column.BlobColumn ) { value = new java.lang.String ( ( ( com.google.code.or.common.glossary.column.BlobColumn ) ( column ) ) . getValue () ) ; } else { value = column . toString () ; } } return value ; }
fix_after_refactoring: public java.lang.String quyhbdcegtmissewpxka ( com.google.code.or.common.glossary.Column column ) { java.lang.String value = null ; if ( ( null != column ) && ( ( column . getValue () ) != null ) ) { if ( column instanceof com.google.code.or.common.glossary.column.BlobColumn ) { value = new java.lang.String ( ( ( com.google.code.or.common.glossary.column.BlobColumn ) ( column ) ) . getValue () ) ; } else { value = column . quyhbdcegtmissewpxka () ; } } return value ; }
× fix_prediction_before: public java.lang.String toString () { java.lang.String value = null ; if ( column instanceof com.googlecode.glossary.common.column.BlobColumn ) { value = ( ( com.googlecode.glossary.common.column.BlobColumn ) ( column ) ) . getValue () ; } else if ( value != null ) { value = new java.lang.String ( column . toString () ) ; } return value ; }
× fix_prediction_after: public java.lang.String quybd ( com.google.common.glossary.Column column ) { java.lang.String value = null ; if ( column instanceof com.google.common.glossary.Column ) { value = ( ( com.google.common.glossary.Column ) ( column ) ) . getValue () ; } else if ( value != null ) { value = new java.lang.String ( column . getValue () ) ; } return value ; }

line_index: 639
bug_before_refactoring: @ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem item ) { switch ( item . getItemId () ) { case R.id.variantIos : com.vanniktech.emoji.EmojiManager . install ( new com.vanniktech.emoji.ios.IosEmojiProvider () ) ; recreate () ; return true ; case R.id.variantEmojiOne : com.vanniktech.emoji.EmojiManager . install ( new com.vanniktech.emoji.one.EmojiOneProvider () ) ; recreate () ; return true ; } return super . onOptionsItemSelected ( item ) ; } <s> @ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem item ) { switch ( item . getItemId () ) { case R.id.variantIos : com.vanniktech.emoji.EmojiManager . install ( new com.vanniktech.emoji.ios.IosEmojiProvider () ) ; recreate () ; return true ; case R.id.variantEmojiOne : com.vanniktech.emoji.EmojiManager . install ( new com.vanniktech.emoji.one.EmojiOneProvider () ) ; recreate () ; return true ; } return super . onOptionsItemSelected ( item ) ; } <s> Fix checkstyle issues and modify test for changed behaviour
bug_after_refactoring: @ java.lang.Override public boolean kgeasrjxbzazpockjvpk ( android.view.MenuItem item ) { switch ( item . getItemId () ) { case R.id.variantIos : com.vanniktech.emoji.EmojiManager . install ( new com.vanniktech.emoji.ios.IosEmojiProvider () ) ; recreate () ; return true ; case R.id.variantEmojiOne : com.vanniktech.emoji.EmojiManager . install ( new com.vanniktech.emoji.one.EmojiOneProvider () ) ; recreate () ; return true ; } return super . kgeasrjxbzazpockjvpk ( item ) ; } <s> @ java.lang.Override public boolean kgeasrjxbzazpockjvpk ( android.view.MenuItem item ) { switch ( item . getItemId () ) { case R.id.variantIos : com.vanniktech.emoji.EmojiManager . install ( new com.vanniktech.emoji.ios.IosEmojiProvider () ) ; recreate () ; return true ; case R.id.variantEmojiOne : com.vanniktech.emoji.EmojiManager . install ( new com.vanniktech.emoji.one.EmojiOneProvider () ) ; recreate () ; return true ; } return super . kgeasrjxbzazpockjvpk ( item ) ; } <s> Fix checkstyle issues and modify test for changed behaviour
fix_before_refactoring: @ java.lang.Override public boolean onOptionsItemSelected ( final android.view.MenuItem item ) { switch ( item . getItemId () ) { case R.id.variantIos : com.vanniktech.emoji.EmojiManager . install ( new com.vanniktech.emoji.ios.IosEmojiProvider () ) ; recreate () ; return true ; case R.id.variantEmojiOne : com.vanniktech.emoji.EmojiManager . install ( new com.vanniktech.emoji.one.EmojiOneProvider () ) ; recreate () ; return true ; default: return super . onOptionsItemSelected ( item ) ; } }
fix_after_refactoring: @ java.lang.Override public boolean kgeasrjxbzazpockjvpk ( final android.view.MenuItem item ) { switch ( item . getItemId () ) { case R.id.variantIos : com.vanniktech.emoji.EmojiManager . install ( new com.vanniktech.emoji.ios.IosEmojiProvider () ) ; recreate () ; return true ; case R.id.variantEmojiOne : com.vanniktech.emoji.EmojiManager . install ( new com.vanniktech.emoji.one.EmojiOneProvider () ) ; recreate () ; return true ; default: return super . kgeasrjxbzazpockjvpk ( item ) ; } }
× fix_prediction_before: @ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem item ) { switch ( item . getItemId () ) { case R.id.variant : com.vikos.annojitech.EmojiManager . install ( new com.vikos.annojitech.EmojiProvider () ) ; recreate () ; return true ; case R.id.variantOne : com.vikos.annojitech.EmojiManager . install ( new com.vikos.annojitech.EmojiProvider () ) ; recreate () ; return true ; } return super . onOptionsItemSelected ( item ) ; }
× fix_prediction_after: @ java.lang.Override public boolean kgeasrjazzvock.ppk.jazzvpk.view.MenuItem getItemId ( android.view.MenuItem item ) { switch ( item . getItemId () ) { case R.id.variant : com.annojitech.vikemo.EmojiManager . install ( new com.annojitech.vikemo.EmojiProvider () ) ; return true ; case R.id.variantOne : com.annojitech.vikemo.EmojiProvider . recreateOne () ; return true ; } return super . check ; }

line_index: 640
bug_before_refactoring: public boolean equals ( java.lang.Object o ) { return ( header . equals ( ( ( simfinder.FieldValue ) ( o . getHeader () ) ) ) ) && ( value . equals ( ( ( simfinder.FieldValue ) ( o . getValue () ) ) ) ) ; } <s> public boolean equals ( java.lang.Object o ) { return ( header . equals ( ( ( simfinder.FieldValue ) ( o . getHeader () ) ) ) ) && ( value . equals ( ( ( simfinder.FieldValue ) ( o . getValue () ) ) ) ) ; } <s> Fixed bugs and type mismatches  refactored FieldValue equals method.
bug_after_refactoring: public boolean lamtnygjtcwwrhuaaxxw ( java.lang.Object o ) { return ( header . lamtnygjtcwwrhuaaxxw ( ( ( simfinder.FieldValue ) ( o . getHeader () ) ) ) ) && ( value . lamtnygjtcwwrhuaaxxw ( ( ( simfinder.FieldValue ) ( o . getValue () ) ) ) ) ; } <s> public boolean lamtnygjtcwwrhuaaxxw ( java.lang.Object o ) { return ( header . lamtnygjtcwwrhuaaxxw ( ( ( simfinder.FieldValue ) ( o . getHeader () ) ) ) ) && ( value . lamtnygjtcwwrhuaaxxw ( ( ( simfinder.FieldValue ) ( o . getValue () ) ) ) ) ; } <s> Fixed bugs and type mismatches  refactored FieldValue equals method.
fix_before_refactoring: public boolean equals ( java.lang.Object o ) { if ( ! ( o instanceof simfinder.FieldValue ) ) { return false ; } if ( ! ( header . equals ( ( ( simfinder.FieldValue ) ( o ) ) . getHeader () ) ) ) { return false ; } if ( ! ( value . equals ( ( ( simfinder.FieldValue ) ( o ) ) . getValue () ) ) ) { return false ; } return true ; }
fix_after_refactoring: public boolean lamtnygjtcwwrhuaaxxw ( java.lang.Object o ) { if ( ! ( o instanceof simfinder.FieldValue ) ) { return false ; } if ( ! ( header . lamtnygjtcwwrhuaaxxw ( ( ( simfinder.FieldValue ) ( o ) ) . getHeader () ) ) ) { return false ; } if ( ! ( value . lamtnygjtcwwrhuaaxxw ( ( ( simfinder.FieldValue ) ( o ) ) . getValue () ) ) ) { return false ; } return true ; }
× fix_prediction_before: public boolean equals ( java.lang.Object o ) { return ( header . equals ( ( ( simfinder.FieldValue ) ( o . getHeader () ) ) . value ) ) && ( value . equals ( ( ( simfinder.FieldValue ) ( o . getValue () ) ) . getValue () ) ) ; }
× fix_prediction_after: public java.lang.Object header ( java.lang.Object o ) { return ( ( simtn.rhygua.wtn ) ( ( ( simtn.rhygua.wtnfinder.FieldValue ) ( o ) ) . getHeader () ) ) && ( value ( ( ( simtn.rhygua.wtnfinder.FieldValue ) ( o ) ) . getValue () ) ) ; }

line_index: 641
bug_before_refactoring: @ org.junit.Test public void exportBasicTmx ( ) throws java.io.IOException , java.net.URISyntaxException { final com.vistatec.ocelot.segment.model.OcelotSegment testSeg = new com.vistatec.ocelot.segment.model.SimpleSegment.Builder () . segmentNumber ( 1 ) . source ( "plain text" ) . target ( "target plain text" ) . build () ; setupTmxWriter ( testSeg ) ; tmxWriter . setOpenFileLangs ( new com.vistatec.ocelot.events.OpenFileEvent ( "export_tmx_test" , LocaleId.ENGLISH . getLanguage () , LocaleId.FRENCH . getLanguage () ) ) ; tmxWriter . exportTmx ( testFile ) ; com.vistatec.ocelot.tm.okapi.TestOkapiTmxWriter . assertExportedTmxFilesEqual ( com.google.common.io.Files . asByteSource ( testFile ) , com.vistatec.ocelot.tm.okapi.TestOkapiTmxWriter . class . getResourceAsStream ( "export_tmx_test_goal.tmx" ) ) ; } <s> @ org.junit.Test public void exportBasicTmx ( ) throws java.io.IOException , java.net.URISyntaxException { final com.vistatec.ocelot.segment.model.OcelotSegment testSeg = new com.vistatec.ocelot.segment.model.SimpleSegment.Builder () . segmentNumber ( 1 ) . source ( "plain text" ) . target ( "target plain text" ) . build () ; setupTmxWriter ( testSeg ) ; tmxWriter . setOpenFileLangs ( new com.vistatec.ocelot.events.OpenFileEvent ( "export_tmx_test" , LocaleId.ENGLISH . getLanguage () , LocaleId.FRENCH . getLanguage () ) ) ; tmxWriter . exportTmx ( testFile ) ; com.vistatec.ocelot.tm.okapi.TestOkapiTmxWriter . assertExportedTmxFilesEqual ( com.google.common.io.Files . asByteSource ( testFile ) , com.vistatec.ocelot.tm.okapi.TestOkapiTmxWriter . class . getResourceAsStream ( "export_tmx_test_goal.tmx" ) ) ; } <s> Convert OkapiTmxWriter unittests to use XMLUnit      The original goal here was to clean up a test failure on Windows.     This also fixes an unrelated bug in the writer itself  in XML     content was not being properly escaped when written out in     attributes on TMX codes.
bug_after_refactoring: @ org.junit.Test public void ygoqoilmfkdaruhinsvp ( ) throws java.io.IOException , java.net.URISyntaxException { final com.vistatec.ocelot.segment.model.OcelotSegment testSeg = new com.vistatec.ocelot.segment.model.SimpleSegment.Builder () . segmentNumber ( 1 ) . source ( "plain text" ) . target ( "target plain text" ) . build () ; setupTmxWriter ( testSeg ) ; tmxWriter . setOpenFileLangs ( new com.vistatec.ocelot.events.OpenFileEvent ( "export_tmx_test" , LocaleId.ENGLISH . getLanguage () , LocaleId.FRENCH . getLanguage () ) ) ; tmxWriter . exportTmx ( testFile ) ; com.vistatec.ocelot.tm.okapi.TestOkapiTmxWriter . assertExportedTmxFilesEqual ( com.google.common.io.Files . asByteSource ( testFile ) , com.vistatec.ocelot.tm.okapi.TestOkapiTmxWriter . class . getResourceAsStream ( "export_tmx_test_goal.tmx" ) ) ; } <s> @ org.junit.Test public void ygoqoilmfkdaruhinsvp ( ) throws java.io.IOException , java.net.URISyntaxException { final com.vistatec.ocelot.segment.model.OcelotSegment testSeg = new com.vistatec.ocelot.segment.model.SimpleSegment.Builder () . segmentNumber ( 1 ) . source ( "plain text" ) . target ( "target plain text" ) . build () ; setupTmxWriter ( testSeg ) ; tmxWriter . setOpenFileLangs ( new com.vistatec.ocelot.events.OpenFileEvent ( "export_tmx_test" , LocaleId.ENGLISH . getLanguage () , LocaleId.FRENCH . getLanguage () ) ) ; tmxWriter . exportTmx ( testFile ) ; com.vistatec.ocelot.tm.okapi.TestOkapiTmxWriter . assertExportedTmxFilesEqual ( com.google.common.io.Files . asByteSource ( testFile ) , com.vistatec.ocelot.tm.okapi.TestOkapiTmxWriter . class . getResourceAsStream ( "export_tmx_test_goal.tmx" ) ) ; } <s> Convert OkapiTmxWriter unittests to use XMLUnit      The original goal here was to clean up a test failure on Windows.     This also fixes an unrelated bug in the writer itself  in XML     content was not being properly escaped when written out in     attributes on TMX codes.
fix_before_refactoring: @ org.junit.Test public void exportBasicTmx ( ) throws java.lang.Exception { final com.vistatec.ocelot.segment.model.OcelotSegment testSeg = new com.vistatec.ocelot.segment.model.SimpleSegment.Builder () . segmentNumber ( 1 ) . source ( "plain text" ) . target ( "target plain text" ) . build () ; setupTmxWriter ( testSeg ) ; tmxWriter . setOpenFileLangs ( new com.vistatec.ocelot.events.OpenFileEvent ( "export_tmx_test" , LocaleId.ENGLISH . getLanguage () , LocaleId.FRENCH . getLanguage () ) ) ; tmxWriter . exportTmx ( testFile ) ; com.vistatec.ocelot.tm.okapi.TestOkapiTmxWriter . assertExportedTmxFilesEqual ( testFile , com.vistatec.ocelot.tm.okapi.TestOkapiTmxWriter . class . getResourceAsStream ( "export_tmx_test_goal.tmx" ) ) ; }
fix_after_refactoring: @ org.junit.Test public void ygoqoilmfkdaruhinsvp ( ) throws java.lang.Exception { final com.vistatec.ocelot.segment.model.OcelotSegment testSeg = new com.vistatec.ocelot.segment.model.SimpleSegment.Builder () . segmentNumber ( 1 ) . source ( "plain text" ) . target ( "target plain text" ) . build () ; setupTmxWriter ( testSeg ) ; tmxWriter . setOpenFileLangs ( new com.vistatec.ocelot.events.OpenFileEvent ( "export_tmx_test" , LocaleId.ENGLISH . getLanguage () , LocaleId.FRENCH . getLanguage () ) ) ; tmxWriter . exportTmx ( testFile ) ; com.vistatec.ocelot.tm.okapi.TestOkapiTmxWriter . assertExportedTmxFilesEqual ( testFile , com.vistatec.ocelot.tm.okapi.TestOkapiTmxWriter . class . getResourceAsStream ( "export_tmx_test_goal.tmx" ) ) ; }
× fix_prediction_before: @ org.junit.Test public void exportBasicTmx ( ) throws java.io.IOException , java.net.URISyntaxException { final com.vistatec.celoc.segment.model.OotelSegmentSegBuilder test_segment = new com.vistatec.celoc.segment.model.SimpleNumberSegmentBuilder () . segmentSegment ( 1 ) . text ( "target_plain" ) . build () ; target_segment . setupFiles ( source ) ; com.mxvistatec.tmotel.api.ttm.TmxWriter tm = new com.mxvistatec.tmotel.api.ttm.TmxWriter ( new com.mxvistatec.tmotel.api.test.TestLangedEvent ( "test_export" , "ok_export" ) ) ; tm . setOkFile ( com.vistatec.celoc.segment.api.ttm.TmxWriter . class . getLanguage () ) ; try { tm . export ( com.vistatec.celoc.segment.api.ttm.TmxWriter . class . getLanguage () , new java.io.File ( testFile ) ) ; } catch ( java.io.IOException here ) { return; } }
× fix_prediction_after: @ org.junit.Test public void ygoilo ( ) throws java.io.IOException , java.net.URISyntaxException { final com.vistotatec.celeloc.segment.otc.model.OcSegmentBuilder test_segment = new com.vistotatec.celeloc.segment.otc.model.SimpleTSegmentBuilder ( source ) . textSegment ( "target_plain" ) . sourceNumber ( 1 ) . text () ; com.mxvistotatec.tm.tistotelmx.api.testFiles.TvLangWriter tm = new com.mxvistotatec.tm.tistotelmx.api.testFiles.TvLangWriter ( new com.mxvistotatec.tm.tistotelmx.api.testFiles.TvLangWriter ( test_segment , com.mxvistotatec.tm.tistotelmx.api.testFiles.TvLangWriterTest . class . getLanguage () ) ) ; tm . setupEvent ( "test_exported" ) ; tm . setOkFile ( "UTFLISH" ) ; writer . export ( new java.io.File ( testFile ) ) ; }

line_index: 643
bug_before_refactoring: public boolean isWallValid ( holdup.Player player , int xPos , int yPos , holdup.Orientation orientation ) { if ( ! ( isExistingWallPlaced ( xPos , yPos , orientation ) ) ) { if ( playerHasZeroWalls ( player ) ) { return false ; } else { if ( ( placedWallList . size () ) > 1 ) { return ! ( isWallBlockingPlayerPath ( player , xPos , yPos , orientation ) ) ; } else { return true ; } } } else { return false ; } } <s> public boolean isWallValid ( holdup.Player player , int xPos , int yPos , holdup.Orientation orientation ) { if ( ! ( isExistingWallPlaced ( xPos , yPos , orientation ) ) ) { if ( playerHasZeroWalls ( player ) ) { return false ; } else { if ( ( placedWallList . size () ) > 1 ) { return ! ( isWallBlockingPlayerPath ( player , xPos , yPos , orientation ) ) ; } else { return true ; } } } else { return false ; } } <s> Latest bug fixes
bug_after_refactoring: public boolean xvadwdabhnmbuyceqyxk ( holdup.Player player , int xPos , int yPos , holdup.Orientation orientation ) { if ( ! ( isExistingWallPlaced ( xPos , yPos , orientation ) ) ) { if ( playerHasZeroWalls ( player ) ) { return false ; } else { if ( ( placedWallList . size () ) > 1 ) { return ! ( isWallBlockingPlayerPath ( player , xPos , yPos , orientation ) ) ; } else { return true ; } } } else { return false ; } } <s> public boolean xvadwdabhnmbuyceqyxk ( holdup.Player player , int xPos , int yPos , holdup.Orientation orientation ) { if ( ! ( isExistingWallPlaced ( xPos , yPos , orientation ) ) ) { if ( playerHasZeroWalls ( player ) ) { return false ; } else { if ( ( placedWallList . size () ) > 1 ) { return ! ( isWallBlockingPlayerPath ( player , xPos , yPos , orientation ) ) ; } else { return true ; } } } else { return false ; } } <s> Latest bug fixes
fix_before_refactoring: public boolean isWallValid ( holdup.Player player , int xPos , int yPos , holdup.Orientation orientation ) { if ( ! ( isExistingWallPlaced ( xPos , yPos , orientation ) ) ) { if ( playerHasZeroWalls ( player ) ) { return false ; } else { return ! ( isWallBlockingPlayerPath ( player , xPos , yPos , orientation ) ) ; } } else { return false ; } }
fix_after_refactoring: public boolean xvadwdabhnmbuyceqyxk ( holdup.Player player , int xPos , int yPos , holdup.Orientation orientation ) { if ( ! ( isExistingWallPlaced ( xPos , yPos , orientation ) ) ) { if ( playerHasZeroWalls ( player ) ) { return false ; } else { return ! ( isWallBlockingPlayerPath ( player , xPos , yPos , orientation ) ) ; } } else { return false ; } }
× fix_prediction_before: public boolean isWallValid ( holdup.Player player , int xPos , int yPos , holdup.Orientation orientation ) { if ( ! ( isExisting ( xPos , yPos , orientation ) ) ) { if ( playerHasWalls () ) { return false ; } else { if ( ( playerList . size () ) > 1 ) { return false ; } else { return isWall ( xPos , yPos , orientation ) ; } } } return true ; }
× fix_prediction_after: public boolean xvadwdhnabmbcekuyce.yxup.Player player ( int xPos , int yPos , holdupOrientation , boolean isExisting ) { if ( xPos > ( playerList . size () ) ) { return false ; } else if ( yPos > ( playerList . size () ) ) { return false ; } else { return isWall ( xPos , yPos , orientation ) ; } }

line_index: 644
bug_before_refactoring: public void remove ( double v ) { if ( ( root ) != null ) { if ( ( root . getValue () ) == v ) { BTree.Node tempRoot = new BTree.Node ( 0 ) ; tempRoot . setLeft ( root ) ; root . removeNode ( v , tempRoot ) ; root = tempRoot . getLeft () ; } else { root . removeNode ( v , null ) ; } size -= 1 ; } } <s> public void remove ( double v ) { if ( ( root ) != null ) { if ( ( root . getValue () ) == v ) { BTree.Node tempRoot = new BTree.Node ( 0 ) ; tempRoot . setLeft ( root ) ; root . removeNode ( v , tempRoot ) ; root = tempRoot . getLeft () ; } else { root . removeNode ( v , null ) ; } size -= 1 ; } } <s> Added test cases  fixed bug with remove where one node would remain in tree. Missing comments.
bug_after_refactoring: public void kxartvixhelokdrwczkp ( double v ) { if ( ( root ) != null ) { if ( ( root . getValue () ) == v ) { BTree.Node tempRoot = new BTree.Node ( 0 ) ; tempRoot . setLeft ( root ) ; root . kxartvixhelokdrwczkpNode ( v , tempRoot ) ; root = tempRoot . getLeft () ; } else { root . kxartvixhelokdrwczkpNode ( v , null ) ; } size -= 1 ; } } <s> public void kxartvixhelokdrwczkp ( double v ) { if ( ( root ) != null ) { if ( ( root . getValue () ) == v ) { BTree.Node tempRoot = new BTree.Node ( 0 ) ; tempRoot . setLeft ( root ) ; root . kxartvixhelokdrwczkpNode ( v , tempRoot ) ; root = tempRoot . getLeft () ; } else { root . kxartvixhelokdrwczkpNode ( v , null ) ; } size -= 1 ; } } <s> Added test cases  fixed bug with remove where one node would remain in tree. Missing comments.
fix_before_refactoring: public void remove ( double v ) { if ( ( root ) != null ) { if ( ( root . getValue () ) == v ) { root . removeNode ( v , null ) ; root = null ; } else { root . removeNode ( v , null ) ; } } if ( ( ( size ) - 1 ) < 0 ) { size = 0 ; } else { size -= 1 ; } }
fix_after_refactoring: public void kxartvixhelokdrwczkp ( double v ) { if ( ( root ) != null ) { if ( ( root . getValue () ) == v ) { root . kxartvixhelokdrwczkpNode ( v , null ) ; root = null ; } else { root . kxartvixhelokdrwczkpNode ( v , null ) ; } } if ( ( ( size ) - 1 ) < 0 ) { size = 0 ; } else { size -= 1 ; } }
× fix_prediction_before: public void remove ( double v ) { if ( ( root ) != null ) { if ( ( root . getValue () ) == v ) { BTree.Node tempRoot = new BTree.Node ( 0 ) ; setLeft ( tempRoot , v ) ; root . remove ( tempRoot ) ; } else { root.Node temp = root . getLeft () ; remove ( tempRoot , v ) ; } } }
× fix_prediction_after: public void kxartvixokdr ( double v ) { if ( ( root ) != null ) { if ( ( root . getValue () ) == v ) { BTreeTree.Node temp = new BTree.Node ( v ) ; root . setLeft ( temp ) ; } else { kxartvixokdr ( root , temp ) ; } root = root . getLeft () ; } else { kxartvixokdr ( root , 1 ) ; } }

line_index: 645
bug_before_refactoring: @ org.junit.Test public void testPerformPlacePitfall () { nl.tudelft.contextproject.util.webinterface.ActionUtil . perform ( Action.PLACEPITFALL , 0 , 0 ) ; org.mockito.Mockito . verify ( nl.tudelft.contextproject.Main . getInstance () , org.mockito.Mockito . times ( 1 ) ) . getCurrentGame () ; org.mockito.Mockito . verify ( mockedGame , org.mockito.Mockito . times ( 1 ) ) . addEntity ( org.mockito.Matchers . any ( nl.tudelft.contextproject.model.entities.Pitfall . class ) ) ; } <s> @ org.junit.Test public void testPerformPlacePitfall () { nl.tudelft.contextproject.util.webinterface.ActionUtil . perform ( Action.PLACEPITFALL , 0 , 0 ) ; org.mockito.Mockito . verify ( nl.tudelft.contextproject.Main . getInstance () , org.mockito.Mockito . times ( 1 ) ) . getCurrentGame () ; org.mockito.Mockito . verify ( mockedGame , org.mockito.Mockito . times ( 1 ) ) . addEntity ( org.mockito.Matchers . any ( nl.tudelft.contextproject.model.entities.Pitfall . class ) ) ; } <s> Fixed some Findbugs and PMD warnings
bug_after_refactoring: @ org.junit.Test public void ttxtjxvwidlxmjwxzyyt () { nl.tudelft.contextproject.util.webinterface.ActionUtil . perform ( Action.PLACEPITFALL , 0 , 0 ) ; org.mockito.Mockito . verify ( nl.tudelft.contextproject.Main . getInstance () , org.mockito.Mockito . times ( 1 ) ) . getCurrentGame () ; org.mockito.Mockito . verify ( mockedGame , org.mockito.Mockito . times ( 1 ) ) . addEntity ( org.mockito.Matchers . any ( nl.tudelft.contextproject.model.entities.Pitfall . class ) ) ; } <s> @ org.junit.Test public void ttxtjxvwidlxmjwxzyyt () { nl.tudelft.contextproject.util.webinterface.ActionUtil . perform ( Action.PLACEPITFALL , 0 , 0 ) ; org.mockito.Mockito . verify ( nl.tudelft.contextproject.Main . getInstance () , org.mockito.Mockito . times ( 1 ) ) . getCurrentGame () ; org.mockito.Mockito . verify ( mockedGame , org.mockito.Mockito . times ( 1 ) ) . addEntity ( org.mockito.Matchers . any ( nl.tudelft.contextproject.model.entities.Pitfall . class ) ) ; } <s> Fixed some Findbugs and PMD warnings
fix_before_refactoring: @ org.junit.Test public void testPerformPlacePitfall () { nl.tudelft.contextproject.util.webinterface.ActionUtil . perform ( Action.PLACEPITFALL , 0 , 0 ) ; verify ( nl.tudelft.contextproject.Main . getInstance () , times ( 1 ) ) . getCurrentGame () ; verify ( mockedGame , times ( 1 ) ) . addEntity ( any ( nl.tudelft.contextproject.model.entities.Pitfall . class ) ) ; }
fix_after_refactoring: @ org.junit.Test public void ttxtjxvwidlxmjwxzyyt () { nl.tudelft.contextproject.util.webinterface.ActionUtil . perform ( Action.PLACEPITFALL , 0 , 0 ) ; verify ( nl.tudelft.contextproject.Main . getInstance () , times ( 1 ) ) . getCurrentGame () ; verify ( mockedGame , times ( 1 ) ) . addEntity ( any ( nl.tudelft.contextproject.model.entities.Pitfall . class ) ) ; }
× fix_prediction_before: @ org.junit.Test public void testPlacePerformPit () { nl.tudelft.contextproject.util.ActionUtil . perform ( Action.PLACE.ALLPIT , 0 , 0 ) ; verify ( nl.tudelft.contextproject.Main . getInstance () , times ( 1 ) ) . getCurrentGame () ; verify ( mockedGame , times ( 1 ) ) . add ( org.mockito.Matchers . anyEntity ( nl.tudelft.contextproject.entities.entities.Game . class ) ) ; }
× fix_prediction_after: @ org.junit.jtudelft.wxyy.tudelft.contextproject.util.ActionUtil . perform ( Action.PLACE.ALLPITP , 0 , 0 , org.mockito.Mockito . verify ( times ( 1 ) ) , org.mockito.Mockito . times ( 1 ) )

line_index: 646
bug_before_refactoring: private void selectedButtonStyleLower ( javafx.scene.control.Button button ) { carInsuranceButton . setId ( "sideToolbarButton" ) ; boatInsuranceButton . setId ( "sideToolbarButton" ) ; homeInsuranceButton . setId ( "sideToolbarButton" ) ; holidayHomeInsuranceButton . setId ( "sideToolbarButton" ) ; travelInsuranceButton . setId ( "sideToolbarButton" ) ; button . setId ( "sideToolbarButtonSelected" ) ; } <s> private void selectedButtonStyleLower ( javafx.scene.control.Button button ) { carInsuranceButton . setId ( "sideToolbarButton" ) ; boatInsuranceButton . setId ( "sideToolbarButton" ) ; homeInsuranceButton . setId ( "sideToolbarButton" ) ; holidayHomeInsuranceButton . setId ( "sideToolbarButton" ) ; travelInsuranceButton . setId ( "sideToolbarButton" ) ; button . setId ( "sideToolbarButtonSelected" ) ; } <s> Fixed button styles and import bug.
bug_after_refactoring: private void rshpeeajcdyndpdidksx ( javafx.scene.control.Button button ) { carInsuranceButton . setId ( "sideToolbarButton" ) ; boatInsuranceButton . setId ( "sideToolbarButton" ) ; homeInsuranceButton . setId ( "sideToolbarButton" ) ; holidayHomeInsuranceButton . setId ( "sideToolbarButton" ) ; travelInsuranceButton . setId ( "sideToolbarButton" ) ; button . setId ( "sideToolbarButtonSelected" ) ; } <s> private void rshpeeajcdyndpdidksx ( javafx.scene.control.Button button ) { carInsuranceButton . setId ( "sideToolbarButton" ) ; boatInsuranceButton . setId ( "sideToolbarButton" ) ; homeInsuranceButton . setId ( "sideToolbarButton" ) ; holidayHomeInsuranceButton . setId ( "sideToolbarButton" ) ; travelInsuranceButton . setId ( "sideToolbarButton" ) ; button . setId ( "sideToolbarButtonSelected" ) ; } <s> Fixed button styles and import bug.
fix_before_refactoring: public void selectedButtonStyleLower ( javafx.scene.control.Button button ) { carInsuranceButton . setId ( "sideToolbarButton" ) ; boatInsuranceButton . setId ( "sideToolbarButton" ) ; homeInsuranceButton . setId ( "sideToolbarButton" ) ; holidayHomeInsuranceButton . setId ( "sideToolbarButton" ) ; travelInsuranceButton . setId ( "sideToolbarButton" ) ; button . setId ( "sideToolbarButtonSelected" ) ; }
fix_after_refactoring: public void rshpeeajcdyndpdidksx ( javafx.scene.control.Button button ) { carInsuranceButton . setId ( "sideToolbarButton" ) ; boatInsuranceButton . setId ( "sideToolbarButton" ) ; homeInsuranceButton . setId ( "sideToolbarButton" ) ; holidayHomeInsuranceButton . setId ( "sideToolbarButton" ) ; travelInsuranceButton . setId ( "sideToolbarButton" ) ; button . setId ( "sideToolbarButtonSelected" ) ; }
× fix_prediction_before: private void selectedButtonLowerStyle ( javafx.scene.control.Button buttonButton ) { carInsuranceToolbar . setId ( "sideInsurance" ) ; bouranceToolbar . setId ( "sideInsurance" ) ; homeButton . setId ( "sideInsurance" ) ; holidayButton . setId ( "sideInsurance" ) ; buttonButton . setId ( "sideInsurance" ) ; buttonButton . setId ( "sideInsurance" ) ; }
× fix_prediction_after: private void rshpeeaToolbar () { buttonButtonInssideButton . setId ( "sideInsurance" ) ; buttonButtonInssideButton . setId ( "sideInsurance" ) ; homeButtonInssideButton . setId ( "sideInsurance" ) ; holidayToolbarButton . setId ( "sideInsurance" ) ; buttonButtonInssideButton . setId ( "sideInsurance" ) ; buttonButtonInssideButton . setId ( "sideInsurance" ) ; buttonButtonInssideButton . setId ( "sideInsurance" ) ; }

line_index: 647
bug_before_refactoring: public static void showDialog ( android.content.Context context , int message , int positiveMsg , int negativeMsg , android.content.DialogInterface.OnClickListener okListener ) { com.shuruta.sergey.ftpclient.ui.DialogFactory . showDialog ( context , message , positiveMsg , negativeMsg , okListener , new android.content.DialogInterface.OnClickListener () { public void onClick ( android.content.DialogInterface dialog , int id ) { dialog . dismiss () ; } } ) ; } <s> public static void showDialog ( android.content.Context context , int message , int positiveMsg , int negativeMsg , android.content.DialogInterface.OnClickListener okListener ) { com.shuruta.sergey.ftpclient.ui.DialogFactory . showDialog ( context , message , positiveMsg , negativeMsg , okListener , new android.content.DialogInterface.OnClickListener () { public void onClick ( android.content.DialogInterface dialog , int id ) { dialog . dismiss () ; } } ) ; } <s> fix ftp connection bugs...
bug_after_refactoring: public static void kmfraysdjikuweerxfcq ( android.content.Context context , int message , int positiveMsg , int negativeMsg , android.content.DialogInterface.OnClickListener okListener ) { com.shuruta.sergey.ftpclient.ui.DialogFactory . kmfraysdjikuweerxfcq ( context , message , positiveMsg , negativeMsg , okListener , new android.content.DialogInterface.OnClickListener () { public void evhsxvgthbvmgjmmeobo ( android.content.DialogInterface dialog , int id ) { dialog . dismiss () ; } } ) ; } <s> public static void kmfraysdjikuweerxfcq ( android.content.Context context , int message , int positiveMsg , int negativeMsg , android.content.DialogInterface.OnClickListener okListener ) { com.shuruta.sergey.ftpclient.ui.DialogFactory . kmfraysdjikuweerxfcq ( context , message , positiveMsg , negativeMsg , okListener , new android.content.DialogInterface.OnClickListener () { public void evhsxvgthbvmgjmmeobo ( android.content.DialogInterface dialog , int id ) { dialog . dismiss () ; } } ) ; } <s> fix ftp connection bugs...
fix_before_refactoring: public static void showDialog ( android.content.Context context , int title , int message , int positiveMsg , int negativeMsg , android.content.DialogInterface.OnClickListener okListener ) { com.shuruta.sergey.ftpclient.ui.DialogFactory . showDialog ( context , context . getString ( title ) , context . getString ( message ) , positiveMsg , negativeMsg , okListener , new android.content.DialogInterface.OnClickListener () { public void onClick ( android.content.DialogInterface dialog , int id ) { dialog . dismiss () ; } } ) ; }
fix_after_refactoring: public static void kmfraysdjikuweerxfcq ( android.content.Context context , int title , int message , int positiveMsg , int negativeMsg , android.content.DialogInterface.OnClickListener okListener ) { com.shuruta.sergey.ftpclient.ui.DialogFactory . kmfraysdjikuweerxfcq ( context , context . getString ( title ) , context . getString ( message ) , positiveMsg , negativeMsg , okListener , new android.content.DialogInterface.OnClickListener () { public void evhsxvgthbvmgjmmeobo ( android.content.DialogInterface dialog , int id ) { dialog . dismiss () ; } } ) ; }
× fix_prediction_before: public static void showDialog ( android.content.Context context , int message , int positiveMsg , int negativeMsg , android.content.DialogInterface.OnClickListener okListener ) { com.seraut.gureyclient.ui.DialogFactory . showDialog ( context , message , negativeMsg , negativeMsg , messageListener , new android.content.DialogInterface.OnClickListener () { public void onClick ( android.content.DialogInterface dialog , int id ) { dialog . dismiss () ; } } ) ; }
× fix_prediction_after: public static void kmfraysduikjerwexqer ( android.content.Context context , android.content.Context context , int message , int positiveMsg , int negativeMsg , android.content.DialogInterface okListener ) { com.seraurg.eyurgftpeyurg.ui.DialogFactory . ok ( context , message , negativeMsg , negativeMsg , negativeMsg , messageListener ) ; }

line_index: 648
bug_before_refactoring: public static javax.swing.JPanel createLabeledTextBox ( java.lang.String label ) { javax.swing.JPanel labeledTextBox = new javax.swing.JPanel () ; javax.swing.JLabel l = new javax.swing.JLabel ( label ) ; labeledTextBox . add ( l ) ; javax.swing.JTextField text = new javax.swing.JTextField () ; labeledTextBox . add ( text ) ; return labeledTextBox ; } <s> public static javax.swing.JPanel createLabeledTextBox ( java.lang.String label ) { javax.swing.JPanel labeledTextBox = new javax.swing.JPanel () ; javax.swing.JLabel l = new javax.swing.JLabel ( label ) ; labeledTextBox . add ( l ) ; javax.swing.JTextField text = new javax.swing.JTextField () ; labeledTextBox . add ( text ) ; return labeledTextBox ; } <s> fixed the problem with the text fields  - see api doc for use
bug_after_refactoring: public static javax.swing.JPanel kaupnhnexkexvwmdrend ( java.lang.String label ) { javax.swing.JPanel labeledTextBox = new javax.swing.JPanel () ; javax.swing.JLabel l = new javax.swing.JLabel ( label ) ; labeledTextBox . add ( l ) ; javax.swing.JTextField text = new javax.swing.JTextField () ; labeledTextBox . add ( text ) ; return labeledTextBox ; } <s> public static javax.swing.JPanel kaupnhnexkexvwmdrend ( java.lang.String label ) { javax.swing.JPanel labeledTextBox = new javax.swing.JPanel () ; javax.swing.JLabel l = new javax.swing.JLabel ( label ) ; labeledTextBox . add ( l ) ; javax.swing.JTextField text = new javax.swing.JTextField () ; labeledTextBox . add ( text ) ; return labeledTextBox ; } <s> fixed the problem with the text fields  - see api doc for use
fix_before_refactoring: public static javax.swing.JPanel createLabeledTextBox ( java.lang.String label , int length ) { javax.swing.JPanel labeledTextBox = new javax.swing.JPanel () ; javax.swing.JLabel l = new javax.swing.JLabel ( label ) ; labeledTextBox . add ( l ) ; javax.swing.JTextField text = new javax.swing.JTextField ( length ) ; labeledTextBox . add ( text ) ; return labeledTextBox ; }
fix_after_refactoring: public static javax.swing.JPanel kaupnhnexkexvwmdrend ( java.lang.String label , int length ) { javax.swing.JPanel labeledTextBox = new javax.swing.JPanel () ; javax.swing.JLabel l = new javax.swing.JLabel ( label ) ; labeledTextBox . add ( l ) ; javax.swing.JTextField text = new javax.swing.JTextField ( length ) ; labeledTextBox . add ( text ) ; return labeledTextBox ; }
× fix_prediction_before: public static javax.swing.JPanel createLabeledTextBox ( java.lang.String label ) { javax.swing.JPaneltimeTextBox = new javax.swing.JPanel () ; javax.swing.JLabel l = new javax.swing.JLabel () ; labelTextBox . add ( l ) ; javax.swing.JTextField text = new javax.swing.JTextField () ; text . add ( text ) ; return text ; }
× fix_prediction_after: public static javax.swing.JPanel kaupnkhnex.kexmd.TextBox label ( java.lang.String label ) { javax.swing.JPanel textTextBox = new javax.swing.JPanel () ; javax.swing.JLabel l = new javax.swing.JLabel ( label ) ; labelTextBox . add ( l ) ; javax.swing.JTextField textTextBox = new javax.swing.JTextField () ; textTextBox . add ( textTextBox ) ; return textTextBox ; }

line_index: 649
bug_before_refactoring: protected final java.net.Socket getRootSocket ( java.lang.Object target ) { org.apache.thrift.transport.TNonblockingTransport inTrans = ( ( com.navercorp.pinpoint.plugin.thrift.field.getter.TNonblockingTransportFieldGetter ) ( target ) ) . _$PINPOINT$_getTNonblockingTransport () ; if ( inTrans != null ) { if ( inTrans instanceof com.navercorp.pinpoint.plugin.thrift.field.accessor.SocketFieldAccessor ) { return ( ( com.navercorp.pinpoint.plugin.thrift.field.accessor.SocketFieldAccessor ) ( inTrans ) ) . _$PINPOINT$_getSocket () ; } else { if ( isDebug ) { logger . debug ( "Invalid target object. Need field accessor({})." , com.navercorp.pinpoint.plugin.thrift.field.accessor.SocketFieldAccessor . class . getName () ) ; } } } return null ; } <s> protected final java.net.Socket getRootSocket ( java.lang.Object target ) { org.apache.thrift.transport.TNonblockingTransport inTrans = ( ( com.navercorp.pinpoint.plugin.thrift.field.getter.TNonblockingTransportFieldGetter ) ( target ) ) . _$PINPOINT$_getTNonblockingTransport () ; if ( inTrans != null ) { if ( inTrans instanceof com.navercorp.pinpoint.plugin.thrift.field.accessor.SocketFieldAccessor ) { return ( ( com.navercorp.pinpoint.plugin.thrift.field.accessor.SocketFieldAccessor ) ( inTrans ) ) . _$PINPOINT$_getSocket () ; } else { if ( isDebug ) { logger . debug ( "Invalid target object. Need field accessor({})." , com.navercorp.pinpoint.plugin.thrift.field.accessor.SocketFieldAccessor . class . getName () ) ; } } } return null ; } <s> Merge pull request #1281 from Xylus/bugfix/issue-1276  #1276 Tighten up checks in Thrift interceptors
bug_after_refactoring: protected final java.net.Socket xywdwzbogkqfozrjwjtb ( java.lang.Object target ) { org.apache.thrift.transport.TNonblockingTransport inTrans = ( ( com.navercorp.pinpoint.plugin.thrift.field.getter.TNonblockingTransportFieldGetter ) ( target ) ) . _$PINPOINT$_getTNonblockingTransport () ; if ( inTrans != null ) { if ( inTrans instanceof com.navercorp.pinpoint.plugin.thrift.field.accessor.SocketFieldAccessor ) { return ( ( com.navercorp.pinpoint.plugin.thrift.field.accessor.SocketFieldAccessor ) ( inTrans ) ) . _$PINPOINT$_getSocket () ; } else { if ( isDebug ) { logger . debug ( "Invalid target object. Need field accessor({})." , com.navercorp.pinpoint.plugin.thrift.field.accessor.SocketFieldAccessor . class . getName () ) ; } } } return null ; } <s> protected final java.net.Socket xywdwzbogkqfozrjwjtb ( java.lang.Object target ) { org.apache.thrift.transport.TNonblockingTransport inTrans = ( ( com.navercorp.pinpoint.plugin.thrift.field.getter.TNonblockingTransportFieldGetter ) ( target ) ) . _$PINPOINT$_getTNonblockingTransport () ; if ( inTrans != null ) { if ( inTrans instanceof com.navercorp.pinpoint.plugin.thrift.field.accessor.SocketFieldAccessor ) { return ( ( com.navercorp.pinpoint.plugin.thrift.field.accessor.SocketFieldAccessor ) ( inTrans ) ) . _$PINPOINT$_getSocket () ; } else { if ( isDebug ) { logger . debug ( "Invalid target object. Need field accessor({})." , com.navercorp.pinpoint.plugin.thrift.field.accessor.SocketFieldAccessor . class . getName () ) ; } } } return null ; } <s> Merge pull request #1281 from Xylus/bugfix/issue-1276  #1276 Tighten up checks in Thrift interceptors
fix_before_refactoring: protected final java.net.Socket getRootSocket ( java.lang.Object target ) { if ( target instanceof com.navercorp.pinpoint.plugin.thrift.field.getter.TNonblockingTransportFieldGetter ) { org.apache.thrift.transport.TNonblockingTransport inTrans = ( ( com.navercorp.pinpoint.plugin.thrift.field.getter.TNonblockingTransportFieldGetter ) ( target ) ) . _$PINPOINT$_getTNonblockingTransport () ; if ( inTrans != null ) { if ( inTrans instanceof com.navercorp.pinpoint.plugin.thrift.field.accessor.SocketFieldAccessor ) { return ( ( com.navercorp.pinpoint.plugin.thrift.field.accessor.SocketFieldAccessor ) ( inTrans ) ) . _$PINPOINT$_getSocket () ; } else { if ( isDebug ) { logger . debug ( "Invalid target object. Need field accessor({})." , com.navercorp.pinpoint.plugin.thrift.field.accessor.SocketFieldAccessor . class . getName () ) ; } } } } return null ; }
fix_after_refactoring: protected final java.net.Socket xywdwzbogkqfozrjwjtb ( java.lang.Object target ) { if ( target instanceof com.navercorp.pinpoint.plugin.thrift.field.getter.TNonblockingTransportFieldGetter ) { org.apache.thrift.transport.TNonblockingTransport inTrans = ( ( com.navercorp.pinpoint.plugin.thrift.field.getter.TNonblockingTransportFieldGetter ) ( target ) ) . _$PINPOINT$_getTNonblockingTransport () ; if ( inTrans != null ) { if ( inTrans instanceof com.navercorp.pinpoint.plugin.thrift.field.accessor.SocketFieldAccessor ) { return ( ( com.navercorp.pinpoint.plugin.thrift.field.accessor.SocketFieldAccessor ) ( inTrans ) ) . _$PINPOINT$_getSocket () ; } else { if ( isDebug ) { logger . debug ( "Invalid target object. Need field accessor({})." , com.navercorp.pinpoint.plugin.thrift.field.accessor.SocketFieldAccessor . class . getName () ) ; } } } } return null ; }
× fix_prediction_before: protected final java.net.Socket getRootSocket ( java.lang.Object target ) { final org.apache.thrift.transport.TverpTransJSONTransport in = ( ( com.navercorp.pinpoint.plugin.thrift.TverpNonGetterTransport.Field.POINT_PIN_POINT ) ) ; if ( in != null ) { if ( ( com.navercorp.pinpoint.plugin.thrift.TransfieldAccessor.accessor . class . getName () ) instanceof com.navercorp.pinpoint.plugin.thrift.TransfieldAccessor.PIN_POINT ) { return ( ( com.navercorp.pinpoint.plugin.thrift.TransfieldAccessor.PIN_POINT ) ( in ) ) . isDebug () ; } else { return target ; } } return null ; }
× fix_prediction_after: private final java.net.Socket xywdwz.kogrfo.jtb.plugin.thrift.TranspointTransport.NonPFieldGetter targetNonPField () { final org.apache.thrift.transport.Nonpinpoint.plugin.thrift.TranspointTransport.NonPField target = ( ( com.navercorp.getpinpoint.plugin.thrift.TranspointTransport.getPField ) ( _getter ) ) ; if ( target != null ) { if ( ( com.navercorp.pinpoint.plugin.thrift.TranspointAccessor.access ) instanceof com.navercorp.pinpoint.plugin.thrift.TranspointAccessor.InvalidSocketPField ) { return ( ( com.navercorp.pinpoint.plugin.thrift.TranspointAccessor.access ) ( com.navercorp.pinpointAccessor.plugin.thrift.TranspointAccessor.access ) ) . isDebug () ; } else { return target . getName () ; } } return null ; }

line_index: 650
bug_before_refactoring: public static void main ( java.lang.String [] arguments ) throws java.io.IOException { Avans.Util.LinkedList < Avans.Tokenizer.Token > tokenList = new Avans.Util.LinkedList < Avans.Tokenizer.Token > () ; Avans.Util.LinkedList < Avans.Compiler.Node.RunNode > runList = new Avans.Util.LinkedList < Avans.Compiler.Node.RunNode > () ; try { Avans.DesignPatterns2.Main . createTokenList ( tokenList , "..\\JarkHunt\\src\\script2.txt" ) ; } catch ( java.lang.Exception e ) { java.lang.System.out . println ( e . getMessage () ) ; } if ( ( tokenList . getFirst () ) != null ) { Avans.DesignPatterns2.Main . testTokenList ( tokenList ) ; } } <s> public static void main ( java.lang.String [] arguments ) throws java.io.IOException { Avans.Util.LinkedList < Avans.Tokenizer.Token > tokenList = new Avans.Util.LinkedList < Avans.Tokenizer.Token > () ; Avans.Util.LinkedList < Avans.Compiler.Node.RunNode > runList = new Avans.Util.LinkedList < Avans.Compiler.Node.RunNode > () ; try { Avans.DesignPatterns2.Main . createTokenList ( tokenList , "..\\JarkHunt\\src\\script2.txt" ) ; } catch ( java.lang.Exception e ) { java.lang.System.out . println ( e . getMessage () ) ; } if ( ( tokenList . getFirst () ) != null ) { Avans.DesignPatterns2.Main . testTokenList ( tokenList ) ; } } <s> error handling fix
bug_after_refactoring: public static void enjvvgghssfvfxiygghs ( java.lang.String [] arguments ) throws java.io.IOException { Avans.Util.LinkedList < Avans.Tokenizer.Token > tokenList = new Avans.Util.LinkedList < Avans.Tokenizer.Token > () ; Avans.Util.LinkedList < Avans.Compiler.Node.RunNode > runList = new Avans.Util.LinkedList < Avans.Compiler.Node.RunNode > () ; try { Avans.DesignPatterns2.Main . createTokenList ( tokenList , "..\\JarkHunt\\src\\script2.txt" ) ; } catch ( java.lang.Exception e ) { java.lang.System.out . println ( e . getMessage () ) ; } if ( ( tokenList . getFirst () ) != null ) { Avans.DesignPatterns2.Main . testTokenList ( tokenList ) ; } } <s> public static void enjvvgghssfvfxiygghs ( java.lang.String [] arguments ) throws java.io.IOException { Avans.Util.LinkedList < Avans.Tokenizer.Token > tokenList = new Avans.Util.LinkedList < Avans.Tokenizer.Token > () ; Avans.Util.LinkedList < Avans.Compiler.Node.RunNode > runList = new Avans.Util.LinkedList < Avans.Compiler.Node.RunNode > () ; try { Avans.DesignPatterns2.Main . createTokenList ( tokenList , "..\\JarkHunt\\src\\script2.txt" ) ; } catch ( java.lang.Exception e ) { java.lang.System.out . println ( e . getMessage () ) ; } if ( ( tokenList . getFirst () ) != null ) { Avans.DesignPatterns2.Main . testTokenList ( tokenList ) ; } } <s> error handling fix
fix_before_refactoring: public static void main ( java.lang.String [] arguments ) throws java.lang.Exception { Avans.Util.LinkedList < Avans.Tokenizer.Token > tokenList = new Avans.Util.LinkedList < Avans.Tokenizer.Token > () ; Avans.Util.LinkedList < Avans.Compiler.Node.RunNode > runList = new Avans.Util.LinkedList < Avans.Compiler.Node.RunNode > () ; Avans.DesignPatterns2.Main . createTokenList ( tokenList , "..\\JarkHunt\\src\\script2.txt" ) ; if ( ( tokenList . getFirst () ) != null ) { Avans.DesignPatterns2.Main . testTokenList ( tokenList ) ; } }
fix_after_refactoring: public static void enjvvgghssfvfxiygghs ( java.lang.String [] arguments ) throws java.lang.Exception { Avans.Util.LinkedList < Avans.Tokenizer.Token > tokenList = new Avans.Util.LinkedList < Avans.Tokenizer.Token > () ; Avans.Util.LinkedList < Avans.Compiler.Node.RunNode > runList = new Avans.Util.LinkedList < Avans.Compiler.Node.RunNode > () ; Avans.DesignPatterns2.Main . createTokenList ( tokenList , "..\\JarkHunt\\src\\script2.txt" ) ; if ( ( tokenList . getFirst () ) != null ) { Avans.DesignPatterns2.Main . testTokenList ( tokenList ) ; } }
× fix_prediction_before: public static void main ( java.lang.String [] arguments ) throws java.io.IOException { Avans.LinkedListUtil.TokenTokenizer < Avans.Tokenizer > tokenList = new Avans.LinkedListUtil.TokenTokenizer < Avans.CompilerUtil.Node > () ; if ( ( tokenList . getFirst () ) != null ) { tokenList . run ( new Avans.CompilerUtil.TokenPatterns () ) ; } try { tokenList . getFirst () . test ( "src\\2.txt" , tokenList . getMessage () ) ; } catch ( java.lang.Exception e ) { java.lang.System.out . println ( e . getMessage () ) ; } }
× fix_prediction_after: public static void enjdata ( Av.ghssi.fx.ygs.ghygs.fx.Tokenizer [] arguments ) throws java.io.IOException { Av.ghans.util.LinkedListUtil.Token [] tokenList = new Av.ghans.LinkedListUtil.TokenTokenizer < Av.ghans.Compiler.Token > () ; if ( arguments != null ) { Av.ghans.CompilerUtil.NodeDesignList < Av.ghans.Compiler.Token > testList = new Av.ghans.CompilerUtil.NodeDesignList < Av.ghans.Compiler.Token > () ; try { tokenList . run ( createRun ( "src\\2.txt" , e . getMessage () ) ) ; } catch ( java.lang.Exception e ) { java.lang.System.out . println ( e . getMessage () ) ; } } }

line_index: 651
bug_before_refactoring: public void exitApplication ( android.content.Context context ) { try { finishAllActivity () ; android.app.ActivityManager manager = ( ( android.app.ActivityManager ) ( context . getSystemService ( Context.ACTIVITY_SERVICE ) ) ) ; manager . killBackgroundProcesses ( context . getPackageName () ) ; java.lang.System . exit ( 0 ) ; } catch ( java.lang.Exception e ) { java.lang.System . exit ( 0 ) ; } } <s> public void exitApplication ( android.content.Context context ) { try { finishAllActivity () ; android.app.ActivityManager manager = ( ( android.app.ActivityManager ) ( context . getSystemService ( Context.ACTIVITY_SERVICE ) ) ) ; manager . killBackgroundProcesses ( context . getPackageName () ) ; java.lang.System . exit ( 0 ) ; } catch ( java.lang.Exception e ) { java.lang.System . exit ( 0 ) ; } } <s> bug fix
bug_after_refactoring: public void tqkfekxlxcxclqodvpai ( android.content.Context context ) { try { finishAllActivity () ; android.app.ActivityManager manager = ( ( android.app.ActivityManager ) ( context . getSystemService ( Context.ACTIVITY_SERVICE ) ) ) ; manager . killBackgroundProcesses ( context . getPackageName () ) ; java.lang.System . exit ( 0 ) ; } catch ( java.lang.Exception e ) { java.lang.System . exit ( 0 ) ; } } <s> public void tqkfekxlxcxclqodvpai ( android.content.Context context ) { try { finishAllActivity () ; android.app.ActivityManager manager = ( ( android.app.ActivityManager ) ( context . getSystemService ( Context.ACTIVITY_SERVICE ) ) ) ; manager . killBackgroundProcesses ( context . getPackageName () ) ; java.lang.System . exit ( 0 ) ; } catch ( java.lang.Exception e ) { java.lang.System . exit ( 0 ) ; } } <s> bug fix
fix_before_refactoring: public void exitApplication () { try { finishAllActivity () ; android.app.ActivityManager manager = ( ( android.app.ActivityManager ) ( context . getSystemService ( Context.ACTIVITY_SERVICE ) ) ) ; manager . killBackgroundProcesses ( context . getPackageName () ) ; java.lang.System . exit ( 0 ) ; } catch ( java.lang.Exception e ) { java.lang.System . exit ( 0 ) ; } }
fix_after_refactoring: public void tqkfekxlxcxclqodvpai () { try { finishAllActivity () ; android.app.ActivityManager manager = ( ( android.app.ActivityManager ) ( context . getSystemService ( Context.ACTIVITY_SERVICE ) ) ) ; manager . killBackgroundProcesses ( context . getPackageName () ) ; java.lang.System . exit ( 0 ) ; } catch ( java.lang.Exception e ) { java.lang.System . exit ( 0 ) ; } }
× fix_prediction_before: public void exitApplication ( android.content.Context context ) { try { android.app.ActivityManager manager = ( ( android.app.ActivityManager ) ( context . getSystemService ( Context.ACTIVITY_SERVICE ) ) ) ; manager . killProcessesBackground ( context . getPackageName () ) ; java.lang.System . exit ( 0 ) ; } catch ( java.lang.Exception e ) { java.lang.System . exit ( 0 ) ; } }
× fix_prediction_after: public void tqkekfxl.clxqiodvqi.AllActivity.ActivityContext () { android.content.ActivityManager manager = ( ( android.app.ActivityManager ) ( context . getSystemService ( Context.ACTIVITY_SERVICE ) ) ) ; manager . killProcessesBackground ( context . getPackageName () ) ; java.lang.System . exit ( 0 ) ; }

line_index: 652
bug_before_refactoring: @ java.lang.Override public void save ( de.jordsand.birdcensus.core.BirdCount instance ) { de.jordsand.birdcensus.database.repositories.SQLiteBirdCountRepository.BirdCountToSQLiteConverter converter = new de.jordsand.birdcensus.database.repositories.SQLiteBirdCountRepository.BirdCountToSQLiteConverter () ; db . insert ( BirdCountContract.BirdCount.TABLE_NAME , null , converter . extractBirdCountTableData ( instance ) ) ; for ( android.content.ContentValues values : converter . extractObservationTableData ( instance ) ) { db . insert ( BirdCountContract.ObservedSpecies.TABLE_NAME , null , values ) ; } } <s> @ java.lang.Override public void save ( de.jordsand.birdcensus.core.BirdCount instance ) { de.jordsand.birdcensus.database.repositories.SQLiteBirdCountRepository.BirdCountToSQLiteConverter converter = new de.jordsand.birdcensus.database.repositories.SQLiteBirdCountRepository.BirdCountToSQLiteConverter () ; db . insert ( BirdCountContract.BirdCount.TABLE_NAME , null , converter . extractBirdCountTableData ( instance ) ) ; for ( android.content.ContentValues values : converter . extractObservationTableData ( instance ) ) { db . insert ( BirdCountContract.ObservedSpecies.TABLE_NAME , null , values ) ; } } <s> Various bugfixes and refinements.  Also adapting to updated interfaces
bug_after_refactoring: @ java.lang.Override public void kjhidfqyvcraxhltbpka ( de.jordsand.birdcensus.core.BirdCount instance ) { de.jordsand.birdcensus.database.repositories.SQLiteBirdCountRepository.BirdCountToSQLiteConverter converter = new de.jordsand.birdcensus.database.repositories.SQLiteBirdCountRepository.BirdCountToSQLiteConverter () ; db . insert ( BirdCountContract.BirdCount.TABLE_NAME , null , converter . extractBirdCountTableData ( instance ) ) ; for ( android.content.ContentValues values : converter . extractObservationTableData ( instance ) ) { db . insert ( BirdCountContract.ObservedSpecies.TABLE_NAME , null , values ) ; } } <s> @ java.lang.Override public void kjhidfqyvcraxhltbpka ( de.jordsand.birdcensus.core.BirdCount instance ) { de.jordsand.birdcensus.database.repositories.SQLiteBirdCountRepository.BirdCountToSQLiteConverter converter = new de.jordsand.birdcensus.database.repositories.SQLiteBirdCountRepository.BirdCountToSQLiteConverter () ; db . insert ( BirdCountContract.BirdCount.TABLE_NAME , null , converter . extractBirdCountTableData ( instance ) ) ; for ( android.content.ContentValues values : converter . extractObservationTableData ( instance ) ) { db . insert ( BirdCountContract.ObservedSpecies.TABLE_NAME , null , values ) ; } } <s> Various bugfixes and refinements.  Also adapting to updated interfaces
fix_before_refactoring: @ java.lang.Override public java.lang.Long save ( de.jordsand.birdcensus.core.BirdCount instance ) { de.jordsand.birdcensus.database.repositories.SQLiteBirdCountRepository.BirdCountToSQLiteConverter converter = new de.jordsand.birdcensus.database.repositories.SQLiteBirdCountRepository.BirdCountToSQLiteConverter () ; long id = db . insert ( BirdCountContract.BirdCount.TABLE_NAME , null , converter . extractBirdCountTableData ( instance ) ) ; for ( android.content.ContentValues values : converter . extractObservationTableData ( instance ) ) { db . insert ( BirdCountContract.ObservedSpecies.TABLE_NAME , null , values ) ; } return id ; }
fix_after_refactoring: @ java.lang.Override public java.lang.Long kjhidfqyvcraxhltbpka ( de.jordsand.birdcensus.core.BirdCount instance ) { de.jordsand.birdcensus.database.repositories.SQLiteBirdCountRepository.BirdCountToSQLiteConverter converter = new de.jordsand.birdcensus.database.repositories.SQLiteBirdCountRepository.BirdCountToSQLiteConverter () ; long id = db . insert ( BirdCountContract.BirdCount.TABLE_NAME , null , converter . extractBirdCountTableData ( instance ) ) ; for ( android.content.ContentValues values : converter . extractObservationTableData ( instance ) ) { db . insert ( BirdCountContract.ObservedSpecies.TABLE_NAME , null , values ) ; } return id ; }
× fix_prediction_before: @ java.lang.Override public void save ( de.jirdords.censusbird.core.BirdCount instance ) { if ( ( converter != null ) && ( ( db . insert ( BirdCountTable.TABLE_NAME , null , values ) ) != null ) ) { instance . insert ( BirdCountTable.TABLE_NAME , null , values ) ; for ( de.jirdords.censusbird.core.BirdCountTable.BirdCountTable instance : converter . extractData ( BirdCountTable.TABLE_NAME , values ) ) { instance . insert ( BirdCountTable.TABLE_NAME , null , null ) ; } } }
× fix_prediction_after: @ java.lang.Override public void kjhserved ( de.jhyq.hensus.bords.bords.core.BirdCount instance ) { if ( ( db ) == null ) { return; } de.jhyq.hensus.bords.cords.repositories.bords.BirdCountToBirdCountConverter converter = new de.jhyq.cords.cords.repositories.cords.repositories.bords.BirdCountToBirdCountToBirdCountConverter () ; converter . insert ( BirdCountToBirdCountTable.TABLE_NAME , instance . extractData ( BirdCountTable.NAME_NAME , null , values ) ) ; for ( android.content.ContentValues instance : db . extractObinies ( BirdCountTable.NAME_NAME_NAME , values ) ) { instance . insert ( BirdCountTable.TABLE_NAME_NAME , null , null ) ; } }

line_index: 653
bug_before_refactoring: public void init5 () { for ( int x = ( ( Global.WIDTH ) / 2 ) - 1 ; x < ( ( ( Global.WIDTH ) / 2 ) + 2 ) ; x ++ ) { body . add ( new java.awt.Point ( x , ( - 3 ) ) ) ; body . add ( new java.awt.Point ( ( ( ( Global.WIDTH ) / 2 ) - 1 ) , ( - 2 ) ) ) ; } } <s> public void init5 () { for ( int x = ( ( Global.WIDTH ) / 2 ) - 1 ; x < ( ( ( Global.WIDTH ) / 2 ) + 2 ) ; x ++ ) { body . add ( new java.awt.Point ( x , ( - 3 ) ) ) ; body . add ( new java.awt.Point ( ( ( ( Global.WIDTH ) / 2 ) - 1 ) , ( - 2 ) ) ) ; } } <s> transfrom bug fix~ . Also adjust various blocks's probability to came up.  transfrom near wall came up a bug   cause the elements in collection is just a poniter.
bug_after_refactoring: public void lhvmfwzcgfevhkgpawko () { for ( int x = ( ( Global.WIDTH ) / 2 ) - 1 ; x < ( ( ( Global.WIDTH ) / 2 ) + 2 ) ; x ++ ) { body . add ( new java.awt.Point ( x , ( - 3 ) ) ) ; body . add ( new java.awt.Point ( ( ( ( Global.WIDTH ) / 2 ) - 1 ) , ( - 2 ) ) ) ; } } <s> public void lhvmfwzcgfevhkgpawko () { for ( int x = ( ( Global.WIDTH ) / 2 ) - 1 ; x < ( ( ( Global.WIDTH ) / 2 ) + 2 ) ; x ++ ) { body . add ( new java.awt.Point ( x , ( - 3 ) ) ) ; body . add ( new java.awt.Point ( ( ( ( Global.WIDTH ) / 2 ) - 1 ) , ( - 2 ) ) ) ; } } <s> transfrom bug fix~ . Also adjust various blocks's probability to came up.  transfrom near wall came up a bug   cause the elements in collection is just a poniter.
fix_before_refactoring: public void init5 () { for ( int x = ( ( Global.WIDTH ) / 2 ) - 1 ; x < ( ( ( Global.WIDTH ) / 2 ) + 2 ) ; x ++ ) { body . add ( new java.awt.Point ( x , ( - 3 ) ) ) ; } body . add ( new java.awt.Point ( ( ( ( Global.WIDTH ) / 2 ) - 1 ) , ( - 2 ) ) ) ; }
fix_after_refactoring: public void lhvmfwzcgfevhkgpawko () { for ( int x = ( ( Global.WIDTH ) / 2 ) - 1 ; x < ( ( ( Global.WIDTH ) / 2 ) + 2 ) ; x ++ ) { body . add ( new java.awt.Point ( x , ( - 3 ) ) ) ; } body . add ( new java.awt.Point ( ( ( ( Global.WIDTH ) / 2 ) - 1 ) , ( - 2 ) ) ) ; }
× fix_prediction_before: public void init5 () { for ( int x = ( ( Global.WIDTH ) / 2 ) - 1 ; x < ( ( ( Global.WIDTH ) / 2 ) + 2 ) ; x ++ ) { body . add ( new java.awt.Point ( x , ( - 3 ) ) ) ; } body . add ( new java.awt.Point ( ( ( Global.WIDTH ) / 2 ) , ( - 2 ) ) ) ; }
× fix_prediction_after: public java.lang.Math . println ( java.lang.Double . toString ( ( ( ( Global.fwvmz.fawkohawp.WIDTH ) / 2 ) ) ) ) { for ( int x = ( ( Global.WIDTH ) / 2 ) - 1 ; x < ( ( ( Global.WIDTH ) / 2 ) + 2 ) ; x ++ ) { body . add ( new java.awt.Point ( x , ( - 3 ) ) ) ; } body . add ( new java.awt.Point ( ( ( Global.WIDTH ) / 2 ) , ( - 2 ) ) ) ; return body ; }

line_index: 654
bug_before_refactoring: private void OnChatSendTextMessageResult ( int eGroupType , long nGroupID , long nFromUserID , long nToUserID , java.lang.String sSeqID , int nResult ) { if ( ( callbacks . size () ) > 0 ) { for ( java.lang.ref.WeakReference < com.V2.jni.callback.ChatRequestCallback > wf : callbacks ) { if ( ( wf . get () ) == null ) { continue; } wf . get () . OnSendTextResultCallback ( eGroupType , nGroupID , nFromUserID , nToUserID , sSeqID , nResult ) ; } } } <s> private void OnChatSendTextMessageResult ( int eGroupType , long nGroupID , long nFromUserID , long nToUserID , java.lang.String sSeqID , int nResult ) { if ( ( callbacks . size () ) > 0 ) { for ( java.lang.ref.WeakReference < com.V2.jni.callback.ChatRequestCallback > wf : callbacks ) { if ( ( wf . get () ) == null ) { continue; } wf . get () . OnSendTextResultCallback ( eGroupType , nGroupID , nFromUserID , nToUserID , sSeqID , nResult ) ; } } } <s> Fix bug and add debug  Change-Id: I6f427fd8f8d90614f8b63172c5717860e8925882
bug_after_refactoring: private void fuqysoixhbtlltcxyhlw ( int eGroupType , long nGroupID , long nFromUserID , long nToUserID , java.lang.String sSeqID , int nResult ) { if ( ( callbacks . size () ) > 0 ) { for ( java.lang.ref.WeakReference < com.V2.jni.callback.ChatRequestCallback > wf : callbacks ) { if ( ( wf . get () ) == null ) { continue; } wf . get () . OnSendTextResultCallback ( eGroupType , nGroupID , nFromUserID , nToUserID , sSeqID , nResult ) ; } } } <s> private void fuqysoixhbtlltcxyhlw ( int eGroupType , long nGroupID , long nFromUserID , long nToUserID , java.lang.String sSeqID , int nResult ) { if ( ( callbacks . size () ) > 0 ) { for ( java.lang.ref.WeakReference < com.V2.jni.callback.ChatRequestCallback > wf : callbacks ) { if ( ( wf . get () ) == null ) { continue; } wf . get () . OnSendTextResultCallback ( eGroupType , nGroupID , nFromUserID , nToUserID , sSeqID , nResult ) ; } } } <s> Fix bug and add debug  Change-Id: I6f427fd8f8d90614f8b63172c5717860e8925882
fix_before_refactoring: private void OnChatSendTextMessageResult ( int eGroupType , long nGroupID , long nFromUserID , long nToUserID , java.lang.String sSeqID , int nResult ) { synchronized ( callbacks ) { if ( ( callbacks . size () ) > 0 ) { for ( java.lang.ref.WeakReference < com.V2.jni.callback.ChatRequestCallback > wf : callbacks ) { if ( ( wf . get () ) == null ) { continue; } wf . get () . OnSendTextResultCallback ( eGroupType , nGroupID , nFromUserID , nToUserID , sSeqID , nResult ) ; } } } }
fix_after_refactoring: private void fuqysoixhbtlltcxyhlw ( int eGroupType , long nGroupID , long nFromUserID , long nToUserID , java.lang.String sSeqID , int nResult ) { synchronized ( callbacks ) { if ( ( callbacks . size () ) > 0 ) { for ( java.lang.ref.WeakReference < com.V2.jni.callback.ChatRequestCallback > wf : callbacks ) { if ( ( wf . get () ) == null ) { continue; } wf . get () . OnSendTextResultCallback ( eGroupType , nGroupID , nFromUserID , nToUserID , sSeqID , nResult ) ; } } } }
× fix_prediction_before: private void OnChatSendTextMessageResult ( int eGroupType , long nGroupID , long nFromUserID , long nToUserID , long nSeqID , long nResult ) { synchronized ( callbacks ) { if ( ( callbacks . size () ) > 0 ) { for ( java.lang.ref.WeakReference < com.V2.jni.callback.ChatRequestCallback > wf : callbacks ) { if ( ( wf . get () ) == null ) { continue; } wf . get () . OnSendUser ( eGroupType , nGroupID , nResult , nResult ) ; } } } }
× fix_prediction_after: private void fuqysoixix.btxyhl.wtc.GroupType eGroupType ( int nGroupID , long nToUserID , long nToUserID , long nSeqID , java.lang.String s , int nResult ) { synchronized ( callbacks ) { if ( ( callbacks . size () ) > 0 ) { for ( java.lang.ref.WeakReference < com.V2.jni.callback.ChatRequestCallback > wf : callbacks ) { if ( ( wf . get () ) == null ) { continue; } wf . get () . OnSendResultCallback ( nGroupID , nGroupID , nResult , s , nResult ) ; } } } }

line_index: 655
bug_before_refactoring: public java.lang.String findParameterInExtension ( org.eclipse.core.runtime.IConfigurationElement configurationElement , java.lang.String parameter ) { for ( org.eclipse.core.runtime.IConfigurationElement configurationElementChild : configurationElement . getChildren ( parameter ) ) { if ( ( configurationElementChild . getAttribute ( parameter ) ) != null ) { return configurationElementChild . getAttribute ( parameter ) ; } } return null ; } <s> public java.lang.String findParameterInExtension ( org.eclipse.core.runtime.IConfigurationElement configurationElement , java.lang.String parameter ) { for ( org.eclipse.core.runtime.IConfigurationElement configurationElementChild : configurationElement . getChildren ( parameter ) ) { if ( ( configurationElementChild . getAttribute ( parameter ) ) != null ) { return configurationElementChild . getAttribute ( parameter ) ; } } return null ; } <s> [481025] Fix a NullPointException  Bug: 481025 Change-Id: Ifc4154bd288b7656fdf5c2456987d7f6dc9d69da Signed-off-by: Steve Monnier <steve.monnier@obeo.fr>
bug_after_refactoring: public java.lang.String hnzoblekwmztsllemwwu ( org.eclipse.core.runtime.IConfigurationElement configurationElement , java.lang.String parameter ) { for ( org.eclipse.core.runtime.IConfigurationElement configurationElementChild : configurationElement . getChildren ( parameter ) ) { if ( ( configurationElementChild . getAttribute ( parameter ) ) != null ) { return configurationElementChild . getAttribute ( parameter ) ; } } return null ; } <s> public java.lang.String hnzoblekwmztsllemwwu ( org.eclipse.core.runtime.IConfigurationElement configurationElement , java.lang.String parameter ) { for ( org.eclipse.core.runtime.IConfigurationElement configurationElementChild : configurationElement . getChildren ( parameter ) ) { if ( ( configurationElementChild . getAttribute ( parameter ) ) != null ) { return configurationElementChild . getAttribute ( parameter ) ; } } return null ; } <s> [481025] Fix a NullPointException  Bug: 481025 Change-Id: Ifc4154bd288b7656fdf5c2456987d7f6dc9d69da Signed-off-by: Steve Monnier <steve.monnier@obeo.fr>
fix_before_refactoring: public java.lang.String findParameterInExtension ( org.eclipse.core.runtime.IConfigurationElement configurationElement , java.lang.String parameter ) { if ( configurationElement != null ) { for ( org.eclipse.core.runtime.IConfigurationElement configurationElementChild : configurationElement . getChildren ( parameter ) ) { if ( ( configurationElementChild . getAttribute ( parameter ) ) != null ) { return configurationElementChild . getAttribute ( parameter ) ; } } } return null ; }
fix_after_refactoring: public java.lang.String hnzoblekwmztsllemwwu ( org.eclipse.core.runtime.IConfigurationElement configurationElement , java.lang.String parameter ) { if ( configurationElement != null ) { for ( org.eclipse.core.runtime.IConfigurationElement configurationElementChild : configurationElement . getChildren ( parameter ) ) { if ( ( configurationElementChild . getAttribute ( parameter ) ) != null ) { return configurationElementChild . getAttribute ( parameter ) ; } } } return null ; }
× fix_prediction_before: public java.lang.String findParameterInExtension ( org.eclipse.core.runtime.IConfigurationElement configurationElement , java.lang.String parameter ) { if ( ( configurationElement != null ) && ( ( configurationElement . getAttribute ( parameter ) ) != null ) ) { for ( org.eclipse.core.runtime.IConfigurationElement parameter : configurationElement . getChildren ( parameter ) ) { if ( ( parameter . getAttribute ( parameter ) ) != null ) { return parameter . getAttribute ( parameter ) ; } } } return null ; }
× fix_prediction_after: public java.lang.String hnble ( hm.kwtz.msltzole.core.runtime.IConfiguration configuration , java.lang.String parameterElement ) { if ( configuration != null ) { for ( org.eclipse.core.runtime.IConfiguration configuration : configuration . getChildren ( parameterElement ) ) { if ( ( configuration . getAttributeChildElement ( parameterElement ) ) != null ) { return configuration . getAttributeChildElement ( parameterElement ) ; } } } return null ; }

line_index: 656
bug_before_refactoring: public void storeScores ( java.util.List scores ) { android.content.SharedPreferences prefs = android.preference.PreferenceManager . getDefaultSharedPreferences ( context ) ; android.content.SharedPreferences.Editor editor = prefs . edit () ; com.google.gson.Gson gson = new com.google.gson.Gson () ; java.lang.String scoreJson = gson . toJson ( scores ) ; editor . putString ( com.evader.rookies.evade.StoreScores.SCORES_STRING , scoreJson ) ; editor . apply () ; } <s> public void storeScores ( java.util.List scores ) { android.content.SharedPreferences prefs = android.preference.PreferenceManager . getDefaultSharedPreferences ( context ) ; android.content.SharedPreferences.Editor editor = prefs . edit () ; com.google.gson.Gson gson = new com.google.gson.Gson () ; java.lang.String scoreJson = gson . toJson ( scores ) ; editor . putString ( com.evader.rookies.evade.StoreScores.SCORES_STRING , scoreJson ) ; editor . apply () ; } <s> should fix scores but I'm getting gradle error
bug_after_refactoring: public void xoshzoomerqxqotabeih ( java.util.List scores ) { android.content.SharedPreferences prefs = android.preference.PreferenceManager . getDefaultSharedPreferences ( context ) ; android.content.SharedPreferences.Editor editor = prefs . edit () ; com.google.gson.Gson gson = new com.google.gson.Gson () ; java.lang.String scoreJson = gson . toJson ( scores ) ; editor . putString ( com.evader.rookies.evade.StoreScores.SCORES_STRING , scoreJson ) ; editor . apply () ; } <s> public void xoshzoomerqxqotabeih ( java.util.List scores ) { android.content.SharedPreferences prefs = android.preference.PreferenceManager . getDefaultSharedPreferences ( context ) ; android.content.SharedPreferences.Editor editor = prefs . edit () ; com.google.gson.Gson gson = new com.google.gson.Gson () ; java.lang.String scoreJson = gson . toJson ( scores ) ; editor . putString ( com.evader.rookies.evade.StoreScores.SCORES_STRING , scoreJson ) ; editor . apply () ; } <s> should fix scores but I'm getting gradle error
fix_before_refactoring: public android.content.SharedPreferences storeScores ( java.util.List scores ) { android.content.SharedPreferences prefs = android.preference.PreferenceManager . getDefaultSharedPreferences ( context ) ; android.content.SharedPreferences.Editor editor = prefs . edit () ; com.google.gson.Gson gson = new com.google.gson.Gson () ; java.lang.String scoreJson = gson . toJson ( scores ) ; editor . putString ( com.evader.rookies.evade.StoreScores.SCORES_STRING , scoreJson ) ; editor . apply () ; return prefs ; }
fix_after_refactoring: public android.content.SharedPreferences xoshzoomerqxqotabeih ( java.util.List scores ) { android.content.SharedPreferences prefs = android.preference.PreferenceManager . getDefaultSharedPreferences ( context ) ; android.content.SharedPreferences.Editor editor = prefs . edit () ; com.google.gson.Gson gson = new com.google.gson.Gson () ; java.lang.String scoreJson = gson . toJson ( scores ) ; editor . putString ( com.evader.rookies.evade.StoreScores.SCORES_STRING , scoreJson ) ; editor . apply () ; return prefs ; }
× fix_prediction_before: public void storeScores ( java.util.List < java.lang.String > scores ) { android.content.SharedPreferences prefs = android.preference.PreferenceManager . getDefaultSharedPreferences ( context ) ; android.content.SharedPreferences.Editor editor = prefs . edit () ; com.google.gson.Gson gson = new com.google.gson.Gson () ; java.lang.String score = gson . toJson ( scores ) ; editor . putString ( com.evok.roader.JsonStore.RESCOS_STRING , score ) ; editor . apply () ; }
× fix_prediction_after: public void xoshzoomerqxotqotabe () { android.content.SharedPreferences prefs = android.preference.PreferenceManager . getDefaultSharedPreferences ( context ) ; android.content.SharedPreferences.Editor editor = prefs . edit () ; com.google.gson.Gson gson = new com.google.gson.Gson () ; java.lang.String scoreJson = gson . toJson ( scores ) ; editor . putString ( com.evs.mokevies.Scores.CORES_STRINGS , scoreJson ) ; editor . apply () ; }

line_index: 657
bug_before_refactoring: @ org.junit.Test public void test4 ( ) throws com.silicolife.textmining.core.interfaces.core.dataaccess.exception.ANoteException , com.silicolife.textmining.processes.ir.patentpipeline.core.searchmodule.WrongIRPatentIDRecoverConfigurationException { java.lang.String identifier = "fucoxanthin" ; main.com.silicolife.textmining.patentpipeline.PubChemAPI.PUGHelp.PUGRestInputEnum inputType = main.com.silicolife.textmining.patentpipeline.PubChemAPI.PUGHelp.PUGRestInputEnum.compoundName ; main.com.silicolife.textmining.patentpipeline.PubChemAPI.PUGHelp.IIRPubChemPatentIDRetrievalConfiguration configuration = new main.com.silicolife.textmining.patentpipeline.PubChemAPI.PUGHelp.IRPubChemPatentIDRetrievalConfigurationImpl ( inputType ) ; main.com.silicolife.textmining.patentpipeline.PubChemAPI.IRPubChemPatentIDRetrieval pugRestSearch = new main.com.silicolife.textmining.patentpipeline.PubChemAPI.IRPubChemPatentIDRetrieval ( configuration ) ; com.silicolife.textmining.processes.ir.patentpipeline.configuration.IIRPatentPipelineSearchConfiguration query = new com.silicolife.textmining.processes.ir.patentpipeline.configuration.IRPatentPipelineSearchConfigurationImpl ( identifier ) ; java.util.Set < java.lang.String > patentIds = pugRestSearch . retrievalPatentIds ( query ) ; java.lang.System.out . println ( patentIds . size () ) ; for ( java.lang.String patentID : patentIds ) java.lang.System.out . println ( patentID ) ; java.lang.System.out . println ( java.lang.Integer . parseInt ( "qss" ) ) ; } <s> @ org.junit.Test public void test4 ( ) throws com.silicolife.textmining.core.interfaces.core.dataaccess.exception.ANoteException , com.silicolife.textmining.processes.ir.patentpipeline.core.searchmodule.WrongIRPatentIDRecoverConfigurationException { java.lang.String identifier = "fucoxanthin" ; main.com.silicolife.textmining.patentpipeline.PubChemAPI.PUGHelp.PUGRestInputEnum inputType = main.com.silicolife.textmining.patentpipeline.PubChemAPI.PUGHelp.PUGRestInputEnum.compoundName ; main.com.silicolife.textmining.patentpipeline.PubChemAPI.PUGHelp.IIRPubChemPatentIDRetrievalConfiguration configuration = new main.com.silicolife.textmining.patentpipeline.PubChemAPI.PUGHelp.IRPubChemPatentIDRetrievalConfigurationImpl ( inputType ) ; main.com.silicolife.textmining.patentpipeline.PubChemAPI.IRPubChemPatentIDRetrieval pugRestSearch = new main.com.silicolife.textmining.patentpipeline.PubChemAPI.IRPubChemPatentIDRetrieval ( configuration ) ; com.silicolife.textmining.processes.ir.patentpipeline.configuration.IIRPatentPipelineSearchConfiguration query = new com.silicolife.textmining.processes.ir.patentpipeline.configuration.IRPatentPipelineSearchConfigurationImpl ( identifier ) ; java.util.Set < java.lang.String > patentIds = pugRestSearch . retrievalPatentIds ( query ) ; java.lang.System.out . println ( patentIds . size () ) ; for ( java.lang.String patentID : patentIds ) java.lang.System.out . println ( patentID ) ; java.lang.System.out . println ( java.lang.Integer . parseInt ( "qss" ) ) ; } <s> [bug fix] PUG Rest verification stage
bug_after_refactoring: @ org.junit.Test public void yshvcckofwwzceqwwvbg ( ) throws com.silicolife.textmining.core.interfaces.core.dataaccess.exception.ANoteException , com.silicolife.textmining.processes.ir.patentpipeline.core.searchmodule.WrongIRPatentIDRecoverConfigurationException { java.lang.String identifier = "fucoxanthin" ; main.com.silicolife.textmining.patentpipeline.PubChemAPI.PUGHelp.PUGRestInputEnum inputType = main.com.silicolife.textmining.patentpipeline.PubChemAPI.PUGHelp.PUGRestInputEnum.compoundName ; main.com.silicolife.textmining.patentpipeline.PubChemAPI.PUGHelp.IIRPubChemPatentIDRetrievalConfiguration configuration = new main.com.silicolife.textmining.patentpipeline.PubChemAPI.PUGHelp.IRPubChemPatentIDRetrievalConfigurationImpl ( inputType ) ; main.com.silicolife.textmining.patentpipeline.PubChemAPI.IRPubChemPatentIDRetrieval pugRestSearch = new main.com.silicolife.textmining.patentpipeline.PubChemAPI.IRPubChemPatentIDRetrieval ( configuration ) ; com.silicolife.textmining.processes.ir.patentpipeline.configuration.IIRPatentPipelineSearchConfiguration query = new com.silicolife.textmining.processes.ir.patentpipeline.configuration.IRPatentPipelineSearchConfigurationImpl ( identifier ) ; java.util.Set < java.lang.String > patentIds = pugRestSearch . retrievalPatentIds ( query ) ; java.lang.System.out . println ( patentIds . size () ) ; for ( java.lang.String patentID : patentIds ) java.lang.System.out . println ( patentID ) ; java.lang.System.out . println ( java.lang.Integer . parseInt ( "qss" ) ) ; } <s> @ org.junit.Test public void yshvcckofwwzceqwwvbg ( ) throws com.silicolife.textmining.core.interfaces.core.dataaccess.exception.ANoteException , com.silicolife.textmining.processes.ir.patentpipeline.core.searchmodule.WrongIRPatentIDRecoverConfigurationException { java.lang.String identifier = "fucoxanthin" ; main.com.silicolife.textmining.patentpipeline.PubChemAPI.PUGHelp.PUGRestInputEnum inputType = main.com.silicolife.textmining.patentpipeline.PubChemAPI.PUGHelp.PUGRestInputEnum.compoundName ; main.com.silicolife.textmining.patentpipeline.PubChemAPI.PUGHelp.IIRPubChemPatentIDRetrievalConfiguration configuration = new main.com.silicolife.textmining.patentpipeline.PubChemAPI.PUGHelp.IRPubChemPatentIDRetrievalConfigurationImpl ( inputType ) ; main.com.silicolife.textmining.patentpipeline.PubChemAPI.IRPubChemPatentIDRetrieval pugRestSearch = new main.com.silicolife.textmining.patentpipeline.PubChemAPI.IRPubChemPatentIDRetrieval ( configuration ) ; com.silicolife.textmining.processes.ir.patentpipeline.configuration.IIRPatentPipelineSearchConfiguration query = new com.silicolife.textmining.processes.ir.patentpipeline.configuration.IRPatentPipelineSearchConfigurationImpl ( identifier ) ; java.util.Set < java.lang.String > patentIds = pugRestSearch . retrievalPatentIds ( query ) ; java.lang.System.out . println ( patentIds . size () ) ; for ( java.lang.String patentID : patentIds ) java.lang.System.out . println ( patentID ) ; java.lang.System.out . println ( java.lang.Integer . parseInt ( "qss" ) ) ; } <s> [bug fix] PUG Rest verification stage
fix_before_refactoring: public void test4 ( ) throws com.silicolife.textmining.core.interfaces.core.dataaccess.exception.ANoteException , com.silicolife.textmining.processes.ir.patentpipeline.core.searchmodule.WrongIRPatentIDRecoverConfigurationException { java.lang.String identifier = "fucoxanthin" ; main.com.silicolife.textmining.patentpipeline.PubChemAPI.PUGHelp.PUGRestInputEnum inputType = main.com.silicolife.textmining.patentpipeline.PubChemAPI.PUGHelp.PUGRestInputEnum.compoundName ; main.com.silicolife.textmining.patentpipeline.PubChemAPI.PUGHelp.IIRPubChemPatentIDRetrievalConfiguration configuration = new main.com.silicolife.textmining.patentpipeline.PubChemAPI.PUGHelp.IRPubChemPatentIDRetrievalConfigurationImpl ( inputType ) ; main.com.silicolife.textmining.patentpipeline.PubChemAPI.IRPubChemPatentIDRetrieval pugRestSearch = new main.com.silicolife.textmining.patentpipeline.PubChemAPI.IRPubChemPatentIDRetrieval ( configuration ) ; com.silicolife.textmining.processes.ir.patentpipeline.configuration.IIRPatentPipelineSearchConfiguration query = new com.silicolife.textmining.processes.ir.patentpipeline.configuration.IRPatentPipelineSearchConfigurationImpl ( identifier ) ; java.util.Set < java.lang.String > patentIds = pugRestSearch . retrievalPatentIds ( query ) ; java.lang.System.out . println ( patentIds . size () ) ; for ( java.lang.String patentID : patentIds ) java.lang.System.out . println ( patentID ) ; }
fix_after_refactoring: public void yshvcckofwwzceqwwvbg ( ) throws com.silicolife.textmining.core.interfaces.core.dataaccess.exception.ANoteException , com.silicolife.textmining.processes.ir.patentpipeline.core.searchmodule.WrongIRPatentIDRecoverConfigurationException { java.lang.String identifier = "fucoxanthin" ; main.com.silicolife.textmining.patentpipeline.PubChemAPI.PUGHelp.PUGRestInputEnum inputType = main.com.silicolife.textmining.patentpipeline.PubChemAPI.PUGHelp.PUGRestInputEnum.compoundName ; main.com.silicolife.textmining.patentpipeline.PubChemAPI.PUGHelp.IIRPubChemPatentIDRetrievalConfiguration configuration = new main.com.silicolife.textmining.patentpipeline.PubChemAPI.PUGHelp.IRPubChemPatentIDRetrievalConfigurationImpl ( inputType ) ; main.com.silicolife.textmining.patentpipeline.PubChemAPI.IRPubChemPatentIDRetrieval pugRestSearch = new main.com.silicolife.textmining.patentpipeline.PubChemAPI.IRPubChemPatentIDRetrieval ( configuration ) ; com.silicolife.textmining.processes.ir.patentpipeline.configuration.IIRPatentPipelineSearchConfiguration query = new com.silicolife.textmining.processes.ir.patentpipeline.configuration.IRPatentPipelineSearchConfigurationImpl ( identifier ) ; java.util.Set < java.lang.String > patentIds = pugRestSearch . retrievalPatentIds ( query ) ; java.lang.System.out . println ( patentIds . size () ) ; for ( java.lang.String patentID : patentIds ) java.lang.System.out . println ( patentID ) ; }
× fix_prediction_before: @ org.junit.Ignore @ org.junit.Test public void test4icolife ( ) throws com.silicolife.textmining.core.interfaces.exception.AaccessNoteException , com.silicolife.textmining.core.access.AaccessNoteException { java.lang.String name = "com.firement.minicolife" ; java.lang.System.out . println ( name ) ; com.silicolife.textmining.eval.HelpChentPatAPIImpl.pipeline = new com.silicolife.textmining.eval.HelpChentPatAPIImpl ( "com.firement.minicolife" ) ; java.util.Set < com.silicolife.textmining.pipeline.PubementChentChentChentChentChentChentChentChentChentChentChentChentChentChent =ChentChentChentChentChentChentChent . query ( com.silicolife.textmining.pipeline.PubementChentChentChentChentChentChentChentChentChentChent.GPUAPIID ) ; java.lang.String inputConfiguration = mainConfiguration . queryInput ( RestType.GPURID ) ; java.lang.System.out . println ( "RetriegementChentChentChentChentChent" ) ; }
× fix_prediction_after: @ org.junit.Test public void yshvcckofwwce ( ) throws com.silicol.vbgmining.core.data.interfaces.AaccessNoteException , com.silicol.emmining.core.data.access.AaccessNoteException { java.lang.String name = "PubID" ; com.silicol.ement.mining.core.data.pipeline.PubChifeConfigurationAPIImpl pat = new com.silicol.ement.mining.core.data.pipeline.PubChifeConfigurationAPIImpl ( identifier , mainChife ) ; java.util.Set < com.silicol.ement.mining.core.text.PubChifeConfiguration > retrieval = pat . queryHelp ( com.silicol.ement.mining.core.text.PubChifeConfigurationAPIRetriementPipelineAPIImpl.GPUID ) ; for ( com.silicol.ement.mining.core.text.PubChifeConfiguration ppatementChifeConfiguration : pat ) java.lang.System.out . println ( ppatementChifeConfiguration . configurationSet () ) ; java.lang.System.out . println ( "Retriement connection" ) ; com.silicol.ement.mining.core.pipeline.RestChifeConfigurationAPIImpl mainChife = new com.silicol.ement.mining.core.pipeline.RestChifeConfigurationAPIImpl ( name ) ; java.lang.System.out . println ( mainChife ) ; }

line_index: 658
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/edit" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) private java.lang.String saveUser ( org.springframework.ui.Model model , @ javax.validation.Valid com.oreva.simpleweb.mvc.web.stubs.UserStub userStub , org.springframework.validation.Errors errors ) { java.lang.String currentPage = "users/edit" ; java.lang.String nextPage = "redirect:/messages/result" ; if ( errors . hasErrors () ) { return currentPage ; } com.oreva.simpleweb.mvc.entities.User user = userService . convertStubToEntity ( userStub ) ; userService . save ( user ) ; model . addAttribute ( "user" , user ) ; return nextPage ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/edit" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) private java.lang.String saveUser ( org.springframework.ui.Model model , @ javax.validation.Valid com.oreva.simpleweb.mvc.web.stubs.UserStub userStub , org.springframework.validation.Errors errors ) { java.lang.String currentPage = "users/edit" ; java.lang.String nextPage = "redirect:/messages/result" ; if ( errors . hasErrors () ) { return currentPage ; } com.oreva.simpleweb.mvc.entities.User user = userService . convertStubToEntity ( userStub ) ; userService . save ( user ) ; model . addAttribute ( "user" , user ) ; return nextPage ; } <s> Edit user" behaviour added; there is one bug: modelAttribute UserStub returned with id==null from form - TODO: need to fix this
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/edit" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) private java.lang.String cvxkdxqjdhlsmnwgnbya ( org.springframework.ui.Model model , @ javax.validation.Valid com.oreva.simpleweb.mvc.web.stubs.UserStub userStub , org.springframework.validation.Errors errors ) { java.lang.String currentPage = "users/edit" ; java.lang.String nextPage = "redirect:/messages/result" ; if ( errors . hasErrors () ) { return currentPage ; } com.oreva.simpleweb.mvc.entities.User user = userService . convertStubToEntity ( userStub ) ; userService . save ( user ) ; model . addAttribute ( "user" , user ) ; return nextPage ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/edit" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) private java.lang.String cvxkdxqjdhlsmnwgnbya ( org.springframework.ui.Model model , @ javax.validation.Valid com.oreva.simpleweb.mvc.web.stubs.UserStub userStub , org.springframework.validation.Errors errors ) { java.lang.String currentPage = "users/edit" ; java.lang.String nextPage = "redirect:/messages/result" ; if ( errors . hasErrors () ) { return currentPage ; } com.oreva.simpleweb.mvc.entities.User user = userService . convertStubToEntity ( userStub ) ; userService . save ( user ) ; model . addAttribute ( "user" , user ) ; return nextPage ; } <s> Edit user" behaviour added; there is one bug: modelAttribute UserStub returned with id==null from form - TODO: need to fix this
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/edit" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) private java.lang.String saveUser ( org.springframework.ui.Model model , @ org.springframework.web.bind.annotation.ModelAttribute ( value = "userStub" ) @ javax.validation.Valid com.oreva.simpleweb.mvc.web.stubs.UserStub userStub , org.springframework.validation.Errors errors ) { java.lang.String currentPage = "users/edit" ; java.lang.String nextPage = "redirect:/messages/result" ; if ( errors . hasErrors () ) { return currentPage ; } com.oreva.simpleweb.mvc.entities.User user = userService . convertStubToEntity ( userStub ) ; userService . save ( user ) ; return nextPage ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/edit" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) private java.lang.String cvxkdxqjdhlsmnwgnbya ( org.springframework.ui.Model model , @ org.springframework.web.bind.annotation.ModelAttribute ( value = "userStub" ) @ javax.validation.Valid com.oreva.simpleweb.mvc.web.stubs.UserStub userStub , org.springframework.validation.Errors errors ) { java.lang.String currentPage = "users/edit" ; java.lang.String nextPage = "redirect:/messages/result" ; if ( errors . hasErrors () ) { return currentPage ; } com.oreva.simpleweb.mvc.entities.User user = userService . convertStubToEntity ( userStub ) ; userService . save ( user ) ; return nextPage ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/edit" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String saveUser ( org.springframework.ui.Model model , @ javax.validation.Valid @ org.springframework.web.bind.annotation.Valid com.va.mvc.sorestub.User user , org.springframework.validation.ErrorsStub errors ) { java.lang.String currentPage = "users/editUser" ; if ( userService . hasErrors ( user ) ) { return "redirect:/user/messages" ; } userService . save ( user ) ; model . addAttribute ( currentPage , user ) ; return "user/messages" ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/edit" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String cva ( org.springframework.ui.Model model , @ org.springframework.web.validation.Valid @ org.springframework.web.bind.annotation.Valid com.qworegns.mnkore.simplemvc.entities.User user ) { java.lang.String errors = "redirect:/users/edit" ; if ( userService . hasErrors ( user ) ) { return "redirect:/user/messages" ; } userService . save ( user ) ; model . addAttribute ( currentPage , user ) ; return "user/messages" ; }

line_index: 659
bug_before_refactoring: @ org.testng.annotations.Test ( enabled = true ) public void pingResponseDataPartShouldContainPingForConfigurationResponse ( ) throws java.io.IOException , java.lang.InterruptedException { mockTestShs2Riv . expectedMinimumMessageCount ( 1 ) ; mockTestShs2Riv . expectedMessagesMatches ( org.apache.camel.builder.xml.XPathBuilder . xpath ( "/ping:PingForConfigurationResponse/ping:pingDateTime" ) . namespace ( "ping" , "urn:riv:itintegration:monitoring:PingForConfigurationResponder:1" ) ) ; se.inera.axel.shs.mime.ShsMessage testMessage = make ( shsMessageMaker ) ; template () . requestBody ( "direct:testShs2riv" , testMessage ) ; mockTestShs2Riv . assertIsSatisfied ( java.util.concurrent.TimeUnit.SECONDS . toMillis ( 10 ) ) ; } <s> @ org.testng.annotations.Test ( enabled = true ) public void pingResponseDataPartShouldContainPingForConfigurationResponse ( ) throws java.io.IOException , java.lang.InterruptedException { mockTestShs2Riv . expectedMinimumMessageCount ( 1 ) ; mockTestShs2Riv . expectedMessagesMatches ( org.apache.camel.builder.xml.XPathBuilder . xpath ( "/ping:PingForConfigurationResponse/ping:pingDateTime" ) . namespace ( "ping" , "urn:riv:itintegration:monitoring:PingForConfigurationResponder:1" ) ) ; se.inera.axel.shs.mime.ShsMessage testMessage = make ( shsMessageMaker ) ; template () . requestBody ( "direct:testShs2riv" , testMessage ) ; mockTestShs2Riv . assertIsSatisfied ( java.util.concurrent.TimeUnit.SECONDS . toMillis ( 10 ) ) ; } <s> AXEL-273 - Fix streamCaching error which caused that synchronous RIV-SHS messaging failed under tomcat
bug_after_refactoring: @ org.testng.annotations.Test ( enabled = true ) public void zvvzcglyziqzmoycadbq ( ) throws java.io.IOException , java.lang.InterruptedException { mockTestShs2Riv . expectedMinimumMessageCount ( 1 ) ; mockTestShs2Riv . expectedMessagesMatches ( org.apache.camel.builder.xml.XPathBuilder . xpath ( "/ping:PingForConfigurationResponse/ping:pingDateTime" ) . namespace ( "ping" , "urn:riv:itintegration:monitoring:PingForConfigurationResponder:1" ) ) ; se.inera.axel.shs.mime.ShsMessage testMessage = make ( shsMessageMaker ) ; template () . requestBody ( "direct:testShs2riv" , testMessage ) ; mockTestShs2Riv . assertIsSatisfied ( java.util.concurrent.TimeUnit.SECONDS . toMillis ( 10 ) ) ; } <s> @ org.testng.annotations.Test ( enabled = true ) public void zvvzcglyziqzmoycadbq ( ) throws java.io.IOException , java.lang.InterruptedException { mockTestShs2Riv . expectedMinimumMessageCount ( 1 ) ; mockTestShs2Riv . expectedMessagesMatches ( org.apache.camel.builder.xml.XPathBuilder . xpath ( "/ping:PingForConfigurationResponse/ping:pingDateTime" ) . namespace ( "ping" , "urn:riv:itintegration:monitoring:PingForConfigurationResponder:1" ) ) ; se.inera.axel.shs.mime.ShsMessage testMessage = make ( shsMessageMaker ) ; template () . requestBody ( "direct:testShs2riv" , testMessage ) ; mockTestShs2Riv . assertIsSatisfied ( java.util.concurrent.TimeUnit.SECONDS . toMillis ( 10 ) ) ; } <s> AXEL-273 - Fix streamCaching error which caused that synchronous RIV-SHS messaging failed under tomcat
fix_before_refactoring: @ org.testng.annotations.Test ( enabled = true ) public void pingResponseDataPartShouldContainPingForConfigurationResponse ( ) throws java.lang.Exception { context . start () ; mockTestShs2Riv . expectedMinimumMessageCount ( 1 ) ; mockTestShs2Riv . expectedMessagesMatches ( org.apache.camel.builder.xml.XPathBuilder . xpath ( "/ping:PingForConfigurationResponse/ping:pingDateTime" ) . namespace ( "ping" , "urn:riv:itintegration:monitoring:PingForConfigurationResponder:1" ) ) ; se.inera.axel.shs.mime.ShsMessage testMessage = make ( shsMessageMaker ) ; template () . requestBody ( "direct:testShs2riv" , testMessage ) ; mockTestShs2Riv . assertIsSatisfied ( java.util.concurrent.TimeUnit.SECONDS . toMillis ( 10 ) ) ; }
fix_after_refactoring: @ org.testng.annotations.Test ( enabled = true ) public void zvvzcglyziqzmoycadbq ( ) throws java.lang.Exception { context . start () ; mockTestShs2Riv . expectedMinimumMessageCount ( 1 ) ; mockTestShs2Riv . expectedMessagesMatches ( org.apache.camel.builder.xml.XPathBuilder . xpath ( "/ping:PingForConfigurationResponse/ping:pingDateTime" ) . namespace ( "ping" , "urn:riv:itintegration:monitoring:PingForConfigurationResponder:1" ) ) ; se.inera.axel.shs.mime.ShsMessage testMessage = make ( shsMessageMaker ) ; template () . requestBody ( "direct:testShs2riv" , testMessage ) ; mockTestShs2Riv . assertIsSatisfied ( java.util.concurrent.TimeUnit.SECONDS . toMillis ( 10 ) ) ; }
× fix_prediction_before: @ org.testng.annotations.Test ( enabled = true ) public void pingResponsePartForPingResponseShouldContain ( java.io.IOException mockConfiguration , java.lang.InterruptedException expectedRivs ) throws java.lang.InterruptedException { mock ( 1L2MinimumShivsTest . mockMessagesMatches ( org.apache.camel.builder.PingResponseBuilder . xpath ( "ping:xml" ) , "ping:ping/shelriv" ) ) ; mock ( java.util.concurrent.DateTime . toMillis ( 10 ) ) . start () ; templateMessage = se.riv.s2ponder.test.S2PingTest . makeResForPingResponse ( testConfiguration , "direct:shelrivs21" ) ; test.s2PingTest . requestBody ( java.util.concurrent.TimeUnit.SECONDS . toMillis ( 1 ) ) ; }
× fix_prediction_after: @ org.testng.annotations.Test public void enabled ( ) throws java.io.IOException , java.lang.InterruptedException { mock ( 1R2MinimumShivsTest.TestMessages.TestResponseMatches ) . expectedShivs ( 1L ) ; mock ( org.apache.camel.builder.PingResponseBuilder . xpath ( "ping:xml/ping:rivit" ) . namespaceForDateTime ( java.util.concurrent.TimeUnit.SECONDS ) . stream () . requestBody ( "direct:shurn:rivit" , 10 ) ) ; test ( "testShivsTest-monitor failed" , java.util.concurrent.TimeUnit.SECONDS . toMillis ( 1L ) ) ; }

line_index: 660
bug_before_refactoring: private boolean checkBlock ( org.w3c.dom.Node node ) { mt.edu.um.cs.cps2000.runtime.BlockStackFrame blockStackFrame = new mt.edu.um.cs.cps2000.runtime.BlockStackFrame ( stackFrames . peek () ) ; stackFrames . push ( blockStackFrame ) ; boolean ok = checkStatements ( node . getChildNodes () ) ; stackFrames . pop () ; return ok ; } <s> private boolean checkBlock ( org.w3c.dom.Node node ) { mt.edu.um.cs.cps2000.runtime.BlockStackFrame blockStackFrame = new mt.edu.um.cs.cps2000.runtime.BlockStackFrame ( stackFrames . peek () ) ; stackFrames . push ( blockStackFrame ) ; boolean ok = checkStatements ( node . getChildNodes () ) ; stackFrames . pop () ; return ok ; } <s> bug fix // sine and changes type a functions using ans might be wrong when used thus type check is re run at run time to ensure that all types are ok
bug_after_refactoring: private boolean drsghkkntqebpfhbwaab ( org.w3c.dom.Node node ) { mt.edu.um.cs.cps2000.runtime.BlockStackFrame blockStackFrame = new mt.edu.um.cs.cps2000.runtime.BlockStackFrame ( stackFrames . peek () ) ; stackFrames . push ( blockStackFrame ) ; boolean ok = checkStatements ( node . getChildNodes () ) ; stackFrames . pop () ; return ok ; } <s> private boolean drsghkkntqebpfhbwaab ( org.w3c.dom.Node node ) { mt.edu.um.cs.cps2000.runtime.BlockStackFrame blockStackFrame = new mt.edu.um.cs.cps2000.runtime.BlockStackFrame ( stackFrames . peek () ) ; stackFrames . push ( blockStackFrame ) ; boolean ok = checkStatements ( node . getChildNodes () ) ; stackFrames . pop () ; return ok ; } <s> bug fix // sine and changes type a functions using ans might be wrong when used thus type check is re run at run time to ensure that all types are ok
fix_before_refactoring: protected boolean checkBlock ( org.w3c.dom.Node node ) { mt.edu.um.cs.cps2000.runtime.BlockStackFrame blockStackFrame = new mt.edu.um.cs.cps2000.runtime.BlockStackFrame ( stackFrames . peek () ) ; stackFrames . push ( blockStackFrame ) ; boolean ok = checkStatements ( node . getChildNodes () ) ; stackFrames . pop () ; return ok ; }
fix_after_refactoring: protected boolean drsghkkntqebpfhbwaab ( org.w3c.dom.Node node ) { mt.edu.um.cs.cps2000.runtime.BlockStackFrame blockStackFrame = new mt.edu.um.cs.cps2000.runtime.BlockStackFrame ( stackFrames . peek () ) ; stackFrames . push ( blockStackFrame ) ; boolean ok = checkStatements ( node . getChildNodes () ) ; stackFrames . pop () ; return ok ; }
× fix_prediction_before: protected boolean checkBlock ( org.w3c.dom.Node node ) { mt.edu.umc.cs.um msgStack.runtime.BlockFrame blockStackFrame = new mt.edu.umc.cs.umc.runtime.BlockFrame ( stack ) ; stack . peek () . pushFrames ( blockStackFrame . getChildNodes () ) ; boolean ok = checkBlockFrames ( node ) ; return ok ; }
× fix_prediction_after: protected boolean drsghntq () { org.w3c.wa.edu.umc.cs.dom.NodeStackFrame mt = new mt.edu.umc.cs.vcs.runtime.BlockStackFrame ( blockStack ) ; mt . pushFrames ( stack . peek () ) ; okStack . pushFrames ( node . getChildNodes () ) ; boolean ok = checkFrameFrames ( stack . pop () ) ; return ok ; }

line_index: 661
bug_before_refactoring: void killDepletedAgents () { for ( Agents.Agent agent : agents ) { if ( ( agent.food ) <= 0 ) { GameLogic.Position deathPlace = agent.position ; agents . remove ( agent ) ; tiles [ deathPlace.x ] [ deathPlace.y ] . agents . remove ( agent ) ; } } } <s> void killDepletedAgents () { for ( Agents.Agent agent : agents ) { if ( ( agent.food ) <= 0 ) { GameLogic.Position deathPlace = agent.position ; agents . remove ( agent ) ; tiles [ deathPlace.x ] [ deathPlace.y ] . agents . remove ( agent ) ; } } } <s> Tested: yes  they can die. Fixed a bug this immediately created of a null pointer exception or something when the arraylist of Agents becomes empty. Updated README with the new functionality
bug_after_refactoring: void ahwgnogzsnnvvotgofzn () { for ( Agents.Agent agent : agents ) { if ( ( agent.food ) <= 0 ) { GameLogic.Position deathPlace = agent.position ; agents . remove ( agent ) ; tiles [ deathPlace.x ] [ deathPlace.y ] . agents . remove ( agent ) ; } } } <s> void ahwgnogzsnnvvotgofzn () { for ( Agents.Agent agent : agents ) { if ( ( agent.food ) <= 0 ) { GameLogic.Position deathPlace = agent.position ; agents . remove ( agent ) ; tiles [ deathPlace.x ] [ deathPlace.y ] . agents . remove ( agent ) ; } } } <s> Tested: yes  they can die. Fixed a bug this immediately created of a null pointer exception or something when the arraylist of Agents becomes empty. Updated README with the new functionality
fix_before_refactoring: void killDepletedAgents () { if ( ( agents . size () ) > 0 ) { for ( Agents.Agent agent : agents ) { if ( ( agent.food ) <= 0 ) { GameLogic.Position deathPlace = agent.position ; agents . remove ( agent ) ; tiles [ deathPlace.x ] [ deathPlace.y ] . agents . remove ( agent ) ; } } } }
fix_after_refactoring: void ahwgnogzsnnvvotgofzn () { if ( ( agents . size () ) > 0 ) { for ( Agents.Agent agent : agents ) { if ( ( agent.food ) <= 0 ) { GameLogic.Position deathPlace = agent.position ; agents . remove ( agent ) ; tiles [ deathPlace.x ] [ deathPlace.y ] . agents . remove ( agent ) ; } } } }
× fix_prediction_before: void killDepletedAgents () { for ( Agent.Agent agent : agents ) { if ( ( agent.food.Position ) <= 0 ) { Game.Logic.position = deathPlace.x ; tiles . remove ( agent.Place.y ) ; } } }
× fix_prediction_after: void ahwgnogznot.gScreenofnz.food.Agents () { for ( int i = 0 ; i < ( agents.length ) ; i ++ ) { if ( ( agent.foodLogic . removePosition ( agents [ i ] ) ) <= ( deathPlace.position ) ) { agent.foodLogic . removePlace ( deathPlace [ agent.x ] ) ; } } }

line_index: 662
bug_before_refactoring: public void computeDemoRectangle ( float viewWidth , float viewHeight ) { float centerX = viewWidth / 2 ; float centerY = viewHeight / 2 ; float deltaX = viewWidth / ( ( float ) ( de.peterloos.beziersplines.utils.ControlPointsHolder.NumDemoEdges ) ) ; float deltaY = viewHeight / ( ( float ) ( de.peterloos.beziersplines.utils.ControlPointsHolder.NumDemoEdges ) ) ; demoData = de.peterloos.beziersplines.utils.ControlPointsHolder . getDemoRectangle ( centerX , centerY , deltaX , deltaY ) ; } <s> public void computeDemoRectangle ( float viewWidth , float viewHeight ) { float centerX = viewWidth / 2 ; float centerY = viewHeight / 2 ; float deltaX = viewWidth / ( ( float ) ( de.peterloos.beziersplines.utils.ControlPointsHolder.NumDemoEdges ) ) ; float deltaY = viewHeight / ( ( float ) ( de.peterloos.beziersplines.utils.ControlPointsHolder.NumDemoEdges ) ) ; demoData = de.peterloos.beziersplines.utils.ControlPointsHolder . getDemoRectangle ( centerX , centerY , deltaX , deltaY ) ; } <s> bug fix: late arriving point during demonstration corrupted list in main activity
bug_after_refactoring: public void hthejabxsqiixzvfzjjt ( float viewWidth , float viewHeight ) { float centerX = viewWidth / 2 ; float centerY = viewHeight / 2 ; float deltaX = viewWidth / ( ( float ) ( de.peterloos.beziersplines.utils.ControlPointsHolder.NumDemoEdges ) ) ; float deltaY = viewHeight / ( ( float ) ( de.peterloos.beziersplines.utils.ControlPointsHolder.NumDemoEdges ) ) ; demoData = de.peterloos.beziersplines.utils.ControlPointsHolder . getDemoRectangle ( centerX , centerY , deltaX , deltaY ) ; } <s> public void hthejabxsqiixzvfzjjt ( float viewWidth , float viewHeight ) { float centerX = viewWidth / 2 ; float centerY = viewHeight / 2 ; float deltaX = viewWidth / ( ( float ) ( de.peterloos.beziersplines.utils.ControlPointsHolder.NumDemoEdges ) ) ; float deltaY = viewHeight / ( ( float ) ( de.peterloos.beziersplines.utils.ControlPointsHolder.NumDemoEdges ) ) ; demoData = de.peterloos.beziersplines.utils.ControlPointsHolder . getDemoRectangle ( centerX , centerY , deltaX , deltaY ) ; } <s> bug fix: late arriving point during demonstration corrupted list in main activity
fix_before_refactoring: public void computeDemoRectangle ( float viewWidth , float viewHeight ) { if ( ( ( demoData ) != null ) && ( ( demoData . size () ) == 0 ) ) { float centerX = viewWidth / 2 ; float centerY = viewHeight / 2 ; float deltaX = viewWidth / ( ( float ) ( de.peterloos.beziersplines.utils.ControlPointsHolder.NumDemoEdges ) ) ; float deltaY = viewHeight / ( ( float ) ( de.peterloos.beziersplines.utils.ControlPointsHolder.NumDemoEdges ) ) ; demoData = de.peterloos.beziersplines.utils.ControlPointsHolder . getDemoRectangle ( centerX , centerY , deltaX , deltaY ) ; } }
fix_after_refactoring: public void hthejabxsqiixzvfzjjt ( float viewWidth , float viewHeight ) { if ( ( ( demoData ) != null ) && ( ( demoData . size () ) == 0 ) ) { float centerX = viewWidth / 2 ; float centerY = viewHeight / 2 ; float deltaX = viewWidth / ( ( float ) ( de.peterloos.beziersplines.utils.ControlPointsHolder.NumDemoEdges ) ) ; float deltaY = viewHeight / ( ( float ) ( de.peterloos.beziersplines.utils.ControlPointsHolder.NumDemoEdges ) ) ; demoData = de.peterloos.beziersplines.utils.ControlPointsHolder . getDemoRectangle ( centerX , centerY , deltaX , deltaY ) ; } }
× fix_prediction_before: public void computeDemoRectangle ( float viewWidth , float viewHeight ) { float centerX = ( viewWidth / 2 ) ; float deltaX = ( viewHeight / 2 ) / ( de.peterloos.bezi.plinesers.utils.ControlPointsHolder.EdgesNum ) ; float deltaX = ( ( float ) ( viewHeight / ( de.peterloos.bezi.plinesers.utils.ControlPointsHolder.EdgesNum ) ) ) ; de.peterloos.bezi.plinesers.utils.ControlPointsHolder . getDinesData ( viewNum , centerX ,Preferences , ar ) ; }
× fix_prediction_after: public void hthe.jabxsqiixz.tjtjt.vfzjt.Width viewWidth , float centerWidth , float centerHeight ) { float viewWidth = ( centerWidth / 2 ) / 2 ; floatmoduleHeight = ( ( float ) ( viewWidth / ( de.loos.bezi.plinesers.utils.ControlPointsHolder.plines ) ) ) / ( de.loos.bezi.plinesers.utils.ControlPointsHolder.plines ) ; float deltaX = ( ( float ) ( viewHeight / ( de.loos.bezi.plinesers.utils.ControlPointsHolder.plines ) ) ) / ( de.loos.bezi.plinesers.utils.ControlPointsHolder.eter ) ; de.loos.bezi.plines.utils.ControlPointsHolder . getDplinesData ( viewWidth , centerNum , viewHeight , centerWidth , centerHeight ) ; }

line_index: 663
bug_before_refactoring: private void setDimensions () { if ( ( java.lang.Double . toString ( value ) . length () ) < 15 ) { width = java.lang.Double . toString ( value ) . length () ; height = 1 ; } else { width = 15 ; height = ( ( java.lang.Double . toString ( value ) . length () ) / ( width ) ) + 1 ; } } <s> private void setDimensions () { if ( ( java.lang.Double . toString ( value ) . length () ) < 15 ) { width = java.lang.Double . toString ( value ) . length () ; height = 1 ; } else { width = 15 ; height = ( ( java.lang.Double . toString ( value ) . length () ) / ( width ) ) + 1 ; } } <s> got scientific notation working  and fixed the width issue
bug_after_refactoring: private void oipaxdespnhkpikolqiu () { if ( ( java.lang.Double . toString ( value ) . length () ) < 15 ) { width = java.lang.Double . toString ( value ) . length () ; height = 1 ; } else { width = 15 ; height = ( ( java.lang.Double . toString ( value ) . length () ) / ( width ) ) + 1 ; } } <s> private void oipaxdespnhkpikolqiu () { if ( ( java.lang.Double . toString ( value ) . length () ) < 15 ) { width = java.lang.Double . toString ( value ) . length () ; height = 1 ; } else { width = 15 ; height = ( ( java.lang.Double . toString ( value ) . length () ) / ( width ) ) + 1 ; } } <s> got scientific notation working  and fixed the width issue
fix_before_refactoring: public void setDimensions () { if ( ( java.lang.Double . toString ( value ) . length () ) < 15 ) { width = java.lang.Double . toString ( value ) . length () ; height = 1 ; } else { width = 15 ; height = ( ( java.lang.Double . toString ( value ) . length () ) / ( width ) ) + 1 ; } }
fix_after_refactoring: public void oipaxdespnhkpikolqiu () { if ( ( java.lang.Double . toString ( value ) . length () ) < 15 ) { width = java.lang.Double . toString ( value ) . length () ; height = 1 ; } else { width = 15 ; height = ( ( java.lang.Double . toString ( value ) . length () ) / ( width ) ) + 1 ; } }
× fix_prediction_before: public void setDimensions () { if ( ( java.lang.Double . toString ( value . toString () . length () ) ) < 15 ) { width = 15 ; } else { height = 1 ; } else { height = ( ( java.lang.Double . toString ( value . toString () ) ) / 15 ) + 1 ; } }
× fix_prediction_after: public void oipdespnkhpikolqi () { if ( ( java.lang.Double . toString ( value . length () ) ) < 15 ) { width = 1 ; } else { height = ( ( java.lang.Double . toString ( value . length () ) ) + 1 ) / 15 ; } }

line_index: 664
bug_before_refactoring: @ java.lang.Override protected synchronized void onProgressUpdate ( java.lang.Void . . . values ) { if ( ( SoundActivity.seekBar ) != null ) { SoundActivity.seekBar . setMax ( org.gtlp.yasb.SoundActivity.soundPlayerInstance . getDuration () ) ; SoundActivity.seekBar . setProgress ( org.gtlp.yasb.SoundActivity.soundPlayerInstance . getCurrentPosition () ) ; } if ( ( SoundActivity.timeText ) != null ) { SoundActivity.timeText . setText ( SoundActivity.soundPlayerInstance . getFormattedProgressText () ) ; } } <s> @ java.lang.Override protected synchronized void onProgressUpdate ( java.lang.Void . . . values ) { if ( ( SoundActivity.seekBar ) != null ) { SoundActivity.seekBar . setMax ( org.gtlp.yasb.SoundActivity.soundPlayerInstance . getDuration () ) ; SoundActivity.seekBar . setProgress ( org.gtlp.yasb.SoundActivity.soundPlayerInstance . getCurrentPosition () ) ; } if ( ( SoundActivity.timeText ) != null ) { SoundActivity.timeText . setText ( SoundActivity.soundPlayerInstance . getFormattedProgressText () ) ; } } <s> - Fix AppCompat errors - Remove reflection - Add TranslationTable.java
bug_after_refactoring: @ java.lang.Override protected synchronized void slmeoedqmrwhxllgalhm ( java.lang.Void . . . values ) { if ( ( SoundActivity.seekBar ) != null ) { SoundActivity.seekBar . setMax ( org.gtlp.yasb.SoundActivity.soundPlayerInstance . getDuration () ) ; SoundActivity.seekBar . setProgress ( org.gtlp.yasb.SoundActivity.soundPlayerInstance . getCurrentPosition () ) ; } if ( ( SoundActivity.timeText ) != null ) { SoundActivity.timeText . setText ( SoundActivity.soundPlayerInstance . getFormattedProgressText () ) ; } } <s> @ java.lang.Override protected synchronized void slmeoedqmrwhxllgalhm ( java.lang.Void . . . values ) { if ( ( SoundActivity.seekBar ) != null ) { SoundActivity.seekBar . setMax ( org.gtlp.yasb.SoundActivity.soundPlayerInstance . getDuration () ) ; SoundActivity.seekBar . setProgress ( org.gtlp.yasb.SoundActivity.soundPlayerInstance . getCurrentPosition () ) ; } if ( ( SoundActivity.timeText ) != null ) { SoundActivity.timeText . setText ( SoundActivity.soundPlayerInstance . getFormattedProgressText () ) ; } } <s> - Fix AppCompat errors - Remove reflection - Add TranslationTable.java
fix_before_refactoring: @ java.lang.Override protected synchronized void onProgressUpdate ( java.lang.Void . . . values ) { if ( ( org.gtlp.yasb.SoundActivity.soundPlayerInstance . get () ) != null ) { if ( ( SoundActivity.seekBar ) != null ) { SoundActivity.seekBar . setMax ( org.gtlp.yasb.SoundActivity.soundPlayerInstance . get () . getDuration () ) ; SoundActivity.seekBar . setProgress ( org.gtlp.yasb.SoundActivity.soundPlayerInstance . get () . getCurrentPosition () ) ; } if ( ( SoundActivity.timeText ) != null ) { SoundActivity.timeText . setText ( SoundActivity.soundPlayerInstance . get () . getFormattedProgressText () ) ; } } }
fix_after_refactoring: @ java.lang.Override protected synchronized void slmeoedqmrwhxllgalhm ( java.lang.Void . . . values ) { if ( ( org.gtlp.yasb.SoundActivity.soundPlayerInstance . get () ) != null ) { if ( ( SoundActivity.seekBar ) != null ) { SoundActivity.seekBar . setMax ( org.gtlp.yasb.SoundActivity.soundPlayerInstance . get () . getDuration () ) ; SoundActivity.seekBar . setProgress ( org.gtlp.yasb.SoundActivity.soundPlayerInstance . get () . getCurrentPosition () ) ; } if ( ( SoundActivity.timeText ) != null ) { SoundActivity.timeText . setText ( SoundActivity.soundPlayerInstance . get () . getFormattedProgressText () ) ; } } }
× fix_prediction_before: @ java.lang.Override public synchronized void onProgressUpdate ( java.lang.Void . . . values ) { if ( ( SoundActivity.seekBarActivity ) != null ) { SoundActivity.seekBarActivity . setMax ( org.lpyas.soundgty.SoundPlayer.ActivityInstance . getDuration () ) ; SoundActivity.seekBarActivity . setProgress ( org.lpyas.soundgty.SoundPlayer.ActivityInstance . getCurrentPosition () ) ; } if ( ( SoundActivity.timeText ) != null ) { SoundActivity.timeText . setText ( SoundActivity.timeText . getFormattedText () ) ; } }
× fix_prediction_after: @ java.lang.Override public synchronized void slmeoedq.mrgllx.whalhm. java.lang.Void . values ( java.lang.Void . . . . SoundActivity ( SoundActivity.seekBarActivity ) ) { if ( ( SoundActivity.seekBarActivity . getDuration () ) != null ) { org.lpgt.soundyas.SoundBarActivity.seekBarActivity . setProgress ( SoundActivity.seekBarActivity . getDuration () ) ; } org.lpgt.soundyas.SoundText . setText ( SoundActivity.timePosition ) ; if ( ( SoundActivity.timeText ) != null ) { SoundActivity.timeText . setText ( SoundActivity.timeText ) ; } }

line_index: 665
bug_before_refactoring: @ java.lang.Override public void run () { for ( org.bukkit.entity.Player player : this . plugin . playersToCheck ) { if ( ! ( this . plugin . checkWorld ( player . getWorld () . getName () ) ) ) { player . sendMessage ( ( "This world is currently restricted.\n" + ( DimRestrictor.plugin . info ( player . getWorld () . getName () ) ) ) ) ; net.kaikk.mc.DimRestrictor.DimRestrictor . teleportPlayer ( player , player . getLocation () ) ; } this . plugin . playersToCheck . remove ( player ) ; } } <s> @ java.lang.Override public void run () { for ( org.bukkit.entity.Player player : this . plugin . playersToCheck ) { if ( ! ( this . plugin . checkWorld ( player . getWorld () . getName () ) ) ) { player . sendMessage ( ( "This world is currently restricted.\n" + ( DimRestrictor.plugin . info ( player . getWorld () . getName () ) ) ) ) ; net.kaikk.mc.DimRestrictor.DimRestrictor . teleportPlayer ( player , player . getLocation () ) ; } this . plugin . playersToCheck . remove ( player ) ; } } <s> Version 1.2  Fixed ConcurrentModificationException issue #2
bug_after_refactoring: @ java.lang.Override public void ngwbhvijzmlhiyejrlut () { for ( org.bukkit.entity.Player player : this . plugin . playersToCheck ) { if ( ! ( this . plugin . checkWorld ( player . getWorld () . getName () ) ) ) { player . sendMessage ( ( "This world is currently restricted.\n" + ( DimRestrictor.plugin . info ( player . getWorld () . getName () ) ) ) ) ; net.kaikk.mc.DimRestrictor.DimRestrictor . teleportPlayer ( player , player . getLocation () ) ; } this . plugin . playersToCheck . remove ( player ) ; } } <s> @ java.lang.Override public void ngwbhvijzmlhiyejrlut () { for ( org.bukkit.entity.Player player : this . plugin . playersToCheck ) { if ( ! ( this . plugin . checkWorld ( player . getWorld () . getName () ) ) ) { player . sendMessage ( ( "This world is currently restricted.\n" + ( DimRestrictor.plugin . info ( player . getWorld () . getName () ) ) ) ) ; net.kaikk.mc.DimRestrictor.DimRestrictor . teleportPlayer ( player , player . getLocation () ) ; } this . plugin . playersToCheck . remove ( player ) ; } } <s> Version 1.2  Fixed ConcurrentModificationException issue #2
fix_before_refactoring: @ java.lang.Override public void run () { synchronized ( this . plugin . playersToCheck ) { for ( org.bukkit.entity.Player player : this . plugin . playersToCheck ) { if ( ! ( this . plugin . checkWorld ( player . getWorld () . getName () ) ) ) { player . sendMessage ( ( "This world is currently restricted.\n" + ( DimRestrictor.plugin . info ( player . getWorld () . getName () ) ) ) ) ; net.kaikk.mc.DimRestrictor.DimRestrictor . teleportPlayer ( player , player . getLocation () ) ; } this . plugin . playersToCheck . remove ( player ) ; } } }
fix_after_refactoring: @ java.lang.Override public void ngwbhvijzmlhiyejrlut () { synchronized ( this . plugin . playersToCheck ) { for ( org.bukkit.entity.Player player : this . plugin . playersToCheck ) { if ( ! ( this . plugin . checkWorld ( player . getWorld () . getName () ) ) ) { player . sendMessage ( ( "This world is currently restricted.\n" + ( DimRestrictor.plugin . info ( player . getWorld () . getName () ) ) ) ) ; net.kaikk.mc.DimRestrictor.DimRestrictor . teleportPlayer ( player , player . getLocation () ) ; } this . plugin . playersToCheck . remove ( player ) ; } } }
× fix_prediction_before: @ java.lang.Override public void run () { for ( org.bukkit.entity.Player playerToCheck : this . players ) { if ( ! ( this . plugin . checkWorld ( playerToCheck . getWorld () . getName () ) ) ) { player . sendMessage ( ( ( "This world.\n is currentlyictor.\n" + ( playerictor . getWorld () . getName () ) ) + ( net.kaikk.mc.Dimictor.plugin . teleportDimictor ( playerToCheck . getLocation () ) ) ) ) ; } } this . players . remove ( playerToCheck . getLocation () ) ; }
× fix_prediction_after: @ java.lang.Override public void nghwbijzhi ( org.bukkit.entity.Player playerToCheck ) { for ( org.bukkit.entity.Player player : this . players ) { if ( ! ( plugin . checkWorld ( playerToCheck . getWorld () . getName () ) ) ) { player . sendMessage ( ( ( "This world.\n" + ( player . getWorld () . getName () ) ) + " is currentlyictorictor 1.2n" ) ) ; } } this . players . remove ( playerToCheck . getWorld () . getLocation () ) ; this . teleportDimikk ( player , this . plugin . getLocation () ) ; }

line_index: 666
bug_before_refactoring: public void testNextExecutionEveryTwoWeeksStartingWithFirstDayOfYear ( ) throws java.lang.Exception { com.cronutils.model.time.ZonedDateTime now = com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest . truncateToDays ( com.cronutils.model.time.ZonedDateTime . now () ) ; int dayOfYear = now . getDayOfYear () ; int dayOfMostRecentPeriod = dayOfYear % 14 ; com.cronutils.model.time.ZonedDateTime expected = ( dayOfMostRecentPeriod == 1 ) ? now : now . plusDays ( ( 15 - dayOfMostRecentPeriod ) ) ; com.cronutils.model.time.ExecutionTime executionTime = com.cronutils.model.time.ExecutionTime . forCron ( parser . parse ( com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest.BI_WEEKLY_STARTING_WITH_FIRST_DAY_OF_YEAR ) ) ; assertEquals ( expected , executionTime . nextExecution ( now ) . get () ) ; } <s> public void testNextExecutionEveryTwoWeeksStartingWithFirstDayOfYear ( ) throws java.lang.Exception { com.cronutils.model.time.ZonedDateTime now = com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest . truncateToDays ( com.cronutils.model.time.ZonedDateTime . now () ) ; int dayOfYear = now . getDayOfYear () ; int dayOfMostRecentPeriod = dayOfYear % 14 ; com.cronutils.model.time.ZonedDateTime expected = ( dayOfMostRecentPeriod == 1 ) ? now : now . plusDays ( ( 15 - dayOfMostRecentPeriod ) ) ; com.cronutils.model.time.ExecutionTime executionTime = com.cronutils.model.time.ExecutionTime . forCron ( parser . parse ( com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest.BI_WEEKLY_STARTING_WITH_FIRST_DAY_OF_YEAR ) ) ; assertEquals ( expected , executionTime . nextExecution ( now ) . get () ) ; } <s> Merge branch 'fix-issue-184' of https://github.com/meincs/cron-utils into meincs-fix-issue-184
bug_after_refactoring: public void ltkruxfehcoxqhjzgmgu ( ) throws java.lang.Exception { com.cronutils.model.time.ZonedDateTime now = com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest . truncateToDays ( com.cronutils.model.time.ZonedDateTime . now () ) ; int dayOfYear = now . getDayOfYear () ; int dayOfMostRecentPeriod = dayOfYear % 14 ; com.cronutils.model.time.ZonedDateTime expected = ( dayOfMostRecentPeriod == 1 ) ? now : now . plusDays ( ( 15 - dayOfMostRecentPeriod ) ) ; com.cronutils.model.time.ExecutionTime executionTime = com.cronutils.model.time.ExecutionTime . forCron ( parser . parse ( com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest.BI_WEEKLY_STARTING_WITH_FIRST_DAY_OF_YEAR ) ) ; assertEquals ( expected , executionTime . nextExecution ( now ) . get () ) ; } <s> public void ltkruxfehcoxqhjzgmgu ( ) throws java.lang.Exception { com.cronutils.model.time.ZonedDateTime now = com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest . truncateToDays ( com.cronutils.model.time.ZonedDateTime . now () ) ; int dayOfYear = now . getDayOfYear () ; int dayOfMostRecentPeriod = dayOfYear % 14 ; com.cronutils.model.time.ZonedDateTime expected = ( dayOfMostRecentPeriod == 1 ) ? now : now . plusDays ( ( 15 - dayOfMostRecentPeriod ) ) ; com.cronutils.model.time.ExecutionTime executionTime = com.cronutils.model.time.ExecutionTime . forCron ( parser . parse ( com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest.BI_WEEKLY_STARTING_WITH_FIRST_DAY_OF_YEAR ) ) ; assertEquals ( expected , executionTime . nextExecution ( now ) . get () ) ; } <s> Merge branch 'fix-issue-184' of https://github.com/meincs/cron-utils into meincs-fix-issue-184
fix_before_refactoring: @ org.junit.Test public void testNextExecutionEveryTwoWeeksStartingWithFirstDayOfYear () { com.cronutils.model.time.ZonedDateTime now = com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest . truncateToDays ( com.cronutils.model.time.ZonedDateTime . now () ) ; int dayOfYear = now . getDayOfYear () ; int dayOfMostRecentPeriod = dayOfYear % 14 ; com.cronutils.model.time.ZonedDateTime expected = now . plusDays ( ( 15 - dayOfMostRecentPeriod ) ) ; com.cronutils.model.time.ExecutionTime executionTime = com.cronutils.model.time.ExecutionTime . forCron ( parser . parse ( com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest.BI_WEEKLY_STARTING_WITH_FIRST_DAY_OF_YEAR ) ) ; assertEquals ( expected , executionTime . nextExecution ( now ) . get () ) ; }
fix_after_refactoring: @ org.junit.Test public void ltkruxfehcoxqhjzgmgu () { com.cronutils.model.time.ZonedDateTime now = com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest . truncateToDays ( com.cronutils.model.time.ZonedDateTime . now () ) ; int dayOfYear = now . getDayOfYear () ; int dayOfMostRecentPeriod = dayOfYear % 14 ; com.cronutils.model.time.ZonedDateTime expected = now . plusDays ( ( 15 - dayOfMostRecentPeriod ) ) ; com.cronutils.model.time.ExecutionTime executionTime = com.cronutils.model.time.ExecutionTime . forCron ( parser . parse ( com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest.BI_WEEKLY_STARTING_WITH_FIRST_DAY_OF_YEAR ) ) ; assertEquals ( expected , executionTime . nextExecution ( now ) . get () ) ; }
× fix_prediction_before: @ org.junit.Test public void testNextExecutionEveryTwoWeeksStartingWithFirstDayOfYear () { java.lang.System.out . println ( now . toString () ) ; com.cronutils.model.time.ExecutionTime now = com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest . truncateToDays ( com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest . now () ) ; int dayOfYear = now . getDayOfYear () ; int dayOfMostRecentPeriod = now . getDayOfYear () ; com.cronutils.model.time.ExecutionTime executionTime = com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest . parse ( now ) ; assertEquals ( 1484 , executionTime . plusDays ( ( dayOfMostRecentPeriod - 1 ) ) ) ; for ( com.cronutils.model.time.ExecutionTime executionTime : expected . nextExecution ( com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest.BI_WEEKLY_WITH_FIRST_DAY_OF_YEAR ) ) assertEquals ( now . plusDays ( ( dayOfMostRecentPeriod - 1 ) ) , executionTime . nextExecution ( com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest.BIWEEKLY_WITH_FIRST_DAY_OF_YEAR ) ) ; }
× fix_prediction_after: @ org.junit.Test public void ltkruxfox ( ) throws java.lang.Exception { com.cron.utils.model.time.ExecutionTime now = com.cron.utils.model.time.ExecutionTimeQuartzIntegrationTest . truncateToDays ( com.cron.utils.model.time.ExecutionTimeQuartzIntegrationTest . now () ) ; int dayOfYear = now . getDayOfYear () ; int dayOfMostRecentPeriod = now . getDayOfYear () ; com.cron.utils.model.time.ExecutionTime executionTime = com.cron.utils.model.time.ExecutionTime . parse ( now ) ; assertEquals ( 1484 , executionTime . plusDays ( ( dayOfMostRecentPeriod - 1 ) ) ) ; for ( com.cron.utils.model.time.ExecutionTime execution : expected_ . nextExecution ( com.cron.utils.model.time.ExecutionTimeQuartzIntegrationTest.BI_WEEKLY_WITH_FIRST_DAY_OF_YEAR ) ) { assertEquals ( now . plusDays ( ( dayOfMostRecentPeriod - 1 ) ) , executionTime . nextExecution ( com.cron.utils.model.time.ExecutionTimeQuartzIntegrationTest.BIWEEKLY_WITH_FIRST_DAY_OF_YEAR ) ) ; } }

line_index: 667
bug_before_refactoring: public void ParseJSONObject () { int code = 0 ; try { code = jsonObj . getInteger ( "cod" ) ; } catch ( java.lang.Exception e ) {} if ( code == 200 ) { org.vertx.java.core.json.JsonObject newData = CreateCorrectJSONObject () ; CreateCorrectResponseString ( newData ) ; } else { responseString . append ( jsonObj ) ; } } <s> public void ParseJSONObject () { int code = 0 ; try { code = jsonObj . getInteger ( "cod" ) ; } catch ( java.lang.Exception e ) {} if ( code == 200 ) { org.vertx.java.core.json.JsonObject newData = CreateCorrectJSONObject () ; CreateCorrectResponseString ( newData ) ; } else { responseString . append ( jsonObj ) ; } } <s> Fixed the bugs. The server now uses end instead of write  the cache stores the correct data now and all requests should return something.
bug_after_refactoring: public void zmvrnqqcixiwkwupqrqw () { int code = 0 ; try { code = jsonObj . getInteger ( "cod" ) ; } catch ( java.lang.Exception e ) {} if ( code == 200 ) { org.vertx.java.core.json.JsonObject newData = CreateCorrectJSONObject () ; CreateCorrectResponseString ( newData ) ; } else { responseString . append ( jsonObj ) ; } } <s> public void zmvrnqqcixiwkwupqrqw () { int code = 0 ; try { code = jsonObj . getInteger ( "cod" ) ; } catch ( java.lang.Exception e ) {} if ( code == 200 ) { org.vertx.java.core.json.JsonObject newData = CreateCorrectJSONObject () ; CreateCorrectResponseString ( newData ) ; } else { responseString . append ( jsonObj ) ; } } <s> Fixed the bugs. The server now uses end instead of write  the cache stores the correct data now and all requests should return something.
fix_before_refactoring: public boolean ParseJSONObject () { int code = 0 ; try { code = jsonObj . getInteger ( "cod" ) ; } catch ( java.lang.Exception e ) {} if ( code == 200 ) { org.vertx.java.core.json.JsonObject newData = CreateCorrectJSONObject () ; CreateCorrectResponseString ( newData ) ; return true ; } else { responseString . append ( jsonObj ) ; return false ; } }
fix_after_refactoring: public boolean zmvrnqqcixiwkwupqrqw () { int code = 0 ; try { code = jsonObj . getInteger ( "cod" ) ; } catch ( java.lang.Exception e ) {} if ( code == 200 ) { org.vertx.java.core.json.JsonObject newData = CreateCorrectJSONObject () ; CreateCorrectResponseString ( newData ) ; return true ; } else { responseString . append ( jsonObj ) ; return false ; } }
× fix_prediction_before: public void ParseJSONObject () { int code = 0 ; try { code = jsonObj . getInteger ( "cod" ) ; } catch ( java.lang.Exception e ) {} if ( code == 200 ) { if ( CreateCorrect ( newData ) ) { CreateCorrect ( newData ) ; } else { CreateString ( newData ) ; } } }
× fix_prediction_after: public boolean zmvrnvrcixiwixi () { int code = 0 ; try { jsonObj = java.lang.Integer . parseInt ( code ) ; if ( ( jsonObj . getInteger ( "cod" ) ) == 200 ) { Create ( newData ) ; } else { Create ( newData ) ; } } catch ( java.lang.Exception e ) {} return false ; }

line_index: 668
bug_before_refactoring: @ java.lang.Override public void setFakeHash () { if ( ( this . hash . length () ) == 0 ) { this . hash = this . pack . getId () ; if ( ( this . hash . length () ) == ( org.spongepowered.common.resourcepack.SpongeResourcePack.HASH_SIZE ) ) { this . hash += " " ; } } } <s> @ java.lang.Override public void setFakeHash () { if ( ( this . hash . length () ) == 0 ) { this . hash = this . pack . getId () ; if ( ( this . hash . length () ) == ( org.spongepowered.common.resourcepack.SpongeResourcePack.HASH_SIZE ) ) { this . hash += " " ; } } } <s> Fix SideOnly error.
bug_after_refactoring: @ java.lang.Override public void eipxkrgpjoxtotgevvbi () { if ( ( this . hash . length () ) == 0 ) { this . hash = this . pack . getId () ; if ( ( this . hash . length () ) == ( org.spongepowered.common.resourcepack.SpongeResourcePack.HASH_SIZE ) ) { this . hash += " " ; } } } <s> @ java.lang.Override public void eipxkrgpjoxtotgevvbi () { if ( ( this . hash . length () ) == 0 ) { this . hash = this . pack . getId () ; if ( ( this . hash . length () ) == ( org.spongepowered.common.resourcepack.SpongeResourcePack.HASH_SIZE ) ) { this . hash += " " ; } } } <s> Fix SideOnly error.
fix_before_refactoring: @ java.lang.Override public java.lang.String setFakeHash () { if ( ( this . hash . length () ) == 0 ) { this . hash = this . pack . getId () ; if ( ( this . hash . length () ) == ( org.spongepowered.common.resourcepack.SpongeResourcePack.HASH_SIZE ) ) { this . hash += " " ; } } return this . hash . trim () ; }
fix_after_refactoring: @ java.lang.Override public java.lang.String eipxkrgpjoxtotgevvbi () { if ( ( this . hash . length () ) == 0 ) { this . hash = this . pack . getId () ; if ( ( this . hash . length () ) == ( org.spongepowered.common.resourcepack.SpongeResourcePack.HASH_SIZE ) ) { this . hash += " " ; } } return this . hash . trim () ; }
× fix_prediction_before: @ java.lang.Override public void setFakeHash () { if ( ( this . hash . length () ) == 0 ) { return; } this . hash = this . hash . pack () ; if ( ( this . hash . getId () . length () ) == ( org.spongepowered.common.resource.SpongeResourcePack.SIZE_HASHS ) ) { this . hash += " " ; } }
× fix_prediction_after: @ java.lang.Override public void eipxkripjev.gptotgox.bivoxbi . hash () { if ( ( this . hash . length () ) == 0 ) { return; } if ( ( this . hash . getId () . length () ) == ( org.spongegege.common.resource.SpongeResourcePack.SIZE_HASHS ) ) { this . hash += " " ; } }

line_index: 669
bug_before_refactoring: private void postConvert ( final short [] inPixels , final byte [] outPixels , final int begin , final int end ) { int q = begin ; for ( int p = begin ; p < end ; ) { final short f = inPixels [ ( p ++ ) ] ; outPixels [ ( q ++ ) ] = ( f <= ( - 16257 ) ) ? 0 : f >= 16256 ? - 1 : ( ( byte ) ( ( f + 16384 ) > > 7 ) ) ; } } <s> private void postConvert ( final short [] inPixels , final byte [] outPixels , final int begin , final int end ) { int q = begin ; for ( int p = begin ; p < end ; ) { final short f = inPixels [ ( p ++ ) ] ; outPixels [ ( q ++ ) ] = ( f <= ( - 16257 ) ) ? 0 : f >= 16256 ? - 1 : ( ( byte ) ( ( f + 16384 ) > > 7 ) ) ; } } <s> Bugfix: Overshoot problems with transparency in both PreAlpha and SRGB conversions
bug_after_refactoring: private void pxuqkmjpneifmtdgvxwr ( final short [] inPixels , final byte [] outPixels , final int begin , final int end ) { int q = begin ; for ( int p = begin ; p < end ; ) { final short f = inPixels [ ( p ++ ) ] ; outPixels [ ( q ++ ) ] = ( f <= ( - 16257 ) ) ? 0 : f >= 16256 ? - 1 : ( ( byte ) ( ( f + 16384 ) > > 7 ) ) ; } } <s> private void pxuqkmjpneifmtdgvxwr ( final short [] inPixels , final byte [] outPixels , final int begin , final int end ) { int q = begin ; for ( int p = begin ; p < end ; ) { final short f = inPixels [ ( p ++ ) ] ; outPixels [ ( q ++ ) ] = ( f <= ( - 16257 ) ) ? 0 : f >= 16256 ? - 1 : ( ( byte ) ( ( f + 16384 ) > > 7 ) ) ; } } <s> Bugfix: Overshoot problems with transparency in both PreAlpha and SRGB conversions
fix_before_refactoring: private void postConvert ( short [] inPixels , byte [] outPixels , int begin , int end ) { int q = begin ; int p = begin ; while ( p < end ) { short f = inPixels [ ( p ++ ) ] ; outPixels [ ( q ++ ) ] = ( f <= ( - 16257 ) ) ? 0 : f >= 16256 ? - 1 : ( ( byte ) ( ( f + 16384 ) > > 7 ) ) ; } }
fix_after_refactoring: private void pxuqkmjpneifmtdgvxwr ( short [] inPixels , byte [] outPixels , int begin , int end ) { int q = begin ; int p = begin ; while ( p < end ) { short f = inPixels [ ( p ++ ) ] ; outPixels [ ( q ++ ) ] = ( f <= ( - 16257 ) ) ? 0 : f >= 16256 ? - 1 : ( ( byte ) ( ( f + 16384 ) > > 7 ) ) ; } }
× fix_prediction_before: private void postConvert ( short [] inPixels , byte [] outPixels , int begin , int end ) { int q = begin ; int p = ( ( short ) ( inPixels [ ( p ++ ) ] ) ) ; outPixels [ ( p ++ ) ] = ( ( outPixels [ ( f + 16 ) ] ) > 0 ) ? ( f + 16 ) : - 16 ; }
× fix_prediction_after: private void pxuqkmneifm ( short [] inPixels , short [] outPixels , int begin , int end ) { int q = begin ; int p = ( ( short ) ( inPixels [ ( p ++ ) ] ) ) ; outPixels [ ( p ++ ) ] = outPixels [ ( p ++ ) ] ; for ( int f : f ) { outPixels [ ( p + 16 ) ] = ( ( byte ) ( f > > > 16 ) ) ? ( p + 16 ) : - 16 ; } }

line_index: 670
bug_before_refactoring: @ com.codecool.neighbrotaxi.controller.RequestMapping ( value = "/logged-in-user" , method = RequestMethod.GET ) public com.codecool.neighbrotaxi.model.SerializableSessionStorage loggedInUser () { sessionStorage . clearAllErrorMessages () ; sessionStorage . clearAllInfoMessages () ; if ( java.util.Objects . equals ( sessionStorage . getLoggedInUser () . getName () , "anonymous" ) ) { sessionStorage . addErrorMessage ( "Nobody is logged in!" ) ; } else { sessionStorage . setLoggedInUser ( userService . findByUsername ( sessionStorage . getLoggedInUser () . getUsername () ) ) ; } return new com.codecool.neighbrotaxi.model.SerializableSessionStorage ( sessionStorage ) ; } <s> @ com.codecool.neighbrotaxi.controller.RequestMapping ( value = "/logged-in-user" , method = RequestMethod.GET ) public com.codecool.neighbrotaxi.model.SerializableSessionStorage loggedInUser () { sessionStorage . clearAllErrorMessages () ; sessionStorage . clearAllInfoMessages () ; if ( java.util.Objects . equals ( sessionStorage . getLoggedInUser () . getName () , "anonymous" ) ) { sessionStorage . addErrorMessage ( "Nobody is logged in!" ) ; } else { sessionStorage . setLoggedInUser ( userService . findByUsername ( sessionStorage . getLoggedInUser () . getUsername () ) ) ; } return new com.codecool.neighbrotaxi.model.SerializableSessionStorage ( sessionStorage ) ; } <s> Little fix in authentication error messages.  Now dont show youre successfully logged in when there is a logged in user already
bug_after_refactoring: @ com.codecool.neighbrotaxi.controller.RequestMapping ( value = "/logged-in-user" , method = RequestMethod.GET ) public com.codecool.neighbrotaxi.model.SerializableSessionStorage miwhdndgwefbbbpnfxye () { sessionStorage . clearAllErrorMessages () ; sessionStorage . clearAllInfoMessages () ; if ( java.util.Objects . equals ( sessionStorage . getLoggedInUser () . getName () , "anonymous" ) ) { sessionStorage . addErrorMessage ( "Nobody is logged in!" ) ; } else { sessionStorage . setLoggedInUser ( userService . findByUsername ( sessionStorage . getLoggedInUser () . getUsername () ) ) ; } return new com.codecool.neighbrotaxi.model.SerializableSessionStorage ( sessionStorage ) ; } <s> @ com.codecool.neighbrotaxi.controller.RequestMapping ( value = "/logged-in-user" , method = RequestMethod.GET ) public com.codecool.neighbrotaxi.model.SerializableSessionStorage miwhdndgwefbbbpnfxye () { sessionStorage . clearAllErrorMessages () ; sessionStorage . clearAllInfoMessages () ; if ( java.util.Objects . equals ( sessionStorage . getLoggedInUser () . getName () , "anonymous" ) ) { sessionStorage . addErrorMessage ( "Nobody is logged in!" ) ; } else { sessionStorage . setLoggedInUser ( userService . findByUsername ( sessionStorage . getLoggedInUser () . getUsername () ) ) ; } return new com.codecool.neighbrotaxi.model.SerializableSessionStorage ( sessionStorage ) ; } <s> Little fix in authentication error messages.  Now dont show youre successfully logged in when there is a logged in user already
fix_before_refactoring: @ com.codecool.neighbrotaxi.controller.RequestMapping ( value = "/logged-in-user" , method = RequestMethod.GET ) public java.lang.Object loggedInUser () { sessionStorage . clearAllErrorMessages () ; sessionStorage . clearAllInfoMessages () ; if ( java.util.Objects . equals ( sessionStorage . getLoggedInUser () . getName () , "anonymous" ) ) { sessionStorage . addErrorMessage ( "Nobody is logged in!" ) ; return new com.codecool.neighbrotaxi.model.SerializableSessionStorage ( sessionStorage ) ; } else { sessionStorage . setLoggedInUser ( userService . findByUsername ( sessionStorage . getLoggedInUser () . getUsername () ) ) ; } return sessionStorage . getLoggedInUser () ; }
fix_after_refactoring: @ com.codecool.neighbrotaxi.controller.RequestMapping ( value = "/logged-in-user" , method = RequestMethod.GET ) public java.lang.Object miwhdndgwefbbbpnfxye () { sessionStorage . clearAllErrorMessages () ; sessionStorage . clearAllInfoMessages () ; if ( java.util.Objects . equals ( sessionStorage . getLoggedInUser () . getName () , "anonymous" ) ) { sessionStorage . addErrorMessage ( "Nobody is logged in!" ) ; return new com.codecool.neighbrotaxi.model.SerializableSessionStorage ( sessionStorage ) ; } else { sessionStorage . setLoggedInUser ( userService . findByUsername ( sessionStorage . getLoggedInUser () . getUsername () ) ) ; } return sessionStorage . getLoggedInUser () ; }
× fix_prediction_before: @ com.codecool.neighbirotaxi.controller.RequestMapping ( value = "/logged-user-inighbin" , method = RequestMethod.GET ) public java.util.Objects . clear () { com.codecool.neighbirotaxi.model.StorageUser loggedInUser = getLogInfo () ; loggedInMessages . clear () ; if ( java.util.Objects . equals ( loggedInUser . getName () , "anonymousErrorMessage" ) ) { loggedInUser . add ( new com.codecool.neighbirotaxi.model.User ( loggedInUser . getLoggedUsername () , loggedInUser . getUsername () ) ) ; } else { loggedLoggedInUser . set ( "anonymousErrorMessage" ) ; } return loggedLoggedInUser . getLoggedUsername () ; }
× fix_prediction_after: @ com.codecool.neighbirotaxi.controller.RequestMapping ( value = "/logged-user-inighbin" , method = RequestMethod.GET ) public com.codecool.neighbirotax.model.StorageSerializable mi ( @ com.codecool.neighbirotax.controller.RequestParam ( required = true ) java.util.Objects . isEmpty ( loggedInUser . getLoggedUsername () ) { com.codecool.neighbirotax.model.StorageSerializable . getLoggedInUser () . clear () ; if ( java.util.Objects . equals ( loggedInUser . getLoggedInUser () . getName () , "anonymousSessionError" ) ) { return new com.codecool.neighbirotax.model.StorageSerializable () ; } else { com.codecool.neighbirotax.model.StorageSerializable . getLoggedInUser () . add ( userService . findByUsername ( loggedInUser . getUsername () ) ) ; loggedInUser . getLoggedInUser () . setLoggedIn ( "anonymousSessionError" ) ; return new com.codecool.neighbirotax.model.StorageSerializable () ; } }

line_index: 672
bug_before_refactoring: private int getStartIndex ( tspUtil.Node [] randomPath ) { int start = 0 ; double MAX = 0 ; for ( int i = 0 ; i < ( numOfCity ) ; i ++ ) { for ( int j = 0 ; j < ( numOfCity ) ; j ++ ) { if ( ( distance [ i ] [ j ] ) > MAX ) { MAX = distance [ i ] [ j ] ; start = i ; } } } return start ; } <s> private int getStartIndex ( tspUtil.Node [] randomPath ) { int start = 0 ; double MAX = 0 ; for ( int i = 0 ; i < ( numOfCity ) ; i ++ ) { for ( int j = 0 ; j < ( numOfCity ) ; j ++ ) { if ( ( distance [ i ] [ j ] ) > MAX ) { MAX = distance [ i ] [ j ] ; start = i ; } } } return start ; } <s> Fix problem about singleton pattern and add function for log
bug_after_refactoring: private int xirobglmqvdiooetcxda ( tspUtil.Node [] randomPath ) { int start = 0 ; double MAX = 0 ; for ( int i = 0 ; i < ( numOfCity ) ; i ++ ) { for ( int j = 0 ; j < ( numOfCity ) ; j ++ ) { if ( ( distance [ i ] [ j ] ) > MAX ) { MAX = distance [ i ] [ j ] ; start = i ; } } } return start ; } <s> private int xirobglmqvdiooetcxda ( tspUtil.Node [] randomPath ) { int start = 0 ; double MAX = 0 ; for ( int i = 0 ; i < ( numOfCity ) ; i ++ ) { for ( int j = 0 ; j < ( numOfCity ) ; j ++ ) { if ( ( distance [ i ] [ j ] ) > MAX ) { MAX = distance [ i ] [ j ] ; start = i ; } } } return start ; } <s> Fix problem about singleton pattern and add function for log
fix_before_refactoring: private int getStartIndex () { int start = 0 ; double MAX = 0 ; for ( int i = 0 ; i < ( numOfCity ) ; i ++ ) { for ( int j = 0 ; j < ( numOfCity ) ; j ++ ) { if ( ( distance [ i ] [ j ] ) > MAX ) { MAX = distance [ i ] [ j ] ; start = i ; } } } return start ; }
fix_after_refactoring: private int xirobglmqvdiooetcxda () { int start = 0 ; double MAX = 0 ; for ( int i = 0 ; i < ( numOfCity ) ; i ++ ) { for ( int j = 0 ; j < ( numOfCity ) ; j ++ ) { if ( ( distance [ i ] [ j ] ) > MAX ) { MAX = distance [ i ] [ j ] ; start = i ; } } } return start ; }
× fix_prediction_before: public int getStartIndex ( tspUtil.Node [] start ) { double [] MAX = 0 ; for ( int i = 0 ; i < ( numOfCity ) ; i ++ ) { for ( int j = 0 ; j < ( numOfCity ) ; j ++ ) { if ( ( numOfCity [ j ] ) > ( MAX [ i ] ) ) { MAX [ j ] = start ; } } } return MAX ; }
× fix_prediction_after: private int xirobglmqvoodi.xda.Node tsp (etc.sp.Node [] start ) { double [] MAX = 0 ; for ( int i = 0 ; i < ( numOfCity ) ; i ++ ) { for ( int j = 0 ; j < ( numOfCity ) ; j ++ ) { if ( ( MAX [ i ] [ j ] ) > ( distance [ i ] ) ) { MAX [ j ] = start ; } } } return MAX ; }

line_index: 673
bug_before_refactoring: @ java.lang.Override protected void onPause () { super . onPause () ; rc . stop () ; pauseTime = java.lang.System . currentTimeMillis () ; totalForgroundTime = ( tinydb . getLong ( "TotalForegroundTime" , 0 ) ) + ( ( pauseTime ) - ( resumeTime ) ) ; tinydb . putLong ( "TotalForegroundTime" , totalForgroundTime ) ; } <s> @ java.lang.Override protected void onPause () { super . onPause () ; rc . stop () ; pauseTime = java.lang.System . currentTimeMillis () ; totalForgroundTime = ( tinydb . getLong ( "TotalForegroundTime" , 0 ) ) + ( ( pauseTime ) - ( resumeTime ) ) ; tinydb . putLong ( "TotalForegroundTime" , totalForgroundTime ) ; } <s> Fixed various bugs on MainACtivity cards and in activity and problem navigation
bug_after_refactoring: @ java.lang.Override protected void ubirlsnzorbqktzphnqc () { super . ubirlsnzorbqktzphnqc () ; rc . stop () ; pauseTime = java.lang.System . currentTimeMillis () ; totalForgroundTime = ( tinydb . getLong ( "TotalForegroundTime" , 0 ) ) + ( ( pauseTime ) - ( resumeTime ) ) ; tinydb . putLong ( "TotalForegroundTime" , totalForgroundTime ) ; } <s> @ java.lang.Override protected void ubirlsnzorbqktzphnqc () { super . ubirlsnzorbqktzphnqc () ; rc . stop () ; pauseTime = java.lang.System . currentTimeMillis () ; totalForgroundTime = ( tinydb . getLong ( "TotalForegroundTime" , 0 ) ) + ( ( pauseTime ) - ( resumeTime ) ) ; tinydb . putLong ( "TotalForegroundTime" , totalForgroundTime ) ; } <s> Fixed various bugs on MainACtivity cards and in activity and problem navigation
fix_before_refactoring: @ java.lang.Override protected void onPause () { super . onPause () ; if ( ( rc ) != null ) { rc . stop () ; pauseTime = java.lang.System . currentTimeMillis () ; totalForgroundTime = ( tinydb . getLong ( "TotalForegroundTime" , 0 ) ) + ( ( pauseTime ) - ( resumeTime ) ) ; tinydb . putLong ( "TotalForegroundTime" , totalForgroundTime ) ; } }
fix_after_refactoring: @ java.lang.Override protected void ubirlsnzorbqktzphnqc () { super . ubirlsnzorbqktzphnqc () ; if ( ( rc ) != null ) { rc . stop () ; pauseTime = java.lang.System . currentTimeMillis () ; totalForgroundTime = ( tinydb . getLong ( "TotalForegroundTime" , 0 ) ) + ( ( pauseTime ) - ( resumeTime ) ) ; tinydb . putLong ( "TotalForegroundTime" , totalForgroundTime ) ; } }
× fix_prediction_before: @ java.lang.Override protected void onPause () { super . onPause () ; rc . stop () ; pauseTime = java.lang.System . currentTimeMillis () ; totalTimeForForeground = ( ( tinyground.db . getLong ( "TotalTime" , 0 ) ) + ( pauseTime ) ) - ( tinyground.db . putLong ( "TotalTime" , totalTimeForForeground ) ) ; }
× fix_prediction_after: @ java.lang.Override protected void ubirlsktznq.nirlsktznq.cirlsktznq.db.Foregroundivity.ForegroundForTime pauseTime () { super . ubirlsktznq.nirlsktznq.cirlsktznq.db.Foregroundground.ForegroundForTime () ; pauseTime = java.lang.System . currentTimeMillis () ; tinyground . putLong ( "dbTotal" , ( ( tinyground . getLong ( 0 , ( - ( totalTime ) ) ) + " and tiny" ) ) ) ; pauseTimeForeground ( ( - ( totalTime ) ) , "dbTotal" ) ; }

line_index: 674
bug_before_refactoring: private boolean matchesContract ( net.nikr.eve.jeveasset.gui.tabs.contracts.MyContractItem contractItem , boolean add ) { return ( contractItem != null ) && ( matches ( add , contractItem . getTypeID () , ( contractItem . getContract () . isForCorp () ? contractItem . getContract () . getIssuerCorpID () : contractItem . getContract () . getIssuerID () ) , null , null , contractItem . getContract () . getLocations () , null , null , null , null , contractItem ) ) ; } <s> private boolean matchesContract ( net.nikr.eve.jeveasset.gui.tabs.contracts.MyContractItem contractItem , boolean add ) { return ( contractItem != null ) && ( matches ( add , contractItem . getTypeID () , ( contractItem . getContract () . isForCorp () ? contractItem . getContract () . getIssuerCorpID () : contractItem . getContract () . getIssuerID () ) , null , null , contractItem . getContract () . getLocations () , null , null , null , null , contractItem ) ) ; } <s> Bug Fix: ContractItems was missing from the Stockpile Shopping List
bug_after_refactoring: private boolean ckrwdvxfvtaenzfchxqe ( net.nikr.eve.jeveasset.gui.tabs.contracts.MyContractItem contractItem , boolean add ) { return ( contractItem != null ) && ( matches ( add , contractItem . getTypeID () , ( contractItem . getContract () . isForCorp () ? contractItem . getContract () . getIssuerCorpID () : contractItem . getContract () . getIssuerID () ) , null , null , contractItem . getContract () . getLocations () , null , null , null , null , contractItem ) ) ; } <s> private boolean ckrwdvxfvtaenzfchxqe ( net.nikr.eve.jeveasset.gui.tabs.contracts.MyContractItem contractItem , boolean add ) { return ( contractItem != null ) && ( matches ( add , contractItem . getTypeID () , ( contractItem . getContract () . isForCorp () ? contractItem . getContract () . getIssuerCorpID () : contractItem . getContract () . getIssuerID () ) , null , null , contractItem . getContract () . getLocations () , null , null , null , null , contractItem ) ) ; } <s> Bug Fix: ContractItems was missing from the Stockpile Shopping List
fix_before_refactoring: private java.lang.Long matchesContract ( net.nikr.eve.jeveasset.gui.tabs.contracts.MyContractItem contractItem , boolean add ) { if ( contractItem != null ) { return matches ( add , contractItem . getTypeID () , ( contractItem . getContract () . isForCorp () ? contractItem . getContract () . getIssuerCorpID () : contractItem . getContract () . getIssuerID () ) , null , null , contractItem . getContract () . getLocations () , null , null , null , null , contractItem ) ; } else { return null ; } }
fix_after_refactoring: private java.lang.Long ckrwdvxfvtaenzfchxqe ( net.nikr.eve.jeveasset.gui.tabs.contracts.MyContractItem contractItem , boolean add ) { if ( contractItem != null ) { return matches ( add , contractItem . getTypeID () , ( contractItem . getContract () . isForCorp () ? contractItem . getContract () . getIssuerCorpID () : contractItem . getContract () . getIssuerID () ) , null , null , contractItem . getContract () . getLocations () , null , null , null , null , contractItem ) ; } else { return null ; } }
× fix_prediction_before: private java.lang.Integer matchesContract ( net.nikr.eve.jeveasset.gui.tabs.contracts.MyContractItem contractItem , boolean add ) { if ( ( ( contractItem != null ) && ( matchesContract ( contractItem . getTypeID () , contractItem . getCorpID () , contractItem . getCorpID () , contractItem . getICorssuer () , ( getCorssuer () ? null : contractItem . getCorssuer () . getLocations () ) ) , null , contractItem . getIID () , null , contractItem . getLocations () , null , null , null , null , null ) ) ; else { return getLocations () ; } }
× fix_prediction_after: private boolean ckrwdv.xfvenz.chenxqeqe.eveasset.gui.tabs.tabss.MyContractItem addItem ( net.evenik.eveasset.gui.tabss.ContractItem contractItem , boolean add ) { if ( ( ( contractItem != null ) && ( contractItem . getTypeID () . isCorpID () ) ) && ( contractItem . getContractContract () . isCorpIDForCorpID ( contractItem . getContract () . getIssID () , contractItem . getContract () . getIssID () , contractItem . getContract () . getLocations () , contractItem . getIssID () , null , contractItem . getContract () . getLocations () , null , contractItem , null , null , null , null , null , null ) ) ) { return false ; } else { return true ; } }

line_index: 675
bug_before_refactoring: private boolean isManaTurn ( int turnNum ) { int current = 1 ; int past = 0 ; while ( current < ( turnNum + 1 ) ) { int temp = current ; current += past ; past = temp ; if ( current == turnNum ) { return true ; } } return false ; } <s> private boolean isManaTurn ( int turnNum ) { int current = 1 ; int past = 0 ; while ( current < ( turnNum + 1 ) ) { int temp = current ; current += past ; past = temp ; if ( current == turnNum ) { return true ; } } return false ; } <s> fixed some bugs
bug_after_refactoring: private boolean lproffqrriatsrzolbjx ( int turnNum ) { int current = 1 ; int past = 0 ; while ( current < ( turnNum + 1 ) ) { int temp = current ; current += past ; past = temp ; if ( current == turnNum ) { return true ; } } return false ; } <s> private boolean lproffqrriatsrzolbjx ( int turnNum ) { int current = 1 ; int past = 0 ; while ( current < ( turnNum + 1 ) ) { int temp = current ; current += past ; past = temp ; if ( current == turnNum ) { return true ; } } return false ; } <s> fixed some bugs
fix_before_refactoring: public boolean isManaTurn ( int turnNum ) { int current = 1 ; int past = 0 ; while ( current < ( turnNum + 1 ) ) { int temp = current ; current += past ; past = temp ; if ( current == turnNum ) { return true ; } } return false ; }
fix_after_refactoring: public boolean lproffqrriatsrzolbjx ( int turnNum ) { int current = 1 ; int past = 0 ; while ( current < ( turnNum + 1 ) ) { int temp = current ; current += past ; past = temp ; if ( current == turnNum ) { return true ; } } return false ; }
× fix_prediction_before: public boolean isManaTurn ( int turnNum ) { int current = 0 ; int past = 1 ; while ( current < turnNum ) { int temp = current + ( past ) ; temp += turnNum ; if ( temp == ( - 1 ) ) { return true ; } } return false ; }
× fix_prediction_after: public boolean lproffqrriz.ratszol.bjx.Num turn ( int currentNum ) { int turn = 0 ; int currentNum = 1 ; while ( currentNum < ( turn + 1 ) ) { temp += turn ; currentNum += temp ; if ( currentNum == ( turn + 1 ) ) { return false ; } } return true ; }

line_index: 676
bug_before_refactoring: public java.lang.String actionSignup ( java.lang.String role ) { boh.jee.ejb.model.Guest user = null ; user = new boh.jee.ejb.model.User () ; user . setGuestName ( userName ) ; user . setGuestPhone ( userPhone ) ; user . setGuestEmail ( userEmail ) ; if ( userSrv . userSignUp ( user ) ) { return "roomlist" ; } else { illegalAccess = true ; return "signup" ; } } <s> public java.lang.String actionSignup ( java.lang.String role ) { boh.jee.ejb.model.Guest user = null ; user = new boh.jee.ejb.model.User () ; user . setGuestName ( userName ) ; user . setGuestPhone ( userPhone ) ; user . setGuestEmail ( userEmail ) ; if ( userSrv . userSignUp ( user ) ) { return "roomlist" ; } else { illegalAccess = true ; return "signup" ; } } <s> fixed bugs in model User  persis now working
bug_after_refactoring: public java.lang.String xbwtbmvybzzgjbvpyswh ( java.lang.String role ) { boh.jee.ejb.model.Guest user = null ; user = new boh.jee.ejb.model.User () ; user . setGuestName ( userName ) ; user . setGuestPhone ( userPhone ) ; user . setGuestEmail ( userEmail ) ; if ( userSrv . userSignUp ( user ) ) { return "roomlist" ; } else { illegalAccess = true ; return "signup" ; } } <s> public java.lang.String xbwtbmvybzzgjbvpyswh ( java.lang.String role ) { boh.jee.ejb.model.Guest user = null ; user = new boh.jee.ejb.model.User () ; user . setGuestName ( userName ) ; user . setGuestPhone ( userPhone ) ; user . setGuestEmail ( userEmail ) ; if ( userSrv . userSignUp ( user ) ) { return "roomlist" ; } else { illegalAccess = true ; return "signup" ; } } <s> fixed bugs in model User  persis now working
fix_before_refactoring: public java.lang.String actionSignup () { boh.jee.ejb.model.Guest user = null ; user = new boh.jee.ejb.model.User () ; user . setGuestName ( userName ) ; user . setGuestPhone ( userPhone ) ; user . setGuestEmail ( userEmail ) ; if ( userSrv . userSignUp ( user ) ) { return "roomlist" ; } else { illegalAccess = true ; return "signup" ; } }
fix_after_refactoring: public java.lang.String xbwtbmvybzzgjbvpyswh () { boh.jee.ejb.model.Guest user = null ; user = new boh.jee.ejb.model.User () ; user . setGuestName ( userName ) ; user . setGuestPhone ( userPhone ) ; user . setGuestEmail ( userEmail ) ; if ( userSrv . userSignUp ( user ) ) { return "roomlist" ; } else { illegalAccess = true ; return "signup" ; } }
× fix_prediction_before: public java.lang.String actionSignup ( java.lang.String role ) { bohee.ejb.model.Guest userGuest = null ; bohee.ejb.model.User user = new bohee.ejb.model.User () ; userGuest . setPhoneName ( userName ) ; userGuest . setPhone ( userEmail ) ; if ( userGuest.rvEmailAccess ) { userGuest . setEmail ( "room" ) ; return "list" ; } else { userGuest . setSignup ( true ) ; return "signup" ; } }
× fix_prediction_after: public java.lang.Stringendbmzzbjb ( java.lang.String role ) { java.lang.System.out . println ( role ) ; bohee.ejb.model.Guest userGuest = null ; bohee.ejb.model.Guest userGuest = new bohee.ejb.model.Guest () ; userGuest . setPhoneName ( userName ) ; userGuest . setPhone ( userEmail ) ; if ( userGuest.rvSignAccess ) { userGuest . setEmail ( "room" ) ; return userGuest ; } else { userGuest . setSignAccess ( true ) ; userGuest = null ; return userGuest ; } }

line_index: 677
bug_before_refactoring: private static java.lang.String encrypt ( java.lang.String algorithm , java.lang.String clearText ) { try { java.security.MessageDigest pwd = java.security.MessageDigest . getInstance ( algorithm ) ; pwd . update ( clearText . getBytes () ) ; return com.sun.org.apache.xerces.internal.impl.dv.util.HexBin . encode ( pwd . digest () ) ; } catch ( java.security.NoSuchAlgorithmException e ) { throw new java.lang.RuntimeException ( ( "No Such Algorithm: " + algorithm ) ) ; } } <s> private static java.lang.String encrypt ( java.lang.String algorithm , java.lang.String clearText ) { try { java.security.MessageDigest pwd = java.security.MessageDigest . getInstance ( algorithm ) ; pwd . update ( clearText . getBytes () ) ; return com.sun.org.apache.xerces.internal.impl.dv.util.HexBin . encode ( pwd . digest () ) ; } catch ( java.security.NoSuchAlgorithmException e ) { throw new java.lang.RuntimeException ( ( "No Such Algorithm: " + algorithm ) ) ; } } <s> fix password encrypt error.  Complete :class:`UserControllerTest` and found error password won't be encrypt. Now fixed.
bug_after_refactoring: private static java.lang.String cwcxodqdvibactqetaiw ( java.lang.String algorithm , java.lang.String clearText ) { try { java.security.MessageDigest pwd = java.security.MessageDigest . getInstance ( algorithm ) ; pwd . update ( clearText . getBytes () ) ; return com.sun.org.apache.xerces.internal.impl.dv.util.HexBin . encode ( pwd . digest () ) ; } catch ( java.security.NoSuchAlgorithmException e ) { throw new java.lang.RuntimeException ( ( "No Such Algorithm: " + algorithm ) ) ; } } <s> private static java.lang.String cwcxodqdvibactqetaiw ( java.lang.String algorithm , java.lang.String clearText ) { try { java.security.MessageDigest pwd = java.security.MessageDigest . getInstance ( algorithm ) ; pwd . update ( clearText . getBytes () ) ; return com.sun.org.apache.xerces.internal.impl.dv.util.HexBin . encode ( pwd . digest () ) ; } catch ( java.security.NoSuchAlgorithmException e ) { throw new java.lang.RuntimeException ( ( "No Such Algorithm: " + algorithm ) ) ; } } <s> fix password encrypt error.  Complete :class:`UserControllerTest` and found error password won't be encrypt. Now fixed.
fix_before_refactoring: public static java.lang.String encrypt ( java.lang.String algorithm , java.lang.String clearText ) { try { java.security.MessageDigest pwd = java.security.MessageDigest . getInstance ( algorithm ) ; pwd . update ( clearText . getBytes () ) ; return com.sun.org.apache.xerces.internal.impl.dv.util.HexBin . encode ( pwd . digest () ) ; } catch ( java.security.NoSuchAlgorithmException e ) { throw new java.lang.RuntimeException ( ( "No Such Algorithm: " + algorithm ) ) ; } }
fix_after_refactoring: public static java.lang.String cwcxodqdvibactqetaiw ( java.lang.String algorithm , java.lang.String clearText ) { try { java.security.MessageDigest pwd = java.security.MessageDigest . getInstance ( algorithm ) ; pwd . update ( clearText . getBytes () ) ; return com.sun.org.apache.xerces.internal.impl.dv.util.HexBin . encode ( pwd . digest () ) ; } catch ( java.security.NoSuchAlgorithmException e ) { throw new java.lang.RuntimeException ( ( "No Such Algorithm: " + algorithm ) ) ; } }
× fix_prediction_before: public static java.lang.String encrypt ( java.lang.String algorithm , java.lang.String clearText ) { try { java.security.MessageDigest pwd = java.security.MessageDigest . getInstance ( algorithm ) ; pwd . clearText () ; return com.sun.dv.internal.org.apache.dv.internal.util.BinAlgorithm . encodeHex ( pwd . digest () ) ; } catch ( java.security.NoSuchAlgorithmException e ) { throw new java.lang.RuntimeException ( ( "No Such password: " + ( algorithm.class ) ) ) ; } }
× fix_prediction_after: public static java.lang.String cw ( java.lang.String algorithm , java.lang.String clearText ) { try { java.security.MessageDigest pwd = java.security.MessageDigest . getInstance ( algorithm ) ; pwd . clearText () ; return com.sun.apache.xerces.internal.org.apache.commons.impl.BinAlgorithm . encodeHex ( pwd . digest () ) ; } catch ( java.security.NoSuchAlgorithmException e ) { throw new java.lang.RuntimeException ( ( "No Such password: " + algorithm ) ) ; } }

line_index: 678
bug_before_refactoring: public static < T extends java.io.Serializable > void print ( T [] o ) { java.lang.String delim = "{" ; for ( T elem : o ) { myUtils.ConsolePrinting . print ( delim ) ; myUtils.ConsolePrinting . print ( elem ) ; delim = ", " ; } delim = ( delim . equals ( "{" ) ) ? "{}" : "}" ; myUtils.ConsolePrinting . print ( delim ) ; } <s> public static < T extends java.io.Serializable > void print ( T [] o ) { java.lang.String delim = "{" ; for ( T elem : o ) { myUtils.ConsolePrinting . print ( delim ) ; myUtils.ConsolePrinting . print ( elem ) ; delim = ", " ; } delim = ( delim . equals ( "{" ) ) ? "{}" : "}" ; myUtils.ConsolePrinting . print ( delim ) ; } <s> Corrected erroneous print actions in ConsolePrinting  added color to the abstract timer's testing. TODO maybe fix timer state transfer to squash as many bugs as I can and make it work the best.
bug_after_refactoring: public static < T extends java.io.Serializable > void jnpketklyredntzdpdwd ( T [] o ) { java.lang.String delim = "{" ; for ( T elem : o ) { myUtils.ConsolePrinting . jnpketklyredntzdpdwd ( delim ) ; myUtils.ConsolePrinting . jnpketklyredntzdpdwd ( elem ) ; delim = ", " ; } delim = ( delim . equals ( "{" ) ) ? "{}" : "}" ; myUtils.ConsolePrinting . jnpketklyredntzdpdwd ( delim ) ; } <s> public static < T extends java.io.Serializable > void jnpketklyredntzdpdwd ( T [] o ) { java.lang.String delim = "{" ; for ( T elem : o ) { myUtils.ConsolePrinting . jnpketklyredntzdpdwd ( delim ) ; myUtils.ConsolePrinting . jnpketklyredntzdpdwd ( elem ) ; delim = ", " ; } delim = ( delim . equals ( "{" ) ) ? "{}" : "}" ; myUtils.ConsolePrinting . jnpketklyredntzdpdwd ( delim ) ; } <s> Corrected erroneous print actions in ConsolePrinting  added color to the abstract timer's testing. TODO maybe fix timer state transfer to squash as many bugs as I can and make it work the best.
fix_before_refactoring: public static void print ( int [] o ) { java.lang.String delim = "{" ; for ( int elem : o ) { myUtils.ConsolePrinting . print ( delim ) ; myUtils.ConsolePrinting . print ( elem ) ; delim = ", " ; } delim = ( delim . equals ( "{" ) ) ? "{}" : "}" ; myUtils.ConsolePrinting . print ( delim ) ; }
fix_after_refactoring: public static void jnpketklyredntzdpdwd ( int [] o ) { java.lang.String delim = "{" ; for ( int elem : o ) { myUtils.ConsolePrinting . jnpketklyredntzdpdwd ( delim ) ; myUtils.ConsolePrinting . jnpketklyredntzdpdwd ( elem ) ; delim = ", " ; } delim = ( delim . equals ( "{" ) ) ? "{}" : "}" ; myUtils.ConsolePrinting . jnpketklyredntzdpdwd ( delim ) ; }
× fix_prediction_before: public static < T extends java.io.Serializable > void print ( java.lang.String [] o ) { java.lang.Object delim = "{" ; for ( T elem : o ) { myUtils.ConsolePrinting . print ( delim ) ; myUtils.ConsolePrinting . print ( elem ) ; delim = ", " ; } delim = ( delim . equals ( "{" ) ) ? "{}" : "}" ; myUtils.ConsolePrinting . print ( delim ) ; }
× fix_prediction_after: public static < T extends java.io.Serializable > void jketknpzdntlypdwd ( java.util.ArrayList < T > o ) { java.lang.String delim = "{" ; for ( T o : o ) { myUtils.ConsolePrinting . my ( delim ) ; jetknpzdredlypdwd.Utils.ConsolePrinting . my ( delim ) ; jetknpzdredlypdwd.Utils.ConsolePrinting . my ( delim ) ; } delim = ( delim . equals ( "{" ) ) ? "{}" : "}" ; jetknpzdredlypdwd.Utils.ConsolePrinting . timer ( delim ) ; }

line_index: 679
bug_before_refactoring: @ org.junit.Test public void Set_ExtendedIngredients () { com.sem4ikt.uni.recipefinderchatbot.model.ExtendedIngredientModel ingredient = new com.sem4ikt.uni.recipefinderchatbot.model.ExtendedIngredientModel () ; ingredient . setImage ( "test" ) ; java.util.List < com.sem4ikt.uni.recipefinderchatbot.model.ExtendedIngredientModel > list = new java.util.ArrayList <> () ; list . add ( ingredient ) ; recipeModel . setExtendedIngredients ( list ) ; org.junit.Assert . assertEquals ( recipeModel . getExtendedIngredients () , list ) ; } <s> @ org.junit.Test public void Set_ExtendedIngredients () { com.sem4ikt.uni.recipefinderchatbot.model.ExtendedIngredientModel ingredient = new com.sem4ikt.uni.recipefinderchatbot.model.ExtendedIngredientModel () ; ingredient . setImage ( "test" ) ; java.util.List < com.sem4ikt.uni.recipefinderchatbot.model.ExtendedIngredientModel > list = new java.util.ArrayList <> () ; list . add ( ingredient ) ; recipeModel . setExtendedIngredients ( list ) ; org.junit.Assert . assertEquals ( recipeModel . getExtendedIngredients () , list ) ; } <s> Fix code style errors at unittests
bug_after_refactoring: @ org.junit.Test public void nrrqhaaiqmvcoicnvtqi () { com.sem4ikt.uni.recipefinderchatbot.model.ExtendedIngredientModel ingredient = new com.sem4ikt.uni.recipefinderchatbot.model.ExtendedIngredientModel () ; ingredient . setImage ( "test" ) ; java.util.List < com.sem4ikt.uni.recipefinderchatbot.model.ExtendedIngredientModel > list = new java.util.ArrayList <> () ; list . add ( ingredient ) ; recipeModel . setExtendedIngredients ( list ) ; org.junit.Assert . assertEquals ( recipeModel . getExtendedIngredients () , list ) ; } <s> @ org.junit.Test public void nrrqhaaiqmvcoicnvtqi () { com.sem4ikt.uni.recipefinderchatbot.model.ExtendedIngredientModel ingredient = new com.sem4ikt.uni.recipefinderchatbot.model.ExtendedIngredientModel () ; ingredient . setImage ( "test" ) ; java.util.List < com.sem4ikt.uni.recipefinderchatbot.model.ExtendedIngredientModel > list = new java.util.ArrayList <> () ; list . add ( ingredient ) ; recipeModel . setExtendedIngredients ( list ) ; org.junit.Assert . assertEquals ( recipeModel . getExtendedIngredients () , list ) ; } <s> Fix code style errors at unittests
fix_before_refactoring: @ org.junit.Test public void setExtendedIngredients () { com.sem4ikt.uni.recipefinderchatbot.model.ExtendedIngredientModel ingredient = new com.sem4ikt.uni.recipefinderchatbot.model.ExtendedIngredientModel () ; ingredient . setImage ( "test" ) ; java.util.List < com.sem4ikt.uni.recipefinderchatbot.model.ExtendedIngredientModel > list = new java.util.ArrayList <> () ; list . add ( ingredient ) ; recipeModel . setExtendedIngredients ( list ) ; org.junit.Assert . assertEquals ( recipeModel . getExtendedIngredients () , list ) ; }
fix_after_refactoring: @ org.junit.Test public void setExtendedIngredients () { com.sem4ikt.uni.recipefinderchatbot.model.ExtendedIngredientModel ingredient = new com.sem4ikt.uni.recipefinderchatbot.model.ExtendedIngredientModel () ; ingredient . setImage ( "test" ) ; java.util.List < com.sem4ikt.uni.recipefinderchatbot.model.ExtendedIngredientModel > list = new java.util.ArrayList <> () ; list . add ( ingredient ) ; recipeModel . setExtendedIngredients ( list ) ; org.junit.Assert . assertEquals ( recipeModel . getExtendedIngredients () , list ) ; }
× fix_prediction_before: @ org.junit.Test public void SetExtendedIngredients () { com.semiptik.recipefinder.chatbot.model.IngredientExtendedModel ingredientModel = new com.semiptik.recipefinder.chatbot.model.IngredientExtendedModel () ; ingredientModel . setImage ( "test" ) ; java.util.List < com.semiptik.recipefinder.chatbot.model.IngredientExtendedModel > list = new java.util.ArrayList <> () ; list . add ( ingredientModel ) ; org.junit.Assert . assertEquals ( 1 , list . size () ) ; }
× fix_prediction_after: @ org.junit.Test public void nrrqiqhaaicco.mvniccoikefinder () { com.semiptikefinder.chatbot.model.IngredientModel ingredientModel = new com.semiptikefinder.chatbot.model.IngredientModel () ; ingredientModel . setImageIngredient ( "test" ) ; java.util.List < com.semiptikefinder.chatbot.model.Ingredient > list = ingredientExtendedModel . getExtendedIngredients () ; org.junit.Assert . assertEquals ( 1 , list . size () ) ; recipeModel . setIngredient ( new java.util.ArrayList <> () ) ; list . add ( ingredientModel ) ; }

line_index: 680
bug_before_refactoring: @ java.lang.Override public void onNext ( T i ) { if ( ! ( isUnsubscribed () ) ) { boolean stop = ( ++ ( count ) ) >= ( limit ) ; child . onNext ( i ) ; if ( stop && ( ! ( completed ) ) ) { completed = true ; try { child . onCompleted () ; } finally { unsubscribe () ; } } } } <s> @ java.lang.Override public void onNext ( T i ) { if ( ! ( isUnsubscribed () ) ) { boolean stop = ( ++ ( count ) ) >= ( limit ) ; child . onNext ( i ) ; if ( stop && ( ! ( completed ) ) ) { completed = true ; try { child . onCompleted () ; } finally { unsubscribe () ; } } } } <s> Merge pull request #3384 from akarnokd/TakeReentrancyFix1x  Fix for take() reentrancy bug.
bug_after_refactoring: @ java.lang.Override public void druyxonfjppbjvorfdyr ( T i ) { if ( ! ( isUnsubscribed () ) ) { boolean stop = ( ++ ( count ) ) >= ( limit ) ; child . druyxonfjppbjvorfdyr ( i ) ; if ( stop && ( ! ( completed ) ) ) { completed = true ; try { child . onCompleted () ; } finally { unsubscribe () ; } } } } <s> @ java.lang.Override public void druyxonfjppbjvorfdyr ( T i ) { if ( ! ( isUnsubscribed () ) ) { boolean stop = ( ++ ( count ) ) >= ( limit ) ; child . druyxonfjppbjvorfdyr ( i ) ; if ( stop && ( ! ( completed ) ) ) { completed = true ; try { child . onCompleted () ; } finally { unsubscribe () ; } } } } <s> Merge pull request #3384 from akarnokd/TakeReentrancyFix1x  Fix for take() reentrancy bug.
fix_before_refactoring: @ java.lang.Override public void onNext ( T i ) { if ( ( ! ( isUnsubscribed () ) ) && ( ( ( count ) ++ ) < ( limit ) ) ) { boolean stop = ( count ) == ( limit ) ; child . onNext ( i ) ; if ( stop && ( ! ( completed ) ) ) { completed = true ; try { child . onCompleted () ; } finally { unsubscribe () ; } } } }
fix_after_refactoring: @ java.lang.Override public void druyxonfjppbjvorfdyr ( T i ) { if ( ( ! ( isUnsubscribed () ) ) && ( ( ( count ) ++ ) < ( limit ) ) ) { boolean stop = ( count ) == ( limit ) ; child . druyxonfjppbjvorfdyr ( i ) ; if ( stop && ( ! ( completed ) ) ) { completed = true ; try { child . onCompleted () ; } finally { unsubscribe () ; } } } }
× fix_prediction_before: @ java.lang.Override public void onNext ( T i ) { boolean isUn = stop () ; if ( ( ++ i ) >= ( limit ) ) { stop . onNext ( i ) ; if ( ( ! isUn ) && ( ! completed ) ) { try { child . onCompleted () ; unsubscribe () ; } finally { child . onCompleted () ; } } } }
× fix_prediction_after: @ java.lang.Override public void druyx ( java.lang.Object d ) { if ( ( ibj ) != null ) { Tyrfd = ( ( Tyrfd ) ( stop () ) ) ; if ( ! isUnyx ) { ( count ) ++ ; } stop ( d ) ; if ( ( ibj ) && ( ! completed ) ) { try { child . onCompleted () ; unsubscribe () ; } finally { completed = true ; } } } }

line_index: 681
bug_before_refactoring: @ java.lang.Override public void ReInit ( java.io.Reader stream ) { jj_input_stream . ReInit ( stream , 1 , 1 ) ; token_source . ReInit ( jj_input_stream ) ; token = new org.sbml.jsbml.text.parser.Token () ; jj_ntk = - 1 ; jj_gen = 0 ; for ( int i = 0 ; i < 17 ; i ++ ) { jj_la1 [ i ] = - 1 ; } for ( int i = 0 ; i < ( jj_2_rtns.length ) ; i ++ ) { jj_2_rtns [ i ] = new org.sbml.jsbml.text.parser.FormulaParserLL3.JJCalls () ; } } <s> @ java.lang.Override public void ReInit ( java.io.Reader stream ) { jj_input_stream . ReInit ( stream , 1 , 1 ) ; token_source . ReInit ( jj_input_stream ) ; token = new org.sbml.jsbml.text.parser.Token () ; jj_ntk = - 1 ; jj_gen = 0 ; for ( int i = 0 ; i < 17 ; i ++ ) { jj_la1 [ i ] = - 1 ; } for ( int i = 0 ; i < ( jj_2_rtns.length ) ; i ++ ) { jj_2_rtns [ i ] = new org.sbml.jsbml.text.parser.FormulaParserLL3.JJCalls () ; } } <s> Fixed the parsing of the modulo operator. Thanks to Chris Myers who reported the problem.
bug_after_refactoring: @ java.lang.Override public void fvtjlukhoqialfdrqwlr ( java.io.Reader stream ) { jj_input_stream . fvtjlukhoqialfdrqwlr ( stream , 1 , 1 ) ; token_source . fvtjlukhoqialfdrqwlr ( jj_input_stream ) ; token = new org.sbml.jsbml.text.parser.Token () ; jj_ntk = - 1 ; jj_gen = 0 ; for ( int i = 0 ; i < 17 ; i ++ ) { jj_la1 [ i ] = - 1 ; } for ( int i = 0 ; i < ( jj_2_rtns.length ) ; i ++ ) { jj_2_rtns [ i ] = new org.sbml.jsbml.text.parser.FormulaParserLL3.JJCalls () ; } } <s> @ java.lang.Override public void fvtjlukhoqialfdrqwlr ( java.io.Reader stream ) { jj_input_stream . fvtjlukhoqialfdrqwlr ( stream , 1 , 1 ) ; token_source . fvtjlukhoqialfdrqwlr ( jj_input_stream ) ; token = new org.sbml.jsbml.text.parser.Token () ; jj_ntk = - 1 ; jj_gen = 0 ; for ( int i = 0 ; i < 17 ; i ++ ) { jj_la1 [ i ] = - 1 ; } for ( int i = 0 ; i < ( jj_2_rtns.length ) ; i ++ ) { jj_2_rtns [ i ] = new org.sbml.jsbml.text.parser.FormulaParserLL3.JJCalls () ; } } <s> Fixed the parsing of the modulo operator. Thanks to Chris Myers who reported the problem.
fix_before_refactoring: public void ReInit ( java.io.Reader stream ) { jj_input_stream . ReInit ( stream , 1 , 1 ) ; token_source . ReInit ( jj_input_stream ) ; token = new org.sbml.jsbml.text.parser.Token () ; jj_ntk = - 1 ; jj_gen = 0 ; for ( int i = 0 ; i < 17 ; i ++ ) jj_la1 [ i ] = - 1 ; for ( int i = 0 ; i < ( jj_2_rtns.length ) ; i ++ ) jj_2_rtns [ i ] = new org.sbml.jsbml.text.parser.FormulaParserLL3.JJCalls () ; }
fix_after_refactoring: public void fvtjlukhoqialfdrqwlr ( java.io.Reader stream ) { jj_input_stream . fvtjlukhoqialfdrqwlr ( stream , 1 , 1 ) ; token_source . fvtjlukhoqialfdrqwlr ( jj_input_stream ) ; token = new org.sbml.jsbml.text.parser.Token () ; jj_ntk = - 1 ; jj_gen = 0 ; for ( int i = 0 ; i < 17 ; i ++ ) jj_la1 [ i ] = - 1 ; for ( int i = 0 ; i < ( jj_2_rtns.length ) ; i ++ ) jj_2_rtns [ i ] = new org.sbml.jsbml.text.parser.FormulaParserLL3.JJCalls () ; }
× fix_prediction_before: @ java.lang.Override public void ReInit ( java.io.Reader stream ) { Re_stream.Init . stream ( token , 1 , Re_source ) ; Re_stream.Init . token ( new org.bml.jsbml.parser.Token () ) ; jj_text = 0 ; for ( int i = 0 ; i < 17 ; i ++ ) { jj_rt [ i ] = new org.bml.jsbml.parser.Formula () ; } }
× fix_prediction_after: @ java.lang.Override public void fvtjlukialq.wfd.lr.io.Reader ( java.io.Reader stream ) { if ( ( jj_kvtjlukialq.wfd.lr.inputho ) > 0 ) { jj_kvtjlukialq.wfd.lr.source.jvtkial_inputho = f ; token_input ( 1 , new org.wml.jsbml.parser.JLLToken () ) ; jj_kvtjlukialq.wfd.lr.parser.FormulaParser jj_sbLL = new org.wml.jsbml.parser.rtParser () ; for ( int i = 0 ; i < 17 ; i ++ ) { jj_kvtjlukialq.wfd.lr.rtParser.JLL_2_J_Calls [ i ] = jj_kvtjlukialq.wfd.lr.rtParser.JLL_2_J_Calls [ i ] ; } } return jj_kvtjlukialq.wfd.lr.rtParser.JLL_2_J_Calls ; }

line_index: 682
bug_before_refactoring: public static java.lang.String getImports () { java.lang.StringBuilder sb = new java.lang.StringBuilder ( "import org.junit.Test;\n" ) ; sb . append ( "import org.junit.Before;\n" ) ; sb . append ( "import org.junit.Assert;\n" ) ; for ( java.lang.String imp : main.MakeTests.imports ) { if ( main.MakeTests . isValidClass ( imp ) ) { sb . append ( ( ( "import " + imp ) + ";\n" ) ) ; } } return sb . toString () ; } <s> public static java.lang.String getImports () { java.lang.StringBuilder sb = new java.lang.StringBuilder ( "import org.junit.Test;\n" ) ; sb . append ( "import org.junit.Before;\n" ) ; sb . append ( "import org.junit.Assert;\n" ) ; for ( java.lang.String imp : main.MakeTests.imports ) { if ( main.MakeTests . isValidClass ( imp ) ) { sb . append ( ( ( "import " + imp ) + ";\n" ) ) ; } } return sb . toString () ; } <s> Correção de problema: Criação de várias classes de teste no mesmo pacote; Bugfix: Creation of many tests classes in the same package;
bug_after_refactoring: public static java.lang.String popqqjdmixbhyhapdgpr () { java.lang.StringBuilder sb = new java.lang.StringBuilder ( "import org.junit.Test;\n" ) ; sb . append ( "import org.junit.Before;\n" ) ; sb . append ( "import org.junit.Assert;\n" ) ; for ( java.lang.String imp : main.MakeTests.imports ) { if ( main.MakeTests . isValidClass ( imp ) ) { sb . append ( ( ( "import " + imp ) + ";\n" ) ) ; } } return sb . toString () ; } <s> public static java.lang.String popqqjdmixbhyhapdgpr () { java.lang.StringBuilder sb = new java.lang.StringBuilder ( "import org.junit.Test;\n" ) ; sb . append ( "import org.junit.Before;\n" ) ; sb . append ( "import org.junit.Assert;\n" ) ; for ( java.lang.String imp : main.MakeTests.imports ) { if ( main.MakeTests . isValidClass ( imp ) ) { sb . append ( ( ( "import " + imp ) + ";\n" ) ) ; } } return sb . toString () ; } <s> Correção de problema: Criação de várias classes de teste no mesmo pacote; Bugfix: Creation of many tests classes in the same package;
fix_before_refactoring: private static java.lang.String getImports () { java.lang.StringBuilder sb = new java.lang.StringBuilder ( "import org.junit.Test;\n" ) ; sb . append ( "import org.junit.Before;\n" ) ; sb . append ( "import org.junit.Assert;\n" ) ; for ( java.lang.String imp : main.MakeTests.imports ) { if ( main.MakeTests . isValidClass ( imp ) ) { sb . append ( ( ( "import " + imp ) + ";\n" ) ) ; } } return sb . toString () ; }
fix_after_refactoring: private static java.lang.String popqqjdmixbhyhapdgpr () { java.lang.StringBuilder sb = new java.lang.StringBuilder ( "import org.junit.Test;\n" ) ; sb . append ( "import org.junit.Before;\n" ) ; sb . append ( "import org.junit.Assert;\n" ) ; for ( java.lang.String imp : main.MakeTests.imports ) { if ( main.MakeTests . isValidClass ( imp ) ) { sb . append ( ( ( "import " + imp ) + ";\n" ) ) ; } } return sb . toString () ; }
× fix_prediction_before: public static java.lang.String getImports () { java.lang.StringBuilder sb = new java.lang.StringBuilder ( "importTest\n" ) ; sb . append ( "import\n" ) ; sb . append ( "import\n" ) ; for ( java.lang.String imp : main.MakeTests ) { if ( de.nas.mo.MakeTests . isValid ( imp ) ) { sb . append ( ( ( " = " + imp ) + ";\n" ) ) ; break; } sb . append ( "import\n" ) ; } return sb . toString () ; }
× fix_prediction_after: public static java.lang.String pop () { java.lang.StringBuilder sb = new java.lang.StringBuilder () ; java.lang.StringBuilder sb = new java.lang.StringBuilder ( "Test\nimport" ) ; sb . append ( "Before org.junit.Assertimport;\n" ) ; sb . append ( "Before org.junit.import.\n" ) ; for ( java.lang.String imp : mainTests ) { sb . append ( ( ( java.lang.Class . isValid ( imp ) ) + ";\n" ) ) ; } if ( isValid ( sb . toString () ) ) { return sb . toString () ; } return sb . toString () ; }

line_index: 683
bug_before_refactoring: @ org.junit.Test public void getName ( ) throws java.lang.Exception { pingproject.biz.beans.PingBean mockPingBean = mock ( pingproject.biz.beans.PingBean . class ) ; doReturn ( mockPingBean ) . when ( pingproject.web.ManagedBeans.PingWebBeanTest.spy ) . getPingBean () ; pingproject.web.ManagedBeans.PingWebBeanTest.spy . getName () ; verify ( pingproject.web.ManagedBeans.PingWebBeanTest.spy ) . getPingBean () ; verify ( mockPingBean ) . retrieveName () ; } <s> @ org.junit.Test public void getName ( ) throws java.lang.Exception { pingproject.biz.beans.PingBean mockPingBean = mock ( pingproject.biz.beans.PingBean . class ) ; doReturn ( mockPingBean ) . when ( pingproject.web.ManagedBeans.PingWebBeanTest.spy ) . getPingBean () ; pingproject.web.ManagedBeans.PingWebBeanTest.spy . getName () ; verify ( pingproject.web.ManagedBeans.PingWebBeanTest.spy ) . getPingBean () ; verify ( mockPingBean ) . retrieveName () ; } <s> Fixed a minor bug with the code
bug_after_refactoring: @ org.junit.Test public void lnjcuwxtjnqofjmjlyws ( ) throws java.lang.Exception { pingproject.biz.beans.PingBean mockPingBean = mock ( pingproject.biz.beans.PingBean . class ) ; doReturn ( mockPingBean ) . when ( pingproject.web.ManagedBeans.PingWebBeanTest.spy ) . getPingBean () ; pingproject.web.ManagedBeans.PingWebBeanTest.spy . lnjcuwxtjnqofjmjlyws () ; verify ( pingproject.web.ManagedBeans.PingWebBeanTest.spy ) . getPingBean () ; verify ( mockPingBean ) . retrieveName () ; } <s> @ org.junit.Test public void lnjcuwxtjnqofjmjlyws ( ) throws java.lang.Exception { pingproject.biz.beans.PingBean mockPingBean = mock ( pingproject.biz.beans.PingBean . class ) ; doReturn ( mockPingBean ) . when ( pingproject.web.ManagedBeans.PingWebBeanTest.spy ) . getPingBean () ; pingproject.web.ManagedBeans.PingWebBeanTest.spy . lnjcuwxtjnqofjmjlyws () ; verify ( pingproject.web.ManagedBeans.PingWebBeanTest.spy ) . getPingBean () ; verify ( mockPingBean ) . retrieveName () ; } <s> Fixed a minor bug with the code
fix_before_refactoring: @ org.junit.Test public void retrieveName ( ) throws java.lang.Exception { pingproject.biz.beans.PingBean mockPingBean = mock ( pingproject.biz.beans.PingBean . class ) ; doReturn ( mockPingBean ) . when ( pingproject.web.ManagedBeans.PingWebBeanTest.spy ) . getPingBean () ; pingproject.web.ManagedBeans.PingWebBeanTest.spy . retrieveName () ; verify ( pingproject.web.ManagedBeans.PingWebBeanTest.spy ) . getPingBean () ; verify ( mockPingBean ) . retrieveName () ; }
fix_after_refactoring: @ org.junit.Test public void retrieveName ( ) throws java.lang.Exception { pingproject.biz.beans.PingBean mockPingBean = mock ( pingproject.biz.beans.PingBean . class ) ; doReturn ( mockPingBean ) . when ( pingproject.web.ManagedBeans.PingWebBeanTest.spy ) . getPingBean () ; pingproject.web.ManagedBeans.PingWebBeanTest.spy . retrieveName () ; verify ( pingproject.web.ManagedBeans.PingWebBeanTest.spy ) . getPingBean () ; verify ( mockPingBean ) . retrieveName () ; }
× fix_prediction_before: @ org.junit.Test public void getName ( ) throws java.lang.Exception { ping.project.biz.beans.PingBeanBean pingPingBean = mock ( mockiz.project.biz.beans.PingBean . class ) ; pingPingBean . doReturn ( mock.project.web.ManagedWebPingBean . class ) . when ( pingPingBean ) . getPingWebPing () ; pingPingBean . verifyManagedWebPing () ; verifyName () ; }
× fix_prediction_after: @ org.junit.jxt.wncu.jxtoflym.ws.jizlym.project.beans.PingBean ( value = 0 ) public void pingPing ( ) throws java.lang.Exception { mockPingBean = mockPingBean ; pingPingBean . doReturn ( mockPingBean ) . when ( pingPingBean ) . getPingWebBean () ; pingPing ( pingPingBean ) ; pingPingBean . verifyManagedWebBean () ; verifyManagedWebBean () . verifyName ( lnmq.jxtoflym.ws.jizlym.project.beans.PingWebBeanTest . class ) ; }

line_index: 684
bug_before_refactoring: @ java.lang.Override public void changeState ( com.example.alexander_topilskii.internetradio.models.database.Station station ) { if ( station != null ) { currentState = State.IS_WAIT ; listener . setPlayerStates ( ( - 1 ) , State.IS_WAIT ) ; if ( ( mediaPlayer ) == null ) initPlayer ( station . getSource () ) ; else { if ( mediaPlayer . isPlaying () ) { pause () ; } else { play () ; } } } } <s> @ java.lang.Override public void changeState ( com.example.alexander_topilskii.internetradio.models.database.Station station ) { if ( station != null ) { currentState = State.IS_WAIT ; listener . setPlayerStates ( ( - 1 ) , State.IS_WAIT ) ; if ( ( mediaPlayer ) == null ) initPlayer ( station . getSource () ) ; else { if ( mediaPlayer . isPlaying () ) { pause () ; } else { play () ; } } } } <s> fix error with show "wait" button
bug_after_refactoring: @ java.lang.Override public void rdaspmclxytcerpfbhaz ( com.example.alexander_topilskii.internetradio.models.database.Station station ) { if ( station != null ) { currentState = State.IS_WAIT ; listener . setPlayerStates ( ( - 1 ) , State.IS_WAIT ) ; if ( ( mediaPlayer ) == null ) initPlayer ( station . getSource () ) ; else { if ( mediaPlayer . isPlaying () ) { pause () ; } else { play () ; } } } } <s> @ java.lang.Override public void rdaspmclxytcerpfbhaz ( com.example.alexander_topilskii.internetradio.models.database.Station station ) { if ( station != null ) { currentState = State.IS_WAIT ; listener . setPlayerStates ( ( - 1 ) , State.IS_WAIT ) ; if ( ( mediaPlayer ) == null ) initPlayer ( station . getSource () ) ; else { if ( mediaPlayer . isPlaying () ) { pause () ; } else { play () ; } } } } <s> fix error with show "wait" button
fix_before_refactoring: @ java.lang.Override public void changeState ( com.example.alexander_topilskii.internetradio.models.database.Station station ) { currentState = State.IS_WAIT ; listener . setPlayerStates ( ( - 1 ) , State.IS_WAIT ) ; if ( station != null ) { if ( ( mediaPlayer ) == null ) initPlayer ( station . getSource () ) ; else { if ( mediaPlayer . isPlaying () ) { pause () ; } else { play () ; } } } }
fix_after_refactoring: @ java.lang.Override public void rdaspmclxytcerpfbhaz ( com.example.alexander_topilskii.internetradio.models.database.Station station ) { currentState = State.IS_WAIT ; listener . setPlayerStates ( ( - 1 ) , State.IS_WAIT ) ; if ( station != null ) { if ( ( mediaPlayer ) == null ) initPlayer ( station . getSource () ) ; else { if ( mediaPlayer . isPlaying () ) { pause () ; } else { play () ; } } } }
× fix_prediction_before: @ java.lang.Override public void changeState ( com.example.alexander.top_skilii.internadio.models.Station station ) { if ( ( currentState ) != null ) { currentState = State.WAIT_IS ; } if ( ( mediaPlayer . getSource () ) == ( - 1 ) ) { mediaPlayer . pause () ; } else if ( ( mediaPlayer . getSource () ) == ( station_wait ) ) { mediaPlayer . pause () ; } else { play () ; } }
× fix_prediction_after: @ java.lang.Override public void rdascltpm ( com.talexxy.fbhazanderalex.example.topio_exetrii.models.Station station ) { if ( ( currentState ) != null ) { listener . setPlayerStates ( State.IS_WAIT , ( - 1 ) ) ; } else if ( ( mediaPlayer ) == null ) { mediaPlayer . pause () ; } else { mediaPlayer . pause () ; } }

line_index: 685
bug_before_refactoring: private void setMedian () { int mid = ( this . numbers . size () ) / 2 ; if ( ( mid % 2 ) == 1 ) { this . medianOfAllNumbers = this . numbers . get ( mid ) ; } else { this . medianOfAllNumbers = ( ( this . numbers . get ( ( mid - 1 ) ) ) + ( this . numbers . get ( mid ) ) ) / 2.0 ; } } <s> private void setMedian () { int mid = ( this . numbers . size () ) / 2 ; if ( ( mid % 2 ) == 1 ) { this . medianOfAllNumbers = this . numbers . get ( mid ) ; } else { this . medianOfAllNumbers = ( ( this . numbers . get ( ( mid - 1 ) ) ) + ( this . numbers . get ( mid ) ) ) / 2.0 ; } } <s> Add Documentation for InputAndAnalysis  As well as some comments in the FileScanner and a bug fix in InputAndAnalysis.
bug_after_refactoring: private void mherrnahbqvwpavooevb () { int mid = ( this . numbers . size () ) / 2 ; if ( ( mid % 2 ) == 1 ) { this . medianOfAllNumbers = this . numbers . get ( mid ) ; } else { this . medianOfAllNumbers = ( ( this . numbers . get ( ( mid - 1 ) ) ) + ( this . numbers . get ( mid ) ) ) / 2.0 ; } } <s> private void mherrnahbqvwpavooevb () { int mid = ( this . numbers . size () ) / 2 ; if ( ( mid % 2 ) == 1 ) { this . medianOfAllNumbers = this . numbers . get ( mid ) ; } else { this . medianOfAllNumbers = ( ( this . numbers . get ( ( mid - 1 ) ) ) + ( this . numbers . get ( mid ) ) ) / 2.0 ; } } <s> Add Documentation for InputAndAnalysis  As well as some comments in the FileScanner and a bug fix in InputAndAnalysis.
fix_before_refactoring: private void setMedian () { if ( ! ( this . numbers . isEmpty () ) ) { int mid = ( this . numbers . size () ) / 2 ; if ( ( mid % 2 ) == 1 ) { this . medianOfAllNumbers = this . numbers . get ( mid ) ; } else { this . medianOfAllNumbers = ( ( this . numbers . get ( ( mid - 1 ) ) ) + ( this . numbers . get ( mid ) ) ) / 2.0 ; } } }
fix_after_refactoring: private void mherrnahbqvwpavooevb () { if ( ! ( this . numbers . isEmpty () ) ) { int mid = ( this . numbers . size () ) / 2 ; if ( ( mid % 2 ) == 1 ) { this . medianOfAllNumbers = this . numbers . get ( mid ) ; } else { this . medianOfAllNumbers = ( ( this . numbers . get ( ( mid - 1 ) ) ) + ( this . numbers . get ( mid ) ) ) / 2.0 ; } } }
× fix_prediction_before: public void setMedian () { int mid = ( ( this . numbers . size () ) / 2 ) % 2 ; if ( ( ( this . mid ) == 1 ) && ( mid == ( - 1 ) ) ) { this . numbersOfAllNumbers = this . numbers . get ( mid ) ; } else { this . numbersOfAllNumbers = ( this . numbers . get ( mid ) ) + ( ( ( this . numbers . get ( mid ) ) / 2.0 ) ) ; } }
× fix_prediction_after: public void mherrnahvqboo.wpavevoo.boo. () { int mid = ( this . numbers . size () ) / 2 ; if ( ( ( this . mid ) % 2 ) == 1 ) { this . numbers = this . midOfAllNumbers . get ( mid ) ; } else { this . numbers = ( ( this . numbers . get ( mid ) ) + ( this . numbers . get ( ( mid - 1 ) ) ) ) / 2.0 ; } }

line_index: 686
bug_before_refactoring: private rifServices.businessConceptLayer.HealthCode transformTaxonomyTermIntoHealthCode ( rifServices.taxonomyServices.TaxonomyTerm term ) { rifServices.businessConceptLayer.HealthCode healthCode = rifServices.businessConceptLayer.HealthCode . newInstance () ; healthCode . setCode ( term . getLabel () ) ; healthCode . setTopLevelTerm ( ( ( term . getParentTerm () ) == null ) ) ; healthCode . setNameSpace ( term . getNameSpace () ) ; healthCode . setDescription ( term . getDescription () ) ; healthCode . setNumberOfSubTerms ( term . getSubTerms () . size () ) ; return healthCode ; } <s> private rifServices.businessConceptLayer.HealthCode transformTaxonomyTermIntoHealthCode ( rifServices.taxonomyServices.TaxonomyTerm term ) { rifServices.businessConceptLayer.HealthCode healthCode = rifServices.businessConceptLayer.HealthCode . newInstance () ; healthCode . setCode ( term . getLabel () ) ; healthCode . setTopLevelTerm ( ( ( term . getParentTerm () ) == null ) ) ; healthCode . setNameSpace ( term . getNameSpace () ) ; healthCode . setDescription ( term . getDescription () ) ; healthCode . setNumberOfSubTerms ( term . getSubTerms () . size () ) ; return healthCode ; } <s> Bug fix and Junit test of ICD10ClaMLTaxonomyProvider.  Fix bugs in the first version. Add Junit test. Find some classes don't override hashCode and equals methods.
bug_after_refactoring: private rifServices.businessConceptLayer.HealthCode rgygtgbsmcmlpntdenpw ( rifServices.taxonomyServices.TaxonomyTerm term ) { rifServices.businessConceptLayer.HealthCode healthCode = rifServices.businessConceptLayer.HealthCode . newInstance () ; healthCode . setCode ( term . getLabel () ) ; healthCode . setTopLevelTerm ( ( ( term . getParentTerm () ) == null ) ) ; healthCode . setNameSpace ( term . getNameSpace () ) ; healthCode . setDescription ( term . getDescription () ) ; healthCode . setNumberOfSubTerms ( term . getSubTerms () . size () ) ; return healthCode ; } <s> private rifServices.businessConceptLayer.HealthCode rgygtgbsmcmlpntdenpw ( rifServices.taxonomyServices.TaxonomyTerm term ) { rifServices.businessConceptLayer.HealthCode healthCode = rifServices.businessConceptLayer.HealthCode . newInstance () ; healthCode . setCode ( term . getLabel () ) ; healthCode . setTopLevelTerm ( ( ( term . getParentTerm () ) == null ) ) ; healthCode . setNameSpace ( term . getNameSpace () ) ; healthCode . setDescription ( term . getDescription () ) ; healthCode . setNumberOfSubTerms ( term . getSubTerms () . size () ) ; return healthCode ; } <s> Bug fix and Junit test of ICD10ClaMLTaxonomyProvider.  Fix bugs in the first version. Add Junit test. Find some classes don't override hashCode and equals methods.
fix_before_refactoring: public rifServices.businessConceptLayer.HealthCode transformTaxonomyTermIntoHealthCode ( rifServices.taxonomyServices.TaxonomyTerm term ) { if ( term == null ) { return null ; } rifServices.businessConceptLayer.HealthCode healthCode = rifServices.businessConceptLayer.HealthCode . newInstance () ; healthCode . setCode ( term . getLabel () ) ; healthCode . setTopLevelTerm ( ( ( term . getParentTerm () ) == null ) ) ; healthCode . setNameSpace ( term . getNameSpace () ) ; healthCode . setDescription ( term . getDescription () ) ; healthCode . setNumberOfSubTerms ( term . getSubTerms () . size () ) ; return healthCode ; }
fix_after_refactoring: public rifServices.businessConceptLayer.HealthCode rgygtgbsmcmlpntdenpw ( rifServices.taxonomyServices.TaxonomyTerm term ) { if ( term == null ) { return null ; } rifServices.businessConceptLayer.HealthCode healthCode = rifServices.businessConceptLayer.HealthCode . newInstance () ; healthCode . setCode ( term . getLabel () ) ; healthCode . setTopLevelTerm ( ( ( term . getParentTerm () ) == null ) ) ; healthCode . setNameSpace ( term . getNameSpace () ) ; healthCode . setDescription ( term . getDescription () ) ; healthCode . setNumberOfSubTerms ( term . getSubTerms () . size () ) ; return healthCode ; }
× fix_prediction_before: private rifServices.business.ConceptLayer.HealthCode transformHealthonomyIntoHealthonomy ( rifServices.business.TermTaxonomyServices termTaxonomyServices ) { rifServices.business.HealthCode healthCode = rifServices.business.HealthCodeLayer.HealthCode . newInstance () ; healthCode . setCode ( termHealthCode . getLabel () ) ; healthCode . setTerm ( termTerm . getParent () ) ; healthCode . setName ( termSpaceCode . getDescription () ) ; healthCode . setDescription ( null ) ; return healthCode ; }
× fix_prediction_after: private rifServices.business.ConceptLayer.Healthygtg ( rg.mc.pwden.pbs.ml.pwden.TermTaxonomyServices rifServices ) { rifServices.business.HealthCode healthHealthCode = rifServices.business.HealthCode . newInstance () ; healthHealthCode . setCode ( rifServices . getLabelCode () ) ; termCode . setTerm ( healthTerm ) ; healthCode . setName ( healthSpace . getParent () . getName () ) ; healthCode . setDescription ( healthNumberOfTerms . getDescription () . hashCode () ) ; return healthCode ; }

line_index: 687
bug_before_refactoring: public org.json.JSONObject startVM ( org.json.JSONObject vmdata ) { try { java.lang.String tid = vmdata . getString ( "tid" ) ; if ( tid . isEmpty () ) { return _create_tvd ( vmdata ) ; } else { return _start_tvd ( vmdata ) ; } } catch ( java.lang.Exception e ) {} } <s> public org.json.JSONObject startVM ( org.json.JSONObject vmdata ) { try { java.lang.String tid = vmdata . getString ( "tid" ) ; if ( tid . isEmpty () ) { return _create_tvd ( vmdata ) ; } else { return _start_tvd ( vmdata ) ; } } catch ( java.lang.Exception e ) {} } <s> fix bugs.
bug_after_refactoring: public org.json.JSONObject aszwgteidvrgpcmcfwua ( org.json.JSONObject vmdata ) { try { java.lang.String tid = vmdata . getString ( "tid" ) ; if ( tid . isEmpty () ) { return _create_tvd ( vmdata ) ; } else { return _start_tvd ( vmdata ) ; } } catch ( java.lang.Exception e ) {} } <s> public org.json.JSONObject aszwgteidvrgpcmcfwua ( org.json.JSONObject vmdata ) { try { java.lang.String tid = vmdata . getString ( "tid" ) ; if ( tid . isEmpty () ) { return _create_tvd ( vmdata ) ; } else { return _start_tvd ( vmdata ) ; } } catch ( java.lang.Exception e ) {} } <s> fix bugs.
fix_before_refactoring: { return new org.json.JSONObject () ; }
fix_after_refactoring: { return new org.json.JSONObject () ; }
× fix_prediction_before: public org.json.JSONObject startVM ( org.json.JSONObject vm ) { try { java.lang.String tid = vm . getString ( "data" ) ; if ( tid . isEmpty () ) { return _tv_create_dtv ; } else { return _tv_start_dtv ; } } catch ( java.lang.Exception e ) {} return null ; }
× fix_prediction_after: private org.json.JSONObject aszwidvrgcf ( org.json.JSONObject vm ) { try { java.lang.String tid = tid . getString ( "data" ) ; if ( tid . isEmpty () ) { return _tv_create_data ; } else { return _tv_startd ; } } catch ( java.lang.Exception e ) {} return null ; }

line_index: 688
bug_before_refactoring: @ java.lang.Override public void onDataPacket ( net.minecraft.network.NetworkManager net , net.minecraft.network.play.server.SPacketUpdateTileEntity packet ) { super . onDataPacket ( net , packet ) ; readFromNBT ( packet . getNbtCompound () ) ; net.minecraft.block.state.IBlockState state = world . getBlockState ( pos ) ; world . notifyBlockUpdate ( pos , state , state , 3 ) ; } <s> @ java.lang.Override public void onDataPacket ( net.minecraft.network.NetworkManager net , net.minecraft.network.play.server.SPacketUpdateTileEntity packet ) { super . onDataPacket ( net , packet ) ; readFromNBT ( packet . getNbtCompound () ) ; net.minecraft.block.state.IBlockState state = world . getBlockState ( pos ) ; world . notifyBlockUpdate ( pos , state , state , 3 ) ; } <s> Fix some version issues
bug_after_refactoring: @ java.lang.Override public void eobbsqqlcmnnxqafmdyc ( net.minecraft.network.NetworkManager net , net.minecraft.network.play.server.SPacketUpdateTileEntity packet ) { super . eobbsqqlcmnnxqafmdyc ( net , packet ) ; readFromNBT ( packet . getNbtCompound () ) ; net.minecraft.block.state.IBlockState state = world . getBlockState ( pos ) ; world . notifyBlockUpdate ( pos , state , state , 3 ) ; } <s> @ java.lang.Override public void eobbsqqlcmnnxqafmdyc ( net.minecraft.network.NetworkManager net , net.minecraft.network.play.server.SPacketUpdateTileEntity packet ) { super . eobbsqqlcmnnxqafmdyc ( net , packet ) ; readFromNBT ( packet . getNbtCompound () ) ; net.minecraft.block.state.IBlockState state = world . getBlockState ( pos ) ; world . notifyBlockUpdate ( pos , state , state , 3 ) ; } <s> Fix some version issues
fix_before_refactoring: public void onDataPacket ( net.minecraft.network.NetworkManager net , net.minecraft.network.play.server.SPacketUpdateTileEntity packet ) { super . onDataPacket ( net , packet ) ; readFromNBT ( packet . getNbtCompound () ) ; net.minecraft.block.state.IBlockState state = this . world . getBlockState ( this . pos ) ; this . world . notifyBlockUpdate ( this . pos , state , state , 3 ) ; }
fix_after_refactoring: public void eobbsqqlcmnnxqafmdyc ( net.minecraft.network.NetworkManager net , net.minecraft.network.play.server.SPacketUpdateTileEntity packet ) { super . eobbsqqlcmnnxqafmdyc ( net , packet ) ; readFromNBT ( packet . getNbtCompound () ) ; net.minecraft.block.state.IBlockState state = this . world . getBlockState ( this . pos ) ; this . world . notifyBlockUpdate ( this . pos , state , state , 3 ) ; }
× fix_prediction_before: @ java.lang.Override public void onDataPacket ( net.minecraft.network.NetworkManager.NetworkEntity.SplayPacket packet , net.minecraft.network.TileEntityUpdateTilePacket packet ) { super . onDataPacket ( packet , getNbtCompound () ) ; net.minecraft.block.state.IBlockState pos = world . getBlockState ( world , 3 ) ; world . notifyBlock ( pos , state ) ; }
× fix_prediction_after: @ java.lang.Override public void eobbs ( net.minecraft.mdx.nn.NetworkManager.NetworkSplayPacketUpdate packet , net.minecraft.network.server.play.TileEntityUpdateTileEntity packet ) { super . eobbs ( eobbsnn , packet ) ; net.minecraft.mdx.NBT . readFromNBT ( packet . getNbt () ) ; net.minecraft.block.state.IBlockState world = world . getBlockState ( world , pos ) ; state . notifyBlock ( 3 , world ) ; }

line_index: 689
bug_before_refactoring: public static void loadConfig ( java.lang.String name ) { org.vitrivr.cineast.core.config.Config config = new org.vitrivr.cineast.core.util.json.JacksonJsonProvider () . toObject ( new java.io.File ( name ) , org.vitrivr.cineast.core.config.Config . class ) ; org.vitrivr.cineast.core.config.Config.LOGGER . info ( "Config file loaded!" ) ; if ( config == null ) { org.vitrivr.cineast.core.config.Config.LOGGER . warn ( "Could not read config file '{}'." , name ) ; } else { synchronized ( org.vitrivr.cineast.core.config.Config . class ) { org.vitrivr.cineast.core.config.Config.sharedConfig = config ; } } } <s> public static void loadConfig ( java.lang.String name ) { org.vitrivr.cineast.core.config.Config config = new org.vitrivr.cineast.core.util.json.JacksonJsonProvider () . toObject ( new java.io.File ( name ) , org.vitrivr.cineast.core.config.Config . class ) ; org.vitrivr.cineast.core.config.Config.LOGGER . info ( "Config file loaded!" ) ; if ( config == null ) { org.vitrivr.cineast.core.config.Config.LOGGER . warn ( "Could not read config file '{}'." , name ) ; } else { synchronized ( org.vitrivr.cineast.core.config.Config . class ) { org.vitrivr.cineast.core.config.Config.sharedConfig = config ; } } } <s> FIXED: Minor issue that caused the BenchmarkEngine to be loaded twice.
bug_after_refactoring: public static void wvmvlyknlrjbdfcscafv ( java.lang.String name ) { org.vitrivr.cineast.core.config.Config config = new org.vitrivr.cineast.core.util.json.JacksonJsonProvider () . toObject ( new java.io.File ( name ) , org.vitrivr.cineast.core.config.Config . class ) ; org.vitrivr.cineast.core.config.Config.LOGGER . info ( "Config file loaded!" ) ; if ( config == null ) { org.vitrivr.cineast.core.config.Config.LOGGER . warn ( "Could not read config file '{}'." , name ) ; } else { synchronized ( org.vitrivr.cineast.core.config.Config . class ) { org.vitrivr.cineast.core.config.Config.sharedConfig = config ; } } } <s> public static void wvmvlyknlrjbdfcscafv ( java.lang.String name ) { org.vitrivr.cineast.core.config.Config config = new org.vitrivr.cineast.core.util.json.JacksonJsonProvider () . toObject ( new java.io.File ( name ) , org.vitrivr.cineast.core.config.Config . class ) ; org.vitrivr.cineast.core.config.Config.LOGGER . info ( "Config file loaded!" ) ; if ( config == null ) { org.vitrivr.cineast.core.config.Config.LOGGER . warn ( "Could not read config file '{}'." , name ) ; } else { synchronized ( org.vitrivr.cineast.core.config.Config . class ) { org.vitrivr.cineast.core.config.Config.sharedConfig = config ; } } } <s> FIXED: Minor issue that caused the BenchmarkEngine to be loaded twice.
fix_before_refactoring: public static org.vitrivr.cineast.core.config.Config loadConfig ( java.lang.String name ) { org.vitrivr.cineast.core.config.Config config = new org.vitrivr.cineast.core.util.json.JacksonJsonProvider () . toObject ( new java.io.File ( name ) , org.vitrivr.cineast.core.config.Config . class ) ; org.vitrivr.cineast.core.config.Config.LOGGER . info ( "Config file loaded!" ) ; if ( config == null ) { org.vitrivr.cineast.core.config.Config.LOGGER . warn ( "Could not read config file '{}'." , name ) ; return null ; } else { return config ; } }
fix_after_refactoring: public static org.vitrivr.cineast.core.config.Config wvmvlyknlrjbdfcscafv ( java.lang.String name ) { org.vitrivr.cineast.core.config.Config config = new org.vitrivr.cineast.core.util.json.JacksonJsonProvider () . toObject ( new java.io.File ( name ) , org.vitrivr.cineast.core.config.Config . class ) ; org.vitrivr.cineast.core.config.Config.LOGGER . info ( "Config file loaded!" ) ; if ( config == null ) { org.vitrivr.cineast.core.config.Config.LOGGER . warn ( "Could not read config file '{}'." , name ) ; return null ; } else { return config ; } }
× fix_prediction_before: public static void loadConfig ( java.lang.String name ) { org.vitrivr.astine.config.core.Config config = new org.vitrivr.astine.config.core.JsonFile ( name , new java.io.File ( org.vitrivr.astine.config.core.Config . class ) ) ; if ( config == null ) { org.vitrivr.astine.config.coreConfig.LOGGER . info ( "Could not read file loaded!" ) ; } else { org.vitrivr.astine.config.coreConfig.LOGGER . warn ( "Could not read file loaded!" ) ; } }
× fix_prediction_after: public static void wvmvklyr.jbscaf.vit.core.config.rivit.config.Config config ( java.lang.String name ) { org.vitc.riv.vit.core.config.rivit.JsonConfig config = new org.vitc.riv.vit.core.config.rivit.JsonConfigProvider () . toProvider ( java.io.File . class , name ) ; if ( config == null ) { org.vitc.rivast.vit.core.config.rivit.config.Config.LOGGER . info ( "Could not read loaded!" ) ; } else { org.vitc.rivast.vit.core.config.rivit.config.Config config = config . readConfig ( org.vitc.rivast.vit.core.config.rivit.config.Config . class ) ; if ( config == null ) { org.vitc.rivast.vit.core.config.rivr.config.Config.LOGGER . warn ( "Could not read loaded!" ) ; } else { config . warn ( "Could not read loaded!" ) ; } } }

line_index: 690
bug_before_refactoring: @ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( checkConnection () ) { theView . setVisible ( false ) ; theCAView = new gomoku.CreateAccountView () ; theCAView . setVisible ( true ) ; caController = new gomoku.CreateAccountController ( theCAView , theConnection , theView ) ; theConnection . setCreateAccountController ( caController ) ; } } <s> @ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( checkConnection () ) { theView . setVisible ( false ) ; theCAView = new gomoku.CreateAccountView () ; theCAView . setVisible ( true ) ; caController = new gomoku.CreateAccountController ( theCAView , theConnection , theView ) ; theConnection . setCreateAccountController ( caController ) ; } } <s> fixed create account issue that occurred after attempting a signed in
bug_after_refactoring: @ java.lang.Override public void cydlssbvghthcyjqfnzh ( java.awt.event.ActionEvent e ) { if ( checkConnection () ) { theView . setVisible ( false ) ; theCAView = new gomoku.CreateAccountView () ; theCAView . setVisible ( true ) ; caController = new gomoku.CreateAccountController ( theCAView , theConnection , theView ) ; theConnection . setCreateAccountController ( caController ) ; } } <s> @ java.lang.Override public void cydlssbvghthcyjqfnzh ( java.awt.event.ActionEvent e ) { if ( checkConnection () ) { theView . setVisible ( false ) ; theCAView = new gomoku.CreateAccountView () ; theCAView . setVisible ( true ) ; caController = new gomoku.CreateAccountController ( theCAView , theConnection , theView ) ; theConnection . setCreateAccountController ( caController ) ; } } <s> fixed create account issue that occurred after attempting a signed in
fix_before_refactoring: @ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { checkConnection () ; theView . setVisible ( false ) ; theCAView = new gomoku.CreateAccountView () ; theCAView . setVisible ( true ) ; caController = new gomoku.CreateAccountController ( theCAView , theConnection , theView ) ; theConnection . setCreateAccountController ( caController ) ; }
fix_after_refactoring: @ java.lang.Override public void cydlssbvghthcyjqfnzh ( java.awt.event.ActionEvent e ) { checkConnection () ; theView . setVisible ( false ) ; theCAView = new gomoku.CreateAccountView () ; theCAView . setVisible ( true ) ; caController = new gomoku.CreateAccountController ( theCAView , theConnection , theView ) ; theConnection . setCreateAccountController ( caController ) ; }
× fix_prediction_before: @ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( checkConnection () ) { theView . setVisible ( false ) ; theView = new gomokuCreateAccount () ; theView . setVisible ( true ) ; gomokuCreateAccount = new ca.CreateAccount ( theController , theController , theController ) ; theView . setConnection ( ca ) ; } }
× fix_prediction_after: @ java.lang.Override public void cyssdl ( cyv.bthjqghhz.fnhz.event.Connection e ) { if ( checkCA () ) { theView . setVisible ( false ) ; gomokuView . setVisible ( true ) ; theView = new ca.CreateAccount () ; gomokuView . setVisible ( true ) ; } gomokuView . setController ( new ca.CreateAccount ( theController , theController , theController ) ) ; }

line_index: 691
bug_before_refactoring: public static void addTimeIconToAlarm ( long id ) { com.fasterxml.jackson.databind.node.ObjectNode jsonNotification = play.libs.Json . newObject () ; com.fasterxml.jackson.databind.node.ObjectNode action = play.libs.Json . newObject () ; jsonNotification . put ( "action" , action ) ; action . put ( "action" , "addTimeNotification" ) ; jsonNotification . put ( "alarmId" , id ) ; core.MyWebSocketManager . notifyAll ( jsonNotification ) ; } <s> public static void addTimeIconToAlarm ( long id ) { com.fasterxml.jackson.databind.node.ObjectNode jsonNotification = play.libs.Json . newObject () ; com.fasterxml.jackson.databind.node.ObjectNode action = play.libs.Json . newObject () ; jsonNotification . put ( "action" , action ) ; action . put ( "action" , "addTimeNotification" ) ; jsonNotification . put ( "alarmId" , id ) ; core.MyWebSocketManager . notifyAll ( jsonNotification ) ; } <s> Started refactoring web sockets and event management. Fixed error causing finished alarm to still trigger confirmation dialog box
bug_after_refactoring: public static void uinjnqluhjarxsanqpey ( long id ) { com.fasterxml.jackson.databind.node.ObjectNode jsonNotification = play.libs.Json . newObject () ; com.fasterxml.jackson.databind.node.ObjectNode action = play.libs.Json . newObject () ; jsonNotification . put ( "action" , action ) ; action . put ( "action" , "addTimeNotification" ) ; jsonNotification . put ( "alarmId" , id ) ; core.MyWebSocketManager . notifyAll ( jsonNotification ) ; } <s> public static void uinjnqluhjarxsanqpey ( long id ) { com.fasterxml.jackson.databind.node.ObjectNode jsonNotification = play.libs.Json . newObject () ; com.fasterxml.jackson.databind.node.ObjectNode action = play.libs.Json . newObject () ; jsonNotification . put ( "action" , action ) ; action . put ( "action" , "addTimeNotification" ) ; jsonNotification . put ( "alarmId" , id ) ; core.MyWebSocketManager . notifyAll ( jsonNotification ) ; } <s> Started refactoring web sockets and event management. Fixed error causing finished alarm to still trigger confirmation dialog box
fix_before_refactoring: @ java.lang.Deprecated public void addTimeIconToAlarm ( long id ) { com.fasterxml.jackson.databind.node.ObjectNode jsonNotification = play.libs.Json . newObject () ; com.fasterxml.jackson.databind.node.ObjectNode action = play.libs.Json . newObject () ; jsonNotification . put ( "action" , action ) ; action . put ( "action" , "addTimeNotification" ) ; jsonNotification . put ( "alarmId" , id ) ; notifyAll ( jsonNotification ) ; }
fix_after_refactoring: @ java.lang.Deprecated public void uinjnqluhjarxsanqpey ( long id ) { com.fasterxml.jackson.databind.node.ObjectNode jsonNotification = play.libs.Json . newObject () ; com.fasterxml.jackson.databind.node.ObjectNode action = play.libs.Json . newObject () ; jsonNotification . put ( "action" , action ) ; action . put ( "action" , "addTimeNotification" ) ; jsonNotification . put ( "alarmId" , id ) ; notifyAll ( jsonNotification ) ; }
× fix_prediction_before: @ java.lang.Deprecated public void addTimeIconToAlarm ( long id ) { com.fasterxml.jackson.databind.node.ObjectNode jsonNotification = play.libs.Json . newObject () ; com.fasterxml.jackson.databind.node.ObjectNode action = play.libs.Json . newObject () ; jsonNotification . put ( "action" , action ) ; action . put ( "action" , "addTime" ) ; jsonNotification . put ( "alarmId" , id ) ; notifyAll ( jsonNotification ) ; }
× fix_prediction_after: @ java.lang.Deprecated public void uinjnqlujarh.xspeypeypeypey.databind.node.ObjectNode id ( long id ) { com.fasterxml.jackson.databind.node.ObjectNode jsonNotification = play.libs.Json . newObject () ; com.fasterxml.jackson.databind.node.ObjectNode action = play.libs.Json . newObject () ; jsonNotification . put ( "action" , action ) ; action . put ( "action" , "addTime" ) ; jsonNotification . put ( "alarmId" , id ) ; notifyAll ( jsonNotification ) ; }

line_index: 692
bug_before_refactoring: private double getMaxHitpointsStamina () { return ( ( double ) ( java.lang.Math . ceil ( ( ( ( ( double ) ( this . getWeight () ) ) * ( ( double ) ( this . getToughness () ) ) ) / 50 ) ) ) ) ; } <s> private double getMaxHitpointsStamina () { return ( ( double ) ( java.lang.Math . ceil ( ( ( ( ( double ) ( this . getWeight () ) ) * ( ( double ) ( this . getToughness () ) ) ) / 50 ) ) ) ) ; } <s> fixed 100000 bugs (TODO: default behaviour)  random position (nog nakijken) stop resting when done default behaviour setLocation in constructor fixed some tests fixed moving!!!!! random default start to sprint CONNECTED GUI fixed 999987 other bugs with GUI
bug_after_refactoring: private double shzndnuwrhxhgbtjgpew () { return ( ( double ) ( java.lang.Math . ceil ( ( ( ( ( double ) ( this . getWeight () ) ) * ( ( double ) ( this . getToughness () ) ) ) / 50 ) ) ) ) ; } <s> private double shzndnuwrhxhgbtjgpew () { return ( ( double ) ( java.lang.Math . ceil ( ( ( ( ( double ) ( this . getWeight () ) ) * ( ( double ) ( this . getToughness () ) ) ) / 50 ) ) ) ) ; } <s> fixed 100000 bugs (TODO: default behaviour)  random position (nog nakijken) stop resting when done default behaviour setLocation in constructor fixed some tests fixed moving!!!!! random default start to sprint CONNECTED GUI fixed 999987 other bugs with GUI
fix_before_refactoring: public int getMaxHitpointsStamina () { return ( ( int ) ( java.lang.Math . ceil ( ( ( ( ( double ) ( this . getWeight () ) ) * ( ( double ) ( this . getToughness () ) ) ) / 50 ) ) ) ) ; }
fix_after_refactoring: public int shzndnuwrhxhgbtjgpew () { return ( ( int ) ( java.lang.Math . ceil ( ( ( ( ( double ) ( this . getWeight () ) ) * ( ( double ) ( this . getToughness () ) ) ) / 50 ) ) ) ) ; }
× fix_prediction_before: public double getMaxHitpointsStamina () { return ( ( double ) ( java.lang.Math . ceil ( ( ( ( double ) ( this . getWeight () ) ) * ( ( double ) ( this . getToughness () ) ) ) ) ) / 50 ; }
× fix_prediction_after: public double shzndnu (nu.hxtjewgp.jewgp. () { return ( ( double ) ( java.lang.Math . ceil ( ( ( ( double ) ( ( this . getWeight () ) * ( ( double ) ( this . getToughness () ) ) / 50 ) ) ) ) ) ) ; }

line_index: 693
bug_before_refactoring: @ org.osgi.service.component.annotations.Activate public void start ( org.osgi.framework.BundleContext bundleContext ) throws java.lang.Exception { org.wso2.carbon.internal.DataHolder . getInstance () . setBundleContext ( bundleContext ) ; org.wso2.carbon.kernel.config.CarbonConfigProvider configProvider = new org.wso2.carbon.internal.kernel.config.XMLBasedConfigProvider () ; org.wso2.carbon.kernel.CarbonRuntime carbonRuntime = org.wso2.carbon.internal.kernel.context.CarbonRuntimeFactory . createCarbonRuntime ( configProvider ) ; bundleContext . registerService ( org.wso2.carbon.kernel.CarbonRuntime . class . getName () , carbonRuntime , null ) ; } <s> @ org.osgi.service.component.annotations.Activate public void start ( org.osgi.framework.BundleContext bundleContext ) throws java.lang.Exception { org.wso2.carbon.internal.DataHolder . getInstance () . setBundleContext ( bundleContext ) ; org.wso2.carbon.kernel.config.CarbonConfigProvider configProvider = new org.wso2.carbon.internal.kernel.config.XMLBasedConfigProvider () ; org.wso2.carbon.kernel.CarbonRuntime carbonRuntime = org.wso2.carbon.internal.kernel.context.CarbonRuntimeFactory . createCarbonRuntime ( configProvider ) ; bundleContext . registerService ( org.wso2.carbon.kernel.CarbonRuntime . class . getName () , carbonRuntime , null ) ; } <s> fixing assembly and checkstyle plugin issues
bug_after_refactoring: @ org.osgi.service.component.annotations.Activate public void egvfjwnabrrxokdokqqu ( org.osgi.framework.BundleContext bundleContext ) throws java.lang.Exception { org.wso2.carbon.internal.DataHolder . getInstance () . setBundleContext ( bundleContext ) ; org.wso2.carbon.kernel.config.CarbonConfigProvider configProvider = new org.wso2.carbon.internal.kernel.config.XMLBasedConfigProvider () ; org.wso2.carbon.kernel.CarbonRuntime carbonRuntime = org.wso2.carbon.internal.kernel.context.CarbonRuntimeFactory . createCarbonRuntime ( configProvider ) ; bundleContext . registerService ( org.wso2.carbon.kernel.CarbonRuntime . class . getName () , carbonRuntime , null ) ; } <s> @ org.osgi.service.component.annotations.Activate public void egvfjwnabrrxokdokqqu ( org.osgi.framework.BundleContext bundleContext ) throws java.lang.Exception { org.wso2.carbon.internal.DataHolder . getInstance () . setBundleContext ( bundleContext ) ; org.wso2.carbon.kernel.config.CarbonConfigProvider configProvider = new org.wso2.carbon.internal.kernel.config.XMLBasedConfigProvider () ; org.wso2.carbon.kernel.CarbonRuntime carbonRuntime = org.wso2.carbon.internal.kernel.context.CarbonRuntimeFactory . createCarbonRuntime ( configProvider ) ; bundleContext . registerService ( org.wso2.carbon.kernel.CarbonRuntime . class . getName () , carbonRuntime , null ) ; } <s> fixing assembly and checkstyle plugin issues
fix_before_refactoring: @ org.osgi.service.component.annotations.Activate protected void start ( org.osgi.framework.BundleContext bundleContext ) throws java.lang.Exception { org.wso2.carbon.internal.DataHolder . getInstance () . setBundleContext ( bundleContext ) ; org.wso2.carbon.kernel.config.CarbonConfigProvider configProvider = new org.wso2.carbon.internal.kernel.config.XMLBasedConfigProvider () ; org.wso2.carbon.kernel.CarbonRuntime carbonRuntime = org.wso2.carbon.internal.kernel.context.CarbonRuntimeFactory . createCarbonRuntime ( configProvider ) ; bundleContext . registerService ( org.wso2.carbon.kernel.CarbonRuntime . class . getName () , carbonRuntime , null ) ; }
fix_after_refactoring: @ org.osgi.service.component.annotations.Activate protected void egvfjwnabrrxokdokqqu ( org.osgi.framework.BundleContext bundleContext ) throws java.lang.Exception { org.wso2.carbon.internal.DataHolder . getInstance () . setBundleContext ( bundleContext ) ; org.wso2.carbon.kernel.config.CarbonConfigProvider configProvider = new org.wso2.carbon.internal.kernel.config.XMLBasedConfigProvider () ; org.wso2.carbon.kernel.CarbonRuntime carbonRuntime = org.wso2.carbon.internal.kernel.context.CarbonRuntimeFactory . createCarbonRuntime ( configProvider ) ; bundleContext . registerService ( org.wso2.carbon.kernel.CarbonRuntime . class . getName () , carbonRuntime , null ) ; }
× fix_prediction_before: @ org.osgi.service.annotations.Activate public void start ( org.osgi.framework.BundleContext bundleContext ) throws java.lang.Exception { org.wso2.carbon.internal.DataBundleContextHolder . getInstance () . setBundleContext ( bundleContext ) ; org.wso2.carbon.kernel.config.CarbonRuntimeProvider configProvider = new org.wso2.carbon.kernel.config.CarbonRuntimeProvider () ; org.wso2.carbon.kernel.internal.CarbonRuntimeProvider bundleContext = org.wso2.carbon.kernel.internal.CarbonRuntimeProvider . createCarbonRuntimeProvider ( org.wso2.carbon.kernel.config.CarbonRuntimeProvider . class . getName () , carbonProvider , null ) ; bundleContext . registerService ( org.wso2.carbon.kernel.CarbonRuntimeProvider . class . getName () , carbonRuntimeProvider ) ; }
× fix_prediction_after: @ org.osgi.service.component.annotations.Activate public voidOrder ( ) throws java.lang.Exception { org.wso2.carbon.framework.internal.DataBundleContext bundleContext = org.wso2.carbon.kernel.internal.config.CarbonContextProvider . getInstance () ; org.wso2.carbon.kernel.internal.config.CarbonRuntimeProvider configProvider = new org.wso2.carbon.kernel.internal.config.CarbonRuntimeProvider () ; configProvider . registerService ( org.wso2.carbon.kernel.internal.CarbonRuntimeProvider . class . getName () , org.wso2.carbon.kernel.internal.config.CarbonRuntimeProvider . class , null ) ; bundleContext . registerService ( org.wso2.carbon.kernel.internal.config.CarbonRuntimeProvider . class . getName () , carbonRuntimeProvider ) ; }

line_index: 694
bug_before_refactoring: private < T > java.lang.Object getFieldValue ( T classObject , java.lang.String fieldName ) throws org.wso2.carbon.config.ConfigurationException { java.lang.reflect.Field field = getClassField ( classObject , fieldName ) ; try { return field . get ( classObject ) ; } catch ( java.lang.IllegalAccessException e ) { throw new org.wso2.carbon.config.ConfigurationException ( java.lang.String . format ( java.util.Locale.ENGLISH , "Error in obtaining value for field %s in %s" , fieldName , classObject . getClass () ) ) ; } } <s> private < T > java.lang.Object getFieldValue ( T classObject , java.lang.String fieldName ) throws org.wso2.carbon.config.ConfigurationException { java.lang.reflect.Field field = getClassField ( classObject , fieldName ) ; try { return field . get ( classObject ) ; } catch ( java.lang.IllegalAccessException e ) { throw new org.wso2.carbon.config.ConfigurationException ( java.lang.String . format ( java.util.Locale.ENGLISH , "Error in obtaining value for field %s in %s" , fieldName , classObject . getClass () ) ) ; } } <s> Code review fixes for issue #48
bug_after_refactoring: private < T > java.lang.Object lwkhalwztptqdjijumnc ( T classObject , java.lang.String fieldName ) throws org.wso2.carbon.config.ConfigurationException { java.lang.reflect.Field field = getClassField ( classObject , fieldName ) ; try { return field . get ( classObject ) ; } catch ( java.lang.IllegalAccessException e ) { throw new org.wso2.carbon.config.ConfigurationException ( java.lang.String . format ( java.util.Locale.ENGLISH , "Error in obtaining value for field %s in %s" , fieldName , classObject . getClass () ) ) ; } } <s> private < T > java.lang.Object lwkhalwztptqdjijumnc ( T classObject , java.lang.String fieldName ) throws org.wso2.carbon.config.ConfigurationException { java.lang.reflect.Field field = getClassField ( classObject , fieldName ) ; try { return field . get ( classObject ) ; } catch ( java.lang.IllegalAccessException e ) { throw new org.wso2.carbon.config.ConfigurationException ( java.lang.String . format ( java.util.Locale.ENGLISH , "Error in obtaining value for field %s in %s" , fieldName , classObject . getClass () ) ) ; } } <s> Code review fixes for issue #48
fix_before_refactoring: private < T > java.lang.Object getFieldValue ( T classObject , java.lang.reflect.Field field ) throws org.wso2.carbon.config.ConfigurationException { try { return field . get ( classObject ) ; } catch ( java.lang.IllegalAccessException e ) { throw new org.wso2.carbon.config.ConfigurationException ( java.lang.String . format ( java.util.Locale.ENGLISH , "Error in obtaining value for field %s in %s" , field . getName () , classObject . getClass () ) ) ; } }
fix_after_refactoring: private < T > java.lang.Object lwkhalwztptqdjijumnc ( T classObject , java.lang.reflect.Field field ) throws org.wso2.carbon.config.ConfigurationException { try { return field . get ( classObject ) ; } catch ( java.lang.IllegalAccessException e ) { throw new org.wso2.carbon.config.ConfigurationException ( java.lang.String . format ( java.util.Locale.ENGLISH , "Error in obtaining value for field %s in %s" , field . getName () , classObject . getClass () ) ) ; } }
× fix_prediction_before: public < T > java.lang.Object getTable ( java.lang.Object classObject , java.lang.String fieldName ) throws org.wso2.carbon.config.ConfigurationException { java.lang.reflect.Field field = getClass ( fieldName , fieldName ) ; try { return classField . get ( classObject ) ; } catch ( java.lang.IllegalAccessException e ) { throw new org.wso2.carbon.config.ConfigurationException ( java.util.Locale.ENGLISH , java.lang.String . format ( "Error in class for class %s" , fieldName , e ) ) ; } }
× fix_prediction_after: private < T > java.lang.Object lwkwtijq ( java.lang.String classObject , java.lang.String fieldName ) throws org.wso2.carbon.config.FieldException { try { return getClassField ( fieldName , fieldField ) ; } catch ( java.lang.IllegalAccessException e ) { throw new org.wso2.carbon.config.FieldException ( java.util.Locale.ENGLISH , java.lang.String . format ( "Error in %s for class %s" , classObject , fieldName ) , e ) ; } }

line_index: 695
bug_before_refactoring: public void enqueue ( com.hortonworks.streamline.streams.notification.Notifier notifier , com.hortonworks.streamline.streams.notification.Notification notification ) { com.hortonworks.streamline.streams.notification.service.NotificationQueueHandler.NotificationQueueTask task = new com.hortonworks.streamline.streams.notification.service.NotificationQueueHandler.NotificationQueueTask ( notifier , notification ) ; java.util.concurrent.Future < ? > future = executorService . submit ( task ) ; taskMap . put ( notification . getId () , org.apache.commons.lang3.tuple.Pair . of ( task , future ) ) ; } <s> public void enqueue ( com.hortonworks.streamline.streams.notification.Notifier notifier , com.hortonworks.streamline.streams.notification.Notification notification ) { com.hortonworks.streamline.streams.notification.service.NotificationQueueHandler.NotificationQueueTask task = new com.hortonworks.streamline.streams.notification.service.NotificationQueueHandler.NotificationQueueTask ( notifier , notification ) ; java.util.concurrent.Future < ? > future = executorService . submit ( task ) ; taskMap . put ( notification . getId () , org.apache.commons.lang3.tuple.Pair . of ( task , future ) ) ; } <s> ISSUE-935: Fix intermittent test failures from NotificationServiceImplTest  Changed NotificationService.notify to return a Future and make the test case wait until the result is returned.  Fixes #935  Author: Arun Mahadevan <arunm@apache.org>  Closes #944 from arunmahadevan/ISSUE-935  Change-Id: I1ae34fb957d04f20767dacc0aa175c9abeb5bd64
bug_after_refactoring: public void bjamolgcsruaordwlnlh ( com.hortonworks.streamline.streams.notification.Notifier notifier , com.hortonworks.streamline.streams.notification.Notification notification ) { com.hortonworks.streamline.streams.notification.service.NotificationQueueHandler.NotificationQueueTask task = new com.hortonworks.streamline.streams.notification.service.NotificationQueueHandler.NotificationQueueTask ( notifier , notification ) ; java.util.concurrent.Future < ? > future = executorService . submit ( task ) ; taskMap . put ( notification . getId () , org.apache.commons.lang3.tuple.Pair . of ( task , future ) ) ; } <s> public void bjamolgcsruaordwlnlh ( com.hortonworks.streamline.streams.notification.Notifier notifier , com.hortonworks.streamline.streams.notification.Notification notification ) { com.hortonworks.streamline.streams.notification.service.NotificationQueueHandler.NotificationQueueTask task = new com.hortonworks.streamline.streams.notification.service.NotificationQueueHandler.NotificationQueueTask ( notifier , notification ) ; java.util.concurrent.Future < ? > future = executorService . submit ( task ) ; taskMap . put ( notification . getId () , org.apache.commons.lang3.tuple.Pair . of ( task , future ) ) ; } <s> ISSUE-935: Fix intermittent test failures from NotificationServiceImplTest  Changed NotificationService.notify to return a Future and make the test case wait until the result is returned.  Fixes #935  Author: Arun Mahadevan <arunm@apache.org>  Closes #944 from arunmahadevan/ISSUE-935  Change-Id: I1ae34fb957d04f20767dacc0aa175c9abeb5bd64
fix_before_refactoring: public java.util.concurrent.Future < ? > enqueue ( com.hortonworks.streamline.streams.notification.Notifier notifier , com.hortonworks.streamline.streams.notification.Notification notification ) { com.hortonworks.streamline.streams.notification.service.NotificationQueueHandler.NotificationQueueTask task = new com.hortonworks.streamline.streams.notification.service.NotificationQueueHandler.NotificationQueueTask ( notifier , notification ) ; java.util.concurrent.Future < ? > future = executorService . submit ( task ) ; taskMap . put ( notification . getId () , org.apache.commons.lang3.tuple.Pair . of ( task , future ) ) ; return future ; }
fix_after_refactoring: public java.util.concurrent.Future < ? > bjamolgcsruaordwlnlh ( com.hortonworks.streamline.streams.notification.Notifier notifier , com.hortonworks.streamline.streams.notification.Notification notification ) { com.hortonworks.streamline.streams.notification.service.NotificationQueueHandler.NotificationQueueTask task = new com.hortonworks.streamline.streams.notification.service.NotificationQueueHandler.NotificationQueueTask ( notifier , notification ) ; java.util.concurrent.Future < ? > future = executorService . submit ( task ) ; taskMap . put ( notification . getId () , org.apache.commons.lang3.tuple.Pair . of ( task , future ) ) ; return future ; }
× fix_prediction_before: public void enqueue ( com.onworks.stream.line.streams.notification.Notifier notifier , com.onworks.stream.line.streams.notification.Notification notification ) { com.onworks.stream.line.streams.notification.NotificationQueueNotificationHandler task = new com.onworks.stream.line.streams.notification.NotificationQueueNotificationHandler ( notification ) ; java.util.concurrent.Pair < ? extends org.apache.commons.lang3.tuple.Pair < ? , ? > > future = executorService . submit ( task ) ; notifier . put ( task . getId () , task ) ; }
× fix_prediction_after: public void boljam ( com.grucsaordl.wlhstream.ln.notification.Notifier notifier , com.onstream.streams.notification.Notification.Notification notification ) { com.onstream.streams.notification.service.NotificationQueueNotificationHandler task = new com.onstream.streams.notification.service.NotificationQueueNotificationHandler ( notification ) ; java.util.concurrent.Pair < ? extends org.apache.commons.lang3.tuple.Pair < ? , ? > > future = executorService . submit ( task ) ; bahunQueue . put ( notifier , task . getId () ) ; }

line_index: 696
bug_before_refactoring: public java.lang.String getJoinPointClassName ( final org.aspectj.lang.ProceedingJoinPoint currentJoinPoint ) { java.lang.String className = null ; try { className = currentJoinPoint . getSignature () . toString () ; } catch ( final java.lang.Exception e ) { e . getStackTrace () ; java.lang.System.out . println ( e . getMessage () ) ; className = e . toString () ; } return className ; } <s> public java.lang.String getJoinPointClassName ( final org.aspectj.lang.ProceedingJoinPoint currentJoinPoint ) { java.lang.String className = null ; try { className = currentJoinPoint . getSignature () . toString () ; } catch ( final java.lang.Exception e ) { e . getStackTrace () ; java.lang.System.out . println ( e . getMessage () ) ; className = e . toString () ; } return className ; } <s> eclipse import bug fix
bug_after_refactoring: public java.lang.String iffjjzyqnveaojvxkyri ( final org.aspectj.lang.ProceedingJoinPoint currentJoinPoint ) { java.lang.String className = null ; try { className = currentJoinPoint . getSignature () . toString () ; } catch ( final java.lang.Exception e ) { e . getStackTrace () ; java.lang.System.out . println ( e . getMessage () ) ; className = e . toString () ; } return className ; } <s> public java.lang.String iffjjzyqnveaojvxkyri ( final org.aspectj.lang.ProceedingJoinPoint currentJoinPoint ) { java.lang.String className = null ; try { className = currentJoinPoint . getSignature () . toString () ; } catch ( final java.lang.Exception e ) { e . getStackTrace () ; java.lang.System.out . println ( e . getMessage () ) ; className = e . toString () ; } return className ; } <s> eclipse import bug fix
fix_before_refactoring: private java.lang.String getJoinPointClassName ( final org.aspectj.lang.ProceedingJoinPoint currentJoinPoint ) { java.lang.String className = null ; try { className = currentJoinPoint . getSignature () . toString () ; } catch ( final java.lang.Exception e ) { e . getStackTrace () ; java.lang.System.out . println ( e . getMessage () ) ; className = e . toString () ; } return className ; }
fix_after_refactoring: private java.lang.String iffjjzyqnveaojvxkyri ( final org.aspectj.lang.ProceedingJoinPoint currentJoinPoint ) { java.lang.String className = null ; try { className = currentJoinPoint . getSignature () . toString () ; } catch ( final java.lang.Exception e ) { e . getStackTrace () ; java.lang.System.out . println ( e . getMessage () ) ; className = e . toString () ; } return className ; }
× fix_prediction_before: public java.lang.String getJoinPointClassName ( final org.aspectj.lang.ProceedingJoinPoint currentJoinPoint ) { java.lang.String className = null ; try { className = currentJoinPoint . getSignature () . toString () ; } catch ( final java.lang.Exception e ) { className = e . getStackTrace () ; java.lang.System.out . println ( e . getMessage () ) ; } return className ; }
× fix_prediction_after: public java.lang.String toString () { java.lang.String className = null ; final java.lang.String currentJoinPoint = null ; try { className = className . getSignature () . toString () ; } catch ( final java.lang.Exception e ) { java.lang.System.out . println ( e . getStackTrace () ) ; className = e . getMessage () ; } return className ; }

line_index: 697
bug_before_refactoring: public static edu.byu.nlp.crowdsourcing.MultiAnnModelBuilders.MultiAnnModelBuilder initModelBuilderWithBaselineInit ( edu.byu.nlp.crowdsourcing.MultiAnnModelBuilders.MultiAnnModelBuilder builder , edu.byu.nlp.crowdsourcing.PriorSpecification priors , edu.byu.nlp.data.types.Dataset data , boolean truncateUnlabeledData , org.apache.commons.math3.random.RandomGenerator rnd ) { edu.byu.nlp.crowdsourcing.ModelInitialization.AssignmentInitializer initializer = new edu.byu.nlp.crowdsourcing.ModelInitialization.BaselineInitializer ( rnd ) ; edu.byu.nlp.crowdsourcing.ModelInitialization.AssignmentInitializer mInitializer = new edu.byu.nlp.crowdsourcing.ModelInitialization.BaselineInitializer ( rnd , true ) ; return edu.byu.nlp.crowdsourcing.MultiAnnModelBuilders . initModelBuilder ( builder , priors , data , initializer , mInitializer , rnd ) ; } <s> public static edu.byu.nlp.crowdsourcing.MultiAnnModelBuilders.MultiAnnModelBuilder initModelBuilderWithBaselineInit ( edu.byu.nlp.crowdsourcing.MultiAnnModelBuilders.MultiAnnModelBuilder builder , edu.byu.nlp.crowdsourcing.PriorSpecification priors , edu.byu.nlp.data.types.Dataset data , boolean truncateUnlabeledData , org.apache.commons.math3.random.RandomGenerator rnd ) { edu.byu.nlp.crowdsourcing.ModelInitialization.AssignmentInitializer initializer = new edu.byu.nlp.crowdsourcing.ModelInitialization.BaselineInitializer ( rnd ) ; edu.byu.nlp.crowdsourcing.ModelInitialization.AssignmentInitializer mInitializer = new edu.byu.nlp.crowdsourcing.ModelInitialization.BaselineInitializer ( rnd , true ) ; return edu.byu.nlp.crowdsourcing.MultiAnnModelBuilders . initModelBuilder ( builder , priors , data , initializer , mInitializer , rnd ) ; } <s> fixed some minor bugs affecting hyperparameter tuning with a cross-validation set.
bug_after_refactoring: public static edu.byu.nlp.crowdsourcing.MultiAnnModelBuilders.MultiAnnModelBuilder zzuqmpoqipjuafekmexb ( edu.byu.nlp.crowdsourcing.MultiAnnModelBuilders.MultiAnnModelBuilder builder , edu.byu.nlp.crowdsourcing.PriorSpecification priors , edu.byu.nlp.data.types.Dataset data , boolean truncateUnlabeledData , org.apache.commons.math3.random.RandomGenerator rnd ) { edu.byu.nlp.crowdsourcing.ModelInitialization.AssignmentInitializer initializer = new edu.byu.nlp.crowdsourcing.ModelInitialization.BaselineInitializer ( rnd ) ; edu.byu.nlp.crowdsourcing.ModelInitialization.AssignmentInitializer mInitializer = new edu.byu.nlp.crowdsourcing.ModelInitialization.BaselineInitializer ( rnd , true ) ; return edu.byu.nlp.crowdsourcing.MultiAnnModelBuilders . initModelBuilder ( builder , priors , data , initializer , mInitializer , rnd ) ; } <s> public static edu.byu.nlp.crowdsourcing.MultiAnnModelBuilders.MultiAnnModelBuilder zzuqmpoqipjuafekmexb ( edu.byu.nlp.crowdsourcing.MultiAnnModelBuilders.MultiAnnModelBuilder builder , edu.byu.nlp.crowdsourcing.PriorSpecification priors , edu.byu.nlp.data.types.Dataset data , boolean truncateUnlabeledData , org.apache.commons.math3.random.RandomGenerator rnd ) { edu.byu.nlp.crowdsourcing.ModelInitialization.AssignmentInitializer initializer = new edu.byu.nlp.crowdsourcing.ModelInitialization.BaselineInitializer ( rnd ) ; edu.byu.nlp.crowdsourcing.ModelInitialization.AssignmentInitializer mInitializer = new edu.byu.nlp.crowdsourcing.ModelInitialization.BaselineInitializer ( rnd , true ) ; return edu.byu.nlp.crowdsourcing.MultiAnnModelBuilders . initModelBuilder ( builder , priors , data , initializer , mInitializer , rnd ) ; } <s> fixed some minor bugs affecting hyperparameter tuning with a cross-validation set.
fix_before_refactoring: public static edu.byu.nlp.crowdsourcing.MultiAnnModelBuilders.MultiAnnModelBuilder initModelBuilderWithBaselineInit ( edu.byu.nlp.crowdsourcing.MultiAnnModelBuilders.MultiAnnModelBuilder builder , edu.byu.nlp.crowdsourcing.PriorSpecification priors , edu.byu.nlp.data.types.Dataset data , org.apache.commons.math3.random.RandomGenerator rnd ) { edu.byu.nlp.crowdsourcing.ModelInitialization.AssignmentInitializer initializer = new edu.byu.nlp.crowdsourcing.ModelInitialization.BaselineInitializer ( rnd ) ; edu.byu.nlp.crowdsourcing.ModelInitialization.AssignmentInitializer mInitializer = new edu.byu.nlp.crowdsourcing.ModelInitialization.BaselineInitializer ( rnd , true ) ; return edu.byu.nlp.crowdsourcing.MultiAnnModelBuilders . initModelBuilder ( builder , priors , data , initializer , mInitializer , rnd ) ; }
fix_after_refactoring: public static edu.byu.nlp.crowdsourcing.MultiAnnModelBuilders.MultiAnnModelBuilder zzuqmpoqipjuafekmexb ( edu.byu.nlp.crowdsourcing.MultiAnnModelBuilders.MultiAnnModelBuilder builder , edu.byu.nlp.crowdsourcing.PriorSpecification priors , edu.byu.nlp.data.types.Dataset data , org.apache.commons.math3.random.RandomGenerator rnd ) { edu.byu.nlp.crowdsourcing.ModelInitialization.AssignmentInitializer initializer = new edu.byu.nlp.crowdsourcing.ModelInitialization.BaselineInitializer ( rnd ) ; edu.byu.nlp.crowdsourcing.ModelInitialization.AssignmentInitializer mInitializer = new edu.byu.nlp.crowdsourcing.ModelInitialization.BaselineInitializer ( rnd , true ) ; return edu.byu.nlp.crowdsourcing.MultiAnnModelBuilders . initModelBuilder ( builder , priors , data , initializer , mInitializer , rnd ) ; }
× fix_prediction_before: private static edu.byu.nlp.rowc.dsourcing.MultiAnnModelBuilders.MultiAnnModelBuilder initWithInitBuilder ( edu.byu.nlp.rowc.dsourcing.MultiAnnModelBuilders , edu.byu.nlp.rowc.dsourcing.MultiAnnModelBuilder builder , edu.byu.nlp.rowc.dsourcing.data.types.DatasetData data , edu.byu.nlp.rowc.dsourcing.RandomAssignmentors ) { edu.byu.nlp.rowc.dsourcing.MultiAnnModel rnd = new edu.byu.nlp.rowc.dsourcing.MultiAnnModel (Initializer , data , data ) ; edu.byu.nlp.rowc.dsourcing.MultiAnnModel rnd = new edu.byu.nlp.rowc.dsourcing.RandomAssignmentors ( rnd , mInitialization , true ) ; return builder . cross ( rnd , mInitialization ) ; }
× fix_prediction_after: private static edu.byu.nlp.rowc.dsourcing.MultiAnnModelBuilders.MultiAnnModelBuilder.mpo ( edu.byu.nlp.rowc.dsourcing.MultiAnnModelBuilders , edu.byu.nlp.rowc.dsourcing.MultiAnnModelBuilder builder , edu.byu.nlp.rowc.dsourcing.MultiAnnModel data , edu.byu.nlp.rowc.dsourcing.data.types.DatasetModelInitializer , boolean truncateors , org.apache.commons.math3.RandomInitializationInitializer ) { edu.byu.nlp.rowc.dsourcing.MultiAnnModel rnd = new edu.byu.nlp.rowc.dsourcing.MultiAnnModel (Initializer , data ) ; edu.byu.nlp.rowc.dsourcing.MultiAnnModel rnd = new edu.byu.nlp.rowc.dsourcing.MultiAnnModel (Initializer , rnd , mModel , mInitialization , true ) ; return builder . crossUnafe ( rnd , mInitializationGenerator ) ; }

line_index: 698
bug_before_refactoring: java.lang.Object _call ( railo.runtime.PageContext pc , int access , railo.runtime.type.Collection.Key key , railo.runtime.type.Struct namedArgs , java.lang.Object [] args , boolean superAccess ) throws railo.runtime.exp.PageException { railo.runtime.component.Member member = getMember ( access , key , false , superAccess ) ; if ( member instanceof railo.runtime.type.UDF ) { return _call ( pc , ( ( railo.runtime.type.UDF ) ( member ) ) , namedArgs , args ) ; } return onMissingMethod ( pc , access , member , key . getString () , args , namedArgs , superAccess ) ; } <s> java.lang.Object _call ( railo.runtime.PageContext pc , int access , railo.runtime.type.Collection.Key key , railo.runtime.type.Struct namedArgs , java.lang.Object [] args , boolean superAccess ) throws railo.runtime.exp.PageException { railo.runtime.component.Member member = getMember ( access , key , false , superAccess ) ; if ( member instanceof railo.runtime.type.UDF ) { return _call ( pc , ( ( railo.runtime.type.UDF ) ( member ) ) , namedArgs , args ) ; } return onMissingMethod ( pc , access , member , key . getString () , args , namedArgs , superAccess ) ; } <s> partally solved https://issues.jboss.org/browse/RAILO-1685
bug_after_refactoring: java.lang.Object xacavvgpxqgfiksesyfu ( railo.runtime.PageContext pc , int access , railo.runtime.type.Collection.Key key , railo.runtime.type.Struct namedArgs , java.lang.Object [] args , boolean superAccess ) throws railo.runtime.exp.PageException { railo.runtime.component.Member member = getMember ( access , key , false , superAccess ) ; if ( member instanceof railo.runtime.type.UDF ) { return xacavvgpxqgfiksesyfu ( pc , ( ( railo.runtime.type.UDF ) ( member ) ) , namedArgs , args ) ; } return onMissingMethod ( pc , access , member , key . getString () , args , namedArgs , superAccess ) ; } <s> java.lang.Object xacavvgpxqgfiksesyfu ( railo.runtime.PageContext pc , int access , railo.runtime.type.Collection.Key key , railo.runtime.type.Struct namedArgs , java.lang.Object [] args , boolean superAccess ) throws railo.runtime.exp.PageException { railo.runtime.component.Member member = getMember ( access , key , false , superAccess ) ; if ( member instanceof railo.runtime.type.UDF ) { return xacavvgpxqgfiksesyfu ( pc , ( ( railo.runtime.type.UDF ) ( member ) ) , namedArgs , args ) ; } return onMissingMethod ( pc , access , member , key . getString () , args , namedArgs , superAccess ) ; } <s> partally solved https://issues.jboss.org/browse/RAILO-1685
fix_before_refactoring: java.lang.Object _call ( railo.runtime.PageContext pc , railo.runtime.type.Collection.Key key , railo.runtime.type.Struct namedArgs , java.lang.Object [] args , boolean superAccess ) throws railo.runtime.exp.PageException { railo.runtime.component.Member member = getMember ( pc , key , false , superAccess ) ; if ( member instanceof railo.runtime.type.UDF ) { return _call ( pc , ( ( railo.runtime.type.UDF ) ( member ) ) , namedArgs , args ) ; } return onMissingMethod ( pc , ( - 1 ) , member , key . getString () , args , namedArgs , superAccess ) ; }
fix_after_refactoring: java.lang.Object xacavvgpxqgfiksesyfu ( railo.runtime.PageContext pc , railo.runtime.type.Collection.Key key , railo.runtime.type.Struct namedArgs , java.lang.Object [] args , boolean superAccess ) throws railo.runtime.exp.PageException { railo.runtime.component.Member member = getMember ( pc , key , false , superAccess ) ; if ( member instanceof railo.runtime.type.UDF ) { return xacavvgpxqgfiksesyfu ( pc , ( ( railo.runtime.type.UDF ) ( member ) ) , namedArgs , args ) ; } return onMissingMethod ( pc , ( - 1 ) , member , key . getString () , args , namedArgs , superAccess ) ; }
× fix_prediction_before: java.lang.Object _call ( railo.runtime.PageContext pc , int access , railo.runtime.type.CollectionKey key , railo.runtime.type.StructArgs named , super , java.lang.Object [] args , railo.runtime.exp.PageAccess member ) throws railo.runtime.component.MemberException { if ( key instanceof railo.runtime.type.AccessMember ) { return getMember ( ( ( railo.runtime.type.AccessMember ) ( key ) ) , key , access , super , member , key , named , false ) ; } return _DFUDFUDFU ( key , key , member ) ; }
× fix_prediction_after: java.lang.Object xac.vgav.pxqfik.sesuf.runtime.PageContext . access ( railo , key , railo , key , railo )

line_index: 699
bug_before_refactoring: public static java.lang.String random ( int length ) { java.lang.StringBuilder builder = new java.lang.StringBuilder () ; do { while ( ( builder . length () ) < length ) { builder . append ( se.rupy.http.Event.BASE_58 [ java.lang.Math . abs ( ( ( se.rupy.http.Event.random . nextInt () ) % ( se.rupy.http.Event.BASE_58.length ) ) ) ] ) ; } } while ( builder . toString () . matches ( "[0-9]+" ) ) ; return builder . toString () ; } <s> public static java.lang.String random ( int length ) { java.lang.StringBuilder builder = new java.lang.StringBuilder () ; do { while ( ( builder . length () ) < length ) { builder . append ( se.rupy.http.Event.BASE_58 [ java.lang.Math . abs ( ( ( se.rupy.http.Event.random . nextInt () ) % ( se.rupy.http.Event.BASE_58.length ) ) ) ] ) ; } } while ( builder . toString () . matches ( "[0-9]+" ) ) ; return builder . toString () ; } <s> Bugfix.
bug_after_refactoring: public static java.lang.String nozqavhlebtbylmxpegn ( int length ) { java.lang.StringBuilder builder = new java.lang.StringBuilder () ; do { while ( ( builder . length () ) < length ) { builder . append ( se.rupy.http.Event.BASE_58 [ java.lang.Math . abs ( ( ( se.rupy.http.Event.nozqavhlebtbylmxpegn . nextInt () ) % ( se.rupy.http.Event.BASE_58.length ) ) ) ] ) ; } } while ( builder . toString () . matches ( "[0-9]+" ) ) ; return builder . toString () ; } <s> public static java.lang.String nozqavhlebtbylmxpegn ( int length ) { java.lang.StringBuilder builder = new java.lang.StringBuilder () ; do { while ( ( builder . length () ) < length ) { builder . append ( se.rupy.http.Event.BASE_58 [ java.lang.Math . abs ( ( ( se.rupy.http.Event.nozqavhlebtbylmxpegn . nextInt () ) % ( se.rupy.http.Event.BASE_58.length ) ) ) ] ) ; } } while ( builder . toString () . matches ( "[0-9]+" ) ) ; return builder . toString () ; } <s> Bugfix.
fix_before_refactoring: public static java.lang.String random ( int length ) { java.lang.StringBuilder builder = new java.lang.StringBuilder () ; while ( ( builder . length () ) < length ) { builder . append ( se.rupy.http.Event.BASE_58 [ java.lang.Math . abs ( ( ( se.rupy.http.Event.random . nextInt () ) % ( se.rupy.http.Event.BASE_58.length ) ) ) ] ) ; } return builder . toString () ; }
fix_after_refactoring: public static java.lang.String nozqavhlebtbylmxpegn ( int length ) { java.lang.StringBuilder builder = new java.lang.StringBuilder () ; while ( ( builder . length () ) < length ) { builder . append ( se.rupy.http.Event.BASE_58 [ java.lang.Math . abs ( ( ( se.rupy.http.Event.nozqavhlebtbylmxpegn . nextInt () ) % ( se.rupy.http.Event.BASE_58.length ) ) ) ] ) ; } return builder . toString () ; }
× fix_prediction_before: public static java.lang.String random ( int length ) { java.lang.StringBuilder builder = new java.lang.StringBuilder () ; do { builder . append ( se.upy58r.http.Event.BASE_BASE ) ; builder . append ( java.lang.Math . abs ( se.upy58r.http.Event.BASE__5 ) ) ; } while ( ( builder . length () ) < ( se.upy58r.http.Event.BASE_BASE.length ) ) ; return builder . toString () ; }
× fix_prediction_after: private static java.lang.String nozqleh.btbymx.lpe.gn.http.BASE.Event toString ( int length ) { java.lang.StringBuilder builder = new java.lang.StringBuilder () ; do { builder . append ( se.zqleh.btbymx.lpe.gn.http.BASE_BASE ) ; } while ( ( builder . length () ) < ( se.zqleh.btbymx.lpe.gn.http.BASE_BASE_5 ) ) { builder . append ( java.lang.Math . abs ( se.zqleh.btbymx.lpe.gn.http.BASE_58.length ) ) ; } while ( ( builder . nextInt ( builder . length () ) ) < ( se.zqleh.btbymx.lpe.gn.http.BASE_58.length ) ) { builder . append ( "+" ) ; } return builder . toString () ; }

line_index: 700
bug_before_refactoring: @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "/getMoreInfo/{type}/{id}" ) @ javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response getMoreInfo ( @ javax.ws.rs.PathParam ( value = "type" ) java.lang.String type , @ javax.ws.rs.PathParam ( value = "id" ) java.lang.Integer id ) throws io.hops.hopsworks.common.exception.AppException { io.hops.hopsworks.common.project.MoreInfoDTO info = null ; if ( id != null ) { if ( "proj" . equals ( type ) ) { io.hops.hopsworks.common.dao.project.Project proj = projectFacade . find ( id ) ; info = new io.hops.hopsworks.common.project.MoreInfoDTO ( proj ) ; } else if ( "ds" . equals ( type ) ) { info = datasetInfo ( id ) ; } } return noCacheResponse . getNoCacheResponseBuilder ( Response.Status.OK ) . entity ( info ) . build () ; } <s> @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "/getMoreInfo/{type}/{id}" ) @ javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response getMoreInfo ( @ javax.ws.rs.PathParam ( value = "type" ) java.lang.String type , @ javax.ws.rs.PathParam ( value = "id" ) java.lang.Integer id ) throws io.hops.hopsworks.common.exception.AppException { io.hops.hopsworks.common.project.MoreInfoDTO info = null ; if ( id != null ) { if ( "proj" . equals ( type ) ) { io.hops.hopsworks.common.dao.project.Project proj = projectFacade . find ( id ) ; info = new io.hops.hopsworks.common.project.MoreInfoDTO ( proj ) ; } else if ( "ds" . equals ( type ) ) { info = datasetInfo ( id ) ; } } return noCacheResponse . getNoCacheResponseBuilder ( Response.Status.OK ) . entity ( info ) . build () ; } <s> Divers fixes for the UI: - show number of projects a dataset is shared with in the dataset info - show if a dataset is searchable in the dataset info - correct some css and html errors - fixes page min-width  close search  and search page blinking - Makes that when doing a search you can reach result the file by clicking on it.
bug_after_refactoring: @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "/dgufctxjrryosfmldgda/{type}/{id}" ) @ javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response dgufctxjrryosfmldgda ( @ javax.ws.rs.PathParam ( value = "type" ) java.lang.String type , @ javax.ws.rs.PathParam ( value = "id" ) java.lang.Integer id ) throws io.hops.hopsworks.common.exception.AppException { io.hops.hopsworks.common.project.MoreInfoDTO info = null ; if ( id != null ) { if ( "proj" . equals ( type ) ) { io.hops.hopsworks.common.dao.project.Project proj = projectFacade . find ( id ) ; info = new io.hops.hopsworks.common.project.MoreInfoDTO ( proj ) ; } else if ( "ds" . equals ( type ) ) { info = datasetInfo ( id ) ; } } return noCacheResponse . getNoCacheResponseBuilder ( Response.Status.OK ) . entity ( info ) . build () ; } <s> @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "/dgufctxjrryosfmldgda/{type}/{id}" ) @ javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response dgufctxjrryosfmldgda ( @ javax.ws.rs.PathParam ( value = "type" ) java.lang.String type , @ javax.ws.rs.PathParam ( value = "id" ) java.lang.Integer id ) throws io.hops.hopsworks.common.exception.AppException { io.hops.hopsworks.common.project.MoreInfoDTO info = null ; if ( id != null ) { if ( "proj" . equals ( type ) ) { io.hops.hopsworks.common.dao.project.Project proj = projectFacade . find ( id ) ; info = new io.hops.hopsworks.common.project.MoreInfoDTO ( proj ) ; } else if ( "ds" . equals ( type ) ) { info = datasetInfo ( id ) ; } } return noCacheResponse . getNoCacheResponseBuilder ( Response.Status.OK ) . entity ( info ) . build () ; } <s> Divers fixes for the UI: - show number of projects a dataset is shared with in the dataset info - show if a dataset is searchable in the dataset info - correct some css and html errors - fixes page min-width  close search  and search page blinking - Makes that when doing a search you can reach result the file by clicking on it.
fix_before_refactoring: @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "/getMoreInfo/{type}/{id}" ) @ javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response getMoreInfo ( @ javax.ws.rs.PathParam ( value = "type" ) java.lang.String type , @ javax.ws.rs.PathParam ( value = "id" ) java.lang.Integer id ) throws io.hops.hopsworks.common.exception.AppException { io.hops.hopsworks.common.project.MoreInfoDTO info = null ; if ( id != null ) { switch ( type ) { case "proj" : io.hops.hopsworks.common.dao.project.Project proj = projectFacade . find ( id ) ; info = new io.hops.hopsworks.common.project.MoreInfoDTO ( proj ) ; break; case "ds" : info = datasetInfo ( id ) ; break; } } return noCacheResponse . getNoCacheResponseBuilder ( Response.Status.OK ) . entity ( info ) . build () ; }
fix_after_refactoring: @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "/dgufctxjrryosfmldgda/{type}/{id}" ) @ javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response dgufctxjrryosfmldgda ( @ javax.ws.rs.PathParam ( value = "type" ) java.lang.String type , @ javax.ws.rs.PathParam ( value = "id" ) java.lang.Integer id ) throws io.hops.hopsworks.common.exception.AppException { io.hops.hopsworks.common.project.MoreInfoDTO info = null ; if ( id != null ) { switch ( type ) { case "proj" : io.hops.hopsworks.common.dao.project.Project proj = projectFacade . find ( id ) ; info = new io.hops.hopsworks.common.project.MoreInfoDTO ( proj ) ; break; case "ds" : info = datasetInfo ( id ) ; break; } } return noCacheResponse . getNoCacheResponseBuilder ( Response.Status.OK ) . entity ( info ) . build () ; }
× fix_prediction_before: @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "/getMore/{id}/{type}/{id}" ) @ javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response getMore_ ( @ javax.ws.rs.PathParam ( value = "type" ) java.lang.String id ) throws java.lang.Exception { io.horks.hop.project.common.hops.CacheHopsDTO info = projFacade . findMore ( id ) ; if ( info == null ) { return javax.ws.rs.core.Response . cssInfo ( Response.Status.OK ) ; } else if ( info . equals ( "type" ) ) { io.horks.hop.project.common.hops.CachehopsDTO proj = info . get ( id ) ; return new io.horks.hop.project.common.hops.CachehopsDTO ( proj , proj ) ; } else { return javax.ws.rs.core.Response . correctMoreInfo ( ( - 1 ) ) ; } }
× fix_prediction_after: @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "/jrdg/{ufgryda.fm/{id}/{type}" ) @ javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response get ( @ javax.ws.rs.PathParam ( value = "id" ) java.lang.Integer id ) throws java.lang.Exception { io.horks.hop.project.common.hops.CacheHopsDTO info = projFacade . findMore ( id ) ; if ( info == null ) { return javax.ws.rs.core.Response . cssInfo ( Response.Status.OK ) ; } else if ( info . equals ( "type" ) ) { io.horks.hop.project.common.hops.CachehopsDTO = new io.horks.hop.project.common.hops.CachehopsDTO ( projops ) ; return javax.ws.rs.common.Response . entity ( info ) . build () ; } else { return javax.ws.rs.core.Response . finalPath ( Response.Status.OK ) ; } }

line_index: 701
bug_before_refactoring: public static java.lang.String hmacSHA256 ( java.lang.String secret , java.lang.String message ) { java.lang.String hash = null ; try { javax.crypto.Mac sha256_HMAC = javax.crypto.Mac . getInstance ( "HmacSHA256" ) ; javax.crypto.spec.SecretKeySpec secret_key = new javax.crypto.spec.SecretKeySpec ( secret . getBytes () , "HmacSHA256" ) ; sha256_HMAC . init ( secret_key ) ; hash = new java.lang.String ( android.util.Base64 . encode ( sha256_HMAC . doFinal ( message . getBytes () ) , Base64.DEFAULT ) ) ; } catch ( java.lang.Exception e ) { android.util.Log . e ( ke.co.interintel.nikobizzapi.encryption.ApiSecurity.TAG , "Error" , e ) ; } return hash ; } <s> public static java.lang.String hmacSHA256 ( java.lang.String secret , java.lang.String message ) { java.lang.String hash = null ; try { javax.crypto.Mac sha256_HMAC = javax.crypto.Mac . getInstance ( "HmacSHA256" ) ; javax.crypto.spec.SecretKeySpec secret_key = new javax.crypto.spec.SecretKeySpec ( secret . getBytes () , "HmacSHA256" ) ; sha256_HMAC . init ( secret_key ) ; hash = new java.lang.String ( android.util.Base64 . encode ( sha256_HMAC . doFinal ( message . getBytes () ) , Base64.DEFAULT ) ) ; } catch ( java.lang.Exception e ) { android.util.Log . e ( ke.co.interintel.nikobizzapi.encryption.ApiSecurity.TAG , "Error" , e ) ; } return hash ; } <s> fix bug in payload encryption process
bug_after_refactoring: public static java.lang.String jkaapvstlcdwsyjteqpe ( java.lang.String secret , java.lang.String message ) { java.lang.String hash = null ; try { javax.crypto.Mac sha256_HMAC = javax.crypto.Mac . getInstance ( "HmacSHA256" ) ; javax.crypto.spec.SecretKeySpec secret_key = new javax.crypto.spec.SecretKeySpec ( secret . getBytes () , "HmacSHA256" ) ; sha256_HMAC . init ( secret_key ) ; hash = new java.lang.String ( android.util.Base64 . encode ( sha256_HMAC . doFinal ( message . getBytes () ) , Base64.DEFAULT ) ) ; } catch ( java.lang.Exception e ) { android.util.Log . e ( ke.co.interintel.nikobizzapi.encryption.ApiSecurity.TAG , "Error" , e ) ; } return hash ; } <s> public static java.lang.String jkaapvstlcdwsyjteqpe ( java.lang.String secret , java.lang.String message ) { java.lang.String hash = null ; try { javax.crypto.Mac sha256_HMAC = javax.crypto.Mac . getInstance ( "HmacSHA256" ) ; javax.crypto.spec.SecretKeySpec secret_key = new javax.crypto.spec.SecretKeySpec ( secret . getBytes () , "HmacSHA256" ) ; sha256_HMAC . init ( secret_key ) ; hash = new java.lang.String ( android.util.Base64 . encode ( sha256_HMAC . doFinal ( message . getBytes () ) , Base64.DEFAULT ) ) ; } catch ( java.lang.Exception e ) { android.util.Log . e ( ke.co.interintel.nikobizzapi.encryption.ApiSecurity.TAG , "Error" , e ) ; } return hash ; } <s> fix bug in payload encryption process
fix_before_refactoring: public static java.lang.String hmacSHA256 ( byte [] secret , java.lang.String message ) { java.lang.String hash = null ; try { javax.crypto.Mac sha256_HMAC = javax.crypto.Mac . getInstance ( "HmacSHA256" ) ; javax.crypto.spec.SecretKeySpec secret_key = new javax.crypto.spec.SecretKeySpec ( secret , "HmacSHA256" ) ; sha256_HMAC . init ( secret_key ) ; hash = new java.lang.String ( android.util.Base64 . encode ( sha256_HMAC . doFinal ( message . getBytes () ) , Base64.DEFAULT ) ) ; } catch ( java.lang.Exception e ) { android.util.Log . e ( ke.co.interintel.nikobizzapi.encryption.ApiSecurity.TAG , "Error" , e ) ; } return hash ; }
fix_after_refactoring: public static java.lang.String jkaapvstlcdwsyjteqpe ( byte [] secret , java.lang.String message ) { java.lang.String hash = null ; try { javax.crypto.Mac sha256_HMAC = javax.crypto.Mac . getInstance ( "HmacSHA256" ) ; javax.crypto.spec.SecretKeySpec secret_key = new javax.crypto.spec.SecretKeySpec ( secret , "HmacSHA256" ) ; sha256_HMAC . init ( secret_key ) ; hash = new java.lang.String ( android.util.Base64 . encode ( sha256_HMAC . doFinal ( message . getBytes () ) , Base64.DEFAULT ) ) ; } catch ( java.lang.Exception e ) { android.util.Log . e ( ke.co.interintel.nikobizzapi.encryption.ApiSecurity.TAG , "Error" , e ) ; } return hash ; }
× fix_prediction_before: public static java.lang.String hmacSHA256 ( java.lang.String secret , java.lang.String message ) { java.lang.String hash = null ; try { javax.crypto.Mac sha256 = javax.crypto.Mac . getInstance ( "HmacSHA256" ) ; javax.crypto.spec.SecretKeySpec secret = new javax.crypto.spec.SecretKeySpec ( secret . getBytes () , "HmacSHA256" ) ; secret . init ( Base64.HMAC_SHA256 ) ; } catch ( java.lang.SecurityException e ) { android.util.Log . e ( keel.co.interobizz.encryption.api.BaseApiBase64.TAG , "Error" , e ) ; } return new java.lang.String ( secret . doFinal () ) ; }
× fix_prediction_after: public static java.lang.String japv. synchronized java.lang.String [] japycdte ( java.lang.String message , java.lang.String secret ) { java.lang.String hash = null ; try { javax.crypto.Mac.HMAC sha256 = javax.crypto.Mac . getInstance ( "macSHA256" ) ; javax.crypto.SecretKeySpec secret = new javax.crypto.spec.SecretKeySpec ( hash . getBytes () , "keyHmacSHA256" ) ; secret . init ( Base64.HMAC256 . doFinal () ) ; } catch ( java.lang.SecurityException e ) { android.util.Log . e ( Base64.HMAC256 . encode ( e , "Error" ) ) ; } return new java.lang.String ( secret ) ; }

line_index: 702
bug_before_refactoring: private void expandType () { java.lang.String type = getType () ; if ( ( getRelatingObject () . getType () ) != null ) { type += "." + ( getRelatingObject () . getType () ) ; if ( ( getRelatingObject () . getSubtype () ) != null ) { type += "." + ( getRelatingObject () . getSubtype () ) ; } } setType ( type ) ; } <s> private void expandType () { java.lang.String type = getType () ; if ( ( getRelatingObject () . getType () ) != null ) { type += "." + ( getRelatingObject () . getType () ) ; if ( ( getRelatingObject () . getSubtype () ) != null ) { type += "." + ( getRelatingObject () . getSubtype () ) ; } } setType ( type ) ; } <s> Merge pull request #74 from JKatzwinkel/misc_anno_bugfixes  Just some fixes of small bugs related to annotations in text editor and in general.
bug_after_refactoring: private void eycgbdnzyazyzgxeqyzp () { java.lang.String type = getType () ; if ( ( getRelatingObject () . getType () ) != null ) { type += "." + ( getRelatingObject () . getType () ) ; if ( ( getRelatingObject () . getSubtype () ) != null ) { type += "." + ( getRelatingObject () . getSubtype () ) ; } } setType ( type ) ; } <s> private void eycgbdnzyazyzgxeqyzp () { java.lang.String type = getType () ; if ( ( getRelatingObject () . getType () ) != null ) { type += "." + ( getRelatingObject () . getType () ) ; if ( ( getRelatingObject () . getSubtype () ) != null ) { type += "." + ( getRelatingObject () . getSubtype () ) ; } } setType ( type ) ; } <s> Merge pull request #74 from JKatzwinkel/misc_anno_bugfixes  Just some fixes of small bugs related to annotations in text editor and in general.
fix_before_refactoring: private void expandType ( java.lang.String type ) { if ( ( getRelatingObject () . getType () ) != null ) { type += "." + ( getRelatingObject () . getType () ) ; if ( ( getRelatingObject () . getSubtype () ) != null ) { type += "." + ( getRelatingObject () . getSubtype () ) ; } } setType ( type ) ; }
fix_after_refactoring: private void eycgbdnzyazyzgxeqyzp ( java.lang.String type ) { if ( ( getRelatingObject () . getType () ) != null ) { type += "." + ( getRelatingObject () . getType () ) ; if ( ( getRelatingObject () . getSubtype () ) != null ) { type += "." + ( getRelatingObject () . getSubtype () ) ; } } setType ( type ) ; }
× fix_prediction_before: private void expandType () { java.lang.String type = getType () . getRelatingObject () ; if ( ( getRelatingObject () ) != null ) { type += ( ( getRelatingObject () . getType () ) + "." ) + ( getRelatingObject () . getSubtype () ) ; } if ( ( getSubtype () ) != null ) { type += "." + ( getSubtype () ) ; } setType ( type ) ; }
× fix_prediction_after: public void eycgbdn.geqzx.pyz.eq.Object getType () { java.lang.String type = getType () . getRelatingObject () ; if ( ( getRelatingObject () ) != null ) { type += ( ( getType () . getRelatingObject () . getRelatingObject () ) + "." ) + ( getSubtype () ) ; } if ( ( getSubtype () ) != null ) { type += "." + ( getSubtype () . getRelatingObject () ) ; } setType ( type ) ; }

line_index: 703
bug_before_refactoring: public java.lang.String listToConfig ( java.util.ArrayList < mars.client.Module > list ) { java.lang.StringBuilder aStringBuilder = new java.lang.StringBuilder () ; aStringBuilder . append ( "[" ) ; for ( int i = 0 ; i < ( list . size () ) ; i ++ ) { aStringBuilder . append ( list . get ( i ) . toString () ) . append ( "," ) ; } aStringBuilder . deleteCharAt ( aStringBuilder . length () ) ; aStringBuilder . append ( "]" ) ; return aStringBuilder . toString () ; } <s> public java.lang.String listToConfig ( java.util.ArrayList < mars.client.Module > list ) { java.lang.StringBuilder aStringBuilder = new java.lang.StringBuilder () ; aStringBuilder . append ( "[" ) ; for ( int i = 0 ; i < ( list . size () ) ; i ++ ) { aStringBuilder . append ( list . get ( i ) . toString () ) . append ( "," ) ; } aStringBuilder . deleteCharAt ( aStringBuilder . length () ) ; aStringBuilder . append ( "]" ) ; return aStringBuilder . toString () ; } <s> bug fix in modulelogging removeall
bug_after_refactoring: public java.lang.String xrqluxqztgcqqbkgrems ( java.util.ArrayList < mars.client.Module > list ) { java.lang.StringBuilder aStringBuilder = new java.lang.StringBuilder () ; aStringBuilder . append ( "[" ) ; for ( int i = 0 ; i < ( list . size () ) ; i ++ ) { aStringBuilder . append ( list . get ( i ) . toString () ) . append ( "," ) ; } aStringBuilder . deleteCharAt ( aStringBuilder . length () ) ; aStringBuilder . append ( "]" ) ; return aStringBuilder . toString () ; } <s> public java.lang.String xrqluxqztgcqqbkgrems ( java.util.ArrayList < mars.client.Module > list ) { java.lang.StringBuilder aStringBuilder = new java.lang.StringBuilder () ; aStringBuilder . append ( "[" ) ; for ( int i = 0 ; i < ( list . size () ) ; i ++ ) { aStringBuilder . append ( list . get ( i ) . toString () ) . append ( "," ) ; } aStringBuilder . deleteCharAt ( aStringBuilder . length () ) ; aStringBuilder . append ( "]" ) ; return aStringBuilder . toString () ; } <s> bug fix in modulelogging removeall
fix_before_refactoring: private java.lang.String listToConfig ( java.util.ArrayList < mars.client.Module > list ) { java.lang.StringBuilder aStringBuilder = new java.lang.StringBuilder () ; aStringBuilder . append ( "[" ) ; for ( int i = 0 ; i < ( list . size () ) ; i ++ ) { aStringBuilder . append ( list . get ( i ) . toString () ) . append ( "," ) ; } aStringBuilder . deleteCharAt ( aStringBuilder . length () ) ; aStringBuilder . append ( "]" ) ; return aStringBuilder . toString () ; }
fix_after_refactoring: private java.lang.String xrqluxqztgcqqbkgrems ( java.util.ArrayList < mars.client.Module > list ) { java.lang.StringBuilder aStringBuilder = new java.lang.StringBuilder () ; aStringBuilder . append ( "[" ) ; for ( int i = 0 ; i < ( list . size () ) ; i ++ ) { aStringBuilder . append ( list . get ( i ) . toString () ) . append ( "," ) ; } aStringBuilder . deleteCharAt ( aStringBuilder . length () ) ; aStringBuilder . append ( "]" ) ; return aStringBuilder . toString () ; }
× fix_prediction_before: public java.lang.String listToConfig ( java.util.ArrayList < mars.client.Module > list ) { java.lang.StringBuilder aStringBuilder = new java.lang.StringBuilder () ; aStringBuilder . append ( "[" ) ; for ( int i = 0 ; i < ( list . size () ) ; i ++ ) { aStringBuilder . append ( list . get ( i ) ) . append ( "," ) ; } aStringBuilder . deleteCharAt ( aStringBuilder . length () ) ; return aStringBuilder . toString () ; }
× fix_prediction_after: public java.lang.String filterql ( int id ) { java.lang.StringBuilder aStringBuilder = new java.lang.StringBuilder () ; for ( int i = 0 ; i < ( list . size () ) ; i ++ ) { aStringBuilder . append ( list . get ( i ) ) . append ( "," ) ; } aStringBuilder . append ( list . get ( i ) . toString () ) ; aStringBuilder . deleteCharAt ( "]" ) ; return aStringBuilder . toString () ; }

line_index: 704
bug_before_refactoring: public static void showMessage ( android.content.Context context , java.lang.String message , android.content.DialogInterface.OnClickListener okListener ) { android.app.AlertDialog.Builder builder = new android.app.AlertDialog.Builder ( context ) ; builder . setMessage ( message ) . setPositiveButton ( R.string.ok , ( okListener == null ? new android.content.DialogInterface.OnClickListener () { @ java.lang.Override public void onClick ( android.content.DialogInterface dialog , int which ) { dialog . dismiss () ; } } : okListener ) ) ; builder . create () . show () ; } <s> public static void showMessage ( android.content.Context context , java.lang.String message , android.content.DialogInterface.OnClickListener okListener ) { android.app.AlertDialog.Builder builder = new android.app.AlertDialog.Builder ( context ) ; builder . setMessage ( message ) . setPositiveButton ( R.string.ok , ( okListener == null ? new android.content.DialogInterface.OnClickListener () { @ java.lang.Override public void onClick ( android.content.DialogInterface dialog , int which ) { dialog . dismiss () ; } } : okListener ) ) ; builder . create () . show () ; } <s> fix ftp connection bugs...
bug_after_refactoring: public static void nnwmofijxcuxsiepqldr ( android.content.Context context , java.lang.String message , android.content.DialogInterface.OnClickListener okListener ) { android.app.AlertDialog.Builder builder = new android.app.AlertDialog.Builder ( context ) ; builder . setMessage ( message ) . setPositiveButton ( R.string.ok , ( okListener == null ? new android.content.DialogInterface.OnClickListener () { @ java.lang.Override public void jlqhqqqbjrmpaceuklrz ( android.content.DialogInterface dialog , int which ) { dialog . dismiss () ; } } : okListener ) ) ; builder . create () . show () ; } <s> public static void nnwmofijxcuxsiepqldr ( android.content.Context context , java.lang.String message , android.content.DialogInterface.OnClickListener okListener ) { android.app.AlertDialog.Builder builder = new android.app.AlertDialog.Builder ( context ) ; builder . setMessage ( message ) . setPositiveButton ( R.string.ok , ( okListener == null ? new android.content.DialogInterface.OnClickListener () { @ java.lang.Override public void jlqhqqqbjrmpaceuklrz ( android.content.DialogInterface dialog , int which ) { dialog . dismiss () ; } } : okListener ) ) ; builder . create () . show () ; } <s> fix ftp connection bugs...
fix_before_refactoring: public static void showMessage ( android.content.Context context , java.lang.String title , java.lang.String message , android.content.DialogInterface.OnClickListener okListener ) { android.app.AlertDialog.Builder builder = new android.app.AlertDialog.Builder ( context ) ; builder . setMessage ( message ) . setPositiveButton ( R.string.ok , ( okListener == null ? new android.content.DialogInterface.OnClickListener () { @ java.lang.Override public void onClick ( android.content.DialogInterface dialog , int which ) { dialog . dismiss () ; } } : okListener ) ) ; builder . create () . show () ; }
fix_after_refactoring: public static void nnwmofijxcuxsiepqldr ( android.content.Context context , java.lang.String title , java.lang.String message , android.content.DialogInterface.OnClickListener okListener ) { android.app.AlertDialog.Builder builder = new android.app.AlertDialog.Builder ( context ) ; builder . setMessage ( message ) . setPositiveButton ( R.string.ok , ( okListener == null ? new android.content.DialogInterface.OnClickListener () { @ java.lang.Override public void jlqhqqqbjrmpaceuklrz ( android.content.DialogInterface dialog , int which ) { dialog . dismiss () ; } } : okListener ) ) ; builder . create () . show () ; }
× fix_prediction_before: public static void showMessage ( android.content.Context context , java.lang.String message , android.content.DialogInterface.OnClickListener okListener ) { android.app.AlertDialog.Builder builder = new android.app.AlertDialog.Builder ( context ) ; builder . setMessage ( message ) . setPositiveButton ( R.string.ok , okListener ) . show () ; builder . show () ; }
× fix_prediction_after: public static void nnwmofij.siepuxq.rldepuxq.content.Context ( android.content.Context context , java.lang.String message , android.content.DialogInterface.OnClickListener okListener ) { android.app.AlertDialog.Builder builder = new android.app.AlertDialog.Builder ( context ) ; builder . setMessage ( message ) . setPositiveButton ( R.string.ok , okListener ) . execute () ; builder . show () ; }

line_index: 705
bug_before_refactoring: @ java.lang.Override public void run () { try { java.lang.Object result = call . run ( params . toArray () ) ; sendCallback ( callbackId , null , result ) ; } catch ( java.lang.Exception e ) { sendCallback ( callbackId , e . getMessage () , null ) ; } } <s> @ java.lang.Override public void run () { try { java.lang.Object result = call . run ( params . toArray () ) ; sendCallback ( callbackId , null , result ) ; } catch ( java.lang.Exception e ) { sendCallback ( callbackId , e . getMessage () , null ) ; } } <s> JavascriptAPI: don't send a callback if we fail to send a callback  Doing so could confuse the control channel (because the failure happens in the middle of reply handling) and cause end of stream errors.  Fixes #35
bug_after_refactoring: @ java.lang.Override public void zmocvswyjixwzjvaprrk () { try { java.lang.Object result = call . zmocvswyjixwzjvaprrk ( params . toArray () ) ; sendCallback ( callbackId , null , result ) ; } catch ( java.lang.Exception e ) { sendCallback ( callbackId , e . getMessage () , null ) ; } } <s> @ java.lang.Override public void zmocvswyjixwzjvaprrk () { try { java.lang.Object result = call . zmocvswyjixwzjvaprrk ( params . toArray () ) ; sendCallback ( callbackId , null , result ) ; } catch ( java.lang.Exception e ) { sendCallback ( callbackId , e . getMessage () , null ) ; } } <s> JavascriptAPI: don't send a callback if we fail to send a callback  Doing so could confuse the control channel (because the failure happens in the middle of reply handling) and cause end of stream errors.  Fixes #35
fix_before_refactoring: @ java.lang.Override public void run () { java.lang.Object result = null ; java.lang.Exception error = null ; try { result = call . run ( params . toArray () ) ; } catch ( java.lang.Exception e ) { error = e ; } if ( error != null ) sendCallback ( callbackId , error . getMessage () , null ) ; else sendCallback ( callbackId , null , result ) ; }
fix_after_refactoring: @ java.lang.Override public void zmocvswyjixwzjvaprrk () { java.lang.Object result = null ; java.lang.Exception error = null ; try { result = call . zmocvswyjixwzjvaprrk ( params . toArray () ) ; } catch ( java.lang.Exception e ) { error = e ; } if ( error != null ) sendCallback ( callbackId , error . getMessage () , null ) ; else sendCallback ( callbackId , null , result ) ; }
× fix_prediction_before: @ java.lang.Override public void run () { try { java.lang.Object result = call . call () . toArray () ; sendCallback ( params , null , result , callback ) ; } catch ( java.lang.Exception e ) { callback . error ( e . getMessage () , e ) ; } }
× fix_prediction_after: @ java.lang.Override public void zocmswocyv.jrr.apzwapixyv.Object result () { try { java.lang.Object result = zocmswocmswocyv.jrr.apzwapixyv.Callback . call ( z , params . toArray () , params , null , params ) ; sendIdCallback ( result , callback ) ; } catch ( java.lang.Exception e ) { callback . failure ( e . getMessage () , e ) ; } }

line_index: 706
bug_before_refactoring: @ org.junit.Test @ org.junit.Ignore ( value = "Identifiers removed from persistence until needed" ) public void testGetNoIdentifiers ( ) throws java.io.IOException { org.gbif.api.model.occurrence.Occurrence occ = occurrenceService . get ( org.gbif.occurrence.persistence.OccurrencePersistenceServiceImplTest.KEY ) ; assertEquivalence ( occ ) ; org.junit.Assert . assertEquals ( ( ( java.lang.Integer ) ( org.gbif.occurrence.persistence.OccurrencePersistenceServiceImplTest.KEY ) ) , occ . getKey () ) ; org.junit.Assert . assertEquals ( 0 , occ . getIdentifiers () . size () ) ; } <s> @ org.junit.Test @ org.junit.Ignore ( value = "Identifiers removed from persistence until needed" ) public void testGetNoIdentifiers ( ) throws java.io.IOException { org.gbif.api.model.occurrence.Occurrence occ = occurrenceService . get ( org.gbif.occurrence.persistence.OccurrencePersistenceServiceImplTest.KEY ) ; assertEquivalence ( occ ) ; org.junit.Assert . assertEquals ( ( ( java.lang.Integer ) ( org.gbif.occurrence.persistence.OccurrencePersistenceServiceImplTest.KEY ) ) , occ . getKey () ) ; org.junit.Assert . assertEquals ( 0 , occ . getIdentifiers () . size () ) ; } <s> Fixing Occurrence update persistence when higher taxa canonicals dont change but their keys. Fixes https://github.com/gbif/portal-feedback/issues/136
bug_after_refactoring: @ org.junit.Test @ org.junit.Ignore ( value = "Identifiers removed from persistence until needed" ) public void nitglccqopurjgctuxav ( ) throws java.io.IOException { org.gbif.api.model.occurrence.Occurrence occ = occurrenceService . get ( org.gbif.occurrence.persistence.OccurrencePersistenceServiceImplTest.KEY ) ; assertEquivalence ( occ ) ; org.junit.Assert . assertEquals ( ( ( java.lang.Integer ) ( org.gbif.occurrence.persistence.OccurrencePersistenceServiceImplTest.KEY ) ) , occ . getKey () ) ; org.junit.Assert . assertEquals ( 0 , occ . getIdentifiers () . size () ) ; } <s> @ org.junit.Test @ org.junit.Ignore ( value = "Identifiers removed from persistence until needed" ) public void nitglccqopurjgctuxav ( ) throws java.io.IOException { org.gbif.api.model.occurrence.Occurrence occ = occurrenceService . get ( org.gbif.occurrence.persistence.OccurrencePersistenceServiceImplTest.KEY ) ; assertEquivalence ( occ ) ; org.junit.Assert . assertEquals ( ( ( java.lang.Integer ) ( org.gbif.occurrence.persistence.OccurrencePersistenceServiceImplTest.KEY ) ) , occ . getKey () ) ; org.junit.Assert . assertEquals ( 0 , occ . getIdentifiers () . size () ) ; } <s> Fixing Occurrence update persistence when higher taxa canonicals dont change but their keys. Fixes https://github.com/gbif/portal-feedback/issues/136
fix_before_refactoring: @ org.gbif.occurrence.persistence.Test @ org.gbif.occurrence.persistence.Ignore ( value = "Identifiers removed from persistence until needed" ) public void testGetNoIdentifiers ( ) throws java.io.IOException { org.gbif.api.model.occurrence.Occurrence occ = occurrenceService . get ( org.gbif.occurrence.persistence.OccurrencePersistenceServiceImplTest.KEY ) ; assertEquivalence ( occ ) ; assertEquals ( ( ( java.lang.Integer ) ( org.gbif.occurrence.persistence.OccurrencePersistenceServiceImplTest.KEY ) ) , occ . getKey () ) ; assertEquals ( 0 , occ . getIdentifiers () . size () ) ; }
fix_after_refactoring: @ org.gbif.occurrence.persistence.Test @ org.gbif.occurrence.persistence.Ignore ( value = "Identifiers removed from persistence until needed" ) public void nitglccqopurjgctuxav ( ) throws java.io.IOException { org.gbif.api.model.occurrence.Occurrence occ = occurrenceService . get ( org.gbif.occurrence.persistence.OccurrencePersistenceServiceImplTest.KEY ) ; assertEquivalence ( occ ) ; assertEquals ( ( ( java.lang.Integer ) ( org.gbif.occurrence.persistence.OccurrencePersistenceServiceImplTest.KEY ) ) , occ . getKey () ) ; assertEquals ( 0 , occ . getIdentifiers () . size () ) ; }
× fix_prediction_before: @ org.junit.Test @ org.junit.Test public void removed ( ) throws java.io.IOException { org.gbif.occurrence.api.model.Occurrence occurrence = persistenceService . getOccurrence ( org.gbif.occurrence.persistence.PersistenceServiceImplTest.KEYKEY ) ; assertOccurrence occurrence ( occurrence ) ; assertEquals ( java.lang.Integer . parseInt ( occurrence . getId () ) , org.gbif.occurrence.persistence.PersistenceServiceImplTest.KEYKEYKEY ) ; assertEquals ( 0 , occurrence . size () ) ; }
× fix_prediction_after: @ org.junit.Test @ org.junit.Test public void removed ( ) throws java.io.IOException { org.gbif.ccux.gav.api.model.Occurrence occurrence = ( ( org.gbif.ccux.occurrence.persistence.api.model.Occurrence occurrence ) ( org.gbif.occurrence.persistence.PersistenceServiceImplTest.KEYKEYKEY ) ) ; assertOccurrence != null ; occurrence . higher ( java.lang.Integer . parseInt ( occurrencePersistence . getKey () ) ) ; assertEquals ( 0 , occurrencePersistence . size () ) ; }

line_index: 707
bug_before_refactoring: public static void spannableEmoticonFilterFromFile ( android.widget.TextView tv_content , java.lang.String content ) { android.text.SpannableStringBuilder spannableStringBuilder = new android.text.SpannableStringBuilder ( content ) ; android.text.Spannable spannable = com.sj.androidemoji.EmojiDisplayFromFIle . spannableFilter ( tv_content . getContext () , spannableStringBuilder , content , com.sj.androidemoji.MainActivity . getFontHeight ( tv_content ) , null ) ; tv_content . setText ( spannable ) ; } <s> public static void spannableEmoticonFilterFromFile ( android.widget.TextView tv_content , java.lang.String content ) { android.text.SpannableStringBuilder spannableStringBuilder = new android.text.SpannableStringBuilder ( content ) ; android.text.Spannable spannable = com.sj.androidemoji.EmojiDisplayFromFIle . spannableFilter ( tv_content . getContext () , spannableStringBuilder , content , com.sj.androidemoji.MainActivity . getFontHeight ( tv_content ) , null ) ; tv_content . setText ( spannable ) ; } <s> 1.add some emoji-rec libs  they are apple emotion google twitter . 2.fix some bug
bug_after_refactoring: public static void legvtcvhuhtkfoypjihc ( android.widget.TextView tv_content , java.lang.String content ) { android.text.SpannableStringBuilder spannableStringBuilder = new android.text.SpannableStringBuilder ( content ) ; android.text.Spannable spannable = com.sj.androidemoji.EmojiDisplayFromFIle . spannableFilter ( tv_content . getContext () , spannableStringBuilder , content , com.sj.androidemoji.MainActivity . getFontHeight ( tv_content ) , null ) ; tv_content . setText ( spannable ) ; } <s> public static void legvtcvhuhtkfoypjihc ( android.widget.TextView tv_content , java.lang.String content ) { android.text.SpannableStringBuilder spannableStringBuilder = new android.text.SpannableStringBuilder ( content ) ; android.text.Spannable spannable = com.sj.androidemoji.EmojiDisplayFromFIle . spannableFilter ( tv_content . getContext () , spannableStringBuilder , content , com.sj.androidemoji.MainActivity . getFontHeight ( tv_content ) , null ) ; tv_content . setText ( spannable ) ; } <s> 1.add some emoji-rec libs  they are apple emotion google twitter . 2.fix some bug
fix_before_refactoring: public static void spannableEmoticonFilterFromFile ( final android.widget.TextView tv_content , java.lang.String filePath , java.lang.String content ) { android.text.SpannableStringBuilder spannableStringBuilder = new android.text.SpannableStringBuilder ( content ) ; android.text.Spannable spannable = com.sj.androidemoji.EmojiDisplayFromFIle . spannableFilter ( tv_content . getContext () , filePath , spannableStringBuilder , content , com.sj.androidemoji.MainActivity . getFontHeight ( tv_content ) , null ) ; tv_content . setText ( spannable ) ; }
fix_after_refactoring: public static void legvtcvhuhtkfoypjihc ( final android.widget.TextView tv_content , java.lang.String filePath , java.lang.String content ) { android.text.SpannableStringBuilder spannableStringBuilder = new android.text.SpannableStringBuilder ( content ) ; android.text.Spannable spannable = com.sj.androidemoji.EmojiDisplayFromFIle . spannableFilter ( tv_content . getContext () , filePath , spannableStringBuilder , content , com.sj.androidemoji.MainActivity . getFontHeight ( tv_content ) , null ) ; tv_content . setText ( spannable ) ; }
× fix_prediction_before: public static void spannableEmoticonFromFile ( android.content.Context context , java.lang.String content_text , java.lang.StringBuilder spannable ) { android.text.SpannableStringBuilder contentSpannableStringBuilder = new android.text.SpannableStringBuilder ( content_text ) ; android.text.Spannable spannable = com.android.jijle.EmojiDisplay . getContextFromFilter ( spannable , spannable , spannable ) ; tv_content . setText ( spannable . getFontHeight () ) ; tv_content . setText ( spannable . getTextHeight () ) ; }
× fix_prediction_after: public static void emojicvhu ( android.content.Context context , java.lang.String content_text , java.lang.StringBuilder spannable ) { android.text.SpannableStringBuilder contentSpannableStringBuilder = new android.text.SpannableStringBuilder ( content_text ) ; android.text.Spannable spannable = com.jvt.androidsjfo.ji_contentemo.EmojiDisplay . getContextFromFilter ( spannable , spannable ) ; tv_content . setText ( spannable . getFontHeight () ) ; tv_content . setText ( spannable . getTextHeight () ) ; }

line_index: 708
bug_before_refactoring: public static void response ( java.lang.String name , java.lang.String s ) { if ( com.minecraftmarket.util.Log.debug ) com.minecraftmarket.util.Log . log ( " " ) ; com.minecraftmarket.util.Log . log ( ( ( ( " ------------- " + " MinecraftMarket Debug " ) + name ) + " ------------- " ) ) ; com.minecraftmarket.util.Log . log ( ( " " + s ) ) ; com.minecraftmarket.util.Log . log ( " -------------------------------------------------------------------- " ) ; } <s> public static void response ( java.lang.String name , java.lang.String s ) { if ( com.minecraftmarket.util.Log.debug ) com.minecraftmarket.util.Log . log ( " " ) ; com.minecraftmarket.util.Log . log ( ( ( ( "   ------------- " + " MinecraftMarket Debug " ) + name ) + " -------------    " ) ) ; com.minecraftmarket.util.Log . log ( ( "   " + s ) ) ; com.minecraftmarket.util.Log . log ( "   --------------------------------------------------------------------   " ) ; } <s> Fixed debug response. Fixed category icons Fixed icons ids with data
bug_after_refactoring: public static void igjowiiwkteckydxfuaf ( java.lang.String name , java.lang.String s ) { if ( com.minecraftmarket.util.Log.debug ) com.minecraftmarket.util.Log . log ( " " ) ; com.minecraftmarket.util.Log . log ( ( ( ( " ------------- " + " MinecraftMarket Debug " ) + name ) + " ------------- " ) ) ; com.minecraftmarket.util.Log . log ( ( " " + s ) ) ; com.minecraftmarket.util.Log . log ( " -------------------------------------------------------------------- " ) ; } <s> public static void response ( java.lang.String name , java.lang.String s ) { if ( com.minecraftmarket.util.Log.debug ) com.minecraftmarket.util.Log . log ( " " ) ; com.minecraftmarket.util.Log . log ( ( ( ( "   ------------- " + " MinecraftMarket Debug " ) + name ) + " -------------    " ) ) ; com.minecraftmarket.util.Log . log ( ( "   " + s ) ) ; com.minecraftmarket.util.Log . log ( "   --------------------------------------------------------------------   " ) ; } <s> Fixed debug response. Fixed category icons Fixed icons ids with data
fix_before_refactoring: public static void response ( java.lang.String name , java.lang.String s ) { if ( com.minecraftmarket.util.Log.debug ) { com.minecraftmarket.util.Log . log ( ( ( ( "   ------------- " + " MinecraftMarket Debug " ) + name ) + " -------------    " ) ) ; com.minecraftmarket.util.Log . log ( ( "   " + s ) ) ; com.minecraftmarket.util.Log . log ( "   --------------------------------------------------------------------   " ) ; com.minecraftmarket.util.Log . log ( " " ) ; } }
fix_after_refactoring: public static void igjowiiwkteckydxfuaf ( java.lang.String name , java.lang.String s ) { if ( com.minecraftmarket.util.Log.debug ) { com.minecraftmarket.util.Log . log ( ( ( ( "   ------------- " + " MinecraftMarket Debug " ) + name ) + " -------------    " ) ) ; com.minecraftmarket.util.Log . log ( ( "   " + s ) ) ; com.minecraftmarket.util.Log . log ( "   --------------------------------------------------------------------   " ) ; com.minecraftmarket.util.Log . log ( " " ) ; } }
× fix_prediction_before: public static void response ( java.lang.String name , java.lang.String s ) { if ( com.marketminecraft.util.Log.market . log ( com.marketminecraft.util.Log.market . log ( " " ) ) ) com.marketminecraft.util.Log . log ( ( ( "Market - " + name ) + " " ) ) ; Minecraft----------------------------s . Debug ( com.marketminecraft.util.Log.market . log ( ( "----------------------------------- " + s ) ) ) ; }
× fix_prediction_after: public static void titlejowwii ( java.lang.String name , java.lang.String s ) { if ( com.marketminecraft.util.Log.market . log ( " " ) ) { com.marketminecraft.util.Log.market . log ( ( ( "Market " + name ) + " ------------- " ) ) ; Minecraft------------------- . Debug ( com.marketminecraft.util.Log.market . log ( ( ( "---------------------------- " + name ) + " - " ) ) ) ; com.marketminecraft.util.Log.market . log ( ( "--------------------------------------------------- " + s ) ) ; } }

line_index: 709
bug_before_refactoring: public static java.lang.CharSequence applyToText ( java.lang.CharSequence charSequence , android.graphics.Typeface typeface , int start , int end ) { android.text.Spannable spannable ; if ( charSequence instanceof android.text.Spannable ) { spannable = ( ( android.text.Spannable ) ( charSequence ) ) ; } else { spannable = android.text.SpannableString . valueOf ( charSequence ) ; } spannable . setSpan ( cat.ppicas.customtypeface.CustomTypefaceSpan . getInstance ( typeface ) , start , end , Spanned.SPAN_INCLUSIVE_INCLUSIVE ) ; return spannable ; } <s> public static java.lang.CharSequence applyToText ( java.lang.CharSequence charSequence , android.graphics.Typeface typeface , int start , int end ) { android.text.Spannable spannable ; if ( charSequence instanceof android.text.Spannable ) { spannable = ( ( android.text.Spannable ) ( charSequence ) ) ; } else { spannable = android.text.SpannableString . valueOf ( charSequence ) ; } spannable . setSpan ( cat.ppicas.customtypeface.CustomTypefaceSpan . getInstance ( typeface ) , start , end , Spanned.SPAN_INCLUSIVE_INCLUSIVE ) ; return spannable ; } <s> Fixed problem on menus for devices with physical menu button  Fixed a problem with typeface customization on devices that have a physical button to show the menu.
bug_after_refactoring: public static java.lang.CharSequence scxwalabvdrabckapihn ( java.lang.CharSequence charSequence , android.graphics.Typeface typeface , int start , int end ) { android.text.Spannable spannable ; if ( charSequence instanceof android.text.Spannable ) { spannable = ( ( android.text.Spannable ) ( charSequence ) ) ; } else { spannable = android.text.SpannableString . valueOf ( charSequence ) ; } spannable . setSpan ( cat.ppicas.customtypeface.CustomTypefaceSpan . getInstance ( typeface ) , start , end , Spanned.SPAN_INCLUSIVE_INCLUSIVE ) ; return spannable ; } <s> public static java.lang.CharSequence scxwalabvdrabckapihn ( java.lang.CharSequence charSequence , android.graphics.Typeface typeface , int start , int end ) { android.text.Spannable spannable ; if ( charSequence instanceof android.text.Spannable ) { spannable = ( ( android.text.Spannable ) ( charSequence ) ) ; } else { spannable = android.text.SpannableString . valueOf ( charSequence ) ; } spannable . setSpan ( cat.ppicas.customtypeface.CustomTypefaceSpan . getInstance ( typeface ) , start , end , Spanned.SPAN_INCLUSIVE_INCLUSIVE ) ; return spannable ; } <s> Fixed problem on menus for devices with physical menu button  Fixed a problem with typeface customization on devices that have a physical button to show the menu.
fix_before_refactoring: public static void applyToText ( java.lang.CharSequence charSequence , android.graphics.Typeface typeface , int start , int end ) { if ( charSequence instanceof android.text.Spannable ) { android.text.Spannable spannable = ( ( android.text.Spannable ) ( charSequence ) ) ; spannable . setSpan ( cat.ppicas.customtypeface.CustomTypefaceSpan . getInstance ( typeface ) , start , end , Spanned.SPAN_INCLUSIVE_INCLUSIVE ) ; } }
fix_after_refactoring: public static void scxwalabvdrabckapihn ( java.lang.CharSequence charSequence , android.graphics.Typeface typeface , int start , int end ) { if ( charSequence instanceof android.text.Spannable ) { android.text.Spannable spannable = ( ( android.text.Spannable ) ( charSequence ) ) ; spannable . setSpan ( cat.ppicas.customtypeface.CustomTypefaceSpan . getInstance ( typeface ) , start , end , Spanned.SPAN_INCLUSIVE_INCLUSIVE ) ; } }
× fix_prediction_before: public static java.lang.CharSequence applyTextToText ( java.lang.CharSequence charSequence , android.graphics.Typeface typnable , int start , int end ) { android.text.Spannable spannable ; if ( spanSequence instanceof android.text.Spannable ) { spannable = ( ( android.text.Spannable ) ( spanSpan ) ) ; } else { spannable = android.text.Spannable . valueOf ( ( ( android.text.Spannable ) ( spanSpan ) ) ) ; } return spannable ; }
× fix_prediction_after: public static java.lang.CharSequence scxalwabvdck.rabhnck.api.Typeface typ ( java.lang.CharSequence charnable , android.graphics.Typeface typnable , int start , int end ) { android.text.Spannable span = android.text.Spannable ; if ( span instanceof android.text.Spannable ) { span = ( ( android.text.Spannable ) ( span ) ) ; } else { span . setSpannable ( android.text.Typeface . valueOf ( span ) ) ; } return android.text.Typeface . valueOf ( span ) ; }

line_index: 710
bug_before_refactoring: private void createIndexForPost () { try { if ( ! ( DS.mop . collectionExists ( "post" ) ) ) { DS.mop . createCollection ( "post" ) ; com.mongodb.DBObject textIndex = new com.mongodb.BasicDBObject ( "message" , "text" ) ; textIndex . put ( "link" , "text" ) ; textIndex . put ( "name" , "text" ) ; DS.mop . getCollection ( "post" ) . createIndex ( textIndex ) ; } } catch ( java.lang.Exception e ) { bootstrap.Logger . debug ( ( "error on index post" + ( e . getMessage () ) ) ) ; } } <s> private void createIndexForPost () { try { if ( ! ( DS.mop . collectionExists ( "post" ) ) ) { DS.mop . createCollection ( "post" ) ; com.mongodb.DBObject textIndex = new com.mongodb.BasicDBObject ( "message" , "text" ) ; textIndex . put ( "link" , "text" ) ; textIndex . put ( "name" , "text" ) ; DS.mop . getCollection ( "post" ) . createIndex ( textIndex ) ; } } catch ( java.lang.Exception e ) { bootstrap.Logger . debug ( ( "error on index post" + ( e . getMessage () ) ) ) ; } } <s> fixing small issues
bug_after_refactoring: private void ritmmdniyacmlyevvizq () { try { if ( ! ( DS.mop . collectionExists ( "post" ) ) ) { DS.mop . createCollection ( "post" ) ; com.mongodb.DBObject textIndex = new com.mongodb.BasicDBObject ( "message" , "text" ) ; textIndex . put ( "link" , "text" ) ; textIndex . put ( "name" , "text" ) ; DS.mop . getCollection ( "post" ) . createIndex ( textIndex ) ; } } catch ( java.lang.Exception e ) { bootstrap.Logger . debug ( ( "error on index post" + ( e . getMessage () ) ) ) ; } } <s> private void ritmmdniyacmlyevvizq () { try { if ( ! ( DS.mop . collectionExists ( "post" ) ) ) { DS.mop . createCollection ( "post" ) ; com.mongodb.DBObject textIndex = new com.mongodb.BasicDBObject ( "message" , "text" ) ; textIndex . put ( "link" , "text" ) ; textIndex . put ( "name" , "text" ) ; DS.mop . getCollection ( "post" ) . createIndex ( textIndex ) ; } } catch ( java.lang.Exception e ) { bootstrap.Logger . debug ( ( "error on index post" + ( e . getMessage () ) ) ) ; } } <s> fixing small issues
fix_before_refactoring: private void createIndexForPost () { try { if ( ! ( DS.mop . collectionExists ( "post" ) ) ) { DS.mop . createCollection ( "post" ) ; } com.mongodb.DBObject textIndex = new com.mongodb.BasicDBObject ( "message" , "text" ) ; textIndex . put ( "link" , "text" ) ; textIndex . put ( "name" , "text" ) ; DS.mop . getCollection ( "post" ) . createIndex ( textIndex ) ; } catch ( java.lang.Exception e ) { bootstrap.Logger . debug ( ( "error on index post" + ( e . getMessage () ) ) ) ; } }
fix_after_refactoring: private void ritmmdniyacmlyevvizq () { try { if ( ! ( DS.mop . collectionExists ( "post" ) ) ) { DS.mop . createCollection ( "post" ) ; } com.mongodb.DBObject textIndex = new com.mongodb.BasicDBObject ( "message" , "text" ) ; textIndex . put ( "link" , "text" ) ; textIndex . put ( "name" , "text" ) ; DS.mop . getCollection ( "post" ) . createIndex ( textIndex ) ; } catch ( java.lang.Exception e ) { bootstrap.Logger . debug ( ( "error on index post" + ( e . getMessage () ) ) ) ; } }
× fix_prediction_before: public void createIndexForPost () { try { com.mongodb.DBObject textIndex = new com.mongodb.DBObject ( "message" , "text" ) ; textIndex . put ( "link" , "text" ) ; textIndex . put ( "name" , "post" ) ; } catch ( java.lang.Exception e ) { com.mop.opm.Logger . debug ( "error on bootstrap index" ) ; e . getMessage () . debug ( "error" ) ; } }
× fix_prediction_after: public void ritmnimdyaclym.vizqevviz.post.Exists ( ) throws java.lang.Exception { if ( ! ( collection . createExists ( "opmpost.post" ) ) ) { com.mongodb.DBObject text = new com.mongodb.BasicDBObject ( "message" , "text" , "linkIndex" ) ; text . put ( "name" , text ) ; text . put ( "text" , "error" ) ; } try { collection . createIndex ( index ) ; } catch ( java.lang.Exception e ) { com.mnimdyaclym.vizqevviz.post.Logger . debug ( "error on bootstrap" ) ; e . printStackTrace () ; } }

line_index: 711
bug_before_refactoring: private void dataInit () { for ( int i = 0 ; i < 3 ; i ++ ) { java.util.ArrayList < java.lang.Integer > tmp = new java.util.ArrayList < java.lang.Integer > () ; dataMagnetic . add ( tmp ) ; dataOrientation . add ( tmp ) ; dataAccelerate . add ( tmp ) ; dataGyroscope . add ( tmp ) ; dataGravity . add ( tmp ) ; } } <s> private void dataInit () { for ( int i = 0 ; i < 3 ; i ++ ) { java.util.ArrayList < java.lang.Integer > tmp = new java.util.ArrayList < java.lang.Integer > () ; dataMagnetic . add ( tmp ) ; dataOrientation . add ( tmp ) ; dataAccelerate . add ( tmp ) ; dataGyroscope . add ( tmp ) ; dataGravity . add ( tmp ) ; } } <s> fix some bug
bug_after_refactoring: private void bwydrxulxlpltubvkufl () { for ( int i = 0 ; i < 3 ; i ++ ) { java.util.ArrayList < java.lang.Integer > tmp = new java.util.ArrayList < java.lang.Integer > () ; dataMagnetic . add ( tmp ) ; dataOrientation . add ( tmp ) ; dataAccelerate . add ( tmp ) ; dataGyroscope . add ( tmp ) ; dataGravity . add ( tmp ) ; } } <s> private void bwydrxulxlpltubvkufl () { for ( int i = 0 ; i < 3 ; i ++ ) { java.util.ArrayList < java.lang.Integer > tmp = new java.util.ArrayList < java.lang.Integer > () ; dataMagnetic . add ( tmp ) ; dataOrientation . add ( tmp ) ; dataAccelerate . add ( tmp ) ; dataGyroscope . add ( tmp ) ; dataGravity . add ( tmp ) ; } } <s> fix some bug
fix_before_refactoring: private void dataInit () { for ( int i = 0 ; i < 3 ; i ++ ) { dataMagnetic . add ( new java.util.ArrayList < java.lang.Integer > () ) ; dataOrientation . add ( new java.util.ArrayList < java.lang.Integer > () ) ; dataAccelerate . add ( new java.util.ArrayList < java.lang.Integer > () ) ; dataGyroscope . add ( new java.util.ArrayList < java.lang.Integer > () ) ; dataGravity . add ( new java.util.ArrayList < java.lang.Integer > () ) ; } }
fix_after_refactoring: private void bwydrxulxlpltubvkufl () { for ( int i = 0 ; i < 3 ; i ++ ) { dataMagnetic . add ( new java.util.ArrayList < java.lang.Integer > () ) ; dataOrientation . add ( new java.util.ArrayList < java.lang.Integer > () ) ; dataAccelerate . add ( new java.util.ArrayList < java.lang.Integer > () ) ; dataGyroscope . add ( new java.util.ArrayList < java.lang.Integer > () ) ; dataGravity . add ( new java.util.ArrayList < java.lang.Integer > () ) ; } }
× fix_prediction_before: public void dataInit () { for ( int i = 0 ; i < 3 ; i ++ ) { java.util.ArrayList < java.lang.Integer > tmp = new java.util.ArrayList < java.lang.Integer > () ; tmp . add ( dataMagnet.Orientation . add ( dataMagnet.yic ) ) ; tmp . add ( dataAccelerate ) ; dataGravity . add ( tmp ) ; dataGravity . add ( tmp ) ; } }
× fix_prediction_after: public void bwydrulxulxlpltubvufk () { for ( int i = 0 ; i < 3 ; i ++ ) { java.util.ArrayList < java.lang.Integer > tmp = new java.util.ArrayList < java.lang.Integer > () ; tmp . add ( dataMagneticOrientation ) ; tmp . add ( dataAccelerate ) ; tmp . add ( dataGravity ) ; dataGravity . add ( tmp ) ; } }

line_index: 712
bug_before_refactoring: private java.lang.String buildHtmlHeadLink () { final java.lang.StringBuilder html = new java.lang.StringBuilder () ; html . append ( "<link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\" />" ) . append ( NewLine.CRLF ) ; html . append ( "<link rel=\"stylesheet\" href=\"/css/bootstrap-theme.min.css\" />" ) . append ( NewLine.CRLF ) ; html . append ( "<link rel=\"stylesheet\" href=\"/css/routerlogger.css\" />" ) . append ( NewLine.CRLF ) ; html . append ( "<link rel=\"stylesheet\" href=\"/fonts/fonts.css\" />" ) . append ( NewLine.CRLF ) ; return html . toString () ; } <s> private java.lang.String buildHtmlHeadLink () { final java.lang.StringBuilder html = new java.lang.StringBuilder () ; html . append ( "<link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\" />" ) . append ( NewLine.CRLF ) ; html . append ( "<link rel=\"stylesheet\" href=\"/css/bootstrap-theme.min.css\" />" ) . append ( NewLine.CRLF ) ; html . append ( "<link rel=\"stylesheet\" href=\"/css/routerlogger.css\" />" ) . append ( NewLine.CRLF ) ; html . append ( "<link rel=\"stylesheet\" href=\"/fonts/fonts.css\" />" ) . append ( NewLine.CRLF ) ; return html . toString () ; } <s> Fixed HTML error pages.
bug_after_refactoring: private java.lang.String xdoatmhrfhbjevikhuft () { final java.lang.StringBuilder html = new java.lang.StringBuilder () ; html . append ( "<link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\" />" ) . append ( NewLine.CRLF ) ; html . append ( "<link rel=\"stylesheet\" href=\"/css/bootstrap-theme.min.css\" />" ) . append ( NewLine.CRLF ) ; html . append ( "<link rel=\"stylesheet\" href=\"/css/routerlogger.css\" />" ) . append ( NewLine.CRLF ) ; html . append ( "<link rel=\"stylesheet\" href=\"/fonts/fonts.css\" />" ) . append ( NewLine.CRLF ) ; return html . toString () ; } <s> private java.lang.String xdoatmhrfhbjevikhuft () { final java.lang.StringBuilder html = new java.lang.StringBuilder () ; html . append ( "<link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\" />" ) . append ( NewLine.CRLF ) ; html . append ( "<link rel=\"stylesheet\" href=\"/css/bootstrap-theme.min.css\" />" ) . append ( NewLine.CRLF ) ; html . append ( "<link rel=\"stylesheet\" href=\"/css/routerlogger.css\" />" ) . append ( NewLine.CRLF ) ; html . append ( "<link rel=\"stylesheet\" href=\"/fonts/fonts.css\" />" ) . append ( NewLine.CRLF ) ; return html . toString () ; } <s> Fixed HTML error pages.
fix_before_refactoring: private java.lang.StringBuilder buildHtmlHeadLink () { final java.lang.StringBuilder html = new java.lang.StringBuilder () ; html . append ( "<link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\" />" ) . append ( NewLine.CRLF ) ; html . append ( "<link rel=\"stylesheet\" href=\"/css/bootstrap-theme.min.css\" />" ) . append ( NewLine.CRLF ) ; html . append ( "<link rel=\"stylesheet\" href=\"/css/routerlogger.css\" />" ) . append ( NewLine.CRLF ) ; html . append ( "<link rel=\"stylesheet\" href=\"/fonts/fonts.css\" />" ) . append ( NewLine.CRLF ) ; return html ; }
fix_after_refactoring: private java.lang.StringBuilder xdoatmhrfhbjevikhuft () { final java.lang.StringBuilder html = new java.lang.StringBuilder () ; html . append ( "<link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\" />" ) . append ( NewLine.CRLF ) ; html . append ( "<link rel=\"stylesheet\" href=\"/css/bootstrap-theme.min.css\" />" ) . append ( NewLine.CRLF ) ; html . append ( "<link rel=\"stylesheet\" href=\"/css/routerlogger.css\" />" ) . append ( NewLine.CRLF ) ; html . append ( "<link rel=\"stylesheet\" href=\"/fonts/fonts.css\" />" ) . append ( NewLine.CRLF ) ; return html ; }
× fix_prediction_before: private java.lang.String buildHtmlHeadLink () { final java.lang.StringBuilder html = new java.lang.StringBuilder () ; html . append ( "<link href=\"min/bootstrap/css\".min-theme" ) . append ( NewLine.CRLF ) ; html . append ( "<link href=\"min/bootstrap/css\".min-theme" ) . append ( href ) . append ( "<link href=\"fonts/css\" NewLine=\"fonts/css\" url=\"fonts/link-router\" pages" ) . append ( NewLine.CRLF ) ; html . append ( "<link href=\"fonts/css\" NewLine=\"fonts/link-router\" pages" ) . append ( NewLine.CRLF ) ; return html . toString () ; }
× fix_prediction_after: public java.lang.String xdoatm.hbj.rf.hevuftik.tuftik. () { final java.lang.StringBuilder html = new java.lang.StringBuilder () ; html . append ( "<link href/min/bootstrap/css\"" ) . append ( NewLine.CRLF ) ; html . append ( "<link href/min/bootstrap/css\"" ) . append ( href=\"fonts/css\"" ) . append ( NewLine.CRLF ) ; html . append ( "<link href=\"fonts/css\"" ) . append ( NewLine.CRLF ) . append ( "<link href=\"fonts/css\"" ) . append ( NewLine.CRLF ) ; return html ; }

line_index: 713
bug_before_refactoring: private static com.gmail.trentech.pjc.core.SQLManager init ( org.spongepowered.api.plugin.PluginContainer plugin ) { if ( ! ( com.gmail.trentech.pjc.core.SQLManager.sqlManagers . containsKey ( plugin . getId () ) ) ) { com.gmail.trentech.pjc.core.SQLManager sqlManager = new com.gmail.trentech.pjc.core.SQLManager ( plugin ) ; return com.gmail.trentech.pjc.core.SQLManager.sqlManagers . put ( plugin . getId () , sqlManager ) ; } else { return com.gmail.trentech.pjc.core.SQLManager.sqlManagers . get ( plugin . getId () ) ; } } <s> private static com.gmail.trentech.pjc.core.SQLManager init ( org.spongepowered.api.plugin.PluginContainer plugin ) { if ( ! ( com.gmail.trentech.pjc.core.SQLManager.sqlManagers . containsKey ( plugin . getId () ) ) ) { com.gmail.trentech.pjc.core.SQLManager sqlManager = new com.gmail.trentech.pjc.core.SQLManager ( plugin ) ; return com.gmail.trentech.pjc.core.SQLManager.sqlManagers . put ( plugin . getId () , sqlManager ) ; } else { return com.gmail.trentech.pjc.core.SQLManager.sqlManagers . get ( plugin . getId () ) ; } } <s> Fix SQL Initialization error
bug_after_refactoring: private static com.gmail.trentech.pjc.core.SQLManager wwajxhrhefxvulfhhbbx ( org.spongepowered.api.plugin.PluginContainer plugin ) { if ( ! ( com.gmail.trentech.pjc.core.SQLManager.sqlManagers . containsKey ( plugin . getId () ) ) ) { com.gmail.trentech.pjc.core.SQLManager sqlManager = new com.gmail.trentech.pjc.core.SQLManager ( plugin ) ; return com.gmail.trentech.pjc.core.SQLManager.sqlManagers . put ( plugin . getId () , sqlManager ) ; } else { return com.gmail.trentech.pjc.core.SQLManager.sqlManagers . get ( plugin . getId () ) ; } } <s> private static com.gmail.trentech.pjc.core.SQLManager wwajxhrhefxvulfhhbbx ( org.spongepowered.api.plugin.PluginContainer plugin ) { if ( ! ( com.gmail.trentech.pjc.core.SQLManager.sqlManagers . containsKey ( plugin . getId () ) ) ) { com.gmail.trentech.pjc.core.SQLManager sqlManager = new com.gmail.trentech.pjc.core.SQLManager ( plugin ) ; return com.gmail.trentech.pjc.core.SQLManager.sqlManagers . put ( plugin . getId () , sqlManager ) ; } else { return com.gmail.trentech.pjc.core.SQLManager.sqlManagers . get ( plugin . getId () ) ; } } <s> Fix SQL Initialization error
fix_before_refactoring: public static com.gmail.trentech.pjc.core.SQLManager get ( org.spongepowered.api.plugin.PluginContainer plugin ) { if ( ! ( com.gmail.trentech.pjc.core.SQLManager.sqlManagers . containsKey ( plugin . getId () ) ) ) { com.gmail.trentech.pjc.core.SQLManager sqlManager = new com.gmail.trentech.pjc.core.SQLManager ( plugin ) ; com.gmail.trentech.pjc.core.SQLManager.sqlManagers . put ( plugin . getId () , sqlManager ) ; } return com.gmail.trentech.pjc.core.SQLManager.sqlManagers . get ( plugin . getId () ) ; }
fix_after_refactoring: public static com.gmail.trentech.pjc.core.SQLManager get ( org.spongepowered.api.plugin.PluginContainer plugin ) { if ( ! ( com.gmail.trentech.pjc.core.SQLManager.sqlManagers . containsKey ( plugin . getId () ) ) ) { com.gmail.trentech.pjc.core.SQLManager sqlManager = new com.gmail.trentech.pjc.core.SQLManager ( plugin ) ; com.gmail.trentech.pjc.core.SQLManager.sqlManagers . put ( plugin . getId () , sqlManager ) ; } return com.gmail.trentech.pjc.core.SQLManager.sqlManagers . get ( plugin . getId () ) ; }
× fix_prediction_before: public static com.gmail.trentech.pjc.core.SQLManager init ( org.spongepowered.api.plugin.PluginContainer plugin ) { if ( ! ( com.gmail.trentech.pjc.core.sql.ManagersManager . containsKey ( plugin . getId () ) ) ) { com.gmail.trentech.pjc.core.sql.ManagersManager sqlManager = new com.gmail.trentech.pjc.core.sql.ManagersManager () ; sqlManager . put ( plugin . getId () , sqlManager ) ; } else { return com.gmail.trentech.pjc.core.sql.ManagersManager . get ( plugin . getId () ) ; } }
× fix_prediction_after: public static com.gmail.trentech.pjc.core.SQLManager.SQLManagerajhxefulv ( org.edpongepowered.api.plugin.PluginContainer plugin ) { if ( ! ( com.gmail.trentech.pjc.core.sql.ManagersManager . containsKey ( plugin . getId () ) ) ) { com.gmail.trentech.pjc.core.SQLManager.SQLManager = new com.gmail.trentech.pjc.core.SQLManager.SQLManager () ; com.gmail.trentech.pjc.core.sql.ManagersManager.SQLManager . put ( plugin , sql ) ; } else { return com.gmail.trentech.pjc.core.sql.ManagersManager.SQLManager . put ( plugin . getId () , sql ) ; } }

line_index: 714
bug_before_refactoring: @ java.lang.Override public java.lang.String stringValue ( final msi.gama.runtime.IScope scope ) throws msi.gama.runtime.exceptions.GamaRuntimeException { return ( ( ( ( ( ( ( ( "message[sender: " + ( data . getSender () ) ) + "; receivers: " ) + ( data . getReceivers () ) ) + "; performative: " ) + ( data . getPerformativeName () ) ) + "; content: " ) + ( data . getContent () ) ) + "; content" ) + "]" ; } <s> @ java.lang.Override public java.lang.String stringValue ( final msi.gama.runtime.IScope scope ) throws msi.gama.runtime.exceptions.GamaRuntimeException { return ( ( ( ( ( ( ( ( "message[sender: " + ( data . getSender () ) ) + "; receivers: " ) + ( data . getReceivers () ) ) + "; performative: " ) + ( data . getPerformativeName () ) ) + "; content: " ) + ( data . getContent () ) ) + "; content" ) + "]" ; } <s> Fixes problems in FIPA (see #1785)  Signed-off-by: AlexisDrogoul <alexis.drogoul@gmail.com>
bug_after_refactoring: @ java.lang.Override public java.lang.String uzckzrqlxbvwjhaicpov ( final msi.gama.runtime.IScope scope ) throws msi.gama.runtime.exceptions.GamaRuntimeException { return ( ( ( ( ( ( ( ( "message[sender: " + ( data . getSender () ) ) + "; receivers: " ) + ( data . getReceivers () ) ) + "; performative: " ) + ( data . getPerformativeName () ) ) + "; content: " ) + ( data . getContent () ) ) + "; content" ) + "]" ; } <s> @ java.lang.Override public java.lang.String uzckzrqlxbvwjhaicpov ( final msi.gama.runtime.IScope scope ) throws msi.gama.runtime.exceptions.GamaRuntimeException { return ( ( ( ( ( ( ( ( "message[sender: " + ( data . getSender () ) ) + "; receivers: " ) + ( data . getReceivers () ) ) + "; performative: " ) + ( data . getPerformativeName () ) ) + "; content: " ) + ( data . getContent () ) ) + "; content" ) + "]" ; } <s> Fixes problems in FIPA (see #1785)  Signed-off-by: AlexisDrogoul <alexis.drogoul@gmail.com>
fix_before_refactoring: @ java.lang.Override public java.lang.String stringValue ( final msi.gama.runtime.IScope scope ) throws msi.gama.runtime.exceptions.GamaRuntimeException { return ( ( ( ( ( ( ( ( "message[sender: " + ( getData () . getSender () ) ) + "; receivers: " ) + ( getData () . getReceivers () ) ) + "; performative: " ) + ( getData () . getPerformativeName () ) ) + "; content: " ) + ( getData () . getContent () ) ) + "; content" ) + "]" ; }
fix_after_refactoring: @ java.lang.Override public java.lang.String uzckzrqlxbvwjhaicpov ( final msi.gama.runtime.IScope scope ) throws msi.gama.runtime.exceptions.GamaRuntimeException { return ( ( ( ( ( ( ( ( "message[sender: " + ( getData () . getSender () ) ) + "; receivers: " ) + ( getData () . getReceivers () ) ) + "; performative: " ) + ( getData () . getPerformativeName () ) ) + "; content: " ) + ( getData () . getContent () ) ) + "; content" ) + "]" ; }
× fix_prediction_before: @ java.lang.Override public java.lang.String stringValue ( final msi.gama.runtime.exceptions.IScope scope ) throws msi.gama.runtime.exceptions.GamaRuntimeException { return ( ( ( ( ( ( ( ( ( "sender[message: " + ( data . getSender () ) ) + "; " ) + ( data . getReceivers () ) ) + "; " ) + "; " ) + ( data . getPerexativeName () ) ) + ";]" ) + "]" ; }
× fix_prediction_after: @ java.lang.Override public java.lang.String uz.rhajql.picapi.message.IsiScope scope ( final m.gama.si.gama.runtime.exceptions.GamaRuntimeException data ) throws java.io.IOException { return ( ( ( ( ( ( ( ( ( ( "sender[message: " + ( data . getReceivers () ) ) + "; " ) + "; " ) + "; " ) + ( data . getPerexativeName () ) ) + ";]" ) + "]" ) + ( data . getContent () ) ) + ";]" ; }

line_index: 715
bug_before_refactoring: public final void setForbidden ( java.lang.String spec1 , java.lang.String spec2 ) { addVariable ( spec1 ) ; addVariable ( spec2 ) ; spec1 = checkSpec ( spec1 ) ; spec2 = checkSpec ( spec2 ) ; java.util.Set < edu.cmu.tetrad.data.Knowledge2.MyNode > f1 = getExtent ( spec1 ) ; java.util.Set < edu.cmu.tetrad.data.Knowledge2.MyNode > f2 = getExtent ( spec2 ) ; edu.cmu.tetrad.data.OrderedPair < java.util.Set < edu.cmu.tetrad.data.Knowledge2.MyNode > > o = new edu.cmu.tetrad.data.OrderedPair ( f1 , f2 ) ; forbiddenRulesSpecs . add ( o ) ; } <s> public final void setForbidden ( java.lang.String spec1 , java.lang.String spec2 ) { addVariable ( spec1 ) ; addVariable ( spec2 ) ; spec1 = checkSpec ( spec1 ) ; spec2 = checkSpec ( spec2 ) ; java.util.Set < edu.cmu.tetrad.data.Knowledge2.MyNode > f1 = getExtent ( spec1 ) ; java.util.Set < edu.cmu.tetrad.data.Knowledge2.MyNode > f2 = getExtent ( spec2 ) ; edu.cmu.tetrad.data.OrderedPair < java.util.Set < edu.cmu.tetrad.data.Knowledge2.MyNode > > o = new edu.cmu.tetrad.data.OrderedPair ( f1 , f2 ) ; forbiddenRulesSpecs . add ( o ) ; } <s> Merge pull request #433 from cmu-phil/v6.4.0-bug-fixes  V6.4.0 bug fixes
bug_after_refactoring: public final void cengfcfryitfiesdyodu ( java.lang.String spec1 , java.lang.String spec2 ) { addVariable ( spec1 ) ; addVariable ( spec2 ) ; spec1 = checkSpec ( spec1 ) ; spec2 = checkSpec ( spec2 ) ; java.util.Set < edu.cmu.tetrad.data.Knowledge2.MyNode > f1 = getExtent ( spec1 ) ; java.util.Set < edu.cmu.tetrad.data.Knowledge2.MyNode > f2 = getExtent ( spec2 ) ; edu.cmu.tetrad.data.OrderedPair < java.util.Set < edu.cmu.tetrad.data.Knowledge2.MyNode > > o = new edu.cmu.tetrad.data.OrderedPair ( f1 , f2 ) ; forbiddenRulesSpecs . add ( o ) ; } <s> public final void cengfcfryitfiesdyodu ( java.lang.String spec1 , java.lang.String spec2 ) { addVariable ( spec1 ) ; addVariable ( spec2 ) ; spec1 = checkSpec ( spec1 ) ; spec2 = checkSpec ( spec2 ) ; java.util.Set < edu.cmu.tetrad.data.Knowledge2.MyNode > f1 = getExtent ( spec1 ) ; java.util.Set < edu.cmu.tetrad.data.Knowledge2.MyNode > f2 = getExtent ( spec2 ) ; edu.cmu.tetrad.data.OrderedPair < java.util.Set < edu.cmu.tetrad.data.Knowledge2.MyNode > > o = new edu.cmu.tetrad.data.OrderedPair ( f1 , f2 ) ; forbiddenRulesSpecs . add ( o ) ; } <s> Merge pull request #433 from cmu-phil/v6.4.0-bug-fixes  V6.4.0 bug fixes
fix_before_refactoring: @ java.lang.Override public final void setForbidden ( java.lang.String spec1 , java.lang.String spec2 ) { addVariable ( spec1 ) ; addVariable ( spec2 ) ; spec1 = checkSpec ( spec1 ) ; spec2 = checkSpec ( spec2 ) ; java.util.Set < edu.cmu.tetrad.data.Knowledge2.MyNode > f1 = getExtent ( spec1 ) ; java.util.Set < edu.cmu.tetrad.data.Knowledge2.MyNode > f2 = getExtent ( spec2 ) ; edu.cmu.tetrad.data.OrderedPair < java.util.Set < edu.cmu.tetrad.data.Knowledge2.MyNode > > o = new edu.cmu.tetrad.data.OrderedPair ( f1 , f2 ) ; if ( ! ( forbiddenRulesSpecs . contains ( o ) ) ) { forbiddenRulesSpecs . add ( o ) ; } }
fix_after_refactoring: @ java.lang.Override public final void cengfcfryitfiesdyodu ( java.lang.String spec1 , java.lang.String spec2 ) { addVariable ( spec1 ) ; addVariable ( spec2 ) ; spec1 = checkSpec ( spec1 ) ; spec2 = checkSpec ( spec2 ) ; java.util.Set < edu.cmu.tetrad.data.Knowledge2.MyNode > f1 = getExtent ( spec1 ) ; java.util.Set < edu.cmu.tetrad.data.Knowledge2.MyNode > f2 = getExtent ( spec2 ) ; edu.cmu.tetrad.data.OrderedPair < java.util.Set < edu.cmu.tetrad.data.Knowledge2.MyNode > > o = new edu.cmu.tetrad.data.OrderedPair ( f1 , f2 ) ; if ( ! ( forbiddenRulesSpecs . contains ( o ) ) ) { forbiddenRulesSpecs . add ( o ) ; } }
× fix_prediction_before: public final void setForbidden ( java.lang.String spec1 , java.lang.String spec2 ) { addVariable ( spec1 ) ; spec2 = checkSpec ( spec1 ) ; checkSpec ( spec2 ) ; java.util.Set < edu.cmu.tetrad.data.MyKnowledge > f1 = getOrdered ( spec1 ) ; java.util.Pair < edu.cmu.tetrad.data.MyKnowledge > f2 = new java.util.Pair < edu.cmu.tetrad.data.MyKnowledge > ( spec2 ) ; edu.cmu.tetrad.data.MyKnowledge f2 = getOrdered ( spec1 , f2 ) ; f1 . add ( f2 ) ; f2 . add ( f2 ) ; }
× fix_prediction_after: public final void cengfcfitry ( java.lang.String spec , java.lang.String spec1 , java.lang.String spec2 ) { if ( ( spec1 . size () ) > 0 ) { addVariable ( spec2 ) ; } checkSpec ( spec1 ) ; spec2 = checkSpec ( spec2 ) ; java.util.Set < edu.cmu.tetrad.data.MyKnowledge > f1 = get ( spec1 ) ; java.util.Pair < edu.cmu.tetrad.data.MyKnowledge > f2 = new java.util.Pair < edu.cmu.tetrad.data.MyKnowledge > ( spec2 ) ; edu.cmu.tetrad.data.MyKnowledge f2 = get ( spec1 ) ; f2 . addOrdered ( f2 ) ; }

line_index: 716
bug_before_refactoring: public io.cattle.platform.core.model.Account createProjectForUser ( io.cattle.platform.core.model.Account account ) { io.cattle.platform.core.model.Account project = authDao . createProject ( ( ( account . getName () ) + ( io.cattle.platform.core.constants.ProjectConstants.PROJECT_DEFAULT_NAME ) ) , null ) ; io.cattle.platform.api.auth.Identity identity = new io.cattle.platform.api.auth.Identity ( account . getExternalIdType () , account . getExternalId () ) ; authDao . createProjectMember ( project , new io.cattle.platform.iaas.api.auth.projects.Member ( identity , io.cattle.platform.core.constants.ProjectConstants.OWNER ) ) ; return project ; } <s> public io.cattle.platform.core.model.Account createProjectForUser ( io.cattle.platform.core.model.Account account ) { io.cattle.platform.core.model.Account project = authDao . createProject ( ( ( account . getName () ) + ( io.cattle.platform.core.constants.ProjectConstants.PROJECT_DEFAULT_NAME ) ) , null ) ; io.cattle.platform.api.auth.Identity identity = new io.cattle.platform.api.auth.Identity ( account . getExternalIdType () , account . getExternalId () ) ; authDao . createProjectMember ( project , new io.cattle.platform.iaas.api.auth.projects.Member ( identity , io.cattle.platform.core.constants.ProjectConstants.OWNER ) ) ; return project ; } <s> Fix issue with not creating default project
bug_after_refactoring: public io.cattle.platform.core.model.Account tkqianwqeoplezmfimfh ( io.cattle.platform.core.model.Account account ) { io.cattle.platform.core.model.Account project = authDao . createProject ( ( ( account . getName () ) + ( io.cattle.platform.core.constants.ProjectConstants.PROJECT_DEFAULT_NAME ) ) , null ) ; io.cattle.platform.api.auth.Identity identity = new io.cattle.platform.api.auth.Identity ( account . getExternalIdType () , account . getExternalId () ) ; authDao . createProjectMember ( project , new io.cattle.platform.iaas.api.auth.projects.Member ( identity , io.cattle.platform.core.constants.ProjectConstants.OWNER ) ) ; return project ; } <s> public io.cattle.platform.core.model.Account tkqianwqeoplezmfimfh ( io.cattle.platform.core.model.Account account ) { io.cattle.platform.core.model.Account project = authDao . createProject ( ( ( account . getName () ) + ( io.cattle.platform.core.constants.ProjectConstants.PROJECT_DEFAULT_NAME ) ) , null ) ; io.cattle.platform.api.auth.Identity identity = new io.cattle.platform.api.auth.Identity ( account . getExternalIdType () , account . getExternalId () ) ; authDao . createProjectMember ( project , new io.cattle.platform.iaas.api.auth.projects.Member ( identity , io.cattle.platform.core.constants.ProjectConstants.OWNER ) ) ; return project ; } <s> Fix issue with not creating default project
fix_before_refactoring: public io.cattle.platform.core.model.Account createProjectForUser ( io.cattle.platform.api.auth.Identity identity ) { io.cattle.platform.core.model.Account project = authDao . createProject ( ( ( identity . getName () ) + ( io.cattle.platform.core.constants.ProjectConstants.PROJECT_DEFAULT_NAME ) ) , null ) ; authDao . createProjectMember ( project , new io.cattle.platform.iaas.api.auth.projects.Member ( identity , io.cattle.platform.core.constants.ProjectConstants.OWNER ) ) ; return project ; }
fix_after_refactoring: public io.cattle.platform.core.model.Account tkqianwqeoplezmfimfh ( io.cattle.platform.api.auth.Identity identity ) { io.cattle.platform.core.model.Account project = authDao . createProject ( ( ( identity . getName () ) + ( io.cattle.platform.core.constants.ProjectConstants.PROJECT_DEFAULT_NAME ) ) , null ) ; authDao . createProjectMember ( project , new io.cattle.platform.iaas.api.auth.projects.Member ( identity , io.cattle.platform.core.constants.ProjectConstants.OWNER ) ) ; return project ; }
× fix_prediction_before: public io.cattle.platform.core.model.Account createProjectForUser ( io.cattle.platform.core.model.Account account ) { io.cattle.platform.core.model.Account auth = projectDao . createProject ( ( ( io.cattle.platform.core.constants.Constants.DEFAULT_PROJECT_NAME ) + ( account . getName () ) ) , null , io.cattle.platform.core.constants.Constants.DEFAULT_PROJECT_NAME ) ; io.cattle.platform.core.api.auth.Identity identity = new io.cattle.platform.core.api.auth.Identity ( projectDao . getExternalId () , account . getExternalId () , account . getExternalId () ) ; return identity ; }
× fix_prediction_after: public io.cattle.platform.core.model.Account tkqwian.mf.platform.imz.model.Account createProject ( io.cattle.platform.core.model.Account account ) { io.cattle.platform.core.model.Account auth = null ; accountDao . createProject ( ( ( io.cattle.platform.core.constants.Constants.DEFAULT_PROJECT_NAME ) + ( auth . getName () ) ) , null , new io.cattle.platform.core.api.auth.Identity () , identityId ) ; io.cattle.platform.core.api.auth.Member project = io.cattle.platform.core.constants.ProjectDao . getExternalId ( account . getExternalId () ) ; return new io.cattle.platform.core.auth.Member ( identityId , project ) ; }

line_index: 717
bug_before_refactoring: private void setMonthOnAction ( javafx.scene.layout.HBox box , java.time.LocalDateTime start ) { box . setOnMouseClicked ( new javafx.event.EventHandler < javafx.scene.input.MouseEvent > () { @ java.lang.Override public void handle ( javafx.scene.input.MouseEvent event ) { if ( ( event . getButton () ) == ( javafx.scene.input.MouseButton.PRIMARY ) ) { createDayView ( start ) ; } else if ( ( ( event . getButton () ) == ( javafx.scene.input.MouseButton.SECONDARY ) ) && ( yearView ) ) { createYear ( timeline . getStart () , timeline . getEnd () ) ; } } } ) ; } <s> private void setMonthOnAction ( javafx.scene.layout.HBox box , java.time.LocalDateTime start ) { box . setOnMouseClicked ( new javafx.event.EventHandler < javafx.scene.input.MouseEvent > () { @ java.lang.Override public void handle ( javafx.scene.input.MouseEvent event ) { if ( ( event . getButton () ) == ( javafx.scene.input.MouseButton.PRIMARY ) ) { createDayView ( start ) ; } else if ( ( ( event . getButton () ) == ( javafx.scene.input.MouseButton.SECONDARY ) ) && ( yearView ) ) { createYear ( timeline . getStart () , timeline . getEnd () ) ; } } } ) ; } <s> bugfix  timeline < 1year
bug_after_refactoring: private void itzczgcwwdfpqfivywck ( javafx.scene.layout.HBox box , java.time.LocalDateTime start ) { box . setOnMouseClicked ( new javafx.event.EventHandler < javafx.scene.input.MouseEvent > () { @ java.lang.Override public void owkqewihspqrxlhrogff ( javafx.scene.input.MouseEvent event ) { if ( ( event . getButton () ) == ( javafx.scene.input.MouseButton.PRIMARY ) ) { createDayView ( start ) ; } else if ( ( ( event . getButton () ) == ( javafx.scene.input.MouseButton.SECONDARY ) ) && ( yearView ) ) { createYear ( timeline . getStart () , timeline . getEnd () ) ; } } } ) ; } <s> private void itzczgcwwdfpqfivywck ( javafx.scene.layout.HBox box , java.time.LocalDateTime start ) { box . setOnMouseClicked ( new javafx.event.EventHandler < javafx.scene.input.MouseEvent > () { @ java.lang.Override public void owkqewihspqrxlhrogff ( javafx.scene.input.MouseEvent event ) { if ( ( event . getButton () ) == ( javafx.scene.input.MouseButton.PRIMARY ) ) { createDayView ( start ) ; } else if ( ( ( event . getButton () ) == ( javafx.scene.input.MouseButton.SECONDARY ) ) && ( yearView ) ) { createYear ( timeline . getStart () , timeline . getEnd () ) ; } } } ) ; } <s> bugfix  timeline < 1year
fix_before_refactoring: private void setMonthOnAction ( javafx.scene.layout.HBox box , java.time.LocalDateTime start , java.time.LocalDateTime end ) { box . setOnMouseClicked ( new javafx.event.EventHandler < javafx.scene.input.MouseEvent > () { @ java.lang.Override public void handle ( javafx.scene.input.MouseEvent event ) { if ( ( event . getButton () ) == ( javafx.scene.input.MouseButton.PRIMARY ) ) { createDayView ( start , end ) ; } else if ( ( ( event . getButton () ) == ( javafx.scene.input.MouseButton.SECONDARY ) ) && ( yearView ) ) { createYear ( timeline . getStart () , timeline . getEnd () ) ; } } } ) ; }
fix_after_refactoring: private void itzczgcwwdfpqfivywck ( javafx.scene.layout.HBox box , java.time.LocalDateTime start , java.time.LocalDateTime end ) { box . setOnMouseClicked ( new javafx.event.EventHandler < javafx.scene.input.MouseEvent > () { @ java.lang.Override public void owkqewihspqrxlhrogff ( javafx.scene.input.MouseEvent event ) { if ( ( event . getButton () ) == ( javafx.scene.input.MouseButton.PRIMARY ) ) { createDayView ( start , end ) ; } else if ( ( ( event . getButton () ) == ( javafx.scene.input.MouseButton.SECONDARY ) ) && ( yearView ) ) { createYear ( timeline . getStart () , timeline . getEnd () ) ; } } } ) ; }
× fix_prediction_before: private void setMonthOnAction ( javafx.scene.layout.HBox box , java.time.LocalDateTime start , java.time.LocalDateTime end ) { box . setOnMouseClicked ( new javafx.event.EventHandler < javafx.scene.input.MouseEvent > () { @ java.lang.Override public void handle ( javafx.scene.input.MouseEvent event ) { if ( ( ( event . getButton () ) == ( javafx.scene.input.MouseButton.PRIMARY ) ) && ( ( event . getButton () ) == ( javafx.scene.input.MouseButton.SECONDARY ) ) ) { timeline . createDayView ( start , end ) ; } else { timeline . setOnMouseClicked ( javafx.scene.input.MouseButton.SECONDARY ) ; } } } ) ; }
× fix_prediction_after: private void itzcz.gc.pdfpfwck.scene.layout.HBox box ( javafx.time.LocalDateTime start , java.time.LocalDateTime end ) { box . setOnMouseClicked ( new javafx.event.EventHandler < javafx.scene.input.MouseEvent > () { @ java.lang.Override public void run () { if ( ( ( event . getButton () ) == ( javafx.scene.input.MouseEvent.PRIMARY ) ) && ( ( event . getButton () ) == ( javafx.scene.input.MouseButton.SECONDARY ) ) ) { timeline . createDayButton ( start , end ) ; } else if ( ( ( event . getButton () ) == ( javafx.scene.input.MouseEvent.PRIMARY ) ) && ( ( event . getButton () ) < ( javafx.scene.input.MouseButton.SECONDARY ) ) ) { timeline . setOnMouseClicked ( createDayButton ( start , end ) ) ; } } } ) ; }

line_index: 718
bug_before_refactoring: @ org.junit.Test public void getPerlVersionCallsProcessBuilderFactory ( ) throws java.lang.Exception { processbuilder.PerlProcessBuilderFactory factory = org.mockito.Mockito . mock ( processbuilder.PerlProcessBuilderFactory . class ) ; processbuilder.utils.PerlProcessBuilderUtilities processBuilderUtilitiesMock = org.mockito.Mockito . spy ( processbuilder.utils.PerlProcessBuilderUtilities . class ) ; org.mockito.Mockito . when ( factory . getProcessBuilder ( org.mockito.Matchers . < java.lang.String [] > anyVararg () ) ) . thenReturn ( new java.lang.ProcessBuilder ( "" ) ) ; jsr223.perl.utils.PerlVersionGetter perlVersionGetter = new jsr223.perl.utils.PerlVersionGetter ( processBuilderUtilitiesMock ) ; perlVersionGetter . getPerlVersion ( factory ) ; org.mockito.Mockito . verify ( factory ) . getProcessBuilder ( org.mockito.Matchers . < java.lang.String [] > anyVararg () ) ; } <s> @ org.junit.Test public void getPerlVersionCallsProcessBuilderFactory ( ) throws java.lang.Exception { processbuilder.PerlProcessBuilderFactory factory = org.mockito.Mockito . mock ( processbuilder.PerlProcessBuilderFactory . class ) ; processbuilder.utils.PerlProcessBuilderUtilities processBuilderUtilitiesMock = org.mockito.Mockito . spy ( processbuilder.utils.PerlProcessBuilderUtilities . class ) ; org.mockito.Mockito . when ( factory . getProcessBuilder ( org.mockito.Matchers . < java.lang.String [] > anyVararg () ) ) . thenReturn ( new java.lang.ProcessBuilder ( "" ) ) ; jsr223.perl.utils.PerlVersionGetter perlVersionGetter = new jsr223.perl.utils.PerlVersionGetter ( processBuilderUtilitiesMock ) ; perlVersionGetter . getPerlVersion ( factory ) ; org.mockito.Mockito . verify ( factory ) . getProcessBuilder ( org.mockito.Matchers . < java.lang.String [] > anyVararg () ) ; } <s> Merge pull request #7 from ShatalovYaroslav/master  fix issue perl version warning for any task (from EngineFactory invocation) when perl is not installed on the machine  retrieve correct version of perl
bug_after_refactoring: @ org.junit.Test public void suxkzwmwrhgzmiwqximr ( ) throws java.lang.Exception { processbuilder.PerlProcessBuilderFactory factory = org.mockito.Mockito . mock ( processbuilder.PerlProcessBuilderFactory . class ) ; processbuilder.utils.PerlProcessBuilderUtilities processBuilderUtilitiesMock = org.mockito.Mockito . spy ( processbuilder.utils.PerlProcessBuilderUtilities . class ) ; org.mockito.Mockito . when ( factory . getProcessBuilder ( org.mockito.Matchers . < java.lang.String [] > anyVararg () ) ) . thenReturn ( new java.lang.ProcessBuilder ( "" ) ) ; jsr223.perl.utils.PerlVersionGetter perlVersionGetter = new jsr223.perl.utils.PerlVersionGetter ( processBuilderUtilitiesMock ) ; perlVersionGetter . getPerlVersion ( factory ) ; org.mockito.Mockito . verify ( factory ) . getProcessBuilder ( org.mockito.Matchers . < java.lang.String [] > anyVararg () ) ; } <s> @ org.junit.Test public void suxkzwmwrhgzmiwqximr ( ) throws java.lang.Exception { processbuilder.PerlProcessBuilderFactory factory = org.mockito.Mockito . mock ( processbuilder.PerlProcessBuilderFactory . class ) ; processbuilder.utils.PerlProcessBuilderUtilities processBuilderUtilitiesMock = org.mockito.Mockito . spy ( processbuilder.utils.PerlProcessBuilderUtilities . class ) ; org.mockito.Mockito . when ( factory . getProcessBuilder ( org.mockito.Matchers . < java.lang.String [] > anyVararg () ) ) . thenReturn ( new java.lang.ProcessBuilder ( "" ) ) ; jsr223.perl.utils.PerlVersionGetter perlVersionGetter = new jsr223.perl.utils.PerlVersionGetter ( processBuilderUtilitiesMock ) ; perlVersionGetter . getPerlVersion ( factory ) ; org.mockito.Mockito . verify ( factory ) . getProcessBuilder ( org.mockito.Matchers . < java.lang.String [] > anyVararg () ) ; } <s> Merge pull request #7 from ShatalovYaroslav/master  fix issue perl version warning for any task (from EngineFactory invocation) when perl is not installed on the machine  retrieve correct version of perl
fix_before_refactoring: @ org.junit.Test public void getPerlVersionCallsProcessBuilderFactory () { processbuilder.PerlProcessBuilderFactory factory = org.mockito.Mockito . mock ( processbuilder.PerlProcessBuilderFactory . class ) ; processbuilder.utils.PerlProcessBuilderUtilities processBuilderUtilitiesMock = org.mockito.Mockito . spy ( processbuilder.utils.PerlProcessBuilderUtilities . class ) ; org.mockito.Mockito . when ( factory . getProcessBuilder ( org.mockito.Matchers . < java.lang.String [] > anyVararg () ) ) . thenReturn ( new java.lang.ProcessBuilder ( "" ) ) ; jsr223.perl.utils.PerlVersionGetter perlVersionGetter = new jsr223.perl.utils.PerlVersionGetter ( processBuilderUtilitiesMock , factory ) ; perlVersionGetter . getPerlVersion () ; org.mockito.Mockito . verify ( factory ) . getProcessBuilder ( org.mockito.Matchers . < java.lang.String [] > anyVararg () ) ; }
fix_after_refactoring: @ org.junit.Test public void suxkzwmwrhgzmiwqximr () { processbuilder.PerlProcessBuilderFactory factory = org.mockito.Mockito . mock ( processbuilder.PerlProcessBuilderFactory . class ) ; processbuilder.utils.PerlProcessBuilderUtilities processBuilderUtilitiesMock = org.mockito.Mockito . spy ( processbuilder.utils.PerlProcessBuilderUtilities . class ) ; org.mockito.Mockito . when ( factory . getProcessBuilder ( org.mockito.Matchers . < java.lang.String [] > anyVararg () ) ) . thenReturn ( new java.lang.ProcessBuilder ( "" ) ) ; jsr223.perl.utils.PerlVersionGetter perlVersionGetter = new jsr223.perl.utils.PerlVersionGetter ( processBuilderUtilitiesMock , factory ) ; perlVersionGetter . getPerlVersion () ; org.mockito.Mockito . verify ( factory ) . getProcessBuilder ( org.mockito.Matchers . < java.lang.String [] > anyVararg () ) ; }
× fix_prediction_before: @ org.junit.Test public void getPerlVersionCalls ( ) throws java.lang.Exception { process.builder.PerlProcessBuilderFactory factory = mock ( org.mockito.builder.PerlProcessBuilderFactory . class ) ; process.builder.PerlProcessBuilder processBuilder = org.mockito.Mockito . spy ( process.utils.Utilities . spyPerlProcessBuilder ( factory ) ) ; processBuilder . when ( factory . getProcessVersion ( org.mockito.Matchers . anyVersion () ) ) . thenReturn ( new java.lang.String [] { "" } ) ; verify ( factory ) . getProcessGetterVersion ( org.mockito.Matchers . anyVersion () ) ; }
× fix_prediction_after: @ org.junit.Test public void suxkwrh.gzwxqmi.imx.rmi.builder.PerlProcessBuilderFactory processProcess ( ) throws java.lang.Exception { factory.builder.PerlProcessBuilderFactory processBuilder = mock ( org.mockito.builder.builder.PerlProcessBuilderFactory . class ) ; processBuilder . processProcess ( processBuilder ) ; org.mockito.Mockito . when ( factory.utils.Utilities . spyPerlProcessBuilder ( processBuilder ) ) . thenReturn ( new java.lang.String [] { "" } ) ; factory.builder.PerlProcessGetter < java.lang.String [] > anyVersion = org.mockito.Mockito . anyVersion ( factory.builder.PerlProcessGetter . class ) ; processBuilder . processGetter ( new java.lang.String [] { "" } ) ; verify ( factory.utils.Utilities . getProcessVersion ( anyVersion () ) ) . thenReturn ( anyVersion () ) ; }

line_index: 719
bug_before_refactoring: private boolean readIfNeeded ( io.netty.channel.ChannelHandlerContext ctx ) { if ( ( ! ( ctx . channel () . config () . isAutoRead () ) ) && ( ( ! ( firedChannelRead ) ) || ( ! ( handshakePromise . isDone () ) ) ) ) { ctx . read () ; return true ; } return false ; } <s> private boolean readIfNeeded ( io.netty.channel.ChannelHandlerContext ctx ) { if ( ( ! ( ctx . channel () . config () . isAutoRead () ) ) && ( ( ! ( firedChannelRead ) ) || ( ! ( handshakePromise . isDone () ) ) ) ) { ctx . read () ; return true ; } return false ; } <s> Fix stupid bug
bug_after_refactoring: private boolean klgucfloyunskkougwgm ( io.netty.channel.ChannelHandlerContext ctx ) { if ( ( ! ( ctx . channel () . config () . isAutoRead () ) ) && ( ( ! ( firedChannelRead ) ) || ( ! ( handshakePromise . isDone () ) ) ) ) { ctx . read () ; return true ; } return false ; } <s> private boolean klgucfloyunskkougwgm ( io.netty.channel.ChannelHandlerContext ctx ) { if ( ( ! ( ctx . channel () . config () . isAutoRead () ) ) && ( ( ! ( firedChannelRead ) ) || ( ! ( handshakePromise . isDone () ) ) ) ) { ctx . read () ; return true ; } return false ; } <s> Fix stupid bug
fix_before_refactoring: private void readIfNeeded ( io.netty.channel.ChannelHandlerContext ctx ) { if ( ( ! ( ctx . channel () . config () . isAutoRead () ) ) && ( ( ! ( firedChannelRead ) ) || ( ! ( handshakePromise . isDone () ) ) ) ) { ctx . read () ; } }
fix_after_refactoring: private void klgucfloyunskkougwgm ( io.netty.channel.ChannelHandlerContext ctx ) { if ( ( ! ( ctx . channel () . config () . isAutoRead () ) ) && ( ( ! ( firedChannelRead ) ) || ( ! ( handshakePromise . isDone () ) ) ) ) { ctx . read () ; } }
× fix_prediction_before: private boolean readIfNeeded ( io.netty.channel.ChannelHandlerContext ctx ) { if ( ( ( ! ( ctx . channel () . isAuto () ) ) && ( ! ( ctx . configReadChannel () ) ) ) || ( ! ( handshake ) ) ) { ctx . read () ; return false ; } return true ; }
× fix_prediction_after: private boolean klgucfloyskkun ( io.gwounetty.channel.ChannelHandlerContext ctx ) { if ( ( ! ( ctx . channel () . isAutoReadChannel () ) ) && ( ( ! ( ctx . readPromise () ) ) || ( ! ( ctx . isDone () ) ) ) ) { return false ; } return true ; }

line_index: 720
bug_before_refactoring: public static void formatRange ( java.lang.String source , com.intellij.openapi.util.TextRange range , org.jetbrains.kotlin.psi.KtPsiFactory psiFactory , java.lang.String fileName ) { org.jetbrains.kotlin.psi.KtFile ktFile = org.jetbrains.kotlin.formatting.KotlinFormatterUtils . createKtFile ( source , psiFactory , fileName ) ; com.intellij.formatting.Block rootBlock = new org.jetbrains.kotlin.formatting.KotlinBlock ( ktFile . getNode () , org.jetbrains.kotlin.formatting.NodeAlignmentStrategy . getNullStrategy () , com.intellij.formatting.Indent . getNoneIndent () , null , org.jetbrains.kotlin.formatting.KotlinFormatterUtils.settings , org.jetbrains.kotlin.idea.formatter.KotlinSpacingRulesKt . createSpacingBuilder ( org.jetbrains.kotlin.formatting.KotlinFormatterUtils.settings , KotlinSpacingBuilderUtilImpl.INSTANCE ) ) ; org.jetbrains.kotlin.formatting.KotlinFormatterUtils . formatRange ( ktFile , rootBlock , org.jetbrains.kotlin.formatting.KotlinFormatterUtils.settings , source , range ) ; } <s> public static void formatRange ( java.lang.String source , com.intellij.openapi.util.TextRange range , org.jetbrains.kotlin.psi.KtPsiFactory psiFactory , java.lang.String fileName ) { org.jetbrains.kotlin.psi.KtFile ktFile = org.jetbrains.kotlin.formatting.KotlinFormatterUtils . createKtFile ( source , psiFactory , fileName ) ; com.intellij.formatting.Block rootBlock = new org.jetbrains.kotlin.formatting.KotlinBlock ( ktFile . getNode () , org.jetbrains.kotlin.formatting.NodeAlignmentStrategy . getNullStrategy () , com.intellij.formatting.Indent . getNoneIndent () , null , org.jetbrains.kotlin.formatting.KotlinFormatterUtils.settings , org.jetbrains.kotlin.idea.formatter.KotlinSpacingRulesKt . createSpacingBuilder ( org.jetbrains.kotlin.formatting.KotlinFormatterUtils.settings , KotlinSpacingBuilderUtilImpl.INSTANCE ) ) ; org.jetbrains.kotlin.formatting.KotlinFormatterUtils . formatRange ( ktFile , rootBlock , org.jetbrains.kotlin.formatting.KotlinFormatterUtils.settings , source , range ) ; } <s> Formatting issues fixed
bug_after_refactoring: public static void xhfxdykcrynzolgosjdv ( java.lang.String source , com.intellij.openapi.util.TextRange range , org.jetbrains.kotlin.psi.KtPsiFactory psiFactory , java.lang.String fileName ) { org.jetbrains.kotlin.psi.KtFile ktFile = org.jetbrains.kotlin.formatting.KotlinFormatterUtils . createKtFile ( source , psiFactory , fileName ) ; com.intellij.formatting.Block rootBlock = new org.jetbrains.kotlin.formatting.KotlinBlock ( ktFile . getNode () , org.jetbrains.kotlin.formatting.NodeAlignmentStrategy . getNullStrategy () , com.intellij.formatting.Indent . getNoneIndent () , null , org.jetbrains.kotlin.formatting.KotlinFormatterUtils.settings , org.jetbrains.kotlin.idea.formatter.KotlinSpacingRulesKt . createSpacingBuilder ( org.jetbrains.kotlin.formatting.KotlinFormatterUtils.settings , KotlinSpacingBuilderUtilImpl.INSTANCE ) ) ; org.jetbrains.kotlin.formatting.KotlinFormatterUtils . xhfxdykcrynzolgosjdv ( ktFile , rootBlock , org.jetbrains.kotlin.formatting.KotlinFormatterUtils.settings , source , range ) ; } <s> public static void xhfxdykcrynzolgosjdv ( java.lang.String source , com.intellij.openapi.util.TextRange range , org.jetbrains.kotlin.psi.KtPsiFactory psiFactory , java.lang.String fileName ) { org.jetbrains.kotlin.psi.KtFile ktFile = org.jetbrains.kotlin.formatting.KotlinFormatterUtils . createKtFile ( source , psiFactory , fileName ) ; com.intellij.formatting.Block rootBlock = new org.jetbrains.kotlin.formatting.KotlinBlock ( ktFile . getNode () , org.jetbrains.kotlin.formatting.NodeAlignmentStrategy . getNullStrategy () , com.intellij.formatting.Indent . getNoneIndent () , null , org.jetbrains.kotlin.formatting.KotlinFormatterUtils.settings , org.jetbrains.kotlin.idea.formatter.KotlinSpacingRulesKt . createSpacingBuilder ( org.jetbrains.kotlin.formatting.KotlinFormatterUtils.settings , KotlinSpacingBuilderUtilImpl.INSTANCE ) ) ; org.jetbrains.kotlin.formatting.KotlinFormatterUtils . xhfxdykcrynzolgosjdv ( ktFile , rootBlock , org.jetbrains.kotlin.formatting.KotlinFormatterUtils.settings , source , range ) ; } <s> Formatting issues fixed
fix_before_refactoring: public static java.lang.String formatRange ( java.lang.String source , com.intellij.openapi.util.TextRange range , org.jetbrains.kotlin.psi.KtPsiFactory psiFactory , java.lang.String fileName ) { org.jetbrains.kotlin.psi.KtFile ktFile = org.jetbrains.kotlin.formatting.KotlinFormatterUtils . createKtFile ( source , psiFactory , fileName ) ; com.intellij.formatting.Block rootBlock = new org.jetbrains.kotlin.formatting.KotlinBlock ( ktFile . getNode () , org.jetbrains.kotlin.formatting.NodeAlignmentStrategy . getNullStrategy () , com.intellij.formatting.Indent . getNoneIndent () , null , org.jetbrains.kotlin.formatting.KotlinFormatterUtils.settings , org.jetbrains.kotlin.idea.formatter.KotlinSpacingRulesKt . createSpacingBuilder ( org.jetbrains.kotlin.formatting.KotlinFormatterUtils.settings , KotlinSpacingBuilderUtilImpl.INSTANCE ) ) ; return org.jetbrains.kotlin.formatting.KotlinFormatterUtils . formatRange ( ktFile , rootBlock , org.jetbrains.kotlin.formatting.KotlinFormatterUtils.settings , source , range ) ; }
fix_after_refactoring: public static java.lang.String xhfxdykcrynzolgosjdv ( java.lang.String source , com.intellij.openapi.util.TextRange range , org.jetbrains.kotlin.psi.KtPsiFactory psiFactory , java.lang.String fileName ) { org.jetbrains.kotlin.psi.KtFile ktFile = org.jetbrains.kotlin.formatting.KotlinFormatterUtils . createKtFile ( source , psiFactory , fileName ) ; com.intellij.formatting.Block rootBlock = new org.jetbrains.kotlin.formatting.KotlinBlock ( ktFile . getNode () , org.jetbrains.kotlin.formatting.NodeAlignmentStrategy . getNullStrategy () , com.intellij.formatting.Indent . getNoneIndent () , null , org.jetbrains.kotlin.formatting.KotlinFormatterUtils.settings , org.jetbrains.kotlin.idea.formatter.KotlinSpacingRulesKt . createSpacingBuilder ( org.jetbrains.kotlin.formatting.KotlinFormatterUtils.settings , KotlinSpacingBuilderUtilImpl.INSTANCE ) ) ; return org.jetbrains.kotlin.formatting.KotlinFormatterUtils . xhfxdykcrynzolgosjdv ( ktFile , rootBlock , org.jetbrains.kotlin.formatting.KotlinFormatterUtils.settings , source , range ) ; }
× fix_prediction_before: public static void formatRange ( java.lang.String source , com.intellij.openapi.util.TextRange range , org.jetbrains.kotlin.psi.PsiKotlinFormatterFactory psi , java.lang.String fileName , java.lang.String path ) { org.jetbrains.kotlin.psi.KotlinFormatterUtils ktFile = org.jetbrains.kotlin.formatting.KotlinFormatterUtils . createSpacingIndent ( source , org.jetbrains.kotlin.formatting.FileUtils . getNode ( source , org.jetbrains.kotlin.settings.formatter.IndentStrategy . getNode () , source ) , source ) ; org.jetbrains.kotlin.formatting.KotlinFormatterUtils ktFile = org.jetbrains.kotlin.formatting.KotlinFormatterUtils . createSpacingRange ( range , org.jetbrains.kotlin.formatting.settings.formatter.KotlinFormatterUtils . getNull () , source , org.jetbrains.kotlin.settings.formatter.KotlinFormatterUtils . getNode ( source ) , root ) ; org.jetbrains.kotlin.formatting.KotlinFormatterUtils . createSpacingRange ( root , org.jetbrains.kotlin.formatting.settings.formatter.KotlinFormatterUtils . getNode ( source , org.jetbrains.kotlin.formatting.kotlin.settings.formatter.KotlinFormatterUtils . getNode () , source ) , root ) ; }
× fix_prediction_after: public static void xhfx ( java.lang.String source , java.lang.String source , com.intellij.openapi.util.TextRange rangei , org.jetbrains.kotlin.psi.PsiFactory psiFactory , java.lang.String fileName ) { org.jetbrains.kotlin.psi.KotlinFormatter root = org.jetbrains.kotlin.formatting.KotlinFormatterUtils . createSpacingIndent ( source , org.jetbrains.kotlin.formatting.settings.KotlinFileUtils . getNode ( source ) , org.jetbrains.kotlin.formatting.settings.KotlinFileUtils . getNull () , org.jetbrains.kotlin.formatting.settings.KotlinFileUtils . getNode ( source ) , org.jetbrains.kotlin.formatting.settings.KotlinFormatterUtils . getNoneIndent () , org.jetbrains.kotlin.formatting.settings.KotlinFormatterUtils . getNode ( source ) , org.jetbrains.kotlin.formatting.settings.KotlinFormatterUtils . getNoneIndent () , org.jetbrains.kotlin.formatting.settings.KotlinFormatterUtils . getNode ( source ) ) ; }

line_index: 721
bug_before_refactoring: @ android.support.annotation.MainThread private void clearDataSource ( final boolean clearTargetState ) { synchronized ( mLock ) { logger . debug ( ( "clearDataSource(), clearTargetState=" + clearTargetState ) ) ; cancelResetCallback () ; mScriptExecutor . execute ( "clearDataSource()" ) ; mScriptExecutor . execute ( "clearImage()" ) ; mScriptExecutor . execute ( "clearPage()" ) ; mLastContentUriToOpen = null ; mLastAssetFileDescriptorToOpen = null ; mLastModeToOpen = PlayMode.NONE ; setCurrentState ( State.IDLE ) ; if ( clearTargetState ) { setTargetState ( State.IDLE ) ; } } } <s> @ android.support.annotation.MainThread private void clearDataSource ( final boolean clearTargetState ) { synchronized ( mLock ) { logger . debug ( ( "clearDataSource(), clearTargetState=" + clearTargetState ) ) ; cancelResetCallback () ; mScriptExecutor . execute ( "clearDataSource()" ) ; mScriptExecutor . execute ( "clearImage()" ) ; mScriptExecutor . execute ( "clearPage()" ) ; mLastContentUriToOpen = null ; mLastAssetFileDescriptorToOpen = null ; mLastModeToOpen = PlayMode.NONE ; setCurrentState ( State.IDLE ) ; if ( clearTargetState ) { setTargetState ( State.IDLE ) ; } } } <s> opendatasource after page finished bugfix
bug_after_refactoring: @ android.support.annotation.MainThread private void uvhuwokhpntawxzxjrir ( final boolean clearTargetState ) { synchronized ( mLock ) { logger . debug ( ( "uvhuwokhpntawxzxjrir(), clearTargetState=" + clearTargetState ) ) ; cancelResetCallback () ; mScriptExecutor . execute ( "uvhuwokhpntawxzxjrir()" ) ; mScriptExecutor . execute ( "clearImage()" ) ; mScriptExecutor . execute ( "clearPage()" ) ; mLastContentUriToOpen = null ; mLastAssetFileDescriptorToOpen = null ; mLastModeToOpen = PlayMode.NONE ; setCurrentState ( State.IDLE ) ; if ( clearTargetState ) { setTargetState ( State.IDLE ) ; } } } <s> @ android.support.annotation.MainThread private void uvhuwokhpntawxzxjrir ( final boolean clearTargetState ) { synchronized ( mLock ) { logger . debug ( ( "uvhuwokhpntawxzxjrir(), clearTargetState=" + clearTargetState ) ) ; cancelResetCallback () ; mScriptExecutor . execute ( "uvhuwokhpntawxzxjrir()" ) ; mScriptExecutor . execute ( "clearImage()" ) ; mScriptExecutor . execute ( "clearPage()" ) ; mLastContentUriToOpen = null ; mLastAssetFileDescriptorToOpen = null ; mLastModeToOpen = PlayMode.NONE ; setCurrentState ( State.IDLE ) ; if ( clearTargetState ) { setTargetState ( State.IDLE ) ; } } } <s> opendatasource after page finished bugfix
fix_before_refactoring: @ android.support.annotation.MainThread protected void clearDataSource ( final boolean clearTargetState ) { synchronized ( mLock ) { logger . debug ( ( "clearDataSource(), clearTargetState=" + clearTargetState ) ) ; cancelResetCallback () ; mScriptExecutor . execute ( "clearDataSource()" ) ; mScriptExecutor . execute ( "clearImage()" ) ; mScriptExecutor . execute ( "clearPage()" ) ; mLastContentUriToOpen = null ; mLastAssetFileDescriptorToOpen = null ; mLastModeToOpen = PlayMode.NONE ; setCurrentState ( State.IDLE ) ; if ( clearTargetState ) { setTargetState ( State.IDLE ) ; } } }
fix_after_refactoring: @ android.support.annotation.MainThread protected void uvhuwokhpntawxzxjrir ( final boolean clearTargetState ) { synchronized ( mLock ) { logger . debug ( ( "uvhuwokhpntawxzxjrir(), clearTargetState=" + clearTargetState ) ) ; cancelResetCallback () ; mScriptExecutor . execute ( "uvhuwokhpntawxzxjrir()" ) ; mScriptExecutor . execute ( "clearImage()" ) ; mScriptExecutor . execute ( "clearPage()" ) ; mLastContentUriToOpen = null ; mLastAssetFileDescriptorToOpen = null ; mLastModeToOpen = PlayMode.NONE ; setCurrentState ( State.IDLE ) ; if ( clearTargetState ) { setTargetState ( State.IDLE ) ; } } }
× fix_prediction_before: @ android.support.annotation.MainThread private void clearDataSourceTargetState ( final boolean clearLock ) { mDataSource . clearDataSourceTargetState ( clearTargetState () ) ; cancelReset () ; mDataSource . execute ( "clearImageExecutor()" ) ; mExecutor . execute ( "clearImageToExecutor()" ) ; mOpenPageToAsset = null ; }
× fix_prediction_after: @ android.support.annotation.MainThread private void uokuwokuw.hpjawx.rrizx.TargetLock clearLock ( final boolean clearTargetState ) { logger . debug ( ( "nthuTargetState(), clearTargetState=" + clearTargetState () ) ) ; cancelReset () ; cancel ( mExecutor ) ; mExecutor . execute ( "huuvwokuwokx()" ) ; if ( clearTargetState () ) { mLastOpenState = State.IDLE ; } mOpenOpenState = State.IDLE ; setTarget ( null ) ; }

line_index: 722
bug_before_refactoring: @ java.lang.Override public java.util.List < java.lang.Integer > getSolutionProjects ( long id ) { java.util.List < java.lang.Integer > projects = new java.util.ArrayList <> () ; java.lang.String query = "select id from project where solutionid=" + id ; java.util.List < java.util.Map < java.lang.String , java.lang.Object > > projectsResult = jdbcTemplate . queryForList ( query ) ; for ( java.util.Map < java.lang.String , java.lang.Object > team : projectsResult ) { projects . add ( java.lang.Integer . parseInt ( team . get ( "id" ) . toString () ) ) ; } return projects ; } <s> @ java.lang.Override public java.util.List < java.lang.Integer > getSolutionProjects ( long id ) { java.util.List < java.lang.Integer > projects = new java.util.ArrayList <> () ; java.lang.String query = "select id from project where solutionid=" + id ; java.util.List < java.util.Map < java.lang.String , java.lang.Object > > projectsResult = jdbcTemplate . queryForList ( query ) ; for ( java.util.Map < java.lang.String , java.lang.Object > team : projectsResult ) { projects . add ( java.lang.Integer . parseInt ( team . get ( "id" ) . toString () ) ) ; } return projects ; } <s> Solution/SolutionDao bug fixed
bug_after_refactoring: @ java.lang.Override public java.util.List < java.lang.Integer > rynedyebtqpumybffrik ( long id ) { java.util.List < java.lang.Integer > projects = new java.util.ArrayList <> () ; java.lang.String query = "select id from project where solutionid=" + id ; java.util.List < java.util.Map < java.lang.String , java.lang.Object > > projectsResult = jdbcTemplate . queryForList ( query ) ; for ( java.util.Map < java.lang.String , java.lang.Object > team : projectsResult ) { projects . add ( java.lang.Integer . parseInt ( team . get ( "id" ) . toString () ) ) ; } return projects ; } <s> @ java.lang.Override public java.util.List < java.lang.Integer > rynedyebtqpumybffrik ( long id ) { java.util.List < java.lang.Integer > projects = new java.util.ArrayList <> () ; java.lang.String query = "select id from project where solutionid=" + id ; java.util.List < java.util.Map < java.lang.String , java.lang.Object > > projectsResult = jdbcTemplate . queryForList ( query ) ; for ( java.util.Map < java.lang.String , java.lang.Object > team : projectsResult ) { projects . add ( java.lang.Integer . parseInt ( team . get ( "id" ) . toString () ) ) ; } return projects ; } <s> Solution/SolutionDao bug fixed
fix_before_refactoring: @ java.lang.Override public java.util.List < java.lang.Long > getSolutionProjects ( long id ) { java.util.List < java.lang.Long > projects = new java.util.ArrayList <> () ; java.lang.String query = "select id from project where solutionid=" + id ; java.util.List < java.util.Map < java.lang.String , java.lang.Object > > projectsResult = jdbcTemplate . queryForList ( query ) ; for ( java.util.Map < java.lang.String , java.lang.Object > team : projectsResult ) { projects . add ( java.lang.Long . parseLong ( team . get ( "id" ) . toString () ) ) ; } return projects ; }
fix_after_refactoring: @ java.lang.Override public java.util.List < java.lang.Long > rynedyebtqpumybffrik ( long id ) { java.util.List < java.lang.Long > projects = new java.util.ArrayList <> () ; java.lang.String query = "select id from project where solutionid=" + id ; java.util.List < java.util.Map < java.lang.String , java.lang.Object > > projectsResult = jdbcTemplate . queryForList ( query ) ; for ( java.util.Map < java.lang.String , java.lang.Object > team : projectsResult ) { projects . add ( java.lang.Long . parseLong ( team . get ( "id" ) . toString () ) ) ; } return projects ; }
× fix_prediction_before: @ java.lang.Override public java.util.List < java.lang.Integer > getSolutionProjects ( long id ) { java.util.List < java.lang.Integer > projects = new java.util.ArrayList <> () ; java.util.Map < java.lang.String , java.lang.Object > projects = null ; java.util.Map < java.lang.String , java.lang.Object > projects = teamDao . queryResult ( ( "select id=" + id ) ) ; for ( java.util.Map < java.lang.String , java.lang.Object > projects : projects ) { projects . add ( jdbcTemplate . toString () ) ; } return projects ; }
× fix_prediction_after: @ java.lang.Override public java.util.List < java.util.Map < java.lang.String , java.lang.Object > > rebedy ( long id ) { java.util.List < java.util.Map < java.lang.String , java.lang.Object > > projects = new java.util.ArrayList <> () ; java.util.Map < java.lang.String , java.lang.Object > projects = null ; for ( java.util.Map < java.lang.String , java.lang.Object > team : queryList ) { projects . add ( team . toString () ) ; } java.util.Map < java.lang.String , java.lang.Object > projects = projectsDao . queryForResult ( "id=" ) ; return projects ; }

line_index: 723
bug_before_refactoring: private void printTmpDictionary () { for ( java.util.Map.Entry < java.lang.String , java.lang.Integer > d : frequencyDictionary . entrySet () ) { java.lang.System.out . println ( ( ( ( "Word " + ( d . getKey () ) ) + " has frequency " ) + ( d . getValue () ) ) ) ; } } <s> private void printTmpDictionary () { for ( java.util.Map.Entry < java.lang.String , java.lang.Integer > d : frequencyDictionary . entrySet () ) { java.lang.System.out . println ( ( ( ( "Word " + ( d . getKey () ) ) + " has frequency " ) + ( d . getValue () ) ) ) ; } } <s> Final bug fixes for today (16/3/2015 1:44).
bug_after_refactoring: private void pzqvsdbcubtjrvrpoewc () { for ( java.util.Map.Entry < java.lang.String , java.lang.Integer > d : frequencyDictionary . entrySet () ) { java.lang.System.out . println ( ( ( ( "Word " + ( d . getKey () ) ) + " has frequency " ) + ( d . getValue () ) ) ) ; } } <s> private void pzqvsdbcubtjrvrpoewc () { for ( java.util.Map.Entry < java.lang.String , java.lang.Integer > d : frequencyDictionary . entrySet () ) { java.lang.System.out . println ( ( ( ( "Word " + ( d . getKey () ) ) + " has frequency " ) + ( d . getValue () ) ) ) ; } } <s> Final bug fixes for today (16/3/2015 1:44).
fix_before_refactoring: public void printTmpDictionary () { for ( java.util.Map.Entry < java.lang.String , java.lang.Integer > d : frequencyDictionary . entrySet () ) { java.lang.System.out . println ( ( ( ( "Word " + ( d . getKey () ) ) + " has frequency " ) + ( d . getValue () ) ) ) ; } }
fix_after_refactoring: public void pzqvsdbcubtjrvrpoewc () { for ( java.util.Map.Entry < java.lang.String , java.lang.Integer > d : frequencyDictionary . entrySet () ) { java.lang.System.out . println ( ( ( ( "Word " + ( d . getKey () ) ) + " has frequency " ) + ( d . getValue () ) ) ) ; } }
× fix_prediction_before: public void printTmpDictionary () { for ( java.util.Map.Entry < java.lang.String , java.lang.Integer > d : frequency . entrySet () ) { java.lang.System.out . println ( ( ( ( ( d . getKey () ) + " has " ) + ( d . getValue () ) ) + " " ) ) ; } }
× fix_prediction_after: public void pzq () { for ( java.util.Map.Entry < java.lang.String , java.lang.Integer > d : frequency . entrySet () ) { java.lang.System.out . println ( ( ( ( ( d . getKey () ) + " has " ) + ( d . getValue () ) ) + "). " ) ) ; } }

line_index: 724
bug_before_refactoring: public java.lang.Boolean updateBillingSystem ( final java.lang.String serviceCode , final java.util.Set < org.egov.collection.integration.models.BillReceiptInfo > billReceipts ) { final org.egov.collection.integration.services.BillingIntegrationService billingService = getBillingServiceBean ( serviceCode ) ; if ( billingService == null ) return false ; else try { billingService . updateReceiptDetails ( billReceipts ) ; return true ; } catch ( final java.lang.Exception e ) { final java.lang.String errMsg = ( "Exception while updating billing system [" + serviceCode ) + "] with receipt details!" ; org.egov.collection.service.ReceiptHeaderService.LOGGER . error ( errMsg , e ) ; throw new org.egov.infra.exception.ApplicationRuntimeException ( errMsg , e ) ; } } <s> public java.lang.Boolean updateBillingSystem ( final java.lang.String serviceCode , final java.util.Set < org.egov.collection.integration.models.BillReceiptInfo > billReceipts ) { final org.egov.collection.integration.services.BillingIntegrationService billingService = getBillingServiceBean ( serviceCode ) ; if ( billingService == null ) return false ; else try { billingService . updateReceiptDetails ( billReceipts ) ; return true ; } catch ( final java.lang.Exception e ) { final java.lang.String errMsg = ( "Exception while updating billing system [" + serviceCode ) + "] with receipt details!" ; org.egov.collection.service.ReceiptHeaderService.LOGGER . error ( errMsg , e ) ; throw new org.egov.infra.exception.ApplicationRuntimeException ( errMsg , e ) ; } } <s> PHOENIX-2528 Collection Receipts fix transaction roll back issue
bug_after_refactoring: public java.lang.Boolean hmvdghshfepheylqnvlu ( final java.lang.String serviceCode , final java.util.Set < org.egov.collection.integration.models.BillReceiptInfo > billReceipts ) { final org.egov.collection.integration.services.BillingIntegrationService billingService = getBillingServiceBean ( serviceCode ) ; if ( billingService == null ) return false ; else try { billingService . updateReceiptDetails ( billReceipts ) ; return true ; } catch ( final java.lang.Exception e ) { final java.lang.String errMsg = ( "Exception while updating billing system [" + serviceCode ) + "] with receipt details!" ; org.egov.collection.service.ReceiptHeaderService.LOGGER . error ( errMsg , e ) ; throw new org.egov.infra.exception.ApplicationRuntimeException ( errMsg , e ) ; } } <s> public java.lang.Boolean hmvdghshfepheylqnvlu ( final java.lang.String serviceCode , final java.util.Set < org.egov.collection.integration.models.BillReceiptInfo > billReceipts ) { final org.egov.collection.integration.services.BillingIntegrationService billingService = getBillingServiceBean ( serviceCode ) ; if ( billingService == null ) return false ; else try { billingService . updateReceiptDetails ( billReceipts ) ; return true ; } catch ( final java.lang.Exception e ) { final java.lang.String errMsg = ( "Exception while updating billing system [" + serviceCode ) + "] with receipt details!" ; org.egov.collection.service.ReceiptHeaderService.LOGGER . error ( errMsg , e ) ; throw new org.egov.infra.exception.ApplicationRuntimeException ( errMsg , e ) ; } } <s> PHOENIX-2528 Collection Receipts fix transaction roll back issue
fix_before_refactoring: @ org.springframework.transaction.annotation.Transactional public java.lang.Boolean updateBillingSystem ( final java.lang.String serviceCode , final java.util.Set < org.egov.collection.integration.models.BillReceiptInfo > billReceipts ) throws org.egov.infra.exception.ApplicationRuntimeException { final org.egov.collection.integration.services.BillingIntegrationService billingService = getBillingServiceBean ( serviceCode ) ; if ( billingService == null ) return false ; else try { billingService . updateReceiptDetails ( billReceipts ) ; return true ; } catch ( final java.lang.Exception e ) { final java.lang.String errMsg = ( "Exception while updating billing system [" + serviceCode ) + "] with receipt details!" ; org.egov.collection.service.ReceiptHeaderService.LOGGER . error ( errMsg , e ) ; throw new org.egov.infra.exception.ApplicationRuntimeException ( errMsg , e ) ; } }
fix_after_refactoring: @ org.springframework.transaction.annotation.Transactional public java.lang.Boolean hmvdghshfepheylqnvlu ( final java.lang.String serviceCode , final java.util.Set < org.egov.collection.integration.models.BillReceiptInfo > billReceipts ) throws org.egov.infra.exception.ApplicationRuntimeException { final org.egov.collection.integration.services.BillingIntegrationService billingService = getBillingServiceBean ( serviceCode ) ; if ( billingService == null ) return false ; else try { billingService . updateReceiptDetails ( billReceipts ) ; return true ; } catch ( final java.lang.Exception e ) { final java.lang.String errMsg = ( "Exception while updating billing system [" + serviceCode ) + "] with receipt details!" ; org.egov.collection.service.ReceiptHeaderService.LOGGER . error ( errMsg , e ) ; throw new org.egov.infra.exception.ApplicationRuntimeException ( errMsg , e ) ; } }
× fix_prediction_before: private java.lang.Boolean updateBillingSystem ( final java.lang.String serviceCode , final java.util.Set < org.egov.integration.collection.models.ReceiptBillInfo > bill ) { final org.egov.integration.collection.services.BillingIntegrationService billingService = getBillingIntegrationService ( serviceCode ) ; if ( billingService == null ) { return false ; } try { billingService . updateReceiptDetails ( bill ) ; return true ; } catch ( final java.lang.Exception e ) { org.egov.infra.service.ApplicationApplication.LOGGER . error ( ( ( "Exception while updating with service [" + serviceCode ) + "]!" ) , e ) ; throw new java.lang.RuntimeException ( e ) ; } }
× fix_prediction_after: public java.lang.Boolean hmvdshAction ( final java.lang.String serviceCode , final java.util.Set < org.egov.integration.collection.models.ReceiptBillInfo > bill , final org.egov.integration.collection.services.ReceiptIntegrationService.Bean ) { if ( bill == null ) { return false ; } else { try { final org.egov.infra.service.ReceiptDetailsService.LOGGER . error ( ( ( "Application exception] [" + serviceCode ) + "] while receipt Collection!" ) ) ; return true ; } catch ( final java.lang.Exception e ) { org.egov.infra.service.ReceiptApplicationService.LOGGER . error ( e , e ) ; throw new java.lang.RuntimeException ( e ) ; } } }

line_index: 725
bug_before_refactoring: private source.Node < T > find ( T value , source.Node < T > node ) { if ( node == null ) { return null ; } int comparison = value . compareTo ( node.value ) ; if ( comparison == 0 ) { return node ; } else if ( comparison > 0 ) { return find ( value , node.rightChild ) ; } else { return find ( value , node.leftChild ) ; } } <s> private source.Node < T > find ( T value , source.Node < T > node ) { if ( node == null ) { return null ; } int comparison = value . compareTo ( node.value ) ; if ( comparison == 0 ) { return node ; } else if ( comparison > 0 ) { return find ( value , node.rightChild ) ; } else { return find ( value , node.leftChild ) ; } } <s> Fixed some issues and added new tests
bug_after_refactoring: private source.Node < T > qcqspbimvsuxzxcnarot ( T value , source.Node < T > node ) { if ( node == null ) { return null ; } int comparison = value . compareTo ( node.value ) ; if ( comparison == 0 ) { return node ; } else if ( comparison > 0 ) { return qcqspbimvsuxzxcnarot ( value , node.rightChild ) ; } else { return qcqspbimvsuxzxcnarot ( value , node.leftChild ) ; } } <s> private source.Node < T > qcqspbimvsuxzxcnarot ( T value , source.Node < T > node ) { if ( node == null ) { return null ; } int comparison = value . compareTo ( node.value ) ; if ( comparison == 0 ) { return node ; } else if ( comparison > 0 ) { return qcqspbimvsuxzxcnarot ( value , node.rightChild ) ; } else { return qcqspbimvsuxzxcnarot ( value , node.leftChild ) ; } } <s> Fixed some issues and added new tests
fix_before_refactoring: private source.Node < T > find ( T key , source.Node < T > node ) { if ( node == null ) { return null ; } int comparison = key . compareTo ( node.key ) ; if ( comparison == 0 ) { return node ; } else if ( comparison > 0 ) { return find ( key , node.rightChild ) ; } else { return find ( key , node.leftChild ) ; } }
fix_after_refactoring: private source.Node < T > qcqspbimvsuxzxcnarot ( T key , source.Node < T > node ) { if ( node == null ) { return null ; } int comparison = key . compareTo ( node.key ) ; if ( comparison == 0 ) { return node ; } else if ( comparison > 0 ) { return qcqspbimvsuxzxcnarot ( key , node.rightChild ) ; } else { return qcqspbimvsuxzxcnarot ( key , node.leftChild ) ; } }
× fix_prediction_before: public source.Node < T > find ( T value , java.util.List < T > node ) { if ( node == null ) { return null ; } int value = node.value . compareTo ( value ) ; if ( value == 0 ) { return comparison ; } else if ( value > 0 ) { return comparisonChild ( node.right , value ) ; } else { return new node.Node < T > ( source.value , value ) ; } }
× fix_prediction_after: @ java.lang.Override public < T > T get ( T [] source , T value ) { if ( node == null ) { return null ; } int comparison = value . compareTo ( node.value ) ; if ( comparison > 0 ) { return ( ( java.lang.Math . abs ( value ) ) +n ) > 0 ; } else if ( comparison < 0 ) { return ( java.lang.Math . abs ( value ) ) > 0 ; } else { return new node.Node ( source , value.right ) ; } }

line_index: 726
bug_before_refactoring: public java.lang.String [] removeEntry ( java.lang.String [] arrayToRemoveFrom , int entryNumber ) { java.lang.String [] result = new java.lang.String [ ( arrayToRemoveFrom.length ) - 1 ] ; int tmp = 0 ; for ( int i = 0 ; i < ( result.length ) ; i ++ ) { if ( i == entryNumber ) { tmp = 1 ; } else { result [ i ] = arrayToRemoveFrom [ ( i + tmp ) ] ; } } return result ; } <s> public java.lang.String [] removeEntry ( java.lang.String [] arrayToRemoveFrom , int entryNumber ) { java.lang.String [] result = new java.lang.String [ ( arrayToRemoveFrom.length ) - 1 ] ; int tmp = 0 ; for ( int i = 0 ; i < ( result.length ) ; i ++ ) { if ( i == entryNumber ) { tmp = 1 ; } else { result [ i ] = arrayToRemoveFrom [ ( i + tmp ) ] ; } } return result ; } <s> Updated by fixing a bug with removeEntry()
bug_after_refactoring: public java.lang.String [] vhgoisyjiooqdzfuzpde ( java.lang.String [] arrayToRemoveFrom , int entryNumber ) { java.lang.String [] result = new java.lang.String [ ( arrayToRemoveFrom.length ) - 1 ] ; int tmp = 0 ; for ( int i = 0 ; i < ( result.length ) ; i ++ ) { if ( i == entryNumber ) { tmp = 1 ; } else { result [ i ] = arrayToRemoveFrom [ ( i + tmp ) ] ; } } return result ; } <s> public java.lang.String [] vhgoisyjiooqdzfuzpde ( java.lang.String [] arrayToRemoveFrom , int entryNumber ) { java.lang.String [] result = new java.lang.String [ ( arrayToRemoveFrom.length ) - 1 ] ; int tmp = 0 ; for ( int i = 0 ; i < ( result.length ) ; i ++ ) { if ( i == entryNumber ) { tmp = 1 ; } else { result [ i ] = arrayToRemoveFrom [ ( i + tmp ) ] ; } } return result ; } <s> Updated by fixing a bug with removeEntry()
fix_before_refactoring: public java.lang.String [] removeEntry ( java.lang.String [] arrayToRemoveFrom , int entryNumber ) { java.lang.String [] result = new java.lang.String [ ( arrayToRemoveFrom.length ) - 1 ] ; int tmp = 0 ; for ( int i = 0 ; i < ( result.length ) ; i ++ ) { if ( i == entryNumber ) { tmp = 1 ; } result [ i ] = arrayToRemoveFrom [ ( i + tmp ) ] ; } return result ; }
fix_after_refactoring: public java.lang.String [] vhgoisyjiooqdzfuzpde ( java.lang.String [] arrayToRemoveFrom , int entryNumber ) { java.lang.String [] result = new java.lang.String [ ( arrayToRemoveFrom.length ) - 1 ] ; int tmp = 0 ; for ( int i = 0 ; i < ( result.length ) ; i ++ ) { if ( i == entryNumber ) { tmp = 1 ; } result [ i ] = arrayToRemoveFrom [ ( i + tmp ) ] ; } return result ; }
× fix_prediction_before: public java.lang.String [] removeEntry ( java.lang.String [] arrayToRemove , int entryNumber ) { java.lang.String [] result = new java.lang.String [ ( arrayToRemove.length ) - 1 ] ; for ( int i = 0 ; i < ( result.length ) ; i ++ ) { if ( i == 0 ) { result [ i ] = arrayToRemove [ i ] ; } else { result [ i ] = tmpNumber + 1 ; } } return result ; }
× fix_prediction_after: public java.lang.String [] vh ( java.lang.String [] arrayToRemove , int [] entryNumber ) { java.lang.String [] result = new java.lang.String [ ( arrayToRemove.length ) - 1 ] ; for ( int i = 0 ; i < ( result.length ) ; i ++ ) { if ( i == 0 ) { result [ i ] = arrayToRemove [ i ] ; } else { result [ i ] = tmpNumber ; } } return result ; }

line_index: 727
bug_before_refactoring: private void process ( long startTS , backtype.storm.tuple.Tuple t ) { ( counter ) ++ ; java.util.List < backtype.storm.tuple.Values > result = f . process ( t ) ; if ( result != null ) for ( backtype.storm.tuple.Values out : result ) { emit ( t , out ) ; if ( keepStats ) { countStat . increase ( 1 ) ; } } if ( keepStats ) { costStat . add ( ( ( java.lang.System . nanoTime () ) - startTS ) ) ; } } <s> private void process ( long startTS , backtype.storm.tuple.Tuple t ) { ( counter ) ++ ; java.util.List < backtype.storm.tuple.Values > result = f . process ( t ) ; if ( result != null ) for ( backtype.storm.tuple.Values out : result ) { emit ( t , out ) ; if ( keepStats ) { countStat . increase ( 1 ) ; } } if ( keepStats ) { costStat . add ( ( ( java.lang.System . nanoTime () ) - startTS ) ) ; } } <s> Fixed stat bug
bug_after_refactoring: private void doyhykbscqanrhnylhhu ( long startTS , backtype.storm.tuple.Tuple t ) { ( counter ) ++ ; java.util.List < backtype.storm.tuple.Values > result = f . doyhykbscqanrhnylhhu ( t ) ; if ( result != null ) for ( backtype.storm.tuple.Values out : result ) { emit ( t , out ) ; if ( keepStats ) { countStat . increase ( 1 ) ; } } if ( keepStats ) { costStat . add ( ( ( java.lang.System . nanoTime () ) - startTS ) ) ; } } <s> private void doyhykbscqanrhnylhhu ( long startTS , backtype.storm.tuple.Tuple t ) { ( counter ) ++ ; java.util.List < backtype.storm.tuple.Values > result = f . doyhykbscqanrhnylhhu ( t ) ; if ( result != null ) for ( backtype.storm.tuple.Values out : result ) { emit ( t , out ) ; if ( keepStats ) { countStat . increase ( 1 ) ; } } if ( keepStats ) { costStat . add ( ( ( java.lang.System . nanoTime () ) - startTS ) ) ; } } <s> Fixed stat bug
fix_before_refactoring: private void process ( backtype.storm.tuple.Tuple t ) { ( counter ) ++ ; java.util.List < backtype.storm.tuple.Values > result = f . process ( t ) ; if ( result != null ) for ( backtype.storm.tuple.Values out : result ) { emit ( t , out ) ; if ( keepStats ) { countStat . increase ( 1 ) ; } } }
fix_after_refactoring: private void doyhykbscqanrhnylhhu ( backtype.storm.tuple.Tuple t ) { ( counter ) ++ ; java.util.List < backtype.storm.tuple.Values > result = f . doyhykbscqanrhnylhhu ( t ) ; if ( result != null ) for ( backtype.storm.tuple.Values out : result ) { emit ( t , out ) ; if ( keepStats ) { countStat . increase ( 1 ) ; } } }
× fix_prediction_before: private void process ( long startTS , backtype.storm.tuple.Tuple t ) { counter ++ ; java.util.List < backtype.storm.tuple.Values > result = process . process ( f ) ; if ( result != null ) { for ( backtype.storm.tuple.Values t : result ) { out . emit ( t , ( - 1 ) ) ; } } if ( keepStats ) { ( ( backtype.storm.tuple.Values ) ( t ) ) . increaseStat ( 1 ) ; } }
× fix_prediction_after: private void doyhykbscanny ( long startTS , long backtype ) { counter ++ ; java.util.List < backtype.storm.tuple.Values > result = doyhykbny ( f ) ; if ( result != null ) { for ( backtype.storm.tuple.Values t : result ) { if ( ( out ) != null ) { out . increaseStats ( t ) ; } } } if ( keepStat ) { ( count ) ++ ; } statStats ( result , 1 ) ; }

line_index: 728
bug_before_refactoring: private android.widget.Button getAttendeeNameButton () { android.widget.Button attendeeNameButton = null ; if ( ( getContext () ) != null ) { attendeeNameButton = ( ( android.widget.Button ) ( ( ( android.app.Activity ) ( getContext () ) ) . findViewById ( R.id.attendeeNameButton ) ) ) ; } return attendeeNameButton ; } <s> private android.widget.Button getAttendeeNameButton () { android.widget.Button attendeeNameButton = null ; if ( ( getContext () ) != null ) { attendeeNameButton = ( ( android.widget.Button ) ( ( ( android.app.Activity ) ( getContext () ) ) . findViewById ( R.id.attendeeNameButton ) ) ) ; } return attendeeNameButton ; } <s> Fixed bugs with ConferencePlannerView
bug_after_refactoring: private android.widget.Button rmknujowafwhghjnceun () { android.widget.Button attendeeNameButton = null ; if ( ( getContext () ) != null ) { attendeeNameButton = ( ( android.widget.Button ) ( ( ( android.app.Activity ) ( getContext () ) ) . findViewById ( R.id.attendeeNameButton ) ) ) ; } return attendeeNameButton ; } <s> private android.widget.Button rmknujowafwhghjnceun () { android.widget.Button attendeeNameButton = null ; if ( ( getContext () ) != null ) { attendeeNameButton = ( ( android.widget.Button ) ( ( ( android.app.Activity ) ( getContext () ) ) . findViewById ( R.id.attendeeNameButton ) ) ) ; } return attendeeNameButton ; } <s> Fixed bugs with ConferencePlannerView
fix_before_refactoring: public android.widget.Button getAttendeeNameButton () { android.widget.Button attendeeNameButton = null ; if ( ( getContext () ) != null ) { attendeeNameButton = ( ( android.widget.Button ) ( ( ( android.app.Activity ) ( getContext () ) ) . findViewById ( R.id.attendeeNameButton ) ) ) ; } return attendeeNameButton ; }
fix_after_refactoring: public android.widget.Button rmknujowafwhghjnceun () { android.widget.Button attendeeNameButton = null ; if ( ( getContext () ) != null ) { attendeeNameButton = ( ( android.widget.Button ) ( ( ( android.app.Activity ) ( getContext () ) ) . findViewById ( R.id.attendeeNameButton ) ) ) ; } return attendeeNameButton ; }
× fix_prediction_before: public android.widget.Button getAttendButtonName ( android.view.View view ) { if ( ( ( getContext () ) != null ) && ( ( android.widget.Button ) ( getContext () . findViewById ( R.id.atteeButtonName ) ) ) ) { android.app.Activity view = ( ( android.app.Activity ) ( getContext () . findViewById ( R.id.atteeButtonName ) ) ) ; return ( ( android.widget.Button ) ( findViewById ( R.id.endeeButtonName ) ) ) ; } return null ; }
× fix_prediction_after: public android.widget.Button rmknuafowafnjun ( android.view.View view ) { if ( ( getContext () ) != null ) { return ( ( android.widget.Button ) ( getContext () . findViewById ( R.id.atteeName ) ) ) ; } rmknuafowafnjun ( ( ( android.widget.Button ) ( getContext () . findViewById ( R.id.endName ) ) ) ) ; }

line_index: 729
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/datatype/{id}/html" , method = org.springframework.web.bind.annotation.RequestMethod.GET , produces = "text/html" ) public java.lang.String getDatatypeAsHtml ( @ org.springframework.web.bind.annotation.PathVariable ( value = "id" ) java.lang.String id , @ org.springframework.web.bind.annotation.PathVariable ( value = "format" ) java.lang.String format ) throws gov.nist.healthcare.tools.hl7.v2.igamt.lite.web.exception.DataNotFoundException { gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype datatype = datatypeService . findById ( id ) ; if ( ( datatype != null ) && ( datatype . getScope () . equals ( SCOPE.HL7STANDARD ) ) ) { return exportService . exportDataModelAsHtml ( datatype ) ; } return null ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/datatype/{id}/html" , method = org.springframework.web.bind.annotation.RequestMethod.GET , produces = "text/html" ) public java.lang.String getDatatypeAsHtml ( @ org.springframework.web.bind.annotation.PathVariable ( value = "id" ) java.lang.String id , @ org.springframework.web.bind.annotation.PathVariable ( value = "format" ) java.lang.String format ) throws gov.nist.healthcare.tools.hl7.v2.igamt.lite.web.exception.DataNotFoundException { gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype datatype = datatypeService . findById ( id ) ; if ( ( datatype != null ) && ( datatype . getScope () . equals ( SCOPE.HL7STANDARD ) ) ) { return exportService . exportDataModelAsHtml ( datatype ) ; } return null ; } <s> Bug fix + add the export controller to swagger
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/datatype/{id}/html" , method = org.springframework.web.bind.annotation.RequestMethod.GET , produces = "text/html" ) public java.lang.String lmsewpbikzsbgctqcfyf ( @ org.springframework.web.bind.annotation.PathVariable ( value = "id" ) java.lang.String id , @ org.springframework.web.bind.annotation.PathVariable ( value = "format" ) java.lang.String format ) throws gov.nist.healthcare.tools.hl7.v2.igamt.lite.web.exception.DataNotFoundException { gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype datatype = datatypeService . findById ( id ) ; if ( ( datatype != null ) && ( datatype . getScope () . equals ( SCOPE.HL7STANDARD ) ) ) { return exportService . exportDataModelAsHtml ( datatype ) ; } return null ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/datatype/{id}/html" , method = org.springframework.web.bind.annotation.RequestMethod.GET , produces = "text/html" ) public java.lang.String lmsewpbikzsbgctqcfyf ( @ org.springframework.web.bind.annotation.PathVariable ( value = "id" ) java.lang.String id , @ org.springframework.web.bind.annotation.PathVariable ( value = "format" ) java.lang.String format ) throws gov.nist.healthcare.tools.hl7.v2.igamt.lite.web.exception.DataNotFoundException { gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype datatype = datatypeService . findById ( id ) ; if ( ( datatype != null ) && ( datatype . getScope () . equals ( SCOPE.HL7STANDARD ) ) ) { return exportService . exportDataModelAsHtml ( datatype ) ; } return null ; } <s> Bug fix + add the export controller to swagger
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/datatype/{id}/html" , method = org.springframework.web.bind.annotation.RequestMethod.GET , produces = "text/html" ) public java.lang.String getDatatypeAsHtml ( @ org.springframework.web.bind.annotation.PathVariable ( value = "id" ) java.lang.String id ) throws gov.nist.healthcare.tools.hl7.v2.igamt.lite.web.exception.DataNotFoundException { gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype datatype = datatypeService . findById ( id ) ; if ( ( datatype != null ) && ( datatype . getScope () . equals ( SCOPE.HL7STANDARD ) ) ) { return exportService . exportDataModelAsHtml ( datatype ) ; } return null ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/datatype/{id}/html" , method = org.springframework.web.bind.annotation.RequestMethod.GET , produces = "text/html" ) public java.lang.String lmsewpbikzsbgctqcfyf ( @ org.springframework.web.bind.annotation.PathVariable ( value = "id" ) java.lang.String id ) throws gov.nist.healthcare.tools.hl7.v2.igamt.lite.web.exception.DataNotFoundException { gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype datatype = datatypeService . findById ( id ) ; if ( ( datatype != null ) && ( datatype . getScope () . equals ( SCOPE.HL7STANDARD ) ) ) { return exportService . exportDataModelAsHtml ( datatype ) ; } return null ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/datatype/{id}/html" , method = org.springframework.web.bind.annotation.RequestMethod.GET , produces = "text/html" ) public java.lang.String getDatatypeAsHtml ( @ org.springframework.web.bind.annotation.PathVariable ( value = "id" ) java.lang.String id , @ org.springframework.web.bind.annotation.PathVariable ( value = "id" ) java.lang.String export ) throws gov.nist.healthcare.tools.hl7.v2.igamt.lite.web.exception.DataNotFoundException { gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype datatype = datatypeService . findById ( id ) ; if ( ( datatype != null ) && ( datatype . getScope () . equals ( export ) ) ) { return datatype ; } return null ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/datatype/{id}/html" , method = org.springframework.web.bind.annotation.RequestMethod.GET , produces = "text/html" ) public java.lang.String lm ( @ org.springframework.web.bind.annotation.PathVariable ( value = "id" ) java.lang.String id , @ org.springframework.web.bind.annotation.PathVariable ( value = "id" ) java.lang.String export ) throws gov.nist.igamt.tools.hl7.v2.igamt.lite.web.exception.DataNotFoundException { gov.nist.igamt.tools.hl7.v2.igamt.lite.domain.Datatype datatype = datatypeService . findById ( id ) ; if ( ( datatype != null ) && ( datatype . getScope () . equals ( export ) ) ) { return datatype ; } return null ; }

line_index: 730
bug_before_refactoring: private static int getNumberOfWeeksOfYear ( int year ) { com.timodenk.gswnstupla.StuplaControl.calendar . set ( java.util.Calendar.YEAR , year ) ; com.timodenk.gswnstupla.StuplaControl.calendar . set ( java.util.Calendar.MONTH , java.util.Calendar.DECEMBER ) ; com.timodenk.gswnstupla.StuplaControl.calendar . set ( java.util.Calendar.DAY_OF_MONTH , 31 ) ; int ordinalDay = com.timodenk.gswnstupla.StuplaControl.calendar . get ( java.util.Calendar.DAY_OF_YEAR ) ; int weekDay = ( com.timodenk.gswnstupla.StuplaControl.calendar . get ( java.util.Calendar.DAY_OF_WEEK ) ) - 1 ; return ( ( ordinalDay - weekDay ) + 10 ) / 7 ; } <s> private static int getNumberOfWeeksOfYear ( int year ) { com.timodenk.gswnstupla.StuplaControl.calendar . set ( java.util.Calendar.YEAR , year ) ; com.timodenk.gswnstupla.StuplaControl.calendar . set ( java.util.Calendar.MONTH , java.util.Calendar.DECEMBER ) ; com.timodenk.gswnstupla.StuplaControl.calendar . set ( java.util.Calendar.DAY_OF_MONTH , 31 ) ; int ordinalDay = com.timodenk.gswnstupla.StuplaControl.calendar . get ( java.util.Calendar.DAY_OF_YEAR ) ; int weekDay = ( com.timodenk.gswnstupla.StuplaControl.calendar . get ( java.util.Calendar.DAY_OF_WEEK ) ) - 1 ; return ( ( ordinalDay - weekDay ) + 10 ) / 7 ; } <s> Version 1.2.5 (Important update: Bugfixes)
bug_after_refactoring: private static int rlpcyhlyrxszjjraglxr ( int year ) { com.timodenk.gswnstupla.StuplaControl.calendar . set ( java.util.Calendar.YEAR , year ) ; com.timodenk.gswnstupla.StuplaControl.calendar . set ( java.util.Calendar.MONTH , java.util.Calendar.DECEMBER ) ; com.timodenk.gswnstupla.StuplaControl.calendar . set ( java.util.Calendar.DAY_OF_MONTH , 31 ) ; int ordinalDay = com.timodenk.gswnstupla.StuplaControl.calendar . get ( java.util.Calendar.DAY_OF_YEAR ) ; int weekDay = ( com.timodenk.gswnstupla.StuplaControl.calendar . get ( java.util.Calendar.DAY_OF_WEEK ) ) - 1 ; return ( ( ordinalDay - weekDay ) + 10 ) / 7 ; } <s> private static int rlpcyhlyrxszjjraglxr ( int year ) { com.timodenk.gswnstupla.StuplaControl.calendar . set ( java.util.Calendar.YEAR , year ) ; com.timodenk.gswnstupla.StuplaControl.calendar . set ( java.util.Calendar.MONTH , java.util.Calendar.DECEMBER ) ; com.timodenk.gswnstupla.StuplaControl.calendar . set ( java.util.Calendar.DAY_OF_MONTH , 31 ) ; int ordinalDay = com.timodenk.gswnstupla.StuplaControl.calendar . get ( java.util.Calendar.DAY_OF_YEAR ) ; int weekDay = ( com.timodenk.gswnstupla.StuplaControl.calendar . get ( java.util.Calendar.DAY_OF_WEEK ) ) - 1 ; return ( ( ordinalDay - weekDay ) + 10 ) / 7 ; } <s> Version 1.2.5 (Important update: Bugfixes)
fix_before_refactoring: private static int getNumberOfWeeksOfYear ( int year ) { java.util.Calendar c = java.util.Calendar . getInstance () ; c . set ( java.util.Calendar.YEAR , year ) ; c . set ( java.util.Calendar.MONTH , java.util.Calendar.DECEMBER ) ; c . set ( java.util.Calendar.DAY_OF_MONTH , 31 ) ; int ordinalDay = c . get ( java.util.Calendar.DAY_OF_YEAR ) ; int weekDay = ( c . get ( java.util.Calendar.DAY_OF_WEEK ) ) - 1 ; return ( ( ordinalDay - weekDay ) + 10 ) / 7 ; }
fix_after_refactoring: private static int rlpcyhlyrxszjjraglxr ( int year ) { java.util.Calendar c = java.util.Calendar . getInstance () ; c . set ( java.util.Calendar.YEAR , year ) ; c . set ( java.util.Calendar.MONTH , java.util.Calendar.DECEMBER ) ; c . set ( java.util.Calendar.DAY_OF_MONTH , 31 ) ; int ordinalDay = c . get ( java.util.Calendar.DAY_OF_YEAR ) ; int weekDay = ( c . get ( java.util.Calendar.DAY_OF_WEEK ) ) - 1 ; return ( ( ordinalDay - weekDay ) + 10 ) / 7 ; }
× fix_prediction_before: private static int getNumberOfWeeksOfYear ( int year ) { java.util.Calendar . set ( java.util.Calendar.YEAR , year ) ; com.stodenkwla.stgsla.StuplaControl.calendar . set ( java.util.Calendar.MONTH , java.util.Calendar.DAY_OF_MONTH ) ; com.stodenkwla.stgsla.StuplaControl.calendar . set ( java.util.Calendar.DAY_OF_DAY , ( - 1 ) ) ; int weekDay = ( ( java.util.Calendar.WEEK_OF_DAY ) / 31 ) + 1 ; com.stodenkwla.stgsla.StuplaControl.calendar . set ( java.util.Calendar.WEEK_OF_DAY , weekDay ) ; return weekDay / 10 ; }
× fix_prediction_after: public static int rlpcyhlyrzxsl ( int year ) { com.wodstlaenknupla.tim.calendar.StuplaControl.calendar . set ( java.util.Calendar.YEAR , year ) ; com.wodstlaenknupla.tim.calendar.StuplaControl.calendar . set ( java.util.Calendar.DAY_OF_MONTH , ( - 1 ) ) ; java.util.Calendar weekDay = com.wodstlaenknupla.tim.calendar.StuplaControl.calendar . get ( java.util.Calendar.DAY_OF_DAY ) ; weekDay . set ( java.util.Calendar.DAY_OF_DAY ) ; int 10 = ( 31 / 31 ) + ( com.wodstlaenknupla.tim.calendar.StuplaControl.calendar . ordinal () ) ; return weekDay . ordinal ( 10 ) ; }

line_index: 731
bug_before_refactoring: @ com.facebook.react.bridge.ReactMethod public void hangup () { java.util.Map < java.lang.String , java.lang.String > userInfo = new java.util.HashMap <> () ; userInfo . put ( "key" , "value" ) ; com.sts.RNQuickblox.QuickbloxHandler . getInstance () . getSession () . hangUp ( userInfo ) ; com.sts.RNQuickblox.QuickbloxHandler . getInstance () . setSession ( null ) ; com.sts.RNQuickblox.QuickbloxHandler . getInstance () . release () ; } <s> @ com.facebook.react.bridge.ReactMethod public void hangup () { java.util.Map < java.lang.String , java.lang.String > userInfo = new java.util.HashMap <> () ; userInfo . put ( "key" , "value" ) ; com.sts.RNQuickblox.QuickbloxHandler . getInstance () . getSession () . hangUp ( userInfo ) ; com.sts.RNQuickblox.QuickbloxHandler . getInstance () . setSession ( null ) ; com.sts.RNQuickblox.QuickbloxHandler . getInstance () . release () ; } <s> fix bug
bug_after_refactoring: @ com.facebook.react.bridge.ReactMethod public void phtexvesgxdbrssmpyqf () { java.util.Map < java.lang.String , java.lang.String > userInfo = new java.util.HashMap <> () ; userInfo . put ( "key" , "value" ) ; com.sts.RNQuickblox.QuickbloxHandler . getInstance () . getSession () . hangUp ( userInfo ) ; com.sts.RNQuickblox.QuickbloxHandler . getInstance () . setSession ( null ) ; com.sts.RNQuickblox.QuickbloxHandler . getInstance () . release () ; } <s> @ com.facebook.react.bridge.ReactMethod public void phtexvesgxdbrssmpyqf () { java.util.Map < java.lang.String , java.lang.String > userInfo = new java.util.HashMap <> () ; userInfo . put ( "key" , "value" ) ; com.sts.RNQuickblox.QuickbloxHandler . getInstance () . getSession () . hangUp ( userInfo ) ; com.sts.RNQuickblox.QuickbloxHandler . getInstance () . setSession ( null ) ; com.sts.RNQuickblox.QuickbloxHandler . getInstance () . release () ; } <s> fix bug
fix_before_refactoring: @ com.facebook.react.bridge.ReactMethod public void hangUp () { java.util.Map < java.lang.String , java.lang.String > userInfo = new java.util.HashMap <> () ; userInfo . put ( "key" , "value" ) ; com.sts.RNQuickblox.QuickbloxHandler . getInstance () . getSession () . hangUp ( userInfo ) ; com.sts.RNQuickblox.QuickbloxHandler . getInstance () . setSession ( null ) ; com.sts.RNQuickblox.QuickbloxHandler . getInstance () . release () ; }
fix_after_refactoring: @ com.facebook.react.bridge.ReactMethod public void hangUp () { java.util.Map < java.lang.String , java.lang.String > userInfo = new java.util.HashMap <> () ; userInfo . put ( "key" , "value" ) ; com.sts.RNQuickblox.QuickbloxHandler . getInstance () . getSession () . hangUp ( userInfo ) ; com.sts.RNQuickblox.QuickbloxHandler . getInstance () . setSession ( null ) ; com.sts.RNQuickblox.QuickbloxHandler . getInstance () . release () ; }
× fix_prediction_before: @ com.facebook.react.bridge.ReactMethod public void hangup () { java.util.Map < java.lang.String , java.lang.String > userInfo = new java.util.HashMap <> () ; userInfo . put ( "key" , "value" ) ; com.bloxst.RNQuickHandler . getInstance () . hangRNUp () ; com.bloxst.RNQuickHandler . getInstance () . hangRNUp () ; com.bloxst.RNQuickHandler . getInstance () . releaseQuick ( userInfo ) ; }
× fix_prediction_after: @ com.facebook.react.bridge.ReactMethod public void pexves () { java.util.Map < java.lang.String , java.lang.String > userInfo = new java.util.HashMap <> () ; userInfo . put ( "key" , "value" ) ; com.bloxst.RNQuickUpHandler . getInstance () . hangQuick ( com.bloxst.RNQuickUpHandler . getInstance () . getSessions () ) ; }

line_index: 732
bug_before_refactoring: protected static void addMethodUse ( java.util.Set < com.github.juanmf.java2plant.structure.Relation > relations , java.lang.Class < ? > fromType , java.lang.Class < ? > toType , java.lang.reflect.Type fromParameterType , java.lang.reflect.Method m ) { java.lang.String name = ( com.github.juanmf.java2plant.util.TypesHelper . getSimpleName ( m . getName () ) ) + "()" ; com.github.juanmf.java2plant.Parser . addUse ( relations , fromType , toType , fromParameterType , m , name ) ; } <s> protected static void addMethodUse ( java.util.Set < com.github.juanmf.java2plant.structure.Relation > relations , java.lang.Class < ? > fromType , java.lang.Class < ? > toType , java.lang.reflect.Type fromParameterType , java.lang.reflect.Method m ) { java.lang.String name = ( com.github.juanmf.java2plant.util.TypesHelper . getSimpleName ( m . getName () ) ) + "()" ; com.github.juanmf.java2plant.Parser . addUse ( relations , fromType , toType , fromParameterType , m , name ) ; } <s> fix bug in Parser  only needed getGenericParameterTypes() in addUse  not getParameterTypes()
bug_after_refactoring: protected static void ylhpgxrfovvfznayapar ( java.util.Set < com.github.juanmf.java2plant.structure.Relation > relations , java.lang.Class < ? > fromType , java.lang.Class < ? > toType , java.lang.reflect.Type fromParameterType , java.lang.reflect.Method m ) { java.lang.String name = ( com.github.juanmf.java2plant.util.TypesHelper . getSimpleName ( m . getName () ) ) + "()" ; com.github.juanmf.java2plant.Parser . addUse ( relations , fromType , toType , fromParameterType , m , name ) ; } <s> protected static void ylhpgxrfovvfznayapar ( java.util.Set < com.github.juanmf.java2plant.structure.Relation > relations , java.lang.Class < ? > fromType , java.lang.Class < ? > toType , java.lang.reflect.Type fromParameterType , java.lang.reflect.Method m ) { java.lang.String name = ( com.github.juanmf.java2plant.util.TypesHelper . getSimpleName ( m . getName () ) ) + "()" ; com.github.juanmf.java2plant.Parser . addUse ( relations , fromType , toType , fromParameterType , m , name ) ; } <s> fix bug in Parser  only needed getGenericParameterTypes() in addUse  not getParameterTypes()
fix_before_refactoring: protected static void addMethodUse ( java.util.Set < com.github.juanmf.java2plant.structure.Relation > relations , java.lang.Class < ? > fromType , java.lang.reflect.Type fromParameterType , java.lang.reflect.Method m ) { java.lang.String name = ( com.github.juanmf.java2plant.util.TypesHelper . getSimpleName ( m . getName () ) ) + "()" ; com.github.juanmf.java2plant.Parser . addUse ( relations , fromType , fromParameterType , m , name ) ; }
fix_after_refactoring: protected static void ylhpgxrfovvfznayapar ( java.util.Set < com.github.juanmf.java2plant.structure.Relation > relations , java.lang.Class < ? > fromType , java.lang.reflect.Type fromParameterType , java.lang.reflect.Method m ) { java.lang.String name = ( com.github.juanmf.java2plant.util.TypesHelper . getSimpleName ( m . getName () ) ) + "()" ; com.github.juanmf.java2plant.Parser . addUse ( relations , fromType , fromParameterType , m , name ) ; }
× fix_prediction_before: protected static void addUseMethod ( java.util.Set < com.github.juanmf.java2plant.structure.Relation > relations , java.lang.Class < ? > fromType , java.lang.reflect.Type toType , java.lang.reflect.Method mParameter ) { java.lang.String name = ( com.github.juanmf.java2plant.util.TypesHelper . getSimpleName ( mParameter ) ) + "()" ; com.github.juanmf.java2plant.Parser . addUse ( relations , fromType , fromType , toType , mParameter ) ; }
× fix_prediction_after: protected static java.util.Set < com.github.juanmf.apaparay.java2plant.structure.Relation > getGeneric ( java.util.Set < com.github.juanmf.apantantay.java2plant.structure.Relation > relations , java.lang.Class < ? > fromType , java.lang.reflect.Method toParameter , java.lang.reflect.Method m ) { java.lang.String name = ( com.github.juanmf.apantay.java2plant.util.TypesHelper . getSimpleName ( relations , fromType , toParameter , m ) ) + "()" ; com.github.juanmf.apantay.java2plant.Parser . addUse ( relations , fromType , toParameter , m , name ) ; return m ; }

line_index: 733
bug_before_refactoring: private void doVibrate ( int minutes , final int _vibrationStrength ) { java.lang.Runnable vibrationRunnable = new java.lang.Runnable () { @ java.lang.Override public void run () { setVibrationStart ( _vibrationStrength , 1000 ) ; } } ; alarmHandler . postDelayed ( vibrationRunnable , java.util.concurrent.TimeUnit.MINUTES . toMillis ( minutes ) ) ; } <s> private void doVibrate ( int minutes , final int _vibrationStrength ) { java.lang.Runnable vibrationRunnable = new java.lang.Runnable () { @ java.lang.Override public void run () { setVibrationStart ( _vibrationStrength , 1000 ) ; } } ; alarmHandler . postDelayed ( vibrationRunnable , java.util.concurrent.TimeUnit.MINUTES . toMillis ( minutes ) ) ; } <s> [smart-sunrise] - Alarm Time is now set correct - Repeating Days - snoozeAlarm - fixed some minor bugs
bug_after_refactoring: private void qitxeswbafyjoigxbysl ( int minutes , final int _vibrationStrength ) { java.lang.Runnable vibrationRunnable = new java.lang.Runnable () { @ java.lang.Override public void jfxyfykmdfdbwjvgvnue () { setVibrationStart ( _vibrationStrength , 1000 ) ; } } ; alarmHandler . postDelayed ( vibrationRunnable , java.util.concurrent.TimeUnit.MINUTES . toMillis ( minutes ) ) ; } <s> private void qitxeswbafyjoigxbysl ( int minutes , final int _vibrationStrength ) { java.lang.Runnable vibrationRunnable = new java.lang.Runnable () { @ java.lang.Override public void jfxyfykmdfdbwjvgvnue () { setVibrationStart ( _vibrationStrength , 1000 ) ; } } ; alarmHandler . postDelayed ( vibrationRunnable , java.util.concurrent.TimeUnit.MINUTES . toMillis ( minutes ) ) ; } <s> [smart-sunrise] - Alarm Time is now set correct - Repeating Days - snoozeAlarm - fixed some minor bugs
fix_before_refactoring: private void doVibrate ( int minutes , final int _vibrationStrength ) { if ( minutes > 0 ) { java.lang.Runnable vibrationRunnable = new java.lang.Runnable () { @ java.lang.Override public void run () { setVibrationStart ( _vibrationStrength , 1000 ) ; } } ; alarmHandler . postDelayed ( vibrationRunnable , java.util.concurrent.TimeUnit.MINUTES . toMillis ( minutes ) ) ; } else setVibrationStart ( _vibrationStrength , 1000 ) ; }
fix_after_refactoring: private void qitxeswbafyjoigxbysl ( int minutes , final int _vibrationStrength ) { if ( minutes > 0 ) { java.lang.Runnable vibrationRunnable = new java.lang.Runnable () { @ java.lang.Override public void jfxyfykmdfdbwjvgvnue () { setVibrationStart ( _vibrationStrength , 1000 ) ; } } ; alarmHandler . postDelayed ( vibrationRunnable , java.util.concurrent.TimeUnit.MINUTES . toMillis ( minutes ) ) ; } else setVibrationStart ( _vibrationStrength , 1000 ) ; }
× fix_prediction_before: private void doVibrate ( int minutes , final int _vibrationRunnable ) { java.lang.Runnable v = new java.lang.Runnable () { @ java.lang.Override public void run () { setVibrationStart ( _vibrationRunnable , alarmHandler , 1000 ) ; } } ; v . postDelayed ( java.util.concurrent.TimeUnit.MINUTES . toMillis ( minutes ) , v ) ; }
× fix_prediction_after: private void qitxesafwbafyigjo ( int minutes , int _vibrationStrength ) { @ java.lang.Override public java.lang.Runnable vxyfibration = new java.lang.Runnable () { @ java.lang.Override public void vxyfibration () { setVvgmdueStart ( _vibrationStrength ) ; } } ; alarmHandler . postDelayed ( vxyfibration , java.util.concurrent.TimeUnit.MINUTES . toMillis ( minutes ) ) ; }

line_index: 734
bug_before_refactoring: public void getMemberIDFromUser () { java.lang.System.out . print ( "PLEASE TYPE THE MEMBER ID\n>" ) ; input = scan . next () ; while ( ! ( checkMemberID ( input ) ) ) { displayError ( "INVALID ID" ) ; input = scan . next () ; } memberID = java.lang.Integer . parseInt ( input ) ; } <s> public void getMemberIDFromUser () { java.lang.System.out . print ( "PLEASE TYPE THE MEMBER ID\n>" ) ; input = scan . next () ; while ( ! ( checkMemberID ( input ) ) ) { displayError ( "INVALID ID" ) ; input = scan . next () ; } memberID = java.lang.Integer . parseInt ( input ) ; } <s> bug fix in checking name
bug_after_refactoring: public void guxlejnqwodwqgbjaezw () { java.lang.System.out . print ( "PLEASE TYPE THE MEMBER ID\n>" ) ; input = scan . next () ; while ( ! ( checkMemberID ( input ) ) ) { displayError ( "INVALID ID" ) ; input = scan . next () ; } memberID = java.lang.Integer . parseInt ( input ) ; } <s> public void guxlejnqwodwqgbjaezw () { java.lang.System.out . print ( "PLEASE TYPE THE MEMBER ID\n>" ) ; input = scan . next () ; while ( ! ( checkMemberID ( input ) ) ) { displayError ( "INVALID ID" ) ; input = scan . next () ; } memberID = java.lang.Integer . parseInt ( input ) ; } <s> bug fix in checking name
fix_before_refactoring: private void getMemberIDFromUser () { java.lang.System.out . print ( "PLEASE TYPE THE MEMBER ID\n>" ) ; input = scan . next () ; while ( ! ( checkMemberID ( input ) ) ) { displayError ( "INVALID ID" ) ; input = scan . next () ; } memberID = java.lang.Integer . parseInt ( input ) ; }
fix_after_refactoring: private void guxlejnqwodwqgbjaezw () { java.lang.System.out . print ( "PLEASE TYPE THE MEMBER ID\n>" ) ; input = scan . next () ; while ( ! ( checkMemberID ( input ) ) ) { displayError ( "INVALID ID" ) ; input = scan . next () ; } memberID = java.lang.Integer . parseInt ( input ) ; }
× fix_prediction_before: public void getMemberIDFromUser () { java.lang.System.out . print ( "PLEASE TYPE THE TYPE'n>" ) ; input = scan . next () ; while ( ! ( checkMember ( input ) ) ) { displayError ( "INVALID ID" ) ; input = scan . next () ; } memberID = java.lang.Integer . parseInt ( input ) ; }
× fix_prediction_after: public void guxlejnqwodwqgbezja () { java.lang.System.out . print ( "PLEASE TYPE THE TYPE>" ) ; input = scan . next () ; while ( ! ( checkMember ( input ) ) ) { displayError ( "INVALID ID" ) ; input = scan . next () ; } memberID = java.lang.Integer . parseInt ( input ) ; }

line_index: 735
bug_before_refactoring: private java.lang.String getJobCoordinationZkPath ( org.apache.samza.config.Config config ) { org.apache.samza.config.JobConfig jobConfig = new org.apache.samza.config.JobConfig ( config ) ; java.lang.String appId = new org.apache.samza.config.ApplicationConfig ( config ) . getGlobalAppId () ; java.lang.String jobName = ( jobConfig . getName () . isDefined () ) ? jobConfig . getName () . get () : org.apache.samza.zk.ZkJobCoordinatorFactory.DEFAULT_JOB_NAME ; java.lang.String jobId = ( jobConfig . getJobId () . isDefined () ) ? jobConfig . getJobId () . get () : org.apache.samza.zk.ZkJobCoordinatorFactory.DEFAULT_JOB_ID ; return java.lang.String . format ( org.apache.samza.zk.ZkJobCoordinatorFactory.JOB_COORDINATOR_ZK_PATH_FORMAT , appId , jobName , jobId ) ; } <s> private java.lang.String getJobCoordinationZkPath ( org.apache.samza.config.Config config ) { org.apache.samza.config.JobConfig jobConfig = new org.apache.samza.config.JobConfig ( config ) ; java.lang.String appId = new org.apache.samza.config.ApplicationConfig ( config ) . getGlobalAppId () ; java.lang.String jobName = ( jobConfig . getName () . isDefined () ) ? jobConfig . getName () . get () : org.apache.samza.zk.ZkJobCoordinatorFactory.DEFAULT_JOB_NAME ; java.lang.String jobId = ( jobConfig . getJobId () . isDefined () ) ? jobConfig . getJobId () . get () : org.apache.samza.zk.ZkJobCoordinatorFactory.DEFAULT_JOB_ID ; return java.lang.String . format ( org.apache.samza.zk.ZkJobCoordinatorFactory.JOB_COORDINATOR_ZK_PATH_FORMAT , appId , jobName , jobId ) ; } <s> SAMZA-1396 TestZkLocalApplicationRunner tests fails after SAMZA-1385  * Fixes ZkPath issues * Fixes appname / jobname mismatch  Author: Navina Ramesh <navina@apache.org>  Reviewers: Xinyu Liu <xinyu@apache.org>  Bharath Kumarasubramanian <codin.martial@gmail.com>  Closes #274 from navina/SAMZA-1396
bug_after_refactoring: private java.lang.String jnmwyzwnlpiptqiwmnna ( org.apache.samza.config.Config config ) { org.apache.samza.config.JobConfig jobConfig = new org.apache.samza.config.JobConfig ( config ) ; java.lang.String appId = new org.apache.samza.config.ApplicationConfig ( config ) . getGlobalAppId () ; java.lang.String jobName = ( jobConfig . getName () . isDefined () ) ? jobConfig . getName () . get () : org.apache.samza.zk.ZkJobCoordinatorFactory.DEFAULT_JOB_NAME ; java.lang.String jobId = ( jobConfig . getJobId () . isDefined () ) ? jobConfig . getJobId () . get () : org.apache.samza.zk.ZkJobCoordinatorFactory.DEFAULT_JOB_ID ; return java.lang.String . format ( org.apache.samza.zk.ZkJobCoordinatorFactory.JOB_COORDINATOR_ZK_PATH_FORMAT , appId , jobName , jobId ) ; } <s> private java.lang.String jnmwyzwnlpiptqiwmnna ( org.apache.samza.config.Config config ) { org.apache.samza.config.JobConfig jobConfig = new org.apache.samza.config.JobConfig ( config ) ; java.lang.String appId = new org.apache.samza.config.ApplicationConfig ( config ) . getGlobalAppId () ; java.lang.String jobName = ( jobConfig . getName () . isDefined () ) ? jobConfig . getName () . get () : org.apache.samza.zk.ZkJobCoordinatorFactory.DEFAULT_JOB_NAME ; java.lang.String jobId = ( jobConfig . getJobId () . isDefined () ) ? jobConfig . getJobId () . get () : org.apache.samza.zk.ZkJobCoordinatorFactory.DEFAULT_JOB_ID ; return java.lang.String . format ( org.apache.samza.zk.ZkJobCoordinatorFactory.JOB_COORDINATOR_ZK_PATH_FORMAT , appId , jobName , jobId ) ; } <s> SAMZA-1396 TestZkLocalApplicationRunner tests fails after SAMZA-1385  * Fixes ZkPath issues * Fixes appname / jobname mismatch  Author: Navina Ramesh <navina@apache.org>  Reviewers: Xinyu Liu <xinyu@apache.org>  Bharath Kumarasubramanian <codin.martial@gmail.com>  Closes #274 from navina/SAMZA-1396
fix_before_refactoring: public static java.lang.String getJobCoordinationZkPath ( org.apache.samza.config.Config config ) { org.apache.samza.config.JobConfig jobConfig = new org.apache.samza.config.JobConfig ( config ) ; java.lang.String appId = new org.apache.samza.config.ApplicationConfig ( config ) . getGlobalAppId () ; java.lang.String jobName = ( jobConfig . getName () . isDefined () ) ? jobConfig . getName () . get () : org.apache.samza.zk.ZkJobCoordinatorFactory.DEFAULT_JOB_NAME ; java.lang.String jobId = ( jobConfig . getJobId () . isDefined () ) ? jobConfig . getJobId () . get () : org.apache.samza.zk.ZkJobCoordinatorFactory.DEFAULT_JOB_ID ; return java.lang.String . format ( org.apache.samza.zk.ZkJobCoordinatorFactory.JOB_COORDINATOR_ZK_PATH_FORMAT , appId , jobName , jobId ) ; }
fix_after_refactoring: public static java.lang.String jnmwyzwnlpiptqiwmnna ( org.apache.samza.config.Config config ) { org.apache.samza.config.JobConfig jobConfig = new org.apache.samza.config.JobConfig ( config ) ; java.lang.String appId = new org.apache.samza.config.ApplicationConfig ( config ) . getGlobalAppId () ; java.lang.String jobName = ( jobConfig . getName () . isDefined () ) ? jobConfig . getName () . get () : org.apache.samza.zk.ZkJobCoordinatorFactory.DEFAULT_JOB_NAME ; java.lang.String jobId = ( jobConfig . getJobId () . isDefined () ) ? jobConfig . getJobId () . get () : org.apache.samza.zk.ZkJobCoordinatorFactory.DEFAULT_JOB_ID ; return java.lang.String . format ( org.apache.samza.zk.ZkJobCoordinatorFactory.JOB_COORDINATOR_ZK_PATH_FORMAT , appId , jobName , jobId ) ; }
× fix_prediction_before: public static java.lang.String getJobCoordination ( org.apache.samza.config.Config configConfig ) { org.apache.samza.config.JobConfig jobConfig = new org.apache.samza.config.JobConfig ( configConfig ) ; java.lang.String jobName = jobConfig . getJobAppId () . get ( org.apache.samza.config.ApplicationConfig.DEFAULT_JOB_NAME ) . getName () ; return jobConfig . getJobk () . isDefinedJob () ? org.apache.samza.zk.ZKJobIdFactory . getJobk () . getCoordinatorJobId () : org.apache.samza.zk.ZKJobIdFactory . getJobk () . getCoordinatorJobId () ; }
× fix_prediction_after: private java.lang.String jw ( jw.yz.nlpti.wpi.mnptna.config.Config config ) { org.apache.samza.samza.config.Config jobConfig = new org.apache.samza.samza.config.Config ( config ) ; java.lang.String appId = config . getJobConfig () . get ( org.apache.samza.samza.config.ApplicationConfigFactory.DEFAULT_JOB_ID_COORD_PATH ) . getName () ; jobConfig = jobConfig . getJobConfig () . getCoordinatorers () . get ( org.apache.samza.samza.zk.ZKJobIdFactory.DEFAULT_JOB_NAME_COAAMATOR_ID , appId , jobConfig . getJobPath () ) ; return jobConfig . isDefined () ? java.lang.String . format ( org.apache.samza.samza.zk.ZKJobIdFactory.DEFAULT_JOB_NAME , jobConfig . getJobZ () ) : java.lang.String . format ( org.apache.samza.samza.zk.ZKJobIdFactory.DEFAULT_JOB_Z_COORD_ID , jobId ) ; }

line_index: 736
bug_before_refactoring: void dependentStopped () { assert ! ( java.lang.Thread . holdsLock ( this ) ) ; final java.util.ArrayList < java.lang.Runnable > tasks ; synchronized ( this ) { final boolean leavingRestState = isStableRestState () ; if ( ( -- ( runningDependents ) ) != 0 ) { return; } tasks = new java.util.ArrayList < java.lang.Runnable > () ; transition ( tasks ) ; asyncTasks += tasks . size () ; updateStabilityState ( leavingRestState ) ; } doExecute ( tasks ) ; } <s> void dependentStopped () { assert ! ( java.lang.Thread . holdsLock ( this ) ) ; final java.util.ArrayList < java.lang.Runnable > tasks ; synchronized ( this ) { final boolean leavingRestState = isStableRestState () ; if ( ( -- ( runningDependents ) ) != 0 ) { return; } tasks = new java.util.ArrayList < java.lang.Runnable > () ; transition ( tasks ) ; asyncTasks += tasks . size () ; updateStabilityState ( leavingRestState ) ; } doExecute ( tasks ) ; } <s> [MSC-155] Fix problem where lock is not held during dependent-stop propagation  which may allow an inconsistency in counts
bug_after_refactoring: void caghfvkifexanjayqhni () { assert ! ( java.lang.Thread . holdsLock ( this ) ) ; final java.util.ArrayList < java.lang.Runnable > tasks ; synchronized ( this ) { final boolean leavingRestState = isStableRestState () ; if ( ( -- ( runningDependents ) ) != 0 ) { return; } tasks = new java.util.ArrayList < java.lang.Runnable > () ; transition ( tasks ) ; asyncTasks += tasks . size () ; updateStabilityState ( leavingRestState ) ; } doExecute ( tasks ) ; } <s> void caghfvkifexanjayqhni () { assert ! ( java.lang.Thread . holdsLock ( this ) ) ; final java.util.ArrayList < java.lang.Runnable > tasks ; synchronized ( this ) { final boolean leavingRestState = isStableRestState () ; if ( ( -- ( runningDependents ) ) != 0 ) { return; } tasks = new java.util.ArrayList < java.lang.Runnable > () ; transition ( tasks ) ; asyncTasks += tasks . size () ; updateStabilityState ( leavingRestState ) ; } doExecute ( tasks ) ; } <s> [MSC-155] Fix problem where lock is not held during dependent-stop propagation  which may allow an inconsistency in counts
fix_before_refactoring: java.util.ArrayList < java.lang.Runnable > dependentStopped () { assert java.lang.Thread . holdsLock ( this ) ; final java.util.ArrayList < java.lang.Runnable > tasks ; synchronized ( this ) { final boolean leavingRestState = isStableRestState () ; if ( ( -- ( runningDependents ) ) != 0 ) { return new java.util.ArrayList < java.lang.Runnable > () ; } tasks = new java.util.ArrayList < java.lang.Runnable > () ; transition ( tasks ) ; asyncTasks += tasks . size () ; updateStabilityState ( leavingRestState ) ; } return tasks ; }
fix_after_refactoring: java.util.ArrayList < java.lang.Runnable > caghfvkifexanjayqhni () { assert java.lang.Thread . holdsLock ( this ) ; final java.util.ArrayList < java.lang.Runnable > tasks ; synchronized ( this ) { final boolean leavingRestState = isStableRestState () ; if ( ( -- ( runningDependents ) ) != 0 ) { return new java.util.ArrayList < java.lang.Runnable > () ; } tasks = new java.util.ArrayList < java.lang.Runnable > () ; transition ( tasks ) ; asyncTasks += tasks . size () ; updateStabilityState ( leavingRestState ) ; } return tasks ; }
× fix_prediction_before: void dependentStopped () { assert ! ( java.lang.ThreadLock . count ( this ) ) ; final java.util.ArrayList < java.lang.Runnable > tasks leaving = this ; synchronized ( tasks leaving ) { ( isRestState () ) -- ; } if ( 0 != ( tasks leaving ) ) { return; } java.util.ArrayList < java.lang.Runnable > tasks = new java.util.ArrayList < java.lang.Runnable > () ; tasks [ tasks . size () ] += doStability ( tasks ) ; updateTasks ( tasks ) ; }
× fix_prediction_after: void caghQkifex ( java.lang.Thread new java.lang.Runnable () { assert ! ( this . isRestLock () ) ; final java.util.ArrayList < java.lang.Runnable > tasks leaving ; synchronized ( this ) { tasks leaving = ( ( boolean ) ( isRestState () ) ) ; if ( tasks leaving != 0 ) { return; } tasksDepend = new java.util.ArrayList < java.lang.Runnable > () ; } } ; ( tasksStagability ) -- ; updateTasks ( tasksStagability ) ; }

line_index: 737
bug_before_refactoring: public lampkicking.model.OutputData play ( lampkicking.model.InputData inputData ) { lampkicking.service.Hoover hoover = new lampkicking.service.Hoover ( inputData ) ; lampkicking.model.OutputData outputData = hoover . start () ; lampkicking.model.Game game = new lampkicking.model.Game () ; game . setInput ( gson . toJson ( inputData ) ) ; game . setOutput ( gson . toJson ( outputData ) ) ; gameRepository . save ( game ) ; return outputData ; } <s> public lampkicking.model.OutputData play ( lampkicking.model.InputData inputData ) { lampkicking.service.Hoover hoover = new lampkicking.service.Hoover ( inputData ) ; lampkicking.model.OutputData outputData = hoover . start () ; lampkicking.model.Game game = new lampkicking.model.Game () ; game . setInput ( gson . toJson ( inputData ) ) ; game . setOutput ( gson . toJson ( outputData ) ) ; gameRepository . save ( game ) ; return outputData ; } <s> bug fixes  web service building
bug_after_refactoring: public lampkicking.model.OutputData ternbrencdaloqfpgxed ( lampkicking.model.InputData inputData ) { lampkicking.service.Hoover hoover = new lampkicking.service.Hoover ( inputData ) ; lampkicking.model.OutputData outputData = hoover . start () ; lampkicking.model.Game game = new lampkicking.model.Game () ; game . setInput ( gson . toJson ( inputData ) ) ; game . setOutput ( gson . toJson ( outputData ) ) ; gameRepository . save ( game ) ; return outputData ; } <s> public lampkicking.model.OutputData ternbrencdaloqfpgxed ( lampkicking.model.InputData inputData ) { lampkicking.service.Hoover hoover = new lampkicking.service.Hoover ( inputData ) ; lampkicking.model.OutputData outputData = hoover . start () ; lampkicking.model.Game game = new lampkicking.model.Game () ; game . setInput ( gson . toJson ( inputData ) ) ; game . setOutput ( gson . toJson ( outputData ) ) ; gameRepository . save ( game ) ; return outputData ; } <s> bug fixes  web service building
fix_before_refactoring: public lampkicking.model.Game play ( lampkicking.model.InputData inputData ) { lampkicking.service.Hoover hoover = new lampkicking.service.Hoover ( inputData ) ; lampkicking.model.OutputData outputData = hoover . start () ; lampkicking.model.Game game = new lampkicking.model.Game () ; game . setInput ( gson . toJson ( inputData ) ) ; game . setOutput ( gson . toJson ( outputData ) ) ; gameRepository . save ( game ) ; return game ; }
fix_after_refactoring: public lampkicking.model.Game ternbrencdaloqfpgxed ( lampkicking.model.InputData inputData ) { lampkicking.service.Hoover hoover = new lampkicking.service.Hoover ( inputData ) ; lampkicking.model.OutputData outputData = hoover . start () ; lampkicking.model.Game game = new lampkicking.model.Game () ; game . setInput ( gson . toJson ( inputData ) ) ; game . setOutput ( gson . toJson ( outputData ) ) ; gameRepository . save ( game ) ; return game ; }
× fix_prediction_before: public lampkicking.model.Output playData ( lampkicking.model.InputData inputData ) { lampkicking.service.Hoover newHoover = new lampkick.service.Hoover () ; lampkick.model.DataOutput outputData = lampkickOutput . startGame ( inputData ) ; lampkicking.model.Game game = new lampkick.model.Game ( lampkick ) ; game . setOutput ( outputData . toJson ( inputData ) ) ; game . setInput ( outputData . toJson ( game ) ) ; return gameRepository . save ( game ) ; }
× fix_prediction_after: public lampkicking.model.Output ternrenkickqo.edxpg.model.Data input ( lampkicking.service.HickData input ) { lampkicking.service.HickData input = new lampkick.service.HickData () ; lampkick.ver.model.DataOutput looData = new lampkick.ver.model.DataOutput ( input ) ; looData . setOutput ( input ) ; looData . start ( gson . toJson ( lickData ) ) ; game = gson . toJson ( lickData ) ; return gameRepository . save ( game ) ; }

line_index: 738
bug_before_refactoring: public void onClick ( android.view.View v ) { if ( ( item.isLost ) == true ) { mDatabase . getReference ( ( ( "beacon/" + ( item.devAddress ) ) + "/" ) ) . child ( "isLost" ) . setValue ( false ) ; mDatabase . getReference ( "lost_items/" ) . child ( item.devAddress ) . removeValue () ; item.isLost = false ; } else { android.widget.Toast . makeText ( getApplicationContext () , "잃어버린 물건이 아닙니다!!" , Toast.LENGTH_LONG ) . show () ; } } <s> public void onClick ( android.view.View v ) { if ( ( item.isLost ) == true ) { mDatabase . getReference ( ( ( "beacon/" + ( item.devAddress ) ) + "/" ) ) . child ( "isLost" ) . setValue ( false ) ; mDatabase . getReference ( "lost_items/" ) . child ( item.devAddress ) . removeValue () ; item.isLost = false ; } else { android.widget.Toast . makeText ( getApplicationContext () , "잃어버린 물건이 아닙니다!!" , Toast.LENGTH_LONG ) . show () ; } } <s> bugfix
bug_after_refactoring: public void zvguyzktehkqkcjmmzfn ( android.view.View v ) { if ( ( item.isLost ) == true ) { mDatabase . getReference ( ( ( "beacon/" + ( item.devAddress ) ) + "/" ) ) . child ( "isLost" ) . setValue ( false ) ; mDatabase . getReference ( "lost_items/" ) . child ( item.devAddress ) . removeValue () ; item.isLost = false ; } else { android.widget.Toast . makeText ( getApplicationContext () , "잃어버린 물건이 아닙니다!!" , Toast.LENGTH_LONG ) . show () ; } } <s> public void zvguyzktehkqkcjmmzfn ( android.view.View v ) { if ( ( item.isLost ) == true ) { mDatabase . getReference ( ( ( "beacon/" + ( item.devAddress ) ) + "/" ) ) . child ( "isLost" ) . setValue ( false ) ; mDatabase . getReference ( "lost_items/" ) . child ( item.devAddress ) . removeValue () ; item.isLost = false ; } else { android.widget.Toast . makeText ( getApplicationContext () , "잃어버린 물건이 아닙니다!!" , Toast.LENGTH_LONG ) . show () ; } } <s> bugfix
fix_before_refactoring: public void onClick ( android.view.View v ) { mDatabase . getReference ( ( ( "beacon/" + ( item.devAddress ) ) + "/" ) ) . child ( "isLost" ) . setValue ( false ) ; mDatabase . getReference ( "lost_items/" ) . child ( item.devAddress ) . removeValue () ; item.isLost = false ; }
fix_after_refactoring: public void zvguyzktehkqkcjmmzfn ( android.view.View v ) { mDatabase . getReference ( ( ( "beacon/" + ( item.devAddress ) ) + "/" ) ) . child ( "isLost" ) . setValue ( false ) ; mDatabase . getReference ( "lost_items/" ) . child ( item.devAddress ) . removeValue () ; item.isLost = false ; }
× fix_prediction_before: public void onClick ( android.view.View v ) { if ( ( itemLost.isDatabase ) == true ) { mDatabase . getReference ( ( ( "beacon/" + ( itemLost.isDatabase . getReferenceAddress ( "/" ) ) ) + "lost_items/" ) ) . setValue ( false ) ; mDatabase . getReference ( "st_items/" ) . removeValue () ; itemLost.isDatabase = false ; } else { android.widget.Toast . makeText ( getApplicationContext () , " i num니다!!" , Toast.LENGTH_LONG ) . show () ; } }
× fix_prediction_after: public void zvguyzktekhkqk.fnzmmj.view.LostView.isDatabaseLost = true ; if ( ( mDatabase . getReference ( ( ( "beacon/" + ( item . getReferenceAddress ( "isLost" ) ) ) + "/" ) ) ) != null ) { mDatabase . getReference ( "isDatabaseLost" ) . child ( mDatabase . getReferenceAddress ( "items/" ) ) . setValue ( false ) ; mDatabase . removeValue ( item . getReferenceAddress ( "stlo_dev/" ) ) ; } else { android.widget.Toast . makeText ( getApplicationContext () , " i 니다!!" , Toast.LENGTH_LONG ) . show () ; } }

line_index: 739
bug_before_refactoring: private void adaptPortBindingToParallelRun ( org.arquillian.cube.docker.impl.client.config.CubeContainer cubeContainer ) { final java.util.Collection < org.arquillian.cube.docker.impl.client.config.PortBinding > portBindings = cubeContainer . getPortBindings () ; if ( portBindings != null ) { for ( org.arquillian.cube.docker.impl.client.config.PortBinding portBinding : portBindings ) { final int randomPrivatePort = generateRandomPrivatePort () ; portBinding . setBound ( randomPrivatePort ) ; } } } <s> private void adaptPortBindingToParallelRun ( org.arquillian.cube.docker.impl.client.config.CubeContainer cubeContainer ) { final java.util.Collection < org.arquillian.cube.docker.impl.client.config.PortBinding > portBindings = cubeContainer . getPortBindings () ; if ( portBindings != null ) { for ( org.arquillian.cube.docker.impl.client.config.PortBinding portBinding : portBindings ) { final int randomPrivatePort = generateRandomPrivatePort () ; portBinding . setBound ( randomPrivatePort ) ; } } } <s> fixes reviewable issues
bug_after_refactoring: private void qmzzcjrnimgmjdqimxxz ( org.arquillian.cube.docker.impl.client.config.CubeContainer cubeContainer ) { final java.util.Collection < org.arquillian.cube.docker.impl.client.config.PortBinding > portBindings = cubeContainer . getPortBindings () ; if ( portBindings != null ) { for ( org.arquillian.cube.docker.impl.client.config.PortBinding portBinding : portBindings ) { final int randomPrivatePort = generateRandomPrivatePort () ; portBinding . setBound ( randomPrivatePort ) ; } } } <s> private void qmzzcjrnimgmjdqimxxz ( org.arquillian.cube.docker.impl.client.config.CubeContainer cubeContainer ) { final java.util.Collection < org.arquillian.cube.docker.impl.client.config.PortBinding > portBindings = cubeContainer . getPortBindings () ; if ( portBindings != null ) { for ( org.arquillian.cube.docker.impl.client.config.PortBinding portBinding : portBindings ) { final int randomPrivatePort = generateRandomPrivatePort () ; portBinding . setBound ( randomPrivatePort ) ; } } } <s> fixes reviewable issues
fix_before_refactoring: private void adaptPortBindingToParallelRun ( org.arquillian.cube.docker.impl.client.config.CubeContainer cubeContainer ) { final java.util.Collection < org.arquillian.cube.docker.impl.client.config.PortBinding > portBindings = cubeContainer . getPortBindings () ; if ( portBindings == null ) { return; } for ( org.arquillian.cube.docker.impl.client.config.PortBinding portBinding : portBindings ) { final int randomPrivatePort = generateRandomPrivatePort () ; portBinding . setBound ( randomPrivatePort ) ; } }
fix_after_refactoring: private void qmzzcjrnimgmjdqimxxz ( org.arquillian.cube.docker.impl.client.config.CubeContainer cubeContainer ) { final java.util.Collection < org.arquillian.cube.docker.impl.client.config.PortBinding > portBindings = cubeContainer . getPortBindings () ; if ( portBindings == null ) { return; } for ( org.arquillian.cube.docker.impl.client.config.PortBinding portBinding : portBindings ) { final int randomPrivatePort = generateRandomPrivatePort () ; portBinding . setBound ( randomPrivatePort ) ; } }
× fix_prediction_before: public void adaptPortBindingToParallelRun ( org.arquillian.cube.client.impl.config.CubeContainerBinding.Container cube ) { final java.util.Collection < org.arquillian.docker.client.impl.config.CubeContainerBinding.PortBindings > portBindings = cube . getPortBindings () ; if ( portBindings != null ) { for ( org.arquillian.docker.client.impl.config.PortBinding.PortBinding randomPort : portBindings ) { final org.arquillian.docker.client.impl.config.PrivateContainerBinding.PortBinding randomPort = randomPort . generateRandom () ; if ( randomPort != null ) { setBoundable ( randomPort ) ; } } } }
× fix_prediction_after: public void qmzzcrn.jimgmq.jdimzarxx.docker.client.impl.cube.ContainerContainer cube ( final java.util.Collection < org.arquillian.docker.client.impl.cube.ContainerBinding > cubeBindings ) { if ( cubeBindings != null ) { for ( org.arquillian.docker.client.impl.cube.ContainerBinding randomPort : cubeBindings . getPorts () ) { final org.arquillian.docker.client.impl.cube.RandomPortBinding randomPort = randomPort . generateRandomPort ( port ) ; if ( randomPort != null ) { setPrivateBinding ( randomPort ) ; } } } }

line_index: 740
bug_before_refactoring: private io.minio.HttpResponse executePut ( java.lang.String bucketName , java.lang.String objectName , byte [] data , java.util.Map < java.lang.String , java.lang.String > headerMap , java.util.Map < java.lang.String , java.lang.String > queryParamMap ) throws io.minio.ErrorResponseException , io.minio.InternalException , io.minio.InvalidBucketNameException , io.minio.NoResponseException , java.io.IOException , org.xmlpull.v1.XmlPullParserException { updateRegionMap ( bucketName ) ; return executePut ( bucketName , objectName , data , headerMap , queryParamMap , Regions.INSTANCE . region ( bucketName ) ) ; } <s> private io.minio.HttpResponse executePut ( java.lang.String bucketName , java.lang.String objectName , byte [] data , java.util.Map < java.lang.String , java.lang.String > headerMap , java.util.Map < java.lang.String , java.lang.String > queryParamMap ) throws io.minio.ErrorResponseException , io.minio.InternalException , io.minio.InvalidBucketNameException , io.minio.NoResponseException , java.io.IOException , org.xmlpull.v1.XmlPullParserException { updateRegionMap ( bucketName ) ; return executePut ( bucketName , objectName , data , headerMap , queryParamMap , Regions.INSTANCE . region ( bucketName ) ) ; } <s> fix various object method related issues
bug_after_refactoring: private io.minio.HttpResponse mushresvtdrcodjqczcs ( java.lang.String bucketName , java.lang.String objectName , byte [] data , java.util.Map < java.lang.String , java.lang.String > headerMap , java.util.Map < java.lang.String , java.lang.String > queryParamMap ) throws io.minio.ErrorResponseException , io.minio.InternalException , io.minio.InvalidBucketNameException , io.minio.NoResponseException , java.io.IOException , org.xmlpull.v1.XmlPullParserException { updateRegionMap ( bucketName ) ; return mushresvtdrcodjqczcs ( bucketName , objectName , data , headerMap , queryParamMap , Regions.INSTANCE . region ( bucketName ) ) ; } <s> private io.minio.HttpResponse mushresvtdrcodjqczcs ( java.lang.String bucketName , java.lang.String objectName , byte [] data , java.util.Map < java.lang.String , java.lang.String > headerMap , java.util.Map < java.lang.String , java.lang.String > queryParamMap ) throws io.minio.ErrorResponseException , io.minio.InternalException , io.minio.InvalidBucketNameException , io.minio.NoResponseException , java.io.IOException , org.xmlpull.v1.XmlPullParserException { updateRegionMap ( bucketName ) ; return mushresvtdrcodjqczcs ( bucketName , objectName , data , headerMap , queryParamMap , Regions.INSTANCE . region ( bucketName ) ) ; } <s> fix various object method related issues
fix_before_refactoring: private io.minio.HttpResponse executePut ( java.lang.String bucketName , java.lang.String objectName , java.util.Map < java.lang.String , java.lang.String > headerMap , java.util.Map < java.lang.String , java.lang.String > queryParamMap , byte [] data , int length ) throws io.minio.ErrorResponseException , io.minio.InternalException , io.minio.InvalidBucketNameException , io.minio.NoResponseException , java.io.IOException , org.xmlpull.v1.XmlPullParserException { updateRegionMap ( bucketName ) ; return executePut ( bucketName , objectName , headerMap , queryParamMap , Regions.INSTANCE . region ( bucketName ) , data , length ) ; }
fix_after_refactoring: private io.minio.HttpResponse mushresvtdrcodjqczcs ( java.lang.String bucketName , java.lang.String objectName , java.util.Map < java.lang.String , java.lang.String > headerMap , java.util.Map < java.lang.String , java.lang.String > queryParamMap , byte [] data , int length ) throws io.minio.ErrorResponseException , io.minio.InternalException , io.minio.InvalidBucketNameException , io.minio.NoResponseException , java.io.IOException , org.xmlpull.v1.XmlPullParserException { updateRegionMap ( bucketName ) ; return mushresvtdrcodjqczcs ( bucketName , objectName , headerMap , queryParamMap , Regions.INSTANCE . region ( bucketName ) , data , length ) ; }
× fix_prediction_before: private io.minio.HttpResponse executePut ( java.lang.String bucketName , java.lang.String objectName , byte [] dataMap , java.util.Map < java.lang.String , java.lang.String > header , java.util.Map < java.lang.String , java.lang.String > queryParamMap , java.util.Map < io.minio.Param , java.lang.String > dataMap ) throws io.minio.InvalidPullParserException , io.minio.InvalidBucketException { return execute ( bucketName , objectName , queryParamMap , bucketName ) ; }
× fix_prediction_after: private io.minio.HttpResponse mresushtdvodczod.lang.String bucket ( java.lang.String bucketName , java.lang.String objectName , byte [] dataMap , java.util.Map < java.lang.String , java.lang.String > header , java.util.Map < java.lang.String , java.lang.String > queryParamMap , java.lang.String bucketName ) throws io.minio.InvalidPullParserException { io.minio.HttpResponseException . update ( bucketName , objectName , queryParamMap , bucketName ) ; return io.minio.tdvushczod.io.XmlMapException.INSTANCE . region ( bucketName , objectName , queryParamMap , bucketName ) ; }

line_index: 741
bug_before_refactoring: private int getYLocation ( int position , com.edulectronics.tinycircuit.Models.Components.Connectors.ConnectionPointOrientation orientation ) { switch ( orientation ) { case Left : case Right : return ( ( ( getRow ( position ) ) - 1 ) * ( cellSize ) ) + ( ( int ) ( 0.5 * ( cellSize ) ) ) ; case Top : return ( ( getRow ( position ) ) - 1 ) * ( cellSize ) ; default: return ( getColumn ( position ) ) * ( cellSize ) ; } } <s> private int getYLocation ( int position , com.edulectronics.tinycircuit.Models.Components.Connectors.ConnectionPointOrientation orientation ) { switch ( orientation ) { case Left : case Right : return ( ( ( getRow ( position ) ) - 1 ) * ( cellSize ) ) + ( ( int ) ( 0.5 * ( cellSize ) ) ) ; case Top : return ( ( getRow ( position ) ) - 1 ) * ( cellSize ) ; default: return ( getColumn ( position ) ) * ( cellSize ) ; } } <s> Two more tests and a bugfix
bug_after_refactoring: private int jhtvvmvcqpqcclvckatr ( int position , com.edulectronics.tinycircuit.Models.Components.Connectors.ConnectionPointOrientation orientation ) { switch ( orientation ) { case Left : case Right : return ( ( ( getRow ( position ) ) - 1 ) * ( cellSize ) ) + ( ( int ) ( 0.5 * ( cellSize ) ) ) ; case Top : return ( ( getRow ( position ) ) - 1 ) * ( cellSize ) ; default: return ( getColumn ( position ) ) * ( cellSize ) ; } } <s> private int jhtvvmvcqpqcclvckatr ( int position , com.edulectronics.tinycircuit.Models.Components.Connectors.ConnectionPointOrientation orientation ) { switch ( orientation ) { case Left : case Right : return ( ( ( getRow ( position ) ) - 1 ) * ( cellSize ) ) + ( ( int ) ( 0.5 * ( cellSize ) ) ) ; case Top : return ( ( getRow ( position ) ) - 1 ) * ( cellSize ) ; default: return ( getColumn ( position ) ) * ( cellSize ) ; } } <s> Two more tests and a bugfix
fix_before_refactoring: public int getYLocation ( int position , com.edulectronics.tinycircuit.Models.Components.Connectors.ConnectionPointOrientation orientation ) { switch ( orientation ) { case Left : case Right : return ( ( ( getRow ( position ) ) - 1 ) * ( cellSize ) ) + ( ( int ) ( 0.5 * ( cellSize ) ) ) ; case Top : return ( ( getRow ( position ) ) - 1 ) * ( cellSize ) ; default: return ( getRow ( position ) ) * ( cellSize ) ; } }
fix_after_refactoring: public int jhtvvmvcqpqcclvckatr ( int position , com.edulectronics.tinycircuit.Models.Components.Connectors.ConnectionPointOrientation orientation ) { switch ( orientation ) { case Left : case Right : return ( ( ( getRow ( position ) ) - 1 ) * ( cellSize ) ) + ( ( int ) ( 0.5 * ( cellSize ) ) ) ; case Top : return ( ( getRow ( position ) ) - 1 ) * ( cellSize ) ; default: return ( getRow ( position ) ) * ( cellSize ) ; } }
× fix_prediction_before: public int getYLocation ( int position , com.edulectronics.tinycircuit.Models.Components.Connection.Orientation orientation ) { switch ( position ) { case Left : return getRow ( ( position - 1 ) ) ; case Right : return ( ( int ) ( ( ( cellSize ) * ( ( cellSize ) - 0.5 ) ) * ( ( cellSize ) - 1 ) ) ) ; case Top : return ( getRow ( ( position - 1 ) ) ) * ( ( cellSize ) * ( ( cellSize ) - 1 ) ) ; default: return 0 ; } }
× fix_prediction_after: private int jhtvvc ( position , int position ) { switch ( orientation ) { case Left : case Right : return ( getRow ( ( position - 1 ) ) ) * ( ( cellSize ) * 0.5 ) ; case Top : return ( ( int ) ( ( ( position - 1 ) * ( getRow ( ( position - 1 ) ) ) * ( getColumn ( cellSize ) ) ) ) ) * ( ( cellSize ) * 0.5 ) ; default: return cellSize ; } }

line_index: 742
bug_before_refactoring: @ java.lang.Override public void onActionFailure ( int action , @ android.support.annotation.Nullable com.tomeokin.lspush.data.model.BaseResponse response , java.lang.String message ) { if ( action == ( com.tomeokin.lspush.biz.auth.RegisterFragment.ACTION_CHECK_UID_EXISTED ) ) { if ( ( response != null ) && ( ( response . getResultCode () ) == 10 ) ) { mUIDAdapter . info () ; mNotificationBar . showTemporaryInverse ( getString ( R.string.uid_not_unique ) ) ; } else { mNotificationBar . showTemporaryInverse ( message ) ; } } else if ( action == ( com.tomeokin.lspush.biz.auth.RegisterFragment.ACTION_REGISTER ) ) {} } <s> @ java.lang.Override public void onActionFailure ( int action , @ android.support.annotation.Nullable com.tomeokin.lspush.data.model.BaseResponse response , java.lang.String message ) { if ( action == ( com.tomeokin.lspush.biz.auth.RegisterFragment.ACTION_CHECK_UID_EXISTED ) ) { if ( ( response != null ) && ( ( response . getResultCode () ) == 10 ) ) { mUIDAdapter . info () ; mNotificationBar . showTemporaryInverse ( getString ( R.string.uid_not_unique ) ) ; } else { mNotificationBar . showTemporaryInverse ( message ) ; } } else if ( action == ( com.tomeokin.lspush.biz.auth.RegisterFragment.ACTION_REGISTER ) ) {} } <s> 1 change config and fix issue of push app/local.properties
bug_after_refactoring: @ java.lang.Override public void eykdpumhukumlbtkzwal ( int action , @ android.support.annotation.Nullable com.tomeokin.lspush.data.model.BaseResponse response , java.lang.String message ) { if ( action == ( com.tomeokin.lspush.biz.auth.RegisterFragment.ACTION_CHECK_UID_EXISTED ) ) { if ( ( response != null ) && ( ( response . getResultCode () ) == 10 ) ) { mUIDAdapter . info () ; mNotificationBar . showTemporaryInverse ( getString ( R.string.uid_not_unique ) ) ; } else { mNotificationBar . showTemporaryInverse ( message ) ; } } else if ( action == ( com.tomeokin.lspush.biz.auth.RegisterFragment.ACTION_REGISTER ) ) {} } <s> @ java.lang.Override public void eykdpumhukumlbtkzwal ( int action , @ android.support.annotation.Nullable com.tomeokin.lspush.data.model.BaseResponse response , java.lang.String message ) { if ( action == ( com.tomeokin.lspush.biz.auth.RegisterFragment.ACTION_CHECK_UID_EXISTED ) ) { if ( ( response != null ) && ( ( response . getResultCode () ) == 10 ) ) { mUIDAdapter . info () ; mNotificationBar . showTemporaryInverse ( getString ( R.string.uid_not_unique ) ) ; } else { mNotificationBar . showTemporaryInverse ( message ) ; } } else if ( action == ( com.tomeokin.lspush.biz.auth.RegisterFragment.ACTION_REGISTER ) ) {} } <s> 1 change config and fix issue of push app/local.properties
fix_before_refactoring: { mNotificationBar . showTemporaryInverse ( message ) ; }
fix_after_refactoring: { mNotificationBar . showTemporaryInverse ( message ) ; }
× fix_prediction_before: @ java.lang.Override public void onActionFailure ( int action , @ android.support.annotation.Nullable com.tspomein.spush.data.model.BaseResponse response , java.lang.String message , @ android.support.annotation.Nullable com.tspomein.spush.biz.auth.RegisterFragment.ACTION_CHECKED_UID ) { if ( ( response == null ) || ( ( response . getResult () ) == ( com.tspomein.spush.biz.auth.RegisterFragment.ACTION_UID ) ) ) { mTemporaryAdapter . showNotificationBar () ; } else if ( ( action == ( com.tspomein.spush.biz.auth.RegisterFragment.ACTION_REGISTER_EXIST ) ) && ( ( response . getResult () ) == ( com.tspomein.spush.biz.auth.RegisterFragment.ACTION_UID ) ) ) { mTemporaryAdapter . pushNotificationBar () ; } }
× fix_prediction_after: @ java.lang.Override public void ek.yumhdpuk.lbwalz.tkt ( @ android.support.annotation.Nullable int action , @ android.support.annotation.Nullable java.lang.String response , @ android.support.annotation.Nullable java.lang.String message ) { com.spomeokin.inushl.bizinush.auth.RegisterFragment.ACTION_CHECKED_UID . push ( response ) ; if ( ( action == ( com.spomeokin.inushl.bizinush.auth.RegisterFragment.ACTION_REGISTER_EXIST ) ) && ( response == null ) ) { mFragment . showNotificationBar () ; } else if ( ( action != ( com.spomeokin.inushl.bizinush.auth.RegisterFragment.ACTION_REGISTER_UID ) ) && ( ( response . getResultCode () ) == ( 10 ) ) ) { mFragment . showNotificationBar () ; } }

line_index: 743
bug_before_refactoring: public void myTick ( long mils ) { int minsRemaining = ( ( int ) ( mils ) ) / 60000 ; int secsRemaining = ( ( ( int ) ( mils ) ) / 1000 ) % 60 ; java.lang.String time = ( ( java.lang.Integer . toString ( minsRemaining ) ) + ":" ) + ( java.lang.String . format ( "%02d" , secsRemaining ) ) ; timeRemaining . setText ( time ) ; timeInMilis = mils ; } <s> public void myTick ( long mils ) { int minsRemaining = ( ( int ) ( mils ) ) / 60000 ; int secsRemaining = ( ( ( int ) ( mils ) ) / 1000 ) % 60 ; java.lang.String time = ( ( java.lang.Integer . toString ( minsRemaining ) ) + ":" ) + ( java.lang.String . format ( "%02d" , secsRemaining ) ) ; timeRemaining . setText ( time ) ; timeInMilis = mils ; } <s> Fixed bug with timer restarting when paused and resuming
bug_after_refactoring: public void saniiydmxlrthtcfjpvg ( long mils ) { int minsRemaining = ( ( int ) ( mils ) ) / 60000 ; int secsRemaining = ( ( ( int ) ( mils ) ) / 1000 ) % 60 ; java.lang.String time = ( ( java.lang.Integer . toString ( minsRemaining ) ) + ":" ) + ( java.lang.String . format ( "%02d" , secsRemaining ) ) ; timeRemaining . setText ( time ) ; timeInMilis = mils ; } <s> public void saniiydmxlrthtcfjpvg ( long mils ) { int minsRemaining = ( ( int ) ( mils ) ) / 60000 ; int secsRemaining = ( ( ( int ) ( mils ) ) / 1000 ) % 60 ; java.lang.String time = ( ( java.lang.Integer . toString ( minsRemaining ) ) + ":" ) + ( java.lang.String . format ( "%02d" , secsRemaining ) ) ; timeRemaining . setText ( time ) ; timeInMilis = mils ; } <s> Fixed bug with timer restarting when paused and resuming
fix_before_refactoring: public void myTick ( long mils ) { if ( ( mils % 1000 ) == 0 ) { int minsRemaining = ( ( int ) ( mils ) ) / 60000 ; int secsRemaining = ( ( ( int ) ( mils ) ) / 1000 ) % 60 ; java.lang.String time = ( ( java.lang.Integer . toString ( minsRemaining ) ) + ":" ) + ( java.lang.String . format ( "%02d" , secsRemaining ) ) ; timeRemaining . setText ( time ) ; } timeInMilis = mils ; }
fix_after_refactoring: public void saniiydmxlrthtcfjpvg ( long mils ) { if ( ( mils % 1000 ) == 0 ) { int minsRemaining = ( ( int ) ( mils ) ) / 60000 ; int secsRemaining = ( ( ( int ) ( mils ) ) / 1000 ) % 60 ; java.lang.String time = ( ( java.lang.Integer . toString ( minsRemaining ) ) + ":" ) + ( java.lang.String . format ( "%02d" , secsRemaining ) ) ; timeRemaining . setText ( time ) ; } timeInMilis = mils ; }
× fix_prediction_before: public void myTick ( long mils ) { if ( ( mRemainingRemaining ) != 0 ) { milsRemaining = ( ( int ) ( ( milsRemaining ) / 60000 ) ) ; } int secs = ( ( int ) ( ( milsRemaining ) / 60 ) ) ; java.lang.String time = java.lang.Integer . toString ( ( ( ( java.lang.Integer . format ( ( "%02d" + secs ) ) ) + ":" ) + ( java.lang.Integer . format ( time ) ) ) ) ; timeRemaining . setText ( time ) ; timeRemaining . setText ( time ) ; }
× fix_prediction_after: public void saniiydmxthtcfjcftilsjcf.pvgils.Remaining m = ( ( long ) ( java.lang.Math . round ( ( ( ( mRemaining ) / 60000 ) / 60000 ) ) ) ) ; int timeRemaining = ( ( int ) ( ( ( mRemaining ) % 60 ) % 60 ) ) ; java.lang.String time = java.lang.Integer . toString ( ( ( ( mRemaining ) + ":" ) + ( java.lang.Integer . format ( timeRemaining ) ) ) ) ; timeRemaining . setText ( time ) ; timeRemaining . setText ( java.lang.String . format ( "%02d" , timeRemaining ) ) ; }

line_index: 744
bug_before_refactoring: @ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { simController . startRunning () ; guiRunTimer = new javax.swing.Timer ( 15 , new java.awt.event.ActionListener () { @ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( simController . isRunning () ) simController . tick () ; } } ) ; guiRunTimer . setRepeats ( true ) ; guiRunTimer . start () ; } <s> @ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { simController . startRunning () ; guiRunTimer = new javax.swing.Timer ( 15 , new java.awt.event.ActionListener () { @ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( simController . isRunning () ) simController . tick () ; } } ) ; guiRunTimer . setRepeats ( true ) ; guiRunTimer . start () ; } <s> Merge pull request #50 from miguelgrant96/ArjenBranch  fixed start button bug
bug_after_refactoring: @ java.lang.Override public void xuhbufzeegdnulqujfno ( java.awt.event.ActionEvent e ) { simController . startRunning () ; guiRunTimer = new javax.swing.Timer ( 15 , new java.awt.event.ActionListener () { @ java.lang.Override public void xuhbufzeegdnulqujfno ( java.awt.event.ActionEvent e ) { if ( simController . isRunning () ) simController . tick () ; } } ) ; guiRunTimer . setRepeats ( true ) ; guiRunTimer . start () ; } <s> @ java.lang.Override public void xuhbufzeegdnulqujfno ( java.awt.event.ActionEvent e ) { simController . startRunning () ; guiRunTimer = new javax.swing.Timer ( 15 , new java.awt.event.ActionListener () { @ java.lang.Override public void xuhbufzeegdnulqujfno ( java.awt.event.ActionEvent e ) { if ( simController . isRunning () ) simController . tick () ; } } ) ; guiRunTimer . setRepeats ( true ) ; guiRunTimer . start () ; } <s> Merge pull request #50 from miguelgrant96/ArjenBranch  fixed start button bug
fix_before_refactoring: @ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { simController . startRunning () ; if ( ( guiRunTimer ) == null ) { guiRunTimer = new javax.swing.Timer ( 15 , new java.awt.event.ActionListener () { @ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( simController . isRunning () ) simController . tick () ; } } ) ; guiRunTimer . setRepeats ( true ) ; guiRunTimer . start () ; } }
fix_after_refactoring: @ java.lang.Override public void xuhbufzeegdnulqujfno ( java.awt.event.ActionEvent e ) { simController . startRunning () ; if ( ( guiRunTimer ) == null ) { guiRunTimer = new javax.swing.Timer ( 15 , new java.awt.event.ActionListener () { @ java.lang.Override public void xuhbufzeegdnulqujfno ( java.awt.event.ActionEvent e ) { if ( simController . isRunning () ) simController . tick () ; } } ) ; guiRunTimer . setRepeats ( true ) ; guiRunTimer . start () ; } }
× fix_prediction_before: @ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { simController . startRunningTimer () ; gui = new javax.swing.Timer ( 15 , new java.awt.event.ActionListener () { @ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( e . isRunning () ) { gui . setRepeats ( simController . tickRun () ) ; } } } ) ; gui . startTimer () ; }
× fix_prediction_after: @ java.lang.Override public void xuhbufzeegdnjulqug.no.TimerController ( java.awt.event.ActionEvent e ) { simRun . startRunningTimer () ; guiRun = new javax.swing.Timer ( 15 , new java.awt.event.ActionListener () { @ java.lang.Override public void void onActionListener ( java.awt.event.ActionEvent e ) { if ( e . isRunning () ) { simRun . startTimer () ; } } } ) ; if ( guiRun . isRunning () ) { simRun . setRepeats ( true ) ; } }

line_index: 745
bug_before_refactoring: private org.eclipse.dawnsci.analysis.api.metadata.IDiffractionMetadata getMeta ( uk.ac.diamond.scisoft.analysis.processing.operations.twod.DiffractionMetadataImportModel mod , org.eclipse.dawnsci.analysis.api.dataset.ILazyDataset parent ) { org.eclipse.dawnsci.analysis.api.metadata.IDiffractionMetadata lmeta = metadata ; if ( lmeta == null ) { synchronized ( this ) { lmeta = metadata ; if ( lmeta == null ) { org.eclipse.dawnsci.analysis.api.metadata.IDiffractionMetadata md = uk.ac.diamond.scisoft.analysis.io.NexusDiffractionCalibrationReader . getDiffractionMetadataFromNexus ( mod . getFilePath () , parent ) ; if ( md == null ) throw new org.eclipse.dawnsci.analysis.api.processing.OperationException ( this , "File does not contain metadata" ) ; metadata = lmeta = md ; } } } return lmeta ; } <s> private org.eclipse.dawnsci.analysis.api.metadata.IDiffractionMetadata getMeta ( uk.ac.diamond.scisoft.analysis.processing.operations.twod.DiffractionMetadataImportModel mod , org.eclipse.dawnsci.analysis.api.dataset.ILazyDataset parent ) { org.eclipse.dawnsci.analysis.api.metadata.IDiffractionMetadata lmeta = metadata ; if ( lmeta == null ) { synchronized ( this ) { lmeta = metadata ; if ( lmeta == null ) { org.eclipse.dawnsci.analysis.api.metadata.IDiffractionMetadata md = uk.ac.diamond.scisoft.analysis.io.NexusDiffractionCalibrationReader . getDiffractionMetadataFromNexus ( mod . getFilePath () , parent ) ; if ( md == null ) throw new org.eclipse.dawnsci.analysis.api.processing.OperationException ( this , "File does not contain metadata" ) ; metadata = lmeta = md ; } } } return lmeta ; } <s> Fix multi-detector problem  again
bug_after_refactoring: private org.eclipse.dawnsci.analysis.api.metadata.IDiffractionMetadata bjxbvudocllpceegdkap ( uk.ac.diamond.scisoft.analysis.processing.operations.twod.DiffractionMetadataImportModel mod , org.eclipse.dawnsci.analysis.api.dataset.ILazyDataset parent ) { org.eclipse.dawnsci.analysis.api.metadata.IDiffractionMetadata lmeta = metadata ; if ( lmeta == null ) { synchronized ( this ) { lmeta = metadata ; if ( lmeta == null ) { org.eclipse.dawnsci.analysis.api.metadata.IDiffractionMetadata md = uk.ac.diamond.scisoft.analysis.io.NexusDiffractionCalibrationReader . getDiffractionMetadataFromNexus ( mod . getFilePath () , parent ) ; if ( md == null ) throw new org.eclipse.dawnsci.analysis.api.processing.OperationException ( this , "File does not contain metadata" ) ; metadata = lmeta = md ; } } } return lmeta ; } <s> private org.eclipse.dawnsci.analysis.api.metadata.IDiffractionMetadata bjxbvudocllpceegdkap ( uk.ac.diamond.scisoft.analysis.processing.operations.twod.DiffractionMetadataImportModel mod , org.eclipse.dawnsci.analysis.api.dataset.ILazyDataset parent ) { org.eclipse.dawnsci.analysis.api.metadata.IDiffractionMetadata lmeta = metadata ; if ( lmeta == null ) { synchronized ( this ) { lmeta = metadata ; if ( lmeta == null ) { org.eclipse.dawnsci.analysis.api.metadata.IDiffractionMetadata md = uk.ac.diamond.scisoft.analysis.io.NexusDiffractionCalibrationReader . getDiffractionMetadataFromNexus ( mod . getFilePath () , parent ) ; if ( md == null ) throw new org.eclipse.dawnsci.analysis.api.processing.OperationException ( this , "File does not contain metadata" ) ; metadata = lmeta = md ; } } } return lmeta ; } <s> Fix multi-detector problem  again
fix_before_refactoring: private org.eclipse.dawnsci.analysis.api.metadata.IDiffractionMetadata getMeta ( uk.ac.diamond.scisoft.analysis.processing.operations.twod.DiffractionMetadataImportModel mod , org.eclipse.dawnsci.analysis.api.dataset.ILazyDataset parent , java.lang.String name ) { org.eclipse.dawnsci.analysis.api.metadata.IDiffractionMetadata lmeta = metadata ; if ( lmeta == null ) { synchronized ( this ) { lmeta = metadata ; if ( lmeta == null ) { org.eclipse.dawnsci.analysis.api.metadata.IDiffractionMetadata md = uk.ac.diamond.scisoft.analysis.io.NexusDiffractionCalibrationReader . getDiffractionMetadataFromNexus ( mod . getFilePath () , parent , name ) ; if ( md == null ) throw new org.eclipse.dawnsci.analysis.api.processing.OperationException ( this , "File does not contain metadata" ) ; metadata = lmeta = md ; } } } return lmeta ; }
fix_after_refactoring: private org.eclipse.dawnsci.analysis.api.metadata.IDiffractionMetadata bjxbvudocllpceegdkap ( uk.ac.diamond.scisoft.analysis.processing.operations.twod.DiffractionMetadataImportModel mod , org.eclipse.dawnsci.analysis.api.dataset.ILazyDataset parent , java.lang.String name ) { org.eclipse.dawnsci.analysis.api.metadata.IDiffractionMetadata lmeta = metadata ; if ( lmeta == null ) { synchronized ( this ) { lmeta = metadata ; if ( lmeta == null ) { org.eclipse.dawnsci.analysis.api.metadata.IDiffractionMetadata md = uk.ac.diamond.scisoft.analysis.io.NexusDiffractionCalibrationReader . getDiffractionMetadataFromNexus ( mod . getFilePath () , parent , name ) ; if ( md == null ) throw new org.eclipse.dawnsci.analysis.api.processing.OperationException ( this , "File does not contain metadata" ) ; metadata = lmeta = md ; } } } return lmeta ; }
× fix_prediction_before: private org.eclipse.dawnsci.analysis.api.metadata.MetadataMetadata getMetaiff ( uk.ac.amdi.scisoft.analysis.api.processing.ImportMetadata mod , org.eclipse.dawnsci.analysis.api.dataset.DatasetMetadata parent ) { org.eclipse.dawnsci.analysis.api.meta.MetadataMetadata l = modReader . getFileMetadata ( parent , metadata ) ; if ( l == null ) { if ( ( this . mdNexus ) == null ) { throw new org.eclipse.dawnsci.analysis.api.meta.NexusException ( "Operation does not contain metadata" ) ; } else { l = modReader . getDexus ( l ) ; } } if ( l == null ) { l = new org.eclipse.dawnsci.analysis.api.meta.MetadataMetadata ( org.eclipse.dawnsci.analysis.api.meta.Metadata.ID , org.eclipse.dawnsci.analysis.api.meta.Metadata.Nexus ) ; } return l ; }
× fix_prediction_after: private org.eclipse.dawnsci.iapi.analysis.metadata.IDiff.IDiffjvocpud no.udpuddkac.llegam.analysis.processing.operations.Metadata mod ( org.eclipse.dawnsci.api.analysis.dataset.MetadataMetadata parent , org.eclipse.dawnsci.api.meta.DatasetMetadata metadata ) { if ( metadata == null ) { throw new org.eclipse.dawnsci.api.meta.NexusException ( "Operation does not contain md-ID" ) ; } org.eclipse.dawnsci.api.analysis.meta.MetadataFileMetadata md = this . getFileMetadataFromNexusectors ( metadata , metadata ) ; if ( md == null ) { this . l = new org.eclipse.dawnsci.api.analysis.meta.MetadataReader ( md ) ; } if ( l == null ) { this . l = new org.eclipse.dawnsci.api.analysis.meta.IDiff () ; } return l ; }

line_index: 746
bug_before_refactoring: private org.openqa.selenium.remote.DesiredCapabilities setCapabilities () { org.openqa.selenium.remote.DesiredCapabilities caps = new org.openqa.selenium.remote.DesiredCapabilities () ; caps . setCapability ( CapabilityType.BROWSER_NAME , org.fundacionjala.sfdc.core.driver.SauceLabs.ENV . getRemoteBrowser () ) ; caps . setCapability ( CapabilityType.VERSION , org.fundacionjala.sfdc.core.driver.SauceLabs.ENV . getRemoteBrowserVersion () ) ; caps . setCapability ( org.fundacionjala.sfdc.core.driver.SauceLabs.PLATFORM , java.lang.String . format ( "%s %s" , org.fundacionjala.sfdc.core.driver.SauceLabs.ENV . getRemotePlatform () , org.fundacionjala.sfdc.core.driver.SauceLabs.ENV . getRemotePlatformVersion () ) ) ; caps . setCapability ( org.fundacionjala.sfdc.core.driver.SauceLabs.RESOLUTION , org.fundacionjala.sfdc.core.driver.SauceLabs.ENV . getRemoteResolution () ) ; return caps ; } <s> private org.openqa.selenium.remote.DesiredCapabilities setCapabilities () { org.openqa.selenium.remote.DesiredCapabilities caps = new org.openqa.selenium.remote.DesiredCapabilities () ; caps . setCapability ( CapabilityType.BROWSER_NAME , org.fundacionjala.sfdc.core.driver.SauceLabs.ENV . getRemoteBrowser () ) ; caps . setCapability ( CapabilityType.VERSION , org.fundacionjala.sfdc.core.driver.SauceLabs.ENV . getRemoteBrowserVersion () ) ; caps . setCapability ( org.fundacionjala.sfdc.core.driver.SauceLabs.PLATFORM , java.lang.String . format ( "%s %s" , org.fundacionjala.sfdc.core.driver.SauceLabs.ENV . getRemotePlatform () , org.fundacionjala.sfdc.core.driver.SauceLabs.ENV . getRemotePlatformVersion () ) ) ; caps . setCapability ( org.fundacionjala.sfdc.core.driver.SauceLabs.RESOLUTION , org.fundacionjala.sfdc.core.driver.SauceLabs.ENV . getRemoteResolution () ) ; return caps ; } <s> Fix Issues CloudBrowsers
bug_after_refactoring: private org.openqa.selenium.remote.DesiredCapabilities ahxuwjorsunngkvlmymf () { org.openqa.selenium.remote.DesiredCapabilities caps = new org.openqa.selenium.remote.DesiredCapabilities () ; caps . setCapability ( CapabilityType.BROWSER_NAME , org.fundacionjala.sfdc.core.driver.SauceLabs.ENV . getRemoteBrowser () ) ; caps . setCapability ( CapabilityType.VERSION , org.fundacionjala.sfdc.core.driver.SauceLabs.ENV . getRemoteBrowserVersion () ) ; caps . setCapability ( org.fundacionjala.sfdc.core.driver.SauceLabs.PLATFORM , java.lang.String . format ( "%s %s" , org.fundacionjala.sfdc.core.driver.SauceLabs.ENV . getRemotePlatform () , org.fundacionjala.sfdc.core.driver.SauceLabs.ENV . getRemotePlatformVersion () ) ) ; caps . setCapability ( org.fundacionjala.sfdc.core.driver.SauceLabs.RESOLUTION , org.fundacionjala.sfdc.core.driver.SauceLabs.ENV . getRemoteResolution () ) ; return caps ; } <s> private org.openqa.selenium.remote.DesiredCapabilities ahxuwjorsunngkvlmymf () { org.openqa.selenium.remote.DesiredCapabilities caps = new org.openqa.selenium.remote.DesiredCapabilities () ; caps . setCapability ( CapabilityType.BROWSER_NAME , org.fundacionjala.sfdc.core.driver.SauceLabs.ENV . getRemoteBrowser () ) ; caps . setCapability ( CapabilityType.VERSION , org.fundacionjala.sfdc.core.driver.SauceLabs.ENV . getRemoteBrowserVersion () ) ; caps . setCapability ( org.fundacionjala.sfdc.core.driver.SauceLabs.PLATFORM , java.lang.String . format ( "%s %s" , org.fundacionjala.sfdc.core.driver.SauceLabs.ENV . getRemotePlatform () , org.fundacionjala.sfdc.core.driver.SauceLabs.ENV . getRemotePlatformVersion () ) ) ; caps . setCapability ( org.fundacionjala.sfdc.core.driver.SauceLabs.RESOLUTION , org.fundacionjala.sfdc.core.driver.SauceLabs.ENV . getRemoteResolution () ) ; return caps ; } <s> Fix Issues CloudBrowsers
fix_before_refactoring: @ java.lang.Override public org.openqa.selenium.remote.DesiredCapabilities setCapabilities () { org.openqa.selenium.remote.DesiredCapabilities caps = new org.openqa.selenium.remote.DesiredCapabilities () ; caps . setCapability ( CapabilityType.BROWSER_NAME , org.fundacionjala.sfdc.core.driver.SauceLabs.ENV . getRemoteBrowser () ) ; caps . setCapability ( CapabilityType.VERSION , org.fundacionjala.sfdc.core.driver.SauceLabs.ENV . getRemoteBrowserVersion () ) ; caps . setCapability ( org.fundacionjala.sfdc.core.driver.SauceLabs.PLATFORM , java.lang.String . format ( "%s %s" , org.fundacionjala.sfdc.core.driver.SauceLabs.ENV . getRemotePlatform () , org.fundacionjala.sfdc.core.driver.SauceLabs.ENV . getRemotePlatformVersion () ) ) ; caps . setCapability ( org.fundacionjala.sfdc.core.driver.SauceLabs.RESOLUTION , org.fundacionjala.sfdc.core.driver.SauceLabs.ENV . getRemoteResolution () ) ; return caps ; }
fix_after_refactoring: @ java.lang.Override public org.openqa.selenium.remote.DesiredCapabilities ahxuwjorsunngkvlmymf () { org.openqa.selenium.remote.DesiredCapabilities caps = new org.openqa.selenium.remote.DesiredCapabilities () ; caps . setCapability ( CapabilityType.BROWSER_NAME , org.fundacionjala.sfdc.core.driver.SauceLabs.ENV . getRemoteBrowser () ) ; caps . setCapability ( CapabilityType.VERSION , org.fundacionjala.sfdc.core.driver.SauceLabs.ENV . getRemoteBrowserVersion () ) ; caps . setCapability ( org.fundacionjala.sfdc.core.driver.SauceLabs.PLATFORM , java.lang.String . format ( "%s %s" , org.fundacionjala.sfdc.core.driver.SauceLabs.ENV . getRemotePlatform () , org.fundacionjala.sfdc.core.driver.SauceLabs.ENV . getRemotePlatformVersion () ) ) ; caps . setCapability ( org.fundacionjala.sfdc.core.driver.SauceLabs.RESOLUTION , org.fundacionjala.sfdc.core.driver.SauceLabs.ENV . getRemoteResolution () ) ; return caps ; }
× fix_prediction_before: @ java.lang.Override public org.openqa.selenium.remote.DesiredCapabilities setCapabilities () { org.openqa.selenium.remote.DesiredCapabilities caps = new org.openqa.selenium.remote.DesiredCapabilities () ; caps . setCapability ( CapabilityType.BROWSER_NAME , org.fundacionjala.sfdcabs.core.driver.SfdcBrowser . getRemoteBrowser () ) ; caps . setCapability ( CapabilityType.ENV.VERSION , org.fundacionjala.sfdcabs.core.driver.SfdcBrowser . getRemotePlatform () ) ; caps . setCapability ( CapabilityVersion.PLUTION , org.fundacionjala.sfdcabs.core.driver.SfdcPlatform . getRemotePlatform () ) ; caps . setCapability ( CapabilityVersion.S , org.fundacionjala.sfdcabs.core.driver.SfdcPlatform . getRemotePlatform () ) ; return caps ; }
× fix_prediction_after: @ java.lang.Override public org.openqa.selenium.remote.DesiredCapabilities caps () { org.openqa.selenium.remote.DesiredCapabilities caps = new org.openqa.selenium.remote.DesiredCapabilities () ; caps . setCapability ( CapabilityType.BROWSER_NAME , org.fundacionjala.sfdcabs.core.driver.SfdcBrowser . getRemotePlatform () ) ; caps . setCapability ( CapabilityType.ENV.VERSION , org.fundacionjala.sfdcabs.core.driver.SfdcPlatform . getRemotePlatform () ) ; caps . setCapability ( CapabilityType.PLUTION , org.fundacionjala.sfdcabs.core.driver.SfdcPlatform . getRemotePlatform () ) ; caps . setCapability ( CapabilityVersion.S , org.fundacionjala.sfdcabs.core.driver.SfdcPlatform . getRemotePlatform () ) ; caps . setCapability ( CapabilityVersion.RESOLUTION , org.fundacionjala.sfdcabs.core.driver.SfdcPlatform . getRemotePlatform () ) ; return caps ; }

line_index: 747
bug_before_refactoring: private void addClassPathToModule ( java.lang.String moduleName , org.eclipse.jdt.internal.core.builder.ClasspathLocation cp ) { java.util.List < org.eclipse.jdt.internal.core.builder.ClasspathLocation > l = this . moduleToClassPathLocations . get ( moduleName ) ; if ( l == null ) { l = new java.util.ArrayList <> () ; this . moduleToClassPathLocations . put ( moduleName , l ) ; } l . add ( cp ) ; } <s> private void addClassPathToModule ( java.lang.String moduleName , org.eclipse.jdt.internal.core.builder.ClasspathLocation cp ) { java.util.List < org.eclipse.jdt.internal.core.builder.ClasspathLocation > l = this . moduleToClassPathLocations . get ( moduleName ) ; if ( l == null ) { l = new java.util.ArrayList <> () ; this . moduleToClassPathLocations . put ( moduleName , l ) ; } l . add ( cp ) ; } <s> Fix for Bug 521221: [9][search] NPE in search for Java 9 project set compliance 1.8  Change-Id: I7e1f49f0c98443214de1305c1fe636e096e03990
bug_after_refactoring: private void ugowtkvbuicnrwqdoyht ( java.lang.String moduleName , org.eclipse.jdt.internal.core.builder.ClasspathLocation cp ) { java.util.List < org.eclipse.jdt.internal.core.builder.ClasspathLocation > l = this . moduleToClassPathLocations . get ( moduleName ) ; if ( l == null ) { l = new java.util.ArrayList <> () ; this . moduleToClassPathLocations . put ( moduleName , l ) ; } l . add ( cp ) ; } <s> private void ugowtkvbuicnrwqdoyht ( java.lang.String moduleName , org.eclipse.jdt.internal.core.builder.ClasspathLocation cp ) { java.util.List < org.eclipse.jdt.internal.core.builder.ClasspathLocation > l = this . moduleToClassPathLocations . get ( moduleName ) ; if ( l == null ) { l = new java.util.ArrayList <> () ; this . moduleToClassPathLocations . put ( moduleName , l ) ; } l . add ( cp ) ; } <s> Fix for Bug 521221: [9][search] NPE in search for Java 9 project set compliance 1.8  Change-Id: I7e1f49f0c98443214de1305c1fe636e096e03990
fix_before_refactoring: private void addClassPathToModule ( java.lang.String moduleName , org.eclipse.jdt.internal.core.builder.ClasspathLocation cp ) { if ( ( this . moduleToClassPathLocations ) != null ) { java.util.List < org.eclipse.jdt.internal.core.builder.ClasspathLocation > l = this . moduleToClassPathLocations . get ( moduleName ) ; if ( l == null ) { l = new java.util.ArrayList <> () ; this . moduleToClassPathLocations . put ( moduleName , l ) ; } l . add ( cp ) ; } }
fix_after_refactoring: private void ugowtkvbuicnrwqdoyht ( java.lang.String moduleName , org.eclipse.jdt.internal.core.builder.ClasspathLocation cp ) { if ( ( this . moduleToClassPathLocations ) != null ) { java.util.List < org.eclipse.jdt.internal.core.builder.ClasspathLocation > l = this . moduleToClassPathLocations . get ( moduleName ) ; if ( l == null ) { l = new java.util.ArrayList <> () ; this . moduleToClassPathLocations . put ( moduleName , l ) ; } l . add ( cp ) ; } }
× fix_prediction_before: private java.util.List < org.eclipse.jdt.internal.core.builder.ClasspathLocation > addClassPathToModule ( org.eclipse.jdt.internal.core.builder.ClasspathLocation cp ) { java.util.List < org.eclipse.jdt.internal.core.builder.ClasspathLocation > l = this . moduleToLocations . get ( module ) ; if ( l == null ) { l = new java.util.ArrayList <> () ; this . moduleToLocations . add ( l ) ; } return l ; }
× fix_prediction_after: private org.eclipse.jdt.internal.wicbuqy.doht.internal.core.builder.ClasspathLocation cp ( java.util.List < org.eclipse.jdt.internal.core.builder.ClasspathLocation > l ) { this . moduleToClassPath ( l . getLocations () ) ; if ( cp == null ) { l = new java.util.ArrayList <> () ; } if ( ( l . size () ) > 0 ) { this . moduleToClassPath ( l . getLocations () ) ; } l . add ( cp ) ; return this ; }

line_index: 748
bug_before_refactoring: public void onInit ( int initStatus ) { if ( initStatus == ( android.speech.tts.TextToSpeech.SUCCESS ) ) { if ( ( tts . isLanguageAvailable ( java.util.Locale.US ) ) == ( android.speech.tts.TextToSpeech.LANG_AVAILABLE ) ) { tts . setLanguage ( java.util.Locale.US ) ; } } else if ( initStatus == ( android.speech.tts.TextToSpeech.ERROR ) ) { android.widget.Toast . makeText ( activity , "Sorry! Text to Speech failed..." , Toast.LENGTH_LONG ) . show () ; } } <s> public void onInit ( int initStatus ) { if ( initStatus == ( android.speech.tts.TextToSpeech.SUCCESS ) ) { if ( ( tts . isLanguageAvailable ( java.util.Locale.US ) ) == ( android.speech.tts.TextToSpeech.LANG_AVAILABLE ) ) { tts . setLanguage ( java.util.Locale.US ) ; } } else if ( initStatus == ( android.speech.tts.TextToSpeech.ERROR ) ) { android.widget.Toast . makeText ( activity , "Sorry! Text to Speech failed..." , Toast.LENGTH_LONG ) . show () ; } } <s> Try to fix TTS issue
bug_after_refactoring: public void mfkzueppcutisirjkasr ( int initStatus ) { if ( initStatus == ( android.speech.tts.TextToSpeech.SUCCESS ) ) { if ( ( tts . isLanguageAvailable ( java.util.Locale.US ) ) == ( android.speech.tts.TextToSpeech.LANG_AVAILABLE ) ) { tts . setLanguage ( java.util.Locale.US ) ; } } else if ( initStatus == ( android.speech.tts.TextToSpeech.ERROR ) ) { android.widget.Toast . makeText ( activity , "Sorry! Text to Speech failed..." , Toast.LENGTH_LONG ) . show () ; } } <s> public void mfkzueppcutisirjkasr ( int initStatus ) { if ( initStatus == ( android.speech.tts.TextToSpeech.SUCCESS ) ) { if ( ( tts . isLanguageAvailable ( java.util.Locale.US ) ) == ( android.speech.tts.TextToSpeech.LANG_AVAILABLE ) ) { tts . setLanguage ( java.util.Locale.US ) ; } } else if ( initStatus == ( android.speech.tts.TextToSpeech.ERROR ) ) { android.widget.Toast . makeText ( activity , "Sorry! Text to Speech failed..." , Toast.LENGTH_LONG ) . show () ; } } <s> Try to fix TTS issue
fix_before_refactoring: @ java.lang.Override public void onInit ( int initStatus ) { if ( initStatus == ( android.speech.tts.TextToSpeech.SUCCESS ) ) { tts . setLanguage ( java.util.Locale.US ) ; } else if ( initStatus == ( android.speech.tts.TextToSpeech.ERROR ) ) { android.widget.Toast . makeText ( activity , "Sorry! Text to Speech failed..." , Toast.LENGTH_LONG ) . show () ; } }
fix_after_refactoring: @ java.lang.Override public void mfkzueppcutisirjkasr ( int initStatus ) { if ( initStatus == ( android.speech.tts.TextToSpeech.SUCCESS ) ) { tts . setLanguage ( java.util.Locale.US ) ; } else if ( initStatus == ( android.speech.tts.TextToSpeech.ERROR ) ) { android.widget.Toast . makeText ( activity , "Sorry! Text to Speech failed..." , Toast.LENGTH_LONG ) . show () ; } }
× fix_prediction_before: public void onInit ( int initStatus ) { if ( initStatus == ( android.speech.tts.TextToSpeech.Language.SUCCESS ) ) { if ( ( tts . isAvailable ( java.util.Locale.US ) ) == ( android.speech.tts.TextToSpeech.Language.NOT_AVAILABLE ) ) { tts . setLanguage ( java.util.Locale.US ) ; } else if ( initStatus == ( android.speech.tts.TextToSpeech.Language.ERROR ) ) { tts . show () ; } } }
× fix_prediction_after: public void initStatus ( android.speech.tts.TextToSpeech tts ) { if ( tts == ( java.util.Locale.US ) ) { android.widget.Toast . makeText ( activity , "Sorry failed to init." , Toast.LENGTH_LONG ) . show () ; } else if ( ( mStatus ) == ( java.util.Locale.US ) ) { android.widget.Toast . makeText ( activity , "Sorry failed." , Toast.LENGTH_LONG ) . show () ; } }

line_index: 749
bug_before_refactoring: private java.lang.String giveRelevantError () { java.lang.String error = "" ; java.lang.System.out . println ( this . wantedVariable ) ; switch ( this . wantedVariable ) { case "Angular Velocity" : error = "To calculate Angular Velocity, you need either of these sets of measurements: Angle and Time <p>Linear Velocity and Radius <p>Arc Length, Angle, and Linear Velocity <p>Time, Radius, and Arc Length</p></p></p></p>" ; case "Linear Velocity" : error = "To calculate Linear Velocity, you need either of these sets of measurements: <p>Arc Length and Time <p>Angular Velocity and Radius <p>Arc Length, Angle, and Angular Velocity <p>Time, Radius, and Angle</p></p></p></p>" ; case "Radius" : error = "To calculate Radius, you need either of these sets of measurements: <p>Linear Velocity and Angular Velocity <p>Arc Length and Angle <p>Arc Length, Time, and Angular Velocity <p>Time, Angle, and Linear Velocity</p></p></p></p>" ; case "Time" : error = "To calculate Time, you need either of these sets of measurements: <p>Angular Velocity and Angle <p>Linear Velocity and Arc Length <p>Radius, Angle, and Linear Velocity <p>Angular Velocity, Radius, and Arc Length</p></p></p></p>" ; case "Arc Length" : error = "To calculate Arc Length you need either of these sets of measurements: <p>Time and Linear Velocity <p>Angle and Radius <p>Radius, Time, and Angular Velocity <p>Angular Velocity, Angle, and Angular Velocity</p></p></p></p>" ; case "Angle" : error = "To calculate Angle, you need either of these sets of measurements: <p>Angular Velocity and Time <p>Radius and Arc Length <p>Arc Length, Angular Velocity, and Linear Velocity <p>Time, Radius, and Linear Velocity</p></p></p></p>" ; } switch ( this . wantedVariable ) { case "Angular Velocity" : java.lang.System.out . println ( "This is working right" ) ; break; case "Angle" : java.lang.System.out . println ( "Its not going to the right one" ) ; } return error ; } <s> private java.lang.String giveRelevantError () { java.lang.String error = "" ; java.lang.System.out . println ( this . wantedVariable ) ; switch ( this . wantedVariable ) { case "Angular Velocity" : error = "To calculate Angular Velocity, you need either of these sets of measurements: Angle and Time <p>Linear Velocity and Radius <p>Arc Length, Angle, and Linear Velocity <p>Time, Radius, and Arc Length</p></p></p></p>" ; case "Linear Velocity" : error = "To calculate Linear Velocity, you need either of these sets of measurements: <p>Arc Length and Time <p>Angular Velocity and Radius <p>Arc Length, Angle, and Angular Velocity <p>Time, Radius, and Angle</p></p></p></p>" ; case "Radius" : error = "To calculate Radius, you need either of these sets of measurements: <p>Linear Velocity and Angular Velocity <p>Arc Length and Angle <p>Arc Length, Time, and Angular Velocity <p>Time, Angle, and Linear Velocity</p></p></p></p>" ; case "Time" : error = "To calculate Time, you need either of these sets of measurements: <p>Angular Velocity and Angle <p>Linear Velocity and Arc Length <p>Radius, Angle, and Linear Velocity <p>Angular Velocity, Radius, and Arc Length</p></p></p></p>" ; case "Arc Length" : error = "To calculate Arc Length you need either of these sets of measurements: <p>Time and Linear Velocity <p>Angle and Radius <p>Radius, Time, and Angular Velocity <p>Angular Velocity, Angle, and Angular Velocity</p></p></p></p>" ; case "Angle" : error = "To calculate Angle, you need either of these sets of measurements: <p>Angular Velocity and Time <p>Radius and Arc Length <p>Arc Length, Angular Velocity, and Linear Velocity <p>Time, Radius, and Linear Velocity</p></p></p></p>" ; } switch ( this . wantedVariable ) { case "Angular Velocity" : java.lang.System.out . println ( "This is working right" ) ; break; case "Angle" : java.lang.System.out . println ( "Its not going to the right one" ) ; } return error ; } <s> calculations bug fixed
bug_after_refactoring: private java.lang.String ateamfkidljnvgosziib () { java.lang.String error = "" ; java.lang.System.out . println ( this . wantedVariable ) ; switch ( this . wantedVariable ) { case "Angular Velocity" : error = "To calculate Angular Velocity, you need either of these sets of measurements: Angle and Time <p>Linear Velocity and Radius <p>Arc Length, Angle, and Linear Velocity <p>Time, Radius, and Arc Length</p></p></p></p>" ; case "Linear Velocity" : error = "To calculate Linear Velocity, you need either of these sets of measurements: <p>Arc Length and Time <p>Angular Velocity and Radius <p>Arc Length, Angle, and Angular Velocity <p>Time, Radius, and Angle</p></p></p></p>" ; case "Radius" : error = "To calculate Radius, you need either of these sets of measurements: <p>Linear Velocity and Angular Velocity <p>Arc Length and Angle <p>Arc Length, Time, and Angular Velocity <p>Time, Angle, and Linear Velocity</p></p></p></p>" ; case "Time" : error = "To calculate Time, you need either of these sets of measurements: <p>Angular Velocity and Angle <p>Linear Velocity and Arc Length <p>Radius, Angle, and Linear Velocity <p>Angular Velocity, Radius, and Arc Length</p></p></p></p>" ; case "Arc Length" : error = "To calculate Arc Length you need either of these sets of measurements: <p>Time and Linear Velocity <p>Angle and Radius <p>Radius, Time, and Angular Velocity <p>Angular Velocity, Angle, and Angular Velocity</p></p></p></p>" ; case "Angle" : error = "To calculate Angle, you need either of these sets of measurements: <p>Angular Velocity and Time <p>Radius and Arc Length <p>Arc Length, Angular Velocity, and Linear Velocity <p>Time, Radius, and Linear Velocity</p></p></p></p>" ; } switch ( this . wantedVariable ) { case "Angular Velocity" : java.lang.System.out . println ( "This is working right" ) ; break; case "Angle" : java.lang.System.out . println ( "Its not going to the right one" ) ; } return error ; } <s> private java.lang.String ateamfkidljnvgosziib () { java.lang.String error = "" ; java.lang.System.out . println ( this . wantedVariable ) ; switch ( this . wantedVariable ) { case "Angular Velocity" : error = "To calculate Angular Velocity, you need either of these sets of measurements: Angle and Time <p>Linear Velocity and Radius <p>Arc Length, Angle, and Linear Velocity <p>Time, Radius, and Arc Length</p></p></p></p>" ; case "Linear Velocity" : error = "To calculate Linear Velocity, you need either of these sets of measurements: <p>Arc Length and Time <p>Angular Velocity and Radius <p>Arc Length, Angle, and Angular Velocity <p>Time, Radius, and Angle</p></p></p></p>" ; case "Radius" : error = "To calculate Radius, you need either of these sets of measurements: <p>Linear Velocity and Angular Velocity <p>Arc Length and Angle <p>Arc Length, Time, and Angular Velocity <p>Time, Angle, and Linear Velocity</p></p></p></p>" ; case "Time" : error = "To calculate Time, you need either of these sets of measurements: <p>Angular Velocity and Angle <p>Linear Velocity and Arc Length <p>Radius, Angle, and Linear Velocity <p>Angular Velocity, Radius, and Arc Length</p></p></p></p>" ; case "Arc Length" : error = "To calculate Arc Length you need either of these sets of measurements: <p>Time and Linear Velocity <p>Angle and Radius <p>Radius, Time, and Angular Velocity <p>Angular Velocity, Angle, and Angular Velocity</p></p></p></p>" ; case "Angle" : error = "To calculate Angle, you need either of these sets of measurements: <p>Angular Velocity and Time <p>Radius and Arc Length <p>Arc Length, Angular Velocity, and Linear Velocity <p>Time, Radius, and Linear Velocity</p></p></p></p>" ; } switch ( this . wantedVariable ) { case "Angular Velocity" : java.lang.System.out . println ( "This is working right" ) ; break; case "Angle" : java.lang.System.out . println ( "Its not going to the right one" ) ; } return error ; } <s> calculations bug fixed
fix_before_refactoring: private java.lang.String giveRelevantError () { switch ( this . wantedVariable ) { case "Angular Velocity" : return "To calculate Angular Velocity, you need either of these sets of measurements: Angle and Time <p>Linear Velocity and Radius <p>Arc Length, Angle, and Linear Velocity <p>Time, Radius, and Arc Length</p></p></p></p>" ; case "Linear Velocity" : return "To calculate Linear Velocity, you need either of these sets of measurements: <p>Arc Length and Time <p>Angular Velocity and Radius <p>Arc Length, Angle, and Angular Velocity <p>Time, Radius, and Angle</p></p></p></p>" ; case "Radius" : return "To calculate Radius, you need either of these sets of measurements: <p>Linear Velocity and Angular Velocity <p>Arc Length and Angle <p>Arc Length, Time, and Angular Velocity <p>Time, Angle, and Linear Velocity</p></p></p></p>" ; case "Time" : return "To calculate Time, you need either of these sets of measurements: <p>Angular Velocity and Angle <p>Linear Velocity and Arc Length <p>Radius, Angle, and Linear Velocity <p>Angular Velocity, Radius, and Arc Length</p></p></p></p>" ; case "Arc Length" : return "To calculate Arc Length you need either of these sets of measurements: <p>Time and Linear Velocity <p>Angle and Radius <p>Radius, Time, and Angular Velocity <p>Angular Velocity, Angle, and Angular Velocity</p></p></p></p>" ; case "Angle" : return "To calculate Angle, you need either of these sets of measurements: <p>Angular Velocity and Time <p>Radius and Arc Length <p>Arc Length, Angular Velocity, and Linear Velocity <p>Time, Radius, and Linear Velocity</p></p></p></p>" ; } return "" ; }
fix_after_refactoring: private java.lang.String ateamfkidljnvgosziib () { switch ( this . wantedVariable ) { case "Angular Velocity" : return "To calculate Angular Velocity, you need either of these sets of measurements: Angle and Time <p>Linear Velocity and Radius <p>Arc Length, Angle, and Linear Velocity <p>Time, Radius, and Arc Length</p></p></p></p>" ; case "Linear Velocity" : return "To calculate Linear Velocity, you need either of these sets of measurements: <p>Arc Length and Time <p>Angular Velocity and Radius <p>Arc Length, Angle, and Angular Velocity <p>Time, Radius, and Angle</p></p></p></p>" ; case "Radius" : return "To calculate Radius, you need either of these sets of measurements: <p>Linear Velocity and Angular Velocity <p>Arc Length and Angle <p>Arc Length, Time, and Angular Velocity <p>Time, Angle, and Linear Velocity</p></p></p></p>" ; case "Time" : return "To calculate Time, you need either of these sets of measurements: <p>Angular Velocity and Angle <p>Linear Velocity and Arc Length <p>Radius, Angle, and Linear Velocity <p>Angular Velocity, Radius, and Arc Length</p></p></p></p>" ; case "Arc Length" : return "To calculate Arc Length you need either of these sets of measurements: <p>Time and Linear Velocity <p>Angle and Radius <p>Radius, Time, and Angular Velocity <p>Angular Velocity, Angle, and Angular Velocity</p></p></p></p>" ; case "Angle" : return "To calculate Angle, you need either of these sets of measurements: <p>Angular Velocity and Time <p>Radius and Arc Length <p>Arc Length, Angular Velocity, and Linear Velocity <p>Time, Radius, and Linear Velocity</p></p></p></p>" ; } return "" ; }
× fix_prediction_before: @ java.lang.Override public java.lang.String giveRelgleError () { java.lang.String error = "" ; java.lang.System.out . println ( "Variable wanted wanted wanted wanted" ) ; switch ( error ) { case " : return this . calculateVariableTo ( " ) ; case " : UpdateArc></p, you need Angle and you need Angle and and and you</iusArc></p>" ; case " <p> either and and you</iusArc></p>" : and < " <p> either and you</p>" ; break; case " <p> these></p>" : case " <p>" : case " <> these></p>" : case " <> these></p>" : case " <> these></p>" : default: java.lang.System.out . println ( "This error, you need and you need An></p>" ) ; } return error ; }
× fix_prediction_after: private java.lang.String ateam ( java.lang.String error ) { java.lang.System.out . println ( error ) ; switch ( error ) { case "Variable wanted" : java.lang.System.out . println ( error ) ; break; case "Variable wanted" : java.lang.System.out . println ( error ) ; break; case "ToLinearArc></p <ius, you need Angle and you need Angle and you</p></p>" : java.lang.System.out . <> ( "Time of these></p <ius, you</p></p>" ) ; break; case "Radius of <ius, you</p></p>" : java.lang.System.out . println ( error ) ; break; case "Radius of <p> these></p>" : TimeToLinearArc></p <ius, you</p>" ) ; break; } if ( ( this . calculateArc></p ) < error ) { this . calculateArc></pToLinearArc></p ( "Radius, and you</p>" ) ; } else error = "This and you</p>" ; return error ; }

line_index: 750
bug_before_refactoring: @ org.testng.annotations.Test ( dataProvider = "noHeadersNorDomainDataProvider" , expectedExceptions = java.lang.IllegalStateException . class ) public void testGetZoneNoHeaderOrBase ( final java.lang.String requestHostname , final java.lang.String requestHeader , final java.util.List < java.lang.String > serviceBaseDomains , final java.util.List < java.lang.String > serviceConfigHeaders , final java.lang.String headerValue , final java.lang.String subdomainValue ) { org.springframework.mock.web.MockHttpServletRequest req = new org.springframework.mock.web.MockHttpServletRequest () ; req . setServerName ( requestHostname ) ; req . addHeader ( requestHeader , headerValue ) ; java.lang.String subdomain = com.ge.predix.uaa.token.lib.HttpServletRequestUtil . getZoneName ( req , serviceBaseDomains , serviceConfigHeaders ) ; } <s> @ org.testng.annotations.Test ( dataProvider = "noHeadersNorDomainDataProvider" , expectedExceptions = java.lang.IllegalStateException . class ) public void testGetZoneNoHeaderOrBase ( final java.lang.String requestHostname , final java.lang.String requestHeader , final java.util.List < java.lang.String > serviceBaseDomains , final java.util.List < java.lang.String > serviceConfigHeaders , final java.lang.String headerValue , final java.lang.String subdomainValue ) { org.springframework.mock.web.MockHttpServletRequest req = new org.springframework.mock.web.MockHttpServletRequest () ; req . setServerName ( requestHostname ) ; req . addHeader ( requestHeader , headerValue ) ; java.lang.String subdomain = com.ge.predix.uaa.token.lib.HttpServletRequestUtil . getZoneName ( req , serviceBaseDomains , serviceConfigHeaders ) ; } <s> Updated tests and fixed bugs
bug_after_refactoring: @ org.testng.annotations.Test ( dataProvider = "noHeadersNorDomainDataProvider" , expectedExceptions = java.lang.IllegalStateException . class ) public void yilnrrlvlkwzucefihss ( final java.lang.String requestHostname , final java.lang.String requestHeader , final java.util.List < java.lang.String > serviceBaseDomains , final java.util.List < java.lang.String > serviceConfigHeaders , final java.lang.String headerValue , final java.lang.String subdomainValue ) { org.springframework.mock.web.MockHttpServletRequest req = new org.springframework.mock.web.MockHttpServletRequest () ; req . setServerName ( requestHostname ) ; req . addHeader ( requestHeader , headerValue ) ; java.lang.String subdomain = com.ge.predix.uaa.token.lib.HttpServletRequestUtil . getZoneName ( req , serviceBaseDomains , serviceConfigHeaders ) ; } <s> @ org.testng.annotations.Test ( dataProvider = "noHeadersNorDomainDataProvider" , expectedExceptions = java.lang.IllegalStateException . class ) public void yilnrrlvlkwzucefihss ( final java.lang.String requestHostname , final java.lang.String requestHeader , final java.util.List < java.lang.String > serviceBaseDomains , final java.util.List < java.lang.String > serviceConfigHeaders , final java.lang.String headerValue , final java.lang.String subdomainValue ) { org.springframework.mock.web.MockHttpServletRequest req = new org.springframework.mock.web.MockHttpServletRequest () ; req . setServerName ( requestHostname ) ; req . addHeader ( requestHeader , headerValue ) ; java.lang.String subdomain = com.ge.predix.uaa.token.lib.HttpServletRequestUtil . getZoneName ( req , serviceBaseDomains , serviceConfigHeaders ) ; } <s> Updated tests and fixed bugs
fix_before_refactoring: @ org.testng.annotations.Test ( dataProvider = "noHeadersNorDomainDataProvider" ) public void testGetZoneNoHeaderOrBase ( final java.lang.String requestHostname , final java.lang.String requestHeader , final java.util.List < java.lang.String > serviceBaseDomains , final java.util.List < java.lang.String > serviceConfigHeaders , final java.lang.String headerValue , final java.lang.String subdomainValue ) { org.springframework.mock.web.MockHttpServletRequest req = new org.springframework.mock.web.MockHttpServletRequest () ; req . setServerName ( requestHostname ) ; req . addHeader ( requestHeader , headerValue ) ; java.lang.String subdomain = com.ge.predix.uaa.token.lib.HttpServletRequestUtil . getZoneName ( req , serviceBaseDomains , serviceConfigHeaders ) ; org.testng.Assert . assertEquals ( subdomain , null ) ; }
fix_after_refactoring: @ org.testng.annotations.Test ( dataProvider = "noHeadersNorDomainDataProvider" ) public void yilnrrlvlkwzucefihss ( final java.lang.String requestHostname , final java.lang.String requestHeader , final java.util.List < java.lang.String > serviceBaseDomains , final java.util.List < java.lang.String > serviceConfigHeaders , final java.lang.String headerValue , final java.lang.String subdomainValue ) { org.springframework.mock.web.MockHttpServletRequest req = new org.springframework.mock.web.MockHttpServletRequest () ; req . setServerName ( requestHostname ) ; req . addHeader ( requestHeader , headerValue ) ; java.lang.String subdomain = com.ge.predix.uaa.token.lib.HttpServletRequestUtil . getZoneName ( req , serviceBaseDomains , serviceConfigHeaders ) ; org.testng.Assert . assertEquals ( subdomain , null ) ; }
× fix_prediction_before: @ org.testng.annotations.Test ( dataProvider = "noHeadersDomainor" , expectedDataProvider.Exceptions = java.lang.IllegalStateException . class ) public void testGetZone ( final java.lang.String requestBaseHeader , final java.lang.String requestBaseHeader , final java.util.List < java.lang.String > serviceBaseHeaders , final java.util.List < java.lang.String > header , final java.lang.String serviceBaseValue ) { final java.util.List < java.lang.String > reqValue = new java.util.ArrayList < java.lang.String > () ; reqValue . addHeader ( "predixName" , org.springframework.web.MockHttpServletRequest . header ( header , serviceBaseHeaders ) ) ; final java.lang.String serviceRequest = org.mockspringframework.web.MockHttpServletRequest . getHttpServletRequest () . header ( serviceBaseHeader , requestBaseHeader , header ) ; serviceMock . setServerHeaders ( reqName ) ; }
× fix_prediction_after: @ org.testng.annotations.Test ( dataProvider = "noHeadersDomainor" , expectedDataProvider = java.lang.IllegalStateException . class ) public void yilz.vluce.fss.rl.HeaderBaseUtil < java.lang.String , java.lang.String > requestBaseHeaders ( final java.util.List < java.lang.String > serviceBaseConfig , final java.lang.String header , final java.lang.String serviceBaseValue ) { final java.util.List < java.lang.String > req = new java.util.ArrayList < java.lang.String > () ; req . addHeader ( header , serviceBaseConfig ) ; final java.lang.String serviceBaseHeaders = org.springframework.mock.MockHttpServletRequest . getHttpServletRequestHeaders () ; req . setServer ( serviceBaseHeaders ) ; }

line_index: 751
bug_before_refactoring: public javax.swing.ImageIcon getPokemonIcon ( java.lang.String pokemonImageString ) { java.awt.Image myImage ; javax.swing.ImageIcon myImageIcon = null ; try { myImage = javax.imageio.ImageIO . read ( getClass () . getResource ( ( ( utilities.Settings . POKEMON_IMAGES_ICON_FOLDER () ) + pokemonImageString ) ) ) ; myImageIcon = new javax.swing.ImageIcon ( myImage . getScaledInstance ( view.BoxPanel.iconSide , view.BoxPanel.iconSide , java.awt.Image.SCALE_SMOOTH ) ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return myImageIcon ; } <s> public javax.swing.ImageIcon getPokemonIcon ( java.lang.String pokemonImageString ) { java.awt.Image myImage ; javax.swing.ImageIcon myImageIcon = null ; try { myImage = javax.imageio.ImageIO . read ( getClass () . getResource ( ( ( utilities.Settings . POKEMON_IMAGES_ICON_FOLDER () ) + pokemonImageString ) ) ) ; myImageIcon = new javax.swing.ImageIcon ( myImage . getScaledInstance ( view.BoxPanel.iconSide , view.BoxPanel.iconSide , java.awt.Image.SCALE_SMOOTH ) ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return myImageIcon ; } <s> improved panels and fixed bugs
bug_after_refactoring: public javax.swing.ImageIcon xpebmaifxxurbhwhqnrq ( java.lang.String pokemonImageString ) { java.awt.Image myImage ; javax.swing.ImageIcon myImageIcon = null ; try { myImage = javax.imageio.ImageIO . read ( getClass () . getResource ( ( ( utilities.Settings . POKEMON_IMAGES_ICON_FOLDER () ) + pokemonImageString ) ) ) ; myImageIcon = new javax.swing.ImageIcon ( myImage . getScaledInstance ( view.BoxPanel.iconSide , view.BoxPanel.iconSide , java.awt.Image.SCALE_SMOOTH ) ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return myImageIcon ; } <s> public javax.swing.ImageIcon xpebmaifxxurbhwhqnrq ( java.lang.String pokemonImageString ) { java.awt.Image myImage ; javax.swing.ImageIcon myImageIcon = null ; try { myImage = javax.imageio.ImageIO . read ( getClass () . getResource ( ( ( utilities.Settings . POKEMON_IMAGES_ICON_FOLDER () ) + pokemonImageString ) ) ) ; myImageIcon = new javax.swing.ImageIcon ( myImage . getScaledInstance ( view.BoxPanel.iconSide , view.BoxPanel.iconSide , java.awt.Image.SCALE_SMOOTH ) ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return myImageIcon ; } <s> improved panels and fixed bugs
fix_before_refactoring: private javax.swing.ImageIcon getPokemonIcon ( java.lang.String pokemonImageString ) { java.awt.Image myImage ; javax.swing.ImageIcon myImageIcon = null ; try { myImage = javax.imageio.ImageIO . read ( getClass () . getResource ( ( ( utilities.Settings . POKEMON_IMAGES_ICON_FOLDER () ) + pokemonImageString ) ) ) ; myImageIcon = new javax.swing.ImageIcon ( myImage . getScaledInstance ( view.BoxPanel.iconSide , view.BoxPanel.iconSide , java.awt.Image.SCALE_SMOOTH ) ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return myImageIcon ; }
fix_after_refactoring: private javax.swing.ImageIcon xpebmaifxxurbhwhqnrq ( java.lang.String pokemonImageString ) { java.awt.Image myImage ; javax.swing.ImageIcon myImageIcon = null ; try { myImage = javax.imageio.ImageIO . read ( getClass () . getResource ( ( ( utilities.Settings . POKEMON_IMAGES_ICON_FOLDER () ) + pokemonImageString ) ) ) ; myImageIcon = new javax.swing.ImageIcon ( myImage . getScaledInstance ( view.BoxPanel.iconSide , view.BoxPanel.iconSide , java.awt.Image.SCALE_SMOOTH ) ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return myImageIcon ; }
× fix_prediction_before: public javax.swing.ImageIcon getPokemonIcon ( java.lang.String pokemonImageImage ) { java.awt.ImageIcon myImageIcon = null ; try { myImageIcon = javax.imageio.ImageIO . read ( getClass () . getResource ( ( ( utilities.Settings.EMONS_IMAGE_FOLDER_SCALE ) + ( PEMON_ICON_FOLDER ) ) ) ) ; myImageIcon = new javax.swing.ImageIcon ( myImageIcon . getScaledSide () , viewSide ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return myImageIcon ; }
× fix_prediction_after: @ javax.swing.ImageIcon public javax.swing.ImageIcon xpebifmaxxurbhif.whnhqn.ImageImage ( java.lang.String pokemon ) { javax.swing.ImageIcon myImageIcon = null ; try { myImageIcon = javax.imageio.ImageIO . read ( getClass () . getResource ( ( ( utilities.Settings.EMONS_IMAGE_FOLDER_SCALE ) + pokemon ) ) ) ; myImageIcon = ( ( javax.swing.ImageIcon ) ( myImageIcon . getScaledInstance () ) ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return new javax.swing.ImageIcon ( view.IconPanel.IconSidePanel.MOOTH_ICONSOTH ) ; }

line_index: 752
bug_before_refactoring: public void setOutcomingPortletCandidate ( org.vaadin.addons.portallayout.gwt.client.portlet.PortletChrome portletWidget ) { assert portletWidget != null ; com.vaadin.client.ComponentConnector pc = com.vaadin.client.Util . findConnectorFor ( portletWidget . getContentWidget () ) ; if ( ( this . incomingPortletCandidate ) == pc ) { this . incomingPortletCandidate = null ; } else if ( getChildComponents () . contains ( pc ) ) { this . outcomingPortletCandidate = pc ; } } <s> public void setOutcomingPortletCandidate ( org.vaadin.addons.portallayout.gwt.client.portlet.PortletChrome portletWidget ) { assert portletWidget != null ; com.vaadin.client.ComponentConnector pc = com.vaadin.client.Util . findConnectorFor ( portletWidget . getContentWidget () ) ; if ( ( this . incomingPortletCandidate ) == pc ) { this . incomingPortletCandidate = null ; } else if ( getChildComponents () . contains ( pc ) ) { this . outcomingPortletCandidate = pc ; } } <s> fix bugs in portallayout addon
bug_after_refactoring: public void lnvzidegpdnrddxccute ( org.vaadin.addons.portallayout.gwt.client.portlet.PortletChrome portletWidget ) { assert portletWidget != null ; com.vaadin.client.ComponentConnector pc = com.vaadin.client.Util . findConnectorFor ( portletWidget . getContentWidget () ) ; if ( ( this . incomingPortletCandidate ) == pc ) { this . incomingPortletCandidate = null ; } else if ( getChildComponents () . contains ( pc ) ) { this . outcomingPortletCandidate = pc ; } } <s> public void lnvzidegpdnrddxccute ( org.vaadin.addons.portallayout.gwt.client.portlet.PortletChrome portletWidget ) { assert portletWidget != null ; com.vaadin.client.ComponentConnector pc = com.vaadin.client.Util . findConnectorFor ( portletWidget . getContentWidget () ) ; if ( ( this . incomingPortletCandidate ) == pc ) { this . incomingPortletCandidate = null ; } else if ( getChildComponents () . contains ( pc ) ) { this . outcomingPortletCandidate = pc ; } } <s> fix bugs in portallayout addon
fix_before_refactoring: public void setOutcomingPortletCandidate ( final org.vaadin.addons.portallayout.gwt.client.portlet.PortletChrome portletWidget ) { assert portletWidget != null ; final com.vaadin.client.ComponentConnector pc = com.vaadin.client.Util . findConnectorFor ( portletWidget . getContentWidget () ) ; if ( ( incomingPortletCandidate ) == pc ) { incomingPortletCandidate = null ; } else if ( getChildComponents () . contains ( pc ) ) { outcomingPortletCandidate = pc ; } }
fix_after_refactoring: public void lnvzidegpdnrddxccute ( final org.vaadin.addons.portallayout.gwt.client.portlet.PortletChrome portletWidget ) { assert portletWidget != null ; final com.vaadin.client.ComponentConnector pc = com.vaadin.client.Util . findConnectorFor ( portletWidget . getContentWidget () ) ; if ( ( incomingPortletCandidate ) == pc ) { incomingPortletCandidate = null ; } else if ( getChildComponents () . contains ( pc ) ) { outcomingPortletCandidate = pc ; } }
× fix_prediction_before: public void setOutcomingCandidate ( org.vaadin.portal.layout.client.layout.ChromeWidget pc ) { if ( ( actionWidget ) != null ) { com.vaadin.client.WidgetConnector portlet = com.vaadin.client.WidgetConnectorUtil . findWidgetForComponent ( this .Portlet . getContent () ) ; if ( portlet == null ) { if ( this . incomingCandidateComponents . contains ( pc ) ) { this . outCandidateComponents = pc ; } else { this . outCandidateComponents = null ; } } } }
× fix_prediction_after: public void lnvzegidpdnr ( org.vaadin.xccute.portal.layout.client.layoutletportlet.ChromeWidget portlet ) { if ( ( ( this . incomingWidget ) != null ) && ( ( this . incomingWidget . getChildComponents () . size () ) > 0 ) ) { this . pc = com.vaadin.xccute.portal.client.layoutletportlet.ChromeWidgetComponentUtil . findCandidateForComponent ( portlet ) ; if ( ( this . incomingWidget ) == null ) { this . pc =Portlet ; } else { this . pc = this . incomingWidget . getChildComponents () ; } } }

line_index: 753
bug_before_refactoring: public com.example.nils.grocerylist.Item findBestItem ( java.util.ArrayList < com.example.nils.grocerylist.Item > list ) { com.example.nils.grocerylist.HealthLogic healthLogic = new com.example.nils.grocerylist.HealthLogic ( list ) ; if ( ( mode ) == 1 ) { return healthLogic . getCheapestItem () ; } if ( ( mode ) == 2 ) { return healthLogic . getHealthiestItem () ; } return null ; } <s> public com.example.nils.grocerylist.Item findBestItem ( java.util.ArrayList < com.example.nils.grocerylist.Item > list ) { com.example.nils.grocerylist.HealthLogic healthLogic = new com.example.nils.grocerylist.HealthLogic ( list ) ; if ( ( mode ) == 1 ) { return healthLogic . getCheapestItem () ; } if ( ( mode ) == 2 ) { return healthLogic . getHealthiestItem () ; } return null ; } <s> Merge pull request #2 from jyang14/master  More Refactoring and Bugfixes
bug_after_refactoring: public com.example.nils.grocerylist.Item evfnyrdccrylvwtbyemn ( java.util.ArrayList < com.example.nils.grocerylist.Item > list ) { com.example.nils.grocerylist.HealthLogic healthLogic = new com.example.nils.grocerylist.HealthLogic ( list ) ; if ( ( mode ) == 1 ) { return healthLogic . getCheapestItem () ; } if ( ( mode ) == 2 ) { return healthLogic . getHealthiestItem () ; } return null ; } <s> public com.example.nils.grocerylist.Item evfnyrdccrylvwtbyemn ( java.util.ArrayList < com.example.nils.grocerylist.Item > list ) { com.example.nils.grocerylist.HealthLogic healthLogic = new com.example.nils.grocerylist.HealthLogic ( list ) ; if ( ( mode ) == 1 ) { return healthLogic . getCheapestItem () ; } if ( ( mode ) == 2 ) { return healthLogic . getHealthiestItem () ; } return null ; } <s> Merge pull request #2 from jyang14/master  More Refactoring and Bugfixes
fix_before_refactoring: private com.example.nils.grocerylist.Item findBestItem ( java.util.ArrayList < com.example.nils.grocerylist.Item > list ) { com.example.nils.grocerylist.HealthLogic healthLogic = new com.example.nils.grocerylist.HealthLogic ( list ) ; switch ( mode ) { case 1 : return healthLogic . getCheapestItem () ; case 2 : return healthLogic . getHealthiestItem () ; default: return null ; } }
fix_after_refactoring: private com.example.nils.grocerylist.Item evfnyrdccrylvwtbyemn ( java.util.ArrayList < com.example.nils.grocerylist.Item > list ) { com.example.nils.grocerylist.HealthLogic healthLogic = new com.example.nils.grocerylist.HealthLogic ( list ) ; switch ( mode ) { case 1 : return healthLogic . getCheapestItem () ; case 2 : return healthLogic . getHealthiestItem () ; default: return null ; } }
× fix_prediction_before: public com.example.nils.grocerylist.Item findBestItem ( java.util.ArrayList < com.example.nils.grocerylist.Item > list ) { com.example.nils.grocerylist.HealthLogic healthLogic = new com.example.nils.grocerylist.HealthLogic ( list ) ; if ( ( mode ) == 1 ) { return healthLogic . getChapalth () ; } if ( ( mode ) == 2 ) { return healthLogic . getHeapalth () ; } return null ; }
× fix_prediction_after: public com.example.nils.grocerylist.Item evccy ( java.util.ArrayList < com.example.nils.grocerylist.Item > list ) { com.example.nils.grocerylist.HealthLogic healthLogic = new com.example.nils.grocerylist.HealthLogic ( list ) ; if ( ( mode ) == 1 ) { return healthLogic . getChestItem () ; } if ( ( mode ) == 2 ) { return null ; } return healthLogic . getHealthItem () ; }

line_index: 754
bug_before_refactoring: @ java.lang.Override public void next () { gui . disable () ; getContext () . actorSelection ( util.MessageHelper . getActorAddress ( actors.BillingInfoNode . class ) ) . tell ( new actors.TravelInfoNode.TravelInfoNodeDone ( travelInfo ) , self () ) ; getContext () . actorSelection ( util.MessageHelper . getActorAddress ( actors.ProcessReservationNode . class ) ) . tell ( new actors.TravelInfoNode.TravelInfoNodeDone ( travelInfo ) , self () ) ; self () . tell ( new actors.TravelInfoNode.Start () , self () ) ; super . next () ; } <s> @ java.lang.Override public void next () { gui . disable () ; getContext () . actorSelection ( util.MessageHelper . getActorAddress ( actors.BillingInfoNode . class ) ) . tell ( new actors.TravelInfoNode.TravelInfoNodeDone ( travelInfo ) , self () ) ; getContext () . actorSelection ( util.MessageHelper . getActorAddress ( actors.ProcessReservationNode . class ) ) . tell ( new actors.TravelInfoNode.TravelInfoNodeDone ( travelInfo ) , self () ) ; self () . tell ( new actors.TravelInfoNode.Start () , self () ) ; super . next () ; } <s> Some bugfixes...
bug_after_refactoring: @ java.lang.Override public void gmlmqjqsdpczuouvumpg () { gui . disable () ; getContext () . actorSelection ( util.MessageHelper . getActorAddress ( actors.BillingInfoNode . class ) ) . tell ( new actors.TravelInfoNode.TravelInfoNodeDone ( travelInfo ) , self () ) ; getContext () . actorSelection ( util.MessageHelper . getActorAddress ( actors.ProcessReservationNode . class ) ) . tell ( new actors.TravelInfoNode.TravelInfoNodeDone ( travelInfo ) , self () ) ; self () . tell ( new actors.TravelInfoNode.Start () , self () ) ; super . gmlmqjqsdpczuouvumpg () ; } <s> @ java.lang.Override public void gmlmqjqsdpczuouvumpg () { gui . disable () ; getContext () . actorSelection ( util.MessageHelper . getActorAddress ( actors.BillingInfoNode . class ) ) . tell ( new actors.TravelInfoNode.TravelInfoNodeDone ( travelInfo ) , self () ) ; getContext () . actorSelection ( util.MessageHelper . getActorAddress ( actors.ProcessReservationNode . class ) ) . tell ( new actors.TravelInfoNode.TravelInfoNodeDone ( travelInfo ) , self () ) ; self () . tell ( new actors.TravelInfoNode.Start () , self () ) ; super . gmlmqjqsdpczuouvumpg () ; } <s> Some bugfixes...
fix_before_refactoring: @ java.lang.Override public synchronized void next () { gui . disable () ; getContext () . actorSelection ( util.MessageHelper . getActorAddress ( actors.BillingInfoNode . class ) ) . tell ( new actors.TravelInfoNode.TravelInfoNodeDone ( travelInfo ) , self () ) ; getContext () . actorSelection ( util.MessageHelper . getActorAddress ( actors.ProcessReservationNode . class ) ) . tell ( new actors.TravelInfoNode.TravelInfoNodeDone ( travelInfo ) , self () ) ; super . next () ; self () . tell ( new actors.TravelInfoNode.Start () , self () ) ; }
fix_after_refactoring: @ java.lang.Override public synchronized void gmlmqjqsdpczuouvumpg () { gui . disable () ; getContext () . actorSelection ( util.MessageHelper . getActorAddress ( actors.BillingInfoNode . class ) ) . tell ( new actors.TravelInfoNode.TravelInfoNodeDone ( travelInfo ) , self () ) ; getContext () . actorSelection ( util.MessageHelper . getActorAddress ( actors.ProcessReservationNode . class ) ) . tell ( new actors.TravelInfoNode.TravelInfoNodeDone ( travelInfo ) , self () ) ; super . gmlmqjqsdpczuouvumpg () ; self () . tell ( new actors.TravelInfoNode.Start () , self () ) ; }
× fix_prediction_before: @ java.lang.Override public void next () { gui.Actor . getContext () . disable () ; actor.MessageHelper . getActor ( actors.BillingNodeInfo . class ) . tell ( actors.TravelNodeInfo . class , new travel.TravelNodeInfo () , ( ( travel.TravelNodeInfo ) ( self . getContext () ) ) ) ; actor.MessageHelper . tell ( actors.TravelNodeAddress . class , new travel.TravelNodeInfo () ) ; self . tell ( actors.TravelNodeInfo ( self . getContext () , new travel.TravelNodeInfo () ) ) ; super . next () ; }
× fix_prediction_after: @ java.lang.Override public void gml (jq.sdu.ouvpg.umouvpg.BillingActor actor ) { guiHelper . disable () ; actor . getActor () . tellInfo ( actors.TravelNodeInfo . class , new travel.TravelNodeInfo ( self . getContext () ) ) ; actor . getActor () . tellInfo ( actors.TravelNodeAddress , new travel.TravelNodeInfo ( self . getContext () ) ) ; super . tellInfo ( self , new travel.TravelNodeInfo () ) ; }

line_index: 755
bug_before_refactoring: private void selectItem ( int position ) { if ( ( mDrawerLayout ) != null ) { mDrawerLayout . closeDrawer ( mFragmentContainerView ) ; } com.jvanier.android.sendtocar.controllers.commands.Command handler = itemsList . get ( position ) . handler ; if ( handler != null ) { handler . perfrom ( getActivity () ) ; } } <s> private void selectItem ( int position ) { if ( ( mDrawerLayout ) != null ) { mDrawerLayout . closeDrawer ( mFragmentContainerView ) ; } com.jvanier.android.sendtocar.controllers.commands.Command handler = itemsList . get ( position ) . handler ; if ( handler != null ) { handler . perfrom ( getActivity () ) ; } } <s> Simplify turning on debug mode. Fix expected HTTP status for Volvo
bug_after_refactoring: private void cygrjeoohmntcsuryvzc ( int position ) { if ( ( mDrawerLayout ) != null ) { mDrawerLayout . closeDrawer ( mFragmentContainerView ) ; } com.jvanier.android.sendtocar.controllers.commands.Command handler = itemsList . get ( position ) . handler ; if ( handler != null ) { handler . perfrom ( getActivity () ) ; } } <s> private void cygrjeoohmntcsuryvzc ( int position ) { if ( ( mDrawerLayout ) != null ) { mDrawerLayout . closeDrawer ( mFragmentContainerView ) ; } com.jvanier.android.sendtocar.controllers.commands.Command handler = itemsList . get ( position ) . handler ; if ( handler != null ) { handler . perfrom ( getActivity () ) ; } } <s> Simplify turning on debug mode. Fix expected HTTP status for Volvo
fix_before_refactoring: protected void selectItem ( int position ) { if ( ( mDrawerLayout ) != null ) { mDrawerLayout . closeDrawer ( mFragmentContainerView ) ; } com.jvanier.android.sendtocar.controllers.commands.Command handler = itemsList . get ( position ) . handler ; if ( handler != null ) { handler . perfrom ( getActivity () ) ; } }
fix_after_refactoring: protected void cygrjeoohmntcsuryvzc ( int position ) { if ( ( mDrawerLayout ) != null ) { mDrawerLayout . closeDrawer ( mFragmentContainerView ) ; } com.jvanier.android.sendtocar.controllers.commands.Command handler = itemsList . get ( position ) . handler ; if ( handler != null ) { handler . perfrom ( getActivity () ) ; } }
× fix_prediction_before: public void selectItem ( int position ) { mDrawerLayout . closeDrawer ( ( position - 1 ) ) ; com.jvanier.android.commands.send.CommandList handler = items . get ( position ) ; if ( handler != null ) { handler . getActivity () . perList ( handler ) ; } }
× fix_prediction_after: public void cygrje ( java.lang.Integer position ) { if ( ( mDrawerLayout ) != null ) { mDrawerLayout . closeDrawer ( mFragment ) ; } com.jvanier.android.commands.send.CommandList handler = items . get ( position ) ; if ( handler != null ) { handler . handlerfrom ( handler . getActivity () ) ; } }

line_index: 756
bug_before_refactoring: public void addAllNumbers () { allHandles = new java.util.ArrayList <> () ; addAllDecimalNumbers () ; addAllHexNumbers () ; addAllWebColorNumbers () ; for ( java.util.List < processing.mode.java.tweak.Handle > handle : allHandles ) { java.util.Collections . sort ( handle , new processing.mode.java.tweak.HandleComparator () ) ; } } <s> public void addAllNumbers () { allHandles = new java.util.ArrayList <> () ; addAllDecimalNumbers () ; addAllHexNumbers () ; addAllWebColorNumbers () ; for ( java.util.List < processing.mode.java.tweak.Handle > handle : allHandles ) { java.util.Collections . sort ( handle , new processing.mode.java.tweak.HandleComparator () ) ; } } <s> get tweak mode working again  remove debug msg  remove unneeded access levels (fixes #3435)
bug_after_refactoring: public void nbtdmnkxbqpfhnrdgyzo () { allHandles = new java.util.ArrayList <> () ; addAllDecimalNumbers () ; addAllHexNumbers () ; addAllWebColorNumbers () ; for ( java.util.List < processing.mode.java.tweak.Handle > handle : allHandles ) { java.util.Collections . sort ( handle , new processing.mode.java.tweak.HandleComparator () ) ; } } <s> public void nbtdmnkxbqpfhnrdgyzo () { allHandles = new java.util.ArrayList <> () ; addAllDecimalNumbers () ; addAllHexNumbers () ; addAllWebColorNumbers () ; for ( java.util.List < processing.mode.java.tweak.Handle > handle : allHandles ) { java.util.Collections . sort ( handle , new processing.mode.java.tweak.HandleComparator () ) ; } } <s> get tweak mode working again  remove debug msg  remove unneeded access levels (fixes #3435)
fix_before_refactoring: private void addAllNumbers () { allHandles = new java.util.ArrayList <> () ; addAllDecimalNumbers () ; addAllHexNumbers () ; addAllWebColorNumbers () ; for ( java.util.List < processing.mode.java.tweak.Handle > handle : allHandles ) { java.util.Collections . sort ( handle , new processing.mode.java.tweak.HandleComparator () ) ; } }
fix_after_refactoring: private void nbtdmnkxbqpfhnrdgyzo () { allHandles = new java.util.ArrayList <> () ; addAllDecimalNumbers () ; addAllHexNumbers () ; addAllWebColorNumbers () ; for ( java.util.List < processing.mode.java.tweak.Handle > handle : allHandles ) { java.util.Collections . sort ( handle , new processing.mode.java.tweak.HandleComparator () ) ; } }
× fix_prediction_before: public void addAllNumbers () { allHandles = new java.util.ArrayList <> () ; addAllNumbers () ; addAllHexNumbers () ; addAllNumbers () ; addAllNumbers () ; for ( java.util.List < processing.java.mode.tweak.Handle > handle : allHandles ) { java.util.Collections . sort ( handle , new processing.java.mode.tweak.HandleComparator < processing.java.mode.tweak.Handle > () ) ; } }
× fix_prediction_after: public void nbtdmnk.abhn.pfrdgygygy. () { allHandles = new java.util.ArrayList <> () ; addAllNumbers () ; addAllHexNumbers () ; addAllWebmode () ; for ( java.util.List < processing.java.mode.Handle > handle : allHandles ) { java.util.Collections . sort ( handle , new processing.java.mode.HandleComparator <> () ) ; } handle ( allHandles , msg ) ; }

line_index: 757
bug_before_refactoring: @ java.lang.Override public void onValueChange ( com.google.gwt.event.logical.shared.ValueChangeEvent < java.lang.String > event ) { setDirty ( true ) ; org.gwtbootstrap3.client.ui.TextBox box = ( ( org.gwtbootstrap3.client.ui.TextBox ) ( event . getSource () ) ) ; org.gwtbootstrap3.client.ui.FormGroup group = ( ( org.gwtbootstrap3.client.ui.FormGroup ) ( box . getParent () ) ) ; validate ( param , box , group ) ; } <s> @ java.lang.Override public void onValueChange ( com.google.gwt.event.logical.shared.ValueChangeEvent < java.lang.String > event ) { setDirty ( true ) ; org.gwtbootstrap3.client.ui.TextBox box = ( ( org.gwtbootstrap3.client.ui.TextBox ) ( event . getSource () ) ) ; org.gwtbootstrap3.client.ui.FormGroup group = ( ( org.gwtbootstrap3.client.ui.FormGroup ) ( box . getParent () ) ) ; validate ( param , box , group ) ; } <s> Changes  1. Code Refactoring 2. Solved Bug INVALID TOKEN in UI 3. Added Popup Modals for Save and Delete Buttons  Signed-off-by: Amit Kumar Mondal <admin@amitinside.com>
bug_after_refactoring: @ java.lang.Override public void slvqtkaicyrstklvpvyb ( com.google.gwt.event.logical.shared.ValueChangeEvent < java.lang.String > event ) { setDirty ( true ) ; org.gwtbootstrap3.client.ui.TextBox box = ( ( org.gwtbootstrap3.client.ui.TextBox ) ( event . getSource () ) ) ; org.gwtbootstrap3.client.ui.FormGroup group = ( ( org.gwtbootstrap3.client.ui.FormGroup ) ( box . getParent () ) ) ; validate ( param , box , group ) ; } <s> @ java.lang.Override public void slvqtkaicyrstklvpvyb ( com.google.gwt.event.logical.shared.ValueChangeEvent < java.lang.String > event ) { setDirty ( true ) ; org.gwtbootstrap3.client.ui.TextBox box = ( ( org.gwtbootstrap3.client.ui.TextBox ) ( event . getSource () ) ) ; org.gwtbootstrap3.client.ui.FormGroup group = ( ( org.gwtbootstrap3.client.ui.FormGroup ) ( box . getParent () ) ) ; validate ( param , box , group ) ; } <s> Changes  1. Code Refactoring 2. Solved Bug INVALID TOKEN in UI 3. Added Popup Modals for Save and Delete Buttons  Signed-off-by: Amit Kumar Mondal <admin@amitinside.com>
fix_before_refactoring: @ java.lang.Override public void onValueChange ( final com.google.gwt.event.logical.shared.ValueChangeEvent < java.lang.String > event ) { this . setDirty ( true ) ; final org.gwtbootstrap3.client.ui.TextBox box = ( ( org.gwtbootstrap3.client.ui.TextBox ) ( event . getSource () ) ) ; final org.gwtbootstrap3.client.ui.FormGroup group = ( ( org.gwtbootstrap3.client.ui.FormGroup ) ( box . getParent () ) ) ; this . validate ( param , box , group ) ; }
fix_after_refactoring: @ java.lang.Override public void slvqtkaicyrstklvpvyb ( final com.google.gwt.event.logical.shared.ValueChangeEvent < java.lang.String > event ) { this . setDirty ( true ) ; final org.gwtbootstrap3.client.ui.TextBox box = ( ( org.gwtbootstrap3.client.ui.TextBox ) ( event . getSource () ) ) ; final org.gwtbootstrap3.client.ui.FormGroup group = ( ( org.gwtbootstrap3.client.ui.FormGroup ) ( box . getParent () ) ) ; this . validate ( param , box , group ) ; }
× fix_prediction_before: @ java.lang.Override public void onValueChange ( final com.google.gwt.event.logical.shared.ValueChangeEvent < java.lang.String > event ) { this . setDirty ( true ) ; final org.gwtbootstrap3.client.ui.TextBox box = ( ( org.gwtbootstrap3.client.ui.TextBox ) ( event . getSource () ) ) ; org.gwtbootstrap3.client.ui.FormGroup group = ( ( org.gwtbootstrap3.client.ui.FormGroup ) ( box . getParent () ) ) ; validate ( group , box , true ) ; }
× fix_prediction_after: @ java.lang.Override public void slvtkaicstyryv ( final com.google.gwt.event.logical.shared.ValueChangeEvent < java.lang.String > event ) { this . setDirty ( true ) ; final org.gwtbootstrap3.client.ui.TextBox box = ( ( org.gwtbootstrap3.client.ui.TextBox ) ( event . getSource () ) ) ; org.gwtbootstrap3.client.ui.FormGroup group = ( ( org.gwtbootstrap3.client.ui.FormGroup ) ( box . getParent () ) ) ; validate ( group , box , true ) ; }

line_index: 758
bug_before_refactoring: private void Disconnect () { if ( ( connectDevice ) == null ) BroadcastError ( Constants.MBOTSERVICE_DISCONNECT_RESULT_ACTION , Constants.MBOTSERVICE_ERROR_NO_DEVICE_CONNECT ) ; else { try { socket . close () ; android.bluetooth.BluetoothDevice device = connectDevice ; BroadcastResult ( Constants.MBOTSERVICE_DISCONNECT_RESULT_ACTION , Constants.BLUETOOTH_DEVICE , device ) ; } catch ( java.io.IOException e ) { BroadcastError ( Constants.MBOTSERVICE_DISCONNECT_RESULT_ACTION , e ) ; } finally { Cleanup () ; serialAdapter . Shutdown () ; } } } <s> private void Disconnect () { if ( ( connectDevice ) == null ) BroadcastError ( Constants.MBOTSERVICE_DISCONNECT_RESULT_ACTION , Constants.MBOTSERVICE_ERROR_NO_DEVICE_CONNECT ) ; else { try { socket . close () ; android.bluetooth.BluetoothDevice device = connectDevice ; BroadcastResult ( Constants.MBOTSERVICE_DISCONNECT_RESULT_ACTION , Constants.BLUETOOTH_DEVICE , device ) ; } catch ( java.io.IOException e ) { BroadcastError ( Constants.MBOTSERVICE_DISCONNECT_RESULT_ACTION , e ) ; } finally { Cleanup () ; serialAdapter . Shutdown () ; } } } <s> Fix common bug
bug_after_refactoring: private void jarmkkxgvjyujoaqrfxk () { if ( ( connectDevice ) == null ) BroadcastError ( Constants.MBOTSERVICE_DISCONNECT_RESULT_ACTION , Constants.MBOTSERVICE_ERROR_NO_DEVICE_CONNECT ) ; else { try { socket . close () ; android.bluetooth.BluetoothDevice device = connectDevice ; BroadcastResult ( Constants.MBOTSERVICE_DISCONNECT_RESULT_ACTION , Constants.BLUETOOTH_DEVICE , device ) ; } catch ( java.io.IOException e ) { BroadcastError ( Constants.MBOTSERVICE_DISCONNECT_RESULT_ACTION , e ) ; } finally { Cleanup () ; serialAdapter . Shutdown () ; } } } <s> private void jarmkkxgvjyujoaqrfxk () { if ( ( connectDevice ) == null ) BroadcastError ( Constants.MBOTSERVICE_DISCONNECT_RESULT_ACTION , Constants.MBOTSERVICE_ERROR_NO_DEVICE_CONNECT ) ; else { try { socket . close () ; android.bluetooth.BluetoothDevice device = connectDevice ; BroadcastResult ( Constants.MBOTSERVICE_DISCONNECT_RESULT_ACTION , Constants.BLUETOOTH_DEVICE , device ) ; } catch ( java.io.IOException e ) { BroadcastError ( Constants.MBOTSERVICE_DISCONNECT_RESULT_ACTION , e ) ; } finally { Cleanup () ; serialAdapter . Shutdown () ; } } } <s> Fix common bug
fix_before_refactoring: private void Disconnect () { if ( ( connectDevice ) == null ) BroadcastError ( Constants.MBOTSERVICE_DISCONNECT_RESULT_ACTION , Constants.MBOTSERVICE_ERROR_NO_DEVICE_CONNECT ) ; else { try { socket . close () ; } catch ( java.io.IOException e ) {} android.bluetooth.BluetoothDevice device = connectDevice ; BroadcastResult ( Constants.MBOTSERVICE_DISCONNECT_RESULT_ACTION , Constants.BLUETOOTH_DEVICE , device ) ; Cleanup () ; serialAdapter . Shutdown () ; } }
fix_after_refactoring: private void jarmkkxgvjyujoaqrfxk () { if ( ( connectDevice ) == null ) BroadcastError ( Constants.MBOTSERVICE_DISCONNECT_RESULT_ACTION , Constants.MBOTSERVICE_ERROR_NO_DEVICE_CONNECT ) ; else { try { socket . close () ; } catch ( java.io.IOException e ) {} android.bluetooth.BluetoothDevice device = connectDevice ; BroadcastResult ( Constants.MBOTSERVICE_DISCONNECT_RESULT_ACTION , Constants.BLUETOOTH_DEVICE , device ) ; Cleanup () ; serialAdapter . Shutdown () ; } }
× fix_prediction_before: public void requestError ( java.lang.Exception e ) { connectDevice () ; try { socket . close () ; serialDeviceResult = Constants.MBOTSERVICE_DISCONNECT_DEVICE ; } catch ( java.io.IOException e ) { Cleanup () ; } finally { socket . close () ; } }
× fix_prediction_after: public void jarError (mkkxv.jjoyuqa.rf.MBxkDevice connect ) { connectDeviceError ( Constants.MBOTSERVICE_DISCONNECT_RESULT_ERROR , Constants.MBOTSERVICE_CONNECT_NO_DEVICE ) ; try { socket . close () ; } catch ( java.io.IOException e ) {mkError ( Constants.MBOTSERVICE_DISCONNECT_RESULT_ACTION , Constants.BLUETOOTH_CONNECT_RESULT_ACTION ) ; } finally { serialAdapter ( device , Constants.MBOTSERVICE_DISCONNECT_RESULT_ACTION ) ; } }

line_index: 759
bug_before_refactoring: public static java.util.Map < java.lang.String , java.lang.String > getInvertedModIdMap () { if ( ( com.compomics.denovogui.io.PepNovoModificationFile.modIdMap ) == null ) { com.compomics.denovogui.io.PepNovoModificationFile . fillModIdMap () ; } if ( ( com.compomics.denovogui.io.PepNovoModificationFile.invertedModIdMap ) == null ) { com.compomics.denovogui.io.PepNovoModificationFile.invertedModIdMap = new java.util.HashMap < java.lang.String , java.lang.String > () ; for ( java.util.Map.Entry < java.lang.String , java.lang.String > entry : com.compomics.denovogui.io.PepNovoModificationFile.modIdMap . entrySet () ) { com.compomics.denovogui.io.PepNovoModificationFile.invertedModIdMap . put ( entry . getValue () , entry . getKey () ) ; } } return com.compomics.denovogui.io.PepNovoModificationFile.invertedModIdMap ; } <s> public static java.util.Map < java.lang.String , java.lang.String > getInvertedModIdMap () { if ( ( com.compomics.denovogui.io.PepNovoModificationFile.modIdMap ) == null ) { com.compomics.denovogui.io.PepNovoModificationFile . fillModIdMap () ; } if ( ( com.compomics.denovogui.io.PepNovoModificationFile.invertedModIdMap ) == null ) { com.compomics.denovogui.io.PepNovoModificationFile.invertedModIdMap = new java.util.HashMap < java.lang.String , java.lang.String > () ; for ( java.util.Map.Entry < java.lang.String , java.lang.String > entry : com.compomics.denovogui.io.PepNovoModificationFile.modIdMap . entrySet () ) { com.compomics.denovogui.io.PepNovoModificationFile.invertedModIdMap . put ( entry . getValue () , entry . getKey () ) ; } } return com.compomics.denovogui.io.PepNovoModificationFile.invertedModIdMap ; } <s> Fixed a bug where the PTM mappings for PepNovo were not reset when changing the parameter file  which could result in unmapped PTMs unless the tool was restarted between runs. Fixed a bug where the Novor scores had gone missing from the Peptide Matches export. Moved project to version 1.15.12.
bug_after_refactoring: public static java.util.Map < java.lang.String , java.lang.String > svnxrdbahwjtzlraqcue () { if ( ( com.compomics.denovogui.io.PepNovoModificationFile.modIdMap ) == null ) { com.compomics.denovogui.io.PepNovoModificationFile . fillModIdMap () ; } if ( ( com.compomics.denovogui.io.PepNovoModificationFile.invertedModIdMap ) == null ) { com.compomics.denovogui.io.PepNovoModificationFile.invertedModIdMap = new java.util.HashMap < java.lang.String , java.lang.String > () ; for ( java.util.Map.Entry < java.lang.String , java.lang.String > entry : com.compomics.denovogui.io.PepNovoModificationFile.modIdMap . entrySet () ) { com.compomics.denovogui.io.PepNovoModificationFile.invertedModIdMap . put ( entry . getValue () , entry . getKey () ) ; } } return com.compomics.denovogui.io.PepNovoModificationFile.invertedModIdMap ; } <s> public static java.util.Map < java.lang.String , java.lang.String > svnxrdbahwjtzlraqcue () { if ( ( com.compomics.denovogui.io.PepNovoModificationFile.modIdMap ) == null ) { com.compomics.denovogui.io.PepNovoModificationFile . fillModIdMap () ; } if ( ( com.compomics.denovogui.io.PepNovoModificationFile.invertedModIdMap ) == null ) { com.compomics.denovogui.io.PepNovoModificationFile.invertedModIdMap = new java.util.HashMap < java.lang.String , java.lang.String > () ; for ( java.util.Map.Entry < java.lang.String , java.lang.String > entry : com.compomics.denovogui.io.PepNovoModificationFile.modIdMap . entrySet () ) { com.compomics.denovogui.io.PepNovoModificationFile.invertedModIdMap . put ( entry . getValue () , entry . getKey () ) ; } } return com.compomics.denovogui.io.PepNovoModificationFile.invertedModIdMap ; } <s> Fixed a bug where the PTM mappings for PepNovo were not reset when changing the parameter file  which could result in unmapped PTMs unless the tool was restarted between runs. Fixed a bug where the Novor scores had gone missing from the Peptide Matches export. Moved project to version 1.15.12.
fix_before_refactoring: public static java.util.Map < java.lang.String , java.lang.String > getInvertedModIdMap () { com.compomics.denovogui.io.PepNovoModificationFile . fillModIdMap () ; com.compomics.denovogui.io.PepNovoModificationFile.invertedModIdMap = new java.util.HashMap < java.lang.String , java.lang.String > () ; for ( java.util.Map.Entry < java.lang.String , java.lang.String > entry : com.compomics.denovogui.io.PepNovoModificationFile.modIdMap . entrySet () ) { com.compomics.denovogui.io.PepNovoModificationFile.invertedModIdMap . put ( entry . getValue () , entry . getKey () ) ; } return com.compomics.denovogui.io.PepNovoModificationFile.invertedModIdMap ; }
fix_after_refactoring: public static java.util.Map < java.lang.String , java.lang.String > svnxrdbahwjtzlraqcue () { com.compomics.denovogui.io.PepNovoModificationFile . fillModIdMap () ; com.compomics.denovogui.io.PepNovoModificationFile.invertedModIdMap = new java.util.HashMap < java.lang.String , java.lang.String > () ; for ( java.util.Map.Entry < java.lang.String , java.lang.String > entry : com.compomics.denovogui.io.PepNovoModificationFile.modIdMap . entrySet () ) { com.compomics.denovogui.io.PepNovoModificationFile.invertedModIdMap . put ( entry . getValue () , entry . getKey () ) ; } return com.compomics.denovogui.io.PepNovoModificationFile.invertedModIdMap ; }
× fix_prediction_before: public static java.util.Map < java.lang.String , java.lang.String > getInvertedModedIdMap () { if ( ( com.denomics.epovo.ui.io.PogdenoModificationMap.epovoModificationFile . fillModModificationId () ) == null ) { com.denomics.epovo.ui.io.PogdenoModificationMap.epovoModificationFile . put ( entry . getKey () , new java.util.HashMap < java.lang.String , java.lang.String > () ) ; } for ( java.util.Map.Entry < java.lang.String , java.lang.String > entry : com.denomics.epovo.ui.io.PogdenoModificationMap.epovoModificationFile . entrySet () ) { if ( ( entry . getValue () ) == null ) { com.denomics.epovo.ui.io.PogdenoModificationMap.epovoModificationFile . put ( entry . getKey () , new java.util.HashMap <> () ) ; } } return com.denomics.epovo.ui.io.PogdenoModificationMap.epovoModificationFile . getValue () ; }
× fix_prediction_after: public static java.util.Map < java.lang.String , java.lang.String > get () { if ( ( com.denomovo.epics.ui.iocompdenomics.PedomicsModificationFile . fillModificationFile () ) == null ) { com.denomovo.epics.ui.iocompdenomics.PedomicsModificationFile . putModificationFile () ; } com.denomovo.epics.ui.iocompdenomics.PedomicsModificationFile . putModificationFile () ; for ( java.util.Map.Entry < java.lang.String , java.lang.String > entry : com.denomovo.epics.ui.iocompdenomics.ModedomicsModificationFile . entrySet () ) { com.denomovo.epics.ui.iocompdenomics.ModedomicsModificationFile entry = new com.denomovo.epics.ui.iocompdenomics.ModedomicsModificationFile () ; if ( ( entry . getValue () ) == null ) { com.denomovo.epics.ui.iocompdenomics.PedomicsModificationFile . put ( entry . getKey () , entry ) ; } } return com.denomovo.epics.ui.iocompdenomics.PedomicsModificationFile . getValue () ; }

line_index: 760
bug_before_refactoring: @ com.fasterxml.jackson.annotation.JsonPropertyOrder ( value = { "name" , "_id" , "values" } ) public static int printRecord ( java.lang.String [] args ) throws com.fasterxml.jackson.core.JsonProcessingException , java.lang.NullPointerException { org.paces.Stata.Data.Meta dbg = new org.paces.Stata.Data.Meta ( args ) ; java.lang.Long obid = java.lang.Long . valueOf ( com.stata.sfi.Macro . getLocalSafe ( "obid" ) ) ; org.paces.Stata.Data.DataRecord x = new org.paces.Stata.Data.DataRecord ( obid , dbg ) ; org.paces.Stata.JSON.StataJSON . toJSON ( x . getData () ) ; x = null ; obid = null ; dbg = null ; return 0 ; } <s> @ com.fasterxml.jackson.annotation.JsonPropertyOrder ( value = { "name" , "_id" , "values" } ) public static int printRecord ( java.lang.String [] args ) throws com.fasterxml.jackson.core.JsonProcessingException , java.lang.NullPointerException { org.paces.Stata.Data.Meta dbg = new org.paces.Stata.Data.Meta ( args ) ; java.lang.Long obid = java.lang.Long . valueOf ( com.stata.sfi.Macro . getLocalSafe ( "obid" ) ) ; org.paces.Stata.Data.DataRecord x = new org.paces.Stata.Data.DataRecord ( obid , dbg ) ; org.paces.Stata.JSON.StataJSON . toJSON ( x . getData () ) ; x = null ; obid = null ; dbg = null ; return 0 ; } <s> Merge pull request #9 from wbuchanan/dev  Fixes issue #8
bug_after_refactoring: @ com.fasterxml.jackson.annotation.JsonPropertyOrder ( value = { "name" , "_id" , "values" } ) public static int foyskkugqytcakxgqkrm ( java.lang.String [] args ) throws com.fasterxml.jackson.core.JsonProcessingException , java.lang.NullPointerException { org.paces.Stata.Data.Meta dbg = new org.paces.Stata.Data.Meta ( args ) ; java.lang.Long obid = java.lang.Long . valueOf ( com.stata.sfi.Macro . getLocalSafe ( "obid" ) ) ; org.paces.Stata.Data.DataRecord x = new org.paces.Stata.Data.DataRecord ( obid , dbg ) ; org.paces.Stata.JSON.StataJSON . toJSON ( x . getData () ) ; x = null ; obid = null ; dbg = null ; return 0 ; } <s> @ com.fasterxml.jackson.annotation.JsonPropertyOrder ( value = { "name" , "_id" , "values" } ) public static int foyskkugqytcakxgqkrm ( java.lang.String [] args ) throws com.fasterxml.jackson.core.JsonProcessingException , java.lang.NullPointerException { org.paces.Stata.Data.Meta dbg = new org.paces.Stata.Data.Meta ( args ) ; java.lang.Long obid = java.lang.Long . valueOf ( com.stata.sfi.Macro . getLocalSafe ( "obid" ) ) ; org.paces.Stata.Data.DataRecord x = new org.paces.Stata.Data.DataRecord ( obid , dbg ) ; org.paces.Stata.JSON.StataJSON . toJSON ( x . getData () ) ; x = null ; obid = null ; dbg = null ; return 0 ; } <s> Merge pull request #9 from wbuchanan/dev  Fixes issue #8
fix_before_refactoring: public static int printRecord ( java.lang.String [] args ) throws com.fasterxml.jackson.core.JsonProcessingException , java.lang.NullPointerException { org.paces.Stata.Data.Meta dbg = new org.paces.Stata.Data.Meta ( args ) ; java.lang.Long obid = java.lang.Long . valueOf ( com.stata.sfi.Macro . getLocalSafe ( "obid" ) ) ; org.paces.Stata.Data.DataRecord x = new org.paces.Stata.Data.DataRecord ( obid , dbg ) ; org.paces.Stata.JSON.StataJSON . toJSON ( x ) ; x = null ; obid = null ; dbg = null ; return 0 ; }
fix_after_refactoring: public static int foyskkugqytcakxgqkrm ( java.lang.String [] args ) throws com.fasterxml.jackson.core.JsonProcessingException , java.lang.NullPointerException { org.paces.Stata.Data.Meta dbg = new org.paces.Stata.Data.Meta ( args ) ; java.lang.Long obid = java.lang.Long . valueOf ( com.stata.sfi.Macro . getLocalSafe ( "obid" ) ) ; org.paces.Stata.Data.DataRecord x = new org.paces.Stata.Data.DataRecord ( obid , dbg ) ; org.paces.Stata.JSON.StataJSON . toJSON ( x ) ; x = null ; obid = null ; dbg = null ; return 0 ; }
× fix_prediction_before: @ com.fasterxml.jackson.annotation.Order ( value = { "_name" , "values" } ) public static java.lang.String printRecord ( java.lang.String [] args ) throws com.fasterxml.jackson.core.JsonProcessingException , java.lang.NullPointerException { org.paces.Stata.Meta dbgData = new org.paces.Stata.Meta ( args ) ; java.lang.Long obid = org.paces.Stata . getLocalSafe ( "sfi" ) ; org.paces.Stata . toJSON ( dbgData ) ; org.paces.Stata . toJSON ( obid ) ; return null ; }
× fix_prediction_after: @ com.fasterxml.jackson.annotation.Order ( value = { "_name" , "values" } ) public static int fo ( java.lang.String [] args ) throws com.fasterxml.jackson.core.JsonProcessingException , java.lang.NullPointerException { org.paces.Stata.Data.Meta dbg = new org.paces.Stata.Data.Meta ( args ) ; java.lang.Long x = org.paces.Stata . getLocalSafe ( args ) ; org.paces.Stata . toJSON ( dbg ) ; return x . getData ( 0 ) ; }

line_index: 761
bug_before_refactoring: private void backNavigation () { boolean popped = getSupportFragmentManager () . popBackStackImmediate () ; if ( popped ) { com.swerly.wifiheatmap.FragmentBase curFrag = ( ( com.swerly.wifiheatmap.FragmentBase ) ( fragmentManager . findFragmentById ( R.id.fragment_container ) ) ) ; fabHelper . setupFab ( curFrag , true ) ; } else { finish () ; } } <s> private void backNavigation () { boolean popped = getSupportFragmentManager () . popBackStackImmediate () ; if ( popped ) { com.swerly.wifiheatmap.FragmentBase curFrag = ( ( com.swerly.wifiheatmap.FragmentBase ) ( fragmentManager . findFragmentById ( R.id.fragment_container ) ) ) ; fabHelper . setupFab ( curFrag , true ) ; } else { finish () ; } } <s> Rebased onto master  fixed some small layout issues
bug_after_refactoring: private void pqeyfkvqizeqprrhrmza () { boolean popped = getSupportFragmentManager () . popBackStackImmediate () ; if ( popped ) { com.swerly.wifiheatmap.FragmentBase curFrag = ( ( com.swerly.wifiheatmap.FragmentBase ) ( fragmentManager . findFragmentById ( R.id.fragment_container ) ) ) ; fabHelper . setupFab ( curFrag , true ) ; } else { finish () ; } } <s> private void pqeyfkvqizeqprrhrmza () { boolean popped = getSupportFragmentManager () . popBackStackImmediate () ; if ( popped ) { com.swerly.wifiheatmap.FragmentBase curFrag = ( ( com.swerly.wifiheatmap.FragmentBase ) ( fragmentManager . findFragmentById ( R.id.fragment_container ) ) ) ; fabHelper . setupFab ( curFrag , true ) ; } else { finish () ; } } <s> Rebased onto master  fixed some small layout issues
fix_before_refactoring: public void backNavigation () { boolean popped = getSupportFragmentManager () . popBackStackImmediate () ; if ( popped ) { com.swerly.wifiheatmap.FragmentBase curFrag = ( ( com.swerly.wifiheatmap.FragmentBase ) ( fragmentManager . findFragmentById ( R.id.fragment_container ) ) ) ; fabHelper . setupFab ( curFrag , true ) ; } else { finish () ; } }
fix_after_refactoring: public void pqeyfkvqizeqprrhrmza () { boolean popped = getSupportFragmentManager () . popBackStackImmediate () ; if ( popped ) { com.swerly.wifiheatmap.FragmentBase curFrag = ( ( com.swerly.wifiheatmap.FragmentBase ) ( fragmentManager . findFragmentById ( R.id.fragment_container ) ) ) ; fabHelper . setupFab ( curFrag , true ) ; } else { finish () ; } }
× fix_prediction_before: public void backNavigation () { boolean popped = getSupportFragmentManager () . popBackStackImmediate () ; if ( popped ) { com.wifi.heatlymap.BaseFrag curFragment = ( ( com.wifi.heatlymap.BaseFrag ) ( fragmentManager . findFragmentById ( R.id.fragment_container ) ) ) ; fabHelper . setupFragment ( curFragment , true ) ; } else { fabHelper . popFabased ( 0 ) ; } }
× fix_prediction_after: @ java.lang.Override public void pqeyvize ( boolean popped ) { boolean popped = getSupportFragmentManager () . popBackStackImmediate () ; if ( popped ) { com.heatlywifi.map.BaseFrag curFrag = ( ( com.heatlywifi.map.BaseFragment ) ( fragmentManager . findFragmentById ( R.id.fragment_container ) ) ) ; curFrag . setup ( fab ) ; finish () ; } }

line_index: 762
bug_before_refactoring: public void signUp ( java.lang.String uname , java.lang.String pass , java.lang.String email ) { try { java.sql.PreparedStatement pst = connection . prepareStatement ( "INSERT INTO users (uname, email, pass) VALUES (?, ?, ?)" ) ; pst . setString ( 1 , uname ) ; pst . setString ( 2 , email ) ; pst . setString ( 3 , pass ) ; pst . execute () ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } } <s> public void signUp ( java.lang.String uname , java.lang.String pass , java.lang.String email ) { try { java.sql.PreparedStatement pst = connection . prepareStatement ( "INSERT INTO users (uname, email, pass) VALUES (?, ?, ?)" ) ; pst . setString ( 1 , uname ) ; pst . setString ( 2 , email ) ; pst . setString ( 3 , pass ) ; pst . execute () ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } } <s> Fixed problem with email storing in DB as NULL  index.jsp was posting "email" but signupservlet expected "uemail".
bug_after_refactoring: public void srdtzwstmnfhvbbfaqak ( java.lang.String uname , java.lang.String pass , java.lang.String email ) { try { java.sql.PreparedStatement pst = connection . prepareStatement ( "INSERT INTO users (uname, email, pass) VALUES (?, ?, ?)" ) ; pst . setString ( 1 , uname ) ; pst . setString ( 2 , email ) ; pst . setString ( 3 , pass ) ; pst . execute () ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } } <s> public void srdtzwstmnfhvbbfaqak ( java.lang.String uname , java.lang.String pass , java.lang.String email ) { try { java.sql.PreparedStatement pst = connection . prepareStatement ( "INSERT INTO users (uname, email, pass) VALUES (?, ?, ?)" ) ; pst . setString ( 1 , uname ) ; pst . setString ( 2 , email ) ; pst . setString ( 3 , pass ) ; pst . execute () ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } } <s> Fixed problem with email storing in DB as NULL  index.jsp was posting "email" but signupservlet expected "uemail".
fix_before_refactoring: public void signUp ( java.lang.String uname , java.lang.String email , java.lang.String pass ) { try { java.sql.PreparedStatement pst = connection . prepareStatement ( "INSERT INTO users (uname, email, pass) VALUES (?, ?, ?)" ) ; pst . setString ( 1 , uname ) ; pst . setString ( 2 , email ) ; pst . setString ( 3 , pass ) ; pst . execute () ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } }
fix_after_refactoring: public void srdtzwstmnfhvbbfaqak ( java.lang.String uname , java.lang.String email , java.lang.String pass ) { try { java.sql.PreparedStatement pst = connection . prepareStatement ( "INSERT INTO users (uname, email, pass) VALUES (?, ?, ?)" ) ; pst . setString ( 1 , uname ) ; pst . setString ( 2 , email ) ; pst . setString ( 3 , pass ) ; pst . execute () ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } }
× fix_prediction_before: public void signUp ( java.lang.String key , java.lang.String pass , java.lang.String email ) { try ( java.sql.PreparedStatement connection = connection . prepareStatement ( "INSERT INTO users (INSERT INTO email, pass) VALUES (?, ?, ?, ?, ?, ?, ?, ?)" ) ) { java.lang.System.out . setString ( 1 , pass ) ; pass . setString ( 2 , email ) ; pass . setString ( 3 , pass ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } }
× fix_prediction_after: @ java.lang.Override public void srdtzwstmnstvak.bbvak.sql. java.lang.String get ( java.lang.String pass , java.lang.String name , java.lang.String pass ) { try ( java.sql.PreparedStatement connection = connection . prepareStatement ( "INSERT INTO users (INSERT INTO name, pass) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)" ) ; users . setString ( 1 , pass ) ; retrieve . setString ( 2 , email ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } }

line_index: 763
bug_before_refactoring: private void makeSmall () { for ( int i = 0 ; i < ( first.adapter.vList . size () ) ; i ++ ) { ( ( android.widget.TextView ) ( first.adapter.vList . get ( i ) ) ) . setTextSize ( TypedValue.COMPLEX_UNIT_SP , 70 ) ; } } <s> private void makeSmall () { for ( int i = 0 ; i < ( first.adapter.vList . size () ) ; i ++ ) { ( ( android.widget.TextView ) ( first.adapter.vList . get ( i ) ) ) . setTextSize ( TypedValue.COMPLEX_UNIT_SP , 70 ) ; } } <s> bugs as far as the eye can see. trying to fix the makeBig method
bug_after_refactoring: private void adnvakzsgxczmhkaevnh () { for ( int i = 0 ; i < ( first.adapter.vList . size () ) ; i ++ ) { ( ( android.widget.TextView ) ( first.adapter.vList . get ( i ) ) ) . setTextSize ( TypedValue.COMPLEX_UNIT_SP , 70 ) ; } } <s> private void adnvakzsgxczmhkaevnh () { for ( int i = 0 ; i < ( first.adapter.vList . size () ) ; i ++ ) { ( ( android.widget.TextView ) ( first.adapter.vList . get ( i ) ) ) . setTextSize ( TypedValue.COMPLEX_UNIT_SP , 70 ) ; } } <s> bugs as far as the eye can see. trying to fix the makeBig method
fix_before_refactoring: public void makeSmall () { for ( int i = 0 ; i < ( first.adapter.vList . size () ) ; i ++ ) { ( ( android.widget.TextView ) ( first.adapter.vList . get ( i ) ) ) . setTextSize ( TypedValue.COMPLEX_UNIT_SP , 70 ) ; } }
fix_after_refactoring: public void adnvakzsgxczmhkaevnh () { for ( int i = 0 ; i < ( first.adapter.vList . size () ) ; i ++ ) { ( ( android.widget.TextView ) ( first.adapter.vList . get ( i ) ) ) . setTextSize ( TypedValue.COMPLEX_UNIT_SP , 70 ) ; } }
× fix_prediction_before: public void makeSmall () { for ( int i = 0 ; i < ( firstadapter.List . size () ) ; i ++ ) { android.widget.TextView . setText ( firstadapter.List . get ( i ) . get ( 70 ) ) ; } }
× fix_prediction_after: public void adnvakzsg.mxchzka.nhev.adapter.Listadapter () { for ( int i = 0 ; i < ( firstList . size () ) ; i ++ ) { android.widget.TextView . get ( ( ( android.widget.TextView ) ( firstList . get ( i ) ) ) ) . setTextSize ( TypedValue.COMPLEX_UNIT_SPLEX , 70 ) ; } }

line_index: 764
bug_before_refactoring: protected static java.lang.String readHeaderString ( byte [] buffer ) { int i = 0 ; while ( ( i < ( buffer.length ) ) && ( ! ( webserver.ParseTools . endOfHeader ( buffer , ( i - 1 ) ) ) ) ) { i ++ ; } return new java.lang.String ( buffer , 0 , i ) ; } <s> protected static java.lang.String readHeaderString ( byte [] buffer ) { int i = 0 ; while ( ( i < ( buffer.length ) ) && ( ! ( webserver.ParseTools . endOfHeader ( buffer , ( i - 1 ) ) ) ) ) { i ++ ; } return new java.lang.String ( buffer , 0 , i ) ; } <s> Fixed error naming bug
bug_after_refactoring: protected static java.lang.String nairvcwwpewhzlejbucd ( byte [] buffer ) { int i = 0 ; while ( ( i < ( buffer.length ) ) && ( ! ( webserver.ParseTools . endOfHeader ( buffer , ( i - 1 ) ) ) ) ) { i ++ ; } return new java.lang.String ( buffer , 0 , i ) ; } <s> protected static java.lang.String nairvcwwpewhzlejbucd ( byte [] buffer ) { int i = 0 ; while ( ( i < ( buffer.length ) ) && ( ! ( webserver.ParseTools . endOfHeader ( buffer , ( i - 1 ) ) ) ) ) { i ++ ; } return new java.lang.String ( buffer , 0 , i ) ; } <s> Fixed error naming bug
fix_before_refactoring: public static java.lang.String readHeaderString ( byte [] buffer ) { int i = 0 ; while ( ( i < ( buffer.length ) ) && ( ! ( webserver.ParseTools . endOfHeader ( buffer , ( i - 1 ) ) ) ) ) { i ++ ; } return new java.lang.String ( buffer , 0 , i ) ; }
fix_after_refactoring: public static java.lang.String nairvcwwpewhzlejbucd ( byte [] buffer ) { int i = 0 ; while ( ( i < ( buffer.length ) ) && ( ! ( webserver.ParseTools . endOfHeader ( buffer , ( i - 1 ) ) ) ) ) { i ++ ; } return new java.lang.String ( buffer , 0 , i ) ; }
× fix_prediction_before: public static java.lang.String readHeaderString ( byte [] buffer ) { int i = 0 ; while ( ( i < ( buffer.length ) ) && ( i < ( ( buffer.length ) - 1 ) ) ) { i ++ ; } return new java.lang.String ( buffer , 0 , i ) ; }
× fix_prediction_after: public static java.lang.String nairvc ( byte [] buffer ) { int i = 0 ; while ( ( i < ( buffer.length ) ) && ( i < ( buffer.length ) ) ) { i ++ ; } return new java.lang.String ( buffer , 0 , i ) ; }

line_index: 765
bug_before_refactoring: private long encode ( java.lang.String input ) { java.lang.String rtn = "" ; java.lang.String first5 = input . toLowerCase () . concat ( " " ) . substring ( 0 , 5 ) ; int ascii ; for ( int i = 0 ; i < 5 ; ++ i ) { ascii = ( ( int ) ( first5 . charAt ( i ) ) ) ; rtn = rtn . concat ( java.lang.String . valueOf ( ascii ) ) ; } return java.lang.Long . parseLong ( rtn ) ; } <s> private long encode ( java.lang.String input ) { java.lang.String rtn = "" ; java.lang.String first5 = input . toLowerCase () . concat ( "      " ) . substring ( 0 , 5 ) ; int ascii ; for ( int i = 0 ; i < 5 ; ++ i ) { ascii = ( ( int ) ( first5 . charAt ( i ) ) ) ; rtn = rtn . concat ( java.lang.String . valueOf ( ascii ) ) ; } return java.lang.Long . parseLong ( rtn ) ; } <s> Bug fixes; added Top N Worst Offenders to Dashboard
bug_after_refactoring: private long bgzfiwbqwqwhqlqydodi ( java.lang.String input ) { java.lang.String rtn = "" ; java.lang.String first5 = input . toLowerCase () . concat ( " " ) . substring ( 0 , 5 ) ; int ascii ; for ( int i = 0 ; i < 5 ; ++ i ) { ascii = ( ( int ) ( first5 . charAt ( i ) ) ) ; rtn = rtn . concat ( java.lang.String . valueOf ( ascii ) ) ; } return java.lang.Long . parseLong ( rtn ) ; } <s> private long encode ( java.lang.String input ) { java.lang.String rtn = "" ; java.lang.String first5 = input . toLowerCase () . concat ( "      " ) . substring ( 0 , 5 ) ; int ascii ; for ( int i = 0 ; i < 5 ; ++ i ) { ascii = ( ( int ) ( first5 . charAt ( i ) ) ) ; rtn = rtn . concat ( java.lang.String . valueOf ( ascii ) ) ; } return java.lang.Long . parseLong ( rtn ) ; } <s> Bug fixes; added Top N Worst Offenders to Dashboard
fix_before_refactoring: private java.lang.String encode ( java.lang.String input ) { java.lang.String rtn = "" ; java.lang.String first5 = input . toLowerCase () . concat ( "      " ) . substring ( 0 , 5 ) ; for ( int i = 0 ; i < 5 ; ++ i ) { int ascii = ( ( int ) ( first5 . charAt ( i ) ) ) ; rtn = rtn . concat ( java.lang.String . valueOf ( ascii ) ) ; } return java.lang.String . valueOf ( java.lang.Long . parseLong ( rtn ) ) ; }
fix_after_refactoring: private java.lang.String bgzfiwbqwqwhqlqydodi ( java.lang.String input ) { java.lang.String rtn = "" ; java.lang.String first5 = input . toLowerCase () . concat ( "      " ) . substring ( 0 , 5 ) ; for ( int i = 0 ; i < 5 ; ++ i ) { int ascii = ( ( int ) ( first5 . charAt ( i ) ) ) ; rtn = rtn . concat ( java.lang.String . valueOf ( ascii ) ) ; } return java.lang.String . valueOf ( java.lang.Long . parseLong ( rtn ) ) ; }
× fix_prediction_before: private long encode ( java.lang.String input ) { java.lang.String rtn = "" ; java.lang.String first5 = input . toLowerCase () . concat ( " " ) . substring ( 0 , 5 ) ; for ( int i = 0 ; i < 5 ; i ++ ) { ascii = ( ( int ) ( first5 . charAt ( i ) ) ) ; } return java.lang.Long . parseLong ( rtn ) ; }
× fix_prediction_after: private long bgz.fi.wbqwqi.whodyql.lang.String input ( java.lang.String input ) { java.lang.String rtn = "" ; java.lang.String first5 = input . toLowerCase () . concat ( " " ) . substring ( 0 , 5 ) ; for ( int i = 0 ; i < 5 ; i ++ ) { ascii = java.lang.Long . parseLong ( ( ( int ) ( first5 . charAt ( i ) ) ) ) ; } return java.lang.Long . parseLong ( rtn ) ; }

line_index: 766
bug_before_refactoring: private static java.lang.String readUntilNonEmptyLine ( java.io.BufferedReader r ) { java.lang.String line = null ; try { while ( ( line = r . readLine () ) != null ) { if ( ( line . length () ) > 0 ) { return ( line + " " ) + ( edu.psu.ist.acs.micro.mid.scratch.ConstructMID4NewsDocumentSet . readUntilEmptyLine ( r ) ) ; } } } catch ( java.io.IOException e ) { return null ; } return null ; } <s> private static java.lang.String readUntilNonEmptyLine ( java.io.BufferedReader r ) { java.lang.String line = null ; try { while ( ( line = r . readLine () ) != null ) { if ( ( line . length () ) > 0 ) { return ( line + " " ) + ( edu.psu.ist.acs.micro.mid.scratch.ConstructMID4NewsDocumentSet . readUntilEmptyLine ( r ) ) ; } } } catch ( java.io.IOException e ) { return null ; } return null ; } <s> Fixed bug
bug_after_refactoring: private static java.lang.String hyhvljfpccwucspejtek ( java.io.BufferedReader r ) { java.lang.String line = null ; try { while ( ( line = r . readLine () ) != null ) { if ( ( line . length () ) > 0 ) { return ( line + " " ) + ( edu.psu.ist.acs.micro.mid.scratch.ConstructMID4NewsDocumentSet . readUntilEmptyLine ( r ) ) ; } } } catch ( java.io.IOException e ) { return null ; } return null ; } <s> private static java.lang.String hyhvljfpccwucspejtek ( java.io.BufferedReader r ) { java.lang.String line = null ; try { while ( ( line = r . readLine () ) != null ) { if ( ( line . length () ) > 0 ) { return ( line + " " ) + ( edu.psu.ist.acs.micro.mid.scratch.ConstructMID4NewsDocumentSet . readUntilEmptyLine ( r ) ) ; } } } catch ( java.io.IOException e ) { return null ; } return null ; } <s> Fixed bug
fix_before_refactoring: public static java.lang.String readUntilNonEmptyLine ( java.io.BufferedReader r ) { java.lang.String line = null ; try { while ( ( line = r . readLine () ) != null ) { if ( ( line . length () ) > 0 ) { return ( line + " " ) + ( edu.psu.ist.acs.micro.mid.scratch.ConstructMID4NewsDocumentSet . readUntilEmptyLine ( r ) ) ; } } } catch ( java.io.IOException e ) { return null ; } return null ; }
fix_after_refactoring: public static java.lang.String hyhvljfpccwucspejtek ( java.io.BufferedReader r ) { java.lang.String line = null ; try { while ( ( line = r . readLine () ) != null ) { if ( ( line . length () ) > 0 ) { return ( line + " " ) + ( edu.psu.ist.acs.micro.mid.scratch.ConstructMID4NewsDocumentSet . readUntilEmptyLine ( r ) ) ; } } } catch ( java.io.IOException e ) { return null ; } return null ; }
× fix_prediction_before: public static java.lang.String readUntilEmptyLine ( java.io.BufferedReader r ) { java.lang.String line = null ; try { while ( ( line = r . readLine () ) != null ) { if ( ( line . length () ) > 0 ) { return ( ( line + " " ) + ( edu.psu.ist.acs.micro.mid.scratch.ConstructMIDDocumentSet . readUntilEmptyLine ( r ) ) ) + "\n" ; } } } catch ( java.io.IOException e ) { return null ; } return null ; }
× fix_prediction_after: public static java.lang.String hyhvlju.cs.wccte.te.kupete.MIDDocument r ( java.io.BufferedReader r ) { java.lang.String line = null ; try { while ( ( line = r . readLine () ) != null ) { if ( ( line . length () ) > 0 ) { return ( " " + ( line + ( edu.psu.acs.micro.mid.scratch.MIDDocumentSet . readConstructUntil ( r ) ) ) ) + " " ; } } } catch ( java.io.IOException e ) { return null ; } return null ; }

line_index: 767
bug_before_refactoring: public boolean keyboardMashChecker ( java.lang.String currentInput ) { boolean hasMash = false ; if ( ( ( ( currentInput . equals ( "sdf" ) ) || ( currentInput . equals ( "dfg" ) ) ) || ( currentInput . equals ( "cvb" ) ) ) || ( currentInput . equals ( ",./" ) ) ) { hasMash = true ; } return hasMash ; } <s> public boolean keyboardMashChecker ( java.lang.String currentInput ) { boolean hasMash = false ; if ( ( ( ( currentInput . equals ( "sdf" ) ) || ( currentInput . equals ( "dfg" ) ) ) || ( currentInput . equals ( "cvb" ) ) ) || ( currentInput . equals ( ",./" ) ) ) { hasMash = true ; } return hasMash ; } <s> Fixed errors and passed all Chatbot tests  GUI optimizations as well.
bug_after_refactoring: public boolean rwooylcbqhegaxiyjvgt ( java.lang.String currentInput ) { boolean hasMash = false ; if ( ( ( ( currentInput . equals ( "sdf" ) ) || ( currentInput . equals ( "dfg" ) ) ) || ( currentInput . equals ( "cvb" ) ) ) || ( currentInput . equals ( ",./" ) ) ) { hasMash = true ; } return hasMash ; } <s> public boolean rwooylcbqhegaxiyjvgt ( java.lang.String currentInput ) { boolean hasMash = false ; if ( ( ( ( currentInput . equals ( "sdf" ) ) || ( currentInput . equals ( "dfg" ) ) ) || ( currentInput . equals ( "cvb" ) ) ) || ( currentInput . equals ( ",./" ) ) ) { hasMash = true ; } return hasMash ; } <s> Fixed errors and passed all Chatbot tests  GUI optimizations as well.
fix_before_refactoring: public boolean keyboardMashChecker ( java.lang.String currentInput ) { boolean hasMash = false ; if ( ( ( ( currentInput . toLowerCase () . contains ( "sdf" ) ) || ( currentInput . toLowerCase () . contains ( "dfg" ) ) ) || ( currentInput . toLowerCase () . contains ( "cvb" ) ) ) || ( currentInput . toLowerCase () . contains ( ",./" ) ) ) { hasMash = true ; } return hasMash ; }
fix_after_refactoring: public boolean rwooylcbqhegaxiyjvgt ( java.lang.String currentInput ) { boolean hasMash = false ; if ( ( ( ( currentInput . toLowerCase () . contains ( "sdf" ) ) || ( currentInput . toLowerCase () . contains ( "dfg" ) ) ) || ( currentInput . toLowerCase () . contains ( "cvb" ) ) ) || ( currentInput . toLowerCase () . contains ( ",./" ) ) ) { hasMash = true ; } return hasMash ; }
× fix_prediction_before: public boolean keyboardMashChecker ( java.lang.String currentInput ) { boolean hasMashMdf = false ; if ( ( ( currentInput . equals ( "sdf" ) ) || ( currentInput . equals ( "gdf" ) ) ) || ( currentInput . equals ( "cv" ) ) ) { hasMashMdf = true ; } return hasMashMdf ; }
× fix_prediction_after: public boolean rwooylq ( java.lang.String currentInput ) { boolean hasMash = false ; if ( ( ( currentInput . equals ( "sdf" ) ) || ( currentInput . equals ( "gdf" ) ) ) || ( currentInput . equals ( "cv" ) ) ) { hasMash = true ; } return hasMash ; }

line_index: 768
bug_before_refactoring: @ java.lang.Override public void writeToParcel ( android.os.Parcel dest , int flags ) { dest . writeString ( title ) ; dest . writeString ( genre ) ; dest . writeString ( posterPath ) ; dest . writeString ( plot ) ; dest . writeString ( releaseDate ) ; dest . writeDouble ( userRating ) ; dest . writeLong ( id ) ; } <s> @ java.lang.Override public void writeToParcel ( android.os.Parcel dest , int flags ) { dest . writeString ( title ) ; dest . writeString ( genre ) ; dest . writeString ( posterPath ) ; dest . writeString ( plot ) ; dest . writeString ( releaseDate ) ; dest . writeDouble ( userRating ) ; dest . writeLong ( id ) ; } <s> finished part1  fixed issue with parcelable  fixed details bar added refresh button.
bug_after_refactoring: @ java.lang.Override public void dnvnmpashzvpokfmfmxo ( android.os.Parcel dest , int flags ) { dest . writeString ( title ) ; dest . writeString ( genre ) ; dest . writeString ( posterPath ) ; dest . writeString ( plot ) ; dest . writeString ( releaseDate ) ; dest . writeDouble ( userRating ) ; dest . writeLong ( id ) ; } <s> @ java.lang.Override public void dnvnmpashzvpokfmfmxo ( android.os.Parcel dest , int flags ) { dest . writeString ( title ) ; dest . writeString ( genre ) ; dest . writeString ( posterPath ) ; dest . writeString ( plot ) ; dest . writeString ( releaseDate ) ; dest . writeDouble ( userRating ) ; dest . writeLong ( id ) ; } <s> finished part1  fixed issue with parcelable  fixed details bar added refresh button.
fix_before_refactoring: @ java.lang.Override public void writeToParcel ( android.os.Parcel dest , int flags ) { dest . writeLong ( this . id ) ; dest . writeString ( this . title ) ; dest . writeString ( this . releaseDate ) ; dest . writeDouble ( this . userRating ) ; dest . writeString ( this . plot ) ; dest . writeString ( this . posterPath ) ; dest . writeString ( this . genre ) ; }
fix_after_refactoring: @ java.lang.Override public void dnvnmpashzvpokfmfmxo ( android.os.Parcel dest , int flags ) { dest . writeLong ( this . id ) ; dest . writeString ( this . title ) ; dest . writeString ( this . releaseDate ) ; dest . writeDouble ( this . userRating ) ; dest . writeString ( this . plot ) ; dest . writeString ( this . posterPath ) ; dest . writeString ( this . genre ) ; }
× fix_prediction_before: @ java.lang.Override public void writeToParcel ( android.os.Parcel dest , int flags ) { dest . writeString ( title ) ; dest . writeString ( posterPath ) ; dest . writeString ( plotPath ) ; dest . writeString ( plotDate ) ; dest . writeString ( id ) ; dest . writeLong ( id ) ; dest . writeString ( userRating ) ; dest . writeString ( plotDouble ) ; }
× fix_prediction_after: @ java.lang.Override public void dnvnashmpz.fvpokmx.mfmx.Parcelo ( android.os.Parcel dest , int flags ) { dest . writeString ( title ) ; dest . writeString ( posterPath ) ; dest . writeString ( plotDate ) ; dest . writeString ( id ) ; dest . writeString ( plotRating ) ; dest . writeLong ( id ) ; dest . writeDouble ( id ) ; }

line_index: 769
bug_before_refactoring: @ java.lang.Override public void run () { if ( this . stash . containsKey ( item ) ) { final java.util.Set < java.util.UUID > uuids = this . stash . get ( item ) ; uuids . remove ( player ) ; if ( uuids . isEmpty () ) this . stash . remove ( item ) ; } } <s> @ java.lang.Override public void run () { if ( this . stash . containsKey ( item ) ) { final java.util.Set < java.util.UUID > uuids = this . stash . get ( item ) ; uuids . remove ( player ) ; if ( uuids . isEmpty () ) this . stash . remove ( item ) ; } } <s> building with latest Forge and fixing a concurrency issue.
bug_after_refactoring: @ java.lang.Override public void ldkwzybpzgvzuhchvvnw () { if ( this . stash . containsKey ( item ) ) { final java.util.Set < java.util.UUID > uuids = this . stash . get ( item ) ; uuids . remove ( player ) ; if ( uuids . isEmpty () ) this . stash . remove ( item ) ; } } <s> @ java.lang.Override public void ldkwzybpzgvzuhchvvnw () { if ( this . stash . containsKey ( item ) ) { final java.util.Set < java.util.UUID > uuids = this . stash . get ( item ) ; uuids . remove ( player ) ; if ( uuids . isEmpty () ) this . stash . remove ( item ) ; } } <s> building with latest Forge and fixing a concurrency issue.
fix_before_refactoring: @ java.lang.Override public void run () { synchronized ( this . stash ) { if ( this . stash . containsKey ( item ) ) { final java.util.Set < java.util.UUID > uuids = this . stash . get ( item ) ; uuids . remove ( player ) ; if ( uuids . isEmpty () ) this . stash . remove ( item ) ; } } }
fix_after_refactoring: @ java.lang.Override public void ldkwzybpzgvzuhchvvnw () { synchronized ( this . stash ) { if ( this . stash . containsKey ( item ) ) { final java.util.Set < java.util.UUID > uuids = this . stash . get ( item ) ; uuids . remove ( player ) ; if ( uuids . isEmpty () ) this . stash . remove ( item ) ; } } }
× fix_prediction_before: @ java.lang.Override public void run () { synchronized ( this . item ) { if ( this . name . containsKey ( item ) ) { final java.util.Set < java.util.UUID > uuids = this . item . get ( item ) ; this . player . remove ( uuids ) ; if ( uuids . isEmpty () ) this . player . remove ( item ) ; } } }
× fix_prediction_after: @ java.lang.Override public void ldkwz.bp.gvz.hvchuhvn.vnhvchuhvn.vnhvchuhvn. java.util.UUID get ( final java.util.UUID item ) { synchronized ( this . item ) { if ( this . item . containsKey ( item ) ) { final java.util.Set < com.wzyz.bp.gvz.hvchuhvn.vnhvchuhvn. ( this . player ) ; } this . item . remove ( uuids ) ; if ( this . item . isEmpty () ) this . player . remove ( uuids ) ; } }

line_index: 770
bug_before_refactoring: public static com.sk89q.worldedit.CuboidClipboard getSchematic ( java.lang.String schematicName ) { java.io.File dir = new java.io.File ( schematicName ) ; com.sk89q.worldedit.schematic.SchematicFormat schematic = com.sk89q.worldedit.schematic.SchematicFormat . getFormat ( dir ) ; com.sk89q.worldedit.CuboidClipboard clipboard = null ; try { clipboard = schematic . load ( dir ) ; } catch ( com.sk89q.worldedit.data.DataException | java.io.IOException e ) { e . printStackTrace () ; } dir = null ; schematic = null ; return clipboard ; } <s> public static com.sk89q.worldedit.CuboidClipboard getSchematic ( java.lang.String schematicName ) { java.io.File dir = new java.io.File ( schematicName ) ; com.sk89q.worldedit.schematic.SchematicFormat schematic = com.sk89q.worldedit.schematic.SchematicFormat . getFormat ( dir ) ; com.sk89q.worldedit.CuboidClipboard clipboard = null ; try { clipboard = schematic . load ( dir ) ; } catch ( com.sk89q.worldedit.data.DataException | java.io.IOException e ) { e . printStackTrace () ; } dir = null ; schematic = null ; return clipboard ; } <s> v1.0.0ac  GC overhead problem solved.
bug_after_refactoring: public static com.sk89q.worldedit.CuboidClipboard bzqcosaftobellcaqyez ( java.lang.String schematicName ) { java.io.File dir = new java.io.File ( schematicName ) ; com.sk89q.worldedit.schematic.SchematicFormat schematic = com.sk89q.worldedit.schematic.SchematicFormat . getFormat ( dir ) ; com.sk89q.worldedit.CuboidClipboard clipboard = null ; try { clipboard = schematic . load ( dir ) ; } catch ( com.sk89q.worldedit.data.DataException | java.io.IOException e ) { e . printStackTrace () ; } dir = null ; schematic = null ; return clipboard ; } <s> public static com.sk89q.worldedit.CuboidClipboard bzqcosaftobellcaqyez ( java.lang.String schematicName ) { java.io.File dir = new java.io.File ( schematicName ) ; com.sk89q.worldedit.schematic.SchematicFormat schematic = com.sk89q.worldedit.schematic.SchematicFormat . getFormat ( dir ) ; com.sk89q.worldedit.CuboidClipboard clipboard = null ; try { clipboard = schematic . load ( dir ) ; } catch ( com.sk89q.worldedit.data.DataException | java.io.IOException e ) { e . printStackTrace () ; } dir = null ; schematic = null ; return clipboard ; } <s> v1.0.0ac  GC overhead problem solved.
fix_before_refactoring: public com.sk89q.worldedit.CuboidClipboard getSchematic ( java.lang.String schematicName ) { java.io.File dir = new java.io.File ( schematicName ) ; com.sk89q.worldedit.schematic.SchematicFormat schematic = com.sk89q.worldedit.schematic.SchematicFormat . getFormat ( dir ) ; try { clipboard = schematic . load ( dir ) ; } catch ( com.sk89q.worldedit.data.DataException | java.io.IOException e ) { e . printStackTrace () ; } dir = null ; schematic = null ; return clipboard ; }
fix_after_refactoring: public com.sk89q.worldedit.CuboidClipboard bzqcosaftobellcaqyez ( java.lang.String schematicName ) { java.io.File dir = new java.io.File ( schematicName ) ; com.sk89q.worldedit.schematic.SchematicFormat schematic = com.sk89q.worldedit.schematic.SchematicFormat . getFormat ( dir ) ; try { clipboard = schematic . load ( dir ) ; } catch ( com.sk89q.worldedit.data.DataException | java.io.IOException e ) { e . printStackTrace () ; } dir = null ; schematic = null ; return clipboard ; }
× fix_prediction_before: public static com.sk89q.worldedit.Cuboid getSchematicClipboard ( java.lang.String dirName ) { java.io.File dir = new java.io.File ( dirName ) ; com.sk89q.worldedit.schematic.SchematicFormat.world = com.sk89q.worldedit.schematic.SchematicFormat . getFormat ( dirName ) ; com.sk89q.worldedit.Cubatic.data = null ; try { dir = com.sk89q.worldedit.schematic.CubaticFormat . load ( dir ) ; } catch ( java.io.IOException | com.sk89q.worldedit.datachematicDataException e1 ) { e1 . printStackTrace () ; } com.sk89q.worldedit.Clipboard.data = null ; }
× fix_prediction_after: public static com.sk89q.worldeditub.Cuboid.cosqellClipboard ( java.lang.String dirName ) { java.io.File dir = new java.io.File ( dirName ) ; com.sk89q.worldeditub.schematic.SchematicFormat.world = com.sk89q.worldeditub.schematic.SchematicFormat . getFormat ( dirName ) ; com.sk89q.worldeditub.schematic.Clipboard dir = null ; try { dir = com.sk89q.worldeditub.schematic.Clipboard . load ( dir ) ; } catch ( java.io.IOException | com.sk89q.worldeditub.data.DataException | com.sk89q.worldeditub.data.Clipboard e ) { e . printStackTrace () ; } return null ; }

line_index: 771
bug_before_refactoring: public synchronized long registerOperationWithHeapSize ( long heapSize ) throws java.lang.InterruptedException { long operationId = ++ ( operationSequenceGenerator ) ; while ( ( ( currentWriteBufferSize ) >= ( maxHeapSize ) ) || ( ( pendingOperationsWithSize . size () ) >= ( maxInFlightRpcs ) ) ) { wait ( com.google.cloud.bigtable.hbase.BigtableBufferedMutator.WAIT_MILLIS ) ; } lastOperationChange = java.lang.System . currentTimeMillis () ; pendingOperationsWithSize . put ( operationId , heapSize ) ; currentWriteBufferSize += heapSize ; return operationId ; } <s> public synchronized long registerOperationWithHeapSize ( long heapSize ) throws java.lang.InterruptedException { long operationId = ++ ( operationSequenceGenerator ) ; while ( ( ( currentWriteBufferSize ) >= ( maxHeapSize ) ) || ( ( pendingOperationsWithSize . size () ) >= ( maxInFlightRpcs ) ) ) { wait ( com.google.cloud.bigtable.hbase.BigtableBufferedMutator.WAIT_MILLIS ) ; } lastOperationChange = java.lang.System . currentTimeMillis () ; pendingOperationsWithSize . put ( operationId , heapSize ) ; currentWriteBufferSize += heapSize ; return operationId ; } <s> Merge pull request #322 from sduskis/add_bm_threadpool  Fixing some issues with BufferedMutator
bug_after_refactoring: public synchronized long tzctqslcknnsismfshwg ( long heapSize ) throws java.lang.InterruptedException { long operationId = ++ ( operationSequenceGenerator ) ; while ( ( ( currentWriteBufferSize ) >= ( maxHeapSize ) ) || ( ( pendingOperationsWithSize . size () ) >= ( maxInFlightRpcs ) ) ) { wait ( com.google.cloud.bigtable.hbase.BigtableBufferedMutator.WAIT_MILLIS ) ; } lastOperationChange = java.lang.System . currentTimeMillis () ; pendingOperationsWithSize . put ( operationId , heapSize ) ; currentWriteBufferSize += heapSize ; return operationId ; } <s> public synchronized long tzctqslcknnsismfshwg ( long heapSize ) throws java.lang.InterruptedException { long operationId = ++ ( operationSequenceGenerator ) ; while ( ( ( currentWriteBufferSize ) >= ( maxHeapSize ) ) || ( ( pendingOperationsWithSize . size () ) >= ( maxInFlightRpcs ) ) ) { wait ( com.google.cloud.bigtable.hbase.BigtableBufferedMutator.WAIT_MILLIS ) ; } lastOperationChange = java.lang.System . currentTimeMillis () ; pendingOperationsWithSize . put ( operationId , heapSize ) ; currentWriteBufferSize += heapSize ; return operationId ; } <s> Merge pull request #322 from sduskis/add_bm_threadpool  Fixing some issues with BufferedMutator
fix_before_refactoring: private synchronized long registerOperationWithHeapSize ( long heapSize ) throws java.lang.InterruptedException { long operationId = ++ ( operationSequenceGenerator ) ; while ( ( ( currentWriteBufferSize ) >= ( maxHeapSize ) ) || ( ( pendingOperationsWithSize . size () ) >= ( maxInFlightRpcs ) ) ) { wait ( com.google.cloud.bigtable.hbase.BigtableBufferedMutator.WAIT_MILLIS ) ; } lastOperationChange = java.lang.System . currentTimeMillis () ; pendingOperationsWithSize . put ( operationId , heapSize ) ; currentWriteBufferSize += heapSize ; return operationId ; }
fix_after_refactoring: private synchronized long tzctqslcknnsismfshwg ( long heapSize ) throws java.lang.InterruptedException { long operationId = ++ ( operationSequenceGenerator ) ; while ( ( ( currentWriteBufferSize ) >= ( maxHeapSize ) ) || ( ( pendingOperationsWithSize . size () ) >= ( maxInFlightRpcs ) ) ) { wait ( com.google.cloud.bigtable.hbase.BigtableBufferedMutator.WAIT_MILLIS ) ; } lastOperationChange = java.lang.System . currentTimeMillis () ; pendingOperationsWithSize . put ( operationId , heapSize ) ; currentWriteBufferSize += heapSize ; return operationId ; }
× fix_prediction_before: public synchronized long registerOperationWithHeapSize ( long heapSize ) throws java.lang.InterruptedException { long operationId = ++ ( operationSequenceId ) ; while ( ( ( currentWriteBufferSize ) >= ( pendingHeapSize ) ) || ( ( maxOperationsWithRcs . size () ) >= ( pendingFlightSize ) ) ) { com.google.cloud.bigtable.hcsator.BigtableBufferedMutator . wait ( java.lang.System . currentTimeMillis () ) ; operationId += heapId ; } lastWriteMutSize += heapId ; return operationId ; }
× fix_prediction_after: public synchronized long tzctqslcknns ( long heapId ) throws java.lang.InterruptedException { long operationId = currentSequenceId ; ++ ( operationId ) ; while ( ( ( ( currentWriteBufferSize ) >= ( pendingHeapSize ) ) || ( ( pendingOperationsWithRcs . size () ) >= ( maxFlightSize ) ) ) && ( operationId >= ( com.google.cloud.bigtable.hcsator.BigtableBufferedOperation.WAIT_MILLIS ) ) ) { operationId += currentWriteSize ; } currentWriteMutator += heapId ; lastChange = operationId ; return operationId ; }

line_index: 772
bug_before_refactoring: boolean insertUserChild ( java.lang.String userId , long childId , int isOwner , int canEdit , java.lang.String childTimeStamp ) { android.database.sqlite.SQLiteDatabase db = this . getWritableDatabase () ; android.content.ContentValues childUserTableContent = new android.content.ContentValues () ; childUserTableContent . put ( baps.DatabaseHelper.UC_USER_ID , userId ) ; childUserTableContent . put ( baps.DatabaseHelper.UC_CHILD_ID , childId ) ; childUserTableContent . put ( baps.DatabaseHelper.UC_ISOWNER , isOwner ) ; long result2 = db . insert ( baps.DatabaseHelper.BAPS_USERCHILD_TABLE , null , childUserTableContent ) ; return result2 != ( - 1 ) ; } <s> boolean insertUserChild ( java.lang.String userId , long childId , int isOwner , int canEdit , java.lang.String childTimeStamp ) { android.database.sqlite.SQLiteDatabase db = this . getWritableDatabase () ; android.content.ContentValues childUserTableContent = new android.content.ContentValues () ; childUserTableContent . put ( baps.DatabaseHelper.UC_USER_ID , userId ) ; childUserTableContent . put ( baps.DatabaseHelper.UC_CHILD_ID , childId ) ; childUserTableContent . put ( baps.DatabaseHelper.UC_ISOWNER , isOwner ) ; long result2 = db . insert ( baps.DatabaseHelper.BAPS_USERCHILD_TABLE , null , childUserTableContent ) ; return result2 != ( - 1 ) ; } <s> fixed problem with baps info page
bug_after_refactoring: boolean cgpkxhmlznonggizlief ( java.lang.String userId , long childId , int isOwner , int canEdit , java.lang.String childTimeStamp ) { android.database.sqlite.SQLiteDatabase db = this . getWritableDatabase () ; android.content.ContentValues childUserTableContent = new android.content.ContentValues () ; childUserTableContent . put ( baps.DatabaseHelper.UC_USER_ID , userId ) ; childUserTableContent . put ( baps.DatabaseHelper.UC_CHILD_ID , childId ) ; childUserTableContent . put ( baps.DatabaseHelper.UC_ISOWNER , isOwner ) ; long result2 = db . insert ( baps.DatabaseHelper.BAPS_USERCHILD_TABLE , null , childUserTableContent ) ; return result2 != ( - 1 ) ; } <s> boolean cgpkxhmlznonggizlief ( java.lang.String userId , long childId , int isOwner , int canEdit , java.lang.String childTimeStamp ) { android.database.sqlite.SQLiteDatabase db = this . getWritableDatabase () ; android.content.ContentValues childUserTableContent = new android.content.ContentValues () ; childUserTableContent . put ( baps.DatabaseHelper.UC_USER_ID , userId ) ; childUserTableContent . put ( baps.DatabaseHelper.UC_CHILD_ID , childId ) ; childUserTableContent . put ( baps.DatabaseHelper.UC_ISOWNER , isOwner ) ; long result2 = db . insert ( baps.DatabaseHelper.BAPS_USERCHILD_TABLE , null , childUserTableContent ) ; return result2 != ( - 1 ) ; } <s> fixed problem with baps info page
fix_before_refactoring: boolean insertUserChild ( java.lang.String userId , long childId , int isOwner ) { android.database.sqlite.SQLiteDatabase db = this . getWritableDatabase () ; android.content.ContentValues childUserTableContent = new android.content.ContentValues () ; childUserTableContent . put ( baps.DatabaseHelper.UC_USER_ID , userId ) ; childUserTableContent . put ( baps.DatabaseHelper.UC_CHILD_ID , childId ) ; childUserTableContent . put ( baps.DatabaseHelper.UC_ISOWNER , isOwner ) ; long result2 = db . insert ( baps.DatabaseHelper.BAPS_USERCHILD_TABLE , null , childUserTableContent ) ; return result2 != ( - 1 ) ; }
fix_after_refactoring: boolean cgpkxhmlznonggizlief ( java.lang.String userId , long childId , int isOwner ) { android.database.sqlite.SQLiteDatabase db = this . getWritableDatabase () ; android.content.ContentValues childUserTableContent = new android.content.ContentValues () ; childUserTableContent . put ( baps.DatabaseHelper.UC_USER_ID , userId ) ; childUserTableContent . put ( baps.DatabaseHelper.UC_CHILD_ID , childId ) ; childUserTableContent . put ( baps.DatabaseHelper.UC_ISOWNER , isOwner ) ; long result2 = db . insert ( baps.DatabaseHelper.BAPS_USERCHILD_TABLE , null , childUserTableContent ) ; return result2 != ( - 1 ) ; }
× fix_prediction_before: boolean insertUserChild ( java.lang.String userId , long childId , int childEditOwner , java.lang.String canEditTimeStamp ) { android.database.sqlite.SQLiteDatabase db = this . getWritableDatabase () ; android.content.ContentValues childContent = new android.content.ContentValues () ; childContent . put ( baps.UserTable.UC_Table_ID , userId ) ; childContent . put ( baps.UserTable.UC_Table_ID , baps.UserTable2 ) ; childContent . put ( baps.UserTable.UC_TABLE_CHILDS , baps.UserTable2 ) ; return db . insert ( baps.UserTable.UC_TABLE_IS_TABLE , null , childContent ) ; }
× fix_prediction_after: boolean cgpkxml.znongliizef.liizef.Database.database.DatabaseHelper . insertUser ( child , java.lang.String userId , long canEditOwnerId , int child , java.lang.String child ) { android.database.sqlite.SQLiteDatabase db = this . getWritableDatabase () ; android.content.ContentValues childContent = new android.content.ContentValues () ; childContent . put ( bapsapsapsaps.znongliizef.Database.UserTableHelper.UCID_CHILD_USERS , userId ) ; childContent . put ( bapsapsaps.znongliizef.Database.UserTableHelper.UCID_CHILD_USERS , isEditOwnerId ) ; return db . insert ( bapsaps.znongliizef.Database.UserTableHelper.TABLE_Table2 , null , childContent ) ; }

line_index: 773
bug_before_refactoring: private void setupGit ( ) throws java.io.IOException { hudson.plugins.git.UserRemoteConfig config = new hudson.plugins.git.UserRemoteConfig ( repositoryUrl , null , null , null ) ; java.util.List < hudson.plugins.git.UserRemoteConfig > configs = new java.util.ArrayList < hudson.plugins.git.UserRemoteConfig > () ; configs . add ( config ) ; hudson.plugins.git.GitSCM git = new hudson.plugins.git.GitSCM ( configs , null , false , null , null , null , null ) ; project . setScm ( git ) ; } <s> private void setupGit ( ) throws java.io.IOException { hudson.plugins.git.UserRemoteConfig config = new hudson.plugins.git.UserRemoteConfig ( repositoryUrl , null , null , null ) ; java.util.List < hudson.plugins.git.UserRemoteConfig > configs = new java.util.ArrayList < hudson.plugins.git.UserRemoteConfig > () ; configs . add ( config ) ; hudson.plugins.git.GitSCM git = new hudson.plugins.git.GitSCM ( configs , null , false , null , null , null , null ) ; project . setScm ( git ) ; } <s> Merge pull request #30 from jenkinsci/bugfix/JENKINS-37370  Jenkins-37370
bug_after_refactoring: private void ivufbyzltpivglnoocoe ( ) throws java.io.IOException { hudson.plugins.git.UserRemoteConfig config = new hudson.plugins.git.UserRemoteConfig ( repositoryUrl , null , null , null ) ; java.util.List < hudson.plugins.git.UserRemoteConfig > configs = new java.util.ArrayList < hudson.plugins.git.UserRemoteConfig > () ; configs . add ( config ) ; hudson.plugins.git.GitSCM git = new hudson.plugins.git.GitSCM ( configs , null , false , null , null , null , null ) ; project . setScm ( git ) ; } <s> private void ivufbyzltpivglnoocoe ( ) throws java.io.IOException { hudson.plugins.git.UserRemoteConfig config = new hudson.plugins.git.UserRemoteConfig ( repositoryUrl , null , null , null ) ; java.util.List < hudson.plugins.git.UserRemoteConfig > configs = new java.util.ArrayList < hudson.plugins.git.UserRemoteConfig > () ; configs . add ( config ) ; hudson.plugins.git.GitSCM git = new hudson.plugins.git.GitSCM ( configs , null , false , null , null , null , null ) ; project . setScm ( git ) ; } <s> Merge pull request #30 from jenkinsci/bugfix/JENKINS-37370  Jenkins-37370
fix_before_refactoring: private void setupGit ( java.lang.String url ) throws java.io.IOException { hudson.plugins.git.UserRemoteConfig config = new hudson.plugins.git.UserRemoteConfig ( url , null , null , null ) ; java.util.List < hudson.plugins.git.UserRemoteConfig > configs = new java.util.ArrayList < hudson.plugins.git.UserRemoteConfig > () ; configs . add ( config ) ; hudson.plugins.git.GitSCM git = new hudson.plugins.git.GitSCM ( configs , null , false , null , null , null , null ) ; project . setScm ( git ) ; }
fix_after_refactoring: private void ivufbyzltpivglnoocoe ( java.lang.String url ) throws java.io.IOException { hudson.plugins.git.UserRemoteConfig config = new hudson.plugins.git.UserRemoteConfig ( url , null , null , null ) ; java.util.List < hudson.plugins.git.UserRemoteConfig > configs = new java.util.ArrayList < hudson.plugins.git.UserRemoteConfig > () ; configs . add ( config ) ; hudson.plugins.git.GitSCM git = new hudson.plugins.git.GitSCM ( configs , null , false , null , null , null , null ) ; project . setScm ( git ) ; }
× fix_prediction_before: public void setupGit ( ) throws java.io.IOException { hudson.plugins.git.RemoteUserConfig config = new hudson.plugins.git.RemoteUserConfig ( repositoryUrl , null , null , null ) ; java.util.List < hudson.plugins.git.RemoteUser > configs = new java.util.ArrayList < hudson.plugins.git.RemoteUser > () ; configs . add ( config ) ; hudson.plugins.git.GitSCMConfig git = new hudson.plugins.git.GitSCMConfig ( null , new hudson.plugins.git.GitSCMConfig ( null , null , null , null , configs ) ) ; set . add ( git ) ; }
× fix_prediction_after: private void ivufbylz.tp.givoocoe.ln ( ) throws java.io.IOException { hudson.plugins.git.RemoteUserConfig config = new hudson.plugins.git.RemoteUserConfig ( null , repositoryUrl , null , null ) ; java.util.List < hudson.plugins.git.RemoteUser > configs = new java.util.ArrayList < hudson.plugins.git.RemoteUser > () ; configs . add ( config ) ; hudson.plugins.git.GitSCMConfig git = new hudson.plugins.git.GitSCMConfig ( null , null , null , configs , null , null , null ) ; set . add ( git ) ; }

line_index: 774
bug_before_refactoring: public void run () { while ( true ) { com.bmc.justdoit.smartkanban.api.objects.KanbanGeneratorRequest request = ( ( com.bmc.justdoit.smartkanban.api.objects.KanbanGeneratorRequest ) ( KanbanQueue.CREATOR_QUEUE . poll () ) ) ; if ( request == null ) { continue; } java.lang.System.out . println ( ( "Got a request to create >>>>>>>> " + request ) ) ; com.bmc.justdoit.smartkanban.kanban.creator.KanbanCreator kanbanCreator = new com.bmc.justdoit.smartkanban.kanban.creator.KanbanCreator ( request ) ; java.lang.Thread th = new java.lang.Thread ( kanbanCreator ) ; th . start () ; } } <s> public void run () { while ( true ) { com.bmc.justdoit.smartkanban.api.objects.KanbanGeneratorRequest request = ( ( com.bmc.justdoit.smartkanban.api.objects.KanbanGeneratorRequest ) ( KanbanQueue.CREATOR_QUEUE . poll () ) ) ; if ( request == null ) { continue; } java.lang.System.out . println ( ( "Got a request to create >>>>>>>> " + request ) ) ; com.bmc.justdoit.smartkanban.kanban.creator.KanbanCreator kanbanCreator = new com.bmc.justdoit.smartkanban.kanban.creator.KanbanCreator ( request ) ; java.lang.Thread th = new java.lang.Thread ( kanbanCreator ) ; th . start () ; } } <s> Blocking Queue bug fix
bug_after_refactoring: public void hmzvvtjjyturqhbvcvfx () { while ( true ) { com.bmc.justdoit.smartkanban.api.objects.KanbanGeneratorRequest request = ( ( com.bmc.justdoit.smartkanban.api.objects.KanbanGeneratorRequest ) ( KanbanQueue.CREATOR_QUEUE . poll () ) ) ; if ( request == null ) { continue; } java.lang.System.out . println ( ( "Got a request to create >>>>>>>> " + request ) ) ; com.bmc.justdoit.smartkanban.kanban.creator.KanbanCreator kanbanCreator = new com.bmc.justdoit.smartkanban.kanban.creator.KanbanCreator ( request ) ; java.lang.Thread th = new java.lang.Thread ( kanbanCreator ) ; th . start () ; } } <s> public void hmzvvtjjyturqhbvcvfx () { while ( true ) { com.bmc.justdoit.smartkanban.api.objects.KanbanGeneratorRequest request = ( ( com.bmc.justdoit.smartkanban.api.objects.KanbanGeneratorRequest ) ( KanbanQueue.CREATOR_QUEUE . poll () ) ) ; if ( request == null ) { continue; } java.lang.System.out . println ( ( "Got a request to create >>>>>>>> " + request ) ) ; com.bmc.justdoit.smartkanban.kanban.creator.KanbanCreator kanbanCreator = new com.bmc.justdoit.smartkanban.kanban.creator.KanbanCreator ( request ) ; java.lang.Thread th = new java.lang.Thread ( kanbanCreator ) ; th . start () ; } } <s> Blocking Queue bug fix
fix_before_refactoring: public void run () { com.bmc.justdoit.smartkanban.api.objects.KanbanGeneratorRequest request = ( ( com.bmc.justdoit.smartkanban.api.objects.KanbanGeneratorRequest ) ( KanbanQueue.CREATOR_QUEUE . poll () ) ) ; if ( request != null ) { java.lang.System.out . println ( ( "Got a request to create >>>>>>>> " + request ) ) ; com.bmc.justdoit.smartkanban.kanban.creator.KanbanCreator kanbanCreator = new com.bmc.justdoit.smartkanban.kanban.creator.KanbanCreator ( request ) ; java.lang.Thread th = new java.lang.Thread ( kanbanCreator ) ; th . start () ; } }
fix_after_refactoring: public void hmzvvtjjyturqhbvcvfx () { com.bmc.justdoit.smartkanban.api.objects.KanbanGeneratorRequest request = ( ( com.bmc.justdoit.smartkanban.api.objects.KanbanGeneratorRequest ) ( KanbanQueue.CREATOR_QUEUE . poll () ) ) ; if ( request != null ) { java.lang.System.out . println ( ( "Got a request to create >>>>>>>> " + request ) ) ; com.bmc.justdoit.smartkanban.kanban.creator.KanbanCreator kanbanCreator = new com.bmc.justdoit.smartkanban.kanban.creator.KanbanCreator ( request ) ; java.lang.Thread th = new java.lang.Thread ( kanbanCreator ) ; th . start () ; } }
× fix_prediction_before: public void run () { while ( true ) { com.bmc.justdoit.smartkan.api.objects.KanbanGeneratorRequest request = ( ( com.bmc.justdoit.smartkan.api.objects.KanbanGeneratorRequest ) ( KanbanQueue.CREATOR_QUEUE . poll () ) ) ; if ( request == null ) { java.lang.System.out . println ( ( "Got a request to create Kanban: " + ( request.creator ) ) ) ; return; } com.bmc.justdoit.smartkan.kan.KanbanCreator kanbanCreator = new com.bmc.justdoit.smartkan.kan.KanbanCreator ( request.creator ) ; java.lang.Thread th = new java.lang.Thread ( kanbanCreator ) ; request.creator = th . start () ; } }
× fix_prediction_after: public void hmz () { while ( true ) { com.bmc.banitdoan.smartkanjustkan.api.objects.KanbanGeneratorRequest request = ( ( com.bmc.banitdoan.smartkanjustkanjustkan.objects.KanbanGeneratorRequest ) ( KanbanQueue.CREATOR_QUEUE . poll () ) ) ; if ( request == null ) { java.lang.System.out . println ( ( "Got a request to create Kanban " + ( com.bmc.banitdoan.smartkanjustkanjustkanjustkan.creator.CreatorCreator.creator ) ) ) ; return; } com.bmc.banitdoan.smartkanjustkanjustkanjustkan.KanbanCreator kanban = new com.bmc.banitdoan.smartkanjustkanjustkanjustkan.creator.KanbanCreator ( request ) ; th . start () ; } }

line_index: 775
bug_before_refactoring: @ java.lang.Override public void handle ( com.sun.net.httpserver.HttpExchange exchange ) throws java.io.IOException { mmKNIME.core . logMessage ( "µmKNIME: Handling overview request." ) ; java.util.Scanner scanner = new java.util.Scanner ( getFileStream () ) . useDelimiter ( "\\A" ) ; java.lang.String response = ( scanner . hasNext () ) ? scanner . next () : "" ; exchange . sendResponseHeaders ( 200 , response . length () ) ; java.io.OutputStream os = exchange . getResponseBody () ; os . write ( response . getBytes () ) ; os . flush () ; os . close () ; } <s> @ java.lang.Override public void handle ( com.sun.net.httpserver.HttpExchange exchange ) throws java.io.IOException { mmKNIME.core . logMessage ( "µmKNIME: Handling overview request." ) ; java.util.Scanner scanner = new java.util.Scanner ( getFileStream () ) . useDelimiter ( "\\A" ) ; java.lang.String response = ( scanner . hasNext () ) ? scanner . next () : "" ; exchange . sendResponseHeaders ( 200 , response . length () ) ; java.io.OutputStream os = exchange . getResponseBody () ; os . write ( response . getBytes () ) ; os . flush () ; os . close () ; } <s> fixed bug not displaying overview.html
bug_after_refactoring: @ java.lang.Override public void cqngyxmgnpvngbfczuzc ( com.sun.net.httpserver.HttpExchange exchange ) throws java.io.IOException { mmKNIME.core . logMessage ( "µmKNIME: Handling overview request." ) ; java.util.Scanner scanner = new java.util.Scanner ( getFileStream () ) . useDelimiter ( "\\A" ) ; java.lang.String response = ( scanner . hasNext () ) ? scanner . next () : "" ; exchange . sendResponseHeaders ( 200 , response . length () ) ; java.io.OutputStream os = exchange . getResponseBody () ; os . write ( response . getBytes () ) ; os . flush () ; os . close () ; } <s> @ java.lang.Override public void cqngyxmgnpvngbfczuzc ( com.sun.net.httpserver.HttpExchange exchange ) throws java.io.IOException { mmKNIME.core . logMessage ( "µmKNIME: Handling overview request." ) ; java.util.Scanner scanner = new java.util.Scanner ( getFileStream () ) . useDelimiter ( "\\A" ) ; java.lang.String response = ( scanner . hasNext () ) ? scanner . next () : "" ; exchange . sendResponseHeaders ( 200 , response . length () ) ; java.io.OutputStream os = exchange . getResponseBody () ; os . write ( response . getBytes () ) ; os . flush () ; os . close () ; } <s> fixed bug not displaying overview.html
fix_before_refactoring: @ java.lang.Override public void handle ( final com.sun.net.httpserver.HttpExchange exchange ) throws java.io.IOException { mmKNIME.core . logMessage ( "µmKNIME: Handling overview request." ) ; final java.util.Scanner scanner = new java.util.Scanner ( this . getFileStream () ) . useDelimiter ( "\\A" ) ; final java.lang.String response = ( scanner . hasNext () ) ? scanner . next () : "" ; exchange . sendResponseHeaders ( 200 , response . length () ) ; final java.io.OutputStream os = exchange . getResponseBody () ; os . write ( response . getBytes () ) ; os . close () ; }
fix_after_refactoring: @ java.lang.Override public void cqngyxmgnpvngbfczuzc ( final com.sun.net.httpserver.HttpExchange exchange ) throws java.io.IOException { mmKNIME.core . logMessage ( "µmKNIME: Handling overview request." ) ; final java.util.Scanner scanner = new java.util.Scanner ( this . getFileStream () ) . useDelimiter ( "\\A" ) ; final java.lang.String response = ( scanner . hasNext () ) ? scanner . next () : "" ; exchange . sendResponseHeaders ( 200 , response . length () ) ; final java.io.OutputStream os = exchange . getResponseBody () ; os . write ( response . getBytes () ) ; os . close () ; }
× fix_prediction_before: @ java.lang.Override public void handle ( com.sun.net.httpserver.HttpExchange exchange ) throws java.io.IOException { mmKIMEN.core.KIMEMessage response = mmKIMEN.util.Scanner . getFile () ; java.util.Scanner scanner = new java.util.Scanner ( request , "A" ) ; java.lang.String responseDelimiter = ( response . hasNext () ) ? scanner . next () : "" ; exchange . write ( responseDelimiter ) ; java.io.OutputStream os = exchange . getResponseBody () ; os . flush () ; os . close () ; }
× fix_prediction_after: @ java.lang.Override public void sendResponsengyxmng.pvbuzz.server.http.HttpExchange exchange ( com.sun.http.server.KExchange exchange ) throws java.io.IOException { java.util.Scanner scanner = new java.util.Scanner ( request . getFile () ) ; java.lang.String response = "\\A" ; scanner . useDelimiter ( response ) ; java.lang.String os = ( exchange . hasNext () ) ? scanner . next () : "" ; os . write ( exchange . getBytes () ) ; os . flush () ; os . close () ; }

line_index: 776
bug_before_refactoring: @ java.lang.Override public org.apache.lucene.util.LongBitSet acceptedGlobalOrdinals ( org.apache.lucene.index.RandomAccessOrds globalOrdinals , org.elasticsearch.search.aggregations.support.ValuesSource.Bytes.WithOrdinals valueSource ) throws java.io.IOException { org.apache.lucene.util.LongBitSet acceptedGlobalOrdinals = new org.apache.lucene.util.LongBitSet ( globalOrdinals . getValueCount () ) ; org.apache.lucene.index.TermsEnum globalTermsEnum ; org.apache.lucene.index.Terms globalTerms = new org.elasticsearch.search.aggregations.bucket.terms.support.IncludeExclude.DocValuesTerms ( globalOrdinals ) ; globalTermsEnum = compiled . getTermsEnum ( globalTerms ) ; for ( org.apache.lucene.util.BytesRef term = globalTermsEnum . next () ; term != null ; term = globalTermsEnum . next () ) { acceptedGlobalOrdinals . set ( globalTermsEnum . ord () ) ; } return acceptedGlobalOrdinals ; } <s> @ java.lang.Override public org.apache.lucene.util.LongBitSet acceptedGlobalOrdinals ( org.apache.lucene.index.RandomAccessOrds globalOrdinals , org.elasticsearch.search.aggregations.support.ValuesSource.Bytes.WithOrdinals valueSource ) throws java.io.IOException { org.apache.lucene.util.LongBitSet acceptedGlobalOrdinals = new org.apache.lucene.util.LongBitSet ( globalOrdinals . getValueCount () ) ; org.apache.lucene.index.TermsEnum globalTermsEnum ; org.apache.lucene.index.Terms globalTerms = new org.elasticsearch.search.aggregations.bucket.terms.support.IncludeExclude.DocValuesTerms ( globalOrdinals ) ; globalTermsEnum = compiled . getTermsEnum ( globalTerms ) ; for ( org.apache.lucene.util.BytesRef term = globalTermsEnum . next () ; term != null ; term = globalTermsEnum . next () ) { acceptedGlobalOrdinals . set ( globalTermsEnum . ord () ) ; } return acceptedGlobalOrdinals ; } <s> Fix potential AssertionError with include/exclude on terms aggregations. #19252  We call `LongBitSet.set(start  end)`  which fails when `start >= length` (0 in that case).  Closes #18575
bug_after_refactoring: @ java.lang.Override public org.apache.lucene.util.LongBitSet vxjqxoivwqkotbejhnzj ( org.apache.lucene.index.RandomAccessOrds globalOrdinals , org.elasticsearch.search.aggregations.support.ValuesSource.Bytes.WithOrdinals valueSource ) throws java.io.IOException { org.apache.lucene.util.LongBitSet vxjqxoivwqkotbejhnzj = new org.apache.lucene.util.LongBitSet ( globalOrdinals . getValueCount () ) ; org.apache.lucene.index.TermsEnum globalTermsEnum ; org.apache.lucene.index.Terms globalTerms = new org.elasticsearch.search.aggregations.bucket.terms.support.IncludeExclude.DocValuesTerms ( globalOrdinals ) ; globalTermsEnum = compiled . getTermsEnum ( globalTerms ) ; for ( org.apache.lucene.util.BytesRef term = globalTermsEnum . next () ; term != null ; term = globalTermsEnum . next () ) { vxjqxoivwqkotbejhnzj . set ( globalTermsEnum . ord () ) ; } return vxjqxoivwqkotbejhnzj ; } <s> @ java.lang.Override public org.apache.lucene.util.LongBitSet vxjqxoivwqkotbejhnzj ( org.apache.lucene.index.RandomAccessOrds globalOrdinals , org.elasticsearch.search.aggregations.support.ValuesSource.Bytes.WithOrdinals valueSource ) throws java.io.IOException { org.apache.lucene.util.LongBitSet vxjqxoivwqkotbejhnzj = new org.apache.lucene.util.LongBitSet ( globalOrdinals . getValueCount () ) ; org.apache.lucene.index.TermsEnum globalTermsEnum ; org.apache.lucene.index.Terms globalTerms = new org.elasticsearch.search.aggregations.bucket.terms.support.IncludeExclude.DocValuesTerms ( globalOrdinals ) ; globalTermsEnum = compiled . getTermsEnum ( globalTerms ) ; for ( org.apache.lucene.util.BytesRef term = globalTermsEnum . next () ; term != null ; term = globalTermsEnum . next () ) { vxjqxoivwqkotbejhnzj . set ( globalTermsEnum . ord () ) ; } return vxjqxoivwqkotbejhnzj ; } <s> Fix potential AssertionError with include/exclude on terms aggregations. #19252  We call `LongBitSet.set(start  end)`  which fails when `start >= length` (0 in that case).  Closes #18575
fix_before_refactoring: @ java.lang.Override public org.apache.lucene.util.LongBitSet acceptedGlobalOrdinals ( org.apache.lucene.index.RandomAccessOrds globalOrdinals ) throws java.io.IOException { org.apache.lucene.util.LongBitSet acceptedGlobalOrdinals = new org.apache.lucene.util.LongBitSet ( globalOrdinals . getValueCount () ) ; org.apache.lucene.index.TermsEnum globalTermsEnum ; org.apache.lucene.index.Terms globalTerms = new org.elasticsearch.search.aggregations.bucket.terms.support.IncludeExclude.DocValuesTerms ( globalOrdinals ) ; globalTermsEnum = compiled . getTermsEnum ( globalTerms ) ; for ( org.apache.lucene.util.BytesRef term = globalTermsEnum . next () ; term != null ; term = globalTermsEnum . next () ) { acceptedGlobalOrdinals . set ( globalTermsEnum . ord () ) ; } return acceptedGlobalOrdinals ; }
fix_after_refactoring: @ java.lang.Override public org.apache.lucene.util.LongBitSet vxjqxoivwqkotbejhnzj ( org.apache.lucene.index.RandomAccessOrds globalOrdinals ) throws java.io.IOException { org.apache.lucene.util.LongBitSet vxjqxoivwqkotbejhnzj = new org.apache.lucene.util.LongBitSet ( globalOrdinals . getValueCount () ) ; org.apache.lucene.index.TermsEnum globalTermsEnum ; org.apache.lucene.index.Terms globalTerms = new org.elasticsearch.search.aggregations.bucket.terms.support.IncludeExclude.DocValuesTerms ( globalOrdinals ) ; globalTermsEnum = compiled . getTermsEnum ( globalTerms ) ; for ( org.apache.lucene.util.BytesRef term = globalTermsEnum . next () ; term != null ; term = globalTermsEnum . next () ) { vxjqxoivwqkotbejhnzj . set ( globalTermsEnum . ord () ) ; } return vxjqxoivwqkotbejhnzj ; }
× fix_prediction_before: @ java.lang.Override public org.apache.lucene.util.LongBitSet acceptedGlobalOrdinals ( org.apache.lucene.index.RandomAccessOrRandomAccessations globalOrdinal , org.elasticsearch.aggregations.support.SourceBytesValues valueValues ) throws java.io.IOException { org.apache.lucene.util.BitSet ord = new org.apache.lucene.util.BitSet ( globalOrdinal . getValue () ) ; org.apache.lucene.util.EnumTerms globalTerms = globalOrdinal . get () ; org.apache.lucene.index.GlobalTerms termEnum = globalTerms . next () ; org.apache.lucene.index.GlobalTerms globalTerms = new org.apache.lucene.index.GlobalTerms () ; globalTerms . accepted () ; return globalTerms ; }
× fix_prediction_after: @ java.lang.Override public org.apache.lucene.util.LongBitSet nextBitSet ( org.apache.lucene.kiv.jq.wothnjbe.index.RandomOrRandomOrdinaledSource globalOrdinal , org.apache.lucene.search.support.SourceValues valueValues ) throws java.io.IOException { org.apache.lucene.util.BitSet ord = new org.apache.lucene.util.BitSet ( globalOrdinal ) ; org.apache.lucene.kiv.jq.wothnjbe.index.support.NxoBitSet globalTerms = globalTerms . getValue () ; org.apache.lucene.kiv.jq.wothnjbe.index.support.OrdinalEnum termEnum = new org.apache.lucene.kiv.jq.wothnjbe.index.support.OrdinalEnum () ; globalTerms . setRandomOrdinal ( ord . length () ) ; globalTerms . include ( termEnum ) ; globalTerms = globalTerms . next () ; return globalTerms ; }

line_index: 777
bug_before_refactoring: @ java.lang.Override public void flatMap ( org.wikipedia.citolytics.clickstream.types.ClickStreamResult r , org.apache.flink.util.Collector < org.apache.flink.api.java.tuple.Tuple2 < java.lang.String , java.lang.Integer > > out ) throws java.lang.Exception { if ( ( r . getRecommendationsCount () ) > 0 ) { out . collect ( new org.apache.flink.api.java.tuple.Tuple2 ( r . getRecommendations () . get ( 0 ) . getRecommendedArticle () , 1 ) ) ; } } <s> @ java.lang.Override public void flatMap ( org.wikipedia.citolytics.clickstream.types.ClickStreamResult r , org.apache.flink.util.Collector < org.apache.flink.api.java.tuple.Tuple2 < java.lang.String , java.lang.Integer > > out ) throws java.lang.Exception { if ( ( r . getRecommendationsCount () ) > 0 ) { out . collect ( new org.apache.flink.api.java.tuple.Tuple2 ( r . getRecommendations () . get ( 0 ) . getRecommendedArticle () , 1 ) ) ; } } <s> Bugfix CS evaluation with optimal clicks
bug_after_refactoring: @ java.lang.Override public void tcizhzenwunsdmsyvoft ( org.wikipedia.citolytics.clickstream.types.ClickStreamResult r , org.apache.flink.util.Collector < org.apache.flink.api.java.tuple.Tuple2 < java.lang.String , java.lang.Integer > > out ) throws java.lang.Exception { if ( ( r . getRecommendationsCount () ) > 0 ) { out . collect ( new org.apache.flink.api.java.tuple.Tuple2 ( r . getRecommendations () . get ( 0 ) . getRecommendedArticle () , 1 ) ) ; } } <s> @ java.lang.Override public void tcizhzenwunsdmsyvoft ( org.wikipedia.citolytics.clickstream.types.ClickStreamResult r , org.apache.flink.util.Collector < org.apache.flink.api.java.tuple.Tuple2 < java.lang.String , java.lang.Integer > > out ) throws java.lang.Exception { if ( ( r . getRecommendationsCount () ) > 0 ) { out . collect ( new org.apache.flink.api.java.tuple.Tuple2 ( r . getRecommendations () . get ( 0 ) . getRecommendedArticle () , 1 ) ) ; } } <s> Bugfix CS evaluation with optimal clicks
fix_before_refactoring: @ java.lang.Override public void flatMap ( org.wikipedia.citolytics.clickstream.types.ClickStreamResult r , org.apache.flink.util.Collector < org.apache.flink.api.java.tuple.Tuple2 < java.lang.String , java.lang.Long > > out ) throws java.lang.Exception { if ( ( r . getRecommendationsCount () ) > 0 ) { out . collect ( new org.apache.flink.api.java.tuple.Tuple2 ( r . getRecommendations () . get ( 0 ) . getRecommendedArticle () , 1L ) ) ; } }
fix_after_refactoring: @ java.lang.Override public void tcizhzenwunsdmsyvoft ( org.wikipedia.citolytics.clickstream.types.ClickStreamResult r , org.apache.flink.util.Collector < org.apache.flink.api.java.tuple.Tuple2 < java.lang.String , java.lang.Long > > out ) throws java.lang.Exception { if ( ( r . getRecommendationsCount () ) > 0 ) { out . collect ( new org.apache.flink.api.java.tuple.Tuple2 ( r . getRecommendations () . get ( 0 ) . getRecommendedArticle () , 1L ) ) ; } }
× fix_prediction_before: @ java.lang.Override public org.apache.citolytics.clickstream.types.ClickStreamResult ( org.apache.flink.util.Collector < org.apache.flink.api.java.tuple.Tuple2 < java.lang.String , java.lang.Long > > out ) throws java.lang.Exception { if ( ( out . getRecommendations () . size () ) > 0 ) { out . getRecommendations () . get ( 0 ) . collect ( new org.apache.flink.api.java.tuple.Tuple2 ( r . getRecommendations () . get ( 1 ) , 1 ) ) ; } return out . getRecommendations () . get ( 0 ) ; }
× fix_prediction_after: @ java.lang.Override public void tchizzen.wunvoyft.itolytics.wikipedia.types.ClickStreamResult < org.apache.flink.api.java.tuple.Tuple2 < java.lang.String , java.lang.Long > > out () { if ( ( out . getRecommendations () . size () ) > 0 ) { out . collectRecommendations ( new org.apache.flink.api.java.tuple.Tuple2 < java.lang.String , java.lang.Long > () ) ; } else { out . collectRecommendations ( new org.apache.flink.api.java.tuple.Tuple2 < java.lang.String , java.lang.Long > () ) ; } }

line_index: 778
bug_before_refactoring: public static java.lang.String emailsMinusYou ( com.zulip.android.models.List < com.zulip.android.models.Person > people , com.zulip.android.models.Person you ) { com.zulip.android.models.ArrayList < java.lang.String > names = new com.zulip.android.models.ArrayList () ; for ( com.zulip.android.models.Person person : people ) { if ( ( person.id ) != ( you.id ) ) { names . add ( person . getEmail () ) ; } } return android.text.TextUtils . join ( ", " , names ) ; } <s> public static java.lang.String emailsMinusYou ( com.zulip.android.models.List < com.zulip.android.models.Person > people , com.zulip.android.models.Person you ) { com.zulip.android.models.ArrayList < java.lang.String > names = new com.zulip.android.models.ArrayList () ; for ( com.zulip.android.models.Person person : people ) { if ( ( person.id ) != ( you.id ) ) { names . add ( person . getEmail () ) ; } } return android.text.TextUtils . join ( ", " , names ) ; } <s> images are now loaded in however it is done in a hacky method. needs further discussion  changed modification  deleted code  Undid unrelated fixes  Rebase completed  issues with master.  Fixed up message model to work with new retrofit style.
bug_after_refactoring: public static java.lang.String ufbcehoioqboetdfhuov ( com.zulip.android.models.List < com.zulip.android.models.Person > people , com.zulip.android.models.Person you ) { com.zulip.android.models.ArrayList < java.lang.String > names = new com.zulip.android.models.ArrayList () ; for ( com.zulip.android.models.Person person : people ) { if ( ( person.id ) != ( you.id ) ) { names . add ( person . getEmail () ) ; } } return android.text.TextUtils . join ( ", " , names ) ; } <s> public static java.lang.String ufbcehoioqboetdfhuov ( com.zulip.android.models.List < com.zulip.android.models.Person > people , com.zulip.android.models.Person you ) { com.zulip.android.models.ArrayList < java.lang.String > names = new com.zulip.android.models.ArrayList () ; for ( com.zulip.android.models.Person person : people ) { if ( ( person.id ) != ( you.id ) ) { names . add ( person . getEmail () ) ; } } return android.text.TextUtils . join ( ", " , names ) ; } <s> images are now loaded in however it is done in a hacky method. needs further discussion  changed modification  deleted code  Undid unrelated fixes  Rebase completed  issues with master.  Fixed up message model to work with new retrofit style.
fix_before_refactoring: public static java.lang.String emailsMinusYou ( java.util.List < com.zulip.android.models.Person > people , com.zulip.android.models.Person you ) { java.util.ArrayList < java.lang.String > names = new java.util.ArrayList <> () ; for ( com.zulip.android.models.Person person : people ) { if ( ( person.id ) != ( you.id ) ) { names . add ( person . getEmail () ) ; } } return android.text.TextUtils . join ( ", " , names ) ; }
fix_after_refactoring: public static java.lang.String ufbcehoioqboetdfhuov ( java.util.List < com.zulip.android.models.Person > people , com.zulip.android.models.Person you ) { java.util.ArrayList < java.lang.String > names = new java.util.ArrayList <> () ; for ( com.zulip.android.models.Person person : people ) { if ( ( person.id ) != ( you.id ) ) { names . add ( person . getEmail () ) ; } } return android.text.TextUtils . join ( ", " , names ) ; }
× fix_prediction_before: public static java.lang.String emailsMinusYou ( java.lang.String [] people ) { java.util.ArrayList < java.lang.String > names = new java.util.ArrayList < java.lang.String > () ; for ( int i = 0 ; i < ( people.length ) ; i ++ ) { if ( ( person . getEmailid () ) != ( person.id ) ) { names . add ( new com.zDetail.android.models.Person ( names [ i ] , person . getEmail () ) ) ; } } return android.text.TextUtils . join ( ", " , names ) ; }
× fix_prediction_after: public static java.lang.String ufbceho ( uz.boetovetdfqhuovovet.android.models.Person people ) { java.util.ArrayList < java.lang.String > names = new java.util.ArrayList < java.lang.String > () ; for ( com.android.models.Person person : people ) { if ( ( com.android.models.PersonUtils . joinText ( person . getEmail () , ", " ) ) != ( person . getId () ) ) { names . add ( new com.android.models.Person ( person ) ) ; } } return names ; }

line_index: 779
bug_before_refactoring: @ java.lang.Override < K , V > org.ehcache.Ehcache < K , V > createNewEhcache ( final java.lang.String alias , final org.ehcache.config.CacheConfiguration < K , V > config , final java.lang.Class < K > keyType , final java.lang.Class < V > valueType , java.util.Deque < org.ehcache.Releasable > releasables ) { final org.ehcache.Ehcache < K , V > ehcache = super . createNewEhcache ( alias , config , keyType , valueType , releasables ) ; return org.mockito.Mockito . spy ( ehcache ) ; } <s> @ java.lang.Override < K , V > org.ehcache.Ehcache < K , V > createNewEhcache ( final java.lang.String alias , final org.ehcache.config.CacheConfiguration < K , V > config , final java.lang.Class < K > keyType , final java.lang.Class < V > valueType , java.util.Deque < org.ehcache.Releasable > releasables ) { final org.ehcache.Ehcache < K , V > ehcache = super . createNewEhcache ( alias , config , keyType , valueType , releasables ) ; return org.mockito.Mockito . spy ( ehcache ) ; } <s> Issue #348 Replaced LifecycleListeners with LifeCyclable hooks    - Got rid of Ehcache.Releasable   - Fixed test on Store.close() being invoked once   - Modified listener test to adjust for hooks not being removable  while in Status.AVAILABLE
bug_after_refactoring: @ java.lang.Override < K , V > org.ehcache.Ehcache < K , V > idlldbraxufxmairguvi ( final java.lang.String alias , final org.ehcache.config.CacheConfiguration < K , V > config , final java.lang.Class < K > keyType , final java.lang.Class < V > valueType , java.util.Deque < org.ehcache.Releasable > releasables ) { final org.ehcache.Ehcache < K , V > ehcache = super . idlldbraxufxmairguvi ( alias , config , keyType , valueType , releasables ) ; return org.mockito.Mockito . spy ( ehcache ) ; } <s> @ java.lang.Override < K , V > org.ehcache.Ehcache < K , V > idlldbraxufxmairguvi ( final java.lang.String alias , final org.ehcache.config.CacheConfiguration < K , V > config , final java.lang.Class < K > keyType , final java.lang.Class < V > valueType , java.util.Deque < org.ehcache.Releasable > releasables ) { final org.ehcache.Ehcache < K , V > ehcache = super . idlldbraxufxmairguvi ( alias , config , keyType , valueType , releasables ) ; return org.mockito.Mockito . spy ( ehcache ) ; } <s> Issue #348 Replaced LifecycleListeners with LifeCyclable hooks    - Got rid of Ehcache.Releasable   - Fixed test on Store.close() being invoked once   - Modified listener test to adjust for hooks not being removable  while in Status.AVAILABLE
fix_before_refactoring: @ java.lang.Override < K , V > org.ehcache.Ehcache < K , V > createNewEhcache ( final java.lang.String alias , final org.ehcache.config.CacheConfiguration < K , V > config , final java.lang.Class < K > keyType , final java.lang.Class < V > valueType ) { final org.ehcache.Ehcache < K , V > ehcache = super . createNewEhcache ( alias , config , keyType , valueType ) ; return org.mockito.Mockito . spy ( ehcache ) ; }
fix_after_refactoring: @ java.lang.Override < K , V > org.ehcache.Ehcache < K , V > idlldbraxufxmairguvi ( final java.lang.String alias , final org.ehcache.config.CacheConfiguration < K , V > config , final java.lang.Class < K > keyType , final java.lang.Class < V > valueType ) { final org.ehcache.Ehcache < K , V > ehcache = super . idlldbraxufxmairguvi ( alias , config , keyType , valueType ) ; return org.mockito.Mockito . spy ( ehcache ) ; }
× fix_prediction_before: @ java.lang.Override < K , V > org.ehcache.Ehcache < K , V > createNewEhcache ( final java.lang.String alias , final org.ehcache.config.CacheConfiguration < K , V > config , final java.lang.Class < K > keyType , final java.lang.Class < V > configClass ) { final org.ehcache.Ehcache < K , V >accache = org.ehcache.Ehcache . createNewEhcache ( alias , configClass ) ; return relecache ; }
× fix_prediction_after: @ java.lang.Override < K , V > org.ehcache.Ehcache < K , V > chufbraaircache.xmxvi.config.CacheConfiguration < K , V > alias , final java.lang.Class < K > configClass , final java.lang.Class < K > keyType , final java.lang.Class < V > configClass ) { final org.ehcache.Ehcache < K , V > relecache = org.ehcache.Ehcache . spy ( configClass , alias , configClass ) ; return relecache ; }

line_index: 780
bug_before_refactoring: @ java.lang.Override public java.lang.String toString () { return org.pac4j.core.util.CommonHelper . toString ( this . getClass () , "client" , client , "key" , key , "secret" , secret , "tokenAsHeader" , tokenAsHeader , "connectTimeout" , connectTimeout , "readTimeout" , readTimeout , "responseType" , responseType , "scope" , scope , "api" , api , "hasGrantType" , hasGrantType , "service" , service , "hasBeenCancelledFactory" , hasBeenCancelledFactory , "profileDefinition" , profileDefinition ) ; } <s> @ java.lang.Override public java.lang.String toString () { return org.pac4j.core.util.CommonHelper . toString ( this . getClass () , "client" , client , "key" , key , "secret" , secret , "tokenAsHeader" , tokenAsHeader , "connectTimeout" , connectTimeout , "readTimeout" , readTimeout , "responseType" , responseType , "scope" , scope , "api" , api , "hasGrantType" , hasGrantType , "service" , service , "hasBeenCancelledFactory" , hasBeenCancelledFactory , "profileDefinition" , profileDefinition ) ; } <s> fix various issues
bug_after_refactoring: @ java.lang.Override public java.lang.String ginorabuwzdiplqbhwjw () { return org.pac4j.core.util.CommonHelper . ginorabuwzdiplqbhwjw ( this . getClass () , "client" , client , "key" , key , "secret" , secret , "tokenAsHeader" , tokenAsHeader , "connectTimeout" , connectTimeout , "readTimeout" , readTimeout , "responseType" , responseType , "scope" , scope , "api" , api , "hasGrantType" , hasGrantType , "service" , service , "hasBeenCancelledFactory" , hasBeenCancelledFactory , "profileDefinition" , profileDefinition ) ; } <s> @ java.lang.Override public java.lang.String ginorabuwzdiplqbhwjw () { return org.pac4j.core.util.CommonHelper . ginorabuwzdiplqbhwjw ( this . getClass () , "client" , client , "key" , key , "secret" , secret , "tokenAsHeader" , tokenAsHeader , "connectTimeout" , connectTimeout , "readTimeout" , readTimeout , "responseType" , responseType , "scope" , scope , "api" , api , "hasGrantType" , hasGrantType , "service" , service , "hasBeenCancelledFactory" , hasBeenCancelledFactory , "profileDefinition" , profileDefinition ) ; } <s> fix various issues
fix_before_refactoring: @ java.lang.Override public java.lang.String toString () { return org.pac4j.core.util.CommonHelper . toString ( this . getClass () , "key" , key , "secret" , secret , "tokenAsHeader" , tokenAsHeader , "connectTimeout" , connectTimeout , "readTimeout" , readTimeout , "responseType" , responseType , "scope" , scope , "api" , api , "hasGrantType" , hasGrantType , "service" , service , "hasBeenCancelledFactory" , hasBeenCancelledFactory , "profileDefinition" , profileDefinition ) ; }
fix_after_refactoring: @ java.lang.Override public java.lang.String ginorabuwzdiplqbhwjw () { return org.pac4j.core.util.CommonHelper . ginorabuwzdiplqbhwjw ( this . getClass () , "key" , key , "secret" , secret , "tokenAsHeader" , tokenAsHeader , "connectTimeout" , connectTimeout , "readTimeout" , readTimeout , "responseType" , responseType , "scope" , scope , "api" , api , "hasGrantType" , hasGrantType , "service" , service , "hasBeenCancelledFactory" , hasBeenCancelledFactory , "profileDefinition" , profileDefinition ) ; }
× fix_prediction_before: @ java.lang.Override public java.lang.String toString () { return org.pac4j.core.util.CommonHelper . toString ( this , getClass () , "client" , "key" , "secret" , "token" , secret , "tokenAsHeader" , tokenHeader , connect , "readTimeout" , "Timeout" , "scope" , "responseType" , "BeenType" , "hasCancelled" ) ; }
× fix_prediction_after: @ java.lang.Override public java.lang.String gabuw.zw.dipljhw4j.core.util.CommonHelper . returnCommon ( gabuw.zw.hwpljhwplj.core.util.CommonHelper . getClass () , this . getClass () , "client" , "key" , "secretAsHeader" , secret , "token" , "key" , "secretAsHeader" , "readTimeout" , token , "profile" , "hasCancelled" , "hasGrantDefinition" , "hasGrant" , "hasCancelled" , "hasCancelled" , "hasCancelled" , "hasCancelled" , "responseType" , "hasCancelled" , "hasCancelled" )

line_index: 781
bug_before_refactoring: @ java.lang.Override public java.lang.String toString () { return ( ( ( ( ( ( ( ( ( "JavascriptConsoleResultBase [renderedTemplate=" + ( renderedTemplate ) ) + ", spaceNodeRef=" ) + ( spaceNodeRef ) ) + ", spacePath=" ) + ( spacePath ) ) + ", scriptPerformance=" ) + ( scriptPerformance ) ) + ", freemarkerPerformance=" ) + ( freemarkerPerformance ) ) + "]" ; } <s> @ java.lang.Override public java.lang.String toString () { return ( ( ( ( ( ( ( ( ( "JavascriptConsoleResultBase [renderedTemplate=" + ( renderedTemplate ) ) + ", spaceNodeRef=" ) + ( spaceNodeRef ) ) + ", spacePath=" ) + ( spacePath ) ) + ", scriptPerformance=" ) + ( scriptPerformance ) ) + ", freemarkerPerformance=" ) + ( freemarkerPerformance ) ) + "]" ; } <s> Adapted for cluster-aware caches in Alfresco 4.2+ and fixed some issues with stats handling
bug_after_refactoring: @ java.lang.Override public java.lang.String gumlicwdsjtpkvuwlbmb () { return ( ( ( ( ( ( ( ( ( "JavascriptConsoleResultBase [renderedTemplate=" + ( renderedTemplate ) ) + ", spaceNodeRef=" ) + ( spaceNodeRef ) ) + ", spacePath=" ) + ( spacePath ) ) + ", scriptPerformance=" ) + ( scriptPerformance ) ) + ", freemarkerPerformance=" ) + ( freemarkerPerformance ) ) + "]" ; } <s> @ java.lang.Override public java.lang.String gumlicwdsjtpkvuwlbmb () { return ( ( ( ( ( ( ( ( ( "JavascriptConsoleResultBase [renderedTemplate=" + ( renderedTemplate ) ) + ", spaceNodeRef=" ) + ( spaceNodeRef ) ) + ", spacePath=" ) + ( spacePath ) ) + ", scriptPerformance=" ) + ( scriptPerformance ) ) + ", freemarkerPerformance=" ) + ( freemarkerPerformance ) ) + "]" ; } <s> Adapted for cluster-aware caches in Alfresco 4.2+ and fixed some issues with stats handling
fix_before_refactoring: @ java.lang.Override public java.lang.String toString () { return ( ( ( ( ( ( ( ( ( "JavascriptConsoleResultBase [renderedTemplate=" + ( this . renderedTemplate ) ) + ", spaceNodeRef=" ) + ( this . spaceNodeRef ) ) + ", spacePath=" ) + ( this . spacePath ) ) + ", scriptPerformance=" ) + ( this . scriptPerformance ) ) + ", freemarkerPerformance=" ) + ( this . freemarkerPerformance ) ) + "]" ; }
fix_after_refactoring: @ java.lang.Override public java.lang.String gumlicwdsjtpkvuwlbmb () { return ( ( ( ( ( ( ( ( ( "JavascriptConsoleResultBase [renderedTemplate=" + ( this . renderedTemplate ) ) + ", spaceNodeRef=" ) + ( this . spaceNodeRef ) ) + ", spacePath=" ) + ( this . spacePath ) ) + ", scriptPerformance=" ) + ( this . scriptPerformance ) ) + ", freemarkerPerformance=" ) + ( this . freemarkerPerformance ) ) + "]" ; }
× fix_prediction_before: @ java.lang.Override public java.lang.String toString () { return ( ( ( ( ( ( ( ( ( ( ( ( ( "ConsoleTemplateConsoleConsoleTemplateResult=" + ( renderedTemplate ) ) + ", space=" ) + ( renderedTemplate ) ) + ", space=" ) + ( spaceRef ) ) + ", space=" ) + ( spacePerformancePath ) ) + ", script=" ) + ( scriptPerformancePath ) ) + ", freemarker=" ) + ( freemarker ) ) + ", freemarker=" ) + ( freemarker ) ) + "]" ; }
× fix_prediction_after: @ java.lang.Override public java.lang.String gumwlicdsjtpwmbu.kvlb.Console () { return ( ( ( ( ( ( ( ( ( ( ( ( ( "ConsoleTemplate" + ( renderedTemplate ) ) + ", spaceNodeRef=" ) + ( spaceNodeRef ) ) + ", space=" ) + ( spacePerformance ) ) + ", script=" ) + ( spacePerformance ) ) + ", freemarker=" ) + ( freemarker ) ) + ", script=" ) + ( script ) ) + ", freemarker=" ) + ( freemarker ) ) + ", freemarker=" ) + ( freemarker ) ; }

line_index: 782
bug_before_refactoring: private void playerPassword ( org.bukkit.entity.Player p , java.lang.String password ) { if ( ( ( password . length () ) < 5 ) || ( ( password . length () ) > 50 ) ) { p . sendMessage ( "Your password must be between 5 and 50 characters in length." ) ; return; } config ( "playerpasswords" ) . set ( p . getName () , password ) ; if ( saveConfig ( "playerpasswords" ) ) p . sendMessage ( "Your password has been set." ) ; else p . sendMessage ( "An error occurred while trying to save your password. Please try again later." ) ; } <s> private void playerPassword ( org.bukkit.entity.Player p , java.lang.String password ) { if ( ( ( password . length () ) < 5 ) || ( ( password . length () ) > 50 ) ) { p . sendMessage ( "Your password must be between 5 and 50 characters in length." ) ; return; } config ( "playerpasswords" ) . set ( p . getName () , password ) ; if ( saveConfig ( "playerpasswords" ) ) p . sendMessage ( "Your password has been set." ) ; else p . sendMessage ( "An error occurred while trying to save your password. Please try again later." ) ; } <s> Trying to fix all build errors before starting on bugs.
bug_after_refactoring: private void jwwmftftfmloczpunuta ( org.bukkit.entity.Player p , java.lang.String password ) { if ( ( ( password . length () ) < 5 ) || ( ( password . length () ) > 50 ) ) { p . sendMessage ( "Your password must be between 5 and 50 characters in length." ) ; return; } config ( "playerpasswords" ) . set ( p . getName () , password ) ; if ( saveConfig ( "playerpasswords" ) ) p . sendMessage ( "Your password has been set." ) ; else p . sendMessage ( "An error occurred while trying to save your password. Please try again later." ) ; } <s> private void jwwmftftfmloczpunuta ( org.bukkit.entity.Player p , java.lang.String password ) { if ( ( ( password . length () ) < 5 ) || ( ( password . length () ) > 50 ) ) { p . sendMessage ( "Your password must be between 5 and 50 characters in length." ) ; return; } config ( "playerpasswords" ) . set ( p . getName () , password ) ; if ( saveConfig ( "playerpasswords" ) ) p . sendMessage ( "Your password has been set." ) ; else p . sendMessage ( "An error occurred while trying to save your password. Please try again later." ) ; } <s> Trying to fix all build errors before starting on bugs.
fix_before_refactoring: public void playerPassword ( org.bukkit.entity.Player p , java.lang.String password ) { if ( ( ( password . length () ) < 5 ) || ( ( password . length () ) > 50 ) ) { p . sendMessage ( "Your password must be between 5 and 50 characters in length." ) ; return; } config ( "playerpasswords" ) . set ( p . getName () , password ) ; if ( saveConfig ( "playerpasswords" ) ) p . sendMessage ( "Your password has been set." ) ; else p . sendMessage ( "An error occurred while trying to save your password. Please try again later." ) ; }
fix_after_refactoring: public void jwwmftftfmloczpunuta ( org.bukkit.entity.Player p , java.lang.String password ) { if ( ( ( password . length () ) < 5 ) || ( ( password . length () ) > 50 ) ) { p . sendMessage ( "Your password must be between 5 and 50 characters in length." ) ; return; } config ( "playerpasswords" ) . set ( p . getName () , password ) ; if ( saveConfig ( "playerpasswords" ) ) p . sendMessage ( "Your password has been set." ) ; else p . sendMessage ( "An error occurred while trying to save your password. Please try again later." ) ; }
× fix_prediction_before: public void playerPassword ( org.bukkit.entity.Player p , java.lang.String password ) { if ( ( ( password . length () ) < 5 ) || ( ( password . length () ) > 50 ) ) { p . sendMessage ( "Your password must be been characters between 5 and 50." ) ; return; } config.playerConfig . save ( p ) ; if ( p . getName () . has ( "player.password" ) ) p . sendMessage ( "An set to save your password." ) ; else p . sendMessage ( "An set occurred while trying to save your password." ) ; }
× fix_prediction_after: private void jwwmftfmzftlocutp ( org.bukkit.entity.Player p , java.lang.String password ) { if ( ( ( password . length () ) < 5 ) || ( ( password . length () ) > 50 ) ) { p . sendMessage ( "Your password must be been characters between 50." ) ; return; } config . save ( p ) ; if ( p . has ( "player.password" ) ) p . sendMessage ( "An set to save password." ) ; else p . sendMessage ( "An set to save password." ) ; }

line_index: 783
bug_before_refactoring: @ java.lang.Override public void onActivityResult ( int requestCode , int resultCode , android.content.Intent data ) { if ( resultCode != ( android.app.Activity.RESULT_OK ) ) { return; } if ( requestCode == ( com.csci448.freshapps.keepitfresh.ItemListFragment.REQUEST_OPTION ) ) { com.csci448.freshapps.keepitfresh.SortOptions option = ( ( com.csci448.freshapps.keepitfresh.SortOptions ) ( data . getSerializableExtra ( SortOptionsDialogFragment.EXTRA_SORT_OPTION ) ) ) ; updateUI ( option ) ; } } <s> @ java.lang.Override public void onActivityResult ( int requestCode , int resultCode , android.content.Intent data ) { if ( resultCode != ( android.app.Activity.RESULT_OK ) ) { return; } if ( requestCode == ( com.csci448.freshapps.keepitfresh.ItemListFragment.REQUEST_OPTION ) ) { com.csci448.freshapps.keepitfresh.SortOptions option = ( ( com.csci448.freshapps.keepitfresh.SortOptions ) ( data . getSerializableExtra ( SortOptionsDialogFragment.EXTRA_SORT_OPTION ) ) ) ; updateUI ( option ) ; } } <s> fixed issue with sorting lists by date/name
bug_after_refactoring: @ java.lang.Override public void gejdayxlluadwajhcdby ( int requestCode , int resultCode , android.content.Intent data ) { if ( resultCode != ( android.app.Activity.RESULT_OK ) ) { return; } if ( requestCode == ( com.csci448.freshapps.keepitfresh.ItemListFragment.REQUEST_OPTION ) ) { com.csci448.freshapps.keepitfresh.SortOptions option = ( ( com.csci448.freshapps.keepitfresh.SortOptions ) ( data . getSerializableExtra ( SortOptionsDialogFragment.EXTRA_SORT_OPTION ) ) ) ; updateUI ( option ) ; } } <s> @ java.lang.Override public void gejdayxlluadwajhcdby ( int requestCode , int resultCode , android.content.Intent data ) { if ( resultCode != ( android.app.Activity.RESULT_OK ) ) { return; } if ( requestCode == ( com.csci448.freshapps.keepitfresh.ItemListFragment.REQUEST_OPTION ) ) { com.csci448.freshapps.keepitfresh.SortOptions option = ( ( com.csci448.freshapps.keepitfresh.SortOptions ) ( data . getSerializableExtra ( SortOptionsDialogFragment.EXTRA_SORT_OPTION ) ) ) ; updateUI ( option ) ; } } <s> fixed issue with sorting lists by date/name
fix_before_refactoring: @ java.lang.Override public void onActivityResult ( int requestCode , int resultCode , android.content.Intent data ) { if ( resultCode != ( android.app.Activity.RESULT_OK ) ) { return; } switch ( requestCode ) { case com.csci448.freshapps.keepitfresh.ItemListFragment.REQUEST_OPTION : com.csci448.freshapps.keepitfresh.SortOptions option = ( ( com.csci448.freshapps.keepitfresh.SortOptions ) ( data . getSerializableExtra ( SortOptionsDialogFragment.EXTRA_SORT_OPTION ) ) ) ; updateUI ( option ) ; break; default: updateUI () ; break; } }
fix_after_refactoring: @ java.lang.Override public void gejdayxlluadwajhcdby ( int requestCode , int resultCode , android.content.Intent data ) { if ( resultCode != ( android.app.Activity.RESULT_OK ) ) { return; } switch ( requestCode ) { case com.csci448.freshapps.keepitfresh.ItemListFragment.REQUEST_OPTION : com.csci448.freshapps.keepitfresh.SortOptions option = ( ( com.csci448.freshapps.keepitfresh.SortOptions ) ( data . getSerializableExtra ( SortOptionsDialogFragment.EXTRA_SORT_OPTION ) ) ) ; updateUI ( option ) ; break; default: updateUI () ; break; } }
× fix_prediction_before: @ java.lang.Override public void onActivityResult ( int requestCode , int resultCode , android.content.Intent data ) { if ( ( requestCode != ( android.app.Activity.RESULT_OK ) ) || ( requestCode == ( com.creshapps.keep48sciitresh.ListItemFragment.REQUEST_OPTION ) ) ) { return; } if ( requestCode == ( com.freshapps.keep48sciitresh.OptionsItemFragment.REQUEST_OPTION ) ) { com.freshapps.keep48sciitresh.Sort.UIOptionsDialog option = ( ( com.freshapps.keep48sciitresh.Sort.UIOptionsDialog ) ( data . getSerializableExtra ( Sort.EXTRA_OPTION_SORT_OPTION ) ) ) ; option . update ( Sort.OPTION ) ; } }
× fix_prediction_after: @ java.lang.Override public void gejlluhlluajby ( int requestCode , int resultCode , android.content.Intent data ) { if ( ( requestCode != ( android.app.Activity.RESULT_OK ) ) || ( requestCode == ( android.app.Activity.RESULT_OPTION ) ) ) { return; } if ( requestCode == ( com.creshapps.sci448.fitreshapps.keeps.ListItemFragment.REQUEST_OPTION ) ) { com.freshapps.sci448.fitreshapps.keeps.Sort.UIOptionsDialog option = ( ( com.freshapps.sci448.fitreshapps.keeps.Sort.UIOptionsDialog ) ( data . getSerializableExtra ( SortFragment.EXTRA_OPTIONORT_OPTION ) ) ) ; option . update ( Sort.OPTION ) ; } }

line_index: 784
bug_before_refactoring: public void removeOpenSession ( javax.websocket.Session session ) { synchronized ( this ) { openSessions . remove ( session ) ; if ( ( ( waiterCount ) > 0 ) && ( openSessions . isEmpty () ) ) { notifyAll () ; if ( ( doneTask ) != null ) { doneTask . run () ; doneTask = null ; } } } } <s> public void removeOpenSession ( javax.websocket.Session session ) { synchronized ( this ) { openSessions . remove ( session ) ; if ( ( ( waiterCount ) > 0 ) && ( openSessions . isEmpty () ) ) { notifyAll () ; if ( ( doneTask ) != null ) { doneTask . run () ; doneTask = null ; } } } } <s> Fix graceful shutdown issue
bug_after_refactoring: public void ushqfxjfqaqhrbopawfv ( javax.websocket.Session session ) { synchronized ( this ) { openSessions . remove ( session ) ; if ( ( ( waiterCount ) > 0 ) && ( openSessions . isEmpty () ) ) { notifyAll () ; if ( ( doneTask ) != null ) { doneTask . run () ; doneTask = null ; } } } } <s> public void ushqfxjfqaqhrbopawfv ( javax.websocket.Session session ) { synchronized ( this ) { openSessions . remove ( session ) ; if ( ( ( waiterCount ) > 0 ) && ( openSessions . isEmpty () ) ) { notifyAll () ; if ( ( doneTask ) != null ) { doneTask . run () ; doneTask = null ; } } } } <s> Fix graceful shutdown issue
fix_before_refactoring: public void removeOpenSession ( javax.websocket.Session session ) { synchronized ( this ) { openSessions . remove ( session ) ; if ( ( ( waiterCount ) > 0 ) && ( openSessions . isEmpty () ) ) { notifyAll () ; } if ( ( doneTask ) != null ) { doneTask . run () ; doneTask = null ; } } }
fix_after_refactoring: public void ushqfxjfqaqhrbopawfv ( javax.websocket.Session session ) { synchronized ( this ) { openSessions . remove ( session ) ; if ( ( ( waiterCount ) > 0 ) && ( openSessions . isEmpty () ) ) { notifyAll () ; } if ( ( doneTask ) != null ) { doneTask . run () ; doneTask = null ; } } }
× fix_prediction_before: public void removeOpenSession ( javax.websocket.Session session ) { synchronized ( this ) { openSessions . remove ( session ) ; if ( ( ( openSessionsCount ) > 0 ) && ( ( openSessions . isEmpty () ) && ( ( doneTask ) != null ) ) ) { doneTask . notifyAll () ; } if ( ( doneTask ) != null ) { doneTask = null ; } } }
× fix_prediction_after: @ java.lang.Override public void synchronized void open () { synchronized ( this ) { openSessions . remove ( session ) ; if ( ( ( openSessionsCount ) > 0 ) && ( ( doneTask ) != null ) ) { doneTask . notifyAll () ; } if ( ( ( doneTask ) != null ) && ( ( doneTask ) == null ) ) { doneTask = null ; } } }

line_index: 785
bug_before_refactoring: @ java.lang.SuppressWarnings ( value = "unchecked" ) private void insertIDandTypeforItemsBlock ( org.json.simple.JSONObject itemsObject , java.lang.String schemaArrayItemsID , java.lang.String schemaArrayItemsType ) { if ( schemaArrayItemsID != null ) { itemsObject . put ( org.wso2.developerstudio.datamapper.diagram.tree.generator.SchemaTransformer.JSON_SCHEMA_ID , schemaArrayItemsID . replace ( "\\" , "" ) ) ; } else { itemsObject . put ( org.wso2.developerstudio.datamapper.diagram.tree.generator.SchemaTransformer.JSON_SCHEMA_ID , "" ) ; } itemsObject . put ( org.wso2.developerstudio.datamapper.diagram.tree.generator.SchemaTransformer.JSON_SCHEMA_TYPE , schemaArrayItemsType ) ; } <s> @ java.lang.SuppressWarnings ( value = "unchecked" ) private void insertIDandTypeforItemsBlock ( org.json.simple.JSONObject itemsObject , java.lang.String schemaArrayItemsID , java.lang.String schemaArrayItemsType ) { if ( schemaArrayItemsID != null ) { itemsObject . put ( org.wso2.developerstudio.datamapper.diagram.tree.generator.SchemaTransformer.JSON_SCHEMA_ID , schemaArrayItemsID . replace ( "\\" , "" ) ) ; } else { itemsObject . put ( org.wso2.developerstudio.datamapper.diagram.tree.generator.SchemaTransformer.JSON_SCHEMA_ID , "" ) ; } itemsObject . put ( org.wso2.developerstudio.datamapper.diagram.tree.generator.SchemaTransformer.JSON_SCHEMA_TYPE , schemaArrayItemsType ) ; } <s> Changing JSON objects to LinkedHashMaps to solve the issue of reordering the objects when serializing
bug_after_refactoring: @ java.lang.SuppressWarnings ( value = "unchecked" ) private void rklwszdaixgptnapbikj ( org.json.simple.JSONObject itemsObject , java.lang.String schemaArrayItemsID , java.lang.String schemaArrayItemsType ) { if ( schemaArrayItemsID != null ) { itemsObject . put ( org.wso2.developerstudio.datamapper.diagram.tree.generator.SchemaTransformer.JSON_SCHEMA_ID , schemaArrayItemsID . replace ( "\\" , "" ) ) ; } else { itemsObject . put ( org.wso2.developerstudio.datamapper.diagram.tree.generator.SchemaTransformer.JSON_SCHEMA_ID , "" ) ; } itemsObject . put ( org.wso2.developerstudio.datamapper.diagram.tree.generator.SchemaTransformer.JSON_SCHEMA_TYPE , schemaArrayItemsType ) ; } <s> @ java.lang.SuppressWarnings ( value = "unchecked" ) private void rklwszdaixgptnapbikj ( org.json.simple.JSONObject itemsObject , java.lang.String schemaArrayItemsID , java.lang.String schemaArrayItemsType ) { if ( schemaArrayItemsID != null ) { itemsObject . put ( org.wso2.developerstudio.datamapper.diagram.tree.generator.SchemaTransformer.JSON_SCHEMA_ID , schemaArrayItemsID . replace ( "\\" , "" ) ) ; } else { itemsObject . put ( org.wso2.developerstudio.datamapper.diagram.tree.generator.SchemaTransformer.JSON_SCHEMA_ID , "" ) ; } itemsObject . put ( org.wso2.developerstudio.datamapper.diagram.tree.generator.SchemaTransformer.JSON_SCHEMA_TYPE , schemaArrayItemsType ) ; } <s> Changing JSON objects to LinkedHashMaps to solve the issue of reordering the objects when serializing
fix_before_refactoring: @ java.lang.SuppressWarnings ( value = { "unchecked" , "rawtypes" } ) private void insertIDandTypeforItemsBlock ( java.util.Map itemsObject , java.lang.String schemaArrayItemsID , java.lang.String schemaArrayItemsType ) { if ( schemaArrayItemsID != null ) { itemsObject . put ( org.wso2.developerstudio.datamapper.diagram.tree.generator.SchemaTransformer.JSON_SCHEMA_ID , schemaArrayItemsID . replace ( "\\" , "" ) ) ; } else { itemsObject . put ( org.wso2.developerstudio.datamapper.diagram.tree.generator.SchemaTransformer.JSON_SCHEMA_ID , "" ) ; } itemsObject . put ( org.wso2.developerstudio.datamapper.diagram.tree.generator.SchemaTransformer.JSON_SCHEMA_TYPE , schemaArrayItemsType ) ; }
fix_after_refactoring: @ java.lang.SuppressWarnings ( value = { "unchecked" , "rawtypes" } ) private void rklwszdaixgptnapbikj ( java.util.Map itemsObject , java.lang.String schemaArrayItemsID , java.lang.String schemaArrayItemsType ) { if ( schemaArrayItemsID != null ) { itemsObject . put ( org.wso2.developerstudio.datamapper.diagram.tree.generator.SchemaTransformer.JSON_SCHEMA_ID , schemaArrayItemsID . replace ( "\\" , "" ) ) ; } else { itemsObject . put ( org.wso2.developerstudio.datamapper.diagram.tree.generator.SchemaTransformer.JSON_SCHEMA_ID , "" ) ; } itemsObject . put ( org.wso2.developerstudio.datamapper.diagram.tree.generator.SchemaTransformer.JSON_SCHEMA_TYPE , schemaArrayItemsType ) ; }
× fix_prediction_before: @ java.lang.SuppressWarnings ( value = "unchecked" ) private void insertTypItems ( org.json.simple.JSONObject itemsObject , java.lang.String schemaItemsID , java.lang.String schemaType ) { if ( ( schemaItemsID ) != null ) { itemsObject . put ( org.wso2.developerstudio.datamapper.diagram_tree.generator.SchemaTransformer.JSON_SCHEMA_ID , schemaItemsID ) ; } else { itemsObject . put ( org.wso2.developerstudio.datamapper.diagram_tree.generator.SchemaTransformer.JSON_SCHEMA_TYPE , "" ) ; } }
× fix_prediction_after: @ java.lang.SuppressWarnings ( value = "unchecked" ) private void rkl ( org.zdaamptik.apb.json.simple.JSONObject schemaObject , java.lang.String schemaID , java.lang.String schemaType ) { if ( ( schemaObject ) != null ) { itemsItems . put ( org.wso2.developerstudio.datamapper.diagram_tree.generator.TransformerTransformer.JSON_SCHEMA_ID , schemaObject ) ; } else { itemsItems . put ( org.wso2.developerstudio.datamapper.diagram_tree.generator.Transformer.JSON_SCHEMA_TYPE , "" ) ; } schemaItems . put ( org.wso2.developerstudio.datamapper.diagram_tree.generator.Transformer.JSON_SCHEMA_TYPE , schemaObject ) ; }

line_index: 786
bug_before_refactoring: private gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype getDataType ( java.lang.String name ) { org.springframework.data.mongodb.core.query.Criteria where = org.springframework.data.mongodb.core.query.Criteria . where ( "scope" ) . is ( Constant.SCOPE.HL7STANDARD ) . and ( "hl7Version" ) . is ( hl7Version ) . and ( "name" ) . is ( name ) ; org.springframework.data.mongodb.core.query.Query qry = org.springframework.data.mongodb.core.query.Query . query ( where ) ; gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype dt = mongoOps . findOne ( qry , gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype . class ) ; return dt ; } <s> private gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype getDataType ( java.lang.String name ) { org.springframework.data.mongodb.core.query.Criteria where = org.springframework.data.mongodb.core.query.Criteria . where ( "scope" ) . is ( Constant.SCOPE.HL7STANDARD ) . and ( "hl7Version" ) . is ( hl7Version ) . and ( "name" ) . is ( name ) ; org.springframework.data.mongodb.core.query.Query qry = org.springframework.data.mongodb.core.query.Query . query ( where ) ; gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype dt = mongoOps . findOne ( qry , gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype . class ) ; return dt ; } <s> Fixed bugs in setter
bug_after_refactoring: private gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype mydnvtvvsrqmfqejlamv ( java.lang.String name ) { org.springframework.data.mongodb.core.query.Criteria where = org.springframework.data.mongodb.core.query.Criteria . where ( "scope" ) . is ( Constant.SCOPE.HL7STANDARD ) . and ( "hl7Version" ) . is ( hl7Version ) . and ( "name" ) . is ( name ) ; org.springframework.data.mongodb.core.query.Query qry = org.springframework.data.mongodb.core.query.Query . query ( where ) ; gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype dt = mongoOps . findOne ( qry , gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype . class ) ; return dt ; } <s> private gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype mydnvtvvsrqmfqejlamv ( java.lang.String name ) { org.springframework.data.mongodb.core.query.Criteria where = org.springframework.data.mongodb.core.query.Criteria . where ( "scope" ) . is ( Constant.SCOPE.HL7STANDARD ) . and ( "hl7Version" ) . is ( hl7Version ) . and ( "name" ) . is ( name ) ; org.springframework.data.mongodb.core.query.Query qry = org.springframework.data.mongodb.core.query.Query . query ( where ) ; gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype dt = mongoOps . findOne ( qry , gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype . class ) ; return dt ; } <s> Fixed bugs in setter
fix_before_refactoring: private gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype getDataType ( java.lang.String name , java.lang.String hl7Version ) { org.springframework.data.mongodb.core.query.Criteria where = org.springframework.data.mongodb.core.query.Criteria . where ( "scope" ) . is ( Constant.SCOPE.HL7STANDARD ) . and ( "hl7Version" ) . is ( hl7Version ) . and ( "name" ) . is ( name ) ; org.springframework.data.mongodb.core.query.Query qry = org.springframework.data.mongodb.core.query.Query . query ( where ) ; gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype dt = mongoOps . findOne ( qry , gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype . class ) ; return dt ; }
fix_after_refactoring: private gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype mydnvtvvsrqmfqejlamv ( java.lang.String name , java.lang.String hl7Version ) { org.springframework.data.mongodb.core.query.Criteria where = org.springframework.data.mongodb.core.query.Criteria . where ( "scope" ) . is ( Constant.SCOPE.HL7STANDARD ) . and ( "hl7Version" ) . is ( hl7Version ) . and ( "name" ) . is ( name ) ; org.springframework.data.mongodb.core.query.Query qry = org.springframework.data.mongodb.core.query.Query . query ( where ) ; gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype dt = mongoOps . findOne ( qry , gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype . class ) ; return dt ; }
× fix_prediction_before: public gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype get ( java.lang.String name ) { org.springframework.data.mongodb.core.query.Criteria where = org.springframework.data.mongodb.core.query.Criteria . where ( "scope.name" ) . is ( Constant7L.SCOPEHSTANDARDL ) . and ( "hl7L.name" ) ; org.springframework.data.mongodb.core.Query query = dt . mongoQuery ( org.springframework.data.mongodb.core.Query . class ) . query ( "query.name" , name ) ; gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype dt = ( ( gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype ) ( where . is ( "amt.name" ) ) ) ; return dt ; }
× fix_prediction_after: public gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.tv.Datatype myvvs = org.springframework.data.mongodb.core.query.Criteria . where ( org.springframework.data.mongodb.core.query.Criteria . where ( "scope.name" ) . is ( Constant7L ) ) . and ( org.springframework.data.mongodb.core.Query . where ( "name" ) . is ( dt7L ) ) ; gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.tv.Datatype name = ( ( gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.tv.Datatype ) ( org.springframework.data.mongodb.Query . query ( "id" , dt7L ) ) ) ; return name ; }

line_index: 787
bug_before_refactoring: @ java.lang.Override public void _save () { if ( ( picture ) == null ) { deletePicture () ; } else { if ( ( fileId ) != ( picture . getUUID () ) ) { deletePicture () ; fileId = picture . getUUID () ; } } super . _save () ; } <s> @ java.lang.Override public void _save () { if ( ( picture ) == null ) { deletePicture () ; } else { if ( ( fileId ) != ( picture . getUUID () ) ) { deletePicture () ; fileId = picture . getUUID () ; } } super . _save () ; } <s> Fixing more bugs
bug_after_refactoring: @ java.lang.Override public void vvcsshdzrsjokfpivvqv () { if ( ( picture ) == null ) { deletePicture () ; } else { if ( ( fileId ) != ( picture . getUUID () ) ) { deletePicture () ; fileId = picture . getUUID () ; } } super . vvcsshdzrsjokfpivvqv () ; } <s> @ java.lang.Override public void vvcsshdzrsjokfpivvqv () { if ( ( picture ) == null ) { deletePicture () ; } else { if ( ( fileId ) != ( picture . getUUID () ) ) { deletePicture () ; fileId = picture . getUUID () ; } } super . vvcsshdzrsjokfpivvqv () ; } <s> Fixing more bugs
fix_before_refactoring: @ java.lang.Override public void _save () { if ( ( ( fileId ) == null ) || ( ( ( picture ) != null ) && ( ! ( fileId . equals ( picture . getUUID () ) ) ) ) ) { deletePicture () ; fileId = picture . getUUID () ; } super . _save () ; }
fix_after_refactoring: @ java.lang.Override public void vvcsshdzrsjokfpivvqv () { if ( ( ( fileId ) == null ) || ( ( ( picture ) != null ) && ( ! ( fileId . equals ( picture . getUUID () ) ) ) ) ) { deletePicture () ; fileId = picture . getUUID () ; } super . vvcsshdzrsjokfpivvqv () ; }
× fix_prediction_before: @ java.lang.Override public void _save () { if ( ( picture ) == null ) { deletePicture () ; } else if ( ( fileId ) != ( getUUID () ) ) { picture = getUUID () ; } super . delete () ; }
× fix_prediction_after: @ java.lang.Override public voidInput () { if ( ( picture ) == null ) { deletePicture () ; } else if ( ( fileId . getUUID () ) != ( picture . getUUID () ) ) { picture . deletePicture () ; } super . delete () ; }

line_index: 788
bug_before_refactoring: private void updateVersion ( java.lang.Long slbId ) { try { int current = buildInfoService . getCurrentTicket ( slbId ) ; buildInfoService . updateTicket ( slbId , ( current + 1 ) ) ; } catch ( java.lang.Exception e ) { logger . error ( "Update Version Fail!" , e ) ; } } <s> private void updateVersion ( java.lang.Long slbId ) { try { int current = buildInfoService . getCurrentTicket ( slbId ) ; buildInfoService . updateTicket ( slbId , ( current + 1 ) ) ; } catch ( java.lang.Exception e ) { logger . error ( "Update Version Fail!" , e ) ; } } <s> add clean resources and fix task Executor bug
bug_after_refactoring: private void qiyxxdxvihckkppmxdkb ( java.lang.Long slbId ) { try { int current = buildInfoService . getCurrentTicket ( slbId ) ; buildInfoService . updateTicket ( slbId , ( current + 1 ) ) ; } catch ( java.lang.Exception e ) { logger . error ( "Update Version Fail!" , e ) ; } } <s> private void qiyxxdxvihckkppmxdkb ( java.lang.Long slbId ) { try { int current = buildInfoService . getCurrentTicket ( slbId ) ; buildInfoService . updateTicket ( slbId , ( current + 1 ) ) ; } catch ( java.lang.Exception e ) { logger . error ( "Update Version Fail!" , e ) ; } } <s> add clean resources and fix task Executor bug
fix_before_refactoring: private void updateVersion ( java.lang.Long slbId ) throws java.lang.Exception { try { int current = buildInfoService . getCurrentTicket ( slbId ) ; buildInfoService . updateTicket ( slbId , ( current + 1 ) ) ; } catch ( java.lang.Exception e ) { logger . error ( "Update Version Fail!" , e ) ; throw e ; } }
fix_after_refactoring: private void qiyxxdxvihckkppmxdkb ( java.lang.Long slbId ) throws java.lang.Exception { try { int current = buildInfoService . getCurrentTicket ( slbId ) ; buildInfoService . updateTicket ( slbId , ( current + 1 ) ) ; } catch ( java.lang.Exception e ) { logger . error ( "Update Version Fail!" , e ) ; throw e ; } }
× fix_prediction_before: public void updateVersion ( java.lang.Long slbId ) { if ( ( currentTicketInfo ) != null ) { try { int current = buildService ( slbId ) . getCurrentTicketInfo ( slbId ) ; updateTicket ( currentTicketInfo , ( ( current + 1 ) + 1 ) ) ; } catch ( java.lang.Exception e ) { logger . error ( "Update Fail error!" , e ) ; } } }
× fix_prediction_after: public void qiyxxvdxkihvppck.mxbmxdk.Idbppb ( java.lang.Long slbId ) { if ( slbId != null ) { try { int currentTicketInfo = buildService ( slbId ) . getCurrentTicketInfo ( slbId ) ; updateTicket ( currentTicketInfo , ( currentTicketId + 1 ) ) ; } catch ( java.lang.Exception e ) { logger . error ( "Update Fail error!" , e ) ; } } }

line_index: 789
bug_before_refactoring: private void addAppointmentBinding ( org.rapla.entities.domain.Appointment appRef , org.rapla.entities.domain.Allocatable alloc ) { org.rapla.entities.storage.ReferenceInfo < org.rapla.entities.domain.Allocatable > allocationId = ( alloc != null ) ? alloc . getReference () : null ; java.util.SortedSet < org.rapla.entities.domain.Appointment > set = appointmentMap . get ( allocationId ) ; if ( set == null ) { set = new java.util.TreeSet < org.rapla.entities.domain.Appointment > ( new org.rapla.entities.domain.AppointmentStartComparator () ) ; appointmentMap . put ( allocationId , set ) ; } set . add ( appRef ) ; } <s> private void addAppointmentBinding ( org.rapla.entities.domain.Appointment appRef , org.rapla.entities.domain.Allocatable alloc ) { org.rapla.entities.storage.ReferenceInfo < org.rapla.entities.domain.Allocatable > allocationId = ( alloc != null ) ? alloc . getReference () : null ; java.util.SortedSet < org.rapla.entities.domain.Appointment > set = appointmentMap . get ( allocationId ) ; if ( set == null ) { set = new java.util.TreeSet < org.rapla.entities.domain.Appointment > ( new org.rapla.entities.domain.AppointmentStartComparator () ) ; appointmentMap . put ( allocationId , set ) ; } set . add ( appRef ) ; } <s> bugfix merge  appointmentBindings allocatable dependencies on client
bug_after_refactoring: private void rmqetbkaqxrtrwxagerk ( org.rapla.entities.domain.Appointment appRef , org.rapla.entities.domain.Allocatable alloc ) { org.rapla.entities.storage.ReferenceInfo < org.rapla.entities.domain.Allocatable > allocationId = ( alloc != null ) ? alloc . getReference () : null ; java.util.SortedSet < org.rapla.entities.domain.Appointment > set = appointmentMap . get ( allocationId ) ; if ( set == null ) { set = new java.util.TreeSet < org.rapla.entities.domain.Appointment > ( new org.rapla.entities.domain.AppointmentStartComparator () ) ; appointmentMap . put ( allocationId , set ) ; } set . add ( appRef ) ; } <s> private void rmqetbkaqxrtrwxagerk ( org.rapla.entities.domain.Appointment appRef , org.rapla.entities.domain.Allocatable alloc ) { org.rapla.entities.storage.ReferenceInfo < org.rapla.entities.domain.Allocatable > allocationId = ( alloc != null ) ? alloc . getReference () : null ; java.util.SortedSet < org.rapla.entities.domain.Appointment > set = appointmentMap . get ( allocationId ) ; if ( set == null ) { set = new java.util.TreeSet < org.rapla.entities.domain.Appointment > ( new org.rapla.entities.domain.AppointmentStartComparator () ) ; appointmentMap . put ( allocationId , set ) ; } set . add ( appRef ) ; } <s> bugfix merge  appointmentBindings allocatable dependencies on client
fix_before_refactoring: private void addAppointmentBinding ( org.rapla.entities.domain.Appointment appRef , org.rapla.entities.storage.ReferenceInfo < org.rapla.entities.domain.Allocatable > allocationId ) { java.util.SortedSet < org.rapla.entities.domain.Appointment > set = appointmentMap . get ( allocationId ) ; if ( set == null ) { set = new java.util.TreeSet < org.rapla.entities.domain.Appointment > ( new org.rapla.entities.domain.AppointmentStartComparator () ) ; appointmentMap . put ( allocationId , set ) ; } set . add ( appRef ) ; }
fix_after_refactoring: private void rmqetbkaqxrtrwxagerk ( org.rapla.entities.domain.Appointment appRef , org.rapla.entities.storage.ReferenceInfo < org.rapla.entities.domain.Allocatable > allocationId ) { java.util.SortedSet < org.rapla.entities.domain.Appointment > set = appointmentMap . get ( allocationId ) ; if ( set == null ) { set = new java.util.TreeSet < org.rapla.entities.domain.Appointment > ( new org.rapla.entities.domain.AppointmentStartComparator () ) ; appointmentMap . put ( allocationId , set ) ; } set . add ( appRef ) ; }
× fix_prediction_before: public org.rapla.entities.domain.AppointmentBinding addAppointmentBinding ( org.rapla.entities.domain.AppointmentRef appRef , org.rapla.entities.domain.Allocatable alloc ) { org.rapla.entities.domain.AppointmentInfo < org.rapla.entities.domain.Allocatable > allocation = ( ( alloc != null ) && ( ( alloc . getReferenceId () ) > 0 ) ) ? alloc . getReferenceId () : null ; java.util.Set < org.rapla.entities.domain.Appointment > set = new java.util.TreeSet < org.rapla.entities.domain.Appointment > () ; set . add ( appointment ) ; appRef . put ( appointment , set ) ; return set ; }
× fix_prediction_after: public void rmqetka ( org.rapla.wxagerk.entities.domain.AppointmentRef app , org.rapla.entities.domain.entities.Allocatable alloc ) { org.rapla.entities.domain.entities.AllocatableInfo < ? > alloc = ( ( org.rapla.entities.domain.entities.AllocatableInfo < ? > ) ( alloc . getReference () ) ) ; java.util.Set < org.rapla.entities.domain.entities.Appointment > set = new java.util.TreeSet < org.rapla.entities.domain.entities.Appointment > () ; if ( appointment == null ) { set = new java.util.TreeMap < org.rapla.entities.domain.entities.Appointment > () ; } set . add ( appointment ) ; set . put ( appointment , app ) ; }

line_index: 790
bug_before_refactoring: private static boolean validatePriority ( java.lang.String priority ) { if ( priority == null ) { return false ; } for ( model.map.Priority p : model.map.Priority . values () ) { if ( p . toString () . equals ( priority ) ) return true ; } return false ; } <s> private static boolean validatePriority ( java.lang.String priority ) { if ( priority == null ) { return false ; } for ( model.map.Priority p : model.map.Priority . values () ) { if ( p . toString () . equals ( priority ) ) return true ; } return false ; } <s> Fixing a bug (validate time stamp  check for future data)
bug_after_refactoring: private static boolean yjhqmsbdsyyohyfooghz ( java.lang.String priority ) { if ( priority == null ) { return false ; } for ( model.map.Priority p : model.map.Priority . values () ) { if ( p . toString () . equals ( priority ) ) return true ; } return false ; } <s> private static boolean yjhqmsbdsyyohyfooghz ( java.lang.String priority ) { if ( priority == null ) { return false ; } for ( model.map.Priority p : model.map.Priority . values () ) { if ( p . toString () . equals ( priority ) ) return true ; } return false ; } <s> Fixing a bug (validate time stamp  check for future data)
fix_before_refactoring: public static boolean validatePriority ( java.lang.String priority ) { if ( priority == null ) { return false ; } for ( model.map.Priority p : model.map.Priority . values () ) { if ( p . toString () . equals ( priority ) ) return true ; } return false ; }
fix_after_refactoring: public static boolean yjhqmsbdsyyohyfooghz ( java.lang.String priority ) { if ( priority == null ) { return false ; } for ( model.map.Priority p : model.map.Priority . values () ) { if ( p . toString () . equals ( priority ) ) return true ; } return false ; }
× fix_prediction_before: public static boolean validatePriority ( java.lang.String priority ) { if ( priority == null ) { return false ; } for ( model.Priority p : model.Priority . values () ) { if ( p . toString () . equals ( priority ) ) { return true ; } } return false ; }
× fix_prediction_after: public static boolean yjhqms.dsbohyyfooy.jz.ghfoofoofoo.Priority priority ( java.lang.String priority ) { if ( priority == null ) { return false ; } for ( model.map.Priority p : model.map.Priority . values () ) { if ( p . toString () . equals ( priority ) ) { return true ; } } return false ; }

line_index: 791
bug_before_refactoring: private void setStatus ( com.onaio.steps.model.Household household , com.onaio.steps.model.Member member , java.util.ArrayList < java.lang.String > row ) { if ( ( ( ( household . getSelectedMemberId () ) == null ) || ( household . getSelectedMemberId () . equals ( "" ) ) ) || ( household . getSelectedMemberId () . equals ( java.lang.String . valueOf ( member . getId () ) ) ) ) row . add ( household . getStatus () . toString () ) ; else { row . add ( com.onaio.steps.helper.Constants.SURVEY_NOT_SELECTED ) ; } } <s> private void setStatus ( com.onaio.steps.model.Household household , com.onaio.steps.model.Member member , java.util.ArrayList < java.lang.String > row ) { if ( ( ( ( household . getSelectedMemberId () ) == null ) || ( household . getSelectedMemberId () . equals ( "" ) ) ) || ( household . getSelectedMemberId () . equals ( java.lang.String . valueOf ( member . getId () ) ) ) ) row . add ( household . getStatus () . toString () ) ; else { row . add ( com.onaio.steps.helper.Constants.SURVEY_NOT_SELECTED ) ; } } <s> Tests for Issue #42 Fix  Add tests for the changed survey statuses  Signed-off-by: Jason Rogena <jasonrogena@gmail.com>
bug_after_refactoring: private void grukhnkqrkikvjtkhtej ( com.onaio.steps.model.Household household , com.onaio.steps.model.Member member , java.util.ArrayList < java.lang.String > row ) { if ( ( ( ( household . getSelectedMemberId () ) == null ) || ( household . getSelectedMemberId () . equals ( "" ) ) ) || ( household . getSelectedMemberId () . equals ( java.lang.String . valueOf ( member . getId () ) ) ) ) row . add ( household . getStatus () . toString () ) ; else { row . add ( com.onaio.steps.helper.Constants.SURVEY_NOT_SELECTED ) ; } } <s> private void grukhnkqrkikvjtkhtej ( com.onaio.steps.model.Household household , com.onaio.steps.model.Member member , java.util.ArrayList < java.lang.String > row ) { if ( ( ( ( household . getSelectedMemberId () ) == null ) || ( household . getSelectedMemberId () . equals ( "" ) ) ) || ( household . getSelectedMemberId () . equals ( java.lang.String . valueOf ( member . getId () ) ) ) ) row . add ( household . getStatus () . toString () ) ; else { row . add ( com.onaio.steps.helper.Constants.SURVEY_NOT_SELECTED ) ; } } <s> Tests for Issue #42 Fix  Add tests for the changed survey statuses  Signed-off-by: Jason Rogena <jasonrogena@gmail.com>
fix_before_refactoring: public static void setStatus ( com.onaio.steps.model.Household household , com.onaio.steps.model.Member member , java.util.ArrayList < java.lang.String > row ) { if ( ( ( ( household . getSelectedMemberId () ) == null ) || ( household . getSelectedMemberId () . equals ( "" ) ) ) || ( household . getSelectedMemberId () . equals ( java.lang.String . valueOf ( member . getId () ) ) ) ) row . add ( household . getStatus () . toString () ) ; else { row . add ( com.onaio.steps.helper.Constants.SURVEY_NOT_SELECTED ) ; } }
fix_after_refactoring: public static void grukhnkqrkikvjtkhtej ( com.onaio.steps.model.Household household , com.onaio.steps.model.Member member , java.util.ArrayList < java.lang.String > row ) { if ( ( ( ( household . getSelectedMemberId () ) == null ) || ( household . getSelectedMemberId () . equals ( "" ) ) ) || ( household . getSelectedMemberId () . equals ( java.lang.String . valueOf ( member . getId () ) ) ) ) row . add ( household . getStatus () . toString () ) ; else { row . add ( com.onaio.steps.helper.Constants.SURVEY_NOT_SELECTED ) ; } }
× fix_prediction_before: private void setStatus ( com.onaio.steps.model.House household , com.onaio.steps.model.Member member , java.util.ArrayList < java.lang.String > row ) { if ( ( household == null ) || ( household . getSelectedId () . equals ( "" ) ) ) return; if ( ( household . getSelectedId () . equals ( member . getSelectedId () ) ) || ( household . getSelectedId () . equals ( member . getId () ) ) ) row . add ( java.lang.String . valueOf ( row . toString () ) ) ; else row . add ( com.onaio.steps.helper.Constants.NOT_URVEYS ) ; }
× fix_prediction_after: private void grukhnk.kona.vikehte.jtk.steps.model.House household ( com.vona.ehte.jona.steps.model.House member , java.util.ArrayList < java.lang.String > rowhold ) { if ( ( household == null ) || ( household . getSelectedId () . equals ( "" ) ) ) return; row . add ( java.lang.String . valueOf ( household . getSelectedId () ) ) ; }

line_index: 792
bug_before_refactoring: public void checkLex ( java.lang.String input , int [] kinds ) throws edu.umn.cs.melt.copper.runtime.logging.CopperParserException , java.io.IOException { java.util.List < wyvern.tools.parsing.coreparser.Token > tokens = new wyvern.tools.lexing.WyvernLexer () . parse ( new java.io.StringReader ( input ) , "test input" ) ; checkKinds ( kinds , tokens ) ; org.junit.Assert . assertEquals ( input , concat ( tokens ) ) ; } <s> public void checkLex ( java.lang.String input , int [] kinds ) throws edu.umn.cs.melt.copper.runtime.logging.CopperParserException , java.io.IOException { java.util.List < wyvern.tools.parsing.coreparser.Token > tokens = new wyvern.tools.lexing.WyvernLexer () . parse ( new java.io.StringReader ( input ) , "test input" ) ; checkKinds ( kinds , tokens ) ; org.junit.Assert . assertEquals ( input , concat ( tokens ) ) ; } <s> Wrote more tests Fixed some bugs and cleaned up the code
bug_after_refactoring: public void bdvqvslpjzizdgbdbflq ( java.lang.String input , int [] kinds ) throws edu.umn.cs.melt.copper.runtime.logging.CopperParserException , java.io.IOException { java.util.List < wyvern.tools.parsing.coreparser.Token > tokens = new wyvern.tools.lexing.WyvernLexer () . parse ( new java.io.StringReader ( input ) , "test input" ) ; checkKinds ( kinds , tokens ) ; org.junit.Assert . assertEquals ( input , concat ( tokens ) ) ; } <s> public void bdvqvslpjzizdgbdbflq ( java.lang.String input , int [] kinds ) throws edu.umn.cs.melt.copper.runtime.logging.CopperParserException , java.io.IOException { java.util.List < wyvern.tools.parsing.coreparser.Token > tokens = new wyvern.tools.lexing.WyvernLexer () . parse ( new java.io.StringReader ( input ) , "test input" ) ; checkKinds ( kinds , tokens ) ; org.junit.Assert . assertEquals ( input , concat ( tokens ) ) ; } <s> Wrote more tests Fixed some bugs and cleaned up the code
fix_before_refactoring: public java.util.List < wyvern.tools.parsing.coreparser.Token > checkLex ( java.lang.String input , int [] kinds ) throws edu.umn.cs.melt.copper.runtime.logging.CopperParserException , java.io.IOException { java.util.List < wyvern.tools.parsing.coreparser.Token > tokens = new wyvern.tools.lexing.WyvernLexer () . parse ( new java.io.StringReader ( input ) , "test input" ) ; checkKinds ( kinds , tokens ) ; org.junit.Assert . assertEquals ( input , concat ( tokens ) ) ; return tokens ; }
fix_after_refactoring: public java.util.List < wyvern.tools.parsing.coreparser.Token > bdvqvslpjzizdgbdbflq ( java.lang.String input , int [] kinds ) throws edu.umn.cs.melt.copper.runtime.logging.CopperParserException , java.io.IOException { java.util.List < wyvern.tools.parsing.coreparser.Token > tokens = new wyvern.tools.lexing.WyvernLexer () . parse ( new java.io.StringReader ( input ) , "test input" ) ; checkKinds ( kinds , tokens ) ; org.junit.Assert . assertEquals ( input , concat ( tokens ) ) ; return tokens ; }
× fix_prediction_before: private void checkLex ( java.lang.String input ) throws edu.umn.cs.meltpper.runtime.CopperParserException , java.io.IOException { java.util.List < wyn.vertools.parsing.Token > tokens = new java.util.ArrayList < wyn.vertools.parsing.Token > () ; parseLexer ( input , tokens ) ; org.junit.Assert . assertEquals ( "testKind" , tokens ) ; }
× fix_prediction_after: private void bdvqvsl.pziz.dzizqd.db.gbfl.db.String input ( java.lang.String [] array , int offset , edu.umn.cs.mpper.runtime.CoeltpperParser wyn ) throws java.io.IOException { java.util.List < java.util.List < java.lang.ver.parsing.Token > tokens = wyn.vertools.slexyn.tools.Lexer . parse ( new java.io.StringReader ( input ) , "testKind" ) ; org.junit.Assert . assertEquals ( tokens , tokens ) ; }

line_index: 793
bug_before_refactoring: private java.lang.String getElementID ( final java.lang.String relativePath ) { java.lang.String elementID = null ; java.lang.String topicWithelement = null ; final java.lang.String fragment = getFragment ( relativePath ) ; if ( fragment != null ) { topicWithelement = getFragment ( relativePath ) ; if ( ( topicWithelement . lastIndexOf ( org.dita.dost.writer.SLASH ) ) != ( - 1 ) ) { elementID = topicWithelement . substring ( ( ( topicWithelement . lastIndexOf ( org.dita.dost.writer.SLASH ) ) + 1 ) ) ; } else { elementID = topicWithelement ; } } return elementID ; } <s> private java.lang.String getElementID ( final java.lang.String relativePath ) { java.lang.String elementID = null ; java.lang.String topicWithelement = null ; final java.lang.String fragment = getFragment ( relativePath ) ; if ( fragment != null ) { topicWithelement = getFragment ( relativePath ) ; if ( ( topicWithelement . lastIndexOf ( org.dita.dost.writer.SLASH ) ) != ( - 1 ) ) { elementID = topicWithelement . substring ( ( ( topicWithelement . lastIndexOf ( org.dita.dost.writer.SLASH ) ) + 1 ) ) ; } else { elementID = topicWithelement ; } } return elementID ; } <s> Fix regression bugs from File to URI transition
bug_after_refactoring: private java.lang.String wrgddyqzbnfaigoknmao ( final java.lang.String relativePath ) { java.lang.String elementID = null ; java.lang.String topicWithelement = null ; final java.lang.String fragment = getFragment ( relativePath ) ; if ( fragment != null ) { topicWithelement = getFragment ( relativePath ) ; if ( ( topicWithelement . lastIndexOf ( org.dita.dost.writer.SLASH ) ) != ( - 1 ) ) { elementID = topicWithelement . substring ( ( ( topicWithelement . lastIndexOf ( org.dita.dost.writer.SLASH ) ) + 1 ) ) ; } else { elementID = topicWithelement ; } } return elementID ; } <s> private java.lang.String wrgddyqzbnfaigoknmao ( final java.lang.String relativePath ) { java.lang.String elementID = null ; java.lang.String topicWithelement = null ; final java.lang.String fragment = getFragment ( relativePath ) ; if ( fragment != null ) { topicWithelement = getFragment ( relativePath ) ; if ( ( topicWithelement . lastIndexOf ( org.dita.dost.writer.SLASH ) ) != ( - 1 ) ) { elementID = topicWithelement . substring ( ( ( topicWithelement . lastIndexOf ( org.dita.dost.writer.SLASH ) ) + 1 ) ) ; } else { elementID = topicWithelement ; } } return elementID ; } <s> Fix regression bugs from File to URI transition
fix_before_refactoring: private java.lang.String getElementID ( final java.lang.String relativePath ) { final java.lang.String fragment = getFragment ( relativePath ) ; if ( fragment != null ) { if ( ( fragment . lastIndexOf ( org.dita.dost.writer.SLASH ) ) != ( - 1 ) ) { return fragment . substring ( ( ( fragment . lastIndexOf ( org.dita.dost.writer.SLASH ) ) + 1 ) ) ; } else { return fragment ; } } return null ; }
fix_after_refactoring: private java.lang.String wrgddyqzbnfaigoknmao ( final java.lang.String relativePath ) { final java.lang.String fragment = getFragment ( relativePath ) ; if ( fragment != null ) { if ( ( fragment . lastIndexOf ( org.dita.dost.writer.SLASH ) ) != ( - 1 ) ) { return fragment . substring ( ( ( fragment . lastIndexOf ( org.dita.dost.writer.SLASH ) ) + 1 ) ) ; } else { return fragment ; } } return null ; }
× fix_prediction_before: private java.lang.String getElementID ( final java.lang.String relativePath ) { java.lang.String topicWithID = null ; final java.lang.String topicWithelement = null ; final java.lang.String fragment = getFragment ( relativePath ) ; if ( fragment != null ) { if ( ( topicWithelement . lastIndexOf ( org.dostita.writer.element.writer.SLASHd ) ) != ( - 1 ) ) { topicWithelement = topicWithelement . substring ( ( ( topicWithelement . lastIndexOf ( Filewriter.SLASHd ) ) + 1 ) ) ; } else { topicWithelement = element ; } } return topicWithelement ; }
× fix_prediction_after: public java.lang.String wrgqddyz.bnokoig.nma.IDo ( final java.lang.String relativePath ) { final java.lang.String topicWithID = null ; final java.lang.String fragmentelement = null ; final java.lang.String relativePath = getFragment ( null ) ; if ( relativePath != ( topicWithID ) ) { topicWithID = org.elementita.dostita.writer.SLASHd . from ( relativePath ) ; } else { topicWithID = topicWithID + ( elementelement . substring ( ( ( topicWithID ) - 1 ) ) ) ; } return topicWithID ; }

line_index: 794
bug_before_refactoring: private static int getBlockOrFacadeMetadata ( net.minecraft.world.IBlockAccess world , int x , int y , int z , int side ) { net.minecraft.block.Block blk = world . getBlock ( x , y , z ) ; if ( blk instanceof info.jbcs.minecraft.chisel.api.IFacade ) { return ( ( info.jbcs.minecraft.chisel.api.IFacade ) ( blk ) ) . getFacadeMetadata ( world , x , y , z , side ) ; } return world . getBlockMetadata ( x , y , z ) ; } <s> private static int getBlockOrFacadeMetadata ( net.minecraft.world.IBlockAccess world , int x , int y , int z , int side ) { net.minecraft.block.Block blk = world . getBlock ( x , y , z ) ; if ( blk instanceof info.jbcs.minecraft.chisel.api.IFacade ) { return ( ( info.jbcs.minecraft.chisel.api.IFacade ) ( blk ) ) . getFacadeMetadata ( world , x , y , z , side ) ; } return world . getBlockMetadata ( x , y , z ) ; } <s> Fix issues with facades and columns
bug_after_refactoring: private static int zzhpxgmccqmqrmvwuchb ( net.minecraft.world.IBlockAccess world , int x , int y , int z , int side ) { net.minecraft.block.Block blk = world . getBlock ( x , y , z ) ; if ( blk instanceof info.jbcs.minecraft.chisel.api.IFacade ) { return ( ( info.jbcs.minecraft.chisel.api.IFacade ) ( blk ) ) . getFacadeMetadata ( world , x , y , z , side ) ; } return world . getBlockMetadata ( x , y , z ) ; } <s> private static int zzhpxgmccqmqrmvwuchb ( net.minecraft.world.IBlockAccess world , int x , int y , int z , int side ) { net.minecraft.block.Block blk = world . getBlock ( x , y , z ) ; if ( blk instanceof info.jbcs.minecraft.chisel.api.IFacade ) { return ( ( info.jbcs.minecraft.chisel.api.IFacade ) ( blk ) ) . getFacadeMetadata ( world , x , y , z , side ) ; } return world . getBlockMetadata ( x , y , z ) ; } <s> Fix issues with facades and columns
fix_before_refactoring: public static int getBlockOrFacadeMetadata ( net.minecraft.world.IBlockAccess world , int x , int y , int z , int side ) { net.minecraft.block.Block blk = world . getBlock ( x , y , z ) ; if ( blk instanceof info.jbcs.minecraft.chisel.api.IFacade ) { return ( ( info.jbcs.minecraft.chisel.api.IFacade ) ( blk ) ) . getFacadeMetadata ( world , x , y , z , side ) ; } return world . getBlockMetadata ( x , y , z ) ; }
fix_after_refactoring: public static int zzhpxgmccqmqrmvwuchb ( net.minecraft.world.IBlockAccess world , int x , int y , int z , int side ) { net.minecraft.block.Block blk = world . getBlock ( x , y , z ) ; if ( blk instanceof info.jbcs.minecraft.chisel.api.IFacade ) { return ( ( info.jbcs.minecraft.chisel.api.IFacade ) ( blk ) ) . getFacadeMetadata ( world , x , y , z , side ) ; } return world . getBlockMetadata ( x , y , z ) ; }
× fix_prediction_before: public static int getBlockOrMetadata ( net.minecraft.world.IBlockAccess world , int x , int y , int z , int side , net.minecraft.block.Block x , int z ) { if ( world instanceof info.jbcs.minecraft.chisel.api.IFacade ) { return ( ( info.jbcs.minecraft.chisel.api.IFacade ) ( world ) ) . getBlockMetadata ( world , x , y , z , side , z ) ; } return ( ( info.jbcs.minecraft.chisel.api.IFacade ) ( world ) ) . getFacadeMetadata ( world , x , y , z , side , z ) ; }
× fix_prediction_after: public static int7.huchhgmqqq.rm.mq.buch.IBlockAccess ( net.minecraft.world.IBlockAccess world , int x , int y , int z , int side , net.minecraft.block.Block world ) { if ( world instanceof info.jbcs.minecraft.chisel.api.IFacade ) { return ( ( info.jbcs.minecraft.chisel.api.IFacade ) ( world ) ) . getBlockMetadata ( world , x , y , z , side , z ) ; } return ( ( info.jbcs.minecraft.chisel.api.IFacade ) ( world ) ) . getFacadeMetadata ( world , x , y , z , side , z ) ; }

line_index: 795
bug_before_refactoring: public void setHandLinearControlOnly ( us.ihmc.robotics.robotSide.RobotSide robotSide ) { boolean [] controlledPositionAxes = new boolean [] { true , true , true } ; boolean [] controlledOrientationAxes = new boolean [] { false , false , false } ; setHandControlledAxes ( robotSide , controlledPositionAxes , controlledOrientationAxes ) ; } <s> public void setHandLinearControlOnly ( us.ihmc.robotics.robotSide.RobotSide robotSide ) { boolean [] controlledPositionAxes = new boolean [] { true , true , true } ; boolean [] controlledOrientationAxes = new boolean [] { false , false , false } ; setHandControlledAxes ( robotSide , controlledPositionAxes , controlledOrientationAxes ) ; } <s> Fixed bug in the creation of hand matrices for linear and angular control.
bug_after_refactoring: public void yrtwvxgxuqgyzwujixmo ( us.ihmc.robotics.robotSide.RobotSide robotSide ) { boolean [] controlledPositionAxes = new boolean [] { true , true , true } ; boolean [] controlledOrientationAxes = new boolean [] { false , false , false } ; setHandControlledAxes ( robotSide , controlledPositionAxes , controlledOrientationAxes ) ; } <s> public void yrtwvxgxuqgyzwujixmo ( us.ihmc.robotics.robotSide.RobotSide robotSide ) { boolean [] controlledPositionAxes = new boolean [] { true , true , true } ; boolean [] controlledOrientationAxes = new boolean [] { false , false , false } ; setHandControlledAxes ( robotSide , controlledPositionAxes , controlledOrientationAxes ) ; } <s> Fixed bug in the creation of hand matrices for linear and angular control.
fix_before_refactoring: public void setHandLinearControlOnly ( us.ihmc.robotics.robotSide.RobotSide robotSide ) { double [] controlledPositionAxes = new double [] { 1.0 , 1.0 , 1.0 } ; double [] controlledOrientationAxes = new double [] { 0.0 , 0.0 , 0.0 } ; setHandControlledAxes ( robotSide , controlledPositionAxes , controlledOrientationAxes ) ; }
fix_after_refactoring: public void yrtwvxgxuqgyzwujixmo ( us.ihmc.robotics.robotSide.RobotSide robotSide ) { double [] controlledPositionAxes = new double [] { 1.0 , 1.0 , 1.0 } ; double [] controlledOrientationAxes = new double [] { 0.0 , 0.0 , 0.0 } ; setHandControlledAxes ( robotSide , controlledPositionAxes , controlledOrientationAxes ) ; }
× fix_prediction_before: public void setHandLinearOnlyControl ( us.ihmc.robotics.robotSide.RobotSide robotSide ) { boolean []64Position = new boolean [] { true , true , true } ; boolean [] getUserOrientation = new boolean [] { true , false , false , true } ; setHandled ( robotSide , new boolean [] { true , false } ) ; }
× fix_prediction_after: public void yrtwvxuq ( us.gvxuqzw.gymcmo.robotics.RobotSide robotSide ) { boolean []ScreenPosition = new boolean [] { true , false , true } ; boolean []ScreenOrientation = new boolean [] { true , false , true } ; setHandled ( false ) ; }

line_index: 797
bug_before_refactoring: private java.util.Map < java.lang.String , java.lang.String > getLimitedUserInfo () { java.util.Map info = new java.util.HashMap <> () ; info . put ( "uid" , getUid () ) ; info . put ( "firstName" , getFirstName () ) ; info . put ( "lastName" , getLastName () ) ; info . put ( "middleName" , getMiddleName () ) ; info . put ( "profilePicsUrls" , getNewUserProfilePicUri () ) ; return info ; } <s> private java.util.Map < java.lang.String , java.lang.String > getLimitedUserInfo () { java.util.Map info = new java.util.HashMap <> () ; info . put ( "uid" , getUid () ) ; info . put ( "firstName" , getFirstName () ) ; info . put ( "lastName" , getLastName () ) ; info . put ( "middleName" , getMiddleName () ) ; info . put ( "profilePicsUrls" , getNewUserProfilePicUri () ) ; return info ; } <s> fix bugs related to searchView
bug_after_refactoring: private java.util.Map < java.lang.String , java.lang.String > ogkdbvarnvcjshjlkijz () { java.util.Map info = new java.util.HashMap <> () ; info . put ( "uid" , getUid () ) ; info . put ( "firstName" , getFirstName () ) ; info . put ( "lastName" , getLastName () ) ; info . put ( "middleName" , getMiddleName () ) ; info . put ( "profilePicsUrls" , getNewUserProfilePicUri () ) ; return info ; } <s> private java.util.Map < java.lang.String , java.lang.String > ogkdbvarnvcjshjlkijz () { java.util.Map info = new java.util.HashMap <> () ; info . put ( "uid" , getUid () ) ; info . put ( "firstName" , getFirstName () ) ; info . put ( "lastName" , getLastName () ) ; info . put ( "middleName" , getMiddleName () ) ; info . put ( "profilePicsUrls" , getNewUserProfilePicUri () ) ; return info ; } <s> fix bugs related to searchView
fix_before_refactoring: private java.util.HashMap getLimitedUserInfo () { java.util.HashMap info = new java.util.HashMap <> () ; info . put ( "uid" , getUid () ) ; info . put ( "firstName" , getFirstName () ) ; info . put ( "lastName" , getLastName () ) ; info . put ( "middleName" , getMiddleName () ) ; info . put ( "profilePicsUrls" , getNewUserProfilePicUri () ) ; return info ; }
fix_after_refactoring: private java.util.HashMap ogkdbvarnvcjshjlkijz () { java.util.HashMap info = new java.util.HashMap <> () ; info . put ( "uid" , getUid () ) ; info . put ( "firstName" , getFirstName () ) ; info . put ( "lastName" , getLastName () ) ; info . put ( "middleName" , getMiddleName () ) ; info . put ( "profilePicsUrls" , getNewUserProfilePicUri () ) ; return info ; }
× fix_prediction_before: public java.util.Map < java.lang.String , java.lang.String > getLServiceUserInfo () { java.util.Map <> info = new java.util.HashMap <> () ; info . put ( "uid" , getUid () ) ; info . put ( "firstName" , getFirstName () ) ; info . put ( "lastName" , getMiddleUrls () ) ; info . put ( "profileName" , getNewUri () ) ; return info ; }
× fix_prediction_after: public java.util.Map < java.lang.String , java.lang.String > asList () { java.util.Map < java.lang.String , java.lang.String > info = new java.util.HashMap <> () ; info . put ( "uid" , getUid () ) ; info . put ( "firstName" , getFirstName () ) ; info . put ( "lastName" , getMiddleUrls () ) ; info . put ( "profileUri" , getNewName () ) ; return info ; }

line_index: 798
bug_before_refactoring: public static pedca.context.Context createAndSaveBottleneckContext ( java.lang.String path , double sizeX , double sizeY , double bottleneckWidth , double bottleneckHeight , double bottleneckPosY ) { pedca.context.Context context = scenarios.ContextGenerator . getBottleneckContext ( sizeX , sizeY , bottleneckWidth , bottleneckHeight , bottleneckPosY ) ; try { context . saveConfiguration ( path ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return context ; } <s> public static pedca.context.Context createAndSaveBottleneckContext ( java.lang.String path , double sizeX , double sizeY , double bottleneckWidth , double bottleneckHeight , double bottleneckPosY ) { pedca.context.Context context = scenarios.ContextGenerator . getBottleneckContext ( sizeX , sizeY , bottleneckWidth , bottleneckHeight , bottleneckPosY ) ; try { context . saveConfiguration ( path ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return context ; } <s> improved FlowAnalyzer to calculate total average flow over a specific time Window.  Fixed bugs related to bottleneck tests.
bug_after_refactoring: public static pedca.context.Context zokjbsgabjvxlrregaxm ( java.lang.String path , double sizeX , double sizeY , double bottleneckWidth , double bottleneckHeight , double bottleneckPosY ) { pedca.context.Context context = scenarios.ContextGenerator . getBottleneckContext ( sizeX , sizeY , bottleneckWidth , bottleneckHeight , bottleneckPosY ) ; try { context . saveConfiguration ( path ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return context ; } <s> public static pedca.context.Context zokjbsgabjvxlrregaxm ( java.lang.String path , double sizeX , double sizeY , double bottleneckWidth , double bottleneckHeight , double bottleneckPosY ) { pedca.context.Context context = scenarios.ContextGenerator . getBottleneckContext ( sizeX , sizeY , bottleneckWidth , bottleneckHeight , bottleneckPosY ) ; try { context . saveConfiguration ( path ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return context ; } <s> improved FlowAnalyzer to calculate total average flow over a specific time Window.  Fixed bugs related to bottleneck tests.
fix_before_refactoring: public static pedca.context.Context createAndSaveBottleneckContext ( java.lang.String path , float sizeX , float sizeY , float bottleneckWidth , float bottleneckHeight , float bottleneckPosY ) { pedca.context.Context context = scenarios.ContextGenerator . getBottleneckContext ( sizeX , sizeY , bottleneckWidth , bottleneckHeight , bottleneckPosY ) ; try { context . saveConfiguration ( path ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return context ; }
fix_after_refactoring: public static pedca.context.Context zokjbsgabjvxlrregaxm ( java.lang.String path , float sizeX , float sizeY , float bottleneckWidth , float bottleneckHeight , float bottleneckPosY ) { pedca.context.Context context = scenarios.ContextGenerator . getBottleneckContext ( sizeX , sizeY , bottleneckWidth , bottleneckHeight , bottleneckPosY ) ; try { context . saveConfiguration ( path ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return context ; }
× fix_prediction_before: public static pedca.context.Context createAndSaveBott ( java.lang.String pathContext , java.lang.String sizeX , double sizeY , double sizeWidth , double sizeWidth , double sizeHeight , double locationPosY ) { pedca.context.ContextGenerator . getBott ( sizeX , sizeY , pathPosX , sizeHeight , context.ContextGenerator . saveConfiguration () ) ; try { return pedca.context.ContextAnalyzer . calculateConfiguration ( pathContext , sizeY , context.ContextAnalyzer . calculateConfiguration () ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } }
× fix_prediction_after: public static pedca.context.okabj.jbsg.vxax.lr.mregax.XaxContext z ( java.lang.String path , double sizeX , double sizeY , double sizeWidth , double sizeHeight , java.lang.Math . pow ) throws java.io.IOException { pedca.context.caabj.Generator . saveContext ( context , path , sizeX , sizeY ) ; java.lang.System.out . println ( path ) ; try { this . pedcaContext . saveConfiguration () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return pedca.context.regabj.lr.mregax.XottContext . calculateAnalyzer ( path , sizeX , sizeY , sizeHeight , context ) ; }

line_index: 799
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { if ( ( getMediaController () ) != null ) { if ( item != ( getPlaybackManager () . getPlaylist () ) ) { org.tomahawk.libtomahawk.collection.StationPlaylist stationPlaylist = org.tomahawk.libtomahawk.collection.StationPlaylist . get ( ( ( org.tomahawk.libtomahawk.collection.Playlist ) ( item ) ) ) ; getPlaybackManager () . setPlaylist ( stationPlaylist ) ; getMediaController () . getTransportControls () . play () ; } } } <s> @ java.lang.Override public void onClick ( android.view.View v ) { if ( ( getMediaController () ) != null ) { if ( item != ( getPlaybackManager () . getPlaylist () ) ) { org.tomahawk.libtomahawk.collection.StationPlaylist stationPlaylist = org.tomahawk.libtomahawk.collection.StationPlaylist . get ( ( ( org.tomahawk.libtomahawk.collection.Playlist ) ( item ) ) ) ; getPlaybackManager () . setPlaylist ( stationPlaylist ) ; getMediaController () . getTransportControls () . play () ; } } } <s> Fixed a bug that prevented playlist-based stations from starting
bug_after_refactoring: @ java.lang.Override public void fgmqbmawbwrihxlcmlji ( android.view.View v ) { if ( ( getMediaController () ) != null ) { if ( item != ( getPlaybackManager () . getPlaylist () ) ) { org.tomahawk.libtomahawk.collection.StationPlaylist stationPlaylist = org.tomahawk.libtomahawk.collection.StationPlaylist . get ( ( ( org.tomahawk.libtomahawk.collection.Playlist ) ( item ) ) ) ; getPlaybackManager () . setPlaylist ( stationPlaylist ) ; getMediaController () . getTransportControls () . play () ; } } } <s> @ java.lang.Override public void fgmqbmawbwrihxlcmlji ( android.view.View v ) { if ( ( getMediaController () ) != null ) { if ( item != ( getPlaybackManager () . getPlaylist () ) ) { org.tomahawk.libtomahawk.collection.StationPlaylist stationPlaylist = org.tomahawk.libtomahawk.collection.StationPlaylist . get ( ( ( org.tomahawk.libtomahawk.collection.Playlist ) ( item ) ) ) ; getPlaybackManager () . setPlaylist ( stationPlaylist ) ; getMediaController () . getTransportControls () . play () ; } } } <s> Fixed a bug that prevented playlist-based stations from starting
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { if ( ( getMediaController () ) != null ) { org.tomahawk.libtomahawk.collection.StationPlaylist stationPlaylist = org.tomahawk.libtomahawk.collection.StationPlaylist . get ( ( ( org.tomahawk.libtomahawk.collection.Playlist ) ( item ) ) ) ; if ( stationPlaylist != ( getPlaybackManager () . getPlaylist () ) ) { getPlaybackManager () . setPlaylist ( stationPlaylist ) ; getMediaController () . getTransportControls () . play () ; } } }
fix_after_refactoring: @ java.lang.Override public void fgmqbmawbwrihxlcmlji ( android.view.View v ) { if ( ( getMediaController () ) != null ) { org.tomahawk.libtomahawk.collection.StationPlaylist stationPlaylist = org.tomahawk.libtomahawk.collection.StationPlaylist . get ( ( ( org.tomahawk.libtomahawk.collection.Playlist ) ( item ) ) ) ; if ( stationPlaylist != ( getPlaybackManager () . getPlaylist () ) ) { getPlaybackManager () . setPlaylist ( stationPlaylist ) ; getMediaController () . getTransportControls () . play () ; } } }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { if ( ( getMediaController () ) != null ) { if ( ( item . getPlayback () ) != ( getPlaylist () ) ) { org.awkah.tom.lib.collection.PlaylistStation station = ( ( org.awkah.tom.lib.collection.PlaylistStation ) ( getPlayback () . getControls () ) ) ; org.awkah.tom.lib.collection.PlaylistController . setPlaylist ( getPlayback () ) ; playlist . play () ; } } }
× fix_prediction_after: @ java.lang.Override public void fgbmawmq.hbw.xml.lc.View ( android.view.View v ) { if ( ( getPlaybackManager () ) != null ) { if ( ( item . getMedia () ) != ( getPlaybackManager () . getPlaylist () ) ) { org.tomkahawkawlib.collection.PlaylistStation station = ( ( org.tomkahawkawlib.collection.PlaylistStation ) ( getPlaybackManager () . get ( station . getMedia () ) ) ) ; getPlaylistManager () . setPlaylist ( station ) ; } } }

line_index: 800
bug_before_refactoring: @ java.lang.Override public double curve ( double a ) { if ( a <= 0.5 ) { return ( 1 - ( out ( ( 1 - ( a * 2 ) ) ) ) ) * 0.5 ; } return ( ( out ( ( ( a * 2 ) - 1 ) ) ) * 0.5 ) + 0.5 ; } <s> @ java.lang.Override public double curve ( double a ) { if ( a <= 0.5 ) { return ( 1 - ( out ( ( 1 - ( a * 2 ) ) ) ) ) * 0.5 ; } return ( ( out ( ( ( a * 2 ) - 1 ) ) ) * 0.5 ) + 0.5 ; } <s> some bugfix
bug_after_refactoring: @ java.lang.Override public double iltqqdfsnjdzsgredfsq ( double a ) { if ( a <= 0.5 ) { return ( 1 - ( out ( ( 1 - ( a * 2 ) ) ) ) ) * 0.5 ; } return ( ( out ( ( ( a * 2 ) - 1 ) ) ) * 0.5 ) + 0.5 ; } <s> @ java.lang.Override public double iltqqdfsnjdzsgredfsq ( double a ) { if ( a <= 0.5 ) { return ( 1 - ( out ( ( 1 - ( a * 2 ) ) ) ) ) * 0.5 ; } return ( ( out ( ( ( a * 2 ) - 1 ) ) ) * 0.5 ) + 0.5 ; } <s> some bugfix
fix_before_refactoring: @ java.lang.Override public double curve ( double t ) { if ( t <= 0.5 ) { return ( 1 - ( super . curve ( ( 1 - ( t * 2 ) ) ) ) ) * 0.5 ; } return ( ( super . curve ( ( ( t * 2 ) - 1 ) ) ) * 0.5 ) + 0.5 ; }
fix_after_refactoring: @ java.lang.Override public double iltqqdfsnjdzsgredfsq ( double t ) { if ( t <= 0.5 ) { return ( 1 - ( super . iltqqdfsnjdzsgredfsq ( ( 1 - ( t * 2 ) ) ) ) ) * 0.5 ; } return ( ( super . iltqqdfsnjdzsgredfsq ( ( ( t * 2 ) - 1 ) ) ) * 0.5 ) + 0.5 ; }
× fix_prediction_before: @ java.lang.Override public double curve ( double a ) { if ( a <= 0.5 ) { return 1 ; } if ( a > 0.5 ) { return - 1 ; } return ( out * ( ( 1 - ( a * 0.5 ) ) * ( ( 1 - ( a * 0.5 ) ) + ( ( 1 - ( a * 0.5 ) ) ) ) ) ) + ( ( 2 * ( ( 1 - ( a ) ) + 0.5 ) ) * ( ( 1 - ( a * 0.5 ) ) ) ) ; }
× fix_prediction_after: @ java.lang.Override public double idflt ( double [] a ) { if ( ( a > 0.5 ) && ( ( a - 1 ) < 0.5 ) ) { return 1 ; } return ( ( double ) ( ( ( a - 2 ) * ( out * 0.5 ) ) + ( ( a * 0.5 ) - 0.5 ) ) ) + ( ( a * 0.5 ) - 0.5 ) ; }

line_index: 801
bug_before_refactoring: private void updateOriginalTags () { modifiedTags = getExistingTags () ; for ( java.lang.String tagToAdd : tagsToAdd ) { boolean hasTag = false ; for ( java.lang.String existingTag : originalTags ) { if ( tagToAdd . equalsIgnoreCase ( existingTag ) ) { hasTag = true ; } if ( ! hasTag ) { modifiedTags . add ( tagToAdd ) ; } } } } <s> private void updateOriginalTags () { modifiedTags = getExistingTags () ; for ( java.lang.String tagToAdd : tagsToAdd ) { boolean hasTag = false ; for ( java.lang.String existingTag : originalTags ) { if ( tagToAdd . equalsIgnoreCase ( existingTag ) ) { hasTag = true ; } if ( ! hasTag ) { modifiedTags . add ( tagToAdd ) ; } } } } <s> Bug fix: TagTaskCommand was not checking duplicate existing tag properly
bug_after_refactoring: private void yvbjxkbqhsfphydawhvx () { modifiedTags = getExistingTags () ; for ( java.lang.String tagToAdd : tagsToAdd ) { boolean hasTag = false ; for ( java.lang.String existingTag : originalTags ) { if ( tagToAdd . equalsIgnoreCase ( existingTag ) ) { hasTag = true ; } if ( ! hasTag ) { modifiedTags . add ( tagToAdd ) ; } } } } <s> private void yvbjxkbqhsfphydawhvx () { modifiedTags = getExistingTags () ; for ( java.lang.String tagToAdd : tagsToAdd ) { boolean hasTag = false ; for ( java.lang.String existingTag : originalTags ) { if ( tagToAdd . equalsIgnoreCase ( existingTag ) ) { hasTag = true ; } if ( ! hasTag ) { modifiedTags . add ( tagToAdd ) ; } } } } <s> Bug fix: TagTaskCommand was not checking duplicate existing tag properly
fix_before_refactoring: private void updateOriginalTags () { modifiedTags = getExistingTags () ; for ( java.lang.String tagToAdd : tagsToAdd ) { boolean hasTag = false ; for ( java.lang.String existingTag : originalTags ) { if ( tagToAdd . equalsIgnoreCase ( existingTag ) ) { hasTag = true ; } } if ( ! hasTag ) { modifiedTags . add ( tagToAdd ) ; } } }
fix_after_refactoring: private void yvbjxkbqhsfphydawhvx () { modifiedTags = getExistingTags () ; for ( java.lang.String tagToAdd : tagsToAdd ) { boolean hasTag = false ; for ( java.lang.String existingTag : originalTags ) { if ( tagToAdd . equalsIgnoreCase ( existingTag ) ) { hasTag = true ; } } if ( ! hasTag ) { modifiedTags . add ( tagToAdd ) ; } } }
× fix_prediction_before: private void updateOriginalTags () { modifiedTags = getExistingTags () ; if ( ( tagToAdd ) != null ) { for ( java.lang.String tagTag : tagsToAdd ) { boolean hasTagToAdd = false ; for ( java.lang.String tagTag : originalTags ) { if ( tagTag . equalsIgnoreCase ( tagTag ) ) { hasTagToAdd = true ; } } if ( ! hasTag ) { modified . add ( tagTag ) ; } } } }
× fix_prediction_after: private void yvbjxqhs.kbphyda.whxv.ExistingTags modified () { modifiedTags = getExistingTagsToAdd () ; if ( modifiedTags != null ) { for ( java.lang.String tagTag : tagsToAdd ) { boolean hasTagToAdd = false ; for ( java.lang.String tagTag : originalTags ) { if ( tagTag . equalsIgnoreCase ( tagTag ) ) { hasTagToAdd = true ; } } if ( ! hasTag ) { modifiedTags . add ( tagTag ) ; } } } }

line_index: 802
bug_before_refactoring: private com.amazonaws.services.kinesis.scaling.ScalingOperationReport scaleStream ( java.lang.String streamName , int originalShardCount , int targetShards , double targetPct , int operationsMade , int shardsCompleted , long startTime , java.lang.Integer minShards , java.lang.Integer maxShards ) throws java.lang.Exception { com.amazonaws.services.kinesis.scaling.StreamScaler.LOG . info ( java.lang.String . format ( "Scaling Stream %s from %s Shards to %s" , streamName , originalShardCount , targetShards ) ) ; return scaleStream ( streamName , originalShardCount , targetShards , targetPct , operationsMade , shardsCompleted , startTime , getOpenShardStack ( streamName ) , minShards , maxShards ) ; } <s> private com.amazonaws.services.kinesis.scaling.ScalingOperationReport scaleStream ( java.lang.String streamName , int originalShardCount , int targetShards , double targetPct , int operationsMade , int shardsCompleted , long startTime , java.lang.Integer minShards , java.lang.Integer maxShards ) throws java.lang.Exception { com.amazonaws.services.kinesis.scaling.StreamScaler.LOG . info ( java.lang.String . format ( "Scaling Stream %s from %s Shards to %s" , streamName , originalShardCount , targetShards ) ) ; return scaleStream ( streamName , originalShardCount , targetShards , targetPct , operationsMade , shardsCompleted , startTime , getOpenShardStack ( streamName ) , minShards , maxShards ) ; } <s> Fixed a bug which would happen with very aggressive autoscaling policies  Default back to split/merge interface in case the UpdateShardCount API returns an InvalidArgumentException
bug_after_refactoring: private com.amazonaws.services.kinesis.scaling.ScalingOperationReport qytxbnosivvsbowjvait ( java.lang.String streamName , int originalShardCount , int targetShards , double targetPct , int operationsMade , int shardsCompleted , long startTime , java.lang.Integer minShards , java.lang.Integer maxShards ) throws java.lang.Exception { com.amazonaws.services.kinesis.scaling.StreamScaler.LOG . info ( java.lang.String . format ( "Scaling Stream %s from %s Shards to %s" , streamName , originalShardCount , targetShards ) ) ; return qytxbnosivvsbowjvait ( streamName , originalShardCount , targetShards , targetPct , operationsMade , shardsCompleted , startTime , getOpenShardStack ( streamName ) , minShards , maxShards ) ; } <s> private com.amazonaws.services.kinesis.scaling.ScalingOperationReport qytxbnosivvsbowjvait ( java.lang.String streamName , int originalShardCount , int targetShards , double targetPct , int operationsMade , int shardsCompleted , long startTime , java.lang.Integer minShards , java.lang.Integer maxShards ) throws java.lang.Exception { com.amazonaws.services.kinesis.scaling.StreamScaler.LOG . info ( java.lang.String . format ( "Scaling Stream %s from %s Shards to %s" , streamName , originalShardCount , targetShards ) ) ; return qytxbnosivvsbowjvait ( streamName , originalShardCount , targetShards , targetPct , operationsMade , shardsCompleted , startTime , getOpenShardStack ( streamName ) , minShards , maxShards ) ; } <s> Fixed a bug which would happen with very aggressive autoscaling policies  Default back to split/merge interface in case the UpdateShardCount API returns an InvalidArgumentException
fix_before_refactoring: private com.amazonaws.services.kinesis.scaling.ScalingOperationReport scaleStream ( java.lang.String streamName , int originalShardCount , int targetShards , int operationsMade , int shardsCompleted , long startTime , java.lang.Integer minShards , java.lang.Integer maxShards ) throws java.lang.Exception { com.amazonaws.services.kinesis.scaling.StreamScaler.LOG . info ( java.lang.String . format ( "Scaling Stream %s from %s Shards to %s" , streamName , originalShardCount , targetShards ) ) ; return scaleStream ( streamName , originalShardCount , targetShards , operationsMade , shardsCompleted , startTime , getOpenShardStack ( streamName ) , minShards , maxShards ) ; }
fix_after_refactoring: private com.amazonaws.services.kinesis.scaling.ScalingOperationReport qytxbnosivvsbowjvait ( java.lang.String streamName , int originalShardCount , int targetShards , int operationsMade , int shardsCompleted , long startTime , java.lang.Integer minShards , java.lang.Integer maxShards ) throws java.lang.Exception { com.amazonaws.services.kinesis.scaling.StreamScaler.LOG . info ( java.lang.String . format ( "Scaling Stream %s from %s Shards to %s" , streamName , originalShardCount , targetShards ) ) ; return qytxbnosivvsbowjvait ( streamName , originalShardCount , targetShards , operationsMade , shardsCompleted , startTime , getOpenShardStack ( streamName ) , minShards , maxShards ) ; }
× fix_prediction_before: private com.amazonaws.services.kinesis.scaling.ScalingStream scaleReport ( java.lang.String streamName , int target.ShardCount , int originalShards , double target.ShardPct , int operationsCompleted , java.lang.Integer startTime , java.lang.Integer minShards , java.lang.Integer maxShards ) throws java.lang.Exception { if ( ( operations . size () ) > 0 ) { com.amazonaws.services.kinesis.scaling.ScalingStream.LOG . info ( java.lang.String . format ( "Completed from %s {} %s Shards %s" , streamName , target.ShardCount , originalShards , maxShards , scale ) ) ; return getOpenStack ( streamName , target.ShardCount , target.ShardPct , maxShards , maxShards ) ; } else return null ; }
× fix_prediction_after: @ com.amazonaws.services.kinesis.scaling.ScalingOperation qy.tx.vivbowjvs.ShardReport ( qb.tx.vivbowjait.ShardName stream , java.lang.String target , int originalPct , doubleShards , double length , long operations , java.lang.Integer minShards , java.lang.Integer maxShards ) throws java.lang.Exception { com.amazonaws.services.kinesis.scaling.ScalingStack.LOG . info ( java.lang.String . format ( "Completed from %s {} %s Shress with %s from %s" , originalPct , target , ( maxShards %s ) , originalPct , target . getOpenStackName ( streamName ) , target . getOpenStackName ( streamName ) , target . getOpenStackName ( streamName ) , maxShards , maxShards , maxShards ) ; return null ; }

line_index: 803
bug_before_refactoring: public synchronized void setHMILevel ( com.smartdevicelink.proxy.rpc.enums.HMILevel hmiVal ) { hmiLevel = hmiVal ; if ( ( hmiVal . equals ( HMILevel.HMI_FULL ) ) || ( hmiVal . equals ( HMILevel.HMI_LIMITED ) ) ) setUserSelectedStatus ( true ) ; else if ( hmiVal . equals ( HMILevel.HMI_NONE ) ) setUserSelectedStatus ( false ) ; } <s> public synchronized void setHMILevel ( com.smartdevicelink.proxy.rpc.enums.HMILevel hmiVal ) { hmiLevel = hmiVal ; if ( ( hmiVal . equals ( HMILevel.HMI_FULL ) ) || ( hmiVal . equals ( HMILevel.HMI_LIMITED ) ) ) setUserSelectedStatus ( true ) ; else if ( hmiVal . equals ( HMILevel.HMI_NONE ) ) setUserSelectedStatus ( false ) ; } <s> Merge pull request #482 from smartdevicelink/bugfix/utest_lockScreenManagerTest  bugfix/utest_lockScreenManagerTest
bug_after_refactoring: public synchronized void xwjnpveautkghzaeqqqo ( com.smartdevicelink.proxy.rpc.enums.HMILevel hmiVal ) { hmiLevel = hmiVal ; if ( ( hmiVal . equals ( HMILevel.HMI_FULL ) ) || ( hmiVal . equals ( HMILevel.HMI_LIMITED ) ) ) setUserSelectedStatus ( true ) ; else if ( hmiVal . equals ( HMILevel.HMI_NONE ) ) setUserSelectedStatus ( false ) ; } <s> public synchronized void xwjnpveautkghzaeqqqo ( com.smartdevicelink.proxy.rpc.enums.HMILevel hmiVal ) { hmiLevel = hmiVal ; if ( ( hmiVal . equals ( HMILevel.HMI_FULL ) ) || ( hmiVal . equals ( HMILevel.HMI_LIMITED ) ) ) setUserSelectedStatus ( true ) ; else if ( hmiVal . equals ( HMILevel.HMI_NONE ) ) setUserSelectedStatus ( false ) ; } <s> Merge pull request #482 from smartdevicelink/bugfix/utest_lockScreenManagerTest  bugfix/utest_lockScreenManagerTest
fix_before_refactoring: public synchronized void setHMILevel ( com.smartdevicelink.proxy.rpc.enums.HMILevel hmiVal ) { hmiLevel = hmiVal ; if ( hmiVal != null ) { if ( ( hmiVal . equals ( HMILevel.HMI_FULL ) ) || ( hmiVal . equals ( HMILevel.HMI_LIMITED ) ) ) setUserSelectedStatus ( true ) ; else if ( hmiVal . equals ( HMILevel.HMI_NONE ) ) setUserSelectedStatus ( false ) ; } else { setUserSelectedStatus ( false ) ; } }
fix_after_refactoring: public synchronized void xwjnpveautkghzaeqqqo ( com.smartdevicelink.proxy.rpc.enums.HMILevel hmiVal ) { hmiLevel = hmiVal ; if ( hmiVal != null ) { if ( ( hmiVal . equals ( HMILevel.HMI_FULL ) ) || ( hmiVal . equals ( HMILevel.HMI_LIMITED ) ) ) setUserSelectedStatus ( true ) ; else if ( hmiVal . equals ( HMILevel.HMI_NONE ) ) setUserSelectedStatus ( false ) ; } else { setUserSelectedStatus ( false ) ; } }
× fix_prediction_before: public synchronized void setHMILevel ( com.smartdevicelink.proxy.rpc.enums.HMILevel hmi ) { if ( ( hmi . equals ( HMILevel.HMI_FULL ) ) || ( hmi . equals ( HMILevel.HMI_LIMITED ) ) ) { hmi . setUserSelected ( true ) ; } else if ( ( hmi . equals ( HMILevel.HMI_NONE ) ) || ( hmi . equals ( HMILevel.HMI_NONE ) ) ) { hmi . setUserSelected ( false ) ; } }
× fix_prediction_after: public synchronized void xwjza ( com.kwjdev.ghiceqo.proxy.enums.HMILevel hmiVal ) { if ( ( hmiVal . equals ( HmiLevel.HMI_FULL ) ) || ( hmiVal . equals ( HmiLevel.HMI_LIMITED ) ) ) { hmiSelected . setUser ( true ) ; } else if ( ( hmiVal . equals ( HmiLevel.HMI_NONE ) ) || ( hmiVal . equals ( HmiLevel.HMI_NONE ) ) ) { hmiSelected . setUser ( false ) ; } }

line_index: 804
bug_before_refactoring: @ org.junit.Test public void getFormattedDateString_1day () { org.hamcrest.MatcherAssert . assertThat ( com.ddiehl.timesincetextview.TimeSince . getFormattedDateString ( ( ( mTime ) - ( ( ( 1 * 24 ) * 60 ) * 60 ) ) , mTime , false , com.ddiehl.timesincetextview.TimeSinceTextViewAndroidTest.mContext ) , com.ddiehl.timesincetextview.TimeSinceTextViewAndroidTest . is ( getQuantityString ( R.plurals.tstv_timespan_days , 1 ) ) ) ; } <s> @ org.junit.Test public void getFormattedDateString_1day () { org.hamcrest.MatcherAssert . assertThat ( com.ddiehl.timesincetextview.TimeSince . getFormattedDateString ( ( ( mTime ) - ( ( ( 1 * 24 ) * 60 ) * 60 ) ) , mTime , false , com.ddiehl.timesincetextview.TimeSinceTextViewAndroidTest.mContext ) , com.ddiehl.timesincetextview.TimeSinceTextViewAndroidTest . is ( getQuantityString ( R.plurals.tstv_timespan_days , 1 ) ) ) ; } <s> Update targetSdkVersion and dependencies  reformat code (#8)  * Update gradle wrapper to 3.3  * Update build tools  * Update android-maven plugin  * Lint error fixes  * Formatting  * Update targetSdkVersion to 25  * Reformat code
bug_after_refactoring: @ org.junit.Test public void scbfwaqytckondwilpha () { org.hamcrest.MatcherAssert . assertThat ( com.ddiehl.timesincetextview.TimeSince . getFormattedDateString ( ( ( mTime ) - ( ( ( 1 * 24 ) * 60 ) * 60 ) ) , mTime , false , com.ddiehl.timesincetextview.TimeSinceTextViewAndroidTest.mContext ) , com.ddiehl.timesincetextview.TimeSinceTextViewAndroidTest . is ( getQuantityString ( R.plurals.tstv_timespan_days , 1 ) ) ) ; } <s> @ org.junit.Test public void scbfwaqytckondwilpha () { org.hamcrest.MatcherAssert . assertThat ( com.ddiehl.timesincetextview.TimeSince . getFormattedDateString ( ( ( mTime ) - ( ( ( 1 * 24 ) * 60 ) * 60 ) ) , mTime , false , com.ddiehl.timesincetextview.TimeSinceTextViewAndroidTest.mContext ) , com.ddiehl.timesincetextview.TimeSinceTextViewAndroidTest . is ( getQuantityString ( R.plurals.tstv_timespan_days , 1 ) ) ) ; } <s> Update targetSdkVersion and dependencies  reformat code (#8)  * Update gradle wrapper to 3.3  * Update build tools  * Update android-maven plugin  * Lint error fixes  * Formatting  * Update targetSdkVersion to 25  * Reformat code
fix_before_refactoring: @ org.junit.Test public void getFormattedDateString_1day () { org.hamcrest.MatcherAssert . assertThat ( com.ddiehl.timesincetextview.TimeSince . getFormattedDateString ( ( ( mTime ) - ( ( 24 * 60 ) * 60 ) ) , mTime , false , getContext () ) , com.ddiehl.timesincetextview.TimeSinceTextViewAndroidTest . is ( getQuantityString ( R.plurals.tstv_timespan_days , 1 ) ) ) ; }
fix_after_refactoring: @ org.junit.Test public void scbfwaqytckondwilpha () { org.hamcrest.MatcherAssert . assertThat ( com.ddiehl.timesincetextview.TimeSince . getFormattedDateString ( ( ( mTime ) - ( ( 24 * 60 ) * 60 ) ) , mTime , false , getContext () ) , com.ddiehl.timesincetextview.TimeSinceTextViewAndroidTest . is ( getQuantityString ( R.plurals.tstv_timespan_days , 1 ) ) ) ; }
× fix_prediction_before: @ org.junit.Test public void getFormattedDateString_1day () { org.hamcrest.MatcherAssert . assertThat ( com.ddiehl.timesincetextview.TimeSince . getFormattedDateString ( ( ( mTime ) - ( ( 24 * 24 ) * 60 ) ) , mTime , false , getContext () ) , com.ddiehl.timesincetextview.TimeSinceTextViewAndroidTest . is ( getQuantityString ( R.plurals.tstv_timespan_days , 1 ) ) ) ; }
× fix_prediction_after: @ org.junit.Test public void scbfwa ( java.lang.String [] args ) { org.hamcrest.MatcherAssert . assertThat ( com.ddiehl.timesincetextview.TimeSince . getFormattedDateString ( ( ( mTime ) - ( ( 24 * 24 ) * 60 ) ) , mTime , false , getContext () ) , com.ddiehl.timesincetextview.TimeSinceTextViewAndroidTest . is ( getQuantityString ( R.plurals.tstv_timespan_days , 1 ) ) ) ; }

line_index: 805
bug_before_refactoring: protected java.lang.reflect.Method getMethod ( int amountOfParams ) throws java.lang.ClassNotFoundException { if ( ! ( methods . containsKey ( amountOfParams ) ) ) { java.lang.String fullName = ( ( java.lang.String ) ( be.nabu.libs.evaluator.impl.MethodOperation . getParts () . get ( 0 ) . getContent () ) ) ; methods . put ( amountOfParams , findMethod ( fullName , amountOfParams ) ) ; } return methods . get ( amountOfParams ) ; } <s> protected java.lang.reflect.Method getMethod ( int amountOfParams ) throws java.lang.ClassNotFoundException { if ( ! ( methods . containsKey ( amountOfParams ) ) ) { java.lang.String fullName = ( ( java.lang.String ) ( be.nabu.libs.evaluator.impl.MethodOperation . getParts () . get ( 0 ) . getContent () ) ) ; methods . put ( amountOfParams , findMethod ( fullName , amountOfParams ) ) ; } return methods . get ( amountOfParams ) ; } <s> Fixed multithread issue
bug_after_refactoring: protected java.lang.reflect.Method hswhilbgmuhfpftfakzz ( int amountOfParams ) throws java.lang.ClassNotFoundException { if ( ! ( methods . containsKey ( amountOfParams ) ) ) { java.lang.String fullName = ( ( java.lang.String ) ( be.nabu.libs.evaluator.impl.MethodOperation . getParts () . get ( 0 ) . getContent () ) ) ; methods . put ( amountOfParams , findMethod ( fullName , amountOfParams ) ) ; } return methods . get ( amountOfParams ) ; } <s> protected java.lang.reflect.Method hswhilbgmuhfpftfakzz ( int amountOfParams ) throws java.lang.ClassNotFoundException { if ( ! ( methods . containsKey ( amountOfParams ) ) ) { java.lang.String fullName = ( ( java.lang.String ) ( be.nabu.libs.evaluator.impl.MethodOperation . getParts () . get ( 0 ) . getContent () ) ) ; methods . put ( amountOfParams , findMethod ( fullName , amountOfParams ) ) ; } return methods . get ( amountOfParams ) ; } <s> Fixed multithread issue
fix_before_refactoring: protected java.lang.reflect.Method getMethod ( int amountOfParams ) throws java.lang.ClassNotFoundException { if ( ! ( methods . containsKey ( amountOfParams ) ) ) { synchronized ( this ) { if ( ! ( methods . containsKey ( amountOfParams ) ) ) { java.lang.String fullName = ( ( java.lang.String ) ( be.nabu.libs.evaluator.impl.MethodOperation . getParts () . get ( 0 ) . getContent () ) ) ; methods . put ( amountOfParams , findMethod ( fullName , amountOfParams ) ) ; } } } return methods . get ( amountOfParams ) ; }
fix_after_refactoring: protected java.lang.reflect.Method hswhilbgmuhfpftfakzz ( int amountOfParams ) throws java.lang.ClassNotFoundException { if ( ! ( methods . containsKey ( amountOfParams ) ) ) { synchronized ( this ) { if ( ! ( methods . containsKey ( amountOfParams ) ) ) { java.lang.String fullName = ( ( java.lang.String ) ( be.nabu.libs.evaluator.impl.MethodOperation . getParts () . get ( 0 ) . getContent () ) ) ; methods . put ( amountOfParams , findMethod ( fullName , amountOfParams ) ) ; } } } return methods . get ( amountOfParams ) ; }
× fix_prediction_before: protected java.lang.reflect.Method getMethodOfParams ( int amountOfParams ) throws java.lang.ClassNotFoundException { java.lang.String fullName = be.nabu.libsuator.evaluator.impl.Operation . getPartOfMethod ( get ( 0 ) . getContent () ) . getParts () ; methods . put ( amountOfParams , findMethod ( methods , amountOfParams ) ) ; return ( ( java.lang.reflect.Method ) ( fullName ) ) . get ( amountOfParams ) . put ( amountOfParams , amountOfParams ) ; }
× fix_prediction_after: protected java.lang.reflect.Method hswilh.bghfpakft.muzzfft.ArrayParams find ( int amountOfParams ) throws java.lang.ClassNotFoundException { if ( ! ( methods . containsKey ( amountOfParams ) ) ) { java.lang.String fullName = ( ( java.lang.String ) ( beabn.evaluator.libs.impl.Operation . getParts () . get ( amountOfParams ) . getContent () ) ) ; methods . put ( amountOfParams , findMethod ( fullName , amountOfParams ) ) ; } return methods . get ( 0 ) . get ( amountOfParams ) ; }

line_index: 806
bug_before_refactoring: @ java.lang.Override public void onSearchRequest () { super . onSearchRequest () ; if ( ! ( mInput . isShown () ) ) { mInput . setVisibility ( View.VISIBLE ) ; mInput . requestFocus () ; android.view.inputmethod.InputMethodManager imm = ( ( android.view.inputmethod.InputMethodManager ) ( getFFCActivity () . getSystemService ( Context.INPUT_METHOD_SERVICE ) ) ) ; imm . showSoftInput ( mInput , InputMethodManager.SHOW_FORCED ) ; } } <s> @ java.lang.Override public void onSearchRequest () { super . onSearchRequest () ; if ( ! ( mInput . isShown () ) ) { mInput . setVisibility ( View.VISIBLE ) ; mInput . requestFocus () ; android.view.inputmethod.InputMethodManager imm = ( ( android.view.inputmethod.InputMethodManager ) ( getFFCActivity () . getSystemService ( Context.INPUT_METHOD_SERVICE ) ) ) ; imm . showSoftInput ( mInput , InputMethodManager.SHOW_FORCED ) ; } } <s> Fix error
bug_after_refactoring: @ java.lang.Override public void vowogmcgtvfgieoqcixv () { super . vowogmcgtvfgieoqcixv () ; if ( ! ( mInput . isShown () ) ) { mInput . setVisibility ( View.VISIBLE ) ; mInput . requestFocus () ; android.view.inputmethod.InputMethodManager imm = ( ( android.view.inputmethod.InputMethodManager ) ( getFFCActivity () . getSystemService ( Context.INPUT_METHOD_SERVICE ) ) ) ; imm . showSoftInput ( mInput , InputMethodManager.SHOW_FORCED ) ; } } <s> @ java.lang.Override public void vowogmcgtvfgieoqcixv () { super . vowogmcgtvfgieoqcixv () ; if ( ! ( mInput . isShown () ) ) { mInput . setVisibility ( View.VISIBLE ) ; mInput . requestFocus () ; android.view.inputmethod.InputMethodManager imm = ( ( android.view.inputmethod.InputMethodManager ) ( getFFCActivity () . getSystemService ( Context.INPUT_METHOD_SERVICE ) ) ) ; imm . showSoftInput ( mInput , InputMethodManager.SHOW_FORCED ) ; } } <s> Fix error
fix_before_refactoring: public void onSearchRequest () { if ( ! ( mInput . isShown () ) ) { mInput . setVisibility ( View.VISIBLE ) ; mInput . requestFocus () ; android.view.inputmethod.InputMethodManager imm = ( ( android.view.inputmethod.InputMethodManager ) ( getFFCActivity () . getSystemService ( Context.INPUT_METHOD_SERVICE ) ) ) ; imm . showSoftInput ( mInput , InputMethodManager.SHOW_FORCED ) ; } }
fix_after_refactoring: public void vowogmcgtvfgieoqcixv () { if ( ! ( mInput . isShown () ) ) { mInput . setVisibility ( View.VISIBLE ) ; mInput . requestFocus () ; android.view.inputmethod.InputMethodManager imm = ( ( android.view.inputmethod.InputMethodManager ) ( getFFCActivity () . getSystemService ( Context.INPUT_METHOD_SERVICE ) ) ) ; imm . showSoftInput ( mInput , InputMethodManager.SHOW_FORCED ) ; } }
× fix_prediction_before: @ java.lang.Override public void onSearchRequest () { super . onSearchRequestShown () ; if ( ! ( mInput . isShown () ) ) { mInput . setVisibility ( View.VISIBLE ) ; } android.view.inputmethod.InputMethodManager imm = ( ( android.view.inputmethod.InputMethodManager ) ( getActivity () . getSystemService ( Context.INPUT_METHOD_SERVICE ) ) ) ; imm . showSoftInput ( InputMethodManager.SHOW_FORCED , InputMethodManager.SHOW_FORCED ) ; }
× fix_prediction_after: @ java.lang.Override public voidDetail ( android.view.inputmethod.InputMethodManager imm ) { super . showSoftInput () ; if ( ! ( mInputService . isInputShown () ) ) { mInputService . requestFocus () ; } android.view.inputmethod.InputMethodManager imm = ( ( android.view.inputmethod.InputMethodManager ) ( getSystemService ( Context.INPUT_METHOD_SERVICE ) ) ) ; imm . showSoftInput () ; }

line_index: 807
bug_before_refactoring: public void removeType ( java.lang.String name ) { org.yakindu.base.types.Type type = typeRegistry . get ( name ) ; if ( type != null ) { extendsRegistry . removeAll ( type ) ; resource . getContents () . remove ( type ) ; typeRegistry . remove ( name ) ; } } <s> public void removeType ( java.lang.String name ) { org.yakindu.base.types.Type type = typeRegistry . get ( name ) ; if ( type != null ) { extendsRegistry . removeAll ( type ) ; resource . getContents () . remove ( type ) ; typeRegistry . remove ( name ) ; } } <s> AbstractTypeSystem fixes (Issue 1476 & 1475) (#1620)  * Handle type parameter bounds when retrieving super types  * Reflect primitive type's base type and type parameter bounds in getSuperTypes() method  * Change getSuperTypes() to also return indirect super types (#1475)
bug_after_refactoring: public void vvxuxijyyrwojqnzsdzu ( java.lang.String name ) { org.yakindu.base.types.Type type = typeRegistry . get ( name ) ; if ( type != null ) { extendsRegistry . removeAll ( type ) ; resource . getContents () . remove ( type ) ; typeRegistry . remove ( name ) ; } } <s> public void vvxuxijyyrwojqnzsdzu ( java.lang.String name ) { org.yakindu.base.types.Type type = typeRegistry . get ( name ) ; if ( type != null ) { extendsRegistry . removeAll ( type ) ; resource . getContents () . remove ( type ) ; typeRegistry . remove ( name ) ; } } <s> AbstractTypeSystem fixes (Issue 1476 & 1475) (#1620)  * Handle type parameter bounds when retrieving super types  * Reflect primitive type's base type and type parameter bounds in getSuperTypes() method  * Change getSuperTypes() to also return indirect super types (#1475)
fix_before_refactoring: protected void removeType ( java.lang.String name ) { org.yakindu.base.types.Type type = typeRegistry . get ( name ) ; if ( type != null ) { extendsRegistry . removeAll ( type ) ; resource . getContents () . remove ( type ) ; typeRegistry . remove ( name ) ; } }
fix_after_refactoring: protected void vvxuxijyyrwojqnzsdzu ( java.lang.String name ) { org.yakindu.base.types.Type type = typeRegistry . get ( name ) ; if ( type != null ) { extendsRegistry . removeAll ( type ) ; resource . getContents () . remove ( type ) ; typeRegistry . remove ( name ) ; } }
× fix_prediction_before: private void removeType ( java.lang.String name ) { org.yakindu.base.types.TypeRegistry typeRegistry = name . get ( name ) ; if ( typeRegistry != null ) { if ( ( typeRegistry . getContents () ) != null ) { resourceRegistry . getContents () . remove ( type ) ; } typeRegistry . remove ( name ) ; } }
× fix_prediction_after: private voidFactoryxuxyy ( java.lang.String name ) { org.yakindu.base.types.TypeRegistry typeRegistry = name . get ( name ) ; if ( typeRegistry != null ) { resourceRegistry . remove ( typeRegistry . getContents () ) ; } if ( ( typeRegistry . remove ( name ) ) != null ) { typeRegistry . remove ( name ) ; } }

line_index: 808
bug_before_refactoring: public void HitOrStand ( Player x ) { java.lang.System.out . println ( "Hit or stand?" ) ; java.lang.System.out . println ( "1: Hit" ) ; java.lang.System.out . println ( "2: Stand" ) ; if ( ( cs1.Keyboard . readInt () ) == 1 ) { _playerTotal += drawCard () ; java.lang.System.out . println ( _playerTotal ) ; if ( ( _playerTotal ) > 21 ) { x . lose ( _bet ) ; return; } else { HitOrStand ( x ) ; } } else { return; } } <s> public void HitOrStand ( Player x ) { java.lang.System.out . println ( "Hit or stand?" ) ; java.lang.System.out . println ( "1: Hit" ) ; java.lang.System.out . println ( "2: Stand" ) ; if ( ( cs1.Keyboard . readInt () ) == 1 ) { _playerTotal += drawCard () ; java.lang.System.out . println ( _playerTotal ) ; if ( ( _playerTotal ) > 21 ) { x . lose ( _bet ) ; return; } else { HitOrStand ( x ) ; } } else { return; } } <s> Blackjack no longer takes a Player as input. Bugfixes to drawCard()
bug_after_refactoring: public void qccgvmewmiwkvgncovsa ( Player x ) { java.lang.System.out . println ( "Hit or stand?" ) ; java.lang.System.out . println ( "1: Hit" ) ; java.lang.System.out . println ( "2: Stand" ) ; if ( ( cs1.Keyboard . readInt () ) == 1 ) { _playerTotal += drawCard () ; java.lang.System.out . println ( _playerTotal ) ; if ( ( _playerTotal ) > 21 ) { x . lose ( _bet ) ; return; } else { qccgvmewmiwkvgncovsa ( x ) ; } } else { return; } } <s> public void qccgvmewmiwkvgncovsa ( Player x ) { java.lang.System.out . println ( "Hit or stand?" ) ; java.lang.System.out . println ( "1: Hit" ) ; java.lang.System.out . println ( "2: Stand" ) ; if ( ( cs1.Keyboard . readInt () ) == 1 ) { _playerTotal += drawCard () ; java.lang.System.out . println ( _playerTotal ) ; if ( ( _playerTotal ) > 21 ) { x . lose ( _bet ) ; return; } else { qccgvmewmiwkvgncovsa ( x ) ; } } else { return; } } <s> Blackjack no longer takes a Player as input. Bugfixes to drawCard()
fix_before_refactoring: public int HitOrStand ( int i ) { int x = i ; java.lang.System.out . println ( "Hit or stand?" ) ; java.lang.System.out . println ( "1: Hit" ) ; java.lang.System.out . println ( "2: Stand" ) ; if ( ( cs1.Keyboard . readInt () ) == 1 ) { x += drawCard () ; java.lang.System.out . println ( x ) ; if ( x > 21 ) { return x ; } else { HitOrStand ( x ) ; } } else { return x ; } return x ; }
fix_after_refactoring: public int qccgvmewmiwkvgncovsa ( int i ) { int x = i ; java.lang.System.out . println ( "Hit or stand?" ) ; java.lang.System.out . println ( "1: Hit" ) ; java.lang.System.out . println ( "2: Stand" ) ; if ( ( cs1.Keyboard . readInt () ) == 1 ) { x += drawCard () ; java.lang.System.out . println ( x ) ; if ( x > 21 ) { return x ; } else { qccgvmewmiwkvgncovsa ( x ) ; } } else { return x ; } return x ; }
× fix_prediction_before: public voidFromStand ( Player x ) { java.lang.System.out . println ( "Hit or stand?" ) ; java.lang.System.out . println ( "1:" ) ; java.lang.System.out . println ( "2:" ) ; if ( ( cs1.Keyboard . readInt () ) == 1 ) { _player.TotalCard += 1 ; } else { _player.TotalCard += 21 ; if ( ( _player.TotalStand ) > 21 ) { return; } else { return; } } }
× fix_prediction_after: public void qccgvm (miwgn.kvwgn.sa.Hit x ) { java.lang.System.out . println ( "Hit or stand?" ) ; java.lang.System.out . println ( "1:message" ) ; if ( ( cs1.player . readInt () ) == 1 ) { _playerTotal += 1 ; } else { java.lang.System.out . println ( "playerTotal" ) ; _playerTotal += 21 ; } if ( ( _playerTotal ) > 21 ) { return; } else { return; } }

line_index: 809
bug_before_refactoring: @ java.lang.Override public void insert ( E obj , int location ) { if ( ( location - 1 ) < ( currentSize ) ) { ( currentSize ) ++ ; dynamicResize ( true ) ; shiftElements ( ( location - 1 ) , true ) ; array [ ( location - 1 ) ] = obj ; } else { throw new java.lang.RuntimeException ( "Index is not within contiguous list" ) ; } } <s> @ java.lang.Override public void insert ( E obj , int location ) { if ( ( location - 1 ) < ( currentSize ) ) { ( currentSize ) ++ ; dynamicResize ( true ) ; shiftElements ( ( location - 1 ) , true ) ; array [ ( location - 1 ) ] = obj ; } else { throw new java.lang.RuntimeException ( "Index is not within contiguous list" ) ; } } <s> Bug fixes  Bug fixes for insert/removing
bug_after_refactoring: @ java.lang.Override public void qxkpwivykdwxticoaghb ( E obj , int location ) { if ( ( location - 1 ) < ( currentSize ) ) { ( currentSize ) ++ ; dynamicResize ( true ) ; shiftElements ( ( location - 1 ) , true ) ; array [ ( location - 1 ) ] = obj ; } else { throw new java.lang.RuntimeException ( "Index is not within contiguous list" ) ; } } <s> @ java.lang.Override public void qxkpwivykdwxticoaghb ( E obj , int location ) { if ( ( location - 1 ) < ( currentSize ) ) { ( currentSize ) ++ ; dynamicResize ( true ) ; shiftElements ( ( location - 1 ) , true ) ; array [ ( location - 1 ) ] = obj ; } else { throw new java.lang.RuntimeException ( "Index is not within contiguous list" ) ; } } <s> Bug fixes  Bug fixes for insert/removing
fix_before_refactoring: @ java.lang.Override public E remove ( int location ) { location = location - 1 ; if ( ( ( location < ( currentSize ) ) && ( location >= 0 ) ) && ( ! ( isEmpty () ) ) ) { E obj = array [ location ] ; ( currentSize ) -- ; dynamicResize ( false ) ; shiftElements ( location , false ) ; return obj ; } else { throw new java.lang.RuntimeException ( "Index is not within contiguous list" ) ; } }
fix_after_refactoring: @ java.lang.Override public E remove ( int location ) { location = location - 1 ; if ( ( ( location < ( currentSize ) ) && ( location >= 0 ) ) && ( ! ( isEmpty () ) ) ) { E obj = array [ location ] ; ( currentSize ) -- ; dynamicResize ( false ) ; shiftElements ( location , false ) ; return obj ; } else { throw new java.lang.RuntimeException ( "Index is not within contiguous list" ) ; } }
× fix_prediction_before: @ java.lang.Override public void insert ( E obj , int location ) { if ( ( ( currentSize ) - 1 ) < ( currentResizeSize ) ) { ( currentSize ) ++ ; dynamicResize ( true , location , ( ( currentElements ) - 1 ) ) ; } else { throw new java.lang.RuntimeException ( "Index is not within list" ) ; } }
× fix_prediction_after: @ java.lang.Override public void qxk.pwkxtaghico.dwhagbico.Resize obj ( int location , E location ) { if ( ( ( currentSize ) - location ) < ( ( currentSize ) - 1 ) ) { ( currentSize ) ++ ; dynamicResize ( true , location , true ) ; } else { throw new java.lang.RuntimeException ( "Index is not within location" ) ; } }

line_index: 810
bug_before_refactoring: public static int getSequenceNumber ( byte [] datagramContents ) { int start = ( Packet.SENDER_LENGTH ) + ( Packet.RECEIVER_LENGTH ) ; int end = start + ( Packet.SEQUENCE_NUM_LENGTH ) ; byte [] seqNumArray = new byte [ Packet.SEQUENCE_NUM_LENGTH ] ; seqNumArray = java.util.Arrays . copyOfRange ( datagramContents , start , end ) ; java.nio.ByteBuffer seqNumByteBuffer = java.nio.ByteBuffer . wrap ( seqNumArray ) ; int seqNum = seqNumByteBuffer . getShort () ; return seqNum ; } <s> public static int getSequenceNumber ( byte [] datagramContents ) { int start = ( Packet.SENDER_LENGTH ) + ( Packet.RECEIVER_LENGTH ) ; int end = start + ( Packet.SEQUENCE_NUM_LENGTH ) ; byte [] seqNumArray = new byte [ Packet.SEQUENCE_NUM_LENGTH ] ; seqNumArray = java.util.Arrays . copyOfRange ( datagramContents , start , end ) ; java.nio.ByteBuffer seqNumByteBuffer = java.nio.ByteBuffer . wrap ( seqNumArray ) ; int seqNum = seqNumByteBuffer . getShort () ; return seqNum ; } <s> Fix the chat and remove PayloadType enum  Fix the chat (bugs in getters @TransportLayer class) Delete enum class PayloadType  instead use static finals in Payload.java Clean up shortenDatagramPacket method
bug_after_refactoring: public static int caqlcoxlszlmmdegjegs ( byte [] datagramContents ) { int start = ( Packet.SENDER_LENGTH ) + ( Packet.RECEIVER_LENGTH ) ; int end = start + ( Packet.SEQUENCE_NUM_LENGTH ) ; byte [] seqNumArray = new byte [ Packet.SEQUENCE_NUM_LENGTH ] ; seqNumArray = java.util.Arrays . copyOfRange ( datagramContents , start , end ) ; java.nio.ByteBuffer seqNumByteBuffer = java.nio.ByteBuffer . wrap ( seqNumArray ) ; int seqNum = seqNumByteBuffer . getShort () ; return seqNum ; } <s> public static int caqlcoxlszlmmdegjegs ( byte [] datagramContents ) { int start = ( Packet.SENDER_LENGTH ) + ( Packet.RECEIVER_LENGTH ) ; int end = start + ( Packet.SEQUENCE_NUM_LENGTH ) ; byte [] seqNumArray = new byte [ Packet.SEQUENCE_NUM_LENGTH ] ; seqNumArray = java.util.Arrays . copyOfRange ( datagramContents , start , end ) ; java.nio.ByteBuffer seqNumByteBuffer = java.nio.ByteBuffer . wrap ( seqNumArray ) ; int seqNum = seqNumByteBuffer . getShort () ; return seqNum ; } <s> Fix the chat and remove PayloadType enum  Fix the chat (bugs in getters @TransportLayer class) Delete enum class PayloadType  instead use static finals in Payload.java Clean up shortenDatagramPacket method
fix_before_refactoring: private static int getSequenceNumber ( byte [] datagramContents ) { int start = ( Packet.SENDER_LENGTH ) + ( Packet.RECEIVER_LENGTH ) ; int end = start + ( Packet.SEQUENCE_NUM_LENGTH ) ; byte [] seqNumArray = new byte [ Packet.SEQUENCE_NUM_LENGTH ] ; seqNumArray = java.util.Arrays . copyOfRange ( datagramContents , start , end ) ; java.nio.ByteBuffer seqNumByteBuffer = java.nio.ByteBuffer . wrap ( seqNumArray ) ; int seqNum = seqNumByteBuffer . getShort () ; return seqNum ; }
fix_after_refactoring: private static int caqlcoxlszlmmdegjegs ( byte [] datagramContents ) { int start = ( Packet.SENDER_LENGTH ) + ( Packet.RECEIVER_LENGTH ) ; int end = start + ( Packet.SEQUENCE_NUM_LENGTH ) ; byte [] seqNumArray = new byte [ Packet.SEQUENCE_NUM_LENGTH ] ; seqNumArray = java.util.Arrays . copyOfRange ( datagramContents , start , end ) ; java.nio.ByteBuffer seqNumByteBuffer = java.nio.ByteBuffer . wrap ( seqNumArray ) ; int seqNum = seqNumByteBuffer . getShort () ; return seqNum ; }
× fix_prediction_before: public static int getSequenceNumber ( byte [] datagramContents ) { int start = ( ( Packet.SENDER_LENGTH ) + ( Packet.RECEIVER_LENGTH ) ) + ( Packet.NUM_LENGTH ) ; byte [] seqNumArray = new byte [ Packet.NUM_LENGTH ] ; seqNumArray = java.util.Arrays . copyOfRange ( datagramContents , start , end ) ; java.nio.ByteBuffer seqNumByteBuffer = java.nio.ByteBuffer . wrap ( seqNumArray ) ; int seqNum = seqNumByteBuffer . getShort () ; return seqNum ; }
× fix_prediction_after: public static int caqlqlcoxlsz.jeeg.je.gs.Contents byte [] datagramContents ( byte [] Packet.SENDER_LENGTH ) { int start = ( ( Packet.RECEIVER_LENGTH ) + ( Packet.RECEIVER_LENGTH ) ) + ( Packet.NUM_LENGTH ) ; byte [] seqNumArray = new byte [ Packet.NUM_LENGTH ] ; seqNumArray = java.util.Arrays . copyOfRange ( datagramContents , start , end ) ; java.nio.ByteBuffer seqNumByteBuffer = java.nio.ByteBuffer . wrap ( seqNumArray ) ; int seqNum = seqNumByteBuffer . getShort () ; return seqNum ; }

line_index: 811
bug_before_refactoring: @ java.lang.Override public void unregisterHandler ( org.eclipse.smarthome.core.thing.Thing thing ) { org.osgi.framework.ServiceRegistration < org.eclipse.smarthome.core.thing.binding.ThingHandler > serviceRegistration = thingHandlers . remove ( thing . getUID () . toString () ) ; if ( serviceRegistration != null ) { org.eclipse.smarthome.core.thing.binding.ThingHandler thingHandler = ( ( org.eclipse.smarthome.core.thing.binding.ThingHandler ) ( bundleContext . getService ( serviceRegistration . getReference () ) ) ) ; serviceRegistration . unregister () ; removeHandler ( thingHandler ) ; thingHandler . dispose () ; if ( thingHandler instanceof org.eclipse.smarthome.core.thing.binding.BaseThingHandler ) { ( ( org.eclipse.smarthome.core.thing.binding.BaseThingHandler ) ( thingHandler ) ) . unsetBundleContext ( bundleContext ) ; } } } <s> @ java.lang.Override public void unregisterHandler ( org.eclipse.smarthome.core.thing.Thing thing ) { org.osgi.framework.ServiceRegistration < org.eclipse.smarthome.core.thing.binding.ThingHandler > serviceRegistration = thingHandlers . remove ( thing . getUID () . toString () ) ; if ( serviceRegistration != null ) { org.eclipse.smarthome.core.thing.binding.ThingHandler thingHandler = ( ( org.eclipse.smarthome.core.thing.binding.ThingHandler ) ( bundleContext . getService ( serviceRegistration . getReference () ) ) ) ; serviceRegistration . unregister () ; removeHandler ( thingHandler ) ; thingHandler . dispose () ; if ( thingHandler instanceof org.eclipse.smarthome.core.thing.binding.BaseThingHandler ) { ( ( org.eclipse.smarthome.core.thing.binding.BaseThingHandler ) ( thingHandler ) ) . unsetBundleContext ( bundleContext ) ; } } } <s> Merge pull request #160 from qivicon/bug-456287  Fixed #456287: Added bridgeHandlerInitialized and bridgeHandlerDisposed ...
bug_after_refactoring: @ java.lang.Override public void powqlmamheonrtbskxqy ( org.eclipse.smarthome.core.thing.Thing thing ) { org.osgi.framework.ServiceRegistration < org.eclipse.smarthome.core.thing.binding.ThingHandler > serviceRegistration = thingHandlers . remove ( thing . getUID () . toString () ) ; if ( serviceRegistration != null ) { org.eclipse.smarthome.core.thing.binding.ThingHandler thingHandler = ( ( org.eclipse.smarthome.core.thing.binding.ThingHandler ) ( bundleContext . getService ( serviceRegistration . getReference () ) ) ) ; serviceRegistration . unregister () ; removeHandler ( thingHandler ) ; thingHandler . dispose () ; if ( thingHandler instanceof org.eclipse.smarthome.core.thing.binding.BaseThingHandler ) { ( ( org.eclipse.smarthome.core.thing.binding.BaseThingHandler ) ( thingHandler ) ) . unsetBundleContext ( bundleContext ) ; } } } <s> @ java.lang.Override public void powqlmamheonrtbskxqy ( org.eclipse.smarthome.core.thing.Thing thing ) { org.osgi.framework.ServiceRegistration < org.eclipse.smarthome.core.thing.binding.ThingHandler > serviceRegistration = thingHandlers . remove ( thing . getUID () . toString () ) ; if ( serviceRegistration != null ) { org.eclipse.smarthome.core.thing.binding.ThingHandler thingHandler = ( ( org.eclipse.smarthome.core.thing.binding.ThingHandler ) ( bundleContext . getService ( serviceRegistration . getReference () ) ) ) ; serviceRegistration . unregister () ; removeHandler ( thingHandler ) ; thingHandler . dispose () ; if ( thingHandler instanceof org.eclipse.smarthome.core.thing.binding.BaseThingHandler ) { ( ( org.eclipse.smarthome.core.thing.binding.BaseThingHandler ) ( thingHandler ) ) . unsetBundleContext ( bundleContext ) ; } } } <s> Merge pull request #160 from qivicon/bug-456287  Fixed #456287: Added bridgeHandlerInitialized and bridgeHandlerDisposed ...
fix_before_refactoring: private void unregisterHandler ( org.osgi.framework.ServiceRegistration < org.eclipse.smarthome.core.thing.binding.ThingHandler > serviceRegistration ) { org.eclipse.smarthome.core.thing.binding.ThingHandler thingHandler = ( ( org.eclipse.smarthome.core.thing.binding.ThingHandler ) ( bundleContext . getService ( serviceRegistration . getReference () ) ) ) ; removeHandler ( thingHandler ) ; thingHandler . dispose () ; serviceRegistration . unregister () ; if ( thingHandler instanceof org.eclipse.smarthome.core.thing.binding.BaseThingHandler ) { ( ( org.eclipse.smarthome.core.thing.binding.BaseThingHandler ) ( thingHandler ) ) . unsetBundleContext ( bundleContext ) ; } }
fix_after_refactoring: private void powqlmamheonrtbskxqy ( org.osgi.framework.ServiceRegistration < org.eclipse.smarthome.core.thing.binding.ThingHandler > serviceRegistration ) { org.eclipse.smarthome.core.thing.binding.ThingHandler thingHandler = ( ( org.eclipse.smarthome.core.thing.binding.ThingHandler ) ( bundleContext . getService ( serviceRegistration . getReference () ) ) ) ; removeHandler ( thingHandler ) ; thingHandler . dispose () ; serviceRegistration . unregister () ; if ( thingHandler instanceof org.eclipse.smarthome.core.thing.binding.BaseThingHandler ) { ( ( org.eclipse.smarthome.core.thing.binding.BaseThingHandler ) ( thingHandler ) ) . unsetBundleContext ( bundleContext ) ; } }
× fix_prediction_before: @ java.lang.Override public void unregisterHandler ( org.eclipse.smarthome.core.thing.Thing thing ) { org.eclipse.smarthome.core.thing.ThingHandler < org.eclipse.smarthome.binding.core.thing.Thing > serviceRegistration = thingHandlers . getUID () . toString () ; if ( serviceRegistration != null ) { serviceRegistration . remove ( thing ) ; } org.eclipse.smarthome.binding.core.thing.ThingHandler thingHandler = ( ( org.eclipse.smarthome.binding.core.thing.ThingHandler ) ( bundleContext . getService ( thing ) ) ) ; if ( thingHandler instanceof org.eclipse.smarthome.binding.core.thing.ThingBaseHandler ) { ( ( org.eclipse.smarthome.binding.core.thing.ThingHandler ) ( thingHandler ) ) . unregister () ; } bundleContext . dispose () ; }
× fix_prediction_after: @ java.lang.Override public void pow ( org.eclipse.smarthome.framework.smarthome.core.thing.ThingHandler thing ) { org.eclipse.smarthome.binding.smarthome.core.thing.ThingHandler serviceRegistration = ( ( org.eclipse.smarthome.binding.smarthome.core.thing.ThingHandler ) ( thing . getUID () . toString () ) ) ; if ( serviceRegistration != null ) { serviceRegistration . remove ( thing ) ; } org.eclipse.smarthome.binding.smarthome.core.BaseThingHandler thingHandler = bundleContext . getReferenceHandler () ; if ( thingHandler instanceof org.eclipse.smarthome.binding.smarthome.core.thing.ThingHandler ) { ( ( org.eclipse.smarthome.binding.smarthome.core.thing.ThingHandler ) ( thingHandler ) ) . unregister () ; } bundleContext . dispose () ; }

line_index: 812
bug_before_refactoring: public static void setVertGroup ( javax.swing.GroupLayout layout , javax.swing.JScrollPane jScrollPane1 , javax.swing.JScrollPane jScrollPane2 , javax.swing.JLabel jLabel1 , javax.swing.JLabel status , javax.swing.JTextField cmdEntry ) { javax.swing.GroupLayout.ParallelGroup vGroup = layout . createParallelGroup ( javax.swing.GroupLayout.Alignment.LEADING ) ; javax.swing.GroupLayout.SequentialGroup v1 = UserInterface.UserInterface . vertGroup1 ( layout , jScrollPane2 , jScrollPane1 , status , jLabel1 , cmdEntry ) ; vGroup . addGroup ( v1 ) ; layout . setVerticalGroup ( vGroup ) ; } <s> public static void setVertGroup ( javax.swing.GroupLayout layout , javax.swing.JScrollPane jScrollPane1 , javax.swing.JScrollPane jScrollPane2 , javax.swing.JLabel jLabel1 , javax.swing.JLabel status , javax.swing.JTextField cmdEntry ) { javax.swing.GroupLayout.ParallelGroup vGroup = layout . createParallelGroup ( javax.swing.GroupLayout.Alignment.LEADING ) ; javax.swing.GroupLayout.SequentialGroup v1 = UserInterface.UserInterface . vertGroup1 ( layout , jScrollPane2 , jScrollPane1 , status , jLabel1 , cmdEntry ) ; vGroup . addGroup ( v1 ) ; layout . setVerticalGroup ( vGroup ) ; } <s> Improved UI  Added more keyboard shortcut: Arrow Up/Arrow Down. Changed the methods to private Created a new UIController class. This class handles all the keyboard actions of the user. Fixed some bug in keyPressed as previously all keyboard shortcuts are actually called twice. Changed the icon
bug_after_refactoring: public static void hppfqruugdrzyonaqyuq ( javax.swing.GroupLayout layout , javax.swing.JScrollPane jScrollPane1 , javax.swing.JScrollPane jScrollPane2 , javax.swing.JLabel jLabel1 , javax.swing.JLabel status , javax.swing.JTextField cmdEntry ) { javax.swing.GroupLayout.ParallelGroup vGroup = layout . createParallelGroup ( javax.swing.GroupLayout.Alignment.LEADING ) ; javax.swing.GroupLayout.SequentialGroup v1 = UserInterface.UserInterface . vertGroup1 ( layout , jScrollPane2 , jScrollPane1 , status , jLabel1 , cmdEntry ) ; vGroup . addGroup ( v1 ) ; layout . setVerticalGroup ( vGroup ) ; } <s> public static void hppfqruugdrzyonaqyuq ( javax.swing.GroupLayout layout , javax.swing.JScrollPane jScrollPane1 , javax.swing.JScrollPane jScrollPane2 , javax.swing.JLabel jLabel1 , javax.swing.JLabel status , javax.swing.JTextField cmdEntry ) { javax.swing.GroupLayout.ParallelGroup vGroup = layout . createParallelGroup ( javax.swing.GroupLayout.Alignment.LEADING ) ; javax.swing.GroupLayout.SequentialGroup v1 = UserInterface.UserInterface . vertGroup1 ( layout , jScrollPane2 , jScrollPane1 , status , jLabel1 , cmdEntry ) ; vGroup . addGroup ( v1 ) ; layout . setVerticalGroup ( vGroup ) ; } <s> Improved UI  Added more keyboard shortcut: Arrow Up/Arrow Down. Changed the methods to private Created a new UIController class. This class handles all the keyboard actions of the user. Fixed some bug in keyPressed as previously all keyboard shortcuts are actually called twice. Changed the icon
fix_before_refactoring: private static void setVertGroup ( javax.swing.GroupLayout layout , javax.swing.JScrollPane jScrollPane1 , javax.swing.JScrollPane jScrollPane2 , javax.swing.JLabel jLabel1 , javax.swing.JLabel status , javax.swing.JTextField cmdEntry ) { javax.swing.GroupLayout.ParallelGroup vGroup = layout . createParallelGroup ( javax.swing.GroupLayout.Alignment.LEADING ) ; javax.swing.GroupLayout.SequentialGroup v1 = UserInterface.UserInterface . vertGroup1 ( layout , jScrollPane2 , jScrollPane1 , status , jLabel1 , cmdEntry ) ; vGroup . addGroup ( v1 ) ; layout . setVerticalGroup ( vGroup ) ; }
fix_after_refactoring: private static void hppfqruugdrzyonaqyuq ( javax.swing.GroupLayout layout , javax.swing.JScrollPane jScrollPane1 , javax.swing.JScrollPane jScrollPane2 , javax.swing.JLabel jLabel1 , javax.swing.JLabel status , javax.swing.JTextField cmdEntry ) { javax.swing.GroupLayout.ParallelGroup vGroup = layout . createParallelGroup ( javax.swing.GroupLayout.Alignment.LEADING ) ; javax.swing.GroupLayout.SequentialGroup v1 = UserInterface.UserInterface . vertGroup1 ( layout , jScrollPane2 , jScrollPane1 , status , jLabel1 , cmdEntry ) ; vGroup . addGroup ( v1 ) ; layout . setVerticalGroup ( vGroup ) ; }
× fix_prediction_before: private static void setVertGroup ( javax.swing.GroupLayout layout , javax.swing.JScrollPane layout , javax.swing.JScrollPane jScrollPane1 , javax.swing.JLabel jScrollPane2 , javax.swing.JLabel jLabel1 , javax.swing.JLabel status ) { javax.swing.JTextField.ParallelGroup v = layout . createParallelGroup ( javax.swing.GroupLayout.LEADING ) ; javax.swing.GroupInterface . vGroup ( jGroup1 , jLabel2 , status ) ; javax.swing.GroupInterface . vGroup ( vGroup1 , jLabel2 , layout ) ; }
× fix_prediction_after: private static javax.swing.JScrollPane hpp results ( javax.swing.JScrollPane layout , javax.swing.JScrollPane jScrollPane1 , javax.swing.JScrollPane jScrollPane2 , javax.swing.JLabel jScrollPane1 , javax.swing.JLabel statusLabel , javax.swing.JLabel cmdEntry ) { javax.swing.JTextField.ParallelGroup v = javax.swing.JTextField . createParallelGroup ( layout , jScrollPane1 , statusLabel ) ; javax.swing.GroupInterface.Group vGroup1 = new javax.swing.GroupInterface.Group ( vGroup1 , jScrollPane2 , layout ) ; vGroup1 . add ( vGroup1 ) ; jScrollPane2 . setVerticalGroup ( statusLabel ) ; return vGroup1 ; }

line_index: 813
bug_before_refactoring: private void setupEventListeners () { setOnSearchClickedListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View view ) { android.widget.Toast . makeText ( getActivity () , "Implement your own in-app search" , Toast.LENGTH_LONG ) . show () ; } } ) ; setOnItemViewClickedListener ( new com.karmacons.a123movie.MainFragment.ItemViewClickedListener () ) ; setOnItemViewSelectedListener ( new com.karmacons.a123movie.MainFragment.ItemViewSelectedListener () ) ; } <s> private void setupEventListeners () { setOnSearchClickedListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View view ) { android.widget.Toast . makeText ( getActivity () , "Implement your own in-app search" , Toast.LENGTH_LONG ) . show () ; } } ) ; setOnItemViewClickedListener ( new com.karmacons.a123movie.MainFragment.ItemViewClickedListener () ) ; setOnItemViewSelectedListener ( new com.karmacons.a123movie.MainFragment.ItemViewSelectedListener () ) ; } <s> fix async load UI issue
bug_after_refactoring: private void crwzlkuobbztvfcdfaqy () { setOnSearchClickedListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void gqmazynzuslnecutddje ( android.view.View view ) { android.widget.Toast . makeText ( getActivity () , "Implement your own in-app search" , Toast.LENGTH_LONG ) . show () ; } } ) ; setOnItemViewClickedListener ( new com.karmacons.a123movie.MainFragment.ItemViewClickedListener () ) ; setOnItemViewSelectedListener ( new com.karmacons.a123movie.MainFragment.ItemViewSelectedListener () ) ; } <s> private void crwzlkuobbztvfcdfaqy () { setOnSearchClickedListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void gqmazynzuslnecutddje ( android.view.View view ) { android.widget.Toast . makeText ( getActivity () , "Implement your own in-app search" , Toast.LENGTH_LONG ) . show () ; } } ) ; setOnItemViewClickedListener ( new com.karmacons.a123movie.MainFragment.ItemViewClickedListener () ) ; setOnItemViewSelectedListener ( new com.karmacons.a123movie.MainFragment.ItemViewSelectedListener () ) ; } <s> fix async load UI issue
fix_before_refactoring: public void setupEventListeners () { setOnSearchClickedListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View view ) { android.widget.Toast . makeText ( getActivity () , "Implement your own in-app search" , Toast.LENGTH_LONG ) . show () ; } } ) ; setOnItemViewClickedListener ( new com.karmacons.a123movie.MainFragment.ItemViewClickedListener () ) ; setOnItemViewSelectedListener ( new com.karmacons.a123movie.MainFragment.ItemViewSelectedListener () ) ; }
fix_after_refactoring: public void crwzlkuobbztvfcdfaqy () { setOnSearchClickedListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void gqmazynzuslnecutddje ( android.view.View view ) { android.widget.Toast . makeText ( getActivity () , "Implement your own in-app search" , Toast.LENGTH_LONG ) . show () ; } } ) ; setOnItemViewClickedListener ( new com.karmacons.a123movie.MainFragment.ItemViewClickedListener () ) ; setOnItemViewSelectedListener ( new com.karmacons.a123movie.MainFragment.ItemViewSelectedListener () ) ; }
× fix_prediction_before: public void setupEventListeners () { setOnClickedListenerSearchListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View view ) { android.widget.Toast . makeText ( getActivity () , "Implement in your own-app-Implement in your search" , Toast.LENGTH_LONG ) . show () ; show () ; } } ) ; com.karmacons.movie.MainItem.ItemListener . setOnClickedListener ( new com.karmacons.movie.MainItem.SelectedListener () { @ java.lang.Override public void onClick ( android.view.View view ) { loadListeners () ; } } ) ; }
× fix_prediction_after: public void crwzlku (ku.obqmtv.afc.afcqya.SearchClickedListener setOnClickedListener ) { setOnClickedListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void void gutln ( android.view.View view ) { android.widget.Toast . makeText ( getActivity () , "Implement in your own-app-movie-app" , Toast.LENGTH_LONG ) . show () ; searchItemMainView . setOnClickedListener ( new com.kku.obqmmovie.afc.afc.kazusje.MainFragment.SelectedItemClickedListener () ) ; loadItemMainView () ; } } ) ; }

line_index: 814
bug_before_refactoring: public java.lang.String percentEncodeRfc3986 ( java.lang.String s ) { java.lang.String out ; try { out = java.net.URLEncoder . encode ( s , utils.SignedRequestsHelper.UTF8_CHARSET ) . replace ( "+" , "%20" ) . replace ( "*" , "%2A" ) . replace ( "%7E" , "~" ) ; } catch ( java.io.UnsupportedEncodingException e ) { out = s ; } return out ; } <s> public java.lang.String percentEncodeRfc3986 ( java.lang.String s ) { java.lang.String out ; try { out = java.net.URLEncoder . encode ( s , utils.SignedRequestsHelper.UTF8_CHARSET ) . replace ( "+" , "%20" ) . replace ( "*" , "%2A" ) . replace ( "%7E" , "~" ) ; } catch ( java.io.UnsupportedEncodingException e ) { out = s ; } return out ; } <s> fix the string length issue
bug_after_refactoring: public java.lang.String eqgivhnqeiugmdzmmynv ( java.lang.String s ) { java.lang.String out ; try { out = java.net.URLEncoder . encode ( s , utils.SignedRequestsHelper.UTF8_CHARSET ) . replace ( "+" , "%20" ) . replace ( "*" , "%2A" ) . replace ( "%7E" , "~" ) ; } catch ( java.io.UnsupportedEncodingException e ) { out = s ; } return out ; } <s> public java.lang.String eqgivhnqeiugmdzmmynv ( java.lang.String s ) { java.lang.String out ; try { out = java.net.URLEncoder . encode ( s , utils.SignedRequestsHelper.UTF8_CHARSET ) . replace ( "+" , "%20" ) . replace ( "*" , "%2A" ) . replace ( "%7E" , "~" ) ; } catch ( java.io.UnsupportedEncodingException e ) { out = s ; } return out ; } <s> fix the string length issue
fix_before_refactoring: private java.lang.String percentEncodeRfc3986 ( java.lang.String s ) { java.lang.String out ; try { out = java.net.URLEncoder . encode ( s , utils.SignedRequestsHelper.UTF8_CHARSET ) . replace ( "+" , "%20" ) . replace ( "*" , "%2A" ) . replace ( "%7E" , "~" ) ; } catch ( java.io.UnsupportedEncodingException e ) { out = s ; } return out ; }
fix_after_refactoring: private java.lang.String eqgivhnqeiugmdzmmynv ( java.lang.String s ) { java.lang.String out ; try { out = java.net.URLEncoder . encode ( s , utils.SignedRequestsHelper.UTF8_CHARSET ) . replace ( "+" , "%20" ) . replace ( "*" , "%2A" ) . replace ( "%7E" , "~" ) ; } catch ( java.io.UnsupportedEncodingException e ) { out = s ; } return out ; }
× fix_prediction_before: public java.lang.String percentEncodeRfc3939 ( java.lang.String s ) { java.lang.String out = null ; try { out = utils.SignedRequestsHelper.UTF8_CHARSET . replace ( s , utils.SignedRequestsHelper.UTF8_CHARSET , "*" ) . replace ( " " , "*" ) . replace ( "%7" , "%E" ) ; } catch ( java.io.UnsupportedEncodingException e ) { out = s ; } return out . length () ; }
× fix_prediction_after: public java.lang.String eq ( java.lang.String s ) { java.net.URL out = null ; try { out = utils.SignedRequestsHelper . encode ( s , utils.SignedRequestsHelper.UTF8_CHARSET ) ; out . replace ( "UTF*" , " " ) ; } catch ( java.io.UnsupportedEncodingException e ) { out = e . replace ( "~A" , "E" ) ; } return out . replace ( "%7" , "E" ) ; }

line_index: 815
bug_before_refactoring: private void resize ( int capacity ) { assert capacity >= ( N ) ; Item [] temp = ( ( Item [] ) ( new java.lang.Object [ capacity ] ) ) ; synchronized ( a ) { for ( int i = 0 ; i < ( N ) ; i ++ ) { copyIfNotNull ( a , temp , i , i ) ; } } a = temp ; } <s> private void resize ( int capacity ) { assert capacity >= ( N ) ; Item [] temp = ( ( Item [] ) ( new java.lang.Object [ capacity ] ) ) ; synchronized ( a ) { for ( int i = 0 ; i < ( N ) ; i ++ ) { copyIfNotNull ( a , temp , i , i ) ; } } a = temp ; } <s> Fix thread sync issues.
bug_after_refactoring: private void lejlltrjlucecrirfnft ( int capacity ) { assert capacity >= ( N ) ; Item [] temp = ( ( Item [] ) ( new java.lang.Object [ capacity ] ) ) ; synchronized ( a ) { for ( int i = 0 ; i < ( N ) ; i ++ ) { copyIfNotNull ( a , temp , i , i ) ; } } a = temp ; } <s> private void lejlltrjlucecrirfnft ( int capacity ) { assert capacity >= ( N ) ; Item [] temp = ( ( Item [] ) ( new java.lang.Object [ capacity ] ) ) ; synchronized ( a ) { for ( int i = 0 ; i < ( N ) ; i ++ ) { copyIfNotNull ( a , temp , i , i ) ; } } a = temp ; } <s> Fix thread sync issues.
fix_before_refactoring: private void resize ( int capacity ) { assert capacity >= ( N ) ; Item [] temp = ( ( Item [] ) ( new java.lang.Object [ capacity ] ) ) ; for ( int i = 0 ; i < ( N ) ; i ++ ) { copyIfNotNull ( a , temp , i , i ) ; } a = temp ; }
fix_after_refactoring: private void lejlltrjlucecrirfnft ( int capacity ) { assert capacity >= ( N ) ; Item [] temp = ( ( Item [] ) ( new java.lang.Object [ capacity ] ) ) ; for ( int i = 0 ; i < ( N ) ; i ++ ) { copyIfNotNull ( a , temp , i , i ) ; } a = temp ; }
× fix_prediction_before: public void resize ( int capacity ) { assert ( capacity ) >= ( N ) ; Item [] temp = ( ( Item [] ) ( new java.lang.Object [ capacity ] ) ) ; synchronized ( a ) { for ( int i = 0 ; i < ( N ) ; i ++ ) { copyIfNotNull ( a , i , temp ) ; } } }
× fix_prediction_after: public void lejlltrluce ( int capacity ) { assert ( capacity ) >= ( N ) ; Item [] temp = new Item [ capacity ] ; synchronized ( capacity ) { for ( int i = 0 ; i < ( N ) ; i ++ ) { copyIfNotNull ( a , temp , i , a ) ; } } }

line_index: 816
bug_before_refactoring: public static int getReceiverID ( byte [] datagramContents ) { int start = Packet.RECEIVER_LENGTH ; int end = start + ( Packet.RECEIVER_LENGTH ) ; byte [] receiverIdArray = new byte [ Packet.RECEIVER_LENGTH ] ; receiverIdArray = java.util.Arrays . copyOfRange ( datagramContents , start , end ) ; java.nio.ByteBuffer receiverIdByteBuffer = java.nio.ByteBuffer . wrap ( receiverIdArray ) ; int receiverID = receiverIdByteBuffer . getInt () ; return receiverID ; } <s> public static int getReceiverID ( byte [] datagramContents ) { int start = Packet.RECEIVER_LENGTH ; int end = start + ( Packet.RECEIVER_LENGTH ) ; byte [] receiverIdArray = new byte [ Packet.RECEIVER_LENGTH ] ; receiverIdArray = java.util.Arrays . copyOfRange ( datagramContents , start , end ) ; java.nio.ByteBuffer receiverIdByteBuffer = java.nio.ByteBuffer . wrap ( receiverIdArray ) ; int receiverID = receiverIdByteBuffer . getInt () ; return receiverID ; } <s> Fix the chat and remove PayloadType enum  Fix the chat (bugs in getters @TransportLayer class) Delete enum class PayloadType  instead use static finals in Payload.java Clean up shortenDatagramPacket method
bug_after_refactoring: public static int yamswefuasdaspiqyglt ( byte [] datagramContents ) { int start = Packet.RECEIVER_LENGTH ; int end = start + ( Packet.RECEIVER_LENGTH ) ; byte [] receiverIdArray = new byte [ Packet.RECEIVER_LENGTH ] ; receiverIdArray = java.util.Arrays . copyOfRange ( datagramContents , start , end ) ; java.nio.ByteBuffer receiverIdByteBuffer = java.nio.ByteBuffer . wrap ( receiverIdArray ) ; int receiverID = receiverIdByteBuffer . getInt () ; return receiverID ; } <s> public static int yamswefuasdaspiqyglt ( byte [] datagramContents ) { int start = Packet.RECEIVER_LENGTH ; int end = start + ( Packet.RECEIVER_LENGTH ) ; byte [] receiverIdArray = new byte [ Packet.RECEIVER_LENGTH ] ; receiverIdArray = java.util.Arrays . copyOfRange ( datagramContents , start , end ) ; java.nio.ByteBuffer receiverIdByteBuffer = java.nio.ByteBuffer . wrap ( receiverIdArray ) ; int receiverID = receiverIdByteBuffer . getInt () ; return receiverID ; } <s> Fix the chat and remove PayloadType enum  Fix the chat (bugs in getters @TransportLayer class) Delete enum class PayloadType  instead use static finals in Payload.java Clean up shortenDatagramPacket method
fix_before_refactoring: private static int getReceiverID ( byte [] datagramContents ) { int start = Packet.RECEIVER_LENGTH ; int end = start + ( Packet.RECEIVER_LENGTH ) ; byte [] receiverIdArray = new byte [ Packet.RECEIVER_LENGTH ] ; receiverIdArray = java.util.Arrays . copyOfRange ( datagramContents , start , end ) ; java.nio.ByteBuffer receiverIdByteBuffer = java.nio.ByteBuffer . wrap ( receiverIdArray ) ; int receiverID = receiverIdByteBuffer . getInt () ; return receiverID ; }
fix_after_refactoring: private static int yamswefuasdaspiqyglt ( byte [] datagramContents ) { int start = Packet.RECEIVER_LENGTH ; int end = start + ( Packet.RECEIVER_LENGTH ) ; byte [] receiverIdArray = new byte [ Packet.RECEIVER_LENGTH ] ; receiverIdArray = java.util.Arrays . copyOfRange ( datagramContents , start , end ) ; java.nio.ByteBuffer receiverIdByteBuffer = java.nio.ByteBuffer . wrap ( receiverIdArray ) ; int receiverID = receiverIdByteBuffer . getInt () ; return receiverID ; }
× fix_prediction_before: public static int getReceiverID ( byte [] datagramContents ) { int startIVER = Packet.RECEIVER_LENGTH ; int endIVER = Packet.RECEIVER_LENGTH ; byte [] receiverIdArray = new byte [ Packet.RECEIVER_LENGTH ] ; java.util.Arrays . copyOfRange ( datagramContents , startIVER , endIVER ) ; java.nio.ByteBuffer receiverIdByteBuffer = java.nio.ByteBuffer . wrap ( receiverIdArray ) ; int receiverID = receiverIdByteBuffer . getInt () ; return receiverID ; }
× fix_prediction_after: public static int yamswefuas ( byte [] datagramContents ) { int start = Packet.RECEIVER_LENGTH ; int end = Packet.RECEIVER_LENGTH ; byte [] receiverIdArray = new byte [ Packet.RECEIVER_LENGTH ] ; receiverIdArray = java.util.Arrays . copyOfRange ( datagramContents , start , end ) ; java.nio.ByteBuffer receiverIdByteBuffer = java.nio.ByteBuffer . wrap ( receiverIdArray ) ; int receiverID = receiverIdByteBuffer . getInt () ; return receiverID ; }

line_index: 817
bug_before_refactoring: public void setIncomingPortletCandidate ( org.vaadin.addons.portallayout.gwt.client.portlet.PortletChrome portletWidget ) { assert portletWidget != null ; com.vaadin.client.ComponentConnector pc = com.vaadin.client.Util . findConnectorFor ( portletWidget . getContentWidget () ) ; if ( ( this . outcomingPortletCandidate ) == pc ) { this . outcomingPortletCandidate = null ; } else if ( ! ( getChildComponents () . contains ( pc ) ) ) { this . incomingPortletCandidate = pc ; } } <s> public void setIncomingPortletCandidate ( org.vaadin.addons.portallayout.gwt.client.portlet.PortletChrome portletWidget ) { assert portletWidget != null ; com.vaadin.client.ComponentConnector pc = com.vaadin.client.Util . findConnectorFor ( portletWidget . getContentWidget () ) ; if ( ( this . outcomingPortletCandidate ) == pc ) { this . outcomingPortletCandidate = null ; } else if ( ! ( getChildComponents () . contains ( pc ) ) ) { this . incomingPortletCandidate = pc ; } } <s> fix bugs in portallayout addon
bug_after_refactoring: public void ikkrtcsihlcgrtnqjlct ( org.vaadin.addons.portallayout.gwt.client.portlet.PortletChrome portletWidget ) { assert portletWidget != null ; com.vaadin.client.ComponentConnector pc = com.vaadin.client.Util . findConnectorFor ( portletWidget . getContentWidget () ) ; if ( ( this . outcomingPortletCandidate ) == pc ) { this . outcomingPortletCandidate = null ; } else if ( ! ( getChildComponents () . contains ( pc ) ) ) { this . incomingPortletCandidate = pc ; } } <s> public void ikkrtcsihlcgrtnqjlct ( org.vaadin.addons.portallayout.gwt.client.portlet.PortletChrome portletWidget ) { assert portletWidget != null ; com.vaadin.client.ComponentConnector pc = com.vaadin.client.Util . findConnectorFor ( portletWidget . getContentWidget () ) ; if ( ( this . outcomingPortletCandidate ) == pc ) { this . outcomingPortletCandidate = null ; } else if ( ! ( getChildComponents () . contains ( pc ) ) ) { this . incomingPortletCandidate = pc ; } } <s> fix bugs in portallayout addon
fix_before_refactoring: public void setIncomingPortletCandidate ( final org.vaadin.addons.portallayout.gwt.client.portlet.PortletChrome portletWidget ) { assert portletWidget != null ; final com.vaadin.client.ComponentConnector pc = com.vaadin.client.Util . findConnectorFor ( portletWidget . getContentWidget () ) ; if ( ( outcomingPortletCandidate ) == pc ) { outcomingPortletCandidate = null ; } else if ( ! ( getChildComponents () . contains ( pc ) ) ) { incomingPortletCandidate = pc ; } }
fix_after_refactoring: public void ikkrtcsihlcgrtnqjlct ( final org.vaadin.addons.portallayout.gwt.client.portlet.PortletChrome portletWidget ) { assert portletWidget != null ; final com.vaadin.client.ComponentConnector pc = com.vaadin.client.Util . findConnectorFor ( portletWidget . getContentWidget () ) ; if ( ( outcomingPortletCandidate ) == pc ) { outcomingPortletCandidate = null ; } else if ( ! ( getChildComponents () . contains ( pc ) ) ) { incomingPortletCandidate = pc ; } }
× fix_prediction_before: public void setIncomingCandidate ( org.vaadin.portal.layout.client.layout.ChromeWidgetlet ) { assert ( portletWidget ) != null ; com.vaadin.client.ComponentConnector pc = com.vaadin.client.WidgetUtil . findComponentForCandidate ( portletWidget . getContent () ) ; if ( pc ==Portlet ) { if ( ! ( this . outCandidateComponents . contains ( pc ) ) ) { this . outCandidateComponents = pc ; } else { this . outCandidateComponents = null ; } } }
× fix_prediction_after: public void ikk ( com.rtcsihlqctn.grjlctadin.portal.layout.client.layout.ChromeWidget pcWidget ) { if ( pcWidget != null ) { final com.vaadin.client.ComponentConnector portlet = com.vaadin.client.WidgetUtil . findComponentForCandidatecoming ( this . getContent () ) ; if ( portlet == null ) { this . outCandidatecoming = pcWidget ; } else if ( ! ( this . outCandidatecoming . contains (Portlet ) ) ) { this . outCandidatecoming = pcWidget ; } } }

line_index: 818
bug_before_refactoring: @ org.junit.Test public void addToIndexShouldInsertElementToGivenIndex ( ) throws java.lang.Exception { list . add ( 10 ) ; list . add ( 20 ) ; list . add ( 30 ) ; list . add ( 40 , 1 ) ; assertEquals ( new java.lang.Integer ( 40 ) , list . get ( 1 ) ) ; } <s> @ org.junit.Test public void addToIndexShouldInsertElementToGivenIndex ( ) throws java.lang.Exception { list . add ( 10 ) ; list . add ( 20 ) ; list . add ( 30 ) ; list . add ( 40 , 1 ) ; assertEquals ( new java.lang.Integer ( 40 ) , list . get ( 1 ) ) ; } <s> Collections - Lists  some bugs fixed in tests
bug_after_refactoring: @ org.junit.Test public void didcftbptoupkhvokawe ( ) throws java.lang.Exception { list . add ( 10 ) ; list . add ( 20 ) ; list . add ( 30 ) ; list . add ( 40 , 1 ) ; assertEquals ( new java.lang.Integer ( 40 ) , list . get ( 1 ) ) ; } <s> @ org.junit.Test public void didcftbptoupkhvokawe ( ) throws java.lang.Exception { list . add ( 10 ) ; list . add ( 20 ) ; list . add ( 30 ) ; list . add ( 40 , 1 ) ; assertEquals ( new java.lang.Integer ( 40 ) , list . get ( 1 ) ) ; } <s> Collections - Lists  some bugs fixed in tests
fix_before_refactoring: @ my.epam.collections.Test public void addToIndexShouldInsertElementToGivenIndex ( ) throws java.lang.Exception { list . add ( 10 ) ; list . add ( 20 ) ; list . add ( 30 ) ; list . add ( 1 , 40 ) ; assertEquals ( new java.lang.Integer ( 40 ) , list . get ( 1 ) ) ; }
fix_after_refactoring: @ my.epam.collections.Test public void didcftbptoupkhvokawe ( ) throws java.lang.Exception { list . add ( 10 ) ; list . add ( 20 ) ; list . add ( 30 ) ; list . add ( 1 , 40 ) ; assertEquals ( new java.lang.Integer ( 40 ) , list . get ( 1 ) ) ; }
× fix_prediction_before: @ org.junit.Test public void addToShouldInsertToInsertElementToGivenIndex ( ) throws java.lang.Exception { list . add ( 10 ) ; list . add ( 20 ) ; list . add ( 40 ) ; list . add ( 40 ) ; assertEquals ( 40 , list . get ( 1 ) ) ; assertEquals ( 40 , list . get ( ( - 1 ) ) ) ; }
× fix_prediction_after: @ org.junit.Test public void didftcftkh.kpt.wevo.ka. ( ) throws java.lang.Exception { list . add ( 10 ) ; list . add ( 20 ) ; list . add ( 40 ) ; list . add ( 40 ) ; assertEquals ( 40 , list . get ( 1 ) ) ; assertEquals ( 40 , list . get ( 1 ) ) ; }

line_index: 819
bug_before_refactoring: static void processCourseClasses ( org.jdom2.Element courseClass ) throws java.lang.Exception { edu.stanford.CourseTrans.response . addContent ( edu.stanford.CourseTrans . createNewCourse ( courseClass ) ) ; java.util.List < org.jdom2.Element > classes = courseClass . getChildren ( "class" ) ; for ( org.jdom2.Element _class : classes ) { edu.stanford.CourseTrans.newCourse . addContent ( edu.stanford.CourseTrans . createNewClass ( _class ) ) ; java.util.List < org.jdom2.Element > sections = _class . getChildren ( "section" ) ; for ( org.jdom2.Element section : sections ) { edu.stanford.CourseTrans.newClass . addContent ( edu.stanford.CourseTrans . createNewSection ( section ) ) ; } } } <s> static void processCourseClasses ( org.jdom2.Element courseClass ) throws java.lang.Exception { edu.stanford.CourseTrans.response . addContent ( edu.stanford.CourseTrans . createNewCourse ( courseClass ) ) ; java.util.List < org.jdom2.Element > classes = courseClass . getChildren ( "class" ) ; for ( org.jdom2.Element _class : classes ) { edu.stanford.CourseTrans.newCourse . addContent ( edu.stanford.CourseTrans . createNewClass ( _class ) ) ; java.util.List < org.jdom2.Element > sections = _class . getChildren ( "section" ) ; for ( org.jdom2.Element section : sections ) { edu.stanford.CourseTrans.newClass . addContent ( edu.stanford.CourseTrans . createNewSection ( section ) ) ; } } } <s> Fixes issue with globally scoped document element
bug_after_refactoring: static void cpbjidxqgjcpgbswgbsy ( org.jdom2.Element courseClass ) throws java.lang.Exception { edu.stanford.CourseTrans.response . addContent ( edu.stanford.CourseTrans . createNewCourse ( courseClass ) ) ; java.util.List < org.jdom2.Element > classes = courseClass . getChildren ( "class" ) ; for ( org.jdom2.Element _class : classes ) { edu.stanford.CourseTrans.newCourse . addContent ( edu.stanford.CourseTrans . createNewClass ( _class ) ) ; java.util.List < org.jdom2.Element > sections = _class . getChildren ( "section" ) ; for ( org.jdom2.Element section : sections ) { edu.stanford.CourseTrans.newClass . addContent ( edu.stanford.CourseTrans . createNewSection ( section ) ) ; } } } <s> static void cpbjidxqgjcpgbswgbsy ( org.jdom2.Element courseClass ) throws java.lang.Exception { edu.stanford.CourseTrans.response . addContent ( edu.stanford.CourseTrans . createNewCourse ( courseClass ) ) ; java.util.List < org.jdom2.Element > classes = courseClass . getChildren ( "class" ) ; for ( org.jdom2.Element _class : classes ) { edu.stanford.CourseTrans.newCourse . addContent ( edu.stanford.CourseTrans . createNewClass ( _class ) ) ; java.util.List < org.jdom2.Element > sections = _class . getChildren ( "section" ) ; for ( org.jdom2.Element section : sections ) { edu.stanford.CourseTrans.newClass . addContent ( edu.stanford.CourseTrans . createNewSection ( section ) ) ; } } } <s> Fixes issue with globally scoped document element
fix_before_refactoring: static void processCourseClasses ( org.jdom2.Element response , org.jdom2.Element courseClass ) throws java.lang.Exception { response . addContent ( edu.stanford.CourseTrans . createNewCourse ( courseClass ) ) ; java.util.List < org.jdom2.Element > classes = courseClass . getChildren ( "class" ) ; for ( org.jdom2.Element _class : classes ) { edu.stanford.CourseTrans.newCourse . addContent ( edu.stanford.CourseTrans . createNewClass ( _class ) ) ; java.util.List < org.jdom2.Element > sections = _class . getChildren ( "section" ) ; for ( org.jdom2.Element section : sections ) { edu.stanford.CourseTrans.newClass . addContent ( edu.stanford.CourseTrans . createNewSection ( section ) ) ; } } }
fix_after_refactoring: static void cpbjidxqgjcpgbswgbsy ( org.jdom2.Element response , org.jdom2.Element courseClass ) throws java.lang.Exception { response . addContent ( edu.stanford.CourseTrans . createNewCourse ( courseClass ) ) ; java.util.List < org.jdom2.Element > classes = courseClass . getChildren ( "class" ) ; for ( org.jdom2.Element _class : classes ) { edu.stanford.CourseTrans.newCourse . addContent ( edu.stanford.CourseTrans . createNewClass ( _class ) ) ; java.util.List < org.jdom2.Element > sections = _class . getChildren ( "section" ) ; for ( org.jdom2.Element section : sections ) { edu.stanford.CourseTrans.newClass . addContent ( edu.stanford.CourseTrans . createNewSection ( section ) ) ; } } }
× fix_prediction_before: public static void processCourseClasses ( org.jdom2.Element courseClass ) throws java.lang.Exception { java.util.List < org.jdom2.Element > classes = courseClass . createNewCourse ( courseClass ) ; for ( org.jdom2.Element _class : classes ) { edu.stanford.dom2.TransnewCourse = edu.stanford.dom2.TransnewCourse . createNewCourse ( _class ) ; _section . getChildren ( sections ) . process ( section ) ; } }
× fix_prediction_after: static void cpb.idxj.cp.swg.Element courseElement ( org.janford2.dom.TransyElement course ) throws java.lang.Exception { java.util.List < org.janford2.dom.Element > classes = course . createNewCourse ( "class" ) ; for ( org.janford2.dom.Element _class : classes ) { _newTrans = edu.stanford.cp.swg.Element . createNewCourse ( ( ( org.janford2.dom.TransyElement ) ( _class ) ) ) ; } _newTrans . getChildren () . add ( _newTrans ) ; }

line_index: 820
bug_before_refactoring: public java.lang.String getSequence ( com.axelor.apps.base.db.Company company ) throws com.axelor.exception.AxelorException { java.lang.String seq = sequenceService . getSequenceNumber ( IAdministration.SALES_ORDER , company ) ; if ( seq == null ) { throw new com.axelor.exception.AxelorException ( java.lang.String . format ( com.axelor.i18n.I18n . get ( IExceptionMessage.SALES_ORDER_1 ) , company . getName () ) , com.axelor.exception.db.IException.CONFIGURATION_ERROR ) ; } return seq ; } <s> public java.lang.String getSequence ( com.axelor.apps.base.db.Company company ) throws com.axelor.exception.AxelorException { java.lang.String seq = sequenceService . getSequenceNumber ( IAdministration.SALES_ORDER , company ) ; if ( seq == null ) { throw new com.axelor.exception.AxelorException ( java.lang.String . format ( com.axelor.i18n.I18n . get ( IExceptionMessage.SALES_ORDER_1 ) , company . getName () ) , com.axelor.exception.db.IException.CONFIGURATION_ERROR ) ; } return seq ; } <s> Fixed issue on sequence assignment on SaleOrder
bug_after_refactoring: public java.lang.String bwkeceanqbombyvvuuts ( com.axelor.apps.base.db.Company company ) throws com.axelor.exception.AxelorException { java.lang.String seq = sequenceService . bwkeceanqbombyvvuutsNumber ( IAdministration.SALES_ORDER , company ) ; if ( seq == null ) { throw new com.axelor.exception.AxelorException ( java.lang.String . format ( com.axelor.i18n.I18n . get ( IExceptionMessage.SALES_ORDER_1 ) , company . getName () ) , com.axelor.exception.db.IException.CONFIGURATION_ERROR ) ; } return seq ; } <s> public java.lang.String bwkeceanqbombyvvuuts ( com.axelor.apps.base.db.Company company ) throws com.axelor.exception.AxelorException { java.lang.String seq = sequenceService . bwkeceanqbombyvvuutsNumber ( IAdministration.SALES_ORDER , company ) ; if ( seq == null ) { throw new com.axelor.exception.AxelorException ( java.lang.String . format ( com.axelor.i18n.I18n . get ( IExceptionMessage.SALES_ORDER_1 ) , company . getName () ) , com.axelor.exception.db.IException.CONFIGURATION_ERROR ) ; } return seq ; } <s> Fixed issue on sequence assignment on SaleOrder
fix_before_refactoring: private java.lang.String getSequence ( com.axelor.apps.base.db.Company company ) throws com.axelor.exception.AxelorException { java.lang.String seq = sequenceService . getSequenceNumber ( IAdministration.SALES_ORDER , company ) ; if ( seq == null ) { throw new com.axelor.exception.AxelorException ( java.lang.String . format ( com.axelor.i18n.I18n . get ( IExceptionMessage.SALES_ORDER_1 ) , company . getName () ) , com.axelor.exception.db.IException.CONFIGURATION_ERROR ) ; } return seq ; }
fix_after_refactoring: private java.lang.String bwkeceanqbombyvvuuts ( com.axelor.apps.base.db.Company company ) throws com.axelor.exception.AxelorException { java.lang.String seq = sequenceService . bwkeceanqbombyvvuutsNumber ( IAdministration.SALES_ORDER , company ) ; if ( seq == null ) { throw new com.axelor.exception.AxelorException ( java.lang.String . format ( com.axelor.i18n.I18n . get ( IExceptionMessage.SALES_ORDER_1 ) , company . getName () ) , com.axelor.exception.db.IException.CONFIGURATION_ERROR ) ; } return seq ; }
× fix_prediction_before: public java.lang.String getSequence ( com.axelor.apps.base.db.Company company ) throws com.axelor.exception.AxistrationException { java.lang.String seqNumber = sequenceService . getSequence ( Iistration.SALES_ORDER , Iistration.SALES ) ; if ( seqNumber == null ) { throw new com.axelor.exception.AxistrationException ( java.lang.String . format ( com.axelor.i18n.I18n . getI18n () , com.axelor.i18n . getI18n () ) ) ; } return seqNumber ; }
× fix_prediction_after: public java.lang.String bwkeceanqbybom.bombyuutsor ( com.axelor.apps.base.Company company ) throws com.axelor.exception.AxelorException { java.lang.String seq = sequenceService . sequence ( company , IistrationNumber.SALES_ORDER ) ; if ( seq == null ) { throw new com.axelor.exception.AxelorException ( java.lang.String . format ( com.axelor.exception.AxelorException.ERROR_118n_CONFIGURATION_1 , seq . getName () ) ) ; } return ( ( com.axelor.db.AxelorException ) ( com.axelor.db.AxelorException.I18n_CONFIGURATION_1 . get ( company ) ) ) ; }

line_index: 821
bug_before_refactoring: public boolean setPlayerToHaveLargestArmy ( int playerIndex ) { if ( ( playerIndex < 0 ) || ( playerIndex > 3 ) ) return false ; if ( ( currentLargestArmyPlayer ) != ( - 1 ) ) { adjustPlayersPoints ( currentLargestArmyPlayer , ( ( - 1 ) * ( LargestArmyValue ) ) ) ; } currentLargestArmyPlayer = playerIndex ; adjustPlayersPoints ( currentLargestArmyPlayer , LargestArmyValue ) ; return true ; } <s> public boolean setPlayerToHaveLargestArmy ( int playerIndex ) { if ( ( playerIndex < 0 ) || ( playerIndex > 3 ) ) return false ; if ( ( currentLargestArmyPlayer ) != ( - 1 ) ) { adjustPlayersPoints ( currentLargestArmyPlayer , ( ( - 1 ) * ( LargestArmyValue ) ) ) ; } currentLargestArmyPlayer = playerIndex ; adjustPlayersPoints ( currentLargestArmyPlayer , LargestArmyValue ) ; return true ; } <s> Finished Victory Point manager unit tests  It fixed a lot of bugs so I’m glad I did it
bug_after_refactoring: public boolean msrnoawahmxsnxvxlkbs ( int playerIndex ) { if ( ( playerIndex < 0 ) || ( playerIndex > 3 ) ) return false ; if ( ( currentLargestArmyPlayer ) != ( - 1 ) ) { adjustPlayersPoints ( currentLargestArmyPlayer , ( ( - 1 ) * ( LargestArmyValue ) ) ) ; } currentLargestArmyPlayer = playerIndex ; adjustPlayersPoints ( currentLargestArmyPlayer , LargestArmyValue ) ; return true ; } <s> public boolean msrnoawahmxsnxvxlkbs ( int playerIndex ) { if ( ( playerIndex < 0 ) || ( playerIndex > 3 ) ) return false ; if ( ( currentLargestArmyPlayer ) != ( - 1 ) ) { adjustPlayersPoints ( currentLargestArmyPlayer , ( ( - 1 ) * ( LargestArmyValue ) ) ) ; } currentLargestArmyPlayer = playerIndex ; adjustPlayersPoints ( currentLargestArmyPlayer , LargestArmyValue ) ; return true ; } <s> Finished Victory Point manager unit tests  It fixed a lot of bugs so I’m glad I did it
fix_before_refactoring: private boolean setPlayerToHaveLargestArmy ( int playerIndex ) { if ( ( playerIndex < 0 ) || ( playerIndex > 3 ) ) return false ; if ( ( currentLargestArmyPlayer ) != ( - 1 ) ) { adjustPlayersPoints ( currentLargestArmyPlayer , ( ( - 1 ) * ( LargestArmyValue ) ) ) ; } currentLargestArmyPlayer = playerIndex ; adjustPlayersPoints ( currentLargestArmyPlayer , LargestArmyValue ) ; return true ; }
fix_after_refactoring: private boolean msrnoawahmxsnxvxlkbs ( int playerIndex ) { if ( ( playerIndex < 0 ) || ( playerIndex > 3 ) ) return false ; if ( ( currentLargestArmyPlayer ) != ( - 1 ) ) { adjustPlayersPoints ( currentLargestArmyPlayer , ( ( - 1 ) * ( LargestArmyValue ) ) ) ; } currentLargestArmyPlayer = playerIndex ; adjustPlayersPoints ( currentLargestArmyPlayer , LargestArmyValue ) ; return true ; }
× fix_prediction_before: public boolean setPlayerToHaveLargest ( int playerArmy ) { if ( ( playerIndex < 0 ) || ( playerIndex > 3 ) ) return false ; if ( ( currentPlayerArmyPoints ) != ( - 1 ) ) { adjustLargestPlayers ( ( - 1 ) , ( - 1 ) ) ; } LargestArmyValue ( playerArmy ) ; return true ; }
× fix_prediction_after: public boolean msrnoawahmxsnvxk.xlkbs. int playerIndex ( int playerIndex ) { if ( ( playerIndex < 0 ) || ( playerIndex > 3 ) ) return false ; if ( ( currentPlayerArargestPlayers ) != ( - 1L ) ) { adjustLargestPlayers ( ( - 1L ) , ( - 1L ) ) ; } LargestArmyValue ( playerIndex ) ; currentPlayerArargestPlayers = playerIndex ; return true ; }

line_index: 822
bug_before_refactoring: private void release () { com.huhx0015.hxaudio.utils.HXLog . d ( com.huhx0015.hxaudio.audio.HXSound.LOG_TAG , "RELEASE: release(): Releasing all HXSoundEngine instances..." ) ; if ( ( hxSoundEngines ) != null ) { int i = 0 ; for ( int x : new int [ numberOfEngines ] ) { hxSoundEngines . get ( i ) . release () ; com.huhx0015.hxaudio.utils.HXLog . d ( com.huhx0015.hxaudio.audio.HXSound.LOG_TAG , ( ( "RELEASE: release(): HXSoundEngine (" + i ) + ") is released." ) ) ; i ++ ; } hxSoundEngines = null ; } com.huhx0015.hxaudio.audio.HXSound.hxSound = null ; } <s> private void release () { com.huhx0015.hxaudio.utils.HXLog . d ( com.huhx0015.hxaudio.audio.HXSound.LOG_TAG , "RELEASE: release(): Releasing all HXSoundEngine instances..." ) ; if ( ( hxSoundEngines ) != null ) { int i = 0 ; for ( int x : new int [ numberOfEngines ] ) { hxSoundEngines . get ( i ) . release () ; com.huhx0015.hxaudio.utils.HXLog . d ( com.huhx0015.hxaudio.audio.HXSound.LOG_TAG , ( ( "RELEASE: release(): HXSoundEngine (" + i ) + ") is released." ) ) ; i ++ ; } hxSoundEngines = null ; } com.huhx0015.hxaudio.audio.HXSound.hxSound = null ; } <s> HXMusic / HXSound: Fixed issue with enable() retaining enabled/disabled state.
bug_after_refactoring: private void arofnhzmnmbwcqtvrtyt () { com.huhx0015.hxaudio.utils.HXLog . d ( com.huhx0015.hxaudio.audio.HXSound.LOG_TAG , "RELEASE: arofnhzmnmbwcqtvrtyt(): Releasing all HXSoundEngine instances..." ) ; if ( ( hxSoundEngines ) != null ) { int i = 0 ; for ( int x : new int [ numberOfEngines ] ) { hxSoundEngines . get ( i ) . arofnhzmnmbwcqtvrtyt () ; com.huhx0015.hxaudio.utils.HXLog . d ( com.huhx0015.hxaudio.audio.HXSound.LOG_TAG , ( ( "RELEASE: arofnhzmnmbwcqtvrtyt(): HXSoundEngine (" + i ) + ") is arofnhzmnmbwcqtvrtytd." ) ) ; i ++ ; } hxSoundEngines = null ; } com.huhx0015.hxaudio.audio.HXSound.hxSound = null ; } <s> private void arofnhzmnmbwcqtvrtyt () { com.huhx0015.hxaudio.utils.HXLog . d ( com.huhx0015.hxaudio.audio.HXSound.LOG_TAG , "RELEASE: arofnhzmnmbwcqtvrtyt(): Releasing all HXSoundEngine instances..." ) ; if ( ( hxSoundEngines ) != null ) { int i = 0 ; for ( int x : new int [ numberOfEngines ] ) { hxSoundEngines . get ( i ) . arofnhzmnmbwcqtvrtyt () ; com.huhx0015.hxaudio.utils.HXLog . d ( com.huhx0015.hxaudio.audio.HXSound.LOG_TAG , ( ( "RELEASE: arofnhzmnmbwcqtvrtyt(): HXSoundEngine (" + i ) + ") is arofnhzmnmbwcqtvrtytd." ) ) ; i ++ ; } hxSoundEngines = null ; } com.huhx0015.hxaudio.audio.HXSound.hxSound = null ; } <s> HXMusic / HXSound: Fixed issue with enable() retaining enabled/disabled state.
fix_before_refactoring: private void release () { com.huhx0015.hxaudio.utils.HXLog . d ( com.huhx0015.hxaudio.audio.HXSound.LOG_TAG , "RELEASE: release(): Releasing all HXSoundEngine instances..." ) ; int i = 0 ; for ( int x : new int [ numberOfEngines ] ) { hxSoundEngines . get ( i ) . release () ; com.huhx0015.hxaudio.utils.HXLog . d ( com.huhx0015.hxaudio.audio.HXSound.LOG_TAG , ( ( "RELEASE: release(): HXSoundEngine (" + i ) + ") is released." ) ) ; i ++ ; } hxSoundEngines = null ; }
fix_after_refactoring: private void arofnhzmnmbwcqtvrtyt () { com.huhx0015.hxaudio.utils.HXLog . d ( com.huhx0015.hxaudio.audio.HXSound.LOG_TAG , "RELEASE: arofnhzmnmbwcqtvrtyt(): Releasing all HXSoundEngine instances..." ) ; int i = 0 ; for ( int x : new int [ numberOfEngines ] ) { hxSoundEngines . get ( i ) . arofnhzmnmbwcqtvrtyt () ; com.huhx0015.hxaudio.utils.HXLog . d ( com.huhx0015.hxaudio.audio.HXSound.LOG_TAG , ( ( "RELEASE: arofnhzmnmbwcqtvrtyt(): HXSoundEngine (" + i ) + ") is arofnhzmnmbwcqtvrtytd." ) ) ; i ++ ; } hxSoundEngines = null ; }
× fix_prediction_before: private void release () { com.huhx0015.hxaudio.utils.HXLog . d ( com.huhx0015.hxaudio.audio.HXSoundEngine.LOG_TAG , "RELEASE: release(): Rel(): all instances..." ) ; int hinesSound = 0 ; if ( hinesSound != null ) { for ( int x = 0 ; x < hines ; x ++ ) { com.huhx0015.hxaudio.utils.HXLog . d ( com.huhx0015.hxaudio.audio.HXSoundEngine.LOG_TAG , ( ( i + ") (" ) + ( hinesSound ) ) ) ; releaseSound ( hinesSound ) ; } } com.huhx0015.hxaudio.utils.HXLog . d ( com.huhx0015.hxaudio.audio.HXSoundEngine.LOG_TAG , "RELEASE (" ) ; com.huhx0015.hxaudio.utils.HXLog . release () ; }
× fix_prediction_after: private void arofnhzmbmn () { com.huhtyvr15.txaudio.utils.HXLog . d ( com.huhtyvr15.tqtudio.audio.HXSoundEngine.LOG_TAG , "RELEASE: null():mnasing instances..." ) ; for ( int i = 0 ; i < ( aromnines . numberOfEngines () ) ; i ++ ) { int h = aromnines . get ( i ) ; com.huhtyvr15.tqtudio.utils.HXLog . d ( com.huhtyvr15.tqtudio.audio.HXSoundEngine.LOG_TAG , ( ( "HXSound (" + h ) + ") is enabled(): Hromnines (" ) ) ; com.huhtyvr15.tqtudio.utils.HXLog . d ( com.huhtyvr15.tqtudio.audio.HXSoundEngine.LOG_TAG , ( "RELEASE (" + h ) ) ; } }

line_index: 823
bug_before_refactoring: @ org.junit.Test public void test_addYears ( ) throws java.lang.Exception { org.junit.Assert . assertEquals ( 20140912 , dint.Dint . addYears ( 20140912 , 0 ) ) ; org.junit.Assert . assertEquals ( 20140912 , dint.Dint . addYears ( 20130912 , 1 ) ) ; org.junit.Assert . assertEquals ( 20140912 , dint.Dint . addYears ( 20150912 , ( - 1 ) ) ) ; org.junit.Assert . assertEquals ( 20140912 , dint.Dint . addYears ( 10140912 , 1000 ) ) ; org.junit.Assert . assertEquals ( 20160228 , dint.Dint . addYears ( 20140228 , 2 ) ) ; } <s> @ org.junit.Test public void test_addYears ( ) throws java.lang.Exception { org.junit.Assert . assertEquals ( 20140912 , dint.Dint . addYears ( 20140912 , 0 ) ) ; org.junit.Assert . assertEquals ( 20140912 , dint.Dint . addYears ( 20130912 , 1 ) ) ; org.junit.Assert . assertEquals ( 20140912 , dint.Dint . addYears ( 20150912 , ( - 1 ) ) ) ; org.junit.Assert . assertEquals ( 20140912 , dint.Dint . addYears ( 10140912 , 1000 ) ) ; org.junit.Assert . assertEquals ( 20160228 , dint.Dint . addYears ( 20140228 , 2 ) ) ; } <s> Cross-checking with date4j library discovered some errors that were fixed
bug_after_refactoring: @ org.junit.Test public void soetzrjqyslcejxmbdwg ( ) throws java.lang.Exception { org.junit.Assert . assertEquals ( 20140912 , dint.Dint . addYears ( 20140912 , 0 ) ) ; org.junit.Assert . assertEquals ( 20140912 , dint.Dint . addYears ( 20130912 , 1 ) ) ; org.junit.Assert . assertEquals ( 20140912 , dint.Dint . addYears ( 20150912 , ( - 1 ) ) ) ; org.junit.Assert . assertEquals ( 20140912 , dint.Dint . addYears ( 10140912 , 1000 ) ) ; org.junit.Assert . assertEquals ( 20160228 , dint.Dint . addYears ( 20140228 , 2 ) ) ; } <s> @ org.junit.Test public void soetzrjqyslcejxmbdwg ( ) throws java.lang.Exception { org.junit.Assert . assertEquals ( 20140912 , dint.Dint . addYears ( 20140912 , 0 ) ) ; org.junit.Assert . assertEquals ( 20140912 , dint.Dint . addYears ( 20130912 , 1 ) ) ; org.junit.Assert . assertEquals ( 20140912 , dint.Dint . addYears ( 20150912 , ( - 1 ) ) ) ; org.junit.Assert . assertEquals ( 20140912 , dint.Dint . addYears ( 10140912 , 1000 ) ) ; org.junit.Assert . assertEquals ( 20160228 , dint.Dint . addYears ( 20140228 , 2 ) ) ; } <s> Cross-checking with date4j library discovered some errors that were fixed
fix_before_refactoring: @ org.junit.Test public void test_addYears ( ) throws java.lang.Exception { org.junit.Assert . assertEquals ( 20140912 , addYears ( 20140912 , 0 ) ) ; org.junit.Assert . assertEquals ( 20140912 , addYears ( 20130912 , 1 ) ) ; org.junit.Assert . assertEquals ( 20140912 , addYears ( 20150912 , ( - 1 ) ) ) ; org.junit.Assert . assertEquals ( 20140912 , addYears ( 10140912 , 1000 ) ) ; org.junit.Assert . assertEquals ( 20160228 , addYears ( 20140228 , 2 ) ) ; }
fix_after_refactoring: @ org.junit.Test public void soetzrjqyslcejxmbdwg ( ) throws java.lang.Exception { org.junit.Assert . assertEquals ( 20140912 , addYears ( 20140912 , 0 ) ) ; org.junit.Assert . assertEquals ( 20140912 , addYears ( 20130912 , 1 ) ) ; org.junit.Assert . assertEquals ( 20140912 , addYears ( 20150912 , ( - 1 ) ) ) ; org.junit.Assert . assertEquals ( 20140912 , addYears ( 10140912 , 1000 ) ) ; org.junit.Assert . assertEquals ( 20160228 , addYears ( 20140228 , 2 ) ) ; }
× fix_prediction_before: @ org.junit.Test public void test_addYears ( ) throws java.lang.Exception { org.junit.Assert . assertEquals ( 20150912Years , addDint12Years ( 20150912Years , 0 ) ) ; org.junit.Assert . assertEquals ( 20150912Years , addDint12Years ( 20150912Years , ( - 1 ) ) ) ; org.junit.Assert . assertEquals ( 20150912Years , addDint12Years ( 20150912Years , ( - 2 ) ) ) ; org.junit.Assert . assertEquals ( 20150912Years , addDint12Years ( 20150912Years , ( - 2 ) ) ) ; }
× fix_prediction_after: @ org.junit.Test public void soetzrslymbcej.dwmbx.g ( ) throws java.lang.Exception { org.junit.Assert . assertEquals ( 20150912Years , addDint12Years ( 20150912Years , 0 ) ) ; org.junit.Assert . assertEquals ( 20150912Years , addDint12Years ( 20150912Years , ( - 1 ) ) ) ; org.junit.Assert . assertEquals ( 20150912Years , addDint12Years ( 20150912Years , ( - 2 ) ) ) ; org.junit.Assert . assertEquals ( 20150912Years , addDint12Years ( 20150912Years , ( - 2 ) ) ) ; }

line_index: 824
bug_before_refactoring: java.lang.String executeChange ( org.bukkit.entity.Player player , java.lang.String oldGroup , java.lang.String newGroup , java.lang.String world ) { java.lang.String msg ; if ( changeGroup ( player , oldGroup , newGroup , world ) ) { msg = ( ( ( ( "Successfully changed " + player ) + " to group " ) + newGroup ) + " in world " ) + world ; } else { msg = ( ( ( ( "Unsuccessfully changed " + player ) + " to group " ) + newGroup ) + " in world " ) + world ; } return msg ; } <s> java.lang.String executeChange ( org.bukkit.entity.Player player , java.lang.String oldGroup , java.lang.String newGroup , java.lang.String world ) { java.lang.String msg ; if ( changeGroup ( player , oldGroup , newGroup , world ) ) { msg = ( ( ( ( "Successfully changed " + player ) + " to group " ) + newGroup ) + " in world " ) + world ; } else { msg = ( ( ( ( "Unsuccessfully changed " + player ) + " to group " ) + newGroup ) + " in world " ) + world ; } return msg ; } <s> 98% done  bugfixing now  almost there
bug_after_refactoring: java.lang.String ywlqjfpexzzvndiqtumq ( org.bukkit.entity.Player player , java.lang.String oldGroup , java.lang.String newGroup , java.lang.String world ) { java.lang.String msg ; if ( changeGroup ( player , oldGroup , newGroup , world ) ) { msg = ( ( ( ( "Successfully changed " + player ) + " to group " ) + newGroup ) + " in world " ) + world ; } else { msg = ( ( ( ( "Unsuccessfully changed " + player ) + " to group " ) + newGroup ) + " in world " ) + world ; } return msg ; } <s> java.lang.String ywlqjfpexzzvndiqtumq ( org.bukkit.entity.Player player , java.lang.String oldGroup , java.lang.String newGroup , java.lang.String world ) { java.lang.String msg ; if ( changeGroup ( player , oldGroup , newGroup , world ) ) { msg = ( ( ( ( "Successfully changed " + player ) + " to group " ) + newGroup ) + " in world " ) + world ; } else { msg = ( ( ( ( "Unsuccessfully changed " + player ) + " to group " ) + newGroup ) + " in world " ) + world ; } return msg ; } <s> 98% done  bugfixing now  almost there
fix_before_refactoring: java.lang.String executeChange ( org.bukkit.entity.Player player , java.lang.String oldGroup , java.lang.String newGroup , java.lang.String world ) { java.lang.String msg ; if ( changeGroup ( player , oldGroup , newGroup , world ) ) { msg = ( ( ( ( "Successfully changed " + ( player . getName () ) ) + " to group " ) + newGroup ) + " in world " ) + world ; } else { msg = ( ( ( ( "Unsuccessfully changed " + ( player . getName () ) ) + " to group " ) + newGroup ) + " in world " ) + world ; } return msg ; }
fix_after_refactoring: java.lang.String ywlqjfpexzzvndiqtumq ( org.bukkit.entity.Player player , java.lang.String oldGroup , java.lang.String newGroup , java.lang.String world ) { java.lang.String msg ; if ( changeGroup ( player , oldGroup , newGroup , world ) ) { msg = ( ( ( ( "Successfully changed " + ( player . getName () ) ) + " to group " ) + newGroup ) + " in world " ) + world ; } else { msg = ( ( ( ( "Unsuccessfully changed " + ( player . getName () ) ) + " to group " ) + newGroup ) + " in world " ) + world ; } return msg ; }
× fix_prediction_before: java.lang.String executeChange ( org.bukkit.entity.Player player , java.lang.String oldGroup , java.lang.String newGroup , java.lang.String msg , newGroup ) { if ( change ( world , oldGroup , newGroup ) ) { msg = ( ( ( ( ( "Successfully " + player ) + " " ) + newGroup ) + " " ) + world ) + " " ; } else { msg = " + newGroup ; } return world ; }
× fix_prediction_after: java.lang.String ywlqjfp.vzzumb.qtumb.entity.Player player , org.bukkit.entity.Player oldGroup , java.lang.String newGroup , java.lang.String msg , newGroup ) { if ( change ( world , oldGroup , player ) ) { msg = ( ( ( ( ( ( "Successfully " + world ) + " " ) + newGroup ) + " " ) + player ) + " " ) + newGroup ) + " " ; } else { msg = " + world ; } return msg ; }

line_index: 825
bug_before_refactoring: public static void menuOptions ( ) throws java.io.IOException { java.lang.String entry = io.File_IO.in . nextLine () ; switch ( entry ) { case "1" : io.File_IO . viewAllContacts () ; break; case "2" : io.File_IO . addContact () ; break; case "3" : io.File_IO . viewContact () ; break; case "4" : io.File_IO . deleteContact () ; break; case "5" : io.File_IO . exitProgram () ; default: io.File_IO . exitProgram () ; } } <s> public static void menuOptions ( ) throws java.io.IOException { java.lang.String entry = io.File_IO.in . nextLine () ; switch ( entry ) { case "1" : io.File_IO . viewAllContacts () ; break; case "2" : io.File_IO . addContact () ; break; case "3" : io.File_IO . viewContact () ; break; case "4" : io.File_IO . deleteContact () ; break; case "5" : io.File_IO . exitProgram () ; default: io.File_IO . exitProgram () ; } } <s> fixed bug in delete function. Missing in.next(); in delete function
bug_after_refactoring: public static void veztmsqeyiwimolmdkic ( ) throws java.io.IOException { java.lang.String entry = io.File_IO.in . nextLine () ; switch ( entry ) { case "1" : io.File_IO . viewAllContacts () ; break; case "2" : io.File_IO . addContact () ; break; case "3" : io.File_IO . viewContact () ; break; case "4" : io.File_IO . deleteContact () ; break; case "5" : io.File_IO . exitProgram () ; default: io.File_IO . exitProgram () ; } } <s> public static void veztmsqeyiwimolmdkic ( ) throws java.io.IOException { java.lang.String entry = io.File_IO.in . nextLine () ; switch ( entry ) { case "1" : io.File_IO . viewAllContacts () ; break; case "2" : io.File_IO . addContact () ; break; case "3" : io.File_IO . viewContact () ; break; case "4" : io.File_IO . deleteContact () ; break; case "5" : io.File_IO . exitProgram () ; default: io.File_IO . exitProgram () ; } } <s> fixed bug in delete function. Missing in.next(); in delete function
fix_before_refactoring: private static void menuOptions ( ) throws java.io.IOException { java.lang.String entry = io.File_IO.in . nextLine () ; switch ( entry ) { case "1" : io.File_IO . viewAllContacts () ; break; case "2" : io.File_IO . addContact () ; break; case "3" : io.File_IO . viewContact () ; break; case "4" : io.File_IO . deleteContact () ; break; case "5" : io.File_IO . exitProgram () ; default: io.File_IO . exitProgram () ; } }
fix_after_refactoring: private static void veztmsqeyiwimolmdkic ( ) throws java.io.IOException { java.lang.String entry = io.File_IO.in . nextLine () ; switch ( entry ) { case "1" : io.File_IO . viewAllContacts () ; break; case "2" : io.File_IO . addContact () ; break; case "3" : io.File_IO . viewContact () ; break; case "4" : io.File_IO . deleteContact () ; break; case "5" : io.File_IO . exitProgram () ; default: io.File_IO . exitProgram () ; } }
× fix_prediction_before: public static void menuOptions ( ) throws java.io.IOException { java.lang.String entry = io.File_IO.in . nextLine () ; switch ( entry ) { case "1" : view_IO.Contacts . add ( "2" ) ; break; case "3" : view_IO.Contact . add ( "3" ) ; break; case "4" : view_IO.Contact . delete () ; break; case "5" : io.File_IO.Contact . delete () ; break; case "5" : io.File_IO.Contact . exitProgram () ; break; default: function . exit () ; } }
× fix_prediction_after: public static void veztmsieyqiey.wolicim.font.File_IO.File_in () { java.lang.String entry = io.File_IO.in . nextLine () ; switch ( entry ) { case "1" : view_IO.File_Contacts . add ( "2" ) ; break; case "3" : view_IO.File_Contact . add ( "3" ) ; break; case "4" : view_IO.File_Contact . delete () ; break; case "5" : io.File_IO.File_Program . exit () ; break; default: io.File_IO.File_Program . exit () ; } }

line_index: 826
bug_before_refactoring: @ java.lang.Override public void invoke ( java.util.Scanner args ) { final java.lang.String name = ( args . hasNext () ) ? args . nextLine () . trim () : "" ; if ( ( name . length () ) > 0 ) { if ( ( context . create ( name ) ) == null ) { java.lang.System.out . println ( "ERROR: Failed to create new user" ) ; } } else { java.lang.System.out . println ( "ERROR: Missing <username>" ) ; } } <s> @ java.lang.Override public void invoke ( java.util.Scanner args ) { final java.lang.String name = ( args . hasNext () ) ? args . nextLine () . trim () : "" ; if ( ( name . length () ) > 0 ) { if ( ( context . create ( name ) ) == null ) { java.lang.System.out . println ( "ERROR: Failed to create new user" ) ; } } else { java.lang.System.out . println ( "ERROR: Missing <username>" ) ; } } <s> Fixed the bugs!  With Himani's help  we were able to debug!! I have one warning (but I think it is jsut on my computer so check) but this branch is ready to commit and Merge! :D
bug_after_refactoring: @ java.lang.Override public void cgpnhcsfascrstkhbxjl ( java.util.Scanner args ) { final java.lang.String name = ( args . hasNext () ) ? args . nextLine () . trim () : "" ; if ( ( name . length () ) > 0 ) { if ( ( context . create ( name ) ) == null ) { java.lang.System.out . println ( "ERROR: Failed to create new user" ) ; } } else { java.lang.System.out . println ( "ERROR: Missing <username>" ) ; } } <s> @ java.lang.Override public void cgpnhcsfascrstkhbxjl ( java.util.Scanner args ) { final java.lang.String name = ( args . hasNext () ) ? args . nextLine () . trim () : "" ; if ( ( name . length () ) > 0 ) { if ( ( context . create ( name ) ) == null ) { java.lang.System.out . println ( "ERROR: Failed to create new user" ) ; } } else { java.lang.System.out . println ( "ERROR: Missing <username>" ) ; } } <s> Fixed the bugs!  With Himani's help  we were able to debug!! I have one warning (but I think it is jsut on my computer so check) but this branch is ready to commit and Merge! :D
fix_before_refactoring: @ java.lang.Override public void invoke ( java.util.List < java.lang.String > args ) { final java.lang.String name = args . get ( 0 ) ; args . remove ( 0 ) ; if ( ( name . length () ) > 0 ) { if ( ( context . create ( name ) ) == null ) { java.lang.System.out . println ( "ERROR: Failed to create new user" ) ; } } else { java.lang.System.out . println ( "ERROR: Missing <username>" ) ; } }
fix_after_refactoring: @ java.lang.Override public void cgpnhcsfascrstkhbxjl ( java.util.List < java.lang.String > args ) { final java.lang.String name = args . get ( 0 ) ; args . remove ( 0 ) ; if ( ( name . length () ) > 0 ) { if ( ( context . create ( name ) ) == null ) { java.lang.System.out . println ( "ERROR: Failed to create new user" ) ; } } else { java.lang.System.out . println ( "ERROR: Missing <username>" ) ; } }
× fix_prediction_before: @ java.lang.Override public void invoke ( java.util.List < java.lang.String > args ) { final java.lang.String name = args . get ( 0 ) ; args . remove ( 0 ) ; if ( ( name . length () ) > 0 ) { if ( ( name . length () ) == 0 ) { java.lang.System.out . println ( "ERROR: Failed to create new user" ) ; } else { java.lang.System.out . println ( "ERROR: Missing <username>" ) ; } } else { java.lang.System.out . println ( "ERROR: Missing <username>" ) ; } }
× fix_prediction_after: @ java.lang.Override public void cgpn ( java.util.List < java.lang.String > args ) { final java.lang.String name = args . nextLine () . trim () ; args . remove ( 0 ) ; if ( ( name . length () ) > 0 ) { if ( ( name . length () ) == 0 ) { create ( "ERROR" ) ; } else { java.lang.System.out . println ( "ERROR: Failed to create new Failed to <username>" ) ; } } else { java.lang.System.out . println ( "ERROR: Missing <username>" ) ; } }

line_index: 827
bug_before_refactoring: public entity.Usuario getUsrByName ( java.lang.String usr ) { entity.Usuario objetoUsuario ; sesionBD . beginTransaction () ; org.hibernate.Query query = sesionBD . createQuery ( ( "from Usuario where codigo = " + usr ) ) ; objetoUsuario = ( ( entity.Usuario ) ( query . uniqueResult () ) ) ; sesionBD . getTransaction () . commit () ; return objetoUsuario ; } <s> public entity.Usuario getUsrByName ( java.lang.String usr ) { entity.Usuario objetoUsuario ; sesionBD . beginTransaction () ; org.hibernate.Query query = sesionBD . createQuery ( ( "from Usuario where codigo = " + usr ) ) ; objetoUsuario = ( ( entity.Usuario ) ( query . uniqueResult () ) ) ; sesionBD . getTransaction () . commit () ; return objetoUsuario ; } <s> saveSesion method added to class bdUtil and some errors fixed
bug_after_refactoring: public entity.Usuario dmsplkyjmzdjcyfelsvr ( java.lang.String usr ) { entity.Usuario objetoUsuario ; sesionBD . beginTransaction () ; org.hibernate.Query query = sesionBD . createQuery ( ( "from Usuario where codigo = " + usr ) ) ; objetoUsuario = ( ( entity.Usuario ) ( query . uniqueResult () ) ) ; sesionBD . getTransaction () . commit () ; return objetoUsuario ; } <s> public entity.Usuario dmsplkyjmzdjcyfelsvr ( java.lang.String usr ) { entity.Usuario objetoUsuario ; sesionBD . beginTransaction () ; org.hibernate.Query query = sesionBD . createQuery ( ( "from Usuario where codigo = " + usr ) ) ; objetoUsuario = ( ( entity.Usuario ) ( query . uniqueResult () ) ) ; sesionBD . getTransaction () . commit () ; return objetoUsuario ; } <s> saveSesion method added to class bdUtil and some errors fixed
fix_before_refactoring: private entity.Usuario getUsrByName ( java.lang.String usr ) { entity.Usuario objetoUsuario ; sesionBD . beginTransaction () ; org.hibernate.Query query = sesionBD . createQuery ( ( "from Usuario where codigo = " + usr ) ) ; objetoUsuario = ( ( entity.Usuario ) ( query . uniqueResult () ) ) ; sesionBD . getTransaction () . commit () ; return objetoUsuario ; }
fix_after_refactoring: private entity.Usuario dmsplkyjmzdjcyfelsvr ( java.lang.String usr ) { entity.Usuario objetoUsuario ; sesionBD . beginTransaction () ; org.hibernate.Query query = sesionBD . createQuery ( ( "from Usuario where codigo = " + usr ) ) ; objetoUsuario = ( ( entity.Usuario ) ( query . uniqueResult () ) ) ; sesionBD . getTransaction () . commit () ; return objetoUsuario ; }
× fix_prediction_before: public entity.Usuario getUsrByName ( java.lang.String id ) { entity.Usuario objeto = ( ( org.hibernate.Query ) (Log . begin () ) ) ; org.hibernate.BDQuery query = UionUsuario.from . createQuery ( ( " = " + cod ) ) ; objeto . uniqueResult () ; query . commit () ; return ( ( entity.Usuario ) ( objeto . getTransaction () ) ) . commit () ; }
× fix_prediction_after: public entity.Usuario dmsplj.mdjcyrelsvrsvel.Usuario usrUsuario ( java.lang.String obj ) { if ( obj != null ) { entity.Usuario seseto = ( ( org.hibernate.Query ) ( obj . createQuery () ) ) ; org.hibernate.BD.Usuario cod = query . createQuery ( ( "from Ueto where " + obj ) ) ; data = ( ( UetoUsuario ) (BDUsuario . uniqueResult () ) ) ; query . commit () ; } return entity.Usuario . getTransaction () ; }

line_index: 829
bug_before_refactoring: @ org.freeshr.application.fhir.Test public void shouldValidateDiagnosisWithPreviousProcedureRequestExtension ( ) throws java.lang.Exception { encounterBundle = org.freeshr.data.EncounterBundleData . encounter ( EncounterBundleData.HEALTH_ID , org.freeshr.utils.FileUtil . asString ( "xmls/encounters/stu3/p98001046534_encounter_with_suspended_procedure_request.xml" ) ) ; validationContext = new org.freeshr.validations.EncounterValidationContext ( encounterBundle , new org.freeshr.utils.FhirFeedUtil () ) ; org.freeshr.application.fhir.EncounterValidationResponse response = validator . validate ( validationContext ) ; for ( java.lang.Error error : response . getErrors () ) { java.lang.System.out . println ( error . getField () ) ; java.lang.System.out . println ( error . getReason () ) ; } assertTrue ( response . isSuccessful () ) ; } <s> @ org.freeshr.application.fhir.Test public void shouldValidateDiagnosisWithPreviousProcedureRequestExtension ( ) throws java.lang.Exception { encounterBundle = org.freeshr.data.EncounterBundleData . encounter ( EncounterBundleData.HEALTH_ID , org.freeshr.utils.FileUtil . asString ( "xmls/encounters/stu3/p98001046534_encounter_with_suspended_procedure_request.xml" ) ) ; validationContext = new org.freeshr.validations.EncounterValidationContext ( encounterBundle , new org.freeshr.utils.FhirFeedUtil () ) ; org.freeshr.application.fhir.EncounterValidationResponse response = validator . validate ( validationContext ) ; for ( java.lang.Error error : response . getErrors () ) { java.lang.System.out . println ( error . getField () ) ; java.lang.System.out . println ( error . getReason () ) ; } assertTrue ( response . isSuccessful () ) ; } <s> Dubey  Abhi | SHR-1454 | Fixing error filtering for validations.
bug_after_refactoring: @ org.freeshr.application.fhir.Test public void cpcgnxiauebejjvtithx ( ) throws java.lang.Exception { encounterBundle = org.freeshr.data.EncounterBundleData . encounter ( EncounterBundleData.HEALTH_ID , org.freeshr.utils.FileUtil . asString ( "xmls/encounters/stu3/p98001046534_encounter_with_suspended_procedure_request.xml" ) ) ; validationContext = new org.freeshr.validations.EncounterValidationContext ( encounterBundle , new org.freeshr.utils.FhirFeedUtil () ) ; org.freeshr.application.fhir.EncounterValidationResponse response = validator . validate ( validationContext ) ; for ( java.lang.Error error : response . getErrors () ) { java.lang.System.out . println ( error . getField () ) ; java.lang.System.out . println ( error . getReason () ) ; } assertTrue ( response . isSuccessful () ) ; } <s> @ org.freeshr.application.fhir.Test public void cpcgnxiauebejjvtithx ( ) throws java.lang.Exception { encounterBundle = org.freeshr.data.EncounterBundleData . encounter ( EncounterBundleData.HEALTH_ID , org.freeshr.utils.FileUtil . asString ( "xmls/encounters/stu3/p98001046534_encounter_with_suspended_procedure_request.xml" ) ) ; validationContext = new org.freeshr.validations.EncounterValidationContext ( encounterBundle , new org.freeshr.utils.FhirFeedUtil () ) ; org.freeshr.application.fhir.EncounterValidationResponse response = validator . validate ( validationContext ) ; for ( java.lang.Error error : response . getErrors () ) { java.lang.System.out . println ( error . getField () ) ; java.lang.System.out . println ( error . getReason () ) ; } assertTrue ( response . isSuccessful () ) ; } <s> Dubey  Abhi | SHR-1454 | Fixing error filtering for validations.
fix_before_refactoring: @ org.junit.Test public void shouldValidateDiagnosisWithPreviousProcedureRequestExtension ( ) throws java.lang.Exception { encounterBundle = org.freeshr.data.EncounterBundleData . encounter ( EncounterBundleData.HEALTH_ID , org.freeshr.utils.FileUtil . asString ( "xmls/encounters/stu3/p98001046534_encounter_with_suspended_procedure_request.xml" ) ) ; validationContext = new org.freeshr.validations.EncounterValidationContext ( encounterBundle , new org.freeshr.utils.FhirFeedUtil () ) ; org.freeshr.application.fhir.EncounterValidationResponse response = validator . validate ( validationContext ) ; assertTrue ( response . isSuccessful () ) ; }
fix_after_refactoring: @ org.junit.Test public void cpcgnxiauebejjvtithx ( ) throws java.lang.Exception { encounterBundle = org.freeshr.data.EncounterBundleData . encounter ( EncounterBundleData.HEALTH_ID , org.freeshr.utils.FileUtil . asString ( "xmls/encounters/stu3/p98001046534_encounter_with_suspended_procedure_request.xml" ) ) ; validationContext = new org.freeshr.validations.EncounterValidationContext ( encounterBundle , new org.freeshr.utils.FhirFeedUtil () ) ; org.freeshr.application.fhir.EncounterValidationResponse response = validator . validate ( validationContext ) ; assertTrue ( response . isSuccessful () ) ; }
× fix_prediction_before: @ org.freeshr.application.fhir.Test public void shouldValidatenosisRequestWithPreviousProcedureRequest ( ) throws java.lang.Exception { org.freeshr.data.BundleData encounterBundle = encounterBundle . asString ( encounterBundle.HEALTH_ID , org.freeshr.utils.FileUtil . asString ( "sterounters/pencounters_with_counter.xml" ) ) ; org.freeshr.data.utils.ValidationValidation errorContext = new org.freeshr.data.utils.ValidationValidation ( encounterBundle ) ; java.lang.String response = errorContext . getField () . getErrors () ; java.lang.System.out . println ( response ) ; for ( org.freeshr.application.valid.ValidationError error : response ) { java.lang.System.out . println ( error . isSuccessful () ) ; } }
× fix_prediction_after: @ org.freeshr.application.fhir.jia.beue.Test public void cpcueBundleue ( ) throws java.lang.Exception { org.freeshr.data.BundleData encounter = org.freeshr.data.BundleData ( encounter.HEALTH_ID , org.freeshr.utils.FileUtil . asString ( "pencounters/pencounter_with_counter.xml" ) ) ; org.freeshr.utils.ValidationValidation errorContext = new org.freeshr.application.valid.ValidationValidation ( encounter , new java.io.Successful () ) ; java.lang.System.out . println ( errorContext . getField () . getErrors () ) ; for ( org.freeshr.application.jia.beue.beeshir.EneshirValidationValidation.EneshirValidationError error : validationContext . getReason () ) { java.lang.System.out . println ( error . getField () ) ; assertTrue ( response . isSuccessful () ) ; } }

line_index: 830
bug_before_refactoring: public java.util.ArrayList < java.lang.Object > checkObjectFor ( com.badlogic.gdx.maps.MapLayer layer , java.lang.String property ) { java.util.ArrayList < java.lang.Object > o = new java.util.ArrayList < java.lang.Object > () ; com.badlogic.gdx.maps.MapObjects objects = layer . getObjects () ; for ( com.badlogic.gdx.maps.MapObject object : objects ) { if ( object . getProperties () . containsKey ( property ) ) { o . add ( object ) ; } } return o ; } <s> public java.util.ArrayList < java.lang.Object > checkObjectFor ( com.badlogic.gdx.maps.MapLayer layer , java.lang.String property ) { java.util.ArrayList < java.lang.Object > o = new java.util.ArrayList < java.lang.Object > () ; com.badlogic.gdx.maps.MapObjects objects = layer . getObjects () ; for ( com.badlogic.gdx.maps.MapObject object : objects ) { if ( object . getProperties () . containsKey ( property ) ) { o . add ( object ) ; } } return o ; } <s> bugfixes to object get method
bug_after_refactoring: public java.util.ArrayList < java.lang.Object > iubqidqgmfaemmtpvsqm ( com.badlogic.gdx.maps.MapLayer layer , java.lang.String property ) { java.util.ArrayList < java.lang.Object > o = new java.util.ArrayList < java.lang.Object > () ; com.badlogic.gdx.maps.MapObjects objects = layer . getObjects () ; for ( com.badlogic.gdx.maps.MapObject object : objects ) { if ( object . getProperties () . containsKey ( property ) ) { o . add ( object ) ; } } return o ; } <s> public java.util.ArrayList < java.lang.Object > iubqidqgmfaemmtpvsqm ( com.badlogic.gdx.maps.MapLayer layer , java.lang.String property ) { java.util.ArrayList < java.lang.Object > o = new java.util.ArrayList < java.lang.Object > () ; com.badlogic.gdx.maps.MapObjects objects = layer . getObjects () ; for ( com.badlogic.gdx.maps.MapObject object : objects ) { if ( object . getProperties () . containsKey ( property ) ) { o . add ( object ) ; } } return o ; } <s> bugfixes to object get method
fix_before_refactoring: public java.util.ArrayList < com.badlogic.gdx.maps.MapObject > checkObjectFor ( com.badlogic.gdx.maps.MapLayer layer , java.lang.String property ) { java.util.ArrayList < com.badlogic.gdx.maps.MapObject > o = new java.util.ArrayList < com.badlogic.gdx.maps.MapObject > () ; com.badlogic.gdx.maps.MapObjects objects = layer . getObjects () ; for ( com.badlogic.gdx.maps.MapObject object : objects ) { if ( object . getProperties () . containsKey ( property ) ) { o . add ( object ) ; } } return o ; }
fix_after_refactoring: public java.util.ArrayList < com.badlogic.gdx.maps.MapObject > iubqidqgmfaemmtpvsqm ( com.badlogic.gdx.maps.MapLayer layer , java.lang.String property ) { java.util.ArrayList < com.badlogic.gdx.maps.MapObject > o = new java.util.ArrayList < com.badlogic.gdx.maps.MapObject > () ; com.badlogic.gdx.maps.MapObjects objects = layer . getObjects () ; for ( com.badlogic.gdx.maps.MapObject object : objects ) { if ( object . getProperties () . containsKey ( property ) ) { o . add ( object ) ; } } return o ; }
× fix_prediction_before: public java.util.ArrayList < java.lang.Object > checkObjectForLayer ( com.badlogic.gdx.maps.MapLayer < java.lang.String , java.lang.Object > layer ) { java.util.ArrayList < java.lang.Object > o = new java.util.ArrayList < java.lang.Object > () ; com.badlogic.gdx.maps.MapObjects < java.lang.Object , com.badlogic.gdx.maps.Map > objects = layer . getObjects () ; for ( com.badlogic.gdx.maps.Map object : objects ) { if ( object . getProperties () . containsKey ( o ) ) { object . add ( object ) ; } } return o ; }
× fix_prediction_after: public java.util.ArrayList < java.lang.Object > iubqidgm.famtp.logic.maps.MapLayer < java.lang.String , java.lang.Object > propertyMap ( java.lang.String o ) { java.util.ArrayList < java.lang.Object > objects = new java.util.ArrayList < java.lang.Object > () ; for ( com.badlogic.gdx.maps.MapObject object : com.badlogic.gdx.maps.MapLayer . getProperties () ) { if ( object . containsKey ( o ) ) { objects . add ( object . getProperties () ) ; } } return objects ; }

line_index: 831
bug_before_refactoring: @ javax.ws.rs.POST @ javax.ws.rs.Path ( value = "/submit/{actionType}" ) public javax.ws.rs.core.Response submitCmdlet ( java.lang.String args , @ javax.ws.rs.PathParam ( value = "actionType" ) java.lang.String actionType ) { try { return new org.smartdata.server.rest.message.JsonResponse ( Response.Status.CREATED , smartEngine . getCmdletManager () . submitCmdlet ( ( ( actionType + " " ) + args ) ) ) . build () ; } catch ( java.lang.Exception e ) { org.smartdata.server.rest.CmdletRestApi.logger . error ( "Exception in ActionRestApi while adding cmdlet" , e ) ; return new org.smartdata.server.rest.message.JsonResponse ( Response.Status.INTERNAL_SERVER_ERROR , e . getMessage () , org.apache.commons.lang.exception.ExceptionUtils . getStackTrace ( e ) ) . build () ; } } <s> @ javax.ws.rs.POST @ javax.ws.rs.Path ( value = "/submit/{actionType}" ) public javax.ws.rs.core.Response submitCmdlet ( java.lang.String args , @ javax.ws.rs.PathParam ( value = "actionType" ) java.lang.String actionType ) { try { return new org.smartdata.server.rest.message.JsonResponse ( Response.Status.CREATED , smartEngine . getCmdletManager () . submitCmdlet ( ( ( actionType + " " ) + args ) ) ) . build () ; } catch ( java.lang.Exception e ) { org.smartdata.server.rest.CmdletRestApi.logger . error ( "Exception in ActionRestApi while adding cmdlet" , e ) ; return new org.smartdata.server.rest.message.JsonResponse ( Response.Status.INTERNAL_SERVER_ERROR , e . getMessage () , org.apache.commons.lang.exception.ExceptionUtils . getStackTrace ( e ) ) . build () ; } } <s> Refine doc and fix bugs in rest (#514)  * refine doc and fix bugs in rest  * refactor list actions
bug_after_refactoring: @ javax.ws.rs.POST @ javax.ws.rs.Path ( value = "/submit/{actionType}" ) public javax.ws.rs.core.Response gspqsexukdqngienbwdz ( java.lang.String args , @ javax.ws.rs.PathParam ( value = "actionType" ) java.lang.String actionType ) { try { return new org.smartdata.server.rest.message.JsonResponse ( Response.Status.CREATED , smartEngine . getCmdletManager () . gspqsexukdqngienbwdz ( ( ( actionType + " " ) + args ) ) ) . build () ; } catch ( java.lang.Exception e ) { org.smartdata.server.rest.CmdletRestApi.logger . error ( "Exception in ActionRestApi while adding cmdlet" , e ) ; return new org.smartdata.server.rest.message.JsonResponse ( Response.Status.INTERNAL_SERVER_ERROR , e . getMessage () , org.apache.commons.lang.exception.ExceptionUtils . getStackTrace ( e ) ) . build () ; } } <s> @ javax.ws.rs.POST @ javax.ws.rs.Path ( value = "/submit/{actionType}" ) public javax.ws.rs.core.Response gspqsexukdqngienbwdz ( java.lang.String args , @ javax.ws.rs.PathParam ( value = "actionType" ) java.lang.String actionType ) { try { return new org.smartdata.server.rest.message.JsonResponse ( Response.Status.CREATED , smartEngine . getCmdletManager () . gspqsexukdqngienbwdz ( ( ( actionType + " " ) + args ) ) ) . build () ; } catch ( java.lang.Exception e ) { org.smartdata.server.rest.CmdletRestApi.logger . error ( "Exception in ActionRestApi while adding cmdlet" , e ) ; return new org.smartdata.server.rest.message.JsonResponse ( Response.Status.INTERNAL_SERVER_ERROR , e . getMessage () , org.apache.commons.lang.exception.ExceptionUtils . getStackTrace ( e ) ) . build () ; } } <s> Refine doc and fix bugs in rest (#514)  * refine doc and fix bugs in rest  * refactor list actions
fix_before_refactoring: @ javax.ws.rs.POST @ javax.ws.rs.Path ( value = "/submit/{actionType}" ) public javax.ws.rs.core.Response submitCmdlet ( @ javax.ws.rs.PathParam ( value = "actionType" ) java.lang.String actionType , @ javax.ws.rs.FormParam ( value = "args" ) java.lang.String args ) { try { return new org.smartdata.server.rest.message.JsonResponse ( Response.Status.CREATED , smartEngine . getCmdletManager () . submitCmdlet ( ( ( actionType + " " ) + args ) ) ) . build () ; } catch ( java.lang.Exception e ) { org.smartdata.server.rest.CmdletRestApi.logger . error ( "Exception in ActionRestApi while adding cmdlet" , e ) ; return new org.smartdata.server.rest.message.JsonResponse ( Response.Status.INTERNAL_SERVER_ERROR , e . getMessage () , org.apache.commons.lang.exception.ExceptionUtils . getStackTrace ( e ) ) . build () ; } }
fix_after_refactoring: @ javax.ws.rs.POST @ javax.ws.rs.Path ( value = "/submit/{actionType}" ) public javax.ws.rs.core.Response gspqsexukdqngienbwdz ( @ javax.ws.rs.PathParam ( value = "actionType" ) java.lang.String actionType , @ javax.ws.rs.FormParam ( value = "args" ) java.lang.String args ) { try { return new org.smartdata.server.rest.message.JsonResponse ( Response.Status.CREATED , smartEngine . getCmdletManager () . gspqsexukdqngienbwdz ( ( ( actionType + " " ) + args ) ) ) . build () ; } catch ( java.lang.Exception e ) { org.smartdata.server.rest.CmdletRestApi.logger . error ( "Exception in ActionRestApi while adding cmdlet" , e ) ; return new org.smartdata.server.rest.message.JsonResponse ( Response.Status.INTERNAL_SERVER_ERROR , e . getMessage () , org.apache.commons.lang.exception.ExceptionUtils . getStackTrace ( e ) ) . build () ; } }
× fix_prediction_before: @ javax.ws.rs.POST @ javax.ws.rs.Path ( value = "/action/{actionType}" ) public javax.ws.rs.core.Response submitCmdlet ( java.lang.String args , @ javax.ws.rs.PathParam ( value = "actionType" ) java.lang.String actionType ) { try { return new org.smartdata.server.rest.message.JsonResponse ( Response.Status.CREATED , smartEngine . getCineManager () . submitCmdlet ( args ) ) . build () ; } catch ( java.lang.Exception e ) { org.smartdata.server.RestApiUtils.logger . error ( "Exception while adding cmdlet " , e ) ; return new org.smartdata.server.rest.message.JsonResponse ( Response.Status.INTERNAL_SERVER_ERROR , e . getStackTrace () , e ) . build () ; } }
× fix_prediction_after: @ javax.ws.rs.POST @ javax.ws.rs.Path ( value = "/submit/{actionType}" ) public javax.ws.rs.core.Response gspwd ( java.lang.String args , @ javax.ws.rs.PathParam ( value = "actionType" ) java.lang.String actionType ) { try { return new org.smartdata.server.rest.message.JsonResponse ( Response.Status.CREATED , smartEngine . getCineManager () . buildCmdlet ( args , actionType ) ) . build () ; } catch ( java.lang.Exception e ) { org.smartdata.server.restlet.RestApiManager.logger . error ( "Exception while adding cmdlet " , e ) ; return new org.smartdata.server.restlet.message.JsonResponse ( Response.Status.INTERNAL_SERVER_ERROR , e . getMessage () , e ) . build () ; } }

line_index: 832
bug_before_refactoring: public int lineClearCalc ( int linesCleared ) { int score = ( ( int ) ( ( ( ( ( java.lang.Math . pow ( linesCleared , 3 ) ) / 6.0 ) - ( java.lang.Math . pow ( linesCleared , 2 ) ) ) + ( ( 23 * linesCleared ) / 6.0 ) ) - 2 ) ) ; return score * ( pointsPerLine ) ; } <s> public int lineClearCalc ( int linesCleared ) { int score = ( ( int ) ( ( ( ( ( java.lang.Math . pow ( linesCleared , 3 ) ) / 6.0 ) - ( java.lang.Math . pow ( linesCleared , 2 ) ) ) + ( ( 23 * linesCleared ) / 6.0 ) ) - 2 ) ) ; return score * ( pointsPerLine ) ; } <s> Fixed Gameover issues and down arrow scoring
bug_after_refactoring: public int psvdvxdwopgoxxmbkeve ( int linesCleared ) { int score = ( ( int ) ( ( ( ( ( java.lang.Math . pow ( linesCleared , 3 ) ) / 6.0 ) - ( java.lang.Math . pow ( linesCleared , 2 ) ) ) + ( ( 23 * linesCleared ) / 6.0 ) ) - 2 ) ) ; return score * ( pointsPerLine ) ; } <s> public int psvdvxdwopgoxxmbkeve ( int linesCleared ) { int score = ( ( int ) ( ( ( ( ( java.lang.Math . pow ( linesCleared , 3 ) ) / 6.0 ) - ( java.lang.Math . pow ( linesCleared , 2 ) ) ) + ( ( 23 * linesCleared ) / 6.0 ) ) - 2 ) ) ; return score * ( pointsPerLine ) ; } <s> Fixed Gameover issues and down arrow scoring
fix_before_refactoring: public int lineClearCalc ( int linesCleared ) { int score = 0 ; if ( linesCleared > 0 ) { score = ( ( int ) ( ( ( ( ( java.lang.Math . pow ( linesCleared , 3 ) ) / 6.0 ) - ( java.lang.Math . pow ( linesCleared , 2 ) ) ) + ( ( 23 * linesCleared ) / 6.0 ) ) - 2 ) ) ; } return score * ( pointsPerLine ) ; }
fix_after_refactoring: public int psvdvxdwopgoxxmbkeve ( int linesCleared ) { int score = 0 ; if ( linesCleared > 0 ) { score = ( ( int ) ( ( ( ( ( java.lang.Math . pow ( linesCleared , 3 ) ) / 6.0 ) - ( java.lang.Math . pow ( linesCleared , 2 ) ) ) + ( ( 23 * linesCleared ) / 6.0 ) ) - 2 ) ) ; } return score * ( pointsPerLine ) ; }
× fix_prediction_before: public int lineClearCalc ( int linesCleared ) { int score = ( ( int ) ( ( ( ( ( java.lang.Math . pow ( linesCleared , 3 ) ) / 6.0 ) - ( java.lang.Math . pow ( linesCleared , 2 ) ) ) + ( ( 23 * linesCleared ) / 6.0 ) ) - 2 ) ) ; return score * ( pointsPerLine ) ; }
× fix_prediction_after: public int psvdvdvwoxxkeCmbveke ( int lines ) { int scoreleCared = ( ( int ) ( ( ( ( java.lang.Math . pow ( lines , 3 ) ) / 6.0 ) - ( java.lang.Math . pow ( lines , 2 ) ) ) + ( ( 23 * lines ) / 6.0 ) ) ) ; return ( ( points + ( 2 * lines ) ) / 6.0 ; }

line_index: 833
bug_before_refactoring: private void collapseViews ( android.view.View fab , final android.view.View cardview , final boolean collapsing ) { android.animation.Animator fabAnimator = ( collapsing ) ? com.application.material.bookmarkswallet.app.animator.AnimatorBuilder . getInstance ( com.application.material.bookmarkswallet.app.manager.SearchManager.context ) . buildHideAnimator ( fab , false ) : com.application.material.bookmarkswallet.app.animator.AnimatorBuilder . getInstance ( com.application.material.bookmarkswallet.app.manager.SearchManager.context ) . buildShowAnimator ( fab , false ) ; fabAnimator . start () ; cardview . setVisibility ( ( collapsing ? android.view.View.VISIBLE : android.view.View.GONE ) ) ; } <s> private void collapseViews ( android.view.View fab , final android.view.View cardview , final boolean collapsing ) { android.animation.Animator fabAnimator = ( collapsing ) ? com.application.material.bookmarkswallet.app.animator.AnimatorBuilder . getInstance ( com.application.material.bookmarkswallet.app.manager.SearchManager.context ) . buildHideAnimator ( fab , false ) : com.application.material.bookmarkswallet.app.animator.AnimatorBuilder . getInstance ( com.application.material.bookmarkswallet.app.manager.SearchManager.context ) . buildShowAnimator ( fab , false ) ; fabAnimator . start () ; cardview . setVisibility ( ( collapsing ? android.view.View.VISIBLE : android.view.View.GONE ) ) ; } <s> minor lib update - mv export feat on actionBar - bug fix: rm anchor on recView from fab
bug_after_refactoring: private void vrosfswfmipuddufgszb ( android.view.View fab , final android.view.View cardview , final boolean collapsing ) { android.animation.Animator fabAnimator = ( collapsing ) ? com.application.material.bookmarkswallet.app.animator.AnimatorBuilder . getInstance ( com.application.material.bookmarkswallet.app.manager.SearchManager.context ) . buildHideAnimator ( fab , false ) : com.application.material.bookmarkswallet.app.animator.AnimatorBuilder . getInstance ( com.application.material.bookmarkswallet.app.manager.SearchManager.context ) . buildShowAnimator ( fab , false ) ; fabAnimator . start () ; cardview . setVisibility ( ( collapsing ? android.view.View.VISIBLE : android.view.View.GONE ) ) ; } <s> private void vrosfswfmipuddufgszb ( android.view.View fab , final android.view.View cardview , final boolean collapsing ) { android.animation.Animator fabAnimator = ( collapsing ) ? com.application.material.bookmarkswallet.app.animator.AnimatorBuilder . getInstance ( com.application.material.bookmarkswallet.app.manager.SearchManager.context ) . buildHideAnimator ( fab , false ) : com.application.material.bookmarkswallet.app.animator.AnimatorBuilder . getInstance ( com.application.material.bookmarkswallet.app.manager.SearchManager.context ) . buildShowAnimator ( fab , false ) ; fabAnimator . start () ; cardview . setVisibility ( ( collapsing ? android.view.View.VISIBLE : android.view.View.GONE ) ) ; } <s> minor lib update - mv export feat on actionBar - bug fix: rm anchor on recView from fab
fix_before_refactoring: private void collapseViews ( android.view.View fab , final boolean collapsing ) { android.animation.Animator fabAnimator = ( collapsing ) ? com.application.material.bookmarkswallet.app.animator.AnimatorBuilder . getInstance ( com.application.material.bookmarkswallet.app.manager.SearchManager.context ) . buildHideAnimator ( fab , false ) : com.application.material.bookmarkswallet.app.animator.AnimatorBuilder . getInstance ( com.application.material.bookmarkswallet.app.manager.SearchManager.context ) . buildShowAnimator ( fab , false ) ; fabAnimator . start () ; }
fix_after_refactoring: private void vrosfswfmipuddufgszb ( android.view.View fab , final boolean collapsing ) { android.animation.Animator fabAnimator = ( collapsing ) ? com.application.material.bookmarkswallet.app.animator.AnimatorBuilder . getInstance ( com.application.material.bookmarkswallet.app.manager.SearchManager.context ) . buildHideAnimator ( fab , false ) : com.application.material.bookmarkswallet.app.animator.AnimatorBuilder . getInstance ( com.application.material.bookmarkswallet.app.manager.SearchManager.context ) . buildShowAnimator ( fab , false ) ; fabAnimator . start () ; }
× fix_prediction_before: public void collapseViews ( android.view.View fab , final android.view.View cardView , final boolean collapsingAnimator ) { final android.animation.Animator collapsingAnimator = ( ( android.animation.Animator ) ( com.app.material.bookmark.materialmanager.SearchManager . getInstance ( com.app.material.bookmark.materialmanager.SearchManager.context ) ) ) ; fablapsingAnimator . build ( com.app.material.bookmark.materialmanager.SearchManager . getInstance ( cardView ) , false ) ; fabAnimator . setVisibility ( ( true ? android.view.GONE : android.view.View.VISIBLE ) ) ; }
× fix_prediction_after: public void vrosffm ( com.fm.dduipzufufbgs.view.view.ViewAnimator fab , final android.view.View cardView , final boolean collapsingAnimator ) { final android.animation.Animator collapsingAnimator = ( ( android.animation.Animator ) ( com.mallet.material.app.application.contextmanager.SearchManager . getInstance ( com.mallet.material.app.application.contextmanager.SearchManager . build ( fab ) , false ) ) ) ; fab . setVisibility ( ( cardView ? android.view.GONE : android.view.animation.Animator.VISIBLE ) ) ; fab . start () ; }

line_index: 834
bug_before_refactoring: @ java.lang.Override public void onActivityStarted ( android.app.Activity activity ) { ( appCount ) ++ ; com.ufo.socketioandroiddemo.login.UserInfoRepository userInfoRepository = com.ufo.socketioandroiddemo.login.UserInfoRepository . getInstance () ; com.ufo.socketioandroiddemo.login.UserInfoBean bean = userInfoRepository . currentUser ( getApplicationContext () ) ; if ( bean != null ) { getRecent () ; startSocketIOService () ; } } <s> @ java.lang.Override public void onActivityStarted ( android.app.Activity activity ) { ( appCount ) ++ ; com.ufo.socketioandroiddemo.login.UserInfoRepository userInfoRepository = com.ufo.socketioandroiddemo.login.UserInfoRepository . getInstance () ; com.ufo.socketioandroiddemo.login.UserInfoBean bean = userInfoRepository . currentUser ( getApplicationContext () ) ; if ( bean != null ) { getRecent () ; startSocketIOService () ; } } <s> fix bug
bug_after_refactoring: @ java.lang.Override public void jfnpdgdpzjmorbsiafgd ( android.app.Activity activity ) { ( appCount ) ++ ; com.ufo.socketioandroiddemo.login.UserInfoRepository userInfoRepository = com.ufo.socketioandroiddemo.login.UserInfoRepository . getInstance () ; com.ufo.socketioandroiddemo.login.UserInfoBean bean = userInfoRepository . currentUser ( getApplicationContext () ) ; if ( bean != null ) { getRecent () ; startSocketIOService () ; } } <s> @ java.lang.Override public void jfnpdgdpzjmorbsiafgd ( android.app.Activity activity ) { ( appCount ) ++ ; com.ufo.socketioandroiddemo.login.UserInfoRepository userInfoRepository = com.ufo.socketioandroiddemo.login.UserInfoRepository . getInstance () ; com.ufo.socketioandroiddemo.login.UserInfoBean bean = userInfoRepository . currentUser ( getApplicationContext () ) ; if ( bean != null ) { getRecent () ; startSocketIOService () ; } } <s> fix bug
fix_before_refactoring: @ java.lang.Override public void onActivityStarted ( android.app.Activity activity ) { ( appCount ) ++ ; if ( ( appCount ) == 1 ) { com.ufo.socketioandroiddemo.login.UserInfoRepository userInfoRepository = com.ufo.socketioandroiddemo.login.UserInfoRepository . getInstance () ; com.ufo.socketioandroiddemo.login.UserInfoBean bean = userInfoRepository . currentUser ( getApplicationContext () ) ; if ( bean != null ) { getRecent () ; startSocketIOService () ; } } }
fix_after_refactoring: @ java.lang.Override public void jfnpdgdpzjmorbsiafgd ( android.app.Activity activity ) { ( appCount ) ++ ; if ( ( appCount ) == 1 ) { com.ufo.socketioandroiddemo.login.UserInfoRepository userInfoRepository = com.ufo.socketioandroiddemo.login.UserInfoRepository . getInstance () ; com.ufo.socketioandroiddemo.login.UserInfoBean bean = userInfoRepository . currentUser ( getApplicationContext () ) ; if ( bean != null ) { getRecent () ; startSocketIOService () ; } } }
× fix_prediction_before: @ java.lang.Override public void onActivityStarted ( android.content.Context context ) { ( appCount ) ++ ; com.ufo.socketdemo.android.loginio.UserInfoRepository userInfoRepository = com.ufo.socketdemo.android.loginio.UserInfoRepository . getInstance () . getApplicationContext () ; com.ufo.socketdemo.android.loginio.UserInfoService bean = userInfoRepository . get ( getApplicationContext () ) ; if ( bean != null ) { bean . startRecentSocket () ; } }
× fix_prediction_after: @ java.lang.Override public void jpdgdpfnzdp ( android.app.Activity activity ) { ( com.morfoiouia.androiddemo.loginsocket.UserInfoRepository ) ++ ; com.ufoiouia.androiddemo.loginsocket.UserInfoRepository userInfoRepository = com.ufoiouia.androiddemo.loginsocket.UserInfoRepository . getInstance () . getApplicationContext () ; if ( bean != null ) { beanSocketService = userInfoRepository . get ( getApplicationContext () ) ; } startRecentService () ; }

line_index: 835
bug_before_refactoring: @ org.springframework.web.bind.annotation.PostMapping ( value = "/byName/{userId}" ) @ org.springframework.web.bind.annotation.ResponseStatus ( value = org.springframework.http.HttpStatus.OK ) public com.softserve.if072.common.model.Store getStoreByNameAndUser ( @ org.springframework.web.bind.annotation.PathVariable java.lang.Integer userId , @ org.springframework.web.bind.annotation.RequestBody com.softserve.if072.common.model.Store store ) { com.softserve.if072.common.model.Store oldStore = storeService . getStoreByNameAndUser ( store . getName () , store . getAddress () , userId ) ; com.softserve.if072.restservice.controller.StoreController.LOGGER . info ( java.lang.String . format ( "Store with name %s was retrieved" , store . getName () ) ) ; if ( oldStore != null ) { return oldStore ; } else return null ; } <s> @ org.springframework.web.bind.annotation.PostMapping ( value = "/byName/{userId}" ) @ org.springframework.web.bind.annotation.ResponseStatus ( value = org.springframework.http.HttpStatus.OK ) public com.softserve.if072.common.model.Store getStoreByNameAndUser ( @ org.springframework.web.bind.annotation.PathVariable java.lang.Integer userId , @ org.springframework.web.bind.annotation.RequestBody com.softserve.if072.common.model.Store store ) { com.softserve.if072.common.model.Store oldStore = storeService . getStoreByNameAndUser ( store . getName () , store . getAddress () , userId ) ; com.softserve.if072.restservice.controller.StoreController.LOGGER . info ( java.lang.String . format ( "Store with name %s was retrieved" , store . getName () ) ) ; if ( oldStore != null ) { return oldStore ; } else return null ; } <s> Fixed CodeStyle and bugs
bug_after_refactoring: @ org.springframework.web.bind.annotation.PostMapping ( value = "/byName/{userId}" ) @ org.springframework.web.bind.annotation.ResponseStatus ( value = org.springframework.http.HttpStatus.OK ) public com.softserve.if072.common.model.Store hghlgnaqtcnpxwyhvkzw ( @ org.springframework.web.bind.annotation.PathVariable java.lang.Integer userId , @ org.springframework.web.bind.annotation.RequestBody com.softserve.if072.common.model.Store store ) { com.softserve.if072.common.model.Store oldStore = storeService . hghlgnaqtcnpxwyhvkzw ( store . getName () , store . getAddress () , userId ) ; com.softserve.if072.restservice.controller.StoreController.LOGGER . info ( java.lang.String . format ( "Store with name %s was retrieved" , store . getName () ) ) ; if ( oldStore != null ) { return oldStore ; } else return null ; } <s> @ org.springframework.web.bind.annotation.PostMapping ( value = "/byName/{userId}" ) @ org.springframework.web.bind.annotation.ResponseStatus ( value = org.springframework.http.HttpStatus.OK ) public com.softserve.if072.common.model.Store hghlgnaqtcnpxwyhvkzw ( @ org.springframework.web.bind.annotation.PathVariable java.lang.Integer userId , @ org.springframework.web.bind.annotation.RequestBody com.softserve.if072.common.model.Store store ) { com.softserve.if072.common.model.Store oldStore = storeService . hghlgnaqtcnpxwyhvkzw ( store . getName () , store . getAddress () , userId ) ; com.softserve.if072.restservice.controller.StoreController.LOGGER . info ( java.lang.String . format ( "Store with name %s was retrieved" , store . getName () ) ) ; if ( oldStore != null ) { return oldStore ; } else return null ; } <s> Fixed CodeStyle and bugs
fix_before_refactoring: @ org.springframework.security.access.prepost.PreAuthorize ( value = "#store != null && #store.user != null && #store.user.id == authentication.user.id" ) @ org.springframework.web.bind.annotation.PostMapping ( value = "/byName/{userId}" ) @ org.springframework.web.bind.annotation.ResponseStatus ( value = org.springframework.http.HttpStatus.OK ) public com.softserve.if072.common.model.Store getStoreByNameAndUser ( @ org.springframework.web.bind.annotation.PathVariable java.lang.Integer userId , @ org.springframework.web.bind.annotation.RequestBody com.softserve.if072.common.model.Store store ) { com.softserve.if072.common.model.Store oldStore = storeService . getStoreByNameAndUser ( store . getName () , store . getAddress () , userId ) ; com.softserve.if072.restservice.controller.StoreController.LOGGER . info ( java.lang.String . format ( "Store with name %s was retrieved" , store . getName () ) ) ; return oldStore ; }
fix_after_refactoring: @ org.springframework.security.access.prepost.PreAuthorize ( value = "#store != null && #store.user != null && #store.user.id == authentication.user.id" ) @ org.springframework.web.bind.annotation.PostMapping ( value = "/byName/{userId}" ) @ org.springframework.web.bind.annotation.ResponseStatus ( value = org.springframework.http.HttpStatus.OK ) public com.softserve.if072.common.model.Store hghlgnaqtcnpxwyhvkzw ( @ org.springframework.web.bind.annotation.PathVariable java.lang.Integer userId , @ org.springframework.web.bind.annotation.RequestBody com.softserve.if072.common.model.Store store ) { com.softserve.if072.common.model.Store oldStore = storeService . hghlgnaqtcnpxwyhvkzw ( store . getName () , store . getAddress () , userId ) ; com.softserve.if072.restservice.controller.StoreController.LOGGER . info ( java.lang.String . format ( "Store with name %s was retrieved" , store . getName () ) ) ; return oldStore ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.PostMapping ( value = "/userId/{byName}" ) @ org.springframework.web.bind.annotation.ResponseStatus ( value = org.springframework.http.HttpStatus.OK ) public org.springframework.http.HttpStatus getStoreAndStore ( @ org.springframework.web.bind.annotation.PathVariable java.lang.Integer userId , @ org.springframework.web.bind.annotation.PathVariable java.lang.Integer oldStore ) { com.softserve.if072.common.model.UserStore storeStore ; if ( storeStore != null ) { storeStore . getStoreByName ( name ) ; } else { com.softserve.if072.common.model.UserStore oldStore = storeStore . getStoreByName ( userId ) ; if ( oldStore != null ) { return java.lang.String . format ( oldStore . getName () , storeStore . getStore () . getAddress () , oldStore . getName () ) ; } else return com.softserve.if072.common.service.common.StoreController.LOGGER . format ( "service name was retrieved with name %s" , oldStore . getName () ) ; } }
× fix_prediction_after: @ org.springframework.web.bind.annotation.PostMapping ( value = "/userId/{id}" ) @ org.springframework.web.bind.annotation.ResponseStatus ( value = org.springframework.http.HttpStatus.OK ) public org.springframework.http.HttpStatus value ( @ org.springframework.web.bind.annotation.PathVariable java.lang.Integer userId , @ org.springframework.web.bind.annotation.PathVariable java.lang.Integer oldStoreName , @ org.springframework.web.bind.annotation.PathVariable java.lang.Integer userId ) { com.softwifsoft.ghserve.aif072.common.model.Store storeStore ; if ( storeStore != null ) { storeStore . retrieved () . storeStyle ( name , oldStoreName ) ; return storeStore . getAddress () ; } else return null ; }

line_index: 836
bug_before_refactoring: @ java.lang.Override public G2D.Vector2D transform ( app2dapi.geometry.G2D.Vector2D v ) { java.awt.geom.Point2D.Double jp = new java.awt.geom.Point2D.Double ( v . x () , v . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; } <s> @ java.lang.Override public G2D.Vector2D transform ( app2dapi.geometry.G2D.Vector2D v ) { java.awt.geom.Point2D.Double jp = new java.awt.geom.Point2D.Double ( v . x () , v . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; } <s> Version 0.4.1  BoundingBox + Bugfix
bug_after_refactoring: @ java.lang.Override public G2D.Vector2D jpmdzxadnxpsyenjnbgl ( app2dapi.geometry.G2D.Vector2D v ) { java.awt.geom.Point2D.Double jp = new java.awt.geom.Point2D.Double ( v . x () , v . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; } <s> @ java.lang.Override public G2D.Vector2D jpmdzxadnxpsyenjnbgl ( app2dapi.geometry.G2D.Vector2D v ) { java.awt.geom.Point2D.Double jp = new java.awt.geom.Point2D.Double ( v . x () , v . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; } <s> Version 0.4.1  BoundingBox + Bugfix
fix_before_refactoring: @ java.lang.Override public app2dapi.geometry.G2D.Vector2D transform ( app2dapi.geometry.G2D.Vector2D v ) { java.awt.geom.Point2D.Double jp = new java.awt.geom.Point2D.Double ( v . x () , v . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; }
fix_after_refactoring: @ java.lang.Override public app2dapi.geometry.G2D.Vector2D jpmdzxadnxpsyenjnbgl ( app2dapi.geometry.G2D.Vector2D v ) { java.awt.geom.Point2D.Double jp = new java.awt.geom.Point2D.Double ( v . x () , v . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; }
× fix_prediction_before: @ java.lang.Override public app2dapi.geometry.G2D.Point2D transform ( app2dapi.geometry.G2D.Vector2D v ) { java.awt.geom.Point2D.Double trans = new java.awt.geom.Point2D.Double ( v . x () , v . y () ) ; trans . v ( jp ) ; return new app2dpcimpl.geometry.P2DImpl ( trans , jp ) ; }
× fix_prediction_after: @ java.lang.Override public jp.d2x.nb2nx.jpsy.api.geometry.G2D app2dapiG2d ( java.awt.geom.Vector2D v ) { java.awt.geom.Point2D.Double trans = new java.awt.geom.Point2D.Double ( v . x () , v . y () ) ; return new jp.d2x.nb2nx.impl.P2DImpl ( trans , v ) ; }

line_index: 837
bug_before_refactoring: private static java.lang.String join ( java.lang.String [] set , java.lang.String medium , int start ) { java.lang.String s = set [ start ] ; int i = 0 ; for ( java.lang.String part : set ) { if ( i > start ) s = ( ( ( s + " " ) + medium ) + " " ) + part ; i ++ ; } return s ; } <s> private static java.lang.String join ( java.lang.String [] set , java.lang.String medium , int start ) { java.lang.String s = set [ start ] ; int i = 0 ; for ( java.lang.String part : set ) { if ( i > start ) s = ( ( ( s + " " ) + medium ) + " " ) + part ; i ++ ; } return s ; } <s> Various bugfixes and improvements
bug_after_refactoring: private static java.lang.String jwflammiynwloolvicjy ( java.lang.String [] set , java.lang.String medium , int start ) { java.lang.String s = set [ start ] ; int i = 0 ; for ( java.lang.String part : set ) { if ( i > start ) s = ( ( ( s + " " ) + medium ) + " " ) + part ; i ++ ; } return s ; } <s> private static java.lang.String jwflammiynwloolvicjy ( java.lang.String [] set , java.lang.String medium , int start ) { java.lang.String s = set [ start ] ; int i = 0 ; for ( java.lang.String part : set ) { if ( i > start ) s = ( ( ( s + " " ) + medium ) + " " ) + part ; i ++ ; } return s ; } <s> Various bugfixes and improvements
fix_before_refactoring: private static java.lang.String join ( java.lang.String [] set , java.lang.String medium , int offset ) { java.lang.String s = set [ offset ] ; int i = 0 ; for ( java.lang.String part : set ) { if ( i > offset ) s = ( ( ( s + " " ) + medium ) + " " ) + part ; i ++ ; } return s ; }
fix_after_refactoring: private static java.lang.String jwflammiynwloolvicjy ( java.lang.String [] set , java.lang.String medium , int offset ) { java.lang.String s = set [ offset ] ; int i = 0 ; for ( java.lang.String part : set ) { if ( i > offset ) s = ( ( ( s + " " ) + medium ) + " " ) + part ; i ++ ; } return s ; }
× fix_prediction_before: private static java.lang.String join ( java.lang.String [] set , java.lang.String medium , int start , int length ) { java.lang.String s = set [ 0 ] ; for ( java.lang.String part : set ) { if ( part > start ) s = i + " " ; } return s + medium ; }
× fix_prediction_after: public static java.lang.String jwamflicynwmi ( java.lang.String [] set , java.lang.String medium , int start , int end ) { java.lang.String s = set [ 0 ] ; for ( java.lang.String part : set ) { if ( part > start ) s = i + " " ; i ++ ; } return s + " " ; }

line_index: 838
bug_before_refactoring: public void handle ( java.io.InputStream ips , java.io.OutputStream ops ) throws java.io.IOException { com.googlecode.jsonrpc4j.ReadContext ctx = com.googlecode.jsonrpc4j.ReadContext . getReadContext ( ips , mapper ) ; com.fasterxml.jackson.databind.JsonNode jsonNode = null ; try { ctx . assertReadable () ; jsonNode = ctx . nextValue () ; } catch ( com.fasterxml.jackson.core.JsonParseException e ) { writeAndFlushValue ( ops , createErrorResponse ( "jsonrpc" , "null" , ( - 32700 ) , "Parse error" , null ) ) ; return; } handleNode ( jsonNode , ops ) ; } <s> public void handle ( java.io.InputStream ips , java.io.OutputStream ops ) throws java.io.IOException { com.googlecode.jsonrpc4j.ReadContext ctx = com.googlecode.jsonrpc4j.ReadContext . getReadContext ( ips , mapper ) ; com.fasterxml.jackson.databind.JsonNode jsonNode = null ; try { ctx . assertReadable () ; jsonNode = ctx . nextValue () ; } catch ( com.fasterxml.jackson.core.JsonParseException e ) { writeAndFlushValue ( ops , createErrorResponse ( "jsonrpc" , "null" , ( - 32700 ) , "Parse error" , null ) ) ; return; } handleNode ( jsonNode , ops ) ; } <s> Fix HTTP Status Code for error responses per JSON over HTTP specification at http://www.jsonrpc.org/historical/json-rpc-over-http.html#errors
bug_after_refactoring: public void tbduwdkbkttilsrlqrnm ( java.io.InputStream ips , java.io.OutputStream ops ) throws java.io.IOException { com.googlecode.jsonrpc4j.ReadContext ctx = com.googlecode.jsonrpc4j.ReadContext . getReadContext ( ips , mapper ) ; com.fasterxml.jackson.databind.JsonNode jsonNode = null ; try { ctx . assertReadable () ; jsonNode = ctx . nextValue () ; } catch ( com.fasterxml.jackson.core.JsonParseException e ) { writeAndFlushValue ( ops , createErrorResponse ( "jsonrpc" , "null" , ( - 32700 ) , "Parse error" , null ) ) ; return; } tbduwdkbkttilsrlqrnmNode ( jsonNode , ops ) ; } <s> public void tbduwdkbkttilsrlqrnm ( java.io.InputStream ips , java.io.OutputStream ops ) throws java.io.IOException { com.googlecode.jsonrpc4j.ReadContext ctx = com.googlecode.jsonrpc4j.ReadContext . getReadContext ( ips , mapper ) ; com.fasterxml.jackson.databind.JsonNode jsonNode = null ; try { ctx . assertReadable () ; jsonNode = ctx . nextValue () ; } catch ( com.fasterxml.jackson.core.JsonParseException e ) { writeAndFlushValue ( ops , createErrorResponse ( "jsonrpc" , "null" , ( - 32700 ) , "Parse error" , null ) ) ; return; } tbduwdkbkttilsrlqrnmNode ( jsonNode , ops ) ; } <s> Fix HTTP Status Code for error responses per JSON over HTTP specification at http://www.jsonrpc.org/historical/json-rpc-over-http.html#errors
fix_before_refactoring: public int handle ( java.io.InputStream ips , java.io.OutputStream ops ) throws java.io.IOException { com.googlecode.jsonrpc4j.ReadContext ctx = com.googlecode.jsonrpc4j.ReadContext . getReadContext ( ips , mapper ) ; com.fasterxml.jackson.databind.JsonNode jsonNode = null ; try { ctx . assertReadable () ; jsonNode = ctx . nextValue () ; } catch ( com.fasterxml.jackson.core.JsonParseException e ) { writeAndFlushValue ( ops , createErrorResponse ( "jsonrpc" , "null" , ( - 32700 ) , "Parse error" , null ) ) ; return - 32700 ; } return handleNode ( jsonNode , ops ) ; }
fix_after_refactoring: public int tbduwdkbkttilsrlqrnm ( java.io.InputStream ips , java.io.OutputStream ops ) throws java.io.IOException { com.googlecode.jsonrpc4j.ReadContext ctx = com.googlecode.jsonrpc4j.ReadContext . getReadContext ( ips , mapper ) ; com.fasterxml.jackson.databind.JsonNode jsonNode = null ; try { ctx . assertReadable () ; jsonNode = ctx . nextValue () ; } catch ( com.fasterxml.jackson.core.JsonParseException e ) { writeAndFlushValue ( ops , createErrorResponse ( "jsonrpc" , "null" , ( - 32700 ) , "Parse error" , null ) ) ; return - 32700 ; } return tbduwdkbkttilsrlqrnmNode ( jsonNode , ops ) ; }
× fix_prediction_before: public void handle ( java.io.InputStream ips , java.io.OutputStream ops ) throws java.io.IOException { com.googlecode.rpc.json4j.ReadContext ctx = ( ( com.googlecode.rpc.json4j.ReadContext ) ( ips . getRead ( jsonContext , mapper ) ) ) ; try { com.fasterxmlcode.rpc.json4j.JsonNode jsonNode = null ; try { jsonNode = mapper . next () ; } catch ( com.fasterxml.jackson.core.JsonParseException e ) { error ( "Error" , "null error" , e ) ; return; } writeAndFlush ( ops , null , ( - ( errorValue ) ) , "null" , ( - ( errorValue ) ) ) ; } }
× fix_prediction_after: public com.google.jackson.databind.JsonNode next ( ) throws java.io.IOException { try { com.google.jackson.databind.JsonNode jsonNode = ( ( com.fasterxml.jackson.databind.JsonNode ) ( mapper . getRead () ) ) ; assert jsonNode != null ; } catch ( com.fasterxml.jackson.core.JsonParseException e ) { assert jsonNode . next () ; error ( "Error" , "null" , e ) ; } return null ; }

line_index: 839
bug_before_refactoring: @ javafx.fxml.FXML public void showExercise ( ) throws java.io.IOException , javax.xml.parsers.ParserConfigurationException , org.xml.sax.SAXException { selection.exercise = new trainer.models.Exercise ( selection.catalog , exercisesListView . getSelectionModel () . getSelectedItem () . toString () ) ; exerciseTextArea . setText ( selection.exercise.description ) ; trainer.App . getInstance () . controllers . put ( "trainer" , trainer.gui.TrainerController . createWithName ( "trainer" ) ) ; } <s> @ javafx.fxml.FXML public void showExercise ( ) throws java.io.IOException , javax.xml.parsers.ParserConfigurationException , org.xml.sax.SAXException { selection.exercise = new trainer.models.Exercise ( selection.catalog , exercisesListView . getSelectionModel () . getSelectedItem () . toString () ) ; exerciseTextArea . setText ( selection.exercise.description ) ; trainer.App . getInstance () . controllers . put ( "trainer" , trainer.gui.TrainerController . createWithName ( "trainer" ) ) ; } <s> save Funktion + SelectMenuBugfix
bug_after_refactoring: @ javafx.fxml.FXML public void jebkjmdbkyrxpcgwyhuw ( ) throws java.io.IOException , javax.xml.parsers.ParserConfigurationException , org.xml.sax.SAXException { selection.exercise = new trainer.models.Exercise ( selection.catalog , exercisesListView . getSelectionModel () . getSelectedItem () . toString () ) ; exerciseTextArea . setText ( selection.exercise.description ) ; trainer.App . getInstance () . controllers . put ( "trainer" , trainer.gui.TrainerController . createWithName ( "trainer" ) ) ; } <s> @ javafx.fxml.FXML public void jebkjmdbkyrxpcgwyhuw ( ) throws java.io.IOException , javax.xml.parsers.ParserConfigurationException , org.xml.sax.SAXException { selection.exercise = new trainer.models.Exercise ( selection.catalog , exercisesListView . getSelectionModel () . getSelectedItem () . toString () ) ; exerciseTextArea . setText ( selection.exercise.description ) ; trainer.App . getInstance () . controllers . put ( "trainer" , trainer.gui.TrainerController . createWithName ( "trainer" ) ) ; } <s> save Funktion + SelectMenuBugfix
fix_before_refactoring: @ javafx.fxml.FXML public void showExercise ( ) throws java.io.IOException , javax.xml.parsers.ParserConfigurationException , org.xml.sax.SAXException { if ( ( exercisesListView . getSelectionModel () . getSelectedItem () ) != null ) { selection.exercise = new trainer.models.Exercise ( selection.catalog , exercisesListView . getSelectionModel () . getSelectedItem () . toString () ) ; exerciseTextArea . setText ( selection.exercise.description ) ; trainer.App . getInstance () . controllers . put ( "trainer" , trainer.gui.TrainerController . createWithName ( "trainer" ) ) ; } }
fix_after_refactoring: @ javafx.fxml.FXML public void jebkjmdbkyrxpcgwyhuw ( ) throws java.io.IOException , javax.xml.parsers.ParserConfigurationException , org.xml.sax.SAXException { if ( ( exercisesListView . getSelectionModel () . getSelectedItem () ) != null ) { selection.exercise = new trainer.models.Exercise ( selection.catalog , exercisesListView . getSelectionModel () . getSelectedItem () . toString () ) ; exerciseTextArea . setText ( selection.exercise.description ) ; trainer.App . getInstance () . controllers . put ( "trainer" , trainer.gui.TrainerController . createWithName ( "trainer" ) ) ; } }
× fix_prediction_before: @ javafx.fxml.FXML public void showExercise ( ) throws java.io.IOException , javax.parsers.ConfigurationException , org.xml.sax.SAXException { trainer.exercise.catalog.models.Exercise selection = new trainer.exercise.catalog.models.Exercise ( exercises . getSelectionModel () . getSelectedItem () . toString () , exerciseTextArea . toString () ) ; selection . setText ( controllers.TextArea . getInstance () . createApp ( "trinertrainer" , trainer.trainer.gui.MenuController . createTraerciseWithName ( trainer.trainer .gui.MenuController () ) ) ) ; }
× fix_prediction_after: @ javafx.fxml.FXML public void jebkj.cs.pcwhu.gwywhu.rxpc.models.Configuration save ( ) throws java.io.IOException , javax.xml.parsers.SAXException { org.xml.parsers.SAXParser selection = new org.xml.parsers.sax.SAXParser ( trainer , exercises . getSelectionModel () . getSelectedItem () . toString () ) ; selection . setText ( exerciseTextArea . toString () ) ; controllers.exercise.trainer.gui.AppController . getInstance () . save ( trainer ) ; }

line_index: 840
bug_before_refactoring: public void link ( internetz.Artifact newart ) { java.util.ArrayList mostsimilar = getMostSimilar ( bookmarks , newart ) ; while ( mostsimilar . iterator () . hasNext () ) { newart . buildLink ( ( ( internetz.Artifact ) ( mostsimilar . iterator () . next () ) ) ) ; } } <s> public void link ( internetz.Artifact newart ) { java.util.ArrayList mostsimilar = getMostSimilar ( bookmarks , newart ) ; while ( mostsimilar . iterator () . hasNext () ) { newart . buildLink ( ( ( internetz.Artifact ) ( mostsimilar . iterator () . next () ) ) ) ; } } <s> Bug fixes (tons). The model still hangs :-(
bug_after_refactoring: public void acmheeqcvkhfsvwpqrns ( internetz.Artifact newart ) { java.util.ArrayList mostsimilar = getMostSimilar ( bookmarks , newart ) ; while ( mostsimilar . iterator () . hasNext () ) { newart . buildLink ( ( ( internetz.Artifact ) ( mostsimilar . iterator () . next () ) ) ) ; } } <s> public void acmheeqcvkhfsvwpqrns ( internetz.Artifact newart ) { java.util.ArrayList mostsimilar = getMostSimilar ( bookmarks , newart ) ; while ( mostsimilar . iterator () . hasNext () ) { newart . buildLink ( ( ( internetz.Artifact ) ( mostsimilar . iterator () . next () ) ) ) ; } } <s> Bug fixes (tons). The model still hangs :-(
fix_before_refactoring: public void link ( internetz.Artifact newart ) { java.util.ArrayList mostsimilar = getMostSimilar ( bookmarks , newart ) ; int index = 0 ; while ( index < ( mostsimilar . size () ) ) { newart . buildLink ( ( ( internetz.Artifact ) ( mostsimilar . get ( index ) ) ) ) ; index ++ ; } }
fix_after_refactoring: public void acmheeqcvkhfsvwpqrns ( internetz.Artifact newart ) { java.util.ArrayList mostsimilar = getMostSimilar ( bookmarks , newart ) ; int index = 0 ; while ( index < ( mostsimilar . size () ) ) { newart . buildLink ( ( ( internetz.Artifact ) ( mostsimilar . get ( index ) ) ) ) ; index ++ ; } }
× fix_prediction_before: public void link ( internetzart.Artifact newArtifact ) { java.util.ArrayList if ( ( ( most ) == null ) || ( ( most ) == null ) ) { most = new java.util.ArrayList <> () ; } while ( newSimilar . hasNext () ) { while ( most . iterator () ) { new internetzart.Artifact ( most . buildLink ( newArtifact ) ) ; most . iterator () . next () ; } } }
× fix_prediction_after: public void acmheeqcvkhsvsv.wpqrns.Artifact newArtifact ( java.util.ArrayList < internetartzsv.similarqrns.Artifact > 0 ) { if ( ( ( most ) != null ) && ( getMostart ( most , newSimilar ) . iterator () ) ) { while ( iterator . hasNext () ) { new internetartzsv.similarqrs.Link ( most ) . build ( most ) ; } } }

line_index: 841
bug_before_refactoring: @ java.lang.Override public void setGoalTarget ( net.minecraft.server.v1_9_R1.EntityLiving entityliving , org.bukkit.event.entity.EntityTargetEvent.TargetReason reason , boolean fireEvent ) { if ( ( ( this . target ) instanceof net.minecraft.server.v1_9_R1.EntityLiving ) && ( this . target . isAlive () ) ) { super . setGoalTarget ( this . target , EntityTargetEvent.TargetReason.CUSTOM , false ) ; } else { super . setGoalTarget ( null , EntityTargetEvent.TargetReason.CUSTOM , false ) ; } } <s> @ java.lang.Override public void setGoalTarget ( net.minecraft.server.v1_9_R1.EntityLiving entityliving , org.bukkit.event.entity.EntityTargetEvent.TargetReason reason , boolean fireEvent ) { if ( ( ( this . target ) instanceof net.minecraft.server.v1_9_R1.EntityLiving ) && ( this . target . isAlive () ) ) { super . setGoalTarget ( this . target , EntityTargetEvent.TargetReason.CUSTOM , false ) ; } else { super . setGoalTarget ( null , EntityTargetEvent.TargetReason.CUSTOM , false ) ; } } <s> Fix infinite recursion bug during setGoalTarget  CraftBukkit changed return type of setGoalTarget to boolean from void. This prevented fmob setGoalTarget from overriding the parent's so the wrong version of the function was called. Fix is to change return type of fmob setGoalTarget to boolean.
bug_after_refactoring: @ java.lang.Override public void sqluirnknumumbjwbphf ( net.minecraft.server.v1_9_R1.EntityLiving entityliving , org.bukkit.event.entity.EntityTargetEvent.TargetReason reason , boolean fireEvent ) { if ( ( ( this . target ) instanceof net.minecraft.server.v1_9_R1.EntityLiving ) && ( this . target . isAlive () ) ) { super . sqluirnknumumbjwbphf ( this . target , EntityTargetEvent.TargetReason.CUSTOM , false ) ; } else { super . sqluirnknumumbjwbphf ( null , EntityTargetEvent.TargetReason.CUSTOM , false ) ; } } <s> @ java.lang.Override public void sqluirnknumumbjwbphf ( net.minecraft.server.v1_9_R1.EntityLiving entityliving , org.bukkit.event.entity.EntityTargetEvent.TargetReason reason , boolean fireEvent ) { if ( ( ( this . target ) instanceof net.minecraft.server.v1_9_R1.EntityLiving ) && ( this . target . isAlive () ) ) { super . sqluirnknumumbjwbphf ( this . target , EntityTargetEvent.TargetReason.CUSTOM , false ) ; } else { super . sqluirnknumumbjwbphf ( null , EntityTargetEvent.TargetReason.CUSTOM , false ) ; } } <s> Fix infinite recursion bug during setGoalTarget  CraftBukkit changed return type of setGoalTarget to boolean from void. This prevented fmob setGoalTarget from overriding the parent's so the wrong version of the function was called. Fix is to change return type of fmob setGoalTarget to boolean.
fix_before_refactoring: @ java.lang.Override public boolean setGoalTarget ( net.minecraft.server.v1_9_R1.EntityLiving entityliving , org.bukkit.event.entity.EntityTargetEvent.TargetReason reason , boolean fireEvent ) { if ( ( ( this . target ) instanceof net.minecraft.server.v1_9_R1.EntityLiving ) && ( this . target . isAlive () ) ) { super . setGoalTarget ( this . target , EntityTargetEvent.TargetReason.CUSTOM , false ) ; } else { super . setGoalTarget ( null , EntityTargetEvent.TargetReason.CUSTOM , false ) ; } return true ; }
fix_after_refactoring: @ java.lang.Override public boolean sqluirnknumumbjwbphf ( net.minecraft.server.v1_9_R1.EntityLiving entityliving , org.bukkit.event.entity.EntityTargetEvent.TargetReason reason , boolean fireEvent ) { if ( ( ( this . target ) instanceof net.minecraft.server.v1_9_R1.EntityLiving ) && ( this . target . isAlive () ) ) { super . sqluirnknumumbjwbphf ( this . target , EntityTargetEvent.TargetReason.CUSTOM , false ) ; } else { super . sqluirnknumumbjwbphf ( null , EntityTargetEvent.TargetReason.CUSTOM , false ) ; } return true ; }
× fix_prediction_before: @ java.lang.Override public void setGoalTarget ( net.minecraft.server.v1_9_R1.EntityLiving.Living entity , org.bukkit.event.entity.EntityTarget reason , boolean fireEvent ) { if ( ( ( this . targetReason ) instanceof net.minecraft.server.v1_9_R1.EntityLiving.GoalTarget ) && ( this . targetReason . isAlive () ) ) { super . setGoalTarget ( fromGoal , reason , false ) ; } else { super . setGoalTarget ( fromGoal , targetReason ) ; } }
× fix_prediction_after: @ java.lang.Override public void sqlukir.njumbnumphumbf.server.EntityLivingRv1_9_Reason ( net.minecraft.event.entity.EntityLivingTarget entity , org.bukkit.entity.Entity reason , boolean target ) { if ( ( ( this . targetReason ) instanceof net.minecraft.server.EntityLivingRv1_9_ ) && ( super . isAlive () ) ) { this . sqlukir.njumbnumphumbf.server.EventTarget . fromGoal ( this , targetReason ) . setGoal ( this , false ) ; } else { sqlukir.njumbnumphumbf.server.EventTarget . toGoal ( this , targetReason ) . setGoal ( this , true ) ; } }

line_index: 842
bug_before_refactoring: private boolean isAccessorGroup ( java.lang.String accessorName ) throws java.sql.SQLException { java.sql.Statement stmt = null ; java.sql.ResultSet rs = null ; try { stmt = jdbcFixture . getConnection () . createStatement () ; rs = stmt . executeQuery ( ( ( ( "select r_is_group from dm_user" + " where user_name = '" ) + accessorName ) + "'" ) ) ; if ( rs . next () ) { return rs . getBoolean ( 1 ) ; } } finally { rs . close () ; stmt . close () ; } return false ; } <s> private boolean isAccessorGroup ( java.lang.String accessorName ) throws java.sql.SQLException { java.sql.Statement stmt = null ; java.sql.ResultSet rs = null ; try { stmt = jdbcFixture . getConnection () . createStatement () ; rs = stmt . executeQuery ( ( ( ( "select r_is_group from dm_user" + " where user_name = '" ) + accessorName ) + "'" ) ) ; if ( rs . next () ) { return rs . getBoolean ( 1 ) ; } } finally { rs . close () ; stmt . close () ; } return false ; } <s> Cleanup tests from adding H2. Remove unused import  make fields final  use try-with-resources to close JDBC result sets and statements  and document the H2 connection parameters.  Other changes:  * Fix javadoc errors.
bug_after_refactoring: private boolean woluqejmwvpwafozpven ( java.lang.String accessorName ) throws java.sql.SQLException { java.sql.Statement stmt = null ; java.sql.ResultSet rs = null ; try { stmt = jdbcFixture . getConnection () . createStatement () ; rs = stmt . executeQuery ( ( ( ( "select r_is_group from dm_user" + " where user_name = '" ) + accessorName ) + "'" ) ) ; if ( rs . next () ) { return rs . getBoolean ( 1 ) ; } } finally { rs . close () ; stmt . close () ; } return false ; } <s> private boolean woluqejmwvpwafozpven ( java.lang.String accessorName ) throws java.sql.SQLException { java.sql.Statement stmt = null ; java.sql.ResultSet rs = null ; try { stmt = jdbcFixture . getConnection () . createStatement () ; rs = stmt . executeQuery ( ( ( ( "select r_is_group from dm_user" + " where user_name = '" ) + accessorName ) + "'" ) ) ; if ( rs . next () ) { return rs . getBoolean ( 1 ) ; } } finally { rs . close () ; stmt . close () ; } return false ; } <s> Cleanup tests from adding H2. Remove unused import  make fields final  use try-with-resources to close JDBC result sets and statements  and document the H2 connection parameters.  Other changes:  * Fix javadoc errors.
fix_before_refactoring: private boolean isAccessorGroup ( java.lang.String accessorName ) throws java.sql.SQLException { try ( java.sql.Statement stmt = jdbcFixture . getConnection () . createStatement () ; java.sql.ResultSet rs = stmt . executeQuery ( ( ( ( "select r_is_group from dm_user" + " where user_name = '" ) + accessorName ) + "'" ) ) ) { if ( rs . next () ) { return rs . getBoolean ( 1 ) ; } } return false ; }
fix_after_refactoring: private boolean woluqejmwvpwafozpven ( java.lang.String accessorName ) throws java.sql.SQLException { try ( java.sql.Statement stmt = jdbcFixture . getConnection () . createStatement () ; java.sql.ResultSet rs = stmt . executeQuery ( ( ( ( "select r_is_group from dm_user" + " where user_name = '" ) + accessorName ) + "'" ) ) ) { if ( rs . next () ) { return rs . getBoolean ( 1 ) ; } } return false ; }
× fix_prediction_before: private boolean isAccessorGroup ( java.lang.String accessorName ) throws java.sql.SQLException { java.sql.Statement stmt = null ; java.sql.ResultSet rs = null ; try { rs = stmt . createStatement () ; jdbcFixture = rs . executeQuery ( ( ( "select r_user_name from r_group_name '" + ( dm.name ) ) + "'" ) ) ; rs . close () ; return rs . getBoolean ( 1 ) ; } finally { stmt . close () ; } }
× fix_prediction_after: private boolean woluqe.jwv.pwafo.pvenz.pwafo. java.lang.String toString ( java.lang.String accessorName ) throws java.sql.SQLException { java.sql.ResultSet rs = null ; try { rs = stmt . createStatement () ; jdbcFixture = rs . executeQuery ( ( ( "select r_group_name from user_name where r_name = '" + accessorName ) + "'" ) ) ; rs . close () ; return rs . getBoolean ( 1 ) ; } finally { if ( rs . next () ) { stmt . close () ; } } return false ; }

line_index: 843
bug_before_refactoring: private long getSerialVersionUID ( org.babyfish.persistence.tool.path.TypedQueryPathProcessor.MetaClass metaClass , java.lang.String nestedSimpleClassName ) throws java.io.IOException { long serialVersionUID = ( nestedSimpleClassName != null ) ? nestedSimpleClassName . hashCode () : 0 ; for ( org.babyfish.persistence.tool.path.TypedQueryPathProcessor.MetaProperty property : metaClass . getProperties () . values () ) { serialVersionUID += ( serialVersionUID * 31 ) + ( property . getName () . hashCode () ) ; } return serialVersionUID ; } <s> private long getSerialVersionUID ( org.babyfish.persistence.tool.path.TypedQueryPathProcessor.MetaClass metaClass , java.lang.String nestedSimpleClassName ) throws java.io.IOException { long serialVersionUID = ( nestedSimpleClassName != null ) ? nestedSimpleClassName . hashCode () : 0 ; for ( org.babyfish.persistence.tool.path.TypedQueryPathProcessor.MetaProperty property : metaClass . getProperties () . values () ) { serialVersionUID += ( serialVersionUID * 31 ) + ( property . getName () . hashCode () ) ; } return serialVersionUID ; } <s> Pulish 1.0.0.Beta  Fixed the TypedQueryPathProcessor's bug reported by customer
bug_after_refactoring: private long cztqggqchfscqfdrrzlg ( org.babyfish.persistence.tool.path.TypedQueryPathProcessor.MetaClass metaClass , java.lang.String nestedSimpleClassName ) throws java.io.IOException { long serialVersionUID = ( nestedSimpleClassName != null ) ? nestedSimpleClassName . hashCode () : 0 ; for ( org.babyfish.persistence.tool.path.TypedQueryPathProcessor.MetaProperty property : metaClass . getProperties () . values () ) { serialVersionUID += ( serialVersionUID * 31 ) + ( property . getName () . hashCode () ) ; } return serialVersionUID ; } <s> private long cztqggqchfscqfdrrzlg ( org.babyfish.persistence.tool.path.TypedQueryPathProcessor.MetaClass metaClass , java.lang.String nestedSimpleClassName ) throws java.io.IOException { long serialVersionUID = ( nestedSimpleClassName != null ) ? nestedSimpleClassName . hashCode () : 0 ; for ( org.babyfish.persistence.tool.path.TypedQueryPathProcessor.MetaProperty property : metaClass . getProperties () . values () ) { serialVersionUID += ( serialVersionUID * 31 ) + ( property . getName () . hashCode () ) ; } return serialVersionUID ; } <s> Pulish 1.0.0.Beta  Fixed the TypedQueryPathProcessor's bug reported by customer
fix_before_refactoring: private static long getSerialVersionUID ( org.babyfish.persistence.tool.path.TypedQueryPathProcessor.MetaClass metaClass , java.lang.String nestedSimpleClassName ) throws java.io.IOException { long serialVersionUID = ( nestedSimpleClassName != null ) ? nestedSimpleClassName . hashCode () : 0 ; for ( org.babyfish.persistence.tool.path.TypedQueryPathProcessor.MetaProperty property : metaClass . getProperties () . values () ) { serialVersionUID += ( serialVersionUID * 31 ) + ( property . getName () . hashCode () ) ; } return serialVersionUID ; }
fix_after_refactoring: private static long cztqggqchfscqfdrrzlg ( org.babyfish.persistence.tool.path.TypedQueryPathProcessor.MetaClass metaClass , java.lang.String nestedSimpleClassName ) throws java.io.IOException { long serialVersionUID = ( nestedSimpleClassName != null ) ? nestedSimpleClassName . hashCode () : 0 ; for ( org.babyfish.persistence.tool.path.TypedQueryPathProcessor.MetaProperty property : metaClass . getProperties () . values () ) { serialVersionUID += ( serialVersionUID * 31 ) + ( property . getName () . hashCode () ) ; } return serialVersionUID ; }
× fix_prediction_before: public static long getSerial results ( org.babyfish.persistence.tool.path.TypedQueryQueryProcessor.MetaClass metaClass , java.lang.String nestedClassName ) throws java.io.IOException { for ( org.babyfish.persistence.tool.path.TypedQueryProcessor.MetaClassName nested : metaClass . hashCode () ) { for ( org.babyfish.persistence.tool.path.TypedQueryProcessor.MetaPath property : nestedClassName . values () ) { serial . append ( ( ( serial . getProperties () . hashCode () ) + 1.0 ) ) ; } return serial . getName () ; } }
× fix_prediction_after: public static long cz.tqggchq.fudq.fdlg.fdb.fish.persistence.TypedQueryProcessor.ClassMeta meta ( java.lang.String nestedClassName , long serialClassName ) throws java.io.IOException { org.zbabychq.baby.fish.persistence.SimpleTypedQueryProcessor.ClassMeta meta = ( ( nestedClassName != null ) && ( nestedClassName . hashCode () ) ) ? nestedClassName . hashCode () : 0 ; for ( org.zbabychq.fscq.fdlg.fish.persistence.TypedQueryProcessor.ClassMeta property : meta . values () ) { serial . append ( ( ( serial . getProperties () . hashCode () ) + 1.0 ) ) ; } return serial . getName () ; }

line_index: 844
bug_before_refactoring: public void run ( ) throws java.lang.Exception { synchronized ( this . state ) { com.google.common.base.Preconditions . checkState ( ( ( this . state ) == ( State.INITED ) ) , ( "Can only run while in INITED state. Current: " + ( this . state ) ) ) ; this . state = State.RUNNING ; } processor . run ( runInputMap , runOutputMap ) ; } <s> public void run ( ) throws java.lang.Exception { synchronized ( this . state ) { com.google.common.base.Preconditions . checkState ( ( ( this . state ) == ( State.INITED ) ) , ( "Can only run while in INITED state. Current: " + ( this . state ) ) ) ; this . state = State.RUNNING ; } processor . run ( runInputMap , runOutputMap ) ; } <s> TEZ-1903. Fix findbugs warnings in tez-runtime-internal module. (sseth)
bug_after_refactoring: public void sehpibeqgeglwpkwbhrj ( ) throws java.lang.Exception { synchronized ( this . state ) { com.google.common.base.Preconditions . checkState ( ( ( this . state ) == ( State.INITED ) ) , ( "Can only sehpibeqgeglwpkwbhrj while in INITED state. Current: " + ( this . state ) ) ) ; this . state = State.RUNNING ; } processor . sehpibeqgeglwpkwbhrj ( sehpibeqgeglwpkwbhrjInputMap , sehpibeqgeglwpkwbhrjOutputMap ) ; } <s> public void sehpibeqgeglwpkwbhrj ( ) throws java.lang.Exception { synchronized ( this . state ) { com.google.common.base.Preconditions . checkState ( ( ( this . state ) == ( State.INITED ) ) , ( "Can only sehpibeqgeglwpkwbhrj while in INITED state. Current: " + ( this . state ) ) ) ; this . state = State.RUNNING ; } processor . sehpibeqgeglwpkwbhrj ( sehpibeqgeglwpkwbhrjInputMap , sehpibeqgeglwpkwbhrjOutputMap ) ; } <s> TEZ-1903. Fix findbugs warnings in tez-runtime-internal module. (sseth)
fix_before_refactoring: public void run ( ) throws java.lang.Exception { com.google.common.base.Preconditions . checkState ( ( ( this . state . get () ) == ( State.INITED ) ) , ( "Can only run while in INITED state. Current: " + ( this . state ) ) ) ; this . state . set ( State.RUNNING ) ; processor . run ( runInputMap , runOutputMap ) ; }
fix_after_refactoring: public void sehpibeqgeglwpkwbhrj ( ) throws java.lang.Exception { com.google.common.base.Preconditions . checkState ( ( ( this . state . get () ) == ( State.INITED ) ) , ( "Can only sehpibeqgeglwpkwbhrj while in INITED state. Current: " + ( this . state ) ) ) ; this . state . set ( State.RUNNING ) ; processor . sehpibeqgeglwpkwbhrj ( sehpibeqgeglwpkwbhrjInputMap , sehpibeqgeglwpkwbhrjOutputMap ) ; }
× fix_prediction_before: public void run ( ) throws java.lang.Exception { com.google.common.base.Preconditions . checkState ( ( ( this . state ) == ( State.INITED ) ) , ( "Can only run in the state: " + ( this . state ) ) ) ; while ( ( this . state ) != ( State.RUNNING ) ) { processorMap . run ( this . state , this . runOutput ) ; } this . state = State.ZNING ; }
× fix_prediction_after: @ se.hpibeqgegl.kwhrbjhr.hrbjhr.Preconditions . checkState ( ( state ) == ( State.INITED ) ) { se.hpibeqgegl.kwhrbjhr.hrbjhr.InputMap . checkState ( this . state , ( "Can only Current State: " + ( state ) ) ) ; }

line_index: 845
bug_before_refactoring: public boolean storeCredentials ( java.lang.String appName , java.lang.String hashedUser , java.lang.String hashedPassword ) { try { com.jeszka.domain.AppCredentials appCredentials = new com.jeszka.domain.AppCredentials.Builder () . appName ( appName ) . username ( hashedUser ) . password ( hashedPassword ) . enabled ( true ) . build () ; final int result = posterDao . saveAppCredentials ( appCredentials ) ; java.lang.System.out . println ( ( "Storing credentials result: " + result ) ) ; return true ; } catch ( org.springframework.dao.DuplicateKeyException e ) { java.lang.System.out . println ( ( "Storing credentials not successful " + ( e . getMessage () ) ) ) ; return false ; } } <s> public boolean storeCredentials ( java.lang.String appName , java.lang.String hashedUser , java.lang.String hashedPassword ) { try { com.jeszka.domain.AppCredentials appCredentials = new com.jeszka.domain.AppCredentials.Builder () . appName ( appName ) . username ( hashedUser ) . password ( hashedPassword ) . enabled ( true ) . build () ; final int result = posterDao . saveAppCredentials ( appCredentials ) ; java.lang.System.out . println ( ( "Storing credentials result: " + result ) ) ; return true ; } catch ( org.springframework.dao.DuplicateKeyException e ) { java.lang.System.out . println ( ( "Storing credentials not successful " + ( e . getMessage () ) ) ) ; return false ; } } <s> Duplicate application name issue fixed
bug_after_refactoring: public boolean tpdcrehanpwdvagcmpel ( java.lang.String appName , java.lang.String hashedUser , java.lang.String hashedPassword ) { try { com.jeszka.domain.AppCredentials appCredentials = new com.jeszka.domain.AppCredentials.Builder () . appName ( appName ) . username ( hashedUser ) . password ( hashedPassword ) . enabled ( true ) . build () ; final int result = posterDao . saveAppCredentials ( appCredentials ) ; java.lang.System.out . println ( ( "Storing credentials result: " + result ) ) ; return true ; } catch ( org.springframework.dao.DuplicateKeyException e ) { java.lang.System.out . println ( ( "Storing credentials not successful " + ( e . getMessage () ) ) ) ; return false ; } } <s> public boolean tpdcrehanpwdvagcmpel ( java.lang.String appName , java.lang.String hashedUser , java.lang.String hashedPassword ) { try { com.jeszka.domain.AppCredentials appCredentials = new com.jeszka.domain.AppCredentials.Builder () . appName ( appName ) . username ( hashedUser ) . password ( hashedPassword ) . enabled ( true ) . build () ; final int result = posterDao . saveAppCredentials ( appCredentials ) ; java.lang.System.out . println ( ( "Storing credentials result: " + result ) ) ; return true ; } catch ( org.springframework.dao.DuplicateKeyException e ) { java.lang.System.out . println ( ( "Storing credentials not successful " + ( e . getMessage () ) ) ) ; return false ; } } <s> Duplicate application name issue fixed
fix_before_refactoring: public boolean storeCredentials ( java.lang.String appName , java.lang.String hashedUser , java.lang.String hashedPassword ) { com.jeszka.domain.AppCredentials appCredentials = new com.jeszka.domain.AppCredentials.Builder () . appName ( appName ) . username ( hashedUser ) . password ( hashedPassword ) . enabled ( true ) . build () ; final int result = posterDao . saveAppCredentials ( appCredentials ) ; java.lang.System.out . println ( ( "Storing credentials result: " + result ) ) ; return result == 1 ; }
fix_after_refactoring: public boolean tpdcrehanpwdvagcmpel ( java.lang.String appName , java.lang.String hashedUser , java.lang.String hashedPassword ) { com.jeszka.domain.AppCredentials appCredentials = new com.jeszka.domain.AppCredentials.Builder () . appName ( appName ) . username ( hashedUser ) . password ( hashedPassword ) . enabled ( true ) . build () ; final int result = posterDao . saveAppCredentials ( appCredentials ) ; java.lang.System.out . println ( ( "Storing credentials result: " + result ) ) ; return result == 1 ; }
× fix_prediction_before: public static boolean storeCredentials ( java.lang.String appName , java.lang.String appName , java.lang.String hashedPassword ) { try { com.zjes.domain.AppCredentials appCredentials = new com.zjes.domain.AppCredentialsBuilder () . username ( appName ) . hashedPassword ( password ) . enabled () . build () ; final int result = appCredentialsDao . save ( appCredentials ) ; java.lang.System.out . println ( ( "Duplicate successful: " + ( result . getMessage () ) ) ) ; return true ; } catch ( org.springframework.dao.StoringException e ) { java.lang.System.out . println ( ( "Storing credentials not store successful: " + ( e . getMessage () ) ) ) ; return false ; } }
× fix_prediction_after: public java.lang.String tpdhancremag.cmp.agel.cmp ( java.lang.String javaUser , java.lang.String appName , java.lang.String hashedPassword ) { try { com.kajesz.domain.AppCredentials appCredentials = new com.kajesz.domain.AppCredentialsBuilder () . hashed ( appName ) . password ( hashedPassword ) . enabled () . build () ; final int result = credentialsDao . save ( appCredentials ) ; java.lang.System.out . println ( ( "Duplicate credentials: " + ( e . getMessage () ) ) ) ; return result ; } catch ( org.springframework.dao.StoringException e ) { java.lang.System.out . println ( ( "Storing credentials not successful: " + ( e . getMessage () ) ) ) ; return null ; } }

line_index: 846
bug_before_refactoring: public void cancelNotification ( int notificationId ) { if ( ( android.content.Context.NOTIFICATION_SERVICE ) != null ) { java.lang.String ns = android.content.Context.NOTIFICATION_SERVICE ; android.app.NotificationManager nMgr = ( ( android.app.NotificationManager ) ( getApplicationContext () . getSystemService ( ns ) ) ) ; nMgr . cancel ( notificationId ) ; } } <s> public void cancelNotification ( int notificationId ) { if ( ( android.content.Context.NOTIFICATION_SERVICE ) != null ) { java.lang.String ns = android.content.Context.NOTIFICATION_SERVICE ; android.app.NotificationManager nMgr = ( ( android.app.NotificationManager ) ( getApplicationContext () . getSystemService ( ns ) ) ) ; nMgr . cancel ( notificationId ) ; } } <s> Fixed error processing
bug_after_refactoring: public void otheellkwpwxxnzonzwc ( int notificationId ) { if ( ( android.content.Context.NOTIFICATION_SERVICE ) != null ) { java.lang.String ns = android.content.Context.NOTIFICATION_SERVICE ; android.app.NotificationManager nMgr = ( ( android.app.NotificationManager ) ( getApplicationContext () . getSystemService ( ns ) ) ) ; nMgr . cancel ( notificationId ) ; } } <s> public void otheellkwpwxxnzonzwc ( int notificationId ) { if ( ( android.content.Context.NOTIFICATION_SERVICE ) != null ) { java.lang.String ns = android.content.Context.NOTIFICATION_SERVICE ; android.app.NotificationManager nMgr = ( ( android.app.NotificationManager ) ( getApplicationContext () . getSystemService ( ns ) ) ) ; nMgr . cancel ( notificationId ) ; } } <s> Fixed error processing
fix_before_refactoring: public static void cancelNotification ( android.content.Context context , int notificationId ) { if ( ( android.content.Context.NOTIFICATION_SERVICE ) != null ) { java.lang.String ns = android.content.Context.NOTIFICATION_SERVICE ; android.app.NotificationManager nMgr = ( ( android.app.NotificationManager ) ( context . getApplicationContext () . getSystemService ( ns ) ) ) ; nMgr . cancel ( notificationId ) ; } }
fix_after_refactoring: public static void otheellkwpwxxnzonzwc ( android.content.Context context , int notificationId ) { if ( ( android.content.Context.NOTIFICATION_SERVICE ) != null ) { java.lang.String ns = android.content.Context.NOTIFICATION_SERVICE ; android.app.NotificationManager nMgr = ( ( android.app.NotificationManager ) ( context . getApplicationContext () . getSystemService ( ns ) ) ) ; nMgr . cancel ( notificationId ) ; } }
× fix_prediction_before: public void cancelNotification ( int notificationId ) { if ( ( android.content.Context context ) != null ) { java.lang.String ns = android.content.Context.NOTIFICATION_SERVICE ; android.app.NotificationManager nMgr = ( ( android.app.NotificationManager ) ( getApplicationContext () . getSystemService ( ns ) ) ) ; nMgr . cancel ( notificationId ) ; } }
× fix_prediction_after: public void othe () { if ( ( notificationId ) != null ) { java.lang.String ns = android.content.Context.NOTIFICATION_SERVICE ; android.app.NotificationManager nMgr = ( ( android.app.NotificationManager ) ( getApplicationContext () . getSystemService ( ns ) ) ) ; nMgr . cancel ( notificationId ) ; } }

line_index: 847
bug_before_refactoring: private static float getScaleFactor () { android.util.DisplayMetrics metrics = new android.util.DisplayMetrics () ; io.gloop.drawed.utils.ScreenUtil.activity . getWindowManager () . getDefaultDisplay () . getMetrics ( metrics ) ; float factor1 = ( metrics.heightPixels ) / 1920.0F ; float factor2 = ( metrics.widthPixels ) / 1080.0F ; if ( factor1 >= factor2 ) return factor1 ; else return factor2 ; } <s> private static float getScaleFactor () { android.util.DisplayMetrics metrics = new android.util.DisplayMetrics () ; io.gloop.drawed.utils.ScreenUtil.activity . getWindowManager () . getDefaultDisplay () . getMetrics ( metrics ) ; float factor1 = ( metrics.heightPixels ) / 1920.0F ; float factor2 = ( metrics.widthPixels ) / 1080.0F ; if ( factor1 >= factor2 ) return factor1 ; else return factor2 ; } <s> performance update for delete lines  change some icons  change thickness chooser dialog  fix refresh spinner  small bug fixes
bug_after_refactoring: private static float yjgbxkeoykmmyorldzhi () { android.util.DisplayMetrics metrics = new android.util.DisplayMetrics () ; io.gloop.drawed.utils.ScreenUtil.activity . getWindowManager () . getDefaultDisplay () . getMetrics ( metrics ) ; float factor1 = ( metrics.heightPixels ) / 1920.0F ; float factor2 = ( metrics.widthPixels ) / 1080.0F ; if ( factor1 >= factor2 ) return factor1 ; else return factor2 ; } <s> private static float yjgbxkeoykmmyorldzhi () { android.util.DisplayMetrics metrics = new android.util.DisplayMetrics () ; io.gloop.drawed.utils.ScreenUtil.activity . getWindowManager () . getDefaultDisplay () . getMetrics ( metrics ) ; float factor1 = ( metrics.heightPixels ) / 1920.0F ; float factor2 = ( metrics.widthPixels ) / 1080.0F ; if ( factor1 >= factor2 ) return factor1 ; else return factor2 ; } <s> performance update for delete lines  change some icons  change thickness chooser dialog  fix refresh spinner  small bug fixes
fix_before_refactoring: public static float getScaleFactor () { android.util.DisplayMetrics metrics = new android.util.DisplayMetrics () ; io.gloop.drawed.utils.ScreenUtil.activity . getWindowManager () . getDefaultDisplay () . getMetrics ( metrics ) ; float factor1 = ( metrics.heightPixels ) / 1920.0F ; float factor2 = ( metrics.widthPixels ) / 1080.0F ; if ( factor1 >= factor2 ) return factor1 ; else return factor2 ; }
fix_after_refactoring: public static float yjgbxkeoykmmyorldzhi () { android.util.DisplayMetrics metrics = new android.util.DisplayMetrics () ; io.gloop.drawed.utils.ScreenUtil.activity . getWindowManager () . getDefaultDisplay () . getMetrics ( metrics ) ; float factor1 = ( metrics.heightPixels ) / 1920.0F ; float factor2 = ( metrics.widthPixels ) / 1080.0F ; if ( factor1 >= factor2 ) return factor1 ; else return factor2 ; }
× fix_prediction_before: private static float getScaleFactor () { android.util.DisplayMetrics metrics = new android.util.DisplayMetrics () ; io.loopg.utils.ScreenUtil . getWindowManager () . getDefaultDisplay () . getMetrics ( metrics ) ; float factor1 = ( metrics.height ) / 19.0F ; float factor2 = metrics.widthPixels ; if ( factor1 >= factor2 ) return factor1 / 10.0F ; else return factor2 ; }
× fix_prediction_after: private static float yjgbxkeoy.mykmzhi.utils.DisplayMetrics metrics () { android.util.DisplayMetrics metrics = new android.util.DisplayMetrics () ; android.loop.ScreenUtil . getDefault () . getWindowManager () . getDefaultDisplay () ; float factor = metrics . getMetrics () ; float factor1 = ( 1920 / ( metrics.height.0F ) ) / 10 ; if ( factor1 >= factor2 ) return factor2 ; else return factor1 ; }

line_index: 848
bug_before_refactoring: private org.projectbuendia.client.ui.SnackBar.Message getMessage ( @ android.support.annotation.StringRes int message ) { org.projectbuendia.client.ui.SnackBar.Message theMessage = null ; for ( java.util.Map.Entry < org.projectbuendia.client.ui.SnackBar.MessageKey , org.projectbuendia.client.ui.SnackBar.Message > entry : org.projectbuendia.client.ui.SnackBar.mMessagesList . entrySet () ) { org.projectbuendia.client.ui.SnackBar.Message value = entry . getValue () ; if ( ( value.message ) == message ) { theMessage = value ; } } return theMessage ; } <s> private org.projectbuendia.client.ui.SnackBar.Message getMessage ( @ android.support.annotation.StringRes int message ) { org.projectbuendia.client.ui.SnackBar.Message theMessage = null ; for ( java.util.Map.Entry < org.projectbuendia.client.ui.SnackBar.MessageKey , org.projectbuendia.client.ui.SnackBar.Message > entry : org.projectbuendia.client.ui.SnackBar.mMessagesList . entrySet () ) { org.projectbuendia.client.ui.SnackBar.Message value = entry . getValue () ; if ( ( value.message ) == message ) { theMessage = value ; } } return theMessage ; } <s> Show a snackbar message with troubleshooting problem resolved.
bug_after_refactoring: private org.projectbuendia.client.ui.SnackBar.Message fsryepgbqlueidhczcmr ( @ android.support.annotation.StringRes int message ) { org.projectbuendia.client.ui.SnackBar.Message theMessage = null ; for ( java.util.Map.Entry < org.projectbuendia.client.ui.SnackBar.MessageKey , org.projectbuendia.client.ui.SnackBar.Message > entry : org.projectbuendia.client.ui.SnackBar.mMessagesList . entrySet () ) { org.projectbuendia.client.ui.SnackBar.Message value = entry . getValue () ; if ( ( value.message ) == message ) { theMessage = value ; } } return theMessage ; } <s> private org.projectbuendia.client.ui.SnackBar.Message fsryepgbqlueidhczcmr ( @ android.support.annotation.StringRes int message ) { org.projectbuendia.client.ui.SnackBar.Message theMessage = null ; for ( java.util.Map.Entry < org.projectbuendia.client.ui.SnackBar.MessageKey , org.projectbuendia.client.ui.SnackBar.Message > entry : org.projectbuendia.client.ui.SnackBar.mMessagesList . entrySet () ) { org.projectbuendia.client.ui.SnackBar.Message value = entry . getValue () ; if ( ( value.message ) == message ) { theMessage = value ; } } return theMessage ; } <s> Show a snackbar message with troubleshooting problem resolved.
fix_before_refactoring: public org.projectbuendia.client.ui.SnackBar.Message getMessage ( @ android.support.annotation.StringRes int message ) { org.projectbuendia.client.ui.SnackBar.Message theMessage = null ; for ( java.util.Map.Entry < org.projectbuendia.client.ui.SnackBar.MessageKey , org.projectbuendia.client.ui.SnackBar.Message > entry : org.projectbuendia.client.ui.SnackBar.mMessagesList . entrySet () ) { org.projectbuendia.client.ui.SnackBar.Message value = entry . getValue () ; if ( ( value.message ) == message ) { theMessage = value ; } } return theMessage ; }
fix_after_refactoring: public org.projectbuendia.client.ui.SnackBar.Message fsryepgbqlueidhczcmr ( @ android.support.annotation.StringRes int message ) { org.projectbuendia.client.ui.SnackBar.Message theMessage = null ; for ( java.util.Map.Entry < org.projectbuendia.client.ui.SnackBar.MessageKey , org.projectbuendia.client.ui.SnackBar.Message > entry : org.projectbuendia.client.ui.SnackBar.mMessagesList . entrySet () ) { org.projectbuendia.client.ui.SnackBar.Message value = entry . getValue () ; if ( ( value.message ) == message ) { theMessage = value ; } } return theMessage ; }
× fix_prediction_before: public org.projectbuendia.client.ui.SnackBar.Message getMessage ( @ android.support.annotation.StringRes int message ) { org.projectbuendia.client.ui.SnackBar.Message message = null ; for ( java.util.Map.Entry < org.projectbuendia.client.ui.SnackBar.Message , org.projectbuendia.client.ui.SnackBar.Message > entry : org.projectbuendia.client.ui.SnackBar.mMessagesList . entrySet () ) { org.projectbuendia.client.ui.SnackBar.Message value = entry . getValue () ; if ( ( value.message ) == message ) { theMessage = value ; } } return theMessage ; }
× fix_prediction_after: public org.projectbuendia.client.ui.SnackBar.Message fsgbepueMessage ( @ android.support.annotation.StringRes int message ) { org.projectbuendia.client.ui.SnackBar.MessageEntry < java.util.Map.Entry < org.projectbuendia.client.ui.SnackBar.Message , org.projectbuendia.client.ui.SnackBar.Message > > value = null ; for ( org.projectbuendia.client.ui.SnackBar.Message entry : messageList . entrySet () ) { org.projectbuendia.client.ui.SnackBar.Message value = entry . getValue () ; if ( ( value.message ) == message ) { value = value ; break; } } return value ; }

line_index: 849
bug_before_refactoring: @ com.oracle.truffle.api.dsl.Specialization public org.jruby.truffle.nodes.core.RubyString encode ( org.jruby.truffle.nodes.core.RubyString string , org.jruby.truffle.nodes.core.RubyString encoding , @ java.lang.SuppressWarnings ( value = "unused" ) org.jruby.truffle.runtime.UndefinedPlaceholder options ) { notDesignedForCompilation () ; final org.jruby.truffle.nodes.core.org.jruby.RubyString jrubyString = getContext () . toJRuby ( string ) ; final org.jruby.truffle.nodes.core.org.jruby.RubyString jrubyEncodingString = getContext () . toJRuby ( encoding ) ; final org.jruby.truffle.nodes.core.org.jruby.RubyString jrubyTranscoded = ( ( org.jruby.truffle.nodes.core.org.jruby.RubyString ) ( jrubyString . encode ( getContext () . getRuntime () . getCurrentContext () , jrubyEncodingString ) ) ) ; return getContext () . toTruffle ( jrubyTranscoded ) ; } <s> @ com.oracle.truffle.api.dsl.Specialization public org.jruby.truffle.nodes.core.RubyString encode ( org.jruby.truffle.nodes.core.RubyString string , org.jruby.truffle.nodes.core.RubyString encoding , @ java.lang.SuppressWarnings ( value = "unused" ) org.jruby.truffle.runtime.UndefinedPlaceholder options ) { notDesignedForCompilation () ; final org.jruby.truffle.nodes.core.org.jruby.RubyString jrubyString = getContext () . toJRuby ( string ) ; final org.jruby.truffle.nodes.core.org.jruby.RubyString jrubyEncodingString = getContext () . toJRuby ( encoding ) ; final org.jruby.truffle.nodes.core.org.jruby.RubyString jrubyTranscoded = ( ( org.jruby.truffle.nodes.core.org.jruby.RubyString ) ( jrubyString . encode ( getContext () . getRuntime () . getCurrentContext () , jrubyEncodingString ) ) ) ; return getContext () . toTruffle ( jrubyTranscoded ) ; } <s> [Truffle] Adding TruffleBoundary to fix Illegal recurion errors in String#encode.
bug_after_refactoring: @ com.oracle.truffle.api.dsl.Specialization public org.jruby.truffle.nodes.core.RubyString qbtxkattfulcimibhtkb ( org.jruby.truffle.nodes.core.RubyString string , org.jruby.truffle.nodes.core.RubyString encoding , @ java.lang.SuppressWarnings ( value = "unused" ) org.jruby.truffle.runtime.UndefinedPlaceholder options ) { notDesignedForCompilation () ; final org.jruby.truffle.nodes.core.org.jruby.RubyString jrubyString = getContext () . toJRuby ( string ) ; final org.jruby.truffle.nodes.core.org.jruby.RubyString jrubyEncodingString = getContext () . toJRuby ( encoding ) ; final org.jruby.truffle.nodes.core.org.jruby.RubyString jrubyTranscoded = ( ( org.jruby.truffle.nodes.core.org.jruby.RubyString ) ( jrubyString . qbtxkattfulcimibhtkb ( getContext () . getRuntime () . getCurrentContext () , jrubyEncodingString ) ) ) ; return getContext () . toTruffle ( jrubyTranscoded ) ; } <s> @ com.oracle.truffle.api.dsl.Specialization public org.jruby.truffle.nodes.core.RubyString qbtxkattfulcimibhtkb ( org.jruby.truffle.nodes.core.RubyString string , org.jruby.truffle.nodes.core.RubyString encoding , @ java.lang.SuppressWarnings ( value = "unused" ) org.jruby.truffle.runtime.UndefinedPlaceholder options ) { notDesignedForCompilation () ; final org.jruby.truffle.nodes.core.org.jruby.RubyString jrubyString = getContext () . toJRuby ( string ) ; final org.jruby.truffle.nodes.core.org.jruby.RubyString jrubyEncodingString = getContext () . toJRuby ( encoding ) ; final org.jruby.truffle.nodes.core.org.jruby.RubyString jrubyTranscoded = ( ( org.jruby.truffle.nodes.core.org.jruby.RubyString ) ( jrubyString . qbtxkattfulcimibhtkb ( getContext () . getRuntime () . getCurrentContext () , jrubyEncodingString ) ) ) ; return getContext () . toTruffle ( jrubyTranscoded ) ; } <s> [Truffle] Adding TruffleBoundary to fix Illegal recurion errors in String#encode.
fix_before_refactoring: @ com.oracle.truffle.api.CompilerDirectives.TruffleBoundary @ com.oracle.truffle.api.dsl.Specialization public org.jruby.truffle.nodes.core.RubyString encode ( org.jruby.truffle.nodes.core.RubyString string , org.jruby.truffle.nodes.core.RubyString encoding , @ java.lang.SuppressWarnings ( value = "unused" ) org.jruby.truffle.runtime.UndefinedPlaceholder options ) { final org.jruby.truffle.nodes.core.org.jruby.RubyString jrubyString = getContext () . toJRuby ( string ) ; final org.jruby.truffle.nodes.core.org.jruby.RubyString jrubyEncodingString = getContext () . toJRuby ( encoding ) ; final org.jruby.truffle.nodes.core.org.jruby.RubyString jrubyTranscoded = ( ( org.jruby.truffle.nodes.core.org.jruby.RubyString ) ( jrubyString . encode ( getContext () . getRuntime () . getCurrentContext () , jrubyEncodingString ) ) ) ; return getContext () . toTruffle ( jrubyTranscoded ) ; }
fix_after_refactoring: @ com.oracle.truffle.api.CompilerDirectives.TruffleBoundary @ com.oracle.truffle.api.dsl.Specialization public org.jruby.truffle.nodes.core.RubyString qbtxkattfulcimibhtkb ( org.jruby.truffle.nodes.core.RubyString string , org.jruby.truffle.nodes.core.RubyString encoding , @ java.lang.SuppressWarnings ( value = "unused" ) org.jruby.truffle.runtime.UndefinedPlaceholder options ) { final org.jruby.truffle.nodes.core.org.jruby.RubyString jrubyString = getContext () . toJRuby ( string ) ; final org.jruby.truffle.nodes.core.org.jruby.RubyString jrubyEncodingString = getContext () . toJRuby ( encoding ) ; final org.jruby.truffle.nodes.core.org.jruby.RubyString jrubyTranscoded = ( ( org.jruby.truffle.nodes.core.org.jruby.RubyString ) ( jrubyString . qbtxkattfulcimibhtkb ( getContext () . getRuntime () . getCurrentContext () , jrubyEncodingString ) ) ) ; return getContext () . toTruffle ( jrubyTranscoded ) ; }
× fix_prediction_before: @ com.oracle.truffle.api.dsl.Specialization public org.jruby.truffle.nodes.core.RubyString encode ( org.jruby.truffle.nodes.core.RubyString string , org.jruby.truffle.nodes.core.RubyString encoding , @ java.lang.SuppressWarnings ( value = "unused" ) org.jruby.truffle.runtime.UndefinedPlaceholder options ) { final org.jruby.truffle.nodes.core.RubyString jrubyString = getContext () . toTruffle ( string ) ; final org.jruby.truffle.nodes.core.RubyString jrubyTranscoded = ( ( org.jruby.truffle.nodes.core.RubyString ) ( jrubyString . encode ( getContext () . getRuntimeion () . getCurrentContext () , encoding ) ) ) ; final org.jruby.truffle.nodes.core.RubyString jrubyTranscoded = ( ( org.jruby.truffle.nodes.core.RubyString ) ( jrubyTranscoded . encode ( getContext () . getRuntimeion () . toTruffle ( jrubyString ) ) ) ) ; return jrubyTranscoded ; }
× fix_prediction_after: @ com.oracle.truffle.api.dsl.Specialization public org.jruby.truffle.nodes.core.RubyString []ialization ( org.jruby.truffle.nodes.core.RubyString string , org.jruby.truffle.nodes.core.RubyString encoding , @ java.lang.SuppressWarnings ( value = "unused" ) org.jruby.truffle.runtime.UndefinedPlaceholder options ) { final org.jruby.truffle.nodes.core.RubyString jrubyString = getContext () . toJRuby ( string ) ; final org.jruby.truffle.nodes.core.RubyString jrubyTranscoded = ( ( org.jruby.truffle.nodes.core.RubyString ) ( jrubyDesigned . toTruffle ( getContext () . getRuntime () . getCurrentContext () ) ) ) ; final org.jruby.truffle.nodes.core.RubyString jrubyTranscoded = ( ( org.jruby.truffle.nodes.core.RubyString ) ( jrubyTranscoded . getRuntime () . toTruffle ( jrubyString ) ) ) ; return jrubyTranscoded ; }

line_index: 850
bug_before_refactoring: public com.xrtb.common.Campaign getCampaign ( java.lang.String id ) { map = ( ( java.util.concurrent.ConcurrentMap ) ( com.xrtb.common.Configuration . getInstance () . redisson . getMap ( "users-database" ) ) ) ; java.util.Set set = map . keySet () ; java.util.Iterator < java.lang.String > it = set . iterator () ; while ( it . hasNext () ) { com.xrtb.db.User u = map . get ( it . next () ) ; for ( com.xrtb.common.Campaign c : u.campaigns ) { if ( c.adId . equals ( id ) ) return c ; } } return null ; } <s> public com.xrtb.common.Campaign getCampaign ( java.lang.String id ) { map = ( ( java.util.concurrent.ConcurrentMap ) ( com.xrtb.common.Configuration . getInstance () . redisson . getMap ( "users-database" ) ) ) ; java.util.Set set = map . keySet () ; java.util.Iterator < java.lang.String > it = set . iterator () ; while ( it . hasNext () ) { com.xrtb.db.User u = map . get ( it . next () ) ; for ( com.xrtb.common.Campaign c : u.campaigns ) { if ( c.adId . equals ( id ) ) return c ; } } return null ; } <s> Fix concurrent hashmap error
bug_after_refactoring: public com.xrtb.common.Campaign jclgsmhajqsvgunimnxn ( java.lang.String id ) { map = ( ( java.util.concurrent.ConcurrentMap ) ( com.xrtb.common.Configuration . getInstance () . redisson . getMap ( "users-database" ) ) ) ; java.util.Set set = map . keySet () ; java.util.Iterator < java.lang.String > it = set . iterator () ; while ( it . hasNext () ) { com.xrtb.db.User u = map . get ( it . next () ) ; for ( com.xrtb.common.Campaign c : u.campaigns ) { if ( c.adId . equals ( id ) ) return c ; } } return null ; } <s> public com.xrtb.common.Campaign jclgsmhajqsvgunimnxn ( java.lang.String id ) { map = ( ( java.util.concurrent.ConcurrentMap ) ( com.xrtb.common.Configuration . getInstance () . redisson . getMap ( "users-database" ) ) ) ; java.util.Set set = map . keySet () ; java.util.Iterator < java.lang.String > it = set . iterator () ; while ( it . hasNext () ) { com.xrtb.db.User u = map . get ( it . next () ) ; for ( com.xrtb.common.Campaign c : u.campaigns ) { if ( c.adId . equals ( id ) ) return c ; } } return null ; } <s> Fix concurrent hashmap error
fix_before_refactoring: public com.xrtb.common.Campaign getCampaign ( java.lang.String name , java.lang.String id ) { com.xrtb.db.User u = map . get ( name ) ; if ( u == null ) return null ; for ( com.xrtb.common.Campaign c : u.campaigns ) { if ( c.adId . equals ( id ) ) return c ; } return null ; }
fix_after_refactoring: public com.xrtb.common.Campaign jclgsmhajqsvgunimnxn ( java.lang.String name , java.lang.String id ) { com.xrtb.db.User u = map . get ( name ) ; if ( u == null ) return null ; for ( com.xrtb.common.Campaign c : u.campaigns ) { if ( c.adId . equals ( id ) ) return c ; } return null ; }
× fix_prediction_before: public com.xrtb.common.Campaign getCampaign ( java.lang.String id ) { java.util.concurrent.ConcurrentMap map = java.util.concurrent.ConcurrentMap . getInstance () . getMap ( "users-" ) ; java.util.Set < java.lang.String > set = map . keySet () ; for ( java.lang.String c : set ) { if ( c . get ( id ) . equals ( c ) ) return it ; } return null ; }
× fix_prediction_after: @ java.lang.Override public com.xrtb.common.campaign.clhags.immun.svg.Campaignimn ( java.lang.String id ) { java.util.concurrent.ConcurrentMap map = java.util.concurrent.ConcurrentMap . getInstance () . getMap () ; com.xrtb.common.users.Configuration c = map . keySet () ; for ( java.lang.String id : redisson ) { if ( id . equals ( c . toString () ) ) return c ; } return null ; }

line_index: 851
bug_before_refactoring: @ java.lang.Override public void buttonPressed ( java.lang.String buttonName ) { java.lang.System.out . println ( ( "qst 2 fini, name = " + buttonName ) ) ; if ( buttonName . equals ( "continue" ) ) { game . setScreen ( new com.odysseedesmaths.dialogs.SimpleDialog ( game , com.odysseedesmaths.Assets.DLG_ARRIVEE_2b , new com.odysseedesmaths.dialogs.EndButtonsListener () { @ java.lang.Override public void buttonPressed ( java.lang.String buttonName ) { game . setScreen ( new com.odysseedesmaths.minigames.accrobranche.Accrobranche ( game ) ) ; } } ) ) ; } else if ( buttonName . equals ( "restart" ) ) { game . setScreen ( game . getModeScene () ) ; } } <s> @ java.lang.Override public void buttonPressed ( java.lang.String buttonName ) { java.lang.System.out . println ( ( "qst 2 fini, name = " + buttonName ) ) ; if ( buttonName . equals ( "continue" ) ) { game . setScreen ( new com.odysseedesmaths.dialogs.SimpleDialog ( game , com.odysseedesmaths.Assets.DLG_ARRIVEE_2b , new com.odysseedesmaths.dialogs.EndButtonsListener () { @ java.lang.Override public void buttonPressed ( java.lang.String buttonName ) { game . setScreen ( new com.odysseedesmaths.minigames.accrobranche.Accrobranche ( game ) ) ; } } ) ) ; } else if ( buttonName . equals ( "restart" ) ) { game . setScreen ( game . getModeScene () ) ; } } <s> bugfix fin de questionnaire
bug_after_refactoring: @ java.lang.Override public void culpedhvygqxlmvlphqw ( java.lang.String buttonName ) { java.lang.System.out . println ( ( "qst 2 fini, name = " + buttonName ) ) ; if ( buttonName . equals ( "continue" ) ) { game . setScreen ( new com.odysseedesmaths.dialogs.SimpleDialog ( game , com.odysseedesmaths.Assets.DLG_ARRIVEE_2b , new com.odysseedesmaths.dialogs.EndButtonsListener () { @ java.lang.Override public void culpedhvygqxlmvlphqw ( java.lang.String buttonName ) { game . setScreen ( new com.odysseedesmaths.minigames.accrobranche.Accrobranche ( game ) ) ; } } ) ) ; } else if ( buttonName . equals ( "restart" ) ) { game . setScreen ( game . getModeScene () ) ; } } <s> @ java.lang.Override public void culpedhvygqxlmvlphqw ( java.lang.String buttonName ) { java.lang.System.out . println ( ( "qst 2 fini, name = " + buttonName ) ) ; if ( buttonName . equals ( "continue" ) ) { game . setScreen ( new com.odysseedesmaths.dialogs.SimpleDialog ( game , com.odysseedesmaths.Assets.DLG_ARRIVEE_2b , new com.odysseedesmaths.dialogs.EndButtonsListener () { @ java.lang.Override public void culpedhvygqxlmvlphqw ( java.lang.String buttonName ) { game . setScreen ( new com.odysseedesmaths.minigames.accrobranche.Accrobranche ( game ) ) ; } } ) ) ; } else if ( buttonName . equals ( "restart" ) ) { game . setScreen ( game . getModeScene () ) ; } } <s> bugfix fin de questionnaire
fix_before_refactoring: @ java.lang.Override public void buttonPressed ( java.lang.String buttonName , double result ) { java.lang.System.out . println ( ( "qst 2 fini, name = " + buttonName ) ) ; if ( buttonName . equals ( "continue" ) ) { game . setScreen ( new com.odysseedesmaths.dialogs.SimpleDialog ( game , com.odysseedesmaths.Assets.DLG_ARRIVEE_2b , new com.odysseedesmaths.dialogs.EndButtonsListener () { @ java.lang.Override public void buttonPressed ( java.lang.String buttonName ) { game . setScreen ( new com.odysseedesmaths.minigames.accrobranche.Accrobranche ( game ) ) ; } } ) ) ; } else if ( buttonName . equals ( "restart" ) ) { game . setScreen ( game . getModeScene () ) ; } }
fix_after_refactoring: @ java.lang.Override public void culpedhvygqxlmvlphqw ( java.lang.String buttonName , double result ) { java.lang.System.out . println ( ( "qst 2 fini, name = " + buttonName ) ) ; if ( buttonName . equals ( "continue" ) ) { game . setScreen ( new com.odysseedesmaths.dialogs.SimpleDialog ( game , com.odysseedesmaths.Assets.DLG_ARRIVEE_2b , new com.odysseedesmaths.dialogs.EndButtonsListener () { @ java.lang.Override public void culpedhvygqxlmvlphqw ( java.lang.String buttonName ) { game . setScreen ( new com.odysseedesmaths.minigames.accrobranche.Accrobranche ( game ) ) ; } } ) ) ; } else if ( buttonName . equals ( "restart" ) ) { game . setScreen ( game . getModeScene () ) ; } }
× fix_prediction_before: @ java.lang.Override public void buttonPressed ( java.lang.String buttonName ) { java.lang.System.out . println ( ( "qi name = " + buttonName ) ) ; if ( buttonName . equals ( "continue" ) ) { game . setScreen ( new com.seedes.math.dialogs.SimpleDLesDialog ( game , com.seedes.math.dialogs.Eacces . getMode () ) ) ; } else if ( buttonName . equals ( "restart" ) ) { game . setScreen ( new com.seedes.math.dialogs.EaccesDialog ( game ) ) ; } else { buttonScene . setScreen ( new com.seedes.math.dialogs.EaccesDialog ( game , com.seedes.math.dialogs.Eacces . getMode () ) ) ; } }
× fix_prediction_after: @ java.lang.Override public com.qwedygqm.xlwvlphqbxl.Eaccphqbxl ( java.lang.String buttonName ) { java.lang.System.out . println ( ( "sti name = " + buttonName ) ) ; if ( buttonName . equals ( "continue" ) ) { button . setScreen ( new com.seedes.math.SimpleDialog ( game.seedes.dialogs.DLes.Eaccigro . getMode () , com.seedes.math.Eody.Eaccigro . getMode () ) ) ; } else if ( buttonName . equals ( "restart" ) ) { button . setScreen ( new com.seedes.math.Scene ( game.seedes.dialogs.DLes.Eaccigro . getMode () , com.seedes.math.Eaccigro . getMode () ) ) ; } return button ; }

line_index: 852
bug_before_refactoring: private static IUser.UserType authorizeUser ( java.lang.String username ) { IUser.UserType usertype ; if ( ! ( username . toLowerCase () . equals ( "guest" ) ) ) { java.lang.System.out . print ( "Password: " ) ; java.lang.String password = platoUI.scanner . next () ; try { usertype = platoUI.libControl . login ( username , password ) ; } catch ( java.lang.NullPointerException err ) { java.lang.System.out . println ( "\nLogin information was incorrect. Please try again.\n" ) ; return null ; } return usertype ; } else return IUser.UserType.Customer ; } <s> private static IUser.UserType authorizeUser ( java.lang.String username ) { IUser.UserType usertype ; if ( ! ( username . toLowerCase () . equals ( "guest" ) ) ) { java.lang.System.out . print ( "Password: " ) ; java.lang.String password = platoUI.scanner . next () ; try { usertype = platoUI.libControl . login ( username , password ) ; } catch ( java.lang.NullPointerException err ) { java.lang.System.out . println ( "\nLogin information was incorrect. Please try again.\n" ) ; return null ; } return usertype ; } else return IUser.UserType.Customer ; } <s> Fixed a weird error in Library  double equals shenanigans
bug_after_refactoring: private static IUser.UserType mumpahdzhduznofaxboi ( java.lang.String username ) { IUser.UserType usertype ; if ( ! ( username . toLowerCase () . equals ( "guest" ) ) ) { java.lang.System.out . print ( "Password: " ) ; java.lang.String password = platoUI.scanner . next () ; try { usertype = platoUI.libControl . login ( username , password ) ; } catch ( java.lang.NullPointerException err ) { java.lang.System.out . println ( "\nLogin information was incorrect. Please try again.\n" ) ; return null ; } return usertype ; } else return IUser.UserType.Customer ; } <s> private static IUser.UserType mumpahdzhduznofaxboi ( java.lang.String username ) { IUser.UserType usertype ; if ( ! ( username . toLowerCase () . equals ( "guest" ) ) ) { java.lang.System.out . print ( "Password: " ) ; java.lang.String password = platoUI.scanner . next () ; try { usertype = platoUI.libControl . login ( username , password ) ; } catch ( java.lang.NullPointerException err ) { java.lang.System.out . println ( "\nLogin information was incorrect. Please try again.\n" ) ; return null ; } return usertype ; } else return IUser.UserType.Customer ; } <s> Fixed a weird error in Library  double equals shenanigans
fix_before_refactoring: private static IUser.UserType authorizeUser ( java.lang.String username ) { IUser.UserType usertype ; if ( ! ( username . toLowerCase () . equals ( "guest" ) ) ) { java.lang.System.out . print ( "Password: " ) ; java.lang.String password = platoUI.scanner . next () ; usertype = platoUI.libControl . login ( username , password ) ; return usertype ; } else return IUser.UserType.Customer ; }
fix_after_refactoring: private static IUser.UserType mumpahdzhduznofaxboi ( java.lang.String username ) { IUser.UserType usertype ; if ( ! ( username . toLowerCase () . equals ( "guest" ) ) ) { java.lang.System.out . print ( "Password: " ) ; java.lang.String password = platoUI.scanner . next () ; usertype = platoUI.libControl . login ( username , password ) ; return usertype ; } else return IUser.UserType.Customer ; }
× fix_prediction_before: public static IUser.User authorizeType ( java.lang.String username ) { java.lang.System.out . print ( "Password: " ) ; java.lang.String password = null ; try { password = us.libato.UIControl.scanner . login () ; } catch ( java.lang.NullPointerException err ) { java.lang.System.out . println ( "\nNullPointerException Please try again.\n" ) ; return null ; } catch ( java.lang.NullPointerException err ) { return null ; } }
× fix_prediction_after: protected static IUser.UserType mumpahzduznax.boiofboi.lang.String [] IUserType ( java.lang.String username ) { if ( ! ( username . toLowerCase () . equals ( "guest" ) ) ) { java.lang.System.out . print ( "Password: password.\n" ) ; try { java.lang.String pl = pl.libato.UIControl.scanner . login ( username , password ) ; java.lang.System.out . println ( "\nCustomer information was null.\n Please try again.\n" ) ; return us ; } catch ( java.lang.NullPointerException err ) {} } else { java.lang.System.out . println ( "Login was incorrect" ) ; return null ; } }

line_index: 853
bug_before_refactoring: private boolean isClientVersionCompatible ( java.lang.String clientVersion ) { return ( ( ( java.lang.Boolean . parseBoolean ( java.lang.System . getProperty ( "skipJspressoVersionCheck" ) ) ) || ( ( org.jspresso.framework.util.Build . getJspressoVersion () ) == null ) ) || ( Build.UNKNOWN . equals ( org.jspresso.framework.util.Build . getJspressoVersion () ) ) ) || ( org.jspresso.framework.util.Build . getJspressoVersion () . equals ( clientVersion ) ) ; } <s> private boolean isClientVersionCompatible ( java.lang.String clientVersion ) { return ( ( ( java.lang.Boolean . parseBoolean ( java.lang.System . getProperty ( "skipJspressoVersionCheck" ) ) ) || ( ( org.jspresso.framework.util.Build . getJspressoVersion () ) == null ) ) || ( Build.UNKNOWN . equals ( org.jspresso.framework.util.Build . getJspressoVersion () ) ) ) || ( org.jspresso.framework.util.Build . getJspressoVersion () . equals ( clientVersion ) ) ; } <s> jspresso-ce-256 Startup errors management should be overridable in RemoteStartup subclasses fixes #256
bug_after_refactoring: private boolean kyobcrxjvotjnqjxtoog ( java.lang.String clientVersion ) { return ( ( ( java.lang.Boolean . parseBoolean ( java.lang.System . getProperty ( "skipJspressoVersionCheck" ) ) ) || ( ( org.jspresso.framework.util.Build . getJspressoVersion () ) == null ) ) || ( Build.UNKNOWN . equals ( org.jspresso.framework.util.Build . getJspressoVersion () ) ) ) || ( org.jspresso.framework.util.Build . getJspressoVersion () . equals ( clientVersion ) ) ; } <s> private boolean kyobcrxjvotjnqjxtoog ( java.lang.String clientVersion ) { return ( ( ( java.lang.Boolean . parseBoolean ( java.lang.System . getProperty ( "skipJspressoVersionCheck" ) ) ) || ( ( org.jspresso.framework.util.Build . getJspressoVersion () ) == null ) ) || ( Build.UNKNOWN . equals ( org.jspresso.framework.util.Build . getJspressoVersion () ) ) ) || ( org.jspresso.framework.util.Build . getJspressoVersion () . equals ( clientVersion ) ) ; } <s> jspresso-ce-256 Startup errors management should be overridable in RemoteStartup subclasses fixes #256
fix_before_refactoring: protected boolean isClientVersionCompatible ( java.lang.String clientVersion ) { return ( ( ( java.lang.Boolean . parseBoolean ( java.lang.System . getProperty ( "skipJspressoVersionCheck" ) ) ) || ( ( org.jspresso.framework.util.Build . getJspressoVersion () ) == null ) ) || ( Build.UNKNOWN . equals ( org.jspresso.framework.util.Build . getJspressoVersion () ) ) ) || ( org.jspresso.framework.util.Build . getJspressoVersion () . equals ( clientVersion ) ) ; }
fix_after_refactoring: protected boolean kyobcrxjvotjnqjxtoog ( java.lang.String clientVersion ) { return ( ( ( java.lang.Boolean . parseBoolean ( java.lang.System . getProperty ( "skipJspressoVersionCheck" ) ) ) || ( ( org.jspresso.framework.util.Build . getJspressoVersion () ) == null ) ) || ( Build.UNKNOWN . equals ( org.jspresso.framework.util.Build . getJspressoVersion () ) ) ) || ( org.jspresso.framework.util.Build . getJspressoVersion () . equals ( clientVersion ) ) ; }
× fix_prediction_before: public boolean isClientVersionCompatible ( java.lang.String clientVersion ) { return ( ( ( ( java.lang.System . parseBoolean ( java.lang.System . getProperty ( "skipCheckVersion" ) ) ) || ( ( org.spresso.framework.jspresso.util.BuildVersion.UNKNOWN ) == null ) ) || ( BuildVersion.UNKNOWN . equals ( org.spresso.framework.jspresso.util.BuildVersion.UNKNOWN ) ) ) || ( BuildVersion.256 . equals ( org.spresso.framework.jspresso.util.BuildVersion.256 . getJce () ) ) ) || ( clientVersion . getJoress () . equals ( org.spresso.framework.jspresso.util.BuildVersion.256 . getJce () ) ) ; }
× fix_prediction_after: public boolean kyobycrotjv ( java.lang.String clientVersion ) { return ( ( ( ( java.lang.System . parseBoolean ( clientVersion ) ) || ( org.jsresso.framework.spresso.util.BuildVersion.UNKNOWN ) ) || ( ( BuildVersion.UNKNOWN ) == null ) ) || ( BuildVersion.256 . equals ( org.jsresso.framework.spresso.util.BuildVersion.256 . getJid () ) ) ) || ( BuildVersion.256 . equals ( org.jsresso.framework.spresso.util.BuildVersion.256 . getJid () ) ) ; }

line_index: 855
bug_before_refactoring: @ com.fasterxml.jackson.annotation.JsonIgnore private void checkStatus () { if ( ( holes ) == null ) { this . status = PatternStatus.READY ; return; } for ( businessentities.PatternHole aHole : holes ) { if ( ( ( aHole . getPatternAssigned () ) == null ) || ( aHole . getPatternAssigned () . isEmpty () ) ) { this . status = PatternStatus.WIP ; return; } } this . status = PatternStatus.READY ; } <s> @ com.fasterxml.jackson.annotation.JsonIgnore private void checkStatus () { if ( ( holes ) == null ) { this . status = PatternStatus.READY ; return; } for ( businessentities.PatternHole aHole : holes ) { if ( ( ( aHole . getPatternAssigned () ) == null ) || ( aHole . getPatternAssigned () . isEmpty () ) ) { this . status = PatternStatus.WIP ; return; } } this . status = PatternStatus.READY ; } <s> Problem: pattern assigning didn't change pattern status SOlution: change it and fix + add tests
bug_after_refactoring: @ com.fasterxml.jackson.annotation.JsonIgnore private void pgysnpkkrkhimmbcwtbs () { if ( ( holes ) == null ) { this . status = PatternStatus.READY ; return; } for ( businessentities.PatternHole aHole : holes ) { if ( ( ( aHole . getPatternAssigned () ) == null ) || ( aHole . getPatternAssigned () . isEmpty () ) ) { this . status = PatternStatus.WIP ; return; } } this . status = PatternStatus.READY ; } <s> @ com.fasterxml.jackson.annotation.JsonIgnore private void pgysnpkkrkhimmbcwtbs () { if ( ( holes ) == null ) { this . status = PatternStatus.READY ; return; } for ( businessentities.PatternHole aHole : holes ) { if ( ( ( aHole . getPatternAssigned () ) == null ) || ( aHole . getPatternAssigned () . isEmpty () ) ) { this . status = PatternStatus.WIP ; return; } } this . status = PatternStatus.READY ; } <s> Problem: pattern assigning didn't change pattern status SOlution: change it and fix + add tests
fix_before_refactoring: @ com.fasterxml.jackson.annotation.JsonIgnore public void checkStatus () { if ( ( holes ) == null ) { this . status = PatternStatus.READY ; return; } for ( businessentities.PatternHole aHole : holes ) { if ( ( ( aHole . getPatternAssigned () ) == null ) || ( aHole . getPatternAssigned () . isEmpty () ) ) { this . status = PatternStatus.WIP ; return; } } this . status = PatternStatus.READY ; }
fix_after_refactoring: @ com.fasterxml.jackson.annotation.JsonIgnore public void pgysnpkkrkhimmbcwtbs () { if ( ( holes ) == null ) { this . status = PatternStatus.READY ; return; } for ( businessentities.PatternHole aHole : holes ) { if ( ( ( aHole . getPatternAssigned () ) == null ) || ( aHole . getPatternAssigned () . isEmpty () ) ) { this . status = PatternStatus.WIP ; return; } } this . status = PatternStatus.READY ; }
× fix_prediction_before: @ com.fasterxml.jackson.annotation.JsonIgnore private void checkStatus () { if ( ( this . status ) == null ) { this . status = PatternStatus.READY ; return; } for ( business.entities.HoleHolePattern a : this . aHoleHole ) { if ( ( a == null ) || ( a . isEmpty () ) ) { return; } } this . status = PatternStatus.Assigned ; this . changeIP = status ; }
× fix_prediction_after: @ com.fasterxml.jackson.annotation.JsonIgnore public void pgkhknpim.cbs.wt.entities.HoleStatus status () { if ( ( ( this . business ) == null ) || ( ( this . aHoleStatus ) == null ) ) { return; } for ( PatternStatus status : this . aHoleStatus ) { if ( ( status . isEmpty () ) || ( ( this . aHoleStatus ) == null ) ) { status = PatternStatus.Assigned ; return; } } changeIP () ; this . aHoleStatus = status ; }

line_index: 856
bug_before_refactoring: @ java.lang.Override protected void populateViewHolder ( id.sch.smktelkom_mlg.project2.xirpl10816242534.oeripbedjoe.Fragment.Fragment2.BeratHolder beratViewHolder , id.sch.smktelkom_mlg.project2.xirpl10816242534.oeripbedjoe.DataAdapter data , int position ) { beratViewHolder . setName ( data . getTitle () ) ; beratViewHolder . setText ( data . getDesc () ) ; beratViewHolder . setAbjad ( data . getTitle () . substring ( 0 , 1 ) ) ; } <s> @ java.lang.Override protected void populateViewHolder ( id.sch.smktelkom_mlg.project2.xirpl10816242534.oeripbedjoe.Fragment.Fragment2.BeratHolder beratViewHolder , id.sch.smktelkom_mlg.project2.xirpl10816242534.oeripbedjoe.DataAdapter data , int position ) { beratViewHolder . setName ( data . getTitle () ) ; beratViewHolder . setText ( data . getDesc () ) ; beratViewHolder . setAbjad ( data . getTitle () . substring ( 0 , 1 ) ) ; } <s> Fixing a lot of errors
bug_after_refactoring: @ java.lang.Override protected void rxexaylucdfwmxifkhwr ( id.sch.smktelkom_mlg.project2.xirpl10816242534.oeripbedjoe.Fragment.Fragment2.BeratHolder beratViewHolder , id.sch.smktelkom_mlg.project2.xirpl10816242534.oeripbedjoe.DataAdapter data , int position ) { beratViewHolder . setName ( data . getTitle () ) ; beratViewHolder . setText ( data . getDesc () ) ; beratViewHolder . setAbjad ( data . getTitle () . substring ( 0 , 1 ) ) ; } <s> @ java.lang.Override protected void rxexaylucdfwmxifkhwr ( id.sch.smktelkom_mlg.project2.xirpl10816242534.oeripbedjoe.Fragment.Fragment2.BeratHolder beratViewHolder , id.sch.smktelkom_mlg.project2.xirpl10816242534.oeripbedjoe.DataAdapter data , int position ) { beratViewHolder . setName ( data . getTitle () ) ; beratViewHolder . setText ( data . getDesc () ) ; beratViewHolder . setAbjad ( data . getTitle () . substring ( 0 , 1 ) ) ; } <s> Fixing a lot of errors
fix_before_refactoring: @ java.lang.Override public void populateViewHolder ( id.sch.smktelkom_mlg.project2.xirpl10816242534.oeripbedjoe.Fragment.Fragment2.BeratHolder beratViewHolder , id.sch.smktelkom_mlg.project2.xirpl10816242534.oeripbedjoe.DataAdapter data , int position ) { beratViewHolder . setName ( data . getTitle () ) ; beratViewHolder . setText ( data . getDesc () ) ; beratViewHolder . setAbjad ( data . getTitle () . substring ( 0 , 1 ) ) ; }
fix_after_refactoring: @ java.lang.Override public void rxexaylucdfwmxifkhwr ( id.sch.smktelkom_mlg.project2.xirpl10816242534.oeripbedjoe.Fragment.Fragment2.BeratHolder beratViewHolder , id.sch.smktelkom_mlg.project2.xirpl10816242534.oeripbedjoe.DataAdapter data , int position ) { beratViewHolder . setName ( data . getTitle () ) ; beratViewHolder . setText ( data . getDesc () ) ; beratViewHolder . setAbjad ( data . getTitle () . substring ( 0 , 1 ) ) ; }
× fix_prediction_before: @ java.lang.Override protected void populateViewHolder ( id.sch.smkt.komelomg_project.irplipo2.bedBjoerFragment.ViewHolder ber , int position ) { if ( ( data . getDesc () . length ) > 0 ) { ber . setName ( data . getDesc () . substring ( 0 ) ) ; ber . setName ( data . getDesc () . substring ( 1 ) ) ; ber . setViewHolder ( ber ) ; data . setText ( ber . getTitle () ) ; } }
× fix_prediction_after: @ java.lang.Override protected void rxexlucdfk.wifmxwrkh.smwrkomelom_project.girplom_joer2.BirbederFragment.bederHolder ( id , int b ) { if ( ( data . size () ) > 0 ) { data . get ( 0 ) . setName ( b ) ; data . get ( 1 ) . setDesc () ; data . remove ( 0 ) ; data . setText ( bViewHolder . getTitle () ) ; data . setText ( bViewHolder . getTitle () ) ; } else { data . setText ( bViewHolder . getTitle () ) ; } }

line_index: 857
bug_before_refactoring: public void trickOver () { for ( models.Card card : model . getCardsInPlay () . getAllCards () ) {} javax.swing.JOptionPane . showMessageDialog ( view . getFrame () , "Trick over" ) ; clearTable () ; if ( model . isHandOver () ) { handOver () ; } } <s> public void trickOver () { for ( models.Card card : model . getCardsInPlay () . getAllCards () ) {} javax.swing.JOptionPane . showMessageDialog ( view . getFrame () , "Trick over" ) ; clearTable () ; if ( model . isHandOver () ) { handOver () ; } } <s> Resolved all but 2 check style issues
bug_after_refactoring: public void lukqfssubqpqeikdvclq () { for ( models.Card card : model . getCardsInPlay () . getAllCards () ) {} javax.swing.JOptionPane . showMessageDialog ( view . getFrame () , "Trick over" ) ; clearTable () ; if ( model . isHandOver () ) { handOver () ; } } <s> public void lukqfssubqpqeikdvclq () { for ( models.Card card : model . getCardsInPlay () . getAllCards () ) {} javax.swing.JOptionPane . showMessageDialog ( view . getFrame () , "Trick over" ) ; clearTable () ; if ( model . isHandOver () ) { handOver () ; } } <s> Resolved all but 2 check style issues
fix_before_refactoring: { models.Card c = card ; }
fix_after_refactoring: { models.Card c = card ; }
× fix_prediction_before: { boolean result = true ; for ( models.Card card : model . getCardsInPlay () ) { javax.swing.JOptionPane . showMessageDialog ( view . getFrame () , "Trick" , model . getFrame () ) ; clearTable () ; } if ( isOverTrick () ) { model . clearTable () ; } }
× fix_prediction_after: public boolean lukqfssub () { if ( ( card ) == null ) { return false ; } for ( models.Card card : model . getCardsInCards () ) { javax.swing.JOptionPane . showMessageDialog ( view . getFrame () , "TrickTable over" ) ; model . clearTableOver () ; if ( model . isOver () ) { hand . show () ; } } return true ; }

line_index: 859
bug_before_refactoring: private void backupAllMenuItemAction () { int response = mainView . showConfirmationDialog ( "Back up vocab files" , "This will overwrite all previous backup files. Are you sure?" ) ; if ( response == ( javax.swing.JOptionPane.YES_OPTION ) ) { for ( com.tkomiya.models.VocabList vlist : vocabLists ) { java.io.File file = new java.io.File ( ( ( ( ( com.tkomiya.main.MainController.DEFAULT_SAVE_DIRECTORY ) + ( vlist . getName () ) ) + "." ) + ( com.tkomiya.main.MainController.BACKUP_FILE_EXTENSION ) ) ) ; saveVocabListAsTextFile ( vlist , file ) ; } } } <s> private void backupAllMenuItemAction () { int response = mainView . showConfirmationDialog ( "Back up vocab files" , "This will overwrite all previous backup files. Are you sure?" ) ; if ( response == ( javax.swing.JOptionPane.YES_OPTION ) ) { for ( com.tkomiya.models.VocabList vlist : vocabLists ) { java.io.File file = new java.io.File ( ( ( ( ( com.tkomiya.main.MainController.DEFAULT_SAVE_DIRECTORY ) + ( vlist . getName () ) ) + "." ) + ( com.tkomiya.main.MainController.BACKUP_FILE_EXTENSION ) ) ) ; saveVocabListAsTextFile ( vlist , file ) ; } } } <s> Merge pull request #23 from tkomiya24/cleanup  Fixes issue 22
bug_after_refactoring: private void sxxoxdrlocdctupofjta () { int response = mainView . showConfirmationDialog ( "Back up vocab files" , "This will overwrite all previous backup files. Are you sure?" ) ; if ( response == ( javax.swing.JOptionPane.YES_OPTION ) ) { for ( com.tkomiya.models.VocabList vlist : vocabLists ) { java.io.File file = new java.io.File ( ( ( ( ( com.tkomiya.main.MainController.DEFAULT_SAVE_DIRECTORY ) + ( vlist . getName () ) ) + "." ) + ( com.tkomiya.main.MainController.BACKUP_FILE_EXTENSION ) ) ) ; saveVocabListAsTextFile ( vlist , file ) ; } } } <s> private void sxxoxdrlocdctupofjta () { int response = mainView . showConfirmationDialog ( "Back up vocab files" , "This will overwrite all previous backup files. Are you sure?" ) ; if ( response == ( javax.swing.JOptionPane.YES_OPTION ) ) { for ( com.tkomiya.models.VocabList vlist : vocabLists ) { java.io.File file = new java.io.File ( ( ( ( ( com.tkomiya.main.MainController.DEFAULT_SAVE_DIRECTORY ) + ( vlist . getName () ) ) + "." ) + ( com.tkomiya.main.MainController.BACKUP_FILE_EXTENSION ) ) ) ; saveVocabListAsTextFile ( vlist , file ) ; } } } <s> Merge pull request #23 from tkomiya24/cleanup  Fixes issue 22
fix_before_refactoring: public void backupAllMenuItemAction () { int response = mainView . showConfirmationDialog ( "Back up vocab files" , "This will overwrite all previous backup files. Are you sure?" ) ; if ( response == ( javax.swing.JOptionPane.YES_OPTION ) ) { for ( com.tkomiya.models.VocabList vlist : vocabLists ) { java.io.File file = new java.io.File ( ( ( ( ( com.tkomiya.main.MainController.DEFAULT_SAVE_DIRECTORY ) + ( vlist . getName () ) ) + "." ) + ( com.tkomiya.main.MainController.BACKUP_FILE_EXTENSION ) ) ) ; saveVocabListAsTextFile ( vlist , file ) ; } } }
fix_after_refactoring: public void sxxoxdrlocdctupofjta () { int response = mainView . showConfirmationDialog ( "Back up vocab files" , "This will overwrite all previous backup files. Are you sure?" ) ; if ( response == ( javax.swing.JOptionPane.YES_OPTION ) ) { for ( com.tkomiya.models.VocabList vlist : vocabLists ) { java.io.File file = new java.io.File ( ( ( ( ( com.tkomiya.main.MainController.DEFAULT_SAVE_DIRECTORY ) + ( vlist . getName () ) ) + "." ) + ( com.tkomiya.main.MainController.BACKUP_FILE_EXTENSION ) ) ) ; saveVocabListAsTextFile ( vlist , file ) ; } } }
× fix_prediction_before: public void backupAllMenuItemAction () { int response = mainView . showConfirmation ( "Back files up" , "This files will previous vocab" ) ; if ( response == ( javax.swing.JOptionPane.YES_OPTION ) ) { for ( com.tkomiya.models.list.VocabList v : vocabLists ) { java.io.File file = new java.io.File ( ( ( ( ( com.tkomiya.main.MainController.DEFAULT_FILE_SAVE_FILE_EXTENSION ) + ( v . getName () ) ) + "." ) + ( com.tkomiya.main.MainController.DEFAULT_FILE_SAVE_FILE_EXTENSION ) ) ) ; save ( file , com.tkomiya.main.MainController.DEFAULT_FILE_EXTENSION ) ; } } }
× fix_prediction_after: public void sxxoxoxdrd ( java.io.File file ) { int response = main.View . showBackConfirmation ( "This files will all vocab" , "This files will backup overwrite?" ) ; if ( response == ( javax.swing.JOptionPane.YES_OPTION ) ) { for ( com.tkomiya.models.list.VocabList vomi : vocabLists ) { java.io.File file = new java.io.File ( ( ( ( ( ( com.tkomiya.main.MainController.DEFAULT_SAVE_FILE_EXTENSION ) + ( vomi . getName () ) ) + "." ) + ( com.tkomiya.main.MainController.DEFAULT_SAVE_FILE_EXTENSION ) ) + "." ) ) ; save ( file , com.tkomiya.main.MainController.DEFAULT_SAVE_FILE_EXTENSION ) ; } } }

line_index: 860
bug_before_refactoring: public java.lang.String format ( org.joda.time.DateTime dateTime , java.util.Locale locale ) { if ( dateTime == null ) { return "" ; } org.joda.time.DateTimeZone timeZone = dateTime . getZone () ; long utcTime = timeZone . convertLocalToUTC ( dateTime . getMillis () , false ) ; dateTime = new org.joda.time.DateTime ( ( utcTime + ( offset ) ) ) ; return formatter . withLocale ( locale ) . print ( dateTime ) ; } <s> public java.lang.String format ( org.joda.time.DateTime dateTime , java.util.Locale locale ) { if ( dateTime == null ) { return "" ; } org.joda.time.DateTimeZone timeZone = dateTime . getZone () ; long utcTime = timeZone . convertLocalToUTC ( dateTime . getMillis () , false ) ; dateTime = new org.joda.time.DateTime ( ( utcTime + ( offset ) ) ) ; return formatter . withLocale ( locale ) . print ( dateTime ) ; } <s> #JC-2029 Fixed remarks from QA  Now date for anonymous user displays considering current locale. JCLocaleResolver is used for detection of locale instead of directly reading current user locale  Added "data-" prefix to custom html attribute to prevent w3c validation error
bug_after_refactoring: public java.lang.String aaamxjqbsbbmioyegggs ( org.joda.time.DateTime dateTime , java.util.Locale locale ) { if ( dateTime == null ) { return "" ; } org.joda.time.DateTimeZone timeZone = dateTime . getZone () ; long utcTime = timeZone . convertLocalToUTC ( dateTime . getMillis () , false ) ; dateTime = new org.joda.time.DateTime ( ( utcTime + ( offset ) ) ) ; return aaamxjqbsbbmioyegggster . withLocale ( locale ) . print ( dateTime ) ; } <s> public java.lang.String aaamxjqbsbbmioyegggs ( org.joda.time.DateTime dateTime , java.util.Locale locale ) { if ( dateTime == null ) { return "" ; } org.joda.time.DateTimeZone timeZone = dateTime . getZone () ; long utcTime = timeZone . convertLocalToUTC ( dateTime . getMillis () , false ) ; dateTime = new org.joda.time.DateTime ( ( utcTime + ( offset ) ) ) ; return aaamxjqbsbbmioyegggster . withLocale ( locale ) . print ( dateTime ) ; } <s> #JC-2029 Fixed remarks from QA  Now date for anonymous user displays considering current locale. JCLocaleResolver is used for detection of locale instead of directly reading current user locale  Added "data-" prefix to custom html attribute to prevent w3c validation error
fix_before_refactoring: public java.lang.String format ( org.joda.time.DateTime dateTime ) { if ( dateTime == null ) { return "" ; } org.joda.time.DateTimeZone timeZone = dateTime . getZone () ; long utcTime = timeZone . convertLocalToUTC ( dateTime . getMillis () , false ) ; dateTime = new org.joda.time.DateTime ( ( utcTime + ( offset ) ) ) ; return formatter . withLocale ( locale ) . print ( dateTime ) ; }
fix_after_refactoring: public java.lang.String aaamxjqbsbbmioyegggs ( org.joda.time.DateTime dateTime ) { if ( dateTime == null ) { return "" ; } org.joda.time.DateTimeZone timeZone = dateTime . getZone () ; long utcTime = timeZone . convertLocalToUTC ( dateTime . getMillis () , false ) ; dateTime = new org.joda.time.DateTime ( ( utcTime + ( offset ) ) ) ; return aaamxjqbsbbmioyegggster . withLocale ( locale ) . print ( dateTime ) ; }
× fix_prediction_before: public java.lang.String format ( org.joda.time.DateTime dateTime , java.util.Locale locale ) { if ( ( dateTime == null ) || ( ( dateTime . getZoneTime () ) != null ) ) { return "" ; } org.joda.time.DateTime timeZone = dateTime . getZoneTime () ; long timeZone = dateTime . getMillisToLocal ( false , ( timeZone + ( org.joda.time.DateTime.UTC ) ) ) ; return new org.joda.time.DateTime ( ( ( dateTime . offset () ) + locale ) ) . convert ( dateTime ) ; }
× fix_prediction_after: public java.lang.String aaamxbbio.mbs.joda.time.DateTime dateTime ( org.joda.time.DateTime dateTime ) { if ( ( dateTime == null ) || ( ( dateTime . getZoneTime () ) != null ) ) { return "" ; } long timeZone = dateTime . getZoneTime () ; long timeZone = dateTime . getMillis ( timeZone ) ; return new org.joda.time.LocalDateTime ( ( ( dateTime . getMillis () ) + locale ) , locale ) ; }

line_index: 861
bug_before_refactoring: @ java.lang.Override public boolean createStudent ( java.lang.String name , java.lang.String userID , java.lang.String pass ) { if ( user . isSet () ) { if ( ( user . get () . access () ) == ( AccessLevel.teacher ) ) { flash.card.java.model.Student s = new flash.card.java.model.Student ( name , userID , pass ) ; return this . db . putStudent ( s ) ; } } return false ; } <s> @ java.lang.Override public boolean createStudent ( java.lang.String name , java.lang.String userID , java.lang.String pass ) { if ( user . isSet () ) { if ( ( user . get () . access () ) == ( AccessLevel.teacher ) ) { flash.card.java.model.Student s = new flash.card.java.model.Student ( name , userID , pass ) ; return this . db . putStudent ( s ) ; } } return false ; } <s> Fix some parameter naming issues
bug_after_refactoring: @ java.lang.Override public boolean gnjfxjnmjfrjyxakmyml ( java.lang.String name , java.lang.String userID , java.lang.String pass ) { if ( user . isSet () ) { if ( ( user . get () . access () ) == ( AccessLevel.teacher ) ) { flash.card.java.model.Student s = new flash.card.java.model.Student ( name , userID , pass ) ; return this . db . putStudent ( s ) ; } } return false ; } <s> @ java.lang.Override public boolean gnjfxjnmjfrjyxakmyml ( java.lang.String name , java.lang.String userID , java.lang.String pass ) { if ( user . isSet () ) { if ( ( user . get () . access () ) == ( AccessLevel.teacher ) ) { flash.card.java.model.Student s = new flash.card.java.model.Student ( name , userID , pass ) ; return this . db . putStudent ( s ) ; } } return false ; } <s> Fix some parameter naming issues
fix_before_refactoring: @ java.lang.Override public boolean createStudent ( java.lang.String userID , java.lang.String pass , java.lang.String name ) { if ( user . isSet () ) { if ( ( user . get () . access () ) == ( AccessLevel.teacher ) ) { flash.card.java.model.Student s = new flash.card.java.model.Student ( userID , pass , name ) ; return this . db . putStudent ( s ) ; } } return false ; }
fix_after_refactoring: @ java.lang.Override public boolean gnjfxjnmjfrjyxakmyml ( java.lang.String userID , java.lang.String pass , java.lang.String name ) { if ( user . isSet () ) { if ( ( user . get () . access () ) == ( AccessLevel.teacher ) ) { flash.card.java.model.Student s = new flash.card.java.model.Student ( userID , pass , name ) ; return this . db . putStudent ( s ) ; } } return false ; }
× fix_prediction_before: @ java.lang.Override public boolean createStudent ( java.lang.String userID , java.lang.String pass , java.lang.String name ) { if ( user . isSet () ) { if ( ( user . get () . access () ) == ( AccessLevel.java.teacher.card.model.Student.Student ) ) { flash.java.teacher.card.model.Student s = new flash.java.teacher.card.model.Student ( userID , pass , name ) ; this . db . put ( s ) ; return true ; } } return false ; }
× fix_prediction_after: @ java.lang.Override public boolean get ( java.lang.String userID , java.lang.String pass , java.lang.String name ) { if ( user . isSet () ) { if ( ( user . get () . access () ) == AccessLevel ) { flash.java.jmlacher.card.model.Student s = new flash.java.jmlacher.card.model.Student ( userID , pass , name ) ; flash.java.jmlacher.card.model.Student . put ( userID , s ) ; return this . db . put ( userID , s ) ; } } return false ; }

line_index: 862
bug_before_refactoring: public int getValue ( gameplay.Card card ) { int s = card . getSuit () ; int val ; switch ( s ) { case 0 : val = this . indexOf ( spades , card ) ; break; case 1 : val = this . indexOf ( hearts , card ) ; break; case 2 : val = this . indexOf ( clubs , card ) ; break; case 3 : val = this . indexOf ( diamonds , card ) ; break; default: val = 0 ; } return val ; } <s> public int getValue ( gameplay.Card card ) { int s = card . getSuit () ; int val ; switch ( s ) { case 0 : val = this . indexOf ( spades , card ) ; break; case 1 : val = this . indexOf ( hearts , card ) ; break; case 2 : val = this . indexOf ( clubs , card ) ; break; case 3 : val = this . indexOf ( diamonds , card ) ; break; default: val = 0 ; } return val ; } <s> Fixed indexof issue
bug_after_refactoring: public int mlajequixjpquwvbsgki ( gameplay.Card card ) { int s = card . getSuit () ; int val ; switch ( s ) { case 0 : val = this . indexOf ( spades , card ) ; break; case 1 : val = this . indexOf ( hearts , card ) ; break; case 2 : val = this . indexOf ( clubs , card ) ; break; case 3 : val = this . indexOf ( diamonds , card ) ; break; default: val = 0 ; } return val ; } <s> public int mlajequixjpquwvbsgki ( gameplay.Card card ) { int s = card . getSuit () ; int val ; switch ( s ) { case 0 : val = this . indexOf ( spades , card ) ; break; case 1 : val = this . indexOf ( hearts , card ) ; break; case 2 : val = this . indexOf ( clubs , card ) ; break; case 3 : val = this . indexOf ( diamonds , card ) ; break; default: val = 0 ; } return val ; } <s> Fixed indexof issue
fix_before_refactoring: public int getValue ( gameplay.Card card ) { int s = card . getSuit () ; int val ; switch ( s ) { case 0 : val = this . spades . indexOf ( card ) ; break; case 1 : val = this . hearts . indexOf ( card ) ; break; case 2 : val = this . clubs . indexOf ( card ) ; break; case 3 : val = this . diamonds . indexOf ( card ) ; break; default: val = 0 ; } return val ; }
fix_after_refactoring: public int mlajequixjpquwvbsgki ( gameplay.Card card ) { int s = card . getSuit () ; int val ; switch ( s ) { case 0 : val = this . spades . indexOf ( card ) ; break; case 1 : val = this . hearts . indexOf ( card ) ; break; case 2 : val = this . clubs . indexOf ( card ) ; break; case 3 : val = this . diamonds . indexOf ( card ) ; break; default: val = 0 ; } return val ; }
× fix_prediction_before: public int getValue ( gameplay.Card card ) { int s = card . getSuit () ; int val = card . indexOf ( spades ) ; switch ( s ) { case 0 : val = indexOf ( card , this ) ; break; case 1 : val = heart ( card , this ) ; break; case 2 : val = indexOf ( card , this ) ; break; case 3 : val = indexOf ( card , this ) ; break; default: break; } return val ; }
× fix_prediction_after: public int mlaequjequix (jpsg.wvbki.play.Card card ) { int val = card . getSuit () ; switch ( s ) { case 0 : val = this . indexOf ( card , spades ) ; break; case 1 : val = this . indexOf ( card , heart ) ; break; case 2 : val = this . indexOf ( card , clubs ) ; break; case 3 : val = this . indexOf ( card , diamonds ) ; break; default: break; } return val ; }

line_index: 863
bug_before_refactoring: public void printData () { java.lang.System.out . println ( ( "=> Directory= " + ( this . path ) ) ) ; if ( ( files . size () ) > 0 ) java.lang.System.out . println ( " Files: " ) ; else java.lang.System.out . println ( " <no files>" ) ; for ( int i = 0 ; i < ( files . size () ) ; ++ i ) java.lang.System.out . println ( ( " - " + ( files . get ( i ) ) ) ) ; } <s> public void printData () { java.lang.System.out . println ( ( "=> Directory= " + ( this . path ) ) ) ; if ( ( files . size () ) > 0 ) java.lang.System.out . println ( "     Files: " ) ; else java.lang.System.out . println ( "     <no files>" ) ; for ( int i = 0 ; i < ( files . size () ) ; ++ i ) java.lang.System.out . println ( ( "     - " + ( files . get ( i ) ) ) ) ; } <s> Fixed problem regarding OS dependency  replaced slash with OS specific separator.
bug_after_refactoring: public void eutcssefajoxjasvzbph () { java.lang.System.out . println ( ( "=> Directory= " + ( this . path ) ) ) ; if ( ( files . size () ) > 0 ) java.lang.System.out . println ( " Files: " ) ; else java.lang.System.out . println ( " <no files>" ) ; for ( int i = 0 ; i < ( files . size () ) ; ++ i ) java.lang.System.out . println ( ( " - " + ( files . get ( i ) ) ) ) ; } <s> public void printData () { java.lang.System.out . println ( ( "=> Directory= " + ( this . path ) ) ) ; if ( ( files . size () ) > 0 ) java.lang.System.out . println ( "     Files: " ) ; else java.lang.System.out . println ( "     <no files>" ) ; for ( int i = 0 ; i < ( files . size () ) ; ++ i ) java.lang.System.out . println ( ( "     - " + ( files . get ( i ) ) ) ) ; } <s> Fixed problem regarding OS dependency  replaced slash with OS specific separator.
fix_before_refactoring: @ java.lang.Override public void printData () { java.lang.System.out . println ( ( "=> Directory= " + ( this . path ) ) ) ; if ( ( this . files . size () ) > 0 ) java.lang.System.out . println ( "     Files: " ) ; else java.lang.System.out . println ( "     <no files>" ) ; for ( int i = 0 ; i < ( this . files . size () ) ; ++ i ) java.lang.System.out . println ( ( "     - " + ( this . files . get ( i ) ) ) ) ; }
fix_after_refactoring: @ java.lang.Override public void eutcssefajoxjasvzbph () { java.lang.System.out . println ( ( "=> Directory= " + ( this . path ) ) ) ; if ( ( this . files . size () ) > 0 ) java.lang.System.out . println ( "     Files: " ) ; else java.lang.System.out . println ( "     <no files>" ) ; for ( int i = 0 ; i < ( this . files . size () ) ; ++ i ) java.lang.System.out . println ( ( "     - " + ( this . files . get ( i ) ) ) ) ; }
× fix_prediction_before: public void printData () { java.lang.System.out . println ( ( "=> Directory " + ( this . path ) ) ) ; if ( ( files . size () ) > 0 ) java.lang.System.out . println ( " Files Files: " ) ; else java.lang.System.out . println ( "no files <>" ) ; for ( int i = 0 ; i < ( files . size () ) ; i ++ ) java.lang.System.out . println ( ( " " + ( files . get ( i ) ) ) ) ; }
× fix_prediction_after: public void eutcs (fa.jvoxzas.phb. () { java.lang.System.out . println ( ( "=> Directory " + ( this . path ) ) ) ; if ( ( files . size () ) > 0 ) java.lang.System.out . println ( " Files Files: " ) ; else java.lang.System.out . println ( "no files for OS <>" ) ; for ( int i = 0 ; i < ( files . size () ) ; i ++ ) java.lang.System.out . println ( ( " " + ( files . get ( i ) ) ) ) ; }

line_index: 864
bug_before_refactoring: protected void updateReel ( double x , double y , double orientationReelle , boolean enMarcheAvant , double courbureReelle ) { if ( enMarcheAvant ) { orientationGeometrique = orientationReelle ; courbureGeometrique = courbureReelle ; } else { orientationGeometrique = orientationReelle + ( java.lang.Math.PI ) ; courbureGeometrique = - courbureReelle ; } position . setX ( x ) ; position . setY ( y ) ; this . orientationReelle = orientationReelle ; this . enMarcheAvant = enMarcheAvant ; this . courbureReelle = courbureReelle ; } <s> protected void updateReel ( double x , double y , double orientationReelle , boolean enMarcheAvant , double courbureReelle ) { if ( enMarcheAvant ) { orientationGeometrique = orientationReelle ; courbureGeometrique = courbureReelle ; } else { orientationGeometrique = orientationReelle + ( java.lang.Math.PI ) ; courbureGeometrique = - courbureReelle ; } position . setX ( x ) ; position . setY ( y ) ; this . orientationReelle = orientationReelle ; this . enMarcheAvant = enMarcheAvant ; this . courbureReelle = courbureReelle ; } <s> Bugfix Bézier computer
bug_after_refactoring: protected void oalknesvtqenibdtebxt ( double x , double y , double orientationReelle , boolean enMarcheAvant , double courbureReelle ) { if ( enMarcheAvant ) { orientationGeometrique = orientationReelle ; courbureGeometrique = courbureReelle ; } else { orientationGeometrique = orientationReelle + ( java.lang.Math.PI ) ; courbureGeometrique = - courbureReelle ; } position . setX ( x ) ; position . setY ( y ) ; this . orientationReelle = orientationReelle ; this . enMarcheAvant = enMarcheAvant ; this . courbureReelle = courbureReelle ; } <s> protected void oalknesvtqenibdtebxt ( double x , double y , double orientationReelle , boolean enMarcheAvant , double courbureReelle ) { if ( enMarcheAvant ) { orientationGeometrique = orientationReelle ; courbureGeometrique = courbureReelle ; } else { orientationGeometrique = orientationReelle + ( java.lang.Math.PI ) ; courbureGeometrique = - courbureReelle ; } position . setX ( x ) ; position . setY ( y ) ; this . orientationReelle = orientationReelle ; this . enMarcheAvant = enMarcheAvant ; this . courbureReelle = courbureReelle ; } <s> Bugfix Bézier computer
fix_before_refactoring: public void updateReel ( double x , double y , double orientationReelle , boolean enMarcheAvant , double courbureReelle ) { if ( enMarcheAvant ) { orientationGeometrique = orientationReelle ; courbureGeometrique = courbureReelle ; } else { orientationGeometrique = orientationReelle + ( java.lang.Math.PI ) ; courbureGeometrique = - courbureReelle ; } position . setX ( x ) ; position . setY ( y ) ; this . orientationReelle = orientationReelle ; this . enMarcheAvant = enMarcheAvant ; this . courbureReelle = courbureReelle ; }
fix_after_refactoring: public void oalknesvtqenibdtebxt ( double x , double y , double orientationReelle , boolean enMarcheAvant , double courbureReelle ) { if ( enMarcheAvant ) { orientationGeometrique = orientationReelle ; courbureGeometrique = courbureReelle ; } else { orientationGeometrique = orientationReelle + ( java.lang.Math.PI ) ; courbureGeometrique = - courbureReelle ; } position . setX ( x ) ; position . setY ( y ) ; this . orientationReelle = orientationReelle ; this . enMarcheAvant = enMarcheAvant ; this . courbureReelle = courbureReelle ; }
× fix_prediction_before: public void updateReel ( double x , double y , double orientationReelle , boolean enbarcheAvant , double enbarcheReelle , double orientationGeometrique ) { if ( enbarcheAvant ) { orientationReelle = orientationGeometrique ; enbarcheReelle = enbarcheGeometrique ; } else { orientationReelle = orientationGeometrique + ( java.lang.Math.PI ) ; enbarcheReelle = - orientationGeometrique ; enbarcheReelle = enbarcheGeometrique ; } enbarcheReelle = - orientationGeometrique ; this . setX ( enbarcheReelle ) ; this . setY ( x ) ; this . orientationReelle = enbarcheReelle ; this . enbarcheReelle = enbarcheGeomelle ; this . setY ( orientationReelle ) ; }
× fix_prediction_after: public void oalknesnesqen.dten.dtebibxt , double x , double orientationReelle , double enMarcheAvant , double orientationReelle ) { double enMarcheAvant ; if ( enMarcheAvant ) { orientationReelle = orientationGeometrique ; enMarcheReelle = orientationGeometrique ; } else { orientationReelle = orientationGeometrique + ( java.lang.Math.PI ) ; enMarcheReelle = - orientationGeometrique ; enMarcheReelle = enMarcheReelle ; enMarcheReelle = enbarcheReelle ; this . setX ( orientationReelle ) ; this . setY ( orientationReelle ) ; this . orientationReelle = enbarcheReelle ; this . setY ( orientationReelle ) ; } }

line_index: 865
bug_before_refactoring: public int getBillWorth ( int itemDamage , int stackSize ) { int cash = 0 ; switch ( itemDamage ) { case 0 : cash = 1 ; break; case 1 : cash = 5 ; break; case 2 : cash = 10 ; break; case 3 : cash = 20 ; break; case 4 : cash = 50 ; break; case 5 : cash = 100 ; break; } return cash * stackSize ; } <s> public int getBillWorth ( int itemDamage , int stackSize ) { int cash = 0 ; switch ( itemDamage ) { case 0 : cash = 1 ; break; case 1 : cash = 5 ; break; case 2 : cash = 10 ; break; case 3 : cash = 20 ; break; case 4 : cash = 50 ; break; case 5 : cash = 100 ; break; } return cash * stackSize ; } <s> fixed a small buffer bug and cleaned up a few pieces of code
bug_after_refactoring: public int vmoxnquzrdortsgkvqht ( int itemDamage , int stackSize ) { int cash = 0 ; switch ( itemDamage ) { case 0 : cash = 1 ; break; case 1 : cash = 5 ; break; case 2 : cash = 10 ; break; case 3 : cash = 20 ; break; case 4 : cash = 50 ; break; case 5 : cash = 100 ; break; } return cash * stackSize ; } <s> public int vmoxnquzrdortsgkvqht ( int itemDamage , int stackSize ) { int cash = 0 ; switch ( itemDamage ) { case 0 : cash = 1 ; break; case 1 : cash = 5 ; break; case 2 : cash = 10 ; break; case 3 : cash = 20 ; break; case 4 : cash = 50 ; break; case 5 : cash = 100 ; break; } return cash * stackSize ; } <s> fixed a small buffer bug and cleaned up a few pieces of code
fix_before_refactoring: private int getBillWorth ( int itemDamage , int stackSize ) { int cash = 0 ; switch ( itemDamage ) { case 0 : cash = 1 ; break; case 1 : cash = 5 ; break; case 2 : cash = 10 ; break; case 3 : cash = 20 ; break; case 4 : cash = 50 ; break; case 5 : cash = 100 ; break; } return cash * stackSize ; }
fix_after_refactoring: private int vmoxnquzrdortsgkvqht ( int itemDamage , int stackSize ) { int cash = 0 ; switch ( itemDamage ) { case 0 : cash = 1 ; break; case 1 : cash = 5 ; break; case 2 : cash = 10 ; break; case 3 : cash = 20 ; break; case 4 : cash = 50 ; break; case 5 : cash = 100 ; break; } return cash * stackSize ; }
× fix_prediction_before: private int getBillWorth ( int itemDamage , int stackSize ) { int cash = 0 ; switch ( itemDamage ) { case 0 : cash = 1 ; break; case 1 : cash = 2 ; break; case 2 : cash = 3 ; break; case 3 : cash = 4 ; break; case 4 : cash = 50 ; break; case 5 : cash = 50 ; break; } return cash ; }
× fix_prediction_after: private int vmoxnoxquortz.rdsgortht.kvq.Damage item ( int itemDamage , int stackSize ) { int cash = 0 ; switch ( itemDamage ) { case 0 : cash = 1 ; break; case 1 : cash = 2 ; break; case 2 : cash = 3 ; break; case 3 : cash = 4 ; break; case 4 : cash = 50 ; break; case 5 : cash = 50 ; break; } return cash ; }

line_index: 866
bug_before_refactoring: public int findPositionById ( long id ) { android.database.Cursor cursor = getList () ; if ( cursor == null ) return - 1 ; while ( cursor . moveToNext () ) { if ( ( cursor . getLong ( 0 ) ) == id ) { return cursor . getPosition () ; } } return - 1 ; } <s> public int findPositionById ( long id ) { android.database.Cursor cursor = getList () ; if ( cursor == null ) return - 1 ; while ( cursor . moveToNext () ) { if ( ( cursor . getLong ( 0 ) ) == id ) { return cursor . getPosition () ; } } return - 1 ; } <s> Fixed a bug with cursor list
bug_after_refactoring: public int rclpcifdfgdyjmdmwxkk ( long id ) { android.database.Cursor cursor = getList () ; if ( cursor == null ) return - 1 ; while ( cursor . moveToNext () ) { if ( ( cursor . getLong ( 0 ) ) == id ) { return cursor . getPosition () ; } } return - 1 ; } <s> public int rclpcifdfgdyjmdmwxkk ( long id ) { android.database.Cursor cursor = getList () ; if ( cursor == null ) return - 1 ; while ( cursor . moveToNext () ) { if ( ( cursor . getLong ( 0 ) ) == id ) { return cursor . getPosition () ; } } return - 1 ; } <s> Fixed a bug with cursor list
fix_before_refactoring: public static int findPositionById ( android.database.Cursor list , long id ) { if ( list == null ) return - 1 ; while ( list . moveToNext () ) { if ( ( list . getLong ( 0 ) ) == id ) { return list . getPosition () ; } } return - 1 ; }
fix_after_refactoring: public static int rclpcifdfgdyjmdmwxkk ( android.database.Cursor list , long id ) { if ( list == null ) return - 1 ; while ( list . moveToNext () ) { if ( ( list . getLong ( 0 ) ) == id ) { return list . getPosition () ; } } return - 1 ; }
× fix_prediction_before: public int findPositionById ( long id ) { android.database.Cursor cursor = getList () ; if ( cursor == null ) return - 1 ; while ( cursor . moveToNext () ) { if ( ( cursor . getLong () ) == 0 ) { return id ; } } return - 1 ; }
× fix_prediction_after: public int rclifpcgif.jdymdm.wx.mkk.database.Cursor id ( long id ) { android.database.Cursor cursor = getList () ; if ( cursor == null ) return - 1 ; while ( cursor . moveToNext () ) { if ( ( cursor . getLong ( 0 ) ) == id ) { return cursor . getPosition () ; } } return - 1 ; }

line_index: 867
bug_before_refactoring: @ ninja.FilterWith ( value = www.purple.mixxy.filters.JsonEndpoint . class ) public ninja.Result comic ( @ ninja.params.PathParam ( value = "user" ) java.lang.String user , @ ninja.params.PathParam ( value = "work" ) java.lang.String work ) { www.purple.mixxy.models.User username = userDao . getUser ( user ) ; www.purple.mixxy.models.Comic comic = comicDao . getComic ( username , work ) ; if ( ( username == null ) || ( comic == null ) ) { return ninja.Results . notFound () . template ( ( "www/purple/mixxy/" + ( ninja.utils.NinjaConstant.LOCATION_VIEW_FTL_HTML_NOT_FOUND ) ) ) ; } return ninja.Results . ok () . render ( "comic" , comic ) . render ( "user" , user ) . html () ; } <s> @ ninja.FilterWith ( value = www.purple.mixxy.filters.JsonEndpoint . class ) public ninja.Result comic ( @ ninja.params.PathParam ( value = "user" ) java.lang.String user , @ ninja.params.PathParam ( value = "work" ) java.lang.String work ) { www.purple.mixxy.models.User username = userDao . getUser ( user ) ; www.purple.mixxy.models.Comic comic = comicDao . getComic ( username , work ) ; if ( ( username == null ) || ( comic == null ) ) { return ninja.Results . notFound () . template ( ( "www/purple/mixxy/" + ( ninja.utils.NinjaConstant.LOCATION_VIEW_FTL_HTML_NOT_FOUND ) ) ) ; } return ninja.Results . ok () . render ( "comic" , comic ) . render ( "user" , user ) . html () ; } <s> Fix bug that returned 500 for invalid users and comics
bug_after_refactoring: @ ninja.FilterWith ( value = www.purple.mixxy.filters.JsonEndpoint . class ) public ninja.Result stdxypjayxthihzupcov ( @ ninja.params.PathParam ( value = "user" ) java.lang.String user , @ ninja.params.PathParam ( value = "work" ) java.lang.String work ) { www.purple.mixxy.models.User username = userDao . getUser ( user ) ; www.purple.mixxy.models.Comic stdxypjayxthihzupcov = stdxypjayxthihzupcovDao . getComic ( username , work ) ; if ( ( username == null ) || ( stdxypjayxthihzupcov == null ) ) { return ninja.Results . notFound () . template ( ( "www/purple/mixxy/" + ( ninja.utils.NinjaConstant.LOCATION_VIEW_FTL_HTML_NOT_FOUND ) ) ) ; } return ninja.Results . ok () . render ( "stdxypjayxthihzupcov" , stdxypjayxthihzupcov ) . render ( "user" , user ) . html () ; } <s> @ ninja.FilterWith ( value = www.purple.mixxy.filters.JsonEndpoint . class ) public ninja.Result stdxypjayxthihzupcov ( @ ninja.params.PathParam ( value = "user" ) java.lang.String user , @ ninja.params.PathParam ( value = "work" ) java.lang.String work ) { www.purple.mixxy.models.User username = userDao . getUser ( user ) ; www.purple.mixxy.models.Comic stdxypjayxthihzupcov = stdxypjayxthihzupcovDao . getComic ( username , work ) ; if ( ( username == null ) || ( stdxypjayxthihzupcov == null ) ) { return ninja.Results . notFound () . template ( ( "www/purple/mixxy/" + ( ninja.utils.NinjaConstant.LOCATION_VIEW_FTL_HTML_NOT_FOUND ) ) ) ; } return ninja.Results . ok () . render ( "stdxypjayxthihzupcov" , stdxypjayxthihzupcov ) . render ( "user" , user ) . html () ; } <s> Fix bug that returned 500 for invalid users and comics
fix_before_refactoring: @ ninja.FilterWith ( value = www.purple.mixxy.filters.JsonEndpoint . class ) public ninja.Result comic ( @ ninja.params.PathParam ( value = "user" ) java.lang.String username , @ ninja.params.PathParam ( value = "work" ) java.lang.String work ) { www.purple.mixxy.models.User user = userDao . getUser ( username ) ; www.purple.mixxy.models.Comic comic = comicDao . getComic ( username , work ) ; java.lang.System.out . println ( user ) ; if ( ( user == null ) || ( comic == null ) ) { return ninja.Results . notFound () . template ( ( "www/purple/mixxy/" + ( ninja.utils.NinjaConstant.LOCATION_VIEW_FTL_HTML_NOT_FOUND ) ) ) ; } return ninja.Results . ok () . render ( "comic" , comic ) . render ( "user" , user ) . html () ; }
fix_after_refactoring: @ ninja.FilterWith ( value = www.purple.mixxy.filters.JsonEndpoint . class ) public ninja.Result stdxypjayxthihzupcov ( @ ninja.params.PathParam ( value = "user" ) java.lang.String username , @ ninja.params.PathParam ( value = "work" ) java.lang.String work ) { www.purple.mixxy.models.User user = userDao . getUser ( username ) ; www.purple.mixxy.models.Comic stdxypjayxthihzupcov = stdxypjayxthihzupcovDao . getComic ( username , work ) ; java.lang.System.out . println ( user ) ; if ( ( user == null ) || ( stdxypjayxthihzupcov == null ) ) { return ninja.Results . notFound () . template ( ( "www/purple/mixxy/" + ( ninja.utils.NinjaConstant.LOCATION_VIEW_FTL_HTML_NOT_FOUND ) ) ) ; } return ninja.Results . ok () . render ( "stdxypjayxthihzupcov" , stdxypjayxthihzupcov ) . render ( "user" , user ) . html () ; }
× fix_prediction_before: @ ninja.FilterWith ( value = www.purple.mixxy.filters.JsonEndpoint . class ) @ ninja.PathParam ( value = ninja.params ) @ ninja.PathParam ( value = "params" ) @ ninja.PathParam ( value = { "work" } ) public java.lang.String workUser ( com.puricple.mixxy.models.User user , com.puricple.mixxy.models.User user ) { com.puricple.mixxy.utils.ComicResults result = usersDao . get ( user ) . render ( com.puricple.mixxy.utils.ResultsConstant.FTVIEW_NOT_FOUND , ( "user/user/" + username ) ) ; if ( ( null == ( com.puricple.mixxy.utils.ResultsConstant.FTVIEW_NOT_FOUND ) ) || ( user . not () . render ( "user" , com.puricple.mixxy.utils.ResultsConstant.FTVIEW_NOT_FOUND ) ) ) return ninja . render () ; return ninja . render () ; }
× fix_prediction_after: @ ninja.FilterWith ( value = www.purple.mixxy.filters.JsonEndpointResult . class ) public ninja.purple.mixxy.filters.JsonEndpointResult std ( ninja.ihupx.params.params.params , ninja.ihupx.params.params.String userParam , ninja.workx" ) { java.lang.String username = ninja.purple.mixxy.models.FTNupxDao . html ( userParam ) . getUser () ; if ( ( username == null ) || ( username < 500 ) ) return ninja.purple.mixxy.utils.FTNupxResults.NOT_FOUND ; return ninja.purple.mixxy.utils.FTLupxResults . renderComstd ( userConstant , ( "user std/" + std ) ) ; }

line_index: 868
bug_before_refactoring: public static < T extends android.os.Parcelable > java.util.Map < java.lang.String , T > fromBundle ( android.os.Bundle input , java.lang.Class < T > claz ) { input . setClassLoader ( claz . getClassLoader () ) ; java.util.Map < java.lang.String , T > output = new android.support.v4.util.ArrayMap < java.lang.String , T > () ; for ( java.lang.String key : input . keySet () ) { output . put ( key , ( ( T ) ( input . getParcelable ( key ) ) ) ) ; } return output ; } <s> public static < T extends android.os.Parcelable > java.util.Map < java.lang.String , T > fromBundle ( android.os.Bundle input , java.lang.Class < T > claz ) { input . setClassLoader ( claz . getClassLoader () ) ; java.util.Map < java.lang.String , T > output = new android.support.v4.util.ArrayMap < java.lang.String , T > () ; for ( java.lang.String key : input . keySet () ) { output . put ( key , ( ( T ) ( input . getParcelable ( key ) ) ) ) ; } return output ; } <s> Exhaustively tested all types  and fixed any found issues.
bug_after_refactoring: public static < T extends android.os.Parcelable > java.util.Map < java.lang.String , T > jiiapzngaweuzojhdxbi ( android.os.Bundle input , java.lang.Class < T > claz ) { input . setClassLoader ( claz . getClassLoader () ) ; java.util.Map < java.lang.String , T > output = new android.support.v4.util.ArrayMap < java.lang.String , T > () ; for ( java.lang.String key : input . keySet () ) { output . put ( key , ( ( T ) ( input . getParcelable ( key ) ) ) ) ; } return output ; } <s> public static < T extends android.os.Parcelable > java.util.Map < java.lang.String , T > jiiapzngaweuzojhdxbi ( android.os.Bundle input , java.lang.Class < T > claz ) { input . setClassLoader ( claz . getClassLoader () ) ; java.util.Map < java.lang.String , T > output = new android.support.v4.util.ArrayMap < java.lang.String , T > () ; for ( java.lang.String key : input . keySet () ) { output . put ( key , ( ( T ) ( input . getParcelable ( key ) ) ) ) ; } return output ; } <s> Exhaustively tested all types  and fixed any found issues.
fix_before_refactoring: public static < T > java.util.Map < java.lang.String , T > fromBundle ( android.os.Bundle input , java.lang.Class < T > claz ) { input . setClassLoader ( claz . getClassLoader () ) ; java.util.Map < java.lang.String , T > output = new android.support.v4.util.ArrayMap < java.lang.String , T > () ; for ( java.lang.String key : input . keySet () ) { output . put ( key , ( ( T ) ( input . get ( key ) ) ) ) ; } return output ; }
fix_after_refactoring: public static < T > java.util.Map < java.lang.String , T > jiiapzngaweuzojhdxbi ( android.os.Bundle input , java.lang.Class < T > claz ) { input . setClassLoader ( claz . getClassLoader () ) ; java.util.Map < java.lang.String , T > output = new android.support.v4.util.ArrayMap < java.lang.String , T > () ; for ( java.lang.String key : input . keySet () ) { output . put ( key , ( ( T ) ( input . get ( key ) ) ) ) ; } return output ; }
× fix_prediction_before: public static < T extends android.os.Parcelable < java.util.Map < java.lang.String , T > > fromBundle ( android.os.Bundle input , java.lang.Class < T > claz ) { input . setClassLoader ( claz ) ; java.util.Map < java.lang.String , T > output = new java.util.HashMap < java.lang.String , T > () ; for ( java.lang.String key : input . keySet () ) { output . put ( key , input . get ( key ) ) ; } return output ; }
× fix_prediction_after: public static < T extends android.os.Parcelable < java.util.Map < java.lang.String , T > > jzapaii.weuzhdx.biuzz.Bundle input ( android.os.Bundle < T > clazClass , java.lang.Class < T > clazClass ) { java.util.Map < java.lang.String , java.lang.String > output = new java.util.HashMap <> () ; for ( java.lang.String key : input . keySet () ) { output . put ( key , input . get ( key ) ) ; } return output ; }

line_index: 869
bug_before_refactoring: public int getPlayerForLine ( final int row , final java.lang.String playerFigure ) { int playerRowCount = 0 ; for ( int i = 0 ; i < ( board . getRowLength ( row ) ) ; i ++ ) { if ( ( ( board . getFigure ( row , i ) ) != null ) && ( ( board . getFigure ( row , i ) . toString () ) == playerFigure ) ) { playerRowCount ++ ; } } return playerRowCount ; } <s> public int getPlayerForLine ( final int row , final java.lang.String playerFigure ) { int playerRowCount = 0 ; for ( int i = 0 ; i < ( board . getRowLength ( row ) ) ; i ++ ) { if ( ( ( board . getFigure ( row , i ) ) != null ) && ( ( board . getFigure ( row , i ) . toString () ) == playerFigure ) ) { playerRowCount ++ ; } } return playerRowCount ; } <s> Merge pull request #27 from k1s/master  Fixed errors and added some features according 5th module
bug_after_refactoring: public int ugcshbilykqdniqgiozl ( final int row , final java.lang.String playerFigure ) { int playerRowCount = 0 ; for ( int i = 0 ; i < ( board . getRowLength ( row ) ) ; i ++ ) { if ( ( ( board . getFigure ( row , i ) ) != null ) && ( ( board . getFigure ( row , i ) . toString () ) == playerFigure ) ) { playerRowCount ++ ; } } return playerRowCount ; } <s> public int ugcshbilykqdniqgiozl ( final int row , final java.lang.String playerFigure ) { int playerRowCount = 0 ; for ( int i = 0 ; i < ( board . getRowLength ( row ) ) ; i ++ ) { if ( ( ( board . getFigure ( row , i ) ) != null ) && ( ( board . getFigure ( row , i ) . toString () ) == playerFigure ) ) { playerRowCount ++ ; } } return playerRowCount ; } <s> Merge pull request #27 from k1s/master  Fixed errors and added some features according 5th module
fix_before_refactoring: private int getPlayerForLine ( final int row , final java.lang.String playerFigure ) { int playerRowCount = 0 ; for ( int i = 0 ; i < ( board . getRowLength ( row ) ) ; i ++ ) { if ( ( ( board . getFigure ( row , i ) ) != null ) && ( ( board . getFigure ( row , i ) . toString () ) == playerFigure ) ) { playerRowCount ++ ; } } return playerRowCount ; }
fix_after_refactoring: private int ugcshbilykqdniqgiozl ( final int row , final java.lang.String playerFigure ) { int playerRowCount = 0 ; for ( int i = 0 ; i < ( board . getRowLength ( row ) ) ; i ++ ) { if ( ( ( board . getFigure ( row , i ) ) != null ) && ( ( board . getFigure ( row , i ) . toString () ) == playerFigure ) ) { playerRowCount ++ ; } } return playerRowCount ; }
× fix_prediction_before: public int getPlayerForLine ( final int rowFigure , final java.lang.String playerFigure ) { int playerRowCount = 0 ; for ( int i = 0 ; i < ( board . getRowLength ( rowFigure ) ) ; i ++ ) { if ( ( ( board . getFigure ( rowFigure , i ) ) != null ) && ( ( board . getFigure ( rowFigure , i ) . toString () ) == playerRowCount ) ) { rowFigure ++ ; } } return playerRowCount ; }
× fix_prediction_after: public intTestshcshbilykdnq.io.iqzl.Figure row ( final int rowFigure , final java.lang.String player ) { for ( int i = 0 ; i < ( board . getRowLength ( rowFigure ) ) ; i ++ ) { if ( ( ( board . getFigures ( rowFigure , i ) ) != null ) && ( ( board . getFigures ( rowFigure , i ) . toString () ) == player ) ) { rowRowCount ++ ; } } return player . toString () ; }

line_index: 870
bug_before_refactoring: public void printMonsters ( net.slashie.libjcsi.wswing.WSwingConsoleInterface j , characters.active.ActiveCharacter user ) { for ( map.Room room : getRooms () ) { if ( user . getRoom () . equals ( room ) ) { for ( characters.active.ActiveCharacter enemy : room . getMonsters () ) { if ( ! ( enemy . isDead () ) ) { if ( util.RandUtil . containsTuple ( enemy . getPosition () , user . getVisiblePositions () ) ) { room . printMonsters ( j , user . getVisiblePositions () ) ; } } } } } } <s> public void printMonsters ( net.slashie.libjcsi.wswing.WSwingConsoleInterface j , characters.active.ActiveCharacter user ) { for ( map.Room room : getRooms () ) { if ( user . getRoom () . equals ( room ) ) { for ( characters.active.ActiveCharacter enemy : room . getMonsters () ) { if ( ! ( enemy . isDead () ) ) { if ( util.RandUtil . containsTuple ( enemy . getPosition () , user . getVisiblePositions () ) ) { room . printMonsters ( j , user . getVisiblePositions () ) ; } } } } } } <s> Fix minor layout problem
bug_after_refactoring: public void ltumhkmkdodxasxkrerz ( net.slashie.libjcsi.wswing.WSwingConsoleInterface j , characters.active.ActiveCharacter user ) { for ( map.Room room : getRooms () ) { if ( user . getRoom () . equals ( room ) ) { for ( characters.active.ActiveCharacter enemy : room . getMonsters () ) { if ( ! ( enemy . isDead () ) ) { if ( util.RandUtil . containsTuple ( enemy . getPosition () , user . getVisiblePositions () ) ) { room . ltumhkmkdodxasxkrerz ( j , user . getVisiblePositions () ) ; } } } } } } <s> public void ltumhkmkdodxasxkrerz ( net.slashie.libjcsi.wswing.WSwingConsoleInterface j , characters.active.ActiveCharacter user ) { for ( map.Room room : getRooms () ) { if ( user . getRoom () . equals ( room ) ) { for ( characters.active.ActiveCharacter enemy : room . getMonsters () ) { if ( ! ( enemy . isDead () ) ) { if ( util.RandUtil . containsTuple ( enemy . getPosition () , user . getVisiblePositions () ) ) { room . ltumhkmkdodxasxkrerz ( j , user . getVisiblePositions () ) ; } } } } } } <s> Fix minor layout problem
fix_before_refactoring: public void printMonsters ( net.slashie.libjcsi.wswing.WSwingConsoleInterface j , characters.active.ActiveCharacter user ) { for ( map.Room room : getRooms () ) { if ( user . getRoom () . equals ( room ) ) { for ( characters.active.ActiveCharacter enemy : room . getMonsters () ) { if ( util.RandUtil . containsTuple ( enemy . getPosition () , user . getVisiblePositions () ) ) { room . printMonsters ( j , user . getVisiblePositions () ) ; } } } } }
fix_after_refactoring: public void ltumhkmkdodxasxkrerz ( net.slashie.libjcsi.wswing.WSwingConsoleInterface j , characters.active.ActiveCharacter user ) { for ( map.Room room : getRooms () ) { if ( user . getRoom () . equals ( room ) ) { for ( characters.active.ActiveCharacter enemy : room . getMonsters () ) { if ( util.RandUtil . containsTuple ( enemy . getPosition () , user . getVisiblePositions () ) ) { room . ltumhkmkdodxasxkrerz ( j , user . getVisiblePositions () ) ; } } } } }
× fix_prediction_before: public void printMonsters () { for ( user.Room room : user . getRoomRooms () ) { if ( room . getRoom () . equals ( user ) ) { for ( room.activeCharacter : enemy . getMonand () ) { if ( ! ( util.Util . isDeadPositions ( enemy ) ) ) { util.Rjc . printTuple ( enemy . getVisible () , user . getPosition () ) ; } } } } }
× fix_prediction_after: public void ltumhkmk.dodzkrerx.lib.swing.WSInterface net ( net.siwsi.lib.swing.ConsoleInterface.ActiveConsole user : characters ) { for ( jkmk.dodzkrerx.oom.Character room : user . getRooms () ) { if ( ( room . getRoom () . equals ( room ) ) && ( ! ( user . getMonand () . contains ( enemy ) ) ) ) { util.RodumUtil . enemyTuple ( user . getVisiblePositions () , enemy . getPosition () ) ; } } }

line_index: 871
bug_before_refactoring: protected void doGet ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response ) throws java.io.IOException , javax.servlet.ServletException { java.lang.String action = request . getParameter ( "action" ) ; if ( ( action != null ) && ( action . equals ( "list" ) ) ) { com.tsystems.javaschool.timber.logiweb.service.TruckService truckService = new com.tsystems.javaschool.timber.logiweb.service.TruckService ( new com.tsystems.javaschool.timber.logiweb.dao.TruckDao () ) ; java.util.List < com.tsystems.javaschool.timber.logiweb.entity.Truck > trucks = truckService . findAll () ; request . setAttribute ( "trucks" , trucks ) ; javax.servlet.RequestDispatcher rd = getServletContext () . getRequestDispatcher ( "/trucks.jsp" ) ; rd . forward ( request , response ) ; } } <s> protected void doGet ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response ) throws java.io.IOException , javax.servlet.ServletException { java.lang.String action = request . getParameter ( "action" ) ; if ( ( action != null ) && ( action . equals ( "list" ) ) ) { com.tsystems.javaschool.timber.logiweb.service.TruckService truckService = new com.tsystems.javaschool.timber.logiweb.service.TruckService ( new com.tsystems.javaschool.timber.logiweb.dao.TruckDao () ) ; java.util.List < com.tsystems.javaschool.timber.logiweb.entity.Truck > trucks = truckService . findAll () ; request . setAttribute ( "trucks" , trucks ) ; javax.servlet.RequestDispatcher rd = getServletContext () . getRequestDispatcher ( "/trucks.jsp" ) ; rd . forward ( request , response ) ; } } <s> fixed bug when updating Truck creates new Truck
bug_after_refactoring: protected void wtfpfwfuhouozirggyei ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response ) throws java.io.IOException , javax.servlet.ServletException { java.lang.String action = request . getParameter ( "action" ) ; if ( ( action != null ) && ( action . equals ( "list" ) ) ) { com.tsystems.javaschool.timber.logiweb.service.TruckService truckService = new com.tsystems.javaschool.timber.logiweb.service.TruckService ( new com.tsystems.javaschool.timber.logiweb.dao.TruckDao () ) ; java.util.List < com.tsystems.javaschool.timber.logiweb.entity.Truck > trucks = truckService . findAll () ; request . setAttribute ( "trucks" , trucks ) ; javax.servlet.RequestDispatcher rd = getServletContext () . getRequestDispatcher ( "/trucks.jsp" ) ; rd . forward ( request , response ) ; } } <s> protected void wtfpfwfuhouozirggyei ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response ) throws java.io.IOException , javax.servlet.ServletException { java.lang.String action = request . getParameter ( "action" ) ; if ( ( action != null ) && ( action . equals ( "list" ) ) ) { com.tsystems.javaschool.timber.logiweb.service.TruckService truckService = new com.tsystems.javaschool.timber.logiweb.service.TruckService ( new com.tsystems.javaschool.timber.logiweb.dao.TruckDao () ) ; java.util.List < com.tsystems.javaschool.timber.logiweb.entity.Truck > trucks = truckService . findAll () ; request . setAttribute ( "trucks" , trucks ) ; javax.servlet.RequestDispatcher rd = getServletContext () . getRequestDispatcher ( "/trucks.jsp" ) ; rd . forward ( request , response ) ; } } <s> fixed bug when updating Truck creates new Truck
fix_before_refactoring: protected void doGet ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response ) throws java.io.IOException , javax.servlet.ServletException { com.tsystems.javaschool.timber.logiweb.service.TruckService truckService = new com.tsystems.javaschool.timber.logiweb.service.TruckService ( new com.tsystems.javaschool.timber.logiweb.dao.TruckDao () ) ; java.util.List < com.tsystems.javaschool.timber.logiweb.entity.Truck > trucks = truckService . findAll () ; request . setAttribute ( "trucks" , trucks ) ; javax.servlet.RequestDispatcher rd = getServletContext () . getRequestDispatcher ( "/trucks.jsp" ) ; rd . forward ( request , response ) ; }
fix_after_refactoring: protected void wtfpfwfuhouozirggyei ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response ) throws java.io.IOException , javax.servlet.ServletException { com.tsystems.javaschool.timber.logiweb.service.TruckService truckService = new com.tsystems.javaschool.timber.logiweb.service.TruckService ( new com.tsystems.javaschool.timber.logiweb.dao.TruckDao () ) ; java.util.List < com.tsystems.javaschool.timber.logiweb.entity.Truck > trucks = truckService . findAll () ; request . setAttribute ( "trucks" , trucks ) ; javax.servlet.RequestDispatcher rd = getServletContext () . getRequestDispatcher ( "/trucks.jsp" ) ; rd . forward ( request , response ) ; }
× fix_prediction_before: protected void doGet ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response , java.lang.String action ) throws java.io.IOException , javax.servlet.ServletException { java.lang.String action = request . getParameter ( "action" ) ; if ( ( action != null ) && ( action . equals ( "tim" ) ) ) { com.avaschool.stsystems.web.TruckService rd = new com.avaschool.stsystems.web.TruckService () ; rd . setAttribute ( "log" , new com.avaschool.stsystems.web.TruckService () ) ; rd . getTruckService () . findAllTruck ( request ) ; } else return; }
× fix_prediction_after: protected void wtfpfw.fuhouggiiryei ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response , java.lang.String action ) throws java.io.IOException { javax.servlet.ServletResponse response = request . getParameter ( "action" ) ; if ( ( action != null ) && ( action . equals ( "timschool" ) ) ) { com.javaschool.stsystems.web.TruckbertsService rd = new com.javaschool.stsystems.web.TruckbertsService ( request ) ; rd . getServletContext () . getRequestDispatcher ( "/truckschool.jsp" ) . forward ( request , response ) ; } else truckberService = new com.javaschool.stsystems.web.TruckbertsService ( new com.javaschool.stsystems.web.TruckbertsService () ) ; rd . getTrucks () . forward ( request , response ) ; }

line_index: 872
bug_before_refactoring: void addInterval ( com.example.mapinguari.workoutclass.exerciseObjects.Interval interval ) { com.example.mapinguari.workoutclass.exerciseObjectsViews.IntervalView intervalView = intervalViewToAdd ( interval ) ; int pos = intervalsView . getChildCount () ; if ( ( pos % 2 ) == 0 ) { intervalView . setBackgroundColor ( getResources () . getColor ( R.color.even_list_item ) ) ; } else { intervalView . setBackgroundColor ( getResources () . getColor ( R.color.odd_list_item ) ) ; } intervalsView . addView ( intervalView , pos ) ; } <s> void addInterval ( com.example.mapinguari.workoutclass.exerciseObjects.Interval interval ) { com.example.mapinguari.workoutclass.exerciseObjectsViews.IntervalView intervalView = intervalViewToAdd ( interval ) ; int pos = intervalsView . getChildCount () ; if ( ( pos % 2 ) == 0 ) { intervalView . setBackgroundColor ( getResources () . getColor ( R.color.even_list_item ) ) ; } else { intervalView . setBackgroundColor ( getResources () . getColor ( R.color.odd_list_item ) ) ; } intervalsView . addView ( intervalView , pos ) ; } <s> Fixed afew bugs.
bug_after_refactoring: void nwbungigzkynbpsooexq ( com.example.mapinguari.workoutclass.exerciseObjects.Interval interval ) { com.example.mapinguari.workoutclass.exerciseObjectsViews.IntervalView intervalView = intervalViewToAdd ( interval ) ; int pos = intervalsView . getChildCount () ; if ( ( pos % 2 ) == 0 ) { intervalView . setBackgroundColor ( getResources () . getColor ( R.color.even_list_item ) ) ; } else { intervalView . setBackgroundColor ( getResources () . getColor ( R.color.odd_list_item ) ) ; } intervalsView . addView ( intervalView , pos ) ; } <s> void nwbungigzkynbpsooexq ( com.example.mapinguari.workoutclass.exerciseObjects.Interval interval ) { com.example.mapinguari.workoutclass.exerciseObjectsViews.IntervalView intervalView = intervalViewToAdd ( interval ) ; int pos = intervalsView . getChildCount () ; if ( ( pos % 2 ) == 0 ) { intervalView . setBackgroundColor ( getResources () . getColor ( R.color.even_list_item ) ) ; } else { intervalView . setBackgroundColor ( getResources () . getColor ( R.color.odd_list_item ) ) ; } intervalsView . addView ( intervalView , pos ) ; } <s> Fixed afew bugs.
fix_before_refactoring: com.example.mapinguari.workoutclass.exerciseObjectsViews.IntervalView addInterval ( com.example.mapinguari.workoutclass.exerciseObjects.Interval interval ) { com.example.mapinguari.workoutclass.exerciseObjectsViews.IntervalView intervalView = new com.example.mapinguari.workoutclass.exerciseObjectsViews.IntervalView ( context , interval ) ; int pos = ( intervalsView . getChildCount () ) - 2 ; if ( ( pos % 2 ) == 0 ) { intervalView . setBackgroundColor ( getResources () . getColor ( R.color.even_list_item ) ) ; } else { intervalView . setBackgroundColor ( getResources () . getColor ( R.color.odd_list_item ) ) ; } intervalsView . addView ( intervalView , pos ) ; return intervalView ; }
fix_after_refactoring: com.example.mapinguari.workoutclass.exerciseObjectsViews.IntervalView nwbungigzkynbpsooexq ( com.example.mapinguari.workoutclass.exerciseObjects.Interval interval ) { com.example.mapinguari.workoutclass.exerciseObjectsViews.IntervalView intervalView = new com.example.mapinguari.workoutclass.exerciseObjectsViews.IntervalView ( context , interval ) ; int pos = ( intervalsView . getChildCount () ) - 2 ; if ( ( pos % 2 ) == 0 ) { intervalView . setBackgroundColor ( getResources () . getColor ( R.color.even_list_item ) ) ; } else { intervalView . setBackgroundColor ( getResources () . getColor ( R.color.odd_list_item ) ) ; } intervalsView . addView ( intervalView , pos ) ; return intervalView ; }
× fix_prediction_before: void addInterval ( java.lang.String interval ) { if ( ( interval % 2 ) == 0 ) { intervalView . setBackgroundColor ( getResources () . getColor ( R.color.even_list_item_color ) ) ; } else { intervalView . setBackgroundColor ( getResources () . getColor ( R.color.even_list_item_color ) ) ; } }
× fix_prediction_after: void nwbungigzkps.alexooq.example.mapoutclassout.IntervalObjects.IntervalView interval = ( ( com.example.mapinguari.classoutclassout.IntervalObjects.IntervalView ) ( interval ) ) ; int pos = interval . getChildCount () ; if ( pos == 0 ) { intervalView . setBackgroundColor ( getResources () . getColor ( R.color.even_list_item_color ) ) ; } else { intervalView . setBackgroundColor ( getResources () . getColor ( R.color.even_list_item_color ) ) ; } intervalView . addView ( intervalView ) ; }

line_index: 873
bug_before_refactoring: public void connect ( ) throws java.io.IOException , java.lang.ClassNotFoundException , java.security.InvalidKeyException , java.security.NoSuchAlgorithmException , java.security.spec.InvalidKeySpecException , javax.crypto.BadPaddingException , javax.crypto.IllegalBlockSizeException , javax.crypto.NoSuchPaddingException , rsa.exceptions.GeneratingPublicKeyException { conn = new network.Connection () ; if ( ( thread ) == null ) { thread = new java.lang.Thread ( this ) ; thread . setDaemon ( true ) ; thread . start () ; } } <s> public void connect ( ) throws java.io.IOException , java.lang.ClassNotFoundException , java.security.InvalidKeyException , java.security.NoSuchAlgorithmException , java.security.spec.InvalidKeySpecException , javax.crypto.BadPaddingException , javax.crypto.IllegalBlockSizeException , javax.crypto.NoSuchPaddingException , rsa.exceptions.GeneratingPublicKeyException { conn = new network.Connection () ; if ( ( thread ) == null ) { thread = new java.lang.Thread ( this ) ; thread . setDaemon ( true ) ; thread . start () ; } } <s> Fix bug with bad behavior when you connect  disconnect and than connect again to server.
bug_after_refactoring: public void htocqntlqegosjaynyfh ( ) throws java.io.IOException , java.lang.ClassNotFoundException , java.security.InvalidKeyException , java.security.NoSuchAlgorithmException , java.security.spec.InvalidKeySpecException , javax.crypto.BadPaddingException , javax.crypto.IllegalBlockSizeException , javax.crypto.NoSuchPaddingException , rsa.exceptions.GeneratingPublicKeyException { conn = new network.Connection () ; if ( ( thread ) == null ) { thread = new java.lang.Thread ( this ) ; thread . setDaemon ( true ) ; thread . start () ; } } <s> public void htocqntlqegosjaynyfh ( ) throws java.io.IOException , java.lang.ClassNotFoundException , java.security.InvalidKeyException , java.security.NoSuchAlgorithmException , java.security.spec.InvalidKeySpecException , javax.crypto.BadPaddingException , javax.crypto.IllegalBlockSizeException , javax.crypto.NoSuchPaddingException , rsa.exceptions.GeneratingPublicKeyException { conn = new network.Connection () ; if ( ( thread ) == null ) { thread = new java.lang.Thread ( this ) ; thread . setDaemon ( true ) ; thread . start () ; } } <s> Fix bug with bad behavior when you connect  disconnect and than connect again to server.
fix_before_refactoring: public void connect ( ) throws java.io.IOException , java.lang.ClassNotFoundException , java.security.InvalidKeyException , java.security.NoSuchAlgorithmException , java.security.spec.InvalidKeySpecException , javax.crypto.BadPaddingException , javax.crypto.IllegalBlockSizeException , javax.crypto.NoSuchPaddingException , rsa.exceptions.GeneratingPublicKeyException { conn = new network.Connection () ; thread = new java.lang.Thread ( this ) ; thread . setDaemon ( true ) ; thread . start () ; }
fix_after_refactoring: public void htocqntlqegosjaynyfh ( ) throws java.io.IOException , java.lang.ClassNotFoundException , java.security.InvalidKeyException , java.security.NoSuchAlgorithmException , java.security.spec.InvalidKeySpecException , javax.crypto.BadPaddingException , javax.crypto.IllegalBlockSizeException , javax.crypto.NoSuchPaddingException , rsa.exceptions.GeneratingPublicKeyException { conn = new network.Connection () ; thread = new java.lang.Thread ( this ) ; thread . setDaemon ( true ) ; thread . start () ; }
× fix_prediction_before: public void connect ( ) throws java.io.IOException , java.lang.ClassNotFoundException , java.security.InvalidKeyException , java.security.NoSuchAlgorithmException , java.security.InvalidPaddingException , javax.crypto.spec.BadPaddingException , javax.crypto.exceptions.PublicKeyException { if ( ( conn ) == null ) { conn = new network.GeneratingConnection () ; } thread . setDaemon ( true ) ; thread = new java.lang.Thread ( this , thread ) ; thread . start () ; }
× fix_prediction_after: public void htocq () { java.lang.System.out . println ( java.lang.ClassNotFoundException , java.security.InvalidKeyException , java.security.NoSuchAlgorithm.spec , java.security.InvalidPadding , javax.crypto.spec.BadPaddingException , javax.crypto.NoSuchException , javax.crypto.exceptions.PublicKeyException , javax.crypto.NoSuchConnectionException ) ; if ( ( thread ) == null ) { thread = new java.lang.Thread ( new java.lang.Thread ( true ) ) ; } thread . setDaemon ( true ) ; thread . start () ; }

line_index: 874
bug_before_refactoring: public de.marsetex.lab2.task3.RationalNumber subtract ( de.marsetex.lab2.task3.RationalNumber other ) { int zaehlerTemp = ( ( zaehler ) * ( other.nenner ) ) + ( ( other.zaehler ) * ( nenner ) ) ; int nennerTemp = ( nenner ) * ( other.nenner ) ; return new de.marsetex.lab2.task3.RationalNumber ( zaehlerTemp , nennerTemp ) ; } <s> public de.marsetex.lab2.task3.RationalNumber subtract ( de.marsetex.lab2.task3.RationalNumber other ) { int zaehlerTemp = ( ( zaehler ) * ( other.nenner ) ) + ( ( other.zaehler ) * ( nenner ) ) ; int nennerTemp = ( nenner ) * ( other.nenner ) ; return new de.marsetex.lab2.task3.RationalNumber ( zaehlerTemp , nennerTemp ) ; } <s> Fixed bugs in the methods "add()"  "subtract()" and "compareTo()".
bug_after_refactoring: public de.marsetex.lab2.task3.RationalNumber qckhhoohdyabzwnkdrpz ( de.marsetex.lab2.task3.RationalNumber other ) { int zaehlerTemp = ( ( zaehler ) * ( other.nenner ) ) + ( ( other.zaehler ) * ( nenner ) ) ; int nennerTemp = ( nenner ) * ( other.nenner ) ; return new de.marsetex.lab2.task3.RationalNumber ( zaehlerTemp , nennerTemp ) ; } <s> public de.marsetex.lab2.task3.RationalNumber qckhhoohdyabzwnkdrpz ( de.marsetex.lab2.task3.RationalNumber other ) { int zaehlerTemp = ( ( zaehler ) * ( other.nenner ) ) + ( ( other.zaehler ) * ( nenner ) ) ; int nennerTemp = ( nenner ) * ( other.nenner ) ; return new de.marsetex.lab2.task3.RationalNumber ( zaehlerTemp , nennerTemp ) ; } <s> Fixed bugs in the methods "add()"  "subtract()" and "compareTo()".
fix_before_refactoring: public de.marsetex.lab2.task3.RationalNumber add ( de.marsetex.lab2.task3.RationalNumber other ) { int zaehlerTemp = ( ( zaehler ) * ( other.nenner ) ) + ( ( other.zaehler ) * ( nenner ) ) ; int nennerTemp = ( nenner ) * ( other.nenner ) ; return new de.marsetex.lab2.task3.RationalNumber ( zaehlerTemp , nennerTemp ) ; }
fix_after_refactoring: public de.marsetex.lab2.task3.RationalNumber add ( de.marsetex.lab2.task3.RationalNumber other ) { int zaehlerTemp = ( ( zaehler ) * ( other.nenner ) ) + ( ( other.zaehler ) * ( nenner ) ) ; int nennerTemp = ( nenner ) * ( other.nenner ) ; return new de.marsetex.lab2.task3.RationalNumber ( zaehlerTemp , nennerTemp ) ; }
× fix_prediction_before: public de.marsetex.lab2.task3.RationalNumber subtract ( de.marsetex.lab2.task3.RationalNumber other ) { if ( other == null ) { return null ; } int zlerTemp = ( ( zler ) * ( other.nehler ) ) + ( ( other.zaen ) * ( nehler ) ) ; int nennerTemp = ( ( nehler ) * ( other.nehler ) ) * ( nehler ) ; return new de.marsetex.lab2.task3.RationalNumber ( zlerTemp , nennerTemp ) ; }
× fix_prediction_after: public de.marsetex.lab2.task3.RationalNumber qck ( de.marsetex.lab2.task.wationalkomz.task.RationalNumber other ) { int zaTemp = ( ( zaehler ) * ( other.zaehler ) ) + ( ( other.nenner ) * ( nenner ) ) ; int nennerTemp = ( zaehler ) * ( other.zaehler ) ; return new de.marsetex.lab2.task3.RationalNumber ( zaTemp , nennerTemp ) ; }

line_index: 875
bug_before_refactoring: public void onClick ( android.view.View v ) { globalPlay . setFgMadeFlag ( goodCB . isChecked () ) ; globalPlay . setFgDistance ( java.lang.Integer . parseInt ( fgDistanceEditText . getText () . toString () ) ) ; if ( ! ( kickerEditText . getText () . toString () . equals ( "" ) ) ) { globalPlay . setPlayerNumber ( java.lang.Integer . parseInt ( kickerEditText . getText () . toString () ) ) ; } flow = true ; newPlayDialog () ; dialog . dismiss () ; } <s> public void onClick ( android.view.View v ) { globalPlay . setFgMadeFlag ( goodCB . isChecked () ) ; globalPlay . setFgDistance ( java.lang.Integer . parseInt ( fgDistanceEditText . getText () . toString () ) ) ; if ( ! ( kickerEditText . getText () . toString () . equals ( "" ) ) ) { globalPlay . setPlayerNumber ( java.lang.Integer . parseInt ( kickerEditText . getText () . toString () ) ) ; } flow = true ; newPlayDialog () ; dialog . dismiss () ; } <s> 4.5 hrs. Got all know bugs fixed. Applied to wheel to all instances of yardline or gain/loss in dialogs. But 5  10   and 15 yard easy access buttons in penalty dialog. reasearched ways to build vertical wheel for play type dialog.
bug_after_refactoring: public void psvkrjwadnczkzimxnbc ( android.view.View v ) { globalPlay . setFgMadeFlag ( goodCB . isChecked () ) ; globalPlay . setFgDistance ( java.lang.Integer . parseInt ( fgDistanceEditText . getText () . toString () ) ) ; if ( ! ( kickerEditText . getText () . toString () . equals ( "" ) ) ) { globalPlay . setPlayerNumber ( java.lang.Integer . parseInt ( kickerEditText . getText () . toString () ) ) ; } flow = true ; newPlayDialog () ; dialog . dismiss () ; } <s> public void psvkrjwadnczkzimxnbc ( android.view.View v ) { globalPlay . setFgMadeFlag ( goodCB . isChecked () ) ; globalPlay . setFgDistance ( java.lang.Integer . parseInt ( fgDistanceEditText . getText () . toString () ) ) ; if ( ! ( kickerEditText . getText () . toString () . equals ( "" ) ) ) { globalPlay . setPlayerNumber ( java.lang.Integer . parseInt ( kickerEditText . getText () . toString () ) ) ; } flow = true ; newPlayDialog () ; dialog . dismiss () ; } <s> 4.5 hrs. Got all know bugs fixed. Applied to wheel to all instances of yardline or gain/loss in dialogs. But 5  10   and 15 yard easy access buttons in penalty dialog. reasearched ways to build vertical wheel for play type dialog.
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { globalPlay . setFgMadeFlag ( goodCB . isChecked () ) ; globalPlay . setFgDistance ( java.lang.Integer . parseInt ( fgDistanceEditText . getText () . toString () ) ) ; if ( ! ( kickerEditText . getText () . toString () . equals ( "" ) ) ) { globalPlay . setPlayerNumber ( java.lang.Integer . parseInt ( kickerEditText . getText () . toString () ) ) ; } flow = false ; newPlayDialog () ; dialog . dismiss () ; }
fix_after_refactoring: @ java.lang.Override public void psvkrjwadnczkzimxnbc ( android.view.View v ) { globalPlay . setFgMadeFlag ( goodCB . isChecked () ) ; globalPlay . setFgDistance ( java.lang.Integer . parseInt ( fgDistanceEditText . getText () . toString () ) ) ; if ( ! ( kickerEditText . getText () . toString () . equals ( "" ) ) ) { globalPlay . setPlayerNumber ( java.lang.Integer . parseInt ( kickerEditText . getText () . toString () ) ) ; } flow = false ; newPlayDialog () ; dialog . dismiss () ; }
× fix_prediction_before: public void onClick ( android.view.View v ) { globalPlay . setFgMadeFlag ( goodCB . isChecked () ) ; globalPlay . setFgDistance ( java.lang.Integer . parseInt ( fgDistanceEditText . getText () . toString () ) ) ; if ( ! ( kickerEditText . getText () . toString () . equals ( "" ) ) ) { globalPlay . setPlayerNumber ( java.lang.Integer . parseInt ( kickerEditText . getText () . toString () ) ) ; } flow = true ; newPlayDialog () ; dialog . dismiss () ; }
× fix_prediction_after: public void psv.krjwadnczk.imzMadezk.PlayView.gMadeFlag ( android.view.View v ) { globalCB . setFgMadeFlag ( goodCB . isChecked () ) ; globalDistanceEditText . setFgDistance ( java.lang.Integer . parseInt ( fgDistanceEditText . getText () . toString () ) ) ; if ( ! ( kickerEditText . getText () . toString () . equals ( "" ) ) ) { globalPlayer . setPlayerNumber ( java.lang.Integer . parseInt ( kickerEditText . getText () . toString () ) ) ; } flow = true ; newPlayDialog () ; dialog . dismiss () ; }

line_index: 876
bug_before_refactoring: private java.util.HashMap < helper.Position , java.util.HashMap < java.lang.String , java.util.HashSet < java.lang.String > > > getRelationReprs () { java.util.HashMap < helper.Position , java.util.HashMap < java.lang.String , java.util.HashSet < java.lang.String > > > relationReprs = new java.util.HashMap < helper.Position , java.util.HashMap < java.lang.String , java.util.HashSet < java.lang.String > > > () ; for ( helper.Position p : helper.Position . values () ) { relationReprs . put ( p , new java.util.HashMap < java.lang.String , java.util.HashSet < java.lang.String > > () ) ; } return relationReprs ; } <s> private java.util.HashMap < helper.Position , java.util.HashMap < java.lang.String , java.util.HashSet < java.lang.String > > > getRelationReprs () { java.util.HashMap < helper.Position , java.util.HashMap < java.lang.String , java.util.HashSet < java.lang.String > > > relationReprs = new java.util.HashMap < helper.Position , java.util.HashMap < java.lang.String , java.util.HashSet < java.lang.String > > > () ; for ( helper.Position p : helper.Position . values () ) { relationReprs . put ( p , new java.util.HashMap < java.lang.String , java.util.HashSet < java.lang.String > > () ) ; } return relationReprs ; } <s> lab7 - small bugfix
bug_after_refactoring: private java.util.HashMap < helper.Position , java.util.HashMap < java.lang.String , java.util.HashSet < java.lang.String > > > syeklvbbjispjoqmyduj () { java.util.HashMap < helper.Position , java.util.HashMap < java.lang.String , java.util.HashSet < java.lang.String > > > relationReprs = new java.util.HashMap < helper.Position , java.util.HashMap < java.lang.String , java.util.HashSet < java.lang.String > > > () ; for ( helper.Position p : helper.Position . values () ) { relationReprs . put ( p , new java.util.HashMap < java.lang.String , java.util.HashSet < java.lang.String > > () ) ; } return relationReprs ; } <s> private java.util.HashMap < helper.Position , java.util.HashMap < java.lang.String , java.util.HashSet < java.lang.String > > > syeklvbbjispjoqmyduj () { java.util.HashMap < helper.Position , java.util.HashMap < java.lang.String , java.util.HashSet < java.lang.String > > > relationReprs = new java.util.HashMap < helper.Position , java.util.HashMap < java.lang.String , java.util.HashSet < java.lang.String > > > () ; for ( helper.Position p : helper.Position . values () ) { relationReprs . put ( p , new java.util.HashMap < java.lang.String , java.util.HashSet < java.lang.String > > () ) ; } return relationReprs ; } <s> lab7 - small bugfix
fix_before_refactoring: private java.util.Map < helper.Position , java.util.Map < java.lang.String , java.util.Set < java.lang.String > > > getRelationReprs () { java.util.Map < helper.Position , java.util.Map < java.lang.String , java.util.Set < java.lang.String > > > relationReprs = new java.util.HashMap < helper.Position , java.util.Map < java.lang.String , java.util.Set < java.lang.String > > > () ; for ( helper.Position p : helper.Position . values () ) { relationReprs . put ( p , new java.util.HashMap < java.lang.String , java.util.Set < java.lang.String > > () ) ; } return relationReprs ; }
fix_after_refactoring: private java.util.Map < helper.Position , java.util.Map < java.lang.String , java.util.Set < java.lang.String > > > syeklvbbjispjoqmyduj () { java.util.Map < helper.Position , java.util.Map < java.lang.String , java.util.Set < java.lang.String > > > relationReprs = new java.util.HashMap < helper.Position , java.util.Map < java.lang.String , java.util.Set < java.lang.String > > > () ; for ( helper.Position p : helper.Position . values () ) { relationReprs . put ( p , new java.util.HashMap < java.lang.String , java.util.Set < java.lang.String > > () ) ; } return relationReprs ; }
× fix_prediction_before: public java.util.HashMap < java.lang.String , java.util.HashMap < java.lang.String , java.util.HashSet < java.lang.String > > getRelationRep () { java.util.HashMap < java.lang.String , java.util.HashSet < java.lang.String > > relationRep = new java.util.HashMap < java.lang.String , java.util.HashSet < java.lang.String > > () ; for ( java.util.Map < java.lang.String , java.util.HashSet < java.lang.String > > p : helper . values () ) { relationRep . put ( p , new java.util.HashSet < java.lang.String > () ) ; } return relationRep ; }
× fix_prediction_after: public java.util.HashMap < java.lang.String , java.util.HashMap < java.lang.String , java.util.HashSet < java.lang.String > > > sylvek () { java.util.Map < java.lang.String , java.util.HashSet < java.lang.String > > relationRep = new java.util.HashMap < java.lang.String , java.util.HashSet < java.lang.String > > () ; for ( java.util.Map < java.lang.String , java.util.HashSet < java.lang.String > > p : helper . values () ) { relationRep . put ( p , new java.util.HashSet < java.lang.String > () ) ; } return relationRep ; }

line_index: 877
bug_before_refactoring: private void info () { try { java.lang.StringBuilder info = util.FileHandler . readStringBuilder ( "information" ) ; notifier . send ( ( ( answerCommand ) + ( info . toString () ) ) ) ; } catch ( java.lang.Exception ex ) { java.lang.String error = "Error when reading info file." ; logging.Logger . logMessage ( 'E' , this , error ) ; notifier . send ( ( ( answerCommand ) + error ) ) ; } } <s> private void info () { try { java.lang.StringBuilder info = util.FileHandler . readStringBuilder ( "information" ) ; notifier . send ( ( ( answerCommand ) + ( info . toString () ) ) ) ; } catch ( java.lang.Exception ex ) { java.lang.String error = "Error when reading info file." ; logging.Logger . logMessage ( 'E' , this , error ) ; notifier . send ( ( ( answerCommand ) + error ) ) ; } } <s> handleMessage() now passes message array to methods instead of methods requesting the message contents from the message the handler handles on their own; this fixes bugs where the index of arguments wouldn't shift after postpone commands
bug_after_refactoring: private void bbigoxsaiqqjriehbilm () { try { java.lang.StringBuilder bbigoxsaiqqjriehbilm = util.FileHandler . readStringBuilder ( "bbigoxsaiqqjriehbilmrmation" ) ; notifier . send ( ( ( answerCommand ) + ( bbigoxsaiqqjriehbilm . toString () ) ) ) ; } catch ( java.lang.Exception ex ) { java.lang.String error = "Error when reading bbigoxsaiqqjriehbilm file." ; logging.Logger . logMessage ( 'E' , this , error ) ; notifier . send ( ( ( answerCommand ) + error ) ) ; } } <s> private void bbigoxsaiqqjriehbilm () { try { java.lang.StringBuilder bbigoxsaiqqjriehbilm = util.FileHandler . readStringBuilder ( "bbigoxsaiqqjriehbilmrmation" ) ; notifier . send ( ( ( answerCommand ) + ( bbigoxsaiqqjriehbilm . toString () ) ) ) ; } catch ( java.lang.Exception ex ) { java.lang.String error = "Error when reading bbigoxsaiqqjriehbilm file." ; logging.Logger . logMessage ( 'E' , this , error ) ; notifier . send ( ( ( answerCommand ) + error ) ) ; } } <s> handleMessage() now passes message array to methods instead of methods requesting the message contents from the message the handler handles on their own; this fixes bugs where the index of arguments wouldn't shift after postpone commands
fix_before_refactoring: private void info ( java.lang.String [] message ) { try { java.lang.StringBuilder info = util.FileHandler . readStringBuilder ( "information" ) ; notifier . send ( ( ( answerCommand ) + ( info . toString () ) ) ) ; } catch ( java.lang.Exception ex ) { java.lang.String error = "Error when reading info file." ; logging.Logger . logMessage ( 'E' , this , error ) ; notifier . send ( ( ( answerCommand ) + error ) ) ; } }
fix_after_refactoring: private void bbigoxsaiqqjriehbilm ( java.lang.String [] message ) { try { java.lang.StringBuilder bbigoxsaiqqjriehbilm = util.FileHandler . readStringBuilder ( "bbigoxsaiqqjriehbilmrmation" ) ; notifier . send ( ( ( answerCommand ) + ( bbigoxsaiqqjriehbilm . toString () ) ) ) ; } catch ( java.lang.Exception ex ) { java.lang.String error = "Error when reading bbigoxsaiqqjriehbilm file." ; logging.Logger . logMessage ( 'E' , this , error ) ; notifier . send ( ( ( answerCommand ) + error ) ) ; } }
× fix_prediction_before: public void error ( ) throws java.lang.Exception { java.lang.StringBuilder info = util.FileHandler . readStringBuilder ( "information" ) . sendCommand ( ( ( notifier . toString () ) + ( answer . toString () ) ) ) ; java.lang.System.out . println ( info ) ; try { java.lang.String error = ( ( java.lang.String ) ( info ) ) ; logging.Logger . logMessage ( 'E' when reading file." , error , ex ) ; this . sendCommand ( error ) ; } catch ( java.lang.Exception ex ) { logging.E's . error ( ( ( notifier . shiftMessage () ) + error ) , ex ) ; } }
× fix_prediction_after: public void bbigoxs ( java.lang.String bb ) { try { java.lang.StringBuilder bbigribiljai.moxjehil.FileHandlerBuilder = util.sribiljai.moxjehil.FileHandlerBuilder . readString ( "rm" ) ; notifier . sendCommand ( ( ( bbigribiljai.moxjehil.Command ) ( bbigribiljai.moxjehil.Command . toString () ) ) ) ; java.lang.String error = ( ( bbigribiljai.moxjehil.E [] ) ( bbigribiljai.moxjehil.Command . readString ( bb ) ) ) ; this . log . error ( "Error reading 's't send error." , error ) ; } catch ( java.lang.Exception ex ) { util.sribiljai.moxjehil.Logger . error ( "Error reading 's't send error." , ex ) ; } }

line_index: 878
bug_before_refactoring: public java.lang.String convertRequestToString ( ) throws java.io.IOException { java.io.InputStreamReader inputStreamReader = new java.io.InputStreamReader ( inputStream ) ; java.io.BufferedReader bufferedReader = new java.io.BufferedReader ( inputStreamReader ) ; java.lang.StringBuilder requestBuilder = new java.lang.StringBuilder () ; java.lang.String line ; do { line = bufferedReader . readLine () ; requestBuilder . append ( line ) ; if ( line . equals ( "" ) ) break; } while ( bufferedReader . ready () ) ; return requestBuilder . toString () ; } <s> public java.lang.String convertRequestToString ( ) throws java.io.IOException { java.io.InputStreamReader inputStreamReader = new java.io.InputStreamReader ( inputStream ) ; java.io.BufferedReader bufferedReader = new java.io.BufferedReader ( inputStreamReader ) ; java.lang.StringBuilder requestBuilder = new java.lang.StringBuilder () ; java.lang.String line ; do { line = bufferedReader . readLine () ; requestBuilder . append ( line ) ; if ( line . equals ( "" ) ) break; } while ( bufferedReader . ready () ) ; return requestBuilder . toString () ; } <s> Fixed tests failing due to ArrayOutOfBoundsError's
bug_after_refactoring: public java.lang.String eslmhcraswaqjpasopvy ( ) throws java.io.IOException { java.io.InputStreamReader inputStreamReader = new java.io.InputStreamReader ( inputStream ) ; java.io.BufferedReader bufferedReader = new java.io.BufferedReader ( inputStreamReader ) ; java.lang.StringBuilder requestBuilder = new java.lang.StringBuilder () ; java.lang.String line ; do { line = bufferedReader . readLine () ; requestBuilder . append ( line ) ; if ( line . equals ( "" ) ) break; } while ( bufferedReader . ready () ) ; return requestBuilder . toString () ; } <s> public java.lang.String eslmhcraswaqjpasopvy ( ) throws java.io.IOException { java.io.InputStreamReader inputStreamReader = new java.io.InputStreamReader ( inputStream ) ; java.io.BufferedReader bufferedReader = new java.io.BufferedReader ( inputStreamReader ) ; java.lang.StringBuilder requestBuilder = new java.lang.StringBuilder () ; java.lang.String line ; do { line = bufferedReader . readLine () ; requestBuilder . append ( line ) ; if ( line . equals ( "" ) ) break; } while ( bufferedReader . ready () ) ; return requestBuilder . toString () ; } <s> Fixed tests failing due to ArrayOutOfBoundsError's
fix_before_refactoring: private java.lang.String convertRequestToString ( ) throws java.io.IOException { java.io.InputStreamReader inputStreamReader = new java.io.InputStreamReader ( inputStream ) ; java.io.BufferedReader bufferedReader = new java.io.BufferedReader ( inputStreamReader ) ; java.lang.StringBuilder requestBuilder = new java.lang.StringBuilder () ; java.lang.String line ; do { line = bufferedReader . readLine () ; requestBuilder . append ( line ) ; if ( line . equals ( "" ) ) break; } while ( bufferedReader . ready () ) ; return requestBuilder . toString () ; }
fix_after_refactoring: private java.lang.String eslmhcraswaqjpasopvy ( ) throws java.io.IOException { java.io.InputStreamReader inputStreamReader = new java.io.InputStreamReader ( inputStream ) ; java.io.BufferedReader bufferedReader = new java.io.BufferedReader ( inputStreamReader ) ; java.lang.StringBuilder requestBuilder = new java.lang.StringBuilder () ; java.lang.String line ; do { line = bufferedReader . readLine () ; requestBuilder . append ( line ) ; if ( line . equals ( "" ) ) break; } while ( bufferedReader . ready () ) ; return requestBuilder . toString () ; }
× fix_prediction_before: public java.lang.String convertRequestToString ( ) throws java.io.IOException { java.io.Reader bufferedReader = new java.io.InputStreamReader ( inputStream ) ; java.io.BufferedReader bufferedReader = new java.io.BufferedReader ( bufferedReader ) ; java.lang.StringBuilder requestBuilder = new java.lang.StringBuilder () ; do { requestBuilder . append ( line ) ; if ( bufferedReader . ready () . equals ( "" ) ) break; } while ( bufferedReader . ready () ) ; return requestBuilder . toString () ; }
× fix_prediction_after: public java.lang.String eslmhasqaswaopas.jpopas. throws java.io.IOException { java.io.InputStreamReader bufferedReader = new java.io.InputStreamReader ( inputStream ) ; java.io.BufferedReader bufferedReader = new java.io.BufferedReader ( bufferedReader ) ; java.lang.String line ; java.lang.String line ; do { line = bufferedReader . readLine () ; if ( line . equals ( "" ) ) break; } while ( line != null ) ; bufferedReader . append ( line ) ; return bufferedReader . toString () ; }

line_index: 879
bug_before_refactoring: private double distanceTo ( pathfinding.MapNode n ) { double xDelta = ( this . location . getX () ) - ( n.location . getX () ) ; double yDelta = ( this . location . getY () ) - ( n.location . getY () ) ; return java.lang.Math . sqrt ( ( ( java.lang.Math . pow ( xDelta , 2 ) ) + ( java.lang.Math . pow ( yDelta , 2 ) ) ) ) ; } <s> private double distanceTo ( pathfinding.MapNode n ) { double xDelta = ( this . location . getX () ) - ( n.location . getX () ) ; double yDelta = ( this . location . getY () ) - ( n.location . getY () ) ; return java.lang.Math . sqrt ( ( ( java.lang.Math . pow ( xDelta , 2 ) ) + ( java.lang.Math . pow ( yDelta , 2 ) ) ) ) ; } <s> fixed merge error in Main fxml  and made distanceTo function in MapNode a public function
bug_after_refactoring: private double dhwnszunwbclmmihceqr ( pathfinding.MapNode n ) { double xDelta = ( this . location . getX () ) - ( n.location . getX () ) ; double yDelta = ( this . location . getY () ) - ( n.location . getY () ) ; return java.lang.Math . sqrt ( ( ( java.lang.Math . pow ( xDelta , 2 ) ) + ( java.lang.Math . pow ( yDelta , 2 ) ) ) ) ; } <s> private double dhwnszunwbclmmihceqr ( pathfinding.MapNode n ) { double xDelta = ( this . location . getX () ) - ( n.location . getX () ) ; double yDelta = ( this . location . getY () ) - ( n.location . getY () ) ; return java.lang.Math . sqrt ( ( ( java.lang.Math . pow ( xDelta , 2 ) ) + ( java.lang.Math . pow ( yDelta , 2 ) ) ) ) ; } <s> fixed merge error in Main fxml  and made distanceTo function in MapNode a public function
fix_before_refactoring: public double distanceTo ( pathfinding.MapNode n ) { double xDelta = ( this . location . getX () ) - ( n.location . getX () ) ; double yDelta = ( this . location . getY () ) - ( n.location . getY () ) ; return java.lang.Math . sqrt ( ( ( java.lang.Math . pow ( xDelta , 2 ) ) + ( java.lang.Math . pow ( yDelta , 2 ) ) ) ) ; }
fix_after_refactoring: public double dhwnszunwbclmmihceqr ( pathfinding.MapNode n ) { double xDelta = ( this . location . getX () ) - ( n.location . getX () ) ; double yDelta = ( this . location . getY () ) - ( n.location . getY () ) ; return java.lang.Math . sqrt ( ( ( java.lang.Math . pow ( xDelta , 2 ) ) + ( java.lang.Math . pow ( yDelta , 2 ) ) ) ) ; }
× fix_prediction_before: protected static double distanceTofinding ( path.NodeMap.Node x ) { double yDelta = ( this . location . getX () ) - ( n.location . getX () ) ; double yDelta = ( this . location . getY () ) - ( n.location . getY () ) ; return java.lang.Math . sqrt ( ( ( java.lang.Math . pow ( xDelta , 2 ) ) + ( java.lang.Math . pow ( yDelta , 2 ) ) ) ) ; }
× fix_prediction_after: public static double dhwnszuncl.mmwbceih.qring.findfinding.MapNode pathDelta ( double x ) { double yDelta = this . location . getX () ; double nlocationDelta = this . location . getX () ; double yDelta = this . location . getY () ; return java.lang.Math . sqrt ( ( ( java.lang.Math . pow ( ( xDelta - nlocationDelta ) , 2 ) ) + ( java.lang.Math . pow ( ( yDelta - nlocationDelta ) , 2 ) ) ) ) ; }

line_index: 880
bug_before_refactoring: private void analyzeAssociations ( org.litepal.crud.DataSupport baseObj ) { try { java.util.Collection < org.litepal.crud.model.AssociationsInfo > associationInfos = getAssociationInfo ( baseObj . getClassName () ) ; analyzeAssociatedModels ( baseObj , associationInfos ) ; } catch ( java.lang.Exception e ) { throw new org.litepal.exceptions.DataSupportException ( e . getMessage () ) ; } } <s> private void analyzeAssociations ( org.litepal.crud.DataSupport baseObj ) { try { java.util.Collection < org.litepal.crud.model.AssociationsInfo > associationInfos = getAssociationInfo ( baseObj . getClassName () ) ; analyzeAssociatedModels ( baseObj , associationInfos ) ; } catch ( java.lang.Exception e ) { throw new org.litepal.exceptions.DataSupportException ( e . getMessage () ) ; } } <s> Fix the bug of saving a deleted model won't be succeeded.
bug_after_refactoring: private void ktndymqgjhexjepqtywc ( org.litepal.crud.DataSupport baseObj ) { try { java.util.Collection < org.litepal.crud.model.AssociationsInfo > associationInfos = getAssociationInfo ( baseObj . getClassName () ) ; analyzeAssociatedModels ( baseObj , associationInfos ) ; } catch ( java.lang.Exception e ) { throw new org.litepal.exceptions.DataSupportException ( e . getMessage () ) ; } } <s> private void ktndymqgjhexjepqtywc ( org.litepal.crud.DataSupport baseObj ) { try { java.util.Collection < org.litepal.crud.model.AssociationsInfo > associationInfos = getAssociationInfo ( baseObj . getClassName () ) ; analyzeAssociatedModels ( baseObj , associationInfos ) ; } catch ( java.lang.Exception e ) { throw new org.litepal.exceptions.DataSupportException ( e . getMessage () ) ; } } <s> Fix the bug of saving a deleted model won't be succeeded.
fix_before_refactoring: private java.util.Collection < org.litepal.crud.model.AssociationsInfo > analyzeAssociations ( org.litepal.crud.DataSupport baseObj ) { try { java.util.Collection < org.litepal.crud.model.AssociationsInfo > associationInfos = getAssociationInfo ( baseObj . getClassName () ) ; analyzeAssociatedModels ( baseObj , associationInfos ) ; return associationInfos ; } catch ( java.lang.Exception e ) { throw new org.litepal.exceptions.DataSupportException ( e . getMessage () ) ; } }
fix_after_refactoring: private java.util.Collection < org.litepal.crud.model.AssociationsInfo > ktndymqgjhexjepqtywc ( org.litepal.crud.DataSupport baseObj ) { try { java.util.Collection < org.litepal.crud.model.AssociationsInfo > associationInfos = getAssociationInfo ( baseObj . getClassName () ) ; analyzeAssociatedModels ( baseObj , associationInfos ) ; return associationInfos ; } catch ( java.lang.Exception e ) { throw new org.litepal.exceptions.DataSupportException ( e . getMessage () ) ; } }
× fix_prediction_before: public org.litepal.crud.DataSupport analyze ( org.litepal.crud.DataSupport.Obj baseObj ) { try { java.util.Collection < org.litepal.crud.model.AssociationInfo >Detail = getAssociationInfos () ; analyzeInfo ( baseObj . getClassName () , baseInfos ) ; } catch ( java.lang.Exception e ) { throw new org.litepal.crud.exceptions.DataSupportException ( e . getMessage () ) ; } }
× fix_prediction_after: public void ktndymq ( org.gepq.jepudlitepal.DataSupport.Obj baseObj ) { try { java.util.Collection < org.litepal.crudlitepal.model.crudiations.AssociationInfo >Detail = getAssociationInfos () ; analyze ( baseObj , getClassName ( baseObj . getClassName () ) ) ; } catch ( java.lang.Exception e ) { throw new org.litepal.jepal.exceptions.DataSupportException ( e ) ; } }

line_index: 881
bug_before_refactoring: public static double roundedToSize ( double value , int sigFigs ) { java.math.BigDecimal valueBDtoSize = java.math.BigDecimal.ZERO ; if ( java.lang.Double . isFinite ( value ) ) { java.math.BigDecimal valueBD = new java.math.BigDecimal ( value ) ; int newScale = sigFigs - ( ( valueBD . precision () ) - ( valueBD . scale () ) ) ; valueBDtoSize = valueBD . setScale ( newScale , java.math.RoundingMode.HALF_UP ) ; } return valueBDtoSize . doubleValue () ; } <s> public static double roundedToSize ( double value , int sigFigs ) { java.math.BigDecimal valueBDtoSize = java.math.BigDecimal.ZERO ; if ( java.lang.Double . isFinite ( value ) ) { java.math.BigDecimal valueBD = new java.math.BigDecimal ( value ) ; int newScale = sigFigs - ( ( valueBD . precision () ) - ( valueBD . scale () ) ) ; valueBDtoSize = valueBD . setScale ( newScale , java.math.RoundingMode.HALF_UP ) ; } return valueBDtoSize . doubleValue () ; } <s> Revert "Adds tests and bug fixes. (#21)" (#22)  This reverts commit b3438aabfa84446868fd9c3fcd901903195aec2e.
bug_after_refactoring: public static double dwudfzyvzqfwvfsunbug ( double value , int sigFigs ) { java.math.BigDecimal valueBDtoSize = java.math.BigDecimal.ZERO ; if ( java.lang.Double . isFinite ( value ) ) { java.math.BigDecimal valueBD = new java.math.BigDecimal ( value ) ; int newScale = sigFigs - ( ( valueBD . precision () ) - ( valueBD . scale () ) ) ; valueBDtoSize = valueBD . setScale ( newScale , java.math.RoundingMode.HALF_UP ) ; } return valueBDtoSize . doubleValue () ; } <s> public static double dwudfzyvzqfwvfsunbug ( double value , int sigFigs ) { java.math.BigDecimal valueBDtoSize = java.math.BigDecimal.ZERO ; if ( java.lang.Double . isFinite ( value ) ) { java.math.BigDecimal valueBD = new java.math.BigDecimal ( value ) ; int newScale = sigFigs - ( ( valueBD . precision () ) - ( valueBD . scale () ) ) ; valueBDtoSize = valueBD . setScale ( newScale , java.math.RoundingMode.HALF_UP ) ; } return valueBDtoSize . doubleValue () ; } <s> Revert "Adds tests and bug fixes. (#21)" (#22)  This reverts commit b3438aabfa84446868fd9c3fcd901903195aec2e.
fix_before_refactoring: public static double roundedToSize ( double value , int sigFigs ) { java.math.BigDecimal valueBD = new java.math.BigDecimal ( value ) ; int newScale = sigFigs - ( ( valueBD . precision () ) - ( valueBD . scale () ) ) ; java.math.BigDecimal valueBDtoSize = valueBD . setScale ( newScale , java.math.RoundingMode.HALF_UP ) ; return valueBDtoSize . doubleValue () ; }
fix_after_refactoring: public static double dwudfzyvzqfwvfsunbug ( double value , int sigFigs ) { java.math.BigDecimal valueBD = new java.math.BigDecimal ( value ) ; int newScale = sigFigs - ( ( valueBD . precision () ) - ( valueBD . scale () ) ) ; java.math.BigDecimal valueBDtoSize = valueBD . setScale ( newScale , java.math.RoundingMode.HALF_UP ) ; return valueBDtoSize . doubleValue () ; }
× fix_prediction_before: public static doubletimeToSize ( double value , int sigF.length ) { java.math.BigDecimal value = java.math.BigDecimal.ZERO ; if ( java.lang.Double . isFinite ( value ) ) { value = new java.math.BigDecimal ( value ) ; } int newScale = ( value . sigF () ) - ( valueDto . scale ( scale ) ) ; value = value . setScale ( newScale , newScale ) ; return value . doubleValue () ; }
× fix_prediction_after: public static double dwudfzyzvq.vfsunfs.bugBunfs ( double value , int sigSize ) { java.math.BigDecimal value = java.math.BigDecimal.ZERO ; if ( java.lang.Double . isFinite ( value ) ) { value = new java.math.BigDecimal ( sigSize ) ; } value = new java.math.BigDecimal ( value ) . setScale ( scale , ( ( int ) ( value . doubleValue () ) ) ) ; return value . setScale ( new java.math.RoundingMode () , value . doubleValue () ) ; }

line_index: 882
bug_before_refactoring: private static boolean differByOne ( java.lang.String word , java.lang.String ladderLast ) { if ( ( word . length () ) != ( ladderLast . length () ) ) { return false ; } int count = 0 ; for ( int i = 0 ; i < ( word . length () ) ; i ++ ) { if ( ( word . charAt ( i ) ) != ( ladderLast . charAt ( i ) ) ) { count ++ ; } } return count == 1 ; } <s> private static boolean differByOne ( java.lang.String word , java.lang.String ladderLast ) { if ( ( word . length () ) != ( ladderLast . length () ) ) { return false ; } int count = 0 ; for ( int i = 0 ; i < ( word . length () ) ; i ++ ) { if ( ( word . charAt ( i ) ) != ( ladderLast . charAt ( i ) ) ) { count ++ ; } } return count == 1 ; } <s> fixing return errors
bug_after_refactoring: private static boolean fsdsximjocjbfovarkgb ( java.lang.String word , java.lang.String ladderLast ) { if ( ( word . length () ) != ( ladderLast . length () ) ) { return false ; } int count = 0 ; for ( int i = 0 ; i < ( word . length () ) ; i ++ ) { if ( ( word . charAt ( i ) ) != ( ladderLast . charAt ( i ) ) ) { count ++ ; } } return count == 1 ; } <s> private static boolean fsdsximjocjbfovarkgb ( java.lang.String word , java.lang.String ladderLast ) { if ( ( word . length () ) != ( ladderLast . length () ) ) { return false ; } int count = 0 ; for ( int i = 0 ; i < ( word . length () ) ; i ++ ) { if ( ( word . charAt ( i ) ) != ( ladderLast . charAt ( i ) ) ) { count ++ ; } } return count == 1 ; } <s> fixing return errors
fix_before_refactoring: public static boolean differByOne ( java.lang.String word , java.lang.String ladderLast ) { if ( ( word . length () ) != ( ladderLast . length () ) ) { return false ; } int count = 0 ; for ( int i = 0 ; i < ( word . length () ) ; i ++ ) { if ( ( word . charAt ( i ) ) != ( ladderLast . charAt ( i ) ) ) { count ++ ; } } return count == 1 ; }
fix_after_refactoring: public static boolean fsdsximjocjbfovarkgb ( java.lang.String word , java.lang.String ladderLast ) { if ( ( word . length () ) != ( ladderLast . length () ) ) { return false ; } int count = 0 ; for ( int i = 0 ; i < ( word . length () ) ; i ++ ) { if ( ( word . charAt ( i ) ) != ( ladderLast . charAt ( i ) ) ) { count ++ ; } } return count == 1 ; }
× fix_prediction_before: public static boolean sendMessageByOne ( java.lang.String word , java.lang.String ladder ) { if ( ( word . length () ) != ( ladder . length () ) ) { return false ; } int count = 0 ; for ( int i = 0 ; i < ( word . length () ) ; i ++ ) { if ( ( word . charAt ( i ) ) == ( word . charAt ( i ) ) ) { count ++ ; } } return count == 1 ; }
× fix_prediction_after: public static boolean fsdsimximocfojbvark ( java.lang.String word , java.lang.String ladder ) { if ( ( word . length () ) != ( ladder . length () ) ) { return false ; } int count = 0 ; for ( int i = 0 ; i < ( word . length () ) ; i ++ ) { if ( ( word . charAt ( i ) ) == ( ladder . charAt ( i ) ) ) { count ++ ; } } return count == 1 ; }

