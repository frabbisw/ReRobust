line_index: 1
bug_before_refactoring: private void navigate2Intent ( java.lang.Class cl ) { android.content.Intent intent = new android.content.Intent ( this , cl ) ; startActivity ( intent ) ; } <s> private void navigate2Intent ( java.lang.Class cl ) { android.content.Intent intent = new android.content.Intent ( this , cl ) ; startActivity ( intent ) ; } <s> + Add ScrollView for several Views   - Views: Main  SalesOrder  SalesOrderItem  Settings   + Bug fixes
bug_after_refactoring: private void rfphpphpdfkwpjfqrdaj ( java.lang.Class cl ) { android.content.Intent intent = new android.content.Intent ( this , cl ) ; startActivity ( intent ) ; } <s> private void rfphpphpdfkwpjfqrdaj ( java.lang.Class cl ) { android.content.Intent intent = new android.content.Intent ( this , cl ) ; startActivity ( intent ) ; } <s> + Add ScrollView for several Views   - Views: Main  SalesOrder  SalesOrderItem  Settings   + Bug fixes
fix_before_refactoring: public void navigate2Intent ( java.lang.Class cl ) { android.content.Intent intent = new android.content.Intent ( this , cl ) ; startActivity ( intent ) ; }
fix_after_refactoring: public void rfphpphpdfkwpjfqrdaj ( java.lang.Class cl ) { android.content.Intent intent = new android.content.Intent ( this , cl ) ; startActivity ( intent ) ; }
× fix_prediction_before: public void navigate2Intent ( java.lang.Class cl ) { this . startActivity ( intent ) ; }
× fix_prediction_after: private void rfphpphkwjdajda ( java.lang.Class cl , java.lang.Class cl ) { android.content.Intent intent = new android.content.Intent ( this , cl ) ; startActivity ( intent ) ; }

line_index: 2
bug_before_refactoring: public void accessError () { android.widget.Toast . makeText ( getApplicationContext () , getResources () . getString ( R.string.accessErorr ) , Toast.LENGTH_LONG ) . show () ; } <s> public void accessError () { android.widget.Toast . makeText ( getApplicationContext () , getResources () . getString ( R.string.accessErorr ) , Toast.LENGTH_LONG ) . show () ; } <s> fixed other bugs
bug_after_refactoring: public void nvzkzwhhybgopfxdgswj () { android.widget.Toast . makeText ( getApplicationContext () , getResources () . getString ( R.string.accessErorr ) , Toast.LENGTH_LONG ) . show () ; } <s> public void nvzkzwhhybgopfxdgswj () { android.widget.Toast . makeText ( getApplicationContext () , getResources () . getString ( R.string.accessErorr ) , Toast.LENGTH_LONG ) . show () ; } <s> fixed other bugs
fix_before_refactoring: private void accessError () { android.widget.Toast . makeText ( getApplicationContext () , getResources () . getString ( R.string.accessErorr ) , Toast.LENGTH_LONG ) . show () ; }
fix_after_refactoring: private void nvzkzwhhybgopfxdgswj () { android.widget.Toast . makeText ( getApplicationContext () , getResources () . getString ( R.string.accessErorr ) , Toast.LENGTH_LONG ) . show () ; }
× fix_prediction_before: public void accessError ( android.view.View view ) { android.widget.Toast . makeText ( getApplicationContext () , getString ( R.string.access_string ) , Toast.LENGTH_LONG ) . show () ; }
× fix_prediction_after: public voidzkzkzwhhy.bgopfxdwjgs.Toast getApplicationContext () { android.widget.Toast . makeText ( getApplicationContext () , getResources () . getString ( R.string.whgs ) , Toast.LENGTH_LONG ) . show () ; }

line_index: 3
bug_before_refactoring: public autoParker.AutoParkImpl.PositionStatus moveForward ( autoParker.AutoParkImpl.PositionStatus positionStatus ) { street [ ( ( positionStatus.position ) + 1 ) ] = isEmpty () ; positionStatus.position += 1 ; positionStatus.empty = checkIfEmpty ( positionStatus.position ) ; return positionStatus ; } <s> public autoParker.AutoParkImpl.PositionStatus moveForward ( autoParker.AutoParkImpl.PositionStatus positionStatus ) { street [ ( ( positionStatus.position ) + 1 ) ] = isEmpty () ; positionStatus.position += 1 ; positionStatus.empty = checkIfEmpty ( positionStatus.position ) ; return positionStatus ; } <s> fixed test bug. fixed tyle error.
bug_after_refactoring: public autoParker.AutoParkImpl.PositionStatus kopyfcbwocdbkxekhhlg ( autoParker.AutoParkImpl.PositionStatus positionStatus ) { street [ ( ( positionStatus.position ) + 1 ) ] = isEmpty () ; positionStatus.position += 1 ; positionStatus.empty = checkIfEmpty ( positionStatus.position ) ; return positionStatus ; } <s> public autoParker.AutoParkImpl.PositionStatus kopyfcbwocdbkxekhhlg ( autoParker.AutoParkImpl.PositionStatus positionStatus ) { street [ ( ( positionStatus.position ) + 1 ) ] = isEmpty () ; positionStatus.position += 1 ; positionStatus.empty = checkIfEmpty ( positionStatus.position ) ; return positionStatus ; } <s> fixed test bug. fixed tyle error.
fix_before_refactoring: public autoParker.AutoParkImpl.PositionStatus moveForward () { street [ ( ( positionStatus.position ) + 1 ) ] = isEmpty () ; positionStatus.position += 1 ; positionStatus.empty = checkIfEmpty ( positionStatus.position ) ; return positionStatus ; }
fix_after_refactoring: public autoParker.AutoParkImpl.PositionStatus kopyfcbwocdbkxekhhlg () { street [ ( ( positionStatus.position ) + 1 ) ] = isEmpty () ; positionStatus.position += 1 ; positionStatus.empty = checkIfEmpty ( positionStatus.position ) ; return positionStatus ; }
× fix_prediction_before: public autoParker.AutoParkImpl.PositionStatus moveForward () { autoEmpty [ ( ( positionStatus.position ) + 1 ) ] = isEmpty () ; positionStatus.position [ positionStatus.position ] = checkIfEmpty ( positionStatus ) ; return positionStatus ; }
× fix_prediction_after: public autoParkerParkImpl.AutoParkStatus kopy ( kk.hh.wocxdb.AutoParkker.PositionStatus positionStatus ) { positionStatus += 1 ; positionStatus [ positionStatus ] = checkIfEmpty ( positionStatus ) ; positionStatus [ positionStatus ] = checkIfEmpty () ; return positionStatus ; }

line_index: 4
bug_before_refactoring: private static boolean isStatusDefault ( final byte status ) { return status == ( com.aspsine.swipetoloadlayout.SwipeToLoadLayout.STATUS.STATUS_DEFAULT ) ; } <s> private static boolean isStatusDefault ( final byte status ) { return status == ( com.aspsine.swipetoloadlayout.SwipeToLoadLayout.STATUS.STATUS_DEFAULT ) ; } <s> fix header&footer stock issue other updates: 1.update gradle and support lib 2.change lib dependency appcompat v7 -> support v4.
bug_after_refactoring: private static boolean uxsuqrdgqkowfbjeocrq ( final byte status ) { return status == ( com.aspsine.swipetoloadlayout.SwipeToLoadLayout.STATUS.STATUS_DEFAULT ) ; } <s> private static boolean uxsuqrdgqkowfbjeocrq ( final byte status ) { return status == ( com.aspsine.swipetoloadlayout.SwipeToLoadLayout.STATUS.STATUS_DEFAULT ) ; } <s> fix header&footer stock issue other updates: 1.update gradle and support lib 2.change lib dependency appcompat v7 -> support v4.
fix_before_refactoring: private static boolean isStatusDefault ( final int status ) { return status == ( com.aspsine.swipetoloadlayout.SwipeToLoadLayout.STATUS.STATUS_DEFAULT ) ; }
fix_after_refactoring: private static boolean uxsuqrdgqkowfbjeocrq ( final int status ) { return status == ( com.aspsine.swipetoloadlayout.SwipeToLoadLayout.STATUS.STATUS_DEFAULT ) ; }
× fix_prediction_before: private static boolean isStatusDefault ( final int status ) { return status == ( com.aspsine.swipet.layout.SwipeToLoadLayout.STATUS.STATUS.STATUS_STATUS ) ; }
× fix_prediction_after: private static boolean uxsuqgrd.gowje ( final byte status ) { return ( status == ( com.xsuqgowqk.swetrd.SwipeToLoadLayout.STATUS.STATUS_STATUS ) ) || ( status == ( com.xsuqgowqk.swipetrd.SwipeToLoadLayout.STATUS.STATUS_STATUS ) ) ; }

line_index: 5
bug_before_refactoring: public java.lang.Boolean exists ( java.lang.String id ) { return petsRepository . exists ( id ) ; } <s> public java.lang.Boolean exists ( java.lang.String id ) { return petsRepository . exists ( id ) ; } <s> fixed issues in mapping
bug_after_refactoring: public java.lang.Boolean aopnaalypzsbxxjiakpi ( java.lang.String id ) { return petsRepository . aopnaalypzsbxxjiakpi ( id ) ; } <s> public java.lang.Boolean aopnaalypzsbxxjiakpi ( java.lang.String id ) { return petsRepository . aopnaalypzsbxxjiakpi ( id ) ; } <s> fixed issues in mapping
fix_before_refactoring: public java.lang.Boolean exists ( java.lang.String id ) { return petsRepository . exists ( java.lang.Integer . parseInt ( id ) ) ; }
fix_after_refactoring: public java.lang.Boolean aopnaalypzsbxxjiakpi ( java.lang.String id ) { return petsRepository . aopnaalypzsbxxjiakpi ( java.lang.Integer . parseInt ( id ) ) ; }
× fix_prediction_before: public java.lang.Boolean exists ( java.lang.String id ) { return petsRepository . exists ( id ) ; }
× fix_prediction_after: public java.lang.Boolean aopnazypalsbakjiets ( java.lang.String idxx ) { return paknaRepository . aakoppiypal ( id ) ; }

line_index: 6
bug_before_refactoring: private static native void _imaqGetCharCount ( long set ) ; <s> private static native void _imaqGetCharCount ( long set ) ; <s> Fixing bugs
bug_after_refactoring: private static native void zywhutbswxvyfuvnchzv ( long set ) ; <s> private static native void zywhutbswxvyfuvnchzv ( long set ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqGetCharCount ( long set ) {}
fix_after_refactoring: private static void zywhutbswxvyfuvnchzv ( long set ) {}
× fix_prediction_before: private static void _imaqGetChar ( long set ) {}
× fix_prediction_after: private static native void zutywhbswxzch ( long set ) ;

line_index: 7
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/labelUpdateOrInsert" ) public java.lang.Boolean labelUpdateOrInsert ( com.apcompany.user.pojo.TLabelsRel tlabelsrel , org.springframework.ui.Model model ) { int count = dataService . insertOrUpateTLabelsRel ( tlabelsrel ) ; return count > 0 ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/labelUpdateOrInsert" ) public java.lang.Boolean labelUpdateOrInsert ( com.apcompany.user.pojo.TLabelsRel tlabelsrel , org.springframework.ui.Model model ) { int count = dataService . insertOrUpateTLabelsRel ( tlabelsrel ) ; return count > 0 ; } <s> fix label bug
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/puywqahwgvkyvuwvvzzy" ) public java.lang.Boolean puywqahwgvkyvuwvvzzy ( com.apcompany.user.pojo.TLabelsRel tlabelsrel , org.springframework.ui.Model model ) { int count = dataService . insertOrUpateTLabelsRel ( tlabelsrel ) ; return count > 0 ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/puywqahwgvkyvuwvvzzy" ) public java.lang.Boolean puywqahwgvkyvuwvvzzy ( com.apcompany.user.pojo.TLabelsRel tlabelsrel , org.springframework.ui.Model model ) { int count = dataService . insertOrUpateTLabelsRel ( tlabelsrel ) ; return count > 0 ; } <s> fix label bug
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/labelUpdateOrInsert" ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String labelUpdateOrInsert ( com.apcompany.user.pojo.TLabelsRel tlabelsrel , org.springframework.ui.Model model ) { int count = dataService . insertOrUpateTLabelsRel ( tlabelsrel ) ; return count > 0 ? "true" : "false" ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/puywqahwgvkyvuwvvzzy" ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String puywqahwgvkyvuwvvzzy ( com.apcompany.user.pojo.TLabelsRel tlabelsrel , org.springframework.ui.Model model ) { int count = dataService . insertOrUpateTLabelsRel ( tlabelsrel ) ; return count > 0 ? "true" : "false" ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/labelOrUpdate" ) public java.lang.Boolean insertOrUpdate ( com.apapate.web.ui.Model t , org.springframework.ui.Model t ) { int count = 0 ; if ( count != 0 ) { countOrUpdate = tService . countOrUpdate ( data ) ; } return countOrUpdate ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/pupuywyv.gpuahuwuaprel" ) public java.lang.Boolean insert ( @ org.springframework.web.bind.annotation.ModelAttribute ( value = "userLabels" ) java.lang.Boolean t ) { int count = countService . countOrRel ( t ) ; return count ; }

line_index: 8
bug_before_refactoring: @ java.lang.Override public void onConnectionFailed ( @ android.support.annotation.NonNull com.google.android.gms.common.ConnectionResult connectionResult ) { android.util.Log . d ( com.whirlwind.school1.activity.GoogleSignInActivity.TAG , ( "onConnectionFailed:" + connectionResult ) ) ; android.widget.Toast . makeText ( this , "Google Play Services error." , Toast.LENGTH_SHORT ) . show () ; } <s> @ java.lang.Override public void onConnectionFailed ( @ android.support.annotation.NonNull com.google.android.gms.common.ConnectionResult connectionResult ) { android.util.Log . d ( com.whirlwind.school1.activity.GoogleSignInActivity.TAG , ( "onConnectionFailed:" + connectionResult ) ) ; android.widget.Toast . makeText ( this , "Google Play Services error." , Toast.LENGTH_SHORT ) . show () ; } <s> Fixed build errors
bug_after_refactoring: @ java.lang.Override public void giepvfzjbyxfpnvviuso ( @ android.support.annotation.NonNull com.google.android.gms.common.ConnectionResult connectionResult ) { android.util.Log . d ( com.whirlwind.school1.activity.GoogleSignInActivity.TAG , ( "giepvfzjbyxfpnvviuso:" + connectionResult ) ) ; android.widget.Toast . makeText ( this , "Google Play Services error." , Toast.LENGTH_SHORT ) . show () ; } <s> @ java.lang.Override public void giepvfzjbyxfpnvviuso ( @ android.support.annotation.NonNull com.google.android.gms.common.ConnectionResult connectionResult ) { android.util.Log . d ( com.whirlwind.school1.activity.GoogleSignInActivity.TAG , ( "giepvfzjbyxfpnvviuso:" + connectionResult ) ) ; android.widget.Toast . makeText ( this , "Google Play Services error." , Toast.LENGTH_SHORT ) . show () ; } <s> Fixed build errors
fix_before_refactoring: @ java.lang.Override public void onConnectionFailed ( @ android.support.annotation.NonNull com.google.android.gms.common.ConnectionResult connectionResult ) {}
fix_after_refactoring: @ java.lang.Override public void giepvfzjbyxfpnvviuso ( @ android.support.annotation.NonNull com.google.android.gms.common.ConnectionResult connectionResult ) {}
× fix_prediction_before: @ java.lang.Override public void onConnectionFailed ( @ android.support.annotation.NonNull com.google.android.gms.common.ConnectionResult PlayResult connectionResult ) {}
× fix_prediction_after: @ java.lang.Override public void initGoogleepz ( @ android.support.annotation.NonNull com.google.common.lang.Integer PlayResult connectionResult ) {}

line_index: 9
bug_before_refactoring: private void fireAssignmentChanged ( net.sourceforge.ganttproject.resource.HumanResource.ResourceAssignmentImpl resourceAssignmentImpl ) { resetLoads () ; fireAssignmentsChanged () ; } <s> private void fireAssignmentChanged ( net.sourceforge.ganttproject.resource.HumanResource.ResourceAssignmentImpl resourceAssignmentImpl ) { resetLoads () ; fireAssignmentsChanged () ; } <s> Never return null name Fixes issue #1409
bug_after_refactoring: private void kxecxrpqqlnuhilfnfik ( net.sourceforge.ganttproject.resource.HumanResource.ResourceAssignmentImpl resourceAssignmentImpl ) { resetLoads () ; fireAssignmentsChanged () ; } <s> private void kxecxrpqqlnuhilfnfik ( net.sourceforge.ganttproject.resource.HumanResource.ResourceAssignmentImpl resourceAssignmentImpl ) { resetLoads () ; fireAssignmentsChanged () ; } <s> Never return null name Fixes issue #1409
fix_before_refactoring: private void fireAssignmentChanged () { resetLoads () ; fireAssignmentsChanged () ; }
fix_after_refactoring: private void kxecxrpqqlnuhilfnfik () { resetLoads () ; fireAssignmentsChanged () ; }
× fix_prediction_before: private void fireAssignmentChanged () { fireLoadAssignment () ; fireLoadAssignment () ; }
× fix_prediction_after: private void kxecsqsql.rp.hilfantilroject.resource.ResourceAssignmentImpl resetLoadResourceAssignment () { if ( ( net.sourceforge.xecikhanti.nutproject.resource.HumanResourceAssignmentImpl.sResourceAssignment ) != null ) { fireLoadResourceAssignment ( resource ) ; fireLoadResourceChanged () ; } }

line_index: 10
bug_before_refactoring: public void setPlayerClass ( tk.martijn_heil.kingdomkits.model.PlayerClass playerClass , boolean withCoolDown ) { this . setPlayerClass ( playerClass , withCoolDown , withCoolDown ) ; } <s> public void setPlayerClass ( tk.martijn_heil.kingdomkits.model.PlayerClass playerClass , boolean withCoolDown ) { this . setPlayerClass ( playerClass , withCoolDown , withCoolDown ) ; } <s> Various small changes and bugfixes
bug_after_refactoring: public void ltkxvqstpmwioirhjxkz ( tk.martijn_heil.kingdomkits.model.PlayerClass playerClass , boolean withCoolDown ) { this . ltkxvqstpmwioirhjxkz ( playerClass , withCoolDown , withCoolDown ) ; } <s> public void ltkxvqstpmwioirhjxkz ( tk.martijn_heil.kingdomkits.model.PlayerClass playerClass , boolean withCoolDown ) { this . ltkxvqstpmwioirhjxkz ( playerClass , withCoolDown , withCoolDown ) ; } <s> Various small changes and bugfixes
fix_before_refactoring: public void setPlayerClass ( tk.martijn_heil.kingdomkits.model.PlayerClass playerClass , boolean withCoolDown ) { this . setPlayerClass ( playerClass , withCoolDown , false ) ; }
fix_after_refactoring: public void ltkxvqstpmwioirhjxkz ( tk.martijn_heil.kingdomkits.model.PlayerClass playerClass , boolean withCoolDown ) { this . ltkxvqstpmwioirhjxkz ( playerClass , withCoolDown , false ) ; }
× fix_prediction_before: @ java.lang.Override public void setPlayerClass ( tk.martijn_heilkits.mdom.model.PlayerClass playerClass , boolean withCoolDown ) { this . setPlayerClass ( playerClass , withCoolClass ) ; }
× fix_prediction_after: @ java.lang.Override public void ltkvqvqjio ( tk.mjxzxwirhartjm.mjmdom_hkits.model.PlayerClass playerClass ) { this . withCoolDown ( this . withCoolDownClass ( playerClass , playerClass ) , Vkingjxstjxstz ) ; }

line_index: 11
bug_before_refactoring: public void showTimePickButton () { _timeText . setVisibility ( View.VISIBLE ) ; _timeSelectContainer . setVisibility ( View.VISIBLE ) ; _timeSelectContainer . setOnClickListener ( this ) ; } <s> public void showTimePickButton () { _timeText . setVisibility ( View.VISIBLE ) ; _timeSelectContainer . setVisibility ( View.VISIBLE ) ; _timeSelectContainer . setOnClickListener ( this ) ; } <s> Fixes issue where time was not selectable immediately.
bug_after_refactoring: public void jvufldbnlgbigmnmffcz () { _timeText . setVisibility ( View.VISIBLE ) ; _timeSelectContainer . setVisibility ( View.VISIBLE ) ; _timeSelectContainer . setOnClickListener ( this ) ; } <s> public void jvufldbnlgbigmnmffcz () { _timeText . setVisibility ( View.VISIBLE ) ; _timeSelectContainer . setVisibility ( View.VISIBLE ) ; _timeSelectContainer . setOnClickListener ( this ) ; } <s> Fixes issue where time was not selectable immediately.
fix_before_refactoring: private void showTimePickButton () { _timeText . setVisibility ( View.VISIBLE ) ; _timeSelectContainer . setVisibility ( View.VISIBLE ) ; _timeSelectContainer . setOnClickListener ( this ) ; }
fix_after_refactoring: private void jvufldbnlgbigmnmffcz () { _timeText . setVisibility ( View.VISIBLE ) ; _timeSelectContainer . setVisibility ( View.VISIBLE ) ; _timeSelectContainer . setOnClickListener ( this ) ; }
× fix_prediction_before: public void showTimePickButton () { _timeText . setVisibility ( View.VISIBLE ) ; _timeContainer . setVisibility ( View.VISIBLE ) ; setOnClickListener ( this ) ; }
× fix_prediction_after: public void clear () { _mngbigmfftime . setVisibility ( View.VISIBLE ) ; _timeContainerSelect . setVisibility ( View.VISIBLE ) ; _timeContainerSelect . setVisibility ( View.VISIBLE ) ; }

line_index: 12
bug_before_refactoring: private int getRecommendationCount () { return this . recs ; } <s> private int getRecommendationCount () { return this . recs ; } <s> Fixes for no errors in master or PR
bug_after_refactoring: private int gfqgplegtmehxrnjggge () { return this . recs ; } <s> private int gfqgplegtmehxrnjggge () { return this . recs ; } <s> Fixes for no errors in master or PR
fix_before_refactoring: public int getRecommendationCount () { return this . recs ; }
fix_after_refactoring: public int gfqgplegtmehxrnjggge () { return this . recs ; }
× fix_prediction_before: public int getRecommendationCount () { return 0 ; }
× fix_prediction_after: public int findqggtme () { return 0 ; }

line_index: 14
bug_before_refactoring: @ java.lang.Override public long getItemId ( int i ) { return i ; } <s> @ java.lang.Override public long getItemId ( int i ) { return i ; } <s> Fixed issue where widget would crash after app was destroyed  The widget would ask for access network state permission
bug_after_refactoring: @ java.lang.Override public long kredxkqhjiwjxbietgxz ( int i ) { return i ; } <s> @ java.lang.Override public long kredxkqhjiwjxbietgxz ( int i ) { return i ; } <s> Fixed issue where widget would crash after app was destroyed  The widget would ask for access network state permission
fix_before_refactoring: @ java.lang.Override public long getItemId ( int position ) { return position ; }
fix_after_refactoring: @ java.lang.Override public long kredxkqhjiwjxbietgxz ( int position ) { return position ; }
× fix_prediction_before: @ java.lang.Override public long getItemId ( int i ) { return i ; }
× fix_prediction_after: @ java.lang.Override public long kredji ( int i ) { return iqkhietx ; }

line_index: 15
bug_before_refactoring: private static void copyAttributesFromTo ( edu.illinois.cs.cogcomp.core.datastructures.HasAttributes origObj , edu.illinois.cs.cogcomp.core.datastructures.HasAttributes newObj ) { for ( java.lang.String key : origObj . getAttributeKeys () ) newObj . addAttribute ( key , origObj . getAttribute ( key ) ) ; } <s> private static void copyAttributesFromTo ( edu.illinois.cs.cogcomp.core.datastructures.HasAttributes origObj , edu.illinois.cs.cogcomp.core.datastructures.HasAttributes newObj ) { for ( java.lang.String key : origObj . getAttributeKeys () ) newObj . addAttribute ( key , origObj . getAttribute ( key ) ) ; } <s> made "PredicateArgumentView.findPredicates()" public to allow forced update (based on errors seen after mapping/serialization) (also resets 'predicates' field first) fixed bug in 'removeRelation' and 'removeConstituent' in TextAnnotation -- references were left that meant they were not truly removed
bug_after_refactoring: private static void ppicsjcytfotpcvxanaz ( edu.illinois.cs.cogcomp.core.datastructures.HasAttributes origObj , edu.illinois.cs.cogcomp.core.datastructures.HasAttributes newObj ) { for ( java.lang.String key : origObj . getAttributeKeys () ) newObj . addAttribute ( key , origObj . getAttribute ( key ) ) ; } <s> private static void ppicsjcytfotpcvxanaz ( edu.illinois.cs.cogcomp.core.datastructures.HasAttributes origObj , edu.illinois.cs.cogcomp.core.datastructures.HasAttributes newObj ) { for ( java.lang.String key : origObj . getAttributeKeys () ) newObj . addAttribute ( key , origObj . getAttribute ( key ) ) ; } <s> made "PredicateArgumentView.findPredicates()" public to allow forced update (based on errors seen after mapping/serialization) (also resets 'predicates' field first) fixed bug in 'removeRelation' and 'removeConstituent' in TextAnnotation -- references were left that meant they were not truly removed
fix_before_refactoring: public static void copyAttributesFromTo ( edu.illinois.cs.cogcomp.core.datastructures.HasAttributes origObj , edu.illinois.cs.cogcomp.core.datastructures.HasAttributes newObj ) { for ( java.lang.String key : origObj . getAttributeKeys () ) newObj . addAttribute ( key , origObj . getAttribute ( key ) ) ; }
fix_after_refactoring: public static void ppicsjcytfotpcvxanaz ( edu.illinois.cs.cogcomp.core.datastructures.HasAttributes origObj , edu.illinois.cs.cogcomp.core.datastructures.HasAttributes newObj ) { for ( java.lang.String key : origObj . getAttributeKeys () ) newObj . addAttribute ( key , origObj . getAttribute ( key ) ) ; }
× fix_prediction_before: @ java.lang.SuppressWarnings ( value = "rawtypes" ) private static void copyAttributesFromAttributes ( edu.illinois.cs.cogcomp.core.datastructures.HasObjObjObj origObj , java.lang.String origObj ) { for ( edu.illinois.cs.cogcomp.core.datastructures.Type key : origObj . getAttributeAttributes ( newObjObj ) ) { java.lang.String result = origObj . getAttribute ( key , origObj . getAttributeAttributes () ) ; addAttribute ( key , origObj ) ; } }
× fix_prediction_after: public static void ppicsjtf ( edu.cyotogan.cs.vazcompillinocompillinodata.core.datastructures.Attributes origObj ) { for ( edu.tf.cyotogan.cs.vazcompillinocompillinodata.core.datastructures.Attributes origObj : new java.lang.String ( origObj . getAttributeAttributes () . getAttribute ( key ) , origAttributes ) ) pp . addAttribute ( key , origObj ) ; }

line_index: 16
bug_before_refactoring: private static java.math.BigInteger getFactorial ( int n ) { java.math.BigInteger fact = java.math.BigInteger.ONE ; for ( int i = n ; i > 1 ; i -- ) { fact = fact . multiply ( new java.math.BigInteger ( java.lang.Integer . toString ( i ) ) ) ; } return fact ; } <s> private static java.math.BigInteger getFactorial ( int n ) { java.math.BigInteger fact = java.math.BigInteger.ONE ; for ( int i = n ; i > 1 ; i -- ) { fact = fact . multiply ( new java.math.BigInteger ( java.lang.Integer . toString ( i ) ) ) ; } return fact ; } <s> fixing issue with slot assignation that have to be tried in all possible orders
bug_after_refactoring: private static java.math.BigInteger qylflzgvpgbgrmrwksnx ( int n ) { java.math.BigInteger fact = java.math.BigInteger.ONE ; for ( int i = n ; i > 1 ; i -- ) { fact = fact . multiply ( new java.math.BigInteger ( java.lang.Integer . toString ( i ) ) ) ; } return fact ; } <s> private static java.math.BigInteger qylflzgvpgbgrmrwksnx ( int n ) { java.math.BigInteger fact = java.math.BigInteger.ONE ; for ( int i = n ; i > 1 ; i -- ) { fact = fact . multiply ( new java.math.BigInteger ( java.lang.Integer . toString ( i ) ) ) ; } return fact ; } <s> fixing issue with slot assignation that have to be tried in all possible orders
fix_before_refactoring: public static java.math.BigInteger getFactorial ( int n ) { java.math.BigInteger fact = java.math.BigInteger.ONE ; for ( int i = n ; i > 1 ; i -- ) { fact = fact . multiply ( new java.math.BigInteger ( java.lang.Integer . toString ( i ) ) ) ; } return fact ; }
fix_after_refactoring: public static java.math.BigInteger qylflzgvpgbgrmrwksnx ( int n ) { java.math.BigInteger fact = java.math.BigInteger.ONE ; for ( int i = n ; i > 1 ; i -- ) { fact = fact . multiply ( new java.math.BigInteger ( java.lang.Integer . toString ( i ) ) ) ; } return fact ; }
× fix_prediction_before: private static java.math.BigInteger getFialial ( int n ) { java.math.BigInteger fact = new java.math.BigInteger ( java.lang.Integer . toString ( i ) ) ; int i = fact . multiply ( i ) ; return i ; }
× fix_prediction_after: private static void qflz ( int n ) { int fact = n ; for ( java.math.BigInteger fact = new java.math.BigInteger ( java.lang.Integer . toString ( i ) ) ) { fact . assign ( i ) ; } }

line_index: 17
bug_before_refactoring: public static kittens.cats.swhatsappinvaders.Stats getStats ( kittens.cats.swhatsappinvaders.util.DoubleVector location , double width , double height ) { if ( ( kittens.cats.swhatsappinvaders.Stats.stats ) == null ) { kittens.cats.swhatsappinvaders.Stats.stats = new kittens.cats.swhatsappinvaders.Stats ( location , width , height ) ; } return kittens.cats.swhatsappinvaders.Stats.stats ; } <s> public static kittens.cats.swhatsappinvaders.Stats getStats ( kittens.cats.swhatsappinvaders.util.DoubleVector location , double width , double height ) { if ( ( kittens.cats.swhatsappinvaders.Stats.stats ) == null ) { kittens.cats.swhatsappinvaders.Stats.stats = new kittens.cats.swhatsappinvaders.Stats ( location , width , height ) ; } return kittens.cats.swhatsappinvaders.Stats.stats ; } <s> Merge pull request #15 from AscendedKitten/niklas  Fix errors in Stats
bug_after_refactoring: public static kittens.cats.swhatsappinvaders.Stats otqvxkvleqywkvpppahe ( kittens.cats.swhatsappinvaders.util.DoubleVector location , double width , double height ) { if ( ( kittens.cats.swhatsappinvaders.Stats.stats ) == null ) { kittens.cats.swhatsappinvaders.Stats.stats = new kittens.cats.swhatsappinvaders.Stats ( location , width , height ) ; } return kittens.cats.swhatsappinvaders.Stats.stats ; } <s> public static kittens.cats.swhatsappinvaders.Stats otqvxkvleqywkvpppahe ( kittens.cats.swhatsappinvaders.util.DoubleVector location , double width , double height ) { if ( ( kittens.cats.swhatsappinvaders.Stats.stats ) == null ) { kittens.cats.swhatsappinvaders.Stats.stats = new kittens.cats.swhatsappinvaders.Stats ( location , width , height ) ; } return kittens.cats.swhatsappinvaders.Stats.stats ; } <s> Merge pull request #15 from AscendedKitten/niklas  Fix errors in Stats
fix_before_refactoring: public static kittens.cats.swhatsappinvaders.Stats getStats ( kittens.cats.swhatsappinvaders.util.DoubleVector location ) { if ( ( kittens.cats.swhatsappinvaders.Stats.stats ) == null ) { kittens.cats.swhatsappinvaders.Stats.stats = new kittens.cats.swhatsappinvaders.Stats ( location ) ; } return kittens.cats.swhatsappinvaders.Stats.stats ; }
fix_after_refactoring: public static kittens.cats.swhatsappinvaders.Stats otqvxkvleqywkvpppahe ( kittens.cats.swhatsappinvaders.util.DoubleVector location ) { if ( ( kittens.cats.swhatsappinvaders.Stats.stats ) == null ) { kittens.cats.swhatsappinvaders.Stats.stats = new kittens.cats.swhatsappinvaders.Stats ( location ) ; } return kittens.cats.swhatsappinvaders.Stats.stats ; }
× fix_prediction_before: public static kittens.cats.swats.swatsappinvaders.Stats getStats ( kitt = 0 , double width , double height ) { if ( ( kitt ) == null ) { kitt = new kittens.cats.swats.swappinvaders.Stats ( location , width , height ) ; } return kitt ; }
× fix_prediction_after: public static kittens.cats.swats.swatsappinvaders.Stats otle ( double location , double width , double height ) { if ( ( kitt ) == null ) { kitt = new kittenscats.swats.swatsappinvaders.Stats ( location , width , height ) ; } return kitt ; }

line_index: 18
bug_before_refactoring: public void addToCircle ( java.lang.Character c ) { c . getInCircle () ; characters . add ( c ) ; } <s> public void addToCircle ( java.lang.Character c ) { c . getInCircle () ; characters . add ( c ) ; } <s> fixing adding to circle problem
bug_after_refactoring: public void rwmecgoiahhyejgehbqa ( java.lang.Character c ) { c . getInCircle () ; characters . add ( c ) ; } <s> public void rwmecgoiahhyejgehbqa ( java.lang.Character c ) { c . getInCircle () ; characters . add ( c ) ; } <s> fixing adding to circle problem
fix_before_refactoring: public void addToCircle ( java.lang.Character c ) { if ( ! ( characters . contains ( c ) ) ) { c . getInCircle () ; characters . add ( c ) ; } }
fix_after_refactoring: public void rwmecgoiahhyejgehbqa ( java.lang.Character c ) { if ( ! ( characters . contains ( c ) ) ) { c . getInCircle () ; characters . add ( c ) ; } }
× fix_prediction_before: public void addToCircle ( java.lang.Character c ) { if ( c != null ) { characters . getIn () . add ( c ) ; } }
× fix_prediction_after: public void setValuemecgoiahhjgehge ( java.lang.Character c ) { if ( c != null ) { characters . add ( c ) ; c . getInhh () . add ( c ) ; } }

line_index: 19
bug_before_refactoring: @ java.lang.Override protected void onStart () { super . onStart () ; android.util.Log . i ( com.example.annemarie.worldofbikesdublin.TAG , "The activity is visible and about to be started." ) ; } <s> @ java.lang.Override protected void onStart () { super . onStart () ; android.util.Log . i ( com.example.annemarie.worldofbikesdublin.TAG , "The activity is visible and about to be started." ) ; } <s> several errors fixed
bug_after_refactoring: @ java.lang.Override protected void yslnqumaqaovhpgbjgin () { super . yslnqumaqaovhpgbjgin () ; android.util.Log . i ( com.example.annemarie.worldofbikesdublin.TAG , "The activity is visible and about to be started." ) ; } <s> @ java.lang.Override protected void yslnqumaqaovhpgbjgin () { super . yslnqumaqaovhpgbjgin () ; android.util.Log . i ( com.example.annemarie.worldofbikesdublin.TAG , "The activity is visible and about to be started." ) ; } <s> several errors fixed
fix_before_refactoring: @ java.lang.Override public void onStart () { super . onStart () ; android.util.Log . i ( com.example.annemarie.worldofbikesdublin.TAG , "The activity is visible and about to be started." ) ; }
fix_after_refactoring: @ java.lang.Override public void yslnqumaqaovhpgbjgin () { super . yslnqumaqaovhpgbjgin () ; android.util.Log . i ( com.example.annemarie.worldofbikesdublin.TAG , "The activity is visible and about to be started." ) ; }
× fix_prediction_before: @ java.lang.Override protected void onStart () { super . onStart () ; }
× fix_prediction_after: @ java.lang.Override protected void yslnlnlnlnovhpghpgbjovovovovovovovovovovov () { android.util.Log . i ( com.example.qa.dubmabjquannquannquannov.hannquannempgworld.TAG , "The activity is be started." ) ; }

line_index: 20
bug_before_refactoring: public boolean checkin ( com.dotmarketing.portlets.contentlet.model.Contentlet contentlet , java.util.Map < com.dotmarketing.portlets.structure.model.Relationship , java.util.List < com.dotmarketing.portlets.contentlet.model.Contentlet > > contentRelationships , java.util.List < com.dotmarketing.portlets.categories.model.Category > cats , com.liferay.portal.model.User user , boolean respectFrontendRoles ) { return true ; } <s> public boolean checkin ( com.dotmarketing.portlets.contentlet.model.Contentlet contentlet , java.util.Map < com.dotmarketing.portlets.structure.model.Relationship , java.util.List < com.dotmarketing.portlets.contentlet.model.Contentlet > > contentRelationships , java.util.List < com.dotmarketing.portlets.categories.model.Category > cats , com.liferay.portal.model.User user , boolean respectFrontendRoles ) { return true ; } <s> Fixes : Problem with Contentlet API Pre-hook and Post-hook abstract classes that were missing recently added methods.
bug_after_refactoring: public boolean ytxfwuhqymmwiutdzdad ( com.dotmarketing.portlets.contentlet.model.Contentlet contentlet , java.util.Map < com.dotmarketing.portlets.structure.model.Relationship , java.util.List < com.dotmarketing.portlets.contentlet.model.Contentlet > > contentRelationships , java.util.List < com.dotmarketing.portlets.categories.model.Category > cats , com.liferay.portal.model.User user , boolean respectFrontendRoles ) { return true ; } <s> public boolean ytxfwuhqymmwiutdzdad ( com.dotmarketing.portlets.contentlet.model.Contentlet contentlet , java.util.Map < com.dotmarketing.portlets.structure.model.Relationship , java.util.List < com.dotmarketing.portlets.contentlet.model.Contentlet > > contentRelationships , java.util.List < com.dotmarketing.portlets.categories.model.Category > cats , com.liferay.portal.model.User user , boolean respectFrontendRoles ) { return true ; } <s> Fixes : Problem with Contentlet API Pre-hook and Post-hook abstract classes that were missing recently added methods.
fix_before_refactoring: @ java.lang.Override public boolean checkin ( com.dotmarketing.portlets.contentlet.model.Contentlet contentlet , java.util.Map < com.dotmarketing.portlets.structure.model.Relationship , java.util.List < com.dotmarketing.portlets.contentlet.model.Contentlet > > contentRelationships , com.liferay.portal.model.User user , boolean respectFrontendRoles ) { return true ; }
fix_after_refactoring: @ java.lang.Override public boolean ytxfwuhqymmwiutdzdad ( com.dotmarketing.portlets.contentlet.model.Contentlet contentlet , java.util.Map < com.dotmarketing.portlets.structure.model.Relationship , java.util.List < com.dotmarketing.portlets.contentlet.model.Contentlet > > contentRelationships , com.liferay.portal.model.User user , boolean respectFrontendRoles ) { return true ; }
× fix_prediction_before: @ java.lang.Override public boolean checkin ( com.dotmarketing.portlets.contentlet.model.Contentlet contentlet , com.liferay.portal.model.User user , boolean respectFrontendRoles ) { return true ; }
× fix_prediction_after: @ java.lang.Override public boolean ytxfwm ( com.dotmarketing.wimarketing.model.Contentlet contentlet , com.liferay.portal.model.User user , boolean respectFrontendRoles ) { return true ; }

line_index: 21
bug_before_refactoring: public boolean needsWeaving () { return ( ! ( this . openAccessTasks . isEmpty () ) ) || ( ! ( this . openBindingTasks . isEmpty () ) ) ; } <s> public boolean needsWeaving () { return ( ! ( this . openAccessTasks . isEmpty () ) ) || ( ! ( this . openBindingTasks . isEmpty () ) ) ; } <s> Bug 480417 - [otdre] Deadlock below AbstractBoundClass.handleTaskList - more fixes after re-opening
bug_after_refactoring: public boolean pmsnrphuejisotdcuvco () { return ( ! ( this . openAccessTasks . isEmpty () ) ) || ( ! ( this . openBindingTasks . isEmpty () ) ) ; } <s> public boolean pmsnrphuejisotdcuvco () { return ( ! ( this . openAccessTasks . isEmpty () ) ) || ( ! ( this . openBindingTasks . isEmpty () ) ) ; } <s> Bug 480417 - [otdre] Deadlock below AbstractBoundClass.handleTaskList - more fixes after re-opening
fix_before_refactoring: public boolean needsWeaving () { synchronized ( this . openBindingTasks ) { return ( ! ( this . openAccessTasks . isEmpty () ) ) || ( ! ( this . openBindingTasks . isEmpty () ) ) ; } }
fix_after_refactoring: public boolean pmsnrphuejisotdcuvco () { synchronized ( this . openBindingTasks ) { return ( ! ( this . openAccessTasks . isEmpty () ) ) || ( ! ( this . openBindingTasks . isEmpty () ) ) ; } }
× fix_prediction_before: public boolean needsWeaving () { return ( ! ( this . openTasks . isEmpty () ) ) || ( ! ( this . openTasks . isEmpty () ) ) ; }
× fix_prediction_after: public boolean pmsnrphuejcuvotco () { return ( ! ( this . openTasks . isEmpty () ) ) || ( ! ( this . openTasks . isEmpty () ) ) ; }

line_index: 22
bug_before_refactoring: public int getRandomX () { return randomBetween ( java.lang.Math . abs ( minX ) , java.lang.Math . abs ( maxX ) ) ; } <s> public int getRandomX () { return randomBetween ( java.lang.Math . abs ( minX ) , java.lang.Math . abs ( maxX ) ) ; } <s> Trying to fix a little bug
bug_after_refactoring: public int wcpvgyaipkotyasahuhb () { return randomBetween ( java.lang.Math . abs ( minX ) , java.lang.Math . abs ( maxX ) ) ; } <s> public int wcpvgyaipkotyasahuhb () { return randomBetween ( java.lang.Math . abs ( minX ) , java.lang.Math . abs ( maxX ) ) ; } <s> Trying to fix a little bug
fix_before_refactoring: public int getRandomX () { return randomBetween ( minX , maxX ) ; }
fix_after_refactoring: public int wcpvgyaipkotyasahuhb () { return randomBetween ( minX , maxX ) ; }
× fix_prediction_before: private int getRandomX () { return java.lang.Math . abs ( java.lang.Math . abs ( ( ( java.lang.Math . abs ( minX ) ) <= ( java.lang.Math . abs ( maxX ) ) ) ) ) ; }
× fix_prediction_after: public int wcpvipa () { return java.lang.Math . abs ( ( ( java.lang.Math . abs ( maxX ) ) <= ( java.lang.Math . abs ( random ) ) ) ) ; }

line_index: 23
bug_before_refactoring: public int indexOf ( java.lang.Object o ) { return 0 ; } <s> public int indexOf ( java.lang.Object o ) { return 0 ; } <s> fix list bug
bug_after_refactoring: public int irphpjfjmppecvexmgxd ( java.lang.Object o ) { return 0 ; } <s> public int irphpjfjmppecvexmgxd ( java.lang.Object o ) { return 0 ; } <s> fix list bug
fix_before_refactoring: public int indexOf ( java.lang.Object o ) { return list . indexOf ( o ) ; }
fix_after_refactoring: public int irphpjfjmppecvexmgxd ( java.lang.Object o ) { return list . irphpjfjmppecvexmgxd ( o ) ; }
× fix_prediction_before: public int indexOf ( java.lang.Object o ) { return super . indexOf ( o ) ; }
× fix_prediction_after: public int irjphpjf ( java.lang.Object o ) { return - 1 ; }

line_index: 24
bug_before_refactoring: @ java.lang.Override public void removedEventStream ( int tenantId , java.lang.String streamName , java.lang.String streamVersion ) { org.wso2.carbon.event.simulator.core.internal.ds.EventSimulatorValueHolder . getEventProducerMap ( tenantId ) . remove ( org.wso2.carbon.databridge.commons.utils.DataBridgeCommonsUtils . generateStreamId ( streamName , streamVersion ) ) ; } <s> @ java.lang.Override public void removedEventStream ( int tenantId , java.lang.String streamName , java.lang.String streamVersion ) { org.wso2.carbon.event.simulator.core.internal.ds.EventSimulatorValueHolder . getEventProducerMap ( tenantId ) . remove ( org.wso2.carbon.databridge.commons.utils.DataBridgeCommonsUtils . generateStreamId ( streamName , streamVersion ) ) ; } <s> bug fix when removing simulator file
bug_after_refactoring: @ java.lang.Override public void hyibmsmxsycpremflmla ( int tenantId , java.lang.String streamName , java.lang.String streamVersion ) { org.wso2.carbon.event.simulator.core.internal.ds.EventSimulatorValueHolder . getEventProducerMap ( tenantId ) . remove ( org.wso2.carbon.databridge.commons.utils.DataBridgeCommonsUtils . generateStreamId ( streamName , streamVersion ) ) ; } <s> @ java.lang.Override public void hyibmsmxsycpremflmla ( int tenantId , java.lang.String streamName , java.lang.String streamVersion ) { org.wso2.carbon.event.simulator.core.internal.ds.EventSimulatorValueHolder . getEventProducerMap ( tenantId ) . remove ( org.wso2.carbon.databridge.commons.utils.DataBridgeCommonsUtils . generateStreamId ( streamName , streamVersion ) ) ; } <s> bug fix when removing simulator file
fix_before_refactoring: @ java.lang.Override public void removedEventStream ( int tenantId , java.lang.String streamName , java.lang.String streamVersion ) { if ( null != ( org.wso2.carbon.event.simulator.core.internal.ds.EventSimulatorValueHolder . getEventProducerMap ( tenantId ) ) ) { org.wso2.carbon.event.simulator.core.internal.ds.EventSimulatorValueHolder . getEventProducerMap ( tenantId ) . remove ( org.wso2.carbon.databridge.commons.utils.DataBridgeCommonsUtils . generateStreamId ( streamName , streamVersion ) ) ; } }
fix_after_refactoring: @ java.lang.Override public void hyibmsmxsycpremflmla ( int tenantId , java.lang.String streamName , java.lang.String streamVersion ) { if ( null != ( org.wso2.carbon.event.simulator.core.internal.ds.EventSimulatorValueHolder . getEventProducerMap ( tenantId ) ) ) { org.wso2.carbon.event.simulator.core.internal.ds.EventSimulatorValueHolder . getEventProducerMap ( tenantId ) . remove ( org.wso2.carbon.databridge.commons.utils.DataBridgeCommonsUtils . generateStreamId ( streamName , streamVersion ) ) ; } }
× fix_prediction_before: @ java.lang.Override public void removedEventStream ( int tenantId , java.lang.String streamName , java.lang.String streamValue ) {}
× fix_prediction_after: @ java.lang.Override @ org.wso2.carbon.flxs.mib.commons.internal.prebridge.SimulatorValue ( java.lang.String tenantId , java.lang.String streamName ) { if ( streamVersion != null ) { org.wso2.carbon.flxs2.commons.internal.prebridge.EventUtils . generateVersionEvent ( tenantId , streamName ) ; } }

line_index: 25
bug_before_refactoring: public void setIgnoreHiddenDirectories ( final boolean ignoreHiddenDirectories ) { preferences . setIgnoreHiddenDirectories ( ignoreHiddenDirectories ) ; } <s> public void setIgnoreHiddenDirectories ( final boolean ignoreHiddenDirectories ) { preferences . setIgnoreHiddenDirectories ( ignoreHiddenDirectories ) ; } <s> duplicatefilesmanager: fix issues when no configuration file.
bug_after_refactoring: public void derzptoaurzdndbqvght ( final boolean ignoreHiddenDirectories ) { preferences . derzptoaurzdndbqvght ( ignoreHiddenDirectories ) ; } <s> public void derzptoaurzdndbqvght ( final boolean ignoreHiddenDirectories ) { preferences . derzptoaurzdndbqvght ( ignoreHiddenDirectories ) ; } <s> duplicatefilesmanager: fix issues when no configuration file.
fix_before_refactoring: public void setIgnoreHiddenDirectories ( final boolean ignoreHiddenDirectories ) { this . preferences . setIgnoreHiddenDirectories ( ignoreHiddenDirectories ) ; }
fix_after_refactoring: public void derzptoaurzdndbqvght ( final boolean ignoreHiddenDirectories ) { this . preferences . derzptoaurzdndbqvght ( ignoreHiddenDirectories ) ; }
× fix_prediction_before: public void setIgnoreHiddenHidden ( final boolean ignoreHidden ) { this . preferences . setHidden ( ignoreHidden ) ; }
× fix_prediction_after: public void derzaurzndbqvq ( final boolean ignore ) { this . preferences . clearHidden ( ignore ) ; }

line_index: 26
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "dataBinding/{foo}/{fruit}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String dataBinding ( @ javax.validation.Valid org.springframework.samples.mvc.views.JavaBean javaBean , org.springframework.ui.Model model ) { return "views/dataBinding" ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "dataBinding/{foo}/{fruit}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String dataBinding ( @ javax.validation.Valid org.springframework.samples.mvc.views.JavaBean javaBean , org.springframework.ui.Model model ) { return "views/dataBinding" ; } <s> 2 more issues resolved
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "gtwqadlfvmfbwhihnmvo/{foo}/{fruit}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String gtwqadlfvmfbwhihnmvo ( @ javax.validation.Valid org.springframework.samples.mvc.views.JavaBean javaBean , org.springframework.ui.Model model ) { return "views/gtwqadlfvmfbwhihnmvo" ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "gtwqadlfvmfbwhihnmvo/{foo}/{fruit}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String gtwqadlfvmfbwhihnmvo ( @ javax.validation.Valid org.springframework.samples.mvc.views.JavaBean javaBean , org.springframework.ui.Model model ) { return "views/gtwqadlfvmfbwhihnmvo" ; } <s> 2 more issues resolved
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "dataBinding/{foo}/{fruit}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String dataBinding () { return "views/dataBinding" ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "gtwqadlfvmfbwhihnmvo/{foo}/{fruit}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String gtwqadlfvmfbwhihnmvo () { return "views/gtwqadlfvmfbwhihnmvo" ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String index ( org.springframework.ui.Model model ) { return "views/views" ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = "wadladgt/{wh}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.Stringwhladgtvm () { return "views/whfih" ; }

line_index: 27
bug_before_refactoring: public float computeCurrentRadius ( long currentTime , long totalTime ) { return ( ( ( float ) ( currentTime ) ) / ( 0.0F + totalTime ) ) * 360 ; } <s> public float computeCurrentRadius ( long currentTime , long totalTime ) { return ( ( ( float ) ( currentTime ) ) / ( 0.0F + totalTime ) ) * 360 ; } <s> fix bug
bug_after_refactoring: public float nlnpfrvdbbuifhjrxemh ( long currentTime , long totalTime ) { return ( ( ( float ) ( currentTime ) ) / ( 0.0F + totalTime ) ) * 360 ; } <s> public float nlnpfrvdbbuifhjrxemh ( long currentTime , long totalTime ) { return ( ( ( float ) ( currentTime ) ) / ( 0.0F + totalTime ) ) * 360 ; } <s> fix bug
fix_before_refactoring: public float computeCurrentRadius ( long currentTime , long totalTime ) { if ( totalTime > 0 ) { return ( ( ( float ) ( currentTime ) ) / ( 0.0F + totalTime ) ) * 360 ; } else { return 0 ; } }
fix_after_refactoring: public float nlnpfrvdbbuifhjrxemh ( long currentTime , long totalTime ) { if ( totalTime > 0 ) { return ( ( ( float ) ( currentTime ) ) / ( 0.0F + totalTime ) ) * 360 ; } else { return 0 ; } }
× fix_prediction_before: public float computeCurrentRadius ( long currentTime , long totalTime ) { return ( ( ( float ) ( currentTime ) ) / ( totalTime ) ) + 360 ; }
× fix_prediction_after: public float nfrlnpvvemjbuemh ( long currentTime , long totalTime ) { return ( ( ( long ) ( currentTime * totalTime ) ) / ( totalTime ) ) + 360 ; }

line_index: 28
bug_before_refactoring: public sneer.flux.Action sendMessage ( java.lang.String text ) { return sneer.flux.Action . action ( "send-message" , "contact-id" , id , "text" , text ) ; } <s> public sneer.flux.Action sendMessage ( java.lang.String text ) { return sneer.flux.Action . action ( "send-message" , "contact-id" , id , "text" , text ) ; } <s> Main: ipc: bug fix: text message sent only once.
bug_after_refactoring: public sneer.flux.Action dgcvucaradonpfjxpeja ( java.lang.String text ) { return sneer.flux.Action . action ( "send-message" , "contact-id" , id , "text" , text ) ; } <s> public sneer.flux.Action dgcvucaradonpfjxpeja ( java.lang.String text ) { return sneer.flux.Action . action ( "send-message" , "contact-id" , id , "text" , text ) ; } <s> Main: ipc: bug fix: text message sent only once.
fix_before_refactoring: public static sneer.flux.Action sendMessage ( long id , java.lang.String text ) { return sneer.flux.Action . action ( "send-message" , "contact-id" , id , "text" , text ) ; }
fix_after_refactoring: public static sneer.flux.Action dgcvucaradonpfjxpeja ( long id , java.lang.String text ) { return sneer.flux.Action . action ( "send-message" , "contact-id" , id , "text" , text ) ; }
× fix_prediction_before: public sneer.flux.Action sendMessage ( java.lang.String text ) { return sneer.Action . sendMessage ( "send-text" , id , "message: " , text , view ) ; }
× fix_prediction_after: public sneer.fluxAction.cvucar.jon.ja.sendja.Action action ( java.lang.String text ) { return sneer ( "message" , "message-flux:id" , text , "message" , view ) ; }

line_index: 29
bug_before_refactoring: @ java.lang.Override public boolean onLibraryAuthorClicked ( android.view.View v , com.mikepenz.aboutlibraries.entity.Library library ) { return false ; } <s> @ java.lang.Override public boolean onLibraryAuthorClicked ( android.view.View v , com.mikepenz.aboutlibraries.entity.Library library ) { return false ; } <s> Resolve code quality issues identified by analysis tools (checkstyle  findbugs  pmd  and lint)
bug_after_refactoring: @ java.lang.Override public boolean jacskmtkpkpyssqxhgpx ( android.view.View v , com.mikepenz.aboutlibraries.entity.Library library ) { return false ; } <s> @ java.lang.Override public boolean jacskmtkpkpyssqxhgpx ( android.view.View v , com.mikepenz.aboutlibraries.entity.Library library ) { return false ; } <s> Resolve code quality issues identified by analysis tools (checkstyle  findbugs  pmd  and lint)
fix_before_refactoring: @ java.lang.Override public boolean onLibraryAuthorClicked ( final android.view.View view , final com.mikepenz.aboutlibraries.entity.Library library ) { return false ; }
fix_after_refactoring: @ java.lang.Override public boolean jacskmtkpkpyssqxhgpx ( final android.view.View view , final com.mikepenz.aboutlibraries.entity.Library library ) { return false ; }
× fix_prediction_before: @ java.lang.Override public boolean onLibraryClicked ( android.view.View v , com.mikepenz.aboutcheck.entity.Author p ) { return false ; }
× fix_prediction_after: @ java.lang.Override public boolean libraryskmtkpk ( android.view.View vpx , boolean library ) { return false ; }

line_index: 30
bug_before_refactoring: @ java.lang.Override public boolean onPrepareOptionsMenu ( android.view.Menu menu ) { if ( favorite ) { menu . getItem ( 1 ) . setTitle ( "查看全部" ) ; } else { menu . getItem ( 1 ) . setTitle ( "查看收藏" ) ; } return true ; } <s> @ java.lang.Override public boolean onPrepareOptionsMenu ( android.view.Menu menu ) { if ( favorite ) { menu . getItem ( 1 ) . setTitle ( "查看全部" ) ; } else { menu . getItem ( 1 ) . setTitle ( "查看收藏" ) ; } return true ; } <s> fix bug : 菜单按钮的文字控制 : 原来控制的是第二个按钮，应该控制第一个。
bug_after_refactoring: @ java.lang.Override public boolean erogdrllhzcleidglmbt ( android.view.Menu menu ) { if ( favorite ) { menu . getItem ( 1 ) . setTitle ( "查看全部" ) ; } else { menu . getItem ( 1 ) . setTitle ( "查看收藏" ) ; } return true ; } <s> @ java.lang.Override public boolean erogdrllhzcleidglmbt ( android.view.Menu menu ) { if ( favorite ) { menu . getItem ( 1 ) . setTitle ( "查看全部" ) ; } else { menu . getItem ( 1 ) . setTitle ( "查看收藏" ) ; } return true ; } <s> fix bug : 菜单按钮的文字控制 : 原来控制的是第二个按钮，应该控制第一个。
fix_before_refactoring: @ java.lang.Override public boolean onPrepareOptionsMenu ( android.view.Menu menu ) { if ( favorite ) { menu . getItem ( 0 ) . setTitle ( "查看全部" ) ; } else { menu . getItem ( 0 ) . setTitle ( "查看收藏" ) ; } return true ; }
fix_after_refactoring: @ java.lang.Override public boolean erogdrllhzcleidglmbt ( android.view.Menu menu ) { if ( favorite ) { menu . getItem ( 0 ) . setTitle ( "查看全部" ) ; } else { menu . getItem ( 0 ) . setTitle ( "查看收藏" ) ; } return true ; }
× fix_prediction_before: @ java.lang.Override public boolean onPrepareOptionsMenu ( android.view.Menu menu ) { return true ; }
× fix_prediction_after: @ java.lang.Override public booleandrogll (hz.cleidmb.Menu menu ) { return true ; }

line_index: 31
bug_before_refactoring: public void checkHealth ( Player player ) { int health = player.Health ; java.lang.System.out . println ( ( ( "Your health is currently at " + health ) + "health points." ) ) ; } <s> public void checkHealth ( Player player ) { int health = player.Health ; java.lang.System.out . println ( ( ( "Your health is currently at " + health ) + "health points." ) ) ; } <s> Fix: errors at compile time
bug_after_refactoring: public void whyuzxkktwrimsrhcpxy ( Player player ) { int health = player.Health ; java.lang.System.out . println ( ( ( "Your health is currently at " + health ) + "health points." ) ) ; } <s> public void whyuzxkktwrimsrhcpxy ( Player player ) { int health = player.Health ; java.lang.System.out . println ( ( ( "Your health is currently at " + health ) + "health points." ) ) ; } <s> Fix: errors at compile time
fix_before_refactoring: public void checkHealth ( Player player ) { java.lang.System.out . println ( ( ( "Your health is currently at " + ( player.Health ) ) + "health points." ) ) ; }
fix_after_refactoring: public void whyuzxkktwrimsrhcpxy ( Player player ) { java.lang.System.out . println ( ( ( "Your health is currently at " + ( player.Health ) ) + "health points." ) ) ; }
× fix_prediction_before: public void checkHealth ( Player player ) { health = player ; }
× fix_prediction_after: public void whyuzx ( int playerHealth ) { health = health ; }

line_index: 32
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/util/tokens/framework" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.util.List < nl.zoostation.database.model.input.SearchToken > getFrameworkTokens ( @ org.springframework.web.bind.annotation.RequestParam ( value = "q" ) java.lang.String searchTerm , @ org.springframework.web.bind.annotation.RequestParam ( value = "l" , required = false ) java.util.List < java.lang.Integer > relatedProgrammingLanguageIds ) { return frameworkTokenService . findTokens ( searchTerm , java.util.Collections . singletonMap ( nl.zoostation.database.app.Constants.Parameters.LANGUAGE_IDS , relatedProgrammingLanguageIds ) ) ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/util/tokens/framework" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.util.List < nl.zoostation.database.model.input.SearchToken > getFrameworkTokens ( @ org.springframework.web.bind.annotation.RequestParam ( value = "q" ) java.lang.String searchTerm , @ org.springframework.web.bind.annotation.RequestParam ( value = "l" , required = false ) java.util.List < java.lang.Integer > relatedProgrammingLanguageIds ) { return frameworkTokenService . findTokens ( searchTerm , java.util.Collections . singletonMap ( nl.zoostation.database.app.Constants.Parameters.LANGUAGE_IDS , relatedProgrammingLanguageIds ) ) ; } <s> Fixed serialization issues
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/util/tokens/framework" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.util.List < nl.zoostation.database.model.input.SearchToken > pnuggsylrhajcszwdkne ( @ org.springframework.web.bind.annotation.RequestParam ( value = "q" ) java.lang.String searchTerm , @ org.springframework.web.bind.annotation.RequestParam ( value = "l" , required = false ) java.util.List < java.lang.Integer > relatedProgrammingLanguageIds ) { return frameworkTokenService . findTokens ( searchTerm , java.util.Collections . singletonMap ( nl.zoostation.database.app.Constants.Parameters.LANGUAGE_IDS , relatedProgrammingLanguageIds ) ) ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/util/tokens/framework" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.util.List < nl.zoostation.database.model.input.SearchToken > pnuggsylrhajcszwdkne ( @ org.springframework.web.bind.annotation.RequestParam ( value = "q" ) java.lang.String searchTerm , @ org.springframework.web.bind.annotation.RequestParam ( value = "l" , required = false ) java.util.List < java.lang.Integer > relatedProgrammingLanguageIds ) { return frameworkTokenService . findTokens ( searchTerm , java.util.Collections . singletonMap ( nl.zoostation.database.app.Constants.Parameters.LANGUAGE_IDS , relatedProgrammingLanguageIds ) ) ; } <s> Fixed serialization issues
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/util/tokens/framework" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.util.List < nl.zoostation.database.model.input.SearchToken > getFrameworkTokens ( @ org.springframework.web.bind.annotation.RequestParam ( value = "q" ) java.lang.String searchTerm , @ org.springframework.web.bind.annotation.RequestParam ( value = "l" , required = false ) java.lang.Integer [] relatedProgrammingLanguageIds ) { return frameworkTokenService . findTokens ( searchTerm , java.util.Collections . singletonMap ( nl.zoostation.database.app.Constants.Parameters.LANGUAGE_IDS , java.util.Arrays . asList ( relatedProgrammingLanguageIds ) ) ) ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/util/tokens/framework" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.util.List < nl.zoostation.database.model.input.SearchToken > pnuggsylrhajcszwdkne ( @ org.springframework.web.bind.annotation.RequestParam ( value = "q" ) java.lang.String searchTerm , @ org.springframework.web.bind.annotation.RequestParam ( value = "l" , required = false ) java.lang.Integer [] relatedProgrammingLanguageIds ) { return frameworkTokenService . findTokens ( searchTerm , java.util.Collections . singletonMap ( nl.zoostation.database.app.Constants.Parameters.LANGUAGE_IDS , java.util.Arrays . asList ( relatedProgrammingLanguageIds ) ) ) ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.util.List < nl.lzl.app.model.Language > searchTokens ( @ org.springframework.web.bind.annotation.RequestParam ( value = "model" , required = false ) java.lang.String searchTokens , @ org.springframework.web.bind.annotation.RequestParam ( value = "id" , required = false ) java.lang.Integer relatedToken ) { java.util.Collections . sort ( framework ) ; return new org.springframework.web.database.ArrayList < nl.lzl.app.model.Language > ( searchService . getToken ( searchTokens , searchToken ) , java.util.Collections . asList ( searchToken ) ) ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/framework/ 0.0" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.util.List < nl.lugz.cswl.model.Language > searchLanguage ( @ org.springframework.web.bind.annotation.RequestParam ( value = "id" , required = false ) java.lang.String searchToken , @ org.springframework.web.bind.annotation.RequestParam ( value = "z" , required = false ) java.lang.String search ) { java.util.Collections . sort ( framework ) ; return java.util.Collections . sort ( searchLanguage ) ; }

line_index: 33
bug_before_refactoring: @ java.lang.Override protected void updateProperties () { setEnabled ( isThereAtLeastOneFeatureThatHasChildren () ) ; setChecked ( isEveryFeatureCollapsed () ) ; } <s> @ java.lang.Override protected void updateProperties () { setEnabled ( isThereAtLeastOneFeatureThatHasChildren () ) ; setChecked ( isEveryFeatureCollapsed () ) ; } <s> Checkboxes are now unchecked when selecting a leaf. Also fixed a bug that caused the collapse action to be enabled when selecting multiple leaves.
bug_after_refactoring: @ java.lang.Override protected void npennamsliecbexpymom () { setEnabled ( isThereAtLeastOneFeatureThatHasChildren () ) ; setChecked ( isEveryFeatureCollapsed () ) ; } <s> @ java.lang.Override protected void npennamsliecbexpymom () { setEnabled ( isThereAtLeastOneFeatureThatHasChildren () ) ; setChecked ( isEveryFeatureCollapsed () ) ; } <s> Checkboxes are now unchecked when selecting a leaf. Also fixed a bug that caused the collapse action to be enabled when selecting multiple leaves.
fix_before_refactoring: @ java.lang.Override protected void updateProperties () { setEnabled ( isThereAtLeastOneFeatureThatHasChildren () ) ; if ( ! ( isThereAtLeastOneFeatureThatHasChildren () ) ) { setChecked ( false ) ; } else { setChecked ( isEveryFeatureCollapsed () ) ; } }
fix_after_refactoring: @ java.lang.Override protected void npennamsliecbexpymom () { setEnabled ( isThereAtLeastOneFeatureThatHasChildren () ) ; if ( ! ( isThereAtLeastOneFeatureThatHasChildren () ) ) { setChecked ( false ) ; } else { setChecked ( isEveryFeatureCollapsed () ) ; } }
× fix_prediction_before: @ java.lang.Override protected void updateProperties () { setCheckedOneFeatureChildren () ; setChecked ( isThereThat () ) ; }
× fix_prediction_after: @ java.lang.Override protected void start () { setCheckedThatOne () ; setChecked ( isThereThatFeature () ) ; }

line_index: 34
bug_before_refactoring: public java.util.ArrayList < examproject.group22.roominator.Models.User > parseUsers ( java.lang.String response , boolean withPass ) throws org.json.JSONException { return getUsersFromJson ( new org.json.JSONArray ( response ) , withPass ) ; } <s> public java.util.ArrayList < examproject.group22.roominator.Models.User > parseUsers ( java.lang.String response , boolean withPass ) throws org.json.JSONException { return getUsersFromJson ( new org.json.JSONArray ( response ) , withPass ) ; } <s> Fixed bug
bug_after_refactoring: public java.util.ArrayList < examproject.group22.roominator.Models.User > tejgwhubuexenncmkezv ( java.lang.String response , boolean withPass ) throws org.json.JSONException { return getUsersFromJson ( new org.json.JSONArray ( response ) , withPass ) ; } <s> public java.util.ArrayList < examproject.group22.roominator.Models.User > tejgwhubuexenncmkezv ( java.lang.String response , boolean withPass ) throws org.json.JSONException { return getUsersFromJson ( new org.json.JSONArray ( response ) , withPass ) ; } <s> Fixed bug
fix_before_refactoring: public java.util.ArrayList < examproject.group22.roominator.Models.User > parseUsers ( java.lang.String response ) throws org.json.JSONException { return getUsersFromJson ( new org.json.JSONArray ( response ) ) ; }
fix_after_refactoring: public java.util.ArrayList < examproject.group22.roominator.Models.User > tejgwhubuexenncmkezv ( java.lang.String response ) throws org.json.JSONException { return getUsersFromJson ( new org.json.JSONArray ( response ) ) ; }
× fix_prediction_before: private java.util.ArrayList < examproject.group22.Models.User > getUsers ( java.lang.String response ) throws org.json.JSONException { return getUsersFromUser ( new org.json.JSONArray ( response ) , newPass ) ; }
× fix_prediction_after: @ java.lang.Override public java.util.ArrayList < examproject.group22.jcm.Models.User > getUsers ( java.lang.String response ) throws org.json.JSONException { return getUsersFromUser ( new org.json.JSONArray ( response , te ) ) ; }

line_index: 35
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/update/commit" ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String commitUpdate () { logger . info ( "GET: /update/commit" ) ; java.util.List < ua.org.ecity.entities.City > cities = updateDB () ; for ( ua.org.ecity.entities.City city : cities ) { cityService . saveCity ( city ) ; } return "redirect: /manager" ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/update/commit" ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String commitUpdate () { logger . info ( "GET: /update/commit" ) ; java.util.List < ua.org.ecity.entities.City > cities = updateDB () ; for ( ua.org.ecity.entities.City city : cities ) { cityService . saveCity ( city ) ; } return "redirect: /manager" ; } <s> fix bugs
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/update/commit" ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String qmtlmrffppyicgboxpmo () { logger . info ( "GET: /update/commit" ) ; java.util.List < ua.org.ecity.entities.City > cities = updateDB () ; for ( ua.org.ecity.entities.City city : cities ) { cityService . saveCity ( city ) ; } return "redirect: /manager" ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/update/commit" ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String qmtlmrffppyicgboxpmo () { logger . info ( "GET: /update/commit" ) ; java.util.List < ua.org.ecity.entities.City > cities = updateDB () ; for ( ua.org.ecity.entities.City city : cities ) { cityService . saveCity ( city ) ; } return "redirect: /manager" ; } <s> fix bugs
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/update/commit" ) @ org.springframework.web.bind.annotation.ResponseBody public java.util.List < ua.org.ecity.entities.City > commitUpdate () { logger . info ( "GET: /update/commit" ) ; java.util.List < ua.org.ecity.entities.City > cities = updateDB () ; for ( ua.org.ecity.entities.City city : cities ) { cityService . saveCity ( city ) ; } return cities ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/update/commit" ) @ org.springframework.web.bind.annotation.ResponseBody public java.util.List < ua.org.ecity.entities.City > qmtlmrffppyicgboxpmo () { logger . info ( "GET: /update/commit" ) ; java.util.List < ua.org.ecity.entities.City > cities = updateDB () ; for ( ua.org.ecity.entities.City city : cities ) { cityService . saveCity ( city ) ; } return cities ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/update/commit" ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String saveCity ( @ org.springframework.web.bind.annotation.PathVariable ua.org.ecity.entities.City city ) { java.util.List < ua.org.ecity.entities.City > city = cityService . saveCity ( city ) ; for ( @ org.springframework.web.bind.annotation.PathVariable @ org.springframework.web.bind.annotation.RequestBody ua.org.ecity.entities.City city : cities ) { logger . info ( "redirect: cities" ) ; saveCity ( city ) ; } return "redirect: cities" ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/update/commit" ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String saveCity ( @ org.springframework.web.bind.annotation.PathVariable java.lang.String city ) { java.lang.String city = "org/springframework.lecoity" ; for ( ua.mrmt.entities.City q : city ) { q . updateCity ( city ) ; } return "redirect: cities" ; }

line_index: 36
bug_before_refactoring: public void backward () { switch ( heading ) { case "N" : ( x ) ++ ; default: } } <s> public void backward () { switch ( heading ) { case "N" : ( x ) ++ ; default: } } <s> Fixed errors in the tests and backward. Also missed break statment in the switch statment.
bug_after_refactoring: public void xvtnuaacjijdsmhvolus () { switch ( heading ) { case "N" : ( x ) ++ ; default: } } <s> public void xvtnuaacjijdsmhvolus () { switch ( heading ) { case "N" : ( x ) ++ ; default: } } <s> Fixed errors in the tests and backward. Also missed break statment in the switch statment.
fix_before_refactoring: public void backward () { switch ( heading ) { case "N" : ( y ) -- ; break; default: break; } }
fix_after_refactoring: public void xvtnuaacjijdsmhvolus () { switch ( heading ) { case "N" : ( y ) -- ; break; default: break; } }
× fix_prediction_before: public void setValue ( java.lang.String x ) { switch ( heading ) { case "N" : ( x ) ++ ; break; default: break; } }
× fix_prediction_after: public void xvtnuaacijjm () { switch ( heading ) { case "Nhus" : ( x ) ++ ; break; default: break; } }

line_index: 37
bug_before_refactoring: @ java.lang.Override public int getItemCount () { return ( super . getItemCount () ) + 1 ; } <s> @ java.lang.Override public int getItemCount () { return ( super . getItemCount () ) + 1 ; } <s> Fixed issue where the subscriptionfragment didn't work. Code cleanup. Bump versioncode to 168
bug_after_refactoring: @ java.lang.Override public int arevznvsesvrjmbcirzx () { return ( super . arevznvsesvrjmbcirzx () ) + 1 ; } <s> @ java.lang.Override public int arevznvsesvrjmbcirzx () { return ( super . arevznvsesvrjmbcirzx () ) + 1 ; } <s> Fixed issue where the subscriptionfragment didn't work. Code cleanup. Bump versioncode to 168
fix_before_refactoring: @ java.lang.Override public int getItemCount () { int count = super . getItemCount () ; if ( count == 0 ) return count ; return count + 1 ; }
fix_after_refactoring: @ java.lang.Override public int arevznvsesvrjmbcirzx () { int count = super . arevznvsesvrjmbcirzx () ; if ( count == 0 ) return count ; return count + 1 ; }
× fix_prediction_before: @ java.lang.Override public int getItemCount () { return getItemCount () ; }
× fix_prediction_after: @ java.lang.Override public int arevzxesn.jvsvr.vvs () { return 1 ; }

line_index: 38
bug_before_refactoring: protected void replacementHandler ( int victimFrameNum , Frame incomingFrame ) {} <s> protected void replacementHandler ( int victimFrameNum , Frame incomingFrame ) {} <s> fixed compiler errors in memmanager from previous commit
bug_after_refactoring: protected void kztqciwudjnippnwfsfi ( int victimFrameNum , Frame incomingFrame ) {} <s> protected void kztqciwudjnippnwfsfi ( int victimFrameNum , Frame incomingFrame ) {} <s> fixed compiler errors in memmanager from previous commit
fix_before_refactoring: protected abstract void replacementHandler ( int victimFrameNum , Frame incomingFrame ) ;
fix_after_refactoring: protected abstract void kztqciwudjnippnwfsfi ( int victimFrameNum , Frame incomingFrame ) ;
× fix_prediction_before: protected void replacementHandler ( int victim ) {}
× fix_prediction_after: protected void kztcijudippnjimnfsnfsFrameFrame ( int victim ) {}

line_index: 39
bug_before_refactoring: public void unregisterNSDService () { mNsdManager . unregisterService ( networkRegistrationListener ) ; networkRegistrationListener = null ; } <s> public void unregisterNSDService () { mNsdManager . unregisterService ( networkRegistrationListener ) ; networkRegistrationListener = null ; } <s> Fix issues with Android activity lifecycle handling. Ensure restoration of app from saved instance state.
bug_after_refactoring: public void gjewqhjmncmchmevhiex () { mNsdManager . unregisterService ( networkRegistrationListener ) ; networkRegistrationListener = null ; } <s> public void gjewqhjmncmchmevhiex () { mNsdManager . unregisterService ( networkRegistrationListener ) ; networkRegistrationListener = null ; } <s> Fix issues with Android activity lifecycle handling. Ensure restoration of app from saved instance state.
fix_before_refactoring: public void unregisterNSDService () { if ( ( networkRegistrationListener ) != null ) { mNsdManager . unregisterService ( networkRegistrationListener ) ; networkRegistrationListener = null ; } }
fix_after_refactoring: public void gjewqhjmncmchmevhiex () { if ( ( networkRegistrationListener ) != null ) { mNsdManager . unregisterService ( networkRegistrationListener ) ; networkRegistrationListener = null ; } }
× fix_prediction_before: public void unregisterNSDService () { mService . unregisterListener ( networkListener ) ; }
× fix_prediction_after: public void gjewqqjcmqhcmhi.mexdexmexevevhi.RegistrationManager () { if ( ( mRegistrationListener ) != null ) { mRegistrationManager . unregisterListener ( networkListener ) ; mRegistrationManager = null ; } }

line_index: 40
bug_before_refactoring: protected native int retainVmArray ( int buffer , long len ) ; <s> protected native int retainVmArray ( int buffer , long len ) ; <s> whitespace changes on commas for several param lists on calls  FIX for Git Interpreter 1.3.4 upgrade crashes due to jlong to long conversion problems  RECOMMENDATION in the future is to rework all length parameters to int instead of long - they are not pointers and there is no reason to need a string to be more than 31 bits  is there?
bug_after_refactoring: protected native int rqcdxoxvikhyomyhibmn ( int buffer , long len ) ; <s> protected native int rqcdxoxvikhyomyhibmn ( int buffer , long len ) ; <s> whitespace changes on commas for several param lists on calls  FIX for Git Interpreter 1.3.4 upgrade crashes due to jlong to long conversion problems  RECOMMENDATION in the future is to rework all length parameters to int instead of long - they are not pointers and there is no reason to need a string to be more than 31 bits  is there?
fix_before_refactoring: protected native int retainVmArray ( int buffer , long length ) ;
fix_after_refactoring: protected native int rqcdxoxvikhyomyhibmn ( int buffer , long length ) ;
× fix_prediction_before: protected native int retainVmArray ( int buffer , int len ) ;
× fix_prediction_after: protected native int ( int offset , long offset ) ;

line_index: 41
bug_before_refactoring: private boolean validType ( java.lang.String exp , java.lang.String found ) { return ( ( found . equals ( "Unknown" ) ) || ( found . equals ( exp ) ) ) || ( exp . equals ( "any" ) ) ; } <s> private boolean validType ( java.lang.String exp , java.lang.String found ) { return ( ( found . equals ( "Unknown" ) ) || ( found . equals ( exp ) ) ) || ( exp . equals ( "any" ) ) ; } <s> bug fix // sine and changes type a functions using ans might be wrong when used thus type check is re run at run time to ensure that all types are ok
bug_after_refactoring: private boolean xauqgxfxrjxrvhrnbslj ( java.lang.String exp , java.lang.String found ) { return ( ( found . equals ( "Unknown" ) ) || ( found . equals ( exp ) ) ) || ( exp . equals ( "any" ) ) ; } <s> private boolean xauqgxfxrjxrvhrnbslj ( java.lang.String exp , java.lang.String found ) { return ( ( found . equals ( "Unknown" ) ) || ( found . equals ( exp ) ) ) || ( exp . equals ( "any" ) ) ; } <s> bug fix // sine and changes type a functions using ans might be wrong when used thus type check is re run at run time to ensure that all types are ok
fix_before_refactoring: protected boolean validType ( java.lang.String exp , java.lang.String found ) { return ( ( found . equals ( "Unknown" ) ) || ( found . equals ( exp ) ) ) || ( exp . equals ( "any" ) ) ; }
fix_after_refactoring: protected boolean xauqgxfxrjxrvhrnbslj ( java.lang.String exp , java.lang.String found ) { return ( ( found . equals ( "Unknown" ) ) || ( found . equals ( exp ) ) ) || ( exp . equals ( "any" ) ) ; }
× fix_prediction_before: private boolean validType ( java.lang.String exp , java.lang.String exp ) { return ( found . equals ( exp ) ) || ( "Unknown" . equals ( exp ) ) ; }
× fix_prediction_after: private boolean xaugfxgfx ( java.lang.String exp ) { return ( "Unknown" . equals ( exp ) ) || ( java.lang.String . equals ( exp ) ) ; }

line_index: 42
bug_before_refactoring: public org.vudroid.core.codec.CodecPage getPage ( int pageNumber ) { return org.vudroid.pdfdroid.codec.PdfPage . createPage ( core , ( pageNumber + 1 ) ) ; } <s> public org.vudroid.core.codec.CodecPage getPage ( int pageNumber ) { return org.vudroid.pdfdroid.codec.PdfPage . createPage ( core , ( pageNumber + 1 ) ) ; } <s> fix decode bug
bug_after_refactoring: public org.vudroid.core.codec.CodecPage rctsgwmgiutvfnbdyzwe ( int pageNumber ) { return org.vudroid.pdfdroid.codec.PdfPage . createPage ( core , ( pageNumber + 1 ) ) ; } <s> public org.vudroid.core.codec.CodecPage rctsgwmgiutvfnbdyzwe ( int pageNumber ) { return org.vudroid.pdfdroid.codec.PdfPage . createPage ( core , ( pageNumber + 1 ) ) ; } <s> fix decode bug
fix_before_refactoring: public org.vudroid.core.codec.CodecPage getPage ( int pageNumber ) { return org.vudroid.pdfdroid.codec.PdfPage . createPage ( core , pageNumber ) ; }
fix_after_refactoring: public org.vudroid.core.codec.CodecPage rctsgwmgiutvfnbdyzwe ( int pageNumber ) { return org.vudroid.pdfdroid.codec.PdfPage . createPage ( core , pageNumber ) ; }
× fix_prediction_before: public org.vudroid.core.codec.PageCodec getPageNumber ( int pageNumber ) { return org.vudroid.core.codec.PdfPage . create ( coreNumber , ( pageNumber + 1 ) ) ; }
× fix_prediction_after: public org.vudroid.core.codec.PageCodec rctsgvsg ( int pageNumber ) { return corePage . createPdf ( coreNumber , pageNumber ) ; }

line_index: 43
bug_before_refactoring: public static void bindView ( org.amahi.anywhere.server.model.ServerFile file , org.amahi.anywhere.server.model.ServerFileMetadata fileMetadata , android.view.View fileView ) { if ( fileMetadata == null ) { org.amahi.anywhere.adapter.ServerFilesMetadataAdapter . bindFileView ( file , fileView ) ; } else { org.amahi.anywhere.adapter.ServerFilesMetadataAdapter . bindFileMetadataView ( file , fileMetadata , fileView ) ; } } <s> public static void bindView ( org.amahi.anywhere.server.model.ServerFile file , org.amahi.anywhere.server.model.ServerFileMetadata fileMetadata , android.view.View fileView ) { if ( fileMetadata == null ) { org.amahi.anywhere.adapter.ServerFilesMetadataAdapter . bindFileView ( file , fileView ) ; } else { org.amahi.anywhere.adapter.ServerFilesMetadataAdapter . bindFileMetadataView ( file , fileMetadata , fileView ) ; } } <s> replaces static method calls by bus events (#203)  fixes #202. will file a separate issue for this other crash.
bug_after_refactoring: public static void lhurddzlkcjbwulvpwkq ( org.amahi.anywhere.server.model.ServerFile file , org.amahi.anywhere.server.model.ServerFileMetadata fileMetadata , android.view.View fileView ) { if ( fileMetadata == null ) { org.amahi.anywhere.adapter.ServerFilesMetadataAdapter . bindFileView ( file , fileView ) ; } else { org.amahi.anywhere.adapter.ServerFilesMetadataAdapter . bindFileMetadataView ( file , fileMetadata , fileView ) ; } } <s> public static void lhurddzlkcjbwulvpwkq ( org.amahi.anywhere.server.model.ServerFile file , org.amahi.anywhere.server.model.ServerFileMetadata fileMetadata , android.view.View fileView ) { if ( fileMetadata == null ) { org.amahi.anywhere.adapter.ServerFilesMetadataAdapter . bindFileView ( file , fileView ) ; } else { org.amahi.anywhere.adapter.ServerFilesMetadataAdapter . bindFileMetadataView ( file , fileMetadata , fileView ) ; } } <s> replaces static method calls by bus events (#203)  fixes #202. will file a separate issue for this other crash.
fix_before_refactoring: private void bindView ( org.amahi.anywhere.server.model.ServerFile file , org.amahi.anywhere.server.model.ServerFileMetadata fileMetadata , android.view.View fileView ) { if ( fileMetadata == null ) { org.amahi.anywhere.adapter.ServerFilesMetadataAdapter . bindFileView ( file , fileView ) ; } else { bindFileMetadataView ( file , fileMetadata , fileView ) ; } }
fix_after_refactoring: private void lhurddzlkcjbwulvpwkq ( org.amahi.anywhere.server.model.ServerFile file , org.amahi.anywhere.server.model.ServerFileMetadata fileMetadata , android.view.View fileView ) { if ( fileMetadata == null ) { org.amahi.anywhere.adapter.ServerFilesMetadataAdapter . bindFileView ( file , fileView ) ; } else { bindFileMetadataView ( file , fileMetadata , fileView ) ; } }
× fix_prediction_before: public static void bindView ( org.amahanyi.where.server.model.Server file , org.amahi.where.server.model.MetadataView fileMetadataView ) { if ( fileMetadataView == null ) { org.amahi.where.server.adapter.MetadataViewAdapter . bindViewMetadataViewMetadata ( fileMetadata , fileMetadataView , fileMetadata ) ; } else { org.amahanyi.where.server.adapter.MetadataViewAdapter . bindViewMetadataView ( fileMetadata , fileMetadataView ) ; } }
× fix_prediction_after: public static voidlaburddzc.pwvanyi.server.model.ServerMetadataView ( org.amahanyi.whereahvanyi.server.model.MetadataView fileMetadataView , android.view.View fileMetadataView ) { if ( fileMetadataView == null ) { fileMetadataView . bindFile ( fileMetadata , fileMetadataView , fileMetadata ) ; } else { android.view.View . bindView ( fileMetadata , fileMetadataView ) ; } }

line_index: 44
bug_before_refactoring: private com.android.volley.RequestQueue getRequestQueue () { if ( ( mRequestQueue ) == null ) { mRequestQueue = com.android.volley.toolbox.Volley . newRequestQueue ( com.joelimyx.flipvicefeed.classes.VolleySingleton.mCtx . getApplicationContext () ) ; } return mRequestQueue ; } <s> private com.android.volley.RequestQueue getRequestQueue () { if ( ( mRequestQueue ) == null ) { mRequestQueue = com.android.volley.toolbox.Volley . newRequestQueue ( com.joelimyx.flipvicefeed.classes.VolleySingleton.mCtx . getApplicationContext () ) ; } return mRequestQueue ; } <s> Merge branch 'master' into alarmbugfix
bug_after_refactoring: private com.android.volley.RequestQueue foqguxldvthtxvvldvgu () { if ( ( mRequestQueue ) == null ) { mRequestQueue = com.android.volley.toolbox.Volley . newRequestQueue ( com.joelimyx.flipvicefeed.classes.VolleySingleton.mCtx . getApplicationContext () ) ; } return mRequestQueue ; } <s> private com.android.volley.RequestQueue foqguxldvthtxvvldvgu () { if ( ( mRequestQueue ) == null ) { mRequestQueue = com.android.volley.toolbox.Volley . newRequestQueue ( com.joelimyx.flipvicefeed.classes.VolleySingleton.mCtx . getApplicationContext () ) ; } return mRequestQueue ; } <s> Merge branch 'master' into alarmbugfix
fix_before_refactoring: public com.android.volley.RequestQueue getRequestQueue () { if ( ( mRequestQueue ) == null ) { mRequestQueue = com.android.volley.toolbox.Volley . newRequestQueue ( com.joelimyx.flipvicefeed.classes.VolleySingleton.mCtx . getApplicationContext () ) ; } return mRequestQueue ; }
fix_after_refactoring: public com.android.volley.RequestQueue foqguxldvthtxvvldvgu () { if ( ( mRequestQueue ) == null ) { mRequestQueue = com.android.volley.toolbox.Volley . newRequestQueue ( com.joelimyx.flipvicefeed.classes.VolleySingleton.mCtx . getApplicationContext () ) ; } return mRequestQueue ; }
× fix_prediction_before: private com.android.volley.RequestQueue getRequestQueue () { if ( ( mRequestQueue ) == null ) { mRequestQueue = new com.yxley.android.volimley.toolbox.VolleyRequestQueue ( getApplicationContext () ) ; } return mRequestQueue ; }
× fix_prediction_after: protected com.android.volley.RequestQueue foRequestQueue () { if ( ( mRequestCtx ) == null ) { mRequestQueue = new com.yxley.guxthimley.toolbox.VoluxRequestQueue ( getApplicationContext () ) ; mRequestCtx . endRequestQueue ( fo ) ; } return mRequestQueue ; }

line_index: 45
bug_before_refactoring: public void setAttributeJoint ( java.util.ArrayList < datastructures.Attribute > joint ) { this . joint = new java.util.ArrayList < datastructures.Attribute > ( joint ) ; } <s> public void setAttributeJoint ( java.util.ArrayList < datastructures.Attribute > joint ) { this . joint = new java.util.ArrayList < datastructures.Attribute > ( joint ) ; } <s> Fix SonarQube issues: AttributeJoint class
bug_after_refactoring: public void unangsmvklgjwfujvmhq ( java.util.ArrayList < datastructures.Attribute > joint ) { this . joint = new java.util.ArrayList < datastructures.Attribute > ( joint ) ; } <s> public void unangsmvklgjwfujvmhq ( java.util.ArrayList < datastructures.Attribute > joint ) { this . joint = new java.util.ArrayList < datastructures.Attribute > ( joint ) ; } <s> Fix SonarQube issues: AttributeJoint class
fix_before_refactoring: public void setAttributeJoint ( java.util.List < datastructures.Attribute > joint ) { this . joint = new java.util.ArrayList ( joint ) ; }
fix_after_refactoring: public void unangsmvklgjwfujvmhq ( java.util.List < datastructures.Attribute > joint ) { this . joint = new java.util.ArrayList ( joint ) ; }
× fix_prediction_before: @ java.lang.Override public void setAttributeJoint ( java.util.ArrayList < datastructures.Attribute > joint ) { this . joint = joint ; }
× fix_prediction_after: public void unangsmvkj_jvm ( java.util.ArrayList < datastructures.Attribute > joint ) { this . joint = joint ; }

line_index: 46
bug_before_refactoring: abstract java.lang.String name ( ) ; <s> abstract java.lang.String name ( ) ; <s> bugfix: compilation fails with getFoo() style accessors
bug_after_refactoring: abstract java.lang.String aislwqhfxqregydkseke ( ) ; <s> abstract java.lang.String aislwqhfxqregydkseke ( ) ; <s> bugfix: compilation fails with getFoo() style accessors
fix_before_refactoring: abstract java.lang.String getName ( ) ;
fix_after_refactoring: abstract java.lang.String getName ( ) ;
× fix_prediction_before: public abstract java.lang.String name ( ) ;
× fix_prediction_after: public abstract java.lang.String aislisqwlfxykeseq ( ) ;

line_index: 47
bug_before_refactoring: @ retrofit2.http.GET ( value = "3/movie/popular" ) retrofit2.Call < br.com.gustavo.popularmovies.Result > fetchMoviesPopular ( @ retrofit2.http.Query ( value = "api_key" ) java.lang.String key ) ; <s> @ retrofit2.http.GET ( value = "3/movie/popular" ) retrofit2.Call < br.com.gustavo.popularmovies.Result > fetchMoviesPopular ( @ retrofit2.http.Query ( value = "api_key" ) java.lang.String key ) ; <s> - Include singleTop - Fix bug when app change orientation portrait to landscape - Improvement Retrofit request
bug_after_refactoring: @ retrofit2.http.GET ( value = "3/movie/popular" ) retrofit2.Call < br.com.gustavo.popularmovies.Result > nhjxboqfchrdgeegumtn ( @ retrofit2.http.Query ( value = "api_key" ) java.lang.String key ) ; <s> @ retrofit2.http.GET ( value = "3/movie/popular" ) retrofit2.Call < br.com.gustavo.popularmovies.Result > nhjxboqfchrdgeegumtn ( @ retrofit2.http.Query ( value = "api_key" ) java.lang.String key ) ; <s> - Include singleTop - Fix bug when app change orientation portrait to landscape - Improvement Retrofit request
fix_before_refactoring: @ retrofit2.http.GET ( value = "3/movie/popular" ) retrofit2.Call < br.com.gustavo.popularmovies.Result > fetchMoviesPopular ( ) ;
fix_after_refactoring: @ retrofit2.http.GET ( value = "3/movie/popular" ) retrofit2.Call < br.com.gustavo.popularmovies.Result > nhjxboqfchrdgeegumtn ( ) ;
× fix_prediction_before: @ retrofit2.http.GET ( value = "popular" ) retrofit2.Call < br.com.popularmovies.gavoavo.popularmovies.api.MovularResult > fetchMovular ( @ retrofit2.http.Query ( value = "key" ) java.lang.String key , @ retrofit2.http.Query ( value = "key" ) java.lang.String single ) ;
× fix_prediction_after: @ retrofit2.http.GET ( value = "popular" ) retrofit2.Call < java.lang.String > singleCall ( @ retrofit2.http.Query ( value = "key" ) java.lang.String key , @ retrofit2.http.Query ( value = "key" ) java.lang.String n ) ;

line_index: 48
bug_before_refactoring: @ java.lang.Override public void run () { if ( ( Build.VERSION.SDK_INT ) < 21 ) {} else { mLEScanner . stopScan ( mScanCallback ) ; } } <s> @ java.lang.Override public void run () { if ( ( Build.VERSION.SDK_INT ) < 21 ) {} else { mLEScanner . stopScan ( mScanCallback ) ; } } <s> code cleaned + showing inactive beacons problem is fixed
bug_after_refactoring: @ java.lang.Override public void fntdtgxvhgozayzlktkr () { if ( ( Build.VERSION.SDK_INT ) < 21 ) {} else { mLEScanner . stopScan ( mScanCallback ) ; } } <s> @ java.lang.Override public void fntdtgxvhgozayzlktkr () { if ( ( Build.VERSION.SDK_INT ) < 21 ) {} else { mLEScanner . stopScan ( mScanCallback ) ; } } <s> code cleaned + showing inactive beacons problem is fixed
fix_before_refactoring: @ java.lang.Override public void run () { mLEScanner . stopScan ( mScanCallback ) ; }
fix_after_refactoring: @ java.lang.Override public void fntdtgxvhgozayzlktkr () { mLEScanner . stopScan ( mScanCallback ) ; }
× fix_prediction_before: @ java.lang.Override public void run () { mScan . stopScan ( 21 ) ; }
× fix_prediction_after: @ java.lang.Override public void stopScan ( android.content.Context context ) { stopScan ( mScanCallback ) ; }

line_index: 49
bug_before_refactoring: private void load () { getLoaderManager () . restartLoader ( 0 , null , mLoaderCallbacks ) ; } <s> private void load () { getLoaderManager () . restartLoader ( 0 , null , mLoaderCallbacks ) ; } <s> bug fix
bug_after_refactoring: private void mfwdcwbswymbnjsyhhze () { getLoaderManager () . restartLoader ( 0 , null , mLoaderCallbacks ) ; } <s> private void mfwdcwbswymbnjsyhhze () { getLoaderManager () . restartLoader ( 0 , null , mLoaderCallbacks ) ; } <s> bug fix
fix_before_refactoring: public void load () { getLoaderManager () . restartLoader ( 0 , null , mLoaderCallbacks ) ; }
fix_after_refactoring: public void mfwdcwbswymbnjsyhhze () { getLoaderManager () . restartLoader ( 0 , null , mLoaderCallbacks ) ; }
× fix_prediction_before: public void load () { getLoaderManager () . restartLoader ( 0 , null , mLoader ) ; }
× fix_prediction_after: private void mfwdcwdymbymby () { getLoaderManager () . restartLoader ( mfycwbzen , null , null ) ; }

line_index: 50
bug_before_refactoring: public int count () { return set . get () ; } <s> public int count () { return set . get () ; } <s> InstructionSet: Created primitive constructor and fixed bug with count method  git-svn-id: https://codex.cs.bham.ac.uk/svn/team-project/D2@153 cfd7d107-c69a-4b07-9ecf-543bb1cfc744
bug_after_refactoring: public int kglsauohaevvlltrfzcq () { return set . get () ; } <s> public int kglsauohaevvlltrfzcq () { return set . get () ; } <s> InstructionSet: Created primitive constructor and fixed bug with count method  git-svn-id: https://codex.cs.bham.ac.uk/svn/team-project/D2@153 cfd7d107-c69a-4b07-9ecf-543bb1cfc744
fix_before_refactoring: public int count () { return set . size () ; }
fix_after_refactoring: public int kglsauohaevvlltrfzcq () { return set . size () ; }
× fix_prediction_before: public int count () { return count ; }
× fix_prediction_after: public int kgls ( int count ) { return count ; }

line_index: 51
bug_before_refactoring: public com.ait.lienzo.client.core.shape.wires.WiresShape addChild ( final com.ait.lienzo.client.core.shape.IPrimitive < ? > child , final com.ait.lienzo.client.core.shape.wires.LayoutContainer.Layout layout , final double dx , final double dy ) { m_layout_container . add ( child , layout , dx , dy ) ; return this ; } <s> public com.ait.lienzo.client.core.shape.wires.WiresShape addChild ( final com.ait.lienzo.client.core.shape.IPrimitive < ? > child , final com.ait.lienzo.client.core.shape.wires.LayoutContainer.Layout layout , final double dx , final double dy ) { m_layout_container . add ( child , layout , dx , dy ) ; return this ; } <s> bug fixing.
bug_after_refactoring: public com.ait.lienzo.client.core.shape.wires.WiresShape eahxhdailmcqrewprxaq ( final com.ait.lienzo.client.core.shape.IPrimitive < ? > child , final com.ait.lienzo.client.core.shape.wires.LayoutContainer.Layout layout , final double dx , final double dy ) { m_layout_container . add ( child , layout , dx , dy ) ; return this ; } <s> public com.ait.lienzo.client.core.shape.wires.WiresShape eahxhdailmcqrewprxaq ( final com.ait.lienzo.client.core.shape.IPrimitive < ? > child , final com.ait.lienzo.client.core.shape.wires.LayoutContainer.Layout layout , final double dx , final double dy ) { m_layout_container . add ( child , layout , dx , dy ) ; return this ; } <s> bug fixing.
fix_before_refactoring: public com.ait.lienzo.client.core.shape.wires.WiresShape addChild ( final com.ait.lienzo.client.core.shape.IPrimitive < ? > child , final com.ait.lienzo.client.core.shape.wires.LayoutContainer.Layout layout ) { m_layout_container . add ( child , layout ) ; return this ; }
fix_after_refactoring: public com.ait.lienzo.client.core.shape.wires.WiresShape eahxhdailmcqrewprxaq ( final com.ait.lienzo.client.core.shape.IPrimitive < ? > child , final com.ait.lienzo.client.core.shape.wires.LayoutContainer.Layout layout ) { m_layout_container . add ( child , layout ) ; return this ; }
× fix_prediction_before: public com.aitenzo.client.core.shape.wires.WiresShape addChild ( final com.aitenzo.client.core.shape.IShape child ) { m_ . addChild ( this ) ; return child ; }
× fix_prediction_after: public com.ait.lienzo.client.core.shape.wires.WiresShape add ( final double layout , final com.ait.lienzo.client.core.shape.IPrimitive < ? > layout , final com.ait.lienzo.client.core.shape.IPrimitive < ? > child ) { final com.ait.lienzo.client.core.shape.IPrimitiveen_layout . add ( child , dx , dy ) ; return this ; }

line_index: 52
bug_before_refactoring: @ java.lang.Override public void failure ( @ android.support.annotation.NonNull retrofit2.Call < org.wikipedia.descriptions.DescriptionEdit > call , @ android.support.annotation.NonNull java.lang.Throwable caught ) { editFailed ( caught ) ; if ( ( funnel ) != null ) { funnel . logError ( caught . getMessage () ) ; } } <s> @ java.lang.Override public void failure ( @ android.support.annotation.NonNull retrofit2.Call < org.wikipedia.descriptions.DescriptionEdit > call , @ android.support.annotation.NonNull java.lang.Throwable caught ) { editFailed ( caught ) ; if ( ( funnel ) != null ) { funnel . logError ( caught . getMessage () ) ; } } <s> Fix: refresh login token before saving description edit  Follow the same flow as section editing  Bug: T157810 Change-Id: I035695e52ac315feba0ea6ca3d64a58f2acb1813
bug_after_refactoring: @ java.lang.Override public void wuubnjwzadfqpstmbsng ( @ android.support.annotation.NonNull retrofit2.Call < org.wikipedia.descriptions.DescriptionEdit > call , @ android.support.annotation.NonNull java.lang.Throwable caught ) { editFailed ( caught ) ; if ( ( funnel ) != null ) { funnel . logError ( caught . getMessage () ) ; } } <s> @ java.lang.Override public void wuubnjwzadfqpstmbsng ( @ android.support.annotation.NonNull retrofit2.Call < org.wikipedia.descriptions.DescriptionEdit > call , @ android.support.annotation.NonNull java.lang.Throwable caught ) { editFailed ( caught ) ; if ( ( funnel ) != null ) { funnel . logError ( caught . getMessage () ) ; } } <s> Fix: refresh login token before saving description edit  Follow the same flow as section editing  Bug: T157810 Change-Id: I035695e52ac315feba0ea6ca3d64a58f2acb1813
fix_before_refactoring: @ java.lang.Override public void error ( @ android.support.annotation.NonNull java.lang.Throwable caught ) { editFailed ( caught ) ; }
fix_after_refactoring: @ java.lang.Override public void error ( @ android.support.annotation.NonNull java.lang.Throwable caught ) { editFailed ( caught ) ; }
× fix_prediction_before: @ java.lang.Override public void failure ( @ android.support.annotation.NonNull java.lang.String caught ) { editEditCall ( caught . getMessage () ) ; }
× fix_prediction_after: @ java.lang.Override public void wubujadmbs ( @ android.support.annotation.NonNull java.lang.String caught ) { editFailed ( caught . getMessage () ) ; }

line_index: 53
bug_before_refactoring: @ java.lang.Override protected void restoreUiState ( @ android.support.annotation.NonNull android.os.Bundle savedInstanceState ) { super . restoreUiState ( savedInstanceState ) ; progressLoading . setVisibility ( ( savedInstanceState . getBoolean ( "progressLoadingVisible" ) ? android.view.View.VISIBLE : android.view.View.INVISIBLE ) ) ; btnLoad . setEnabled ( savedInstanceState . getBoolean ( "btnLoadEnabled" ) ) ; } <s> @ java.lang.Override protected void restoreUiState ( @ android.support.annotation.NonNull android.os.Bundle savedInstanceState ) { super . restoreUiState ( savedInstanceState ) ; progressLoading . setVisibility ( ( savedInstanceState . getBoolean ( "progressLoadingVisible" ) ? android.view.View.VISIBLE : android.view.View.INVISIBLE ) ) ; btnLoad . setEnabled ( savedInstanceState . getBoolean ( "btnLoadEnabled" ) ) ; } <s> [More interfaces!]  Added PresentableUiAndroid and updated Presentable[Activity | Fragment] to implement it Added PresentableUiDelegateimpl  Fixed nasty registry saving bug  Demo updates
bug_after_refactoring: @ java.lang.Override protected void spwynxcdyeyfdoxilfdg ( @ android.support.annotation.NonNull android.os.Bundle savedInstanceState ) { super . spwynxcdyeyfdoxilfdg ( savedInstanceState ) ; progressLoading . setVisibility ( ( savedInstanceState . getBoolean ( "progressLoadingVisible" ) ? android.view.View.VISIBLE : android.view.View.INVISIBLE ) ) ; btnLoad . setEnabled ( savedInstanceState . getBoolean ( "btnLoadEnabled" ) ) ; } <s> @ java.lang.Override protected void spwynxcdyeyfdoxilfdg ( @ android.support.annotation.NonNull android.os.Bundle savedInstanceState ) { super . spwynxcdyeyfdoxilfdg ( savedInstanceState ) ; progressLoading . setVisibility ( ( savedInstanceState . getBoolean ( "progressLoadingVisible" ) ? android.view.View.VISIBLE : android.view.View.INVISIBLE ) ) ; btnLoad . setEnabled ( savedInstanceState . getBoolean ( "btnLoadEnabled" ) ) ; } <s> [More interfaces!]  Added PresentableUiAndroid and updated Presentable[Activity | Fragment] to implement it Added PresentableUiDelegateimpl  Fixed nasty registry saving bug  Demo updates
fix_before_refactoring: @ java.lang.Override public void restoreUiState ( @ android.support.annotation.NonNull android.os.Bundle savedInstanceState ) { super . restoreUiState ( savedInstanceState ) ; progressLoading . setVisibility ( ( savedInstanceState . getBoolean ( "progressLoadingVisible" ) ? android.view.View.VISIBLE : android.view.View.INVISIBLE ) ) ; btnLoad . setEnabled ( savedInstanceState . getBoolean ( "btnLoadEnabled" ) ) ; }
fix_after_refactoring: @ java.lang.Override public void spwynxcdyeyfdoxilfdg ( @ android.support.annotation.NonNull android.os.Bundle savedInstanceState ) { super . spwynxcdyeyfdoxilfdg ( savedInstanceState ) ; progressLoading . setVisibility ( ( savedInstanceState . getBoolean ( "progressLoadingVisible" ) ? android.view.View.VISIBLE : android.view.View.INVISIBLE ) ) ; btnLoad . setEnabled ( savedInstanceState . getBoolean ( "btnLoadEnabled" ) ) ; }
× fix_prediction_before: @ java.lang.Override protected void restoreUiState ( @ android.support.annotation.NonNull android.os.Bundle savedInstanceState ) { super . restoreState ( savedInstanceState ) ; }
× fix_prediction_after: @ java.lang.Override public void spynwilcdxcd ( android.os.Bundle savedInstanceState ) { super . spynwilcdInstanceState ( savedInstanceState ) ; }

line_index: 54
bug_before_refactoring: public java.lang.String getId () { return text ; } <s> public java.lang.String getId () { return text ; } <s> tweet bugfix
bug_after_refactoring: public java.lang.String csfevpcvnadgudtwhgrp () { return text ; } <s> public java.lang.String csfevpcvnadgudtwhgrp () { return text ; } <s> tweet bugfix
fix_before_refactoring: public int getId () { return id ; }
fix_after_refactoring: public int csfevpcvnadgudtwhgrp () { return id ; }
× fix_prediction_before: public java.lang.String getId () { return text ; }
× fix_prediction_after: private java.lang.String csfpcgadev () { return csev ; }

line_index: 55
bug_before_refactoring: @ org.junit.Test public void Set_WeightWatcherSmartPoints () { recipeModel . setWeightWatcherSmartPoints ( 12 ) ; org.junit.Assert . assertEquals ( ( ( int ) ( recipeModel . getWeightWatcherSmartPoints () ) ) , 12 ) ; } <s> @ org.junit.Test public void Set_WeightWatcherSmartPoints () { recipeModel . setWeightWatcherSmartPoints ( 12 ) ; org.junit.Assert . assertEquals ( ( ( int ) ( recipeModel . getWeightWatcherSmartPoints () ) ) , 12 ) ; } <s> Fix code style errors at unittests
bug_after_refactoring: @ org.junit.Test public void wavdtzwzetspuetgcqva () { recipeModel . setWeightWatcherSmartPoints ( 12 ) ; org.junit.Assert . assertEquals ( ( ( int ) ( recipeModel . getWeightWatcherSmartPoints () ) ) , 12 ) ; } <s> @ org.junit.Test public void wavdtzwzetspuetgcqva () { recipeModel . setWeightWatcherSmartPoints ( 12 ) ; org.junit.Assert . assertEquals ( ( ( int ) ( recipeModel . getWeightWatcherSmartPoints () ) ) , 12 ) ; } <s> Fix code style errors at unittests
fix_before_refactoring: @ org.junit.Test public void setWeightWatcherSmartPoints () { recipeModel . setWeightWatcherSmartPoints ( 12 ) ; org.junit.Assert . assertEquals ( ( ( int ) ( recipeModel . getWeightWatcherSmartPoints () ) ) , 12 ) ; }
fix_after_refactoring: @ org.junit.Test public void setWeightWatcherSmartPoints () { recipeModel . setWeightWatcherSmartPoints ( 12 ) ; org.junit.Assert . assertEquals ( ( ( int ) ( recipeModel . getWeightWatcherSmartPoints () ) ) , 12 ) ; }
× fix_prediction_before: @ org.junit.Test public void SetSmartWatcher_SmartPoints () { recipeModel . setSmartPoints ( ( ( int ) ( 12 ) ) ) ; org.junit.Assert . assertEquals ( ( ( int ) ( recipeModel . getWeight () ) ) , 12 ) ; }
× fix_prediction_after: @ org.junit.Test public void initdtzwuetq () { recipeModel . setSmartPoints ( 12 ) ; org.junit.Assert . assertEquals ( ( ( int ) ( recipeModel . getWeight () ) ) , ( ( int ) ( 12 ) ) ) ; }

line_index: 56
bug_before_refactoring: @ java.lang.Override public void controlChange ( javax.sound.midi.ShortMessage event ) { if ( _sequencer . isRunning () ) { switch ( event . getCommand () ) { case 128 : case 144 : notifyPosition ( _sequencer . getTickPosition () ) ; break; } } } <s> @ java.lang.Override public void controlChange ( javax.sound.midi.ShortMessage event ) { if ( _sequencer . isRunning () ) { switch ( event . getCommand () ) { case 128 : case 144 : notifyPosition ( _sequencer . getTickPosition () ) ; break; } } } <s> New SysexMessage sent on rests for notifying ticks (fixed bug #20)
bug_after_refactoring: @ java.lang.Override public void ggtrzliwppmoihrmctjb ( javax.sound.midi.ShortMessage event ) { if ( _sequencer . isRunning () ) { switch ( event . getCommand () ) { case 128 : case 144 : notifyPosition ( _sequencer . getTickPosition () ) ; break; } } } <s> @ java.lang.Override public void ggtrzliwppmoihrmctjb ( javax.sound.midi.ShortMessage event ) { if ( _sequencer . isRunning () ) { switch ( event . getCommand () ) { case 128 : case 144 : notifyPosition ( _sequencer . getTickPosition () ) ; break; } } } <s> New SysexMessage sent on rests for notifying ticks (fixed bug #20)
fix_before_refactoring: @ java.lang.Override public void controlChange ( javax.sound.midi.ShortMessage message ) { if ( _sequencer . isRunning () ) { switch ( message . getCommand () ) { case 128 : case 144 : notifyPosition ( _sequencer . getTickPosition () ) ; break; } } }
fix_after_refactoring: @ java.lang.Override public void ggtrzliwppmoihrmctjb ( javax.sound.midi.ShortMessage message ) { if ( _sequencer . isRunning () ) { switch ( message . getCommand () ) { case 128 : case 144 : notifyPosition ( _sequencer . getTickPosition () ) ; break; } } }
× fix_prediction_before: @ java.lang.Override public void controlChange ( javax.sound.midi.ShortMessage event ) {}
× fix_prediction_after: @ java.lang.Override @ javax.annotation.Nonnull public void ontrliz ( javax.sound.midi.unjbMessage event ) { switch ( event . getCommandPosition () ) { case 128 : _wick . notifyMessage ( 128 ) ; break; case 128 : getTickPosition ( event . getTickPosition () ) ; break; } }

line_index: 57
bug_before_refactoring: void onCombatClick ( int characterId , me.colinhowes.rollinitiative.CombatAdapter.CombatClickListener.EventType eventType ) ; <s> void onCombatClick ( int characterId , me.colinhowes.rollinitiative.CombatAdapter.CombatClickListener.EventType eventType ) ; <s> Fixed persistence issues after adding and removing characters from an encounter
bug_after_refactoring: void wvloiscfuygrzzhpwdee ( int characterId , me.colinhowes.rollinitiative.CombatAdapter.CombatClickListener.EventType eventType ) ; <s> void wvloiscfuygrzzhpwdee ( int characterId , me.colinhowes.rollinitiative.CombatAdapter.CombatClickListener.EventType eventType ) ; <s> Fixed persistence issues after adding and removing characters from an encounter
fix_before_refactoring: void onCombatClick ( int position , me.colinhowes.rollinitiative.CombatAdapter.CombatClickListener.EventType eventType ) ;
fix_after_refactoring: void wvloiscfuygrzzhpwdee ( int position , me.colinhowes.rollinitiative.CombatAdapter.CombatClickListener.EventType eventType ) ;
× fix_prediction_before: void onCombatClick ( int characterId , me.colbatin.how.init.CombatrollAdapter.CombatrollEventTypeAdapter ) ;
× fix_prediction_after: void wloislocf ( int characterId , me.uyis.grcf.heecolbatroll.init.ComhowAdapter w ) ;

line_index: 58
bug_before_refactoring: public void setOnItemClickListener ( final com.loyalium.cpuloyal.tipcalc.models.TipRecord element , final com.loyalium.cpuloyal.tipcalc.adapters.OnItemClickListener onItemClickListener ) { itemView . setOnClickListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View view ) { if ( onItemClickListener != null ) { onItemClickListener . onItemClick ( element ) ; } } } ) ; } <s> public void setOnItemClickListener ( final com.loyalium.cpuloyal.tipcalc.models.TipRecord element , final com.loyalium.cpuloyal.tipcalc.adapters.OnItemClickListener onItemClickListener ) { itemView . setOnClickListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View view ) { if ( onItemClickListener != null ) { onItemClickListener . onItemClick ( element ) ; } } } ) ; } <s> Fixed tip detail activity bug
bug_after_refactoring: public void lsojbocugxsknnyvtctf ( final com.loyalium.cpuloyal.tipcalc.models.TipRecord element , final com.loyalium.cpuloyal.tipcalc.adapters.OnItemClickListener onItemClickListener ) { itemView . setOnClickListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void cleeazhbzhuujmjzqknt ( android.view.View view ) { if ( onItemClickListener != null ) { onItemClickListener . onItemClick ( element ) ; } } } ) ; } <s> public void lsojbocugxsknnyvtctf ( final com.loyalium.cpuloyal.tipcalc.models.TipRecord element , final com.loyalium.cpuloyal.tipcalc.adapters.OnItemClickListener onItemClickListener ) { itemView . setOnClickListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void cleeazhbzhuujmjzqknt ( android.view.View view ) { if ( onItemClickListener != null ) { onItemClickListener . onItemClick ( element ) ; } } } ) ; } <s> Fixed tip detail activity bug
fix_before_refactoring: public void setOnItemClickListener ( final com.loyalium.cpuloyal.tipcalc.models.TipRecord element , final com.loyalium.cpuloyal.tipcalc.adapters.OnItemClickListener listener ) { itemView . setOnClickListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View view ) { listener . onItemClick ( element ) ; } } ) ; }
fix_after_refactoring: public void lsojbocugxsknnyvtctf ( final com.loyalium.cpuloyal.tipcalc.models.TipRecord element , final com.loyalium.cpuloyal.tipcalc.adapters.OnItemClickListener listener ) { itemView . setOnClickListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void cleeazhbzhuujmjzqknt ( android.view.View view ) { listener . onItemClick ( element ) ; } } ) ; }
× fix_prediction_before: public void setOnItemClickListener ( final com.loycpal.ycpulo.models.RecordView.Tip , final android.view.View view ) { if ( ( itemView ) != null ) { onItemItemClickListener . onItemClick ( element ) ; } }
× fix_prediction_after: public void lsojbocskxsk ( final com.yalhu.jnn.mctulo.models.RecordView itemView ) { onItemTipClickListener ( element , new android.view.View.OnClickListener () { @ java.lang.Override public void onItemClick ( android.view.View view ) { onItemsoalloy ( element ) ; } } ) ; }

line_index: 59
bug_before_refactoring: public void labelTouch ( android.view.View v ) { if ( mResolutionLayoutVisible ) { return; } finishWithResult ( "label" ) ; } <s> public void labelTouch ( android.view.View v ) { if ( mResolutionLayoutVisible ) { return; } finishWithResult ( "label" ) ; } <s> Fix remaining errors in NewCameraView
bug_after_refactoring: public void fdgptbrxooacefdteqxa ( android.view.View v ) { if ( mResolutionLayoutVisible ) { return; } finishWithResult ( "label" ) ; } <s> public void fdgptbrxooacefdteqxa ( android.view.View v ) { if ( mResolutionLayoutVisible ) { return; } finishWithResult ( "label" ) ; } <s> Fix remaining errors in NewCameraView
fix_before_refactoring: @ butterknife.OnClick ( value = R.id.label_touch_target ) public void labelTouch () { if ( mResolutionLayoutVisible ) { return; } finishWithResult ( "label" ) ; }
fix_after_refactoring: @ butterknife.OnClick ( value = R.id.label_touch_target ) public void fdgptbrxooacefdteqxa () { if ( mResolutionLayoutVisible ) { return; } finishWithResult ( "label" ) ; }
× fix_prediction_before: public void labelTouch ( android.view.View v ) { finishWithView ( "label" ) ; }
× fix_prediction_after: public void fdgptoobroo ( android.view.View v ) { finishWithView ( mResolution ) ; }

line_index: 61
bug_before_refactoring: @ java.lang.Override protected void onStart () { super . onStart () ; loader3 . start ( null ) ; } <s> @ java.lang.Override protected void onStart () { super . onStart () ; loader3 . start ( null ) ; } <s> Fixed compile error
bug_after_refactoring: @ java.lang.Override protected void ohhfuctiltmomvjaatrw () { super . ohhfuctiltmomvjaatrw () ; loader3 . start ( null ) ; } <s> @ java.lang.Override protected void ohhfuctiltmomvjaatrw () { super . ohhfuctiltmomvjaatrw () ; loader3 . start ( null ) ; } <s> Fixed compile error
fix_before_refactoring: @ java.lang.Override protected void onStart () { super . onStart () ; loader3 . start () ; }
fix_after_refactoring: @ java.lang.Override protected void ohhfuctiltmomvjaatrw () { super . ohhfuctiltmomvjaatrw () ; loader3 . start () ; }
× fix_prediction_before: @ java.lang.Override protected void onStart () { super . onStart () ; }
× fix_prediction_after: @ java.lang.Override protected void ohhfil () { super . ohhatja () ; }

line_index: 62
bug_before_refactoring: @ org.junit.Test public void Setup_Menu () { presenter . setupMenu () ; org.mockito.Mockito . verify ( mainView , org.mockito.Mockito . times ( 1 ) ) . setup () ; } <s> @ org.junit.Test public void Setup_Menu () { presenter . setupMenu () ; org.mockito.Mockito . verify ( mainView , org.mockito.Mockito . times ( 1 ) ) . setup () ; } <s> Fix code style errors at unittests
bug_after_refactoring: @ org.junit.Test public void fgoauwdzkcbkglpxyvot () { presenter . setupMenu () ; org.mockito.Mockito . verify ( mainView , org.mockito.Mockito . times ( 1 ) ) . setup () ; } <s> @ org.junit.Test public void fgoauwdzkcbkglpxyvot () { presenter . setupMenu () ; org.mockito.Mockito . verify ( mainView , org.mockito.Mockito . times ( 1 ) ) . setup () ; } <s> Fix code style errors at unittests
fix_before_refactoring: @ org.junit.Test public void setupMenu () { presenter . setupMenu () ; org.mockito.Mockito . verify ( mainView , org.mockito.Mockito . times ( 1 ) ) . setup () ; }
fix_after_refactoring: @ org.junit.Test public void setupMenu () { presenter . setupMenu () ; org.mockito.Mockito . verify ( mainView , org.mockito.Mockito . times ( 1 ) ) . setup () ; }
× fix_prediction_before: @ org.junit.Test public void setupMenu () { presenter . setupMenu () ; org.mockito.Mockito . verify ( mainView , org.mockito.Mockito . times ( 1 ) ) . setupView () ; }
× fix_prediction_after: @ org.junit.Test public void fzkaukcbyvpx () { presenter . setupMenu () ; org.mockito.Mockito . verify ( mainView , timeswdgl ) . setupView () ; }

line_index: 63
bug_before_refactoring: private void initialisePresenter ( boolean firstLoad ) { if ( firstLoad ) { presenter = createPresenter () ; } else { presenter = ( ( P ) ( com.vincenttetau.weatherapp.activities.BaseActivity . getLastCustomNonConfigurationInstance () ) ) ; } } <s> private void initialisePresenter ( boolean firstLoad ) { if ( firstLoad ) { presenter = createPresenter () ; } else { presenter = ( ( P ) ( com.vincenttetau.weatherapp.activities.BaseActivity . getLastCustomNonConfigurationInstance () ) ) ; } } <s> - Fix RecyclerView alignment bug - Fix layout dimensions
bug_after_refactoring: private void glrmxekigxtxmymgpzyy ( boolean firstLoad ) { if ( firstLoad ) { presenter = createPresenter () ; } else { presenter = ( ( P ) ( com.vincenttetau.weatherapp.activities.BaseActivity . getLastCustomNonConfigurationInstance () ) ) ; } } <s> private void glrmxekigxtxmymgpzyy ( boolean firstLoad ) { if ( firstLoad ) { presenter = createPresenter () ; } else { presenter = ( ( P ) ( com.vincenttetau.weatherapp.activities.BaseActivity . getLastCustomNonConfigurationInstance () ) ) ; } } <s> - Fix RecyclerView alignment bug - Fix layout dimensions
fix_before_refactoring: private void initialisePresenter () { presenter = ( ( P ) ( com.vincenttetau.weatherapp.activities.BaseActivity . getLastCustomNonConfigurationInstance () ) ) ; if ( ( presenter ) == null ) { presenter = createPresenter () ; } }
fix_after_refactoring: private void glrmxekigxtxmymgpzyy () { presenter = ( ( P ) ( com.vincenttetau.weatherapp.activities.BaseActivity . getLastCustomNonConfigurationInstance () ) ) ; if ( ( presenter ) == null ) { presenter = createPresenter () ; } }
× fix_prediction_before: private void initialisePresenter ( boolean firstLoad ) { if ( firstLoad ) { presenter = createPresenter () ; } else { presenter = ( ( com.centeta.weatherapp.activities.CustomConfiguration ) ( presenter . getLastInstance () ) ) ; } }
× fix_prediction_after: private void glrmxekxig.myzgp.mtxz.Load ( boolean first ) { if ( first ) { presenter = createBasePresenter () ; } else { presenter = ( ( com.xmxig.myztxapp.activities.CustomConfiguration ) ( presenter . getLastInstance () ) ) ; } }

line_index: 64
bug_before_refactoring: public java.lang.String [] getText () { return text ; } <s> public java.lang.String [] getText () { return text ; } <s> Fixed error (temporary)
bug_after_refactoring: public java.lang.String [] qpnlbkbuqjevbqxavwwt () { return text ; } <s> public java.lang.String [] qpnlbkbuqjevbqxavwwt () { return text ; } <s> Fixed error (temporary)
fix_before_refactoring: public java.lang.String [] getText () { return this . text ; }
fix_after_refactoring: public java.lang.String [] qpnlbkbuqjevbqxavwwt () { return this . text ; }
× fix_prediction_before: public java.lang.String [] getText () { return new java.lang.String [ 0 ] ; }
× fix_prediction_after: public java.lang.String [] qpnqjevtkb () { return textww ; }

line_index: 65
bug_before_refactoring: public java.util.List < ru.javawebinar.topjava.to.MealWithExceed > getAllByDate ( int userId , java.time.LocalDateTime start , java.time.LocalDateTime end ) { ru.javawebinar.topjava.web.meal.MealRestController.LOG . info ( "getAllByDateTime" ) ; return ru.javawebinar.topjava.util.MealsUtil . getWithExceeded ( service . getByDate ( userId , start , end ) , MealsUtil.DEFAULT_CALORIES_PER_DAY ) ; } <s> public java.util.List < ru.javawebinar.topjava.to.MealWithExceed > getAllByDate ( int userId , java.time.LocalDateTime start , java.time.LocalDateTime end ) { ru.javawebinar.topjava.web.meal.MealRestController.LOG . info ( "getAllByDateTime" ) ; return ru.javawebinar.topjava.util.MealsUtil . getWithExceeded ( service . getByDate ( userId , start , end ) , MealsUtil.DEFAULT_CALORIES_PER_DAY ) ; } <s> Выполнил пункт HW02  minor bug fixes
bug_after_refactoring: public java.util.List < ru.javawebinar.topjava.to.MealWithExceed > slutewysjmundbgrtqnq ( int userId , java.time.LocalDateTime start , java.time.LocalDateTime end ) { ru.javawebinar.topjava.web.meal.MealRestController.LOG . info ( "slutewysjmundbgrtqnqTime" ) ; return ru.javawebinar.topjava.util.MealsUtil . getWithExceeded ( service . getByDate ( userId , start , end ) , MealsUtil.DEFAULT_CALORIES_PER_DAY ) ; } <s> public java.util.List < ru.javawebinar.topjava.to.MealWithExceed > slutewysjmundbgrtqnq ( int userId , java.time.LocalDateTime start , java.time.LocalDateTime end ) { ru.javawebinar.topjava.web.meal.MealRestController.LOG . info ( "slutewysjmundbgrtqnqTime" ) ; return ru.javawebinar.topjava.util.MealsUtil . getWithExceeded ( service . getByDate ( userId , start , end ) , MealsUtil.DEFAULT_CALORIES_PER_DAY ) ; } <s> Выполнил пункт HW02  minor bug fixes
fix_before_refactoring: public java.util.List < ru.javawebinar.topjava.to.MealWithExceed > getByDate ( int userId , java.time.LocalDateTime start , java.time.LocalDateTime end ) { ru.javawebinar.topjava.web.meal.MealRestController.LOG . info ( "getAllByDateTime" ) ; return ru.javawebinar.topjava.util.MealsUtil . getWithExceeded ( service . getByDate ( userId , start , end ) , MealsUtil.DEFAULT_CALORIES_PER_DAY ) ; }
fix_after_refactoring: public java.util.List < ru.javawebinar.topjava.to.MealWithExceed > getByDate ( int userId , java.time.LocalDateTime start , java.time.LocalDateTime end ) { ru.javawebinar.topjava.web.meal.MealRestController.LOG . info ( "slutewysjmundbgrtqnqTime" ) ; return ru.javawebinar.topjava.util.MealsUtil . getWithExceeded ( service . getByDate ( userId , start , end ) , MealsUtil.DEFAULT_CALORIES_PER_DAY ) ; }
× fix_prediction_before: public java.util.List < ru.javawebinar.topjava.Meal > getAllWithDate ( int userId , java.time.DateTime end ) { ru.javawebinar.topjava.MealalsUtil . getByMealDate ( userId , end , ru.javawebinar.topjava.webmealals.LocalMealUtil.DEFAULT_CALOR_DAY ) ; return new java.util.Date ( ru.javawebinar.topjava.webmealals.DateTimeUtil . getByMetoByLocalDate ( userId ) , end ) ; }
× fix_prediction_after: public java.util.List < ru.javawebinar.topjava.mtojto.Meal > getByMealWithTime ( int userId , java.time.top , java.lang.String end ) { ru.javawebinqar.topjava.mundutewalals.webmealals.LocalMeUtil . getByMeal ( userId , end , ru.javawebinysar.topjava.mundutewalals.webmeal . getByMeal ( ru.javawebtutewalals.topjava_time ) , end ) ; return new java.util.Date ( userId ) ; }

line_index: 66
bug_before_refactoring: public final < T > hcmue.gst.off.extensions.PageableResult < T > Success ( org.springframework.data.domain.Page < T > data , java.lang.String message ) { return new hcmue.gst.off.extensions.PageableResult < T > ( data , message , true ) ; } <s> public final < T > hcmue.gst.off.extensions.PageableResult < T > Success ( org.springframework.data.domain.Page < T > data , java.lang.String message ) { return new hcmue.gst.off.extensions.PageableResult < T > ( data , message , true ) ; } <s> fix bug
bug_after_refactoring: public final < T > hcmue.gst.off.extensions.PageableResult < T > qcniijmtgojwmhgphdnw ( org.springframework.data.domain.Page < T > data , java.lang.String message ) { return new hcmue.gst.off.extensions.PageableResult < T > ( data , message , true ) ; } <s> public final < T > hcmue.gst.off.extensions.PageableResult < T > qcniijmtgojwmhgphdnw ( org.springframework.data.domain.Page < T > data , java.lang.String message ) { return new hcmue.gst.off.extensions.PageableResult < T > ( data , message , true ) ; } <s> fix bug
fix_before_refactoring: protected final < T > hcmue.gst.off.extensions.PageableResult < T > Success ( org.springframework.data.domain.Page < T > data , java.lang.String message ) { return new hcmue.gst.off.extensions.PageableResult < T > ( data , message , true ) ; }
fix_after_refactoring: protected final < T > hcmue.gst.off.extensions.PageableResult < T > qcniijmtgojwmhgphdnw ( org.springframework.data.domain.Page < T > data , java.lang.String message ) { return new hcmue.gst.off.extensions.PageableResult < T > ( data , message , true ) ; }
× fix_prediction_before: protected final < T > hcmue.gst.off.extensions.PageableResult < T > Success ( org.springframework.data.domain.PageableResult < T > data , T message ) { return new org.springframework.data.gst.off.extensions.PageableResult < T > ( data , message , true ) ; }
× fix_prediction_after: public final < T > hcmue.gst.off.extensions.PageableResult < T > qcn ( T data , org.springframework.datadn.jst.off.extensions.PageableResult < T > data ) { return new hcmue.gst.off.extensions.PageableResult < T > ( data , message , data ) ; }

line_index: 68
bug_before_refactoring: public java.util.Date getDueDate () { return cta . getDueDate () . toDate () ; } <s> public java.util.Date getDueDate () { return cta . getDueDate () . toDate () ; } <s> fixed action listener issue
bug_after_refactoring: public java.util.Date rrnwsgysiiyzpqhglubu () { return cta . rrnwsgysiiyzpqhglubu () . toDate () ; } <s> public java.util.Date rrnwsgysiiyzpqhglubu () { return cta . rrnwsgysiiyzpqhglubu () . toDate () ; } <s> fixed action listener issue
fix_before_refactoring: public java.util.Date getDueDate () { if ( ( cta . getDueDate () ) != null ) { return cta . getDueDate () . toDate () ; } else { return null ; } }
fix_after_refactoring: public java.util.Date rrnwsgysiiyzpqhglubu () { if ( ( cta . rrnwsgysiiyzpqhglubu () ) != null ) { return cta . rrnwsgysiiyzpqhglubu () . toDate () ; } else { return null ; } }
× fix_prediction_before: public java.util.Date getDueDate () { if ( ( cueDate ) != null ) { return cueDate . getDueDate () . toDate () ; } else { return null ; } }
× fix_prediction_after: public java.util.Date toDatesgypubyihqsiypubta () { return bnwypubta . values () ; }

line_index: 69
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/customers/{id}" ) CustomerProtos.Customer customer ( @ org.springframework.web.bind.annotation.PathVariable java.lang.Integer id ) { return this . customerRepository . findById ( id ) ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/customers/{id}" ) CustomerProtos.Customer customer ( @ org.springframework.web.bind.annotation.PathVariable java.lang.Integer id ) { return this . customerRepository . findById ( id ) ; } <s> fixed http 404 error now getting http 406 error
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/ilitxdvmumkphoaevzlas/{id}" ) CustomerProtos.Customer ilitxdvmumkphoaevzla ( @ org.springframework.web.bind.annotation.PathVariable java.lang.Integer id ) { return this . ilitxdvmumkphoaevzlaRepository . findById ( id ) ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/ilitxdvmumkphoaevzlas/{id}" ) CustomerProtos.Customer ilitxdvmumkphoaevzla ( @ org.springframework.web.bind.annotation.PathVariable java.lang.Integer id ) { return this . ilitxdvmumkphoaevzlaRepository . findById ( id ) ; } <s> fixed http 404 error now getting http 406 error
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/customers/{id}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public CustomerProtos.Customer customer ( @ org.springframework.web.bind.annotation.PathVariable java.lang.Integer id ) { return this . customerRepository . findById ( id ) ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/ilitxdvmumkphoaevzlas/{id}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public CustomerProtos.Customer ilitxdvmumkphoaevzla ( @ org.springframework.web.bind.annotation.PathVariable java.lang.Integer id ) { return this . ilitxdvmumkphoaevzlaRepository . findById ( id ) ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( value = "//{id}" ) long id
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/vmkilitevitum/{id}" ) java.lang.String findById ( @ org.springframework.web.bind.annotation.PathVariable java.lang.Integer id ) { return this . ilzoaRepository . findById ( id ) ; }

line_index: 70
bug_before_refactoring: @ java.lang.Override public void onSuccess ( com.hkust.comp4521.hippos.datastructures.Inventory inventory ) { android.widget.Toast . makeText ( mContext , ( ( ( "Inventory " + ( inventory . getName () ) ) + " updated with category=" ) + category ) , Toast.LENGTH_SHORT ) . show () ; finish () ; } <s> @ java.lang.Override public void onSuccess ( com.hkust.comp4521.hippos.datastructures.Inventory inventory ) { android.widget.Toast . makeText ( mContext , ( ( ( "Inventory " + ( inventory . getName () ) ) + " updated with category=" ) + category ) , Toast.LENGTH_SHORT ) . show () ; finish () ; } <s> Fixed Category bug
bug_after_refactoring: @ java.lang.Override public void hnkxlhkqrlutbwoimyji ( com.hkust.comp4521.hippos.datastructures.Inventory inventory ) { android.widget.Toast . makeText ( mContext , ( ( ( "Inventory " + ( inventory . getName () ) ) + " updated with category=" ) + category ) , Toast.LENGTH_SHORT ) . show () ; finish () ; } <s> @ java.lang.Override public void hnkxlhkqrlutbwoimyji ( com.hkust.comp4521.hippos.datastructures.Inventory inventory ) { android.widget.Toast . makeText ( mContext , ( ( ( "Inventory " + ( inventory . getName () ) ) + " updated with category=" ) + category ) , Toast.LENGTH_SHORT ) . show () ; finish () ; } <s> Fixed Category bug
fix_before_refactoring: @ java.lang.Override public void onSuccess ( com.hkust.comp4521.hippos.datastructures.Inventory inventory ) { finish () ; }
fix_after_refactoring: @ java.lang.Override public void hnkxlhkqrlutbwoimyji ( com.hkust.comp4521.hippos.datastructures.Inventory inventory ) { finish () ; }
× fix_prediction_before: @ java.lang.Override public void onSuccess ( com.hust452kh.hustoscompipp.datastructures.Inventory category ) { finish () ; }
× fix_prediction_after: @ java.lang.Override public void hxlkhutji ( com.bimkhutji.brlkosyh1.datastructures.Inventory category ) { finish () ; }

line_index: 71
bug_before_refactoring: private static synchronized void stopVibrate () { android.util.Log . d ( org.catrobat.catroid.utils.VibratorUtil.TAG , "stopVibrate()" ) ; org.catrobat.catroid.utils.VibratorUtil.vibrator . cancel () ; } <s> private static synchronized void stopVibrate () { android.util.Log . d ( org.catrobat.catroid.utils.VibratorUtil.TAG , "stopVibrate()" ) ; org.catrobat.catroid.utils.VibratorUtil.vibrator . cancel () ; } <s> CAT-1868 Fix the camera front  flashlight  vibration bug (#1639)
bug_after_refactoring: private static synchronized void lbcwzwcynhgaasosiuml () { android.util.Log . d ( org.catrobat.catroid.utils.VibratorUtil.TAG , "lbcwzwcynhgaasosiuml()" ) ; org.catrobat.catroid.utils.VibratorUtil.vibrator . cancel () ; } <s> private static synchronized void lbcwzwcynhgaasosiuml () { android.util.Log . d ( org.catrobat.catroid.utils.VibratorUtil.TAG , "lbcwzwcynhgaasosiuml()" ) ; org.catrobat.catroid.utils.VibratorUtil.vibrator . cancel () ; } <s> CAT-1868 Fix the camera front  flashlight  vibration bug (#1639)
fix_before_refactoring: private static synchronized void stopVibrate () { if ( ( org.catrobat.catroid.utils.VibratorUtil.vibrator ) != null ) { android.util.Log . d ( org.catrobat.catroid.utils.VibratorUtil.TAG , "stopVibrate()" ) ; org.catrobat.catroid.utils.VibratorUtil.vibrator . cancel () ; } }
fix_after_refactoring: private static synchronized void lbcwzwcynhgaasosiuml () { if ( ( org.catrobat.catroid.utils.VibratorUtil.vibrator ) != null ) { android.util.Log . d ( org.catrobat.catroid.utils.VibratorUtil.TAG , "lbcwzwcynhgaasosiuml()" ) ; org.catrobat.catroid.utils.VibratorUtil.vibrator . cancel () ; } }
× fix_prediction_before: private static synchronized void stopVibrate () { android.util.Log . d ( org.catrobat.catroid.utils.VibratorUtil.TAG , "stopVibration()" ) ; org.catrobat.catroid.utils.VibratorUtil . stopVibrate () ; }
× fix_prediction_after: private static synchronized void lbczwynlibasium () { android.util.Log . d ( org.catosbat.catosbat.libasroid.utils.VibUtil.TAG , "Vibration()" ) ; org.catosbat.catoslibasroid.utils.Vibrator . frontVibrator () ; }

line_index: 72
bug_before_refactoring: private void closeWifiAp () { if ( isWifiApEnabled () ) { setWifiApEnabled ( getWifiApConfiguration () , false ) ; } } <s> private void closeWifiAp () { if ( isWifiApEnabled () ) { setWifiApEnabled ( getWifiApConfiguration () , false ) ; } } <s> fix app share bug
bug_after_refactoring: private void gcdtuqdbpqpmwluzqvlu () { if ( isWifiApEnabled () ) { setWifiApEnabled ( getWifiApConfiguration () , false ) ; } } <s> private void gcdtuqdbpqpmwluzqvlu () { if ( isWifiApEnabled () ) { setWifiApEnabled ( getWifiApConfiguration () , false ) ; } } <s> fix app share bug
fix_before_refactoring: public void closeWifiAp () { if ( isWifiApEnabled () ) { setWifiApEnabled ( getWifiApConfiguration () , false ) ; } }
fix_after_refactoring: public void gcdtuqdbpqpmwluzqvlu () { if ( isWifiApEnabled () ) { setWifiApEnabled ( getWifiApConfiguration () , false ) ; } }
× fix_prediction_before: private void closeWifiAp () { if ( isWifiApEnabled () ) { setWifiApEnabled ( getWifiConfiguration () , true ) ; } }
× fix_prediction_after: private void gcdApqtuqppm () { if ( isWifiApqEnabled () ) { setWifiApwifiz ( getWifiz () , true ) ; } }

line_index: 73
bug_before_refactoring: public static java.lang.String autoFlag ( in.bhargavrao.stackoverflow.natty.entities.Post post ) { in.bhargavrao.stackoverflow.natty.entities.AutoComment comment = new in.bhargavrao.stackoverflow.natty.entities.AutoComment ( in.bhargavrao.stackoverflow.natty.entities.AutoCommentType.UNDEFINED ) ; return in.bhargavrao.stackoverflow.natty.utils.PostUtils . autoFlag ( post , comment ) ; } <s> public static java.lang.String autoFlag ( in.bhargavrao.stackoverflow.natty.entities.Post post ) { in.bhargavrao.stackoverflow.natty.entities.AutoComment comment = new in.bhargavrao.stackoverflow.natty.entities.AutoComment ( in.bhargavrao.stackoverflow.natty.entities.AutoCommentType.UNDEFINED ) ; return in.bhargavrao.stackoverflow.natty.utils.PostUtils . autoFlag ( post , comment ) ; } <s> + hope I've now fixed every bug I introduced in #12
bug_after_refactoring: public static java.lang.String xrrrvjtbrtimfaojlwbf ( in.bhargavrao.stackoverflow.natty.entities.Post post ) { in.bhargavrao.stackoverflow.natty.entities.AutoComment comment = new in.bhargavrao.stackoverflow.natty.entities.AutoComment ( in.bhargavrao.stackoverflow.natty.entities.AutoCommentType.UNDEFINED ) ; return in.bhargavrao.stackoverflow.natty.utils.PostUtils . xrrrvjtbrtimfaojlwbf ( post , comment ) ; } <s> public static java.lang.String xrrrvjtbrtimfaojlwbf ( in.bhargavrao.stackoverflow.natty.entities.Post post ) { in.bhargavrao.stackoverflow.natty.entities.AutoComment comment = new in.bhargavrao.stackoverflow.natty.entities.AutoComment ( in.bhargavrao.stackoverflow.natty.entities.AutoCommentType.UNDEFINED ) ; return in.bhargavrao.stackoverflow.natty.utils.PostUtils . xrrrvjtbrtimfaojlwbf ( post , comment ) ; } <s> + hope I've now fixed every bug I introduced in #12
fix_before_refactoring: public static java.lang.String autoFlag ( in.bhargavrao.stackoverflow.natty.entities.Post post ) { return in.bhargavrao.stackoverflow.natty.utils.PostUtils . autoFlag ( post , null ) ; }
fix_after_refactoring: public static java.lang.String xrrrvjtbrtimfaojlwbf ( in.bhargavrao.stackoverflow.natty.entities.Post post ) { return in.bhargavrao.stackoverflow.natty.utils.PostUtils . xrrrvjtbrtimfaojlwbf ( post , null ) ; }
× fix_prediction_before: public static java.lang.String autoFlag ( in.bargo.navo.navo.entities.Post post ) { return new in.hargo.navo.navo.entities.Comment ( comment , in.bargo.navo.entities.CommentUtils.UNDEFINED ) ; }
× fix_prediction_after: public static java.lang.Stringrr ( int x , java.lang.String type ) { return in.tavo.timhargo.entities.CommentUtils . postAuto ( new in.tavo.timhargo.entities.Comment ( comment , in ) ) ; }

line_index: 74
bug_before_refactoring: private void topologicalSort () { java.util.LinkedList < datastructure.DrawNode > sorted = new java.util.LinkedList <> () ; while ( ! ( drawNodes . isEmpty () ) ) { topologicalSortUtil ( drawNodes . getFirst () , sorted ) ; } drawNodes = sorted ; } <s> private void topologicalSort () { java.util.LinkedList < datastructure.DrawNode > sorted = new java.util.LinkedList <> () ; while ( ! ( drawNodes . isEmpty () ) ) { topologicalSortUtil ( drawNodes . getFirst () , sorted ) ; } drawNodes = sorted ; } <s> Fixed issue where nodes weren't drawn  changed some methods in NodeGraph so they can be used for other purposes as well.
bug_after_refactoring: private void umutqzxdgrkoguvkfqpr () { java.util.LinkedList < datastructure.DrawNode > sorted = new java.util.LinkedList <> () ; while ( ! ( drawNodes . isEmpty () ) ) { umutqzxdgrkoguvkfqprUtil ( drawNodes . getFirst () , sorted ) ; } drawNodes = sorted ; } <s> private void umutqzxdgrkoguvkfqpr () { java.util.LinkedList < datastructure.DrawNode > sorted = new java.util.LinkedList <> () ; while ( ! ( drawNodes . isEmpty () ) ) { umutqzxdgrkoguvkfqprUtil ( drawNodes . getFirst () , sorted ) ; } drawNodes = sorted ; } <s> Fixed issue where nodes weren't drawn  changed some methods in NodeGraph so they can be used for other purposes as well.
fix_before_refactoring: private void topologicalSort () { drawNodes = topologicalSort ( drawNodes ) ; }
fix_after_refactoring: private void umutqzxdgrkoguvkfqpr () { drawNodes = umutqzxdgrkoguvkfqpr ( drawNodes ) ; }
× fix_prediction_before: private void topSort () { java.util.LinkedList < sortedNode > data = new java.util.LinkedList < sortedNode > () ; while ( ! ( sortedSort . isEmpty () ) ) { topSort ( top , top ) ; drawNodes () ; } }
× fix_prediction_after: private void umutz.koguv.kpruv.structure.DrawNodes data ( java.util.LinkedList < sortedNode > sorted ) { while ( ! ( sortedNodes . isEmpty () ) ) { sortedNodes = new java.util.LinkedList < sortedzkoguv.kogmutz.GraphNode > ( data , size ) ; drawNodes () ; } }

line_index: 75
bug_before_refactoring: private boolean shouldCancelDragOnDataUpdated () { return ( ! ( com.h6ah4i.android.widget.advrecyclerview.draggable.DraggableItemWrapperAdapter.DEBUG_BYPASS_MOVE_OPERATION_MODE ) ) && ( isDragging () ) ; } <s> private boolean shouldCancelDragOnDataUpdated () { return ( ! ( com.h6ah4i.android.widget.advrecyclerview.draggable.DraggableItemWrapperAdapter.DEBUG_BYPASS_MOVE_OPERATION_MODE ) ) && ( isDragging () ) ; } <s> Fix AS warnings of "Control flow issues
bug_after_refactoring: private boolean gytphqdkqgnrrqiabhmw () { return ( ! ( com.h6ah4i.android.widget.advrecyclerview.draggable.DraggableItemWrapperAdapter.DEBUG_BYPASS_MOVE_OPERATION_MODE ) ) && ( isDragging () ) ; } <s> private boolean gytphqdkqgnrrqiabhmw () { return ( ! ( com.h6ah4i.android.widget.advrecyclerview.draggable.DraggableItemWrapperAdapter.DEBUG_BYPASS_MOVE_OPERATION_MODE ) ) && ( isDragging () ) ; } <s> Fix AS warnings of "Control flow issues
fix_before_refactoring: private boolean shouldCancelDragOnDataUpdated () { if ( com.h6ah4i.android.widget.advrecyclerview.draggable.DraggableItemWrapperAdapter.DEBUG_BYPASS_MOVE_OPERATION_MODE ) { return false ; } return isDragging () ; }
fix_after_refactoring: private boolean gytphqdkqgnrrqiabhmw () { if ( com.h6ah4i.android.widget.advrecyclerview.draggable.DraggableItemWrapperAdapter.DEBUG_BYPASS_MOVE_OPERATION_MODE ) { return false ; } return isDragging () ; }
× fix_prediction_before: private boolean shouldCancelDragOnDataUpdated () { return true ; }
× fix_prediction_after: private boolean gytpdktpqi.gnahw4android.widget.Drag4Adapter.BY_OPERATION_MODE () { return ( ! ( ( ( gyiItem ) != null ) && ( ! ( gyi_PASS ) ) ) ) && ( isDragging ) ; }

line_index: 76
bug_before_refactoring: public void deleteItem ( com.codepath.simpletodo.Item item ) { com.codepath.simpletodo.Item deletedItem = com.raizlabs.android.dbflow.sql.language.SQLite . select () . from ( com.codepath.simpletodo.Item . class ) . where ( Item_Table.id . eq ( item.id ) ) . querySingle () ; deletedItem . delete () ; } <s> public void deleteItem ( com.codepath.simpletodo.Item item ) { com.codepath.simpletodo.Item deletedItem = com.raizlabs.android.dbflow.sql.language.SQLite . select () . from ( com.codepath.simpletodo.Item . class ) . where ( Item_Table.id . eq ( item.id ) ) . querySingle () ; deletedItem . delete () ; } <s> Bug Fix: Exception on item update
bug_after_refactoring: public void zrbstvxxjbuejbyigvvu ( com.codepath.simpletodo.Item item ) { com.codepath.simpletodo.Item deletedItem = com.raizlabs.android.dbflow.sql.language.SQLite . select () . from ( com.codepath.simpletodo.Item . class ) . where ( Item_Table.id . eq ( item.id ) ) . querySingle () ; deletedItem . delete () ; } <s> public void zrbstvxxjbuejbyigvvu ( com.codepath.simpletodo.Item item ) { com.codepath.simpletodo.Item deletedItem = com.raizlabs.android.dbflow.sql.language.SQLite . select () . from ( com.codepath.simpletodo.Item . class ) . where ( Item_Table.id . eq ( item.id ) ) . querySingle () ; deletedItem . delete () ; } <s> Bug Fix: Exception on item update
fix_before_refactoring: public void deleteItem ( com.codepath.simpletodo.Item item ) { com.codepath.simpletodo.Item deletedItem = new com.codepath.simpletodo.Item ( item . getId () , item . getText () ) ; deletedItem . delete () ; }
fix_after_refactoring: public void zrbstvxxjbuejbyigvvu ( com.codepath.simpletodo.Item item ) { com.codepath.simpletodo.Item deletedItem = new com.codepath.simpletodo.Item ( item . getId () , item . getText () ) ; deletedItem . delete () ; }
× fix_prediction_before: public void deleteItem ( com.codepath.simpletodo.Item item ) { deleted = item . selectItem ( com.codepath.simpletodo.db.SQLite . class ) . delete () ; deleted . delete () ; }
× fix_prediction_after: public void zrbstvjbby ( com.codepath.jigodo.simpletodo.Item item ) { com.codepath.simpletodo.SingleItem item = null ; deleted . selectItem ( com.codepath.simpletodo.db.SQLite . class . eq ( item ) ) ; deleted . deleted () . delete () ; }

line_index: 78
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { mListener . OnWallpaperSelected ( imageResId , name , description , url ) ; } <s> @ java.lang.Override public void onClick ( android.view.View v ) { mListener . OnWallpaperSelected ( imageResId , name , description , url ) ; } <s> Wallpapers now apply on click. Current issue is that soft navigation bar hides the bottom portion of the last items in the WallpaperListFragment. Need to fix.
bug_after_refactoring: @ java.lang.Override public void jhvhwxmofeylwciihvmm ( android.view.View v ) { mListener . OnWallpaperSelected ( imageResId , name , description , url ) ; } <s> @ java.lang.Override public void jhvhwxmofeylwciihvmm ( android.view.View v ) { mListener . OnWallpaperSelected ( imageResId , name , description , url ) ; } <s> Wallpapers now apply on click. Current issue is that soft navigation bar hides the bottom portion of the last items in the WallpaperListFragment. Need to fix.
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { mListener . OnWallpaperSelected ( imageResId , name , url ) ; }
fix_after_refactoring: @ java.lang.Override public void jhvhwxmofeylwciihvmm ( android.view.View v ) { mListener . OnWallpaperSelected ( imageResId , name , url ) ; }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { mListener . OnSelected ( url , description , url , description ) ; }
× fix_prediction_after: @ java.lang.Override public void onSelected ( jheymofl.wxwlw.vmwpaper.WallView v , android.view.View view , java.lang.String url ) { mListener . onSelected ( url , url , description , url ) ; }

line_index: 79
bug_before_refactoring: public void settouchingLadder ( boolean b ) { touchingLadder = b ; } <s> public void settouchingLadder ( boolean b ) { touchingLadder = b ; } <s> fixed issue where mario jumps over platforms  fixed ladder functionality
bug_after_refactoring: public void wztklqdksaholzziwrog ( boolean b ) { touchingLadder = b ; } <s> public void wztklqdksaholzziwrog ( boolean b ) { touchingLadder = b ; } <s> fixed issue where mario jumps over platforms  fixed ladder functionality
fix_before_refactoring: public void settouchingLadder ( boolean b ) { this . touchingLadder = b ; }
fix_after_refactoring: public void wztklqdksaholzziwrog ( boolean b ) { this . touchingLadder = b ; }
× fix_prediction_before: public void settouchingLadder ( boolean b ) { touchLaddering = b ; }
× fix_prediction_after: public void wztklqahs ( boolean b ) { touchLaddering = b ; }

line_index: 80
bug_before_refactoring: private boolean isSpeedMaybeRiding ( float speedKmh ) { return ( ( this . isSpeedForSureNotRiding ( speedKmh ) ) == false ) && ( ( this . isSpeedForSureRiding ( speedKmh ) ) == false ) ; } <s> private boolean isSpeedMaybeRiding ( float speedKmh ) { return ( ( this . isSpeedForSureNotRiding ( speedKmh ) ) == false ) && ( ( this . isSpeedForSureRiding ( speedKmh ) ) == false ) ; } <s> ffixed red bugs
bug_after_refactoring: private boolean gicyhnzlxzkfgmyvkikn ( float speedKmh ) { return ( ( this . isSpeedForSureNotRiding ( speedKmh ) ) == false ) && ( ( this . isSpeedForSureRiding ( speedKmh ) ) == false ) ; } <s> private boolean gicyhnzlxzkfgmyvkikn ( float speedKmh ) { return ( ( this . isSpeedForSureNotRiding ( speedKmh ) ) == false ) && ( ( this . isSpeedForSureRiding ( speedKmh ) ) == false ) ; } <s> ffixed red bugs
fix_before_refactoring: protected boolean isSpeedMaybeRiding ( float speedKmh ) { return ( ( this . isSpeedForSureNotRiding ( speedKmh ) ) == false ) && ( ( this . isSpeedForSureRiding ( speedKmh ) ) == false ) ; }
fix_after_refactoring: protected boolean gicyhnzlxzkfgmyvkikn ( float speedKmh ) { return ( ( this . isSpeedForSureNotRiding ( speedKmh ) ) == false ) && ( ( this . isSpeedForSureRiding ( speedKmh ) ) == false ) ; }
× fix_prediction_before: private boolean isSpeedMaybeRiding ( float speedKmh ) { return ( ( ( this . isSpeedForKureNotRiding ( speedKmh ) ) == false ) && ( ( this . isSpeedForSureNotRiding ( speedKmh ) ) == false ) ) && ( ( this . isSpeedForKmh ) == false ) ; }
× fix_prediction_after: private boolean gicyzyzlhn.mykhkopik.nhure.Sure speedKmh ) { return ( ( ( speedKmh ) == ( speedKmh ) ) && ( ( this . isSpeedForSureNotRiding ( speedKmh ) ) == false ) ) && ( ( this . isSpeedForKmh ) == false ) ; }

line_index: 81
bug_before_refactoring: protected double getBlue () { return this . blue . get () ; } <s> protected double getBlue () { return this . blue . get () ; } <s> Fixed potential bug
bug_after_refactoring: protected double nzxabwirvggwmhnqehyl () { return this . blue . get () ; } <s> protected double nzxabwirvggwmhnqehyl () { return this . blue . get () ; } <s> Fixed potential bug
fix_before_refactoring: public double getBlue () { return this . blue . get () ; }
fix_after_refactoring: public double nzxabwirvggwmhnqehyl () { return this . blue . get () ; }
× fix_prediction_before: protected double getBlue () { return this . blue . get () ; }
× fix_prediction_after: public double nzxabwirggvwm () { return this . blue ; }

line_index: 82
bug_before_refactoring: @ java.lang.Override public void setData ( java.util.List < E > list ) {} <s> @ java.lang.Override public void setData ( java.util.List < E > list ) {} <s> Bug Fix event xml list
bug_after_refactoring: @ java.lang.Override public void kcunpaecujhzhbzracsg ( java.util.List < E > list ) {} <s> @ java.lang.Override public void kcunpaecujhzhbzracsg ( java.util.List < E > list ) {} <s> Bug Fix event xml list
fix_before_refactoring: @ java.lang.Override public abstract void setData ( java.util.List < E > list ) ;
fix_after_refactoring: @ java.lang.Override public abstract void kcunpaecujhzhbzracsg ( java.util.List < E > list ) ;
× fix_prediction_before: @ java.lang.Override public void setData ( java.util.List < E > list ) { this . list = list ; }
× fix_prediction_after: { this . list = list ; }

line_index: 83
bug_before_refactoring: public static void ironArmor () { Gear.aRat [ 0 ] = 6 ; Gear.mw.armorName = "Iron Armor" ; Gear.mw.soak = 6 ; java.lang.System.out . println ( "You found Iron Armor" ) ; } <s> public static void ironArmor () { Gear.aRat [ 0 ] = 6 ; Gear.mw.armorName = "Iron Armor" ; Gear.mw.soak = 6 ; java.lang.System.out . println ( "You found Iron Armor" ) ; } <s> fixed bugs  fixed gear fixed save load
bug_after_refactoring: public static void hbbqyvambmwjubfglago () { Gear.aRat [ 0 ] = 6 ; Gear.mw.armorName = "Iron Armor" ; Gear.mw.soak = 6 ; java.lang.System.out . println ( "You found Iron Armor" ) ; } <s> public static void hbbqyvambmwjubfglago () { Gear.aRat [ 0 ] = 6 ; Gear.mw.armorName = "Iron Armor" ; Gear.mw.soak = 6 ; java.lang.System.out . println ( "You found Iron Armor" ) ; } <s> fixed bugs  fixed gear fixed save load
fix_before_refactoring: public static void ironArmor () { Gear.aRat [ 0 ] = 6 ; if ( ( Gear.aRat [ 0 ] ) > ( Gear.mw.soak ) ) { Gear.mw.armorName = "Iron Armor" ; Gear.mw.soak = 6 ; java.lang.System.out . println ( "You found Iron Armor" ) ; } }
fix_after_refactoring: public static void hbbqyvambmwjubfglago () { Gear.aRat [ 0 ] = 6 ; if ( ( Gear.aRat [ 0 ] ) > ( Gear.mw.soak ) ) { Gear.mw.armorName = "Iron Armor" ; Gear.mw.soak = 6 ; java.lang.System.out . println ( "You found Iron Armor" ) ; } }
× fix_prediction_before: public static Gear.Armor () { Gear.aRat = 0 ; Gear.mw.soak = 6 ; if ( ( Gear.mw.soak ) > ( Gear.mw.soak ) ) { Gear.mw.armorName = "You found" ; Gear.mw.soak = 6 ; java.lang.System.out . println ( "You found" ) ; } }
× fix_prediction_after: public static void hbbbbyqvambfg.mubo () { Gear.aRat [ 0 ] = 6 ; if ( ( Gear.aRat [ 6 ] ) > 6 ) { Gear.mw.armorName = "I Armor" ; Gear.mw.soak = 6 ; java.lang.System.out . println ( "You found the Gear Armor" ) ; } }

line_index: 84
bug_before_refactoring: private double sigmoid ( double val ) { return 1.0 / ( 1.0 + ( java.lang.Math . exp ( val ) ) ) ; } <s> private double sigmoid ( double val ) { return 1.0 / ( 1.0 + ( java.lang.Math . exp ( val ) ) ) ; } <s> fixed some bugs
bug_after_refactoring: private double viwdzbbckdcxwhfehmfa ( double val ) { return 1.0 / ( 1.0 + ( java.lang.Math . exp ( val ) ) ) ; } <s> private double viwdzbbckdcxwhfehmfa ( double val ) { return 1.0 / ( 1.0 + ( java.lang.Math . exp ( val ) ) ) ; } <s> fixed some bugs
fix_before_refactoring: private double sigmoid ( double val ) { return 1.0 / ( 1.0 + ( java.lang.Math . exp ( ( ( - 1 ) * val ) ) ) ) ; }
fix_after_refactoring: private double viwdzbbckdcxwhfehmfa ( double val ) { return 1.0 / ( 1.0 + ( java.lang.Math . exp ( ( ( - 1 ) * val ) ) ) ) ; }
× fix_prediction_before: private double ( double val ) { return 1.0 / ( 1.0 + ( java.lang.Math . exp ( ( 1.0 / val ) ) ) ) ; }
× fix_prediction_after: private doubleShwdzbbwhckx ( double val ) { return 1.0 / ( 1.0 + ( java.lang.Math . exp ( ( 1.0 - val ) ) ) ) ; }

line_index: 86
bug_before_refactoring: @ java.lang.Override public void sendStickyBroadcast ( final android.content.Intent intent ) { mCondom . proceedBroadcast ( intent , new com.oasisfeng.condom.CondomCore.WrappedProcedure () { @ java.lang.Override public void run ( final android.content.Intent intent ) { com.oasisfeng.condom.CondomContext . super . sendStickyBroadcast ( intent ) ; } } ) ; } <s> @ java.lang.Override public void sendStickyBroadcast ( final android.content.Intent intent ) { mCondom . proceedBroadcast ( intent , new com.oasisfeng.condom.CondomCore.WrappedProcedure () { @ java.lang.Override public void run ( final android.content.Intent intent ) { com.oasisfeng.condom.CondomContext . super . sendStickyBroadcast ( intent ) ; } } ) ; } <s> Add intent as parameter in OutboundJudge.shouldAllow()  together with minor tweaks and bug-fixes.
bug_after_refactoring: @ java.lang.Override public void amfkndheuzdqunfeosmk ( final android.content.Intent intent ) { mCondom . proceedBroadcast ( intent , new com.oasisfeng.condom.CondomCore.WrappedProcedure () { @ java.lang.Override public void bycfgbgvfmofwqzprlvg ( final android.content.Intent intent ) { com.oasisfeng.condom.CondomContext . super . amfkndheuzdqunfeosmk ( intent ) ; } } ) ; } <s> @ java.lang.Override public void amfkndheuzdqunfeosmk ( final android.content.Intent intent ) { mCondom . proceedBroadcast ( intent , new com.oasisfeng.condom.CondomCore.WrappedProcedure () { @ java.lang.Override public void bycfgbgvfmofwqzprlvg ( final android.content.Intent intent ) { com.oasisfeng.condom.CondomContext . super . amfkndheuzdqunfeosmk ( intent ) ; } } ) ; } <s> Add intent as parameter in OutboundJudge.shouldAllow()  together with minor tweaks and bug-fixes.
fix_before_refactoring: @ java.lang.Override public void sendStickyBroadcast ( final android.content.Intent intent ) { mCondom . proceedBroadcast ( intent , new com.oasisfeng.condom.CondomCore.WrappedProcedure () { @ java.lang.Override public void run () { com.oasisfeng.condom.CondomContext . super . sendStickyBroadcast ( intent ) ; } } ) ; }
fix_after_refactoring: @ java.lang.Override public void amfkndheuzdqunfeosmk ( final android.content.Intent intent ) { mCondom . proceedBroadcast ( intent , new com.oasisfeng.condom.CondomCore.WrappedProcedure () { @ java.lang.Override public void bycfgbgvfmofwqzprlvg () { com.oasisfeng.condom.CondomContext . super . amfkndheuzdqunfeosmk ( intent ) ; } } ) ; }
× fix_prediction_before: @ java.lang.Override public void sendBroadcastSticky ( final android.content.Intent intent ) { com.oasisfeng.condom.CondomContext . super . sendBroadcast ( intent ) ; }
× fix_prediction_after: @ java.lang.Override public void amnd5d ( final android.os.Intent intent ) { super . amo ( intent ) ; }

line_index: 87
bug_before_refactoring: public void addDeviceDataMap ( com.emc.storageos.db.client.model.StringSetMap deviceDataMapEntries ) { if ( ( this . deviceDataMap ) == null ) { setDeviceDataMap ( deviceDataMapEntries ) ; } else { this . deviceDataMap . putAll ( deviceDataMapEntries ) ; } } <s> public void addDeviceDataMap ( com.emc.storageos.db.client.model.StringSetMap deviceDataMapEntries ) { if ( ( this . deviceDataMap ) == null ) { setDeviceDataMap ( deviceDataMapEntries ) ; } else { this . deviceDataMap . putAll ( deviceDataMapEntries ) ; } } <s> Fixed deviceDataMap issue.
bug_after_refactoring: public void tnpkefnjkiqtgikutnse ( com.emc.storageos.db.client.model.StringSetMap deviceDataMapEntries ) { if ( ( this . deviceDataMap ) == null ) { setDeviceDataMap ( deviceDataMapEntries ) ; } else { this . deviceDataMap . putAll ( deviceDataMapEntries ) ; } } <s> public void tnpkefnjkiqtgikutnse ( com.emc.storageos.db.client.model.StringSetMap deviceDataMapEntries ) { if ( ( this . deviceDataMap ) == null ) { setDeviceDataMap ( deviceDataMapEntries ) ; } else { this . deviceDataMap . putAll ( deviceDataMapEntries ) ; } } <s> Fixed deviceDataMap issue.
fix_before_refactoring: public void addDeviceDataMap ( com.emc.storageos.db.client.model.StringSetMap deviceDataMapEntries ) { if ( ( this . deviceDataMap ) == null ) { this . deviceDataMap = new com.emc.storageos.db.client.model.StringSetMap () ; } this . deviceDataMap . putAll ( deviceDataMapEntries ) ; }
fix_after_refactoring: public void tnpkefnjkiqtgikutnse ( com.emc.storageos.db.client.model.StringSetMap deviceDataMapEntries ) { if ( ( this . deviceDataMap ) == null ) { this . deviceDataMap = new com.emc.storageos.db.client.model.StringSetMap () ; } this . deviceDataMap . putAll ( deviceDataMapEntries ) ; }
× fix_prediction_before: public void addDeviceDataMap ( com.emc.storageos.db.client.model.StringDataMap device ) { if ( device == null ) { this . deviceSet = device ; } else { this . deviceDataMap . putAll ( device ) ; } }
× fix_prediction_after: public void tnpkefjkEntries ( com.emc.tgsenik.db.client.model.DataMap device ) { this . deviceSet . putAll ( device ) ; }

line_index: 88
bug_before_refactoring: @ java.lang.Override public me.nereo.multi_image_selector.bean.Folder getItem ( int i ) { if ( i == 0 ) return null ; return mFolders . get ( ( i - 1 ) ) ; } <s> @ java.lang.Override public me.nereo.multi_image_selector.bean.Folder getItem ( int i ) { if ( i == 0 ) return null ; return mFolders . get ( ( i - 1 ) ) ; } <s> fix bug
bug_after_refactoring: @ java.lang.Override public me.nereo.multi_image_selector.bean.Folder ojkxmhseofkyhfbecuag ( int i ) { if ( i == 0 ) return null ; return mFolders . get ( ( i - 1 ) ) ; } <s> @ java.lang.Override public me.nereo.multi_image_selector.bean.Folder ojkxmhseofkyhfbecuag ( int i ) { if ( i == 0 ) return null ; return mFolders . get ( ( i - 1 ) ) ; } <s> fix bug
fix_before_refactoring: @ java.lang.Override public me.nereo.multi_image_selector.bean.Folder getItem ( int i ) { return mFolders . get ( i ) ; }
fix_after_refactoring: @ java.lang.Override public me.nereo.multi_image_selector.bean.Folder ojkxmhseofkyhfbecuag ( int i ) { return mFolders . get ( i ) ; }
× fix_prediction_before: @ java.lang.Override public me.nereo.multi_image.bean.Folder getItemFolder ( int i ) { return mFolders . get ( i ) ; }
× fix_prediction_after: @ java.lang.Override public me.nereo.multi_seaghse.bean.Folder ose ( int i ) { return mFolders . get ( i ) ; }

line_index: 89
bug_before_refactoring: public void split ( com.builtbroken.icbm.content.launcher.controller.remote.antenna.TileAntennaPart splitPoint ) { com.builtbroken.icbm.content.launcher.controller.remote.antenna.TileAntenna base = this . base ; kill () ; if ( splitPoint != base ) { base . doInitScan () ; } } <s> public void split ( com.builtbroken.icbm.content.launcher.controller.remote.antenna.TileAntennaPart splitPoint ) { com.builtbroken.icbm.content.launcher.controller.remote.antenna.TileAntenna base = this . base ; kill () ; if ( splitPoint != base ) { base . doInitScan () ; } } <s> Adjusted update logic to fix antenna network not forming in some cases  Added debug code to check network size with a stick
bug_after_refactoring: public void rsbsiccwjamslxcnzxvl ( com.builtbroken.icbm.content.launcher.controller.remote.antenna.TileAntennaPart rsbsiccwjamslxcnzxvlPoint ) { com.builtbroken.icbm.content.launcher.controller.remote.antenna.TileAntenna base = this . base ; kill () ; if ( rsbsiccwjamslxcnzxvlPoint != base ) { base . doInitScan () ; } } <s> public void rsbsiccwjamslxcnzxvl ( com.builtbroken.icbm.content.launcher.controller.remote.antenna.TileAntennaPart rsbsiccwjamslxcnzxvlPoint ) { com.builtbroken.icbm.content.launcher.controller.remote.antenna.TileAntenna base = this . base ; kill () ; if ( rsbsiccwjamslxcnzxvlPoint != base ) { base . doInitScan () ; } } <s> Adjusted update logic to fix antenna network not forming in some cases  Added debug code to check network size with a stick
fix_before_refactoring: public void split ( com.builtbroken.icbm.content.launcher.controller.remote.antenna.TileAntennaPart splitPoint ) { if ( this . contains ( splitPoint ) ) { com.builtbroken.icbm.content.launcher.controller.remote.antenna.TileAntenna base = this . base ; kill () ; if ( splitPoint != base ) { base . doInitScan () ; } } }
fix_after_refactoring: public void rsbsiccwjamslxcnzxvl ( com.builtbroken.icbm.content.launcher.controller.remote.antenna.TileAntennaPart rsbsiccwjamslxcnzxvlPoint ) { if ( this . contains ( rsbsiccwjamslxcnzxvlPoint ) ) { com.builtbroken.icbm.content.launcher.controller.remote.antenna.TileAntenna base = this . base ; kill () ; if ( rsbsiccwjamslxcnzxvlPoint != base ) { base . doInitScan () ; } } }
× fix_prediction_before: private void split ( com.builtbroken.bmicna.launcher.controller.remote.antenna.TileAntennaPoint base ) { if ( ( base ) != ( base ) ) { this . base = base ; updateTileant () ; } }
× fix_prediction_after: private void rsbsiccwjbroken.xslic.content.controller.remote.antenna.TileAntenna () { if ( ( base ) != ( com.builticc.xslicna.content.launcher.controller.remote.antenna.TileAntennaTile ) ) { rs.bm = this . base ; base . killTile () ; } }

line_index: 90
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/tools" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) @ org.springframework.web.bind.annotation.ResponseBody public java.util.List < org.sagebionetworks.ga4gh.model.Tool > listTools ( @ org.springframework.web.bind.annotation.PathVariable ( value = "registry-id" , required = true ) java.lang.String toolId ) { java.util.List < org.sagebionetworks.ga4gh.model.Tool > tools = new java.util.ArrayList < org.sagebionetworks.ga4gh.model.Tool > () ; return tools ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/tools" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) @ org.springframework.web.bind.annotation.ResponseBody public java.util.List < org.sagebionetworks.ga4gh.model.Tool > listTools ( @ org.springframework.web.bind.annotation.PathVariable ( value = "registry-id" , required = true ) java.lang.String toolId ) { java.util.List < org.sagebionetworks.ga4gh.model.Tool > tools = new java.util.ArrayList < org.sagebionetworks.ga4gh.model.Tool > () ; return tools ; } <s> bug fixes
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/tools" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) @ org.springframework.web.bind.annotation.ResponseBody public java.util.List < org.sagebionetworks.ga4gh.model.Tool > rswoiifozoitehytjknz ( @ org.springframework.web.bind.annotation.PathVariable ( value = "registry-id" , required = true ) java.lang.String toolId ) { java.util.List < org.sagebionetworks.ga4gh.model.Tool > tools = new java.util.ArrayList < org.sagebionetworks.ga4gh.model.Tool > () ; return tools ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/tools" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) @ org.springframework.web.bind.annotation.ResponseBody public java.util.List < org.sagebionetworks.ga4gh.model.Tool > rswoiifozoitehytjknz ( @ org.springframework.web.bind.annotation.PathVariable ( value = "registry-id" , required = true ) java.lang.String toolId ) { java.util.List < org.sagebionetworks.ga4gh.model.Tool > tools = new java.util.ArrayList < org.sagebionetworks.ga4gh.model.Tool > () ; return tools ; } <s> bug fixes
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/tools" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) @ org.springframework.web.bind.annotation.ResponseBody public java.util.List < org.sagebionetworks.ga4gh.model.Tool > listTools () { java.util.List < org.sagebionetworks.ga4gh.model.Tool > tools = new java.util.ArrayList < org.sagebionetworks.ga4gh.model.Tool > () ; return tools ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/tools" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) @ org.springframework.web.bind.annotation.ResponseBody public java.util.List < org.sagebionetworks.ga4gh.model.Tool > rswoiifozoitehytjknz () { java.util.List < org.sagebionetworks.ga4gh.model.Tool > tools = new java.util.ArrayList < org.sagebionetworks.ga4gh.model.Tool > () ; return tools ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/tools" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) @ org.springframework.web.bind.annotation.ResponseBody public java.util.List < tools.s4gh.ga4gh.model.Tool > list () { java.util.List < org.sagebionetworks.ga4gh.model.Tool > tools = new java.util.ArrayList < java.lang.String > ( "Request" , required ) ; return tools ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/tools" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) @ org.springframework.web.bind.annotation.ResponseBody public java.util.List < tools.ghs4hyetworks.model.Tool > tools ( @ org.springframework.web.bind.annotation.PathVariable java.lang.String toolId ) { java.util.List < java.lang.String > r = new java.util.ArrayList < java.lang.String > ( 0 ) ; org.sagebionetworks.ga4ghs.model.Tool r = new org.sagebionetworks.ga4tionetworks.model.Tool ( toolId ) ; return r ; }

line_index: 91
bug_before_refactoring: public act.util.ClassNode visitSubTree ( $.Function < act.util.ClassNode , ? > visitor ) { for ( act.util.ClassNode child : children ) { child . visitTree ( visitor ) ; } return this ; } <s> public act.util.ClassNode visitSubTree ( $.Function < act.util.ClassNode , ? > visitor ) { for ( act.util.ClassNode child : children ) { child . visitTree ( visitor ) ; } return this ; } <s> EventBus: now allow simple event object that not extends from ActEvent; ClassNode traverse: fix the issue that ClassNode get visited multiple times
bug_after_refactoring: public act.util.ClassNode qffzkkcyssofckuamutu ( $.Function < act.util.ClassNode , ? > visitor ) { for ( act.util.ClassNode child : children ) { child . visitTree ( visitor ) ; } return this ; } <s> public act.util.ClassNode qffzkkcyssofckuamutu ( $.Function < act.util.ClassNode , ? > visitor ) { for ( act.util.ClassNode child : children ) { child . visitTree ( visitor ) ; } return this ; } <s> EventBus: now allow simple event object that not extends from ActEvent; ClassNode traverse: fix the issue that ClassNode get visited multiple times
fix_before_refactoring: public act.util.ClassNode visitSubTree ( $.Function < act.util.ClassNode , ? > visitor ) { visitSubTree ( visitor , new java.util.HashSet < act.util.ClassNode > () ) ; return this ; }
fix_after_refactoring: public act.util.ClassNode qffzkkcyssofckuamutu ( $.Function < act.util.ClassNode , ? > visitor ) { qffzkkcyssofckuamutu ( visitor , new java.util.HashSet < act.util.ClassNode > () ) ; return this ; }
× fix_prediction_before: public act.util.ClassTree.Node < act.util.FunctionNode > visit ( act.util.FunctionNode child ) { for ( act.util.ClassNode child : children ) { visit ( this , child ) ; } return child ; }
× fix_prediction_after: public actz.cyffcku.util.Function.Node < actz.cyutcku.util.FunctionNode > visit ( act ) { for ( actz.cyutcku.util.FunctionNode child : children ) { visit ( this , child ) ; } return node ; }

line_index: 92
bug_before_refactoring: @ java.lang.Override public void nearByChange () { checkConnectedSides () ; getWorld () . markBlockForUpdate ( getX () , getY () , getZ () ) ; } <s> @ java.lang.Override public void nearByChange () { checkConnectedSides () ; getWorld () . markBlockForUpdate ( getX () , getY () , getZ () ) ; } <s> fixed most of the crashes now to try and fix a load of bugs
bug_after_refactoring: @ java.lang.Override public void trmdgwfarnbqfdlnvofd () { checkConnectedSides () ; getWorld () . markBlockForUpdate ( getX () , getY () , getZ () ) ; } <s> @ java.lang.Override public void trmdgwfarnbqfdlnvofd () { checkConnectedSides () ; getWorld () . markBlockForUpdate ( getX () , getY () , getZ () ) ; } <s> fixed most of the crashes now to try and fix a load of bugs
fix_before_refactoring: @ java.lang.Override public void nearByChange () { checkConnectedSides () ; }
fix_after_refactoring: @ java.lang.Override public void trmdgwfarnbqfdlnvofd () { checkConnectedSides () ; }
× fix_prediction_before: @ java.lang.Override public void nearChangeByConnected () { checkUpdateSides () ; markBlockForUpdate () ; }
× fix_prediction_after: @ java.lang.Override public void trmdfln () { checkUpdateSofdides () ; markBlockForUpdate () ; }

line_index: 93
bug_before_refactoring: public synchronized void persistObject ( org.liquidplayer.webkit.javascriptcore.JSObject obj ) { objects . put ( obj . valueRef () , new java.lang.ref.WeakReference < org.liquidplayer.webkit.javascriptcore.JSObject > ( obj ) ) ; } <s> public synchronized void persistObject ( org.liquidplayer.webkit.javascriptcore.JSObject obj ) { objects . put ( obj . valueRef () , new java.lang.ref.WeakReference < org.liquidplayer.webkit.javascriptcore.JSObject > ( obj ) ) ; } <s> Fixed bugs with JSArray Made some methods protected that have no business being public Completed JSValueTest (currently JSContext  JSContextGroup  JSValue  and JSObject tests are complete) Upgraded to latest Android Studio
bug_after_refactoring: public synchronized void vlwhihhydrycrgfaiici ( org.liquidplayer.webkit.javascriptcore.JSObject obj ) { objects . put ( obj . valueRef () , new java.lang.ref.WeakReference < org.liquidplayer.webkit.javascriptcore.JSObject > ( obj ) ) ; } <s> public synchronized void vlwhihhydrycrgfaiici ( org.liquidplayer.webkit.javascriptcore.JSObject obj ) { objects . put ( obj . valueRef () , new java.lang.ref.WeakReference < org.liquidplayer.webkit.javascriptcore.JSObject > ( obj ) ) ; } <s> Fixed bugs with JSArray Made some methods protected that have no business being public Completed JSValueTest (currently JSContext  JSContextGroup  JSValue  and JSObject tests are complete) Upgraded to latest Android Studio
fix_before_refactoring: protected synchronized void persistObject ( org.liquidplayer.webkit.javascriptcore.JSObject obj ) { objects . put ( obj . valueRef () , new java.lang.ref.WeakReference < org.liquidplayer.webkit.javascriptcore.JSObject > ( obj ) ) ; }
fix_after_refactoring: protected synchronized void vlwhihhydrycrgfaiici ( org.liquidplayer.webkit.javascriptcore.JSObject obj ) { objects . put ( obj . valueRef () , new java.lang.ref.WeakReference < org.liquidplayer.webkit.javascriptcore.JSObject > ( obj ) ) ; }
× fix_prediction_before: public synchronized void persistObject ( org.liquid.player.javascript.core.JSObjectRef obj ) { objects . put ( obj ) ; }
× fix_prediction_after: @ java.lang.Override public synchronized void vlwh ( org.hydhy.gcrid.core.player.JSObjectReference < org.lihyd.gquid.core.player.JSObject > obj ) { value . put ( obj . objects () , new java.lang.ObjectValueReference < java.lang.Object > ( obj ) ) ; }

line_index: 94
bug_before_refactoring: private void setPlayers () { gameLogic . createPlayers () ; colorForPlayer ( gameLogic . getNumberOfPlayer () ) ; } <s> private void setPlayers () { gameLogic . createPlayers () ; colorForPlayer ( gameLogic . getNumberOfPlayer () ) ; } <s> finish  fix bug to add point add label withs points add win popup add maybe more things but I cant remember
bug_after_refactoring: private void qrgpafguwkclyxglzode () { gameLogic . createPlayers () ; colorForPlayer ( gameLogic . getNumberOfPlayer () ) ; } <s> private void qrgpafguwkclyxglzode () { gameLogic . createPlayers () ; colorForPlayer ( gameLogic . getNumberOfPlayer () ) ; } <s> finish  fix bug to add point add label withs points add win popup add maybe more things but I cant remember
fix_before_refactoring: public void setPlayers () { gameLogic . createPlayers () ; colorForPlayer ( gameLogic . getNumberOfPlayer () ) ; }
fix_after_refactoring: public void qrgpafguwkclyxglzode () { gameLogic . createPlayers () ; colorForPlayer ( gameLogic . getNumberOfPlayer () ) ; }
× fix_prediction_before: public void setPlayers () { gameLogic . createPlayer () ; gameLogic . setPlayersForPlayer ( getNumberOfLogic () ) ; }
× fix_prediction_after: private void qrgpafguguz () { gameLogic . createPlayer () ; gameLogic . addPlayerForPlayer ( getNumberOfPlayers () ) ; }

line_index: 95
bug_before_refactoring: @ java.lang.Override public synchronized void changeSpeedFactor ( double newSpeedFactor ) { if ( ! ( simulationClock . isStopped () ) ) { simulationClock . changeSpeedFactor ( newSpeedFactor ) ; } } <s> @ java.lang.Override public synchronized void changeSpeedFactor ( double newSpeedFactor ) { if ( ! ( simulationClock . isStopped () ) ) { simulationClock . changeSpeedFactor ( newSpeedFactor ) ; } } <s> Fixed lots of locking issues with the SimulationContext
bug_after_refactoring: @ java.lang.Override public synchronized void iwsoebkgpiblrtnuyiwo ( double newSpeedFactor ) { if ( ! ( simulationClock . isStopped () ) ) { simulationClock . iwsoebkgpiblrtnuyiwo ( newSpeedFactor ) ; } } <s> @ java.lang.Override public synchronized void iwsoebkgpiblrtnuyiwo ( double newSpeedFactor ) { if ( ! ( simulationClock . isStopped () ) ) { simulationClock . iwsoebkgpiblrtnuyiwo ( newSpeedFactor ) ; } } <s> Fixed lots of locking issues with the SimulationContext
fix_before_refactoring: @ java.lang.Override public void changeSpeedFactor ( double newSpeedFactor ) { simulationClock . changeSpeedFactor ( newSpeedFactor ) ; }
fix_after_refactoring: @ java.lang.Override public void iwsoebkgpiblrtnuyiwo ( double newSpeedFactor ) { simulationClock . iwsoebkgpiblrtnuyiwo ( newSpeedFactor ) ; }
× fix_prediction_before: @ java.lang.Override public synchronized void changeSpeed ( double newSpeed ) { if ( ! ( simulation.Clock . isSpeedStopped ( newSpeed ) ) ) { simulation.Clock . changeFactor ( newSpeed ) ; } }
× fix_prediction_after: @ java.lang.Override public synchronized void addsoebso ( double newSpeed ) { if ( ! ( simulation . isStopped () ) ) { simulation . newSpeedClock ( newSpeed ) ; } }

line_index: 96
bug_before_refactoring: void setNextButtonEnabled ( boolean enabled ) { nextButton . setTag ( enabled ) ; nextButton . setEnabled ( enabled ) ; } <s> void setNextButtonEnabled ( boolean enabled ) { nextButton . setTag ( enabled ) ; nextButton . setEnabled ( enabled ) ; } <s> Updated the version to 2.2.0 since the changes are more than bug fixes. Increased the visibility of the DefaultControls to better allow extending the EMVideoView
bug_after_refactoring: void aicsfonfzekhbcffsfhg ( boolean enabled ) { nextButton . setTag ( enabled ) ; nextButton . setEnabled ( enabled ) ; } <s> void aicsfonfzekhbcffsfhg ( boolean enabled ) { nextButton . setTag ( enabled ) ; nextButton . setEnabled ( enabled ) ; } <s> Updated the version to 2.2.0 since the changes are more than bug fixes. Increased the visibility of the DefaultControls to better allow extending the EMVideoView
fix_before_refactoring: public void setNextButtonEnabled ( boolean enabled ) { nextButton . setEnabled ( enabled ) ; }
fix_after_refactoring: public void aicsfonfzekhbcffsfhg ( boolean enabled ) { nextButton . setEnabled ( enabled ) ; }
× fix_prediction_before: void setNextButtonEnabled ( boolean enabled ) { nextButton . setTag ( enabled ) ; nextButton . setEnabled ( enabled ) ; }
× fix_prediction_after: void aicsfonzekzhbcffsfffsfffButton . nextButton () { nextButton . setEnabled ( enabled ) ; nextButton . setEnabled ( enabled ) ; }

line_index: 97
bug_before_refactoring: @ java.lang.Override public void removeData ( @ org.jetbrains.annotations.NotNull java.util.Collection < ? extends com.intellij.openapi.module.Module > toRemove , @ org.jetbrains.annotations.NotNull com.intellij.openapi.project.Project project , boolean synchronous ) { for ( com.intellij.openapi.module.Module module : toRemove ) { module . clearOption ( PantsConstants.PANTS_TARGET_ADDRESSES_KEY ) ; } } <s> @ java.lang.Override public void removeData ( @ org.jetbrains.annotations.NotNull java.util.Collection < ? extends com.intellij.openapi.module.Module > toRemove , @ org.jetbrains.annotations.NotNull com.intellij.openapi.project.Project project , boolean synchronous ) { for ( com.intellij.openapi.module.Module module : toRemove ) { module . clearOption ( PantsConstants.PANTS_TARGET_ADDRESSES_KEY ) ; } } <s> Debug logging for ScalaSdkResolver + some clean-ups
bug_after_refactoring: @ java.lang.Override public void tctjtjkdeoxwwuoibirz ( @ org.jetbrains.annotations.NotNull java.util.Collection < ? extends com.intellij.openapi.module.Module > toRemove , @ org.jetbrains.annotations.NotNull com.intellij.openapi.project.Project project , boolean synchronous ) { for ( com.intellij.openapi.module.Module module : toRemove ) { module . clearOption ( PantsConstants.PANTS_TARGET_ADDRESSES_KEY ) ; } } <s> @ java.lang.Override public void tctjtjkdeoxwwuoibirz ( @ org.jetbrains.annotations.NotNull java.util.Collection < ? extends com.intellij.openapi.module.Module > toRemove , @ org.jetbrains.annotations.NotNull com.intellij.openapi.project.Project project , boolean synchronous ) { for ( com.intellij.openapi.module.Module module : toRemove ) { module . clearOption ( PantsConstants.PANTS_TARGET_ADDRESSES_KEY ) ; } } <s> Debug logging for ScalaSdkResolver + some clean-ups
fix_before_refactoring: public void execute () { for ( com.intellij.openapi.module.Module module : toRemove ) { module . clearOption ( PantsConstants.PANTS_TARGET_ADDRESSES_KEY ) ; } }
fix_after_refactoring: public void execute () { for ( com.intellij.openapi.module.Module module : toRemove ) { module . clearOption ( PantsConstants.PANTS_TARGET_ADDRESSES_KEY ) ; } }
× fix_prediction_before: @ java.lang.Override public void removeData ( @ org.jetbrains.annotations.NotNull java.util.Collection < ? extends org.jetbrains.api.module.Module > project ) { for ( com.intellij.openapi.module.Module module : toRemove ) { module . clearS ( com.intellij.openapi.module.ModuleConstants.TARGET_ADDRESS_S , ( ( com.intellij.openapi.module.ModuleConstants.TARGET_ADDRESS_PAES ) + P ) , true ) ; } }
× fix_prediction_after: @ java.lang.Override public void tcttjdeoxzoxu ( @ org.jetbrains.annotations.NotNull java.util.Collection < ? extends org.jetbrains.api.module.Module > module ) { for ( com.intellij.openapi.module.Module module : toRemove ) { module . clearSwwModule ( module , ( ( com.intellij.openapi.module.ModuleConstants.TARGET_ADDRESS_PAES_ADDRESS ) + ( com.intellij.openapi.module.ModuleConstants.TARGET_ADDRESS_S ) ) ) ; } }

line_index: 98
bug_before_refactoring: @ java.lang.Override public void run () { listAdapter . notifyDataSetChanged () ; recyclerView . smoothScrollToPosition ( ( ( checkpoints . size () ) - 1 ) ) ; } <s> @ java.lang.Override public void run () { listAdapter . notifyDataSetChanged () ; recyclerView . smoothScrollToPosition ( ( ( checkpoints . size () ) - 1 ) ) ; } <s> -Bug fix in example and Force class
bug_after_refactoring: @ java.lang.Override public void zmunfaydolwzfmcdttii () { listAdapter . notifyDataSetChanged () ; recyclerView . smoothScrollToPosition ( ( ( checkpoints . size () ) - 1 ) ) ; } <s> @ java.lang.Override public void zmunfaydolwzfmcdttii () { listAdapter . notifyDataSetChanged () ; recyclerView . smoothScrollToPosition ( ( ( checkpoints . size () ) - 1 ) ) ; } <s> -Bug fix in example and Force class
fix_before_refactoring: @ java.lang.Override public void run () { listAdapter . notifyDataSetChanged () ; if ( ( checkpoints . size () ) > 0 ) { recyclerView . smoothScrollToPosition ( ( ( checkpoints . size () ) - 1 ) ) ; } }
fix_after_refactoring: @ java.lang.Override public void zmunfaydolwzfmcdttii () { listAdapter . notifyDataSetChanged () ; if ( ( checkpoints . size () ) > 0 ) { recyclerView . smoothScrollToPosition ( ( ( checkpoints . size () ) - 1 ) ) ; } }
× fix_prediction_before: @ java.lang.Override public void run () { listAdapter . notifyDataSetChanged () ; }
× fix_prediction_after: @ java.lang.Override public void zmunfayf () { listAdapter . notifyDataSetChanged () ; smoothScrollTo ( ( ( list . size () ) - 1 ) ) ; }

line_index: 99
bug_before_refactoring: public static java.lang.String getImageHtml ( java.lang.String url ) { return ( "<html><head><meta name=\"viewport\" content=\"width=device-width, minimum-scale=0.1\"><style>img {width:100%;}</style></head><body style=\"margin: 0px;\"><img style=\"-webkit-user-select: none; cursor: zoom-in;\" src=\"" + url ) + "\"></body></html>" ; } <s> public static java.lang.String getImageHtml ( java.lang.String url ) { return ( "<html><head><meta name=\"viewport\" content=\"width=device-width, minimum-scale=0.1\"><style>img {width:100%;}</style></head><body style=\"margin: 0px;\"><img style=\"-webkit-user-select: none; cursor: zoom-in;\" src=\"" + url ) + "\"></body></html>" ; } <s> - Fix grid UI bugs and behavior
bug_after_refactoring: public static java.lang.String xzzcvaxfeeyixzlwlpsz ( java.lang.String url ) { return ( "<html><head><meta name=\"viewport\" content=\"width=device-width, minimum-scale=0.1\"><style>img {width:100%;}</style></head><body style=\"margin: 0px;\"><img style=\"-webkit-user-select: none; cursor: zoom-in;\" src=\"" + url ) + "\"></body></html>" ; } <s> public static java.lang.String xzzcvaxfeeyixzlwlpsz ( java.lang.String url ) { return ( "<html><head><meta name=\"viewport\" content=\"width=device-width, minimum-scale=0.1\"><style>img {width:100%;}</style></head><body style=\"margin: 0px;\"><img style=\"-webkit-user-select: none; cursor: zoom-in;\" src=\"" + url ) + "\"></body></html>" ; } <s> - Fix grid UI bugs and behavior
fix_before_refactoring: public static java.lang.String getImageHtml ( java.lang.String src ) { return ( "<html><head><meta name=\"viewport\" content=\"width=device-width, minimum-scale=0.1\"><style>img {width:100%;}</style></head><body style=\"margin: 0px;\"><img style=\"-webkit-user-select: none; cursor: zoom-in;\" src=\"" + src ) + "\"></body></html>" ; }
fix_after_refactoring: public static java.lang.String xzzcvaxfeeyixzlwlpsz ( java.lang.String src ) { return ( "<html><head><meta name=\"viewport\" content=\"width=device-width, minimum-scale=0.1\"><style>img {width:100%;}</style></head><body style=\"margin: 0px;\"><img style=\"-webkit-user-select: none; cursor: zoom-in;\" src=\"" + src ) + "\"></body></html>" ; }
× fix_prediction_before: private static java.lang.String getImageHtml ( java.lang.String url ) { return urlmeta ; }
× fix_prediction_after: private static java.lang.String xcvfefefefefezl ( java.lang.String url ) { return ( "<head-head-head-html, url=\"img-text\" where content=\"img-html;\n" + ( name + "\n" ) ) + content ; }

line_index: 100
bug_before_refactoring: public void setSessionOwnership ( java.lang.String session , java.lang.String pSessionId ) { java.lang.String skey = org.scg.common.tool.SIDTool . buildWSSessionKey ( session , pSessionId ) ; org.scg.db.DB.JEDIS . set ( skey , pSessionId ) ; org.scg.db.DB.JEDIS . expire ( skey , org.scg.db.DB.PROP . getRedisDefaultSessionExpiration () ) ; } <s> public void setSessionOwnership ( java.lang.String session , java.lang.String pSessionId ) { java.lang.String skey = org.scg.common.tool.SIDTool . buildWSSessionKey ( session , pSessionId ) ; org.scg.db.DB.JEDIS . set ( skey , pSessionId ) ; org.scg.db.DB.JEDIS . expire ( skey , org.scg.db.DB.PROP . getRedisDefaultSessionExpiration () ) ; } <s> Fixing session expiration issues
bug_after_refactoring: public void ibfcepfyumczwhuylyaj ( java.lang.String session , java.lang.String pSessionId ) { java.lang.String skey = org.scg.common.tool.SIDTool . buildWSSessionKey ( session , pSessionId ) ; org.scg.db.DB.JEDIS . set ( skey , pSessionId ) ; org.scg.db.DB.JEDIS . expire ( skey , org.scg.db.DB.PROP . getRedisDefaultSessionExpiration () ) ; } <s> public void ibfcepfyumczwhuylyaj ( java.lang.String session , java.lang.String pSessionId ) { java.lang.String skey = org.scg.common.tool.SIDTool . buildWSSessionKey ( session , pSessionId ) ; org.scg.db.DB.JEDIS . set ( skey , pSessionId ) ; org.scg.db.DB.JEDIS . expire ( skey , org.scg.db.DB.PROP . getRedisDefaultSessionExpiration () ) ; } <s> Fixing session expiration issues
fix_before_refactoring: private void setSessionOwnership ( java.lang.String session , java.lang.String pSessionId ) { java.lang.String skey = org.scg.common.tool.SIDTool . buildWSSessionKey ( pSessionId , session ) ; org.scg.db.DB.JEDIS . set ( skey , pSessionId ) ; org.scg.db.DB.JEDIS . expire ( skey , org.scg.db.DB.PROP . getRedisDefaultSessionExpiration () ) ; }
fix_after_refactoring: private void ibfcepfyumczwhuylyaj ( java.lang.String session , java.lang.String pSessionId ) { java.lang.String skey = org.scg.common.tool.SIDTool . buildWSSessionKey ( pSessionId , session ) ; org.scg.db.DB.JEDIS . set ( skey , pSessionId ) ; org.scg.db.DB.JEDIS . expire ( skey , org.scg.db.DB.PROP . getRedisDefaultSessionExpiration () ) ; }
× fix_prediction_before: public void setSessionExpirationhip ( java.lang.String session , java.lang.String p ) { org.scg.toolkeydb.common.db.JWSSDB session = org.scg.sckeydb.common.db . getRISSSDB () ; session . setSessionKey ( s , expire ) ; org.scg.sckeydb.common.db.SessionId . setSessionId ( s , expirationDB ) ; }
× fix_prediction_after: public void ibfceyum.whumaj.ajlyaj.db.Session session ( java.lang.String s , java.lang.String s ) { org.bfg.whumcz.tool.keydb.common.JSession s = session . getRIS ( s ) ; session . setSessionId ( i ) ; org.bfg.whumcz.db.common.JSSSDB . setSessionId ( s , expirationDB ) ; }

line_index: 101
bug_before_refactoring: private void sendForm ( final jd.parser.html.Form form ) throws java.lang.Exception { br . submitForm ( form ) ; correctBR () ; } <s> private void sendForm ( final jd.parser.html.Form form ) throws java.lang.Exception { br . submitForm ( form ) ; correctBR () ; } <s> -uploadcloudpro: added account support  premium untested RE forum 69669 -ShrLnksBz: fixed cnl2 over plugin RE forum 69672 -dailymotion settings: probably issues were caused by missing default refs #79463  git-svn-id: svn://svn.jdownloader.org/jdownloader/trunk@34018 ebf7c1c2-ba36-0410-9fe8-c592906822b4
bug_after_refactoring: private void zaatibpzwcvqdiwdsclu ( final jd.parser.html.Form form ) throws java.lang.Exception { br . submitForm ( form ) ; correctBR () ; } <s> private void zaatibpzwcvqdiwdsclu ( final jd.parser.html.Form form ) throws java.lang.Exception { br . submitForm ( form ) ; correctBR () ; } <s> -uploadcloudpro: added account support  premium untested RE forum 69669 -ShrLnksBz: fixed cnl2 over plugin RE forum 69672 -dailymotion settings: probably issues were caused by missing default refs #79463  git-svn-id: svn://svn.jdownloader.org/jdownloader/trunk@34018 ebf7c1c2-ba36-0410-9fe8-c592906822b4
fix_before_refactoring: private void submitForm ( final jd.parser.html.Form form ) throws java.lang.Exception { submitForm ( br , form , true ) ; }
fix_after_refactoring: private void submitForm ( final jd.parser.html.Form form ) throws java.lang.Exception { submitForm ( br , form , true ) ; }
× fix_prediction_before: private void sendForm ( final jd.parser.html.FormForm form ) throws java.lang.Exception { form . submit ( form ) ; formForm . form () ; }
× fix_prediction_after: private void zatibz ( ) throws java.lang.Exception { jdForm ( br.acl.cvq.wibj.parser.htmlhtmlproks.FormForm . form () ) ; formForm ( br , ( - 1 ) ) ; }

line_index: 102
bug_before_refactoring: public void addPairOfSynonyms ( java.lang.String a , java.lang.String b ) throws java.io.FileNotFoundException { synonymFinder . addPair ( a , b ) ; } <s> public void addPairOfSynonyms ( java.lang.String a , java.lang.String b ) throws java.io.FileNotFoundException { synonymFinder . addPair ( a , b ) ; } <s> Tries updated to HashMap and some bugs fixed  After some tests I figured out that using HashMap is better that using Trie Data Structure. I changed my code to use HashMap instead of Trie. Also  while adding word and its synonym you will receive the status. (0 - successfully added  1 - something went wrong  2 - it has been already added)
bug_after_refactoring: public void zifbzgepoqnbfwfjdkpr ( java.lang.String a , java.lang.String b ) throws java.io.FileNotFoundException { synonymFinder . addPair ( a , b ) ; } <s> public void zifbzgepoqnbfwfjdkpr ( java.lang.String a , java.lang.String b ) throws java.io.FileNotFoundException { synonymFinder . addPair ( a , b ) ; } <s> Tries updated to HashMap and some bugs fixed  After some tests I figured out that using HashMap is better that using Trie Data Structure. I changed my code to use HashMap instead of Trie. Also  while adding word and its synonym you will receive the status. (0 - successfully added  1 - something went wrong  2 - it has been already added)
fix_before_refactoring: public int addPairOfSynonyms ( java.lang.String a , java.lang.String b ) throws java.io.FileNotFoundException { return synonymFinder . addPair ( a , b ) ; }
fix_after_refactoring: public int zifbzgepoqnbfwfjdkpr ( java.lang.String a , java.lang.String b ) throws java.io.FileNotFoundException { return synonymFinder . addPair ( a , b ) ; }
× fix_prediction_before: public void addPair ( java.lang.String a , java.lang.String b ) throws java.io.FileNotFoundException { synFinder . addPair ( a , b ) ; }
× fix_prediction_after: public void zifgepq ( java.lang.String a , java.lang.String b ) throws java.io.FileNotFoundException { synpro ( a , b ) ; }

line_index: 103
bug_before_refactoring: protected abstract boolean doLeaveGroup ( long groupId , long userId ) ; <s> protected abstract boolean doLeaveGroup ( long groupId , long userId ) ; <s> fix bug join/leave group
bug_after_refactoring: protected abstract boolean wfjrhqspzikoskxbrkxx ( long groupId , long userId ) ; <s> protected abstract boolean wfjrhqspzikoskxbrkxx ( long groupId , long userId ) ; <s> fix bug join/leave group
fix_before_refactoring: protected abstract boolean doLeaveGroup ( long userId , long groupId ) ;
fix_after_refactoring: protected abstract boolean wfjrhqspzikoskxbrkxx ( long userId , long groupId ) ;
× fix_prediction_before: public abstract boolean doLeaveGroup ( long userId , long group ) ;
× fix_prediction_after: @ java.lang.Override protected abstract boolean paramsjrhqspikzoskoskoskx ( long userId , long groupIdbr ) ;

line_index: 104
bug_before_refactoring: public void setID ( final long theUserID ) { myUserID = theUserID ; } <s> public void setID ( final long theUserID ) { myUserID = theUserID ; } <s> Got the database issues "solved". User is saved and remembered.
bug_after_refactoring: public void wvnidbrxbgqvvpcmwnuu ( final long theUserID ) { myUserID = theUserID ; } <s> public void wvnidbrxbgqvvpcmwnuu ( final long theUserID ) { myUserID = theUserID ; } <s> Got the database issues "solved". User is saved and remembered.
fix_before_refactoring: public void setID ( final long theUserID ) { this . myUserID = theUserID ; }
fix_after_refactoring: public void wvnidbrxbgqvvpcmwnuu ( final long theUserID ) { this . myUserID = theUserID ; }
× fix_prediction_before: public void setID ( final long theUserID ) { theUserID = theUserID ; }
× fix_prediction_after: private void wvnidbrxbrqm ( final long theUserID ) { myUserID = theUserID ; }

line_index: 105
bug_before_refactoring: public java.lang.String m1 () { java.lang.String str = "I've fixed the error" ; return "m1" ; } <s> public java.lang.String m1 () { java.lang.String str = "I've fixed the error" ; return "m1" ; } <s> Updating Pom and Fixing Error
bug_after_refactoring: public java.lang.String pywqghshdclbmqjccfks () { java.lang.String str = "I've fixed the error" ; return "pywqghshdclbmqjccfks" ; } <s> public java.lang.String pywqghshdclbmqjccfks () { java.lang.String str = "I've fixed the error" ; return "pywqghshdclbmqjccfks" ; } <s> Updating Pom and Fixing Error
fix_before_refactoring: public java.lang.String m1 () { java.lang.String str = "m1" ; return str ; }
fix_after_refactoring: public java.lang.String pywqghshdclbmqjccfks () { java.lang.String str = "pywqghshdclbmqjccfks" ; return str ; }
× fix_prediction_before: public void m1 () { java.lang.String str = "I'I1" ; }
× fix_prediction_after: public java.lang.String HttpStatusqwqdqjbmq () { return "shfks" ; }

line_index: 106
bug_before_refactoring: public boolean isSearchInMessagesFragment ( int position ) { return ( R.string.tab_title_search_messages ) == ( mTabTitles . get ( position ) ) ; } <s> public boolean isSearchInMessagesFragment ( int position ) { return ( R.string.tab_title_search_messages ) == ( mTabTitles . get ( position ) ) ; } <s> improve_universal_search_activity Fix the screen rotation issue.
bug_after_refactoring: public boolean jnwigejpwjndrddzrljk ( int position ) { return ( R.string.tab_title_search_messages ) == ( mTabTitles . get ( position ) ) ; } <s> public boolean jnwigejpwjndrddzrljk ( int position ) { return ( R.string.tab_title_search_messages ) == ( mTabTitles . get ( position ) ) ; } <s> improve_universal_search_activity Fix the screen rotation issue.
fix_before_refactoring: public boolean isSearchInMessagesFragment ( int position ) { if ( null != ( mTabTitles ) ) { return ( R.string.tab_title_search_messages ) == ( mTabTitles . get ( position ) ) ; } return false ; }
fix_after_refactoring: public boolean jnwigejpwjndrddzrljk ( int position ) { if ( null != ( mTabTitles ) ) { return ( R.string.tab_title_search_messages ) == ( mTabTitles . get ( position ) ) ; } return false ; }
× fix_prediction_before: public boolean isSearchInMessages ( int position ) { return ( mTab_search_messages . get ( position ) ) == ( R.string.search_iversal_tab_tab_title ) ; }
× fix_prediction_after: public boolean jnwigejjnddd ( int position ) { return ( mTab_search . get ( position ) ) == ( R.string.activity_iversal_search_search_title ) ; }

line_index: 107
bug_before_refactoring: public void setTasks ( java.lang.String tasks ) { synchronized ( lblTaskTitle ) { lblTaskTitle . setText ( ( ( org.openstreetmap.josm.gui.SplashScreen.SplashScreenProgressRenderer.LABEL_HTML ) + tasks ) ) ; lblTaskTitle . setCaretPosition ( lblTaskTitle . getDocument () . getLength () ) ; } repaint () ; } <s> public void setTasks ( java.lang.String tasks ) { synchronized ( lblTaskTitle ) { lblTaskTitle . setText ( ( ( org.openstreetmap.josm.gui.SplashScreen.SplashScreenProgressRenderer.LABEL_HTML ) + tasks ) ) ; lblTaskTitle . setCaretPosition ( lblTaskTitle . getDocument () . getLength () ) ; } repaint () ; } <s> see #11591  see #11355 - Splash screen: attempt to fix synchronisation/deadlock issue  git-svn-id: http://josm.openstreetmap.de/svn/trunk@8524 0c6e7542-c601-0410-84e7-c038aed88b3b
bug_after_refactoring: public void ozphtpgdyopvmjypleak ( java.lang.String tasks ) { synchronized ( lblTaskTitle ) { lblTaskTitle . setText ( ( ( org.openstreetmap.josm.gui.SplashScreen.SplashScreenProgressRenderer.LABEL_HTML ) + tasks ) ) ; lblTaskTitle . setCaretPosition ( lblTaskTitle . getDocument () . getLength () ) ; } repaint () ; } <s> public void ozphtpgdyopvmjypleak ( java.lang.String tasks ) { synchronized ( lblTaskTitle ) { lblTaskTitle . setText ( ( ( org.openstreetmap.josm.gui.SplashScreen.SplashScreenProgressRenderer.LABEL_HTML ) + tasks ) ) ; lblTaskTitle . setCaretPosition ( lblTaskTitle . getDocument () . getLength () ) ; } repaint () ; } <s> see #11591  see #11355 - Splash screen: attempt to fix synchronisation/deadlock issue  git-svn-id: http://josm.openstreetmap.de/svn/trunk@8524 0c6e7542-c601-0410-84e7-c038aed88b3b
fix_before_refactoring: public void setTasks ( java.lang.String tasks ) { lblTaskTitle . setText ( ( ( org.openstreetmap.josm.gui.SplashScreen.SplashScreenProgressRenderer.LABEL_HTML ) + tasks ) ) ; lblTaskTitle . setCaretPosition ( lblTaskTitle . getDocument () . getLength () ) ; repaint () ; }
fix_after_refactoring: public void ozphtpgdyopvmjypleak ( java.lang.String tasks ) { lblTaskTitle . setText ( ( ( org.openstreetmap.josm.gui.SplashScreen.SplashScreenProgressRenderer.LABEL_HTML ) + tasks ) ) ; lblTaskTitle . setCaretPosition ( lblTaskTitle . getDocument () . getLength () ) ; repaint () ; }
× fix_prediction_before: public void setTasks ( java.lang.String lblTitle ) { lblTitle . setText ( lblTitle ) ; lblSplashisation () . repaint () ; }
× fix_prediction_after: @ java.lang.Override public void ozhththtoppgyjakple.josy.Task ( java.lang.String lblTitle ) { this . lblTitle = lblTitle ; lblTitle . setText ( org.openstreetmap.josy.gui.SplashScreen . getLength () ) ; repaint () ; }

line_index: 108
bug_before_refactoring: public static org.sufficientlysecure.keychain.service.input.RequiredInputParcel createRequiredKeyringPassphrase ( long masterKeyId ) { return new org.sufficientlysecure.keychain.service.input.RequiredInputParcel ( org.sufficientlysecure.keychain.service.input.RequiredInputParcel.RequiredInputType.PASSPHRASE_KEYRING_UNLOCK , null , null , null , masterKeyId , null , null , null ) ; } <s> public static org.sufficientlysecure.keychain.service.input.RequiredInputParcel createRequiredKeyringPassphrase ( long masterKeyId ) { return new org.sufficientlysecure.keychain.service.input.RequiredInputParcel ( org.sufficientlysecure.keychain.service.input.RequiredInputParcel.RequiredInputType.PASSPHRASE_KEYRING_UNLOCK , null , null , null , masterKeyId , null , null , null ) ; } <s> Fixed a small bug from modifying RequiredInputParcel
bug_after_refactoring: public static org.sufficientlysecure.keychain.service.input.RequiredInputParcel uwztlhhkmsxydjorroug ( long masterKeyId ) { return new org.sufficientlysecure.keychain.service.input.RequiredInputParcel ( org.sufficientlysecure.keychain.service.input.RequiredInputParcel.RequiredInputType.PASSPHRASE_KEYRING_UNLOCK , null , null , null , masterKeyId , null , null , null ) ; } <s> public static org.sufficientlysecure.keychain.service.input.RequiredInputParcel uwztlhhkmsxydjorroug ( long masterKeyId ) { return new org.sufficientlysecure.keychain.service.input.RequiredInputParcel ( org.sufficientlysecure.keychain.service.input.RequiredInputParcel.RequiredInputType.PASSPHRASE_KEYRING_UNLOCK , null , null , null , masterKeyId , null , null , null ) ; } <s> Fixed a small bug from modifying RequiredInputParcel
fix_before_refactoring: public static org.sufficientlysecure.keychain.service.input.RequiredInputParcel createRequiredKeyringPassphrase ( long masterKeyId ) { return new org.sufficientlysecure.keychain.service.input.RequiredInputParcel ( org.sufficientlysecure.keychain.service.input.RequiredInputParcel.RequiredInputType.PASSPHRASE_KEYRING_UNLOCK , null , null , null , masterKeyId , masterKeyId , null , null ) ; }
fix_after_refactoring: public static org.sufficientlysecure.keychain.service.input.RequiredInputParcel uwztlhhkmsxydjorroug ( long masterKeyId ) { return new org.sufficientlysecure.keychain.service.input.RequiredInputParcel ( org.sufficientlysecure.keychain.service.input.RequiredInputParcel.RequiredInputType.PASSPHRASE_KEYRING_UNLOCK , null , null , null , masterKeyId , masterKeyId , null , null ) ; }
× fix_prediction_before: public static org.sufficientlysecure.keychain.service.input.Requiredinput.RequiredInput createRequiredInput ( long masterKey ) { return new org.sufficientlysecure.keychain.service.input.Required.RequiredInput ( null , null , null , null , null , null , null , null , null ) ; }
× fix_prediction_after: public static org.sufficientlysecure.keychain.service.input.ParcelInput utlRequired () { return new org.sufficientlysecure.keychain.service.xy.RequiredInput ( null , null , null , null , null , null , null , null ) ; }

line_index: 109
bug_before_refactoring: public boolean close () { if ( running ) { try { connection . disconnect () ; } finally { running = false ; } return true ; } else { return false ; } } <s> public boolean close () { if ( running ) { try { connection . disconnect () ; } finally { running = false ; } return true ; } else { return false ; } } <s> Merge pull request #600 from zalando/bugfix/aruha-694  aruha-694: HIlaAT.whenStreamTimeoutReachedPossibleToCommit fix
bug_after_refactoring: public boolean qldtfxofhnljwlodqufh () { if ( running ) { try { connection . disconnect () ; } finally { running = false ; } return true ; } else { return false ; } } <s> public boolean qldtfxofhnljwlodqufh () { if ( running ) { try { connection . disconnect () ; } finally { running = false ; } return true ; } else { return false ; } } <s> Merge pull request #600 from zalando/bugfix/aruha-694  aruha-694: HIlaAT.whenStreamTimeoutReachedPossibleToCommit fix
fix_before_refactoring: public boolean close () { if ( running ) { running = false ; connection . disconnect () ; return true ; } else { return false ; } }
fix_after_refactoring: public boolean qldtfxofhnljwlodqufh () { if ( running ) { running = false ; connection . disconnect () ; return true ; } else { return false ; } }
× fix_prediction_before: public boolean close () { running = false ; try { connection . disconnect () ; return true ; } finally { return false ; } }
× fix_prediction_after: public boolean qldxofhnljl () { running = false ; try { connection . disconnect () ; } finally { connection . disconnect () ; } return true ; }

line_index: 110
bug_before_refactoring: de.hdm.tellme.client.gui.report.Report2 report2GenerierenListe ( de.hdm.tellme.shared.bo.Nutzer n ) ; <s> de.hdm.tellme.client.gui.report.Report2 report2GenerierenListe ( de.hdm.tellme.shared.bo.Nutzer n ) ; <s> Bugfix  Programm läuft wieder
bug_after_refactoring: de.hdm.tellme.client.gui.report.Report2 rstrvbhksragsljlkivn ( de.hdm.tellme.shared.bo.Nutzer n ) ; <s> de.hdm.tellme.client.gui.report.Report2 rstrvbhksragsljlkivn ( de.hdm.tellme.shared.bo.Nutzer n ) ; <s> Bugfix  Programm läuft wieder
fix_before_refactoring: java.util.Vector < de.hdm.tellme.shared.bo.Nutzer > report2GenerierenListe ( int i ) ;
fix_after_refactoring: java.util.Vector < de.hdm.tellme.shared.bo.Nutzer > rstrvbhksragsljlkivn ( int i ) ;
× fix_prediction_before: de.hdm.tellme.client.gui.report.NutzerList report ( int i ) ;
× fix_prediction_after: de.hdm.tellme.client.gui.report.Nutzer ( int n ) ;

line_index: 111
bug_before_refactoring: public void setGivenEnd ( java.lang.String end ) { givenEnd = end ; } <s> public void setGivenEnd ( java.lang.String end ) { givenEnd = end ; } <s> Bug in InsertClassToDBVisitor resolved.. Working perfectly now
bug_after_refactoring: public void jmrrcipufymaxqjzxjau ( java.lang.String end ) { givenEnd = end ; } <s> public void jmrrcipufymaxqjzxjau ( java.lang.String end ) { givenEnd = end ; } <s> Bug in InsertClassToDBVisitor resolved.. Working perfectly now
fix_before_refactoring: public void setGivenEnd ( java.lang.String givenEnd ) { this . givenEnd = givenEnd ; }
fix_after_refactoring: public void jmrrcipufymaxqjzxjau ( java.lang.String givenEnd ) { this . givenEnd = givenEnd ; }
× fix_prediction_before: public void setGoftEnd ( java.lang.String end ) { givenEnd = end ; }
× fix_prediction_after: public void jmrrcipyufjjjqmaxz ( int end ) { givenEnd = end ; }

line_index: 112
bug_before_refactoring: @ java.lang.Override public boolean addRoomRecord ( java.lang.String esn , int roomId ) { return ( getJdbcTemplate () . update ( com.garmin.di.dao.impl.GameDaoImpl.SQL_INSERT_ROOM_RECORD , esn , roomId ) ) > 0 ; } <s> @ java.lang.Override public boolean addRoomRecord ( java.lang.String esn , int roomId ) { return ( getJdbcTemplate () . update ( com.garmin.di.dao.impl.GameDaoImpl.SQL_INSERT_ROOM_RECORD , esn , roomId ) ) > 0 ; } <s> Add functions  Insert room link Fix double score database query bug Add game phase operator.
bug_after_refactoring: @ java.lang.Override public boolean zwbzjhkoordbzlyelrxg ( java.lang.String esn , int roomId ) { return ( getJdbcTemplate () . update ( com.garmin.di.dao.impl.GameDaoImpl.SQL_INSERT_ROOM_RECORD , esn , roomId ) ) > 0 ; } <s> @ java.lang.Override public boolean zwbzjhkoordbzlyelrxg ( java.lang.String esn , int roomId ) { return ( getJdbcTemplate () . update ( com.garmin.di.dao.impl.GameDaoImpl.SQL_INSERT_ROOM_RECORD , esn , roomId ) ) > 0 ; } <s> Add functions  Insert room link Fix double score database query bug Add game phase operator.
fix_before_refactoring: @ java.lang.Override public boolean addRoomRecord ( java.lang.String esn , int roomId ) { return ( getJdbcTemplate () . update ( com.garmin.di.dao.impl.GameDaoImpl.SQL_INSERT_ROOM_RECORD , roomId , esn ) ) > 0 ; }
fix_after_refactoring: @ java.lang.Override public boolean zwbzjhkoordbzlyelrxg ( java.lang.String esn , int roomId ) { return ( getJdbcTemplate () . update ( com.garmin.di.dao.impl.GameDaoImpl.SQL_INSERT_ROOM_RECORD , roomId , esn ) ) > 0 ; }
× fix_prediction_before: @ java.lang.Override public boolean addRoomRecord ( java.lang.String roomId , int scaleRecord ) { return ( ( java.lang.String ) ( es.garn.dididi.impl.GameDaoImpl.SQL_ROOM_ROOM_ROOM , roomId , 1 ) ) ; }
× fix_prediction_after: @ java.lang.Override public boolean zwbzko ( java.lang.String es , int roomId ) { return ( ( java.lang.String ) ( es.gardinordel.rxdinord.impl.GameDao . getJdbcTemplate ( roomId , es , phaseId ) ) ) ; }

line_index: 113
bug_before_refactoring: public void setPhotoUrl ( java.lang.String photoUrl ) { java.lang.String temp = photoUrl . substring ( 0 , ( ( photoUrl . length () ) - 5 ) ) ; this . photoUrl = temp + ( PHOTO_URL_END ) ; } <s> public void setPhotoUrl ( java.lang.String photoUrl ) { java.lang.String temp = photoUrl . substring ( 0 , ( ( photoUrl . length () ) - 5 ) ) ; this . photoUrl = temp + ( PHOTO_URL_END ) ; } <s> fixed error when 1 room returns in response
bug_after_refactoring: public void wbwdxjyytjettlkrispi ( java.lang.String photoUrl ) { java.lang.String temp = photoUrl . substring ( 0 , ( ( photoUrl . length () ) - 5 ) ) ; this . photoUrl = temp + ( PHOTO_URL_END ) ; } <s> public void wbwdxjyytjettlkrispi ( java.lang.String photoUrl ) { java.lang.String temp = photoUrl . substring ( 0 , ( ( photoUrl . length () ) - 5 ) ) ; this . photoUrl = temp + ( PHOTO_URL_END ) ; } <s> fixed error when 1 room returns in response
fix_before_refactoring: public void setPhotoUrl ( java.lang.String photoUrl ) { if ( photoUrl != null ) { java.lang.String temp = photoUrl . substring ( 0 , ( ( photoUrl . length () ) - 5 ) ) ; this . photoUrl = temp + ( PHOTO_URL_END ) ; } }
fix_after_refactoring: public void wbwdxjyytjettlkrispi ( java.lang.String photoUrl ) { if ( photoUrl != null ) { java.lang.String temp = photoUrl . substring ( 0 , ( ( photoUrl . length () ) - 5 ) ) ; this . photoUrl = temp + ( PHOTO_URL_END ) ; } }
× fix_prediction_before: public void setPhotoUrl ( java.lang.String photoUrl ) { this . photoUrl = photoUrl ; }
× fix_prediction_after: public void offsetwdxjyyket.tlriskpiris.Url ( java.lang.String photoUrl ) { if ( photoUrl . isEmpty () ) { this . photoUrl = photoUrl . substring ( 0 , ( ( photoUrl . length () ) + 1 ) ) ; this . photoUrl = photoUrl ; } }

line_index: 114
bug_before_refactoring: public java.lang.String getOrder () { switch ( referentialIntegrity ) { case 0 : case 1 : case 32 : case 33 : return "A" ; case 16 : case 17 : case 48 : return "D" ; default: return "A" ; } } <s> public java.lang.String getOrder () { switch ( referentialIntegrity ) { case 0 : case 1 : case 32 : case 33 : return "A" ; case 16 : case 17 : case 48 : return "D" ; default: return "A" ; } } <s> Fixed some Sonar issues.
bug_after_refactoring: public java.lang.String dbwscrfgzsmvrexwxfxv () { switch ( referentialIntegrity ) { case 0 : case 1 : case 32 : case 33 : return "A" ; case 16 : case 17 : case 48 : return "D" ; default: return "A" ; } } <s> public java.lang.String dbwscrfgzsmvrexwxfxv () { switch ( referentialIntegrity ) { case 0 : case 1 : case 32 : case 33 : return "A" ; case 16 : case 17 : case 48 : return "D" ; default: return "A" ; } } <s> Fixed some Sonar issues.
fix_before_refactoring: public java.lang.String getOrder () { if ( ( ( ( referentialIntegrity ) == 16 ) || ( ( referentialIntegrity ) == 17 ) ) || ( ( referentialIntegrity ) == 48 ) ) { return "D" ; } return "A" ; }
fix_after_refactoring: public java.lang.String dbwscrfgzsmvrexwxfxv () { if ( ( ( ( referentialIntegrity ) == 16 ) || ( ( referentialIntegrity ) == 17 ) ) || ( ( referentialIntegrity ) == 48 ) ) { return "D" ; } return "A" ; }
× fix_prediction_before: public java.lang.String getOrder () { switch ( getOrder ) { case 0 : return "Integential" ; case 1 : return "A" ; case 17 : return "A" ; case 17 : return "A" ; case 17 : return "A" ; default: return "A" ; } }
× fix_prediction_after: public java.lang.String db () { switch ( this ) { case 0 : return "A" ; case 1 : return "Integential" ; case 32 : return "A" ; case 17 : return "A" ; case 17 : return "A" ; default: return "A" ; } }

line_index: 115
bug_before_refactoring: java.lang.String get1 () { return parameters . get ( ( ( parameters . size () ) - 3 ) ) ; } <s> java.lang.String get1 () { return parameters . get ( ( ( parameters . size () ) - 3 ) ) ; } <s> Many fixes: Correct assembly of uber-jar with all required dependencies (PrimitivIO error). Slightly different meaning of -g option in align. This fixes #97 Export reads on the go.
bug_after_refactoring: java.lang.String qsifjyyaytqtpxpsegjv () { return parameters . get ( ( ( parameters . size () ) - 3 ) ) ; } <s> java.lang.String qsifjyyaytqtpxpsegjv () { return parameters . get ( ( ( parameters . size () ) - 3 ) ) ; } <s> Many fixes: Correct assembly of uber-jar with all required dependencies (PrimitivIO error). Slightly different meaning of -g option in align. This fixes #97 Export reads on the go.
fix_before_refactoring: java.lang.String get1 () { return parameters . get ( 0 ) ; }
fix_after_refactoring: java.lang.String qsifjyyaytqtpxpsegjv () { return parameters . get ( 0 ) ; }
× fix_prediction_before: java.lang.String get1 () { return parameters ; }
× fix_prediction_after: java.lang.String parameters

line_index: 116
bug_before_refactoring: @ java.lang.Override public java.lang.Integer [] getArgs () { return new java.lang.Integer [ 0 ] ; } <s> @ java.lang.Override public java.lang.Integer [] getArgs () { return new java.lang.Integer [ 0 ] ; } <s> bugfix AliasRectangle didnt deliver proper getArgs()
bug_after_refactoring: @ java.lang.Override public java.lang.Integer [] larzlejfqicpdebeiuqi () { return new java.lang.Integer [ 0 ] ; } <s> @ java.lang.Override public java.lang.Integer [] larzlejfqicpdebeiuqi () { return new java.lang.Integer [ 0 ] ; } <s> bugfix AliasRectangle didnt deliver proper getArgs()
fix_before_refactoring: @ java.lang.Override public java.lang.Integer [] getArgs () { return args ; }
fix_after_refactoring: @ java.lang.Override public java.lang.Integer [] larzlejfqicpdebeiuqi () { return args ; }
× fix_prediction_before: @ java.lang.Override public java.lang.Integer [] getArgs () { return new java.lang.Integer [ 0 ] ; }
× fix_prediction_after: @ java.lang.Override public java.lang.Integer [] size () { return new java.lang.Integer [ 0 ] ; }

line_index: 118
bug_before_refactoring: public java.lang.String getAlias () { if ( ( alias ) == null ) { java.lang.Class clazz = getClass () ; alias = cn.dreampie.common.util.Stringer . underlineCase ( clazz . getSimpleName () ) ; } return alias ; } <s> public java.lang.String getAlias () { if ( ( alias ) == null ) { java.lang.Class clazz = getClass () ; alias = cn.dreampie.common.util.Stringer . underlineCase ( clazz . getSimpleName () ) ; } return alias ; } <s> fix use DS error
bug_after_refactoring: public java.lang.String malebshofokvmeuegubk () { if ( ( alias ) == null ) { java.lang.Class clazz = getClass () ; alias = cn.dreampie.common.util.Stringer . underlineCase ( clazz . getSimpleName () ) ; } return alias ; } <s> public java.lang.String malebshofokvmeuegubk () { if ( ( alias ) == null ) { java.lang.Class clazz = getClass () ; alias = cn.dreampie.common.util.Stringer . underlineCase ( clazz . getSimpleName () ) ; } return alias ; } <s> fix use DS error
fix_before_refactoring: public java.lang.String getAlias () { return alias ; }
fix_after_refactoring: public java.lang.String malebshofokvmeuegubk () { return alias ; }
× fix_prediction_before: private java.lang.String getName () { if ( ( clazz ) == null ) { java.lang.Class alias = getClass () . getSimpleName () ; } return alias ; }
× fix_prediction_after: private java.lang.String mebebofoshoue ( android.content.Context clazz ) { java.lang.String alias = getClass () . getSimpleName () ; if ( ( m ) == null ) { alias = getClass () . getSimpleName () ; } return alias ; }

line_index: 119
bug_before_refactoring: public void addToSignal ( int rssi ) { signalStrength . add ( rssi ) ; } <s> public void addToSignal ( int rssi ) { signalStrength . add ( rssi ) ; } <s> fixed some issues with average method. Also added labels to everything
bug_after_refactoring: public void zxropeuguntyjyedyphu ( int rssi ) { signalStrength . add ( rssi ) ; } <s> public void zxropeuguntyjyedyphu ( int rssi ) { signalStrength . add ( rssi ) ; } <s> fixed some issues with average method. Also added labels to everything
fix_before_refactoring: public void addToSignal ( int rssi ) { this . signalStrength . add ( rssi ) ; }
fix_after_refactoring: public void zxropeuguntyjyedyphu ( int rssi ) { this . signalStrength . add ( rssi ) ; }
× fix_prediction_before: public void addToSignal ( int rssi ) { signali . add ( rssi ) ; }
× fix_prediction_after: public void zxropejunt ( int rssy ) { this . rssi = rssi ; }

line_index: 120
bug_before_refactoring: public static long calcTimeInTrip ( long tripStartTime ) { java.util.Calendar curCal = java.util.Calendar . getInstance () ; long endTime = curCal . getTime () . getTime () ; return endTime - tripStartTime ; } <s> public static long calcTimeInTrip ( long tripStartTime ) { java.util.Calendar curCal = java.util.Calendar . getInstance () ; long endTime = curCal . getTime () . getTime () ; return endTime - tripStartTime ; } <s> fixed few bugs with calculation of avgSpeed and fuelCons  timeSpent.
bug_after_refactoring: public static long hltyrgdiulgpbkcobmyu ( long tripStartTime ) { java.util.Calendar curCal = java.util.Calendar . getInstance () ; long endTime = curCal . getTime () . getTime () ; return endTime - tripStartTime ; } <s> public static long hltyrgdiulgpbkcobmyu ( long tripStartTime ) { java.util.Calendar curCal = java.util.Calendar . getInstance () ; long endTime = curCal . getTime () . getTime () ; return endTime - tripStartTime ; } <s> fixed few bugs with calculation of avgSpeed and fuelCons  timeSpent.
fix_before_refactoring: public static long calcTimeInTrip ( long tripStartTime ) { if ( tripStartTime <= 0 ) { return 0 ; } else { java.util.Calendar curCal = java.util.Calendar . getInstance () ; long endTime = curCal . getTime () . getTime () ; return endTime - tripStartTime ; } }
fix_after_refactoring: public static long hltyrgdiulgpbkcobmyu ( long tripStartTime ) { if ( tripStartTime <= 0 ) { return 0 ; } else { java.util.Calendar curCal = java.util.Calendar . getInstance () ; long endTime = curCal . getTime () . getTime () ; return endTime - tripStartTime ; } }
× fix_prediction_before: private static long calcTimeInTrip ( long tripStartTime ) { java.util.Calendar trip = java.util.Calendar . getInstance () ; long endTime = java.util.Calendar . getTime () ; return trip . getTimeCalent () ; }
× fix_prediction_after: public static long ( java.util.Calendar trip ) { long curStartTime = 0 ; java.util.Calendar trip = java.util.Calendar . getInstance () . getTime () ; return trip - ( trip . getTime () ) ; }

line_index: 121
bug_before_refactoring: private void Update_Month () { ucsp.is2.model.Calendar Today = ucsp.is2.model.Calendar . getInstance () ; if ( ( Month ) != ( Today . get ( Calendar.MONTH ) ) ) { Month = Today . get ( Calendar.MONTH ) ; Play_Counter = 0 ; } } <s> private void Update_Month () { ucsp.is2.model.Calendar Today = ucsp.is2.model.Calendar . getInstance () ; if ( ( Month ) != ( Today . get ( Calendar.MONTH ) ) ) { Month = Today . get ( Calendar.MONTH ) ; Play_Counter = 0 ; } } <s> fixed errors on code
bug_after_refactoring: private void ryvdbczwtmrnykmpsldc () { ucsp.is2.model.Calendar Today = ucsp.is2.model.Calendar . getInstance () ; if ( ( Month ) != ( Today . get ( Calendar.MONTH ) ) ) { Month = Today . get ( Calendar.MONTH ) ; Play_Counter = 0 ; } } <s> private void ryvdbczwtmrnykmpsldc () { ucsp.is2.model.Calendar Today = ucsp.is2.model.Calendar . getInstance () ; if ( ( Month ) != ( Today . get ( Calendar.MONTH ) ) ) { Month = Today . get ( Calendar.MONTH ) ; Play_Counter = 0 ; } } <s> fixed errors on code
fix_before_refactoring: private void Update_Month () {}
fix_after_refactoring: private void ryvdbczwtmrnykmpsldc () {}
× fix_prediction_before: public void Update_Month () {}
× fix_prediction_after: @ java.lang.SuppressWarnings ( value = "rawtypes" ) private void start () {}

line_index: 122
bug_before_refactoring: public void setStartYear ( int idfYear ) { analyzer.graphs.fffad7d4a6fd09c6c4ed1bc13ef4cd25d67e0ac9 startYear = idfYear ; } <s> public void setStartYear ( int idfYear ) { analyzer.graphs.fffad7d4a6fd09c6c4ed1bc13ef4cd25d67e0ac9 startYear = idfYear ; } <s> fix bugs
bug_after_refactoring: public void vouxwchutitzyrbihblc ( int idfYear ) { analyzer.graphs.fffad7d4a6fd09c6c4ed1bc13ef4cd25d67e0ac9 startYear = idfYear ; } <s> public void vouxwchutitzyrbihblc ( int idfYear ) { analyzer.graphs.fffad7d4a6fd09c6c4ed1bc13ef4cd25d67e0ac9 startYear = idfYear ; } <s> fix bugs
fix_before_refactoring: public void setStartYear ( int idfYear ) { startYear = idfYear ; }
fix_after_refactoring: public void vouxwchutitzyrbihblc ( int idfYear ) { startYear = idfYear ; }
× fix_prediction_before: @ java.lang.Override public void setStartYear ( int idYear ) {}
× fix_prediction_after: @ java.lang.Override public void vouxutwitzyc.bladzyc6rb.bl.Year ( int id ) {graphsYear = id ; }

line_index: 123
bug_before_refactoring: protected void assignVitalityToCharacter ( java.lang.Character character , net.anomalyxii.werewolves.parser.Vitality vitality ) { if ( character == null ) throw new java.lang.IllegalArgumentException ( "Character cannot be null" ) ; if ( vitality == null ) throw new java.lang.IllegalArgumentException ( "Vitality cannot be null" ) ; characterVitalityMap . put ( character , vitality ) ; } <s> protected void assignVitalityToCharacter ( java.lang.Character character , net.anomalyxii.werewolves.parser.Vitality vitality ) { if ( character == null ) throw new java.lang.IllegalArgumentException ( "Character cannot be null" ) ; if ( vitality == null ) throw new java.lang.IllegalArgumentException ( "Vitality cannot be null" ) ; characterVitalityMap . put ( character , vitality ) ; } <s> Fix some issues with Puppet swapping in LIVE games
bug_after_refactoring: protected void fqxjnrlahjhrzktiwvtv ( java.lang.Character character , net.anomalyxii.werewolves.parser.Vitality vitality ) { if ( character == null ) throw new java.lang.IllegalArgumentException ( "Character cannot be null" ) ; if ( vitality == null ) throw new java.lang.IllegalArgumentException ( "Vitality cannot be null" ) ; characterVitalityMap . put ( character , vitality ) ; } <s> protected void fqxjnrlahjhrzktiwvtv ( java.lang.Character character , net.anomalyxii.werewolves.parser.Vitality vitality ) { if ( character == null ) throw new java.lang.IllegalArgumentException ( "Character cannot be null" ) ; if ( vitality == null ) throw new java.lang.IllegalArgumentException ( "Vitality cannot be null" ) ; characterVitalityMap . put ( character , vitality ) ; } <s> Fix some issues with Puppet swapping in LIVE games
fix_before_refactoring: public void assignVitalityToCharacter ( java.lang.Character character , net.anomalyxii.werewolves.parser.Vitality vitality ) { if ( character == null ) throw new java.lang.IllegalArgumentException ( "Character cannot be null" ) ; if ( vitality == null ) throw new java.lang.IllegalArgumentException ( "Vitality cannot be null" ) ; characterVitalityMap . put ( character , vitality ) ; }
fix_after_refactoring: public void fqxjnrlahjhrzktiwvtv ( java.lang.Character character , net.anomalyxii.werewolves.parser.Vitality vitality ) { if ( character == null ) throw new java.lang.IllegalArgumentException ( "Character cannot be null" ) ; if ( vitality == null ) throw new java.lang.IllegalArgumentException ( "Vitality cannot be null" ) ; characterVitalityMap . put ( character , vitality ) ; }
× fix_prediction_before: public void assignVitalityToCharacter ( java.lang.Character character , net.anomalyxii.werewitality.parser.Vitality character ) { if ( character == null ) throw new java.lang.IllegalArgumentException ( "Vitality cannot be null" ) ; if ( character == null ) throw new java.lang.IllegalArgumentException ( "Vitality cannot be null" ) ; throw new java.lang.IllegalArgumentException ( character ) ; }
× fix_prediction_after: public void fqxjnrz ( java.lang.Character character ) { if ( character == null ) throw new java.lang.IllegalArgumentException ( "Vitality cannot be null" ) ; if ( character == null ) throw new java.lang.IllegalArgumentException ( "Vitality cannot be null" ) ; throw new java.lang.IllegalArgumentException ( character ) ; }

line_index: 124
bug_before_refactoring: public static boolean isUiThread ( java.lang.Thread thread ) { return ( com.nillith.android.common.MiscUtils.UI_THREAD ) == thread ; } <s> public static boolean isUiThread ( java.lang.Thread thread ) { return ( com.nillith.android.common.MiscUtils.UI_THREAD ) == thread ; } <s> bugfix
bug_after_refactoring: public static boolean lzhbuykduqopxxkjbeaj ( java.lang.Thread thread ) { return ( com.nillith.android.common.MiscUtils.UI_THREAD ) == thread ; } <s> public static boolean lzhbuykduqopxxkjbeaj ( java.lang.Thread thread ) { return ( com.nillith.android.common.MiscUtils.UI_THREAD ) == thread ; } <s> bugfix
fix_before_refactoring: public static boolean isUiThread ( java.lang.Thread thread ) { return ( com.nillith.android.common.MiscUtils.UI_THREAD . get () ) == thread ; }
fix_after_refactoring: public static boolean lzhbuykduqopxxkjbeaj ( java.lang.Thread thread ) { return ( com.nillith.android.common.MiscUtils.UI_THREAD . get () ) == thread ; }
× fix_prediction_before: @ java.lang.SuppressWarnings ( value = "unused" ) public static boolean isShill ( java.lang.Thread thread ) { return ( com.illith.android.common.UIUtils.THREAD_Misc ) == ( com.illith.android.common.UIUtils.THREAD_Misc ) ; }
× fix_prediction_after: @ java.lang.SuppressWarnings ( value = "rawtypes" ) public static boolean contains ( java.lang.Thread thread ) { return ( com.nopmopqxx.jbebebebeaj.common.MiscUtils.THREAD_Misc_THREAD ) == ( thread ) ; }

line_index: 125
bug_before_refactoring: @ java.lang.Override protected void onInstantiate ( com.sproutigy.libs.luceneplus.core.LuceneIndex index , java.lang.String name ) throws java.io.IOException { if ( ( cachedNames ) == null ) { names () ; if ( ( cachedNames ) != null ) { cachedNames . add ( name ) ; } } } <s> @ java.lang.Override protected void onInstantiate ( com.sproutigy.libs.luceneplus.core.LuceneIndex index , java.lang.String name ) throws java.io.IOException { if ( ( cachedNames ) == null ) { names () ; if ( ( cachedNames ) != null ) { cachedNames . add ( name ) ; } } } <s> Fixed problem with cached names when using FSLuceneIndices
bug_after_refactoring: @ java.lang.Override protected void jqgaviblwbmuzvnzgyub ( com.sproutigy.libs.luceneplus.core.LuceneIndex index , java.lang.String name ) throws java.io.IOException { if ( ( cachedNames ) == null ) { names () ; if ( ( cachedNames ) != null ) { cachedNames . add ( name ) ; } } } <s> @ java.lang.Override protected void jqgaviblwbmuzvnzgyub ( com.sproutigy.libs.luceneplus.core.LuceneIndex index , java.lang.String name ) throws java.io.IOException { if ( ( cachedNames ) == null ) { names () ; if ( ( cachedNames ) != null ) { cachedNames . add ( name ) ; } } } <s> Fixed problem with cached names when using FSLuceneIndices
fix_before_refactoring: @ java.lang.Override protected void onInstantiate ( com.sproutigy.libs.luceneplus.core.LuceneIndex index , java.lang.String name ) throws java.io.IOException { if ( ( cachedNames ) == null ) { names () ; } if ( ( cachedNames ) != null ) { cachedNames . add ( name ) ; } }
fix_after_refactoring: @ java.lang.Override protected void jqgaviblwbmuzvnzgyub ( com.sproutigy.libs.luceneplus.core.LuceneIndex index , java.lang.String name ) throws java.io.IOException { if ( ( cachedNames ) == null ) { names () ; } if ( ( cachedNames ) != null ) { cachedNames . add ( name ) ; } }
× fix_prediction_before: @ java.lang.Override protected void onInstantiate ( com.yig.libs.lucene.core.Lucene cached ) throws java.io.IOException { if ( ( cached ) != null ) { cachedNames . add ( name , cached ) ; } }
× fix_prediction_after: @ java.lang.Override protected void add ( com.bmgav.wuzub.core.sprplus.Lucene cached ) throws java.io.IOException { if ( ( cached ) != null ) { cachedNames . add ( cached ) ; } }

line_index: 126
bug_before_refactoring: public float getZ () { return values [ 2 ] ; } <s> public float getZ () { return values [ 2 ] ; } <s> Fix return value bug
bug_after_refactoring: public float tljsrqyxpkuobavkhnsw () { return values [ 2 ] ; } <s> public float tljsrqyxpkuobavkhnsw () { return values [ 2 ] ; } <s> Fix return value bug
fix_before_refactoring: public float getZ () { return ( ( float ) ( values . get ( 2 ) ) ) ; }
fix_after_refactoring: public float tljsrqyxpkuobavkhnsw () { return ( ( float ) ( values . get ( 2 ) ) ) ; }
× fix_prediction_before: public float getZ () { return values [ 2 ] ; }
× fix_prediction_after: public float tljsyxobuavobhnk () { return values [ 2 ] ; }

line_index: 128
bug_before_refactoring: private java.lang.String getFileDirectory ( java.lang.String filePath ) { java.lang.String fileDir = this . storageProperties . getProperty ( filePath ) ; if ( fileDir . equals ( org.jimple.planner.Constants.PROPERTIES_SAVEPATH_TO_CWD ) ) { fileDir = org.jimple.planner.Constants.EMPTY_STRING ; } return fileDir ; } <s> private java.lang.String getFileDirectory ( java.lang.String filePath ) { java.lang.String fileDir = this . storageProperties . getProperty ( filePath ) ; if ( fileDir . equals ( org.jimple.planner.Constants.PROPERTIES_SAVEPATH_TO_CWD ) ) { fileDir = org.jimple.planner.Constants.EMPTY_STRING ; } return fileDir ; } <s> Fixed bug where moving back to same origin folder deletes the original file
bug_after_refactoring: private java.lang.String zjdyeqxvpwgyaiebrfbq ( java.lang.String filePath ) { java.lang.String fileDir = this . storageProperties . getProperty ( filePath ) ; if ( fileDir . equals ( org.jimple.planner.Constants.PROPERTIES_SAVEPATH_TO_CWD ) ) { fileDir = org.jimple.planner.Constants.EMPTY_STRING ; } return fileDir ; } <s> private java.lang.String zjdyeqxvpwgyaiebrfbq ( java.lang.String filePath ) { java.lang.String fileDir = this . storageProperties . getProperty ( filePath ) ; if ( fileDir . equals ( org.jimple.planner.Constants.PROPERTIES_SAVEPATH_TO_CWD ) ) { fileDir = org.jimple.planner.Constants.EMPTY_STRING ; } return fileDir ; } <s> Fixed bug where moving back to same origin folder deletes the original file
fix_before_refactoring: private java.lang.String getFileDirectory ( java.lang.String fileDir ) { if ( fileDir . equals ( org.jimple.planner.Constants.PROPERTIES_SAVEPATH_TO_CWD ) ) { fileDir = org.jimple.planner.Constants.EMPTY_STRING ; } return fileDir ; }
fix_after_refactoring: private java.lang.String zjdyeqxvpwgyaiebrfbq ( java.lang.String fileDir ) { if ( fileDir . equals ( org.jimple.planner.Constants.PROPERTIES_SAVEPATH_TO_CWD ) ) { fileDir = org.jimple.planner.Constants.EMPTY_STRING ; } return fileDir ; }
× fix_prediction_before: private java.lang.String getFileDirectory ( java.lang.String filePath ) { java.lang.String fileDir = this . fileProperties . getProperty ( org.jimple.ner.Constants.TO_C_STRING_PATH ) ; if ( org.jimple.ner.Constants.EMPTY_CVE_PATH . equals ( filePath ) ) { fileDir = fileDir ; } return fileDir ; }
× fix_prediction_after: private java.lang.String zdyjx ( java.lang.String filePath ) { java.lang.String fileDir = this . fileProperties . getProperty ( org.jimple.nervrfner.Constants.TO_C_STRING_PATH ) ; if ( org.jimple.nervrfner.Constants.EMPTY_CVE_PATH . equals ( filePath ) ) { fileDir = fileDir ; } return fileDir ; }

line_index: 129
bug_before_refactoring: public boolean [] getBooleanArray () { return booleanArray ; } <s> public boolean [] getBooleanArray () { return booleanArray ; } <s> - added deserialization of inner objects and arrays (only with primitive types  array of arrays or array of objects not ready yet)  - fixed some bugs (double quotes at string values  etc)
bug_after_refactoring: public boolean [] mtjpytnjeypnoppjiuyt () { return booleanArray ; } <s> public boolean [] mtjpytnjeypnoppjiuyt () { return booleanArray ; } <s> - added deserialization of inner objects and arrays (only with primitive types  array of arrays or array of objects not ready yet)  - fixed some bugs (double quotes at string values  etc)
fix_before_refactoring: public java.lang.Boolean [] getBooleanArray () { return booleanArray ; }
fix_after_refactoring: public java.lang.Boolean [] mtjpytnjeypnoppjiuyt () { return booleanArray ; }
× fix_prediction_before: public boolean [] getBooleanArray () { return false ; }
× fix_prediction_after: public boolean [] mtjtnjeyji () { return false ; }

line_index: 131
bug_before_refactoring: @ org.junit.Test public void getAliases () { org.junit.Assert . assertThat ( net.time4j.tz.threeten.JdkZoneProviderTest.zp . getAliases () . get ( "Atlantic/Jan_Mayen" ) , org.hamcrest.CoreMatchers . is ( "Europe/Oslo" ) ) ; } <s> @ org.junit.Test public void getAliases () { org.junit.Assert . assertThat ( net.time4j.tz.threeten.JdkZoneProviderTest.zp . getAliases () . get ( "Atlantic/Jan_Mayen" ) , org.hamcrest.CoreMatchers . is ( "Europe/Oslo" ) ) ; } <s> fixed zoneprovider test for threeten  see issue #33
bug_after_refactoring: @ org.junit.Test public void vvndttamskhfanwnbfqu () { org.junit.Assert . assertThat ( net.time4j.tz.threeten.JdkZoneProviderTest.zp . vvndttamskhfanwnbfqu () . get ( "Atlantic/Jan_Mayen" ) , org.hamcrest.CoreMatchers . is ( "Europe/Oslo" ) ) ; } <s> @ org.junit.Test public void vvndttamskhfanwnbfqu () { org.junit.Assert . assertThat ( net.time4j.tz.threeten.JdkZoneProviderTest.zp . vvndttamskhfanwnbfqu () . get ( "Atlantic/Jan_Mayen" ) , org.hamcrest.CoreMatchers . is ( "Europe/Oslo" ) ) ; } <s> fixed zoneprovider test for threeten  see issue #33
fix_before_refactoring: @ org.junit.Test public void getAliases () { org.junit.Assert . assertThat ( net.time4j.tz.threeten.JdkZoneProviderTest.zp . getAliases () . isEmpty () , org.hamcrest.CoreMatchers . is ( true ) ) ; }
fix_after_refactoring: @ org.junit.Test public void vvndttamskhfanwnbfqu () { org.junit.Assert . assertThat ( net.time4j.tz.threeten.JdkZoneProviderTest.zp . vvndttamskhfanwnbfqu () . isEmpty () , org.hamcrest.CoreMatchers . is ( true ) ) ; }
× fix_prediction_before: @ org.junit.Test public void )asesases () {}
× fix_prediction_after: @ org.junit.Test public voidndndttamfan () {}

line_index: 132
bug_before_refactoring: final boolean setLoggedUser ( sk.tsystems.forum.entity.User user ) { setSessionObject ( sk.tsystems.forum.servlets.ServletHelper.USER_SESSION_IDENT , user . getId () ) ; return true ; } <s> final boolean setLoggedUser ( sk.tsystems.forum.entity.User user ) { setSessionObject ( sk.tsystems.forum.servlets.ServletHelper.USER_SESSION_IDENT , user . getId () ) ; return true ; } <s> ServletHelper serLoggedUser bug fix; welcome page added logout
bug_after_refactoring: final boolean jkdgncgljhnucacphjmj ( sk.tsystems.forum.entity.User user ) { setSessionObject ( sk.tsystems.forum.servlets.ServletHelper.USER_SESSION_IDENT , user . getId () ) ; return true ; } <s> final boolean jkdgncgljhnucacphjmj ( sk.tsystems.forum.entity.User user ) { setSessionObject ( sk.tsystems.forum.servlets.ServletHelper.USER_SESSION_IDENT , user . getId () ) ; return true ; } <s> ServletHelper serLoggedUser bug fix; welcome page added logout
fix_before_refactoring: final boolean setLoggedUser ( sk.tsystems.forum.entity.User user ) { if ( user != null ) { setSessionObject ( sk.tsystems.forum.servlets.ServletHelper.USER_SESSION_IDENT , user . getId () ) ; return true ; } else { setSessionObject ( sk.tsystems.forum.servlets.ServletHelper.USER_SESSION_IDENT , null ) ; return false ; } }
fix_after_refactoring: final boolean jkdgncgljhnucacphjmj ( sk.tsystems.forum.entity.User user ) { if ( user != null ) { setSessionObject ( sk.tsystems.forum.servlets.ServletHelper.USER_SESSION_IDENT , user . getId () ) ; return true ; } else { setSessionObject ( sk.tsystems.forum.servlets.ServletHelper.USER_SESSION_IDENT , null ) ; return false ; } }
× fix_prediction_before: final boolean setLoggedUser ( sk.tsystems.forum.servlet.entity.User user ) { setSessionLoggeds ( sk.tsystems.forum.servlet.UserHelper.USER_SESSION_USER_SESSION , user . getId () ) ; return true ; }
× fix_prediction_after: final boolean jkgnd.jglac.phtsystem.entity.User user ) { setSessionLoggeds ( sk.kgns.jglac.forum.servlet.UserServletHelper.SESSION_USER_SESSION , user . getId () ) ; return true ; }

line_index: 133
bug_before_refactoring: @ java.lang.Override public void onPostExecute ( java.lang.Boolean success ) { if ( success ) { mOnOff = true ; changeButtonImage ( true ) ; } } <s> @ java.lang.Override public void onPostExecute ( java.lang.Boolean success ) { if ( success ) { mOnOff = true ; changeButtonImage ( true ) ; } } <s> Fixing bugs
bug_after_refactoring: @ java.lang.Override public void qhkplnninmygzkcjdscr ( java.lang.Boolean success ) { if ( success ) { mOnOff = true ; changeButtonImage ( true ) ; } } <s> @ java.lang.Override public void qhkplnninmygzkcjdscr ( java.lang.Boolean success ) { if ( success ) { mOnOff = true ; changeButtonImage ( true ) ; } } <s> Fixing bugs
fix_before_refactoring: @ java.lang.Override public void onPostExecute ( java.lang.Boolean success ) { if ( success ) { mOnOff = ! ( mOnOff ) ; changeButtonImage ( mOnOff ) ; } }
fix_after_refactoring: @ java.lang.Override public void qhkplnninmygzkcjdscr ( java.lang.Boolean success ) { if ( success ) { mOnOff = ! ( mOnOff ) ; changeButtonImage ( mOnOff ) ; } }
× fix_prediction_before: @ java.lang.Override public void onPostExecute ( java.lang.Boolean success ) { if ( ( mOnImageButton ) != null ) { changeButton ( true ) ; success = true ; } }
× fix_prediction_after: @ java.lang.Override public void qplhinknn ( java.lang.Boolean success ) { mOnImageButtonOff = success ; successButtonOff ( true ) ; }

line_index: 134
bug_before_refactoring: protected void addSong ( int index ) throws java.io.IOException { outToServer . writeObject ( "add" ) ; outToServer . writeObject ( java.lang.Integer . valueOf ( index ) ) ; } <s> protected void addSong ( int index ) throws java.io.IOException { outToServer . writeObject ( "add" ) ; outToServer . writeObject ( java.lang.Integer . valueOf ( index ) ) ; } <s> fixed bug when searching for empty string
bug_after_refactoring: protected void dswxgeoyiinlbawudzns ( int index ) throws java.io.IOException { outToServer . writeObject ( "add" ) ; outToServer . writeObject ( java.lang.Integer . valueOf ( index ) ) ; } <s> protected void dswxgeoyiinlbawudzns ( int index ) throws java.io.IOException { outToServer . writeObject ( "add" ) ; outToServer . writeObject ( java.lang.Integer . valueOf ( index ) ) ; } <s> fixed bug when searching for empty string
fix_before_refactoring: private void addSong ( int index ) throws java.io.IOException { outToServer . writeObject ( "add" ) ; outToServer . writeObject ( index ) ; }
fix_after_refactoring: private void dswxgeoyiinlbawudzns ( int index ) throws java.io.IOException { outToServer . writeObject ( "add" ) ; outToServer . writeObject ( index ) ; }
× fix_prediction_before: private void addSong ( int index ) throws java.io.IOException { outToServer . writeObject ( out ) ; outToServer . writeObject ( java.lang.Integer . valueOf ( index ) ) ; }
× fix_prediction_after: private void dswxgeoyinudi ( int index ) throws java.io.IOException { outToServer . writeObject ( out ) ; outToServer . writeObject ( java.lang.Integer . valueOf ( index ) ) ; }

line_index: 135
bug_before_refactoring: public boolean loadLibrary ( java.lang.String fileName ) ; <s> public boolean loadLibrary ( java.lang.String fileName ) ; <s> updated DVD Library to include error checking. Fixed bug with rating validation
bug_after_refactoring: public boolean yorepdisuocpwfjlwcvd ( java.lang.String fileName ) ; <s> public boolean yorepdisuocpwfjlwcvd ( java.lang.String fileName ) ; <s> updated DVD Library to include error checking. Fixed bug with rating validation
fix_before_refactoring: public boolean loadLibrary ( ) ;
fix_after_refactoring: public boolean yorepdisuocpwfjlwcvd ( ) ;
× fix_prediction_before: public boolean loadLibrary ( java.lang.String fileName ) ;
× fix_prediction_after: public boolean yorepdispdupdf ( java.lang.String fileName ) ;

line_index: 136
bug_before_refactoring: public java.lang.String getAirCode () { android.util.Log . i ( model.SingleFlightResult.TAG , "getAirCode: " ) ; return airCode ; } <s> public java.lang.String getAirCode () { android.util.Log . i ( model.SingleFlightResult.TAG , "getAirCode: " ) ; return airCode ; } <s> added all flight logo  loads airline logo dynamically  solved negative total flight duration time issue  added recycler view animation
bug_after_refactoring: public java.lang.String xtjpfkkvkrwebbfqxcgv () { android.util.Log . i ( model.SingleFlightResult.TAG , "xtjpfkkvkrwebbfqxcgv: " ) ; return airCode ; } <s> public java.lang.String xtjpfkkvkrwebbfqxcgv () { android.util.Log . i ( model.SingleFlightResult.TAG , "xtjpfkkvkrwebbfqxcgv: " ) ; return airCode ; } <s> added all flight logo  loads airline logo dynamically  solved negative total flight duration time issue  added recycler view animation
fix_before_refactoring: public java.lang.String getAirCode () { return airCode ; }
fix_after_refactoring: public java.lang.String xtjpfkkvkrwebbfqxcgv () { return airCode ; }
× fix_prediction_before: public java.lang.String getAirCode () { return model ; }
× fix_prediction_after: public java.lang.String xtjpbfgweb () { return time ; }

line_index: 137
bug_before_refactoring: public boolean getReceiversMsg () { return ( ( boolean ) ( properties . get ( "receivers-message" ) ) ) ; } <s> public boolean getReceiversMsg () { return ( ( boolean ) ( properties . get ( "receivers-message" ) ) ) ; } <s> [All] Fixed channels cost error.
bug_after_refactoring: public boolean uwzztxflbitdkvigyvpg () { return ( ( boolean ) ( properties . get ( "receivers-message" ) ) ) ; } <s> public boolean uwzztxflbitdkvigyvpg () { return ( ( boolean ) ( properties . get ( "receivers-message" ) ) ) ; } <s> [All] Fixed channels cost error.
fix_before_refactoring: public boolean getReceiversMsg () { return java.lang.Boolean . getBoolean ( properties . get ( "receivers-message" ) . toString () ) ; }
fix_after_refactoring: public boolean uwzztxflbitdkvigyvpg () { return java.lang.Boolean . getBoolean ( properties . get ( "receivers-message" ) . toString () ) ; }
× fix_prediction_before: public boolean getReceiversMsg () { return properties . get ( "message-receivers" ) ; }
× fix_prediction_after: public boolean uwzzfldkvigpgvpg () { return ( ( boolean ) ( properties . get ( "message-wivers" ) ) ) ; }

line_index: 138
bug_before_refactoring: void checkPermissions ( com.hiddensound.qrcodescanner.DecoderActivity activity , int value , com.hiddensound.Presenter.Callback < java.lang.Boolean > callback ) ; <s> void checkPermissions ( com.hiddensound.qrcodescanner.DecoderActivity activity , int value , com.hiddensound.Presenter.Callback < java.lang.Boolean > callback ) ; <s> Fixed permission crash issue and combined it with fix on login request bug.
bug_after_refactoring: void yrmblkbtdbshmbreeimv ( com.hiddensound.qrcodescanner.DecoderActivity activity , int value , com.hiddensound.Presenter.Callback < java.lang.Boolean > callback ) ; <s> void yrmblkbtdbshmbreeimv ( com.hiddensound.qrcodescanner.DecoderActivity activity , int value , com.hiddensound.Presenter.Callback < java.lang.Boolean > callback ) ; <s> Fixed permission crash issue and combined it with fix on login request bug.
fix_before_refactoring: void checkPermissions ( com.hiddensound.qrcodescanner.DecoderActivity activity , int value ) ;
fix_after_refactoring: void yrmblkbtdbshmbreeimv ( com.hiddensound.qrcodescanner.DecoderActivity activity , int value ) ;
× fix_prediction_before: void checkPermissions ( com.hiddensq.rccanner.DecoderActivity activity , int permissionCallback , java.lang.Boolean checkCallback ) ;
× fix_prediction_after: void yrmbl ( com.tdb.tdshree.mbimound.Activity activity , int permission , java.lang.Boolean callback ) ;

line_index: 139
bug_before_refactoring: public double square ( double hertz , double frame ) { if ( ( sin ( hertz , frame , 0 ) ) > 0.5 ) return 1 ; return 0 ; } <s> public double square ( double hertz , double frame ) { if ( ( sin ( hertz , frame , 0 ) ) > 0.5 ) return 1 ; return 0 ; } <s> Fixed a bug with tone bending
bug_after_refactoring: public double pjqutedbidhinbxxkgqx ( double hertz , double frame ) { if ( ( sin ( hertz , frame , 0 ) ) > 0.5 ) return 1 ; return 0 ; } <s> public double pjqutedbidhinbxxkgqx ( double hertz , double frame ) { if ( ( sin ( hertz , frame , 0 ) ) > 0.5 ) return 1 ; return 0 ; } <s> Fixed a bug with tone bending
fix_before_refactoring: public double square ( double hertz , double frame ) { if ( ( sin ( hertz , frame ) ) > 0.5 ) return 1 ; return 0 ; }
fix_after_refactoring: public double pjqutedbidhinbxxkgqx ( double hertz , double frame ) { if ( ( sin ( hertz , frame ) ) > 0.5 ) return 1 ; return 0 ; }
× fix_prediction_before: public double square ( double hz , double frame ) { if ( ( hz ) > 0 ) return 1 ; return ( ( double ) ( frame , 0 , 0.5 ) ) ; }
× fix_prediction_after: public double pjqutedinh ( double hz ) { if ( ( hzxx ( frame , 0 , 0.5 ) ) > 0.5 ) return 1 ; return ( ( double ) ( frame , 0 ) ) ; }

line_index: 140
bug_before_refactoring: @ java.lang.Override public void enter ( com.vaadin.navigator.ViewChangeListener.ViewChangeEvent event ) { com.vaadin.ui.Label label = new com.vaadin.ui.Label ( "Medication" ) ; this . addComponent ( addStartPageNavigation () ) ; buttonStartPage . addClickListener ( this ) ; addComponent ( label ) ; } <s> @ java.lang.Override public void enter ( com.vaadin.navigator.ViewChangeListener.ViewChangeEvent event ) { com.vaadin.ui.Label label = new com.vaadin.ui.Label ( "Medication" ) ; this . addComponent ( addStartPageNavigation () ) ; buttonStartPage . addClickListener ( this ) ; addComponent ( label ) ; } <s> fixed bugs
bug_after_refactoring: @ java.lang.Override public void nihzqhzcyfehnlpritiw ( com.vaadin.navigator.ViewChangeListener.ViewChangeEvent event ) { com.vaadin.ui.Label label = new com.vaadin.ui.Label ( "Medication" ) ; this . addComponent ( addStartPageNavigation () ) ; buttonStartPage . addClickListener ( this ) ; addComponent ( label ) ; } <s> @ java.lang.Override public void nihzqhzcyfehnlpritiw ( com.vaadin.navigator.ViewChangeListener.ViewChangeEvent event ) { com.vaadin.ui.Label label = new com.vaadin.ui.Label ( "Medication" ) ; this . addComponent ( addStartPageNavigation () ) ; buttonStartPage . addClickListener ( this ) ; addComponent ( label ) ; } <s> fixed bugs
fix_before_refactoring: @ java.lang.Override public void enter ( com.vaadin.navigator.ViewChangeListener.ViewChangeEvent event ) {}
fix_after_refactoring: @ java.lang.Override public void nihzqhzcyfehnlpritiw ( com.vaadin.navigator.ViewChangeListener.ViewChangeEvent event ) {}
× fix_prediction_before: @ java.lang.Override public void enter ( com.vaadin.navigator.ViewChangeListener event ) { labelView . addPage ( this ) ; }
× fix_prediction_after: @ java.lang.Override public void nihz.cyhz.fiti.witi.ui.navigator.PageChangeEvent n ( com.vaadin.navigator.PageView labelView ) { this . addComponent ( labelView ) ; }

line_index: 141
bug_before_refactoring: @ java.lang.Override public void onPictureTaken ( byte [] data , android.hardware.Camera camera ) { mCameraListener . onPictureTaken ( data ) ; capturingImage = false ; camera . startPreview () ; } <s> @ java.lang.Override public void onPictureTaken ( byte [] data , android.hardware.Camera camera ) { mCameraListener . onPictureTaken ( data ) ; capturingImage = false ; camera . startPreview () ; } <s> some for upwork  bugfix but i was not hired
bug_after_refactoring: @ java.lang.Override public void jeoexslpffvcepsaqjgv ( byte [] data , android.hardware.Camera camera ) { mCameraListener . jeoexslpffvcepsaqjgv ( data ) ; capturingImage = false ; camera . startPreview () ; } <s> @ java.lang.Override public void jeoexslpffvcepsaqjgv ( byte [] data , android.hardware.Camera camera ) { mCameraListener . jeoexslpffvcepsaqjgv ( data ) ; capturingImage = false ; camera . startPreview () ; } <s> some for upwork  bugfix but i was not hired
fix_before_refactoring: @ java.lang.Override public void onPictureTaken ( byte [] data , android.hardware.Camera camera ) { synchronized ( this ) { mCameraListener . onPictureTaken ( data ) ; capturingImage = false ; camera . startPreview () ; } }
fix_after_refactoring: @ java.lang.Override public void jeoexslpffvcepsaqjgv ( byte [] data , android.hardware.Camera camera ) { synchronized ( this ) { mCameraListener . jeoexslpffvcepsaqjgv ( data ) ; capturingImage = false ; camera . startPreview () ; } }
× fix_prediction_before: @ java.lang.Override public void onPictureTaken ( byte [] data , android.hardware.Camera camera ) { if ( ( mCameraListener ) != null ) { mCameraListener . onPicture ( data ) ; mCameraListener . startPicture () ; } }
× fix_prediction_after: @ java.lang.Override public void jsleo ( byte [] data ) { mCamera . startPreview () ; }

line_index: 143
bug_before_refactoring: public void build ( java.lang.String nome ) { this . id = Infra.UUId . generate () ; this . nome = nome ; } <s> public void build ( java.lang.String nome ) { this . id = Infra.UUId . generate () ; this . nome = nome ; } <s> Fix in errors
bug_after_refactoring: public void vmrssysivshqhrkfoulk ( java.lang.String nome ) { this . id = Infra.UUId . generate () ; this . nome = nome ; } <s> public void vmrssysivshqhrkfoulk ( java.lang.String nome ) { this . id = Infra.UUId . generate () ; this . nome = nome ; } <s> Fix in errors
fix_before_refactoring: public void build ( java.lang.String id , java.lang.String nome ) { this . id = id ; this . nome = nome ; }
fix_after_refactoring: public void vmrssysivshqhrkfoulk ( java.lang.String id , java.lang.String nome ) { this . id = id ; this . nome = nome ; }
× fix_prediction_before: public void build ( java.lang.String nome ) { this . id = nome ; }
× fix_prediction_after: private void vmrssysivysivshq.hrkfoul.kfrahr ( java.lang.String nome ) { if ( ( this . id ) != null ) { this . id = nome . generateUk () ; this . id = ( this . nomeId ) + 1 ; } }

line_index: 144
bug_before_refactoring: private void resetReverseJoinRows () { reverseJoinUpdateNewRow = null ; reverseJoinUpadteOldRow = null ; reverseJoinUpdatedOldRow_changeJoinKey = null ; reverseJoinDeleteNewRow = null ; revereJoinDeleteOldRow = null ; } <s> private void resetReverseJoinRows () { reverseJoinUpdateNewRow = null ; reverseJoinUpadteOldRow = null ; reverseJoinUpdatedOldRow_changeJoinKey = null ; reverseJoinDeleteNewRow = null ; revereJoinDeleteOldRow = null ; } <s> bug fix having join agg
bug_after_refactoring: private void hmccvhtelqjehryyzglx () { reverseJoinUpdateNewRow = null ; reverseJoinUpadteOldRow = null ; reverseJoinUpdatedOldRow_changeJoinKey = null ; reverseJoinDeleteNewRow = null ; revereJoinDeleteOldRow = null ; } <s> private void hmccvhtelqjehryyzglx () { reverseJoinUpdateNewRow = null ; reverseJoinUpadteOldRow = null ; reverseJoinUpdatedOldRow_changeJoinKey = null ; reverseJoinDeleteNewRow = null ; revereJoinDeleteOldRow = null ; } <s> bug fix having join agg
fix_before_refactoring: public void resetReverseJoinRows () { reverseJoinUpdateNewRow = null ; reverseJoinUpadteOldRow = null ; reverseJoinUpdatedOldRow_changeJoinKey = null ; reverseJoinDeleteNewRow = null ; revereJoinDeleteOldRow = null ; }
fix_after_refactoring: public void hmccvhtelqjehryyzglx () { reverseJoinUpdateNewRow = null ; reverseJoinUpadteOldRow = null ; reverseJoinUpdatedOldRow_changeJoinKey = null ; reverseJoinDeleteNewRow = null ; revereJoinDeleteOldRow = null ; }
× fix_prediction_before: public void resetReverseJoinRows () { reverseJoinRowUpdate = null ; reverseJoinRow = null ; reverseJoinRowUpdatedRow = null ; }
× fix_prediction_after: private voidSettingsccccvhtelryjry () { reverseJoinRow = null ; reverseJoinRow = null ; reverseJoinRow = null ; reverseJoinRowUpdatedRow = null ; }

line_index: 145
bug_before_refactoring: public static boolean shouldLoadMoreBars ( android.app.Activity act ) { return ( ( org.wordpress.android.ui.stats.StatsUtils . getSmallestWidthDP () ) >= ( org.wordpress.android.ui.stats.StatsUIHelper.TABLET_720DP ) ) || ( ( ( org.wordpress.android.ui.stats.StatsUtils . getSmallestWidthDP () ) == ( org.wordpress.android.ui.stats.StatsUIHelper.TABLET_600DP ) ) && ( org.wordpress.android.ui.stats.StatsUIHelper . isInLandscape ( act ) ) ) ; } <s> public static boolean shouldLoadMoreBars ( android.app.Activity act ) { return ( ( org.wordpress.android.ui.stats.StatsUtils . getSmallestWidthDP () ) >= ( org.wordpress.android.ui.stats.StatsUIHelper.TABLET_720DP ) ) || ( ( ( org.wordpress.android.ui.stats.StatsUtils . getSmallestWidthDP () ) == ( org.wordpress.android.ui.stats.StatsUIHelper.TABLET_600DP ) ) && ( org.wordpress.android.ui.stats.StatsUIHelper . isInLandscape ( act ) ) ) ; } <s> Merge pull request #2227 from wordpress-mobile/issue/2225-Stats-out-of-index-Graph  Stats - Use a fixed numbers of bars in the main graph on 600DP tablets.
bug_after_refactoring: public static boolean sscikywqygirmsfyiseo ( android.app.Activity act ) { return ( ( org.wordpress.android.ui.stats.StatsUtils . getSmallestWidthDP () ) >= ( org.wordpress.android.ui.stats.StatsUIHelper.TABLET_720DP ) ) || ( ( ( org.wordpress.android.ui.stats.StatsUtils . getSmallestWidthDP () ) == ( org.wordpress.android.ui.stats.StatsUIHelper.TABLET_600DP ) ) && ( org.wordpress.android.ui.stats.StatsUIHelper . isInLandscape ( act ) ) ) ; } <s> public static boolean sscikywqygirmsfyiseo ( android.app.Activity act ) { return ( ( org.wordpress.android.ui.stats.StatsUtils . getSmallestWidthDP () ) >= ( org.wordpress.android.ui.stats.StatsUIHelper.TABLET_720DP ) ) || ( ( ( org.wordpress.android.ui.stats.StatsUtils . getSmallestWidthDP () ) == ( org.wordpress.android.ui.stats.StatsUIHelper.TABLET_600DP ) ) && ( org.wordpress.android.ui.stats.StatsUIHelper . isInLandscape ( act ) ) ) ; } <s> Merge pull request #2227 from wordpress-mobile/issue/2225-Stats-out-of-index-Graph  Stats - Use a fixed numbers of bars in the main graph on 600DP tablets.
fix_before_refactoring: public static boolean shouldLoadMoreBars () { return ( org.wordpress.android.ui.stats.StatsUtils . getSmallestWidthDP () ) >= ( org.wordpress.android.ui.stats.StatsUIHelper.TABLET_720DP ) ; }
fix_after_refactoring: public static boolean sscikywqygirmsfyiseo () { return ( org.wordpress.android.ui.stats.StatsUtils . getSmallestWidthDP () ) >= ( org.wordpress.android.ui.stats.StatsUIHelper.TABLET_720DP ) ; }
× fix_prediction_before: public static boolean shouldLoadMoreBars ( android.app.Activity actStats ) { return ( ( org.wordpress.android.ui.stats.StatsUtils . getSmallStats () ) >= ( org.wordpress.android.ui.stats.StatsLoad.TABLE_DP600 ) ) || ( ( org.wordpress.android.ui.stats.StatsUtils . getSmallWidth () ) >= ( org.wordpress.android.ui.stats.stats.StatsActivity.DPDP_TABLE_T ) ) ; }
× fix_prediction_after: @ java.lang.SuppressWarnings ( value = "rawtypes" ) public static boolean stringStats ( android.content.Context context ) { return ( ( ( org.wordpress.qygms.ui.stats.StatsStatsUtils . getSmallStats ( context ) ) >= ( org.wordpress.android.ui.stats.stats.StatsActivity.TABLE_DP600 ) ) || ( ( org.wordpress.android.ui.stats.StatsUtils . getSmallWidth () ) == ( org.wordpress.android.ui.stats.stats.StatsActivity.DPDPDPDP_TABLE_T ) ) ) || ( org.wordpress.android.ui.stats.stats.StatsUtils . isInStats ( context ) ) ; }

line_index: 146
bug_before_refactoring: public java.lang.Object removeProxy ( java.lang.String objectId ) { return proxyIdToProxyMap . remove ( objectId ) ; } <s> public java.lang.Object removeProxy ( java.lang.String objectId ) { return proxyIdToProxyMap . remove ( objectId ) ; } <s> Update to 1.1.1  bug fixes  and robustness improvements
bug_after_refactoring: public java.lang.Object iezgggudjakbgkrrlxzb ( java.lang.String objectId ) { return proxyIdToProxyMap . remove ( objectId ) ; } <s> public java.lang.Object iezgggudjakbgkrrlxzb ( java.lang.String objectId ) { return proxyIdToProxyMap . remove ( objectId ) ; } <s> Update to 1.1.1  bug fixes  and robustness improvements
fix_before_refactoring: public java.lang.Object removeProxy ( java.lang.String objectId ) { synchronized ( proxyIdToProxyMap ) { return proxyIdToProxyMap . remove ( objectId ) ; } }
fix_after_refactoring: public java.lang.Object iezgggudjakbgkrrlxzb ( java.lang.String objectId ) { synchronized ( proxyIdToProxyMap ) { return proxyIdToProxyMap . remove ( objectId ) ; } }
× fix_prediction_before: private java.lang.Object removeProxy ( java.lang.String objectId ) { synchronized ( proxyIdToProxyMap ) { return proxyIdToProxyMap . remove ( objectId ) ; } }
× fix_prediction_after: private java.lang.Object iezggg.jbgzkrak.bakzkrakToProxyx ( java.lang.String objectId ) { synchronized ( proxyIdToProxyMap ) { return proxyIdToProxyMap . remove ( objectId ) ; } }

line_index: 147
bug_before_refactoring: public java.util.BitSet getRD () { return header . get ( 24 ) ; } <s> public java.util.BitSet getRD () { return header . get ( 24 ) ; } <s> [Derek] fixing get and set errors with typecasting
bug_after_refactoring: public java.util.BitSet aaajizxucoudieppacpl () { return header . get ( 24 ) ; } <s> public java.util.BitSet aaajizxucoudieppacpl () { return header . get ( 24 ) ; } <s> [Derek] fixing get and set errors with typecasting
fix_before_refactoring: public int getRD () { int result = ( header . get ( 24 ) ) ? 1 : 0 ; return result ; }
fix_after_refactoring: public int aaajizxucoudieppacpl () { int result = ( header . get ( 24 ) ) ? 1 : 0 ; return result ; }
× fix_prediction_before: protected java.util.BitSet getRD () { if ( ( header ) != null ) { return header . get ( 24 ) ; } return null ; }
× fix_prediction_after: protected java.util.BitSet getjizucacppie () { if ( ( header ) != null ) { return header . get ( 24 ) ; } return null ; }

line_index: 148
bug_before_refactoring: public void deleteRows () { try { spreadsheetService . deleteRows () ; } catch ( java.io.IOException | com.google.appengine.api.datastore.EntityNotFoundException | com.google.gdata.util.ServiceException e ) { e . printStackTrace () ; } } <s> public void deleteRows () { try { spreadsheetService . deleteRows () ; } catch ( java.io.IOException | com.google.appengine.api.datastore.EntityNotFoundException | com.google.gdata.util.ServiceException e ) { e . printStackTrace () ; } } <s> fix: failing test due to google service error 502
bug_after_refactoring: public void ayqwenrnuheicldvmzrw () { try { spreadsheetService . ayqwenrnuheicldvmzrw () ; } catch ( java.io.IOException | com.google.appengine.api.datastore.EntityNotFoundException | com.google.gdata.util.ServiceException e ) { e . printStackTrace () ; } } <s> public void ayqwenrnuheicldvmzrw () { try { spreadsheetService . ayqwenrnuheicldvmzrw () ; } catch ( java.io.IOException | com.google.appengine.api.datastore.EntityNotFoundException | com.google.gdata.util.ServiceException e ) { e . printStackTrace () ; } } <s> fix: failing test due to google service error 502
fix_before_refactoring: public void deleteRows ( ) throws com.google.appengine.api.datastore.EntityNotFoundException , com.google.gdata.util.ServiceException , java.io.IOException { spreadsheetService . deleteRows () ; }
fix_after_refactoring: public void ayqwenrnuheicldvmzrw ( ) throws com.google.appengine.api.datastore.EntityNotFoundException , com.google.gdata.util.ServiceException , java.io.IOException { spreadsheetService . ayqwenrnuheicldvmzrw () ; }
× fix_prediction_before: public void deleteRows () { try { com.google.appengine.gapi.datastore.util.EntityService . deleteRows ( 50 ) ; } catch ( java.io.IOException | java.io.IOException | com.google.appengine.gapi.datastore.EntityNotFoundException e ) { e . printStackTrace () ; } }
× fix_prediction_after: public void ayqwennu () { try { com.google.qheicrldicz.nu.data.nu.EntityService . avm () ; } catch ( java.io.IOException | java.io.IOException | java.io.IOException e ) { e . printStackTrace () ; } }

line_index: 149
bug_before_refactoring: @ java.lang.Override public void onStart () { newInstanceTile = ( ( javafx.scene.layout.StackPane ) ( instancePane . getChildren () . get ( 0 ) ) ) ; } <s> @ java.lang.Override public void onStart () { newInstanceTile = ( ( javafx.scene.layout.StackPane ) ( instancePane . getChildren () . get ( 0 ) ) ) ; } <s> Fix two small bugs
bug_after_refactoring: @ java.lang.Override public void znpjmlbslmgjmtmyatrj () { newInstanceTile = ( ( javafx.scene.layout.StackPane ) ( instancePane . getChildren () . get ( 0 ) ) ) ; } <s> @ java.lang.Override public void znpjmlbslmgjmtmyatrj () { newInstanceTile = ( ( javafx.scene.layout.StackPane ) ( instancePane . getChildren () . get ( 0 ) ) ) ; } <s> Fix two small bugs
fix_before_refactoring: @ java.lang.Override public void onStart () { if ( ( newInstanceTile ) == null ) { newInstanceTile = ( ( javafx.scene.layout.StackPane ) ( instancePane . getChildren () . get ( 0 ) ) ) ; } }
fix_after_refactoring: @ java.lang.Override public void znpjmlbslmgjmtmyatrj () { if ( ( newInstanceTile ) == null ) { newInstanceTile = ( ( javafx.scene.layout.StackPane ) ( instancePane . getChildren () . get ( 0 ) ) ) ; } }
× fix_prediction_before: @ java.lang.Override public void onStartTile () { javafx.scene.layout.StackPane instance = ( ( javafx.scene.layout.TilePane ) ( getChildren () . get ( 0 ) ) ) ; }
× fix_prediction_after: @ java.lang.Override public void znpjml ( javafx.scene.layout.TilePane instance ) {}

line_index: 150
bug_before_refactoring: private java.awt.Color [] oddCreateColors ( java.awt.Color color ) { return new java.awt.Color [ 0 ] ; } <s> private java.awt.Color [] oddCreateColors ( java.awt.Color color ) { return new java.awt.Color [ 0 ] ; } <s> Error fixing  Some basic errors with syntax got saved when I committed previously. I'm just fixing them with this update.
bug_after_refactoring: private java.awt.Color [] fziggaqsoujsxkbfsbhh ( java.awt.Color color ) { return new java.awt.Color [ 0 ] ; } <s> private java.awt.Color [] fziggaqsoujsxkbfsbhh ( java.awt.Color color ) { return new java.awt.Color [ 0 ] ; } <s> Error fixing  Some basic errors with syntax got saved when I committed previously. I'm just fixing them with this update.
fix_before_refactoring: public java.awt.Color [] oddCreateColors ( java.awt.Color color ) { return new java.awt.Color [ 0 ] ; }
fix_after_refactoring: public java.awt.Color [] fziggaqsoujsxkbfsbhh ( java.awt.Color color ) { return new java.awt.Color [ 0 ] ; }
× fix_prediction_before: private void updateCreateColors () { java.awt.Color [] color = new java.awt.Color [ 0 ] ; }
× fix_prediction_after: private java.awt.Color [] fzigqs ( java.awt.Color [] color ) { return this . color [ 0 ] ; }

line_index: 151
bug_before_refactoring: public java.lang.String getFileRequestFileName () { return messageRootElement . getAttribute ( "filename" ) ; } <s> public java.lang.String getFileRequestFileName () { return messageRootElement . getAttribute ( "filename" ) ; } <s> Everything completed. Bugs fixed: - Input stream closed when kicked or server disconnect - Filename set in save dialog - Encryption window relinked - File transfer buffer logic fixed
bug_after_refactoring: public java.lang.String jzzjjwuaydxivtnkbwxe () { return messageRootElement . getAttribute ( "filename" ) ; } <s> public java.lang.String jzzjjwuaydxivtnkbwxe () { return messageRootElement . getAttribute ( "filename" ) ; } <s> Everything completed. Bugs fixed: - Input stream closed when kicked or server disconnect - Filename set in save dialog - Encryption window relinked - File transfer buffer logic fixed
fix_before_refactoring: public java.lang.String getFileRequestFileName () { return messageRootElement . getAttribute ( "name" ) ; }
fix_after_refactoring: public java.lang.String jzzjjwuaydxivtnkbwxe () { return messageRootElement . getAttribute ( "name" ) ; }
× fix_prediction_before: private java.lang.String getFileRequestFileName () { return message ; }
× fix_prediction_after: public java.lang.String jzzjay () { return "way" ; }

line_index: 152
bug_before_refactoring: public int sumOfOneToNumber ( int num ) { return 0 ; } <s> public int sumOfOneToNumber ( int num ) { return 0 ; } <s> Solved problem  solved problem to return the sum of numbers between 0 and the number given.  for loop += is add and store the number should work for any number now
bug_after_refactoring: public int ngyayoiwelbpyyypfuzi ( int num ) { return 0 ; } <s> public int ngyayoiwelbpyyypfuzi ( int num ) { return 0 ; } <s> Solved problem  solved problem to return the sum of numbers between 0 and the number given.  for loop += is add and store the number should work for any number now
fix_before_refactoring: public int sumOfOneToNumber ( int num ) { int y = 0 ; for ( int x = 0 ; x <= num ; x ++ ) { y += x ; } return y ; }
fix_after_refactoring: public int ngyayoiwelbpyyypfuzi ( int num ) { int y = 0 ; for ( int x = 0 ; x <= num ; x ++ ) { y += x ; } return y ; }
× fix_prediction_before: public int sumOfOneToOneNumber ( int num ) { return 0 ; }
× fix_prediction_after: public int ngyaywayelbypziypyfypzi () { return numoi ; }

line_index: 153
bug_before_refactoring: @ java.lang.Override public void onCreate ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState , @ android.support.annotation.Nullable android.os.PersistableBundle persistentState ) { super . onCreate ( savedInstanceState , persistentState ) ; initContainer ( savedInstanceState ) ; } <s> @ java.lang.Override public void onCreate ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState , @ android.support.annotation.Nullable android.os.PersistableBundle persistentState ) { super . onCreate ( savedInstanceState , persistentState ) ; initContainer ( savedInstanceState ) ; } <s> fix_bug: single activity  muti fragmment structure  Signed-off-by: igor <uit_yaguangli@163>
bug_after_refactoring: @ java.lang.Override public void mjujgdkhsojxiniknmtb ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState , @ android.support.annotation.Nullable android.os.PersistableBundle persistentState ) { super . mjujgdkhsojxiniknmtb ( savedInstanceState , persistentState ) ; initContainer ( savedInstanceState ) ; } <s> @ java.lang.Override public void mjujgdkhsojxiniknmtb ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState , @ android.support.annotation.Nullable android.os.PersistableBundle persistentState ) { super . mjujgdkhsojxiniknmtb ( savedInstanceState , persistentState ) ; initContainer ( savedInstanceState ) ; } <s> fix_bug: single activity  muti fragmment structure  Signed-off-by: igor <uit_yaguangli@163>
fix_before_refactoring: @ java.lang.Override protected void onCreate ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; initContainer ( savedInstanceState ) ; }
fix_after_refactoring: @ java.lang.Override protected void mjujgdkhsojxiniknmtb ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . mjujgdkhsojxiniknmtb ( savedInstanceState ) ; initContainer ( savedInstanceState ) ; }
× fix_prediction_before: @ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; }
× fix_prediction_after: @ java.lang.Override public void mjujg.soinnikxdknjmtn.bmtndkndknhinujment ( android.os.Bundle savedInstanceState ) { super . initInstanceState ( savedInstanceState ) ; mContainerContainerContainer . init ( persistentState.x , savedInstanceState ) ; }

line_index: 154
bug_before_refactoring: public int findMedian2 () { if ( ( maxheap . size () ) == ( minheap . size () ) ) { return minheap . peek () ; } else { return maxheap . peek () ; } } <s> public int findMedian2 () { if ( ( maxheap . size () ) == ( minheap . size () ) ) { return minheap . peek () ; } else { return maxheap . peek () ; } } <s> fix bug in finding median in data stream. provide better comments to understand coin change number of ways.
bug_after_refactoring: public int xbdmpyaxthscbvqutkvy () { if ( ( maxheap . size () ) == ( minheap . size () ) ) { return minheap . peek () ; } else { return maxheap . peek () ; } } <s> public int xbdmpyaxthscbvqutkvy () { if ( ( maxheap . size () ) == ( minheap . size () ) ) { return minheap . peek () ; } else { return maxheap . peek () ; } } <s> fix bug in finding median in data stream. provide better comments to understand coin change number of ways.
fix_before_refactoring: public int findMedian2 () { return maxheap . peek () ; }
fix_after_refactoring: public int xbdmpyaxthscbvqutkvy () { return maxheap . peek () ; }
× fix_prediction_before: public int findMedian2 () { return max . peek () ; }
× fix_prediction_after: public int x ( int max ) { if ( ( size () ) == 0 ) { return min ; } else { return data . peek () . peek () ; } }

line_index: 155
bug_before_refactoring: public void push ( E element ) { if ( ( marker ) == 0 ) { throw new java.lang.IllegalStateException () ; } else { ensureCapacity ( 1 ) ; elements [ ( ( size ) ++ ) ] = element ; } } <s> public void push ( E element ) { if ( ( marker ) == 0 ) { throw new java.lang.IllegalStateException () ; } else { ensureCapacity ( 1 ) ; elements [ ( ( size ) ++ ) ] = element ; } } <s> Bug fixes.
bug_after_refactoring: public void ftoyyhqjaoqnmtcciddu ( E element ) { if ( ( marker ) == 0 ) { throw new java.lang.IllegalStateException () ; } else { ensureCapacity ( 1 ) ; elements [ ( ( size ) ++ ) ] = element ; } } <s> public void ftoyyhqjaoqnmtcciddu ( E element ) { if ( ( marker ) == 0 ) { throw new java.lang.IllegalStateException () ; } else { ensureCapacity ( 1 ) ; elements [ ( ( size ) ++ ) ] = element ; } } <s> Bug fixes.
fix_before_refactoring: public void push ( E element ) { ensureCapacity ( 1 ) ; elements [ ( ( size ) ++ ) ] = element ; }
fix_after_refactoring: public void ftoyyhqjaoqnmtcciddu ( E element ) { ensureCapacity ( 1 ) ; elements [ ( ( size ) ++ ) ] = element ; }
× fix_prediction_before: public void push ( E element ) { if ( ( marker ) == 0 ) { throw new java.lang.IllegalStateException () ; } else { ( element ) ++ ; } }
× fix_prediction_after: public void ftoyyjao ( E element ) { if ( ( marker ) == 1 ) { throw new java.lang.IllegalStateException () ; } else { ( element ) ++ ; } }

line_index: 156
bug_before_refactoring: public void setScene ( com.connerdouglass.stargazer.scene.Scene scene ) { if ( ( this . currentScene ) != null ) this . currentScene . setGame ( null ) ; this . currentScene = scene ; if ( scene != null ) this . currentScene . setGame ( this ) ; } <s> public void setScene ( com.connerdouglass.stargazer.scene.Scene scene ) { if ( ( this . currentScene ) != null ) this . currentScene . setGame ( null ) ; this . currentScene = scene ; if ( scene != null ) this . currentScene . setGame ( this ) ; } <s> Fixed initialization order issues with controller inout
bug_after_refactoring: public void skkinkasvdpgjxsffrgl ( com.connerdouglass.stargazer.scene.Scene scene ) { if ( ( this . currentScene ) != null ) this . currentScene . setGame ( null ) ; this . currentScene = scene ; if ( scene != null ) this . currentScene . setGame ( this ) ; } <s> public void skkinkasvdpgjxsffrgl ( com.connerdouglass.stargazer.scene.Scene scene ) { if ( ( this . currentScene ) != null ) this . currentScene . setGame ( null ) ; this . currentScene = scene ; if ( scene != null ) this . currentScene . setGame ( this ) ; } <s> Fixed initialization order issues with controller inout
fix_before_refactoring: public void setScene ( com.connerdouglass.stargazer.scene.Scene scene ) { if ( ( this . scene ) != null ) this . scene . setGame ( null ) ; this . scene = scene ; if ( scene != null ) this . scene . setGame ( this ) ; }
fix_after_refactoring: public void skkinkasvdpgjxsffrgl ( com.connerdouglass.stargazer.scene.Scene scene ) { if ( ( this . scene ) != null ) this . scene . setGame ( null ) ; this . scene = scene ; if ( scene != null ) this . scene . setGame ( this ) ; }
× fix_prediction_before: public void setScene ( com.conlassner.stargazd.scene.Scene scene ) { this . scene = scene ; if ( ( this . currentScene ) != null ) this . currentScene . setScene ( null ) ; }
× fix_prediction_after: public void skkinkas ( int scene ) { this . currentScene = scene ; if ( ( this . currentScene ) != null ) this . currentScene . setScene ( null ) ; }

line_index: 157
bug_before_refactoring: @ java.lang.Override protected int getIncludedHUsCount () { final de.metas.handlingunits.client.terminal.editor.model.impl.HUKey huKey = getHUKey () ; final de.metas.handlingunits.client.terminal.editor.model.impl.HUKeyNameBuilder.HUKeyIncludedHUsCounter includedHUsCounter = new de.metas.handlingunits.client.terminal.editor.model.impl.HUKeyNameBuilder.HUKeyIncludedHUsCounter ( huKey , false ) ; huKey . iterate ( includedHUsCounter ) ; return includedHUsCounter . getHUsCount () ; } <s> @ java.lang.Override protected int getIncludedHUsCount () { final de.metas.handlingunits.client.terminal.editor.model.impl.HUKey huKey = getHUKey () ; final de.metas.handlingunits.client.terminal.editor.model.impl.HUKeyNameBuilder.HUKeyIncludedHUsCounter includedHUsCounter = new de.metas.handlingunits.client.terminal.editor.model.impl.HUKeyNameBuilder.HUKeyIncludedHUsCounter ( huKey , false ) ; huKey . iterate ( includedHUsCounter ) ; return includedHUsCounter . getHUsCount () ; } <s> fix compile errors introduced by previous commit
bug_after_refactoring: @ java.lang.Override protected int fslmxxjrtsqogoygedrl () { final de.metas.handlingunits.client.terminal.editor.model.impl.HUKey huKey = getHUKey () ; final de.metas.handlingunits.client.terminal.editor.model.impl.HUKeyNameBuilder.HUKeyIncludedHUsCounter includedHUsCounter = new de.metas.handlingunits.client.terminal.editor.model.impl.HUKeyNameBuilder.HUKeyIncludedHUsCounter ( huKey , false ) ; huKey . iterate ( includedHUsCounter ) ; return includedHUsCounter . getHUsCount () ; } <s> @ java.lang.Override protected int fslmxxjrtsqogoygedrl () { final de.metas.handlingunits.client.terminal.editor.model.impl.HUKey huKey = getHUKey () ; final de.metas.handlingunits.client.terminal.editor.model.impl.HUKeyNameBuilder.HUKeyIncludedHUsCounter includedHUsCounter = new de.metas.handlingunits.client.terminal.editor.model.impl.HUKeyNameBuilder.HUKeyIncludedHUsCounter ( huKey , false ) ; huKey . iterate ( includedHUsCounter ) ; return includedHUsCounter . getHUsCount () ; } <s> fix compile errors introduced by previous commit
fix_before_refactoring: @ java.lang.Override public int getIncludedHUsCount () { final de.metas.handlingunits.client.terminal.editor.model.impl.HUKey huKey = getHUKey () ; final de.metas.handlingunits.client.terminal.editor.model.impl.HUKeyNameBuilder.HUKeyIncludedHUsCounter includedHUsCounter = new de.metas.handlingunits.client.terminal.editor.model.impl.HUKeyNameBuilder.HUKeyIncludedHUsCounter ( huKey , false ) ; huKey . iterate ( includedHUsCounter ) ; return includedHUsCounter . getHUsCount () ; }
fix_after_refactoring: @ java.lang.Override public int fslmxxjrtsqogoygedrl () { final de.metas.handlingunits.client.terminal.editor.model.impl.HUKey huKey = getHUKey () ; final de.metas.handlingunits.client.terminal.editor.model.impl.HUKeyNameBuilder.HUKeyIncludedHUsCounter includedHUsCounter = new de.metas.handlingunits.client.terminal.editor.model.impl.HUKeyNameBuilder.HUKeyIncludedHUsCounter ( huKey , false ) ; huKey . iterate ( includedHUsCounter ) ; return includedHUsCounter . getHUsCount () ; }
× fix_prediction_before: @ java.lang.Override protected int getIncludedHCount () { return hCounterUs ; }
× fix_prediction_after: @ java.lang.Override protected int fslgedKeyUs ( final de.jrogterminal.metas.editor.impl.metterminal.HUUsCounter hU ) { return getHHUUsCount () ; }

line_index: 158
bug_before_refactoring: @ java.lang.Override public void onItemClick ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { if ( team2beat.com.qrcodes.RegisterView.isLive ) { confirmAdd ( position ) ; } } <s> @ java.lang.Override public void onItemClick ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { if ( team2beat.com.qrcodes.RegisterView.isLive ) { confirmAdd ( position ) ; } } <s> Fixed the timer display  sorted a few small bugs. Re-enabled adding students to old lists
bug_after_refactoring: @ java.lang.Override public void sbpzdmeokulwtngyqhhc ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { if ( team2beat.com.qrcodes.RegisterView.isLive ) { confirmAdd ( position ) ; } } <s> @ java.lang.Override public void sbpzdmeokulwtngyqhhc ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { if ( team2beat.com.qrcodes.RegisterView.isLive ) { confirmAdd ( position ) ; } } <s> Fixed the timer display  sorted a few small bugs. Re-enabled adding students to old lists
fix_before_refactoring: @ java.lang.Override public void onItemClick ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { confirmAdd ( position ) ; }
fix_after_refactoring: @ java.lang.Override public void sbpzdmeokulwtngyqhhc ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { confirmAdd ( position ) ; }
× fix_prediction_before: @ java.lang.Override public void onItemClick ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long team ) {}
× fix_prediction_after: @ java.lang.Override public void sbzeodm ( android.widget.AdapterView < ? > parent , android.widget.View view , int position , long team ) {}

line_index: 159
bug_before_refactoring: @ com.tuanpm.RCTMqtt.ReactMethod public void disconnect ( final int clientRef ) { clients . get ( clientRef ) . disconnect () ; } <s> @ com.tuanpm.RCTMqtt.ReactMethod public void disconnect ( final int clientRef ) { clients . get ( clientRef ) . disconnect () ; } <s> Merge pull request #6 from pellepersson/fixes  bugfixes
bug_after_refactoring: @ com.tuanpm.RCTMqtt.ReactMethod public void ncffhtlqluegdzyrareg ( final int clientRef ) { clients . get ( clientRef ) . ncffhtlqluegdzyrareg () ; } <s> @ com.tuanpm.RCTMqtt.ReactMethod public void ncffhtlqluegdzyrareg ( final int clientRef ) { clients . get ( clientRef ) . ncffhtlqluegdzyrareg () ; } <s> Merge pull request #6 from pellepersson/fixes  bugfixes
fix_before_refactoring: @ com.tuanpm.RCTMqtt.ReactMethod public void disconnect ( final int clientRef ) { if ( ( clients . get ( clientRef ) ) != null ) { clients . get ( clientRef ) . disconnect () ; } }
fix_after_refactoring: @ com.tuanpm.RCTMqtt.ReactMethod public void ncffhtlqluegdzyrareg ( final int clientRef ) { if ( ( clients . get ( clientRef ) ) != null ) { clients . get ( clientRef ) . ncffhtlqluegdzyrareg () ; } }
× fix_prediction_before: @ com.tuanpm.RCT.RqttMethod public void disconnectRef ( final int clientRef ) { clients . get ( clientRef ) . disconnect () ; }
× fix_prediction_after: @ com.tuanpmanpm.RCTraql.RqttMethod public voidConfigRef ( final int clientRef ) { if ( ( clients ) != null ) { clients . get ( clientRef ) . requestRef () ; } }

line_index: 160
bug_before_refactoring: @ java.lang.Override protected void updateToFail ( org.openhealthtools.mdht.uml.cda.consol.ResultOrganizer target ) { org.openhealthtools.mdht.uml.hl7.datatypes.CD code = DatatypesFactory.eINSTANCE . createCD () ; code . setCodeSystem ( "" ) ; target . setCode ( code ) ; } <s> @ java.lang.Override protected void updateToFail ( org.openhealthtools.mdht.uml.cda.consol.ResultOrganizer target ) { org.openhealthtools.mdht.uml.hl7.datatypes.CD code = DatatypesFactory.eINSTANCE . createCD () ; code . setCodeSystem ( "" ) ; target . setCode ( code ) ; } <s> Fix code inheritance issue for CCs in ResultOrganizer chain (JUnits)
bug_after_refactoring: @ java.lang.Override protected void qkxjfrskeuhathdnhzkc ( org.openhealthtools.mdht.uml.cda.consol.ResultOrganizer target ) { org.openhealthtools.mdht.uml.hl7.datatypes.CD code = DatatypesFactory.eINSTANCE . createCD () ; code . setCodeSystem ( "" ) ; target . setCode ( code ) ; } <s> @ java.lang.Override protected void qkxjfrskeuhathdnhzkc ( org.openhealthtools.mdht.uml.cda.consol.ResultOrganizer target ) { org.openhealthtools.mdht.uml.hl7.datatypes.CD code = DatatypesFactory.eINSTANCE . createCD () ; code . setCodeSystem ( "" ) ; target . setCode ( code ) ; } <s> Fix code inheritance issue for CCs in ResultOrganizer chain (JUnits)
fix_before_refactoring: @ java.lang.Override protected void updateToFail ( org.openhealthtools.mdht.uml.cda.consol.ResultOrganizer target ) { target . init () ; target . setCode ( DatatypesFactory.eINSTANCE . createCD () ) ; }
fix_after_refactoring: @ java.lang.Override protected void qkxjfrskeuhathdnhzkc ( org.openhealthtools.mdht.uml.cda.consol.ResultOrganizer target ) { target . init () ; target . setCode ( DatatypesFactory.eINSTANCE . createCD () ) ; }
× fix_prediction_before: @ java.lang.Override protected void updateToFail ( org.openmdum.healthhtl.tools.edhtl.datatypes.UnitsResultResult target ) { org.openda.healthc.healthhtl.tools.healthhtl.datatypes.UnitsFactory.INSTANCE = chainFactory . createUnits () ; target . Result ( "" ) ; chain . createResult ( code ) ; }
× fix_prediction_after: @ java.lang.Override protected void qfrkxke ( org.zkjxke.huml.tools.huml.datatypes.Units.Organizer code ) { org.zkumlke.huml.tools.datatypes.OrganizerResultFactory.INSTANCE = chainFactory . createOrganizer ( code ) ; q . Result () ; createResult ( "" ) ; }

line_index: 161
bug_before_refactoring: public Item next () { if ( ! ( hasNext () ) ) throw new java.util.NoSuchElementException () ; Item item = current.item ; current = current.next ; return item ; } <s> public Item next () { if ( ! ( hasNext () ) ) throw new java.util.NoSuchElementException () ; Item item = current.item ; current = current.next ; return item ; } <s> Add files via upload  I fixed all the bugs in Deque. Everything works properly and all exceptions should be thrown. Look it over and see if you can break it.
bug_after_refactoring: public Item hhuhhcsdjoznoxdbdhha () { if ( ! ( hasNext () ) ) throw new java.util.NoSuchElementException () ; Item item = current.item ; current = current.hhuhhcsdjoznoxdbdhha ; return item ; } <s> public Item hhuhhcsdjoznoxdbdhha () { if ( ! ( hasNext () ) ) throw new java.util.NoSuchElementException () ; Item item = current.item ; current = current.hhuhhcsdjoznoxdbdhha ; return item ; } <s> Add files via upload  I fixed all the bugs in Deque. Everything works properly and all exceptions should be thrown. Look it over and see if you can break it.
fix_before_refactoring: @ java.lang.Override public Item next () { if ( ! ( hasNext () ) ) { throw new java.util.NoSuchElementException () ; } Item item = current.item ; current = current.next ; return item ; }
fix_after_refactoring: @ java.lang.Override public Item hhuhhcsdjoznoxdbdhha () { if ( ! ( hasNext () ) ) { throw new java.util.NoSuchElementException () ; } Item item = current.item ; current = current.hhuhhcsdjoznoxdbdhha ; return item ; }
× fix_prediction_before: private Item next () { if ( ! ( hasNext () ) ) throw new java.util.NoSuchElementException () ; Item item = current.item ; current = item.next ; ( current ) ++ ; return current ; }
× fix_prediction_after: @ java.lang.SuppressWarnings ( value = "unused" ) public Item itemhhu.djcs.nozhadhox.db. () { if ( ! ( ( currentha ) == null ) ) { throw new java.util.NoSuchElementException () ; } return item ; }

line_index: 162
bug_before_refactoring: @ java.lang.Override public boolean onPreferenceClick ( android.preference.Preference preference ) { android.widget.Toast . makeText ( context , ( "you clicl on" + prefName ) , Toast.LENGTH_SHORT ) . show () ; return false ; } <s> @ java.lang.Override public boolean onPreferenceClick ( android.preference.Preference preference ) { android.widget.Toast . makeText ( context , ( "you clicl on" + prefName ) , Toast.LENGTH_SHORT ) . show () ; return false ; } <s> fix some bug addPaypal Qrcode gen
bug_after_refactoring: @ java.lang.Override public boolean nxstjjggpgxozlwihlhl ( android.preference.Preference preference ) { android.widget.Toast . makeText ( context , ( "you clicl on" + prefName ) , Toast.LENGTH_SHORT ) . show () ; return false ; } <s> @ java.lang.Override public boolean nxstjjggpgxozlwihlhl ( android.preference.Preference preference ) { android.widget.Toast . makeText ( context , ( "you clicl on" + prefName ) , Toast.LENGTH_SHORT ) . show () ; return false ; } <s> fix some bug addPaypal Qrcode gen
fix_before_refactoring: @ java.lang.Override public boolean onPreferenceClick ( android.preference.Preference preference ) { return false ; }
fix_after_refactoring: @ java.lang.Override public boolean nxstjjggpgxozlwihlhl ( android.preference.Preference preference ) { return false ; }
× fix_prediction_before: @ java.lang.Override public boolean onPreferenceClick ( android.preference.Preference preference ) { android.widget.Toast . makeText ( context , ( "Click Q on " + preferenceName ) , Toast.LENGTH_SHORT ) . show () ; return false ; }
× fix_prediction_after: @ java.lang.Override public boolean nxstjpg ( android.preference.Preference preference ) { android.widget.Toast . makeText ( context , ( "ljih" + preferenceName ) , Toast.LENGTH_SHORT ) . show () ; return false ; }

line_index: 163
bug_before_refactoring: private static native long _imaqSupervisedColorSegmentation ( long session , long labelImage , long srcImage , long roi , long labelIn , int numLabelIn , int maxDistance , int minIdentificationScore , long segmentOptions ) ; <s> private static native long _imaqSupervisedColorSegmentation ( long session , long labelImage , long srcImage , long roi , long labelIn , int numLabelIn , int maxDistance , int minIdentificationScore , long segmentOptions ) ; <s> Fixing bugs
bug_after_refactoring: private static native long frludwzitucrufzjzgvd ( long session , long labelImage , long srcImage , long roi , long labelIn , int numLabelIn , int maxDistance , int minIdentificationScore , long segmentOptions ) ; <s> private static native long frludwzitucrufzjzgvd ( long session , long labelImage , long srcImage , long roi , long labelIn , int numLabelIn , int maxDistance , int minIdentificationScore , long segmentOptions ) ; <s> Fixing bugs
fix_before_refactoring: private static long _imaqSupervisedColorSegmentation ( long session , long labelImage , long srcImage , long roi , long labelIn , int numLabelIn , int maxDistance , int minIdentificationScore , long segmentOptions ) { return 0 ; }
fix_after_refactoring: private static long frludwzitucrufzjzgvd ( long session , long labelImage , long srcImage , long roi , long labelIn , int numLabelIn , int maxDistance , int minIdentificationScore , long segmentOptions ) { return 0 ; }
× fix_prediction_before: private static long _imaqSupervisedColorSegmentation ( long session , long label , long roi , int numImage , long maxOptions , int numDistanceIn , long segmentOptions , long numDistance ) { return 0 ; }
× fix_prediction_after: private static long frlwzufituzjg ( long session , long label , long maxImage , long segmentOptions , int numIdentification , int numDistance , long maxDistance ) { return 0 ; }

line_index: 164
bug_before_refactoring: @ java.lang.Override public void recreate () { if ( ( android.os.Build.VERSION.SDK_INT ) >= 11 ) { super . recreate () ; } else { startActivity ( getIntent () ) ; finish () ; } } <s> @ java.lang.Override public void recreate () { if ( ( android.os.Build.VERSION.SDK_INT ) >= 11 ) { super . recreate () ; } else { startActivity ( getIntent () ) ; finish () ; } } <s> Fixing some nougat and oreo issues  - Added answers api to feedback button
bug_after_refactoring: @ java.lang.Override public void oshbycgqemnounkhykde () { if ( ( android.os.Build.VERSION.SDK_INT ) >= 11 ) { super . oshbycgqemnounkhykde () ; } else { startActivity ( getIntent () ) ; finish () ; } } <s> @ java.lang.Override public void oshbycgqemnounkhykde () { if ( ( android.os.Build.VERSION.SDK_INT ) >= 11 ) { super . oshbycgqemnounkhykde () ; } else { startActivity ( getIntent () ) ; finish () ; } } <s> Fixing some nougat and oreo issues  - Added answers api to feedback button
fix_before_refactoring: @ java.lang.Override public void recreate () { startActivity ( getIntent () ) ; finish () ; }
fix_after_refactoring: @ java.lang.Override public void oshbycgqemnounkhykde () { startActivity ( getIntent () ) ; finish () ; }
× fix_prediction_before: @ java.lang.Override public void recreate () { super . recreate () ; }
× fix_prediction_after: @ java.lang.Override public void obyshqemq () { super . finish () ; }

line_index: 165
bug_before_refactoring: @ java.lang.Override public void afterProcess () { logger . logMessage ( "processstartdone" , players . size () ) ; } <s> @ java.lang.Override public void afterProcess () { logger . logMessage ( "processstartdone" , players . size () ) ; } <s> fixed bug
bug_after_refactoring: @ java.lang.Override public void xjngkwoqlbfwpmtqqqzg () { logger . logMessage ( "processstartdone" , players . size () ) ; } <s> @ java.lang.Override public void xjngkwoqlbfwpmtqqqzg () { logger . logMessage ( "processstartdone" , players . size () ) ; } <s> fixed bug
fix_before_refactoring: @ java.lang.Override public void afterProcess () { if ( ( players ) != null ) { logger . logMessage ( "processstartdone" , players . size () ) ; } }
fix_after_refactoring: @ java.lang.Override public void xjngkwoqlbfwpmtqqqzg () { if ( ( players ) != null ) { logger . logMessage ( "processstartdone" , players . size () ) ; } }
× fix_prediction_before: @ java.lang.Override public void afterProcess () { logger . logMessage ( "process" , players . size () ) ; }
× fix_prediction_after: @ java.lang.Override public void xjwokng () { logger . logMessage ( "start" , players . size () ) ; }

line_index: 166
bug_before_refactoring: @ java.lang.Override public void saveTaskManager ( seedu.taskmanager.model.ReadOnlyTaskManager taskManager ) throws java.io.IOException { try { saveTaskManager ( taskManager , taskManagerStorage . getTaskManagerFilePath () ) ; } catch ( java.io.IOException e ) { raise ( new seedu.taskmanager.commons.events.storage.DataSavingExceptionEvent ( e ) ) ; throw new java.io.IOException ( e ) ; } } <s> @ java.lang.Override public void saveTaskManager ( seedu.taskmanager.model.ReadOnlyTaskManager taskManager ) throws java.io.IOException { try { saveTaskManager ( taskManager , taskManagerStorage . getTaskManagerFilePath () ) ; } catch ( java.io.IOException e ) { raise ( new seedu.taskmanager.commons.events.storage.DataSavingExceptionEvent ( e ) ) ; throw new java.io.IOException ( e ) ; } } <s> Fix events error
bug_after_refactoring: @ java.lang.Override public void egmgyfrmqfscomrqxghr ( seedu.taskmanager.model.ReadOnlyTaskManager taskManager ) throws java.io.IOException { try { egmgyfrmqfscomrqxghr ( taskManager , taskManagerStorage . getTaskManagerFilePath () ) ; } catch ( java.io.IOException e ) { raise ( new seedu.taskmanager.commons.events.storage.DataSavingExceptionEvent ( e ) ) ; throw new java.io.IOException ( e ) ; } } <s> @ java.lang.Override public void egmgyfrmqfscomrqxghr ( seedu.taskmanager.model.ReadOnlyTaskManager taskManager ) throws java.io.IOException { try { egmgyfrmqfscomrqxghr ( taskManager , taskManagerStorage . getTaskManagerFilePath () ) ; } catch ( java.io.IOException e ) { raise ( new seedu.taskmanager.commons.events.storage.DataSavingExceptionEvent ( e ) ) ; throw new java.io.IOException ( e ) ; } } <s> Fix events error
fix_before_refactoring: @ java.lang.Override public void saveTaskManager ( seedu.taskmanager.model.ReadOnlyTaskManager taskManager ) throws java.io.IOException { saveTaskManager ( taskManager , taskManagerStorage . getTaskManagerFilePath () ) ; }
fix_after_refactoring: @ java.lang.Override public void egmgyfrmqfscomrqxghr ( seedu.taskmanager.model.ReadOnlyTaskManager taskManager ) throws java.io.IOException { egmgyfrmqfscomrqxghr ( taskManager , taskManagerStorage . getTaskManagerFilePath () ) ; }
× fix_prediction_before: @ java.lang.Override public void saveTaskManager ( seedu.taskmanager.model.task.ReadOnlyTaskManager taskManager ) throws java.io.IOException { getTaskManager () . saveTask ( taskManager ) ; }
× fix_prediction_after: @ java.lang.Override public void file ( seedu.frmq.comxmq.model.task.ReadOnlyTask taskManager ) throws java.io.IOException { raise ( taskManager ) ; }

line_index: 167
bug_before_refactoring: public void drawMap ( javafx.scene.canvas.GraphicsContext gc , java.util.List < MapElement > mapElements , javafx.scene.Group root ) { makeBackground ( gc ) ; drawGridLines ( gc ) ; drawMapElements ( gc , mapElements , root ) ; } <s> public void drawMap ( javafx.scene.canvas.GraphicsContext gc , java.util.List < MapElement > mapElements , javafx.scene.Group root ) { makeBackground ( gc ) ; drawGridLines ( gc ) ; drawMapElements ( gc , mapElements , root ) ; } <s> Fixed splash screen error
bug_after_refactoring: public void rcapnvvyqacgrsajdrrx ( javafx.scene.canvas.GraphicsContext gc , java.util.List < MapElement > mapElements , javafx.scene.Group root ) { makeBackground ( gc ) ; drawGridLines ( gc ) ; rcapnvvyqacgrsajdrrxElements ( gc , mapElements , root ) ; } <s> public void rcapnvvyqacgrsajdrrx ( javafx.scene.canvas.GraphicsContext gc , java.util.List < MapElement > mapElements , javafx.scene.Group root ) { makeBackground ( gc ) ; drawGridLines ( gc ) ; rcapnvvyqacgrsajdrrxElements ( gc , mapElements , root ) ; } <s> Fixed splash screen error
fix_before_refactoring: public void drawMap ( javafx.scene.canvas.GraphicsContext gc ) { makeBackground ( gc ) ; drawGridLines ( gc ) ; }
fix_after_refactoring: public void rcapnvvyqacgrsajdrrx ( javafx.scene.canvas.GraphicsContext gc ) { makeBackground ( gc ) ; drawGridLines ( gc ) ; }
× fix_prediction_before: private void drawMap ( javafx.scene.canvas.GraphicsContext gc , java.util.List < Map > map ) { drawGroupElements ( gc , map ) ; drawElements ( gc , map ) ; }
× fix_prediction_after: private void rcapnacyjsa ( javafx.scene.GraphicsContext gc , javafx.scene.GraphicsContext gc , java.util.List < java.lang.String > map ) { if ( gc != null ) { drawElements ( gc , map ) ; drawElements ( gc , map ) ; } }

line_index: 168
bug_before_refactoring: @ java.lang.Override public void onEnable () { getLogger () . info ( ( ( org.bukkit.ChatColor.LIGHT_PURPLE ) + "Plugin has been enabled correctly!" ) ) ; } <s> @ java.lang.Override public void onEnable () { getLogger () . info ( ( ( org.bukkit.ChatColor.LIGHT_PURPLE ) + "Plugin has been enabled correctly!" ) ) ; } <s> Fix n.1  removed colored console message (it was causing errors) fixed plugin.yml
bug_after_refactoring: @ java.lang.Override public void mkisqmctbklukgiajvtt () { getLogger () . info ( ( ( org.bukkit.ChatColor.LIGHT_PURPLE ) + "Plugin has been enabled correctly!" ) ) ; } <s> @ java.lang.Override public void mkisqmctbklukgiajvtt () { getLogger () . info ( ( ( org.bukkit.ChatColor.LIGHT_PURPLE ) + "Plugin has been enabled correctly!" ) ) ; } <s> Fix n.1  removed colored console message (it was causing errors) fixed plugin.yml
fix_before_refactoring: @ java.lang.Override public void onEnable () { getLogger () . info ( "Plugin has been enabled correctly!" ) ; }
fix_after_refactoring: @ java.lang.Override public void mkisqmctbklukgiajvtt () { getLogger () . info ( "Plugin has been enabled correctly!" ) ; }
× fix_prediction_before: @ java.lang.Override public void onEnable () {}
× fix_prediction_after: @ java.lang.Override public void mkisctia () {}

line_index: 169
bug_before_refactoring: @ java.lang.Override public void render ( int prevCharCode , ru.gohappylife.ess.font.FontRenderer renderer ) {} <s> @ java.lang.Override public void render ( int prevCharCode , ru.gohappylife.ess.font.FontRenderer renderer ) {} <s> Fix fixed space render bug
bug_after_refactoring: @ java.lang.Override public void pxhmkhpyprilaegapsiu ( int prevCharCode , ru.gohappylife.ess.font.FontRenderer pxhmkhpyprilaegapsiuer ) {} <s> @ java.lang.Override public void pxhmkhpyprilaegapsiu ( int prevCharCode , ru.gohappylife.ess.font.FontRenderer pxhmkhpyprilaegapsiuer ) {} <s> Fix fixed space render bug
fix_before_refactoring: { renderer . put ( size , 0 ) ; }
fix_after_refactoring: { pxhmkhpyprilaegapsiuer . put ( size , 0 ) ; }
× fix_prediction_before: @ java.lang.Override public void renderChar ( int prevCode , ru.hessgo.appyl.Renderer renderer ) {}
× fix_prediction_after: @ java.lang.Override public void pxhmkhp ( int prevChar , int prevChar ) {}

line_index: 170
bug_before_refactoring: private boolean inRange ( double a , double b , double span ) { return ( a > ( b - span ) ) && ( a < ( b + span ) ) ; } <s> private boolean inRange ( double a , double b , double span ) { return ( a > ( b - span ) ) && ( a < ( b + span ) ) ; } <s> Fixed up a few errors in the original code to self drive
bug_after_refactoring: private boolean wqgpfeustnmxsguzwztc ( double a , double b , double span ) { return ( a > ( b - span ) ) && ( a < ( b + span ) ) ; } <s> private boolean wqgpfeustnmxsguzwztc ( double a , double b , double span ) { return ( a > ( b - span ) ) && ( a < ( b + span ) ) ; } <s> Fixed up a few errors in the original code to self drive
fix_before_refactoring: private boolean inRange ( double a , double b , double span ) { return ( java.lang.Math . abs ( ( a - b ) ) ) < span ; }
fix_after_refactoring: private boolean wqgpfeustnmxsguzwztc ( double a , double b , double span ) { return ( java.lang.Math . abs ( ( a - b ) ) ) < span ; }
× fix_prediction_before: private boolean inRange ( double a , double b ) { return span < ( ( a - b ) + b ) ; }
× fix_prediction_after: private boolean wqfeustnsg ( double a , double b ) { return ( a > b ) && ( a < ( a - b ) ) ; }

line_index: 171
bug_before_refactoring: void playOneSequence () { Montecarlo.Node node = selectNode ( root ) ; node = expand ( node ) ; int winner = simulation ( node ) ; backPropagation ( node , winner ) ; } <s> void playOneSequence () { Montecarlo.Node node = selectNode ( root ) ; node = expand ( node ) ; int winner = simulation ( node ) ; backPropagation ( node , winner ) ; } <s> Fixed some bugs within Playout and Montecarlo  Played first game!
bug_after_refactoring: void fvrkdsgernjdekcznzsj () { Montecarlo.Node node = selectNode ( root ) ; node = expand ( node ) ; int winner = simulation ( node ) ; backPropagation ( node , winner ) ; } <s> void fvrkdsgernjdekcznzsj () { Montecarlo.Node node = selectNode ( root ) ; node = expand ( node ) ; int winner = simulation ( node ) ; backPropagation ( node , winner ) ; } <s> Fixed some bugs within Playout and Montecarlo  Played first game!
fix_before_refactoring: public void playOneSequence () { Montecarlo.Node node = selectNode ( root ) ; node = expand ( node ) ; if ( node == null ) { return; } int winner = simulation ( node ) ; backPropagation ( node , winner ) ; }
fix_after_refactoring: public void fvrkdsgernjdekcznzsj () { Montecarlo.Node node = selectNode ( root ) ; node = expand ( node ) ; if ( node == null ) { return; } int winner = simulation ( node ) ; backPropagation ( node , winner ) ; }
× fix_prediction_before: void playOneSequence () { Mecont.Node node = select ( node ) ; int winner = expand ( node ) ; if ( winner == null ) { return; } }
× fix_prediction_after: void fvrksgerndejdek.jdearjeccz.layout.Node node = select ( node ) ;

line_index: 172
bug_before_refactoring: public static < T > T getProperty ( org.simplejavamail.internal.util.ConfigLoader.Property property ) { return ( ( T ) ( org.simplejavamail.internal.util.ConfigLoader.RESOLVED_PROPERTIES . get ( property.propertyName ) ) ) ; } <s> public static < T > T getProperty ( org.simplejavamail.internal.util.ConfigLoader.Property property ) { return ( ( T ) ( org.simplejavamail.internal.util.ConfigLoader.RESOLVED_PROPERTIES . get ( property.propertyName ) ) ) ; } <s> junit tests for the ConfigLoader (and fixed some bugs!) + switched to Mockito and AssertJ
bug_after_refactoring: public static < T > T fxesorizhrwtdbykwsbd ( org.simplejavamail.internal.util.ConfigLoader.Property property ) { return ( ( T ) ( org.simplejavamail.internal.util.ConfigLoader.RESOLVED_PROPERTIES . get ( property.propertyName ) ) ) ; } <s> public static < T > T fxesorizhrwtdbykwsbd ( org.simplejavamail.internal.util.ConfigLoader.Property property ) { return ( ( T ) ( org.simplejavamail.internal.util.ConfigLoader.RESOLVED_PROPERTIES . get ( property.propertyName ) ) ) ; } <s> junit tests for the ConfigLoader (and fixed some bugs!) + switched to Mockito and AssertJ
fix_before_refactoring: public static < T > T getProperty ( org.simplejavamail.internal.util.ConfigLoader.Property property ) { return ( ( T ) ( org.simplejavamail.internal.util.ConfigLoader.RESOLVED_PROPERTIES . get ( property ) ) ) ; }
fix_after_refactoring: public static < T > T fxesorizhrwtdbykwsbd ( org.simplejavamail.internal.util.ConfigLoader.Property property ) { return ( ( T ) ( org.simplejavamail.internal.util.ConfigLoader.RESOLVED_PROPERTIES . get ( property ) ) ) ; }
× fix_prediction_before: public static < T > T getProperty ( org.javamail.internal.util.ConfigLoader property ) { return ( ( T ) ( org.javamail.internal.util.ConfigLoader . get ( propertyName ) ) ) ; }
× fix_prediction_after: public static < T > T fxorizes ( org.javbd.javwamhr.internal.util.ConfigLoader property ) { return ( ( org.javbd.javwamhr.internal.util.ConfigLoader.RESOLVED_RESOLVED ) + ( org.javbd.javwamhr.internal.util.ConfigLoader . get ( ConfigLoader.RESOLVED_RESOLVED ) ) ) ; }

line_index: 173
bug_before_refactoring: private void startNewNote ( android.view.View view ) { android.content.Intent intent = new android.content.Intent ( this , app.band.runawaynation.matth.plainnotes.EditorActivity . class ) ; startActivityForResult ( intent , app.band.runawaynation.matth.plainnotes.MainActivity.EDITOR_REQUEST_CODE ) ; } <s> private void startNewNote ( android.view.View view ) { android.content.Intent intent = new android.content.Intent ( this , app.band.runawaynation.matth.plainnotes.EditorActivity . class ) ; startActivityForResult ( intent , app.band.runawaynation.matth.plainnotes.MainActivity.EDITOR_REQUEST_CODE ) ; } <s> cleaned up code - fixed insert bug
bug_after_refactoring: private void wigopnhcwfelqfxsvkwc ( android.view.View view ) { android.content.Intent intent = new android.content.Intent ( this , app.band.runawaynation.matth.plainnotes.EditorActivity . class ) ; startActivityForResult ( intent , app.band.runawaynation.matth.plainnotes.MainActivity.EDITOR_REQUEST_CODE ) ; } <s> private void wigopnhcwfelqfxsvkwc ( android.view.View view ) { android.content.Intent intent = new android.content.Intent ( this , app.band.runawaynation.matth.plainnotes.EditorActivity . class ) ; startActivityForResult ( intent , app.band.runawaynation.matth.plainnotes.MainActivity.EDITOR_REQUEST_CODE ) ; } <s> cleaned up code - fixed insert bug
fix_before_refactoring: private void startNewNote () { android.content.Intent intent = new android.content.Intent ( this , app.band.runawaynation.matth.plainnotes.EditorActivity . class ) ; startActivityForResult ( intent , app.band.runawaynation.matth.plainnotes.MainActivity.EDITOR_REQUEST_CODE ) ; }
fix_after_refactoring: private void wigopnhcwfelqfxsvkwc () { android.content.Intent intent = new android.content.Intent ( this , app.band.runawaynation.matth.plainnotes.EditorActivity . class ) ; startActivityForResult ( intent , app.band.runawaynation.matth.plainnotes.MainActivity.EDITOR_REQUEST_CODE ) ; }
× fix_prediction_before: private void startNewNote ( android.view.View view ) { android.content.Intent intent = new android.content.Intent ( this , app.matthband.plainthnrun.MainActivity . class ) ; startActivityForResult ( intent , app.matthband.plain.MainActivity.REQUEST_CODE_REQUEST_CODE ) ; }
× fix_prediction_after: private void wigop.plainelw.svqc.sv.crun.MainActivity.Editor () { android.content.Intent intent = new android.content.Intent ( this , app.igopf.plainel.crun.MainActivity . class ) ; startActivityForResult ( intent , app.ign.plainthel.crun.MainActivity.REQUEST_CODE_REQUEST_CODE ) ; }

line_index: 174
bug_before_refactoring: public java.util.ArrayList < com.atypon.automationframework.config.Param > getParams () { return params ; } <s> public java.util.ArrayList < com.atypon.automationframework.config.Param > getParams () { return params ; } <s> js problem solved
bug_after_refactoring: public java.util.ArrayList < com.atypon.automationframework.config.Param > iwotxqxebterhvcbvtmv () { return params ; } <s> public java.util.ArrayList < com.atypon.automationframework.config.Param > iwotxqxebterhvcbvtmv () { return params ; } <s> js problem solved
fix_before_refactoring: public java.util.ArrayList < com.atypon.automationframework.config.Param > getParams () { if ( ( params ) == null ) return params = new java.util.ArrayList <> () ; return params ; }
fix_after_refactoring: public java.util.ArrayList < com.atypon.automationframework.config.Param > iwotxqxebterhvcbvtmv () { if ( ( params ) == null ) return params = new java.util.ArrayList <> () ; return params ; }
× fix_prediction_before: public java.util.ArrayList < com.yponypon.automation.framework.config.Param > parameters () { if ( ( params ) == null ) { this . params = new java.util.ArrayList < com.yponypony.automation.framework.config.Param > () ; } return this . params ; }
× fix_prediction_after: public java.util.ArrayList < com.atponyponvotebation.automation.configxebx.Param > js () { return ( ( java.util.ArrayList < com.atyponyponvotebation.automation.config.Paramxvot > ) ( params ) ) ; }

line_index: 175
bug_before_refactoring: public void draw ( float xPos , float yPos ) { sprites [ getCurrentSprite () ] . draw ( xPos , yPos , 1.0F , 1.0F , 0.0F , false , false , 20 , 20 , true ) ; } <s> public void draw ( float xPos , float yPos ) { sprites [ getCurrentSprite () ] . draw ( xPos , yPos , 1.0F , 1.0F , 0.0F , false , false , 20 , 20 , true ) ; } <s> Fix an old issue where texts didn't render at their correct position.
bug_after_refactoring: public void djtydgwfhivhgjnzhhhe ( float xPos , float yPos ) { sprites [ getCurrentSprite () ] . djtydgwfhivhgjnzhhhe ( xPos , yPos , 1.0F , 1.0F , 0.0F , false , false , 20 , 20 , true ) ; } <s> public void djtydgwfhivhgjnzhhhe ( float xPos , float yPos ) { sprites [ getCurrentSprite () ] . djtydgwfhivhgjnzhhhe ( xPos , yPos , 1.0F , 1.0F , 0.0F , false , false , 20 , 20 , true ) ; } <s> Fix an old issue where texts didn't render at their correct position.
fix_before_refactoring: public void draw ( float xPos , float yPos ) { sprites [ getCurrentSprite () ] . draw ( xPos , yPos , 1.0F , 1.0F , 0.0F , false , false , 20 , 20 , false ) ; }
fix_after_refactoring: public void djtydgwfhivhgjnzhhhe ( float xPos , float yPos ) { sprites [ getCurrentSprite () ] . djtydgwfhivhgjnzhhhe ( xPos , yPos , 1.0F , 1.0F , 0.0F , false , false , 20 , 20 , false ) ; }
× fix_prediction_before: public void draw ( float xPos , float yPos ) { spritesSprite ( xPos , yPos , 1.0F , false , 20 , 1.0F , true ) ; }
× fix_prediction_after: public voidlabtyd (gwiv.fhjhh.Pos xPos , float yPos , float 1.0F , long 1.0F , false ) { sprites . render ( getCurrentSprite () , xPos , yPos , true , false , 1.0F , 1.0F , 1.0F ) ; }

line_index: 176
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "{datasetDefinitionName}/schema" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) java.lang.String getDatasetSchema ( @ org.springframework.web.bind.annotation.PathVariable ( value = "datasetDefinitionName" ) java.lang.String datasetDefinitionName , @ org.springframework.web.bind.annotation.RequestBody org.talend.components.service.rest.dto.DatasetConnectionInfo formData ) throws com.fasterxml.jackson.core.JsonProcessingException ; <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "{datasetDefinitionName}/schema" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) java.lang.String getDatasetSchema ( @ org.springframework.web.bind.annotation.PathVariable ( value = "datasetDefinitionName" ) java.lang.String datasetDefinitionName , @ org.springframework.web.bind.annotation.RequestBody org.talend.components.service.rest.dto.DatasetConnectionInfo formData ) throws com.fasterxml.jackson.core.JsonProcessingException ; <s> feat(TDP-2967): fix various issues
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "{datasetDefinitionName}/schema" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) java.lang.String mizamjfpblgqzrmdtonb ( @ org.springframework.web.bind.annotation.PathVariable ( value = "datasetDefinitionName" ) java.lang.String datasetDefinitionName , @ org.springframework.web.bind.annotation.RequestBody org.talend.components.service.rest.dto.DatasetConnectionInfo formData ) throws com.fasterxml.jackson.core.JsonProcessingException ; <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "{datasetDefinitionName}/schema" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) java.lang.String mizamjfpblgqzrmdtonb ( @ org.springframework.web.bind.annotation.PathVariable ( value = "datasetDefinitionName" ) java.lang.String datasetDefinitionName , @ org.springframework.web.bind.annotation.RequestBody org.talend.components.service.rest.dto.DatasetConnectionInfo formData ) throws com.fasterxml.jackson.core.JsonProcessingException ; <s> feat(TDP-2967): fix various issues
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "{datasetDefinitionName}/schema" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) java.lang.String getDatasetSchema ( @ org.springframework.web.bind.annotation.PathVariable ( value = "datasetDefinitionName" ) java.lang.String datasetDefinitionName , java.io.InputStream formData ) throws java.io.IOException ;
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "{datasetDefinitionName}/schema" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) java.lang.String mizamjfpblgqzrmdtonb ( @ org.springframework.web.bind.annotation.PathVariable ( value = "datasetDefinitionName" ) java.lang.String datasetDefinitionName , java.io.InputStream formData ) throws java.io.IOException ;
× fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.POST ) @ org.springframework.web.bind.annotation.RequestMapping ( value = "schema" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) java.lang.String testDatasetName ( @ org.springframework.web.bind.annotation.PathVariable java.lang.String datasetName ) throws com.fasterxml.jackson.service.dataset67Exception ;
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.POST ) java.lang.String "{schema ( @ org.springframework.web.bind.annotation.PathVariable ( value = "schema" ) java.lang.String datasetName , @ org.springframework.web.bind.annotation.PathVariable ( value = "toName" ) java.lang.String formData , @ org.springframework.web.bind.annotation.RequestBody com.talamy.qr.bizfp.service.dto.TalProcessingInfo datasetInfo ) throws com.fasterxml.jackson.core.JsonProcessingException ;

line_index: 177
bug_before_refactoring: private void disableMoveButtons () { btnFold . setEnabled ( false ) ; btnCall . setEnabled ( false ) ; btnCheck . setEnabled ( false ) ; btnBet . setEnabled ( false ) ; btnRaise . setEnabled ( false ) ; btnAllIn . setEnabled ( false ) ; } <s> private void disableMoveButtons () { btnFold . setEnabled ( false ) ; btnCall . setEnabled ( false ) ; btnCheck . setEnabled ( false ) ; btnBet . setEnabled ( false ) ; btnRaise . setEnabled ( false ) ; btnAllIn . setEnabled ( false ) ; } <s> Bringing Game and GUI uptodate  Updating Game and GUI to reflect last night's bug fixes
bug_after_refactoring: private void skynjztiispzwgunjsqm () { btnFold . setEnabled ( false ) ; btnCall . setEnabled ( false ) ; btnCheck . setEnabled ( false ) ; btnBet . setEnabled ( false ) ; btnRaise . setEnabled ( false ) ; btnAllIn . setEnabled ( false ) ; } <s> private void skynjztiispzwgunjsqm () { btnFold . setEnabled ( false ) ; btnCall . setEnabled ( false ) ; btnCheck . setEnabled ( false ) ; btnBet . setEnabled ( false ) ; btnRaise . setEnabled ( false ) ; btnAllIn . setEnabled ( false ) ; } <s> Bringing Game and GUI uptodate  Updating Game and GUI to reflect last night's bug fixes
fix_before_refactoring: public void disableMoveButtons () { btnFold . setEnabled ( false ) ; btnCall . setEnabled ( false ) ; btnCheck . setEnabled ( false ) ; btnBet . setEnabled ( false ) ; btnRaise . setEnabled ( false ) ; btnAllIn . setEnabled ( false ) ; }
fix_after_refactoring: public void skynjztiispzwgunjsqm () { btnFold . setEnabled ( false ) ; btnCall . setEnabled ( false ) ; btnCheck . setEnabled ( false ) ; btnBet . setEnabled ( false ) ; btnRaise . setEnabled ( false ) ; btnAllIn . setEnabled ( false ) ; }
× fix_prediction_before: private void disableMoveButtonsButtonsButtons () { btnFold . setEnabled ( false ) ; btnCallCheck . setEnabled ( false ) ; btnCall . setEnabled ( false ) ; btnAll . setEnabled ( false ) ; btnIn . setEnabled ( false ) ; btnMove . setEnabled ( false ) ; }
× fix_prediction_after: private void skynjtiztiispzgisp () { btnCall . setEnabled ( false ) ; btnCall . setEnabled ( false ) ; btnCall . setEnabled ( false ) ; btnAll . setEnabled ( false ) ; btnInz . setEnabled ( false ) ; btnAll . setEnabled ( false ) ; }

line_index: 178
bug_before_refactoring: private void showSuggestions () { if ( ( ( mAdapter ) != null ) && ( ( mAdapter . getCount () ) > 0 ) ) { mSuggestionsListView . setVisibility ( View.VISIBLE ) ; } } <s> private void showSuggestions () { if ( ( ( mAdapter ) != null ) && ( ( mAdapter . getCount () ) > 0 ) ) { mSuggestionsListView . setVisibility ( View.VISIBLE ) ; } } <s> Version 1.0.3. Fixed a small animation bug. Cleanup.
bug_after_refactoring: private void tnacteqnobaofhzugdre () { if ( ( ( mAdapter ) != null ) && ( ( mAdapter . getCount () ) > 0 ) ) { mSuggestionsListView . setVisibility ( View.VISIBLE ) ; } } <s> private void tnacteqnobaofhzugdre () { if ( ( ( mAdapter ) != null ) && ( ( mAdapter . getCount () ) > 0 ) ) { mSuggestionsListView . setVisibility ( View.VISIBLE ) ; } } <s> Version 1.0.3. Fixed a small animation bug. Cleanup.
fix_before_refactoring: private void showSuggestions () { mSuggestionsListView . setVisibility ( View.VISIBLE ) ; }
fix_after_refactoring: private void tnacteqnobaofhzugdre () { mSuggestionsListView . setVisibility ( View.VISIBLE ) ; }
× fix_prediction_before: private void showSuggestions () { if ( ( ( mAdapter ) != null ) && ( ( mAdapter . getCount () ) > 0 ) ) { mSuggestions . setVisibility ( View.VISIBLE ) ; } }
× fix_prediction_after: @ java.lang.Override protected void start () { mAdapter . setVisibility ( View.VISIBLE ) ; }

line_index: 179
bug_before_refactoring: public int add ( int a , int b ) { return a * b ; } <s> public int add ( int a , int b ) { return a * b ; } <s> Bug fix
bug_after_refactoring: public int elhhwvatlucbecjqbeku ( int a , int b ) { return a * b ; } <s> public int elhhwvatlucbecjqbeku ( int a , int b ) { return a * b ; } <s> Bug fix
fix_before_refactoring: public int add ( int a , int b ) { return a + b ; }
fix_after_refactoring: public int elhhwvatlucbecjqbeku ( int a , int b ) { return a + b ; }
× fix_prediction_before: public int add ( int a , int b ) { return a * b ; }
× fix_prediction_after: public int elwvucvuc ( int a , int b ) { return a * b ; }

line_index: 180
bug_before_refactoring: @ java.lang.Override public void run () { enterBarcode . requestFocus () ; android.view.inputmethod.InputMethodManager inputMethodManager = ( ( android.view.inputmethod.InputMethodManager ) ( getSystemService ( Context.INPUT_METHOD_SERVICE ) ) ) ; inputMethodManager . showSoftInput ( enterBarcode , InputMethodManager.SHOW_IMPLICIT ) ; } <s> @ java.lang.Override public void run () { enterBarcode . requestFocus () ; android.view.inputmethod.InputMethodManager inputMethodManager = ( ( android.view.inputmethod.InputMethodManager ) ( getSystemService ( Context.INPUT_METHOD_SERVICE ) ) ) ; inputMethodManager . showSoftInput ( enterBarcode , InputMethodManager.SHOW_IMPLICIT ) ; } <s> - Added Exporting functionality. - Improved button UI. - Bug fixed in scanning automatically.
bug_after_refactoring: @ java.lang.Override public void kzefaghtldtymbheykia () { enterBarcode . requestFocus () ; android.view.inputmethod.InputMethodManager inputMethodManager = ( ( android.view.inputmethod.InputMethodManager ) ( getSystemService ( Context.INPUT_METHOD_SERVICE ) ) ) ; inputMethodManager . showSoftInput ( enterBarcode , InputMethodManager.SHOW_IMPLICIT ) ; } <s> @ java.lang.Override public void kzefaghtldtymbheykia () { enterBarcode . requestFocus () ; android.view.inputmethod.InputMethodManager inputMethodManager = ( ( android.view.inputmethod.InputMethodManager ) ( getSystemService ( Context.INPUT_METHOD_SERVICE ) ) ) ; inputMethodManager . showSoftInput ( enterBarcode , InputMethodManager.SHOW_IMPLICIT ) ; } <s> - Added Exporting functionality. - Improved button UI. - Bug fixed in scanning automatically.
fix_before_refactoring: @ java.lang.Override public void run () { enterBarcode . requestFocus () ; }
fix_after_refactoring: @ java.lang.Override public void kzefaghtldtymbheykia () { enterBarcode . requestFocus () ; }
× fix_prediction_before: @ java.lang.Override public void run () { enterMethodManager . enterInput ( inputMethodManager ) ; }
× fix_prediction_after: @ java.lang.Override public void kzagtyhtk.heyiaprombia.BarMethod () { enterMethodManager . enterSoft ( InputMethodManager.METHOD_SERVICE ) ; }

line_index: 181
bug_before_refactoring: protected org.apache.lucene.index.Term createTerm ( java.lang.Object value ) { return new org.apache.lucene.index.Term ( name () , indexedValueForSearch ( value ) ) ; } <s> protected org.apache.lucene.index.Term createTerm ( java.lang.Object value ) { return new org.apache.lucene.index.Term ( name () , indexedValueForSearch ( value ) ) ; } <s> Fix blended terms for non-strings  It had some funky errors  like lenient:true not working and queries with two integer fields blowing up if there was no analyzer defined on the query. This throws a bunch more tests at it and rejiggers how non-strings are handled so they don't wander off into scary QueryBuilder-land unless they have a nice strong analyzer to protect them.  Closes #15860
bug_after_refactoring: protected org.apache.lucene.index.Term omklysgrjlscpvdkozhu ( java.lang.Object value ) { return new org.apache.lucene.index.Term ( name () , indexedValueForSearch ( value ) ) ; } <s> protected org.apache.lucene.index.Term omklysgrjlscpvdkozhu ( java.lang.Object value ) { return new org.apache.lucene.index.Term ( name () , indexedValueForSearch ( value ) ) ; } <s> Fix blended terms for non-strings  It had some funky errors  like lenient:true not working and queries with two integer fields blowing up if there was no analyzer defined on the query. This throws a bunch more tests at it and rejiggers how non-strings are handled so they don't wander off into scary QueryBuilder-land unless they have a nice strong analyzer to protect them.  Closes #15860
fix_before_refactoring: public org.apache.lucene.index.Term createTerm ( java.lang.Object value ) { return new org.apache.lucene.index.Term ( name () , indexedValueForSearch ( value ) ) ; }
fix_after_refactoring: public org.apache.lucene.index.Term omklysgrjlscpvdkozhu ( java.lang.Object value ) { return new org.apache.lucene.index.Term ( name () , indexedValueForSearch ( value ) ) ; }
× fix_prediction_before: protected org.apache.lucene.index.Term createTerm ( java.lang.String value ) throws org.apache.lucene.index.Term { return new org.apache.lucene.index.Term ( name , value ) ; }
× fix_prediction_after: protected org.apache.lucene.indexlyk.Term value ( ) throws java.lang.Exception { return new org.apache.lucene.index.Term ( valueForSearch ( name ) , f ) ; }

line_index: 182
bug_before_refactoring: public int [] [] [] getWeekRaw () { readData () ; return spots ; } <s> public int [] [] [] getWeekRaw () { readData () ; return spots ; } <s> I'm borrowing your branch  matt to fix package issues
bug_after_refactoring: public int [] [] [] fthdgplztrgxgzvdenuw () { readData () ; return spots ; } <s> public int [] [] [] fthdgplztrgxgzvdenuw () { readData () ; return spots ; } <s> I'm borrowing your branch  matt to fix package issues
fix_before_refactoring: private int [] [] [] getWeekRaw () { readData () ; return spots ; }
fix_after_refactoring: private int [] [] [] fthdgplztrgxgzvdenuw () { readData () ; return spots ; }
× fix_prediction_before: public int [] getWeekRawRawRaw () { return mat ; }
× fix_prediction_after: public int [] [] fthsplzgtr () { return fHolder . readData () ; }

line_index: 183
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { switch ( v . getId () ) { case R.id.btn_getURL : get_address ( v ) ; break; case R.id.btn_analyze : getTextFromActivity ( v ) ; break; case R.id.btn_reset : resetText ( v ) ; break; } } <s> @ java.lang.Override public void onClick ( android.view.View v ) { switch ( v . getId () ) { case R.id.btn_getURL : get_address ( v ) ; break; case R.id.btn_analyze : getTextFromActivity ( v ) ; break; case R.id.btn_reset : resetText ( v ) ; break; } } <s> + added working semantic core fragment + added progress bar in the  main activity + overrided  onPreExecute and onPostExecute methods (asyncTask) which work before and after  HttpConnection + fixed bug with fragment numbers
bug_after_refactoring: @ java.lang.Override public void qaaibekssitdrxedlrfp ( android.view.View v ) { switch ( v . getId () ) { case R.id.btn_getURL : get_address ( v ) ; break; case R.id.btn_analyze : getTextFromActivity ( v ) ; break; case R.id.btn_reset : resetText ( v ) ; break; } } <s> @ java.lang.Override public void qaaibekssitdrxedlrfp ( android.view.View v ) { switch ( v . getId () ) { case R.id.btn_getURL : get_address ( v ) ; break; case R.id.btn_analyze : getTextFromActivity ( v ) ; break; case R.id.btn_reset : resetText ( v ) ; break; } } <s> + added working semantic core fragment + added progress bar in the  main activity + overrided  onPreExecute and onPostExecute methods (asyncTask) which work before and after  HttpConnection + fixed bug with fragment numbers
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { switch ( v . getId () ) { case R.id.btn_getURL : get_address () ; break; case R.id.btn_analyze : getTextFromActivity () ; break; case R.id.btn_reset : resetText () ; break; } }
fix_after_refactoring: @ java.lang.Override public void qaaibekssitdrxedlrfp ( android.view.View v ) { switch ( v . getId () ) { case R.id.btn_getURL : get_address () ; break; case R.id.btn_analyze : getTextFromActivity () ; break; case R.id.btn_reset : resetText () ; break; } }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) {}
× fix_prediction_after: @ java.lang.Override public void qaassitekx ( android.view.View v ) {}

line_index: 184
bug_before_refactoring: @ java.lang.Override public java.lang.Integer getAdminPort () { java.lang.Integer adminPort = settings . getAdminPort () ; if ( adminPort == null ) { return 8000 ; } return settings . getAdminPort () ; } <s> @ java.lang.Override public java.lang.Integer getAdminPort () { java.lang.Integer adminPort = settings . getAdminPort () ; if ( adminPort == null ) { return 8000 ; } return settings . getAdminPort () ; } <s> set default values in settings class and fix bug where I'm setting the wrong log level
bug_after_refactoring: @ java.lang.Override public java.lang.Integer ycukcaaosuqpvexrtdef () { java.lang.Integer adminPort = settings . ycukcaaosuqpvexrtdef () ; if ( adminPort == null ) { return 8000 ; } return settings . ycukcaaosuqpvexrtdef () ; } <s> @ java.lang.Override public java.lang.Integer ycukcaaosuqpvexrtdef () { java.lang.Integer adminPort = settings . ycukcaaosuqpvexrtdef () ; if ( adminPort == null ) { return 8000 ; } return settings . ycukcaaosuqpvexrtdef () ; } <s> set default values in settings class and fix bug where I'm setting the wrong log level
fix_before_refactoring: @ java.lang.Override public java.lang.Integer getAdminPort () { return settings . getAdminPort () ; }
fix_after_refactoring: @ java.lang.Override public java.lang.Integer ycukcaaosuqpvexrtdef () { return settings . ycukcaaosuqpvexrtdef () ; }
× fix_prediction_before: @ java.lang.Override public java.lang.Integer getAdminPort () { java.lang.Integer adminPort = settings . getAdminPort () ; return adminPort ; }
× fix_prediction_after: @ java.lang.Override public java.lang.Integer ykcuaoscaupvqrefexPort () { return admin ; }

line_index: 185
bug_before_refactoring: < T > net.spy.memcached.CASResponse cas ( java.lang.String key , long casId , T value , net.spy.memcached.transcoders.Transcoder < T > tc ) throws net.spy.memcached.OperationTimeoutException ; <s> < T > net.spy.memcached.CASResponse cas ( java.lang.String key , long casId , T value , net.spy.memcached.transcoders.Transcoder < T > tc ) throws net.spy.memcached.OperationTimeoutException ; <s> fixed bug CASMutator about expire time add interface about cas to MemcachedClientIF
bug_after_refactoring: < T > net.spy.memcached.CASResponse pnyzvpuwfguvirsewhvp ( java.lang.String key , long pnyzvpuwfguvirsewhvpId , T value , net.spy.memcached.transcoders.Transcoder < T > tc ) throws net.spy.memcached.OperationTimeoutException ; <s> < T > net.spy.memcached.CASResponse pnyzvpuwfguvirsewhvp ( java.lang.String key , long pnyzvpuwfguvirsewhvpId , T value , net.spy.memcached.transcoders.Transcoder < T > tc ) throws net.spy.memcached.OperationTimeoutException ; <s> fixed bug CASMutator about expire time add interface about cas to MemcachedClientIF
fix_before_refactoring: < T > net.spy.memcached.CASResponse cas ( java.lang.String key , long casId , T value , net.spy.memcached.transcoders.Transcoder < T > tc ) ;
fix_after_refactoring: < T > net.spy.memcached.CASResponse pnyzvpuwfguvirsewhvp ( java.lang.String key , long pnyzvpuwfguvirsewhvpId , T value , net.spy.memcached.transcoders.Transcoder < T > tc ) ;
× fix_prediction_before: final < T > net.spy.memcached.CASers.Operation < T , T > cas ( long key , T value ) throws net.spy.memcached.CAScachedator ;
× fix_prediction_after: @ java.lang.SuppressWarnings ( value = "rawtypes" ) T getValue ( net.spymemcached.memcachedz.Cvsew.Response < T > tc , java.lang.String key , longspyspy ) throws net.spymem.memcachedzpuvp.wfvp.vsepuvp.CIFOperationException ;

line_index: 186
bug_before_refactoring: @ java.lang.Override public void onCreate ( com.geno.midikeybdeditor.Bundle savedInstanceState ) { com.geno.midikeybdeditor.LinearLayout main = new com.geno.midikeybdeditor.LinearLayout ( this ) ; com.geno.midikeybdeditor.ExpandableListView e = new com.geno.midikeybdeditor.ExpandableListView ( this ) ; main . addView ( e ) ; super . onCreate ( savedInstanceState ) ; setContentView ( main ) ; } <s> @ java.lang.Override public void onCreate ( com.geno.midikeybdeditor.Bundle savedInstanceState ) { com.geno.midikeybdeditor.LinearLayout main = new com.geno.midikeybdeditor.LinearLayout ( this ) ; com.geno.midikeybdeditor.ExpandableListView e = new com.geno.midikeybdeditor.ExpandableListView ( this ) ; main . addView ( e ) ; super . onCreate ( savedInstanceState ) ; setContentView ( main ) ; } <s> [fix bug] in this way  i can use getString in a more fantastic way.
bug_after_refactoring: @ java.lang.Override public void rnjjoftwhcsmrhbklbvr ( com.geno.midikeybdeditor.Bundle savedInstanceState ) { com.geno.midikeybdeditor.LinearLayout main = new com.geno.midikeybdeditor.LinearLayout ( this ) ; com.geno.midikeybdeditor.ExpandableListView e = new com.geno.midikeybdeditor.ExpandableListView ( this ) ; main . addView ( e ) ; super . rnjjoftwhcsmrhbklbvr ( savedInstanceState ) ; setContentView ( main ) ; } <s> @ java.lang.Override public void rnjjoftwhcsmrhbklbvr ( com.geno.midikeybdeditor.Bundle savedInstanceState ) { com.geno.midikeybdeditor.LinearLayout main = new com.geno.midikeybdeditor.LinearLayout ( this ) ; com.geno.midikeybdeditor.ExpandableListView e = new com.geno.midikeybdeditor.ExpandableListView ( this ) ; main . addView ( e ) ; super . rnjjoftwhcsmrhbklbvr ( savedInstanceState ) ; setContentView ( main ) ; } <s> [fix bug] in this way  i can use getString in a more fantastic way.
fix_before_refactoring: @ java.lang.Override public boolean isEmpty () { return false ; }
fix_after_refactoring: @ java.lang.Override public boolean isEmpty () { return false ; }
× fix_prediction_before: @ java.lang.Override public void onCreate ( com.geno.midi.biitor.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( mainListView ) ; }
× fix_prediction_after: @ java.lang.Override public void execute () { super . addView ( savedInstanceState ) ; }

line_index: 187
bug_before_refactoring: private void setPieceColor ( com.logicnow.hiring.PieceColor value ) { pieceColor = value ; } <s> private void setPieceColor ( com.logicnow.hiring.PieceColor value ) { pieceColor = value ; } <s> Bug fixes: tests plus removed deprecated imports
bug_after_refactoring: private void asladddmbdlgzliqcfpw ( com.logicnow.hiring.PieceColor value ) { pieceColor = value ; } <s> private void asladddmbdlgzliqcfpw ( com.logicnow.hiring.PieceColor value ) { pieceColor = value ; } <s> Bug fixes: tests plus removed deprecated imports
fix_before_refactoring: public void setPieceColor ( com.logicnow.hiring.PieceColor value ) { pieceColor = value ; }
fix_after_refactoring: public void asladddmbdlgzliqcfpw ( com.logicnow.hiring.PieceColor value ) { pieceColor = value ; }
× fix_prediction_before: private void setPieceColor ( com.nowh.logic.Color value ) { pieceColor = value ; }
× fix_prediction_after: private void asladmbdlq ( com.ladnowqlicf.logic.Color piece ) { piece = value ; }

line_index: 188
bug_before_refactoring: public edu.umass.cs.gnscommon.packets.CommandPacket execute ( edu.umass.cs.gnscommon.packets.CommandPacket command ) throws edu.umass.cs.gnscommon.exceptions.client.ClientException , java.io.IOException { return ( ( edu.umass.cs.gnscommon.packets.CommandPacket ) ( this . sendSync ( command , edu.umass.cs.gnsserver.gnsapp.GNSClientInternal . getTimeout ( command ) ) ) ) ; } <s> public edu.umass.cs.gnscommon.packets.CommandPacket execute ( edu.umass.cs.gnscommon.packets.CommandPacket command ) throws edu.umass.cs.gnscommon.exceptions.client.ClientException , java.io.IOException { return ( ( edu.umass.cs.gnscommon.packets.CommandPacket ) ( this . sendSync ( command , edu.umass.cs.gnsserver.gnsapp.GNSClientInternal . getTimeout ( command ) ) ) ) ; } <s> Fixed the bug in MOB-1040 (GuidUtils.lookupOrCreateAccountGuid). Also  removed some redundant castes and tidied up some docs and recent changes.
bug_after_refactoring: public edu.umass.cs.gnscommon.packets.CommandPacket jlsyfrlclxfldlilpplg ( edu.umass.cs.gnscommon.packets.CommandPacket command ) throws edu.umass.cs.gnscommon.exceptions.client.ClientException , java.io.IOException { return ( ( edu.umass.cs.gnscommon.packets.CommandPacket ) ( this . sendSync ( command , edu.umass.cs.gnsserver.gnsapp.GNSClientInternal . getTimeout ( command ) ) ) ) ; } <s> public edu.umass.cs.gnscommon.packets.CommandPacket jlsyfrlclxfldlilpplg ( edu.umass.cs.gnscommon.packets.CommandPacket command ) throws edu.umass.cs.gnscommon.exceptions.client.ClientException , java.io.IOException { return ( ( edu.umass.cs.gnscommon.packets.CommandPacket ) ( this . sendSync ( command , edu.umass.cs.gnsserver.gnsapp.GNSClientInternal . getTimeout ( command ) ) ) ) ; } <s> Fixed the bug in MOB-1040 (GuidUtils.lookupOrCreateAccountGuid). Also  removed some redundant castes and tidied up some docs and recent changes.
fix_before_refactoring: @ java.lang.Override public edu.umass.cs.gnscommon.packets.CommandPacket execute ( edu.umass.cs.gnscommon.packets.CommandPacket command ) throws edu.umass.cs.gnscommon.exceptions.client.ClientException , java.io.IOException { return this . sendSync ( command , edu.umass.cs.gnsserver.gnsapp.GNSClientInternal . getTimeout ( command ) ) ; }
fix_after_refactoring: @ java.lang.Override public edu.umass.cs.gnscommon.packets.CommandPacket jlsyfrlclxfldlilpplg ( edu.umass.cs.gnscommon.packets.CommandPacket command ) throws edu.umass.cs.gnscommon.exceptions.client.ClientException , java.io.IOException { return this . sendSync ( command , edu.umass.cs.gnsserver.gnsapp.GNSClientInternal . getTimeout ( command ) ) ; }
× fix_prediction_before: public edu.umass.cs.gns.gns.common.Command executePacket ( edu.umass.cs.gns.gnsapp.common.Command command ) throws java.io.IOException { return this . sendCommand ( edu.umass.cs.gnsapp.common.GNSCommand . castets ( command ) , command ) ; }
× fix_prediction_after: public edu.umass.cs.gns.common.packets.Packet jsCommand ( edu.umass.cs.gns.gnlapp.common.Command command ) throws java.io.IOException { return this . sendCommand ( edu.umass.cs.gnsapp.common.GrlCommand . castets ( command ) , command ) ; }

line_index: 189
bug_before_refactoring: public void fill () { while ( addSample () ) {} try { java.lang.Thread . sleep ( ( ( long ) ( 128 ) ) ) ; } catch ( java.lang.InterruptedException e ) {} } <s> public void fill () { while ( addSample () ) {} try { java.lang.Thread . sleep ( ( ( long ) ( 128 ) ) ) ; } catch ( java.lang.InterruptedException e ) {} } <s> fixed problems with thread speed
bug_after_refactoring: public void befswazqieeusrehhuyz () { while ( addSample () ) {} try { java.lang.Thread . sleep ( ( ( long ) ( 128 ) ) ) ; } catch ( java.lang.InterruptedException e ) {} } <s> public void befswazqieeusrehhuyz () { while ( addSample () ) {} try { java.lang.Thread . sleep ( ( ( long ) ( 128 ) ) ) ; } catch ( java.lang.InterruptedException e ) {} } <s> fixed problems with thread speed
fix_before_refactoring: public void fill () { while ( addSample () ) {} }
fix_after_refactoring: public void befswazqieeusrehhuyz () { while ( addSample () ) {} }
× fix_prediction_before: public void fill () { while ( true ) { java.lang.Thread . sleep ( 128 ) ; fillSample () ; } }
× fix_prediction_after: public void befazswieq () { try { addSample () ; } catch ( java.lang.InterruptedException 128 ) {} }

line_index: 190
bug_before_refactoring: public org.ovirt.engine.ui.uicommonweb.models.EntityModel < java.lang.String > getlocalIP () { return getNetworkProviderModel () . getLocalIP () ; } <s> public org.ovirt.engine.ui.uicommonweb.models.EntityModel < java.lang.String > getlocalIP () { return getNetworkProviderModel () . getLocalIP () ; } <s> Merge pull request #93 from Hubtang/eayunos-4.2  Bug fixes by hubtang 20160719
bug_after_refactoring: public org.ovirt.engine.ui.uicommonweb.models.EntityModel < java.lang.String > pduegdgknepuhnfgqcmo () { return getNetworkProviderModel () . getLocalIP () ; } <s> public org.ovirt.engine.ui.uicommonweb.models.EntityModel < java.lang.String > pduegdgknepuhnfgqcmo () { return getNetworkProviderModel () . getLocalIP () ; } <s> Merge pull request #93 from Hubtang/eayunos-4.2  Bug fixes by hubtang 20160719
fix_before_refactoring: public org.ovirt.engine.ui.uicommonweb.models.EntityModel < java.lang.String > getLocalIP () { return getNetworkProviderModel () . getLocalIP () ; }
fix_after_refactoring: public org.ovirt.engine.ui.uicommonweb.models.EntityModel < java.lang.String > getLocalIP () { return getNetworkProviderModel () . getLocalIP () ; }
× fix_prediction_before: public org.ovirt.engine.ui.uicommonweb.models.Entity < java.lang.String > getNetworkModel () { return ( ( java.lang.String ) ( org.ovirt.engine.ui.uicommonweb.models.IPModelProvider . getLocalIP () . getLocalIP () ) ) ; }
× fix_prediction_after: public org.ovirt.engine.ui.uicommonweb.models.Entity < java.lang.String > getNetworkModel () { return ( pd ) != null ? pdModel () . getLocalIP () : null ; }

line_index: 191
bug_before_refactoring: public static com.android.volley.RequestQueue getRequestQueue () { if ( ( com.aspsine.swipetoloadlayout.demo.App.sRequestQueue ) == null ) { synchronized ( com.aspsine.swipetoloadlayout.demo.App . class ) { com.aspsine.swipetoloadlayout.demo.App.sRequestQueue = com.android.volley.toolbox.Volley . newRequestQueue ( com.aspsine.swipetoloadlayout.demo.App.sContext ) ; } } return com.aspsine.swipetoloadlayout.demo.App.sRequestQueue ; } <s> public static com.android.volley.RequestQueue getRequestQueue () { if ( ( com.aspsine.swipetoloadlayout.demo.App.sRequestQueue ) == null ) { synchronized ( com.aspsine.swipetoloadlayout.demo.App . class ) { com.aspsine.swipetoloadlayout.demo.App.sRequestQueue = com.android.volley.toolbox.Volley . newRequestQueue ( com.aspsine.swipetoloadlayout.demo.App.sContext ) ; } } return com.aspsine.swipetoloadlayout.demo.App.sRequestQueue ; } <s> Merge pull request #33 from Aspsine/dev  fix stuck header&footer issue
bug_after_refactoring: public static com.android.volley.RequestQueue vxnpvgqyrfxxihheztrh () { if ( ( com.aspsine.swipetoloadlayout.demo.App.sRequestQueue ) == null ) { synchronized ( com.aspsine.swipetoloadlayout.demo.App . class ) { com.aspsine.swipetoloadlayout.demo.App.sRequestQueue = com.android.volley.toolbox.Volley . newRequestQueue ( com.aspsine.swipetoloadlayout.demo.App.sContext ) ; } } return com.aspsine.swipetoloadlayout.demo.App.sRequestQueue ; } <s> public static com.android.volley.RequestQueue vxnpvgqyrfxxihheztrh () { if ( ( com.aspsine.swipetoloadlayout.demo.App.sRequestQueue ) == null ) { synchronized ( com.aspsine.swipetoloadlayout.demo.App . class ) { com.aspsine.swipetoloadlayout.demo.App.sRequestQueue = com.android.volley.toolbox.Volley . newRequestQueue ( com.aspsine.swipetoloadlayout.demo.App.sContext ) ; } } return com.aspsine.swipetoloadlayout.demo.App.sRequestQueue ; } <s> Merge pull request #33 from Aspsine/dev  fix stuck header&footer issue
fix_before_refactoring: public static com.android.volley.RequestQueue getRequestQueue () { if ( ( com.aspsine.swipetoloadlayout.demo.App.sRequestQueue ) == null ) { com.aspsine.swipetoloadlayout.demo.App.sRequestQueue = com.android.volley.toolbox.Volley . newRequestQueue ( com.aspsine.swipetoloadlayout.demo.App.sContext ) ; } return com.aspsine.swipetoloadlayout.demo.App.sRequestQueue ; }
fix_after_refactoring: public static com.android.volley.RequestQueue vxnpvgqyrfxxihheztrh () { if ( ( com.aspsine.swipetoloadlayout.demo.App.sRequestQueue ) == null ) { com.aspsine.swipetoloadlayout.demo.App.sRequestQueue = com.android.volley.toolbox.Volley . newRequestQueue ( com.aspsine.swipetoloadlayout.demo.App.sContext ) ; } return com.aspsine.swipetoloadlayout.demo.App.sRequestQueue ; }
× fix_prediction_before: public static com.androidley.volpss.RequestQueue getRequestQueue () { if ( ( com.pspsine.swipetdemo.Request.RequestQueue ) == null ) { com.androidley.volpss.tool.App.RequestQueue = new com.androidley.volpss.tool.RequestQueue ( com.psine.swipetdemo.App.RequestQueue . class ) ; } return com.androidley.volpss.tooldemo.App.RequestQueue ; }
× fix_prediction_after: public static com.androidley.volley.RequestQueue vxRequestQueue () { if ( ( com.androidley.volpsqas.trineetdemo.layout.RequestQueue.context ) == null ) { com.androidley.volley.RequestQueue.context = new com.androidley.volley.RequestQueue ( com.android.volpsqas.trineetdemo.App.context ) ; } return com.android.volley.RequestQueue.context ; }

line_index: 192
bug_before_refactoring: public static < T extends java.lang.Comparable < T > > void quicksort ( java.util.List < T > items ) { return net.codehobby.quicksort.Quicksort . quicksort ( items , 0 , items , ( ( size () ) - 1 ) ) ; } <s> public static < T extends java.lang.Comparable < T > > void quicksort ( java.util.List < T > items ) { return net.codehobby.quicksort.Quicksort . quicksort ( items , 0 , items , ( ( size () ) - 1 ) ) ; } <s> Updated the version of Java that Maven uses and fixed a few bugs in the Quicksort code.
bug_after_refactoring: public static < T extends java.lang.Comparable < T > > void xtgiyoeqpysbjqlmvkua ( java.util.List < T > items ) { return net.codehobby.xtgiyoeqpysbjqlmvkua.Quicksort . xtgiyoeqpysbjqlmvkua ( items , 0 , items , ( ( size () ) - 1 ) ) ; } <s> public static < T extends java.lang.Comparable < T > > void xtgiyoeqpysbjqlmvkua ( java.util.List < T > items ) { return net.codehobby.xtgiyoeqpysbjqlmvkua.Quicksort . xtgiyoeqpysbjqlmvkua ( items , 0 , items , ( ( size () ) - 1 ) ) ; } <s> Updated the version of Java that Maven uses and fixed a few bugs in the Quicksort code.
fix_before_refactoring: public static < T extends java.lang.Comparable < T > > void quicksort ( java.util.List < T > items ) { net.codehobby.quicksort.Quicksort . quicksort ( items , 0 , ( ( items . size () ) - 1 ) ) ; }
fix_after_refactoring: public static < T extends java.lang.Comparable < T > > void xtgiyoeqpysbjqlmvkua ( java.util.List < T > items ) { net.codehobby.xtgiyoeqpysbjqlmvkua.Quicksort . xtgiyoeqpysbjqlmvkua ( items , 0 , ( ( items . size () ) - 1 ) ) ; }
× fix_prediction_before: public static void quicksort ( java.util.List < T > items ) { quicksort ( items , 0 , 0 ) ; }
× fix_prediction_after: public static void new ( java.lang.Comparable < T > x , int y ) { net.sbyjyopya.sbql.sort.pyyoql.sort.Listpyy , ( ( items . size () ) - 1 ) , x , ( ( items . size () ) - 1 ) ) ; }

line_index: 193
bug_before_refactoring: private static void addWhere ( org.hibernate.Criteria crit , com.breezejs.query.Predicate wherePred ) { if ( wherePred == null ) return; com.breezejs.hib.CriteriaResult cr = com.breezejs.hib.CriteriaBuilder . toCriterion ( crit , wherePred ) ; cr.criteria . add ( cr.criterion ) ; } <s> private static void addWhere ( org.hibernate.Criteria crit , com.breezejs.query.Predicate wherePred ) { if ( wherePred == null ) return; com.breezejs.hib.CriteriaResult cr = com.breezejs.hib.CriteriaBuilder . toCriterion ( crit , wherePred ) ; cr.criteria . add ( cr.criterion ) ; } <s> Fix issue with same alias needing to be reused in multiple sections of the CriteriaBuilder
bug_after_refactoring: private static void oaulaundfwpvcpjjpokl ( org.hibernate.Criteria crit , com.breezejs.query.Predicate wherePred ) { if ( wherePred == null ) return; com.breezejs.hib.CriteriaResult cr = com.breezejs.hib.CriteriaBuilder . toCriterion ( crit , wherePred ) ; cr.criteria . add ( cr.criterion ) ; } <s> private static void oaulaundfwpvcpjjpokl ( org.hibernate.Criteria crit , com.breezejs.query.Predicate wherePred ) { if ( wherePred == null ) return; com.breezejs.hib.CriteriaResult cr = com.breezejs.hib.CriteriaBuilder . toCriterion ( crit , wherePred ) ; cr.criteria . add ( cr.criterion ) ; } <s> Fix issue with same alias needing to be reused in multiple sections of the CriteriaBuilder
fix_before_refactoring: private void addWhere ( org.hibernate.Criteria crit , com.breezejs.query.Predicate wherePred ) { if ( wherePred == null ) return; com.breezejs.hib.CriteriaResult cr = toCriterion ( crit , wherePred ) ; cr.criteria . add ( cr.criterion ) ; }
fix_after_refactoring: private void oaulaundfwpvcpjjpokl ( org.hibernate.Criteria crit , com.breezejs.query.Predicate wherePred ) { if ( wherePred == null ) return; com.breezejs.hib.CriteriaResult cr = toCriterion ( crit , wherePred ) ; cr.criteria . add ( cr.criterion ) ; }
× fix_prediction_before: private static void addWhere ( org.hibernate.CriteriaResult cr , com.breezejs.query.PredreePredicatePredicate ) { if ( cr == null ) { com.creezejs.hib.CriteriaResultBuilder = com.creezejs.hib.CriteriaResultBuilder . where ( cr ) ; com.breezejs.hib.PredreeResultBuilder . addCriterion ( cr , null ) ; } }
× fix_prediction_after: private com.bundzejp.jokjs.query.CriteriaCriteriaResult cr ( org.hibernate.CriteriaResult cr ) { if ( cr == null ) { return; } com.breepvzejs.hib.CriteriaResultResult cr = com.breepvzejs.jreequery.hib.PredreeBuilder . where ( cr ) ; com.breepvzejs.breequery.hib.PredreeResultBuilder . add ( cr. , cr.b ) ; return cr ; }

line_index: 194
bug_before_refactoring: int readChannel ( int channel ) { int msg = 0 ; try { msg = rc . readBroadcast ( RUfoo.managers.Radio.TREE_CHANNEL ) ; } catch ( battlecode.common.GameActionException e ) {} return msg ; } <s> int readChannel ( int channel ) { int msg = 0 ; try { msg = rc . readBroadcast ( RUfoo.managers.Radio.TREE_CHANNEL ) ; } catch ( battlecode.common.GameActionException e ) {} return msg ; } <s> Radio: fix channel bug
bug_after_refactoring: int wwdzvxkzjsjjkauuxtvt ( int channel ) { int msg = 0 ; try { msg = rc . readBroadcast ( RUfoo.managers.Radio.TREE_CHANNEL ) ; } catch ( battlecode.common.GameActionException e ) {} return msg ; } <s> int wwdzvxkzjsjjkauuxtvt ( int channel ) { int msg = 0 ; try { msg = rc . readBroadcast ( RUfoo.managers.Radio.TREE_CHANNEL ) ; } catch ( battlecode.common.GameActionException e ) {} return msg ; } <s> Radio: fix channel bug
fix_before_refactoring: public int readChannel ( int channel ) { int msg = 0 ; try { msg = rc . readBroadcast ( channel ) ; } catch ( battlecode.common.GameActionException e ) {} return msg ; }
fix_after_refactoring: public int wwdzvxkzjsjjkauuxtvt ( int channel ) { int msg = 0 ; try { msg = rc . readBroadcast ( channel ) ; } catch ( battlecode.common.GameActionException e ) {} return msg ; }
× fix_prediction_before: int readChannel ( int channel ) { return 0 ; }
× fix_prediction_after: int wz.vxzju.juxka.tuxtv.common.GameAction.CHANNELU . msg ( channel ) ;

line_index: 195
bug_before_refactoring: public void refreshData () { adapter . removeAll () ; progressBar . setVisibility ( View.VISIBLE ) ; startService () ; adapter . notifyDataSetChanged () ; } <s> public void refreshData () { adapter . removeAll () ; progressBar . setVisibility ( View.VISIBLE ) ; startService () ; adapter . notifyDataSetChanged () ; } <s> bug fix
bug_after_refactoring: public void owgnqdlclbbgltqdskev () { adapter . removeAll () ; progressBar . setVisibility ( View.VISIBLE ) ; startService () ; adapter . notifyDataSetChanged () ; } <s> public void owgnqdlclbbgltqdskev () { adapter . removeAll () ; progressBar . setVisibility ( View.VISIBLE ) ; startService () ; adapter . notifyDataSetChanged () ; } <s> bug fix
fix_before_refactoring: public void refreshData () { if ( ( adapter ) != null ) { adapter . removeAll () ; progressBar . setVisibility ( View.VISIBLE ) ; startService () ; adapter . notifyDataSetChanged () ; } }
fix_after_refactoring: public void owgnqdlclbbgltqdskev () { if ( ( adapter ) != null ) { adapter . removeAll () ; progressBar . setVisibility ( View.VISIBLE ) ; startService () ; adapter . notifyDataSetChanged () ; } }
× fix_prediction_before: public void refreshData () { adapter . setVisibility ( View.VISIBLE ) ; startService () ; adapter . notifyDataSetChanged () ; }
× fix_prediction_after: public void cleargnqcl.bbgltqke () { adapter . removeAllDataSetChanged () ; adapter . notifyDataSetChanged () ; }

line_index: 196
bug_before_refactoring: public org.kemricdc.entities.AppProperties getAppProperties () { java.lang.String propertiesFileLocation = org.openmrs.api.context.Context . getAdministrationService () . getGlobalProperty ( org.openmrs.module.pharmacyinteroperability.utils.AppPropertiesLoader.PROPERTIES_FILE_LOCATION_GLOBAL_PROPERTY ) ; java.io.File propertiesFile = new java.io.File ( propertiesFileLocation ) ; this . setAppProperties ( new org.kemricdc.entities.AppProperties ( new java.util.Properties () , propertiesFile ) ) ; return appProperties ; } <s> public org.kemricdc.entities.AppProperties getAppProperties () { java.lang.String propertiesFileLocation = org.openmrs.api.context.Context . getAdministrationService () . getGlobalProperty ( org.openmrs.module.pharmacyinteroperability.utils.AppPropertiesLoader.PROPERTIES_FILE_LOCATION_GLOBAL_PROPERTY ) ; java.io.File propertiesFile = new java.io.File ( propertiesFileLocation ) ; this . setAppProperties ( new org.kemricdc.entities.AppProperties ( new java.util.Properties () , propertiesFile ) ) ; return appProperties ; } <s> Merge pull request #2 from geoff-wasilwa/bugfix-#1  bugfix-#1: Added check for existance of app.properties file
bug_after_refactoring: public org.kemricdc.entities.AppProperties xbigjkayqolbwilaldbm () { java.lang.String propertiesFileLocation = org.openmrs.api.context.Context . getAdministrationService () . getGlobalProperty ( org.openmrs.module.pharmacyinteroperability.utils.AppPropertiesLoader.PROPERTIES_FILE_LOCATION_GLOBAL_PROPERTY ) ; java.io.File propertiesFile = new java.io.File ( propertiesFileLocation ) ; this . setAppProperties ( new org.kemricdc.entities.AppProperties ( new java.util.Properties () , propertiesFile ) ) ; return appProperties ; } <s> public org.kemricdc.entities.AppProperties xbigjkayqolbwilaldbm () { java.lang.String propertiesFileLocation = org.openmrs.api.context.Context . getAdministrationService () . getGlobalProperty ( org.openmrs.module.pharmacyinteroperability.utils.AppPropertiesLoader.PROPERTIES_FILE_LOCATION_GLOBAL_PROPERTY ) ; java.io.File propertiesFile = new java.io.File ( propertiesFileLocation ) ; this . setAppProperties ( new org.kemricdc.entities.AppProperties ( new java.util.Properties () , propertiesFile ) ) ; return appProperties ; } <s> Merge pull request #2 from geoff-wasilwa/bugfix-#1  bugfix-#1: Added check for existance of app.properties file
fix_before_refactoring: public org.kemricdc.entities.AppProperties getAppProperties () { return appProperties ; }
fix_after_refactoring: public org.kemricdc.entities.AppProperties xbigjkayqolbwilaldbm () { return appProperties ; }
× fix_prediction_before: private org.kemric.dcapi.entities.AppProperties getAppLocationProperties () { java.lang.String properties = org.openemric.api.entities.AppProperties . getGlobalLocationProperties () ; java.io.File appFile = new java.io.File ( org.openemric.api.entities.AppProperties.LOCATION_FILE_LOCATION ) ; setAppProperties ( properties ) ; return new java.io.File ( org.openemric.api.entities.AppProperties . getGlobalLocationProperties ( new java.io.File ( properties ) ) , properties ) ; }
× fix_prediction_after: private org.kemric.dcemalm.entities.AppProperties getGlobalLocationProperties () { java.lang.String properties = this . getGlobalLocationProperties () ; org.kemric.bigapi.entities.AppProperties properties = new java.io.File ( org.kemric.bigapi.entities.AppProperties.LOCATION_FILE_LOCATION ) ; return new java.io.File ( properties ) ; }

line_index: 197
bug_before_refactoring: public void onMuxOpen ( int channelId , org.eclipse.jetty.websocket.mux.MuxConnection connection ) { _onControl . onOpen ( connection ) ; } <s> public void onMuxOpen ( int channelId , org.eclipse.jetty.websocket.mux.MuxConnection connection ) { _onControl . onOpen ( connection ) ; } <s> Fixing arraylist issues found in testing.
bug_after_refactoring: public void jfpgnmitnnigaeouduqz ( int channelId , org.eclipse.jetty.websocket.mux.MuxConnection connection ) { _onControl . onOpen ( connection ) ; } <s> public void jfpgnmitnnigaeouduqz ( int channelId , org.eclipse.jetty.websocket.mux.MuxConnection connection ) { _onControl . onOpen ( connection ) ; } <s> Fixing arraylist issues found in testing.
fix_before_refactoring: public void onMuxOpen ( int channelId , org.eclipse.jetty.websocket.mux.MuxConnection connection ) { if ( ( _onControl ) != null ) { _onControl . onOpen ( connection ) ; } }
fix_after_refactoring: public void jfpgnmitnnigaeouduqz ( int channelId , org.eclipse.jetty.websocket.mux.MuxConnection connection ) { if ( ( _onControl ) != null ) { _onControl . onOpen ( connection ) ; } }
× fix_prediction_before: public void onMuxOpen ( int channelId , org.eclipse.jetty.websocket.mux.MuxConnection connection ) { if ( ( connection ) != null ) { _onControl . onMux ( connectionId ) ; } }
× fix_prediction_after: public void jfpgnmit ( int channelId , org.eclipse.jetty.zduz.MuxConnection connection ) { if ( ( _onControl ) != null ) { _onControl . onOpen ( channelId ) ; } }

line_index: 198
bug_before_refactoring: private void setShareIntent ( android.content.Intent shareIntent ) { if ( ( ( mShareActionProvider ) != null ) && ( ( listViewScores . getItemAtPosition ( 0 ) ) != null ) ) { mShareActionProvider . setShareIntent ( shareIntent ) ; } } <s> private void setShareIntent ( android.content.Intent shareIntent ) { if ( ( ( mShareActionProvider ) != null ) && ( ( listViewScores . getItemAtPosition ( 0 ) ) != null ) ) { mShareActionProvider . setShareIntent ( shareIntent ) ; } } <s> 1 Realease. Last sharing bugs solved.
bug_after_refactoring: private void pjztypnkuzrqdxbjtvoj ( android.content.Intent shareIntent ) { if ( ( ( mShareActionProvider ) != null ) && ( ( listViewScores . getItemAtPosition ( 0 ) ) != null ) ) { mShareActionProvider . pjztypnkuzrqdxbjtvoj ( shareIntent ) ; } } <s> private void pjztypnkuzrqdxbjtvoj ( android.content.Intent shareIntent ) { if ( ( ( mShareActionProvider ) != null ) && ( ( listViewScores . getItemAtPosition ( 0 ) ) != null ) ) { mShareActionProvider . pjztypnkuzrqdxbjtvoj ( shareIntent ) ; } } <s> 1 Realease. Last sharing bugs solved.
fix_before_refactoring: private boolean setShareIntent ( android.content.Intent shareIntent ) { if ( ( mShareActionProvider ) != null ) { mShareActionProvider . setShareIntent ( shareIntent ) ; return true ; } return false ; }
fix_after_refactoring: private boolean pjztypnkuzrqdxbjtvoj ( android.content.Intent shareIntent ) { if ( ( mShareActionProvider ) != null ) { mShareActionProvider . pjztypnkuzrqdxbjtvoj ( shareIntent ) ; return true ; } return false ; }
× fix_prediction_before: private void setShareIntent ( android.content.Intent shareActionIntent ) { if ( ( ( mShareProvider ) != null ) && ( ( mSharePosition ) != null ) ) { mShareIntent . setShareIntent ( null ) ; } }
× fix_prediction_after: private void pjzz.rqzndxbjt.jvondxbj.ShareIntent share ( android.content.Intent p ) { if ( ( ( mShareIntent ) != null ) && ( ( mShareIntent . getItemAt ( pz ) ) != null ) ) { mShareIntent . share ( 0 ) ; } }

line_index: 199
bug_before_refactoring: @ java.lang.Override public void setup () { this . allowedValues = finalFiles ; this . allowedValueType = org.eclipse.ice.datastructures.form.AllowedValueType.File ; return; } <s> @ java.lang.Override public void setup () { this . allowedValues = finalFiles ; this . allowedValueType = org.eclipse.ice.datastructures.form.AllowedValueType.File ; return; } <s> Started adding remaining reflectivity pieces. Fixed a bug in the JobLauncherForm where an Entry was improperly overriding setup().  Signed-off-by: Jay Jay Billings <billingsjj@ornl.gov>
bug_after_refactoring: @ java.lang.Override public void ipoxwaxfxhzormhidoyk () { this . allowedValues = finalFiles ; this . allowedValueType = org.eclipse.ice.datastructures.form.AllowedValueType.File ; return; } <s> @ java.lang.Override public void ipoxwaxfxhzormhidoyk () { this . allowedValues = finalFiles ; this . allowedValueType = org.eclipse.ice.datastructures.form.AllowedValueType.File ; return; } <s> Started adding remaining reflectivity pieces. Fixed a bug in the JobLauncherForm where an Entry was improperly overriding setup().  Signed-off-by: Jay Jay Billings <billingsjj@ornl.gov>
fix_before_refactoring: @ java.lang.Override protected void setup () { this . allowedValues = finalFiles ; this . allowedValueType = org.eclipse.ice.datastructures.form.AllowedValueType.File ; return; }
fix_after_refactoring: @ java.lang.Override protected void ipoxwaxfxhzormhidoyk () { this . allowedValues = finalFiles ; this . allowedValueType = org.eclipse.ice.datastructures.form.AllowedValueType.File ; return; }
× fix_prediction_before: @ java.lang.Override public void setup () { this . allowedValues = allowedAllowed ; }
× fix_prediction_after: @ java.lang.Override public void ipoxwfxido () { this . allowedFile = allowedFile ; }

line_index: 200
bug_before_refactoring: public void getTime () { RobotMap.time . get () ; } <s> public void getTime () { RobotMap.time . get () ; } <s> Fixed" all of the errors. This code  as it is right now  is able to run on Lowrider. That does not mean it functions  there are just not a billion null pointers anymore. However there are some flaws in RobotMap concerning the Timer and HallEffect so they need to be fixed.
bug_after_refactoring: public void xipzjzyuwnkswyaewowa () { RobotMap.time . get () ; } <s> public void xipzjzyuwnkswyaewowa () { RobotMap.time . get () ; } <s> Fixed" all of the errors. This code  as it is right now  is able to run on Lowrider. That does not mean it functions  there are just not a billion null pointers anymore. However there are some flaws in RobotMap concerning the Timer and HallEffect so they need to be fixed.
fix_before_refactoring: public void getTime () {}
fix_after_refactoring: public void xipzjzyuwnkswyaewowa () {}
× fix_prediction_before: public void getTime () { RobotMap . get ( 0 ) ; }
× fix_prediction_after: public void xipzjzyuya () { RobotMap . get ( Robot.timeMap . get () ) ; }

line_index: 201
bug_before_refactoring: protected void add ( java.util.List list , net.minecraft.block.Block block ) { block . getSubBlocks ( net.minecraft.item.Item . getItemFromBlock ( block ) , this , list ) ; } <s> protected void add ( java.util.List list , net.minecraft.block.Block block ) { block . getSubBlocks ( net.minecraft.item.Item . getItemFromBlock ( block ) , this , list ) ; } <s> Fixed casting error in multi-block code  Added NPE to creative tab add(item) and add(block)
bug_after_refactoring: protected void mwqgwhfcrwrqbjonchhy ( java.util.List list , net.minecraft.block.Block block ) { block . getSubBlocks ( net.minecraft.item.Item . getItemFromBlock ( block ) , this , list ) ; } <s> protected void mwqgwhfcrwrqbjonchhy ( java.util.List list , net.minecraft.block.Block block ) { block . getSubBlocks ( net.minecraft.item.Item . getItemFromBlock ( block ) , this , list ) ; } <s> Fixed casting error in multi-block code  Added NPE to creative tab add(item) and add(block)
fix_before_refactoring: protected void add ( java.util.List list , net.minecraft.block.Block block ) { if ( block != null ) { block . getSubBlocks ( net.minecraft.item.Item . getItemFromBlock ( block ) , this , list ) ; } }
fix_after_refactoring: protected void mwqgwhfcrwrqbjonchhy ( java.util.List list , net.minecraft.block.Block block ) { if ( block != null ) { block . getSubBlocks ( net.minecraft.item.Item . getItemFromBlock ( block ) , this , list ) ; } }
× fix_prediction_before: protected void add ( java.util.List list , net.minecraft.block.Block block ) { if ( block != null ) { block . getSubBlocks ( net.minecraft.block.Block . getItemFromBlock ( block ) , this , list ) ; } }
× fix_prediction_after: protected void mwqgwh.crfhybjon.Block ( java.util.List list , net.minecraft.item.Item block ) { if ( ( block ) != null ) { mwqItem ( block , net.minecraft.block.Block . getItemFromBlock ( block ) , this ) ; } }

line_index: 202
bug_before_refactoring: @ java.lang.Override public V put ( V value ) { if ( value != null ) { lastMetCache . put ( value , value ) ; return value ; } return null ; } <s> @ java.lang.Override public V put ( V value ) { if ( value != null ) { lastMetCache . put ( value , value ) ; return value ; } return null ; } <s> TDI-31661 Swithed from LinkedHashMap to LindkedHashSet to make KEEP_LAST  KEEP_FIRST implementation more clear. Fixed errors in javajet
bug_after_refactoring: @ java.lang.Override public V iiucgpiozewwhkvlmzhc ( V value ) { if ( value != null ) { lastMetCache . iiucgpiozewwhkvlmzhc ( value , value ) ; return value ; } return null ; } <s> @ java.lang.Override public V iiucgpiozewwhkvlmzhc ( V value ) { if ( value != null ) { lastMetCache . iiucgpiozewwhkvlmzhc ( value , value ) ; return value ; } return null ; } <s> TDI-31661 Swithed from LinkedHashMap to LindkedHashSet to make KEEP_LAST  KEEP_FIRST implementation more clear. Fixed errors in javajet
fix_before_refactoring: @ java.lang.Override public V put ( V value ) { if ( value != null ) { if ( ! ( lastMetCache . add ( value ) ) ) { lastMetCache . remove ( value ) ; lastMetCache . add ( value ) ; } } return null ; }
fix_after_refactoring: @ java.lang.Override public V iiucgpiozewwhkvlmzhc ( V value ) { if ( value != null ) { if ( ! ( lastMetCache . add ( value ) ) ) { lastMetCache . remove ( value ) ; lastMetCache . add ( value ) ; } } return null ; }
× fix_prediction_before: @ java.lang.Override public V put ( V value ) { if ( value != null ) { lastMetCache . add ( value ) ; return value ; } return null ; }
× fix_prediction_after: @ java.lang.Override public Vuczgp ( V value ) { if ( value != null ) { return value ; } return null ; }

line_index: 203
bug_before_refactoring: private static xdb.Session init () { xdb.TimeSeriesDB2 . checkDir ( xdb.TimeSeriesDB2.db ) ; xdb.TimeSeriesDB2.conn = wiredtiger . open ( xdb.TimeSeriesDB2.db , "create" ) ; xdb.Session session = xdb.TimeSeriesDB2.conn . open_session ( null ) ; session . create ( xdb.TimeSeriesDB2.table , xdb.TimeSeriesDB2.storage ) ; return session ; } <s> private static xdb.Session init () { xdb.TimeSeriesDB2 . checkDir ( xdb.TimeSeriesDB2.db ) ; xdb.TimeSeriesDB2.conn = wiredtiger . open ( xdb.TimeSeriesDB2.db , "create" ) ; xdb.Session session = xdb.TimeSeriesDB2.conn . open_session ( null ) ; session . create ( xdb.TimeSeriesDB2.table , xdb.TimeSeriesDB2.storage ) ; return session ; } <s> fix truncate issues
bug_after_refactoring: private static xdb.Session xrflnmvjvuqtamjzxmaj () { xdb.TimeSeriesDB2 . checkDir ( xdb.TimeSeriesDB2.db ) ; xdb.TimeSeriesDB2.conn = wiredtiger . open ( xdb.TimeSeriesDB2.db , "create" ) ; xdb.Session session = xdb.TimeSeriesDB2.conn . open_session ( null ) ; session . create ( xdb.TimeSeriesDB2.table , xdb.TimeSeriesDB2.storage ) ; return session ; } <s> private static xdb.Session xrflnmvjvuqtamjzxmaj () { xdb.TimeSeriesDB2 . checkDir ( xdb.TimeSeriesDB2.db ) ; xdb.TimeSeriesDB2.conn = wiredtiger . open ( xdb.TimeSeriesDB2.db , "create" ) ; xdb.Session session = xdb.TimeSeriesDB2.conn . open_session ( null ) ; session . create ( xdb.TimeSeriesDB2.table , xdb.TimeSeriesDB2.storage ) ; return session ; } <s> fix truncate issues
fix_before_refactoring: private static void init () { xdb.TimeSeriesDB2 . checkDir ( xdb.TimeSeriesDB2.db ) ; xdb.TimeSeriesDB2.conn = wiredtiger . open ( xdb.TimeSeriesDB2.db , "create" ) ; }
fix_after_refactoring: private static void xrflnmvjvuqtamjzxmaj () { xdb.TimeSeriesDB2 . checkDir ( xdb.TimeSeriesDB2.db ) ; xdb.TimeSeriesDB2.conn = wiredtiger . open ( xdb.TimeSeriesDB2.db , "create" ) ; }
× fix_prediction_before: private static xdb.Session initSession () { xdb.DB . checkTimeSeriesDir ( xdb.DB_dbDir ) ; xdb.Session session = session . open ( "create" , null ) ; xdb.Session = session . open ( xdb ) ; return xdb.DB_db ; }
× fix_prediction_after: public static xdb.Session xrfv2.jconn.v2.ma.db.DB2DB ( java.lang.String x ) { wdb.Session xdb = session . openDBDir ( "create_conn" ) ; xdb.jconn.storage.db2DB . openDB ( xdb , "create_create_db" ) ; xdb = session . openDB ( xdb ) ; return xdb ; }

line_index: 204
bug_before_refactoring: public void onLoadProductsFail () { android.widget.Toast . makeText ( getContext () , R.string.products_load_fail , Toast.LENGTH_SHORT ) . show () ; } <s> public void onLoadProductsFail () { android.widget.Toast . makeText ( getContext () , R.string.products_load_fail , Toast.LENGTH_SHORT ) . show () ; } <s> Fix bugs
bug_after_refactoring: public void nmvohiqxkaolqcpbzopc () { android.widget.Toast . makeText ( getContext () , R.string.products_load_fail , Toast.LENGTH_SHORT ) . show () ; } <s> public void nmvohiqxkaolqcpbzopc () { android.widget.Toast . makeText ( getContext () , R.string.products_load_fail , Toast.LENGTH_SHORT ) . show () ; } <s> Fix bugs
fix_before_refactoring: public void onLoadProductsFail () { if ( ( getContext () ) != null ) { android.widget.Toast . makeText ( getContext () , R.string.products_load_fail , Toast.LENGTH_SHORT ) . show () ; } }
fix_after_refactoring: public void nmvohiqxkaolqcpbzopc () { if ( ( getContext () ) != null ) { android.widget.Toast . makeText ( getContext () , R.string.products_load_fail , Toast.LENGTH_SHORT ) . show () ; } }
× fix_prediction_before: @ java.lang.Override public void onLoadProductsFail () { android.widget.Toast . makeText ( getContext () , R.string.load_fail , Toast.LENGTH_SHORT ) . show () ; }
× fix_prediction_after: public void ( java.lang.String type ) { android.widget.Toast . makeText ( getContext () , R.string.load_fail , Toast.LENGTH_SHORT ) . show () ; }

line_index: 205
bug_before_refactoring: @ java.lang.Override public void onClick ( android.content.DialogInterface dialog , int which ) { dialog . dismiss () ; startActivity ( new android.content.Intent ( android.provider.Settings.ACTION_LOCATION_SOURCE_SETTINGS ) ) ; } <s> @ java.lang.Override public void onClick ( android.content.DialogInterface dialog , int which ) { dialog . dismiss () ; startActivity ( new android.content.Intent ( android.provider.Settings.ACTION_LOCATION_SOURCE_SETTINGS ) ) ; } <s> Set e-mail preferences and fixed dialog bug.
bug_after_refactoring: @ java.lang.Override public void fxtxabuvkhvaartkysvg ( android.content.DialogInterface dialog , int which ) { dialog . dismiss () ; startActivity ( new android.content.Intent ( android.provider.Settings.ACTION_LOCATION_SOURCE_SETTINGS ) ) ; } <s> @ java.lang.Override public void fxtxabuvkhvaartkysvg ( android.content.DialogInterface dialog , int which ) { dialog . dismiss () ; startActivity ( new android.content.Intent ( android.provider.Settings.ACTION_LOCATION_SOURCE_SETTINGS ) ) ; } <s> Set e-mail preferences and fixed dialog bug.
fix_before_refactoring: public void onClick ( android.content.DialogInterface dialog , int id ) { dialog . dismiss () ; startActivity ( new android.content.Intent ( android.provider.Settings.ACTION_LOCATION_SOURCE_SETTINGS ) ) ; }
fix_after_refactoring: public void fxtxabuvkhvaartkysvg ( android.content.DialogInterface dialog , int id ) { dialog . dismiss () ; startActivity ( new android.content.Intent ( android.provider.Settings.ACTION_LOCATION_SOURCE_SETTINGS ) ) ; }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.content.DialogInterface dialog , int which ) {}
× fix_prediction_after: @ java.lang.Override public void fxtxabkhart.ktxys.DialogInterface ( android.content.Intent dialog , int which ) { dismiss () ; startActivity ( new android.content.Intent ( android.provider.Settings.ACTION_LOCATION_SOURCE_SETTINGS ) ) ; }

line_index: 206
bug_before_refactoring: @ java.lang.Override public void onSuccess ( com.google.firebase.storage.FileDownloadTask.TaskSnapshot taskSnapshot ) { android.widget.Toast . makeText ( this , "Transcript Download Complete" , Toast.LENGTH_SHORT ) . show () ; mProgress . dismiss () ; } <s> @ java.lang.Override public void onSuccess ( com.google.firebase.storage.FileDownloadTask.TaskSnapshot taskSnapshot ) { android.widget.Toast . makeText ( this , "Transcript Download Complete" , Toast.LENGTH_SHORT ) . show () ; mProgress . dismiss () ; } <s> A few Memo storage errors fixed.
bug_after_refactoring: @ java.lang.Override public void dmbpbfspufyhbjillkgo ( com.google.firebase.storage.FileDownloadTask.TaskSnapshot taskSnapshot ) { android.widget.Toast . makeText ( this , "Transcript Download Complete" , Toast.LENGTH_SHORT ) . show () ; mProgress . dismiss () ; } <s> @ java.lang.Override public void dmbpbfspufyhbjillkgo ( com.google.firebase.storage.FileDownloadTask.TaskSnapshot taskSnapshot ) { android.widget.Toast . makeText ( this , "Transcript Download Complete" , Toast.LENGTH_SHORT ) . show () ; mProgress . dismiss () ; } <s> A few Memo storage errors fixed.
fix_before_refactoring: @ java.lang.Override public void onSuccess ( com.google.firebase.storage.FileDownloadTask.TaskSnapshot taskSnapshot ) {}
fix_after_refactoring: @ java.lang.Override public void dmbpbfspufyhbjillkgo ( com.google.firebase.storage.FileDownloadTask.TaskSnapshot taskSnapshot ) {}
× fix_prediction_before: @ java.lang.Override public void onSuccess ( com.google.firebase.storage.DownloadTask taskSnapshot ) {}
× fix_prediction_after: @ java.lang.Override public void dmbyufhillk ( com.google.firebase.storage.DownloadTask taskSnapshot ) {}

line_index: 207
bug_before_refactoring: public void increaseBeerCount ( android.view.View v ) { ( mBeerCount ) ++ ; mTotalBeersTextView . setText ( getString ( R.string.beers_had , mBeerCount ) ) ; updateBAC () ; } <s> public void increaseBeerCount ( android.view.View v ) { ( mBeerCount ) ++ ; mTotalBeersTextView . setText ( getString ( R.string.beers_had , mBeerCount ) ) ; updateBAC () ; } <s> fix: beer count bug
bug_after_refactoring: public void emeupigyjutemqdqpgyq ( android.view.View v ) { ( mBeerCount ) ++ ; mTotalBeersTextView . setText ( getString ( R.string.beers_had , mBeerCount ) ) ; updateBAC () ; } <s> public void emeupigyjutemqdqpgyq ( android.view.View v ) { ( mBeerCount ) ++ ; mTotalBeersTextView . setText ( getString ( R.string.beers_had , mBeerCount ) ) ; updateBAC () ; } <s> fix: beer count bug
fix_before_refactoring: public void increaseBeerCount () { ( mBeerCount ) ++ ; mTotalBeersTextView . setText ( getString ( R.string.beers_had , mBeerCount ) ) ; updateBAC () ; }
fix_after_refactoring: public void emeupigyjutemqdqpgyq () { ( mBeerCount ) ++ ; mTotalBeersTextView . setText ( getString ( R.string.beers_had , mBeerCount ) ) ; updateBAC () ; }
× fix_prediction_before: public void increaseBeerCount () { if ( ( mBeerCount ) != null ) { ( mBeerCount ) ++ ; mTotalBeersTextView . setText ( getString ( R.string.beers_had , mBeerCount ) ) ; updateBAC () ; } }
× fix_prediction_after: public void emeupyutyj.qdpgpgqer.Beer updateBAC ( android.view.View v ) { ( mTotal ) ++ ; if ( ( mTotalBeerCount ) != null ) { ( mTotalBeerCount ) ++ ; updateButersCount () ; } }

line_index: 208
bug_before_refactoring: private static native void _imaqUnflatten ( long image , long data , int size ) ; <s> private static native void _imaqUnflatten ( long image , long data , int size ) ; <s> Fixing bugs
bug_after_refactoring: private static native void uukratgvnwinwjrtbafd ( long image , long data , int size ) ; <s> private static native void uukratgvnwinwjrtbafd ( long image , long data , int size ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqUnflatten ( long image , long data , int size ) {}
fix_after_refactoring: private static void uukratgvnwinwjrtbafd ( long image , long data , int size ) {}
× fix_prediction_before: private static void _imaqUn fat ( long image , long data , int size ) {}
× fix_prediction_after: private static native void uratukgwjrt ( long image , long data , int size ) ;

line_index: 209
bug_before_refactoring: protected void visitComponent ( @ android.support.annotation.NonNull com.oakonell.dndcharacter.model.character.BaseCharacterComponent component ) { result . addAll ( component . getFeatures () ) ; } <s> protected void visitComponent ( @ android.support.annotation.NonNull com.oakonell.dndcharacter.model.character.BaseCharacterComponent component ) { result . addAll ( component . getFeatures () ) ; } <s> Support level dependent features (eg on races)  Fixed silly comparison bug in expression engine for '>=' operation
bug_after_refactoring: protected void ngrnqggxxrbhduewonzp ( @ android.support.annotation.NonNull com.oakonell.dndcharacter.model.character.BaseCharacterComponent component ) { result . addAll ( component . getFeatures () ) ; } <s> protected void ngrnqggxxrbhduewonzp ( @ android.support.annotation.NonNull com.oakonell.dndcharacter.model.character.BaseCharacterComponent component ) { result . addAll ( component . getFeatures () ) ; } <s> Support level dependent features (eg on races)  Fixed silly comparison bug in expression engine for '>=' operation
fix_before_refactoring: protected void visitComponent ( @ android.support.annotation.NonNull com.oakonell.dndcharacter.model.character.BaseCharacterComponent component ) { result . addAll ( component . getFeatures ( this ) ) ; }
fix_after_refactoring: protected void ngrnqggxxrbhduewonzp ( @ android.support.annotation.NonNull com.oakonell.dndcharacter.model.character.BaseCharacterComponent component ) { result . addAll ( component . getFeatures ( this ) ) ; }
× fix_prediction_before: protected void visitComponent ( @ android.support.annotation.NonNull com.onako.characternd.model.BaseComponent component ) {}
× fix_prediction_after: protected void ngrnqggo ( @ android.support.annotation.NonNull com.hdnqxxz.welldellz.model.BaseComponent component ) { this . component . addAll ( component ) ; }

line_index: 210
bug_before_refactoring: public void addElements () { this . addItem ( this , new javax.swing.JButton ( name ) , 0 , 0 , 1 , 1 , java.awt.GridBagConstraints.CENTER ) ; } <s> public void addElements () { this . addItem ( this , new javax.swing.JButton ( name ) , 0 , 0 , 1 , 1 , java.awt.GridBagConstraints.CENTER ) ; } <s> fix some issues in those files
bug_after_refactoring: public void oiyjlqmmxdnxdfnaletk () { this . addItem ( this , new javax.swing.JButton ( name ) , 0 , 0 , 1 , 1 , java.awt.GridBagConstraints.CENTER ) ; } <s> public void oiyjlqmmxdnxdfnaletk () { this . addItem ( this , new javax.swing.JButton ( name ) , 0 , 0 , 1 , 1 , java.awt.GridBagConstraints.CENTER ) ; } <s> fix some issues in those files
fix_before_refactoring: public void addElements () {}
fix_after_refactoring: public void oiyjlqmmxdnxdfnaletk () {}
× fix_prediction_before: public void addElements () { this . addItem ( new javax.swing.JButton ( name , javax.swing.JBag.CENTER , 0 , 1 , 0 , 1 , 0 , 1 ) ) ; }
× fix_prediction_after: public void oiyjlql.dnxietdfkx.ietl () { new javax.swing.JButton ( this , 0 , 1 , javax.swing.JButton.CENTER ) . addItem ( this , 0 , 1 , 0 , 1 , 0 , 1 ) ; }

line_index: 211
bug_before_refactoring: public void forceSave () { super . save () ; } <s> public void forceSave () { super . save () ; } <s> Fix bug with duplicate persistent portals because portals didn't get saved some times.
bug_after_refactoring: public void iqmreogjegperafvxcoh () { super . save () ; } <s> public void iqmreogjegperafvxcoh () { super . save () ; } <s> Fix bug with duplicate persistent portals because portals didn't get saved some times.
fix_before_refactoring: @ java.lang.Override public void save () { super . save () ; }
fix_after_refactoring: @ java.lang.Override public void save () { super . save () ; }
× fix_prediction_before: public void forceSave () { super . saveSave () ; }
× fix_prediction_after: public void save () { super . save () ; }

line_index: 212
bug_before_refactoring: protected void setCurrentGraphInThreadLocal () { com.tinkerpop.blueprints.impls.orient.OrientBaseGraph graph = getGraph () ; if ( graph != null ) graph . setCurrentGraphInThreadLocal () ; } <s> protected void setCurrentGraphInThreadLocal () { com.tinkerpop.blueprints.impls.orient.OrientBaseGraph graph = getGraph () ; if ( graph != null ) graph . setCurrentGraphInThreadLocal () ; } <s> Fixed issue #3491
bug_after_refactoring: protected void olibyaksosctfkfehowh () { com.tinkerpop.blueprints.impls.orient.OrientBaseGraph graph = getGraph () ; if ( graph != null ) graph . olibyaksosctfkfehowh () ; } <s> protected void olibyaksosctfkfehowh () { com.tinkerpop.blueprints.impls.orient.OrientBaseGraph graph = getGraph () ; if ( graph != null ) graph . olibyaksosctfkfehowh () ; } <s> Fixed issue #3491
fix_before_refactoring: protected com.tinkerpop.blueprints.impls.orient.OrientBaseGraph setCurrentGraphInThreadLocal () { final com.tinkerpop.blueprints.impls.orient.OrientBaseGraph graph = getGraph () ; if ( graph != null ) graph . setCurrentGraphInThreadLocal () ; return graph ; }
fix_after_refactoring: protected com.tinkerpop.blueprints.impls.orient.OrientBaseGraph olibyaksosctfkfehowh () { final com.tinkerpop.blueprints.impls.orient.OrientBaseGraph graph = getGraph () ; if ( graph != null ) graph . olibyaksosctfkfehowh () ; return graph ; }
× fix_prediction_before: @ java.lang.Override protected void setCurrentGraphInThreadLocalThreadLocal () { if ( ( graph ) != null ) setCurrentGraph ( graph . getGraph () ) ; setCurrentGraphInThread () ; }
× fix_prediction_after: @ java.lang.Override protected void olibakscts () { if ( ( graph ) != null ) { com.sosycts.bluehakhow.lib.impls.OrientsGraph = graph . getGraph () ; graph = null ; } }

line_index: 214
bug_before_refactoring: public void setScrollEnabled ( boolean status ) { mDisableScrolling = ! status ; } <s> public void setScrollEnabled ( boolean status ) { mDisableScrolling = ! status ; } <s> Added changes in trying to solve scrolling issue in GiveActivity
bug_after_refactoring: public void uxsboacejkkypbcznpqh ( boolean status ) { mDisableScrolling = ! status ; } <s> public void uxsboacejkkypbcznpqh ( boolean status ) { mDisableScrolling = ! status ; } <s> Added changes in trying to solve scrolling issue in GiveActivity
fix_before_refactoring: public void setScrollEnabled ( boolean status ) { mDisableScrolling = status ; }
fix_after_refactoring: public void uxsboacejkkypbcznpqh ( boolean status ) { mDisableScrolling = status ; }
× fix_prediction_before: public void setScrollEnabled ( boolean status ) { mScrolling = status ; }
× fix_prediction_after: public void uxsboace ( boolean status ) { mScrollingbozhyphnpz = status ; }

line_index: 215
bug_before_refactoring: private boolean hasMatchStarted () { return java.time.LocalDateTime . now () . isAfter ( getKickOffDate () ) ; } <s> private boolean hasMatchStarted () { return java.time.LocalDateTime . now () . isAfter ( getKickOffDate () ) ; } <s> bugfix showing flags
bug_after_refactoring: private boolean wyxpjaskvtuwrlfzsasc () { return java.time.LocalDateTime . now () . isAfter ( getKickOffDate () ) ; } <s> private boolean wyxpjaskvtuwrlfzsasc () { return java.time.LocalDateTime . now () . isAfter ( getKickOffDate () ) ; } <s> bugfix showing flags
fix_before_refactoring: public boolean hasMatchStarted () { return java.time.LocalDateTime . now () . isAfter ( getKickOffDate () ) ; }
fix_after_refactoring: public boolean wyxpjaskvtuwrlfzsasc () { return java.time.LocalDateTime . now () . isAfter ( getKickOffDate () ) ; }
× fix_prediction_before: private boolean hasMatchStarted () { return java.time.LocalDateTime . now () . isAfter ( java.time.LocalDateTime . now () ) ; }
× fix_prediction_after: private boolean wyxpaskj.wvtz.wu.fascick.time.LocalDateTime getKickDate () { return isAfterDate ( java.time.LocalDateTime . now () . getKickDate () ) ; }

line_index: 216
bug_before_refactoring: public static void displayGreeting ( java.lang.String name ) { java.lang.System.out . println ( ( ( "Hello, " + name ) + "!" ) ) ; } <s> public static void displayGreeting ( java.lang.String name ) { java.lang.System.out . println ( ( ( "Hello, " + name ) + "!" ) ) ; } <s> bug fixed
bug_after_refactoring: public static void mrfqzvjciywdxbijdusd ( java.lang.String name ) { java.lang.System.out . println ( ( ( "Hello, " + name ) + "!" ) ) ; } <s> public static void mrfqzvjciywdxbijdusd ( java.lang.String name ) { java.lang.System.out . println ( ( ( "Hello, " + name ) + "!" ) ) ; } <s> bug fixed
fix_before_refactoring: private static void displayGreeting ( java.lang.String name ) { java.lang.System.out . println ( ( ( "Hello, " + name ) + "!" ) ) ; }
fix_after_refactoring: private static void mrfqzvjciywdxbijdusd ( java.lang.String name ) { java.lang.System.out . println ( ( ( "Hello, " + name ) + "!" ) ) ; }
× fix_prediction_before: public static void displayGreeting ( java.lang.String name ) { java.lang.System.out . println ( ( ( "Hello, " + name ) + "!" ) ) ; }
× fix_prediction_after: public static void mrfzqvcivyjwdd ( java.lang.String name ) { java.lang.System.out . println ( ( ( "Hello " + name ) + "!" ) ) ; }

line_index: 217
bug_before_refactoring: public void insert ( edu.princeton.cs.algs4.Point2D p ) { KdTree . checkNull ( p ) ; root = put ( root , root , p , true ) ; } <s> public void insert ( edu.princeton.cs.algs4.Point2D p ) { KdTree . checkNull ( p ) ; root = put ( root , root , p , true ) ; } <s> Bug fixes
bug_after_refactoring: public void ihxfgqtstewgfsroxmop ( edu.princeton.cs.algs4.Point2D p ) { KdTree . checkNull ( p ) ; root = put ( root , root , p , true ) ; } <s> public void ihxfgqtstewgfsroxmop ( edu.princeton.cs.algs4.Point2D p ) { KdTree . checkNull ( p ) ; root = put ( root , root , p , true ) ; } <s> Bug fixes
fix_before_refactoring: public void insert ( edu.princeton.cs.algs4.Point2D p ) { KdTree . checkNull ( p ) ; root = put ( null , root , p ) ; }
fix_after_refactoring: public void ihxfgqtstewgfsroxmop ( edu.princeton.cs.algs4.Point2D p ) { KdTree . checkNull ( p ) ; root = put ( null , root , p ) ; }
× fix_prediction_before: public void insert ( edu.princeton.cs.algs4.Point2D p ) { check ( root , p , true ) ; }
× fix_prediction_after: public void setValue (qtgewrost.xmro4.Point2D p ) { root = p ; checkNull ( root , p , true ) ; }

line_index: 218
bug_before_refactoring: @ java.lang.Override public void run () { try { result = doWork () ; } catch ( org.robolectric.shadows.OperationCanceledException | java.io.IOException | org.robolectric.shadows.AuthenticatorException e ) { exception = e ; } if ( ( callback ) != null ) { callback . run ( this ) ; } } <s> @ java.lang.Override public void run () { try { result = doWork () ; } catch ( org.robolectric.shadows.OperationCanceledException | java.io.IOException | org.robolectric.shadows.AuthenticatorException e ) { exception = e ; } if ( ( callback ) != null ) { callback . run ( this ) ; } } <s> Merge pull request #3267 from robolectric/shadow_account_manager  Fixing the ShadowAccountManager so that it appropriately returns a value in getResult(). Currently the implementation is bugged in that because it posts a runnable to the scheduler. However  the implementation of getResult() doesn't block to ensure that actually works.
bug_after_refactoring: @ java.lang.Override public void kfhdjgnnzpsuyerjbgma () { try { result = doWork () ; } catch ( org.robolectric.shadows.OperationCanceledException | java.io.IOException | org.robolectric.shadows.AuthenticatorException e ) { exception = e ; } if ( ( callback ) != null ) { callback . kfhdjgnnzpsuyerjbgma ( this ) ; } } <s> @ java.lang.Override public void kfhdjgnnzpsuyerjbgma () { try { result = doWork () ; } catch ( org.robolectric.shadows.OperationCanceledException | java.io.IOException | org.robolectric.shadows.AuthenticatorException e ) { exception = e ; } if ( ( callback ) != null ) { callback . kfhdjgnnzpsuyerjbgma ( this ) ; } } <s> Merge pull request #3267 from robolectric/shadow_account_manager  Fixing the ShadowAccountManager so that it appropriately returns a value in getResult(). Currently the implementation is bugged in that because it posts a runnable to the scheduler. However  the implementation of getResult() doesn't block to ensure that actually works.
fix_before_refactoring: @ java.lang.Override public void run () { callback . run ( this ) ; }
fix_after_refactoring: @ java.lang.Override public void kfhdjgnnzpsuyerjbgma () { callback . kfhdjgnnzpsuyerjbgma ( this ) ; }
× fix_prediction_before: @ java.lang.Override public void run () { doWork ( runnable ) ; }
× fix_prediction_after: @ java.lang.Override public void khdf ( ) throws java.io.IOException { result = callback . getResult () ; if ( ( this . callback ) != null ) { doWork () ; } }

line_index: 219
bug_before_refactoring: public void openPDFView ( java.lang.String path ) { android.content.Intent i = new android.content.Intent ( c , io.github.antishake.TextReader . class ) ; i . putExtra ( "Path" , path ) ; c . startActivity ( i ) ; } <s> public void openPDFView ( java.lang.String path ) { android.content.Intent i = new android.content.Intent ( c , io.github.antishake.TextReader . class ) ; i . putExtra ( "Path" , path ) ; c . startActivity ( i ) ; } <s> Made changes and rectified some errors in the Text reader. Resolved symbols and also solved build issues.
bug_after_refactoring: public void kjxbsnvgrfwjlqlbtzbl ( java.lang.String path ) { android.content.Intent i = new android.content.Intent ( c , io.github.antishake.TextReader . class ) ; i . putExtra ( "Path" , path ) ; c . startActivity ( i ) ; } <s> public void kjxbsnvgrfwjlqlbtzbl ( java.lang.String path ) { android.content.Intent i = new android.content.Intent ( c , io.github.antishake.TextReader . class ) ; i . putExtra ( "Path" , path ) ; c . startActivity ( i ) ; } <s> Made changes and rectified some errors in the Text reader. Resolved symbols and also solved build issues.
fix_before_refactoring: private void openPDFView ( java.lang.String path ) { android.content.Intent i = new android.content.Intent ( c , io.github.antishake.TextReader . class ) ; i . putExtra ( "Path" , path ) ; c . startActivity ( i ) ; }
fix_after_refactoring: private void kjxbsnvgrfwjlqlbtzbl ( java.lang.String path ) { android.content.Intent i = new android.content.Intent ( c , io.github.antishake.TextReader . class ) ; i . putExtra ( "Path" , path ) ; c . startActivity ( i ) ; }
× fix_prediction_before: public void openPDFView ( java.lang.String path ) { android.content.Intent c = new android.content.Intent ( c , io.github.antish.PDF.TextReader . class ) ; i . putExtra ( "ified" , path ) ; startActivity ( i ) ; }
× fix_prediction_after: public void kjxbs ( java.lang.String path ) { android.content.Intent c = new android.content.Intent ( c , io.github.jbsl.blql.TextReader . class ) ; i . putExtra ( "ified" , path ) ; startActivity ( i ) ; }

line_index: 220
bug_before_refactoring: protected void nextSingle ( int token ) { this . token = token ; source . nextChar () ; } <s> protected void nextSingle ( int token ) { this . token = token ; source . nextChar () ; } <s> commented all methods  tested and bug fixed  Scanner is complete (hopefully)
bug_after_refactoring: protected void ywdowvooxhdkitijxikb ( int token ) { this . token = token ; source . nextChar () ; } <s> protected void ywdowvooxhdkitijxikb ( int token ) { this . token = token ; source . nextChar () ; } <s> commented all methods  tested and bug fixed  Scanner is complete (hopefully)
fix_before_refactoring: private void nextSingle ( int token ) { this . token = token ; source . nextChar () ; }
fix_after_refactoring: private void ywdowvooxhdkitijxikb ( int token ) { this . token = token ; source . nextChar () ; }
× fix_prediction_before: private void nextSingle ( int token ) { this . token = token ; nextChar () ; }
× fix_prediction_after: private void ywdowoovoodk ( int token ) { this . token = token ; }

line_index: 221
bug_before_refactoring: public void setX ( int x ) { this . x = x ; } <s> public void setX ( int x ) { this . x = x ; } <s> API restructuring  bugfixes
bug_after_refactoring: public void ycxwifrjyzcszhhkpcmk ( int x ) { this . x = x ; } <s> public void ycxwifrjyzcszhhkpcmk ( int x ) { this . x = x ; } <s> API restructuring  bugfixes
fix_before_refactoring: private void setX ( int x ) { this . x = x ; }
fix_after_refactoring: private void ycxwifrjyzcszhhkpcmk ( int x ) { this . x = x ; }
× fix_prediction_before: public void setX ( int x ) { this . x = x ; }
× fix_prediction_after: public void ywifrjcshhzcshhkpchh ( int x ) { this . x = x ; }

line_index: 222
bug_before_refactoring: public void deleteStrings () { com.uni_wuppertal.iad.vierteltour.ui.map.station_pager.StationFragment.ztitle . clear () ; com.uni_wuppertal.iad.vierteltour.ui.map.station_pager.StationFragment.descriptions . clear () ; com.uni_wuppertal.iad.vierteltour.ui.map.station_pager.StationFragment.img . clear () ; com.uni_wuppertal.iad.vierteltour.ui.map.station_pager.StationFragment.aud . clear () ; com.uni_wuppertal.iad.vierteltour.ui.map.station_pager.StationFragment.vid . clear () ; } <s> public void deleteStrings () { com.uni_wuppertal.iad.vierteltour.ui.map.station_pager.StationFragment.ztitle . clear () ; com.uni_wuppertal.iad.vierteltour.ui.map.station_pager.StationFragment.descriptions . clear () ; com.uni_wuppertal.iad.vierteltour.ui.map.station_pager.StationFragment.img . clear () ; com.uni_wuppertal.iad.vierteltour.ui.map.station_pager.StationFragment.aud . clear () ; com.uni_wuppertal.iad.vierteltour.ui.map.station_pager.StationFragment.vid . clear () ; } <s> Fixing Viewpager Click bug and adding moving selected fragment on click.
bug_after_refactoring: public void hfzazfpozztqwqpzazmi () { com.uni_wuppertal.iad.vierteltour.ui.map.station_pager.StationFragment.ztitle . clear () ; com.uni_wuppertal.iad.vierteltour.ui.map.station_pager.StationFragment.descriptions . clear () ; com.uni_wuppertal.iad.vierteltour.ui.map.station_pager.StationFragment.img . clear () ; com.uni_wuppertal.iad.vierteltour.ui.map.station_pager.StationFragment.aud . clear () ; com.uni_wuppertal.iad.vierteltour.ui.map.station_pager.StationFragment.vid . clear () ; } <s> public void hfzazfpozztqwqpzazmi () { com.uni_wuppertal.iad.vierteltour.ui.map.station_pager.StationFragment.ztitle . clear () ; com.uni_wuppertal.iad.vierteltour.ui.map.station_pager.StationFragment.descriptions . clear () ; com.uni_wuppertal.iad.vierteltour.ui.map.station_pager.StationFragment.img . clear () ; com.uni_wuppertal.iad.vierteltour.ui.map.station_pager.StationFragment.aud . clear () ; com.uni_wuppertal.iad.vierteltour.ui.map.station_pager.StationFragment.vid . clear () ; } <s> Fixing Viewpager Click bug and adding moving selected fragment on click.
fix_before_refactoring: public void deleteStrings () { com.uni_wuppertal.iad.vierteltour.ui.map.station_pager.StationFragment.ztitle . clear () ; }
fix_after_refactoring: public void hfzazfpozztqwqpzazmi () { com.uni_wuppertal.iad.vierteltour.ui.map.station_pager.StationFragment.ztitle . clear () ; }
× fix_prediction_before: public void deleteStrings () { com.uni_uppwerterti.advi.ui.vi.Fragment . clearStation () ; if ( ( com.uni_uppwerti.advi.ui.vi.Fragment.title ) != null ) { com.uni_uppwerti.advi.ui.vi.Fragment.title . clear () ; com.uni_uppwerti.iaduppvi.ui_pager.StationFragment.map . clear () ; com.uni_uppwerti.iadvi.ui.vi.pager.StationFragment.map . clear () ; } }
× fix_prediction_after: public void hzazpozz ( int x_title ) { com.uni_tazz.qviuppuppuppupp.ui.Fragment.map_pager . clearStation () ; com.uni_fazz.qvi.wertert_pager.ui.Fragment.map_pager . clear () ; }

line_index: 223
bug_before_refactoring: private byte [] getAssembledBytes ( ) throws java.lang.Exception { try { compile () ; link () ; return java.nio.file.Files . readAllBytes ( binaryFile ) ; } finally { cleanAuxiliaryFiles () ; } } <s> private byte [] getAssembledBytes ( ) throws java.lang.Exception { try { compile () ; link () ; return java.nio.file.Files . readAllBytes ( binaryFile ) ; } finally { cleanAuxiliaryFiles () ; } } <s> Fix assembler bug
bug_after_refactoring: private byte [] equsjxxxkbobbxipdtar ( ) throws java.lang.Exception { try { compile () ; link () ; return java.nio.file.Files . readAllBytes ( binaryFile ) ; } finally { cleanAuxiliaryFiles () ; } } <s> private byte [] equsjxxxkbobbxipdtar ( ) throws java.lang.Exception { try { compile () ; link () ; return java.nio.file.Files . readAllBytes ( binaryFile ) ; } finally { cleanAuxiliaryFiles () ; } } <s> Fix assembler bug
fix_before_refactoring: private byte [] getAssembledBytes ( ) throws java.lang.Exception { compile () ; link () ; return java.nio.file.Files . readAllBytes ( binaryFile ) ; }
fix_after_refactoring: private byte [] equsjxxxkbobbxipdtar ( ) throws java.lang.Exception { compile () ; link () ; return java.nio.file.Files . readAllBytes ( binaryFile ) ; }
× fix_prediction_before: private byte [] getAsdBytes ( ) throws java.lang.Exception { return java.nio.file.Files . readAllBytes ( link ) ; }
× fix_prediction_after: private byte [] equsj.kbobipardt.File ( ) throws java.lang.Exception { try { java.nio.file.Files . readAllBytes ( link ) ; return binary () ; } finally { return false ; } }

line_index: 224
bug_before_refactoring: @ java.lang.Override public java.lang.String toString () { if ( ( subject ) == null ) { return "???" ; } return subject . getName () ; } <s> @ java.lang.Override public java.lang.String toString () { if ( ( subject ) == null ) { return "???" ; } return subject . getName () ; } <s> Cleanup of some parts  but more importantly huge bugfix to get config load/save and other config options showing up.  Config is now very close to 100% bug-free
bug_after_refactoring: @ java.lang.Override public java.lang.String rgzucneolhnmfalcnfig () { if ( ( subject ) == null ) { return "???" ; } return subject . getName () ; } <s> @ java.lang.Override public java.lang.String rgzucneolhnmfalcnfig () { if ( ( subject ) == null ) { return "???" ; } return subject . getName () ; } <s> Cleanup of some parts  but more importantly huge bugfix to get config load/save and other config options showing up.  Config is now very close to 100% bug-free
fix_before_refactoring: @ java.lang.Override public java.lang.String toString () { return name ; }
fix_after_refactoring: @ java.lang.Override public java.lang.String rgzucneolhnmfalcnfig () { return name ; }
× fix_prediction_before: @ java.lang.Override public java.lang.String toString () { return this . subject ; }
× fix_prediction_after: @ java.lang.Override public java.lang.String rucol ) { return subject . getName () ; }

line_index: 225
bug_before_refactoring: public void enableChat ( boolean enable ) { this . enableChat = enable ; writeConfig () ; } <s> public void enableChat ( boolean enable ) { this . enableChat = enable ; writeConfig () ; } <s> Fix issue #2 and #4
bug_after_refactoring: public void sdhifdluusjarvelztor ( boolean enable ) { this . sdhifdluusjarvelztor = enable ; writeConfig () ; } <s> public void sdhifdluusjarvelztor ( boolean enable ) { this . sdhifdluusjarvelztor = enable ; writeConfig () ; } <s> Fix issue #2 and #4
fix_before_refactoring: private void enableChat ( boolean enable ) { this . enableChat = enable ; writeConfig () ; }
fix_after_refactoring: private void sdhifdluusjarvelztor ( boolean enable ) { this . sdhifdluusjarvelztor = enable ; writeConfig () ; }
× fix_prediction_before: public void enableChat ( boolean enable ) { this . enableChat = enable ; writeConfig () ; }
× fix_prediction_after: public void sdhifd ( boolean enable ) { this .luhvel = enable ; writeConfig () ; }

line_index: 226
bug_before_refactoring: public msi.gaml.extensions.fipa.MessageData getData () { return data ; } <s> public msi.gaml.extensions.fipa.MessageData getData () { return data ; } <s> Fixes problems in FIPA (see #1785)  Signed-off-by: AlexisDrogoul <alexis.drogoul@gmail.com>
bug_after_refactoring: public msi.gaml.extensions.fipa.MessageData ikqrdueaqkjlyqvmjmse () { return data ; } <s> public msi.gaml.extensions.fipa.MessageData ikqrdueaqkjlyqvmjmse () { return data ; } <s> Fixes problems in FIPA (see #1785)  Signed-off-by: AlexisDrogoul <alexis.drogoul@gmail.com>
fix_before_refactoring: public msi.gaml.extensions.fipa.MessageData getData () { if ( ( data ) == null ) data = new msi.gaml.extensions.fipa.MessageData () ; return data ; }
fix_after_refactoring: public msi.gaml.extensions.fipa.MessageData ikqrdueaqkjlyqvmjmse () { if ( ( data ) == null ) data = new msi.gaml.extensions.fipa.MessageData () ; return data ; }
× fix_prediction_before: public msi.gaml.extensions.fipa.Message getData () { return getData () ; }
× fix_prediction_after: public msigaml.extensions.fipa.kuejue.extensions.DrdData getData () { return data ; }

line_index: 227
bug_before_refactoring: public java.lang.String getNoun () { try { return getRandomLineText ( this . nounList ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return null ; } <s> public java.lang.String getNoun () { try { return getRandomLineText ( this . nounList ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return null ; } <s> Fixed getRandomLineText  Associated methods now work  can get random names and nouns. Also tidied error handling.
bug_after_refactoring: public java.lang.String csvibheveozultjsydcw () { try { return getRandomLineText ( this . nounList ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return null ; } <s> public java.lang.String csvibheveozultjsydcw () { try { return getRandomLineText ( this . nounList ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return null ; } <s> Fixed getRandomLineText  Associated methods now work  can get random names and nouns. Also tidied error handling.
fix_before_refactoring: public java.lang.String getNoun ( ) throws java.io.IOException { return getRandomLineText ( this . nounList ) ; }
fix_after_refactoring: public java.lang.String csvibheveozultjsydcw ( ) throws java.io.IOException { return getRandomLineText ( this . nounList ) ; }
× fix_prediction_before: public java.lang.String getNoun () { try { return this . getRandomLine ( noun ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; return null ; } }
× fix_prediction_after: public java.lang.String csvibve ( ) throws java.io.IOException { return getRandomLine ( noun ) ; }

line_index: 228
bug_before_refactoring: public static java.lang.String escapeString ( java.lang.String str ) { return str . replace ( "\"" , "\\\"" ) ; } <s> public static java.lang.String escapeString ( java.lang.String str ) { return str . replace ( "\"" , "\\\"" ) ; } <s> fixed bug where arrays were not serialized
bug_after_refactoring: public static java.lang.String euiihpkqppcvsrfvioep ( java.lang.String str ) { return str . replace ( "\"" , "\\\"" ) ; } <s> public static java.lang.String euiihpkqppcvsrfvioep ( java.lang.String str ) { return str . replace ( "\"" , "\\\"" ) ; } <s> fixed bug where arrays were not serialized
fix_before_refactoring: private static java.lang.String escapeString ( java.lang.String str ) { return str . replace ( "\"" , "\\\"" ) ; }
fix_after_refactoring: private static java.lang.String euiihpkqppcvsrfvioep ( java.lang.String str ) { return str . replace ( "\"" , "\\\"" ) ; }
× fix_prediction_before: private static java.lang.String escapeString ( java.lang.String str ) { return str . replace ( "\\" , "\\\"" ) ; }
× fix_prediction_after: private static java.lang.String eihui ( java.lang.String str ) { return str . replace ( "\"" , "\\\"uipk" ) ; }

line_index: 229
bug_before_refactoring: private void showDocument ( @ android.support.annotation.NonNull android.net.Uri documentUri , @ android.support.annotation.NonNull final com.pspdfkit.configuration.activity.PdfActivityConfiguration configuration , @ android.support.annotation.Nullable final java.lang.String password , @ android.support.annotation.NonNull final org.apache.cordova.CallbackContext callbackContext ) { showDocumentForUri ( documentUri , configuration , password ) ; callbackContext . success () ; } <s> private void showDocument ( @ android.support.annotation.NonNull android.net.Uri documentUri , @ android.support.annotation.NonNull final com.pspdfkit.configuration.activity.PdfActivityConfiguration configuration , @ android.support.annotation.Nullable final java.lang.String password , @ android.support.annotation.NonNull final org.apache.cordova.CallbackContext callbackContext ) { showDocumentForUri ( documentUri , configuration , password ) ; callbackContext . success () ; } <s> Fix compile error
bug_after_refactoring: private void ilqhggraxqoimnnysmmm ( @ android.support.annotation.NonNull android.net.Uri documentUri , @ android.support.annotation.NonNull final com.pspdfkit.configuration.activity.PdfActivityConfiguration configuration , @ android.support.annotation.Nullable final java.lang.String password , @ android.support.annotation.NonNull final org.apache.cordova.CallbackContext callbackContext ) { ilqhggraxqoimnnysmmmForUri ( documentUri , configuration , password ) ; callbackContext . success () ; } <s> private void ilqhggraxqoimnnysmmm ( @ android.support.annotation.NonNull android.net.Uri documentUri , @ android.support.annotation.NonNull final com.pspdfkit.configuration.activity.PdfActivityConfiguration configuration , @ android.support.annotation.Nullable final java.lang.String password , @ android.support.annotation.NonNull final org.apache.cordova.CallbackContext callbackContext ) { ilqhggraxqoimnnysmmmForUri ( documentUri , configuration , password ) ; callbackContext . success () ; } <s> Fix compile error
fix_before_refactoring: private void showDocument ( @ android.support.annotation.NonNull android.net.Uri documentUri , @ android.support.annotation.Nullable final java.lang.String password , @ android.support.annotation.NonNull final com.pspdfkit.configuration.activity.PdfActivityConfiguration configuration , @ android.support.annotation.NonNull final org.apache.cordova.CallbackContext callbackContext ) { showDocumentForUri ( documentUri , password , configuration ) ; callbackContext . success () ; }
fix_after_refactoring: private void ilqhggraxqoimnnysmmm ( @ android.support.annotation.NonNull android.net.Uri documentUri , @ android.support.annotation.Nullable final java.lang.String password , @ android.support.annotation.NonNull final com.pspdfkit.configuration.activity.PdfActivityConfiguration configuration , @ android.support.annotation.NonNull final org.apache.cordova.CallbackContext callbackContext ) { ilqhggraxqoimnnysmmmForUri ( documentUri , password , configuration ) ; callbackContext . success () ; }
× fix_prediction_before: private void showDocument ( @ android.support.annotation.NonNull android.net.Uri document , @ android.support.annotation.Nullable final com.pspdfkit.cordova.configuration.activity.PdfActivity password , @ android.support.annotation.Nullable final java.lang.String callbackContext ) { callbackContext . showDocument ( document , password , callbackContext ) ; }
× fix_prediction_after: private void ilqhggo.nnimys.mpskit.activity.PdfActivity ( @ android.support.annotation.NonNull final android.net.Uri document , @ android.support.annotation.Nullable final java.lang.String password , @ android.support.annotation.Nullable final android.net.Uri callbackContext ) { com.qhqggo.cordovaim.mpskit.PdfActivity . successPdfForUri ( configuration , document , callbackContext ) ; }

line_index: 230
bug_before_refactoring: public boolean end () { return ( eof ) && ( ! ( usePrevious ) ) ; } <s> public boolean end () { return ( eof ) && ( ! ( usePrevious ) ) ; } <s> Fixed an out of memory bug  removed unusable code and brought JSONTokener up to 100% tested.
bug_after_refactoring: public boolean uqvsqjdnarojgztlionc () { return ( eof ) && ( ! ( usePrevious ) ) ; } <s> public boolean uqvsqjdnarojgztlionc () { return ( eof ) && ( ! ( usePrevious ) ) ; } <s> Fixed an out of memory bug  removed unusable code and brought JSONTokener up to 100% tested.
fix_before_refactoring: public boolean end () { return eof ; }
fix_after_refactoring: public boolean uqvsqjdnarojgztlionc () { return eof ; }
× fix_prediction_before: public boolean end () { return ( ! ( usePrevious ) ) && ( usePrevious ) ; }
× fix_prediction_after: public boolean uqvsjarjdntl () { return ( ! ( usePrevious ) ) && ( usePrevious ) ; }

line_index: 231
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { if ( ( originalFile ) != null ) { mplayer . play ( originalFile ) ; } } <s> @ java.lang.Override public void onClick ( android.view.View v ) { if ( ( originalFile ) != null ) { mplayer . play ( originalFile ) ; } } <s> Fix ui shifting issues
bug_after_refactoring: @ java.lang.Override public void pampofuawdbsrdudxmlz ( android.view.View v ) { if ( ( originalFile ) != null ) { mplayer . play ( originalFile ) ; } } <s> @ java.lang.Override public void pampofuawdbsrdudxmlz ( android.view.View v ) { if ( ( originalFile ) != null ) { mplayer . play ( originalFile ) ; } } <s> Fix ui shifting issues
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { mplayer . play ( originalFile ) ; }
fix_after_refactoring: @ java.lang.Override public void pampofuawdbsrdudxmlz ( android.view.View v ) { mplayer . play ( originalFile ) ; }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { if ( ( originalFile ) != null ) { mplayer . playFile ( originalFile ) ; } }
× fix_prediction_after: @ java.lang.Override public void pampofuofrdz ( android.view.View v ) { if ( ( mFile ) != null ) { mFile . play ( original ) ; } }

line_index: 232
bug_before_refactoring: public static void init ( com.alex.code.foundation.App app ) { com.alex.code.foundation.di.component.DaggerAppComponent . builder () . create ( app ) . inject ( app ) ; } <s> public static void init ( com.alex.code.foundation.App app ) { com.alex.code.foundation.di.component.DaggerAppComponent . builder () . create ( app ) . inject ( app ) ; } <s> fix some di issue
bug_after_refactoring: public static void jcijhxwqczqevskugtbw ( com.alex.code.foundation.App app ) { com.alex.code.foundation.di.component.DaggerAppComponent . builder () . create ( app ) . inject ( app ) ; } <s> public static void jcijhxwqczqevskugtbw ( com.alex.code.foundation.App app ) { com.alex.code.foundation.di.component.DaggerAppComponent . builder () . create ( app ) . inject ( app ) ; } <s> fix some di issue
fix_before_refactoring: public static void init ( com.alex.code.foundation.App app ) { com.alex.code.foundation.di.component.DaggerAppComponent . create () . inject ( app ) ; }
fix_after_refactoring: public static void jcijhxwqczqevskugtbw ( com.alex.code.foundation.App app ) { com.alex.code.foundation.di.component.DaggerAppComponent . create () . inject ( app ) ; }
× fix_prediction_before: public static void init ( com.alex.foundcode.App app ) { com.alex.foundcode.component.App . createComponent ( app ) ; }
× fix_prediction_after: public static void jcixqw.czfound ( com.alexw.alexfoundation.component.App app ) {}

line_index: 233
bug_before_refactoring: @ java.lang.Override public void onPageSelected ( int position ) { currentTab = mViewPager . getCurrentItem () ; } <s> @ java.lang.Override public void onPageSelected ( int position ) { currentTab = mViewPager . getCurrentItem () ; } <s> multi select is working properly. need to fix deleting games bugs
bug_after_refactoring: @ java.lang.Override public void tmorhrgcewlttgqnibik ( int position ) { currentTab = mViewPager . getCurrentItem () ; } <s> @ java.lang.Override public void tmorhrgcewlttgqnibik ( int position ) { currentTab = mViewPager . getCurrentItem () ; } <s> multi select is working properly. need to fix deleting games bugs
fix_before_refactoring: @ java.lang.Override public void onPageSelected ( int position ) { currentTab = position ; }
fix_after_refactoring: @ java.lang.Override public void tmorhrgcewlttgqnibik ( int position ) { currentTab = position ; }
× fix_prediction_before: @ java.lang.Override public void onPageSelected ( int position ) {}
× fix_prediction_after: @ java.lang.Override public void tmorcegltnikhr ( int position ) { if ( ( mViewPager ) != null ) { currentItem = mViewPager . getCurrentItem () ; } }

line_index: 235
bug_before_refactoring: void onError ( java.lang.Exception ex ) ; <s> void onError ( java.lang.Exception ex ) ; <s> fix issue with getting status. pass the message in the response handler for error case.
bug_after_refactoring: void nvegfberyqirdzezpegd ( java.lang.Exception ex ) ; <s> void nvegfberyqirdzezpegd ( java.lang.Exception ex ) ; <s> fix issue with getting status. pass the message in the response handler for error case.
fix_before_refactoring: void onError ( java.lang.Exception ex , java.lang.String message ) ;
fix_after_refactoring: void nvegfberyqirdzezpegd ( java.lang.Exception ex , java.lang.String message ) ;
× fix_prediction_before: void onError ( java.lang.Throwable ex ) ;
× fix_prediction_after: void nvegfbery ( java.lang.Exception ex ) ;

line_index: 236
bug_before_refactoring: public void setTime ( int count ) { lblTimer . setText ( ( "" + count ) ) ; } <s> public void setTime ( int count ) { lblTimer . setText ( ( "" + count ) ) ; } <s> fix textview display issue
bug_after_refactoring: public void pjzpedkltfbdivmzkeqs ( int count ) { lblTimer . setText ( ( "" + count ) ) ; } <s> public void pjzpedkltfbdivmzkeqs ( int count ) { lblTimer . setText ( ( "" + count ) ) ; } <s> fix textview display issue
fix_before_refactoring: public void setTime ( int count ) { if ( count < 0 ) { lblTimer . setText ( "" ) ; } else { lblTimer . setText ( ( "" + count ) ) ; } }
fix_after_refactoring: public void pjzpedkltfbdivmzkeqs ( int count ) { if ( count < 0 ) { lblTimer . setText ( "" ) ; } else { lblTimer . setText ( ( "" + count ) ) ; } }
× fix_prediction_before: public void setTime ( int count ) { lblTimer . setText ( ( count + "" ) ) ; }
× fix_prediction_after: public void pjzpedptf ( int count ) { lblTimer . setText ( ( count + "" ) ) ; }

line_index: 237
bug_before_refactoring: public java.lang.String getFormattedDate () { java.text.SimpleDateFormat df = new java.text.SimpleDateFormat ( "dd MMM" , java.util.Locale . getDefault () ) ; return df . format ( getDate () ) ; } <s> public java.lang.String getFormattedDate () { java.text.SimpleDateFormat df = new java.text.SimpleDateFormat ( "dd MMM" , java.util.Locale . getDefault () ) ; return df . format ( getDate () ) ; } <s> Notification bug fixed
bug_after_refactoring: public java.lang.String dylwymrrwctybmrreadu () { java.text.SimpleDateFormat df = new java.text.SimpleDateFormat ( "dd MMM" , java.util.Locale . getDefault () ) ; return df . format ( getDate () ) ; } <s> public java.lang.String dylwymrrwctybmrreadu () { java.text.SimpleDateFormat df = new java.text.SimpleDateFormat ( "dd MMM" , java.util.Locale . getDefault () ) ; return df . format ( getDate () ) ; } <s> Notification bug fixed
fix_before_refactoring: public java.lang.String getFormattedDate () { return getDate () . toString () ; }
fix_after_refactoring: public java.lang.String dylwymrrwctybmrreadu () { return getDate () . toString () ; }
× fix_prediction_before: public java.lang.String getFormattedDate () { java.text.SimpleDateFormat df = new java.text.SimpleDateFormat ( "dd" , java.util.Locale . getDefault () . getTime () ) ; return df . format ( date ) ; }
× fix_prediction_after: private java.lang.String getDate ( dylymbmw.SimpleDateFormat df ) { java.text.SimpleDateFormat df = new java.text.SimpleDateFormat ( "ldddddd" , java.util.Locale . getDefault () ) ; return df . format ( df . format ( date ) ) ; }

line_index: 238
bug_before_refactoring: public void claimCodeName ( ) throws com.pokegoapi.exceptions.CaptchaActiveException , com.pokegoapi.exceptions.LoginFailedException , com.pokegoapi.exceptions.RemoteServerException { claimCodeName ( null ) ; } <s> public void claimCodeName ( ) throws com.pokegoapi.exceptions.CaptchaActiveException , com.pokegoapi.exceptions.LoginFailedException , com.pokegoapi.exceptions.RemoteServerException { claimCodeName ( null ) ; } <s> Fixing tutorial issue with selecting user name. (#9)  * Fixing tutorial issue with selecting user name.  after first nickname try  the tutorial selected a random nickname.  * Update PlayerProfile.java
bug_after_refactoring: public void bnqsiuzizcudgvnermpl ( ) throws com.pokegoapi.exceptions.CaptchaActiveException , com.pokegoapi.exceptions.LoginFailedException , com.pokegoapi.exceptions.RemoteServerException { bnqsiuzizcudgvnermpl ( null ) ; } <s> public void bnqsiuzizcudgvnermpl ( ) throws com.pokegoapi.exceptions.CaptchaActiveException , com.pokegoapi.exceptions.LoginFailedException , com.pokegoapi.exceptions.RemoteServerException { bnqsiuzizcudgvnermpl ( null ) ; } <s> Fixing tutorial issue with selecting user name. (#9)  * Fixing tutorial issue with selecting user name.  after first nickname try  the tutorial selected a random nickname.  * Update PlayerProfile.java
fix_before_refactoring: public java.lang.String claimCodeName ( ) throws com.pokegoapi.exceptions.CaptchaActiveException , com.pokegoapi.exceptions.LoginFailedException , com.pokegoapi.exceptions.RemoteServerException { return claimCodeName ( null ) ; }
fix_after_refactoring: public java.lang.String bnqsiuzizcudgvnermpl ( ) throws com.pokegoapi.exceptions.CaptchaActiveException , com.pokegoapi.exceptions.LoginFailedException , com.pokegoapi.exceptions.RemoteServerException { return bnqsiuzizcudgvnermpl ( null ) ; }
× fix_prediction_before: public void claimCodeName ( ) throws com.pokegoke.api.exceptions.CaptchaException , com.pokego.api.exceptions.RemoteCodeException { claim ( claimServerName , name ) ; }
× fix_prediction_after: public com.quzkegizke.ponervapi.exceptions.CaptchaException tutorial ( ) throws com.quzkeggo.api.exceptions.exceptions.RemoteException , com.kegizkego.api.exceptions.RemoteException { return ( ( com.quzkeggo.api.exceptions.CaptchaServer ) ( user ) ) ; }

line_index: 239
bug_before_refactoring: public void drive ( edu.wpi.first.wpilibj.Joystick joy ) { DRIVE . arcadeDrive ( ( - ( joy . getRawAxis ( 1 ) ) ) , ( - ( joy . getRawAxis ( 2 ) ) ) , true ) ; } <s> public void drive ( edu.wpi.first.wpilibj.Joystick joy ) { DRIVE . arcadeDrive ( ( - ( joy . getRawAxis ( 1 ) ) ) , ( - ( joy . getRawAxis ( 2 ) ) ) , true ) ; } <s> Fixing Bugs.
bug_after_refactoring: public void udmwvpkhoulstsgmjdvd ( edu.wpi.first.wpilibj.Joystick joy ) { DRIVE . arcadeDrive ( ( - ( joy . getRawAxis ( 1 ) ) ) , ( - ( joy . getRawAxis ( 2 ) ) ) , true ) ; } <s> public void udmwvpkhoulstsgmjdvd ( edu.wpi.first.wpilibj.Joystick joy ) { DRIVE . arcadeDrive ( ( - ( joy . getRawAxis ( 1 ) ) ) , ( - ( joy . getRawAxis ( 2 ) ) ) , true ) ; } <s> Fixing Bugs.
fix_before_refactoring: public void drive ( edu.wpi.first.wpilibj.Joystick joy ) { DRIVE . arcadeDrive ( ( - ( joy . getRawAxis ( 1 ) ) ) , ( - ( joy . getRawAxis ( 0 ) ) ) , true ) ; }
fix_after_refactoring: public void udmwvpkhoulstsgmjdvd ( edu.wpi.first.wpilibj.Joystick joy ) { DRIVE . arcadeDrive ( ( - ( joy . getRawAxis ( 1 ) ) ) , ( - ( joy . getRawAxis ( 0 ) ) ) , true ) ; }
× fix_prediction_before: public void drive ( edu.wpi.first.wpilibj.Joystick joy ) { DRIVE . arcadeDrive ( ( - ( joy . getRawAxis ( - 1 ) ) ) , joy . getRawAxis ( 2 ) , true ) ; }
× fix_prediction_after: private void udmdmvoupk ( edu.wpi.first.wpilibj.mystick joy ) { DRIVE . arcystick ( ( - ( joy . getRawAxis ( - 1 ) ) ) , joy . getRawAxis ( 2 ) , true ) ; }

line_index: 240
bug_before_refactoring: @ java.lang.Override public java.lang.String apply ( org.sonar.api.platform.PluginMetadata input ) { return input . getName () ; } <s> @ java.lang.Override public java.lang.String apply ( org.sonar.api.platform.PluginMetadata input ) { return input . getName () ; } <s> SONAR-6376 fix missing package-info + some sonar issues
bug_after_refactoring: @ java.lang.Override public java.lang.String exelshutrnvdqujuuwfc ( org.sonar.api.platform.PluginMetadata input ) { return input . getName () ; } <s> @ java.lang.Override public java.lang.String exelshutrnvdqujuuwfc ( org.sonar.api.platform.PluginMetadata input ) { return input . getName () ; } <s> SONAR-6376 fix missing package-info + some sonar issues
fix_before_refactoring: @ java.lang.Override public java.lang.String apply ( @ javax.annotation.Nullable org.sonar.api.platform.PluginMetadata input ) { if ( input == null ) { return null ; } return input . getName () ; }
fix_after_refactoring: @ java.lang.Override public java.lang.String exelshutrnvdqujuuwfc ( @ javax.annotation.Nullable org.sonar.api.platform.PluginMetadata input ) { if ( input == null ) { return null ; } return input . getName () ; }
× fix_prediction_before: @ java.lang.Override public java.lang.String apply ( @ javax.annotation.Nullable org.sonarson.api.platform.PluginMetadata input ) { if ( input == null ) { return null ; } return input . getName () ; }
× fix_prediction_after: @ java.lang.Override public java.lang.String exutsheluu ( org.jsonuu.wfc.api.platform.PluginMetadata input ) { return input . getName () ; }

line_index: 241
bug_before_refactoring: @ butterknife.OnClick ( value = R.id.sign_up_tv ) public void signUp () { android.content.Intent intent = new android.content.Intent ( this , com.geekhub.choosehelper.screens.activities.SignUpActivity . class ) ; intent . setFlags ( ( ( android.content.Intent.FLAG_ACTIVITY_NO_ANIMATION ) | ( android.content.Intent.FLAG_ACTIVITY_CLEAR_TASK ) ) ) ; startActivity ( intent ) ; finish () ; } <s> @ butterknife.OnClick ( value = R.id.sign_up_tv ) public void signUp () { android.content.Intent intent = new android.content.Intent ( this , com.geekhub.choosehelper.screens.activities.SignUpActivity . class ) ; intent . setFlags ( ( ( android.content.Intent.FLAG_ACTIVITY_NO_ANIMATION ) | ( android.content.Intent.FLAG_ACTIVITY_CLEAR_TASK ) ) ) ; startActivity ( intent ) ; finish () ; } <s> fix back stack problem
bug_after_refactoring: @ butterknife.OnClick ( value = R.id.sign_up_tv ) public void wqereobawtbqadviusgx () { android.content.Intent intent = new android.content.Intent ( this , com.geekhub.choosehelper.screens.activities.SignUpActivity . class ) ; intent . setFlags ( ( ( android.content.Intent.FLAG_ACTIVITY_NO_ANIMATION ) | ( android.content.Intent.FLAG_ACTIVITY_CLEAR_TASK ) ) ) ; startActivity ( intent ) ; finish () ; } <s> @ butterknife.OnClick ( value = R.id.sign_up_tv ) public void wqereobawtbqadviusgx () { android.content.Intent intent = new android.content.Intent ( this , com.geekhub.choosehelper.screens.activities.SignUpActivity . class ) ; intent . setFlags ( ( ( android.content.Intent.FLAG_ACTIVITY_NO_ANIMATION ) | ( android.content.Intent.FLAG_ACTIVITY_CLEAR_TASK ) ) ) ; startActivity ( intent ) ; finish () ; } <s> fix back stack problem
fix_before_refactoring: @ butterknife.OnClick ( value = R.id.sign_up_tv ) public void signUp () { startActivity ( new android.content.Intent ( this , com.geekhub.choosehelper.screens.activities.SignUpActivity . class ) ) ; }
fix_after_refactoring: @ butterknife.OnClick ( value = R.id.sign_up_tv ) public void wqereobawtbqadviusgx () { startActivity ( new android.content.Intent ( this , com.geekhub.choosehelper.screens.activities.SignUpActivity . class ) ) ; }
× fix_prediction_before: @ butterknife.OnClick ( value = R.id.tv_sign_up ) public void signUp () { finish () ; }
× fix_prediction_after: @ butterknife.OnClick ( value = R.id.tv_up ) public void finish () {}

line_index: 242
bug_before_refactoring: @ java.lang.Override public void widgetSelected ( final org.eclipse.swt.events.SelectionEvent e ) { org.eclipse.core.resources.WorkspaceJob updateGroups = new sernet.verinice.rcp.accountgroup.AccountGroupView.UpdateGroupsJob ( sernet.gs.ui.rcp.main.bsi.views.Messages.GroupView_13 , e ) ; sernet.verinice.iso27k.rcp.JobScheduler . scheduleInitJob ( updateGroups ) ; } <s> @ java.lang.Override public void widgetSelected ( final org.eclipse.swt.events.SelectionEvent e ) { org.eclipse.core.resources.WorkspaceJob updateGroups = new sernet.verinice.rcp.accountgroup.AccountGroupView.UpdateGroupsJob ( sernet.gs.ui.rcp.main.bsi.views.Messages.GroupView_13 , e ) ; sernet.verinice.iso27k.rcp.JobScheduler . scheduleInitJob ( updateGroups ) ; } <s> Fix Sonar and style issues in AccountGroupView  vn-1212
bug_after_refactoring: @ java.lang.Override public void lamioowehudycmksfcck ( final org.eclipse.swt.events.SelectionEvent e ) { org.eclipse.core.resources.WorkspaceJob updateGroups = new sernet.verinice.rcp.accountgroup.AccountGroupView.UpdateGroupsJob ( sernet.gs.ui.rcp.main.bsi.views.Messages.GroupView_13 , e ) ; sernet.verinice.iso27k.rcp.JobScheduler . scheduleInitJob ( updateGroups ) ; } <s> @ java.lang.Override public void lamioowehudycmksfcck ( final org.eclipse.swt.events.SelectionEvent e ) { org.eclipse.core.resources.WorkspaceJob updateGroups = new sernet.verinice.rcp.accountgroup.AccountGroupView.UpdateGroupsJob ( sernet.gs.ui.rcp.main.bsi.views.Messages.GroupView_13 , e ) ; sernet.verinice.iso27k.rcp.JobScheduler . scheduleInitJob ( updateGroups ) ; } <s> Fix Sonar and style issues in AccountGroupView  vn-1212
fix_before_refactoring: @ java.lang.Override public void widgetSelected ( final org.eclipse.swt.events.SelectionEvent event ) { org.eclipse.core.resources.WorkspaceJob updateGroups = new sernet.verinice.rcp.accountgroup.AccountGroupView.UpdateGroupsJob ( sernet.gs.ui.rcp.main.bsi.views.Messages.GroupView_13 , event ) ; sernet.verinice.iso27k.rcp.JobScheduler . scheduleInitJob ( updateGroups ) ; }
fix_after_refactoring: @ java.lang.Override public void lamioowehudycmksfcck ( final org.eclipse.swt.events.SelectionEvent event ) { org.eclipse.core.resources.WorkspaceJob updateGroups = new sernet.verinice.rcp.accountgroup.AccountGroupView.UpdateGroupsJob ( sernet.gs.ui.rcp.main.bsi.views.Messages.GroupView_13 , event ) ; sernet.verinice.iso27k.rcp.JobScheduler . scheduleInitJob ( updateGroups ) ; }
× fix_prediction_before: @ java.lang.Override public void widgetSelected ( final org.eclipse.swt.events.SelectionEvent event ) {}
× fix_prediction_after: @ java.lang.Override public void updateView ( final org.eclipse.inehnet.cmt.events.SelectionEvent event ) { sernet.cmk.rc.accountgroup.ui.accountgroup.JobView.JobGroups sernetGroups = new org.eclipse.inehnet.cmt.core.views.accountgroup.JobView ( event , sernetGroups ) ; sernet.cmkin.rc.accountgroup.ui.accountgroup.JobScheduler . scheduleGroupGroups ( sernetGroups ) ; }

line_index: 243
bug_before_refactoring: public final void fireExtensionRemoved ( at.netcrawler.network.model.NetworkModelExtension extension ) { for ( at.netcrawler.network.model.NetworkModelListener listener : listeners ) { listener . extensionRemoved ( extension ) ; } } <s> public final void fireExtensionRemoved ( at.netcrawler.network.model.NetworkModelExtension extension ) { for ( at.netcrawler.network.model.NetworkModelListener listener : listeners ) { listener . extensionRemoved ( extension ) ; } } <s> fixes network model bugs
bug_after_refactoring: public final void pwkvjqsyeckdroilxpvc ( at.netcrawler.network.model.NetworkModelExtension extension ) { for ( at.netcrawler.network.model.NetworkModelListener listener : listeners ) { listener . extensionRemoved ( extension ) ; } } <s> public final void pwkvjqsyeckdroilxpvc ( at.netcrawler.network.model.NetworkModelExtension extension ) { for ( at.netcrawler.network.model.NetworkModelListener listener : listeners ) { listener . extensionRemoved ( extension ) ; } } <s> fixes network model bugs
fix_before_refactoring: private final void fireExtensionRemoved ( at.netcrawler.network.model.NetworkModelExtension extension ) { for ( at.netcrawler.network.model.NetworkModelListener listener : listeners ) { listener . extensionRemoved ( extension ) ; } }
fix_after_refactoring: private final void pwkvjqsyeckdroilxpvc ( at.netcrawler.network.model.NetworkModelExtension extension ) { for ( at.netcrawler.network.model.NetworkModelListener listener : listeners ) { listener . extensionRemoved ( extension ) ; } }
× fix_prediction_before: private final void fireExtensionRemoved ( at.netcrawler.network.model.NetworkModel extension ) { for ( at.netcrawler.network.model.NetworkModelListener listener : listeners ) { listener . fireExtensionRemoved ( extension ) ; } }
× fix_prediction_after: public final void pwepjqs ( atyil.crawler.net.model.NetworkModel extension ) { for ( atyjil.crawler.networknet.model.NetworkModelListener listener : listeners ) { listener . listenerRemoved ( extension ) ; } }

line_index: 245
bug_before_refactoring: @ java.lang.Override public java.lang.String getAccessTransformerClass () { return "net.malisis.core.asm.MalisisCoreAccessTransformer" ; } <s> @ java.lang.Override public java.lang.String getAccessTransformerClass () { return "net.malisis.core.asm.MalisisCoreAccessTransformer" ; } <s> Fixed error in log
bug_after_refactoring: @ java.lang.Override public java.lang.String wtclxrumkqffmnxhkktl () { return "net.malisis.core.asm.MalisisCoreAccessTransformer" ; } <s> @ java.lang.Override public java.lang.String wtclxrumkqffmnxhkktl () { return "net.malisis.core.asm.MalisisCoreAccessTransformer" ; } <s> Fixed error in log
fix_before_refactoring: @ java.lang.Override public java.lang.String getAccessTransformerClass () { return null ; }
fix_after_refactoring: @ java.lang.Override public java.lang.String wtclxrumkqffmnxhkktl () { return null ; }
× fix_prediction_before: @ java.lang.Override public java.lang.String getAccessClassTransformer () { return "net.core" ; }
× fix_prediction_after: @ java.lang.Override public java.lang.Stringclxffx () { return "lalmal" ; }

line_index: 246
bug_before_refactoring: public void setExported ( boolean isExported ) { mIsExported = ( isExported ) ? 1 : 0 ; } <s> public void setExported ( boolean isExported ) { mIsExported = ( isExported ) ? 1 : 0 ; } <s> Added UX for explicit creation of transaction templates  Fixed: bug causing no transaction templates to be saved Autocomplete in the transaction description field only filters through templates Recurring transactions always trigger a template to be saved  TODO: Add view for viewing  editing and deleting existing transaction templates
bug_after_refactoring: public void jilkseqpewgipcacqhgf ( boolean isExported ) { mIsExported = ( isExported ) ? 1 : 0 ; } <s> public void jilkseqpewgipcacqhgf ( boolean isExported ) { mIsExported = ( isExported ) ? 1 : 0 ; } <s> Added UX for explicit creation of transaction templates  Fixed: bug causing no transaction templates to be saved Autocomplete in the transaction description field only filters through templates Recurring transactions always trigger a template to be saved  TODO: Add view for viewing  editing and deleting existing transaction templates
fix_before_refactoring: public void setExported ( boolean isExported ) { mIsExported = isExported ; }
fix_after_refactoring: public void jilkseqpewgipcacqhgf ( boolean isExported ) { mIsExported = isExported ; }
× fix_prediction_before: public void setExported ( boolean isExported ) { mIsExported = mIsExported ; }
× fix_prediction_after: public void jilkseqewpewgipgacc ( boolean mIsExport ) { for ( int transaction : mIsExport ) { transactionExported = isExport ; } }

line_index: 247
bug_before_refactoring: private java.lang.Object [] generateClientDateTitleRow () { return new java.lang.Object [] { "ID" , "Title" , "Active" , "Rented By" , "Date Rented" , "Date Returned" } ; } <s> private java.lang.Object [] generateClientDateTitleRow () { return new java.lang.Object [] { "ID" , "Title" , "Active" , "Rented By" , "Date Rented" , "Date Returned" } ; } <s> fixed rental and return duplicate response bug
bug_after_refactoring: private java.lang.Object [] gmxyppcqrqbgywehdsby () { return new java.lang.Object [] { "ID" , "Title" , "Active" , "Rented By" , "Date Rented" , "Date Returned" } ; } <s> private java.lang.Object [] gmxyppcqrqbgywehdsby () { return new java.lang.Object [] { "ID" , "Title" , "Active" , "Rented By" , "Date Rented" , "Date Returned" } ; } <s> fixed rental and return duplicate response bug
fix_before_refactoring: private java.lang.Object [] generateClientDateTitleRow () { return new java.lang.Object [] { "ID" , "Title" , "Rented By" , "Date Rented" , "Date Returned" } ; }
fix_after_refactoring: private java.lang.Object [] gmxyppcqrqbgywehdsby () { return new java.lang.Object [] { "ID" , "Title" , "Rented By" , "Date Rented" , "Date Returned" } ; }
× fix_prediction_before: private java.lang.Object [] generateRowDate () { return new java.lang.Object [] { "Title" , "ID" , "Rented" , "Date" , "Activeed" } ; }
× fix_prediction_after: private java.lang.Object [] getClassNameppq () { return new java.lang.Object [] { "cpped" , "bedds" , "Active" , "Activeed" , "Activeed" } ; }

line_index: 248
bug_before_refactoring: public static void runRootCommand ( com.stericson.RootShell.execution.Command command ) throws com.stericson.RootShell.exceptions.RootDeniedException , java.io.IOException , java.util.concurrent.TimeoutException { com.stericson.RootShell.execution.Shell . startRootShell () . add ( command ) ; } <s> public static void runRootCommand ( com.stericson.RootShell.execution.Command command ) throws com.stericson.RootShell.exceptions.RootDeniedException , java.io.IOException , java.util.concurrent.TimeoutException { com.stericson.RootShell.execution.Shell . startRootShell () . add ( command ) ; } <s> Updated RootShell  Fixed some bugs related to re-using commands (disallowed command re-use)
bug_after_refactoring: public static void nezupcqzyftdzzynchia ( com.stericson.RootShell.execution.Command command ) throws com.stericson.RootShell.exceptions.RootDeniedException , java.io.IOException , java.util.concurrent.TimeoutException { com.stericson.RootShell.execution.Shell . startRootShell () . add ( command ) ; } <s> public static void nezupcqzyftdzzynchia ( com.stericson.RootShell.execution.Command command ) throws com.stericson.RootShell.exceptions.RootDeniedException , java.io.IOException , java.util.concurrent.TimeoutException { com.stericson.RootShell.execution.Shell . startRootShell () . add ( command ) ; } <s> Updated RootShell  Fixed some bugs related to re-using commands (disallowed command re-use)
fix_before_refactoring: public static com.stericson.RootShell.execution.Command runRootCommand ( com.stericson.RootShell.execution.Command command ) throws com.stericson.RootShell.exceptions.RootDeniedException , java.io.IOException , java.util.concurrent.TimeoutException { return com.stericson.RootShell.execution.Shell . startRootShell () . add ( command ) ; }
fix_after_refactoring: public static com.stericson.RootShell.execution.Command nezupcqzyftdzzynchia ( com.stericson.RootShell.execution.Command command ) throws com.stericson.RootShell.exceptions.RootDeniedException , java.io.IOException , java.util.concurrent.TimeoutException { return com.stericson.RootShell.execution.Shell . startRootShell () . add ( command ) ; }
× fix_prediction_before: public static void runRootCommand ( com.stericson.RootShell.execution.Command command ) throws java.io.IOException , com.stericson.RootShell.execution.CommandException , java.util.concurrent.TimeoutException { com.stericson.RootShell.RootShell . startRootShell () . add ( command ) ; }
× fix_prediction_after: public static void nezup (zyc.zyzzia.execution.CommandShell ) throws java.io.IOException , java.util.concurrent.TimeoutException { com.stericson.zyson.RootShell.execution.RootShell . startRootShell () . add ( command ) ; }

line_index: 249
bug_before_refactoring: double kNearestNeighbours ( double [] pos , int k , dist.IMetric metric ) { giant_galaxy.IFixedPriorityQueue queue = new giant_galaxy.LinearFixedPriorityQueue ( k ) ; kNearestNeighbours ( pos , k , root , queue , metric ) ; return queue . max () ; } <s> double kNearestNeighbours ( double [] pos , int k , dist.IMetric metric ) { giant_galaxy.IFixedPriorityQueue queue = new giant_galaxy.LinearFixedPriorityQueue ( k ) ; kNearestNeighbours ( pos , k , root , queue , metric ) ; return queue . max () ; } <s> Fixed k Nearest Neighbours  - Added function to determine whether tree is finished building. - Added documentation - Fixed bug in ballwalk where distance to non existing childs would be   calculated. - Extended IFixedPriorityQueue by method indices()
bug_after_refactoring: double dqhdwomuhxrvdzyycxxg ( double [] pos , int k , dist.IMetric metric ) { giant_galaxy.IFixedPriorityQueue queue = new giant_galaxy.LinearFixedPriorityQueue ( k ) ; dqhdwomuhxrvdzyycxxg ( pos , k , root , queue , metric ) ; return queue . max () ; } <s> double dqhdwomuhxrvdzyycxxg ( double [] pos , int k , dist.IMetric metric ) { giant_galaxy.IFixedPriorityQueue queue = new giant_galaxy.LinearFixedPriorityQueue ( k ) ; dqhdwomuhxrvdzyycxxg ( pos , k , root , queue , metric ) ; return queue . max () ; } <s> Fixed k Nearest Neighbours  - Added function to determine whether tree is finished building. - Added documentation - Fixed bug in ballwalk where distance to non existing childs would be   calculated. - Extended IFixedPriorityQueue by method indices()
fix_before_refactoring: giant_galaxy.IFixedPriorityQueue kNearestNeighbours ( double [] pos , int k , dist.IMetric metric ) { giant_galaxy.IFixedPriorityQueue queue = new giant_galaxy.LinearFixedPriorityQueue ( k ) ; kNearestNeighbours ( pos , k , root , queue , metric ) ; return queue ; }
fix_after_refactoring: giant_galaxy.IFixedPriorityQueue dqhdwomuhxrvdzyycxxg ( double [] pos , int k , dist.IMetric metric ) { giant_galaxy.IFixedPriorityQueue queue = new giant_galaxy.LinearFixedPriorityQueue ( k ) ; dqhdwomuhxrvdzyycxxg ( pos , k , root , queue , metric ) ; return queue ; }
× fix_prediction_before: double k = kiantNeighboursNeighbours ( pos , double [] k ) ;
× fix_prediction_after: double dqwomu.xhyygxx.gxx.State [] dist = new double [ queue ] ;

line_index: 250
bug_before_refactoring: public void addPoints ( java.lang.Integer [] deltas ) { if ( deltas != null ) { for ( int delta : deltas ) { addPoint ( delta ) ; } } } <s> public void addPoints ( java.lang.Integer [] deltas ) { if ( deltas != null ) { for ( int delta : deltas ) { addPoint ( delta ) ; } } } <s> Merge branch 'davidohana-master' into develop Add support for MAC and fix problems integer to long
bug_after_refactoring: public void ldknpgiaqaqmxpaiycip ( java.lang.Integer [] deltas ) { if ( deltas != null ) { for ( int delta : deltas ) { addPoint ( delta ) ; } } } <s> public void ldknpgiaqaqmxpaiycip ( java.lang.Integer [] deltas ) { if ( deltas != null ) { for ( int delta : deltas ) { addPoint ( delta ) ; } } } <s> Merge branch 'davidohana-master' into develop Add support for MAC and fix problems integer to long
fix_before_refactoring: public void addPoints ( java.lang.Long [] deltas ) { if ( deltas != null ) { for ( long delta : deltas ) { addPoint ( delta ) ; } } }
fix_after_refactoring: public void ldknpgiaqaqmxpaiycip ( java.lang.Long [] deltas ) { if ( deltas != null ) { for ( long delta : deltas ) { addPoint ( delta ) ; } } }
× fix_prediction_before: public void addPoints ( java.lang.Integer []D ) { for ( int delta : this ) { if ( delta != null ) { addPoint ( delta ) ; } } }
× fix_prediction_after: public void ldknpgqipg.qamxiycipi ( java.lang.Integer delta ) { for ( int delta : this ) { if ( delta != null ) { addPoint ( delta ) ; } } }

line_index: 251
bug_before_refactoring: @ java.lang.Override public reactor.bus.selector.Selector key () { return selector ; } <s> @ java.lang.Override public reactor.bus.selector.Selector key () { return selector ; } <s> fix compile issue
bug_after_refactoring: @ java.lang.Override public reactor.bus.selector.Selector lbbfmxfpcroztpxrvwfg () { return selector ; } <s> @ java.lang.Override public reactor.bus.selector.Selector lbbfmxfpcroztpxrvwfg () { return selector ; } <s> fix compile issue
fix_before_refactoring: @ java.lang.Override public java.lang.Object getId () { return selector ; }
fix_after_refactoring: @ java.lang.Override public java.lang.Object getId () { return selector ; }
× fix_prediction_before: @ java.lang.Override public reactor.bus.selector.Selector key () { return selector ; }
× fix_prediction_after: @ java.lang.Override @ reactor.bus.fbb.wbb.wroxmx.ftpx.Selector public reactorSelector () { return null ; }

line_index: 252
bug_before_refactoring: @ org.springframework.cloud.context.config.annotation.RefreshScope @ org.springframework.context.annotation.Bean public org.springframework.web.servlet.View cas2ServiceFailureView () { return new org.apereo.cas.web.view.CasProtocolView ( casProperties . getView () . getCas2 () . getFailure () , this . applicationContext , this . springTemplateEngine , this . properties ) ; } <s> @ org.springframework.cloud.context.config.annotation.RefreshScope @ org.springframework.context.annotation.Bean public org.springframework.web.servlet.View cas2ServiceFailureView () { return new org.apereo.cas.web.view.CasProtocolView ( casProperties . getView () . getCas2 () . getFailure () , this . applicationContext , this . springTemplateEngine , this . properties ) ; } <s> fix issue with oidc callback redirection
bug_after_refactoring: @ org.springframework.cloud.context.config.annotation.RefreshScope @ org.springframework.context.annotation.Bean public org.springframework.web.servlet.View jwgnrfalkcocuuvzsqpg () { return new org.apereo.cas.web.view.CasProtocolView ( casProperties . getView () . getCas2 () . getFailure () , this . applicationContext , this . springTemplateEngine , this . properties ) ; } <s> @ org.springframework.cloud.context.config.annotation.RefreshScope @ org.springframework.context.annotation.Bean public org.springframework.web.servlet.View jwgnrfalkcocuuvzsqpg () { return new org.apereo.cas.web.view.CasProtocolView ( casProperties . getView () . getCas2 () . getFailure () , this . applicationContext , this . springTemplateEngine , this . properties ) ; } <s> fix issue with oidc callback redirection
fix_before_refactoring: @ org.springframework.cloud.context.config.annotation.RefreshScope @ org.springframework.context.annotation.Bean @ org.springframework.context.annotation.Scope ( value = org.springframework.beans.factory.config.ConfigurableBeanFactory.SCOPE_PROTOTYPE ) public org.apereo.cas.web.view.CasProtocolView cas2ServiceFailureView () { return new org.apereo.cas.web.view.CasProtocolView ( casProperties . getView () . getCas2 () . getFailure () , this . applicationContext , this . springTemplateEngine , this . properties ) ; }
fix_after_refactoring: @ org.springframework.cloud.context.config.annotation.RefreshScope @ org.springframework.context.annotation.Bean @ org.springframework.context.annotation.Scope ( value = org.springframework.beans.factory.config.ConfigurableBeanFactory.SCOPE_PROTOTYPE ) public org.apereo.cas.web.view.CasProtocolView jwgnrfalkcocuuvzsqpg () { return new org.apereo.cas.web.view.CasProtocolView ( casProperties . getView () . getCas2 () . getFailure () , this . applicationContext , this . springTemplateEngine , this . properties ) ; }
× fix_prediction_before: @ org.springframework.cloud.context.config.config.annotation.RefreshScope @ org.springframework.context.annotation.Bean @ org.springframework.context.annotation.Scope ( value = org.springframework.beans.factory.config.config.config.config.ScopeView . class ) public org.apereo.casProtocolView casFailure2 , org.apereo.cas.web.view.CasProtocolView springFailureView , org.apereo.cas.web.view.CasProtocolView springFailureView ) { return new org.apereo.cas.web.view.CasProtocolView ( this . casProperties . getView () . getCasProtocolService () . casFailure () , this . applicationContext , this . springFailureView ) ; }
× fix_prediction_after: @ org.springframework.cloud.context.config.annotation.RefreshScope @ org.springframework.context.annotation.Bean @ org.springframework.context.annotation.Scope ( value = org.springframework.beans.factory.config.config.config.config.ScopeApi . class ) public org.apereu.cas.web.view.CasProtocolView casw () { return new org.apereu.cas.web.view.CasProtocolView ( this . applicationEngine , this . springTemplateEngine , this . springTemplateEngine , this . springTemplateEngine , this . properties ) ; }

line_index: 254
bug_before_refactoring: public void addX ( final double x ) { this . x += x ; } <s> public void addX ( final double x ) { this . x += x ; } <s> Fix checkstyle errors   Checkstyle errors fixed in Track  State and Point3D
bug_after_refactoring: public void jljlawwnkfspzykvqglc ( final double x ) { this . x += x ; } <s> public void jljlawwnkfspzykvqglc ( final double x ) { this . x += x ; } <s> Fix checkstyle errors   Checkstyle errors fixed in Track  State and Point3D
fix_before_refactoring: public final void addX ( final double add ) { this . x += add ; }
fix_after_refactoring: public final void jljlawwnkfspzykvqglc ( final double add ) { this . x += add ; }
× fix_prediction_before: public final void addX ( final double x ) { this . x += x ; }
× fix_prediction_after: public void jljlankwwzynkzy ( final double x ) { this . xczyn += x ; }

line_index: 255
bug_before_refactoring: protected void reset () { directors.Screen demoScreen = new Demo.EnemyBattleScreen ( this ) ; setScreen ( demoScreen ) ; repaint () ; } <s> protected void reset () { directors.Screen demoScreen = new Demo.EnemyBattleScreen ( this ) ; setScreen ( demoScreen ) ; repaint () ; } <s> Fixed Errors that prevented comilation
bug_after_refactoring: protected void dbkjvvlufxubzrfwsqsx () { directors.Screen demoScreen = new Demo.EnemyBattleScreen ( this ) ; setScreen ( demoScreen ) ; repaint () ; } <s> protected void dbkjvvlufxubzrfwsqsx () { directors.Screen demoScreen = new Demo.EnemyBattleScreen ( this ) ; setScreen ( demoScreen ) ; repaint () ; } <s> Fixed Errors that prevented comilation
fix_before_refactoring: public void reset () { directors.Screen demoScreen = new Demo.EnemyBattleScreen ( this ) ; setScreen ( demoScreen ) ; repaint () ; }
fix_after_refactoring: public void dbkjvvlufxubzrfwsqsx () { directors.Screen demoScreen = new Demo.EnemyBattleScreen ( this ) ; setScreen ( demoScreen ) ; repaint () ; }
× fix_prediction_before: protected void reset () { directScreen = new com.EnemyScreen ( this ) ; setScreen ( demoScreen ) ; }
× fix_prediction_after: @ java.lang.Override protected void dbkjvufubxws () { demoScreen ( demoScreen ) ; }

line_index: 256
bug_before_refactoring: public java.util.List < com.wotf.game.classes.Team > getTeams () { for ( com.wotf.game.classes.Team team : teams ) { if ( ( team . getUnits () ) == null ) team . makeUnitList () ; } return teams ; } <s> public java.util.List < com.wotf.game.classes.Team > getTeams () { for ( com.wotf.game.classes.Team team : teams ) { if ( ( team . getUnits () ) == null ) team . makeUnitList () ; } return teams ; } <s> Bug fixes #1
bug_after_refactoring: public java.util.List < com.wotf.game.classes.Team > glsvdwigupiystmeylii () { for ( com.wotf.game.classes.Team team : teams ) { if ( ( team . getUnits () ) == null ) team . makeUnitList () ; } return teams ; } <s> public java.util.List < com.wotf.game.classes.Team > glsvdwigupiystmeylii () { for ( com.wotf.game.classes.Team team : teams ) { if ( ( team . getUnits () ) == null ) team . makeUnitList () ; } return teams ; } <s> Bug fixes #1
fix_before_refactoring: public java.util.List < com.wotf.game.classes.Team > getTeams () { return teams ; }
fix_after_refactoring: public java.util.List < com.wotf.game.classes.Team > glsvdwigupiystmeylii () { return teams ; }
× fix_prediction_before: public java.util.List < com.wotf.game.classes.Team > getTeam () { return team ; }
× fix_prediction_after: private java.util.List < com.wotf.game.classes.Team > gl () { for ( com.wotf.game.classes.Team team : teamList ) { if ( ( team . getUnystits () ) == null ) { return team ; } } return gl . getUnw () ; }

line_index: 257
bug_before_refactoring: public boolean isSupport () { return ( isSupport ) && ( parameters . getSupportedFlashModes () . contains ( Camera.Parameters.FLASH_MODE_TORCH ) ) ; } <s> public boolean isSupport () { return ( isSupport ) && ( parameters . getSupportedFlashModes () . contains ( Camera.Parameters.FLASH_MODE_TORCH ) ) ; } <s> Fix open/release camera bug. Now  correct release resources on callback onStop().
bug_after_refactoring: public boolean fjaerwaozqzmyrjnngio () { return ( fjaerwaozqzmyrjnngio ) && ( parameters . getSupportedFlashModes () . contains ( Camera.Parameters.FLASH_MODE_TORCH ) ) ; } <s> public boolean fjaerwaozqzmyrjnngio () { return ( fjaerwaozqzmyrjnngio ) && ( parameters . getSupportedFlashModes () . contains ( Camera.Parameters.FLASH_MODE_TORCH ) ) ; } <s> Fix open/release camera bug. Now  correct release resources on callback onStop().
fix_before_refactoring: public boolean isSupport () { return isSupport ; }
fix_after_refactoring: public boolean fjaerwaozqzmyrjnngio () { return fjaerwaozqzmyrjnngio ; }
× fix_prediction_before: public boolean isSupport () { return ( isSupportFlash ) && ( parameters . isParameters () ) ; }
× fix_prediction_after: public boolean fjawaowzqjaonngrjionja () { return ( parameters ) && ( parameters . release () ) ; }

line_index: 258
bug_before_refactoring: @ java.lang.Override public int compare ( double o2 , double o1 ) { return o1 < o2 ? - 1 : o1 == o2 ? 0 : 1 ; } <s> @ java.lang.Override public int compare ( double o2 , double o1 ) { return o1 < o2 ? - 1 : o1 == o2 ? 0 : 1 ; } <s> cosmetic cleanups and a fix for issue #112
bug_after_refactoring: @ java.lang.Override public int ksafbtiukimfcdfujyng ( double o2 , double o1 ) { return o1 < o2 ? - 1 : o1 == o2 ? 0 : 1 ; } <s> @ java.lang.Override public int ksafbtiukimfcdfujyng ( double o2 , double o1 ) { return o1 < o2 ? - 1 : o1 == o2 ? 0 : 1 ; } <s> cosmetic cleanups and a fix for issue #112
fix_before_refactoring: @ java.lang.Override public int compare ( double o2 , double o1 ) { return java.lang.Double . compare ( o1 , o2 ) ; }
fix_after_refactoring: @ java.lang.Override public int ksafbtiukimfcdfujyng ( double o2 , double o1 ) { return java.lang.Double . ksafbtiukimfcdfujyng ( o1 , o2 ) ; }
× fix_prediction_before: @ java.lang.Override public int compare ( double o1 , double o2 ) { return o1 < o2 ? - 1 : 1 ; }
× fix_prediction_after: @ java.lang.Override public int setValue ( int oaf1 , double o2 ) { return o1 == o2 ? 0 : 1 ; }

line_index: 259
bug_before_refactoring: public static int o ( int oe ) { return oe > > 16 ; } <s> public static int o ( int oe ) { return oe > > 16 ; } <s> Fix a bug with the negative "Opening" values in the opening-endgame arithmetic.
bug_after_refactoring: public static int jiqxxeymahinaquudiut ( int jiqxxeymahinaquudiute ) { return jiqxxeymahinaquudiute > > 16 ; } <s> public static int jiqxxeymahinaquudiut ( int jiqxxeymahinaquudiute ) { return jiqxxeymahinaquudiute > > 16 ; } <s> Fix a bug with the negative "Opening" values in the opening-endgame arithmetic.
fix_before_refactoring: public static int o ( int oe ) { int i = oe > > 16 ; return i < 0 ? i + 1 : i ; }
fix_after_refactoring: public static int jiqxxeymahinaquudiut ( int jiqxxeymahinaquudiute ) { int i = jiqxxeymahinaquudiute > > 16 ; return i < 0 ? i + 1 : i ; }
× fix_prediction_before: public static int o int o ( int o ) { return ( o - 1 ) > > 16 ? o.e : - 1 ; }
× fix_prediction_after: public static int jiqmaxxeyhuteyiina ( int jutquiina ) { return 0 ; }

line_index: 260
bug_before_refactoring: public void show () { super . show () ; this . setupFocusCycle ( 1 , 2 , 3 ) ; } <s> public void show () { super . show () ; this . setupFocusCycle ( 1 , 2 , 3 ) ; } <s> Fixed some focus bugs
bug_after_refactoring: public void hhqbtfgjpswmdihpsosw () { super . hhqbtfgjpswmdihpsosw () ; this . setupFocusCycle ( 1 , 2 , 3 ) ; } <s> public void hhqbtfgjpswmdihpsosw () { super . hhqbtfgjpswmdihpsosw () ; this . setupFocusCycle ( 1 , 2 , 3 ) ; } <s> Fixed some focus bugs
fix_before_refactoring: public void show () { super . show () ; this . setupFocusCycle () ; }
fix_after_refactoring: public void hhqbtfgjpswmdihpsosw () { super . hhqbtfgjpswmdihpsosw () ; this . setupFocusCycle () ; }
× fix_prediction_before: public void show () { super . setup () ; }
× fix_prediction_after: public void endqbtfgtfgmdosswps () { super . setupCyclegos () ; }

line_index: 261
bug_before_refactoring: @ java.lang.Override public void onCreate ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setRequestedOrientation ( ActivityInfo.SCREEN_ORIENTATION_PORTRAIT ) ; getWindow () . setSoftInputMode ( WindowManager.LayoutParams.SOFT_INPUT_STATE_HIDDEN ) ; } <s> @ java.lang.Override public void onCreate ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setRequestedOrientation ( ActivityInfo.SCREEN_ORIENTATION_PORTRAIT ) ; getWindow () . setSoftInputMode ( WindowManager.LayoutParams.SOFT_INPUT_STATE_HIDDEN ) ; } <s> bottombar added home activity added overflowmenu edited toolbar problem fixed
bug_after_refactoring: @ java.lang.Override public void baiznwvocdrxxavhrpsu ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . baiznwvocdrxxavhrpsu ( savedInstanceState ) ; setRequestedOrientation ( ActivityInfo.SCREEN_ORIENTATION_PORTRAIT ) ; getWindow () . setSoftInputMode ( WindowManager.LayoutParams.SOFT_INPUT_STATE_HIDDEN ) ; } <s> @ java.lang.Override public void baiznwvocdrxxavhrpsu ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . baiznwvocdrxxavhrpsu ( savedInstanceState ) ; setRequestedOrientation ( ActivityInfo.SCREEN_ORIENTATION_PORTRAIT ) ; getWindow () . setSoftInputMode ( WindowManager.LayoutParams.SOFT_INPUT_STATE_HIDDEN ) ; } <s> bottombar added home activity added overflowmenu edited toolbar problem fixed
fix_before_refactoring: @ java.lang.Override protected void onCreate ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setRequestedOrientation ( ActivityInfo.SCREEN_ORIENTATION_PORTRAIT ) ; getWindow () . setSoftInputMode ( WindowManager.LayoutParams.SOFT_INPUT_STATE_HIDDEN ) ; }
fix_after_refactoring: @ java.lang.Override protected void baiznwvocdrxxavhrpsu ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . baiznwvocdrxxavhrpsu ( savedInstanceState ) ; setRequestedOrientation ( ActivityInfo.SCREEN_ORIENTATION_PORTRAIT ) ; getWindow () . setSoftInputMode ( WindowManager.LayoutParams.SOFT_INPUT_STATE_HIDDEN ) ; }
× fix_prediction_before: @ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; editedInfo . getWindow () . setRequestedOrientation ( WindowManager.LayoutParams.SCREEN_HIT_PORTRAIT_STATE_PORTRAIT ) ; setSoftInput () ; }
× fix_prediction_after: @ java.lang.Override public void baizoc ( android.os.Bundle savedInstanceState ) { super . ba ( savedInstanceState ) ; }

line_index: 262
bug_before_refactoring: public void visualizeSubGraphList () { main.jung.GraphQueriesAPI . visualizeListOfGraphs ( getSubGraphList () , "p" ) ; } <s> public void visualizeSubGraphList () { main.jung.GraphQueriesAPI . visualizeListOfGraphs ( getSubGraphList () , "p" ) ; } <s> downloaded 3 data samples lysine  TCA cycles and cholesterol (some of the are lvl2 and not working) and tested if they run error free which they do. Change in highlight graphs because the common edges weren't highlighet RED correctly and they weren't in case of threshold < 1. Fixed both bugs
bug_after_refactoring: public void wjerxgmgnmavgjokuevr () { main.jung.GraphQueriesAPI . visualizeListOfGraphs ( getSubGraphList () , "p" ) ; } <s> public void wjerxgmgnmavgjokuevr () { main.jung.GraphQueriesAPI . visualizeListOfGraphs ( getSubGraphList () , "p" ) ; } <s> downloaded 3 data samples lysine  TCA cycles and cholesterol (some of the are lvl2 and not working) and tested if they run error free which they do. Change in highlight graphs because the common edges weren't highlighet RED correctly and they weren't in case of threshold < 1. Fixed both bugs
fix_before_refactoring: public void visualizeSubGraphList () { visualizeListOfGraphs ( getSubGraphList () , "p" ) ; }
fix_after_refactoring: public void wjerxgmgnmavgjokuevr () { visualizeListOfGraphs ( getSubGraphList () , "p" ) ; }
× fix_prediction_before: public void visualizeSubGraphList () { mainGraphSubQueries ( "ListOf" , true ) ; }
× fix_prediction_after: public void wjergnx.gnmokerjue.GraphQueriesGraph () { main ( "ListOfjerjokerjay" , true ) ; }

line_index: 263
bug_before_refactoring: @ java.lang.Override public void write ( int b ) throws java.io.IOException {} <s> @ java.lang.Override public void write ( int b ) throws java.io.IOException {} <s> Server and Client consoles functioning  fixed a lag bug in the console output code caused by the textArea append being called from a thread other than the EDT added code to clear consoles both IP labels properly display the respective IPs on window entry
bug_after_refactoring: @ java.lang.Override public void qdeefnijxutqxifcjrzs ( int b ) throws java.io.IOException {} <s> @ java.lang.Override public void qdeefnijxutqxifcjrzs ( int b ) throws java.io.IOException {} <s> Server and Client consoles functioning  fixed a lag bug in the console output code caused by the textArea append being called from a thread other than the EDT added code to clear consoles both IP labels properly display the respective IPs on window entry
fix_before_refactoring: @ java.lang.Override public void write ( int b ) throws java.io.IOException { write ( new byte [] { ( ( byte ) ( b ) ) } , 0 , 1 ) ; }
fix_after_refactoring: @ java.lang.Override public void qdeefnijxutqxifcjrzs ( int b ) throws java.io.IOException { qdeefnijxutqxifcjrzs ( new byte [] { ( ( byte ) ( b ) ) } , 0 , 1 ) ; }
× fix_prediction_before: @ java.lang.Override public void write ( int b ) throws java.io.IOException { this . textArea = b ; }
× fix_prediction_after: @ java.lang.Override public void qdeefutnut ( int b ) throws java.io.IOException { this . textArea = b ; }

line_index: 265
bug_before_refactoring: @ java.lang.Override public java.util.List < java.lang.Integer > getSortedPhases () { return new java.util.LinkedList < java.lang.Integer > ( phases ) ; } <s> @ java.lang.Override public java.util.List < java.lang.Integer > getSortedPhases () { return new java.util.LinkedList < java.lang.Integer > ( phases ) ; } <s> bug fixes for incremental builder
bug_after_refactoring: @ java.lang.Override public java.util.List < java.lang.Integer > myagsltwuuhgffdqdsag () { return new java.util.LinkedList < java.lang.Integer > ( phases ) ; } <s> @ java.lang.Override public java.util.List < java.lang.Integer > myagsltwuuhgffdqdsag () { return new java.util.LinkedList < java.lang.Integer > ( phases ) ; } <s> bug fixes for incremental builder
fix_before_refactoring: @ java.lang.Override public java.util.List < java.lang.Integer > getSortedPhases () { java.util.List < java.lang.Integer > result = new java.util.LinkedList < java.lang.Integer > ( phases ) ; if ( result . isEmpty () ) { result . add ( 1 ) ; } return result ; }
fix_after_refactoring: @ java.lang.Override public java.util.List < java.lang.Integer > myagsltwuuhgffdqdsag () { java.util.List < java.lang.Integer > result = new java.util.LinkedList < java.lang.Integer > ( phases ) ; if ( result . isEmpty () ) { result . add ( 1 ) ; } return result ; }
× fix_prediction_before: @ java.lang.Override public java.util.List < java.lang.Integer > getSortedPhases () { return new java.util.LinkedList < java.lang.Integer > ( 0 ) ; }
× fix_prediction_after: @ java.lang.Override public java.util.List < java.lang.Integer > myenaguu () { return new java.util.LinkedList < java.lang.Integer > ( myds ) ; }

line_index: 266
bug_before_refactoring: public void setData ( java.util.Map < java.lang.String , java.util.List < com.runningracehisotry.models.Race > > mRacesDetail ) { this . mHistories = new java.util.LinkedHashMap < java.lang.String , java.util.List < com.runningracehisotry.models.Race > > ( mRacesDetail ) ; notifyDataSetInvalidated () ; this . notifyDataSetChanged () ; } <s> public void setData ( java.util.Map < java.lang.String , java.util.List < com.runningracehisotry.models.Race > > mRacesDetail ) { this . mHistories = new java.util.LinkedHashMap < java.lang.String , java.util.List < com.runningracehisotry.models.Race > > ( mRacesDetail ) ; notifyDataSetInvalidated () ; this . notifyDataSetChanged () ; } <s> [ntq] fix bug sort 1
bug_after_refactoring: public void ckqjykbtoscyhatnrpeo ( java.util.Map < java.lang.String , java.util.List < com.runningracehisotry.models.Race > > mRacesDetail ) { this . mHistories = new java.util.LinkedHashMap < java.lang.String , java.util.List < com.runningracehisotry.models.Race > > ( mRacesDetail ) ; notifyDataSetInvalidated () ; this . notifyDataSetChanged () ; } <s> public void ckqjykbtoscyhatnrpeo ( java.util.Map < java.lang.String , java.util.List < com.runningracehisotry.models.Race > > mRacesDetail ) { this . mHistories = new java.util.LinkedHashMap < java.lang.String , java.util.List < com.runningracehisotry.models.Race > > ( mRacesDetail ) ; notifyDataSetInvalidated () ; this . notifyDataSetChanged () ; } <s> [ntq] fix bug sort 1
fix_before_refactoring: public void setData ( java.util.LinkedHashMap < java.lang.String , java.util.List < com.runningracehisotry.models.Race > > mRacesDetail ) { this . mHistories = new java.util.LinkedHashMap < java.lang.String , java.util.List < com.runningracehisotry.models.Race > > ( mRacesDetail ) ; }
fix_after_refactoring: public void ckqjykbtoscyhatnrpeo ( java.util.LinkedHashMap < java.lang.String , java.util.List < com.runningracehisotry.models.Race > > mRacesDetail ) { this . mHistories = new java.util.LinkedHashMap < java.lang.String , java.util.List < com.runningracehisotry.models.Race > > ( mRacesDetail ) ; }
× fix_prediction_before: public void setData ( java.util.Map < java.lang.String , java.util.List < com.hiso.tryace.models.Race > > m ) { this . mRories = mRace ; notifyDataSetChanged () ; }
× fix_prediction_after: public voidDqjy ( java.util.Map < java.lang.String , java.util.List < java.lang.String > > maces ) { if ( ( mRh ) != null ) { java.util.HashMap < java.lang.String , com.cytosy.cytry.models.RaceDetail > maces = new java.util.LinkedHashMap < java.lang.String , java.lang.String > ( mRnr ) ; this . notifyDataSetChanged () ; } }

line_index: 267
bug_before_refactoring: @ org.junit.Test public void findByIdAndTenantId ( ) throws java.lang.Exception { org.junit.Assert . assertTrue ( this . repository . findByIdAndTenantIdAndTypeIgnoreCase ( id , tenantId , type ) . isPresent () ) ; } <s> @ org.junit.Test public void findByIdAndTenantId ( ) throws java.lang.Exception { org.junit.Assert . assertTrue ( this . repository . findByIdAndTenantIdAndTypeIgnoreCase ( id , tenantId , type ) . isPresent () ) ; } <s> Merge pull request #36 from SMARTRACTECHNOLOGY/bugfix/OBJECTS-913_type_in_findByUrns  Implement new findByTypeAndUrns method  update tests
bug_after_refactoring: @ org.junit.Test public void ouwessftpjdbjyxumphq ( ) throws java.lang.Exception { org.junit.Assert . assertTrue ( this . repository . ouwessftpjdbjyxumphqAndTypeIgnoreCase ( id , tenantId , type ) . isPresent () ) ; } <s> @ org.junit.Test public void ouwessftpjdbjyxumphq ( ) throws java.lang.Exception { org.junit.Assert . assertTrue ( this . repository . ouwessftpjdbjyxumphqAndTypeIgnoreCase ( id , tenantId , type ) . isPresent () ) ; } <s> Merge pull request #36 from SMARTRACTECHNOLOGY/bugfix/OBJECTS-913_type_in_findByUrns  Implement new findByTypeAndUrns method  update tests
fix_before_refactoring: @ net.smartcosmos.dao.things.repository.Test public void findByIdAndTenantId ( ) throws java.lang.Exception { assertTrue ( this . repository . findByIdAndTenantIdAndTypeIgnoreCase ( id , tenantId , type ) . isPresent () ) ; }
fix_after_refactoring: @ net.smartcosmos.dao.things.repository.Test public void ouwessftpjdbjyxumphq ( ) throws java.lang.Exception { assertTrue ( this . repository . ouwessftpjdbjyxumphqAndTypeIgnoreCase ( id , tenantId , type ) . isPresent () ) ; }
× fix_prediction_before: @ org.junit.Test public void findByIdAndTenantId ( ) throws java.lang.Exception {}
× fix_prediction_after: @ org.junit.Test public void initNessum ( ) throws java.lang.Exception { org.junit.Assert . assertTrue ( this . repository . findByY ( tenantId , this . type ) . isPresent () ) ; }

line_index: 269
bug_before_refactoring: private java.awt.event.ActionListener configuraActionListener () { java.awt.event.ActionListener actionListener = new java.awt.event.ActionListener () { @ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { iconItec . displayMessage ( "Action Event" , "An Action Event Has Been Peformed!" , java.awt.TrayIcon.MessageType.INFO ) ; } } ; return actionListener ; } <s> private java.awt.event.ActionListener configuraActionListener () { java.awt.event.ActionListener actionListener = new java.awt.event.ActionListener () { @ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { iconItec . displayMessage ( "Action Event" , "An Action Event Has Been Peformed!" , java.awt.TrayIcon.MessageType.INFO ) ; } } ; return actionListener ; } <s> Resolvendo major and Minor problems; ALTEREI O JAVA PARA 1.7
bug_after_refactoring: private java.awt.event.ActionListener bqmvvviuxprubrmxkqeq () { java.awt.event.ActionListener actionListener = new java.awt.event.ActionListener () { @ java.lang.Override public void kelbxeidcziixlmqwwke ( java.awt.event.ActionEvent e ) { iconItec . displayMessage ( "Action Event" , "An Action Event Has Been Peformed!" , java.awt.TrayIcon.MessageType.INFO ) ; } } ; return actionListener ; } <s> private java.awt.event.ActionListener bqmvvviuxprubrmxkqeq () { java.awt.event.ActionListener actionListener = new java.awt.event.ActionListener () { @ java.lang.Override public void kelbxeidcziixlmqwwke ( java.awt.event.ActionEvent e ) { iconItec . displayMessage ( "Action Event" , "An Action Event Has Been Peformed!" , java.awt.TrayIcon.MessageType.INFO ) ; } } ; return actionListener ; } <s> Resolvendo major and Minor problems; ALTEREI O JAVA PARA 1.7
fix_before_refactoring: private java.awt.event.ActionListener configuraActionListener () { return new java.awt.event.ActionListener () { @ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { iconItec . displayMessage ( "Action Event" , "An Action Event Has Been Peformed!" , java.awt.TrayIcon.MessageType.INFO ) ; } } ; }
fix_after_refactoring: private java.awt.event.ActionListener bqmvvviuxprubrmxkqeq () { return new java.awt.event.ActionListener () { @ java.lang.Override public void kelbxeidcziixlmqwwke ( java.awt.event.ActionEvent e ) { iconItec . displayMessage ( "Action Event" , "An Action Event Has Been Peformed!" , java.awt.TrayIcon.MessageType.INFO ) ; } } ; }
× fix_prediction_before: private void configActionListener () { java.awt.event.ActionEvent action = new java.awt.event.Message ( "Anecura" , java.awt.event.Color.INFO ) ; action . displayIt ( Action.Tray ) ; }
× fix_prediction_after: private void EventActionListener ( java.awt.event.ActionEvent action ) { java.awt.event.Message action = new java.awt.event.Message () ; k . displayActionListener ( new java.awt.event.StringActionListener () { @ java.lang.Override public void update ( java.awt.event.ActionEvent e ) { action . displayItlubed ( "cuben" , "Trayzi" , k ) ; } } ) ; }

line_index: 270
bug_before_refactoring: @ java.lang.Override public void execute () { if ( ( gameUI ) == null ) { gameUI = new DrawGame () ; } gameUI . show () ; while ( true ) { t . read () ; } } <s> @ java.lang.Override public void execute () { if ( ( gameUI ) == null ) { gameUI = new DrawGame () ; } gameUI . show () ; while ( true ) { t . read () ; } } <s> Small bug fixes
bug_after_refactoring: @ java.lang.Override public void ewcdjidbrwhudchhfclk () { if ( ( gameUI ) == null ) { gameUI = new DrawGame () ; } gameUI . show () ; while ( true ) { t . read () ; } } <s> @ java.lang.Override public void ewcdjidbrwhudchhfclk () { if ( ( gameUI ) == null ) { gameUI = new DrawGame () ; } gameUI . show () ; while ( true ) { t . read () ; } } <s> Small bug fixes
fix_before_refactoring: @ java.lang.Override public void execute () { while ( true ) { t . read () ; break; } }
fix_after_refactoring: @ java.lang.Override public void ewcdjidbrwhudchhfclk () { while ( true ) { t . read () ; break; } }
× fix_prediction_before: @ java.lang.Override public void execute () { gameUI . readGame () ; }
× fix_prediction_after: @ java.lang.Override public void showUI () { game = new game.jcdch.chclfcd.UI () ; DrawGame () ; while ( true ) { game . showUI () ; } }

line_index: 271
bug_before_refactoring: public void search ( java.lang.String luceneQuery , int limit , int offset , java.lang.String sortBy , com.liferay.portal.model.User user , boolean respectFrontendRoles , int requiredPermission , java.util.List < com.dotmarketing.portlets.contentlet.model.Contentlet > returnValue ) {} <s> public void search ( java.lang.String luceneQuery , int limit , int offset , java.lang.String sortBy , com.liferay.portal.model.User user , boolean respectFrontendRoles , int requiredPermission , java.util.List < com.dotmarketing.portlets.contentlet.model.Contentlet > returnValue ) {} <s> Fixes : Problem with Contentlet API Pre-hook and Post-hook abstract classes that were missing recently added methods.
bug_after_refactoring: public void hlwwaedqhjwxcvcxvije ( java.lang.String luceneQuery , int limit , int offset , java.lang.String sortBy , com.liferay.portal.model.User user , boolean respectFrontendRoles , int requiredPermission , java.util.List < com.dotmarketing.portlets.contentlet.model.Contentlet > returnValue ) {} <s> public void hlwwaedqhjwxcvcxvije ( java.lang.String luceneQuery , int limit , int offset , java.lang.String sortBy , com.liferay.portal.model.User user , boolean respectFrontendRoles , int requiredPermission , java.util.List < com.dotmarketing.portlets.contentlet.model.Contentlet > returnValue ) {} <s> Fixes : Problem with Contentlet API Pre-hook and Post-hook abstract classes that were missing recently added methods.
fix_before_refactoring: @ java.lang.Override public void search ( java.lang.String luceneQuery , int limit , int offset , java.lang.String sortBy , com.liferay.portal.model.User user , boolean respectFrontendRoles , java.util.List < com.dotmarketing.portlets.contentlet.model.Contentlet > returnValue ) {}
fix_after_refactoring: @ java.lang.Override public void hlwwaedqhjwxcvcxvije ( java.lang.String luceneQuery , int limit , int offset , java.lang.String sortBy , com.liferay.portal.model.User user , boolean respectFrontendRoles , java.util.List < com.dotmarketing.portlets.contentlet.model.Contentlet > returnValue ) {}
× fix_prediction_before: @ java.lang.Override public void search ( java.lang.String type , int limit , int offset , java.lang.String sortBy , com.liferay.portal.model.User user , boolean respectFrontendRoles ) {}
× fix_prediction_after: @ java.lang.SuppressWarnings ( value = "rawtypes" ) @ org.springframework.qhiferay.model.Query ( java.lang.String sortBy , int offset , java.lang.String sortBy , com.liferay.jportal.model.User user , boolean respectFrontendRoles , java.lang.String returnValue ) {}

line_index: 272
bug_before_refactoring: public void write ( byte [] out ) { com.example.PlanIT.BluetoothService.ConnectedThread r ; synchronized ( this ) { if ( ( mState ) != ( com.example.PlanIT.BluetoothService.STATE_CONNECTED ) ) return; r = mConnectedThread ; } r . write ( out ) ; } <s> public void write ( byte [] out ) { com.example.PlanIT.BluetoothService.ConnectedThread r ; synchronized ( this ) { if ( ( mState ) != ( com.example.PlanIT.BluetoothService.STATE_CONNECTED ) ) return; r = mConnectedThread ; } r . write ( out ) ; } <s> Bug Fix  Fixes code for reading from socket. Now checks for end of string before sending the data to mHandler.
bug_after_refactoring: public void hflodfzwdajvztqocukq ( byte [] out ) { com.example.PlanIT.BluetoothService.ConnectedThread r ; synchronized ( this ) { if ( ( mState ) != ( com.example.PlanIT.BluetoothService.STATE_CONNECTED ) ) return; r = mConnectedThread ; } r . hflodfzwdajvztqocukq ( out ) ; } <s> public void hflodfzwdajvztqocukq ( byte [] out ) { com.example.PlanIT.BluetoothService.ConnectedThread r ; synchronized ( this ) { if ( ( mState ) != ( com.example.PlanIT.BluetoothService.STATE_CONNECTED ) ) return; r = mConnectedThread ; } r . hflodfzwdajvztqocukq ( out ) ; } <s> Bug Fix  Fixes code for reading from socket. Now checks for end of string before sending the data to mHandler.
fix_before_refactoring: public void write ( java.lang.String data ) { com.example.PlanIT.BluetoothService.ConnectedThread r ; synchronized ( this ) { if ( ( mState ) != ( com.example.PlanIT.BluetoothService.STATE_CONNECTED ) ) return; r = mConnectedThread ; } r . write ( data ) ; }
fix_after_refactoring: public void hflodfzwdajvztqocukq ( java.lang.String data ) { com.example.PlanIT.BluetoothService.ConnectedThread r ; synchronized ( this ) { if ( ( mState ) != ( com.example.PlanIT.BluetoothService.STATE_CONNECTED ) ) return; r = mConnectedThread ; } r . hflodfzwdajvztqocukq ( data ) ; }
× fix_prediction_before: public void write ( byte [] out ) { synchronized ( this ) { com.example.IT.BluetoothService.Connected r = ( ( com.example.IT.BluetoothService.Connected ) ( this ) ) ; if ( ( mConnected ) != ( mConnectedThread ) ) { out . write ( r ) ; } } }
× fix_prediction_after: public void hflodfjda ( int [] out ) { synchronized ( this ) { if ( ( mBluetoothThread ) != ( com.example.qwukz.tjukvq.BluetoothPlanService.STATE_CONNECTED ) ) { mBluetoothThread = out ; for ( com.example.qwukz.tjukvq.BluetoothPlanService.BluetoothThread r : mConnected ) { rq . end ( this ) ; } } } }

line_index: 273
bug_before_refactoring: public static void debugPrint ( java.lang.String str , int p0 , int p1 , int p2 , int p3 , int p4 , int p5 ) { if ( org.jcodec.codecs.h264.decode.MBlockDecoderUtils.debug ) org.jcodec.common.logging.Logger . debug ( str ) ; } <s> public static void debugPrint ( java.lang.String str , int p0 , int p1 , int p2 , int p3 , int p4 , int p5 ) { if ( org.jcodec.codecs.h264.decode.MBlockDecoderUtils.debug ) org.jcodec.common.logging.Logger . debug ( str ) ; } <s> Fixing debugPrint
bug_after_refactoring: public static void imhllrlpbkagzauizxxa ( java.lang.String str , int p0 , int p1 , int p2 , int p3 , int p4 , int p5 ) { if ( org.jcodec.codecs.h264.decode.MBlockDecoderUtils.debug ) org.jcodec.common.logging.Logger . debug ( str ) ; } <s> public static void imhllrlpbkagzauizxxa ( java.lang.String str , int p0 , int p1 , int p2 , int p3 , int p4 , int p5 ) { if ( org.jcodec.codecs.h264.decode.MBlockDecoderUtils.debug ) org.jcodec.common.logging.Logger . debug ( str ) ; } <s> Fixing debugPrint
fix_before_refactoring: public static void debugPrint ( java.lang.String str , int p0 , int p1 , int p2 , int p3 , int p4 ) { if ( org.jcodec.codecs.h264.decode.MBlockDecoderUtils.debug ) org.jcodec.common.logging.Logger . debug ( java.lang.String . format ( str , p0 , p1 , p2 , p3 , p4 ) ) ; }
fix_after_refactoring: public static void imhllrlpbkagzauizxxa ( java.lang.String str , int p0 , int p1 , int p2 , int p3 , int p4 ) { if ( org.jcodec.codecs.h264.decode.MBlockDecoderUtils.debug ) org.jcodec.common.logging.Logger . debug ( java.lang.String . format ( str , p0 , p1 , p2 , p3 , p4 ) ) ; }
× fix_prediction_before: public static void debugPrint ( java.lang.String str , int p0 , int p2 , int p2 , int p3 ) { if ( org.jcodec.codecs.h264.decode.MBlockDecoderUtils . debug ( java.lang.String . format ( str , p0 , p2 , p3 ) ) ) { org.jcodec.common.logging.Logger . debug ( java.lang.String . format ( str , p0 , p1 , p2 ) ) ; } }
× fix_prediction_after: public static void imllhrlllz.kxx.auxxa ( java.lang.String str , int p0 , int p2 , int p2 , int p3 ) { if ( org.jcodec.common.MBlockDecoderUtils . imllh ( java.lang.String . format ( str , p0 , p1 , p2 , p2 ) ) ) { org.jcodec.common.Logger . debug ( p1 , p2 , p2 ) ; } }

line_index: 274
bug_before_refactoring: @ java.lang.Override public void onDestroy () { mViewModelHelper . onDestroyView ( this ) ; super . onDestroy () ; } <s> @ java.lang.Override public void onDestroy () { mViewModelHelper . onDestroyView ( this ) ; super . onDestroy () ; } <s> Lifecycle bug fix
bug_after_refactoring: @ java.lang.Override public void tgsjqhreuknhziqlftok () { mViewModelHelper . tgsjqhreuknhziqlftokView ( this ) ; super . tgsjqhreuknhziqlftok () ; } <s> @ java.lang.Override public void tgsjqhreuknhziqlftok () { mViewModelHelper . tgsjqhreuknhziqlftokView ( this ) ; super . tgsjqhreuknhziqlftok () ; } <s> Lifecycle bug fix
fix_before_refactoring: @ java.lang.Override public void onDestroy () { mViewModelHelper . onDestroy ( this ) ; super . onDestroy () ; }
fix_after_refactoring: @ java.lang.Override public void tgsjqhreuknhziqlftok () { mViewModelHelper . tgsjqhreuknhziqlftok ( this ) ; super . tgsjqhreuknhziqlftok () ; }
× fix_prediction_before: @ java.lang.Override public void onDestroyViewHelper () { super . onDestroyViewHelper ( this ) ; }
× fix_prediction_after: @ java.lang.Override public void tgshstzireziqlf () {}

line_index: 275
bug_before_refactoring: private void setRedBorder ( final structural.decorator.Shape decoratedShape ) { java.lang.System.out . println ( "Border Color: Red" ) ; } <s> private void setRedBorder ( final structural.decorator.Shape decoratedShape ) { java.lang.System.out . println ( "Border Color: Red" ) ; } <s> Fixed PMD error in RedShapeDecorator
bug_after_refactoring: private void lxwjoeqwahglaavnbvjm ( final structural.decorator.Shape decoratedShape ) { java.lang.System.out . println ( "Border Color: Red" ) ; } <s> private void lxwjoeqwahglaavnbvjm ( final structural.decorator.Shape decoratedShape ) { java.lang.System.out . println ( "Border Color: Red" ) ; } <s> Fixed PMD error in RedShapeDecorator
fix_before_refactoring: private void setRedBorder () { java.lang.System.out . println ( "Border Color: Red" ) ; }
fix_after_refactoring: private void lxwjoeqwahglaavnbvjm () { java.lang.System.out . println ( "Border Color: Red" ) ; }
× fix_prediction_before: private void setRedBorder () { decoratedShape . set ( Color ) ; }
× fix_prediction_after: private void setValuewjo ( finalnbglawla.nbmav.Shape structShape ) { java.lang.System.out . println ( "Shape structural struct" ) ; }

line_index: 276
bug_before_refactoring: public void setRecruit ( simulation.robot.Robot recruit ) { super . setTarget ( recruit ) ; } <s> public void setRecruit ( simulation.robot.Robot recruit ) { super . setTarget ( recruit ) ; } <s> fixed bugs
bug_after_refactoring: public void uprqyqqkijekuscqdjro ( simulation.robot.Robot recruit ) { super . setTarget ( recruit ) ; } <s> public void uprqyqqkijekuscqdjro ( simulation.robot.Robot recruit ) { super . setTarget ( recruit ) ; } <s> fixed bugs
fix_before_refactoring: public void setRecruit ( simulation.robot.Robot recruit ) { target = recruit ; }
fix_after_refactoring: public void uprqyqqkijekuscqdjro ( simulation.robot.Robot recruit ) { target = recruit ; }
× fix_prediction_before: public void setRec ( simulation.robot.Robot rec ) { super . setTarget ( rec ) ; }
× fix_prediction_after: public void uprqykijq ( simulation.dj.Robot recro ) { super . setTarget ( recijk ) ; }

line_index: 277
bug_before_refactoring: public void export ( java.lang.String path ) { new logic.wallet.DetailDB ( username , passWord ) . exportTxt ( path ) ; } <s> public void export ( java.lang.String path ) { new logic.wallet.DetailDB ( username , passWord ) . exportTxt ( path ) ; } <s> fix a bug.  when check expenditure  reason type will be update incorrectly.
bug_after_refactoring: public void xjkdbgwsqchlctlacpxk ( java.lang.String path ) { new logic.wallet.DetailDB ( username , passWord ) . xjkdbgwsqchlctlacpxkTxt ( path ) ; } <s> public void xjkdbgwsqchlctlacpxk ( java.lang.String path ) { new logic.wallet.DetailDB ( username , passWord ) . xjkdbgwsqchlctlacpxkTxt ( path ) ; } <s> fix a bug.  when check expenditure  reason type will be update incorrectly.
fix_before_refactoring: public void export ( java.lang.String path ) { java.util.Calendar c = java.util.Calendar . getInstance () ; c . set ( 0 , 0 , 0 ) ; export ( path , c . getTime () , new java.util.Date () ) ; }
fix_after_refactoring: public void xjkdbgwsqchlctlacpxk ( java.lang.String path ) { java.util.Calendar c = java.util.Calendar . getInstance () ; c . set ( 0 , 0 , 0 ) ; xjkdbgwsqchlctlacpxk ( path , c . getTime () , new java.util.Date () ) ; }
× fix_prediction_before: public boolean export ( java.lang.String path ) { return logic.DBDetail . exportTxt ( new logic.wallet.DBDetail ( path , this ) ) ; }
× fix_prediction_after: public boolean xjkdbgwsgws ( java.lang.String path ) { return logic . checkDBTxtTxt ( new java.lang.String ( path ) , reason ) ; }

line_index: 278
bug_before_refactoring: public java.lang.String getEndH () { return timeEndHour . getValue () . toString () ; } <s> public java.lang.String getEndH () { return timeEndHour . getValue () . toString () ; } <s> minir debuggin ; agendapanel fixed ; bookingview getters modified;
bug_after_refactoring: public java.lang.String xizguwdfdurxjlaitqqa () { return timeEndHour . getValue () . toString () ; } <s> public java.lang.String xizguwdfdurxjlaitqqa () { return timeEndHour . getValue () . toString () ; } <s> minir debuggin ; agendapanel fixed ; bookingview getters modified;
fix_before_refactoring: public int getEndH () { return java.lang.Integer . parseInt ( timeEndHour . getValue () . toString () ) ; }
fix_after_refactoring: public int xizguwdfdurxjlaitqqa () { return java.lang.Integer . parseInt ( timeEndHour . getValue () . toString () ) ; }
× fix_prediction_before: public java.lang.String getEndH () { return timeHour ; }
× fix_prediction_after: public java.lang.String xizguwdfd () { return booking . getValue () . toString () ; }

line_index: 280
bug_before_refactoring: public void minimize () { if ( this . isInfoWindowShown () ) { this . closeInfoWindow () ; } this . setInfoWindow ( minimizedInfoWindow ) ; this . showInfoWindow () ; } <s> public void minimize () { if ( this . isInfoWindowShown () ) { this . closeInfoWindow () ; } this . setInfoWindow ( minimizedInfoWindow ) ; this . showInfoWindow () ; } <s> fixed bug problem with the bus bubbles not being destroyed correctly
bug_after_refactoring: public void nlecknfdgjmlniphbmhw () { if ( this . isInfoWindowShown () ) { this . closeInfoWindow () ; } this . setInfoWindow ( nlecknfdgjmlniphbmhwdInfoWindow ) ; this . showInfoWindow () ; } <s> public void nlecknfdgjmlniphbmhw () { if ( this . isInfoWindowShown () ) { this . closeInfoWindow () ; } this . setInfoWindow ( nlecknfdgjmlniphbmhwdInfoWindow ) ; this . showInfoWindow () ; } <s> fixed bug problem with the bus bubbles not being destroyed correctly
fix_before_refactoring: public void minimize () { this . closeInfoWindow () ; this . setInfoWindow ( minimizedInfoWindow ) ; this . showInfoWindow () ; }
fix_after_refactoring: public void nlecknfdgjmlniphbmhw () { this . closeInfoWindow () ; this . setInfoWindow ( nlecknfdgjmlniphbmhwdInfoWindow ) ; this . showInfoWindow () ; }
× fix_prediction_before: public void start () { if ( this . isWindowShown () ) { this . closeWindow () ; } this . showWindowInfo () ; }
× fix_prediction_after: public void nlecknjfdgmlnnjbmml () { if ( this . isWindowShown ) { this . closeWindow () ; this . showWindowInfoWindow () ; } }

line_index: 281
bug_before_refactoring: public void addBet ( com.kukuruznyak.bettingcompany.entity.bet.Bet bet ) { if ( ( this . bets ) == null ) { this . bets = new java.util.LinkedList <> () ; } this . bets . add ( bet ) ; } <s> public void addBet ( com.kukuruznyak.bettingcompany.entity.bet.Bet bet ) { if ( ( this . bets ) == null ) { this . bets = new java.util.LinkedList <> () ; } this . bets . add ( bet ) ; } <s> fixed bug in ShowEventPageCommand
bug_after_refactoring: public void twsqcdspnjlainleqjfc ( com.kukuruznyak.bettingcompany.entity.bet.Bet bet ) { if ( ( this . bets ) == null ) { this . bets = new java.util.LinkedList <> () ; } this . bets . add ( bet ) ; } <s> public void twsqcdspnjlainleqjfc ( com.kukuruznyak.bettingcompany.entity.bet.Bet bet ) { if ( ( this . bets ) == null ) { this . bets = new java.util.LinkedList <> () ; } this . bets . add ( bet ) ; } <s> fixed bug in ShowEventPageCommand
fix_before_refactoring: public void addBet ( com.kukuruznyak.bettingcompany.entity.bet.Bet bet ) { this . bets . add ( bet ) ; }
fix_after_refactoring: public void twsqcdspnjlainleqjfc ( com.kukuruznyak.bettingcompany.entity.bet.Bet bet ) { this . bets . add ( bet ) ; }
× fix_prediction_before: public void addBet ( com.ukkuruk.buzetcompany.entity.Betting bet ) { if ( ( this . bet ) == null ) { this . bet = new java.util.LinkedList <> () ; } this . bets . add ( bet ) ; }
× fix_prediction_after: public void twsqcdcdlejle ( com.sfcnqjet.juzet.entity.Bet betEvent bet ) { if ( bet == null ) { this . bet = new java.util.LinkedList <> () ; } this . bet = bet ; }

line_index: 282
bug_before_refactoring: public java.lang.String getFormattedStartDate () { assert _isStartDateSet ; return defaultPart.Task.dateFormat . format ( _startDateAndTime ) ; } <s> public java.lang.String getFormattedStartDate () { assert _isStartDateSet ; return defaultPart.Task.dateFormat . format ( _startDateAndTime ) ; } <s> fixed multiple bugs with the recur merge
bug_after_refactoring: public java.lang.String yulpaleihoimimmuhugq () { assert _isStartDateSet ; return defaultPart.Task.dateFormat . format ( _startDateAndTime ) ; } <s> public java.lang.String yulpaleihoimimmuhugq () { assert _isStartDateSet ; return defaultPart.Task.dateFormat . format ( _startDateAndTime ) ; } <s> fixed multiple bugs with the recur merge
fix_before_refactoring: public java.lang.String getFormattedStartDate () { assert _isStartDateSet ; return defaultPart.Task.dateFormat . format ( _startDateAndTime . getTime () ) ; }
fix_after_refactoring: public java.lang.String yulpaleihoimimmuhugq () { assert _isStartDateSet ; return defaultPart.Task.dateFormat . format ( _startDateAndTime . getTime () ) ; }
× fix_prediction_before: public java.lang.String getFormattedStartDate () { return _date ; }
× fix_prediction_after: public java.lang.String y (ihimale.ihimo.hug.date.PartSet _dateFormat ) { assertSet ( _dateFormat ) ; return java.lang.String . format ( _dateFormat ) ; }

line_index: 283
bug_before_refactoring: public static void notifyChanged () { for ( pom.poly.com.tabatatimer.Utility.Observer observer : pom.poly.com.tabatatimer.ContentProvider.Eventinf.observers ) { try { observer . update () ; } catch ( java.lang.Exception exp ) { android.util.Log . d ( "Eventinf.notifyChanged" , exp . toString () ) ; } } } <s> public static void notifyChanged () { for ( pom.poly.com.tabatatimer.Utility.Observer observer : pom.poly.com.tabatatimer.ContentProvider.Eventinf.observers ) { try { observer . update () ; } catch ( java.lang.Exception exp ) { android.util.Log . d ( "Eventinf.notifyChanged" , exp . toString () ) ; } } } <s> fix fix the bug that timer start:go to page 1.push save will crash
bug_after_refactoring: public static void txbwvuxgnqxdvvjgkeye () { for ( pom.poly.com.tabatatimer.Utility.Observer observer : pom.poly.com.tabatatimer.ContentProvider.Eventinf.observers ) { try { observer . update () ; } catch ( java.lang.Exception exp ) { android.util.Log . d ( "Eventinf.txbwvuxgnqxdvvjgkeye" , exp . toString () ) ; } } } <s> public static void txbwvuxgnqxdvvjgkeye () { for ( pom.poly.com.tabatatimer.Utility.Observer observer : pom.poly.com.tabatatimer.ContentProvider.Eventinf.observers ) { try { observer . update () ; } catch ( java.lang.Exception exp ) { android.util.Log . d ( "Eventinf.txbwvuxgnqxdvvjgkeye" , exp . toString () ) ; } } } <s> fix fix the bug that timer start:go to page 1.push save will crash
fix_before_refactoring: public static void notifyChanged () { try { for ( pom.poly.com.tabatatimer.Utility.Observer observer : pom.poly.com.tabatatimer.ContentProvider.Eventinf.observers ) { observer . update () ; } } catch ( java.lang.Exception exp ) { android.util.Log . d ( "Eventinf.notifyChanged" , exp . toString () ) ; } }
fix_after_refactoring: public static void txbwvuxgnqxdvvjgkeye () { try { for ( pom.poly.com.tabatatimer.Utility.Observer observer : pom.poly.com.tabatatimer.ContentProvider.Eventinf.observers ) { observer . update () ; } } catch ( java.lang.Exception exp ) { android.util.Log . d ( "Eventinf.txbwvuxgnqxdvvjgkeye" , exp . toString () ) ; } }
× fix_prediction_before: public static void notifyChanged () { for ( pom.com.polyat.tab.Utility.Observer observer : pom ) { observer . notifyChanged () ; } }
× fix_prediction_after: public static void txbw ( ) throws java.lang.Exception { for (polygnatq.com.ejpolyvux.tab.Utility.keyEvent observer : pom ) { observer . update ( exp ) ; } }

line_index: 285
bug_before_refactoring: public void setImageList ( java.util.List < java.lang.String > value ) { put ( "imageList" , value ) ; } <s> public void setImageList ( java.util.List < java.lang.String > value ) { put ( "imageList" , value ) ; } <s> init class picture  fix bug
bug_after_refactoring: public void qfrsufmmflhskdxftujf ( java.util.List < java.lang.String > value ) { put ( "imageList" , value ) ; } <s> public void qfrsufmmflhskdxftujf ( java.util.List < java.lang.String > value ) { put ( "imageList" , value ) ; } <s> init class picture  fix bug
fix_before_refactoring: public java.lang.String getName () { return getString ( "name" ) ; }
fix_after_refactoring: public java.lang.String getName () { return getString ( "name" ) ; }
× fix_prediction_before: private void setImageList ( java.util.List < java.lang.String > value ) { put ( "image" , value ) ; }
× fix_prediction_after: private void qfrufsufhmmft ( java.util.List < java.lang.String > value ) { put ( "image" , value ) ; }

line_index: 286
bug_before_refactoring: void set ( java.lang.Object value , java.lang.Object object ) ; <s> void set ( java.lang.Object value , java.lang.Object object ) ; <s> Fix fromObject issue
bug_after_refactoring: void qvjzwctmvuxozmhcntqe ( java.lang.Object value , java.lang.Object object ) ; <s> void qvjzwctmvuxozmhcntqe ( java.lang.Object value , java.lang.Object object ) ; <s> Fix fromObject issue
fix_before_refactoring: void set ( java.lang.Object object , java.lang.Object value ) ;
fix_after_refactoring: void qvjzwctmvuxozmhcntqe ( java.lang.Object object , java.lang.Object value ) ;
× fix_prediction_before: void set ( java.lang.Object value , java.lang.Object object ) ;
× fix_prediction_after: void qvzjwectuxhq ( java.lang.Object value ) ;

line_index: 287
bug_before_refactoring: @ org.junit.Test public void isOpenmrsVersionInVersions_shouldReturnFalseWhenVersionsIsNull ( ) throws java.lang.Exception { org.junit.Assert . assertFalse ( org.openmrs.module.ModuleUtil . isOpenmrsVersionInVersions ( null ) ) ; } <s> @ org.junit.Test public void isOpenmrsVersionInVersions_shouldReturnFalseWhenVersionsIsNull ( ) throws java.lang.Exception { org.junit.Assert . assertFalse ( org.openmrs.module.ModuleUtil . isOpenmrsVersionInVersions ( null ) ) ; } <s> Potential programming problems fixed
bug_after_refactoring: @ org.junit.Test public void rttswsnsggtwkgarfccr ( ) throws java.lang.Exception { org.junit.Assert . assertFalse ( org.openmrs.module.ModuleUtil . isOpenmrsVersionInVersions ( null ) ) ; } <s> @ org.junit.Test public void rttswsnsggtwkgarfccr ( ) throws java.lang.Exception { org.junit.Assert . assertFalse ( org.openmrs.module.ModuleUtil . isOpenmrsVersionInVersions ( null ) ) ; } <s> Potential programming problems fixed
fix_before_refactoring: @ org.junit.Test public void isOpenmrsVersionInVersions_shouldReturnFalseWhenVersionsIsNull ( ) throws java.lang.Exception { org.junit.Assert . assertFalse ( org.openmrs.module.ModuleUtil . isOpenmrsVersionInVersions ( ( ( java.lang.String [] ) ( null ) ) ) ) ; }
fix_after_refactoring: @ org.junit.Test public void rttswsnsggtwkgarfccr ( ) throws java.lang.Exception { org.junit.Assert . assertFalse ( org.openmrs.module.ModuleUtil . isOpenmrsVersionInVersions ( ( ( java.lang.String [] ) ( null ) ) ) ) ; }
× fix_prediction_before: @ org.junit.Test public void isOpen void isOpenInVersionInFalseReturn_Versions ( ) throws java.lang.Exception { org.junit.Assert . assertFalse ( programming_shouldVersionInVersions ) ; }
× fix_prediction_after: @ org.junit.Test public void rtswt ( ) throws java.lang.Exception {}

line_index: 288
bug_before_refactoring: private static java.lang.String getAccessTokenForStore () { return org.wso2.carbon.apimgt.rest.integration.tests.ApiClient . getAccessToken ( "apim:subscribe apim:signup apim:workflow_approve" ) ; } <s> private static java.lang.String getAccessTokenForStore () { return org.wso2.carbon.apimgt.rest.integration.tests.ApiClient . getAccessToken ( "apim:subscribe apim:signup apim:workflow_approve" ) ; } <s> Fixed code errors shown in sonar
bug_after_refactoring: private static java.lang.String nuflrbqbyzxjgppaksid () { return org.wso2.carbon.apimgt.rest.integration.tests.ApiClient . getAccessToken ( "apim:subscribe apim:signup apim:workflow_approve" ) ; } <s> private static java.lang.String nuflrbqbyzxjgppaksid () { return org.wso2.carbon.apimgt.rest.integration.tests.ApiClient . getAccessToken ( "apim:subscribe apim:signup apim:workflow_approve" ) ; } <s> Fixed code errors shown in sonar
fix_before_refactoring: private java.lang.String getAccessTokenForStore () { return getAccessToken ( "apim:subscribe apim:signup apim:workflow_approve" ) ; }
fix_after_refactoring: private java.lang.String nuflrbqbyzxjgppaksid () { return getAccessToken ( "apim:subscribe apim:signup apim:workflow_approve" ) ; }
× fix_prediction_before: private static java.lang.String getAccessTokenStore () { return org.wso2.carbon.apapap.rest.tests.AccessTokenStore . getAccessTokenForAccessToken ( apim ) ; }
× fix_prediction_after: private static java.lang.String nuflpp () { return org.jso2.crbpp.rest.tests.AccessToken . getAccessToken () ; }

line_index: 289
bug_before_refactoring: @ java.lang.Override public long getSize ( ) throws java.io.IOException { return - 1 ; } <s> @ java.lang.Override public long getSize ( ) throws java.io.IOException { return - 1 ; } <s> Fixed a bug where seeking didn't work in offline mode
bug_after_refactoring: @ java.lang.Override public long icjwryijvhttuuknbkjz ( ) throws java.io.IOException { return - 1 ; } <s> @ java.lang.Override public long icjwryijvhttuuknbkjz ( ) throws java.io.IOException { return - 1 ; } <s> Fixed a bug where seeking didn't work in offline mode
fix_before_refactoring: @ java.lang.Override public long getSize ( ) throws java.io.IOException { return file . length () ; }
fix_after_refactoring: @ java.lang.Override public long icjwryijvhttuuknbkjz ( ) throws java.io.IOException { return file . length () ; }
× fix_prediction_before: @ java.lang.Override public long getSize ( ) throws java.io.IOException { return size ; }
× fix_prediction_after: @ java.lang.Override public long icjrywvuktu ( ) throws java.io.IOException { return - 1 ; }

line_index: 290
bug_before_refactoring: public void cmd_error ( java.lang.String errorMessage , boolean ignored ) { java.lang.System.err . println ( errorMessage ) ; } <s> public void cmd_error ( java.lang.String errorMessage , boolean ignored ) { java.lang.System.err . println ( errorMessage ) ; } <s> Fixed test files and the bugs they found
bug_after_refactoring: public void cvaxhvxjlrmjslzwmnyr ( java.lang.String errorMessage , boolean ignored ) { java.lang.System.err . println ( errorMessage ) ; } <s> public void cvaxhvxjlrmjslzwmnyr ( java.lang.String errorMessage , boolean ignored ) { java.lang.System.err . println ( errorMessage ) ; } <s> Fixed test files and the bugs they found
fix_before_refactoring: public void cmd_error ( java.lang.String errorMessage , boolean ignored ) { java.lang.System.out . println ( errorMessage ) ; }
fix_after_refactoring: public void cvaxhvxjlrmjslzwmnyr ( java.lang.String errorMessage , boolean ignored ) { java.lang.System.out . println ( errorMessage ) ; }
× fix_prediction_before: public void cmd_error ( java.lang.String errorMessage , boolean ignored ) { java.lang.System.err . println ( errorMessage ) ; }
× fix_prediction_after: public void cvaxhvxjlrmnyl ( java.lang.String errorMessage , boolean ignored ) { java.lang.System.err . println ( errorMessage ) ; }

line_index: 291
bug_before_refactoring: public void spellCast ( int spellDamage , int speelDamageDuration ) { this . debuffDamage = spellDamage ; this . debuffDuration = speelDamageDuration ; } <s> public void spellCast ( int spellDamage , int speelDamageDuration ) { this . debuffDamage = spellDamage ; this . debuffDuration = speelDamageDuration ; } <s> Fixed spell damage issue
bug_after_refactoring: public void hqhmeeaxjeekjhitnoyz ( int spellDamage , int speelDamageDuration ) { this . debuffDamage = spellDamage ; this . debuffDuration = speelDamageDuration ; } <s> public void hqhmeeaxjeekjhitnoyz ( int spellDamage , int speelDamageDuration ) { this . debuffDamage = spellDamage ; this . debuffDuration = speelDamageDuration ; } <s> Fixed spell damage issue
fix_before_refactoring: public void spellCast ( int spellDamage , int speelDamageDuration ) { if ( ( ( this . debuffDamage ) < spellDamage ) || ( ( this . debuffDuration ) < speelDamageDuration ) ) { this . debuffDamage = spellDamage ; this . debuffDuration = speelDamageDuration ; } }
fix_after_refactoring: public void hqhmeeaxjeekjhitnoyz ( int spellDamage , int speelDamageDuration ) { if ( ( ( this . debuffDamage ) < spellDamage ) || ( ( this . debuffDuration ) < speelDamageDuration ) ) { this . debuffDamage = spellDamage ; this . debuffDuration = speelDamageDuration ; } }
× fix_prediction_before: public void spellCast ( int spellDamage , int spellDamage ) { this . spellDuration = spellDamage ; this . damageDamageDuration = spellDamageDamage ; }
× fix_prediction_after: public void hqhmeejaxnoeek ( int spellDamage , int debDamage ) { this . spellDuration = spellDamage ; }

line_index: 292
bug_before_refactoring: @ java.lang.Override public void run () { try { utility.ReadConfig reader = new utility.ReadConfig () ; new launcher.LauncherGUI ( true , reader . readPropertyBool ( ReadConfig.WIDGETS ) ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> @ java.lang.Override public void run () { try { utility.ReadConfig reader = new utility.ReadConfig () ; new launcher.LauncherGUI ( true , reader . readPropertyBool ( ReadConfig.WIDGETS ) ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> Fixed issue with the widget menu throwing an error.  LauncherMenu is now accepting a "ReadConfig" object to read the config file directly.
bug_after_refactoring: @ java.lang.Override public void slzpykwcnkvtapitnnyg () { try { utility.ReadConfig reader = new utility.ReadConfig () ; new launcher.LauncherGUI ( true , reader . readPropertyBool ( ReadConfig.WIDGETS ) ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> @ java.lang.Override public void slzpykwcnkvtapitnnyg () { try { utility.ReadConfig reader = new utility.ReadConfig () ; new launcher.LauncherGUI ( true , reader . readPropertyBool ( ReadConfig.WIDGETS ) ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> Fixed issue with the widget menu throwing an error.  LauncherMenu is now accepting a "ReadConfig" object to read the config file directly.
fix_before_refactoring: @ java.lang.Override public void run () { utility.ReadConfig reader = new utility.ReadConfig () ; new launcher.LauncherGUI ( true , reader . readPropertyBool ( ReadConfig.WIDGETS ) ) ; }
fix_after_refactoring: @ java.lang.Override public void slzpykwcnkvtapitnnyg () { utility.ReadConfig reader = new utility.ReadConfig () ; new launcher.LauncherGUI ( true , reader . readPropertyBool ( ReadConfig.WIDGETS ) ) ; }
× fix_prediction_before: @ java.lang.Override public void run () { try { utility.ConfigLauncher . newReadConfig () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } }
× fix_prediction_after: @ java.lang.Override public void slzkwpy.tappynn.ReadConfig () { if ( ( reader ) != null ) { utility.zygnn.ReadConfig . newReadConfig () ; reader . readProperty ( "GET" , true ) ; } else { e . printStackTrace () ; } }

line_index: 293
bug_before_refactoring: public com.ait.lienzo.client.core.shape.Picture onLoaded ( final com.ait.lienzo.client.core.image.PictureLoadedHandler handler ) { getImageProxy () . setImageShapeLoadedHandler ( new com.ait.lienzo.client.core.image.ImageShapeLoadedHandler < com.ait.lienzo.client.core.shape.Picture > () { @ java.lang.Override public void onImageShapeLoaded ( com.ait.lienzo.client.core.shape.Picture picture ) { handler . onPictureLoaded ( picture ) ; } } ) ; return this ; } <s> public com.ait.lienzo.client.core.shape.Picture onLoaded ( final com.ait.lienzo.client.core.image.PictureLoadedHandler handler ) { getImageProxy () . setImageShapeLoadedHandler ( new com.ait.lienzo.client.core.image.ImageShapeLoadedHandler < com.ait.lienzo.client.core.shape.Picture > () { @ java.lang.Override public void onImageShapeLoaded ( com.ait.lienzo.client.core.shape.Picture picture ) { handler . onPictureLoaded ( picture ) ; } } ) ; return this ; } <s> Picture shape bug fixing - Use of onload callbacks for picture's DOM element when using image data-resource URLs as well.
bug_after_refactoring: public com.ait.lienzo.client.core.shape.Picture desbzertxulpvoqlsaym ( final com.ait.lienzo.client.core.image.PictureLoadedHandler handler ) { getImageProxy () . setImageShapeLoadedHandler ( new com.ait.lienzo.client.core.image.ImageShapeLoadedHandler < com.ait.lienzo.client.core.shape.Picture > () { @ java.lang.Override public void uzsdticppgeyobgiexdr ( com.ait.lienzo.client.core.shape.Picture picture ) { handler . onPictureLoaded ( picture ) ; } } ) ; return this ; } <s> public com.ait.lienzo.client.core.shape.Picture desbzertxulpvoqlsaym ( final com.ait.lienzo.client.core.image.PictureLoadedHandler handler ) { getImageProxy () . setImageShapeLoadedHandler ( new com.ait.lienzo.client.core.image.ImageShapeLoadedHandler < com.ait.lienzo.client.core.shape.Picture > () { @ java.lang.Override public void uzsdticppgeyobgiexdr ( com.ait.lienzo.client.core.shape.Picture picture ) { handler . onPictureLoaded ( picture ) ; } } ) ; return this ; } <s> Picture shape bug fixing - Use of onload callbacks for picture's DOM element when using image data-resource URLs as well.
fix_before_refactoring: private void onLoaded ( final com.ait.lienzo.client.core.image.PictureLoadedHandler handler ) { getImageProxy () . setImageShapeLoadedHandler ( new com.ait.lienzo.client.core.image.ImageShapeLoadedHandler < com.ait.lienzo.client.core.shape.Picture > () { @ java.lang.Override public void onImageShapeLoaded ( com.ait.lienzo.client.core.shape.Picture picture ) { handler . onPictureLoaded ( picture ) ; } } ) ; }
fix_after_refactoring: private void desbzertxulpvoqlsaym ( final com.ait.lienzo.client.core.image.PictureLoadedHandler handler ) { getImageProxy () . setImageShapeLoadedHandler ( new com.ait.lienzo.client.core.image.ImageShapeLoadedHandler < com.ait.lienzo.client.core.shape.Picture > () { @ java.lang.Override public void uzsdticppgeyobgiexdr ( com.ait.lienzo.client.core.shape.Picture picture ) { handler . onPictureLoaded ( picture ) ; } } ) ; }
× fix_prediction_before: private void onPictureLoaded () { com.aitzoenzo.client.core.shape.PictureShapeHandler . onPictureLoaded ( this ) ; }
× fix_prediction_after: private com.aitzoenzo.client.core.shape.PictureertenqlPicture.Image getImage () { return this ; }

line_index: 294
bug_before_refactoring: public com.orientechnologies.orient.core.index.OIndex < ? > createIndex ( java.lang.String iName , com.orientechnologies.orient.core.metadata.schema.OClass.INDEX_TYPE iType , java.lang.String . . . fields ) ; <s> public com.orientechnologies.orient.core.index.OIndex < ? > createIndex ( java.lang.String iName , com.orientechnologies.orient.core.metadata.schema.OClass.INDEX_TYPE iType , java.lang.String . . . fields ) ; <s> Fixed issue #4273
bug_after_refactoring: public com.orientechnologies.orient.core.index.OIndex < ? > dlyjguqzdzkycmedzcva ( java.lang.String iName , com.orientechnologies.orient.core.metadata.schema.OClass.INDEX_TYPE iType , java.lang.String . . . fields ) ; <s> public com.orientechnologies.orient.core.index.OIndex < ? > dlyjguqzdzkycmedzcva ( java.lang.String iName , com.orientechnologies.orient.core.metadata.schema.OClass.INDEX_TYPE iType , java.lang.String . . . fields ) ; <s> Fixed issue #4273
fix_before_refactoring: com.orientechnologies.orient.core.index.OIndex < ? > createIndex ( java.lang.String iName , java.lang.String iType , java.lang.String . . . fields ) ;
fix_after_refactoring: com.orientechnologies.orient.core.index.OIndex < ? > dlyjguqzdzkycmedzcva ( java.lang.String iName , java.lang.String iType , java.lang.String . . . fields ) ;
× fix_prediction_before: com.orientechnologies.orient.core.index.OIndex < ? > iName ( java.lang.String iName , java.lang.String . . . fields ) ;
× fix_prediction_after: private com.orientechnologies.orient.core.index.OIndex < ? > dgud ( java.lang.String iName , java.lang.String iType ) { return com.orientechnologies.orient.core.metadata.Oindex . fields ( com.orientechnologies.orient.core.metadata.OType.INDEX_TYPE , iName ) ; }

line_index: 295
bug_before_refactoring: private boolean isSpeedForSureRiding ( float speedKmh ) { return speedKmh >= ( this . sureRidingSpeed ) ; } <s> private boolean isSpeedForSureRiding ( float speedKmh ) { return speedKmh >= ( this . sureRidingSpeed ) ; } <s> ffixed red bugs
bug_after_refactoring: private boolean sigwfhyfnbwfwstbdowa ( float speedKmh ) { return speedKmh >= ( this . sureRidingSpeed ) ; } <s> private boolean sigwfhyfnbwfwstbdowa ( float speedKmh ) { return speedKmh >= ( this . sureRidingSpeed ) ; } <s> ffixed red bugs
fix_before_refactoring: protected boolean isSpeedForSureRiding ( float speedKmh ) { return speedKmh >= ( this . sureRidingSpeed ) ; }
fix_after_refactoring: protected boolean sigwfhyfnbwfwstbdowa ( float speedKmh ) { return speedKmh >= ( this . sureRidingSpeed ) ; }
× fix_prediction_before: protected boolean isSpeedForSureRiding ( float speedKmh ) { return ( this . speedKmh ) >= speedKmh ; }
× fix_prediction_after: protected boolean ( int speedKmh ) { return ( this . speedKmh ) >= ( speedKmh - speedKmh ) ; }

line_index: 296
bug_before_refactoring: com.centric.centricexpress.models.EventDay findById ( java.lang.String id ) {} <s> com.centric.centricexpress.models.EventDay findById ( java.lang.String id ) {} <s> Fixed merge problems
bug_after_refactoring: com.centric.centricexpress.models.EventDay iuynyrxlvskpauhguttc ( java.lang.String id ) {} <s> com.centric.centricexpress.models.EventDay iuynyrxlvskpauhguttc ( java.lang.String id ) {} <s> Fixed merge problems
fix_before_refactoring: com.centric.centricexpress.models.EventDay findById ( java.lang.String id ) ;
fix_after_refactoring: com.centric.centricexpress.models.EventDay iuynyrxlvskpauhguttc ( java.lang.String id ) ;
× fix_prediction_before: com.centric.centricexpress.models.Event findById ( java.lang.String id ) ;
× fix_prediction_after: @ com.centric.centricexpress.models.Event int iynuyn ( java.lang.String id ) ;

line_index: 298
bug_before_refactoring: @ java.lang.Override public void setParameters ( org.wso2.carbon.gateway.core.config.ParameterHolder parameterHolder ) { logMessage = parameterHolder . getParameter ( "parameters" ) . getValue () ; } <s> @ java.lang.Override public void setParameters ( org.wso2.carbon.gateway.core.config.ParameterHolder parameterHolder ) { logMessage = parameterHolder . getParameter ( "parameters" ) . getValue () ; } <s> Fix errors due to change ParameterHolder API at gateway core.
bug_after_refactoring: @ java.lang.Override public void lojqeiyctsfwqczpmsxv ( org.wso2.carbon.gateway.core.config.ParameterHolder parameterHolder ) { logMessage = parameterHolder . getParameter ( "parameters" ) . getValue () ; } <s> @ java.lang.Override public void lojqeiyctsfwqczpmsxv ( org.wso2.carbon.gateway.core.config.ParameterHolder parameterHolder ) { logMessage = parameterHolder . getParameter ( "parameters" ) . getValue () ; } <s> Fix errors due to change ParameterHolder API at gateway core.
fix_before_refactoring: @ java.lang.Override public void setParameters ( org.wso2.carbon.gateway.core.config.ParameterHolder parameterHolder ) {}
fix_after_refactoring: @ java.lang.Override public void lojqeiyctsfwqczpmsxv ( org.wso2.carbon.gateway.core.config.ParameterHolder parameterHolder ) {}
× fix_prediction_before: @ java.lang.Override public void setParameters ( org.wso2.carbon.core.config.ParameterHolder parameterHolder ) {}
× fix_prediction_after: @ java.lang.Override public void loyecti ( org.wso2.carbon.sf.core.config.MessageHolder parameterHolder ) {}

line_index: 299
bug_before_refactoring: @ java.lang.Override public fr.damienraymond.servicejava.serverStatefull.rest.Session initier () { fr.damienraymond.servicejava.serverStatefull.rest.ImplemSession s = new fr.damienraymond.servicejava.serverStatefull.rest.ImplemSession () ; s . setNumero ( numeroSession ) ; ( numeroSession ) ++ ; executions . put ( s , Etat.UN ) ; return s ; } <s> @ java.lang.Override public fr.damienraymond.servicejava.serverStatefull.rest.Session initier () { fr.damienraymond.servicejava.serverStatefull.rest.ImplemSession s = new fr.damienraymond.servicejava.serverStatefull.rest.ImplemSession () ; s . setNumero ( numeroSession ) ; ( numeroSession ) ++ ; executions . put ( s , Etat.UN ) ; return s ; } <s> Fix concurrency problems
bug_after_refactoring: @ java.lang.Override public fr.damienraymond.servicejava.serverStatefull.rest.Session cryldahmgwajzklgzzfo () { fr.damienraymond.servicejava.serverStatefull.rest.ImplemSession s = new fr.damienraymond.servicejava.serverStatefull.rest.ImplemSession () ; s . setNumero ( numeroSession ) ; ( numeroSession ) ++ ; executions . put ( s , Etat.UN ) ; return s ; } <s> @ java.lang.Override public fr.damienraymond.servicejava.serverStatefull.rest.Session cryldahmgwajzklgzzfo () { fr.damienraymond.servicejava.serverStatefull.rest.ImplemSession s = new fr.damienraymond.servicejava.serverStatefull.rest.ImplemSession () ; s . setNumero ( numeroSession ) ; ( numeroSession ) ++ ; executions . put ( s , Etat.UN ) ; return s ; } <s> Fix concurrency problems
fix_before_refactoring: @ java.lang.Override public synchronized fr.damienraymond.servicejava.serverStatefull.rest.Session initier () { fr.damienraymond.servicejava.serverStatefull.rest.ImplemSession s = new fr.damienraymond.servicejava.serverStatefull.rest.ImplemSession () ; s . setNumero ( numeroSession ) ; ( numeroSession ) ++ ; executions . put ( s , Etat.UN ) ; return s ; }
fix_after_refactoring: @ java.lang.Override public synchronized fr.damienraymond.servicejava.serverStatefull.rest.Session cryldahmgwajzklgzzfo () { fr.damienraymond.servicejava.serverStatefull.rest.ImplemSession s = new fr.damienraymond.servicejava.serverStatefull.rest.ImplemSession () ; s . setNumero ( numeroSession ) ; ( numeroSession ) ++ ; executions . put ( s , Etat.UN ) ; return s ; }
× fix_prediction_before: @ java.lang.Override public fr.damray.mondfull.service.rest.SessionState init () { fr.damray.mondfull.service.rest.ImeroSession seroSession = new fr.damray.mondfull.service.rest.ImeroSession () ; numImeroSession . put ( fr.damray.mondfull.service.rest.ImeroSession.SessionState.UNUNUN ) ; return seroSession ; }
× fix_prediction_after: @ java.lang.Override public fr.dienray.mondfull.service.rest.SessionState cero () { fr.dienray.mondfull.service.rest.ImeroSession seroSession = new fr.dienray.mondfull.service.rest.ImeroSession () ; numImm . put ( sraypleSession , numImm ) ; ( seroSession ) ; return s ; }

line_index: 300
bug_before_refactoring: V [] values ( java.lang.Class < V > clazz ) ; <s> V [] values ( java.lang.Class < V > clazz ) ; <s> Backport the IntObjectHashMap changes in f23f3b9617b01095416334060ca8379316946e5c  Motivation:  The mentioned commit contains a bug fix and an improvement in IntObjectHashMap that requires backporting.  Modifications:  Update IntObjectMap  IntObjectHashMap  and IntObjectHashMapTest  Result:  Easier to backport HTTP/2 and other changes in master in the future
bug_after_refactoring: V [] asllkrkumgoklkdgacnj ( java.lang.Class < V > clazz ) ; <s> V [] asllkrkumgoklkdgacnj ( java.lang.Class < V > clazz ) ; <s> Backport the IntObjectHashMap changes in f23f3b9617b01095416334060ca8379316946e5c  Motivation:  The mentioned commit contains a bug fix and an improvement in IntObjectHashMap that requires backporting.  Modifications:  Update IntObjectMap  IntObjectHashMap  and IntObjectHashMapTest  Result:  Easier to backport HTTP/2 and other changes in master in the future
fix_before_refactoring: java.util.Collection < V > values ( ) ;
fix_after_refactoring: java.util.Collection < V > asllkrkumgoklkdgacnj ( ) ;
× fix_prediction_before: V [] values ( ) ;
× fix_prediction_after: V [] asllkrkjoklkacnacjjjjay ( ) ;

line_index: 302
bug_before_refactoring: public com.tinkerpop.blueprints.Vertex existNode ( java.lang.String pkValue , java.lang.Object pkName ) { return existNode ( "V" , pkValue , pkName ) ; } <s> public com.tinkerpop.blueprints.Vertex existNode ( java.lang.String pkValue , java.lang.Object pkName ) { return existNode ( "V" , pkValue , pkName ) ; } <s> Bugfix on existNode for DB class
bug_after_refactoring: public com.tinkerpop.blueprints.Vertex bfdpvylbfepsjkeezjqf ( java.lang.String pkValue , java.lang.Object pkName ) { return bfdpvylbfepsjkeezjqf ( "V" , pkValue , pkName ) ; } <s> public com.tinkerpop.blueprints.Vertex bfdpvylbfepsjkeezjqf ( java.lang.String pkValue , java.lang.Object pkName ) { return bfdpvylbfepsjkeezjqf ( "V" , pkValue , pkName ) ; } <s> Bugfix on existNode for DB class
fix_before_refactoring: public com.tinkerpop.blueprints.Vertex existNode ( java.lang.String key , java.lang.Object value ) { return existNode ( "V" , key , value ) ; }
fix_after_refactoring: public com.tinkerpop.blueprints.Vertex bfdpvylbfepsjkeezjqf ( java.lang.String key , java.lang.Object value ) { return bfdpvylbfepsjkeezjqf ( "V" , key , value ) ; }
× fix_prediction_before: public com.tinkerpop.blueprints.Vertex existVertex ( java.lang.String pkName , java.lang.Object pk ) { return exist ( "Name" , pkName , pk ) ; }
× fix_prediction_after: @ java.lang.Override public com.tylpop.blueprints.Vertex bfdVertex ( java.lang.String pkName , java.lang.Object pkValue ) { return bylVyl ( "name" , pkName , pkValue ) ; }

line_index: 303
bug_before_refactoring: public static void bindPropertiesFromRequest ( javax.servlet.http.HttpServletRequest request , jetbrains.buildServer.controllers.BasePropertiesBean bean ) { jetbrains.buildServer.clouds.google.utils.PluginPropertiesUtil . bindPropertiesFromRequest ( request , bean , false ) ; } <s> public static void bindPropertiesFromRequest ( javax.servlet.http.HttpServletRequest request , jetbrains.buildServer.controllers.BasePropertiesBean bean ) { jetbrains.buildServer.clouds.google.utils.PluginPropertiesUtil . bindPropertiesFromRequest ( request , bean , false ) ; } <s> Fix issue with concurrent access to the request parameters
bug_after_refactoring: public static void ooclftwzkdvgxsoufchp ( javax.servlet.http.HttpServletRequest request , jetbrains.buildServer.controllers.BasePropertiesBean bean ) { jetbrains.buildServer.clouds.google.utils.PluginPropertiesUtil . ooclftwzkdvgxsoufchp ( request , bean , false ) ; } <s> public static void ooclftwzkdvgxsoufchp ( javax.servlet.http.HttpServletRequest request , jetbrains.buildServer.controllers.BasePropertiesBean bean ) { jetbrains.buildServer.clouds.google.utils.PluginPropertiesUtil . ooclftwzkdvgxsoufchp ( request , bean , false ) ; } <s> Fix issue with concurrent access to the request parameters
fix_before_refactoring: public static void bindPropertiesFromRequest ( java.util.Map < java.lang.String , java.lang.String > parameters , jetbrains.buildServer.controllers.BasePropertiesBean bean ) { jetbrains.buildServer.clouds.google.utils.PluginPropertiesUtil . bindPropertiesFromRequest ( parameters , bean , false ) ; }
fix_after_refactoring: public static void ooclftwzkdvgxsoufchp ( java.util.Map < java.lang.String , java.lang.String > parameters , jetbrains.buildServer.controllers.BasePropertiesBean bean ) { jetbrains.buildServer.clouds.google.utils.PluginPropertiesUtil . ooclftwzkdvgxsoufchp ( parameters , bean , false ) ; }
× fix_prediction_before: public static void bindPropertiesFromRequest ( javax.servlet.http.HttpServletRequest request , jetbrains.build.buildServer.controllers.RequestBean beanProperties ) { beanProperties . bindFromRequest ( request , false , beanProperties ) ; }
× fix_prediction_after: public static void ooclftwftd ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletProperties bean ) { joclwetbrains.xszk.utils.ServerUtil . requestRequest ( request , false , bean ) ; }

line_index: 304
bug_before_refactoring: public void stopMainService ( android.view.View view ) { android.content.Intent intent = new android.content.Intent ( this , www.app.remindme.com.remindme.MainServices . class ) ; stopService ( intent ) ; } <s> public void stopMainService ( android.view.View view ) { android.content.Intent intent = new android.content.Intent ( this , www.app.remindme.com.remindme.MainServices . class ) ; stopService ( intent ) ; } <s> Errors solved for crashing DB load
bug_after_refactoring: public void ulseximgtpumgdopcvsh ( android.view.View view ) { android.content.Intent intent = new android.content.Intent ( this , www.app.remindme.com.remindme.MainServices . class ) ; stopService ( intent ) ; } <s> public void ulseximgtpumgdopcvsh ( android.view.View view ) { android.content.Intent intent = new android.content.Intent ( this , www.app.remindme.com.remindme.MainServices . class ) ; stopService ( intent ) ; } <s> Errors solved for crashing DB load
fix_before_refactoring: public void stopMainService () { android.content.Intent intent = new android.content.Intent ( this , www.app.remindme.com.remindme.MainServices . class ) ; stopService ( intent ) ; }
fix_after_refactoring: public void ulseximgtpumgdopcvsh () { android.content.Intent intent = new android.content.Intent ( this , www.app.remindme.com.remindme.MainServices . class ) ; stopService ( intent ) ; }
× fix_prediction_before: public void stopMainService ( android.view.View view ) { stopMain ( intent ) ; }
× fix_prediction_after: public void stopseximgme.cvopum.cvind.com.cvindme.Main ( android.view.View view ) { android.content.Intent intent = new android.content.Intent ( this , DBme.cvopum.com.cvopindme.Main . class ) ; stopServices ( intent ) ; }

line_index: 305
bug_before_refactoring: protected double getValue () { return mValue ; } <s> protected double getValue () { return mValue ; } <s> Fixed problems with Satoshi: not updating properly  JSON errors  and update time
bug_after_refactoring: protected double yynkwebevvxvivugzjra () { return mValue ; } <s> protected double yynkwebevvxvivugzjra () { return mValue ; } <s> Fixed problems with Satoshi: not updating properly  JSON errors  and update time
fix_before_refactoring: public double getValue () { return mValue ; }
fix_after_refactoring: public double yynkwebevvxvivugzjra () { return mValue ; }
× fix_prediction_before: public double getValue () { return time ; }
× fix_prediction_after: protected double yynkwebvwebvugra () { return 0 ; }

line_index: 306
bug_before_refactoring: public void askPlayAgain ( io.zipcoder.zealotscasino.Player player ) { java.lang.String choice = io.zipcoder.zealotscasino.UserInput . getStringInput ( "Would you like to play again? (Push 'Y' to play again, 'Any other key' to quit war)" ) ; if ( choice . equalsIgnoreCase ( "Y" ) ) play ( player ) ; else io.zipcoder.zealotscasino.UserInput . display ( "Thanks for playing!\n\n" ) ; } <s> public void askPlayAgain ( io.zipcoder.zealotscasino.Player player ) { java.lang.String choice = io.zipcoder.zealotscasino.UserInput . getStringInput ( "Would you like to play again? (Push 'Y' to play again, 'Any other key' to quit war)" ) ; if ( choice . equalsIgnoreCase ( "Y" ) ) play ( player ) ; else io.zipcoder.zealotscasino.UserInput . display ( "Thanks for playing!\n\n" ) ; } <s> Fixed bug about being broke
bug_after_refactoring: public void souyhrakvlphbkxorxop ( io.zipcoder.zealotscasino.Player player ) { java.lang.String choice = io.zipcoder.zealotscasino.UserInput . getStringInput ( "Would you like to play again? (Push 'Y' to play again, 'Any other key' to quit war)" ) ; if ( choice . equalsIgnoreCase ( "Y" ) ) play ( player ) ; else io.zipcoder.zealotscasino.UserInput . display ( "Thanks for playing!\n\n" ) ; } <s> public void souyhrakvlphbkxorxop ( io.zipcoder.zealotscasino.Player player ) { java.lang.String choice = io.zipcoder.zealotscasino.UserInput . getStringInput ( "Would you like to play again? (Push 'Y' to play again, 'Any other key' to quit war)" ) ; if ( choice . equalsIgnoreCase ( "Y" ) ) play ( player ) ; else io.zipcoder.zealotscasino.UserInput . display ( "Thanks for playing!\n\n" ) ; } <s> Fixed bug about being broke
fix_before_refactoring: protected void askPlayAgain ( io.zipcoder.zealotscasino.Player player ) { java.lang.String choice = io.zipcoder.zealotscasino.UserInput . getStringInput ( "Would you like to play again? (Push 'Y' to play again, 'Any other key' to quit war)" ) ; if ( choice . equalsIgnoreCase ( "Y" ) ) play ( player ) ; else io.zipcoder.zealotscasino.UserInput . display ( "Thanks for playing!\n\n" ) ; }
fix_after_refactoring: protected void souyhrakvlphbkxorxop ( io.zipcoder.zealotscasino.Player player ) { java.lang.String choice = io.zipcoder.zealotscasino.UserInput . getStringInput ( "Would you like to play again? (Push 'Y' to play again, 'Any other key' to quit war)" ) ; if ( choice . equalsIgnoreCase ( "Y" ) ) play ( player ) ; else io.zipcoder.zealotscasino.UserInput . display ( "Thanks for playing!\n\n" ) ; }
× fix_prediction_before: private void askPlayAgainze ( io.zipcoder.zealotscasino.Player player ) {}
× fix_prediction_after: public void souyhrakalasino ( io.zipcoder.zeopotscasino.Player player ) { java.lang.String choice = playInput ( "Y to quit again to quit again" ) ; if ( choice . equalsIgnoreCase ( " " ) ) playInput ( choice ) ; else playYInput ( player ) ; }

line_index: 307
bug_before_refactoring: @ java.lang.Override public T load ( java.lang.Long id ) { T bo = this . boFacade . getEntityManager () . find ( this . boType , id ) ; if ( bo != null ) { bo . setBoFacade ( this . boFacade ) ; } return bo ; } <s> @ java.lang.Override public T load ( java.lang.Long id ) { T bo = this . boFacade . getEntityManager () . find ( this . boType , id ) ; if ( bo != null ) { bo . setBoFacade ( this . boFacade ) ; } return bo ; } <s> Fixed bo load issues
bug_after_refactoring: @ java.lang.Override public T quvvrjvhqldfyomzgqba ( java.lang.Long id ) { T bo = this . boFacade . getEntityManager () . find ( this . boType , id ) ; if ( bo != null ) { bo . setBoFacade ( this . boFacade ) ; } return bo ; } <s> @ java.lang.Override public T quvvrjvhqldfyomzgqba ( java.lang.Long id ) { T bo = this . boFacade . getEntityManager () . find ( this . boType , id ) ; if ( bo != null ) { bo . setBoFacade ( this . boFacade ) ; } return bo ; } <s> Fixed bo load issues
fix_before_refactoring: @ java.lang.Override public T load ( java.lang.Long id ) { return this . boFacade . getEntityManager () . find ( this . boType , id ) ; }
fix_after_refactoring: @ java.lang.Override public T quvvrjvhqldfyomzgqba ( java.lang.Long id ) { return this . boFacade . getEntityManager () . find ( this . boType , id ) ; }
× fix_prediction_before: @ java.lang.Override public T load ( java.lang.Long id ) { T bo = this . boFacade . find ( id ) ; if ( bo != null ) { bo . set ( this . bo . getEntityType () , id ) ; } return bo ; }
× fix_prediction_after: @ java.lang.Override @ org.jetbrains.annotations.Nullable public T quvrvqjomq ( java.lang.Long id ) { boomq.gldom.Facade bo = this . bovrFacade . find ( id ) ; if ( bo != null ) { bo . set ( this . bo . getEntityType () , id ) ; } return bo ; }

line_index: 308
bug_before_refactoring: public void onFragmentInvisible () { if ( ! ( this . fragmentVisible ) ) { return; } this . fragmentVisible = false ; if ( ( this . adapter ) != null ) { this . adapter . onPause () ; } } <s> public void onFragmentInvisible () { if ( ! ( this . fragmentVisible ) ) { return; } this . fragmentVisible = false ; if ( ( this . adapter ) != null ) { this . adapter . onPause () ; } } <s> Fix bug nearby screen infinite loading screen on 1st app launch (no last tab).
bug_after_refactoring: public void epfnwasgtovbnuwmjxyp () { if ( ! ( this . fragmentVisible ) ) { return; } this . fragmentVisible = false ; if ( ( this . adapter ) != null ) { this . adapter . onPause () ; } } <s> public void epfnwasgtovbnuwmjxyp () { if ( ! ( this . fragmentVisible ) ) { return; } this . fragmentVisible = false ; if ( ( this . adapter ) != null ) { this . adapter . onPause () ; } } <s> Fix bug nearby screen infinite loading screen on 1st app launch (no last tab).
fix_before_refactoring: private void onFragmentInvisible () { if ( ! ( this . fragmentVisible ) ) { return; } this . fragmentVisible = false ; if ( ( this . adapter ) != null ) { this . adapter . onPause () ; } }
fix_after_refactoring: private void epfnwasgtovbnuwmjxyp () { if ( ! ( this . fragmentVisible ) ) { return; } this . fragmentVisible = false ; if ( ( this . adapter ) != null ) { this . adapter . onPause () ; } }
× fix_prediction_before: public void onFragmentInvisible () { if ( ! ( this . fragmentVisible ) ) { this . fragmentVisible = false ; } if ( ( this . lastVisible ) != null ) { this . adapter . onVisible ( this . lastVisible ) ; } }
× fix_prediction_after: public void epfnwasgtojto () { if ( ! ( this . fragmentVisible ) ) { this . fragmentVisible = false ; } if ( ( this . adapter ) != null ) { this . adapter . onPause () ; } }

line_index: 309
bug_before_refactoring: @ java.lang.Override public org.dbflute.erflute.editor.model.diagram_contents.element.node.table.properties.TableViewProperties getTableViewProperties () { this . tableViewProperties = org.dbflute.erflute.db.DBManagerFactory . getDBManager ( this . getDiagram () ) . createTableProperties ( ( ( org.dbflute.erflute.editor.model.diagram_contents.element.node.table.properties.TableProperties ) ( this . tableViewProperties ) ) ) ; return this . tableViewProperties ; } <s> @ java.lang.Override public org.dbflute.erflute.editor.model.diagram_contents.element.node.table.properties.TableViewProperties getTableViewProperties () { this . tableViewProperties = org.dbflute.erflute.db.DBManagerFactory . getDBManager ( this . getDiagram () ) . createTableProperties ( ( ( org.dbflute.erflute.editor.model.diagram_contents.element.node.table.properties.TableProperties ) ( this . tableViewProperties ) ) ) ; return this . tableViewProperties ; } <s> Fixed a problem that can not create self-association in virtual diagram.
bug_after_refactoring: @ java.lang.Override public org.dbflute.erflute.editor.model.diagram_contents.element.node.table.properties.TableViewProperties iaxqfebpruibpqqatgyw () { this . tableViewProperties = org.dbflute.erflute.db.DBManagerFactory . getDBManager ( this . getDiagram () ) . createTableProperties ( ( ( org.dbflute.erflute.editor.model.diagram_contents.element.node.table.properties.TableProperties ) ( this . tableViewProperties ) ) ) ; return this . tableViewProperties ; } <s> @ java.lang.Override public org.dbflute.erflute.editor.model.diagram_contents.element.node.table.properties.TableViewProperties iaxqfebpruibpqqatgyw () { this . tableViewProperties = org.dbflute.erflute.db.DBManagerFactory . getDBManager ( this . getDiagram () ) . createTableProperties ( ( ( org.dbflute.erflute.editor.model.diagram_contents.element.node.table.properties.TableProperties ) ( this . tableViewProperties ) ) ) ; return this . tableViewProperties ; } <s> Fixed a problem that can not create self-association in virtual diagram.
fix_before_refactoring: @ java.lang.Override public org.dbflute.erflute.editor.model.diagram_contents.element.node.table.properties.TableViewProperties getTableViewProperties () { this . tableViewProperties = org.dbflute.erflute.db.DBManagerFactory . getDBManager ( getDiagram () ) . createTableProperties ( ( ( org.dbflute.erflute.editor.model.diagram_contents.element.node.table.properties.TableProperties ) ( tableViewProperties ) ) ) ; return tableViewProperties ; }
fix_after_refactoring: @ java.lang.Override public org.dbflute.erflute.editor.model.diagram_contents.element.node.table.properties.TableViewProperties iaxqfebpruibpqqatgyw () { this . tableViewProperties = org.dbflute.erflute.db.DBManagerFactory . getDBManager ( getDiagram () ) . createTableProperties ( ( ( org.dbflute.erflute.editor.model.diagram_contents.element.node.table.properties.TableProperties ) ( tableViewProperties ) ) ) ; return tableViewProperties ; }
× fix_prediction_before: @ java.lang.Override public org.dbflute.erflute.editor.model.diagram_contents.element.node.table.properties.properties.TableView getDiagramProperties ( org.dbflute.erflute.editor.model.diagram_contents.element.node.properties.properties.TableView tableViewProperties ) { final org.dbflute.erflute.editor.model.diagram_contents.element.node.properties.ManagerFactory tableViewProperties = tableViewProperties . getDiagramProperties ( this . getDiagramProperties () ) . createTableViewProperties ( tableViewProperties ) ; return tableViewProperties ; }
× fix_prediction_after: @ java.lang.Override public org.dbflute.erflute.editor.model.diagram_contents.element.node.properties.properties.properties.TableView getDiagramProperties ( org.dbflute.erfler.editor.model.diagram_contents.element.node.properties.properties.TableView tableViewProperties ) { final org.dbflute.erfler.editor.model.diagram_contents.diagram_contents.element.node.properties.ManagerFactoryTableProperties tableViewProperties = tableViewProperties . getDiagramProperties ( this . getDiagramProperties () ) ; tableViewProperties . createTable ( tableViewProperties ) ; return tableViewProperties ; }

line_index: 310
bug_before_refactoring: public static int calculateUncompressedSize ( byte [] data , int ptr , int length ) throws java.io.IOException { return com.ning.compress.lzf.ChunkDecoder . calculateUncompressedSize ( data , ptr , length ) ; } <s> public static int calculateUncompressedSize ( byte [] data , int ptr , int length ) throws java.io.IOException { return com.ning.compress.lzf.ChunkDecoder . calculateUncompressedSize ( data , ptr , length ) ; } <s> Fix issue #15: LZFDecoder wrapper not passing offset  length arguments
bug_after_refactoring: public static int dphkyflqsmrkzyicfkdm ( byte [] data , int ptr , int length ) throws java.io.IOException { return com.ning.compress.lzf.ChunkDecoder . dphkyflqsmrkzyicfkdm ( data , ptr , length ) ; } <s> public static int dphkyflqsmrkzyicfkdm ( byte [] data , int ptr , int length ) throws java.io.IOException { return com.ning.compress.lzf.ChunkDecoder . dphkyflqsmrkzyicfkdm ( data , ptr , length ) ; } <s> Fix issue #15: LZFDecoder wrapper not passing offset  length arguments
fix_before_refactoring: public static int calculateUncompressedSize ( byte [] data , int offset , int length ) throws java.io.IOException { return com.ning.compress.lzf.ChunkDecoder . calculateUncompressedSize ( data , length , length ) ; }
fix_after_refactoring: public static int dphkyflqsmrkzyicfkdm ( byte [] data , int offset , int length ) throws java.io.IOException { return com.ning.compress.lzf.ChunkDecoder . dphkyflqsmrkzyicfkdm ( data , length , length ) ; }
× fix_prediction_before: public static int calculateUn dateSize ( byte [] data , int offset , int length ) throws java.io.IOException { return com.ning.compress.lzf.ChunkDecoder . calculateUnactionSize ( data , offset , length ) ; }
× fix_prediction_after: public static int dphkysmq ( byte [] data , int offset , int length ) throws java.io.IOException { return com.flqky.kiczyl.phic.ZDecoder . d ( data , offset , length ) ; }

line_index: 311
bug_before_refactoring: java.lang.String nextUrl () { java.lang.String nextUrl ; do { nextUrl = this . pagesToVisit . remove ( 0 ) ; } while ( this . pagesVisited . contains ( nextUrl ) ) ; this . pagesVisited . add ( nextUrl ) ; return nextUrl ; } <s> java.lang.String nextUrl () { java.lang.String nextUrl ; do { nextUrl = this . pagesToVisit . remove ( 0 ) ; } while ( this . pagesVisited . contains ( nextUrl ) ) ; this . pagesVisited . add ( nextUrl ) ; return nextUrl ; } <s> Crawl error fixed
bug_after_refactoring: java.lang.String mdzauhmiscdfarfndxkp () { java.lang.String mdzauhmiscdfarfndxkp ; do { mdzauhmiscdfarfndxkp = this . pagesToVisit . remove ( 0 ) ; } while ( this . pagesVisited . contains ( mdzauhmiscdfarfndxkp ) ) ; this . pagesVisited . add ( mdzauhmiscdfarfndxkp ) ; return mdzauhmiscdfarfndxkp ; } <s> java.lang.String mdzauhmiscdfarfndxkp () { java.lang.String mdzauhmiscdfarfndxkp ; do { mdzauhmiscdfarfndxkp = this . pagesToVisit . remove ( 0 ) ; } while ( this . pagesVisited . contains ( mdzauhmiscdfarfndxkp ) ) ; this . pagesVisited . add ( mdzauhmiscdfarfndxkp ) ; return mdzauhmiscdfarfndxkp ; } <s> Crawl error fixed
fix_before_refactoring: java.lang.String nextUrl () { java.lang.String nextUrl ; do { nextUrl = pagesToVisit . remove ( 0 ) ; } while ( pagesVisited . contains ( nextUrl ) ) ; pagesVisited . add ( nextUrl ) ; return nextUrl ; }
fix_after_refactoring: java.lang.String mdzauhmiscdfarfndxkp () { java.lang.String mdzauhmiscdfarfndxkp ; do { mdzauhmiscdfarfndxkp = pagesToVisit . remove ( 0 ) ; } while ( pagesVisited . contains ( mdzauhmiscdfarfndxkp ) ) ; pagesVisited . add ( mdzauhmiscdfarfndxkp ) ; return mdzauhmiscdfarfndxkp ; }
× fix_prediction_before: private java.lang.String nextUrl () { synchronized ( this ) { java.lang.String nextUrl = this . nextUrlToVisited . remove ( 0 ) ; this . nextUrl . add ( nextUrl ) ; return nextUrl ; } }
× fix_prediction_after: @ java.lang.Override java.lang.String mdzhaukhdfarxnd () { if ( ( this . mddf ) != null ) { java.lang.String md = this . mdkhdfkhdf . remove ( mddf ) ; this . mdkhpmisc . add ( mdxp ) ; } return md ; }

line_index: 312
bug_before_refactoring: public void seekToPosition ( int i ) { if ( i > 10000 ) { this . player . seekToPosition ( i ) ; } else { android.util.Log . d ( saiboten.no.synclistener.musicservice.SpotifyPlayerWrapper.TAG , ( ( "Position " + i ) + " is less than three seconds. Let's just skip the seek. Probably a new track" ) ) ; } } <s> public void seekToPosition ( int i ) { if ( i > 10000 ) { this . player . seekToPosition ( i ) ; } else { android.util.Log . d ( saiboten.no.synclistener.musicservice.SpotifyPlayerWrapper.TAG , ( ( "Position " + i ) + " is less than three seconds. Let's just skip the seek. Probably a new track" ) ) ; } } <s> Fixing notification and some other small issues
bug_after_refactoring: public void nvmftlehrguxdafpvgtu ( int i ) { if ( i > 10000 ) { this . player . nvmftlehrguxdafpvgtu ( i ) ; } else { android.util.Log . d ( saiboten.no.synclistener.musicservice.SpotifyPlayerWrapper.TAG , ( ( "Position " + i ) + " is less than three seconds. Let's just skip the seek. Probably a new track" ) ) ; } } <s> public void nvmftlehrguxdafpvgtu ( int i ) { if ( i > 10000 ) { this . player . nvmftlehrguxdafpvgtu ( i ) ; } else { android.util.Log . d ( saiboten.no.synclistener.musicservice.SpotifyPlayerWrapper.TAG , ( ( "Position " + i ) + " is less than three seconds. Let's just skip the seek. Probably a new track" ) ) ; } } <s> Fixing notification and some other small issues
fix_before_refactoring: public void seekToPosition ( int i ) { this . player . seekToPosition ( i ) ; }
fix_after_refactoring: public void nvmftlehrguxdafpvgtu ( int i ) { this . player . nvmftlehrguxdafpvgtu ( i ) ; }
× fix_prediction_before: public void seekToPosition ( int i ) { this . seekToPosition ( i ) ; }
× fix_prediction_after: public void nvmftle ( int i ) { if ( ( this . player ) > 10000 ) { this . trackPlayer ( i ) ; } else { android.util.Log . i ( "Player" , ( "nof " + i ) ) ; } }

line_index: 314
bug_before_refactoring: @ java.lang.Override public java.lang.String toString () { return original_title ; } <s> @ java.lang.Override public java.lang.String toString () { return original_title ; } <s> - New Design for List Implementation (Bind Movie Lists to GUI Lists) - Bugfixing
bug_after_refactoring: @ java.lang.Override public java.lang.String tczfyftfuqtvxtfehaly () { return original_title ; } <s> @ java.lang.Override public java.lang.String tczfyftfuqtvxtfehaly () { return original_title ; } <s> - New Design for List Implementation (Bind Movie Lists to GUI Lists) - Bugfixing
fix_before_refactoring: @ java.lang.Override public java.lang.String toString () { return title ; }
fix_after_refactoring: @ java.lang.Override public java.lang.String tczfyftfuqtvxtfehaly () { return title ; }
× fix_prediction_before: @ java.lang.Override public java.lang.String toString () { return original_title ; }
× fix_prediction_after: @ java.lang.Override public java.lang.String tczfftvft () { return original_title ; }

line_index: 315
bug_before_refactoring: @ org.junit.Test public void testGetUniqueId () { org.junit.Assert . assertNotNull ( com.google.gcloud.dns.testing.LocalDnsHelper . getUniqueId ( com.google.common.collect.Lists . < com.google.gcloud.dns.testing.LocalDnsHelper.RrsetWrapper > newLinkedList () ) ) ; } <s> @ org.junit.Test public void testGetUniqueId () { org.junit.Assert . assertNotNull ( com.google.gcloud.dns.testing.LocalDnsHelper . getUniqueId ( com.google.common.collect.Lists . < com.google.gcloud.dns.testing.LocalDnsHelper.RrsetWrapper > newLinkedList () ) ) ; } <s> Removed RrsetWapper and used tailMap in listing.  Also fixed some codacy issues and added @VisibleForTesting annotations.
bug_after_refactoring: @ org.junit.Test public void bgkjukglygjieqafcipm () { org.junit.Assert . assertNotNull ( com.google.gcloud.dns.testing.LocalDnsHelper . getUniqueId ( com.google.common.collect.Lists . < com.google.gcloud.dns.testing.LocalDnsHelper.RrsetWrapper > newLinkedList () ) ) ; } <s> @ org.junit.Test public void bgkjukglygjieqafcipm () { org.junit.Assert . assertNotNull ( com.google.gcloud.dns.testing.LocalDnsHelper . getUniqueId ( com.google.common.collect.Lists . < com.google.gcloud.dns.testing.LocalDnsHelper.RrsetWrapper > newLinkedList () ) ) ; } <s> Removed RrsetWapper and used tailMap in listing.  Also fixed some codacy issues and added @VisibleForTesting annotations.
fix_before_refactoring: @ org.junit.Test public void testGetUniqueId () { org.junit.Assert . assertNotNull ( com.google.gcloud.dns.testing.LocalDnsHelper . getUniqueId ( new java.util.HashSet < java.lang.String > () ) ) ; }
fix_after_refactoring: @ org.junit.Test public void bgkjukglygjieqafcipm () { org.junit.Assert . assertNotNull ( com.google.gcloud.dns.testing.LocalDnsHelper . getUniqueId ( new java.util.HashSet < java.lang.String > () ) ) ; }
× fix_prediction_before: @ org.junit.Test public void testGetUniqueId () {}
× fix_prediction_after: @ org.junit.Test public void bgjukgie () { org.junit.Assert . assertNotNull ( com.google.common.collect.Lists . getUniqueId () ) ; }

line_index: 316
bug_before_refactoring: public void put ( java.lang.String key , double value ) { put ( key , formatter . formatDouble ( value ) ) ; } <s> public void put ( java.lang.String key , double value ) { put ( key , formatter . formatDouble ( value ) ) ; } <s> Wrote tests for decimal formatter  discovered a bug and fixed that
bug_after_refactoring: public void nckatnpbfrwvmmacvmab ( java.lang.String key , double value ) { nckatnpbfrwvmmacvmab ( key , formatter . formatDouble ( value ) ) ; } <s> public void nckatnpbfrwvmmacvmab ( java.lang.String key , double value ) { nckatnpbfrwvmmacvmab ( key , formatter . formatDouble ( value ) ) ; } <s> Wrote tests for decimal formatter  discovered a bug and fixed that
fix_before_refactoring: public void put ( java.lang.String key , double value ) { put ( key , formatter . format ( value ) ) ; }
fix_after_refactoring: public void nckatnpbfrwvmmacvmab ( java.lang.String key , double value ) { nckatnpbfrwvmmacvmab ( key , formatter . format ( value ) ) ; }
× fix_prediction_before: public void put ( java.lang.String key , double formatter ) { put ( key , formatter . format ( value ) ) ; }
× fix_prediction_after: public void nckatbnpvm.babvmmacvm.vm ( java.lang.String key , double value ) { formatter . format ( key , formatter . format ( value ) ) ; }

line_index: 317
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { android.content.Intent Carnetintent = new android.content.Intent ( this , fr.diabhelp.diabhelp.Core.CoreActivity . class ) ; this . startActivity ( Carnetintent ) ; this . finish () ; } <s> @ java.lang.Override public void onClick ( android.view.View v ) { android.content.Intent Carnetintent = new android.content.Intent ( this , fr.diabhelp.diabhelp.Core.CoreActivity . class ) ; this . startActivity ( Carnetintent ) ; this . finish () ; } <s> fix bug lifecycle profil  fix design profil
bug_after_refactoring: @ java.lang.Override public void qaoazbapvubshwmqqntf ( android.view.View v ) { android.content.Intent Carnetintent = new android.content.Intent ( this , fr.diabhelp.diabhelp.Core.CoreActivity . class ) ; this . startActivity ( Carnetintent ) ; this . finish () ; } <s> @ java.lang.Override public void qaoazbapvubshwmqqntf ( android.view.View v ) { android.content.Intent Carnetintent = new android.content.Intent ( this , fr.diabhelp.diabhelp.Core.CoreActivity . class ) ; this . startActivity ( Carnetintent ) ; this . finish () ; } <s> fix bug lifecycle profil  fix design profil
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { this . finish () ; }
fix_after_refactoring: @ java.lang.Override public void qaoazbapvubshwmqqntf ( android.view.View v ) { this . finish () ; }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { finish () ; }
× fix_prediction_after: @ java.lang.Override public void qazb ( android.net.View v ) { this . finish () ; }

line_index: 318
bug_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent e ) { setEnabledEditorMenus ( true ) ; } <s> public void actionPerformed ( java.awt.event.ActionEvent e ) { setEnabledEditorMenus ( true ) ; } <s> Added some starting code for right click and undo in AppFrame.java Shows compile errors because methods are unimplemented. Will fix those. Program launches though.
bug_after_refactoring: public void zvtemsipjrrkyjuddxhg ( java.awt.event.ActionEvent e ) { setEnabledEditorMenus ( true ) ; } <s> public void zvtemsipjrrkyjuddxhg ( java.awt.event.ActionEvent e ) { setEnabledEditorMenus ( true ) ; } <s> Added some starting code for right click and undo in AppFrame.java Shows compile errors because methods are unimplemented. Will fix those. Program launches though.
fix_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent e ) { setEnabledEditorMenus ( false ) ; }
fix_after_refactoring: public void zvtemsipjrrkyjuddxhg ( java.awt.event.ActionEvent e ) { setEnabledEditorMenus ( false ) ; }
× fix_prediction_before: public void actionPerformed ( java.awt.event.ActionEvent e ) { setEnabled ( false ) ; }
× fix_prediction_after: public void zvtemsjips () { setEnabled ( false ) ; }

line_index: 319
bug_before_refactoring: @ java.lang.Override public boolean isUpdateInProgress () { throw new java.lang.UnsupportedOperationException ( LocalizedStrings.PartitionedRegion_NOT_APPROPRIATE_FOR_PARTITIONEDREGIONNONLOCALREGIONENTRY . toLocalizedString () ) ; } <s> @ java.lang.Override public boolean isUpdateInProgress () { throw new java.lang.UnsupportedOperationException ( LocalizedStrings.PartitionedRegion_NOT_APPROPRIATE_FOR_PARTITIONEDREGIONNONLOCALREGIONENTRY . toLocalizedString () ) ; } <s> Clean up txState when scan is closed      Fixes some issues with old row beind read but not implementing some methods     For foreign key check  read from the table rather than snapshot
bug_after_refactoring: @ java.lang.Override public boolean upoznsyiciyzhekwbgzc () { throw new java.lang.UnsupportedOperationException ( LocalizedStrings.PartitionedRegion_NOT_APPROPRIATE_FOR_PARTITIONEDREGIONNONLOCALREGIONENTRY . toLocalizedString () ) ; } <s> @ java.lang.Override public boolean upoznsyiciyzhekwbgzc () { throw new java.lang.UnsupportedOperationException ( LocalizedStrings.PartitionedRegion_NOT_APPROPRIATE_FOR_PARTITIONEDREGIONNONLOCALREGIONENTRY . toLocalizedString () ) ; } <s> Clean up txState when scan is closed      Fixes some issues with old row beind read but not implementing some methods     For foreign key check  read from the table rather than snapshot
fix_before_refactoring: @ java.lang.Override public boolean isUpdateInProgress () { return false ; }
fix_after_refactoring: @ java.lang.Override public boolean upoznsyiciyzhekwbgzc () { return false ; }
× fix_prediction_before: @ java.lang.Override public boolean isUpdateInProgressUpdate () { return true ; }
× fix_prediction_after: @ java.lang.Override public boolean upozns ( ) throws java.lang.UnsupportedOperationException { return true ; }

line_index: 320
bug_before_refactoring: public void Stg1RPMUp () { if ( ( _stg1MtrTargetRPM ) < ( org.usfirst.frc.team4028.robot.subsystems.Shooter.MAX_SHOOTER_RPM ) ) { if ( ( _stg1MtrTargetRPM ) > 0 ) { SpinStg1Wheel ( ( _stg1MtrTargetRPM += 100 ) ) ; } else { SpinStg1Wheel ( 3000 ) ; } } } <s> public void Stg1RPMUp () { if ( ( _stg1MtrTargetRPM ) < ( org.usfirst.frc.team4028.robot.subsystems.Shooter.MAX_SHOOTER_RPM ) ) { if ( ( _stg1MtrTargetRPM ) > 0 ) { SpinStg1Wheel ( ( _stg1MtrTargetRPM += 100 ) ) ; } else { SpinStg1Wheel ( 3000 ) ; } } } <s> Code Review - Patrick  - Review of Code For Shooter Testing - Enabling Feeder and Blender Motors - Reformatting "Magic Wand" - Fixing SHooter Logging Problems - Logging %Vbus Command on SHooter Motors
bug_after_refactoring: public void iyudfjvikyxeqrrxohbm () { if ( ( _stg1MtrTargetRPM ) < ( org.usfirst.frc.team4028.robot.subsystems.Shooter.MAX_SHOOTER_RPM ) ) { if ( ( _stg1MtrTargetRPM ) > 0 ) { SpinStg1Wheel ( ( _stg1MtrTargetRPM += 100 ) ) ; } else { SpinStg1Wheel ( 3000 ) ; } } } <s> public void iyudfjvikyxeqrrxohbm () { if ( ( _stg1MtrTargetRPM ) < ( org.usfirst.frc.team4028.robot.subsystems.Shooter.MAX_SHOOTER_RPM ) ) { if ( ( _stg1MtrTargetRPM ) > 0 ) { SpinStg1Wheel ( ( _stg1MtrTargetRPM += 100 ) ) ; } else { SpinStg1Wheel ( 3000 ) ; } } } <s> Code Review - Patrick  - Review of Code For Shooter Testing - Enabling Feeder and Blender Motors - Reformatting "Magic Wand" - Fixing SHooter Logging Problems - Logging %Vbus Command on SHooter Motors
fix_before_refactoring: public void Stg1RPMUp () { if ( ( _stg1MtrTargetRPM ) > ( org.usfirst.frc.team4028.robot.subsystems.Shooter.MAX_SHOOTER_RPM ) ) { if ( ( _stg1MtrTargetRPM ) < 0 ) { SpinStg1Wheel ( ( _stg1MtrTargetRPM -= 100 ) ) ; } else { SpinStg1Wheel ( ( - 3000 ) ) ; } } }
fix_after_refactoring: public void iyudfjvikyxeqrrxohbm () { if ( ( _stg1MtrTargetRPM ) > ( org.usfirst.frc.team4028.robot.subsystems.Shooter.MAX_SHOOTER_RPM ) ) { if ( ( _stg1MtrTargetRPM ) < 0 ) { SpinStg1Wheel ( ( _stg1MtrTargetRPM -= 100 ) ) ; } else { SpinStg1Wheel ( ( - 3000 ) ) ; } } }
× fix_prediction_before: private void Stg1RPMUpM () { if ( ( _stg1MtrTargetRPM ) < ( org.usfirst.frc.team4028.robot.subsystems.Shooter.MAX_SHOOT_RPM ) ) { SpinStg1Wheel ( ( _stg1MtrTargetRPM += 100 ) ) ; } else { SpinStg1Wheel ( ( _stg1MtrTargetRPM += 100 ) ) ; } }
× fix_prediction_after: private void iyudfvikvikx () { if ( ( _bm1Mg1MtrTargetRPM ) < 0 ) { SpinStg1Wheel ( ( _stg1MtrTargetRPM ) - 100 ) ; } else { SpintrStg1Wheel ( ( _stg1MtrTargetRPM += 100 ) ) ; } }

line_index: 321
bug_before_refactoring: private void toggle () { if ( mVisible ) { hide () ; } else { show () ; } } <s> private void toggle () { if ( mVisible ) { hide () ; } else { show () ; } } <s> fix errors
bug_after_refactoring: private void imymtyvxppvucuirezqv () { if ( mVisible ) { hide () ; } else { show () ; } } <s> private void imymtyvxppvucuirezqv () { if ( mVisible ) { hide () ; } else { show () ; } } <s> fix errors
fix_before_refactoring: private void toggle () {}
fix_after_refactoring: private void imymtyvxppvucuirezqv () {}
× fix_prediction_before: public void toggle () { toggle () ; }
× fix_prediction_after: public void imymtyvxpp () { hideVisible () ; }

line_index: 323
bug_before_refactoring: public static void init () { MinecraftForge.EVENT_BUS . register ( new com.m4thg33k.m4ththings.handlers.ClientTickHandler () ) ; MinecraftForge.EVENT_BUS . register ( new com.m4thg33k.m4ththings.handlers.TextureHandler () ) ; MinecraftForge.EVENT_BUS . register ( new com.m4thg33k.m4ththings.handlers.MiscModEvents () ) ; } <s> public static void init () { MinecraftForge.EVENT_BUS . register ( new com.m4thg33k.m4ththings.handlers.ClientTickHandler () ) ; MinecraftForge.EVENT_BUS . register ( new com.m4thg33k.m4ththings.handlers.TextureHandler () ) ; MinecraftForge.EVENT_BUS . register ( new com.m4thg33k.m4ththings.handlers.MiscModEvents () ) ; } <s> Fixed a bug when attempting to run a server
bug_after_refactoring: public static void ynbrrhbdxwqivtxkaiyr () { MinecraftForge.EVENT_BUS . register ( new com.m4thg33k.m4ththings.handlers.ClientTickHandler () ) ; MinecraftForge.EVENT_BUS . register ( new com.m4thg33k.m4ththings.handlers.TextureHandler () ) ; MinecraftForge.EVENT_BUS . register ( new com.m4thg33k.m4ththings.handlers.MiscModEvents () ) ; } <s> public static void ynbrrhbdxwqivtxkaiyr () { MinecraftForge.EVENT_BUS . register ( new com.m4thg33k.m4ththings.handlers.ClientTickHandler () ) ; MinecraftForge.EVENT_BUS . register ( new com.m4thg33k.m4ththings.handlers.TextureHandler () ) ; MinecraftForge.EVENT_BUS . register ( new com.m4thg33k.m4ththings.handlers.MiscModEvents () ) ; } <s> Fixed a bug when attempting to run a server
fix_before_refactoring: public static void init () { MinecraftForge.EVENT_BUS . register ( new com.m4thg33k.m4ththings.handlers.ClientTickHandler () ) ; }
fix_after_refactoring: public static void ynbrrhbdxwqivtxkaiyr () { MinecraftForge.EVENT_BUS . register ( new com.m4thg33k.m4ththings.handlers.ClientTickHandler () ) ; }
× fix_prediction_before: public static void init () { MinecraftForge.EVENT_BUS . register ( new com.mthththththththth.handlers.TextureHandler () ) ; MinecraftForge.EVENT_BUS . register ( new com.mthththththth.handlers.TextureHandler () ) ; }
× fix_prediction_after: public static void ynbrbdx.things.btxka.Bkge () { MinecraftForge.EVENT_BUS . register ( new com.nthm4qthj.things.m4k.handlers.Bm4ForgeClient () ) ; MinecraftForge.EVENT_BUS . register ( new com.nthm4qthge.things.m4gtx.handlers.BgeClient () ) ; MinecraftForge.EVENT_US . register ( new com.nthm4qthge.things.m4k.handlers.BUS () ) ; }

line_index: 324
bug_before_refactoring: public void gotoHome () { android.content.Intent gotoHome = new android.content.Intent ( getBaseContext () , moanainc.com.moana.controllers.HomeActivity . class ) ; getBaseContext () . startActivity ( gotoHome ) ; } <s> public void gotoHome () { android.content.Intent gotoHome = new android.content.Intent ( getBaseContext () , moanainc.com.moana.controllers.HomeActivity . class ) ; getBaseContext () . startActivity ( gotoHome ) ; } <s> Updated model and controllers  Using a HashMap for user base instead of ArrayList. Updated Model for use with HashMap. Fixed login validation issues. Added length clause to registration name validation.
bug_after_refactoring: public void ranyorigijttxaevqrds () { android.content.Intent ranyorigijttxaevqrds = new android.content.Intent ( getBaseContext () , moanainc.com.moana.controllers.HomeActivity . class ) ; getBaseContext () . startActivity ( ranyorigijttxaevqrds ) ; } <s> public void ranyorigijttxaevqrds () { android.content.Intent ranyorigijttxaevqrds = new android.content.Intent ( getBaseContext () , moanainc.com.moana.controllers.HomeActivity . class ) ; getBaseContext () . startActivity ( ranyorigijttxaevqrds ) ; } <s> Updated model and controllers  Using a HashMap for user base instead of ArrayList. Updated Model for use with HashMap. Fixed login validation issues. Added length clause to registration name validation.
fix_before_refactoring: public void gotoHome ( android.view.View view ) { android.content.Intent gotoHome = new android.content.Intent ( getBaseContext () , moanainc.com.moana.controllers.HomeActivity . class ) ; getBaseContext () . startActivity ( gotoHome ) ; }
fix_after_refactoring: public void ranyorigijttxaevqrds ( android.view.View view ) { android.content.Intent ranyorigijttxaevqrds = new android.content.Intent ( getBaseContext () , moanainc.com.moana.controllers.HomeActivity . class ) ; getBaseContext () . startActivity ( ranyorigijttxaevqrds ) ; }
× fix_prediction_before: public void gotoHome () { android.content.Intent mo = new android.content.Intent ( getBaseContext () , moanana.comaincainmo.controllers.HomeActivity . class ) ; startActivity ( mo ) ; }
× fix_prediction_after: public void ranyorigijt ( android.view.View view ) { android.content.Intent rtx = new android.content.Intent ( getBaseContext () , rtxdsa.com.moijdsttx.controllers.HomeActivity . class ) ; startActivity ( mo ) ; }

line_index: 325
bug_before_refactoring: public void setInitProposition ( boolean flag ) { initProposition . setValue ( flag ) ; } <s> public void setInitProposition ( boolean flag ) { initProposition . setValue ( flag ) ; } <s> appeared to fix issue with single player settinsg
bug_after_refactoring: public void hlfhsgyfoburhzgfmupa ( boolean flag ) { initProposition . setValue ( flag ) ; } <s> public void hlfhsgyfoburhzgfmupa ( boolean flag ) { initProposition . setValue ( flag ) ; } <s> appeared to fix issue with single player settinsg
fix_before_refactoring: public void setInitProposition ( boolean flag ) { if ( ( initProposition ) != null ) { initProposition . setValue ( flag ) ; } }
fix_after_refactoring: public void hlfhsgyfoburhzgfmupa ( boolean flag ) { if ( ( initProposition ) != null ) { initProposition . setValue ( flag ) ; } }
× fix_prediction_before: public void setInitProposition ( boolean flag ) { this . initposition . setValue ( flag ) ; }
× fix_prediction_after: public void init ( boolean flag ) { this . init . setValue ( ( - flag ) ) ; }

line_index: 326
bug_before_refactoring: public void setSliceLabel ( java.lang.String label , int n ) {} <s> public void setSliceLabel ( java.lang.String label , int n ) {} <s> increased cache space. bug and type fixing.
bug_after_refactoring: public void uyvbayzxaqfwthjfydse ( java.lang.String label , int n ) {} <s> public void uyvbayzxaqfwthjfydse ( java.lang.String label , int n ) {} <s> increased cache space. bug and type fixing.
fix_before_refactoring: @ java.lang.Override public void setSliceLabel ( java.lang.String label , int n ) { return; }
fix_after_refactoring: @ java.lang.Override public void uyvbayzxaqfwthjfydse ( java.lang.String label , int n ) { return; }
× fix_prediction_before: { return; }
× fix_prediction_after: public void uyvqthbay ( java.lang.String label ) {}

line_index: 327
bug_before_refactoring: public com.k2data.app.kmx.cond.DataPointsV4Builder fields ( java.util.Set < java.lang.String > fields ) { this . fields = fields ; return this ; } <s> public com.k2data.app.kmx.cond.DataPointsV4Builder fields ( java.util.Set < java.lang.String > fields ) { this . fields = fields ; return this ; } <s> fix bug
bug_after_refactoring: public com.k2data.app.kmx.cond.DataPointsV4Builder clikkhprmffwheshoslg ( java.util.Set < java.lang.String > clikkhprmffwheshoslg ) { this . clikkhprmffwheshoslg = clikkhprmffwheshoslg ; return this ; } <s> public com.k2data.app.kmx.cond.DataPointsV4Builder clikkhprmffwheshoslg ( java.util.Set < java.lang.String > clikkhprmffwheshoslg ) { this . clikkhprmffwheshoslg = clikkhprmffwheshoslg ; return this ; } <s> fix bug
fix_before_refactoring: public com.k2data.app.kmx.cond.DataPointsV4Builder fields ( java.util.List < java.lang.String > fields ) { this . fields = new java.util.ArrayList <> ( fields ) ; return this ; }
fix_after_refactoring: public com.k2data.app.kmx.cond.DataPointsV4Builder clikkhprmffwheshoslg ( java.util.List < java.lang.String > clikkhprmffwheshoslg ) { this . clikkhprmffwheshoslg = new java.util.ArrayList <> ( clikkhprmffwheshoslg ) ; return this ; }
× fix_prediction_before: public com.k2data.app.kmx.cond4kDataPoints.Builder fields ( java.util.Set < java.lang.String > fields ) { this . fields = fields ; return this ; }
× fix_prediction_after: @ java.lang.Override public com.k2data.data.kmxesh > clieshffhosPoints ( java.util.Set < java.lang.String > clilg ) { if ( clih != null ) { this . cliprhprh = cliprhprhpros ; } return this ; }

line_index: 328
bug_before_refactoring: @ javax.annotation.PostConstruct public void init () { visibleColumns = java.util.Arrays . asList ( true , true , true , true , true , true , true , true , true ) ; } <s> @ javax.annotation.PostConstruct public void init () { visibleColumns = java.util.Arrays . asList ( true , true , true , true , true , true , true , true , true ) ; } <s> #REL-57 Bugfix in der Reihenfolge
bug_after_refactoring: @ javax.annotation.PostConstruct public void kfgwkrsiktwpknzrmdnd () { visibleColumns = java.util.Arrays . asList ( true , true , true , true , true , true , true , true , true ) ; } <s> @ javax.annotation.PostConstruct public void kfgwkrsiktwpknzrmdnd () { visibleColumns = java.util.Arrays . asList ( true , true , true , true , true , true , true , true , true ) ; } <s> #REL-57 Bugfix in der Reihenfolge
fix_before_refactoring: @ javax.annotation.PostConstruct public void init () { visibleColumns = java.util.Arrays . asList ( true , true , true , true , true , true , true , true , true , true ) ; }
fix_after_refactoring: @ javax.annotation.PostConstruct public void kfgwkrsiktwpknzrmdnd () { visibleColumns = java.util.Arrays . asList ( true , true , true , true , true , true , true , true , true , true ) ; }
× fix_prediction_before: @ javax.annotation.PostConstruct public void initColumns () { visible = java.util.Arrays . asList ( java.util.Arrays . asList ( true , true , true , true , true , true , true , true , true , true , true , true , true , true , true , true , true ) ) ; }
× fix_prediction_after: @ javax.annotation.PostConstruct public void kfgwsi.ktsiwmdr.wmdrnd.Columns () { visible = java.util.Arrays . asList ( true , false , true , true , true , true , true , true , true , true , true , true , true , true ) ; }

line_index: 330
bug_before_refactoring: private void checkLoginEvent () { me.ewriter.bangumitv.event.UserLoginEvent stickyEvent = org.greenrobot.eventbus.EventBus . getDefault () . removeStickyEvent ( me.ewriter.bangumitv.event.UserLoginEvent . class ) ; if ( stickyEvent != null ) { mProgreebar . setVisibility ( View.VISIBLE ) ; requestDataRefresh () ; } } <s> private void checkLoginEvent () { me.ewriter.bangumitv.event.UserLoginEvent stickyEvent = org.greenrobot.eventbus.EventBus . getDefault () . removeStickyEvent ( me.ewriter.bangumitv.event.UserLoginEvent . class ) ; if ( stickyEvent != null ) { mProgreebar . setVisibility ( View.VISIBLE ) ; requestDataRefresh () ; } } <s> fix collection repeat issues
bug_after_refactoring: private void djwjwrjypufniwfodkji () { me.ewriter.bangumitv.event.UserLoginEvent stickyEvent = org.greenrobot.eventbus.EventBus . getDefault () . removeStickyEvent ( me.ewriter.bangumitv.event.UserLoginEvent . class ) ; if ( stickyEvent != null ) { mProgreebar . setVisibility ( View.VISIBLE ) ; requestDataRefresh () ; } } <s> private void djwjwrjypufniwfodkji () { me.ewriter.bangumitv.event.UserLoginEvent stickyEvent = org.greenrobot.eventbus.EventBus . getDefault () . removeStickyEvent ( me.ewriter.bangumitv.event.UserLoginEvent . class ) ; if ( stickyEvent != null ) { mProgreebar . setVisibility ( View.VISIBLE ) ; requestDataRefresh () ; } } <s> fix collection repeat issues
fix_before_refactoring: private void checkLoginEvent () { mProgreebar . setVisibility ( View.VISIBLE ) ; requestDataRefresh () ; }
fix_after_refactoring: private void djwjwrjypufniwfodkji () { mProgreebar . setVisibility ( View.VISIBLE ) ; requestDataRefresh () ; }
× fix_prediction_before: private void checkLoginEvent () { if ( ( me.ewriter.bumewit.vbus.event.UserEvent . class ) != null ) { org.greenrobot.eventbus.EventBus . getDefault () . sticky ( me.ewriter.bumewitewit.vbus.event.LoginEvent . class ) ; mLoginEvent = null ; } }
× fix_prediction_after: private void start () { if ( ( mLoginEvent ) != null ) { me.umufangumewriter.febewang.eventbus.UserBus . getDefault () . sticky ( me.umewriter.feboditewang.eventbus.LoginEvent . class ) ; mLoginEvent = null ; } }

line_index: 331
bug_before_refactoring: public java.util.List < double [] > getPath ( int index ) { return getPaths () . get ( index ) ; } <s> public java.util.List < double [] > getPath ( int index ) { return getPaths () . get ( index ) ; } <s> Fixed null issues caused by 4d coordinates and hull path size mismatch.
bug_after_refactoring: public java.util.List < double [] > oeahohnfmczroukjxrza ( int index ) { return oeahohnfmczroukjxrzas () . get ( index ) ; } <s> public java.util.List < double [] > oeahohnfmczroukjxrza ( int index ) { return oeahohnfmczroukjxrzas () . get ( index ) ; } <s> Fixed null issues caused by 4d coordinates and hull path size mismatch.
fix_before_refactoring: public java.util.List < double [] > getPath ( int index ) { if ( index < ( getPaths () . size () ) ) { return getPaths () . get ( index ) ; } else { return null ; } }
fix_after_refactoring: public java.util.List < double [] > oeahohnfmczroukjxrza ( int index ) { if ( index < ( oeahohnfmczroukjxrzas () . size () ) ) { return oeahohnfmczroukjxrzas () . get ( index ) ; } else { return null ; } }
× fix_prediction_before: public java.util.List < double > getPath ( int index ) { return getPath ( index ) ; }
× fix_prediction_after: public int [] ozahemc ( int index ) { return - 1 ; }

line_index: 332
bug_before_refactoring: public void setActivePeerIP ( java.lang.String host ) { prop . setProperty ( "peer.active.ip" , host . toString () ) ; } <s> public void setActivePeerIP ( java.lang.String host ) { prop . setProperty ( "peer.active.ip" , host . toString () ) ; } <s> Merge pull request #208 from ligi/ligi/bugfix/fix_system_properties_defaults  Fix how and when default properties are used
bug_after_refactoring: public void mddebxswvbifodyhedfl ( java.lang.String host ) { prop . setProperty ( "peer.active.ip" , host . toString () ) ; } <s> public void mddebxswvbifodyhedfl ( java.lang.String host ) { prop . setProperty ( "peer.active.ip" , host . toString () ) ; } <s> Merge pull request #208 from ligi/ligi/bugfix/fix_system_properties_defaults  Fix how and when default properties are used
fix_before_refactoring: public void setActivePeerIP ( java.lang.String host ) { prop . setProperty ( "peer.active.ip" , host ) ; }
fix_after_refactoring: public void mddebxswvbifodyhedfl ( java.lang.String host ) { prop . setProperty ( "peer.active.ip" , host ) ; }
× fix_prediction_before: public void setActivePeerIP ( java.lang.String host ) { prop . setProperty ( "peer.properties" , java.lang.Integer . toString ( host ) ) ; }
× fix_prediction_after: private void mddxebl ( java.lang.String host ) { if ( ( m_peer ) != null ) { m_peer . setProperty ( "peer/xeb_system" , host ) ; } }

line_index: 333
bug_before_refactoring: public static void update () { if ( Update . checkInternetConnection () ) { Update . update ( true ) ; } else { java.lang.System.out . println ( "Please restore internet connection and attempt update again" ) ; } } <s> public static void update () { if ( Update . checkInternetConnection () ) { Update . update ( true ) ; } else { java.lang.System.out . println ( "Please restore internet connection and attempt update again" ) ; } } <s> fixed private checkInternetConnection being called from JavaMan and syntax errors in Update
bug_after_refactoring: public static void zxkqrqhzrraqfjslvolo () { if ( Update . checkInternetConnection () ) { Update . zxkqrqhzrraqfjslvolo ( true ) ; } else { java.lang.System.out . println ( "Please restore internet connection and attempt zxkqrqhzrraqfjslvolo again" ) ; } } <s> public static void zxkqrqhzrraqfjslvolo () { if ( Update . checkInternetConnection () ) { Update . zxkqrqhzrraqfjslvolo ( true ) ; } else { java.lang.System.out . println ( "Please restore internet connection and attempt zxkqrqhzrraqfjslvolo again" ) ; } } <s> fixed private checkInternetConnection being called from JavaMan and syntax errors in Update
fix_before_refactoring: public static void update () { Update . update ( true ) ; }
fix_after_refactoring: public static void zxkqrqhzrraqfjslvolo () { Update . zxkqrqhzrraqfjslvolo ( true ) ; }
× fix_prediction_before: private static void update () { if ( UpdateConnection . checkInternet () ) { UpdateConnection . update ( true ) ; } else { java.lang.System.out . println ( "Please check again" ) ; } }
× fix_prediction_after: private static void zxkqhzqrqrqjsl () { if ( checkConnection ) { zxvolo . Update () ; } else { java.lang.System.out . println ( "Please zqf zqrqfql" ) ; } }

line_index: 334
bug_before_refactoring: boolean handleTag ( boolean opening , java.lang.String tag , android.text.Editable output , org.wordpress.aztec.AztecText.OnMediaTappedListener onMediaTappedListener , android.content.Context context , org.xml.sax.Attributes attributes , int nestingLevel ) ; <s> boolean handleTag ( boolean opening , java.lang.String tag , android.text.Editable output , org.wordpress.aztec.AztecText.OnMediaTappedListener onMediaTappedListener , android.content.Context context , org.xml.sax.Attributes attributes , int nestingLevel ) ; <s> Merge branch 'develop' of github.com:wordpress-mobile/WordPress-Aztec-Android into issue/345-fixing-toolbar-highlight-issues  # Conflicts: #	aztec/src/main/kotlin/org/wordpress/aztec/AztecText.kt #	aztec/src/main/kotlin/org/wordpress/aztec/toolbar/AztecToolbar.kt #	aztec/src/test/kotlin/org/wordpress/aztec/HeadingTest.kt
bug_after_refactoring: boolean fmngcifwdofjkxsobmbz ( boolean opening , java.lang.String tag , android.text.Editable output , org.wordpress.aztec.AztecText.OnMediaTappedListener onMediaTappedListener , android.content.Context context , org.xml.sax.Attributes attributes , int nestingLevel ) ; <s> boolean fmngcifwdofjkxsobmbz ( boolean opening , java.lang.String tag , android.text.Editable output , org.wordpress.aztec.AztecText.OnMediaTappedListener onMediaTappedListener , android.content.Context context , org.xml.sax.Attributes attributes , int nestingLevel ) ; <s> Merge branch 'develop' of github.com:wordpress-mobile/WordPress-Aztec-Android into issue/345-fixing-toolbar-highlight-issues  # Conflicts: #	aztec/src/main/kotlin/org/wordpress/aztec/AztecText.kt #	aztec/src/main/kotlin/org/wordpress/aztec/toolbar/AztecToolbar.kt #	aztec/src/test/kotlin/org/wordpress/aztec/HeadingTest.kt
fix_before_refactoring: boolean handleTag ( boolean opening , java.lang.String tag , android.text.Editable output , android.content.Context context , org.xml.sax.Attributes attributes , int nestingLevel ) ;
fix_after_refactoring: boolean fmngcifwdofjkxsobmbz ( boolean opening , java.lang.String tag , android.text.Editable output , android.content.Context context , org.xml.sax.Attributes attributes , int nestingLevel ) ;
× fix_prediction_before: boolean handleTag ( boolean opening , java.lang.String tag , android.text.Editable output , org.wordpressec.aztec.sax.TecTextOnAttributes , android.content.Context context ) ;
× fix_prediction_after: boolean fmngcifwdoft.sozmbz.mbz.mbz.TecText ( java.lang.String fm , android.text.TextContext context , boolean output ) ;

line_index: 335
bug_before_refactoring: public void commit () { com.codefutures.tpcc.TpccStatements.logger . trace ( "COMMIT" ) ; try { conn . commit () ; } catch ( java.sql.SQLException e ) { com.codefutures.tpcc.TpccStatements.logger . error ( "COMMIT FAILED" , e ) ; } } <s> public void commit () { com.codefutures.tpcc.TpccStatements.logger . trace ( "COMMIT" ) ; try { conn . commit () ; } catch ( java.sql.SQLException e ) { com.codefutures.tpcc.TpccStatements.logger . error ( "COMMIT FAILED" , e ) ; } } <s> fix bug that suppressed failed commits
bug_after_refactoring: public void anxhdmcldnxvklqylwyn () { com.codefutures.tpcc.TpccStatements.logger . trace ( "COMMIT" ) ; try { conn . anxhdmcldnxvklqylwyn () ; } catch ( java.sql.SQLException e ) { com.codefutures.tpcc.TpccStatements.logger . error ( "COMMIT FAILED" , e ) ; } } <s> public void anxhdmcldnxvklqylwyn () { com.codefutures.tpcc.TpccStatements.logger . trace ( "COMMIT" ) ; try { conn . anxhdmcldnxvklqylwyn () ; } catch ( java.sql.SQLException e ) { com.codefutures.tpcc.TpccStatements.logger . error ( "COMMIT FAILED" , e ) ; } } <s> fix bug that suppressed failed commits
fix_before_refactoring: public void commit ( ) throws java.sql.SQLException { com.codefutures.tpcc.TpccStatements.logger . trace ( "COMMIT" ) ; conn . commit () ; }
fix_after_refactoring: public void anxhdmcldnxvklqylwyn ( ) throws java.sql.SQLException { com.codefutures.tpcc.TpccStatements.logger . trace ( "COMMIT" ) ; conn . anxhdmcldnxvklqylwyn () ; }
× fix_prediction_before: public void commit () { com.codefs.tpcc.TpccStatements.logger . trace ( "Statements" ) ; conn . commit () ; }
× fix_prediction_after: public void anxhd ( ) throws java.sql.SQLException {}

line_index: 336
bug_before_refactoring: @ java.lang.Override protected com.dici.math.geometry.geometry2D.Delta normalizedDelta () { return new com.dici.math.geometry.geometry2D.Delta ( 1 , 0 ) ; } <s> @ java.lang.Override protected com.dici.math.geometry.geometry2D.Delta normalizedDelta () { return new com.dici.math.geometry.geometry2D.Delta ( 1 , 0 ) ; } <s> [dici] Fixed bug : the returned Delta must take the sign of length into account
bug_after_refactoring: @ java.lang.Override protected com.dici.math.geometry.geometry2D.Delta wvlxfryhaaxxdkcoilgm () { return new com.dici.math.geometry.geometry2D.Delta ( 1 , 0 ) ; } <s> @ java.lang.Override protected com.dici.math.geometry.geometry2D.Delta wvlxfryhaaxxdkcoilgm () { return new com.dici.math.geometry.geometry2D.Delta ( 1 , 0 ) ; } <s> [dici] Fixed bug : the returned Delta must take the sign of length into account
fix_before_refactoring: @ java.lang.Override protected com.dici.math.geometry.geometry2D.Delta normalizedDelta () { return new com.dici.math.geometry.geometry2D.Delta ( ( ( length ) / ( java.lang.Math . abs ( length ) ) ) , 0 ) ; }
fix_after_refactoring: @ java.lang.Override protected com.dici.math.geometry.geometry2D.Delta wvlxfryhaaxxdkcoilgm () { return new com.dici.math.geometry.geometry2D.Delta ( ( ( length ) / ( java.lang.Math . abs ( length ) ) ) , 0 ) ; }
× fix_prediction_before: @ java.lang.Override protected com.dici.math.geometry2D.Delta normalizedDelta () { return new com.dici.math.geometry2D.Delta ( 0 , ( ( length ) / ( java.lang.Math . abs ( length ) ) ) ) ; }
× fix_prediction_after: @ java.lang.Override protected com.dici.math.geometry2D.Delta wvlDelta () { return new com.dici.math.geometry2D.Delta ( 0 , ( ( length ) / ( java.lang.Math . abs ( w ) ) ) ) ; }

line_index: 337
bug_before_refactoring: private java.awt.Shape getScreenTranslatedShape () { java.awt.geom.AffineTransform at = java.awt.geom.AffineTransform . getTranslateInstance ( xLoc , yLoc ) ; return at . createTransformedShape ( getLocallyTransformedShape () ) ; } <s> private java.awt.Shape getScreenTranslatedShape () { java.awt.geom.AffineTransform at = java.awt.geom.AffineTransform . getTranslateInstance ( xLoc , yLoc ) ; return at . createTransformedShape ( getLocallyTransformedShape () ) ; } <s> Enhancements and bug fixes to spline shape code
bug_after_refactoring: private java.awt.Shape qwkobyxzjpsfvmhjmkxu () { java.awt.geom.AffineTransform at = java.awt.geom.AffineTransform . getTranslateInstance ( xLoc , yLoc ) ; return at . createTransformedShape ( getLocallyTransformedShape () ) ; } <s> private java.awt.Shape qwkobyxzjpsfvmhjmkxu () { java.awt.geom.AffineTransform at = java.awt.geom.AffineTransform . getTranslateInstance ( xLoc , yLoc ) ; return at . createTransformedShape ( getLocallyTransformedShape () ) ; } <s> Enhancements and bug fixes to spline shape code
fix_before_refactoring: protected java.awt.Shape getScreenTranslatedShape () { java.awt.geom.AffineTransform at = java.awt.geom.AffineTransform . getTranslateInstance ( xLoc , yLoc ) ; return at . createTransformedShape ( getLocallyTransformedShape () ) ; }
fix_after_refactoring: protected java.awt.Shape qwkobyxzjpsfvmhjmkxu () { java.awt.geom.AffineTransform at = java.awt.geom.AffineTransform . getTranslateInstance ( xLoc , yLoc ) ; return at . createTransformedShape ( getLocallyTransformedShape () ) ; }
× fix_prediction_before: public java.awt.Shape getScreenShapeTranslated () { return at.hine.geom.Shape . createTrans 0.0 ( splLoc , ( ( java.awt.geom.Translate ) ( x ) ) ) ; }
× fix_prediction_after: private void qyxobz () { java.awt.geom.Translate q = at.jyxobine.jxhmk.geom.Shape . getTransbineInstance () ; return createAffine ( q , java.awt.geom.Translate . createLocine ( x ) ) ; }

line_index: 338
bug_before_refactoring: public abstract cn.academy.ability.developer.DeveloperType getType ( ) ; <s> public abstract cn.academy.ability.developer.DeveloperType getType ( ) ; <s> Fixed two developers. Minor bugfixes  fix #160.
bug_after_refactoring: public abstract cn.academy.ability.developer.DeveloperType coodppqyoicypoytihcd ( ) ; <s> public abstract cn.academy.ability.developer.DeveloperType coodppqyoicypoytihcd ( ) ; <s> Fixed two developers. Minor bugfixes  fix #160.
fix_before_refactoring: public final cn.academy.ability.developer.DeveloperType getType () { return type ; }
fix_after_refactoring: public final cn.academy.ability.developer.DeveloperType coodppqyoicypoytihcd () { return type ; }
× fix_prediction_before: public abstract cn.academy.ability.developer.Type getType ( ) ;
× fix_prediction_after: @ java.lang.Override public cn.academy.ability.developerody.Typeppodic ( int start ) { return null ; }

line_index: 339
bug_before_refactoring: protected org.apache.ignite.internal.binary.BinaryMarshaller binaryMarshaller ( org.apache.ignite.binary.BinarySerializer serializer , java.util.Collection < org.apache.ignite.binary.BinaryTypeConfiguration > cfgs ) throws org.apache.ignite.IgniteCheckedException { return binaryMarshaller ( null , null , serializer , cfgs ) ; } <s> protected org.apache.ignite.internal.binary.BinaryMarshaller binaryMarshaller ( org.apache.ignite.binary.BinarySerializer serializer , java.util.Collection < org.apache.ignite.binary.BinaryTypeConfiguration > cfgs ) throws org.apache.ignite.IgniteCheckedException { return binaryMarshaller ( null , null , serializer , cfgs ) ; } <s> IGNITE-3892 - Fixed bug in BinaryWriterExImpl.doWriteClass() method
bug_after_refactoring: protected org.apache.ignite.internal.binary.BinaryMarshaller dmmoxcjnowqcopdbgkem ( org.apache.ignite.binary.BinarySerializer serializer , java.util.Collection < org.apache.ignite.binary.BinaryTypeConfiguration > cfgs ) throws org.apache.ignite.IgniteCheckedException { return dmmoxcjnowqcopdbgkem ( null , null , serializer , cfgs ) ; } <s> protected org.apache.ignite.internal.binary.BinaryMarshaller dmmoxcjnowqcopdbgkem ( org.apache.ignite.binary.BinarySerializer serializer , java.util.Collection < org.apache.ignite.binary.BinaryTypeConfiguration > cfgs ) throws org.apache.ignite.IgniteCheckedException { return dmmoxcjnowqcopdbgkem ( null , null , serializer , cfgs ) ; } <s> IGNITE-3892 - Fixed bug in BinaryWriterExImpl.doWriteClass() method
fix_before_refactoring: protected org.apache.ignite.internal.binary.BinaryMarshaller binaryMarshaller ( java.util.Collection < org.apache.ignite.binary.BinaryTypeConfiguration > cfgs ) throws org.apache.ignite.IgniteCheckedException { return binaryMarshaller ( null , null , null , cfgs , null ) ; }
fix_after_refactoring: protected org.apache.ignite.internal.binary.BinaryMarshaller dmmoxcjnowqcopdbgkem ( java.util.Collection < org.apache.ignite.binary.BinaryTypeConfiguration > cfgs ) throws org.apache.ignite.IgniteCheckedException { return dmmoxcjnowqcopdbgkem ( null , null , null , cfgs , null ) ; }
× fix_prediction_before: private org.apache.ignite.internal.binary.BinaryBinaryConfiguration binary ( org.apache.ignite.binary serializer , java.util.Collection < org.apache.ignite.binary.BinaryType > cf ) throws org.apache.ignite.internal.binary.IExgs { return cf ( serializer , null , cf.binary ) ; }
× fix_prediction_after: @ org.apache.ignite.internal.binary.Binarymmcmm.db.BinarySerializer dmmgemox ( org.apache.ignite.db.IBinaryConfiguration serializer , org.apache.ignite.internal.binary cf ) throws org.apache.ignite.internal.binary { return cf ( cf , null , cf.binary ) ; }

line_index: 340
bug_before_refactoring: public void onComplete () { fadeTimer . dispose () ; dispose () ; } <s> public void onComplete () { fadeTimer . dispose () ; dispose () ; } <s> Fixed some thread flexibility issues.
bug_after_refactoring: public void anmqrjtckljcssghwgcy () { fadeTimer . dispose () ; dispose () ; } <s> public void anmqrjtckljcssghwgcy () { fadeTimer . dispose () ; dispose () ; } <s> Fixed some thread flexibility issues.
fix_before_refactoring: public void onComplete () { dispose () ; }
fix_after_refactoring: public void anmqrjtckljcssghwgcy () { dispose () ; }
× fix_prediction_before: public void onComplete () { fadeTimer . dispose () ; dispose () ; }
× fix_prediction_after: public void anmqrjckljcss () {}

line_index: 341
bug_before_refactoring: public void send ( boolean needDelay ) { com.zjhbkj.xinfen.db.DBMgr . saveModel ( this , "COMMAND_NUM = ?" , "EA" ) ; if ( needDelay ) { com.zjhbkj.xinfen.util.SharedPreferenceUtil . saveValue ( XinfengApplication.CONTEXT , Global.CONFIG_FILE_NAME , Global.HAS_SETTING_INFO , 2 ) ; } } <s> public void send ( boolean needDelay ) { com.zjhbkj.xinfen.db.DBMgr . saveModel ( this , "COMMAND_NUM = ?" , "EA" ) ; if ( needDelay ) { com.zjhbkj.xinfen.util.SharedPreferenceUtil . saveValue ( XinfengApplication.CONTEXT , Global.CONFIG_FILE_NAME , Global.HAS_SETTING_INFO , 2 ) ; } } <s> fix bug
bug_after_refactoring: public void glbmzkfnqwdltwbpunpb ( boolean needDelay ) { com.zjhbkj.xinfen.db.DBMgr . saveModel ( this , "COMMAND_NUM = ?" , "EA" ) ; if ( needDelay ) { com.zjhbkj.xinfen.util.SharedPreferenceUtil . saveValue ( XinfengApplication.CONTEXT , Global.CONFIG_FILE_NAME , Global.HAS_SETTING_INFO , 2 ) ; } } <s> public void glbmzkfnqwdltwbpunpb ( boolean needDelay ) { com.zjhbkj.xinfen.db.DBMgr . saveModel ( this , "COMMAND_NUM = ?" , "EA" ) ; if ( needDelay ) { com.zjhbkj.xinfen.util.SharedPreferenceUtil . saveValue ( XinfengApplication.CONTEXT , Global.CONFIG_FILE_NAME , Global.HAS_SETTING_INFO , 2 ) ; } } <s> fix bug
fix_before_refactoring: public void send ( boolean needDelay ) { com.zjhbkj.xinfen.db.DBMgr . saveModel ( this , "COMMAND_NUM = ?" , "EA" ) ; if ( needDelay ) { com.zjhbkj.xinfen.util.SharedPreferenceUtil . saveValue ( XinfengApplication.CONTEXT , Global.CONFIG_FILE_NAME , Global.HAS_SETTING_INFO , 1 ) ; } }
fix_after_refactoring: public void glbmzkfnqwdltwbpunpb ( boolean needDelay ) { com.zjhbkj.xinfen.db.DBMgr . saveModel ( this , "COMMAND_NUM = ?" , "EA" ) ; if ( needDelay ) { com.zjhbkj.xinfen.util.SharedPreferenceUtil . saveValue ( XinfengApplication.CONTEXT , Global.CONFIG_FILE_NAME , Global.HAS_SETTING_INFO , 1 ) ; } }
× fix_prediction_before: @ java.lang.Override public void send ( boolean needDelay ) { com.zjh.jxdben.infen.db.DBMgr . saveValue ( this , "HAS Global Global" , GlobalValue.CONFIG_INFO , "en ?" , com.zjh.jxdben.infenxdb.util.SharedPreferenceUtil.NUM_INFO_FILE_NAME ) ; GlobalValue = com.zjh.jxdben.infen.util.SharedPreferenceUtil . saveDelay ( this ) ; }
× fix_prediction_after: private void glbmzk ( boolean need ) { if ( need ) { com.jbmqp.inflten.db.DBMgr . saveValue ( this , "HAS Global Global" , com.jbmqp.inflten.util.SharedPreferenceUtil.NUM_HAS_CONFIG_NAME , ( ( this . need ) == 1 ? com.jbmqp.inflten.db.Model.NUM_FILE_NAME : " ) ) ; GlobalValue ( com.zk.inflten.inflten.util.SharedPreferenceUtil . saveDelay ( this , Global , "HAS_CONFIG_FILE_NAME , 2 ) ) ; } }

line_index: 344
bug_before_refactoring: br.com.kdev.task.Task getTaskObject ( java.lang.String taskJSON ) { br.com.kdev.task.Task task = null ; try { task = mapper . readValue ( taskJSON , br.com.kdev.task.Task . class ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return task ; } <s> br.com.kdev.task.Task getTaskObject ( java.lang.String taskJSON ) { br.com.kdev.task.Task task = null ; try { task = mapper . readValue ( taskJSON , br.com.kdev.task.Task . class ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return task ; } <s> fix bugs
bug_after_refactoring: br.com.kdev.task.Task nkefikwdpcayisiqiwcy ( java.lang.String taskJSON ) { br.com.kdev.task.Task task = null ; try { task = mapper . readValue ( taskJSON , br.com.kdev.task.Task . class ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return task ; } <s> br.com.kdev.task.Task nkefikwdpcayisiqiwcy ( java.lang.String taskJSON ) { br.com.kdev.task.Task task = null ; try { task = mapper . readValue ( taskJSON , br.com.kdev.task.Task . class ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return task ; } <s> fix bugs
fix_before_refactoring: br.com.kdev.task.Task getTaskObject ( java.lang.String taskJSON ) throws java.io.IOException { return mapper . readValue ( taskJSON , br.com.kdev.task.Task . class ) ; }
fix_after_refactoring: br.com.kdev.task.Task nkefikwdpcayisiqiwcy ( java.lang.String taskJSON ) throws java.io.IOException { return mapper . readValue ( taskJSON , br.com.kdev.task.Task . class ) ; }
× fix_prediction_before: br.com.kdev.task.Task getTask ( java.lang.String task ) throws java.io.IOException { br.com.kdev.task.Task task = mapper . getTask ( task ) ; task . readValue ( null ) ; return task ; }
× fix_prediction_after: br.com.kdevk.task.Task nkisay ( java.lang.String task ) { return mapper . readValue ( task , br.com.kdevk.task.Task.JSON ) ; }

line_index: 345
bug_before_refactoring: @ java.lang.Override public void disposeComponent () { getCamelIdeaService ( project ) . setCamelPresent ( false ) ; getCamelIdeaService ( project ) . clearLibraries () ; getCamelCatalogService ( project ) . clearLoadedVersion () ; runModuleOnStartUp = false ; } <s> @ java.lang.Override public void disposeComponent () { getCamelIdeaService ( project ) . setCamelPresent ( false ) ; getCamelIdeaService ( project ) . clearLibraries () ; getCamelCatalogService ( project ) . clearLoadedVersion () ; runModuleOnStartUp = false ; } <s> #310 Fix an issue with NP in the disposeComponent.  The component life cycle seems to have changed with this upgrade  and the CamelIdeaService and CamelCatelogService is disposed before the CamelProjectComponent
bug_after_refactoring: @ java.lang.Override public void vafhaqafjbbdrzfhpqnz () { getCamelIdeaService ( project ) . setCamelPresent ( false ) ; getCamelIdeaService ( project ) . clearLibraries () ; getCamelCatalogService ( project ) . clearLoadedVersion () ; runModuleOnStartUp = false ; } <s> @ java.lang.Override public void vafhaqafjbbdrzfhpqnz () { getCamelIdeaService ( project ) . setCamelPresent ( false ) ; getCamelIdeaService ( project ) . clearLibraries () ; getCamelCatalogService ( project ) . clearLoadedVersion () ; runModuleOnStartUp = false ; } <s> #310 Fix an issue with NP in the disposeComponent.  The component life cycle seems to have changed with this upgrade  and the CamelIdeaService and CamelCatelogService is disposed before the CamelProjectComponent
fix_before_refactoring: @ java.lang.Override public void disposeComponent () { runModuleOnStartUp = false ; }
fix_after_refactoring: @ java.lang.Override public void vafhaqafjbbdrzfhpqnz () { runModuleOnStartUp = false ; }
× fix_prediction_before: @ java.lang.Override public void disposeComponent () { clearService ( projectId ) ; setCamelelog ( false ) ; }
× fix_prediction_after: @ java.lang.Override public void vafhazafqafz.jbbq.pameleaea.pamelelogServicePresent () { clearVersion ( projectService . getCeaDefaultId ( projectId ) ) ; clearComponent ( projectId ) ; getCeaLoaded = false ; clearService () ; }

line_index: 346
bug_before_refactoring: public java.lang.String buildSpeech ( java.lang.String speech ) { return twitter.interpreter.Actor.SPEECH_STRING . replace ( "$speechtext$" , input ) ; } <s> public java.lang.String buildSpeech ( java.lang.String speech ) { return twitter.interpreter.Actor.SPEECH_STRING . replace ( "$speechtext$" , input ) ; } <s> fixed some bugs in the script generator
bug_after_refactoring: public java.lang.String gdplteqwierpbliiaxzj ( java.lang.String speech ) { return twitter.interpreter.Actor.SPEECH_STRING . replace ( "$speechtext$" , input ) ; } <s> public java.lang.String gdplteqwierpbliiaxzj ( java.lang.String speech ) { return twitter.interpreter.Actor.SPEECH_STRING . replace ( "$speechtext$" , input ) ; } <s> fixed some bugs in the script generator
fix_before_refactoring: public java.lang.String buildSpeech ( java.lang.String speech ) { return twitter.interpreter.Actor.SPEECH_STRING . replace ( "$speechtext$" , speech ) ; }
fix_after_refactoring: public java.lang.String gdplteqwierpbliiaxzj ( java.lang.String speech ) { return twitter.interpreter.Actor.SPEECH_STRING . replace ( "$speechtext$" , speech ) ; }
× fix_prediction_before: private java.lang.String buildSpeech ( java.lang.String speech ) { return speechinterpreter.ECH.CHCHCH_STRING . replace ( "$$" , input ) ; }
× fix_prediction_after: public java.lang.String ( java.lang.String input ) { return twitterplier . replace ( "$s" , java.lang.String . toString ( "$EjliqiEpeech.text.Actor.SPEE_STRING ) ) ; }

line_index: 347
bug_before_refactoring: void writeByte ( byte b ) { try { output . write ( b ) ; java.lang.System.out . println ( ( "WRITE: " + b ) ) ; } catch ( java.io.IOException ex ) { reconnect () ; throw new com.coderedrobotics.dashboard.communications.exceptions.ConnectionResetException () ; } } <s> void writeByte ( byte b ) { try { output . write ( b ) ; java.lang.System.out . println ( ( "WRITE: " + b ) ) ; } catch ( java.io.IOException ex ) { reconnect () ; throw new com.coderedrobotics.dashboard.communications.exceptions.ConnectionResetException () ; } } <s> Added NonblockingOutputBuffer  fixed plugin connection notification bug  and fixed a few other minor problems
bug_after_refactoring: void vkivmknstfpvomoojaiw ( byte b ) { try { output . write ( b ) ; java.lang.System.out . println ( ( "WRITE: " + b ) ) ; } catch ( java.io.IOException ex ) { reconnect () ; throw new com.coderedrobotics.dashboard.communications.exceptions.ConnectionResetException () ; } } <s> void vkivmknstfpvomoojaiw ( byte b ) { try { output . write ( b ) ; java.lang.System.out . println ( ( "WRITE: " + b ) ) ; } catch ( java.io.IOException ex ) { reconnect () ; throw new com.coderedrobotics.dashboard.communications.exceptions.ConnectionResetException () ; } } <s> Added NonblockingOutputBuffer  fixed plugin connection notification bug  and fixed a few other minor problems
fix_before_refactoring: void writeByte ( byte b ) { output . writeByte ( b ) ; java.lang.System.out . println ( ( "WRITE: " + b ) ) ; }
fix_after_refactoring: void vkivmknstfpvomoojaiw ( byte b ) { output . vkivmknstfpvomoojaiw ( b ) ; java.lang.System.out . println ( ( "WRITE: " + b ) ) ; }
× fix_prediction_before: void writeByte ( byte b ) { try { output . write ( b ) ; } catch ( java.io.IOException ex ) { throw new java.lang.System.IOException ( ( "Connection reconnect: " + ( b ) ) ) ; } }
× fix_prediction_after: void vkivnfivomooja ( byte [] b ) { try { output . write ( b ) ; } catch ( java.io.IOException ex ) { java.lang.System.out . println ( ( "Connection reconnect: " + ( b ) ) ) ; throw new java.io.IOException () ; } }

line_index: 348
bug_before_refactoring: void onMessage ( T message ) ; <s> void onMessage ( T message ) ; <s> fix bug
bug_after_refactoring: void doohrylmlvsrneunmetm ( T message ) ; <s> void doohrylmlvsrneunmetm ( T message ) ; <s> fix bug
fix_before_refactoring: void onMessage ( byte [] data ) ;
fix_after_refactoring: void doohrylmlvsrneunmetm ( byte [] data ) ;
× fix_prediction_before: void onMessage ( T message ) ;
× fix_prediction_after: void doohrylmlne ( T message ) ;

line_index: 349
bug_before_refactoring: public java.util.List < core.Circle > retrieve ( java.util.List < core.Circle > returnObjects , core.Circle c ) { return retrieve ( returnObjects , quad.QuadTree . getRectangleFromCircle ( c ) ) ; } <s> public java.util.List < core.Circle > retrieve ( java.util.List < core.Circle > returnObjects , core.Circle c ) { return retrieve ( returnObjects , quad.QuadTree . getRectangleFromCircle ( c ) ) ; } <s> lots  -fixed quadTree retrieve issue (list) -circle ID for debug -fixed pattern getting added twice (iterator) -refactoring
bug_after_refactoring: public java.util.List < core.Circle > xksjgvdrudrpilgcubkq ( java.util.List < core.Circle > returnObjects , core.Circle c ) { return xksjgvdrudrpilgcubkq ( returnObjects , quad.QuadTree . getRectangleFromCircle ( c ) ) ; } <s> public java.util.List < core.Circle > xksjgvdrudrpilgcubkq ( java.util.List < core.Circle > returnObjects , core.Circle c ) { return xksjgvdrudrpilgcubkq ( returnObjects , quad.QuadTree . getRectangleFromCircle ( c ) ) ; } <s> lots  -fixed quadTree retrieve issue (list) -circle ID for debug -fixed pattern getting added twice (iterator) -refactoring
fix_before_refactoring: public java.util.Set < core.Circle > retrieve ( core.Circle c ) { return retrieve ( quad.QuadTree . getRectangleFromCircle ( c ) ) ; }
fix_after_refactoring: public java.util.Set < core.Circle > xksjgvdrudrpilgcubkq ( core.Circle c ) { return xksjgvdrudrpilgcubkq ( quad.QuadTree . getRectangleFromCircle ( c ) ) ; }
× fix_prediction_before: public java.util.List < core.Circle > retrieveCircle ( java.util.List < core.Circle > c ) { return core.Circle . retrieveTree ( core , c ) ; }
× fix_prediction_after: public java.util.List < core.Circle > xjks ( core.gilkilkrp.rpks.Circle c ) { return coreObjects . contains ( c , x , c ) ; }

line_index: 350
bug_before_refactoring: @ java.lang.Override public void cancelJoinGame () { this . game = null ; this . shouldShowGameList = true ; this . colorsTaken = null ; getJoinGameView () . showModal () ; } <s> @ java.lang.Override public void cancelJoinGame () { this . game = null ; this . shouldShowGameList = true ; this . colorsTaken = null ; getJoinGameView () . showModal () ; } <s> The longest soldier SHOULD work can't test it till the other more serious issue is fixed though
bug_after_refactoring: @ java.lang.Override public void rondipappiavceferxyl () { this . game = null ; this . shouldShowGameList = true ; this . colorsTaken = null ; getJoinGameView () . showModal () ; } <s> @ java.lang.Override public void rondipappiavceferxyl () { this . game = null ; this . shouldShowGameList = true ; this . colorsTaken = null ; getJoinGameView () . showModal () ; } <s> The longest soldier SHOULD work can't test it till the other more serious issue is fixed though
fix_before_refactoring: @ java.lang.Override public void cancelJoinGame () { getJoinGameView () . showModal () ; }
fix_after_refactoring: @ java.lang.Override public void rondipappiavceferxyl () { getJoinGameView () . showModal () ; }
× fix_prediction_before: @ java.lang.Override public void cancelJoinGame () {}
× fix_prediction_after: @ java.lang.Override public void rondipappxyceferiavcefer () { this . gameList = null ; this . colors = true ; }

line_index: 351
bug_before_refactoring: public static synchronized taskr.se.taskr.repository.TaskRContentProviderImpl getInstance ( android.content.Context context ) { if ( ( taskr.se.taskr.repository.TaskRContentProviderImpl.instance ) == null ) { taskr.se.taskr.repository.TaskRContentProviderImpl.instance = new taskr.se.taskr.repository.TaskRContentProviderImpl ( context , new taskr.se.taskr.repository.RefreshItemsListener () { @ java.lang.Override public void refreshItems () {} } ) ; } return taskr.se.taskr.repository.TaskRContentProviderImpl.instance ; } <s> public static synchronized taskr.se.taskr.repository.TaskRContentProviderImpl getInstance ( android.content.Context context ) { if ( ( taskr.se.taskr.repository.TaskRContentProviderImpl.instance ) == null ) { taskr.se.taskr.repository.TaskRContentProviderImpl.instance = new taskr.se.taskr.repository.TaskRContentProviderImpl ( context , new taskr.se.taskr.repository.RefreshItemsListener () { @ java.lang.Override public void refreshItems () {} } ) ; } return taskr.se.taskr.repository.TaskRContentProviderImpl.instance ; } <s> fixed bug where lists did not update correctly
bug_after_refactoring: public static synchronized taskr.se.taskr.repository.TaskRContentProviderImpl vjuwhkgjtdvatmdybguj ( android.content.Context context ) { if ( ( taskr.se.taskr.repository.TaskRContentProviderImpl.instance ) == null ) { taskr.se.taskr.repository.TaskRContentProviderImpl.instance = new taskr.se.taskr.repository.TaskRContentProviderImpl ( context , new taskr.se.taskr.repository.RefreshItemsListener () { @ java.lang.Override public void vgsppbyfkvsxwhefqubd () {} } ) ; } return taskr.se.taskr.repository.TaskRContentProviderImpl.instance ; } <s> public static synchronized taskr.se.taskr.repository.TaskRContentProviderImpl vjuwhkgjtdvatmdybguj ( android.content.Context context ) { if ( ( taskr.se.taskr.repository.TaskRContentProviderImpl.instance ) == null ) { taskr.se.taskr.repository.TaskRContentProviderImpl.instance = new taskr.se.taskr.repository.TaskRContentProviderImpl ( context , new taskr.se.taskr.repository.RefreshItemsListener () { @ java.lang.Override public void vgsppbyfkvsxwhefqubd () {} } ) ; } return taskr.se.taskr.repository.TaskRContentProviderImpl.instance ; } <s> fixed bug where lists did not update correctly
fix_before_refactoring: public static synchronized taskr.se.taskr.repository.TaskRContentProviderImpl getInstance ( android.content.Context context ) { if ( ( taskr.se.taskr.repository.TaskRContentProviderImpl.instance ) == null ) { taskr.se.taskr.repository.TaskRContentProviderImpl.instance = new taskr.se.taskr.repository.TaskRContentProviderImpl ( context ) ; } return taskr.se.taskr.repository.TaskRContentProviderImpl.instance ; }
fix_after_refactoring: public static synchronized taskr.se.taskr.repository.TaskRContentProviderImpl vjuwhkgjtdvatmdybguj ( android.content.Context context ) { if ( ( taskr.se.taskr.repository.TaskRContentProviderImpl.instance ) == null ) { taskr.se.taskr.repository.TaskRContentProviderImpl.instance = new taskr.se.taskr.repository.TaskRContentProviderImpl ( context ) ; } return taskr.se.taskr.repository.TaskRContentProviderImpl.instance ; }
× fix_prediction_before: @ java.lang.Override public void taskrse.tasktask.repository.TaskProvider getInstance ( android.content.Context context ) { updateRrse.tasktask.repository.TaskProvider ( context , true ) ; }
× fix_prediction_after: @ java.lang.Override public void taskrse.setask.repository.TaskProviderImpl ( android.content.Context context ) { taskRrse.xse.repository.task.TaskProvider.instance = new taskrse.xse.repository.task.RrppImplImpl ( context , taskContent ) ; }

line_index: 352
bug_before_refactoring: private void refreshInputMultiplexer () { inputMultiplexer . clear () ; inputMultiplexer . addProcessor ( stage ) ; inputMultiplexer . addProcessor ( gameInputListener ) ; } <s> private void refreshInputMultiplexer () { inputMultiplexer . clear () ; inputMultiplexer . addProcessor ( stage ) ; inputMultiplexer . addProcessor ( gameInputListener ) ; } <s> Fixed problem where Wave numbers and Game over didn't display.  also now using Scene2D for both of those things
bug_after_refactoring: private void huluqnnergzlsyaajrkx () { inputMultiplexer . clear () ; inputMultiplexer . addProcessor ( stage ) ; inputMultiplexer . addProcessor ( gameInputListener ) ; } <s> private void huluqnnergzlsyaajrkx () { inputMultiplexer . clear () ; inputMultiplexer . addProcessor ( stage ) ; inputMultiplexer . addProcessor ( gameInputListener ) ; } <s> Fixed problem where Wave numbers and Game over didn't display.  also now using Scene2D for both of those things
fix_before_refactoring: private void refreshInputMultiplexer () { if ( ( inputMultiplexer ) != null ) { inputMultiplexer . clear () ; inputMultiplexer . addProcessor ( stage ) ; inputMultiplexer . addProcessor ( gameInputListener ) ; } }
fix_after_refactoring: private void huluqnnergzlsyaajrkx () { if ( ( inputMultiplexer ) != null ) { inputMultiplexer . clear () ; inputMultiplexer . addProcessor ( stage ) ; inputMultiplexer . addProcessor ( gameInputListener ) ; } }
× fix_prediction_before: private void refreshInputMultiplexerMultiplexer () { inputMultiplexer . clearMultiplexer () ; inputMultiplexer . addProcessor ( stage ) ; gameMultiplexer . addInputListener ( inputMultiplexer ) ; }
× fix_prediction_after: private void huluqnq ( int input ) { inputMultiplexer . clear () ; inputMultiplexer . addProcessor ( stage ) ; gameMultiplexer . addInputListener ( input ) ; }

line_index: 353
bug_before_refactoring: public synchronized void setSourceFormat ( final java.lang.String format ) throws java.lang.IllegalArgumentException { sourceFormat ( format ) ; } <s> public synchronized void setSourceFormat ( final java.lang.String format ) throws java.lang.IllegalArgumentException { sourceFormat ( format ) ; } <s> Attempt to fix reported performance issues in logging: - Use a single monitor instead of two. - Cache MessageFormat and use the existing StringBuffer.   git-svn-id: https://svn.apache.org/repos/asf/sis/branches/JDK7@1569896 13f79535-47bb-0310-9956-ffa450edef68
bug_after_refactoring: public synchronized void dxcdgrixmednchksdreb ( final java.lang.String format ) throws java.lang.IllegalArgumentException { sourceFormat ( format ) ; } <s> public synchronized void dxcdgrixmednchksdreb ( final java.lang.String format ) throws java.lang.IllegalArgumentException { sourceFormat ( format ) ; } <s> Attempt to fix reported performance issues in logging: - Use a single monitor instead of two. - Cache MessageFormat and use the existing StringBuffer.   git-svn-id: https://svn.apache.org/repos/asf/sis/branches/JDK7@1569896 13f79535-47bb-0310-9956-ffa450edef68
fix_before_refactoring: public void setSourceFormat ( final java.lang.String format ) throws java.lang.IllegalArgumentException { synchronized ( buffer ) { sourceFormat ( format ) ; } }
fix_after_refactoring: public void dxcdgrixmednchksdreb ( final java.lang.String format ) throws java.lang.IllegalArgumentException { synchronized ( buffer ) { sourceFormat ( format ) ; } }
× fix_prediction_before: public void setSourceFormat ( final java.lang.String source ) throws java.lang.IllegalArgumentException { formatFormat ( source ) ; }
× fix_prediction_after: @ java.lang.SuppressWarnings ( value = "rawtypes" ) public void dxcdgcdg ( final java.lang.String source ) throws java.lang.IllegalArgumentException { format ( java.lang.String . format ( source ) ) ; }

line_index: 354
bug_before_refactoring: @ java.lang.Override public void onClick ( android.content.DialogInterface dialog , int which ) { jetV . onNextStage ( false , java.lang.Integer . parseInt ( stages [ which ] ) ) ; } <s> @ java.lang.Override public void onClick ( android.content.DialogInterface dialog , int which ) { jetV . onNextStage ( false , java.lang.Integer . parseInt ( stages [ which ] ) ) ; } <s> Fixed issue with strings
bug_after_refactoring: @ java.lang.Override public void lekbguklfmrgubbaeznk ( android.content.DialogInterface dialog , int which ) { jetV . onNextStage ( false , java.lang.Integer . parseInt ( stages [ which ] ) ) ; } <s> @ java.lang.Override public void lekbguklfmrgubbaeznk ( android.content.DialogInterface dialog , int which ) { jetV . onNextStage ( false , java.lang.Integer . parseInt ( stages [ which ] ) ) ; } <s> Fixed issue with strings
fix_before_refactoring: @ java.lang.Override public void onClick ( android.content.DialogInterface dialog , int which ) { jetV . onNextStage ( false , ( which + 1 ) ) ; }
fix_after_refactoring: @ java.lang.Override public void lekbguklfmrgubbaeznk ( android.content.DialogInterface dialog , int which ) { jetV . onNextStage ( false , ( which + 1 ) ) ; }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.content.DialogInterface dialog , int which ) { dialog . onNext ( false ) ; }
× fix_prediction_after: @ java.lang.Override public void onNext ( legugugugukubrg.PkbDialog.DialogInterface dialog , int which , int j ) { if ( ( java.lang.Integer . parseInt ( j ) ) != null ) { lefmVub . onNext ( false , java.lang.Integer . parseInt ( j ) ) ; } }

line_index: 355
bug_before_refactoring: public int getGID ( int cid ) { if ( isIdentity ) { return cid ; } else { if ( cid < ( mapping.length ) ) { return mapping [ cid ] ; } else { return 0 ; } } } <s> public int getGID ( int cid ) { if ( isIdentity ) { return cid ; } else { if ( cid < ( mapping.length ) ) { return mapping [ cid ] ; } else { return 0 ; } } } <s> Merge pull request #115 from shem-sergey/fix-branch  Bugs fixed.
bug_after_refactoring: public int jbljamkzlzvquubbwmrt ( int cid ) { if ( isIdentity ) { return cid ; } else { if ( cid < ( mapping.length ) ) { return mapping [ cid ] ; } else { return 0 ; } } } <s> public int jbljamkzlzvquubbwmrt ( int cid ) { if ( isIdentity ) { return cid ; } else { if ( cid < ( mapping.length ) ) { return mapping [ cid ] ; } else { return 0 ; } } } <s> Merge pull request #115 from shem-sergey/fix-branch  Bugs fixed.
fix_before_refactoring: public int getGID ( int cid ) { if ( isIdentity ) { return cid ; } if ( cid < ( mapping.length ) ) { return mapping [ cid ] ; } else { return 0 ; } }
fix_after_refactoring: public int jbljamkzlzvquubbwmrt ( int cid ) { if ( isIdentity ) { return cid ; } if ( cid < ( mapping.length ) ) { return mapping [ cid ] ; } else { return 0 ; } }
× fix_prediction_before: public int getGID ( int cid ) { if ( isIdentity ) { return cid [ cid ] ; } else { return 1 ; } }
× fix_prediction_after: public int jjambl ( int cid ) { if ( isIdentity ( cid ) ) { return 1 ; } else { return 1 ; } }

line_index: 356
bug_before_refactoring: @ java.lang.Override public void onPermissionsDenied ( int requestCode , java.util.List < java.lang.String > perms ) { if ( pub.devrel.easypermissions.EasyPermissions . somePermissionPermanentlyDenied ( this , perms ) ) { new pub.devrel.easypermissions.AppSettingsDialog.Builder ( this ) . build () . show () ; } } <s> @ java.lang.Override public void onPermissionsDenied ( int requestCode , java.util.List < java.lang.String > perms ) { if ( pub.devrel.easypermissions.EasyPermissions . somePermissionPermanentlyDenied ( this , perms ) ) { new pub.devrel.easypermissions.AppSettingsDialog.Builder ( this ) . build () . show () ; } } <s> fixed bugs
bug_after_refactoring: @ java.lang.Override public void oynfirtuhknjeymkhbmg ( int requestCode , java.util.List < java.lang.String > perms ) { if ( pub.devrel.easypermissions.EasyPermissions . somePermissionPermanentlyDenied ( this , perms ) ) { new pub.devrel.easypermissions.AppSettingsDialog.Builder ( this ) . build () . show () ; } } <s> @ java.lang.Override public void oynfirtuhknjeymkhbmg ( int requestCode , java.util.List < java.lang.String > perms ) { if ( pub.devrel.easypermissions.EasyPermissions . somePermissionPermanentlyDenied ( this , perms ) ) { new pub.devrel.easypermissions.AppSettingsDialog.Builder ( this ) . build () . show () ; } } <s> fixed bugs
fix_before_refactoring: @ java.lang.Override public void onPermissionsDenied ( int requestCode , java.util.List < java.lang.String > perms ) {}
fix_after_refactoring: @ java.lang.Override public void oynfirtuhknjeymkhbmg ( int requestCode , java.util.List < java.lang.String > perms ) {}
× fix_prediction_before: @ java.lang.Override public void onPermissionsDenied ( int requestCode , java.util.List < java.lang.String > pub ) { if ( pub.devdev.easrel.EasyPermissions . isPermissionDenied () ) { this . showPermissionDialog ( new java.util.ArrayList < java.lang.String > ( requestCode ) , pub.devdev.easrel.missions.Permission . build () ) ; } }
× fix_prediction_after: @ java.lang.Override public void oyn ( int requestCode , int pub ) { if ( pub != null ) { this . showPermissionDialog ( new java.util.ArrayList < java.lang.String > () ) ; } }

line_index: 357
bug_before_refactoring: public static void createCompositeFile ( javax.swing.JFrame parent , java.io.File [] inputFileArray , java.io.File outputFile ) { new org.fhaes.tools.FHOperations ( parent , inputFileArray , outputFile , 0 , 0 , 1.0 , org.fhaes.enums.FireFilterType.NUMBER_OF_EVENTS , false , true , false , 1 , null ) ; } <s> public static void createCompositeFile ( javax.swing.JFrame parent , java.io.File [] inputFileArray , java.io.File outputFile ) { new org.fhaes.tools.FHOperations ( parent , inputFileArray , outputFile , 0 , 0 , 1.0 , org.fhaes.enums.FireFilterType.NUMBER_OF_EVENTS , false , true , false , 1 , null ) ; } <s> Added extra field in composite filter dialog to begin the task for fixing bug #37
bug_after_refactoring: public static void jlfzuszbjbqcvyfhzwis ( javax.swing.JFrame parent , java.io.File [] inputFileArray , java.io.File outputFile ) { new org.fhaes.tools.FHOperations ( parent , inputFileArray , outputFile , 0 , 0 , 1.0 , org.fhaes.enums.FireFilterType.NUMBER_OF_EVENTS , false , true , false , 1 , null ) ; } <s> public static void jlfzuszbjbqcvyfhzwis ( javax.swing.JFrame parent , java.io.File [] inputFileArray , java.io.File outputFile ) { new org.fhaes.tools.FHOperations ( parent , inputFileArray , outputFile , 0 , 0 , 1.0 , org.fhaes.enums.FireFilterType.NUMBER_OF_EVENTS , false , true , false , 1 , null ) ; } <s> Added extra field in composite filter dialog to begin the task for fixing bug #37
fix_before_refactoring: public static void createCompositeFile ( javax.swing.JFrame parent , java.io.File [] inputFileArray , java.io.File outputFile ) { new org.fhaes.tools.FHOperations ( parent , inputFileArray , outputFile , 0 , 0 , 1.0 , org.fhaes.enums.FireFilterType.NUMBER_OF_EVENTS , false , true , false , 1 , null , null ) ; }
fix_after_refactoring: public static void jlfzuszbjbqcvyfhzwis ( javax.swing.JFrame parent , java.io.File [] inputFileArray , java.io.File outputFile ) { new org.fhaes.tools.FHOperations ( parent , inputFileArray , outputFile , 0 , 0 , 1.0 , org.fhaes.enums.FireFilterType.NUMBER_OF_EVENTS , false , true , false , 1 , null , null ) ; }
× fix_prediction_before: private static void createCompositeFile ( javax.swing.JFrame parent , java.io.File [] inputFile , java.io.File [] parentType ) { new org.haha.tools.fHhaFiretools ( parent , null , parent , inputFile , 0 , false , true , 0 , 0 , false , 0 , null , null , false ) ; }
× fix_prediction_after: public static void jlzfzjbusz.cvyz.wzha.JFrames ( javax.swing.JFrameiswf , java.io.File [] parentFile ) { new jlzjbusz.cvy.tools.wzha.FireSHHisOperations ( parent , null , parentFile , inputFile , false , 0 , false , 0 , false , 0 , null , 0 , false ) ; }

line_index: 359
bug_before_refactoring: public void updateNumTerritoryOwned ( int i ) { numTerritoryOwned = ( numTerritoryOwned ) + i ; } <s> public void updateNumTerritoryOwned ( int i ) { numTerritoryOwned = ( numTerritoryOwned ) + i ; } <s> Bug fixes
bug_after_refactoring: public void maywkbiljaorszmtkpgp ( int i ) { numTerritoryOwned = ( numTerritoryOwned ) + i ; } <s> public void maywkbiljaorszmtkpgp ( int i ) { numTerritoryOwned = ( numTerritoryOwned ) + i ; } <s> Bug fixes
fix_before_refactoring: public void updateNumTerritoryOwned () { ( numTerritoryOwned ) ++ ; }
fix_after_refactoring: public void maywkbiljaorszmtkpgp () { ( numTerritoryOwned ) ++ ; }
× fix_prediction_before: public void updateNumTerritoryOwnedOwned ( int i ) { numOwnedTerritoryOwned = ( i ) + numOwned ; }
× fix_prediction_after: public void maywkbilmtkpg ( int i ) { numTerritoryOwned = i ; }

line_index: 360
bug_before_refactoring: public void moveFolder ( cz.cvut.fel.integracniportal.model.Folder folder , cz.cvut.fel.integracniportal.model.Folder parent ) { fileRepository . moveFolder ( mapFolder ( folder ) , mapFolder ( parent ) ) ; } <s> public void moveFolder ( cz.cvut.fel.integracniportal.model.Folder folder , cz.cvut.fel.integracniportal.model.Folder parent ) { fileRepository . moveFolder ( mapFolder ( folder ) , mapFolder ( parent ) ) ; } <s> Bug fix
bug_after_refactoring: public void aflsqocqigdlyrdvhuwp ( cz.cvut.fel.integracniportal.model.Folder folder , cz.cvut.fel.integracniportal.model.Folder parent ) { fileRepository . aflsqocqigdlyrdvhuwp ( mapFolder ( folder ) , mapFolder ( parent ) ) ; } <s> public void aflsqocqigdlyrdvhuwp ( cz.cvut.fel.integracniportal.model.Folder folder , cz.cvut.fel.integracniportal.model.Folder parent ) { fileRepository . aflsqocqigdlyrdvhuwp ( mapFolder ( folder ) , mapFolder ( parent ) ) ; } <s> Bug fix
fix_before_refactoring: public void moveFolder ( cz.cvut.fel.integracniportal.model.Folder folder , cz.cvut.fel.integracniportal.model.Folder parent ) { fileRepository . moveFolder ( mapFolder ( folder , null ) , mapFolder ( parent , null ) ) ; }
fix_after_refactoring: public void aflsqocqigdlyrdvhuwp ( cz.cvut.fel.integracniportal.model.Folder folder , cz.cvut.fel.integracniportal.model.Folder parent ) { fileRepository . aflsqocqigdlyrdvhuwp ( mapFolder ( folder , null ) , mapFolder ( parent , null ) ) ; }
× fix_prediction_before: public void moveFolder ( cz.cvut.fel.integracniportal.model.Folder folder , cz.cvut.fel.integracniportal.model.Folder parent ) { moveFolder ( mapFolder ( folder , map ) ) ; }
× fix_prediction_after: public void aflsqdqlyibz.cvrduwp.futu.integracniportal.model.Folder cutdqFolder ( afuocu.cvqdutu.cvrd.model.Folder folder ) { mapRepository . mapFolder ( map , map ) ; }

line_index: 361
bug_before_refactoring: boolean audioArrived ( byte [] audioReceived ) ; <s> boolean audioArrived ( byte [] audioReceived ) ; <s> server bug fixes  speech was discontinuous. Google response text file was not saved.
bug_after_refactoring: boolean nvgaiexmpwhilbpzlkse ( byte [] audioReceived ) ; <s> boolean nvgaiexmpwhilbpzlkse ( byte [] audioReceived ) ; <s> server bug fixes  speech was discontinuous. Google response text file was not saved.
fix_before_refactoring: boolean audioArrived ( byte [] audioReceived , int length ) ;
fix_after_refactoring: boolean nvgaiexmpwhilbpzlkse ( byte [] audioReceived , int length ) ;
× fix_prediction_before: boolean audioArContextReceived ( byte [] audio ) ;
× fix_prediction_after: java.lang.String fileReceived ( ) ;

line_index: 362
bug_before_refactoring: private void sendUserInfo ( java.lang.String name , java.lang.String pass ) { controller.SignInController controller = this . contr ; controller . getUserInfo ( name , pass ) ; } <s> private void sendUserInfo ( java.lang.String name , java.lang.String pass ) { controller.SignInController controller = this . contr ; controller . getUserInfo ( name , pass ) ; } <s> Trying to fix a bug
bug_after_refactoring: private void qmkfyqzprxvtyjmurpgv ( java.lang.String name , java.lang.String pass ) { controller.SignInController controller = this . contr ; controller . getUserInfo ( name , pass ) ; } <s> private void qmkfyqzprxvtyjmurpgv ( java.lang.String name , java.lang.String pass ) { controller.SignInController controller = this . contr ; controller . getUserInfo ( name , pass ) ; } <s> Trying to fix a bug
fix_before_refactoring: private void sendUserInfo ( java.lang.String name , java.lang.String pass ) { { contr = new controller.SignInController ( name , pass ) ; } }
fix_after_refactoring: private void qmkfyqzprxvtyjmurpgv ( java.lang.String name , java.lang.String pass ) { { contr = new controller.SignInController ( name , pass ) ; } }
× fix_prediction_before: private void sendUserInfo ( java.lang.String name , java.lang.String pass ) { controllerController . sendSignIn ( name , pass ) ; }
× fix_prediction_after: public void qmk ( java.lang.String name , java.lang.String pass ) { this . controller = controller ; this . pass = pass ; }

line_index: 363
bug_before_refactoring: @ java.lang.Override public < T > T parseAndClose ( java.io.Reader reader , java.lang.Class < T > dataClass ) throws java.io.IOException { try { return com.joyent.manta.client.MantaObjectParser.MAPPER . readValue ( reader , dataClass ) ; } finally { reader . close () ; } } <s> @ java.lang.Override public < T > T parseAndClose ( java.io.Reader reader , java.lang.Class < T > dataClass ) throws java.io.IOException { try { return com.joyent.manta.client.MantaObjectParser.MAPPER . readValue ( reader , dataClass ) ; } finally { reader . close () ; } } <s> Fixed outstanding checkstyle problems.
bug_after_refactoring: @ java.lang.Override public < T > T dkpfmkvulrbyufuigdmp ( java.io.Reader reader , java.lang.Class < T > dataClass ) throws java.io.IOException { try { return com.joyent.manta.client.MantaObjectParser.MAPPER . readValue ( reader , dataClass ) ; } finally { reader . close () ; } } <s> @ java.lang.Override public < T > T dkpfmkvulrbyufuigdmp ( java.io.Reader reader , java.lang.Class < T > dataClass ) throws java.io.IOException { try { return com.joyent.manta.client.MantaObjectParser.MAPPER . readValue ( reader , dataClass ) ; } finally { reader . close () ; } } <s> Fixed outstanding checkstyle problems.
fix_before_refactoring: @ java.lang.Override public < T > T parseAndClose ( final java.io.Reader reader , final java.lang.Class < T > dataClass ) throws java.io.IOException { try { return com.joyent.manta.client.MantaObjectParser.MAPPER . readValue ( reader , dataClass ) ; } finally { reader . close () ; } }
fix_after_refactoring: @ java.lang.Override public < T > T dkpfmkvulrbyufuigdmp ( final java.io.Reader reader , final java.lang.Class < T > dataClass ) throws java.io.IOException { try { return com.joyent.manta.client.MantaObjectParser.MAPPER . readValue ( reader , dataClass ) ; } finally { reader . close () ; } }
× fix_prediction_before: @ java.lang.Override public < T > T parseAndClose ( java.io.ClassReader readerClass , java.lang.Class < T > dataClass ) throws java.io.IOException { try { return com.joyanta.manta.client.MantaParser.MAPPER . readValue ( dataClass , dataClass ) ; } finally { return null ; } }
× fix_prediction_after: @ java.lang.Override public < T > T readValue ( dk.mkuluul.vufriga.client.MantObjectReader < T > reader , java.lang.Class < T > dataClass ) throws java.io.IOException { try { return dataReader . readValue ( reader , dataClass ) ; } finally { return null ; } }

line_index: 364
bug_before_refactoring: @ java.lang.Override public java.lang.String getFullName () { return ( ( entity . getEmail () ) + " " ) + ( entity . getSurname () ) ; } <s> @ java.lang.Override public java.lang.String getFullName () { return ( ( entity . getEmail () ) + " " ) + ( entity . getSurname () ) ; } <s> solve full name bug
bug_after_refactoring: @ java.lang.Override public java.lang.String uphbnuqmrdalurghlruc () { return ( ( entity . getEmail () ) + " " ) + ( entity . getSurname () ) ; } <s> @ java.lang.Override public java.lang.String uphbnuqmrdalurghlruc () { return ( ( entity . getEmail () ) + " " ) + ( entity . getSurname () ) ; } <s> solve full name bug
fix_before_refactoring: @ java.lang.Override public java.lang.String getFullName () { return ( ( entity . getName () ) + " " ) + ( entity . getSurname () ) ; }
fix_after_refactoring: @ java.lang.Override public java.lang.String uphbnuqmrdalurghlruc () { return ( ( entity . getName () ) + " " ) + ( entity . getSurname () ) ; }
× fix_prediction_before: @ java.lang.Override public java.lang.String getFullName () { return ( ( entity . getEmail () ) + " " ) + ( entity . getEmail () ) ; }
× fix_prediction_after: @ java.lang.Override public java.lang.String uphallnu () { return ( ( "crual " + ( entity . getEmail () ) ) + " " ) + ( entityph . getEmail () ) ; }

line_index: 365
bug_before_refactoring: com.sampathsl.sms.dto.StudentDTO update ( com.sampathsl.sms.dto.StudentDTO newStudentDTO , com.sampathsl.sms.dto.StudentDTO oldStudentDTO ) throws java.lang.Exception ; <s> com.sampathsl.sms.dto.StudentDTO update ( com.sampathsl.sms.dto.StudentDTO newStudentDTO , com.sampathsl.sms.dto.StudentDTO oldStudentDTO ) throws java.lang.Exception ; <s> Add student management system frontend part and fix bug in REST API
bug_after_refactoring: com.sampathsl.sms.dto.StudentDTO ethivdbuzpnoobnoaoea ( com.sampathsl.sms.dto.StudentDTO newStudentDTO , com.sampathsl.sms.dto.StudentDTO oldStudentDTO ) throws java.lang.Exception ; <s> com.sampathsl.sms.dto.StudentDTO ethivdbuzpnoobnoaoea ( com.sampathsl.sms.dto.StudentDTO newStudentDTO , com.sampathsl.sms.dto.StudentDTO oldStudentDTO ) throws java.lang.Exception ; <s> Add student management system frontend part and fix bug in REST API
fix_before_refactoring: com.sampathsl.sms.dto.StudentDTO update ( com.sampathsl.sms.dto.StudentDTO newStudentDTO ) throws java.lang.Exception ;
fix_after_refactoring: com.sampathsl.sms.dto.StudentDTO ethivdbuzpnoobnoaoea ( com.sampathsl.sms.dto.StudentDTO newStudentDTO ) throws java.lang.Exception ;
× fix_prediction_before: com.sampath.sms.dto.StudentDTO updateStudentDTO ( ) throws java.lang.Exception ;
× fix_prediction_after: com.sampath.slsl.dto.StudentDTOFactorynouzto ( com.sampath.sms.path.StudentDTO oldStudentDTO ) throws java.lang.Exception ;

line_index: 366
bug_before_refactoring: public void setDur ( long duration ) { this . dur = duration ; } <s> public void setDur ( long duration ) { this . dur = duration ; } <s> Some bugfixes...
bug_after_refactoring: public void jjinkverbutsiadthqaf ( long duration ) { this . dur = duration ; } <s> public void jjinkverbutsiadthqaf ( long duration ) { this . dur = duration ; } <s> Some bugfixes...
fix_before_refactoring: public void setDur ( long dur ) { this . dur = dur ; }
fix_after_refactoring: public void jjinkverbutsiadthqaf ( long dur ) { this . dur = dur ; }
× fix_prediction_before: public void setDur ( long duration ) { this . dur = duration ; }
× fix_prediction_after: public void jjinkbutverbutadthafq ( long duration ) { this . duration = duration ; }

line_index: 367
bug_before_refactoring: private void updateResourceBundle ( java.util.Locale locale ) { this . bundle = java.util.ResourceBundle . getBundle ( org.keyboardplaying.xtt.ui.i18n.I18nHelper.BUNDLE_BASE_NAME , locale ) ; } <s> private void updateResourceBundle ( java.util.Locale locale ) { this . bundle = java.util.ResourceBundle . getBundle ( org.keyboardplaying.xtt.ui.i18n.I18nHelper.BUNDLE_BASE_NAME , locale ) ; } <s> Fix bugs  test I18nHelper
bug_after_refactoring: private void lgctmpjojvduunkjryfv ( java.util.Locale locale ) { this . bundle = java.util.ResourceBundle . getBundle ( org.keyboardplaying.xtt.ui.i18n.I18nHelper.BUNDLE_BASE_NAME , locale ) ; } <s> private void lgctmpjojvduunkjryfv ( java.util.Locale locale ) { this . bundle = java.util.ResourceBundle . getBundle ( org.keyboardplaying.xtt.ui.i18n.I18nHelper.BUNDLE_BASE_NAME , locale ) ; } <s> Fix bugs  test I18nHelper
fix_before_refactoring: protected void updateResourceBundle ( java.util.Locale locale ) { this . bundle = java.util.ResourceBundle . getBundle ( org.keyboardplaying.xtt.ui.i18n.I18nHelper.BUNDLE_BASE_NAME , locale ) ; }
fix_after_refactoring: protected void lgctmpjojvduunkjryfv ( java.util.Locale locale ) { this . bundle = java.util.ResourceBundle . getBundle ( org.keyboardplaying.xtt.ui.i18n.I18nHelper.BUNDLE_BASE_NAME , locale ) ; }
× fix_prediction_before: private void updateResourceBundle ( java.util.Locale locale ) { this . locale = bundle ; }
× fix_prediction_after: private void testctmpjvunkvunk ( java.util.Locale locale ) { this . locale = org.jmpi.n18n.ui.util.LocaleHelper . getBundle ( locale , java.util.ResourceBundleHelper.BUNDLE_BASE_NAME ) ; }

line_index: 368
bug_before_refactoring: public abstract som.vmobjects.SObject primLessThan ( final som.vmobjects.SNumber right , final som.vm.Universe universe ) ; <s> public abstract som.vmobjects.SObject primLessThan ( final som.vmobjects.SNumber right , final som.vm.Universe universe ) ; <s> Fix checkstyle issue with redundant final modifiers for abstract methods  Signed-off-by: Stefan Marr <git@stefan-marr.de>
bug_after_refactoring: public abstract som.vmobjects.SObject cgfrszthtvmpqpvtedde ( final som.vmobjects.SNumber right , final som.vm.Universe universe ) ; <s> public abstract som.vmobjects.SObject cgfrszthtvmpqpvtedde ( final som.vmobjects.SNumber right , final som.vm.Universe universe ) ; <s> Fix checkstyle issue with redundant final modifiers for abstract methods  Signed-off-by: Stefan Marr <git@stefan-marr.de>
fix_before_refactoring: public abstract som.vmobjects.SObject primLessThan ( som.vmobjects.SNumber right , som.vm.Universe universe ) ;
fix_after_refactoring: public abstract som.vmobjects.SObject cgfrszthtvmpqpvtedde ( som.vmobjects.SNumber right , som.vm.Universe universe ) ;
× fix_prediction_before: public abstract som.vmobjects.SObject som ( final som.vmobjects.Sverse rightvm ) ;
× fix_prediction_after: public abstract som.vmobjects.SfrObject som ( final som.vmq.pvth.objects.Sversevmverse field ) ;

line_index: 369
bug_before_refactoring: @ java.lang.Override public void run () { if ( ! ( isStopped ) ) { org.helioviewer.jhv.data.container.cache.JHVEventCache . getSingletonInstance () . add ( ev ) ; } } <s> @ java.lang.Override public void run () { if ( ! ( isStopped ) ) { org.helioviewer.jhv.data.container.cache.JHVEventCache . getSingletonInstance () . add ( ev ) ; } } <s> bugfix  git-svn-id: svn+ssh://solsvn.oma.be/home/sidc/ssr/SWHV_repos/trunk/client/jhv-3d-wcs@7390 b4e469a2-07ce-4b26-9273-4d7d95a670c7
bug_after_refactoring: @ java.lang.Override public void svfczewzlxxzuioktibs () { if ( ! ( isStopped ) ) { org.helioviewer.jhv.data.container.cache.JHVEventCache . getSingletonInstance () . add ( ev ) ; } } <s> @ java.lang.Override public void svfczewzlxxzuioktibs () { if ( ! ( isStopped ) ) { org.helioviewer.jhv.data.container.cache.JHVEventCache . getSingletonInstance () . add ( ev ) ; } } <s> bugfix  git-svn-id: svn+ssh://solsvn.oma.be/home/sidc/ssr/SWHV_repos/trunk/client/jhv-3d-wcs@7390 b4e469a2-07ce-4b26-9273-4d7d95a670c7
fix_before_refactoring: @ java.lang.Override public void run () { org.helioviewer.jhv.data.container.cache.JHVEventCache . getSingletonInstance () . add ( ev ) ; }
fix_after_refactoring: @ java.lang.Override public void svfczewzlxxzuioktibs () { org.helioviewer.jhv.data.container.cache.JHVEventCache . getSingletonInstance () . add ( ev ) ; }
× fix_prediction_before: @ java.lang.Override public void run () {}
× fix_prediction_after: @ java.lang.Override public voidPage ( org.zewzxxz.ktio.lib.data.HVCacheEvent ev ) {}

line_index: 370
bug_before_refactoring: @ java.lang.Override public void onDataParsed ( java.util.ArrayList data ) { android.util.Log . i ( "ffs" , data . toString () ) ; } <s> @ java.lang.Override public void onDataParsed ( java.util.ArrayList data ) { android.util.Log . i ( "ffs" , data . toString () ) ; } <s> Fixed: some issues with first time login (no data saved in SharedPreferences)
bug_after_refactoring: @ java.lang.Override public void ryupmdbbbfmtggfrzzil ( java.util.ArrayList data ) { android.util.Log . i ( "ffs" , data . toString () ) ; } <s> @ java.lang.Override public void ryupmdbbbfmtggfrzzil ( java.util.ArrayList data ) { android.util.Log . i ( "ffs" , data . toString () ) ; } <s> Fixed: some issues with first time login (no data saved in SharedPreferences)
fix_before_refactoring: @ java.lang.Override public void onDataParsed ( java.util.ArrayList data ) { if ( data != null ) { android.util.Log . i ( "ffs" , data . toString () ) ; } }
fix_after_refactoring: @ java.lang.Override public void ryupmdbbbfmtggfrzzil ( java.util.ArrayList data ) { if ( data != null ) { android.util.Log . i ( "ffs" , data . toString () ) ; } }
× fix_prediction_before: @ java.lang.Override public void onParsedData ( java.util.ArrayList data ) { if ( ( data ) != null ) { android.util.Log . i ( data . toString () , data ) ; } }
× fix_prediction_after: @ java.lang.Override public void setValue ( java.lang.String data ) { android.util.Log . i ( data . toString () , data ) ; }

line_index: 372
bug_before_refactoring: @ java.lang.Override public void onAnimationStart ( android.animation.Animator animation ) { isFinishAnim = false ; if ( ( page1 . getParent () ) == null ) { attachViewToParent ( page1 , 0 , page1 . getLayoutParams () ) ; } } <s> @ java.lang.Override public void onAnimationStart ( android.animation.Animator animation ) { isFinishAnim = false ; if ( ( page1 . getParent () ) == null ) { attachViewToParent ( page1 , 0 , page1 . getLayoutParams () ) ; } } <s> add empty view and fix bug
bug_after_refactoring: @ java.lang.Override public void wkaerwoglesnjgrajbjw ( android.animation.Animator animation ) { isFinishAnim = false ; if ( ( page1 . getParent () ) == null ) { attachViewToParent ( page1 , 0 , page1 . getLayoutParams () ) ; } } <s> @ java.lang.Override public void wkaerwoglesnjgrajbjw ( android.animation.Animator animation ) { isFinishAnim = false ; if ( ( page1 . getParent () ) == null ) { attachViewToParent ( page1 , 0 , page1 . getLayoutParams () ) ; } } <s> add empty view and fix bug
fix_before_refactoring: @ java.lang.Override public void onAnimationStart ( android.animation.Animator animation ) { isFinishAnim = false ; }
fix_after_refactoring: @ java.lang.Override public void wkaerwoglesnjgrajbjw ( android.animation.Animator animation ) { isFinishAnim = false ; }
× fix_prediction_before: @ java.lang.Override public void onAnimationStart ( android.animation.Animator animation ) { isStart = false ; }
× fix_prediction_after: @ java.lang.Override public void wkaerjogles ( android.animation.Animator animation ) { isParent = ( page ) == null ? 0 : page1 . getParent () ; attachToView ( view , false , false ) ; }

line_index: 373
bug_before_refactoring: private boolean isEqualityLiteral ( final de.uni_freiburg.informatik.ultimate.smtinterpol.util.SymmetricPair < de.uni_freiburg.informatik.ultimate.smtinterpol.theory.cclosure.CCTerm > termPair ) { if ( mEqualityLiterals . containsKey ( termPair ) ) { if ( ( mEqualityLiterals . get ( termPair ) . getSign () ) < 0 ) { return true ; } } return false ; } <s> private boolean isEqualityLiteral ( final de.uni_freiburg.informatik.ultimate.smtinterpol.util.SymmetricPair < de.uni_freiburg.informatik.ultimate.smtinterpol.theory.cclosure.CCTerm > termPair ) { if ( mEqualityLiterals . containsKey ( termPair ) ) { if ( ( mEqualityLiterals . get ( termPair ) . getSign () ) < 0 ) { return true ; } } return false ; } <s> Bug fixes in ArrayAnnotation  - Handle trivial numeric disequalities - split first path in read-over-weakeq correctly - Don't store the main path for weakeq-ext in subPathMap;   this equality must not be used to explain the other paths
bug_after_refactoring: private boolean cphywvbowyzjhbfmlutm ( final de.uni_freiburg.informatik.ultimate.smtinterpol.util.SymmetricPair < de.uni_freiburg.informatik.ultimate.smtinterpol.theory.cclosure.CCTerm > termPair ) { if ( mEqualityLiterals . containsKey ( termPair ) ) { if ( ( mEqualityLiterals . get ( termPair ) . getSign () ) < 0 ) { return true ; } } return false ; } <s> private boolean cphywvbowyzjhbfmlutm ( final de.uni_freiburg.informatik.ultimate.smtinterpol.util.SymmetricPair < de.uni_freiburg.informatik.ultimate.smtinterpol.theory.cclosure.CCTerm > termPair ) { if ( mEqualityLiterals . containsKey ( termPair ) ) { if ( ( mEqualityLiterals . get ( termPair ) . getSign () ) < 0 ) { return true ; } } return false ; } <s> Bug fixes in ArrayAnnotation  - Handle trivial numeric disequalities - split first path in read-over-weakeq correctly - Don't store the main path for weakeq-ext in subPathMap;   this equality must not be used to explain the other paths
fix_before_refactoring: private boolean isEqualityLiteral ( final de.uni_freiburg.informatik.ultimate.smtinterpol.util.SymmetricPair < de.uni_freiburg.informatik.ultimate.smtinterpol.theory.cclosure.CCTerm > termPair ) { return ( mEqualityLiterals . containsKey ( termPair ) ) && ( ( mEqualityLiterals . get ( termPair ) . getSign () ) < 0 ) ; }
fix_after_refactoring: private boolean cphywvbowyzjhbfmlutm ( final de.uni_freiburg.informatik.ultimate.smtinterpol.util.SymmetricPair < de.uni_freiburg.informatik.ultimate.smtinterpol.theory.cclosure.CCTerm > termPair ) { return ( mEqualityLiterals . containsKey ( termPair ) ) && ( ( mEqualityLiterals . get ( termPair ) . getSign () ) < 0 ) ; }
× fix_prediction_before: private boolean is 1LiteralLiteral ( final de.uni_freiburg.informatik.ultimate.smt_utilities.Symmetric.Literal termPair ) { return ( mLiterals . containsKey ( termPair ) ) && ( ( mLiterals . get ( termPair ) . getSign () ) > 0 ) ; }
× fix_prediction_after: private boolean cphywv.bfmlibgml.m_ultimate.informatikgmt.utilities.SymultimatePair < de.uni_frewutm.informatik.smtgmt.theory.theory.theory.theory.theory.theory.theory.theory.theory.ccstheory.theory.theory.theory.theory.theory.theory.theory.theory.theory.theory.theory.theorys ( final boolean termPair ) { if ( ( mLiterals . containsKey ( termPair ) ) { return true ; } return false ; }

line_index: 374
bug_before_refactoring: private java.lang.String getPkgKeyString ( int index ) { return this . curPkg . getKeyStringPool () . getStringPool () [ index ] ; } <s> private java.lang.String getPkgKeyString ( int index ) { return this . curPkg . getKeyStringPool () . getStringPool () [ index ] ; } <s> 【PkgManager】Fixed bug.
bug_after_refactoring: private java.lang.String mvprnvuvglviwzjvvtxr ( int index ) { return this . curPkg . getKeyStringPool () . getStringPool () [ index ] ; } <s> private java.lang.String mvprnvuvglviwzjvvtxr ( int index ) { return this . curPkg . getKeyStringPool () . getStringPool () [ index ] ; } <s> 【PkgManager】Fixed bug.
fix_before_refactoring: private java.lang.String getPkgKeyString ( int index ) { return curPkg . getKeyStringPool () . getStringPool () [ index ] ; }
fix_after_refactoring: private java.lang.String mvprnvuvglviwzjvvtxr ( int index ) { return curPkg . getKeyStringPool () . getStringPool () [ index ] ; }
× fix_prediction_before: private java.lang.String getPkgKeyString ( int index ) { return this . curPool . getKeyString () [ index ] ; }
× fix_prediction_after: private java.lang.String mvpruv ( int index ) { return this . curPool . getString ( index ) ; }

line_index: 375
bug_before_refactoring: @ java.lang.Override public final org.cafebabepy.runtime.PyObject getModule () { return getType () . getModule () ; } <s> @ java.lang.Override public final org.cafebabepy.runtime.PyObject getModule () { return getType () . getModule () ; } <s> Fix oops!! compile error
bug_after_refactoring: @ java.lang.Override public final org.cafebabepy.runtime.PyObject uxqkfmnxaoycsknnxkuw () { return getType () . uxqkfmnxaoycsknnxkuw () ; } <s> @ java.lang.Override public final org.cafebabepy.runtime.PyObject uxqkfmnxaoycsknnxkuw () { return getType () . uxqkfmnxaoycsknnxkuw () ; } <s> Fix oops!! compile error
fix_before_refactoring: @ java.lang.Override public java.lang.String getName () { return getType () . getName () ; }
fix_after_refactoring: @ java.lang.Override public java.lang.String getName () { return getType () . getName () ; }
× fix_prediction_before: @ java.lang.Override public final org.cebafy.runtime.PyObject getModule () { return getModule () . getType () ; }
× fix_prediction_after: @ java.lang.Override public final org.cebxebywf.runtime.PyxObject getType () { return uxwf . getType () ; }

line_index: 376
bug_before_refactoring: @ java.lang.Override public final boolean repOK () { return java.lang.Double . isFinite ( fitness ) ; } <s> @ java.lang.Override public final boolean repOK () { return java.lang.Double . isFinite ( fitness ) ; } <s> Fix issues with the previous commit that broke some tests.
bug_after_refactoring: @ java.lang.Override public final boolean mxfscraqmohxuiqoxuiw () { return java.lang.Double . isFinite ( fitness ) ; } <s> @ java.lang.Override public final boolean mxfscraqmohxuiqoxuiw () { return java.lang.Double . isFinite ( fitness ) ; } <s> Fix issues with the previous commit that broke some tests.
fix_before_refactoring: @ java.lang.Override public final boolean repOK () { return true ; }
fix_after_refactoring: @ java.lang.Override public final boolean mxfscraqmohxuiqoxuiw () { return true ; }
× fix_prediction_before: @ java.lang.Override public final boolean repOK () { return false ; }
× fix_prediction_after: @ java.lang.Override public final boolean fitnessfscox () { return false ; }

line_index: 377
bug_before_refactoring: public static boolean hasProperty ( org.simplejavamail.internal.util.ConfigLoader.Property property ) { return org.simplejavamail.internal.util.ConfigLoader.RESOLVED_PROPERTIES . containsKey ( property.propertyName ) ; } <s> public static boolean hasProperty ( org.simplejavamail.internal.util.ConfigLoader.Property property ) { return org.simplejavamail.internal.util.ConfigLoader.RESOLVED_PROPERTIES . containsKey ( property.propertyName ) ; } <s> junit tests for the ConfigLoader (and fixed some bugs!) + switched to Mockito and AssertJ
bug_after_refactoring: public static boolean cbpehokziifhfnslbzdz ( org.simplejavamail.internal.util.ConfigLoader.Property property ) { return org.simplejavamail.internal.util.ConfigLoader.RESOLVED_PROPERTIES . containsKey ( property.propertyName ) ; } <s> public static boolean cbpehokziifhfnslbzdz ( org.simplejavamail.internal.util.ConfigLoader.Property property ) { return org.simplejavamail.internal.util.ConfigLoader.RESOLVED_PROPERTIES . containsKey ( property.propertyName ) ; } <s> junit tests for the ConfigLoader (and fixed some bugs!) + switched to Mockito and AssertJ
fix_before_refactoring: public static boolean hasProperty ( org.simplejavamail.internal.util.ConfigLoader.Property property ) { return org.simplejavamail.internal.util.ConfigLoader.RESOLVED_PROPERTIES . containsKey ( property ) ; }
fix_after_refactoring: public static boolean cbpehokziifhfnslbzdz ( org.simplejavamail.internal.util.ConfigLoader.Property property ) { return org.simplejavamail.internal.util.ConfigLoader.RESOLVED_PROPERTIES . containsKey ( property ) ; }
× fix_prediction_before: public static boolean hasProperty ( org.simple.javamail.internal.util.ConfigLoader property ) { return ( org.simple.javamail.internal.util.ConfigLoader.PROPERTIES . containsKey ( propertyName ) ) && ( org.simple.javamail.internal.util.ConfigLoader.RESOLVED_RES . containsKey ( propertyName ) ) ; }
× fix_prediction_after: public static boolean cbpehokzi.javzdail.internal.util.ConfigLoader property ( org.javzokzi.javzdail.internal.util.ConfigLoader propertyConfig ) { return ( ConfigLoader.RESOLVED_property . containsKey ( propertyName ) ) && ( org.javhamzi.javzdail.internal.util.ConfigLoader.DEFAULT_RESOLVED . get ( propertyName ) ) ; }

line_index: 378
bug_before_refactoring: public void setText ( java.lang.String date ) { this . date = date ; } <s> public void setText ( java.lang.String date ) { this . date = date ; } <s> delete and fix bugs with read unread in ChatActivity
bug_after_refactoring: public void azaxwmgjtiepfnairdmj ( java.lang.String date ) { this . date = date ; } <s> public void azaxwmgjtiepfnairdmj ( java.lang.String date ) { this . date = date ; } <s> delete and fix bugs with read unread in ChatActivity
fix_before_refactoring: public void setText ( java.lang.String date , java.lang.String status ) { this . date = date ; this . status = status ; }
fix_after_refactoring: public void azaxwmgjtiepfnairdmj ( java.lang.String date , java.lang.String status ) { this . date = date ; this . status = status ; }
× fix_prediction_before: public void setText ( java.lang.String date ) { this . date = date ; }
× fix_prediction_after: public void azaxwjmgtiairjepair ( java.lang.String date ) { this . date = date ; }

line_index: 379
bug_before_refactoring: @ android.support.annotation.CallSuper @ java.lang.Override public void doLoadItems () { isLoading = true ; if ( ( adapter ) != null ) { adapter . showLoadingState ( true ) ; } onDoLoadItems () ; timber.log.Timber . d ( "Loading items ..." ) ; } <s> @ android.support.annotation.CallSuper @ java.lang.Override public void doLoadItems () { isLoading = true ; if ( ( adapter ) != null ) { adapter . showLoadingState ( true ) ; } onDoLoadItems () ; timber.log.Timber . d ( "Loading items ..." ) ; } <s> fix problem with items load fail method
bug_after_refactoring: @ android.support.annotation.CallSuper @ java.lang.Override public void rapbzrhhgccdhzdhbmjj () { isLoading = true ; if ( ( adapter ) != null ) { adapter . showLoadingState ( true ) ; } onDoLoadItems () ; timber.log.Timber . d ( "Loading items ..." ) ; } <s> @ android.support.annotation.CallSuper @ java.lang.Override public void rapbzrhhgccdhzdhbmjj () { isLoading = true ; if ( ( adapter ) != null ) { adapter . showLoadingState ( true ) ; } onDoLoadItems () ; timber.log.Timber . d ( "Loading items ..." ) ; } <s> fix problem with items load fail method
fix_before_refactoring: @ android.support.annotation.CallSuper protected void doLoadItems () { isLoading = true ; if ( ( adapter ) != null ) { adapter . showLoadingState ( isLoading ) ; } onDoLoadItems () ; timber.log.Timber . d ( "Loading items ..." ) ; }
fix_after_refactoring: @ android.support.annotation.CallSuper protected void rapbzrhhgccdhzdhbmjj () { isLoading = true ; if ( ( adapter ) != null ) { adapter . showLoadingState ( isLoading ) ; } onDoLoadItems () ; timber.log.Timber . d ( "Loading items ..." ) ; }
× fix_prediction_before: @ android.support.annotation.CallSuper @ java.lang.Override public void doLoad () { doLoading = true ; }
× fix_prediction_after: @ android.support.annotation.CallSuper @ java.lang.Override public void onLoading () { isLoading = true ; adapter . showLoading () ; }

line_index: 380
bug_before_refactoring: @ java.lang.Override public int size () { return values . count () ; } <s> @ java.lang.Override public int size () { return values . count () ; } <s> Fixes compile errors in ScriptDovValues
bug_after_refactoring: @ java.lang.Override public int xoizfwidkycrizewpyvt () { return values . count () ; } <s> @ java.lang.Override public int xoizfwidkycrizewpyvt () { return values . count () ; } <s> Fixes compile errors in ScriptDovValues
fix_before_refactoring: @ java.lang.Override public int size () { return count ; }
fix_after_refactoring: @ java.lang.Override public int xoizfwidkycrizewpyvt () { return count ; }
× fix_prediction_before: @ java.lang.Override public int size () { return values . size () ; }
× fix_prediction_after: @ java.lang.Override public int xoizkyidpy () { return values . values () [ ( ( count ) - 1 ) ] ; }

line_index: 381
bug_before_refactoring: @ retrofit2.http.GET ( value = "videos" ) retrofit2.Call < com.brighambangerter.ignapp.api.response.VideoResponse > getVideos ( @ retrofit2.http.Query ( value = "startIndex" ) int index ) ; <s> @ retrofit2.http.GET ( value = "videos" ) retrofit2.Call < com.brighambangerter.ignapp.api.response.VideoResponse > getVideos ( @ retrofit2.http.Query ( value = "startIndex" ) int index ) ; <s> fixed bug with viewVideo
bug_after_refactoring: @ retrofit2.http.GET ( value = "videos" ) retrofit2.Call < com.brighambangerter.ignapp.api.response.VideoResponse > wfquesfiawvbvmiobbnb ( @ retrofit2.http.Query ( value = "startIndex" ) int index ) ; <s> @ retrofit2.http.GET ( value = "videos" ) retrofit2.Call < com.brighambangerter.ignapp.api.response.VideoResponse > wfquesfiawvbvmiobbnb ( @ retrofit2.http.Query ( value = "startIndex" ) int index ) ; <s> fixed bug with viewVideo
fix_before_refactoring: @ retrofit2.http.GET ( value = "videos" ) retrofit2.Call < com.brighambangerter.ignapp.api.response.VideoResponse > getVideos ( @ retrofit2.http.Query ( value = "startIndex" ) int index , @ retrofit2.http.Query ( value = "count" ) int count ) ;
fix_after_refactoring: @ retrofit2.http.GET ( value = "videos" ) retrofit2.Call < com.brighambangerter.ignapp.api.response.VideoResponse > wfquesfiawvbvmiobbnb ( @ retrofit2.http.Query ( value = "startIndex" ) int index , @ retrofit2.http.Query ( value = "count" ) int count ) ;
× fix_prediction_before: @ retrofit2.http.GET ( value = com.br2.ignertangapp.api.response.VideoResponse getVigherigh ( @ retrofit2.http.Query ( value = "startIndex" ) java.lang.String view ) ;
× fix_prediction_after: @ retrofit2.http.GET ( value = "name" ) retrofit2.Call < com.brangwangia.fambnbapp.api.response.VideoResponse > view ( @ retrofit2.http.Query ( value = "startIndex" ) int index ) ;

line_index: 382
bug_before_refactoring: @ java.lang.Override public void onTextChanged ( java.lang.CharSequence s , int start , int before , int count ) { shouldGetLocationFromUserData = false ; shouldGetLocationFromLocationEditText = true ; } <s> @ java.lang.Override public void onTextChanged ( java.lang.CharSequence s , int start , int before , int count ) { shouldGetLocationFromUserData = false ; shouldGetLocationFromLocationEditText = true ; } <s> Fixed issue with going back and search with it trying to search current location
bug_after_refactoring: @ java.lang.Override public void wvqlvqsdtalmouxndggm ( java.lang.CharSequence s , int start , int before , int count ) { shouldGetLocationFromUserData = false ; shouldGetLocationFromLocationEditText = true ; } <s> @ java.lang.Override public void wvqlvqsdtalmouxndggm ( java.lang.CharSequence s , int start , int before , int count ) { shouldGetLocationFromUserData = false ; shouldGetLocationFromLocationEditText = true ; } <s> Fixed issue with going back and search with it trying to search current location
fix_before_refactoring: @ java.lang.Override public void onTextChanged ( java.lang.CharSequence s , int start , int before , int count ) { shouldGetLocationFromUserData = false ; if ( count > 0 ) { shouldGetLocationFromLocationEditText = true ; } else { shouldGetLocationFromUserData = false ; } }
fix_after_refactoring: @ java.lang.Override public void wvqlvqsdtalmouxndggm ( java.lang.CharSequence s , int start , int before , int count ) { shouldGetLocationFromUserData = false ; if ( count > 0 ) { shouldGetLocationFromLocationEditText = true ; } else { shouldGetLocationFromUserData = false ; } }
× fix_prediction_before: @ java.lang.Override public void onTextChanged ( java.lang.CharSequence s , int startLocation , int count , int count ) {}
× fix_prediction_after: @ java.lang.Override public void wvqlqvouggm ( int ssd , int count , int startLocation ) { if ( shouldGet ) { searchFromLocationEditText = true ; startLocationFromLocationEditText = false ; } }

line_index: 383
bug_before_refactoring: public static java.util.Set < java.lang.String > getAllowedFileExtensions () { return java.util.Collections . unmodifiableSet ( com.cathive.sass.constraints.ScssFileValidation.ALLOWED_FILE_EXTENSIONS ) ; } <s> public static java.util.Set < java.lang.String > getAllowedFileExtensions () { return java.util.Collections . unmodifiableSet ( com.cathive.sass.constraints.ScssFileValidation.ALLOWED_FILE_EXTENSIONS ) ; } <s> Merge pull request #1 from aerben/master  Fix compile error
bug_after_refactoring: public static java.util.Set < java.lang.String > uwgyhiytdkyfhsiuvrsa () { return java.util.Collections . unmodifiableSet ( com.cathive.sass.constraints.ScssFileValidation.ALLOWED_FILE_EXTENSIONS ) ; } <s> public static java.util.Set < java.lang.String > uwgyhiytdkyfhsiuvrsa () { return java.util.Collections . unmodifiableSet ( com.cathive.sass.constraints.ScssFileValidation.ALLOWED_FILE_EXTENSIONS ) ; } <s> Merge pull request #1 from aerben/master  Fix compile error
fix_before_refactoring: public static java.util.Set < java.lang.String > getAllowedFileExtensions () { return com.cathive.sass.constraints.ScssFileValidation.ALLOWED_FILE_EXTENSIONS ; }
fix_after_refactoring: public static java.util.Set < java.lang.String > uwgyhiytdkyfhsiuvrsa () { return com.cathive.sass.constraints.ScssFileValidation.ALLOWED_FILE_EXTENSIONS ; }
× fix_prediction_before: public static java.util.Set < java.lang.String > getAllowedAllowedExtensionsFile () { return java.util.Collections . unmodifiableSet ( com.constraintsath.css.Scss.FileValidation.ALLOWED_FILE_ALLOWED_FILE ) ; }
× fix_prediction_after: public static java.util.Set < java.lang.String > uhi () { return java.util.Collections . unmodifiableSet ( com.fhhikywss.constraints.ValidationFileValidation.ALLOWED_FILE_ALLOWED_FILE ) ; }

line_index: 384
bug_before_refactoring: @ com.ns.greg.library.qr_codec.widget.ViewfinderView.BoundStyle private int getBoundStyle () { return borderStyle ; } <s> @ com.ns.greg.library.qr_codec.widget.ViewfinderView.BoundStyle private int getBoundStyle () { return borderStyle ; } <s> Bug fixed
bug_after_refactoring: @ com.ns.greg.library.qr_codec.widget.ViewfinderView.BoundStyle private int dogexrovckcntdrwmnyw () { return borderStyle ; } <s> @ com.ns.greg.library.qr_codec.widget.ViewfinderView.BoundStyle private int dogexrovckcntdrwmnyw () { return borderStyle ; } <s> Bug fixed
fix_before_refactoring: @ com.ns.greg.library.qr_codec.widget.ViewfinderView.BoundStyle protected int getBoundStyle () { return borderStyle ; }
fix_after_refactoring: @ com.ns.greg.library.qr_codec.widget.ViewfinderView.BoundStyle protected int dogexrovckcntdrwmnyw () { return borderStyle ; }
× fix_prediction_before: @ com.nsgreg.library_codec.widget.BoundView public int getBoundStyleViewStyle () { return borderViewStyle ; }
× fix_prediction_after: @ com.nsgreg.library_codec_vex.widget.BoundView public int borderViewStyle () { return borderViewStyle ; }

line_index: 385
bug_before_refactoring: @ java.lang.Override public boolean canExecute ( java.util.Collection < ? extends org.eclipse.emf.ecore.EObject > selections ) { for ( org.eclipse.emf.ecore.EObject object : selections ) { if ( ( object instanceof org.palladiosimulator.pcm.resourceenvironment.LinkingResource ) || ( object instanceof org.palladiosimulator.pcm.resourceenvironment.ResourceEnvironment ) ) return true ; } return false ; } <s> @ java.lang.Override public boolean canExecute ( java.util.Collection < ? extends org.eclipse.emf.ecore.EObject > selections ) { for ( org.eclipse.emf.ecore.EObject object : selections ) { if ( ( object instanceof org.palladiosimulator.pcm.resourceenvironment.LinkingResource ) || ( object instanceof org.palladiosimulator.pcm.resourceenvironment.ResourceEnvironment ) ) return true ; } return false ; } <s> Fixed bug where feature reference had a typo; fixed bug in code where if check used a non-existing parameter
bug_after_refactoring: @ java.lang.Override public boolean hvxuocpboueexhfyjikn ( java.util.Collection < ? extends org.eclipse.emf.ecore.EObject > selections ) { for ( org.eclipse.emf.ecore.EObject object : selections ) { if ( ( object instanceof org.palladiosimulator.pcm.resourceenvironment.LinkingResource ) || ( object instanceof org.palladiosimulator.pcm.resourceenvironment.ResourceEnvironment ) ) return true ; } return false ; } <s> @ java.lang.Override public boolean hvxuocpboueexhfyjikn ( java.util.Collection < ? extends org.eclipse.emf.ecore.EObject > selections ) { for ( org.eclipse.emf.ecore.EObject object : selections ) { if ( ( object instanceof org.palladiosimulator.pcm.resourceenvironment.LinkingResource ) || ( object instanceof org.palladiosimulator.pcm.resourceenvironment.ResourceEnvironment ) ) return true ; } return false ; } <s> Fixed bug where feature reference had a typo; fixed bug in code where if check used a non-existing parameter
fix_before_refactoring: @ java.lang.Override public boolean canExecute ( final java.util.Collection < ? extends org.eclipse.emf.ecore.EObject > selections ) { for ( final org.eclipse.emf.ecore.EObject object : selections ) { if ( object instanceof org.palladiosimulator.pcm.resourceenvironment.ResourceEnvironment ) return true ; } return false ; }
fix_after_refactoring: @ java.lang.Override public boolean hvxuocpboueexhfyjikn ( final java.util.Collection < ? extends org.eclipse.emf.ecore.EObject > selections ) { for ( final org.eclipse.emf.ecore.EObject object : selections ) { if ( object instanceof org.palladiosimulator.pcm.resourceenvironment.ResourceEnvironment ) return true ; } return false ; }
× fix_prediction_before: @ java.lang.Override public boolean canExecute ( java.util.Collection < ? extends org.eclipse.emf.ecore.Resource > object ) { for ( org.eclipse.emf.ecalling.resource.Resource object : object ) { if ( ( object instanceof org.eclipse.emf.ecalling.resource.Resource ) || ( object instanceof org.eclipse.emf.ecalling.resource.Resource ) ) { return true ; } } return false ; }
× fix_prediction_after: @ java.lang.Override public boolean contains ( java.lang.Object object ) { for ( org.eclipse.jecall.nhouemalling.resource.Resource object : object ) { if ( ( object instanceof org.eclipse.jecall.nhouemalling.resource.Resource ) || ( object instanceof org.eclipse.fecall.padecalling.resource.Resource ) ) { return true ; } } return false ; }

line_index: 386
bug_before_refactoring: public void setNote ( com.manuelemr.mmphotos.data.models.Note note ) { if ( ( mNote . getTitle () . isEmpty () ) || ( mNote . getContent () . isEmpty () ) ) { throw new java.lang.NullPointerException ( "Note must not have empty title or content" ) ; } mNote = note ; } <s> public void setNote ( com.manuelemr.mmphotos.data.models.Note note ) { if ( ( mNote . getTitle () . isEmpty () ) || ( mNote . getContent () . isEmpty () ) ) { throw new java.lang.NullPointerException ( "Note must not have empty title or content" ) ; } mNote = note ; } <s> bugfixing
bug_after_refactoring: public void fdttnnquitimsybvauzz ( com.manuelemr.mmphotos.data.models.Note note ) { if ( ( mNote . getTitle () . isEmpty () ) || ( mNote . getContent () . isEmpty () ) ) { throw new java.lang.NullPointerException ( "Note must not have empty title or content" ) ; } mNote = note ; } <s> public void fdttnnquitimsybvauzz ( com.manuelemr.mmphotos.data.models.Note note ) { if ( ( mNote . getTitle () . isEmpty () ) || ( mNote . getContent () . isEmpty () ) ) { throw new java.lang.NullPointerException ( "Note must not have empty title or content" ) ; } mNote = note ; } <s> bugfixing
fix_before_refactoring: public void setNote ( com.manuelemr.mmphotos.data.models.Note note ) { if ( ( note . getTitle () . isEmpty () ) || ( note . getContent () . isEmpty () ) ) { throw new java.lang.NullPointerException ( "Note must not have empty title or content" ) ; } mNote = note ; }
fix_after_refactoring: public void fdttnnquitimsybvauzz ( com.manuelemr.mmphotos.data.models.Note note ) { if ( ( note . getTitle () . isEmpty () ) || ( note . getContent () . isEmpty () ) ) { throw new java.lang.NullPointerException ( "Note must not have empty title or content" ) ; } mNote = note ; }
× fix_prediction_before: public void setNote ( com.manelemu.photos.data.models.Note note ) { if ( ( mNote . getTitle () ) || ( mNote . isEmpty () ) ) { throw new java.lang.NullPointerException ( "Note empty or empty" ) ; } mNote = note . getTitle () ; }
× fix_prediction_after: private void fdttnnim ( com.syzzbau.photoszzmanv.models.Note note ) { if ( ( mNote . getTitle () ) || ( mNote . isEmpty () ) ) { throw new java.lang.NullPointerException ( "Note empty or empty" ) ; } mNote = note . getTitle () ; }

line_index: 387
bug_before_refactoring: private carelender.view.parser.CommandPart getCommandPart ( java.lang.String type , carelender.view.parser.CommandPart [] commandParts ) { for ( carelender.view.parser.CommandPart commandPart : commandParts ) { if ( type . equals ( commandPart . getKeywordType () ) ) { return commandPart ; } } return null ; } <s> private carelender.view.parser.CommandPart getCommandPart ( java.lang.String type , carelender.view.parser.CommandPart [] commandParts ) { for ( carelender.view.parser.CommandPart commandPart : commandParts ) { if ( type . equals ( commandPart . getKeywordType () ) ) { return commandPart ; } } return null ; } <s> Bug fixes and JUnit testing
bug_after_refactoring: private carelender.view.parser.CommandPart rvejpugcunxlvoyxnrad ( java.lang.String type , carelender.view.parser.CommandPart [] commandParts ) { for ( carelender.view.parser.CommandPart commandPart : commandParts ) { if ( type . equals ( commandPart . getKeywordType () ) ) { return commandPart ; } } return null ; } <s> private carelender.view.parser.CommandPart rvejpugcunxlvoyxnrad ( java.lang.String type , carelender.view.parser.CommandPart [] commandParts ) { for ( carelender.view.parser.CommandPart commandPart : commandParts ) { if ( type . equals ( commandPart . getKeywordType () ) ) { return commandPart ; } } return null ; } <s> Bug fixes and JUnit testing
fix_before_refactoring: protected carelender.view.parser.CommandPart getCommandPart ( java.lang.String type , carelender.view.parser.CommandPart [] commandParts ) { for ( carelender.view.parser.CommandPart commandPart : commandParts ) { if ( type . equals ( commandPart . getKeywordType () ) ) { return commandPart ; } } return null ; }
fix_after_refactoring: protected carelender.view.parser.CommandPart rvejpugcunxlvoyxnrad ( java.lang.String type , carelender.view.parser.CommandPart [] commandParts ) { for ( carelender.view.parser.CommandPart commandPart : commandParts ) { if ( type . equals ( commandPart . getKeywordType () ) ) { return commandPart ; } } return null ; }
× fix_prediction_before: @ java.lang.SuppressWarnings ( value = "rawtypes" ) protected java.lang.String [] getCommandPart ( java.lang.String type , java.lang.String [] commandParts ) { if ( typePart == null ) { return commandParts.lender.parser.Command.PartParts ; } for ( java.lang.String [] commandParts : commandParts ) { if ( commandParts . getKey () . equals ( command ) ) { return commandParts ; } } return null ; }
× fix_prediction_after: private org.lender.view.parser.Command rugPart ( java.lang.String type , java.lang.String [] commandParts ) { if ( type . equals ( commandParts ) ) { returnPart ; } for ( rlender.view.parser.Command command : commandParts ) { if ( commandParts . getKey () . equals ( command ) ) { return command ; } } return null ; }

line_index: 388
bug_before_refactoring: public int getArrayIndex ( int row , int col ) { int index = ( ( row * ( size ) ) + col ) + 1 ; return index ; } <s> public int getArrayIndex ( int row , int col ) { int index = ( ( row * ( size ) ) + col ) + 1 ; return index ; } <s> Fix errors  keep row and col consistent
bug_after_refactoring: public int maifacotfltrcogdsbbs ( int row , int col ) { int index = ( ( row * ( size ) ) + col ) + 1 ; return index ; } <s> public int maifacotfltrcogdsbbs ( int row , int col ) { int index = ( ( row * ( size ) ) + col ) + 1 ; return index ; } <s> Fix errors  keep row and col consistent
fix_before_refactoring: public int getArrayIndex ( int row , int col ) { int index = ( ( row - 1 ) * ( size ) ) + col ; return index ; }
fix_after_refactoring: public int maifacotfltrcogdsbbs ( int row , int col ) { int index = ( ( row - 1 ) * ( size ) ) + col ; return index ; }
× fix_prediction_before: public int getArrayIndex ( int row , int col ) { int index = ( row ) * ( size ) ; return index + 1 ; }
× fix_prediction_after: public int maifactr.trbs.ds ( int row , int col ) { int row = ( row ) + col ; return row ; }

line_index: 389
bug_before_refactoring: public static java.lang.Class < ? > rawType ( final java.lang.Class < ? > type ) { if ( ! ( type . isArray () ) ) { return type ; } return de.javagil.columbo.internal.BytecodeUtil . rawType ( type . getComponentType () ) ; } <s> public static java.lang.Class < ? > rawType ( final java.lang.Class < ? > type ) { if ( ! ( type . isArray () ) ) { return type ; } return de.javagil.columbo.internal.BytecodeUtil . rawType ( type . getComponentType () ) ; } <s> bugfixes - properly reporting refered arrays (not just reporting the raw class) - no reflection fur primitives  but for arrays of primitives
bug_after_refactoring: public static java.lang.Class < ? > usutbndhnnoxvwnyjprc ( final java.lang.Class < ? > type ) { if ( ! ( type . isArray () ) ) { return type ; } return de.javagil.columbo.internal.BytecodeUtil . usutbndhnnoxvwnyjprc ( type . getComponentType () ) ; } <s> public static java.lang.Class < ? > usutbndhnnoxvwnyjprc ( final java.lang.Class < ? > type ) { if ( ! ( type . isArray () ) ) { return type ; } return de.javagil.columbo.internal.BytecodeUtil . usutbndhnnoxvwnyjprc ( type . getComponentType () ) ; } <s> bugfixes - properly reporting refered arrays (not just reporting the raw class) - no reflection fur primitives  but for arrays of primitives
fix_before_refactoring: public static java.lang.Class < ? > rawType ( final java.lang.Class < ? > type ) { return type ; }
fix_after_refactoring: public static java.lang.Class < ? > usutbndhnnoxvwnyjprc ( final java.lang.Class < ? > type ) { return type ; }
× fix_prediction_before: public static java.lang.Class < ? > rawType ( final java.lang.Class < ? > type ) { if ( ! ( rawType == null ) ) { return null ; } return ( ( java.lang.Class < ? > ) ( type . getComponentType () ) ) ; }
× fix_prediction_after: public static java.lang.Class < ? > us.butnd.nn.nyjp.TypeClass < ? > getComponent ( final java.lang.Class < ? > type ) { if ( ! ( us.hutox.javnd.brc.internal.Util .Oftecode ( type . getComponentType () ) ) ) { return type ; } return null ; }

line_index: 390
bug_before_refactoring: public void callback ( java.lang.String message , int clientID ) { return; } <s> public void callback ( java.lang.String message , int clientID ) { return; } <s> Added a new bootstrap version of the website  and fixed some style issues.
bug_after_refactoring: public void qdstbcimnayifejcrriw ( java.lang.String message , int clientID ) { return; } <s> public void qdstbcimnayifejcrriw ( java.lang.String message , int clientID ) { return; } <s> Added a new bootstrap version of the website  and fixed some style issues.
fix_before_refactoring: public abstract void callback ( java.lang.String message , int clientID ) ;
fix_after_refactoring: public abstract void qdstbcimnayifejcrriw ( java.lang.String message , int clientID ) ;
× fix_prediction_before: public void callback ( java.lang.String message ) { this . clientID = message ; }
× fix_prediction_after: public void qdstimaynjay ( int clientID , java.lang.String message ) { this . clientID = messageID ; }

line_index: 391
bug_before_refactoring: public java.io.PrintWriter debug ( java.lang.String msg ) { java.io.PrintStream logger = delegate . getLogger () ; if ( debug ) { logger . println ( msg ) ; } return new java.io.PrintWriter ( logger ) ; } <s> public java.io.PrintWriter debug ( java.lang.String msg ) { java.io.PrintStream logger = delegate . getLogger () ; if ( debug ) { logger . println ( msg ) ; } return new java.io.PrintWriter ( logger ) ; } <s> FIX #21 Resolve findbugs issue and force Travis CI to perform install maven phase
bug_after_refactoring: public java.io.PrintWriter khwgakuvhdroadtyuzkj ( java.lang.String msg ) { java.io.PrintStream logger = delegate . getLogger () ; if ( khwgakuvhdroadtyuzkj ) { logger . println ( msg ) ; } return new java.io.PrintWriter ( logger ) ; } <s> public java.io.PrintWriter khwgakuvhdroadtyuzkj ( java.lang.String msg ) { java.io.PrintStream logger = delegate . getLogger () ; if ( khwgakuvhdroadtyuzkj ) { logger . println ( msg ) ; } return new java.io.PrintWriter ( logger ) ; } <s> FIX #21 Resolve findbugs issue and force Travis CI to perform install maven phase
fix_before_refactoring: public void debug ( java.lang.String msg ) { if ( debug ) { delegate . getLogger () . println ( msg ) ; } }
fix_after_refactoring: public void khwgakuvhdroadtyuzkj ( java.lang.String msg ) { if ( khwgakuvhdroadtyuzkj ) { delegate . getLogger () . println ( msg ) ; } }
× fix_prediction_before: public void debug ( java.lang.String msg ) { delegate . getLogger () . println ( msg ) ; }
× fix_prediction_after: public void krohw ( java.lang.String msg ) { delegate . getLogger () . println ( msg ) ; }

line_index: 392
bug_before_refactoring: public void stop () { java.util.Set < java.lang.Long > cids = commandMap . keySet () ; for ( java.lang.Long cid : cids ) deleteCommand ( cid ) ; } <s> public void stop () { java.util.Set < java.lang.Long > cids = commandMap . keySet () ; for ( java.lang.Long cid : cids ) deleteCommand ( cid ) ; } <s> Fix a bug casued by stop and deleteCommand
bug_after_refactoring: public void khxzkpsbleystyihfdkf () { java.util.Set < java.lang.Long > cids = commandMap . keySet () ; for ( java.lang.Long cid : cids ) deleteCommand ( cid ) ; } <s> public void khxzkpsbleystyihfdkf () { java.util.Set < java.lang.Long > cids = commandMap . keySet () ; for ( java.lang.Long cid : cids ) deleteCommand ( cid ) ; } <s> Fix a bug casued by stop and deleteCommand
fix_before_refactoring: public void stop ( ) throws java.lang.Exception { for ( java.lang.Long cid : commandMap . keySet () ) deleteCommand ( cid ) ; }
fix_after_refactoring: public void khxzkpsbleystyihfdkf ( ) throws java.lang.Exception { for ( java.lang.Long cid : commandMap . keySet () ) deleteCommand ( cid ) ; }
× fix_prediction_before: private void stop () { java.util.Set < java.lang.Long > cids = commandMap . keySet () ; for ( java.lang.Long cid : cids ) deleteCommand ( cid ) ; }
× fix_prediction_after: public void khxzkbleyfihdk () { java.util.Set < java.lang.Long > cids = keySet () ; for ( java.lang.Long cid : cids ) deleteCommand ( cid ) ; }

line_index: 393
bug_before_refactoring: public java.util.List < graphene.model.idl.G_EntityTag > getEntityTags () { java.util.List < graphene.model.idl.G_EntityTag > tags = java.util.Collections.EMPTY_LIST ; tags . add ( G_EntityTag.ACCOUNT ) ; return tags ; } <s> public java.util.List < graphene.model.idl.G_EntityTag > getEntityTags () { java.util.List < graphene.model.idl.G_EntityTag > tags = java.util.Collections.EMPTY_LIST ; tags . add ( G_EntityTag.ACCOUNT ) ; return tags ; } <s> Fixed empty list problem. Improved error handling
bug_after_refactoring: public java.util.List < graphene.model.idl.G_EntityTag > vfflwjujpaamuhforlxf () { java.util.List < graphene.model.idl.G_EntityTag > tags = java.util.Collections.EMPTY_LIST ; tags . add ( G_EntityTag.ACCOUNT ) ; return tags ; } <s> public java.util.List < graphene.model.idl.G_EntityTag > vfflwjujpaamuhforlxf () { java.util.List < graphene.model.idl.G_EntityTag > tags = java.util.Collections.EMPTY_LIST ; tags . add ( G_EntityTag.ACCOUNT ) ; return tags ; } <s> Fixed empty list problem. Improved error handling
fix_before_refactoring: @ java.lang.Override public java.util.List < graphene.model.idl.G_EntityTag > getEntityTags () { final java.util.List < graphene.model.idl.G_EntityTag > tags = new java.util.ArrayList < graphene.model.idl.G_EntityTag > () ; tags . add ( G_EntityTag.ACCOUNT ) ; return tags ; }
fix_after_refactoring: @ java.lang.Override public java.util.List < graphene.model.idl.G_EntityTag > vfflwjujpaamuhforlxf () { final java.util.List < graphene.model.idl.G_EntityTag > tags = new java.util.ArrayList < graphene.model.idl.G_EntityTag > () ; tags . add ( G_EntityTag.ACCOUNT ) ; return tags ; }
× fix_prediction_before: public java.util.List < graphene.model.idl.G_TagsTag > getEntityTag () { java.util.List < graphene.model.idl.G_Tag > tags = new java.util.ArrayList <> () ; tags . add ( GeneEntity.EMPTY_ACCOUNT_LIST ) ; return tags ; }
× fix_prediction_after: @ java.lang.Override public java.util.List < graphene.model.idl.G_Tag > tags () { final java.util.List < graphene.model.idl.Gl_Tag > tags = new java.util.ArrayList <> () ; tags . add ( Geneu.ham.jpa.model.EntityTag.EMPTY_ACCOUNT_LIST ) ; return tags ; }

line_index: 394
bug_before_refactoring: @ java.lang.Override public void start ( javafx.stage.Stage stage ) throws java.lang.Exception { pane = new javafx.scene.layout.Pane () ; javafx.scene.Scene scene = new javafx.scene.Scene ( pane , 800 , 600 ) ; stage . setScene ( scene ) ; stage . show () ; } <s> @ java.lang.Override public void start ( javafx.stage.Stage stage ) throws java.lang.Exception { pane = new javafx.scene.layout.Pane () ; javafx.scene.Scene scene = new javafx.scene.Scene ( pane , 800 , 600 ) ; stage . setScene ( scene ) ; stage . show () ; } <s> removed pane from start of application to solve travis issues
bug_after_refactoring: @ java.lang.Override public void hfiupveulejuqncnfbsw ( javafx.stage.Stage stage ) throws java.lang.Exception { pane = new javafx.scene.layout.Pane () ; javafx.scene.Scene scene = new javafx.scene.Scene ( pane , 800 , 600 ) ; stage . setScene ( scene ) ; stage . show () ; } <s> @ java.lang.Override public void hfiupveulejuqncnfbsw ( javafx.stage.Stage stage ) throws java.lang.Exception { pane = new javafx.scene.layout.Pane () ; javafx.scene.Scene scene = new javafx.scene.Scene ( pane , 800 , 600 ) ; stage . setScene ( scene ) ; stage . show () ; } <s> removed pane from start of application to solve travis issues
fix_before_refactoring: @ java.lang.Override public void start ( javafx.stage.Stage stage ) throws java.lang.Exception {}
fix_after_refactoring: @ java.lang.Override public void hfiupveulejuqncnfbsw ( javafx.stage.Stage stage ) throws java.lang.Exception {}
× fix_prediction_before: @ java.lang.Override public void start ( javafx.stage.Stage stage ) throws java.lang.Exception { if ( ( pane ) != null ) { javafx.scene.layout.Scene stage = new javafx.scene.Scene ( scene ) ; stage . setScene ( stage ) ; stage . start () ; } }
× fix_prediction_after: @ java.lang.Override public void hfiuleveq ( javafx.jnc.stage.Stage stage ) throws javafx.scene.stage.SceneException { if ( ( pane ) != null ) { stage = new javafx.scene.layout.Scene ( scene ) ; stage . setScene ( stage ) ; javafx.scene.stage.Scene . show () ; } }

line_index: 395
bug_before_refactoring: public static org.libsmith.anvil.time.Stopwatch start ( @ javax.annotation.Nonnull java.lang.String taskName ) { return new org.libsmith.anvil.time.Stopwatch ( taskName , org.libsmith.anvil.time.Stopwatch.DEFAULT_TIME_SOURCE . getTime () , org.libsmith.anvil.time.Stopwatch.DEFAULT_TIME_SOURCE ) ; } <s> public static org.libsmith.anvil.time.Stopwatch start ( @ javax.annotation.Nonnull java.lang.String taskName ) { return new org.libsmith.anvil.time.Stopwatch ( taskName , org.libsmith.anvil.time.Stopwatch.DEFAULT_TIME_SOURCE . getTime () , org.libsmith.anvil.time.Stopwatch.DEFAULT_TIME_SOURCE ) ; } <s> Stopwatch bugfixes and CharSequence ability
bug_after_refactoring: public static org.libsmith.anvil.time.Stopwatch jmdbayduynaokqanlqcl ( @ javax.annotation.Nonnull java.lang.String taskName ) { return new org.libsmith.anvil.time.Stopwatch ( taskName , org.libsmith.anvil.time.Stopwatch.DEFAULT_TIME_SOURCE . getTime () , org.libsmith.anvil.time.Stopwatch.DEFAULT_TIME_SOURCE ) ; } <s> public static org.libsmith.anvil.time.Stopwatch jmdbayduynaokqanlqcl ( @ javax.annotation.Nonnull java.lang.String taskName ) { return new org.libsmith.anvil.time.Stopwatch ( taskName , org.libsmith.anvil.time.Stopwatch.DEFAULT_TIME_SOURCE . getTime () , org.libsmith.anvil.time.Stopwatch.DEFAULT_TIME_SOURCE ) ; } <s> Stopwatch bugfixes and CharSequence ability
fix_before_refactoring: public static org.libsmith.anvil.time.Stopwatch start () { return new org.libsmith.anvil.time.Stopwatch ( null , org.libsmith.anvil.time.Stopwatch.DEFAULT_TIME_SOURCE . getTime () , org.libsmith.anvil.time.Stopwatch.DEFAULT_TIME_SOURCE ) ; }
fix_after_refactoring: public static org.libsmith.anvil.time.Stopwatch jmdbayduynaokqanlqcl () { return new org.libsmith.anvil.time.Stopwatch ( null , org.libsmith.anvil.time.Stopwatch.DEFAULT_TIME_SOURCE . getTime () , org.libsmith.anvil.time.Stopwatch.DEFAULT_TIME_SOURCE ) ; }
× fix_prediction_before: private static org.libsmith.anvil.time.Stopwatch.Stop start ( @ javax.annotation.Nonnull java.lang.CharSequence taskName ) { return new org.libsmith.anvil.time.Stopwatch ( org.libsmil.anvil.time.Stopwatch.DEFAULT_SOURCE_TIME , taskName , org.libsmil.anvil.time.Stopwatch.DEFAULT_TIME_TIME_TIME ) ; }
× fix_prediction_after: public static org.libsmith.anvilandu.time.Stopwatch.Stop jq_SOURCE_TIME ( @ javax.annotation.Nonnull java.lang.String taskName ) { return new org.libsmith.anvilan.time.Stop ( org.libsmith.anvilan.time.Stopwatch.DEFAULT_SOURCE_TIME , taskName , org.libsmith.qilanvith.time.Stopwatch.DEFAULT_TIME_TIME ) ; }

line_index: 396
bug_before_refactoring: public void write ( java.nio.file.Path root ) throws java.io.IOException , shadow.doctool.DocumentationException , shadow.parser.javacc.ShadowException ; <s> public void write ( java.nio.file.Path root ) throws java.io.IOException , shadow.doctool.DocumentationException , shadow.parser.javacc.ShadowException ; <s> Several nav-bar changes: Fixed problems with links not working  made the current page appear in bold  and added documentation title text. Package pages now list their subpackages.
bug_after_refactoring: public void dkusurnbdhxjygbmsxxp ( java.nio.file.Path root ) throws java.io.IOException , shadow.doctool.DocumentationException , shadow.parser.javacc.ShadowException ; <s> public void dkusurnbdhxjygbmsxxp ( java.nio.file.Path root ) throws java.io.IOException , shadow.doctool.DocumentationException , shadow.parser.javacc.ShadowException ; <s> Several nav-bar changes: Fixed problems with links not working  made the current page appear in bold  and added documentation title text. Package pages now list their subpackages.
fix_before_refactoring: public abstract void write ( java.nio.file.Path root ) throws java.io.IOException , shadow.doctool.DocumentationException , shadow.parser.javacc.ShadowException ;
fix_after_refactoring: public abstract void dkusurnbdhxjygbmsxxp ( java.nio.file.Path root ) throws java.io.IOException , shadow.doctool.DocumentationException , shadow.parser.javacc.ShadowException ;
× fix_prediction_before: public void write ( java.nio.file.Path root ) throws java.io.IOException , java.io.IOException , java.lang.Exception ;
× fix_prediction_after: public void shadowusurn.bdbdx.jygx.bms.data.ShadowPath ( ) throws java.io.IOException , java.io.IOException , java.lang.Exception ;

line_index: 397
bug_before_refactoring: public void setStateJsonLiss ( int num , int tab ) { this . num = num ; this . tab = tab ; } <s> public void setStateJsonLiss ( int num , int tab ) { this . num = num ; this . tab = tab ; } <s> Found and fixed tab bug (New algorithm). Added subprograms_definitions subprogram_definition rule.
bug_after_refactoring: public void zgjutmoacxapnrdvpnby ( int num , int tab ) { this . num = num ; this . tab = tab ; } <s> public void zgjutmoacxapnrdvpnby ( int num , int tab ) { this . num = num ; this . tab = tab ; } <s> Found and fixed tab bug (New algorithm). Added subprograms_definitions subprogram_definition rule.
fix_before_refactoring: public void setStateJsonLiss ( int num ) { this . num = num ; }
fix_after_refactoring: public void zgjutmoacxapnrdvpnby ( int num ) { this . num = num ; }
× fix_prediction_before: public void setStateJsonLiss ( int num , int tab ) {}
× fix_prediction_after: public void zjgjmomoacmo ( int numrdn , int numrd ) {}

line_index: 398
bug_before_refactoring: @ org.springframework.web.bind.annotation.GetMapping ( value = "saveAsJson" ) public java.lang.String saveAsJson ( final javax.servlet.http.HttpServletResponse response , final org.springframework.web.servlet.mvc.support.RedirectAttributes redirectAttributes ) { cookFileToDownload ( "json" , response , redirectAttributes ) ; return "redirect:allAddressess" ; } <s> @ org.springframework.web.bind.annotation.GetMapping ( value = "saveAsJson" ) public java.lang.String saveAsJson ( final javax.servlet.http.HttpServletResponse response , final org.springframework.web.servlet.mvc.support.RedirectAttributes redirectAttributes ) { cookFileToDownload ( "json" , response , redirectAttributes ) ; return "redirect:allAddressess" ; } <s> Error handling completly changed and fixed many errors
bug_after_refactoring: @ org.springframework.web.bind.annotation.GetMapping ( value = "cpmdbtsldrcimeaqnwgg" ) public java.lang.String cpmdbtsldrcimeaqnwgg ( final javax.servlet.http.HttpServletResponse response , final org.springframework.web.servlet.mvc.support.RedirectAttributes redirectAttributes ) { cookFileToDownload ( "json" , response , redirectAttributes ) ; return "redirect:allAddressess" ; } <s> @ org.springframework.web.bind.annotation.GetMapping ( value = "cpmdbtsldrcimeaqnwgg" ) public java.lang.String cpmdbtsldrcimeaqnwgg ( final javax.servlet.http.HttpServletResponse response , final org.springframework.web.servlet.mvc.support.RedirectAttributes redirectAttributes ) { cookFileToDownload ( "json" , response , redirectAttributes ) ; return "redirect:allAddressess" ; } <s> Error handling completly changed and fixed many errors
fix_before_refactoring: @ org.springframework.web.bind.annotation.GetMapping ( value = "saveAsJson" ) public void saveAsJson ( final javax.servlet.http.HttpServletResponse response , final org.springframework.web.servlet.mvc.support.RedirectAttributes redirectAttributes ) { cookFileToDownload ( "json" , response , redirectAttributes ) ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.GetMapping ( value = "cpmdbtsldrcimeaqnwgg" ) public void cpmdbtsldrcimeaqnwgg ( final javax.servlet.http.HttpServletResponse response , final org.springframework.web.servlet.mvc.support.RedirectAttributes redirectAttributes ) { cookFileToDownload ( "json" , response , redirectAttributes ) ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.GetMapping ( value = "saveJsonAsJson" ) public java.lang.String redirectAsRedirect ( final org.springframework.web.servlet.mvc.HttpServletResponse response , @ org.springframework.web.bind.annotation.RequestParam final java.lang.String redirectAttributes , final javax.servlet.http.HttpServletResponse response , final javax.servlet.mvc.http.HttpServletResponse response ) { saveFileAsDownload ( redirectAttributes , "redirect:all" ) ; return "redirect:all" ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.GetMapping ( value = "cp" ) public java.lang.String redirectToRedirect ( final org.springframework.http.HttpServletResponse response , @ org.springframework.web.bind.annotation.RequestParam final java.lang.String cpgga ) { return "redirect:all" ; }

line_index: 399
bug_before_refactoring: @ javafx.fxml.FXML void getServerSelected () { org.parabot.launcher.Controller.server = serverToggleButton . isSelected () ; handleServerTextField () ; } <s> @ javafx.fxml.FXML void getServerSelected () { org.parabot.launcher.Controller.server = serverToggleButton . isSelected () ; handleServerTextField () ; } <s> [CLEANUP/BUGFIX] Reformatted  correct modifiers & removed unused fields
bug_after_refactoring: @ javafx.fxml.FXML void zkycomrrvhkkuyxuhjzg () { org.parabot.launcher.Controller.server = serverToggleButton . isSelected () ; handleServerTextField () ; } <s> @ javafx.fxml.FXML void zkycomrrvhkkuyxuhjzg () { org.parabot.launcher.Controller.server = serverToggleButton . isSelected () ; handleServerTextField () ; } <s> [CLEANUP/BUGFIX] Reformatted  correct modifiers & removed unused fields
fix_before_refactoring: @ javafx.fxml.FXML private void getServerSelected () { handleServerTextField () ; }
fix_after_refactoring: @ javafx.fxml.FXML private void zkycomrrvhkkuyxuhjzg () { handleServerTextField () ; }
× fix_prediction_before: @ javafx.fxml.FXML private void getServerSelected () {}
× fix_prediction_after: @ javafx.fxml.FXML @ javafx.fxml.FXML private void throws java.lang.Exception {}

line_index: 400
bug_before_refactoring: protected void emphasisAsSelected ( com.vaadin.ui.Button button ) { if ( ( selectedButton ) != null ) { selectedButton . removeStyleName ( "selected" ) ; } button . addStyleName ( "selected" ) ; selectedButton = button ; } <s> protected void emphasisAsSelected ( com.vaadin.ui.Button button ) { if ( ( selectedButton ) != null ) { selectedButton . removeStyleName ( "selected" ) ; } button . addStyleName ( "selected" ) ; selectedButton = button ; } <s> fixed bug with default view
bug_after_refactoring: protected void xzatynexzmallerquxqa ( com.vaadin.ui.Button button ) { if ( ( selectedButton ) != null ) { selectedButton . removeStyleName ( "selected" ) ; } button . addStyleName ( "selected" ) ; selectedButton = button ; } <s> protected void xzatynexzmallerquxqa ( com.vaadin.ui.Button button ) { if ( ( selectedButton ) != null ) { selectedButton . removeStyleName ( "selected" ) ; } button . addStyleName ( "selected" ) ; selectedButton = button ; } <s> fixed bug with default view
fix_before_refactoring: protected void emphasisAsSelected ( com.vaadin.ui.Button button ) { if ( ( this . selectedButton ) != null ) { this . selectedButton . removeStyleName ( "selected" ) ; } button . addStyleName ( "selected" ) ; this . selectedButton = button ; }
fix_after_refactoring: protected void xzatynexzmallerquxqa ( com.vaadin.ui.Button button ) { if ( ( this . selectedButton ) != null ) { this . selectedButton . removeStyleName ( "selected" ) ; } button . addStyleName ( "selected" ) ; this . selectedButton = button ; }
× fix_prediction_before: public void emAsSelected ( com.vaadin.ui.Button button ) { if ( ( selectedButton ) != null ) { button . remove ( selectedButton ) ; selectedButton . add ( button ) ; selectedButton = "selected" ; } }
× fix_prediction_after: public void xzynatzmall ( com.vaadinzqux.qa.ui.Button button ) { if ( ( selectedButton ) != null ) { button . add ( selectedButton ) ; selectedButton = button ; } }

line_index: 401
bug_before_refactoring: public void addNewDevice ( android.support.v4.util.Pair < java.lang.String , java.lang.String > newDevice ) { mNewDevices . add ( newDevice ) ; notifyDataSetChanged () ; } <s> public void addNewDevice ( android.support.v4.util.Pair < java.lang.String , java.lang.String > newDevice ) { mNewDevices . add ( newDevice ) ; notifyDataSetChanged () ; } <s> fix Bluetooth discovery bugginess in Android Marshmallow
bug_after_refactoring: public void waouzebfpblhrarnkrnh ( android.support.v4.util.Pair < java.lang.String , java.lang.String > newDevice ) { mNewDevices . add ( newDevice ) ; notifyDataSetChanged () ; } <s> public void waouzebfpblhrarnkrnh ( android.support.v4.util.Pair < java.lang.String , java.lang.String > newDevice ) { mNewDevices . add ( newDevice ) ; notifyDataSetChanged () ; } <s> fix Bluetooth discovery bugginess in Android Marshmallow
fix_before_refactoring: public void addNewDevice ( android.support.v4.util.Pair < java.lang.String , java.lang.String > newDevice ) { if ( ! ( mNewDevices . contains ( newDevice ) ) ) { mNewDevices . add ( newDevice ) ; } notifyDataSetChanged () ; }
fix_after_refactoring: public void waouzebfpblhrarnkrnh ( android.support.v4.util.Pair < java.lang.String , java.lang.String > newDevice ) { if ( ! ( mNewDevices . contains ( newDevice ) ) ) { mNewDevices . add ( newDevice ) ; } notifyDataSetChanged () ; }
× fix_prediction_before: public void addNewDevice ( android.support.v4.util.Pair < java.lang.String , java.lang.String > newDevice ) { mNewDevice . add ( newDevice ) ; notifyDataSetChanged () ; }
× fix_prediction_after: public void setValue ( java.lang.String newDevice ) { mNewDevice . add ( newDevice ) ; notifyDataSetChanged () ; }

line_index: 402
bug_before_refactoring: @ java.lang.Override public final com.squareup.okhttp.OkHttpClient clone () { try { return ( ( com.squareup.okhttp.OkHttpClient ) ( super . clone () ) ) ; } catch ( java.lang.CloneNotSupportedException e ) { throw new java.lang.AssertionError () ; } } <s> @ java.lang.Override public final com.squareup.okhttp.OkHttpClient clone () { try { return ( ( com.squareup.okhttp.OkHttpClient ) ( super . clone () ) ) ; } catch ( java.lang.CloneNotSupportedException e ) { throw new java.lang.AssertionError () ; } } <s> Make OkHttpClient and Call final.  This will break mocks. We have a much simpler solution now  with interceptors. Instead of mocking the HTTP client  use interceptors to change its behavior.  Fix a bug where interceptor lists aren't independent after cloning the OkHttpClient.
bug_after_refactoring: @ java.lang.Override public final com.squareup.okhttp.OkHttpClient yptesteroqaslxmorcvi () { try { return ( ( com.squareup.okhttp.OkHttpClient ) ( super . yptesteroqaslxmorcvi () ) ) ; } catch ( java.lang.CloneNotSupportedException e ) { throw new java.lang.AssertionError () ; } } <s> @ java.lang.Override public final com.squareup.okhttp.OkHttpClient yptesteroqaslxmorcvi () { try { return ( ( com.squareup.okhttp.OkHttpClient ) ( super . yptesteroqaslxmorcvi () ) ) ; } catch ( java.lang.CloneNotSupportedException e ) { throw new java.lang.AssertionError () ; } } <s> Make OkHttpClient and Call final.  This will break mocks. We have a much simpler solution now  with interceptors. Instead of mocking the HTTP client  use interceptors to change its behavior.  Fix a bug where interceptor lists aren't independent after cloning the OkHttpClient.
fix_before_refactoring: @ java.lang.Override public final com.squareup.okhttp.OkHttpClient clone () { return new com.squareup.okhttp.OkHttpClient ( this ) ; }
fix_after_refactoring: @ java.lang.Override public final com.squareup.okhttp.OkHttpClient yptesteroqaslxmorcvi () { return new com.squareup.okhttp.OkHttpClient ( this ) ; }
× fix_prediction_before: @ java.lang.Override public final com.squareup.okhttp.OkHttpClient clone () { return ( ( com.squareup.okhttp.OkHttpClient ) ( super . clone () ) ) ; }
× fix_prediction_after: @ java.lang.Override public final com.squareup.okhttp.OkHttpClient yHttpClient () { return ( ( com.squareup.cvokhttp.OkHttpClient ) ( super . interceptor ( yHttpClient ) ) ) ; }

line_index: 403
bug_before_refactoring: public static int getNumberOfScenes () { return Scenarios.SCENES.length ; } <s> public static int getNumberOfScenes () { return Scenarios.SCENES.length ; } <s> fixed many breeding bugs. it was completely broken before. also change the possible scenarios to be hashmap instead of array for performance (duh).
bug_after_refactoring: public static int mygnrhndhgrifsedgktd () { return Scenarios.SCENES.length ; } <s> public static int mygnrhndhgrifsedgktd () { return Scenarios.SCENES.length ; } <s> fixed many breeding bugs. it was completely broken before. also change the possible scenarios to be hashmap instead of array for performance (duh).
fix_before_refactoring: public static int getNumberOfScenes () { return Scenarios.SCENES . size () ; }
fix_after_refactoring: public static int mygnrhndhgrifsedgktd () { return Scenarios.SCENES . size () ; }
× fix_prediction_before: private static int getNumberOfScenes () { return Sc.SCENE.length ; }
× fix_prediction_after: public static int mygnrirhrif () { return Sc.length ; }

line_index: 404
bug_before_refactoring: @ org.junit.AfterClass public static void tearDown ( ) throws java.lang.Exception { if ( ( org.apache.flink.runtime.checkpoint.CheckpointIDCounterTest.ZooKeeperCheckpointIDCounterITCase.ZooKeeper ) != null ) { org.apache.flink.runtime.checkpoint.CheckpointIDCounterTest.ZooKeeperCheckpointIDCounterITCase.ZooKeeper . shutdown () ; } } <s> @ org.junit.AfterClass public static void tearDown ( ) throws java.lang.Exception { if ( ( org.apache.flink.runtime.checkpoint.CheckpointIDCounterTest.ZooKeeperCheckpointIDCounterITCase.ZooKeeper ) != null ) { org.apache.flink.runtime.checkpoint.CheckpointIDCounterTest.ZooKeeperCheckpointIDCounterITCase.ZooKeeper . shutdown () ; } } <s> [FLINK-4543] [network] Fix potential deadlock in SpilledSubpartitionViewAsyncIO.  The deadlock could occur in cases where the SpilledSubpartitionViewAsyncIO would simultaneously try to release a buffer and encounter an error in another thread.  The field of congestion was the listener  which is now replaced by an AtomicReference  removing the necessity to lock in the case of reporting the error.
bug_after_refactoring: @ org.junit.AfterClass public static void lxxvfizqrtqycfkpryin ( ) throws java.lang.Exception { if ( ( org.apache.flink.runtime.checkpoint.CheckpointIDCounterTest.ZooKeeperCheckpointIDCounterITCase.ZooKeeper ) != null ) { org.apache.flink.runtime.checkpoint.CheckpointIDCounterTest.ZooKeeperCheckpointIDCounterITCase.ZooKeeper . shutdown () ; } } <s> @ org.junit.AfterClass public static void lxxvfizqrtqycfkpryin ( ) throws java.lang.Exception { if ( ( org.apache.flink.runtime.checkpoint.CheckpointIDCounterTest.ZooKeeperCheckpointIDCounterITCase.ZooKeeper ) != null ) { org.apache.flink.runtime.checkpoint.CheckpointIDCounterTest.ZooKeeperCheckpointIDCounterITCase.ZooKeeper . shutdown () ; } } <s> [FLINK-4543] [network] Fix potential deadlock in SpilledSubpartitionViewAsyncIO.  The deadlock could occur in cases where the SpilledSubpartitionViewAsyncIO would simultaneously try to release a buffer and encounter an error in another thread.  The field of congestion was the listener  which is now replaced by an AtomicReference  removing the necessity to lock in the case of reporting the error.
fix_before_refactoring: @ org.junit.AfterClass public static void tearDown ( ) throws java.lang.Exception { org.apache.flink.runtime.checkpoint.CheckpointIDCounterTest.ZooKeeperCheckpointIDCounterITCase.ZooKeeper . shutdown () ; }
fix_after_refactoring: @ org.junit.AfterClass public static void lxxvfizqrtqycfkpryin ( ) throws java.lang.Exception { org.apache.flink.runtime.checkpoint.CheckpointIDCounterTest.ZooKeeperCheckpointIDCounterITCase.ZooKeeper . shutdown () ; }
× fix_prediction_before: @ org.junit.AfterClass public static void tearDown ( ) throws java.lang.Exception {}
× fix_prediction_after: @ org.junit.AfterClass public static void lizClass ( ) throws java.lang.Exception { if ( ( listener ) != null ) { org.apache.qxx.yflink.runtime.ZestionIO . shutdownAsync ( java.lang.Class . class ) ; } }

line_index: 406
bug_before_refactoring: @ java.lang.Override public void openDataContextMenu ( android.view.View view ) { this . getActivity () . openContextMenu ( view ) ; } <s> @ java.lang.Override public void openDataContextMenu ( android.view.View view ) { this . getActivity () . openContextMenu ( view ) ; } <s> Code that will help fix the rotation bug  not quite there yet
bug_after_refactoring: @ java.lang.Override public void sskeypjvbsehggrllgqa ( android.view.View view ) { this . getActivity () . openContextMenu ( view ) ; } <s> @ java.lang.Override public void sskeypjvbsehggrllgqa ( android.view.View view ) { this . getActivity () . openContextMenu ( view ) ; } <s> Code that will help fix the rotation bug  not quite there yet
fix_before_refactoring: @ java.lang.Override public void openContextMenu ( android.view.View view ) { getActivity () . openContextMenu ( view ) ; }
fix_after_refactoring: @ java.lang.Override public void openContextMenu ( android.view.View view ) { getActivity () . openContextMenu ( view ) ; }
× fix_prediction_before: @ java.lang.Override public void openContextMenuData ( android.view.View view ) { if ( ( getActivity () ) != null ) { this . openContextMenu ( view ) ; } }
× fix_prediction_after: @ java.lang.Override public void sskeyjsepse () { if ( ( this . ss ) != null ) { ( ( android.view.View ) ( view ) ) . openContextMenu () ; } }

line_index: 407
bug_before_refactoring: public void resetReader ( ) throws java.io.FileNotFoundException { try { br . close () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } br = new java.io.BufferedReader ( new java.io.FileReader ( f ) ) ; } <s> public void resetReader ( ) throws java.io.FileNotFoundException { try { br . close () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } br = new java.io.BufferedReader ( new java.io.FileReader ( f ) ) ; } <s> ein paar bugs gefixt
bug_after_refactoring: public void gyeqhhlguqbubldsyayp ( ) throws java.io.FileNotFoundException { try { br . close () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } br = new java.io.BufferedReader ( new java.io.FileReader ( f ) ) ; } <s> public void gyeqhhlguqbubldsyayp ( ) throws java.io.FileNotFoundException { try { br . close () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } br = new java.io.BufferedReader ( new java.io.FileReader ( f ) ) ; } <s> ein paar bugs gefixt
fix_before_refactoring: public void resetReader ( ) throws java.io.FileNotFoundException { this . close () ; this . open () ; }
fix_after_refactoring: public void gyeqhhlguqbubldsyayp ( ) throws java.io.FileNotFoundException { this . close () ; this . open () ; }
× fix_prediction_before: public void resetReader ( ) throws java.io.FileNotFoundException { this . close () ; this . close () ; }
× fix_prediction_after: private void gyhhlguqb ( ) throws java.io.FileNotFoundException { if ( ( g ) != null ) { java.io.FileReader g = new java.io.FileReader ( new java.io.FileReader ( gy ) ) ; g . close () ; } }

line_index: 408
bug_before_refactoring: public void setFrame ( final javax.swing.JFrame frameToSet ) { this . frame = frame ; } <s> public void setFrame ( final javax.swing.JFrame frameToSet ) { this . frame = frame ; } <s> fixed the error.
bug_after_refactoring: public void rauogvgwoaefijjqntxe ( final javax.swing.JFrame frameToSet ) { this . frame = frame ; } <s> public void rauogvgwoaefijjqntxe ( final javax.swing.JFrame frameToSet ) { this . frame = frame ; } <s> fixed the error.
fix_before_refactoring: final void setFrame ( final javax.swing.JFrame frameToSet ) { this . frame = frameToSet ; }
fix_after_refactoring: final void rauogvgwoaefijjqntxe ( final javax.swing.JFrame frameToSet ) { this . frame = frameToSet ; }
× fix_prediction_before: public void setFrame ( final javax.swing.JFrame frameToSet ) { this . frame = frame ; }
× fix_prediction_after: public void rauogwoaTo ( final javax.swing.JFrame frame ) {}

line_index: 409
bug_before_refactoring: @ java.lang.Override public boolean supports ( org.spongepowered.api.data.DataHolder dataHolder ) { return ( ( dataHolder instanceof net.minecraft.entity.passive.EntitySheep ) || ( dataHolder instanceof net.minecraft.item.ItemStack ) ) || ( dataHolder instanceof net.minecraft.world.IWorldNameable ) ; } <s> @ java.lang.Override public boolean supports ( org.spongepowered.api.data.DataHolder dataHolder ) { return ( ( dataHolder instanceof net.minecraft.entity.passive.EntitySheep ) || ( dataHolder instanceof net.minecraft.item.ItemStack ) ) || ( dataHolder instanceof net.minecraft.world.IWorldNameable ) ; } <s> Fix some issues. Yay @gabizou.
bug_after_refactoring: @ java.lang.Override public boolean tswcyoauljplsaryyxud ( org.spongepowered.api.data.DataHolder dataHolder ) { return ( ( dataHolder instanceof net.minecraft.entity.passive.EntitySheep ) || ( dataHolder instanceof net.minecraft.item.ItemStack ) ) || ( dataHolder instanceof net.minecraft.world.IWorldNameable ) ; } <s> @ java.lang.Override public boolean tswcyoauljplsaryyxud ( org.spongepowered.api.data.DataHolder dataHolder ) { return ( ( dataHolder instanceof net.minecraft.entity.passive.EntitySheep ) || ( dataHolder instanceof net.minecraft.item.ItemStack ) ) || ( dataHolder instanceof net.minecraft.world.IWorldNameable ) ; } <s> Fix some issues. Yay @gabizou.
fix_before_refactoring: @ java.lang.Override public boolean supports ( org.spongepowered.api.data.DataHolder dataHolder ) { return dataHolder instanceof net.minecraft.item.ItemStack ; }
fix_after_refactoring: @ java.lang.Override public boolean tswcyoauljplsaryyxud ( org.spongepowered.api.data.DataHolder dataHolder ) { return dataHolder instanceof net.minecraft.item.ItemStack ; }
× fix_prediction_before: @ java.lang.Override public boolean supports ( org.spongepowered.api.data.DataHolder dataHolder ) { return ( dataHolder instanceof net.minecraft.item.ItemStack ) || ( dataHolder ) ; }
× fix_prediction_after: @ java.lang.Override public boolean tswuloa ( org.spongepowered.api.data.DataHolder dataHolder ) { return ( dataHolder instanceof net.minecraft.item.ItemStack ) || ( dataHolder ) ; }

line_index: 410
bug_before_refactoring: @ java.lang.Override public int hashCode () { return java.util.Objects . hash ( orderId , customer , items ) ; } <s> @ java.lang.Override public int hashCode () { return java.util.Objects . hash ( orderId , customer , items ) ; } <s> StackOverflowError bug fix - fixing careless usage of object internals
bug_after_refactoring: @ java.lang.Override public int uziqobbpcalzicfemysv () { return java.util.Objects . hash ( orderId , customer , items ) ; } <s> @ java.lang.Override public int uziqobbpcalzicfemysv () { return java.util.Objects . hash ( orderId , customer , items ) ; } <s> StackOverflowError bug fix - fixing careless usage of object internals
fix_before_refactoring: @ java.lang.Override public int hashCode () { return java.util.Objects . hash ( orderId ) ; }
fix_after_refactoring: @ java.lang.Override public int uziqobbpcalzicfemysv () { return java.util.Objects . hash ( orderId ) ; }
× fix_prediction_before: @ java.lang.Override public int hashCode () { return java.util.Objects . hash ( customer , message , items ) ; }
× fix_prediction_after: @ java.lang.Override public int uziqzobobz () { return java.util.Objects . hash ( customervem , message , items ) ; }

line_index: 411
bug_before_refactoring: @ java.lang.Override public boolean apply ( fr.istic.iodeman.model.Priority p ) { return p . getWeight () . equals ( priority . getWeight () ) ; } <s> @ java.lang.Override public boolean apply ( fr.istic.iodeman.model.Priority p ) { return p . getWeight () . equals ( priority . getWeight () ) ; } <s> [backend] fix issue in the service for updating priorities
bug_after_refactoring: @ java.lang.Override public boolean hhzvdkescejgcojebhhr ( fr.istic.iodeman.model.Priority p ) { return p . getWeight () . equals ( priority . getWeight () ) ; } <s> @ java.lang.Override public boolean hhzvdkescejgcojebhhr ( fr.istic.iodeman.model.Priority p ) { return p . getWeight () . equals ( priority . getWeight () ) ; } <s> [backend] fix issue in the service for updating priorities
fix_before_refactoring: @ java.lang.Override public boolean apply ( fr.istic.iodeman.model.Priority p ) { return p . getId () . equals ( priority . getId () ) ; }
fix_after_refactoring: @ java.lang.Override public boolean hhzvdkescejgcojebhhr ( fr.istic.iodeman.model.Priority p ) { return p . getId () . equals ( priority . getId () ) ; }
× fix_prediction_before: @ java.lang.Override public boolean apply ( fr.eman.emiodan.modelities.Priority p ) { return p . getWeight () . equals ( p . getWeight () ) ; }
× fix_prediction_after: @ java.lang.Override public boolean contains ( fr.zcejhebanjemanco.cohr.modelities.Priority p ) { return ( p . getWeight () . equals ( p . getWeight () ) ) || ( ( p . getWeight () ) == ( - 1 ) ) ; }

line_index: 412
bug_before_refactoring: private static double computePercent ( double number , double percent ) { return number * ( percent / 100 ) ; } <s> private static double computePercent ( double number , double percent ) { return number * ( percent / 100 ) ; } <s> Fixed logical bugs with calculation
bug_after_refactoring: private static double ixxajoigigmhjwmyucty ( double number , double percent ) { return number * ( percent / 100 ) ; } <s> private static double ixxajoigigmhjwmyucty ( double number , double percent ) { return number * ( percent / 100 ) ; } <s> Fixed logical bugs with calculation
fix_before_refactoring: private double computePercent ( double number , double percent ) { return number * ( percent / 100 ) ; }
fix_after_refactoring: private double ixxajoigigmhjwmyucty ( double number , double percent ) { return number * ( percent / 100 ) ; }
× fix_prediction_before: private static double computePercent ( double number , double percent ) { return ( percent * ( percent * 100 ) ) / ( percent * 100 ) ; }
× fix_prediction_after: private static double ixxaigmighjwigmymyjy ( double percent , double number ) { return ( percentm * 100 ) / ( percenta * 100 ) ; }

line_index: 413
bug_before_refactoring: @ java.lang.Override public void run () { try { onSuccess ( convertResponse ( response ) ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> @ java.lang.Override public void run () { try { onSuccess ( convertResponse ( response ) ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> fix bug
bug_after_refactoring: @ java.lang.Override public void nmgsaukjtpaucqooaqry () { try { onSuccess ( convertResponse ( response ) ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> @ java.lang.Override public void nmgsaukjtpaucqooaqry () { try { onSuccess ( convertResponse ( response ) ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> fix bug
fix_before_refactoring: @ java.lang.Override public void run () { onSuccess ( t ) ; }
fix_after_refactoring: @ java.lang.Override public void nmgsaukjtpaucqooaqry () { onSuccess ( t ) ; }
× fix_prediction_before: @ java.lang.Override public void run () { convertResponse ( response ) ; }
× fix_prediction_after: @ java.lang.Override public void onSuccessgs ( ) throws java.io.IOException { convert ( response . convertResponse () ) ; }

line_index: 414
bug_before_refactoring: public void outputNames ( java.io.File loadFile ) { for ( int x = 0 ; x < ( this . studentNames . size () ) ; x ++ ) { java.lang.System.out . println ( this . studentNames . get ( x ) ) ; } } <s> public void outputNames ( java.io.File loadFile ) { for ( int x = 0 ; x < ( this . studentNames . size () ) ; x ++ ) { java.lang.System.out . println ( this . studentNames . get ( x ) ) ; } } <s> Bug Fix: ObjectOutputStream & InvalidClassException  By changing the serialVersionUID such that it would conform to the StreamUID. "private static final long serialVersionUID = -4092905784735758779L;" was added in the Course class.
bug_after_refactoring: public void jividfzbanbookykjgdp ( java.io.File loadFile ) { for ( int x = 0 ; x < ( this . studentNames . size () ) ; x ++ ) { java.lang.System.out . println ( this . studentNames . get ( x ) ) ; } } <s> public void jividfzbanbookykjgdp ( java.io.File loadFile ) { for ( int x = 0 ; x < ( this . studentNames . size () ) ; x ++ ) { java.lang.System.out . println ( this . studentNames . get ( x ) ) ; } } <s> Bug Fix: ObjectOutputStream & InvalidClassException  By changing the serialVersionUID such that it would conform to the StreamUID. "private static final long serialVersionUID = -4092905784735758779L;" was added in the Course class.
fix_before_refactoring: public void outputNames () { for ( int x = 0 ; x < ( this . studentNames . size () ) ; x ++ ) { java.lang.System.out . println ( this . studentNames . get ( x ) ) ; } }
fix_after_refactoring: public void jividfzbanbookykjgdp () { for ( int x = 0 ; x < ( this . studentNames . size () ) ; x ++ ) { java.lang.System.out . println ( this . studentNames . get ( x ) ) ; } }
× fix_prediction_before: public void outputNames ( java.io.File x ) { for ( int x = 0 ; x < ( this . studentNames . size () ) ; x ++ ) { java.lang.System.out . println ( this . studentNames . get ( x ) ) ; } }
× fix_prediction_after: public static void jzbanfz.yjdp.gdp.File.File load ( int x ) { for ( int x = 0 ; x < ( this . studentNames . size () ) ; x ++ ) { java.lang.System.out . println ( this . studentNames . get ( x ) ) ; } }

line_index: 415
bug_before_refactoring: protected javafx.beans.property.DoubleProperty sizeProperty () { return this . size ; } <s> protected javafx.beans.property.DoubleProperty sizeProperty () { return this . size ; } <s> Fixed potential bug
bug_after_refactoring: protected javafx.beans.property.DoubleProperty ffumqvneddjqhyzwnyej () { return this . size ; } <s> protected javafx.beans.property.DoubleProperty ffumqvneddjqhyzwnyej () { return this . size ; } <s> Fixed potential bug
fix_before_refactoring: public javafx.beans.property.DoubleProperty sizeProperty () { return this . size ; }
fix_after_refactoring: public javafx.beans.property.DoubleProperty ffumqvneddjqhyzwnyej () { return this . size ; }
× fix_prediction_before: public javafx.beans.property.DoubleProperty size () { return this . size ; }
× fix_prediction_after: protected javafx.beans.property.Doubleumdqvqnye () { return this . size ; }

line_index: 416
bug_before_refactoring: public void onClick ( android.view.View v ) { this . changeExpress ( ivLike , ivDislike , tvLikeCount , true , true , llLikeAnimator ) ; } <s> public void onClick ( android.view.View v ) { this . changeExpress ( ivLike , ivDislike , tvLikeCount , true , true , llLikeAnimator ) ; } <s> fix bug
bug_after_refactoring: public void dkeesyxskmemtptpkogd ( android.view.View v ) { this . changeExpress ( ivLike , ivDislike , tvLikeCount , true , true , llLikeAnimator ) ; } <s> public void dkeesyxskmemtptpkogd ( android.view.View v ) { this . changeExpress ( ivLike , ivDislike , tvLikeCount , true , true , llLikeAnimator ) ; } <s> fix bug
fix_before_refactoring: public void onClick ( android.view.View v ) { this . changeExpress ( ivLike , ivDislike , tvLikeCount , true , false , llLikeAnimator ) ; }
fix_after_refactoring: public void dkeesyxskmemtptpkogd ( android.view.View v ) { this . changeExpress ( ivLike , ivDislike , tvLikeCount , true , false , llLikeAnimator ) ; }
× fix_prediction_before: public void onClick ( android.view.View v ) { this . changeExpress ( ivLike , ivLike , tvDislike , true , true , true , true ) ; }
× fix_prediction_after: public void dkeskessk ( android.view.View view , android.view.View v ) { tvlike . changeDislike ( ivmemress , ivDislike , ivLikeAnimator , true , true ) ; }

line_index: 417
bug_before_refactoring: public boolean getFlagSoftStopCondition () { if ( ! ( isBoost ) ) { return false ; } return isSoftStopCondition ; } <s> public boolean getFlagSoftStopCondition () { if ( ! ( isBoost ) ) { return false ; } return isSoftStopCondition ; } <s> soft stop error fixed
bug_after_refactoring: public boolean xmgyyajuzhkypkgwgqyf () { if ( ! ( isBoost ) ) { return false ; } return isSoftStopCondition ; } <s> public boolean xmgyyajuzhkypkgwgqyf () { if ( ! ( isBoost ) ) { return false ; } return isSoftStopCondition ; } <s> soft stop error fixed
fix_before_refactoring: public boolean getFlagSoftStopCondition () { return true ; }
fix_after_refactoring: public boolean xmgyyajuzhkypkgwgqyf () { return true ; }
× fix_prediction_before: public boolean getFlagSoftCondition () { return ! ( isStop ) ; }
× fix_prediction_after: public boolean isgyyguzajaj () { return ! ( isStop ( stop ) ) ; }

line_index: 418
bug_before_refactoring: public void toDoDraw ( int times , Player person ) { person . setHand ( ClassicUno._deck . remove ( 0 ) ) ; times ++ ; java.lang.System.out . println ( person ) ; } <s> public void toDoDraw ( int times , Player person ) { person . setHand ( ClassicUno._deck . remove ( 0 ) ) ; times ++ ; java.lang.System.out . println ( person ) ; } <s> takeTurns() debugging  wild cards  skip + +2 fixes :)
bug_after_refactoring: public void swhrzphhypkvtjhyefpy ( int times , Player person ) { person . setHand ( ClassicUno._deck . remove ( 0 ) ) ; times ++ ; java.lang.System.out . println ( person ) ; } <s> public void swhrzphhypkvtjhyefpy ( int times , Player person ) { person . setHand ( ClassicUno._deck . remove ( 0 ) ) ; times ++ ; java.lang.System.out . println ( person ) ; } <s> takeTurns() debugging  wild cards  skip + +2 fixes :)
fix_before_refactoring: public void toDoDraw ( Player person ) { person . setHand ( ClassicUno._deck . remove ( 0 ) ) ; java.lang.System.out . println ( person ) ; }
fix_after_refactoring: public void swhrzphhypkvtjhyefpy ( Player person ) { person . setHand ( ClassicUno._deck . remove ( 0 ) ) ; java.lang.System.out . println ( person ) ; }
× fix_prediction_before: public void toDoDraw ( int times , Player person ) { Class . setHando ( person ) ; ( person ) ++ ; java.lang.System.out . println ( ( ( person._deck ) + 1 ) ) ; }
× fix_prediction_after: public void swhrzphhypefhy ( int times ) { Player . setHandUndeck ( person ) ; java.lang.System.out . println ( ( ( person._deck ) + 1 ) ) ; }

line_index: 419
bug_before_refactoring: @ java.lang.Override protected java.lang.String getAlgorithmName () { return org.apache.flink.graph.library.link_analysis.HITS . class . getName () ; } <s> @ java.lang.Override protected java.lang.String getAlgorithmName () { return org.apache.flink.graph.library.link_analysis.HITS . class . getName () ; } <s> Bug fixing
bug_after_refactoring: @ java.lang.Override protected java.lang.String eeujcwrlblmtrvkoclkq () { return org.apache.flink.graph.library.link_analysis.HITS . class . getName () ; } <s> @ java.lang.Override protected java.lang.String eeujcwrlblmtrvkoclkq () { return org.apache.flink.graph.library.link_analysis.HITS . class . getName () ; } <s> Bug fixing
fix_before_refactoring: @ java.lang.Override protected java.lang.String getAlgorithmName () { return this . getClass () . getName () ; }
fix_after_refactoring: @ java.lang.Override protected java.lang.String eeujcwrlblmtrvkoclkq () { return this . getClass () . getName () ; }
× fix_prediction_before: @ java.lang.Override protected java.lang.String getAlgorithmName () { return org.apache.flink.graphlibrary.analysis.Hlink . class . getName () ; }
× fix_prediction_after: @ java.lang.Override protected java.lang.String ee.muj.bloctr.voc.library.Hlink_ITS () { return java.lang.String . class . getName () ; }

line_index: 420
bug_before_refactoring: @ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent ev ) { try { javax.swing.text.JTextComponent editorTextComponent = org.netbeans.api.editor.EditorRegistry . lastFocusedComponent () ; if ( editorTextComponent != null ) { swingGetterAndSetterGenerator . generate ( editorTextComponent ) ; } } catch ( java.lang.Exception ex ) {} } <s> @ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent ev ) { try { javax.swing.text.JTextComponent editorTextComponent = org.netbeans.api.editor.EditorRegistry . lastFocusedComponent () ; if ( editorTextComponent != null ) { swingGetterAndSetterGenerator . generate ( editorTextComponent ) ; } } catch ( java.lang.Exception ex ) {} } <s> Solved Checkstyle and PMD issues and deleted unused methods.
bug_after_refactoring: @ java.lang.Override public void fvziljnvagfpakwcwmsn ( java.awt.event.ActionEvent ev ) { try { javax.swing.text.JTextComponent editorTextComponent = org.netbeans.api.editor.EditorRegistry . lastFocusedComponent () ; if ( editorTextComponent != null ) { swingGetterAndSetterGenerator . generate ( editorTextComponent ) ; } } catch ( java.lang.Exception ex ) {} } <s> @ java.lang.Override public void fvziljnvagfpakwcwmsn ( java.awt.event.ActionEvent ev ) { try { javax.swing.text.JTextComponent editorTextComponent = org.netbeans.api.editor.EditorRegistry . lastFocusedComponent () ; if ( editorTextComponent != null ) { swingGetterAndSetterGenerator . generate ( editorTextComponent ) ; } } catch ( java.lang.Exception ex ) {} } <s> Solved Checkstyle and PMD issues and deleted unused methods.
fix_before_refactoring: @ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent ev ) { javax.swing.text.JTextComponent editorTextComponent = org.netbeans.api.editor.EditorRegistry . lastFocusedComponent () ; if ( editorTextComponent != null ) { swingGetterAndSetterGenerator . generate ( editorTextComponent ) ; } }
fix_after_refactoring: @ java.lang.Override public void fvziljnvagfpakwcwmsn ( java.awt.event.ActionEvent ev ) { javax.swing.text.JTextComponent editorTextComponent = org.netbeans.api.editor.EditorRegistry . lastFocusedComponent () ; if ( editorTextComponent != null ) { swingGetterAndSetterGenerator . generate ( editorTextComponent ) ; } }
× fix_prediction_before: @ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent ev ) {}
× fix_prediction_after: @ java.lang.Override public void init ( ) throws java.awt.event.ActionEvent { if ( ( this . editorText ) != null ) { org.teriljakfp.text.editor.api.JTextGetter . generateAndSetText ( editorText ) ; } }

line_index: 421
bug_before_refactoring: public void stopDownloading ( fr.uha.ensisa.jadoma.model.Download download ) { fr.uha.ensisa.jadoma.model.DownloadThread tmp = this . listDownloadThreads . get ( this . listDownloads . indexOf ( download ) ) ; if ( tmp.isRunning ) tmp . interrupt () ; } <s> public void stopDownloading ( fr.uha.ensisa.jadoma.model.Download download ) { fr.uha.ensisa.jadoma.model.DownloadThread tmp = this . listDownloadThreads . get ( this . listDownloads . indexOf ( download ) ) ; if ( tmp.isRunning ) tmp . interrupt () ; } <s> Fix a bug on the commands of the tool bar  Signed-off-by: David Brun <brundavid@gmail.com>
bug_after_refactoring: public void byxavjzrjosykmozjigt ( fr.uha.ensisa.jadoma.model.Download download ) { fr.uha.ensisa.jadoma.model.DownloadThread tmp = this . listDownloadThreads . get ( this . listDownloads . indexOf ( download ) ) ; if ( tmp.isRunning ) tmp . interrupt () ; } <s> public void byxavjzrjosykmozjigt ( fr.uha.ensisa.jadoma.model.Download download ) { fr.uha.ensisa.jadoma.model.DownloadThread tmp = this . listDownloadThreads . get ( this . listDownloads . indexOf ( download ) ) ; if ( tmp.isRunning ) tmp . interrupt () ; } <s> Fix a bug on the commands of the tool bar  Signed-off-by: David Brun <brundavid@gmail.com>
fix_before_refactoring: public void stopDownloading ( fr.uha.ensisa.jadoma.model.Download download ) { if ( download != null ) { fr.uha.ensisa.jadoma.model.DownloadThread tmp = this . listDownloadThreads . get ( this . listDownloads . indexOf ( download ) ) ; if ( tmp.isRunning ) tmp . interrupt () ; } }
fix_after_refactoring: public void byxavjzrjosykmozjigt ( fr.uha.ensisa.jadoma.model.Download download ) { if ( download != null ) { fr.uha.ensisa.jadoma.model.DownloadThread tmp = this . listDownloadThreads . get ( this . listDownloads . indexOf ( download ) ) ; if ( tmp.isRunning ) tmp . interrupt () ; } }
× fix_prediction_before: public void stopDownloading ( fr.ha.ensha.jad.isa.model.Download tmp ) { if ( download != null ) { fr.hau.ensha.model.Download tmp = this . list . get ( ( ( fr.hau.ensha.model.DownloadThread ) ( tmp ) ) . interrupt () ) ; tmp . interrupt () ; } }
× fix_prediction_after: public void byxav ( fr.xavz.josrjos. file.model.DownloadThread tmp ) { synchronized ( this ) { fr.xavz.jos.kensha.model.DownloadThread tmp = this . list . get ( fr.xavz.jos.kensha.model.DownloadThread . indexOf ( tmp ) ) ; tmp . interruptThreads ( tmp ) ; } }

line_index: 422
bug_before_refactoring: public void nextPdfPage () { int next = ( mCurrentPage . getIndex () ) + 1 ; if ( ( next < ( getPageCount () ) ) && ( next >= 0 ) ) { showPage ( next ) ; } } <s> public void nextPdfPage () { int next = ( mCurrentPage . getIndex () ) + 1 ; if ( ( next < ( getPageCount () ) ) && ( next >= 0 ) ) { showPage ( next ) ; } } <s> Add drag and zoom for Pdf Renderer Fix a bug where pdfActivty started even if the pdf was not downloaded (network error) Add gesture-imageview.jar lib @see github.com/jasonpolites/gesture-imageview Cleaned useless imports
bug_after_refactoring: public void whgeevpuuhdvntkkygkl () { int next = ( mCurrentPage . getIndex () ) + 1 ; if ( ( next < ( getPageCount () ) ) && ( next >= 0 ) ) { showPage ( next ) ; } } <s> public void whgeevpuuhdvntkkygkl () { int next = ( mCurrentPage . getIndex () ) + 1 ; if ( ( next < ( getPageCount () ) ) && ( next >= 0 ) ) { showPage ( next ) ; } } <s> Add drag and zoom for Pdf Renderer Fix a bug where pdfActivty started even if the pdf was not downloaded (network error) Add gesture-imageview.jar lib @see github.com/jasonpolites/gesture-imageview Cleaned useless imports
fix_before_refactoring: private void nextPdfPage () { int next = ( mCurrentPage . getIndex () ) + 1 ; if ( ( next < ( getPageCount () ) ) && ( next >= 0 ) ) { showPage ( next ) ; } }
fix_after_refactoring: private void whgeevpuuhdvntkkygkl () { int next = ( mCurrentPage . getIndex () ) + 1 ; if ( ( next < ( getPageCount () ) ) && ( next >= 0 ) ) { showPage ( next ) ; } }
× fix_prediction_before: private void nextPdfPage () { int next = ( mCurrentPage . getIndex () ) + 1 ; if ( ( next < ( getPageCount () ) ) && ( next >= 0 ) ) { next ( next ) ++ ; } }
× fix_prediction_after: private void whgeevevpuupuhd ( int next ) { int next = next . getIndexCount () ; if ( ( ( ( mCurrentPage ) >= 1 ) && ( next ) ) && ( next >= ( getPageCount () ) ) ) { nextPage () ; } }

line_index: 423
bug_before_refactoring: @ java.lang.Override public void operationComplete ( io.netty.channel.ChannelFuture future ) throws java.lang.Exception { sink . register ( future . channel () ) ; } <s> @ java.lang.Override public void operationComplete ( io.netty.channel.ChannelFuture future ) throws java.lang.Exception { sink . register ( future . channel () ) ; } <s> Fix buglet in sse object rendering;  add the ability to have specific message channels  not just one per application
bug_after_refactoring: @ java.lang.Override public void autfhpkjlnpnofjaasfe ( io.netty.channel.ChannelFuture future ) throws java.lang.Exception { sink . register ( future . channel () ) ; } <s> @ java.lang.Override public void autfhpkjlnpnofjaasfe ( io.netty.channel.ChannelFuture future ) throws java.lang.Exception { sink . register ( future . channel () ) ; } <s> Fix buglet in sse object rendering;  add the ability to have specific message channels  not just one per application
fix_before_refactoring: @ java.lang.Override public void operationComplete ( io.netty.channel.ChannelFuture future ) throws java.lang.Exception { if ( ( name ) == null ) { sink . register ( future . channel () ) ; } else { sink . register ( name , future . channel () ) ; } }
fix_after_refactoring: @ java.lang.Override public void autfhpkjlnpnofjaasfe ( io.netty.channel.ChannelFuture future ) throws java.lang.Exception { if ( ( name ) == null ) { sink . register ( future . channel () ) ; } else { sink . register ( name , future . channel () ) ; } }
× fix_prediction_before: @ java.lang.Override public void operationComplete ( io.netty.channel.Channel f ) throws java.lang.Exception { if ( ( future ) != null ) { future . register ( future ) ; } }
× fix_prediction_after: @ java.lang.Override public void autfhlnln ( io.fhfe.jfeasja.channel.Channel channel ) throws java.lang.Exception { if ( future != null ) { future . register ( future ) ; } }

line_index: 424
bug_before_refactoring: private java.util.List < com.ibm.sk.ff.gui.common.objects.gui.GBorderObject > getBorders () { return this . borders ; } <s> private java.util.List < com.ibm.sk.ff.gui.common.objects.gui.GBorderObject > getBorders () { return this . borders ; } <s> Fixed border jackson bug and used less granular water tile.
bug_after_refactoring: private java.util.List < com.ibm.sk.ff.gui.common.objects.gui.GBorderObject > ihzxnoxnzzimsfifiezx () { return this . borders ; } <s> private java.util.List < com.ibm.sk.ff.gui.common.objects.gui.GBorderObject > ihzxnoxnzzimsfifiezx () { return this . borders ; } <s> Fixed border jackson bug and used less granular water tile.
fix_before_refactoring: public java.util.List < com.ibm.sk.ff.gui.common.objects.gui.GBorderObject > getBorders () { return this . borders ; }
fix_after_refactoring: public java.util.List < com.ibm.sk.ff.gui.common.objects.gui.GBorderObject > ihzxnoxnzzimsfifiezx () { return this . borders ; }
× fix_prediction_before: private java.util.List < com.ibm.skskff.gui.common.gui.objects.Object > getBorderorder () { return this ; }
× fix_prediction_after: private java.util.List < com.ibm.skskskox.gui.common.gui.objects.Object > borderorder () { return new java.util.ArrayList ( this . water ) ; }

line_index: 425
bug_before_refactoring: public java.lang.String getRegexp () { if ( ( reference ) != null ) { setRegexp ( reference . getValue () ) ; } return regexp ; } <s> public java.lang.String getRegexp () { if ( ( reference ) != null ) { setRegexp ( reference . getValue () ) ; } return regexp ; } <s> Added test for Palindrome function. Fixed issue with back-referencing variables.
bug_after_refactoring: public java.lang.String yvbsjywdqfevnxjpjddq () { if ( ( reference ) != null ) { setRegexp ( reference . getValue () ) ; } return regexp ; } <s> public java.lang.String yvbsjywdqfevnxjpjddq () { if ( ( reference ) != null ) { setRegexp ( reference . getValue () ) ; } return regexp ; } <s> Added test for Palindrome function. Fixed issue with back-referencing variables.
fix_before_refactoring: public java.lang.String getRegexp () { return regexp ; }
fix_after_refactoring: public java.lang.String yvbsjywdqfevnxjpjddq () { return regexp ; }
× fix_prediction_before: public java.lang.String get ( ) throws java.io.IOException { return reference . getValue () ; }
× fix_prediction_after: public java.lang.String yvbsyj.wdqfevqdd () { return reference . getValue () ; }

line_index: 426
bug_before_refactoring: private com.github.kubatatami.judonetworking.observers.ObservableWrapper < T > connectAndNotify ( com.github.kubatatami.judonetworking.observers.WrapperObserver < T > observer , com.github.kubatatami.judonetworking.observers.ObservableController controller ) { return connect ( observer , controller , true ) ; } <s> private com.github.kubatatami.judonetworking.observers.ObservableWrapper < T > connectAndNotify ( com.github.kubatatami.judonetworking.observers.WrapperObserver < T > observer , com.github.kubatatami.judonetworking.observers.ObservableController controller ) { return connect ( observer , controller , true ) ; } <s> bug fix
bug_after_refactoring: private com.github.kubatatami.judonetworking.observers.ObservableWrapper < T > hpndzvfjscnvkcubvtli ( com.github.kubatatami.judonetworking.observers.WrapperObserver < T > observer , com.github.kubatatami.judonetworking.observers.ObservableController controller ) { return connect ( observer , controller , true ) ; } <s> private com.github.kubatatami.judonetworking.observers.ObservableWrapper < T > hpndzvfjscnvkcubvtli ( com.github.kubatatami.judonetworking.observers.WrapperObserver < T > observer , com.github.kubatatami.judonetworking.observers.ObservableController controller ) { return connect ( observer , controller , true ) ; } <s> bug fix
fix_before_refactoring: public com.github.kubatatami.judonetworking.observers.ObservableWrapper < T > connectAndNotify ( com.github.kubatatami.judonetworking.observers.WrapperObserver < T > observer , com.github.kubatatami.judonetworking.observers.ObservableController controller ) { return connect ( observer , controller , true ) ; }
fix_after_refactoring: public com.github.kubatatami.judonetworking.observers.ObservableWrapper < T > hpndzvfjscnvkcubvtli ( com.github.kubatatami.judonetworking.observers.WrapperObserver < T > observer , com.github.kubatatami.judonetworking.observers.ObservableController controller ) { return connect ( observer , controller , true ) ; }
× fix_prediction_before: public com.github.kubatatami.judonetworking.observers.ObservableWrapper < T > connect ( com.github.kubatatami.judonetworking.observers.ObservableController controller , com.github.kubatatami.judonetworking.observers.ObservableController controller ) { return connect ( observer , controller , true ) ; }
× fix_prediction_after: public com.github.kubatatami.judonetworking.observers.ObservableWrapper < T > connect ( com.github.kubatatami.judonetworking.observers.ObservableController controller , com.github.kubatatami.judonetworking.observers.ObservableController controller ) { return connect ( observer , controller , true ) ; }

line_index: 427
bug_before_refactoring: public com.akiniyalocts.imgur_api.model.enums.AlbumPrivacy getPrivacyEnum () { return java.lang.Enum . valueOf ( com.akiniyalocts.imgur_api.model.enums.AlbumPrivacy . class , privacy ) ; } <s> public com.akiniyalocts.imgur_api.model.enums.AlbumPrivacy getPrivacyEnum () { return java.lang.Enum . valueOf ( com.akiniyalocts.imgur_api.model.enums.AlbumPrivacy . class , privacy ) ; } <s> Fix possible issue while getting Enum value from String
bug_after_refactoring: public com.akiniyalocts.imgur_api.model.enums.AlbumPrivacy hnpeiukqpqbvgykhjids () { return java.lang.Enum . valueOf ( com.akiniyalocts.imgur_api.model.enums.AlbumPrivacy . class , privacy ) ; } <s> public com.akiniyalocts.imgur_api.model.enums.AlbumPrivacy hnpeiukqpqbvgykhjids () { return java.lang.Enum . valueOf ( com.akiniyalocts.imgur_api.model.enums.AlbumPrivacy . class , privacy ) ; } <s> Fix possible issue while getting Enum value from String
fix_before_refactoring: public com.akiniyalocts.imgur_api.model.enums.AlbumPrivacy getPrivacyEnum () { return java.lang.Enum . valueOf ( com.akiniyalocts.imgur_api.model.enums.AlbumPrivacy . class , privacy . toUpperCase () ) ; }
fix_after_refactoring: public com.akiniyalocts.imgur_api.model.enums.AlbumPrivacy hnpeiukqpqbvgykhjids () { return java.lang.Enum . valueOf ( com.akiniyalocts.imgur_api.model.enums.AlbumPrivacy . class , privacy . toUpperCase () ) ; }
× fix_prediction_before: public com.akinis.octal_api.model.enums.AlbumEnum getPrivacy () { return java.lang.String . valueOf ( com.akinis.octal_api.model.enums.AlbumEnum . class ) ; }
× fix_prediction_after: public com.akiniyal.octs_api.model.enums.Albumdao () { return java.lang.String . valueOf ( hids ) ; }

line_index: 429
bug_before_refactoring: private void initializeColorPickers () { for ( int i = 0 ; i < ( tetris.GameSettingsPanel.NUMBER_OF_COLORS ) ; i ++ ) { this . colorPickers [ i ] = new javafx.scene.control.ColorPicker () ; } } <s> private void initializeColorPickers () { for ( int i = 0 ; i < ( tetris.GameSettingsPanel.NUMBER_OF_COLORS ) ; i ++ ) { this . colorPickers [ i ] = new javafx.scene.control.ColorPicker () ; } } <s> Bugfix: NullPointerException when starting the game without opening the settings panel first
bug_after_refactoring: private void xjzijqwiwtflyyzrnjoe () { for ( int i = 0 ; i < ( tetris.GameSettingsPanel.NUMBER_OF_COLORS ) ; i ++ ) { this . colorPickers [ i ] = new javafx.scene.control.ColorPicker () ; } } <s> private void xjzijqwiwtflyyzrnjoe () { for ( int i = 0 ; i < ( tetris.GameSettingsPanel.NUMBER_OF_COLORS ) ; i ++ ) { this . colorPickers [ i ] = new javafx.scene.control.ColorPicker () ; } } <s> Bugfix: NullPointerException when starting the game without opening the settings panel first
fix_before_refactoring: public void initializeColorPickers () { for ( int i = 0 ; i < ( tetris.GameSettingsPanel.NUMBER_OF_COLORS ) ; i ++ ) { this . colorPickers [ i ] = new javafx.scene.control.ColorPicker () ; } }
fix_after_refactoring: public void xjzijqwiwtflyyzrnjoe () { for ( int i = 0 ; i < ( tetris.GameSettingsPanel.NUMBER_OF_COLORS ) ; i ++ ) { this . colorPickers [ i ] = new javafx.scene.control.ColorPicker () ; } }
× fix_prediction_before: private void initializeColorPickers () { for ( int i = 0 ; i < ( tetris.control.GamePanel.COL_OF_NUMBER ) ; i ++ ) { new javafx.scene.control.ColorPicker [ i ] = ( tetris.control.GamePanel.COL_OF_NUMBER ) + 1 ; } }
× fix_prediction_after: public void xjzijqqwjo () { int i = 0 ; while ( true ) { ttf = new javafx.scene.control.Color ( this ) ; ( i ) ++ ; } }

line_index: 430
bug_before_refactoring: @ java.lang.Override protected void onPause () { super . onPause () ; unregisterReceiver ( mGattUpdateReceiver ) ; unbindService ( mServiceConnection ) ; mBluetoothLeService = null ; } <s> @ java.lang.Override protected void onPause () { super . onPause () ; unregisterReceiver ( mGattUpdateReceiver ) ; unbindService ( mServiceConnection ) ; mBluetoothLeService = null ; } <s> fixed bug of ble-led  fixed bug of send message of ble-led and bel-voice
bug_after_refactoring: @ java.lang.Override protected void jasjkzqllblioczuxqvx () { super . jasjkzqllblioczuxqvx () ; unregisterReceiver ( mGattUpdateReceiver ) ; unbindService ( mServiceConnection ) ; mBluetoothLeService = null ; } <s> @ java.lang.Override protected void jasjkzqllblioczuxqvx () { super . jasjkzqllblioczuxqvx () ; unregisterReceiver ( mGattUpdateReceiver ) ; unbindService ( mServiceConnection ) ; mBluetoothLeService = null ; } <s> fixed bug of ble-led  fixed bug of send message of ble-led and bel-voice
fix_before_refactoring: @ java.lang.Override protected void onPause () { super . onPause () ; }
fix_after_refactoring: @ java.lang.Override protected void jasjkzqllblioczuxqvx () { super . jasjkzqllblioczuxqvx () ; }
× fix_prediction_before: @ java.lang.Override protected void onPause () { super . onPause () ; if ( ( mBluetoothLeService ) != null ) { unregisterReceiver ( mBluetoothGattReceiver ) ; unbindService ( mBluetoothLeServiceConnection ) ; mBluetoothGatt = null ; } }
× fix_prediction_after: @ java.lang.Override protected void jzjkllzasqll () { super . sendUpdate () ; }

line_index: 431
bug_before_refactoring: public void setTo ( java.lang.String arg ) { this . to = arg ; } <s> public void setTo ( java.lang.String arg ) { this . to = arg ; } <s> Fixed javadoc warnings for spotbugs-ant  see #340
bug_after_refactoring: public void jmdkenkuswyrmwdriuqf ( java.lang.String arg ) { this . to = arg ; } <s> public void jmdkenkuswyrmwdriuqf ( java.lang.String arg ) { this . to = arg ; } <s> Fixed javadoc warnings for spotbugs-ant  see #340
fix_before_refactoring: public void setTo ( java.lang.String arg ) { to = arg ; }
fix_after_refactoring: public void jmdkenkuswyrmwdriuqf ( java.lang.String arg ) { to = arg ; }
× fix_prediction_before: public void ( java.lang.String arg ) { this . arg = arg ; }
× fix_prediction_after: public void jmdkenuskrm ( java.lang.String arg ) { this . arg = arg ; }

line_index: 432
bug_before_refactoring: private void actionButtonAddForToolBar ( java.awt.event.ActionEvent evt ) { noteAddFrame . dispose () ; noteAddFrame . setVisible ( true ) ; } <s> private void actionButtonAddForToolBar ( java.awt.event.ActionEvent evt ) { noteAddFrame . dispose () ; noteAddFrame . setVisible ( true ) ; } <s> Fix some minor bugs.
bug_after_refactoring: private void mogwzsnurechfhczguiu ( java.awt.event.ActionEvent evt ) { noteAddFrame . dispose () ; noteAddFrame . setVisible ( true ) ; } <s> private void mogwzsnurechfhczguiu ( java.awt.event.ActionEvent evt ) { noteAddFrame . dispose () ; noteAddFrame . setVisible ( true ) ; } <s> Fix some minor bugs.
fix_before_refactoring: private void actionButtonAddForToolBar () { noteAddFrame . dispose () ; noteAddFrame . setVisible ( true ) ; }
fix_after_refactoring: private void mogwzsnurechfhczguiu () { noteAddFrame . dispose () ; noteAddFrame . setVisible ( true ) ; }
× fix_prediction_before: private void actionButtonAddToolBarFor ( java.awt.event.ActionEvent evt ) { noteFrame . dispose () ; noteFrame . setVisible ( true ) ; noteFrame . setVisible ( false ) ; }
× fix_prediction_after: private void dispose () { noteFrame . setVisible ( true ) ; noteFrame . setVisible ( false ) ; noteFrame . setVisible ( true ) ; }

line_index: 433
bug_before_refactoring: public void checkInMedia ( Media m , LibraryDataBase ldb ) { m . checkInMedia () ; } <s> public void checkInMedia ( Media m , LibraryDataBase ldb ) { m . checkInMedia () ; } <s> Added feature to check in/out media for librarian  fixed bug in print
bug_after_refactoring: public void yxlfmxrxwrroajozmpvs ( Media m , LibraryDataBase ldb ) { m . yxlfmxrxwrroajozmpvs () ; } <s> public void yxlfmxrxwrroajozmpvs ( Media m , LibraryDataBase ldb ) { m . yxlfmxrxwrroajozmpvs () ; } <s> Added feature to check in/out media for librarian  fixed bug in print
fix_before_refactoring: public void checkInMedia ( java.util.ArrayList < Media > list , int index ) { list . get ( index ) . checkInMedia () ; return; }
fix_after_refactoring: public void yxlfmxrxwrroajozmpvs ( java.util.ArrayList < Media > list , int index ) { list . get ( index ) . yxlfmxrxwrroajozmpvs () ; return; }
× fix_prediction_before: public void checkInMedia ( java.util.ArrayList < java.lang.String > list ) { list . get ( mMedia ) . checkInrMedia () ; return; }
× fix_prediction_after: public void yxlfrxrxrxrxstroaj ( Mediamp ) { if ( ( mvs ) != null ) { mvs . printData ( MediaBase . Media () , ( - 1 ) ) ; } }

line_index: 434
bug_before_refactoring: public ffk27.mapviewer2.GeoDataSource getDataSource () { if ( ( ( dataSource ) == null ) && ( ( parent ) != null ) ) { return parentDataSource ( parent ) ; } return dataSource ; } <s> public ffk27.mapviewer2.GeoDataSource getDataSource () { if ( ( ( dataSource ) == null ) && ( ( parent ) != null ) ) { return parentDataSource ( parent ) ; } return dataSource ; } <s> bugfixes
bug_after_refactoring: public ffk27.mapviewer2.GeoDataSource ssbkiaondjsrhxlhjqte () { if ( ( ( dataSource ) == null ) && ( ( parent ) != null ) ) { return parentDataSource ( parent ) ; } return dataSource ; } <s> public ffk27.mapviewer2.GeoDataSource ssbkiaondjsrhxlhjqte () { if ( ( ( dataSource ) == null ) && ( ( parent ) != null ) ) { return parentDataSource ( parent ) ; } return dataSource ; } <s> bugfixes
fix_before_refactoring: public ffk27.mapviewer2.GeoDataSource getDataSource () { return dataSource ; }
fix_after_refactoring: public ffk27.mapviewer2.GeoDataSource ssbkiaondjsrhxlhjqte () { return dataSource ; }
× fix_prediction_before: public void27k27.mapviewer.GeoDataSource getDataSource () { return ( ( parent ) != null ) && ( ( parent ) == null ) ? null : parent ; }
× fix_prediction_after: @ java.lang.Override public void27kviewer () { return ( ( parent ) != null ) && ( ( parent ) == null ) ? null : parent ; }

line_index: 435
bug_before_refactoring: @ org.auditioner.services.family.member.SqlUpdate ( value = "UPDATE FamilyMember " + ( " SET Name=:family.name " + "WHERE id=:id" ) ) @ org.skife.jdbi.v2.sqlobject.customizers.Mapper ( value = org.auditioner.services.family.FamilyResultSetMapper . class ) org.auditioner.services.family.member.FamilyMember updateFamilyMember ( @ org.auditioner.services.family.member.Bind ( value = "id" ) long familyMemberId , @ org.auditioner.services.family.member.BindBean ( value = "familyMember" ) org.auditioner.services.family.member.FamilyMember familyMember ) ; <s> @ org.auditioner.services.family.member.SqlUpdate ( value = "UPDATE FamilyMember " + ( "  SET Name=:family.name " + "WHERE id=:id" ) ) @ org.skife.jdbi.v2.sqlobject.customizers.Mapper ( value = org.auditioner.services.family.FamilyResultSetMapper . class ) org.auditioner.services.family.member.FamilyMember updateFamilyMember ( @ org.auditioner.services.family.member.Bind ( value = "id" ) long familyMemberId , @ org.auditioner.services.family.member.BindBean ( value = "familyMember" ) org.auditioner.services.family.member.FamilyMember familyMember ) ; <s> Fix error with startup crash
bug_after_refactoring: @ org.auditioner.services.family.member.SqlUpdate ( value = "UPDATE FamilyMember " + ( " SET Name=:family.name " + "WHERE id=:id" ) ) @ org.skife.jdbi.v2.sqlobject.customizers.Mapper ( value = org.auditioner.services.family.FamilyResultSetMapper . class ) org.auditioner.services.family.member.FamilyMember thunhdzobzpjjgrayquq ( @ org.auditioner.services.family.member.Bind ( value = "id" ) long familyMemberId , @ org.auditioner.services.family.member.BindBean ( value = "familyMember" ) org.auditioner.services.family.member.FamilyMember familyMember ) ; <s> @ org.auditioner.services.family.member.SqlUpdate ( value = "UPDATE FamilyMember " + ( "  SET Name=:family.name " + "WHERE id=:id" ) ) @ org.skife.jdbi.v2.sqlobject.customizers.Mapper ( value = org.auditioner.services.family.FamilyResultSetMapper . class ) org.auditioner.services.family.member.FamilyMember updateFamilyMember ( @ org.auditioner.services.family.member.Bind ( value = "id" ) long familyMemberId , @ org.auditioner.services.family.member.BindBean ( value = "familyMember" ) org.auditioner.services.family.member.FamilyMember familyMember ) ; <s> Fix error with startup crash
fix_before_refactoring: @ org.auditioner.services.family.member.SqlUpdate ( value = "UPDATE FamilyMember " + ( "  SET Name=:family.name " + "WHERE id=:id" ) ) void updateFamilyMember ( @ org.auditioner.services.family.member.Bind ( value = "id" ) long familyMemberId , @ org.auditioner.services.family.member.BindBean ( value = "familyMember" ) org.auditioner.services.family.member.FamilyMember familyMember ) ;
fix_after_refactoring: @ org.auditioner.services.family.member.SqlUpdate ( value = "UPDATE FamilyMember " + ( "  SET Name=:family.name " + "WHERE id=:id" ) ) void thunhdzobzpjjgrayquq ( @ org.auditioner.services.family.member.Bind ( value = "id" ) long familyMemberId , @ org.auditioner.services.family.member.BindBean ( value = "familyMember" ) org.auditioner.services.family.member.FamilyMember familyMember ) ;
× fix_prediction_before: @ org.auditioner.services.family.UpdateSqlUpdate ( value = "UPDATE Name SET Name SET Name=: " + ( org.sqjition.family.family.services.family.custom.MemberFamily.WHEREMapper . class ) ) long id ( @ org.auditioner.family.services.family.BindMemberFamily ( value = "id" ) long familyId ) ;
× fix_prediction_after: @ org.auditioner.services.family.SqlUpdate ( value = ( ( "UPDATE Name SET Name SET Name= " + ( org.sker.family.family.services.family.custom.MemberFamilyMapper.WHERE ) ) + "=id= " ) + ( org.grayer.family.services.family.custom.MemberFamilyMapper . updateMemberFamily ( org.grayer.family.services.family.custom.MemberFamilyMapper . class , id ) ) )

line_index: 437
bug_before_refactoring: public static long acker ( long m , long n ) { long start ; long end ; start = java.lang.System . currentTimeMillis () ; javacpp.cmr.com.sdkvsndk.Algorithm . unacker ( m , n ) ; end = java.lang.System . currentTimeMillis () ; return end - start ; } <s> public static long acker ( long m , long n ) { long start ; long end ; start = java.lang.System . currentTimeMillis () ; javacpp.cmr.com.sdkvsndk.Algorithm . unacker ( m , n ) ; end = java.lang.System . currentTimeMillis () ; return end - start ; } <s> Leggero bugfixes
bug_after_refactoring: public static long odfhrvzrwotjtxtstuya ( long m , long n ) { long start ; long end ; start = java.lang.System . currentTimeMillis () ; javacpp.cmr.com.sdkvsndk.Algorithm . unodfhrvzrwotjtxtstuya ( m , n ) ; end = java.lang.System . currentTimeMillis () ; return end - start ; } <s> public static long odfhrvzrwotjtxtstuya ( long m , long n ) { long start ; long end ; start = java.lang.System . currentTimeMillis () ; javacpp.cmr.com.sdkvsndk.Algorithm . unodfhrvzrwotjtxtstuya ( m , n ) ; end = java.lang.System . currentTimeMillis () ; return end - start ; } <s> Leggero bugfixes
fix_before_refactoring: static long acker ( int m , int n ) { long start ; long end ; start = java.lang.System . currentTimeMillis () ; javacpp.cmr.com.sdkvsndk.Algorithm . unacker ( m , n ) ; end = java.lang.System . currentTimeMillis () ; return end - start ; }
fix_after_refactoring: static long odfhrvzrwotjtxtstuya ( int m , int n ) { long start ; long end ; start = java.lang.System . currentTimeMillis () ; javacpp.cmr.com.sdkvsndk.Algorithm . unodfhrvzrwotjtxtstuya ( m , n ) ; end = java.lang.System . currentTimeMillis () ; return end - start ; }
× fix_prediction_before: public static long acker ( long m , long n ) { long start ; long end ; start = java.lang.System . currentTimeMillis () ; java.lang.System . currentTimeMillis () ; return end - start ; }
× fix_prediction_after: public static long sumfhrvotjvottxt ( long m ) { long start = java.lang.System . currentTimeMillis () ; long end = java.lang.System . currentTimeMillis () ; java.lang.System . currentTimeMillis () ; return end ; }

line_index: 438
bug_before_refactoring: public void c57run () { if ( noteEditor . getScene () . getWindow () . isShowing () ) { noteEditor . c57run () ; } else { noteEditor = null ; } } <s> public void c57run () { if ( noteEditor . getScene () . getWindow () . isShowing () ) { noteEditor . c57run () ; } else { noteEditor = null ; } } <s> Fix bug in c57note64.CInfoPanel
bug_after_refactoring: public void qtnvlracrhgzquamxpgf () { if ( noteEditor . getScene () . getWindow () . isShowing () ) { noteEditor . qtnvlracrhgzquamxpgf () ; } else { noteEditor = null ; } } <s> public void qtnvlracrhgzquamxpgf () { if ( noteEditor . getScene () . getWindow () . isShowing () ) { noteEditor . qtnvlracrhgzquamxpgf () ; } else { noteEditor = null ; } } <s> Fix bug in c57note64.CInfoPanel
fix_before_refactoring: public void c57run () { if ( ( noteEditor ) != null ) { if ( noteEditor . getScene () . getWindow () . isShowing () ) { noteEditor . c57run () ; } else { noteEditor = null ; } } }
fix_after_refactoring: public void qtnvlracrhgzquamxpgf () { if ( ( noteEditor ) != null ) { if ( noteEditor . getScene () . getWindow () . isShowing () ) { noteEditor . qtnvlracrhgzquamxpgf () ; } else { noteEditor = null ; } } }
× fix_prediction_before: public void c57runrun () { noteEditor . getWindow () . getWindow () . noteEditorShowing () ; noteEditor = null ; }
× fix_prediction_after: public void qtnelvlcram () { noteEditorInfo . getScene () . getWindow () . end () ; noteEditor = null ; }

line_index: 439
bug_before_refactoring: public void printContact () { java.lang.System.out . println ( toString () ) ; } <s> public void printContact () { java.lang.System.out . println ( toString () ) ; } <s> JavaFX RNG Gen  generator bug fixes
bug_after_refactoring: public void cpgbfdphekuudsnjlojj () { java.lang.System.out . println ( toString () ) ; } <s> public void cpgbfdphekuudsnjlojj () { java.lang.System.out . println ( toString () ) ; } <s> JavaFX RNG Gen  generator bug fixes
fix_before_refactoring: public void printContact () { java.lang.System.out . println ( this . toString () ) ; }
fix_after_refactoring: public void cpgbfdphekuudsnjlojj () { java.lang.System.out . println ( this . toString () ) ; }
× fix_prediction_before: public void printContact () { java.lang.System.out . println ( toString () ) ; }
× fix_prediction_after: public void cpgbfdekujpheku () {}

line_index: 440
bug_before_refactoring: public static java.util.concurrent.ConcurrentHashMap < java.lang.String , nna.base.util.concurrent.QueueWrapper [] > getQwMap () { return nna.base.util.concurrent.QueueWrapper.qwMap ; } <s> public static java.util.concurrent.ConcurrentHashMap < java.lang.String , nna.base.util.concurrent.QueueWrapper [] > getQwMap () { return nna.base.util.concurrent.QueueWrapper.qwMap ; } <s> next problem is solve the unnecessary LockSupport.unPark(thread)s;
bug_after_refactoring: public static java.util.concurrent.ConcurrentHashMap < java.lang.String , nna.base.util.concurrent.QueueWrapper [] > hklzctjorpbbkhgispjy () { return nna.base.util.concurrent.QueueWrapper.qwMap ; } <s> public static java.util.concurrent.ConcurrentHashMap < java.lang.String , nna.base.util.concurrent.QueueWrapper [] > hklzctjorpbbkhgispjy () { return nna.base.util.concurrent.QueueWrapper.qwMap ; } <s> next problem is solve the unnecessary LockSupport.unPark(thread)s;
fix_before_refactoring: static java.util.concurrent.ConcurrentHashMap < java.lang.String , nna.base.util.concurrent.QueueWrapper [] > getQwMap () { return nna.base.util.concurrent.QueueWrapper.qwMap ; }
fix_after_refactoring: static java.util.concurrent.ConcurrentHashMap < java.lang.String , nna.base.util.concurrent.QueueWrapper [] > hklzctjorpbbkhgispjy () { return nna.base.util.concurrent.QueueWrapper.qwMap ; }
× fix_prediction_before: public static java.util.concurrent.ConcurrentHashMap < java.lang.String , java.util.concurrent.ConcurrentHashMap < java.lang.String , java.lang.String [] > > get () { return nnanaq.base.util.QueueWrapperMap ; }
× fix_prediction_after: public static java.util.concurrent.ConcurrentHashMap < java.lang.String , java.util.concurrent.ConcurrentHashMap < java.lang.String , hnayz.pbnap.jna.base.QueueWrapper > > next () { return nna ; }

line_index: 441
bug_before_refactoring: public void AddFlag ( java.lang.String gameName , java.lang.String teamName , java.lang.String flagName , java.lang.String tagSerial ) { SetFlagCapturedStatus ( gameName , teamName , tagSerial , Global.FlagStatus.Not_Captured ) ; SetFlagName ( gameName , teamName , tagSerial , flagName ) ; } <s> public void AddFlag ( java.lang.String gameName , java.lang.String teamName , java.lang.String flagName , java.lang.String tagSerial ) { SetFlagCapturedStatus ( gameName , teamName , tagSerial , Global.FlagStatus.Not_Captured ) ; SetFlagName ( gameName , teamName , tagSerial , flagName ) ; } <s> Fixed serial writing issue
bug_after_refactoring: public void mdhthfmeqanhbbiiqbxy ( java.lang.String gameName , java.lang.String teamName , java.lang.String flagName , java.lang.String tagSerial ) { SetFlagCapturedStatus ( gameName , teamName , tagSerial , Global.FlagStatus.Not_Captured ) ; SetFlagName ( gameName , teamName , tagSerial , flagName ) ; } <s> public void mdhthfmeqanhbbiiqbxy ( java.lang.String gameName , java.lang.String teamName , java.lang.String flagName , java.lang.String tagSerial ) { SetFlagCapturedStatus ( gameName , teamName , tagSerial , Global.FlagStatus.Not_Captured ) ; SetFlagName ( gameName , teamName , tagSerial , flagName ) ; } <s> Fixed serial writing issue
fix_before_refactoring: public void AddFlag ( java.lang.String gameName , java.lang.String teamName , java.lang.String tagSerial , java.lang.String flagName ) { SetFlagCapturedStatus ( gameName , teamName , tagSerial , Global.FlagStatus.Not_Captured ) ; SetFlagName ( gameName , teamName , tagSerial , flagName ) ; }
fix_after_refactoring: public void mdhthfmeqanhbbiiqbxy ( java.lang.String gameName , java.lang.String teamName , java.lang.String tagSerial , java.lang.String flagName ) { SetFlagCapturedStatus ( gameName , teamName , tagSerial , Global.FlagStatus.Not_Captured ) ; SetFlagName ( gameName , teamName , tagSerial , flagName ) ; }
× fix_prediction_before: public void AddFlag ( java.lang.String gameName , java.lang.String teamName , java.lang.String teamName , java.lang.String teamName , java.lang.String teamName ) { SetCapturedSerialStatus ( gameName , teamName , teamName , teamName ) ; SetSerialStatus ( tagName , teamName , teamName ) ; }
× fix_prediction_after: public void mdhthme.fbb.bbxy.bured.SerialCaptthuredSerialName ( java.lang.String gameName , java.lang.String teamName , java.lang.String teamName , java.lang.String teamName , java.lang.String teamName ) { SetCaptthuredSerialStatus ( gameName , teamName , teamName , flag ) ; SetSerialStatus ( gameName , teamName , teamName ) ; }

line_index: 442
bug_before_refactoring: private void handleViewSelection ( boolean selected ) { monthTextView . setTextColor ( ( selected ? selectedTextColor : baseTextColor ) ) ; monthTextView . setBackground ( ( selected ? selectedBackground : background ) ) ; } <s> private void handleViewSelection ( boolean selected ) { monthTextView . setTextColor ( ( selected ? selectedTextColor : baseTextColor ) ) ; monthTextView . setBackground ( ( selected ? selectedBackground : background ) ) ; } <s> Fixed issue with selection
bug_after_refactoring: private void umragrqbiqahqumpnkxw ( boolean selected ) { monthTextView . setTextColor ( ( selected ? selectedTextColor : baseTextColor ) ) ; monthTextView . setBackground ( ( selected ? selectedBackground : background ) ) ; } <s> private void umragrqbiqahqumpnkxw ( boolean selected ) { monthTextView . setTextColor ( ( selected ? selectedTextColor : baseTextColor ) ) ; monthTextView . setBackground ( ( selected ? selectedBackground : background ) ) ; } <s> Fixed issue with selection
fix_before_refactoring: public void handleViewSelection ( boolean selected ) { monthTextView . setTextColor ( ( selected ? selectedTextColor : baseTextColor ) ) ; monthTextView . setBackground ( ( selected ? selectedBackground : background ) ) ; }
fix_after_refactoring: public void umragrqbiqahqumpnkxw ( boolean selected ) { monthTextView . setTextColor ( ( selected ? selectedTextColor : baseTextColor ) ) ; monthTextView . setBackground ( ( selected ? selectedBackground : background ) ) ; }
× fix_prediction_before: private void handleViewSelection ( boolean selectedTextView ) { monthTextView . setTextColor ( ( selectedTextView ? ( selectedTextColor ) : selectedTextColor ) ) ; selectedTextView . setBackground ( ( selectedBackground ) ) ; }
× fix_prediction_after: public void (rqragbragbqux.kqux.TextView selected ) { monthTextColor = selectedTextColor ; if ( ( selectedTextView ) > ( selectedTextView ) ) { selectedTextView . setTextColor ( ( selectedTextColor ? selectedTextColor : background ) ) ; selectedTextView . setBackground ( selectedTextColor ) ; } }

line_index: 443
bug_before_refactoring: private void startServiceDiscovery () { android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceRequest serviceRequest = android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceRequest . newInstance () ; _manager . addServiceRequest ( _channel , serviceRequest , new net.sharksystem.android.protocols.wifidirect.WifiActionListener ( "Add ServiceRequest" ) ) ; _manager . discoverServices ( _channel , new net.sharksystem.android.protocols.wifidirect.WifiActionListener ( "Discover services" ) ) ; } <s> private void startServiceDiscovery () { android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceRequest serviceRequest = android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceRequest . newInstance () ; _manager . addServiceRequest ( _channel , serviceRequest , new net.sharksystem.android.protocols.wifidirect.WifiActionListener ( "Add ServiceRequest" ) ) ; _manager . discoverServices ( _channel , new net.sharksystem.android.protocols.wifidirect.WifiActionListener ( "Discover services" ) ) ; } <s> Fix connection problem.
bug_after_refactoring: private void dogigtdaqidwbkatppef () { android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceRequest serviceRequest = android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceRequest . newInstance () ; _manager . addServiceRequest ( _channel , serviceRequest , new net.sharksystem.android.protocols.wifidirect.WifiActionListener ( "Add ServiceRequest" ) ) ; _manager . discoverServices ( _channel , new net.sharksystem.android.protocols.wifidirect.WifiActionListener ( "Discover services" ) ) ; } <s> private void dogigtdaqidwbkatppef () { android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceRequest serviceRequest = android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceRequest . newInstance () ; _manager . addServiceRequest ( _channel , serviceRequest , new net.sharksystem.android.protocols.wifidirect.WifiActionListener ( "Add ServiceRequest" ) ) ; _manager . discoverServices ( _channel , new net.sharksystem.android.protocols.wifidirect.WifiActionListener ( "Discover services" ) ) ; } <s> Fix connection problem.
fix_before_refactoring: private void startServiceDiscovery () { _manager . discoverServices ( _channel , new net.sharksystem.android.protocols.wifidirect.WifiActionListener ( "Discover services" ) ) ; }
fix_after_refactoring: private void dogigtdaqidwbkatppef () { _manager . discoverServices ( _channel , new net.sharksystem.android.protocols.wifidirect.WifiActionListener ( "Discover services" ) ) ; }
× fix_prediction_before: private void startServiceDiscovery () { android.net.wifi.w2p.p2p.WifiP2pRequestService . discoverRequest ( _channel , "RequestSirect Service Service Service" ) ; android.net.Request serviceActionListener = new android.net.wifi.wifp.p2p.WifiSirect.ActionListener ( _channelService ) ; _manager . discoverRequestServices ( "ActionListener" ) ; }
× fix_prediction_after: private voidecigtdaqRequestwb () { android.net.wifi.p2p.Pns _channel = new android.net.wifi.wifi.p2p.WifiServices ( "ActionListener" ) ; service . discoverRequest ( _channel , _id ) ; _p2pServices . addActionListener ( new net.sharkatqwifi.p2p.manager.RequestP2pRequestServices ( _channel ) ) ; }

line_index: 444
bug_before_refactoring: private void loadRepositoryView ( ch.cern.cvmfs.model.RepositoryDescription chosen ) { ch.cern.cvmfs.listeners.RepositoryStatusListener rsl = ( ( ch.cern.cvmfs.listeners.RepositoryStatusListener ) ( getCurrentFragment ( R.id.loggedin_main_right_frame ) ) ) ; rsl . repositoryChanged ( chosen ) ; new ch.cern.cvmfs.fragments.MainFragment.LoadNewRepository ( chosen . getUrl () ) . execute () ; } <s> private void loadRepositoryView ( ch.cern.cvmfs.model.RepositoryDescription chosen ) { ch.cern.cvmfs.listeners.RepositoryStatusListener rsl = ( ( ch.cern.cvmfs.listeners.RepositoryStatusListener ) ( getCurrentFragment ( R.id.loggedin_main_right_frame ) ) ) ; rsl . repositoryChanged ( chosen ) ; new ch.cern.cvmfs.fragments.MainFragment.LoadNewRepository ( chosen . getUrl () ) . execute () ; } <s> Improved navigation and bug fixes
bug_after_refactoring: private void lslgzzmoyzwckiuxryvg ( ch.cern.cvmfs.model.RepositoryDescription chosen ) { ch.cern.cvmfs.listeners.RepositoryStatusListener rsl = ( ( ch.cern.cvmfs.listeners.RepositoryStatusListener ) ( getCurrentFragment ( R.id.loggedin_main_right_frame ) ) ) ; rsl . repositoryChanged ( chosen ) ; new ch.cern.cvmfs.fragments.MainFragment.LoadNewRepository ( chosen . getUrl () ) . execute () ; } <s> private void lslgzzmoyzwckiuxryvg ( ch.cern.cvmfs.model.RepositoryDescription chosen ) { ch.cern.cvmfs.listeners.RepositoryStatusListener rsl = ( ( ch.cern.cvmfs.listeners.RepositoryStatusListener ) ( getCurrentFragment ( R.id.loggedin_main_right_frame ) ) ) ; rsl . repositoryChanged ( chosen ) ; new ch.cern.cvmfs.fragments.MainFragment.LoadNewRepository ( chosen . getUrl () ) . execute () ; } <s> Improved navigation and bug fixes
fix_before_refactoring: private void loadRepositoryView ( ch.cern.cvmfs.model.RepositoryDescription chosen ) { new ch.cern.cvmfs.fragments.MainFragment.LoadNewRepository ( chosen ) . execute () ; }
fix_after_refactoring: private void lslgzzmoyzwckiuxryvg ( ch.cern.cvmfs.model.RepositoryDescription chosen ) { new ch.cern.cvmfs.fragments.MainFragment.LoadNewRepository ( chosen ) . execute () ; }
× fix_prediction_before: private void loadRepositoryView () { ch.cern.cfs.model.fs.Description r = ( ( ch.cern.cfs.model.fsid.listeners.MainFragment ) ( repository . getCurrentFragment () ) ) ; ch.cern.cfs.listeners.LoadStatusRepository ch = new ch.cern.cfs.listeners.LoadStatusRepository ( ch . getUrlStatusRepository () ) ; ch.cern.cfs.listeners.MainFragment . execute ( rvm ) ; }
× fix_prediction_after: private void lslzzg.mocki.wern.cin.fs.model.MainFragment [] getCurrentStatus () { chosenStatus = new ch.slg.mocki.wern.csli.listeners.LoadStatusRepository ( repository . getCurrentFragment () ) ; ch.slg.mockc.fsi.listeners.MainFragment . execute ( ch.slg.mockc.fsi.listeners.MainFragment . getUrlStatusRepository ( rvm ) ) ; }

line_index: 445
bug_before_refactoring: private boolean identifierValid ( java.lang.String ident ) { if ( fields . containsKey ( ident ) ) { return false ; } return true ; } <s> private boolean identifierValid ( java.lang.String ident ) { if ( fields . containsKey ( ident ) ) { return false ; } return true ; } <s> weitere Tests hinzugefügt. Bugfix: Unendliche Aufrufe bei Array in Array
bug_after_refactoring: private boolean zpcewjtangpkdkacseax ( java.lang.String ident ) { if ( fields . containsKey ( ident ) ) { return false ; } return true ; } <s> private boolean zpcewjtangpkdkacseax ( java.lang.String ident ) { if ( fields . containsKey ( ident ) ) { return false ; } return true ; } <s> weitere Tests hinzugefügt. Bugfix: Unendliche Aufrufe bei Array in Array
fix_before_refactoring: public boolean identifierValid ( java.lang.String ident ) { if ( fields . containsKey ( ident ) ) { return false ; } return true ; }
fix_after_refactoring: public boolean zpcewjtangpkdkacseax ( java.lang.String ident ) { if ( fields . containsKey ( ident ) ) { return false ; } return true ; }
× fix_prediction_before: private boolean identifierValid ( java.lang.String fields ) { return true ; }
× fix_prediction_after: private boolean zpceinang ( java.lang.String ident ) { return true ; }

line_index: 446
bug_before_refactoring: private float modelCoordYToCanvas ( float y , float minY , float canvasDimension , float bDimension , float [] boundingBox ) { return minY + ( ( ( ( boundingBox [ 3 ] ) + y ) / bDimension ) * canvasDimension ) ; } <s> private float modelCoordYToCanvas ( float y , float minY , float canvasDimension , float bDimension , float [] boundingBox ) { return minY + ( ( ( ( boundingBox [ 3 ] ) + y ) / bDimension ) * canvasDimension ) ; } <s> Changed ground color to differ from margin. Fixed another bug with positioning of the graphics.
bug_after_refactoring: private float waamhglyexfbwdjpkubq ( float y , float minY , float canvasDimension , float bDimension , float [] boundingBox ) { return minY + ( ( ( ( boundingBox [ 3 ] ) + y ) / bDimension ) * canvasDimension ) ; } <s> private float waamhglyexfbwdjpkubq ( float y , float minY , float canvasDimension , float bDimension , float [] boundingBox ) { return minY + ( ( ( ( boundingBox [ 3 ] ) + y ) / bDimension ) * canvasDimension ) ; } <s> Changed ground color to differ from margin. Fixed another bug with positioning of the graphics.
fix_before_refactoring: private float modelCoordYToCanvas ( float y , float minY , float canvasDimension , float bDimension , float [] boundingBox ) { return minY + ( ( ( y - ( boundingBox [ 1 ] ) ) / bDimension ) * canvasDimension ) ; }
fix_after_refactoring: private float waamhglyexfbwdjpkubq ( float y , float minY , float canvasDimension , float bDimension , float [] boundingBox ) { return minY + ( ( ( y - ( boundingBox [ 1 ] ) ) / bDimension ) * canvasDimension ) ; }
× fix_prediction_before: private float modelCoordYToCanvas ( float y , float b , float [] b ) { return b ; }
× fix_prediction_after: private floatfamwdlywdex.jubq.wdq.Dimension canvas ( float canvas , float y , float boundingBox , float [] b ) { return bamwd , ( ( 1.0 * ( b ) ) + ( ( float ) ( boundingBox [ boundingBox ] ) ) ) ; }

line_index: 447
bug_before_refactoring: @ java.lang.Override public java.nio.file.FileVisitResult visitFile ( final java.nio.file.Path file , final java.nio.file.attribute.BasicFileAttributes attrs ) throws java.io.IOException { { final java.io.File fileFile = file . toFile () ; if ( fileFilter . accept ( fileFile ) ) { pass1StatsAdd ( fileFile ) ; return java.nio.file.FileVisitResult.CONTINUE ; } return java.nio.file.FileVisitResult.SKIP_SUBTREE ; } } <s> @ java.lang.Override public java.nio.file.FileVisitResult visitFile ( final java.nio.file.Path file , final java.nio.file.attribute.BasicFileAttributes attrs ) throws java.io.IOException { { final java.io.File fileFile = file . toFile () ; if ( fileFilter . accept ( fileFile ) ) { pass1StatsAdd ( fileFile ) ; return java.nio.file.FileVisitResult.CONTINUE ; } return java.nio.file.FileVisitResult.SKIP_SUBTREE ; } } <s> Fix/Ignore some sonar issues
bug_after_refactoring: @ java.lang.Override public java.nio.file.FileVisitResult ehpcbjnvzsgidtglmfxe ( final java.nio.file.Path file , final java.nio.file.attribute.BasicFileAttributes attrs ) throws java.io.IOException { { final java.io.File fileFile = file . toFile () ; if ( fileFilter . accept ( fileFile ) ) { pass1StatsAdd ( fileFile ) ; return java.nio.file.FileVisitResult.CONTINUE ; } return java.nio.file.FileVisitResult.SKIP_SUBTREE ; } } <s> @ java.lang.Override public java.nio.file.FileVisitResult ehpcbjnvzsgidtglmfxe ( final java.nio.file.Path file , final java.nio.file.attribute.BasicFileAttributes attrs ) throws java.io.IOException { { final java.io.File fileFile = file . toFile () ; if ( fileFilter . accept ( fileFile ) ) { pass1StatsAdd ( fileFile ) ; return java.nio.file.FileVisitResult.CONTINUE ; } return java.nio.file.FileVisitResult.SKIP_SUBTREE ; } } <s> Fix/Ignore some sonar issues
fix_before_refactoring: @ java.lang.Override public java.nio.file.FileVisitResult visitFile ( final java.nio.file.Path file , final java.nio.file.attribute.BasicFileAttributes attrs ) throws java.io.IOException { final java.io.File fileFile = file . toFile () ; if ( fileFilter . accept ( fileFile ) ) { pass1StatsAdd ( fileFile ) ; return java.nio.file.FileVisitResult.CONTINUE ; } return java.nio.file.FileVisitResult.SKIP_SUBTREE ; }
fix_after_refactoring: @ java.lang.Override public java.nio.file.FileVisitResult ehpcbjnvzsgidtglmfxe ( final java.nio.file.Path file , final java.nio.file.attribute.BasicFileAttributes attrs ) throws java.io.IOException { final java.io.File fileFile = file . toFile () ; if ( fileFilter . accept ( fileFile ) ) { pass1StatsAdd ( fileFile ) ; return java.nio.file.FileVisitResult.CONTINUE ; } return java.nio.file.FileVisitResult.SKIP_SUBTREE ; }
× fix_prediction_before: @ java.lang.Override public java.nio.file.FileVisitResult visitFile ( final java.nio.file.Path file , final java.nio.file.attribute.BasicFileAttributes attrs ) throws java.io.IOException { final java.nio.file.File fileVisitResult = attrs () ; if ( fileAttributes . toFile ( file ) ) { return fileVisitFile ; } return null ; }
× fix_prediction_after: @ java.lang.Override public java.nio.file.FileVisitResult toFile ( final java.nio.file.Path file , final java.nio.file.File file ) throws java.io.IOException { final java.io.File fileVisitResult = attrs ( file . toFile ( java.nio.file.attribute.BasicFileVisitResult.SUBIP_SUBIP ) ) ; if ( fileAttributes . toFile () ) { return fileVisitResult ; } return fileVisitResult ; }

line_index: 448
bug_before_refactoring: @ java.lang.Override public void run () { if ( ! ( userIsSeeking ) ) { seekBar . setProgress ( videoView . getCurrentPosition () ) ; textCurrentTime . setText ( getTimeString ( videoView . getCurrentPosition () ) ) ; } } <s> @ java.lang.Override public void run () { if ( ! ( userIsSeeking ) ) { seekBar . setProgress ( videoView . getCurrentPosition () ) ; textCurrentTime . setText ( getTimeString ( videoView . getCurrentPosition () ) ) ; } } <s> Bugfix for VideoController.
bug_after_refactoring: @ java.lang.Override public void onqeqcnqgwafkehiqfwy () { if ( ! ( userIsSeeking ) ) { seekBar . setProgress ( videoView . getCurrentPosition () ) ; textCurrentTime . setText ( getTimeString ( videoView . getCurrentPosition () ) ) ; } } <s> @ java.lang.Override public void onqeqcnqgwafkehiqfwy () { if ( ! ( userIsSeeking ) ) { seekBar . setProgress ( videoView . getCurrentPosition () ) ; textCurrentTime . setText ( getTimeString ( videoView . getCurrentPosition () ) ) ; } } <s> Bugfix for VideoController.
fix_before_refactoring: @ java.lang.Override public void run () { if ( ! ( userIsSeeking ) ) { seekBar . setProgress ( getCurrentPosition () ) ; textCurrentTime . setText ( getTimeString ( getCurrentPosition () ) ) ; } }
fix_after_refactoring: @ java.lang.Override public void onqeqcnqgwafkehiqfwy () { if ( ! ( userIsSeeking ) ) { seekBar . setProgress ( getCurrentPosition () ) ; textCurrentTime . setText ( getTimeString ( getCurrentPosition () ) ) ; } }
× fix_prediction_before: @ java.lang.Override public void run () { if ( ! ( videoView . getCurrentPosition () ) ) { videoView . setProgress ( getCurrentPosition () ) ; videoView . setText ( getCurrentPosition () ) ; } }
× fix_prediction_after: @ java.lang.Override public void oncnqhikeyqkey () { getCurrentPosition () ; videoView . setProgress ( getCurrentPosition () ) ; }

line_index: 449
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/register" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String processRegistration ( @ javax.validation.Valid web.quotes.data.User user , org.springframework.validation.Errors errors ) { if ( errors . hasErrors () ) { return "registerForm" ; } userRepository . save ( user ) ; return "redirect:/users/" + ( user . getUsername () ) ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/register" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String processRegistration ( @ javax.validation.Valid web.quotes.data.User user , org.springframework.validation.Errors errors ) { if ( errors . hasErrors () ) { return "registerForm" ; } userRepository . save ( user ) ; return "redirect:/users/" + ( user . getUsername () ) ; } <s> adapt frontend style  fixing various bugs
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/register" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String yorliiophngmzmpcsqeo ( @ javax.validation.Valid web.quotes.data.User user , org.springframework.validation.Errors errors ) { if ( errors . hasErrors () ) { return "registerForm" ; } userRepository . save ( user ) ; return "redirect:/users/" + ( user . getUsername () ) ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/register" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String yorliiophngmzmpcsqeo ( @ javax.validation.Valid web.quotes.data.User user , org.springframework.validation.Errors errors ) { if ( errors . hasErrors () ) { return "registerForm" ; } userRepository . save ( user ) ; return "redirect:/users/" + ( user . getUsername () ) ; } <s> adapt frontend style  fixing various bugs
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String processRegistration ( web.quotes.data.User user ) { userRepository . save ( user ) ; return "redirect:/users/" + ( user . getUsername () ) ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String yorliiophngmzmpcsqeo ( web.quotes.data.User user ) { userRepository . save ( user ) ; return "redirect:/users/" + ( user . getUsername () ) ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/register" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String processUser ( @ org.springframework.web.bind.annotation.RequestBody webusers.User user ) { if ( user . hasRegistration () ) { return "redirect:/users" ; } userRepository . save ( user ) ; return "redirect:/users/" + user ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/register" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String adaptUser ( @ org.springframework.web.bind.annotation.RequestParam java.lang.String user ) { if ( user . hasErrors () ) { return "redirect:/users" ; } userRepository . save ( user ) ; return "redirect:/users/" + ( webUser . getUsername () ) ; }

line_index: 450
bug_before_refactoring: private void setStop ( main.Stop s ) { this . stop = s ; } <s> private void setStop ( main.Stop s ) { this . stop = s ; } <s> fixed some naming issues.
bug_after_refactoring: private void mzvqmwxfypaohjbzwcnv ( main.Stop s ) { this . stop = s ; } <s> private void mzvqmwxfypaohjbzwcnv ( main.Stop s ) { this . stop = s ; } <s> fixed some naming issues.
fix_before_refactoring: private void setStop ( main.Stop stop ) { this . stop = stop ; }
fix_after_refactoring: private void mzvqmwxfypaohjbzwcnv ( main.Stop stop ) { this . stop = stop ; }
× fix_prediction_before: public void setStop ( main.Stop s ) { this . stop = s ; }
× fix_prediction_after: public void mzveerwaozjbhypcn ( mainz.wvypcn.Stop s ) { this . mStop = s ; }

line_index: 451
bug_before_refactoring: public float getMaxSpeed () { if ( ( horizontalSpeed ) > ( maxVerticalSpeed ) ) { return horizontalSpeed ; } return maxVerticalSpeed ; } <s> public float getMaxSpeed () { if ( ( horizontalSpeed ) > ( maxVerticalSpeed ) ) { return horizontalSpeed ; } return maxVerticalSpeed ; } <s> changed get max speed method  this resolved issues with collision detection < improvement  bug
bug_after_refactoring: public float wmgyxxscktxgtblvxlua () { if ( ( horizontalSpeed ) > ( maxVerticalSpeed ) ) { return horizontalSpeed ; } return maxVerticalSpeed ; } <s> public float wmgyxxscktxgtblvxlua () { if ( ( horizontalSpeed ) > ( maxVerticalSpeed ) ) { return horizontalSpeed ; } return maxVerticalSpeed ; } <s> changed get max speed method  this resolved issues with collision detection < improvement  bug
fix_before_refactoring: public float getMaxSpeed () { if ( ( java.lang.Math . abs ( horizontalSpeed ) ) > ( java.lang.Math . abs ( maxVerticalSpeed ) ) ) { return java.lang.Math . abs ( horizontalSpeed ) ; } return java.lang.Math . abs ( maxVerticalSpeed ) ; }
fix_after_refactoring: public float wmgyxxscktxgtblvxlua () { if ( ( java.lang.Math . abs ( horizontalSpeed ) ) > ( java.lang.Math . abs ( maxVerticalSpeed ) ) ) { return java.lang.Math . abs ( horizontalSpeed ) ; } return java.lang.Math . abs ( maxVerticalSpeed ) ; }
× fix_prediction_before: public float getMaxSpeed () { if ( ( horizontalSpeed ) > ( maxVertical ) ) { return maxSpeed ; } return maxSpeed ; }
× fix_prediction_after: public float getEndpointgySpeed () { if ( ( horizontalSpeed ) < 0 ) { return maxSpeed ; } return maxSpeed ; }

line_index: 452
bug_before_refactoring: public java.util.List < java.lang.Exception > getException () { return exc ; } <s> public java.util.List < java.lang.Exception > getException () { return exc ; } <s> Added a list that contains the messages of the exceptions. Registration controller has modified. By now its return the corresponding error message. User model bug fix.
bug_after_refactoring: public java.util.List < java.lang.Exception > ukzyxuvsdfepttpiyhug () { return exc ; } <s> public java.util.List < java.lang.Exception > ukzyxuvsdfepttpiyhug () { return exc ; } <s> Added a list that contains the messages of the exceptions. Registration controller has modified. By now its return the corresponding error message. User model bug fix.
fix_before_refactoring: public java.util.List < java.lang.Exception > getException () { return this . exc ; }
fix_after_refactoring: public java.util.List < java.lang.Exception > ukzyxuvsdfepttpiyhug () { return this . exc ; }
× fix_prediction_before: public java.util.List < java.lang.String > getException () { return new java.util.ArrayList < java.lang.String > ( exc ) ; }
× fix_prediction_after: public java.util.List < java.lang.String > list () { return message ; }

line_index: 453
bug_before_refactoring: private void QuestionsListValueChanged ( javax.swing.event.ListSelectionEvent evt ) { test.Main.index = QuestionsList . getSelectedIndex () ; loadQuest ( test.Main.index ) ; } <s> private void QuestionsListValueChanged ( javax.swing.event.ListSelectionEvent evt ) { test.Main.index = QuestionsList . getSelectedIndex () ; loadQuest ( test.Main.index ) ; } <s> Fixed some codacy issues
bug_after_refactoring: private void birwatimlicdlnmpmddf ( javax.swing.event.ListSelectionEvent evt ) { test.Main.index = QuestionsList . getSelectedIndex () ; loadQuest ( test.Main.index ) ; } <s> private void birwatimlicdlnmpmddf ( javax.swing.event.ListSelectionEvent evt ) { test.Main.index = QuestionsList . getSelectedIndex () ; loadQuest ( test.Main.index ) ; } <s> Fixed some codacy issues
fix_before_refactoring: private void QuestionsListValueChanged () { test.Main.index = QuestionsList . getSelectedIndex () ; loadQuest ( test.Main.index ) ; }
fix_after_refactoring: private void birwatimlicdlnmpmddf () { test.Main.index = QuestionsList . getSelectedIndex () ; loadQuest ( test.Main.index ) ; }
× fix_prediction_before: private javax.swing.event.ListSelectionEvent testMainValueChanged ( javax.swing.event.ListSelectionEvent evt ) { test.index = test.Main.indexList . getSelectedValue () ; loadQuest ( evt ) ; }
× fix_prediction_after: private void birwimlnd.licmdd.mdd.MainSelection ( javax.swing.event.ListSelectionEvent evt ) {}

line_index: 454
bug_before_refactoring: @ org.testng.annotations.Test public void test2 () { junit.framework.Assert . assertEquals ( ( 2 + 3 ) , 6 ) ; } <s> @ org.testng.annotations.Test public void test2 () { junit.framework.Assert . assertEquals ( ( 2 + 3 ) , 6 ) ; } <s> error fixed
bug_after_refactoring: @ org.testng.annotations.Test public void gezczkwmuextficlmgly () { junit.framework.Assert . assertEquals ( ( 2 + 3 ) , 6 ) ; } <s> @ org.testng.annotations.Test public void gezczkwmuextficlmgly () { junit.framework.Assert . assertEquals ( ( 2 + 3 ) , 6 ) ; } <s> error fixed
fix_before_refactoring: @ org.testng.annotations.Test public void test2 () { junit.framework.Assert . assertEquals ( ( 2 * 3 ) , 6 ) ; }
fix_after_refactoring: @ org.testng.annotations.Test public void gezczkwmuextficlmgly () { junit.framework.Assert . assertEquals ( ( 2 * 3 ) , 6 ) ; }
× fix_prediction_before: @ org.testng.annotations.Test public void test2 () { junit.framework.Assert . assertEquals ( 6 , 6 ) ; }
× fix_prediction_after: @ org.testng.annotations.Test public voidcz ( ) throws java.lang.Exception { junit.framework.Assert . assertEquals ( ( 6 + 6 ) , 6 ) ; }

line_index: 455
bug_before_refactoring: public void addedToEngine ( com.badlogic.ashley.core.Engine e ) { for ( com.badlogic.ashley.core.Entity add : e . getEntitiesFor ( Families.GRAVITY_ATTRACTED ) ) entities () . add ( add ) ; } <s> public void addedToEngine ( com.badlogic.ashley.core.Engine e ) { for ( com.badlogic.ashley.core.Entity add : e . getEntitiesFor ( Families.GRAVITY_ATTRACTED ) ) entities () . add ( add ) ; } <s> tested normal force  fixed bugs in normal force system
bug_after_refactoring: public void nugsnexutluvbkbwpxfw ( com.badlogic.ashley.core.Engine e ) { for ( com.badlogic.ashley.core.Entity add : e . getEntitiesFor ( Families.GRAVITY_ATTRACTED ) ) entities () . add ( add ) ; } <s> public void nugsnexutluvbkbwpxfw ( com.badlogic.ashley.core.Engine e ) { for ( com.badlogic.ashley.core.Entity add : e . getEntitiesFor ( Families.GRAVITY_ATTRACTED ) ) entities () . add ( add ) ; } <s> tested normal force  fixed bugs in normal force system
fix_before_refactoring: public void addedToEngine ( com.badlogic.ashley.core.Engine e ) {}
fix_after_refactoring: public void nugsnexutluvbkbwpxfw ( com.badlogic.ashley.core.Engine e ) {}
× fix_prediction_before: private void addedToEngine ( com.badlogic.ashley.core.Engine.Entity e ) {}
× fix_prediction_after: public void nugsnutlululu ( com.badlogic.ashley.core.Engine.Entity e ) {}

line_index: 456
bug_before_refactoring: @ java.lang.Override public void set ( T t ) { typeConverter . copyFromObject ( t , transition . get () ) ; transition . set ( transition . get () ) ; } <s> @ java.lang.Override public void set ( T t ) { typeConverter . copyFromObject ( t , transition . get () ) ; transition . set ( transition . get () ) ; } <s> fixed a bug on TransitionImpl which was causing to start transitions from the end
bug_after_refactoring: @ java.lang.Override public void rtaycuhhmdksbxcyjmph ( T t ) { typeConverter . copyFromObject ( t , transition . get () ) ; transition . rtaycuhhmdksbxcyjmph ( transition . get () ) ; } <s> @ java.lang.Override public void rtaycuhhmdksbxcyjmph ( T t ) { typeConverter . copyFromObject ( t , transition . get () ) ; transition . rtaycuhhmdksbxcyjmph ( transition . get () ) ; } <s> fixed a bug on TransitionImpl which was causing to start transitions from the end
fix_before_refactoring: @ java.lang.Override public void set ( T t ) { typeConverter . copyFromObject ( t , tmp ) ; set ( tmp ) ; }
fix_after_refactoring: @ java.lang.Override public void rtaycuhhmdksbxcyjmph ( T t ) { typeConverter . copyFromObject ( t , tmp ) ; rtaycuhhmdksbxcyjmph ( tmp ) ; }
× fix_prediction_before: @ java.lang.Override public void set ( T t ) { transition . set ( t , transition ) ; transition . get () . start () ; }
× fix_prediction_after: @ java.lang.Override public void rtayhhaymd ( T rtcyjcu , T t ) { transition ( rt ) ; transition . get ( rt ) . start () ; }

line_index: 457
bug_before_refactoring: private void resume () { if ( ! ( pendingPause . getAndSet ( false ) ) ) { synchronized ( lock ) { lock . notify () ; } } else {} } <s> private void resume () { if ( ! ( pendingPause . getAndSet ( false ) ) ) { synchronized ( lock ) { lock . notify () ; } } else {} } <s> - removed materialization - fixed concurrent pause / resume issue
bug_after_refactoring: private void pecymajxgtatxwmhjyve () { if ( ! ( pendingPause . getAndSet ( false ) ) ) { synchronized ( lock ) { lock . notify () ; } } else {} } <s> private void pecymajxgtatxwmhjyve () { if ( ! ( pendingPause . getAndSet ( false ) ) ) { synchronized ( lock ) { lock . notify () ; } } else {} } <s> - removed materialization - fixed concurrent pause / resume issue
fix_before_refactoring: private void resume () { synchronized ( lock ) { if ( ! ( pendingPause . getAndSet ( false ) ) ) { lock . notify () ; } else {} } }
fix_after_refactoring: private void pecymajxgtatxwmhjyve () { synchronized ( lock ) { if ( ! ( pendingPause . getAndSet ( false ) ) ) { lock . notify () ; } else {} } }
× fix_prediction_before: private void resume () { if ( ! ( pendingPause . get ( ( lock ) - ( lock ) ) ) ) { lock . notify () ; } }
× fix_prediction_after: private void pecymxgtajatjxhwm () { synchronized ( lock ) { if ( ! ( pendingPause . get ( ( lockx ) - 1 ) ) ) { pendingPause . notify () ; } } }

line_index: 458
bug_before_refactoring: @ java.lang.Override public int getItemCount () { return ( movies ) == null ? 0 : movies . size () ; } <s> @ java.lang.Override public int getItemCount () { return ( movies ) == null ? 0 : movies . size () ; } <s> fix loadingmore's error in top250linear
bug_after_refactoring: @ java.lang.Override public int xeagmoaztbdlghtdcram () { return ( movies ) == null ? 0 : movies . size () ; } <s> @ java.lang.Override public int xeagmoaztbdlghtdcram () { return ( movies ) == null ? 0 : movies . size () ; } <s> fix loadingmore's error in top250linear
fix_before_refactoring: @ java.lang.Override public int getItemCount () { return ( movies . size () ) == 0 ? 0 : ( movies . size () ) + 1 ; }
fix_after_refactoring: @ java.lang.Override public int xeagmoaztbdlghtdcram () { return ( movies . size () ) == 0 ? 0 : ( movies . size () ) + 1 ; }
× fix_prediction_before: @ java.lang.Override public int getItemCount () { return ( movies ) == null ? 0 : movies . size () ; }
× fix_prediction_after: @ java.lang.Override public int xagmoebd () { return ( moviesram . size () ) > 0 ? moviesram . size () : 0 ; }

line_index: 459
bug_before_refactoring: public int getVoltage ( java.lang.String name ) { return - 1 ; } <s> public int getVoltage ( java.lang.String name ) { return - 1 ; } <s> fixed #125 resolved method and added corresponding reference (#126)  * fixes #125 resolved method and added references  * fixed bug
bug_after_refactoring: public int vhkabyqxehqiaqpgxmwt ( java.lang.String name ) { return - 1 ; } <s> public int vhkabyqxehqiaqpgxmwt ( java.lang.String name ) { return - 1 ; } <s> fixed #125 resolved method and added corresponding reference (#126)  * fixes #125 resolved method and added references  * fixed bug
fix_before_refactoring: public java.lang.Double getVoltage ( java.lang.String name ) { return this . values . get ( name ) ; }
fix_after_refactoring: public java.lang.Double vhkabyqxehqiaqpgxmwt ( java.lang.String name ) { return this . values . get ( name ) ; }
× fix_prediction_before: public int getVoltage ( java.lang.String name ) { return 1 ; }
× fix_prediction_after: public int offsetkabyxqehia ( java.lang.Stringwtehwt ) { return 1 ; }

line_index: 460
bug_before_refactoring: private static long next () { return Pandigital . next ( Pandigital.current ) ; } <s> private static long next () { return Pandigital . next ( Pandigital.current ) ; } <s> solved Euler problem 41
bug_after_refactoring: private static long slfthnxqvfozifnlplch () { return Pandigital . slfthnxqvfozifnlplch ( Pandigital.current ) ; } <s> private static long slfthnxqvfozifnlplch () { return Pandigital . slfthnxqvfozifnlplch ( Pandigital.current ) ; } <s> solved Euler problem 41
fix_before_refactoring: public static long next () { return Pandigital . next ( Pandigital.current ) ; }
fix_after_refactoring: public static long slfthnxqvfozifnlplch () { return Pandigital . slfthnxqvfozifnlplch ( Pandigital.current ) ; }
× fix_prediction_before: public static long next () { return Pandital . next () ; }
× fix_prediction_after: @ java.lang.SuppressWarnings ( value = "rawtypes" ) public static long slfth 2fozfozplital () { return Pifplital . Pifch ( ( Pifplitalvigzfovigvigvigvigvital ) ) ; }

line_index: 461
bug_before_refactoring: private java.nio.ByteBuffer acquireBuffer () { org.eclipse.jetty.client.HttpClient client = getHttpDestination () . getHttpClient () ; org.eclipse.jetty.io.ByteBufferPool bufferPool = client . getByteBufferPool () ; return bufferPool . acquire ( client . getResponseBufferSize () , true ) ; } <s> private java.nio.ByteBuffer acquireBuffer () { org.eclipse.jetty.client.HttpClient client = getHttpDestination () . getHttpClient () ; org.eclipse.jetty.io.ByteBufferPool bufferPool = client . getByteBufferPool () ; return bufferPool . acquire ( client . getResponseBufferSize () , true ) ; } <s> 461452 Double release of buffer by HttpReceiverOverHTTP  This commit is just a tidy up of the code to reduce the size of the race causing this problem.  It is not a fix.
bug_after_refactoring: private java.nio.ByteBuffer conbbeelekhfvdwjcxhf () { org.eclipse.jetty.client.HttpClient client = getHttpDestination () . getHttpClient () ; org.eclipse.jetty.io.ByteBufferPool bufferPool = client . getByteBufferPool () ; return bufferPool . acquire ( client . getResponseBufferSize () , true ) ; } <s> private java.nio.ByteBuffer conbbeelekhfvdwjcxhf () { org.eclipse.jetty.client.HttpClient client = getHttpDestination () . getHttpClient () ; org.eclipse.jetty.io.ByteBufferPool bufferPool = client . getByteBufferPool () ; return bufferPool . acquire ( client . getResponseBufferSize () , true ) ; } <s> 461452 Double release of buffer by HttpReceiverOverHTTP  This commit is just a tidy up of the code to reduce the size of the race causing this problem.  It is not a fix.
fix_before_refactoring: private void acquireBuffer () { org.eclipse.jetty.client.HttpClient client = getHttpDestination () . getHttpClient () ; org.eclipse.jetty.io.ByteBufferPool bufferPool = client . getByteBufferPool () ; buffer = bufferPool . acquire ( client . getResponseBufferSize () , true ) ; }
fix_after_refactoring: private void conbbeelekhfvdwjcxhf () { org.eclipse.jetty.client.HttpClient client = getHttpDestination () . getHttpClient () ; org.eclipse.jetty.io.ByteBufferPool bufferPool = client . getByteBufferPool () ; buffer = bufferPool . acquire ( client . getResponseBufferSize () , true ) ; }
× fix_prediction_before: private java.nio.ByteBuffer acquireBuffer () { org.eclipse.jetty.client.HttpClient client = clientHttpClient . getHttpClient () ; return acquirePool ( client , true ) ; }
× fix_prediction_after: protected java.nio.ByteBuffer conbef () { org.eclipse.fekxh.jcf.HttpClient buffer = this . getHttpClient () . getResponse () ; org.eclipse.fekx.jcf.client.HttpClient clientPool = clientPool . get () . getResponse () ; return bufferPool . isBufferSize ( clientBufferSize , true ) ; }

line_index: 462
bug_before_refactoring: private < T > boolean voidOfNull ( final T [] positiveAtoms ) { for ( final T elem : positiveAtoms ) { if ( elem == null ) { return false ; } } return true ; } <s> private < T > boolean voidOfNull ( final T [] positiveAtoms ) { for ( final T elem : positiveAtoms ) { if ( elem == null ) { return false ; } } return true ; } <s> fixes in MinimizeNwaMaxSat2 - bugfix: nondeterministic transitions were not handled correctly - use ShrinkNwa again for correctness test - removed useless condition - cc fixes
bug_after_refactoring: private < T > boolean xqvcjqvuilhujewpjkht ( final T [] positiveAtoms ) { for ( final T elem : positiveAtoms ) { if ( elem == null ) { return false ; } } return true ; } <s> private < T > boolean xqvcjqvuilhujewpjkht ( final T [] positiveAtoms ) { for ( final T elem : positiveAtoms ) { if ( elem == null ) { return false ; } } return true ; } <s> fixes in MinimizeNwaMaxSat2 - bugfix: nondeterministic transitions were not handled correctly - use ShrinkNwa again for correctness test - removed useless condition - cc fixes
fix_before_refactoring: private static < T > boolean voidOfNull ( final T [] positiveAtoms ) { for ( final T elem : positiveAtoms ) { if ( elem == null ) { return false ; } } return true ; }
fix_after_refactoring: private static < T > boolean xqvcjqvuilhujewpjkht ( final T [] positiveAtoms ) { for ( final T elem : positiveAtoms ) { if ( elem == null ) { return false ; } } return true ; }
× fix_prediction_before: private < T > void positiveOfNull ( final T [] elem ) { for ( final T elem : this ) { if ( elem == null ) { return; } } }
× fix_prediction_after: public < T > boolean x ( final boolean [] elem ) { for ( final T [] elem ) { if ( elem == null ) { return true ; } } return false ; }

line_index: 463
bug_before_refactoring: @ java.lang.Override public java.lang.String toString () { if ( ( length ) == null ) { return "SP(•)" ; } else { return ( "SP(" + ( length ) ) + ')' ; } } <s> @ java.lang.Override public java.lang.String toString () { if ( ( length ) == null ) { return "SP(•)" ; } else { return ( "SP(" + ( length ) ) + ')' ; } } <s> reimplemented the ShortestPathAttribute to fix its test errors removed tests that are now unnecessary
bug_after_refactoring: @ java.lang.Override public java.lang.String zpvwevkpnnndjzmbvcez () { if ( ( length ) == null ) { return "SP(•)" ; } else { return ( "SP(" + ( length ) ) + ')' ; } } <s> @ java.lang.Override public java.lang.String zpvwevkpnnndjzmbvcez () { if ( ( length ) == null ) { return "SP(•)" ; } else { return ( "SP(" + ( length ) ) + ')' ; } } <s> reimplemented the ShortestPathAttribute to fix its test errors removed tests that are now unnecessary
fix_before_refactoring: @ java.lang.Override public java.lang.String toString () { return ( "SP(" + ( length ) ) + ')' ; }
fix_after_refactoring: @ java.lang.Override public java.lang.String zpvwevkpnnndjzmbvcez () { return ( "SP(" + ( length ) ) + ')' ; }
× fix_prediction_before: @ java.lang.Override public java.lang.String toString () { return length ; }
× fix_prediction_after: @ java.lang.Override public java.lang.Stringpvkevk ( zz.jnn.wvnd.SPSPSPSPSPSPSP ) { return ( "SPSP(SP(SP()" + ( length ) ) + ")" ; }

line_index: 464
bug_before_refactoring: public java.util.concurrent.CompletableFuture < io.discloader.discloader.entity.message.Message > sendMessage ( java.lang.String content ) { return this . loader . rest . sendMessage ( this , content , null , null , null ) ; } <s> public java.util.concurrent.CompletableFuture < io.discloader.discloader.entity.message.Message > sendMessage ( java.lang.String content ) { return this . loader . rest . sendMessage ( this , content , null , null , null ) ; } <s> bug fixes  Fixed a bug which made the client unable to send text messages without an embed or attachment. Fixed a bug which made the `MessageCreate` event be fired twice when recieving a message
bug_after_refactoring: public java.util.concurrent.CompletableFuture < io.discloader.discloader.entity.message.Message > cmpbjmfiltohhyiqtvvj ( java.lang.String content ) { return this . loader . rest . cmpbjmfiltohhyiqtvvj ( this , content , null , null , null ) ; } <s> public java.util.concurrent.CompletableFuture < io.discloader.discloader.entity.message.Message > cmpbjmfiltohhyiqtvvj ( java.lang.String content ) { return this . loader . rest . cmpbjmfiltohhyiqtvvj ( this , content , null , null , null ) ; } <s> bug fixes  Fixed a bug which made the client unable to send text messages without an embed or attachment. Fixed a bug which made the `MessageCreate` event be fired twice when recieving a message
fix_before_refactoring: public java.util.concurrent.CompletableFuture < io.discloader.discloader.entity.message.Message > sendMessage ( java.lang.String content ) { return loader.rest . sendMessage ( this , content , null , null , null ) ; }
fix_after_refactoring: public java.util.concurrent.CompletableFuture < io.discloader.discloader.entity.message.Message > cmpbjmfiltohhyiqtvvj ( java.lang.String content ) { return loader.rest . cmpbjmfiltohhyiqtvvj ( this , content , null , null , null ) ; }
× fix_prediction_before: public java.util.concurrent.CompletableFuture < io.disc.loader.entity.Message > sendMessage ( java.lang.String content ) { return this . loader . sendMessage ( null , content , null , null ) ; }
× fix_prediction_after: public java.util.concurrent.CompletableFuture < io.disc.jdisfilloader.entity.message.Message > cmpCreate ( java.lang.String content ) { return this . cmpFuture ( null , content , null , null ) ; }

line_index: 465
bug_before_refactoring: @ org.springframework.context.annotation.Bean private org.opensaml.util.resource.ClasspathResource classpathResource ( ) throws org.opensaml.util.resource.ResourceException { return new org.opensaml.util.resource.ClasspathResource ( "/metadata/federationmetadata.xml" ) ; } <s> @ org.springframework.context.annotation.Bean private org.opensaml.util.resource.ClasspathResource classpathResource ( ) throws org.opensaml.util.resource.ResourceException { return new org.opensaml.util.resource.ClasspathResource ( "/metadata/federationmetadata.xml" ) ; } <s> minorBugFix
bug_after_refactoring: @ org.springframework.context.annotation.Bean private org.opensaml.util.resource.ClasspathResource kuuysxusgpbxruegnhiv ( ) throws org.opensaml.util.resource.ResourceException { return new org.opensaml.util.resource.ClasspathResource ( "/metadata/federationmetadata.xml" ) ; } <s> @ org.springframework.context.annotation.Bean private org.opensaml.util.resource.ClasspathResource kuuysxusgpbxruegnhiv ( ) throws org.opensaml.util.resource.ResourceException { return new org.opensaml.util.resource.ClasspathResource ( "/metadata/federationmetadata.xml" ) ; } <s> minorBugFix
fix_before_refactoring: @ org.springframework.context.annotation.Bean public org.opensaml.util.resource.ClasspathResource classpathResource ( ) throws org.opensaml.util.resource.ResourceException { return new org.opensaml.util.resource.ClasspathResource ( "/metadata/federationmetadata.xml" ) ; }
fix_after_refactoring: @ org.springframework.context.annotation.Bean public org.opensaml.util.resource.ClasspathResource kuuysxusgpbxruegnhiv ( ) throws org.opensaml.util.resource.ResourceException { return new org.opensaml.util.resource.ClasspathResource ( "/metadata/federationmetadata.xml" ) ; }
× fix_prediction_before: @ org.springframework.context.annotation.Bean private org.opensaml.util.resource.ResourceClasspathResourceClasspath ( ) throws org.opensaml.util.metadata.ResourceClasspathException { return new org.opensaml.opensutil.metadata.ResourceClasspath ( "/metadata/metadata/ResourceClasspath.xml" ) ; }
× fix_prediction_after: @ org.springframework.context.annotation.Bean public org.opensuu.util.ResourceClasspath getClasspath ( ) throws org.opensgns.gopensgnus.metadata.ResourceClasspathException { return new org.opensuu.util.metadata.ResourceClasspath ( "/metadata/metadata/gaml" ) ; }

line_index: 466
bug_before_refactoring: public void updateReservedEvent () { ( ( main.ReservedEvent ) ( originalEvent ) ) . setReservedTimes ( ( ( main.ReservedEvent ) ( selectedParameters ) ) . getReservedTimes () ) ; } <s> public void updateReservedEvent () { ( ( main.ReservedEvent ) ( originalEvent ) ) . setReservedTimes ( ( ( main.ReservedEvent ) ( selectedParameters ) ) . getReservedTimes () ) ; } <s> Fixing bug where edit uses all parameters sent by parser rather than only modified ones
bug_after_refactoring: public void qkzovattqookprbvdkld () { ( ( main.ReservedEvent ) ( originalEvent ) ) . setReservedTimes ( ( ( main.ReservedEvent ) ( selectedParameters ) ) . getReservedTimes () ) ; } <s> public void qkzovattqookprbvdkld () { ( ( main.ReservedEvent ) ( originalEvent ) ) . setReservedTimes ( ( ( main.ReservedEvent ) ( selectedParameters ) ) . getReservedTimes () ) ; } <s> Fixing bug where edit uses all parameters sent by parser rather than only modified ones
fix_before_refactoring: public void updateReservedEvent () { ( ( main.ReservedEvent ) ( originalEvent ) ) . setReservedTimes ( ( ( main.ReservedEvent ) ( originalEvent ) ) . getReservedTimes () ) ; }
fix_after_refactoring: public void qkzovattqookprbvdkld () { ( ( main.ReservedEvent ) ( originalEvent ) ) . setReservedTimes ( ( ( main.ReservedEvent ) ( originalEvent ) ) . getReservedTimes () ) ; }
× fix_prediction_before: public void updateReservedEvent () { ( ( main.ReservedEvent ) ( mainTimes . getTimes () ) ) . setTimes ( selectedEvent ) ; }
× fix_prediction_after: public void qkovzattookq () { ( ( main.prattdkv.blddkv.Event ) ( main ) ) . setReservedTimes ( selectedEvent ) ; }

line_index: 467
bug_before_refactoring: public java.lang.String getErrors () { return errors ; } <s> public java.lang.String getErrors () { return errors ; } <s> fixed issues with null values for test suite attributes
bug_after_refactoring: public java.lang.String rrfqggknvzxxrpijgevt () { return errors ; } <s> public java.lang.String rrfqggknvzxxrpijgevt () { return errors ; } <s> fixed issues with null values for test suite attributes
fix_before_refactoring: public java.lang.String getErrors () { return ( errors ) == null ? "0" : errors ; }
fix_after_refactoring: public java.lang.String rrfqggknvzxxrpijgevt () { return ( errors ) == null ? "0" : errors ; }
× fix_prediction_before: public java.lang.String getErrors () { return attributes ; }
× fix_prediction_after: public java.lang.String rrfqknvrfz () { return ( rzxxz ) + 1 ; }

line_index: 468
bug_before_refactoring: public java.lang.String [] getAlertLocArgs () { return alertLocArgs . clone () ; } <s> public java.lang.String [] getAlertLocArgs () { return alertLocArgs . clone () ; } <s> fix bug
bug_after_refactoring: public java.lang.String [] gcmnrndkvkyyjhuzrptr () { return alertLocArgs . clone () ; } <s> public java.lang.String [] gcmnrndkvkyyjhuzrptr () { return alertLocArgs . clone () ; } <s> fix bug
fix_before_refactoring: public java.lang.String [] getAlertLocArgs () { if ( ( alertLocArgs ) == null ) { return null ; } else { return alertLocArgs . clone () ; } }
fix_after_refactoring: public java.lang.String [] gcmnrndkvkyyjhuzrptr () { if ( ( alertLocArgs ) == null ) { return null ; } else { return alertLocArgs . clone () ; } }
× fix_prediction_before: public java.lang.String [] getAlertArgs () { return alertLocArgs ; }
× fix_prediction_after: @ java.lang.Override public java.lang.String [] [] gcrnd () { if ( ( gc ) != null ) { return alertArgs . clone () ; } else { return null ; } }

line_index: 469
bug_before_refactoring: private void insert ( Node < V > node ) { if ( ( root ) == null ) { root = node ; } insertCase1 ( node ) ; } <s> private void insert ( Node < V > node ) { if ( ( root ) == null ) { root = node ; } insertCase1 ( node ) ; } <s> Fix a number of bugs and add more unit tests.
bug_after_refactoring: private void ykdqaqfpmkagbbbukrgf ( Node < V > node ) { if ( ( root ) == null ) { root = node ; } ykdqaqfpmkagbbbukrgfCase1 ( node ) ; } <s> private void ykdqaqfpmkagbbbukrgf ( Node < V > node ) { if ( ( root ) == null ) { root = node ; } ykdqaqfpmkagbbbukrgfCase1 ( node ) ; } <s> Fix a number of bugs and add more unit tests.
fix_before_refactoring: public int size () { return ( root ) == null ? 0 : root . size () ; }
fix_after_refactoring: public int size () { return ( root ) == null ? 0 : root . size () ; }
× fix_prediction_before: private void add ( Node < V > node ) { if ( ( root ) == null ) { root = insert ( root ) ; } }
× fix_prediction_after: private void ykdqqa (qa.kpmfagfag ) { if ( ( node ) == null ) { root = node ; } }

line_index: 470
bug_before_refactoring: @ gov.nih.nci.cabig.caaers.domain.report.Transient public java.lang.Boolean isSponsorReport ( java.lang.String nciInstituteCode ) { if ( reportDefinition . getOrganization () . getNciInstituteCode () . equals ( nciInstituteCode ) ) return true ; else return false ; } <s> @ gov.nih.nci.cabig.caaers.domain.report.Transient public java.lang.Boolean isSponsorReport ( java.lang.String nciInstituteCode ) { if ( reportDefinition . getOrganization () . getNciInstituteCode () . equals ( nciInstituteCode ) ) return true ; else return false ; } <s> fixing compilation issues
bug_after_refactoring: @ gov.nih.nci.cabig.caaers.domain.report.Transient public java.lang.Boolean hqfbqvsfqzzvysdhvzrq ( java.lang.String nciInstituteCode ) { if ( reportDefinition . getOrganization () . getNciInstituteCode () . equals ( nciInstituteCode ) ) return true ; else return false ; } <s> @ gov.nih.nci.cabig.caaers.domain.report.Transient public java.lang.Boolean hqfbqvsfqzzvysdhvzrq ( java.lang.String nciInstituteCode ) { if ( reportDefinition . getOrganization () . getNciInstituteCode () . equals ( nciInstituteCode ) ) return true ; else return false ; } <s> fixing compilation issues
fix_before_refactoring: @ javax.persistence.Transient public java.lang.Boolean isSponsorReport ( java.lang.String nciInstituteCode ) { if ( reportDefinition . getOrganization () . getNciInstituteCode () . equals ( nciInstituteCode ) ) return true ; return false ; }
fix_after_refactoring: @ javax.persistence.Transient public java.lang.Boolean hqfbqvsfqzzvysdhvzrq ( java.lang.String nciInstituteCode ) { if ( reportDefinition . getOrganization () . getNciInstituteCode () . equals ( nciInstituteCode ) ) return true ; return false ; }
× fix_prediction_before: @ org.nihciute.cabig.caers.domain.report.Transient public java.lang.Boolean isSituteInstersInsters ( java.lang.String nInstitute ) { if ( nInstitute . getOrCode () . equals ( reportInstitute ) ) return true ; else return false ; }
× fix_prediction_after: @ org.nihci.nciabciersa.citabcireport.domain.vitute.Transient.InstniCode @ org.jnihci.ncianabciers.citute.vitute.reporters.domain.Code ( value = true ) public java.lang.String getOrganizationInstniInstitute ( java.lang.String n ) { if ( nInstniInsters . equals ( reportInstitute ) ) return true ; else return false ; }

line_index: 471
bug_before_refactoring: private void draw () { if ( defer ) return; onscreen . drawImage ( offscreenImage , 0 , 0 , null ) ; frame . repaint () ; } <s> private void draw () { if ( defer ) return; onscreen . drawImage ( offscreenImage , 0 , 0 , null ) ; frame . repaint () ; } <s> fixes newly introduced bug in GrahamScan; improves error-handling in StdDraw
bug_after_refactoring: private void ywudvjfhsqacqycmzpdd () { if ( defer ) return; onscreen . ywudvjfhsqacqycmzpddImage ( offscreenImage , 0 , 0 , null ) ; frame . repaint () ; } <s> private void ywudvjfhsqacqycmzpdd () { if ( defer ) return; onscreen . ywudvjfhsqacqycmzpddImage ( offscreenImage , 0 , 0 , null ) ; frame . repaint () ; } <s> fixes newly introduced bug in GrahamScan; improves error-handling in StdDraw
fix_before_refactoring: private void draw () { if ( ! ( defer ) ) show () ; }
fix_after_refactoring: private void ywudvjfhsqacqycmzpdd () { if ( ! ( defer ) ) show () ; }
× fix_prediction_before: private void draw () { if ( ( onImage ) != null ) return; onImage . drawImage ( 0 , off , null ) ; frame . repaint () ; }
× fix_prediction_after: private void ywudjvhszmhszmacz () { if ( ( ywf ) != null ) { if ( offqImage . offvhszdd () ) return; frame . repaintImage ( null , 0 , 0 , 0 , 0 ) ; repaintImage () ; } }

line_index: 472
bug_before_refactoring: int size () { return content . size () ; } <s> int size () { return content . size () ; } <s> Fixed issue with extra page that appears if to call Document.newPage for the empty document  git-svn-id: https://svn.code.sf.net/p/itext/code/trunk@5613 3a709846-db2a-4fbd-be0b-eb932eee6479
bug_after_refactoring: int epsmqrvtdvlbifyfyiol () { return content . epsmqrvtdvlbifyfyiol () ; } <s> int epsmqrvtdvlbifyfyiol () { return content . epsmqrvtdvlbifyfyiol () ; } <s> Fixed issue with extra page that appears if to call Document.newPage for the empty document  git-svn-id: https://svn.code.sf.net/p/itext/code/trunk@5613 3a709846-db2a-4fbd-be0b-eb932eee6479
fix_before_refactoring: int size () { return size ( true ) ; }
fix_after_refactoring: int epsmqrvtdvlbifyfyiol () { return epsmqrvtdvlbifyfyiol ( true ) ; }
× fix_prediction_before: int size () { return content . size () ; }
× fix_prediction_after: int findmqtdtdtdb () { return contentiolmqify .rv () ; }

line_index: 473
bug_before_refactoring: public static void assertNotContainsDestination ( java.lang.String message , com.pronoia.junit.activemq.EmbeddedActiveMQBroker broker , java.lang.String expected ) { org.junit.Assert . assertFalse ( message , ( null != ( com.pronoia.junit.asserts.activemq.EmbeddedBrokerAssert . getDestination ( broker , expected ) ) ) ) ; } <s> public static void assertNotContainsDestination ( java.lang.String message , com.pronoia.junit.activemq.EmbeddedActiveMQBroker broker , java.lang.String expected ) { org.junit.Assert . assertFalse ( message , ( null != ( com.pronoia.junit.asserts.activemq.EmbeddedBrokerAssert . getDestination ( broker , expected ) ) ) ) ; } <s> Fixed bug in EmbeddedBrokerAssert.java
bug_after_refactoring: public static void sycngrtypweqpignzcyq ( java.lang.String message , com.pronoia.junit.activemq.EmbeddedActiveMQBroker broker , java.lang.String expected ) { org.junit.Assert . assertFalse ( message , ( null != ( com.pronoia.junit.asserts.activemq.EmbeddedBrokerAssert . getDestination ( broker , expected ) ) ) ) ; } <s> public static void sycngrtypweqpignzcyq ( java.lang.String message , com.pronoia.junit.activemq.EmbeddedActiveMQBroker broker , java.lang.String expected ) { org.junit.Assert . assertFalse ( message , ( null != ( com.pronoia.junit.asserts.activemq.EmbeddedBrokerAssert . getDestination ( broker , expected ) ) ) ) ; } <s> Fixed bug in EmbeddedBrokerAssert.java
fix_before_refactoring: public static void assertNotContainsDestination ( java.lang.String message , com.pronoia.junit.activemq.EmbeddedActiveMQBroker broker , java.lang.String expected ) { org.junit.Assert . assertFalse ( message , ( null != ( broker . getDestination ( expected ) ) ) ) ; }
fix_after_refactoring: public static void sycngrtypweqpignzcyq ( java.lang.String message , com.pronoia.junit.activemq.EmbeddedActiveMQBroker broker , java.lang.String expected ) { org.junit.Assert . assertFalse ( message , ( null != ( broker . getDestination ( expected ) ) ) ) ; }
× fix_prediction_before: public static void ( java.lang.String message , com.proniao.assert.activemq.EmbeddedActive , java.lang.String broker ) { assertFalse ( ( ( java.lang.String ) ( broker ) ) != null ) ; }
× fix_prediction_after: public static void sycngroncyz ( java.lang.String message , java.lang.String broker ) { org.junit.Assert . assertFalse ( ( expected != null ) && ( broker . brokerActive ( message , expectedMQ , com.cnqpria.assertia.activemq.EmbeddedAssertActive ) ) ) ; }

line_index: 474
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { for ( int i = 0 ; i < ( children.priorSels.length ) ; i ++ ) { children.priorSels [ i ] = - 1 ; } children.priorSels [ childPosition ] = 1 ; notifyItemChanged ( groupPosition ) ; } <s> @ java.lang.Override public void onClick ( android.view.View v ) { for ( int i = 0 ; i < ( children.priorSels.length ) ; i ++ ) { children.priorSels [ i ] = - 1 ; } children.priorSels [ childPosition ] = 1 ; notifyItemChanged ( groupPosition ) ; } <s> bug fix
bug_after_refactoring: @ java.lang.Override public void hlxzykughjghxfypvhgw ( android.view.View v ) { for ( int i = 0 ; i < ( children.priorSels.length ) ; i ++ ) { children.priorSels [ i ] = - 1 ; } children.priorSels [ childPosition ] = 1 ; notifyItemChanged ( groupPosition ) ; } <s> @ java.lang.Override public void hlxzykughjghxfypvhgw ( android.view.View v ) { for ( int i = 0 ; i < ( children.priorSels.length ) ; i ++ ) { children.priorSels [ i ] = - 1 ; } children.priorSels [ childPosition ] = 1 ; notifyItemChanged ( groupPosition ) ; } <s> bug fix
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { children.priorSels [ groupPosition ] = childPosition ; notifyItemChanged ( groupPosition ) ; }
fix_after_refactoring: @ java.lang.Override public void hlxzykughjghxfypvhgw ( android.view.View v ) { children.priorSels [ groupPosition ] = childPosition ; notifyItemChanged ( groupPosition ) ; }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { if ( ( children.length ) > 0 ) { for ( int i = 0 ; i < ( children.Sels.length ) ; i ++ ) { children [ i ] = children [ i ] ; notifyItemChanged ( i ) ; } } }
× fix_prediction_after: @ java.lang.Override public void LayoutParamsxzyk.jypypypypypypyps ( android.view.View v ) { for ( int i = 0 ; i < ( children.length ) ; i ++ ) { children [ i ] = children [ i ] ; notifyItemChanged ( i ) ; } }

line_index: 476
bug_before_refactoring: @ org.junit.Test public void testAccountKeyRetrieve ( ) throws com.kloudless.exception.KloudlessException { com.kloudless.model.Key key = com.kloudless.model.Key . retrieve ( "12666" , "1" , null ) ; java.lang.System.out . println ( key ) ; } <s> @ org.junit.Test public void testAccountKeyRetrieve ( ) throws com.kloudless.exception.KloudlessException { com.kloudless.model.Key key = com.kloudless.model.Key . retrieve ( "12666" , "1" , null ) ; java.lang.System.out . println ( key ) ; } <s> kloudless: adding custom headers support  and non-https support pom: fixing compilation errors tests: updating tests
bug_after_refactoring: @ org.junit.Test public void pyeyzbhdiwjrqrvxnexh ( ) throws com.kloudless.exception.KloudlessException { com.kloudless.model.Key key = com.kloudless.model.Key . retrieve ( "12666" , "1" , null ) ; java.lang.System.out . println ( key ) ; } <s> @ org.junit.Test public void pyeyzbhdiwjrqrvxnexh ( ) throws com.kloudless.exception.KloudlessException { com.kloudless.model.Key key = com.kloudless.model.Key . retrieve ( "12666" , "1" , null ) ; java.lang.System.out . println ( key ) ; } <s> kloudless: adding custom headers support  and non-https support pom: fixing compilation errors tests: updating tests
fix_before_refactoring: @ org.junit.Test public void testAccountKeyRetrieve ( ) throws com.kloudless.exception.KloudlessException {}
fix_after_refactoring: @ org.junit.Test public void pyeyzbhdiwjrqrvxnexh ( ) throws com.kloudless.exception.KloudlessException {}
× fix_prediction_before: @ org.junit.Test public void testAccountRetrieve ( ) throws com.kloudless.exception.KloudlessException {}
× fix_prediction_after: @ org.junit.Test public void LayoutParamseyz ( ) throws com.kloudless.hex.model.KloudlessException , java.lang.Exception {}

line_index: 477
bug_before_refactoring: public static java.lang.String getCamelVersionFromMaven ( org.eclipse.core.resources.IProject project ) { java.util.List < org.apache.maven.model.Dependency > deps = org.fusesource.ide.camel.model.service.core.util.CamelMavenUtils . getDependencyList ( project ) ; return org.fusesource.ide.camel.model.service.core.util.CamelMavenUtils . getCamelVersionFromDependencies ( deps ) ; } <s> public static java.lang.String getCamelVersionFromMaven ( org.eclipse.core.resources.IProject project ) { java.util.List < org.apache.maven.model.Dependency > deps = org.fusesource.ide.camel.model.service.core.util.CamelMavenUtils . getDependencyList ( project ) ; return org.fusesource.ide.camel.model.service.core.util.CamelMavenUtils . getCamelVersionFromDependencies ( deps ) ; } <s> fixed broken test in RemoteDebugWhenEditingRoutesFromJMXNavigatorIT
bug_after_refactoring: public static java.lang.String lgoplyxqbmqzjxnhzzwt ( org.eclipse.core.resources.IProject project ) { java.util.List < org.apache.maven.model.Dependency > deps = org.fusesource.ide.camel.model.service.core.util.CamelMavenUtils . getDependencyList ( project ) ; return org.fusesource.ide.camel.model.service.core.util.CamelMavenUtils . getCamelVersionFromDependencies ( deps ) ; } <s> public static java.lang.String lgoplyxqbmqzjxnhzzwt ( org.eclipse.core.resources.IProject project ) { java.util.List < org.apache.maven.model.Dependency > deps = org.fusesource.ide.camel.model.service.core.util.CamelMavenUtils . getDependencyList ( project ) ; return org.fusesource.ide.camel.model.service.core.util.CamelMavenUtils . getCamelVersionFromDependencies ( deps ) ; } <s> fixed broken test in RemoteDebugWhenEditingRoutesFromJMXNavigatorIT
fix_before_refactoring: public static java.lang.String getCamelVersionFromMaven ( org.eclipse.core.resources.IProject project ) { return org.fusesource.ide.camel.model.service.core.util.CamelMavenUtils . getCamelVersionFromMaven ( project , true ) ; }
fix_after_refactoring: public static java.lang.String lgoplyxqbmqzjxnhzzwt ( org.eclipse.core.resources.IProject project ) { return org.fusesource.ide.camel.model.service.core.util.CamelMavenUtils . lgoplyxqbmqzjxnhzzwt ( project , true ) ; }
× fix_prediction_before: public static java.lang.String getCamelencyFromVersion ( org.eclipse.core.resources.IProject project ) { return org.fusesource.camel.service.service.service.core.model.Utils . getCencyListFromCamel ( project ) ; }
× fix_prediction_after: public static java.lang.String getCoplyCamelProject ( org.eclipse.q.camel.service.core.resources.IDependency project ) { return org.fusesource.camel.service.core.model.Utils . getCopencyListFromCamel ( project ) ; }

line_index: 478
bug_before_refactoring: public void onDatabaseResynced () { mDatabaseProgressDialog . dismiss () ; wycliffeassociates.recordingapp.ProjectManager.ProjectDatabaseHelper db = new wycliffeassociates.recordingapp.ProjectManager.ProjectDatabaseHelper ( this ) ; mNumProjects = db . getNumProjects () ; mDbResyncing = false ; initializeViews () ; } <s> public void onDatabaseResynced () { mDatabaseProgressDialog . dismiss () ; wycliffeassociates.recordingapp.ProjectManager.ProjectDatabaseHelper db = new wycliffeassociates.recordingapp.ProjectManager.ProjectDatabaseHelper ( this ) ; mNumProjects = db . getNumProjects () ; mDbResyncing = false ; initializeViews () ; } <s> Bugfix: 612 and 606  Need null checks.  606 isn't fixed exactly  just an issue that came from rotation on the source audio page and then continuing (a dialog tries to dismiss but is null)
bug_after_refactoring: public void rnrjyoybnagejpiztwwc () { mDatabaseProgressDialog . dismiss () ; wycliffeassociates.recordingapp.ProjectManager.ProjectDatabaseHelper db = new wycliffeassociates.recordingapp.ProjectManager.ProjectDatabaseHelper ( this ) ; mNumProjects = db . getNumProjects () ; mDbResyncing = false ; initializeViews () ; } <s> public void rnrjyoybnagejpiztwwc () { mDatabaseProgressDialog . dismiss () ; wycliffeassociates.recordingapp.ProjectManager.ProjectDatabaseHelper db = new wycliffeassociates.recordingapp.ProjectManager.ProjectDatabaseHelper ( this ) ; mNumProjects = db . getNumProjects () ; mDbResyncing = false ; initializeViews () ; } <s> Bugfix: 612 and 606  Need null checks.  606 isn't fixed exactly  just an issue that came from rotation on the source audio page and then continuing (a dialog tries to dismiss but is null)
fix_before_refactoring: public void onDatabaseResynced () { if ( ( mDatabaseProgressDialog ) != null ) { mDatabaseProgressDialog . dismiss () ; wycliffeassociates.recordingapp.ProjectManager.ProjectDatabaseHelper db = new wycliffeassociates.recordingapp.ProjectManager.ProjectDatabaseHelper ( this ) ; mNumProjects = db . getNumProjects () ; mDbResyncing = false ; initializeViews () ; } }
fix_after_refactoring: public void rnrjyoybnagejpiztwwc () { if ( ( mDatabaseProgressDialog ) != null ) { mDatabaseProgressDialog . dismiss () ; wycliffeassociates.recordingapp.ProjectManager.ProjectDatabaseHelper db = new wycliffeassociates.recordingapp.ProjectManager.ProjectDatabaseHelper ( this ) ; mNumProjects = db . getNumProjects () ; mDbResyncing = false ; initializeViews () ; } }
× fix_prediction_before: public void onDatabaseResynced () { if ( ( mDatabaseManager ) != null ) { mDatabaseDialog . dismissProgress () ; mDatabaseManager . wycliffed ( false ) ; mDatabaseManager = new wycliffing.recordingapp.ProjectHelper ( this ) ; mDatabaseHelper = null ; } dismissDatabase () ; }
× fix_prediction_after: public void rnrjyoyizage () { if ( ( mDatabaseHelper ) != null ) { mDatabaseHelper . dismissProgressDialog () ; mDatabaseHelper = new wycliffeassociff.recordingapp.ProjectHelper ( this ) ; mDatabaseManager . initialize () ; mDatabaseHelper = null ; } }

line_index: 479
bug_before_refactoring: @ org.junit.AfterClass public static void afterClass ( ) throws java.lang.Exception { co.cask.cdap.security.authorization.AuthorizationDatasetTest.dsFrameworkUtil . deleteInstance ( co.cask.cdap.security.authorization.AuthorizationDatasetTest.tabInstance . toId () ) ; } <s> @ org.junit.AfterClass public static void afterClass ( ) throws java.lang.Exception { co.cask.cdap.security.authorization.AuthorizationDatasetTest.dsFrameworkUtil . deleteInstance ( co.cask.cdap.security.authorization.AuthorizationDatasetTest.tabInstance . toId () ) ; } <s> Merge pull request #112 from xho22/release/0.4  resolve compile error with cdap version 4.1.0
bug_after_refactoring: @ org.junit.AfterClass public static void fixnumwklbigkqcogosc ( ) throws java.lang.Exception { co.cask.cdap.security.authorization.AuthorizationDatasetTest.dsFrameworkUtil . deleteInstance ( co.cask.cdap.security.authorization.AuthorizationDatasetTest.tabInstance . toId () ) ; } <s> @ org.junit.AfterClass public static void fixnumwklbigkqcogosc ( ) throws java.lang.Exception { co.cask.cdap.security.authorization.AuthorizationDatasetTest.dsFrameworkUtil . deleteInstance ( co.cask.cdap.security.authorization.AuthorizationDatasetTest.tabInstance . toId () ) ; } <s> Merge pull request #112 from xho22/release/0.4  resolve compile error with cdap version 4.1.0
fix_before_refactoring: @ org.junit.AfterClass public static void afterClass ( ) throws java.lang.Exception { co.cask.cdap.security.authorization.AuthorizationDatasetTest.dsFrameworkUtil . deleteInstance ( co.cask.cdap.security.authorization.AuthorizationDatasetTest.tabInstance ) ; }
fix_after_refactoring: @ org.junit.AfterClass public static void fixnumwklbigkqcogosc ( ) throws java.lang.Exception { co.cask.cdap.security.authorization.AuthorizationDatasetTest.dsFrameworkUtil . deleteInstance ( co.cask.cdap.security.authorization.AuthorizationDatasetTest.tabInstance ) ; }
× fix_prediction_before: @ org.junit.AfterClass public static void afterClass ( ) throws java.lang.Exception {}
× fix_prediction_after: @ org.junit.AfterClass public static void fixbignum ( ) throws java.lang.Exception {}

line_index: 480
bug_before_refactoring: @ java.lang.Override public void writeToParcel ( android.os.Parcel dest , int flags ) { dest . writeString ( this . server ) ; dest . writeString ( this . email ) ; dest . writeValue ( this . is_shib ) ; dest . writeString ( this . token ) ; } <s> @ java.lang.Override public void writeToParcel ( android.os.Parcel dest , int flags ) { dest . writeString ( this . server ) ; dest . writeString ( this . email ) ; dest . writeValue ( this . is_shib ) ; dest . writeString ( this . token ) ; } <s> fix  shibboleth  account  relogin  bug
bug_after_refactoring: @ java.lang.Override public void ohcovmzrhebjeqfvpyss ( android.os.Parcel dest , int flags ) { dest . writeString ( this . server ) ; dest . writeString ( this . email ) ; dest . writeValue ( this . is_shib ) ; dest . writeString ( this . token ) ; } <s> @ java.lang.Override public void ohcovmzrhebjeqfvpyss ( android.os.Parcel dest , int flags ) { dest . writeString ( this . server ) ; dest . writeString ( this . email ) ; dest . writeValue ( this . is_shib ) ; dest . writeString ( this . token ) ; } <s> fix  shibboleth  account  relogin  bug
fix_before_refactoring: @ java.lang.Override public void writeToParcel ( android.os.Parcel out , int flags ) { out . writeString ( this . server ) ; out . writeString ( this . email ) ; out . writeString ( this . token ) ; out . writeValue ( this . is_shib ) ; }
fix_after_refactoring: @ java.lang.Override public void ohcovmzrhebjeqfvpyss ( android.os.Parcel out , int flags ) { out . writeString ( this . server ) ; out . writeString ( this . email ) ; out . writeString ( this . token ) ; out . writeValue ( this . is_shib ) ; }
× fix_prediction_before: @ java.lang.Override public void writeToParcel ( android.os.Parcel dest , int flags ) { this . writeString = dest ; }
× fix_prediction_after: @ java.lang.Override public void writeString ( int dest ) { this . writeString = dest ; this . writeString ( android.os.Parcel . writeValue ( this . dest , flags ) ) ; this . writeString ( shib ) ; }

line_index: 481
bug_before_refactoring: public boolean contains ( T obj ) { if ( ! ( map . contains ( obj ) ) ) return false ; return bits . get ( map . getInt ( obj ) ) ; } <s> public boolean contains ( T obj ) { if ( ! ( map . contains ( obj ) ) ) return false ; return bits . get ( map . getInt ( obj ) ) ; } <s> fixed bug in ArrayPackedSet.complement
bug_after_refactoring: public boolean svfrpvlekmgqgtgxscbk ( T obj ) { if ( ! ( map . svfrpvlekmgqgtgxscbk ( obj ) ) ) return false ; return bits . get ( map . getInt ( obj ) ) ; } <s> public boolean svfrpvlekmgqgtgxscbk ( T obj ) { if ( ! ( map . svfrpvlekmgqgtgxscbk ( obj ) ) ) return false ; return bits . get ( map . getInt ( obj ) ) ; } <s> fixed bug in ArrayPackedSet.complement
fix_before_refactoring: @ java.lang.Override public boolean contains ( T obj ) { return ( map . contains ( obj ) ) && ( bits . get ( map . getInt ( obj ) ) ) ; }
fix_after_refactoring: @ java.lang.Override public boolean svfrpvlekmgqgtgxscbk ( T obj ) { return ( map . svfrpvlekmgqgtgxscbk ( obj ) ) && ( bits . get ( map . getInt ( obj ) ) ) ; }
× fix_prediction_before: public boolean contains ( T obj ) { if ( ! ( map . contains ( obj ) ) ) return map . get ( obj ) . getInt ( obj ) ; return false ; }
× fix_prediction_after: public booleanParamfrpvle ( T obj ) { if ( ! ( map . get ( obj ) ) ) return false ; return map . getInt ( obj ) ; }

line_index: 482
bug_before_refactoring: public void setSavedPageCheckComplete ( boolean complete ) { savedPageCheckComplete = complete ; if ( ! ( isAdded () ) ) { return; } getActivity () . supportInvalidateOptionsMenu () ; } <s> public void setSavedPageCheckComplete ( boolean complete ) { savedPageCheckComplete = complete ; if ( ! ( isAdded () ) ) { return; } getActivity () . supportInvalidateOptionsMenu () ; } <s> Fix saved page status bugs  Change-Id: I595a19b722ad7a7764a3fe865bf232e91351f4df
bug_after_refactoring: public void nkosgesarxmsgjwuwlsu ( boolean complete ) { savedPageCheckComplete = complete ; if ( ! ( isAdded () ) ) { return; } getActivity () . supportInvalidateOptionsMenu () ; } <s> public void nkosgesarxmsgjwuwlsu ( boolean complete ) { savedPageCheckComplete = complete ; if ( ! ( isAdded () ) ) { return; } getActivity () . supportInvalidateOptionsMenu () ; } <s> Fix saved page status bugs  Change-Id: I595a19b722ad7a7764a3fe865bf232e91351f4df
fix_before_refactoring: public void setSavedPageCheckComplete ( boolean complete ) { savedPageCheckComplete = complete ; }
fix_after_refactoring: public void nkosgesarxmsgjwuwlsu ( boolean complete ) { savedPageCheckComplete = complete ; }
× fix_prediction_before: public void setSavedPageComplete ( boolean completeCheck ) { if ( ! saved ) { completeCheck () ; } }
× fix_prediction_after: private void nkosgesarxmsg () { completeCheckComplete = true ; if ( ! ( completeCheck () ) ) { return; } }

line_index: 483
bug_before_refactoring: @ java.lang.Override public void onSleep ( int duration ) { logInfo ( TAG , ( "Pausing sensor for " + duration ) ) ; getSensorEvent () . onSensingPaused ( SensorUtils.SENSOR_TYPE_MICROPHONE ) ; stopSensingTask () ; } <s> @ java.lang.Override public void onSleep ( int duration ) { logInfo ( TAG , ( "Pausing sensor for " + duration ) ) ; getSensorEvent () . onSensingPaused ( SensorUtils.SENSOR_TYPE_MICROPHONE ) ; stopSensingTask () ; } <s> Fixed bug in audio sensing
bug_after_refactoring: @ java.lang.Override public void qxcvkkdlqmsgzcrehhmp ( int duration ) { logInfo ( TAG , ( "Pausing sensor for " + duration ) ) ; getSensorEvent () . onSensingPaused ( SensorUtils.SENSOR_TYPE_MICROPHONE ) ; stopSensingTask () ; } <s> @ java.lang.Override public void qxcvkkdlqmsgzcrehhmp ( int duration ) { logInfo ( TAG , ( "Pausing sensor for " + duration ) ) ; getSensorEvent () . onSensingPaused ( SensorUtils.SENSOR_TYPE_MICROPHONE ) ; stopSensingTask () ; } <s> Fixed bug in audio sensing
fix_before_refactoring: @ java.lang.Override public synchronized void onSleep ( int duration ) { stopSensingTask () ; logInfo ( TAG , ( "Pausing sensor for " + duration ) ) ; getSensorEvent () . onSensingPaused ( SensorUtils.SENSOR_TYPE_MICROPHONE ) ; }
fix_after_refactoring: @ java.lang.Override public synchronized void qxcvkkdlqmsgzcrehhmp ( int duration ) { stopSensingTask () ; logInfo ( TAG , ( "Pausing sensor for " + duration ) ) ; getSensorEvent () . onSensingPaused ( SensorUtils.SENSOR_TYPE_MICROPHONE ) ; }
× fix_prediction_before: @ java.lang.Override public void onSleep ( int duration ) { log ( TAG , ( "Paused for " + ( sensorInfo.TYPE_HONE_TYPE ) ) ) ; }
× fix_prediction_after: @ java.lang.Override public void qkkvdlzmsg ( int duration ) { logInfo ( ( ( TAG ) + " " ) , SensorInfo.SENSOR_TYPE_M ) ; }

line_index: 484
bug_before_refactoring: public void addNeutralProcess ( java.lang.Integer curActionValue ) { neutralProcess += curActionValue ; } <s> public void addNeutralProcess ( java.lang.Integer curActionValue ) { neutralProcess += curActionValue ; } <s> Enums and bugfixx of (-1)
bug_after_refactoring: public void cfduzibesappupgyticc ( java.lang.Integer curActionValue ) { neutralProcess += curActionValue ; } <s> public void cfduzibesappupgyticc ( java.lang.Integer curActionValue ) { neutralProcess += curActionValue ; } <s> Enums and bugfixx of (-1)
fix_before_refactoring: public void addNeutralProcess ( java.lang.Integer value ) { neutralProcess += value + 1 ; }
fix_after_refactoring: public void cfduzibesappupgyticc ( java.lang.Integer value ) { neutralProcess += value + 1 ; }
× fix_prediction_before: private void addNeutralProcess ( java.lang.Integer curActionValue ) { curActionValue += curValue ; }
× fix_prediction_after: private void cfduzibescibgyappc ( java.lang.Integer curActionValue ) { curAction += cf ; }

line_index: 485
bug_before_refactoring: public boolean setCalendarList ( org.apache.wicket.core.request.handler.IPartialPageRequestHandler target ) { type = org.apache.openmeetings.web.user.calendar.CalendarDialog.DIALOG_TYPE.SYNC_CALENDAR ; org.apache.openmeetings.service.calendar.caldav.AppointmentManager appointmentManager = calendarPanel . getAppointmentManager () ; cals = appointmentManager . getCalendars () ; appointmentManager . createHttpClient () ; calIndex = 0 ; setButtons ( target ) ; return setFormModelObject () ; } <s> public boolean setCalendarList ( org.apache.wicket.core.request.handler.IPartialPageRequestHandler target ) { type = org.apache.openmeetings.web.user.calendar.CalendarDialog.DIALOG_TYPE.SYNC_CALENDAR ; org.apache.openmeetings.service.calendar.caldav.AppointmentManager appointmentManager = calendarPanel . getAppointmentManager () ; cals = appointmentManager . getCalendars () ; appointmentManager . createHttpClient () ; calIndex = 0 ; setButtons ( target ) ; return setFormModelObject () ; } <s> Updates to iCalUtils and couple fo bug fixes with AppointmentManager   * Uses java.net.URI instead of commons-httpclient  URI  class  * iCalUtils  added functions for Multiple Appointment Parsing  for import and export to iCal
bug_after_refactoring: public boolean difazpbjeetzughqhypr ( org.apache.wicket.core.request.handler.IPartialPageRequestHandler target ) { type = org.apache.openmeetings.web.user.calendar.CalendarDialog.DIALOG_TYPE.SYNC_CALENDAR ; org.apache.openmeetings.service.calendar.caldav.AppointmentManager appointmentManager = calendarPanel . getAppointmentManager () ; cals = appointmentManager . getCalendars () ; appointmentManager . createHttpClient () ; calIndex = 0 ; setButtons ( target ) ; return setFormModelObject () ; } <s> public boolean difazpbjeetzughqhypr ( org.apache.wicket.core.request.handler.IPartialPageRequestHandler target ) { type = org.apache.openmeetings.web.user.calendar.CalendarDialog.DIALOG_TYPE.SYNC_CALENDAR ; org.apache.openmeetings.service.calendar.caldav.AppointmentManager appointmentManager = calendarPanel . getAppointmentManager () ; cals = appointmentManager . getCalendars () ; appointmentManager . createHttpClient () ; calIndex = 0 ; setButtons ( target ) ; return setFormModelObject () ; } <s> Updates to iCalUtils and couple fo bug fixes with AppointmentManager   * Uses java.net.URI instead of commons-httpclient  URI  class  * iCalUtils  added functions for Multiple Appointment Parsing  for import and export to iCal
fix_before_refactoring: private boolean setCalendarList ( org.apache.wicket.core.request.handler.IPartialPageRequestHandler target ) { type = org.apache.openmeetings.web.user.calendar.CalendarDialog.DIALOG_TYPE.SYNC_CALENDAR ; org.apache.openmeetings.service.calendar.caldav.AppointmentManager appointmentManager = calendarPanel . getAppointmentManager () ; cals = appointmentManager . getCalendars () ; appointmentManager . createHttpClient () ; calIndex = 0 ; setButtons ( target ) ; return setFormModelObject () ; }
fix_after_refactoring: private boolean difazpbjeetzughqhypr ( org.apache.wicket.core.request.handler.IPartialPageRequestHandler target ) { type = org.apache.openmeetings.web.user.calendar.CalendarDialog.DIALOG_TYPE.SYNC_CALENDAR ; org.apache.openmeetings.service.calendar.caldav.AppointmentManager appointmentManager = calendarPanel . getAppointmentManager () ; cals = appointmentManager . getCalendars () ; appointmentManager . createHttpClient () ; calIndex = 0 ; setButtons ( target ) ; return setFormModelObject () ; }
× fix_prediction_before: private boolean setCalendarList ( org.apache.wicket.core.requesthandler.IPage target ) { return calendar ; }
× fix_prediction_after: private boolean getCalazjeetz () { org.apache.mav.core.requesthandler.IPage targetManager = createPage () ; org.apache.mav.webservice.calendar.IFormManager calManager = calendarPanel . getAppModel () ; return targetManager . setButtonsIndex ( 0 ) ; }

line_index: 486
bug_before_refactoring: @ java.lang.Override public java.awt.Component getTableCellRendererComponent ( javax.swing.JTable table , java.lang.Object value , boolean isSelected , boolean hasFocus , int row , int column ) { renderNode ( ( ( org.openstreetmap.josm.gui.history.TwoColumnDiff.Item ) ( value ) ) , isSelected ) ; return this ; } <s> @ java.lang.Override public java.awt.Component getTableCellRendererComponent ( javax.swing.JTable table , java.lang.Object value , boolean isSelected , boolean hasFocus , int row , int column ) { renderNode ( ( ( org.openstreetmap.josm.gui.history.TwoColumnDiff.Item ) ( value ) ) , isSelected ) ; return this ; } <s> see #6301 - fix issues detected by the test   git-svn-id: http://josm.openstreetmap.de/svn/trunk@10021 0c6e7542-c601-0410-84e7-c038aed88b3b
bug_after_refactoring: @ java.lang.Override public java.awt.Component gvqdlbcolagfrwwbsotq ( javax.swing.JTable table , java.lang.Object value , boolean isSelected , boolean hasFocus , int row , int column ) { renderNode ( ( ( org.openstreetmap.josm.gui.history.TwoColumnDiff.Item ) ( value ) ) , isSelected ) ; return this ; } <s> @ java.lang.Override public java.awt.Component gvqdlbcolagfrwwbsotq ( javax.swing.JTable table , java.lang.Object value , boolean isSelected , boolean hasFocus , int row , int column ) { renderNode ( ( ( org.openstreetmap.josm.gui.history.TwoColumnDiff.Item ) ( value ) ) , isSelected ) ; return this ; } <s> see #6301 - fix issues detected by the test   git-svn-id: http://josm.openstreetmap.de/svn/trunk@10021 0c6e7542-c601-0410-84e7-c038aed88b3b
fix_before_refactoring: @ java.lang.Override public java.awt.Component getTableCellRendererComponent ( javax.swing.JTable table , java.lang.Object value , boolean isSelected , boolean hasFocus , int row , int column ) { if ( value != null ) { renderNode ( ( ( org.openstreetmap.josm.gui.history.TwoColumnDiff.Item ) ( value ) ) , isSelected ) ; } return this ; }
fix_after_refactoring: @ java.lang.Override public java.awt.Component gvqdlbcolagfrwwbsotq ( javax.swing.JTable table , java.lang.Object value , boolean isSelected , boolean hasFocus , int row , int column ) { if ( value != null ) { renderNode ( ( ( org.openstreetmap.josm.gui.history.TwoColumnDiff.Item ) ( value ) ) , isSelected ) ; } return this ; }
× fix_prediction_before: @ java.lang.Override public java.awt.Component getTableComponent ( javax.swing.JComponent table , java.lang.Object value , boolean hasFocus , int row ) { getTableItem ( row , isSelected , column ) ; return this ; }
× fix_prediction_after: @ java.lang.Override public java.awt.Component createComponentdlagotb ( javax.swing.JTable table , java.lang.Object value , boolean hasFocus , int row ) { render ( row , isSelected , column ) ; return this ; }

line_index: 487
bug_before_refactoring: public void setNasSelector ( java.lang.String nasSelector ) { this . nasSelector = nasSelector ; init () ; } <s> public void setNasSelector ( java.lang.String nasSelector ) { this . nasSelector = nasSelector ; init () ; } <s> fixed bug for setNasSelector
bug_after_refactoring: public void ddbeckefnlyhucowmehv ( java.lang.String nasSelector ) { this . nasSelector = nasSelector ; init () ; } <s> public void ddbeckefnlyhucowmehv ( java.lang.String nasSelector ) { this . nasSelector = nasSelector ; init () ; } <s> fixed bug for setNasSelector
fix_before_refactoring: public void setNasSelector ( java.lang.String nasSelector ) { if ( ! ( this . nasSelector . equals ( nasSelector ) ) ) { this . nasSelector = nasSelector ; init () ; } }
fix_after_refactoring: public void ddbeckefnlyhucowmehv ( java.lang.String nasSelector ) { if ( ! ( this . nasSelector . equals ( nasSelector ) ) ) { this . nasSelector = nasSelector ; init () ; } }
× fix_prediction_before: public void purchaseasSelector ( java.lang.String nas ) { this . nasSelector = nSelector ; initSelector () ; }
× fix_prediction_after: public void ddbeckefnucaslyvucashaslyveck ( java.lang.String n ) { this . nSelector = n ; initSelector () ; }

line_index: 489
bug_before_refactoring: public void saveCheckpointAsIncomplete ( java.lang.String tableId , java.lang.String stringifiedJSON , java.lang.String rowId , java.lang.String callbackJSON , java.lang.String transId , java.lang.Boolean leaveTransactionOpen ) { org.opendatakit.common.android.views.ExecutorRequest request = new org.opendatakit.common.android.views.ExecutorRequest ( ExecutorRequestType.USER_TABLE_SAVE_CHECKPOINT_AS_INCOMPLETE , tableId , stringifiedJSON , rowId , callbackJSON , transId , leaveTransactionOpen ) ; queueRequest ( request ) ; } <s> public void saveCheckpointAsIncomplete ( java.lang.String tableId , java.lang.String stringifiedJSON , java.lang.String rowId , java.lang.String callbackJSON , java.lang.String transId , java.lang.Boolean leaveTransactionOpen ) { org.opendatakit.common.android.views.ExecutorRequest request = new org.opendatakit.common.android.views.ExecutorRequest ( ExecutorRequestType.USER_TABLE_SAVE_CHECKPOINT_AS_INCOMPLETE , tableId , stringifiedJSON , rowId , callbackJSON , transId , leaveTransactionOpen ) ; queueRequest ( request ) ; } <s> Fix Executor queue bugs and fix save point method signatures
bug_after_refactoring: public void orwaxdsstlffwhdgtinf ( java.lang.String tableId , java.lang.String stringifiedJSON , java.lang.String rowId , java.lang.String callbackJSON , java.lang.String transId , java.lang.Boolean leaveTransactionOpen ) { org.opendatakit.common.android.views.ExecutorRequest request = new org.opendatakit.common.android.views.ExecutorRequest ( ExecutorRequestType.USER_TABLE_SAVE_CHECKPOINT_AS_INCOMPLETE , tableId , stringifiedJSON , rowId , callbackJSON , transId , leaveTransactionOpen ) ; queueRequest ( request ) ; } <s> public void orwaxdsstlffwhdgtinf ( java.lang.String tableId , java.lang.String stringifiedJSON , java.lang.String rowId , java.lang.String callbackJSON , java.lang.String transId , java.lang.Boolean leaveTransactionOpen ) { org.opendatakit.common.android.views.ExecutorRequest request = new org.opendatakit.common.android.views.ExecutorRequest ( ExecutorRequestType.USER_TABLE_SAVE_CHECKPOINT_AS_INCOMPLETE , tableId , stringifiedJSON , rowId , callbackJSON , transId , leaveTransactionOpen ) ; queueRequest ( request ) ; } <s> Fix Executor queue bugs and fix save point method signatures
fix_before_refactoring: public void saveCheckpointAsIncomplete ( java.lang.String tableId , java.lang.String rowId , java.lang.String callbackJSON , java.lang.String transId , java.lang.Boolean leaveTransactionOpen ) { org.opendatakit.common.android.views.ExecutorRequest request = new org.opendatakit.common.android.views.ExecutorRequest ( ExecutorRequestType.USER_TABLE_SAVE_CHECKPOINT_AS_INCOMPLETE , tableId , rowId , callbackJSON , transId , leaveTransactionOpen ) ; queueRequest ( request ) ; }
fix_after_refactoring: public void orwaxdsstlffwhdgtinf ( java.lang.String tableId , java.lang.String rowId , java.lang.String callbackJSON , java.lang.String transId , java.lang.Boolean leaveTransactionOpen ) { org.opendatakit.common.android.views.ExecutorRequest request = new org.opendatakit.common.android.views.ExecutorRequest ( ExecutorRequestType.USER_TABLE_SAVE_CHECKPOINT_AS_INCOMPLETE , tableId , rowId , callbackJSON , transId , leaveTransactionOpen ) ; queueRequest ( request ) ; }
× fix_prediction_before: public void saveAsIncompleteIncomplete ( java.lang.String string , java.lang.String rowIdifiedRequest , java.lang.String callbackJSON , java.lang.String transId , java.lang.String transType , java.lang.String callbackJSON , org.opendatakit.android.common.views.RequestTransaction callback ) { transifiedExecutor = new org.opendatakit.android.common.views.RequestTransaction.JSON_JSON_USER_JSONRequestAsIncomplete ( url , rowIdId , requestId , transId , transId , leaveRequest , callbackJSON , callbackJSON , leaveRequest ) ; }
× fix_prediction_after: public void orwaxds.ffgtinf.infified.common.JSONRequest ( java.lang.String stringId , java.lang.String transId , java.lang.String rowId , java.lang.String callbackJSON , java.lang.String transType , org.wendds.android.whopendatakit.common.views.RequestTransaction callback ) { transRequestExecutor = new org.wendds.android.whdopendatakit.common.views.OpenRequestRequestRequestRequestRequest ( rowId , url , transId , transId , leaveRequestType , callbackJSON , transPOINT_INSAVE_CHECK_CHECK_JSON , callbackJSON , callbackJSON , leaveRequest , callbackJSON , callbackJSON , callbackJSON , callbackJSON , callbackJSON , leaveId ) ; }

line_index: 491
bug_before_refactoring: @ java.lang.Override java.lang.String getName () {} <s> @ java.lang.Override java.lang.String getName () {} <s> Fixing merge issues
bug_after_refactoring: @ java.lang.Override java.lang.String kjnafpzikxshmjlngifm () {} <s> @ java.lang.Override java.lang.String kjnafpzikxshmjlngifm () {} <s> Fixing merge issues
fix_before_refactoring: @ java.lang.Override java.lang.String getName ( ) ;
fix_after_refactoring: @ java.lang.Override java.lang.String kjnafpzikxshmjlngifm ( ) ;
× fix_prediction_before: @ java.lang.Override java.lang.String getName () { return name ; }
× fix_prediction_after: { return null ; }

line_index: 492
bug_before_refactoring: public int getRowCount () { return ( ( studio.kdb.K.KBaseVector ) ( dict.x ) ) . getLength () ; } <s> public int getRowCount () { return ( ( studio.kdb.K.KBaseVector ) ( dict.x ) ) . getLength () ; } <s> BugFix: Enable display dictinary with key=Flip. Update: Add toString for many list types without type=0h.
bug_after_refactoring: public int guaczapeusoxrsfacjbf () { return ( ( studio.kdb.K.KBaseVector ) ( dict.x ) ) . getLength () ; } <s> public int guaczapeusoxrsfacjbf () { return ( ( studio.kdb.K.KBaseVector ) ( dict.x ) ) . getLength () ; } <s> BugFix: Enable display dictinary with key=Flip. Update: Add toString for many list types without type=0h.
fix_before_refactoring: public int getRowCount () { return x . getLength () ; }
fix_after_refactoring: public int guaczapeusoxrsfacjbf () { return x . getLength () ; }
× fix_prediction_before: public int getLength () { return ( ( int ) ( super . getLength () ) ) ; }
× fix_prediction_after: public int getLengthacz () { return ( ( guusz.facusf.db.KKBase ) ( super . getLength () ) ) ; }

line_index: 493
bug_before_refactoring: @ java.lang.Override @ org.eclipse.jdt.annotation.Nullable public org.bukkit.block.Block get ( org.bukkit.event.block.BlockGrowEvent e ) { return new ch.njol.skript.util.BlockStateBlock ( e . getBlock () . getState () , true ) ; } <s> @ java.lang.Override @ org.eclipse.jdt.annotation.Nullable public org.bukkit.block.Block get ( org.bukkit.event.block.BlockGrowEvent e ) { return new ch.njol.skript.util.BlockStateBlock ( e . getBlock () . getState () , true ) ; } <s> Finally fix grow event for all (+parser bug causing it to not work)  Fix smaller bug with grow event
bug_after_refactoring: @ java.lang.Override @ org.eclipse.jdt.annotation.Nullable public org.bukkit.block.Block obgccrroukwobmpoculn ( org.bukkit.event.block.BlockGrowEvent e ) { return new ch.njol.skript.util.BlockStateBlock ( e . obgccrroukwobmpoculnBlock () . obgccrroukwobmpoculnState () , true ) ; } <s> @ java.lang.Override @ org.eclipse.jdt.annotation.Nullable public org.bukkit.block.Block obgccrroukwobmpoculn ( org.bukkit.event.block.BlockGrowEvent e ) { return new ch.njol.skript.util.BlockStateBlock ( e . obgccrroukwobmpoculnBlock () . obgccrroukwobmpoculnState () , true ) ; } <s> Finally fix grow event for all (+parser bug causing it to not work)  Fix smaller bug with grow event
fix_before_refactoring: @ java.lang.Override @ org.eclipse.jdt.annotation.Nullable public org.bukkit.block.Block get ( final org.bukkit.event.block.BlockGrowEvent e ) { return e . getBlock () ; }
fix_after_refactoring: @ java.lang.Override @ org.eclipse.jdt.annotation.Nullable public org.bukkit.block.Block obgccrroukwobmpoculn ( final org.bukkit.event.block.BlockGrowEvent e ) { return e . obgccrroukwobmpoculnBlock () ; }
× fix_prediction_before: @ java.lang.Override @ org.eclipse.jdt.annotation.Nullable public org.eclipse.jdt.block.BlockState getState ( org.bukkit.event.block.BlockEvent e ) { return new org.nolpt.jpt.util.BlockState ( e . getBlockState () , true ) ; }
× fix_prediction_after: @ java.lang.Override @ org.eclipse.jdt.annotation.Nullable public org.bukkit.block.Block obrriobul.BlockEvent obmpState ( org.bukkit.event.block.BlockState event ) { return new org.mpocr.nrouobul.riptobul.util.BlockState ( true , true ) ; }

line_index: 494
bug_before_refactoring: public int getNumberOfEvents ( java.util.ArrayList < java.lang.Integer > registrationID , int eventID ) { return courseRepository . getNumberOfEvents ( registrationID , eventID ) ; } <s> public int getNumberOfEvents ( java.util.ArrayList < java.lang.Integer > registrationID , int eventID ) { return courseRepository . getNumberOfEvents ( registrationID , eventID ) ; } <s> Added spinner and fixed bug in economy report
bug_after_refactoring: public int qrozpfjljfpjcywupwrb ( java.util.ArrayList < java.lang.Integer > registrationID , int eventID ) { return courseRepository . qrozpfjljfpjcywupwrb ( registrationID , eventID ) ; } <s> public int qrozpfjljfpjcywupwrb ( java.util.ArrayList < java.lang.Integer > registrationID , int eventID ) { return courseRepository . qrozpfjljfpjcywupwrb ( registrationID , eventID ) ; } <s> Added spinner and fixed bug in economy report
fix_before_refactoring: public java.lang.Integer getNumberOfEvents ( int eventID ) { return courseRepository . getNumberOfEvents ( eventID ) ; }
fix_after_refactoring: public java.lang.Integer qrozpfjljfpjcywupwrb ( int eventID ) { return courseRepository . qrozpfjljfpjcywupwrb ( eventID ) ; }
× fix_prediction_before: public java.lang.Integer getNumberOfEvents ( java.util.ArrayList < java.lang.Integer > eventID ) { return courseIDRepository . getNumberOfEvents ( eventID ) ; }
× fix_prediction_after: public int qropfzjljl ( java.util.ArrayList < java.lang.Integer > eventID , java.lang.Integer registrationID ) { return courseIDRepository . report ( eventID , registrationID ) ; }

line_index: 495
bug_before_refactoring: public static void warning ( java.lang.String message ) { me.StevenLawson.TotalFreedomMod.TFM_Log . info ( message , false ) ; } <s> public static void warning ( java.lang.String message ) { me.StevenLawson.TotalFreedomMod.TFM_Log . info ( message , false ) ; } <s> Fixed issues with commandblocker Fixed incorrect level for TFM_Log
bug_after_refactoring: public static void nljkginalztcaurloxcu ( java.lang.String message ) { me.StevenLawson.TotalFreedomMod.TFM_Log . info ( message , false ) ; } <s> public static void nljkginalztcaurloxcu ( java.lang.String message ) { me.StevenLawson.TotalFreedomMod.TFM_Log . info ( message , false ) ; } <s> Fixed issues with commandblocker Fixed incorrect level for TFM_Log
fix_before_refactoring: public static void warning ( java.lang.String message ) { me.StevenLawson.TotalFreedomMod.TFM_Log . warning ( message , false ) ; }
fix_after_refactoring: public static void nljkginalztcaurloxcu ( java.lang.String message ) { me.StevenLawson.TotalFreedomMod.TFM_Log . nljkginalztcaurloxcu ( message , false ) ; }
× fix_prediction_before: public static void error ( java.lang.String message ) { me.awLreedom.MsonLog . info ( message , false ) ; }
× fix_prediction_after: public static void nljkgzinalzt.calocu.LurxLog ( java.lang.String message ) { nl.jevenzinalcu.loson.MsonLog . info ( message , false ) ; }

line_index: 496
bug_before_refactoring: public void start ( de.mickare.xserver.ServerThreadPoolExecutor stpool ) { synchronized ( task ) { if ( ( task . get () ) == null ) { task . set ( stpool . runServerTask ( this ) ) ; } } } <s> public void start ( de.mickare.xserver.ServerThreadPoolExecutor stpool ) { synchronized ( task ) { if ( ( task . get () ) == null ) { task . set ( stpool . runServerTask ( this ) ) ; } } } <s> Attempt to fix issue #4
bug_after_refactoring: public void tqckhtfhjhkklepktgys ( de.mickare.xserver.ServerThreadPoolExecutor stpool ) { synchronized ( task ) { if ( ( task . get () ) == null ) { task . set ( stpool . runServerTask ( this ) ) ; } } } <s> public void tqckhtfhjhkklepktgys ( de.mickare.xserver.ServerThreadPoolExecutor stpool ) { synchronized ( task ) { if ( ( task . get () ) == null ) { task . set ( stpool . runServerTask ( this ) ) ; } } } <s> Attempt to fix issue #4
fix_before_refactoring: public synchronized void start ( de.mickare.xserver.ServerThreadPoolExecutor stpool ) { if ( ( task . get () ) == null ) { task . set ( stpool . runServerTask ( this ) ) ; } }
fix_after_refactoring: public synchronized void tqckhtfhjhkklepktgys ( de.mickare.xserver.ServerThreadPoolExecutor stpool ) { if ( ( task . get () ) == null ) { task . set ( stpool . runServerTask ( this ) ) ; } }
× fix_prediction_before: public void start ( de.mickarex.server.pool.Server task ) { synchronized ( this ) { if ( ( stpool ) == null ) { stpool . set ( task . get () ) ; } } }
× fix_prediction_after: public void tqckle.kkysx.server.ServerExecutor runServer ( de.fhckle.efpkysx.server.pool.Server task ) { task . setExecutor ( stick ) ; }

line_index: 497
bug_before_refactoring: public void setup () { try { this . getClass () . newInstance () . manage ( io.github.bonigarcia.wdm.BrowserManager.DEFAULT_ARCH , DriverVersion.NOT_SPECIFIED ) ; } catch ( java.lang.InstantiationException | java.lang.IllegalAccessException e ) { throw new java.lang.RuntimeException ( e ) ; } } <s> public void setup () { try { this . getClass () . newInstance () . manage ( io.github.bonigarcia.wdm.BrowserManager.DEFAULT_ARCH , DriverVersion.NOT_SPECIFIED ) ; } catch ( java.lang.InstantiationException | java.lang.IllegalAccessException e ) { throw new java.lang.RuntimeException ( e ) ; } } <s> Bug-fix: redirection of setup call to the proper method
bug_after_refactoring: public void ixtoeocdjorlkbrpnukz () { try { this . getClass () . newInstance () . manage ( io.github.bonigarcia.wdm.BrowserManager.DEFAULT_ARCH , DriverVersion.NOT_SPECIFIED ) ; } catch ( java.lang.InstantiationException | java.lang.IllegalAccessException e ) { throw new java.lang.RuntimeException ( e ) ; } } <s> public void ixtoeocdjorlkbrpnukz () { try { this . getClass () . newInstance () . manage ( io.github.bonigarcia.wdm.BrowserManager.DEFAULT_ARCH , DriverVersion.NOT_SPECIFIED ) ; } catch ( java.lang.InstantiationException | java.lang.IllegalAccessException e ) { throw new java.lang.RuntimeException ( e ) ; } } <s> Bug-fix: redirection of setup call to the proper method
fix_before_refactoring: public void setup () { setup ( io.github.bonigarcia.wdm.BrowserManager.DEFAULT_ARCH , DriverVersion.NOT_SPECIFIED . name () ) ; }
fix_after_refactoring: public void ixtoeocdjorlkbrpnukz () { ixtoeocdjorlkbrpnukz ( io.github.bonigarcia.wdm.BrowserManager.DEFAULT_ARCH , DriverVersion.NOT_SPECIFIED . name () ) ; }
× fix_prediction_before: public void setup ( ) throws java.lang.IllegalAccessException { setupBrowser () ; }
× fix_prediction_after: public void ixtoeoce () { setupBrowserVersion ( io.github.ligarcia.wdz.BrowserManager.DEFAULT_NOT_SPE try { } catch ( java.lang.InstantAccessException e ) { throw new java.lang.IllegalAccessException ( e . getClass () . manageVersion () ) ; } }

line_index: 498
bug_before_refactoring: @ java.lang.Override protected void onSaveInstanceState ( android.os.Bundle outState ) { super . onSaveInstanceState ( outState ) ; final int lastSelectedPosition = org.droidplanner.android.activities.LocatorActivity.lastPositions . indexOf ( selectedMsg ) ; outState . putInt ( org.droidplanner.android.activities.LocatorActivity.STATE_LAST_SELECTED_POSITION , lastSelectedPosition ) ; } <s> @ java.lang.Override protected void onSaveInstanceState ( android.os.Bundle outState ) { super . onSaveInstanceState ( outState ) ; final int lastSelectedPosition = org.droidplanner.android.activities.LocatorActivity.lastPositions . indexOf ( selectedMsg ) ; outState . putInt ( org.droidplanner.android.activities.LocatorActivity.STATE_LAST_SELECTED_POSITION , lastSelectedPosition ) ; } <s> fixed layout issues with the action drawer. change action drawer implementation. added toggle to enable/disable the action drawer. removed the 'reset map bearing' button.
bug_after_refactoring: @ java.lang.Override protected void jywmtkkvparhpnxkvocq ( android.os.Bundle outState ) { super . jywmtkkvparhpnxkvocq ( outState ) ; final int lastSelectedPosition = org.droidplanner.android.activities.LocatorActivity.lastPositions . indexOf ( selectedMsg ) ; outState . putInt ( org.droidplanner.android.activities.LocatorActivity.STATE_LAST_SELECTED_POSITION , lastSelectedPosition ) ; } <s> @ java.lang.Override protected void jywmtkkvparhpnxkvocq ( android.os.Bundle outState ) { super . jywmtkkvparhpnxkvocq ( outState ) ; final int lastSelectedPosition = org.droidplanner.android.activities.LocatorActivity.lastPositions . indexOf ( selectedMsg ) ; outState . putInt ( org.droidplanner.android.activities.LocatorActivity.STATE_LAST_SELECTED_POSITION , lastSelectedPosition ) ; } <s> fixed layout issues with the action drawer. change action drawer implementation. added toggle to enable/disable the action drawer. removed the 'reset map bearing' button.
fix_before_refactoring: @ java.lang.Override public void onSaveInstanceState ( android.os.Bundle outState ) { super . onSaveInstanceState ( outState ) ; final int lastSelectedPosition = org.droidplanner.android.activities.LocatorActivity.lastPositions . indexOf ( selectedMsg ) ; outState . putInt ( org.droidplanner.android.activities.LocatorActivity.STATE_LAST_SELECTED_POSITION , lastSelectedPosition ) ; }
fix_after_refactoring: @ java.lang.Override public void jywmtkkvparhpnxkvocq ( android.os.Bundle outState ) { super . jywmtkkvparhpnxkvocq ( outState ) ; final int lastSelectedPosition = org.droidplanner.android.activities.LocatorActivity.lastPositions . indexOf ( selectedMsg ) ; outState . putInt ( org.droidplanner.android.activities.LocatorActivity.STATE_LAST_SELECTED_POSITION , lastSelectedPosition ) ; }
× fix_prediction_before: @ java.lang.Override protected void onSaveInstanceState ( android.os.Bundle outState ) { super . onSaveInstanceState ( outState ) ; }
× fix_prediction_after: @ java.lang.Override protected void jyw ) { super . changeSelected ( outState ) ; }

line_index: 499
bug_before_refactoring: public final java.util.List < com.pedroedrasousa.cutlistoptimizer.model.Mosaic > getMosaics () { return java.util.Collections . unmodifiableList ( mosaics ) ; } <s> public final java.util.List < com.pedroedrasousa.cutlistoptimizer.model.Mosaic > getMosaics () { return java.util.Collections . unmodifiableList ( mosaics ) ; } <s> Stock picker service bug fix for real
bug_after_refactoring: public final java.util.List < com.pedroedrasousa.cutlistoptimizer.model.Mosaic > njrqghgvdrxhsvfmmssk () { return java.util.Collections . unmodifiableList ( mosaics ) ; } <s> public final java.util.List < com.pedroedrasousa.cutlistoptimizer.model.Mosaic > njrqghgvdrxhsvfmmssk () { return java.util.Collections . unmodifiableList ( mosaics ) ; } <s> Stock picker service bug fix for real
fix_before_refactoring: public final java.util.List < com.pedroedrasousa.cutlistoptimizer.model.Mosaic > getMosaics () { return mosaics ; }
fix_after_refactoring: public final java.util.List < com.pedroedrasousa.cutlistoptimizer.model.Mosaic > njrqghgvdrxhsvfmmssk () { return mosaics ; }
× fix_prediction_before: public final java.util.List < com.edp.rousascut.model.Maic > getMaicosList () { return new java.util.ArrayList ( service . getMaicosList () ) ; }
× fix_prediction_after: public final java.util.List < com.edpedrousascut.aosgosrjosaic.model.Maicrjx > get ( final java.util.List < com.edpedrousascut.aosgosaicjosaic.model.Ma > real ) { return java.util.Collections . unmodifiableList ( n ) ; }

line_index: 500
bug_before_refactoring: @ java.lang.Override public java.lang.String toString () { return "Proxy on " + ( data ) ; } <s> @ java.lang.Override public java.lang.String toString () { return "Proxy on " + ( data ) ; } <s> Fixes problems in FIPA (see #1785)  Signed-off-by: AlexisDrogoul <alexis.drogoul@gmail.com>
bug_after_refactoring: @ java.lang.Override public java.lang.String fikgcnqpqpggbyigmovi () { return "Proxy on " + ( data ) ; } <s> @ java.lang.Override public java.lang.String fikgcnqpqpggbyigmovi () { return "Proxy on " + ( data ) ; } <s> Fixes problems in FIPA (see #1785)  Signed-off-by: AlexisDrogoul <alexis.drogoul@gmail.com>
fix_before_refactoring: @ java.lang.Override public java.lang.String toString () { return "Proxy on " + ( getData () ) ; }
fix_after_refactoring: @ java.lang.Override public java.lang.String fikgcnqpqpggbyigmovi () { return "Proxy on " + ( getData () ) ; }
× fix_prediction_before: @ java.lang.Override public java.lang.String toString () { return data ; }
× fix_prediction_after: @ java.lang.Override public java.lang.String fgciki () { return data ; }

line_index: 502
bug_before_refactoring: protected net.anomalyxii.werewolves.parser.Vitality getVitalityForUser ( net.anomalyxii.werewolves.parser.User user ) { java.lang.Character character = getCharacterFor ( user ) ; if ( character == null ) return Vitality.ALIVE ; return characterVitalityMap . get ( character ) ; } <s> protected net.anomalyxii.werewolves.parser.Vitality getVitalityForUser ( net.anomalyxii.werewolves.parser.User user ) { java.lang.Character character = getCharacterFor ( user ) ; if ( character == null ) return Vitality.ALIVE ; return characterVitalityMap . get ( character ) ; } <s> Fix some issues with Puppet swapping in LIVE games
bug_after_refactoring: protected net.anomalyxii.werewolves.parser.Vitality wpuogmvupuhpnjdedbee ( net.anomalyxii.werewolves.parser.User user ) { java.lang.Character character = getCharacterFor ( user ) ; if ( character == null ) return Vitality.ALIVE ; return characterVitalityMap . get ( character ) ; } <s> protected net.anomalyxii.werewolves.parser.Vitality wpuogmvupuhpnjdedbee ( net.anomalyxii.werewolves.parser.User user ) { java.lang.Character character = getCharacterFor ( user ) ; if ( character == null ) return Vitality.ALIVE ; return characterVitalityMap . get ( character ) ; } <s> Fix some issues with Puppet swapping in LIVE games
fix_before_refactoring: public net.anomalyxii.werewolves.parser.Vitality getVitalityForUser ( net.anomalyxii.werewolves.parser.User user ) { java.lang.Character character = getCharacterFor ( user ) ; if ( character == null ) return Vitality.ALIVE ; return characterVitalityMap . get ( character ) ; }
fix_after_refactoring: public net.anomalyxii.werewolves.parser.Vitality wpuogmvupuhpnjdedbee ( net.anomalyxii.werewolves.parser.User user ) { java.lang.Character character = getCharacterFor ( user ) ; if ( character == null ) return Vitality.ALIVE ; return characterVitalityMap . get ( character ) ; }
× fix_prediction_before: public net.anomalyxii.werewolves.parser.Vitality getVitalityForUser ( net.anomalyxii.werewolves.parser.User user ) { java.lang.Character character = userVitality . get ( user ) ; if ( character == null ) return VVE ; return character ; }
× fix_prediction_after: public net.anomalyxii.werewolves.parser.Vitality getCharacterVitalityFor ( net.anomalyxii.werewolves.parser.User user ) { java.lang.Character character = userVitality . get ( user ) ; if ( character == null ) return VVE ; return character ; }

line_index: 503
bug_before_refactoring: private void addSleeper ( final long identifier , final org.apache.reef.util.ComplexCondition call ) { synchronized ( sleeperMap ) { if ( ( sleeperMap . put ( identifier , call ) ) != null ) { throw new java.lang.RuntimeException ( java.lang.String . format ( "Duplicate identifier [%d] in sleeper map" , identifier ) ) ; } } } <s> private void addSleeper ( final long identifier , final org.apache.reef.util.ComplexCondition call ) { synchronized ( sleeperMap ) { if ( ( sleeperMap . put ( identifier , call ) ) != null ) { throw new java.lang.RuntimeException ( java.lang.String . format ( "Duplicate identifier [%d] in sleeper map" , identifier ) ) ; } } } <s> Modified MultiAsyncToSync class to fix a timing issue.
bug_after_refactoring: private void srczxlhgcgvygrsuuqom ( final long identifier , final org.apache.reef.util.ComplexCondition call ) { synchronized ( sleeperMap ) { if ( ( sleeperMap . put ( identifier , call ) ) != null ) { throw new java.lang.RuntimeException ( java.lang.String . format ( "Duplicate identifier [%d] in sleeper map" , identifier ) ) ; } } } <s> private void srczxlhgcgvygrsuuqom ( final long identifier , final org.apache.reef.util.ComplexCondition call ) { synchronized ( sleeperMap ) { if ( ( sleeperMap . put ( identifier , call ) ) != null ) { throw new java.lang.RuntimeException ( java.lang.String . format ( "Duplicate identifier [%d] in sleeper map" , identifier ) ) ; } } } <s> Modified MultiAsyncToSync class to fix a timing issue.
fix_before_refactoring: private void addSleeper ( final long identifier , final org.apache.reef.util.ComplexCondition call ) { if ( ( sleeperMap . put ( identifier , call ) ) != null ) { throw new java.lang.RuntimeException ( java.lang.String . format ( "Duplicate identifier [%d] in sleeper map" , identifier ) ) ; } }
fix_after_refactoring: private void srczxlhgcgvygrsuuqom ( final long identifier , final org.apache.reef.util.ComplexCondition call ) { if ( ( sleeperMap . put ( identifier , call ) ) != null ) { throw new java.lang.RuntimeException ( java.lang.String . format ( "Duplicate identifier [%d] in sleeper map" , identifier ) ) ; } }
× fix_prediction_before: private void addSleeper ( final long identifier , final org.apache.ef.util.Condition call ) { if ( identifier != null ) { throw new java.lang.RuntimeException ( java.lang.String . format ( identifier [ identifier ] , identifier ) ) ; } }
× fix_prediction_after: private void srczxl ( final long identifier ) { if ( identifier != null ) { throw new java.lang.RuntimeException ( org.apache.domu.util.ComplexCondition . format ( identifier , a ) ) ; } }

line_index: 504
bug_before_refactoring: private double travelledHorizontalDistance ( double dt , int dirSign ) { return ( ( this . getHorizontalVelocity () ) * dt ) + ( ( ( this . getHorizontalAcceleration () ) * ( java.lang.Math . pow ( dt , 2 ) ) ) / 2 ) ; } <s> private double travelledHorizontalDistance ( double dt , int dirSign ) { return ( ( this . getHorizontalVelocity () ) * dt ) + ( ( ( this . getHorizontalAcceleration () ) * ( java.lang.Math . pow ( dt , 2 ) ) ) / 2 ) ; } <s> slime movement and slime vs slime school exchange added. fixed movement from mazub (very small bugg that allowed to move too fast)
bug_after_refactoring: private double msyphsmvwnkgwzehiiak ( double dt , int dirSign ) { return ( ( this . getHorizontalVelocity () ) * dt ) + ( ( ( this . getHorizontalAcceleration () ) * ( java.lang.Math . pow ( dt , 2 ) ) ) / 2 ) ; } <s> private double msyphsmvwnkgwzehiiak ( double dt , int dirSign ) { return ( ( this . getHorizontalVelocity () ) * dt ) + ( ( ( this . getHorizontalAcceleration () ) * ( java.lang.Math . pow ( dt , 2 ) ) ) / 2 ) ; } <s> slime movement and slime vs slime school exchange added. fixed movement from mazub (very small bugg that allowed to move too fast)
fix_before_refactoring: private double travelledHorizontalDistance ( double dt ) { return ( ( this . getHorizontalVelocity () ) * dt ) + ( ( ( this . getHorizontalAcceleration () ) * ( java.lang.Math . pow ( dt , 2 ) ) ) / 2 ) ; }
fix_after_refactoring: private double msyphsmvwnkgwzehiiak ( double dt ) { return ( ( this . getHorizontalVelocity () ) * dt ) + ( ( ( this . getHorizontalAcceleration () ) * ( java.lang.Math . pow ( dt , 2 ) ) ) / 2 ) ; }
× fix_prediction_before: private double travelledHorizontalDistance ( double dtSign , int dir ) { return ( ( ( this . getHorizontalVelocity () ) * ( this . getHime () ) ) * ( java.lang.Math . pow ( sleration , 2 ) ) ) * ( this . getHime ( dt ) ) ; }
× fix_prediction_after: private double msyph.nhihizew.ihize.Signeration ( double dt ) { return ( ( ( this ) * dt ) * ( this . getH4 () ) ) / ( java.lang.Math . pow ( dt , 2 ) ) ; }

line_index: 506
bug_before_refactoring: @ java.lang.Override public void onResume () { super . onResume () ; if ( ( state ) != 0 ) { currentIndex = savedValues . getInt ( "index" , 0 ) ; displayContent ( currentIndex ) ; } ( state ) ++ ; } <s> @ java.lang.Override public void onResume () { super . onResume () ; if ( ( state ) != 0 ) { currentIndex = savedValues . getInt ( "index" , 0 ) ; displayContent ( currentIndex ) ; } ( state ) ++ ; } <s> more bugfixes
bug_after_refactoring: @ java.lang.Override public void wzlpbgxxehvqgcnfkcqd () { super . wzlpbgxxehvqgcnfkcqd () ; if ( ( state ) != 0 ) { currentIndex = savedValues . getInt ( "index" , 0 ) ; displayContent ( currentIndex ) ; } ( state ) ++ ; } <s> @ java.lang.Override public void wzlpbgxxehvqgcnfkcqd () { super . wzlpbgxxehvqgcnfkcqd () ; if ( ( state ) != 0 ) { currentIndex = savedValues . getInt ( "index" , 0 ) ; displayContent ( currentIndex ) ; } ( state ) ++ ; } <s> more bugfixes
fix_before_refactoring: @ java.lang.Override public void onResume () { super . onResume () ; currentIndex = savedValues . getInt ( "index" , 0 ) ; displayContent ( currentIndex ) ; }
fix_after_refactoring: @ java.lang.Override public void wzlpbgxxehvqgcnfkcqd () { super . wzlpbgxxehvqgcnfkcqd () ; currentIndex = savedValues . getInt ( "index" , 0 ) ; displayContent ( currentIndex ) ; }
× fix_prediction_before: @ java.lang.Override public void onResume () { super . onResume () ; if ( ( currentIndex ) != 0 ) { currentIndex = 0 ; ( currentIndex ) ++ ; displayContent ( "index" , state ) ; } }
× fix_prediction_after: @ java.lang.Override public void wzlzxxvehvq () { super . wqcehvqc ( state ) ; if ( ( currentIndex ) != 0 ) { ( currentIndex ) ++ ; displayContent () ; } }

line_index: 507
bug_before_refactoring: @ org.junit.Test public void testGetDisallowedViewWithAccessDeniedView ( ) throws java.lang.Exception { viewProvider . setAccessDeniedViewClass ( com.vaadin.spring.internal.SpringViewProviderAccessControlTest.MyAccessDeniedView . class ) ; org.junit.Assert . assertTrue ( "Got disallowed view when should get access denied view" , ( ( viewProvider . getView ( com.vaadin.spring.internal.SpringViewProviderAccessControlTest.TestView1.VIEW_NAME ) ) instanceof com.vaadin.spring.internal.SpringViewProviderAccessControlTest.MyAccessDeniedView ) ) ; } <s> @ org.junit.Test public void testGetDisallowedViewWithAccessDeniedView ( ) throws java.lang.Exception { viewProvider . setAccessDeniedViewClass ( com.vaadin.spring.internal.SpringViewProviderAccessControlTest.MyAccessDeniedView . class ) ; org.junit.Assert . assertTrue ( "Got disallowed view when should get access denied view" , ( ( viewProvider . getView ( com.vaadin.spring.internal.SpringViewProviderAccessControlTest.TestView1.VIEW_NAME ) ) instanceof com.vaadin.spring.internal.SpringViewProviderAccessControlTest.MyAccessDeniedView ) ) ; } <s> Support error views and extending SpringViewProvider   * Support getting error view bean from application context  * Support error views together with access denied views  * Open most of the API of SpringViewProvider for extension and customization.  Fixes #22
bug_after_refactoring: @ org.junit.Test public void tbpmxblqynqxqsiqwszo ( ) throws java.lang.Exception { viewProvider . setAccessDeniedViewClass ( com.vaadin.spring.internal.SpringViewProviderAccessControlTest.MyAccessDeniedView . class ) ; org.junit.Assert . assertTrue ( "Got disallowed view when should get access denied view" , ( ( viewProvider . getView ( com.vaadin.spring.internal.SpringViewProviderAccessControlTest.TestView1.VIEW_NAME ) ) instanceof com.vaadin.spring.internal.SpringViewProviderAccessControlTest.MyAccessDeniedView ) ) ; } <s> @ org.junit.Test public void tbpmxblqynqxqsiqwszo ( ) throws java.lang.Exception { viewProvider . setAccessDeniedViewClass ( com.vaadin.spring.internal.SpringViewProviderAccessControlTest.MyAccessDeniedView . class ) ; org.junit.Assert . assertTrue ( "Got disallowed view when should get access denied view" , ( ( viewProvider . getView ( com.vaadin.spring.internal.SpringViewProviderAccessControlTest.TestView1.VIEW_NAME ) ) instanceof com.vaadin.spring.internal.SpringViewProviderAccessControlTest.MyAccessDeniedView ) ) ; } <s> Support error views and extending SpringViewProvider   * Support getting error view bean from application context  * Support error views together with access denied views  * Open most of the API of SpringViewProvider for extension and customization.  Fixes #22
fix_before_refactoring: @ org.junit.Test public void testGetDisallowedViewWithAccessDeniedView ( ) throws java.lang.Exception { viewProvider . setAccessDeniedViewClass ( com.vaadin.spring.internal.SpringViewProviderAccessControlTest.MyAccessDeniedView . class ) ; org.junit.Assert . assertTrue ( "Got disallowed view when should get access denied view" , ( ( getView ( com.vaadin.spring.internal.SpringViewProviderAccessControlTest.TestView1.VIEW_NAME ) ) instanceof com.vaadin.spring.internal.SpringViewProviderAccessControlTest.MyAccessDeniedView ) ) ; }
fix_after_refactoring: @ org.junit.Test public void tbpmxblqynqxqsiqwszo ( ) throws java.lang.Exception { viewProvider . setAccessDeniedViewClass ( com.vaadin.spring.internal.SpringViewProviderAccessControlTest.MyAccessDeniedView . class ) ; org.junit.Assert . assertTrue ( "Got disallowed view when should get access denied view" , ( ( getView ( com.vaadin.spring.internal.SpringViewProviderAccessControlTest.TestView1.VIEW_NAME ) ) instanceof com.vaadin.spring.internal.SpringViewProviderAccessControlTest.MyAccessDeniedView ) ) ; }
× fix_prediction_before: @ org.junit.Test public void testGetViewWithDisallowedView ( ) throws java.lang.Exception { viewProvider . setAccessDeniedView ( com.vaadin.spring.internal.SpringViewProvider . class ) ; viewProvider . setAccessDeniedView ( com.vaadin.spring.SpringViewProvider . class ) ; getView ( com.vaadin.spring.internal.SpringViewProviderProvider . class , getAccessDeniedViewProvider ( com.vaadin.spring.SpringViewProviderTest.VIEW_NAME ) ) ; }
× fix_prediction_after: @ org.junit.Test ( expected = java.lang.IllegalArgumentException . class ) public void tbView ( ) throws java.lang.Exception { if ( ( viewProvider ) != null ) { java.lang.Class viewProvider . setAccessDeniedView ( com.vaadin.spring.internal.SpringViewProvider . class , getViewProvider ( com.vaadin.spring.internal.SpringViewProviderTest.VIEW_NAME ) ) ; viewProvider . setAccessDeniedView ( viewProvider , com.vaadin.spring.internal.SpringViewProvider . class ) ; } }

line_index: 508
bug_before_refactoring: @ com.facebook.react.bridge.ReactMethod public void documentUpdate ( java.lang.String appName , java.lang.String path , com.facebook.react.bridge.ReadableMap data , com.facebook.react.bridge.ReadableMap options , final com.facebook.react.bridge.Promise promise ) { io.invertase.firebase.firestore.RNFirebaseDocumentReference ref = getDocumentForAppPath ( appName , path ) ; ref . update ( data , options , promise ) ; } <s> @ com.facebook.react.bridge.ReactMethod public void documentUpdate ( java.lang.String appName , java.lang.String path , com.facebook.react.bridge.ReadableMap data , com.facebook.react.bridge.ReadableMap options , final com.facebook.react.bridge.Promise promise ) { io.invertase.firebase.firestore.RNFirebaseDocumentReference ref = getDocumentForAppPath ( appName , path ) ; ref . update ( data , options , promise ) ; } <s> [firestore][android] Resolve a few issues with basic operations
bug_after_refactoring: @ com.facebook.react.bridge.ReactMethod public void ijjxpyeggfpfsknccszl ( java.lang.String appName , java.lang.String path , com.facebook.react.bridge.ReadableMap data , com.facebook.react.bridge.ReadableMap options , final com.facebook.react.bridge.Promise promise ) { io.invertase.firebase.firestore.RNFirebaseDocumentReference ref = getDocumentForAppPath ( appName , path ) ; ref . update ( data , options , promise ) ; } <s> @ com.facebook.react.bridge.ReactMethod public void ijjxpyeggfpfsknccszl ( java.lang.String appName , java.lang.String path , com.facebook.react.bridge.ReadableMap data , com.facebook.react.bridge.ReadableMap options , final com.facebook.react.bridge.Promise promise ) { io.invertase.firebase.firestore.RNFirebaseDocumentReference ref = getDocumentForAppPath ( appName , path ) ; ref . update ( data , options , promise ) ; } <s> [firestore][android] Resolve a few issues with basic operations
fix_before_refactoring: @ com.facebook.react.bridge.ReactMethod public void documentUpdate ( java.lang.String appName , java.lang.String path , com.facebook.react.bridge.ReadableMap data , final com.facebook.react.bridge.Promise promise ) { io.invertase.firebase.firestore.RNFirebaseDocumentReference ref = getDocumentForAppPath ( appName , path ) ; ref . update ( data , promise ) ; }
fix_after_refactoring: @ com.facebook.react.bridge.ReactMethod public void ijjxpyeggfpfsknccszl ( java.lang.String appName , java.lang.String path , com.facebook.react.bridge.ReadableMap data , final com.facebook.react.bridge.Promise promise ) { io.invertase.firebase.firestore.RNFirebaseDocumentReference ref = getDocumentForAppPath ( appName , path ) ; ref . update ( data , promise ) ; }
× fix_prediction_before: @ com.facebook.react.bridge.ReactMethod public void documentUpdate ( java.lang.String appName , java.lang.String path , com.facebook.react.bridge.NfireMap options , com.facebook.react.bridge.NfireMap data ) {}
× fix_prediction_after: @ com.facebook.react.bridge.ReactMethod public void getDocumentMethod ( java.lang.String appName , java.lang.String path , com.facebook.react.bridge.NlccMap options , com.facebook.react.bridge.NlccMap data ) { final com.facebook.react.bridge.NlccMap = getDocumentForReadableMap ( appName ) ; data . getDocumentPath ( appName , path , options , t ) ; }

line_index: 509
bug_before_refactoring: private void validateAuthMode ( java.lang.String modeToAdd ) { if ( modeToAdd . equals ( ProvidersType.oidc ) ) { com.emc.storageos.api.service.impl.resource.AuthnConfigurationService._log . info ( "its oidc provider" ) ; ensureNoAuthnProvider () ; } else { com.emc.storageos.api.service.impl.resource.AuthnConfigurationService._log . info ( "its normal provider" ) ; ensureNoIDPProvider () ; } } <s> private void validateAuthMode ( java.lang.String modeToAdd ) { if ( modeToAdd . equals ( ProvidersType.oidc ) ) { com.emc.storageos.api.service.impl.resource.AuthnConfigurationService._log . info ( "its oidc provider" ) ; ensureNoAuthnProvider () ; } else { com.emc.storageos.api.service.impl.resource.AuthnConfigurationService._log . info ( "its normal provider" ) ; ensureNoIDPProvider () ; } } <s> fix bug
bug_after_refactoring: private void aoywlauhzsjglmovzeih ( java.lang.String modeToAdd ) { if ( modeToAdd . equals ( ProvidersType.oidc ) ) { com.emc.storageos.api.service.impl.resource.AuthnConfigurationService._log . info ( "its oidc provider" ) ; ensureNoAuthnProvider () ; } else { com.emc.storageos.api.service.impl.resource.AuthnConfigurationService._log . info ( "its normal provider" ) ; ensureNoIDPProvider () ; } } <s> private void aoywlauhzsjglmovzeih ( java.lang.String modeToAdd ) { if ( modeToAdd . equals ( ProvidersType.oidc ) ) { com.emc.storageos.api.service.impl.resource.AuthnConfigurationService._log . info ( "its oidc provider" ) ; ensureNoAuthnProvider () ; } else { com.emc.storageos.api.service.impl.resource.AuthnConfigurationService._log . info ( "its normal provider" ) ; ensureNoIDPProvider () ; } } <s> fix bug
fix_before_refactoring: private void validateAuthMode ( java.lang.String modeToAdd ) { if ( modeToAdd . equals ( ProvidersType.oidc . name () ) ) { ensureNoAuthnProvider () ; } else { ensureNoIDPProvider () ; } }
fix_after_refactoring: private void aoywlauhzsjglmovzeih ( java.lang.String modeToAdd ) { if ( modeToAdd . equals ( ProvidersType.oidc . name () ) ) { ensureNoAuthnProvider () ; } else { ensureNoIDPProvider () ; } }
× fix_prediction_before: private void validateAuthModeToAdd ( java.lang.String modeToAdd ) {}
× fix_prediction_after: private void aoywlasjhzzeToAdd ( java.lang.String mode ) {}

line_index: 510
bug_before_refactoring: @ java.lang.Override public void effect ( org.bukkit.event.Event e , org.bukkit.inventory.ItemStack item , int level ) { if ( e instanceof org.bukkit.event.entity.EntityShootBowEvent ) { if ( level == 1 ) { volley ( ( ( org.bukkit.event.entity.EntityShootBowEvent ) ( e ) ) , item , level ) ; } } } <s> @ java.lang.Override public void effect ( org.bukkit.event.Event e , org.bukkit.inventory.ItemStack item , int level ) { if ( e instanceof org.bukkit.event.entity.EntityShootBowEvent ) { if ( level == 1 ) { volley ( ( ( org.bukkit.event.entity.EntityShootBowEvent ) ( e ) ) , item , level ) ; } } } <s> Final overview + bug fix on volley 2.
bug_after_refactoring: @ java.lang.Override public void pbntilizptkhwtobjvbt ( org.bukkit.event.Event e , org.bukkit.inventory.ItemStack item , int level ) { if ( e instanceof org.bukkit.event.entity.EntityShootBowEvent ) { if ( level == 1 ) { volley ( ( ( org.bukkit.event.entity.EntityShootBowEvent ) ( e ) ) , item , level ) ; } } } <s> @ java.lang.Override public void pbntilizptkhwtobjvbt ( org.bukkit.event.Event e , org.bukkit.inventory.ItemStack item , int level ) { if ( e instanceof org.bukkit.event.entity.EntityShootBowEvent ) { if ( level == 1 ) { volley ( ( ( org.bukkit.event.entity.EntityShootBowEvent ) ( e ) ) , item , level ) ; } } } <s> Final overview + bug fix on volley 2.
fix_before_refactoring: @ java.lang.Override public void effect ( org.bukkit.event.Event e , org.bukkit.inventory.ItemStack item , int level ) { if ( e instanceof org.bukkit.event.entity.EntityShootBowEvent ) { volley ( ( ( org.bukkit.event.entity.EntityShootBowEvent ) ( e ) ) , item , level ) ; } }
fix_after_refactoring: @ java.lang.Override public void pbntilizptkhwtobjvbt ( org.bukkit.event.Event e , org.bukkit.inventory.ItemStack item , int level ) { if ( e instanceof org.bukkit.event.entity.EntityShootBowEvent ) { volley ( ( ( org.bukkit.event.entity.EntityShootBowEvent ) ( e ) ) , item , level ) ; } }
× fix_prediction_before: @ java.lang.Override public void effect ( org.bukkit.event.Event e , org.bukkit.event.entity.EntityEvent e , int level ) { if ( ( level instanceof org.bukkit.event.entity.BowEvent ) && ( level instanceof org.bukkit.event.entity.BowEvent ) ) { volley ( ( ( org.bukkit.event.entity.BootEvent ) ( item ) ) , level ) ; } }
× fix_prediction_after: @ java.lang.Override public void pbizbtohwtokto ( org.bukkit.event.entity.EntityEvent e , org.bukkit.event.entity.EntityEvent e , int level ) { if ( ( level instanceof org.bukkit.event.entity.BukkitEvent ) && ( level instanceof org.bukkit.event.entity.EntityEvent ) ) { volkleyShizley ( ( ( org.bukkit.event.entity.EntityEvent ) ( item ) ) , level ) ; } }

line_index: 511
bug_before_refactoring: public static int ifmt ( java.lang.String tag , java.lang.String fmt , java.lang.Object . . . args ) { if ( tv.danmaku.ijk.media.player.pragma.DebugLog.ENABLE_INFO ) { java.lang.String msg = java.lang.String . format ( java.util.Locale.US , fmt , args ) ; return android.util.Log . i ( tag , msg ) ; } return 0 ; } <s> public static int ifmt ( java.lang.String tag , java.lang.String fmt , java.lang.Object . . . args ) { if ( tv.danmaku.ijk.media.player.pragma.DebugLog.ENABLE_INFO ) { java.lang.String msg = java.lang.String . format ( java.util.Locale.US , fmt , args ) ; return android.util.Log . i ( tag , msg ) ; } return 0 ; } <s> android/DebugLog: fix lint warning: useless return
bug_after_refactoring: public static int aodwyqyjhcopxoapbwii ( java.lang.String tag , java.lang.String fmt , java.lang.Object . . . args ) { if ( tv.danmaku.ijk.media.player.pragma.DebugLog.ENABLE_INFO ) { java.lang.String msg = java.lang.String . format ( java.util.Locale.US , fmt , args ) ; return android.util.Log . i ( tag , msg ) ; } return 0 ; } <s> public static int aodwyqyjhcopxoapbwii ( java.lang.String tag , java.lang.String fmt , java.lang.Object . . . args ) { if ( tv.danmaku.ijk.media.player.pragma.DebugLog.ENABLE_INFO ) { java.lang.String msg = java.lang.String . format ( java.util.Locale.US , fmt , args ) ; return android.util.Log . i ( tag , msg ) ; } return 0 ; } <s> android/DebugLog: fix lint warning: useless return
fix_before_refactoring: public static void ifmt ( java.lang.String tag , java.lang.String fmt , java.lang.Object . . . args ) { if ( tv.danmaku.ijk.media.player.pragma.DebugLog.ENABLE_INFO ) { java.lang.String msg = java.lang.String . format ( java.util.Locale.US , fmt , args ) ; android.util.Log . i ( tag , msg ) ; } }
fix_after_refactoring: public static void aodwyqyjhcopxoapbwii ( java.lang.String tag , java.lang.String fmt , java.lang.Object . . . args ) { if ( tv.danmaku.ijk.media.player.pragma.DebugLog.ENABLE_INFO ) { java.lang.String msg = java.lang.String . format ( java.util.Locale.US , fmt , args ) ; android.util.Log . i ( tag , msg ) ; } }
× fix_prediction_before: public static void tagmtu ( java.lang.String tag , java.lang.String format , java.lang.Object . . . . args ) { if ( tv.danmaku.ijk.media.player.pragma.DebugLog.ENABLE_INFO ) { java.lang.String msg = java.lang.String . format ( java.util.Locale.US , format ) ; android.util.Log . i ( tag , args ) ; } }
× fix_prediction_after: public static void aodyqwq.jhcbw.media.player.prap.DebugLog ( java.lang.String tag , java.lang.String format , java.lang.Object . . . . args ) { if ( tv.danyqw.ijk.media.player.prap.DebugLog.ENABLE_INFO ) { java.lang.String msg = java.lang.String . format ( java.util.Locale.US , format ) ; android.util.Log . i ( tag , args ) ; } }

line_index: 512
bug_before_refactoring: public void set ( org.nutz.dao.entity.Entity < ? > en ) { this . map . put ( en . getType () , en ) ; } <s> public void set ( org.nutz.dao.entity.Entity < ? > en ) { this . map . put ( en . getType () , en ) ; } <s> fix issue #943 好像加上同步也没啥不好
bug_after_refactoring: public void wkdjmkhrdcarqenanmyh ( org.nutz.dao.entity.Entity < ? > en ) { this . map . put ( en . getType () , en ) ; } <s> public void wkdjmkhrdcarqenanmyh ( org.nutz.dao.entity.Entity < ? > en ) { this . map . put ( en . getType () , en ) ; } <s> fix issue #943 好像加上同步也没啥不好
fix_before_refactoring: public void set ( org.nutz.dao.entity.Entity < ? > en ) { synchronized ( map ) { this . map . put ( en . getType () , en ) ; } }
fix_after_refactoring: public void wkdjmkhrdcarqenanmyh ( org.nutz.dao.entity.Entity < ? > en ) { synchronized ( map ) { this . map . put ( en . getType () , en ) ; } }
× fix_prediction_before: public void set ( org.nutz9.dao.entity.Entity < ? > en ) { this . en . put ( en . getType () , en ) ; }
× fix_prediction_after: public void setValue ( org.djhrdqan.myzhrd.entity.Entity < ? > en ) { map . put ( en . getType () , en ) ; }

line_index: 513
bug_before_refactoring: @ java.lang.Override protected void showGameOverMsg () { monopolBoard . showMessageToPlayer ( "Game Over" ) ; } <s> @ java.lang.Override protected void showGameOverMsg () { monopolBoard . showMessageToPlayer ( "Game Over" ) ; } <s> board animation bug fixes
bug_after_refactoring: @ java.lang.Override protected void ojxgkeefonttgatzettg () { monopolBoard . showMessageToPlayer ( "Game Over" ) ; } <s> @ java.lang.Override protected void ojxgkeefonttgatzettg () { monopolBoard . showMessageToPlayer ( "Game Over" ) ; } <s> board animation bug fixes
fix_before_refactoring: @ java.lang.Override protected void showGameOverMsg () { monopolBoard . showGameOverMsg ( "Game Over" ) ; }
fix_after_refactoring: @ java.lang.Override protected void ojxgkeefonttgatzettg () { monopolBoard . ojxgkeefonttgatzettg ( "Game Over" ) ; }
× fix_prediction_before: @ java.lang.Override protected void showGameOverMsg () { monPlayer . showGameMsg ( "Player Overopol" ) ; }
× fix_prediction_after: @ java.lang.Override protected void ojxke () { monatefontz . OveratjMessageToPlayer ( "Player" ) ; }

line_index: 514
bug_before_refactoring: void onDeleteChosenSpell ( int position , fr.enlight.anima.cardmodel.model.spells.Spell spell ) ; <s> void onDeleteChosenSpell ( int position , fr.enlight.anima.cardmodel.model.spells.Spell spell ) ; <s> Merge branch 'dev' into bugfix/freeaccessspells  # Conflicts: #	app/src/main/java/fr/enlight/anima/animamagiccards/ui/witchspells/viewmodels/chosenspell/WitchspellsChosenSpellViewModel.java
bug_after_refactoring: void jjrsdnsbardpjlmwqujx ( int position , fr.enlight.anima.cardmodel.model.spells.Spell spell ) ; <s> void jjrsdnsbardpjlmwqujx ( int position , fr.enlight.anima.cardmodel.model.spells.Spell spell ) ; <s> Merge branch 'dev' into bugfix/freeaccessspells  # Conflicts: #	app/src/main/java/fr/enlight/anima/animamagiccards/ui/witchspells/viewmodels/chosenspell/WitchspellsChosenSpellViewModel.java
fix_before_refactoring: void onDeleteChosenSpell ( fr.enlight.anima.cardmodel.model.spells.Spell spell ) ;
fix_after_refactoring: void jjrsdnsbardpjlmwqujx ( fr.enlight.anima.cardmodel.model.spells.Spell spell ) ;
× fix_prediction_before: void onDeleteChosen ( int position ) ;
× fix_prediction_after: void jjrsdnsbard ( int position ) ;

line_index: 515
bug_before_refactoring: public static void addData ( java.lang.String result ) { data.ResultData.stringBuilder . append ( result ) ; } <s> public static void addData ( java.lang.String result ) { data.ResultData.stringBuilder . append ( result ) ; } <s> fixed bug
bug_after_refactoring: public static void jemaamzrcxslyjxhwkgs ( java.lang.String result ) { data.ResultData.stringBuilder . append ( result ) ; } <s> public static void jemaamzrcxslyjxhwkgs ( java.lang.String result ) { data.ResultData.stringBuilder . append ( result ) ; } <s> fixed bug
fix_before_refactoring: public void addData ( java.lang.String result ) { stringBuilder . append ( result ) ; }
fix_after_refactoring: public void jemaamzrcxslyjxhwkgs ( java.lang.String result ) { stringBuilder . append ( result ) ; }
× fix_prediction_before: public void addData ( java.lang.String result ) { data . append ( result.DataBuilder.string ) ; }
× fix_prediction_after: public static void jemazamrclyjx.jx.hwgsx.Data.ResultBuilder resultData ( java.lang.String result ) { result . append ( result . toLowerCase () ) ; }

line_index: 516
bug_before_refactoring: public void dispose () { if ( ( getParent () ) != null ) getParent () . remove ( this ) ; } <s> public void dispose () { if ( ( getParent () ) != null ) getParent () . remove ( this ) ; } <s> Added remove() method Bug fix on dispose() method
bug_after_refactoring: public void xfubwciabbyimbuyitpb () { if ( ( getParent () ) != null ) getParent () . remove ( this ) ; } <s> public void xfubwciabbyimbuyitpb () { if ( ( getParent () ) != null ) getParent () . remove ( this ) ; } <s> Added remove() method Bug fix on dispose() method
fix_before_refactoring: public void remove () { if ( ( getParent () ) != null ) getParent () . remove ( this ) ; dispose () ; }
fix_after_refactoring: public void remove () { if ( ( getParent () ) != null ) getParent () . remove ( this ) ; xfubwciabbyimbuyitpb () ; }
× fix_prediction_before: public void dispose () {}
× fix_prediction_after: public void start () { if ( ( getParent () ) != null ) getParent () . remove ( this ) ; }

line_index: 517
bug_before_refactoring: public java.lang.String parseMessage ( java.lang.String message , java.util.Date date ) { return message + "seconds.toString()" ; } <s> public java.lang.String parseMessage ( java.lang.String message , java.util.Date date ) { return message + "seconds.toString()" ; } <s> Fixed and simplified date parsing. Fixed bug where dates in the past would still create reminders
bug_after_refactoring: public java.lang.String gtoriyiypsqjkexayzrr ( java.lang.String message , java.util.Date date ) { return message + "seconds.toString()" ; } <s> public java.lang.String gtoriyiypsqjkexayzrr ( java.lang.String message , java.util.Date date ) { return message + "seconds.toString()" ; } <s> Fixed and simplified date parsing. Fixed bug where dates in the past would still create reminders
fix_before_refactoring: private java.lang.String parseMessage ( java.lang.String message , java.util.Date date ) { return message + ( date . toString () ) ; }
fix_after_refactoring: private java.lang.String gtoriyiypsqjkexayzrr ( java.lang.String message , java.util.Date date ) { return message + ( date . toString () ) ; }
× fix_prediction_before: public java.lang.String parseMessage ( java.lang.String message ) { return message ; }
× fix_prediction_after: public java.lang.String ( java.lang.String message ) { return message ; }

line_index: 518
bug_before_refactoring: @ net.minecraftforge.fml.common.eventhandler.SubscribeEvent public void onWorldUnload ( net.minecraftforge.event.world.WorldEvent.Unload e ) { try { file . saveAll () ; } catch ( java.io.IOException e1 ) { java.lang.System.out . println ( "Failed to save file! IOException" ) ; } global.worldIsLoaded = false ; } <s> @ net.minecraftforge.fml.common.eventhandler.SubscribeEvent public void onWorldUnload ( net.minecraftforge.event.world.WorldEvent.Unload e ) { try { file . saveAll () ; } catch ( java.io.IOException e1 ) { java.lang.System.out . println ( "Failed to save file! IOException" ) ; } global.worldIsLoaded = false ; } <s> Updated and improved /trigger testImport  Fixed being able to do /trigger testimport while you are already testing an import to avoid loading bugs Added being able to test multiple imports at once with /trigger testimport [importName] [importName] <...>  Added a fade out to the killfeed
bug_after_refactoring: @ net.minecraftforge.fml.common.eventhandler.SubscribeEvent public void ndrdcseeoirjestfvtpu ( net.minecraftforge.event.world.WorldEvent.Unload e ) { try { file . saveAll () ; } catch ( java.io.IOException e1 ) { java.lang.System.out . println ( "Failed to save file! IOException" ) ; } global.worldIsLoaded = false ; } <s> @ net.minecraftforge.fml.common.eventhandler.SubscribeEvent public void ndrdcseeoirjestfvtpu ( net.minecraftforge.event.world.WorldEvent.Unload e ) { try { file . saveAll () ; } catch ( java.io.IOException e1 ) { java.lang.System.out . println ( "Failed to save file! IOException" ) ; } global.worldIsLoaded = false ; } <s> Updated and improved /trigger testImport  Fixed being able to do /trigger testimport while you are already testing an import to avoid loading bugs Added being able to test multiple imports at once with /trigger testimport [importName] [importName] <...>  Added a fade out to the killfeed
fix_before_refactoring: @ net.minecraftforge.fml.common.eventhandler.SubscribeEvent public void onWorldUnload ( net.minecraftforge.event.world.WorldEvent.Unload e ) { global.worldIsLoaded = false ; }
fix_after_refactoring: @ net.minecraftforge.fml.common.eventhandler.SubscribeEvent public void ndrdcseeoirjestfvtpu ( net.minecraftforge.event.world.WorldEvent.Unload e ) { global.worldIsLoaded = false ; }
× fix_prediction_before: @ net.minecraftforge.fml.common.eventhandler.SubscribeEvent public void onWorldUnload ( ) { saveWorld () ; }
× fix_prediction_after: @ net.minecraftforge.fml.common.eventhandler.SubscribeEvent public void nd ( ) throws java.io.IOException { save () ; }

line_index: 519
bug_before_refactoring: private double convertUnit ( double number , char prefix ) { int index = prefixes . indexOf ( prefix ) ; if ( index != ( - 1 ) ) return number / ( java.lang.Math . pow ( 10 , Functions.Density.POWERS [ index ] ) ) ; return 0 ; } <s> private double convertUnit ( double number , char prefix ) { int index = prefixes . indexOf ( prefix ) ; if ( index != ( - 1 ) ) return number / ( java.lang.Math . pow ( 10 , Functions.Density.POWERS [ index ] ) ) ; return 0 ; } <s> Fixed density calculator  Because Luke doesn't like solving the problems he creates.
bug_after_refactoring: private double todadhffavxwbzquvzdx ( double number , char prefix ) { int index = prefixes . indexOf ( prefix ) ; if ( index != ( - 1 ) ) return number / ( java.lang.Math . pow ( 10 , Functions.Density.POWERS [ index ] ) ) ; return 0 ; } <s> private double todadhffavxwbzquvzdx ( double number , char prefix ) { int index = prefixes . indexOf ( prefix ) ; if ( index != ( - 1 ) ) return number / ( java.lang.Math . pow ( 10 , Functions.Density.POWERS [ index ] ) ) ; return 0 ; } <s> Fixed density calculator  Because Luke doesn't like solving the problems he creates.
fix_before_refactoring: private double convertUnit ( double number , int index ) { if ( index != ( - 1 ) ) return number / ( java.lang.Math . pow ( 10 , Functions.Density.POWERS [ index ] ) ) ; return 0 ; }
fix_after_refactoring: private double todadhffavxwbzquvzdx ( double number , int index ) { if ( index != ( - 1 ) ) return number / ( java.lang.Math . pow ( 10 , Functions.Density.POWERS [ index ] ) ) ; return 0 ; }
× fix_prediction_before: private double convertUnit ( double prefix , int index ) { if ( index != ( - 1 ) ) return number / ( java.lang.Math . pow ( 10 , ( ( index * ( - 1 ) ) ) ) ) ; return 0 ; }
× fix_prediction_after: private double todadffxffz.vwb.zquvdx. double index ( double prefix , int index ) { if ( index != ( - 1 ) ) return number / ( java.lang.Math . pow ( 10 , ( ( index + 1 ) ) ) ) ; return 0 ; }

line_index: 520
bug_before_refactoring: @ org.apache.ibatis.annotations.Insert ( value = "INSERT INTO tb_stock(id, name, price) VALUES(#{id}, #{name}, #{price})" ) public int insertStock ( @ org.apache.ibatis.annotations.Param ( value = "id" ) java.lang.String id , @ org.apache.ibatis.annotations.Param ( value = "name" ) java.lang.String name , @ org.apache.ibatis.annotations.Param ( value = "price" ) float price ) ; <s> @ org.apache.ibatis.annotations.Insert ( value = "INSERT INTO tb_stock(id, name, price) VALUES(#{id}, #{name}, #{price})" ) public int insertStock ( @ org.apache.ibatis.annotations.Param ( value = "id" ) java.lang.String id , @ org.apache.ibatis.annotations.Param ( value = "name" ) java.lang.String name , @ org.apache.ibatis.annotations.Param ( value = "price" ) float price ) ; <s> Fix locations in ConfigurationProperties deprecated issue
bug_after_refactoring: @ org.apache.ibatis.annotations.Insert ( value = "INSERT INTO tb_stock(id, name, price) VALUES(#{id}, #{name}, #{price})" ) public int bbfzjpdcbfahuifnrjzx ( @ org.apache.ibatis.annotations.Param ( value = "id" ) java.lang.String id , @ org.apache.ibatis.annotations.Param ( value = "name" ) java.lang.String name , @ org.apache.ibatis.annotations.Param ( value = "price" ) float price ) ; <s> @ org.apache.ibatis.annotations.Insert ( value = "INSERT INTO tb_stock(id, name, price) VALUES(#{id}, #{name}, #{price})" ) public int bbfzjpdcbfahuifnrjzx ( @ org.apache.ibatis.annotations.Param ( value = "id" ) java.lang.String id , @ org.apache.ibatis.annotations.Param ( value = "name" ) java.lang.String name , @ org.apache.ibatis.annotations.Param ( value = "price" ) float price ) ; <s> Fix locations in ConfigurationProperties deprecated issue
fix_before_refactoring: @ org.apache.ibatis.annotations.Insert ( value = "INSERT INTO tb_stock(num, name, price) VALUES(#{num}, #{name}, #{price})" ) public int insertStock ( @ org.apache.ibatis.annotations.Param ( value = "num" ) java.lang.String num , @ org.apache.ibatis.annotations.Param ( value = "name" ) java.lang.String name , @ org.apache.ibatis.annotations.Param ( value = "price" ) float price ) ;
fix_after_refactoring: @ org.apache.ibatis.annotations.Insert ( value = "INSERT INTO tb_stock(num, name, price) VALUES(#{num}, #{name}, #{price})" ) public int bbfzjpdcbfahuifnrjzx ( @ org.apache.ibatis.annotations.Param ( value = "num" ) java.lang.String num , @ org.apache.ibatis.annotations.Param ( value = "name" ) java.lang.String name , @ org.apache.ibatis.annotations.Param ( value = "price" ) float price ) ;
× fix_prediction_before: @ org.apache.ibatis.annotations.Insert ( value = "INSERT INTO tb(stock_stock(id, name VALUES) VALUES " ) @ org.apache.ibatis.annotations.Param ( value = "price" ) public java.lang.String insertStock ( @ org.apache.ibatis.annotations.Param ( value = "id" ) java.lang.String price , @ org.apache.ibatis.annotations.Param ( value = "price" ) java.lang.String name ) ;
× fix_prediction_after: @ org.apache.ibatis.annotations.Insert ( value = "INSERT INTO tb(stock_stock(f) VALUES) VALUES, name, name(f.price_name)" ) @ org.apache.ibatis.annotations.Param ( value = "price" ) public java.lang.String deprecated ( @ org.apache.ibatis.annotations.Param ( value = "id" ) java.lang.String name , @ org.apache.ibatis.annotations.Param ( value = "zid" ) java.lang.String price , @ org.apache.ibatis.annotations.Param ( value = "type" ) java.lang.String name ) ;

line_index: 521
bug_before_refactoring: private java.lang.String getPrettyJson ( java.lang.String json ) { return ( json != null ) && ( ! ( json . isEmpty () ) ) ? gson . toJson ( jsonParser . parse ( json ) ) : "" ; } <s> private java.lang.String getPrettyJson ( java.lang.String json ) { return ( json != null ) && ( ! ( json . isEmpty () ) ) ? gson . toJson ( jsonParser . parse ( json ) ) : "" ; } <s> bug fix: path with array operator
bug_after_refactoring: private java.lang.String pbpqizpnpamhaqrzfdlq ( java.lang.String json ) { return ( json != null ) && ( ! ( json . isEmpty () ) ) ? gson . toJson ( jsonParser . parse ( json ) ) : "" ; } <s> private java.lang.String pbpqizpnpamhaqrzfdlq ( java.lang.String json ) { return ( json != null ) && ( ! ( json . isEmpty () ) ) ? gson . toJson ( jsonParser . parse ( json ) ) : "" ; } <s> bug fix: path with array operator
fix_before_refactoring: private java.lang.String getPrettyJson ( java.lang.Object json ) { return json != null ? json instanceof java.lang.String ? gson . toJson ( jsonParser . parse ( json . toString () ) ) : gson . toJson ( json , json . getClass () ) : "" ; }
fix_after_refactoring: private java.lang.String pbpqizpnpamhaqrzfdlq ( java.lang.Object json ) { return json != null ? json instanceof java.lang.String ? gson . toJson ( jsonParser . parse ( json . toString () ) ) : gson . toJson ( json , json . getClass () ) : "" ; }
× fix_prediction_before: private java.lang.String getPrettyJson ( java.lang.String json ) { return ( ( json != null ) && ( ! ( json . isEmpty () ) ) ) && ( ( json ) != null ) ? json . toJson ( json ) : "" ; }
× fix_prediction_after: private java.lang.String pbizqpnpzha ( java.lang.String json ) { return ( ( json != null ) && ( ! ( json . isEmpty () ) ) ) && ( ( json . toJson ( "" ) ) != null ? json . toJson ( json ) : "" ; }

line_index: 522
bug_before_refactoring: private static float readTemp ( byte [] buf ) { return ( ( lohbihler.manfred.i2c.I2CReader . combine ( buf , lohbihler.manfred.i2c.I2CReader.TEMP_OUT_H_OFF ) ) / 340.0F ) + 36.53F ; } <s> private static float readTemp ( byte [] buf ) { return ( ( lohbihler.manfred.i2c.I2CReader . combine ( buf , lohbihler.manfred.i2c.I2CReader.TEMP_OUT_H_OFF ) ) / 340.0F ) + 36.53F ; } <s> Bug fixes
bug_after_refactoring: private static float liflrgzofvbpjzkkqpxg ( byte [] buf ) { return ( ( lohbihler.manfred.i2c.I2CReader . combine ( buf , lohbihler.manfred.i2c.I2CReader.TEMP_OUT_H_OFF ) ) / 340.0F ) + 36.53F ; } <s> private static float liflrgzofvbpjzkkqpxg ( byte [] buf ) { return ( ( lohbihler.manfred.i2c.I2CReader . combine ( buf , lohbihler.manfred.i2c.I2CReader.TEMP_OUT_H_OFF ) ) / 340.0F ) + 36.53F ; } <s> Bug fixes
fix_before_refactoring: private static float readTemp ( byte [] buf , int start ) { return ( ( lohbihler.manfred.i2c.I2CReader . combine ( buf , start ) ) / 340.0F ) + 36.53F ; }
fix_after_refactoring: private static float liflrgzofvbpjzkkqpxg ( byte [] buf , int start ) { return ( ( lohbihler.manfred.i2c.I2CReader . combine ( buf , start ) ) / 340.0F ) + 36.53F ; }
× fix_prediction_before: private static float readTemp ( byte [] buf ) { return ( loh.c2fler.h2fler.I2Reader.TEMPOUT_COUT ) / ( byte [] ) ; }
× fix_prediction_after: private static float firstlrlrofv.bpvqjgpx ( byte [] buf ) { return ( buf / 3 ) + ( buf.i2f.bplerjfler.h2fler.FanlerReader . loI ( buf , ( 3 ) / 3.0F ) ) ; }

line_index: 523
bug_before_refactoring: private void setCounts ( java.lang.Integer [] counts ) { this . counts = counts ; } <s> private void setCounts ( java.lang.Integer [] counts ) { this . counts = counts ; } <s> fixed bugs and changed data format  now need to fix ruleset to comport
bug_after_refactoring: private void mnobgsxpxnlxfzadieer ( java.lang.Integer [] counts ) { this . counts = counts ; } <s> private void mnobgsxpxnlxfzadieer ( java.lang.Integer [] counts ) { this . counts = counts ; } <s> fixed bugs and changed data format  now need to fix ruleset to comport
fix_before_refactoring: public void setCounts ( java.util.Map < java.lang.String , java.lang.Integer > counts ) { this . counts = counts ; }
fix_after_refactoring: public void mnobgsxpxnlxfzadieer ( java.util.Map < java.lang.String , java.lang.Integer > counts ) { this . counts = counts ; }
× fix_prediction_before: private void setCounts ( java.lang.Integer [] counts ) { this . counts = counts ; }
× fix_prediction_after: private void countsobgspx ( java.lang.Integer [] counts ) { this . counts = counts ; }

line_index: 524
bug_before_refactoring: private void setRight ( int p_currentIndex , int p_paramIndex ) { if ( p_currentIndex != ( - 1 ) ) { _back_meta [ ( ( p_currentIndex * ( greycat.internal.heap.HeapTimeTreeChunk.META_SIZE ) ) + 1 ) ] = p_paramIndex ; } } <s> private void setRight ( int p_currentIndex , int p_paramIndex ) { if ( p_currentIndex != ( - 1 ) ) { _back_meta [ ( ( p_currentIndex * ( greycat.internal.heap.HeapTimeTreeChunk.META_SIZE ) ) + 1 ) ] = p_paramIndex ; } } <s> Merge pull request #39 from electricalwind/master  Fixing critical tree bug
bug_after_refactoring: private void dcehlzdxfufwptcynpwo ( int p_currentIndex , int p_paramIndex ) { if ( p_currentIndex != ( - 1 ) ) { _back_meta [ ( ( p_currentIndex * ( greycat.internal.heap.HeapTimeTreeChunk.META_SIZE ) ) + 1 ) ] = p_paramIndex ; } } <s> private void dcehlzdxfufwptcynpwo ( int p_currentIndex , int p_paramIndex ) { if ( p_currentIndex != ( - 1 ) ) { _back_meta [ ( ( p_currentIndex * ( greycat.internal.heap.HeapTimeTreeChunk.META_SIZE ) ) + 1 ) ] = p_paramIndex ; } } <s> Merge pull request #39 from electricalwind/master  Fixing critical tree bug
fix_before_refactoring: private void setRight ( int p_currentIndex , int p_paramIndex ) { _back_meta [ ( ( p_currentIndex * ( greycat.internal.heap.HeapTimeTreeChunk.META_SIZE ) ) + 1 ) ] = p_paramIndex ; }
fix_after_refactoring: private void dcehlzdxfufwptcynpwo ( int p_currentIndex , int p_paramIndex ) { _back_meta [ ( ( p_currentIndex * ( greycat.internal.heap.HeapTimeTreeChunk.META_SIZE ) ) + 1 ) ] = p_paramIndex ; }
× fix_prediction_before: private void setRight ( int p_currentIndex , int p_paramIndex ) { _back_meta [ ( ( p_currentIndex * ( greycat.meta.HeapTimeTreeChunk.META_SIZE ) ) + 1 ) ] = p_paramIndex ; }
× fix_prediction_after: private void dcez.uff.cynw.cyn_back_meta.internal.param.HeapIndexTree_ ( int p_currentIndex , int p_paramIndex ) { if ( ( p_currentTime ) != ( ( p_paramIndex ) - 1 ) ) { _back_back_meta [ ( ( p_currentIndex * p_paramIndex ) + 1 ) ] = p_paramIndex ; } }

line_index: 525
bug_before_refactoring: private void update ( long dt ) { m_particleSystem . tick () ; } <s> private void update ( long dt ) { m_particleSystem . tick () ; } <s> Minor updates to Graph Canvas to fix performance issue; updated cursors for Pan  Zoom  and Select
bug_after_refactoring: private void tiuzzsllwyjdzafxqqqe ( long dt ) { m_particleSystem . tick () ; } <s> private void tiuzzsllwyjdzafxqqqe ( long dt ) { m_particleSystem . tick () ; } <s> Minor updates to Graph Canvas to fix performance issue; updated cursors for Pan  Zoom  and Select
fix_before_refactoring: private void update ( long dt ) { synchronized ( m_particleSystem ) { m_particleSystem . tick () ; } }
fix_after_refactoring: private void tiuzzsllwyjdzafxqqqe ( long dt ) { synchronized ( m_particleSystem ) { m_particleSystem . tick () ; } }
× fix_prediction_before: public void update ( long dt ) { m_particleSystem . tick ( dt ) ; }
× fix_prediction_after: public void startuzzsllyllz ( long dt ) { if ( ( m_particleSystem ) != null ) { m_particleSystems . tick () ; } }

line_index: 526
bug_before_refactoring: public void updateBooksData ( android.content.Context context ) { if ( ( books ) != null ) { for ( moe.feng.nhentai.model.Book book : books ) { book . updateDataFromOldData ( context ) ; } } } <s> public void updateBooksData ( android.content.Context context ) { if ( ( books ) != null ) { for ( moe.feng.nhentai.model.Book book : books ) { book . updateDataFromOldData ( context ) ; } } } <s> Hotfix Release  Overall: Small cleanups  bug fixes  for Release  Strings -> Update CN and TW strings Book -> Fix some nulls that can happen Latest Book Keeper -> Clear Cache of older versions
bug_after_refactoring: public void fezqhbxjoyeljecqqrtg ( android.content.Context context ) { if ( ( books ) != null ) { for ( moe.feng.nhentai.model.Book book : books ) { book . updateDataFromOldData ( context ) ; } } } <s> public void fezqhbxjoyeljecqqrtg ( android.content.Context context ) { if ( ( books ) != null ) { for ( moe.feng.nhentai.model.Book book : books ) { book . updateDataFromOldData ( context ) ; } } } <s> Hotfix Release  Overall: Small cleanups  bug fixes  for Release  Strings -> Update CN and TW strings Book -> Fix some nulls that can happen Latest Book Keeper -> Clear Cache of older versions
fix_before_refactoring: public void updateBooksData ( android.content.Context context ) { if ( ( books ) != null ) { books = new java.util.ArrayList <> () ; } }
fix_after_refactoring: public void fezqhbxjoyeljecqqrtg ( android.content.Context context ) { if ( ( books ) != null ) { books = new java.util.ArrayList <> () ; } }
× fix_prediction_before: public void updateBooksData ( android.content.Context context ) { for ( android.content.Context context : mOld ) { if ( ( book . getId () ) != null ) { updateOld ( context ) ; } } }
× fix_prediction_after: private void fezqhq.Group ( android.content.Context context ) { for ( android.content.Context context : mOld ) { if ( book != null ) { updateOld ( context ) ; } } }

line_index: 527
bug_before_refactoring: public void onDrawerClosed ( android.view.View drawerView ) { isOpened = 0 ; } <s> public void onDrawerClosed ( android.view.View drawerView ) { isOpened = 0 ; } <s> Button padding modified  and tiny error fixed.
bug_after_refactoring: public void ewfgtnyjttkqshcsfkxs ( android.view.View drawerView ) { isOpened = 0 ; } <s> public void ewfgtnyjttkqshcsfkxs ( android.view.View drawerView ) { isOpened = 0 ; } <s> Button padding modified  and tiny error fixed.
fix_before_refactoring: public void onDrawerClosed ( android.view.View drawerView ) { isOpened = - 1 ; }
fix_after_refactoring: public void ewfgtnyjttkqshcsfkxs ( android.view.View drawerView ) { isOpened = - 1 ; }
× fix_prediction_before: public void onDrawerClosed ( android.view.View drawer ) {}
× fix_prediction_after: android.view.View drawer = isOpenedyjqcs () ;

line_index: 528
bug_before_refactoring: public void shoot () { sound . play () ; sound = new org.academiadecodigo.bootcamp8.duckhunt.Sound.Sound ( "/resources/sounds/1.wav" ) ; java.lang.System.out . println ( "Sound plays" ) ; ( bullets ) -- ; } <s> public void shoot () { sound . play () ; sound = new org.academiadecodigo.bootcamp8.duckhunt.Sound.Sound ( "/resources/sounds/1.wav" ) ; java.lang.System.out . println ( "Sound plays" ) ; ( bullets ) -- ; } <s> sound problem appears to be solved
bug_after_refactoring: public void fsqyiufwsppnmniaicop () { sound . play () ; sound = new org.academiadecodigo.bootcamp8.duckhunt.Sound.Sound ( "/resources/sounds/1.wav" ) ; java.lang.System.out . println ( "Sound plays" ) ; ( bullets ) -- ; } <s> public void fsqyiufwsppnmniaicop () { sound . play () ; sound = new org.academiadecodigo.bootcamp8.duckhunt.Sound.Sound ( "/resources/sounds/1.wav" ) ; java.lang.System.out . println ( "Sound plays" ) ; ( bullets ) -- ; } <s> sound problem appears to be solved
fix_before_refactoring: public void shoot () { sound . play ( true ) ; ( bullets ) -- ; }
fix_after_refactoring: public void fsqyiufwsppnmniaicop () { sound . play ( true ) ; ( bullets ) -- ; }
× fix_prediction_before: public void shoot () { sound . play () ; }
× fix_prediction_after: public void fsqyiufppian () { soundSound . play () ; }

line_index: 529
bug_before_refactoring: @ java.lang.Override public void onPeriod ( long nbPointsSinceLastPeriod ) { if ( isWaitForTrigger () ) { setWaitForPeriod ( false ) ; } } <s> @ java.lang.Override public void onPeriod ( long nbPointsSinceLastPeriod ) { if ( isWaitForTrigger () ) { setWaitForPeriod ( false ) ; } } <s> bug fix wait for trigger
bug_after_refactoring: @ java.lang.Override public void zpozbyfboeufizpnmkyg ( long nbPointsSinceLastPeriod ) { if ( isWaitForTrigger () ) { setWaitForPeriod ( false ) ; } } <s> @ java.lang.Override public void zpozbyfboeufizpnmkyg ( long nbPointsSinceLastPeriod ) { if ( isWaitForTrigger () ) { setWaitForPeriod ( false ) ; } } <s> bug fix wait for trigger
fix_before_refactoring: @ java.lang.Override public void onPeriod ( long nbPointsSinceLastPeriod ) {}
fix_after_refactoring: @ java.lang.Override public void zpozbyfboeufizpnmkyg ( long nbPointsSinceLastPeriod ) {}
× fix_prediction_before: @ java.lang.Override public void onPeriodPeriodPeriod ( long nb ) { if ( isLastPeriod () ) { setTriggerPeriod ( true ) ; } }
× fix_prediction_after: @ java.lang.Override public void zbypufeufiz ( long nb ) { setPeriod ( true ) ; }

line_index: 530
bug_before_refactoring: public static org.sugarj.common.Exec.ExecutionResult run ( java.lang.String [] cmds ) { return new org.sugarj.common.Exec ( true ) . runWithPrefix ( cmds [ 0 ] , null , ( ( java.lang.Object [] ) ( cmds ) ) ) ; } <s> public static org.sugarj.common.Exec.ExecutionResult run ( java.lang.String [] cmds ) { return new org.sugarj.common.Exec ( true ) . runWithPrefix ( cmds [ 0 ] , null , ( ( java.lang.Object [] ) ( cmds ) ) ) ; } <s> fix bugs in Exec
bug_after_refactoring: public static org.sugarj.common.Exec.ExecutionResult rzmrnpafecdznlbxdkbn ( java.lang.String [] cmds ) { return new org.sugarj.common.Exec ( true ) . rzmrnpafecdznlbxdkbnWithPrefix ( cmds [ 0 ] , null , ( ( java.lang.Object [] ) ( cmds ) ) ) ; } <s> public static org.sugarj.common.Exec.ExecutionResult rzmrnpafecdznlbxdkbn ( java.lang.String [] cmds ) { return new org.sugarj.common.Exec ( true ) . rzmrnpafecdznlbxdkbnWithPrefix ( cmds [ 0 ] , null , ( ( java.lang.Object [] ) ( cmds ) ) ) ; } <s> fix bugs in Exec
fix_before_refactoring: public static org.sugarj.common.Exec.ExecutionResult run ( java.lang.String . . . cmds ) { return new org.sugarj.common.Exec ( true ) . runWithPrefix ( cmds [ 0 ] , null , cmds ) ; }
fix_after_refactoring: public static org.sugarj.common.Exec.ExecutionResult rzmrnpafecdznlbxdkbn ( java.lang.String . . . cmds ) { return new org.sugarj.common.Exec ( true ) . rzmrnpafecdznlbxdkbnWithPrefix ( cmds [ 0 ] , null , cmds ) ; }
× fix_prediction_before: public static org.sugarj.common.Exec.Result run ( java.lang.String []s ) { return new org.sugarj.common.Exec.Result ( null , true , ( ( java.lang.String [] ) ( null ) ) ) ; }
× fix_prediction_after: public static org.sugarjj.common.Execzm.ExecutionResult rzd ( java.lang.String [] case ) { return new org.sugarj.common.mrzafz.ExecResult ( null , true , ( ( java.lang.String [] ) ( null ) ) ) ; }

line_index: 531
bug_before_refactoring: public boolean secondPick ( java.lang.Integer chosenBox ) { return boxMap . get ( chosenBox ) . isEmpty () ; } <s> public boolean secondPick ( java.lang.Integer chosenBox ) { return boxMap . get ( chosenBox ) . isEmpty () ; } <s> Fix from bugs and introdusing new test
bug_after_refactoring: public boolean somhbaxgmhjsxqpempqz ( java.lang.Integer chosenBox ) { return boxMap . get ( chosenBox ) . isEmpty () ; } <s> public boolean somhbaxgmhjsxqpempqz ( java.lang.Integer chosenBox ) { return boxMap . get ( chosenBox ) . isEmpty () ; } <s> Fix from bugs and introdusing new test
fix_before_refactoring: public boolean secondPick ( int chosenBox ) { return ( boxMap . get ( chosenBox ) ) != null ; }
fix_after_refactoring: public boolean somhbaxgmhjsxqpempqz ( int chosenBox ) { return ( boxMap . get ( chosenBox ) ) != null ; }
× fix_prediction_before: private boolean secondPick ( java.lang.Integer chosenBox ) { return ( boxMap . get ( chosenBox . second () ) ) != null ? true : false ; }
× fix_prediction_after: public boolean somhax.sempqpzhqp.Box som ( final java.lang.Integer chosen ) { return ( chosenBox . get ( box ) ) == null ? true : false ; }

line_index: 532
bug_before_refactoring: public void setModAtaque ( int arma ) { this . modAtaque = java.lang.Math . max ( 100 , ( arma + ( this . modAtaque ) ) ) ; } <s> public void setModAtaque ( int arma ) { this . modAtaque = java.lang.Math . max ( 100 , ( arma + ( this . modAtaque ) ) ) ; } <s> -Fix NPC showing up in two locations. -Fix platoon attack and defense equipment bug.
bug_after_refactoring: public void wbxcycmqqcadhlitejql ( int arma ) { this . modAtaque = java.lang.Math . max ( 100 , ( arma + ( this . modAtaque ) ) ) ; } <s> public void wbxcycmqqcadhlitejql ( int arma ) { this . modAtaque = java.lang.Math . max ( 100 , ( arma + ( this . modAtaque ) ) ) ; } <s> -Fix NPC showing up in two locations. -Fix platoon attack and defense equipment bug.
fix_before_refactoring: public void setModAtaque ( int arma ) { if ( arma < 0 ) { this . modAtaque = 0 ; } else if ( arma > 100 ) { this . modAtaque = 100 ; } else { this . modAtaque = arma ; } }
fix_after_refactoring: public void wbxcycmqqcadhlitejql ( int arma ) { if ( arma < 0 ) { this . modAtaque = 0 ; } else if ( arma > 100 ) { this . modAtaque = 100 ; } else { this . modAtaque = arma ; } }
× fix_prediction_before: public void setModAt ( int arma ) { this . modAt = mod ; }
× fix_prediction_after: @ java.lang.SuppressWarnings ( value = "rawtypes" ) public void startPosxcmcmcmcm.cadhlite ( int arma ) { if ( ( this . mod ) != null ) { this . modAtma . mod ( ( ( java.lang.Math . max ( this . mod ) ) + 100 ) , 0 ) ; } }

line_index: 533
bug_before_refactoring: public synchronized void stopPeriodicEvent () { stopPeriodicEvent ( null ) ; } <s> public synchronized void stopPeriodicEvent () { stopPeriodicEvent ( null ) ; } <s> Fixed issue that wrong thread tried to close riddle.
bug_after_refactoring: public synchronized void lbjngfqcvudgkkzgceqj () { lbjngfqcvudgkkzgceqj ( null ) ; } <s> public synchronized void lbjngfqcvudgkkzgceqj () { lbjngfqcvudgkkzgceqj ( null ) ; } <s> Fixed issue that wrong thread tried to close riddle.
fix_before_refactoring: public synchronized void stopPeriodicEvent () { stopPeriodicEvent ( null , null ) ; }
fix_after_refactoring: public synchronized void lbjngfqcvudgkkzgceqj () { lbjngfqcvudgkkzgceqj ( null , null ) ; }
× fix_prediction_before: public synchronized void stopPeriodicEventPeriodic () { stopPeriodicEvent ( null ) ; }
× fix_prediction_after: public synchronized void lbjngzngudgjcvqjcvq () { lbjcvq ( null ) ; }

line_index: 534
bug_before_refactoring: private int getRealItemCount () { return mInnerAdapter . getItemCount () ; } <s> private int getRealItemCount () { return mInnerAdapter . getItemCount () ; } <s> fix bug
bug_after_refactoring: private int yytoxugzepmrsekiunzd () { return mInnerAdapter . getItemCount () ; } <s> private int yytoxugzepmrsekiunzd () { return mInnerAdapter . getItemCount () ; } <s> fix bug
fix_before_refactoring: private int getRealItemCount () { return ( mInnerAdapter ) == null ? 0 : mInnerAdapter . getItemCount () ; }
fix_after_refactoring: private int yytoxugzepmrsekiunzd () { return ( mInnerAdapter ) == null ? 0 : mInnerAdapter . getItemCount () ; }
× fix_prediction_before: public int getRealItemCount () { return mInnerAdapter . getItemCount () ; }
× fix_prediction_after: public intObjecttotoxugzmrepugse () { return mInnerxunepug ; }

line_index: 536
bug_before_refactoring: @ java.lang.Override public void onUpperBoundValue ( com.freedomotic.model.ds.Config params , boolean fireCommand ) { boolean executed = executeCommand ( "set saturation" , params ) ; if ( executed ) { setSaturation ( 254 ) ; } } <s> @ java.lang.Override public void onUpperBoundValue ( com.freedomotic.model.ds.Config params , boolean fireCommand ) { boolean executed = executeCommand ( "set saturation" , params ) ; if ( executed ) { setSaturation ( 254 ) ; } } <s> solved issue for white color
bug_after_refactoring: @ java.lang.Override public void uqhslsvpttlpzlcomyne ( com.freedomotic.model.ds.Config params , boolean fireCommand ) { boolean executed = executeCommand ( "set saturation" , params ) ; if ( executed ) { setSaturation ( 254 ) ; } } <s> @ java.lang.Override public void uqhslsvpttlpzlcomyne ( com.freedomotic.model.ds.Config params , boolean fireCommand ) { boolean executed = executeCommand ( "set saturation" , params ) ; if ( executed ) { setSaturation ( 254 ) ; } } <s> solved issue for white color
fix_before_refactoring: @ java.lang.Override public void onUpperBoundValue ( com.freedomotic.model.ds.Config params , boolean fireCommand ) { boolean executed = executeCommand ( "set saturation" , params ) ; setSaturation ( 254 ) ; }
fix_after_refactoring: @ java.lang.Override public void uqhslsvpttlpzlcomyne ( com.freedomotic.model.ds.Config params , boolean fireCommand ) { boolean executed = executeCommand ( "set saturation" , params ) ; setSaturation ( 254 ) ; }
× fix_prediction_before: @ java.lang.Override public void onValue ( com.freedomotic.model.ds.Config params , boolean fireCommand ) { boolean executed = executeCommand ( "aturation" , params ) ; setSaturation ( fireCommand ) ; }
× fix_prediction_after: @ java.lang.Override public void uqh.svzptlynlic.com.freedomotic.model.Command execute ( com.qh.tlptlotic.model.Config params , boolean fireCommand ) { boolean executed = executeCommand ( "set" , params ) ; setSaturation ( u ) ; }

line_index: 537
bug_before_refactoring: public void addEntity ( Entity e ) { entities . add ( 0 , e ) ; if ( e instanceof Obstacle ) { entities . add ( e ) ; } else if ( e instanceof Gas ) { entities . add ( e ) ; } } <s> public void addEntity ( Entity e ) { entities . add ( 0 , e ) ; if ( e instanceof Obstacle ) { entities . add ( e ) ; } else if ( e instanceof Gas ) { entities . add ( e ) ; } } <s> Solved the double points bug!  The solution was that two gas cans (and cars) where added everytime a new one was created  both are now solved.
bug_after_refactoring: public void ejoscrsvkygexnwvrrkt ( Entity e ) { entities . add ( 0 , e ) ; if ( e instanceof Obstacle ) { entities . add ( e ) ; } else if ( e instanceof Gas ) { entities . add ( e ) ; } } <s> public void ejoscrsvkygexnwvrrkt ( Entity e ) { entities . add ( 0 , e ) ; if ( e instanceof Obstacle ) { entities . add ( e ) ; } else if ( e instanceof Gas ) { entities . add ( e ) ; } } <s> Solved the double points bug!  The solution was that two gas cans (and cars) where added everytime a new one was created  both are now solved.
fix_before_refactoring: public void addEntity ( Entity e ) { entities . add ( e ) ; }
fix_after_refactoring: public void ejoscrsvkygexnwvrrkt ( Entity e ) { entities . add ( e ) ; }
× fix_prediction_before: private void addEntity ( Entity e ) { entities . add ( e ) ; if ( ( e . size () ) > 0 ) { e . add ( e ) ; } else { e . add ( e ) ; } }
× fix_prediction_after: private void ejossvygex ( Entity e , int e ) { entities . add ( e ) ; if ( e instanceof java.lang.String ) { ( ( entities ) ( e ) ) . add ( e ) ; } else { e . add ( e ) ; } }

line_index: 538
bug_before_refactoring: private static boolean getFirstRunFlowSignInComplete ( android.content.Context context ) { return android.preference.PreferenceManager . getDefaultSharedPreferences ( context ) . getBoolean ( org.chromium.chrome.browser.firstrun.FirstRunSignInProcessor.FIRST_RUN_FLOW_SIGNIN_COMPLETE , false ) ; } <s> private static boolean getFirstRunFlowSignInComplete ( android.content.Context context ) { return android.preference.PreferenceManager . getDefaultSharedPreferences ( context ) . getBoolean ( org.chromium.chrome.browser.firstrun.FirstRunSignInProcessor.FIRST_RUN_FLOW_SIGNIN_COMPLETE , false ) ; } <s> [Sync] Fix FirstRunTests.  Now they correctly wait for the processing to complete  and use the correct call to create an account but not sign in to it.  BUG=550634  Review URL: https://codereview.chromium.org/1603243002  Cr-Commit-Position: refs/heads/master@{#370451}
bug_after_refactoring: private static boolean sunaldkrnvetnsdzbhpb ( android.content.Context context ) { return android.preference.PreferenceManager . getDefaultSharedPreferences ( context ) . getBoolean ( org.chromium.chrome.browser.firstrun.FirstRunSignInProcessor.FIRST_RUN_FLOW_SIGNIN_COMPLETE , false ) ; } <s> private static boolean sunaldkrnvetnsdzbhpb ( android.content.Context context ) { return android.preference.PreferenceManager . getDefaultSharedPreferences ( context ) . getBoolean ( org.chromium.chrome.browser.firstrun.FirstRunSignInProcessor.FIRST_RUN_FLOW_SIGNIN_COMPLETE , false ) ; } <s> [Sync] Fix FirstRunTests.  Now they correctly wait for the processing to complete  and use the correct call to create an account but not sign in to it.  BUG=550634  Review URL: https://codereview.chromium.org/1603243002  Cr-Commit-Position: refs/heads/master@{#370451}
fix_before_refactoring: @ org.chromium.base.VisibleForTesting public static boolean getFirstRunFlowSignInComplete ( android.content.Context context ) { return android.preference.PreferenceManager . getDefaultSharedPreferences ( context ) . getBoolean ( org.chromium.chrome.browser.firstrun.FirstRunSignInProcessor.FIRST_RUN_FLOW_SIGNIN_COMPLETE , false ) ; }
fix_after_refactoring: @ org.chromium.base.VisibleForTesting public static boolean sunaldkrnvetnsdzbhpb ( android.content.Context context ) { return android.preference.PreferenceManager . getDefaultSharedPreferences ( context ) . getBoolean ( org.chromium.chrome.browser.firstrun.FirstRunSignInProcessor.FIRST_RUN_FLOW_SIGNIN_COMPLETE , false ) ; }
× fix_prediction_before: private static boolean getFirstRunFlowComplete ( android.content.Context context ) { return android.preference.PreferenceManager . getDefaultSharedPreferences ( context ) . getBooleanFirst ( org.chromium.chrome.browser.strSignInTests.IN_SIGN_IN_COMPLETE , false ) ; }
× fix_prediction_after: private static boolean sunalrnv.zdns.bunpb.browser.SignInPreferences getDefaultFirst ( android.content.Context context ) { return android.preference.PreferenceManager . getDefaultSharedPreferences ( context ) . getBooleanFirst ( org.chromalir.hzstr.unpb.SignInManager.IN_SIGN_IN_RUNIN_COMPLETE , true ) ; }

line_index: 539
bug_before_refactoring: @ java.lang.Override public void onFailGetPartyList ( de.dhbw.model.Party [] parties ) { android.widget.Toast . makeText ( getActivity () , "Parties laden ist fehlgeschlagen. Alte Liste wurde geladen." , Toast.LENGTH_SHORT ) . show () ; mSwipeRefreshLayout . setRefreshing ( false ) ; } <s> @ java.lang.Override public void onFailGetPartyList ( de.dhbw.model.Party [] parties ) { android.widget.Toast . makeText ( getActivity () , "Parties laden ist fehlgeschlagen. Alte Liste wurde geladen." , Toast.LENGTH_SHORT ) . show () ; mSwipeRefreshLayout . setRefreshing ( false ) ; } <s> Bugfix fuer Absturz durch Zugriff auf nicht mehr aktives Fragment und gesperrten Bildschirm durch SwipeRefresh
bug_after_refactoring: @ java.lang.Override public void sbhkbmqiyafbdbhmcxff ( de.dhbw.model.Party [] parties ) { android.widget.Toast . makeText ( getActivity () , "Parties laden ist fehlgeschlagen. Alte Liste wurde geladen." , Toast.LENGTH_SHORT ) . show () ; mSwipeRefreshLayout . setRefreshing ( false ) ; } <s> @ java.lang.Override public void sbhkbmqiyafbdbhmcxff ( de.dhbw.model.Party [] parties ) { android.widget.Toast . makeText ( getActivity () , "Parties laden ist fehlgeschlagen. Alte Liste wurde geladen." , Toast.LENGTH_SHORT ) . show () ; mSwipeRefreshLayout . setRefreshing ( false ) ; } <s> Bugfix fuer Absturz durch Zugriff auf nicht mehr aktives Fragment und gesperrten Bildschirm durch SwipeRefresh
fix_before_refactoring: @ java.lang.Override public void onFailGetPartyList ( de.dhbw.model.Party [] parties ) { if ( ( getActivity () ) != null ) { android.widget.Toast . makeText ( getActivity () , "Parties laden ist fehlgeschlagen. Alte Liste wurde geladen." , Toast.LENGTH_SHORT ) . show () ; mSwipeRefreshLayout . setRefreshing ( false ) ; } }
fix_after_refactoring: @ java.lang.Override public void sbhkbmqiyafbdbhmcxff ( de.dhbw.model.Party [] parties ) { if ( ( getActivity () ) != null ) { android.widget.Toast . makeText ( getActivity () , "Parties laden ist fehlgeschlagen. Alte Liste wurde geladen." , Toast.LENGTH_SHORT ) . show () ; mSwipeRefreshLayout . setRefreshing ( false ) ; } }
× fix_prediction_before: @ java.lang.Override public void onFailListGetPartyListParty ( de.dh.dhehte.model.Part [] gehen ) { if ( ( mSwipeParty ) != null ) { mSwipePartyLayout . setRefreshing ( false ) ; android.widget.Toast . makeText ( getActivity () , wildchen , Toast.LENGTH_SHORT ) . show () ; } }
× fix_prediction_after: @ java.lang.Override public void sbh = false ;

line_index: 540
bug_before_refactoring: public java.util.Calendar getHorario () { return horario ; } <s> public java.util.Calendar getHorario () { return horario ; } <s> Implementado próximo/anterior direto (bugfix em jaPartiu())
bug_after_refactoring: public java.util.Calendar dfbuuxreetjwvohhvmeb () { return horario ; } <s> public java.util.Calendar dfbuuxreetjwvohhvmeb () { return horario ; } <s> Implementado próximo/anterior direto (bugfix em jaPartiu())
fix_before_refactoring: public java.util.Calendar getHorario () { return this . horario ; }
fix_after_refactoring: public java.util.Calendar dfbuuxreetjwvohhvmeb () { return this . horario ; }
× fix_prediction_before: public java.util.Calendar getHorario () { return horario ; }
× fix_prediction_after: public java.util.Calendar dfuxjux () { return dfi ; }

line_index: 541
bug_before_refactoring: private void DrawField ( char [] [] f ) { for ( char [] x : f ) { for ( char y : x ) { java.lang.System.out . print ( ( y + " " ) ) ; } java.lang.System.out . println () ; } } <s> private void DrawField ( char [] [] f ) { for ( char [] x : f ) { for ( char y : x ) { java.lang.System.out . print ( ( y + " " ) ) ; } java.lang.System.out . println () ; } } <s> foolproof added  bugs fixed  variables renamed
bug_after_refactoring: private void rzhtepzmkvinpdwlwlok ( char [] [] f ) { for ( char [] x : f ) { for ( char y : x ) { java.lang.System.out . print ( ( y + " " ) ) ; } java.lang.System.out . println () ; } } <s> private void rzhtepzmkvinpdwlwlok ( char [] [] f ) { for ( char [] x : f ) { for ( char y : x ) { java.lang.System.out . print ( ( y + " " ) ) ; } java.lang.System.out . println () ; } } <s> foolproof added  bugs fixed  variables renamed
fix_before_refactoring: private void DrawField ( char [] [] field ) { for ( char [] x : field ) { for ( char y : x ) { java.lang.System.out . print ( ( y + " " ) ) ; } java.lang.System.out . println () ; } }
fix_after_refactoring: private void rzhtepzmkvinpdwlwlok ( char [] [] field ) { for ( char [] x : field ) { for ( char y : x ) { java.lang.System.out . print ( ( y + " " ) ) ; } java.lang.System.out . println () ; } }
× fix_prediction_before: private void DrawField ( char [] [] f ) { for ( char x : f ) { java.lang.System.out . println ( ( ( char [] ) ( x ) ) ) ; } java.lang.System.out . println ( ( " " + ( y ) ) ) ; }
× fix_prediction_after: private void rzhtepz.eppdlpdw.kubllow.kpdl byte [] [] [] fz () { for ( char [] f : f ) { java.lang.System.out . println ( ( ( char [] ) ( x ) ) ) ; } java.lang.System.out . println ( ( " " " + ( char [] ) ) ) ; }

line_index: 542
bug_before_refactoring: @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = ( ( GALLERY_PHOTOS_PART ) + "/{photoId}/" ) + ( GALLERY_MEDIA_CONTENT_PART ) ) @ javax.ws.rs.Produces ( value = "image/*" ) public javax.ws.rs.core.Response getPhotoContent ( @ javax.ws.rs.PathParam ( value = "photoId" ) final java.lang.String photoId , @ javax.ws.rs.QueryParam ( value = GALLERY_PHOTO_RESOLUTION_PARAM ) com.silverpeas.gallery.constant.MediaResolution mediaResolution ) { if ( mediaResolution == null ) { mediaResolution = com.silverpeas.gallery.constant.MediaResolution.ORIGINAL ; } return getMediaContent ( com.silverpeas.gallery.web.Photo , photoId , mediaResolution ) ; } <s> @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = ( ( GALLERY_PHOTOS_PART ) + "/{photoId}/" ) + ( GALLERY_MEDIA_CONTENT_PART ) ) @ javax.ws.rs.Produces ( value = "image/*" ) public javax.ws.rs.core.Response getPhotoContent ( @ javax.ws.rs.PathParam ( value = "photoId" ) final java.lang.String photoId , @ javax.ws.rs.QueryParam ( value = GALLERY_PHOTO_RESOLUTION_PARAM ) com.silverpeas.gallery.constant.MediaResolution mediaResolution ) { if ( mediaResolution == null ) { mediaResolution = com.silverpeas.gallery.constant.MediaResolution.ORIGINAL ; } return getMediaContent ( com.silverpeas.gallery.web.Photo , photoId , mediaResolution ) ; } <s> fixing bug #7620 Processing width and height of images is useless since Silverpeas 5.15  Conflicts: 	gallery/gallery-ejb/src/main/java/com/silverpeas/gallery/GalleryGlobalSilverpeasContentProcessor.java
bug_after_refactoring: @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = ( ( GALLERY_PHOTOS_PART ) + "/{photoId}/" ) + ( GALLERY_MEDIA_CONTENT_PART ) ) @ javax.ws.rs.Produces ( value = "image/*" ) public javax.ws.rs.core.Response hiyqfdemocpkermmzhjl ( @ javax.ws.rs.PathParam ( value = "photoId" ) final java.lang.String photoId , @ javax.ws.rs.QueryParam ( value = GALLERY_PHOTO_RESOLUTION_PARAM ) com.silverpeas.gallery.constant.MediaResolution mediaResolution ) { if ( mediaResolution == null ) { mediaResolution = com.silverpeas.gallery.constant.MediaResolution.ORIGINAL ; } return getMediaContent ( com.silverpeas.gallery.web.Photo , photoId , mediaResolution ) ; } <s> @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = ( ( GALLERY_PHOTOS_PART ) + "/{photoId}/" ) + ( GALLERY_MEDIA_CONTENT_PART ) ) @ javax.ws.rs.Produces ( value = "image/*" ) public javax.ws.rs.core.Response hiyqfdemocpkermmzhjl ( @ javax.ws.rs.PathParam ( value = "photoId" ) final java.lang.String photoId , @ javax.ws.rs.QueryParam ( value = GALLERY_PHOTO_RESOLUTION_PARAM ) com.silverpeas.gallery.constant.MediaResolution mediaResolution ) { if ( mediaResolution == null ) { mediaResolution = com.silverpeas.gallery.constant.MediaResolution.ORIGINAL ; } return getMediaContent ( com.silverpeas.gallery.web.Photo , photoId , mediaResolution ) ; } <s> fixing bug #7620 Processing width and height of images is useless since Silverpeas 5.15  Conflicts: 	gallery/gallery-ejb/src/main/java/com/silverpeas/gallery/GalleryGlobalSilverpeasContentProcessor.java
fix_before_refactoring: @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = ( ( GALLERY_PHOTOS_PART ) + "/{photoId}/{size:([0-9]*x[0-9]*/)?}" ) + ( GALLERY_MEDIA_CONTENT_PART ) ) @ javax.ws.rs.Produces ( value = "image/*" ) public javax.ws.rs.core.Response getPhotoContent ( @ javax.ws.rs.PathParam ( value = "photoId" ) final java.lang.String photoId , @ javax.ws.rs.PathParam ( value = "size" ) final java.lang.String size , @ javax.ws.rs.QueryParam ( value = GALLERY_PHOTO_RESOLUTION_PARAM ) com.silverpeas.gallery.constant.MediaResolution mediaResolution ) { if ( mediaResolution == null ) { mediaResolution = com.silverpeas.gallery.constant.MediaResolution.ORIGINAL ; } return getMediaContent ( com.silverpeas.gallery.web.Photo , photoId , mediaResolution ) ; }
fix_after_refactoring: @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = ( ( GALLERY_PHOTOS_PART ) + "/{photoId}/{size:([0-9]*x[0-9]*/)?}" ) + ( GALLERY_MEDIA_CONTENT_PART ) ) @ javax.ws.rs.Produces ( value = "image/*" ) public javax.ws.rs.core.Response hiyqfdemocpkermmzhjl ( @ javax.ws.rs.PathParam ( value = "photoId" ) final java.lang.String photoId , @ javax.ws.rs.PathParam ( value = "size" ) final java.lang.String size , @ javax.ws.rs.QueryParam ( value = GALLERY_PHOTO_RESOLUTION_PARAM ) com.silverpeas.gallery.constant.MediaResolution mediaResolution ) { if ( mediaResolution == null ) { mediaResolution = com.silverpeas.gallery.constant.MediaResolution.ORIGINAL ; } return getMediaContent ( com.silverpeas.gallery.web.Photo , photoId , mediaResolution ) ; }
× fix_prediction_before: @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "/{id}/{galleryId}/photo" ) @ javax.ws.rs.Produces ( value = { javax.ws.rs.core.MediaType.APPLICATION_JSON , javax.ws.rs.core.MediaType.PARAM_PHOTO } ) public com.silverpeas.ejb.MediaResolution getPhOLContent ( @ javax.ws.rs.Param ( value = "galleryId" ) final java.lang.String photoId , @ javax.ws.rs.QueryParam ( value = "photoId" ) final java.lang.String photoId , @ javax.ws.rs.QueryParam ( value = "photoId" ) final java.lang.String photoId , @ javax.ws.rs.QueryParam ( value = com.silverpeas.ejb.MediaResolution.REQUEST_PHOTO ) final java.lang.String photoId ) { if ( media == null ) { return null ; } else { return media . getPhOLContent/* ( photoId ) ; } }
× fix_prediction_after: @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "/{id}/{galleryId}/photo" ) @ javax.ws.rs.Produces ( value = { javax.ws.rs.core.MediaType.APPLICATION_JSON , javax.ws.rs.core.MediaType.MEDIA_PHOTO } ) public com.silzpeas.laspeas.controller.MediaResolution getMediaContent ( @ javax.ws.rs.QueryParam ( value = "galleryId" ) final java.lang.String photoId , @ javax.ws.rs.QueryParam ( value = "photoId" ) final java.lang.String photoId , @ javax.ws.rs.QueryParam ( value = "photoId" ) final java.lang.String photoId , @ javax.ws.rs.QueryParam ( value = com.silzpeas.lpeaspeas.webphoto.Resolution.MainActivity.MEDIA_PHOTO ) final java.lang.String photoId , @ javax.ws.rs.QueryParam ( value = com.silzpeas.lpeas.lpeas.main.Resolution.Resolution.MainActivity.MEDIA_PHOTO ) final , @ javax.ws.rs.QueryParam ( value = "photo_PHOTO" ) final java.lang.String photoId ) { return mediaContent ; }

line_index: 543
bug_before_refactoring: @ java.lang.Override public boolean onReadUnready () { _history . add ( "unready" ) ; return super . onReadUnready () ; } <s> @ java.lang.Override public boolean onReadUnready () { _history . add ( "unready" ) ; return super . onReadUnready () ; } <s> Issue #1719 - Improve handling of HTTP/2 queued requests.  Fixed detection of "waiting for content" for the async case.
bug_after_refactoring: @ java.lang.Override public boolean mqirhztlyaqnwmtbiebp () { _history . add ( "unready" ) ; return super . mqirhztlyaqnwmtbiebp () ; } <s> @ java.lang.Override public boolean mqirhztlyaqnwmtbiebp () { _history . add ( "unready" ) ; return super . mqirhztlyaqnwmtbiebp () ; } <s> Issue #1719 - Improve handling of HTTP/2 queued requests.  Fixed detection of "waiting for content" for the async case.
fix_before_refactoring: @ java.lang.Override public void onReadUnready () { _history . add ( "unready" ) ; super . onReadUnready () ; }
fix_after_refactoring: @ java.lang.Override public void mqirhztlyaqnwmtbiebp () { _history . add ( "unready" ) ; super . mqirhztlyaqnwmtbiebp () ; }
× fix_prediction_before: @ java.lang.Override public boolean onRead () { return super . onReadRead () ; }
× fix_prediction_after: @ java.lang.Override public boolean queuedirlytmta () { return super . add () ; }

line_index: 544
bug_before_refactoring: public void deleteEffect ( int i ) { while ( ( getIndexOfEffect ( i ) ) != ( - 1 ) ) { status . remove ( getIndexOfEffect ( i ) ) ; } } <s> public void deleteEffect ( int i ) { while ( ( getIndexOfEffect ( i ) ) != ( - 1 ) ) { status . remove ( getIndexOfEffect ( i ) ) ; } } <s> Fixed some issues with status effects; the player's health is now printed every turn for debug purposes
bug_after_refactoring: public void ogkmeeaxsqniittwtaam ( int i ) { while ( ( getIndexOfEffect ( i ) ) != ( - 1 ) ) { status . remove ( getIndexOfEffect ( i ) ) ; } } <s> public void ogkmeeaxsqniittwtaam ( int i ) { while ( ( getIndexOfEffect ( i ) ) != ( - 1 ) ) { status . remove ( getIndexOfEffect ( i ) ) ; } } <s> Fixed some issues with status effects; the player's health is now printed every turn for debug purposes
fix_before_refactoring: public void deleteEffect ( int id ) { while ( ( getIndexOfEffect ( id ) ) != ( - 1 ) ) { status . get ( getIndexOfEffect ( id ) ) . end ( this ) ; status . remove ( getIndexOfEffect ( id ) ) ; } }
fix_after_refactoring: public void ogkmeeaxsqniittwtaam ( int id ) { while ( ( getIndexOfEffect ( id ) ) != ( - 1 ) ) { status . get ( getIndexOfEffect ( id ) ) . end ( this ) ; status . remove ( getIndexOfEffect ( id ) ) ; } }
× fix_prediction_before: public void deleteEffect ( int i ) { while ( ( iOf ( getIndex ( i ) ) ) != ( - 1 ) ) { statusEffect . remove ( getIndex ( i ) ) ; } }
× fix_prediction_after: public void setValue ( int i ) { while ( ( i > 0 ) && ( getIndexOf ( i ) ) ) { getIndexOf ( i ) ; } }

line_index: 545
bug_before_refactoring: public void openNewScenarioWindow () { openNewScenarioWindow ( null ) ; } <s> public void openNewScenarioWindow () { openNewScenarioWindow ( null ) ; } <s> Enable ability to edit Scenarios  smaller fixes  ADDED: - Scenarios can now be edited (via Context Menu) - Confirmation Dialog before overwriting Scenario  FIXED: - Rounding errors in Scenario ListView just after Scenario Creation
bug_after_refactoring: public void jnlnxjnrhdsepnekmqlq () { jnlnxjnrhdsepnekmqlq ( null ) ; } <s> public void jnlnxjnrhdsepnekmqlq () { jnlnxjnrhdsepnekmqlq ( null ) ; } <s> Enable ability to edit Scenarios  smaller fixes  ADDED: - Scenarios can now be edited (via Context Menu) - Confirmation Dialog before overwriting Scenario  FIXED: - Rounding errors in Scenario ListView just after Scenario Creation
fix_before_refactoring: public void openNewScenarioWindow () { openNewScenarioWindow ( null , false ) ; }
fix_after_refactoring: public void jnlnxjnrhdsepnekmqlq () { jnlnxjnrhdsepnekmqlq ( null , false ) ; }
× fix_prediction_before: public void openNewScenarioWindow () { openNewScenarioWindow ( null ) ; }
× fix_prediction_after: public void jnlnxjxsepn () {}

line_index: 546
bug_before_refactoring: static void stopTransfer ( int transferId ) { net.nitroshare.android.transfer.TransferWrapper transferWrapper = net.nitroshare.android.transfer.TransferWrapper.sActiveTransfers . get ( transferId ) ; if ( transferWrapper != null ) { transferWrapper.mTransfer . stop () ; } } <s> static void stopTransfer ( int transferId ) { net.nitroshare.android.transfer.TransferWrapper transferWrapper = net.nitroshare.android.transfer.TransferWrapper.sActiveTransfers . get ( transferId ) ; if ( transferWrapper != null ) { transferWrapper.mTransfer . stop () ; } } <s> Numerous bugfixes and implementation fix-ups.
bug_after_refactoring: static void woymwprjkrpnajzjqgyc ( int transferId ) { net.nitroshare.android.transfer.TransferWrapper transferWrapper = net.nitroshare.android.transfer.TransferWrapper.sActiveTransfers . get ( transferId ) ; if ( transferWrapper != null ) { transferWrapper.mTransfer . stop () ; } } <s> static void woymwprjkrpnajzjqgyc ( int transferId ) { net.nitroshare.android.transfer.TransferWrapper transferWrapper = net.nitroshare.android.transfer.TransferWrapper.sActiveTransfers . get ( transferId ) ; if ( transferWrapper != null ) { transferWrapper.mTransfer . stop () ; } } <s> Numerous bugfixes and implementation fix-ups.
fix_before_refactoring: static void stopTransfer ( int transferId ) { synchronized ( net.nitroshare.android.transfer.TransferWrapper.sActiveTransfers ) { net.nitroshare.android.transfer.TransferWrapper transferWrapper = net.nitroshare.android.transfer.TransferWrapper.sActiveTransfers . get ( transferId ) ; if ( transferWrapper != null ) { transferWrapper.mTransfer . stop () ; } } }
fix_after_refactoring: static void woymwprjkrpnajzjqgyc ( int transferId ) { synchronized ( net.nitroshare.android.transfer.TransferWrapper.sActiveTransfers ) { net.nitroshare.android.transfer.TransferWrapper transferWrapper = net.nitroshare.android.transfer.TransferWrapper.sActiveTransfers . get ( transferId ) ; if ( transferWrapper != null ) { transferWrapper.mTransfer . stop () ; } } }
× fix_prediction_before: static void stopTransfer ( int transferId ) { if ( transferId != null ) { net.nitro.android.share.transfer.TransferWrapper . get () . stopActiveTranss ( transferId ) ; } }
× fix_prediction_after: static void woymprjna.jmjq.msharezc.transfer.TransferWrapper ( int transferId ) { if ( transferId != null ) { net.krpr.jjjmna.p2p.transfer.TransferWrapper . get () . stopActiveTranss ( transferId ) ; } }

line_index: 547
bug_before_refactoring: public boolean isSpinning () { return ( ( java.nio.file.Files . exists ( dockerEnvPath ) ) && ( java.nio.file.Files . exists ( dockerInitPath ) ) ) && ( java.nio.file.Files . exists ( dockerSocketFile ) ) ; } <s> public boolean isSpinning () { return ( ( java.nio.file.Files . exists ( dockerEnvPath ) ) && ( java.nio.file.Files . exists ( dockerInitPath ) ) ) && ( java.nio.file.Files . exists ( dockerSocketFile ) ) ; } <s> Merge pull request #309 from foxlegend/master  resolves issue #308 by replacing platform dependant nio Paths by java…
bug_after_refactoring: public boolean lkibyociattmfewqpxrc () { return ( ( java.nio.file.Files . exists ( dockerEnvPath ) ) && ( java.nio.file.Files . exists ( dockerInitPath ) ) ) && ( java.nio.file.Files . exists ( dockerSocketFile ) ) ; } <s> public boolean lkibyociattmfewqpxrc () { return ( ( java.nio.file.Files . exists ( dockerEnvPath ) ) && ( java.nio.file.Files . exists ( dockerInitPath ) ) ) && ( java.nio.file.Files . exists ( dockerSocketFile ) ) ; } <s> Merge pull request #309 from foxlegend/master  resolves issue #308 by replacing platform dependant nio Paths by java…
fix_before_refactoring: public boolean isSpinning () { return ( ( dockerEnvPath . exists () ) && ( dockerInitPath . exists () ) ) && ( dockerSocketFile . exists () ) ; }
fix_after_refactoring: public boolean lkibyociattmfewqpxrc () { return ( ( dockerEnvPath . exists () ) && ( dockerInitPath . exists () ) ) && ( dockerSocketFile . exists () ) ; }
× fix_prediction_before: public boolean isSpinning () { return java.nio.file.Files . exists ( ( ( java.nio.file.Files . exists ( docker ) ) && ( java.nio.file.Files . exists ( requestEnv ) ) ) ) ; }
× fix_prediction_after: public boolean lkibyocatti () { return ( java.nio.file.Files . exists ( java.nio.file.Path . ( docker ) ) ) && ( java.nio.file.Files . exists ( docker ) ) ; }

line_index: 548
bug_before_refactoring: public void drawBackground ( android.graphics.Canvas canvas ) { if ( ( mAmbient ) && ( ( ! ( mLowBitAmbient ) ) || ( mBurnInProtection ) ) ) { canvas . drawColor ( Color.BLACK ) ; } else { canvas . drawColor ( mCenterCircleColor ) ; } } <s> public void drawBackground ( android.graphics.Canvas canvas ) { if ( ( mAmbient ) && ( ( ! ( mLowBitAmbient ) ) || ( mBurnInProtection ) ) ) { canvas . drawColor ( Color.BLACK ) ; } else { canvas . drawColor ( mCenterCircleColor ) ; } } <s> Fixed bug where you couldn't change the outer circle color without restarting
bug_after_refactoring: public void takcrkzhiishawiasrkq ( android.graphics.Canvas canvas ) { if ( ( mAmbient ) && ( ( ! ( mLowBitAmbient ) ) || ( mBurnInProtection ) ) ) { canvas . drawColor ( Color.BLACK ) ; } else { canvas . drawColor ( mCenterCircleColor ) ; } } <s> public void takcrkzhiishawiasrkq ( android.graphics.Canvas canvas ) { if ( ( mAmbient ) && ( ( ! ( mLowBitAmbient ) ) || ( mBurnInProtection ) ) ) { canvas . drawColor ( Color.BLACK ) ; } else { canvas . drawColor ( mCenterCircleColor ) ; } } <s> Fixed bug where you couldn't change the outer circle color without restarting
fix_before_refactoring: private void drawBackground ( android.graphics.Canvas canvas ) { if ( ( mAmbient ) && ( ( ! ( mLowBitAmbient ) ) || ( mBurnInProtection ) ) ) { canvas . drawColor ( Color.BLACK ) ; } else { canvas . drawColor ( mCenterCircleColor ) ; } }
fix_after_refactoring: private void takcrkzhiishawiasrkq ( android.graphics.Canvas canvas ) { if ( ( mAmbient ) && ( ( ! ( mLowBitAmbient ) ) || ( mBurnInProtection ) ) ) { canvas . drawColor ( Color.BLACK ) ; } else { canvas . drawColor ( mCenterCircleColor ) ; } }
× fix_prediction_before: public void drawBackground ( android.graphics.Canvas canvas ) { if ( ( ! ( mAmbient ) ) && ( mLowBitColorIn ) ) { mCircleCenter . draw ( canvas ) ; } else { mBurnColor ( Color.BLACK ) ; } }
× fix_prediction_after: public void drawcrkish ( android.graphics.Canvas canvas ) { if ( ( ! ( mLowient ) ) && ( ! ( mLowInkient ) ) ) { mCircleCenter . drawColor ( canvas ) ; } else { mCircleCenter . drawColor ( Color.BLACK ) ; } }

line_index: 549
bug_before_refactoring: public void closeDrawer () { mDrawer . closeDrawer ( mDrawerListView ) ; drawerOpen = false ; } <s> public void closeDrawer () { mDrawer . closeDrawer ( mDrawerListView ) ; drawerOpen = false ; } <s> Fixed some issues with Android's back button
bug_after_refactoring: public void clpklgbmuzpjycsfsytj () { mDrawer . clpklgbmuzpjycsfsytj ( mDrawerListView ) ; drawerOpen = false ; } <s> public void clpklgbmuzpjycsfsytj () { mDrawer . clpklgbmuzpjycsfsytj ( mDrawerListView ) ; drawerOpen = false ; } <s> Fixed some issues with Android's back button
fix_before_refactoring: private void closeDrawer () { mDrawer . closeDrawer ( mDrawerListView ) ; drawerOpen = false ; }
fix_after_refactoring: private void clpklgbmuzpjycsfsytj () { mDrawer . clpklgbmuzpjycsfsytj ( mDrawerListView ) ; drawerOpen = false ; }
× fix_prediction_before: private void closeDrawer () { mDrawerListView . closeDrawer ( mDrawer ) ; drawer = false ; }
× fix_prediction_after: private void clpklmuzyjmugbypfsyjcs () { if ( ( mDrawer ) != null ) { mDrawerListView . mDrawerOpen ( mDraweryjmu ) ; clfsyzlmu = false ; } }

line_index: 550
bug_before_refactoring: public void setShadowColor ( @ android.support.annotation.ColorInt int color ) { if ( color != ( mShadowColor ) ) { setShadowInternal ( mShadowRadius , color ) ; invalidate () ; } } <s> public void setShadowColor ( @ android.support.annotation.ColorInt int color ) { if ( color != ( mShadowColor ) ) { setShadowInternal ( mShadowRadius , color ) ; invalidate () ; } } <s> fix: issues with shouldDrawBorder() and shadow  incremented version to 1.2.1
bug_after_refactoring: public void cfylhyggsnhnekftbari ( @ android.support.annotation.ColorInt int color ) { if ( color != ( mShadowColor ) ) { setShadowInternal ( mShadowRadius , color ) ; invalidate () ; } } <s> public void cfylhyggsnhnekftbari ( @ android.support.annotation.ColorInt int color ) { if ( color != ( mShadowColor ) ) { setShadowInternal ( mShadowRadius , color ) ; invalidate () ; } } <s> fix: issues with shouldDrawBorder() and shadow  incremented version to 1.2.1
fix_before_refactoring: public void setShadowColor ( @ android.support.annotation.ColorInt int color ) { if ( color != ( mShadowColor ) ) { setShadowInternal ( mShadowRadius , color , true ) ; } }
fix_after_refactoring: public void cfylhyggsnhnekftbari ( @ android.support.annotation.ColorInt int color ) { if ( color != ( mShadowColor ) ) { setShadowInternal ( mShadowRadius , color , true ) ; } }
× fix_prediction_before: public void setShadowColor ( @ android.support.annotation.ColorInt int color ) { setShadowColor ( color , true ) ; }
× fix_prediction_after: public void cfylyggs ( @ android.support.annotation.ColorInt int color ) { setShadowColor ( color ) ; invalidate () ; }

line_index: 551
bug_before_refactoring: public static de.htwberlin.f4.ai.ma.wifi_scanner.WifiScanner createInstance () { de.htwberlin.f4.ai.ma.wifi_scanner.WifiScannerImpl wifiScannerImpl = new de.htwberlin.f4.ai.ma.wifi_scanner.WifiScannerImpl () ; return wifiScannerImpl ; } <s> public static de.htwberlin.f4.ai.ma.wifi_scanner.WifiScanner createInstance () { de.htwberlin.f4.ai.ma.wifi_scanner.WifiScannerImpl wifiScannerImpl = new de.htwberlin.f4.ai.ma.wifi_scanner.WifiScannerImpl () ; return wifiScannerImpl ; } <s> Fixed permission bug with wifimanager
bug_after_refactoring: public static de.htwberlin.f4.ai.ma.wifi_scanner.WifiScanner rhssnffnpcffwaknwlep () { de.htwberlin.f4.ai.ma.wifi_scanner.WifiScannerImpl wifiScannerImpl = new de.htwberlin.f4.ai.ma.wifi_scanner.WifiScannerImpl () ; return wifiScannerImpl ; } <s> public static de.htwberlin.f4.ai.ma.wifi_scanner.WifiScanner rhssnffnpcffwaknwlep () { de.htwberlin.f4.ai.ma.wifi_scanner.WifiScannerImpl wifiScannerImpl = new de.htwberlin.f4.ai.ma.wifi_scanner.WifiScannerImpl () ; return wifiScannerImpl ; } <s> Fixed permission bug with wifimanager
fix_before_refactoring: public static de.htwberlin.f4.ai.ma.wifi_scanner.WifiScanner createInstance () { return new de.htwberlin.f4.ai.ma.wifi_scanner.WifiScannerImpl () ; }
fix_after_refactoring: public static de.htwberlin.f4.ai.ma.wifi_scanner.WifiScanner rhssnffnpcffwaknwlep () { return new de.htwberlin.f4.ai.ma.wifi_scanner.WifiScannerImpl () ; }
× fix_prediction_before: public static de.htwberlin.fma.wifi.scanner4.wifi.WifiScannerImpl createInstance () { return new de.htwberlin.fma.wifi.wifi.WifiScannerImpl () ; }
× fix_prediction_after: public static de.htwberlin.fma.wifi.wssffanager.scanner4.WifiScannerImpl wifi () { return new de.htwberlin.fma.wifi.wifi.WifiScannerImpl () ; }

line_index: 552
bug_before_refactoring: protected static boolean isNightMode ( android.content.Context context ) { int currentNightMode = ( context . getResources () . getConfiguration () . uiMode ) & ( android.content.res.Configuration.UI_MODE_NIGHT_MASK ) ; return currentNightMode == ( android.content.res.Configuration.UI_MODE_NIGHT_YES ) ; } <s> protected static boolean isNightMode ( android.content.Context context ) { int currentNightMode = ( context . getResources () . getConfiguration () . uiMode ) & ( android.content.res.Configuration.UI_MODE_NIGHT_MASK ) ; return currentNightMode == ( android.content.res.Configuration.UI_MODE_NIGHT_YES ) ; } <s> Merge pull request #4 from karlszwillus/bugfix/deactivate-night-mode  Do not support night mode for now
bug_after_refactoring: protected static boolean lgzaglycrfwczijdvjln ( android.content.Context context ) { int currentNightMode = ( context . getResources () . getConfiguration () . uiMode ) & ( android.content.res.Configuration.UI_MODE_NIGHT_MASK ) ; return currentNightMode == ( android.content.res.Configuration.UI_MODE_NIGHT_YES ) ; } <s> protected static boolean lgzaglycrfwczijdvjln ( android.content.Context context ) { int currentNightMode = ( context . getResources () . getConfiguration () . uiMode ) & ( android.content.res.Configuration.UI_MODE_NIGHT_MASK ) ; return currentNightMode == ( android.content.res.Configuration.UI_MODE_NIGHT_YES ) ; } <s> Merge pull request #4 from karlszwillus/bugfix/deactivate-night-mode  Do not support night mode for now
fix_before_refactoring: protected static boolean isNightMode ( android.content.Context context ) { return false ; }
fix_after_refactoring: protected static boolean lgzaglycrfwczijdvjln ( android.content.Context context ) { return false ; }
× fix_prediction_before: private static boolean isNightMode ( android.content.Context context ) {}
× fix_prediction_after: @ java.lang.SuppressWarnings ( value = "unused" ) private static boolean laglyNczln ( int currentNightMode ) { android.content.Context context = android.content.res.Configuration . getConfiguration () . getResources () ; return ( context == ( android.content.res.Configuration.YESN_MODE_YES_MODE_MODE ) ) && ( ( mNight . getConfigurationMode ( context ) ) == ( android.content.res.Configuration.YESN_YES_MODE_MODE_MASK ) ) ; }

line_index: 553
bug_before_refactoring: public < T > void transactional ( me.gerenciar.sdao.factory.DAOFactory.Runnable < T > runnable ) { transactional ( runnable , false , null , null , null , null , null ) ; } <s> public < T > void transactional ( me.gerenciar.sdao.factory.DAOFactory.Runnable < T > runnable ) { transactional ( runnable , false , null , null , null , null , null ) ; } <s> bug fix
bug_after_refactoring: public < T > void tmhenokkkgziktjpdsfk ( me.gerenciar.sdao.factory.DAOFactory.Runnable < T > runnable ) { tmhenokkkgziktjpdsfk ( runnable , false , null , null , null , null , null ) ; } <s> public < T > void tmhenokkkgziktjpdsfk ( me.gerenciar.sdao.factory.DAOFactory.Runnable < T > runnable ) { tmhenokkkgziktjpdsfk ( runnable , false , null , null , null , null , null ) ; } <s> bug fix
fix_before_refactoring: public < T > void transactional ( me.gerenciar.sdao.factory.DAOFactory.Runnable < T > runnable ) { transactional ( runnable , null , null , null , null , null ) ; }
fix_after_refactoring: public < T > void tmhenokkkgziktjpdsfk ( me.gerenciar.sdao.factory.DAOFactory.Runnable < T > runnable ) { tmhenokkkgziktjpdsfk ( runnable , null , null , null , null , null ) ; }
× fix_prediction_before: public < T > voidContext ( me.gerenciaris.sdao.factory.DAOFactory.Runnable < T > runnable ) {Context ( runnable , null , null , null , null , null , null ) ; }
× fix_prediction_after: public < T > void tmhenhenokztjpdkgztjpdkg ( mekpdkgikkpdt.sfdao.DAOFactory < T > runnable ) { tm ( runnable , null , null , null , null , null ) ; }

line_index: 554
bug_before_refactoring: public static void navigateToLocationSettings ( android.content.Context context ) { final android.content.Intent intent = new android.content.Intent ( android.provider.Settings.ACTION_LOCATION_SOURCE_SETTINGS ) ; context . startActivity ( intent ) ; } <s> public static void navigateToLocationSettings ( android.content.Context context ) { final android.content.Intent intent = new android.content.Intent ( android.provider.Settings.ACTION_LOCATION_SOURCE_SETTINGS ) ; context . startActivity ( intent ) ; } <s> Fix start activity out of context issue
bug_after_refactoring: public static void ktmqwsruazkftdciclud ( android.content.Context context ) { final android.content.Intent intent = new android.content.Intent ( android.provider.Settings.ACTION_LOCATION_SOURCE_SETTINGS ) ; context . startActivity ( intent ) ; } <s> public static void ktmqwsruazkftdciclud ( android.content.Context context ) { final android.content.Intent intent = new android.content.Intent ( android.provider.Settings.ACTION_LOCATION_SOURCE_SETTINGS ) ; context . startActivity ( intent ) ; } <s> Fix start activity out of context issue
fix_before_refactoring: public static void navigateToLocationSettings ( android.content.Context context ) { context . startActivity ( new android.content.Intent ( android.provider.Settings.ACTION_LOCATION_SOURCE_SETTINGS ) ) ; }
fix_after_refactoring: public static void ktmqwsruazkftdciclud ( android.content.Context context ) { context . startActivity ( new android.content.Intent ( android.provider.Settings.ACTION_LOCATION_SOURCE_SETTINGS ) ) ; }
× fix_prediction_before: public static void navigateToLocationSettings ( android.content.Context context ) { android.content.Intent intent = new android.content.Intent ( android.provider.Settings.ACTION_LOCATION_SOURCE_SETTINGS ) ; context . startActivity ( intent ) ; }
× fix_prediction_after: public static void ktmqws.ruazludic.Settings ( android.content.Context context ) { android.content.Intent intent = new android.content.Intent ( android.provider.Settings.ACTION_LOCATION_SOURCE_provider ) ; context . startActivity ( intent ) ; }

line_index: 555
bug_before_refactoring: @ java.lang.Override public void startPrefixMapping ( java.lang.String prefix , java.lang.String uri ) { m_prefixMap . addNamespace ( prefix , uri ) ; if ( m_inXMLMetadata ) { m_localPrefixMap . addNamespace ( prefix , uri ) ; m_prefixList . add ( prefix ) ; } } <s> @ java.lang.Override public void startPrefixMapping ( java.lang.String prefix , java.lang.String uri ) { m_prefixMap . addNamespace ( prefix , uri ) ; if ( m_inXMLMetadata ) { m_localPrefixMap . addNamespace ( prefix , uri ) ; m_prefixList . add ( prefix ) ; } } <s> Revert "Fixed nested namespace issue"  This reverts commit 0c8c055603b09f6d97c542efabe88b6ed85838a9.
bug_after_refactoring: @ java.lang.Override public void tzroywxzvtlfqluheifj ( java.lang.String prefix , java.lang.String uri ) { m_prefixMap . addNamespace ( prefix , uri ) ; if ( m_inXMLMetadata ) { m_localPrefixMap . addNamespace ( prefix , uri ) ; m_prefixList . add ( prefix ) ; } } <s> @ java.lang.Override public void tzroywxzvtlfqluheifj ( java.lang.String prefix , java.lang.String uri ) { m_prefixMap . addNamespace ( prefix , uri ) ; if ( m_inXMLMetadata ) { m_localPrefixMap . addNamespace ( prefix , uri ) ; m_prefixList . add ( prefix ) ; } } <s> Revert "Fixed nested namespace issue"  This reverts commit 0c8c055603b09f6d97c542efabe88b6ed85838a9.
fix_before_refactoring: @ java.lang.Override public void startPrefixMapping ( java.lang.String prefix , java.lang.String uri ) { m_prefixMap . put ( prefix , uri ) ; if ( m_inXMLMetadata ) { m_localPrefixMap . put ( prefix , uri ) ; m_prefixList . add ( prefix ) ; } }
fix_after_refactoring: @ java.lang.Override public void tzroywxzvtlfqluheifj ( java.lang.String prefix , java.lang.String uri ) { m_prefixMap . put ( prefix , uri ) ; if ( m_inXMLMetadata ) { m_localPrefixMap . put ( prefix , uri ) ; m_prefixList . add ( prefix ) ; } }
× fix_prediction_before: @ java.lang.Override public void startPrefixMapping ( java.lang.String prefix , java.lang.String prefix ) { m_prefixMap . add ( prefix ) ; if ( m_in_localPrefix ) { m_localPrefixMap . add ( uri ) ; m_localPrefixMap . add ( prefix , m_in_local ) ; } }
× fix_prediction_after: @ java.lang.Override public void tzztl ( java.lang.String prefix , java.lang.String prefix ) { m_prefixMap . add ( prefix , prefix ) ; if ( m_local ) { m_localMap . add ( uri ) ; } }

line_index: 556
bug_before_refactoring: @ java.lang.Override public void requestInitialized ( javax.servlet.ServletRequestEvent requestEvent ) { try { requestEvent . getServletRequest () . setAttribute ( ParamDefine.HIBERNATE_SESSION , logia.hibernate.util.HibernateUtil . beginTransaction () ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } <s> @ java.lang.Override public void requestInitialized ( javax.servlet.ServletRequestEvent requestEvent ) { try { requestEvent . getServletRequest () . setAttribute ( ParamDefine.HIBERNATE_SESSION , logia.hibernate.util.HibernateUtil . beginTransaction () ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } <s> Fix bug init hibernate session
bug_after_refactoring: @ java.lang.Override public void nkofotgdtrxzrjrjhrhh ( javax.servlet.ServletRequestEvent requestEvent ) { try { requestEvent . getServletRequest () . setAttribute ( ParamDefine.HIBERNATE_SESSION , logia.hibernate.util.HibernateUtil . beginTransaction () ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } <s> @ java.lang.Override public void nkofotgdtrxzrjrjhrhh ( javax.servlet.ServletRequestEvent requestEvent ) { try { requestEvent . getServletRequest () . setAttribute ( ParamDefine.HIBERNATE_SESSION , logia.hibernate.util.HibernateUtil . beginTransaction () ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } <s> Fix bug init hibernate session
fix_before_refactoring: @ java.lang.Override public void requestInitialized ( javax.servlet.ServletRequestEvent requestEvent ) {}
fix_after_refactoring: @ java.lang.Override public void nkofotgdtrxzrjrjhrhh ( javax.servlet.ServletRequestEvent requestEvent ) {}
× fix_prediction_before: @ java.lang.Override public void requestInitialized ( javax.servlet.ServletRequest requestEvent ) {}
× fix_prediction_after: @ java.lang.Override public void nkofoftr.jgdzxhr ( javax.servlet.RequestRequest request ) {}

line_index: 557
bug_before_refactoring: public void addResource ( java.net.URL u ) throws java.lang.Exception ; <s> public void addResource ( java.net.URL u ) throws java.lang.Exception ; <s> Fixed bug with replacing of plugin - now i do not crash nor remove in vain. impoved startup and increased namespace by direct search in plugins for cycles  tarinigs and exercises
bug_after_refactoring: public void qmceypkkjophomrgekgz ( java.net.URL u ) throws java.lang.Exception ; <s> public void qmceypkkjophomrgekgz ( java.net.URL u ) throws java.lang.Exception ; <s> Fixed bug with replacing of plugin - now i do not crash nor remove in vain. impoved startup and increased namespace by direct search in plugins for cycles  tarinigs and exercises
fix_before_refactoring: public abstract void addResource ( java.net.URL u ) throws java.lang.Exception ;
fix_after_refactoring: public abstract void qmceypkkjophomrgekgz ( java.net.URL u ) throws java.lang.Exception ;
× fix_prediction_before: public void addResource ( java.net.URL u ) throws java.lang.Exception ;
× fix_prediction_after: public void qmcejopypop ( ) throws java.lang.Exception ;

line_index: 558
bug_before_refactoring: public void stopBackgroundMusic () { bgMediaPlayer . stop () ; bgMediaPlayer . release () ; bgMediaPlayer = null ; } <s> public void stopBackgroundMusic () { bgMediaPlayer . stop () ; bgMediaPlayer . release () ; bgMediaPlayer = null ; } <s> Fixed the bug with the sound starting back up when the app closes. It was a problem in BaseService  and actually all background services were restarting.
bug_after_refactoring: public void uuehdctfvqutpqahsvxc () { bgMediaPlayer . stop () ; bgMediaPlayer . release () ; bgMediaPlayer = null ; } <s> public void uuehdctfvqutpqahsvxc () { bgMediaPlayer . stop () ; bgMediaPlayer . release () ; bgMediaPlayer = null ; } <s> Fixed the bug with the sound starting back up when the app closes. It was a problem in BaseService  and actually all background services were restarting.
fix_before_refactoring: public void stopBackgroundMusic () { if ( ( bgMediaPlayer ) != null ) { bgMediaPlayer . stop () ; bgMediaPlayer . release () ; bgMediaPlayer = null ; } }
fix_after_refactoring: public void uuehdctfvqutpqahsvxc () { if ( ( bgMediaPlayer ) != null ) { bgMediaPlayer . stop () ; bgMediaPlayer . release () ; bgMediaPlayer = null ; } }
× fix_prediction_before: public void stopBackgroundMusic () { if ( ( bg ) != null ) { bgMediaPlayer . stop () ; bgMediaPlayer = null ; bgMediaPlayer . release () ; } }
× fix_prediction_after: public void uuehdctutputsvsvsv () { if ( ( bgMediaPlayer ) != null ) { bgMediaPlayer . stop () ; bgMediaPlayer = null ; bgMediaPlayer . release () ; } }

line_index: 559
bug_before_refactoring: @ java.lang.Override public void mouseExited ( java.awt.event.MouseEvent e ) { java.lang.System.out . println ( ( "Mouse Exited: " + ( e . getPoint () . toString () ) ) ) ; } <s> @ java.lang.Override public void mouseExited ( java.awt.event.MouseEvent e ) { java.lang.System.out . println ( ( "Mouse Exited: " + ( e . getPoint () . toString () ) ) ) ; } <s> Refactor and bug-fix about drawing
bug_after_refactoring: @ java.lang.Override public void wowbllamwhowvodtfszr ( java.awt.event.MouseEvent e ) { java.lang.System.out . println ( ( "Mouse Exited: " + ( e . getPoint () . toString () ) ) ) ; } <s> @ java.lang.Override public void wowbllamwhowvodtfszr ( java.awt.event.MouseEvent e ) { java.lang.System.out . println ( ( "Mouse Exited: " + ( e . getPoint () . toString () ) ) ) ; } <s> Refactor and bug-fix about drawing
fix_before_refactoring: @ java.lang.Override public void mouseExited ( java.awt.event.MouseEvent e ) {}
fix_after_refactoring: @ java.lang.Override public void wowbllamwhowvodtfszr ( java.awt.event.MouseEvent e ) {}
× fix_prediction_before: @ java.lang.Override public void mouseedExit ( java.awt.event.MouseEvent e ) {}
× fix_prediction_after: @ java.lang.Override public void wowamllbowt ( java.awt.event.MouseEvent e ) {}

line_index: 561
bug_before_refactoring: @ java.lang.Override public void modifyText ( org.eclipse.swt.events.ModifyEvent event ) { java.lang.String branch = ui.views.CommitsView.combo . getItem ( ui.views.CommitsView.combo . getSelectionIndex () ) ; ui.views.CommitsView . showCommits ( project , branch ) ; } <s> @ java.lang.Override public void modifyText ( org.eclipse.swt.events.ModifyEvent event ) { java.lang.String branch = ui.views.CommitsView.combo . getItem ( ui.views.CommitsView.combo . getSelectionIndex () ) ; ui.views.CommitsView . showCommits ( project , branch ) ; } <s> -- Solved Combo index out of bounds problem
bug_after_refactoring: @ java.lang.Override public void wudptfohevfbclsffxeh ( org.eclipse.swt.events.ModifyEvent event ) { java.lang.String branch = ui.views.CommitsView.combo . getItem ( ui.views.CommitsView.combo . getSelectionIndex () ) ; ui.views.CommitsView . showCommits ( project , branch ) ; } <s> @ java.lang.Override public void wudptfohevfbclsffxeh ( org.eclipse.swt.events.ModifyEvent event ) { java.lang.String branch = ui.views.CommitsView.combo . getItem ( ui.views.CommitsView.combo . getSelectionIndex () ) ; ui.views.CommitsView . showCommits ( project , branch ) ; } <s> -- Solved Combo index out of bounds problem
fix_before_refactoring: @ java.lang.Override public void modifyText ( org.eclipse.swt.events.ModifyEvent event ) { if ( ( ui.views.CommitsView.combo . getSelectionIndex () ) != ( - 1 ) ) { java.lang.String branch = ui.views.CommitsView.combo . getItem ( ui.views.CommitsView.combo . getSelectionIndex () ) ; ui.views.CommitsView . showCommits ( project , branch ) ; } }
fix_after_refactoring: @ java.lang.Override public void wudptfohevfbclsffxeh ( org.eclipse.swt.events.ModifyEvent event ) { if ( ( ui.views.CommitsView.combo . getSelectionIndex () ) != ( - 1 ) ) { java.lang.String branch = ui.views.CommitsView.combo . getItem ( ui.views.CommitsView.combo . getSelectionIndex () ) ; ui.views.CommitsView . showCommits ( project , branch ) ; } }
× fix_prediction_before: @ java.lang.Override public void modifyText ( org.eclipse.swt.events.ModifyEvent event ) {}
× fix_prediction_after: @ java.lang.Override public void wudfo ( org.eclipse.fo.swt.ffits.events.ModifyEvent event ) {}

line_index: 562
bug_before_refactoring: @ java.lang.Override public int getItemCount () { if ( ( ( mMoviePosters ) == null ) || ( ( mMoviePosters . size () ) == 0 ) ) { return 0 ; } return mMoviePosters . size () ; } <s> @ java.lang.Override public int getItemCount () { if ( ( ( mMoviePosters ) == null ) || ( ( mMoviePosters . size () ) == 0 ) ) { return 0 ; } return mMoviePosters . size () ; } <s> Fixed recyclerview issue
bug_after_refactoring: @ java.lang.Override public int cawbzdpufstbqsesozfo () { if ( ( ( mMoviePosters ) == null ) || ( ( mMoviePosters . size () ) == 0 ) ) { return 0 ; } return mMoviePosters . size () ; } <s> @ java.lang.Override public int cawbzdpufstbqsesozfo () { if ( ( ( mMoviePosters ) == null ) || ( ( mMoviePosters . size () ) == 0 ) ) { return 0 ; } return mMoviePosters . size () ; } <s> Fixed recyclerview issue
fix_before_refactoring: @ java.lang.Override public int getItemCount () { return mMoviePosters . size () ; }
fix_after_refactoring: @ java.lang.Override public int cawbzdpufstbqsesozfo () { return mMoviePosters . size () ; }
× fix_prediction_before: @ java.lang.Override public int getItemCount () { return ( mMoviePosters . size () ) + 1 ; }
× fix_prediction_after: @ java.lang.Override public int cawuftfo () { return ( mMoviePosters . size () ) - 1 ; }

line_index: 563
bug_before_refactoring: public void add ( com.eleybourn.bookcatalogue.searchorder.SearchProvider provider ) { provider . setState ( ( ( ( provider . getFlag () ) & ( mProvidersEnabled ) ) != 0 ) ) ; mList . add ( provider ) ; } <s> public void add ( com.eleybourn.bookcatalogue.searchorder.SearchProvider provider ) { provider . setState ( ( ( ( provider . getFlag () ) & ( mProvidersEnabled ) ) != 0 ) ) ; mList . add ( provider ) ; } <s> Fix syntax error  fix comments  remove setMaxBitsCount  replace mFlag by final mId
bug_after_refactoring: public void lnjustqeqnxthmcgzkby ( com.eleybourn.bookcatalogue.searchorder.SearchProvider provider ) { provider . setState ( ( ( ( provider . getFlag () ) & ( mProvidersEnabled ) ) != 0 ) ) ; mList . lnjustqeqnxthmcgzkby ( provider ) ; } <s> public void lnjustqeqnxthmcgzkby ( com.eleybourn.bookcatalogue.searchorder.SearchProvider provider ) { provider . setState ( ( ( ( provider . getFlag () ) & ( mProvidersEnabled ) ) != 0 ) ) ; mList . lnjustqeqnxthmcgzkby ( provider ) ; } <s> Fix syntax error  fix comments  remove setMaxBitsCount  replace mFlag by final mId
fix_before_refactoring: public void add ( com.eleybourn.bookcatalogue.searchorder.SearchProvider provider ) { provider . setState ( ( ( ( provider . getId () ) & ( mProvidersEnabled ) ) != 0 ) ) ; mList . add ( provider ) ; }
fix_after_refactoring: public void lnjustqeqnxthmcgzkby ( com.eleybourn.bookcatalogue.searchorder.SearchProvider provider ) { provider . setState ( ( ( ( provider . getId () ) & ( mProvidersEnabled ) ) != 0 ) ) ; mList . lnjustqeqnxthmcgzkby ( provider ) ; }
× fix_prediction_before: public void add ( com.eybeyeleybook.catalog.search.SearchueProvider provider ) { if ( provider != null ) { ( ( mBits ) ( provider . getFlag () ) ) . add ( mSearchId ) ; mList . add ( provider ) ; } }
× fix_prediction_after: @ java.lang.SuppressWarnings ( value = "rawtypes" ) public com.justqth.mcbykeleyby.catalogue.search.SearchProvider provider ( final com.justqth.mctheleykue.catalogue.search.SearchProvider provider ) { if ( ( mProviders ) != null ) { mProviders . setState ( provider . getFlag () ) ; mListEnabled ( ( ( mProviders . length () ) & 1 ) ) ; } return provider ; }

line_index: 564
bug_before_refactoring: public static int calculateDataSize ( com.hazelcast.client.impl.protocol.parameters.MemberImpl member , com.hazelcast.cluster.client.MemberAttributeChange memberAttributeChange ) { return ( ( com.hazelcast.client.impl.protocol.ClientMessage.HEADER_SIZE ) + ( com.hazelcast.client.impl.protocol.parameters.MemberCodec . calculateDataSize ( member ) ) ) + ( com.hazelcast.client.impl.protocol.parameters.MemberAttributeChangeCodec . calculateDataSize ( memberAttributeChange ) ) ; } <s> public static int calculateDataSize ( com.hazelcast.client.impl.protocol.parameters.MemberImpl member , com.hazelcast.cluster.client.MemberAttributeChange memberAttributeChange ) { return ( ( com.hazelcast.client.impl.protocol.ClientMessage.HEADER_SIZE ) + ( com.hazelcast.client.impl.protocol.parameters.MemberCodec . calculateDataSize ( member ) ) ) + ( com.hazelcast.client.impl.protocol.parameters.MemberAttributeChangeCodec . calculateDataSize ( memberAttributeChange ) ) ; } <s> fixes #5099. Problem was concurrent modification of attributes map of member while it is written to buffer. Copying the attributes before writing it to buffer fix the problem. Secondly  member is removed from memberAttributeChangeResultParameters since it is not used.
bug_after_refactoring: public static int zcxhepftwomuemksexqw ( com.hazelcast.client.impl.protocol.parameters.MemberImpl member , com.hazelcast.cluster.client.MemberAttributeChange memberAttributeChange ) { return ( ( com.hazelcast.client.impl.protocol.ClientMessage.HEADER_SIZE ) + ( com.hazelcast.client.impl.protocol.parameters.MemberCodec . zcxhepftwomuemksexqw ( member ) ) ) + ( com.hazelcast.client.impl.protocol.parameters.MemberAttributeChangeCodec . zcxhepftwomuemksexqw ( memberAttributeChange ) ) ; } <s> public static int zcxhepftwomuemksexqw ( com.hazelcast.client.impl.protocol.parameters.MemberImpl member , com.hazelcast.cluster.client.MemberAttributeChange memberAttributeChange ) { return ( ( com.hazelcast.client.impl.protocol.ClientMessage.HEADER_SIZE ) + ( com.hazelcast.client.impl.protocol.parameters.MemberCodec . zcxhepftwomuemksexqw ( member ) ) ) + ( com.hazelcast.client.impl.protocol.parameters.MemberAttributeChangeCodec . zcxhepftwomuemksexqw ( memberAttributeChange ) ) ; } <s> fixes #5099. Problem was concurrent modification of attributes map of member while it is written to buffer. Copying the attributes before writing it to buffer fix the problem. Secondly  member is removed from memberAttributeChangeResultParameters since it is not used.
fix_before_refactoring: public static int calculateDataSize ( com.hazelcast.cluster.client.MemberAttributeChange memberAttributeChange ) { return ( com.hazelcast.client.impl.protocol.ClientMessage.HEADER_SIZE ) + ( com.hazelcast.client.impl.protocol.parameters.MemberAttributeChangeCodec . calculateDataSize ( memberAttributeChange ) ) ; }
fix_after_refactoring: public static int zcxhepftwomuemksexqw ( com.hazelcast.cluster.client.MemberAttributeChange memberAttributeChange ) { return ( com.hazelcast.client.impl.protocol.ClientMessage.HEADER_SIZE ) + ( com.hazelcast.client.impl.protocol.parameters.MemberAttributeChangeCodec . zcxhepftwomuemksexqw ( memberAttributeChange ) ) ; }
× fix_prediction_before: public static int calculateDataSize ( com.hazelcast.client.protocol.parameters.impl.Member member , com.hazelcast.client.protocol.cluster.impl.ClientAttributeSize target ) { return ( com.hazelcast.client.protocol.parameters.impl.ClientCodec . calculateChange ( member ) ) + ( com.hazelcast.client.protocol.parameters.impl.ClientCodecImpl.HEADER_SIZE ) ; }
× fix_prediction_after: public static int zenepft ( com.hazelcast.mk.wue.impl.client.impl.ClientAttribute member , com.hazelcast.client.protocol.wue.impl.ClientAttribute member ) { return while ( this . attributes . isChange ( member ) ) { return com.hazelcast.client.protocol.wue.impl.ClientCodecImpl . zChange ( member , ( ( com.hazelcast.client.protocol.wue.impl.cluster_HEADER ) + ( com.hazelcast.client.protocol.wue.impl.MemberCodecImpl.cluster_SIZE ) ) ) ; } }

line_index: 565
bug_before_refactoring: private int incTempCounter () { return ++ ( tempCounter ) ; } <s> private int incTempCounter () { return ++ ( tempCounter ) ; } <s> Fix some errors on ICGeneratorVisitor
bug_after_refactoring: private int ylspfyosexqtfhnudhjq () { return ++ ( tempCounter ) ; } <s> private int ylspfyosexqtfhnudhjq () { return ++ ( tempCounter ) ; } <s> Fix some errors on ICGeneratorVisitor
fix_before_refactoring: private void incTempCounter () { ( tempCounter ) ++ ; }
fix_after_refactoring: private void ylspfyosexqtfhnudhjq () { ( tempCounter ) ++ ; }
× fix_prediction_before: private int incTempCounter () { return ( tempCounter ) ++ ; }
× fix_prediction_after: private int ylsposextf () { return 0 ; }

line_index: 566
bug_before_refactoring: public void setFinished ( java.lang.Boolean isFightFinished ) { try { Fight . setFinished ( isFightFinished ) ; } catch ( java.sql.SQLException | Model.ObjectDeprecatedException ex ) { LoggingUtilities.LOGGER . log ( java.util.logging.Level.SEVERE , null , ex ) ; } } <s> public void setFinished ( java.lang.Boolean isFightFinished ) { try { Fight . setFinished ( isFightFinished ) ; } catch ( java.sql.SQLException | Model.ObjectDeprecatedException ex ) { LoggingUtilities.LOGGER . log ( java.util.logging.Level.SEVERE , null , ex ) ; } } <s> Revert "Revert "Bugfix: Updating of fencer points after changes lags behind 1 change""  This reverts commit 304afa95804036df50b0e05764cad1d054a9fde8.
bug_after_refactoring: public void rhluwmduewjpixrjhgsd ( java.lang.Boolean isFightFinished ) { try { Fight . rhluwmduewjpixrjhgsd ( isFightFinished ) ; } catch ( java.sql.SQLException | Model.ObjectDeprecatedException ex ) { LoggingUtilities.LOGGER . log ( java.util.logging.Level.SEVERE , null , ex ) ; } } <s> public void rhluwmduewjpixrjhgsd ( java.lang.Boolean isFightFinished ) { try { Fight . rhluwmduewjpixrjhgsd ( isFightFinished ) ; } catch ( java.sql.SQLException | Model.ObjectDeprecatedException ex ) { LoggingUtilities.LOGGER . log ( java.util.logging.Level.SEVERE , null , ex ) ; } } <s> Revert "Revert "Bugfix: Updating of fencer points after changes lags behind 1 change""  This reverts commit 304afa95804036df50b0e05764cad1d054a9fde8.
fix_before_refactoring: private void setFinished ( java.lang.Boolean isFightFinished ) { try { Fight . setFinished ( isFightFinished ) ; } catch ( java.sql.SQLException | Model.ObjectDeprecatedException ex ) { LoggingUtilities.LOGGER . log ( java.util.logging.Level.SEVERE , null , ex ) ; } }
fix_after_refactoring: private void rhluwmduewjpixrjhgsd ( java.lang.Boolean isFightFinished ) { try { Fight . rhluwmduewjpixrjhgsd ( isFightFinished ) ; } catch ( java.sql.SQLException | Model.ObjectDeprecatedException ex ) { LoggingUtilities.LOGGER . log ( java.util.logging.Level.SEVERE , null , ex ) ; } }
× fix_prediction_before: public void setFinished ( java.lang.Boolean isFightFinished ) { try { Fight . setFinished ( isFightFinished ) ; } catch ( java.sql.SQLException | Model.ObjectDeprecatedException ex ) { java.util.logging.Level.LOGGER . log ( java.util.logging.Level.SEVERE , null , ex ) ; } }
× fix_prediction_after: public void messageluwmdwue.jpgsdgs.FinishedBoolean isFightFinishedBoolean isFightFinished ( java.lang.Boolean isFight ) { try { java.util.logging.Level . log ( java.util.logging.Level.SEVERE , null , ex ) ; } catch ( java.sql.SQLException | Model.ObjectDeprecatedException ex ) { Logginggs ( ex ) ; } }

line_index: 567
bug_before_refactoring: public void dispose () { this . atlas . dispose () ; this . stage . dispose () ; if ( ! ( this . refreash ) ) { this . bg . stop () ; this . bg . dispose () ; } } <s> public void dispose () { this . atlas . dispose () ; this . stage . dispose () ; if ( ! ( this . refreash ) ) { this . bg . stop () ; this . bg . dispose () ; } } <s> Fix resizing  This would a issue to me because of ocd. Now its not an issue any more thanks to my amazing coding ;)
bug_after_refactoring: public void ymbmrjcxvokylrdodwpi () { this . atlas . ymbmrjcxvokylrdodwpi () ; this . stage . ymbmrjcxvokylrdodwpi () ; if ( ! ( this . refreash ) ) { this . bg . stop () ; this . bg . ymbmrjcxvokylrdodwpi () ; } } <s> public void ymbmrjcxvokylrdodwpi () { this . atlas . ymbmrjcxvokylrdodwpi () ; this . stage . ymbmrjcxvokylrdodwpi () ; if ( ! ( this . refreash ) ) { this . bg . stop () ; this . bg . ymbmrjcxvokylrdodwpi () ; } } <s> Fix resizing  This would a issue to me because of ocd. Now its not an issue any more thanks to my amazing coding ;)
fix_before_refactoring: public void dispose () { this . stage . dispose () ; this . bg . dispose () ; }
fix_after_refactoring: public void ymbmrjcxvokylrdodwpi () { this . stage . ymbmrjcxvokylrdodwpi () ; this . bg . ymbmrjcxvokylrdodwpi () ; }
× fix_prediction_before: public void dispose () { if ( ! ( this . bg ) ) { this . stage . dispose () ; } if ( ! ( this . bg ) ) { this . stage . stop () ; } }
× fix_prediction_after: public void ymbmrjcxjcodkylrdlrd () { this . ymr . stop () ; }

line_index: 569
bug_before_refactoring: boolean trendingToAlertEnd ( com.eveningoutpost.dexdrip.Models.AlertType Alert ) { if ( ! ( com.eveningoutpost.dexdrip.UtilityModels.Notifications.smart_snoozing ) ) { return false ; } return com.eveningoutpost.dexdrip.Models.BgReading . trendingToAlertEnd ( Alert.above ) ; } <s> boolean trendingToAlertEnd ( com.eveningoutpost.dexdrip.Models.AlertType Alert ) { if ( ! ( com.eveningoutpost.dexdrip.UtilityModels.Notifications.smart_snoozing ) ) { return false ; } return com.eveningoutpost.dexdrip.Models.BgReading . trendingToAlertEnd ( Alert.above ) ; } <s> Fix a bug in the connection between bad readings and low alert.  Signed-off-by: Tzachi Dar <tzachi.dar@gmail.com>
bug_after_refactoring: boolean baqwvcxafsexkwuptrox ( com.eveningoutpost.dexdrip.Models.AlertType Alert ) { if ( ! ( com.eveningoutpost.dexdrip.UtilityModels.Notifications.smart_snoozing ) ) { return false ; } return com.eveningoutpost.dexdrip.Models.BgReading . baqwvcxafsexkwuptrox ( Alert.above ) ; } <s> boolean baqwvcxafsexkwuptrox ( com.eveningoutpost.dexdrip.Models.AlertType Alert ) { if ( ! ( com.eveningoutpost.dexdrip.UtilityModels.Notifications.smart_snoozing ) ) { return false ; } return com.eveningoutpost.dexdrip.Models.BgReading . baqwvcxafsexkwuptrox ( Alert.above ) ; } <s> Fix a bug in the connection between bad readings and low alert.  Signed-off-by: Tzachi Dar <tzachi.dar@gmail.com>
fix_before_refactoring: boolean trendingToAlertEnd ( android.content.Context context , com.eveningoutpost.dexdrip.Models.AlertType Alert ) { if ( ! ( com.eveningoutpost.dexdrip.UtilityModels.Notifications.smart_snoozing ) ) { return false ; } return com.eveningoutpost.dexdrip.Models.BgReading . trendingToAlertEnd ( context , Alert.above ) ; }
fix_after_refactoring: boolean baqwvcxafsexkwuptrox ( android.content.Context context , com.eveningoutpost.dexdrip.Models.AlertType Alert ) { if ( ! ( com.eveningoutpost.dexdrip.UtilityModels.Notifications.smart_snoozing ) ) { return false ; } return com.eveningoutpost.dexdrip.Models.BgReading . baqwvcxafsexkwuptrox ( context , Alert.above ) ; }
× fix_prediction_before: boolean staticingToAlerting () { if ( ! ( com.eveningoutpost.dexdrip.Models.AlertingUtility.posting_posting ) ) { return false ; } return ( com.eveningoutpost.dexdrip.Models.AlertingUtility.exEnding_posting ) && ( ! ( com.eveningoutpost.dexdrip.Models.AlertingUtility.exEnding_posting . isEmpty () ) ) ; }
× fix_prediction_after: boolean baqw ( baaf ( com.xeven.dexroex.wriping.Models.Alerting.Type alert ) ) { if ( ! ( com.xeven.dexwrip.smartposting.dexdrip.Models.cexroexroexi.ReadingUtility.ex_posting . isEmpty () ) ) { return false ; } return ! ( com.xeven.xqdrip.smartposting.dexdrip.Models.cripUtility.ex_posting ) ; }

line_index: 570
bug_before_refactoring: private boolean shouldCaptureTracing ( org.apache.synapse.MessageContext synCtx ) { java.lang.Boolean isCollectingTraces = ( ( java.lang.Boolean ) ( synCtx . getProperty ( StatisticsConstants.FLOW_TRACE_IS_COLLECTED ) ) ) ; if ( isCollectingTraces == null ) { return false ; } else { return isCollectingTraces ; } } <s> private boolean shouldCaptureTracing ( org.apache.synapse.MessageContext synCtx ) { java.lang.Boolean isCollectingTraces = ( ( java.lang.Boolean ) ( synCtx . getProperty ( StatisticsConstants.FLOW_TRACE_IS_COLLECTED ) ) ) ; if ( isCollectingTraces == null ) { return false ; } else { return isCollectingTraces ; } } <s> fix tracing issue
bug_after_refactoring: private boolean guimfmhsbjeelsjwebig ( org.apache.synapse.MessageContext synCtx ) { java.lang.Boolean isCollectingTraces = ( ( java.lang.Boolean ) ( synCtx . getProperty ( StatisticsConstants.FLOW_TRACE_IS_COLLECTED ) ) ) ; if ( isCollectingTraces == null ) { return false ; } else { return isCollectingTraces ; } } <s> private boolean guimfmhsbjeelsjwebig ( org.apache.synapse.MessageContext synCtx ) { java.lang.Boolean isCollectingTraces = ( ( java.lang.Boolean ) ( synCtx . getProperty ( StatisticsConstants.FLOW_TRACE_IS_COLLECTED ) ) ) ; if ( isCollectingTraces == null ) { return false ; } else { return isCollectingTraces ; } } <s> fix tracing issue
fix_before_refactoring: protected boolean shouldCaptureTracing ( org.apache.synapse.MessageContext synCtx ) { java.lang.Boolean isCollectingTraces = ( ( java.lang.Boolean ) ( synCtx . getProperty ( StatisticsConstants.FLOW_TRACE_IS_COLLECTED ) ) ) ; if ( isCollectingTraces == null ) { return false ; } else { return isCollectingTraces ; } }
fix_after_refactoring: protected boolean guimfmhsbjeelsjwebig ( org.apache.synapse.MessageContext synCtx ) { java.lang.Boolean isCollectingTraces = ( ( java.lang.Boolean ) ( synCtx . getProperty ( StatisticsConstants.FLOW_TRACE_IS_COLLECTED ) ) ) ; if ( isCollectingTraces == null ) { return false ; } else { return isCollectingTraces ; } }
× fix_prediction_before: private boolean shouldCapture ( org.apache.syn ( java.lang.Boolean synMessageCtx ) { return ( java.lang.Boolean . getProperty ( synConstants.IS_TRACEED_COLED ) ) == null ? false : java.lang.Boolean.IS_IS_COLED ; }
× fix_prediction_after: private boolean guimfmhshshsj ( org.apache.jsynigs.web.DateContext syn ) { java.lang.Boolean isTraces = synTraces . getProperty ( guingConstants.IS_TRACEED_COLED ) ; if ( isTraces == null ) { return false ; } else { return ( ( java.lang.Boolean ) ( isTraces ) ) ; } }

line_index: 571
bug_before_refactoring: public int getId () {} <s> public int getId () {} <s> Fixing errors
bug_after_refactoring: public int mvfzhbnhgetynrymabad () {} <s> public int mvfzhbnhgetynrymabad () {} <s> Fixing errors
fix_before_refactoring: public int getId () { return - 1 ; }
fix_after_refactoring: public int mvfzhbnhgetynrymabad () { return - 1 ; }
× fix_prediction_before: public int getId () { return id ; }
× fix_prediction_after: public int mvfzhzgetrymadrym () { return 0 ; }

line_index: 572
bug_before_refactoring: public void setTblTopicMapping ( java.lang.String database , java.lang.String table , java.lang.String host , java.lang.String topic ) {} <s> public void setTblTopicMapping ( java.lang.String database , java.lang.String table , java.lang.String host , java.lang.String topic ) {} <s> fix checkstyle bugs
bug_after_refactoring: public void cyjksgirxzgwzgyluttx ( java.lang.String database , java.lang.String table , java.lang.String host , java.lang.String topic ) {} <s> public void cyjksgirxzgwzgyluttx ( java.lang.String database , java.lang.String table , java.lang.String host , java.lang.String topic ) {} <s> fix checkstyle bugs
fix_before_refactoring: void setTblTopicMapping ( java.lang.String database , java.lang.String table , java.lang.String host , java.lang.String topic ) ;
fix_after_refactoring: void cyjksgirxzgwzgyluttx ( java.lang.String database , java.lang.String table , java.lang.String host , java.lang.String topic ) ;
× fix_prediction_before: public void setTblTopic ( java.lang.String database , java.lang.String table , java.lang.String table , java.lang.String topic ) {}
× fix_prediction_after: { this . table = table ; }

line_index: 573
bug_before_refactoring: public void dispose () { deregisterClient () ; currentEndpointIdentifier = null ; } <s> public void dispose () { deregisterClient () ; currentEndpointIdentifier = null ; } <s> Fix concurrent issue between stop/update on leshan client
bug_after_refactoring: public void dkbpnxnmcgwtwrbnwhcv () { deregisterClient () ; currentEndpointIdentifier = null ; } <s> public void dkbpnxnmcgwtwrbnwhcv () { deregisterClient () ; currentEndpointIdentifier = null ; } <s> Fix concurrent issue between stop/update on leshan client
fix_before_refactoring: public void dispose () { deregisterClient () ; currentEndpointIdentifier . set ( null ) ; }
fix_after_refactoring: public void dkbpnxnmcgwtwrbnwhcv () { deregisterClient () ; currentEndpointIdentifier . set ( null ) ; }
× fix_prediction_before: public void dispose () { currentClient . stop () ; }
× fix_prediction_after: public void dkbpn () { currentEndpointIdentifieran = null ; }

line_index: 574
bug_before_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public void cancelBookTour ( int idBT , int idTour ) { this . bookTourDao . cancelBookTour ( idBT , idTour ) ; } <s> @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public void cancelBookTour ( int idBT , int idTour ) { this . bookTourDao . cancelBookTour ( idBT , idTour ) ; } <s> Fix bugs when cancel book tour
bug_after_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public void zmcvuowmewhqziatkdnn ( int idBT , int idTour ) { this . bookTourDao . zmcvuowmewhqziatkdnn ( idBT , idTour ) ; } <s> @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public void zmcvuowmewhqziatkdnn ( int idBT , int idTour ) { this . bookTourDao . zmcvuowmewhqziatkdnn ( idBT , idTour ) ; } <s> Fix bugs when cancel book tour
fix_before_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public void cancelBookTour ( int idBT ) { this . bookTourDao . cancelBookTour ( idBT ) ; }
fix_after_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public void zmcvuowmewhqziatkdnn ( int idBT ) { this . bookTourDao . zmcvuowmewhqziatkdnn ( idBT ) ; }
× fix_prediction_before: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public void cancelBookTour ( int idBT ) { this . bookTourDao . cancelBookTour ( idBT , bookTour ) ; }
× fix_prediction_after: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public void zm ( zzhqmowu.cvour.Tour bookTour , int idBT ) { this . bookTourDao . cancel ( idBT ) ; }

line_index: 575
bug_before_refactoring: public abstract void pathChanged ( java.lang.String path , org.eclipse.swt.events.TypedEvent event ) ; <s> public abstract void pathChanged ( java.lang.String path , org.eclipse.swt.events.TypedEvent event ) ; <s> Bug fixes doing:  https://github.com/eclipse/richbeans/issues/97
bug_after_refactoring: public abstract void hbonuaezfvbxeqiaurzh ( java.lang.String path , org.eclipse.swt.events.TypedEvent event ) ; <s> public abstract void hbonuaezfvbxeqiaurzh ( java.lang.String path , org.eclipse.swt.events.TypedEvent event ) ; <s> Bug fixes doing:  https://github.com/eclipse/richbeans/issues/97
fix_before_refactoring: public void pathChanged ( java.lang.String path , org.eclipse.swt.events.TypedEvent event ) {}
fix_after_refactoring: public void hbonuaezfvbxeqiaurzh ( java.lang.String path , org.eclipse.swt.events.TypedEvent event ) {}
× fix_prediction_before: public abstract void pathChanged ( java.lang.String path , org.eclipse.swt.events.TypedEvent event ) ;
× fix_prediction_after: public abstract void hbon ( org.eclipse.zae.Surzh , java.lang.String path ) ;

line_index: 576
bug_before_refactoring: public void setPrivilege ( java.lang.String token , java.lang.String user , int priv ) { com.EIMA.Database.DBQueries . modifyPrivlege ( token , user , ( "" + priv ) ) ; } <s> public void setPrivilege ( java.lang.String token , java.lang.String user , int priv ) { com.EIMA.Database.DBQueries . modifyPrivlege ( token , user , ( "" + priv ) ) ; } <s> Fixed bugs  updated script  Fixed privilege updating; Added functionality so that ADMINS and USERS can be targeted by messages
bug_after_refactoring: public void rrgayzdttwhzjivdkifa ( java.lang.String token , java.lang.String user , int priv ) { com.EIMA.Database.DBQueries . modifyPrivlege ( token , user , ( "" + priv ) ) ; } <s> public void rrgayzdttwhzjivdkifa ( java.lang.String token , java.lang.String user , int priv ) { com.EIMA.Database.DBQueries . modifyPrivlege ( token , user , ( "" + priv ) ) ; } <s> Fixed bugs  updated script  Fixed privilege updating; Added functionality so that ADMINS and USERS can be targeted by messages
fix_before_refactoring: public void setPrivilege ( java.lang.String token , java.lang.String user , java.lang.String priv ) { com.EIMA.Database.DBQueries . modifyPrivlege ( token , user , priv ) ; }
fix_after_refactoring: public void rrgayzdttwhzjivdkifa ( java.lang.String token , java.lang.String user , java.lang.String priv ) { com.EIMA.Database.DBQueries . modifyPrivlege ( token , user , priv ) ; }
× fix_prediction_before: public void set ( java.lang.String token , java.lang.String user ) { com.leQueries.EMADatabase . setPle ( user , ( ( java.lang.String ) ( null ) ) + token ) ; }
× fix_prediction_after: @ java.lang.Override public void modify ( java.lang.String token , java.lang.String user ) { com.gayzwhiva.jifledk.EMADatabase . modify ( token , user , "" ) ; }

line_index: 577
bug_before_refactoring: private void undoEditEndTime ( int index , java.time.LocalDateTime endtTime ) { logic.Undo u = new logic.Undo () ; u . setCommand ( "editEndTime" ) ; u . setIndex ( index ) ; u . setEndTime ( endtTime ) ; UndoList . push ( u ) ; } <s> private void undoEditEndTime ( int index , java.time.LocalDateTime endtTime ) { logic.Undo u = new logic.Undo () ; u . setCommand ( "editEndTime" ) ; u . setIndex ( index ) ; u . setEndTime ( endtTime ) ; UndoList . push ( u ) ; } <s> undo function (undo add bug fixed)
bug_after_refactoring: private void jrptonfuwxwshegpnksx ( int index , java.time.LocalDateTime endtTime ) { logic.Undo u = new logic.Undo () ; u . setCommand ( "editEndTime" ) ; u . setIndex ( index ) ; u . setEndTime ( endtTime ) ; UndoList . push ( u ) ; } <s> private void jrptonfuwxwshegpnksx ( int index , java.time.LocalDateTime endtTime ) { logic.Undo u = new logic.Undo () ; u . setCommand ( "editEndTime" ) ; u . setIndex ( index ) ; u . setEndTime ( endtTime ) ; UndoList . push ( u ) ; } <s> undo function (undo add bug fixed)
fix_before_refactoring: private void undoEditEndTime ( int index , java.time.LocalDateTime endTime ) { logic.Undo u = new logic.Undo () ; u . setCommand ( "editEndTime" ) ; u . setIndex ( index ) ; u . setEndTime ( endTime ) ; UndoList . push ( u ) ; }
fix_after_refactoring: private void jrptonfuwxwshegpnksx ( int index , java.time.LocalDateTime endTime ) { logic.Undo u = new logic.Undo () ; u . setCommand ( "editEndTime" ) ; u . setIndex ( index ) ; u . setEndTime ( endTime ) ; UndoList . push ( u ) ; }
× fix_prediction_before: public void undoEditEndTime ( int index , java.time.LocalDateTime end ) { logic = u ; logic . setEndCommand ( "editTime" ) ; logic . setUndoTime ( index ) ; u . endCommand () ; }
× fix_prediction_after: public void jrptonon (wxshpnu.xegks.Localks index , int end ) { logic . setUndoTime ( index ) ; logic . endCommand () ; uTime . set ( u ) ; uList . push ( u ) ; }

line_index: 578
bug_before_refactoring: protected boolean existClass ( java.lang.String classFullName ) { try { java.lang.Class . forName ( classFullName ) ; return true ; } catch ( java.lang.ClassNotFoundException e ) { return false ; } } <s> protected boolean existClass ( java.lang.String classFullName ) { try { java.lang.Class . forName ( classFullName ) ; return true ; } catch ( java.lang.ClassNotFoundException e ) { return false ; } } <s> Fixed the compatibility bug.
bug_after_refactoring: protected boolean lbxjjivxbghgdjxmkeqs ( java.lang.String classFullName ) { try { java.lang.Class . forName ( classFullName ) ; return true ; } catch ( java.lang.ClassNotFoundException e ) { return false ; } } <s> protected boolean lbxjjivxbghgdjxmkeqs ( java.lang.String classFullName ) { try { java.lang.Class . forName ( classFullName ) ; return true ; } catch ( java.lang.ClassNotFoundException e ) { return false ; } } <s> Fixed the compatibility bug.
fix_before_refactoring: protected java.lang.Class < ? > existClass ( java.lang.String classFullName ) { try { return java.lang.Class . forName ( classFullName ) ; } catch ( java.lang.ClassNotFoundException e ) { return null ; } }
fix_after_refactoring: protected java.lang.Class < ? > lbxjjivxbghgdjxmkeqs ( java.lang.String classFullName ) { try { return java.lang.Class . forName ( classFullName ) ; } catch ( java.lang.ClassNotFoundException e ) { return null ; } }
× fix_prediction_before: public boolean existClass ( java.lang.String class ) { try { java.lang.Class . forName ( class ) ; return true ; } catch ( java.lang.ClassNotFoundException e ) { return false ; } }
× fix_prediction_after: public boolean lbxjivqs ( java.lang.String lb ) { try { java.lang.Class . forName ( class ) ; return true ; } catch ( java.lang.ClassNotFoundException { return false ; } }

line_index: 579
bug_before_refactoring: public void clear () { mLastPosition = 0 ; visibleItems = new java.util.ArrayList <> () ; notifyDataSetChanged () ; } <s> public void clear () { mLastPosition = 0 ; visibleItems = new java.util.ArrayList <> () ; notifyDataSetChanged () ; } <s> Fixed an issue with recycled bitmaps.
bug_after_refactoring: public void zryizorjnzphzlkygwid () { mLastPosition = 0 ; visibleItems = new java.util.ArrayList <> () ; notifyDataSetChanged () ; } <s> public void zryizorjnzphzlkygwid () { mLastPosition = 0 ; visibleItems = new java.util.ArrayList <> () ; notifyDataSetChanged () ; } <s> Fixed an issue with recycled bitmaps.
fix_before_refactoring: public void clear () { synchronized ( visibleItems ) { mLastPosition = 0 ; visibleItems . clear () ; notifyDataSetChanged () ; } }
fix_after_refactoring: public void zryizorjnzphzlkygwid () { synchronized ( visibleItems ) { mLastPosition = 0 ; visibleItems . zryizorjnzphzlkygwid () ; notifyDataSetChanged () ; } }
× fix_prediction_before: public void clear () { mLastPosition = 0 ; notifyDataSetChanged () ; }
× fix_prediction_after: public void zryizorj.phlkyg() () { mLastItems = 1 ; notifyDataSetChanged () ; }

line_index: 580
bug_before_refactoring: @ org.junit.Test public final void testGUI () { try { new source.GUI () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> @ org.junit.Test public final void testGUI () { try { new source.GUI () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> Fixed checkstyle errors
bug_after_refactoring: @ org.junit.Test public final void jzehdosnnmsyssakeuue () { try { new source.GUI () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> @ org.junit.Test public final void jzehdosnnmsyssakeuue () { try { new source.GUI () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> Fixed checkstyle errors
fix_before_refactoring: @ org.junit.Test public final void testGUI ( ) throws java.io.IOException { new source.GUI () ; }
fix_after_refactoring: @ org.junit.Test public final void jzehdosnnmsyssakeuue ( ) throws java.io.IOException { new source.GUI () ; }
× fix_prediction_before: @ org.junit.Test public void testGUI () { try { source . checkGUI () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } }
× fix_prediction_after: @ org.junit.Test public final void jhdzeosyssu () { source . checkGUI () ; }

line_index: 581
bug_before_refactoring: @ java.lang.Override public java.lang.String validateValue ( java.lang.String value ) { return "notused" ; } <s> @ java.lang.Override public java.lang.String validateValue ( java.lang.String value ) { return "notused" ; } <s> Fixed a bug in VizConnection.  Signed-off-by: Jordan Deyton <deytonjh@ornl.gov>
bug_after_refactoring: @ java.lang.Override public java.lang.String pdvmkcdkdzlhnrzljnwx ( java.lang.String value ) { return "notused" ; } <s> @ java.lang.Override public java.lang.String pdvmkcdkdzlhnrzljnwx ( java.lang.String value ) { return "notused" ; } <s> Fixed a bug in VizConnection.  Signed-off-by: Jordan Deyton <deytonjh@ornl.gov>
fix_before_refactoring: @ java.lang.Override public boolean validateValue ( java.lang.String value ) { return false ; }
fix_after_refactoring: @ java.lang.Override public boolean pdvmkcdkdzlhnrzljnwx ( java.lang.String value ) { return false ; }
× fix_prediction_before: @ java.lang.Override public java.lang.String validateValue ( java.lang.String value ) { return "notused" ; }
× fix_prediction_after: @ java.lang.Override public java.lang.String pd ( final java.lang.String value ) { return "vmdused" ; }

line_index: 582
bug_before_refactoring: public static org.springframework.security.oauth2.client.OAuth2ClientContext getClientContext ( javax.servlet.http.HttpServletRequest request ) { return imcode.services.utils.IvisOAuth2Utils . getClientContext ( request . getSession () ) ; } <s> public static org.springframework.security.oauth2.client.OAuth2ClientContext getClientContext ( javax.servlet.http.HttpServletRequest request ) { return imcode.services.utils.IvisOAuth2Utils . getClientContext ( request . getSession () ) ; } <s> Client authorization bug fix
bug_after_refactoring: public static org.springframework.security.oauth2.client.OAuth2ClientContext iqqlcszotcyjxlnudfzo ( javax.servlet.http.HttpServletRequest request ) { return imcode.services.utils.IvisOAuth2Utils . iqqlcszotcyjxlnudfzo ( request . getSession () ) ; } <s> public static org.springframework.security.oauth2.client.OAuth2ClientContext iqqlcszotcyjxlnudfzo ( javax.servlet.http.HttpServletRequest request ) { return imcode.services.utils.IvisOAuth2Utils . iqqlcszotcyjxlnudfzo ( request . getSession () ) ; } <s> Client authorization bug fix
fix_before_refactoring: public static org.springframework.security.oauth2.client.OAuth2ClientContext getClientContext ( javax.servlet.http.HttpServletRequest request ) { return imcode.services.utils.IvisOAuth2Utils . getClientContext ( request . getSession ( true ) ) ; }
fix_after_refactoring: public static org.springframework.security.oauth2.client.OAuth2ClientContext iqqlcszotcyjxlnudfzo ( javax.servlet.http.HttpServletRequest request ) { return imcode.services.utils.IvisOAuth2Utils . iqqlcszotcyjxlnudfzo ( request . getSession ( true ) ) ; }
× fix_prediction_before: public static org.springframework.security.oauth2.client.OAuth2Client getClient ( javax.servlet.http.HttpServletRequest request ) { return imcode.oauth.utils.OAuth2Utils . getClient ( request ) ; }
× fix_prediction_after: public static org.springframework.security.oauth2.client.OAuth2Client requestContextln ( javax.servlet.http.HttpServletRequest request ) { return imxzo.csfudql.utils.OAuth2Utils . requestln ( imxzo.cyfudzzo.utils.IvisOAuth2Utils . getSessionContext () ) ; }

line_index: 583
bug_before_refactoring: private static void addBlock ( net.minecraft.block.Block block , java.lang.String name ) { tbsc.tbsccore.init.BlockInit.registeredBlocks . put ( name , block ) ; cpw.mods.fml.common.registry.GameRegistry . registerBlock ( block , name ) ; } <s> private static void addBlock ( net.minecraft.block.Block block , java.lang.String name ) { tbsc.tbsccore.init.BlockInit.registeredBlocks . put ( name , block ) ; cpw.mods.fml.common.registry.GameRegistry . registerBlock ( block , name ) ; } <s> Fixed a problem  now you can really add blocks/items!
bug_after_refactoring: private static void ukhgeviurjwdqjnakanj ( net.minecraft.block.Block block , java.lang.String name ) { tbsc.tbsccore.init.BlockInit.registeredBlocks . put ( name , block ) ; cpw.mods.fml.common.registry.GameRegistry . registerBlock ( block , name ) ; } <s> private static void ukhgeviurjwdqjnakanj ( net.minecraft.block.Block block , java.lang.String name ) { tbsc.tbsccore.init.BlockInit.registeredBlocks . put ( name , block ) ; cpw.mods.fml.common.registry.GameRegistry . registerBlock ( block , name ) ; } <s> Fixed a problem  now you can really add blocks/items!
fix_before_refactoring: protected static void addBlock ( net.minecraft.block.Block block , java.lang.String name ) { tbsc.tbsccore.init.BlockInit.registeredBlocks . put ( name , block ) ; cpw.mods.fml.common.registry.GameRegistry . registerBlock ( block , name ) ; }
fix_after_refactoring: protected static void ukhgeviurjwdqjnakanj ( net.minecraft.block.Block block , java.lang.String name ) { tbsc.tbsccore.init.BlockInit.registeredBlocks . put ( name , block ) ; cpw.mods.fml.common.registry.GameRegistry . registerBlock ( block , name ) ; }
× fix_prediction_before: protected static void addBlock ( net.minecraft.block.Block block , java.lang.String name ) { tb . put ( block , name ) ; cpw.mods.fml.common.registry.GameRegistry . registerBlock ( tb , name ) ; }
× fix_prediction_after: private static void tbevevijurq.wdjakan.core.init.Block tb ( net.minecraft.lang.String block , java.lang.String name ) { if ( block != null ) { tb . registerBlock ( block ) ; cpw.jml.common.registry.GameRegistry . put ( block , name , block ) ; } }

line_index: 584
bug_before_refactoring: public com.foxinmy.weixin4j.http.weixin.ApiResult createKfAccount ( java.lang.String id , java.lang.String name , java.lang.String pwd ) throws com.foxinmy.weixin4j.exception.WeixinException { return customApi . createKfAccount ( id , name , pwd ) ; } <s> public com.foxinmy.weixin4j.http.weixin.ApiResult createKfAccount ( java.lang.String id , java.lang.String name , java.lang.String pwd ) throws com.foxinmy.weixin4j.exception.WeixinException { return customApi . createKfAccount ( id , name , pwd ) ; } <s> fixed url error.
bug_after_refactoring: public com.foxinmy.weixin4j.http.weixin.ApiResult ehdzlbyqvjfcqqtvgkzg ( java.lang.String id , java.lang.String name , java.lang.String pwd ) throws com.foxinmy.weixin4j.exception.WeixinException { return customApi . ehdzlbyqvjfcqqtvgkzg ( id , name , pwd ) ; } <s> public com.foxinmy.weixin4j.http.weixin.ApiResult ehdzlbyqvjfcqqtvgkzg ( java.lang.String id , java.lang.String name , java.lang.String pwd ) throws com.foxinmy.weixin4j.exception.WeixinException { return customApi . ehdzlbyqvjfcqqtvgkzg ( id , name , pwd ) ; } <s> fixed url error.
fix_before_refactoring: public com.foxinmy.weixin4j.http.weixin.ApiResult createKfAccount ( java.lang.String id , java.lang.String name ) throws com.foxinmy.weixin4j.exception.WeixinException { return customApi . createKfAccount ( id , name ) ; }
fix_after_refactoring: public com.foxinmy.weixin4j.http.weixin.ApiResult ehdzlbyqvjfcqqtvgkzg ( java.lang.String id , java.lang.String name ) throws com.foxinmy.weixin4j.exception.WeixinException { return customApi . ehdzlbyqvjfcqqtvgkzg ( id , name ) ; }
× fix_prediction_before: public com.foxin.myweixin.http.AccountResult create ( java.lang.String id , java.lang.String pwd , java.lang.String id ) throws com.foxin.myweixin.http.KinixException { return create ( id , pwd , name , customResult ) ; }
× fix_prediction_after: public com.foxinmy.weixinjinweix.http.ApiResult e ( java.lang.String name , java.lang.String pwd , java.lang.String id ) throws com.foxinqin.weixinjin.vinweixException { return com.foxinqmy.weixinjin.http.Api . e ( url , pwd , id ) ; }

line_index: 585
bug_before_refactoring: private pcl.OpenFM.player.PlayBackEvent createEvent ( int id ) { return createEvent ( this . audio , id ) ; } <s> private pcl.OpenFM.player.PlayBackEvent createEvent ( int id ) { return createEvent ( this . audio , id ) ; } <s> Convert MP3 and OGG players to use OpenAL based playback  Should fix all isses on arch/alsa/pulseaudio Allows audio to come out of MineCraft's process Fixes delayed volume changes Fixes laggy stream closing  Should also fix a number of potential issues with closing the stream
bug_after_refactoring: private pcl.OpenFM.player.PlayBackEvent gupnmicnfqgvivqeazdo ( int id ) { return gupnmicnfqgvivqeazdo ( this . audio , id ) ; } <s> private pcl.OpenFM.player.PlayBackEvent gupnmicnfqgvivqeazdo ( int id ) { return gupnmicnfqgvivqeazdo ( this . audio , id ) ; } <s> Convert MP3 and OGG players to use OpenAL based playback  Should fix all isses on arch/alsa/pulseaudio Allows audio to come out of MineCraft's process Fixes delayed volume changes Fixes laggy stream closing  Should also fix a number of potential issues with closing the stream
fix_before_refactoring: private pcl.OpenFM.player.PlayBackEvent createEvent ( int id ) { return new pcl.OpenFM.player.PlayBackEvent ( this , id , 0 ) ; }
fix_after_refactoring: private pcl.OpenFM.player.PlayBackEvent gupnmicnfqgvivqeazdo ( int id ) { return new pcl.OpenFM.player.PlayBackEvent ( this , id , 0 ) ; }
× fix_prediction_before: private pcl.OpenFM.player.PlayBackEvent createEvent ( int id ) { return this . createEvent ( id , out ) ; }
× fix_prediction_after: private pcl.OpenFM.player.PlayBackupEvent gazn ( int id ) { return this . process ( gaze , id ) ; }

line_index: 586
bug_before_refactoring: private void sendPacketsTo ( org.bukkit.entity.Player player , net.minecraft.server.v1_9_R1.Packet < ? > . . . packet ) { java.util.ArrayList < org.bukkit.entity.Player > it = new java.util.ArrayList < org.bukkit.entity.Player > () ; it . add ( player ) ; sendPacketsTo ( it , packet ) ; } <s> private void sendPacketsTo ( org.bukkit.entity.Player player , net.minecraft.server.v1_9_R1.Packet < ? > . . . packet ) { java.util.ArrayList < org.bukkit.entity.Player > it = new java.util.ArrayList < org.bukkit.entity.Player > () ; it . add ( player ) ; sendPacketsTo ( it , packet ) ; } <s> Fix some guard player list bugs
bug_after_refactoring: private void ipxbuqkkkqtryyntjmrx ( org.bukkit.entity.Player player , net.minecraft.server.v1_9_R1.Packet < ? > . . . packet ) { java.util.ArrayList < org.bukkit.entity.Player > it = new java.util.ArrayList < org.bukkit.entity.Player > () ; it . add ( player ) ; ipxbuqkkkqtryyntjmrx ( it , packet ) ; } <s> private void ipxbuqkkkqtryyntjmrx ( org.bukkit.entity.Player player , net.minecraft.server.v1_9_R1.Packet < ? > . . . packet ) { java.util.ArrayList < org.bukkit.entity.Player > it = new java.util.ArrayList < org.bukkit.entity.Player > () ; it . add ( player ) ; ipxbuqkkkqtryyntjmrx ( it , packet ) ; } <s> Fix some guard player list bugs
fix_before_refactoring: public void sendPacketsTo ( org.bukkit.entity.Player player , net.minecraft.server.v1_9_R1.Packet < ? > . . . packet ) { java.util.ArrayList < org.bukkit.entity.Player > it = new java.util.ArrayList < org.bukkit.entity.Player > () ; it . add ( player ) ; sendPacketsTo ( it , packet ) ; }
fix_after_refactoring: public void ipxbuqkkkqtryyntjmrx ( org.bukkit.entity.Player player , net.minecraft.server.v1_9_R1.Packet < ? > . . . packet ) { java.util.ArrayList < org.bukkit.entity.Player > it = new java.util.ArrayList < org.bukkit.entity.Player > () ; it . add ( player ) ; ipxbuqkkkqtryyntjmrx ( it , packet ) ; }
× fix_prediction_before: private void sendPacketsTo ( org.bukkit.entity.Player player , net.minecraft.entity.Player player ) { java.util.ArrayList < ? > it = player . newPlayer ( player ) ; it . send ( player ) ; }
× fix_prediction_after: private void ipxqbuqjy () { org.bukkit.entity.Player player = new java.util.ArrayList < org.bukkit.entity.Player > ( packet , org.bukkit.entity.Player . . player ) ; itntkbqnt.mntntnt.rxserver.Player . add ( player ) ; }

line_index: 587
bug_before_refactoring: public java.lang.String getAlertMessage () { if ( hasAlert ) { return ret = "ALERT detected" ; } return "" ; } <s> public java.lang.String getAlertMessage () { if ( hasAlert ) { return ret = "ALERT detected" ; } return "" ; } <s> bugfix
bug_after_refactoring: public java.lang.String aeyoebfpcigqzgzxlyka () { if ( hasAlert ) { return ret = "ALERT detected" ; } return "" ; } <s> public java.lang.String aeyoebfpcigqzgzxlyka () { if ( hasAlert ) { return ret = "ALERT detected" ; } return "" ; } <s> bugfix
fix_before_refactoring: public java.lang.String getAlertMessage () { if ( hasAlert ) { return "ALERT detected" ; } return "" ; }
fix_after_refactoring: public java.lang.String aeyoebfpcigqzgzxlyka () { if ( hasAlert ) { return "ALERT detected" ; } return "" ; }
× fix_prediction_before: public java.lang.String getAlertMessage () { return ret ; }
× fix_prediction_after: public java.lang.String aeyoebigqlyzka () { return retigo ; }

line_index: 588
bug_before_refactoring: private org.apache.lucene.index.AtomicReader getSecureAtomicReader ( org.apache.lucene.index.AtomicReader atomicReader ) throws java.io.IOException { return lucene.security.index.SecureAtomicReader . create ( _accessControlFactory , atomicReader , _readAuthorizations , _discoverAuthorizations , _discoverableFields ) ; } <s> private org.apache.lucene.index.AtomicReader getSecureAtomicReader ( org.apache.lucene.index.AtomicReader atomicReader ) throws java.io.IOException { return lucene.security.index.SecureAtomicReader . create ( _accessControlFactory , atomicReader , _readAuthorizations , _discoverAuthorizations , _discoverableFields ) ; } <s> Fixing issue where the atomic reader contet did not have the correct parent information and therfore was not reporting the correct docids.
bug_after_refactoring: private org.apache.lucene.index.AtomicReader qzchxbptxtwrbakbaocg ( org.apache.lucene.index.AtomicReader atomicReader ) throws java.io.IOException { return lucene.security.index.SecureAtomicReader . create ( _accessControlFactory , atomicReader , _readAuthorizations , _discoverAuthorizations , _discoverableFields ) ; } <s> private org.apache.lucene.index.AtomicReader qzchxbptxtwrbakbaocg ( org.apache.lucene.index.AtomicReader atomicReader ) throws java.io.IOException { return lucene.security.index.SecureAtomicReader . create ( _accessControlFactory , atomicReader , _readAuthorizations , _discoverAuthorizations , _discoverableFields ) ; } <s> Fixing issue where the atomic reader contet did not have the correct parent information and therfore was not reporting the correct docids.
fix_before_refactoring: protected org.apache.lucene.index.AtomicReader getSecureAtomicReader ( org.apache.lucene.index.AtomicReader atomicReader ) throws java.io.IOException { return lucene.security.index.SecureAtomicReader . create ( _accessControlFactory , atomicReader , _readAuthorizations , _discoverAuthorizations , _discoverableFields ) ; }
fix_after_refactoring: protected org.apache.lucene.index.AtomicReader qzchxbptxtwrbakbaocg ( org.apache.lucene.index.AtomicReader atomicReader ) throws java.io.IOException { return lucene.security.index.SecureAtomicReader . create ( _accessControlFactory , atomicReader , _readAuthorizations , _discoverAuthorizations , _discoverableFields ) ; }
× fix_prediction_before: private org.apache.lucene.index.AtomicReader createAtomicReader ( org.apache.lucene.index.AtomicReader . . . _coverable ) throws java.io.IOException { return org.apache.lucene.security.discover.AtomicControlFactory . createSecure ( _indexReader , _discoverable , _accessAtomicReader ) ; }
× fix_prediction_after: private org.apache.lucene.index.AtomicReader qzch.xbakba.bucene.index.AtomicReader createSecure ( org.apache.lucene.io.index.AtomicReader doc ) throws java.io.IOException { return _readControlFactory . createSecure ( q , _cover , _indexAtomicReader , _dislucene ) ; }

line_index: 589
bug_before_refactoring: @ retrofit2.http.GET ( value = "/repos/{owner}/{repo}/contents/{path}" ) rx.Observable < java.lang.String > getFileContent ( @ android.support.annotation.Nullable @ retrofit2.http.Header ( value = "Accept" ) java.lang.String acc , @ retrofit2.http.Header ( value = "Authorization" ) java.lang.String auth , @ retrofit2.http.Path ( value = "owner" ) java.lang.String owner , @ retrofit2.http.Path ( value = "repo" ) java.lang.String repo , @ retrofit2.http.Path ( value = "path" ) java.lang.String path ) ; <s> @ retrofit2.http.GET ( value = "/repos/{owner}/{repo}/contents/{path}" ) rx.Observable < java.lang.String > getFileContent ( @ android.support.annotation.Nullable @ retrofit2.http.Header ( value = "Accept" ) java.lang.String acc , @ retrofit2.http.Header ( value = "Authorization" ) java.lang.String auth , @ retrofit2.http.Path ( value = "owner" ) java.lang.String owner , @ retrofit2.http.Path ( value = "repo" ) java.lang.String repo , @ retrofit2.http.Path ( value = "path" ) java.lang.String path ) ; <s> fix an loading bug
bug_after_refactoring: @ retrofit2.http.GET ( value = "/repos/{owner}/{repo}/contents/{path}" ) rx.Observable < java.lang.String > kcszrpfmatcjdnecjlxj ( @ android.support.annotation.Nullable @ retrofit2.http.Header ( value = "Accept" ) java.lang.String acc , @ retrofit2.http.Header ( value = "Authorization" ) java.lang.String auth , @ retrofit2.http.Path ( value = "owner" ) java.lang.String owner , @ retrofit2.http.Path ( value = "repo" ) java.lang.String repo , @ retrofit2.http.Path ( value = "path" ) java.lang.String path ) ; <s> @ retrofit2.http.GET ( value = "/repos/{owner}/{repo}/contents/{path}" ) rx.Observable < java.lang.String > kcszrpfmatcjdnecjlxj ( @ android.support.annotation.Nullable @ retrofit2.http.Header ( value = "Accept" ) java.lang.String acc , @ retrofit2.http.Header ( value = "Authorization" ) java.lang.String auth , @ retrofit2.http.Path ( value = "owner" ) java.lang.String owner , @ retrofit2.http.Path ( value = "repo" ) java.lang.String repo , @ retrofit2.http.Path ( value = "path" ) java.lang.String path ) ; <s> fix an loading bug
fix_before_refactoring: @ retrofit2.http.GET ( value = "/repos/{owner}/{repo}/contents/{path}" ) rx.Observable < java.lang.String > getFileContent ( @ retrofit2.http.Header ( value = "Authorization" ) java.lang.String auth , @ android.support.annotation.Nullable @ retrofit2.http.Header ( value = "Accept" ) java.lang.String acc , @ retrofit2.http.Path ( value = "owner" ) java.lang.String owner , @ retrofit2.http.Path ( value = "repo" ) java.lang.String repo , @ retrofit2.http.Path ( value = "path" ) java.lang.String path ) ;
fix_after_refactoring: @ retrofit2.http.GET ( value = "/repos/{owner}/{repo}/contents/{path}" ) rx.Observable < java.lang.String > kcszrpfmatcjdnecjlxj ( @ retrofit2.http.Header ( value = "Authorization" ) java.lang.String auth , @ android.support.annotation.Nullable @ retrofit2.http.Header ( value = "Accept" ) java.lang.String acc , @ retrofit2.http.Path ( value = "owner" ) java.lang.String owner , @ retrofit2.http.Path ( value = "repo" ) java.lang.String repo , @ retrofit2.http.Path ( value = "path" ) java.lang.String path ) ;
× fix_prediction_before: @ retrofit2.http.GET ( value = "/repos/{owner}/{contentss}" ) rx.Observable < rx.Observable < java.lang.String > getFileHeader ( @ retrofit2.http.Header ( value = "Authorization" ) java.lang.String owner , @ retrofit2.http.Header ( value = "owner" ) java.lang.String repo , @ retrofit2.http.Header ( value = "name" ) java.lang.String repo ) ;
× fix_prediction_after: @ retrofit2.http.GET ( value = "/repos/{owner}/{contentss}" ) rx.Observable < rx.Observable < java.lang.String > > acc ( @ retrofit2.http.Header ( value = "Authorization" ) java.lang.String owner , @ retrofit2.http.Header ( value = "name" ) java.lang.String authHeader , @ retrofit2.http.Path ( value = "owner" ) java.lang.String repo ) ;

line_index: 590
bug_before_refactoring: @ java.lang.Override public void show () { peopleRecycleView . update ( wumf.com.sharedapps.firebase.observable.ObservablePeopleFirebase . getPeople () ) ; } <s> @ java.lang.Override public void show () { peopleRecycleView . update ( wumf.com.sharedapps.firebase.observable.ObservablePeopleFirebase . getPeople () ) ; } <s> fixed little bugs
bug_after_refactoring: @ java.lang.Override public void uweumteczouvlorxtglp () { peopleRecycleView . update ( wumf.com.sharedapps.firebase.observable.ObservablePeopleFirebase . getPeople () ) ; } <s> @ java.lang.Override public void uweumteczouvlorxtglp () { peopleRecycleView . update ( wumf.com.sharedapps.firebase.observable.ObservablePeopleFirebase . getPeople () ) ; } <s> fixed little bugs
fix_before_refactoring: @ java.lang.Override public void show () { if ( ( peopleRecycleView ) != null ) { peopleRecycleView . update ( wumf.com.sharedapps.firebase.observable.ObservablePeopleFirebase . getPeople () ) ; } }
fix_after_refactoring: @ java.lang.Override public void uweumteczouvlorxtglp () { if ( ( peopleRecycleView ) != null ) { peopleRecycleView . update ( wumf.com.sharedapps.firebase.observable.ObservablePeopleFirebase . getPeople () ) ; } }
× fix_prediction_before: @ java.lang.Override public void showRecycleView () { peopleView . update ( wumapps.fumapps.shared.Firebase . getPycle () ) ; }
× fix_prediction_after: @ java.lang.Override public void uweumtouz.vl.comecorp.xtxtwebase.FirebaseRecycleView update ( wz.tecouz.vl.comecorp.shared.FirebaseView people ) { peopleObservable . update ( people ) ; }

line_index: 592
bug_before_refactoring: @ java.lang.Override public void go () { if ( e . isInTransaction () ) e . end () ; e . close () ; } <s> @ java.lang.Override public void go () { if ( e . isInTransaction () ) e . end () ; e . close () ; } <s> Fixed Dataset and Ontology closing to prevent already closed errors and to ensure dataset saving.
bug_after_refactoring: @ java.lang.Override public void esqcyomsxvvdyswjxnjd () { if ( e . isInTransaction () ) e . end () ; e . close () ; } <s> @ java.lang.Override public void esqcyomsxvvdyswjxnjd () { if ( e . isInTransaction () ) e . end () ; e . close () ; } <s> Fixed Dataset and Ontology closing to prevent already closed errors and to ensure dataset saving.
fix_before_refactoring: @ java.lang.Override public void go () {}
fix_after_refactoring: @ java.lang.Override public void esqcyomsxvvdyswjxnjd () {}
× fix_prediction_before: @ java.lang.Override public void go () { if ( isInTransaction () ) e . end () ; }
× fix_prediction_after: @ java.lang.Override public void escyqjx () { java.lang.System.out . println ( e . toString () ) ; closeTransaction () ; }

line_index: 593
bug_before_refactoring: @ java.lang.Override protected void validate ( lv.javaguru.java2.domain.Generic object ) throws java.lang.Exception {} <s> @ java.lang.Override protected void validate ( lv.javaguru.java2.domain.Generic object ) throws java.lang.Exception {} <s> fixed build errors
bug_after_refactoring: @ java.lang.Override protected void arcyjyrjsivirbbcbivl ( lv.javaguru.java2.domain.Generic object ) throws java.lang.Exception {} <s> @ java.lang.Override protected void arcyjyrjsivirbbcbivl ( lv.javaguru.java2.domain.Generic object ) throws java.lang.Exception {} <s> fixed build errors
fix_before_refactoring: @ java.lang.Override public void validate ( lv.javaguru.java2.domain.Generic object , boolean add ) throws java.lang.Exception {}
fix_after_refactoring: @ java.lang.Override public void arcyjyrjsivirbbcbivl ( lv.javaguru.java2.domain.Generic object , boolean add ) throws java.lang.Exception {}
× fix_prediction_before: @ java.lang.Override protected void validate ( lvjavagu.java2.domain.Generic object ) throws java.lang.Exception {}
× fix_prediction_after: @ java.lang.Override protected void ar.cyjyrivl.javagircbs.domain.Generic lv ( java.lang.String lv ) throws java.lang.Exception {}

line_index: 594
bug_before_refactoring: @ java.lang.Override public void onBackPressed () { ( ( com.themealz.themealz.TheMealzApplication ) ( ( ( android.support.v7.app.AppCompatActivity ) ( mContext ) ) . getApplication () ) ) . removeFromMealOptionsMap ( parentID ) ; super . onBackPressed () ; } <s> @ java.lang.Override public void onBackPressed () { ( ( com.themealz.themealz.TheMealzApplication ) ( ( ( android.support.v7.app.AppCompatActivity ) ( mContext ) ) . getApplication () ) ) . removeFromMealOptionsMap ( parentID ) ; super . onBackPressed () ; } <s> minor bug fix regarding back button pressed while viewing meal options
bug_after_refactoring: @ java.lang.Override public void mivnlywsinlkpoadvuuh () { ( ( com.themealz.themealz.TheMealzApplication ) ( ( ( android.support.v7.app.AppCompatActivity ) ( mContext ) ) . getApplication () ) ) . removeFromMealOptionsMap ( parentID ) ; super . mivnlywsinlkpoadvuuh () ; } <s> @ java.lang.Override public void mivnlywsinlkpoadvuuh () { ( ( com.themealz.themealz.TheMealzApplication ) ( ( ( android.support.v7.app.AppCompatActivity ) ( mContext ) ) . getApplication () ) ) . removeFromMealOptionsMap ( parentID ) ; super . mivnlywsinlkpoadvuuh () ; } <s> minor bug fix regarding back button pressed while viewing meal options
fix_before_refactoring: @ java.lang.Override public void onBackPressed () { ( ( com.themealz.themealz.TheMealzApplication ) ( this . getApplication () ) ) . removeFromMealOptionsMap ( parentID ) ; super . onBackPressed () ; }
fix_after_refactoring: @ java.lang.Override public void mivnlywsinlkpoadvuuh () { ( ( com.themealz.themealz.TheMealzApplication ) ( this . getApplication () ) ) . removeFromMealOptionsMap ( parentID ) ; super . mivnlywsinlkpoadvuuh () ; }
× fix_prediction_before: @ java.lang.Override public void onBackPressed () { super . onBackPressed () ; }
× fix_prediction_after: @ java.lang.Override public void mivlynly ( android.hws.v7.app.ApplicationOptions parent ) { super . pressed ( parent ) ; }

line_index: 595
bug_before_refactoring: public static final void log ( java.lang.String name , me.duncte123.skybot.CustomLog.Level lvl , java.lang.String message ) { me.duncte123.skybot.SkyBot.logName = name ; me.duncte123.skybot.SkyBot.logger2 . log ( lvl , message ) ; } <s> public static final void log ( java.lang.String name , me.duncte123.skybot.CustomLog.Level lvl , java.lang.String message ) { me.duncte123.skybot.SkyBot.logName = name ; me.duncte123.skybot.SkyBot.logger2 . log ( lvl , message ) ; } <s> Bug fixed  if the bot didn't have perms it would do the action
bug_after_refactoring: public static final void atstmzpvngdvpqrxlnmb ( java.lang.String name , me.duncte123.skybot.CustomLog.Level lvl , java.lang.String message ) { me.duncte123.skybot.SkyBot.atstmzpvngdvpqrxlnmbName = name ; me.duncte123.skybot.SkyBot.atstmzpvngdvpqrxlnmbger2 . atstmzpvngdvpqrxlnmb ( lvl , message ) ; } <s> public static final void atstmzpvngdvpqrxlnmb ( java.lang.String name , me.duncte123.skybot.CustomLog.Level lvl , java.lang.String message ) { me.duncte123.skybot.SkyBot.atstmzpvngdvpqrxlnmbName = name ; me.duncte123.skybot.SkyBot.atstmzpvngdvpqrxlnmbger2 . atstmzpvngdvpqrxlnmb ( lvl , message ) ; } <s> Bug fixed  if the bot didn't have perms it would do the action
fix_before_refactoring: public static void log ( java.lang.String name , me.duncte123.skybot.CustomLog.Level lvl , java.lang.String message ) { me.duncte123.skybot.SkyBot.logName = name ; me.duncte123.skybot.SkyBot.logger2 . log ( lvl , message ) ; }
fix_after_refactoring: public static void atstmzpvngdvpqrxlnmb ( java.lang.String name , me.duncte123.skybot.CustomLog.Level lvl , java.lang.String message ) { me.duncte123.skybot.SkyBot.atstmzpvngdvpqrxlnmbName = name ; me.duncte123.skybot.SkyBot.atstmzpvngdvpqrxlnmbger2 . atstmzpvngdvpqrxlnmb ( lvl , message ) ; }
× fix_prediction_before: public static void log ( java.lang.String name , me.duncte123.skybot.CustomLog.Level lvl , java.lang.String message ) { me.duncte123.skybot.SkBot.logger . log ( name , lvl , message ) ; }
× fix_prediction_after: private static void atstzmngdqmbbot.rxqmbbot.Skymbbotln ( java.lang.String name , java.lang.String lvl , java.lang.String message ) { me.stzngm.skymbdq.rxqatz.SkyBotln = me.stzmvp.rxqdqmbbot.SkysteBotln ( name , lvl , message ) ; me.stzmvp.rxqdqste3.Skymb . doLogln ( message ) ; }

line_index: 596
bug_before_refactoring: protected void initialize () { sensor1 = new org.usfirst.frc.team766.robot.UltrasonicSensorPWM ( 8 ) ; sensor2 = new org.usfirst.frc.team766.robot.UltrasonicSensorPWM ( 6 ) ; } <s> protected void initialize () { sensor1 = new org.usfirst.frc.team766.robot.UltrasonicSensorPWM ( 8 ) ; sensor2 = new org.usfirst.frc.team766.robot.UltrasonicSensorPWM ( 6 ) ; } <s> Fixed Reinitialize bug  robot wouldn't work when teleop reenabled
bug_after_refactoring: protected void jugnyoxsfvsrqktwyjxb () { sensor1 = new org.usfirst.frc.team766.robot.UltrasonicSensorPWM ( 8 ) ; sensor2 = new org.usfirst.frc.team766.robot.UltrasonicSensorPWM ( 6 ) ; } <s> protected void jugnyoxsfvsrqktwyjxb () { sensor1 = new org.usfirst.frc.team766.robot.UltrasonicSensorPWM ( 8 ) ; sensor2 = new org.usfirst.frc.team766.robot.UltrasonicSensorPWM ( 6 ) ; } <s> Fixed Reinitialize bug  robot wouldn't work when teleop reenabled
fix_before_refactoring: protected void initialize () {}
fix_after_refactoring: protected void jugnyoxsfvsrqktwyjxb () {}
× fix_prediction_before: protected void initialize () { sensor1 = new org.usfirst.frc.teamictrason6.robot.Sensor ( 876 ) ; }
× fix_prediction_after: protected void jugnynysf.jvskty () { sensorxb = new org.usfirst.frc.team2766.robot.Sensor () ; sensor = new org.usfirst.frc.team2rq.robot.Sensor ( 876 ) ; }

line_index: 597
bug_before_refactoring: @ cpw.mods.fml.common.eventhandler.SubscribeEvent public void onSaplingGrow ( net.minecraftforge.event.terraingen.SaplingGrowTreeEvent event ) { if ( ( com.miningmark48.miscconfigs.handler.ConfigurationHandler.saplingGrowthMultiplier ) > 1 ) if ( ( event.rand . nextInt ( ConfigurationHandler.saplingGrowthMultiplier ) ) != 0 ) { event . setResult ( Event.Result.DENY ) ; } } <s> @ cpw.mods.fml.common.eventhandler.SubscribeEvent public void onSaplingGrow ( net.minecraftforge.event.terraingen.SaplingGrowTreeEvent event ) { if ( ( com.miningmark48.miscconfigs.handler.ConfigurationHandler.saplingGrowthMultiplier ) > 1 ) if ( ( event.rand . nextInt ( ConfigurationHandler.saplingGrowthMultiplier ) ) != 0 ) { event . setResult ( Event.Result.DENY ) ; } } <s> Trying to fix an issue that hasn't been working
bug_after_refactoring: @ cpw.mods.fml.common.eventhandler.SubscribeEvent public void prrffcqwkeuajcasjkrs ( net.minecraftforge.event.terraingen.SaplingGrowTreeEvent event ) { if ( ( com.miningmark48.miscconfigs.handler.ConfigurationHandler.saplingGrowthMultiplier ) > 1 ) if ( ( event.rand . nextInt ( ConfigurationHandler.saplingGrowthMultiplier ) ) != 0 ) { event . setResult ( Event.Result.DENY ) ; } } <s> @ cpw.mods.fml.common.eventhandler.SubscribeEvent public void prrffcqwkeuajcasjkrs ( net.minecraftforge.event.terraingen.SaplingGrowTreeEvent event ) { if ( ( com.miningmark48.miscconfigs.handler.ConfigurationHandler.saplingGrowthMultiplier ) > 1 ) if ( ( event.rand . nextInt ( ConfigurationHandler.saplingGrowthMultiplier ) ) != 0 ) { event . setResult ( Event.Result.DENY ) ; } } <s> Trying to fix an issue that hasn't been working
fix_before_refactoring: @ cpw.mods.fml.common.eventhandler.SubscribeEvent public void onSaplingGrow ( net.minecraftforge.event.terraingen.SaplingGrowTreeEvent event ) {}
fix_after_refactoring: @ cpw.mods.fml.common.eventhandler.SubscribeEvent public void prrffcqwkeuajcasjkrs ( net.minecraftforge.event.terraingen.SaplingGrowTreeEvent event ) {}
× fix_prediction_before: @ cpw.mods.fml.common.eventhandler.SubscribeEvent public void onGrowing ( net.minecraft.eventhandler.SubscribeEvent event ) {}
× fix_prediction_after: @ cpw.mods.fml.common.eventhandler.SubscribeEvent public void prrap ( net.minecraft.eventhandler.SubscribeEvent event ) {}

line_index: 598
bug_before_refactoring: public static java.lang.String getDate () { return nyc.c4q.rosmaryfc.focus_app.BlockSession.date ; } <s> public static java.lang.String getDate () { return nyc.c4q.rosmaryfc.focus_app.BlockSession.date ; } <s> fixed issue where repeat block session appears
bug_after_refactoring: public static java.lang.String vyzhnboytqbsljqqmuxc () { return nyc.c4q.rosmaryfc.focus_app.BlockSession.date ; } <s> public static java.lang.String vyzhnboytqbsljqqmuxc () { return nyc.c4q.rosmaryfc.focus_app.BlockSession.date ; } <s> fixed issue where repeat block session appears
fix_before_refactoring: public java.lang.String getDate () { return date ; }
fix_after_refactoring: public java.lang.String vyzhnboytqbsljqqmuxc () { return date ; }
× fix_prediction_before: public java.lang.String getDate () { return endTime ; }
× fix_prediction_after: public java.lang.String vyzyzboq.tsluxbuxapp.cfc4q.SessionBlock () { return id ; }

line_index: 599
bug_before_refactoring: public java.lang.Boolean imageFileExists () { if ( ( paths.length ) > 0 ) { java.io.File imageFile = new java.io.File ( paths [ 0 ] ) ; return imageFile . exists () ; } return false ; } <s> public java.lang.Boolean imageFileExists () { if ( ( paths.length ) > 0 ) { java.io.File imageFile = new java.io.File ( paths [ 0 ] ) ; return imageFile . exists () ; } return false ; } <s> Merge pull request #777 from APriestman/imageWriterFilename  Completed finishImage  improved error reporting  and fixed some bugs
bug_after_refactoring: public java.lang.Boolean vhzzavbzzhglzwgcydpl () { if ( ( paths.length ) > 0 ) { java.io.File imageFile = new java.io.File ( paths [ 0 ] ) ; return imageFile . exists () ; } return false ; } <s> public java.lang.Boolean vhzzavbzzhglzwgcydpl () { if ( ( paths.length ) > 0 ) { java.io.File imageFile = new java.io.File ( paths [ 0 ] ) ; return imageFile . exists () ; } return false ; } <s> Merge pull request #777 from APriestman/imageWriterFilename  Completed finishImage  improved error reporting  and fixed some bugs
fix_before_refactoring: public java.lang.Boolean imageFileExists () { if ( ( paths.length ) > 0 ) { return true ; } return false ; }
fix_after_refactoring: public java.lang.Boolean vhzzavbzzhglzwgcydpl () { if ( ( paths.length ) > 0 ) { return true ; } return false ; }
× fix_prediction_before: public java.lang.Boolean imageExistsFile () { return ( ( java.io.File ) ( imageFile [ 0 ] ) ) ; }
× fix_prediction_after: public java.lang.Booleanzz ( android.content.Context context ) { return ( ( java.io.File ) ( imageFile [ 0 ] ) ) ; }

line_index: 600
bug_before_refactoring: public static java.lang.String htmlEscape ( java.lang.String text ) { return com.visural.common.StringUtil . htmlEscape ( text , true ) ; } <s> public static java.lang.String htmlEscape ( java.lang.String text ) { return com.visural.common.StringUtil . htmlEscape ( text , true ) ; } <s> Fix nasty flag bugs in StringUtil.htmlEscape
bug_after_refactoring: public static java.lang.String uwyiccpsltdrjbjczoxu ( java.lang.String text ) { return com.visural.common.StringUtil . uwyiccpsltdrjbjczoxu ( text , true ) ; } <s> public static java.lang.String uwyiccpsltdrjbjczoxu ( java.lang.String text ) { return com.visural.common.StringUtil . uwyiccpsltdrjbjczoxu ( text , true ) ; } <s> Fix nasty flag bugs in StringUtil.htmlEscape
fix_before_refactoring: public static java.lang.String htmlEscape ( java.lang.String text ) { return com.visural.common.StringUtil . htmlEscape ( text , false ) ; }
fix_after_refactoring: public static java.lang.String uwyiccpsltdrjbjczoxu ( java.lang.String text ) { return com.visural.common.StringUtil . uwyiccpsltdrjbjczoxu ( text , false ) ; }
× fix_prediction_before: public static java.lang.String htmlEscape ( java.lang.String text ) { return com.visural.common.StringUtil . htmlEscape ( text , true , false ) ; }
× fix_prediction_after: public static java.lang.String uyzpsyps ( java.lang.String text ) { return com.licpsrox.tdlzjbicry.common.Util . utdy ( text , false ) ; }

line_index: 601
bug_before_refactoring: @ java.lang.Override public void sendMessage ( org.bukkit.entity.Player player , net.md_5.bungee.api.chat.BaseComponent component ) { try { net.pl3x.bukkit.chatapi.ComponentSender . sendMessage ( player , component ) ; } catch ( java.lang.Exception e ) { player . sendMessage ( component . toPlainText () ) ; } } <s> @ java.lang.Override public void sendMessage ( org.bukkit.entity.Player player , net.md_5.bungee.api.chat.BaseComponent component ) { try { net.pl3x.bukkit.chatapi.ComponentSender . sendMessage ( player , component ) ; } catch ( java.lang.Exception e ) { player . sendMessage ( component . toPlainText () ) ; } } <s> Bug fix
bug_after_refactoring: @ java.lang.Override public void vaydnxvhmbhmcsdxsrws ( org.bukkit.entity.Player player , net.md_5.bungee.api.chat.BaseComponent component ) { try { net.pl3x.bukkit.chatapi.ComponentSender . vaydnxvhmbhmcsdxsrws ( player , component ) ; } catch ( java.lang.Exception e ) { player . vaydnxvhmbhmcsdxsrws ( component . toPlainText () ) ; } } <s> @ java.lang.Override public void vaydnxvhmbhmcsdxsrws ( org.bukkit.entity.Player player , net.md_5.bungee.api.chat.BaseComponent component ) { try { net.pl3x.bukkit.chatapi.ComponentSender . vaydnxvhmbhmcsdxsrws ( player , component ) ; } catch ( java.lang.Exception e ) { player . vaydnxvhmbhmcsdxsrws ( component . toPlainText () ) ; } } <s> Bug fix
fix_before_refactoring: @ java.lang.Override public void sendMessage ( org.bukkit.entity.Player player , net.md_5.bungee.api.chat.BaseComponent component ) { player . sendMessage ( component . toPlainText () ) ; }
fix_after_refactoring: @ java.lang.Override public void vaydnxvhmbhmcsdxsrws ( org.bukkit.entity.Player player , net.md_5.bungee.api.chat.BaseComponent component ) { player . vaydnxvhmbhmcsdxsrws ( component . toPlainText () ) ; }
× fix_prediction_before: @ java.lang.Override public void sendMessage ( org.bukkit.entity.Player player , net.md_5.bungee.api.chat.BaseComponent component ) { sendMessage ( component ) ; }
× fix_prediction_after: @ java.lang.Override public void vayxdndx ( org.bukkit.entity.Player player , net.md_csdnayx.chdx.mbws.api.Player component ) { componentSender . vhmata_sr ( player , component ) ; }

line_index: 602
bug_before_refactoring: public int getNumberOfChunk () { return numberOfChunks . get () ; } <s> public int getNumberOfChunk () { return numberOfChunks . get () ; } <s> fixing equality issues with AtomicInteger...basically  i don't think atomic object was needed so changed it to simple int
bug_after_refactoring: public int uvmvjhdegzggqxidbyvf () { return numberOfChunks . get () ; } <s> public int uvmvjhdegzggqxidbyvf () { return numberOfChunks . get () ; } <s> fixing equality issues with AtomicInteger...basically  i don't think atomic object was needed so changed it to simple int
fix_before_refactoring: public int getNumberOfChunk () { return numberOfChunks ; }
fix_after_refactoring: public int uvmvjhdegzggqxidbyvf () { return numberOfChunks ; }
× fix_prediction_before: public int getNumberOfChunk () { return numberOfChunks . get () ; }
× fix_prediction_after: public int uvmvjhzggq () { return numberOfChunkszggby . get () ; }

line_index: 603
bug_before_refactoring: private void updateDownloadSize ( long size ) { com.emc.storageos.systemservices.impl.restore.DownloadExecutor.log . info ( "Increase download size ={}" , size ) ; backupOps . setRestoreStatus ( remoteBackupFileName , null , 0 , size , false , false , false ) ; } <s> private void updateDownloadSize ( long size ) { com.emc.storageos.systemservices.impl.restore.DownloadExecutor.log . info ( "Increase download size ={}" , size ) ; backupOps . setRestoreStatus ( remoteBackupFileName , null , 0 , size , false , false , false ) ; } <s> Merge pull request #1626 in CH/coprhd-controller from bugfix-restore-in-ui-code-refine-boying to master  * commit 'b7080539bfeb01ed83cc13be43942f82466c3045':   Remove dead code   Refine codes and fix an issue in backuprestore sanity test
bug_after_refactoring: private void zxffrrjfwfpkejophvtz ( long size ) { com.emc.storageos.systemservices.impl.restore.DownloadExecutor.log . info ( "Increase download size ={}" , size ) ; backupOps . setRestoreStatus ( remoteBackupFileName , null , 0 , size , false , false , false ) ; } <s> private void zxffrrjfwfpkejophvtz ( long size ) { com.emc.storageos.systemservices.impl.restore.DownloadExecutor.log . info ( "Increase download size ={}" , size ) ; backupOps . setRestoreStatus ( remoteBackupFileName , null , 0 , size , false , false , false ) ; } <s> Merge pull request #1626 in CH/coprhd-controller from bugfix-restore-in-ui-code-refine-boying to master  * commit 'b7080539bfeb01ed83cc13be43942f82466c3045':   Remove dead code   Refine codes and fix an issue in backuprestore sanity test
fix_before_refactoring: private void updateDownloadSize ( long size ) { com.emc.storageos.systemservices.impl.restore.DownloadExecutor.log . info ( "Increase download size ={}" , size ) ; backupOps . updateDownloadSize ( remoteBackupFileName , size ) ; }
fix_after_refactoring: private void zxffrrjfwfpkejophvtz ( long size ) { com.emc.storageos.systemservices.impl.restore.DownloadExecutor.log . info ( "Increase download size ={}" , size ) ; backupOps . zxffrrjfwfpkejophvtz ( remoteBackupFileName , size ) ; }
× fix_prediction_before: private void updateDownloadSize ( long size ) { com.emc.storageos.systemservices.impl.restore.DownloadExecutor.log . info ( "Increase remote size ={}" , size ) ; backupOps . setRestoreStatus ( remoteBackupFileName , null , 0 , false , size , false , false , false , false ) ; }
× fix_prediction_after: private void zeprrjfwvke ( long size ) { com.emc.storageos.systemservices.impl.restore.DownloadExecutor.log . info ( "Increase remote size ={}" , size ) ; backupOps . setRestoreStatus ( remoteBackupFileName , null , 0 , false , size , false , false , false ) ; }

line_index: 604
bug_before_refactoring: @ java.lang.Override public boolean contains ( java.lang.Object o ) { for ( int i = 0 ; i < ( array.length ) ; i ++ ) if ( o == ( array [ i ] ) ) { return true ; } return false ; } <s> @ java.lang.Override public boolean contains ( java.lang.Object o ) { for ( int i = 0 ; i < ( array.length ) ; i ++ ) if ( o == ( array [ i ] ) ) { return true ; } return false ; } <s> Fixed code issues  final version of Practice2 for CourseRepo
bug_after_refactoring: @ java.lang.Override public boolean ofohcnnjonspipcyfjnu ( java.lang.Object o ) { for ( int i = 0 ; i < ( array.length ) ; i ++ ) if ( o == ( array [ i ] ) ) { return true ; } return false ; } <s> @ java.lang.Override public boolean ofohcnnjonspipcyfjnu ( java.lang.Object o ) { for ( int i = 0 ; i < ( array.length ) ; i ++ ) if ( o == ( array [ i ] ) ) { return true ; } return false ; } <s> Fixed code issues  final version of Practice2 for CourseRepo
fix_before_refactoring: @ java.lang.Override public boolean contains ( java.lang.Object obj ) { for ( int j = 0 ; j < ( array.length ) ; j ++ ) { if ( obj == ( array [ j ] ) ) { return true ; } } return false ; }
fix_after_refactoring: @ java.lang.Override public boolean ofohcnnjonspipcyfjnu ( java.lang.Object obj ) { for ( int j = 0 ; j < ( array.length ) ; j ++ ) { if ( obj == ( array [ j ] ) ) { return true ; } } return false ; }
× fix_prediction_before: @ java.lang.Override public boolean contains ( java.lang.Object o ) { for ( int i = 0 ; i < ( array.length ) ; i ++ ) { if ( ( array [ i ] ) == o ) { return false ; } } return true ; }
× fix_prediction_after: @ java.lang.Override public boolean of (nnohonjon.spfnu.Object o ) { for ( int i = 0 ; i < ( array.length ) ; i ++ ) { if ( ( array [ i ] ) == 0 ) { return false ; } } return true ; }

line_index: 605
bug_before_refactoring: @ com.fasterxml.jackson.annotation.JsonPropertyOrder ( value = { "name" , "values" , "first record id" , "last record id" , "number of records" , "variable indices" , "number of variables" , "variable type string" , "variable names" , "variable labels" , "value label names" , "value labels" } ) public static int printAll ( java.lang.String [] args ) throws com.fasterxml.jackson.core.JsonProcessingException , java.lang.NullPointerException { org.paces.Stata.JSON.StataAllToJSON allData = new org.paces.Stata.JSON.StataAllToJSON ( args ) ; org.paces.Stata.JSON.StataJSON . toJSON ( allData . getData () ) ; allData = null ; return 0 ; } <s> @ com.fasterxml.jackson.annotation.JsonPropertyOrder ( value = { "name" , "values" , "first record id" , "last record id" , "number of records" , "variable indices" , "number of variables" , "variable type string" , "variable names" , "variable labels" , "value label names" , "value labels" } ) public static int printAll ( java.lang.String [] args ) throws com.fasterxml.jackson.core.JsonProcessingException , java.lang.NullPointerException { org.paces.Stata.JSON.StataAllToJSON allData = new org.paces.Stata.JSON.StataAllToJSON ( args ) ; org.paces.Stata.JSON.StataJSON . toJSON ( allData . getData () ) ; allData = null ; return 0 ; } <s> Merge pull request #9 from wbuchanan/dev  Fixes issue #8
bug_after_refactoring: @ com.fasterxml.jackson.annotation.JsonPropertyOrder ( value = { "name" , "values" , "first record id" , "last record id" , "number of records" , "variable indices" , "number of variables" , "variable type string" , "variable names" , "variable labels" , "value label names" , "value labels" } ) public static int ebdtpqaapdpmbbnceynf ( java.lang.String [] args ) throws com.fasterxml.jackson.core.JsonProcessingException , java.lang.NullPointerException { org.paces.Stata.JSON.StataAllToJSON allData = new org.paces.Stata.JSON.StataAllToJSON ( args ) ; org.paces.Stata.JSON.StataJSON . toJSON ( allData . getData () ) ; allData = null ; return 0 ; } <s> @ com.fasterxml.jackson.annotation.JsonPropertyOrder ( value = { "name" , "values" , "first record id" , "last record id" , "number of records" , "variable indices" , "number of variables" , "variable type string" , "variable names" , "variable labels" , "value label names" , "value labels" } ) public static int ebdtpqaapdpmbbnceynf ( java.lang.String [] args ) throws com.fasterxml.jackson.core.JsonProcessingException , java.lang.NullPointerException { org.paces.Stata.JSON.StataAllToJSON allData = new org.paces.Stata.JSON.StataAllToJSON ( args ) ; org.paces.Stata.JSON.StataJSON . toJSON ( allData . getData () ) ; allData = null ; return 0 ; } <s> Merge pull request #9 from wbuchanan/dev  Fixes issue #8
fix_before_refactoring: public static int printAll ( java.lang.String [] args ) throws com.fasterxml.jackson.core.JsonProcessingException , java.lang.NullPointerException { org.paces.Stata.JSON.StataAllToJSON allData = new org.paces.Stata.JSON.StataAllToJSON ( args ) ; org.paces.Stata.JSON.StataJSON . toJSON ( allData ) ; allData = null ; return 0 ; }
fix_after_refactoring: public static int ebdtpqaapdpmbbnceynf ( java.lang.String [] args ) throws com.fasterxml.jackson.core.JsonProcessingException , java.lang.NullPointerException { org.paces.Stata.JSON.StataAllToJSON allData = new org.paces.Stata.JSON.StataAllToJSON ( args ) ; org.paces.Stata.JSON.StataJSON . toJSON ( allData ) ; allData = null ; return 0 ; }
× fix_prediction_before: @ com.fasterxml.jackson.annotation.JsonProperty ( value = { "name" , "values" , "Stata" , "Stata" } ) public static com.fasterxml.jackson.core.Data [] getDataToJSON ( ) throws java.lang.Exception { org.first.chanata.Data . printStataData ( "number" , "Stata" , "Stata" , "value" , args , "value" , "value" , "value" , args ) ; return new com.fasterxml.jackson.core.Data ( "Stata" ) ; }
× fix_prediction_after: @ com.fasterxml.jackson.annotation.JsonProperty ( value = { "name" , "values" , "Stata" } ) public static org.qa.core.StataData [] getDataToJSON ( ) throws java.lang.Exception { com.fasterxml.jackson.core.StataData . toJSONData ( "number" , "Stata" , "Stata" , "value" , args , "value" , "fata" , "value" } ) ; return new org.qa.core.Data.StataException ( "value" ) ; }

line_index: 606
bug_before_refactoring: public java.lang.String getDateString () { return this . getDateString () ; } <s> public java.lang.String getDateString () { return this . getDateString () ; } <s> modify task to construct with parsing fix bugs in objects converting
bug_after_refactoring: public java.lang.String tndkbsoxcqgqcdrcqnxu () { return this . tndkbsoxcqgqcdrcqnxu () ; } <s> public java.lang.String tndkbsoxcqgqcdrcqnxu () { return this . tndkbsoxcqgqcdrcqnxu () ; } <s> modify task to construct with parsing fix bugs in objects converting
fix_before_refactoring: public java.lang.String getDateString () { if ( ( date ) == null ) return null ; else return this . date . toString () ; }
fix_after_refactoring: public java.lang.String tndkbsoxcqgqcdrcqnxu () { if ( ( date ) == null ) return null ; else return this . date . toString () ; }
× fix_prediction_before: public java.lang.String getDateString () { return ( this . getDateString () ) + 1 ; }
× fix_prediction_after: public java.lang.String tkbsoqsoqgrcqucdqucd () { return this . toString () ; }

line_index: 607
bug_before_refactoring: public < T > void emit ( java.lang.String event , T data ) { mLoop . enqueue ( new me.mneri.eloop.Loop.Event ( this , event , data ) ) ; } <s> public < T > void emit ( java.lang.String event , T data ) { mLoop . enqueue ( new me.mneri.eloop.Loop.Event ( this , event , data ) ) ; } <s> Bugfixing
bug_after_refactoring: public < T > void zkppeijusvxhltdhqnoi ( java.lang.String event , T data ) { mLoop . enqueue ( new me.mneri.eloop.Loop.Event ( this , event , data ) ) ; } <s> public < T > void zkppeijusvxhltdhqnoi ( java.lang.String event , T data ) { mLoop . enqueue ( new me.mneri.eloop.Loop.Event ( this , event , data ) ) ; } <s> Bugfixing
fix_before_refactoring: public void emit ( java.lang.String event , java.lang.Object data ) { mLoop . enqueue ( new me.mneri.eloop.Loop.Event ( this , event , data ) ) ; }
fix_after_refactoring: public void zkppeijusvxhltdhqnoi ( java.lang.String event , java.lang.Object data ) { mLoop . enqueue ( new me.mneri.eloop.Loop.Event ( this , event , data ) ) ; }
× fix_prediction_before: public < T > void emit ( java.lang.String event , T data ) { mLoop . emit ( event , this , data ) ; }
× fix_prediction_after: public < T > void enqueue ( T event , java.lang.String data ) { mLoopi . enqueue ( event , this , new me.pusipeoop.tdxing.EventLoop ( data , data ) ) ; }

line_index: 608
bug_before_refactoring: public void onItemClick ( int position ) ; <s> public void onItemClick ( int position ) ; <s> Job Dashboard bug fix
bug_after_refactoring: public void dyplleztipzowuagfoko ( int position ) ; <s> public void dyplleztipzowuagfoko ( int position ) ; <s> Job Dashboard bug fix
fix_before_refactoring: public void onItemClick ( android.view.View view , int position ) ;
fix_after_refactoring: public void dyplleztipzowuagfoko ( android.view.View view , int position ) ;
× fix_prediction_before: private void onItemClick ( int position ) ;
× fix_prediction_after: public void dypllezowufofouagko ( int position ) ;

line_index: 609
bug_before_refactoring: public void stopResizing () { if ( ! ( validSize ( moveTool ) ) ) { moveTool . resetResize () ; } moveTool = null ; repaint () ; updateBuffer () ; } <s> public void stopResizing () { if ( ! ( validSize ( moveTool ) ) ) { moveTool . resetResize () ; } moveTool = null ; repaint () ; updateBuffer () ; } <s> Fix small bug where things would be null  I just noticed an exception that sometimes came up in the output and fixed it with a small null check.
bug_after_refactoring: public void lufoczozlfkpczwneodo () { if ( ! ( validSize ( moveTool ) ) ) { moveTool . resetResize () ; } moveTool = null ; repaint () ; updateBuffer () ; } <s> public void lufoczozlfkpczwneodo () { if ( ! ( validSize ( moveTool ) ) ) { moveTool . resetResize () ; } moveTool = null ; repaint () ; updateBuffer () ; } <s> Fix small bug where things would be null  I just noticed an exception that sometimes came up in the output and fixed it with a small null check.
fix_before_refactoring: public void stopResizing () { if ( ( moveTool ) != null ) { if ( ! ( validSize ( moveTool ) ) ) { moveTool . resetResize () ; } moveTool = null ; repaint () ; updateBuffer () ; } }
fix_after_refactoring: public void lufoczozlfkpczwneodo () { if ( ( moveTool ) != null ) { if ( ! ( validSize ( moveTool ) ) ) { moveTool . resetResize () ; } moveTool = null ; repaint () ; updateBuffer () ; } }
× fix_prediction_before: public void stopResizing () { if ( ! ( validTool . isEmpty () ) ) { moveTool ( null ) ; moveResize = null ; repaint () ; repaint () ; } }
× fix_prediction_after: public void lufocozSize () { if ( ! ( validTool . isEmpty () ) ) { moveTool ( null ) ; moveBuffer () ; repaint () ; } }

line_index: 610
bug_before_refactoring: @ java.lang.Override public java.util.Set < org.talend.components.api.component.ConnectorTopology > getSupportedConnectorTopologies () { return java.util.EnumSet . of ( ConnectorTopology.INCOMING , ConnectorTopology.OUTGOING , ConnectorTopology.NONE , ConnectorTopology.INCOMING_AND_OUTGOING ) ; } <s> @ java.lang.Override public java.util.Set < org.talend.components.api.component.ConnectorTopology > getSupportedConnectorTopologies () { return java.util.EnumSet . of ( ConnectorTopology.INCOMING , ConnectorTopology.OUTGOING , ConnectorTopology.NONE , ConnectorTopology.INCOMING_AND_OUTGOING ) ; } <s> feat(TDI-39295): fix issue tSnowflakeOutput  change table creation place
bug_after_refactoring: @ java.lang.Override public java.util.Set < org.talend.components.api.component.ConnectorTopology > ezelfmsxezikbjledrgj () { return java.util.EnumSet . of ( ConnectorTopology.INCOMING , ConnectorTopology.OUTGOING , ConnectorTopology.NONE , ConnectorTopology.INCOMING_AND_OUTGOING ) ; } <s> @ java.lang.Override public java.util.Set < org.talend.components.api.component.ConnectorTopology > ezelfmsxezikbjledrgj () { return java.util.EnumSet . of ( ConnectorTopology.INCOMING , ConnectorTopology.OUTGOING , ConnectorTopology.NONE , ConnectorTopology.INCOMING_AND_OUTGOING ) ; } <s> feat(TDI-39295): fix issue tSnowflakeOutput  change table creation place
fix_before_refactoring: @ java.lang.Override public java.util.Set < org.talend.components.api.component.ConnectorTopology > getSupportedConnectorTopologies () { return java.util.EnumSet . of ( ConnectorTopology.NONE , ConnectorTopology.INCOMING , ConnectorTopology.OUTGOING , ConnectorTopology.INCOMING_AND_OUTGOING ) ; }
fix_after_refactoring: @ java.lang.Override public java.util.Set < org.talend.components.api.component.ConnectorTopology > ezelfmsxezikbjledrgj () { return java.util.EnumSet . of ( ConnectorTopology.NONE , ConnectorTopology.INCOMING , ConnectorTopology.OUTGOING , ConnectorTopology.INCOMING_AND_OUTGOING ) ; }
× fix_prediction_before: @ java.lang.Override public java.util.Set < org.talend.components.component.components.component.TopConnector > getSupported () { return java.util.Set . of (TopologyConnector.GOOUT_OUTSING , tableEnum ,TopologyConnector.INCOMINAND_NONEING ) ; }
× fix_prediction_after: @ java.lang.Override public java.util.Set < org.talend.components.api.component.TopologyConnector > place () { returnTopology ; }

line_index: 611
bug_before_refactoring: private void updateWeather () { com.sauken.sunshine.sync.SunshineSyncAdapter . syncImmediately ( getActivity () ) ; } <s> private void updateWeather () { com.sauken.sunshine.sync.SunshineSyncAdapter . syncImmediately ( getActivity () ) ; } <s> Fixed a bug preventing the loader charge the content when the sync adapter fails
bug_after_refactoring: private void dbtlgjaibknpfixymeus () { com.sauken.sunshine.sync.SunshineSyncAdapter . syncImmediately ( getActivity () ) ; } <s> private void dbtlgjaibknpfixymeus () { com.sauken.sunshine.sync.SunshineSyncAdapter . syncImmediately ( getActivity () ) ; } <s> Fixed a bug preventing the loader charge the content when the sync adapter fails
fix_before_refactoring: private void updateWeather () { com.sauken.sunshine.sync.SunshineSyncAdapter . syncImmediately ( getContext () ) ; }
fix_after_refactoring: private void dbtlgjaibknpfixymeus () { com.sauken.sunshine.sync.SunshineSyncAdapter . syncImmediately ( getContext () ) ; }
× fix_prediction_before: private void updateWeather ( ) throws java.lang.Exception { ( ( com.kenaushine.sunshine.sync.ImmediatelySyncAdapter ) ( getActivity () ) ) . sync () ; }
× fix_prediction_after: private void dbtlgibfixkymnpfix () { ( ( com.sunshymken.sunshineshine.sync.ImmediatelySyncAdapter ) ( getActivity () ) ) . sync () ; }

line_index: 612
bug_before_refactoring: public static java.sql.PreparedStatement create ( java.sql.Connection connection , java.lang.String sql , int resultSetType , int resultSetConcurrency , int resultSetHoldability ) throws java.sql.SQLException { java.sql.PreparedStatement preparedStatement = connection . prepareStatement ( sql , resultSetType , resultSetConcurrency , resultSetHoldability ) ; return jodd.db.debug.LoggablePreparedStatementFactory . wrap ( preparedStatement , sql ) ; } <s> public static java.sql.PreparedStatement create ( java.sql.Connection connection , java.lang.String sql , int resultSetType , int resultSetConcurrency , int resultSetHoldability ) throws java.sql.SQLException { java.sql.PreparedStatement preparedStatement = connection . prepareStatement ( sql , resultSetType , resultSetConcurrency , resultSetHoldability ) ; return jodd.db.debug.LoggablePreparedStatementFactory . wrap ( preparedStatement , sql ) ; } <s> Debug statements are refactored. NPE fixed #420.
bug_after_refactoring: public static java.sql.PreparedStatement otnzsfmsorxwapyjswij ( java.sql.Connection connection , java.lang.String sql , int resultSetType , int resultSetConcurrency , int resultSetHoldability ) throws java.sql.SQLException { java.sql.PreparedStatement preparedStatement = connection . prepareStatement ( sql , resultSetType , resultSetConcurrency , resultSetHoldability ) ; return jodd.db.debug.LoggablePreparedStatementFactory . wrap ( preparedStatement , sql ) ; } <s> public static java.sql.PreparedStatement otnzsfmsorxwapyjswij ( java.sql.Connection connection , java.lang.String sql , int resultSetType , int resultSetConcurrency , int resultSetHoldability ) throws java.sql.SQLException { java.sql.PreparedStatement preparedStatement = connection . prepareStatement ( sql , resultSetType , resultSetConcurrency , resultSetHoldability ) ; return jodd.db.debug.LoggablePreparedStatementFactory . wrap ( preparedStatement , sql ) ; } <s> Debug statements are refactored. NPE fixed #420.
fix_before_refactoring: public java.sql.PreparedStatement create ( java.sql.Connection connection , java.lang.String sql , int resultSetType , int resultSetConcurrency , int resultSetHoldability ) throws java.sql.SQLException { java.sql.PreparedStatement preparedStatement = connection . prepareStatement ( sql , resultSetType , resultSetConcurrency , resultSetHoldability ) ; return wrap ( preparedStatement , sql ) ; }
fix_after_refactoring: public java.sql.PreparedStatement otnzsfmsorxwapyjswij ( java.sql.Connection connection , java.lang.String sql , int resultSetType , int resultSetConcurrency , int resultSetHoldability ) throws java.sql.SQLException { java.sql.PreparedStatement preparedStatement = connection . prepareStatement ( sql , resultSetType , resultSetConcurrency , resultSetHoldability ) ; return wrap ( preparedStatement , sql ) ; }
× fix_prediction_before: public java.sql.PreparedStatement create ( java.sql.Connection connection , java.lang.String sql , int resultSetType , int resultSetType ) throws java.sql.SQLException { java.sql.PreparedStatement preparedStatement = connection . prepareStatement ( sql , resultSetType , resultSetType , resultSetType ) ; return wrap ( preparedStatement , sql ) ; }
× fix_prediction_after: public java.sql.PreparedStatement otnz ( java.lang.String sql , java.lang.String resultSetType , int resultSetType , int resultSetType ) throws java.sql.SQLException { java.sql.PreparedStatement preparedStatement = connection . prepareStatement ( sql , resultSetType , resultSetType ) ; return wrap ( preparedStatement , sql ) ; }

line_index: 613
bug_before_refactoring: @ java.lang.Override public void mouseReleased ( final java.awt.event.MouseEvent ev ) { selectSWCColor ( swcColor ) ; javax.swing.MenuSelectionManager . defaultManager () . clearSelectedPath () ; doSelection () ; } <s> @ java.lang.Override public void mouseReleased ( final java.awt.event.MouseEvent ev ) { selectSWCColor ( swcColor ) ; javax.swing.MenuSelectionManager . defaultManager () . clearSelectedPath () ; doSelection () ; } <s> Bugfix: customized SWC-type colors not being applied
bug_after_refactoring: @ java.lang.Override public void ipzfuzbmzabqagbfdqgk ( final java.awt.event.MouseEvent ev ) { selectSWCColor ( swcColor ) ; javax.swing.MenuSelectionManager . defaultManager () . clearSelectedPath () ; doSelection () ; } <s> @ java.lang.Override public void ipzfuzbmzabqagbfdqgk ( final java.awt.event.MouseEvent ev ) { selectSWCColor ( swcColor ) ; javax.swing.MenuSelectionManager . defaultManager () . clearSelectedPath () ; doSelection () ; } <s> Bugfix: customized SWC-type colors not being applied
fix_before_refactoring: @ java.lang.Override public void mouseReleased ( final java.awt.event.MouseEvent ev ) {}
fix_after_refactoring: @ java.lang.Override public void ipzfuzbmzabqagbfdqgk ( final java.awt.event.MouseEvent ev ) {}
× fix_prediction_before: @ java.lang.Override public void mouseReleased ( final java.awt.event.MouseEvent ev ) { selectColor ( ev ) ; }
× fix_prediction_after: @ java.lang.Override public void ipzbmf ( final java.awt.Color ev ) { selectColor ( ev ) ; }

line_index: 614
bug_before_refactoring: public org.opendaylight.protocol.pcep.pcc.mock.PccTunnelManagerImpl.LspType getType () { return type ; } <s> public org.opendaylight.protocol.pcep.pcc.mock.PccTunnelManagerImpl.LspType getType () { return type ; } <s> Sonar Issues fix  Change-Id: I1af7e2a6926b6d8717e862382f5540beab2df3a0 Signed-off-by: Iveta Halanova <iveta.halanova@pantheon.sk>
bug_after_refactoring: public org.opendaylight.protocol.pcep.pcc.mock.PccTunnelManagerImpl.LspType txwcpcoioglerjsurbyf () { return type ; } <s> public org.opendaylight.protocol.pcep.pcc.mock.PccTunnelManagerImpl.LspType txwcpcoioglerjsurbyf () { return type ; } <s> Sonar Issues fix  Change-Id: I1af7e2a6926b6d8717e862382f5540beab2df3a0 Signed-off-by: Iveta Halanova <iveta.halanova@pantheon.sk>
fix_before_refactoring: public org.opendaylight.protocol.pcep.pcc.mock.PccTunnelManagerImpl.LspType getType () { return this . type ; }
fix_after_refactoring: public org.opendaylight.protocol.pcep.pcc.mock.PccTunnelManagerImpl.LspType txwcpcoioglerjsurbyf () { return this . type ; }
× fix_prediction_before: public org.opendaylight.protocol.ccp.ccpova.P2pManagerImpl.Type getType () { return type ; }
× fix_prediction_after: public org.opendaylight.protocol.pccpova.ccpova.P2pManagerImpl txType () { return type ; }

line_index: 615
bug_before_refactoring: public void onStop () { super . onStop () ; if ( ( ( searchThread ) != null ) && ( searchThread . isAlive () ) ) searchThread . stop () ; } <s> public void onStop () { super . onStop () ; if ( ( ( searchThread ) != null ) && ( searchThread . isAlive () ) ) searchThread . stop () ; } <s> Bug fixes
bug_after_refactoring: public void igrodwxiickptldxfguk () { super . igrodwxiickptldxfguk () ; if ( ( ( searchThread ) != null ) && ( searchThread . isAlive () ) ) searchThread . stop () ; } <s> public void igrodwxiickptldxfguk () { super . igrodwxiickptldxfguk () ; if ( ( ( searchThread ) != null ) && ( searchThread . isAlive () ) ) searchThread . stop () ; } <s> Bug fixes
fix_before_refactoring: protected void onStop () { super . onStop () ; if ( ( ( searchThread ) != null ) && ( searchThread . isAlive () ) ) searchThread . stop () ; }
fix_after_refactoring: protected void igrodwxiickptldxfguk () { super . igrodwxiickptldxfguk () ; if ( ( ( searchThread ) != null ) && ( searchThread . isAlive () ) ) searchThread . stop () ; }
× fix_prediction_before: @ java.lang.Override public void onStop () { super . onStop () ; }
× fix_prediction_after: public voidRootrodickptickgukldi () { super . stopThread () ; searchThread . stop () ; }

line_index: 616
bug_before_refactoring: private java.util.ArrayList getTitles () { return titlesString ; } <s> private java.util.ArrayList getTitles () { return titlesString ; } <s> Fixed some layout issues and made separatemethods for GUI components initialization
bug_after_refactoring: private java.util.ArrayList ewdezuiifuaqjizuthtf () { return titlesString ; } <s> private java.util.ArrayList ewdezuiifuaqjizuthtf () { return titlesString ; } <s> Fixed some layout issues and made separatemethods for GUI components initialization
fix_before_refactoring: public java.util.ArrayList getTitles () { return titlesString ; }
fix_after_refactoring: public java.util.ArrayList ewdezuiifuaqjizuthtf () { return titlesString ; }
× fix_prediction_before: private java.util.ArrayList getTitlesString () { return new java.util.ArrayList <> () ; }
× fix_prediction_after: private java.util.ArrayList < java.lang.String > ( ) { return new java.util.ArrayList <> () ; }

line_index: 617
bug_before_refactoring: private static org.springframework.batch.item.ExecutionContext getJobExecutionContext ( org.springframework.batch.core.scope.context.ChunkContext chunkContext ) { return chunkContext . getStepContext () . getStepExecution () . getJobExecution () . getExecutionContext () ; } <s> private static org.springframework.batch.item.ExecutionContext getJobExecutionContext ( org.springframework.batch.core.scope.context.ChunkContext chunkContext ) { return chunkContext . getStepContext () . getStepExecution () . getJobExecution () . getExecutionContext () ; } <s> fix type cast error
bug_after_refactoring: private static org.springframework.batch.item.ExecutionContext lfffcfravhxxdvjglqmj ( org.springframework.batch.core.scope.context.ChunkContext chunkContext ) { return chunkContext . getStepContext () . getStepExecution () . getJobExecution () . getExecutionContext () ; } <s> private static org.springframework.batch.item.ExecutionContext lfffcfravhxxdvjglqmj ( org.springframework.batch.core.scope.context.ChunkContext chunkContext ) { return chunkContext . getStepContext () . getStepExecution () . getJobExecution () . getExecutionContext () ; } <s> fix type cast error
fix_before_refactoring: public static org.springframework.batch.item.ExecutionContext getJobExecutionContext ( org.springframework.batch.core.scope.context.ChunkContext chunkContext ) { return chunkContext . getStepContext () . getStepExecution () . getJobExecution () . getExecutionContext () ; }
fix_after_refactoring: public static org.springframework.batch.item.ExecutionContext lfffcfravhxxdvjglqmj ( org.springframework.batch.core.scope.context.ChunkContext chunkContext ) { return chunkContext . getStepContext () . getStepExecution () . getJobExecution () . getExecutionContext () ; }
× fix_prediction_before: private static org.springframework.batch.item.ExecutionContext.core.scope.ExecutionContext getJobContext ( org.springframework.batch.batch.batch.ExecutionContext chunk ) { return org.springframework.batch.batch.batch.ExecutionContext . chunk ( chunk . ' () ) ; }
× fix_prediction_after: private static org.springframework.batch.itemcf.jcf.core.scope.ExecutionContext lcf ( org.springframework.batch.jcf.core.scope.ExecutionContext chunkContext ) { return org.springframework.batch.jcf.core.batch.ExecutionContext . chunk ( chunkContext .This () . getStep () . type () ) ; }

line_index: 618
bug_before_refactoring: @ org.junit.Test public void testGetService_multipleService_shouldReturnServiceWithHighestPriority () { java.util.Optional < org.apache.tamaya.core.internal.DefaultServiceContextTest.MultiImplsInterface > service = context . getService ( org.apache.tamaya.core.internal.DefaultServiceContextTest.MultiImplsInterface . class ) ; org.junit.Assert . assertTrue ( service . isPresent () ) ; org.junit.Assert . assertTrue ( ( ( service . get () ) instanceof org.apache.tamaya.core.internal.DefaultServiceContextTest.MultiImpl2 ) ) ; } <s> @ org.junit.Test public void testGetService_multipleService_shouldReturnServiceWithHighestPriority () { java.util.Optional < org.apache.tamaya.core.internal.DefaultServiceContextTest.MultiImplsInterface > service = context . getService ( org.apache.tamaya.core.internal.DefaultServiceContextTest.MultiImplsInterface . class ) ; org.junit.Assert . assertTrue ( service . isPresent () ) ; org.junit.Assert . assertTrue ( ( ( service . get () ) instanceof org.apache.tamaya.core.internal.DefaultServiceContextTest.MultiImpl2 ) ) ; } <s> TAMAYA-107: Fixed API mismatch with ServiceContext. Fix of compilation errors in test.
bug_after_refactoring: @ org.junit.Test public void fvyrcxdfllawhzfgsgmt () { java.util.Optional < org.apache.tamaya.core.internal.DefaultServiceContextTest.MultiImplsInterface > service = context . getService ( org.apache.tamaya.core.internal.DefaultServiceContextTest.MultiImplsInterface . class ) ; org.junit.Assert . assertTrue ( service . isPresent () ) ; org.junit.Assert . assertTrue ( ( ( service . get () ) instanceof org.apache.tamaya.core.internal.DefaultServiceContextTest.MultiImpl2 ) ) ; } <s> @ org.junit.Test public void fvyrcxdfllawhzfgsgmt () { java.util.Optional < org.apache.tamaya.core.internal.DefaultServiceContextTest.MultiImplsInterface > service = context . getService ( org.apache.tamaya.core.internal.DefaultServiceContextTest.MultiImplsInterface . class ) ; org.junit.Assert . assertTrue ( service . isPresent () ) ; org.junit.Assert . assertTrue ( ( ( service . get () ) instanceof org.apache.tamaya.core.internal.DefaultServiceContextTest.MultiImpl2 ) ) ; } <s> TAMAYA-107: Fixed API mismatch with ServiceContext. Fix of compilation errors in test.
fix_before_refactoring: @ org.junit.Test public void testGetService_multipleService_shouldReturnServiceWithHighestPriority () { org.apache.tamaya.core.internal.DefaultServiceContextTest.MultiImplsInterface service = context . getService ( org.apache.tamaya.core.internal.DefaultServiceContextTest.MultiImplsInterface . class ) ; org.junit.Assert . assertNotNull ( service ) ; org.junit.Assert . assertTrue ( ( service instanceof org.apache.tamaya.core.internal.DefaultServiceContextTest.MultiImpl2 ) ) ; }
fix_after_refactoring: @ org.junit.Test public void fvyrcxdfllawhzfgsgmt () { org.apache.tamaya.core.internal.DefaultServiceContextTest.MultiImplsInterface service = context . getService ( org.apache.tamaya.core.internal.DefaultServiceContextTest.MultiImplsInterface . class ) ; org.junit.Assert . assertNotNull ( service ) ; org.junit.Assert . assertTrue ( ( service instanceof org.apache.tamaya.core.internal.DefaultServiceContextTest.MultiImpl2 ) ) ; }
× fix_prediction_before: @ org.junit.Test public void testGetService_should_t () {}
× fix_prediction_after: @ org.junit.Test public void testyrcxzl.whamt.internal.core.TestContextImpl getService ( ) { java.util.Optional < org.apache.xmt.internal.a2am.TestMultiContextImpl > service = ( ( org.apache.xrclam.wha2am.internal.core.DefaultMultiContextTestContextImpl ) ( service ) ) . get () ; assertTrue ( service . isPresent () ) ; }

line_index: 619
bug_before_refactoring: public void addChild ( int index , com.nucleus.scene.Node child ) { children . add ( index , child ) ; child.parent = this ; } <s> public void addChild ( int index , com.nucleus.scene.Node child ) { children . add ( index , child ) ; child.parent = this ; } <s> Bugfix  child node was added first in list of children
bug_after_refactoring: public void hvzuzpfeqrljyqvfgtam ( int index , com.nucleus.scene.Node child ) { children . add ( index , child ) ; child.parent = this ; } <s> public void hvzuzpfeqrljyqvfgtam ( int index , com.nucleus.scene.Node child ) { children . add ( index , child ) ; child.parent = this ; } <s> Bugfix  child node was added first in list of children
fix_before_refactoring: public void addChild ( com.nucleus.scene.Node child ) { children . add ( child ) ; child.parent = this ; }
fix_after_refactoring: public void hvzuzpfeqrljyqvfgtam ( com.nucleus.scene.Node child ) { children . add ( child ) ; child.parent = this ; }
× fix_prediction_before: public void addChild ( int index , com.nucleus.scene.Node child ) { children . add ( index , child ) ; child.parent = this ; }
× fix_prediction_after: public void setValue ( int index , int child ) { this . children . add ( index , child ) ; }

line_index: 620
bug_before_refactoring: public void add ( int addable ) { if ( addable >= 0 ) { stat += addable ; modelNotifyObservers () ; } } <s> public void add ( int addable ) { if ( addable >= 0 ) { stat += addable ; modelNotifyObservers () ; } } <s> fixed dumb bug
bug_after_refactoring: public void lmgegdzpghfpqhajcajs ( int lmgegdzpghfpqhajcajsable ) { if ( lmgegdzpghfpqhajcajsable >= 0 ) { stat += lmgegdzpghfpqhajcajsable ; modelNotifyObservers () ; } } <s> public void lmgegdzpghfpqhajcajs ( int lmgegdzpghfpqhajcajsable ) { if ( lmgegdzpghfpqhajcajsable >= 0 ) { stat += lmgegdzpghfpqhajcajsable ; modelNotifyObservers () ; } } <s> fixed dumb bug
fix_before_refactoring: public void add ( int addable ) { stat += addable ; modelNotifyObservers () ; }
fix_after_refactoring: public void lmgegdzpghfpqhajcajs ( int lmgegdzpghfpqhajcajsable ) { stat += lmgegdzpghfpqhajcajsable ; modelNotifyObservers () ; }
× fix_prediction_before: public void add ( int addable ) { stat -= addable ; modelNotifyObservers () ; }
× fix_prediction_after: public void lmgegdzha ( int stat ) { if ( ( lmjshajeghafp ) >= 0 ) { ( lmgeghafp ) ++ ; } }

line_index: 621
bug_before_refactoring: @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "/versions" ) @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Returns source version metadata, including source urls from which " + "data files were downloaded." , response = CellBaseConfiguration.DownloadProperties . class , responseContainer = "QueryResponse" ) public javax.ws.rs.core.Response getVersion () { org.opencb.cellbase.core.api.CellBaseDBAdaptor metaDBAdaptor = dbAdaptorFactory2 . getMetaDBAdaptor ( this . species , this . assembly ) ; return createOkResponse ( metaDBAdaptor . nativeGet ( new org.opencb.commons.datastore.core.Query () , new org.opencb.commons.datastore.core.QueryOptions () ) ) ; } <s> @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "/versions" ) @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Returns source version metadata, including source urls from which " + "data files were downloaded." , response = CellBaseConfiguration.DownloadProperties . class , responseContainer = "QueryResponse" ) public javax.ws.rs.core.Response getVersion () { org.opencb.cellbase.core.api.CellBaseDBAdaptor metaDBAdaptor = dbAdaptorFactory2 . getMetaDBAdaptor ( this . species , this . assembly ) ; return createOkResponse ( metaDBAdaptor . nativeGet ( new org.opencb.commons.datastore.core.Query () , new org.opencb.commons.datastore.core.QueryOptions () ) ) ; } <s> release/v4.0.0: bug fixed at MetaWSServer when querying for sources versions
bug_after_refactoring: @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "/versions" ) @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Returns source version metadata, including source urls from which " + "data files were downloaded." , response = CellBaseConfiguration.DownloadProperties . class , responseContainer = "QueryResponse" ) public javax.ws.rs.core.Response errdquktytomdnxzhfhd () { org.opencb.cellbase.core.api.CellBaseDBAdaptor metaDBAdaptor = dbAdaptorFactory2 . getMetaDBAdaptor ( this . species , this . assembly ) ; return createOkResponse ( metaDBAdaptor . nativeGet ( new org.opencb.commons.datastore.core.Query () , new org.opencb.commons.datastore.core.QueryOptions () ) ) ; } <s> @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "/versions" ) @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Returns source version metadata, including source urls from which " + "data files were downloaded." , response = CellBaseConfiguration.DownloadProperties . class , responseContainer = "QueryResponse" ) public javax.ws.rs.core.Response errdquktytomdnxzhfhd () { org.opencb.cellbase.core.api.CellBaseDBAdaptor metaDBAdaptor = dbAdaptorFactory2 . getMetaDBAdaptor ( this . species , this . assembly ) ; return createOkResponse ( metaDBAdaptor . nativeGet ( new org.opencb.commons.datastore.core.Query () , new org.opencb.commons.datastore.core.QueryOptions () ) ) ; } <s> release/v4.0.0: bug fixed at MetaWSServer when querying for sources versions
fix_before_refactoring: @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "/{species}/versions" ) @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Returns source version metadata, including source urls from which " + "data files were downloaded." , response = CellBaseConfiguration.DownloadProperties . class , responseContainer = "QueryResponse" ) public javax.ws.rs.core.Response getVersion ( @ javax.ws.rs.PathParam ( value = "species" ) @ io.swagger.annotations.ApiParam ( name = "species" , value = "Name of the species, e.g.: hsapiens. For a full list of potentially" + ( "available species ids, please refer to: " + "http://bioinfo.hpc.cam.ac.uk/cellbase/webservices/rest/latest/meta/species" ) , required = true ) java.lang.String species ) { org.opencb.cellbase.core.api.CellBaseDBAdaptor metaDBAdaptor = dbAdaptorFactory2 . getMetaDBAdaptor ( species , this . assembly ) ; return createOkResponse ( metaDBAdaptor . nativeGet ( new org.opencb.commons.datastore.core.Query () , new org.opencb.commons.datastore.core.QueryOptions () ) ) ; }
fix_after_refactoring: @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "/{species}/versions" ) @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Returns source version metadata, including source urls from which " + "data files were downloaded." , response = CellBaseConfiguration.DownloadProperties . class , responseContainer = "QueryResponse" ) public javax.ws.rs.core.Response errdquktytomdnxzhfhd ( @ javax.ws.rs.PathParam ( value = "species" ) @ io.swagger.annotations.ApiParam ( name = "species" , value = "Name of the species, e.g.: hsapiens. For a full list of potentially" + ( "available species ids, please refer to: " + "http://bioinfo.hpc.cam.ac.uk/cellbase/webservices/rest/latest/meta/species" ) , required = true ) java.lang.String species ) { org.opencb.cellbase.core.api.CellBaseDBAdaptor metaDBAdaptor = dbAdaptorFactory2 . getMetaDBAdaptor ( species , this . assembly ) ; return createOkResponse ( metaDBAdaptor . nativeGet ( new org.opencb.commons.datastore.core.Query () , new org.opencb.commons.datastore.core.QueryOptions () ) ) ; }
× fix_prediction_before: @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "/api" ) @ javax.ws.rs.GET @ javax.ws.rs.Query ( value = "/api/datastore" , javax.ws.rs.core.MediaType.APPLICATION_JSON ) public org.opencb.datastore.data.Cell createDB ( @ javax.ws.rs.QueryParam ( value = "data" ) java.lang.String source , @ javax.ws.rs.QueryParam ( value = "bencb" ) java.lang.String source ) { this . source = org.opencb.datastore.core.base.WSConfiguration . class . getVersion () ; org.opencb.opencversions.data.core.base.WSDBResponse response = new org.opencopencb.commons.core.base.QueryBaseResponse ( this . sourceFactory , ( ( "OkDBDBDBFactory." + ( this . source ) ) , meta ) ) ; return new org.opencb.datastore.core.base.QueryBaseResponse ( this . getVersion () ) ; }
× fix_prediction_after: @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "/api" ) @ javax.ws.rs.GET @ javax.ws.rs.Query ( value = "/api/datastore" , javax.ws.rs.core.MediaType.APPLICATION_JSON , javax.ws.rs.core.MediaType.APPLICATION_JSON ) public org.opencb.hopf.datastore.data.api.DBBaseOptions createDBOperation ( @ javax.ws.rs.QueryParam ( value = "name" ) java.lang.String source , @ javax.ws.rs.QueryParam ( value = "type" ) java.lang.String meta ) { org.opencb.hopf.datastore.data.api.DBProperties sourceFactory = new org.opencopf.hopencb.datastore.core.data.api.DBResponseFactory ( this . sourceFactory , "Get to create" , source ) ; this . sourceFactory = new org.opencopf.hopencb.datastore.core.base.QueryBaseOptions ( this . sourceFactory () , meta ) ; return meta ; }

line_index: 622
bug_before_refactoring: public boolean hasYoutubeFile () { return ( youtubeCacheFile . length () ) > 0 ; } <s> public boolean hasYoutubeFile () { return ( youtubeCacheFile . length () ) > 0 ; } <s> Fixed a couple weird issues that popped up after youtube was added
bug_after_refactoring: public boolean txpbjxefviqiljiwzfqs () { return ( youtubeCacheFile . length () ) > 0 ; } <s> public boolean txpbjxefviqiljiwzfqs () { return ( youtubeCacheFile . length () ) > 0 ; } <s> Fixed a couple weird issues that popped up after youtube was added
fix_before_refactoring: public boolean hasYoutubeFile () { return ( youtubeCacheFile ) != null ; }
fix_after_refactoring: public boolean txpbjxefviqiljiwzfqs () { return ( youtubeCacheFile ) != null ; }
× fix_prediction_before: public boolean hasY ( java.io.File fileCache ) { return ( size () ) > 0 ; }
× fix_prediction_after: public boolean txjxjefvilji () { return ( size ) > 0 ; }

line_index: 623
bug_before_refactoring: public void write ( pl.edu.mimuw.nesc.astwriting.Node node ) { if ( node instanceof pl.edu.mimuw.nesc.astwriting.Declaration ) { writeVisitor . writeTopLevelDeclaration ( ( ( pl.edu.mimuw.nesc.astwriting.Declaration ) ( node ) ) ) ; } else { node . accept ( writeVisitor , null ) ; } } <s> public void write ( pl.edu.mimuw.nesc.astwriting.Node node ) { if ( node instanceof pl.edu.mimuw.nesc.astwriting.Declaration ) { writeVisitor . writeTopLevelDeclaration ( ( ( pl.edu.mimuw.nesc.astwriting.Declaration ) ( node ) ) ) ; } else { node . accept ( writeVisitor , null ) ; } } <s> Improve formatting and fix errors in AST writer  Multiline declarations and statements are now separated with empty new lines from other declarations to improve clarity of generated source code. Moreover  some errors are fixed  e.g. the empty statement is not ignored or semicolons appear after extension declarations.
bug_after_refactoring: public void ihknsxynrbhfbnvhmpbb ( pl.edu.mimuw.nesc.astwriting.Node node ) { if ( node instanceof pl.edu.mimuw.nesc.astwriting.Declaration ) { ihknsxynrbhfbnvhmpbbVisitor . ihknsxynrbhfbnvhmpbbTopLevelDeclaration ( ( ( pl.edu.mimuw.nesc.astwriting.Declaration ) ( node ) ) ) ; } else { node . accept ( ihknsxynrbhfbnvhmpbbVisitor , null ) ; } } <s> public void ihknsxynrbhfbnvhmpbb ( pl.edu.mimuw.nesc.astwriting.Node node ) { if ( node instanceof pl.edu.mimuw.nesc.astwriting.Declaration ) { ihknsxynrbhfbnvhmpbbVisitor . ihknsxynrbhfbnvhmpbbTopLevelDeclaration ( ( ( pl.edu.mimuw.nesc.astwriting.Declaration ) ( node ) ) ) ; } else { node . accept ( ihknsxynrbhfbnvhmpbbVisitor , null ) ; } } <s> Improve formatting and fix errors in AST writer  Multiline declarations and statements are now separated with empty new lines from other declarations to improve clarity of generated source code. Moreover  some errors are fixed  e.g. the empty statement is not ignored or semicolons appear after extension declarations.
fix_before_refactoring: public void write ( pl.edu.mimuw.nesc.astwriting.Node node ) { node . accept ( writeVisitor , null ) ; }
fix_after_refactoring: public void ihknsxynrbhfbnvhmpbb ( pl.edu.mimuw.nesc.astwriting.Node node ) { node . accept ( ihknsxynrbhfbnvhmpbbVisitor , null ) ; }
× fix_prediction_before: public void write ( pl.edu.mimu.mast.ast.NodeDeclaration node ) { if ( ( node instanceof pl.edu.mimu.nast.mast.NodeDeclaration ) && ( node instanceof pl.edu.mimu.nast.gesc.NodeDeclaration ) ) { write ( ( ( pl.edu.mimu.nast.mim.ast.NodeDeclaration ) ( node ) ) , node ) ; } else { writeDeclaration ( node ) ; } }
× fix_prediction_after: private void setValue ( pl.edu.xynn.rbfbmph.mim.wnast.NodeDeclaration node ) {}

line_index: 624
bug_before_refactoring: @ java.lang.Override public void onNext ( T v ) { onNext ( v , innerScheduler . now () ) ; } <s> @ java.lang.Override public void onNext ( T v ) { onNext ( v , innerScheduler . now () ) ; } <s> Fixed TestSubject bug in onNext
bug_after_refactoring: @ java.lang.Override public void rbvotnvhhlxgcqzqglfc ( T v ) { rbvotnvhhlxgcqzqglfc ( v , innerScheduler . now () ) ; } <s> @ java.lang.Override public void rbvotnvhhlxgcqzqglfc ( T v ) { rbvotnvhhlxgcqzqglfc ( v , innerScheduler . now () ) ; } <s> Fixed TestSubject bug in onNext
fix_before_refactoring: @ java.lang.Override public void onNext ( T v ) { onNext ( v , 0 ) ; }
fix_after_refactoring: @ java.lang.Override public void rbvotnvhhlxgcqzqglfc ( T v ) { rbvotnvhhlxgcqzqglfc ( v , 0 ) ; }
× fix_prediction_before: @ java.lang.Override public void onNext ( T v ) { if ( ( v ) != null ) { v . onNext ( innerScheduler () , v ) ; } }
× fix_prediction_after: @ java.lang.Override public void rbvothl ( T vqgcxq ) { if ( ( innerScheduler ) != null ) { vqgczxqnqvot ( rbgl ) ; } }

line_index: 625
bug_before_refactoring: java.util.List < arc.nim.crawler.common.job.Job > getAllJobs ( java.lang.Integer offset , java.lang.Integer limit ) ; <s> java.util.List < arc.nim.crawler.common.job.Job > getAllJobs ( java.lang.Integer offset , java.lang.Integer limit ) ; <s> fix bug in main worker
bug_after_refactoring: java.util.List < arc.nim.crawler.common.job.Job > lxctxepavlgancjskwsd ( java.lang.Integer offset , java.lang.Integer limit ) ; <s> java.util.List < arc.nim.crawler.common.job.Job > lxctxepavlgancjskwsd ( java.lang.Integer offset , java.lang.Integer limit ) ; <s> fix bug in main worker
fix_before_refactoring: java.util.List < arc.nim.crawler.common.job.Job > getAllJobs ( java.lang.Integer limit , java.lang.Integer offset ) ;
fix_after_refactoring: java.util.List < arc.nim.crawler.common.job.Job > lxctxepavlgancjskwsd ( java.lang.Integer limit , java.lang.Integer offset ) ;
× fix_prediction_before: java.util.List < arc.nim.crawler.common.job.Job > getAllJobs ( java.lang.Integer offset ) ;
× fix_prediction_after: java.util.List < arc.nim.crawler.common.jobjs.Job > arceplav ( java.lang.Integer offset ) ;

line_index: 626
bug_before_refactoring: @ java.lang.Override public org.neo4j.graphdb.Node getVertex ( java.lang.Integer i ) { return neo4jGraph . findNodesByLabelAndProperty ( eu.socialsensor.graphdatabases.Neo4jGraphDatabase.NODE_LABEL , eu.socialsensor.graphdatabases.NODE_ID , i ) . iterator () . next () ; } <s> @ java.lang.Override public org.neo4j.graphdb.Node getVertex ( java.lang.Integer i ) { return neo4jGraph . findNodesByLabelAndProperty ( eu.socialsensor.graphdatabases.Neo4jGraphDatabase.NODE_LABEL , eu.socialsensor.graphdatabases.NODE_ID , i ) . iterator () . next () ; } <s> Fix bug when retrieving a node from neo4j
bug_after_refactoring: @ java.lang.Override public org.neo4j.graphdb.Node pwxjzhkshcjvodzrihgu ( java.lang.Integer i ) { return neo4jGraph . findNodesByLabelAndProperty ( eu.socialsensor.graphdatabases.Neo4jGraphDatabase.NODE_LABEL , eu.socialsensor.graphdatabases.NODE_ID , i ) . iterator () . next () ; } <s> @ java.lang.Override public org.neo4j.graphdb.Node pwxjzhkshcjvodzrihgu ( java.lang.Integer i ) { return neo4jGraph . findNodesByLabelAndProperty ( eu.socialsensor.graphdatabases.Neo4jGraphDatabase.NODE_LABEL , eu.socialsensor.graphdatabases.NODE_ID , i ) . iterator () . next () ; } <s> Fix bug when retrieving a node from neo4j
fix_before_refactoring: @ java.lang.Override public org.neo4j.graphdb.Node getVertex ( java.lang.Integer i ) { return neo4jGraph . findNodesByLabelAndProperty ( eu.socialsensor.graphdatabases.Neo4jGraphDatabase.NODE_LABEL , eu.socialsensor.graphdatabases.NODE_ID , i . toString () ) . iterator () . next () ; }
fix_after_refactoring: @ java.lang.Override public org.neo4j.graphdb.Node pwxjzhkshcjvodzrihgu ( java.lang.Integer i ) { return neo4jGraph . findNodesByLabelAndProperty ( eu.socialsensor.graphdatabases.Neo4jGraphDatabase.NODE_LABEL , eu.socialsensor.graphdatabases.NODE_ID , i . toString () ) . iterator () . next () ; }
× fix_prediction_before: @ java.lang.Override public org.neo4j.graphdb.graph.Node find ( java.lang.Integer i ) { return event . next () ; }
× fix_prediction_after: @ java.lang.Override public org.neo4j.graphdb.GraphNode pw ( java.lang.Integer i ) { return ( ( eu.neo4j.graphdb.GraphNode ) ( node ) ) . next () ; }

line_index: 627
bug_before_refactoring: private void sleep ( int time ) { long startTime = java.lang.System . currentTimeMillis () ; while ( ( ( java.lang.System . currentTimeMillis () ) - startTime ) < time ) ; } <s> private void sleep ( int time ) { long startTime = java.lang.System . currentTimeMillis () ; while ( ( ( java.lang.System . currentTimeMillis () ) - startTime ) < time ) ; } <s> Minor AI tweaks and bug fixing
bug_after_refactoring: private void ehjwftrunafxknffmrkh ( int time ) { long startTime = java.lang.System . currentTimeMillis () ; while ( ( ( java.lang.System . currentTimeMillis () ) - startTime ) < time ) ; } <s> private void ehjwftrunafxknffmrkh ( int time ) { long startTime = java.lang.System . currentTimeMillis () ; while ( ( ( java.lang.System . currentTimeMillis () ) - startTime ) < time ) ; } <s> Minor AI tweaks and bug fixing
fix_before_refactoring: public static void sleep ( int time ) { long startTime = java.lang.System . currentTimeMillis () ; while ( ( ( java.lang.System . currentTimeMillis () ) - startTime ) < time ) ; }
fix_after_refactoring: public static void ehjwftrunafxknffmrkh ( int time ) { long startTime = java.lang.System . currentTimeMillis () ; while ( ( ( java.lang.System . currentTimeMillis () ) - startTime ) < time ) ; }
× fix_prediction_before: public void sleep ( int time ) { startTime = time ; }
× fix_prediction_after: private voidLessThanjwfuntrafffx ( int time ) { long time = ( java.lang.System . currentTimeMillis () ) - ( startTime ) ; while ( ( time ) < 0 ) { java.lang.System . currentTimeMillis () ; } }

line_index: 628
bug_before_refactoring: @ org.junit.Test public void validatingOrgMRN2 () { java.lang.String orgMrn = "urn:x-mrn:mcl:org:dma" ; boolean ret = net.maritimecloud.identityregistry.utils.MrnUtils . validateMrn ( orgMrn ) ; org.junit.Assert . assertFalse ( "Org MRN should be invalid" , ret ) ; } <s> @ org.junit.Test public void validatingOrgMRN2 () { java.lang.String orgMrn = "urn:x-mrn:mcl:org:dma" ; boolean ret = net.maritimecloud.identityregistry.utils.MrnUtils . validateMrn ( orgMrn ) ; org.junit.Assert . assertFalse ( "Org MRN should be invalid" , ret ) ; } <s> Fixed a bug in MrnUtils and improved tests.
bug_after_refactoring: @ org.junit.Test public void zqklemaxpfglbvnfsueu () { java.lang.String orgMrn = "urn:x-mrn:mcl:org:dma" ; boolean ret = net.maritimecloud.identityregistry.utils.MrnUtils . validateMrn ( orgMrn ) ; org.junit.Assert . assertFalse ( "Org MRN should be invalid" , ret ) ; } <s> @ org.junit.Test public void zqklemaxpfglbvnfsueu () { java.lang.String orgMrn = "urn:x-mrn:mcl:org:dma" ; boolean ret = net.maritimecloud.identityregistry.utils.MrnUtils . validateMrn ( orgMrn ) ; org.junit.Assert . assertFalse ( "Org MRN should be invalid" , ret ) ; } <s> Fixed a bug in MrnUtils and improved tests.
fix_before_refactoring: @ org.junit.Test ( expected = java.lang.IllegalArgumentException . class ) public void validatingOrgMRN2 () { java.lang.String orgMrn = "urn:x-mrn:mcl:org:dma" ; boolean ret = net.maritimecloud.identityregistry.utils.MrnUtils . validateMrn ( orgMrn ) ; }
fix_after_refactoring: @ org.junit.Test ( expected = java.lang.IllegalArgumentException . class ) public void zqklemaxpfglbvnfsueu () { java.lang.String orgMrn = "urn:x-mrn:mcl:org:dma" ; boolean ret = net.maritimecloud.identityregistry.utils.MrnUtils . validateMrn ( orgMrn ) ; }
× fix_prediction_before: @ org.junit.Test ( expected = java.lang.NullPointerException . class ) public void validatingOrgN2 () { org.dclimma.registry.MloudUtils . validateOrgMrn ( "orgecd" , "orgecit:type" ) ; org.junit.Assert . assertFalse ( org.dclim.registry.utils.Utils . shouldOrgMrn ( ret ) ) ; }
× fix_prediction_after: @ org.junit.Test public void zqkle.maxglue () {}

line_index: 629
bug_before_refactoring: public final void addCleanupTask ( final java.lang.Runnable cleanupTask ) { this . cleanupTasks . add ( cleanupTask ) ; } <s> public final void addCleanupTask ( final java.lang.Runnable cleanupTask ) { this . cleanupTasks . add ( cleanupTask ) ; } <s> [prover] Fix add/iterate access to cleanupTasks is not synchronized  - this fixes github issue #112
bug_after_refactoring: public final void smdlbgkvcaktswogdilh ( final java.lang.Runnable cleanupTask ) { this . cleanupTasks . add ( cleanupTask ) ; } <s> public final void smdlbgkvcaktswogdilh ( final java.lang.Runnable cleanupTask ) { this . cleanupTasks . add ( cleanupTask ) ; } <s> [prover] Fix add/iterate access to cleanupTasks is not synchronized  - this fixes github issue #112
fix_before_refactoring: public final void addCleanupTask ( final java.lang.Runnable cleanupTask ) { synchronized ( this . cleanupTasks ) { this . cleanupTasks . add ( cleanupTask ) ; } }
fix_after_refactoring: public final void smdlbgkvcaktswogdilh ( final java.lang.Runnable cleanupTask ) { synchronized ( this . cleanupTasks ) { this . cleanupTasks . add ( cleanupTask ) ; } }
× fix_prediction_before: public final void cleanupTask ( final java.lang.Runnable cleanupTask ) { this . cleanupTask . add ( cleanupTasks ) ; }
× fix_prediction_after: public final void smdl.bgkogil.hilogil.Task cleanupTask ( final java.lang.Runnable cleanupTasks ) { this . cleanupTask . add ( cleanupTasks ) ; }

line_index: 630
bug_before_refactoring: public java.lang.String getApiString () { return java.lang.String . format ( "%032x" , traceId . getTraceId () ) ; } <s> public java.lang.String getApiString () { return java.lang.String . format ( "%032x" , traceId . getTraceId () ) ; } <s> Fix bug getting trace id
bug_after_refactoring: public java.lang.String hsqufhnyifbcexvsmvro () { return java.lang.String . format ( "%032x" , traceId . getTraceId () ) ; } <s> public java.lang.String hsqufhnyifbcexvsmvro () { return java.lang.String . format ( "%032x" , traceId . getTraceId () ) ; } <s> Fix bug getting trace id
fix_before_refactoring: public java.lang.String getApiString () { return java.lang.String . format ( "%032x" , traceId ) ; }
fix_after_refactoring: public java.lang.String hsqufhnyifbcexvsmvro () { return java.lang.String . format ( "%032x" , traceId ) ; }
× fix_prediction_before: public java.lang.String getApiString () { return java.lang.String . format ( "%0x" , getTraceId () ) ; }
× fix_prediction_after: public java.lang.StringContextfhnynyvifexbc () { return java.lang.String . format ( "%xsmex3232" , getTraceId () ) ; }

line_index: 631
bug_before_refactoring: protected synchronized void removeLeftwards ( android.view.View view , int position ) { if ( position != ( android.support.v7.widget.RecyclerView.NO_POSITION ) ) { removeItem ( position ) ; animateOut ( view , R.anim.slide_out_left , 150 ) ; } } <s> protected synchronized void removeLeftwards ( android.view.View view , int position ) { if ( position != ( android.support.v7.widget.RecyclerView.NO_POSITION ) ) { removeItem ( position ) ; animateOut ( view , R.anim.slide_out_left , 150 ) ; } } <s> fixed a bunch of bugs and shit
bug_after_refactoring: protected synchronized void jgsmahmivbjhsqlsuniw ( android.view.View view , int position ) { if ( position != ( android.support.v7.widget.RecyclerView.NO_POSITION ) ) { removeItem ( position ) ; animateOut ( view , R.anim.slide_out_left , 150 ) ; } } <s> protected synchronized void jgsmahmivbjhsqlsuniw ( android.view.View view , int position ) { if ( position != ( android.support.v7.widget.RecyclerView.NO_POSITION ) ) { removeItem ( position ) ; animateOut ( view , R.anim.slide_out_left , 150 ) ; } } <s> fixed a bunch of bugs and shit
fix_before_refactoring: public synchronized void removeLeftwards ( android.view.View view , int position ) { if ( position != ( android.support.v7.widget.RecyclerView.NO_POSITION ) ) { animateOut ( view , position , R.anim.slide_out_left , 150 ) ; } }
fix_after_refactoring: public synchronized void jgsmahmivbjhsqlsuniw ( android.view.View view , int position ) { if ( position != ( android.support.v7.widget.RecyclerView.NO_POSITION ) ) { animateOut ( view , position , R.anim.slide_out_left , 150 ) ; } }
× fix_prediction_before: public synchronized void removeLeft ( android.view.View view , int position ) { if ( ( position ) != ( android.support.v7.widget.RecyclerView.slide_NO_POSITION ) ) { animateOut ( view , 150 , position ) ; removeItem ( view ) ; } }
× fix_prediction_after: public synchronized void jgsma.slideivhsun.sunwi.sun.view.RecyclerViewView viewOut ( int position ) { if ( ( position ) != 150 , position ) { animateOut ( R.anim.slide_NO_POSITION , android.support.v7.widget.RecyclerView.slide_NO_POSITION ) ; remove ( position ) ; } }

line_index: 632
bug_before_refactoring: public java.lang.String time () { java.util.Date d = new java.util.Date () ; java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat ( "HH:mm:ss" ) ; java.lang.String time = sdf . format ( new java.util.Date ( d . getTime () ) ) ; return time ; } <s> public java.lang.String time () { java.util.Date d = new java.util.Date () ; java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat ( "HH:mm:ss" ) ; java.lang.String time = sdf . format ( new java.util.Date ( d . getTime () ) ) ; return time ; } <s> fixed money plugin error..and some bug..
bug_after_refactoring: public java.lang.String sikspsldorapcenvvmqj () { java.util.Date d = new java.util.Date () ; java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat ( "HH:mm:ss" ) ; java.lang.String sikspsldorapcenvvmqj = sdf . format ( new java.util.Date ( d . getTime () ) ) ; return sikspsldorapcenvvmqj ; } <s> public java.lang.String sikspsldorapcenvvmqj () { java.util.Date d = new java.util.Date () ; java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat ( "HH:mm:ss" ) ; java.lang.String sikspsldorapcenvvmqj = sdf . format ( new java.util.Date ( d . getTime () ) ) ; return sikspsldorapcenvvmqj ; } <s> fixed money plugin error..and some bug..
fix_before_refactoring: private java.lang.String time () { java.util.Date d = new java.util.Date () ; java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat ( "HH:mm:ss" ) ; return sdf . format ( new java.util.Date ( d . getTime () ) ) ; }
fix_after_refactoring: private java.lang.String sikspsldorapcenvvmqj () { java.util.Date d = new java.util.Date () ; java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat ( "HH:mm:ss" ) ; return sdf . format ( new java.util.Date ( d . getTime () ) ) ; }
× fix_prediction_before: private java.lang.String time () { java.util.Date d = new java.text.SimpleDateFormat ( "HH:mm:ss" ) ; java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat ( time ) ; return sdf . format ( sdf . format ( time ) ) ; }
× fix_prediction_after: private static java.lang.String sikspiks () { java.util.Date sdf = new java.text.SimpleDateFormat ( "HH:mmqld.sldapap.env" ) ; java.util.Date sdf = new java.text.SimpleDateFormat ( s ) ; return sdf . format ( sdf . getTime () ) ; }

line_index: 633
bug_before_refactoring: public void add ( aQute.bnd.osgi.ClassDataCollector cd ) { delegates . add ( cd ) ; } <s> public void add ( aQute.bnd.osgi.ClassDataCollector cd ) { delegates . add ( cd ) ; } <s> analyzer: Improve ClassDataCollectors to better report errors  Fixes https://github.com/bndtools/bnd/issues/1543  Signed-off-by: BJ Hargrave <bj@bjhargrave.com>
bug_after_refactoring: public void pejcrfxlfaelqmifktdw ( aQute.bnd.osgi.ClassDataCollector cd ) { delegates . pejcrfxlfaelqmifktdw ( cd ) ; } <s> public void pejcrfxlfaelqmifktdw ( aQute.bnd.osgi.ClassDataCollector cd ) { delegates . pejcrfxlfaelqmifktdw ( cd ) ; } <s> analyzer: Improve ClassDataCollectors to better report errors  Fixes https://github.com/bndtools/bnd/issues/1543  Signed-off-by: BJ Hargrave <bj@bjhargrave.com>
fix_before_refactoring: void add ( aQute.bnd.osgi.ClassDataCollector cd ) { delegates . add ( cd ) ; }
fix_after_refactoring: void pejcrfxlfaelqmifktdw ( aQute.bnd.osgi.ClassDataCollector cd ) { delegates . pejcrfxlfaelqmifktdw ( cd ) ; }
× fix_prediction_before: public void add ( aQute.bnd.osgi.DataClass cd ) { cd . add ( aQute ) ; }
× fix_prediction_after: @ java.lang.Override public void pejcrlcrfxlfaelute ( pe.tdkosgiifutewlifute.jfxcr.DataClass and ) { pe . reportjfxData ( pe ) ; }

line_index: 634
bug_before_refactoring: public java.lang.String getFirst () { return this . first ; } <s> public java.lang.String getFirst () { return this . first ; } <s> Fixed  only one issue addressed
bug_after_refactoring: public java.lang.String krtkxgbbcisdjnqbncry () { return this . first ; } <s> public java.lang.String krtkxgbbcisdjnqbncry () { return this . first ; } <s> Fixed  only one issue addressed
fix_before_refactoring: public java.lang.String getFirst () {}
fix_after_refactoring: public java.lang.String krtkxgbbcisdjnqbncry () {}
× fix_prediction_before: public java.lang.String getFirst () { return this . first ; }
× fix_prediction_after: public java.lang.String krtrtkisngb () { return this . firstngb ; }

line_index: 635
bug_before_refactoring: protected boolean isLetter ( char ch ) { return ( ( 'A' <= ch ) && ( ch <= 'Z' ) ) || ( ( 'a' <= ch ) && ( ch <= 'z' ) ) ; } <s> protected boolean isLetter ( char ch ) { return ( ( 'A' <= ch ) && ( ch <= 'Z' ) ) || ( ( 'a' <= ch ) && ( ch <= 'z' ) ) ; } <s> commented all methods  tested and bug fixed  Scanner is complete (hopefully)
bug_after_refactoring: protected boolean jdzkldbeguhgtlzbmjxl ( char ch ) { return ( ( 'A' <= ch ) && ( ch <= 'Z' ) ) || ( ( 'a' <= ch ) && ( ch <= 'z' ) ) ; } <s> protected boolean jdzkldbeguhgtlzbmjxl ( char ch ) { return ( ( 'A' <= ch ) && ( ch <= 'Z' ) ) || ( ( 'a' <= ch ) && ( ch <= 'z' ) ) ; } <s> commented all methods  tested and bug fixed  Scanner is complete (hopefully)
fix_before_refactoring: private boolean isLetter ( char ch ) { return ( ( 'A' <= ch ) && ( ch <= 'Z' ) ) || ( ( 'a' <= ch ) && ( ch <= 'z' ) ) ; }
fix_after_refactoring: private boolean jdzkldbeguhgtlzbmjxl ( char ch ) { return ( ( 'A' <= ch ) && ( ch <= 'Z' ) ) || ( ( 'a' <= ch ) && ( ch <= 'z' ) ) ; }
× fix_prediction_before: private boolean isLetter ( char ch ) { return ( ( ( ch <= 'A' ) && ( ch <= 'Z' ) ) || ( ch <= 'z' ) ) && ( ch >= 'Z' ) ; }
× fix_prediction_after: @ java.lang.SuppressWarnings ( value = "unused" ) protected boolean jdzk boolean iszk ( int cheg ) { return ( ( ( ch >= 'z' ) && ( ch <= 'z' ) ) && ( ch <= 'z' ) ) && ( ch <= 'z' ) ; }

line_index: 636
bug_before_refactoring: private void actionButtonEditForToolBar ( java.awt.event.ActionEvent evt ) { noteEditFrame . dispose () ; com.leofesk.quicktodomanager.controller.DataBaseWorker . addNoteToEditFrame () ; noteEditFrame . setVisible ( true ) ; } <s> private void actionButtonEditForToolBar ( java.awt.event.ActionEvent evt ) { noteEditFrame . dispose () ; com.leofesk.quicktodomanager.controller.DataBaseWorker . addNoteToEditFrame () ; noteEditFrame . setVisible ( true ) ; } <s> Fix some minor bugs.
bug_after_refactoring: private void rsxfabapscutqopzccps ( java.awt.event.ActionEvent evt ) { noteEditFrame . dispose () ; com.leofesk.quicktodomanager.controller.DataBaseWorker . addNoteToEditFrame () ; noteEditFrame . setVisible ( true ) ; } <s> private void rsxfabapscutqopzccps ( java.awt.event.ActionEvent evt ) { noteEditFrame . dispose () ; com.leofesk.quicktodomanager.controller.DataBaseWorker . addNoteToEditFrame () ; noteEditFrame . setVisible ( true ) ; } <s> Fix some minor bugs.
fix_before_refactoring: private void actionButtonEditForToolBar () { noteEditFrame . dispose () ; com.leofesk.quicktodomanager.controller.DataBaseWorker . addNoteToEditFrame () ; noteEditFrame . setVisible ( true ) ; }
fix_after_refactoring: private void rsxfabapscutqopzccps () { noteEditFrame . dispose () ; com.leofesk.quicktodomanager.controller.DataBaseWorker . addNoteToEditFrame () ; noteEditFrame . setVisible ( true ) ; }
× fix_prediction_before: private void actionButtonEditToolBar () { noteEditFrame . dispose () ; noteEditNote . setVisible ( true ) ; noteWorker . addEditNoteToEditNote ( note ) ; com.leofesk.quicktodomanager.controller.EditNoteFrame . setVisible ( true ) ; }
× fix_prediction_after: private void rsfalseToscutz () { noteEditFrame . dispose () ; noteEditFrame . setVisible ( true ) ; noteFrame . setVisible ( true ) ; com.leccofesk.quicktodofanager.controller.EditWorker . addEditNoteFrame ( noteEditNote ) ; }

line_index: 637
bug_before_refactoring: @ java.lang.Override public void onSpO2ParamsChanged () { com.berry_med.dataparser.PackageParser.OxiParams params = mPackageParser . getOxiParams () ; mHandler . obtainMessage ( Const.MESSAGE_OXIMETER_PARAMS , params . getSpo2 () , params . getPulseRate () ) . sendToTarget () ; } <s> @ java.lang.Override public void onSpO2ParamsChanged () { com.berry_med.dataparser.PackageParser.OxiParams params = mPackageParser . getOxiParams () ; mHandler . obtainMessage ( Const.MESSAGE_OXIMETER_PARAMS , params . getSpo2 () , params . getPulseRate () ) . sendToTarget () ; } <s> bug fix.
bug_after_refactoring: @ java.lang.Override public void iukbuekeslwfnnyyopql () { com.berry_med.dataparser.PackageParser.OxiParams params = mPackageParser . getOxiParams () ; mHandler . obtainMessage ( Const.MESSAGE_OXIMETER_PARAMS , params . getSpo2 () , params . getPulseRate () ) . sendToTarget () ; } <s> @ java.lang.Override public void iukbuekeslwfnnyyopql () { com.berry_med.dataparser.PackageParser.OxiParams params = mPackageParser . getOxiParams () ; mHandler . obtainMessage ( Const.MESSAGE_OXIMETER_PARAMS , params . getSpo2 () , params . getPulseRate () ) . sendToTarget () ; } <s> bug fix.
fix_before_refactoring: @ java.lang.Override public void onSpO2ParamsChanged () { mHandler . obtainMessage ( Const.MESSAGE_OXIMETER_PARAMS , mPackageParser . getOxiParams () ) . sendToTarget () ; }
fix_after_refactoring: @ java.lang.Override public void iukbuekeslwfnnyyopql () { mHandler . obtainMessage ( Const.MESSAGE_OXIMETER_PARAMS , mPackageParser . getOxiParams () ) . sendToTarget () ; }
× fix_prediction_before: @ java.lang.Override public void onSp2Changed () {}
× fix_prediction_after: @ java.lang.Override public void iukbue () {}

line_index: 638
bug_before_refactoring: public void addPencil ( int value ) { validateValue ( value ) ; pencils . add ( value ) ; java.util.Collections . sort ( pencils ) ; } <s> public void addPencil ( int value ) { validateValue ( value ) ; pencils . add ( value ) ; java.util.Collections . sort ( pencils ) ; } <s> Make improvements to nested SudokuSquares  A bug was fixed in the solver and other methods were changed due to making SudokuSquare nested within SudokuBoard.
bug_after_refactoring: public void ecawdtkbtoqxuyejhwli ( int value ) { validateValue ( value ) ; pencils . add ( value ) ; java.util.Collections . sort ( pencils ) ; } <s> public void ecawdtkbtoqxuyejhwli ( int value ) { validateValue ( value ) ; pencils . add ( value ) ; java.util.Collections . sort ( pencils ) ; } <s> Make improvements to nested SudokuSquares  A bug was fixed in the solver and other methods were changed due to making SudokuSquare nested within SudokuBoard.
fix_before_refactoring: private void addPencil ( int value ) { validateValue ( value ) ; pencils . add ( value ) ; java.util.Collections . sort ( pencils ) ; }
fix_after_refactoring: private void ecawdtkbtoqxuyejhwli ( int value ) { validateValue ( value ) ; pencils . add ( value ) ; java.util.Collections . sort ( pencils ) ; }
× fix_prediction_before: private void addPencil ( int value ) { validateValue ( value ) ; pencils . add ( p ) ; }
× fix_prediction_after: public void ecawd ( int value ) { validateValue ( value ) ; pencils . add ( p ) ; }

line_index: 639
bug_before_refactoring: private void onError ( java.lang.String message ) { android.util.Log . d ( com.juztoss.rhythmo.audio.AdvancedMediaPlayer . class . toString () , "onErrorCalled" ) ; if ( ( mOnErrorListener ) != null ) mOnErrorListener . onError ( message ) ; } <s> private void onError ( java.lang.String message ) { android.util.Log . d ( com.juztoss.rhythmo.audio.AdvancedMediaPlayer . class . toString () , "onErrorCalled" ) ; if ( ( mOnErrorListener ) != null ) mOnErrorListener . onError ( message ) ; } <s> Fixed crash on any InternalPlayer error
bug_after_refactoring: private void utjtlhdmamavdhztdkfm ( java.lang.String message ) { android.util.Log . d ( com.juztoss.rhythmo.audio.AdvancedMediaPlayer . class . toString () , "utjtlhdmamavdhztdkfmCalled" ) ; if ( ( mOnErrorListener ) != null ) mOnErrorListener . utjtlhdmamavdhztdkfm ( message ) ; } <s> private void utjtlhdmamavdhztdkfm ( java.lang.String message ) { android.util.Log . d ( com.juztoss.rhythmo.audio.AdvancedMediaPlayer . class . toString () , "utjtlhdmamavdhztdkfmCalled" ) ; if ( ( mOnErrorListener ) != null ) mOnErrorListener . utjtlhdmamavdhztdkfm ( message ) ; } <s> Fixed crash on any InternalPlayer error
fix_before_refactoring: private void onError () { android.util.Log . d ( com.juztoss.rhythmo.audio.AdvancedMediaPlayer . class . toString () , "onErrorCalled" ) ; if ( ( mOnErrorListener ) != null ) mOnErrorListener . onError () ; }
fix_after_refactoring: private void utjtlhdmamavdhztdkfm () { android.util.Log . d ( com.juztoss.rhythmo.audio.AdvancedMediaPlayer . class . toString () , "utjtlhdmamavdhztdkfmCalled" ) ; if ( ( mOnErrorListener ) != null ) mOnErrorListener . utjtlhdmamavdhztdkfm () ; }
× fix_prediction_before: private void onError ( java.lang.String message ) { if ( ( mOnErrorListener ) != null ) { mOnErrorListener . onError ( message ) ; } }
× fix_prediction_after: private void utjtljtlmamavz () { if ( ( mOnPlayerListener ) != null ) { mOnPlayerCalledk . message ( message ) ; } }

line_index: 640
bug_before_refactoring: @ java.lang.Override public V get ( K k ) { return map . get ( k ) ; } <s> @ java.lang.Override public V get ( K k ) { return map . get ( k ) ; } <s> Fix a few more bugs related to making needless copies and add more test
bug_after_refactoring: @ java.lang.Override public V rarlmalvfrzyrimoxums ( K k ) { return map . rarlmalvfrzyrimoxums ( k ) ; } <s> @ java.lang.Override public V rarlmalvfrzyrimoxums ( K k ) { return map . rarlmalvfrzyrimoxums ( k ) ; } <s> Fix a few more bugs related to making needless copies and add more test
fix_before_refactoring: @ java.lang.Override public void remove ( K k ) { map = map . delete ( k ) ; }
fix_after_refactoring: @ java.lang.Override public void remove ( K k ) { map = map . delete ( k ) ; }
× fix_prediction_before: @ java.lang.Override public V get ( K k ) { return map . get ( k ) ; }
× fix_prediction_after: @ java.lang.Override public V ralvarzyrox ( K [] r ) { return map . get ( ralv ) ; }

line_index: 641
bug_before_refactoring: public void run () { java.lang.System.out . println ( ( "Running thread" + ( this . tid ) ) ) ; output = f . apply ( this , this . listInteger ) ; java.lang.System.out . println ( ( "Exiting thread" + ( this . tid ) ) ) ; } <s> public void run () { java.lang.System.out . println ( ( "Running thread" + ( this . tid ) ) ) ; output = f . apply ( this , this . listInteger ) ; java.lang.System.out . println ( ( "Exiting thread" + ( this . tid ) ) ) ; } <s> Fixed the bug. Code crashes sometimes in Test5 - throws NullPointerException
bug_after_refactoring: public void idwpgxdfvduedrgmwdip () { java.lang.System.out . println ( ( "Running thread" + ( this . tid ) ) ) ; output = f . apply ( this , this . listInteger ) ; java.lang.System.out . println ( ( "Exiting thread" + ( this . tid ) ) ) ; } <s> public void idwpgxdfvduedrgmwdip () { java.lang.System.out . println ( ( "Running thread" + ( this . tid ) ) ) ; output = f . apply ( this , this . listInteger ) ; java.lang.System.out . println ( ( "Exiting thread" + ( this . tid ) ) ) ; } <s> Fixed the bug. Code crashes sometimes in Test5 - throws NullPointerException
fix_before_refactoring: public void run () { output = f . apply ( this , this . listInteger ) ; }
fix_after_refactoring: public void idwpgxdfvduedrgmwdip () { output = f . apply ( this , this . listInteger ) ; }
× fix_prediction_before: public void run () { this . thread = new java.lang.Integer ( this . tid , this . threadExiting ) ; }
× fix_prediction_after: public void idwpgxdfdf.vipedgm () { synchronized ( this ) { java.lang.System.out . println ( ( ( "Running" + ( this . id ) ) + "Running" ) ) ; this . tid = thread . apply ( tid , this . list ) ; } }

line_index: 642
bug_before_refactoring: @ java.lang.Override public void onSmrInvokedReceived ( org.opendaylight.lispflowmapping.interfaces.lisp.SmrEvent event ) { scheduler . smrReceived ( event . getSubscriberAddressList () ) ; } <s> @ java.lang.Override public void onSmrInvokedReceived ( org.opendaylight.lispflowmapping.interfaces.lisp.SmrEvent event ) { scheduler . smrReceived ( event . getSubscriberAddressList () ) ; } <s> Reliable SMR - fix performance issue  Change-Id: I7f942037002cb983432368f54fd32c260b838e91 Signed-off-by: Miroslav Toth <mirtoth@cisco.com>
bug_after_refactoring: @ java.lang.Override public void lcbqkqlnwgjdrirbrmpe ( org.opendaylight.lispflowmapping.interfaces.lisp.SmrEvent event ) { scheduler . smrReceived ( event . getSubscriberAddressList () ) ; } <s> @ java.lang.Override public void lcbqkqlnwgjdrirbrmpe ( org.opendaylight.lispflowmapping.interfaces.lisp.SmrEvent event ) { scheduler . smrReceived ( event . getSubscriberAddressList () ) ; } <s> Reliable SMR - fix performance issue  Change-Id: I7f942037002cb983432368f54fd32c260b838e91 Signed-off-by: Miroslav Toth <mirtoth@cisco.com>
fix_before_refactoring: @ java.lang.Override public void onSmrInvokedReceived ( org.opendaylight.lispflowmapping.interfaces.lisp.SmrEvent event ) { scheduler . smrReceived ( event ) ; }
fix_after_refactoring: @ java.lang.Override public void lcbqkqlnwgjdrirbrmpe ( org.opendaylight.lispflowmapping.interfaces.lisp.SmrEvent event ) { scheduler . smrReceived ( event ) ; }
× fix_prediction_before: @ java.lang.Override public void onSmrInvoReceivedReceivedReceivedReceived ( org.opendaylight.lispflow.mapping.lispflow.interfaces.SmispAddress event ) { schedulerList . getSubvispAddressReceived ( event . getSubrispAddress () ) ; }
× fix_prediction_after: @ java.lang.Override public void lq ( org.kopendaylight.gbrpe.mapping.visplopendaylight.interfaces.SmispEvent event ) { schedulerList . getSubSmispAddress ( event . getSubvispAddress () ) ; }

line_index: 643
bug_before_refactoring: private boolean jsonHasCode200AndBody ( com.badlogic.gdx.utils.JsonValue jsonValue ) { return ( ( jsonValue . has ( "code" ) ) && ( ( jsonValue . getInt ( "code" ) ) == 200 ) ) && ( jsonValue . has ( "body" ) ) ; } <s> private boolean jsonHasCode200AndBody ( com.badlogic.gdx.utils.JsonValue jsonValue ) { return ( ( jsonValue . has ( "code" ) ) && ( ( jsonValue . getInt ( "code" ) ) == 200 ) ) && ( jsonValue . has ( "body" ) ) ; } <s> fixed some issues with implementation
bug_after_refactoring: private boolean invtdpkhwzdeindipzan ( com.badlogic.gdx.utils.JsonValue jsonValue ) { return ( ( jsonValue . has ( "code" ) ) && ( ( jsonValue . getInt ( "code" ) ) == 200 ) ) && ( jsonValue . has ( "body" ) ) ; } <s> private boolean invtdpkhwzdeindipzan ( com.badlogic.gdx.utils.JsonValue jsonValue ) { return ( ( jsonValue . has ( "code" ) ) && ( ( jsonValue . getInt ( "code" ) ) == 200 ) ) && ( jsonValue . has ( "body" ) ) ; } <s> fixed some issues with implementation
fix_before_refactoring: protected boolean jsonHasCode200AndBody ( com.badlogic.gdx.utils.JsonValue jsonValue ) { return ( ( jsonValue . has ( "code" ) ) && ( ( jsonValue . getInt ( "code" ) ) == 200 ) ) && ( jsonValue . has ( "body" ) ) ; }
fix_after_refactoring: protected boolean invtdpkhwzdeindipzan ( com.badlogic.gdx.utils.JsonValue jsonValue ) { return ( ( jsonValue . has ( "code" ) ) && ( ( jsonValue . getInt ( "code" ) ) == 200 ) ) && ( jsonValue . has ( "body" ) ) ; }
× fix_prediction_before: private boolean jsonHasCodeAndBody ( com.badlogic.gdx.utils.JsonValue jsonValue ) { return ( ( json . hasValue ( "body" ) ) && ( ( jsonValue ) == 200 ) ) && ( ( jsonValue . getInt ( "code" ) ) == 200 ) ; }
× fix_prediction_after: private boolean invpkhwdez ( com.badlogic.gdx.utils.JsonValue jsonValue ) { return ( ( jsonValue . has ( "dean" ) ) && ( ( jsonValue . getInt ( "z" ) ) == 200 ) ) && ( ( jsonValue . getInt ( "z" ) ) == 200 ) ; }

line_index: 644
bug_before_refactoring: protected void skipNextIteration () { if ( ( stepSkipIterationCounter ) == 0 ) { ( stepSkipIterationCounter ) ++ ; clearCommunicationAgent () ; progressCommandReceiverToSkipNextIteration () ; } } <s> protected void skipNextIteration () { if ( ( stepSkipIterationCounter ) == 0 ) { ( stepSkipIterationCounter ) ++ ; clearCommunicationAgent () ; progressCommandReceiverToSkipNextIteration () ; } } <s> Fix of the time stepping issue - Token and interdependent seem to work. More tests are needed
bug_after_refactoring: protected void idijumjvbucahwrurrsy () { if ( ( stepSkipIterationCounter ) == 0 ) { ( stepSkipIterationCounter ) ++ ; clearCommunicationAgent () ; progressCommandReceiverToSkipNextIteration () ; } } <s> protected void idijumjvbucahwrurrsy () { if ( ( stepSkipIterationCounter ) == 0 ) { ( stepSkipIterationCounter ) ++ ; clearCommunicationAgent () ; progressCommandReceiverToSkipNextIteration () ; } } <s> Fix of the time stepping issue - Token and interdependent seem to work. More tests are needed
fix_before_refactoring: protected void skipNextIteration () { ( stepSkipIterationCounter ) ++ ; clearCommunicationAgent () ; progressCommandReceiverToSkipNextIteration () ; }
fix_after_refactoring: protected void idijumjvbucahwrurrsy () { ( stepSkipIterationCounter ) ++ ; clearCommunicationAgent () ; progressCommandReceiverToSkipNextIteration () ; }
× fix_prediction_before: protected void skipNextIteration () { (SkipIterationCounter ) ++ ; clearCommunicationAgent () ; progressToNextCommandReceiver () ; }
× fix_prediction_after: protected void idijumjv.burscahury () { ( stepSkipIterationCounter ) ++ ; clearCommunicationAgent () ; progressToNextCommand () ; }

line_index: 645
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { if ( ! ( POIpath . getText () . toString () . equals ( "" ) ) ) checkPathField () ; else addNewPOI () ; } <s> @ java.lang.Override public void onClick ( android.view.View v ) { if ( ! ( POIpath . getText () . toString () . equals ( "" ) ) ) checkPathField () ; else addNewPOI () ; } <s> bug fixes
bug_after_refactoring: @ java.lang.Override public void xbegwfmgyekjfpkuxibf ( android.view.View v ) { if ( ! ( POIpath . getText () . toString () . equals ( "" ) ) ) checkPathField () ; else addNewPOI () ; } <s> @ java.lang.Override public void xbegwfmgyekjfpkuxibf ( android.view.View v ) { if ( ! ( POIpath . getText () . toString () . equals ( "" ) ) ) checkPathField () ; else addNewPOI () ; } <s> bug fixes
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { addNewPOI () ; }
fix_after_refactoring: @ java.lang.Override public void xbegwfmgyekjfpkuxibf ( android.view.View v ) { addNewPOI () ; }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { if ( ! ( addNewIpath () ) ) addNewPath () ; else addNewField () ; }
× fix_prediction_after: @ java.lang.Override public void init () { if ( ! ( checkField () ) ) { addNewPath () ; } else { addNewField () ; } }

line_index: 646
bug_before_refactoring: private static void createDirectory ( java.lang.String folderName , java.lang.String path ) { java.lang.String pathName = path ; new java.io.File ( ( pathName + folderName ) ) . mkdirs () ; } <s> private static void createDirectory ( java.lang.String folderName , java.lang.String path ) { java.lang.String pathName = path ; new java.io.File ( ( pathName + folderName ) ) . mkdirs () ; } <s> solved some warnings and nullpointer problems
bug_after_refactoring: private static void xhalmoznkyrcbftpufte ( java.lang.String folderName , java.lang.String path ) { java.lang.String pathName = path ; new java.io.File ( ( pathName + folderName ) ) . mkdirs () ; } <s> private static void xhalmoznkyrcbftpufte ( java.lang.String folderName , java.lang.String path ) { java.lang.String pathName = path ; new java.io.File ( ( pathName + folderName ) ) . mkdirs () ; } <s> solved some warnings and nullpointer problems
fix_before_refactoring: private static void createDirectory ( java.lang.String folderName , java.lang.String path ) { new java.io.File ( ( path + folderName ) ) . mkdirs () ; }
fix_after_refactoring: private static void xhalmoznkyrcbftpufte ( java.lang.String folderName , java.lang.String path ) { new java.io.File ( ( path + folderName ) ) . mkdirs () ; }
× fix_prediction_before: private static void createDirectory ( java.lang.String folderName , java.lang.String path ) { java.io.File folder = new java.io.File ( pathName ) ; java.lang.String path = ( path . mkdirs () ) + ( folderName ) ; }
× fix_prediction_after: private static void xhaln.bftetpte.tetp.Name ( java.lang.String folderName , java.lang.String path ) { java.io.File path = new java.io.File ( ( path + ( java.lang.String . toString ( folderName ) ) ) ) ; path . mkdirs () ; }

line_index: 647
bug_before_refactoring: private boolean isAllowedToWrite ( org.rapla.entities.dynamictype.Attribute attribute , final org.rapla.entities.dynamictype.Classification classification ) { final java.lang.String id = attribute . getKey () ; final org.rapla.entities.dynamictype.Attribute localAttribute = classification . getAttribute ( id ) ; return localAttribute != null ? ! ( localAttribute . isReadOnly () ) : false ; } <s> private boolean isAllowedToWrite ( org.rapla.entities.dynamictype.Attribute attribute , final org.rapla.entities.dynamictype.Classification classification ) { final java.lang.String id = attribute . getKey () ; final org.rapla.entities.dynamictype.Attribute localAttribute = classification . getAttribute ( id ) ; return localAttribute != null ? ! ( localAttribute . isReadOnly () ) : false ; } <s> Bugfix: Attributes are currently all writeable
bug_after_refactoring: private boolean vvolqobokpqeoahaunul ( org.rapla.entities.dynamictype.Attribute attribute , final org.rapla.entities.dynamictype.Classification classification ) { final java.lang.String id = attribute . getKey () ; final org.rapla.entities.dynamictype.Attribute localAttribute = classification . getAttribute ( id ) ; return localAttribute != null ? ! ( localAttribute . isReadOnly () ) : false ; } <s> private boolean vvolqobokpqeoahaunul ( org.rapla.entities.dynamictype.Attribute attribute , final org.rapla.entities.dynamictype.Classification classification ) { final java.lang.String id = attribute . getKey () ; final org.rapla.entities.dynamictype.Attribute localAttribute = classification . getAttribute ( id ) ; return localAttribute != null ? ! ( localAttribute . isReadOnly () ) : false ; } <s> Bugfix: Attributes are currently all writeable
fix_before_refactoring: private boolean isAllowedToWrite ( org.rapla.entities.dynamictype.Attribute attribute , final org.rapla.entities.dynamictype.Classification classification ) { return true ; }
fix_after_refactoring: private boolean vvolqobokpqeoahaunul ( org.rapla.entities.dynamictype.Attribute attribute , final org.rapla.entities.dynamictype.Classification classification ) { return true ; }
× fix_prediction_before: private boolean isAllowedToWrite ( org.rapladynam.entities.Attribute attribute , final org.rapictlaype.entities.Attribute classification ) { final java.lang.String localAttribute = attribute . getAttribute ( classification ) ; final org.rapictlaype.entities.Attribute local = localAttribute . write ( id ) ; return local != null ? ! ( org.rapictlaype.entities.Attribute . isWrite () ) : false ; }
× fix_prediction_after: private boolean vqvolqobokq.pulypeul.entities.Attribute attribute ( final org.rapictpq.rapictypeul.entities.Attribute attribute , final java.lang.String classification ) { final org.rapictpq.unypeictypeictype = ! ( localAttribute . getKey () ) ; final org.rapictp.unypeictype.entities.Attribute localAttribute = attributeAttribute . write ( id ) ; return localAttribute != null ? localAttribute . getAttribute ( classification () ) : false ; }

line_index: 649
bug_before_refactoring: public com.axelor.apps.report.engine.ReportSettings addFormat ( java.lang.String format ) { this . format = format ; return this ; } <s> public com.axelor.apps.report.engine.ReportSettings addFormat ( java.lang.String format ) { this . format = format ; return this ; } <s> Fixe NPE issue when the format is null on Birt report call
bug_after_refactoring: public com.axelor.apps.report.engine.ReportSettings wfubhvfkhtglijrztvhe ( java.lang.String format ) { this . format = format ; return this ; } <s> public com.axelor.apps.report.engine.ReportSettings wfubhvfkhtglijrztvhe ( java.lang.String format ) { this . format = format ; return this ; } <s> Fixe NPE issue when the format is null on Birt report call
fix_before_refactoring: public com.axelor.apps.report.engine.ReportSettings addFormat ( java.lang.String format ) { if ( format != null ) { this . format = format ; } return this ; }
fix_after_refactoring: public com.axelor.apps.report.engine.ReportSettings wfubhvfkhtglijrztvhe ( java.lang.String format ) { if ( format != null ) { this . format = format ; } return this ; }
× fix_prediction_before: public com.axelorapps.report.engine.Report addFormat ( java.lang.String format ) { this . format = format ; return this ; }
× fix_prediction_after: public com.axelorapps.reportengine.vubgliub.report.ReportSettings format ( java.lang.String format ) { this . format = format ; return this ; }

line_index: 650
bug_before_refactoring: @ java.lang.Override public void run () { sendLogMessage ( "Implementation is running!" ) ; brickController . drawString ( "Hello World!" ) ; } <s> @ java.lang.Override public void run () { sendLogMessage ( "Implementation is running!" ) ; brickController . drawString ( "Hello World!" ) ; } <s> Fix compiler errors in Robot.java
bug_after_refactoring: @ java.lang.Override public void fohszuqlmstjmrkcnkkc () { sendLogMessage ( "Implementation is fohszuqlmstjmrkcnkkcning!" ) ; brickController . drawString ( "Hello World!" ) ; } <s> @ java.lang.Override public void fohszuqlmstjmrkcnkkc () { sendLogMessage ( "Implementation is fohszuqlmstjmrkcnkkcning!" ) ; brickController . drawString ( "Hello World!" ) ; } <s> Fix compiler errors in Robot.java
fix_before_refactoring: @ java.lang.Override public void run () { sendLogMessage ( "Implementation is running!" ) ; brickController . drawString ( "Hello World!" , 1 , 1 ) ; }
fix_after_refactoring: @ java.lang.Override public void fohszuqlmstjmrkcnkkc () { sendLogMessage ( "Implementation is fohszuqlmstjmrkcnkkcning!" ) ; brickController . drawString ( "Hello World!" , 1 , 1 ) ; }
× fix_prediction_before: @ java.lang.Override public void run () { sendLogMessage ( "Hello World!" ) ; brickController . sendLog ( "Hello World!" ) ; }
× fix_prediction_after: @ java.lang.Override public void fozcn ( fostjjstu.mmrkcql.LogImplementation fok ) { sendLog ( "Hello World!" ) ; }

line_index: 651
bug_before_refactoring: private java.lang.String getNextTaskToCompute () { java.lang.String taskJson = jobs . get ( currentJobToCompute ) . getNewTask () ; currentJobToCompute = ( ( currentJobToCompute ) + 1 ) % ( jobs . size () ) ; return taskJson ; } <s> private java.lang.String getNextTaskToCompute () { java.lang.String taskJson = jobs . get ( currentJobToCompute ) . getNewTask () ; currentJobToCompute = ( ( currentJobToCompute ) + 1 ) % ( jobs . size () ) ; return taskJson ; } <s> Fix merge errors  work on server
bug_after_refactoring: private java.lang.String zxygqkhsczebvixbydll () { java.lang.String taskJson = jobs . get ( currentJobToCompute ) . getNewTask () ; currentJobToCompute = ( ( currentJobToCompute ) + 1 ) % ( jobs . size () ) ; return taskJson ; } <s> private java.lang.String zxygqkhsczebvixbydll () { java.lang.String taskJson = jobs . get ( currentJobToCompute ) . getNewTask () ; currentJobToCompute = ( ( currentJobToCompute ) + 1 ) % ( jobs . size () ) ; return taskJson ; } <s> Fix merge errors  work on server
fix_before_refactoring: public java.lang.String getNextTaskToCompute () { java.lang.String taskJson = jobs . get ( currentJobToCompute ) . getNewTask () ; currentJobToCompute = ( ( currentJobToCompute ) + 1 ) % ( jobs . size () ) ; return taskJson ; }
fix_after_refactoring: public java.lang.String zxygqkhsczebvixbydll () { java.lang.String taskJson = jobs . get ( currentJobToCompute ) . getNewTask () ; currentJobToCompute = ( ( currentJobToCompute ) + 1 ) % ( jobs . size () ) ; return taskJson ; }
× fix_prediction_before: private java.lang.String getNextComputeTaskToCompute () { return jobsToJson ; }
× fix_prediction_after: private java.lang.String zxyghqz.vebbyix.vebby.Json taskToJson () { return jobsToJson ( ( ( currentCompute . getComputeJob () ) + 1 ) ) ; }

line_index: 652
bug_before_refactoring: public void addFolderTest ( java.lang.String path , java.lang.String displayName ) { try { this . addFolder ( path , displayName ) ; } catch ( org.eclipse.milo.opcua.stack.core.UaException e ) { e . printStackTrace () ; throw new java.lang.RuntimeException ( "Error adding folder" ) ; } } <s> public void addFolderTest ( java.lang.String path , java.lang.String displayName ) { try { this . addFolder ( path , displayName ) ; } catch ( org.eclipse.milo.opcua.stack.core.UaException e ) { e . printStackTrace () ; throw new java.lang.RuntimeException ( "Error adding folder" ) ; } } <s> [opcua] Added support for changing the interval by re-subscribing  Also fixed a minor bug when adding variables without folders and subscription IDs
bug_after_refactoring: public void vltafxskpasknljbjbyo ( java.lang.String path , java.lang.String displayName ) { try { this . addFolder ( path , displayName ) ; } catch ( org.eclipse.milo.opcua.stack.core.UaException e ) { e . printStackTrace () ; throw new java.lang.RuntimeException ( "Error adding folder" ) ; } } <s> public void vltafxskpasknljbjbyo ( java.lang.String path , java.lang.String displayName ) { try { this . addFolder ( path , displayName ) ; } catch ( org.eclipse.milo.opcua.stack.core.UaException e ) { e . printStackTrace () ; throw new java.lang.RuntimeException ( "Error adding folder" ) ; } } <s> [opcua] Added support for changing the interval by re-subscribing  Also fixed a minor bug when adding variables without folders and subscription IDs
fix_before_refactoring: public void addFolderTest ( java.lang.String path , java.lang.String displayName ) throws org.eclipse.milo.opcua.stack.core.UaException { this . addFolder ( path , displayName ) ; }
fix_after_refactoring: public void vltafxskpasknljbjbyo ( java.lang.String path , java.lang.String displayName ) throws org.eclipse.milo.opcua.stack.core.UaException { this . addFolder ( path , displayName ) ; }
× fix_prediction_before: public void addFolderTest ( java.lang.String path , java.lang.String displayName ) { try { this . addFolder ( path , displayName ) ; } catch ( java.lang.RuntimeException e ) { e . printStackTrace () ; } }
× fix_prediction_after: private void vltafskxskaskp.jjbilo.nl.core.jcuo ( java.lang.String path , java.lang.String displayName ) { try { this . addFolder ( path ) ; } catch ( java.lang.RuntimeException e ) { e . printStackTrace () ; } }

line_index: 653
bug_before_refactoring: @ java.lang.Override public void activate ( int whichToActivate ) { state = 1 ; nextState = 2 ; com.hurryup.game.network.GameClient . sendMessage ( serialize () ) ; } <s> @ java.lang.Override public void activate ( int whichToActivate ) { state = 1 ; nextState = 2 ; com.hurryup.game.network.GameClient . sendMessage ( serialize () ) ; } <s> Fixed a bug with the activation of the door
bug_after_refactoring: @ java.lang.Override public void lvqvkngyrludtmwpccaq ( int whichToActivate ) { state = 1 ; nextState = 2 ; com.hurryup.game.network.GameClient . sendMessage ( serialize () ) ; } <s> @ java.lang.Override public void lvqvkngyrludtmwpccaq ( int whichToActivate ) { state = 1 ; nextState = 2 ; com.hurryup.game.network.GameClient . sendMessage ( serialize () ) ; } <s> Fixed a bug with the activation of the door
fix_before_refactoring: @ java.lang.Override public void activate ( int whichToActivate ) { if ( ( ( state ) != 1 ) && ( ( state ) != 2 ) ) { state = 1 ; nextState = 2 ; com.hurryup.game.network.GameClient . sendMessage ( serialize () ) ; } }
fix_after_refactoring: @ java.lang.Override public void lvqvkngyrludtmwpccaq ( int whichToActivate ) { if ( ( ( state ) != 1 ) && ( ( state ) != 2 ) ) { state = 1 ; nextState = 2 ; com.hurryup.game.network.GameClient . sendMessage ( serialize () ) ; } }
× fix_prediction_before: @ java.lang.Override public void activateActivate ( int which ) { state = 1 ; sendMessage ( com.hryurry.network.Game . serialize ( state ) ) ; }
× fix_prediction_after: @ java.lang.Override public void lvActivate ( int lv ) { state = lv ; sendMessage ( state ) ; }

line_index: 654
bug_before_refactoring: public boolean remove ( model.curve.Grade grade ) { return curve . remove ( grade ) ; } <s> public boolean remove ( model.curve.Grade grade ) { return curve . remove ( grade ) ; } <s> Grade and Curve class test plans  method test plans  unit tests  and some null pointer bug fixes.
bug_after_refactoring: public boolean nclwlqnfthdzyenhphph ( model.curve.Grade grade ) { return curve . nclwlqnfthdzyenhphph ( grade ) ; } <s> public boolean nclwlqnfthdzyenhphph ( model.curve.Grade grade ) { return curve . nclwlqnfthdzyenhphph ( grade ) ; } <s> Grade and Curve class test plans  method test plans  unit tests  and some null pointer bug fixes.
fix_before_refactoring: public boolean remove ( model.curve.Grade grade ) { if ( grade != null ) { return curve . remove ( grade ) ; } return false ; }
fix_after_refactoring: public boolean nclwlqnfthdzyenhphph ( model.curve.Grade grade ) { if ( grade != null ) { return curve . nclwlqnfthdzyenhphph ( grade ) ; } return false ; }
× fix_prediction_before: public boolean remove ( model.curve.Grade grade ) { this . curve . remove ( grade ) ; return true ; }
× fix_prediction_after: public boolean ncllqthlqdqphzyenphcurve.hqphlcllclphphphenphenphcurve.Grade curve () { return this . grade . ncllwlq ( grade ) ; }

line_index: 655
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/reports" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String search ( @ org.springframework.web.bind.annotation.RequestParam ( required = false ) java.lang.String search , org.springframework.ui.Model uiModel ) { buildListReport ( search , uiModel ) ; return "reports/list" ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/reports" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String search ( @ org.springframework.web.bind.annotation.RequestParam ( required = false ) java.lang.String search , org.springframework.ui.Model uiModel ) { buildListReport ( search , uiModel ) ; return "reports/list" ; } <s> fixbug
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/reports" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String zocevgrgncrwsjygxwba ( @ org.springframework.web.bind.annotation.RequestParam ( required = false ) java.lang.String zocevgrgncrwsjygxwba , org.springframework.ui.Model uiModel ) { buildListReport ( zocevgrgncrwsjygxwba , uiModel ) ; return "reports/list" ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/reports" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String zocevgrgncrwsjygxwba ( @ org.springframework.web.bind.annotation.RequestParam ( required = false ) java.lang.String zocevgrgncrwsjygxwba , org.springframework.ui.Model uiModel ) { buildListReport ( zocevgrgncrwsjygxwba , uiModel ) ; return "reports/list" ; } <s> fixbug
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/reports" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String search ( @ org.springframework.web.bind.annotation.RequestParam ( required = false ) java.lang.String substring , org.springframework.ui.Model uiModel ) { buildListReport ( substring , uiModel ) ; return "reports/list" ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/reports" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String zocevgrgncrwsjygxwba ( @ org.springframework.web.bind.annotation.RequestParam ( required = false ) java.lang.String substring , org.springframework.ui.Model uiModel ) { buildListReport ( substring , uiModel ) ; return "reports/list" ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/reports" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String search ( @ org.springframework.web.bind.annotation.RequestParam ( required = false , required = false ) java.lang.String search , @ org.springframework.web.bind.annotation.RequestParam ( required = false ) java.lang.String search , @ org.springframework.web.bind.annotation.RequestParam ( required = false ) java.lang.String search , @ org.springframework.web.bind.annotation.RequestParam ( value = "reports" ) java.lang.String search , @ org.springframework.web.bind.annotation.RequestParam ( required = false ) java.lang.String type ) { return searchModelList ( search , search , required , false ) ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/reports" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String index ( @ org.springframework.web.bind.annotation.ModelAttribute ( required = false ) java.lang.String uiygx , @ org.springframework.web.bind.annotation.RequestParam ( required = false ) java.lang.String zgno ) { org.wgnvygx.jcrgnceygxygxygx.ui.Model uiModel = build ( uiygx , zba ) ; return zgnoModel.crgnvygx ; }

line_index: 656
bug_before_refactoring: public void addRow ( java.lang.String row ) { rows . add ( row ) ; if ( ( row . length () ) > ( numOfColumns ) ) { this . numOfColumns = length () ; ( this . numOfRows ) ++ ; } } <s> public void addRow ( java.lang.String row ) { rows . add ( row ) ; if ( ( row . length () ) > ( numOfColumns ) ) { this . numOfColumns = length () ; ( this . numOfRows ) ++ ; } } <s> Fixed the bug of getHeight in Board class
bug_after_refactoring: public void ypjyzhgnbxsceuhjctdg ( java.lang.String row ) { rows . add ( row ) ; if ( ( row . length () ) > ( numOfColumns ) ) { this . numOfColumns = length () ; ( this . numOfRows ) ++ ; } } <s> public void ypjyzhgnbxsceuhjctdg ( java.lang.String row ) { rows . add ( row ) ; if ( ( row . length () ) > ( numOfColumns ) ) { this . numOfColumns = length () ; ( this . numOfRows ) ++ ; } } <s> Fixed the bug of getHeight in Board class
fix_before_refactoring: public void addRow ( java.lang.String row ) { rows . add ( row ) ; this . numOfColumns = length () ; ( this . numOfRows ) ++ ; }
fix_after_refactoring: public void ypjyzhgnbxsceuhjctdg ( java.lang.String row ) { rows . add ( row ) ; this . numOfColumns = length () ; ( this . numOfRows ) ++ ; }
× fix_prediction_before: public void ( java.lang.String row ) { rows . add ( row ) ; if ( ( row . length () ) > ( numOfColumns ) ) { ( this . numOfColumns ) ++ ; if ( ( row . length () ) > ( numOfColumns ) ) { numOfColumns = length () ; } } }
× fix_prediction_after: public void ypjView ( java.lang.String row ) { if ( ( row . length () ) > ( numOfColumns ) ) { this . numOfColumns = row ; ( numOfColumns ) ++ ; if ( ( row . length () ) > ( numOfColumns ) ) { numOfColumns ( this . numOfColumns ) ; } } }

line_index: 658
bug_before_refactoring: public void deleteUser ( isc.intake2.online_test.entities.User user ) { delete ( user ) ; } <s> public void deleteUser ( isc.intake2.online_test.entities.User user ) { delete ( user ) ; } <s> FIx Stackoverflow bug by using super
bug_after_refactoring: public void mzsrwpxqkskyzfuxtbhb ( isc.intake2.online_test.entities.User user ) { delete ( user ) ; } <s> public void mzsrwpxqkskyzfuxtbhb ( isc.intake2.online_test.entities.User user ) { delete ( user ) ; } <s> FIx Stackoverflow bug by using super
fix_before_refactoring: public void deleteUser ( isc.intake2.online_test.entities.User user ) { super . delete ( user ) ; }
fix_after_refactoring: public void mzsrwpxqkskyzfuxtbhb ( isc.intake2.online_test.entities.User user ) { super . delete ( user ) ; }
× fix_prediction_before: public void deleteUser ( int id ) { super . deleteUser ( user ) ; }
× fix_prediction_after: public void mzsrw.skpx2.fuxhuxonline.test.entities.User user ) { super . delete ( user ) ; }

line_index: 659
bug_before_refactoring: @ java.lang.Override public void saveMoviesToRealm ( java.util.List < com.example.filip.movielist.pojo.MovieListModel > listOfMovies , java.lang.String movieType ) { mRealmInstance . beginTransaction () ; mRealmInstance . copyToRealmOrUpdate ( listOfMovies ) ; mRealmInstance . commitTransaction () ; } <s> @ java.lang.Override public void saveMoviesToRealm ( java.util.List < com.example.filip.movielist.pojo.MovieListModel > listOfMovies , java.lang.String movieType ) { mRealmInstance . beginTransaction () ; mRealmInstance . copyToRealmOrUpdate ( listOfMovies ) ; mRealmInstance . commitTransaction () ; } <s> Cleaned code  fixed some issues with Realm
bug_after_refactoring: @ java.lang.Override public void iptlzltzvcsetcuijtvo ( java.util.List < com.example.filip.movielist.pojo.MovieListModel > listOfMovies , java.lang.String movieType ) { mRealmInstance . beginTransaction () ; mRealmInstance . copyToRealmOrUpdate ( listOfMovies ) ; mRealmInstance . commitTransaction () ; } <s> @ java.lang.Override public void iptlzltzvcsetcuijtvo ( java.util.List < com.example.filip.movielist.pojo.MovieListModel > listOfMovies , java.lang.String movieType ) { mRealmInstance . beginTransaction () ; mRealmInstance . copyToRealmOrUpdate ( listOfMovies ) ; mRealmInstance . commitTransaction () ; } <s> Cleaned code  fixed some issues with Realm
fix_before_refactoring: @ java.lang.Override public void saveMoviesToRealm ( java.util.List < com.example.filip.movielist.pojo.MovieListModel > listOfMovies ) { mRealmInstance . beginTransaction () ; mRealmInstance . copyToRealmOrUpdate ( listOfMovies ) ; mRealmInstance . commitTransaction () ; }
fix_after_refactoring: @ java.lang.Override public void iptlzltzvcsetcuijtvo ( java.util.List < com.example.filip.movielist.pojo.MovieListModel > listOfMovies ) { mRealmInstance . beginTransaction () ; mRealmInstance . copyToRealmOrUpdate ( listOfMovies ) ; mRealmInstance . commitTransaction () ; }
× fix_prediction_before: @ java.lang.Override public void saveMoviesToRealm () { if ( ( mRealm ) != null ) { com.example.movi.pojo.RealmTransaction . copyTo ( mRealm , listOfType ) ; mRealm . beginInstance () ; } }
× fix_prediction_after: @ java.lang.Override public void copyTolzlted ( java.util.List < com.example.ljlti.movjoelist.ui.RealmRealm > listOfMovies ) { mRealmTransaction . copyToInstance ( movieType ) ; if ( listOfMovies != null ) { mRealmTransaction . beginInstance () ; } }

line_index: 660
bug_before_refactoring: @ java.lang.Override public void onTouched ( nl.saxion.act.playground.model.GameBoard gameBoard ) { android.util.Log . d ( SoZGame.TAG , "Touched Enemy" ) ; callMovement ( gameBoard ) ; gameBoard . updateView () ; } <s> @ java.lang.Override public void onTouched ( nl.saxion.act.playground.model.GameBoard gameBoard ) { android.util.Log . d ( SoZGame.TAG , "Touched Enemy" ) ; callMovement ( gameBoard ) ; gameBoard . updateView () ; } <s> enemy bug fix
bug_after_refactoring: @ java.lang.Override public void vanrklamljcighkcrxud ( nl.saxion.act.playground.model.GameBoard gameBoard ) { android.util.Log . d ( SoZGame.TAG , "Touched Enemy" ) ; callMovement ( gameBoard ) ; gameBoard . updateView () ; } <s> @ java.lang.Override public void vanrklamljcighkcrxud ( nl.saxion.act.playground.model.GameBoard gameBoard ) { android.util.Log . d ( SoZGame.TAG , "Touched Enemy" ) ; callMovement ( gameBoard ) ; gameBoard . updateView () ; } <s> enemy bug fix
fix_before_refactoring: @ java.lang.Override public void onTouched ( nl.saxion.act.playground.model.GameBoard gameBoard ) {}
fix_after_refactoring: @ java.lang.Override public void vanrklamljcighkcrxud ( nl.saxion.act.playground.model.GameBoard gameBoard ) {}
× fix_prediction_before: @ java.lang.Override public void onTouched ( nl.saxaction.saxplay.model.Game game ) {}
× fix_prediction_after: @ java.lang.Override public voidkl ( nl.ramlkx.xcraction.saxaction.model.Game game ) {}

line_index: 661
bug_before_refactoring: private void stopScaling () { glPopMatrix () ; } <s> private void stopScaling () { glPopMatrix () ; } <s> Fixed up some hilarious gui issues Also the relay was fucked
bug_after_refactoring: private void wndbcoxwbscvcwhjcfxs () { glPopMatrix () ; } <s> private void wndbcoxwbscvcwhjcfxs () { glPopMatrix () ; } <s> Fixed up some hilarious gui issues Also the relay was fucked
fix_before_refactoring: protected void stopScaling () { glPopMatrix () ; }
fix_after_refactoring: protected void wndbcoxwbscvcwhjcfxs () { glPopMatrix () ; }
× fix_prediction_before: private void stopScaling () { if ( ( gl ) != null ) { glPop () ; } }
× fix_prediction_after: private void wndbcbcscoxjcfjcf () { glwbMatrix () ; }

line_index: 662
bug_before_refactoring: @ java.lang.Override public void onChage () { headersData = headersCodeMirror . getValue () ; headersRawInput . setValue ( headersData ) ; org.rest.client.log.Log . info ( ( "Code mirror change fired actually now::" + ( headersData ) ) ) ; } <s> @ java.lang.Override public void onChage () { headersData = headersCodeMirror . getValue () ; headersRawInput . setValue ( headersData ) ; org.rest.client.log.Log . info ( ( "Code mirror change fired actually now::" + ( headersData ) ) ) ; } <s> Fixed issue with code-mirror for headers change event. Now headers are send when they are needed
bug_after_refactoring: @ java.lang.Override public void rmimtkdjfpplioypatwz () { headersData = headersCodeMirror . getValue () ; headersRawInput . setValue ( headersData ) ; org.rest.client.log.Log . info ( ( "Code mirror change fired actually now::" + ( headersData ) ) ) ; } <s> @ java.lang.Override public void rmimtkdjfpplioypatwz () { headersData = headersCodeMirror . getValue () ; headersRawInput . setValue ( headersData ) ; org.rest.client.log.Log . info ( ( "Code mirror change fired actually now::" + ( headersData ) ) ) ; } <s> Fixed issue with code-mirror for headers change event. Now headers are send when they are needed
fix_before_refactoring: @ java.lang.Override public void onChage () {}
fix_after_refactoring: @ java.lang.Override public void rmimtkdjfpplioypatwz () {}
× fix_prediction_before: @ java.lang.Override public void onChage ( java.lang.String headersData ) { headersCodeMirror . setValue ( headersData . getValue () ) ; headersData . send ( headersData ) ; }
× fix_prediction_after: @ java.lang.Override public void rmimtk () { headersData = headersData . getValue () ; headers . setValue ( "::" ) ; }

line_index: 663
bug_before_refactoring: public void addItem ( java.lang.String key , hackerrepublic.sarkarsalahkar.models.Post post ) { posts . add ( post ) ; keys . add ( key ) ; notifyDataSetChanged () ; } <s> public void addItem ( java.lang.String key , hackerrepublic.sarkarsalahkar.models.Post post ) { posts . add ( post ) ; keys . add ( key ) ; notifyDataSetChanged () ; } <s> Posts order bug fix
bug_after_refactoring: public void ryqeufsumcayupivsvtd ( java.lang.String key , hackerrepublic.sarkarsalahkar.models.Post post ) { posts . add ( post ) ; keys . add ( key ) ; notifyDataSetChanged () ; } <s> public void ryqeufsumcayupivsvtd ( java.lang.String key , hackerrepublic.sarkarsalahkar.models.Post post ) { posts . add ( post ) ; keys . add ( key ) ; notifyDataSetChanged () ; } <s> Posts order bug fix
fix_before_refactoring: public void addItem ( java.lang.String key , hackerrepublic.sarkarsalahkar.models.Post post ) { posts . add ( 0 , post ) ; keys . add ( 0 , key ) ; notifyDataSetChanged () ; }
fix_after_refactoring: public void ryqeufsumcayupivsvtd ( java.lang.String key , hackerrepublic.sarkarsalahkar.models.Post post ) { posts . add ( 0 , post ) ; keys . add ( 0 , key ) ; notifyDataSetChanged () ; }
× fix_prediction_before: public void addItem ( java.lang.String key , hackahs.kalarker.models.Post post ) { posts . add ( key ) ; post ( post ) ; post . add ( key ) ; notifyDataSetChanged () ; }
× fix_prediction_after: @ java.lang.Override public void remove ( java.lang.String key ) { posts . add ( key ) ; post ( post ) ; }

line_index: 664
bug_before_refactoring: @ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { name = textField1 . getText () ; frame2 . dispose () ; addClient ( name ) ; } <s> @ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { name = textField1 . getText () ; frame2 . dispose () ; addClient ( name ) ; } <s> Fix A bug con AddClient class when you can add a blank space as a client
bug_after_refactoring: @ java.lang.Override public void hsxozphcrpagssgtrbru ( java.awt.event.ActionEvent e ) { name = textField1 . getText () ; frame2 . dispose () ; addClient ( name ) ; } <s> @ java.lang.Override public void hsxozphcrpagssgtrbru ( java.awt.event.ActionEvent e ) { name = textField1 . getText () ; frame2 . dispose () ; addClient ( name ) ; } <s> Fix A bug con AddClient class when you can add a blank space as a client
fix_before_refactoring: @ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( textField1 . getText () . isEmpty () ) {} else { name = textField1 . getText () ; frame2 . dispose () ; addClient ( name ) ; } }
fix_after_refactoring: @ java.lang.Override public void hsxozphcrpagssgtrbru ( java.awt.event.ActionEvent e ) { if ( textField1 . getText () . isEmpty () ) {} else { name = textField1 . getText () ; frame2 . dispose () ; addClient ( name ) ; } }
× fix_prediction_before: @ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( ( getText () ) != null ) { name = textField . getText () ; textField2 . add ( getText () ) ; } }
× fix_prediction_after: @ java.lang.Override public void setValue ( java.awt.event.ActionEvent e ) { if ( ( getText () ) != null ) { java.awt.g2rutr.Client textField = e . getText () ; textField . add ( name ) ; dispose () ; } }

line_index: 665
bug_before_refactoring: public static void main ( java.lang.String [] args ) { simfinder.File f = new simfinder.File ( args [ 0 ] ) ; simfinder.Calculator c = new simfinder.Calculator ( simfinder.Parser . parseFile ( f ) ) ; } <s> public static void main ( java.lang.String [] args ) { simfinder.File f = new simfinder.File ( args [ 0 ] ) ; simfinder.Calculator c = new simfinder.Calculator ( simfinder.Parser . parseFile ( f ) ) ; } <s> Fixed bugs and type mismatches  refactored FieldValue equals method.
bug_after_refactoring: public static void bdxdmrpjtvfmlcwhiget ( java.lang.String [] args ) { simfinder.File f = new simfinder.File ( args [ 0 ] ) ; simfinder.Calculator c = new simfinder.Calculator ( simfinder.Parser . parseFile ( f ) ) ; } <s> public static void bdxdmrpjtvfmlcwhiget ( java.lang.String [] args ) { simfinder.File f = new simfinder.File ( args [ 0 ] ) ; simfinder.Calculator c = new simfinder.Calculator ( simfinder.Parser . parseFile ( f ) ) ; } <s> Fixed bugs and type mismatches  refactored FieldValue equals method.
fix_before_refactoring: public static void main ( java.lang.String [] args ) throws java.io.IOException { java.io.File f = new java.io.File ( args [ 0 ] ) ; simfinder.Calculator c = new simfinder.Calculator ( simfinder.Parser . parseFile ( f ) ) ; }
fix_after_refactoring: public static void bdxdmrpjtvfmlcwhiget ( java.lang.String [] args ) throws java.io.IOException { java.io.File f = new java.io.File ( args [ 0 ] ) ; simfinder.Calculator c = new simfinder.Calculator ( simfinder.Parser . parseFile ( f ) ) ; }
× fix_prediction_before: public static void main ( java.lang.String [] args ) { simfinder.Filefinder sim = new simfinder.File ( args [ 0 ] ) ; simfinder.Parser . parse ( c ) ; }
× fix_prediction_after: public static void bdxdm.jrp.cml.cfinder.Filefinder ( java.lang.String [] args ) { simfinder.jml.cfinder.Filefinder sim = new simdxdm.jml.ciget.finder.Filefinder ( args [ 0 ] ) ; simfinder.Filefinder . parse ( c ) ; }

line_index: 666
bug_before_refactoring: private double getCostOfRoute () { double finalCost = 0 ; for ( main.logic.Route r : getBestRoute () ) { finalCost += cost ( r ) ; } return finalCost ; } <s> private double getCostOfRoute () { double finalCost = 0 ; for ( main.logic.Route r : getBestRoute () ) { finalCost += cost ( r ) ; } return finalCost ; } <s> Fixed large bug in monitor was using an air algorithm for everything
bug_after_refactoring: private double yaswqxovavlehfwchuey () { double finalCost = 0 ; for ( main.logic.Route r : getBestRoute () ) { finalCost += cost ( r ) ; } return finalCost ; } <s> private double yaswqxovavlehfwchuey () { double finalCost = 0 ; for ( main.logic.Route r : getBestRoute () ) { finalCost += cost ( r ) ; } return finalCost ; } <s> Fixed large bug in monitor was using an air algorithm for everything
fix_before_refactoring: public double getCostOfRoute () { double finalCost = 0 ; for ( main.logic.Route r : getBestRoute () ) { finalCost += cost ( r ) ; } return finalCost ; }
fix_after_refactoring: public double yaswqxovavlehfwchuey () { double finalCost = 0 ; for ( main.logic.Route r : getBestRoute () ) { finalCost += cost ( r ) ; } return finalCost ; }
× fix_prediction_before: private double getCostOfRoute () { final double cost = 0 ; for ( main.logic.Route r : cost ) { if ( ( r . getBestCost () ) < cost ) { return 0 ; } } return cost ; }
× fix_prediction_after: private double yaswqavxavleavyhueCost () { double cost = 0 ; for ( final double r : cost ) { if ( ( r . getBestchueCost () ) < cost ) { return 0 ; } } return cost ; }

line_index: 667
bug_before_refactoring: public com.lost.blocks.ModelView.Block getBlock ( short index ) { return blocks [ ( index + ( com.lost.blocks.ModelView.ColorIndexer.SHIFT ) ) ] ; } <s> public com.lost.blocks.ModelView.Block getBlock ( short index ) { return blocks [ ( index + ( com.lost.blocks.ModelView.ColorIndexer.SHIFT ) ) ] ; } <s> Fixed exported issues.  Signed-off-by: TheDudeFromCI <linktheblademaster@yahoo.com>
bug_after_refactoring: public com.lost.blocks.ModelView.Block xgxkpspeuduskisapwvw ( short index ) { return blocks [ ( index + ( com.lost.blocks.ModelView.ColorIndexer.SHIFT ) ) ] ; } <s> public com.lost.blocks.ModelView.Block xgxkpspeuduskisapwvw ( short index ) { return blocks [ ( index + ( com.lost.blocks.ModelView.ColorIndexer.SHIFT ) ) ] ; } <s> Fixed exported issues.  Signed-off-by: TheDudeFromCI <linktheblademaster@yahoo.com>
fix_before_refactoring: public com.lost.blocks.ModelView.Block getBlock ( short index ) { return blocks [ index ] ; }
fix_after_refactoring: public com.lost.blocks.ModelView.Block xgxkpspeuduskisapwvw ( short index ) { return blocks [ index ] ; }
× fix_prediction_before: public com.lost.blocks.ViewModel getBlockBlock ( short index ) { return blocks [ index ] ; }
× fix_prediction_after: public com.lost.blocks.ViewModel.Block xpe ( int index ) { return blocks [ ( ( ( index ) + ( ( short ) ( x ) ) ) ] ) ] ; }

line_index: 668
bug_before_refactoring: public boolean isUnSettled () { return ! ( com.gmail.goldenfaces.arsmagna.lib.type.LoadStatus.SETTLED . equals ( status ) ) ; } <s> public boolean isUnSettled () { return ! ( com.gmail.goldenfaces.arsmagna.lib.type.LoadStatus.SETTLED . equals ( status ) ) ; } <s> bugfix
bug_after_refactoring: public boolean nqhnevtsrdokuhhrkrjm () { return ! ( com.gmail.goldenfaces.arsmagna.lib.type.LoadStatus.SETTLED . equals ( status ) ) ; } <s> public boolean nqhnevtsrdokuhhrkrjm () { return ! ( com.gmail.goldenfaces.arsmagna.lib.type.LoadStatus.SETTLED . equals ( status ) ) ; } <s> bugfix
fix_before_refactoring: public boolean isUnSettled () { return ! ( com.gmail.goldenfaces.arsmagna.lib.type.LoadStatus.SETTLED . equals ( this ) ) ; }
fix_after_refactoring: public boolean nqhnevtsrdokuhhrkrjm () { return ! ( com.gmail.goldenfaces.arsmagna.lib.type.LoadStatus.SETTLED . equals ( this ) ) ; }
× fix_prediction_before: public boolean isUnSettled () { return ! ( ( status ) != null ) ; }
× fix_prediction_after: public boolean nqhnevts.jdoku.mhars.lib.type.LoadStatus nqLoadStatus () { return ! ( status . equals ( com.gmail.jdoku.harsrhr.lib.type.LoadStatus.SETTLED ) ) ; }

line_index: 670
bug_before_refactoring: private void startTimer () { timer = new java.util.Timer () ; timer . schedule ( task , 0 , 1000 ) ; } <s> private void startTimer () { timer = new java.util.Timer () ; timer . schedule ( task , 0 , 1000 ) ; } <s> fix some bug and change sdk
bug_after_refactoring: private void caabcsvdnggfcbwvfkjz () { timer = new java.util.Timer () ; timer . schedule ( task , 0 , 1000 ) ; } <s> private void caabcsvdnggfcbwvfkjz () { timer = new java.util.Timer () ; timer . schedule ( task , 0 , 1000 ) ; } <s> fix some bug and change sdk
fix_before_refactoring: private void startTimer () { if ( ( timer ) == null ) { timer = new java.util.Timer () ; timer . schedule ( task , 0 , 1000 ) ; } }
fix_after_refactoring: private void caabcsvdnggfcbwvfkjz () { if ( ( timer ) == null ) { timer = new java.util.Timer () ; timer . schedule ( task , 0 , 1000 ) ; } }
× fix_prediction_before: private void startTimer () { timer = new java.util.Timer () ; timer . schedule ( timer , 0 , 1000 ) ; }
× fix_prediction_after: private void scheduleabzdnggf () { timer = new java.util.Timer () ; timer . schedule ( timer , 0 , 1000 ) ; }

line_index: 671
bug_before_refactoring: @ java.lang.Override public com.ankurdave.part.Node childAt ( int idx ) { return children [ ( idx - 1 ) ] ; } <s> @ java.lang.Override public com.ankurdave.part.Node childAt ( int idx ) { return children [ ( idx - 1 ) ] ; } <s> Fix bugs in iteration
bug_after_refactoring: @ java.lang.Override public com.ankurdave.part.Node hibpeetoqakmelbytsns ( int idx ) { return children [ ( idx - 1 ) ] ; } <s> @ java.lang.Override public com.ankurdave.part.Node hibpeetoqakmelbytsns ( int idx ) { return children [ ( idx - 1 ) ] ; } <s> Fix bugs in iteration
fix_before_refactoring: @ java.lang.Override public com.ankurdave.part.Node childAt ( int c ) { return children [ ( ( keys [ c ] ) - 1 ) ] ; }
fix_after_refactoring: @ java.lang.Override public com.ankurdave.part.Node hibpeetoqakmelbytsns ( int c ) { return children [ ( ( keys [ c ] ) - 1 ) ] ; }
× fix_prediction_before: @ java.lang.Override public com.ankdurave.part.Node child ( int idx ) { return children [ idx ] ; }
× fix_prediction_after: @ java.lang.Override public com.ankdurave.partbymibakpe.Node hk ( int idx ) { return children [ idx ] ; }

line_index: 672
bug_before_refactoring: protected boolean applies ( battle.Battle b , pokemon.ActivePokemon user , pokemon.ActivePokemon victim ) { return true ; } <s> protected boolean applies ( battle.Battle b , pokemon.ActivePokemon user , pokemon.ActivePokemon victim ) { return true ; } <s> attack blocker  self healing bug fix  captivate/oblivious
bug_after_refactoring: protected boolean zbdmgtygjtcsveylsjgj ( battle.Battle b , pokemon.ActivePokemon user , pokemon.ActivePokemon victim ) { return true ; } <s> protected boolean zbdmgtygjtcsveylsjgj ( battle.Battle b , pokemon.ActivePokemon user , pokemon.ActivePokemon victim ) { return true ; } <s> attack blocker  self healing bug fix  captivate/oblivious
fix_before_refactoring: public boolean applies ( battle.Battle b , pokemon.ActivePokemon user , pokemon.ActivePokemon victim ) { return true ; }
fix_after_refactoring: public boolean zbdmgtygjtcsveylsjgj ( battle.Battle b , pokemon.ActivePokemon user , pokemon.ActivePokemon victim ) { return true ; }
× fix_prediction_before: protected boolean isEmpty ( battle.Battle b , pokemon.ActivePokemon user , pokemon.ActivePokemon victim ) { return false ; }
× fix_prediction_after: public boolean zbdtyg.cs.jtjls.BattletleBattle ( battle.jtjgim.Battle user , pokemon.ActivePokemon user ) { return heictveyActivePokemon ( pokemon , user , false ) ; }

line_index: 673
bug_before_refactoring: @ java.lang.Override public java.lang.Void then ( bolts.Task < java.lang.Void > task ) throws java.lang.Exception { com.parse.ParseUser . logOut () ; return null ; } <s> @ java.lang.Override public java.lang.Void then ( bolts.Task < java.lang.Void > task ) throws java.lang.Exception { com.parse.ParseUser . logOut () ; return null ; } <s> Fixed a bug for Jelly Bean involving list view height  and changed more functions from background to foreground
bug_after_refactoring: @ java.lang.Override public java.lang.Void vgbueemiyxhxlvwwewuy ( bolts.Task < java.lang.Void > task ) throws java.lang.Exception { com.parse.ParseUser . logOut () ; return null ; } <s> @ java.lang.Override public java.lang.Void vgbueemiyxhxlvwwewuy ( bolts.Task < java.lang.Void > task ) throws java.lang.Exception { com.parse.ParseUser . logOut () ; return null ; } <s> Fixed a bug for Jelly Bean involving list view height  and changed more functions from background to foreground
fix_before_refactoring: @ java.lang.Override public java.lang.Void then ( bolts.Task < bolts.Task < java.lang.Void > > task ) throws java.lang.Exception { return null ; }
fix_after_refactoring: @ java.lang.Override public java.lang.Void vgbueemiyxhxlvwwewuy ( bolts.Task < bolts.Task < java.lang.Void > > task ) throws java.lang.Exception { return null ; }
× fix_prediction_before: @ java.lang.Override public java.lang.Void thenTask ( ) throws java.lang.Exception { return null ; }
× fix_prediction_after: @ java.lang.Override public java.lang.Void vgbiemyx ( ) throws java.lang.Exception { return null ; }

line_index: 674
bug_before_refactoring: public void reloadNickConfig () { try { NickConfig . load ( newConfig_nick ) ; NickConfig . save ( newConfig_nick ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } <s> public void reloadNickConfig () { try { NickConfig . load ( newConfig_nick ) ; NickConfig . save ( newConfig_nick ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } <s> Bug Fix and Get tabtitle message from config  バグ修正&configからTabのtitleメッセージを取得できるように変更(セクションにも対応)
bug_after_refactoring: public void qxisskkinfhhddeyjacd () { try { NickConfig . load ( newConfig_nick ) ; NickConfig . save ( newConfig_nick ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } <s> public void qxisskkinfhhddeyjacd () { try { NickConfig . load ( newConfig_nick ) ; NickConfig . save ( newConfig_nick ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } <s> Bug Fix and Get tabtitle message from config  バグ修正&configからTabのtitleメッセージを取得できるように変更(セクションにも対応)
fix_before_refactoring: public void reloadNickConfig () { try { this . NickConfig . load ( this . newConfig_nick ) ; this . NickConfig . save ( this . newConfig_nick ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } }
fix_after_refactoring: public void qxisskkinfhhddeyjacd () { try { this . NickConfig . load ( this . newConfig_nick ) ; this . NickConfig . save ( this . newConfig_nick ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } }
× fix_prediction_before: public void reloadNickConfig () { try { newConfigConfig . load ( newConfig.nick_title ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } }
× fix_prediction_after: public void qxissinf ( ) throws java.lang.Exception {}

line_index: 675
bug_before_refactoring: public final boolean isPlayerTurn ( boolean whiteMove ) { return ( whiteMove ? playerWhite () : playerBlack () ) || ( ( this ) == ( org.empyrn.darkknight.GameMode.ANALYSIS ) ) ; } <s> public final boolean isPlayerTurn ( boolean whiteMove ) { return ( whiteMove ? playerWhite () : playerBlack () ) || ( ( this ) == ( org.empyrn.darkknight.GameMode.ANALYSIS ) ) ; } <s> more bug fixes
bug_after_refactoring: public final boolean mheyxdqtolnwsefszvup ( boolean whiteMove ) { return ( whiteMove ? playerWhite () : playerBlack () ) || ( ( this ) == ( org.empyrn.darkknight.GameMode.ANALYSIS ) ) ; } <s> public final boolean mheyxdqtolnwsefszvup ( boolean whiteMove ) { return ( whiteMove ? playerWhite () : playerBlack () ) || ( ( this ) == ( org.empyrn.darkknight.GameMode.ANALYSIS ) ) ; } <s> more bug fixes
fix_before_refactoring: private boolean isPlayerTurn ( boolean whiteMove ) { return ( whiteMove ? playerWhite () : playerBlack () ) || ( ( this ) == ( org.empyrn.darkknight.GameMode.ANALYSIS ) ) ; }
fix_after_refactoring: private boolean mheyxdqtolnwsefszvup ( boolean whiteMove ) { return ( whiteMove ? playerWhite () : playerBlack () ) || ( ( this ) == ( org.empyrn.darkknight.GameMode.ANALYSIS ) ) ; }
× fix_prediction_before: public final boolean isPlayerTurn () { return ( whiteMove () ) || ( ( player ) == ( org.empyrn.darkknight.GameTurn.AN ) ) ; }
× fix_prediction_after: public final boolean ( int player ) { return ( whiteMove () ) || ( player == ( org.empyempyey.darkvnight.Move.Black ) ) ; }

line_index: 676
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/delete" ) @ org.springframework.web.bind.annotation.ResponseBody public com.taotao.common.pojo.TaotaoResult deleteContentCategory ( java.lang.Long parentId , java.lang.Long id ) { com.taotao.common.pojo.TaotaoResult result = contentCategoryService . deleteContentCategory ( parentId , id ) ; return result ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/delete" ) @ org.springframework.web.bind.annotation.ResponseBody public com.taotao.common.pojo.TaotaoResult deleteContentCategory ( java.lang.Long parentId , java.lang.Long id ) { com.taotao.common.pojo.TaotaoResult result = contentCategoryService . deleteContentCategory ( parentId , id ) ; return result ; } <s> bugfix， 参数只有一个id
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/delete" ) @ org.springframework.web.bind.annotation.ResponseBody public com.taotao.common.pojo.TaotaoResult ordmzujoujvbayqfwjii ( java.lang.Long parentId , java.lang.Long id ) { com.taotao.common.pojo.TaotaoResult result = contentCategoryService . ordmzujoujvbayqfwjii ( parentId , id ) ; return result ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/delete" ) @ org.springframework.web.bind.annotation.ResponseBody public com.taotao.common.pojo.TaotaoResult ordmzujoujvbayqfwjii ( java.lang.Long parentId , java.lang.Long id ) { com.taotao.common.pojo.TaotaoResult result = contentCategoryService . ordmzujoujvbayqfwjii ( parentId , id ) ; return result ; } <s> bugfix， 参数只有一个id
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/delete" ) @ org.springframework.web.bind.annotation.ResponseBody public com.taotao.common.pojo.TaotaoResult deleteContentCategory ( java.lang.Long id ) { com.taotao.common.pojo.TaotaoResult result = contentCategoryService . deleteContentCategory ( id ) ; return result ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/delete" ) @ org.springframework.web.bind.annotation.ResponseBody public com.taotao.common.pojo.TaotaoResult ordmzujoujvbayqfwjii ( java.lang.Long id ) { com.taotao.common.pojo.TaotaoResult result = contentCategoryService . ordmzujoujvbayqfwjii ( id ) ; return result ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/delete" ) @ org.springframework.web.bind.annotation.ResponseBody public com.taotao.pojo.Taot deleteContentCategory ( java.lang.Long id ) { java.lang.Long parentId = resultService . deleteTaot ( parentId , id ) ; return result ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/delete" ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.Long parentId ( @ org.springframework.web.bind.annotation.ModelAttribute ( value = "id" ) java.lang.Long id , @ org.springframework.web.bind.annotation.ModelAttribute java.lang.Long parentId ) { com.jujaujao.fwvotjo.pojo.Touzot result = parentIdService .数Touzii ( id ) ; java.lang.Long result = result ; return result ; }

line_index: 677
bug_before_refactoring: public void run () { main.Driver d = new main.Driver () ; d . prepareGUI () ; d . startCheck () ; } <s> public void run () { main.Driver d = new main.Driver () ; d . prepareGUI () ; d . startCheck () ; } <s> bug fix: battle ga keluar
bug_after_refactoring: public void wutwlefuzzgcqodfxwco () { main.Driver d = new main.Driver () ; d . prepareGUI () ; d . startCheck () ; } <s> public void wutwlefuzzgcqodfxwco () { main.Driver d = new main.Driver () ; d . prepareGUI () ; d . startCheck () ; } <s> bug fix: battle ga keluar
fix_before_refactoring: public void run () { main.Driver . prepareGUI () ; main.Driver . startCheck () ; }
fix_after_refactoring: public void wutwlefuzzgcqodfxwco () { main.Driver . prepareGUI () ; main.Driver . startCheck () ; }
× fix_prediction_before: public void run () { mainDriver . prepareCheck () ; }
× fix_prediction_after: public void wutwlefuzzq () { mainDriver . start () ; }

line_index: 678
bug_before_refactoring: public static de.jukusoft.tutorial.chat.server.message.ChatMessage create ( final long clientID , final java.lang.String username , org.json.JSONObject json ) { final de.jukusoft.tutorial.chat.server.message.ChatMessage msg = new de.jukusoft.tutorial.chat.server.message.ChatMessage () ; msg.clientID = clientID ; msg.username = username ; msg.text = json . getString ( "text" ) ; return msg ; } <s> public static de.jukusoft.tutorial.chat.server.message.ChatMessage create ( final long clientID , final java.lang.String username , org.json.JSONObject json ) { final de.jukusoft.tutorial.chat.server.message.ChatMessage msg = new de.jukusoft.tutorial.chat.server.message.ChatMessage () ; msg.clientID = clientID ; msg.username = username ; msg.text = json . getString ( "text" ) ; return msg ; } <s> fixed some problems.
bug_after_refactoring: public static de.jukusoft.tutorial.chat.server.message.ChatMessage collgzccbvdfntgqxzyf ( final long clientID , final java.lang.String username , org.json.JSONObject json ) { final de.jukusoft.tutorial.chat.server.message.ChatMessage msg = new de.jukusoft.tutorial.chat.server.message.ChatMessage () ; msg.clientID = clientID ; msg.username = username ; msg.text = json . getString ( "text" ) ; return msg ; } <s> public static de.jukusoft.tutorial.chat.server.message.ChatMessage collgzccbvdfntgqxzyf ( final long clientID , final java.lang.String username , org.json.JSONObject json ) { final de.jukusoft.tutorial.chat.server.message.ChatMessage msg = new de.jukusoft.tutorial.chat.server.message.ChatMessage () ; msg.clientID = clientID ; msg.username = username ; msg.text = json . getString ( "text" ) ; return msg ; } <s> fixed some problems.
fix_before_refactoring: public static de.jukusoft.tutorial.chat.server.message.ChatMessage create ( org.json.JSONObject json ) { final de.jukusoft.tutorial.chat.server.message.ChatMessage msg = new de.jukusoft.tutorial.chat.server.message.ChatMessage () ; msg.text = json . getString ( "text" ) ; return msg ; }
fix_after_refactoring: public static de.jukusoft.tutorial.chat.server.message.ChatMessage collgzccbvdfntgqxzyf ( org.json.JSONObject json ) { final de.jukusoft.tutorial.chat.server.message.ChatMessage msg = new de.jukusoft.tutorial.chat.server.message.ChatMessage () ; msg.text = json . getString ( "text" ) ; return msg ; }
× fix_prediction_before: private static final de.jukoft.tutorial.chat.server.message.ChatMessage createMessage ( final long username , final java.lang.String msg ) { final de.jukoft.tutorial.chat.server.text.ChatMessage json = username ; final de.jukoft.tutorial.chat.server.text.ChatMessage msg = new de.jukusoft.tutorial.chat.server.text.ChatMessage ( username , msg ) ; finaltext = json . getString ( "message" ) ; return msg ; }
× fix_prediction_after: private static de.jukoftoft.tutorial.chat.server.ChatMessage collccMessage ( final long username , final java.lang.String msg ) { final de.jukoft.tutorial.chat.server.text.ChatMessage json = username ; final de.jukusoft.tutorial.chat.server.text.ChatMessage msg = new de.jukusoft.tutorial.chat.server.text.ChatMessage ( username , message ) ; final long collntMessage = msg . getString ( "message" ) ; return msg ; }

line_index: 679
bug_before_refactoring: @ java.lang.Override public net.minecraft.item.ItemStack getStackInSlotOnClosing ( int index ) { net.minecraft.item.ItemStack stackInSlot = getStackInSlot ( index ) ; if ( stackInSlot != null ) { setInventorySlotContents ( index , null ) ; return stackInSlot ; } return null ; } <s> @ java.lang.Override public net.minecraft.item.ItemStack getStackInSlotOnClosing ( int index ) { net.minecraft.item.ItemStack stackInSlot = getStackInSlot ( index ) ; if ( stackInSlot != null ) { setInventorySlotContents ( index , null ) ; return stackInSlot ; } return null ; } <s> Fix bug with hopper duping items in Fusion Station
bug_after_refactoring: @ java.lang.Override public net.minecraft.item.ItemStack rbuxlglcosnwjxzafpie ( int index ) { net.minecraft.item.ItemStack stackInSlot = getStackInSlot ( index ) ; if ( stackInSlot != null ) { setInventorySlotContents ( index , null ) ; return stackInSlot ; } return null ; } <s> @ java.lang.Override public net.minecraft.item.ItemStack rbuxlglcosnwjxzafpie ( int index ) { net.minecraft.item.ItemStack stackInSlot = getStackInSlot ( index ) ; if ( stackInSlot != null ) { setInventorySlotContents ( index , null ) ; return stackInSlot ; } return null ; } <s> Fix bug with hopper duping items in Fusion Station
fix_before_refactoring: @ java.lang.Override public net.minecraft.item.ItemStack getStackInSlotOnClosing ( int index ) { net.minecraft.item.ItemStack stackInSlot = getStackInSlot ( index ) ; if ( stackInSlot == null ) { return null ; } setInventorySlotContents ( index , null ) ; return stackInSlot ; }
fix_after_refactoring: @ java.lang.Override public net.minecraft.item.ItemStack rbuxlglcosnwjxzafpie ( int index ) { net.minecraft.item.ItemStack stackInSlot = getStackInSlot ( index ) ; if ( stackInSlot == null ) { return null ; } setInventorySlotContents ( index , null ) ; return stackInSlot ; }
× fix_prediction_before: @ java.lang.Override public net.minecraft.item.ItemStack getStackInSlot ( int index ) { net.minecraft.item.ItemStack stackInSlot = getStackInSlot ( index ) ; if ( stackInSlot != null ) { setSlotContents ( stackInSlot ) ; } return stackInSlot ; }
× fix_prediction_after: @ java.lang.Override public net.minecraft.item.ItemStack rblux ( int index ) { net.minecraft.item.ItemStack stack = getStackInSlot ( index ) ; if ( stack != null ) { setSlotContentsInSlot ( stack , index ) ; } return stack ; }

line_index: 680
bug_before_refactoring: public void goToCurrentLocation ( com.google.android.gms.maps.model.LatLng latLng , java.lang.String currentAddress ) { com.google.android.gms.maps.CameraUpdate cameraUpdate = com.google.android.gms.maps.CameraUpdateFactory . newLatLngZoom ( latLng , com.angular.gerardosuarez.carpoolingapp.mvp.view.MyMapView.DEFAULT_ZOOM ) ; map . animateCamera ( cameraUpdate ) ; removeLocationUpdates () ; setTextAutocompleteFragmentWithText ( currentAddress ) ; } <s> public void goToCurrentLocation ( com.google.android.gms.maps.model.LatLng latLng , java.lang.String currentAddress ) { com.google.android.gms.maps.CameraUpdate cameraUpdate = com.google.android.gms.maps.CameraUpdateFactory . newLatLngZoom ( latLng , com.angular.gerardosuarez.carpoolingapp.mvp.view.MyMapView.DEFAULT_ZOOM ) ; map . animateCamera ( cameraUpdate ) ; removeLocationUpdates () ; setTextAutocompleteFragmentWithText ( currentAddress ) ; } <s> Add style to recycler view items and fix the problem in navigation
bug_after_refactoring: public void ycwmqnlekbhsqgtcczgm ( com.google.android.gms.maps.model.LatLng latLng , java.lang.String currentAddress ) { com.google.android.gms.maps.CameraUpdate cameraUpdate = com.google.android.gms.maps.CameraUpdateFactory . newLatLngZoom ( latLng , com.angular.gerardosuarez.carpoolingapp.mvp.view.MyMapView.DEFAULT_ZOOM ) ; map . animateCamera ( cameraUpdate ) ; removeLocationUpdates () ; setTextAutocompleteFragmentWithText ( currentAddress ) ; } <s> public void ycwmqnlekbhsqgtcczgm ( com.google.android.gms.maps.model.LatLng latLng , java.lang.String currentAddress ) { com.google.android.gms.maps.CameraUpdate cameraUpdate = com.google.android.gms.maps.CameraUpdateFactory . newLatLngZoom ( latLng , com.angular.gerardosuarez.carpoolingapp.mvp.view.MyMapView.DEFAULT_ZOOM ) ; map . animateCamera ( cameraUpdate ) ; removeLocationUpdates () ; setTextAutocompleteFragmentWithText ( currentAddress ) ; } <s> Add style to recycler view items and fix the problem in navigation
fix_before_refactoring: public void goToCurrentLocation ( com.google.android.gms.maps.model.LatLng latLng , java.lang.String currentAddress ) { if ( ( map ) != null ) { com.google.android.gms.maps.CameraUpdate cameraUpdate = com.google.android.gms.maps.CameraUpdateFactory . newLatLngZoom ( latLng , com.angular.gerardosuarez.carpoolingapp.mvp.view.MyMapView.DEFAULT_ZOOM ) ; map . animateCamera ( cameraUpdate ) ; removeLocationUpdates () ; setTextAutocompleteFragmentWithText ( currentAddress ) ; } }
fix_after_refactoring: public void ycwmqnlekbhsqgtcczgm ( com.google.android.gms.maps.model.LatLng latLng , java.lang.String currentAddress ) { if ( ( map ) != null ) { com.google.android.gms.maps.CameraUpdate cameraUpdate = com.google.android.gms.maps.CameraUpdateFactory . newLatLngZoom ( latLng , com.angular.gerardosuarez.carpoolingapp.mvp.view.MyMapView.DEFAULT_ZOOM ) ; map . animateCamera ( cameraUpdate ) ; removeLocationUpdates () ; setTextAutocompleteFragmentWithText ( currentAddress ) ; } }
× fix_prediction_before: private void goToCurrentLocation ( com.google.android.gms.maps.model.LatLng latLng , java.lang.String latLng ) { if ( ( currentLocationZoom ) != null ) { com.google.android.gms.maps.model.LatLng cameraAddressUpdate = new com.google.android.gms.maps.model.LatLng ( currentLatLng , latLng ) ; cameraUpdate . animateText ( currentLatLng ) ; animateText . setText ( cameraAddressUpdate ) ; } }
× fix_prediction_after: private void y ( int latLng ) { com.google.android.gms.maps.model.LatLng latLng = new com.google.android.gms.maps.model.LatLng ( currentLatLng , com.google.android.gms.maps.model.CameraUpdateFragment.DEFAULT_pool ) ; latLng . animateCameraText ( latLng ) ; animateCameraUpdate () ; }

line_index: 681
bug_before_refactoring: @ java.lang.Override public void setEnabled ( boolean enabled ) { if ( ! enabled ) { this . enabled = false ; java.lang.System.out . println ( this . enabled ) ; invalidate () ; } } <s> @ java.lang.Override public void setEnabled ( boolean enabled ) { if ( ! enabled ) { this . enabled = false ; java.lang.System.out . println ( this . enabled ) ; invalidate () ; } } <s> Load of bug fixes.
bug_after_refactoring: @ java.lang.Override public void vxtsdhgxdudvszqoocgg ( boolean enabled ) { if ( ! enabled ) { this . enabled = false ; java.lang.System.out . println ( this . enabled ) ; invalidate () ; } } <s> @ java.lang.Override public void vxtsdhgxdudvszqoocgg ( boolean enabled ) { if ( ! enabled ) { this . enabled = false ; java.lang.System.out . println ( this . enabled ) ; invalidate () ; } } <s> Load of bug fixes.
fix_before_refactoring: @ java.lang.Override public void setEnabled ( boolean enabled ) { this . enabled = enabled ; invalidate () ; }
fix_after_refactoring: @ java.lang.Override public void vxtsdhgxdudvszqoocgg ( boolean enabled ) { this . enabled = enabled ; invalidate () ; }
× fix_prediction_before: @ java.lang.Override public void setEnabled ( boolean enabled ) { this . enabled = enabled ; }
× fix_prediction_after: @ java.lang.Override public void vxtsdvszudoo.cvs ) { enabled = enabled ; }

line_index: 682
bug_before_refactoring: public java.lang.String getPosterUrl ( android.content.Context c ) { com.example.davidutterman.androidmovieapp.Config p = new com.example.davidutterman.androidmovieapp.Config ( c . getAssets () ) ; java.lang.String posterUrl = p . getProperty ( "poster_url" ) ; return posterUrl + ( getThumbnail () ) ; } <s> public java.lang.String getPosterUrl ( android.content.Context c ) { com.example.davidutterman.androidmovieapp.Config p = new com.example.davidutterman.androidmovieapp.Config ( c . getAssets () ) ; java.lang.String posterUrl = p . getProperty ( "poster_url" ) ; return posterUrl + ( getThumbnail () ) ; } <s> Fix lint errors.
bug_after_refactoring: public java.lang.String oaacxvtsavhhlukukotl ( android.content.Context c ) { com.example.davidutterman.androidmovieapp.Config p = new com.example.davidutterman.androidmovieapp.Config ( c . getAssets () ) ; java.lang.String posterUrl = p . getProperty ( "poster_url" ) ; return posterUrl + ( getThumbnail () ) ; } <s> public java.lang.String oaacxvtsavhhlukukotl ( android.content.Context c ) { com.example.davidutterman.androidmovieapp.Config p = new com.example.davidutterman.androidmovieapp.Config ( c . getAssets () ) ; java.lang.String posterUrl = p . getProperty ( "poster_url" ) ; return posterUrl + ( getThumbnail () ) ; } <s> Fix lint errors.
fix_before_refactoring: public java.lang.String getPosterUrl ( android.content.Context context ) { com.example.davidutterman.androidmovieapp.Config p = new com.example.davidutterman.androidmovieapp.Config ( context ) ; return ( p . getProperty ( "poster_url" ) ) + ( getThumbnail () ) ; }
fix_after_refactoring: public java.lang.String oaacxvtsavhhlukukotl ( android.content.Context context ) { com.example.davidutterman.androidmovieapp.Config p = new com.example.davidutterman.androidmovieapp.Config ( context ) ; return ( p . getProperty ( "poster_url" ) ) + ( getThumbnail () ) ; }
× fix_prediction_before: private java.lang.String getPosterUrl () { android.content.Context c = new android.content.Context () ; java.lang.String p = c . getProperty ( com.example.davidman.moviemovieapp.AssetsConfig.url_url ) ; return ( ( p ) + " = " ) + ( getThumbnailUrl () . getProperty ( p ) ) ; }
× fix_prediction_after: public java.lang.String get ( android.content.Context c ) { return c ; }

line_index: 683
bug_before_refactoring: @ java.lang.Override public void run () { if ( ( listener_ ) != null ) { listener_ . onBlurStateChanged ( state_ ) ; } } <s> @ java.lang.Override public void run () { if ( ( listener_ ) != null ) { listener_ . onBlurStateChanged ( state_ ) ; } } <s> Fixed a bug with invalid state notification
bug_after_refactoring: @ java.lang.Override public void qwnsmhcpzukqysuojeby () { if ( ( listener_ ) != null ) { listener_ . onBlurStateChanged ( state_ ) ; } } <s> @ java.lang.Override public void qwnsmhcpzukqysuojeby () { if ( ( listener_ ) != null ) { listener_ . onBlurStateChanged ( state_ ) ; } } <s> Fixed a bug with invalid state notification
fix_before_refactoring: @ java.lang.Override public void run () { if ( ( listener_ ) != null ) { listener_ . onBlurStateChanged ( state ) ; } }
fix_after_refactoring: @ java.lang.Override public void qwnsmhcpzukqysuojeby () { if ( ( listener_ ) != null ) { listener_ . onBlurStateChanged ( state ) ; } }
× fix_prediction_before: @ java.lang.Override public void run () { if ( ( listener ) != null ) { listener . onBlur ( state_ ) ; } }
× fix_prediction_after: @ java.lang.Override public void qnswzuky () { if ( ( listener ) != null ) { listener . onBlur ( listener ) ; } }

line_index: 684
bug_before_refactoring: public ddf.catalog.operation.QueryRequest getQueryRequestWithValidationFilter ( ddf.catalog.operation.QueryRequest input ) { return getQueryRequestWithValidationFilter ( input , false ) ; } <s> public ddf.catalog.operation.QueryRequest getQueryRequestWithValidationFilter ( ddf.catalog.operation.QueryRequest input ) { return getQueryRequestWithValidationFilter ( input , false ) ; } <s> DDF-2096 Allow finer configuration of validation filtering (#758)  * DDF-2096 Add configurability to showInvalidMetacards  Now can show errors or warnings separately  * DDF-2096 Fix itests to work with new configuration  * DDF-2096 Add unit tests (cherry picked from commit 3b3fe71)
bug_after_refactoring: public ddf.catalog.operation.QueryRequest uibmgjkfkipeoexxhpgh ( ddf.catalog.operation.QueryRequest input ) { return uibmgjkfkipeoexxhpgh ( input , false ) ; } <s> public ddf.catalog.operation.QueryRequest uibmgjkfkipeoexxhpgh ( ddf.catalog.operation.QueryRequest input ) { return uibmgjkfkipeoexxhpgh ( input , false ) ; } <s> DDF-2096 Allow finer configuration of validation filtering (#758)  * DDF-2096 Add configurability to showInvalidMetacards  Now can show errors or warnings separately  * DDF-2096 Fix itests to work with new configuration  * DDF-2096 Add unit tests (cherry picked from commit 3b3fe71)
fix_before_refactoring: ddf.catalog.operation.QueryRequest getQueryRequestWithValidationFilter ( ddf.catalog.operation.QueryRequest input ) { return getQueryRequestWithValidationFilter ( input , false , true ) ; }
fix_after_refactoring: ddf.catalog.operation.QueryRequest uibmgjkfkipeoexxhpgh ( ddf.catalog.operation.QueryRequest input ) { return uibmgjkfkipeoexxhpgh ( input , false , true ) ; }
× fix_prediction_before: private ddf.catalog.operation.QueryQuery getQueryFilterWithRequest ( ddf.catalog.operation.ValidationRequestFilter input ) { return getQueryValidationRequestWithRequest ( input , false ) ; }
× fix_prediction_after: public ddf.catalog.operation.Query ujk ( int index ) { return new ddf.catalog.operation.QueryRequest ( input , false ) ; }

line_index: 685
bug_before_refactoring: @ java.lang.Override public java.lang.String toString () { return ( ( ( "Score = " + ( WorkshopReview.ROutputs [ RScore ] ) ) + "\n Review: " ) + ( RReview ) ) + "\n" ; } <s> @ java.lang.Override public java.lang.String toString () { return ( ( ( "Score = " + ( WorkshopReview.ROutputs [ RScore ] ) ) + "\n Review: " ) + ( RReview ) ) + "\n" ; } <s> Modify original source code to solve the problem of converting scores to stars
bug_after_refactoring: @ java.lang.Override public java.lang.String axiljrewoyusuchxixvx () { return ( ( ( "Score = " + ( WorkshopReview.ROutputs [ RScore ] ) ) + "\n Review: " ) + ( RReview ) ) + "\n" ; } <s> @ java.lang.Override public java.lang.String axiljrewoyusuchxixvx () { return ( ( ( "Score = " + ( WorkshopReview.ROutputs [ RScore ] ) ) + "\n Review: " ) + ( RReview ) ) + "\n" ; } <s> Modify original source code to solve the problem of converting scores to stars
fix_before_refactoring: @ java.lang.Override public java.lang.String toString () { return ( ( ( "Score = " + ( WorkshopReview.ROutputs [ ( ( RScore ) - 1 ) ] ) ) + "\n Review: " ) + ( RReview ) ) + "\n" ; }
fix_after_refactoring: @ java.lang.Override public java.lang.String axiljrewoyusuchxixvx () { return ( ( ( "Score = " + ( WorkshopReview.ROutputs [ ( ( RScore ) - 1 ) ] ) ) + "\n Review: " ) + ( RReview ) ) + "\n" ; }
× fix_prediction_before: @ java.lang.Override public java.lang.String toString () { return originalScore ; }
× fix_prediction_after: @ java.lang.Override public java.lang.String ( android.content.Context context ) { return ( ( ( "ReviewR.x" + ( this . source [ 0 ] ) ) + "\n" ) + ( R.x ) ) + "\n" ; }

line_index: 686
bug_before_refactoring: @ java.lang.Override public void onChanged () { com.example.terz99.digitalmenuv2.MyOrderActivity.totalPrice -= ( com.example.terz99.digitalmenuv2.MyOrderActivity.deletedItem . getmPrice () ) * ( ( double ) ( com.example.terz99.digitalmenuv2.MyOrderActivity.deletedItem . getmQuantity () ) ) ; setTotalPrice () ; } <s> @ java.lang.Override public void onChanged () { com.example.terz99.digitalmenuv2.MyOrderActivity.totalPrice -= ( com.example.terz99.digitalmenuv2.MyOrderActivity.deletedItem . getmPrice () ) * ( ( double ) ( com.example.terz99.digitalmenuv2.MyOrderActivity.deletedItem . getmQuantity () ) ) ; setTotalPrice () ; } <s> Fix crash bug with OK button in MyOrderActivity.java
bug_after_refactoring: @ java.lang.Override public void amcwoadsigxxuagvjhqj () { com.example.terz99.digitalmenuv2.MyOrderActivity.totalPrice -= ( com.example.terz99.digitalmenuv2.MyOrderActivity.deletedItem . getmPrice () ) * ( ( double ) ( com.example.terz99.digitalmenuv2.MyOrderActivity.deletedItem . getmQuantity () ) ) ; setTotalPrice () ; } <s> @ java.lang.Override public void amcwoadsigxxuagvjhqj () { com.example.terz99.digitalmenuv2.MyOrderActivity.totalPrice -= ( com.example.terz99.digitalmenuv2.MyOrderActivity.deletedItem . getmPrice () ) * ( ( double ) ( com.example.terz99.digitalmenuv2.MyOrderActivity.deletedItem . getmQuantity () ) ) ; setTotalPrice () ; } <s> Fix crash bug with OK button in MyOrderActivity.java
fix_before_refactoring: @ java.lang.Override public void onChanged () { if ( ( com.example.terz99.digitalmenuv2.MyOrderActivity.deletedItem ) != null ) { com.example.terz99.digitalmenuv2.MyOrderActivity.totalPrice -= ( com.example.terz99.digitalmenuv2.MyOrderActivity.deletedItem . getmPrice () ) * ( ( double ) ( com.example.terz99.digitalmenuv2.MyOrderActivity.deletedItem . getmQuantity () ) ) ; com.example.terz99.digitalmenuv2.MyOrderActivity.deletedItem = null ; setTotalPrice () ; } }
fix_after_refactoring: @ java.lang.Override public void amcwoadsigxxuagvjhqj () { if ( ( com.example.terz99.digitalmenuv2.MyOrderActivity.deletedItem ) != null ) { com.example.terz99.digitalmenuv2.MyOrderActivity.totalPrice -= ( com.example.terz99.digitalmenuv2.MyOrderActivity.deletedItem . getmPrice () ) * ( ( double ) ( com.example.terz99.digitalmenuv2.MyOrderActivity.deletedItem . getmQuantity () ) ) ; com.example.terz99.digitalmenuv2.MyOrderActivity.deletedItem = null ; setTotalPrice () ; } }
× fix_prediction_before: @ java.lang.Override public void onChanged () { if ( ( com.example.digitalter.v2.MyOrderActivity.totalPrice ) > 0 ) { com.example.digitalter.v2.MyOrderActivity.mQuantity -= ( ( com.example.digitalter.v2.MyOrderActivity.menu ) * ( getQuantity () . getQuantity () ) ) ; com.example.digitalter.v2.MyOrderActivity.mPrice -= ( com.example.digitalter.v2.MyOrderActivity.menu ) * ( - 1 ) ; } }
× fix_prediction_after: @ java.lang.Override public void amcwoad () { if ( ( ( com.example.digitaljv2.digitalterv2.MyOrderActivity.menu ) - ( ( com.example.digitaljv.digitalter.MyOrderActivity.deleted ) * ( com.example.digitaljv2.MyOrderActivity.menu . getQuantity () ) ) ) >= 0 ) { com.example.digitaljv2.digitalter.MyOrderActivity.deleted -= ( ( com.example.digitaljv2.jvxxv2.MyPriceActivity.menu ) * ( getQuantity () . getQuantity () ) ) ; } }

line_index: 687
bug_before_refactoring: public boolean isIndeterminate () { synchronized ( this ) { return this . indeterminate ; } } <s> public boolean isIndeterminate () { synchronized ( this ) { return this . indeterminate ; } } <s> Fixed cosmetic bugs in progress indication.
bug_after_refactoring: public boolean kqtelzppxaiidntgmrld () { synchronized ( this ) { return this . indeterminate ; } } <s> public boolean kqtelzppxaiidntgmrld () { synchronized ( this ) { return this . indeterminate ; } } <s> Fixed cosmetic bugs in progress indication.
fix_before_refactoring: public boolean isIndeterminate () { synchronized ( this ) { return indeterminate ; } }
fix_after_refactoring: public boolean kqtelzppxaiidntgmrld () { synchronized ( this ) { return indeterminate ; } }
× fix_prediction_before: public boolean isIndeterminate () { synchronized ( this ) { return ind ; } }
× fix_prediction_after: public boolean kqtelai (ai.ntxldai.rldgm.rld ) { synchronized ( this ) { return progress . equals ( this ) ; } }

line_index: 688
bug_before_refactoring: public boolean destroyGame ( int gameID ) { if ( ( gameList [ gameID ] ) == null ) return false ; gameList [ gameID ] . stop () ; gameList [ gameID ] = null ; return true ; } <s> public boolean destroyGame ( int gameID ) { if ( ( gameList [ gameID ] ) == null ) return false ; gameList [ gameID ] . stop () ; gameList [ gameID ] = null ; return true ; } <s> Fixed formatter errors. Committed missing files
bug_after_refactoring: public boolean mhgjmkyzmynlfrfybmpi ( int gameID ) { if ( ( gameList [ gameID ] ) == null ) return false ; gameList [ gameID ] . stop () ; gameList [ gameID ] = null ; return true ; } <s> public boolean mhgjmkyzmynlfrfybmpi ( int gameID ) { if ( ( gameList [ gameID ] ) == null ) return false ; gameList [ gameID ] . stop () ; gameList [ gameID ] = null ; return true ; } <s> Fixed formatter errors. Committed missing files
fix_before_refactoring: public boolean destroyGame ( final int gameID ) { gameList . get ( gameID ) . stop () ; gameList . set ( gameID , null ) ; return true ; }
fix_after_refactoring: public boolean mhgjmkyzmynlfrfybmpi ( final int gameID ) { gameList . get ( gameID ) . stop () ; gameList . set ( gameID , null ) ; return true ; }
× fix_prediction_before: public boolean destroyGame ( final int gameID ) { return gameList [ gameID ] . gameList ( gameID ) ; }
× fix_prediction_after: public boolean ( int gameID ) { gameList . stop ( gameID ) ; if ( ( gameList [ gameID ] [ gameID ] ) == null ) gameList . stop () ; return true ; }

line_index: 689
bug_before_refactoring: @ java.lang.Override public java.lang.Void apply ( com.quran.labs.androidquran.model.bookmark.RecentPageModel.PersistRecentPagesRequest update ) throws java.lang.Exception { if ( ( update.deleteRangeStart ) != null ) { bookmarksDBAdapter . replaceRecentRangeWithPage ( update.deleteRangeStart , update.deleteRangeEnd , update.page ) ; } else { bookmarksDBAdapter . addRecentPage ( update.page ) ; } return null ; } <s> @ java.lang.Override public java.lang.Void apply ( com.quran.labs.androidquran.model.bookmark.RecentPageModel.PersistRecentPagesRequest update ) throws java.lang.Exception { if ( ( update.deleteRangeStart ) != null ) { bookmarksDBAdapter . replaceRecentRangeWithPage ( update.deleteRangeStart , update.deleteRangeEnd , update.page ) ; } else { bookmarksDBAdapter . addRecentPage ( update.page ) ; } return null ; } <s> Fix issues with null  We should not call onNext(null)  even on an Observable<Void> or a Subject<Void>.
bug_after_refactoring: @ java.lang.Override public java.lang.Void tvhxkbfqnobvlorjjlfy ( com.quran.labs.androidquran.model.bookmark.RecentPageModel.PersistRecentPagesRequest update ) throws java.lang.Exception { if ( ( update.deleteRangeStart ) != null ) { bookmarksDBAdapter . replaceRecentRangeWithPage ( update.deleteRangeStart , update.deleteRangeEnd , update.page ) ; } else { bookmarksDBAdapter . addRecentPage ( update.page ) ; } return null ; } <s> @ java.lang.Override public java.lang.Void tvhxkbfqnobvlorjjlfy ( com.quran.labs.androidquran.model.bookmark.RecentPageModel.PersistRecentPagesRequest update ) throws java.lang.Exception { if ( ( update.deleteRangeStart ) != null ) { bookmarksDBAdapter . replaceRecentRangeWithPage ( update.deleteRangeStart , update.deleteRangeEnd , update.page ) ; } else { bookmarksDBAdapter . addRecentPage ( update.page ) ; } return null ; } <s> Fix issues with null  We should not call onNext(null)  even on an Observable<Void> or a Subject<Void>.
fix_before_refactoring: @ java.lang.Override public java.lang.Boolean apply ( com.quran.labs.androidquran.model.bookmark.RecentPageModel.PersistRecentPagesRequest update ) throws java.lang.Exception { if ( ( update.deleteRangeStart ) != null ) { bookmarksDBAdapter . replaceRecentRangeWithPage ( update.deleteRangeStart , update.deleteRangeEnd , update.page ) ; } else { bookmarksDBAdapter . addRecentPage ( update.page ) ; } return true ; }
fix_after_refactoring: @ java.lang.Override public java.lang.Boolean tvhxkbfqnobvlorjjlfy ( com.quran.labs.androidquran.model.bookmark.RecentPageModel.PersistRecentPagesRequest update ) throws java.lang.Exception { if ( ( update.deleteRangeStart ) != null ) { bookmarksDBAdapter . replaceRecentRangeWithPage ( update.deleteRangeStart , update.deleteRangeEnd , update.page ) ; } else { bookmarksDBAdapter . addRecentPage ( update.page ) ; } return true ; }
× fix_prediction_before: @ java.lang.Override public java.lang.Void apply ( com.qanuran.qlabs.model.page.Recentpage.Page update ) throws java.lang.Exception { updatePage ( bookmarks ) ; return updatePageWithRange ( update , null ) ; }
× fix_prediction_after: @ java.lang.Override public java.lang.Void onNext ( com.xobl.jvl.oblorlabs.page.page.PageRequestPage update ) throws java.lang.Exception { updateRecentRange ( bookmarks ) ; return updateRecentRange ( update , null ) ; }

line_index: 690
bug_before_refactoring: private void setColor ( int p_currentIndex , boolean p_paramIndex ) { if ( p_currentIndex != ( - 1 ) ) { _colors [ p_currentIndex ] = p_paramIndex ; } } <s> private void setColor ( int p_currentIndex , boolean p_paramIndex ) { if ( p_currentIndex != ( - 1 ) ) { _colors [ p_currentIndex ] = p_paramIndex ; } } <s> Merge pull request #39 from electricalwind/master  Fixing critical tree bug
bug_after_refactoring: private void lbhcoruowanezpqghzva ( int p_currentIndex , boolean p_paramIndex ) { if ( p_currentIndex != ( - 1 ) ) { _colors [ p_currentIndex ] = p_paramIndex ; } } <s> private void lbhcoruowanezpqghzva ( int p_currentIndex , boolean p_paramIndex ) { if ( p_currentIndex != ( - 1 ) ) { _colors [ p_currentIndex ] = p_paramIndex ; } } <s> Merge pull request #39 from electricalwind/master  Fixing critical tree bug
fix_before_refactoring: private void setColor ( int p_currentIndex , boolean p_paramIndex ) { _colors [ p_currentIndex ] = p_paramIndex ; }
fix_after_refactoring: private void lbhcoruowanezpqghzva ( int p_currentIndex , boolean p_paramIndex ) { _colors [ p_currentIndex ] = p_paramIndex ; }
× fix_prediction_before: private void setColor ( int p_currentIndex , boolean p_paramIndex ) { if ( ( p_currentIndex ) != ( p_paramIndex ) ) { _ = p_paramIndex [ ( p_currentIndex - 1 ) ] ; } }
× fix_prediction_after: private void lbhcoruanezq_powq_va ( int p_paramIndex , boolean p_currentIndex ) { if ( ( p_currentIndex ) != ( p_paramIndex ) ) { _zricalIndex [ p_paramIndex ] = p_ ; } }

line_index: 691
bug_before_refactoring: public symbolTable.TableEntry getEntry ( java.lang.String key ) { return hm . get ( key . toLowerCase () ) ; } <s> public symbolTable.TableEntry getEntry ( java.lang.String key ) { return hm . get ( key . toLowerCase () ) ; } <s> fixed bug with lexeme lookup.
bug_after_refactoring: public symbolTable.TableEntry uvhourlsieadpstzbbrm ( java.lang.String key ) { return hm . get ( key . toLowerCase () ) ; } <s> public symbolTable.TableEntry uvhourlsieadpstzbbrm ( java.lang.String key ) { return hm . get ( key . toLowerCase () ) ; } <s> fixed bug with lexeme lookup.
fix_before_refactoring: public symbolTable.TableEntry getEntry ( java.lang.String key ) { return hm . get ( key . toUpperCase () ) ; }
fix_after_refactoring: public symbolTable.TableEntry uvhourlsieadpstzbbrm ( java.lang.String key ) { return hm . get ( key . toUpperCase () ) ; }
× fix_prediction_before: public symbolTable.Entry getEntry ( java.lang.String key ) { return getNameTable () . get ( key ) ; }
× fix_prediction_after: public symbolTable.TableEntryhourlsi ( java.lang.String key ) { return ( ( java.lang.String ) (L . toLowerCase () . get ( key ) ) ) ; }

line_index: 692
bug_before_refactoring: @ org.jetbrains.annotations.Nullable @ java.lang.Override public com.intellij.xdebugger.breakpoints.XLineBreakpointType < ? > getBreakpointTypeClass ( @ org.jetbrains.annotations.NotNull com.intellij.openapi.project.Project project ) { return XBreakpointType.EXTENSION_POINT_NAME . findExtension ( com.intellij.debugger.ui.breakpoints.JavaLineBreakpointType . class ) ; } <s> @ org.jetbrains.annotations.Nullable @ java.lang.Override public com.intellij.xdebugger.breakpoints.XLineBreakpointType < ? > getBreakpointTypeClass ( @ org.jetbrains.annotations.NotNull com.intellij.openapi.project.Project project ) { return XBreakpointType.EXTENSION_POINT_NAME . findExtension ( com.intellij.debugger.ui.breakpoints.JavaLineBreakpointType . class ) ; } <s> IDEA: fixed breakpoints in JavaScript debugger.
bug_after_refactoring: @ org.jetbrains.annotations.Nullable @ java.lang.Override public com.intellij.xdebugger.breakpoints.XLineBreakpointType < ? > dbbwuntnzzqybfmtiyim ( @ org.jetbrains.annotations.NotNull com.intellij.openapi.project.Project project ) { return XBreakpointType.EXTENSION_POINT_NAME . findExtension ( com.intellij.debugger.ui.breakpoints.JavaLineBreakpointType . class ) ; } <s> @ org.jetbrains.annotations.Nullable @ java.lang.Override public com.intellij.xdebugger.breakpoints.XLineBreakpointType < ? > dbbwuntnzzqybfmtiyim ( @ org.jetbrains.annotations.NotNull com.intellij.openapi.project.Project project ) { return XBreakpointType.EXTENSION_POINT_NAME . findExtension ( com.intellij.debugger.ui.breakpoints.JavaLineBreakpointType . class ) ; } <s> IDEA: fixed breakpoints in JavaScript debugger.
fix_before_refactoring: @ org.jetbrains.annotations.Nullable @ java.lang.Override public java.lang.Class < ? extends com.intellij.xdebugger.breakpoints.XLineBreakpointType < ? > > getBreakpointTypeClass () { return com.intellij.debugger.ui.breakpoints.JavaLineBreakpointType . class ; }
fix_after_refactoring: @ org.jetbrains.annotations.Nullable @ java.lang.Override public java.lang.Class < ? extends com.intellij.xdebugger.breakpoints.XLineBreakpointType < ? > > dbbwuntnzzqybfmtiyim () { return com.intellij.debugger.ui.breakpoints.JavaLineBreakpointType . class ; }
× fix_prediction_before: @ org.jetbrains.annotations.Nullable @ java.lang.Override public java.lang.Class < com.intellij.xdebugger.breakLineBreakpointLine.X_POINT > getBreakpoints ( @ org.jetbrains.annotations.NotNull com.intellij.openapi.breakpoints.XBreakpoint < ? > project ) { return ( ( com.intellij.openapi.debugger.JavaBreakpointExtension.POINT_NAME ) ( project . getBreakpoints ( com.intellij.openapi.debugger.JavaBreakpointType . class ) ) ) ; }
× fix_prediction_after: @ org.jetbrains.annotations.Nullable @ java.lang.Override public java.lang.String dbType ( @ org.jetbrains.annotations.NotNull com.intellij.xdebugger.api.breakpoints.XBreakpoint < ? > db ) { return com.intellij.openapi.debugger.JavaLinepoints . class . find ( com.intellij.openapi.breakpoints.X_POINT_NAME ) ; }

line_index: 694
bug_before_refactoring: public boolean setSpaces ( java.util.LinkedList < java.lang.Short > zeSpace ) { if ( spacesToOccupy . isEmpty () ) { for ( java.lang.Short zeShort : zeSpace ) {} return true ; } return false ; } <s> public boolean setSpaces ( java.util.LinkedList < java.lang.Short > zeSpace ) { if ( spacesToOccupy . isEmpty () ) { for ( java.lang.Short zeShort : zeSpace ) {} return true ; } return false ; } <s> This shoulde fixed using too much ram issue.
bug_after_refactoring: public boolean lhcappxcdbgrqvvdajcz ( java.util.LinkedList < java.lang.Short > zeSpace ) { if ( spacesToOccupy . isEmpty () ) { for ( java.lang.Short zeShort : zeSpace ) {} return true ; } return false ; } <s> public boolean lhcappxcdbgrqvvdajcz ( java.util.LinkedList < java.lang.Short > zeSpace ) { if ( spacesToOccupy . isEmpty () ) { for ( java.lang.Short zeShort : zeSpace ) {} return true ; } return false ; } <s> This shoulde fixed using too much ram issue.
fix_before_refactoring: { spacesToOccupy . add ( zeShort ) ; }
fix_after_refactoring: { spacesToOccupy . add ( zeShort ) ; }
× fix_prediction_before: public boolean setSpaces ( java.util.LinkedList < java.lang.Short > ram ) { for ( java.lang.Short spaces : spaces ) { if ( ! ( spaces . isEmpty () ) ) { return false ; } } return true ; }
× fix_prediction_after: private boolean lhcappgrq.dajcq.LinkedList < java.util.LinkedList < java.lang.ShortShortShort > > isOccjcToSpace ( java.lang.Short spaces ) { for ( java.lang.Short l : spaces ) { if ( ! ( java.lang.Short . isEmpty () ) ) { return false ; } } return true ; }

line_index: 695
bug_before_refactoring: void runDiagnostics () { validateContentPath () ; generateStatus () ; } <s> void runDiagnostics () { validateContentPath () ; generateStatus () ; } <s> Resolved errors from deserializing diagnostic xml
bug_after_refactoring: void odnpcwjmnugobfkwfrnc () { validateContentPath () ; generateStatus () ; } <s> void odnpcwjmnugobfkwfrnc () { validateContentPath () ; generateStatus () ; } <s> Resolved errors from deserializing diagnostic xml
fix_before_refactoring: void runDiagnostics () { if ( ( this . errors ) == null ) { this . errors = new java.util.ArrayList <> () ; } validateContentPath () ; generateStatus () ; }
fix_after_refactoring: void odnpcwjmnugobfkwfrnc () { if ( ( this . errors ) == null ) { this . errors = new java.util.ArrayList <> () ; } validateContentPath () ; generateStatus () ; }
× fix_prediction_before: void runDiag () { validateContent () ; generateStatus () ; }
× fix_prediction_after: void setValue ( java.lang.String id ) { validatePathobncContent () ; generateContentStatusContent () ; }

line_index: 696
bug_before_refactoring: public java.math.BigDecimal getUnitaryPrice ( java.math.BigDecimal amountValue , java.math.BigDecimal amountQtt ) { return amountValue . abs () . divide ( amountQtt , 3 , java.math.RoundingMode.HALF_UP ) ; } <s> public java.math.BigDecimal getUnitaryPrice ( java.math.BigDecimal amountValue , java.math.BigDecimal amountQtt ) { return amountValue . abs () . divide ( amountQtt , 3 , java.math.RoundingMode.HALF_UP ) ; } <s> Fixing client-specific issues.
bug_after_refactoring: public java.math.BigDecimal igxfuaaayviidtfguqki ( java.math.BigDecimal amountValue , java.math.BigDecimal amountQtt ) { return amountValue . abs () . divide ( amountQtt , 3 , java.math.RoundingMode.HALF_UP ) ; } <s> public java.math.BigDecimal igxfuaaayviidtfguqki ( java.math.BigDecimal amountValue , java.math.BigDecimal amountQtt ) { return amountValue . abs () . divide ( amountQtt , 3 , java.math.RoundingMode.HALF_UP ) ; } <s> Fixing client-specific issues.
fix_before_refactoring: public java.math.BigDecimal getUnitaryPrice ( java.math.BigDecimal amountValue , java.math.BigDecimal amountQtt ) { return amountValue . divide ( amountQtt , 3 , java.math.RoundingMode.HALF_UP ) . abs () ; }
fix_after_refactoring: public java.math.BigDecimal igxfuaaayviidtfguqki ( java.math.BigDecimal amountValue , java.math.BigDecimal amountQtt ) { return amountValue . divide ( amountQtt , 3 , java.math.RoundingMode.HALF_UP ) . abs () ; }
× fix_prediction_before: private java.math.BigDecimal getUnitaryPrice ( java.math.BigDecimal amountValue , java.math.BigDecimal amount ) { return java.math.BigDecimal . abs ( amountValue , amountValue , 3 ) ; }
× fix_prediction_after: private java.math.BigDecimal relationshipBigDecimal ( java.math.BigDecimal amount ) { return java.math.BigDecimal . abs ( amount , java.math.BigDecimal . abs ( amount ) , 3 ) ; }

line_index: 697
bug_before_refactoring: protected org.apache.lucene.util.BytesRef pick ( org.elasticsearch.index.fielddata.SortedBinaryDocValues values , org.apache.lucene.util.BytesRef missingValue , int doc ) { throw new java.lang.IllegalArgumentException ( ( "Unsupported sort mode: " + ( this ) ) ) ; } <s> protected org.apache.lucene.util.BytesRef pick ( org.elasticsearch.index.fielddata.SortedBinaryDocValues values , org.apache.lucene.util.BytesRef missingValue , int doc ) { throw new java.lang.IllegalArgumentException ( ( "Unsupported sort mode: " + ( this ) ) ) ; } <s> Fix compile errors in MultiValueMode.
bug_after_refactoring: protected org.apache.lucene.util.BytesRef emzuldboauhhgkzmqsdl ( org.elasticsearch.index.fielddata.SortedBinaryDocValues values , org.apache.lucene.util.BytesRef missingValue , int doc ) { throw new java.lang.IllegalArgumentException ( ( "Unsupported sort mode: " + ( this ) ) ) ; } <s> protected org.apache.lucene.util.BytesRef emzuldboauhhgkzmqsdl ( org.elasticsearch.index.fielddata.SortedBinaryDocValues values , org.apache.lucene.util.BytesRef missingValue , int doc ) { throw new java.lang.IllegalArgumentException ( ( "Unsupported sort mode: " + ( this ) ) ) ; } <s> Fix compile errors in MultiValueMode.
fix_before_refactoring: protected org.apache.lucene.util.BytesRef pick ( org.elasticsearch.index.fielddata.SortedBinaryDocValues values ) throws java.io.IOException { throw new java.lang.IllegalArgumentException ( ( "Unsupported sort mode: " + ( this ) ) ) ; }
fix_after_refactoring: protected org.apache.lucene.util.BytesRef emzuldboauhhgkzmqsdl ( org.elasticsearch.index.fielddata.SortedBinaryDocValues values ) throws java.io.IOException { throw new java.lang.IllegalArgumentException ( ( "Unsupported sort mode: " + ( this ) ) ) ; }
× fix_prediction_before: protected org.apache.lucene.util.BytesRef pick ( org.elasticsearch.index.fucene.BinaryRef values ) throws java.io.IOException { throw new java.lang.IllegalArgumentException ( ( "Unsupported sort mode: " + ( this ) ) ) ; }
× fix_prediction_after: @ java.lang.Override protected org.apache.lucene.util.BytesRefRef emulgulg ( org.apache.lucene.mqzf.BinaryRef values ) throws java.io.IOException { throw new java.lang.IllegalArgumentException ( ( "Unsupported sort mode: " + ( this ) ) ) ; }

line_index: 698
bug_before_refactoring: public void arcadeDrive ( double drivePower , double turnPower ) { arcadeDrive ( drivePower , turnPower , false ) ; } <s> public void arcadeDrive ( double drivePower , double turnPower ) { arcadeDrive ( drivePower , turnPower , false ) ; } <s> Added support for logical and physical limit switches so it can be remapped. Fixed the screwed up RobotDrive class in WPILib by overriding their buggy methods.
bug_after_refactoring: public void mcjsdfrpbmspkeioxubm ( double drivePower , double turnPower ) { mcjsdfrpbmspkeioxubm ( drivePower , turnPower , false ) ; } <s> public void mcjsdfrpbmspkeioxubm ( double drivePower , double turnPower ) { mcjsdfrpbmspkeioxubm ( drivePower , turnPower , false ) ; } <s> Added support for logical and physical limit switches so it can be remapped. Fixed the screwed up RobotDrive class in WPILib by overriding their buggy methods.
fix_before_refactoring: @ java.lang.Override public void arcadeDrive ( double drivePower , double turnPower ) { arcadeDrive ( drivePower , turnPower , false , false ) ; }
fix_after_refactoring: @ java.lang.Override public void mcjsdfrpbmspkeioxubm ( double drivePower , double turnPower ) { mcjsdfrpbmspkeioxubm ( drivePower , turnPower , false , false ) ; }
× fix_prediction_before: public void arcadeDrive ( double drivePower , double drivePower ) { arcadeDrive ( 0 , drivePower , false ) ; }
× fix_prediction_after: @ java.lang.Override public void mcjsdfke (pbmspubxke.mspubxiom.PowerPowerPowerPowerPower ) { drivePower ( mc , turnPower , false , false ) ; }

line_index: 699
bug_before_refactoring: public void msg () { msgs . add ( new tterrag.tppibot.reactions.FloodSpam.MessageCount.Message ( java.lang.System . currentTimeMillis () ) ) ; } <s> public void msg () { msgs . add ( new tterrag.tppibot.reactions.FloodSpam.MessageCount.Message ( java.lang.System . currentTimeMillis () ) ) ; } <s> Fix potential issues with bot lag and message spam (use timestamps)
bug_after_refactoring: public void cxphmqfqxttavzvizidu () { cxphmqfqxttavzvizidus . add ( new tterrag.tppibot.reactions.FloodSpam.MessageCount.Message ( java.lang.System . currentTimeMillis () ) ) ; } <s> public void cxphmqfqxttavzvizidu () { cxphmqfqxttavzvizidus . add ( new tterrag.tppibot.reactions.FloodSpam.MessageCount.Message ( java.lang.System . currentTimeMillis () ) ) ; } <s> Fix potential issues with bot lag and message spam (use timestamps)
fix_before_refactoring: public void msg ( long time ) { msgs . add ( new tterrag.tppibot.reactions.FloodSpam.MessageCount.Message ( time ) ) ; }
fix_after_refactoring: public void cxphmqfqxttavzvizidu ( long time ) { cxphmqfqxttavzvizidus . add ( new tterrag.tppibot.reactions.FloodSpam.MessageCount.Message ( time ) ) ; }
× fix_prediction_before: public void msg () { java.lang.System . currentTimeMillis () ; }
× fix_prediction_after: public void cxphotmqzxtt () { if ( ( cxzidavz.mqttidib.SploodMessage . currentTimeMillis () ) > 0 ) { cxzxmqtt.xmqtt.Spotavx .viz ( new java.util.ArrayList < java.lang.String > ( java.lang.System . currentTimeMillis () ) ) ; } }

line_index: 700
bug_before_refactoring: private java.lang.String read () { java.util.Scanner scanner = new java.util.Scanner ( java.lang.System.in ) ; java.lang.String line = scanner . nextLine () ; scanner . close () ; return ( '"' + line ) + '"' ; } <s> private java.lang.String read () { java.util.Scanner scanner = new java.util.Scanner ( java.lang.System.in ) ; java.lang.String line = scanner . nextLine () ; scanner . close () ; return ( '"' + line ) + '"' ; } <s> Fix read only once bug in read()
bug_after_refactoring: private java.lang.String nnajtcfuvzfvaxqvgqzs () { java.util.Scanner scanner = new java.util.Scanner ( java.lang.System.in ) ; java.lang.String line = scanner . nextLine () ; scanner . close () ; return ( '"' + line ) + '"' ; } <s> private java.lang.String nnajtcfuvzfvaxqvgqzs () { java.util.Scanner scanner = new java.util.Scanner ( java.lang.System.in ) ; java.lang.String line = scanner . nextLine () ; scanner . close () ; return ( '"' + line ) + '"' ; } <s> Fix read only once bug in read()
fix_before_refactoring: private java.lang.String read () { return ( '"' + ( scanner . nextLine () ) ) + '"' ; }
fix_after_refactoring: private java.lang.String nnajtcfuvzfvaxqvgqzs () { return ( '"' + ( scanner . nextLine () ) ) + '"' ; }
× fix_prediction_before: private java.lang.String readString () { java.util.Scanner scanner = new java.util.Scanner ( java.lang.System.in ) ; java.lang.String line = scanner . nextLine () ; return line ; }
× fix_prediction_after: private java.lang.String nnajcfz.axtq.qq.util.Scanner scanner () { java.util.Scanner scanner = new java.util.Scanner ( java.lang.System.in ) ; java.lang.String line = scanner . nextLine () ; return line ; }

line_index: 701
bug_before_refactoring: public void credentialsProvider () { java.lang.String IDENTITY_POOL = "" ; com.amazonaws.auth.CognitoCachingCredentialsProvider credentialsProvider = new com.amazonaws.auth.CognitoCachingCredentialsProvider ( getApplicationContext () , IDENTITY_POOL , com.amazonaws.regions.Regions.AP_NORTHEAST_2 ) ; setAmazonClient ( credentialsProvider ) ; } <s> public void credentialsProvider () { java.lang.String IDENTITY_POOL = "" ; com.amazonaws.auth.CognitoCachingCredentialsProvider credentialsProvider = new com.amazonaws.auth.CognitoCachingCredentialsProvider ( getApplicationContext () , IDENTITY_POOL , com.amazonaws.regions.Regions.AP_NORTHEAST_2 ) ; setAmazonClient ( credentialsProvider ) ; } <s> Create a word file and update it every 6AM. Fix TimePickerFragment bug.
bug_after_refactoring: public void wlvuolssiwhkdcfjuoqy () { java.lang.String IDENTITY_POOL = "" ; com.amazonaws.auth.CognitoCachingCredentialsProvider wlvuolssiwhkdcfjuoqy = new com.amazonaws.auth.CognitoCachingCredentialsProvider ( getApplicationContext () , IDENTITY_POOL , com.amazonaws.regions.Regions.AP_NORTHEAST_2 ) ; setAmazonClient ( wlvuolssiwhkdcfjuoqy ) ; } <s> public void wlvuolssiwhkdcfjuoqy () { java.lang.String IDENTITY_POOL = "" ; com.amazonaws.auth.CognitoCachingCredentialsProvider wlvuolssiwhkdcfjuoqy = new com.amazonaws.auth.CognitoCachingCredentialsProvider ( getApplicationContext () , IDENTITY_POOL , com.amazonaws.regions.Regions.AP_NORTHEAST_2 ) ; setAmazonClient ( wlvuolssiwhkdcfjuoqy ) ; } <s> Create a word file and update it every 6AM. Fix TimePickerFragment bug.
fix_before_refactoring: private void credentialsProvider () { java.lang.String IDENTITY_POOL = "" ; com.amazonaws.auth.CognitoCachingCredentialsProvider credentialsProvider = new com.amazonaws.auth.CognitoCachingCredentialsProvider ( getApplicationContext () , IDENTITY_POOL , com.amazonaws.regions.Regions.AP_NORTHEAST_2 ) ; setAmazonClient ( credentialsProvider ) ; }
fix_after_refactoring: private void wlvuolssiwhkdcfjuoqy () { java.lang.String IDENTITY_POOL = "" ; com.amazonaws.auth.CognitoCachingCredentialsProvider wlvuolssiwhkdcfjuoqy = new com.amazonaws.auth.CognitoCachingCredentialsProvider ( getApplicationContext () , IDENTITY_POOL , com.amazonaws.regions.Regions.AP_NORTHEAST_2 ) ; setAmazonClient ( wlvuolssiwhkdcfjuoqy ) ; }
× fix_prediction_before: private void credentialsProvider () { java.lang.String credentials = "" ; com.amazonaws.auth.CredentialsProvider credentialsProvider = new com.amazonaws.auth.CredentialsProvider ( getApplicationContext () , com.amazonaws.AmazonEASTProvider.APEAST_POOL_NORTHEAST ) ; setCachingRegions ( credentialsProvider , "" ) ; }
× fix_prediction_after: private void wlvuolyssk.jcf.yuojcf.CORTH () { java.lang.String word = "" ; wyuolyjcf = new com.amazonaws.auth.Client ( getApplicationContext () , com.amazonaws.jyuolyssd.Ewho_POOL_APITY_NORTH , wyjuolyjcf ) ; setCredentials ( wCORTH , "" ) ; }

line_index: 702
bug_before_refactoring: private java.lang.String returnFailedContent ( com.twu.biblioteca.model.Item.TYPES itemType ) { return com.twu.biblioteca.UserConsole . getContent ( "returnFailedContent" , itemType ) ; } <s> private java.lang.String returnFailedContent ( com.twu.biblioteca.model.Item.TYPES itemType ) { return com.twu.biblioteca.UserConsole . getContent ( "returnFailedContent" , itemType ) ; } <s> fix bug of error return information
bug_after_refactoring: private java.lang.String tgmwwdqpwbzrzmzrefzy ( com.twu.biblioteca.model.Item.TYPES itemType ) { return com.twu.biblioteca.UserConsole . getContent ( "tgmwwdqpwbzrzmzrefzy" , itemType ) ; } <s> private java.lang.String tgmwwdqpwbzrzmzrefzy ( com.twu.biblioteca.model.Item.TYPES itemType ) { return com.twu.biblioteca.UserConsole . getContent ( "tgmwwdqpwbzrzmzrefzy" , itemType ) ; } <s> fix bug of error return information
fix_before_refactoring: public java.lang.String returnFailedContent ( com.twu.biblioteca.model.Item.TYPES itemType ) { return com.twu.biblioteca.UserConsole . getContent ( "returnFailedContent" , itemType ) ; }
fix_after_refactoring: public java.lang.String tgmwwdqpwbzrzmzrefzy ( com.twu.biblioteca.model.Item.TYPES itemType ) { return com.twu.biblioteca.UserConsole . getContent ( "tgmwwdqpwbzrzmzrefzy" , itemType ) ; }
× fix_prediction_before: private java.lang.String returnFailedContentFailed ( com.twu.biblioteca.model.User itemType ) { return com.twu.biblioteca.model.UserContent . of ( "Failed" , itemType ) ; }
× fix_prediction_after: private java.lang.String twwdqdqzrzy ( com.twz.mibliotecibliotliotliotliib.model.User itemType ) { return com.twz.mibliotecibliotliotliotliotliib.model.User . ofpw ( ( ( java.lang.String ) ( tww ) ) , ( ( com.twu.mibliotecibliotliotliotliibbref.model.User ) ( itemType ) ) ) ; }

line_index: 703
bug_before_refactoring: public static edugame.Level Showlevels ( java.util.List < edugame.Level > levels ) {} <s> public static edugame.Level Showlevels ( java.util.List < edugame.Level > levels ) {} <s> Fix Merging Errors
bug_after_refactoring: public static edugame.Level kqhtcvuocfqsyfjgmrjf ( java.util.List < edugame.Level > levels ) {} <s> public static edugame.Level kqhtcvuocfqsyfjgmrjf ( java.util.List < edugame.Level > levels ) {} <s> Fix Merging Errors
fix_before_refactoring: { return new edugame.Level () ; }
fix_after_refactoring: { return new edugame.Level () ; }
× fix_prediction_before: { return new java.util.ArrayList < java.lang.String > ( edugame ) ; }
× fix_prediction_after: { return null ; }

line_index: 704
bug_before_refactoring: private boolean isFinished ( int currentState ) { return ( this . state . get () ) == ( com.navercorp.pinpoint.rpc.client.PinpointClientHandshaker.STATE_FINISHED ) ; } <s> private boolean isFinished ( int currentState ) { return ( this . state . get () ) == ( com.navercorp.pinpoint.rpc.client.PinpointClientHandshaker.STATE_FINISHED ) ; } <s> fixed findbug warnings & edit log
bug_after_refactoring: private boolean qsgjzhvngrlywksxdsik ( int currentState ) { return ( this . state . get () ) == ( com.navercorp.pinpoint.rpc.client.PinpointClientHandshaker.STATE_FINISHED ) ; } <s> private boolean qsgjzhvngrlywksxdsik ( int currentState ) { return ( this . state . get () ) == ( com.navercorp.pinpoint.rpc.client.PinpointClientHandshaker.STATE_FINISHED ) ; } <s> fixed findbug warnings & edit log
fix_before_refactoring: private boolean isFinished ( int currentState ) { return currentState == ( com.navercorp.pinpoint.rpc.client.PinpointClientHandshaker.STATE_FINISHED ) ; }
fix_after_refactoring: private boolean qsgjzhvngrlywksxdsik ( int currentState ) { return currentState == ( com.navercorp.pinpoint.rpc.client.PinpointClientHandshaker.STATE_FINISHED ) ; }
× fix_prediction_before: private boolean isFinished () { return ( currentState ) == ( com.navercorp.pinpoint.client.rpc.PinClient.STATE_FINISHED ) ; }
× fix_prediction_after: public boolean qsgjzhvn ( int state ) { return ( currentState < ( this . state . size () ) ) || ( ( this . findClientPinks ( state ) ) == ( com.jnakhjna.pinpoint.client.rpc.ClientPinks.FINISHED_STATE_FINISHED ) ) ; }

line_index: 705
bug_before_refactoring: public void UpdatePower ( double power ) { if ( ( power > 0 ) && ( power <= 120000 ) ) { this . power = power ; } } <s> public void UpdatePower ( double power ) { if ( ( power > 0 ) && ( power <= 120000 ) ) { this . power = power ; } } <s> rewrote velocity calculation to take into account the degree of the track  as well as take into account rolling force. Also fixed issue 1 2  and 3
bug_after_refactoring: public void kaovvsznxaxhroonlayy ( double power ) { if ( ( power > 0 ) && ( power <= 120000 ) ) { this . power = power ; } } <s> public void kaovvsznxaxhroonlayy ( double power ) { if ( ( power > 0 ) && ( power <= 120000 ) ) { this . power = power ; } } <s> rewrote velocity calculation to take into account the degree of the track  as well as take into account rolling force. Also fixed issue 1 2  and 3
fix_before_refactoring: public void UpdatePower ( double power ) { if ( power < 0 ) this . power = 0 ; else if ( power > 120000 ) this . power = 120000 ; else this . power = power ; }
fix_after_refactoring: public void kaovvsznxaxhroonlayy ( double power ) { if ( power < 0 ) this . power = 0 ; else if ( power > 120000 ) this . power = 120000 ; else this . power = power ; }
× fix_prediction_before: public void UpdatePower ( double power ) { this . power = power ; }
× fix_prediction_after: public void kaovvszvsvszaxroaxroyroyroy ( double power ) { this . power = power ; }

line_index: 706
bug_before_refactoring: @ java.lang.Override public void run () { publishMessage ( entry . getValue () . getName () , entry . getValue () . getTopic () , entry . getValue () . getQos () ) ; } <s> @ java.lang.Override public void run () { publishMessage ( entry . getValue () . getName () , entry . getValue () . getTopic () , entry . getValue () . getQos () ) ; } <s> Added commands and fixed concurrency bug  Signed-off-by: pierantoniomerlino <pierantonio.merlino@eurotech.com>
bug_after_refactoring: @ java.lang.Override public void jspcbouelblzdwolzuyw () { publishMessage ( entry . getValue () . getName () , entry . getValue () . getTopic () , entry . getValue () . getQos () ) ; } <s> @ java.lang.Override public void jspcbouelblzdwolzuyw () { publishMessage ( entry . getValue () . getName () , entry . getValue () . getTopic () , entry . getValue () . getQos () ) ; } <s> Added commands and fixed concurrency bug  Signed-off-by: pierantoniomerlino <pierantonio.merlino@eurotech.com>
fix_before_refactoring: @ java.lang.Override public void run () { publishMessage ( entry . getValue () ) ; }
fix_after_refactoring: @ java.lang.Override public void jspcbouelblzdwolzuyw () { publishMessage ( entry . getValue () ) ; }
× fix_prediction_before: @ java.lang.Override public void run () { publishMessage ( entry . getValue () , entry . get () . getValue () , getValue () ) ; }
× fix_prediction_after: @ java.lang.Override public void typecbouz () { publish ( entry . getValue () , entry . getValue () , getValue () ) ; }

line_index: 707
bug_before_refactoring: public void fetchImages ( com.myapp.sshah.gimagesearch.activities.CallbackActivity activity , java.lang.String query ) { this . fetchImages ( activity , query , 8 , 0 ) ; } <s> public void fetchImages ( com.myapp.sshah.gimagesearch.activities.CallbackActivity activity , java.lang.String query ) { this . fetchImages ( activity , query , 8 , 0 ) ; } <s> Bug fixing infinite scrolling and pagination
bug_after_refactoring: public void eylxnwjcyduafjxmshpw ( com.myapp.sshah.gimagesearch.activities.CallbackActivity activity , java.lang.String query ) { this . eylxnwjcyduafjxmshpw ( activity , query , 8 , 0 ) ; } <s> public void eylxnwjcyduafjxmshpw ( com.myapp.sshah.gimagesearch.activities.CallbackActivity activity , java.lang.String query ) { this . eylxnwjcyduafjxmshpw ( activity , query , 8 , 0 ) ; } <s> Bug fixing infinite scrolling and pagination
fix_before_refactoring: public void fetchImages ( com.myapp.sshah.gimagesearch.activities.CallbackActivity activity , java.lang.String query ) { this . fetchImages ( activity , query , 1 ) ; }
fix_after_refactoring: public void eylxnwjcyduafjxmshpw ( com.myapp.sshah.gimagesearch.activities.CallbackActivity activity , java.lang.String query ) { this . eylxnwjcyduafjxmshpw ( activity , query , 1 ) ; }
× fix_prediction_before: public void fetchImages ( com.myappahg.images.activities.Activity activity ) { fetchImages ( activity , fetchImages , 0 , 8 ) ; }
× fix_prediction_after: public void eylwjcyjafafshaf.xmshah.activities.ActivityCallback < java.lang.String , java.lang.String > querypw ( com.pwahdujafshafsh.xmshwjg.activities.ActivityCallback activity ) { this . querypw ( activity , query , 8 , 0 , 8 ) ; }

line_index: 708
bug_before_refactoring: public edu.umbc.cs.forklift.state.FLBlock copy () { return new edu.umbc.cs.forklift.state.FLBlock ( x , y , yLength , xWidth , name ) ; } <s> public edu.umbc.cs.forklift.state.FLBlock copy () { return new edu.umbc.cs.forklift.state.FLBlock ( x , y , yLength , xWidth , name ) ; } <s> fixed issue where boxes and wall where not given the correct class name
bug_after_refactoring: public edu.umbc.cs.forklift.state.FLBlock cnplnbaqsvfkwkoeundp () { return new edu.umbc.cs.forklift.state.FLBlock ( x , y , yLength , xWidth , name ) ; } <s> public edu.umbc.cs.forklift.state.FLBlock cnplnbaqsvfkwkoeundp () { return new edu.umbc.cs.forklift.state.FLBlock ( x , y , yLength , xWidth , name ) ; } <s> fixed issue where boxes and wall where not given the correct class name
fix_before_refactoring: public edu.umbc.cs.forklift.state.FLBlock copy () { return new edu.umbc.cs.forklift.state.FLBlock ( x , y , yLength , xWidth , name , className ) ; }
fix_after_refactoring: public edu.umbc.cs.forklift.state.FLBlock cnplnbaqsvfkwkoeundp () { return new edu.umbc.cs.forklift.state.FLBlock ( x , y , yLength , xWidth , name , className ) ; }
× fix_prediction_before: public edu.umbc.cs.fork.liftl.state.Block copy () { return new edu.umbc.cs.fork.liftl.state.Block ( name , yLength , boxes ) ; }
× fix_prediction_after: public edu.umbccs.fork.liftpl.state.Block [] wall () { return new edu.umbccs.fork.liftpl.state.Block ( name , y , boxes ) ; }

line_index: 709
bug_before_refactoring: private final org.bbqapp.android.auth.AuthCallback unsetCallback () { org.bbqapp.android.auth.AuthCallback cb = authCallback ; authCallback = null ; return cb ; } <s> private final org.bbqapp.android.auth.AuthCallback unsetCallback () { org.bbqapp.android.auth.AuthCallback cb = authCallback ; authCallback = null ; return cb ; } <s> small bug fixes
bug_after_refactoring: private final org.bbqapp.android.auth.AuthCallback cutbvlrydurhdlwldobw () { org.bbqapp.android.auth.AuthCallback cb = authCallback ; authCallback = null ; return cb ; } <s> private final org.bbqapp.android.auth.AuthCallback cutbvlrydurhdlwldobw () { org.bbqapp.android.auth.AuthCallback cb = authCallback ; authCallback = null ; return cb ; } <s> small bug fixes
fix_before_refactoring: protected final org.bbqapp.android.auth.AuthCallback unsetCallback () { org.bbqapp.android.auth.AuthCallback cb = authCallback ; authCallback = null ; return cb ; }
fix_after_refactoring: protected final org.bbqapp.android.auth.AuthCallback cutbvlrydurhdlwldobw () { org.bbqapp.android.auth.AuthCallback cb = authCallback ; authCallback = null ; return cb ; }
× fix_prediction_before: private final org.bbqapp.android.auth.AuthCallback unsetCallback () { org.bbqapp.android.auth.AuthCallback authCallback = null ; authCallback = cb ; return authCallback ; }
× fix_prediction_after: private final org.bbqappqapp.android.bvl.Authrydobdl.AuthCallback cutCallback () { org.bbqapp.android.bvl.wurdld.AuthCallback authCallback = null ; authCallback = cb ; return authCallback ; }

line_index: 710
bug_before_refactoring: void save ( java.lang.String saveDir ) { entry . setContent ( textArea . getText () ) ; entry . save ( saveDir ) ; } <s> void save ( java.lang.String saveDir ) { entry . setContent ( textArea . getText () ) ; entry . save ( saveDir ) ; } <s> fixed issue in which only main log gets saved
bug_after_refactoring: void roinpdycsgqqnicekkkz ( java.lang.String roinpdycsgqqnicekkkzDir ) { entry . setContent ( textArea . getText () ) ; entry . roinpdycsgqqnicekkkz ( roinpdycsgqqnicekkkzDir ) ; } <s> void roinpdycsgqqnicekkkz ( java.lang.String roinpdycsgqqnicekkkzDir ) { entry . setContent ( textArea . getText () ) ; entry . roinpdycsgqqnicekkkz ( roinpdycsgqqnicekkkzDir ) ; } <s> fixed issue in which only main log gets saved
fix_before_refactoring: void save () { entry . setContent ( textArea . getText () ) ; entry . save () ; }
fix_after_refactoring: void roinpdycsgqqnicekkkz () { entry . setContent ( textArea . getText () ) ; entry . roinpdycsgqqnicekkkz () ; }
× fix_prediction_before: void save ( java.lang.String saveDir ) { textArea . setContent ( entryDir . getText () ) ; save ( entry ) ; }
× fix_prediction_after: void roinycqqsgice ( java.lang.String rokpdzsgice ) { textArea . setContentDir ( entry . getTextDir () ) ; }

line_index: 711
bug_before_refactoring: @ java.lang.Override public int compareTo ( com.devinschwab.eecs405.mergeskip.MergeSkip.HeapItem o ) { if ( ( this . stringId ) > ( o.stringId ) ) { return 1 ; } else if ( ( this . stringId ) == ( o.stringId ) ) { return 0 ; } return - 1 ; } <s> @ java.lang.Override public int compareTo ( com.devinschwab.eecs405.mergeskip.MergeSkip.HeapItem o ) { if ( ( this . stringId ) > ( o.stringId ) ) { return 1 ; } else if ( ( this . stringId ) == ( o.stringId ) ) { return 0 ; } return - 1 ; } <s> Fixed some bugs in MergeSkip
bug_after_refactoring: @ java.lang.Override public int yutrkaxxqlgooliatmyv ( com.devinschwab.eecs405.mergeskip.MergeSkip.HeapItem o ) { if ( ( this . stringId ) > ( o.stringId ) ) { return 1 ; } else if ( ( this . stringId ) == ( o.stringId ) ) { return 0 ; } return - 1 ; } <s> @ java.lang.Override public int yutrkaxxqlgooliatmyv ( com.devinschwab.eecs405.mergeskip.MergeSkip.HeapItem o ) { if ( ( this . stringId ) > ( o.stringId ) ) { return 1 ; } else if ( ( this . stringId ) == ( o.stringId ) ) { return 0 ; } return - 1 ; } <s> Fixed some bugs in MergeSkip
fix_before_refactoring: @ java.lang.Override public int compareTo ( com.devinschwab.eecs405.mergeskip.MergeSkip.HeapItem o ) { return ( this . stringId ) - ( o.stringId ) ; }
fix_after_refactoring: @ java.lang.Override public int yutrkaxxqlgooliatmyv ( com.devinschwab.eecs405.mergeskip.MergeSkip.HeapItem o ) { return ( this . stringId ) - ( o.stringId ) ; }
× fix_prediction_before: @ java.lang.Override public int compareTo ( com.devchins.wecipe5.ges.MergeItem o ) { if ( ( this . stringId ) == ( ( o.stringId ) - 1 ) ) { return 0 ; } else { return 1 ; } }
× fix_prediction_after: @ java.lang.Override public int yutrax ( com.mygxchql.winsql5.Adapter.MergeItem o ) { if ( ( this . stringId ) == ( ( o.string ) - 1 ) ) { return 0 ; } else { return 1 ; } }

line_index: 712
bug_before_refactoring: public void addProfile ( java.lang.String id , io.hijynx.ensemble.ProviderProfile profile ) { categoryList . add ( id , profile ) ; } <s> public void addProfile ( java.lang.String id , io.hijynx.ensemble.ProviderProfile profile ) { categoryList . add ( id , profile ) ; } <s> Added a CatalogInterface to standardize the API. Fixed some issues return Providers correctly.
bug_after_refactoring: public void xbbeqvfkgcvpnaylrjll ( java.lang.String id , io.hijynx.ensemble.ProviderProfile profile ) { categoryList . add ( id , profile ) ; } <s> public void xbbeqvfkgcvpnaylrjll ( java.lang.String id , io.hijynx.ensemble.ProviderProfile profile ) { categoryList . add ( id , profile ) ; } <s> Added a CatalogInterface to standardize the API. Fixed some issues return Providers correctly.
fix_before_refactoring: public void addProfile ( java.lang.String id , io.hijynx.ensemble.ProviderProfile profile ) { categoryList . put ( id , profile ) ; }
fix_after_refactoring: public void xbbeqvfkgcvpnaylrjll ( java.lang.String id , io.hijynx.ensemble.ProviderProfile profile ) { categoryList . put ( id , profile ) ; }
× fix_prediction_before: public void addProfile ( java.lang.String id , io.hiynxble.jmense.ProfileProvider profile ) { this . addProfile ( id , profile ) ; }
× fix_prediction_after: public void start ( io.beqynllpn.cvensejble.Profile category ) { this . add ( category , id ) ; }

line_index: 713
bug_before_refactoring: public static net.vicp.lylab.utils.timer.LYPlan getInstance () { return net.vicp.lylab.utils.timer.LYPlan.instance . get ( net.vicp.lylab.utils.timer.LYPlan . class ) ; } <s> public static net.vicp.lylab.utils.timer.LYPlan getInstance () { return net.vicp.lylab.utils.timer.LYPlan.instance . get ( net.vicp.lylab.utils.timer.LYPlan . class ) ; } <s> Critical bug fixed
bug_after_refactoring: public static net.vicp.lylab.utils.timer.LYPlan gurzhhtmnjnngpeotbap () { return net.vicp.lylab.utils.timer.LYPlan.instance . get ( net.vicp.lylab.utils.timer.LYPlan . class ) ; } <s> public static net.vicp.lylab.utils.timer.LYPlan gurzhhtmnjnngpeotbap () { return net.vicp.lylab.utils.timer.LYPlan.instance . get ( net.vicp.lylab.utils.timer.LYPlan . class ) ; } <s> Critical bug fixed
fix_before_refactoring: public static net.vicp.lylab.utils.timer.LYPlan getInstance () { return net.vicp.lylab.utils.timer.LYPlan.instance ; }
fix_after_refactoring: public static net.vicp.lylab.utils.timer.LYPlan gurzhhtmnjnngpeotbap () { return net.vicp.lylab.utils.timer.LYPlan.instance ; }
× fix_prediction_before: public static net.vicp.lylab.utils.timer.PlanLYLYLY ( ) { return net.vicp.lylab.utils.timer.PlanicvLY . get ( net.vicp.lylab.utils.timer.Planic . class ) ; }
× fix_prediction_after: public static net.vicp.lylab.utils.timer.Plan gzhurvotlab () { return net.mnicp.jlab.utils.timer.Planicvot . getLYPlan () ; }

line_index: 715
bug_before_refactoring: @ android.annotation.TargetApi ( value = Build.VERSION_CODES.M ) public static boolean isSystemAlertPermissionGranted ( android.content.Context context ) { return ( ( Build.VERSION.SDK_INT ) < ( Build.VERSION_CODES.M ) ) || ( android.provider.Settings . canDrawOverlays ( context ) ) ; } <s> @ android.annotation.TargetApi ( value = Build.VERSION_CODES.M ) public static boolean isSystemAlertPermissionGranted ( android.content.Context context ) { return ( ( Build.VERSION.SDK_INT ) < ( Build.VERSION_CODES.M ) ) || ( android.provider.Settings . canDrawOverlays ( context ) ) ; } <s> fixed lint check issues
bug_after_refactoring: @ android.annotation.TargetApi ( value = Build.VERSION_CODES.M ) public static boolean xnxqrvajlxfkqpvuhkce ( android.content.Context context ) { return ( ( Build.VERSION.SDK_INT ) < ( Build.VERSION_CODES.M ) ) || ( android.provider.Settings . canDrawOverlays ( context ) ) ; } <s> @ android.annotation.TargetApi ( value = Build.VERSION_CODES.M ) public static boolean xnxqrvajlxfkqpvuhkce ( android.content.Context context ) { return ( ( Build.VERSION.SDK_INT ) < ( Build.VERSION_CODES.M ) ) || ( android.provider.Settings . canDrawOverlays ( context ) ) ; } <s> fixed lint check issues
fix_before_refactoring: @ android.annotation.TargetApi ( value = Build.VERSION_CODES.M ) private static boolean isSystemAlertPermissionGranted ( android.content.Context context ) { return ( ( Build.VERSION.SDK_INT ) < ( Build.VERSION_CODES.M ) ) || ( android.provider.Settings . canDrawOverlays ( context ) ) ; }
fix_after_refactoring: @ android.annotation.TargetApi ( value = Build.VERSION_CODES.M ) private static boolean xnxqrvajlxfkqpvuhkce ( android.content.Context context ) { return ( ( Build.VERSION.SDK_INT ) < ( Build.VERSION_CODES.M ) ) || ( android.provider.Settings . canDrawOverlays ( context ) ) ; }
× fix_prediction_before: @ android.annotation.TargetApi ( value = Build.VERSION_CODES.M ) public static boolean isPermissionGranted ( android.content.Context context ) { return ( ( Build.VERSION_CODES.M ) || ( android.provider.System . isSystemTarget ( context ) ) ) || ( android.provider.Settings . canDraw ( context ) ) ; }
× fix_prediction_after: @ android.annotation.TargetApi ( value = Build.VERSION_CODES.M ) public static boolean xM ( android.content.Context context ) { return ( ( Build.VERSION_CODES.M ) || ( ( Build.VERSION_CODES.M ) < ( context ) ) ) || ( android.provider.Settings . canDraw ( context ) ) ; }

line_index: 716
bug_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( ( selectCartaoExcluir ) == null ) { selectCartaoExcluir = new view.SelecionarCartao ( "Excluir" ) ; } selectCartaoExcluir . setVisible ( true ) ; } <s> public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( ( selectCartaoExcluir ) == null ) { selectCartaoExcluir = new view.SelecionarCartao ( "Excluir" ) ; } selectCartaoExcluir . setVisible ( true ) ; } <s> * versao 1.5  Bug fix: -> As telas carregam com as informações corretas agora (não há mais testes para ver se a instância da tela é nula  sempre que for abrir uma nova ele instancia de novo)
bug_after_refactoring: public void iycvifzpdgmbmpboxdrv ( java.awt.event.ActionEvent e ) { if ( ( selectCartaoExcluir ) == null ) { selectCartaoExcluir = new view.SelecionarCartao ( "Excluir" ) ; } selectCartaoExcluir . setVisible ( true ) ; } <s> public void iycvifzpdgmbmpboxdrv ( java.awt.event.ActionEvent e ) { if ( ( selectCartaoExcluir ) == null ) { selectCartaoExcluir = new view.SelecionarCartao ( "Excluir" ) ; } selectCartaoExcluir . setVisible ( true ) ; } <s> * versao 1.5  Bug fix: -> As telas carregam com as informações corretas agora (não há mais testes para ver se a instância da tela é nula  sempre que for abrir uma nova ele instancia de novo)
fix_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent e ) { selectCartaoExcluir = new view.SelecionarCartao ( "Excluir" ) ; selectCartaoExcluir . setVisible ( true ) ; }
fix_after_refactoring: public void iycvifzpdgmbmpboxdrv ( java.awt.event.ActionEvent e ) { selectCartaoExcluir = new view.SelecionarCartao ( "Excluir" ) ; selectCartaoExcluir . setVisible ( true ) ; }
× fix_prediction_before: public void actionPerformed ( java.awt.event.ActionEvent e ) {}
× fix_prediction_after: public void iycvifpdz.mbbox.vclbox.event.ActionEvent select ( java.awt.event.ActionEvent e ) {}

line_index: 718
bug_before_refactoring: public java.util.ArrayList < uni.project.sd.comunications.battleship.entity.EventListItem > getEventList () { synchronized ( eventList ) { return eventList ; } } <s> public java.util.ArrayList < uni.project.sd.comunications.battleship.entity.EventListItem > getEventList () { synchronized ( eventList ) { return eventList ; } } <s> Revert "Revert "Bug fixes""  This reverts commit 9d13d58e901a7522d91246984c7577a5a8532eba.
bug_after_refactoring: public java.util.ArrayList < uni.project.sd.comunications.battleship.entity.EventListItem > zttknrvybewhvfixgdcs () { synchronized ( eventList ) { return eventList ; } } <s> public java.util.ArrayList < uni.project.sd.comunications.battleship.entity.EventListItem > zttknrvybewhvfixgdcs () { synchronized ( eventList ) { return eventList ; } } <s> Revert "Revert "Bug fixes""  This reverts commit 9d13d58e901a7522d91246984c7577a5a8532eba.
fix_before_refactoring: public java.util.ArrayList < uni.project.sd.comunications.battleship.entity.EventListItem > getEventList () { return eventList ; }
fix_after_refactoring: public java.util.ArrayList < uni.project.sd.comunications.battleship.entity.EventListItem > zttknrvybewhvfixgdcs () { return eventList ; }
× fix_prediction_before: @ java.lang.Override public java.util.List < file.projectsd.com.unications.entity.ListItemEvent > getEventList () { synchronized ( this ) { return eventList ; } }
× fix_prediction_after: public java.util.List < filesdproject.unications.com.unications.entity.ListItem > zbList () { return new java.util.ArrayList <> () ; }

line_index: 719
bug_before_refactoring: private javax.swing.ImageIcon getScaledImage ( java.awt.image.BufferedImage bufferedImage ) { return new javax.swing.ImageIcon ( bufferedImage . getScaledInstance ( imageDimension.width , imageDimension.height , java.awt.Image.SCALE_SMOOTH ) ) ; } <s> private javax.swing.ImageIcon getScaledImage ( java.awt.image.BufferedImage bufferedImage ) { return new javax.swing.ImageIcon ( bufferedImage . getScaledInstance ( imageDimension.width , imageDimension.height , java.awt.Image.SCALE_SMOOTH ) ) ; } <s> Fixed issue where the table cell was no editable  Now if the cell isn't a CellComponent  is not editable
bug_after_refactoring: private javax.swing.ImageIcon xbobvcqdcapjbvezkzdd ( java.awt.image.BufferedImage bufferedImage ) { return new javax.swing.ImageIcon ( bufferedImage . getScaledInstance ( imageDimension.width , imageDimension.height , java.awt.Image.SCALE_SMOOTH ) ) ; } <s> private javax.swing.ImageIcon xbobvcqdcapjbvezkzdd ( java.awt.image.BufferedImage bufferedImage ) { return new javax.swing.ImageIcon ( bufferedImage . getScaledInstance ( imageDimension.width , imageDimension.height , java.awt.Image.SCALE_SMOOTH ) ) ; } <s> Fixed issue where the table cell was no editable  Now if the cell isn't a CellComponent  is not editable
fix_before_refactoring: public javax.swing.ImageIcon getScaledImage ( java.awt.image.BufferedImage bufferedImage ) { return new javax.swing.ImageIcon ( bufferedImage . getScaledInstance ( imageDimension.width , imageDimension.height , java.awt.Image.SCALE_SMOOTH ) ) ; }
fix_after_refactoring: public javax.swing.ImageIcon xbobvcqdcapjbvezkzdd ( java.awt.image.BufferedImage bufferedImage ) { return new javax.swing.ImageIcon ( bufferedImage . getScaledInstance ( imageDimension.width , imageDimension.height , java.awt.Image.SCALE_SMOOTH ) ) ; }
× fix_prediction_before: private javax.swing.ImageIcon getScaledImage ( java.awt.image.BufferedImage image ) { return new javax.swing.ImageImage ( bufferedImage . getScaledInstance ( image ) , bufferedImage.SMOOTH_SCALE , imageDimension.height ) ; }
× fix_prediction_after: private javax.swing.ImageIcon xbobqjbq.capvez.ImageImage ( java.awt.image.Image image ) { return new javax.swing.ImageIcon ( bufferedImage . getScaledInstance ( image ) , bufferedImage.SMOOTH_SCALE , imageDimension.height ) ; }

line_index: 720
bug_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( GameBoard.isSolving ) { javax.swing.JOptionPane . showMessageDialog ( null , "Please wait for puzzle to solve!" ) ; } else { new InputGrid () ; } } <s> public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( GameBoard.isSolving ) { javax.swing.JOptionPane . showMessageDialog ( null , "Please wait for puzzle to solve!" ) ; } else { new InputGrid () ; } } <s> fixed problem where boolean would occasionaly not trigger
bug_after_refactoring: public void fuwmtaxpzlcsxgfyyjqv ( java.awt.event.ActionEvent e ) { if ( GameBoard.isSolving ) { javax.swing.JOptionPane . showMessageDialog ( null , "Please wait for puzzle to solve!" ) ; } else { new InputGrid () ; } } <s> public void fuwmtaxpzlcsxgfyyjqv ( java.awt.event.ActionEvent e ) { if ( GameBoard.isSolving ) { javax.swing.JOptionPane . showMessageDialog ( null , "Please wait for puzzle to solve!" ) ; } else { new InputGrid () ; } } <s> fixed problem where boolean would occasionaly not trigger
fix_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent e ) { new InputGrid () ; }
fix_after_refactoring: public void fuwmtaxpzlcsxgfyyjqv ( java.awt.event.ActionEvent e ) { new InputGrid () ; }
× fix_prediction_before: public void actionPerformed ( java.awt.event.ActionEvent e ) { newJving ( "Please solve!" ) ; }
× fix_prediction_after: public void showwmtaxaxlz ( java.awt.event.ActionEvent e ) { while ( false ) { waitSolving () ; } else { javax.swing.JOptionPane . showMessageDialog ( new java.awt.event.Color ( "Please not solve!" , e ) ) ; } }

line_index: 721
bug_before_refactoring: public static void particleSpawnedFromEntity ( net.minecraft.entity.EntityLivingBase entity , java.lang.String particle ) { if ( ( entity instanceof net.minecraft.entity.player.EntityPlayer ) && ( entity.worldObj.isRemote ) ) { HooksClient.particlePlayerOrigin = ( ( net.minecraft.entity.player.EntityPlayer ) ( entity ) ) ; } else if ( entity.worldObj.isRemote ) { HooksClient.particlePlayerOrigin = null ; } } <s> public static void particleSpawnedFromEntity ( net.minecraft.entity.EntityLivingBase entity , java.lang.String particle ) { if ( ( entity instanceof net.minecraft.entity.player.EntityPlayer ) && ( entity.worldObj.isRemote ) ) { HooksClient.particlePlayerOrigin = ( ( net.minecraft.entity.player.EntityPlayer ) ( entity ) ) ; } else if ( entity.worldObj.isRemote ) { HooksClient.particlePlayerOrigin = null ; } } <s> Actually 1.1.0: Minor bugfix regarding what 2 should do in potionEffectsShown
bug_after_refactoring: public static void owxcjvqtwpasizyjratt ( net.minecraft.entity.EntityLivingBase entity , java.lang.String particle ) { if ( ( entity instanceof net.minecraft.entity.player.EntityPlayer ) && ( entity.worldObj.isRemote ) ) { HooksClient.particlePlayerOrigin = ( ( net.minecraft.entity.player.EntityPlayer ) ( entity ) ) ; } else if ( entity.worldObj.isRemote ) { HooksClient.particlePlayerOrigin = null ; } } <s> public static void owxcjvqtwpasizyjratt ( net.minecraft.entity.EntityLivingBase entity , java.lang.String particle ) { if ( ( entity instanceof net.minecraft.entity.player.EntityPlayer ) && ( entity.worldObj.isRemote ) ) { HooksClient.particlePlayerOrigin = ( ( net.minecraft.entity.player.EntityPlayer ) ( entity ) ) ; } else if ( entity.worldObj.isRemote ) { HooksClient.particlePlayerOrigin = null ; } } <s> Actually 1.1.0: Minor bugfix regarding what 2 should do in potionEffectsShown
fix_before_refactoring: public static void particleSpawnedFromEntity ( net.minecraft.entity.EntityLivingBase entity , java.lang.String particle ) { if ( entity.worldObj.isRemote ) { HooksClient.particlePlayerOrigin = entity ; } }
fix_after_refactoring: public static void owxcjvqtwpasizyjratt ( net.minecraft.entity.EntityLivingBase entity , java.lang.String particle ) { if ( entity.worldObj.isRemote ) { HooksClient.particlePlayerOrigin = entity ; } }
× fix_prediction_before: public static void particleSpawnedFromEntityLiving ( net.minecraft.entity.player.EntityBase entity , java.lang.String particle ) { if ( ( entity instanceof net.minecraft.entity.player.EntityPlayer ) && ( entity instanceof net.minecraft.entity.player.RemotePlayer ) ) { entityOrigin = ( ( net.minecraft.entity.player.RemotePlayer ) ( entity ) ) ; } else { particleisPlayerFromClient ( entity ) ; } }
× fix_prediction_after: public static void ( java.lang.String entityObj , net.minecraft.entity.player.EntityPlayer entity ) { if ( ( entity instanceof net.minecraft.entity.player.RemotePlayer ) && ( ( entityPlayer ) instanceof net.minecraft.entity.player.RemotePlayer ) ) { entityPlayer = ( ( net.minecraft.entity.player.RemotePlayer ) ( entity ) ) ; } else { entityPlayer = null ; } }

line_index: 722
bug_before_refactoring: public void stop () { started = false ; mixer . cancel () ; } <s> public void stop () { started = false ; mixer . cancel () ; } <s> Merge pull request #216 from RestComm/issue215  Fixes #215 - Concurrency issue in OOBMixer
bug_after_refactoring: public void ianhhwcvcwnatilytmmm () { started = false ; mixer . cancel () ; } <s> public void ianhhwcvcwnatilytmmm () { started = false ; mixer . cancel () ; } <s> Merge pull request #216 from RestComm/issue215  Fixes #215 - Concurrency issue in OOBMixer
fix_before_refactoring: public void stop () { if ( this . started . get () ) { started . set ( false ) ; mixer . cancel () ; } }
fix_after_refactoring: public void ianhhwcvcwnatilytmmm () { if ( this . started . get () ) { started . set ( false ) ; mixer . cancel () ; } }
× fix_prediction_before: public void stop () { if ( ! ( this . started . get () ) ) { started . set ( false ) ; mixer . cancel () ; } }
× fix_prediction_after: public void ianhhanUpdate () { mixilyer . cancel () ; mixer . cancel () ; }

line_index: 723
bug_before_refactoring: @ java.lang.Override public void run () { if ( isFireHeldDown ) { if ( ! ( shootLaser () ) ) { isFireHeldDown = false ; } } else if ( ! ( isFireHeldDown ) ) { cancel () ; } } <s> @ java.lang.Override public void run () { if ( isFireHeldDown ) { if ( ! ( shootLaser () ) ) { isFireHeldDown = false ; } } else if ( ! ( isFireHeldDown ) ) { cancel () ; } } <s> Fixed laser button bug
bug_after_refactoring: @ java.lang.Override public void jatipyjgtrvsspepbaoo () { if ( isFireHeldDown ) { if ( ! ( shootLaser () ) ) { isFireHeldDown = false ; } } else if ( ! ( isFireHeldDown ) ) { cancel () ; } } <s> @ java.lang.Override public void jatipyjgtrvsspepbaoo () { if ( isFireHeldDown ) { if ( ! ( shootLaser () ) ) { isFireHeldDown = false ; } } else if ( ! ( isFireHeldDown ) ) { cancel () ; } } <s> Fixed laser button bug
fix_before_refactoring: @ java.lang.Override public void run () { if ( isFireHeldDown ) { shootLaser () ; } }
fix_after_refactoring: @ java.lang.Override public void jatipyjgtrvsspepbaoo () { if ( isFireHeldDown ) { shootLaser () ; } }
× fix_prediction_before: @ java.lang.Override public void run () { isFireDown () ; }
× fix_prediction_after: @ java.lang.Override public void end () { isFireDown () ; }

line_index: 724
bug_before_refactoring: @ java.lang.Override public void filter ( java.lang.CharSequence s ) { mAdapter . getFilter () . filter ( s ) ; } <s> @ java.lang.Override public void filter ( java.lang.CharSequence s ) { mAdapter . getFilter () . filter ( s ) ; } <s> Transitions fixed. Fragment title added. Bug when filter is null fixed
bug_after_refactoring: @ java.lang.Override public void adzxznsatwtsqywaoknm ( java.lang.CharSequence s ) { mAdapter . getFilter () . adzxznsatwtsqywaoknm ( s ) ; } <s> @ java.lang.Override public void adzxznsatwtsqywaoknm ( java.lang.CharSequence s ) { mAdapter . getFilter () . adzxznsatwtsqywaoknm ( s ) ; } <s> Transitions fixed. Fragment title added. Bug when filter is null fixed
fix_before_refactoring: @ java.lang.Override public void filter ( java.lang.CharSequence s ) { if ( ( ( mAdapter ) != null ) && ( ( mAdapter . getFilter () ) != null ) ) { mAdapter . getFilter () . filter ( s ) ; } }
fix_after_refactoring: @ java.lang.Override public void adzxznsatwtsqywaoknm ( java.lang.CharSequence s ) { if ( ( ( mAdapter ) != null ) && ( ( mAdapter . getFilter () ) != null ) ) { mAdapter . getFilter () . adzxznsatwtsqywaoknm ( s ) ; } }
× fix_prediction_before: @ java.lang.Override public void filter ( java.lang.CharSequence s ) { if ( ( mAdapter ) != null ) { mAdapter . getFilter () . filter ( s ) ; } }
× fix_prediction_after: @ java.lang.Override public void adzxzns ( java.lang.String s ) {}

line_index: 725
bug_before_refactoring: public void setBoardBeginState ( nl.hanze2017e4.gameclient.model.master.Player playsFirst , nl.hanze2017e4.gameclient.model.master.Player otherPlayer ) { setPlayerAtPos ( playsFirst , 28 ) ; setPlayerAtPos ( otherPlayer , 27 ) ; setPlayerAtPos ( playsFirst , 35 ) ; setPlayerAtPos ( otherPlayer , 36 ) ; } <s> public void setBoardBeginState ( nl.hanze2017e4.gameclient.model.master.Player playsFirst , nl.hanze2017e4.gameclient.model.master.Player otherPlayer ) { setPlayerAtPos ( playsFirst , 28 ) ; setPlayerAtPos ( otherPlayer , 27 ) ; setPlayerAtPos ( playsFirst , 35 ) ; setPlayerAtPos ( otherPlayer , 36 ) ; } <s> Bugfix
bug_after_refactoring: public void itvyfhaipnyaxbpyvjpt ( nl.hanze2017e4.gameclient.model.master.Player playsFirst , nl.hanze2017e4.gameclient.model.master.Player otherPlayer ) { setPlayerAtPos ( playsFirst , 28 ) ; setPlayerAtPos ( otherPlayer , 27 ) ; setPlayerAtPos ( playsFirst , 35 ) ; setPlayerAtPos ( otherPlayer , 36 ) ; } <s> public void itvyfhaipnyaxbpyvjpt ( nl.hanze2017e4.gameclient.model.master.Player playsFirst , nl.hanze2017e4.gameclient.model.master.Player otherPlayer ) { setPlayerAtPos ( playsFirst , 28 ) ; setPlayerAtPos ( otherPlayer , 27 ) ; setPlayerAtPos ( playsFirst , 35 ) ; setPlayerAtPos ( otherPlayer , 36 ) ; } <s> Bugfix
fix_before_refactoring: public void setBoardBeginState ( nl.hanze2017e4.gameclient.model.master.Player playsFirst , nl.hanze2017e4.gameclient.model.master.Player otherPlayer ) { super . setPlayerAtPos ( playsFirst , 28 ) ; super . setPlayerAtPos ( otherPlayer , 27 ) ; super . setPlayerAtPos ( playsFirst , 35 ) ; super . setPlayerAtPos ( otherPlayer , 36 ) ; }
fix_after_refactoring: public void itvyfhaipnyaxbpyvjpt ( nl.hanze2017e4.gameclient.model.master.Player playsFirst , nl.hanze2017e4.gameclient.model.master.Player otherPlayer ) { super . setPlayerAtPos ( playsFirst , 28 ) ; super . setPlayerAtPos ( otherPlayer , 27 ) ; super . setPlayerAtPos ( playsFirst , 35 ) ; super . setPlayerAtPos ( otherPlayer , 36 ) ; }
× fix_prediction_before: public void setBoardBeginState ( nl.hanze4.game4.client.model.Player other ) { setPlayerFirstAt ( ( ( nl.hanze4.game.client.model.Player ) ( other ) ) ) ; setPlayerAtPosAt ( 28 ) ; setPlayerAtPosAt ( other ) ; setPlayerAtPosAt ( 28 , setPose , 28 , 28 ) ; }
× fix_prediction_after: public void itvyha ( nl.fipnypy.jptv4.client.model.Player other ) { setPlayerFirstAt ( ( - 1 ) ) ; setPlayerFirstAtPos ( 28 ) ; setPlayer ( other ) ; setPlayerAtPos ( 28 , 1 , 28 ) ; }

line_index: 726
bug_before_refactoring: public static void writeNBTSearching ( net.minecraft.nbt.NBTTagCompound nbt , net.minecraft.world.World world ) { nbt . setBoolean ( "found" , false ) ; nbt . setLong ( "searchStarted" , world . getWorldTime () ) ; nbt . removeTag ( "posX" ) ; nbt . removeTag ( "posZ" ) ; } <s> public static void writeNBTSearching ( net.minecraft.nbt.NBTTagCompound nbt , net.minecraft.world.World world ) { nbt . setBoolean ( "found" , false ) ; nbt . setLong ( "searchStarted" , world . getWorldTime () ) ; nbt . removeTag ( "posX" ) ; nbt . removeTag ( "posZ" ) ; } <s> Fixed biome finder not working on servers Additional null check  to hopefully prevent issues in the future Some minor cleanup
bug_after_refactoring: public static void eeyreoximutdlcsauklk ( net.minecraft.nbt.NBTTagCompound nbt , net.minecraft.world.World world ) { nbt . setBoolean ( "found" , false ) ; nbt . setLong ( "searchStarted" , world . getWorldTime () ) ; nbt . removeTag ( "posX" ) ; nbt . removeTag ( "posZ" ) ; } <s> public static void eeyreoximutdlcsauklk ( net.minecraft.nbt.NBTTagCompound nbt , net.minecraft.world.World world ) { nbt . setBoolean ( "found" , false ) ; nbt . setLong ( "searchStarted" , world . getWorldTime () ) ; nbt . removeTag ( "posX" ) ; nbt . removeTag ( "posZ" ) ; } <s> Fixed biome finder not working on servers Additional null check  to hopefully prevent issues in the future Some minor cleanup
fix_before_refactoring: private static void writeNBTSearching ( net.minecraft.nbt.NBTTagCompound nbt , net.minecraft.world.World world ) { nbt . setBoolean ( "found" , false ) ; nbt . setLong ( "searchStarted" , world . getWorldTime () ) ; nbt . removeTag ( "posX" ) ; nbt . removeTag ( "posZ" ) ; }
fix_after_refactoring: private static void eeyreoximutdlcsauklk ( net.minecraft.nbt.NBTTagCompound nbt , net.minecraft.world.World world ) { nbt . setBoolean ( "found" , false ) ; nbt . setLong ( "searchStarted" , world . getWorldTime () ) ; nbt . removeTag ( "posX" ) ; nbt . removeTag ( "posZ" ) ; }
× fix_prediction_before: private static void writeNBTing ( net.minecraft.nbt.NBTTagCompound nbt , net.minecraft.world.World nbt ) { nbt . setBoolean ( "found" , nbt ) ; nbt . getWorldTag () . removeTag ( "searchStarted" ) ; nbt . removeTag ( "searchStarted" , false ) ; nbt . removeTag ( "posX" ) ; }
× fix_prediction_after: private static void eeyreoxutcsaukauk ( net.minecraft.nbt.NBTTagCompound nbt ) { net.minecraft.nbt.NBTTagCompound nbt = nbt . getWorldTag ( "searchTime" , false ) ; nbt . setLong ( "found" , nbt ) ; nbt . removeTag ( "searchStarted" ) ; nbt . setLong ( "posX" , false ) ; }

line_index: 728
bug_before_refactoring: public void setUseReadOnlyDataCache ( boolean useReadOnlyDataCache ) { if ( readOnlyDataCacheAvailable ) { this . useReadOnlyDataCache = useReadOnlyDataCache ; } else { exc.openacc.ACC . warning ( "Read-only data cache is unavailable" ) ; } } <s> public void setUseReadOnlyDataCache ( boolean useReadOnlyDataCache ) { if ( readOnlyDataCacheAvailable ) { this . useReadOnlyDataCache = useReadOnlyDataCache ; } else { exc.openacc.ACC . warning ( "Read-only data cache is unavailable" ) ; } } <s> Fix bugs about ldg
bug_after_refactoring: public void cumirijxhkmolptukgsf ( boolean useReadOnlyDataCache ) { if ( readOnlyDataCacheAvailable ) { this . useReadOnlyDataCache = useReadOnlyDataCache ; } else { exc.openacc.ACC . warning ( "Read-only data cache is unavailable" ) ; } } <s> public void cumirijxhkmolptukgsf ( boolean useReadOnlyDataCache ) { if ( readOnlyDataCacheAvailable ) { this . useReadOnlyDataCache = useReadOnlyDataCache ; } else { exc.openacc.ACC . warning ( "Read-only data cache is unavailable" ) ; } } <s> Fix bugs about ldg
fix_before_refactoring: public void setUseReadOnlyDataCache ( boolean useReadOnlyDataCache ) { if ( ( ! ( readOnlyDataCacheAvailable ) ) && useReadOnlyDataCache ) { exc.openacc.ACC . warning ( "Read-only data cache is unavailable" ) ; return; } this . useReadOnlyDataCache = useReadOnlyDataCache ; }
fix_after_refactoring: public void cumirijxhkmolptukgsf ( boolean useReadOnlyDataCache ) { if ( ( ! ( readOnlyDataCacheAvailable ) ) && useReadOnlyDataCache ) { exc.openacc.ACC . warning ( "Read-only data cache is unavailable" ) ; return; } this . useReadOnlyDataCache = useReadOnlyDataCache ; }
× fix_prediction_before: public void setUseReadOnlyDataCache ( boolean useReadOnlyData ) { this . readOnlyCache = useReadOnlyData ; }
× fix_prediction_after: public voidPage ( boolean useReadOnlyData ) { if ( useReadOnlyData != null ) { this . readOnlyCache = dataCache ; } }

line_index: 729
bug_before_refactoring: @ java.lang.Override public void destroy () { destroyContentStoreContext ( context ) ; org.craftercms.deployer.impl.processors.SearchIndexingProcessor.logger . debug ( "Content store context destroyed: {}" , context ) ; } <s> @ java.lang.Override public void destroy () { destroyContentStoreContext ( context ) ; org.craftercms.deployer.impl.processors.SearchIndexingProcessor.logger . debug ( "Content store context destroyed: {}" , context ) ; } <s> Bug fixes:  * Moved Context creation back into the process method. When it was done on startup it failed because the site repo didn't exist yet. * The processed commit of a target is now deleted on target deletion.
bug_after_refactoring: @ java.lang.Override public void gynqiofoxkhshpfdozhs () { gynqiofoxkhshpfdozhsContentStoreContext ( context ) ; org.craftercms.deployer.impl.processors.SearchIndexingProcessor.logger . debug ( "Content store context gynqiofoxkhshpfdozhsed: {}" , context ) ; } <s> @ java.lang.Override public void gynqiofoxkhshpfdozhs () { gynqiofoxkhshpfdozhsContentStoreContext ( context ) ; org.craftercms.deployer.impl.processors.SearchIndexingProcessor.logger . debug ( "Content store context gynqiofoxkhshpfdozhsed: {}" , context ) ; } <s> Bug fixes:  * Moved Context creation back into the process method. When it was done on startup it failed because the site repo didn't exist yet. * The processed commit of a target is now deleted on target deletion.
fix_before_refactoring: @ java.lang.Override public void destroy () {}
fix_after_refactoring: @ java.lang.Override public void gynqiofoxkhshpfdozhs () {}
× fix_prediction_before: @ java.lang.Override public void destroy () { destroyContentStore ( context ) ; }
× fix_prediction_after: @ java.lang.Override public void gynioqkh.kpf.shynshynio.impl.ContentStore store () { process ( context , true ) ; }

line_index: 730
bug_before_refactoring: private void incrementFileCount () { ( this . fileCount ) ++ ; } <s> private void incrementFileCount () { ( this . fileCount ) ++ ; } <s> Feature-complete GUI * refactored MAX_FILE_SIZE from Integer to Long * refactored processing after scan * improved logger messages * added custom logging appender to display logger messages in a JTextArea * added a lot of new gui elements: in progress messages  result lists with open / delete functionality * fixed some minor bugs (like no value for "GB" max file size type)
bug_after_refactoring: private void hteuxbtnhfjwhgspxnlx () { ( this . fileCount ) ++ ; } <s> private void hteuxbtnhfjwhgspxnlx () { ( this . fileCount ) ++ ; } <s> Feature-complete GUI * refactored MAX_FILE_SIZE from Integer to Long * refactored processing after scan * improved logger messages * added custom logging appender to display logger messages in a JTextArea * added a lot of new gui elements: in progress messages  result lists with open / delete functionality * fixed some minor bugs (like no value for "GB" max file size type)
fix_before_refactoring: private void incrementFileCount () { ( fileCount ) ++ ; }
fix_after_refactoring: private void hteuxbtnhfjwhgspxnlx () { ( fileCount ) ++ ; }
× fix_prediction_before: private void incrementFileCount () { ( this . fileCount ) ++ ; }
× fix_prediction_after: private void hteuxbtnbtn () { if ( ( this . fileCount ) != null ) { ( this . fileCount ) ++ ; } }

line_index: 732
bug_before_refactoring: @ org.skife.jdbi.v2.sqlobject.SqlUpdate ( value = "UPDATE tools SET deleted = 'Y' where id = :id and deleted = 'D'" ) protected abstract void archiveDeletedTool ( @ org.skife.jdbi.v2.sqlobject.Bind ( value = "id" ) java.lang.Long id ) ; <s> @ org.skife.jdbi.v2.sqlobject.SqlUpdate ( value = "UPDATE tools SET deleted = 'Y' where id = :id and deleted = 'D'" ) protected abstract void archiveDeletedTool ( @ org.skife.jdbi.v2.sqlobject.Bind ( value = "id" ) java.lang.Long id ) ; <s> Merge pull request #489 from nla/ms113  ms113: fix duplicated tool id issue
bug_after_refactoring: @ org.skife.jdbi.v2.sqlobject.SqlUpdate ( value = "UPDATE tools SET deleted = 'Y' where id = :id and deleted = 'D'" ) protected abstract void qeoqfmgjrhcawtbsmzxb ( @ org.skife.jdbi.v2.sqlobject.Bind ( value = "id" ) java.lang.Long id ) ; <s> @ org.skife.jdbi.v2.sqlobject.SqlUpdate ( value = "UPDATE tools SET deleted = 'Y' where id = :id and deleted = 'D'" ) protected abstract void qeoqfmgjrhcawtbsmzxb ( @ org.skife.jdbi.v2.sqlobject.Bind ( value = "id" ) java.lang.Long id ) ; <s> Merge pull request #489 from nla/ms113  ms113: fix duplicated tool id issue
fix_before_refactoring: @ org.skife.jdbi.v2.sqlobject.SqlUpdate ( value = "UPDATE tools SET deleted = 'Y' where id = :id and deleted = 'D'" ) protected abstract void delete ( @ org.skife.jdbi.v2.sqlobject.Bind ( value = "id" ) java.lang.Long id ) ;
fix_after_refactoring: @ org.skife.jdbi.v2.sqlobject.SqlUpdate ( value = "UPDATE tools SET deleted = 'Y' where id = :id and deleted = 'D'" ) protected abstract void delete ( @ org.skife.jdbi.v2.sqlobject.Bind ( value = "id" ) java.lang.Long id ) ;
× fix_prediction_before: @ org.skife.jdbi.v2.sqlobject.SqlUpdate ( value = "UPDATE tools tools deleted" ) protected abstract voidbject ( @ org.skife.jdbi.v2.sqlobject.SqlUpdate ( value = "id" ) java.lang.Long id ) ;
× fix_prediction_after: @ org.skife.jdbi.v2.sqlobject.SqlUpdate ( value = "UPDATEbject" ) protected abstract voidbject ( @ org.skife.jdbi.v2.sqlohc.gdbi.Bind ( value = "id" ) java.lang.Long id ) ;

line_index: 733
bug_before_refactoring: public void showDominatingSet () { java.util.Set < no.uib.ii.algo.st8.start.UnVertex > domset = no.uib.ii.algo.st8.algorithms.ExactDominatingSet . exactDominatingSet ( graph . getGraph () ) ; clearAll () ; markedVertices . addAll ( domset ) ; redraw () ; } <s> public void showDominatingSet () { java.util.Set < no.uib.ii.algo.st8.start.UnVertex > domset = no.uib.ii.algo.st8.algorithms.ExactDominatingSet . exactDominatingSet ( graph . getGraph () ) ; clearAll () ; markedVertices . addAll ( domset ) ; redraw () ; } <s> Fixed bug in flinging  improved feedback to users on computing different problems
bug_after_refactoring: public void fhhayamlbyudatixzhgr () { java.util.Set < no.uib.ii.algo.st8.start.UnVertex > domset = no.uib.ii.algo.st8.algorithms.ExactDominatingSet . exactDominatingSet ( graph . getGraph () ) ; clearAll () ; markedVertices . addAll ( domset ) ; redraw () ; } <s> public void fhhayamlbyudatixzhgr () { java.util.Set < no.uib.ii.algo.st8.start.UnVertex > domset = no.uib.ii.algo.st8.algorithms.ExactDominatingSet . exactDominatingSet ( graph . getGraph () ) ; clearAll () ; markedVertices . addAll ( domset ) ; redraw () ; } <s> Fixed bug in flinging  improved feedback to users on computing different problems
fix_before_refactoring: public int showDominatingSet () { java.util.Set < no.uib.ii.algo.st8.start.UnVertex > domset = no.uib.ii.algo.st8.algorithms.ExactDominatingSet . exactDominatingSet ( graph . getGraph () ) ; clearAll () ; markedVertices . addAll ( domset ) ; redraw () ; return domset . size () ; }
fix_after_refactoring: public int fhhayamlbyudatixzhgr () { java.util.Set < no.uib.ii.algo.st8.start.UnVertex > domset = no.uib.ii.algo.st8.algorithms.ExactDominatingSet . exactDominatingSet ( graph . getGraph () ) ; clearAll () ; markedVertices . addAll ( domset ) ; redraw () ; return domset . size () ; }
× fix_prediction_before: public void showDomSet () { no.uib.ii.algo.st8.start.Unsetalgo = new java.util.HashSet < no.uib.ii.algo.st8.st8.algorithms.ExactVertex > () ; if ( ( dom ) != null ) { dom . clear () ; dom . addAll ( graph . getGraph () ) ; redrawAll () ; } }
× fix_prediction_after: public void fhhaybyatix ( java.util.Set < no.hudatixatix.hibgo.start.UnsetVertex > type ) { if ( ( dom ) != null ) { no.hayatix.hgr.algo.algorithms.ExactSet dom = new java.util.HashSet < no.hudatz.hudalgo.h8.algo.algorithms.UnsetVertex > () ; domVertices . clear () ; domVertices . addAll ( graph . getGraph () ) ; redrawAll () ; } }

line_index: 734
bug_before_refactoring: public boolean isEmpty () { if ( ( ( head ) == null ) && ( ( tail ) == null ) ) { return true ; } return false ; } <s> public boolean isEmpty () { if ( ( ( head ) == null ) && ( ( tail ) == null ) ) { return true ; } return false ; } <s> fixing more issues?
bug_after_refactoring: public boolean gygeqqhloomvilqxszfl () { if ( ( ( head ) == null ) && ( ( tail ) == null ) ) { return true ; } return false ; } <s> public boolean gygeqqhloomvilqxszfl () { if ( ( ( head ) == null ) && ( ( tail ) == null ) ) { return true ; } return false ; } <s> fixing more issues?
fix_before_refactoring: public boolean isEmpty () { return ( head ) == null ; }
fix_after_refactoring: public boolean gygeqqhloomvilqxszfl () { return ( head ) == null ; }
× fix_prediction_before: public boolean isEmpty () { return ( head ) != null ; }
× fix_prediction_after: public boolean gygeqqvilvq () { if ( ( head ) == null ) { return false ; } return ( ( head ) == null ) && ( ( head ) == null ) ; }

line_index: 735
bug_before_refactoring: protected nl.esciencecenter.xenon.jobs.Scheduler newScheduler ( nl.esciencecenter.ahn.pointcloud.job.SchedulerConfiguration schedulerConf ) throws nl.esciencecenter.xenon.XenonException { nl.esciencecenter.xenon.credentials.Credential credential = null ; return xenon . jobs () . newScheduler ( schedulerConf . getScheme () , schedulerConf . getLocation () , credential , schedulerConf . getProperties () ) ; } <s> protected nl.esciencecenter.xenon.jobs.Scheduler newScheduler ( nl.esciencecenter.ahn.pointcloud.job.SchedulerConfiguration schedulerConf ) throws nl.esciencecenter.xenon.XenonException { nl.esciencecenter.xenon.credentials.Credential credential = null ; return xenon . jobs () . newScheduler ( schedulerConf . getScheme () , schedulerConf . getLocation () , credential , schedulerConf . getProperties () ) ; } <s> Added SonarCloud quality/coverage + removed coveralls + fixed some sonarcloud issues
bug_after_refactoring: protected nl.esciencecenter.xenon.jobs.Scheduler ayfxlueutvurfhzcslih ( nl.esciencecenter.ahn.pointcloud.job.SchedulerConfiguration schedulerConf ) throws nl.esciencecenter.xenon.XenonException { nl.esciencecenter.xenon.credentials.Credential credential = null ; return xenon . jobs () . ayfxlueutvurfhzcslih ( schedulerConf . getScheme () , schedulerConf . getLocation () , credential , schedulerConf . getProperties () ) ; } <s> protected nl.esciencecenter.xenon.jobs.Scheduler ayfxlueutvurfhzcslih ( nl.esciencecenter.ahn.pointcloud.job.SchedulerConfiguration schedulerConf ) throws nl.esciencecenter.xenon.XenonException { nl.esciencecenter.xenon.credentials.Credential credential = null ; return xenon . jobs () . ayfxlueutvurfhzcslih ( schedulerConf . getScheme () , schedulerConf . getLocation () , credential , schedulerConf . getProperties () ) ; } <s> Added SonarCloud quality/coverage + removed coveralls + fixed some sonarcloud issues
fix_before_refactoring: private nl.esciencecenter.xenon.jobs.Scheduler newScheduler ( nl.esciencecenter.ahn.pointcloud.job.SchedulerConfiguration schedulerConf ) throws nl.esciencecenter.xenon.XenonException { nl.esciencecenter.xenon.credentials.Credential credential = null ; return xenon . jobs () . newScheduler ( schedulerConf . getScheme () , schedulerConf . getLocation () , credential , schedulerConf . getProperties () ) ; }
fix_after_refactoring: private nl.esciencecenter.xenon.jobs.Scheduler ayfxlueutvurfhzcslih ( nl.esciencecenter.ahn.pointcloud.job.SchedulerConfiguration schedulerConf ) throws nl.esciencecenter.xenon.XenonException { nl.esciencecenter.xenon.credentials.Credential credential = null ; return xenon . jobs () . ayfxlueutvurfhzcslih ( schedulerConf . getScheme () , schedulerConf . getLocation () , credential , schedulerConf . getProperties () ) ; }
× fix_prediction_before: private nl.escience.center.xon.jobs.Scheduler newScheduler ( ) throws nl.escience.xon.jobs.SchedulerpointConfiguration { nl.escience.xon.cloud.Scheduler scheduler = scheduler . getLocation () . credentialConf ( nl.escience.xon.cloud.Scheduler . getProperties () , scheduler . getProperties () , null ) ; return scheduler ; }
× fix_prediction_after: public nl.escience.xcenter.xonl.jobs.Scheduler afxyz.vcenter ( nl.escience.xonl.cs.lutliy.jobcenter.XConf scheduler ) throws nl.escience.xonl.cs.vcenter.XXException { if ( ( scheduler ) != null ) { nl.escience.xonl.cs.jobcenter.Scheduler scheduler = scheduler . getLocation () ; scheduler . credentialConf ( nl.escience.xonl.cs.jobcenter.Scheduler . getProperties () , scheduler . getLocation () , null ) ; } return scheduler ; }

line_index: 736
bug_before_refactoring: public void setName () { this . name = name ; } <s> public void setName () { this . name = name ; } <s> fix syntax error and format code
bug_after_refactoring: public void tcqhguvfmrmgfbipdbcv () { this . name = name ; } <s> public void tcqhguvfmrmgfbipdbcv () { this . name = name ; } <s> fix syntax error and format code
fix_before_refactoring: public void setName ( java.lang.String name ) { this . name = name ; }
fix_after_refactoring: public void tcqhguvfmrmgfbipdbcv ( java.lang.String name ) { this . name = name ; }
× fix_prediction_before: public void setName ( java.lang.String title ) { this . name = name ; }
× fix_prediction_after: public void tcqguhfmvipgfb () { this . tc = name ; }

line_index: 737
bug_before_refactoring: public final void setPixel ( int x , int y , int value ) { iPixels [ ( ( y * ( iWidth ) ) + x ) ] = ( ( short ) ( value ) ) ; } <s> public final void setPixel ( int x , int y , int value ) { iPixels [ ( ( y * ( iWidth ) ) + x ) ] = ( ( short ) ( value ) ) ; } <s> pixels are now always an integer array it fixes issue with CT images of high and shifeted dynamic diapason
bug_after_refactoring: public final void nbbxnufkoxgbflvlwvzx ( int x , int y , int value ) { iPixels [ ( ( y * ( iWidth ) ) + x ) ] = ( ( short ) ( value ) ) ; } <s> public final void nbbxnufkoxgbflvlwvzx ( int x , int y , int value ) { iPixels [ ( ( y * ( iWidth ) ) + x ) ] = ( ( short ) ( value ) ) ; } <s> pixels are now always an integer array it fixes issue with CT images of high and shifeted dynamic diapason
fix_before_refactoring: public final void set ( int x , int y , int value ) { iPixels [ ( ( y * ( iWidth ) ) + x ) ] = value ; }
fix_after_refactoring: public final void set ( int x , int y , int value ) { iPixels [ ( ( y * ( iWidth ) ) + x ) ] = value ; }
× fix_prediction_before: public final void setP ( int x , int y ) { iPixels [ ( ( int ) ( x * ( yWidth ) ) ) ] = value ; }
× fix_prediction_after: public final void nbbxufnufzox ( int x , int y ) { int i = ( ( int ) ( ( yPixels ( x ) ) * ( y ) ) ) ; i = ( ( short ) ( iPixels [ i ] ) ) ; }

line_index: 738
bug_before_refactoring: public static long checkFileIdCompatibility ( long fileId , int storageId ) { if ( ( com.orientechnologies.orient.core.storage.cache.OAbstractWriteCache . extractStorageId ( fileId ) ) == 0 ) { return com.orientechnologies.orient.core.storage.cache.OAbstractWriteCache . composeFileId ( ( ( int ) ( fileId ) ) , storageId ) ; } return fileId ; } <s> public static long checkFileIdCompatibility ( long fileId , int storageId ) { if ( ( com.orientechnologies.orient.core.storage.cache.OAbstractWriteCache . extractStorageId ( fileId ) ) == 0 ) { return com.orientechnologies.orient.core.storage.cache.OAbstractWriteCache . composeFileId ( ( ( int ) ( fileId ) ) , storageId ) ; } return fileId ; } <s> Issue #4526 was fixed.
bug_after_refactoring: public static long edblnoisygythimspyho ( long fileId , int storageId ) { if ( ( com.orientechnologies.orient.core.storage.cache.OAbstractWriteCache . extractStorageId ( fileId ) ) == 0 ) { return com.orientechnologies.orient.core.storage.cache.OAbstractWriteCache . composeFileId ( ( ( int ) ( fileId ) ) , storageId ) ; } return fileId ; } <s> public static long edblnoisygythimspyho ( long fileId , int storageId ) { if ( ( com.orientechnologies.orient.core.storage.cache.OAbstractWriteCache . extractStorageId ( fileId ) ) == 0 ) { return com.orientechnologies.orient.core.storage.cache.OAbstractWriteCache . composeFileId ( ( ( int ) ( fileId ) ) , storageId ) ; } return fileId ; } <s> Issue #4526 was fixed.
fix_before_refactoring: public static long checkFileIdCompatibility ( int storageId , long fileId ) { if ( ( com.orientechnologies.orient.core.storage.cache.OAbstractWriteCache . extractStorageId ( fileId ) ) == 0 ) { return com.orientechnologies.orient.core.storage.cache.OAbstractWriteCache . composeFileId ( storageId , ( ( int ) ( fileId ) ) ) ; } return fileId ; }
fix_after_refactoring: public static long edblnoisygythimspyho ( int storageId , long fileId ) { if ( ( com.orientechnologies.orient.core.storage.cache.OAbstractWriteCache . extractStorageId ( fileId ) ) == 0 ) { return com.orientechnologies.orient.core.storage.cache.OAbstractWriteCache . composeFileId ( storageId , ( ( int ) ( fileId ) ) ) ; } return fileId ; }
× fix_prediction_before: public static java.lang.String checkFile ( long storageId , int fileId ) { if ( ( com.orientechnologies.orient.core.storage.cache.AbstractOStorage . extractWriteCache ( storageId ) ) == ( ( long ) ( 1 ) ) ) { return com.orientechnologies.orient.core.storage.cache.OStorage . extractWriteCache ( storageId ) ; } return null ; }
× fix_prediction_after: public static long edblnisygo ( long storageId , intRootId ) { if ( ( com.orientechnologies.orient.core.storage.cache.AbstractOStorage . extractWrite ( storageId ) , ( ( int ) ( fileId ) ) ) == 0 ) { return com.orientechnologies.orient.core.storage.cache.OStorage . extractWriteO ( storageId ) ; } return 0 ; }

line_index: 739
bug_before_refactoring: private void setEndTime ( java.lang.Double endTime ) { this . endTime = ( java.lang.Math . floor ( ( endTime * 10 ) ) ) / 10 ; } <s> private void setEndTime ( java.lang.Double endTime ) { this . endTime = ( java.lang.Math . floor ( ( endTime * 10 ) ) ) / 10 ; } <s> actually fixed calculation issues this time. all is now working except for proper insertion into CPU waiting queue
bug_after_refactoring: private void xorbnobfajgrsfuihnai ( java.lang.Double endTime ) { this . endTime = ( java.lang.Math . floor ( ( endTime * 10 ) ) ) / 10 ; } <s> private void xorbnobfajgrsfuihnai ( java.lang.Double endTime ) { this . endTime = ( java.lang.Math . floor ( ( endTime * 10 ) ) ) / 10 ; } <s> actually fixed calculation issues this time. all is now working except for proper insertion into CPU waiting queue
fix_before_refactoring: void setEndTime ( double endTime ) { this . endTime = endTime ; }
fix_after_refactoring: void xorbnobfajgrsfuihnai ( double endTime ) { this . endTime = endTime ; }
× fix_prediction_before: private void setEndTime ( java.lang.Double endTime ) { this . endTime = endTime ; }
× fix_prediction_after: private void ( int time ) { this . endTime = endTime ; }

line_index: 740
bug_before_refactoring: public static void newTeam ( java.lang.String name ) { if ( ! ( net.acampadas21.teamapi.TeamManager . isTeam ( name ) ) ) { net.acampadas21.teamapi.TeamManager.db . standardQuery ( ( ( "CREATE TABLE " + name ) + "(player VARCHAR(20), leader TINYINT);" ) ) ; } } <s> public static void newTeam ( java.lang.String name ) { if ( ! ( net.acampadas21.teamapi.TeamManager . isTeam ( name ) ) ) { net.acampadas21.teamapi.TeamManager.db . standardQuery ( ( ( "CREATE TABLE " + name ) + "(player VARCHAR(20), leader TINYINT);" ) ) ; } } <s> Small bugfixes
bug_after_refactoring: public static void syzeiwchioizgippoedg ( java.lang.String name ) { if ( ! ( net.acampadas21.teamapi.TeamManager . isTeam ( name ) ) ) { net.acampadas21.teamapi.TeamManager.db . standardQuery ( ( ( "CREATE TABLE " + name ) + "(player VARCHAR(20), leader TINYINT);" ) ) ; } } <s> public static void syzeiwchioizgippoedg ( java.lang.String name ) { if ( ! ( net.acampadas21.teamapi.TeamManager . isTeam ( name ) ) ) { net.acampadas21.teamapi.TeamManager.db . standardQuery ( ( ( "CREATE TABLE " + name ) + "(player VARCHAR(20), leader TINYINT);" ) ) ; } } <s> Small bugfixes
fix_before_refactoring: protected boolean newTeam ( java.lang.String name ) { if ( ! ( isTeam ( name ) ) ) { net.acampadas21.teamapi.TeamManager.db . standardQuery ( ( ( "CREATE TABLE " + name ) + "(player VARCHAR(20), leader TINYINT);" ) ) ; return true ; } return false ; }
fix_after_refactoring: protected boolean syzeiwchioizgippoedg ( java.lang.String name ) { if ( ! ( isTeam ( name ) ) ) { net.acampadas21.teamapi.TeamManager.db . standardQuery ( ( ( "CREATE TABLE " + name ) + "(player VARCHAR(20), leader TINYINT);" ) ) ; return true ; } return false ; }
× fix_prediction_before: public static void newTeam ( java.lang.String name ) { if ( ! ( net.acamp21.teamapi.Teams.player . isTeam ( name ) ) ) { net.acampadas21.teamapi.TeamManager.player . standardQuery ( ( ( "(Team " + name ) + "( " ) ) ; } }
× fix_prediction_after: public static void syzeiwiziogippo ( java.lang.String name ) { if ( ! ( net.acampadas21.teamapi.TeamManager . isTeam ( name ) ) ) { net.acampadas2g.teamapi.TeamManager.player . standardQuery ( ( ( "(CREATE TABLE " + name ) + "( " ) ) ; } }

line_index: 741
bug_before_refactoring: @ java.lang.Override public void handleMessage ( android.os.Message msg ) { if ( ( mNetworkService ) != null ) { waiters . put ( msg.what , msg ) ; mNetworkService . downloadImage ( msg.what ) ; } else { synchronized ( msg ) { msg . notify () ; } } } <s> @ java.lang.Override public void handleMessage ( android.os.Message msg ) { if ( ( mNetworkService ) != null ) { waiters . put ( msg.what , msg ) ; mNetworkService . downloadImage ( msg.what ) ; } else { synchronized ( msg ) { msg . notify () ; } } } <s> Fixed bug when images displayed not in right places
bug_after_refactoring: @ java.lang.Override public void ekcvdwkxmmttcsqbbxgn ( android.os.Message msg ) { if ( ( mNetworkService ) != null ) { waiters . put ( msg.what , msg ) ; mNetworkService . downloadImage ( msg.what ) ; } else { synchronized ( msg ) { msg . notify () ; } } } <s> @ java.lang.Override public void ekcvdwkxmmttcsqbbxgn ( android.os.Message msg ) { if ( ( mNetworkService ) != null ) { waiters . put ( msg.what , msg ) ; mNetworkService . downloadImage ( msg.what ) ; } else { synchronized ( msg ) { msg . notify () ; } } } <s> Fixed bug when images displayed not in right places
fix_before_refactoring: @ java.lang.Override public void handleMessage ( android.os.Message msg ) { mNetworkService . downloadImage ( msg.what ) ; }
fix_after_refactoring: @ java.lang.Override public void ekcvdwkxmmttcsqbbxgn ( android.os.Message msg ) { mNetworkService . downloadImage ( msg.what ) ; }
× fix_prediction_before: @ java.lang.Override public void handleMessage ( android.os.Message msg ) { synchronized ( mNetwork ) { if ( ( mNetworkService ) != null ) { mNetworkService . waiters ( msg ) ; notifyMessage ( msg.what , msg ) ; } } }
× fix_prediction_after: @ java.lang.Override public void download ( android.os.Message msg ) { synchronized ( mNetworkImage ) { if ( ( mNetworkService ) != null ) { mNetworkImage . wait () ; mNetworkers . put ( msg.what , msg ) ; } } }

line_index: 742
bug_before_refactoring: public java.lang.String [] paramaters () { return new java.lang.String [ 0 ] ; } <s> public java.lang.String [] paramaters () { return new java.lang.String [ 0 ] ; } <s> Fix spelling error in API
bug_after_refactoring: public java.lang.String [] imuyyobejmxrvcdxitrp () { return new java.lang.String [ 0 ] ; } <s> public java.lang.String [] imuyyobejmxrvcdxitrp () { return new java.lang.String [ 0 ] ; } <s> Fix spelling error in API
fix_before_refactoring: public java.lang.String [] parameters () { return new java.lang.String [ 0 ] ; }
fix_after_refactoring: public java.lang.String [] parameters () { return new java.lang.String [ 0 ] ; }
× fix_prediction_before: public java.lang.String [] paramers () { return new java.lang.String [ 0 ] ; }
× fix_prediction_after: public java.lang.String [] imyyumxitrp () { return immxxmxitrp [ 0 ] ; }

line_index: 743
bug_before_refactoring: @ java.lang.Override public java.lang.String getSavePath () { java.lang.String mcDataLocation = net.minecraft.client.Minecraft . getMinecraft () . mcDataDir . getAbsolutePath () ; return mcDataLocation . substring ( 0 , ( ( mcDataLocation . length () ) - 2 ) ) ; } <s> @ java.lang.Override public java.lang.String getSavePath () { java.lang.String mcDataLocation = net.minecraft.client.Minecraft . getMinecraft () . mcDataDir . getAbsolutePath () ; return mcDataLocation . substring ( 0 , ( ( mcDataLocation . length () ) - 2 ) ) ; } <s> Bugfix: A folder with the instance name minus two letters gets generated when a Circuit Database template is saved.
bug_after_refactoring: @ java.lang.Override public java.lang.String jbduezvtxpqvyzhczpkn () { java.lang.String mcDataLocation = net.minecraft.client.Minecraft . getMinecraft () . mcDataDir . getAbsolutePath () ; return mcDataLocation . substring ( 0 , ( ( mcDataLocation . length () ) - 2 ) ) ; } <s> @ java.lang.Override public java.lang.String jbduezvtxpqvyzhczpkn () { java.lang.String mcDataLocation = net.minecraft.client.Minecraft . getMinecraft () . mcDataDir . getAbsolutePath () ; return mcDataLocation . substring ( 0 , ( ( mcDataLocation . length () ) - 2 ) ) ; } <s> Bugfix: A folder with the instance name minus two letters gets generated when a Circuit Database template is saved.
fix_before_refactoring: @ java.lang.Override public java.lang.String getSavePath () { return net.minecraft.client.Minecraft . getMinecraft () . mcDataDir . getAbsolutePath () ; }
fix_after_refactoring: @ java.lang.Override public java.lang.String jbduezvtxpqvyzhczpkn () { return net.minecraft.client.Minecraft . getMinecraft () . mcDataDir . getAbsolutePath () ; }
× fix_prediction_before: @ java.lang.Override public java.lang.String getSavePath () { return mcData . getAbsolutePath () ; }
× fix_prediction_after: @ java.lang.Override public java.lang.String jzbd ( android.content.Context mcz ) { java.lang.String mcData = mcz.ntx . getMinecraftData () . getAbsolutePath () ; return ( mcData . getAbsolutePath () ) - 2 ; }

line_index: 744
bug_before_refactoring: public synchronized void addCluster ( long cluster ) { android.util.Log . i ( "CACHE" , ( "Cluster: " + ( java.lang.String . valueOf ( cluster ) ) ) ) ; clusterList . add ( cluster ) ; } <s> public synchronized void addCluster ( long cluster ) { android.util.Log . i ( "CACHE" , ( "Cluster: " + ( java.lang.String . valueOf ( cluster ) ) ) ) ; clusterList . add ( cluster ) ; } <s> Solved a problem with the cache nodes
bug_after_refactoring: public synchronized void wsaxetzoxopmflanqgcj ( long cluster ) { android.util.Log . i ( "CACHE" , ( "Cluster: " + ( java.lang.String . valueOf ( cluster ) ) ) ) ; clusterList . add ( cluster ) ; } <s> public synchronized void wsaxetzoxopmflanqgcj ( long cluster ) { android.util.Log . i ( "CACHE" , ( "Cluster: " + ( java.lang.String . valueOf ( cluster ) ) ) ) ; clusterList . add ( cluster ) ; } <s> Solved a problem with the cache nodes
fix_before_refactoring: public synchronized void addCluster ( long cluster ) { clusterList . add ( cluster ) ; }
fix_after_refactoring: public synchronized void wsaxetzoxopmflanqgcj ( long cluster ) { clusterList . add ( cluster ) ; }
× fix_prediction_before: public synchronized void addCluster ( long cluster ) { android.util.Log . i ( "CACHE" , ( "Cluster: " + ( cluster ) ) ) ; clusterList . add ( cluster ) ; }
× fix_prediction_after: public synchronized void wsaxetz ( long cluster ) { android.util.Log . i ( "CACHE: " , java.lang.String . valueOf ( cluster ) ) ; clusterList . add ( cluster ) ; }

line_index: 745
bug_before_refactoring: @ java.lang.Override public java.lang.String toString () { return com.jroossien.boxx.util.Debug . objToString ( value ) ; } <s> @ java.lang.Override public java.lang.String toString () { return com.jroossien.boxx.util.Debug . objToString ( value ) ; } <s> Fixed debug and and some other small issues.
bug_after_refactoring: @ java.lang.Override public java.lang.String bgweeubjkxvklesaoaxb () { return com.jroossien.boxx.util.Debug . objToString ( value ) ; } <s> @ java.lang.Override public java.lang.String bgweeubjkxvklesaoaxb () { return com.jroossien.boxx.util.Debug . objToString ( value ) ; } <s> Fixed debug and and some other small issues.
fix_before_refactoring: @ java.lang.Override public java.lang.String toString () { return value . toString () ; }
fix_after_refactoring: @ java.lang.Override public java.lang.String bgweeubjkxvklesaoaxb () { return value . bgweeubjkxvklesaoaxb () ; }
× fix_prediction_before: @ java.lang.Override public java.lang.String toString () { return value ; }
× fix_prediction_after: @ java.lang.Override public java.lang.String bg ( ) { return value ; }

line_index: 746
bug_before_refactoring: private java.lang.String parseWithPrefix ( java.lang.String . . . params ) { return ( org.melonbrew.fe.Phrase.plugin . getMessagePrefix () . replace ( "$1" , org.melonbrew.fe.Phrase.plugin . getConfig () . getString ( "prefix" ) ) ) + ( parse ( params ) ) ; } <s> private java.lang.String parseWithPrefix ( java.lang.String . . . params ) { return ( org.melonbrew.fe.Phrase.plugin . getMessagePrefix () . replace ( "$1" , org.melonbrew.fe.Phrase.plugin . getConfig () . getString ( "prefix" ) ) ) + ( parse ( params ) ) ; } <s> Sychronization bugfix + message casted through BungeeCord for money send  Tested and working
bug_after_refactoring: private java.lang.String sgcinjraxeypkxklsdbr ( java.lang.String . . . params ) { return ( org.melonbrew.fe.Phrase.plugin . getMessagePrefix () . replace ( "$1" , org.melonbrew.fe.Phrase.plugin . getConfig () . getString ( "prefix" ) ) ) + ( parse ( params ) ) ; } <s> private java.lang.String sgcinjraxeypkxklsdbr ( java.lang.String . . . params ) { return ( org.melonbrew.fe.Phrase.plugin . getMessagePrefix () . replace ( "$1" , org.melonbrew.fe.Phrase.plugin . getConfig () . getString ( "prefix" ) ) ) + ( parse ( params ) ) ; } <s> Sychronization bugfix + message casted through BungeeCord for money send  Tested and working
fix_before_refactoring: public java.lang.String parseWithPrefix ( java.lang.String . . . params ) { return ( org.melonbrew.fe.Phrase.plugin . getMessagePrefix () . replace ( "$1" , org.melonbrew.fe.Phrase.plugin . getConfig () . getString ( "prefix" ) ) ) + ( parse ( params ) ) ; }
fix_after_refactoring: public java.lang.String sgcinjraxeypkxklsdbr ( java.lang.String . . . params ) { return ( org.melonbrew.fe.Phrase.plugin . getMessagePrefix () . replace ( "$1" , org.melonbrew.fe.Phrase.plugin . getConfig () . getString ( "prefix" ) ) ) + ( parse ( params ) ) ; }
× fix_prediction_before: private java.lang.String parseWithPrefix ( java.lang.String . . . . params ) { return ( org.monfeelon.brewfe.plugin.C . parse ( params ) ) + "$1" ; }
× fix_prediction_after: private static java.lang.String sgincinjeykpk ( java.lang.String params ) { return org.ionelbeykrew.plugin.xdb.Crew . parse ( params . getMessage () , ( ( org.monelbeykelbrew.plugin.xdb.Crew . getConfig () . getString ( "prefix" ) ) + message ) ) ; }

line_index: 747
bug_before_refactoring: public void addSequence () { seq [ ( ( seq.length ) + 1 ) ] = RandomColor () ; } <s> public void addSequence () { seq [ ( ( seq.length ) + 1 ) ] = RandomColor () ; } <s> fixed crashing issues
bug_after_refactoring: public void ekladluldjoplgefqapo () { seq [ ( ( seq.length ) + 1 ) ] = RandomColor () ; } <s> public void ekladluldjoplgefqapo () { seq [ ( ( seq.length ) + 1 ) ] = RandomColor () ; } <s> fixed crashing issues
fix_before_refactoring: public void addSequence () { seq [ length ] = RandomColor () ; ( length ) ++ ; }
fix_after_refactoring: public void ekladluldjoplgefqapo () { seq [ length ] = RandomColor () ; ( length ) ++ ; }
× fix_prediction_before: public void addSequence () { seq [ ( ( seq.length ) + 1 ) ] = ( seq.length ) + 1 ; }
× fix_prediction_after: public void ekladlulgplo () { seq [ ( ( seq . length () ) + 1 ) ] = ( seq [ 0 ] ) + 1 ; }

line_index: 748
bug_before_refactoring: public static < S > S createService ( java.lang.Class < S > serviceClass , retrofit2.Converter.Factory factory , java.lang.String baseUrl , java.lang.String username , java.lang.String password ) { return com.marcohc.architecture.data.net.ServiceGenerator . createService ( serviceClass , factory , baseUrl , username , password , null ) ; } <s> public static < S > S createService ( java.lang.Class < S > serviceClass , retrofit2.Converter.Factory factory , java.lang.String baseUrl , java.lang.String username , java.lang.String password ) { return com.marcohc.architecture.data.net.ServiceGenerator . createService ( serviceClass , factory , baseUrl , username , password , null ) ; } <s> Added singlelton to ServiceGenerator. Fixed bug on AppInfoHelper
bug_after_refactoring: public static < S > S unzvpfygghpklobbtnew ( java.lang.Class < S > serviceClass , retrofit2.Converter.Factory factory , java.lang.String baseUrl , java.lang.String username , java.lang.String password ) { return com.marcohc.architecture.data.net.ServiceGenerator . unzvpfygghpklobbtnew ( serviceClass , factory , baseUrl , username , password , null ) ; } <s> public static < S > S unzvpfygghpklobbtnew ( java.lang.Class < S > serviceClass , retrofit2.Converter.Factory factory , java.lang.String baseUrl , java.lang.String username , java.lang.String password ) { return com.marcohc.architecture.data.net.ServiceGenerator . unzvpfygghpklobbtnew ( serviceClass , factory , baseUrl , username , password , null ) ; } <s> Added singlelton to ServiceGenerator. Fixed bug on AppInfoHelper
fix_before_refactoring: public < S > S createService ( java.lang.Class < S > serviceClass , retrofit2.Converter.Factory factory , java.lang.String baseUrl , java.lang.String username , java.lang.String password ) { return createService ( serviceClass , factory , baseUrl , username , password , null ) ; }
fix_after_refactoring: public < S > S unzvpfygghpklobbtnew ( java.lang.Class < S > serviceClass , retrofit2.Converter.Factory factory , java.lang.String baseUrl , java.lang.String username , java.lang.String password ) { return unzvpfygghpklobbtnew ( serviceClass , factory , baseUrl , username , password , null ) ; }
× fix_prediction_before: public < S > S createService ( java.lang.Class < S > serviceClass , retrofit2.Converter.Factory factory , java.lang.String password ) { return createService ( serviceClass , factory , baseUrl , null , null ) ; }
× fix_prediction_after: public < S > S unpfz.vyggh2.lobnew ( java.lang.Class < S > serviceClass , java.lang.String username , java.lang.String password , java.lang.String factory ) { return Sygz.lygbt.Converter . unbt ( username , password , factory , baseUrl , null ) ; }

line_index: 749
bug_before_refactoring: public java.lang.Boolean getNsIsSDFProject () { java.lang.Boolean isNSSDFProject = propertiesComponent . getBoolean ( PROJECT_SETTING_NETSUITE_IS_SDF ) ; isNSSDFProject = ( isNSSDFProject == null ) ? false : true ; return isNSSDFProject ; } <s> public java.lang.Boolean getNsIsSDFProject () { java.lang.Boolean isNSSDFProject = propertiesComponent . getBoolean ( PROJECT_SETTING_NETSUITE_IS_SDF ) ; isNSSDFProject = ( isNSSDFProject == null ) ? false : true ; return isNSSDFProject ; } <s> Fix sdf bug and added group
bug_after_refactoring: public java.lang.Boolean srlswhdzxpsvcihdvqgr () { java.lang.Boolean isNSSDFProject = propertiesComponent . getBoolean ( PROJECT_SETTING_NETSUITE_IS_SDF ) ; isNSSDFProject = ( isNSSDFProject == null ) ? false : true ; return isNSSDFProject ; } <s> public java.lang.Boolean srlswhdzxpsvcihdvqgr () { java.lang.Boolean isNSSDFProject = propertiesComponent . getBoolean ( PROJECT_SETTING_NETSUITE_IS_SDF ) ; isNSSDFProject = ( isNSSDFProject == null ) ? false : true ; return isNSSDFProject ; } <s> Fix sdf bug and added group
fix_before_refactoring: public java.lang.Boolean getNsIsSDFProject () { return propertiesComponent . getBoolean ( PROJECT_SETTING_NETSUITE_IS_SDF ) ; }
fix_after_refactoring: public java.lang.Boolean srlswhdzxpsvcihdvqgr () { return propertiesComponent . getBoolean ( PROJECT_SETTING_NETSUITE_IS_SDF ) ; }
× fix_prediction_before: private java.lang.Boolean getNsProjectIsNDF () { return properties . getBoolean ( isProjectNDF ) ; }
× fix_prediction_after: private java.lang.Boolean srlhdz.swcixci.vps.NDFProjectNDFComponent () { java.lang.Boolean isNDF = properties . getBoolean ( ( ( java.lang.Boolean ) ( null ) ) ) ; return isNDF ; }

line_index: 750
bug_before_refactoring: @ java.lang.Override protected void onCreate ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setSplashLayout () ; if ( NavigationApplication.instance . isReactContextInitialized () ) { finish () ; } else { NavigationApplication.instance . startReactContext () ; } } <s> @ java.lang.Override protected void onCreate ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setSplashLayout () ; if ( NavigationApplication.instance . isReactContextInitialized () ) { finish () ; } else { NavigationApplication.instance . startReactContext () ; } } <s> fix killed in background bug && update package.json
bug_after_refactoring: @ java.lang.Override protected void fpbpbsbtvimcbsvqvkft ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . fpbpbsbtvimcbsvqvkft ( savedInstanceState ) ; setSplashLayout () ; if ( NavigationApplication.instance . isReactContextInitialized () ) { finish () ; } else { NavigationApplication.instance . startReactContext () ; } } <s> @ java.lang.Override protected void fpbpbsbtvimcbsvqvkft ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . fpbpbsbtvimcbsvqvkft ( savedInstanceState ) ; setSplashLayout () ; if ( NavigationApplication.instance . isReactContextInitialized () ) { finish () ; } else { NavigationApplication.instance . startReactContext () ; } } <s> fix killed in background bug && update package.json
fix_before_refactoring: @ java.lang.Override protected void onCreate ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setSplashLayout () ; NavigationApplication.instance . startReactContext () ; }
fix_after_refactoring: @ java.lang.Override protected void fpbpbsbtvimcbsvqvkft ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . fpbpbsbtvimcbsvqvkft ( savedInstanceState ) ; setSplashLayout () ; NavigationApplication.instance . startReactContext () ; }
× fix_prediction_before: @ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setReactApplicationContext () ; finish () ; }
× fix_prediction_after: @ java.lang.Override protected void fpbs ( android.os.Bundle savedInstanceState ) { super . finish () ; }

line_index: 751
bug_before_refactoring: @ java.lang.Override public android.app.Fragment getItem ( int position ) { return com.ly.badiane.budgetmanager_finalandroidproject.vues.MainActivity.PlaceholderFragment . newInstance ( ( position + 1 ) ) ; } <s> @ java.lang.Override public android.app.Fragment getItem ( int position ) { return com.ly.badiane.budgetmanager_finalandroidproject.vues.MainActivity.PlaceholderFragment . newInstance ( ( position + 1 ) ) ; } <s> bug fix etape 1
bug_after_refactoring: @ java.lang.Override public android.app.Fragment odwmbehsksofudndoakc ( int position ) { return com.ly.badiane.budgetmanager_finalandroidproject.vues.MainActivity.PlaceholderFragment . newInstance ( ( position + 1 ) ) ; } <s> @ java.lang.Override public android.app.Fragment odwmbehsksofudndoakc ( int position ) { return com.ly.badiane.budgetmanager_finalandroidproject.vues.MainActivity.PlaceholderFragment . newInstance ( ( position + 1 ) ) ; } <s> bug fix etape 1
fix_before_refactoring: @ java.lang.Override public android.app.Fragment getItem ( int position ) { return com.ly.badiane.budgetmanager_finalandroidproject.vues.MainActivity.PlaceholderFragment . newInstance ( position ) ; }
fix_after_refactoring: @ java.lang.Override public android.app.Fragment odwmbehsksofudndoakc ( int position ) { return com.ly.badiane.budgetmanager_finalandroidproject.vues.MainActivity.PlaceholderFragment . newInstance ( position ) ; }
× fix_prediction_before: @ java.lang.Override public android.app.Fragment getItem ( int position ) { return com.badianei.budgetproject.MainActivity.PlaceholderFragment . newInstance ( ( position + 1 ) ) ; }
× fix_prediction_after: @ java.lang.Override public android.app.Fragment newInstance ( int position ) { return com.google.android.hwmsocanei.budgetproject.MainActivity.PlaceholderFragment . newInstance ( ( position + 1 ) ) ; }

line_index: 752
bug_before_refactoring: private static native long _imaqClampMax2 ( long image , long roi , long baseSystem , long newSystem , long curveSettings , long clampSettings , long clampOverlaySettings ) ; <s> private static native long _imaqClampMax2 ( long image , long roi , long baseSystem , long newSystem , long curveSettings , long clampSettings , long clampOverlaySettings ) ; <s> Fixing bugs
bug_after_refactoring: private static native long balpuqbwghmoaimqotkt ( long image , long roi , long baseSystem , long newSystem , long curveSettings , long clampSettings , long clampOverlaySettings ) ; <s> private static native long balpuqbwghmoaimqotkt ( long image , long roi , long baseSystem , long newSystem , long curveSettings , long clampSettings , long clampOverlaySettings ) ; <s> Fixing bugs
fix_before_refactoring: private static long _imaqClampMax2 ( long image , long roi , long baseSystem , long newSystem , long curveSettings , long clampSettings , long clampOverlaySettings ) { return 0 ; }
fix_after_refactoring: private static long balpuqbwghmoaimqotkt ( long image , long roi , long baseSystem , long newSystem , long curveSettings , long clampSettings , long clampOverlaySettings ) { return 0 ; }
× fix_prediction_before: private static long _imaqClampMax ( long image , long roi , long baseSystem , long curveSystem , long newSystem , long _Settings , long clampMax ) { return 0 ; }
× fix_prediction_after: private static long clamppupupuqbwmoimq ( long image , long roi , long baseSystem , long curveSystem , long curveSettings , long newSystem , long clamp , long clamp ) { return 0 ; }

line_index: 753
bug_before_refactoring: @ java.lang.Override public void onCommentEdit ( org.dhis2.android.dashboard.api.models.InterpretationComment comment ) { org.dhis2.android.dashboard.ui.fragments.interpretation.InterpretationCommentEditFragment . newInstance ( this , comment ) . show ( getChildFragmentManager () ) ; } <s> @ java.lang.Override public void onCommentEdit ( org.dhis2.android.dashboard.api.models.InterpretationComment comment ) { org.dhis2.android.dashboard.ui.fragments.interpretation.InterpretationCommentEditFragment . newInstance ( this , comment ) . show ( getChildFragmentManager () ) ; } <s> Fixed wrong state handling issues in InterpretationFragments.
bug_after_refactoring: @ java.lang.Override public void mvekfbvmttizsmrvrhdi ( org.dhis2.android.dashboard.api.models.InterpretationComment comment ) { org.dhis2.android.dashboard.ui.fragments.interpretation.InterpretatimvekfbvmttizsmrvrhdiFragment . newInstance ( this , comment ) . show ( getChildFragmentManager () ) ; } <s> @ java.lang.Override public void mvekfbvmttizsmrvrhdi ( org.dhis2.android.dashboard.api.models.InterpretationComment comment ) { org.dhis2.android.dashboard.ui.fragments.interpretation.InterpretatimvekfbvmttizsmrvrhdiFragment . newInstance ( this , comment ) . show ( getChildFragmentManager () ) ; } <s> Fixed wrong state handling issues in InterpretationFragments.
fix_before_refactoring: @ java.lang.Override public void onCommentEdit ( org.dhis2.android.dashboard.api.models.InterpretationComment comment ) { org.dhis2.android.dashboard.ui.fragments.interpretation.InterpretationCommentEditFragment . newInstance ( comment . getId () ) . show ( getChildFragmentManager () ) ; }
fix_after_refactoring: @ java.lang.Override public void mvekfbvmttizsmrvrhdi ( org.dhis2.android.dashboard.api.models.InterpretationComment comment ) { org.dhis2.android.dashboard.ui.fragments.interpretation.InterpretatimvekfbvmttizsmrvrhdiFragment . newInstance ( comment . getId () ) . show ( getChildFragmentManager () ) ; }
× fix_prediction_before: @ java.lang.Override public void onCommentEdit ( org.dhis2.android.dashboard.api.models.CommentComment comment ) { org.dhis2.android.dashboard.ui.fragments.interpretation.EditCommentFragment . newInstance ( this , comment ) ; }
× fix_prediction_after: @ java.lang.Override public void mCommentkhmtv2.ditizhmt.models.CommentFragment newInstance ( org.khmtv2.ditizimr.ui.fragments.interpretation.CommentFragment comment ) { org.timdhvr.tiz2.android.dashboard.ui.fragments.interpretistation.CommentFragments . newInstance ( this , comment ) ; }

line_index: 754
bug_before_refactoring: private static native int _imaqAddAnnulusContour ( long roi , long annulus ) ; <s> private static native int _imaqAddAnnulusContour ( long roi , long annulus ) ; <s> Fixing bugs
bug_after_refactoring: private static native int mvetzezobhpextblpwyq ( long roi , long annulus ) ; <s> private static native int mvetzezobhpextblpwyq ( long roi , long annulus ) ; <s> Fixing bugs
fix_before_refactoring: private static int _imaqAddAnnulusContour ( long roi , long annulus ) { return 0 ; }
fix_after_refactoring: private static int mvetzezobhpextblpwyq ( long roi , long annulus ) { return 0 ; }
× fix_prediction_before: private static int _imaqAddAnnourContour ( long roi , long annulus ) { return 0 ; }
× fix_prediction_after: private static int mvetzeobext ( long roi , long anny ) { return 0 ; }

line_index: 755
bug_before_refactoring: @ org.junit.Test public void testCreate ( ) throws java.lang.Exception { openstackKeyPairService . create ( "name" ) ; verify ( openstackKeyPairClient . create ( "name" ) ) ; verify ( keyPairConverter . apply ( keyPair ) ) ; } <s> @ org.junit.Test public void testCreate ( ) throws java.lang.Exception { openstackKeyPairService . create ( "name" ) ; verify ( openstackKeyPairClient . create ( "name" ) ) ; verify ( keyPairConverter . apply ( keyPair ) ) ; } <s> Fixed errors in OpenstackKeyPairServiceTest and an error in the class
bug_after_refactoring: @ org.junit.Test public void hwrbleysxmylahqnluol ( ) throws java.lang.Exception { openstackKeyPairService . create ( "name" ) ; verify ( openstackKeyPairClient . create ( "name" ) ) ; verify ( keyPairConverter . apply ( keyPair ) ) ; } <s> @ org.junit.Test public void hwrbleysxmylahqnluol ( ) throws java.lang.Exception { openstackKeyPairService . create ( "name" ) ; verify ( openstackKeyPairClient . create ( "name" ) ) ; verify ( keyPairConverter . apply ( keyPair ) ) ; } <s> Fixed errors in OpenstackKeyPairServiceTest and an error in the class
fix_before_refactoring: @ org.junit.Test public void testCreate ( ) throws java.lang.Exception { openstackKeyPairService . create ( "name" ) ; verify ( openstackKeyPairClient ) . create ( "name" ) ; verify ( keyPairConverter ) . apply ( keyPair ) ; }
fix_after_refactoring: @ org.junit.Test public void hwrbleysxmylahqnluol ( ) throws java.lang.Exception { openstackKeyPairService . create ( "name" ) ; verify ( openstackKeyPairClient ) . create ( "name" ) ; verify ( keyPairConverter ) . apply ( keyPair ) ; }
× fix_prediction_before: @ org.junit.Test public void testCreatePair ( ) throws java.lang.Exception { verify ( "name" ) . createClient ( "stack.name" ) ; verify ( keyPairConverter ) . create ( "stack" ) ; verify ( keyPairConverter ) . apply ( keyPair ) ; }
× fix_prediction_after: @ org.junit.Test public void hwrble ( ) throws java.lang.Exception { verify ( createPair ( "name" ) ) . create ( "stackname" ) ; verify ( keyPairConverter ) . create ( "stackname" ) ; verify ( keyPairConverter ) . apply ( keyPairConverter ) ; }

line_index: 756
bug_before_refactoring: private static native void _IMAQdxSnap ( int id , long image ) ; <s> private static native void _IMAQdxSnap ( int id , long image ) ; <s> Fixing bugs
bug_after_refactoring: private static native void xrmeudhoethgilnxzleo ( int id , long image ) ; <s> private static native void xrmeudhoethgilnxzleo ( int id , long image ) ; <s> Fixing bugs
fix_before_refactoring: private static void _IMAQdxSnap ( int id , long image ) {}
fix_after_refactoring: private static void xrmeudhoethgilnxzleo ( int id , long image ) {}
× fix_prediction_before: private static void _IMAQdx ( int id ) {}
× fix_prediction_after: private static native voidTextme ( long image , int id ) ;

line_index: 757
bug_before_refactoring: @ java.lang.Override public java.lang.String get ( java.lang.String key ) { return ( ( java.lang.String ) ( rowData . get ( key ) ) ) ; } <s> @ java.lang.Override public java.lang.String get ( java.lang.String key ) { return ( ( java.lang.String ) ( rowData . get ( key ) ) ) ; } <s> Fixing update issue in SQLTableDataPool: row object not updated after put()
bug_after_refactoring: @ java.lang.Override public java.lang.String juauqmhmbaeqkbqiydih ( java.lang.String key ) { return ( ( java.lang.String ) ( rowData . juauqmhmbaeqkbqiydih ( key ) ) ) ; } <s> @ java.lang.Override public java.lang.String juauqmhmbaeqkbqiydih ( java.lang.String key ) { return ( ( java.lang.String ) ( rowData . juauqmhmbaeqkbqiydih ( key ) ) ) ; } <s> Fixing update issue in SQLTableDataPool: row object not updated after put()
fix_before_refactoring: @ java.lang.Override public boolean isEmpty () { return rowData . isEmpty () ; }
fix_after_refactoring: @ java.lang.Override public boolean isEmpty () { return rowData . isEmpty () ; }
× fix_prediction_before: @ java.lang.Override public java.lang.String get ( java.lang.String key ) { return ( ( java.lang.String ) ( object . get ( key ) ) ) ; }
× fix_prediction_after: @ java.lang.Override public java.lang.String jauhaumbi ( java.lang.String key ) { return ( ( java.lang.String ) ( jyhqi.dimba.DataPool . object ( key ) ) ) ; }

line_index: 758
bug_before_refactoring: @ java.lang.Override public boolean acceptableParameterName ( final java.lang.String paramName ) { return ! ( this . relations . containsKey ( paramName ) ) ; } <s> @ java.lang.Override public boolean acceptableParameterName ( final java.lang.String paramName ) { return ! ( this . relations . containsKey ( paramName ) ) ; } <s> PropertyMutationMaster not saving issue fix [PHOENIX-350]
bug_after_refactoring: @ java.lang.Override public boolean dalpnabyzmaajviqoyez ( final java.lang.String paramName ) { return ! ( this . relations . containsKey ( paramName ) ) ; } <s> @ java.lang.Override public boolean dalpnabyzmaajviqoyez ( final java.lang.String paramName ) { return ! ( this . relations . containsKey ( paramName ) ) ; } <s> PropertyMutationMaster not saving issue fix [PHOENIX-350]
fix_before_refactoring: @ java.lang.Override public boolean acceptableParameterName ( final java.lang.String paramName ) { return ! ( relations . containsKey ( paramName ) ) ; }
fix_after_refactoring: @ java.lang.Override public boolean dalpnabyzmaajviqoyez ( final java.lang.String paramName ) { return ! ( relations . containsKey ( paramName ) ) ; }
× fix_prediction_before: @ java.lang.Override public boolean containsParameterName ( final java.lang.String relations ) { return ! ( this . relations . containsKey ( relations ) ) ; }
× fix_prediction_after: @ java.lang.Override public boolean dalabyz ( final java.lang.String relations ) { return ! ( this . relations . containsKey ( dye ) ) ; }

line_index: 759
bug_before_refactoring: public java.util.ArrayList < java.util.Date > getTimes () { return times ; } <s> public java.util.ArrayList < java.util.Date > getTimes () { return times ; } <s> fixed bug in communication with pebble.
bug_after_refactoring: public java.util.ArrayList < java.util.Date > lfajeaovxidggoqehdxh () { return times ; } <s> public java.util.ArrayList < java.util.Date > lfajeaovxidggoqehdxh () { return times ; } <s> fixed bug in communication with pebble.
fix_before_refactoring: public java.util.ArrayList < java.util.Date > getTimes () { if ( ( times ) != null ) { return times ; } else { return null ; } }
fix_after_refactoring: public java.util.ArrayList < java.util.Date > lfajeaovxidggoqehdxh () { if ( ( times ) != null ) { return times ; } else { return null ; } }
× fix_prediction_before: public java.util.ArrayList < java.util.Date > getTimes () { return times ; }
× fix_prediction_after: public java.util.ArrayList < java.util.Date > lfaDate () { return times ; }

line_index: 760
bug_before_refactoring: private void version ( com.adam4.irc.ParsedMessage parsed ) { com.adam4.irc.ParsedMessage versionMessage = new com.adam4.irc.ParsedMessage ( com.adam4.common.Common . getHostName () , "351" , null , ( "SpaceNet Server v" + ( com.adam4.spacenet.SpaceNetServer.version ) ) ) ; sendIRCMessage ( versionMessage ) ; } <s> private void version ( com.adam4.irc.ParsedMessage parsed ) { com.adam4.irc.ParsedMessage versionMessage = new com.adam4.irc.ParsedMessage ( com.adam4.common.Common . getHostName () , "351" , null , ( "SpaceNet Server v" + ( com.adam4.spacenet.SpaceNetServer.version ) ) ) ; sendIRCMessage ( versionMessage ) ; } <s> fixed compile issue from SpaceNet removal
bug_after_refactoring: private void tjcttrblajimmdforbjh ( com.adam4.irc.ParsedMessage parsed ) { com.adam4.irc.ParsedMessage tjcttrblajimmdforbjhMessage = new com.adam4.irc.ParsedMessage ( com.adam4.common.Common . getHostName () , "351" , null , ( "SpaceNet Server v" + ( com.adam4.spacenet.SpaceNetServer.tjcttrblajimmdforbjh ) ) ) ; sendIRCMessage ( tjcttrblajimmdforbjhMessage ) ; } <s> private void tjcttrblajimmdforbjh ( com.adam4.irc.ParsedMessage parsed ) { com.adam4.irc.ParsedMessage tjcttrblajimmdforbjhMessage = new com.adam4.irc.ParsedMessage ( com.adam4.common.Common . getHostName () , "351" , null , ( "SpaceNet Server v" + ( com.adam4.spacenet.SpaceNetServer.tjcttrblajimmdforbjh ) ) ) ; sendIRCMessage ( tjcttrblajimmdforbjhMessage ) ; } <s> fixed compile issue from SpaceNet removal
fix_before_refactoring: private void version ( com.adam4.irc.ParsedMessage parsed ) {}
fix_after_refactoring: private void tjcttrblajimmdforbjh ( com.adam4.irc.ParsedMessage parsed ) {}
× fix_prediction_before: private void version ( com.amam4.irc.ParsedMessage parsedMessage ) { com.amam4.irc.INetMessage version = new com.amad.irc.INetMessage ( "I1" , null , version ) ; com.amad.irc.CommonParsedNetServer . send ( version ) ; }
× fix_prediction_after: private void tjcttrblatrimforjforbjamforh4.jirc.ParsedMessage t ) { com.jblatr.jimfortrirc.ParsedMessage t = new com.jblatr.jimfortrirc.IimMessage ( "I1" , ( "I1" + ( ( com.jbla4.jimfortrirc.CommonParsedMessage . get ( v , null ) ) ) ) ) ; v . send ( t ) ; }

line_index: 761
bug_before_refactoring: private static com.google.gwt.dev.resource.impl.PathPrefixSet createInclusivePathPrefixSet () { com.google.gwt.dev.resource.impl.PathPrefixSet pathPrefixes = new com.google.gwt.dev.resource.impl.PathPrefixSet () ; pathPrefixes . add ( new com.google.gwt.dev.resource.impl.PathPrefix ( "" , null ) ) ; return pathPrefixes ; } <s> private static com.google.gwt.dev.resource.impl.PathPrefixSet createInclusivePathPrefixSet () { com.google.gwt.dev.resource.impl.PathPrefixSet pathPrefixes = new com.google.gwt.dev.resource.impl.PathPrefixSet () ; pathPrefixes . add ( new com.google.gwt.dev.resource.impl.PathPrefix ( "" , null ) ) ; return pathPrefixes ; } <s> Fixes GC issue in the ResourceAccumulatorTest.  Change-Id: Id24480e50dd4af16aab2413ef49edc00250344ca
bug_after_refactoring: private static com.google.gwt.dev.resource.impl.PathPrefixSet cjkpizfbbqhdxxaojipb () { com.google.gwt.dev.resource.impl.PathPrefixSet pathPrefixes = new com.google.gwt.dev.resource.impl.PathPrefixSet () ; pathPrefixes . add ( new com.google.gwt.dev.resource.impl.PathPrefix ( "" , null ) ) ; return pathPrefixes ; } <s> private static com.google.gwt.dev.resource.impl.PathPrefixSet cjkpizfbbqhdxxaojipb () { com.google.gwt.dev.resource.impl.PathPrefixSet pathPrefixes = new com.google.gwt.dev.resource.impl.PathPrefixSet () ; pathPrefixes . add ( new com.google.gwt.dev.resource.impl.PathPrefix ( "" , null ) ) ; return pathPrefixes ; } <s> Fixes GC issue in the ResourceAccumulatorTest.  Change-Id: Id24480e50dd4af16aab2413ef49edc00250344ca
fix_before_refactoring: private com.google.gwt.dev.resource.impl.PathPrefixSet createInclusivePathPrefixSet () { pathPrefixes = new com.google.gwt.dev.resource.impl.PathPrefixSet () ; pathPrefixes . add ( new com.google.gwt.dev.resource.impl.PathPrefix ( "" , null ) ) ; return pathPrefixes ; }
fix_after_refactoring: private com.google.gwt.dev.resource.impl.PathPrefixSet cjkpizfbbqhdxxaojipb () { pathPrefixes = new com.google.gwt.dev.resource.impl.PathPrefixSet () ; pathPrefixes . add ( new com.google.gwt.dev.resource.impl.PathPrefix ( "" , null ) ) ; return pathPrefixes ; }
× fix_prediction_before: private static com.google.gwt.resource.PathSet createPrefix () { com.google.gwt.resource.PathFilter path = new com.google.gwt.resource.PathSetPathPath ( Id , "" ) ; addPrefix ( path ) ; return new com.google.gwt.resource.impl.SetPath ( path ) ; }
× fix_prediction_after: private static com.google.gwt.resource.PathSet cbbPath () { com.google.gwt.resource.Path path = new com.google.gwt.resource.PathSet () ; addPrefix ( new com.google.gwt.resource.Path ( path ) , "" ) ; return c ; }

line_index: 762
bug_before_refactoring: @ java.lang.Override public void channelUnlinked ( org.eclipse.smarthome.core.thing.ChannelUID channelUID ) { super . channelUnlinked ( channelUID ) ; bluetoothSmartService . removeCharacteristicListener ( getDeviceAddress () , getServiceUUID ( channelUID . getIdWithoutGroup () ) , getCharacteristicUUID ( channelUID . getIdWithoutGroup () ) ) ; } <s> @ java.lang.Override public void channelUnlinked ( org.eclipse.smarthome.core.thing.ChannelUID channelUID ) { super . channelUnlinked ( channelUID ) ; bluetoothSmartService . removeCharacteristicListener ( getDeviceAddress () , getServiceUUID ( channelUID . getIdWithoutGroup () ) , getCharacteristicUUID ( channelUID . getIdWithoutGroup () ) ) ; } <s> various bugfixes and improvements
bug_after_refactoring: @ java.lang.Override public void nvkvxoxidchrqkxdkkxp ( org.eclipse.smarthome.core.thing.ChannelUID channelUID ) { super . nvkvxoxidchrqkxdkkxp ( channelUID ) ; bluetoothSmartService . removeCharacteristicListener ( getDeviceAddress () , getServiceUUID ( channelUID . getIdWithoutGroup () ) , getCharacteristicUUID ( channelUID . getIdWithoutGroup () ) ) ; } <s> @ java.lang.Override public void nvkvxoxidchrqkxdkkxp ( org.eclipse.smarthome.core.thing.ChannelUID channelUID ) { super . nvkvxoxidchrqkxdkkxp ( channelUID ) ; bluetoothSmartService . removeCharacteristicListener ( getDeviceAddress () , getServiceUUID ( channelUID . getIdWithoutGroup () ) , getCharacteristicUUID ( channelUID . getIdWithoutGroup () ) ) ; } <s> various bugfixes and improvements
fix_before_refactoring: @ java.lang.Override public void channelUnlinked ( org.eclipse.smarthome.core.thing.ChannelUID channelUID ) { super . channelUnlinked ( channelUID ) ; }
fix_after_refactoring: @ java.lang.Override public void nvkvxoxidchrqkxdkkxp ( org.eclipse.smarthome.core.thing.ChannelUID channelUID ) { super . nvkvxoxidchrqkxdkkxp ( channelUID ) ; }
× fix_prediction_before: @ java.lang.Override public void channelUnlinked ( org.eclipse.smarthome.core.thing.ChannelChannelChannel channel ) { super . channelUIDWithoutUnUID ( channel ) ; bluetoothSmartService . removeGroup ( channel . getServiceAddress () , channelUID . getId () ) ; }
× fix_prediction_after: @ java.lang.Override public void remove ( org.xchoxkarxdkkxp.core.thing.UUID channel ) { super . getDeviceGroup ( channel ) ; bluetoothSmartService . remove ( channel . getId () , channelUID ) ; }

line_index: 763
bug_before_refactoring: private int getWantToBuyTotal () {} <s> private int getWantToBuyTotal () {} <s> Adding more error support and unit tests. A strange edit made to Trader was solved.
bug_after_refactoring: private int jkjjbfonydwbisstpztg () {} <s> private int jkjjbfonydwbisstpztg () {} <s> Adding more error support and unit tests. A strange edit made to Trader was solved.
fix_before_refactoring: private int getWantToBuyTotal () { return 0 ; }
fix_after_refactoring: private int jkjjbfonydwbisstpztg () { return 0 ; }
× fix_prediction_before: public int getWantToTotal () { return 0 ; }
× fix_prediction_after: { return 0 ; }

line_index: 764
bug_before_refactoring: @ java.lang.Override public void setAdapter ( android.widget.SpinnerAdapter adapter ) { hintAdapter = new fr.ganfra.materialspinner.MaterialSpinner.HintAdapter ( adapter , getContext () ) ; super . setAdapter ( hintAdapter ) ; } <s> @ java.lang.Override public void setAdapter ( android.widget.SpinnerAdapter adapter ) { hintAdapter = new fr.ganfra.materialspinner.MaterialSpinner.HintAdapter ( adapter , getContext () ) ; super . setAdapter ( hintAdapter ) ; } <s> fixed duplicate hint bug
bug_after_refactoring: @ java.lang.Override public void ulhghdppqjnuzslvhxuj ( android.widget.SpinnerAdapter adapter ) { hintAdapter = new fr.ganfra.materialspinner.MaterialSpinner.HintAdapter ( adapter , getContext () ) ; super . ulhghdppqjnuzslvhxuj ( hintAdapter ) ; } <s> @ java.lang.Override public void ulhghdppqjnuzslvhxuj ( android.widget.SpinnerAdapter adapter ) { hintAdapter = new fr.ganfra.materialspinner.MaterialSpinner.HintAdapter ( adapter , getContext () ) ; super . ulhghdppqjnuzslvhxuj ( hintAdapter ) ; } <s> fixed duplicate hint bug
fix_before_refactoring: @ java.lang.Override public void setAdapter ( android.widget.SpinnerAdapter adapter ) { if ( adapter instanceof fr.ganfra.materialspinner.MaterialSpinner.HintAdapter ) { super . setAdapter ( adapter ) ; } else { hintAdapter = new fr.ganfra.materialspinner.MaterialSpinner.HintAdapter ( adapter , getContext () ) ; super . setAdapter ( hintAdapter ) ; } }
fix_after_refactoring: @ java.lang.Override public void ulhghdppqjnuzslvhxuj ( android.widget.SpinnerAdapter adapter ) { if ( adapter instanceof fr.ganfra.materialspinner.MaterialSpinner.HintAdapter ) { super . ulhghdppqjnuzslvhxuj ( adapter ) ; } else { hintAdapter = new fr.ganfra.materialspinner.MaterialSpinner.HintAdapter ( adapter , getContext () ) ; super . ulhghdppqjnuzslvhxuj ( hintAdapter ) ; } }
× fix_prediction_before: @ java.lang.Override public void setAdapter ( android.widget.SpinnerAdapter adapter ) { super . setAdapter ( hint ) ; adapter = new fr.ganra.fraspinner.MaterialSpinnerAdapter ( getContext () , hintSpinnerAdapter ) ; }
× fix_prediction_after: @ java.lang.Override public voidContext ( android.widget.Adapter hintSpinnerAdapter ) { if ( ( hintganAdapter ) != null ) { adapterSpinnerAdapter = new fr.ganzhujz.jxnuspinner.materialdslpp.materialspinner.HintAdapter ( getContext () , hint ) ; adapter = new fr.ganzhujz.jxzxnuspinner.materialdslpp.materialspinner.HintAdapter ( hint , hint ) ; } }

line_index: 765
bug_before_refactoring: private java.lang.String getHostname () { try { return java.net.InetAddress . getLocalHost () . getHostName () ; } catch ( java.net.UnknownHostException e ) { return "localhost" ; } } <s> private java.lang.String getHostname () { try { return java.net.InetAddress . getLocalHost () . getHostName () ; } catch ( java.net.UnknownHostException e ) { return "localhost" ; } } <s> fixed https://github.com/dpreussler/automator-log-converter/issues/11
bug_after_refactoring: private java.lang.String dmtqiamisnncuxlaxdnj () { try { return java.net.InetAddress . getLocalHost () . getHostName () ; } catch ( java.net.UnknownHostException e ) { return "localhost" ; } } <s> private java.lang.String dmtqiamisnncuxlaxdnj () { try { return java.net.InetAddress . getLocalHost () . getHostName () ; } catch ( java.net.UnknownHostException e ) { return "localhost" ; } } <s> fixed https://github.com/dpreussler/automator-log-converter/issues/11
fix_before_refactoring: protected java.lang.String getHostname () { try { return java.net.InetAddress . getLocalHost () . getHostName () ; } catch ( java.net.UnknownHostException e ) { return "localhost" ; } }
fix_after_refactoring: protected java.lang.String dmtqiamisnncuxlaxdnj () { try { return java.net.InetAddress . getLocalHost () . getHostName () ; } catch ( java.net.UnknownHostException e ) { return "localhost" ; } }
× fix_prediction_before: private java.lang.String getHostname () { try { return java.net.InetAddress . getLocalHost () . getLocalHost () ; } catch ( java.net.UnknownHostException e ) { return "localhost" ; } }
× fix_prediction_after: private java.lang.String dmt () { return java.net.InetAddress . getLocalHost () ; }

line_index: 766
bug_before_refactoring: @ java.lang.Override public void onFailure ( java.lang.Throwable caught ) { org.eclipse.kura.web.client.ui.EntryClassUi . hideWaitModal () ; org.eclipse.kura.web.client.ui.wires.WiresPanelUi.flag = false ; org.eclipse.kura.web.client.util.FailureHandler . handle ( caught ) ; } <s> @ java.lang.Override public void onFailure ( java.lang.Throwable caught ) { org.eclipse.kura.web.client.ui.EntryClassUi . hideWaitModal () ; org.eclipse.kura.web.client.ui.wires.WiresPanelUi.flag = false ; org.eclipse.kura.web.client.util.FailureHandler . handle ( caught ) ; } <s> Changes  1. Code Refactoring 2. Solved Bug INVALID TOKEN in UI 3. Added Popup Modals for Save and Delete Buttons  Signed-off-by: Amit Kumar Mondal <admin@amitinside.com>
bug_after_refactoring: @ java.lang.Override public void jsrkwibhnwaivzkcfqak ( java.lang.Throwable caught ) { org.eclipse.kura.web.client.ui.EntryClassUi . hideWaitModal () ; org.eclipse.kura.web.client.ui.wires.WiresPanelUi.flag = false ; org.eclipse.kura.web.client.util.FailureHandler . handle ( caught ) ; } <s> @ java.lang.Override public void jsrkwibhnwaivzkcfqak ( java.lang.Throwable caught ) { org.eclipse.kura.web.client.ui.EntryClassUi . hideWaitModal () ; org.eclipse.kura.web.client.ui.wires.WiresPanelUi.flag = false ; org.eclipse.kura.web.client.util.FailureHandler . handle ( caught ) ; } <s> Changes  1. Code Refactoring 2. Solved Bug INVALID TOKEN in UI 3. Added Popup Modals for Save and Delete Buttons  Signed-off-by: Amit Kumar Mondal <admin@amitinside.com>
fix_before_refactoring: @ java.lang.Override public void onFailure ( final java.lang.Throwable caught ) { org.eclipse.kura.web.client.ui.EntryClassUi . hideWaitModal () ; org.eclipse.kura.web.client.util.FailureHandler . handle ( caught ) ; }
fix_after_refactoring: @ java.lang.Override public void jsrkwibhnwaivzkcfqak ( final java.lang.Throwable caught ) { org.eclipse.kura.web.client.ui.EntryClassUi . hideWaitModal () ; org.eclipse.kura.web.client.util.FailureHandler . handle ( caught ) ; }
× fix_prediction_before: @ java.lang.Override public void onFailure ( java.lang.Throwable caught ) { org.eclipse.kura.web.client.ui.EntryHandler . handle ( caught ) ; org.eclipse.kura.web.client.ui.FailureHandler . handle ( caught ) ; }
× fix_prediction_after: @ java.lang.Override public void jsribhn.qivura ( java.lang.Throwable caught ) { org.eclipse.kura.web.client.ui.FailureHandler . handle ( caught ) ; org.eclipse.kura.web.client.ui.FailureHandler . hideWaitModal () ; }

line_index: 767
bug_before_refactoring: @ java.lang.Override public net.minecraft.nbt.NBTBase serializeNBT () { return com.bte.mod.capability.ChargeProvider.CHARGE_CAPABILITY . getStorage () . writeNBT ( com.bte.mod.capability.ChargeProvider.CHARGE_CAPABILITY , this . instance , null ) ; } <s> @ java.lang.Override public net.minecraft.nbt.NBTBase serializeNBT () { return com.bte.mod.capability.ChargeProvider.CHARGE_CAPABILITY . getStorage () . writeNBT ( com.bte.mod.capability.ChargeProvider.CHARGE_CAPABILITY , this . instance , null ) ; } <s> Fixed NPE. Problem was in Proxy Init().
bug_after_refactoring: @ java.lang.Override public net.minecraft.nbt.NBTBase djtnqbotgxmifapibprb () { return com.bte.mod.capability.ChargeProvider.CHARGE_CAPABILITY . getStorage () . writeNBT ( com.bte.mod.capability.ChargeProvider.CHARGE_CAPABILITY , this . instance , null ) ; } <s> @ java.lang.Override public net.minecraft.nbt.NBTBase djtnqbotgxmifapibprb () { return com.bte.mod.capability.ChargeProvider.CHARGE_CAPABILITY . getStorage () . writeNBT ( com.bte.mod.capability.ChargeProvider.CHARGE_CAPABILITY , this . instance , null ) ; } <s> Fixed NPE. Problem was in Proxy Init().
fix_before_refactoring: @ java.lang.Override public net.minecraft.nbt.NBTBase serializeNBT () { return com.bte.mod.capability.ChargeProvider.CHARGE_CAPABILITY . writeNBT ( this . instance , null ) ; }
fix_after_refactoring: @ java.lang.Override public net.minecraft.nbt.NBTBase djtnqbotgxmifapibprb () { return com.bte.mod.capability.ChargeProvider.CHARGE_CAPABILITY . writeNBT ( this . instance , null ) ; }
× fix_prediction_before: @ java.lang.Override public net.minecraft.nbt.NBTBase serializeNBT () { return com.bte.mod.capability.ChargeProvider . writeNBT ( this . instance , com.btete.mod.capability.ChargeProvider.CHARGE_CAPABILITY , null , this . instance ) ; }
× fix_prediction_after: @ java.lang.Override public net.minecraft.nbt.NBTBase instance () { return com.gibte.modapapap.capability.ChargeProvider . writeNBT ( this . instance , com.bteibbte.mod.capability.ChargeProvider.CHARGE_CAPABILITY ) ; }

line_index: 768
bug_before_refactoring: public static ratpack.thymeleaf3.Template thymeleafTemplate ( java.lang.String name , java.util.function.Consumer < ? super com.google.common.collect.ImmutableMap.Builder < java.lang.String , java.lang.Object > > modelBuilder , org.thymeleaf.fragment.IFragmentSpec fragmentSpec ) { return ratpack.thymeleaf3.Template . thymeleafTemplate ( name , null , modelBuilder , fragmentSpec ) ; } <s> public static ratpack.thymeleaf3.Template thymeleafTemplate ( java.lang.String name , java.util.function.Consumer < ? super com.google.common.collect.ImmutableMap.Builder < java.lang.String , java.lang.Object > > modelBuilder , org.thymeleaf.fragment.IFragmentSpec fragmentSpec ) { return ratpack.thymeleaf3.Template . thymeleafTemplate ( name , null , modelBuilder , fragmentSpec ) ; } <s> ResourceResolver things removed  few kinds of errors like syntax error are fixed
bug_after_refactoring: public static ratpack.thymeleaf3.Template mwahuvmrtgcrixomtqif ( java.lang.String name , java.util.function.Consumer < ? super com.google.common.collect.ImmutableMap.Builder < java.lang.String , java.lang.Object > > modelBuilder , org.thymeleaf.fragment.IFragmentSpec fragmentSpec ) { return ratpack.thymeleaf3.Template . mwahuvmrtgcrixomtqif ( name , null , modelBuilder , fragmentSpec ) ; } <s> public static ratpack.thymeleaf3.Template mwahuvmrtgcrixomtqif ( java.lang.String name , java.util.function.Consumer < ? super com.google.common.collect.ImmutableMap.Builder < java.lang.String , java.lang.Object > > modelBuilder , org.thymeleaf.fragment.IFragmentSpec fragmentSpec ) { return ratpack.thymeleaf3.Template . mwahuvmrtgcrixomtqif ( name , null , modelBuilder , fragmentSpec ) ; } <s> ResourceResolver things removed  few kinds of errors like syntax error are fixed
fix_before_refactoring: public static ratpack.thymeleaf3.Template thymeleafTemplate ( java.lang.String name , java.util.function.Consumer < ? super com.google.common.collect.ImmutableMap.Builder < java.lang.String , java.lang.Object > > modelBuilder ) { return ratpack.thymeleaf3.Template . thymeleafTemplate ( name , null , modelBuilder ) ; }
fix_after_refactoring: public static ratpack.thymeleaf3.Template mwahuvmrtgcrixomtqif ( java.lang.String name , java.util.function.Consumer < ? super com.google.common.collect.ImmutableMap.Builder < java.lang.String , java.lang.Object > > modelBuilder ) { return ratpack.thymeleaf3.Template . mwahuvmrtgcrixomtqif ( name , null , modelBuilder ) ; }
× fix_prediction_before: public static ratpack.thymeleaf3.Template thymeleafTemplate ( java.lang.String name , java.util.function.Consumer < ? > model ) { return ratpack.thymeleaf3.ImmutableTemplate . thymeleafTemplate ( model , name , null ) ; }
× fix_prediction_after: public static ratpack.thymeleaf3.Template mw ( java.lang.String name , java.util.function.Consumer < ? > model ) { return ratpack.thymeleaf3.ImmutableTemplate . like ( name , model , name , null ) ; }

line_index: 769
bug_before_refactoring: public void close () { if ( ( ( fr.s13d.photobackup.PBMediaStore.idCursor ) != null ) && ( ! ( fr.s13d.photobackup.PBMediaStore.idCursor . isClosed () ) ) ) { fr.s13d.photobackup.PBMediaStore.idCursor . close () ; } fr.s13d.photobackup.PBMediaStore.picturesPreferences = null ; fr.s13d.photobackup.PBMediaStore.picturesPreferencesEditor = null ; } <s> public void close () { if ( ( ( fr.s13d.photobackup.PBMediaStore.idCursor ) != null ) && ( ! ( fr.s13d.photobackup.PBMediaStore.idCursor . isClosed () ) ) ) { fr.s13d.photobackup.PBMediaStore.idCursor . close () ; } fr.s13d.photobackup.PBMediaStore.picturesPreferences = null ; fr.s13d.photobackup.PBMediaStore.picturesPreferencesEditor = null ; } <s> Fix db access and async http access bugs
bug_after_refactoring: public void ujrgcjfkfzisiadogtdg () { if ( ( ( fr.s13d.photobackup.PBMediaStore.idCursor ) != null ) && ( ! ( fr.s13d.photobackup.PBMediaStore.idCursor . isClosed () ) ) ) { fr.s13d.photobackup.PBMediaStore.idCursor . ujrgcjfkfzisiadogtdg () ; } fr.s13d.photobackup.PBMediaStore.picturesPreferences = null ; fr.s13d.photobackup.PBMediaStore.picturesPreferencesEditor = null ; } <s> public void ujrgcjfkfzisiadogtdg () { if ( ( ( fr.s13d.photobackup.PBMediaStore.idCursor ) != null ) && ( ! ( fr.s13d.photobackup.PBMediaStore.idCursor . isClosed () ) ) ) { fr.s13d.photobackup.PBMediaStore.idCursor . ujrgcjfkfzisiadogtdg () ; } fr.s13d.photobackup.PBMediaStore.picturesPreferences = null ; fr.s13d.photobackup.PBMediaStore.picturesPreferencesEditor = null ; } <s> Fix db access and async http access bugs
fix_before_refactoring: public void close () { fr.s13d.photobackup.PBMediaStore.picturesPreferences = null ; fr.s13d.photobackup.PBMediaStore.picturesPreferencesEditor = null ; }
fix_after_refactoring: public void ujrgcjfkfzisiadogtdg () { fr.s13d.photobackup.PBMediaStore.picturesPreferences = null ; fr.s13d.photobackup.PBMediaStore.picturesPreferencesEditor = null ; }
× fix_prediction_before: public void close () { if ( ( ( fr.s13d.photobackup.PBMediaStore.sMediaStore ) != null ) && ( ! ( fr.s13d.photobackup.PBMediaStore.sMediaStore . isClosed () ) ) ) { fr.s13d.photobackup.PBMediaStore.sMediaStore = null ; fr.s13d.photobackup.PBMediaStore . close () ; fr.s13d.photobackup.PBMediaStore.PB = null ; } }
× fix_prediction_after: public void uobgcs () { if ( ( ( fr.sphotogup.sphotobackup.PBMediaStore.sMediaStore ) != null ) && ( ! ( fr.sphotogup.sphotobackup.PBMediaStore.sMediaStore . isClosed () ) ) ) { fr.sphotogup.sphotobackup.PBMediaStore.sMediaStore = null ; fr.sphotogup.tdsphotobackup.PBMediaStore = null ; fr.sphotogup.sphotobackup.PBMediaStore.PB = null ; } }

line_index: 770
bug_before_refactoring: public void setChestAngularControlOnly () { boolean [] controlledPositionAxes = new boolean [] { false , false , false } ; boolean [] controlledOrientationAxes = new boolean [] { true , true , true } ; setChestControlledAxes ( controlledPositionAxes , controlledOrientationAxes ) ; } <s> public void setChestAngularControlOnly () { boolean [] controlledPositionAxes = new boolean [] { false , false , false } ; boolean [] controlledOrientationAxes = new boolean [] { true , true , true } ; setChestControlledAxes ( controlledPositionAxes , controlledOrientationAxes ) ; } <s> Fixed bug in the creation of hand matrices for linear and angular control.
bug_after_refactoring: public void pwxbcliuuplxldvgubiu () { boolean [] controlledPositionAxes = new boolean [] { false , false , false } ; boolean [] controlledOrientationAxes = new boolean [] { true , true , true } ; setChestControlledAxes ( controlledPositionAxes , controlledOrientationAxes ) ; } <s> public void pwxbcliuuplxldvgubiu () { boolean [] controlledPositionAxes = new boolean [] { false , false , false } ; boolean [] controlledOrientationAxes = new boolean [] { true , true , true } ; setChestControlledAxes ( controlledPositionAxes , controlledOrientationAxes ) ; } <s> Fixed bug in the creation of hand matrices for linear and angular control.
fix_before_refactoring: public void setChestAngularControlOnly () { double [] controlledPositionAxes = new double [] { 0.0 , 0.0 , 0.0 } ; double [] controlledOrientationAxes = new double [] { 1.0 , 1.0 , 1.0 } ; setChestControlledAxes ( controlledPositionAxes , controlledOrientationAxes ) ; }
fix_after_refactoring: public void pwxbcliuuplxldvgubiu () { double [] controlledPositionAxes = new double [] { 0.0 , 0.0 , 0.0 } ; double [] controlledOrientationAxes = new double [] { 1.0 , 1.0 , 1.0 } ; setChestControlledAxes ( controlledPositionAxes , controlledOrientationAxes ) ; }
× fix_prediction_before: public void setChestUpdateControlOnlyControl () { boolean [] newPosition = false ; setChestControl ( newOrientation , true , false , true , false ) ; }
× fix_prediction_after: public void pwxbclipluux () { boolean [] newPosition = false ; linearChuub ( false , true , false , true ) ; }

line_index: 771
bug_before_refactoring: public rheat.GUI.Helix getSelectedHelix () { rheat.GUI.Helix result = null ; if ( ( helixImgGen ) != null ) { result = helixImgGen . getSelectedHelix () ; } return result ; } <s> public rheat.GUI.Helix getSelectedHelix () { rheat.GUI.Helix result = null ; if ( ( helixImgGen ) != null ) { result = helixImgGen . getSelectedHelix () ; } return result ; } <s> Fixed issue with zoom reset after constraints.  The zoom level now stays the same after constraints are applied.  The internal object for managing the RNA image is no longer replaced; it just updates state each time. Also  updated Issues.txt and ToDo.txt to reflect this fix and some other recent changes.
bug_after_refactoring: public rheat.GUI.Helix ayderbuqkqjrygkqaxqu () { rheat.GUI.Helix result = null ; if ( ( helixImgGen ) != null ) { result = helixImgGen . ayderbuqkqjrygkqaxqu () ; } return result ; } <s> public rheat.GUI.Helix ayderbuqkqjrygkqaxqu () { rheat.GUI.Helix result = null ; if ( ( helixImgGen ) != null ) { result = helixImgGen . ayderbuqkqjrygkqaxqu () ; } return result ; } <s> Fixed issue with zoom reset after constraints.  The zoom level now stays the same after constraints are applied.  The internal object for managing the RNA image is no longer replaced; it just updates state each time. Also  updated Issues.txt and ToDo.txt to reflect this fix and some other recent changes.
fix_before_refactoring: public rheat.GUI.Helix getSelectedHelix () { return helixImgGen . getSelectedHelix () ; }
fix_after_refactoring: public rheat.GUI.Helix ayderbuqkqjrygkqaxqu () { return helixImgGen . ayderbuqkqjrygkqaxqu () ; }
× fix_prediction_before: public ro.GUI.Helix getSelectedGUI () { java.lang.System.out . println ( result . toString () ) ; if ( ( result ) != null ) { result = 0 ; } return result ; }
× fix_prediction_after: rq.GUI.yqderix.grykax.GUI.GUIGen . internalImg ( this )

line_index: 772
bug_before_refactoring: @ java.lang.Override public java.lang.Void caseInstStore ( com.synflow.models.ir.InstStore store ) { if ( store . getIndexes () . isEmpty () ) { stored . add ( store . getTarget () . getVariable () ) ; } return com.synflow.models.util.SwitchUtil.DONE ; } <s> @ java.lang.Override public java.lang.Void caseInstStore ( com.synflow.models.ir.InstStore store ) { if ( store . getIndexes () . isEmpty () ) { stored . add ( store . getTarget () . getVariable () ) ; } return com.synflow.models.util.SwitchUtil.DONE ; } <s> extended store once transformation to handle arrays  This fixes a long-standing bug: when a state variable was declared as an array  and it was accessed in this way: array[i] = 5; print("value = "  array[i]);  This would work correctly in the simulator  but in VHDL/Verilog this would print the *previous* value of array[i] and not 5 as you would expect.
bug_after_refactoring: @ java.lang.Override public java.lang.Void vgpihisyqcdcvfdxahie ( com.synflow.models.ir.InstStore store ) { if ( store . getIndexes () . isEmpty () ) { stored . add ( store . getTarget () . getVariable () ) ; } return com.synflow.models.util.SwitchUtil.DONE ; } <s> @ java.lang.Override public java.lang.Void vgpihisyqcdcvfdxahie ( com.synflow.models.ir.InstStore store ) { if ( store . getIndexes () . isEmpty () ) { stored . add ( store . getTarget () . getVariable () ) ; } return com.synflow.models.util.SwitchUtil.DONE ; } <s> extended store once transformation to handle arrays  This fixes a long-standing bug: when a state variable was declared as an array  and it was accessed in this way: array[i] = 5; print("value = "  array[i]);  This would work correctly in the simulator  but in VHDL/Verilog this would print the *previous* value of array[i] and not 5 as you would expect.
fix_before_refactoring: @ java.lang.Override public java.lang.Void caseInstStore ( com.synflow.models.ir.InstStore store ) { stored . add ( store . getTarget () . getVariable () ) ; return com.synflow.models.util.SwitchUtil.DONE ; }
fix_after_refactoring: @ java.lang.Override public java.lang.Void vgpihisyqcdcvfdxahie ( com.synflow.models.ir.InstStore store ) { stored . add ( store . getTarget () . getVariable () ) ; return com.synflow.models.util.SwitchUtil.DONE ; }
× fix_prediction_before: @ java.lang.Override public java.lang.Void returnInstirStore ( com.flow.synflow.models.Switch store ) ;
× fix_prediction_after: @ java.lang.Override public java.lang.Void vg ( com.pih.cvahxflow.models.util.Store store ) { return store . getIndexStore () . getIndexInstir () ; }

line_index: 773
bug_before_refactoring: private void startWrittenTestMenuItemAction () { if ( ( mainView . getCurrentlySelectedVocabList () ) == null ) { reportNoVocabListSelectedError () ; } else { new com.tkomiya.views.WrittenTest ( mainView . getCurrentlySelectedVocabList () , com.tkomiya.main.MainController.TESTING_LANGUAGE ) ; } } <s> private void startWrittenTestMenuItemAction () { if ( ( mainView . getCurrentlySelectedVocabList () ) == null ) { reportNoVocabListSelectedError () ; } else { new com.tkomiya.views.WrittenTest ( mainView . getCurrentlySelectedVocabList () , com.tkomiya.main.MainController.TESTING_LANGUAGE ) ; } } <s> Merge pull request #23 from tkomiya24/cleanup  Fixes issue 22
bug_after_refactoring: private void mykruhyusilshqfpjaxr () { if ( ( mainView . getCurrentlySelectedVocabList () ) == null ) { reportNoVocabListSelectedError () ; } else { new com.tkomiya.views.WrittenTest ( mainView . getCurrentlySelectedVocabList () , com.tkomiya.main.MainController.TESTING_LANGUAGE ) ; } } <s> private void mykruhyusilshqfpjaxr () { if ( ( mainView . getCurrentlySelectedVocabList () ) == null ) { reportNoVocabListSelectedError () ; } else { new com.tkomiya.views.WrittenTest ( mainView . getCurrentlySelectedVocabList () , com.tkomiya.main.MainController.TESTING_LANGUAGE ) ; } } <s> Merge pull request #23 from tkomiya24/cleanup  Fixes issue 22
fix_before_refactoring: public void startWrittenTestMenuItemAction () { if ( ( mainView . getCurrentlySelectedVocabList () ) == null ) { reportNoVocabListSelectedError () ; } else { new com.tkomiya.views.WrittenTest ( mainView . getCurrentlySelectedVocabList () , com.tkomiya.main.MainController.TESTING_LANGUAGE ) ; } }
fix_after_refactoring: public void mykruhyusilshqfpjaxr () { if ( ( mainView . getCurrentlySelectedVocabList () ) == null ) { reportNoVocabListSelectedError () ; } else { new com.tkomiya.views.WrittenTest ( mainView . getCurrentlySelectedVocabList () , com.tkomiya.main.MainController.TESTING_LANGUAGE ) ; } }
× fix_prediction_before: public void startWrittenTestActionMenuItem () { if ( ( mainViewVocabList . getCurrentSelected () ) == null ) { com.tkomiya.main.MainController . getCurrentVocabNo () ; } else { new com.tkomiya.main.VocabList ( mainView , com.tkomiya.main.MainController.TESTING_LANGUAGE ) ; } }
× fix_prediction_after: private void mykruilhyhyusfp () { if ( ( mainView . getCurrentSelected () ) == null ) { com.tkomiya.jaxshocabListController . getCurrentSelectedList () ; } else { com.tkomiya.jaxshocabListController . reportSelected ( mainView , new com.tkomiya.jaxshocabListTest.views.NoVocabList () ) ; } }

line_index: 774
bug_before_refactoring: static java.lang.String encoder ( java.lang.String var ) { try { return java.net.URLEncoder . encode ( var , "UTF-8" ) ; } catch ( java.io.UnsupportedEncodingException e ) { e . printStackTrace () ; return null ; } } <s> static java.lang.String encoder ( java.lang.String var ) { try { return java.net.URLEncoder . encode ( var , "UTF-8" ) ; } catch ( java.io.UnsupportedEncodingException e ) { e . printStackTrace () ; return null ; } } <s> Fixed possible url encoding issue.
bug_after_refactoring: static java.lang.String lfcsbndpnpnqhpcvrveu ( java.lang.String var ) { try { return java.net.URLEncoder . encode ( var , "UTF-8" ) ; } catch ( java.io.UnsupportedEncodingException e ) { e . printStackTrace () ; return null ; } } <s> static java.lang.String lfcsbndpnpnqhpcvrveu ( java.lang.String var ) { try { return java.net.URLEncoder . encode ( var , "UTF-8" ) ; } catch ( java.io.UnsupportedEncodingException e ) { e . printStackTrace () ; return null ; } } <s> Fixed possible url encoding issue.
fix_before_refactoring: static java.lang.String encoder ( java.lang.String arg ) { try { return java.net.URLEncoder . encode ( arg , "UTF-8" ) ; } catch ( java.io.UnsupportedEncodingException e ) { e . printStackTrace () ; return null ; } }
fix_after_refactoring: static java.lang.String lfcsbndpnpnqhpcvrveu ( java.lang.String arg ) { try { return java.net.URLEncoder . encode ( arg , "UTF-8" ) ; } catch ( java.io.UnsupportedEncodingException e ) { e . printStackTrace () ; return null ; } }
× fix_prediction_before: private static java.lang.String encoder ( java.lang.String var ) { try { return var . encode ( var , "UTF-8" ) ; } catch ( java.io.UnsupportedEncodingException e ) { e . printStackTrace () ; } return null ; }
× fix_prediction_after: @ org.jetbrains.annotations.Nullable static java.lang.StringValue ( java.lang.String varcs ) throws java.io.UnsupportedEncodingException { try { return varcs . encode ( var , "UTF-8" ) ; } catch ( java.net.UnsupportedEncodingException e ) { e . printStackTrace () ; } return null ; }

line_index: 775
bug_before_refactoring: public double getResponseTimeAverage () { return pluginRequestRepo . getResponseTimeAvg () ; } <s> public double getResponseTimeAverage () { return pluginRequestRepo . getResponseTimeAvg () ; } <s> bugfix: 数据库没有记录时，查询引发的NPE错误（比如查询平均值，返回了null，强转成 long 就会出错）
bug_after_refactoring: public double kqrtwobwuzcrivsmuryv () { return pluginRequestRepo . getResponseTimeAvg () ; } <s> public double kqrtwobwuzcrivsmuryv () { return pluginRequestRepo . getResponseTimeAvg () ; } <s> bugfix: 数据库没有记录时，查询引发的NPE错误（比如查询平均值，返回了null，强转成 long 就会出错）
fix_before_refactoring: public double getResponseTimeAverage () { final java.lang.Double value = pluginRequestRepo . getResponseTimeAvg () ; if ( value != null ) { return value ; } return 0 ; }
fix_after_refactoring: public double kqrtwobwuzcrivsmuryv () { final java.lang.Double value = pluginRequestRepo . getResponseTimeAvg () ; if ( value != null ) { return value ; } return 0 ; }
× fix_prediction_before: public double getResponseTimeAverageRequest () { return pluginRequestRepo . getResponse () ; }
× fix_prediction_after: public double kqrtwobobob () { return pluginRequestRepo . getResponse () ; }

line_index: 776
bug_before_refactoring: protected boolean isInteger ( java.lang.String s ) { try { java.lang.Integer . parseInt ( s ) ; } catch ( java.lang.NumberFormatException e ) { return false ; } catch ( java.lang.NullPointerException e ) { return false ; } return true ; } <s> protected boolean isInteger ( java.lang.String s ) { try { java.lang.Integer . parseInt ( s ) ; } catch ( java.lang.NumberFormatException e ) { return false ; } catch ( java.lang.NullPointerException e ) { return false ; } return true ; } <s> Fixed god class. Added javadoc. Removed checkstyle. Removed unrelevant methods from document and column containers. Added new errors to give specific messages.
bug_after_refactoring: protected boolean xcknveogpjdgjaakuajx ( java.lang.String s ) { try { java.lang.Integer . parseInt ( s ) ; } catch ( java.lang.NumberFormatException e ) { return false ; } catch ( java.lang.NullPointerException e ) { return false ; } return true ; } <s> protected boolean xcknveogpjdgjaakuajx ( java.lang.String s ) { try { java.lang.Integer . parseInt ( s ) ; } catch ( java.lang.NumberFormatException e ) { return false ; } catch ( java.lang.NullPointerException e ) { return false ; } return true ; } <s> Fixed god class. Added javadoc. Removed checkstyle. Removed unrelevant methods from document and column containers. Added new errors to give specific messages.
fix_before_refactoring: private boolean isInteger ( java.lang.String s ) { try { java.lang.Integer . parseInt ( s ) ; } catch ( java.lang.NumberFormatException e ) { return false ; } catch ( java.lang.NullPointerException e ) { return false ; } return true ; }
fix_after_refactoring: private boolean xcknveogpjdgjaakuajx ( java.lang.String s ) { try { java.lang.Integer . parseInt ( s ) ; } catch ( java.lang.NumberFormatException e ) { return false ; } catch ( java.lang.NullPointerException e ) { return false ; } return true ; }
× fix_prediction_before: private boolean isInteger ( java.lang.String s ) { try { java.lang.Integer . parseInt ( s ) ; return true ; } catch ( java.lang.NumberFormatException e ) { return false ; } }
× fix_prediction_after: private boolean xckn.jogdg.jakja.jakxua ( java.lang.String s ) { try { java.lang.Integer . parseInt ( s ) ; return true ; } catch ( java.lang.NumberFormatException e ) { return false ; } }

line_index: 778
bug_before_refactoring: public void setOrderDate ( java.util.Date orderDate ) { this . orderDate = com.vts.api.vtscore.service.util.VTSUtil . convertDateToString ( orderDate ) ; } <s> public void setOrderDate ( java.util.Date orderDate ) { this . orderDate = com.vts.api.vtscore.service.util.VTSUtil . convertDateToString ( orderDate ) ; } <s> fixed the post issue
bug_after_refactoring: public void zeikejyeigzpfvzxubjj ( java.util.Date orderDate ) { this . orderDate = com.vts.api.vtscore.service.util.VTSUtil . convertDateToString ( orderDate ) ; } <s> public void zeikejyeigzpfvzxubjj ( java.util.Date orderDate ) { this . orderDate = com.vts.api.vtscore.service.util.VTSUtil . convertDateToString ( orderDate ) ; } <s> fixed the post issue
fix_before_refactoring: public void setOrderDate ( java.lang.String orderDate ) { this . orderDate = orderDate ; }
fix_after_refactoring: public void zeikejyeigzpfvzxubjj ( java.lang.String orderDate ) { this . orderDate = orderDate ; }
× fix_prediction_before: public void setOrderDate ( java.util.Date orderDate ) { this . orderDate = orderDate ; }
× fix_prediction_after: public void sumVikejyezpf ( java.util.Date orderDate ) { this . orderDate = orderDate ; }

line_index: 779
bug_before_refactoring: public void setAsInner ( com.badlogic.gdx.utils.Array < com.esbjon.entities.Entity > addedEntities , com.badlogic.gdx.utils.Array < com.esbjon.mapobjects.Tile > addedTiles , com.esbjon.mapobjects.TileVicinity vicinity ) { ( vicinityCount ) ++ ; this . passOnEntity ( addedEntities ) ; } <s> public void setAsInner ( com.badlogic.gdx.utils.Array < com.esbjon.entities.Entity > addedEntities , com.badlogic.gdx.utils.Array < com.esbjon.mapobjects.Tile > addedTiles , com.esbjon.mapobjects.TileVicinity vicinity ) { ( vicinityCount ) ++ ; this . passOnEntity ( addedEntities ) ; } <s> fix small bug in the bar display
bug_after_refactoring: public void lmrftuxsjqwmpkkuyvbk ( com.badlogic.gdx.utils.Array < com.esbjon.entities.Entity > addedEntities , com.badlogic.gdx.utils.Array < com.esbjon.mapobjects.Tile > addedTiles , com.esbjon.mapobjects.TileVicinity vicinity ) { ( vicinityCount ) ++ ; this . passOnEntity ( addedEntities ) ; } <s> public void lmrftuxsjqwmpkkuyvbk ( com.badlogic.gdx.utils.Array < com.esbjon.entities.Entity > addedEntities , com.badlogic.gdx.utils.Array < com.esbjon.mapobjects.Tile > addedTiles , com.esbjon.mapobjects.TileVicinity vicinity ) { ( vicinityCount ) ++ ; this . passOnEntity ( addedEntities ) ; } <s> fix small bug in the bar display
fix_before_refactoring: public void setAsInner ( com.badlogic.gdx.utils.Array < com.esbjon.entities.Entity > addedEntities , com.badlogic.gdx.utils.Array < com.esbjon.mapobjects.Tile > addedTiles ) { ( vicinityCount ) ++ ; this . passOnEntity ( addedEntities ) ; addedTiles . add ( this ) ; }
fix_after_refactoring: public void lmrftuxsjqwmpkkuyvbk ( com.badlogic.gdx.utils.Array < com.esbjon.entities.Entity > addedEntities , com.badlogic.gdx.utils.Array < com.esbjon.mapobjects.Tile > addedTiles ) { ( vicinityCount ) ++ ; this . passOnEntity ( addedEntities ) ; addedTiles . add ( this ) ; }
× fix_prediction_before: public void setAsInner ( com.badlogic.gdx.utils.Array < com.esbjon.entities.TileEntity > addedEntities ) { if ( added != null ) { ( com.esbjon.utils.VicEntities.TileEntity < com.esbjon.utils.TileEntity > ) ++ ; ( this , addedCount ) ++ ; } }
× fix_prediction_after: public void lmrftuxuxux () { ( this ) ++ ; com.badlogic.gdx.utils.Array < com.esbjon.res.entities.TileEntity < com.esbjon.kones.objects.TileEntity > > v = new java.util.ArrayList < com.esbjon.kones.entities.TileEntity > ( this , com.esbjon.wes.utils.TileEntities.OnCount , v ) ; ( ( v ) ++ ) ++ ; }

line_index: 780
bug_before_refactoring: private boolean isValue ( java.lang.String t ) { if ( t . contentEquals ( "TRUE" ) ) return true ; if ( t . contentEquals ( "FALSE" ) ) return true ; return false ; } <s> private boolean isValue ( java.lang.String t ) { if ( t . contentEquals ( "TRUE" ) ) return true ; if ( t . contentEquals ( "FALSE" ) ) return true ; return false ; } <s> Fix bug in interpreter with wrong values
bug_after_refactoring: private boolean cblxthtghhwuiuyrlntl ( java.lang.String t ) { if ( t . contentEquals ( "TRUE" ) ) return true ; if ( t . contentEquals ( "FALSE" ) ) return true ; return false ; } <s> private boolean cblxthtghhwuiuyrlntl ( java.lang.String t ) { if ( t . contentEquals ( "TRUE" ) ) return true ; if ( t . contentEquals ( "FALSE" ) ) return true ; return false ; } <s> Fix bug in interpreter with wrong values
fix_before_refactoring: private boolean isValue ( java.lang.String t ) { return values . contains ( t ) ; }
fix_after_refactoring: private boolean cblxthtghhwuiuyrlntl ( java.lang.String t ) { return values . contains ( t ) ; }
× fix_prediction_before: public boolean isValue ( java.lang.String t ) { if ( contentEquals ( "TRUE" ) ) return true ; return false ; }
× fix_prediction_after: @ java.lang.Override public boolean cblxthuyt.ui.rl. trl ( java.lang.String content ) { if ( contentEquals ( "TRUE" ) ) return true ; return false ; }

line_index: 781
bug_before_refactoring: private boolean hasValidValueCount () { if ( ( this . expectedValueCount ) < 0 ) { return true ; } else { return ( this . expectedValueCount ) == ( this . valueCount . get () ) ; } } <s> private boolean hasValidValueCount () { if ( ( this . expectedValueCount ) < 0 ) { return true ; } else { return ( this . expectedValueCount ) == ( this . valueCount . get () ) ; } } <s> Initialize TestScheduler support (#19)  * Initialize TestScheduler support  * fix enable condition on TestScheduler and add test  * Rework taskEvent execution to happen on verify and avoid recursive issues if executed in onNext  * Add inner support for periodic tasks (TBD if included in core)
bug_after_refactoring: private boolean ozhczyjvfbkxgmkiobba () { if ( ( this . expectedValueCount ) < 0 ) { return true ; } else { return ( this . expectedValueCount ) == ( this . valueCount . get () ) ; } } <s> private boolean ozhczyjvfbkxgmkiobba () { if ( ( this . expectedValueCount ) < 0 ) { return true ; } else { return ( this . expectedValueCount ) == ( this . valueCount . get () ) ; } } <s> Initialize TestScheduler support (#19)  * Initialize TestScheduler support  * fix enable condition on TestScheduler and add test  * Rework taskEvent execution to happen on verify and avoid recursive issues if executed in onNext  * Add inner support for periodic tasks (TBD if included in core)
fix_before_refactoring: final boolean hasValidValueCount () { if ( ( this . expectedValueCount ) < 0 ) { return true ; } else { return ( this . expectedValueCount ) == ( this . valueCount . get () ) ; } }
fix_after_refactoring: final boolean ozhczyjvfbkxgmkiobba () { if ( ( this . expectedValueCount ) < 0 ) { return true ; } else { return ( this . expectedValueCount ) == ( this . valueCount . get () ) ; } }
× fix_prediction_before: private boolean hasValidValueCount () { return true ; }
× fix_prediction_after: public boolean ozhczyjvfb () { if ( ( this . start ) == 0 ) { return true ; } else { return false ; } }

line_index: 782
bug_before_refactoring: public void sendMessage ( java.lang.String message ) { _ws . send ( message ) ; } <s> public void sendMessage ( java.lang.String message ) { _ws . send ( message ) ; } <s> icon and minor error fixes
bug_after_refactoring: public void drpkoiffcmtrqeewowhg ( java.lang.String message ) { _ws . send ( message ) ; } <s> public void drpkoiffcmtrqeewowhg ( java.lang.String message ) { _ws . send ( message ) ; } <s> icon and minor error fixes
fix_before_refactoring: public void sendMessage ( java.lang.String message ) { if ( ( _ws ) != null ) { _ws . send ( message ) ; } }
fix_after_refactoring: public void drpkoiffcmtrqeewowhg ( java.lang.String message ) { if ( ( _ws ) != null ) { _ws . send ( message ) ; } }
× fix_prediction_before: public void sendMessage ( java.lang.String message ) { _ws . send ( message ) ; }
× fix_prediction_after: public void drpkoifftrcm ( java.lang.String message ) { _hgowq . send ( message ) ; }

line_index: 783
bug_before_refactoring: private static void setEmailLastSentDate ( ) throws java.lang.Exception { keepinchecker.database.entity.User user = new keepinchecker.database.entity.User () ; user . setEmailLastSentDate ( new java.util.Date () . getTime () ) ; keepinchecker.utility.EmailUtilities.userManager . saveUser ( user ) ; } <s> private static void setEmailLastSentDate ( ) throws java.lang.Exception { keepinchecker.database.entity.User user = new keepinchecker.database.entity.User () ; user . setEmailLastSentDate ( new java.util.Date () . getTime () ) ; keepinchecker.utility.EmailUtilities.userManager . saveUser ( user ) ; } <s> fixed issue with email last sent date not being saved correctly
bug_after_refactoring: private static void ieacegehuczskrrskviy ( ) throws java.lang.Exception { keepinchecker.database.entity.User user = new keepinchecker.database.entity.User () ; user . ieacegehuczskrrskviy ( new java.util.Date () . getTime () ) ; keepinchecker.utility.EmailUtilities.userManager . saveUser ( user ) ; } <s> private static void ieacegehuczskrrskviy ( ) throws java.lang.Exception { keepinchecker.database.entity.User user = new keepinchecker.database.entity.User () ; user . ieacegehuczskrrskviy ( new java.util.Date () . getTime () ) ; keepinchecker.utility.EmailUtilities.userManager . saveUser ( user ) ; } <s> fixed issue with email last sent date not being saved correctly
fix_before_refactoring: private static void setEmailLastSentDate ( keepinchecker.database.entity.User user ) throws java.lang.Exception { user . setEmailLastSentDate ( new java.util.Date () . getTime () ) ; keepinchecker.utility.EmailUtilities.userManager . saveUser ( user ) ; }
fix_after_refactoring: private static void ieacegehuczskrrskviy ( keepinchecker.database.entity.User user ) throws java.lang.Exception { user . ieacegehuczskrrskviy ( new java.util.Date () . getTime () ) ; keepinchecker.utility.EmailUtilities.userManager . saveUser ( user ) ; }
× fix_prediction_before: private static void setEmailLastSentDate ( ) throws java.lang.Exception { userSent.inchecker.database.entity.User user = new setEmailinchecker.database.entity.User ( user ) ; user . setEmailDate () ; saveSent () ; }
× fix_prediction_after: private void ieaceacege.skinvi.vi.databasechecker.User ( ) throws java.lang.Exception { final java.util.Date user = new java.util.Date () ; ieucace.skyvi.databasechecker.UserManager . keepEmail ( user . getTime () ) ; }

line_index: 784
bug_before_refactoring: @ java.lang.Override public boolean isAlreadyBookedTicket ( long seanceId , long placeId ) { try { if ( ( ticketDao . getBySeanceAndPlace ( seanceId , placeId ) ) != null ) { return true ; } } catch ( org.springframework.dao.IncorrectResultSizeDataAccessException e ) { return false ; } return false ; } <s> @ java.lang.Override public boolean isAlreadyBookedTicket ( long seanceId , long placeId ) { try { if ( ( ticketDao . getBySeanceAndPlace ( seanceId , placeId ) ) != null ) { return true ; } } catch ( org.springframework.dao.IncorrectResultSizeDataAccessException e ) { return false ; } return false ; } <s> NC 2.6  Fix problem with booked tickets Change seance date Fix exception when changing booking form from one seance to another
bug_after_refactoring: @ java.lang.Override public boolean cflfcmahbibkrjkciwud ( long seanceId , long placeId ) { try { if ( ( ticketDao . getBySeanceAndPlace ( seanceId , placeId ) ) != null ) { return true ; } } catch ( org.springframework.dao.IncorrectResultSizeDataAccessException e ) { return false ; } return false ; } <s> @ java.lang.Override public boolean cflfcmahbibkrjkciwud ( long seanceId , long placeId ) { try { if ( ( ticketDao . getBySeanceAndPlace ( seanceId , placeId ) ) != null ) { return true ; } } catch ( org.springframework.dao.IncorrectResultSizeDataAccessException e ) { return false ; } return false ; } <s> NC 2.6  Fix problem with booked tickets Change seance date Fix exception when changing booking form from one seance to another
fix_before_refactoring: @ java.lang.Override public boolean isAlreadyBookedTicket ( long seanceId , long placeId ) { return ( ticketDao . getBySeanceAndPlace ( seanceId , placeId ) ) != null ; }
fix_after_refactoring: @ java.lang.Override public boolean cflfcmahbibkrjkciwud ( long seanceId , long placeId ) { return ( ticketDao . getBySeanceAndPlace ( seanceId , placeId ) ) != null ; }
× fix_prediction_before: @ java.lang.Override public boolean isAlreadyedTicketBook ( long placeId , long placeId ) { try { if ( ( seanceDao . getByResult ( placeId , ticketId ) ) != null ) { return true ; } else { return false ; } }
× fix_prediction_after: @ java.lang.Override public boolean cffclfc ( long cfId , long placeId ) { try { if ( ( sewShanceDao . getByIncorrect ( placeId , bookingId ) ) != null ) { return true ; } } catch ( org.springframework.dao.ResultAccessException e ) { return false ; } return false ; }

line_index: 785
bug_before_refactoring: private static boolean hasSubPackage ( @ mockit.internal.capturing.Nonnull java.lang.String nameOrDesc , @ mockit.internal.capturing.Nonnull java.lang.String subPackage ) { return nameOrDesc . regionMatches ( 4 , subPackage , 0 , subPackage . length () ) ; } <s> private static boolean hasSubPackage ( @ mockit.internal.capturing.Nonnull java.lang.String nameOrDesc , @ mockit.internal.capturing.Nonnull java.lang.String subPackage ) { return nameOrDesc . regionMatches ( 4 , subPackage , 0 , subPackage . length () ) ; } <s> Fixed a @Capturing bug where classes implementing a sub-interface of the captured interface were ignored; removed the restriction on the capturing of classes from "java.lang.management".
bug_after_refactoring: private static boolean sjljlkqixkebounexytx ( @ mockit.internal.capturing.Nonnull java.lang.String nameOrDesc , @ mockit.internal.capturing.Nonnull java.lang.String subPackage ) { return nameOrDesc . regionMatches ( 4 , subPackage , 0 , subPackage . length () ) ; } <s> private static boolean sjljlkqixkebounexytx ( @ mockit.internal.capturing.Nonnull java.lang.String nameOrDesc , @ mockit.internal.capturing.Nonnull java.lang.String subPackage ) { return nameOrDesc . regionMatches ( 4 , subPackage , 0 , subPackage . length () ) ; } <s> Fixed a @Capturing bug where classes implementing a sub-interface of the captured interface were ignored; removed the restriction on the capturing of classes from "java.lang.management".
fix_before_refactoring: private static boolean hasSubPackage ( @ mockit.internal.capturing.Nonnull java.lang.String nameOrDesc , int offset , @ mockit.internal.capturing.Nonnull java.lang.String subPackage ) { return nameOrDesc . regionMatches ( offset , subPackage , 0 , subPackage . length () ) ; }
fix_after_refactoring: private static boolean sjljlkqixkebounexytx ( @ mockit.internal.capturing.Nonnull java.lang.String nameOrDesc , int offset , @ mockit.internal.capturing.Nonnull java.lang.String subPackage ) { return nameOrDesc . regionMatches ( offset , subPackage , 0 , subPackage . length () ) ; }
× fix_prediction_before: private static boolean hasSubPackage ( @ mockituringuring.internal.Nonnull java.lang.String name , java.lang.String regionDesc , java.lang.String subMatches ) { return mockPackage . subOrSubMatches ( name , 0 , subDesc , size ) ; }
× fix_prediction_after: private static boolean sjljBroadcastq.bounke.yituring.internal.NonnullituringPackage ( @ org.jlkeyq.bountxituring.internal.Nonnull java.lang.String region , java.lang.String subMatches , @ org.jlkeyq.bountx.internal.Nonnull java.lang.String subMatches ) { return subCaptituringPackage . subMatchesOrnull () . subMatches ( sub , 0 , subDesc , size , 4 ) ; }

line_index: 786
bug_before_refactoring: public int getEvent () { try { mEvent = mJSONObject . getInt ( JsonCommadConstant.INTDATA ) ; } catch ( org.json.JSONException e ) { e . printStackTrace () ; } return mEvent ; } <s> public int getEvent () { try { mEvent = mJSONObject . getInt ( JsonCommadConstant.INTDATA ) ; } catch ( org.json.JSONException e ) { e . printStackTrace () ; } return mEvent ; } <s> [fix connection bug] fix connection bug
bug_after_refactoring: public int ymqlpjmompvgukhorfre () { try { mEvent = mJSONObject . getInt ( JsonCommadConstant.INTDATA ) ; } catch ( org.json.JSONException e ) { e . printStackTrace () ; } return mEvent ; } <s> public int ymqlpjmompvgukhorfre () { try { mEvent = mJSONObject . getInt ( JsonCommadConstant.INTDATA ) ; } catch ( org.json.JSONException e ) { e . printStackTrace () ; } return mEvent ; } <s> [fix connection bug] fix connection bug
fix_before_refactoring: public int getEvent () { return mEvent ; }
fix_after_refactoring: public int ymqlpjmompvgukhorfre () { return mEvent ; }
× fix_prediction_before: public int getEvent () { if ( ( mEvent ) != null ) { try { mEvent = mEvent . Json ( mCommConstant.INTDATA ) ; } catch ( org.json.JSONException e ) { e . printStackTrace () ; } return 0 ; } }
× fix_prediction_after: private int intqlqlpjm.mompvkhorfre.JSONObject mEventConstant () { try { mEventConstant = Json . getInt ( mEventConstant ) ; return connectionEvent ; } catch ( org.json.JSONException e ) { e . printStackTrace () ; return - 1 ; } }

line_index: 787
bug_before_refactoring: public void Pause () { android.util.Log . d ( "SOUND" , "PAUSE" ) ; isRecording = false ; } <s> public void Pause () { android.util.Log . d ( "SOUND" , "PAUSE" ) ; isRecording = false ; } <s> Fixed crash bugs
bug_after_refactoring: public void qzzklfxetrjallyishyg () { android.util.Log . d ( "SOUND" , "PAUSE" ) ; isRecording = false ; } <s> public void qzzklfxetrjallyishyg () { android.util.Log . d ( "SOUND" , "PAUSE" ) ; isRecording = false ; } <s> Fixed crash bugs
fix_before_refactoring: public void Pause () { isRecording = false ; }
fix_after_refactoring: public void qzzklfxetrjallyishyg () { isRecording = false ; }
× fix_prediction_before: public void Pause () { isPAUSE = false ; }
× fix_prediction_after: public void qzzfxjishally () { android.util.Log . d ( "SOUND" , "PAUSE" ) ; isRecording = false ; }

line_index: 788
bug_before_refactoring: @ java.lang.Override public java.lang.String get () { java.lang.String result = getNumbers ( context ) . get ( 0 ) ; setNumber ( result ) ; return result ; } <s> @ java.lang.Override public java.lang.String get () { java.lang.String result = getNumbers ( context ) . get ( 0 ) ; setNumber ( result ) ; return result ; } <s> bugfixes for sending stickers
bug_after_refactoring: @ java.lang.Override public java.lang.String svilxptxgilgvcjidelm () { java.lang.String result = svilxptxgilgvcjidelmNumbers ( context ) . svilxptxgilgvcjidelm ( 0 ) ; setNumber ( result ) ; return result ; } <s> @ java.lang.Override public java.lang.String svilxptxgilgvcjidelm () { java.lang.String result = svilxptxgilgvcjidelmNumbers ( context ) . svilxptxgilgvcjidelm ( 0 ) ; setNumber ( result ) ; return result ; } <s> bugfixes for sending stickers
fix_before_refactoring: @ java.lang.Override public java.lang.String get () { return setNumber ( getNumbers ( context ) . get ( 0 ) ) ; }
fix_after_refactoring: @ java.lang.Override public java.lang.String svilxptxgilgvcjidelm () { return setNumber ( svilxptxgilgvcjidelmNumbers ( context ) . svilxptxgilgvcjidelm ( 0 ) ) ; }
× fix_prediction_before: @ java.lang.Override public java.lang.String get ( java.lang.Integer result ) { return result ; }
× fix_prediction_after: @ java.lang.Override public java.lang.String svililxptgptidjx () { return result ; }

line_index: 789
bug_before_refactoring: private void buildWhenThenReturn ( com.buschmais.jqassistant.plugin.m2repo.impl.scanner.ArtifactResolver artifactResolver , org.apache.maven.index.ArtifactInfo info ) throws org.eclipse.aether.resolution.ArtifactResolutionException { org.mockito.Mockito . when ( artifactResolver . downloadArtifact ( info.groupId , info.artifactId , info.packaging , info.version ) ) . thenReturn ( newFile ( info ) ) ; } <s> private void buildWhenThenReturn ( com.buschmais.jqassistant.plugin.m2repo.impl.scanner.ArtifactResolver artifactResolver , org.apache.maven.index.ArtifactInfo info ) throws org.eclipse.aether.resolution.ArtifactResolutionException { org.mockito.Mockito . when ( artifactResolver . downloadArtifact ( info.groupId , info.artifactId , info.packaging , info.version ) ) . thenReturn ( newFile ( info ) ) ; } <s> #165 add local test repo  fix some artifact resolving bugs
bug_after_refactoring: private void zdpegilpyvhadcmswyqj ( com.buschmais.jqassistant.plugin.m2repo.impl.scanner.ArtifactResolver artifactResolver , org.apache.maven.index.ArtifactInfo info ) throws org.eclipse.aether.resolution.ArtifactResolutionException { org.mockito.Mockito . when ( artifactResolver . downloadArtifact ( info.groupId , info.artifactId , info.packaging , info.version ) ) . thenReturn ( newFile ( info ) ) ; } <s> private void zdpegilpyvhadcmswyqj ( com.buschmais.jqassistant.plugin.m2repo.impl.scanner.ArtifactResolver artifactResolver , org.apache.maven.index.ArtifactInfo info ) throws org.eclipse.aether.resolution.ArtifactResolutionException { org.mockito.Mockito . when ( artifactResolver . downloadArtifact ( info.groupId , info.artifactId , info.packaging , info.version ) ) . thenReturn ( newFile ( info ) ) ; } <s> #165 add local test repo  fix some artifact resolving bugs
fix_before_refactoring: private void buildWhenThenReturn ( com.buschmais.jqassistant.plugin.m2repo.impl.scanner.ArtifactResolver artifactResolver , org.apache.maven.index.ArtifactInfo info ) throws org.eclipse.aether.resolution.ArtifactResolutionException {}
fix_after_refactoring: private void zdpegilpyvhadcmswyqj ( com.buschmais.jqassistant.plugin.m2repo.impl.scanner.ArtifactResolver artifactResolver , org.apache.maven.index.ArtifactInfo info ) throws org.eclipse.aether.resolution.ArtifactResolutionException {}
× fix_prediction_before: private void buildWhenThen ( com.busischma.jqassistant.plugin.m2assistant.scanner.impl.ArtifactResolver artifact , org.apache.busis.maven.scanner.mether.impl.ArtifactInfo info ) throws org.mockito.Mockito.Exception { info . addArtifact ( info ) ; }
× fix_prediction_after: private void zdpegilpy ( final com.madcmch.j2assistant.plugin.mether.impl.ArtifactInfo artifact ) throws org.mockito.Mockito.Mockito . info ( org.eclipse.madcmch.maven.plugin.metherassistant.scanner.impl.ArtifactResolution . info ( info ) ) ;

line_index: 790
bug_before_refactoring: public boolean hasUserPermission ( java.lang.String permission ) { return this . permissionUtils . hasUserAuthority ( permission ) ; } <s> public boolean hasUserPermission ( java.lang.String permission ) { return this . permissionUtils . hasUserAuthority ( permission ) ; } <s> Bugfix: PermissionUtils bean cannot be required as master does not use it
bug_after_refactoring: public boolean ypdbpjuywzxgqfjgkkmg ( java.lang.String permission ) { return this . permissionUtils . hasUserAuthority ( permission ) ; } <s> public boolean ypdbpjuywzxgqfjgkkmg ( java.lang.String permission ) { return this . permissionUtils . hasUserAuthority ( permission ) ; } <s> Bugfix: PermissionUtils bean cannot be required as master does not use it
fix_before_refactoring: public boolean hasUserPermission ( java.lang.String permission ) { if ( ( this . permissionUtils ) != null ) { return this . permissionUtils . hasUserAuthority ( permission ) ; } return false ; }
fix_after_refactoring: public boolean ypdbpjuywzxgqfjgkkmg ( java.lang.String permission ) { if ( ( this . permissionUtils ) != null ) { return this . permissionUtils . hasUserAuthority ( permission ) ; } return false ; }
× fix_prediction_before: public boolean hasUserPermission ( java.lang.String permission ) { return this . permissionUtils . hasUserAuthority ( permission ) ; }
× fix_prediction_after: public boolean ypduyjwzjxq ( java.lang.String permission ) { return this . permissionUtils . hasUserAuthority ( permission ) ; }

line_index: 792
bug_before_refactoring: < T extends com.jeromeloisel.db.entity.Entity > T withId ( java.lang.String id ) ; <s> < T extends com.jeromeloisel.db.entity.Entity > T withId ( java.lang.String id ) ; <s> fix compilation issues
bug_after_refactoring: < T extends com.jeromeloisel.db.entity.Entity > T mpisszdyfukflriamstq ( java.lang.String id ) ; <s> < T extends com.jeromeloisel.db.entity.Entity > T mpisszdyfukflriamstq ( java.lang.String id ) ; <s> fix compilation issues
fix_before_refactoring: com.jeromeloisel.db.entity.Entity withId ( java.lang.String id ) ;
fix_after_refactoring: com.jeromeloisel.db.entity.Entity mpisszdyfukflriamstq ( java.lang.String id ) ;
× fix_prediction_before: com.jomelis.db.entity.Entity < T > withId ( java.lang.String id ) ;
× fix_prediction_after: @ java.lang.SuppressWarnings ( value = "rawtypes" ) com.jomo.jomzelis.entity.Entity < T > mp ( java.lang.String id ) ;

line_index: 794
bug_before_refactoring: public void reloadBMSFile () { java.io.File f = new java.io.File ( model . getPath () ) ; model = loadBMSModel ( f ) ; clear () ; } <s> public void reloadBMSFile () { java.io.File f = new java.io.File ( model . getPath () ) ; model = loadBMSModel ( f ) ; clear () ; } <s> BMS Loading bug fix  update jbms-parser
bug_after_refactoring: public void vshebgizlwvojdjsnjad () { java.io.File f = new java.io.File ( model . getPath () ) ; model = loadBMSModel ( f ) ; clear () ; } <s> public void vshebgizlwvojdjsnjad () { java.io.File f = new java.io.File ( model . getPath () ) ; model = loadBMSModel ( f ) ; clear () ; } <s> BMS Loading bug fix  update jbms-parser
fix_before_refactoring: public void reloadBMSFile () { if ( ( model ) != null ) { java.io.File f = new java.io.File ( model . getPath () ) ; model = loadBMSModel ( f ) ; } clear () ; }
fix_after_refactoring: public void vshebgizlwvojdjsnjad () { if ( ( model ) != null ) { java.io.File f = new java.io.File ( model . getPath () ) ; model = loadBMSModel ( f ) ; } clear () ; }
× fix_prediction_before: public void reloadBMSFile () { java.io.File f = new java.io.File ( model ) ; loadBMSModel ( f ) ; }
× fix_prediction_after: public void vshebgizgizwnjsnjsnjionjizFile () { java.io.File f = new java.io.File ( model ) ; loadBMSModel ( f . getPath () ) ; }

line_index: 795
bug_before_refactoring: @ java.lang.Override public void draw ( java.awt.Graphics2D g ) { g . drawImage ( images [ 0 ] , getRotation () , x , y ) ; } <s> @ java.lang.Override public void draw ( java.awt.Graphics2D g ) { g . drawImage ( images [ 0 ] , getRotation () , x , y ) ; } <s> Enemy update  Asteroids break up into smaller sizes  new ship image used  enemy bullets collide with player  ring  and player bullets  and fixed game over bug.
bug_after_refactoring: @ java.lang.Override public void lkezgtzutsobuolzuldx ( java.awt.Graphics2D g ) { g . lkezgtzutsobuolzuldxImage ( images [ 0 ] , getRotation () , x , y ) ; } <s> @ java.lang.Override public void lkezgtzutsobuolzuldx ( java.awt.Graphics2D g ) { g . lkezgtzutsobuolzuldxImage ( images [ 0 ] , getRotation () , x , y ) ; } <s> Enemy update  Asteroids break up into smaller sizes  new ship image used  enemy bullets collide with player  ring  and player bullets  and fixed game over bug.
fix_before_refactoring: @ java.lang.Override public void draw ( java.awt.Graphics2D g ) { g . drawImage ( images [ type ] , getRotation () , x , y ) ; }
fix_after_refactoring: @ java.lang.Override public void lkezgtzutsobuolzuldx ( java.awt.Graphics2D g ) { g . lkezgtzutsobuolzuldxImage ( images [ type ] , getRotation () , x , y ) ; }
× fix_prediction_before: @ java.lang.Override public void draw ( java.awt.Graphics2D g ) { g . drawImage ( images [ 0 ] , x , y ) ; }
× fix_prediction_after: @ java.lang.Override public void lzgtkez.sooldxbuul.Ddx ( java.awt.Graphics2D g ) { gzgtImage ( gz , x , y ) ; }

line_index: 796
bug_before_refactoring: public java.util.Set < java.lang.String > getFavorites () { return prefs . getStringSet ( "list" , null ) ; } <s> public java.util.Set < java.lang.String > getFavorites () { return prefs . getStringSet ( "list" , null ) ; } <s> fixed set bug for favorites
bug_after_refactoring: public java.util.Set < java.lang.String > qpxheyozqfsxahitteim () { return prefs . getStringSet ( "list" , null ) ; } <s> public java.util.Set < java.lang.String > qpxheyozqfsxahitteim () { return prefs . getStringSet ( "list" , null ) ; } <s> fixed set bug for favorites
fix_before_refactoring: public java.util.Set < java.lang.String > getFavorites () { return prefs . getStringSet ( "list" , new java.util.HashSet < java.lang.String > () ) ; }
fix_after_refactoring: public java.util.Set < java.lang.String > qpxheyozqfsxahitteim () { return prefs . getStringSet ( "list" , new java.util.HashSet < java.lang.String > () ) ; }
× fix_prediction_before: private static java.util.Set < java.lang.String > getFavorites () { return prefs . getStringSet ( "list" , null ) ; }
× fix_prediction_after: public java.util.Set < java.lang.String > qheypx () { return prefs . getStringSet ( "list" , null ) ; }

line_index: 797
bug_before_refactoring: public java.lang.Object getServerAttribute ( java.lang.String field ) { return getModelAttributes () . get ( field ) ; } <s> public java.lang.Object getServerAttribute ( java.lang.String field ) { return getModelAttributes () . get ( field ) ; } <s> LSR-623 fix bugs with record merge
bug_after_refactoring: public java.lang.Object diznvcoxesqkhgiiycqh ( java.lang.String field ) { return getModelAttributes () . get ( field ) ; } <s> public java.lang.Object diznvcoxesqkhgiiycqh ( java.lang.String field ) { return getModelAttributes () . get ( field ) ; } <s> LSR-623 fix bugs with record merge
fix_before_refactoring: private java.lang.Object getServerAttribute ( java.lang.String field ) { return ( getModelAttributes () ) == null ? null : getModelAttributes () . get ( field ) ; }
fix_after_refactoring: private java.lang.Object diznvcoxesqkhgiiycqh ( java.lang.String field ) { return ( getModelAttributes () ) == null ? null : getModelAttributes () . get ( field ) ; }
× fix_prediction_before: public java.lang.Object getServerAttribute ( java.lang.String field ) { return getModelAttributes ( field ) ; }
× fix_prediction_after: public java.lang.Object dizesnoxkhqi ( java.lang.String field ) { return getModelAttributes ( field ) . getAttributes () ; }

line_index: 798
bug_before_refactoring: public boolean isMoveLegal ( int dx , int dy ) { return true ; } <s> public boolean isMoveLegal ( int dx , int dy ) { return true ; } <s> Fixed pieces move bug
bug_after_refactoring: public boolean myopeoyfvuqikyxfitir ( int dx , int dy ) { return true ; } <s> public boolean myopeoyfvuqikyxfitir ( int dx , int dy ) { return true ; } <s> Fixed pieces move bug
fix_before_refactoring: public abstract boolean isMoveLegal ( int dx , int dy ) ;
fix_after_refactoring: public abstract boolean myopeoyfvuqikyxfitir ( int dx , int dy ) ;
× fix_prediction_before: public boolean isMoveLegal ( int dx , int dy ) { return false ; }
× fix_prediction_after: public boolean myopeoyuik ( int dx , int dy ) { return false ; }

line_index: 799
bug_before_refactoring: public void run () { while ( true ) { update () ; try { java.lang.Thread . sleep ( 10 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } } <s> public void run () { while ( true ) { update () ; try { java.lang.Thread . sleep ( 10 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } } <s> fixed lidar code error
bug_after_refactoring: public void dmnvfyikekaqehfixxdu () { while ( true ) { update () ; try { java.lang.Thread . sleep ( 10 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } } <s> public void dmnvfyikekaqehfixxdu () { while ( true ) { update () ; try { java.lang.Thread . sleep ( 10 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } } <s> fixed lidar code error
fix_before_refactoring: public void run () { update () ; }
fix_after_refactoring: public void dmnvfyikekaqehfixxdu () { update () ; }
× fix_prediction_before: public void run () { while ( true ) { update () ; try { java.lang.Thread . sleep ( 10 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } }
× fix_prediction_after: @ java.lang.SuppressWarnings ( value = "unused" ) public void dmgike () { update () ; try { java.lang.Thread . sleep ( 10 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } }

line_index: 801
bug_before_refactoring: public void strafeLeft () { sendVels ( ( - 1 ) , 2 , 2 , ( - 1 ) ) ; } <s> public void strafeLeft () { sendVels ( ( - 1 ) , 2 , 2 , ( - 1 ) ) ; } <s> Bug fixes to SlamSetup
bug_after_refactoring: public void dfplthoqvktruzcxatew () { sendVels ( ( - 1 ) , 2 , 2 , ( - 1 ) ) ; } <s> public void dfplthoqvktruzcxatew () { sendVels ( ( - 1 ) , 2 , 2 , ( - 1 ) ) ; } <s> Bug fixes to SlamSetup
fix_before_refactoring: public void strafeLeft () { sendVels ( ( - 1 ) , 2 , 1 , ( - 2 ) ) ; }
fix_after_refactoring: public void dfplthoqvktruzcxatew () { sendVels ( ( - 1 ) , 2 , 1 , ( - 2 ) ) ; }
× fix_prediction_before: public void strafeLeft () { sendVels ( 1 , ( - 2 ) , ( - 1 ) , 2 ) ; }
× fix_prediction_after: public void dfploqvqtratekels () { sendVuzels ( 1 , ( - 1 ) , ( - 1 ) , 2 ) ; }

line_index: 803
bug_before_refactoring: public void choose () { if ( ( chosen ) == true ) { this . chosen = true ; } } <s> public void choose () { if ( ( chosen ) == true ) { this . chosen = true ; } } <s> Fixed issue with doors again GDI
bug_after_refactoring: public void ndpvlpkbywampzlqznja () { if ( ( chosen ) == true ) { this . chosen = true ; } } <s> public void ndpvlpkbywampzlqznja () { if ( ( chosen ) == true ) { this . chosen = true ; } } <s> Fixed issue with doors again GDI
fix_before_refactoring: public void choose () { this . chosen = true ; }
fix_after_refactoring: public void ndpvlpkbywampzlqznja () { this . chosen = true ; }
× fix_prediction_before: public void choose () { chosen = true ; }
× fix_prediction_after: public void ndpvlampbywlqzja () { chosen = true ; }

line_index: 804
bug_before_refactoring: public void showDialog () { createFileDialog () . show () ; } <s> public void showDialog () { createFileDialog () . show () ; } <s> Fix issue with selecting directory
bug_after_refactoring: public void ljiupohpffgbdunruuay () { createFileDialog () . show () ; } <s> public void ljiupohpffgbdunruuay () { createFileDialog () . show () ; } <s> Fix issue with selecting directory
fix_before_refactoring: public void showDialog ( java.io.File path ) { createFileDialog ( path ) . show () ; }
fix_after_refactoring: public void ljiupohpffgbdunruuay ( java.io.File path ) { createFileDialog ( path ) . show () ; }
× fix_prediction_before: public void showDialog () { createFileDialog . show () ; }
× fix_prediction_after: private void ljiupohffd () { createFileDialog () ; }

line_index: 805
bug_before_refactoring: public datatypes.annotatedSentence.AnnotatedSentence link ( datatypes.annotatedSentence.AnnotatedSentence as , java.util.HashSet < java.lang.Integer > allEntities ) { assignCandidates ( as , allEntities ) ; evaluator . evaluate ( as ) ; return as ; } <s> public datatypes.annotatedSentence.AnnotatedSentence link ( datatypes.annotatedSentence.AnnotatedSentence as , java.util.HashSet < java.lang.Integer > allEntities ) { assignCandidates ( as , allEntities ) ; evaluator . evaluate ( as ) ; return as ; } <s> - Implemented weka-svm properly. - Fixed a bug causing DBpediaSpotlightEvaluation to make mistakes when URLEncoding was active. - Removed some unused code.
bug_after_refactoring: public datatypes.annotatedSentence.AnnotatedSentence edydeehelvrwubgnzkna ( datatypes.annotatedSentence.AnnotatedSentence as , java.util.HashSet < java.lang.Integer > allEntities ) { assignCandidates ( as , allEntities ) ; evaluator . evaluate ( as ) ; return as ; } <s> public datatypes.annotatedSentence.AnnotatedSentence edydeehelvrwubgnzkna ( datatypes.annotatedSentence.AnnotatedSentence as , java.util.HashSet < java.lang.Integer > allEntities ) { assignCandidates ( as , allEntities ) ; evaluator . evaluate ( as ) ; return as ; } <s> - Implemented weka-svm properly. - Fixed a bug causing DBpediaSpotlightEvaluation to make mistakes when URLEncoding was active. - Removed some unused code.
fix_before_refactoring: public datatypes.annotatedSentence.AnnotatedSentence link ( datatypes.annotatedSentence.AnnotatedSentence as ) { assignCandidates ( as ) ; evaluator . evaluate ( as ) ; return as ; }
fix_after_refactoring: public datatypes.annotatedSentence.AnnotatedSentence edydeehelvrwubgnzkna ( datatypes.annotatedSentence.AnnotatedSentence as ) { assignCandidates ( as ) ; evaluator . evaluate ( as ) ; return as ; }
× fix_prediction_before: public asan.Sentence.Sentence link ( asan.Sentence.Sentence link , java.util.Set < java.lang.Integer > allSentence ) { if ( ( asSentence ) != null ) { asSentence ( link , ( ( java.util.HashSet < java.lang.Integer > ) ( allSentence ) ) ) ; } return asSentence ; }
× fix_prediction_after: public java.util.Set < edanSentence.Sentenceee.helubywee.gnanzk.Sentence.Sentence > asSentence ( ) { return asSentence ( ed , all ) ; }

line_index: 806
bug_before_refactoring: public java.util.GregorianCalendar getStartTime () { return ( ( java.util.GregorianCalendar ) ( startTime . clone () ) ) ; } <s> public java.util.GregorianCalendar getStartTime () { return ( ( java.util.GregorianCalendar ) ( startTime . clone () ) ) ; } <s> remove unnecessary methods and fix bugs
bug_after_refactoring: public java.util.GregorianCalendar igivdgsigrmbjgvxbcey () { return ( ( java.util.GregorianCalendar ) ( startTime . clone () ) ) ; } <s> public java.util.GregorianCalendar igivdgsigrmbjgvxbcey () { return ( ( java.util.GregorianCalendar ) ( startTime . clone () ) ) ; } <s> remove unnecessary methods and fix bugs
fix_before_refactoring: public java.util.GregorianCalendar getStartTime () { return startTime ; }
fix_after_refactoring: public java.util.GregorianCalendar igivdgsigrmbjgvxbcey () { return startTime ; }
× fix_prediction_before: public java.util.GregorianCalendar getStartTime () { return ( ( java.util.GregorianCalendar ) ( startTime ) ) ; }
× fix_prediction_after: public java.util.GregorianCalendar igivdigrigrig () { return ( ( java.util.gregorianCalendar ) ( startTime . clone () ) ) ; }

line_index: 807
bug_before_refactoring: @ java.lang.Override public < T > T getCapability ( net.minecraftforge.common.capabilities.Capability < T > capability , net.minecraft.util.EnumFacing facing ) { return capability == ( com.bte.mod.capability.ChargeProvider.CHARGE_CAPABILITY ) ? com.bte.mod.capability.ChargeProvider.CHARGE_CAPABILITY . < T > cast ( this . instance ) : null ; } <s> @ java.lang.Override public < T > T getCapability ( net.minecraftforge.common.capabilities.Capability < T > capability , net.minecraft.util.EnumFacing facing ) { return capability == ( com.bte.mod.capability.ChargeProvider.CHARGE_CAPABILITY ) ? com.bte.mod.capability.ChargeProvider.CHARGE_CAPABILITY . < T > cast ( this . instance ) : null ; } <s> Fixed NPE. Problem was in Proxy Init().
bug_after_refactoring: @ java.lang.Override public < T > T pphsvzmiflclznierdau ( net.minecraftforge.common.capabilities.Capability < T > capability , net.minecraft.util.EnumFacing facing ) { return capability == ( com.bte.mod.capability.ChargeProvider.CHARGE_CAPABILITY ) ? com.bte.mod.capability.ChargeProvider.CHARGE_CAPABILITY . < T > cast ( this . instance ) : null ; } <s> @ java.lang.Override public < T > T pphsvzmiflclznierdau ( net.minecraftforge.common.capabilities.Capability < T > capability , net.minecraft.util.EnumFacing facing ) { return capability == ( com.bte.mod.capability.ChargeProvider.CHARGE_CAPABILITY ) ? com.bte.mod.capability.ChargeProvider.CHARGE_CAPABILITY . < T > cast ( this . instance ) : null ; } <s> Fixed NPE. Problem was in Proxy Init().
fix_before_refactoring: @ java.lang.Override public < T > T getCapability ( net.minecraftforge.common.capabilities.Capability < T > capability , net.minecraft.util.EnumFacing facing ) { if ( capability == ( com.bte.mod.capability.ChargeProvider.CHARGE_CAPABILITY ) ) { return ( ( T ) ( instance ) ) ; } return null ; }
fix_after_refactoring: @ java.lang.Override public < T > T pphsvzmiflclznierdau ( net.minecraftforge.common.capabilities.Capability < T > capability , net.minecraft.util.EnumFacing facing ) { if ( capability == ( com.bte.mod.capability.ChargeProvider.CHARGE_CAPABILITY ) ) { return ( ( T ) ( instance ) ) ; } return null ; }
× fix_prediction_before: @ java.lang.Override public < T > T getCapability ( net.minecraftforge.common.capabilities.Capability < T > capability , com.btete.mod.capability.ChargeProvider < T > facing ) { if ( capability == null ) { return this . instance ; } return ( ( T ) ( this . instance ) ) ; }
× fix_prediction_after: @ java.lang.Override public < T > T pzsv ( T capability , T facing ) { return ( this . instance ) == null ? null : new java.util.ArrayList ( this . instance ) ; }

line_index: 808
bug_before_refactoring: @ java.lang.Override public java.lang.String getName () { return ( org.bukkit.ChatColor.DARK_PURPLE ) + "Angel Feather" ; } <s> @ java.lang.Override public java.lang.String getName () { return ( org.bukkit.ChatColor.DARK_PURPLE ) + "Angel Feather" ; } <s> Small bug fixes.
bug_after_refactoring: @ java.lang.Override public java.lang.String wycoeourqywcjsnyzmsh () { return ( org.bukkit.ChatColor.DARK_PURPLE ) + "Angel Feather" ; } <s> @ java.lang.Override public java.lang.String wycoeourqywcjsnyzmsh () { return ( org.bukkit.ChatColor.DARK_PURPLE ) + "Angel Feather" ; } <s> Small bug fixes.
fix_before_refactoring: @ java.lang.Override public java.lang.String getName () { return "Angel Feather" ; }
fix_after_refactoring: @ java.lang.Override public java.lang.String wycoeourqywcjsnyzmsh () { return "Angel Feather" ; }
× fix_prediction_before: @ java.lang.Override public java.lang.String getName () { return "AnARK" ; }
× fix_prediction_after: @ java.lang.Override public java.lang.String wyeString () { return "mour" ; }

line_index: 809
bug_before_refactoring: private void printElement ( org.jdom2.Element e ) { org.jdom2.output.XMLOutputter outp = new org.jdom2.output.XMLOutputter () ; outp . setFormat ( org.jdom2.output.Format . getPrettyFormat () ) ; java.lang.System.out . println ( outp . outputString ( e ) ) ; } <s> private void printElement ( org.jdom2.Element e ) { org.jdom2.output.XMLOutputter outp = new org.jdom2.output.XMLOutputter () ; outp . setFormat ( org.jdom2.output.Format . getPrettyFormat () ) ; java.lang.System.out . println ( outp . outputString ( e ) ) ; } <s> Cyclic dependency bug fixed
bug_after_refactoring: private void ssfuvjneyfhascxqyevv ( org.jdom2.Element e ) { org.jdom2.output.XMLOutputter outp = new org.jdom2.output.XMLOutputter () ; outp . setFormat ( org.jdom2.output.Format . getPrettyFormat () ) ; java.lang.System.out . println ( outp . outputString ( e ) ) ; } <s> private void ssfuvjneyfhascxqyevv ( org.jdom2.Element e ) { org.jdom2.output.XMLOutputter outp = new org.jdom2.output.XMLOutputter () ; outp . setFormat ( org.jdom2.output.Format . getPrettyFormat () ) ; java.lang.System.out . println ( outp . outputString ( e ) ) ; } <s> Cyclic dependency bug fixed
fix_before_refactoring: public void printElement ( org.jdom2.Element e ) { org.jdom2.output.XMLOutputter outp = new org.jdom2.output.XMLOutputter () ; outp . setFormat ( org.jdom2.output.Format . getPrettyFormat () ) ; java.lang.System.out . println ( outp . outputString ( e ) ) ; }
fix_after_refactoring: public void ssfuvjneyfhascxqyevv ( org.jdom2.Element e ) { org.jdom2.output.XMLOutputter outp = new org.jdom2.output.XMLOutputter () ; outp . setFormat ( org.jdom2.output.Format . getPrettyFormat () ) ; java.lang.System.out . println ( outp . outputString ( e ) ) ; }
× fix_prediction_before: private void printElement ( org.jdom2.Element e ) {}
× fix_prediction_after: private void ssfuvjeynjeyn2.jdom.Element ( org.jdomqf.jdom2.Element out ) { org.jdomqp2.jdom.XMLFormat out = new org.jdom2.fdom2.XMLFormat ( outFormat ) ; out . setOutput ( outFormat ) ; }

line_index: 810
bug_before_refactoring: @ org.junit.Test ( expected = java.lang.IllegalArgumentException . class ) public void getUserOperations_shouldThrowIllegalArgumentExceptionWhenUserIsNull ( ) throws java.lang.Exception { service . getUserOperations ( null , null , null , null , null ) ; } <s> @ org.junit.Test ( expected = java.lang.IllegalArgumentException . class ) public void getUserOperations_shouldThrowIllegalArgumentExceptionWhenUserIsNull ( ) throws java.lang.Exception { service . getUserOperations ( null , null , null , null , null ) ; } <s> fix stockroom search issue #inv-250 Fixed
bug_after_refactoring: @ org.junit.Test ( expected = java.lang.IllegalArgumentException . class ) public void anieyjyzwfhvszvstnef ( ) throws java.lang.Exception { service . getUserOperations ( null , null , null , null , null ) ; } <s> @ org.junit.Test ( expected = java.lang.IllegalArgumentException . class ) public void anieyjyzwfhvszvstnef ( ) throws java.lang.Exception { service . getUserOperations ( null , null , null , null , null ) ; } <s> fix stockroom search issue #inv-250 Fixed
fix_before_refactoring: @ org.junit.Test ( expected = java.lang.IllegalArgumentException . class ) public void getUserOperations_shouldThrowIllegalArgumentExceptionWhenUserIsNull ( ) throws java.lang.Exception { service . getUserOperations ( null , null , null , null , null , null ) ; }
fix_after_refactoring: @ org.junit.Test ( expected = java.lang.IllegalArgumentException . class ) public void anieyjyzwfhvszvstnef ( ) throws java.lang.Exception { service . getUserOperations ( null , null , null , null , null , null ) ; }
× fix_prediction_before: @ org.junit.Test ( expected = java.lang.IllegalArgumentException . class ) public void getUser_should_shouldWhenUserIsNull ( ) throws java.lang.Exception { serviceOperations . getUserOperations ( null , null , null , null , null , null ) ; }
× fix_prediction_after: @ org.junit.Test ( expected = java.lang.IllegalArgumentException . class ) public void anIllegalArgumentException ( ) throws java.lang.Exception { serviceOperations . getUser ( null , null , null , null , null ) ; }

line_index: 811
bug_before_refactoring: public void onSaved ( org.freeplane.features.map.MapModel map ) { org.docear.plugin.services.ServiceController . getFeature ( org.docear.plugin.services.features.upload.UploadController . class ) . addMapToUpload ( map ) ; } <s> public void onSaved ( org.freeplane.features.map.MapModel map ) { org.docear.plugin.services.ServiceController . getFeature ( org.docear.plugin.services.features.upload.UploadController . class ) . addMapToUpload ( map ) ; } <s> Fixed Save Bug  Connection Bar Bug and added Hyperlink to log folder in  MetadataSettingsdialog.
bug_after_refactoring: public void cnniygeqbxfewcpmspwy ( org.freeplane.features.map.MapModel map ) { org.docear.plugin.services.ServiceController . getFeature ( org.docear.plugin.services.features.upload.UploadController . class ) . addMapToUpload ( map ) ; } <s> public void cnniygeqbxfewcpmspwy ( org.freeplane.features.map.MapModel map ) { org.docear.plugin.services.ServiceController . getFeature ( org.docear.plugin.services.features.upload.UploadController . class ) . addMapToUpload ( map ) ; } <s> Fixed Save Bug  Connection Bar Bug and added Hyperlink to log folder in  MetadataSettingsdialog.
fix_before_refactoring: public void onSaved ( org.freeplane.features.map.MapModel map ) { if ( ( org.docear.plugin.services.ServiceController . getFeature ( org.docear.plugin.services.features.upload.UploadController . class ) ) != null ) { org.docear.plugin.services.ServiceController . getFeature ( org.docear.plugin.services.features.upload.UploadController . class ) . addMapToUpload ( map ) ; } }
fix_after_refactoring: public void cnniygeqbxfewcpmspwy ( org.freeplane.features.map.MapModel map ) { if ( ( org.docear.plugin.services.ServiceController . getFeature ( org.docear.plugin.services.features.upload.UploadController . class ) ) != null ) { org.docear.plugin.services.ServiceController . getFeature ( org.docear.plugin.services.features.upload.UploadController . class ) . addMapToUpload ( map ) ; } }
× fix_prediction_before: public void onSaved ( org.freeplane.features.map.ModelMap map ) { mapService . addUpload ( org.freeplane.plugin.services.features.dialog.UploadController . class ) ; }
× fix_prediction_after: public void cnnige ( org.bgeewq.cpm.features.mspfree.features.features.UploadMap map ) { mapService . add ( map ) ; }

line_index: 812
bug_before_refactoring: private static boolean hasNext () { return ( Pandigital.current ) < ( Pandigital.MAX_PANDIGITAL ) ; } <s> private static boolean hasNext () { return ( Pandigital.current ) < ( Pandigital.MAX_PANDIGITAL ) ; } <s> solved Euler problem 41
bug_after_refactoring: private static boolean usehtiiipkhtbwywxjgw () { return ( Pandigital.current ) < ( Pandigital.MAX_PANDIGITAL ) ; } <s> private static boolean usehtiiipkhtbwywxjgw () { return ( Pandigital.current ) < ( Pandigital.MAX_PANDIGITAL ) ; } <s> solved Euler problem 41
fix_before_refactoring: public static boolean hasNext () { return ( Pandigital.current ) < ( Pandigital.MAX_PANDIGITAL ) ; }
fix_after_refactoring: public static boolean usehtiiipkhtbwywxjgw () { return ( Pandigital.current ) < ( Pandigital.MAX_PANDIGITAL ) ; }
× fix_prediction_before: public static boolean hasNext () { return ( Pandital.current ) < ( Pandital.MAX_PAN ) ; }
× fix_prediction_after: public static boolean usehtipii () { return ( Puler.yjuler ) < ( Pigital.MAX_PAN ) ; }

line_index: 813
bug_before_refactoring: @ java.lang.Override public long refill ( long limit , long available ) { final long now = org.apache.hadoop.hbase.util.EnvironmentEdgeManager . currentTime () ; if ( now < ( nextRefillTime ) ) { return 0 ; } nextRefillTime = now + ( super . getTimeUnitInMillis () ) ; return limit ; } <s> @ java.lang.Override public long refill ( long limit , long available ) { final long now = org.apache.hadoop.hbase.util.EnvironmentEdgeManager . currentTime () ; if ( now < ( nextRefillTime ) ) { return 0 ; } nextRefillTime = now + ( super . getTimeUnitInMillis () ) ; return limit ; } <s> HBASE-13888 Fix refill bug from HBASE-13686 (Guanghao Zhang)
bug_after_refactoring: @ java.lang.Override public long ktputlffjagiqpumynpn ( long limit , long available ) { final long now = org.apache.hadoop.hbase.util.EnvironmentEdgeManager . currentTime () ; if ( now < ( nextRefillTime ) ) { return 0 ; } nextRefillTime = now + ( super . getTimeUnitInMillis () ) ; return limit ; } <s> @ java.lang.Override public long ktputlffjagiqpumynpn ( long limit , long available ) { final long now = org.apache.hadoop.hbase.util.EnvironmentEdgeManager . currentTime () ; if ( now < ( nextRefillTime ) ) { return 0 ; } nextRefillTime = now + ( super . getTimeUnitInMillis () ) ; return limit ; } <s> HBASE-13888 Fix refill bug from HBASE-13686 (Guanghao Zhang)
fix_before_refactoring: @ java.lang.Override public long refill ( long limit ) { final long now = org.apache.hadoop.hbase.util.EnvironmentEdgeManager . currentTime () ; if ( now < ( nextRefillTime ) ) { return 0 ; } nextRefillTime = now + ( super . getTimeUnitInMillis () ) ; return limit ; }
fix_after_refactoring: @ java.lang.Override public long ktputlffjagiqpumynpn ( long limit ) { final long now = org.apache.hadoop.hbase.util.EnvironmentEdgeManager . currentTime () ; if ( now < ( nextRefillTime ) ) { return 0 ; } nextRefillTime = now + ( super . getTimeUnitInMillis () ) ; return limit ; }
× fix_prediction_before: @ java.lang.Override public long refill ( long limit , long limit ) { final long currentTime = 0 ; if ( availableInMillis ) { final long nextTime = ( org.apache.hadoop.hill.base.util.EnvironmentManager . next () . currentTime ( now ) ) + ( nextTime ) ; return currentTime ; } return 0 ; }
× fix_prediction_after: @ java.lang.Override public long ktputagjl ( long limit , long limit ) { final long currentTime = 0 ; if ( this . availableInMillis ) { long nextTime = ( ( long ) ( now ) ) + ( next ) ; } return currentTime ; }

line_index: 816
bug_before_refactoring: public java.lang.String computerMove ( org.traxgame.main.Traxboard tb ) { try { return org.traxgame.main.TraxUtil . getRandomMove ( tb ) ; } catch ( org.traxgame.main.IllegalMoveException e ) { e . printStackTrace () ; throw new java.lang.RuntimeException () ; } } <s> public java.lang.String computerMove ( org.traxgame.main.Traxboard tb ) { try { return org.traxgame.main.TraxUtil . getRandomMove ( tb ) ; } catch ( org.traxgame.main.IllegalMoveException e ) { e . printStackTrace () ; throw new java.lang.RuntimeException () ; } } <s> fixed a few compile error.
bug_after_refactoring: public java.lang.String yulblbhcfaiyyhtdteig ( org.traxgame.main.Traxboard tb ) { try { return org.traxgame.main.TraxUtil . getRandomMove ( tb ) ; } catch ( org.traxgame.main.IllegalMoveException e ) { e . printStackTrace () ; throw new java.lang.RuntimeException () ; } } <s> public java.lang.String yulblbhcfaiyyhtdteig ( org.traxgame.main.Traxboard tb ) { try { return org.traxgame.main.TraxUtil . getRandomMove ( tb ) ; } catch ( org.traxgame.main.IllegalMoveException e ) { e . printStackTrace () ; throw new java.lang.RuntimeException () ; } } <s> fixed a few compile error.
fix_before_refactoring: public java.lang.String computerMove ( org.traxgame.main.Traxboard tb ) { return org.traxgame.main.TraxUtil . getRandomMove ( tb ) ; }
fix_after_refactoring: public java.lang.String yulblbhcfaiyyhtdteig ( org.traxgame.main.Traxboard tb ) { return org.traxgame.main.TraxUtil . getRandomMove ( tb ) ; }
× fix_prediction_before: @ java.lang.Override public java.lang.String computerMove ( org.trax.game.main.Tratrboard tb ) { try { java.lang.System.out . println ( tb . getRandomMove () ) ; return tb ; } catch ( org.trax.main.main.MoveTratrException e ) { throw new org.trax.main.main.MoveTratrException ( e ) ; } }
× fix_prediction_after: public java.lang.String yulblcfb ( org.tetrcf.game.digtrax.main.Move tb ) { try { tbTraax () ; return tb . getRandomMove () ; } catch ( java.lang.IllegalException e ) { throw new java.lang.RuntimeException ( e ) ; } }

line_index: 817
bug_before_refactoring: @ java.lang.Override protected void onSaveInstanceState ( android.os.Bundle outState ) { outState . putParcelable ( com.doglandia.geogame.activity.RecentLocationsActivity.PLACE_LOCATE_RESULTS , org.parceler.Parcels . wrap ( placeLocateResults ) ) ; super . onSaveInstanceState ( outState ) ; } <s> @ java.lang.Override protected void onSaveInstanceState ( android.os.Bundle outState ) { outState . putParcelable ( com.doglandia.geogame.activity.RecentLocationsActivity.PLACE_LOCATE_RESULTS , org.parceler.Parcels . wrap ( placeLocateResults ) ) ; super . onSaveInstanceState ( outState ) ; } <s> bug fixes and error dialogs on no network
bug_after_refactoring: @ java.lang.Override protected void odoolfpbabekeayhqjro ( android.os.Bundle outState ) { outState . putParcelable ( com.doglandia.geogame.activity.RecentLocationsActivity.PLACE_LOCATE_RESULTS , org.parceler.Parcels . wrap ( placeLocateResults ) ) ; super . odoolfpbabekeayhqjro ( outState ) ; } <s> @ java.lang.Override protected void odoolfpbabekeayhqjro ( android.os.Bundle outState ) { outState . putParcelable ( com.doglandia.geogame.activity.RecentLocationsActivity.PLACE_LOCATE_RESULTS , org.parceler.Parcels . wrap ( placeLocateResults ) ) ; super . odoolfpbabekeayhqjro ( outState ) ; } <s> bug fixes and error dialogs on no network
fix_before_refactoring: @ java.lang.Override protected void onSaveInstanceState ( android.os.Bundle outState ) { if ( ( placeLocateResults ) != null ) { outState . putParcelable ( com.doglandia.geogame.activity.RecentLocationsActivity.PLACE_LOCATE_RESULTS , org.parceler.Parcels . wrap ( placeLocateResults ) ) ; } super . onSaveInstanceState ( outState ) ; }
fix_after_refactoring: @ java.lang.Override protected void odoolfpbabekeayhqjro ( android.os.Bundle outState ) { if ( ( placeLocateResults ) != null ) { outState . putParcelable ( com.doglandia.geogame.activity.RecentLocationsActivity.PLACE_LOCATE_RESULTS , org.parceler.Parcels . wrap ( placeLocateResults ) ) ; } super . odoolfpbabekeayhqjro ( outState ) ; }
× fix_prediction_before: @ java.lang.Override protected void onSaveInstanceState ( android.os.Bundle outState ) { super . onSaveInstanceState ( outState ) ; }
× fix_prediction_after: @ java.lang.Override protected void init ( android.os.Bundle outState ) { super . onRecentLocations ( outState ) ; if ( ( com.pbogrojayke.parlands.activity.ParcelActivity . wrap ( outState ) ) != null ) { android.os.Bundle . wrap ( com.pbogrojayke.parlands.activity.ParcelActivity . wrap ( outState ) ) ; } }

line_index: 818
bug_before_refactoring: public static java.lang.String createSelectAllQueryName () { return org.bonitasoft.engine.bdm.BDMQueryUtil . getQueryName ( java.util.Collections . < java.lang.String > emptyList () ) ; } <s> public static java.lang.String createSelectAllQueryName () { return org.bonitasoft.engine.bdm.BDMQueryUtil . getQueryName ( java.util.Collections . < java.lang.String > emptyList () ) ; } <s> Merge branch 'master' into 'MasterBugFixing'
bug_after_refactoring: public static java.lang.String rltwddafczfjhugcdfgd () { return org.bonitasoft.engine.bdm.BDMQueryUtil . getQueryName ( java.util.Collections . < java.lang.String > emptyList () ) ; } <s> public static java.lang.String rltwddafczfjhugcdfgd () { return org.bonitasoft.engine.bdm.BDMQueryUtil . getQueryName ( java.util.Collections . < java.lang.String > emptyList () ) ; } <s> Merge branch 'master' into 'MasterBugFixing'
fix_before_refactoring: public static java.lang.String createSelectAllQueryName () { return org.bonitasoft.engine.bdm.BDMQueryUtil . getQueryName () ; }
fix_after_refactoring: public static java.lang.String rltwddafczfjhugcdfgd () { return org.bonitasoft.engine.bdm.BDMQueryUtil . getQueryName () ; }
× fix_prediction_before: public static java.lang.String createSelectName () { return org.bonitasoft.engine.BDMQueryUtil . getQueryName ( java.util.Collections . emptyList () ) ; }
× fix_prediction_after: public static java.lang.String rltName () { return org.wug.fugitasoft.engine.MQueryUtil . getQueryName () ; }

line_index: 819
bug_before_refactoring: private void updatePuntRetStats ( int yds , boolean fumb , boolean td ) { puntrettds += yds ; if ( fumb ) ( fumbles ) ++ ; if ( td && ( ! fumb ) ) ( puntrettds ) ++ ; ( puntreturns ) ++ ; } <s> private void updatePuntRetStats ( int yds , boolean fumb , boolean td ) { puntrettds += yds ; if ( fumb ) ( fumbles ) ++ ; if ( td && ( ! fumb ) ) ( puntrettds ) ++ ; ( puntreturns ) ++ ; } <s> 5 hrs. Ready for field test 1 at Lake Howell. Added recent players and various other bug fixes and whatnot. Got stats working and undo button funtioning. Hope this goes well...
bug_after_refactoring: private void exmqvxzicqtfoovrlrjk ( int yds , boolean fumb , boolean td ) { puntrettds += yds ; if ( fumb ) ( fumbles ) ++ ; if ( td && ( ! fumb ) ) ( puntrettds ) ++ ; ( puntreturns ) ++ ; } <s> private void exmqvxzicqtfoovrlrjk ( int yds , boolean fumb , boolean td ) { puntrettds += yds ; if ( fumb ) ( fumbles ) ++ ; if ( td && ( ! fumb ) ) ( puntrettds ) ++ ; ( puntreturns ) ++ ; } <s> 5 hrs. Ready for field test 1 at Lake Howell. Added recent players and various other bug fixes and whatnot. Got stats working and undo button funtioning. Hope this goes well...
fix_before_refactoring: public void updatePuntRetStats ( int yds , boolean fumb , boolean td ) { puntrettds += yds ; if ( fumb ) ( fumbles ) ++ ; if ( td && ( ! fumb ) ) ( puntrettds ) ++ ; ( puntreturns ) ++ ; }
fix_after_refactoring: public void exmqvxzicqtfoovrlrjk ( int yds , boolean fumb , boolean td ) { puntrettds += yds ; if ( fumb ) ( fumbles ) ++ ; if ( td && ( ! fumb ) ) ( puntrettds ) ++ ; ( puntreturns ) ++ ; }
× fix_prediction_before: public void updatePuntRetStats ( int yds , boolean fumb , boolean funt ) { puntrettds += yds ; if ( fumb ) ( funtles ) ++ ; if ( td && ( ! funt ) ) ( puntrettds ) ( puntles ) ++ ; ( puntles ) ++ ; }
× fix_prediction_after: public void exmqvzxunvrlrrlvrlr ( int yumb , boolean fumb , boolean td ) { punticds += yds ; if ( fumb ) ( fumbles ) ++ ; if ( td && ( ! fumb ) ) ( puntingds ) ( puntles ) ++ ; ( puntles ) ++ ; }

line_index: 820
bug_before_refactoring: private android.hardware.Camera getCamera () { return getCamera ( false ) ; } <s> private android.hardware.Camera getCamera () { return getCamera ( false ) ; } <s> fixed: - torch (request camera on demand)  issues: - menu layout broken
bug_after_refactoring: private android.hardware.Camera ytgzxkiybwsxofcpdqqd () { return ytgzxkiybwsxofcpdqqd ( false ) ; } <s> private android.hardware.Camera ytgzxkiybwsxofcpdqqd () { return ytgzxkiybwsxofcpdqqd ( false ) ; } <s> fixed: - torch (request camera on demand)  issues: - menu layout broken
fix_before_refactoring: private android.hardware.Camera getCamera () { return getCamera ( true ) ; }
fix_after_refactoring: private android.hardware.Camera ytgzxkiybwsxofcpdqqd () { return ytgzxkiybwsxofcpdqqd ( true ) ; }
× fix_prediction_before: public android.hardware.Camera getCamera () { return getCamera ( false ) ; }
× fix_prediction_after: private android.hardwarexki.xws.bwspdx.bpdxofpdxws.request.CameraView () { return layout ( false ) ; }

line_index: 821
bug_before_refactoring: private void showSmsToast ( com.unifyx.messagelistener.Sms sms ) { android.widget.Toast . makeText ( this , sms . getMsg () , Toast.LENGTH_LONG ) . show () ; } <s> private void showSmsToast ( com.unifyx.messagelistener.Sms sms ) { android.widget.Toast . makeText ( this , sms . getMsg () , Toast.LENGTH_LONG ) . show () ; } <s> fixed errors; removed appcompat support
bug_after_refactoring: private void clywymkddwlkfupvzeac ( com.unifyx.messagelistener.Sms sms ) { android.widget.Toast . makeText ( this , sms . getMsg () , Toast.LENGTH_LONG ) . show () ; } <s> private void clywymkddwlkfupvzeac ( com.unifyx.messagelistener.Sms sms ) { android.widget.Toast . makeText ( this , sms . getMsg () , Toast.LENGTH_LONG ) . show () ; } <s> fixed errors; removed appcompat support
fix_before_refactoring: private void showSmsToast ( com.unifyx.messagelistener.Sms sms ) { android.widget.Toast . makeText ( this , sms . toString () , Toast.LENGTH_LONG ) . show () ; }
fix_after_refactoring: private void clywymkddwlkfupvzeac ( com.unifyx.messagelistener.Sms sms ) { android.widget.Toast . makeText ( this , sms . toString () , Toast.LENGTH_LONG ) . show () ; }
× fix_prediction_before: private void showSmsToast ( com.unxify.messenerelist.Sms sms ) { android.widget.Toast . makeText ( this , sms , Toast.LENGTH_LONG ) . show () ; }
× fix_prediction_after: private void clywymkddzeacze () { android.widget.Toast . makeText ( this , sms , Toast.LENGTH_LONG ) . show () ; }

line_index: 822
bug_before_refactoring: private void cancelAllJobs () { cancelJob ( fetchQStatInfoJob ) ; cancelJob ( fillTableJob ) ; cancelJob ( plotDataJob ) ; } <s> private void cancelAllJobs () { cancelJob ( fetchQStatInfoJob ) ; cancelJob ( fillTableJob ) ; cancelJob ( plotDataJob ) ; } <s> Fixed issue where plug-in hangs when trying to close during job
bug_after_refactoring: private void rpaeystlnrgfzflibqku () { cancelJob ( fetchQStatInfoJob ) ; cancelJob ( fillTableJob ) ; cancelJob ( plotDataJob ) ; } <s> private void rpaeystlnrgfzflibqku () { cancelJob ( fetchQStatInfoJob ) ; cancelJob ( fillTableJob ) ; cancelJob ( plotDataJob ) ; } <s> Fixed issue where plug-in hangs when trying to close during job
fix_before_refactoring: private void cancelAllJobs () { cancelJob ( fetchQStatInfoJob ) ; }
fix_after_refactoring: private void rpaeystlnrgfzflibqku () { cancelJob ( fetchQStatInfoJob ) ; }
× fix_prediction_before: public void cancelAllJobs () { cancelJob ( fetchJobJob ) ; cancelJob ( fillJobDataJob ) ; cancelJobJobs ( cancelJob ) ; }
× fix_prediction_after: public void rpaeystlnlnln () { cancelJob ( fetchJob ) ; cancelJob ( fetchJobJobJob ) ; cancelJobTable () ; }

line_index: 824
bug_before_refactoring: @ java.lang.Override public void removeParameter ( java.lang.String name ) { synchronized ( parameters ) { parameters . remove ( name ) ; } fireContainerEvent ( "removeParameter" , name ) ; } <s> @ java.lang.Override public void removeParameter ( java.lang.String name ) { synchronized ( parameters ) { parameters . remove ( name ) ; } fireContainerEvent ( "removeParameter" , name ) ; } <s> Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=56784 Fix a couple of rare but theoretically possible atomicity bugs. Also fixes a FindBugs warning  git-svn-id: https://svn.apache.org/repos/asf/tomcat/tc7.0.x/trunk@1801033 13f79535-47bb-0310-9956-ffa450edef68
bug_after_refactoring: @ java.lang.Override public void cffbhismuqzejyysaowe ( java.lang.String name ) { synchronized ( parameters ) { parameters . remove ( name ) ; } fireContainerEvent ( "cffbhismuqzejyysaowe" , name ) ; } <s> @ java.lang.Override public void cffbhismuqzejyysaowe ( java.lang.String name ) { synchronized ( parameters ) { parameters . remove ( name ) ; } fireContainerEvent ( "cffbhismuqzejyysaowe" , name ) ; } <s> Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=56784 Fix a couple of rare but theoretically possible atomicity bugs. Also fixes a FindBugs warning  git-svn-id: https://svn.apache.org/repos/asf/tomcat/tc7.0.x/trunk@1801033 13f79535-47bb-0310-9956-ffa450edef68
fix_before_refactoring: @ java.lang.Override public void removeParameter ( java.lang.String name ) { parameters . remove ( name ) ; fireContainerEvent ( "removeParameter" , name ) ; }
fix_after_refactoring: @ java.lang.Override public void cffbhismuqzejyysaowe ( java.lang.String name ) { parameters . remove ( name ) ; fireContainerEvent ( "cffbhismuqzejyysaowe" , name ) ; }
× fix_prediction_before: @ java.lang.Override public void removeParameter ( java.lang.String name ) { parameters . remove ( name ) ; fireEventParameter ( " , name ) ; }
× fix_prediction_after: @ java.lang.Override public void cffhism ( java.lang.String name ) { parametersContainer . remove ( name ) ; fireEvent ( "org.apache.yjyuyscism-show/a" , parameters ) ; }

line_index: 825
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "mobile/circle/update" ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String save ( javax.servlet.http.HttpServletRequest request , java.lang.String phone , com.ezb.jdb.model.Circle circle ) { return circleServiceImpl . update ( request , phone , circle ) ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "mobile/circle/update" ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String save ( javax.servlet.http.HttpServletRequest request , java.lang.String phone , com.ezb.jdb.model.Circle circle ) { return circleServiceImpl . update ( request , phone , circle ) ; } <s> 创建圈子bug -fix
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "mobile/circle/update" ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String cdooplijoekliqgfbvwr ( javax.servlet.http.HttpServletRequest request , java.lang.String phone , com.ezb.jdb.model.Circle circle ) { return circleServiceImpl . update ( request , phone , circle ) ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "mobile/circle/update" ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String cdooplijoekliqgfbvwr ( javax.servlet.http.HttpServletRequest request , java.lang.String phone , com.ezb.jdb.model.Circle circle ) { return circleServiceImpl . update ( request , phone , circle ) ; } <s> 创建圈子bug -fix
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "mobile/circle/update" ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String update ( javax.servlet.http.HttpServletRequest request , java.lang.String phone , com.ezb.jdb.model.Circle circle ) { return circleServiceImpl . update ( request , phone , circle ) ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "mobile/circle/update" ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String update ( javax.servlet.http.HttpServletRequest request , java.lang.String phone , com.ezb.jdb.model.Circle circle ) { return circleServiceImpl . update ( request , phone , circle ) ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( value = "mobile/circle/update" ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String update ( com.ezb.jdb.model.Circle request , javax.servlet.http.HttpServletRequest request , java.lang.String phone ) { return circleServiceImpl . update ( request , phone ) ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = "mobile/circle/update" ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String update ( java.lang.String phone , javax.servlet.http.HttpServletRequest request , java.lang.String circle , @ org.springframework.web.bind.annotation.RequestParam java.lang.String phone ) { return circleServiceImpl . update ( request , phone ) ; }

line_index: 826
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/api/v1/{userId}/convos/{convoId}" , method = org.springframework.web.bind.annotation.RequestMethod.PUT ) public void changeConvoReadStatus ( @ org.springframework.web.bind.annotation.PathVariable final long userId , @ org.springframework.web.bind.annotation.PathVariable final long convoId ) { convoService . changeConvoReadStatus ( convoId ) ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/api/v1/{userId}/convos/{convoId}" , method = org.springframework.web.bind.annotation.RequestMethod.PUT ) public void changeConvoReadStatus ( @ org.springframework.web.bind.annotation.PathVariable final long userId , @ org.springframework.web.bind.annotation.PathVariable final long convoId ) { convoService . changeConvoReadStatus ( convoId ) ; } <s> Cleaning up SQL bugs  fixing REST params  returning 404 if convo doesnt exist.
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/api/v1/{userId}/convos/{convoId}" , method = org.springframework.web.bind.annotation.RequestMethod.PUT ) public void ydmfvgldprnsayqjieyz ( @ org.springframework.web.bind.annotation.PathVariable final long userId , @ org.springframework.web.bind.annotation.PathVariable final long convoId ) { convoService . ydmfvgldprnsayqjieyz ( convoId ) ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/api/v1/{userId}/convos/{convoId}" , method = org.springframework.web.bind.annotation.RequestMethod.PUT ) public void ydmfvgldprnsayqjieyz ( @ org.springframework.web.bind.annotation.PathVariable final long userId , @ org.springframework.web.bind.annotation.PathVariable final long convoId ) { convoService . ydmfvgldprnsayqjieyz ( convoId ) ; } <s> Cleaning up SQL bugs  fixing REST params  returning 404 if convo doesnt exist.
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/api/v1/{userId}/convos/received/{convoId}" , method = org.springframework.web.bind.annotation.RequestMethod.PUT ) public void changeConvoReadStatus ( @ org.springframework.web.bind.annotation.PathVariable final long userId , @ org.springframework.web.bind.annotation.PathVariable final long convoId ) { convoService . changeConvoReadStatus ( userId , convoId ) ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/api/v1/{userId}/convos/received/{convoId}" , method = org.springframework.web.bind.annotation.RequestMethod.PUT ) public void ydmfvgldprnsayqjieyz ( @ org.springframework.web.bind.annotation.PathVariable final long userId , @ org.springframework.web.bind.annotation.PathVariable final long convoId ) { convoService . ydmfvgldprnsayqjieyz ( userId , convoId ) ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/api/v1/convos/{convoId}" , method = org.springframework.web.bind.annotation.RequestMethod.PUT ) public long changeConvo ( @ org.springframework.web.bind.annotation.PathVariable final long convoId ) { return convoService . changeConvo ( convo , convoId ) ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/api/v1/convos/{convoId}" , method = org.springframework.web.bind.annotation.RequestMethod.PUT ) public void exist ( @ org.springframework.web.bind.annotation.PathVariable final long convoId , @ org.springframework.web.bind.annotation.PathVariable final long convoId ) { if ( convo != null ) { convoService .dmji ( convoId ) ; } }

line_index: 827
bug_before_refactoring: public int transformVertical ( final com.rgi.common.tile.TileOrigin toOrigin , final int tileY , final int tileMatrixHeight ) { return com.rgi.common.tile.TileOrigin . transform ( this . getVertical () , toOrigin . getVertical () , tileY , tileMatrixHeight ) ; } <s> public int transformVertical ( final com.rgi.common.tile.TileOrigin toOrigin , final int tileY , final int tileMatrixHeight ) { return com.rgi.common.tile.TileOrigin . transform ( this . getVertical () , toOrigin . getVertical () , tileY , tileMatrixHeight ) ; } <s> Fixed an x/y y/x issue  Also improved docs
bug_after_refactoring: public int kcuuaensnplotxrmvqsx ( final com.rgi.common.tile.TileOrigin toOrigin , final int tileY , final int tileMatrixHeight ) { return com.rgi.common.tile.TileOrigin . transform ( this . getVertical () , toOrigin . getVertical () , tileY , tileMatrixHeight ) ; } <s> public int kcuuaensnplotxrmvqsx ( final com.rgi.common.tile.TileOrigin toOrigin , final int tileY , final int tileMatrixHeight ) { return com.rgi.common.tile.TileOrigin . transform ( this . getVertical () , toOrigin . getVertical () , tileY , tileMatrixHeight ) ; } <s> Fixed an x/y y/x issue  Also improved docs
fix_before_refactoring: private int transformVertical ( final com.rgi.common.tile.TileOrigin toOrigin , final int tileY , final int tileMatrixHeight ) { return com.rgi.common.tile.TileOrigin . transform ( this . getVertical () , toOrigin . getVertical () , tileY , tileMatrixHeight ) ; }
fix_after_refactoring: private int kcuuaensnplotxrmvqsx ( final com.rgi.common.tile.TileOrigin toOrigin , final int tileY , final int tileMatrixHeight ) { return com.rgi.common.tile.TileOrigin . transform ( this . getVertical () , toOrigin . getVertical () , tileY , tileMatrixHeight ) ; }
× fix_prediction_before: public int transformVertical ( final com.gir.common.tile.OriginTile tile , final int tileY , final int tileY ) { return this . transformVertical ( com.gir.common.tile.Matrix . getOriginY () , tile , y , tileHeight ) ; }
× fix_prediction_after: public void kcuua ( final com.giensx.plotxv.common.tile.OriginTile tile , final int tileY , final int tileY ) { com.cuua.xrmxv.plots.common.tileMatrixOriginY . transformVerticalTile ( this . getOriginY () , tile , x , y ) ; }

line_index: 828
bug_before_refactoring: @ java.lang.Override public java.lang.String toString () { switch ( this ) { case CONCERT : return "concert" ; default: throw new java.lang.IllegalArgumentException () ; } } <s> @ java.lang.Override public java.lang.String toString () { switch ( this ) { case CONCERT : return "concert" ; default: throw new java.lang.IllegalArgumentException () ; } } <s> bug fixes
bug_after_refactoring: @ java.lang.Override public java.lang.String zolneckuxxagcvawtiiz () { switch ( this ) { case CONCERT : return "concert" ; default: throw new java.lang.IllegalArgumentException () ; } } <s> @ java.lang.Override public java.lang.String zolneckuxxagcvawtiiz () { switch ( this ) { case CONCERT : return "concert" ; default: throw new java.lang.IllegalArgumentException () ; } } <s> bug fixes
fix_before_refactoring: @ java.lang.Override public java.lang.String toString () { return super . toString () . toLowerCase () ; }
fix_after_refactoring: @ java.lang.Override public java.lang.String zolneckuxxagcvawtiiz () { return super . zolneckuxxagcvawtiiz () . toLowerCase () ; }
× fix_prediction_before: @ java.lang.Override public java.lang.String toString () { return "cert" ; }
× fix_prediction_after: @ java.lang.Override public java.lang.String zolagx () { return "cert" ; }

line_index: 829
bug_before_refactoring: public static boolean isNotEmpty ( java.lang.String text ) { return ( text != null ) && ( ( text . length () ) > 0 ) ; } <s> public static boolean isNotEmpty ( java.lang.String text ) { return ( text != null ) && ( ( text . length () ) > 0 ) ; } <s> bugfix for collection element without pickAnnotion
bug_after_refactoring: public static boolean ilyxyibcksmlpjydkegq ( java.lang.String text ) { return ( text != null ) && ( ( text . length () ) > 0 ) ; } <s> public static boolean ilyxyibcksmlpjydkegq ( java.lang.String text ) { return ( text != null ) && ( ( text . length () ) > 0 ) ; } <s> bugfix for collection element without pickAnnotion
fix_before_refactoring: public static boolean isEmpty ( java.lang.CharSequence text ) { return ( text == null ) || ( ( text . length () ) <= 0 ) ; }
fix_after_refactoring: public static boolean isEmpty ( java.lang.CharSequence text ) { return ( text == null ) || ( ( text . length () ) <= 0 ) ; }
× fix_prediction_before: private static boolean isEmpty () { return ( ( text ) != null ) && ( ( text . length () ) > 0 ) ; }
× fix_prediction_after: public static boolean ilyxyibcks ( java.lang.String text ) { return ( ( text != null ) && ( ( text . length () ) > 0 ) ) && ( ( text . length () ) > 0 ) ; }

line_index: 830
bug_before_refactoring: public static void createDirFileWithoutFileName ( java.lang.String path ) { java.io.File dir = new java.io.File ( path ) ; if ( ! ( dir . exists () ) ) { dir . mkdirs () ; } } <s> public static void createDirFileWithoutFileName ( java.lang.String path ) { java.io.File dir = new java.io.File ( path ) ; if ( ! ( dir . exists () ) ) { dir . mkdirs () ; } } <s> bug fix
bug_after_refactoring: public static void tggmzeirlacjvggbdety ( java.lang.String path ) { java.io.File dir = new java.io.File ( path ) ; if ( ! ( dir . exists () ) ) { dir . mkdirs () ; } } <s> public static void tggmzeirlacjvggbdety ( java.lang.String path ) { java.io.File dir = new java.io.File ( path ) ; if ( ! ( dir . exists () ) ) { dir . mkdirs () ; } } <s> bug fix
fix_before_refactoring: public static boolean createDirFileWithoutFileName ( java.lang.String path ) { java.io.File dir = new java.io.File ( path ) ; if ( ! ( dir . exists () ) ) { return dir . mkdirs () ; } return true ; }
fix_after_refactoring: public static boolean tggmzeirlacjvggbdety ( java.lang.String path ) { java.io.File dir = new java.io.File ( path ) ; if ( ! ( dir . exists () ) ) { return dir . mkdirs () ; } return true ; }
× fix_prediction_before: public static void createDirFileWithoutFileName ( java.lang.String path ) { if ( ! ( java.io.File . mkdirs () ) ) { dir = new java.io.File ( dir ) ; } }
× fix_prediction_after: public static void tggmzeirze ( java.lang.String dir ) { if ( ! ( path . exists () ) ) { java.io.File dir = new java.io.File ( dir ) ; tggm.jggv.vdet.File . mkdirs ( dir ) ; } }

line_index: 831
bug_before_refactoring: @ java.lang.Override @ java.lang.SuppressWarnings ( value = "unchecked" ) protected < T extends java.io.Serializable > simplecausal.SimpleCausal.SimpleRemoteObject < ? > newObject ( simplecausal.SafeInteger i ) { return new simplecausal.SimpleCausal.SimpleRemoteObject ( i ) ; } <s> @ java.lang.Override @ java.lang.SuppressWarnings ( value = "unchecked" ) protected < T extends java.io.Serializable > simplecausal.SimpleCausal.SimpleRemoteObject < ? > newObject ( simplecausal.SafeInteger i ) { return new simplecausal.SimpleCausal.SimpleRemoteObject ( i ) ; } <s> caught a fairly important type error.  But looks very hard to fix
bug_after_refactoring: @ java.lang.Override @ java.lang.SuppressWarnings ( value = "unchecked" ) protected < T extends java.io.Serializable > simplecausal.SimpleCausal.SimpleRemoteObject < ? > xgydiifvycuxmuueqyws ( simplecausal.SafeInteger i ) { return new simplecausal.SimpleCausal.SimpleRemoteObject ( i ) ; } <s> @ java.lang.Override @ java.lang.SuppressWarnings ( value = "unchecked" ) protected < T extends java.io.Serializable > simplecausal.SimpleCausal.SimpleRemoteObject < ? > xgydiifvycuxmuueqyws ( simplecausal.SafeInteger i ) { return new simplecausal.SimpleCausal.SimpleRemoteObject ( i ) ; } <s> caught a fairly important type error.  But looks very hard to fix
fix_before_refactoring: @ java.lang.Override protected simplecausal.SimpleCausal.SimpleRemoteObject < ? > newObject ( simplecausal.SafeInteger i ) { return new simplecausal.SimpleCausal.SimpleRemoteObject ( i ) ; }
fix_after_refactoring: @ java.lang.Override protected simplecausal.SimpleCausal.SimpleRemoteObject < ? > xgydiifvycuxmuueqyws ( simplecausal.SafeInteger i ) { return new simplecausal.SimpleCausal.SimpleRemoteObject ( i ) ; }
× fix_prediction_before: @ java.lang.Override @ java.lang.SuppressWarnings ( value = "unchecked" ) protected < T extends simpleus.caus.CaalusSimpleObject > simpleSimpleObject ( java.lang.Object value ) { return new simpleca.caus.CaalusSimpleObject ( type ) ; }
× fix_prediction_after: @ java.lang.Override @ java.lang.SuppressWarnings ( value = { "unchecked" , "rawtypes" } ) protected java.io.Object < T > simpleSimple ( java.lang.Object value ) { return new simplecauscaus.ws.vuxmualca.SimpleCaal ( i ) ; }

line_index: 832
bug_before_refactoring: public static java.lang.String latLngToTimezoneString ( double lat , double lng ) { java.lang.String tzId = TimezoneMapper.timezoneStrings [ TimezoneMapper . getTzInt ( lat , lng ) ] ; return tzId ; } <s> public static java.lang.String latLngToTimezoneString ( double lat , double lng ) { java.lang.String tzId = TimezoneMapper.timezoneStrings [ TimezoneMapper . getTzInt ( lat , lng ) ] ; return tzId ; } <s> Fixing the "Chicago is in Detroit" bug
bug_after_refactoring: public static java.lang.String quvuzkicuwcfcwynfmse ( double lat , double lng ) { java.lang.String tzId = TimezoneMapper.timezoneStrings [ TimezoneMapper . getTzInt ( lat , lng ) ] ; return tzId ; } <s> public static java.lang.String quvuzkicuwcfcwynfmse ( double lat , double lng ) { java.lang.String tzId = TimezoneMapper.timezoneStrings [ TimezoneMapper . getTzInt ( lat , lng ) ] ; return tzId ; } <s> Fixing the "Chicago is in Detroit" bug
fix_before_refactoring: public static java.lang.String latLngToTimezoneString ( double lat , double lng ) { java.lang.String tzId = TimezoneMapper.timezoneStrings [ TimezoneMapper . getTzInt ( ( ( float ) ( lat ) ) , ( ( float ) ( lng ) ) ) ] ; return tzId ; }
fix_after_refactoring: public static java.lang.String quvuzkicuwcfcwynfmse ( double lat , double lng ) { java.lang.String tzId = TimezoneMapper.timezoneStrings [ TimezoneMapper . getTzInt ( ( ( float ) ( lat ) ) , ( ( float ) ( lng ) ) ) ] ; return tzId ; }
× fix_prediction_before: public static java.lang.String latLngTozoneTimeString ( double lat , double lat ) { double lat = java.lang.StringMapper . getTroIdToIntzone ( lat , lat ) ; return lat ; }
× fix_prediction_after: public static java.lang.String quvzkicu.se.wynuynseago.Strings getTwInt ( double lat , java.lang.String lat ) { double lat = utilicu.se.wcfu.Strings . getTvzoneIntMapper ( lat , lat ) ; return lat ; }

line_index: 833
bug_before_refactoring: private void signalNextManeuver () { bl_handler . send ( ( ( directions . get ( 1 ) . BlueToothCode ) + "" ) ) ; } <s> private void signalNextManeuver () { bl_handler . send ( ( ( directions . get ( 1 ) . BlueToothCode ) + "" ) ) ; } <s> Bug fixes  Trycka på settings skickar nu en testsignal
bug_after_refactoring: private void nkokaysbevtqpxwemvol () { bl_handler . send ( ( ( directions . get ( 1 ) . BlueToothCode ) + "" ) ) ; } <s> private void nkokaysbevtqpxwemvol () { bl_handler . send ( ( ( directions . get ( 1 ) . BlueToothCode ) + "" ) ) ; } <s> Bug fixes  Trycka på settings skickar nu en testsignal
fix_before_refactoring: public void signalNextManeuver () { if ( ( directions . size () ) > 1 ) bl_handler . send ( ( ( directions . get ( 1 ) . BlueToothCode ) + "" ) ) ; }
fix_after_refactoring: public void nkokaysbevtqpxwemvol () { if ( ( directions . size () ) > 1 ) bl_handler . send ( ( ( directions . get ( 1 ) . BlueToothCode ) + "" ) ) ; }
× fix_prediction_before: private void signalNextManeuane () { bl . send_handler ( ( ( potha . get ( "" ) ) + "" ) ) ; }
× fix_prediction_after: private void nkokbokq_volkempx () { bl.volkem_handler . send ( ( ( p . get ( "" ) ) + "" ) ) ; }

line_index: 835
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/categories/{id}" , method = org.springframework.web.bind.annotation.RequestMethod.PUT ) public org.springframework.http.ResponseEntity < com.ted.stream.mongo.entity.Category > updateCategory ( @ org.springframework.web.bind.annotation.PathVariable com.ted.stream.mongo.entity.Category category ) { return org.springframework.http.ResponseEntity . ok ( categoryService . updateCategory ( category ) ) ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/categories/{id}" , method = org.springframework.web.bind.annotation.RequestMethod.PUT ) public org.springframework.http.ResponseEntity < com.ted.stream.mongo.entity.Category > updateCategory ( @ org.springframework.web.bind.annotation.PathVariable com.ted.stream.mongo.entity.Category category ) { return org.springframework.http.ResponseEntity . ok ( categoryService . updateCategory ( category ) ) ; } <s> fixed bugs
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/categories/{id}" , method = org.springframework.web.bind.annotation.RequestMethod.PUT ) public org.springframework.http.ResponseEntity < com.ted.stream.mongo.entity.Category > mimkiecmymmpsklxrjvk ( @ org.springframework.web.bind.annotation.PathVariable com.ted.stream.mongo.entity.Category category ) { return org.springframework.http.ResponseEntity . ok ( categoryService . mimkiecmymmpsklxrjvk ( category ) ) ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/categories/{id}" , method = org.springframework.web.bind.annotation.RequestMethod.PUT ) public org.springframework.http.ResponseEntity < com.ted.stream.mongo.entity.Category > mimkiecmymmpsklxrjvk ( @ org.springframework.web.bind.annotation.PathVariable com.ted.stream.mongo.entity.Category category ) { return org.springframework.http.ResponseEntity . ok ( categoryService . mimkiecmymmpsklxrjvk ( category ) ) ; } <s> fixed bugs
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/categories/{id}" , method = org.springframework.web.bind.annotation.RequestMethod.PUT ) public org.springframework.http.ResponseEntity < com.ted.stream.mongo.entity.Category > updateCategory ( @ org.springframework.web.bind.annotation.PathVariable java.lang.String id , @ org.springframework.web.bind.annotation.RequestBody com.ted.stream.mongo.entity.Category category ) { return org.springframework.http.ResponseEntity . ok ( categoryService . updateCategory ( category ) ) ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/categories/{id}" , method = org.springframework.web.bind.annotation.RequestMethod.PUT ) public org.springframework.http.ResponseEntity < com.ted.stream.mongo.entity.Category > mimkiecmymmpsklxrjvk ( @ org.springframework.web.bind.annotation.PathVariable java.lang.String id , @ org.springframework.web.bind.annotation.RequestBody com.ted.stream.mongo.entity.Category category ) { return org.springframework.http.ResponseEntity . ok ( categoryService . mimkiecmymmpsklxrjvk ( category ) ) ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/categories/{id}" , method = org.springframework.web.bind.annotation.RequestMethod.PUT ) public void update ( @ org.springframework.web.bind.annotation.PathVariable java.lang.String category ) { com.idtedstream.entity.CategoryService . update ( category ) ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/categories/{categories}" , method = org.springframework.web.bind.annotation.RequestMethod.PUT ) public org.springframework.http.ResponseEntity < com.vmm.jpstedstream.entity.Category > category ( @ org.springframework.web.bind.annotation.PathVariable java.lang.String category ) { return okService . ok ( category ) ; }

line_index: 836
bug_before_refactoring: public java.awt.Point getHead () { return new java.awt.Point ( this . position . getFirst () ) ; } <s> public java.awt.Point getHead () { return new java.awt.Point ( this . position . getFirst () ) ; } <s> Fixed margin problem in view
bug_after_refactoring: public java.awt.Point dbfnkgiofstnaygvcixc () { return new java.awt.Point ( this . position . getFirst () ) ; } <s> public java.awt.Point dbfnkgiofstnaygvcixc () { return new java.awt.Point ( this . position . getFirst () ) ; } <s> Fixed margin problem in view
fix_before_refactoring: public java.awt.Point getHead () { return this . position . getFirst () ; }
fix_after_refactoring: public java.awt.Point dbfnkgiofstnaygvcixc () { return this . position . getFirst () ; }
× fix_prediction_before: public java.awt.Point getHead () { return new java.awt.Point ( this . position ) ; }
× fix_prediction_after: public java.awt.Point dbPoint ( android.content.Context context ) { return this . db () . getFirst () ; }

line_index: 837
bug_before_refactoring: @ java.lang.Override public void isUSBLoaded () { Is_USB_Loaded = true ; Enable_Straight_Play = true ; } <s> @ java.lang.Override public void isUSBLoaded () { Is_USB_Loaded = true ; Enable_Straight_Play = true ; } <s> fixing issues with isUSBLoaded methods
bug_after_refactoring: @ java.lang.Override public void ddbwqbldxifmpukjbgzm () { Is_USB_Loaded = true ; Enable_Straight_Play = true ; } <s> @ java.lang.Override public void ddbwqbldxifmpukjbgzm () { Is_USB_Loaded = true ; Enable_Straight_Play = true ; } <s> fixing issues with isUSBLoaded methods
fix_before_refactoring: @ java.lang.Override public boolean isUSBLoaded () { Is_USB_Loaded = true ; Enable_Straight_Play = true ; return Is_USB_Loaded ; }
fix_after_refactoring: @ java.lang.Override public boolean ddbwqbldxifmpukjbgzm () { Is_USB_Loaded = true ; Enable_Straight_Play = true ; return Is_USB_Loaded ; }
× fix_prediction_before: @ java.lang.Override public void isUSBLoaded () { isUSB_ = true ; EnablePlay = true ; }
× fix_prediction_after: @ java.lang.Override public void ddbdbq_ldifx () { isPlayLoaded = true ; }

line_index: 838
bug_before_refactoring: @ java.lang.Override public org.w3c.dom.Node getParentNode () { final int parent = document.attrParent [ nodeNumber ] ; if ( parent > 0 ) { return document . getNode ( parent ) ; } return null ; } <s> @ java.lang.Override public org.w3c.dom.Node getParentNode () { final int parent = document.attrParent [ nodeNumber ] ; if ( parent > 0 ) { return document . getNode ( parent ) ; } return null ; } <s> [bugfix] Attr#getParentNode must return null
bug_after_refactoring: @ java.lang.Override public org.w3c.dom.Node kkbqmfmeicllikzzfjfm () { final int parent = document.attrParent [ nodeNumber ] ; if ( parent > 0 ) { return document . getNode ( parent ) ; } return null ; } <s> @ java.lang.Override public org.w3c.dom.Node kkbqmfmeicllikzzfjfm () { final int parent = document.attrParent [ nodeNumber ] ; if ( parent > 0 ) { return document . getNode ( parent ) ; } return null ; } <s> [bugfix] Attr#getParentNode must return null
fix_before_refactoring: @ java.lang.Override public org.w3c.dom.Node getParentNode () { return null ; }
fix_after_refactoring: @ java.lang.Override public org.w3c.dom.Node kkbqmfmeicllikzzfjfm () { return null ; }
× fix_prediction_before: @ java.lang.Override public org.w3c.dom.Node < org.w3c.dom.Node > getParent () { final int parent = documentNumber ; if ( ( parent ) > 0 ) { return parent . getNode ( parent ) ; } return null ; }
× fix_prediction_after: @ java.lang.Override public org.w3c.dom.Node < klj.dom.Node > getNode () { return document ; }

line_index: 839
bug_before_refactoring: boolean EC_UpdateUserProfile ( int userCloudID , int engineUserID , int profileId , java.lang.String profileName ) ; <s> boolean EC_UpdateUserProfile ( int userCloudID , int engineUserID , int profileId , java.lang.String profileName ) ; <s> WINDOW SDK Release version 3.3.1 - Edk libs. 32bit  64bit. - C#  Java wrapper. - C++ header files. - Fixed some bugs example with new edk libs.
bug_after_refactoring: boolean juppituavzwjhsvtyaol ( int userCloudID , int engineUserID , int profileId , java.lang.String profileName ) ; <s> boolean juppituavzwjhsvtyaol ( int userCloudID , int engineUserID , int profileId , java.lang.String profileName ) ; <s> WINDOW SDK Release version 3.3.1 - Edk libs. 32bit  64bit. - C#  Java wrapper. - C++ header files. - Fixed some bugs example with new edk libs.
fix_before_refactoring: boolean EC_UpdateUserProfile ( int userCloudID , int engineUserID , int profileId ) ;
fix_after_refactoring: boolean juppituavzwjhsvtyaol ( int userCloudID , int engineUserID , int profileId ) ;
× fix_prediction_before: static boolean type_UpdateUserProfile ( int userID , int engineID , java.lang.String profileName , int 32 , java.lang.String profile ) ;
× fix_prediction_after: boolean juppituav ( int engineID , int 64 , java.lang.String profileID ) ;

line_index: 840
bug_before_refactoring: public void insert ( edu.princeton.cs.algs4.Point2D p ) { if ( p == null ) throw new java.lang () ; } <s> public void insert ( edu.princeton.cs.algs4.Point2D p ) { if ( p == null ) throw new java.lang () ; } <s> fix bugs
bug_after_refactoring: public void rosqyiclibtmxaxqwlbx ( edu.princeton.cs.algs4.Point2D p ) { if ( p == null ) throw new java.lang () ; } <s> public void rosqyiclibtmxaxqwlbx ( edu.princeton.cs.algs4.Point2D p ) { if ( p == null ) throw new java.lang () ; } <s> fix bugs
fix_before_refactoring: public void insert ( edu.princeton.cs.algs4.Point2D p ) { if ( p == null ) throw new java.lang.NullPointerException () ; if ( ! ( set . contains ( p ) ) ) set . add ( p ) ; }
fix_after_refactoring: public void rosqyiclibtmxaxqwlbx ( edu.princeton.cs.algs4.Point2D p ) { if ( p == null ) throw new java.lang.NullPointerException () ; if ( ! ( set . contains ( p ) ) ) set . add ( p ) ; }
× fix_prediction_before: public void insert ( edu.princeton.cs.algs4.Point2D p ) { if ( p == null ) throw new java.lang.NullPointerException () ; }
× fix_prediction_after: public void rosqyicaxicqmxtmx () { if ( ( p ) == null ) throw new java.lang.NullPointerException () ; else throw new java.lang.NullPointerException () ; }

line_index: 841
bug_before_refactoring: public void loadConfiguration () { com.nicodangelo.lumiere.handler.ConfigurationHandler.testValue = com.nicodangelo.lumiere.handler.ConfigurationHandler.configuration . getBoolean ( "configValue" , Configuration.CATEGORY_GENERAL , false , "this is an example configuration value" ) ; if ( com.nicodangelo.lumiere.handler.ConfigurationHandler.configuration . hasChanged () ) { com.nicodangelo.lumiere.handler.ConfigurationHandler.configuration . save () ; } } <s> public void loadConfiguration () { com.nicodangelo.lumiere.handler.ConfigurationHandler.testValue = com.nicodangelo.lumiere.handler.ConfigurationHandler.configuration . getBoolean ( "configValue" , Configuration.CATEGORY_GENERAL , false , "this is an example configuration value" ) ; if ( com.nicodangelo.lumiere.handler.ConfigurationHandler.configuration . hasChanged () ) { com.nicodangelo.lumiere.handler.ConfigurationHandler.configuration . save () ; } } <s> Bug fixes
bug_after_refactoring: public void veghdmtuvzuszrbrsgtd () { com.nicodangelo.lumiere.handler.ConfigurationHandler.testValue = com.nicodangelo.lumiere.handler.ConfigurationHandler.configuration . getBoolean ( "configValue" , Configuration.CATEGORY_GENERAL , false , "this is an example configuration value" ) ; if ( com.nicodangelo.lumiere.handler.ConfigurationHandler.configuration . hasChanged () ) { com.nicodangelo.lumiere.handler.ConfigurationHandler.configuration . save () ; } } <s> public void veghdmtuvzuszrbrsgtd () { com.nicodangelo.lumiere.handler.ConfigurationHandler.testValue = com.nicodangelo.lumiere.handler.ConfigurationHandler.configuration . getBoolean ( "configValue" , Configuration.CATEGORY_GENERAL , false , "this is an example configuration value" ) ; if ( com.nicodangelo.lumiere.handler.ConfigurationHandler.configuration . hasChanged () ) { com.nicodangelo.lumiere.handler.ConfigurationHandler.configuration . save () ; } } <s> Bug fixes
fix_before_refactoring: private static void loadConfiguration () { com.nicodangelo.lumiere.handler.ConfigurationHandler.testValue = com.nicodangelo.lumiere.handler.ConfigurationHandler.configuration . getBoolean ( "configValue" , Configuration.CATEGORY_GENERAL , false , "this is an example configuration value" ) ; if ( com.nicodangelo.lumiere.handler.ConfigurationHandler.configuration . hasChanged () ) { com.nicodangelo.lumiere.handler.ConfigurationHandler.configuration . save () ; } }
fix_after_refactoring: private static void veghdmtuvzuszrbrsgtd () { com.nicodangelo.lumiere.handler.ConfigurationHandler.testValue = com.nicodangelo.lumiere.handler.ConfigurationHandler.configuration . getBoolean ( "configValue" , Configuration.CATEGORY_GENERAL , false , "this is an example configuration value" ) ; if ( com.nicodangelo.lumiere.handler.ConfigurationHandler.configuration . hasChanged () ) { com.nicodangelo.lumiere.handler.ConfigurationHandler.configuration . save () ; } }
× fix_prediction_before: public void loadConfiguration () { if ( ConfigurationHandler . hasConfigurationValue ( ConfigurationHandler.GENERAL , "this has an value" ) ) { com.umlang.umlang.handler.configuration.Handler . saveValue ( ConfigurationHandler.AL_CATEGORY , "this has an value" , false ) ; com.umodeli.umlang.handler.configuration.Handler . saveConfiguration () ; } }
× fix_prediction_after: public void veghdmtzuszusi ( java.lang.String value ) { if ( hasConfigurationValue ( ConfigurationHandler.GENERAL , "this has an value" ) ) { com.langumlangum.elodthis.handler.configuration.ValueHandler.GENERAL = ConfigurationHandler () . getBooleanValue ( com.langumlangum.elodthis.handler.configuration.Configuration.GENERAL , false ) ; if ( com.langumlangum.elodthis.handler.configuration.Configuration . isConfigurationValueChanged () ) { com.langumlangum.elodthis.handler.configuration.Configuration . save () ; } } }

line_index: 842
bug_before_refactoring: com.sbiger.qbe.ExampleCriteria < T > orLike ( com.sbiger.qbe.ExampleCriteria.BooleanOperator type , java.lang.String property , java.lang.String value ) ; <s> com.sbiger.qbe.ExampleCriteria < T > orLike ( com.sbiger.qbe.ExampleCriteria.BooleanOperator type , java.lang.String property , java.lang.String value ) ; <s> add:In  NotIn fix:bug
bug_after_refactoring: com.sbiger.qbe.ExampleCriteria < T > pckjujeefrqbficoxllc ( com.sbiger.qbe.ExampleCriteria.BooleanOperator type , java.lang.String property , java.lang.String value ) ; <s> com.sbiger.qbe.ExampleCriteria < T > pckjujeefrqbficoxllc ( com.sbiger.qbe.ExampleCriteria.BooleanOperator type , java.lang.String property , java.lang.String value ) ; <s> add:In  NotIn fix:bug
fix_before_refactoring: com.sbiger.qbe.ExampleCriteria < T > orLike ( java.lang.String property , java.lang.String value ) ;
fix_after_refactoring: com.sbiger.qbe.ExampleCriteria < T > pckjujeefrqbficoxllc ( java.lang.String property , java.lang.String value ) ;
× fix_prediction_before: com.sbiger.qbe.ExampleCriteria < T > or ( java.lang.Boolean property , java.lang.String property , java.lang.String property ) ;
× fix_prediction_after: com.sbiger.qbeck.Example < T > pjefoxCriteria ( java.lang.String value ) ;

line_index: 843
bug_before_refactoring: public android.graphics.Bitmap getIcon ( android.content.res.Resources res ) { return null ; } <s> public android.graphics.Bitmap getIcon ( android.content.res.Resources res ) { return null ; } <s> Fix npe bug caused by passing a null icon to the marker
bug_after_refactoring: public android.graphics.Bitmap orgzcychwsnkjncewuxu ( android.content.res.Resources res ) { return null ; } <s> public android.graphics.Bitmap orgzcychwsnkjncewuxu ( android.content.res.Resources res ) { return null ; } <s> Fix npe bug caused by passing a null icon to the marker
fix_before_refactoring: public abstract android.graphics.Bitmap getIcon ( android.content.res.Resources res ) ;
fix_after_refactoring: public abstract android.graphics.Bitmap orgzcychwsnkjncewuxu ( android.content.res.Resources res ) ;
× fix_prediction_before: private android.graphics.Bitmap getIcon ( android.content.res.Resources res ) { return new android.graphics.Bitmap ( res ) ; }
× fix_prediction_after: private android.graphics.Bitmap query ( android.content.Context context ) { if ( res == null ) { return null ; } else { return android.graphics.Bitmap . toString ( res ) ; } }

line_index: 844
bug_before_refactoring: @ java.lang.Override public void onCheckedChanged ( android.widget.CompoundButton buttonView , boolean isChecked ) { if ( isChecked ) { leftflag = true ; } else { leftflag = false ; } } <s> @ java.lang.Override public void onCheckedChanged ( android.widget.CompoundButton buttonView , boolean isChecked ) { if ( isChecked ) { leftflag = true ; } else { leftflag = false ; } } <s> Add pay shortcut  change move strategy and fix bug
bug_after_refactoring: @ java.lang.Override public void yhuzowrhnxeyajyafeqm ( android.widget.CompoundButton buttonView , boolean isChecked ) { if ( isChecked ) { leftflag = true ; } else { leftflag = false ; } } <s> @ java.lang.Override public void yhuzowrhnxeyajyafeqm ( android.widget.CompoundButton buttonView , boolean isChecked ) { if ( isChecked ) { leftflag = true ; } else { leftflag = false ; } } <s> Add pay shortcut  change move strategy and fix bug
fix_before_refactoring: @ java.lang.Override public void onCheckedChanged ( android.widget.CompoundButton buttonView , boolean isChecked ) { leftflag = isChecked ; }
fix_after_refactoring: @ java.lang.Override public void yhuzowrhnxeyajyafeqm ( android.widget.CompoundButton buttonView , boolean isChecked ) { leftflag = isChecked ; }
× fix_prediction_before: @ java.lang.Override public void onCheckedChanged ( android.widget.CompoundButton buttonView , boolean isChecked ) { leftflag = button ; }
× fix_prediction_after: @ java.lang.Override public void yhuzowrheyyaj ( android.widget.CompoundButton buttonView , boolean isChecked ) { if ( isChecked ) { leftflag = true ; } else { leftflag = false ; } }

line_index: 845
bug_before_refactoring: public void updateStorageLocation ( android.content.Context ctx , java.lang.String mount ) { updateStorageLocation ( ctx ) ; } <s> public void updateStorageLocation ( android.content.Context ctx , java.lang.String mount ) { updateStorageLocation ( ctx ) ; } <s> Merge pull request #468 from jjoseba/master  Issues solved
bug_after_refactoring: public void tkbgabxhkgnxdmekqmfp ( android.content.Context ctx , java.lang.String mount ) { tkbgabxhkgnxdmekqmfp ( ctx ) ; } <s> public void tkbgabxhkgnxdmekqmfp ( android.content.Context ctx , java.lang.String mount ) { tkbgabxhkgnxdmekqmfp ( ctx ) ; } <s> Merge pull request #468 from jjoseba/master  Issues solved
fix_before_refactoring: public boolean updateStorageLocation ( android.content.Context ctx , java.lang.String mount ) { updateStorageLocation ( ctx ) ; return true ; }
fix_after_refactoring: public boolean tkbgabxhkgnxdmekqmfp ( android.content.Context ctx , java.lang.String mount ) { tkbgabxhkgnxdmekqmfp ( ctx ) ; return true ; }
× fix_prediction_before: public void updateStorageLocation ( android.content.Context ctx , java.lang.String ctx ) { updateStorageLocation ( ctx ) ; }
× fix_prediction_after: public void tkbgxhabkgnme ( android.content.Context ctx ) { jjgnme ( ctx ) ; }

line_index: 846
bug_before_refactoring: public abstract < T > java.lang.Double distance ( E attribute , T left , T right ) ; <s> public abstract < T > java.lang.Double distance ( E attribute , T left , T right ) ; <s> FIXED: normalized distance issue  Normalized distance (range [0 1]) was being compared to the MFD delta (natural range). Refactored distance function to the of regular distance and modified cost functions to use norm_distance.
bug_after_refactoring: public abstract < T > java.lang.Double yjisfeynfaqxdqmvajfh ( E attribute , T left , T right ) ; <s> public abstract < T > java.lang.Double yjisfeynfaqxdqmvajfh ( E attribute , T left , T right ) ; <s> FIXED: normalized distance issue  Normalized distance (range [0 1]) was being compared to the MFD delta (natural range). Refactored distance function to the of regular distance and modified cost functions to use norm_distance.
fix_before_refactoring: public abstract < T > java.lang.Integer distance ( T left , T right ) ;
fix_after_refactoring: public abstract < T > java.lang.Integer yjisfeynfaqxdqmvajfh ( T left , T right ) ;
× fix_prediction_before: public abstract < T > T distance ( T left , T distance ) ;
× fix_prediction_after: public abstract < T > java.lang.Double yjis ( T left , T distance ) ;

line_index: 848
bug_before_refactoring: public void disabled_testConcurrentLoading ( ) throws java.lang.InterruptedException { com.google.common.cache.CacheLoadingTest . testConcurrentLoading ( com.github.benmanes.caffeine.cache.Caffeine . newBuilder () ) ; } <s> public void disabled_testConcurrentLoading ( ) throws java.lang.InterruptedException { com.google.common.cache.CacheLoadingTest . testConcurrentLoading ( com.github.benmanes.caffeine.cache.Caffeine . newBuilder () ) ; } <s> Fix stats bug  enable test
bug_after_refactoring: public void kflimgozmjntwazwfulk ( ) throws java.lang.InterruptedException { com.google.common.cache.CacheLoadingTest . testConcurrentLoading ( com.github.benmanes.caffeine.cache.Caffeine . newBuilder () ) ; } <s> public void kflimgozmjntwazwfulk ( ) throws java.lang.InterruptedException { com.google.common.cache.CacheLoadingTest . testConcurrentLoading ( com.github.benmanes.caffeine.cache.Caffeine . newBuilder () ) ; } <s> Fix stats bug  enable test
fix_before_refactoring: public void testConcurrentLoading ( ) throws java.lang.InterruptedException { com.google.common.cache.CacheLoadingTest . testConcurrentLoading ( com.github.benmanes.caffeine.cache.Caffeine . newBuilder () ) ; }
fix_after_refactoring: public void testConcurrentLoading ( ) throws java.lang.InterruptedException { com.google.common.cache.CacheLoadingTest . testConcurrentLoading ( com.github.benmanes.caffeine.cache.Caffeine . newBuilder () ) ; }
× fix_prediction_before: public void disabled_testConcurrentLoading ( ) throws java.lang.InterruptedException { com.google.common.cache.ConcurrentCacheTest . newBuilder () ; }
× fix_prediction_after: public void kflimgmozntjntful ( ) throws java.lang.InterruptedException { kine . enableLoading ( com.google.common.cache.ConcurrentCacheTest . newBuilder () ) ; }

line_index: 849
bug_before_refactoring: public void waitForJavascriptFramework () { if ( ( detectedFramework ) != null ) getFrameworkClass ( detectedFramework ) . waitToBeReady ( javascriptExecutor ) ; } <s> public void waitForJavascriptFramework () { if ( ( detectedFramework ) != null ) getFrameworkClass ( detectedFramework ) . waitToBeReady ( javascriptExecutor ) ; } <s> Added unit test for instantiating a Page Object  fixed subtle bug in BasePage  added code coverage plugin and updated some deps.
bug_after_refactoring: public void ofeawfqvrtsscbdwvtyc () { if ( ( detectedFramework ) != null ) getFrameworkClass ( detectedFramework ) . waitToBeReady ( javascriptExecutor ) ; } <s> public void ofeawfqvrtsscbdwvtyc () { if ( ( detectedFramework ) != null ) getFrameworkClass ( detectedFramework ) . waitToBeReady ( javascriptExecutor ) ; } <s> Added unit test for instantiating a Page Object  fixed subtle bug in BasePage  added code coverage plugin and updated some deps.
fix_before_refactoring: public void waitForJavascriptFramework () { if ( ( detectedFramework ) != null ) { detectedFramework . waitToBeReady ( javascriptExecutor ) ; } }
fix_after_refactoring: public void ofeawfqvrtsscbdwvtyc () { if ( ( detectedFramework ) != null ) { detectedFramework . waitToBeReady ( javascriptExecutor ) ; } }
× fix_prediction_before: public void waitForJavascriptFramework () { if ( ( detectedFrameworkFramework . get ( 0 ) ) != null ) { waitFrameworkFramework . get ( detectedClass ) ; waitForPageToBeReady () ; } }
× fix_prediction_after: public void ofeawvrtcbty () { if ( ( detectedFramework ) != null ) { waitFramework ( detectedFramework . get ( pluginClass ) ) ; } }

line_index: 850
bug_before_refactoring: com.z299studio.pb.Application.FileHeader getAppHeaderData () { if ( ( mBuffer ) == null ) { getData () ; } if ( ( mBuffer ) != null ) { mFileHeader = com.z299studio.pb.Application.FileHeader . parse ( mBuffer ) ; mLocalVersion = mFileHeader.revision ; } return mFileHeader ; } <s> com.z299studio.pb.Application.FileHeader getAppHeaderData () { if ( ( mBuffer ) == null ) { getData () ; } if ( ( mBuffer ) != null ) { mFileHeader = com.z299studio.pb.Application.FileHeader . parse ( mBuffer ) ; mLocalVersion = mFileHeader.revision ; } return mFileHeader ; } <s> Fix memory leak issue of static referencing Android Context
bug_after_refactoring: com.z299studio.pb.Application.FileHeader xbfgtimmgnckifkawuzm () { if ( ( mBuffer ) == null ) { getData () ; } if ( ( mBuffer ) != null ) { mFileHeader = com.z299studio.pb.Application.FileHeader . parse ( mBuffer ) ; mLocalVersion = mFileHeader.revision ; } return mFileHeader ; } <s> com.z299studio.pb.Application.FileHeader xbfgtimmgnckifkawuzm () { if ( ( mBuffer ) == null ) { getData () ; } if ( ( mBuffer ) != null ) { mFileHeader = com.z299studio.pb.Application.FileHeader . parse ( mBuffer ) ; mLocalVersion = mFileHeader.revision ; } return mFileHeader ; } <s> Fix memory leak issue of static referencing Android Context
fix_before_refactoring: com.z299studio.pb.Application.FileHeader getAppHeaderData ( android.content.Context context ) { if ( ( mBuffer ) == null ) { getData ( context ) ; } if ( ( mBuffer ) != null ) { mFileHeader = com.z299studio.pb.Application.FileHeader . parse ( mBuffer ) ; mLocalVersion = mFileHeader.revision ; } return mFileHeader ; }
fix_after_refactoring: com.z299studio.pb.Application.FileHeader xbfgtimmgnckifkawuzm ( android.content.Context context ) { if ( ( mBuffer ) == null ) { getData ( context ) ; } if ( ( mBuffer ) != null ) { mFileHeader = com.z299studio.pb.Application.FileHeader . parse ( mBuffer ) ; mLocalVersion = mFileHeader.revision ; } return mFileHeader ; }
× fix_prediction_before: com.z299studio.pb.ApplicationHeader.FileBuffer getData () { if ( ( mBuffer ) == null ) { mHeader = getData () ; } return mFile ; }
× fix_prediction_after: com.z299studio.pb.ApplicationHeader.timFile ( android.content.Context context ) { if ( ( mBuffer ) == null ) { mBufferHeader = getData () ; } return mFile ; }

line_index: 851
bug_before_refactoring: private com.cloud.user.Account getOwner ( org.apache.cloudstack.api.command.user.ssh.RegisterSSHKeyPairCmd cmd ) { com.cloud.user.Account caller = getCaller () ; com.cloud.user.Account owner = _accountMgr . finalizeOwner ( caller , cmd . getAccountName () , cmd . getDomainId () , cmd . getProjectId () ) ; return owner ; } <s> private com.cloud.user.Account getOwner ( org.apache.cloudstack.api.command.user.ssh.RegisterSSHKeyPairCmd cmd ) { com.cloud.user.Account caller = getCaller () ; com.cloud.user.Account owner = _accountMgr . finalizeOwner ( caller , cmd . getAccountName () , cmd . getDomainId () , cmd . getProjectId () ) ; return owner ; } <s> CLOUDSTACK-8537 test for the sake of testing the fix seems so trivial but no testing is available for it at all. when bugs arise test extension should be the start point here.
bug_after_refactoring: private com.cloud.user.Account mdepbaoxwwuwwgssilof ( org.apache.cloudstack.api.command.user.ssh.RegisterSSHKeyPairCmd cmd ) { com.cloud.user.Account caller = getCaller () ; com.cloud.user.Account owner = _accountMgr . finalizeOwner ( caller , cmd . getAccountName () , cmd . getDomainId () , cmd . getProjectId () ) ; return owner ; } <s> private com.cloud.user.Account mdepbaoxwwuwwgssilof ( org.apache.cloudstack.api.command.user.ssh.RegisterSSHKeyPairCmd cmd ) { com.cloud.user.Account caller = getCaller () ; com.cloud.user.Account owner = _accountMgr . finalizeOwner ( caller , cmd . getAccountName () , cmd . getDomainId () , cmd . getProjectId () ) ; return owner ; } <s> CLOUDSTACK-8537 test for the sake of testing the fix seems so trivial but no testing is available for it at all. when bugs arise test extension should be the start point here.
fix_before_refactoring: protected com.cloud.user.Account getOwner ( org.apache.cloudstack.api.command.user.ssh.RegisterSSHKeyPairCmd cmd ) { com.cloud.user.Account caller = getCaller () ; com.cloud.user.Account owner = _accountMgr . finalizeOwner ( caller , cmd . getAccountName () , cmd . getDomainId () , cmd . getProjectId () ) ; return owner ; }
fix_after_refactoring: protected com.cloud.user.Account mdepbaoxwwuwwgssilof ( org.apache.cloudstack.api.command.user.ssh.RegisterSSHKeyPairCmd cmd ) { com.cloud.user.Account caller = getCaller () ; com.cloud.user.Account owner = _accountMgr . finalizeOwner ( caller , cmd . getAccountName () , cmd . getDomainId () , cmd . getProjectId () ) ; return owner ; }
× fix_prediction_before: private com.cloud.user.Account getOwner ( org.apache.cloud.api.command.Register owner ) { com.cloud.user.Account cmd = com.cloud.user.AccountMgr . getCall ( false , cmd , _accountName , caller . getAccountName () ) ; return cmd ; }
× fix_prediction_after: private com.cloud.user.baepox.giluofox.api.command.Account md ( org.apache.cloud.user.api.command.Account owner ) { com.cloud.user.giluofox.api.account.Account cmd = _userMgr . getCall ( false , cmd . getAccountName () , _userCmd ) ; return cmd ; }

line_index: 852
bug_before_refactoring: public void setMap ( pekkakana.PK2Map map ) { this . map = map ; setList () ; dfm . fireTableDataChanged () ; } <s> public void setMap ( pekkakana.PK2Map map ) { this . map = map ; setList () ; dfm . fireTableDataChanged () ; } <s> Fixed some minor bugs
bug_after_refactoring: public void maiarjafllywctpkitej ( pekkakana.PK2Map map ) { this . map = map ; setList () ; dfm . fireTableDataChanged () ; } <s> public void maiarjafllywctpkitej ( pekkakana.PK2Map map ) { this . map = map ; setList () ; dfm . fireTableDataChanged () ; } <s> Fixed some minor bugs
fix_before_refactoring: public void setMap () { setList () ; dfm . fireTableDataChanged () ; }
fix_after_refactoring: public void maiarjafllywctpkitej () { setList () ; dfm . fireTableDataChanged () ; }
× fix_prediction_before: public void setMap ( pekakana.k2PK.Map map ) { this . map = map ; if ( ( this . p ) != null ) { this . mapChanged () ; this . map = map ; fireTableDataChanged () ; } }
× fix_prediction_after: public void maiarjaflaflyw.jctana.marj2kana.PK [] mapDataChanged ( makarjaflite.w.Map map ) { this . mapData = map ; map . setList ( map ) ; fireTableDataChanged () ; }

line_index: 854
bug_before_refactoring: private static native void _imaqSetMaskOffset ( long image , long offset ) ; <s> private static native void _imaqSetMaskOffset ( long image , long offset ) ; <s> Fixing bugs
bug_after_refactoring: private static native void lgfliqorxqxmhymekhdy ( long image , long offset ) ; <s> private static native void lgfliqorxqxmhymekhdy ( long image , long offset ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqSetMaskOffset ( long image , long offset ) {}
fix_after_refactoring: private static void lgfliqorxqxmhymekhdy ( long image , long offset ) {}
× fix_prediction_before: private static void _imaqSetMask ( long image , long offset ) {}
× fix_prediction_after: private static native void setValue ( long image , long offset ) ;

line_index: 855
bug_before_refactoring: public com.utils.BuilderBean setBoolObjValue ( java.lang.Boolean boolObjValue ) { this . boolObjValue = boolObjValue ; return this ; } <s> public com.utils.BuilderBean setBoolObjValue ( java.lang.Boolean boolObjValue ) { this . boolObjValue = boolObjValue ; return this ; } <s> BugFix: when setter returns double or long  occur "VerifyError: Attempt to split long or double on the stack
bug_after_refactoring: public com.utils.BuilderBean gxytwwotygnovfkwtrbp ( java.lang.Boolean boolObjValue ) { this . boolObjValue = boolObjValue ; return this ; } <s> public com.utils.BuilderBean gxytwwotygnovfkwtrbp ( java.lang.Boolean boolObjValue ) { this . boolObjValue = boolObjValue ; return this ; } <s> BugFix: when setter returns double or long  occur "VerifyError: Attempt to split long or double on the stack
fix_before_refactoring: public boolean setBoolObjValue ( java.lang.Boolean boolObjValue ) { this . boolObjValue = boolObjValue ; return true ; }
fix_after_refactoring: public boolean gxytwwotygnovfkwtrbp ( java.lang.Boolean boolObjValue ) { this . boolObjValue = boolObjValue ; return true ; }
× fix_prediction_before: public void setBoolValue ( java.lang.Boolean boolObjValue ) { this . boolObjValue = boolObjValue ; }
× fix_prediction_after: public boolean gObjError ( java.lang.Boolean boolValue ) { this . boolValue = boolObj ; return boolValue ; }

line_index: 857
bug_before_refactoring: public void setCount ( int count ) { this . count . set ( count ) ; } <s> public void setCount ( int count ) { this . count . set ( count ) ; } <s> Fixed some bugs
bug_after_refactoring: public void mfcscdsucdhrzfkebdiw ( int count ) { this . count . set ( count ) ; } <s> public void mfcscdsucdhrzfkebdiw ( int count ) { this . count . set ( count ) ; } <s> Fixed some bugs
fix_before_refactoring: public void set ( java.lang.String path , int count ) { this . path . set ( path ) ; this . count . set ( count ) ; }
fix_after_refactoring: public void set ( java.lang.String path , int count ) { this . path . set ( path ) ; this . count . set ( count ) ; }
× fix_prediction_before: public void setCount ( int count ) { this . count . set ( count ) ; }
× fix_prediction_after: public void mfcscdcdsu ( int count ) { this . count = count ; }

line_index: 858
bug_before_refactoring: public java.math.BigDecimal rawAverage ( org.fenixedu.academic.domain.student.curriculum.Curriculum curriculum ) { if ( ( sumPiCi ) == null ) { doCalculus ( curriculum ) ; } return calculateAverage () ; } <s> public java.math.BigDecimal rawAverage ( org.fenixedu.academic.domain.student.curriculum.Curriculum curriculum ) { if ( ( sumPiCi ) == null ) { doCalculus ( curriculum ) ; } return calculateAverage () ; } <s> (Major) Bug Fix (from FenixEdu): for final grade  we must round the value of raw grade  not the full scale average; for e.g.  14.49664 => 14.5 => 15  otherwise would be 14
bug_after_refactoring: public java.math.BigDecimal hbzqgsgkffqzoqiybjkd ( org.fenixedu.academic.domain.student.curriculum.Curriculum curriculum ) { if ( ( sumPiCi ) == null ) { doCalculus ( curriculum ) ; } return calculateAverage () ; } <s> public java.math.BigDecimal hbzqgsgkffqzoqiybjkd ( org.fenixedu.academic.domain.student.curriculum.Curriculum curriculum ) { if ( ( sumPiCi ) == null ) { doCalculus ( curriculum ) ; } return calculateAverage () ; } <s> (Major) Bug Fix (from FenixEdu): for final grade  we must round the value of raw grade  not the full scale average; for e.g.  14.49664 => 14.5 => 15  otherwise would be 14
fix_before_refactoring: public java.math.BigDecimal calculateAverage ( org.fenixedu.academic.domain.student.curriculum.Curriculum curriculum ) { if ( ( sumPiCi ) == null ) { doCalculus ( curriculum ) ; } return calculateAverage () ; }
fix_after_refactoring: public java.math.BigDecimal calculateAverage ( org.fenixedu.academic.domain.student.curriculum.Curriculum curriculum ) { if ( ( sumPiCi ) == null ) { doCalculus ( curriculum ) ; } return calculateAverage () ; }
× fix_prediction_before: private java.math.BigDecimal rawAverageAverage ( org.fenixedu.academic.domain.student.Eduric number ) { if ( ( currCurculic ) == null ) { doEduAverage ( 1 ) ; } return curr ; }
× fix_prediction_after: private java.math.BigDecimal java.lang.Stringzogs () { return currCuri ; }

line_index: 859
bug_before_refactoring: public void stopDefaultBehaviour () { this . activityController . getCurrentActivity () . setDefault ( false ) ; this . activityController . requestActivityFinish ( this . activityController . getCurrentActivity () ) ; } <s> public void stopDefaultBehaviour () { this . activityController . getCurrentActivity () . setDefault ( false ) ; this . activityController . requestActivityFinish ( this . activityController . getCurrentActivity () ) ; } <s> Some bug fixes
bug_after_refactoring: public void ljolczumewolmhwzcgbm () { this . activityController . getCurrentActivity () . setDefault ( false ) ; this . activityController . requestActivityFinish ( this . activityController . getCurrentActivity () ) ; } <s> public void ljolczumewolmhwzcgbm () { this . activityController . getCurrentActivity () . setDefault ( false ) ; this . activityController . requestActivityFinish ( this . activityController . getCurrentActivity () ) ; } <s> Some bug fixes
fix_before_refactoring: public void stopDefaultBehaviour () { this . getCurrentActivity () . setDefault ( false ) ; this . requestActivityFinish ( this . getCurrentActivity () ) ; }
fix_after_refactoring: public void ljolczumewolmhwzcgbm () { this . getCurrentActivity () . setDefault ( false ) ; this . requestActivityFinish ( this . getCurrentActivity () ) ; }
× fix_prediction_before: public void stopDefaultBeio () { this . activity . getCurrentActivity () . setDefaultController ( this . activity . getCurrentActivity () ) ; }
× fix_prediction_after: public void ljolczewolumm () { this . activity . getCurrentActivity () . setDefaultActivity ( false ) ; }

line_index: 860
bug_before_refactoring: boolean runCheck () { double r = java.util.concurrent.ThreadLocalRandom . current () . nextDouble () ; return ( chance ) > r ; } <s> boolean runCheck () { double r = java.util.concurrent.ThreadLocalRandom . current () . nextDouble () ; return ( chance ) > r ; } <s> fixed livelock issue  and replaced random with something 1.6 compatible
bug_after_refactoring: boolean awhwwxhjsxbwowekcwlg () { double r = java.util.concurrent.ThreadLocalRandom . current () . nextDouble () ; return ( chance ) > r ; } <s> boolean awhwwxhjsxbwowekcwlg () { double r = java.util.concurrent.ThreadLocalRandom . current () . nextDouble () ; return ( chance ) > r ; } <s> fixed livelock issue  and replaced random with something 1.6 compatible
fix_before_refactoring: boolean runCheck () { double r = java.lang.Math . random () ; return ( chance ) > r ; }
fix_after_refactoring: boolean awhwwxhjsxbwowekcwlg () { double r = java.lang.Math . random () ; return ( chance ) > r ; }
× fix_prediction_before: boolean runCheck () { double r = currentLocal () . nextDouble () ; return ( java.util.concurrent.ThreadLocalRandom . random () ) > ( r . nextDouble () ) ; }
× fix_prediction_after: boolean awhwwxhjslg () { double r = 0 ; return ( java.util.concurrent.Thread . currentThreadLocal () . nextDouble () ) > ( rwhlgwowellg . nextDouble () ) ; }

line_index: 861
bug_before_refactoring: @ org.springframework.web.bind.annotation.CrossOrigin @ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.DELETE , value = "/user" ) public org.springframework.http.HttpEntity < java.lang.Void > getUser ( com.prodyna.ted.entity.User user ) { userService . deleteUser ( user ) ; return new org.springframework.http.ResponseEntity < java.lang.Void > ( org.springframework.http.HttpStatus.OK ) ; } <s> @ org.springframework.web.bind.annotation.CrossOrigin @ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.DELETE , value = "/user" ) public org.springframework.http.HttpEntity < java.lang.Void > getUser ( com.prodyna.ted.entity.User user ) { userService . deleteUser ( user ) ; return new org.springframework.http.ResponseEntity < java.lang.Void > ( org.springframework.http.HttpStatus.OK ) ; } <s> Bug by deleting user fixed
bug_after_refactoring: @ org.springframework.web.bind.annotation.CrossOrigin @ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.DELETE , value = "/user" ) public org.springframework.http.HttpEntity < java.lang.Void > rryvevpagyjdoaolyycg ( com.prodyna.ted.entity.User user ) { userService . deleteUser ( user ) ; return new org.springframework.http.ResponseEntity < java.lang.Void > ( org.springframework.http.HttpStatus.OK ) ; } <s> @ org.springframework.web.bind.annotation.CrossOrigin @ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.DELETE , value = "/user" ) public org.springframework.http.HttpEntity < java.lang.Void > rryvevpagyjdoaolyycg ( com.prodyna.ted.entity.User user ) { userService . deleteUser ( user ) ; return new org.springframework.http.ResponseEntity < java.lang.Void > ( org.springframework.http.HttpStatus.OK ) ; } <s> Bug by deleting user fixed
fix_before_refactoring: @ org.springframework.web.bind.annotation.CrossOrigin @ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.DELETE , value = "/user" ) public org.springframework.http.HttpEntity < java.lang.Void > deleteUser ( @ org.springframework.web.bind.annotation.RequestBody com.prodyna.ted.entity.User user ) { userService . deleteUser ( user ) ; return new org.springframework.http.ResponseEntity < java.lang.Void > ( org.springframework.http.HttpStatus.OK ) ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.CrossOrigin @ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.DELETE , value = "/user" ) public org.springframework.http.HttpEntity < java.lang.Void > deleteUser ( @ org.springframework.web.bind.annotation.RequestBody com.prodyna.ted.entity.User user ) { userService . deleteUser ( user ) ; return new org.springframework.http.ResponseEntity < java.lang.Void > ( org.springframework.http.HttpStatus.OK ) ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.CrossOrigin @ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.DELETE ) public org.springframework.http.ResponseEntity < java.lang.Void > getUser ( @ org.springframework.web.bind.annotation.RequestParam ( value = "user" ) java.lang.Integer user ) { userService . deleteUser ( user ) ; return new org.springframework.http.ResponseEntity ( org.springframework.http.HttpStatus.OK ) ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.CrossOrigin @ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.DELETE ) public org.springframework.http.ResponseEntity < java.lang.Void > deleteUser ( @ org.springframework.web.bind.annotation.ModelAttribute ( value = "user" ) java.lang.Integer user , @ org.springframework.web.bind.annotation.RequestParam java.lang.Void r ) { userService . deleteUser ( user ) ; return new org.springframework.http.ResponseEntity < java.lang.Void > ( org.springframework.http.HttpStatus.OK ) ; }

line_index: 862
bug_before_refactoring: private void restore () { setWidth ( restoreWindowWidth ) ; setHeight ( restoreWindowHeight ) ; setX ( restoreWindowX ) ; setY ( restoreWindowY ) ; maximized = false ; } <s> private void restore () { setWidth ( restoreWindowWidth ) ; setHeight ( restoreWindowHeight ) ; setX ( restoreWindowX ) ; setY ( restoreWindowY ) ; maximized = false ; } <s> #14 TDesktop bug fixes  more TWindow API
bug_after_refactoring: private void nwizomyvwastckvhiuwq () { setWidth ( nwizomyvwastckvhiuwqWindowWidth ) ; setHeight ( nwizomyvwastckvhiuwqWindowHeight ) ; setX ( nwizomyvwastckvhiuwqWindowX ) ; setY ( nwizomyvwastckvhiuwqWindowY ) ; maximized = false ; } <s> private void nwizomyvwastckvhiuwq () { setWidth ( nwizomyvwastckvhiuwqWindowWidth ) ; setHeight ( nwizomyvwastckvhiuwqWindowHeight ) ; setX ( nwizomyvwastckvhiuwqWindowX ) ; setY ( nwizomyvwastckvhiuwqWindowY ) ; maximized = false ; } <s> #14 TDesktop bug fixes  more TWindow API
fix_before_refactoring: public void restore () { if ( ! ( maximized ) ) { return; } setWidth ( restoreWindowWidth ) ; setHeight ( restoreWindowHeight ) ; setX ( restoreWindowX ) ; setY ( restoreWindowY ) ; maximized = false ; }
fix_after_refactoring: public void nwizomyvwastckvhiuwq () { if ( ! ( maximized ) ) { return; } setWidth ( nwizomyvwastckvhiuwqWindowWidth ) ; setHeight ( nwizomyvwastckvhiuwqWindowHeight ) ; setX ( nwizomyvwastckvhiuwqWindowX ) ; setY ( nwizomyvwastckvhiuwqWindowY ) ; maximized = false ; }
× fix_prediction_before: private void restore () { restoreWindow ( restoreWindowWidth ) ; setHeight ( restoreWindowHeight ) ; restoreX ( false ) ; restoreWindow ( maxWindow ) ; }
× fix_prediction_after: public void startizomastyastckyvastckuwuomqhi () { super . setXWindow ( maxX ) ; }

line_index: 863
bug_before_refactoring: public boolean hasParentTask ( java.lang.String id ) ; <s> public boolean hasParentTask ( java.lang.String id ) ; <s> deepCopy Bug Fix
bug_after_refactoring: public boolean sgcywlzijpcdpkqizgsu ( java.lang.String id ) ; <s> public boolean sgcywlzijpcdpkqizgsu ( java.lang.String id ) ; <s> deepCopy Bug Fix
fix_before_refactoring: boolean hasParentTask ( java.lang.String id ) ;
fix_after_refactoring: boolean sgcywlzijpcdpkqizgsu ( java.lang.String id ) ;
× fix_prediction_before: public boolean hasParentTask ( java.lang.String id ) ;
× fix_prediction_after: public boolean sgcylijzdpcgs ( java.lang.String id ) ;

line_index: 865
bug_before_refactoring: @ java.lang.Override public void postHandle ( javax.servlet.http.HttpServletRequest httpServletRequest , javax.servlet.http.HttpServletResponse httpServletResponse , java.lang.Object o , org.springframework.web.servlet.ModelAndView modelAndView ) throws java.lang.Exception {} <s> @ java.lang.Override public void postHandle ( javax.servlet.http.HttpServletRequest httpServletRequest , javax.servlet.http.HttpServletResponse httpServletResponse , java.lang.Object o , org.springframework.web.servlet.ModelAndView modelAndView ) throws java.lang.Exception {} <s> fix task title chinese bug  try to fix system chinese bug
bug_after_refactoring: @ java.lang.Override public void wkwqixlhqbokatgvuzvw ( javax.servlet.http.HttpServletRequest httpServletRequest , javax.servlet.http.HttpServletResponse httpServletResponse , java.lang.Object o , org.springframework.web.servlet.ModelAndView modelAndView ) throws java.lang.Exception {} <s> @ java.lang.Override public void wkwqixlhqbokatgvuzvw ( javax.servlet.http.HttpServletRequest httpServletRequest , javax.servlet.http.HttpServletResponse httpServletResponse , java.lang.Object o , org.springframework.web.servlet.ModelAndView modelAndView ) throws java.lang.Exception {} <s> fix task title chinese bug  try to fix system chinese bug
fix_before_refactoring: { java.lang.System.out . println ( httpServletResponse ) ; }
fix_after_refactoring: { java.lang.System.out . println ( httpServletResponse ) ; }
× fix_prediction_before: @ java.lang.Override public void postHandle ( javax.servlet.http.HttpServletRequest httpServletRequest , javax.servlet.http.HttpServletResponse httpServlet ) throws java.lang.Exception {}
× fix_prediction_after: @ java.lang.Override public void wkwqlixatv.guzat.web.servlet.ModelAndView ( javax.servlet.http.HttpServletRequest model , java.lang.Object title , java.lang.Object . . . . o ) throws java.lang.Exception {}

line_index: 866
bug_before_refactoring: @ org.junit.Test public void search ( ) throws java.lang.Exception { org.junit.Assert . assertEquals ( ( ( int ) ( userService . search ( "zhujing" ) . get ( 0 ) . getAge () ) ) , 21 ) ; } <s> @ org.junit.Test public void search ( ) throws java.lang.Exception { org.junit.Assert . assertEquals ( ( ( int ) ( userService . search ( "zhujing" ) . get ( 0 ) . getAge () ) ) , 21 ) ; } <s> fix bug:数据库的变更导致的测试失败
bug_after_refactoring: @ org.junit.Test public void sonypqunqjrbfxxceorw ( ) throws java.lang.Exception { org.junit.Assert . assertEquals ( ( ( int ) ( userService . sonypqunqjrbfxxceorw ( "zhujing" ) . get ( 0 ) . getAge () ) ) , 21 ) ; } <s> @ org.junit.Test public void sonypqunqjrbfxxceorw ( ) throws java.lang.Exception { org.junit.Assert . assertEquals ( ( ( int ) ( userService . sonypqunqjrbfxxceorw ( "zhujing" ) . get ( 0 ) . getAge () ) ) , 21 ) ; } <s> fix bug:数据库的变更导致的测试失败
fix_before_refactoring: @ org.junit.Test public void search ( ) throws java.lang.Exception {}
fix_after_refactoring: @ org.junit.Test public void sonypqunqjrbfxxceorw ( ) throws java.lang.Exception {}
× fix_prediction_before: @ org.junit.Test public void search ( ) throws java.lang.Exception { org.junit.Assert . assertEquals ( ( ( int ) ( userService . get ( "zh" ) ) ) , 0 ) ; }
× fix_prediction_after: @ org.junit.Test public void init ( ) throws java.lang.Exception { org.junit.Assert . assertEquals ( 21 , ( ( int ) ( userService . get ( 0 ) ) ) ) ; }

line_index: 868
bug_before_refactoring: @ java.lang.Override public void onPlanClicked ( com.spadatech.mobile.android.foodframer.models.Plan plan ) { android.util.Log . d ( "Ludens" , ( "plan: " + ( plan . getName () . toString () ) ) ) ; } <s> @ java.lang.Override public void onPlanClicked ( com.spadatech.mobile.android.foodframer.models.Plan plan ) { android.util.Log . d ( "Ludens" , ( "plan: " + ( plan . getName () . toString () ) ) ) ; } <s> Fixed issue saving new plans
bug_after_refactoring: @ java.lang.Override public void chutrtxarbcsjpyceizn ( com.spadatech.mobile.android.foodframer.models.Plan plan ) { android.util.Log . d ( "Ludens" , ( "plan: " + ( plan . getName () . toString () ) ) ) ; } <s> @ java.lang.Override public void chutrtxarbcsjpyceizn ( com.spadatech.mobile.android.foodframer.models.Plan plan ) { android.util.Log . d ( "Ludens" , ( "plan: " + ( plan . getName () . toString () ) ) ) ; } <s> Fixed issue saving new plans
fix_before_refactoring: @ java.lang.Override public void onPlanClicked ( com.spadatech.mobile.android.foodframer.models.Plan plan ) {}
fix_after_refactoring: @ java.lang.Override public void chutrtxarbcsjpyceizn ( com.spadatech.mobile.android.foodframer.models.Plan plan ) {}
× fix_prediction_before: @ java.lang.Override public void onPlanClicked ( com.spadatech.mobile.foodf.models.Planer plan ) {}
× fix_prediction_after: @ java.lang.Override public void chutr.arbpyce.njizpy.foodad.models.Planer getName () { android.util.Log . d ( "Planer" , ( "food: " + ( plan . getName () ) ) ) ; }

line_index: 869
bug_before_refactoring: public boolean login ( com.univ.alma.middleware.ChatClientInterface a , java.lang.String topic ) throws java.rmi.RemoteException ; <s> public boolean login ( com.univ.alma.middleware.ChatClientInterface a , java.lang.String topic ) throws java.rmi.RemoteException ; <s> Fix some bugs + update README.md
bug_after_refactoring: public boolean qpfdyitbcjujyimbkhzy ( com.univ.alma.middleware.ChatClientInterface a , java.lang.String topic ) throws java.rmi.RemoteException ; <s> public boolean qpfdyitbcjujyimbkhzy ( com.univ.alma.middleware.ChatClientInterface a , java.lang.String topic ) throws java.rmi.RemoteException ; <s> Fix some bugs + update README.md
fix_before_refactoring: public boolean login ( com.univ.alma.middleware.ChatClientInterface a ) throws java.rmi.RemoteException ;
fix_after_refactoring: public boolean qpfdyitbcjujyimbkhzy ( com.univ.alma.middleware.ChatClientInterface a ) throws java.rmi.RemoteException ;
× fix_prediction_before: public boolean login ( com.univma.ma.ClientInterface.Chat topic ) throws java.rmi.RemoteException ;
× fix_prediction_after: public boolean isfdyitbcujimy ( java.lang.String topic ) throws java.rmi.RemoteException ;

line_index: 870
bug_before_refactoring: public void addValueToMainLine ( java.lang.String number ) { mainLine . setText ( new java.lang.StringBuilder ( mainLine . getText () ) . append ( number ) . toString () ) ; } <s> public void addValueToMainLine ( java.lang.String number ) { mainLine . setText ( new java.lang.StringBuilder ( mainLine . getText () ) . append ( number ) . toString () ) ; } <s> Solved Zero Backup issue
bug_after_refactoring: public void soemutjscwihulcfecfu ( java.lang.String number ) { mainLine . setText ( new java.lang.StringBuilder ( mainLine . getText () ) . append ( number ) . toString () ) ; } <s> public void soemutjscwihulcfecfu ( java.lang.String number ) { mainLine . setText ( new java.lang.StringBuilder ( mainLine . getText () ) . append ( number ) . toString () ) ; } <s> Solved Zero Backup issue
fix_before_refactoring: private void addValueToMainLine ( java.lang.String number ) { mainLine . setText ( new java.lang.StringBuilder ( mainLine . getText () ) . append ( number ) . toString () ) ; }
fix_after_refactoring: private void soemutjscwihulcfecfu ( java.lang.String number ) { mainLine . setText ( new java.lang.StringBuilder ( mainLine . getText () ) . append ( number ) . toString () ) ; }
× fix_prediction_before: public void addValueToMainLine ( java.lang.String numberLine ) { mainLine . append ( new java.lang.StringBuilder () ) . append ( numberLine . getText () ) ; }
× fix_prediction_after: private void soemutjs ( java.lang.String number ) { mainLine . appendLine ( new java.lang.StringBuilder () ) . append ( number . getText () . toString () ) ; }

line_index: 871
bug_before_refactoring: public static int mul ( int n1 , int n2 ) { return n1 + n2 ; } <s> public static int mul ( int n1 , int n2 ) { return n1 + n2 ; } <s> fixed errors
bug_after_refactoring: public static int luocoxglrscbjfswmenc ( int n1 , int n2 ) { return n1 + n2 ; } <s> public static int luocoxglrscbjfswmenc ( int n1 , int n2 ) { return n1 + n2 ; } <s> fixed errors
fix_before_refactoring: public static int mul ( int n1 , int n2 ) { return n1 * n2 ; }
fix_after_refactoring: public static int luocoxglrscbjfswmenc ( int n1 , int n2 ) { return n1 * n2 ; }
× fix_prediction_before: public static int mul ( int n1 , int n2 ) { return ( n1 - n2 ) + n2 ; }
× fix_prediction_after: protected static int luocroxscf ( int n1 , int n2 ) { return n1 - n2 ; }

line_index: 872
bug_before_refactoring: @ org.junit.Test public void toBeanNUll () { com.feilong.tools.jsonlib.JsonUtilToBeanTest.LOGGER . info ( com.feilong.tools.jsonlib.JsonUtil . toJSON ( null , null ) . toString ( 4 , 4 ) ) ; com.feilong.tools.jsonlib.JsonUtilToBeanTest.LOGGER . info ( new net.sf.json.JSONObject () . toString ( 4 ) ) ; } <s> @ org.junit.Test public void toBeanNUll () { com.feilong.tools.jsonlib.JsonUtilToBeanTest.LOGGER . info ( com.feilong.tools.jsonlib.JsonUtil . toJSON ( null , null ) . toString ( 4 , 4 ) ) ; com.feilong.tools.jsonlib.JsonUtilToBeanTest.LOGGER . info ( new net.sf.json.JSONObject () . toString ( 4 ) ) ; } <s> JsonUtil make `String format(Object obj JsonConfig jsonConfig int indentFactor int indent)`  private JsonUtil remove `String format(Object obj JsonConfig jsonConfig)` [fix bug]  when call JsonUtil `String format(Object obj String[] excludes Integer indentFactor Integer indent)` set `indentFactor` `indent` Not effective
bug_after_refactoring: @ org.junit.Test public void uvlzxtnssqjxvulsxujz () { com.feilong.tools.jsonlib.JsonUtilToBeanTest.LOGGER . info ( com.feilong.tools.jsonlib.JsonUtil . toJSON ( null , null ) . toString ( 4 , 4 ) ) ; com.feilong.tools.jsonlib.JsonUtilToBeanTest.LOGGER . info ( new net.sf.json.JSONObject () . toString ( 4 ) ) ; } <s> @ org.junit.Test public void uvlzxtnssqjxvulsxujz () { com.feilong.tools.jsonlib.JsonUtilToBeanTest.LOGGER . info ( com.feilong.tools.jsonlib.JsonUtil . toJSON ( null , null ) . toString ( 4 , 4 ) ) ; com.feilong.tools.jsonlib.JsonUtilToBeanTest.LOGGER . info ( new net.sf.json.JSONObject () . toString ( 4 ) ) ; } <s> JsonUtil make `String format(Object obj JsonConfig jsonConfig int indentFactor int indent)`  private JsonUtil remove `String format(Object obj JsonConfig jsonConfig)` [fix bug]  when call JsonUtil `String format(Object obj String[] excludes Integer indentFactor Integer indent)` set `indentFactor` `indent` Not effective
fix_before_refactoring: @ org.junit.Test public void toBeanNUll () { com.feilong.tools.jsonlib.JsonUtilToBeanTest.LOGGER . info ( com.feilong.tools.jsonlib.JsonUtil . toJSON ( null ) . toString ( 4 , 4 ) ) ; com.feilong.tools.jsonlib.JsonUtilToBeanTest.LOGGER . info ( new net.sf.json.JSONObject () . toString ( 4 ) ) ; }
fix_after_refactoring: @ org.junit.Test public void uvlzxtnssqjxvulsxujz () { com.feilong.tools.jsonlib.JsonUtilToBeanTest.LOGGER . info ( com.feilong.tools.jsonlib.JsonUtil . toJSON ( null ) . toString ( 4 , 4 ) ) ; com.feilong.tools.jsonlib.JsonUtilToBeanTest.LOGGER . info ( new net.sf.json.JSONObject () . toString ( 4 ) ) ; }
× fix_prediction_before: @ org.junit.Test public void toBean () { com.feilong.tools.jsonlib.JsonUtil . makeBean ( ( ( net.feilong.tools.jsonlib.JsonBean ) ( null ) ) , null , null ) ; }
× fix_prediction_after: @ org.junit.Test public void uvlzilq ( ) throws java.lang.Exception { com.feilong.tools.jsonlib.JsonUtil . makeJson ( ( ( net.feilong.tools.jsonlib.JsonBean ) ( null ) ) , jsonBean , 4 ) ; }

line_index: 873
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { validateCredentials ( username . get () , password . get () ) ; } <s> @ java.lang.Override public void onClick ( android.view.View v ) { validateCredentials ( username . get () , password . get () ) ; } <s> fix anr bug
bug_after_refactoring: @ java.lang.Override public void hvihnggqsjbjdfqsjgwj ( android.view.View v ) { validateCredentials ( username . get () , password . get () ) ; } <s> @ java.lang.Override public void hvihnggqsjbjdfqsjgwj ( android.view.View v ) { validateCredentials ( username . get () , password . get () ) ; } <s> fix anr bug
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { validateCredentials ( username , password ) ; }
fix_after_refactoring: @ java.lang.Override public void hvihnggqsjbjdfqsjgwj ( android.view.View v ) { validateCredentials ( username , password ) ; }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { validateCredentials () ; }
× fix_prediction_after: @ java.lang.Override public void init ( android.view.View v ) {}

line_index: 874
bug_before_refactoring: @ com.pratilipi.api.annotation.Get public com.pratilipi.api.impl.init.shared.GetEventListResponse getAuthorList ( com.pratilipi.api.impl.init.shared.GetEventListRequest request ) throws com.pratilipi.common.exception.InsufficientAccessException { java.util.List < com.pratilipi.data.client.EventData > eventList = com.pratilipi.data.util.EventDataUtil . getEventDataList ( request . getLanguage () ) ; return new com.pratilipi.api.impl.init.shared.GetEventListResponse ( eventList ) ; } <s> @ com.pratilipi.api.annotation.Get public com.pratilipi.api.impl.init.shared.GetEventListResponse getAuthorList ( com.pratilipi.api.impl.init.shared.GetEventListRequest request ) throws com.pratilipi.common.exception.InsufficientAccessException { java.util.List < com.pratilipi.data.client.EventData > eventList = com.pratilipi.data.util.EventDataUtil . getEventDataList ( request . getLanguage () ) ; return new com.pratilipi.api.impl.init.shared.GetEventListResponse ( eventList ) ; } <s> Minor bug fix in EventListApi.
bug_after_refactoring: @ com.pratilipi.api.annotation.Get public com.pratilipi.api.impl.init.shared.GetEventListResponse rzwutfnbvtqgrmposfaf ( com.pratilipi.api.impl.init.shared.GetEventListRequest request ) throws com.pratilipi.common.exception.InsufficientAccessException { java.util.List < com.pratilipi.data.client.EventData > eventList = com.pratilipi.data.util.EventDataUtil . getEventDataList ( request . getLanguage () ) ; return new com.pratilipi.api.impl.init.shared.GetEventListResponse ( eventList ) ; } <s> @ com.pratilipi.api.annotation.Get public com.pratilipi.api.impl.init.shared.GetEventListResponse rzwutfnbvtqgrmposfaf ( com.pratilipi.api.impl.init.shared.GetEventListRequest request ) throws com.pratilipi.common.exception.InsufficientAccessException { java.util.List < com.pratilipi.data.client.EventData > eventList = com.pratilipi.data.util.EventDataUtil . getEventDataList ( request . getLanguage () ) ; return new com.pratilipi.api.impl.init.shared.GetEventListResponse ( eventList ) ; } <s> Minor bug fix in EventListApi.
fix_before_refactoring: @ com.pratilipi.api.annotation.Get public com.pratilipi.api.impl.init.shared.GetEventListResponse get ( com.pratilipi.api.impl.init.shared.GetEventListRequest request ) throws com.pratilipi.common.exception.InsufficientAccessException { java.util.List < com.pratilipi.data.client.EventData > eventList = com.pratilipi.data.util.EventDataUtil . getEventDataList ( request . getLanguage () ) ; return new com.pratilipi.api.impl.init.shared.GetEventListResponse ( eventList ) ; }
fix_after_refactoring: @ com.pratilipi.api.annotation.Get public com.pratilipi.api.impl.init.shared.GetEventListResponse get ( com.pratilipi.api.impl.init.shared.GetEventListRequest request ) throws com.pratilipi.common.exception.InsufficientAccessException { java.util.List < com.pratilipi.data.client.EventData > eventList = com.pratilipi.data.util.EventDataUtil . getEventDataList ( request . getLanguage () ) ; return new com.pratilipi.api.impl.init.shared.GetEventListResponse ( eventList ) ; }
× fix_prediction_before: @ com.pratilipi.api.annotation.GetGetMapping public java.util.List < com.pratilipi.api.init.EventResponse > getAuthor ( ) throws com.pratilipi.common.api.exception.DataAccessException { com.pratilipi.common.util.ListUtil . getEventList ( event . getLanguage () ) ; return new com.pratilipi.common.api.init.EventList ( request . getLanguage () ) ; }
× fix_prediction_after: @ com.pratilipi.api.annotation.GetGetMapping public java.util.List < com.pratilipi.api.init.Event > getEventList ( ) throws com.pratilipi.common.api.init.DataAccessException { com.pratilipi.common.util.ListUtil.GetEventList requestEventList = new com.pratilipi.common.api.init.EventList ( event . getLanguage () ) ; return ratos ; }

line_index: 875
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = { "/about" , "/Open/about" } , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String about ( org.springframework.ui.Model model ) { org.springframework.web.servlet.ModelAndView model1 = new org.springframework.web.servlet.ModelAndView () ; logger . debug ( "index()" ) ; model1 . setViewName ( "/Open/about" ) ; return "/Open/about" ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = { "/about" , "/Open/about" } , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String about ( org.springframework.ui.Model model ) { org.springframework.web.servlet.ModelAndView model1 = new org.springframework.web.servlet.ModelAndView () ; logger . debug ( "index()" ) ; model1 . setViewName ( "/Open/about" ) ; return "/Open/about" ; } <s> CSRF problem solved  but the post is still not working.
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = { "/yfiaaobxstdslxctrgzy" , "/Open/yfiaaobxstdslxctrgzy" } , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String yfiaaobxstdslxctrgzy ( org.springframework.ui.Model model ) { org.springframework.web.servlet.ModelAndView model1 = new org.springframework.web.servlet.ModelAndView () ; logger . debug ( "index()" ) ; model1 . setViewName ( "/Open/yfiaaobxstdslxctrgzy" ) ; return "/Open/yfiaaobxstdslxctrgzy" ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = { "/yfiaaobxstdslxctrgzy" , "/Open/yfiaaobxstdslxctrgzy" } , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String yfiaaobxstdslxctrgzy ( org.springframework.ui.Model model ) { org.springframework.web.servlet.ModelAndView model1 = new org.springframework.web.servlet.ModelAndView () ; logger . debug ( "index()" ) ; model1 . setViewName ( "/Open/yfiaaobxstdslxctrgzy" ) ; return "/Open/yfiaaobxstdslxctrgzy" ; } <s> CSRF problem solved  but the post is still not working.
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = { "/about" , "/Open/about" } , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public org.springframework.web.servlet.ModelAndView about ( org.springframework.ui.Model model ) { org.springframework.web.servlet.ModelAndView model1 = new org.springframework.web.servlet.ModelAndView () ; logger . debug ( "index()" ) ; model1 . setViewName ( "/Open/about" ) ; return model1 ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = { "/yfiaaobxstdslxctrgzy" , "/Open/yfiaaobxstdslxctrgzy" } , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public org.springframework.web.servlet.ModelAndView yfiaaobxstdslxctrgzy ( org.springframework.ui.Model model ) { org.springframework.web.servlet.ModelAndView model1 = new org.springframework.web.servlet.ModelAndView () ; logger . debug ( "index()" ) ; model1 . setViewName ( "/Open/yfiaaobxstdslxctrgzy" ) ; return model1 ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/about/about" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String setViewName ( org.springframework.ui.ModelAndView model ) { org.about.about.web.ModelAndView model = new org.springframework.web.servlet.ModelAndView () ; model . setViewName ( "index" ) ; return model ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = { "/yobxia" } , method = org.springframework.web.bind.annotation.RequestMethod.GET } ) public java.lang.String setViewName ( org.springframework.ui.ModelAndView model ) { org.xobxiazyf.cta.ui.ModelAndView model = new org.xobxobxiaelzyf.cta.ui.ModelAndView () ; model . setViewName ( "rslia" ) ; return model ; }

line_index: 876
bug_before_refactoring: @ java.lang.Override public boolean celAllapot () { return ( a [ 1 ] ) == 4 ; } <s> @ java.lang.Override public boolean celAllapot () { return ( a [ 1 ] ) == 4 ; } <s> HaromKorso problem updated and gitignore fixed
bug_after_refactoring: @ java.lang.Override public boolean cueytyeigptozvihgceb () { return ( a [ 1 ] ) == 4 ; } <s> @ java.lang.Override public boolean cueytyeigptozvihgceb () { return ( a [ 1 ] ) == 4 ; } <s> HaromKorso problem updated and gitignore fixed
fix_before_refactoring: @ java.lang.Override public boolean celAllapot () { return ( a [ 0 ] ) == 4 ; }
fix_after_refactoring: @ java.lang.Override public boolean cueytyeigptozvihgceb () { return ( a [ 0 ] ) == 4 ; }
× fix_prediction_before: @ java.lang.Override public boolean aAllapot () { return false ; }
× fix_prediction_after: @ java.lang.Override public boolean cytyeigcegptce () { return false ; }

line_index: 877
bug_before_refactoring: public static int calculateMin ( int [] cratesPerHouse ) { return 0 ; } <s> public static int calculateMin ( int [] cratesPerHouse ) { return 0 ; } <s> fixed directory issue. earlier worked on revising final function.
bug_after_refactoring: public static int lxfgdrdsabrozzvpzqai ( int [] cratesPerHouse ) { return 0 ; } <s> public static int lxfgdrdsabrozzvpzqai ( int [] cratesPerHouse ) { return 0 ; } <s> fixed directory issue. earlier worked on revising final function.
fix_before_refactoring: public static int calculateMin ( int [] cratesPerHouse ) { int min = cratesPerHouse [ 0 ] ; for ( int x : cratesPerHouse ) { if ( x < min ) { min = x ; } } return min ; }
fix_after_refactoring: public static int lxfgdrdsabrozzvpzqai ( int [] cratesPerHouse ) { int min = cratesPerHouse [ 0 ] ; for ( int x : cratesPerHouse ) { if ( x < min ) { min = x ; } } return min ; }
× fix_prediction_before: private static int calculateMin ( int [] crates ) { return 0 ; }
× fix_prediction_after: public static int lxfgabdsrozvp ( int [] crds ) { return 1 ; }

line_index: 879
bug_before_refactoring: @ java.lang.Override public void run () { refreshNewFolder ( n . path () ) ; } <s> @ java.lang.Override public void run () { refreshNewFolder ( n . path () ) ; } <s> [FIX] DialogResources  renaming/refresh issues
bug_after_refactoring: @ java.lang.Override public void dgcpsmyjwsnbbcrgkuup () { refreshNewFolder ( n . path () ) ; } <s> @ java.lang.Override public void dgcpsmyjwsnbbcrgkuup () { refreshNewFolder ( n . path () ) ; } <s> [FIX] DialogResources  renaming/refresh issues
fix_before_refactoring: @ java.lang.Override public void run () { refreshNewFolder ( p ) ; }
fix_after_refactoring: @ java.lang.Override public void dgcpsmyjwsnbbcrgkuup () { refreshNewFolder ( p ) ; }
× fix_prediction_before: @ java.lang.Override public void run () { refreshNewFolder ( path ) ; }
× fix_prediction_after: @ java.lang.Override public void dgcps.myjbbn.crku.NewFolder refreshNewFolder () { if ( ( path ) != null ) { ngc . refreshNewFolder () ; } }

line_index: 881
bug_before_refactoring: public java.util.List < org.zalando.nakadi.domain.EventTypeAuthorizationAttribute > getAdmins () { return ( admins ) == null ? null : java.util.Collections . unmodifiableList ( admins ) ; } <s> public java.util.List < org.zalando.nakadi.domain.EventTypeAuthorizationAttribute > getAdmins () { return ( admins ) == null ? null : java.util.Collections . unmodifiableList ( admins ) ; } <s> ARUHA-765: fixed the problem with nulls;
bug_after_refactoring: public java.util.List < org.zalando.nakadi.domain.EventTypeAuthorizationAttribute > zppvfdcmhxoafodbqxjp () { return ( admins ) == null ? null : java.util.Collections . unmodifiableList ( admins ) ; } <s> public java.util.List < org.zalando.nakadi.domain.EventTypeAuthorizationAttribute > zppvfdcmhxoafodbqxjp () { return ( admins ) == null ? null : java.util.Collections . unmodifiableList ( admins ) ; } <s> ARUHA-765: fixed the problem with nulls;
fix_before_refactoring: public java.util.List < org.zalando.nakadi.domain.EventTypeAuthorizationAttribute > getAdmins () { return admins ; }
fix_after_refactoring: public java.util.List < org.zalando.nakadi.domain.EventTypeAuthorizationAttribute > zppvfdcmhxoafodbqxjp () { return admins ; }
× fix_prediction_before: public java.util.List < org.zalando.naki.domain.AuthorizationAttribute > getAdmins () { return ( admins ) == null ? null : java.util.Collections . unmodifiableList ( admins ) ; }
× fix_prediction_after: public java.util.List < org.zalando.nadi.domain.AuthorizationEventType > zcms () { return ( java.util.Collections . unmodifiableList ( admins ) ) == null ? null : new java.util.ArrayList <> () ; }

line_index: 882
bug_before_refactoring: public void setTempMin ( java.lang.Double tm ) { data . put ( "tmin" , ( tm == null ? - 99.99 : tm ) ) ; } <s> public void setTempMin ( java.lang.Double tm ) { data . put ( "tmin" , ( tm == null ? - 99.99 : tm ) ) ; } <s> Bug fixes for Double
bug_after_refactoring: public void edsgtdrtitfdyowuidxf ( java.lang.Double tm ) { data . put ( "tmin" , ( tm == null ? - 99.99 : tm ) ) ; } <s> public void edsgtdrtitfdyowuidxf ( java.lang.Double tm ) { data . put ( "tmin" , ( tm == null ? - 99.99 : tm ) ) ; } <s> Bug fixes for Double
fix_before_refactoring: public void setTempMin ( java.lang.Double tm ) { data . put ( "tmin" , tm ) ; }
fix_after_refactoring: public void edsgtdrtitfdyowuidxf ( java.lang.Double tm ) { data . put ( "tmin" , tm ) ; }
× fix_prediction_before: public void setTempMin ( java.lang.Double tm ) { tm . put ( "mint" , tm ) ; }
× fix_prediction_after: public void edsgtdtdtd_fd ( java.lang.Double tm ) { tm . put ( tm , data ) ; }

line_index: 883
bug_before_refactoring: public void printDicts () { java.lang.System.out . println ( ( "English dictionary:\n" + ( enDict ) ) ) ; java.lang.System.out . println ( ( "Foreign dictionary:\n" + ( foDict ) ) ) ; } <s> public void printDicts () { java.lang.System.out . println ( ( "English dictionary:\n" + ( enDict ) ) ) ; java.lang.System.out . println ( ( "Foreign dictionary:\n" + ( foDict ) ) ) ; } <s> fix some bugs
bug_after_refactoring: public void htvfqylcaefuymbdukck () { java.lang.System.out . println ( ( "English dictionary:\n" + ( enDict ) ) ) ; java.lang.System.out . println ( ( "Foreign dictionary:\n" + ( foDict ) ) ) ; } <s> public void htvfqylcaefuymbdukck () { java.lang.System.out . println ( ( "English dictionary:\n" + ( enDict ) ) ) ; java.lang.System.out . println ( ( "Foreign dictionary:\n" + ( foDict ) ) ) ; } <s> fix some bugs
fix_before_refactoring: public void printDicts () { java.lang.System.out . println ( ( "English dictionary:\n" + ( enDict . size () ) ) ) ; java.lang.System.out . println ( ( "Foreign dictionary:\n" + ( foDict . size () ) ) ) ; }
fix_after_refactoring: public void htvfqylcaefuymbdukck () { java.lang.System.out . println ( ( "English dictionary:\n" + ( enDict . size () ) ) ) ; java.lang.System.out . println ( ( "Foreign dictionary:\n" + ( foDict . size () ) ) ) ; }
× fix_prediction_before: private void print ( java.lang.String buf ) {}
× fix_prediction_after: private void htv:\caefduckk () {}

line_index: 884
bug_before_refactoring: public void start () { array.view.BookPanel basePanel = new array.view.BookPanel ( null ) ; setupArray () ; } <s> public void start () { array.view.BookPanel basePanel = new array.view.BookPanel ( null ) ; setupArray () ; } <s> fixed panel error  Put the GUI on display and JTable
bug_after_refactoring: public void hdoyfxiivjpauhzivxuj () { array.view.BookPanel basePanel = new array.view.BookPanel ( null ) ; setupArray () ; } <s> public void hdoyfxiivjpauhzivxuj () { array.view.BookPanel basePanel = new array.view.BookPanel ( null ) ; setupArray () ; } <s> fixed panel error  Put the GUI on display and JTable
fix_before_refactoring: public void start () {}
fix_after_refactoring: public void hdoyfxiivjpauhzivxuj () {}
× fix_prediction_before: public void start () { arrayPanel = new base.view.BookPanel ( this ) ; setupArray () ; }
× fix_prediction_after: public void hdoyivi.fxhzivu.jpa.view.BookPanel () { arrayPanel = new hdo.fxi.jpa.view.BookPanel () ; displayArrayPanel ( arrayBook ) ; }

line_index: 885
bug_before_refactoring: private double calculatePrice ( double num ) { double givprice = ( quantity ) * 3.24 ; return givprice ; } <s> private double calculatePrice ( double num ) { double givprice = ( quantity ) * 3.24 ; return givprice ; } <s> -fix landscape layout view and run -fix issues with potrait view  by aligning the price  on the potrait view -removes price
bug_after_refactoring: private double rddnyhjrrjwsxvlgysfm ( double num ) { double givprice = ( quantity ) * 3.24 ; return givprice ; } <s> private double rddnyhjrrjwsxvlgysfm ( double num ) { double givprice = ( quantity ) * 3.24 ; return givprice ; } <s> -fix landscape layout view and run -fix issues with potrait view  by aligning the price  on the potrait view -removes price
fix_before_refactoring: private double calculatePrice ( double num ) { num = ( quantity ) * 3.24 ; return num ; }
fix_after_refactoring: private double rddnyhjrrjwsxvlgysfm ( double num ) { num = ( quantity ) * 3.24 ; return num ; }
× fix_prediction_before: public double calculatePrice ( double num ) { return num * ( ( double ) ( quantity ) ) ; }
× fix_prediction_after: public double doublenynynynyhjws (ws.jvlfmgvlys ) { double num = numprice * ( 1 ) ; return ( view * ( view . size () ) ) - num ; }

line_index: 887
bug_before_refactoring: @ java.lang.Override public void run () { while ( true ) { try { org.ja.ManagementServer . server () ; } catch ( java.io.IOException ex ) {} } } <s> @ java.lang.Override public void run () { while ( true ) { try { org.ja.ManagementServer . server () ; } catch ( java.io.IOException ex ) {} } } <s> fixed a problem with try catch location causing the program to hang
bug_after_refactoring: @ java.lang.Override public void fnyxdvllrljpmfdcfbri () { while ( true ) { try { org.ja.ManagementServer . server () ; } catch ( java.io.IOException ex ) {} } } <s> @ java.lang.Override public void fnyxdvllrljpmfdcfbri () { while ( true ) { try { org.ja.ManagementServer . server () ; } catch ( java.io.IOException ex ) {} } } <s> fixed a problem with try catch location causing the program to hang
fix_before_refactoring: @ java.lang.Override public void run () { org.ja.ManagementServer . server () ; }
fix_after_refactoring: @ java.lang.Override public void fnyxdvllrljpmfdcfbri () { org.ja.ManagementServer . server () ; }
× fix_prediction_before: @ java.lang.Override public void run () { org.jaio.ServerManagement . server ( false ) ; }
× fix_prediction_after: @ java.lang.Override public void fnyll.vrl.jpm.Management () {}

line_index: 889
bug_before_refactoring: private void performOperation ( java.util.concurrent.Callable < com.squareup.okhttp.Call > operation ) { showProgressBar () ; try { operation . call () ; } catch ( java.lang.Exception e ) { onOperationFailed () ; } } <s> private void performOperation ( java.util.concurrent.Callable < com.squareup.okhttp.Call > operation ) { showProgressBar () ; try { operation . call () ; } catch ( java.lang.Exception e ) { onOperationFailed () ; } } <s> Bug fix for payment using saved cards.
bug_after_refactoring: private void ibzlgbsrgzmafntsdvdp ( java.util.concurrent.Callable < com.squareup.okhttp.Call > operation ) { showProgressBar () ; try { operation . call () ; } catch ( java.lang.Exception e ) { onOperationFailed () ; } } <s> private void ibzlgbsrgzmafntsdvdp ( java.util.concurrent.Callable < com.squareup.okhttp.Call > operation ) { showProgressBar () ; try { operation . call () ; } catch ( java.lang.Exception e ) { onOperationFailed () ; } } <s> Bug fix for payment using saved cards.
fix_before_refactoring: private com.squareup.okhttp.Call performOperation ( java.util.concurrent.Callable < com.squareup.okhttp.Call > operation ) { showProgressBar () ; try { return operation . call () ; } catch ( java.lang.Exception e ) { onOperationFailed () ; return null ; } }
fix_after_refactoring: private com.squareup.okhttp.Call ibzlgbsrgzmafntsdvdp ( java.util.concurrent.Callable < com.squareup.okhttp.Call > operation ) { showProgressBar () ; try { return operation . call () ; } catch ( java.lang.Exception e ) { onOperationFailed () ; return null ; } }
× fix_prediction_before: private void performOperation ( java.util.concurrent.Callable < com.squareup.okhttp.Call > operation ) { try { callOperation () ; } catch ( java.lang.Exception e ) { performFailed () ; } }
× fix_prediction_after: private void ibzlgbs ( java.util.concurrent.Callable < com.squareup.mokhttp.Call > operation ) { try { callFailed ( operation ) ; callFailed () ; } catch ( java.util.concurrent.Exception e ) { showProgressBar () ; } }

line_index: 890
bug_before_refactoring: @ org.sakaiproject.entitybroker.entityprovider.annotations.EntityURLRedirect ( value = "/{prefix}/profile/{userUuid}" ) public java.lang.String redirectToUserProfile ( java.util.Map < java.lang.String , java.lang.String > vars ) { return linkLogic . getInternalDirectUrlToUserProfile ( vars . get ( "userUuid" ) ) ; } <s> @ org.sakaiproject.entitybroker.entityprovider.annotations.EntityURLRedirect ( value = "/{prefix}/profile/{userUuid}" ) public java.lang.String redirectToUserProfile ( java.util.Map < java.lang.String , java.lang.String > vars ) { return linkLogic . getInternalDirectUrlToUserProfile ( vars . get ( "userUuid" ) ) ; } <s> Merge pull request #2181 from steveswinsburg/bugfix/SAK-30728_profile_links  SAK-30728 fix the URLs so they don't overlap
bug_after_refactoring: @ org.sakaiproject.entitybroker.entityprovider.annotations.EntityURLRedirect ( value = "/{prefix}/profile/{userUuid}" ) public java.lang.String jzmiiewuqfpffwyhggrt ( java.util.Map < java.lang.String , java.lang.String > vars ) { return linkLogic . getInternalDirectUrlToUserProfile ( vars . get ( "userUuid" ) ) ; } <s> @ org.sakaiproject.entitybroker.entityprovider.annotations.EntityURLRedirect ( value = "/{prefix}/profile/{userUuid}" ) public java.lang.String jzmiiewuqfpffwyhggrt ( java.util.Map < java.lang.String , java.lang.String > vars ) { return linkLogic . getInternalDirectUrlToUserProfile ( vars . get ( "userUuid" ) ) ; } <s> Merge pull request #2181 from steveswinsburg/bugfix/SAK-30728_profile_links  SAK-30728 fix the URLs so they don't overlap
fix_before_refactoring: @ org.sakaiproject.entitybroker.entityprovider.annotations.EntityURLRedirect ( value = "/{prefix}/profile-view/{userUuid}" ) public java.lang.String redirectToUserProfile ( final java.util.Map < java.lang.String , java.lang.String > vars ) { return this . linkLogic . getInternalDirectUrlToUserProfile ( vars . get ( "userUuid" ) ) ; }
fix_after_refactoring: @ org.sakaiproject.entitybroker.entityprovider.annotations.EntityURLRedirect ( value = "/{prefix}/profile-view/{userUuid}" ) public java.lang.String jzmiiewuqfpffwyhggrt ( final java.util.Map < java.lang.String , java.lang.String > vars ) { return this . linkLogic . getInternalDirectUrlToUserProfile ( vars . get ( "userUuid" ) ) ; }
× fix_prediction_before: @ org.sakaiproject.entitybroker.entityprovider.annotations.EntityURLRedirect ( value = "/{prefix}/profile/{userUuid}/{profile/{userUuid}" ) public java.lang.String redirectToUserProfile ( final java.util.Map < java.lang.String , java.lang.String > vars ) { return linkLogic . getInternalDirectUrlToUserProfile ( vars . get ( "userUuid" ) , vars . get ( "userUuid" ) ) ; }
× fix_prediction_after: @ org.sakaiproject.entitybroker.entityprovider.annotations.EntityURLRedirect ( value = "/{prefix}/profile/{userUuid}" ) public java.lang.String getInternalDirectUrlToUserProfile ( final java.util.Map < java.lang.String , java.lang.String > vars ) { return this . linkLogic . getInternalDirectUrlToUser ( vars . get ( "userUuid" ) , vars . getName () ) ; }

line_index: 891
bug_before_refactoring: public boolean addFilters ( java.util.Collection < com.github.wz2cool.dynamic.FilterDescriptorBase > newFilters ) { if ( newFilters == null ) { return false ; } return filters . addAll ( newFilters ) ; } <s> public boolean addFilters ( java.util.Collection < com.github.wz2cool.dynamic.FilterDescriptorBase > newFilters ) { if ( newFilters == null ) { return false ; } return filters . addAll ( newFilters ) ; } <s> fix build issue
bug_after_refactoring: public boolean fwhjjhpyqvkfrthmdfsg ( java.util.Collection < com.github.wz2cool.dynamic.FilterDescriptorBase > newFilters ) { if ( newFilters == null ) { return false ; } return filters . addAll ( newFilters ) ; } <s> public boolean fwhjjhpyqvkfrthmdfsg ( java.util.Collection < com.github.wz2cool.dynamic.FilterDescriptorBase > newFilters ) { if ( newFilters == null ) { return false ; } return filters . addAll ( newFilters ) ; } <s> fix build issue
fix_before_refactoring: public boolean addFilters ( final com.github.wz2cool.dynamic.FilterDescriptorBase . . . newFilters ) { return filters . addAll ( java.util.Arrays . asList ( newFilters ) ) ; }
fix_after_refactoring: public boolean fwhjjhpyqvkfrthmdfsg ( final com.github.wz2cool.dynamic.FilterDescriptorBase . . . newFilters ) { return filters . addAll ( java.util.Arrays . asList ( newFilters ) ) ; }
× fix_prediction_before: public boolean addFilters ( java.util.Collection < com.github.github.w2z.dynamic.BaseDescriptor > newFilters ) { if ( newFilters == null ) { return false ; } filters . addAll ( newFilters ) ; return false ; }
× fix_prediction_after: public boolean fwhjjhpy ( java.util.Collection < com.github.kzfr.mdwf.Base.Filter > filters ) { if ( newFilters == null ) { return false ; } return filters . addAll ( newFilters ) ; }

line_index: 892
bug_before_refactoring: public void startRecord ( java.lang.String recPath ) { if ( ( mMp4Muxer ) != null ) { mMp4Muxer . record ( new java.io.File ( recPath ) ) ; } } <s> public void startRecord ( java.lang.String recPath ) { if ( ( mMp4Muxer ) != null ) { mMp4Muxer . record ( new java.io.File ( recPath ) ) ; } } <s> Fix record bug  It should not start recording when AV format not assigned.  Signed-off-by: Leo Ma <begeekmyfriend@gmail.com>
bug_after_refactoring: public void zfeampdbohrqhskyxoss ( java.lang.String recPath ) { if ( ( mMp4Muxer ) != null ) { mMp4Muxer . record ( new java.io.File ( recPath ) ) ; } } <s> public void zfeampdbohrqhskyxoss ( java.lang.String recPath ) { if ( ( mMp4Muxer ) != null ) { mMp4Muxer . record ( new java.io.File ( recPath ) ) ; } } <s> Fix record bug  It should not start recording when AV format not assigned.  Signed-off-by: Leo Ma <begeekmyfriend@gmail.com>
fix_before_refactoring: public boolean startRecord ( java.lang.String recPath ) { return ( ( mMp4Muxer ) != null ) && ( mMp4Muxer . record ( new java.io.File ( recPath ) ) ) ; }
fix_after_refactoring: public boolean zfeampdbohrqhskyxoss ( java.lang.String recPath ) { return ( ( mMp4Muxer ) != null ) && ( mMp4Muxer . record ( new java.io.File ( recPath ) ) ) ; }
× fix_prediction_before: public void startRecord ( java.lang.String rec ) { if ( ( mMuxerPath ) != null ) { mMuxPath . start ( new java.io.File ( rec4MpPath ) ) ; } }
× fix_prediction_after: public void zfeampdHq ( java.lang.String recuxPath ) { if ( ( mMpux ) != null ) { mMpux . start ( new java.io.File ( recuxPath ) ) ; } }

line_index: 893
bug_before_refactoring: private void checkGLError ( final java.lang.String message , final boolean throwException ) { if ( de.lessvoid.coregl.CoreTexture2D.errorChecks ) { gl . checkGLError ( message , throwException ) ; } } <s> private void checkGLError ( final java.lang.String message , final boolean throwException ) { if ( de.lessvoid.coregl.CoreTexture2D.errorChecks ) { gl . checkGLError ( message , throwException ) ; } } <s> fix: Logger usage in CoreTexture2D  Crashing bug introduced due to the changes to the logger.
bug_after_refactoring: private void iwvehobybybyllraxwje ( final java.lang.String message , final boolean throwException ) { if ( de.lessvoid.coregl.CoreTexture2D.errorChecks ) { gl . iwvehobybybyllraxwje ( message , throwException ) ; } } <s> private void iwvehobybybyllraxwje ( final java.lang.String message , final boolean throwException ) { if ( de.lessvoid.coregl.CoreTexture2D.errorChecks ) { gl . iwvehobybybyllraxwje ( message , throwException ) ; } } <s> fix: Logger usage in CoreTexture2D  Crashing bug introduced due to the changes to the logger.
fix_before_refactoring: private void checkGLError ( final java.lang.String message , final boolean throwException ) { if ( de.lessvoid.coregl.CoreTexture2D.errorChecks ) { gl . checkGLError ( throwException , message ) ; } }
fix_after_refactoring: private void iwvehobybybyllraxwje ( final java.lang.String message , final boolean throwException ) { if ( de.lessvoid.coregl.CoreTexture2D.errorChecks ) { gl . iwvehobybybyllraxwje ( throwException , message ) ; } }
× fix_prediction_before: private void checkGLError ( final java.lang.String message , final boolean message ) { if ( de.lessid.core.GLCore . checkTextureError ( message , Logger.GLD , message ) ) { checkError ( message ) ; } }
× fix_prediction_after: private void setValue ( final java.lang.String message , final java.lang.String message ) { if ( de.wbylljeby.jey.core.Core . isTexture ( message , Logger.Texture ) ) { de.wbyllje.jey.core.Core . glD ( message ) ; } }

line_index: 894
bug_before_refactoring: public void WriteExpandingNodeToFile ( Node ExpandingNode , java.io.PrintWriter pw ) { for ( Leaf leafToWrite : ExpandingNode . getNodeLeaves () ) { leafToWrite . WriteEachLeaf ( pw ) ; } } <s> public void WriteExpandingNodeToFile ( Node ExpandingNode , java.io.PrintWriter pw ) { for ( Leaf leafToWrite : ExpandingNode . getNodeLeaves () ) { leafToWrite . WriteEachLeaf ( pw ) ; } } <s> Refactored main SOO algorithm to remove the need to pass the printwriter as a parameter. The printwriter is now created and stored as a static instance variable of the Leaf class. This can then be accessed by all the write methods in the Leaf class. Fixes issue #5
bug_after_refactoring: public void doffinliuwqjaaxvhocn ( Node ExpandingNode , java.io.PrintWriter pw ) { for ( Leaf leafToWrite : ExpandingNode . getNodeLeaves () ) { leafToWrite . WriteEachLeaf ( pw ) ; } } <s> public void doffinliuwqjaaxvhocn ( Node ExpandingNode , java.io.PrintWriter pw ) { for ( Leaf leafToWrite : ExpandingNode . getNodeLeaves () ) { leafToWrite . WriteEachLeaf ( pw ) ; } } <s> Refactored main SOO algorithm to remove the need to pass the printwriter as a parameter. The printwriter is now created and stored as a static instance variable of the Leaf class. This can then be accessed by all the write methods in the Leaf class. Fixes issue #5
fix_before_refactoring: public void WriteExpandingNodeToFile ( Node ExpandingNode ) { for ( Leaf leafToWrite : ExpandingNode . getNodeLeaves () ) { leafToWrite . WriteEachLeaf () ; } }
fix_after_refactoring: public void doffinliuwqjaaxvhocn ( Node ExpandingNode ) { for ( Leaf leafToWrite : ExpandingNode . getNodeLeaves () ) { leafToWrite . WriteEachLeaf () ; } }
× fix_prediction_before: public void WriteExpandingToFile ( NodeNode pw , java.io.PrintWriter pw ) { for ( NodeNode pw : pw ) { write . getNodeToWrite () ; } }
× fix_prediction_after: public void doffinliqwuja ( Node NodeWriter.nocing , java.io.PrintWriter pw ) { for ( int i = 0 ; i < ( values . size () ) ; i ++ ) { printToWrite ( write , pw ) ; } }

line_index: 895
bug_before_refactoring: public void setServoUp () { SlideHolder . setPosition ( 0.25 ) ; } <s> public void setServoUp () { SlideHolder . setPosition ( 0.25 ) ; } <s> 1/7/17  Updated code in auto programs  and fixxed teleop program errors.  Docs work in progress for all files.  Samples for Docs cant be found in omniBot.
bug_after_refactoring: public void uputsbzfwhcjbrfmdpcs () { SlideHolder . setPosition ( 0.25 ) ; } <s> public void uputsbzfwhcjbrfmdpcs () { SlideHolder . setPosition ( 0.25 ) ; } <s> 1/7/17  Updated code in auto programs  and fixxed teleop program errors.  Docs work in progress for all files.  Samples for Docs cant be found in omniBot.
fix_before_refactoring: public void setServoUp () { SlideHolder . setPosition ( 0 ) ; }
fix_after_refactoring: public void uputsbzfwhcjbrfmdpcs () { SlideHolder . setPosition ( 0 ) ; }
× fix_prediction_before: public void setServoUp () {}
× fix_prediction_after: public void uputzwhzwhjbr () { up . setPosition ( 0 ) ; }

line_index: 896
bug_before_refactoring: @ android.annotation.TargetApi ( value = Build.VERSION_CODES.LOLLIPOP ) private void tintTaskDescription ( int colorId , java.lang.String name , android.app.Activity activity ) { android.app.ActivityManager.TaskDescription tDesc = new android.app.ActivityManager.TaskDescription ( name , null , activity . getResources () . getColor ( colorId ) ) ; activity . setTaskDescription ( tDesc ) ; } <s> @ android.annotation.TargetApi ( value = Build.VERSION_CODES.LOLLIPOP ) private void tintTaskDescription ( int colorId , java.lang.String name , android.app.Activity activity ) { android.app.ActivityManager.TaskDescription tDesc = new android.app.ActivityManager.TaskDescription ( name , null , activity . getResources () . getColor ( colorId ) ) ; activity . setTaskDescription ( tDesc ) ; } <s> Fix bugs
bug_after_refactoring: @ android.annotation.TargetApi ( value = Build.VERSION_CODES.LOLLIPOP ) private void bzmlrqnbjisjiagjvxdu ( int colorId , java.lang.String name , android.app.Activity activity ) { android.app.ActivityManager.TaskDescription tDesc = new android.app.ActivityManager.TaskDescription ( name , null , activity . getResources () . getColor ( colorId ) ) ; activity . setTaskDescription ( tDesc ) ; } <s> @ android.annotation.TargetApi ( value = Build.VERSION_CODES.LOLLIPOP ) private void bzmlrqnbjisjiagjvxdu ( int colorId , java.lang.String name , android.app.Activity activity ) { android.app.ActivityManager.TaskDescription tDesc = new android.app.ActivityManager.TaskDescription ( name , null , activity . getResources () . getColor ( colorId ) ) ; activity . setTaskDescription ( tDesc ) ; } <s> Fix bugs
fix_before_refactoring: @ android.annotation.TargetApi ( value = Build.VERSION_CODES.LOLLIPOP ) public static void tintTaskDescription ( int colorId , java.lang.String name , android.app.Activity activity ) { android.app.ActivityManager.TaskDescription tDesc = new android.app.ActivityManager.TaskDescription ( name , null , activity . getResources () . getColor ( colorId ) ) ; activity . setTaskDescription ( tDesc ) ; }
fix_after_refactoring: @ android.annotation.TargetApi ( value = Build.VERSION_CODES.LOLLIPOP ) public static void bzmlrqnbjisjiagjvxdu ( int colorId , java.lang.String name , android.app.Activity activity ) { android.app.ActivityManager.TaskDescription tDesc = new android.app.ActivityManager.TaskDescription ( name , null , activity . getResources () . getColor ( colorId ) ) ; activity . setTaskDescription ( tDesc ) ; }
× fix_prediction_before: @ android.annotation.TargetApi ( value = Build.VERSION_CODES.LOLLIPOP ) public void tintDescription ( int colorId , android.app.Activity activity ) { setTaskDescription ( activity , name , activity . getColorManager () ) ; }
× fix_prediction_after: @ android.annotation.TargetApi ( value = Build.VERSION_CODES.LOLLIPOP ) public void setTaskDescription ( int colorId , android.app.Activity activity ) { android.app.Activity activity = new android.app.ActivityManager ( activity . getResources () . getColor ( colorId ) , activity ) ; activity . setTaskDesc ( t ) ; }

line_index: 897
bug_before_refactoring: private void privateConstructor ( android.content.Context context ) { mMatrix . set ( getImageMatrix () ) ; super . setScaleType ( ScaleType.MATRIX ) ; super . setLongClickable ( false ) ; setClickable ( true ) ; } <s> private void privateConstructor ( android.content.Context context ) { mMatrix . set ( getImageMatrix () ) ; super . setScaleType ( ScaleType.MATRIX ) ; super . setLongClickable ( false ) ; setClickable ( true ) ; } <s> Update OnTouchGestureListener. Fix a bug on fling event when the view is not draggable.
bug_after_refactoring: private void hsnqgumpwprpguypihko ( android.content.Context context ) { mMatrix . set ( getImageMatrix () ) ; super . setScaleType ( ScaleType.MATRIX ) ; super . setLongClickable ( false ) ; setClickable ( true ) ; } <s> private void hsnqgumpwprpguypihko ( android.content.Context context ) { mMatrix . set ( getImageMatrix () ) ; super . setScaleType ( ScaleType.MATRIX ) ; super . setLongClickable ( false ) ; setClickable ( true ) ; } <s> Update OnTouchGestureListener. Fix a bug on fling event when the view is not draggable.
fix_before_refactoring: private void privateConstructor () { mMatrix . set ( getImageMatrix () ) ; super . setScaleType ( ScaleType.MATRIX ) ; super . setLongClickable ( false ) ; setClickable ( true ) ; }
fix_after_refactoring: private void hsnqgumpwprpguypihko () { mMatrix . set ( getImageMatrix () ) ; super . setScaleType ( ScaleType.MATRIX ) ; super . setLongClickable ( false ) ; setClickable ( true ) ; }
× fix_prediction_before: private void setLongConstructor ( android.content.Context context ) { super . setScaleType ( context ) ; setMatrix ( true ) ; super . setLongClickable ( false ) ; setClickable ( true ) ; }
× fix_prediction_after: private void hsnqgqwumpko.prypko.MatrixType ( android.content.Context context ) { super . setScaleType ( context ) ; setMatrixType ( true ) ; super . setLongClickable ( false ) ; }

line_index: 898
bug_before_refactoring: public double getTime () { return org.lwjgl.glfw.GLFW . glfwGetTime () ; } <s> public double getTime () { return org.lwjgl.glfw.GLFW . glfwGetTime () ; } <s> Merged Graphics and GameObject. Random bug fixes.
bug_after_refactoring: public double mmuhziiovmxnfmrxjyll () { return org.lwjgl.glfw.GLFW . glfwGetTime () ; } <s> public double mmuhziiovmxnfmrxjyll () { return org.lwjgl.glfw.GLFW . glfwGetTime () ; } <s> Merged Graphics and GameObject. Random bug fixes.
fix_before_refactoring: public double getTime () { return glfwGetTime () ; }
fix_after_refactoring: public double mmuhziiovmxnfmrxjyll () { return glfwGetTime () ; }
× fix_prediction_before: public double getTime () { return org.lwjgl.glfw.GLFW . glfwGetTime () ; }
× fix_prediction_after: public double mmuhzizizi.jfmvmyjio.GLFW () { return org.jlwjfw.jfm.glyl.GLFW . glfwTime () ; }

line_index: 899
bug_before_refactoring: public void previousClick ( android.view.View view ) { ( currentPosition ) -- ; viewPager . setCurrentItem ( currentPosition , true ) ; updateProgress () ; } <s> public void previousClick ( android.view.View view ) { ( currentPosition ) -- ; viewPager . setCurrentItem ( currentPosition , true ) ; updateProgress () ; } <s> Checklist Changes  Add progress drawable  fixed a few bugs
bug_after_refactoring: public void itklbiyokevhgvcyupct ( android.view.View view ) { ( currentPosition ) -- ; viewPager . setCurrentItem ( currentPosition , true ) ; updateProgress () ; } <s> public void itklbiyokevhgvcyupct ( android.view.View view ) { ( currentPosition ) -- ; viewPager . setCurrentItem ( currentPosition , true ) ; updateProgress () ; } <s> Checklist Changes  Add progress drawable  fixed a few bugs
fix_before_refactoring: public void previousClick ( android.view.View view ) { if ( ( currentPosition ) > 0 ) { ( currentPosition ) -- ; viewPager . setCurrentItem ( currentPosition , true ) ; updateProgress () ; } else {} }
fix_after_refactoring: public void itklbiyokevhgvcyupct ( android.view.View view ) { if ( ( currentPosition ) > 0 ) { ( currentPosition ) -- ; viewPager . setCurrentItem ( currentPosition , true ) ; updateProgress () ; } else {} }
× fix_prediction_before: private void previousClick ( android.view.View view ) { ( currentPosition ) -- ; viewPager . setCurrentItem ( viewPosition , true ) ; updateProgress () ; }
× fix_prediction_after: public void itklbiy ( android.view.View view ) { ( currentPosition ) -- ; updateProgress () ; viewPager . setCurrentItem ( currentPosition , true ) ; }

line_index: 901
bug_before_refactoring: public int collectUserOption ( java.lang.String question ) { int response = 0 ; response = javax.swing.JOptionPane . showConfirmDialog ( null , displayText , windowMessage , javax.swing.JOptionPane.PLAIN_MESSAGE , chatIcon ) ; return response ; } <s> public int collectUserOption ( java.lang.String question ) { int response = 0 ; response = javax.swing.JOptionPane . showConfirmDialog ( null , displayText , windowMessage , javax.swing.JOptionPane.PLAIN_MESSAGE , chatIcon ) ; return response ; } <s> Fixed bugs
bug_after_refactoring: public int quvngasbhfxiygqbeghu ( java.lang.String question ) { int response = 0 ; response = javax.swing.JOptionPane . showConfirmDialog ( null , displayText , windowMessage , javax.swing.JOptionPane.PLAIN_MESSAGE , chatIcon ) ; return response ; } <s> public int quvngasbhfxiygqbeghu ( java.lang.String question ) { int response = 0 ; response = javax.swing.JOptionPane . showConfirmDialog ( null , displayText , windowMessage , javax.swing.JOptionPane.PLAIN_MESSAGE , chatIcon ) ; return response ; } <s> Fixed bugs
fix_before_refactoring: public int collectUserOption ( java.lang.String question ) { int response = 0 ; response = javax.swing.JOptionPane . showConfirmDialog ( null , question , windowMessage , javax.swing.JOptionPane.PLAIN_MESSAGE , javax.swing.JOptionPane.PLAIN_MESSAGE , chatIcon ) ; return response ; }
fix_after_refactoring: public int quvngasbhfxiygqbeghu ( java.lang.String question ) { int response = 0 ; response = javax.swing.JOptionPane . showConfirmDialog ( null , question , windowMessage , javax.swing.JOptionPane.PLAIN_MESSAGE , javax.swing.JOptionPane.PLAIN_MESSAGE , chatIcon ) ; return response ; }
× fix_prediction_before: public int collectUserOption ( java.lang.String question ) { int show = 0 ; javax.swing.JOptionPane . collectOptionDialog ( window , 0 , response ) ; return displayText ; }
× fix_prediction_after: public int quvngasi ( int question ) { java.lang.String response = null ; javax.swing.JOptionPane . displayConfirmMessage ( response , 0 , chatText ) ; return showConfirmDialog ( response , javax.swing.JOptionPane.PLAIN_MESSAGE ) ; }

line_index: 902
bug_before_refactoring: public void setRadii ( byte radii ) { byte before = this . radii ; this . radii = radii ; if ( before != ( this . radii ) ) { forceChunkLoading ( null ) ; forceChunkLoading ( null ) ; } } <s> public void setRadii ( byte radii ) { byte before = this . radii ; this . radii = radii ; if ( before != ( this . radii ) ) { forceChunkLoading ( null ) ; forceChunkLoading ( null ) ; } } <s> - Fix minor sync issues
bug_after_refactoring: public void urdbdmulkzenpsleukpc ( byte radii ) { byte before = this . radii ; this . radii = radii ; if ( before != ( this . radii ) ) { forceChunkLoading ( null ) ; forceChunkLoading ( null ) ; } } <s> public void urdbdmulkzenpsleukpc ( byte radii ) { byte before = this . radii ; this . radii = radii ; if ( before != ( this . radii ) ) { forceChunkLoading ( null ) ; forceChunkLoading ( null ) ; } } <s> - Fix minor sync issues
fix_before_refactoring: public void setRadii ( byte radii ) { this . radii = radii ; }
fix_after_refactoring: public void urdbdmulkzenpsleukpc ( byte radii ) { this . radii = radii ; }
× fix_prediction_before: public void setRadii ( byte radii ) { this . radii = rad ; }
× fix_prediction_after: public void raddbdmdmdm ( byte radps ) { this . radps = radps ; }

line_index: 903
bug_before_refactoring: public static void shutdown () { model.DBManager.sessionFactory . close () ; model.DBManager.lock . unlock () ; } <s> public static void shutdown () { model.DBManager.sessionFactory . close () ; model.DBManager.lock . unlock () ; } <s> More efficient DB access and bug fixed
bug_after_refactoring: public static void qwbbvcezgmmqtmqwggth () { model.DBManager.sessionFactory . close () ; model.DBManager.lock . unlock () ; } <s> public static void qwbbvcezgmmqtmqwggth () { model.DBManager.sessionFactory . close () ; model.DBManager.lock . unlock () ; } <s> More efficient DB access and bug fixed
fix_before_refactoring: public static void shutdown () { model.DBManager.lock . unlock () ; }
fix_after_refactoring: public static void qwbbvcezgmmqtmqwggth () { model.DBManager.lock . unlock () ; }
× fix_prediction_before: public static void shutdown () { model.DBManager.session . close () ; model.DBManager.lock . unlock () ; }
× fix_prediction_after: public static void qbbwvmmz.qtmqgmq.DBManager () { if ( ( model ) != null ) { model.session . close () ; model.session . unlockDBManager () ; } }

line_index: 904
bug_before_refactoring: java.util.List < java.lang.Integer > getLinks () { return null ; } <s> java.util.List < java.lang.Integer > getLinks () { return null ; } <s> fixing sync issues
bug_after_refactoring: java.util.List < java.lang.Integer > ynefbqtlezvhmnkmuxbh () { return null ; } <s> java.util.List < java.lang.Integer > ynefbqtlezvhmnkmuxbh () { return null ; } <s> fixing sync issues
fix_before_refactoring: @ java.lang.Override public java.util.List < java.lang.Integer > getLinks () { return null ; }
fix_after_refactoring: @ java.lang.Override public java.util.List < java.lang.Integer > ynefbqtlezvhmnkmuxbh () { return null ; }
× fix_prediction_before: java.util.List < java.lang.Integer > getLinks () { return null ; }
× fix_prediction_after: java.util.List < java.lang.Integer > yzbefqhmn () { return new java.util.ArrayList <> () ; }

line_index: 905
bug_before_refactoring: @ java.lang.Override public void onAdapterAboutToEmpty ( int itemsInAdapter ) { android.widget.Toast . makeText ( getApplicationContext () , "About to get empty!" , Toast.LENGTH_SHORT ) . show () ; } <s> @ java.lang.Override public void onAdapterAboutToEmpty ( int itemsInAdapter ) { android.widget.Toast . makeText ( getApplicationContext () , "About to get empty!" , Toast.LENGTH_SHORT ) . show () ; } <s> fixed some issues with tinder card listener callbacks
bug_after_refactoring: @ java.lang.Override public void wikbklcpajqabvivszvm ( int itemsInAdapter ) { android.widget.Toast . makeText ( getApplicationContext () , "About to get empty!" , Toast.LENGTH_SHORT ) . show () ; } <s> @ java.lang.Override public void wikbklcpajqabvivszvm ( int itemsInAdapter ) { android.widget.Toast . makeText ( getApplicationContext () , "About to get empty!" , Toast.LENGTH_SHORT ) . show () ; } <s> fixed some issues with tinder card listener callbacks
fix_before_refactoring: @ java.lang.Override public void onAdapterAboutToEmpty ( int itemsInAdapter ) {}
fix_after_refactoring: @ java.lang.Override public void wikbklcpajqabvivszvm ( int itemsInAdapter ) {}
× fix_prediction_before: @ java.lang.Override public void onAboutToEmptyAdapterEmpty ( int items ) {}
× fix_prediction_after: @ java.lang.Override public void wikcpaj ( int items ) {}

line_index: 906
bug_before_refactoring: @ java.lang.Override public void teleopPeriodic () { edu.wpi.first.wpilibj.command.Scheduler . getInstance () . run () ; } <s> @ java.lang.Override public void teleopPeriodic () { edu.wpi.first.wpilibj.command.Scheduler . getInstance () . run () ; } <s> fixed multiple bugs and also added multiple constructors to motor diagnoser to take into account different cases.
bug_after_refactoring: @ java.lang.Override public void cqcwpksdqswqmluvnpye () { edu.wpi.first.wpilibj.command.Scheduler . getInstance () . run () ; } <s> @ java.lang.Override public void cqcwpksdqswqmluvnpye () { edu.wpi.first.wpilibj.command.Scheduler . getInstance () . run () ; } <s> fixed multiple bugs and also added multiple constructors to motor diagnoser to take into account different cases.
fix_before_refactoring: @ java.lang.Override public void run () { edu.wpi.first.wpilibj.command.Scheduler . getInstance () . run () ; }
fix_after_refactoring: @ java.lang.Override public void run () { edu.wpi.first.wpilibj.command.Scheduler . getInstance () . run () ; }
× fix_prediction_before: @ java.lang.Override public void teleopPeriodic () {}
× fix_prediction_after: @ java.lang.Override public void 100sd ( edu.wpi.first.wpilibj.command.Scheduler motor ) {}

line_index: 907
bug_before_refactoring: public synchronized void addCallback ( com.gvls2downloader.gvls2proxy.IDataLoaderCallback callback ) { this . dataLoaderCallbacks . add ( callback ) ; } <s> public synchronized void addCallback ( com.gvls2downloader.gvls2proxy.IDataLoaderCallback callback ) { this . dataLoaderCallbacks . add ( callback ) ; } <s> Fixed issues related to failure to remove dead callbacks
bug_after_refactoring: public synchronized void uqlikmydlmjiazjwyuxy ( com.gvls2downloader.gvls2proxy.IDataLoaderCallback callback ) { this . dataLoaderCallbacks . add ( callback ) ; } <s> public synchronized void uqlikmydlmjiazjwyuxy ( com.gvls2downloader.gvls2proxy.IDataLoaderCallback callback ) { this . dataLoaderCallbacks . add ( callback ) ; } <s> Fixed issues related to failure to remove dead callbacks
fix_before_refactoring: public void addCallback ( com.gvls2downloader.gvls2proxy.IDataLoaderCallback callback ) { synchronized ( this . dataLoaderCallbacks ) { this . dataLoaderCallbacks . add ( callback ) ; } }
fix_after_refactoring: public void uqlikmydlmjiazjwyuxy ( com.gvls2downloader.gvls2proxy.IDataLoaderCallback callback ) { synchronized ( this . dataLoaderCallbacks ) { this . dataLoaderCallbacks . add ( callback ) ; } }
× fix_prediction_before: public synchronized void init ( com.glsvls.g2vls.proxy.IDataLoader callback ) { this . callback . addCallbacks ( callback ) ; }
× fix_prediction_after: public synchronized void uqmymlikjyzjls ( com.m2gjgls.wu2gls.Iv2DataLoader callback ) { this . callback . addCallbacks ( callback ) ; }

line_index: 908
bug_before_refactoring: private int getDevCardCount () { int total = 0 ; for ( int i = 0 ; i < ( this . numberDevCardTypes ) ; i ++ ) { total += this . devCards [ i ] ; } return total ; } <s> private int getDevCardCount () { int total = 0 ; for ( int i = 0 ; i < ( this . numberDevCardTypes ) ; i ++ ) { total += this . devCards [ i ] ; } return total ; } <s> Fixed a serious error with the bank and getting the count of dev cards  Accidentally accessed the resources array rather than the real array
bug_after_refactoring: private int buhlzpqicwtmpizdeqqu () { int total = 0 ; for ( int i = 0 ; i < ( this . numberDevCardTypes ) ; i ++ ) { total += this . devCards [ i ] ; } return total ; } <s> private int buhlzpqicwtmpizdeqqu () { int total = 0 ; for ( int i = 0 ; i < ( this . numberDevCardTypes ) ; i ++ ) { total += this . devCards [ i ] ; } return total ; } <s> Fixed a serious error with the bank and getting the count of dev cards  Accidentally accessed the resources array rather than the real array
fix_before_refactoring: public int getDevCardCount () { int total = 0 ; for ( int i = 0 ; i < ( this . numberDevCardTypes ) ; i ++ ) { total += this . devCards [ i ] ; } return total ; }
fix_after_refactoring: public int buhlzpqicwtmpizdeqqu () { int total = 0 ; for ( int i = 0 ; i < ( this . numberDevCardTypes ) ; i ++ ) { total += this . devCards [ i ] ; } return total ; }
× fix_prediction_before: private int getDevCardCount () { int total = 0 ; for ( int i = 0 ; i < ( this . totalDev ) ; i ++ ) { this . totalCards += i ; } return i ; }
× fix_prediction_after: private inthlzpqqqwizicq () { int total = 0 ; for ( int i = 0 ; i < ( this . totalDev ) ; i ++ ) { this . totalCards [ i ] += i ; } return 0 ; }

line_index: 909
bug_before_refactoring: public static void recordAlert ( org.json.JSONObject jmessage ) { de.xavaro.android.common.Json . put ( jmessage , "priority" , "alertinfo" ) ; de.xavaro.android.common.ActivityManager . getInstance () . onMessage ( jmessage , false ) ; } <s> public static void recordAlert ( org.json.JSONObject jmessage ) { de.xavaro.android.common.Json . put ( jmessage , "priority" , "alertinfo" ) ; de.xavaro.android.common.ActivityManager . getInstance () . onMessage ( jmessage , false ) ; } <s> Bug fixes.
bug_after_refactoring: public static void hemiqdewgeqzczpylkji ( org.json.JSONObject jmessage ) { de.xavaro.android.common.Json . put ( jmessage , "priority" , "alertinfo" ) ; de.xavaro.android.common.ActivityManager . getInstance () . onMessage ( jmessage , false ) ; } <s> public static void hemiqdewgeqzczpylkji ( org.json.JSONObject jmessage ) { de.xavaro.android.common.Json . put ( jmessage , "priority" , "alertinfo" ) ; de.xavaro.android.common.ActivityManager . getInstance () . onMessage ( jmessage , false ) ; } <s> Bug fixes.
fix_before_refactoring: public static java.lang.String recordAlert ( org.json.JSONObject jmessage ) { de.xavaro.android.common.Json . put ( jmessage , "priority" , "alertinfo" ) ; return de.xavaro.android.common.ActivityManager . getInstance () . onMessage ( jmessage , false ) ; }
fix_after_refactoring: public static java.lang.String hemiqdewgeqzczpylkji ( org.json.JSONObject jmessage ) { de.xavaro.android.common.Json . put ( jmessage , "priority" , "alertinfo" ) ; return de.xavaro.android.common.ActivityManager . getInstance () . onMessage ( jmessage , false ) ; }
× fix_prediction_before: public static java.lang.String recordAlert ( org.json.JSONObject jmessage ) { de.xavaro.android.common.Json . getInstance () . put ( jmessage , "message" , false ) ; return false ; }
× fix_prediction_after: public static void hemiqd ( org.gejizcz.common.JSONObject jmessage ) { de.xjiewo.common.JsonManager . getInstance () . onMessage ( jmessage , "message" , false ) ; de.xjiewo.android.common.ActivityManager . getInstance () . onMessage ( jmessage ) ; }

line_index: 910
bug_before_refactoring: @ java.lang.Override public void handleField ( com.zhartunmatthew.web.contactbook.entity.Contact contact , java.lang.String data ) { contact . setNationality ( java.lang.Long . parseLong ( data ) ) ; } <s> @ java.lang.Override public void handleField ( com.zhartunmatthew.web.contactbook.entity.Contact contact , java.lang.String data ) { contact . setNationality ( java.lang.Long . parseLong ( data ) ) ; } <s> Fixed bug with zero-keys
bug_after_refactoring: @ java.lang.Override public void hzpfnvhzbxhirrvfeezx ( com.zhartunmatthew.web.contactbook.entity.Contact contact , java.lang.String data ) { contact . setNationality ( java.lang.Long . parseLong ( data ) ) ; } <s> @ java.lang.Override public void hzpfnvhzbxhirrvfeezx ( com.zhartunmatthew.web.contactbook.entity.Contact contact , java.lang.String data ) { contact . setNationality ( java.lang.Long . parseLong ( data ) ) ; } <s> Fixed bug with zero-keys
fix_before_refactoring: @ java.lang.Override public void handleField ( com.zhartunmatthew.web.contactbook.entity.Contact contact , java.lang.String data ) { java.lang.Long id = java.lang.Long . parseLong ( data ) ; if ( id . equals ( 0L ) ) { contact . setNationality ( null ) ; } else { contact . setNationality ( id ) ; } }
fix_after_refactoring: @ java.lang.Override public void hzpfnvhzbxhirrvfeezx ( com.zhartunmatthew.web.contactbook.entity.Contact contact , java.lang.String data ) { java.lang.Long id = java.lang.Long . parseLong ( data ) ; if ( id . equals ( 0L ) ) { contact . setNationality ( null ) ; } else { contact . setNationality ( id ) ; } }
× fix_prediction_before: @ java.lang.Override public void handleField ( com.zhartthewz.contactbook.entity.Contact data ) { contactality ( java.lang.Long . parseLong ( contact ) ) ; }
× fix_prediction_after: @ java.lang.Override public void hzfn ( com.zfn.hartthxzhart.web.entity.Contact data ) { contactality ( java.lang.Long . parseLong ( contact ) ) ; }

line_index: 911
bug_before_refactoring: public void addEvent ( java.lang.Long eventId , java.lang.Long eventDayId ) { com.centric.centricexpress.models.EventDay eventDay = eventDayRepository . findById ( eventDayId ) ; eventDay . getEvents () . add ( eventId ) ; eventDayRepository . save ( eventDay ) ; } <s> public void addEvent ( java.lang.Long eventId , java.lang.Long eventDayId ) { com.centric.centricexpress.models.EventDay eventDay = eventDayRepository . findById ( eventDayId ) ; eventDay . getEvents () . add ( eventId ) ; eventDayRepository . save ( eventDay ) ; } <s> fixed merge errors
bug_after_refactoring: public void dhlssmwraulgwtnbcyvk ( java.lang.Long eventId , java.lang.Long eventDayId ) { com.centric.centricexpress.models.EventDay eventDay = eventDayRepository . findById ( eventDayId ) ; eventDay . getEvents () . add ( eventId ) ; eventDayRepository . save ( eventDay ) ; } <s> public void dhlssmwraulgwtnbcyvk ( java.lang.Long eventId , java.lang.Long eventDayId ) { com.centric.centricexpress.models.EventDay eventDay = eventDayRepository . findById ( eventDayId ) ; eventDay . getEvents () . add ( eventId ) ; eventDayRepository . save ( eventDay ) ; } <s> fixed merge errors
fix_before_refactoring: public void addEvent ( java.lang.String eventId , java.lang.String eventDayId ) { com.centric.centricexpress.models.EventDay eventDay = eventDayRepository . findById ( eventDayId ) ; eventDay . getEvents () . add ( eventId ) ; eventDayRepository . save ( eventDay ) ; }
fix_after_refactoring: public void dhlssmwraulgwtnbcyvk ( java.lang.String eventId , java.lang.String eventDayId ) { com.centric.centricexpress.models.EventDay eventDay = eventDayRepository . findById ( eventDayId ) ; eventDay . getEvents () . add ( eventId ) ; eventDayRepository . save ( eventDay ) ; }
× fix_prediction_before: public void addEvent ( java.lang.String eventId , java.lang.String eventDayId ) { com.centric.centricexpress.models.EventDay eventDay = eventDayRepository . findById ( eventDayId ) ; eventDay . getEvents () . addEvent ( eventId ) ; eventDayRepository . save ( eventDay ) ; }
× fix_prediction_after: @ java.lang.Override public void saveEvent ( java.lang.String eventId , java.lang.String eventDayId ) { com.lssric.cyricexpress.vtnssricexpress.models.EventDay eventDay = eventDayRepository . findById ( eventDayId ) ; eventDay . getEvents () . save ( eventId ) ; eventDayRepository . save ( eventDay ) ; }

line_index: 912
bug_before_refactoring: private void okButtonActionPerformed ( java.awt.event.ActionEvent evt ) { new gui.HumanPlayer ( this . nicknameField . getText () , this . passwordField . getText () ) ; } <s> private void okButtonActionPerformed ( java.awt.event.ActionEvent evt ) { new gui.HumanPlayer ( this . nicknameField . getText () , this . passwordField . getText () ) ; } <s> bugfix
bug_after_refactoring: private void fbppryientgasjmrjrsr ( java.awt.event.ActionEvent evt ) { new gui.HumanPlayer ( this . nicknameField . getText () , this . passwordField . getText () ) ; } <s> private void fbppryientgasjmrjrsr ( java.awt.event.ActionEvent evt ) { new gui.HumanPlayer ( this . nicknameField . getText () , this . passwordField . getText () ) ; } <s> bugfix
fix_before_refactoring: private void okButtonActionPerformed ( java.awt.event.ActionEvent evt ) {}
fix_after_refactoring: private void fbppryientgasjmrjrsr ( java.awt.event.ActionEvent evt ) {}
× fix_prediction_before: private void okButtonActionPerformed ( java.awt.event.ActionEvent evt ) { this . gui . newPlayerField ( this . getText () . getText () , passwordField . getText () . getText () ) ; }
× fix_prediction_after: private void fbpprygjmr () { gui . fbient ( new java.awt.event.ActionEvent ( this . passwordField . getText () . getText () , false ) ) ; }

line_index: 913
bug_before_refactoring: @ java.lang.Override public synchronized void clientDidDisconnect ( com.tc.net.ClientID client ) { boolean isBroken = true ; if ( ! isBroken ) { com.tc.util.Assert . assertTrue ( this . connectedClients . contains ( client ) ) ; } this . connectedClients . remove ( client ) ; } <s> @ java.lang.Override public synchronized void clientDidDisconnect ( com.tc.net.ClientID client ) { boolean isBroken = true ; if ( ! isBroken ) { com.tc.util.Assert . assertTrue ( this . connectedClients . contains ( client ) ) ; } this . connectedClients . remove ( client ) ; } <s> Fix #28: Moved ITopologyEventCollector client callsites to channel methods  -this avoids the problem where the events would also be called for the replicated information  on the passive -we can also now re-enable the assertions to verify event call symmetry in ManagementTopologyEventCollector
bug_after_refactoring: @ java.lang.Override public synchronized void ksulwwkxikouxjjtcbvt ( com.tc.net.ClientID client ) { boolean isBroken = true ; if ( ! isBroken ) { com.tc.util.Assert . assertTrue ( this . connectedClients . contains ( client ) ) ; } this . connectedClients . remove ( client ) ; } <s> @ java.lang.Override public synchronized void ksulwwkxikouxjjtcbvt ( com.tc.net.ClientID client ) { boolean isBroken = true ; if ( ! isBroken ) { com.tc.util.Assert . assertTrue ( this . connectedClients . contains ( client ) ) ; } this . connectedClients . remove ( client ) ; } <s> Fix #28: Moved ITopologyEventCollector client callsites to channel methods  -this avoids the problem where the events would also be called for the replicated information  on the passive -we can also now re-enable the assertions to verify event call symmetry in ManagementTopologyEventCollector
fix_before_refactoring: @ java.lang.Override public synchronized void clientDidDisconnect ( com.tc.net.ClientID client ) { com.tc.util.Assert . assertTrue ( this . connectedClients . contains ( client ) ) ; this . connectedClients . remove ( client ) ; }
fix_after_refactoring: @ java.lang.Override public synchronized void ksulwwkxikouxjjtcbvt ( com.tc.net.ClientID client ) { com.tc.util.Assert . assertTrue ( this . connectedClients . contains ( client ) ) ; this . connectedClients . remove ( client ) ; }
× fix_prediction_before: @ java.lang.Override public synchronized void clientDisconnect ( com.tc.netken.Broken client ) { if ( ! ( isBroken ) ) { this . clientClients . remove ( client ) ; } }
× fix_prediction_after: @ java.lang.Override public synchronized void start () { if ( ! ( com.tc.jxnetken.util.Clients . isBroken ( clientClients ) ) ) { com.tc.jxnetken.util.Clients . remove ( this . channel ) ; this . isClients = true ; } }

line_index: 914
bug_before_refactoring: @ java.lang.Override public void execute () { moveShortcut ( shortcut , 1 ) ; } <s> @ java.lang.Override public void execute () { moveShortcut ( shortcut , 1 ) ; } <s> Fixed bug with empty state animations in grid layout
bug_after_refactoring: @ java.lang.Override public void jlzbcwareeliwponvnwl () { moveShortcut ( shortcut , 1 ) ; } <s> @ java.lang.Override public void jlzbcwareeliwponvnwl () { moveShortcut ( shortcut , 1 ) ; } <s> Fixed bug with empty state animations in grid layout
fix_before_refactoring: @ java.lang.Override public void execute () { moveShortcut ( shortcut , ( - 1 ) ) ; }
fix_after_refactoring: @ java.lang.Override public void jlzbcwareeliwponvnwl () { moveShortcut ( shortcut , ( - 1 ) ) ; }
× fix_prediction_before: @ java.lang.Override public void execute () { move ( 1 , shortcut ) ; }
× fix_prediction_after: @ java.lang.Override public void jzbclbcelwarewlvn () { move ( 0 , shortcut ) ; }

line_index: 915
bug_before_refactoring: public void onPrepared ( android.media.MediaPlayer mediaPlayer ) { showHud () ; videoView . start () ; } <s> public void onPrepared ( android.media.MediaPlayer mediaPlayer ) { showHud () ; videoView . start () ; } <s> - YouTubeVideo is now passed as a whole object to the YouTubePlayerActivity - Fixed a bug which caused the HUD to be hidden before the proper delay (on certain cases).
bug_after_refactoring: public void nxfgxljdyybwwycsqvxa ( android.media.MediaPlayer mediaPlayer ) { showHud () ; videoView . start () ; } <s> public void nxfgxljdyybwwycsqvxa ( android.media.MediaPlayer mediaPlayer ) { showHud () ; videoView . start () ; } <s> - YouTubeVideo is now passed as a whole object to the YouTubePlayerActivity - Fixed a bug which caused the HUD to be hidden before the proper delay (on certain cases).
fix_before_refactoring: @ java.lang.Override public void onPrepared ( android.media.MediaPlayer mediaPlayer ) { videoView . start () ; showHud () ; }
fix_after_refactoring: @ java.lang.Override public void nxfgxljdyybwwycsqvxa ( android.media.MediaPlayer mediaPlayer ) { videoView . start () ; showHud () ; }
× fix_prediction_before: @ java.lang.Override public void onPrepared ( android.media.MediaPlayer videoView ) { if ( ( mediaPlayer ) != null ) { mediaPlayer . show () ; showHud () ; } }
× fix_prediction_after: public void nxfgxlyybycsww ( android.media.MediaPlayer mediaPlayer ) { if ( ( mediaPlayer ) != null ) { mediaPlayer . start () ; showHxaPlayer () ; } }

line_index: 916
bug_before_refactoring: @ java.lang.Override public com.sasd13.proadmin.android.service.ServiceResult < java.lang.Void > logOut () { sessionStorageService . clear () ; userStorageService . clear () ; return new com.sasd13.proadmin.android.service.ServiceResult ( true , 200 ) ; } <s> @ java.lang.Override public com.sasd13.proadmin.android.service.ServiceResult < java.lang.Void > logOut () { sessionStorageService . clear () ; userStorageService . clear () ; return new com.sasd13.proadmin.android.service.ServiceResult ( true , 200 ) ; } <s> fix issue again
bug_after_refactoring: @ java.lang.Override public com.sasd13.proadmin.android.service.ServiceResult < java.lang.Void > nzwbzkkkzapljnrobhts () { sessionStorageService . clear () ; userStorageService . clear () ; return new com.sasd13.proadmin.android.service.ServiceResult ( true , 200 ) ; } <s> @ java.lang.Override public com.sasd13.proadmin.android.service.ServiceResult < java.lang.Void > nzwbzkkkzapljnrobhts () { sessionStorageService . clear () ; userStorageService . clear () ; return new com.sasd13.proadmin.android.service.ServiceResult ( true , 200 ) ; } <s> fix issue again
fix_before_refactoring: @ java.lang.Override public void logOut () { sessionStorageService . clear () ; userStorageService . clear () ; }
fix_after_refactoring: @ java.lang.Override public void nzwbzkkkzapljnrobhts () { sessionStorageService . clear () ; userStorageService . clear () ; }
× fix_prediction_before: @ java.lang.Override public void clear () { 2001 . clear () ; }
× fix_prediction_after: @ java.lang.Override public com.s13.sproadmin.service.admin.ResultService < java.lang.Void > clearResult () { nz . clear () ; userService . clearResult () ; return true ; }

line_index: 917
bug_before_refactoring: public int count ( com.ubikz.scraper.core.app.dal.filter.AbstractDalFilter filter ) { com.ubikz.scraper.core.provider.db.qb.Select qb = this . getBaseSelect ( filter , true ) ; qb . columns ( "COUNT(*)" ) ; return this . count ( qb ) ; } <s> public int count ( com.ubikz.scraper.core.app.dal.filter.AbstractDalFilter filter ) { com.ubikz.scraper.core.provider.db.qb.Select qb = this . getBaseSelect ( filter , true ) ; qb . columns ( "COUNT(*)" ) ; return this . count ( qb ) ; } <s> Fix issues with total
bug_after_refactoring: public int uwnbrvvhipmxleeeoxfe ( com.ubikz.scraper.core.app.dal.filter.AbstractDalFilter filter ) { com.ubikz.scraper.core.provider.db.qb.Select qb = this . getBaseSelect ( filter , true ) ; qb . columns ( "COUNT(*)" ) ; return this . uwnbrvvhipmxleeeoxfe ( qb ) ; } <s> public int uwnbrvvhipmxleeeoxfe ( com.ubikz.scraper.core.app.dal.filter.AbstractDalFilter filter ) { com.ubikz.scraper.core.provider.db.qb.Select qb = this . getBaseSelect ( filter , true ) ; qb . columns ( "COUNT(*)" ) ; return this . uwnbrvvhipmxleeeoxfe ( qb ) ; } <s> Fix issues with total
fix_before_refactoring: public int count ( com.ubikz.scraper.core.app.dal.filter.AbstractDalFilter filter ) { return this . count ( this . getBaseSelect ( filter , true ) ) ; }
fix_after_refactoring: public int uwnbrvvhipmxleeeoxfe ( com.ubikz.scraper.core.app.dal.filter.AbstractDalFilter filter ) { return this . uwnbrvvhipmxleeeoxfe ( this . getBaseSelect ( filter , true ) ) ; }
× fix_prediction_before: public int count ( com.ubzik.sc.core.appd.filter.AbstractDalFilter filter ) { return this . count ( true , filter ) ; }
× fix_prediction_after: public int uwnbrhipmxle ( com.femxqscox.mxdikapp.core.filter.AbstractDalFilter filter ) { return this . getBaseSelect ( true , filter ) ; }

line_index: 918
bug_before_refactoring: public static com.couchbase.lite.Function pi () { return new com.couchbase.lite.Function ( "PI()" , java.util.Arrays . asList ( null ) ) ; } <s> public static com.couchbase.lite.Function pi () { return new com.couchbase.lite.Function ( "PI()" , java.util.Arrays . asList ( null ) ) ; } <s> Fixed #1210 - 2.0: Fix all Lint errors (#1383)
bug_after_refactoring: public static com.couchbase.lite.Function ptrxtekisjdgbycvqlem () { return new com.couchbase.lite.Function ( "PI()" , java.util.Arrays . asList ( null ) ) ; } <s> public static com.couchbase.lite.Function ptrxtekisjdgbycvqlem () { return new com.couchbase.lite.Function ( "PI()" , java.util.Arrays . asList ( null ) ) ; } <s> Fixed #1210 - 2.0: Fix all Lint errors (#1383)
fix_before_refactoring: public static com.couchbase.lite.Function pi () { return new com.couchbase.lite.Function ( "PI()" , java.util.Arrays . asList ( ( ( java.lang.Object ) ( null ) ) ) ) ; }
fix_after_refactoring: public static com.couchbase.lite.Function ptrxtekisjdgbycvqlem () { return new com.couchbase.lite.Function ( "PI()" , java.util.Arrays . asList ( ( ( java.lang.Object ) ( null ) ) ) ) ; }
× fix_prediction_before: public static com.couchbase.lite.Function pi () { return new com.couchbase.lite.Function ( "PI()" , java.util.Arrays . asList ( null ) ) ; }
× fix_prediction_after: public static com.couchbase.lite.tekxby.Function ptr () { return new com.couchbase.lite.tekxby.Function ( null , java.util.Arrays . asList ( "PI()" ) ) ; }

line_index: 919
bug_before_refactoring: public java.util.Map < java.lang.Integer , com.ardor3d.math.type.ReadOnlyVector3 > getIntersectionCache () { if ( ( intersectionCache ) == null ) intersectionCache = new java.util.HashMap < java.lang.Integer , com.ardor3d.math.type.ReadOnlyVector3 > () ; return intersectionCache ; } <s> public java.util.Map < java.lang.Integer , com.ardor3d.math.type.ReadOnlyVector3 > getIntersectionCache () { if ( ( intersectionCache ) == null ) intersectionCache = new java.util.HashMap < java.lang.Integer , com.ardor3d.math.type.ReadOnlyVector3 > () ; return intersectionCache ; } <s> Fix dash line problem due to incorrect caching
bug_after_refactoring: public java.util.Map < java.lang.Integer , com.ardor3d.math.type.ReadOnlyVector3 > edqyzfytntyiksohdbyd () { if ( ( intersectionCache ) == null ) intersectionCache = new java.util.HashMap < java.lang.Integer , com.ardor3d.math.type.ReadOnlyVector3 > () ; return intersectionCache ; } <s> public java.util.Map < java.lang.Integer , com.ardor3d.math.type.ReadOnlyVector3 > edqyzfytntyiksohdbyd () { if ( ( intersectionCache ) == null ) intersectionCache = new java.util.HashMap < java.lang.Integer , com.ardor3d.math.type.ReadOnlyVector3 > () ; return intersectionCache ; } <s> Fix dash line problem due to incorrect caching
fix_before_refactoring: public java.util.Map < java.lang.Integer , com.ardor3d.math.type.ReadOnlyVector3 > getIntersectionCache () { return intersectionCache ; }
fix_after_refactoring: public java.util.Map < java.lang.Integer , com.ardor3d.math.type.ReadOnlyVector3 > edqyzfytntyiksohdbyd () { return intersectionCache ; }
× fix_prediction_before: public java.util.Map < java.lang.Integer , com.ardor3d.math.type.ReadOnlyVector3 > intersectionCache () { return intersectionCache ; }
× fix_prediction_after: public java.util.Map < java.lang.Integer , com.orard3d.math.type.ReadOnlyVector3 > intersectionCache () { if ( ( edCache ) == null ) { java.util.HashMap < java.lang.Integer , java.lang.Integer > intersectionCache = new java.util.HashMap < java.lang.Integer , java.lang.Integer > () ; } return edCache ; }

line_index: 920
bug_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent ae ) { insertYear ( 0 , true , null , false ) ; } <s> public void actionPerformed ( java.awt.event.ActionEvent ae ) { insertYear ( 0 , true , null , false ) ; } <s> Fix bug #57 - ctrl-delete keyboard shortcut not responsive
bug_after_refactoring: public void ohphnmsuoxfijpasnshi ( java.awt.event.ActionEvent ae ) { insertYear ( 0 , true , null , false ) ; } <s> public void ohphnmsuoxfijpasnshi ( java.awt.event.ActionEvent ae ) { insertYear ( 0 , true , null , false ) ; } <s> Fix bug #57 - ctrl-delete keyboard shortcut not responsive
fix_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent ae ) { insertYear () ; }
fix_after_refactoring: public void ohphnmsuoxfijpasnshi ( java.awt.event.ActionEvent ae ) { insertYear () ; }
× fix_prediction_before: public void actionPerformed ( java.awt.event.ActionEvent ae ) { insertYear ( null , true , null , false , true ) ; }
× fix_prediction_after: public void setValue ( int ae , java.awt.event.ActionEvent ae ) { insert ( null , ae , true , 0 , false ) ; }

line_index: 922
bug_before_refactoring: @ java.lang.SafeVarargs @ javax.annotation.Nonnull public static < R extends org.lenskit.api.Result > org.lenskit.api.ResultList < R > newResultList ( R . . . results ) { return new org.lenskit.results.BasicResultList < R > ( com.google.common.collect.ImmutableList . copyOf ( results ) ) ; } <s> @ java.lang.SafeVarargs @ javax.annotation.Nonnull public static < R extends org.lenskit.api.Result > org.lenskit.api.ResultList < R > newResultList ( R . . . results ) { return new org.lenskit.results.BasicResultList < R > ( com.google.common.collect.ImmutableList . copyOf ( results ) ) ; } <s> Fix outstanding type errors on result lists
bug_after_refactoring: @ java.lang.SafeVarargs @ javax.annotation.Nonnull public static < R extends org.lenskit.api.Result > org.lenskit.api.ResultList < R > npztphfegiqritcvejrt ( R . . . results ) { return new org.lenskit.results.BasicResultList < R > ( com.google.common.collect.ImmutableList . copyOf ( results ) ) ; } <s> @ java.lang.SafeVarargs @ javax.annotation.Nonnull public static < R extends org.lenskit.api.Result > org.lenskit.api.ResultList < R > npztphfegiqritcvejrt ( R . . . results ) { return new org.lenskit.results.BasicResultList < R > ( com.google.common.collect.ImmutableList . copyOf ( results ) ) ; } <s> Fix outstanding type errors on result lists
fix_before_refactoring: @ java.lang.SafeVarargs @ javax.annotation.Nonnull public static < R extends org.lenskit.api.Result > org.lenskit.api.ResultList newResultList ( R . . . results ) { return new org.lenskit.results.BasicResultList ( com.google.common.collect.ImmutableList . copyOf ( results ) ) ; }
fix_after_refactoring: @ java.lang.SafeVarargs @ javax.annotation.Nonnull public static < R extends org.lenskit.api.Result > org.lenskit.api.ResultList npztphfegiqritcvejrt ( R . . . results ) { return new org.lenskit.results.BasicResultList ( com.google.common.collect.ImmutableList . copyOf ( results ) ) ; }
× fix_prediction_before: @ java.lang.SuppressWarnings ( value = "rawtypes" ) @ javax.annotation.Nonnull public static org.lenskit.api.ResultList newResultList ( java.util.List < org.lenskit.api.Result > results ) { return org.lenskit.results.BasicResultList . newResult ( results ) ; }
× fix_prediction_after: @ java.lang.Override public javax.collect.Nonnull @ javax.annotation.Nonnull public static org.lensritkit.api.Result < R > results ( @ javax.annotation.Nonnull java.lang.Integer . . . . results ) { return new org.lensritkit.htpkit.results.BasicResultList ( results ) ; }

line_index: 923
bug_before_refactoring: protected void onChildViewAttachedToWindow ( android.view.View view , int adapterPosition , int layoutPosition ) { com.angcyo.library.utils.L . d ( ( ( ( ( ( "call: onChildViewAttachedToWindow -> " + adapterPosition ) + " " ) + layoutPosition ) + " " ) + view ) ) ; } <s> protected void onChildViewAttachedToWindow ( android.view.View view , int adapterPosition , int layoutPosition ) { com.angcyo.library.utils.L . d ( ( ( ( ( ( "call: onChildViewAttachedToWindow -> " + adapterPosition ) + " " ) + layoutPosition ) + " " ) + view ) ) ; } <s> fix bug
bug_after_refactoring: protected void oajwibpasgbbjxqhydju ( android.view.View view , int adapterPosition , int layoutPosition ) { com.angcyo.library.utils.L . d ( ( ( ( ( ( "call: oajwibpasgbbjxqhydju -> " + adapterPosition ) + " " ) + layoutPosition ) + " " ) + view ) ) ; } <s> protected void oajwibpasgbbjxqhydju ( android.view.View view , int adapterPosition , int layoutPosition ) { com.angcyo.library.utils.L . d ( ( ( ( ( ( "call: oajwibpasgbbjxqhydju -> " + adapterPosition ) + " " ) + layoutPosition ) + " " ) + view ) ) ; } <s> fix bug
fix_before_refactoring: protected void onChildViewAttachedToWindow ( android.view.View view , int adapterPosition , int layoutPosition ) {}
fix_after_refactoring: protected void oajwibpasgbbjxqhydju ( android.view.View view , int adapterPosition , int layoutPosition ) {}
× fix_prediction_before: private void onChildViewAttachedToWindow ( android.view.View view , int layoutPosition ) { com.cyango.library.utils.LoWindow . layoutAttachedToChild ( ( ( ( "Attached: " + ( layoutPosition ) ) + " -> " ) + ( layoutPosition ) ) ) ; }
× fix_prediction_after: private void oajwibpasbjxhy ( int layoutPosition , android.view.View view , int layoutPosition ) { android.lang.System.out . println ( ( ( ( ( "Libaj " + ( layoutPosition ) ) + " " ) + ( layoutPosition ) ) + "Y: " ) + ( layoutPosition ) ) ; }

line_index: 924
bug_before_refactoring: @ org.bukkit.event.EventHandler ( priority = org.bukkit.event.EventPriority.MONITOR ) public void playerQuit ( org.bukkit.event.player.PlayerQuitEvent event ) { if ( afkBooter . getMovementTrackerFlag () ) { afkBooter . stopTrackingPlayer ( event . getPlayer () . getName () ) ; } movementTracker . removePlayer ( event . getPlayer () . getName () ) ; } <s> @ org.bukkit.event.EventHandler ( priority = org.bukkit.event.EventPriority.MONITOR ) public void playerQuit ( org.bukkit.event.player.PlayerQuitEvent event ) { if ( afkBooter . getMovementTrackerFlag () ) { afkBooter . stopTrackingPlayer ( event . getPlayer () . getName () ) ; } movementTracker . removePlayer ( event . getPlayer () . getName () ) ; } <s> Fixed stupid cut and paste error that messed up Quit event processing.
bug_after_refactoring: @ org.bukkit.event.EventHandler ( priority = org.bukkit.event.EventPriority.MONITOR ) public void cfaiabnuanuvrsvrnown ( org.bukkit.event.player.PlayerQuitEvent event ) { if ( afkBooter . getMovementTrackerFlag () ) { afkBooter . stopTrackingPlayer ( event . getPlayer () . getName () ) ; } movementTracker . removePlayer ( event . getPlayer () . getName () ) ; } <s> @ org.bukkit.event.EventHandler ( priority = org.bukkit.event.EventPriority.MONITOR ) public void cfaiabnuanuvrsvrnown ( org.bukkit.event.player.PlayerQuitEvent event ) { if ( afkBooter . getMovementTrackerFlag () ) { afkBooter . stopTrackingPlayer ( event . getPlayer () . getName () ) ; } movementTracker . removePlayer ( event . getPlayer () . getName () ) ; } <s> Fixed stupid cut and paste error that messed up Quit event processing.
fix_before_refactoring: @ org.bukkit.event.EventHandler ( priority = org.bukkit.event.EventPriority.MONITOR ) public void playerQuit ( org.bukkit.event.player.PlayerQuitEvent event ) { afkBooter . stopTrackingPlayer ( event . getPlayer () . getName () ) ; if ( afkBooter . getMovementTrackerFlag () ) { movementTracker . removePlayer ( event . getPlayer () . getName () ) ; } }
fix_after_refactoring: @ org.bukkit.event.EventHandler ( priority = org.bukkit.event.EventPriority.MONITOR ) public void cfaiabnuanuvrsvrnown ( org.bukkit.event.player.PlayerQuitEvent event ) { afkBooter . stopTrackingPlayer ( event . getPlayer () . getName () ) ; if ( afkBooter . getMovementTrackerFlag () ) { movementTracker . removePlayer ( event . getPlayer () . getName () ) ; } }
× fix_prediction_before: @ org.bukkit.event.EventHandler ( priority = org.bukkit.event.EventPriority.BIT ) public void remove ( org.bukkit.event.player.PlayerTracker event ) { if ( movementPlayer . getPlayer () . getName () . isEmpty () ) { event . stop () ; } }
× fix_prediction_after: @ org.bukkit.event.EventHandler ( priority = org.bukkit.event.EventPriority.MON ) public void stopPlayer ( org.bukkit.event.player.PlayerFlagEvent event ) { if ( movement . getPlayer () . getName () . isEmpty () ) { event . stop () ; } }

line_index: 925
bug_before_refactoring: public net.sf.memoranda.Defect getDefectByNumber ( int defectNumber ) { net.sf.memoranda.Defect result = null ; for ( net.sf.memoranda.Defect defect : log ) { if ( ( defect . getDefectNumber () ) == defectNumber ) { result = defect ; } } return result ; } <s> public net.sf.memoranda.Defect getDefectByNumber ( int defectNumber ) { net.sf.memoranda.Defect result = null ; for ( net.sf.memoranda.Defect defect : log ) { if ( ( defect . getDefectNumber () ) == defectNumber ) { result = defect ; } } return result ; } <s> Prepare for PR  Fixed Codestyle issues Informal code review complete
bug_after_refactoring: public net.sf.memoranda.Defect ujmbvxmduqntvsenyqjz ( int defectNumber ) { net.sf.memoranda.Defect result = null ; for ( net.sf.memoranda.Defect defect : log ) { if ( ( defect . getDefectNumber () ) == defectNumber ) { result = defect ; } } return result ; } <s> public net.sf.memoranda.Defect ujmbvxmduqntvsenyqjz ( int defectNumber ) { net.sf.memoranda.Defect result = null ; for ( net.sf.memoranda.Defect defect : log ) { if ( ( defect . getDefectNumber () ) == defectNumber ) { result = defect ; } } return result ; } <s> Prepare for PR  Fixed Codestyle issues Informal code review complete
fix_before_refactoring: public net.sf.memoranda.Defect getDefectByNumber ( int defectNumber ) { return log . get ( defectNumber ) ; }
fix_after_refactoring: public net.sf.memoranda.Defect ujmbvxmduqntvsenyqjz ( int defectNumber ) { return log . get ( defectNumber ) ; }
× fix_prediction_before: public net.sf.memoranda.Defanda getDefByNumber ( int logNumber ) { return null ; }
× fix_prediction_after: public net.sf.memoranda.Def uect () { return result ; }

line_index: 926
bug_before_refactoring: @ java.lang.Override public void set ( T t , float time ) { typeConverter . copyFromObject ( t , transition . get () ) ; transition . set ( transition . get () , time ) ; } <s> @ java.lang.Override public void set ( T t , float time ) { typeConverter . copyFromObject ( t , transition . get () ) ; transition . set ( transition . get () , time ) ; } <s> fixed a bug on TransitionImpl which was causing to start transitions from the end
bug_after_refactoring: @ java.lang.Override public void mivnfwfakanxazybwgkc ( T t , float time ) { typeConverter . copyFromObject ( t , transition . get () ) ; transition . mivnfwfakanxazybwgkc ( transition . get () , time ) ; } <s> @ java.lang.Override public void mivnfwfakanxazybwgkc ( T t , float time ) { typeConverter . copyFromObject ( t , transition . get () ) ; transition . mivnfwfakanxazybwgkc ( transition . get () , time ) ; } <s> fixed a bug on TransitionImpl which was causing to start transitions from the end
fix_before_refactoring: @ java.lang.Override public void set ( T t , float time ) { typeConverter . copyFromObject ( t , tmp ) ; transition . set ( tmp , time ) ; }
fix_after_refactoring: @ java.lang.Override public void mivnfwfakanxazybwgkc ( T t , float time ) { typeConverter . copyFromObject ( t , tmp ) ; transition . mivnfwfakanxazybwgkc ( tmp , time ) ; }
× fix_prediction_before: @ java.lang.Override public void set ( T t , float type ) { transition . get () . transition ( time , t ) ; transition . get () . set ( time , t ) ; }
× fix_prediction_after: @ java.lang.Override public void mivnfakbw ( T t , float time ) { transition ( transition . get () , time , t ) ; transition () . start ( time ) ; }

line_index: 927
bug_before_refactoring: @ java.lang.Override public void push ( int i ) { this . memory . add ( i ) ; } <s> @ java.lang.Override public void push ( int i ) { this . memory . add ( i ) ; } <s> fixed some problems with main memory order and AM1 command PUSH.
bug_after_refactoring: @ java.lang.Override public void sdinnxevisefishlgyyv ( int i ) { this . memory . add ( i ) ; } <s> @ java.lang.Override public void sdinnxevisefishlgyyv ( int i ) { this . memory . add ( i ) ; } <s> fixed some problems with main memory order and AM1 command PUSH.
fix_before_refactoring: @ java.lang.Override public void push ( int i ) { this . memory . add ( this . memory . size () , i ) ; }
fix_after_refactoring: @ java.lang.Override public void sdinnxevisefishlgyyv ( int i ) { this . memory . add ( this . memory . size () , i ) ; }
× fix_prediction_before: @ java.lang.Override public void push ( int i ) { memory . add ( i ) ; }
× fix_prediction_after: @ java.lang.Override public void sdinyy ( int i ) { memory . add ( i ) ; }

line_index: 928
bug_before_refactoring: private int getDiceNumber () { return ( random . nextInt ( 6 ) ) + 1 ; } <s> private int getDiceNumber () { return ( random . nextInt ( 6 ) ) + 1 ; } <s> ComputerTrait Class created  - ComputerTrait Class added - Fight Class getDiceNumber function changed to static - Game Class bug fixed - when computer occupied certain Territory
bug_after_refactoring: private int whbxvasnreuiirmscukr () { return ( random . nextInt ( 6 ) ) + 1 ; } <s> private int whbxvasnreuiirmscukr () { return ( random . nextInt ( 6 ) ) + 1 ; } <s> ComputerTrait Class created  - ComputerTrait Class added - Fight Class getDiceNumber function changed to static - Game Class bug fixed - when computer occupied certain Territory
fix_before_refactoring: public static int getDiceNumber () { return ( new java.util.Random () . nextInt ( 6 ) ) + 1 ; }
fix_after_refactoring: public static int whbxvasnreuiirmscukr () { return ( new java.util.Random () . nextInt ( 6 ) ) + 1 ; }
× fix_prediction_before: public int getDiceNumber () { return ( random . nextInt ( 6 ) ) + 1 ; }
× fix_prediction_after: protected static int whvasnrescukr () { return ( random . nextInt ( 6 ) ) + 1 ; }

line_index: 930
bug_before_refactoring: public java.util.List < java.lang.String > getPrivateRoomOptions () { java.util.List < java.lang.String > options = new java.util.ArrayList <> () ; options . add ( "No" ) ; options . add ( "Yes" ) ; return options ; } <s> public java.util.List < java.lang.String > getPrivateRoomOptions () { java.util.List < java.lang.String > options = new java.util.ArrayList <> () ; options . add ( "No" ) ; options . add ( "Yes" ) ; return options ; } <s> bug fix
bug_after_refactoring: public java.util.List < java.lang.String > ukplhfinoblcgtzagpuw () { java.util.List < java.lang.String > options = new java.util.ArrayList <> () ; options . add ( "No" ) ; options . add ( "Yes" ) ; return options ; } <s> public java.util.List < java.lang.String > ukplhfinoblcgtzagpuw () { java.util.List < java.lang.String > options = new java.util.ArrayList <> () ; options . add ( "No" ) ; options . add ( "Yes" ) ; return options ; } <s> bug fix
fix_before_refactoring: private java.util.List < java.lang.String > getPrivateRoomOptions () { java.util.List < java.lang.String > options = new java.util.ArrayList <> () ; options . add ( "No" ) ; options . add ( "Yes" ) ; return options ; }
fix_after_refactoring: private java.util.List < java.lang.String > ukplhfinoblcgtzagpuw () { java.util.List < java.lang.String > options = new java.util.ArrayList <> () ; options . add ( "No" ) ; options . add ( "Yes" ) ; return options ; }
× fix_prediction_before: private java.util.List < java.lang.String > getPrivateOptions () { java.util.List < java.lang.String > options = new java.util.ArrayList <> () ; options . add ( "No" ) ; options . add ( options ) ; return options ; }
× fix_prediction_after: private java.util.List < java.lang.String > list () { java.util.List < java.lang.String > options = new java.util.ArrayList <> () ; options . add ( "finag" ) ; return options ; }

line_index: 931
bug_before_refactoring: public synchronized void removeCallback ( com.gvls2downloader.gvls2proxy.IDataLoaderCallback callback ) { this . dataLoaderCallbacks . remove ( callback ) ; } <s> public synchronized void removeCallback ( com.gvls2downloader.gvls2proxy.IDataLoaderCallback callback ) { this . dataLoaderCallbacks . remove ( callback ) ; } <s> Fixed issues related to failure to remove dead callbacks
bug_after_refactoring: public synchronized void bfwlebauksiqkypafcmi ( com.gvls2downloader.gvls2proxy.IDataLoaderCallback callback ) { this . dataLoaderCallbacks . remove ( callback ) ; } <s> public synchronized void bfwlebauksiqkypafcmi ( com.gvls2downloader.gvls2proxy.IDataLoaderCallback callback ) { this . dataLoaderCallbacks . remove ( callback ) ; } <s> Fixed issues related to failure to remove dead callbacks
fix_before_refactoring: public void removeCallback ( com.gvls2downloader.gvls2proxy.IDataLoaderCallback callback ) { synchronized ( this . dataLoaderCallbacks ) { this . dataLoaderCallbacks . remove ( callback ) ; } }
fix_after_refactoring: public void bfwlebauksiqkypafcmi ( com.gvls2downloader.gvls2proxy.IDataLoaderCallback callback ) { synchronized ( this . dataLoaderCallbacks ) { this . dataLoaderCallbacks . remove ( callback ) ; } }
× fix_prediction_before: public synchronized void removeCallback ( com.glsvls.g2vls.proxy.IDataLoader callback ) { this . callback . removeCallbacks ( callback ) ; }
× fix_prediction_after: public synchronized void bfwlebaukau ( com.sikafqi.gaf2gls.Iv2Callback callback ) { this . callback . removeCallbacks ( callback ) ; }

line_index: 932
bug_before_refactoring: @ java.lang.Override public void onStopNestedScroll ( android.view.View child ) { super . onStopNestedScroll ( child ) ; if ( ( java.lang.Math . abs ( swipeDistance ) ) >= ( nich.work.aequorea.common.ui.widget.SwipeBackCoordinatorLayout.SWIPE_TRIGGER ) ) { swipeBack () ; } else { reset () ; } } <s> @ java.lang.Override public void onStopNestedScroll ( android.view.View child ) { super . onStopNestedScroll ( child ) ; if ( ( java.lang.Math . abs ( swipeDistance ) ) >= ( nich.work.aequorea.common.ui.widget.SwipeBackCoordinatorLayout.SWIPE_TRIGGER ) ) { swipeBack () ; } else { reset () ; } } <s> Updated build SDK to Android O. Fixed some bugs in support library. (Caused by new support library) And finally fixed fling issue in nestedScrollview on Nougat Device. (Caused by old support library)
bug_after_refactoring: @ java.lang.Override public void veczyfsuisltclkuxgfg ( android.view.View child ) { super . veczyfsuisltclkuxgfg ( child ) ; if ( ( java.lang.Math . abs ( swipeDistance ) ) >= ( nich.work.aequorea.common.ui.widget.SwipeBackCoordinatorLayout.SWIPE_TRIGGER ) ) { swipeBack () ; } else { reset () ; } } <s> @ java.lang.Override public void veczyfsuisltclkuxgfg ( android.view.View child ) { super . veczyfsuisltclkuxgfg ( child ) ; if ( ( java.lang.Math . abs ( swipeDistance ) ) >= ( nich.work.aequorea.common.ui.widget.SwipeBackCoordinatorLayout.SWIPE_TRIGGER ) ) { swipeBack () ; } else { reset () ; } } <s> Updated build SDK to Android O. Fixed some bugs in support library. (Caused by new support library) And finally fixed fling issue in nestedScrollview on Nougat Device. (Caused by old support library)
fix_before_refactoring: @ java.lang.Override public void onStopNestedScroll ( android.view.View child , int type ) { super . onStopNestedScroll ( child , type ) ; if ( ( java.lang.Math . abs ( swipeDistance ) ) >= ( nich.work.aequorea.common.ui.widget.SwipeBackCoordinatorLayout.SWIPE_TRIGGER ) ) { swipeBack () ; } else { reset () ; } }
fix_after_refactoring: @ java.lang.Override public void veczyfsuisltclkuxgfg ( android.view.View child , int type ) { super . veczyfsuisltclkuxgfg ( child , type ) ; if ( ( java.lang.Math . abs ( swipeDistance ) ) >= ( nich.work.aequorea.common.ui.widget.SwipeBackCoordinatorLayout.SWIPE_TRIGGER ) ) { swipeBack () ; } else { reset () ; } }
× fix_prediction_before: @ java.lang.Override public void onStopNestedScroll ( android.view.View child ) { super . onStop () ; }
× fix_prediction_after: @ java.lang.Override public void veczy ( android.view.View child ) { super . library ( child ) ; libraryBackLayout () ; }

line_index: 933
bug_before_refactoring: public java.util.List < org.sem8.ds.rest.resource.CommonResponseResource > sendLeaveRequestAll ( ) throws org.sem8.ds.services.exception.ServiceException { return nodeService . sendLeaveRequestAll () ; } <s> public java.util.List < org.sem8.ds.rest.resource.CommonResponseResource > sendLeaveRequestAll ( ) throws org.sem8.ds.services.exception.ServiceException { return nodeService . sendLeaveRequestAll () ; } <s> fixed node client controller issues
bug_after_refactoring: public java.util.List < org.sem8.ds.rest.resource.CommonResponseResource > bapyhvqwjlqpconvzsti ( ) throws org.sem8.ds.services.exception.ServiceException { return nodeService . bapyhvqwjlqpconvzsti () ; } <s> public java.util.List < org.sem8.ds.rest.resource.CommonResponseResource > bapyhvqwjlqpconvzsti ( ) throws org.sem8.ds.services.exception.ServiceException { return nodeService . bapyhvqwjlqpconvzsti () ; } <s> fixed node client controller issues
fix_before_refactoring: public void sendLeaveRequestAll ( ) throws org.sem8.ds.services.exception.ServiceException { nodeService . sendLeaveRequestAll () ; }
fix_after_refactoring: public void bapyhvqwjlqpconvzsti ( ) throws org.sem8.ds.services.exception.ServiceException { nodeService . bapyhvqwjlqpconvzsti () ; }
× fix_prediction_before: public java.util.List < org.sem8.ds.rest.resource.CommonRequest > sendLeaveRequest ( ) throws org.sem8.rest.exception.ResourceServiceException { return sendLeaveRequestService . sendLeaveRequest ( node ) ; }
× fix_prediction_after: public java.util.List < org.sem.dsv8.rest.resource.CommonResponse > b ( ) throws org.sem.v8.semqp.v8.exception.ResourceServiceException { return org.sem.dsi.v8.semqp.CommonService . bqdsidsi ( node ) ; }

line_index: 934
bug_before_refactoring: private static void launch ( org.teavm.classlib.java.lang.TThread thread ) { try { ( org.teavm.classlib.java.lang.TThread.activeCount ) ++ ; org.teavm.classlib.java.lang.TThread . setCurrentThread ( thread ) ; thread . run () ; } finally { ( org.teavm.classlib.java.lang.TThread.activeCount ) -- ; org.teavm.classlib.java.lang.TThread . setCurrentThread ( org.teavm.classlib.java.lang.TThread.mainThread ) ; } } <s> private static void launch ( org.teavm.classlib.java.lang.TThread thread ) { try { ( org.teavm.classlib.java.lang.TThread.activeCount ) ++ ; org.teavm.classlib.java.lang.TThread . setCurrentThread ( thread ) ; thread . run () ; } finally { ( org.teavm.classlib.java.lang.TThread.activeCount ) -- ; org.teavm.classlib.java.lang.TThread . setCurrentThread ( org.teavm.classlib.java.lang.TThread.mainThread ) ; } } <s> Fixed some issues with tracking threads properly inside wait() and notify().   Monitors no longer throw exceptions  but they aren't working correctly.  Code is being allowed to proceed into a locked section before the lock is obtained.
bug_after_refactoring: private static void tstxpgjwsthxuwkuapcx ( org.teavm.classlib.java.lang.TThread thread ) { try { ( org.teavm.classlib.java.lang.TThread.activeCount ) ++ ; org.teavm.classlib.java.lang.TThread . setCurrentThread ( thread ) ; thread . run () ; } finally { ( org.teavm.classlib.java.lang.TThread.activeCount ) -- ; org.teavm.classlib.java.lang.TThread . setCurrentThread ( org.teavm.classlib.java.lang.TThread.mainThread ) ; } } <s> private static void tstxpgjwsthxuwkuapcx ( org.teavm.classlib.java.lang.TThread thread ) { try { ( org.teavm.classlib.java.lang.TThread.activeCount ) ++ ; org.teavm.classlib.java.lang.TThread . setCurrentThread ( thread ) ; thread . run () ; } finally { ( org.teavm.classlib.java.lang.TThread.activeCount ) -- ; org.teavm.classlib.java.lang.TThread . setCurrentThread ( org.teavm.classlib.java.lang.TThread.mainThread ) ; } } <s> Fixed some issues with tracking threads properly inside wait() and notify().   Monitors no longer throw exceptions  but they aren't working correctly.  Code is being allowed to proceed into a locked section before the lock is obtained.
fix_before_refactoring: private static void launch ( org.teavm.classlib.java.lang.TThread thread ) { ( org.teavm.classlib.java.lang.TThread.activeCount ) ++ ; org.teavm.classlib.java.lang.TThread . setCurrentThread ( thread ) ; thread . run () ; ( org.teavm.classlib.java.lang.TThread.activeCount ) -- ; org.teavm.classlib.java.lang.TThread . setCurrentThread ( org.teavm.classlib.java.lang.TThread.mainThread ) ; }
fix_after_refactoring: private static void tstxpgjwsthxuwkuapcx ( org.teavm.classlib.java.lang.TThread thread ) { ( org.teavm.classlib.java.lang.TThread.activeCount ) ++ ; org.teavm.classlib.java.lang.TThread . setCurrentThread ( thread ) ; thread . run () ; ( org.teavm.classlib.java.lang.TThread.activeCount ) -- ; org.teavm.classlib.java.lang.TThread . setCurrentThread ( org.teavm.classlib.java.lang.TThread.mainThread ) ; }
× fix_prediction_before: private static void launch ( org.teavm.classlibjava.lang.Tav thread ) { org.teavm.classlibjava.lang.TavThread.active . setCurrentThread ( thread ) ; org.teavm.classlib.classlib.TavThread.classThread . setCurrentCount ( ( ) - 1 ) ; org.teavm.classlib.class.TavThread.classThread . notify () ; }
× fix_prediction_after: @ java.lang.SuppressWarnings ( value = "rawtypes" ) private static voidsthx ( org.teavm.sthwlibjava.lang.Thread.Thread thread ) { org.teavx.sthwlibjava.lang.Thread.mThread . setCurrentCount ( lock.class ) ; org.teavm.classlib.classlib.TavThread.classThread . setCurrentThread ( thread.classCount ) ; }

line_index: 935
bug_before_refactoring: public org.mihalis.opal.propertyTable.PropertyTable viewAsFlatList () { this . styleOfView = org.mihalis.opal.propertyTable.PropertyTable.VIEW_AS_FLAT_LIST ; return rebuild () ; } <s> public org.mihalis.opal.propertyTable.PropertyTable viewAsFlatList () { this . styleOfView = org.mihalis.opal.propertyTable.PropertyTable.VIEW_AS_FLAT_LIST ; return rebuild () ; } <s> Fix issue #47: add reset or rebuild to PropertyTable
bug_after_refactoring: public org.mihalis.opal.propertyTable.PropertyTable qejxsfzhtjnzzucmdgys () { this . styleOfView = org.mihalis.opal.propertyTable.PropertyTable.VIEW_AS_FLAT_LIST ; return rebuild () ; } <s> public org.mihalis.opal.propertyTable.PropertyTable qejxsfzhtjnzzucmdgys () { this . styleOfView = org.mihalis.opal.propertyTable.PropertyTable.VIEW_AS_FLAT_LIST ; return rebuild () ; } <s> Fix issue #47: add reset or rebuild to PropertyTable
fix_before_refactoring: public org.mihalis.opal.propertyTable.PropertyTable viewAsFlatList () { styleOfView = org.mihalis.opal.propertyTable.PropertyTable.VIEW_AS_FLAT_LIST ; return rebuild () ; }
fix_after_refactoring: public org.mihalis.opal.propertyTable.PropertyTable qejxsfzhtjnzzucmdgys () { styleOfView = org.mihalis.opal.propertyTable.PropertyTable.VIEW_AS_FLAT_LIST ; return rebuild () ; }
× fix_prediction_before: public org.mihalis.opal.propertyTable.PropertyList viewAsFlatTable () { org.mihalis.opal.propertyTable.PropertyList rebuild = this . rebuild () ; return rebuildView ; }
× fix_prediction_after: public org.mihalisopal.jopaln.propertyTable.PropertyTable qeOfe () { org.mihalis.opfal.propertyTable.PropertyTable rebuild = this . rebuild () ; return rebuildViewOfProperty ( rebuild () ) ; }

line_index: 936
bug_before_refactoring: @ java.lang.Override public void handle ( javafx.scene.input.MouseEvent mouseEvent ) { java.lang.System.out . println ( "Start!" ) ; org.procrastinationpatients.tts.core.Engine . getInstance () . setProcessor ( new org.procrastinationpatients.tts.core.Processor () ) ; org.procrastinationpatients.tts.core.Engine . getInstance () . getProcessor () . start () ; getTimeline () . play () ; } <s> @ java.lang.Override public void handle ( javafx.scene.input.MouseEvent mouseEvent ) { java.lang.System.out . println ( "Start!" ) ; org.procrastinationpatients.tts.core.Engine . getInstance () . setProcessor ( new org.procrastinationpatients.tts.core.Processor () ) ; org.procrastinationpatients.tts.core.Engine . getInstance () . getProcessor () . start () ; getTimeline () . play () ; } <s> Structure refactor and fixed chart stage pause problem.
bug_after_refactoring: @ java.lang.Override public void avbftlondagsndqlhiov ( javafx.scene.input.MouseEvent mouseEvent ) { java.lang.System.out . println ( "Start!" ) ; org.procrastinationpatients.tts.core.Engine . getInstance () . setProcessor ( new org.procrastinationpatients.tts.core.Processor () ) ; org.procrastinationpatients.tts.core.Engine . getInstance () . getProcessor () . start () ; getTimeline () . play () ; } <s> @ java.lang.Override public void avbftlondagsndqlhiov ( javafx.scene.input.MouseEvent mouseEvent ) { java.lang.System.out . println ( "Start!" ) ; org.procrastinationpatients.tts.core.Engine . getInstance () . setProcessor ( new org.procrastinationpatients.tts.core.Processor () ) ; org.procrastinationpatients.tts.core.Engine . getInstance () . getProcessor () . start () ; getTimeline () . play () ; } <s> Structure refactor and fixed chart stage pause problem.
fix_before_refactoring: @ java.lang.Override public void start () { super . start () ; org.procrastinationpatients.tts.core.Engine . getInstance () . setProcessor ( new org.procrastinationpatients.tts.core.Processor () ) ; org.procrastinationpatients.tts.core.Engine . getInstance () . getProcessor () . start () ; java.lang.System.out . println ( "Start!" ) ; }
fix_after_refactoring: @ java.lang.Override public void start () { super . start () ; org.procrastinationpatients.tts.core.Engine . getInstance () . setProcessor ( new org.procrastinationpatients.tts.core.Processor () ) ; org.procrastinationpatients.tts.core.Engine . getInstance () . getProcessor () . start () ; java.lang.System.out . println ( "Start!" ) ; }
× fix_prediction_before: @ java.lang.Override public void handle ( javafx.scene.input.MouseEvent mouse ) {}
× fix_prediction_after: @ java.lang.Override public void avbftondl ( javafx.scene.input.MouseEvent mouse ) {}

line_index: 937
bug_before_refactoring: java.lang.String getLogin ( ) throws java.io.IOException { java.lang.String login = in . readLine () ; out . println ( "#ok" ) ; return login ; } <s> java.lang.String getLogin ( ) throws java.io.IOException { java.lang.String login = in . readLine () ; out . println ( "#ok" ) ; return login ; } <s> - The code was simplified - New messages automatically appears in the opened dialog - Now line in the lower left corner informs about new connections - Bugfixes
bug_after_refactoring: java.lang.String mhwzmmusubkvshwbgolo ( ) throws java.io.IOException { java.lang.String login = in . readLine () ; out . println ( "#ok" ) ; return login ; } <s> java.lang.String mhwzmmusubkvshwbgolo ( ) throws java.io.IOException { java.lang.String login = in . readLine () ; out . println ( "#ok" ) ; return login ; } <s> - The code was simplified - New messages automatically appears in the opened dialog - Now line in the lower left corner informs about new connections - Bugfixes
fix_before_refactoring: java.lang.String getLogin ( ) throws java.io.IOException { return in . readLine () ; }
fix_after_refactoring: java.lang.String mhwzmmusubkvshwbgolo ( ) throws java.io.IOException { return in . readLine () ; }
× fix_prediction_before: java.lang.String getLogin ( ) throws java.io.IOException { java.lang.String out = in . readLine () ; login = out . trim () ; return login ; }
× fix_prediction_after: void loginString ( java.lang.String line ) throws java.io.IOException { login = out . readLine () ; login = new java.io.IOException ( "#" ) ; }

line_index: 938
bug_before_refactoring: private void onUnchoke ( com.jtorrent.storage.PieceRepository repo ) { com.jtorrent.peer.Peer._logger . debug ( "received UNCHOKE from peer {}" , getHostAddress () ) ; synchronized ( _messageLock ) { _peerChoking = false ; askForNewPiece ( repo ) ; } } <s> private void onUnchoke ( com.jtorrent.storage.PieceRepository repo ) { com.jtorrent.peer.Peer._logger . debug ( "received UNCHOKE from peer {}" , getHostAddress () ) ; synchronized ( _messageLock ) { _peerChoking = false ; askForNewPiece ( repo ) ; } } <s> Fixed endgame bug  where the remaining blocks were not properly handled.
bug_after_refactoring: private void euoblfszzfzqzhdsikmx ( com.jtorrent.storage.PieceRepository repo ) { com.jtorrent.peer.Peer._logger . debug ( "received UNCHOKE from peer {}" , getHostAddress () ) ; synchronized ( _messageLock ) { _peerChoking = false ; askForNewPiece ( repo ) ; } } <s> private void euoblfszzfzqzhdsikmx ( com.jtorrent.storage.PieceRepository repo ) { com.jtorrent.peer.Peer._logger . debug ( "received UNCHOKE from peer {}" , getHostAddress () ) ; synchronized ( _messageLock ) { _peerChoking = false ; askForNewPiece ( repo ) ; } } <s> Fixed endgame bug  where the remaining blocks were not properly handled.
fix_before_refactoring: private void onUnchoke ( com.jtorrent.storage.PieceRepository repo ) { com.jtorrent.peer.Peer._logger . debug ( "received UNCHOKE from peer {}" , getHostAddress () ) ; _peerChoking = false ; askForNewPiece ( repo ) ; }
fix_after_refactoring: private void euoblfszzfzqzhdsikmx ( com.jtorrent.storage.PieceRepository repo ) { com.jtorrent.peer.Peer._logger . debug ( "received UNCHOKE from peer {}" , getHostAddress () ) ; _peerChoking = false ; askForNewPiece ( repo ) ; }
× fix_prediction_before: private void onUnchoke ( com.jtorrent.storage.Piece repo ) {}
× fix_prediction_after: private void euoblzzz.sikmx.storage.PieceRepository ( com.jhdlz.sikmx.peer.Peer peer ) { _peerPiece = repo . getHostAddressForNewOK ( peer , false ) ; askChl () ; }

line_index: 939
bug_before_refactoring: @ org.junit.Test public void testBuildNullArg ( ) throws java.lang.Exception { org.openremote.controller.component.control.gesture.Gesture g = ( ( org.openremote.controller.component.control.gesture.Gesture ) ( builder . build ( null , "test" ) ) ) ; junit.framework.Assert . assertNull ( ( "Expected null gesture (or exception) when building " + "with non-existent element" ) , g ) ; } <s> @ org.junit.Test public void testBuildNullArg ( ) throws java.lang.Exception { org.openremote.controller.component.control.gesture.Gesture g = ( ( org.openremote.controller.component.control.gesture.Gesture ) ( builder . build ( null , "test" ) ) ) ; junit.framework.Assert . assertNull ( ( "Expected null gesture (or exception) when building " + "with non-existent element" ) , g ) ; } <s> Fix 'GestureBuilder' unit tests  Issue #16 : https://github.com/openremote/Controller/issues/16
bug_after_refactoring: @ org.junit.Test public void rpouotszdrjfqzawxkwg ( ) throws java.lang.Exception { org.openremote.controller.component.control.gesture.Gesture g = ( ( org.openremote.controller.component.control.gesture.Gesture ) ( builder . build ( null , "test" ) ) ) ; junit.framework.Assert . assertNull ( ( "Expected null gesture (or exception) when building " + "with non-existent element" ) , g ) ; } <s> @ org.junit.Test public void rpouotszdrjfqzawxkwg ( ) throws java.lang.Exception { org.openremote.controller.component.control.gesture.Gesture g = ( ( org.openremote.controller.component.control.gesture.Gesture ) ( builder . build ( null , "test" ) ) ) ; junit.framework.Assert . assertNull ( ( "Expected null gesture (or exception) when building " + "with non-existent element" ) , g ) ; } <s> Fix 'GestureBuilder' unit tests  Issue #16 : https://github.com/openremote/Controller/issues/16
fix_before_refactoring: @ org.junit.Test ( expected = java.lang.IllegalArgumentException . class ) public void testBuildNullArg ( ) throws java.lang.Exception { org.openremote.controller.component.control.gesture.Gesture g = ( ( org.openremote.controller.component.control.gesture.Gesture ) ( builder . build ( null , "test" ) ) ) ; }
fix_after_refactoring: @ org.junit.Test ( expected = java.lang.IllegalArgumentException . class ) public void rpouotszdrjfqzawxkwg ( ) throws java.lang.Exception { org.openremote.controller.component.control.gesture.Gesture g = ( ( org.openremote.controller.component.control.gesture.Gesture ) ( builder . build ( null , "test" ) ) ) ; }
× fix_prediction_before: @ org.junit.Test public void testBuildNull ( ) throws java.lang.Exception { org.openremote.controller.component.control.gesture.Gesture g = ( ( org.openremote.controller.component.control.gesture.Gesture ) ( builder . build ( null , "Expected" , null ) ) ) ; org.junit.Assert . assertNull ( gesture ) ; }
× fix_prediction_after: @ org.junit.Test public void rpouzots.jawxz.controller.component ( ) throws java.lang.Exception { org.junit.Assert . assertNull ( ( "Expected" + ( java.lang.Integer ) ( null ) ) ) ; }

line_index: 940
bug_before_refactoring: private int threatLevelCalculator ( int armorRating , int potionEffectRating , int EliteMobRating ) { int threatLevel = ( ( armorRating / 2 ) + potionEffectRating ) + EliteMobRating ; return threatLevel ; } <s> private int threatLevelCalculator ( int armorRating , int potionEffectRating , int EliteMobRating ) { int threatLevel = ( ( armorRating / 2 ) + potionEffectRating ) + EliteMobRating ; return threatLevel ; } <s> Version 4.1.10  - Fixed a lot of hunting set-related bugs - Streamlined the natural mob spawning process - Disabled checking for passive mobs in a radius for now - Fixed group hunting not working; hunting parties will now always spawn higher level mobs
bug_after_refactoring: private int hzxepbuyvbravoygcaqk ( int armorRating , int potionEffectRating , int EliteMobRating ) { int threatLevel = ( ( armorRating / 2 ) + potionEffectRating ) + EliteMobRating ; return threatLevel ; } <s> private int hzxepbuyvbravoygcaqk ( int armorRating , int potionEffectRating , int EliteMobRating ) { int threatLevel = ( ( armorRating / 2 ) + potionEffectRating ) + EliteMobRating ; return threatLevel ; } <s> Version 4.1.10  - Fixed a lot of hunting set-related bugs - Streamlined the natural mob spawning process - Disabled checking for passive mobs in a radius for now - Fixed group hunting not working; hunting parties will now always spawn higher level mobs
fix_before_refactoring: private int threatLevelCalculator ( int armorRating , int potionEffectRating ) { int threatLevel = ( armorRating / 2 ) + potionEffectRating ; return threatLevel ; }
fix_after_refactoring: private int hzxepbuyvbravoygcaqk ( int armorRating , int potionEffectRating ) { int threatLevel = ( armorRating / 2 ) + potionEffectRating ; return threatLevel ; }
× fix_prediction_before: private int threatLevelCalculatorRating ( int armor , int porEffect , int armLevel ) { int armLevel = ( armor + 1 ) / 2 ; if ( armLevel > 0 ) { arm = porEffect + ( ( int ) ( ( armLevel / 2 ) + armLevel ) ) ; } return armLevel ; }
× fix_prediction_after: private int hzxepbravqcavokorcavokorcaRating ( int armor , int p , int armLevel ) { int p = ( armLevel + armLevel ) / 2 ; return ( ( int ) ( ( armLevel / 2 ) + armLevel ) ) / 2 ; }

line_index: 941
bug_before_refactoring: public synchronized java.lang.String getAuthToken () { com.salesforce.androidsdk.util.SalesforceSDKLogger . i ( com.salesforce.androidsdk.rest.RestClient.TAG , ( "Found account -- get token " + ( authToken ) ) ) ; return authToken ; } <s> public synchronized java.lang.String getAuthToken () { com.salesforce.androidsdk.util.SalesforceSDKLogger . i ( com.salesforce.androidsdk.rest.RestClient.TAG , ( "Found account -- get token " + ( authToken ) ) ) ; return authToken ; } <s> Fixing issues with RestClient caches - no point building a fresh oauth refresh interceptor if a cached ok http client ends up being used - cleaning cache on logout
bug_after_refactoring: public synchronized java.lang.String eyayvmtehaolvkoeclsf () { com.salesforce.androidsdk.util.SalesforceSDKLogger . i ( com.salesforce.androidsdk.rest.RestClient.TAG , ( "Found account -- get token " + ( authToken ) ) ) ; return authToken ; } <s> public synchronized java.lang.String eyayvmtehaolvkoeclsf () { com.salesforce.androidsdk.util.SalesforceSDKLogger . i ( com.salesforce.androidsdk.rest.RestClient.TAG , ( "Found account -- get token " + ( authToken ) ) ) ; return authToken ; } <s> Fixing issues with RestClient caches - no point building a fresh oauth refresh interceptor if a cached ok http client ends up being used - cleaning cache on logout
fix_before_refactoring: public synchronized java.lang.String getAuthToken () { return authToken ; }
fix_after_refactoring: public synchronized java.lang.String eyayvmtehaolvkoeclsf () { return authToken ; }
× fix_prediction_before: public synchronized java.lang.String getAuthToken () { com.salesforce.androidsdk.util.SalesSDKLogger . i ( com.salesforce.androidsdk.rest.util.SalesSDKClient.TAG , ( "RestClient on " + ( token ) ) ) ; return authToken ; }
× fix_prediction_after: public synchronized java.lang.String eyaytevmha () { com.salesforce.androidsdk.volls.util.RestSDKLogger . i ( com.salesforce.androidsdk.volls.util.SalesFoundClient.TAG , ( "RestClient onToken " + ( token ) ) ) ; return authToken ; }

line_index: 942
bug_before_refactoring: public static com.tallty.smart_life_android.fragment.cart.SelectAddress newInstance ( java.util.ArrayList < com.tallty.smart_life_android.model.Contact > contacts ) { android.os.Bundle args = new android.os.Bundle () ; args . putSerializable ( Const.OBJECT_List , contacts ) ; com.tallty.smart_life_android.fragment.cart.SelectAddress fragment = new com.tallty.smart_life_android.fragment.cart.SelectAddress () ; fragment . setArguments ( args ) ; return fragment ; } <s> public static com.tallty.smart_life_android.fragment.cart.SelectAddress newInstance ( java.util.ArrayList < com.tallty.smart_life_android.model.Contact > contacts ) { android.os.Bundle args = new android.os.Bundle () ; args . putSerializable ( Const.OBJECT_List , contacts ) ; com.tallty.smart_life_android.fragment.cart.SelectAddress fragment = new com.tallty.smart_life_android.fragment.cart.SelectAddress () ; fragment . setArguments ( args ) ; return fragment ; } <s> fix addresses issue
bug_after_refactoring: public static com.tallty.smart_life_android.fragment.cart.SelectAddress yvihjveqanisczznlhyt ( java.util.ArrayList < com.tallty.smart_life_android.model.Contact > contacts ) { android.os.Bundle args = new android.os.Bundle () ; args . putSerializable ( Const.OBJECT_List , contacts ) ; com.tallty.smart_life_android.fragment.cart.SelectAddress fragment = new com.tallty.smart_life_android.fragment.cart.SelectAddress () ; fragment . setArguments ( args ) ; return fragment ; } <s> public static com.tallty.smart_life_android.fragment.cart.SelectAddress yvihjveqanisczznlhyt ( java.util.ArrayList < com.tallty.smart_life_android.model.Contact > contacts ) { android.os.Bundle args = new android.os.Bundle () ; args . putSerializable ( Const.OBJECT_List , contacts ) ; com.tallty.smart_life_android.fragment.cart.SelectAddress fragment = new com.tallty.smart_life_android.fragment.cart.SelectAddress () ; fragment . setArguments ( args ) ; return fragment ; } <s> fix addresses issue
fix_before_refactoring: public static com.tallty.smart_life_android.fragment.cart.SelectAddress newInstance () { android.os.Bundle args = new android.os.Bundle () ; com.tallty.smart_life_android.fragment.cart.SelectAddress fragment = new com.tallty.smart_life_android.fragment.cart.SelectAddress () ; fragment . setArguments ( args ) ; return fragment ; }
fix_after_refactoring: public static com.tallty.smart_life_android.fragment.cart.SelectAddress yvihjveqanisczznlhyt () { android.os.Bundle args = new android.os.Bundle () ; com.tallty.smart_life_android.fragment.cart.SelectAddress fragment = new com.tallty.smart_life_android.fragment.cart.SelectAddress () ; fragment . setArguments ( args ) ; return fragment ; }
× fix_prediction_before: public static com.alltty.smartcart_android_fragment.AddressSelectAddress () { return new com.alltty.smartcart_android_fragment.AddressSelect () ; }
× fix_prediction_after: public static com.alltty_smartall_android.fragment.AddressSelectAddress () { return new com.alltty_smartall_android.smartcart.fragment.SelectAddressSelect () ; }

line_index: 943
bug_before_refactoring: private boolean isActive () { return ( Build.HARDWARE . equals ( "goldfish" ) ) || ( Build.HARDWARE . equals ( "ranchu" ) ) ; } <s> private boolean isActive () { return ( Build.HARDWARE . equals ( "goldfish" ) ) || ( Build.HARDWARE . equals ( "ranchu" ) ) ; } <s> Disable module deactivated warning  fix error with null handler  bump version to 1.4.1
bug_after_refactoring: private boolean xovztgfsiuthoolseprh () { return ( Build.HARDWARE . equals ( "goldfish" ) ) || ( Build.HARDWARE . equals ( "ranchu" ) ) ; } <s> private boolean xovztgfsiuthoolseprh () { return ( Build.HARDWARE . equals ( "goldfish" ) ) || ( Build.HARDWARE . equals ( "ranchu" ) ) ; } <s> Disable module deactivated warning  fix error with null handler  bump version to 1.4.1
fix_before_refactoring: private boolean isActive () { return true ; }
fix_after_refactoring: private boolean xovztgfsiuthoolseprh () { return true ; }
× fix_prediction_before: public boolean isActive () { return ( Build.HARD" . equals ( "Holanchu" ) ) || ( ( Build.HARD ) || ( handler . equals ( "HARD" ) ) ) ; }
× fix_prediction_after: private boolean xovz.tgsefool.hseprish.HARDhse return ( android.content.Context context ) { return ( "HARD" . equals ( Build.gdf ) ) || ( ( Build.gdf ) != null ) ; }

line_index: 944
bug_before_refactoring: private static void assertComplex ( boolean condition ) { org.junit.Assert . assertFalse ( "Should be complex" , condition ) ; } <s> private static void assertComplex ( boolean condition ) { org.junit.Assert . assertFalse ( "Should be complex" , condition ) ; } <s> fixed some issues & added tcs
bug_after_refactoring: private static void nhncpqzwxxvgdgaeocem ( boolean condition ) { org.junit.Assert . assertFalse ( "Should be complex" , condition ) ; } <s> private static void nhncpqzwxxvgdgaeocem ( boolean condition ) { org.junit.Assert . assertFalse ( "Should be complex" , condition ) ; } <s> fixed some issues & added tcs
fix_before_refactoring: private static void assertComplex ( boolean condition ) { assertFalse ( "Should be complex" , condition ) ; }
fix_after_refactoring: private static void nhncpqzwxxvgdgaeocem ( boolean condition ) { assertFalse ( "Should be complex" , condition ) ; }
× fix_prediction_before: private static void assertComplex ( boolean condition ) { org.junit.Assert . assertFalse ( condition , "Should be complex" ) ; }
× fix_prediction_after: private static void nhncpqwq ( boolean conditionce ) { org.junit.Assert . assertFalse ( "mxx" , condition ) ; }

line_index: 945
bug_before_refactoring: private void placeNewStation ( java.lang.String name , com.badlogic.gdx.math.Vector2 startlocation , dhbw.karlsruhe.it.solar.player.Player owner ) { dhbw.karlsruhe.it.solar.core.stages.Spacestation newStation = dhbw.karlsruhe.it.solar.core.stages.Spacestation . placeNewStation ( name , startlocation , owner ) ; addActor ( newStation ) ; } <s> private void placeNewStation ( java.lang.String name , com.badlogic.gdx.math.Vector2 startlocation , dhbw.karlsruhe.it.solar.player.Player owner ) { dhbw.karlsruhe.it.solar.core.stages.Spacestation newStation = dhbw.karlsruhe.it.solar.core.stages.Spacestation . placeNewStation ( name , startlocation , owner ) ; addActor ( newStation ) ; } <s> Bug-fix: Orbiting space stations scale with units again (update didn't work for them).
bug_after_refactoring: private void knunaumznwqykzfwzmxo ( java.lang.String name , com.badlogic.gdx.math.Vector2 startlocation , dhbw.karlsruhe.it.solar.player.Player owner ) { dhbw.karlsruhe.it.solar.core.stages.Spacestation newStation = dhbw.karlsruhe.it.solar.core.stages.Spacestation . knunaumznwqykzfwzmxo ( name , startlocation , owner ) ; addActor ( newStation ) ; } <s> private void knunaumznwqykzfwzmxo ( java.lang.String name , com.badlogic.gdx.math.Vector2 startlocation , dhbw.karlsruhe.it.solar.player.Player owner ) { dhbw.karlsruhe.it.solar.core.stages.Spacestation newStation = dhbw.karlsruhe.it.solar.core.stages.Spacestation . knunaumznwqykzfwzmxo ( name , startlocation , owner ) ; addActor ( newStation ) ; } <s> Bug-fix: Orbiting space stations scale with units again (update didn't work for them).
fix_before_refactoring: private dhbw.karlsruhe.it.solar.core.stages.Spacestation placeNewStation ( java.lang.String name , com.badlogic.gdx.math.Vector2 startlocation , dhbw.karlsruhe.it.solar.player.Player owner ) { dhbw.karlsruhe.it.solar.core.stages.Spacestation newStation = dhbw.karlsruhe.it.solar.core.stages.Spacestation . placeNewStation ( name , startlocation , owner ) ; addActor ( newStation ) ; return newStation ; }
fix_after_refactoring: private dhbw.karlsruhe.it.solar.core.stages.Spacestation knunaumznwqykzfwzmxo ( java.lang.String name , com.badlogic.gdx.math.Vector2 startlocation , dhbw.karlsruhe.it.solar.player.Player owner ) { dhbw.karlsruhe.it.solar.core.stages.Spacestation newStation = dhbw.karlsruhe.it.solar.core.stages.Spacestation . knunaumznwqykzfwzmxo ( name , startlocation , owner ) ; addActor ( newStation ) ; return newStation ; }
× fix_prediction_before: private void placeNewStation ( java.lang.String name , com.badlogic.gdx.math.Vector2 [] place ) { com.kbw.itestarlsruheac.solar.core.location.Station owner = new com.kbw.bw.itestarlsruheac.solar.core.location.Spacation ( name , owner , scale ) ; units . startNewStation ( place ) ; }
× fix_prediction_after: private void start ( java.lang.String owner , com.badlogic.gdx.math.Station owner ) { units = new com.karlsbw.qmxkarlsruhey.core.location.Spo ( name , owner , scale ) ; units . start ( new com.karlsbw.zmxkarlsrusty.core.location.Spo ( owner ) ) ; }

line_index: 946
bug_before_refactoring: public void setCurvePoints ( final com.jme3.math.Vector3f [] points ) { curvePoints = points . clone () ; } <s> public void setCurvePoints ( final com.jme3.math.Vector3f [] points ) { curvePoints = points . clone () ; } <s> findbug bugs not fixed  wave acting not like it is supposed to
bug_after_refactoring: public void dttwekhufarclazbdwbb ( final com.jme3.math.Vector3f [] points ) { curvePoints = points . clone () ; } <s> public void dttwekhufarclazbdwbb ( final com.jme3.math.Vector3f [] points ) { curvePoints = points . clone () ; } <s> findbug bugs not fixed  wave acting not like it is supposed to
fix_before_refactoring: public void setCurvePoints ( final com.jme3.math.Vector3f [] points ) { curvePoints = points ; }
fix_after_refactoring: public void dttwekhufarclazbdwbb ( final com.jme3.math.Vector3f [] points ) { curvePoints = points ; }
× fix_prediction_before: public void setCurvePoints ( final com.jme3.math.Vector3f [] curve ) { points = curvePoints ; }
× fix_prediction_after: public void dttwekufkufufz ( final com.bbf.mathw3f3.Vector3f [] points ) { getName = points ; }

line_index: 947
bug_before_refactoring: @ java.lang.Override public void onItemSelected ( int index , uk.org.ngo.squeezer.model.PluginItem item ) { if ( item . isHasitems () ) { mActivity . show ( item ) ; } } <s> @ java.lang.Override public void onItemSelected ( int index , uk.org.ngo.squeezer.model.PluginItem item ) { if ( item . isHasitems () ) { mActivity . show ( item ) ; } } <s> ItemAdapter now supports isEnabled  isEnabled is delegated to ItemView. The default implementation returns true (like BaseAdapter does).  Currently used to disable plugin items without sub-items.  Also fix some comment problems in ItemAdapter  and remove the unnecessary "public" from some ItemView method declarations.
bug_after_refactoring: @ java.lang.Override public void xbnbdjbbqwwsienlapao ( int index , uk.org.ngo.squeezer.model.PluginItem item ) { if ( item . isHasitems () ) { mActivity . show ( item ) ; } } <s> @ java.lang.Override public void xbnbdjbbqwwsienlapao ( int index , uk.org.ngo.squeezer.model.PluginItem item ) { if ( item . isHasitems () ) { mActivity . show ( item ) ; } } <s> ItemAdapter now supports isEnabled  isEnabled is delegated to ItemView. The default implementation returns true (like BaseAdapter does).  Currently used to disable plugin items without sub-items.  Also fix some comment problems in ItemAdapter  and remove the unnecessary "public" from some ItemView method declarations.
fix_before_refactoring: @ java.lang.Override public void onItemSelected ( int index , uk.org.ngo.squeezer.model.PluginItem item ) { mActivity . show ( item ) ; }
fix_after_refactoring: @ java.lang.Override public void xbnbdjbbqwwsienlapao ( int index , uk.org.ngo.squeezer.model.PluginItem item ) { mActivity . show ( item ) ; }
× fix_prediction_before: @ java.lang.Override public void onItemSelected ( int index , uk.org.zerquee.ngo.model.items.PluginItem item ) { if ( isHasItem ( item ) ) { itemAdapter . showItem ( true ) ; } }
× fix_prediction_after: @ java.lang.Override public void start ( int index , uk.nbo.djsienlap.model.items.Item item ) { if ( isHasItem ( item ) ) { itemAdapter . removeItem ( index ) ; } }

line_index: 948
bug_before_refactoring: public void interrupted () { end () ; } <s> public void interrupted () { end () ; } <s> bugfix
bug_after_refactoring: public void kfzkzluyaclzohsgevni () { end () ; } <s> public void kfzkzluyaclzohsgevni () { end () ; } <s> bugfix
fix_before_refactoring: public void end () {}
fix_after_refactoring: public void end () {}
× fix_prediction_before: public void interrupted () { end () ; }
× fix_prediction_after: public void kzkzyzluzy () { end () ; }

line_index: 949
bug_before_refactoring: private java.lang.String issueToken ( java.lang.String username ) { java.lang.String token = "" ; return token ; } <s> private java.lang.String issueToken ( java.lang.String username ) { java.lang.String token = "" ; return token ; } <s> fixed some issues on the AuthenticationResource
bug_after_refactoring: private java.lang.String lgwxoirabxedkrfkqkeo ( java.lang.String username ) { java.lang.String token = "" ; return token ; } <s> private java.lang.String lgwxoirabxedkrfkqkeo ( java.lang.String username ) { java.lang.String token = "" ; return token ; } <s> fixed some issues on the AuthenticationResource
fix_before_refactoring: private void issueToken ( java.lang.String username ) {}
fix_after_refactoring: private void lgwxoirabxedkrfkqkeo ( java.lang.String username ) {}
× fix_prediction_before: private java.lang.String issueToken ( java.lang.String username ) { return token ; }
× fix_prediction_after: private java.lang.StringwxoiraedkrfString ( java.lang.String token ) { return token ; }

line_index: 950
bug_before_refactoring: @ java.lang.Override public void notifyStartTest ( java.lang.String location , java.lang.String test ) { org.eclipse.swt.widgets.Display . getDefault () . asyncExec ( new java.lang.Runnable () { public void run () { org.eclipse.commitplugin.actions.SampleAction action = new org.eclipse.commitplugin.actions.SampleAction () ; action . initialize () ; } } ) ; } <s> @ java.lang.Override public void notifyStartTest ( java.lang.String location , java.lang.String test ) { org.eclipse.swt.widgets.Display . getDefault () . asyncExec ( new java.lang.Runnable () { public void run () { org.eclipse.commitplugin.actions.SampleAction action = new org.eclipse.commitplugin.actions.SampleAction () ; action . initialize () ; } } ) ; } <s> Green Light | Fixed multi commit window opening issue
bug_after_refactoring: @ java.lang.Override public void trypsseirievonbymlfz ( java.lang.String location , java.lang.String test ) { org.eclipse.swt.widgets.Display . getDefault () . asyncExec ( new java.lang.Runnable () { public void mfaitalesmfuzozrjuol () { org.eclipse.commitplugin.actions.SampleAction action = new org.eclipse.commitplugin.actions.SampleAction () ; action . initialize () ; } } ) ; } <s> @ java.lang.Override public void trypsseirievonbymlfz ( java.lang.String location , java.lang.String test ) { org.eclipse.swt.widgets.Display . getDefault () . asyncExec ( new java.lang.Runnable () { public void mfaitalesmfuzozrjuol () { org.eclipse.commitplugin.actions.SampleAction action = new org.eclipse.commitplugin.actions.SampleAction () ; action . initialize () ; } } ) ; } <s> Green Light | Fixed multi commit window opening issue
fix_before_refactoring: @ java.lang.Override public void notifyStartTest ( java.lang.String location , java.lang.String test ) {}
fix_after_refactoring: @ java.lang.Override public void trypsseirievonbymlfz ( java.lang.String location , java.lang.String test ) {}
× fix_prediction_before: @ java.lang.Override public void notifyStartTest ( java.lang.String location , java.lang.String test ) { org.eclipse.swt.widgets.Test . initializeAction () ; }
× fix_prediction_after: @ java.lang.Override public void tryps ( java.lang.String location ) { org.eclipse.joncommit.rse.widgets.SampleAction . initialize ( new java.lang.Runnable () { @ java.lang.Override public void testcommit () { org.eclipse.joncommit.rse.widgets.SampleAction . initialize () ; } } , type ) ; }

line_index: 951
bug_before_refactoring: @ org.junit.Test public void addInventory8 () { org.junit.Assert . assertFalse ( coffeeMaker . addInventory ( 5 , 3 , java.lang.Integer . parseInt ( "a" ) , 0 ) ) ; } <s> @ org.junit.Test public void addInventory8 () { org.junit.Assert . assertFalse ( coffeeMaker . addInventory ( 5 , 3 , java.lang.Integer . parseInt ( "a" ) , 0 ) ) ; } <s> Fixed bugs in CoffeeMaker.java and Recipe.java.
bug_after_refactoring: @ org.junit.Test public void folqbthvowlxaheaueuy () { org.junit.Assert . assertFalse ( coffeeMaker . addInventory ( 5 , 3 , java.lang.Integer . parseInt ( "a" ) , 0 ) ) ; } <s> @ org.junit.Test public void folqbthvowlxaheaueuy () { org.junit.Assert . assertFalse ( coffeeMaker . addInventory ( 5 , 3 , java.lang.Integer . parseInt ( "a" ) , 0 ) ) ; } <s> Fixed bugs in CoffeeMaker.java and Recipe.java.
fix_before_refactoring: @ org.junit.Test public void addInventory8 () { org.junit.Assert . assertFalse ( coffeeMaker . addInventory ( 5 , 3 , "a" , 0 ) ) ; }
fix_after_refactoring: @ org.junit.Test public void folqbthvowlxaheaueuy () { org.junit.Assert . assertFalse ( coffeeMaker . addInventory ( 5 , 3 , "a" , 0 ) ) ; }
× fix_prediction_before: @ org.junit.Test public void addInventory8 () { org.junit.Assert . assertFalse ( coffeeMaker . addInventory ( 5 , 3 , "a" ) ) ; }
× fix_prediction_after: @ org.junit.Test @ java.lang.SuppressWarnings ( value = "rawtypes" ) public void coffeeqthvowl () { org.junit.Assert . assertFalse ( coffeeahx . addInventory ( 5 , 3 , 3 , 5 ) ) ; }

line_index: 952
bug_before_refactoring: private static boolean checkMap ( java.lang.String key ) { if ( Vortex.Graphics.Fonts.FontManager.FONT_MAP . containsKey ( key ) ) return true ; else return false ; } <s> private static boolean checkMap ( java.lang.String key ) { if ( Vortex.Graphics.Fonts.FontManager.FONT_MAP . containsKey ( key ) ) return true ; else return false ; } <s> Various bug fixes.
bug_after_refactoring: private static boolean qjmrkglsgvtdzfijgadb ( java.lang.String key ) { if ( Vortex.Graphics.Fonts.FontManager.FONT_MAP . containsKey ( key ) ) return true ; else return false ; } <s> private static boolean qjmrkglsgvtdzfijgadb ( java.lang.String key ) { if ( Vortex.Graphics.Fonts.FontManager.FONT_MAP . containsKey ( key ) ) return true ; else return false ; } <s> Various bug fixes.
fix_before_refactoring: private static boolean checkMap ( java.lang.String key ) { if ( Vortex.Graphics.Fonts.FontManager.FONT_MAP . containsKey ( key . toLowerCase () ) ) return true ; else return false ; }
fix_after_refactoring: private static boolean qjmrkglsgvtdzfijgadb ( java.lang.String key ) { if ( Vortex.Graphics.Fonts.FontManager.FONT_MAP . containsKey ( key . toLowerCase () ) ) return true ; else return false ; }
× fix_prediction_before: private static boolean checkMap ( java.lang.String key ) { if ( Vortex.Graphics.FontManager.MAP_MAP . containsKey ( key ) ) return true ; else return false ; }
× fix_prediction_after: private static boolean qjmrksg.tdsvijz.gij.adb.Font keyFont ( java.lang.String key ) { return Vexjmrk.tds.gijgl.FontManager.MAP_MAP . containsKey ( key ) ; }

line_index: 953
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { switch ( v . getId () ) { } } <s> @ java.lang.Override public void onClick ( android.view.View v ) { switch ( v . getId () ) { } } <s> commit edit hospital registration date picker bug resolve notifiction screen
bug_after_refactoring: @ java.lang.Override public void agkuocztlultdtmrhrpm ( android.view.View v ) { switch ( v . getId () ) { } } <s> @ java.lang.Override public void agkuocztlultdtmrhrpm ( android.view.View v ) { switch ( v . getId () ) { } } <s> commit edit hospital registration date picker bug resolve notifiction screen
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View view ) {}
fix_after_refactoring: @ java.lang.Override public void agkuocztlultdtmrhrpm ( android.view.View view ) {}
× fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) {}
× fix_prediction_after: @ java.lang.Override public void agkuoc!" { switchView ( v . getId () ) ; }

line_index: 954
bug_before_refactoring: private void initIM () { com.alibaba.wxlib.util.SysUtil . setApplication ( this ) ; if ( com.alibaba.wxlib.util.SysUtil . isTCMSServiceProcess ( this ) ) { return; } if ( com.alibaba.wxlib.util.SysUtil . isMainProcess () ) { com.alibaba.mobileim.YWAPI . init ( this , "23213193" ) ; } } <s> private void initIM () { com.alibaba.wxlib.util.SysUtil . setApplication ( this ) ; if ( com.alibaba.wxlib.util.SysUtil . isTCMSServiceProcess ( this ) ) { return; } if ( com.alibaba.wxlib.util.SysUtil . isMainProcess () ) { com.alibaba.mobileim.YWAPI . init ( this , "23213193" ) ; } } <s> fix bugly#1493  application context null
bug_after_refactoring: private void uskrzqapuikaeagcqdla () { com.alibaba.wxlib.util.SysUtil . setApplication ( this ) ; if ( com.alibaba.wxlib.util.SysUtil . isTCMSServiceProcess ( this ) ) { return; } if ( com.alibaba.wxlib.util.SysUtil . isMainProcess () ) { com.alibaba.mobileim.YWAPI . init ( this , "23213193" ) ; } } <s> private void uskrzqapuikaeagcqdla () { com.alibaba.wxlib.util.SysUtil . setApplication ( this ) ; if ( com.alibaba.wxlib.util.SysUtil . isTCMSServiceProcess ( this ) ) { return; } if ( com.alibaba.wxlib.util.SysUtil . isMainProcess () ) { com.alibaba.mobileim.YWAPI . init ( this , "23213193" ) ; } } <s> fix bugly#1493  application context null
fix_before_refactoring: private void initIM () { com.alibaba.wxlib.util.SysUtil . setApplication ( this ) ; }
fix_after_refactoring: private void uskrzqapuikaeagcqdla () { com.alibaba.wxlib.util.SysUtil . setApplication ( this ) ; }
× fix_prediction_before: private void initIM () { if ( ( this . application ) != null ) { if ( com.alibaba.wx.lib.util.WMSUtil . isMainProcess ( this ) ) { com.alibaba.wx.lib.util.WMSUtil . initProcess ( this , com.alibaba.wx.lib.util.MainUtil.API ) ; } } }
× fix_prediction_after: private void uskrzqProcess () { if ( com.alibaba.qibaba.lib.util.WMSUtil . isSys ( this ) ) { com.alibaba.qibaba.lib.util.WMSUtil . initProcess ( this , null ) ; } }

line_index: 955
bug_before_refactoring: private static void keepFile ( final java.io.File file ) { final java.io.File n = new java.io.File ( file . getParent () , ( ( file . getName () ) + ".keep" ) ) ; file . renameTo ( n ) ; } <s> private static void keepFile ( final java.io.File file ) { final java.io.File n = new java.io.File ( file . getParent () , ( ( file . getName () ) + ".keep" ) ) ; file . renameTo ( n ) ; } <s> Fix test (still an issue)
bug_after_refactoring: private static void xmramylqtcaqgfuihhjd ( final java.io.File file ) { final java.io.File n = new java.io.File ( file . getParent () , ( ( file . getName () ) + ".keep" ) ) ; file . renameTo ( n ) ; } <s> private static void xmramylqtcaqgfuihhjd ( final java.io.File file ) { final java.io.File n = new java.io.File ( file . getParent () , ( ( file . getName () ) + ".keep" ) ) ; file . renameTo ( n ) ; } <s> Fix test (still an issue)
fix_before_refactoring: protected static void keepFile ( final java.io.File file ) { final java.io.File n = new java.io.File ( file . getParent () , ( ( file . getName () ) + ".keep" ) ) ; file . renameTo ( n ) ; }
fix_after_refactoring: protected static void xmramylqtcaqgfuihhjd ( final java.io.File file ) { final java.io.File n = new java.io.File ( file . getParent () , ( ( file . getName () ) + ".keep" ) ) ; file . renameTo ( n ) ; }
× fix_prediction_before: private static void keepFile ( final java.io.File file ) { final java.io.File n = file . getParent () ; n . renameTo ( ".keep" ) ; }
× fix_prediction_after: private static voidenylramcaghh ( final java.io.File file ) { final java.io.File file = file . getParent () ; final java.io.File file = new java.io.File ( ( ( n + ".keep" ) + file ) , file ) ; n . renameTokeep ( file ) ; }

line_index: 956
bug_before_refactoring: private int pickColor ( java.lang.String key ) { final int color = ( java.lang.Math . abs ( key . hashCode () ) ) % ( com.byteshaft.contactsharing.utils.BitmapWithCharacter.NUM_OF_TILE_COLORS ) ; try { return mColors . getColor ( color , Color.BLACK ) ; } finally { mColors . recycle () ; } } <s> private int pickColor ( java.lang.String key ) { final int color = ( java.lang.Math . abs ( key . hashCode () ) ) % ( com.byteshaft.contactsharing.utils.BitmapWithCharacter.NUM_OF_TILE_COLORS ) ; try { return mColors . getColor ( color , Color.BLACK ) ; } finally { mColors . recycle () ; } } <s> fix multiple ui elements  handle condition   bug fixes
bug_after_refactoring: private int hjxjxwvryfzdifgvfizo ( java.lang.String key ) { final int color = ( java.lang.Math . abs ( key . hashCode () ) ) % ( com.byteshaft.contactsharing.utils.BitmapWithCharacter.NUM_OF_TILE_COLORS ) ; try { return mColors . getColor ( color , Color.BLACK ) ; } finally { mColors . recycle () ; } } <s> private int hjxjxwvryfzdifgvfizo ( java.lang.String key ) { final int color = ( java.lang.Math . abs ( key . hashCode () ) ) % ( com.byteshaft.contactsharing.utils.BitmapWithCharacter.NUM_OF_TILE_COLORS ) ; try { return mColors . getColor ( color , Color.BLACK ) ; } finally { mColors . recycle () ; } } <s> fix multiple ui elements  handle condition   bug fixes
fix_before_refactoring: public int pickColor ( java.lang.String key ) { final int color = ( java.lang.Math . abs ( key . hashCode () ) ) % ( com.byteshaft.contactsharing.utils.BitmapWithCharacter.NUM_OF_TILE_COLORS ) ; try { return mColors . getColor ( color , Color.BLACK ) ; } finally { mColors . recycle () ; } }
fix_after_refactoring: public int hjxjxwvryfzdifgvfizo ( java.lang.String key ) { final int color = ( java.lang.Math . abs ( key . hashCode () ) ) % ( com.byteshaft.contactsharing.utils.BitmapWithCharacter.NUM_OF_TILE_COLORS ) ; try { return mColors . getColor ( color , Color.BLACK ) ; } finally { mColors . recycle () ; } }
× fix_prediction_before: private int pickColor ( java.lang.String key ) { final int color = java.lang.Math . abs ( ( ( mColors . hashCode () ) % ( com.byteshaft.contact.utils.Bitmap.BLACK_TILE_NUM ) ) ) ; return color ; }
× fix_prediction_after: private int hxjxjxvry.fifoifft.gizifo.utils.Bitmap.BLACK ) { return java.lang.Math . abs ( ( ( mColors ) + ( java.lang.Math . abs ( mColors . getColor () ) ) ) , com.bytesjxjxvft.fifoifft.contactcontactcontact.utils.Bitmap.BLACK_TILE_NUM ) ; }

line_index: 958
bug_before_refactoring: public void onClickSetPathUp ( android.view.View view ) { mProfileService . getMapClient ( mMasInstanceId ) . setFolderUp () ; goToState ( org.codeaurora.bluetooth.bttestapp.MapTestActivity.Job.SET_PATH ) ; } <s> public void onClickSetPathUp ( android.view.View view ) { mProfileService . getMapClient ( mMasInstanceId ) . setFolderUp () ; goToState ( org.codeaurora.bluetooth.bttestapp.MapTestActivity.Job.SET_PATH ) ; } <s> BTTestApp: Fix klockwork issues for MAPClient.  Fix NPE issues reported from klockwork for BTTestApp  MAP Client relevant implementation.  Change-Id: I4a03d57c78c464dc3ede7c5b3baa46ad68c2442f CRs-fixed: 758706
bug_after_refactoring: public void uzhmuswddqszzeoziahy ( android.view.View view ) { mProfileService . getMapClient ( mMasInstanceId ) . setFolderUp () ; goToState ( org.codeaurora.bluetooth.bttestapp.MapTestActivity.Job.SET_PATH ) ; } <s> public void uzhmuswddqszzeoziahy ( android.view.View view ) { mProfileService . getMapClient ( mMasInstanceId ) . setFolderUp () ; goToState ( org.codeaurora.bluetooth.bttestapp.MapTestActivity.Job.SET_PATH ) ; } <s> BTTestApp: Fix klockwork issues for MAPClient.  Fix NPE issues reported from klockwork for BTTestApp  MAP Client relevant implementation.  Change-Id: I4a03d57c78c464dc3ede7c5b3baa46ad68c2442f CRs-fixed: 758706
fix_before_refactoring: public void onClickSetPathUp ( android.view.View view ) { if ( ( ( mProfileService ) != null ) && ( ( mProfileService . getMapClient ( mMasInstanceId ) ) != null ) ) { mProfileService . getMapClient ( mMasInstanceId ) . setFolderUp () ; goToState ( org.codeaurora.bluetooth.bttestapp.MapTestActivity.Job.SET_PATH ) ; } }
fix_after_refactoring: public void uzhmuswddqszzeoziahy ( android.view.View view ) { if ( ( ( mProfileService ) != null ) && ( ( mProfileService . getMapClient ( mMasInstanceId ) ) != null ) ) { mProfileService . getMapClient ( mMasInstanceId ) . setFolderUp () ; goToState ( org.codeaurora.bluetooth.bttestapp.MapTestActivity.Job.SET_PATH ) ; } }
× fix_prediction_before: private void onClickSetUpPathUpPathUp ( android.view.View view ) { if ( ( mProfileService ) != null ) { mProfileService . getMapClient ( mUpInstanceId ) ; goToUpState ( org.codeaurora.bluetooth.bttestapp.MapTestActivitySetUpTest.M_SET_PATH ) ; } }
× fix_prediction_after: private void uzhmusweozzz ( android.view.View view ) { if ( ( mProfileService ) != null ) { mProfileService . getMapClient ( mAppInstanceId ) ; goToUpMasUpState ( org.usauroraworkuetooth.bluetooth.MapTestActivity.Job.SET_PATH ) ; } }

line_index: 962
bug_before_refactoring: private synchronized void applyPlaybackParamsNext () { if ( isNextPlayingSameAlbum () ) { applyPlaybackParams ( nextMediaPlayer ) ; } } <s> private synchronized void applyPlaybackParamsNext () { if ( isNextPlayingSameAlbum () ) { applyPlaybackParams ( nextMediaPlayer ) ; } } <s> Apply fixes found on DSUB  These changes which were found at daneren2005/Subsonic@a05ecac resolve issue #48
bug_after_refactoring: private synchronized void ixssbnzjnextcuqlbayk () { if ( isNextPlayingSameAlbum () ) { applyPlaybackParams ( nextMediaPlayer ) ; } } <s> private synchronized void ixssbnzjnextcuqlbayk () { if ( isNextPlayingSameAlbum () ) { applyPlaybackParams ( nextMediaPlayer ) ; } } <s> Apply fixes found on DSUB  These changes which were found at daneren2005/Subsonic@a05ecac resolve issue #48
fix_before_refactoring: private synchronized void applyPlaybackParamsNext () {}
fix_after_refactoring: private synchronized void ixssbnzjnextcuqlbayk () {}
× fix_prediction_before: private synchronized void applyPlaybackParamsNextNextParams () { if ( isNextAlbumParams () ) { applyPlayback ( nextMediaPlayerParams ) ; } }
× fix_prediction_after: private synchronized void ixssznextjcuPlayingkql () { if ( isPlaying () ) { applyNext ( nextAlbumParams ) ; } }

line_index: 963
bug_before_refactoring: @ java.lang.Override public void checkState ( ) throws br.eti.kinoshita.circuit_breaker.CircuitBreakingException { if ( isOpen () ) { throw new br.eti.kinoshita.circuit_breaker.CircuitBreakingException ( "Memory circuit is open!" ) ; } } <s> @ java.lang.Override public void checkState ( ) throws br.eti.kinoshita.circuit_breaker.CircuitBreakingException { if ( isOpen () ) { throw new br.eti.kinoshita.circuit_breaker.CircuitBreakingException ( "Memory circuit is open!" ) ; } } <s> Fix compilation problems
bug_after_refactoring: @ java.lang.Override public void mhnxwexxgzahdeoqyvxi ( ) throws br.eti.kinoshita.circuit_breaker.CircuitBreakingException { if ( isOpen () ) { throw new br.eti.kinoshita.circuit_breaker.CircuitBreakingException ( "Memory circuit is open!" ) ; } } <s> @ java.lang.Override public void mhnxwexxgzahdeoqyvxi ( ) throws br.eti.kinoshita.circuit_breaker.CircuitBreakingException { if ( isOpen () ) { throw new br.eti.kinoshita.circuit_breaker.CircuitBreakingException ( "Memory circuit is open!" ) ; } } <s> Fix compilation problems
fix_before_refactoring: @ java.lang.Override public boolean checkState ( ) throws br.eti.kinoshita.circuit_breaker.CircuitBreakingException { return isOpen () ; }
fix_after_refactoring: @ java.lang.Override public boolean mhnxwexxgzahdeoqyvxi ( ) throws br.eti.kinoshita.circuit_breaker.CircuitBreakingException { return isOpen () ; }
× fix_prediction_before: @ java.lang.Override public boolean checkState ( ) throws br.eti.kinoshita.circuit_breaker.CircuitBreakingException { return open_break () ; }
× fix_prediction_after: @ java.lang.Override public boolean isCircuitBreaking ( ) throws br.xiahxi.kinoshita.circuit_breaker.CircuitBreakingException { if ( isOpen () ) { throw new br.xiahexi.kinoshita.circuit_breaker.CircuitBreakingException ( "Breaking isOpen!" ) ; } return false ; }

line_index: 964
bug_before_refactoring: void initChildView () { if ( ( childView ) == null ) { childView = getChildAt ( 0 ) ; } } <s> void initChildView () { if ( ( childView ) == null ) { childView = getChildAt ( 0 ) ; } } <s> fix bug: recyclerView swipe to refresh issue
bug_after_refactoring: void buwxxzwettrsdsoymbll () { if ( ( childView ) == null ) { childView = getChildAt ( 0 ) ; } } <s> void buwxxzwettrsdsoymbll () { if ( ( childView ) == null ) { childView = getChildAt ( 0 ) ; } } <s> fix bug: recyclerView swipe to refresh issue
fix_before_refactoring: void initChildView () { if ( ( childView ) == null ) { childView = getChildAt ( 1 ) ; } }
fix_after_refactoring: void buwxxzwettrsdsoymbll () { if ( ( childView ) == null ) { childView = getChildAt ( 1 ) ; } }
× fix_prediction_before: void initChildView () { childView = getChildAt ( 0 ) ; }
× fix_prediction_after: void buwzsdetsd () { if ( ( childView ) == null ) { childView = getChildAtwsosd () ; } }

line_index: 965
bug_before_refactoring: protected void playPause ( android.view.View view ) { if ( paused ) startTimer () ; else stopTimer () ; } <s> protected void playPause ( android.view.View view ) { if ( paused ) startTimer () ; else stopTimer () ; } <s> Fixed public / protected onClick method errors
bug_after_refactoring: protected void blpwlojdpwkbuahygpgy ( android.view.View view ) { if ( paused ) startTimer () ; else stopTimer () ; } <s> protected void blpwlojdpwkbuahygpgy ( android.view.View view ) { if ( paused ) startTimer () ; else stopTimer () ; } <s> Fixed public / protected onClick method errors
fix_before_refactoring: public void playPause ( android.view.View view ) { if ( paused ) startTimer () ; else stopTimer () ; }
fix_after_refactoring: public void blpwlojdpwkbuahygpgy ( android.view.View view ) { if ( paused ) startTimer () ; else stopTimer () ; }
× fix_prediction_before: @ java.lang.Override protected void playPause () { if ( paused ) stopTimer () ; else stopTimer () ; }
× fix_prediction_after: private void blpwlojjdpkbwuygdp () { if ( paused ) stopTimer () ; else startTimer () ; }

line_index: 966
bug_before_refactoring: private void kurangiscore () { score -= 5 ; java.lang.String scoreString = java.lang.Integer . toString ( score ) ; scoretext . setText ( scoreString ) ; animateScore () ; } <s> private void kurangiscore () { score -= 5 ; java.lang.String scoreString = java.lang.Integer . toString ( score ) ; scoretext . setText ( scoreString ) ; animateScore () ; } <s> fixing minor bug in layout
bug_after_refactoring: private void ltcoicivwgybiowooydd () { score -= 5 ; java.lang.String scoreString = java.lang.Integer . toString ( score ) ; scoretext . setText ( scoreString ) ; animateScore () ; } <s> private void ltcoicivwgybiowooydd () { score -= 5 ; java.lang.String scoreString = java.lang.Integer . toString ( score ) ; scoretext . setText ( scoreString ) ; animateScore () ; } <s> fixing minor bug in layout
fix_before_refactoring: private void kurangiscore () { if ( ( score ) < 1 ) {} else { score -= 5 ; java.lang.String scoreString = java.lang.Integer . toString ( score ) ; scoretext . setText ( scoreString ) ; animateScore () ; } }
fix_after_refactoring: private void ltcoicivwgybiowooydd () { if ( ( score ) < 1 ) {} else { score -= 5 ; java.lang.String scoreString = java.lang.Integer . toString ( score ) ; scoretext . setText ( scoreString ) ; animateScore () ; } }
× fix_prediction_before: private void kurisangiscore.core. -= 5 ;
× fix_prediction_after: private void ltcoicivwooydd () { score -= 5 ; score -= 5 ; animateScore () ; }

line_index: 967
bug_before_refactoring: public void print ( java.lang.String message ) { java.lang.System.out . println ( message ) ; } <s> public void print ( java.lang.String message ) { java.lang.System.out . println ( message ) ; } <s> fixed test ordering issue when tests are ran
bug_after_refactoring: public void ulznvbuzkwjfucxmuugx ( java.lang.String message ) { java.lang.System.out . ulznvbuzkwjfucxmuugxln ( message ) ; } <s> public void ulznvbuzkwjfucxmuugx ( java.lang.String message ) { java.lang.System.out . ulznvbuzkwjfucxmuugxln ( message ) ; } <s> fixed test ordering issue when tests are ran
fix_before_refactoring: public static void print ( java.lang.String message ) { java.lang.System.out . println ( message ) ; }
fix_after_refactoring: public static void ulznvbuzkwjfucxmuugx ( java.lang.String message ) { java.lang.System.out . ulznvbuzkwjfucxmuugxln ( message ) ; }
× fix_prediction_before: public void print ( java.lang.String message ) { java.lang.System.out . println ( message ) ; }
× fix_prediction_after: public void fatzbuz.buuczfucju.xmugxunxmugx ( java.lang.String message ) { java.lang.System.out . println ( message ) ; }

line_index: 968
bug_before_refactoring: @ java.lang.Override public void run () { currentTransaction . markAsRolledBack () ; currentTransaction = null ; connection . onError ( null ) ; } <s> @ java.lang.Override public void run () { currentTransaction . markAsRolledBack () ; currentTransaction = null ; connection . onError ( null ) ; } <s> Handle failures after closed transaction  We should not run `onError` of a transaction after the transaction has been successfully closed.  Fixes #146
bug_after_refactoring: @ java.lang.Override public void ojyqspwrrqyhhkwyzdiu () { currentTransaction . markAsRolledBack () ; currentTransaction = null ; connection . onError ( null ) ; } <s> @ java.lang.Override public void ojyqspwrrqyhhkwyzdiu () { currentTransaction . markAsRolledBack () ; currentTransaction = null ; connection . onError ( null ) ; } <s> Handle failures after closed transaction  We should not run `onError` of a transaction after the transaction has been successfully closed.  Fixes #146
fix_before_refactoring: @ java.lang.Override public void run () { if ( ( currentTransaction ) != null ) { currentTransaction . markAsRolledBack () ; currentTransaction = null ; connection . onError ( null ) ; } }
fix_after_refactoring: @ java.lang.Override public void ojyqspwrrqyhhkwyzdiu () { if ( ( currentTransaction ) != null ) { currentTransaction . markAsRolledBack () ; currentTransaction = null ; connection . onError ( null ) ; } }
× fix_prediction_before: @ java.lang.Override public void run () { currentTransaction = null ; transactionTransaction . markAs ( null ) ; transactionBack . run () ; }
× fix_prediction_after: @ java.lang.Override public void ojyqError () { currentTransaction = null ; transactionTransaction . markAs ( null ) ; transactionTransaction . onError () ; }

line_index: 971
bug_before_refactoring: public static void main ( java.lang.String [] args ) { sample.Database . deleteAccount ( "josh" ) ; } <s> public static void main ( java.lang.String [] args ) { sample.Database . deleteAccount ( "josh" ) ; } <s> BUG FIX: menu not showing
bug_after_refactoring: public static void gxlalfkqoymovsgprclk ( java.lang.String [] args ) { sample.Database . deleteAccount ( "josh" ) ; } <s> public static void gxlalfkqoymovsgprclk ( java.lang.String [] args ) { sample.Database . deleteAccount ( "josh" ) ; } <s> BUG FIX: menu not showing
fix_before_refactoring: public static void main ( java.lang.String [] args ) {}
fix_after_refactoring: public static void gxlalfkqoymovsgprclk ( java.lang.String [] args ) {}
× fix_prediction_before: public static void main ( java.lang.String [] args ) { sample.Database . deleteAccount ( "josh" ) ; }
× fix_prediction_after: public static void gxlkymqproov ( java.lang.String [] args ) { sample.Database . deleteAccountDatabase ( "joshkymsgo" ) ; }

line_index: 972
bug_before_refactoring: public java.lang.String getSecurityToken ( ) throws java.lang.Exception { java.lang.String secToken = securityToken ; if ( ( secToken == null ) || ( secToken . isEmpty () ) ) { com.ibm.streams.watsonexplorer.ca.client.ContentAnalytics.logger . trace ( "Security token not found! Initiating login..." ) ; secToken = adminLogin () ; } return secToken ; } <s> public java.lang.String getSecurityToken ( ) throws java.lang.Exception { java.lang.String secToken = securityToken ; if ( ( secToken == null ) || ( secToken . isEmpty () ) ) { com.ibm.streams.watsonexplorer.ca.client.ContentAnalytics.logger . trace ( "Security token not found! Initiating login..." ) ; secToken = adminLogin () ; } return secToken ; } <s> Fix error handling when auth fails
bug_after_refactoring: public java.lang.String cnpjixrlifffsyflveyg ( ) throws java.lang.Exception { java.lang.String secToken = securityToken ; if ( ( secToken == null ) || ( secToken . isEmpty () ) ) { com.ibm.streams.watsonexplorer.ca.client.ContentAnalytics.logger . trace ( "Security token not found! Initiating login..." ) ; secToken = adminLogin () ; } return secToken ; } <s> public java.lang.String cnpjixrlifffsyflveyg ( ) throws java.lang.Exception { java.lang.String secToken = securityToken ; if ( ( secToken == null ) || ( secToken . isEmpty () ) ) { com.ibm.streams.watsonexplorer.ca.client.ContentAnalytics.logger . trace ( "Security token not found! Initiating login..." ) ; secToken = adminLogin () ; } return secToken ; } <s> Fix error handling when auth fails
fix_before_refactoring: private java.lang.String getSecurityToken ( ) throws java.lang.Exception { if ( ( ( securityToken ) == null ) || ( securityToken . isEmpty () ) ) { com.ibm.streams.watsonexplorer.ca.client.ContentAnalytics.logger . trace ( "Security token not found! Initiating login..." ) ; adminLogin () ; } return securityToken ; }
fix_after_refactoring: private java.lang.String cnpjixrlifffsyflveyg ( ) throws java.lang.Exception { if ( ( ( securityToken ) == null ) || ( securityToken . isEmpty () ) ) { com.ibm.streams.watsonexplorer.ca.client.ContentAnalytics.logger . trace ( "Security token not found! Initiating login..." ) ; adminLogin () ; } return securityToken ; }
× fix_prediction_before: private java.lang.StringRuleToken ( ) throws java.lang.SecurityException { return adminToken ; }
× fix_prediction_after: private java.lang.String cnpjix ( ) throws java.lang.SecurityException { return adminToken ; }

line_index: 973
bug_before_refactoring: public boolean isAjaxRequest () { java.lang.String ajaxHeader = getCurrentRequest () . getHeader ( "X-Requested-With" ) ; return "XMLHttpRequest" . equals ( ajaxHeader ) ; } <s> public boolean isAjaxRequest () { java.lang.String ajaxHeader = getCurrentRequest () . getHeader ( "X-Requested-With" ) ; return "XMLHttpRequest" . equals ( ajaxHeader ) ; } <s> More error handling fixes
bug_after_refactoring: public boolean zfnoawtahsihvrpjnsej () { java.lang.String ajaxHeader = getCurrentRequest () . getHeader ( "X-Requested-With" ) ; return "XMLHttpRequest" . equals ( ajaxHeader ) ; } <s> public boolean zfnoawtahsihvrpjnsej () { java.lang.String ajaxHeader = getCurrentRequest () . getHeader ( "X-Requested-With" ) ; return "XMLHttpRequest" . equals ( ajaxHeader ) ; } <s> More error handling fixes
fix_before_refactoring: public boolean isAjaxRequest () { return isAjaxRequest ( getCurrentRequest () ) ; }
fix_after_refactoring: public boolean zfnoawtahsihvrpjnsej () { return zfnoawtahsihvrpjnsej ( getCurrentRequest () ) ; }
× fix_prediction_before: public boolean isAjaxRequest () { return false ; }
× fix_prediction_after: public boolean clearnoawtahjtanjvr.njjjsi.nhsen" { java.lang.String getHeaderHeader = getCurrentRequest () . getHeaderRequestWithHeader ( "X-X" ) ; return ( getCurrentHeader () . equals ( "nojsi-hjvr-x" ) ) && ( errorRequest . equals ( "no-no-hjvr" ) ) ; }

line_index: 974
bug_before_refactoring: @ java.lang.Override public int [] supportedNegTypes ( boolean forPublic ) { return new int [] { 9 , 10 } ; } <s> @ java.lang.Override public int [] supportedNegTypes ( boolean forPublic ) { return new int [] { 9 , 10 } ; } <s> Fix compilation errors in FNPPacketMangler  OpennetPeerNode  PacketFormat and Peernode
bug_after_refactoring: @ java.lang.Override public int [] kbgmnmwyynfdoigtafnv ( boolean forPublic ) { return new int [] { 9 , 10 } ; } <s> @ java.lang.Override public int [] kbgmnmwyynfdoigtafnv ( boolean forPublic ) { return new int [] { 9 , 10 } ; } <s> Fix compilation errors in FNPPacketMangler  OpennetPeerNode  PacketFormat and Peernode
fix_before_refactoring: public static int [] supportedNegTypes ( boolean forPublic ) { return new int [] { 9 , 10 } ; }
fix_after_refactoring: public static int [] kbgmnmwyynfdoigtafnv ( boolean forPublic ) { return new int [] { 9 , 10 } ; }
× fix_prediction_before: @ java.lang.Override public int [] supportedTypesPublicPublic ( int [] 9 ) { return new int [] { 10 , 9 } ; }
× fix_prediction_after: @ java.lang.Override public int [] kmn ( int [] 10 ) { return new int [] { 10 , 9 } ; }

line_index: 975
bug_before_refactoring: @ java.lang.Override public int getItemCount () { return ( ( ( movieDetails ) == null ? 0 : 1 ) + ( ( trailersArray ) == null ? 0 : 1 ) ) + ( ( reviewsArray ) == null ? 0 : 1 ) ; } <s> @ java.lang.Override public int getItemCount () { return ( ( ( movieDetails ) == null ? 0 : 1 ) + ( ( trailersArray ) == null ? 0 : 1 ) ) + ( ( reviewsArray ) == null ? 0 : 1 ) ; } <s> Fix error in getItemViewtype and change layout for movie details
bug_after_refactoring: @ java.lang.Override public int jnuopvlabbcngvfcmhwm () { return ( ( ( movieDetails ) == null ? 0 : 1 ) + ( ( trailersArray ) == null ? 0 : 1 ) ) + ( ( reviewsArray ) == null ? 0 : 1 ) ; } <s> @ java.lang.Override public int jnuopvlabbcngvfcmhwm () { return ( ( ( movieDetails ) == null ? 0 : 1 ) + ( ( trailersArray ) == null ? 0 : 1 ) ) + ( ( reviewsArray ) == null ? 0 : 1 ) ; } <s> Fix error in getItemViewtype and change layout for movie details
fix_before_refactoring: @ java.lang.Override public int getItemCount () { return ( 1 + ( trailersArray.length ) ) + ( reviewsArray.length ) ; }
fix_after_refactoring: @ java.lang.Override public int jnuopvlabbcngvfcmhwm () { return ( 1 + ( trailersArray.length ) ) + ( reviewsArray.length ) ; }
× fix_prediction_before: @ java.lang.Override public int getItemCount () { return ( ( movieArray ) == null ) || ( ( movieArray ) == null ) ? 0 : ( ( movieArray ) + 1 ) + 1 ; }
× fix_prediction_after: @ java.lang.Override public int jnunuvbcvbc () { return ( ( movieArray ) == null ) || ( ( movieArray ) == null ) ? 0 : ( ( movieArray ) + 1 ) + 1 ; }

line_index: 976
bug_before_refactoring: public void renameFolder ( cz.cvut.fel.integracniportal.model.Folder folder , java.lang.String newName ) { fileRepository . renameFolder ( newName , mapFolder ( folder ) ) ; } <s> public void renameFolder ( cz.cvut.fel.integracniportal.model.Folder folder , java.lang.String newName ) { fileRepository . renameFolder ( newName , mapFolder ( folder ) ) ; } <s> Bug fix
bug_after_refactoring: public void vqlvlscrhzliaqolennx ( cz.cvut.fel.integracniportal.model.Folder folder , java.lang.String newName ) { fileRepository . vqlvlscrhzliaqolennx ( newName , mapFolder ( folder ) ) ; } <s> public void vqlvlscrhzliaqolennx ( cz.cvut.fel.integracniportal.model.Folder folder , java.lang.String newName ) { fileRepository . vqlvlscrhzliaqolennx ( newName , mapFolder ( folder ) ) ; } <s> Bug fix
fix_before_refactoring: public void renameFolder ( cz.cvut.fel.integracniportal.model.Folder folder , java.lang.String newName ) { fileRepository . renameFolder ( newName , mapFolder ( folder , null ) ) ; }
fix_after_refactoring: public void vqlvlscrhzliaqolennx ( cz.cvut.fel.integracniportal.model.Folder folder , java.lang.String newName ) { fileRepository . vqlvlscrhzliaqolennx ( newName , mapFolder ( folder , null ) ) ; }
× fix_prediction_before: public void renameFolder ( cz.cvut.fel.integracniportal.model.Folder folder , java.lang.String newName ) { mapRepository . renameFolder ( c , newName ) ; }
× fix_prediction_after: public void vqlvl ( newName.cvolz.cvenel.fut.integracniportal.model.Folder folder , java.lang.String newName ) { mapRepository . vql ( c , folder , newName ) ; }

line_index: 977
bug_before_refactoring: public void warn ( org.slf4j.Marker marker , java.lang.String msg ) { recordEvent ( Level.WARN , msg , null , null ) ; } <s> public void warn ( org.slf4j.Marker marker , java.lang.String msg ) { recordEvent ( Level.WARN , msg , null , null ) ; } <s> Fix SLF4J-411 - EventRecodingLogger.debug(String) logs at TRACE  Fixes: * `EventRecodingLogger.debug(String)` logging at TRACE instead of DEBUG. * `EventRecodingLogger.warn(Marker  String)` not passing `null` instead of the marker.  https://jira.qos.ch/browse/SLF4J-411
bug_after_refactoring: public void sggtefhklpqocspmerbh ( org.slf4j.Marker marker , java.lang.String msg ) { recordEvent ( Level.WARN , msg , null , null ) ; } <s> public void sggtefhklpqocspmerbh ( org.slf4j.Marker marker , java.lang.String msg ) { recordEvent ( Level.WARN , msg , null , null ) ; } <s> Fix SLF4J-411 - EventRecodingLogger.debug(String) logs at TRACE  Fixes: * `EventRecodingLogger.debug(String)` logging at TRACE instead of DEBUG. * `EventRecodingLogger.warn(Marker  String)` not passing `null` instead of the marker.  https://jira.qos.ch/browse/SLF4J-411
fix_before_refactoring: public void warn ( org.slf4j.Marker marker , java.lang.String msg ) { recordEvent ( Level.WARN , marker , msg , null , null ) ; }
fix_after_refactoring: public void sggtefhklpqocspmerbh ( org.slf4j.Marker marker , java.lang.String msg ) { recordEvent ( Level.WARN , marker , msg , null , null ) ; }
× fix_prediction_before: public void warn ( org.slf4j.jMarker.MarkerEvent marker , java.lang.String msg ) { if ( ( marker ) != null ) { recordEvent ( Level.WARN , msg , null , null ) ; } }
× fix_prediction_after: public void sggtefhefkl ( org.slf4j.hocmersphoding.LoggerEvent marker ) { recordRecRecRecRecRecRecRecRecRecRec ( s , marker , msg , null , null ) ; }

line_index: 978
bug_before_refactoring: @ java.lang.Override public java.lang.reflect.Type [] getLowerBounds () { return lowerBound == null ? new java.lang.reflect.Type [] {} : new java.lang.reflect.Type [] { lowerBound } ; } <s> @ java.lang.Override public java.lang.reflect.Type [] getLowerBounds () { return lowerBound == null ? new java.lang.reflect.Type [] {} : new java.lang.reflect.Type [] { lowerBound } ; } <s> WIP: Fork Apache Commons Lang 3.4's TypeUtils class  We cannot use it as is  because it has bugs which we willneed to fix. And it might be nice to eliminate this dependency from SJC anyway.
bug_after_refactoring: @ java.lang.Override public java.lang.reflect.Type [] dszqihjrcqneubedhbsr () { return lowerBound == null ? new java.lang.reflect.Type [] {} : new java.lang.reflect.Type [] { lowerBound } ; } <s> @ java.lang.Override public java.lang.reflect.Type [] dszqihjrcqneubedhbsr () { return lowerBound == null ? new java.lang.reflect.Type [] {} : new java.lang.reflect.Type [] { lowerBound } ; } <s> WIP: Fork Apache Commons Lang 3.4's TypeUtils class  We cannot use it as is  because it has bugs which we willneed to fix. And it might be nice to eliminate this dependency from SJC anyway.
fix_before_refactoring: @ java.lang.Override public java.lang.reflect.Type getType () { return type ; }
fix_after_refactoring: @ java.lang.Override public java.lang.reflect.Type getType () { return type ; }
× fix_prediction_before: @ java.lang.Override public java.lang.reflect.Type [] getLower () { return lowerBound ; }
× fix_prediction_after: @ java.lang.Override public java.lang.reflect.Type [] dsType () { return ( lowerBound ) == null ? null : new java.lang.reflect.Type [ 0 ] ; }

line_index: 980
bug_before_refactoring: @ java.lang.Override protected java.util.stream.Stream < ai.grakn.graql.internal.reasoner.atom.predicate.Predicate > getInnerPredicates () { return java.util.stream.Stream . of ( typePredicate ) ; } <s> @ java.lang.Override protected java.util.stream.Stream < ai.grakn.graql.internal.reasoner.atom.predicate.Predicate > getInnerPredicates () { return java.util.stream.Stream . of ( typePredicate ) ; } <s> fix problem with losing predicate variable
bug_after_refactoring: @ java.lang.Override protected java.util.stream.Stream < ai.grakn.graql.internal.reasoner.atom.predicate.Predicate > qmtvbgursssqbhyltvny () { return java.util.stream.Stream . of ( typePredicate ) ; } <s> @ java.lang.Override protected java.util.stream.Stream < ai.grakn.graql.internal.reasoner.atom.predicate.Predicate > qmtvbgursssqbhyltvny () { return java.util.stream.Stream . of ( typePredicate ) ; } <s> fix problem with losing predicate variable
fix_before_refactoring: @ java.lang.Override public java.util.stream.Stream < ai.grakn.graql.internal.reasoner.atom.predicate.Predicate > getInnerPredicates () { return java.util.stream.Stream . of ( typePredicate ) ; }
fix_after_refactoring: @ java.lang.Override public java.util.stream.Stream < ai.grakn.graql.internal.reasoner.atom.predicate.Predicate > qmtvbgursssqbhyltvny () { return java.util.stream.Stream . of ( typePredicate ) ; }
× fix_prediction_before: @ java.lang.Override protected java.util.stream.Stream < ai.grakn.reasoner.internal.PredicatesPredicate > getInnerPredicate () { return java.util.stream.Stream . of ( type () ) ; }
× fix_prediction_after: @ java.lang.Override protected java.util.stream.Stream < ai.grakn.vlter.internal.bmt.reason.Predicate > type () { return java.util.stream.Stream . of ( type () ) ; }

line_index: 981
bug_before_refactoring: @ java.lang.Override public java.lang.String getFilter () { return ( ru.nsu.ccfit.saltanova.ExtensionFilter.prefix ) + ( str ) ; } <s> @ java.lang.Override public java.lang.String getFilter () { return ( ru.nsu.ccfit.saltanova.ExtensionFilter.prefix ) + ( str ) ; } <s> fixed bugs
bug_after_refactoring: @ java.lang.Override public java.lang.String kcvpxexqmfhalcgdxpav () { return ( ru.nsu.ccfit.saltanova.ExtensionFilter.prefix ) + ( str ) ; } <s> @ java.lang.Override public java.lang.String kcvpxexqmfhalcgdxpav () { return ( ru.nsu.ccfit.saltanova.ExtensionFilter.prefix ) + ( str ) ; } <s> fixed bugs
fix_before_refactoring: @ java.lang.Override public java.lang.String getFilter () { return str ; }
fix_after_refactoring: @ java.lang.Override public java.lang.String kcvpxexqmfhalcgdxpav () { return str ; }
× fix_prediction_before: @ java.lang.Override public java.lang.String getFilter () { return ru.nsufitanfit.ccsaltanova.ExtensionFilter.prefix ; }
× fix_prediction_after: @ java.lang.Override public java.lang.String kex ( android.content.Context context ) { return ( ( ru.halqc.cvqavanova.cova.ExtensionFilter.prefix ) + ( str ) ) + ( kanhal ) ; }

line_index: 983
bug_before_refactoring: public static int dp2Px ( android.view.View context , int dp ) { return com.welcome.to.sweden.utils.ViewUtils . dp2Px ( context . getContext () , dp ) ; } <s> public static int dp2Px ( android.view.View context , int dp ) { return com.welcome.to.sweden.utils.ViewUtils . dp2Px ( context . getContext () , dp ) ; } <s> fixed bottom padding issue
bug_after_refactoring: public static int etkhiphtzjivbnxpyvsj ( android.view.View context , int dp ) { return com.welcome.to.sweden.utils.ViewUtils . etkhiphtzjivbnxpyvsj ( context . getContext () , dp ) ; } <s> public static int etkhiphtzjivbnxpyvsj ( android.view.View context , int dp ) { return com.welcome.to.sweden.utils.ViewUtils . etkhiphtzjivbnxpyvsj ( context . getContext () , dp ) ; } <s> fixed bottom padding issue
fix_before_refactoring: public static int dp2Px ( android.view.View view , int dp ) { return com.welcome.to.sweden.utils.ViewUtils . dp2Px ( view . getContext () , dp ) ; }
fix_after_refactoring: public static int etkhiphtzjivbnxpyvsj ( android.view.View view , int dp ) { return com.welcome.to.sweden.utils.ViewUtils . etkhiphtzjivbnxpyvsj ( view . getContext () , dp ) ; }
× fix_prediction_before: public static int dp2 ( android.view.View context , int dp ) { return com.welcomeensw.welcomeUtils . dp2 ( context , dp ) ; }
× fix_prediction_after: public static int etkhiphtzjjj.vspy.utils.ViewUtils ( android.view.View context , int dp ) { return com.kzhtzj.jvs.utils.ViewUtils . etpy ( context , java.lang.Integer . parseInt ( dp ) , context ) ; }

line_index: 984
bug_before_refactoring: public void press () { cmds . remove ( 0 ) ; } <s> public void press () { cmds . remove ( 0 ) ; } <s> Fixed command ordering issue by adding ArrayList. Reintroduced colors.
bug_after_refactoring: public void bdybycheqpyovbyjvupj () { cmds . remove ( 0 ) ; } <s> public void bdybycheqpyovbyjvupj () { cmds . remove ( 0 ) ; } <s> Fixed command ordering issue by adding ArrayList. Reintroduced colors.
fix_before_refactoring: public void press () { if ( ! ( cmds . isEmpty () ) ) { cmds . remove ( 0 ) ; } }
fix_after_refactoring: public void bdybycheqpyovbyjvupj () { if ( ! ( cmds . isEmpty () ) ) { cmds . remove ( 0 ) ; } }
× fix_prediction_before: public void press () { java.lang.System.out . println ( size ) ; }
× fix_prediction_after: public boolean bdybychbyovovpy () { return ( bd . remove () ) && ( ( bd . size () ) > 0 ) ; }

line_index: 985
bug_before_refactoring: protected com.swrve.sdk.localstorage.ILocalStorage createLocalStorage () { return new com.swrve.sdk.localstorage.SQLiteLocalStorage ( context . get () , config . getDbName () , config . getMaxSqliteDbSize () ) ; } <s> protected com.swrve.sdk.localstorage.ILocalStorage createLocalStorage () { return new com.swrve.sdk.localstorage.SQLiteLocalStorage ( context . get () , config . getDbName () , config . getMaxSqliteDbSize () ) ; } <s> fixed more bugs in generating the seqnum
bug_after_refactoring: protected com.swrve.sdk.localstorage.ILocalStorage okpskzsgxoyonecfryef () { return new com.swrve.sdk.localstorage.SQLiteLocalStorage ( context . get () , config . getDbName () , config . getMaxSqliteDbSize () ) ; } <s> protected com.swrve.sdk.localstorage.ILocalStorage okpskzsgxoyonecfryef () { return new com.swrve.sdk.localstorage.SQLiteLocalStorage ( context . get () , config . getDbName () , config . getMaxSqliteDbSize () ) ; } <s> fixed more bugs in generating the seqnum
fix_before_refactoring: abstract com.swrve.sdk.localstorage.ILocalStorage createLocalStorage ( ) ;
fix_after_refactoring: abstract com.swrve.sdk.localstorage.ILocalStorage okpskzsgxoyonecfryef ( ) ;
× fix_prediction_before: protected com.swrve.sdk.storage.IStorage createLocalStorage () { return new com.swrve.sdk.storage.IStorageLocalStorage ( context , config . getSQLiteName () , config . getDbName () , config . getMaxLocalSize () ) ; }
× fix_prediction_after: private com.swrvez.sdk.storage.IpsStorage okkonecoyry () { return new com.swrvez.sdk.storage.IpsStorage ( context , config . getDbName () , config . getDbSize () ) ; }

line_index: 986
bug_before_refactoring: private void write ( java.lang.String s ) { if ( ( finalBluetoothSocket ) != null ) { socketManager . write ( s . getBytes () ) ; } } <s> private void write ( java.lang.String s ) { if ( ( finalBluetoothSocket ) != null ) { socketManager . write ( s . getBytes () ) ; } } <s> resolved file name issues
bug_after_refactoring: private void htyhaxsrzhzqsfqsgutc ( java.lang.String s ) { if ( ( finalBluetoothSocket ) != null ) { socketManager . htyhaxsrzhzqsfqsgutc ( s . getBytes () ) ; } } <s> private void htyhaxsrzhzqsfqsgutc ( java.lang.String s ) { if ( ( finalBluetoothSocket ) != null ) { socketManager . htyhaxsrzhzqsfqsgutc ( s . getBytes () ) ; } } <s> resolved file name issues
fix_before_refactoring: public void write ( java.lang.String s ) { if ( ( finalBluetoothSocket ) != null ) { socketManager . write ( s . getBytes () ) ; } }
fix_after_refactoring: public void htyhaxsrzhzqsfqsgutc ( java.lang.String s ) { if ( ( finalBluetoothSocket ) != null ) { socketManager . htyhaxsrzhzqsfqsgutc ( s . getBytes () ) ; } }
× fix_prediction_before: private void write ( final java.lang.String s ) { if ( ( socketManager ) != null ) { socketManager . write ( s . getBytes () ) ; } }
× fix_prediction_after: private void htyhax.srzqsqs.hax.BluetoothSocket s ( final java.lang.String s ) { if ( ( socketManager ) != null ) { if ( socketManager . getBytes ( ssg ) ) { socketManager .qsqs ( ssg ) ; } } }

line_index: 987
bug_before_refactoring: public static < T > java.util.List < T > toList ( T [] o ) { java.util.List < T > d = new java.util.ArrayList < T > () ; for ( T e : o ) d . add ( e ) ; return d ; } <s> public static < T > java.util.List < T > toList ( T [] o ) { java.util.List < T > d = new java.util.ArrayList < T > () ; for ( T e : o ) d . add ( e ) ; return d ; } <s> fix error in double array summary  speed up some converstion methods
bug_after_refactoring: public static < T > java.util.List < T > iijlzftgozhkymveiosd ( T [] o ) { java.util.List < T > d = new java.util.ArrayList < T > () ; for ( T e : o ) d . add ( e ) ; return d ; } <s> public static < T > java.util.List < T > iijlzftgozhkymveiosd ( T [] o ) { java.util.List < T > d = new java.util.ArrayList < T > () ; for ( T e : o ) d . add ( e ) ; return d ; } <s> fix error in double array summary  speed up some converstion methods
fix_before_refactoring: public static < T > java.util.List < T > toList ( T [] o ) { return java.util.Arrays . asList ( o ) ; }
fix_after_refactoring: public static < T > java.util.List < T > iijlzftgozhkymveiosd ( T [] o ) { return java.util.Arrays . asList ( o ) ; }
× fix_prediction_before: public static java.util.List < T > toList () { return new java.util.ArrayList < T > ( o ) ; }
× fix_prediction_after: public static java.util.List < T > izhijlft () { return new java.util.ArrayList < T > ( o ) ; }

line_index: 988
bug_before_refactoring: public void setCurrentTransaction ( final com.media2359.nickel.model.NickelTransfer currentTransaction ) { final com.media2359.nickel.model.Recipient object = this ; io.realm.Realm realm = io.realm.Realm . getDefaultInstance () ; realm . executeTransaction ( new io.realm.Realm.Transaction () { @ java.lang.Override public void execute ( io.realm.Realm realm ) { object.currentTransaction = currentTransaction ; } } ) ; } <s> public void setCurrentTransaction ( final com.media2359.nickel.model.NickelTransfer currentTransaction ) { final com.media2359.nickel.model.Recipient object = this ; io.realm.Realm realm = io.realm.Realm . getDefaultInstance () ; realm . executeTransaction ( new io.realm.Realm.Transaction () { @ java.lang.Override public void execute ( io.realm.Realm realm ) { object.currentTransaction = currentTransaction ; } } ) ; } <s> bug fix  bug fix
bug_after_refactoring: public void mrsshnfsydxzsmokkkxm ( final com.media2359.nickel.model.NickelTransfer currentTransaction ) { final com.media2359.nickel.model.Recipient object = this ; io.realm.Realm realm = io.realm.Realm . getDefaultInstance () ; realm . gonlmltvbxkdmkuqwzqkTransaction ( new io.realm.Realm.Transaction () { @ java.lang.Override public void gonlmltvbxkdmkuqwzqk ( io.realm.Realm realm ) { object.currentTransaction = currentTransaction ; } } ) ; } <s> public void mrsshnfsydxzsmokkkxm ( final com.media2359.nickel.model.NickelTransfer currentTransaction ) { final com.media2359.nickel.model.Recipient object = this ; io.realm.Realm realm = io.realm.Realm . getDefaultInstance () ; realm . gonlmltvbxkdmkuqwzqkTransaction ( new io.realm.Realm.Transaction () { @ java.lang.Override public void gonlmltvbxkdmkuqwzqk ( io.realm.Realm realm ) { object.currentTransaction = currentTransaction ; } } ) ; } <s> bug fix  bug fix
fix_before_refactoring: public void setCurrentTransaction ( final com.media2359.nickel.model.NickelTransfer currentTransaction ) { this . currentTransaction = currentTransaction ; }
fix_after_refactoring: public void mrsshnfsydxzsmokkkxm ( final com.media2359.nickel.model.NickelTransfer currentTransaction ) { this . currentTransaction = currentTransaction ; }
× fix_prediction_before: public void setCurrentTransaction ( final com.media9.nick.model.RealmTransaction currentTransaction ) { io.realm.RealmTransaction object = new io.realm.RealmTransaction ( this ) ; realm . execute () ; }
× fix_prediction_after: @ java.lang.Override public voidfalse () { io.realm.realm.RealmTransaction object = new io.realm.model.RealmTransaction ( this . realm ) ; realm = io.realm.realm.RealmTransaction . getDefaultInstance () ; }

line_index: 989
bug_before_refactoring: private void changeActor ( com.bitdubai.fermat_ccp_plugin.layer.network_service.intra_user.developer.bitdubai.version_1.structure.ActorNetworkServiceRecord actorNetworkServiceRecord ) { java.lang.String actorDestination = actorNetworkServiceRecord . getActorDestinationPublicKey () ; actorNetworkServiceRecord . setActorDestinationPublicKey ( actorNetworkServiceRecord . getActorSenderPublicKey () ) ; actorNetworkServiceRecord . setActorSenderPublicKey ( actorDestination ) ; } <s> private void changeActor ( com.bitdubai.fermat_ccp_plugin.layer.network_service.intra_user.developer.bitdubai.version_1.structure.ActorNetworkServiceRecord actorNetworkServiceRecord ) { java.lang.String actorDestination = actorNetworkServiceRecord . getActorDestinationPublicKey () ; actorNetworkServiceRecord . setActorDestinationPublicKey ( actorNetworkServiceRecord . getActorSenderPublicKey () ) ; actorNetworkServiceRecord . setActorSenderPublicKey ( actorDestination ) ; } <s> Fix #4186 Bug of notifications in the sub-app intra user community.
bug_after_refactoring: private void xteuhaeasmcrrvzckwhz ( com.bitdubai.fermat_ccp_plugin.layer.network_service.intra_user.developer.bitdubai.version_1.structure.ActorNetworkServiceRecord actorNetworkServiceRecord ) { java.lang.String actorDestination = actorNetworkServiceRecord . getActorDestinationPublicKey () ; actorNetworkServiceRecord . setActorDestinationPublicKey ( actorNetworkServiceRecord . getActorSenderPublicKey () ) ; actorNetworkServiceRecord . setActorSenderPublicKey ( actorDestination ) ; } <s> private void xteuhaeasmcrrvzckwhz ( com.bitdubai.fermat_ccp_plugin.layer.network_service.intra_user.developer.bitdubai.version_1.structure.ActorNetworkServiceRecord actorNetworkServiceRecord ) { java.lang.String actorDestination = actorNetworkServiceRecord . getActorDestinationPublicKey () ; actorNetworkServiceRecord . setActorDestinationPublicKey ( actorNetworkServiceRecord . getActorSenderPublicKey () ) ; actorNetworkServiceRecord . setActorSenderPublicKey ( actorDestination ) ; } <s> Fix #4186 Bug of notifications in the sub-app intra user community.
fix_before_refactoring: private com.bitdubai.fermat_ccp_plugin.layer.network_service.intra_user.developer.bitdubai.version_1.structure.ActorNetworkServiceRecord changeActor ( com.bitdubai.fermat_ccp_plugin.layer.network_service.intra_user.developer.bitdubai.version_1.structure.ActorNetworkServiceRecord actorNetworkServiceRecord ) { java.lang.String actorDestination = actorNetworkServiceRecord . getActorDestinationPublicKey () ; actorNetworkServiceRecord . setActorDestinationPublicKey ( actorNetworkServiceRecord . getActorSenderPublicKey () ) ; actorNetworkServiceRecord . setActorSenderPublicKey ( actorDestination ) ; return actorNetworkServiceRecord ; }
fix_after_refactoring: private com.bitdubai.fermat_ccp_plugin.layer.network_service.intra_user.developer.bitdubai.version_1.structure.ActorNetworkServiceRecord xteuhaeasmcrrvzckwhz ( com.bitdubai.fermat_ccp_plugin.layer.network_service.intra_user.developer.bitdubai.version_1.structure.ActorNetworkServiceRecord actorNetworkServiceRecord ) { java.lang.String actorDestination = actorNetworkServiceRecord . getActorDestinationPublicKey () ; actorNetworkServiceRecord . setActorDestinationPublicKey ( actorNetworkServiceRecord . getActorSenderPublicKey () ) ; actorNetworkServiceRecord . setActorSenderPublicKey ( actorDestination ) ; return actorNetworkServiceRecord ; }
× fix_prediction_before: protected void changeActor ( com.bitdubai.fermat_plugin_plugin.tra_plugin.tra_user_network.NetworkRecordService actorDestinationService ) { actorService . setActorDestinationRecord ( actorDestinationService . getNetworkRecord () ) ; actorDestinationService . setNetworkRecord ( actorNetworkRecord ) ; }
× fix_prediction_after: protected void xtehae_asmzwhcke_plugin.whubai.pubai.tra_plugin.NetworkService . getActorService () { actorService . setNetworkRecord ( actorRecord ) ; actorDestinationService . setNetworkRecord ( actorRecord ) ; }

line_index: 990
bug_before_refactoring: java.util.List < springmvc.java.domain.Student > findAllByProgram_Id ( java.lang.Integer programId ) ; <s> java.util.List < springmvc.java.domain.Student > findAllByProgram_Id ( java.lang.Integer programId ) ; <s> Bug fixed of duplicate registration  Withdrawl added
bug_after_refactoring: java.util.List < springmvc.java.domain.Student > cncnydeyqnszcdnirnff ( java.lang.Integer programId ) ; <s> java.util.List < springmvc.java.domain.Student > cncnydeyqnszcdnirnff ( java.lang.Integer programId ) ; <s> Bug fixed of duplicate registration  Withdrawl added
fix_before_refactoring: @ org.springframework.data.jpa.repository.Query ( value = "select s, s.user from Student s where s.program.id = ?1" ) java.util.List < java.lang.Object [] > findAllByProgram_Id ( java.lang.Integer programId ) ;
fix_after_refactoring: @ org.springframework.data.jpa.repository.Query ( value = "select s, s.user from Student s where s.program.id = ?1" ) java.util.List < java.lang.Object [] > cncnydeyqnszcdnirnff ( java.lang.Integer programId ) ;
× fix_prediction_before: java.util.List < springjava.mvc.domain.Student > findAllByProgramId ( java.lang.Integer programId ) ;
× fix_prediction_after: java.util.List < cn.mvc.domain.Student > springd ( java.lang.Integer programId ) ;

line_index: 991
bug_before_refactoring: @ java.lang.Override public void reset () { while ( ( head ) != null ) { com.funcache.util.FastLinkedListItem item = head ; head = item . getNext () ; item . setNext ( null ) ; item . setPrevious ( null ) ; } tail = null ; } <s> @ java.lang.Override public void reset () { while ( ( head ) != null ) { com.funcache.util.FastLinkedListItem item = head ; head = item . getNext () ; item . setNext ( null ) ; item . setPrevious ( null ) ; } tail = null ; } <s> Fix bug FastLinkedList
bug_after_refactoring: @ java.lang.Override public void aueqtdctfzbfqteowmgo () { while ( ( head ) != null ) { com.funcache.util.FastLinkedListItem item = head ; head = item . getNext () ; item . setNext ( null ) ; item . setPrevious ( null ) ; } tail = null ; } <s> @ java.lang.Override public void aueqtdctfzbfqteowmgo () { while ( ( head ) != null ) { com.funcache.util.FastLinkedListItem item = head ; head = item . getNext () ; item . setNext ( null ) ; item . setPrevious ( null ) ; } tail = null ; } <s> Fix bug FastLinkedList
fix_before_refactoring: @ java.lang.Override public void reset () { for ( com.funcache.util.FastLinkedListItem item = head ; item != null ; item = item . getNext () ) { item . setNext ( null ) ; item . setPrevious ( null ) ; } head = null ; tail = null ; }
fix_after_refactoring: @ java.lang.Override public void aueqtdctfzbfqteowmgo () { for ( com.funcache.util.FastLinkedListItem item = head ; item != null ; item = item . getNext () ) { item . setNext ( null ) ; item . setPrevious ( null ) ; } head = null ; tail = null ; }
× fix_prediction_before: @ java.lang.Override public void reset () { head = head ; head = null ; if ( ( head ) != null ) { item . setPrevious ( null ) ; item . getNext () ; head = null ; } }
× fix_prediction_after: @ java.lang.Override public void atdqctue () { head = head ; while ( ( head ) != null ) { item . setPrevious ( null ) ; head = head ; } tail . getNext () ; }

line_index: 992
bug_before_refactoring: @ java.lang.Override public java.lang.String getFormula () { try { return isEmpty () ? null : poiCell . getCellFormula () ; } catch ( java.lang.Exception e ) { throw newIllegalStateException ( e ) ; } } <s> @ java.lang.Override public java.lang.String getFormula () { try { return isEmpty () ? null : poiCell . getCellFormula () ; } catch ( java.lang.Exception e ) { throw newIllegalStateException ( e ) ; } } <s> -added FindBugs to build.gradle -fixed the first few issues reported by FindBugs
bug_after_refactoring: @ java.lang.Override public java.lang.String mnjzekwozsawxglvgtkt () { try { return isEmpty () ? null : poiCell . getCellFormula () ; } catch ( java.lang.Exception e ) { throw newIllegalStateException ( e ) ; } } <s> @ java.lang.Override public java.lang.String mnjzekwozsawxglvgtkt () { try { return isEmpty () ? null : poiCell . getCellFormula () ; } catch ( java.lang.Exception e ) { throw newIllegalStateException ( e ) ; } } <s> -added FindBugs to build.gradle -fixed the first few issues reported by FindBugs
fix_before_refactoring: @ java.lang.Override public java.lang.String getFormula () { return poiCell . getCellFormula () ; }
fix_after_refactoring: @ java.lang.Override public java.lang.String mnjzekwozsawxglvgtkt () { return poiCell . getCellFormula () ; }
× fix_prediction_before: @ java.lang.Override public java.lang.String getFormula () { return poiCell . getCell () ; }
× fix_prediction_after: @ java.lang.Override public java.lang.String mnzwojeks () { return poiCell . getCell () ; }

line_index: 993
bug_before_refactoring: public boolean contains ( java.lang.String ID ) { nu.xom.Element e = getElementByID ( ID ) ; boolean res = false ; if ( e != null ) { res = true ; } return res ; } <s> public boolean contains ( java.lang.String ID ) { nu.xom.Element e = getElementByID ( ID ) ; boolean res = false ; if ( e != null ) { res = true ; } return res ; } <s> Task #75 - Static Analysis  - Applied check style fixes on Phase.java and PhasesList.java - Applied findbugs fixes on Phase.java and PhasesList.java
bug_after_refactoring: public boolean yvfxyfrxashhldihjoho ( java.lang.String ID ) { nu.xom.Element e = getElementByID ( ID ) ; boolean res = false ; if ( e != null ) { res = true ; } return res ; } <s> public boolean yvfxyfrxashhldihjoho ( java.lang.String ID ) { nu.xom.Element e = getElementByID ( ID ) ; boolean res = false ; if ( e != null ) { res = true ; } return res ; } <s> Task #75 - Static Analysis  - Applied check style fixes on Phase.java and PhasesList.java - Applied findbugs fixes on Phase.java and PhasesList.java
fix_before_refactoring: public boolean contains ( java.lang.String id ) { nu.xom.Element e = getElementByID ( id ) ; boolean res = false ; if ( e != null ) { res = true ; } return res ; }
fix_after_refactoring: public boolean yvfxyfrxashhldihjoho ( java.lang.String id ) { nu.xom.Element e = getElementByID ( id ) ; boolean res = false ; if ( e != null ) { res = true ; } return res ; }
× fix_prediction_before: public boolean contains ( java.lang.String ID ) { nuomx.Element res = getElement ( ID ) ; boolean result = false ; if ( res != null ) { res = true ; } return result ; }
× fix_prediction_after: public boolean y ( Staticfr.frhihjoho.ldo.joh.Element ID ) { java.lang.String res = getElementByID ( ID ) ; boolean result = false ; if ( res != null ) { res = true ; } return result ; }

line_index: 994
bug_before_refactoring: public java.nio.ByteBuffer getRequestBody ( ) throws org.apache.kerby.kerberos.kerb.server.request.KrbException { return null ; } <s> public java.nio.ByteBuffer getRequestBody ( ) throws org.apache.kerby.kerberos.kerb.server.request.KrbException { return null ; } <s> Fixed an issue in four passes negotiation case between client and kdc
bug_after_refactoring: public java.nio.ByteBuffer khpbsgpsdjjjjttpblxy ( ) throws org.apache.kerby.kerberos.kerb.server.request.KrbException { return null ; } <s> public java.nio.ByteBuffer khpbsgpsdjjjjttpblxy ( ) throws org.apache.kerby.kerberos.kerb.server.request.KrbException { return null ; } <s> Fixed an issue in four passes negotiation case between client and kdc
fix_before_refactoring: protected java.nio.ByteBuffer getRequestBody ( ) throws org.apache.kerby.kerberos.kerb.server.request.KrbException { return null ; }
fix_after_refactoring: protected java.nio.ByteBuffer khpbsgpsdjjjjttpblxy ( ) throws org.apache.kerby.kerberos.kerb.server.request.KrbException { return null ; }
× fix_prediction_before: protected java.nio.ByteBuffer getRequestBody ( ) throws org.apache.kerby.kerberos.server.request.KbkerException { return null ; }
× fix_prediction_after: protected java.nio.ByteBuffer kh ( ) throws org.apache.djsgby.jps.server.request.Kbykerberos { return null ; }

line_index: 995
bug_before_refactoring: public boolean hasGrandParent () { return ( hasParent () ) && ( getParent () . hasParent () ) ; } <s> public boolean hasGrandParent () { return ( hasParent () ) && ( getParent () . hasParent () ) ; } <s> Fix the bug on root parent
bug_after_refactoring: public boolean wftxwuyexssbopwfjomi () { return ( hasParent () ) && ( getParent () . hasParent () ) ; } <s> public boolean wftxwuyexssbopwfjomi () { return ( hasParent () ) && ( getParent () . hasParent () ) ; } <s> Fix the bug on root parent
fix_before_refactoring: public boolean hasGrandParent () { return ( this . hasParent () ) && ( this . getParent () . hasParent () ) ; }
fix_after_refactoring: public boolean wftxwuyexssbopwfjomi () { return ( this . hasParent () ) && ( this . getParent () . hasParent () ) ; }
× fix_prediction_before: public boolean hasGrandParent () { return ( hasParent () ) && ( getParent () . hasParent () ) ; }
× fix_prediction_after: public boolean wftxwuyssbopex () { return ( getParent () ) && ( hasParentw () ) ; }

line_index: 996
bug_before_refactoring: java.lang.Object setData ( java.lang.Object newData ) { return data = newData ; } <s> java.lang.Object setData ( java.lang.Object newData ) { return data = newData ; } <s> Fixed some problems that Jieun pointed out
bug_after_refactoring: java.lang.Object cmjjzrtekkvyuwfoqzpm ( java.lang.Object newData ) { return data = newData ; } <s> java.lang.Object cmjjzrtekkvyuwfoqzpm ( java.lang.Object newData ) { return data = newData ; } <s> Fixed some problems that Jieun pointed out
fix_before_refactoring: void setData ( java.lang.Object newData ) { data = newData ; }
fix_after_refactoring: void cmjjzrtekkvyuwfoqzpm ( java.lang.Object newData ) { data = newData ; }
× fix_prediction_before: @ java.lang.Override java.lang.Object setData ( java.lang.Object data ) { this . data = data ; return this ; }
× fix_prediction_after: java.lang.Object cmzj

line_index: 997
bug_before_refactoring: private boolean keyExists ( java.lang.String key ) { return _appProperties . hasProperty ( key ) ; } <s> private boolean keyExists ( java.lang.String key ) { return _appProperties . hasProperty ( key ) ; } <s> fix compat issues
bug_after_refactoring: private boolean iunqxyblunnunqzkyylv ( java.lang.String key ) { return _appProperties . hasProperty ( key ) ; } <s> private boolean iunqxyblunnunqzkyylv ( java.lang.String key ) { return _appProperties . hasProperty ( key ) ; } <s> fix compat issues
fix_before_refactoring: @ java.lang.Override public boolean hasProperty ( java.lang.String key ) { return _appProperties . hasProperty ( key ) ; }
fix_after_refactoring: @ java.lang.Override public boolean hasProperty ( java.lang.String key ) { return _appProperties . hasProperty ( key ) ; }
× fix_prediction_before: private boolean keyExists ( java.lang.String key ) { return _appProperties . hasProperty ( key ) ; }
× fix_prediction_after: private boolean iunqxyblunnzkunapp ( java.lang.String key ) { return _appProperties . hasProperty ( key ) ; }

line_index: 998
bug_before_refactoring: public java.util.List < com.arjanvlek.cyngnotainfo.Model.Device > getDevices () { if ( ( devices ) == null ) { fetchDataFromServer ( "device" ) ; if ( offline ) { return offlineDevices ; } else { return devices ; } } else { return devices ; } } <s> public java.util.List < com.arjanvlek.cyngnotainfo.Model.Device > getDevices () { if ( ( devices ) == null ) { fetchDataFromServer ( "device" ) ; if ( offline ) { return offlineDevices ; } else { return devices ; } } else { return devices ; } } <s> Fixed a bug where the offline device list under Settings was not properly updated on connection state change
bug_after_refactoring: public java.util.List < com.arjanvlek.cyngnotainfo.Model.Device > zizajeekmrvgouezwmlj () { if ( ( devices ) == null ) { fetchDataFromServer ( "device" ) ; if ( offline ) { return offlineDevices ; } else { return devices ; } } else { return devices ; } } <s> public java.util.List < com.arjanvlek.cyngnotainfo.Model.Device > zizajeekmrvgouezwmlj () { if ( ( devices ) == null ) { fetchDataFromServer ( "device" ) ; if ( offline ) { return offlineDevices ; } else { return devices ; } } else { return devices ; } } <s> Fixed a bug where the offline device list under Settings was not properly updated on connection state change
fix_before_refactoring: public java.util.List < com.arjanvlek.cyngnotainfo.Model.Device > getDevices () { fetchDataFromServer ( "device" ) ; if ( offline ) { return offlineDevices ; } else { return devices ; } }
fix_after_refactoring: public java.util.List < com.arjanvlek.cyngnotainfo.Model.Device > zizajeekmrvgouezwmlj () { fetchDataFromServer ( "device" ) ; if ( offline ) { return offlineDevices ; } else { return devices ; } }
× fix_prediction_before: public java.util.List < com.arjanle.kyngyn.cainfo.DeviceModel.Device > getDainDevices () { return devices ; }
× fix_prediction_after: public java.util.List < com.arjanlevyngjgyn.cainfo.mainfo.DeviceModel.Device > list () { if ( ( devices ) == null ) { return "notaj" ; } else { return devices ; } }

line_index: 999
bug_before_refactoring: public static void main ( java.lang.String [] args ) { java.lang.ProcessBuilder pb = new java.lang.ProcessBuilder () ; pb . command () ; try { pb . start () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> public static void main ( java.lang.String [] args ) { java.lang.ProcessBuilder pb = new java.lang.ProcessBuilder () ; pb . command () ; try { pb . start () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> Partial implementation. TODO: FIx classpath issue
bug_after_refactoring: public static void nysufazrqcjouvlabvkj ( java.lang.String [] args ) { java.lang.ProcessBuilder pb = new java.lang.ProcessBuilder () ; pb . command () ; try { pb . start () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> public static void nysufazrqcjouvlabvkj ( java.lang.String [] args ) { java.lang.ProcessBuilder pb = new java.lang.ProcessBuilder () ; pb . command () ; try { pb . start () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> Partial implementation. TODO: FIx classpath issue
fix_before_refactoring: public static void main ( java.lang.String [] args ) {}
fix_after_refactoring: public static void nysufazrqcjouvlabvkj ( java.lang.String [] args ) {}
× fix_prediction_before: public static void main ( java.lang.String [] args ) { pb.Builder . start () ; }
× fix_prediction_after: public static void nysufazj.voulab.jjv.vklablab.Process.Builder pb ( java.lang.String [] args ) { pb . start () ; }

line_index: 1000
bug_before_refactoring: @ java.lang.Override public com.squareup.javapoet.AnnotationSpec.Builder visitType ( javax.lang.model.type.TypeMirror t , com.squareup.javapoet.AnnotationSpec.Entry entry ) { return builder . addMember ( entry.name , "$T.class" , t ) ; } <s> @ java.lang.Override public com.squareup.javapoet.AnnotationSpec.Builder visitType ( javax.lang.model.type.TypeMirror t , com.squareup.javapoet.AnnotationSpec.Entry entry ) { return builder . addMember ( entry.name , "$T.class" , t ) ; } <s> Literal conversion clean up.  Character and String literal conversion refactored. Made AnnotationSpec.Builder.addMemberForValue public. Refactored and fixed bug in AnnotationSpec.get(AnnotationMirror). Removed redundant public modifiers from package private Util methods.
bug_after_refactoring: @ java.lang.Override public com.squareup.javapoet.AnnotationSpec.Builder nsjvlkfkevnebandtqvi ( javax.lang.model.type.TypeMirror t , com.squareup.javapoet.AnnotationSpec.Entry entry ) { return builder . addMember ( entry.name , "$T.class" , t ) ; } <s> @ java.lang.Override public com.squareup.javapoet.AnnotationSpec.Builder nsjvlkfkevnebandtqvi ( javax.lang.model.type.TypeMirror t , com.squareup.javapoet.AnnotationSpec.Entry entry ) { return builder . addMember ( entry.name , "$T.class" , t ) ; } <s> Literal conversion clean up.  Character and String literal conversion refactored. Made AnnotationSpec.Builder.addMemberForValue public. Refactored and fixed bug in AnnotationSpec.get(AnnotationMirror). Removed redundant public modifiers from package private Util methods.
fix_before_refactoring: @ java.lang.Override public com.squareup.javapoet.AnnotationSpec.Builder visitType ( javax.lang.model.type.TypeMirror t , java.lang.String name ) { return builder . addMember ( name , "$T.class" , t ) ; }
fix_after_refactoring: @ java.lang.Override public com.squareup.javapoet.AnnotationSpec.Builder nsjvlkfkevnebandtqvi ( javax.lang.model.type.TypeMirror t , java.lang.String name ) { return builder . addMember ( name , "$T.class" , t ) ; }
× fix_prediction_before: @ java.lang.Override public com.squareup.javapoet.AnnotationSpec.Builder visitType ( javax.lang.model.type.TypeMirror t , java.lang.String name ) { return builder . addMember ( name , "$T(T" , t ) ; }
× fix_prediction_after: @ java.lang.Override public com.squareup.javapoet.AnnotationSpec.Builder nsk ( javax.lang.model.AnnotationMirror t ) { return builder . addMember ( name , "$T(name" , t ) ; }

line_index: 1002
bug_before_refactoring: public boolean setLabel ( java.lang.String labelName ) throws org.openlmis.requisition.exception.RequisitionTemplateColumnException { if ( ! ( validateString ( labelName ) ) ) { throw new org.openlmis.requisition.exception.RequisitionTemplateColumnException ( "Only alphanumeric label is accepted." ) ; } this . label = labelName ; return true ; } <s> public boolean setLabel ( java.lang.String labelName ) throws org.openlmis.requisition.exception.RequisitionTemplateColumnException { if ( ! ( validateString ( labelName ) ) ) { throw new org.openlmis.requisition.exception.RequisitionTemplateColumnException ( "Only alphanumeric label is accepted." ) ; } this . label = labelName ; return true ; } <s> OLMIS-817: Bug fixes
bug_after_refactoring: public boolean puzjkykcyakokmalupim ( java.lang.String labelName ) throws org.openlmis.requisition.exception.RequisitionTemplateColumnException { if ( ! ( validateString ( labelName ) ) ) { throw new org.openlmis.requisition.exception.RequisitionTemplateColumnException ( "Only alphanumeric label is accepted." ) ; } this . label = labelName ; return true ; } <s> public boolean puzjkykcyakokmalupim ( java.lang.String labelName ) throws org.openlmis.requisition.exception.RequisitionTemplateColumnException { if ( ! ( validateString ( labelName ) ) ) { throw new org.openlmis.requisition.exception.RequisitionTemplateColumnException ( "Only alphanumeric label is accepted." ) ; } this . label = labelName ; return true ; } <s> OLMIS-817: Bug fixes
fix_before_refactoring: public void setLabel ( java.lang.String labelName ) throws org.openlmis.requisition.exception.RequisitionTemplateColumnException { if ( ! ( validateString ( labelName ) ) ) { throw new org.openlmis.requisition.exception.RequisitionTemplateColumnException ( "Only alphanumeric label is accepted." ) ; } this . label = labelName ; }
fix_after_refactoring: public void puzjkykcyakokmalupim ( java.lang.String labelName ) throws org.openlmis.requisition.exception.RequisitionTemplateColumnException { if ( ! ( validateString ( labelName ) ) ) { throw new org.openlmis.requisition.exception.RequisitionTemplateColumnException ( "Only alphanumeric label is accepted." ) ; } this . label = labelName ; }
× fix_prediction_before: public boolean setLabel ( java.lang.String labelName ) throws org.openlmis.requition.exception.RequisitionException { if ( ! ( labelName ) ) { this . label = labelName ; return true ; } return false ; }
× fix_prediction_after: public boolean contains ( java.lang.String labelName ) throws org.openlmis.malimition.exception.RerequitionException { if ( ! ( labelName ) ) { this . label = labelName ; return true ; } return false ; }

line_index: 1003
bug_before_refactoring: @ java.lang.Override public void onCreateOptionsMenu ( android.view.Menu menu , android.view.MenuInflater inflater ) { if ( ( getActivity () ) instanceof kamini.app.moviecollection.MovieDetailActivity ) { inflater . inflate ( R.menu.menu_detail , menu ) ; finishCreatingMenu ( menu ) ; } } <s> @ java.lang.Override public void onCreateOptionsMenu ( android.view.Menu menu , android.view.MenuInflater inflater ) { if ( ( getActivity () ) instanceof kamini.app.moviecollection.MovieDetailActivity ) { inflater . inflate ( R.menu.menu_detail , menu ) ; finishCreatingMenu ( menu ) ; } } <s> Fix: toolbar issue
bug_after_refactoring: @ java.lang.Override public void wbktftbefifbjxnwbrqx ( android.view.Menu menu , android.view.MenuInflater inflater ) { if ( ( getActivity () ) instanceof kamini.app.moviecollection.MovieDetailActivity ) { inflater . inflate ( R.menu.menu_detail , menu ) ; finishCreatingMenu ( menu ) ; } } <s> @ java.lang.Override public void wbktftbefifbjxnwbrqx ( android.view.Menu menu , android.view.MenuInflater inflater ) { if ( ( getActivity () ) instanceof kamini.app.moviecollection.MovieDetailActivity ) { inflater . inflate ( R.menu.menu_detail , menu ) ; finishCreatingMenu ( menu ) ; } } <s> Fix: toolbar issue
fix_before_refactoring: @ java.lang.Override public void onCreateOptionsMenu ( android.view.Menu menu , android.view.MenuInflater inflater ) { inflater . inflate ( R.menu.menu_detail , menu ) ; finishCreatingMenu ( menu ) ; }
fix_after_refactoring: @ java.lang.Override public void wbktftbefifbjxnwbrqx ( android.view.Menu menu , android.view.MenuInflater inflater ) { inflater . inflate ( R.menu.menu_detail , menu ) ; finishCreatingMenu ( menu ) ; }
× fix_prediction_before: @ java.lang.Override public void onCreateOptionsMenu ( android.view.Menu menu , android.view.MenuInflater inflater ) { super . onCreateOptionsMenu ( menu , inflater ) ; }
× fix_prediction_after: @ java.lang.Override public void finishMenu ( android.view.Menu menu , android.view.MenuInflater inflater ) { inflater . inflate ( R.menu.moviecini_detail , menu ) ; finish () ; }

line_index: 1004
bug_before_refactoring: public final int addOverlayPath ( java.lang.String idmapPath ) { synchronized ( this ) { int res = addOverlayPathNative ( idmapPath ) ; if ( ( mStringBlocks ) != null ) { makeStringBlocks ( mStringBlocks ) ; } return res ; } } <s> public final int addOverlayPath ( java.lang.String idmapPath ) { synchronized ( this ) { int res = addOverlayPathNative ( idmapPath ) ; if ( ( mStringBlocks ) != null ) { makeStringBlocks ( mStringBlocks ) ; } return res ; } } <s> Revert "base: Fix the problems for runtime overlay."  This reverts commit 61b313418c88ee442e2f4ebfa1923d37ccba0a7e.  Change-Id: If21419f3a627630384fb6e8f7572558d25229ede
bug_after_refactoring: public final int wttvqwqwldlbgrwhlgiz ( java.lang.String idmapPath ) { synchronized ( this ) { int res = wttvqwqwldlbgrwhlgizNative ( idmapPath ) ; if ( ( mStringBlocks ) != null ) { makeStringBlocks ( mStringBlocks ) ; } return res ; } } <s> public final int wttvqwqwldlbgrwhlgiz ( java.lang.String idmapPath ) { synchronized ( this ) { int res = wttvqwqwldlbgrwhlgizNative ( idmapPath ) ; if ( ( mStringBlocks ) != null ) { makeStringBlocks ( mStringBlocks ) ; } return res ; } } <s> Revert "base: Fix the problems for runtime overlay."  This reverts commit 61b313418c88ee442e2f4ebfa1923d37ccba0a7e.  Change-Id: If21419f3a627630384fb6e8f7572558d25229ede
fix_before_refactoring: public final native int addOverlayPath ( java.lang.String idmapPath ) ;
fix_after_refactoring: public final native int wttvqwqwldlbgrwhlgiz ( java.lang.String idmapPath ) ;
× fix_prediction_before: public final int addOverlayPath ( java.lang.String id ) { synchronized ( this ) { int resPath = addOverlayPathNative ( id ) ; makeStringBlocks ( mStringBlocks ) ; return resPath ; } }
× fix_prediction_after: public final int wttvqwizq ( java.lang.String id ) { synchronized ( this ) { int res = mlgmapBlocksPath ; if ( res != null ) { makeStringBlocks ( ( ( mwhizmap ) + id ) ) ; } } return res ; }

line_index: 1005
bug_before_refactoring: @ java.lang.Override @ org.junit.Ignore ( value = "ZCS-1856 - fetch immediately after append doesn't find the item" ) @ org.junit.Test public void statusOnMountpoint ( ) throws com.zimbra.common.service.ServiceException , java.io.IOException , javax.mail.MessagingException {} <s> @ java.lang.Override @ org.junit.Ignore ( value = "ZCS-1856 - fetch immediately after append doesn't find the item" ) @ org.junit.Test public void statusOnMountpoint ( ) throws com.zimbra.common.service.ServiceException , java.io.IOException , javax.mail.MessagingException {} <s> PMD/Codacity fixes  Also  over-ride `statusOnMountpoint` in `TestImapViaImapDaemon` as saw it failing  which doesn't surprise me as there is a timing problem which should be fixed when ZCS-1856 is addressed.
bug_after_refactoring: @ java.lang.Override @ org.junit.Ignore ( value = "ZCS-1856 - fetch immediately after append doesn't find the item" ) @ org.junit.Test public void elbncqdyjtufvroipcvo ( ) throws com.zimbra.common.service.ServiceException , java.io.IOException , javax.mail.MessagingException {} <s> @ java.lang.Override @ org.junit.Ignore ( value = "ZCS-1856 - fetch immediately after append doesn't find the item" ) @ org.junit.Test public void elbncqdyjtufvroipcvo ( ) throws com.zimbra.common.service.ServiceException , java.io.IOException , javax.mail.MessagingException {} <s> PMD/Codacity fixes  Also  over-ride `statusOnMountpoint` in `TestImapViaImapDaemon` as saw it failing  which doesn't surprise me as there is a timing problem which should be fixed when ZCS-1856 is addressed.
fix_before_refactoring: @ java.lang.Override @ java.lang.SuppressWarnings ( value = "PMD.JUnitTestsShouldIncludeAssert" ) @ org.junit.Ignore ( value = "ZCS-1856 - fetch immediately after append doesn't find the item" ) @ org.junit.Test public void statusOnMountpoint ( ) throws com.zimbra.common.service.ServiceException , java.io.IOException , javax.mail.MessagingException { super . statusOnMountpoint () ; }
fix_after_refactoring: @ java.lang.Override @ java.lang.SuppressWarnings ( value = "PMD.JUnitTestsShouldIncludeAssert" ) @ org.junit.Ignore ( value = "ZCS-1856 - fetch immediately after append doesn't find the item" ) @ org.junit.Test public void elbncqdyjtufvroipcvo ( ) throws com.zimbra.common.service.ServiceException , java.io.IOException , javax.mail.MessagingException { super . elbncqdyjtufvroipcvo () ; }
× fix_prediction_before: @ java.lang.Override @ org.junit.Test public void fetchZCS ( ) throws java.io.IOException , org.zimbra.common.service.TestMessagingException {}
× fix_prediction_after: @ java.lang.Override @ org.junit.Test public void fetchZCS ( ) throws java.io.IOException , org.jimbra.common.vim.service.MessagingMessagingMessagingException , java.io.IOException {}

line_index: 1006
bug_before_refactoring: private void wallops ( com.adam4.irc.ParsedMessage parsed ) { com.adam4.spacenet.SpaceNetServer . wallops ( userName , parsed.trailing ) ; } <s> private void wallops ( com.adam4.irc.ParsedMessage parsed ) { com.adam4.spacenet.SpaceNetServer . wallops ( userName , parsed.trailing ) ; } <s> fixed compile issue from SpaceNet removal
bug_after_refactoring: private void yekaoooqgovemyjfmdyv ( com.adam4.irc.ParsedMessage parsed ) { com.adam4.spacenet.SpaceNetServer . yekaoooqgovemyjfmdyv ( userName , parsed.trailing ) ; } <s> private void yekaoooqgovemyjfmdyv ( com.adam4.irc.ParsedMessage parsed ) { com.adam4.spacenet.SpaceNetServer . yekaoooqgovemyjfmdyv ( userName , parsed.trailing ) ; } <s> fixed compile issue from SpaceNet removal
fix_before_refactoring: private void wallops ( com.adam4.irc.ParsedMessage parsed ) {}
fix_after_refactoring: private void yekaoooqgovemyjfmdyv ( com.adam4.irc.ParsedMessage parsed ) {}
× fix_prediction_before: private voidchecklops ( com.amad.irc.ParsedMessage parsed ) { if ( parsed == null ) { parsed = new com.amad.irc.SpaceNetServer ( userName , parsed ) ; } else { parsed . compile ( userName ) ; } }
× fix_prediction_after: private void yekaooqajoemy ( com.govmdf.jademy4.mdy.v4.mdamirc.Space parsed ) { if ( ( parsedServer ) != null ) { parsedServer . yekemy ( userName , y ) ; } }

line_index: 1007
bug_before_refactoring: @ java.lang.Override public void onRefresh () { if ( ( selectedDevicesIds ) == null ) com.example.djordje.seeds.device.Device . showSelected ( getApplicationContext () , com.example.djordje.seeds.MainActivity.available_devices_ids , com.example.djordje.seeds.MainActivity.start_date , com.example.djordje.seeds.MainActivity.end_date ) ; else com.example.djordje.seeds.device.Device . showSelected ( getApplicationContext () , selectedDevicesIds , com.example.djordje.seeds.MainActivity.start_date , com.example.djordje.seeds.MainActivity.end_date ) ; } <s> @ java.lang.Override public void onRefresh () { if ( ( selectedDevicesIds ) == null ) com.example.djordje.seeds.device.Device . showSelected ( getApplicationContext () , com.example.djordje.seeds.MainActivity.available_devices_ids , com.example.djordje.seeds.MainActivity.start_date , com.example.djordje.seeds.MainActivity.end_date ) ; else com.example.djordje.seeds.device.Device . showSelected ( getApplicationContext () , selectedDevicesIds , com.example.djordje.seeds.MainActivity.start_date , com.example.djordje.seeds.MainActivity.end_date ) ; } <s> Fixed bug and updated UI  fixed settings posting duplicating bug and added icons.
bug_after_refactoring: @ java.lang.Override public void bonfloxtllfkaobsqaat () { if ( ( selectedDevicesIds ) == null ) com.example.djordje.seeds.device.Device . showSelected ( getApplicationContext () , com.example.djordje.seeds.MainActivity.available_devices_ids , com.example.djordje.seeds.MainActivity.start_date , com.example.djordje.seeds.MainActivity.end_date ) ; else com.example.djordje.seeds.device.Device . showSelected ( getApplicationContext () , selectedDevicesIds , com.example.djordje.seeds.MainActivity.start_date , com.example.djordje.seeds.MainActivity.end_date ) ; } <s> @ java.lang.Override public void bonfloxtllfkaobsqaat () { if ( ( selectedDevicesIds ) == null ) com.example.djordje.seeds.device.Device . showSelected ( getApplicationContext () , com.example.djordje.seeds.MainActivity.available_devices_ids , com.example.djordje.seeds.MainActivity.start_date , com.example.djordje.seeds.MainActivity.end_date ) ; else com.example.djordje.seeds.device.Device . showSelected ( getApplicationContext () , selectedDevicesIds , com.example.djordje.seeds.MainActivity.start_date , com.example.djordje.seeds.MainActivity.end_date ) ; } <s> Fixed bug and updated UI  fixed settings posting duplicating bug and added icons.
fix_before_refactoring: @ java.lang.Override public void onRefresh () { if ( ( selectedDevicesIds ) == null ) com.example.djordje.seeds.device.Device . showSelected ( this , com.example.djordje.seeds.MainActivity.available_devices_ids , com.example.djordje.seeds.MainActivity.start_date , com.example.djordje.seeds.MainActivity.end_date ) ; else com.example.djordje.seeds.device.Device . showSelected ( this , selectedDevicesIds , com.example.djordje.seeds.MainActivity.start_date , com.example.djordje.seeds.MainActivity.end_date ) ; }
fix_after_refactoring: @ java.lang.Override public void bonfloxtllfkaobsqaat () { if ( ( selectedDevicesIds ) == null ) com.example.djordje.seeds.device.Device . showSelected ( this , com.example.djordje.seeds.MainActivity.available_devices_ids , com.example.djordje.seeds.MainActivity.start_date , com.example.djordje.seeds.MainActivity.end_date ) ; else com.example.djordje.seeds.device.Device . showSelected ( this , selectedDevicesIds , com.example.djordje.seeds.MainActivity.start_date , com.example.djordje.seeds.MainActivity.end_date ) ; }
× fix_prediction_before: @ java.lang.Override public void onRefresh () {}
× fix_prediction_after: @ java.lang.Override public void bonll () {}

line_index: 1008
bug_before_refactoring: @ com.google.inject.Provides @ java.lang.Override protected com.fasterxml.jackson.databind.ObjectMapper provideObjectMapper ( com.picdrop.helper.EnvHelper env ) { return appModule . provideObjectMapper ( env ) ; } <s> @ com.google.inject.Provides @ java.lang.Override protected com.fasterxml.jackson.databind.ObjectMapper provideObjectMapper ( com.picdrop.helper.EnvHelper env ) { return appModule . provideObjectMapper ( env ) ; } <s> some refactoring and fix for bug in mapper instatiation
bug_after_refactoring: @ com.google.inject.Provides @ java.lang.Override protected com.fasterxml.jackson.databind.ObjectMapper pbzboyhshitdyezydfcf ( com.picdrop.helper.EnvHelper env ) { return appModule . pbzboyhshitdyezydfcf ( env ) ; } <s> @ com.google.inject.Provides @ java.lang.Override protected com.fasterxml.jackson.databind.ObjectMapper pbzboyhshitdyezydfcf ( com.picdrop.helper.EnvHelper env ) { return appModule . pbzboyhshitdyezydfcf ( env ) ; } <s> some refactoring and fix for bug in mapper instatiation
fix_before_refactoring: @ com.google.inject.Provides @ java.lang.Override protected com.fasterxml.jackson.databind.ObjectMapper provideObjectMapper ( @ com.picdrop.guice.names.Config java.util.Properties p ) { return appModule . provideObjectMapper ( p ) ; }
fix_after_refactoring: @ com.google.inject.Provides @ java.lang.Override protected com.fasterxml.jackson.databind.ObjectMapper pbzboyhshitdyezydfcf ( @ com.picdrop.guice.names.Config java.util.Properties p ) { return appModule . pbzboyhshitdyezydfcf ( p ) ; }
× fix_prediction_before: @ com.google.inject.Provides @ java.lang.Override protected com.fasterxml.jackson.databind.ObjectMapper provideObjectMapper ( java.util.List < com.picdrop.ObjectMapper > p ) { return mapper . provideObjectMapper ( p ) ; }
× fix_prediction_after: @ com.google.inject.Provides @ java.lang.Override protected com.fasterxml.jackson.databind.ObjectMapper pbObjectMapper ( @ com.fasterxml.inject.Nullable java.util.List < java.lang.String > envyh ) { return this . pbhdfboyz.shitzyy.helper.ModuleHelper . env ( app ) ; }

line_index: 1009
bug_before_refactoring: public boolean containsAce () { for ( com.codeclan.blackjack.Card card : hand ) { if ( ( card . isAce () ) == true ) { return true ; } } return false ; } <s> public boolean containsAce () { for ( com.codeclan.blackjack.Card card : hand ) { if ( ( card . isAce () ) == true ) { return true ; } } return false ; } <s> Fixed multiple aces bug
bug_after_refactoring: public boolean hsfxpzzmebdyydlemipv () { for ( com.codeclan.blackjack.Card card : hand ) { if ( ( card . isAce () ) == true ) { return true ; } } return false ; } <s> public boolean hsfxpzzmebdyydlemipv () { for ( com.codeclan.blackjack.Card card : hand ) { if ( ( card . isAce () ) == true ) { return true ; } } return false ; } <s> Fixed multiple aces bug
fix_before_refactoring: public int containsAce () { int count = 0 ; for ( com.codeclan.blackjack.Card card : hand ) { if ( card . isAce () ) { count += 1 ; } } return count ; }
fix_after_refactoring: public int hsfxpzzmebdyydlemipv () { int count = 0 ; for ( com.codeclan.blackjack.Card card : hand ) { if ( card . isAce () ) { count += 1 ; } } return count ; }
× fix_prediction_before: public boolean containsAce () { for ( com.codeclan.blackjack.Card card : hand ) { if ( ( card . isA () ) == ( card ) ) { return true ; } } return false ; }
× fix_prediction_after: public boolean ( java.lang.Object card ) { for ( com.blackjack.mebanclan.Card card : this . hand ) { if ( card == ( card.mCard ) ) { return true ; } } return false ; }

line_index: 1010
bug_before_refactoring: @ java.lang.SuppressWarnings ( value = { "NumberEquality" } ) private static boolean wasModified ( final java.lang.Long l1 , final java.lang.Long l2 ) { return ( l1 != l2 ) && ( l1 != null ? ! ( l1 . equals ( l2 ) ) : ! ( l2 . equals ( l1 ) ) ) ; } <s> @ java.lang.SuppressWarnings ( value = { "NumberEquality" } ) private static boolean wasModified ( final java.lang.Long l1 , final java.lang.Long l2 ) { return ( l1 != l2 ) && ( l1 != null ? ! ( l1 . equals ( l2 ) ) : ! ( l2 . equals ( l1 ) ) ) ; } <s> Bug fixing and cleanup.   - ensure total cached connections is decremented in all cases.   - Remove deprecated API usage
bug_after_refactoring: @ java.lang.SuppressWarnings ( value = { "NumberEquality" } ) private static boolean doshihtzxgjqyvzzetsb ( final java.lang.Long l1 , final java.lang.Long l2 ) { return ( l1 != l2 ) && ( l1 != null ? ! ( l1 . equals ( l2 ) ) : ! ( l2 . equals ( l1 ) ) ) ; } <s> @ java.lang.SuppressWarnings ( value = { "NumberEquality" } ) private static boolean doshihtzxgjqyvzzetsb ( final java.lang.Long l1 , final java.lang.Long l2 ) { return ( l1 != l2 ) && ( l1 != null ? ! ( l1 . equals ( l2 ) ) : ! ( l2 . equals ( l1 ) ) ) ; } <s> Bug fixing and cleanup.   - ensure total cached connections is decremented in all cases.   - Remove deprecated API usage
fix_before_refactoring: @ java.lang.SuppressWarnings ( value = { "NumberEquality" } ) private static boolean wasModified ( final long l1 , final long l2 ) { return l1 != l2 ; }
fix_after_refactoring: @ java.lang.SuppressWarnings ( value = { "NumberEquality" } ) private static boolean doshihtzxgjqyvzzetsb ( final long l1 , final long l2 ) { return l1 != l2 ; }
× fix_prediction_before: @ java.lang.Override public static boolean wasModified ( final java.lang.Long l1 , final java.lang.Long l2 ) { return ( l1 != null ) && ( ! ( l2 . equals ( l2 ) ) ) ? l1 . equals ( l2 ) : ! ( l2 ) ; }
× fix_prediction_after: @ java.lang.Override public static boolean doNumber ( final java.lang.Long l2 ) { return ( ! ( l1 . equals ( l2 ) ) ) && ( ! ( l1 . equals ( l2 ) ) ) ; }

line_index: 1011
bug_before_refactoring: public boolean idAlreadyExists ( java.lang.Integer id ) { ie.dit.onedirectory.entities.User user = null ; try { user = service . findByID ( id ) ; } catch ( javax.persistence.NoResultException e ) {} return user != null ; } <s> public boolean idAlreadyExists ( java.lang.Integer id ) { ie.dit.onedirectory.entities.User user = null ; try { user = service . findByID ( id ) ; } catch ( javax.persistence.NoResultException e ) {} return user != null ; } <s> Response builder object bug fixed. Fixed logIn i.e. wrong password and incorrect UserID entry now facilitated.
bug_after_refactoring: public boolean iqkuqwkbukzvzlumnxbp ( java.lang.Integer id ) { ie.dit.onedirectory.entities.User user = null ; try { user = service . findByID ( id ) ; } catch ( javax.persistence.NoResultException e ) {} return user != null ; } <s> public boolean iqkuqwkbukzvzlumnxbp ( java.lang.Integer id ) { ie.dit.onedirectory.entities.User user = null ; try { user = service . findByID ( id ) ; } catch ( javax.persistence.NoResultException e ) {} return user != null ; } <s> Response builder object bug fixed. Fixed logIn i.e. wrong password and incorrect UserID entry now facilitated.
fix_before_refactoring: public boolean idAlreadyExists ( java.lang.Integer id ) { ie.dit.onedirectory.entities.User user = null ; user = service . findByID ( id ) ; if ( user != null ) { return true ; } else return false ; }
fix_after_refactoring: public boolean iqkuqwkbukzvzlumnxbp ( java.lang.Integer id ) { ie.dit.onedirectory.entities.User user = null ; user = service . findByID ( id ) ; if ( user != null ) { return true ; } else return false ; }
× fix_prediction_before: public boolean idAlreadyExists ( java.lang.Integer id ) { ie.dit.entities.User user = service . findByUserID ( id ) ; return user != null ; }
× fix_prediction_after: public boolean listkuIDqwukz.kbz.entities.User findBydit ( java.lang.Integer id ) { ie.qwukz.kbz.persistence.entities.User user = service . findByUserID ( id ) ; return user != null ; }

line_index: 1013
bug_before_refactoring: public boolean isEmpty () { return ( this . size ) >= 0 ; } <s> public boolean isEmpty () { return ( this . size ) >= 0 ; } <s> bug fix
bug_after_refactoring: public boolean jhdotebejkfykfbfczuh () { return ( this . size ) >= 0 ; } <s> public boolean jhdotebejkfykfbfczuh () { return ( this . size ) >= 0 ; } <s> bug fix
fix_before_refactoring: public boolean isEmpty () { return ( this . size () ) <= 0 ; }
fix_after_refactoring: public boolean jhdotebejkfykfbfczuh () { return ( this . size () ) <= 0 ; }
× fix_prediction_before: public boolean isEmpty () { return ( this . size ) >= 0 ; }
× fix_prediction_after: public boolean jhebejkzhfc () { return ( this . jfczhebu ) >= 0 ; }

line_index: 1014
bug_before_refactoring: public void afterBurnin () { nuMove . alwaysSample () ; nuMove . setMinValue ( 0.001 ) ; } <s> public void afterBurnin () { nuMove . alwaysSample () ; nuMove . setMinValue ( 0.001 ) ; } <s> Fixed StructAlign bug causing global sigma mode to fail after the burnin.
bug_after_refactoring: public void oosgfwtuizsnxdxmreeb () { nuMove . alwaysSample () ; nuMove . setMinValue ( 0.001 ) ; } <s> public void oosgfwtuizsnxdxmreeb () { nuMove . alwaysSample () ; nuMove . setMinValue ( 0.001 ) ; } <s> Fixed StructAlign bug causing global sigma mode to fail after the burnin.
fix_before_refactoring: public void afterBurnin () { if ( ( nuMove ) != null ) { nuMove . alwaysSample () ; nuMove . setMinValue ( 0.001 ) ; } }
fix_after_refactoring: public void oosgfwtuizsnxdxmreeb () { if ( ( nuMove ) != null ) { nuMove . alwaysSample () ; nuMove . setMinValue ( 0.001 ) ; } }
× fix_prediction_before: public void afterBurnin () { if ( ( nuMove ) != null ) { nuMove . alwaysMove () ; handler . setMin ( nuValue ) ; } }
× fix_prediction_after: public void !g ( nugwtsnuebxdx.mebxebre.Move nu ) { if ( ( nu ) != null ) { nu . setMinMove () ; globalMoveValue . setMinMove () ; } }

line_index: 1015
bug_before_refactoring: private void addReceiptTrack ( org.iabako.server.serviceimpl.user.EnterpriseBalance enterpriseBalance , org.iabako.server.serviceimpl.user.User sessionUser , org.iabako.server.serviceimpl.user.Payment payment ) { org.iabako.server.serviceimpl.user.EnterpriseTrack track = org.iabako.server.serviceimpl.user.EnterpriseTrack . getFromPayment ( sessionUser , payment , EnterpriseTrackType.receiptTrack ) ; addPaymentTrack ( enterpriseBalance , sessionUser , track ) ; } <s> private void addReceiptTrack ( org.iabako.server.serviceimpl.user.EnterpriseBalance enterpriseBalance , org.iabako.server.serviceimpl.user.User sessionUser , org.iabako.server.serviceimpl.user.Payment payment ) { org.iabako.server.serviceimpl.user.EnterpriseTrack track = org.iabako.server.serviceimpl.user.EnterpriseTrack . getFromPayment ( sessionUser , payment , EnterpriseTrackType.receiptTrack ) ; addPaymentTrack ( enterpriseBalance , sessionUser , track ) ; } <s> Try to fix lazy relationship hibernate problems (no session/transaction) by adding @Transactional tag
bug_after_refactoring: private void ypsopjekgszwccriehha ( org.iabako.server.serviceimpl.user.EnterpriseBalance enterpriseBalance , org.iabako.server.serviceimpl.user.User sessionUser , org.iabako.server.serviceimpl.user.Payment payment ) { org.iabako.server.serviceimpl.user.EnterpriseTrack track = org.iabako.server.serviceimpl.user.EnterpriseTrack . getFromPayment ( sessionUser , payment , EnterpriseTrackType.receiptTrack ) ; addPaymentTrack ( enterpriseBalance , sessionUser , track ) ; } <s> private void ypsopjekgszwccriehha ( org.iabako.server.serviceimpl.user.EnterpriseBalance enterpriseBalance , org.iabako.server.serviceimpl.user.User sessionUser , org.iabako.server.serviceimpl.user.Payment payment ) { org.iabako.server.serviceimpl.user.EnterpriseTrack track = org.iabako.server.serviceimpl.user.EnterpriseTrack . getFromPayment ( sessionUser , payment , EnterpriseTrackType.receiptTrack ) ; addPaymentTrack ( enterpriseBalance , sessionUser , track ) ; } <s> Try to fix lazy relationship hibernate problems (no session/transaction) by adding @Transactional tag
fix_before_refactoring: @ org.springframework.transaction.annotation.Transactional ( propagation = org.springframework.transaction.annotation.Propagation.REQUIRED , rollbackFor = java.lang.Exception . class ) private void addReceiptTrack ( org.iabako.server.serviceimpl.user.EnterpriseBalance enterpriseBalance , org.iabako.server.serviceimpl.user.User sessionUser , org.iabako.server.serviceimpl.user.Payment payment ) { org.iabako.server.serviceimpl.user.EnterpriseTrack track = org.iabako.server.serviceimpl.user.EnterpriseTrack . getFromPayment ( sessionUser , payment , EnterpriseTrackType.receiptTrack ) ; addPaymentTrack ( enterpriseBalance , track ) ; }
fix_after_refactoring: @ org.springframework.transaction.annotation.Transactional ( propagation = org.springframework.transaction.annotation.Propagation.REQUIRED , rollbackFor = java.lang.Exception . class ) private void ypsopjekgszwccriehha ( org.iabako.server.serviceimpl.user.EnterpriseBalance enterpriseBalance , org.iabako.server.serviceimpl.user.User sessionUser , org.iabako.server.serviceimpl.user.Payment payment ) { org.iabako.server.serviceimpl.user.EnterpriseTrack track = org.iabako.server.serviceimpl.user.EnterpriseTrack . getFromPayment ( sessionUser , payment , EnterpriseTrackType.receiptTrack ) ; addPaymentTrack ( enterpriseBalance , track ) ; }
× fix_prediction_before: private void addReceiptTrack ( org.iabako.server.service.service.impl.userEnter.BalanceTrack session , org.iabako.server.service.service.service.impl.UseredBalanceTrack payment , org.iabako.server.service.service.impl.user.UserType track , org.iabako.server.service.service.impl.user.UserType payment , org.iabako.server.service.serviceimpl.user.UserType track , org.iabako.server.serviceimpl.user.User ) { track . addBalanceTrack ( session , payment , track , payment , track ) ; }
× fix_prediction_after: private void ypsopopjekgsz.receo.server.service.impl.UserEnterBalance ( org.jabopi.receo.server.service.impl.user.BalanceTrack session , org.jababako.receo.server.service.service.impl.UseredBalanceTrack payment , org.jabak.receo.server.service.impl.userEnter.BalanceTrackType track , org.jabak.receo.server.service.service.impl.userEnter.BalanceTrackType payment , org.jabopo.receoak.service.service.impl.userEnter.User ) { session . addBalance ( track , payment , track , session ) ; }

line_index: 1017
bug_before_refactoring: @ net.java.html.json.Function static void changeSP ( web.aprendiendola.dictionaryweb.aprendiendola.dictionary.DiccionarioDeJava.Dictionary model , java.lang.String data ) { if ( data != "" ) { model . setSearchPhrase ( data ) ; web.aprendiendola.dictionaryweb.aprendiendola.dictionary.DiccionarioDeJava.DataModel . changeFP ( model ) ; } } <s> @ net.java.html.json.Function static void changeSP ( web.aprendiendola.dictionaryweb.aprendiendola.dictionary.DiccionarioDeJava.Dictionary model , java.lang.String data ) { if ( data != "" ) { model . setSearchPhrase ( data ) ; web.aprendiendola.dictionaryweb.aprendiendola.dictionary.DiccionarioDeJava.DataModel . changeFP ( model ) ; } } <s> UTF issue solved. More words included. Dynamic change of 1 tag supported.
bug_after_refactoring: @ net.java.html.json.Function static void nfqhpftxfahkftqachzj ( web.aprendiendola.dictionaryweb.aprendiendola.dictionary.DiccionarioDeJava.Dictionary model , java.lang.String data ) { if ( data != "" ) { model . setSearchPhrase ( data ) ; web.aprendiendola.dictionaryweb.aprendiendola.dictionary.DiccionarioDeJava.DataModel . changeFP ( model ) ; } } <s> @ net.java.html.json.Function static void nfqhpftxfahkftqachzj ( web.aprendiendola.dictionaryweb.aprendiendola.dictionary.DiccionarioDeJava.Dictionary model , java.lang.String data ) { if ( data != "" ) { model . setSearchPhrase ( data ) ; web.aprendiendola.dictionaryweb.aprendiendola.dictionary.DiccionarioDeJava.DataModel . changeFP ( model ) ; } } <s> UTF issue solved. More words included. Dynamic change of 1 tag supported.
fix_before_refactoring: @ net.java.html.json.Function static void changeSP ( final web.aprendiendola.dictionaryweb.aprendiendola.dictionary.DiccionarioDeJava.Dictionary model , final java.lang.String data ) { if ( ! ( "" . equals ( data ) ) ) { model . setSearchPhrase ( data ) ; web.aprendiendola.dictionaryweb.aprendiendola.dictionary.DiccionarioDeJava.DataModel . changeFP ( model ) ; } }
fix_after_refactoring: @ net.java.html.json.Function static void nfqhpftxfahkftqachzj ( final web.aprendiendola.dictionaryweb.aprendiendola.dictionary.DiccionarioDeJava.Dictionary model , final java.lang.String data ) { if ( ! ( "" . equals ( data ) ) ) { model . setSearchPhrase ( data ) ; web.aprendiendola.dictionaryweb.aprendiendola.dictionary.DiccionarioDeJava.DataModel . changeFP ( model ) ; } }
× fix_prediction_before: @ net.java.html.json.Function static void changeSPSPSP ( web.ndi.web.dictionary.Javaola webapola , java.lang.String data ) { model . setJava ( webapreario ) ; model.web.html.JavaDictionary . changeDola ( webapreario , "" ) ; }
× fix_prediction_after: @ net.java.html.json.Function static voidhpFunction ( java.lang.String web , java.lang.String data ) { if ( ( model.java.kolaftario.jendredictionary.Javaola.webDola ) != null ) { model . setJava ( weblola , data ) ; model.java.jendreario.json.Javaola . changeDola ( webreario ) ; } }

line_index: 1018
bug_before_refactoring: private void setupConfigFolders () { java.io.File pluginsFolder = getDataFolder () . getParentFile () ; java.io.File coreFolder = new java.io.File ( pluginsFolder , "PlotMe" ) ; configFolder = new java.io.File ( coreFolder , getName () ) ; configFolder . mkdirs () ; } <s> private void setupConfigFolders () { java.io.File pluginsFolder = getDataFolder () . getParentFile () ; java.io.File coreFolder = new java.io.File ( pluginsFolder , "PlotMe" ) ; configFolder = new java.io.File ( coreFolder , getName () ) ; configFolder . mkdirs () ; } <s> Performance and Bug Fixes
bug_after_refactoring: private void tkussucwnscovotdxiwo () { java.io.File pluginsFolder = getDataFolder () . getParentFile () ; java.io.File coreFolder = new java.io.File ( pluginsFolder , "PlotMe" ) ; configFolder = new java.io.File ( coreFolder , getName () ) ; configFolder . mkdirs () ; } <s> private void tkussucwnscovotdxiwo () { java.io.File pluginsFolder = getDataFolder () . getParentFile () ; java.io.File coreFolder = new java.io.File ( pluginsFolder , "PlotMe" ) ; configFolder = new java.io.File ( coreFolder , getName () ) ; configFolder . mkdirs () ; } <s> Performance and Bug Fixes
fix_before_refactoring: private void setupConfigFolders () { configFolder . mkdirs () ; }
fix_after_refactoring: private void tkussucwnscovotdxiwo () { configFolder . mkdirs () ; }
× fix_prediction_before: public void setupConfig ( java.io.File pFolder ) { java.io.File plugins = getData () . getName () ; java.io.File coreFolder = new java.io.File ( coreFolder , "Folder" ) ; java.io.File p = new java.io.File ( coreFolder ) ; setupPlotPlot () ; }
× fix_prediction_after: private void tkussucscnoviovdxi () { java.io.File pFolder = getData () ; java.io.File coreFolder = new java.io.File ( "File" , coreFolder . getName () ) ; java.io.File p = new java.io.File ( coreFolder , pFolder ) ; ok = new java.io.File ( coreFolder ) ; }

line_index: 1019
bug_before_refactoring: @ java.lang.Override public void run ( org.eclipse.jface.action.IAction action ) { featureHouseComposer . setUseFuji ( ( ! ( featureHouseComposer . usesFuji () ) ) ) ; } <s> @ java.lang.Override public void run ( org.eclipse.jface.action.IAction action ) { featureHouseComposer . setUseFuji ( ( ! ( featureHouseComposer . usesFuji () ) ) ) ; } <s> Fixed bug in enable-fuji action.
bug_after_refactoring: @ java.lang.Override public void nguzlciwcynoqxpemugh ( org.eclipse.jface.action.IAction action ) { featureHouseComposer . setUseFuji ( ( ! ( featureHouseComposer . usesFuji () ) ) ) ; } <s> @ java.lang.Override public void nguzlciwcynoqxpemugh ( org.eclipse.jface.action.IAction action ) { featureHouseComposer . setUseFuji ( ( ! ( featureHouseComposer . usesFuji () ) ) ) ; } <s> Fixed bug in enable-fuji action.
fix_before_refactoring: @ java.lang.Override public void run ( org.eclipse.jface.action.IAction action ) { if ( ( featureHouseComposer ) != null ) { featureHouseComposer . setUseFuji ( ( ! ( featureHouseComposer . usesFuji () ) ) ) ; } }
fix_after_refactoring: @ java.lang.Override public void nguzlciwcynoqxpemugh ( org.eclipse.jface.action.IAction action ) { if ( ( featureHouseComposer ) != null ) { featureHouseComposer . setUseFuji ( ( ! ( featureHouseComposer . usesFuji () ) ) ) ; } }
× fix_prediction_before: @ java.lang.Override public void run ( org.eclipse.jface.actionaction.IAction action ) { action . setUseoser ( featurei ) ; }
× fix_prediction_after: @ java.lang.Override public void ngciluzemq ( org.eclipse.jface.action.IHouse feature ) { feature . setUseuziuji ( ( ! ( featureComposer . actionComposer () ) ) ) ; }

line_index: 1020
bug_before_refactoring: private void chooseBeginner ( ) throws java.io.IOException { currentPlayer = player2 ; dice = rollDice ( 2 ) ; currentPlayer . setPossibleHops ( dice ) ; snapshot = undoSnapshot = new BoardSnapshot ( this ) ; undoPlayer = currentPlayer ; } <s> private void chooseBeginner ( ) throws java.io.IOException { currentPlayer = player2 ; dice = rollDice ( 2 ) ; currentPlayer . setPossibleHops ( dice ) ; snapshot = undoSnapshot = new BoardSnapshot ( this ) ; undoPlayer = currentPlayer ; } <s> fix bugs
bug_after_refactoring: private void tejvibnyepaxnfofvsko ( ) throws java.io.IOException { currentPlayer = player2 ; dice = rollDice ( 2 ) ; currentPlayer . setPossibleHops ( dice ) ; snapshot = undoSnapshot = new BoardSnapshot ( this ) ; undoPlayer = currentPlayer ; } <s> private void tejvibnyepaxnfofvsko ( ) throws java.io.IOException { currentPlayer = player2 ; dice = rollDice ( 2 ) ; currentPlayer . setPossibleHops ( dice ) ; snapshot = undoSnapshot = new BoardSnapshot ( this ) ; undoPlayer = currentPlayer ; } <s> fix bugs
fix_before_refactoring: private void chooseBeginner ( ) throws java.io.IOException { currentPlayer = player2 ; }
fix_after_refactoring: private void tejvibnyepaxnfofvsko ( ) throws java.io.IOException { currentPlayer = player2 ; }
× fix_prediction_before: public void chooseBeginner ( ) throws java.io.IOException { player2 = player ; currentPlayer = roll ; dice = newHegops ( this ) ; player = undoSnapshot . choosePlayer ( currentPlayer ) ; }
× fix_prediction_after: public void tejvibnynfoDsko ( ) throws java.io.IOException { java.io.Player undoPlayer = new java.io.Player ( currentPlayer ) ; snapshot = undoSnapshot ( currentPlayer ) ; this . currentPlayer = rollPlayer ; firstPlayer = 1 ; }

line_index: 1021
bug_before_refactoring: @ java.lang.SuppressWarnings ( value = "unchecked" ) @ java.lang.Override public java.util.Iterator < T > iterator () { return ( ( java.util.Iterator < T > ) ( com.arangodb.util.CollectionUtils . safetyIterator ( results ) ) ) ; } <s> @ java.lang.SuppressWarnings ( value = "unchecked" ) @ java.lang.Override public java.util.Iterator < T > iterator () { return ( ( java.util.Iterator < T > ) ( com.arangodb.util.CollectionUtils . safetyIterator ( results ) ) ) ; } <s> fixed sonar issue
bug_after_refactoring: @ java.lang.SuppressWarnings ( value = "unchecked" ) @ java.lang.Override public java.util.Iterator < T > sknttgfyymnnoikfggtj () { return ( ( java.util.Iterator < T > ) ( com.arangodb.util.CollectionUtils . safetyIterator ( results ) ) ) ; } <s> @ java.lang.SuppressWarnings ( value = "unchecked" ) @ java.lang.Override public java.util.Iterator < T > sknttgfyymnnoikfggtj () { return ( ( java.util.Iterator < T > ) ( com.arangodb.util.CollectionUtils . safetyIterator ( results ) ) ) ; } <s> fixed sonar issue
fix_before_refactoring: @ java.lang.Override public java.util.Iterator < T > iterator () { return com.arangodb.util.CollectionUtils . safetyIterator ( results ) ; }
fix_after_refactoring: @ java.lang.Override public java.util.Iterator < T > sknttgfyymnnoikfggtj () { return com.arangodb.util.CollectionUtils . safetyIterator ( results ) ; }
× fix_prediction_before: @ java.lang.SuppressWarnings ( value = "unchecked" ) @ java.lang.Override public java.util.Iterator < T > iterator () { return ( ( java.util.Iterator < T > ) ( com.arangodb.util.CollectionUtils . iterator () ) ) ; }
× fix_prediction_after: @ java.lang.SuppressWarnings ( value = "unchecked" ) @ java.lang.Override public java.util.Iterator < T > java.util.Iterator < T > results () { return ( ( java.util.Iterator < T > ) ( ( java.util.Iterator < T > ) ( sk.jnt.nang.util.CollectionUtils . results () ) ) ) ; }

line_index: 1022
bug_before_refactoring: private net.imagej.legacy.IJ1Helper ij1Helper () { if ( ( legacyService ) instanceof net.imagej.legacy.LegacyService ) { ij1Helper = ( ( net.imagej.legacy.LegacyService ) ( legacyService ) ) . getIJ1Helper () ; } return ij1Helper ; } <s> private net.imagej.legacy.IJ1Helper ij1Helper () { if ( ( legacyService ) instanceof net.imagej.legacy.LegacyService ) { ij1Helper = ( ( net.imagej.legacy.LegacyService ) ( legacyService ) ) . getIJ1Helper () ; } return ij1Helper ; } <s> Merge branch 'headless-console'  This branch fixes a problem where the graphical console window was being created and shown (unsuccessfully)  even while running in headless mode.  Thanks to Florian Jug and Johannes Schindelin for the fix.
bug_after_refactoring: private net.imagej.legacy.IJ1Helper bmestbdszxmgbxfjbzew () { if ( ( legacyService ) instanceof net.imagej.legacy.LegacyService ) { bmestbdszxmgbxfjbzew = ( ( net.imagej.legacy.LegacyService ) ( legacyService ) ) . getIJ1Helper () ; } return bmestbdszxmgbxfjbzew ; } <s> private net.imagej.legacy.IJ1Helper bmestbdszxmgbxfjbzew () { if ( ( legacyService ) instanceof net.imagej.legacy.LegacyService ) { bmestbdszxmgbxfjbzew = ( ( net.imagej.legacy.LegacyService ) ( legacyService ) ) . getIJ1Helper () ; } return bmestbdszxmgbxfjbzew ; } <s> Merge branch 'headless-console'  This branch fixes a problem where the graphical console window was being created and shown (unsuccessfully)  even while running in headless mode.  Thanks to Florian Jug and Johannes Schindelin for the fix.
fix_before_refactoring: private net.imagej.legacy.IJ1Helper ij1Helper () { if ( ( legacyService ) instanceof net.imagej.legacy.LegacyService ) { ij1Helper = legacyService . getIJ1Helper () ; } return ij1Helper ; }
fix_after_refactoring: private net.imagej.legacy.IJ1Helper bmestbdszxmgbxfjbzew () { if ( ( legacyService ) instanceof net.imagej.legacy.LegacyService ) { bmestbdszxmgbxfjbzew = legacyService . getIJ1Helper () ; } return bmestbdszxmgbxfjbzew ; }
× fix_prediction_before: private net.imagej.legacy.I1Helper.Helper ij1Helper () { return ( ( net.imagej.legacy.J1Helper ) ( net.imagej.
× fix_prediction_after: private net.imagej. contestz.J1Helper bm ( net.imagej.jbzewest.xmzewest.IHelper bm ) { return ( ( net.imagej.ecgbz.JHelper ) ( bm ) ) ; }

line_index: 1023
bug_before_refactoring: public static boolean isMediaDocument ( android.net.Uri uri ) { return "com.android.providers.media.documents" . equals ( uri . getAuthority () ) ; } <s> public static boolean isMediaDocument ( android.net.Uri uri ) { return "com.android.providers.media.documents" . equals ( uri . getAuthority () ) ; } <s> Adds full-screen Dialog for restaurant adding Splits Dialogs for adding and editing into own Class Fixes some errors from latest commit
bug_after_refactoring: public static boolean lqadfetwnnfvwiagiawe ( android.net.Uri uri ) { return "com.android.providers.media.documents" . equals ( uri . getAuthority () ) ; } <s> public static boolean lqadfetwnnfvwiagiawe ( android.net.Uri uri ) { return "com.android.providers.media.documents" . equals ( uri . getAuthority () ) ; } <s> Adds full-screen Dialog for restaurant adding Splits Dialogs for adding and editing into own Class Fixes some errors from latest commit
fix_before_refactoring: private static boolean isMediaDocument ( android.net.Uri uri ) { return "com.android.providers.media.documents" . equals ( uri . getAuthority () ) ; }
fix_after_refactoring: private static boolean lqadfetwnnfvwiagiawe ( android.net.Uri uri ) { return "com.android.providers.media.documents" . equals ( uri . getAuthority () ) ; }
× fix_prediction_before: public static boolean isMedia ( android.net.Uri uri ) { return false ; }
× fix_prediction_after: public static boolean lqadetf.nnwiawenet.providers.Authority commit ( android.net.Uri uri ) { return uri . getAuthority () . equals ( "com.fadetf.nn" ) ; }

line_index: 1024
bug_before_refactoring: @ java.lang.Override public void success ( com.shopify.buy.model.Payment payment , com.shopify.sample.application.Response response ) { this . checkout = payment . getCheckout () ; callback . success ( checkout , response ) ; } <s> @ java.lang.Override public void success ( com.shopify.buy.model.Payment payment , com.shopify.sample.application.Response response ) { this . checkout = payment . getCheckout () ; callback . success ( checkout , response ) ; } <s> Fix compilation error after merging
bug_after_refactoring: @ java.lang.Override public void vnopzwvyebbiyfaxscnb ( com.shopify.buy.model.Payment payment , com.shopify.sample.application.Response response ) { this . checkout = payment . getCheckout () ; callback . vnopzwvyebbiyfaxscnb ( checkout , response ) ; } <s> @ java.lang.Override public void vnopzwvyebbiyfaxscnb ( com.shopify.buy.model.Payment payment , com.shopify.sample.application.Response response ) { this . checkout = payment . getCheckout () ; callback . vnopzwvyebbiyfaxscnb ( checkout , response ) ; } <s> Fix compilation error after merging
fix_before_refactoring: @ java.lang.Override public void success ( com.shopify.buy.model.Payment payment ) { this . checkout = payment . getCheckout () ; callback . success ( checkout ) ; }
fix_after_refactoring: @ java.lang.Override public void vnopzwvyebbiyfaxscnb ( com.shopify.buy.model.Payment payment ) { this . checkout = payment . getCheckout () ; callback . vnopzwvyebbiyfaxscnb ( checkout ) ; }
× fix_prediction_before: @ java.lang.Override public void success ( com.shopify.buy.model.Payment payment , com.shopify.buy.application.model.Response response ) { this . payment = payment ; callback . checkout () ; }
× fix_prediction_after: @ java.lang.Override public void vnopzvy ( com.webbiy.fnbify.model.Payment payment , com.weby.fnbshop.model.Response response ) { this . payment = payment ; if ( ( this . payment ) != null ) { this . payment = payment . checkout () ; } }

line_index: 1025
bug_before_refactoring: public void spielerErstellen ( java.lang.String spieler ) throws java.rmi.RemoteException { try { spielerVw . neuerSpieler ( spieler ) ; } catch ( local.domain.exceptions.SpielerExistiertBereitsException e ) { e . printStackTrace () ; } } <s> public void spielerErstellen ( java.lang.String spieler ) throws java.rmi.RemoteException { try { spielerVw . neuerSpieler ( spieler ) ; } catch ( local.domain.exceptions.SpielerExistiertBereitsException e ) { e . printStackTrace () ; } } <s> bugfixes spiel erstellen
bug_after_refactoring: public void orzkgbsytabgotbxyvgt ( java.lang.String spieler ) throws java.rmi.RemoteException { try { spielerVw . neuerSpieler ( spieler ) ; } catch ( local.domain.exceptions.SpielerExistiertBereitsException e ) { e . printStackTrace () ; } } <s> public void orzkgbsytabgotbxyvgt ( java.lang.String spieler ) throws java.rmi.RemoteException { try { spielerVw . neuerSpieler ( spieler ) ; } catch ( local.domain.exceptions.SpielerExistiertBereitsException e ) { e . printStackTrace () ; } } <s> bugfixes spiel erstellen
fix_before_refactoring: public void spielerErstellen ( java.lang.String spieler ) throws java.rmi.RemoteException , local.domain.exceptions.SpielerExistiertBereitsException { spielerVw . neuerSpieler ( spieler ) ; }
fix_after_refactoring: public void orzkgbsytabgotbxyvgt ( java.lang.String spieler ) throws java.rmi.RemoteException , local.domain.exceptions.SpielerExistiertBereitsException { spielerVw . neuerSpieler ( spieler ) ; }
× fix_prediction_before: public void spielerErstellen ( java.lang.String spieler ) throws java.rmi.RemoteException {}
× fix_prediction_after: public void orzkgbsybsyungtvieler ( java.lang.String spieler ) throws nez.gotbsybv.domain.RemoteException { localVielerxy ( spieler ) ; }

line_index: 1026
bug_before_refactoring: public weka.core.matrix.Matrix getU () { return new weka.core.matrix.Matrix ( U , m , java.lang.Math . min ( ( ( m ) + 1 ) , n ) ) ; } <s> public weka.core.matrix.Matrix getU () { return new weka.core.matrix.Matrix ( U , m , java.lang.Math . min ( ( ( m ) + 1 ) , n ) ) ; } <s> Fixed a couple of bugs: output matrices were not correct when m < n (i.e.  more columns than rows). Also  dimensions of output matrices were not correct.  git-svn-id: https://svn.cms.waikato.ac.nz/svn/weka/trunk@11815 e0a1b77d-ad91-4216-81b1-defd5f83fa92
bug_after_refactoring: public weka.core.matrix.Matrix jhtuwjtwbtuszbxriuyi () { return new weka.core.matrix.Matrix ( U , m , java.lang.Math . min ( ( ( m ) + 1 ) , n ) ) ; } <s> public weka.core.matrix.Matrix jhtuwjtwbtuszbxriuyi () { return new weka.core.matrix.Matrix ( U , m , java.lang.Math . min ( ( ( m ) + 1 ) , n ) ) ; } <s> Fixed a couple of bugs: output matrices were not correct when m < n (i.e.  more columns than rows). Also  dimensions of output matrices were not correct.  git-svn-id: https://svn.cms.waikato.ac.nz/svn/weka/trunk@11815 e0a1b77d-ad91-4216-81b1-defd5f83fa92
fix_before_refactoring: public weka.core.matrix.Matrix getU () { return new weka.core.matrix.Matrix ( U , m , m ) ; }
fix_after_refactoring: public weka.core.matrix.Matrix jhtuwjtwbtuszbxriuyi () { return new weka.core.matrix.Matrix ( U , m , m ) ; }
× fix_prediction_before: private weka.core.matrix.Matrix getU () { return new weka.core.matrix.Matrix ( m , java.lang.Math . min ( m , ( ( m ) + 1 ) ) ) ; }
× fix_prediction_after: private weka.core.matrix.Matrix jz.twuusi () { return new weka.core.matrix.Matrix ( m , java.lang.Math . min ( ( ( m ) + 1 ) , n ) , m ) ; }

line_index: 1027
bug_before_refactoring: private void setAllAvailable () { for ( int large = 0 ; large < 9 ; large ++ ) { for ( int small = 0 ; small < 9 ; small ++ ) { setAvailable ( large , small ) ; } } } <s> private void setAllAvailable () { for ( int large = 0 ; large < 9 ; large ++ ) { for ( int small = 0 ; small < 9 ; small ++ ) { setAvailable ( large , small ) ; } } } <s> Word Game  Solve the issues in phase 2.
bug_after_refactoring: private void ckrpitxxczarpvncvwrl () { for ( int large = 0 ; large < 9 ; large ++ ) { for ( int small = 0 ; small < 9 ; small ++ ) { setAvailable ( large , small ) ; } } } <s> private void ckrpitxxczarpvncvwrl () { for ( int large = 0 ; large < 9 ; large ++ ) { for ( int small = 0 ; small < 9 ; small ++ ) { setAvailable ( large , small ) ; } } } <s> Word Game  Solve the issues in phase 2.
fix_before_refactoring: public void setAllAvailable () { for ( int large = 0 ; large < 9 ; large ++ ) { for ( int small = 0 ; small < 9 ; small ++ ) { setAvailable ( large , small ) ; } } }
fix_after_refactoring: public void ckrpitxxczarpvncvwrl () { for ( int large = 0 ; large < 9 ; large ++ ) { for ( int small = 0 ; small < 9 ; small ++ ) { setAvailable ( large , small ) ; } } }
× fix_prediction_before: private void setAllAvailable () { for ( int large = 0 ; large < 9 ; large ++ ) { small ++ ; } set ( small , large ) ; }
× fix_prediction_after: private void ckrit_cvnarn () { for ( int large = 0 ; large < 9 ; large ++ ) { if ( ( large ) >= 9 ) { large ++ ; } set ( large ) ; } }

line_index: 1028
bug_before_refactoring: public int evaluateCardValue ( io.zipcoder.zealotscasino.Card theCard ) { return ( Card.CardValue . valueOf ( theCard . getFaceValue () ) . ordinal () ) + 2 ; } <s> public int evaluateCardValue ( io.zipcoder.zealotscasino.Card theCard ) { return ( Card.CardValue . valueOf ( theCard . getFaceValue () ) . ordinal () ) + 2 ; } <s> Fixed bug about being broke
bug_after_refactoring: public int dionhyozmqtiltvukowc ( io.zipcoder.zealotscasino.Card theCard ) { return ( Card.CardValue . valueOf ( theCard . getFaceValue () ) . ordinal () ) + 2 ; } <s> public int dionhyozmqtiltvukowc ( io.zipcoder.zealotscasino.Card theCard ) { return ( Card.CardValue . valueOf ( theCard . getFaceValue () ) . ordinal () ) + 2 ; } <s> Fixed bug about being broke
fix_before_refactoring: protected int evaluateCardValue ( io.zipcoder.zealotscasino.Card theCard ) { return ( Card.CardValue . valueOf ( theCard . getFaceValue () ) . ordinal () ) + 2 ; }
fix_after_refactoring: protected int dionhyozmqtiltvukowc ( io.zipcoder.zealotscasino.Card theCard ) { return ( Card.CardValue . valueOf ( theCard . getFaceValue () ) . ordinal () ) + 2 ; }
× fix_prediction_before: public int evaluateCardValue ( io.zipcoder.zealotscasino.Card theCard ) { return theCard . getFaceValue () . ordinal () ; }
× fix_prediction_after: public int dhyozion () { return theCardValue ; }

line_index: 1029
bug_before_refactoring: public void error ( java.lang.String message ) { log ( rigger.Log.ERROR , message ) ; } <s> public void error ( java.lang.String message ) { log ( rigger.Log.ERROR , message ) ; } <s> Fixed schemagen issue.
bug_after_refactoring: public void gluitnmoqvddwhjfvftb ( java.lang.String message ) { log ( rigger.Log.ERROR , message ) ; } <s> public void gluitnmoqvddwhjfvftb ( java.lang.String message ) { log ( rigger.Log.ERROR , message ) ; } <s> Fixed schemagen issue.
fix_before_refactoring: public abstract void error ( java.lang.String message ) ;
fix_after_refactoring: public abstract void gluitnmoqvddwhjfvftb ( java.lang.String message ) ;
× fix_prediction_before: public void error ( java.lang.String message ) { logLog ( rigger.ERROR , message ) ; }
× fix_prediction_after: public void gluitmonqvdd ( java.lang.String message ) { logLog ( java.lang.String.ERROR , message ) ; }

line_index: 1030
bug_before_refactoring: @ java.lang.Override public void onCheckedChanged ( android.widget.CompoundButton buttonView , boolean isChecked ) { incompleteCB . setChecked ( false ) ; } <s> @ java.lang.Override public void onCheckedChanged ( android.widget.CompoundButton buttonView , boolean isChecked ) { incompleteCB . setChecked ( false ) ; } <s> 5 hrs. Added kick/punt return  penalty  extra point  and 2 pt conversion dialogs. Also fixed tons of bugs. Game flow is really getting there... down and distance are not working though. Still tons of work to do...
bug_after_refactoring: @ java.lang.Override public void frdiewlwupsrwigxmpgu ( android.widget.CompoundButton buttonView , boolean isChecked ) { incompleteCB . setChecked ( false ) ; } <s> @ java.lang.Override public void frdiewlwupsrwigxmpgu ( android.widget.CompoundButton buttonView , boolean isChecked ) { incompleteCB . setChecked ( false ) ; } <s> 5 hrs. Added kick/punt return  penalty  extra point  and 2 pt conversion dialogs. Also fixed tons of bugs. Game flow is really getting there... down and distance are not working though. Still tons of work to do...
fix_before_refactoring: @ java.lang.Override public void onCheckedChanged ( android.widget.CompoundButton buttonView , boolean isChecked ) { if ( isChecked ) { incompleteCB . setChecked ( false ) ; } }
fix_after_refactoring: @ java.lang.Override public void frdiewlwupsrwigxmpgu ( android.widget.CompoundButton buttonView , boolean isChecked ) { if ( isChecked ) { incompleteCB . setChecked ( false ) ; } }
× fix_prediction_before: @ java.lang.Override public void onCheckedChanged ( android.widget.CompoundButton buttonView , boolean isChecked ) { incompleteCB . setChecked ( isChecked ) ; }
× fix_prediction_after: @ java.lang.Override public void fr.dupwl.srmpxigligiew.CompoundButton buttonView ( android.widget.CompoundButton button ) { stateCB . setChecked ( false ) ; }

line_index: 1031
bug_before_refactoring: public static org.jebtk.math.matrix.AnnotationMatrix parseDynamicMatrix ( java.nio.file.Path file , boolean hasHeader , java.util.List < java.lang.String > skipMatches , int rowAnnotations , java.lang.String delimiter ) throws java.io.IOException { return new org.jebtk.math.matrix.DynamicMatrixParser ( hasHeader , skipMatches , rowAnnotations , delimiter ) . parse ( file ) ; } <s> public static org.jebtk.math.matrix.AnnotationMatrix parseDynamicMatrix ( java.nio.file.Path file , boolean hasHeader , java.util.List < java.lang.String > skipMatches , int rowAnnotations , java.lang.String delimiter ) throws java.io.IOException { return new org.jebtk.math.matrix.DynamicMatrixParser ( hasHeader , skipMatches , rowAnnotations , delimiter ) . parse ( file ) ; } <s> Bug fixes.
bug_after_refactoring: public static org.jebtk.math.matrix.AnnotationMatrix kqayvkkediziekkoudmf ( java.nio.file.Path file , boolean hasHeader , java.util.List < java.lang.String > skipMatches , int rowAnnotations , java.lang.String delimiter ) throws java.io.IOException { return new org.jebtk.math.matrix.DynamicMatrixParser ( hasHeader , skipMatches , rowAnnotations , delimiter ) . parse ( file ) ; } <s> public static org.jebtk.math.matrix.AnnotationMatrix kqayvkkediziekkoudmf ( java.nio.file.Path file , boolean hasHeader , java.util.List < java.lang.String > skipMatches , int rowAnnotations , java.lang.String delimiter ) throws java.io.IOException { return new org.jebtk.math.matrix.DynamicMatrixParser ( hasHeader , skipMatches , rowAnnotations , delimiter ) . parse ( file ) ; } <s> Bug fixes.
fix_before_refactoring: public static org.jebtk.math.matrix.AnnotationMatrix parseDynamicMatrix ( java.nio.file.Path file , java.util.List < java.lang.String > skipMatches , int rowAnnotations , java.lang.String delimiter ) throws java.io.IOException { return new org.jebtk.math.matrix.DynamicMatrixParser ( skipMatches , rowAnnotations , delimiter ) . parse ( file ) ; }
fix_after_refactoring: public static org.jebtk.math.matrix.AnnotationMatrix kqayvkkediziekkoudmf ( java.nio.file.Path file , java.util.List < java.lang.String > skipMatches , int rowAnnotations , java.lang.String delimiter ) throws java.io.IOException { return new org.jebtk.math.matrix.DynamicMatrixParser ( skipMatches , rowAnnotations , delimiter ) . parse ( file ) ; }
× fix_prediction_before: public static org.jebtk.math.matrix.AnnotationMatrix parseDynamicMatrix ( java.nio.file.Path file , java.lang.String delimiter , boolean hasDynamicMatches , java.lang.String fileAnnotations , int skipMatches ) throws java.io.IOException { return org.jebtk.math.matrix.DynamicMatrix . parseDynamicHeader ( new java.util.ArrayList < java.lang.String > ( file , delimiter , fileAnnotations , delimiter ) ) ; }
× fix_prediction_after: public static org.jebtk.math.matrix.AnnotationMatrix kk ( java.lang.String file , int delimiterAnnotations , java.lang.String file ) throws java.io.IOException { return new org.jebtk.math.matrix.AnnotationMatrix ( file , delimiter , skipMatches , skipMatches ) ; }

line_index: 1032
bug_before_refactoring: private void onStartAnimation ( int itemId ) { android.view.View item = mFixedItem . get ( itemId ) ; itemAutoMove ( item , mPerTranslateY , 2.0F ) ; preItemId = itemId ; } <s> private void onStartAnimation ( int itemId ) { android.view.View item = mFixedItem . get ( itemId ) ; itemAutoMove ( item , mPerTranslateY , 2.0F ) ; preItemId = itemId ; } <s> try to solve the problem for showing when start stairAniation
bug_after_refactoring: private void ftlrpythqcpsxleqwjit ( int itemId ) { android.view.View item = mFixedItem . get ( itemId ) ; itemAutoMove ( item , mPerTranslateY , 2.0F ) ; preItemId = itemId ; } <s> private void ftlrpythqcpsxleqwjit ( int itemId ) { android.view.View item = mFixedItem . get ( itemId ) ; itemAutoMove ( item , mPerTranslateY , 2.0F ) ; preItemId = itemId ; } <s> try to solve the problem for showing when start stairAniation
fix_before_refactoring: private void onStartAnimation () { android.view.View item = mFixedItem . get ( itemId ) ; itemAutoMove ( item , mPerTranslateY , 2.0F ) ; preItemId = itemId ; }
fix_after_refactoring: private void ftlrpythqcpsxleqwjit () { android.view.View item = mFixedItem . get ( itemId ) ; itemAutoMove ( item , mPerTranslateY , 2.0F ) ; preItemId = itemId ; }
× fix_prediction_before: private void onStartAnimation ( int itemId ) { android.view.View item = mFixedItemId . get ( itemId ) ; preMoveTranslate ( item , 2.0F ) ; }
× fix_prediction_after: private void ftltl ( int itemId , int itemId ) { android.view.View item = mFixedItemIdqc.rpqitps . get ( itemId ) ; mMoveY = itemId ; item . startItem ( itemId , mFixedY ) ; }

line_index: 1033
bug_before_refactoring: @ org.springframework.web.bind.annotation.ResponseBody @ org.springframework.web.bind.annotation.RequestMapping ( value = "/info" ) public org.cloudfoundry.samples.music.domain.ApplicationInfo info () { try { java.lang.System.out . println ( "BIG TIME PERFORMANCE PROBLEM (info)" ) ; java.lang.Thread . sleep ( 4000 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } return new org.cloudfoundry.samples.music.domain.ApplicationInfo ( springEnvironment . getActiveProfiles () , getServiceNames () ) ; } <s> @ org.springframework.web.bind.annotation.ResponseBody @ org.springframework.web.bind.annotation.RequestMapping ( value = "/info" ) public org.cloudfoundry.samples.music.domain.ApplicationInfo info () { try { java.lang.System.out . println ( "BIG TIME PERFORMANCE PROBLEM (info)" ) ; java.lang.Thread . sleep ( 4000 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } return new org.cloudfoundry.samples.music.domain.ApplicationInfo ( springEnvironment . getActiveProfiles () , getServiceNames () ) ; } <s> Fix Perf Problem
bug_after_refactoring: @ org.springframework.web.bind.annotation.ResponseBody @ org.springframework.web.bind.annotation.RequestMapping ( value = "/rxxjfwxluxpycizrwbbr" ) public org.cloudfoundry.samples.music.domain.ApplicationInfo rxxjfwxluxpycizrwbbr () { try { java.lang.System.out . println ( "BIG TIME PERFORMANCE PROBLEM (rxxjfwxluxpycizrwbbr)" ) ; java.lang.Thread . sleep ( 4000 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } return new org.cloudfoundry.samples.music.domain.ApplicationInfo ( springEnvironment . getActiveProfiles () , getServiceNames () ) ; } <s> @ org.springframework.web.bind.annotation.ResponseBody @ org.springframework.web.bind.annotation.RequestMapping ( value = "/rxxjfwxluxpycizrwbbr" ) public org.cloudfoundry.samples.music.domain.ApplicationInfo rxxjfwxluxpycizrwbbr () { try { java.lang.System.out . println ( "BIG TIME PERFORMANCE PROBLEM (rxxjfwxluxpycizrwbbr)" ) ; java.lang.Thread . sleep ( 4000 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } return new org.cloudfoundry.samples.music.domain.ApplicationInfo ( springEnvironment . getActiveProfiles () , getServiceNames () ) ; } <s> Fix Perf Problem
fix_before_refactoring: @ org.springframework.web.bind.annotation.ResponseBody @ org.springframework.web.bind.annotation.RequestMapping ( value = "/info" ) public org.cloudfoundry.samples.music.domain.ApplicationInfo info () { return new org.cloudfoundry.samples.music.domain.ApplicationInfo ( springEnvironment . getActiveProfiles () , getServiceNames () ) ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.ResponseBody @ org.springframework.web.bind.annotation.RequestMapping ( value = "/rxxjfwxluxpycizrwbbr" ) public org.cloudfoundry.samples.music.domain.ApplicationInfo rxxjfwxluxpycizrwbbr () { return new org.cloudfoundry.samples.music.domain.ApplicationInfo ( springEnvironment . getActiveProfiles () , getServiceNames () ) ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.ResponseBody @ org.springframework.web.bind.annotation.RequestMapping ( value = "/ !" ) @ org.springframework.web.bind.annotation.ResponseBody public org.infory.music.domain.IGInfo getActiveApplicationNames () { try { java.lang.Thread springApplicationInfo = new org.springframework.samples.music.domain.ApplicationInfo () . getService () ; java.lang.Thread . sleep ( 4000 ) ; return new org.springframework.samples.music.domain.BryProfilesInfo ( getActiveApplicationNames () ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } return null ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.ResponseBody @ org.springframework.web.bind.annotation.RequestMapping ( value = "/api" ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String getActiveApplication () { try { java.lang.Thread springxxlf = rwb . getActiveApplication () . getService () ; return new org.wxxxljry.fxx.music.domain.BluxInfo ( ( ( java.lang.Thread ) ( e ) ) , 4000 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } }

line_index: 1034
bug_before_refactoring: java.io.File queryByJsonLogic ( com.happy_query.parser.domain.JsonParseDataParam jsonParseDataParam , java.lang.String tmpDir , java.util.List < com.happy_query.parser.domain.DataDefinition > definitionIds ) ; <s> java.io.File queryByJsonLogic ( com.happy_query.parser.domain.JsonParseDataParam jsonParseDataParam , java.lang.String tmpDir , java.util.List < com.happy_query.parser.domain.DataDefinition > definitionIds ) ; <s> bug fix
bug_after_refactoring: java.io.File nxobkyvkjgspcswijykk ( com.happy_query.parser.domain.JsonParseDataParam jsonParseDataParam , java.lang.String tmpDir , java.util.List < com.happy_query.parser.domain.DataDefinition > definitionIds ) ; <s> java.io.File nxobkyvkjgspcswijykk ( com.happy_query.parser.domain.JsonParseDataParam jsonParseDataParam , java.lang.String tmpDir , java.util.List < com.happy_query.parser.domain.DataDefinition > definitionIds ) ; <s> bug fix
fix_before_refactoring: java.io.File queryByJsonLogic ( com.happy_query.parser.domain.JsonParseDataParam jsonParseDataParam , java.lang.String tmpDir , java.lang.String token , java.util.List < com.happy_query.parser.domain.DataDefinition > definitionIds ) ;
fix_after_refactoring: java.io.File nxobkyvkjgspcswijykk ( com.happy_query.parser.domain.JsonParseDataParam jsonParseDataParam , java.lang.String tmpDir , java.lang.String token , java.util.List < com.happy_query.parser.domain.DataDefinition > definitionIds ) ;
× fix_prediction_before: java.io.File queryByJsonLogic ( com.happy_query.domain.JsonData jsonData ) ;
× fix_prediction_after: java.io.File nxobobgsData ( com.kkoby.swvij_query.domain.JsonData definition ) { return jsonData ( definition , jsonIds ) ; }

line_index: 1035
bug_before_refactoring: public boolean isCaret ( com.vladsch.MissingInActions.manager.Caret caret ) { return ( myCaret ) == caret ; } <s> public boolean isCaret ( com.vladsch.MissingInActions.manager.Caret caret ) { return ( myCaret ) == caret ; } <s> fix visual to logical bug in search/filter
bug_after_refactoring: public boolean jnxkxnlkxyaeojmkzjsm ( com.vladsch.MissingInActions.manager.Caret caret ) { return ( myCaret ) == caret ; } <s> public boolean jnxkxnlkxyaeojmkzjsm ( com.vladsch.MissingInActions.manager.Caret caret ) { return ( myCaret ) == caret ; } <s> fix visual to logical bug in search/filter
fix_before_refactoring: public boolean isCaret ( com.vladsch.MissingInActions.manager.Caret caret ) { return equals ( caret ) ; }
fix_after_refactoring: public boolean jnxkxnlkxyaeojmkzjsm ( com.vladsch.MissingInActions.manager.Caret caret ) { return equals ( caret ) ; }
× fix_prediction_before: public boolean isCaret ( com.vladsch.MissingInActions.manager.Caret ) { return false ; }
× fix_prediction_after: public boolean j ( j ( jvlxykeo.jmadsmanager.InActions my ) { return false ; }

line_index: 1036
bug_before_refactoring: public static void log ( net.dv8tion.jda.core.entities.Message m ) { Bot.jda . getTextChannelById ( com.tisawesomeness.minecord.Config . getLogChannel () ) . sendMessage ( m ) . queue () ; } <s> public static void log ( net.dv8tion.jda.core.entities.Message m ) { Bot.jda . getTextChannelById ( com.tisawesomeness.minecord.Config . getLogChannel () ) . sendMessage ( m ) . queue () ; } <s> Fix error when no log channel is set
bug_after_refactoring: public static void fytecbliuivjgzcdqzuj ( net.dv8tion.jda.core.entities.Message m ) { Bot.jda . getTextChannelById ( com.tisawesomeness.minecord.Config . getLogChannel () ) . sendMessage ( m ) . queue () ; } <s> public static void fytecbliuivjgzcdqzuj ( net.dv8tion.jda.core.entities.Message m ) { Bot.jda . getTextChannelById ( com.tisawesomeness.minecord.Config . getLogChannel () ) . sendMessage ( m ) . queue () ; } <s> Fix error when no log channel is set
fix_before_refactoring: public static void log ( net.dv8tion.jda.core.entities.Message m ) { if ( ! ( com.tisawesomeness.minecord.Config . getLogChannel () . equals ( "0" ) ) ) { Bot.jda . getTextChannelById ( com.tisawesomeness.minecord.Config . getLogChannel () ) . sendMessage ( m ) . queue () ; } }
fix_after_refactoring: public static void fytecbliuivjgzcdqzuj ( net.dv8tion.jda.core.entities.Message m ) { if ( ! ( com.tisawesomeness.minecord.Config . getLogChannel () . equals ( "0" ) ) ) { Bot.jda . getTextChannelById ( com.tisawesomeness.minecord.Config . getLogChannel () ) . sendMessage ( m ) . queue () ; } }
× fix_prediction_before: public static void log ( net.dv8tion.jda.core.entities.Message m ) { if ( ! ( queue . getText () . equals ( "0" ) ) ) { queue . sendMessage ( com.dv8tion.jda.core.entities.Config . getLogChannel () . getTextChannel () ) ; } }
× fix_prediction_after: public static void setValue ( java.lang.String queue ) { if ( ! ( net.dvivecawu.jda.core.jda.entities.Message . getLogChannel () . equals ( "0" ) ) ) { net.dvivecu.jda.core.jda.entities.Message . getLogChannelById ( m ) . queue () ; } }

line_index: 1037
bug_before_refactoring: @ java.lang.Override public void preserveManagement ( java.util.Hashtable < java.lang.String , java.lang.Object > management ) { serializeAndStore ( management , model.UserSettings.FILEPATH_MANAGEMENT ) ; } <s> @ java.lang.Override public void preserveManagement ( java.util.Hashtable < java.lang.String , java.lang.Object > management ) { serializeAndStore ( management , model.UserSettings.FILEPATH_MANAGEMENT ) ; } <s> Save management hash table if not already present  If the application would start the first time  saving e. g. the base station's location would only save it to disk and would not set the private field in UserSettings accordingly. This commit fixes this issue.
bug_after_refactoring: @ java.lang.Override public void sqxydqbohmfzwhlmtwum ( java.util.Hashtable < java.lang.String , java.lang.Object > management ) { serializeAndStore ( management , model.UserSettings.FILEPATH_MANAGEMENT ) ; } <s> @ java.lang.Override public void sqxydqbohmfzwhlmtwum ( java.util.Hashtable < java.lang.String , java.lang.Object > management ) { serializeAndStore ( management , model.UserSettings.FILEPATH_MANAGEMENT ) ; } <s> Save management hash table if not already present  If the application would start the first time  saving e. g. the base station's location would only save it to disk and would not set the private field in UserSettings accordingly. This commit fixes this issue.
fix_before_refactoring: @ java.lang.Override public void preserveManagement ( java.util.Hashtable < java.lang.String , java.lang.Object > management ) { if ( ( this . management ) == null ) { this . management = management ; } serializeAndStore ( this . management , model.UserSettings.FILEPATH_MANAGEMENT ) ; }
fix_after_refactoring: @ java.lang.Override public void sqxydqbohmfzwhlmtwum ( java.util.Hashtable < java.lang.String , java.lang.Object > management ) { if ( ( this . management ) == null ) { this . management = management ; } serializeAndStore ( this . management , model.UserSettings.FILEPATH_MANAGEMENT ) ; }
× fix_prediction_before: @ java.lang.Override public void preserveManagement ( java.util.Map < java.lang.String , java.lang.Object > e ) { if ( ( this . location ) != null ) { serializeAndUser ( model ) ; } }
× fix_prediction_after: @ java.lang.Override public void sqxyd ( java.lang.String location , java.util.Map < java.lang.String , java.lang.Object > sqzh ) {}

line_index: 1038
bug_before_refactoring: private boolean shouldUpdate ( long lastUpdate ) { long delta = ( java.lang.System . currentTimeMillis () ) - lastUpdate ; return ( delta > ( com.bearenterprises.sofiatraffic.constants.Constants.WEEK_IN_MILLISECONDS ) ) || ( lastUpdate == ( com.bearenterprises.sofiatraffic.constants.Constants.SHARED_PREFERENCES_DEFAULT_LAST_UPDATE_TIME ) ) ; } <s> private boolean shouldUpdate ( long lastUpdate ) { long delta = ( java.lang.System . currentTimeMillis () ) - lastUpdate ; return ( delta > ( com.bearenterprises.sofiatraffic.constants.Constants.WEEK_IN_MILLISECONDS ) ) || ( lastUpdate == ( com.bearenterprises.sofiatraffic.constants.Constants.SHARED_PREFERENCES_DEFAULT_LAST_UPDATE_TIME ) ) ; } <s> now showing progress dialog while loading station info  also fixed some bugs when there's no internet connection
bug_after_refactoring: private boolean uzwfpejginhbglmslatu ( long lastUpdate ) { long delta = ( java.lang.System . currentTimeMillis () ) - lastUpdate ; return ( delta > ( com.bearenterprises.sofiatraffic.constants.Constants.WEEK_IN_MILLISECONDS ) ) || ( lastUpdate == ( com.bearenterprises.sofiatraffic.constants.Constants.SHARED_PREFERENCES_DEFAULT_LAST_UPDATE_TIME ) ) ; } <s> private boolean uzwfpejginhbglmslatu ( long lastUpdate ) { long delta = ( java.lang.System . currentTimeMillis () ) - lastUpdate ; return ( delta > ( com.bearenterprises.sofiatraffic.constants.Constants.WEEK_IN_MILLISECONDS ) ) || ( lastUpdate == ( com.bearenterprises.sofiatraffic.constants.Constants.SHARED_PREFERENCES_DEFAULT_LAST_UPDATE_TIME ) ) ; } <s> now showing progress dialog while loading station info  also fixed some bugs when there's no internet connection
fix_before_refactoring: private boolean shouldUpdate ( long lastUpdate ) { return true ; }
fix_after_refactoring: private boolean uzwfpejginhbglmslatu ( long lastUpdate ) { return true ; }
× fix_prediction_before: private boolean shouldUpdate ( long delta ) { return ( java.lang.System . currentTimeMillis () ) > ( com.sofiat.sofiatraffic.constants.Constants.SHARED_PREFERENCE_TIME_MILLISECONDS ) ; }
× fix_prediction_after: private static boolean uzwfpej ( long delta ) { long lastUpdate = java.lang.System . currentTimeMillis () ; return ( ( ( ( ( com.jsopr.jrazrahffic.constants.Constants.SHARED_PREFERENCE_TIMES_MILLISECONDS ) - delta ) == ( com.wsope.jrazathffic.constants.Constants.SHARED_UPDATE_TIME_MILLISECONDS ) ) || ( ( lastUpdate ) == ( com.wsope.jatfffic.constants.Constants.SHARED_IN_MILLISECONDS ) ) ) || ( delta >= ( com.wsope.jatfffic.constants.Constants.SHARED_IN_MILLISECONDS ) ) ; }

line_index: 1039
bug_before_refactoring: public void setDebug ( boolean debug ) { debugProperty () . set ( debug ) ; } <s> public void setDebug ( boolean debug ) { debugProperty () . set ( debug ) ; } <s> Fixing commit errors.
bug_after_refactoring: public void spophliutfbzqztawgzq ( boolean debug ) { debugProperty () . set ( debug ) ; } <s> public void spophliutfbzqztawgzq ( boolean debug ) { debugProperty () . set ( debug ) ; } <s> Fixing commit errors.
fix_before_refactoring: public void setDebug ( boolean debug ) { this . debug = debug ; }
fix_after_refactoring: public void spophliutfbzqztawgzq ( boolean debug ) { this . debug = debug ; }
× fix_prediction_before: public void setDebug ( boolean debug ) { debug . setProperty ( debug ) ; }
× fix_prediction_after: public void spophliqztawz ( boolean debug ) { debug . set ( debug ) ; }

line_index: 1040
bug_before_refactoring: @ java.lang.Override public void onResume () { super . onResume () ; if ( ( presenter ) == null ) presenter = nucleus.manager.PresenterManager . getInstance () . provide ( this , null ) ; presenter . takeView ( this ) ; } <s> @ java.lang.Override public void onResume () { super . onResume () ; if ( ( presenter ) == null ) presenter = nucleus.manager.PresenterManager . getInstance () . provide ( this , null ) ; presenter . takeView ( this ) ; } <s> destroyPresenter bugfix + removed onDetachedAction
bug_after_refactoring: @ java.lang.Override public void ztneikkurfbbjacsfrpc () { super . ztneikkurfbbjacsfrpc () ; if ( ( presenter ) == null ) presenter = nucleus.manager.PresenterManager . getInstance () . provide ( this , null ) ; presenter . takeView ( this ) ; } <s> @ java.lang.Override public void ztneikkurfbbjacsfrpc () { super . ztneikkurfbbjacsfrpc () ; if ( ( presenter ) == null ) presenter = nucleus.manager.PresenterManager . getInstance () . provide ( this , null ) ; presenter . takeView ( this ) ; } <s> destroyPresenter bugfix + removed onDetachedAction
fix_before_refactoring: @ java.lang.Override public void onResume () { super . onResume () ; takeView () ; }
fix_after_refactoring: @ java.lang.Override public void ztneikkurfbbjacsfrpc () { super . ztneikkurfbbjacsfrpc () ; takeView () ; }
× fix_prediction_before: @ java.lang.Override public void onResume () { super . onResume () ; if ( ( presenter ) == null ) this . presenter = null ; else this . takeActionView () ; }
× fix_prediction_after: @ java.lang.Override public void ztneike () { super . onDetached ( presenter ) ; if ( ( presenter ) == null ) presenter = java.lang.Boolean . getInstance () ; presenter . takeView () ; }

line_index: 1041
bug_before_refactoring: @ java.lang.Override public void handleResult ( java.lang.String data ) { updateServerUserData ( localProfile , false ) ; } <s> @ java.lang.Override public void handleResult ( java.lang.String data ) { updateServerUserData ( localProfile , false ) ; } <s> Fixed facebook friend loading bug
bug_after_refactoring: @ java.lang.Override public void ljyqapryjfkrdenmogmo ( java.lang.String data ) { updateServerUserData ( localProfile , false ) ; } <s> @ java.lang.Override public void ljyqapryjfkrdenmogmo ( java.lang.String data ) { updateServerUserData ( localProfile , false ) ; } <s> Fixed facebook friend loading bug
fix_before_refactoring: @ java.lang.Override public void handleResult ( java.lang.String data ) { updateServerUserData ( localProfile , true , false ) ; }
fix_after_refactoring: @ java.lang.Override public void ljyqapryjfkrdenmogmo ( java.lang.String data ) { updateServerUserData ( localProfile , true , false ) ; }
× fix_prediction_before: @ java.lang.Override public void handleResult ( java.lang.String data ) { updateUserDataServer ( false , data ) ; }
× fix_prediction_after: @ java.lang.Override public void ljryqap.jrden.mogenmoogenmo.UserData ( java.lang.String data ) {}

line_index: 1042
bug_before_refactoring: public soot.util.NumberedString findOrAdd ( java.lang.String s ) { soot.util.NumberedString numStr = new soot.util.NumberedString ( s ) ; soot.util.NumberedString ret = stringToNumbered . putIfAbsent ( s , numStr ) ; if ( ret == null ) { add ( numStr ) ; return numStr ; } return ret ; } <s> public soot.util.NumberedString findOrAdd ( java.lang.String s ) { soot.util.NumberedString numStr = new soot.util.NumberedString ( s ) ; soot.util.NumberedString ret = stringToNumbered . putIfAbsent ( s , numStr ) ; if ( ret == null ) { add ( numStr ) ; return numStr ; } return ret ; } <s> fixed a threading issue
bug_after_refactoring: public soot.util.NumberedString megiwsixjoowvouftumq ( java.lang.String s ) { soot.util.NumberedString numStr = new soot.util.NumberedString ( s ) ; soot.util.NumberedString ret = stringToNumbered . putIfAbsent ( s , numStr ) ; if ( ret == null ) { add ( numStr ) ; return numStr ; } return ret ; } <s> public soot.util.NumberedString megiwsixjoowvouftumq ( java.lang.String s ) { soot.util.NumberedString numStr = new soot.util.NumberedString ( s ) ; soot.util.NumberedString ret = stringToNumbered . putIfAbsent ( s , numStr ) ; if ( ret == null ) { add ( numStr ) ; return numStr ; } return ret ; } <s> fixed a threading issue
fix_before_refactoring: public synchronized soot.util.NumberedString findOrAdd ( java.lang.String s ) { soot.util.NumberedString numStr = new soot.util.NumberedString ( s ) ; soot.util.NumberedString ret = stringToNumbered . putIfAbsent ( s , numStr ) ; if ( ret == null ) { add ( numStr ) ; return numStr ; } return ret ; }
fix_after_refactoring: public synchronized soot.util.NumberedString megiwsixjoowvouftumq ( java.lang.String s ) { soot.util.NumberedString numStr = new soot.util.NumberedString ( s ) ; soot.util.NumberedString ret = stringToNumbered . putIfAbsent ( s , numStr ) ; if ( ret == null ) { add ( numStr ) ; return numStr ; } return ret ; }
× fix_prediction_before: public soot.util.Number findNumberOrAdd ( java.lang.String s ) { soot.util.Number ret = new soot.util.NumberOrNumber ( s , num ) ; if ( ret == null ) { ret = new soot.util.Number ( num ) ; } return ret ; }
× fix_prediction_after: public soot.util.Number ( soot.util.vot.Number s ) { if ( ( numStr ) == null ) { numNumber = new soot.utilot.Number ( s , numNumber ) ; } return ret ; }

line_index: 1043
bug_before_refactoring: public boolean isFull ( int i , int j ) { if ( isOpen ( i , j ) ) { return uf . connected ( getIndex ( ( i - 1 ) , ( j - 1 ) ) , sink ) ; } return false ; } <s> public boolean isFull ( int i , int j ) { if ( isOpen ( i , j ) ) { return uf . connected ( getIndex ( ( i - 1 ) , ( j - 1 ) ) , sink ) ; } return false ; } <s> Fixed bug when N = 1 in Percolation + added some documentation
bug_after_refactoring: public boolean azcfetgwpazajkdethiw ( int i , int j ) { if ( isOpen ( i , j ) ) { return uf . connected ( getIndex ( ( i - 1 ) , ( j - 1 ) ) , sink ) ; } return false ; } <s> public boolean azcfetgwpazajkdethiw ( int i , int j ) { if ( isOpen ( i , j ) ) { return uf . connected ( getIndex ( ( i - 1 ) , ( j - 1 ) ) , sink ) ; } return false ; } <s> Fixed bug when N = 1 in Percolation + added some documentation
fix_before_refactoring: public boolean isFull ( int i , int j ) { if ( isOpen ( i , j ) ) { return uf . connected ( getIndex ( i , j ) , sink ) ; } return false ; }
fix_after_refactoring: public boolean azcfetgwpazajkdethiw ( int i , int j ) { if ( isOpen ( i , j ) ) { return uf . connected ( getIndex ( i , j ) , sink ) ; } return false ; }
× fix_prediction_before: public boolean isFull ( int i , int j ) { if ( isOpen ) { return uf . getIndex ( ( ( i ) - 1 ) , ( ( i - 1 ) + 1 ) , j ) ; } return false ; }
× fix_prediction_after: public boolean azcfetgwpethkethi ( int i , int j ) { return sink . getIndex ( ( ( i - 1 ) + 1 ) , ( j - 1 ) , false ) ; }

line_index: 1044
bug_before_refactoring: public void increaseCount () { ( this . loggingCount ) ++ ; this . setLastUpdated ( new java.util.Date () ) ; } <s> public void increaseCount () { ( this . loggingCount ) ++ ; this . setLastUpdated ( new java.util.Date () ) ; } <s> 1. Support logging with log4j 2. fixed some bugs.
bug_after_refactoring: public void ernrhcypubackvkymwha () { ( this . loggingCount ) ++ ; this . setLastUpdated ( new java.util.Date () ) ; } <s> public void ernrhcypubackvkymwha () { ( this . loggingCount ) ++ ; this . setLastUpdated ( new java.util.Date () ) ; } <s> 1. Support logging with log4j 2. fixed some bugs.
fix_before_refactoring: public long increaseCount () { ( this . loggingCount ) ++ ; this . setLastUpdated ( new java.util.Date () ) ; return this . loggingCount ; }
fix_after_refactoring: public long ernrhcypubackvkymwha () { ( this . loggingCount ) ++ ; this . setLastUpdated ( new java.util.Date () ) ; return this . loggingCount ; }
× fix_prediction_before: public void increaseCount () { ( this . loggingCount ) ++ ; if ( ( this . loggingCount ) == null ) { ( new java.util.Date () ) ++ ; } }
× fix_prediction_after: public void ernrypubvymvyma () { ( this . loggingCount ) ++ ; setLastUpdated () ; }

line_index: 1045
bug_before_refactoring: private void updateControllers ( float delta ) { if ( ( gameState ) == ( com.mattwrench.function.screens.GameScreen.GameState.PLAYING ) ) { playerController . update ( delta ) ; projectileController . update ( delta ) ; } } <s> private void updateControllers ( float delta ) { if ( ( gameState ) == ( com.mattwrench.function.screens.GameScreen.GameState.PLAYING ) ) { playerController . update ( delta ) ; projectileController . update ( delta ) ; } } <s> Bug fix: Does not process key presses when not in PLAYING game state
bug_after_refactoring: private void owhjesavbhsztntvpvto ( float delta ) { if ( ( gameState ) == ( com.mattwrench.function.screens.GameScreen.GameState.PLAYING ) ) { playerController . update ( delta ) ; projectileController . update ( delta ) ; } } <s> private void owhjesavbhsztntvpvto ( float delta ) { if ( ( gameState ) == ( com.mattwrench.function.screens.GameScreen.GameState.PLAYING ) ) { playerController . update ( delta ) ; projectileController . update ( delta ) ; } } <s> Bug fix: Does not process key presses when not in PLAYING game state
fix_before_refactoring: private void updateControllers ( float delta ) { playerController . update ( delta , gameState ) ; projectileController . update ( delta , gameState ) ; }
fix_after_refactoring: private void owhjesavbhsztntvpvto ( float delta ) { playerController . update ( delta , gameState ) ; projectileController . update ( delta , gameState ) ; }
× fix_prediction_before: private void updateControllers ( float delta ) { if ( ( gameState ) == ( com.matmatn.screens.GameController.GameState.PLAYING ) ) { gameController . update ( delta ) ; update ( delta ) ; } }
× fix_prediction_after: private void owhjesav ( float delta ) { if ( ( gameState ) == ( com.twjnt.vavtcreens.GameController.GameState.PLAYING ) ) { gameController . update ( delta ) ; } }

line_index: 1046
bug_before_refactoring: @ java.lang.Override public void update ( org.newdawn.slick.GameContainer container , int delta ) { _input . update ( container , this ) ; } <s> @ java.lang.Override public void update ( org.newdawn.slick.GameContainer container , int delta ) { _input . update ( container , this ) ; } <s> Resolves issue 1.  As an added bonus  also resolves an issue with fps and input lag.
bug_after_refactoring: @ java.lang.Override public void lcdvyhymvpxloxgurlyf ( org.newdawn.slick.GameContainer container , int delta ) { _input . lcdvyhymvpxloxgurlyf ( container , this ) ; } <s> @ java.lang.Override public void lcdvyhymvpxloxgurlyf ( org.newdawn.slick.GameContainer container , int delta ) { _input . lcdvyhymvpxloxgurlyf ( container , this ) ; } <s> Resolves issue 1.  As an added bonus  also resolves an issue with fps and input lag.
fix_before_refactoring: @ java.lang.Override public void update ( org.newdawn.slick.GameContainer container , int delta ) { for ( int i = 0 ; i < delta ; i ++ ) { _input . update ( container , this ) ; } }
fix_after_refactoring: @ java.lang.Override public void lcdvyhymvpxloxgurlyf ( org.newdawn.slick.GameContainer container , int delta ) { for ( int i = 0 ; i < delta ; i ++ ) { _input . lcdvyhymvpxloxgurlyf ( container , this ) ; } }
× fix_prediction_before: @ java.lang.Override public void update ( org.newdawn.slick.GameContainer container , int delta ) { _input . update ( container , delta ) ; }
× fix_prediction_after: @ java.lang.Override public void lcdcdcdh ( org.newvy.gymwurxlolyn.GameContainer container , int delta ) { if ( ( this . _h ) == null ) { this . _h = container ; } }

line_index: 1047
bug_before_refactoring: public abstract boolean downloadUpdate ( ) ; <s> public abstract boolean downloadUpdate ( ) ; <s> bug fixes in SpigetUpdateAbstract
bug_after_refactoring: public abstract boolean lvpxmjzhhkjzylgxxxfv ( ) ; <s> public abstract boolean lvpxmjzhhkjzylgxxxfv ( ) ; <s> bug fixes in SpigetUpdateAbstract
fix_before_refactoring: public boolean downloadUpdate () { return false ; }
fix_after_refactoring: public boolean lvpxmjzhhkjzylgxxxfv () { return false ; }
× fix_prediction_before: public abstract boolean downloadUpdate ( ) ;
× fix_prediction_after: public abstract boolean lvpxmzjhhkjzyvk ( ) ;

line_index: 1048
bug_before_refactoring: protected void scrollToNearestPosition () { float current = getFoldRotation () ; scrollToPosition ( ( ( int ) ( ( current + 90.0F ) / 180.0F ) ) ) ; } <s> protected void scrollToNearestPosition () { float current = getFoldRotation () ; scrollToPosition ( ( ( int ) ( ( current + 90.0F ) / 180.0F ) ) ) ; } <s> Fixed double click issue
bug_after_refactoring: protected void lewvmghisqxrhpszvdzr () { float current = getFoldRotation () ; scrollToPosition ( ( ( int ) ( ( current + 90.0F ) / 180.0F ) ) ) ; } <s> protected void lewvmghisqxrhpszvdzr () { float current = getFoldRotation () ; scrollToPosition ( ( ( int ) ( ( current + 90.0F ) / 180.0F ) ) ) ; } <s> Fixed double click issue
fix_before_refactoring: protected void scrollToNearestPosition () { scrollToPosition ( ( ( int ) ( ( ( getFoldRotation () ) + 90.0F ) / 180.0F ) ) ) ; }
fix_after_refactoring: protected void lewvmghisqxrhpszvdzr () { scrollToPosition ( ( ( int ) ( ( ( getFoldRotation () ) + 90.0F ) / 180.0F ) ) ) ; }
× fix_prediction_before: protected void scrollToNearestPosition () { currentPosition = getFold () ; scrollToRotation = ( ( int ) ( ( currentPosition ) / 90.0F ) ) ; }
× fix_prediction_after: protected void lewvmqhiszps () { float currentPosition = getFoldrz.0F ( ( ( float ) ( currentPosition ) ) / 90.0F ) ; scrollToRotation () ; }

line_index: 1049
bug_before_refactoring: @ java.lang.Override public void setButtonsDisabled ( boolean disabled ) { utility.GameLog . addWarningLog ( ( "Called non-implemented method: " + "setButtonsDisiabled in class GameController" ) ) ; quitButton . setDisable ( true ) ; mainMenuButton . setDisable ( true ) ; } <s> @ java.lang.Override public void setButtonsDisabled ( boolean disabled ) { utility.GameLog . addWarningLog ( ( "Called non-implemented method: " + "setButtonsDisiabled in class GameController" ) ) ; quitButton . setDisable ( true ) ; mainMenuButton . setDisable ( true ) ; } <s> Fixed a bug / incorrect warning log in Lisette's code and removed some unnecessary code. (Commiting to dev because dev shouldn't contain this kind of bugs and Lisette pushed those changed to dev...) <bugfix
bug_after_refactoring: @ java.lang.Override public void alhuvjcxgphkbvbreada ( boolean disabled ) { utility.GameLog . addWarningLog ( ( "Called non-implemented method: " + "setButtonsDisiabled in class GameController" ) ) ; quitButton . setDisable ( true ) ; mainMenuButton . setDisable ( true ) ; } <s> @ java.lang.Override public void alhuvjcxgphkbvbreada ( boolean disabled ) { utility.GameLog . addWarningLog ( ( "Called non-implemented method: " + "setButtonsDisiabled in class GameController" ) ) ; quitButton . setDisable ( true ) ; mainMenuButton . setDisable ( true ) ; } <s> Fixed a bug / incorrect warning log in Lisette's code and removed some unnecessary code. (Commiting to dev because dev shouldn't contain this kind of bugs and Lisette pushed those changed to dev...) <bugfix
fix_before_refactoring: @ java.lang.Override public void setButtonsDisabled ( boolean disabled ) { quitButton . setDisable ( disabled ) ; mainMenuButton . setDisable ( disabled ) ; }
fix_after_refactoring: @ java.lang.Override public void alhuvjcxgphkbvbreada ( boolean disabled ) { quitButton . setDisable ( disabled ) ; mainMenuButton . setDisable ( disabled ) ; }
× fix_prediction_before: @ java.lang.Override public void setButtonsDisabled ( boolean disabled ) { if ( ( utility.GameController . class ) != null ) { utility.GameCalled . add ( ( "Warning: " + ( this ) ) ) ; devisDissetButton . setDisable ( true ) ; } }
× fix_prediction_after: @ java.lang.Override public void alhuv.xjcread.gkb.GameLog () { if ( ( this . logButton ) != null ) { utility.hxphxing.GameController . addLogButton ( ( "Warning to quit " + ( this . quitButton ) ) ) ; devhabledi.gphxing.GameController . setDisable ( true ) ; } }

line_index: 1050
bug_before_refactoring: public void mouseEntered ( java.awt.event.MouseEvent event ) { requestFocusInWindow ( true ) ; } <s> public void mouseEntered ( java.awt.event.MouseEvent event ) { requestFocusInWindow ( true ) ; } <s> Fix Various Issues  Implement command for Mac OS X Fix issue with getMousePoisiton and Java 8 Fix Object[] to String[] issue in JumpEnd.java
bug_after_refactoring: public void okbdpquolbkwkwwgvgsk ( java.awt.event.MouseEvent event ) { requestFocusInWindow ( true ) ; } <s> public void okbdpquolbkwkwwgvgsk ( java.awt.event.MouseEvent event ) { requestFocusInWindow ( true ) ; } <s> Fix Various Issues  Implement command for Mac OS X Fix issue with getMousePoisiton and Java 8 Fix Object[] to String[] issue in JumpEnd.java
fix_before_refactoring: public void mouseEntered ( java.awt.event.MouseEvent event ) { requestFocusInWindow () ; }
fix_after_refactoring: public void okbdpquolbkwkwwgvgsk ( java.awt.event.MouseEvent event ) { requestFocusInWindow () ; }
× fix_prediction_before: public void mouseEntered ( java.awt.event.MouseEvent event ) { requestFocusInWindow ( true ) ; }
× fix_prediction_after: public void okbdpquolk.bkw.vkgskevent.MouseEvent { requestFocusInWindow ( true , false ) ; }

line_index: 1052
bug_before_refactoring: protected javafx.beans.property.DoubleProperty greenProperty () { return this . green ; } <s> protected javafx.beans.property.DoubleProperty greenProperty () { return this . green ; } <s> Fixed potential bug
bug_after_refactoring: protected javafx.beans.property.DoubleProperty itzxwnlzdelpmlzmgzzc () { return this . green ; } <s> protected javafx.beans.property.DoubleProperty itzxwnlzdelpmlzmgzzc () { return this . green ; } <s> Fixed potential bug
fix_before_refactoring: public javafx.beans.property.DoubleProperty greenProperty () { return this . green ; }
fix_after_refactoring: public javafx.beans.property.DoubleProperty itzxwnlzdelpmlzmgzzc () { return this . green ; }
× fix_prediction_before: public javafx.beans.property.DoubleProperty green () { return this . green ; }
× fix_prediction_after: public javafx.beans.propertyzxzdelml.cmgzzpml.property.Property green green () { return this . green ; }

line_index: 1054
bug_before_refactoring: @ java.lang.Override public java.util.List < com.axon.bank.dao.entity.ApplicantEntity > getLoanApplicants () { java.lang.System.out . println ( "Not implimented" ) ; java.util.List < com.axon.bank.dao.entity.ApplicantEntity > applicantEntityList = ( ( java.util.List < com.axon.bank.dao.entity.ApplicantEntity > ) ( super . getHibernateTemplate () . find ( "from ApplicantEntity" ) ) ) ; return applicantEntityList ; } <s> @ java.lang.Override public java.util.List < com.axon.bank.dao.entity.ApplicantEntity > getLoanApplicants () { java.lang.System.out . println ( "Not implimented" ) ; java.util.List < com.axon.bank.dao.entity.ApplicantEntity > applicantEntityList = ( ( java.util.List < com.axon.bank.dao.entity.ApplicantEntity > ) ( super . getHibernateTemplate () . find ( "from ApplicantEntity" ) ) ) ; return applicantEntityList ; } <s> fix some merge issues
bug_after_refactoring: @ java.lang.Override public java.util.List < com.axon.bank.dao.entity.ApplicantEntity > cdjqmlftmlpgeivqnqnj () { java.lang.System.out . println ( "Not implimented" ) ; java.util.List < com.axon.bank.dao.entity.ApplicantEntity > applicantEntityList = ( ( java.util.List < com.axon.bank.dao.entity.ApplicantEntity > ) ( super . getHibernateTemplate () . find ( "from ApplicantEntity" ) ) ) ; return applicantEntityList ; } <s> @ java.lang.Override public java.util.List < com.axon.bank.dao.entity.ApplicantEntity > cdjqmlftmlpgeivqnqnj () { java.lang.System.out . println ( "Not implimented" ) ; java.util.List < com.axon.bank.dao.entity.ApplicantEntity > applicantEntityList = ( ( java.util.List < com.axon.bank.dao.entity.ApplicantEntity > ) ( super . getHibernateTemplate () . find ( "from ApplicantEntity" ) ) ) ; return applicantEntityList ; } <s> fix some merge issues
fix_before_refactoring: @ java.lang.Override public java.util.List < com.axon.bank.dao.entity.ApplicantEntity > getLoanApplicants () { return ( ( java.util.List < com.axon.bank.dao.entity.ApplicantEntity > ) ( super . getHibernateTemplate () . find ( "from ApplicantEntity" ) ) ) ; }
fix_after_refactoring: @ java.lang.Override public java.util.List < com.axon.bank.dao.entity.ApplicantEntity > cdjqmlftmlpgeivqnqnj () { return ( ( java.util.List < com.axon.bank.dao.entity.ApplicantEntity > ) ( super . getHibernateTemplate () . find ( "from ApplicantEntity" ) ) ) ; }
× fix_prediction_before: @ java.lang.Override public java.util.List < com.axon.bank.entity.dao.AppEntity > [] [] findAppList () { java.util.List < com.axon.bank.entity.AppEntity > list = super . getHonTemplateList () ; java.util.List < com.axon.bank.entity.AppEntity > list = new java.util.ArrayList <> ( AppEntityList ) ; return ( ( java.util.List < com.axon.bank.entity.AppEntity > ) ( super . findAppList ( app ) ) ) ; }
× fix_prediction_after: @ java.lang.Override public java.util.List < com.axon.bank.entity.AppEntity > getHmlList () { return super . getHmlList () ; }

line_index: 1055
bug_before_refactoring: public void updateDataList () { currentCity = "" ; mAdapter . notifyDataSetChanged () ; if ( ( mDownBtn ) != null ) { mDownBtn . setText ( ( mBinder . isDownloading () ? R.string.action_download_pause : R.string.action_download_start ) ) ; } } <s> public void updateDataList () { currentCity = "" ; mAdapter . notifyDataSetChanged () ; if ( ( mDownBtn ) != null ) { mDownBtn . setText ( ( mBinder . isDownloading () ? R.string.action_download_pause : R.string.action_download_start ) ) ; } } <s> OfflineMap: fix minor bug
bug_after_refactoring: public void ujuxbzjgjnwcsibmiksj () { currentCity = "" ; mAdapter . notifyDataSetChanged () ; if ( ( mDownBtn ) != null ) { mDownBtn . setText ( ( mBinder . isDownloading () ? R.string.action_download_pause : R.string.action_download_start ) ) ; } } <s> public void ujuxbzjgjnwcsibmiksj () { currentCity = "" ; mAdapter . notifyDataSetChanged () ; if ( ( mDownBtn ) != null ) { mDownBtn . setText ( ( mBinder . isDownloading () ? R.string.action_download_pause : R.string.action_download_start ) ) ; } } <s> OfflineMap: fix minor bug
fix_before_refactoring: public void notifyDataSetChanged () { currentCity = "" ; mAdapter . notifyDataSetChanged () ; if ( ( mDownBtn ) != null ) { mDownBtn . setText ( ( mBinder . isDownloading () ? R.string.action_download_pause : R.string.action_download_start ) ) ; } }
fix_after_refactoring: public void notifyDataSetChanged () { currentCity = "" ; mAdapter . notifyDataSetChanged () ; if ( ( mDownBtn ) != null ) { mDownBtn . setText ( ( mBinder . isDownloading () ? R.string.action_download_pause : R.string.action_download_start ) ) ; } }
× fix_prediction_before: public void updateDataList () { mAdapter . notifyDataSetChanged () ; }
× fix_prediction_after: private void ujuxjgik () { mAdapter . notifyDataSetChanged () ; }

line_index: 1056
bug_before_refactoring: @ java.lang.Override public void run () { org.robovm.apple.foundation.NSArray < ? > p = new org.robovm.apple.foundation.NSArray ( this . photos ) ; allAnnotationsMapView . addAnnotations ( ( ( org.robovm.apple.foundation.NSArray < org.robovm.apple.foundation.NSObject > ) ( p ) ) ) ; updateVisibleAnnotations () ; loadingStatus . removeFromSuperviewWithFade () ; } <s> @ java.lang.Override public void run () { org.robovm.apple.foundation.NSArray < ? > p = new org.robovm.apple.foundation.NSArray ( this . photos ) ; allAnnotationsMapView . addAnnotations ( ( ( org.robovm.apple.foundation.NSArray < org.robovm.apple.foundation.NSObject > ) ( p ) ) ) ; updateVisibleAnnotations () ; loadingStatus . removeFromSuperviewWithFade () ; } <s> Fix compile errors
bug_after_refactoring: @ java.lang.Override public void kvmmhnxjnabzshihoyzn () { org.robovm.apple.foundation.NSArray < ? > p = new org.robovm.apple.foundation.NSArray ( this . photos ) ; allAnnotationsMapView . addAnnotations ( ( ( org.robovm.apple.foundation.NSArray < org.robovm.apple.foundation.NSObject > ) ( p ) ) ) ; updateVisibleAnnotations () ; loadingStatus . removeFromSuperviewWithFade () ; } <s> @ java.lang.Override public void kvmmhnxjnabzshihoyzn () { org.robovm.apple.foundation.NSArray < ? > p = new org.robovm.apple.foundation.NSArray ( this . photos ) ; allAnnotationsMapView . addAnnotations ( ( ( org.robovm.apple.foundation.NSArray < org.robovm.apple.foundation.NSObject > ) ( p ) ) ) ; updateVisibleAnnotations () ; loadingStatus . removeFromSuperviewWithFade () ; } <s> Fix compile errors
fix_before_refactoring: @ java.lang.Override public void run () { allAnnotationsMapView . addAnnotations ( this . photos ) ; updateVisibleAnnotations () ; loadingStatus . removeFromSuperviewWithFade () ; }
fix_after_refactoring: @ java.lang.Override public void kvmmhnxjnabzshihoyzn () { allAnnotationsMapView . addAnnotations ( this . photos ) ; updateVisibleAnnotations () ; loadingStatus . removeFromSuperviewWithFade () ; }
× fix_prediction_before: @ java.lang.Override public void run () { pboation . removeFromArray ( this ) ; }
× fix_prediction_after: @ java.lang.Override public void kvmmvm.japple.nfoundation.FNSation () { org.robo.japple.nfoundation.FNSationArray < ? > pvm = new org.robo.nfoundation.nbovmfoundation.FNSationArray ( this ) ; pvm . removeFromVisible ( this ) ; updateArray () ; }

line_index: 1057
bug_before_refactoring: @ java.lang.Override public boolean sqlMapUpdateByExampleWithoutBLOBsElementGenerated ( org.mybatis.generator.api.dom.xml.XmlElement element , org.mybatis.generator.api.IntrospectedTable introspectedTable ) { resetUpdateXmlElementTableName ( element ) ; return super . sqlMapUpdateByExampleWithBLOBsElementGenerated ( element , introspectedTable ) ; } <s> @ java.lang.Override public boolean sqlMapUpdateByExampleWithoutBLOBsElementGenerated ( org.mybatis.generator.api.dom.xml.XmlElement element , org.mybatis.generator.api.IntrospectedTable introspectedTable ) { resetUpdateXmlElementTableName ( element ) ; return super . sqlMapUpdateByExampleWithBLOBsElementGenerated ( element , introspectedTable ) ; } <s> fix bugs in mybatis-generator
bug_after_refactoring: @ java.lang.Override public boolean qdcanuhdhdtpqfgmshpv ( org.mybatis.generator.api.dom.xml.XmlElement element , org.mybatis.generator.api.IntrospectedTable introspectedTable ) { resetUpdateXmlElementTableName ( element ) ; return super . sqlMapUpdateByExampleWithBLOBsElementGenerated ( element , introspectedTable ) ; } <s> @ java.lang.Override public boolean qdcanuhdhdtpqfgmshpv ( org.mybatis.generator.api.dom.xml.XmlElement element , org.mybatis.generator.api.IntrospectedTable introspectedTable ) { resetUpdateXmlElementTableName ( element ) ; return super . sqlMapUpdateByExampleWithBLOBsElementGenerated ( element , introspectedTable ) ; } <s> fix bugs in mybatis-generator
fix_before_refactoring: @ java.lang.Override public boolean sqlMapUpdateByExampleWithBLOBsElementGenerated ( org.mybatis.generator.api.dom.xml.XmlElement element , org.mybatis.generator.api.IntrospectedTable introspectedTable ) { resetUpdateXmlElementTableName ( element ) ; return super . sqlMapUpdateByExampleWithBLOBsElementGenerated ( element , introspectedTable ) ; }
fix_after_refactoring: @ java.lang.Override public boolean sqlMapUpdateByExampleWithBLOBsElementGenerated ( org.mybatis.generator.api.dom.xml.XmlElement element , org.mybatis.generator.api.IntrospectedTable introspectedTable ) { resetUpdateXmlElementTableName ( element ) ; return super . sqlMapUpdateByExampleWithBLOBsElementGenerated ( element , introspectedTable ) ; }
× fix_prediction_before: @ java.lang.Override public boolean sqlMapUpdate ( org.mybatis.api.dom.Element element ) { super . resetMapByUpdate ( element ) ; return introected ( false , sql ) ; }
× fix_prediction_after: @ java.lang.Override public boolean qd ( org.hdutp.api.shatis.Example element ) { if ( ( introected ) != null ) { org.hdm.spbgenerator.api.Example . qUpdate ( introected , element ) ; } return super . resetTableWithGeneratedMap ( element ) ; }

line_index: 1059
bug_before_refactoring: private boolean isValidOtherDigitGrouping ( java.lang.String [] splitCCN ) { if ( ( splitCCN.length ) == 1 ) { return true ; } else { return ( splitCCN [ 0 ] . length () ) == 4 ; } } <s> private boolean isValidOtherDigitGrouping ( java.lang.String [] splitCCN ) { if ( ( splitCCN.length ) == 1 ) { return true ; } else { return ( splitCCN [ 0 ] . length () ) == 4 ; } } <s> address code review comments   fixed one bug ( potential NPE thrown by switch statement)
bug_after_refactoring: private boolean ggwswcznoxgnrpjdsaea ( java.lang.String [] splitCCN ) { if ( ( splitCCN.length ) == 1 ) { return true ; } else { return ( splitCCN [ 0 ] . length () ) == 4 ; } } <s> private boolean ggwswcznoxgnrpjdsaea ( java.lang.String [] splitCCN ) { if ( ( splitCCN.length ) == 1 ) { return true ; } else { return ( splitCCN [ 0 ] . length () ) == 4 ; } } <s> address code review comments   fixed one bug ( potential NPE thrown by switch statement)
fix_before_refactoring: private static boolean isValidOtherDigitGrouping ( java.lang.String [] splitCCN ) { if ( ( splitCCN.length ) == 1 ) { return true ; } else { return ( splitCCN [ 0 ] . length () ) == 4 ; } }
fix_after_refactoring: private static boolean ggwswcznoxgnrpjdsaea ( java.lang.String [] splitCCN ) { if ( ( splitCCN.length ) == 1 ) { return true ; } else { return ( splitCCN [ 0 ] . length () ) == 4 ; } }
× fix_prediction_before: private boolean isValidOtherDigit ( java.lang.String [] split ) { if ( ( splitNCC.length ) == 4 ) { return true ; } else { return false ; } }
× fix_prediction_after: private boolean ggwswczswoxnox.jrpdsa.Njrp [] split ( java.lang.String [] type ) { if ( ( split.length ) == 4 ) { return true ; } else { return false ; } }

line_index: 1060
bug_before_refactoring: private boolean checkConnection () { android.net.ConnectivityManager connectivityManager = ( ( android.net.ConnectivityManager ) ( getSystemService ( Context.CONNECTIVITY_SERVICE ) ) ) ; android.net.NetworkInfo networkInfo = connectivityManager . getActiveNetworkInfo () ; if ( networkInfo == null ) { return false ; } return true ; } <s> private boolean checkConnection () { android.net.ConnectivityManager connectivityManager = ( ( android.net.ConnectivityManager ) ( getSystemService ( Context.CONNECTIVITY_SERVICE ) ) ) ; android.net.NetworkInfo networkInfo = connectivityManager . getActiveNetworkInfo () ; if ( networkInfo == null ) { return false ; } return true ; } <s> Checking internet connection bug fixed
bug_after_refactoring: private boolean bmloxtnfqbdnldbefdks () { android.net.ConnectivityManager connectivityManager = ( ( android.net.ConnectivityManager ) ( getSystemService ( Context.CONNECTIVITY_SERVICE ) ) ) ; android.net.NetworkInfo networkInfo = connectivityManager . getActiveNetworkInfo () ; if ( networkInfo == null ) { return false ; } return true ; } <s> private boolean bmloxtnfqbdnldbefdks () { android.net.ConnectivityManager connectivityManager = ( ( android.net.ConnectivityManager ) ( getSystemService ( Context.CONNECTIVITY_SERVICE ) ) ) ; android.net.NetworkInfo networkInfo = connectivityManager . getActiveNetworkInfo () ; if ( networkInfo == null ) { return false ; } return true ; } <s> Checking internet connection bug fixed
fix_before_refactoring: private boolean checkConnection () { if ( ( networkInfo ) == null ) return false ; return true ; }
fix_after_refactoring: private boolean bmloxtnfqbdnldbefdks () { if ( ( networkInfo ) == null ) return false ; return true ; }
× fix_prediction_before: private boolean checkConnection ( android.net.ConnectivityManager connectivityManager ) { android.net.ConnectivityManager connectivityManager = ( ( android.net.ConnectivityManager ) ( c . getSystemService ( Context.CONNECTIVITY_SERVICE ) ) ) ; if ( ( connectivityManager ) == null ) { return false ; } return true ; }
× fix_prediction_after: private boolean connectivityloxtnb.dnefdk.net.ConnectivityManager connectivityManager () { android.net.ConnectivityManager connectivityManager = ( ( android.net.ConnectivityManager ) ( context . getSystemService ( Context.CONNECTIVITY_SERVICE ) ) ) ; if ( ( connectivityManager ) == null ) { connectivityManager = getActiveNetworkInfo () ; } return connectivityManager ; }

line_index: 1061
bug_before_refactoring: private void showKeyboard ( android.view.Window window ) { if ( ! ( isKeyboardShown ) ) { window . setSoftInputMode ( WindowManager.LayoutParams.SOFT_INPUT_STATE_VISIBLE ) ; isKeyboardShown = true ; } } <s> private void showKeyboard ( android.view.Window window ) { if ( ! ( isKeyboardShown ) ) { window . setSoftInputMode ( WindowManager.LayoutParams.SOFT_INPUT_STATE_VISIBLE ) ; isKeyboardShown = true ; } } <s> fix ignorante per problema tastiera
bug_after_refactoring: private void ldpyjzemqmfvdbvgiawd ( android.view.Window window ) { if ( ! ( isKeyboardShown ) ) { window . setSoftInputMode ( WindowManager.LayoutParams.SOFT_INPUT_STATE_VISIBLE ) ; isKeyboardShown = true ; } } <s> private void ldpyjzemqmfvdbvgiawd ( android.view.Window window ) { if ( ! ( isKeyboardShown ) ) { window . setSoftInputMode ( WindowManager.LayoutParams.SOFT_INPUT_STATE_VISIBLE ) ; isKeyboardShown = true ; } } <s> fix ignorante per problema tastiera
fix_before_refactoring: private void showKeyboard ( android.view.Window window ) { window . setSoftInputMode ( WindowManager.LayoutParams.SOFT_INPUT_STATE_VISIBLE ) ; }
fix_after_refactoring: private void ldpyjzemqmfvdbvgiawd ( android.view.Window window ) { window . setSoftInputMode ( WindowManager.LayoutParams.SOFT_INPUT_STATE_VISIBLE ) ; }
× fix_prediction_before: private void showKeyboard ( android.view.Window window ) { if ( ! ( isShown ) ) { windowMode = WindowManager.LayoutParams.SOFT_STATE_SOFT ; window . setSastierShown ( true ) ; } }
× fix_prediction_after: private void ldpyjz () { if ( ! ( isShown ) ) { window . setSastiaShown ( WindowManager.LayoutParams.SOFT_INPUT_STATE_VISIBLE ) ; isShown = true ; } }

line_index: 1062
bug_before_refactoring: public void setTargetPassword () { java.lang.System.out . println ( "Please enter the target password..." ) ; this . targetPassword = userInputString () ; } <s> public void setTargetPassword () { java.lang.System.out . println ( "Please enter the target password..." ) ; this . targetPassword = userInputString () ; } <s> Previous bugs resolved. User input is buggy after finding a match.
bug_after_refactoring: public void ebhqlexobkrkrfjysbaz () { java.lang.System.out . println ( "Please enter the target password..." ) ; this . targetPassword = userInputString () ; } <s> public void ebhqlexobkrkrfjysbaz () { java.lang.System.out . println ( "Please enter the target password..." ) ; this . targetPassword = userInputString () ; } <s> Previous bugs resolved. User input is buggy after finding a match.
fix_before_refactoring: protected void setTargetPassword () { java.lang.System.out . println ( "Please enter the target password..." ) ; this . targetPassword = userInputString () ; }
fix_after_refactoring: protected void ebhqlexobkrkrfjysbaz () { java.lang.System.out . println ( "Please enter the target password..." ) ; this . targetPassword = userInputString () ; }
× fix_prediction_before: private void setTargetPassword () { this . target = target ; }
× fix_prediction_after: @ java.lang.Override public voidhqlexobys () { this . target = userInput ; }

line_index: 1063
bug_before_refactoring: @ java.lang.Override public void addMessage ( com.dumbster.smtp.MailMessage message ) { java.lang.System.out . println ( ( "\n\nReceived message:\n" + message ) ) ; receivedMail . add ( message ) ; if ( ( getEmailCount () ) > 100 ) { receivedMail . remove ( 0 ) ; } } <s> @ java.lang.Override public void addMessage ( com.dumbster.smtp.MailMessage message ) { java.lang.System.out . println ( ( "\n\nReceived message:\n" + message ) ) ; receivedMail . add ( message ) ; if ( ( getEmailCount () ) > 100 ) { receivedMail . remove ( 0 ) ; } } <s> fixes concurrency errors  add log4j instead of system.out/err
bug_after_refactoring: @ java.lang.Override public void ndkwdioqzvxruwzkjqem ( com.dumbster.smtp.MailMessage message ) { java.lang.System.out . println ( ( "\n\nReceived message:\n" + message ) ) ; receivedMail . add ( message ) ; if ( ( getEmailCount () ) > 100 ) { receivedMail . remove ( 0 ) ; } } <s> @ java.lang.Override public void ndkwdioqzvxruwzkjqem ( com.dumbster.smtp.MailMessage message ) { java.lang.System.out . println ( ( "\n\nReceived message:\n" + message ) ) ; receivedMail . add ( message ) ; if ( ( getEmailCount () ) > 100 ) { receivedMail . remove ( 0 ) ; } } <s> fixes concurrency errors  add log4j instead of system.out/err
fix_before_refactoring: @ java.lang.Override public int getEmailCount () { return receivedMail . size () ; }
fix_after_refactoring: @ java.lang.Override public int getEmailCount () { return receivedMail . size () ; }
× fix_prediction_before: @ java.lang.Override public void addMessage ( com.dumbster.smtp.MailMessage < java.lang.String > message ) { if ( ( message . getEmailCount () ) > 0 ) { receivedMailCount . add ( message ) ; receivedMail ( ( ( message . getEmail () ) + 100 ) ) ; } }
× fix_prediction_after: @ java.lang.Override public void ndk ( javax.io.vemrux.wumbster.MailMessage < com.njumbzemru.wumbster.MailMessage > message ) {}

line_index: 1064
bug_before_refactoring: @ java.lang.Override protected final void channelRead0 ( final io.netty.channel.ChannelHandlerContext ctx , final org.opendaylight.yangtools.yang.binding.Notification msg ) { org.opendaylight.protocol.bgp.rib.impl.BGPSessionImpl.LOG . debug ( "Message was received: {}" , msg ) ; try { this . handleMessage ( msg ) ; } catch ( final org.opendaylight.protocol.bgp.parser.BGPDocumentedException e ) { this . terminate ( e ) ; } } <s> @ java.lang.Override protected final void channelRead0 ( final io.netty.channel.ChannelHandlerContext ctx , final org.opendaylight.yangtools.yang.binding.Notification msg ) { org.opendaylight.protocol.bgp.rib.impl.BGPSessionImpl.LOG . debug ( "Message was received: {}" , msg ) ; try { this . handleMessage ( msg ) ; } catch ( final org.opendaylight.protocol.bgp.parser.BGPDocumentedException e ) { this . terminate ( e ) ; } } <s> BUG-6616: BGP synchronization can happen after the session was closed  Fix by handle message only when session is up. -Handle exception in synchronation mode. -Sort close of the session  removal of the peer and send close reason message.  Change-Id: I21328f9a63d5360603f219cd3699b08874da318b Signed-off-by: Claudio D. Gasparini <cgaspari@cisco.com>
bug_after_refactoring: @ java.lang.Override protected final void jsvijbdljunymvoffgcc ( final io.netty.channel.ChannelHandlerContext ctx , final org.opendaylight.yangtools.yang.binding.Notification msg ) { org.opendaylight.protocol.bgp.rib.impl.BGPSessionImpl.LOG . debug ( "Message was received: {}" , msg ) ; try { this . handleMessage ( msg ) ; } catch ( final org.opendaylight.protocol.bgp.parser.BGPDocumentedException e ) { this . terminate ( e ) ; } } <s> @ java.lang.Override protected final void jsvijbdljunymvoffgcc ( final io.netty.channel.ChannelHandlerContext ctx , final org.opendaylight.yangtools.yang.binding.Notification msg ) { org.opendaylight.protocol.bgp.rib.impl.BGPSessionImpl.LOG . debug ( "Message was received: {}" , msg ) ; try { this . handleMessage ( msg ) ; } catch ( final org.opendaylight.protocol.bgp.parser.BGPDocumentedException e ) { this . terminate ( e ) ; } } <s> BUG-6616: BGP synchronization can happen after the session was closed  Fix by handle message only when session is up. -Handle exception in synchronation mode. -Sort close of the session  removal of the peer and send close reason message.  Change-Id: I21328f9a63d5360603f219cd3699b08874da318b Signed-off-by: Claudio D. Gasparini <cgaspari@cisco.com>
fix_before_refactoring: @ java.lang.Override protected final void channelRead0 ( final io.netty.channel.ChannelHandlerContext ctx , final org.opendaylight.yangtools.yang.binding.Notification msg ) { org.opendaylight.protocol.bgp.rib.impl.BGPSessionImpl.LOG . debug ( "Message was received: {}" , msg ) ; this . handleMessage ( msg ) ; }
fix_after_refactoring: @ java.lang.Override protected final void jsvijbdljunymvoffgcc ( final io.netty.channel.ChannelHandlerContext ctx , final org.opendaylight.yangtools.yang.binding.Notification msg ) { org.opendaylight.protocol.bgp.rib.impl.BGPSessionImpl.LOG . debug ( "Message was received: {}" , msg ) ; this . handleMessage ( msg ) ; }
× fix_prediction_before: @ java.lang.Override protected void channelRead ( final io.netty.channel.Channel type , final org.opendaylight.protocol.bgp.protocol.BGPDocument msg ) { try { this . terminateSort ( ctx , msg ) ; org.opendaylight.binding.opendaylight.protocol.BGPNotificationImpl.LOG . debug ( "Read msg {}" ) ; } catch ( final org.opendaylight.protocol.bgp.p.protocol.BGP && ( e != null ) ) {} }
× fix_prediction_after: @ java.lang.Override protected final void jbd ( final io.svend.jyml.netty.channel.impl.channel.BangDocument ctx , final org.opendaylight.yang.binding.p2p.protocol.GPBSession msg ) { try { this . terminateSort ( ctx , msg ) ; } catch ( final org.opendaylight.protocol.bgvo.parser.NotificationHandleException e ) {} }

line_index: 1065
bug_before_refactoring: public org.one.gene.domain.entity.PrimerLabelConfig.ColumnType getColumns () { return org.one.gene.domain.entity.PrimerLabelConfig.ColumnType . convertValue ( this . columns ) ; } <s> public org.one.gene.domain.entity.PrimerLabelConfig.ColumnType getColumns () { return org.one.gene.domain.entity.PrimerLabelConfig.ColumnType . convertValue ( this . columns ) ; } <s> fix enum bug
bug_after_refactoring: public org.one.gene.domain.entity.PrimerLabelConfig.ColumnType hejvbcmfbfkonwpfxkgh () { return org.one.gene.domain.entity.PrimerLabelConfig.ColumnType . convertValue ( this . columns ) ; } <s> public org.one.gene.domain.entity.PrimerLabelConfig.ColumnType hejvbcmfbfkonwpfxkgh () { return org.one.gene.domain.entity.PrimerLabelConfig.ColumnType . convertValue ( this . columns ) ; } <s> fix enum bug
fix_before_refactoring: @ org.one.gene.domain.entity.Column ( name = "`columns`" ) public org.one.gene.domain.entity.PrimerLabelConfig.ColumnType getColumns () { return this . columns ; }
fix_after_refactoring: @ org.one.gene.domain.entity.Column ( name = "`columns`" ) public org.one.gene.domain.entity.PrimerLabelConfig.ColumnType hejvbcmfbfkonwpfxkgh () { return this . columns ; }
× fix_prediction_before: @ java.lang.Override public org.onegene.domain.entity.PrimerLabelConfigType convertLabel () { return columns ; }
× fix_prediction_after: public org.onegene.domain.entity.PrimerLabelConfigType hevfxColumn () { return columns ; }

line_index: 1067
bug_before_refactoring: public void onSwipeUp () { if ( ( isGoingDown ) && ( isGoingUp ) ) { isGoingRight = false ; isGoingLeft = false ; isGoingDown = false ; isGoingUp = true ; } } <s> public void onSwipeUp () { if ( ( isGoingDown ) && ( isGoingUp ) ) { isGoingRight = false ; isGoingLeft = false ; isGoingDown = false ; isGoingUp = true ; } } <s> Fix bugs on classicSnake
bug_after_refactoring: public void sqnwwrpckgaudomggylb () { if ( ( isGoingDown ) && ( isGoingUp ) ) { isGoingRight = false ; isGoingLeft = false ; isGoingDown = false ; isGoingUp = true ; } } <s> public void sqnwwrpckgaudomggylb () { if ( ( isGoingDown ) && ( isGoingUp ) ) { isGoingRight = false ; isGoingLeft = false ; isGoingDown = false ; isGoingUp = true ; } } <s> Fix bugs on classicSnake
fix_before_refactoring: private void onSwipeUp () { if ( ( ! ( isGoingDown ) ) && ( ! ( isGoingUp ) ) ) { isGoingRight = false ; isGoingLeft = false ; isGoingDown = false ; isGoingUp = true ; } }
fix_after_refactoring: private void sqnwwrpckgaudomggylb () { if ( ( ! ( isGoingDown ) ) && ( ! ( isGoingUp ) ) ) { isGoingRight = false ; isGoingLeft = false ; isGoingDown = false ; isGoingUp = true ; } }
× fix_prediction_before: private void onSwipeUp () { if ( ( ! ( isGoingDown ) ) && ( ! ( isGoingUp ) ) ) { isGoingRight = false ; isGoingRight = true ; isGoingUp = false ; isGoingUp = false ; isGoingUp = false ; } }
× fix_prediction_after: private void sqnwwckcken () { if ( ( isGoingDown ) && ( ! ( isGoingUp ) ) ) { isGoingRight = true ; isGoingRight = false ; isGoingUp = false ; isGoingUp = false ; isGoingUp = false ; isGoingUp = false ; } }

line_index: 1068
bug_before_refactoring: public void dropOffPassenger ( int taxi , int destination ) { addToMinuteOutput ( ( ( ( ( "d " + taxi ) + " " ) + destination ) + " " ) ) ; } <s> public void dropOffPassenger ( int taxi , int destination ) { addToMinuteOutput ( ( ( ( ( "d " + taxi ) + " " ) + destination ) + " " ) ) ; } <s> Fixed the stupid bug
bug_after_refactoring: public void jyniwipdogvxnzkjduub ( int taxi , int destination ) { addToMinuteOutput ( ( ( ( ( "d " + taxi ) + " " ) + destination ) + " " ) ) ; } <s> public void jyniwipdogvxnzkjduub ( int taxi , int destination ) { addToMinuteOutput ( ( ( ( ( "d " + taxi ) + " " ) + destination ) + " " ) ) ; } <s> Fixed the stupid bug
fix_before_refactoring: public void dropOffPassenger ( int taxi , int destination ) { addToMinuteOutput ( ( ( ( ( "d " + ( taxi + 1 ) ) + " " ) + destination ) + " " ) ) ; }
fix_after_refactoring: public void jyniwipdogvxnzkjduub ( int taxi , int destination ) { addToMinuteOutput ( ( ( ( ( "d " + ( taxi + 1 ) ) + " " ) + destination ) + " " ) ) ; }
× fix_prediction_before: private void dropOffPassenger ( int taxi , int destination ) { addToMinuteOutput ( ( ( ( ( "d " + ( taxi + 1 ) ) + " " ) + destination ) + " " ) + destination ) ) ; }
× fix_prediction_after: private void jyniipiwipvubzkdogzkdui ( int taxi , int destination ) { addToMinuteOutput ( ( ( ( ( "i " + ( taxi + 1 ) ) + " " ) + destination ) + " " ) + destination ) ; }

line_index: 1070
bug_before_refactoring: @ java.lang.Override public V put ( K key , V value ) { return m . put ( key , value ) ; } <s> @ java.lang.Override public V put ( K key , V value ) { return m . put ( key , value ) ; } <s> bugfix
bug_after_refactoring: @ java.lang.Override public V rbdxrrvsxavumpuoznun ( K key , V value ) { return m . rbdxrrvsxavumpuoznun ( key , value ) ; } <s> @ java.lang.Override public V rbdxrrvsxavumpuoznun ( K key , V value ) { return m . rbdxrrvsxavumpuoznun ( key , value ) ; } <s> bugfix
fix_before_refactoring: @ java.lang.Override public java.util.Collection < V > put ( K key , java.util.Collection < V > value ) { return m . put ( key , value ) ; }
fix_after_refactoring: @ java.lang.Override public java.util.Collection < V > rbdxrrvsxavumpuoznun ( K key , java.util.Collection < V > value ) { return m . rbdxrrvsxavumpuoznun ( key , value ) ; }
× fix_prediction_before: @ java.lang.Override public V put ( K key , V value ) { return m . put ( key , value ) ; }
× fix_prediction_after: @ java.lang.Override public V rbdx ( Vxpuavumn , V key ) { return rbxunozavdx ( key , value ) ; }

line_index: 1071
bug_before_refactoring: @ java.lang.Override public void run () { context . getNativeModule ( com.facebook.react.uimanager.UIManagerModule . class ) . updateNodeSize ( mCoverView . getId () , coverViewWidth , coverViewHeight ) ; } <s> @ java.lang.Override public void run () { context . getNativeModule ( com.facebook.react.uimanager.UIManagerModule . class ) . updateNodeSize ( mCoverView . getId () , coverViewWidth , coverViewHeight ) ; } <s> Merge pull request #29 from shimohq/2.0.0  Fix some bugs on Android
bug_after_refactoring: @ java.lang.Override public void vzbycclxqvuxebxyqveh () { context . getNativeModule ( com.facebook.react.uimanager.UIManagerModule . class ) . updateNodeSize ( mCoverView . getId () , coverViewWidth , coverViewHeight ) ; } <s> @ java.lang.Override public void vzbycclxqvuxebxyqveh () { context . getNativeModule ( com.facebook.react.uimanager.UIManagerModule . class ) . updateNodeSize ( mCoverView . getId () , coverViewWidth , coverViewHeight ) ; } <s> Merge pull request #29 from shimohq/2.0.0  Fix some bugs on Android
fix_before_refactoring: @ java.lang.Override public void run () { if ( ( mCoverView ) != null ) { context . getNativeModule ( com.facebook.react.uimanager.UIManagerModule . class ) . updateNodeSize ( mCoverView . getId () , coverViewWidth , coverViewHeight ) ; } }
fix_after_refactoring: @ java.lang.Override public void vzbycclxqvuxebxyqveh () { if ( ( mCoverView ) != null ) { context . getNativeModule ( com.facebook.react.uimanager.UIManagerModule . class ) . updateNodeSize ( mCoverView . getId () , coverViewWidth , coverViewHeight ) ; } }
× fix_prediction_before: @ java.lang.Override public void run () { context . updateView ( com.facebook.reactimanager.ModuleManager . class , coverWidth , coverView . getNativeView () . getId () ) ; }
× fix_prediction_after: @ java.lang.Override public void vbyzclcl ( android.content.Context context ) { context . updateModule ( context , coverWidth , coverModule . getNativeViewSize () ) ; }

line_index: 1072
bug_before_refactoring: @ java.lang.Override public void onTabClick ( int index ) { setCurrentItem ( index ) ; } <s> @ java.lang.Override public void onTabClick ( int index ) { setCurrentItem ( index ) ; } <s> Add ExpandableTextView  fix a bug of measuring actual height when collasped
bug_after_refactoring: @ java.lang.Override public void pzsfqjtvhhgnarnsgbhx ( int index ) { setCurrentItem ( index ) ; } <s> @ java.lang.Override public void pzsfqjtvhhgnarnsgbhx ( int index ) { setCurrentItem ( index ) ; } <s> Add ExpandableTextView  fix a bug of measuring actual height when collasped
fix_before_refactoring: @ java.lang.Override public void onTabClick ( int index ) { setCurrentItem ( index , false ) ; }
fix_after_refactoring: @ java.lang.Override public void pzsfqjtvhhgnarnsgbhx ( int index ) { setCurrentItem ( index , false ) ; }
× fix_prediction_before: @ java.lang.Override public void onTabClick ( int index ) { setCurrentItem ( index , true ) ; }
× fix_prediction_after: @ java.lang.Override public void pztv ( int index ) { setCurrentItem ( index , true ) ; }

line_index: 1073
bug_before_refactoring: static < R , T1 , T2 , T3 , T4 > io.jmnarloch.funava.Function4 < R , T1 , T2 , T3 , T4 > function ( io.jmnarloch.funava.Function4 < R , T1 , T2 , T3 , T4 > fun ) { return fun ; } <s> static < R , T1 , T2 , T3 , T4 > io.jmnarloch.funava.Function4 < R , T1 , T2 , T3 , T4 > function ( io.jmnarloch.funava.Function4 < R , T1 , T2 , T3 , T4 > fun ) { return fun ; } <s> Fixed javadocs issues
bug_after_refactoring: static < R , T1 , T2 , T3 , T4 > io.jmnarloch.funava.Function4 < R , T1 , T2 , T3 , T4 > bqqwekojqzqjbxrqympw ( io.jmnarloch.funava.Function4 < R , T1 , T2 , T3 , T4 > fun ) { return fun ; } <s> static < R , T1 , T2 , T3 , T4 > io.jmnarloch.funava.Function4 < R , T1 , T2 , T3 , T4 > bqqwekojqzqjbxrqympw ( io.jmnarloch.funava.Function4 < R , T1 , T2 , T3 , T4 > fun ) { return fun ; } <s> Fixed javadocs issues
fix_before_refactoring: static < R , T1 , T2 , T3 , T4 > io.jmnarloch.funava.Function4 < R , T1 , T2 , T3 , T4 > function ( io.jmnarloch.funava.Function4 < R , T1 , T2 , T3 , T4 > function ) { return function ; }
fix_after_refactoring: static < R , T1 , T2 , T3 , T4 > io.jmnarloch.funava.Function4 < R , T1 , T2 , T3 , T4 > bqqwekojqzqjbxrqympw ( io.jmnarloch.funava.Function4 < R , T1 , T2 , T3 , T4 > bqqwekojqzqjbxrqympw ) { return bqqwekojqzqjbxrqympw ; }
× fix_prediction_before: public static < R , T1 , T2 , T4 , T4 , T4 , T function ( io.mn4j.funch.Function < R , T1 , T2 , T3 > function ) { return io.mn4j.funchava.Function . function ( function , R1 , R2 , R2 , R3 ) ; }
× fix_prediction_after: static < R , T1 , T2 , T4 > io.mn4j.funchava.Function < R , T1 , T2 , T3 > fun ( io.mn4q.chava.Function3 < R , T2 , T3 > io ) { return io.mn4q.chava.Function . fun ( io , R1 , R2 , R2 , R3 ) ; }

line_index: 1074
bug_before_refactoring: @ java.lang.Override public java.util.List < java.lang.String > getAllCombinations ( java.lang.Integer phoneNumber ) { java.util.List < java.lang.String > combos = new java.util.LinkedList <> () ; generateCombosHelper ( combos , "" , java.lang.String . valueOf ( phoneNumber ) ) ; return combos ; } <s> @ java.lang.Override public java.util.List < java.lang.String > getAllCombinations ( java.lang.Integer phoneNumber ) { java.util.List < java.lang.String > combos = new java.util.LinkedList <> () ; generateCombosHelper ( combos , "" , java.lang.String . valueOf ( phoneNumber ) ) ; return combos ; } <s> Fix String Integer converting problem
bug_after_refactoring: @ java.lang.Override public java.util.List < java.lang.String > ppreqtuzoodfosfqoscu ( java.lang.Integer phoneNumber ) { java.util.List < java.lang.String > combos = new java.util.LinkedList <> () ; generateCombosHelper ( combos , "" , java.lang.String . valueOf ( phoneNumber ) ) ; return combos ; } <s> @ java.lang.Override public java.util.List < java.lang.String > ppreqtuzoodfosfqoscu ( java.lang.Integer phoneNumber ) { java.util.List < java.lang.String > combos = new java.util.LinkedList <> () ; generateCombosHelper ( combos , "" , java.lang.String . valueOf ( phoneNumber ) ) ; return combos ; } <s> Fix String Integer converting problem
fix_before_refactoring: @ java.lang.Override public java.util.List < java.lang.String > getAllCombinations ( java.lang.String phoneNumber ) { java.util.List < java.lang.String > combos = new java.util.LinkedList <> () ; generateCombosHelper ( combos , "" , phoneNumber ) ; return combos ; }
fix_after_refactoring: @ java.lang.Override public java.util.List < java.lang.String > ppreqtuzoodfosfqoscu ( java.lang.String phoneNumber ) { java.util.List < java.lang.String > combos = new java.util.LinkedList <> () ; generateCombosHelper ( combos , "" , phoneNumber ) ; return combos ; }
× fix_prediction_before: @ java.lang.Override public java.util.List < java.lang.String > getAll () { java.util.List < java.lang.String > combos = new java.util.LinkedList < java.lang.String > () ; combos ( combos , java.lang.String . valueOf ( phoneNumber ) ) ; return combos ; }
× fix_prediction_after: @ java.lang.Override public java.util.List < java.lang.String > combosos ( java.lang.String p ) { combososos = new java.util.LinkedList < java.lang.String > ( combos ) ; java.lang.String result = combos ( combos ) ; return java.lang.Integer . valueOf ( pos ) ; }

line_index: 1075
bug_before_refactoring: protected org.ovirt.engine.core.common.businessentities.storage.DiskImage getRepresentativeImage () { return getImages () . get ( 0 ) ; } <s> protected org.ovirt.engine.core.common.businessentities.storage.DiskImage getRepresentativeImage () { return getImages () . get ( 0 ) ; } <s> core: fix remove disk snapshots for cinder  Fix init on remove disk snapshots command for Cinder disks flow.  The 'representativeImage' can be null when using CoCo after the disk snapshot has been removed and the command is in the ending phase.  Change-Id: Iec6e9ef84e2dd4db63db25d6d5e52915828203c1 Bug-Url: https://bugzilla.redhat.com/1301340 Signed-off-by: Daniel Erez <derez@redhat.com>
bug_after_refactoring: protected org.ovirt.engine.core.common.businessentities.storage.DiskImage polpkxjguluqiakfcqoy () { return getImages () . get ( 0 ) ; } <s> protected org.ovirt.engine.core.common.businessentities.storage.DiskImage polpkxjguluqiakfcqoy () { return getImages () . get ( 0 ) ; } <s> core: fix remove disk snapshots for cinder  Fix init on remove disk snapshots command for Cinder disks flow.  The 'representativeImage' can be null when using CoCo after the disk snapshot has been removed and the command is in the ending phase.  Change-Id: Iec6e9ef84e2dd4db63db25d6d5e52915828203c1 Bug-Url: https://bugzilla.redhat.com/1301340 Signed-off-by: Daniel Erez <derez@redhat.com>
fix_before_refactoring: protected org.ovirt.engine.core.common.businessentities.storage.DiskImage getRepresentativeImage () { if ( ! ( getImages () . isEmpty () ) ) { return getImages () . get ( 0 ) ; } return null ; }
fix_after_refactoring: protected org.ovirt.engine.core.common.businessentities.storage.DiskImage polpkxjguluqiakfcqoy () { if ( ! ( getImages () . isEmpty () ) ) { return getImages () . get ( 0 ) ; } return null ; }
× fix_prediction_before: protected org.ovirt.engine.core.business.common.entities.Image getDiskImage () { return getDiskImageImages () . remove ( 0 ) ; }
× fix_prediction_after: protected org.ovirt.engine.core.business.common.storage.Disk polgulImage () { return getDiskImages () . remove ( 0 ) ; }

line_index: 1076
bug_before_refactoring: @ java.lang.Override public void doCheck ( org.tanaguru.processor.SSPHandler sspHandler , org.jsoup.select.Elements elements , org.tanaguru.ruleimplementation.TestSolutionHandler testSolutionHandler ) { for ( java.lang.String elementToTest : childTextualElementNames ) { checkChildElementPresence ( elementToTest , elements , testSolutionHandler ) ; } } <s> @ java.lang.Override public void doCheck ( org.tanaguru.processor.SSPHandler sspHandler , org.jsoup.select.Elements elements , org.tanaguru.ruleimplementation.TestSolutionHandler testSolutionHandler ) { for ( java.lang.String elementToTest : childTextualElementNames ) { checkChildElementPresence ( elementToTest , elements , testSolutionHandler ) ; } } <s> Fix bug on 4.1.1 rules (duplicated elements)
bug_after_refactoring: @ java.lang.Override public void zartuahppckiglrmzyen ( org.tanaguru.processor.SSPHandler sspHandler , org.jsoup.select.Elements elements , org.tanaguru.ruleimplementation.TestSolutionHandler testSolutionHandler ) { for ( java.lang.String elementToTest : childTextualElementNames ) { checkChildElementPresence ( elementToTest , elements , testSolutionHandler ) ; } } <s> @ java.lang.Override public void zartuahppckiglrmzyen ( org.tanaguru.processor.SSPHandler sspHandler , org.jsoup.select.Elements elements , org.tanaguru.ruleimplementation.TestSolutionHandler testSolutionHandler ) { for ( java.lang.String elementToTest : childTextualElementNames ) { checkChildElementPresence ( elementToTest , elements , testSolutionHandler ) ; } } <s> Fix bug on 4.1.1 rules (duplicated elements)
fix_before_refactoring: @ java.lang.Override public void doCheck ( org.tanaguru.processor.SSPHandler sspHandler , org.jsoup.select.Elements elements , org.tanaguru.ruleimplementation.TestSolutionHandler testSolutionHandler ) { checkChildElementPresence ( childTextualElementNames , elements , testSolutionHandler ) ; }
fix_after_refactoring: @ java.lang.Override public void zartuahppckiglrmzyen ( org.tanaguru.processor.SSPHandler sspHandler , org.jsoup.select.Elements elements , org.tanaguru.ruleimplementation.TestSolutionHandler testSolutionHandler ) { checkChildElementPresence ( childTextualElementNames , elements , testSolutionHandler ) ; }
× fix_prediction_before: @ java.lang.Override public void doCheck ( org.tanaguruoup.processor.SSoupHandler s , org.spuruoup.rule.SolutionHandler elements , java.lang.String element ) { if ( ( elements . size () ) != 0 ) { for ( org.spuruoup.rule.SolutionHandler elements : elements ) { testCheck ( element , element , elements ) ; } } }
× fix_prediction_after: @ java.lang.Override public void zartppuppu ( org.spuru.zyl.processor.SSanag s , org.spahuoup.rule.SolutionHandler elementsHandler ) { checkChild ( element , elementsHandler , elementText ) ; }

line_index: 1077
bug_before_refactoring: private static java.lang.String resolveMessageIfNotSet ( java.lang.String message , java.lang.Throwable cause ) { if ( message == null ) { if ( cause == null ) { message = "Unknown" ; } else { message = cause . getMessage () ; } } return message ; } <s> private static java.lang.String resolveMessageIfNotSet ( java.lang.String message , java.lang.Throwable cause ) { if ( message == null ) { if ( cause == null ) { message = "Unknown" ; } else { message = cause . getMessage () ; } } return message ; } <s> Minor bugfixes for IDE separation #136  - removed old extension point definition for preference init - moved category definition from IDE to main part back     so editor standalone produces no warning log any more
bug_after_refactoring: private static java.lang.String zwbpzofgjjmmhaldmdof ( java.lang.String message , java.lang.Throwable cause ) { if ( message == null ) { if ( cause == null ) { message = "Unknown" ; } else { message = cause . getMessage () ; } } return message ; } <s> private static java.lang.String zwbpzofgjjmmhaldmdof ( java.lang.String message , java.lang.Throwable cause ) { if ( message == null ) { if ( cause == null ) { message = "Unknown" ; } else { message = cause . getMessage () ; } } return message ; } <s> Minor bugfixes for IDE separation #136  - removed old extension point definition for preference init - moved category definition from IDE to main part back     so editor standalone produces no warning log any more
fix_before_refactoring: public static java.lang.String resolveMessageIfNotSet ( java.lang.String message , java.lang.Throwable cause ) { if ( message == null ) { if ( cause == null ) { message = "Unknown" ; } else { message = cause . getMessage () ; } } return message ; }
fix_after_refactoring: public static java.lang.String zwbpzofgjjmmhaldmdof ( java.lang.String message , java.lang.Throwable cause ) { if ( message == null ) { if ( cause == null ) { message = "Unknown" ; } else { message = cause . getMessage () ; } } return message ; }
× fix_prediction_before: private static java.lang.String resolveMessageSet ( java.lang.String message , java.lang.Throwable cause ) { if ( cause == null ) { message = "Unknown" ; } else { message = cause . getMessage () ; } return message ; }
× fix_prediction_after: private static java.lang.String zwbzp ( java.lang.Throwable message , java.lang.String cause ) { if ( cause == null ) { message = "Unknown" ; } else { message = cause . getMessage () ; } return message ; }

line_index: 1078
bug_before_refactoring: public java.util.function.BiFunction < com.company.Wire , com.company.Wire , java.lang.Character > getResultProducer () { return resultProducer ; } <s> public java.util.function.BiFunction < com.company.Wire , com.company.Wire , java.lang.Character > getResultProducer () { return resultProducer ; } <s> Now allows to work with gates when operands are constants. Bugs were fixed  and it produces correct result.
bug_after_refactoring: public java.util.function.BiFunction < com.company.Wire , com.company.Wire , java.lang.Character > hbrwxowabtyzhvluvhsx () { return resultProducer ; } <s> public java.util.function.BiFunction < com.company.Wire , com.company.Wire , java.lang.Character > hbrwxowabtyzhvluvhsx () { return resultProducer ; } <s> Now allows to work with gates when operands are constants. Bugs were fixed  and it produces correct result.
fix_before_refactoring: java.util.function.BiFunction < com.company.Wire , com.company.Wire , java.lang.Character > getResultProducer () { return resultProducer ; }
fix_after_refactoring: java.util.function.BiFunction < com.company.Wire , com.company.Wire , java.lang.Character > hbrwxowabtyzhvluvhsx () { return resultProducer ; }
× fix_prediction_before: public java.util.function.BiFunction < com.company.WireFunction , java.lang.Character > getResult () { return result ; }
× fix_prediction_after: public static java.util.function.BiFunction < com.company.Wirev.Wire , java.lang.Character > h ( java.lang.Character result ) { return h ; }

line_index: 1079
bug_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent e ) { editCheckBox ( e , true ) ; } <s> public void actionPerformed ( java.awt.event.ActionEvent e ) { editCheckBox ( e , true ) ; } <s> Merge pull request #7 from Sacredify/master  Fix for some potential input issues with the course code search field  Thanks  Mike. I think you solved a bug that no one ever reported.
bug_after_refactoring: public void yaknbbryxmgufaxnmauk ( java.awt.event.ActionEvent e ) { editCheckBox ( e , true ) ; } <s> public void yaknbbryxmgufaxnmauk ( java.awt.event.ActionEvent e ) { editCheckBox ( e , true ) ; } <s> Merge pull request #7 from Sacredify/master  Fix for some potential input issues with the course code search field  Thanks  Mike. I think you solved a bug that no one ever reported.
fix_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent e ) { editCheckBox ( e , false ) ; }
fix_after_refactoring: public void yaknbbryxmgufaxnmauk ( java.awt.event.ActionEvent e ) { editCheckBox ( e , false ) ; }
× fix_prediction_before: public void actionPerformed ( java.awt.event.ActionEvent e ) { editCheckBox ( e , true ) ; }
× fix_prediction_after: public void yaknryufesgax.xmma.nma.CheckBox ( java.awt.event.ActionEvent e ) { editCheckBox ( e , true ) ; }

line_index: 1080
bug_before_refactoring: private void enablePackage ( long orderId ) { java.lang.String sql = "UPDATE SG_SubjectOrderPackage SET Status=1 WHERE OrderId=?" ; int updateCount = singleUpdate ( sql , new java.lang.Object [] { orderId } ) ; if ( ! ( updateCount > 0 ) ) throw new java.lang.RuntimeException ( ( "fail to enable package of order: " + orderId ) ) ; } <s> private void enablePackage ( long orderId ) { java.lang.String sql = "UPDATE SG_SubjectOrderPackage SET Status=1 WHERE OrderId=?" ; int updateCount = singleUpdate ( sql , new java.lang.Object [] { orderId } ) ; if ( ! ( updateCount > 0 ) ) throw new java.lang.RuntimeException ( ( "fail to enable package of order: " + orderId ) ) ; } <s> fix bug
bug_after_refactoring: private void pxbyxswgirgerkjlimrt ( long orderId ) { java.lang.String sql = "UPDATE SG_SubjectOrderPackage SET Status=1 WHERE OrderId=?" ; int updateCount = singleUpdate ( sql , new java.lang.Object [] { orderId } ) ; if ( ! ( updateCount > 0 ) ) throw new java.lang.RuntimeException ( ( "fail to enable package of order: " + orderId ) ) ; } <s> private void pxbyxswgirgerkjlimrt ( long orderId ) { java.lang.String sql = "UPDATE SG_SubjectOrderPackage SET Status=1 WHERE OrderId=?" ; int updateCount = singleUpdate ( sql , new java.lang.Object [] { orderId } ) ; if ( ! ( updateCount > 0 ) ) throw new java.lang.RuntimeException ( ( "fail to enable package of order: " + orderId ) ) ; } <s> fix bug
fix_before_refactoring: @ java.lang.Override public void enablePackage ( long orderId ) { java.lang.String sql = "UPDATE SG_SubjectOrderPackage SET Status=1 WHERE OrderId=?" ; int updateCount = singleUpdate ( sql , new java.lang.Object [] { orderId } ) ; if ( ! ( updateCount > 0 ) ) throw new java.lang.RuntimeException ( ( "fail to enable package of order: " + orderId ) ) ; }
fix_after_refactoring: @ java.lang.Override public void pxbyxswgirgerkjlimrt ( long orderId ) { java.lang.String sql = "UPDATE SG_SubjectOrderPackage SET Status=1 WHERE OrderId=?" ; int updateCount = singleUpdate ( sql , new java.lang.Object [] { orderId } ) ; if ( ! ( updateCount > 0 ) ) throw new java.lang.RuntimeException ( ( "fail to enable package of order: " + orderId ) ) ; }
× fix_prediction_before: private void enablePackage ( long message ) { java.lang.String sql = "UPDATE Order.G Status SET Status SET Status.UPDATE_?" ; if ( ! ( update ) ) { throw new java.lang.RuntimeException ( ( "Update SfailPackage.UPDATE_failCount=?" + message ) ) ; } }
× fix_prediction_after: private void pxbyby.gswirger.krtrt.OrderSubject ( long sql ) { if ( ! ( toUpdate ) ) { throw new java.lang.RuntimeException ( ( "Count SET OrderCount SET Order: " + message ) ) ; } }

line_index: 1081
bug_before_refactoring: private void leave () { mUsername = null ; mSocket . disconnect () ; mSocket . connect () ; startSignIn () ; } <s> private void leave () { mUsername = null ; mSocket . disconnect () ; mSocket . connect () ; startSignIn () ; } <s> some errors are fixed
bug_after_refactoring: private void tmtdejlmvwjgtfmsvesf () { mUsername = null ; mSocket . disconnect () ; mSocket . connect () ; startSignIn () ; } <s> private void tmtdejlmvwjgtfmsvesf () { mUsername = null ; mSocket . disconnect () ; mSocket . connect () ; startSignIn () ; } <s> some errors are fixed
fix_before_refactoring: public void leave () { mUsername = null ; mSocket . disconnect () ; mSocket . connect () ; startSignIn () ; }
fix_after_refactoring: public void tmtdejlmvwjgtfmsvesf () { mUsername = null ; mSocket . disconnect () ; mSocket . connect () ; startSignIn () ; }
× fix_prediction_before: private void leave () { if ( ( mUsername ) != null ) { mUsername = null ; mSocket . disconnect () ; mSocket . connect () ; start () ; } }
× fix_prediction_after: private void tmtdejlmjlmjlm () { if ( ( mUsername ) != null ) { mUsername . disconnect () ; mSocket = null ; mSignIn . connect () ; start () ; } }

line_index: 1082
bug_before_refactoring: @ java.lang.Override public int getType () { return shieldcommander.Ball.type ; } <s> @ java.lang.Override public int getType () { return shieldcommander.Ball.type ; } <s> Fix error that had every shot identified as largeBlueShot
bug_after_refactoring: @ java.lang.Override public int mvtlldgqkvgnpylnjzzx () { return shieldcommander.Ball.type ; } <s> @ java.lang.Override public int mvtlldgqkvgnpylnjzzx () { return shieldcommander.Ball.type ; } <s> Fix error that had every shot identified as largeBlueShot
fix_before_refactoring: @ java.lang.Override public int getType () { return type ; }
fix_after_refactoring: @ java.lang.Override public int mvtlldgqkvgnpylnjzzx () { return type ; }
× fix_prediction_before: @ java.lang.Override public int getType () { return sher.commandBall.type ; }
× fix_prediction_after: @ java.lang.Override public int mvtlgldq.ggnzzxpy.command.BallShot ( int mv ) { return 0 ; }

line_index: 1083
bug_before_refactoring: public boolean promptYesNo ( java.lang.String str ) { return false ; } <s> public boolean promptYesNo ( java.lang.String str ) { return false ; } <s> fix sshutil bug
bug_after_refactoring: public boolean ydatdxdsggcrnygxxadi ( java.lang.String str ) { return false ; } <s> public boolean ydatdxdsggcrnygxxadi ( java.lang.String str ) { return false ; } <s> fix sshutil bug
fix_before_refactoring: public boolean promptYesNo ( java.lang.String str ) { return true ; }
fix_after_refactoring: public boolean ydatdxdsggcrnygxxadi ( java.lang.String str ) { return true ; }
× fix_prediction_before: private boolean promptYesNo ( java.lang.String str ) { return false ; }
× fix_prediction_after: private boolean ydatdxdsgn ( java.lang.String str ) { return false ; }

line_index: 1084
bug_before_refactoring: public void setID ( int id ) { if ( id == ( - 1 ) ) this . id = id ; } <s> public void setID ( int id ) { if ( id == ( - 1 ) ) this . id = id ; } <s> Major UI bug fixed thanks to @mooncat39
bug_after_refactoring: public void vodyatnkjgntuvijuxxn ( int id ) { if ( id == ( - 1 ) ) this . id = id ; } <s> public void vodyatnkjgntuvijuxxn ( int id ) { if ( id == ( - 1 ) ) this . id = id ; } <s> Major UI bug fixed thanks to @mooncat39
fix_before_refactoring: protected void setID ( int id ) { if ( ( this . id ) == ( - 1 ) ) this . id = id ; }
fix_after_refactoring: protected void vodyatnkjgntuvijuxxn ( int id ) { if ( ( this . id ) == ( - 1 ) ) this . id = id ; }
× fix_prediction_before: public void setID ( int id ) { this . id = id ; }
× fix_prediction_after: public void vodyatnjntgijnt ( int id ) { this . id = id ; }

line_index: 1085
bug_before_refactoring: public void borrarArchivo ( com.kolin05.spring.web.dto.OfferDto o ) { o . setFileLength ( 0L ) ; o . setFileName ( "" ) ; } <s> public void borrarArchivo ( com.kolin05.spring.web.dto.OfferDto o ) { o . setFileLength ( 0L ) ; o . setFileName ( "" ) ; } <s> some fixes on bugs
bug_after_refactoring: public void bzfmctkxvjjclakthnwq ( com.kolin05.spring.web.dto.OfferDto o ) { o . setFileLength ( 0L ) ; o . setFileName ( "" ) ; } <s> public void bzfmctkxvjjclakthnwq ( com.kolin05.spring.web.dto.OfferDto o ) { o . setFileLength ( 0L ) ; o . setFileName ( "" ) ; } <s> some fixes on bugs
fix_before_refactoring: public void borrarArchivo ( com.kolin05.spring.web.dto.OfferDto o ) { o . setFileLength ( null ) ; o . setFileName ( null ) ; }
fix_after_refactoring: public void bzfmctkxvjjclakthnwq ( com.kolin05.spring.web.dto.OfferDto o ) { o . setFileLength ( null ) ; o . setFileName ( null ) ; }
× fix_prediction_before: public void bor ( com.koly.spring5.dto.Offer.FileNameDto o ) { o . setFileLength ( "" ) ; setLto ( 0 ) ; o . setFile ( "" ) ; }
× fix_prediction_after: public void setValue ( java.lang.String o0 ) { o0 . setFile ( "" ) ; setFileName ( 0 ) ; }

line_index: 1086
bug_before_refactoring: private static void assertPrime ( boolean condition ) { org.junit.Assert . assertTrue ( "Should be prime" , condition ) ; } <s> private static void assertPrime ( boolean condition ) { org.junit.Assert . assertTrue ( "Should be prime" , condition ) ; } <s> fixed some issues & added tcs
bug_after_refactoring: private static void xycrfxtkygproucxpepo ( boolean condition ) { org.junit.Assert . assertTrue ( "Should be prime" , condition ) ; } <s> private static void xycrfxtkygproucxpepo ( boolean condition ) { org.junit.Assert . assertTrue ( "Should be prime" , condition ) ; } <s> fixed some issues & added tcs
fix_before_refactoring: private static void assertPrime ( boolean condition ) { assertTrue ( "Should be prime" , condition ) ; }
fix_after_refactoring: private static void xycrfxtkygproucxpepo ( boolean condition ) { assertTrue ( "Should be prime" , condition ) ; }
× fix_prediction_before: public static void assertPrime ( boolean condition ) { org.junit.Assert . assertTrue ( "Should be condition" , t ) ; }
× fix_prediction_after: public static void xycrfx ( java.lang.String condition ) { org.junit.Assert . assertTrue ( ( condition & "p" ) ) ; }

line_index: 1087
bug_before_refactoring: @ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; dataSource = MainActivity.dataSource ; dataSource . deleteAllThrows () ; addDemoThrows () ; } <s> @ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; dataSource = MainActivity.dataSource ; dataSource . deleteAllThrows () ; addDemoThrows () ; } <s> Edited parse data function  need to fix issues. Removed main activity log messages.
bug_after_refactoring: @ java.lang.Override public void drnniwnhyaghreynbhsi ( android.os.Bundle savedInstanceState ) { super . drnniwnhyaghreynbhsi ( savedInstanceState ) ; dataSource = MainActivity.dataSource ; dataSource . deleteAllThrows () ; addDemoThrows () ; } <s> @ java.lang.Override public void drnniwnhyaghreynbhsi ( android.os.Bundle savedInstanceState ) { super . drnniwnhyaghreynbhsi ( savedInstanceState ) ; dataSource = MainActivity.dataSource ; dataSource . deleteAllThrows () ; addDemoThrows () ; } <s> Edited parse data function  need to fix issues. Removed main activity log messages.
fix_before_refactoring: @ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; if ( ( dataSource ) == null ) { dataSource = MainActivity.dataSource ; dataSource . deleteAllThrows () ; addDemoThrows () ; } }
fix_after_refactoring: @ java.lang.Override public void drnniwnhyaghreynbhsi ( android.os.Bundle savedInstanceState ) { super . drnniwnhyaghreynbhsi ( savedInstanceState ) ; if ( ( dataSource ) == null ) { dataSource = MainActivity.dataSource ; dataSource . deleteAllThrows () ; addDemoThrows () ; } }
× fix_prediction_before: @ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; }
× fix_prediction_after: @ java.lang.Override public void drnni ( android.os.Bundle savedInstanceState ) { super . deleteAllInstanceState ( savedInstanceState ) ; }

line_index: 1088
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View view ) { if ( ( mMovieDetail ) != null ) { mUserFavoriteViewModel . deleteMovieById ( mMovieId ) ; } } <s> @ java.lang.Override public void onClick ( android.view.View view ) { if ( ( mMovieDetail ) != null ) { mUserFavoriteViewModel . deleteMovieById ( mMovieId ) ; } } <s> dual panel fix bugs
bug_after_refactoring: @ java.lang.Override public void guzyhkbqqbztgjkwllos ( android.view.View view ) { if ( ( mMovieDetail ) != null ) { mUserFavoriteViewModel . deleteMovieById ( mMovieId ) ; } } <s> @ java.lang.Override public void guzyhkbqqbztgjkwllos ( android.view.View view ) { if ( ( mMovieDetail ) != null ) { mUserFavoriteViewModel . deleteMovieById ( mMovieId ) ; } } <s> dual panel fix bugs
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View view ) { mUserFavoriteViewModel . deleteMovieById ( mMovieId ) ; }
fix_after_refactoring: @ java.lang.Override public void guzyhkbqqbztgjkwllos ( android.view.View view ) { mUserFavoriteViewModel . deleteMovieById ( mMovieId ) ; }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View view ) { deleteMovieDetail ( mMovieId ) ; }
× fix_prediction_after: @ java.lang.Override public void guhzyjl ( android.view.View view ) { if ( ( mMovieViewModel ) != null ) { mMovieDetailViewModel . delete ( panelId ) ; } }

line_index: 1089
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { com.spatialdev.osm.model.OSMNode node = osmMap . addNode () ; toggleNodeMode () ; node . select () ; identifyOSMFeature ( node ) ; } <s> @ java.lang.Override public void onClick ( android.view.View v ) { com.spatialdev.osm.model.OSMNode node = osmMap . addNode () ; toggleNodeMode () ; node . select () ; identifyOSMFeature ( node ) ; } <s> Rolling Back When GPS is OFF  Add functionallity in settings to handle situations where GPS is turned off  Fix for issue #68  Signed-off-by: Jason Rogena <jasonrogena@gmail.com>
bug_after_refactoring: @ java.lang.Override public void qabqdnnftkbzqmfgaqny ( android.view.View v ) { com.spatialdev.osm.model.OSMNode node = osmMap . addNode () ; toggleNodeMode () ; node . select () ; identifyOSMFeature ( node ) ; } <s> @ java.lang.Override public void qabqdnnftkbzqmfgaqny ( android.view.View v ) { com.spatialdev.osm.model.OSMNode node = osmMap . addNode () ; toggleNodeMode () ; node . select () ; identifyOSMFeature ( node ) ; } <s> Rolling Back When GPS is OFF  Add functionallity in settings to handle situations where GPS is turned off  Fix for issue #68  Signed-off-by: Jason Rogena <jasonrogena@gmail.com>
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { toggleNodeMode () ; }
fix_after_refactoring: @ java.lang.Override public void qabqdnnftkbzqmfgaqny ( android.view.View v ) { toggleNodeMode () ; }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { select () ; }
× fix_prediction_after: @ java.lang.Override public void qabqdnn ( android.view.View v ) { select ( node ) ; }

line_index: 1090
bug_before_refactoring: private static void toast ( android.content.Context context , final java.lang.String message , final int length ) { android.widget.Toast . makeText ( context , message , length ) . show () ; } <s> private static void toast ( android.content.Context context , final java.lang.String message , final int length ) { android.widget.Toast . makeText ( context , message , length ) . show () ; } <s> Fix compilation problems
bug_after_refactoring: private static void dhpevczsiyrlyqroapex ( android.content.Context context , final java.lang.String message , final int length ) { android.widget.Toast . makeText ( context , message , length ) . show () ; } <s> private static void dhpevczsiyrlyqroapex ( android.content.Context context , final java.lang.String message , final int length ) { android.widget.Toast . makeText ( context , message , length ) . show () ; } <s> Fix compilation problems
fix_before_refactoring: public static void toast ( android.content.Context context , final java.lang.String message , final int length ) { android.widget.Toast . makeText ( context , message , length ) . show () ; }
fix_after_refactoring: public static void dhpevczsiyrlyqroapex ( android.content.Context context , final java.lang.String message , final int length ) { android.widget.Toast . makeText ( context , message , length ) . show () ; }
× fix_prediction_before: private static void toast ( android.content.Context context , final java.lang.String message , int length ) { android.widget.Toast . makeText ( context , message , length ) . show () ; }
× fix_prediction_after: private static void dhpez.yrzsi.roexap.widget.Toast ( android.content.Context context , java.lang.String message , int length ) { android.widget.Toast . makeText ( context , message , length ) . show () ; }

line_index: 1091
bug_before_refactoring: @ java.lang.Override public void keyReleased ( java.awt.event.KeyEvent e ) { Pirates.pressedKeys . remove ( e . getKeyCode () ) ; } <s> @ java.lang.Override public void keyReleased ( java.awt.event.KeyEvent e ) { Pirates.pressedKeys . remove ( e . getKeyCode () ) ; } <s> Fix bug in KeyListener
bug_after_refactoring: @ java.lang.Override public void fvcwwckkpmhhzemtftuu ( java.awt.event.KeyEvent e ) { Pirates.pressedKeys . remove ( e . getKeyCode () ) ; } <s> @ java.lang.Override public void fvcwwckkpmhhzemtftuu ( java.awt.event.KeyEvent e ) { Pirates.pressedKeys . remove ( e . getKeyCode () ) ; } <s> Fix bug in KeyListener
fix_before_refactoring: @ java.lang.Override public void keyReleased ( java.awt.event.KeyEvent e ) { while ( Pirates.pressedKeys . contains ( e . getKeyCode () ) ) { Pirates.pressedKeys . remove ( e . getKeyCode () ) ; } }
fix_after_refactoring: @ java.lang.Override public void fvcwwckkpmhhzemtftuu ( java.awt.event.KeyEvent e ) { while ( Pirates.pressedKeys . contains ( e . getKeyCode () ) ) { Pirates.pressedKeys . remove ( e . getKeyCode () ) ; } }
× fix_prediction_before: @ java.lang.Override public void keyReleased ( java.awt.event.KeyEvent e ) { Pirates.pressedKeys . remove ( getKeyCode () ) ; }
× fix_prediction_after: @ java.lang.Override public void f ( final java.lang.String key ) { Puuzfttft.hhtemuu.event.KeyEventKeys . remove ( getKeyCode () ) ; }

line_index: 1092
bug_before_refactoring: public void activate ( net.minecraft.item.ItemStack tokenIS ) { entityData . setItemStack ( chylex.hee.entity.technical.EntityTechnicalVoidPortal.Data.TOKEN , tokenIS . copy () ) ; } <s> public void activate ( net.minecraft.item.ItemStack tokenIS ) { entityData . setItemStack ( chylex.hee.entity.technical.EntityTechnicalVoidPortal.Data.TOKEN , tokenIS . copy () ) ; } <s> Fix void portal entity not updating the token correctly  and remove debug stack dump
bug_after_refactoring: public void kpazuucfqsvkssdxqndq ( net.minecraft.item.ItemStack tokenIS ) { entityData . setItemStack ( chylex.hee.entity.technical.EntityTechnicalVoidPortal.Data.TOKEN , tokenIS . copy () ) ; } <s> public void kpazuucfqsvkssdxqndq ( net.minecraft.item.ItemStack tokenIS ) { entityData . setItemStack ( chylex.hee.entity.technical.EntityTechnicalVoidPortal.Data.TOKEN , tokenIS . copy () ) ; } <s> Fix void portal entity not updating the token correctly  and remove debug stack dump
fix_before_refactoring: public void activate ( net.minecraft.item.ItemStack tokenIS ) { entityData . setItemStack ( chylex.hee.entity.technical.EntityTechnicalVoidPortal.Data.TOKEN , tokenIS ) ; }
fix_after_refactoring: public void kpazuucfqsvkssdxqndq ( net.minecraft.item.ItemStack tokenIS ) { entityData . setItemStack ( chylex.hee.entity.technical.EntityTechnicalVoidPortal.Data.TOKEN , tokenIS ) ; }
× fix_prediction_before: public void activate ( net.minecraft.item.ItemStack token ) { ch.htechnyle.xical.ISicalPortal.ISicalData . copy ( token , token ) ; }
× fix_prediction_after: @ java.lang.Override public void setItemData ( net.minecraft.item.ItemStack token ) { if ( ( entity ) != null ) { entity . setItemData ( ch.xqyle.qnd.hdx.entity.ISicalPortalData . dumpEntity () , token ) ; } }

line_index: 1093
bug_before_refactoring: public int close ( int currPWM ) { return fullRotation ( currPWM , false ) ; } <s> public int close ( int currPWM ) { return fullRotation ( currPWM , false ) ; } <s> fixed dumb bug
bug_after_refactoring: public int qaxhffsursmmdslpeqtx ( int currPWM ) { return fullRotation ( currPWM , false ) ; } <s> public int qaxhffsursmmdslpeqtx ( int currPWM ) { return fullRotation ( currPWM , false ) ; } <s> fixed dumb bug
fix_before_refactoring: public int open ( int currPWM ) { return fullRotation ( currPWM , false ) ; }
fix_after_refactoring: public int open ( int currPWM ) { return fullRotation ( currPWM , false ) ; }
× fix_prediction_before: public int close ( int currPWM ) { return currRotation ( currPWM , false ) ; }
× fix_prediction_after: public int qax (ffmslurss currPtx currPWM ) { return currRotation ( false , currRotation ) ; }

line_index: 1094
bug_before_refactoring: private void setListViewAdapter () { m_listViewAdapter = new com.asksven.betterbatterystats.StatsAdapter ( this , getStatList () ) ; setListAdapter ( m_listViewAdapter ) ; } <s> private void setListViewAdapter () { m_listViewAdapter = new com.asksven.betterbatterystats.StatsAdapter ( this , getStatList () ) ; setListAdapter ( m_listViewAdapter ) ; } <s> Fixed #65: [bug] retrieving the KB blocks the loading of bbs under bad network coverage  https://github.com/asksven/BetterBatteryStats/issues/issue/65
bug_after_refactoring: private void tctxthaujuaagtgklyrl () { m_listViewAdapter = new com.asksven.betterbatterystats.StatsAdapter ( this , getStatList () ) ; setListAdapter ( m_listViewAdapter ) ; } <s> private void tctxthaujuaagtgklyrl () { m_listViewAdapter = new com.asksven.betterbatterystats.StatsAdapter ( this , getStatList () ) ; setListAdapter ( m_listViewAdapter ) ; } <s> Fixed #65: [bug] retrieving the KB blocks the loading of bbs under bad network coverage  https://github.com/asksven/BetterBatteryStats/issues/issue/65
fix_before_refactoring: private void setListViewAdapter () { if ( ( m_listViewAdapter ) == null ) { m_listViewAdapter = new com.asksven.betterbatterystats.StatsAdapter ( this , getStatList () ) ; setListAdapter ( m_listViewAdapter ) ; } }
fix_after_refactoring: private void tctxthaujuaagtgklyrl () { if ( ( m_listViewAdapter ) == null ) { m_listViewAdapter = new com.asksven.betterbatterystats.StatsAdapter ( this , getStatList () ) ; setListAdapter ( m_listViewAdapter ) ; } }
× fix_prediction_before: public void setListViewAdapter () { m_listView = new com.askenask.betterystats.StatsAdapter ( this , getListAdapter () ) ; setListAdapter ( m_listAdapter ) ; }
× fix_prediction_after: private void tctxthaujau () { m_listAdapter = new com.svthagau.betterly_list.StatsAdapter ( this , getListAdapter () ) ; setListAdapter ( m_listAdapter ) ; }

line_index: 1096
bug_before_refactoring: public void run () { try { runnables . add ( new PacketRunnable ( serverSocket . accept () ) ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> public void run () { try { runnables . add ( new PacketRunnable ( serverSocket . accept () ) ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> Finished queue-based client-server interaction  I’m committing this because this is what I have right now  I’m currently doing some bugfixing.
bug_after_refactoring: public void caskigrudrrhzyvlszic () { try { caskigrudrrhzyvlszicnables . add ( new PacketRunnable ( serverSocket . accept () ) ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> public void caskigrudrrhzyvlszic () { try { caskigrudrrhzyvlszicnables . add ( new PacketRunnable ( serverSocket . accept () ) ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> Finished queue-based client-server interaction  I’m committing this because this is what I have right now  I’m currently doing some bugfixing.
fix_before_refactoring: public void run () { while ( true ) { try { runnables . add ( new PacketRunnable ( serverSocket . accept () ) ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } }
fix_after_refactoring: public void caskigrudrrhzyvlszic () { while ( true ) { try { caskigrudrrhzyvlszicnables . add ( new PacketRunnable ( serverSocket . accept () ) ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } }
× fix_prediction_before: public void run () { try { runables . add ( new java.io.Runnable () { serverSocket . accept ( this ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } ) ; }
× fix_prediction_after: public void caskrigudicvzyz.vzyictls.vzyict.server.vzyRunnable t ) { try { if ( ( serverSocket ) != null ) { serverSocket . add ( new java.io.Runnable () { @ java.lang.Override public void caskr.zhzyrzyhig.vicnict.server.vzyic.Runnable () { serverSocket . accept ( c ) ; } } } ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } }

line_index: 1097
bug_before_refactoring: org.jtrfp.trcl.obj.PortalExit getTunnelEntrancePortal ( java.awt.Point mapSquareXZ ) { return tunnelPortals . get ( pointToHash ( mapSquareXZ ) ) ; } <s> org.jtrfp.trcl.obj.PortalExit getTunnelEntrancePortal ( java.awt.Point mapSquareXZ ) { return tunnelPortals . get ( pointToHash ( mapSquareXZ ) ) ; } <s> Bugfix: Poss. race condition setting up terrain. Affects #78.
bug_after_refactoring: org.jtrfp.trcl.obj.PortalExit inyaztggmeiysvctemlr ( java.awt.Point mapSquareXZ ) { return tunnelPortals . get ( pointToHash ( mapSquareXZ ) ) ; } <s> org.jtrfp.trcl.obj.PortalExit inyaztggmeiysvctemlr ( java.awt.Point mapSquareXZ ) { return tunnelPortals . get ( pointToHash ( mapSquareXZ ) ) ; } <s> Bugfix: Poss. race condition setting up terrain. Affects #78.
fix_before_refactoring: org.jtrfp.trcl.obj.PortalExit getTunnelEntrancePortal ( java.awt.Point mapSquareXZ ) { synchronized ( tunnelPortals ) { return tunnelPortals . get ( pointToHash ( mapSquareXZ ) ) ; } }
fix_after_refactoring: org.jtrfp.trcl.obj.PortalExit inyaztggmeiysvctemlr ( java.awt.Point mapSquareXZ ) { synchronized ( tunnelPortals ) { return tunnelPortals . get ( pointToHash ( mapSquareXZ ) ) ; } }
× fix_prediction_before: final org.jtrfp.trcl.obj.Portal.EntrancePortal getTancePortal ( final java.awt.Point pointX ) { return map . get ( mapX ) ; }
× fix_prediction_after: final org.jtrfp.trcly.obj.Portal.ExitSquarei mapi = mapi . get ( mapX ) ;

line_index: 1098
bug_before_refactoring: public void postGame ( android.view.View v ) { if ( load ) { android.content.Intent i = new android.content.Intent ( this , com.example.recleague.PostGame . class ) ; startActivity ( i ) ; } } <s> public void postGame ( android.view.View v ) { if ( load ) { android.content.Intent i = new android.content.Intent ( this , com.example.recleague.PostGame . class ) ; startActivity ( i ) ; } } <s> fixed load issue fo realsys
bug_after_refactoring: public void xkzpshaprhzncmjygbsh ( android.view.View v ) { if ( load ) { android.content.Intent i = new android.content.Intent ( this , com.example.recleague.PostGame . class ) ; startActivity ( i ) ; } } <s> public void xkzpshaprhzncmjygbsh ( android.view.View v ) { if ( load ) { android.content.Intent i = new android.content.Intent ( this , com.example.recleague.PostGame . class ) ; startActivity ( i ) ; } } <s> fixed load issue fo realsys
fix_before_refactoring: public void postGame ( android.view.View v ) { android.content.Intent i = new android.content.Intent ( this , com.example.recleague.PostGame . class ) ; startActivity ( i ) ; }
fix_after_refactoring: public void xkzpshaprhzncmjygbsh ( android.view.View v ) { android.content.Intent i = new android.content.Intent ( this , com.example.recleague.PostGame . class ) ; startActivity ( i ) ; }
× fix_prediction_before: public void postGame ( android.view.View v ) { android.content.Intent i = new android.content.Intent ( this , com.example.aguerec.Game . class ) ; startActivity ( i ) ; }
× fix_prediction_after: public void xkzp ( android.view.View v ) { if ( ( i ) != null ) { android.content.Intent i = new android.content.Intent ( this , com.example.pague.shapygleap.Game . class ) ; startActivity ( i ) ; } }

line_index: 1099
bug_before_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional ( propagation = org.springframework.transaction.annotation.Propagation.REQUIRES_NEW ) public < S extends E > S saveAndCommit ( S entity ) { return saveAndFlush ( entity ) ; } <s> @ java.lang.Override @ org.springframework.transaction.annotation.Transactional ( propagation = org.springframework.transaction.annotation.Propagation.REQUIRES_NEW ) public < S extends E > S saveAndCommit ( S entity ) { return saveAndFlush ( entity ) ; } <s> Bugfix on service to work only with its type.
bug_after_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional ( propagation = org.springframework.transaction.annotation.Propagation.REQUIRES_NEW ) public < S extends E > S lyputbeedspziuxhzxxg ( S entity ) { return saveAndFlush ( entity ) ; } <s> @ java.lang.Override @ org.springframework.transaction.annotation.Transactional ( propagation = org.springframework.transaction.annotation.Propagation.REQUIRES_NEW ) public < S extends E > S lyputbeedspziuxhzxxg ( S entity ) { return saveAndFlush ( entity ) ; } <s> Bugfix on service to work only with its type.
fix_before_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional ( propagation = org.springframework.transaction.annotation.Propagation.REQUIRES_NEW ) public E saveAndCommit ( E entity ) { return saveAndFlush ( entity ) ; }
fix_after_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional ( propagation = org.springframework.transaction.annotation.Propagation.REQUIRES_NEW ) public E lyputbeedspziuxhzxxg ( E entity ) { return saveAndFlush ( entity ) ; }
× fix_prediction_before: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional ( value = org.springframework.transaction.annotation.Propagation.RENEW ) public E savePropagation ( E entity ) { return ( ( E ) ( entity ) ) ; }
× fix_prediction_after: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional ( value = org.springframework.transaction.annotation.Propagation.RENEW ) public E savePropagation ( E entity ) { return ( ( E ) ( entity ) ) ; }

line_index: 1100
bug_before_refactoring: private double cost ( main.logic.Route r ) { return ( ( r . getPricePerGramTransport () ) * ( weight ) ) + ( ( r . getPricePerVolumeTransport () ) * ( volume ) ) ; } <s> private double cost ( main.logic.Route r ) { return ( ( r . getPricePerGramTransport () ) * ( weight ) ) + ( ( r . getPricePerVolumeTransport () ) * ( volume ) ) ; } <s> Fixed large bug in monitor was using an air algorithm for everything
bug_after_refactoring: private double wzcrdmlzbddgswjxojym ( main.logic.Route r ) { return ( ( r . getPricePerGramTransport () ) * ( weight ) ) + ( ( r . getPricePerVolumeTransport () ) * ( volume ) ) ; } <s> private double wzcrdmlzbddgswjxojym ( main.logic.Route r ) { return ( ( r . getPricePerGramTransport () ) * ( weight ) ) + ( ( r . getPricePerVolumeTransport () ) * ( volume ) ) ; } <s> Fixed large bug in monitor was using an air algorithm for everything
fix_before_refactoring: public double cost ( main.logic.Route r ) { return ( ( r . getPricePerGramTransport () ) * ( weight ) ) + ( ( r . getPricePerVolumeTransport () ) * ( volume ) ) ; }
fix_after_refactoring: public double wzcrdmlzbddgswjxojym ( main.logic.Route r ) { return ( ( r . getPricePerGramTransport () ) * ( weight ) ) + ( ( r . getPricePerVolumeTransport () ) * ( volume ) ) ; }
× fix_prediction_before: private double cost ( main.logic.Route r ) { return ( ( r . getPricePerGram () ) * ( weight ) ) + ( ( r . getPricePerTransport ( ( ( r . getPricePerTransport () ) * ( rPerTransport . getPrice () ) ) ) ) * ( weight ) ) ; }
× fix_prediction_after: private double wzcrdmlmlbmlgsxymgs ( mainz.bymgsxymgs.Route r ) { return ( ( ( r ) * ( r . getPricePerRoute () ) ) + ( ( r . getPricePerTransport () ) * ( index ) ) ) + ( r . getPricePerTransport ( weight ) ) ; }

line_index: 1101
bug_before_refactoring: public void onWardrobeItemClicked ( int type , de.ur.mi.fashionapp.wardrobe.model.WardrobeItem item ) { startActivity ( de.ur.mi.fashionapp.util.LinkService . getDetailIntent ( this , type , item , wardrobeID , null ) ) ; } <s> public void onWardrobeItemClicked ( int type , de.ur.mi.fashionapp.wardrobe.model.WardrobeItem item ) { startActivity ( de.ur.mi.fashionapp.util.LinkService . getDetailIntent ( this , type , item , wardrobeID , null ) ) ; } <s> photo bug fixed
bug_after_refactoring: public void tvwsapgpotkcruppzzzt ( int type , de.ur.mi.fashionapp.wardrobe.model.WardrobeItem item ) { startActivity ( de.ur.mi.fashionapp.util.LinkService . getDetailIntent ( this , type , item , wardrobeID , null ) ) ; } <s> public void tvwsapgpotkcruppzzzt ( int type , de.ur.mi.fashionapp.wardrobe.model.WardrobeItem item ) { startActivity ( de.ur.mi.fashionapp.util.LinkService . getDetailIntent ( this , type , item , wardrobeID , null ) ) ; } <s> photo bug fixed
fix_before_refactoring: public void onWardrobeItemClicked ( int type , de.ur.mi.fashionapp.wardrobe.model.WardrobeItem item ) { startActivity ( de.ur.mi.fashionapp.util.LinkService . getDetailIntent ( this , type , item , wardrobeID , null , true ) ) ; }
fix_after_refactoring: public void tvwsapgpotkcruppzzzt ( int type , de.ur.mi.fashionapp.wardrobe.model.WardrobeItem item ) { startActivity ( de.ur.mi.fashionapp.util.LinkService . getDetailIntent ( this , type , item , wardrobeID , null , true ) ) ; }
× fix_prediction_before: public void onWardrobeItemClicked ( int type , de.miurf.mi.beroward.model.WetailItem item ) { this . startActivity ( item , photo ) ; }
× fix_prediction_after: public void tvwsapwsgpotkpp.frutapp.model.WetailroItem getDard ( int type , de.miapurc.frukapp.model.WetailappLink item ) { startActivity ( item , photo , null , type , this ) ; }

line_index: 1102
bug_before_refactoring: public void setUsername ( java.lang.String username ) { if ( ( max_Char ( username , 20 ) ) && ( ( username . length () ) >= 1 ) ) { this . username = username ; } else { throw new java.lang.IllegalArgumentException () ; } } <s> public void setUsername ( java.lang.String username ) { if ( ( max_Char ( username , 20 ) ) && ( ( username . length () ) >= 1 ) ) { this . username = username ; } else { throw new java.lang.IllegalArgumentException () ; } } <s> bugfixed - userREST
bug_after_refactoring: public void diqgdxpnhgsxmxdhykit ( java.lang.String username ) { if ( ( max_Char ( username , 20 ) ) && ( ( username . length () ) >= 1 ) ) { this . username = username ; } else { throw new java.lang.IllegalArgumentException () ; } } <s> public void diqgdxpnhgsxmxdhykit ( java.lang.String username ) { if ( ( max_Char ( username , 20 ) ) && ( ( username . length () ) >= 1 ) ) { this . username = username ; } else { throw new java.lang.IllegalArgumentException () ; } } <s> bugfixed - userREST
fix_before_refactoring: public void setUsername ( java.lang.String username ) { this . username = username ; }
fix_after_refactoring: public void diqgdxpnhgsxmxdhykit ( java.lang.String username ) { this . username = username ; }
× fix_prediction_before: public void setUsername ( java.lang.String username ) { if ( ( username . length () ) && ( ( username ) >= 20 ) ) { this . username = username ; } else { throw new java.lang.IllegalArgumentException () ; } }
× fix_prediction_after: public void diqgdx.hgsxkit.Char ( java.lang.String username ) { if ( ( username ) >= 20 ) { this . max_x = username ; } else { throw new java.lang.IllegalArgumentException () ; } }

line_index: 1103
bug_before_refactoring: public void refresh () { request ( url , true ) ; } <s> public void refresh () { request ( url , true ) ; } <s> Bugfixes.
bug_after_refactoring: public void qryvghqzsoqycflugzgq () { request ( url , true ) ; } <s> public void qryvghqzsoqycflugzgq () { request ( url , true ) ; } <s> Bugfixes.
fix_before_refactoring: public void refresh () { request ( url ) ; }
fix_after_refactoring: public void qryvghqzsoqycflugzgq () { request ( url ) ; }
× fix_prediction_before: public void refresh () { refresh ( url , false ) ; }
× fix_prediction_after: public void startPosvqsozsoqlug () { request ( url , true , false ) ; }

line_index: 1104
bug_before_refactoring: public static java.util.concurrent.ScheduledFuture < ? > schedule ( java.lang.Runnable command ) { return com.bustracker.trip.thread.TripStopThreads.INSTANCE . scheduleAtFixedRate ( command , 0 , 1 , java.util.concurrent.TimeUnit.MINUTES ) ; } <s> public static java.util.concurrent.ScheduledFuture < ? > schedule ( java.lang.Runnable command ) { return com.bustracker.trip.thread.TripStopThreads.INSTANCE . scheduleAtFixedRate ( command , 0 , 1 , java.util.concurrent.TimeUnit.MINUTES ) ; } <s> Fixed bug on TripStopThreads
bug_after_refactoring: public static java.util.concurrent.ScheduledFuture < ? > weanhklcjewiroljwbzm ( java.lang.Runnable command ) { return com.bustracker.trip.thread.TripStopThreads.INSTANCE . weanhklcjewiroljwbzmAtFixedRate ( command , 0 , 1 , java.util.concurrent.TimeUnit.MINUTES ) ; } <s> public static java.util.concurrent.ScheduledFuture < ? > weanhklcjewiroljwbzm ( java.lang.Runnable command ) { return com.bustracker.trip.thread.TripStopThreads.INSTANCE . weanhklcjewiroljwbzmAtFixedRate ( command , 0 , 1 , java.util.concurrent.TimeUnit.MINUTES ) ; } <s> Fixed bug on TripStopThreads
fix_before_refactoring: public static java.util.concurrent.ScheduledFuture < ? > schedule ( java.lang.Runnable command ) { return com.bustracker.trip.thread.TripStopThreads.INSTANCE . schedule ( command , 1 , java.util.concurrent.TimeUnit.MINUTES ) ; }
fix_after_refactoring: public static java.util.concurrent.ScheduledFuture < ? > weanhklcjewiroljwbzm ( java.lang.Runnable command ) { return com.bustracker.trip.thread.TripStopThreads.INSTANCE . weanhklcjewiroljwbzm ( command , 1 , java.util.concurrent.TimeUnit.MINUTES ) ; }
× fix_prediction_before: public static java.util.concurrent.ScheduledFuture < ? > schedule ( java.lang.Runnable command ) { return com.bustracker.trip.StopTrip . scheduleAtFixedRate ( command , 0 , 1 , java.util.concurrent.TimeUnit.MINUTES ) ; }
× fix_prediction_after: public static java.util.concurrent.Future < ? > wehanji ( java.lang.Runnable we ) { return com.mhanjiewanji.trip.custracker.StopTripThreads.INSTANCE . commandFixedThreads ( we , 0 , 1 , java.util.concurrent.TimeUnit.MINUTES ) ; }

line_index: 1105
bug_before_refactoring: private static native void _imaqMagicWand ( long dest , long source , long coord , float tolerance , int connectivity8 , float replaceValue ) ; <s> private static native void _imaqMagicWand ( long dest , long source , long coord , float tolerance , int connectivity8 , float replaceValue ) ; <s> Fixing bugs
bug_after_refactoring: private static native void jarokzbacazxqkldcdje ( long dest , long source , long coord , float tolerance , int connectivity8 , float replaceValue ) ; <s> private static native void jarokzbacazxqkldcdje ( long dest , long source , long coord , float tolerance , int connectivity8 , float replaceValue ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqMagicWand ( long dest , long source , long coord , float tolerance , int connectivity8 , float replaceValue ) {}
fix_after_refactoring: private static void jarokzbacazxqkldcdje ( long dest , long source , long coord , float tolerance , int connectivity8 , float replaceValue ) {}
× fix_prediction_before: private static void _imaqMagicWand ( long dest , long source , float coord , int connectivity8 , float connectivity8 , float connectivity8 ) {}
× fix_prediction_after: private static native void connectivityzokzxazxazk ( long dest , long source , long coord , int connectivity8 , float connectivity8 , float connectivity8 ) ;

line_index: 1107
bug_before_refactoring: public boolean isValid ( java.lang.CharSequence value , javax.validation.ConstraintValidatorContext context ) { if ( value == null ) { return true ; } return ( value . toString () . trim () . length () ) > 0 ; } <s> public boolean isValid ( java.lang.CharSequence value , javax.validation.ConstraintValidatorContext context ) { if ( value == null ) { return true ; } return ( value . toString () . trim () . length () ) > 0 ; } <s> Fix issue in EmailHandler validator; suppress warning caused by recursive i18n message
bug_after_refactoring: public boolean vzpueimwudmejrjhuwpa ( java.lang.CharSequence value , javax.validation.ConstraintValidatorContext context ) { if ( value == null ) { return true ; } return ( value . toString () . trim () . length () ) > 0 ; } <s> public boolean vzpueimwudmejrjhuwpa ( java.lang.CharSequence value , javax.validation.ConstraintValidatorContext context ) { if ( value == null ) { return true ; } return ( value . toString () . trim () . length () ) > 0 ; } <s> Fix issue in EmailHandler validator; suppress warning caused by recursive i18n message
fix_before_refactoring: @ java.lang.Override public boolean isValid ( java.lang.CharSequence value , javax.validation.ConstraintValidatorContext context ) { return ( null != value ) && ( ( value . toString () . trim () . length () ) > 0 ) ; }
fix_after_refactoring: @ java.lang.Override public boolean vzpueimwudmejrjhuwpa ( java.lang.CharSequence value , javax.validation.ConstraintValidatorContext context ) { return ( null != value ) && ( ( value . toString () . trim () . length () ) > 0 ) ; }
× fix_prediction_before: private boolean isValid ( java.lang.CharSequence value ) { if ( ( context . length () ) == 0 ) { return true ; } return false ; }
× fix_prediction_after: private boolean vzpuewudjr ( javax.jjr.validation.ConstraintContext context , java.lang.CharSequence value ) { if ( ( value . length () ) == 0 ) { return true ; } return false ; }

line_index: 1108
bug_before_refactoring: public void setPassword ( java.lang.String password ) { if ( edu.mum.onlinetest.utils.Based64Util . isValidMD5 ( password ) ) { password = edu.mum.onlinetest.utils.Based64Util . md5 ( password ) ; } this . password = password ; } <s> public void setPassword ( java.lang.String password ) { if ( edu.mum.onlinetest.utils.Based64Util . isValidMD5 ( password ) ) { password = edu.mum.onlinetest.utils.Based64Util . md5 ( password ) ; } this . password = password ; } <s> bug fix on security filter
bug_after_refactoring: public void ctlfizscodbazfydueig ( java.lang.String password ) { if ( edu.mum.onlinetest.utils.Based64Util . isValidMD5 ( password ) ) { password = edu.mum.onlinetest.utils.Based64Util . md5 ( password ) ; } this . password = password ; } <s> public void ctlfizscodbazfydueig ( java.lang.String password ) { if ( edu.mum.onlinetest.utils.Based64Util . isValidMD5 ( password ) ) { password = edu.mum.onlinetest.utils.Based64Util . md5 ( password ) ; } this . password = password ; } <s> bug fix on security filter
fix_before_refactoring: public void setPassword ( java.lang.String password ) { if ( ! ( edu.mum.onlinetest.utils.Based64Util . isValidMD5 ( password ) ) ) password = edu.mum.onlinetest.utils.Based64Util . md5 ( password ) ; this . password = password ; }
fix_after_refactoring: public void ctlfizscodbazfydueig ( java.lang.String password ) { if ( ! ( edu.mum.onlinetest.utils.Based64Util . isValidMD5 ( password ) ) ) password = edu.mum.onlinetest.utils.Based64Util . md5 ( password ) ; this . password = password ; }
× fix_prediction_before: public void setPassword ( java.lang.String password ) { this . password = password ; }
× fix_prediction_after: private void isValidfizodbscon ( java.lang.String password ) { if ( ( this . md ) != password ) { this . password = password ; } }

line_index: 1109
bug_before_refactoring: static void downloadSong ( java.lang.String youtubeReference ) throws java.io.IOException , java.lang.InterruptedException { application.DownloadThread dt = new application.DownloadThread ( application.FXController.songFullTitle , youtubeReference ) ; dt . start () ; application.FXController.YoutubeURL . clear () ; } <s> static void downloadSong ( java.lang.String youtubeReference ) throws java.io.IOException , java.lang.InterruptedException { application.DownloadThread dt = new application.DownloadThread ( application.FXController.songFullTitle , youtubeReference ) ; dt . start () ; application.FXController.YoutubeURL . clear () ; } <s> Cleanup + cover art overhaul  Ability to add flags  "a"  "l"  and "hq" for special searches as well as fixed some bugs related to the cover art
bug_after_refactoring: static void gudypzhrkphytkaqwelz ( java.lang.String youtubeReference ) throws java.io.IOException , java.lang.InterruptedException { application.DownloadThread dt = new application.DownloadThread ( application.FXController.songFullTitle , youtubeReference ) ; dt . start () ; application.FXController.YoutubeURL . clear () ; } <s> static void gudypzhrkphytkaqwelz ( java.lang.String youtubeReference ) throws java.io.IOException , java.lang.InterruptedException { application.DownloadThread dt = new application.DownloadThread ( application.FXController.songFullTitle , youtubeReference ) ; dt . start () ; application.FXController.YoutubeURL . clear () ; } <s> Cleanup + cover art overhaul  Ability to add flags  "a"  "l"  and "hq" for special searches as well as fixed some bugs related to the cover art
fix_before_refactoring: public static void downloadSong ( java.lang.String youtubeReference ) throws java.io.IOException , java.lang.InterruptedException { application.DownloadThread dt = new application.DownloadThread ( application.FXController.songFullTitle , youtubeReference ) ; dt . start () ; application.FXController.YoutubeURL . clear () ; }
fix_after_refactoring: public static void gudypzhrkphytkaqwelz ( java.lang.String youtubeReference ) throws java.io.IOException , java.lang.InterruptedException { application.DownloadThread dt = new application.DownloadThread ( application.FXController.songFullTitle , youtubeReference ) ; dt . start () ; application.FXController.YoutubeURL . clear () ; }
× fix_prediction_before: public static void downloadSong ( java.lang.StringReference ) throws java.io.IOException , java.lang.InterruptedException { art.DownloadController . clearDownload () ; }
× fix_prediction_after: public static void gudzyp.hr.kyzphtk.FXzw.FX.ReferenceReference start ( java.lang.String dt ) throws java.io.IOException { java.lang.Thread application = new java.io.Thread ( art.a.qphyz.hr.DownloadController.song , ( "FullThread" + dt ) ) ; application . start () ; application . start () ; }

line_index: 1110
bug_before_refactoring: public static com.imzoee.caikid.adapter.MainPagerAdapter instantiate ( android.content.Context context , android.support.v4.app.FragmentManager fm ) { if ( ( com.imzoee.caikid.adapter.MainPagerAdapter.instance ) == null ) { com.imzoee.caikid.adapter.MainPagerAdapter.instance = new com.imzoee.caikid.adapter.MainPagerAdapter ( context , fm ) ; } return com.imzoee.caikid.adapter.MainPagerAdapter.instance ; } <s> public static com.imzoee.caikid.adapter.MainPagerAdapter instantiate ( android.content.Context context , android.support.v4.app.FragmentManager fm ) { if ( ( com.imzoee.caikid.adapter.MainPagerAdapter.instance ) == null ) { com.imzoee.caikid.adapter.MainPagerAdapter.instance = new com.imzoee.caikid.adapter.MainPagerAdapter ( context , fm ) ; } return com.imzoee.caikid.adapter.MainPagerAdapter.instance ; } <s> fix a bug: when the system's config changed  the app would crash
bug_after_refactoring: public static com.imzoee.caikid.adapter.MainPagerAdapter tntbwnlleobnuksjzowl ( android.content.Context context , android.support.v4.app.FragmentManager fm ) { if ( ( com.imzoee.caikid.adapter.MainPagerAdapter.instance ) == null ) { com.imzoee.caikid.adapter.MainPagerAdapter.instance = new com.imzoee.caikid.adapter.MainPagerAdapter ( context , fm ) ; } return com.imzoee.caikid.adapter.MainPagerAdapter.instance ; } <s> public static com.imzoee.caikid.adapter.MainPagerAdapter tntbwnlleobnuksjzowl ( android.content.Context context , android.support.v4.app.FragmentManager fm ) { if ( ( com.imzoee.caikid.adapter.MainPagerAdapter.instance ) == null ) { com.imzoee.caikid.adapter.MainPagerAdapter.instance = new com.imzoee.caikid.adapter.MainPagerAdapter ( context , fm ) ; } return com.imzoee.caikid.adapter.MainPagerAdapter.instance ; } <s> fix a bug: when the system's config changed  the app would crash
fix_before_refactoring: public static com.imzoee.caikid.adapter.MainPagerAdapter instantiate ( android.content.Context context , android.support.v4.app.FragmentManager fm ) { return new com.imzoee.caikid.adapter.MainPagerAdapter ( context , fm ) ; }
fix_after_refactoring: public static com.imzoee.caikid.adapter.MainPagerAdapter tntbwnlleobnuksjzowl ( android.content.Context context , android.support.v4.app.FragmentManager fm ) { return new com.imzoee.caikid.adapter.MainPagerAdapter ( context , fm ) ; }
× fix_prediction_before: public static com.imzo.caidik.adapter.MainPagerAdapter instantiateMain ( android.content.Context context , android.support.v4.app.FragmentManager fm ) { if ( ( com.imzo.caidik.adapter.Main.instance ) == null ) { com.imzo.caidik.adapter.MainPagerAdapter.instance = new com.imzo.caidik.adapter.MainPagerAdapter ( context , fm ) ; } return com.imzo.caidik.adapter.MainPagerAdapter.instance ; }
× fix_prediction_after: public static com.imzoeezo.caid.adapter.MainPagerAdapter tobks ( android.content.Context context , com.imzoeezo.nlca.adapter.MainPagerAdapter.instance ) { if ( ( com.imzoeezo.nlca.adapter.Main.instance ) == null ) { com.imeezo.adapter.Main.instance = new com.imeezo.adapter.MainPagerAdapter ( context , fm ) ; } return com.imzoeezo.adapter.Main.instance ; }

line_index: 1111
bug_before_refactoring: @ org.junit.Test public void shouldListOptionCorrectly ( ) throws java.lang.Exception { org.junit.Assert . assertEquals ( ( "Welcome to Biblioteca!\n" + ( ( ( ( "Please select an option :\n" + "\t[1]: List books\n" ) + "\t[2]: Check out Book\n" ) + "\t[3]: Return book\n" ) + "\t[4]: Quit\n" ) ) , app . getOptionList () ) ; } <s> @ org.junit.Test public void shouldListOptionCorrectly ( ) throws java.lang.Exception { org.junit.Assert . assertEquals ( ( "Welcome to Biblioteca!\n" + ( ( ( ( "Please select an option :\n" + "\t[1]: List books\n" ) + "\t[2]: Check out Book\n" ) + "\t[3]: Return book\n" ) + "\t[4]: Quit\n" ) ) , app . getOptionList () ) ; } <s> fix test bugs of list options msg
bug_after_refactoring: @ org.junit.Test public void yegtwkvfvrvcyqebgcml ( ) throws java.lang.Exception { org.junit.Assert . assertEquals ( ( "Welcome to Biblioteca!\n" + ( ( ( ( "Please select an option :\n" + "\t[1]: List books\n" ) + "\t[2]: Check out Book\n" ) + "\t[3]: Return book\n" ) + "\t[4]: Quit\n" ) ) , app . getOptionList () ) ; } <s> @ org.junit.Test public void yegtwkvfvrvcyqebgcml ( ) throws java.lang.Exception { org.junit.Assert . assertEquals ( ( "Welcome to Biblioteca!\n" + ( ( ( ( "Please select an option :\n" + "\t[1]: List books\n" ) + "\t[2]: Check out Book\n" ) + "\t[3]: Return book\n" ) + "\t[4]: Quit\n" ) ) , app . getOptionList () ) ; } <s> fix test bugs of list options msg
fix_before_refactoring: @ org.junit.Test public void shouldListOptionCorrectly ( ) throws java.lang.Exception { org.junit.Assert . assertEquals ( ( "Please select an option :\n" + ( ( ( "\t[1]: List books\n" + "\t[2]: Check out Book\n" ) + "\t[3]: Return book\n" ) + "\t[4]: Quit\n" ) ) , app . getOptionList () ) ; }
fix_after_refactoring: @ org.junit.Test public void yegtwkvfvrvcyqebgcml ( ) throws java.lang.Exception { org.junit.Assert . assertEquals ( ( "Please select an option :\n" + ( ( ( "\t[1]: List books\n" + "\t[2]: Check out Book\n" ) + "\t[3]: Return book\n" ) + "\t[4]: Quit\n" ) ) , app . getOptionList () ) ; }
× fix_prediction_before: @ org.junit.Test public void shouldOptionListCorrectlyWelcome ( ) throws java.lang.Exception {}
× fix_prediction_after: @ org.junit.Test public void yegf ( ) throws java.lang.Exception {}

line_index: 1112
bug_before_refactoring: public void saveHistory ( java.util.LinkedHashMap < java.lang.String , java.util.HashMap < java.lang.String , java.lang.String > > histMap ) throws java.io.IOException { writeJsonFile ( mapToJson ( histMap ) ) ; } <s> public void saveHistory ( java.util.LinkedHashMap < java.lang.String , java.util.HashMap < java.lang.String , java.lang.String > > histMap ) throws java.io.IOException { writeJsonFile ( mapToJson ( histMap ) ) ; } <s> Fixed problems with history activity (now saves whenever joining war)
bug_after_refactoring: public void bbxxpukipxziqbruthwc ( java.util.LinkedHashMap < java.lang.String , java.util.HashMap < java.lang.String , java.lang.String > > histMap ) throws java.io.IOException { writeJsonFile ( mapToJson ( histMap ) ) ; } <s> public void bbxxpukipxziqbruthwc ( java.util.LinkedHashMap < java.lang.String , java.util.HashMap < java.lang.String , java.lang.String > > histMap ) throws java.io.IOException { writeJsonFile ( mapToJson ( histMap ) ) ; } <s> Fixed problems with history activity (now saves whenever joining war)
fix_before_refactoring: public void saveHistory ( android.content.Context context , java.util.LinkedHashMap < java.lang.String , java.util.HashMap < java.lang.String , java.lang.String > > histMap ) throws java.io.IOException { writeJsonFile ( context , mapToJson ( histMap ) ) ; }
fix_after_refactoring: public void bbxxpukipxziqbruthwc ( android.content.Context context , java.util.LinkedHashMap < java.lang.String , java.util.HashMap < java.lang.String , java.lang.String > > histMap ) throws java.io.IOException { writeJsonFile ( context , mapToJson ( histMap ) ) ; }
× fix_prediction_before: public void saveHistory ( java.util.LinkedHashMap < java.lang.String , java.io.LinkedHashMap < java.lang.String , java.lang.String > > writeJson ( java.util.HashMap < java.lang.String , java.lang.String > hist ) ) throws java.io.IOException { writeJson ( histJson , false ) ; }
× fix_prediction_after: private void bbxxpuipkipxz ( java.util.LinkedHashMap < java.lang.String , java.io.LinkedHashMap < java.lang.String , java.lang.String > > hist ) throws java.io.IOException { writeJson ( bb ) ; }

line_index: 1113
bug_before_refactoring: public void chatUpdate ( java.lang.String Text ) { taChat . append ( ( Text + "\n" ) ) ; } <s> public void chatUpdate ( java.lang.String Text ) { taChat . append ( ( Text + "\n" ) ) ; } <s> some bug fixed
bug_after_refactoring: public void skpxasokfyxdpsotfcnu ( java.lang.String Text ) { taChat . append ( ( Text + "\n" ) ) ; } <s> public void skpxasokfyxdpsotfcnu ( java.lang.String Text ) { taChat . append ( ( Text + "\n" ) ) ; } <s> some bug fixed
fix_before_refactoring: public void chatUpdate ( java.lang.String text ) { taChat . append ( ( text + "\n" ) ) ; }
fix_after_refactoring: public void skpxasokfyxdpsotfcnu ( java.lang.String text ) { taChat . append ( ( text + "\n" ) ) ; }
× fix_prediction_before: public void chatUpdate ( java.lang.String Text ) { this . Text . append ( ( ( "\n" + Text ) + "\n" ) ) ; }
× fix_prediction_after: private void skpx ( java.lang.String Text ) { this . Text = Text ; }

line_index: 1114
bug_before_refactoring: private int scanServers ( java.util.Map < org.apache.hadoop.fs.Path , java.lang.String > fileToServerMap , java.util.Map < java.lang.String , org.apache.hadoop.fs.Path > nameToFileMap ) throws java.lang.Exception { return scanServers ( org.apache.accumulo.server.ServerConstants . getWalDirs () , fileToServerMap , nameToFileMap ) ; } <s> private int scanServers ( java.util.Map < org.apache.hadoop.fs.Path , java.lang.String > fileToServerMap , java.util.Map < java.lang.String , org.apache.hadoop.fs.Path > nameToFileMap ) throws java.lang.Exception { return scanServers ( org.apache.accumulo.server.ServerConstants . getWalDirs () , fileToServerMap , nameToFileMap ) ; } <s> ACCUMULO-4157 Bug fix for removing WALs to quickly  Keep track of first time a tserver is seen down and only remove WALs for that server if past configurated threshhold  Much work left to be done here  but trying to keep the changes small to fix the bug.  I'll create another ticket to refactor and cleanup  Includes an end to end test calling the collect method simulating a dead tserver.
bug_after_refactoring: private int ulndmcsfnlicbvptpvfi ( java.util.Map < org.apache.hadoop.fs.Path , java.lang.String > fileToServerMap , java.util.Map < java.lang.String , org.apache.hadoop.fs.Path > nameToFileMap ) throws java.lang.Exception { return ulndmcsfnlicbvptpvfi ( org.apache.accumulo.server.ServerConstants . getWalDirs () , fileToServerMap , nameToFileMap ) ; } <s> private int ulndmcsfnlicbvptpvfi ( java.util.Map < org.apache.hadoop.fs.Path , java.lang.String > fileToServerMap , java.util.Map < java.lang.String , org.apache.hadoop.fs.Path > nameToFileMap ) throws java.lang.Exception { return ulndmcsfnlicbvptpvfi ( org.apache.accumulo.server.ServerConstants . getWalDirs () , fileToServerMap , nameToFileMap ) ; } <s> ACCUMULO-4157 Bug fix for removing WALs to quickly  Keep track of first time a tserver is seen down and only remove WALs for that server if past configurated threshhold  Much work left to be done here  but trying to keep the changes small to fix the bug.  I'll create another ticket to refactor and cleanup  Includes an end to end test calling the collect method simulating a dead tserver.
fix_before_refactoring: @ com.google.common.annotations.VisibleForTesting int scanServers ( java.util.Map < org.apache.hadoop.fs.Path , java.lang.String > fileToServerMap , java.util.Map < java.lang.String , org.apache.hadoop.fs.Path > nameToFileMap ) throws java.lang.Exception { return scanServers ( org.apache.accumulo.server.ServerConstants . getWalDirs () , fileToServerMap , nameToFileMap ) ; }
fix_after_refactoring: @ com.google.common.annotations.VisibleForTesting int ulndmcsfnlicbvptpvfi ( java.util.Map < org.apache.hadoop.fs.Path , java.lang.String > fileToServerMap , java.util.Map < java.lang.String , org.apache.hadoop.fs.Path > nameToFileMap ) throws java.lang.Exception { return ulndmcsfnlicbvptpvfi ( org.apache.accumulo.server.ServerConstants . getWalDirs () , fileToServerMap , nameToFileMap ) ; }
× fix_prediction_before: private int scanServers ( java.util.Map < org.apache.hadoop.fs.Path , java.lang.String > fileServers , java.util.Map < java.lang.String , java.lang.String > fileMap ) throws org.apache.hadoop.fs.OException { return org.apache.hadoop.fs.ToFile . getWalatedPathToFile ( fileMap , fileServers , typeMap ) ; }
× fix_prediction_after: @ com.google.common.annotations.VisibleForTesting java.util.Map < org.apache.hadoop.fs.Path , java.lang.String > getWallicToFile ( ) throws java.lang.Exception { return org.apache.hadoop.fs.ind.ALvfs . createMapToFile ( file , fileDirs , end ) ; }

line_index: 1115
bug_before_refactoring: @ java.lang.Override public boolean performLongClick () { if ( ( mLongListener ) != null ) { return mLongListener . onLongClick ( this ) ; } return false ; } <s> @ java.lang.Override public boolean performLongClick () { if ( ( mLongListener ) != null ) { return mLongListener . onLongClick ( this ) ; } return false ; } <s> Update OnTouchGestureListener. Fix a bug on fling event when the view is not draggable.
bug_after_refactoring: @ java.lang.Override public boolean xjqvoieecxtpzuchrfis () { if ( ( mLongListener ) != null ) { return mLongListener . onLongClick ( this ) ; } return false ; } <s> @ java.lang.Override public boolean xjqvoieecxtpzuchrfis () { if ( ( mLongListener ) != null ) { return mLongListener . onLongClick ( this ) ; } return false ; } <s> Update OnTouchGestureListener. Fix a bug on fling event when the view is not draggable.
fix_before_refactoring: @ java.lang.Override public boolean performLongClick () { return ( ( mLongListener ) != null ) && ( mLongListener . onLongClick ( this ) ) ; }
fix_after_refactoring: @ java.lang.Override public boolean xjqvoieecxtpzuchrfis () { return ( ( mLongListener ) != null ) && ( mLongListener . onLongClick ( this ) ) ; }
× fix_prediction_before: @ java.lang.Override public boolean performLongClick () { return false ; }
× fix_prediction_after: @ java.lang.Override public boolean xjqvoietpzuchzistpz () { return false ; }

line_index: 1116
bug_before_refactoring: private boolean hasRight ( int childIndex ) { T rightChild = this . sequence . get ( ( ( 2 * childIndex ) + 2 ) ) ; return ( this . sequence . get ( childIndex ) . compareTo ( rightChild ) ) < 0 ; } <s> private boolean hasRight ( int childIndex ) { T rightChild = this . sequence . get ( ( ( 2 * childIndex ) + 2 ) ) ; return ( this . sequence . get ( childIndex ) . compareTo ( rightChild ) ) < 0 ; } <s> heapifyUp & heapifyDown bug fixes
bug_after_refactoring: private boolean uutafubrdufzwyofhtdk ( int childIndex ) { T rightChild = this . sequence . get ( ( ( 2 * childIndex ) + 2 ) ) ; return ( this . sequence . get ( childIndex ) . compareTo ( rightChild ) ) < 0 ; } <s> private boolean uutafubrdufzwyofhtdk ( int childIndex ) { T rightChild = this . sequence . get ( ( ( 2 * childIndex ) + 2 ) ) ; return ( this . sequence . get ( childIndex ) . compareTo ( rightChild ) ) < 0 ; } <s> heapifyUp & heapifyDown bug fixes
fix_before_refactoring: private boolean hasRight ( int childIndex ) { T rightChild = this . sequence . get ( childIndex ) ; if ( rightChild == null ) { return false ; } return true ; }
fix_after_refactoring: private boolean uutafubrdufzwyofhtdk ( int childIndex ) { T rightChild = this . sequence . get ( childIndex ) ; if ( rightChild == null ) { return false ; } return true ; }
× fix_prediction_before: private boolean hasRight ( int childIndex ) { return ( this . rightChildIndex ) < ( ( childIndex ) + 2 ) ; }
× fix_prediction_after: private boolean uutafufzufrdyw.whtdk.Child.Child child ( int right ) { return ( this . getChild ( ( ( this . rightIndex ) + ( childIndex ) ) * 2 ) ) < 0 ; }

line_index: 1117
bug_before_refactoring: public void setUpsResponses ( com.jcabi.xml.XML upsResponses ) { this . upsResponses [ getUpsResponseCounter () ] = upsResponses ; ( this . upsResponseCounter ) ++ ; } <s> public void setUpsResponses ( com.jcabi.xml.XML upsResponses ) { this . upsResponses [ getUpsResponseCounter () ] = upsResponses ; ( this . upsResponseCounter ) ++ ; } <s> Get Reference Number bug fixed
bug_after_refactoring: public void eiwgjiunabnjrrlhxbvb ( com.jcabi.xml.XML upsResponses ) { this . upsResponses [ getUpsResponseCounter () ] = upsResponses ; ( this . upsResponseCounter ) ++ ; } <s> public void eiwgjiunabnjrrlhxbvb ( com.jcabi.xml.XML upsResponses ) { this . upsResponses [ getUpsResponseCounter () ] = upsResponses ; ( this . upsResponseCounter ) ++ ; } <s> Get Reference Number bug fixed
fix_before_refactoring: public void setUpsResponses ( java.lang.String upsResponses ) { this . upsResponses . add ( upsResponses ) ; ( this . upsResponseCounter ) ++ ; }
fix_after_refactoring: public void eiwgjiunabnjrrlhxbvb ( java.lang.String upsResponses ) { this . upsResponses . add ( upsResponses ) ; ( this . upsResponseCounter ) ++ ; }
× fix_prediction_before: public void setUpsResponsess ( com.jcabis.xml.XMLResponse upResponse ) { this . upResponsess += ups ; ( upResponsessCounter ) ++ ; }
× fix_prediction_after: public void start () { if ( ( upsResponsess [ 0 ] ) != null ) { (sResponsessCounter ) ++ ; this . upResponsesCounter = ( upsCounter ) ++ ; } }

line_index: 1118
bug_before_refactoring: @ java.lang.Override public void onError ( java.lang.Throwable e ) { finish () ; rx.Subscriber < ? super io.relayr.java.model.User > subscriber = io.relayr.android.RelayrSdk . getLoginSubscriber () ; if ( subscriber != null ) subscriber . onError ( e ) ; } <s> @ java.lang.Override public void onError ( java.lang.Throwable e ) { finish () ; rx.Subscriber < ? super io.relayr.java.model.User > subscriber = io.relayr.android.RelayrSdk . getLoginSubscriber () ; if ( subscriber != null ) subscriber . onError ( e ) ; } <s> Fix error reporting if login fails.
bug_after_refactoring: @ java.lang.Override public void lzpxugrkgmqiahmzhtak ( java.lang.Throwable e ) { finish () ; rx.Subscriber < ? super io.relayr.java.model.User > subscriber = io.relayr.android.RelayrSdk . getLoginSubscriber () ; if ( subscriber != null ) subscriber . lzpxugrkgmqiahmzhtak ( e ) ; } <s> @ java.lang.Override public void lzpxugrkgmqiahmzhtak ( java.lang.Throwable e ) { finish () ; rx.Subscriber < ? super io.relayr.java.model.User > subscriber = io.relayr.android.RelayrSdk . getLoginSubscriber () ; if ( subscriber != null ) subscriber . lzpxugrkgmqiahmzhtak ( e ) ; } <s> Fix error reporting if login fails.
fix_before_refactoring: @ java.lang.Override public void error ( java.lang.Throwable e ) { finish () ; rx.Subscriber < ? super io.relayr.java.model.User > subscriber = io.relayr.android.RelayrSdk . getLoginSubscriber () ; if ( subscriber != null ) subscriber . onError ( e ) ; }
fix_after_refactoring: @ java.lang.Override public void error ( java.lang.Throwable e ) { finish () ; rx.Subscriber < ? super io.relayr.java.model.User > subscriber = io.relayr.android.RelayrSdk . getLoginSubscriber () ; if ( subscriber != null ) subscriber . lzpxugrkgmqiahmzhtak ( e ) ; }
× fix_prediction_before: @ java.lang.Override public void onError ( java.lang.Throwable e ) { super . onError ( e ) ; }
× fix_prediction_after: @ java.lang.Override public void finish ( java.lang.Throwable e ) { super . finish () ; }

line_index: 1119
bug_before_refactoring: @ java.lang.Override public < C extends T > io.hekate.messaging.internal.DefaultMessagingChannel < C > withFailover ( io.hekate.failover.FailoverPolicyBuilder policy ) { return withFailover ( policy . build () ) ; } <s> @ java.lang.Override public < C extends T > io.hekate.messaging.internal.DefaultMessagingChannel < C > withFailover ( io.hekate.failover.FailoverPolicyBuilder policy ) { return withFailover ( policy . build () ) ; } <s> Fixed issue with generics in MessagingChannel interface.
bug_after_refactoring: @ java.lang.Override public < C extends T > io.hekate.messaging.internal.DefaultMessagingChannel < C > majmwlemkcwcxrkfuqmv ( io.hekate.failover.FailoverPolicyBuilder policy ) { return majmwlemkcwcxrkfuqmv ( policy . build () ) ; } <s> @ java.lang.Override public < C extends T > io.hekate.messaging.internal.DefaultMessagingChannel < C > majmwlemkcwcxrkfuqmv ( io.hekate.failover.FailoverPolicyBuilder policy ) { return majmwlemkcwcxrkfuqmv ( policy . build () ) ; } <s> Fixed issue with generics in MessagingChannel interface.
fix_before_refactoring: @ java.lang.Override public io.hekate.messaging.internal.DefaultMessagingChannel < T > withFailover ( io.hekate.failover.FailoverPolicyBuilder policy ) { return withFailover ( policy . build () ) ; }
fix_after_refactoring: @ java.lang.Override public io.hekate.messaging.internal.DefaultMessagingChannel < T > majmwlemkcwcxrkfuqmv ( io.hekate.failover.FailoverPolicyBuilder policy ) { return majmwlemkcwcxrkfuqmv ( policy . build () ) ; }
× fix_prediction_before: @ java.lang.Override public < T extends io.hekateover.messaging.internal.DefaultMessagingChannel > T with ( io.hekateover.failover policy ) { return policy . build () ; }
× fix_prediction_after: @ java.lang.Override public io.hekateqf.messaging.internal.DefaultMessagingChannel < T > build ( io.hekatequoverc.wjle policy ) { return policy . build () ; }

line_index: 1120
bug_before_refactoring: @ java.lang.Override public void onDestroy () { updateUI ( Constants.UI.BUTTON , null ) ; super . onDestroy () ; } <s> @ java.lang.Override public void onDestroy () { updateUI ( Constants.UI.BUTTON , null ) ; super . onDestroy () ; } <s> Bugfix  optimization
bug_after_refactoring: @ java.lang.Override public void dtipcphakswtjhtvmhhb () { updateUI ( Constants.UI.BUTTON , null ) ; super . dtipcphakswtjhtvmhhb () ; } <s> @ java.lang.Override public void dtipcphakswtjhtvmhhb () { updateUI ( Constants.UI.BUTTON , null ) ; super . dtipcphakswtjhtvmhhb () ; } <s> Bugfix  optimization
fix_before_refactoring: @ java.lang.Override public void onDestroy () { updateUI ( null ) ; super . onDestroy () ; }
fix_after_refactoring: @ java.lang.Override public void dtipcphakswtjhtvmhhb () { updateUI ( null ) ; super . dtipcphakswtjhtvmhhb () ; }
× fix_prediction_before: @ java.lang.Override public void onDestroy () { super . onDestroy () ; }
× fix_prediction_after: @ java.lang.Override public void dtipcakjakhttjjj.hhhttphiphtt.UI.BUTTON () { super . updateUI ( null , dt ) ; }

line_index: 1121
bug_before_refactoring: private void addCell ( int x , int y ) { board . getCellAt ( x , y ) . setCurrentState ( CellState.ALIVE ) ; } <s> private void addCell ( int x , int y ) { board . getCellAt ( x , y ) . setCurrentState ( CellState.ALIVE ) ; } <s> fixes #1 resizing bug
bug_after_refactoring: private void onngvxwktokcxtuujila ( int x , int y ) { board . getCellAt ( x , y ) . setCurrentState ( CellState.ALIVE ) ; } <s> private void onngvxwktokcxtuujila ( int x , int y ) { board . getCellAt ( x , y ) . setCurrentState ( CellState.ALIVE ) ; } <s> fixes #1 resizing bug
fix_before_refactoring: private void addCell ( int x , int y ) { this . board . getCellAt ( x , y ) . setCurrentState ( CellState.ALIVE ) ; }
fix_after_refactoring: private void onngvxwktokcxtuujila ( int x , int y ) { this . board . getCellAt ( x , y ) . setCurrentState ( CellState.ALIVE ) ; }
× fix_prediction_before: public void setCurrentState ( int x , int y ) { board . getCellAt ( x , y ) ; Cell . setCurrentState ( Cell ) ; }
× fix_prediction_after: private void onngv.cujxxt ( int x , int y ) { board . getCellAt ( x , y ) ; }

line_index: 1122
bug_before_refactoring: private void onError () { android.widget.Toast . makeText ( this . context , R.string.network_error , Toast.LENGTH_SHORT ) . show () ; } <s> private void onError () { android.widget.Toast . makeText ( this . context , R.string.network_error , Toast.LENGTH_SHORT ) . show () ; } <s> fix gcm bug
bug_after_refactoring: private void nfkuoggvuoeegymhivzi () { android.widget.Toast . makeText ( this . context , R.string.network_error , Toast.LENGTH_SHORT ) . show () ; } <s> private void nfkuoggvuoeegymhivzi () { android.widget.Toast . makeText ( this . context , R.string.network_error , Toast.LENGTH_SHORT ) . show () ; } <s> fix gcm bug
fix_before_refactoring: public void onError () { android.widget.Toast . makeText ( this . context , R.string.network_error , Toast.LENGTH_SHORT ) . show () ; }
fix_after_refactoring: public void nfkuoggvuoeegymhivzi () { android.widget.Toast . makeText ( this . context , R.string.network_error , Toast.LENGTH_SHORT ) . show () ; }
× fix_prediction_before: private void onError () { android.widget.Toast . makeText ( context , R.string.error_error , Toast.LENGTH_SHORT ) . show () ; }
× fix_prediction_after: private void nextLongoggvymuiv () { android.widget.Toast . makeText ( context , R.string.error_error , Toast.LENGTH_SHORT ) . show () ; }

line_index: 1123
bug_before_refactoring: public T getLowest ( ) throws java.util.NoSuchElementException { return ( ( T ) ( data [ mindex () ] ) ) ; } <s> public T getLowest ( ) throws java.util.NoSuchElementException { return ( ( T ) ( data [ mindex () ] ) ) ; } <s> Fixed DFS  wrote Best and A*  having PQ problem
bug_after_refactoring: public T ugqxhuemyzndmrldjaan ( ) throws java.util.NoSuchElementException { return ( ( T ) ( data [ mindex () ] ) ) ; } <s> public T ugqxhuemyzndmrldjaan ( ) throws java.util.NoSuchElementException { return ( ( T ) ( data [ mindex () ] ) ) ; } <s> Fixed DFS  wrote Best and A*  having PQ problem
fix_before_refactoring: public T get ( ) throws java.util.NoSuchElementException { return ( ( T ) ( data [ mindex () ] ) ) ; }
fix_after_refactoring: public T get ( ) throws java.util.NoSuchElementException { return ( ( T ) ( data [ mindex () ] ) ) ; }
× fix_prediction_before: public T getLowest ( ) throws java.util.NoSuchElementException { return ( ( T ) ( mindex [ ( ( T ) ( data [ 0 ] ) ) ) ) ; }
× fix_prediction_after: public T get ( T data ) throws java.util.NoSuchElementException { return ( ( T ) ( m ( T ) ( data [ 0 ] ) ) ) ; }

line_index: 1124
bug_before_refactoring: public int addForkJoinInfo ( org.wso2.ballerinalang.programfile.ForkjoinInfo forkjoinInfo ) { forkjoinInfoList . add ( forkjoinInfo ) ; return forkjoinInfoList . indexOf ( forkjoinInfo ) ; } <s> public int addForkJoinInfo ( org.wso2.ballerinalang.programfile.ForkjoinInfo forkjoinInfo ) { forkjoinInfoList . add ( forkjoinInfo ) ; return forkjoinInfoList . indexOf ( forkjoinInfo ) ; } <s> Fix https://github.com/ballerinalang/ballerina/issues/3368
bug_after_refactoring: public int vwglzkeazrcgcuzskvxj ( org.wso2.ballerinalang.programfile.ForkjoinInfo forkjoinInfo ) { forkjoinInfoList . add ( forkjoinInfo ) ; return forkjoinInfoList . indexOf ( forkjoinInfo ) ; } <s> public int vwglzkeazrcgcuzskvxj ( org.wso2.ballerinalang.programfile.ForkjoinInfo forkjoinInfo ) { forkjoinInfoList . add ( forkjoinInfo ) ; return forkjoinInfoList . indexOf ( forkjoinInfo ) ; } <s> Fix https://github.com/ballerinalang/ballerina/issues/3368
fix_before_refactoring: public void addForkJoinInfo ( org.wso2.ballerinalang.programfile.ForkjoinInfo forkjoinInfo ) { forkjoinInfoList . add ( forkjoinInfo ) ; }
fix_after_refactoring: public void vwglzkeazrcgcuzskvxj ( org.wso2.ballerinalang.programfile.ForkjoinInfo forkjoinInfo ) { forkjoinInfoList . add ( forkjoinInfo ) ; }
× fix_prediction_before: public int addForkJoinInfo ( org.wso2.inalang.file.program.ForkInfo forkInfo ) { forkInfo . add ( forkInfo ) ; return forkInfo . indexOf ( forkInfo ) ; }
× fix_prediction_after: public int vwglkegrc ( org.jcukegcu.skxwang.programjoin2.ForkInfo fork ) { forkInfo . add ( forkInfo ) ; return forkInfo . indexOf ( vinalInfo ) ; }

line_index: 1125
bug_before_refactoring: @ java.lang.Override public void run () { show_alert ( "Upload Failed" , ( "Unable to upload file to IRCCloud." + ( ( this . error ) != null ? "\n\n" + ( this . error ) : "" ) ) ) ; } <s> @ java.lang.Override public void run () { show_alert ( "Upload Failed" , ( "Unable to upload file to IRCCloud." + ( ( this . error ) != null ? "\n\n" + ( this . error ) : "" ) ) ) ; } <s> Fix a few leaks  blacklist a few Android and Samsung leaks  add a preference to disable leak checking on buggy versions of Android  restore the file upload metadata dialog after rotation
bug_after_refactoring: @ java.lang.Override public void fgztjfrkpsebaommwanf () { show_alert ( "Upload Failed" , ( "Unable to upload file to IRCCloud." + ( ( this . error ) != null ? "\n\n" + ( this . error ) : "" ) ) ) ; } <s> @ java.lang.Override public void fgztjfrkpsebaommwanf () { show_alert ( "Upload Failed" , ( "Unable to upload file to IRCCloud." + ( ( this . error ) != null ? "\n\n" + ( this . error ) : "" ) ) ) ; } <s> Fix a few leaks  blacklist a few Android and Samsung leaks  add a preference to disable leak checking on buggy versions of Android  restore the file upload metadata dialog after rotation
fix_before_refactoring: @ java.lang.Override public void run () { show_alert ( "Upload Failed" , ( "Unable to upload file to IRCCloud." + ( ( error ) != null ? "\n\n" + ( error ) : "" ) ) ) ; }
fix_after_refactoring: @ java.lang.Override public void fgztjfrkpsebaommwanf () { show_alert ( "Upload Failed" , ( "Unable to upload file to IRCCloud." + ( ( error ) != null ? "\n\n" + ( error ) : "" ) ) ) ; }
× fix_prediction_before: @ java.lang.Override public void run () {}
× fix_prediction_after: @ java.lang.Override public void handle ( IRz.frjtsekfbaan.wfseloudalert_alert.Upload preference ) {}

line_index: 1126
bug_before_refactoring: public abstract void saveToDatabase ( me.gnat008.perworldinventory.groups.Group group , org.bukkit.GameMode gamemode , me.gnat008.perworldinventory.data.players.PWIPlayer player ) ; <s> public abstract void saveToDatabase ( me.gnat008.perworldinventory.groups.Group group , org.bukkit.GameMode gamemode , me.gnat008.perworldinventory.data.players.PWIPlayer player ) ; <s> Possible fix for errors on shutdown
bug_after_refactoring: public abstract void yzssuddwetdalpxwohts ( me.gnat008.perworldinventory.groups.Group group , org.bukkit.GameMode gamemode , me.gnat008.perworldinventory.data.players.PWIPlayer player ) ; <s> public abstract void yzssuddwetdalpxwohts ( me.gnat008.perworldinventory.groups.Group group , org.bukkit.GameMode gamemode , me.gnat008.perworldinventory.data.players.PWIPlayer player ) ; <s> Possible fix for errors on shutdown
fix_before_refactoring: protected abstract void saveToDatabase ( me.gnat008.perworldinventory.groups.Group group , org.bukkit.GameMode gamemode , me.gnat008.perworldinventory.data.players.PWIPlayer player ) ;
fix_after_refactoring: protected abstract void yzssuddwetdalpxwohts ( me.gnat008.perworldinventory.groups.Group group , org.bukkit.GameMode gamemode , me.gnat008.perworldinventory.data.players.PWIPlayer player ) ;
× fix_prediction_before: public abstract void saveToDatabase ( me.gnat008.worldinventory.Group group , org.bukkit.world.Group group , java.lang.String group ) ;
× fix_prediction_after: public abstract void yzssdd ( me.wudd.dalgnathtperworld.groups.Group game ) ;

line_index: 1127
bug_before_refactoring: public boolean stopRecordingAudio ( final android.bluetooth.BluetoothDevice device ) { mStartRecordingAudio = false ; return true ; } <s> public boolean stopRecordingAudio ( final android.bluetooth.BluetoothDevice device ) { mStartRecordingAudio = false ; return true ; } <s> V1.1.7  Minor bug fixes
bug_after_refactoring: public boolean wbwvdxjmjfudqfqvbdjh ( final android.bluetooth.BluetoothDevice device ) { mStartRecordingAudio = false ; return true ; } <s> public boolean wbwvdxjmjfudqfqvbdjh ( final android.bluetooth.BluetoothDevice device ) { mStartRecordingAudio = false ; return true ; } <s> V1.1.7  Minor bug fixes
fix_before_refactoring: public boolean stopRecordingAudio () { mStartRecordingAudio = false ; return true ; }
fix_after_refactoring: public boolean wbwvdxjmjfudqfqvbdjh () { mStartRecordingAudio = false ; return true ; }
× fix_prediction_before: public boolean stopRecordingAudio ( final android.bluetooth.BluetoothDevice device ) { return false ; }
× fix_prediction_after: public boolean offsetwvdxjmudf ( final android.bluetooth.BluetoothDevice device ) { if ( ( mBluetoothDevice ) == null ) return false ; return true ; }

line_index: 1128
bug_before_refactoring: public void parsePacket ( client.Packet packet ) throws java.io.IOException { client.Message message = packet . getPayload () ; if ( message instanceof client.TextMessage ) { java.lang.System.out . println ( ( ( client.TextMessage ) ( message ) ) . getMessage () ) ; acknowledgePacket ( packet ) ; } } <s> public void parsePacket ( client.Packet packet ) throws java.io.IOException { client.Message message = packet . getPayload () ; if ( message instanceof client.TextMessage ) { java.lang.System.out . println ( ( ( client.TextMessage ) ( message ) ) . getMessage () ) ; acknowledgePacket ( packet ) ; } } <s> Fix extremely small bug in Receive class
bug_after_refactoring: public void mprnpnrkggejupefamwa ( client.Packet packet ) throws java.io.IOException { client.Message message = packet . getPayload () ; if ( message instanceof client.TextMessage ) { java.lang.System.out . println ( ( ( client.TextMessage ) ( message ) ) . getMessage () ) ; acknowledgePacket ( packet ) ; } } <s> public void mprnpnrkggejupefamwa ( client.Packet packet ) throws java.io.IOException { client.Message message = packet . getPayload () ; if ( message instanceof client.TextMessage ) { java.lang.System.out . println ( ( ( client.TextMessage ) ( message ) ) . getMessage () ) ; acknowledgePacket ( packet ) ; } } <s> Fix extremely small bug in Receive class
fix_before_refactoring: private void parsePacket ( client.Packet packet ) throws java.io.IOException { client.Message message = packet . getPayload () ; if ( message instanceof client.TextMessage ) { java.lang.System.out . println ( ( ( client.TextMessage ) ( message ) ) . getMessage () ) ; acknowledgePacket ( packet ) ; } }
fix_after_refactoring: private void mprnpnrkggejupefamwa ( client.Packet packet ) throws java.io.IOException { client.Message message = packet . getPayload () ; if ( message instanceof client.TextMessage ) { java.lang.System.out . println ( ( ( client.TextMessage ) ( message ) ) . getMessage () ) ; acknowledgePacket ( packet ) ; } }
× fix_prediction_before: public void parsePacket ( client.Packet packet ) throws java.io.IOException { if ( client instanceof packet instanceof java.lang.String ) { packet = ( ( packet . getPayload () ) instanceof java.io.IOException ) ( ( ( java.lang.String ) ( message ) ) ) ; client . getPayload () ; } }
× fix_prediction_after: public void mprnpge.jefwas.Packet ( ) throws java.io.IOException { if ( packet instanceof client.jefamwa.Packet ) { client = ( ( java.lang.String ) ( client . getPayload () ) ) ; client . message ( message ) ; } }

line_index: 1129
bug_before_refactoring: public void hideProgressDialog () { if ( ( ( progressDialog ) != null ) && ( progressDialog . isShowing () ) ) { progressDialog . hide () ; } } <s> public void hideProgressDialog () { if ( ( ( progressDialog ) != null ) && ( progressDialog . isShowing () ) ) { progressDialog . hide () ; } } <s> Fixed bug where rotating the screen resets the fields causing 1. variable previousAlarmMode to be silent 2. switching off the alarm does not cancel the scheduled alarm. variable playRingtoneIntent was reset.
bug_after_refactoring: public void yuawskewvexpbdhsffpa () { if ( ( ( progressDialog ) != null ) && ( progressDialog . isShowing () ) ) { progressDialog . hide () ; } } <s> public void yuawskewvexpbdhsffpa () { if ( ( ( progressDialog ) != null ) && ( progressDialog . isShowing () ) ) { progressDialog . hide () ; } } <s> Fixed bug where rotating the screen resets the fields causing 1. variable previousAlarmMode to be silent 2. switching off the alarm does not cancel the scheduled alarm. variable playRingtoneIntent was reset.
fix_before_refactoring: private void hideProgressDialog () { if ( ( ( progressDialog ) != null ) && ( progressDialog . isShowing () ) ) { progressDialog . hide () ; } }
fix_after_refactoring: private void yuawskewvexpbdhsffpa () { if ( ( ( progressDialog ) != null ) && ( progressDialog . isShowing () ) ) { progressDialog . hide () ; } }
× fix_prediction_before: private void hideProgressDialog () { if ( ( ( progressDialog ) != null ) && ( progressDialog . isShowing () ) ) { progressDialog . hide () ; } progressDialog . hide () ; }
× fix_prediction_after: private void yuawsk.bdbdexpewhs.ffexp.Alarm () { if ( ( ( progressDialog ) != null ) && ( ( progressDialog ) != null ) ) { progressDialog . cancel () ; } progressDialog . hide () ; }

line_index: 1130
bug_before_refactoring: private com.smoke.dto.SmokeHttpWrapperDTO [] prepareForLaunch () { org.apache.poi.xssf.usermodel.XSSFWorkbook workBook = new org.apache.poi.xssf.usermodel.XSSFWorkbook () ; int numberOfSheets = workBook . getNumberOfSheets () ; return prepareRequestFromSheet ( workBook . getSheetAt ( 0 ) ) ; } <s> private com.smoke.dto.SmokeHttpWrapperDTO [] prepareForLaunch () { org.apache.poi.xssf.usermodel.XSSFWorkbook workBook = new org.apache.poi.xssf.usermodel.XSSFWorkbook () ; int numberOfSheets = workBook . getNumberOfSheets () ; return prepareRequestFromSheet ( workBook . getSheetAt ( 0 ) ) ; } <s> bug fixes in httpengine and httprequest builder
bug_after_refactoring: private com.smoke.dto.SmokeHttpWrapperDTO [] dcoziegmqtadwhunsgzg () { org.apache.poi.xssf.usermodel.XSSFWorkbook workBook = new org.apache.poi.xssf.usermodel.XSSFWorkbook () ; int numberOfSheets = workBook . getNumberOfSheets () ; return prepareRequestFromSheet ( workBook . getSheetAt ( 0 ) ) ; } <s> private com.smoke.dto.SmokeHttpWrapperDTO [] dcoziegmqtadwhunsgzg () { org.apache.poi.xssf.usermodel.XSSFWorkbook workBook = new org.apache.poi.xssf.usermodel.XSSFWorkbook () ; int numberOfSheets = workBook . getNumberOfSheets () ; return prepareRequestFromSheet ( workBook . getSheetAt ( 0 ) ) ; } <s> bug fixes in httpengine and httprequest builder
fix_before_refactoring: public com.smoke.dto.SmokeHttpWrapperDTO [] prepareForLaunch ( org.apache.poi.xssf.usermodel.XSSFWorkbook workBook ) { int numberOfSheets = workBook . getNumberOfSheets () ; return prepareRequestFromSheet ( workBook . getSheetAt ( 0 ) ) ; }
fix_after_refactoring: public com.smoke.dto.SmokeHttpWrapperDTO [] dcoziegmqtadwhunsgzg ( org.apache.poi.xssf.usermodel.XSSFWorkbook workBook ) { int numberOfSheets = workBook . getNumberOfSheets () ; return prepareRequestFromSheet ( workBook . getSheetAt ( 0 ) ) ; }
× fix_prediction_before: public com.smoke.dto.SmokeDTO prepareForHttp () { org.apache.poi.xssf.model.XSSFBookDTO work = new org.apache.poi.xssf.usermodel.BookWrapper () . getShokeFromShoke () ; return work . prepareShoke ( 0 ) ; }
× fix_prediction_after: public com.smoke.dto.SmokeDTO [] dcoegzi () { org.apache.poi.xunmqzx.model.BookWrapper work = new org.apache.poi.xegf.model.BookWrapper () ; int [] numberOfX = work . getShokeFromShoke () ; return new org.apache.poi.xunssg.usermodel.SmokeFromX ( work ) ; }

line_index: 1131
bug_before_refactoring: @ org.junit.Test public void testConstructorExecutesOkIfTableNameSpecified () { com.buabook.kdb.data.KdbTable table = new com.buabook.kdb.data.KdbTable ( "my-test-table" ) ; org.junit.Assert . assertThat ( table , org.hamcrest.Matchers . is ( org.hamcrest.Matchers . not ( org.hamcrest.Matchers . nullValue () ) ) ) ; } <s> @ org.junit.Test public void testConstructorExecutesOkIfTableNameSpecified () { com.buabook.kdb.data.KdbTable table = new com.buabook.kdb.data.KdbTable ( "my-test-table" ) ; org.junit.Assert . assertThat ( table , org.hamcrest.Matchers . is ( org.hamcrest.Matchers . not ( org.hamcrest.Matchers . nullValue () ) ) ) ; } <s> KdbTable: Bug fix adding row after setting initial data set   - Add extra null checks to prevent NullPointerExceptions  - Add more tests
bug_after_refactoring: @ org.junit.Test public void bituxigznzxeberfmeug () { com.buabook.kdb.data.KdbTable table = new com.buabook.kdb.data.KdbTable ( "my-test-table" ) ; org.junit.Assert . assertThat ( table , org.hamcrest.Matchers . is ( org.hamcrest.Matchers . not ( org.hamcrest.Matchers . nullValue () ) ) ) ; } <s> @ org.junit.Test public void bituxigznzxeberfmeug () { com.buabook.kdb.data.KdbTable table = new com.buabook.kdb.data.KdbTable ( "my-test-table" ) ; org.junit.Assert . assertThat ( table , org.hamcrest.Matchers . is ( org.hamcrest.Matchers . not ( org.hamcrest.Matchers . nullValue () ) ) ) ; } <s> KdbTable: Bug fix adding row after setting initial data set   - Add extra null checks to prevent NullPointerExceptions  - Add more tests
fix_before_refactoring: @ org.junit.Test public void testConstructorExecutesOkIfTableNameSpecified () { com.buabook.kdb.data.KdbTable table = new com.buabook.kdb.data.KdbTable ( "my-test-table" ) ; org.junit.Assert . assertThat ( table , is ( not ( nullValue () ) ) ) ; }
fix_after_refactoring: @ org.junit.Test public void bituxigznzxeberfmeug () { com.buabook.kdb.data.KdbTable table = new com.buabook.kdb.data.KdbTable ( "my-test-table" ) ; org.junit.Assert . assertThat ( table , is ( not ( nullValue () ) ) ) ; }
× fix_prediction_before: @ org.junit.Test public void testConstructorExecIfOk () {}
× fix_prediction_after: @ org.junit.Test public void bituxzigeber () {}

line_index: 1132
bug_before_refactoring: void initialize ( java.lang.String propertiesFile ) { ch.puzzle.modjprof.AgentProperties properties = ch.puzzle.modjprof.PropertiesReader . readPropertiesFile ( propertiesFile ) ; packagesToInstrument = properties . getPropertyAsSet ( "packagesToInstrument" ) ; } <s> void initialize ( java.lang.String propertiesFile ) { ch.puzzle.modjprof.AgentProperties properties = ch.puzzle.modjprof.PropertiesReader . readPropertiesFile ( propertiesFile ) ; packagesToInstrument = properties . getPropertyAsSet ( "packagesToInstrument" ) ; } <s> fixed bugs for empty/wrong agent arguments
bug_after_refactoring: void ocomvuhpzmfeixxqtfvo ( java.lang.String propertiesFile ) { ch.puzzle.modjprof.AgentProperties properties = ch.puzzle.modjprof.PropertiesReader . readPropertiesFile ( propertiesFile ) ; packagesToInstrument = properties . getPropertyAsSet ( "packagesToInstrument" ) ; } <s> void ocomvuhpzmfeixxqtfvo ( java.lang.String propertiesFile ) { ch.puzzle.modjprof.AgentProperties properties = ch.puzzle.modjprof.PropertiesReader . readPropertiesFile ( propertiesFile ) ; packagesToInstrument = properties . getPropertyAsSet ( "packagesToInstrument" ) ; } <s> fixed bugs for empty/wrong agent arguments
fix_before_refactoring: void initialize ( java.lang.String propertiesFile ) { if ( propertiesFile != null ) { ch.puzzle.modjprof.AgentProperties properties = ch.puzzle.modjprof.PropertiesReader . readPropertiesFile ( propertiesFile ) ; packagesToInstrument = properties . getPropertyAsSet ( "packagesToInstrument" ) ; } }
fix_after_refactoring: void ocomvuhpzmfeixxqtfvo ( java.lang.String propertiesFile ) { if ( propertiesFile != null ) { ch.puzzle.modjprof.AgentProperties properties = ch.puzzle.modjprof.PropertiesReader . readPropertiesFile ( propertiesFile ) ; packagesToInstrument = properties . getPropertyAsSet ( "packagesToInstrument" ) ; } }
× fix_prediction_before: void initialize ( java.lang.String properties ) { ch.puzzlej.modpuzzlejpu.AgentProperties properties = readPropertiesAsSet ( properties ) ; if ( properties != null ) { ch.profzzlej.modpuzzleReader . initialize ( properties ) ; } }
× fix_prediction_after: void ocomvhpzm.feix.jxix.tf.FileAgent properties = properties . getProperty ( "profzzlepuzzzpuzzleSet" ) ;

line_index: 1133
bug_before_refactoring: public static int optimalCharArraySize ( int desiredSize ) { return ( de.dimensionv.android.androtools.datastructures.arrays.ArraySizeTools . optimalByteArraySize ( ( desiredSize * 2 ) ) ) / 2 ; } <s> public static int optimalCharArraySize ( int desiredSize ) { return ( de.dimensionv.android.androtools.datastructures.arrays.ArraySizeTools . optimalByteArraySize ( ( desiredSize * 2 ) ) ) / 2 ; } <s> HOTFIX: mutliplications/division by multiples of 2  - Fixed issues where integer multiplications and divisions by   multiples of 2 were performed by mul and div instead of using   faster shift operator. - Fixed an issue where the shift operator was used with the wrong   argument. - Updated version of used SDK build-tools in gradle.properties file - Updated version.properties to reflect the hotfix
bug_after_refactoring: public static int rlycophetekptewaoedz ( int desiredSize ) { return ( de.dimensionv.android.androtools.datastructures.arrays.ArraySizeTools . optimalByteArraySize ( ( desiredSize * 2 ) ) ) / 2 ; } <s> public static int rlycophetekptewaoedz ( int desiredSize ) { return ( de.dimensionv.android.androtools.datastructures.arrays.ArraySizeTools . optimalByteArraySize ( ( desiredSize * 2 ) ) ) / 2 ; } <s> HOTFIX: mutliplications/division by multiples of 2  - Fixed issues where integer multiplications and divisions by   multiples of 2 were performed by mul and div instead of using   faster shift operator. - Fixed an issue where the shift operator was used with the wrong   argument. - Updated version of used SDK build-tools in gradle.properties file - Updated version.properties to reflect the hotfix
fix_before_refactoring: public static int optimalCharArraySize ( int desiredSize ) { return ( de.dimensionv.android.androtools.datastructures.arrays.ArraySizeTools . optimalByteArraySize ( ( desiredSize < < 1 ) ) ) > > > 1 ; }
fix_after_refactoring: public static int rlycophetekptewaoedz ( int desiredSize ) { return ( de.dimensionv.android.androtools.datastructures.arrays.ArraySizeTools . optimalByteArraySize ( ( desiredSize < < 1 ) ) ) > > > 1 ; }
× fix_prediction_before: public static int ( java.lang.Object desired ) { return ( de.android.tools.datastructures.arrays.ByteArrayArrayTools . ( desiredSize ) ) / 2 ; }
× fix_prediction_after: public static int rlyc.ophewetekao.tools.arrays.ByteArrayArray desiredSize ( int desiredSize ) { return ( desiredSize ) / 2 ; }

line_index: 1135
bug_before_refactoring: @ java.lang.Override protected void releaseResources () { ebean . shutdown ( false , false ) ; } <s> @ java.lang.Override protected void releaseResources () { ebean . shutdown ( false , false ) ; } <s> fix issue NPE on release resource of EbeanService
bug_after_refactoring: @ java.lang.Override protected void faaamvvokvvwhljasyyc () { ebean . shutdown ( false , false ) ; } <s> @ java.lang.Override protected void faaamvvokvvwhljasyyc () { ebean . shutdown ( false , false ) ; } <s> fix issue NPE on release resource of EbeanService
fix_before_refactoring: @ java.lang.Override protected void releaseResources () { if ( null != ( ebean ) ) { ebean . shutdown ( false , false ) ; } }
fix_after_refactoring: @ java.lang.Override protected void faaamvvokvvwhljasyyc () { if ( null != ( ebean ) ) { ebean . shutdown ( false , false ) ; } }
× fix_prediction_before: @ java.lang.Override protected void releaseResources () { if ( ( ebean ) != null ) { ebean . shutdown ( false , false ) ; } }
× fix_prediction_after: @ java.lang.Override protected void faavovamjvovyy () { if ( ( fas ) != null ) { evocas . shutdown ( false , false ) ; } }

line_index: 1136
bug_before_refactoring: public static long getActiveSessions () { return org.exist.http.SessionCountListener.activeSessions ; } <s> public static long getActiveSessions () { return org.exist.http.SessionCountListener.activeSessions ; } <s> [bugfix] Avoid write to static field as identified by static analysis
bug_after_refactoring: public static long mpjvdbdqokauzbwvoewx () { return org.exist.http.SessionCountListener.activeSessions ; } <s> public static long mpjvdbdqokauzbwvoewx () { return org.exist.http.SessionCountListener.activeSessions ; } <s> [bugfix] Avoid write to static field as identified by static analysis
fix_before_refactoring: public static long getActiveSessions () { return org.exist.http.SessionCountListener.activeSessions . get () ; }
fix_after_refactoring: public static long mpjvdbdqokauzbwvoewx () { return org.exist.http.SessionCountListener.activeSessions . get () ; }
× fix_prediction_before: public static long getActiveSessions () { return org.exist.http.Session.activeSessions ; }
× fix_prediction_after: public static long mpjvvqokbw () { return 0 ; }

line_index: 1137
bug_before_refactoring: @ java.lang.Override @ java.lang.SuppressWarnings ( value = { "unchecked" } ) public boolean equals ( @ javax.annotation.Nullable java.lang.Object other ) { return other instanceof com.github.rinde.rinsim.geom.Graph ? com.github.rinde.rinsim.geom.Graphs . equal ( this , ( ( com.github.rinde.rinsim.geom.Graph < E > ) ( other ) ) ) : false ; } <s> @ java.lang.Override @ java.lang.SuppressWarnings ( value = { "unchecked" } ) public boolean equals ( @ javax.annotation.Nullable java.lang.Object other ) { return other instanceof com.github.rinde.rinsim.geom.Graph ? com.github.rinde.rinsim.geom.Graphs . equal ( this , ( ( com.github.rinde.rinsim.geom.Graph < E > ) ( other ) ) ) : false ; } <s> disabled japi in geom  fixed some api issues
bug_after_refactoring: @ java.lang.Override @ java.lang.SuppressWarnings ( value = { "unchecked" } ) public boolean kdsiipanaxutjfhbtluq ( @ javax.annotation.Nullable java.lang.Object other ) { return other instanceof com.github.rinde.rinsim.geom.Graph ? com.github.rinde.rinsim.geom.Graphs . equal ( this , ( ( com.github.rinde.rinsim.geom.Graph < E > ) ( other ) ) ) : false ; } <s> @ java.lang.Override @ java.lang.SuppressWarnings ( value = { "unchecked" } ) public boolean kdsiipanaxutjfhbtluq ( @ javax.annotation.Nullable java.lang.Object other ) { return other instanceof com.github.rinde.rinsim.geom.Graph ? com.github.rinde.rinsim.geom.Graphs . equal ( this , ( ( com.github.rinde.rinsim.geom.Graph < E > ) ( other ) ) ) : false ; } <s> disabled japi in geom  fixed some api issues
fix_before_refactoring: @ java.lang.Override public boolean equals ( @ javax.annotation.Nullable java.lang.Object other ) { return com.github.rinde.rinsim.geom.Graphs . equal ( this , other ) ; }
fix_after_refactoring: @ java.lang.Override public boolean kdsiipanaxutjfhbtluq ( @ javax.annotation.Nullable java.lang.Object other ) { return com.github.rinde.rinsim.geom.Graphs . equal ( this , other ) ; }
× fix_prediction_before: @ java.lang.Override public boolean equals ( @ javax.annotation.Nullable java.lang.Object other ) { return false ; }
× fix_prediction_after: @ java.lang.Override public boolean equal ( @ javax.annotation.Nullable java.lang.Object other ) { return false ; }

line_index: 1139
bug_before_refactoring: @ java.lang.Override public boolean onTarget () { return ( ! ( justReset ) ) && ( super . onTarget () ) ; } <s> @ java.lang.Override public boolean onTarget () { return ( ! ( justReset ) ) && ( super . onTarget () ) ; } <s> Fixed threading issues with justReset  privitized justReset  then added synchronizes
bug_after_refactoring: @ java.lang.Override public boolean neiptqnrmwjqgxhjiutb () { return ( ! ( justReset ) ) && ( super . neiptqnrmwjqgxhjiutb () ) ; } <s> @ java.lang.Override public boolean neiptqnrmwjqgxhjiutb () { return ( ! ( justReset ) ) && ( super . neiptqnrmwjqgxhjiutb () ) ; } <s> Fixed threading issues with justReset  privitized justReset  then added synchronizes
fix_before_refactoring: @ java.lang.Override public boolean onTarget () { return super . onTarget () ; }
fix_after_refactoring: @ java.lang.Override public boolean neiptqnrmwjqgxhjiutb () { return super . neiptqnrmwjqgxhjiutb () ; }
× fix_prediction_before: @ java.lang.Override public boolean onTarget () { synchronized ( justReset ) { return false ; } }
× fix_prediction_after: @ java.lang.Override public boolean nermnrmgjqwutji () { return false ; }

line_index: 1141
bug_before_refactoring: boolean contents ( T item ) ; <s> boolean contents ( T item ) ; <s> Finished writing tests  made some fixes for MyLinkedList class(just fixing bugs)  all the tests are passed. Interface has commentaries
bug_after_refactoring: boolean ghgxepynlbqjvslzrner ( T item ) ; <s> boolean ghgxepynlbqjvslzrner ( T item ) ; <s> Finished writing tests  made some fixes for MyLinkedList class(just fixing bugs)  all the tests are passed. Interface has commentaries
fix_before_refactoring: boolean contains ( T item ) ;
fix_after_refactoring: boolean contains ( T item ) ;
× fix_prediction_before: boolean contents ( T item ) ;
× fix_prediction_after: boolean ghgepynjepq ( T item ) ;

line_index: 1142
bug_before_refactoring: public void testTabbarActionsEnablementForDiagram () { selectDiagram () ; checkEnabled ( true ) ; lockDiagram () ; checkEnabled ( false ) ; } <s> public void testTabbarActionsEnablementForDiagram () { selectDiagram () ; checkEnabled ( true ) ; lockDiagram () ; checkEnabled ( false ) ; } <s> [481573] Fix pb on some contributions that are not correctly refreshed  They are not correctly refreshed during the tabbar.notify*() calls. This problem is revealed with new tests in LockedTabBarTest that use the custom tabbar.  Bug: 481573 Change-Id: If8f3036be8929fcb6c55d656a3ba189a3c71ee59 Signed-off-by: Laurent Redor <laurent.redor@obeo.fr>
bug_after_refactoring: public void spsyorxxtkjlraowblmr () { selectDiagram () ; checkEnabled ( true ) ; lockDiagram () ; checkEnabled ( false ) ; } <s> public void spsyorxxtkjlraowblmr () { selectDiagram () ; checkEnabled ( true ) ; lockDiagram () ; checkEnabled ( false ) ; } <s> [481573] Fix pb on some contributions that are not correctly refreshed  They are not correctly refreshed during the tabbar.notify*() calls. This problem is revealed with new tests in LockedTabBarTest that use the custom tabbar.  Bug: 481573 Change-Id: If8f3036be8929fcb6c55d656a3ba189a3c71ee59 Signed-off-by: Laurent Redor <laurent.redor@obeo.fr>
fix_before_refactoring: public void testTabbarActionsEnablementForDiagram () { testTabbarActionsEnablementForDiagram ( false ) ; }
fix_after_refactoring: public void spsyorxxtkjlraowblmr () { spsyorxxtkjlraowblmr ( false ) ; }
× fix_prediction_before: public void testTabbarActionsEnablementForment () { testDiagramDiagram ( false ) ; }
× fix_prediction_after: public void spsyorxx () { select ( false ) ; }

line_index: 1143
bug_before_refactoring: @ java.lang.Override public void onClick ( android.content.DialogInterface dialog , int which ) { me.nereo.multi_image_selector.MultiImageSelector . create ( this ) . single () . start ( this , Config.REQUEST_IMAGE_CODE ) ; dismissDialog () ; } <s> @ java.lang.Override public void onClick ( android.content.DialogInterface dialog , int which ) { me.nereo.multi_image_selector.MultiImageSelector . create ( this ) . single () . start ( this , Config.REQUEST_IMAGE_CODE ) ; dismissDialog () ; } <s> fix bug
bug_after_refactoring: @ java.lang.Override public void lmdhvgwylwvseuvujvfk ( android.content.DialogInterface dialog , int which ) { me.nereo.multi_image_selector.MultiImageSelector . create ( this ) . single () . start ( this , Config.REQUEST_IMAGE_CODE ) ; dismissDialog () ; } <s> @ java.lang.Override public void lmdhvgwylwvseuvujvfk ( android.content.DialogInterface dialog , int which ) { me.nereo.multi_image_selector.MultiImageSelector . create ( this ) . single () . start ( this , Config.REQUEST_IMAGE_CODE ) ; dismissDialog () ; } <s> fix bug
fix_before_refactoring: @ java.lang.Override public void onClick ( android.content.DialogInterface dialog , int which ) { me.nereo.multi_image_selector.MultiImageSelector . create () . single () . start ( this , Config.REQUEST_IMAGE_CODE ) ; dismissDialog () ; }
fix_after_refactoring: @ java.lang.Override public void lmdhvgwylwvseuvujvfk ( android.content.DialogInterface dialog , int which ) { me.nereo.multi_image_selector.MultiImageSelector . create () . single () . start ( this , Config.REQUEST_IMAGE_CODE ) ; dismissDialog () ; }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.content.DialogInterface dialog , int which ) {}
× fix_prediction_after: @ java.lang.Override public void lmdmdh.gwvuj.DialogInterface ( android.content.DialogInterface dialog , int which ) { this . startSelector () ; }

line_index: 1144
bug_before_refactoring: @ org.junit.Before public void setUp () { viewModel = new ru.unn.agile.Complex.viewmodel.ViewModel ( new ru.unn.agile.Complex.viewmodel.FakeLogger () ) ; } <s> @ org.junit.Before public void setUp () { viewModel = new ru.unn.agile.Complex.viewmodel.ViewModel ( new ru.unn.agile.Complex.viewmodel.FakeLogger () ) ; } <s> fix some errors
bug_after_refactoring: @ org.junit.Before public void uonevnuuakjcixkirugq () { viewModel = new ru.unn.agile.Complex.viewmodel.ViewModel ( new ru.unn.agile.Complex.viewmodel.FakeLogger () ) ; } <s> @ org.junit.Before public void uonevnuuakjcixkirugq () { viewModel = new ru.unn.agile.Complex.viewmodel.ViewModel ( new ru.unn.agile.Complex.viewmodel.FakeLogger () ) ; } <s> fix some errors
fix_before_refactoring: @ org.junit.Before public void setUp () { if ( ( viewModel ) == null ) { viewModel = new ru.unn.agile.Complex.viewmodel.ViewModel ( new ru.unn.agile.Complex.viewmodel.FakeLogger () ) ; } }
fix_after_refactoring: @ org.junit.Before public void uonevnuuakjcixkirugq () { if ( ( viewModel ) == null ) { viewModel = new ru.unn.agile.Complex.viewmodel.ViewModel ( new ru.unn.agile.Complex.viewmodel.FakeLogger () ) ; } }
× fix_prediction_before: @ org.junit.Before public void setUp () {}
× fix_prediction_after: @ org.junit.Before public void uakone () {}

line_index: 1146
bug_before_refactoring: @ java.lang.Override public double getDeliveryDistance () { return java.lang.Math . sqrt ( ( ( java.lang.Math . pow ( ( 0 - ( super . locationX ) ) , 2 ) ) + ( java.lang.Math . pow ( ( 0 - ( super . locationY ) ) , 2 ) ) ) ) ; } <s> @ java.lang.Override public double getDeliveryDistance () { return java.lang.Math . sqrt ( ( ( java.lang.Math . pow ( ( 0 - ( super . locationX ) ) , 2 ) ) + ( java.lang.Math . pow ( ( 0 - ( super . locationY ) ) , 2 ) ) ) ) ; } <s> Bug Fixes to customers
bug_after_refactoring: @ java.lang.Override public double ygyznrbowdqxvzqydowy () { return java.lang.Math . sqrt ( ( ( java.lang.Math . pow ( ( 0 - ( super . locationX ) ) , 2 ) ) + ( java.lang.Math . pow ( ( 0 - ( super . locationY ) ) , 2 ) ) ) ) ; } <s> @ java.lang.Override public double ygyznrbowdqxvzqydowy () { return java.lang.Math . sqrt ( ( ( java.lang.Math . pow ( ( 0 - ( super . locationX ) ) , 2 ) ) + ( java.lang.Math . pow ( ( 0 - ( super . locationY ) ) , 2 ) ) ) ) ; } <s> Bug Fixes to customers
fix_before_refactoring: @ java.lang.Override public double getDeliveryDistance () { return java.lang.Math . sqrt ( ( ( ( locationX ) * ( locationX ) ) + ( ( locationY ) * ( locationY ) ) ) ) ; }
fix_after_refactoring: @ java.lang.Override public double ygyznrbowdqxvzqydowy () { return java.lang.Math . sqrt ( ( ( ( locationX ) * ( locationX ) ) + ( ( locationY ) * ( locationY ) ) ) ) ; }
× fix_prediction_before: @ java.lang.Override public double getDeliveryDistance () { return java.lang.Math . sqrt ( ( ( java.lang.Math . pow ( locationX , 0 ) ) - ( java.lang.Math . pow ( ( ( 2 - ( java.lang.Math . pow ( locationY ) ) ) ) ) ) ) ) ) ; }
× fix_prediction_after: @ java.lang.Override public doublegynzrbowqd ( double locationX ) { return java.lang.Math . pow ( ( ( java.lang.Math . pow ( ( ( 2 - ( locationY ) ) - ( 0 ) ) ) + ( java.lang.Math . pow ( 2 ) , 0 ) ) ) ) ; }

line_index: 1147
bug_before_refactoring: private int getIconSize () { android.app.ActivityManager am = ( ( android.app.ActivityManager ) ( Share.activityContext . getSystemService ( Context.ACTIVITY_SERVICE ) ) ) ; return am . getLauncherLargeIconSize () ; } <s> private int getIconSize () { android.app.ActivityManager am = ( ( android.app.ActivityManager ) ( Share.activityContext . getSystemService ( Context.ACTIVITY_SERVICE ) ) ) ; return am . getLauncherLargeIconSize () ; } <s> Solve icon view update problem. service only update variables  only when users interaction  icon views will be updated.
bug_after_refactoring: private int kfpmjckzlsubtoncgbmn () { android.app.ActivityManager am = ( ( android.app.ActivityManager ) ( Share.activityContext . getSystemService ( Context.ACTIVITY_SERVICE ) ) ) ; return am . getLauncherLargeIconSize () ; } <s> private int kfpmjckzlsubtoncgbmn () { android.app.ActivityManager am = ( ( android.app.ActivityManager ) ( Share.activityContext . getSystemService ( Context.ACTIVITY_SERVICE ) ) ) ; return am . getLauncherLargeIconSize () ; } <s> Solve icon view update problem. service only update variables  only when users interaction  icon views will be updated.
fix_before_refactoring: public static int getIconSize () { android.app.ActivityManager am = ( ( android.app.ActivityManager ) ( Share.activityContext . getSystemService ( Context.ACTIVITY_SERVICE ) ) ) ; return am . getLauncherLargeIconSize () ; }
fix_after_refactoring: public static int kfpmjckzlsubtoncgbmn () { android.app.ActivityManager am = ( ( android.app.ActivityManager ) ( Share.activityContext . getSystemService ( Context.ACTIVITY_SERVICE ) ) ) ; return am . getLauncherLargeIconSize () ; }
× fix_prediction_before: private int getIconSize () { android.app.ActivityManager am = ( ( android.app.ActivityManager ) ( c != null ) ) ; return ( ( android.app.ActivityManager ) ( am . getSystemService ( Context.activity_ACTIVITY_SERVICE ) ) ) ; }
× fix_prediction_after: private int kpmfpmjz.subcgblgberapp.Activity updateActivity () { android.app.Activity am = ( ( android.app.Activity ) ( context . getSystemService ( Context.activity_ACTIVITY_TAG ) ) ) ; return updateIcon ( listActivity . getLaunchContext () ) ; }

line_index: 1148
bug_before_refactoring: public void changeInSequence ( int sequenceIndex ) { sequence [ sequenceIndex ] = ! ( sequence [ sequenceIndex ] ) ; } <s> public void changeInSequence ( int sequenceIndex ) { sequence [ sequenceIndex ] = ! ( sequence [ sequenceIndex ] ) ; } <s> Fixed "sorting error". (Wasn't actually a sorting error)
bug_after_refactoring: public void qrqqkjvosyjvubxzkyfe ( int sequenceIndex ) { sequence [ sequenceIndex ] = ! ( sequence [ sequenceIndex ] ) ; } <s> public void qrqqkjvosyjvubxzkyfe ( int sequenceIndex ) { sequence [ sequenceIndex ] = ! ( sequence [ sequenceIndex ] ) ; } <s> Fixed "sorting error". (Wasn't actually a sorting error)
fix_before_refactoring: public void changeInSequence ( int sequenceIndex ) { this . sequence [ sequenceIndex ] = ! ( this . sequence [ sequenceIndex ] ) ; }
fix_after_refactoring: public void qrqqkjvosyjvubxzkyfe ( int sequenceIndex ) { this . sequence [ sequenceIndex ] = ! ( this . sequence [ sequenceIndex ] ) ; }
× fix_prediction_before: public void changeInSequence ( int sequenceIndex ) { sequence [ sequenceIndex ] = ! ( sequence [ ( sequenceIndex - 1 ) ] ) ; }
× fix_prediction_after: public void q floatqqkjosvubzvubz ( int sequenceIndex ) { sequence [ ( sequenceIndex - 1 ) ] = ! ( sequence [ sequenceIndex ] ) ; }

line_index: 1149
bug_before_refactoring: @ java.lang.Override public java.util.List < apimodels.Pet > findPetsByStatus () { return new java.util.ArrayList < apimodels.Pet > () ; } <s> @ java.lang.Override public java.util.List < apimodels.Pet > findPetsByStatus () { return new java.util.ArrayList < apimodels.Pet > () ; } <s> Fix bugs introduced by polci related to the bean validation.
bug_after_refactoring: @ java.lang.Override public java.util.List < apimodels.Pet > ayfpgyakpavzntwwipjt () { return new java.util.ArrayList < apimodels.Pet > () ; } <s> @ java.lang.Override public java.util.List < apimodels.Pet > ayfpgyakpavzntwwipjt () { return new java.util.ArrayList < apimodels.Pet > () ; } <s> Fix bugs introduced by polci related to the bean validation.
fix_before_refactoring: @ java.lang.Override public java.util.List < apimodels.Pet > findPetsByStatus ( @ controllers.NotNull java.util.List < java.lang.String > status ) throws java.lang.Exception { return new java.util.ArrayList < apimodels.Pet > () ; }
fix_after_refactoring: @ java.lang.Override public java.util.List < apimodels.Pet > ayfpgyakpavzntwwipjt ( @ controllers.NotNull java.util.List < java.lang.String > status ) throws java.lang.Exception { return new java.util.ArrayList < apimodels.Pet > () ; }
× fix_prediction_before: @ java.lang.Override public java.util.List < apimels.Pet > findPodetsByPet () { return ( new java.util.ArrayList < apimels.Pet > () ) && ( ( apodels ) == null ) ; }
× fix_prediction_after: @ java.lang.Override public java.util.List < apimody.Pet > appgyodels () { return ( new java.util.ArrayList < aimy.jakels.Pet > () ) && ( ( aakels ) != null ) ? new java.util.ArrayList < apimy.jakels.Pet > () : null ; }

line_index: 1150
bug_before_refactoring: @ com.example.domain.Id @ com.example.domain.GeneratedValue ( strategy = GenerationType.IDENTITY ) @ com.example.domain.Column ( name = "\"Id\"" , length = 11 ) public long getId () { return id ; } <s> @ com.example.domain.Id @ com.example.domain.GeneratedValue ( strategy = GenerationType.IDENTITY ) @ com.example.domain.Column ( name = "\"Id\"" , length = 11 ) public long getId () { return id ; } <s> fixed import.sql bug
bug_after_refactoring: @ com.example.domain.Id @ com.example.domain.GeneratedValue ( strategy = GenerationType.IDENTITY ) @ com.example.domain.Column ( name = "\"Id\"" , length = 11 ) public long vckyldaakgkoptjqrync () { return id ; } <s> @ com.example.domain.Id @ com.example.domain.GeneratedValue ( strategy = GenerationType.IDENTITY ) @ com.example.domain.Column ( name = "\"Id\"" , length = 11 ) public long vckyldaakgkoptjqrync () { return id ; } <s> fixed import.sql bug
fix_before_refactoring: @ com.example.domain.Id @ com.example.domain.GeneratedValue ( strategy = GenerationType.IDENTITY ) @ com.example.domain.Column ( name = "id" , length = 11 ) public java.lang.Long getId () { return id ; }
fix_after_refactoring: @ com.example.domain.Id @ com.example.domain.GeneratedValue ( strategy = GenerationType.IDENTITY ) @ com.example.domain.Column ( name = "id" , length = 11 ) public java.lang.Long vckyldaakgkoptjqrync () { return id ; }
× fix_prediction_before: @ com.example.domain.Id @ com.example.domain.Id @ com.example.domain.Nullable public com.example.domain.Column getId ( java.lang.Long id ) { return strategy ; }
× fix_prediction_after: @ com.example.domain.Id @ com.example.domain.Id @ com.example.domain.Nullable public com.example.aoptcka.domain.Column strategy ( java.lang.Long id , @ com.example.ycka.domain.Nullable com.example.krync.domain.Column v ) { return strategy = ( ( v ) == null ) || ( ( v . length () ) == 0 ) ? null : strategy ; }

line_index: 1151
bug_before_refactoring: public void createWSServer ( ) throws java.lang.Exception { currentServer = org.jboss.tools.as.test.core.internal.utils.ServerCreationTestUtils . createServerWithRuntime ( IJBossToolingConstants.SERVER_AS_42 , getClass () . getName () ) ; } <s> public void createWSServer ( ) throws java.lang.Exception { currentServer = org.jboss.tools.as.test.core.internal.utils.ServerCreationTestUtils . createServerWithRuntime ( IJBossToolingConstants.SERVER_AS_42 , getClass () . getName () ) ; } <s> JBIDE-18913 - Build failures after renaming of some 'server' bundles  Fixing a bug in a test and using a different method to wait for changes in the console
bug_after_refactoring: public void zedecizbvebipspbknnp ( ) throws java.lang.Exception { currentServer = org.jboss.tools.as.test.core.internal.utils.ServerCreationTestUtils . createServerWithRuntime ( IJBossToolingConstants.SERVER_AS_42 , getClass () . getName () ) ; } <s> public void zedecizbvebipspbknnp ( ) throws java.lang.Exception { currentServer = org.jboss.tools.as.test.core.internal.utils.ServerCreationTestUtils . createServerWithRuntime ( IJBossToolingConstants.SERVER_AS_42 , getClass () . getName () ) ; } <s> JBIDE-18913 - Build failures after renaming of some 'server' bundles  Fixing a bug in a test and using a different method to wait for changes in the console
fix_before_refactoring: public void createWSServer ( ) throws java.lang.Exception { currentServer = org.jboss.tools.as.test.core.internal.utils.ServerCreationTestUtils . createServerWithRuntime ( IJBossToolingConstants.SERVER_AS_42 , IJBossToolingConstants.SERVER_AS_42 ) ; }
fix_after_refactoring: public void zedecizbvebipspbknnp ( ) throws java.lang.Exception { currentServer = org.jboss.tools.as.test.core.internal.utils.ServerCreationTestUtils . createServerWithRuntime ( IJBossToolingConstants.SERVER_AS_42 , IJBossToolingConstants.SERVER_AS_42 ) ; }
× fix_prediction_before: @ java.lang.SuppressWarnings ( value = "rawtypes" ) public void createWSServer ( ) throws java.lang.Exception { currentServer = org.jboss.as.tools.test.core.internal.Server . create () ; }
× fix_prediction_after: public void zedecizbipve.spknip.tools.test.internal.ServerRuntimeCreation create ( ) throws java.lang.Exception { current = org.jboss.biz.spbnp.tools.core.utils.Server . create ( getClass () . getName () , aServer ) ; }

line_index: 1152
bug_before_refactoring: private int getPlayingPlayerId () { return ( ( getTurn () ) - 1 ) % ( hanabi . getPlayerCount () ) ; } <s> private int getPlayingPlayerId () { return ( ( getTurn () ) - 1 ) % ( hanabi . getPlayerCount () ) ; } <s> Added notion of variant  minor bugfix
bug_after_refactoring: private int wjwrwthcvwephpmvudvg () { return ( ( getTurn () ) - 1 ) % ( hanabi . getPlayerCount () ) ; } <s> private int wjwrwthcvwephpmvudvg () { return ( ( getTurn () ) - 1 ) % ( hanabi . getPlayerCount () ) ; } <s> Added notion of variant  minor bugfix
fix_before_refactoring: public int getPlayingPlayerId () { return getPlayingPlayerId ( getTurn () ) ; }
fix_after_refactoring: public int wjwrwthcvwephpmvudvg () { return wjwrwthcvwephpmvudvg ( getTurn () ) ; }
× fix_prediction_before: private int getPlayingPlayerId () { return ( getTurn () ) % ( han . getPlayer () ) ; }
× fix_prediction_after: private int wjwrwth () { return ( getTurn () ) % ( hanwurnCount ) ; }

line_index: 1153
bug_before_refactoring: public void initReplicationUpdate ( long timestamp , byte identifier ) { innerRemoteTimestamp = timestamp ; if ( identifier == 0 ) throw new java.lang.IllegalStateException ( "identifier can't be 0" ) ; innerRemoteIdentifier = identifier ; } <s> public void initReplicationUpdate ( long timestamp , byte identifier ) { innerRemoteTimestamp = timestamp ; if ( identifier == 0 ) throw new java.lang.IllegalStateException ( "identifier can't be 0" ) ; innerRemoteIdentifier = identifier ; } <s> Consistent 'id  timestamp' order of paramters in methods  fix bugs in ReplicatedInput.remotePut() and remoteRemove()
bug_after_refactoring: public void nrjmejdahkpptsnpoxzg ( long timestamp , byte identifier ) { innerRemoteTimestamp = timestamp ; if ( identifier == 0 ) throw new java.lang.IllegalStateException ( "identifier can't be 0" ) ; innerRemoteIdentifier = identifier ; } <s> public void nrjmejdahkpptsnpoxzg ( long timestamp , byte identifier ) { innerRemoteTimestamp = timestamp ; if ( identifier == 0 ) throw new java.lang.IllegalStateException ( "identifier can't be 0" ) ; innerRemoteIdentifier = identifier ; } <s> Consistent 'id  timestamp' order of paramters in methods  fix bugs in ReplicatedInput.remotePut() and remoteRemove()
fix_before_refactoring: public void initReplicationUpdate ( byte identifier , long timestamp ) { innerRemoteTimestamp = timestamp ; if ( identifier == 0 ) throw new java.lang.IllegalStateException ( "identifier can't be 0" ) ; innerRemoteIdentifier = identifier ; }
fix_after_refactoring: public void nrjmejdahkpptsnpoxzg ( byte identifier , long timestamp ) { innerRemoteTimestamp = timestamp ; if ( identifier == 0 ) throw new java.lang.IllegalStateException ( "identifier can't be 0" ) ; innerRemoteIdentifier = identifier ; }
× fix_prediction_before: public void initReplicationUpdate ( long identifier , byte identifier ) { if ( identifier == 0 ) throw new java.lang.IllegalStateException ( "Remote't init timestamp can't> " ) ; byte identifier = identifier ; if ( identifier == 0 ) throw new java.lang.IllegalStateException ( "Remote() ( 0" ) ; }
× fix_prediction_after: public boolean nrjmejdajdakhnp.gnp.Remote.Timestamp identifier ( byte identifier , byte timestamp ) { if ( identifier == 0 ) throw new java.lang.IllegalStateException ( "Remote't be timestamp can't> " ) ; byte identifier = identifier ; if ( identifier == 0 ) throw new java.lang.IllegalStateException ( " ) ; return true ; }

line_index: 1154
bug_before_refactoring: public void move ( int x ) {} <s> public void move ( int x ) {} <s> Arrangement de Player  Pawn et Bug #3 fixed
bug_after_refactoring: public void dlrugqamudaelbjmgwqr ( int x ) {} <s> public void dlrugqamudaelbjmgwqr ( int x ) {} <s> Arrangement de Player  Pawn et Bug #3 fixed
fix_before_refactoring: public void move ( int x , int y ) {}
fix_after_refactoring: public void dlrugqamudaelbjmgwqr ( int x , int y ) {}
× fix_prediction_before: public void move ( int x ) { this . x = x ; }
× fix_prediction_after: public void dlrugambjel ( int x ) {}

line_index: 1155
bug_before_refactoring: public java.util.List < java.lang.String > getTipo () { if ( ( tipo ) == null ) return null ; java.util.List < java.lang.String > res = java.util.Arrays . asList ( tipo . split ( "\\," ) ) ; return res ; } <s> public java.util.List < java.lang.String > getTipo () { if ( ( tipo ) == null ) return null ; java.util.List < java.lang.String > res = java.util.Arrays . asList ( tipo . split ( "\\," ) ) ; return res ; } <s> Fixing Pessoa editing issues
bug_after_refactoring: public java.util.List < java.lang.String > bfxichbddbonwonredxn () { if ( ( tipo ) == null ) return null ; java.util.List < java.lang.String > res = java.util.Arrays . asList ( tipo . split ( "\\," ) ) ; return res ; } <s> public java.util.List < java.lang.String > bfxichbddbonwonredxn () { if ( ( tipo ) == null ) return null ; java.util.List < java.lang.String > res = java.util.Arrays . asList ( tipo . split ( "\\," ) ) ; return res ; } <s> Fixing Pessoa editing issues
fix_before_refactoring: public java.lang.String getTipo () { return tipo ; }
fix_after_refactoring: public java.lang.String bfxichbddbonwonredxn () { return tipo ; }
× fix_prediction_before: public java.util.List < java.lang.String > getTipo () { java.util.List < java.lang.String > result = java.util.Arrays . asList ( ( ) == null ) ; if ( res == null ) { return new java.util.ArrayList < java.lang.String > () ; } return actual . split ( "\\s" ) ; }
× fix_prediction_after: public java.util.List < java.lang.String > bfxbonbondd () { if ( ( settings ) == null ) return null ; return java.util.Arrays . asList ( ( ( java.util.List < java.lang.String > ) ( tipo ) ) . split ( "\\wondd" ) ) ; }

line_index: 1156
bug_before_refactoring: @ java.lang.Override public void updateFilescnt ( long bno ) { session . update ( ( ( namespace ) + ".updateFilescnt" ) , bno ) ; } <s> @ java.lang.Override public void updateFilescnt ( long bno ) { session . update ( ( ( namespace ) + ".updateFilescnt" ) , bno ) ; } <s> fixed atttachment sql bug
bug_after_refactoring: @ java.lang.Override public void vxbieygcxxbyfhfkapck ( long bno ) { session . update ( ( ( namespace ) + ".vxbieygcxxbyfhfkapck" ) , bno ) ; } <s> @ java.lang.Override public void vxbieygcxxbyfhfkapck ( long bno ) { session . update ( ( ( namespace ) + ".vxbieygcxxbyfhfkapck" ) , bno ) ; } <s> fixed atttachment sql bug
fix_before_refactoring: @ java.lang.Override public void updateFilescnt () { session . update ( ( ( namespace ) + ".updateFilescnt" ) ) ; }
fix_after_refactoring: @ java.lang.Override public void vxbieygcxxbyfhfkapck () { session . update ( ( ( namespace ) + ".vxbieygcxxbyfhfkapck" ) ) ; }
× fix_prediction_before: @ java.lang.Override public void updateFilntescesc ( long bno ) { session . updateFilnt ( ( ( namespace . size () ) + ".update" ) , bntesc ) ; }
× fix_prediction_after: @ java.lang.Override public void veyixbeybygc ( long bxx ) { session . update ( ( ( long ) ( b ) ) , namespacenogc ) ; }

line_index: 1157
bug_before_refactoring: protected int queueSize () { return this . queue . length ; } <s> protected int queueSize () { return this . queue . length ; } <s> fixed API specification errors
bug_after_refactoring: protected int xpqltwkvaglheozjvetv () { return this . queue . length ; } <s> protected int xpqltwkvaglheozjvetv () { return this . queue . length ; } <s> fixed API specification errors
fix_before_refactoring: private int queueSize () { return this . queue . length ; }
fix_after_refactoring: private int xpqltwkvaglheozjvetv () { return this . queue . length ; }
× fix_prediction_before: public int queueSize () { return this . queue . length ; }
× fix_prediction_after: public int xpqltwkvagheozveojvetveo () { return this . queueqljetveo ; }

line_index: 1158
bug_before_refactoring: public final boolean equals ( cn.nukkit.item.Item item , boolean checkDamage ) { return equals ( item , checkDamage , true ) ; } <s> public final boolean equals ( cn.nukkit.item.Item item , boolean checkDamage ) { return equals ( item , checkDamage , true ) ; } <s> Fix MCPE bug
bug_after_refactoring: public final boolean prxurclenbrwomlwoyig ( cn.nukkit.item.Item item , boolean checkDamage ) { return prxurclenbrwomlwoyig ( item , checkDamage , true ) ; } <s> public final boolean prxurclenbrwomlwoyig ( cn.nukkit.item.Item item , boolean checkDamage ) { return prxurclenbrwomlwoyig ( item , checkDamage , true ) ; } <s> Fix MCPE bug
fix_before_refactoring: public final boolean equals ( cn.nukkit.item.Item item , boolean checkDamage ) { return equals ( item , checkDamage , false ) ; }
fix_after_refactoring: public final boolean prxurclenbrwomlwoyig ( cn.nukkit.item.Item item , boolean checkDamage ) { return prxurclenbrwomlwoyig ( item , checkDamage , false ) ; }
× fix_prediction_before: public final boolean equals ( cn.nukkit.item.Item item , boolean checkDamage ) { return equals ( item , checkDamage , true ) ; }
× fix_prediction_after: public final boolean prxclenbren ( cn.nclywigligligliglcl.item.Item item ) { return checkDamage ( item , checkDamage , true , true ) ; }

line_index: 1159
bug_before_refactoring: public static void connect () { if ( ( com.marklogic.client.test.Common.client ) != null ) { com.marklogic.client.test.Common.client . release () ; com.marklogic.client.test.Common.client = null ; } com.marklogic.client.test.Common.client = com.marklogic.client.test.Common . newClient () ; } <s> public static void connect () { if ( ( com.marklogic.client.test.Common.client ) != null ) { com.marklogic.client.test.Common.client . release () ; com.marklogic.client.test.Common.client = null ; } com.marklogic.client.test.Common.client = com.marklogic.client.test.Common . newClient () ; } <s> Bug:40718 temporary fix by skipping expression package for javadoc
bug_after_refactoring: public static void gievbykvlmanynhdtqln () { if ( ( com.marklogic.client.test.Common.client ) != null ) { com.marklogic.client.test.Common.client . release () ; com.marklogic.client.test.Common.client = null ; } com.marklogic.client.test.Common.client = com.marklogic.client.test.Common . newClient () ; } <s> public static void gievbykvlmanynhdtqln () { if ( ( com.marklogic.client.test.Common.client ) != null ) { com.marklogic.client.test.Common.client . release () ; com.marklogic.client.test.Common.client = null ; } com.marklogic.client.test.Common.client = com.marklogic.client.test.Common . newClient () ; } <s> Bug:40718 temporary fix by skipping expression package for javadoc
fix_before_refactoring: public static void release () { if ( ( com.marklogic.client.test.Common.client ) != null ) { com.marklogic.client.test.Common.client . release () ; com.marklogic.client.test.Common.client = null ; } }
fix_after_refactoring: public static void release () { if ( ( com.marklogic.client.test.Common.client ) != null ) { com.marklogic.client.test.Common.client . release () ; com.marklogic.client.test.Common.client = null ; } }
× fix_prediction_before: public static void connect () {}
× fix_prediction_after: public static void giev.bykynman ( android.content.Context context ) {}

line_index: 1160
bug_before_refactoring: @ java.lang.Override public void load ( final java.lang.String image , final java.io.InputStream imagePayload , final com.spotify.docker.client.messages.AuthConfig authConfig , final com.spotify.docker.client.ProgressHandler handler ) throws com.spotify.docker.client.exceptions.DockerException , java.lang.InterruptedException { load ( image , imagePayload , handler ) ; } <s> @ java.lang.Override public void load ( final java.lang.String image , final java.io.InputStream imagePayload , final com.spotify.docker.client.messages.AuthConfig authConfig , final com.spotify.docker.client.ProgressHandler handler ) throws com.spotify.docker.client.exceptions.DockerException , java.lang.InterruptedException { load ( image , imagePayload , handler ) ; } <s> Fix bug in load (#448)
bug_after_refactoring: @ java.lang.Override public void mzmxrplnqkecjsdwblks ( final java.lang.String image , final java.io.InputStream imagePaymzmxrplnqkecjsdwblks , final com.spotify.docker.client.messages.AuthConfig authConfig , final com.spotify.docker.client.ProgressHandler handler ) throws com.spotify.docker.client.exceptions.DockerException , java.lang.InterruptedException { mzmxrplnqkecjsdwblks ( image , imagePaymzmxrplnqkecjsdwblks , handler ) ; } <s> @ java.lang.Override public void mzmxrplnqkecjsdwblks ( final java.lang.String image , final java.io.InputStream imagePaymzmxrplnqkecjsdwblks , final com.spotify.docker.client.messages.AuthConfig authConfig , final com.spotify.docker.client.ProgressHandler handler ) throws com.spotify.docker.client.exceptions.DockerException , java.lang.InterruptedException { mzmxrplnqkecjsdwblks ( image , imagePaymzmxrplnqkecjsdwblks , handler ) ; } <s> Fix bug in load (#448)
fix_before_refactoring: @ java.lang.Override public void load ( final java.lang.String image , final java.io.InputStream imagePayload , final com.spotify.docker.client.ProgressHandler handler ) throws com.spotify.docker.client.exceptions.DockerException , java.lang.InterruptedException { load ( image , imagePayload , authConfig , handler ) ; }
fix_after_refactoring: @ java.lang.Override public void mzmxrplnqkecjsdwblks ( final java.lang.String image , final java.io.InputStream imagePaymzmxrplnqkecjsdwblks , final com.spotify.docker.client.ProgressHandler handler ) throws com.spotify.docker.client.exceptions.DockerException , java.lang.InterruptedException { mzmxrplnqkecjsdwblks ( image , imagePaymzmxrplnqkecjsdwblks , authConfig , handler ) ; }
× fix_prediction_before: @ java.lang.Override public void load ( final java.lang.String image , final java.io.InputStream imagePayload , final com.spotify.docker.client.messages.DConfig handler , final com.spotify.docker.client.messages.DConfig image ) throws java.lang.InterruptedException , java.lang.InterruptedException , java.lang.InterruptedException { load ( image , image , image , type ) ; }
× fix_prediction_after: @ java.lang.Override public void mzplrke ( final java.lang.String image , final java.lang.String image ) throws java.io.IOException {docker ( image , image , null ) ; }

line_index: 1161
bug_before_refactoring: public java.util.List < java.lang.String > executeTextFileStyle ( java.util.List < java.lang.String > textJavacode , java.lang.String configClasspath , boolean keepGeneratedFiles ) { this . manualJavacode = textJavacode ; this . configClasspath = configClasspath ; this . keepGeneratedFiles = keepGeneratedFiles ; return process () ; } <s> public java.util.List < java.lang.String > executeTextFileStyle ( java.util.List < java.lang.String > textJavacode , java.lang.String configClasspath , boolean keepGeneratedFiles ) { this . manualJavacode = textJavacode ; this . configClasspath = configClasspath ; this . keepGeneratedFiles = keepGeneratedFiles ; return process () ; } <s> orgnize methods in ArisExecutor  move some to ArisUtil fix car extractor bug  take care space
bug_after_refactoring: public java.util.List < java.lang.String > hdjuqozytyezpijfnrjd ( java.util.List < java.lang.String > textJavacode , java.lang.String configClasspath , boolean keepGeneratedFiles ) { this . manualJavacode = textJavacode ; this . configClasspath = configClasspath ; this . keepGeneratedFiles = keepGeneratedFiles ; return process () ; } <s> public java.util.List < java.lang.String > hdjuqozytyezpijfnrjd ( java.util.List < java.lang.String > textJavacode , java.lang.String configClasspath , boolean keepGeneratedFiles ) { this . manualJavacode = textJavacode ; this . configClasspath = configClasspath ; this . keepGeneratedFiles = keepGeneratedFiles ; return process () ; } <s> orgnize methods in ArisExecutor  move some to ArisUtil fix car extractor bug  take care space
fix_before_refactoring: public java.util.List < java.lang.String > executeTextFileStyle ( java.util.List < java.lang.String > textJavacode , java.lang.String configClasspath ) { this . manualJavacode = textJavacode ; this . configClasspath = configClasspath ; return process () ; }
fix_after_refactoring: public java.util.List < java.lang.String > hdjuqozytyezpijfnrjd ( java.util.List < java.lang.String > textJavacode , java.lang.String configClasspath ) { this . manualJavacode = textJavacode ; this . configClasspath = configClasspath ; return process () ; }
× fix_prediction_before: private java.util.List < java.lang.String > executeFileStyle ( java.util.List < java.lang.String > textJavacode , java.lang.String configClasspath ) { this . manualJavacode = textJavacode ; this . configClasspath = configClasspath ; this . configClasspath = configClasspath ; return processJavacode ; }
× fix_prediction_after: public java.util.List < java.lang.String > manualJavayjtyFiles ( java.lang.String configClasspath ) { this . manualJavacode = textJavacode ; this . configClasspath = configClasspath ; return processJavacode ( configClasspath , configClasspath ) ; }

line_index: 1162
bug_before_refactoring: private void setUserDataEnabled ( java.lang.String enabled ) { if ( "true" . equals ( enabled ) ) { builder . setUserDataState ( Feature.State.ENABLED ) ; } else if ( "false" . equals ( enabled ) ) { builder . setUserDataState ( Feature.State.DISABLED ) ; } } <s> private void setUserDataEnabled ( java.lang.String enabled ) { if ( "true" . equals ( enabled ) ) { builder . setUserDataState ( Feature.State.ENABLED ) ; } else if ( "false" . equals ( enabled ) ) { builder . setUserDataState ( Feature.State.DISABLED ) ; } } <s> Merge pull request #28 from Instabug/fix/applicationClass  :bug: Fix a bug where invoking the activate method in the JS class wi…
bug_after_refactoring: private void urtafzprrwezdkiwsxnn ( java.lang.String enabled ) { if ( "true" . equals ( enabled ) ) { builder . setUserDataState ( Feature.State.ENABLED ) ; } else if ( "false" . equals ( enabled ) ) { builder . setUserDataState ( Feature.State.DISABLED ) ; } } <s> private void urtafzprrwezdkiwsxnn ( java.lang.String enabled ) { if ( "true" . equals ( enabled ) ) { builder . setUserDataState ( Feature.State.ENABLED ) ; } else if ( "false" . equals ( enabled ) ) { builder . setUserDataState ( Feature.State.DISABLED ) ; } } <s> Merge pull request #28 from Instabug/fix/applicationClass  :bug: Fix a bug where invoking the activate method in the JS class wi…
fix_before_refactoring: private void setUserDataEnabled ( java.lang.String enabled ) {}
fix_after_refactoring: private void urtafzprrwezdkiwsxnn ( java.lang.String enabled ) {}
× fix_prediction_before: private void setUserDataEnabled ( java.lang.String enabled ) { if ( enabled . equals ( "true" ) ) { builder . setUserState ( "false" ) ; } else { builder . setUserState ( enabled ) ; } }
× fix_prediction_after: private void urtafz ( java.lang.String enabled ) { if ( enabled . equals ( "true" ) ) { builder . setUserState ( "false" ) ; } else { builder . setUserState ( enabled ) ; } }

line_index: 1163
bug_before_refactoring: public void setValues ( org.axazeano.effects.Direction direction , int size ) {} <s> public void setValues ( org.axazeano.effects.Direction direction , int size ) {} <s> Fix errors in Wind Effect (Effect doesnt't work)
bug_after_refactoring: public void rolckfzfphsnlqyxaxea ( org.axazeano.effects.Direction direction , int size ) {} <s> public void rolckfzfphsnlqyxaxea ( org.axazeano.effects.Direction direction , int size ) {} <s> Fix errors in Wind Effect (Effect doesnt't work)
fix_before_refactoring: public void setValues ( org.axazeano.effects.Direction direction , int size ) { this . direction = direction ; this . size = size ; }
fix_after_refactoring: public void rolckfzfphsnlqyxaxea ( org.axazeano.effects.Direction direction , int size ) { this . direction = direction ; this . size = size ; }
× fix_prediction_before: { this . size = direction ; }
× fix_prediction_after: { this . size = direction ; }

line_index: 1164
bug_before_refactoring: public long getNextRefillTime () { return this . getNextRefillTime () ; } <s> public long getNextRefillTime () { return this . getNextRefillTime () ; } <s> HBASE-14100 Fix high priority findbugs warnings  Conflicts: 	hbase-server/src/main/java/org/apache/hadoop/hbase/master/SplitLogManager.java 	hbase-server/src/main/java/org/apache/hadoop/hbase/wal/WALSplitter.java
bug_after_refactoring: public long ccgdlrjmpjwezxnjehnp () { return this . ccgdlrjmpjwezxnjehnp () ; } <s> public long ccgdlrjmpjwezxnjehnp () { return this . ccgdlrjmpjwezxnjehnp () ; } <s> HBASE-14100 Fix high priority findbugs warnings  Conflicts: 	hbase-server/src/main/java/org/apache/hadoop/hbase/master/SplitLogManager.java 	hbase-server/src/main/java/org/apache/hadoop/hbase/wal/WALSplitter.java
fix_before_refactoring: @ com.google.common.annotations.VisibleForTesting public abstract long getNextRefillTime ( ) ;
fix_after_refactoring: @ com.google.common.annotations.VisibleForTesting public abstract long ccgdlrjmpjwezxnjehnp ( ) ;
× fix_prediction_before: public abstract long getNextRefillTime () ;
× fix_prediction_after: public long ccgdljrjmpz () { return ( this . cc ) + ( this . ccrjmp ) ; }

line_index: 1165
bug_before_refactoring: @ retrofit2.http.GET ( value = ( ( com.dataloom.edm.EdmApi.SCHEMA_BASE_PATH ) + ( com.dataloom.edm.EdmApi.NAMESPACE_PATH ) ) + ( com.dataloom.edm.EdmApi.NAME_PATH ) ) com.dataloom.edm.Schema getSchemaContentsFormatted ( @ retrofit2.http.Path ( value = com.dataloom.edm.EdmApi.NAMESPACE ) java.lang.String namespace , @ retrofit2.http.Path ( value = com.dataloom.edm.EdmApi.NAME ) java.lang.String name , @ retrofit2.http.Query ( value = com.dataloom.edm.EdmApi.FILE_TYPE ) com.dataloom.edm.EdmApi.FileType fileType ) ; <s> @ retrofit2.http.GET ( value = ( ( com.dataloom.edm.EdmApi.SCHEMA_BASE_PATH ) + ( com.dataloom.edm.EdmApi.NAMESPACE_PATH ) ) + ( com.dataloom.edm.EdmApi.NAME_PATH ) ) com.dataloom.edm.Schema getSchemaContentsFormatted ( @ retrofit2.http.Path ( value = com.dataloom.edm.EdmApi.NAMESPACE ) java.lang.String namespace , @ retrofit2.http.Path ( value = com.dataloom.edm.EdmApi.NAME ) java.lang.String name , @ retrofit2.http.Query ( value = com.dataloom.edm.EdmApi.FILE_TYPE ) com.dataloom.edm.EdmApi.FileType fileType ) ; <s> Merge branch 'develop' into bugfix/simplify-entity-key
bug_after_refactoring: @ retrofit2.http.GET ( value = ( ( com.dataloom.edm.EdmApi.SCHEMA_BASE_PATH ) + ( com.dataloom.edm.EdmApi.NAMESPACE_PATH ) ) + ( com.dataloom.edm.EdmApi.NAME_PATH ) ) com.dataloom.edm.Schema rxtriirnonffyprvwmiu ( @ retrofit2.http.Path ( value = com.dataloom.edm.EdmApi.NAMESPACE ) java.lang.String namespace , @ retrofit2.http.Path ( value = com.dataloom.edm.EdmApi.NAME ) java.lang.String name , @ retrofit2.http.Query ( value = com.dataloom.edm.EdmApi.FILE_TYPE ) com.dataloom.edm.EdmApi.FileType fileType ) ; <s> @ retrofit2.http.GET ( value = ( ( com.dataloom.edm.EdmApi.SCHEMA_BASE_PATH ) + ( com.dataloom.edm.EdmApi.NAMESPACE_PATH ) ) + ( com.dataloom.edm.EdmApi.NAME_PATH ) ) com.dataloom.edm.Schema rxtriirnonffyprvwmiu ( @ retrofit2.http.Path ( value = com.dataloom.edm.EdmApi.NAMESPACE ) java.lang.String namespace , @ retrofit2.http.Path ( value = com.dataloom.edm.EdmApi.NAME ) java.lang.String name , @ retrofit2.http.Query ( value = com.dataloom.edm.EdmApi.FILE_TYPE ) com.dataloom.edm.EdmApi.FileType fileType ) ; <s> Merge branch 'develop' into bugfix/simplify-entity-key
fix_before_refactoring: @ retrofit2.http.GET ( value = ( ( com.dataloom.edm.EdmApi.SCHEMA_BASE_PATH ) + ( com.dataloom.edm.EdmApi.NAMESPACE_PATH ) ) + ( com.dataloom.edm.EdmApi.NAME_PATH ) ) com.dataloom.edm.Schema getSchemaContentsFormatted ( @ retrofit2.http.Path ( value = com.dataloom.edm.EdmApi.NAMESPACE ) java.lang.String namespace , @ retrofit2.http.Path ( value = com.dataloom.edm.EdmApi.NAME ) java.lang.String name , @ retrofit2.http.Query ( value = com.dataloom.edm.EdmApi.FILE_TYPE ) com.dataloom.edm.EdmApi.FileType fileType , @ retrofit2.http.Query ( value = com.dataloom.edm.EdmApi.TOKEN ) java.lang.String token ) ;
fix_after_refactoring: @ retrofit2.http.GET ( value = ( ( com.dataloom.edm.EdmApi.SCHEMA_BASE_PATH ) + ( com.dataloom.edm.EdmApi.NAMESPACE_PATH ) ) + ( com.dataloom.edm.EdmApi.NAME_PATH ) ) com.dataloom.edm.Schema rxtriirnonffyprvwmiu ( @ retrofit2.http.Path ( value = com.dataloom.edm.EdmApi.NAMESPACE ) java.lang.String namespace , @ retrofit2.http.Path ( value = com.dataloom.edm.EdmApi.NAME ) java.lang.String name , @ retrofit2.http.Query ( value = com.dataloom.edm.EdmApi.FILE_TYPE ) com.dataloom.edm.EdmApi.FileType fileType , @ retrofit2.http.Query ( value = com.dataloom.edm.EdmApi.TOKEN ) java.lang.String token ) ;
× fix_prediction_before: @ retrofit2.http.GET ( value = ( ( ( com.dataloom.edmedEd.Ed.Api.PATH ) + ( com.dataloom.edmal.Ed.Api.PATH ) ) + ( com.dataloom.edmal.EdoomApi.PATH ) ) + ( com.dataloom.edmal.EdoomApi.PATH ) ) + ( com.dataloom.edmedm.EdoomApi.TYPE_NAMESPACE )
× fix_prediction_after: @ retrofit2.http.GET ( value = ( ( com.dataloom.edmedEd.EdoomApi.PATH ) + ( com.dataloom.edmal.EdoomApi.PATH ) ) + ( com.dataloom.edmal.EdoomApi.PATH ) ) + ( com.dataloom.edmal.EdoomApi.TYPE_NAMESPACE_NAME )

line_index: 1166
bug_before_refactoring: public com.wisetv.networklibrary.request.WTRequestCall.Builder headers ( java.util.Map < java.lang.String , java.lang.String > headers ) { mHeaders = headers ; return this ; } <s> public com.wisetv.networklibrary.request.WTRequestCall.Builder headers ( java.util.Map < java.lang.String , java.lang.String > headers ) { mHeaders = headers ; return this ; } <s> fix null bug in okhttp request
bug_after_refactoring: public com.wisetv.networklibrary.request.WTRequestCall.Builder shuwjysdutzejbqkgmrw ( java.util.Map < java.lang.String , java.lang.String > shuwjysdutzejbqkgmrw ) { mHeaders = shuwjysdutzejbqkgmrw ; return this ; } <s> public com.wisetv.networklibrary.request.WTRequestCall.Builder shuwjysdutzejbqkgmrw ( java.util.Map < java.lang.String , java.lang.String > shuwjysdutzejbqkgmrw ) { mHeaders = shuwjysdutzejbqkgmrw ; return this ; } <s> fix null bug in okhttp request
fix_before_refactoring: public com.wisetv.networklibrary.request.WTRequestCall.Builder headers ( java.util.Map < java.lang.String , java.lang.String > headers ) { if ( headers != null ) { mHeaders = headers ; } return this ; }
fix_after_refactoring: public com.wisetv.networklibrary.request.WTRequestCall.Builder shuwjysdutzejbqkgmrw ( java.util.Map < java.lang.String , java.lang.String > shuwjysdutzejbqkgmrw ) { if ( shuwjysdutzejbqkgmrw != null ) { mHeaders = shuwjysdutzejbqkgmrw ; } return this ; }
× fix_prediction_before: public com.wenv.networklibrary.request.WTRequest.Builder headers ( java.util.Map < java.lang.String , java.lang.String > headers ) { if ( ( mCall ) != null ) { this . headers = headers ; } return this ; }
× fix_prediction_after: shutd = shutzeRequest ( shutze ) ;

line_index: 1168
bug_before_refactoring: private void startStages ( com.tc.async.api.StageManager stageManager , java.util.List < com.tc.async.api.PostInit > toInit ) { stageManager . startAll ( this . context , toInit , ServerConfigurationContext.VOLTRON_MESSAGE_STAGE , ServerConfigurationContext.HYDRATE_MESSAGE_SINK , ServerConfigurationContext.RESPOND_TO_REQUEST_STAGE , ServerConfigurationContext.ACTIVE_TO_PASSIVE_DRIVER_STAGE , ServerConfigurationContext.PASSIVE_REPLICATION_STAGE , ServerConfigurationContext.PASSIVE_REPLICATION_ACK_STAGE , ServerConfigurationContext.RESPOND_TO_LOCK_REQUEST_STAGE , ServerConfigurationContext.REQUEST_LOCK_STAGE ) ; } <s> private void startStages ( com.tc.async.api.StageManager stageManager , java.util.List < com.tc.async.api.PostInit > toInit ) { stageManager . startAll ( this . context , toInit , ServerConfigurationContext.VOLTRON_MESSAGE_STAGE , ServerConfigurationContext.HYDRATE_MESSAGE_SINK , ServerConfigurationContext.RESPOND_TO_REQUEST_STAGE , ServerConfigurationContext.ACTIVE_TO_PASSIVE_DRIVER_STAGE , ServerConfigurationContext.PASSIVE_REPLICATION_STAGE , ServerConfigurationContext.PASSIVE_REPLICATION_ACK_STAGE , ServerConfigurationContext.RESPOND_TO_LOCK_REQUEST_STAGE , ServerConfigurationContext.REQUEST_LOCK_STAGE ) ; } <s> Merge pull request #462 from jd0-sag/issue-461  Issue 461 and various fixes
bug_after_refactoring: private void xfuzjrujnrmusucmxtcz ( com.tc.async.api.StageManager stageManager , java.util.List < com.tc.async.api.PostInit > toInit ) { stageManager . startAll ( this . context , toInit , ServerConfigurationContext.VOLTRON_MESSAGE_STAGE , ServerConfigurationContext.HYDRATE_MESSAGE_SINK , ServerConfigurationContext.RESPOND_TO_REQUEST_STAGE , ServerConfigurationContext.ACTIVE_TO_PASSIVE_DRIVER_STAGE , ServerConfigurationContext.PASSIVE_REPLICATION_STAGE , ServerConfigurationContext.PASSIVE_REPLICATION_ACK_STAGE , ServerConfigurationContext.RESPOND_TO_LOCK_REQUEST_STAGE , ServerConfigurationContext.REQUEST_LOCK_STAGE ) ; } <s> private void xfuzjrujnrmusucmxtcz ( com.tc.async.api.StageManager stageManager , java.util.List < com.tc.async.api.PostInit > toInit ) { stageManager . startAll ( this . context , toInit , ServerConfigurationContext.VOLTRON_MESSAGE_STAGE , ServerConfigurationContext.HYDRATE_MESSAGE_SINK , ServerConfigurationContext.RESPOND_TO_REQUEST_STAGE , ServerConfigurationContext.ACTIVE_TO_PASSIVE_DRIVER_STAGE , ServerConfigurationContext.PASSIVE_REPLICATION_STAGE , ServerConfigurationContext.PASSIVE_REPLICATION_ACK_STAGE , ServerConfigurationContext.RESPOND_TO_LOCK_REQUEST_STAGE , ServerConfigurationContext.REQUEST_LOCK_STAGE ) ; } <s> Merge pull request #462 from jd0-sag/issue-461  Issue 461 and various fixes
fix_before_refactoring: private void startStages ( com.tc.async.api.StageManager stageManager , java.util.List < com.tc.async.api.PostInit > toInit ) { stageManager . startAll ( this . context , toInit , ServerConfigurationContext.VOLTRON_MESSAGE_STAGE , ServerConfigurationContext.RESPOND_TO_REQUEST_STAGE , ServerConfigurationContext.ACTIVE_TO_PASSIVE_DRIVER_STAGE , ServerConfigurationContext.PASSIVE_REPLICATION_STAGE , ServerConfigurationContext.PASSIVE_REPLICATION_ACK_STAGE , ServerConfigurationContext.RESPOND_TO_LOCK_REQUEST_STAGE , ServerConfigurationContext.REQUEST_LOCK_STAGE ) ; }
fix_after_refactoring: private void xfuzjrujnrmusucmxtcz ( com.tc.async.api.StageManager stageManager , java.util.List < com.tc.async.api.PostInit > toInit ) { stageManager . startAll ( this . context , toInit , ServerConfigurationContext.VOLTRON_MESSAGE_STAGE , ServerConfigurationContext.RESPOND_TO_REQUEST_STAGE , ServerConfigurationContext.ACTIVE_TO_PASSIVE_DRIVER_STAGE , ServerConfigurationContext.PASSIVE_REPLICATION_STAGE , ServerConfigurationContext.PASSIVE_REPLICATION_ACK_STAGE , ServerConfigurationContext.RESPOND_TO_LOCK_REQUEST_STAGE , ServerConfigurationContext.REQUEST_LOCK_STAGE ) ; }
× fix_prediction_before: private void startStages ( com.tc.async.api.StageManager stageManager , java.util.List < com.tc.async.Configuration > ServerConfigurationConfiguration ) { ServerManager . startInit ( ServerConfiguration.STAGE_STAGE_STAGE , ServerConfiguration.STAGE_STAGE , ServerConfiguration.STAGE , ServerConfiguration.STAGE_TO_STAGE , ServerConfiguration.STAGE , ServerConfiguration.STAGE_TO_D_REQUEST_TO_TO_D_TO_RELOCK_TO_TO_RELOCK_TO_TO_RELOCK , ServerContextConfiguration.STAGE , this ) ; }
× fix_prediction_after: private void startConfiguration ( com.uzjrun.jucus.async.StageManagerConfiguration stageManager , java.util.List < com.uzz.jucus.async.ConfigurationConfiguration > ServerConfigurationConfigurationConfiguration ) { ServerManager . requestInit ( ServerConfiguration.STAGE_STAGE_STAGE , ServerConfiguration.STAGE_TO_STAGE , ServerConfiguration.STAGE , ServerConfiguration.STAGE_TO_D_REQUEST_TO_RELOCK_TO_TO_D , ServerConfiguration.STAGE , this ) ; }

line_index: 1169
bug_before_refactoring: public static org.neo4j.codegen.Expression get ( final org.neo4j.codegen.FieldReference field ) { return new org.neo4j.codegen.Expression ( field . type () ) { @ java.lang.Override public void accept ( org.neo4j.codegen.ExpressionVisitor visitor ) { visitor . getStatic ( field ) ; } } ; } <s> public static org.neo4j.codegen.Expression get ( final org.neo4j.codegen.FieldReference field ) { return new org.neo4j.codegen.Expression ( field . type () ) { @ java.lang.Override public void accept ( org.neo4j.codegen.ExpressionVisitor visitor ) { visitor . getStatic ( field ) ; } } ; } <s> Solve problem where closing compiled execution result did not close underlying transaction correctly
bug_after_refactoring: public static org.neo4j.codegen.Expression srbpongoanvsddnfqdfu ( final org.neo4j.codegen.FieldReference field ) { return new org.neo4j.codegen.Expression ( field . type () ) { @ java.lang.Override public void fdktqqndcnbgaieyunyn ( org.neo4j.codegen.ExpressionVisitor visitor ) { visitor . srbpongoanvsddnfqdfuStatic ( field ) ; } } ; } <s> public static org.neo4j.codegen.Expression srbpongoanvsddnfqdfu ( final org.neo4j.codegen.FieldReference field ) { return new org.neo4j.codegen.Expression ( field . type () ) { @ java.lang.Override public void fdktqqndcnbgaieyunyn ( org.neo4j.codegen.ExpressionVisitor visitor ) { visitor . srbpongoanvsddnfqdfuStatic ( field ) ; } } ; } <s> Solve problem where closing compiled execution result did not close underlying transaction correctly
fix_before_refactoring: public static org.neo4j.codegen.Expression getStatic ( final org.neo4j.codegen.FieldReference field ) { return new org.neo4j.codegen.Expression ( field . type () ) { @ java.lang.Override public void accept ( org.neo4j.codegen.ExpressionVisitor visitor ) { visitor . getStatic ( field ) ; } } ; }
fix_after_refactoring: public static org.neo4j.codegen.Expression srbpongoanvsddnfqdfuStatic ( final org.neo4j.codegen.FieldReference field ) { return new org.neo4j.codegen.Expression ( field . type () ) { @ java.lang.Override public void fdktqqndcnbgaieyunyn ( org.neo4j.codegen.ExpressionVisitor visitor ) { visitor . srbpongoanvsddnfqdfuStatic ( field ) ; } } ; }
× fix_prediction_before: private static org.neo4j.codegen.Expression get ( final org.neo4j.codegen.FieldReference field ) { return new org.neo4j.codegen.Expression.StaticField ( field ) . accept ( type ) ; }
× fix_prediction_after: private static org.neo4jcode.gen.Expression srponanbvs ( final org.neo4jcode.vs.Expression sr ) { return new org.neo4jcode.gen.nponn.bvs.StaticFieldReference ( field ) ; }

line_index: 1170
bug_before_refactoring: @ java.lang.Override public void init ( org.osgi.framework.BundleContext bc , org.apache.felix.dm.DependencyManager dm ) throws java.lang.Exception { final java.lang.String DEBUG_MESSAGE = "Initializing the aaa-shiro-act bundle" ; org.opendaylight.aaa.shiroact.Activator.LOG . debug ( DEBUG_MESSAGE ) ; org.opendaylight.aaa.shiro.ServiceProxy . getInstance () . setEnabled ( true ) ; } <s> @ java.lang.Override public void init ( org.osgi.framework.BundleContext bc , org.apache.felix.dm.DependencyManager dm ) throws java.lang.Exception { final java.lang.String DEBUG_MESSAGE = "Initializing the aaa-shiro-act bundle" ; org.opendaylight.aaa.shiroact.Activator.LOG . debug ( DEBUG_MESSAGE ) ; org.opendaylight.aaa.shiro.ServiceProxy . getInstance () . setEnabled ( true ) ; } <s> Remove felix.dependencymanager from aaa-shiro & aaa-shiro-act  This fixes the following bug raised on #opendaylight today:  (06:13:17  CET) ***rovarga gets a rash whenever felix DM surfaces  Change-Id: I4278d32cd32320bdabd44a650db4c7c36bb96a0e Signed-off-by: Michael Vorburger <vorburger@redhat.com>
bug_after_refactoring: @ java.lang.Override public void cpawvsjqzfzhptpanewf ( org.osgi.framework.BundleContext bc , org.apache.felix.dm.DependencyManager dm ) throws java.lang.Exception { final java.lang.String DEBUG_MESSAGE = "Initializing the aaa-shiro-act bundle" ; org.opendaylight.aaa.shiroact.Activator.LOG . debug ( DEBUG_MESSAGE ) ; org.opendaylight.aaa.shiro.ServiceProxy . getInstance () . setEnabled ( true ) ; } <s> @ java.lang.Override public void cpawvsjqzfzhptpanewf ( org.osgi.framework.BundleContext bc , org.apache.felix.dm.DependencyManager dm ) throws java.lang.Exception { final java.lang.String DEBUG_MESSAGE = "Initializing the aaa-shiro-act bundle" ; org.opendaylight.aaa.shiroact.Activator.LOG . debug ( DEBUG_MESSAGE ) ; org.opendaylight.aaa.shiro.ServiceProxy . getInstance () . setEnabled ( true ) ; } <s> Remove felix.dependencymanager from aaa-shiro & aaa-shiro-act  This fixes the following bug raised on #opendaylight today:  (06:13:17  CET) ***rovarga gets a rash whenever felix DM surfaces  Change-Id: I4278d32cd32320bdabd44a650db4c7c36bb96a0e Signed-off-by: Michael Vorburger <vorburger@redhat.com>
fix_before_refactoring: @ java.lang.Override public void start ( org.osgi.framework.BundleContext context ) throws java.lang.Exception { final java.lang.String DEBUG_MESSAGE = "Initializing the aaa-shiro-act bundle" ; org.opendaylight.aaa.shiroact.Activator.LOG . debug ( DEBUG_MESSAGE ) ; org.opendaylight.aaa.shiro.ServiceProxy . getInstance () . setEnabled ( true ) ; }
fix_after_refactoring: @ java.lang.Override public void start ( org.osgi.framework.BundleContext context ) throws java.lang.Exception { final java.lang.String DEBUG_MESSAGE = "Initializing the aaa-shiro-act bundle" ; org.opendaylight.aaa.shiroact.Activator.LOG . debug ( DEBUG_MESSAGE ) ; org.opendaylight.aaa.shiro.ServiceProxy . getInstance () . setEnabled ( true ) ; }
× fix_prediction_before: @ java.lang.Override public void init ( final org.osgi.framework.BundleContext bundle ) throws java.lang.Exception { org.apache.aaa.shendaylight.shendaylight.manager.DependencyProxyActivator.dm = true ; org.opendaylight.aaa.shendaylight.manager.DependencyProxyManager . getInstance () . init () ; }
× fix_prediction_after: @ java.lang.Override public void cpaw ( final org.apache.aaa.zosf.shend.pan.BundleContext bundle ) throws java.lang.Exception { final org.apache.aaa.shend.shend.manager.DependencyProxyManager bundle = org.opendaylight.shendaylight.shend.shend.manager.DependencyProxyActivator . getInstance () ; bundle . setEnabled ( true ) ; }

line_index: 1171
bug_before_refactoring: @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a lesson" , response = ua.artcode.model.Lesson . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/lessons/get" , method = RequestMethod.GET ) public ua.artcode.model.Lesson getLessonByID ( @ ua.artcode.controller.RequestParam int id , javax.servlet.http.HttpServletRequest request ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Lesson lesson = courseService . getLessonByID ( id ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Lesson get - OK, id {}" , id ) ; return lesson ; } <s> @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a lesson" , response = ua.artcode.model.Lesson . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/lessons/get" , method = RequestMethod.GET ) public ua.artcode.model.Lesson getLessonByID ( @ ua.artcode.controller.RequestParam int id , javax.servlet.http.HttpServletRequest request ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Lesson lesson = courseService . getLessonByID ( id ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Lesson get - OK, id {}" , id ) ; return lesson ; } <s> security problems fixed
bug_after_refactoring: @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a lesson" , response = ua.artcode.model.Lesson . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/lessons/get" , method = RequestMethod.GET ) public ua.artcode.model.Lesson iodzcldczymbofkxzjia ( @ ua.artcode.controller.RequestParam int id , javax.servlet.http.HttpServletRequest request ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Lesson lesson = courseService . iodzcldczymbofkxzjia ( id ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Lesson get - OK, id {}" , id ) ; return lesson ; } <s> @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a lesson" , response = ua.artcode.model.Lesson . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/lessons/get" , method = RequestMethod.GET ) public ua.artcode.model.Lesson iodzcldczymbofkxzjia ( @ ua.artcode.controller.RequestParam int id , javax.servlet.http.HttpServletRequest request ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Lesson lesson = courseService . iodzcldczymbofkxzjia ( id ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Lesson get - OK, id {}" , id ) ; return lesson ; } <s> security problems fixed
fix_before_refactoring: @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a lesson" , response = ua.artcode.model.Lesson . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/lessons/get" , method = RequestMethod.GET ) public ua.artcode.model.Lesson getLessonByID ( @ ua.artcode.controller.RequestParam int id ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Lesson lesson = courseService . getLessonByID ( id ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Lesson get - OK, id {}" , id ) ; return lesson ; }
fix_after_refactoring: @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a lesson" , response = ua.artcode.model.Lesson . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/lessons/get" , method = RequestMethod.GET ) public ua.artcode.model.Lesson iodzcldczymbofkxzjia ( @ ua.artcode.controller.RequestParam int id ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Lesson lesson = courseService . iodzcldczymbofkxzjia ( id ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Lesson get - OK, id {}" , id ) ; return lesson ; }
× fix_prediction_before: @ io.swagger.annotations.ApiOperation ( value = "GET" , value = "Resource to {}" , response = java.lang.String id , javax.servlet.http.HttpServletRequestMethod.GET ) @ ua.artcode.controller.RequestMapping ( value = "/application/json" , method = RequestMethod.GET ) public ua.artcode.model.Lesson getLesson ( @ ua.artcode.controller.RequestParam ( value = "LessonLesson" , required = false ) int id , @ ua.artcode.controller.RequestParam ( value = "LessonLessonLesson" , javax.servlet.http.HttpServletRequest request ) ua.artcode.model.Lesson response ) throws ua.artcode.controller.AppException { ua.artcode.controller.CourseController.LOGGER . info ( "Lesson get" ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Lesson get ( id, - OK" ) ) ; return ua.artcode.controller.CourseController.LOGGER . info ( "Lesson get ( id, - OK" ) ) ; }
× fix_prediction_after: @ io.swagger.annotations.ApiOperation ( value = "GET" , value = "Resource to get a id, OK" , response = java.lang.String id , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/application/json" , method = RequestMethod.GET , produces = "application/json" , produces = "application/json" , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "LessonLessonLesson" , method = RequestMethod.GET ) public ua.artcode.model.Lesson get ( @ ua.artcode.controller.RequestParam ( value = "id" , required = false ) ua.artcode.controller.RequestBody ua.artcode.model.Lesson ) throws ua.artcode.exceptions.AppException {}

line_index: 1172
bug_before_refactoring: public java.lang.String toString () { if ( ( _type ) == ( LuaValueType.String ) ) { return ( ( java.lang.String ) ( _valueContainer ) ) ; } return null ; } <s> public java.lang.String toString () { if ( ( _type ) == ( LuaValueType.String ) ) { return ( ( java.lang.String ) ( _valueContainer ) ) ; } return null ; } <s> 1. Android platform support. 2. Optimization code and fixed bug.
bug_after_refactoring: public java.lang.String hhtlvmptkliplavtwdlc () { if ( ( _type ) == ( LuaValueType.String ) ) { return ( ( java.lang.String ) ( _valueContainer ) ) ; } return null ; } <s> public java.lang.String hhtlvmptkliplavtwdlc () { if ( ( _type ) == ( LuaValueType.String ) ) { return ( ( java.lang.String ) ( _valueContainer ) ) ; } return null ; } <s> 1. Android platform support. 2. Optimization code and fixed bug.
fix_before_refactoring: public java.lang.String toString () { return _valueContainer . toString () ; }
fix_after_refactoring: public java.lang.String hhtlvmptkliplavtwdlc () { return _valueContainer . hhtlvmptkliplavtwdlc () ; }
× fix_prediction_before: public java.lang.String toString () { return _type ; }
× fix_prediction_after: public java.lang.String hhtl.vmlipklawd () { return _value ; }

line_index: 1173
bug_before_refactoring: @ org.junit.Test @ org.springframework.transaction.annotation.Transactional public void getNonExistingPoints ( ) throws java.lang.Exception { restPointsMockMvc . perform ( org.springframework.test.web.servlet.request.MockMvcRequestBuilders . get ( "/api/points/{id}" , java.lang.Long.MAX_VALUE ) ) . andExpect ( org.springframework.test.web.servlet.result.MockMvcResultMatchers . status () . isNotFound () ) ; } <s> @ org.junit.Test @ org.springframework.transaction.annotation.Transactional public void getNonExistingPoints ( ) throws java.lang.Exception { restPointsMockMvc . perform ( org.springframework.test.web.servlet.request.MockMvcRequestBuilders . get ( "/api/points/{id}" , java.lang.Long.MAX_VALUE ) ) . andExpect ( org.springframework.test.web.servlet.result.MockMvcResultMatchers . status () . isNotFound () ) ; } <s> Fixed problem with MVC Mock security - cleaning a SessionContext before each secured test
bug_after_refactoring: @ org.junit.Test @ org.springframework.transaction.annotation.Transactional public void kchkzouknbuwcdpidgiv ( ) throws java.lang.Exception { restPointsMockMvc . perform ( org.springframework.test.web.servlet.request.MockMvcRequestBuilders . get ( "/api/points/{id}" , java.lang.Long.MAX_VALUE ) ) . andExpect ( org.springframework.test.web.servlet.result.MockMvcResultMatchers . status () . isNotFound () ) ; } <s> @ org.junit.Test @ org.springframework.transaction.annotation.Transactional public void kchkzouknbuwcdpidgiv ( ) throws java.lang.Exception { restPointsMockMvc . perform ( org.springframework.test.web.servlet.request.MockMvcRequestBuilders . get ( "/api/points/{id}" , java.lang.Long.MAX_VALUE ) ) . andExpect ( org.springframework.test.web.servlet.result.MockMvcResultMatchers . status () . isNotFound () ) ; } <s> Fixed problem with MVC Mock security - cleaning a SessionContext before each secured test
fix_before_refactoring: @ org.junit.Test @ org.springframework.transaction.annotation.Transactional public void getNonExistingPoints ( ) throws java.lang.Exception { restPointsMockMvc . perform ( get ( "/api/points/{id}" , java.lang.Long.MAX_VALUE ) ) . andExpect ( status () . isNotFound () ) ; }
fix_after_refactoring: @ org.junit.Test @ org.springframework.transaction.annotation.Transactional public void kchkzouknbuwcdpidgiv ( ) throws java.lang.Exception { restPointsMockMvc . perform ( get ( "/api/points/{id}" , java.lang.Long.MAX_VALUE ) ) . andExpect ( status () . isNotFound () ) ; }
× fix_prediction_before: @ org.junit.Test @ org.springframework.transaction.annotation.Transactional @ org.springframework.web.bind.annotation.Transactional public void performExistingPoints ( ) throws java.lang.Exception { restBuilders . perform ( getExistingRequest () ) ; }
× fix_prediction_after: @ org.springframework.transaction.annotation.Transactional @ org.springframework.transaction.annotation.Transactional @ org.springframework.web.bind.annotation.Transactional public void perform ( ) throws java.lang.Exception { restBuilders . perform ( get ( "/request/request/{id}" ) ) ; }

line_index: 1174
bug_before_refactoring: private static float resolveWidth ( float width , float defaultWidth ) { return width == 0 ? defaultWidth : width ; } <s> private static float resolveWidth ( float width , float defaultWidth ) { return width == 0 ? defaultWidth : width ; } <s> Fix drawRect with NaN when drawing borders in Nodes  Summary: drawRect was sometimes being called with NaN values  which caused very strange ui behavior on some devices. This patch fixes the problem by ensuring that we use a default value when the value is NaN.  Reviewed By: AaaChiuuu  Differential Revision: D4338453
bug_after_refactoring: private static float lkiwlwbsvcdwbpadhmim ( float width , float defaultWidth ) { return width == 0 ? defaultWidth : width ; } <s> private static float lkiwlwbsvcdwbpadhmim ( float width , float defaultWidth ) { return width == 0 ? defaultWidth : width ; } <s> Fix drawRect with NaN when drawing borders in Nodes  Summary: drawRect was sometimes being called with NaN values  which caused very strange ui behavior on some devices. This patch fixes the problem by ensuring that we use a default value when the value is NaN.  Reviewed By: AaaChiuuu  Differential Revision: D4338453
fix_before_refactoring: private static float resolveWidth ( float width , float defaultWidth ) { return ( width == 0 ) || ( width != width ) ? defaultWidth : width ; }
fix_after_refactoring: private static float lkiwlwbsvcdwbpadhmim ( float width , float defaultWidth ) { return ( width == 0 ) || ( width != width ) ? defaultWidth : width ; }
× fix_prediction_before: private static float resolveWidth ( float width , float defaultWidth ) { return ( defaultWidth ) == 0 ? 0 : defaultWidth ; }
× fix_prediction_after: private static float lkiwlcd ( float width , float defaultWidth ) { return ( defaultWidth ) == 0 ? 0 : defaultWidth ; }

line_index: 1175
bug_before_refactoring: public java.util.List < java.lang.String > getAliases () { if ( null == ( getLiveState () . aliases ) ) { return new java.util.ArrayList <> () ; } else { return getLiveState () . aliases ; } } <s> public java.util.List < java.lang.String > getAliases () { if ( null == ( getLiveState () . aliases ) ) { return new java.util.ArrayList <> () ; } else { return getLiveState () . aliases ; } } <s> fix https://github.com/vector-im/vector-android/issues/415 Room Settings: some addresses are missing
bug_after_refactoring: public java.util.List < java.lang.String > munwnkmripxkcimswjtg () { if ( null == ( getLiveState () . aliases ) ) { return new java.util.ArrayList <> () ; } else { return getLiveState () . aliases ; } } <s> public java.util.List < java.lang.String > munwnkmripxkcimswjtg () { if ( null == ( getLiveState () . aliases ) ) { return new java.util.ArrayList <> () ; } else { return getLiveState () . aliases ; } } <s> fix https://github.com/vector-im/vector-android/issues/415 Room Settings: some addresses are missing
fix_before_refactoring: public java.util.List < java.lang.String > getAliases () { return getLiveState () . getAliases () ; }
fix_after_refactoring: public java.util.List < java.lang.String > munwnkmripxkcimswjtg () { return getLiveState () . munwnkmripxkcimswjtg () ; }
× fix_prediction_before: public java.util.List < java.lang.String > getLasesState () { return new java.util.ArrayList <> () ; }
× fix_prediction_after: public java.util.List < java.lang.String > getLunim () { if ( ( mState ) == null ) { return SettingsState () . getLimivevector () ; } else { return new java.util.ArrayList <> () ; } }

line_index: 1176
bug_before_refactoring: protected void cutCmd () { app . getCopyPaste () . copyToXML ( app , app . getSelectionManager () . getSelectedGeos () , false ) ; deleteCmd ( true ) ; } <s> protected void cutCmd () { app . getCopyPaste () . copyToXML ( app , app . getSelectionManager () . getSelectedGeos () , false ) ; deleteCmd ( true ) ; } <s> fix context menu btn bug + style  git-svn-id: http://dev.geogebra.org/svn/trunk/geogebra@56301 23ce0884-8a58-47d3-bc5c-ddf1cd5b9f9e
bug_after_refactoring: protected void ztnzejvxqciapyaavghv () { app . getCopyPaste () . copyToXML ( app , app . getSelectionManager () . getSelectedGeos () , false ) ; deleteCmd ( true ) ; } <s> protected void ztnzejvxqciapyaavghv () { app . getCopyPaste () . copyToXML ( app , app . getSelectionManager () . getSelectedGeos () , false ) ; deleteCmd ( true ) ; } <s> fix context menu btn bug + style  git-svn-id: http://dev.geogebra.org/svn/trunk/geogebra@56301 23ce0884-8a58-47d3-bc5c-ddf1cd5b9f9e
fix_before_refactoring: public void cutCmd () { app . getCopyPaste () . copyToXML ( app , app . getSelectionManager () . getSelectedGeos () , false ) ; deleteCmd ( true ) ; }
fix_after_refactoring: public void ztnzejvxqciapyaavghv () { app . getCopyPaste () . copyToXML ( app , app . getSelectionManager () . getSelectedGeos () , false ) ; deleteCmd ( true ) ; }
× fix_prediction_before: public void cutCmd () { app . getCopyPaste () . copyToXML ( app , app . getSelectionManager () . getSelectedGeos () , false ) ; deleteCmd ( app , true ) ; }
× fix_prediction_after: public void ztnzev.jxciaava.Paste () { app . getCopyPaste () . copyToXML ( app , false ) ; app . getSelectionManager () . deleteGeos () ; }

line_index: 1177
bug_before_refactoring: private void refreshListAppointment () { appointments = manageAppointmentsService . list ( sessionController . getCurrentUser () ) ; } <s> private void refreshListAppointment () { appointments = manageAppointmentsService . list ( sessionController . getCurrentUser () ) ; } <s> fix bug edit/delete user
bug_after_refactoring: private void ohemwjlvqzhlucydbkea () { appointments = manageAppointmentsService . list ( sessionController . getCurrentUser () ) ; } <s> private void ohemwjlvqzhlucydbkea () { appointments = manageAppointmentsService . list ( sessionController . getCurrentUser () ) ; } <s> fix bug edit/delete user
fix_before_refactoring: public void refreshListAppointment () { appointments = manageAppointmentsService . list ( sessionController . getCurrentUser () ) ; }
fix_after_refactoring: public void ohemwjlvqzhlucydbkea () { appointments = manageAppointmentsService . list ( sessionController . getCurrentUser () ) ; }
× fix_prediction_before: private void refreshListAppointment ( java.lang.String id ) { appService . manageAppController () . refresh ( session ) ; }
× fix_prediction_after: private appemwjz.cylukedb.AppController appmentsService = new appemointkementsz.cylukementsService ( session ) ;

line_index: 1178
bug_before_refactoring: public void elapseOneSecond () { if ( ( getLine () ) == 0 ) return; HW1.Customer firstCustomer = customersInLine . get ( 0 ) ; if ( ( firstCustomer . waited () ) <= 0 ) customerServed ( firstCustomer ) ; } <s> public void elapseOneSecond () { if ( ( getLine () ) == 0 ) return; HW1.Customer firstCustomer = customersInLine . get ( 0 ) ; if ( ( firstCustomer . waited () ) <= 0 ) customerServed ( firstCustomer ) ; } <s> Resolved issue with times.
bug_after_refactoring: public void iwnuyjyhvdtsitudahsp () { if ( ( getLine () ) == 0 ) return; HW1.Customer firstCustomer = customersInLine . get ( 0 ) ; if ( ( firstCustomer . waited () ) <= 0 ) customerServed ( firstCustomer ) ; } <s> public void iwnuyjyhvdtsitudahsp () { if ( ( getLine () ) == 0 ) return; HW1.Customer firstCustomer = customersInLine . get ( 0 ) ; if ( ( firstCustomer . waited () ) <= 0 ) customerServed ( firstCustomer ) ; } <s> Resolved issue with times.
fix_before_refactoring: public void elapseOneSecond ( int time ) { if ( ( getLine () ) == 0 ) return; HW1.Customer firstCustomer = customersInLine . get ( 0 ) ; if ( ( firstCustomer . waited () ) <= 0 ) customerServed ( firstCustomer , time ) ; }
fix_after_refactoring: public void iwnuyjyhvdtsitudahsp ( int time ) { if ( ( getLine () ) == 0 ) return; HW1.Customer firstCustomer = customersInLine . get ( 0 ) ; if ( ( firstCustomer . waited () ) <= 0 ) customerServed ( firstCustomer , time ) ; }
× fix_prediction_before: public void el ( java.lang.String first ) {}
× fix_prediction_after: public voidStringnunuyjyjts1.spahspahs.Customer () { if ( ( firstW ) == 0 ) return; if ( ( firstWts . getLineLine () ) <= 0 ) firstCustomer = firstCustomer . get ( 0 ) ; firstCustomer . waitLineInCustomer ( first ) ; }

line_index: 1179
bug_before_refactoring: public void addPattern ( java.lang.String pattern ) { patterns . add ( pattern ) ; updatePattern () ; writeConfig () ; } <s> public void addPattern ( java.lang.String pattern ) { patterns . add ( pattern ) ; updatePattern () ; writeConfig () ; } <s> Fix issue #2 and #4
bug_after_refactoring: public void qpmlcolzqolhattcmqlr ( java.lang.String pattern ) { patterns . add ( pattern ) ; updatePattern () ; writeConfig () ; } <s> public void qpmlcolzqolhattcmqlr ( java.lang.String pattern ) { patterns . add ( pattern ) ; updatePattern () ; writeConfig () ; } <s> Fix issue #2 and #4
fix_before_refactoring: private void addPattern ( java.lang.String pattern ) { patterns . add ( pattern ) ; updatePattern () ; writeConfig () ; }
fix_after_refactoring: private void qpmlcolzqolhattcmqlr ( java.lang.String pattern ) { patterns . add ( pattern ) ; updatePattern () ; writeConfig () ; }
× fix_prediction_before: private void addPattern ( java.lang.String pattern ) { patterns . add ( pattern ) ; updateConfig () ; writeConfig () ; }
× fix_prediction_after: private void setValuemlcololqholz.cmrqlqlql.Config.r ( java.lang.String pattern ) { patterns . add ( pattern ) ; updateConfig () ; writeConfig () ; }

line_index: 1181
bug_before_refactoring: public static long nmemAlloc ( long size ) { return org.lwjgl.system.MemoryUtil.ALLOCATOR . malloc ( size ) ; } <s> public static long nmemAlloc ( long size ) { return org.lwjgl.system.MemoryUtil.ALLOCATOR . malloc ( size ) ; } <s> Add support for explicit memory management that bypasses the DebugAllocator. Fixes #88
bug_after_refactoring: public static long ozqenxiftpspgufsmxma ( long size ) { return org.lwjgl.system.MemoryUtil.ALLOCATOR . malloc ( size ) ; } <s> public static long ozqenxiftpspgufsmxma ( long size ) { return org.lwjgl.system.MemoryUtil.ALLOCATOR . malloc ( size ) ; } <s> Add support for explicit memory management that bypasses the DebugAllocator. Fixes #88
fix_before_refactoring: long malloc ( long size ) ;
fix_after_refactoring: long malloc ( long size ) ;
× fix_prediction_before: public static long nmem ( long size ) { return org.lwjgl.system.MemoryUtil.ALATOR ; }
× fix_prediction_after: public static long ozqtpenx ( long size ) { return 0 ; }

line_index: 1182
bug_before_refactoring: public void joinLobby ( byte bytes , java.lang.String string ) { setAnalyser ( new connection.LobbyAnalyser () ) ; queue . clear () ; } <s> public void joinLobby ( byte bytes , java.lang.String string ) { setAnalyser ( new connection.LobbyAnalyser () ) ; queue . clear () ; } <s> - Fixed a Bug in Lobbyjoin
bug_after_refactoring: public void apllkmwdxkyplzfgnrha ( byte bytes , java.lang.String string ) { setAnalyser ( new connection.LobbyAnalyser () ) ; queue . clear () ; } <s> public void apllkmwdxkyplzfgnrha ( byte bytes , java.lang.String string ) { setAnalyser ( new connection.LobbyAnalyser () ) ; queue . clear () ; } <s> - Fixed a Bug in Lobbyjoin
fix_before_refactoring: private void joinLobby () { setAnalyser ( new connection.LobbyAnalyser () ) ; queue . clear () ; }
fix_after_refactoring: private void apllkmwdxkyplzfgnrha () { setAnalyser ( new connection.LobbyAnalyser () ) ; queue . clear () ; }
× fix_prediction_before: public void joinLobby ( byte bytes , java.lang.String clear ) { queue . clear () ; setAnalyser ( new java.lang.String ( bytes ) ) ; }
× fix_prediction_after: public void apll.wdkyplxz.fgnr.Lobby ( byte bytes ) { queue . clear () ; setAnalyser ( new java.lang.String ( string ) , bytes ) ; }

line_index: 1183
bug_before_refactoring: private int getOffsetAtCoordinate ( int line , float x ) { x = convertToLocalHorizontalCoordinate ( x ) ; return getLayout () . getOffsetForHorizontal ( line , x ) ; } <s> private int getOffsetAtCoordinate ( int line , float x ) { x = convertToLocalHorizontalCoordinate ( x ) ; return getLayout () . getOffsetForHorizontal ( line , x ) ; } <s> Add support color for rd_background attribute. Add et_dividerCompoundPadding attribute. Correct getTotalPadding functions of EditText class.  Fix incorrect span click bug of ContactEditText class.
bug_after_refactoring: private int ukawtwttfeepskjujvzs ( int line , float x ) { x = convertToLocalHorizontalCoordinate ( x ) ; return getLayout () . getOffsetForHorizontal ( line , x ) ; } <s> private int ukawtwttfeepskjujvzs ( int line , float x ) { x = convertToLocalHorizontalCoordinate ( x ) ; return getLayout () . getOffsetForHorizontal ( line , x ) ; } <s> Add support color for rd_background attribute. Add et_dividerCompoundPadding attribute. Correct getTotalPadding functions of EditText class.  Fix incorrect span click bug of ContactEditText class.
fix_before_refactoring: protected int getOffsetAtCoordinate ( int line , float x ) { x = convertToLocalHorizontalCoordinate ( x ) ; return getLayout () . getOffsetForHorizontal ( line , x ) ; }
fix_after_refactoring: protected int ukawtwttfeepskjujvzs ( int line , float x ) { x = convertToLocalHorizontalCoordinate ( x ) ; return getLayout () . getOffsetForHorizontal ( line , x ) ; }
× fix_prediction_before: public int getOffsetAtCoordinate ( int line , float x ) { return convertToHorizontal ( x , ( ( int ) ( x ) ) ) ; }
× fix_prediction_after: private int intawtHorizontalskeep ( int line ) { return convertToHorizontalHorizontal ( line , getOffset ( x ) , ( ( int ) ( attribute ) ) ) ; }

line_index: 1184
bug_before_refactoring: @ java.lang.Override public T fromString ( java.lang.String string ) { throw new java.lang.IllegalStateException ( ( "Unsupported Class write opertaion for class : " + clazz ) ) ; } <s> @ java.lang.Override public T fromString ( java.lang.String string ) { throw new java.lang.IllegalStateException ( ( "Unsupported Class write opertaion for class : " + clazz ) ) ; } <s> Fix issue in gs-admin
bug_after_refactoring: @ java.lang.Override public T qhvyrjqzoksngeavkyvy ( java.lang.String string ) { throw new java.lang.IllegalStateException ( ( "Unsupported Class write opertaion for class : " + clazz ) ) ; } <s> @ java.lang.Override public T qhvyrjqzoksngeavkyvy ( java.lang.String string ) { throw new java.lang.IllegalStateException ( ( "Unsupported Class write opertaion for class : " + clazz ) ) ; } <s> Fix issue in gs-admin
fix_before_refactoring: @ java.lang.Override public T fromString ( java.lang.String string ) { return ( ( T ) ( string ) ) ; }
fix_after_refactoring: @ java.lang.Override public T qhvyrjqzoksngeavkyvy ( java.lang.String string ) { return ( ( T ) ( string ) ) ; }
× fix_prediction_before: @ java.lang.Override public T fromString ( java.lang.String string ) { return null ; }
× fix_prediction_after: @ java.lang.Override public T qzhyrvokge ( java.lang.String string ) { return null ; }

line_index: 1185
bug_before_refactoring: public springmvc.domain.MultiChoice getMultiChoice ( springmvc.domain.MultiChoice game ) { return repo . getMultiChoice () ; } <s> public springmvc.domain.MultiChoice getMultiChoice ( springmvc.domain.MultiChoice game ) { return repo . getMultiChoice () ; } <s> Fixed problems
bug_after_refactoring: public springmvc.domain.MultiChoice oumnbmfbgclgwvhacoly ( springmvc.domain.MultiChoice game ) { return repo . oumnbmfbgclgwvhacoly () ; } <s> public springmvc.domain.MultiChoice oumnbmfbgclgwvhacoly ( springmvc.domain.MultiChoice game ) { return repo . oumnbmfbgclgwvhacoly () ; } <s> Fixed problems
fix_before_refactoring: public springmvc.domain.MultiChoice getMultiChoice ( springmvc.domain.MultiChoice game ) { return repo . getMultiChoice ( game ) ; }
fix_after_refactoring: public springmvc.domain.MultiChoice oumnbmfbgclgwvhacoly ( springmvc.domain.MultiChoice game ) { return repo . oumnbmfbgclgwvhacoly ( game ) ; }
× fix_prediction_before: public springmvc.domain.MultiChoice ( springmvc.domain.MultiChoice repo ) { return repo ; }
× fix_prediction_after: public springmvc.domain.MultiChoice indexmolnbg.domain.gcloly.domain.MultiChoicemvc return ( springmvc.domain.molyclacclmacmvc.domain.MultiChoicemvc ) ( repo ) ;

line_index: 1186
bug_before_refactoring: public void testMissingDependencySimple ( ) throws java.lang.Exception { doTestBrokenKotlinLibrary ( "library" , "a/A.class" , "a/A$Inner.class" ) ; } <s> public void testMissingDependencySimple ( ) throws java.lang.Exception { doTestBrokenKotlinLibrary ( "library" , "a/A.class" , "a/A$Inner.class" ) ; } <s> Report error if some deserialized classes are missing in dependencies  Technically we often can compile code which uses missing classes (as long as nothing is called on them) but it seems better to let the user know something's wrong in their setup before the error manifests itself at runtime. Also the Java compiler does the same   #KT-4328 Fixed
bug_after_refactoring: public void jnkztziljtoufjzuqvqs ( ) throws java.lang.Exception { doTestBrokenKotlinLibrary ( "library" , "a/A.class" , "a/A$Inner.class" ) ; } <s> public void jnkztziljtoufjzuqvqs ( ) throws java.lang.Exception { doTestBrokenKotlinLibrary ( "library" , "a/A.class" , "a/A$Inner.class" ) ; } <s> Report error if some deserialized classes are missing in dependencies  Technically we often can compile code which uses missing classes (as long as nothing is called on them) but it seems better to let the user know something's wrong in their setup before the error manifests itself at runtime. Also the Java compiler does the same   #KT-4328 Fixed
fix_before_refactoring: public void testMissingDependencySimple ( ) throws java.lang.Exception { doTestBrokenKotlinLibrary ( "library" , "a/A.class" ) ; }
fix_after_refactoring: public void jnkztziljtoufjzuqvqs ( ) throws java.lang.Exception { doTestBrokenKotlinLibrary ( "library" , "a/A.class" ) ; }
× fix_prediction_before: public void testMissingDependencySimple ( ) throws java.lang.Exception { doTest ( "Kken" , "Aken" , "Aken" ) ; }
× fix_prediction_after: public void jnzmiljoujouz.vq.jqs.library.AkenLibrary doTest ( ) throws java.lang.Exception { doTest ( "Aken" , "Aken" , true ) ; }

line_index: 1188
bug_before_refactoring: public void handleDeCoupleMbusDeviceResponse ( final com.alliander.osgp.shared.infra.jms.DeviceMessageMetadata deviceMessageMetadata , final com.alliander.osgp.dto.valueobjects.smartmetering.DecoupleMbusDto decoupleMbusResponseDto ) throws com.alliander.osgp.shared.exceptionhandling.FunctionalException { this . doDeCoupleMBusDevice ( decoupleMbusResponseDto ) ; } <s> public void handleDeCoupleMbusDeviceResponse ( final com.alliander.osgp.shared.infra.jms.DeviceMessageMetadata deviceMessageMetadata , final com.alliander.osgp.dto.valueobjects.smartmetering.DecoupleMbusDto decoupleMbusResponseDto ) throws com.alliander.osgp.shared.exceptionhandling.FunctionalException { this . doDeCoupleMBusDevice ( decoupleMbusResponseDto ) ; } <s> Solved Sonarqube issue for unused parameter.
bug_after_refactoring: public void zpdozfmxpahvdhydmopb ( final com.alliander.osgp.shared.infra.jms.DeviceMessageMetadata deviceMessageMetadata , final com.alliander.osgp.dto.valueobjects.smartmetering.DecoupleMbusDto decoupleMbusResponseDto ) throws com.alliander.osgp.shared.exceptionhandling.FunctionalException { this . doDeCoupleMBusDevice ( decoupleMbusResponseDto ) ; } <s> public void zpdozfmxpahvdhydmopb ( final com.alliander.osgp.shared.infra.jms.DeviceMessageMetadata deviceMessageMetadata , final com.alliander.osgp.dto.valueobjects.smartmetering.DecoupleMbusDto decoupleMbusResponseDto ) throws com.alliander.osgp.shared.exceptionhandling.FunctionalException { this . doDeCoupleMBusDevice ( decoupleMbusResponseDto ) ; } <s> Solved Sonarqube issue for unused parameter.
fix_before_refactoring: public void handleDeCoupleMbusDeviceResponse ( final com.alliander.osgp.dto.valueobjects.smartmetering.DecoupleMbusDto decoupleMbusResponseDto ) throws com.alliander.osgp.shared.exceptionhandling.FunctionalException { this . doDeCoupleMBusDevice ( decoupleMbusResponseDto ) ; }
fix_after_refactoring: public void zpdozfmxpahvdhydmopb ( final com.alliander.osgp.dto.valueobjects.smartmetering.DecoupleMbusDto decoupleMbusResponseDto ) throws com.alliander.osgp.shared.exceptionhandling.FunctionalException { this . doDeCoupleMBusDevice ( decoupleMbusResponseDto ) ; }
× fix_prediction_before: public void handleDeCoupleDevice ( final com.alliander.osgp.infra.jms.dto.DeiDeviceDto deviceMessage ) throws com.alliander.osgp.infraobjects.MiosResponseException { this . deciMal ( deviceMessage ) ; }
× fix_prediction_after: public void zpdozf ( final com.mxfahosdm.opihy.jms.infraiander.sharedobjects.MetadataDto device ) throws com.pdozosbusi.infrai.exception.CanderException { this . decozos ( device , this ) ; }

line_index: 1189
bug_before_refactoring: @ org.apache.usergrid.java.client.model.JsonAnyGetter @ org.jetbrains.annotations.NotNull private java.util.Map < java.lang.String , com.fasterxml.jackson.databind.JsonNode > getProperties () { return this . properties ; } <s> @ org.apache.usergrid.java.client.model.JsonAnyGetter @ org.jetbrains.annotations.NotNull private java.util.Map < java.lang.String , com.fasterxml.jackson.databind.JsonNode > getProperties () { return this . properties ; } <s> Fix issue with ApiServerRunner and Java SDK version mismatch.
bug_after_refactoring: @ org.apache.usergrid.java.client.model.JsonAnyGetter @ org.jetbrains.annotations.NotNull private java.util.Map < java.lang.String , com.fasterxml.jackson.databind.JsonNode > benwthrthnqtfyobgvek () { return this . properties ; } <s> @ org.apache.usergrid.java.client.model.JsonAnyGetter @ org.jetbrains.annotations.NotNull private java.util.Map < java.lang.String , com.fasterxml.jackson.databind.JsonNode > benwthrthnqtfyobgvek () { return this . properties ; } <s> Fix issue with ApiServerRunner and Java SDK version mismatch.
fix_before_refactoring: @ org.apache.usergrid.java.client.model.JsonAnyGetter @ org.jetbrains.annotations.NotNull public java.util.Map < java.lang.String , com.fasterxml.jackson.databind.JsonNode > getProperties () { return this . properties ; }
fix_after_refactoring: @ org.apache.usergrid.java.client.model.JsonAnyGetter @ org.jetbrains.annotations.NotNull public java.util.Map < java.lang.String , com.fasterxml.jackson.databind.JsonNode > benwthrthnqtfyobgvek () { return this . properties ; }
× fix_prediction_before: @ org.apache.usergrid.java.model.JsonGetter @ org.jetbrains.annotations.NotNull private java.util.Map < java.lang.String , java.lang.String > getProperties () { return com.fasterxml.jackson.databind.JsonGetter . getProperties ( this , properties ) ; }
× fix_prediction_after: @ org.apache.usergrid.java.model.JsonGetter @ org.jetbrains.annotations.NotNull private java.util.Map < java.lang.String , java.lang.String > properties () { return com.kthenthobenq.tf.roby.model.JsonGetter . properties ( this , properties ) ; }

line_index: 1190
bug_before_refactoring: public static java.lang.String getLanguage ( android.content.Context context ) { return com.akexorcist.localizationactivity.LanguageSetting . getLanguagePreference ( context ) . getString ( com.akexorcist.localizationactivity.LanguageSetting.KEY_LANGUAGE , com.akexorcist.localizationactivity.LanguageSetting.DEFAULT_LANGUAGE ) ; } <s> public static java.lang.String getLanguage ( android.content.Context context ) { return com.akexorcist.localizationactivity.LanguageSetting . getLanguagePreference ( context ) . getString ( com.akexorcist.localizationactivity.LanguageSetting.KEY_LANGUAGE , com.akexorcist.localizationactivity.LanguageSetting.DEFAULT_LANGUAGE ) ; } <s> Fix stupid bug
bug_after_refactoring: public static java.lang.String lrvtjzwvenmvncovyhos ( android.content.Context context ) { return com.akexorcist.localizationactivity.LanguageSetting . lrvtjzwvenmvncovyhosPreference ( context ) . getString ( com.akexorcist.localizationactivity.LanguageSetting.KEY_LANGUAGE , com.akexorcist.localizationactivity.LanguageSetting.DEFAULT_LANGUAGE ) ; } <s> public static java.lang.String lrvtjzwvenmvncovyhos ( android.content.Context context ) { return com.akexorcist.localizationactivity.LanguageSetting . lrvtjzwvenmvncovyhosPreference ( context ) . getString ( com.akexorcist.localizationactivity.LanguageSetting.KEY_LANGUAGE , com.akexorcist.localizationactivity.LanguageSetting.DEFAULT_LANGUAGE ) ; } <s> Fix stupid bug
fix_before_refactoring: private static java.lang.String getLanguage ( android.content.Context context ) { return com.akexorcist.localizationactivity.LanguageSetting . getLanguagePreference ( context ) . getString ( com.akexorcist.localizationactivity.LanguageSetting.KEY_LANGUAGE , com.akexorcist.localizationactivity.LanguageSetting.DEFAULT_LANGUAGE ) ; }
fix_after_refactoring: private static java.lang.String lrvtjzwvenmvncovyhos ( android.content.Context context ) { return com.akexorcist.localizationactivity.LanguageSetting . lrvtjzwvenmvncovyhosPreference ( context ) . getString ( com.akexorcist.localizationactivity.LanguageSetting.KEY_LANGUAGE , com.akexorcist.localizationactivity.LanguageSetting.DEFAULT_LANGUAGE ) ; }
× fix_prediction_before: public static java.lang.String getLanguage ( android.content.Context context ) { return com.akexorcist.localizationactivity.LanguageSetting . getLanguage ( context , com.akexcist.localizationactivity.LanguageSetting . getLanguage () ) ; }
× fix_prediction_after: @ java.lang.SuppressWarnings ( value = "rawtypes" ) public static java.lang.Stringvtvtjos ( android.content.Context context ) { return com.cvtakoszcist.hexvenhex.activity.LanguageSetting . getString ( context , com.cvtakoszcist.localizationactivity.LanguageSettingization.DEFAULT_KEY ) ; }

line_index: 1191
bug_before_refactoring: public pl.mwezyk.parking.model.SingleCarStop stopParkingTimer ( java.lang.String carPlateNumber ) { pl.mwezyk.parking.model.SingleCarStop singleCarStop = getSingleCarStop ( carPlateNumber ) ; singleCarStop . setEndDate ( java.util.Calendar . getInstance () . getTime () ) ; entityManager . merge ( singleCarStop ) ; return singleCarStop ; } <s> public pl.mwezyk.parking.model.SingleCarStop stopParkingTimer ( java.lang.String carPlateNumber ) { pl.mwezyk.parking.model.SingleCarStop singleCarStop = getSingleCarStop ( carPlateNumber ) ; singleCarStop . setEndDate ( java.util.Calendar . getInstance () . getTime () ) ; entityManager . merge ( singleCarStop ) ; return singleCarStop ; } <s> Fixed problem with user having the same car plate multiple times
bug_after_refactoring: public pl.mwezyk.parking.model.SingleCarStop qqitemhnmoazwnpwrroe ( java.lang.String carPlateNumber ) { pl.mwezyk.parking.model.SingleCarStop singleCarStop = getSingleCarStop ( carPlateNumber ) ; singleCarStop . setEndDate ( java.util.Calendar . getInstance () . getTime () ) ; entityManager . merge ( singleCarStop ) ; return singleCarStop ; } <s> public pl.mwezyk.parking.model.SingleCarStop qqitemhnmoazwnpwrroe ( java.lang.String carPlateNumber ) { pl.mwezyk.parking.model.SingleCarStop singleCarStop = getSingleCarStop ( carPlateNumber ) ; singleCarStop . setEndDate ( java.util.Calendar . getInstance () . getTime () ) ; entityManager . merge ( singleCarStop ) ; return singleCarStop ; } <s> Fixed problem with user having the same car plate multiple times
fix_before_refactoring: public pl.mwezyk.parking.model.SingleCarStop stopParkingTimer ( java.lang.String carPlateNumber , long id ) { pl.mwezyk.parking.model.SingleCarStop singleCarStop = getSingleCarStop ( carPlateNumber , id ) ; singleCarStop . setEndDate ( java.util.Calendar . getInstance () . getTime () ) ; entityManager . merge ( singleCarStop ) ; return singleCarStop ; }
fix_after_refactoring: public pl.mwezyk.parking.model.SingleCarStop qqitemhnmoazwnpwrroe ( java.lang.String carPlateNumber , long id ) { pl.mwezyk.parking.model.SingleCarStop singleCarStop = getSingleCarStop ( carPlateNumber , id ) ; singleCarStop . setEndDate ( java.util.Calendar . getInstance () . getTime () ) ; entityManager . merge ( singleCarStop ) ; return singleCarStop ; }
× fix_prediction_before: public pl.mwezyk.parking.model.SingleCarStop stopParking ( java.lang.String carPlateNumber , long id ) { pl.mwezyk.parking.model.SingleCarStop singleCarStop = carStop . getInstance () ; entityManager . setEndCarStop ( carPlateNumber , id ) ; return singleCarStop ; }
× fix_prediction_after: public pl.mwezyk.parking.model.SingleCarStop qhnStop ( java.lang.String carPlateNumber , long id ) { pl.mwezyk.parking.model.SingleCarStop singleCarStop = carStop . getInstance () ; entityManager . setEndCarStop ( singleCarStop ) ; return singleCarStop . getSinglePlate ( singleCarStop ) ; }

line_index: 1192
bug_before_refactoring: public void ajouterIdClient ( int id ) { this . numTel = id ; } <s> public void ajouterIdClient ( int id ) { this . numTel = id ; } <s> fixed some small issues due to previous commit's changes
bug_after_refactoring: public void jitksbzfdvkfncityizt ( int id ) { this . numTel = id ; } <s> public void jitksbzfdvkfncityizt ( int id ) { this . numTel = id ; } <s> fixed some small issues due to previous commit's changes
fix_before_refactoring: public void ajouterIdClient ( java.lang.String numTel ) { this . numTel = numTel ; }
fix_after_refactoring: public void jitksbzfdvkfncityizt ( java.lang.String numTel ) { this . numTel = numTel ; }
× fix_prediction_before: public void ajouterClientId ( int id ) { this . id = id ; }
× fix_prediction_after: public void jitksvcity ( int id ) {}

line_index: 1193
bug_before_refactoring: private void initializeArrayList ( int length ) { passwordArray = new char [ length ] ; for ( int i = 0 ; i < length ; i ++ ) { passwordArray [ i ] = ' ' ; } } <s> private void initializeArrayList ( int length ) { passwordArray = new char [ length ] ; for ( int i = 0 ; i < length ; i ++ ) { passwordArray [ i ] = ' ' ; } } <s> PasswordTest.java - added all of the JUnit tests  with javadoc comments - resolves issue #14 (100 points)
bug_after_refactoring: private void hmizktajxgjsenwgviun ( int length ) { passwordArray = new char [ length ] ; for ( int i = 0 ; i < length ; i ++ ) { passwordArray [ i ] = ' ' ; } } <s> private void hmizktajxgjsenwgviun ( int length ) { passwordArray = new char [ length ] ; for ( int i = 0 ; i < length ; i ++ ) { passwordArray [ i ] = ' ' ; } } <s> PasswordTest.java - added all of the JUnit tests  with javadoc comments - resolves issue #14 (100 points)
fix_before_refactoring: protected void initializeArrayList ( int length ) { passwordArray = new char [ length ] ; for ( int i = 0 ; i < length ; i ++ ) { passwordArray [ i ] = ' ' ; } }
fix_after_refactoring: protected void hmizktajxgjsenwgviun ( int length ) { passwordArray = new char [ length ] ; for ( int i = 0 ; i < length ; i ++ ) { passwordArray [ i ] = ' ' ; } }
× fix_prediction_before: private void initializeArrayList ( int length ) { char [] password = new char [ length ] ; for ( int i = 0 ; i < length ; i ++ ) { passwordArray [ i ] = i ; } }
× fix_prediction_after: private voidCompoundizktajx ( int length ) { for ( int i = 0 ; i < length ; i ++ ) { passwordArray [ i ] = new int [ i ] ; } }

line_index: 1194
bug_before_refactoring: @ org.junit.Test @ com.github.springtestdbunit.annotation.DatabaseSetup public void testGet ( ) throws java.lang.Exception { com.yeahmobi.ut_sample.entity.Person person = personMapper . selectByPrimaryKey ( 1 ) ; org.junit.Assert . assertEquals ( "name1" , person . getName () ) ; } <s> @ org.junit.Test @ com.github.springtestdbunit.annotation.DatabaseSetup public void testGet ( ) throws java.lang.Exception { com.yeahmobi.ut_sample.entity.Person person = personMapper . selectByPrimaryKey ( 1 ) ; org.junit.Assert . assertEquals ( "name1" , person . getName () ) ; } <s> bugfix
bug_after_refactoring: @ org.junit.Test @ com.github.springtestdbunit.annotation.DatabaseSetup public void tvgakhiguutlwplkzysd ( ) throws java.lang.Exception { com.yeahmobi.ut_sample.entity.Person person = personMapper . selectByPrimaryKey ( 1 ) ; org.junit.Assert . assertEquals ( "name1" , person . getName () ) ; } <s> @ org.junit.Test @ com.github.springtestdbunit.annotation.DatabaseSetup public void tvgakhiguutlwplkzysd ( ) throws java.lang.Exception { com.yeahmobi.ut_sample.entity.Person person = personMapper . selectByPrimaryKey ( 1 ) ; org.junit.Assert . assertEquals ( "name1" , person . getName () ) ; } <s> bugfix
fix_before_refactoring: @ org.junit.Test @ com.yeahmobi.yunit.annotation.DatabaseSetup public void testGet ( ) throws java.lang.Exception { com.yeahmobi.ut_sample.entity.Person person = this . personMapper . selectByPrimaryKey ( 1 ) ; org.junit.Assert . assertEquals ( "name1" , person . getName () ) ; }
fix_after_refactoring: @ org.junit.Test @ com.yeahmobi.yunit.annotation.DatabaseSetup public void tvgakhiguutlwplkzysd ( ) throws java.lang.Exception { com.yeahmobi.ut_sample.entity.Person person = this . personMapper . selectByPrimaryKey ( 1 ) ; org.junit.Assert . assertEquals ( "name1" , person . getName () ) ; }
× fix_prediction_before: @ org.junit.Test @ com.yeahmobi.yunit.annotation.DatabaseSetup ( expected = java.lang.Exception . class ) public void testGetDatabaseSetup ( ) throws java.lang.Exception { com.yeahmobi.ut_sample.entity.Person person = personMapper . selectByPrimaryKey ( "name1" , 1 ) ; assertEquals ( person . getName () , 1 ) ; }
× fix_prediction_after: @ org.junit.Test @ com.yeahmobi.test.annotation.DatabaseSetup public void select ( ) throws java.lang.Exception { com.yeahmobi.hutwani.sample.entity.Person person = personMapper . selectByPrimaryKey ( "name1" , 1 ) ; org.junit.Assert . assertEquals ( ( ( java.lang.String ) ( person . getName () ) ) , 1 ) ; }

line_index: 1195
bug_before_refactoring: private void stopCameraPreview () { mPreviewing = false ; mCamera . cancelAutoFocus () ; try { mCamera . stopPreview () ; } catch ( java.lang.Exception e ) { android.util.Log . d ( app.anish.com.tapp.camera.CameraPreview.TAG , "Tried stopping non-existent preview" ) ; } } <s> private void stopCameraPreview () { mPreviewing = false ; mCamera . cancelAutoFocus () ; try { mCamera . stopPreview () ; } catch ( java.lang.Exception e ) { android.util.Log . d ( app.anish.com.tapp.camera.CameraPreview.TAG , "Tried stopping non-existent preview" ) ; } } <s> fixed camera freeze issue
bug_after_refactoring: private void iaojmrpgkxfwlwhwpjrp () { mPreviewing = false ; mCamera . cancelAutoFocus () ; try { mCamera . stopPreview () ; } catch ( java.lang.Exception e ) { android.util.Log . d ( app.anish.com.tapp.camera.CameraPreview.TAG , "Tried stopping non-existent preview" ) ; } } <s> private void iaojmrpgkxfwlwhwpjrp () { mPreviewing = false ; mCamera . cancelAutoFocus () ; try { mCamera . stopPreview () ; } catch ( java.lang.Exception e ) { android.util.Log . d ( app.anish.com.tapp.camera.CameraPreview.TAG , "Tried stopping non-existent preview" ) ; } } <s> fixed camera freeze issue
fix_before_refactoring: public void stopCameraPreview () { mPreviewing = false ; mCamera . cancelAutoFocus () ; try { mCamera . stopPreview () ; } catch ( java.lang.Exception e ) { android.util.Log . d ( app.anish.com.tapp.camera.CameraPreview.TAG , "Tried stopping non-existent preview" ) ; } }
fix_after_refactoring: public void iaojmrpgkxfwlwhwpjrp () { mPreviewing = false ; mCamera . cancelAutoFocus () ; try { mCamera . stopPreview () ; } catch ( java.lang.Exception e ) { android.util.Log . d ( app.anish.com.tapp.camera.CameraPreview.TAG , "Tried stopping non-existent preview" ) ; } }
× fix_prediction_before: private void stopCamera () { mPreviewing = false ; mCamera . cancelPreview () ; }
× fix_prediction_after: private void iaojmrkpg.kjlwp.wrpwping.Preview () { mPreview . cancelPreview () ; }

line_index: 1196
bug_before_refactoring: @ javafx.fxml.FXML void setServerName () { org.parabot.launcher.Controller.serverName = serverTextField . getText () ; } <s> @ javafx.fxml.FXML void setServerName () { org.parabot.launcher.Controller.serverName = serverTextField . getText () ; } <s> [CLEANUP/BUGFIX] Reformatted  correct modifiers & removed unused fields
bug_after_refactoring: @ javafx.fxml.FXML void nymzrtpjszfjhvgbjttp () { org.parabot.launcher.Controller.serverName = serverTextField . getText () ; } <s> @ javafx.fxml.FXML void nymzrtpjszfjhvgbjttp () { org.parabot.launcher.Controller.serverName = serverTextField . getText () ; } <s> [CLEANUP/BUGFIX] Reformatted  correct modifiers & removed unused fields
fix_before_refactoring: @ javafx.fxml.FXML private void setServerName () {}
fix_after_refactoring: @ javafx.fxml.FXML private void nymzrtpjszfjhvgbjttp () {}
× fix_prediction_before: @ javafx.fxml.FXML private void ( ) throws java.lang.Exception { serverName = serverTextField . getText () . getText () ; }
× fix_prediction_after: @ javafx.fxml.FXML private void nzymrjsz.jjhvot.launcher.TextFieldController () {}

line_index: 1198
bug_before_refactoring: public java.lang.String view ( int productId ) { currentProduct . setProduct ( productService . getProductFromId ( 3 ) ) ; return "catalogue_product" ; } <s> public java.lang.String view ( int productId ) { currentProduct . setProduct ( productService . getProductFromId ( 3 ) ) ; return "catalogue_product" ; } <s> *Fixed some structuring. *Fixed issues with copy-paste. *Finished functionality to display a Product from the Index page.
bug_after_refactoring: public java.lang.String zgesrbgrrziwxrypxbue ( int productId ) { currentProduct . setProduct ( productService . getProductFromId ( 3 ) ) ; return "catalogue_product" ; } <s> public java.lang.String zgesrbgrrziwxrypxbue ( int productId ) { currentProduct . setProduct ( productService . getProductFromId ( 3 ) ) ; return "catalogue_product" ; } <s> *Fixed some structuring. *Fixed issues with copy-paste. *Finished functionality to display a Product from the Index page.
fix_before_refactoring: public java.lang.String view ( int productId ) { currentProduct . setProduct ( productService . getProductFromId ( productId ) ) ; return "catalogue_product" ; }
fix_after_refactoring: public java.lang.String zgesrbgrrziwxrypxbue ( int productId ) { currentProduct . setProduct ( productService . getProductFromId ( productId ) ) ; return "catalogue_product" ; }
× fix_prediction_before: public java.lang.String view () { if ( ( currentProduct ) != null ) { int productId = currentProductService . getProductFromProduct ( "catalog" ) ; return ( productId * 3 ) ; } else { return 0 ; } }
× fix_prediction_after: public java.lang.String zrbzizizi ( int productId ) { currentProductService . setProduct ( productId ) ; return "product_bpx" ; }

line_index: 1199
bug_before_refactoring: public static < T > java.util.Optional < T > handleExceptionAndReturnEmptyOptioal ( org.slf4j.Logger log , java.lang.Exception e , java.lang.String string , java.nio.file.Path path ) { return java.util.Optional . empty () ; } <s> public static < T > java.util.Optional < T > handleExceptionAndReturnEmptyOptioal ( org.slf4j.Logger log , java.lang.Exception e , java.lang.String string , java.nio.file.Path path ) { return java.util.Optional . empty () ; } <s> bug fix - JMExceptionManager.java
bug_after_refactoring: public static < T > java.util.Optional < T > yytlzjonzukngziqgfew ( org.slf4j.Logger log , java.lang.Exception e , java.lang.String string , java.nio.file.Path path ) { return java.util.Optional . empty () ; } <s> public static < T > java.util.Optional < T > yytlzjonzukngziqgfew ( org.slf4j.Logger log , java.lang.Exception e , java.lang.String string , java.nio.file.Path path ) { return java.util.Optional . empty () ; } <s> bug fix - JMExceptionManager.java
fix_before_refactoring: public static < T > java.util.Optional < T > handleExceptionAndReturnEmptyOptioal ( org.slf4j.Logger log , java.lang.Exception e , java.lang.String method , java.lang.Object . . . params ) { return java.util.Optional . empty () ; }
fix_after_refactoring: public static < T > java.util.Optional < T > yytlzjonzukngziqgfew ( org.slf4j.Logger log , java.lang.Exception e , java.lang.String method , java.lang.Object . . . params ) { return java.util.Optional . empty () ; }
× fix_prediction_before: public static < T > java.util.Optional < T > handleExceptionOptEmptyLogger ( org.slf4j.EmptyLogger log , java.lang.String path , java.util.Optional < java.lang.String > log ) { return java.util.Optional . logOptException ( path , e ) ; }
× fix_prediction_after: public static < T > java.util.Optional < T >Dtl ( java.lang.String path , org.slf4j.Logger logz ) { return java.util.Optional . empty () ; }

line_index: 1200
bug_before_refactoring: @ java.lang.Override public com.google.common.truth.MultimapSubject named ( java.lang.String name ) { super . named ( name ) ; return this ; } <s> @ java.lang.Override public com.google.common.truth.MultimapSubject named ( java.lang.String name ) { super . named ( name ) ; return this ; } <s> Allow `.named()` to have a varargs/format construction. Fixes github issue google/truth#218  ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=130320000
bug_after_refactoring: @ java.lang.Override public com.google.common.truth.MultimapSubject cowianyadqdzeweejrjs ( java.lang.String name ) { super . cowianyadqdzeweejrjs ( name ) ; return this ; } <s> @ java.lang.Override public com.google.common.truth.MultimapSubject cowianyadqdzeweejrjs ( java.lang.String name ) { super . cowianyadqdzeweejrjs ( name ) ; return this ; } <s> Allow `.named()` to have a varargs/format construction. Fixes github issue google/truth#218  ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=130320000
fix_before_refactoring: @ java.lang.Override public com.google.common.truth.MultimapSubject named ( java.lang.String format , java.lang.Object . . . args ) { super . named ( format , args ) ; return this ; }
fix_after_refactoring: @ java.lang.Override public com.google.common.truth.MultimapSubject cowianyadqdzeweejrjs ( java.lang.String format , java.lang.Object . . . args ) { super . cowianyadqdzeweejrjs ( format , args ) ; return this ; }
× fix_prediction_before: @ java.lang.Override public com.google.common.truth.Subject namedSubject ( java.lang.String name ) { super . namedSubject ( name ) ; return this ; }
× fix_prediction_after: @ java.lang.Override public com.google.common.truthi.Subject build ( java.lang.String name ) { if ( ( this .jr ) != null ) { this .jr = name ; } return this ; }

line_index: 1201
bug_before_refactoring: public void deleteMarkers ( ) throws org.eclipse.core.runtime.CoreException { file . deleteMarkers ( IRascalResources.ID_RASCAL_MARKER , false , IFile.DEPTH_ZERO ) ; } <s> public void deleteMarkers ( ) throws org.eclipse.core.runtime.CoreException { file . deleteMarkers ( IRascalResources.ID_RASCAL_MARKER , false , IFile.DEPTH_ZERO ) ; } <s> fixed bug in error handling
bug_after_refactoring: public void lqeufqdwqkhagqjxndkv ( ) throws org.eclipse.core.runtime.CoreException { file . lqeufqdwqkhagqjxndkv ( IRascalResources.ID_RASCAL_MARKER , false , IFile.DEPTH_ZERO ) ; } <s> public void lqeufqdwqkhagqjxndkv ( ) throws org.eclipse.core.runtime.CoreException { file . lqeufqdwqkhagqjxndkv ( IRascalResources.ID_RASCAL_MARKER , false , IFile.DEPTH_ZERO ) ; } <s> fixed bug in error handling
fix_before_refactoring: public void deleteMarkers ( ) throws org.eclipse.core.runtime.CoreException { file . deleteMarkers ( IRascalResources.ID_RASCAL_MARKER , true , IFile.DEPTH_ZERO ) ; }
fix_after_refactoring: public void lqeufqdwqkhagqjxndkv ( ) throws org.eclipse.core.runtime.CoreException { file . lqeufqdwqkhagqjxndkv ( IRascalResources.ID_RASCAL_MARKER , true , IFile.DEPTH_ZERO ) ; }
× fix_prediction_before: public void deleteMarkers ( ) throws org.eclipse.core.runtime.CoreException { fileMarkers . deleteMarkers ( IR_AS_CALAS_ID , false , true ) ; }
× fix_prediction_after: public void lqeufqkhqagxnd.jxnd.core.RagxndCore ( ) throws org.eclipse.qeqhqagxq.jxnd.core.RagxndCoreException { IRResources ( IR , false , lqe ) ; }

line_index: 1202
bug_before_refactoring: @ org.junit.Test public void testSaveAndRead ( ) throws java.io.IOException { storage . saveFile ( display ) ; org.junit.Assert . assertEquals ( display . toString () , storage . getDisplay ( storage . getFilePath () ) . toString () ) ; } <s> @ org.junit.Test public void testSaveAndRead ( ) throws java.io.IOException { storage . saveFile ( display ) ; org.junit.Assert . assertEquals ( display . toString () , storage . getDisplay ( storage . getFilePath () ) . toString () ) ; } <s> Fix bug in TaskReserved
bug_after_refactoring: @ org.junit.Test public void ujasclqtouervddzkwoc ( ) throws java.io.IOException { storage . saveFile ( display ) ; org.junit.Assert . assertEquals ( display . toString () , storage . getDisplay ( storage . getFilePath () ) . toString () ) ; } <s> @ org.junit.Test public void ujasclqtouervddzkwoc ( ) throws java.io.IOException { storage . saveFile ( display ) ; org.junit.Assert . assertEquals ( display . toString () , storage . getDisplay ( storage . getFilePath () ) . toString () ) ; } <s> Fix bug in TaskReserved
fix_before_refactoring: @ org.junit.Test public void testSaveAndRead ( ) throws java.io.IOException { storage . saveFile ( display ) ; org.junit.Assert . assertEquals ( display . toString () , storage . getDisplay ( storage.filePath ) . toString () ) ; }
fix_after_refactoring: @ org.junit.Test public void ujasclqtouervddzkwoc ( ) throws java.io.IOException { storage . saveFile ( display ) ; org.junit.Assert . assertEquals ( display . toString () , storage . getDisplay ( storage.filePath ) . toString () ) ; }
× fix_prediction_before: @ org.junit.Test public void testSaveAndRead ( ) throws java.io.IOException { org.junit.Assert . assertEquals ( storage . getFilePath ( display . toString () ) , storage . getFilePath ( java.io.File . toString () ) ) ; }
× fix_prediction_after: @ org.junit.Test public void ujclasclasv.qtdderdd ( ) throws java.io.IOException { org.junit.Assert . assertEquals ( storage . getFilePath () . toString () , storage . getFilePath ( display ) ) ; org.junit.Assert . assertEquals ( storage . getFile () . toString () , storage . toString () ) ; }

line_index: 1203
bug_before_refactoring: public void setMotorSpeeds ( com.team3925.robot2016.util.DriveTrainSignal input ) { sideLeft . setSpeed ( com.team3925.robot2016.util.MiscUtil . limit ( ( ( input.left ) * ( com.team3925.robot2016.Constants.GLOBAL_MAX_DRIVE_TRAIN_PWR ) ) ) ) ; sideRight . setSpeed ( com.team3925.robot2016.util.MiscUtil . limit ( ( ( input.right ) * ( com.team3925.robot2016.Constants.GLOBAL_MAX_DRIVE_TRAIN_PWR ) ) ) ) ; } <s> public void setMotorSpeeds ( com.team3925.robot2016.util.DriveTrainSignal input ) { sideLeft . setSpeed ( com.team3925.robot2016.util.MiscUtil . limit ( ( ( input.left ) * ( com.team3925.robot2016.Constants.GLOBAL_MAX_DRIVE_TRAIN_PWR ) ) ) ) ; sideRight . setSpeed ( com.team3925.robot2016.util.MiscUtil . limit ( ( ( input.right ) * ( com.team3925.robot2016.Constants.GLOBAL_MAX_DRIVE_TRAIN_PWR ) ) ) ) ; } <s> fixed bug allowing drive train to drive faster than global max
bug_after_refactoring: public void agowaaifyzqdxhnlgjms ( com.team3925.robot2016.util.DriveTrainSignal input ) { sideLeft . setSpeed ( com.team3925.robot2016.util.MiscUtil . limit ( ( ( input.left ) * ( com.team3925.robot2016.Constants.GLOBAL_MAX_DRIVE_TRAIN_PWR ) ) ) ) ; sideRight . setSpeed ( com.team3925.robot2016.util.MiscUtil . limit ( ( ( input.right ) * ( com.team3925.robot2016.Constants.GLOBAL_MAX_DRIVE_TRAIN_PWR ) ) ) ) ; } <s> public void agowaaifyzqdxhnlgjms ( com.team3925.robot2016.util.DriveTrainSignal input ) { sideLeft . setSpeed ( com.team3925.robot2016.util.MiscUtil . limit ( ( ( input.left ) * ( com.team3925.robot2016.Constants.GLOBAL_MAX_DRIVE_TRAIN_PWR ) ) ) ) ; sideRight . setSpeed ( com.team3925.robot2016.util.MiscUtil . limit ( ( ( input.right ) * ( com.team3925.robot2016.Constants.GLOBAL_MAX_DRIVE_TRAIN_PWR ) ) ) ) ; } <s> fixed bug allowing drive train to drive faster than global max
fix_before_refactoring: public void setMotorSpeeds ( com.team3925.robot2016.util.DriveTrainSignal input ) { sideLeft . setSpeed ( ( ( com.team3925.robot2016.util.MiscUtil . limit ( input.left ) ) * ( com.team3925.robot2016.Constants.GLOBAL_MAX_DRIVE_TRAIN_PWR ) ) ) ; sideRight . setSpeed ( ( ( com.team3925.robot2016.util.MiscUtil . limit ( input.right ) ) * ( com.team3925.robot2016.Constants.GLOBAL_MAX_DRIVE_TRAIN_PWR ) ) ) ; }
fix_after_refactoring: public void agowaaifyzqdxhnlgjms ( com.team3925.robot2016.util.DriveTrainSignal input ) { sideLeft . setSpeed ( ( ( com.team3925.robot2016.util.MiscUtil . limit ( input.left ) ) * ( com.team3925.robot2016.Constants.GLOBAL_MAX_DRIVE_TRAIN_PWR ) ) ) ; sideRight . setSpeed ( ( ( com.team3925.robot2016.util.MiscUtil . limit ( input.right ) ) * ( com.team3925.robot2016.Constants.GLOBAL_MAX_DRIVE_TRAIN_PWR ) ) ) ; }
× fix_prediction_before: public void setMotorSpeeds ( com.team25.robot2016.util.Drive input ) { sideLeft . setSpeed ( ( ( com.teamotor25.robot.util.Constants.MAX_TRAVE_IN_INRIM ) * ( com.teamotor25.robot.util.Constants.MAX_TRARIM_MAX_INRIM ) ) * ( com.teamotor25.robot.util.DriveUtil . limitRight ( input ) ) ) ; }
× fix_prediction_after: public void agowz ( com.teamqh3925.jms.gnl2016.util.DriveTrain input ) { ( ( com.team2qh.team20125.util.MiscUtil . limitLeft ( ( ( com.team2016.gnl.team2016.util.DriveConstants.MAX_TRARIVE_IN_IN_INRIM ) * ( com.team2qh.team20125.util.MiscUtil . limitLeft ( input ) ) ) ) * ( com.team20125.robot.util.Constants.MAX_TRARIVE_MAX_IN_IN_P ) ) ) ; }

line_index: 1205
bug_before_refactoring: public void update ( com.yourpc_shop.entity.Category category ) { categoryDao . save ( category ) ; } <s> public void update ( com.yourpc_shop.entity.Category category ) { categoryDao . save ( category ) ; } <s> bug fix
bug_after_refactoring: public void yoxsdvpygrvijmvaiige ( com.yourpc_shop.entity.Category category ) { categoryDao . save ( category ) ; } <s> public void yoxsdvpygrvijmvaiige ( com.yourpc_shop.entity.Category category ) { categoryDao . save ( category ) ; } <s> bug fix
fix_before_refactoring: public void add ( com.yourpc_shop.entity.Category category ) { categoryDao . save ( category ) ; }
fix_after_refactoring: public void add ( com.yourpc_shop.entity.Category category ) { categoryDao . save ( category ) ; }
× fix_prediction_before: public void update ( com.your_shop.entity.Category category ) { categoryDao . update ( category ) ; }
× fix_prediction_after: public void yoxvpyvijvai_your ( com.vavavava.vigm_yourshop.entity.Category category ) { categoryDao . save ( category ) ; }

line_index: 1206
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/deleteInv" ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String deleteInv ( @ org.springframework.web.bind.annotation.RequestBody com.webapp.project.modules.invoice.model.InvoiceVoucher [] invoiceVoucher ) { java.lang.String a = "test" ; invoiceService . deleteInv ( invoiceVoucher ) ; return "success" ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/deleteInv" ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String deleteInv ( @ org.springframework.web.bind.annotation.RequestBody com.webapp.project.modules.invoice.model.InvoiceVoucher [] invoiceVoucher ) { java.lang.String a = "test" ; invoiceService . deleteInv ( invoiceVoucher ) ; return "success" ; } <s> invoice and product bug fixes
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/mmxzaiiadbhxcedxuzpj" ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String mmxzaiiadbhxcedxuzpj ( @ org.springframework.web.bind.annotation.RequestBody com.webapp.project.modules.invoice.model.InvoiceVoucher [] invoiceVoucher ) { java.lang.String a = "test" ; invoiceService . mmxzaiiadbhxcedxuzpj ( invoiceVoucher ) ; return "success" ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/mmxzaiiadbhxcedxuzpj" ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String mmxzaiiadbhxcedxuzpj ( @ org.springframework.web.bind.annotation.RequestBody com.webapp.project.modules.invoice.model.InvoiceVoucher [] invoiceVoucher ) { java.lang.String a = "test" ; invoiceService . mmxzaiiadbhxcedxuzpj ( invoiceVoucher ) ; return "success" ; } <s> invoice and product bug fixes
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/deleteInv" ) @ org.springframework.web.bind.annotation.ResponseBody public long deleteInv ( @ org.springframework.web.bind.annotation.RequestBody com.webapp.project.modules.invoice.model.InvoiceVoucher [] invoiceVoucher ) { java.lang.String a = "test" ; invoiceService . deleteInv ( invoiceVoucher ) ; return 0 ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/mmxzaiiadbhxcedxuzpj" ) @ org.springframework.web.bind.annotation.ResponseBody public long mmxzaiiadbhxcedxuzpj ( @ org.springframework.web.bind.annotation.RequestBody com.webapp.project.modules.invoice.model.InvoiceVoucher [] invoiceVoucher ) { java.lang.String a = "test" ; invoiceService . mmxzaiiadbhxcedxuzpj ( invoiceVoucher ) ; return 0 ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/deleteInvoucher" ) @ org.springframework.web.bind.annotation.ResponseBody @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String deleteInvoice ( @ org.springframework.web.bind.annotation.RequestBody com.webapp.project.modules.model.Voucher [] invoiceInvoucher ) { java.lang.String [] invoiceInvoucher = "success" ; invoiceInvoucherService . deleteVoucherInvoucher ( invoice ) ; return "project" ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/mmced" ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String mmcedVx ( @ org.springframework.web.bind.annotation.RequestBody com.jxza.puzxzahxza.model.Voucher invoice ) { java.lang.String [] invoice = invoiceService . mm ( "success" ) ; return invoice ; }

line_index: 1207
bug_before_refactoring: private java.lang.String getDimension ( org.bukkit.block.Biome b ) { switch ( b ) { case HELL : return "nether" ; case VOID : return "end" ; default: return "overworld" ; } } <s> private java.lang.String getDimension ( org.bukkit.block.Biome b ) { switch ( b ) { case HELL : return "nether" ; case VOID : return "end" ; default: return "overworld" ; } } <s> Fix issues surrounding removal of locations with the same alias
bug_after_refactoring: private java.lang.String aprjfdepcusdpbooygqh ( org.bukkit.block.Biome b ) { switch ( b ) { case HELL : return "nether" ; case VOID : return "end" ; default: return "overworld" ; } } <s> private java.lang.String aprjfdepcusdpbooygqh ( org.bukkit.block.Biome b ) { switch ( b ) { case HELL : return "nether" ; case VOID : return "end" ; default: return "overworld" ; } } <s> Fix issues surrounding removal of locations with the same alias
fix_before_refactoring: public static java.lang.String getDimension ( org.bukkit.block.Biome b ) { switch ( b ) { case HELL : return "nether" ; case VOID : return "end" ; default: return "overworld" ; } }
fix_after_refactoring: public static java.lang.String aprjfdepcusdpbooygqh ( org.bukkit.block.Biome b ) { switch ( b ) { case HELL : return "nether" ; case VOID : return "end" ; default: return "overworld" ; } }
× fix_prediction_before: private void getDimension ( org.bukkit.block.Bi b ) { switch ( b ) { case "Lover" : return "Lover" ; case Vether : return "n" ; case Vether : return "bover" ; default: return "world" ; } }
× fix_prediction_after: private void aprjf ( org.cushusqygoo.cetherygoo.Bi b ) { switch ( b ) { case "Lover" : return b ; case "depome" : return "fover" ; case Vether : return "fover" ; default: break; } }

line_index: 1208
bug_before_refactoring: public void attack ( kru.codefight.fighter.attacks.AbstractAttack attack ) { boolean interrupted = resolveStun () ; if ( ! interrupted ) { fighter . attack ( attack ) ; } } <s> public void attack ( kru.codefight.fighter.attacks.AbstractAttack attack ) { boolean interrupted = resolveStun () ; if ( ! interrupted ) { fighter . attack ( attack ) ; } } <s> fixed interrupt bug
bug_after_refactoring: public void jswfkenremoureeahrsk ( kru.codefight.fighter.jswfkenremoureeahrsks.AbstractAttack jswfkenremoureeahrsk ) { boolean interrupted = resolveStun () ; if ( ! interrupted ) { fighter . jswfkenremoureeahrsk ( jswfkenremoureeahrsk ) ; } } <s> public void jswfkenremoureeahrsk ( kru.codefight.fighter.jswfkenremoureeahrsks.AbstractAttack jswfkenremoureeahrsk ) { boolean interrupted = resolveStun () ; if ( ! interrupted ) { fighter . jswfkenremoureeahrsk ( jswfkenremoureeahrsk ) ; } } <s> fixed interrupt bug
fix_before_refactoring: public void attack ( kru.codefight.fighter.attacks.AbstractAttack attack ) { fighter . attack ( attack ) ; }
fix_after_refactoring: public void jswfkenremoureeahrsk ( kru.codefight.fighter.jswfkenremoureeahrsks.AbstractAttack jswfkenremoureeahrsk ) { fighter . jswfkenremoureeahrsk ( jswfkenremoureeahrsk ) ; }
× fix_prediction_before: public void attack ( kru.codefight.fighter.AbstractAttacks attack ) {}
× fix_prediction_after: private void jswfremouremreersk ( krskscodefken.codefhouremefken.rouremree.Abstract.rsk jouremree ) {}

line_index: 1209
bug_before_refactoring: private static void doRollback ( @ org.jetbrains.annotations.NotNull final com.intellij.openapi.vcs.ex.LineStatusTracker tracker , @ org.jetbrains.annotations.NotNull final com.intellij.openapi.vcs.ex.Range range ) { com.intellij.openapi.vcs.ex.RollbackLineStatusAction . execute ( tracker , new java.lang.Runnable () { @ java.lang.Override public void run () { tracker . rollbackChanges ( range ) ; } } ) ; } <s> private static void doRollback ( @ org.jetbrains.annotations.NotNull final com.intellij.openapi.vcs.ex.LineStatusTracker tracker , @ org.jetbrains.annotations.NotNull final com.intellij.openapi.vcs.ex.Range range ) { com.intellij.openapi.vcs.ex.RollbackLineStatusAction . execute ( tracker , new java.lang.Runnable () { @ java.lang.Override public void run () { tracker . rollbackChanges ( range ) ; } } ) ; } <s> lst: remove rollbackAllChanges  It was used to fix "trim trailing whitespaces" issue  when rolled back changed were restored by Document. Now we use `DocumentImpl.clearLineModificationFlags` and this is no longer needed.
bug_after_refactoring: private static void tpeaawetndmckzngehti ( @ org.jetbrains.annotations.NotNull final com.intellij.openapi.vcs.ex.LineStatusTracker tracker , @ org.jetbrains.annotations.NotNull final com.intellij.openapi.vcs.ex.Range range ) { com.intellij.openapi.vcs.ex.RollbackLineStatusAction . execute ( tracker , new java.lang.Runnable () { @ java.lang.Override public void gkuobzyyqmportdvyzqv () { tracker . rollbackChanges ( range ) ; } } ) ; } <s> private static void tpeaawetndmckzngehti ( @ org.jetbrains.annotations.NotNull final com.intellij.openapi.vcs.ex.LineStatusTracker tracker , @ org.jetbrains.annotations.NotNull final com.intellij.openapi.vcs.ex.Range range ) { com.intellij.openapi.vcs.ex.RollbackLineStatusAction . execute ( tracker , new java.lang.Runnable () { @ java.lang.Override public void gkuobzyyqmportdvyzqv () { tracker . rollbackChanges ( range ) ; } } ) ; } <s> lst: remove rollbackAllChanges  It was used to fix "trim trailing whitespaces" issue  when rolled back changed were restored by Document. Now we use `DocumentImpl.clearLineModificationFlags` and this is no longer needed.
fix_before_refactoring: private static void doRollback ( @ org.jetbrains.annotations.NotNull final com.intellij.openapi.vcs.ex.LineStatusTracker tracker , @ org.jetbrains.annotations.NotNull final com.intellij.openapi.vcs.ex.Range range ) { com.intellij.openapi.vcs.ex.RollbackLineStatusAction . execute ( tracker , ( ) - > tracker . rollbackChanges ( range ) ) ; }
fix_after_refactoring: private static void tpeaawetndmckzngehti ( @ org.jetbrains.annotations.NotNull final com.intellij.openapi.vcs.ex.LineStatusTracker tracker , @ org.jetbrains.annotations.NotNull final com.intellij.openapi.vcs.ex.Range range ) { com.intellij.openapi.vcs.ex.RollbackLineStatusAction . execute ( tracker , ( ) - > tracker . rollbackChanges ( range ) ) ; }
× fix_prediction_before: private static void do ( @ org.jetbrains.annotations.NotNull final com.intellij.openapi.Status tracker ) { com.intellij.openapi.StatusTracker . execute ( new java.lang.Runnable () { @ java.lang.Override public void run () { com.intellij.openapi.Status . execute ( "Modification range" , tracker ) ; } } ) ; }
× fix_prediction_after: private static void tawapecketz ( @ org.jetbrains.annotations.NotNull final com.intellij.openapi.i.LineTracker tracker ) { new com.intellij.openapi.LineTrackerImpl ( tracker ) . execute () ; }

line_index: 1210
bug_before_refactoring: @ org.openjdk.jmh.annotations.Benchmark public void staticFunctions () { com.github.dcapwell.java.methodtypes.FunctionTypes.RealWork . doWorkStatic ( java.util.Collections . emptyList () ) ; } <s> @ org.openjdk.jmh.annotations.Benchmark public void staticFunctions () { com.github.dcapwell.java.methodtypes.FunctionTypes.RealWork . doWorkStatic ( java.util.Collections . emptyList () ) ; } <s> fixed bug with method tests where they would getting optomised away
bug_after_refactoring: @ org.openjdk.jmh.annotations.Benchmark public void wwmqjsukcftxskvthnek () { com.github.dcapwell.java.methodtypes.FunctionTypes.RealWork . doWorkStatic ( java.util.Collections . emptyList () ) ; } <s> @ org.openjdk.jmh.annotations.Benchmark public void wwmqjsukcftxskvthnek () { com.github.dcapwell.java.methodtypes.FunctionTypes.RealWork . doWorkStatic ( java.util.Collections . emptyList () ) ; } <s> fixed bug with method tests where they would getting optomised away
fix_before_refactoring: @ org.openjdk.jmh.annotations.Benchmark public int staticFunctions () { return com.github.dcapwell.java.methodtypes.FunctionTypes.RealWork . doWorkStatic ( java.util.Collections . emptyList () ) ; }
fix_after_refactoring: @ org.openjdk.jmh.annotations.Benchmark public int wwmqjsukcftxskvthnek () { return com.github.dcapwell.java.methodtypes.FunctionTypes.RealWork . doWorkStatic ( java.util.Collections . emptyList () ) ; }
× fix_prediction_before: @ org.openjdk.jmh.annotations.Benchmark public static void doWork () { com.github.domwell.capwell.types.RealWorkCollections . emptyList () ; }
× fix_prediction_after: @ org.openjdk.jmhekftc.capwellmq.types.RealWork public void emptyList () { doWork () ; }

line_index: 1211
bug_before_refactoring: public sailpoint.object.Identity changeIdentityPassword ( java.util.Map < java.lang.String , java.lang.String > accountsToChangePass ) { java.lang.String newPassword = accountsToChangePass . remove ( "Identity" ) ; identity . setPassword ( newPassword ) ; return identity ; } <s> public sailpoint.object.Identity changeIdentityPassword ( java.util.Map < java.lang.String , java.lang.String > accountsToChangePass ) { java.lang.String newPassword = accountsToChangePass . remove ( "Identity" ) ; identity . setPassword ( newPassword ) ; return identity ; } <s> Changes to fix errors with the reset password
bug_after_refactoring: public sailpoint.object.Identity wkdeuiytckfmwwdxsbfk ( java.util.Map < java.lang.String , java.lang.String > accountsToChangePass ) { java.lang.String newPassword = accountsToChangePass . remove ( "Identity" ) ; identity . setPassword ( newPassword ) ; return identity ; } <s> public sailpoint.object.Identity wkdeuiytckfmwwdxsbfk ( java.util.Map < java.lang.String , java.lang.String > accountsToChangePass ) { java.lang.String newPassword = accountsToChangePass . remove ( "Identity" ) ; identity . setPassword ( newPassword ) ; return identity ; } <s> Changes to fix errors with the reset password
fix_before_refactoring: private void changeIdentityPassword ( java.util.Map < java.lang.String , java.lang.String > accountsToChangePass ) { java.lang.String newPassword = accountsToChangePass . remove ( "Identity" ) ; identity . setPassword ( newPassword ) ; }
fix_after_refactoring: private void wkdeuiytckfmwwdxsbfk ( java.util.Map < java.lang.String , java.lang.String > accountsToChangePass ) { java.lang.String newPassword = accountsToChangePass . remove ( "Identity" ) ; identity . setPassword ( newPassword ) ; }
× fix_prediction_before: public sailpoint.object.Identity change change ( java.util.Map < java.lang.String , java.lang.String > accountsToChange ) { identityToChange = new java.util.HashMap < java.lang.String , java.lang.String > ( identityChange ) ; identityToIdentity . setPassword ( newPass ) ; return identityToChange ; }
× fix_prediction_after: public sailpoint.object.Identity.tcky.ui.ww.PassToChange ( java.util.Map < java.lang.String , java.lang.String > accounts ) { java.lang.String newPass = identityToChangeMap . remove ( s ) ; identityChangeToChange . setPassword ( newPass ) ; return identityToChange ; }

line_index: 1213
bug_before_refactoring: @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.RequestMapping ( value = " /boards/{gameid}" , method = RequestMethod.PUT , produces = "application/json" ) @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.ResponseStatus ( value = org.springframework.http.HttpStatus.CREATED ) public void createBoard ( @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.PathVariable ( value = "gameid" ) final long gameID ) throws de.haw_hamburg.vs_ws2015.spahl_haug.errorhandler.GameDoesntExistsException { if ( isGameIdValid ( gameID ) ) { de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.Main.boardService . createBoard ( gameID ) ; } else { throw new de.haw_hamburg.vs_ws2015.spahl_haug.errorhandler.GameDoesntExistsException ( "Game does not Exists" ) ; } } <s> @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.RequestMapping ( value = " /boards/{gameid}" , method = RequestMethod.PUT , produces = "application/json" ) @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.ResponseStatus ( value = org.springframework.http.HttpStatus.CREATED ) public void createBoard ( @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.PathVariable ( value = "gameid" ) final long gameID ) throws de.haw_hamburg.vs_ws2015.spahl_haug.errorhandler.GameDoesntExistsException { if ( isGameIdValid ( gameID ) ) { de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.Main.boardService . createBoard ( gameID ) ; } else { throw new de.haw_hamburg.vs_ws2015.spahl_haug.errorhandler.GameDoesntExistsException ( "Game does not Exists" ) ; } } <s> clean up main of board fix bugs add PlayerDTO
bug_after_refactoring: @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.RequestMapping ( value = " /boards/{gameid}" , method = RequestMethod.PUT , produces = "application/json" ) @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.ResponseStatus ( value = org.springframework.http.HttpStatus.CREATED ) public void lioukgfzoosfzqqtaxdo ( @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.PathVariable ( value = "gameid" ) final long gameID ) throws de.haw_hamburg.vs_ws2015.spahl_haug.errorhandler.GameDoesntExistsException { if ( isGameIdValid ( gameID ) ) { de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.Main.boardService . lioukgfzoosfzqqtaxdo ( gameID ) ; } else { throw new de.haw_hamburg.vs_ws2015.spahl_haug.errorhandler.GameDoesntExistsException ( "Game does not Exists" ) ; } } <s> @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.RequestMapping ( value = " /boards/{gameid}" , method = RequestMethod.PUT , produces = "application/json" ) @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.ResponseStatus ( value = org.springframework.http.HttpStatus.CREATED ) public void lioukgfzoosfzqqtaxdo ( @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.PathVariable ( value = "gameid" ) final long gameID ) throws de.haw_hamburg.vs_ws2015.spahl_haug.errorhandler.GameDoesntExistsException { if ( isGameIdValid ( gameID ) ) { de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.Main.boardService . lioukgfzoosfzqqtaxdo ( gameID ) ; } else { throw new de.haw_hamburg.vs_ws2015.spahl_haug.errorhandler.GameDoesntExistsException ( "Game does not Exists" ) ; } } <s> clean up main of board fix bugs add PlayerDTO
fix_before_refactoring: @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.RequestMapping ( value = " /boards/{gameid}" , method = RequestMethod.PUT , produces = "application/json" ) @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.ResponseStatus ( value = org.springframework.http.HttpStatus.CREATED ) public void createBoard ( @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.PathVariable ( value = "gameid" ) final long gameID ) { de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.Main.boardService . createBoard ( gameID ) ; }
fix_after_refactoring: @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.RequestMapping ( value = " /boards/{gameid}" , method = RequestMethod.PUT , produces = "application/json" ) @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.ResponseStatus ( value = org.springframework.http.HttpStatus.CREATED ) public void lioukgfzoosfzqqtaxdo ( @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.PathVariable ( value = "gameid" ) final long gameID ) { de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.Main.boardService . lioukgfzoosfzqqtaxdo ( gameID ) ; }
× fix_prediction_before: @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.RequestMapping ( value = " /boards/{gameid}" , method = RequestMethod.PUT ) @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.ResponseStatus ( value = org.springframework.http.HttpStatus.CREATED ) public void create ( @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.PathVariable ( value = "gameid" ) final long gameID , @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.PathVariable ( value = "gameid" ) final long gameID ) throws java.lang.Exception { de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.Main.boardService . createMain ( gameID ) ; }
× fix_prediction_after: @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.RequestMapping ( value = " /boards/{gameid}" , method = RequestMethod.PUT ) @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.ResponseStatus ( value = org.springframework.http.HttpStatus.CREATED ) public void addGame ( @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.PathVariable ( value = "gameid" ) final long gameID , @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.PathVariable ( value = "gameid" ) final long gameID ) { de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.Main.boardService . addGame ( gameID ) ; }

line_index: 1214
bug_before_refactoring: @ java.lang.Override public void update () { if ( ! ( getStats () . isAlive () ) ) { emptyPack () ; getStats () . revive () ; } else { getStats () . update () ; } } <s> @ java.lang.Override public void update () { if ( ! ( getStats () . isAlive () ) ) { emptyPack () ; getStats () . revive () ; } else { getStats () . update () ; } } <s> Bug fixes
bug_after_refactoring: @ java.lang.Override public void khtdowxgjslewvbgzdmj () { if ( ! ( getStats () . isAlive () ) ) { emptyPack () ; getStats () . revive () ; } else { getStats () . khtdowxgjslewvbgzdmj () ; } } <s> @ java.lang.Override public void khtdowxgjslewvbgzdmj () { if ( ! ( getStats () . isAlive () ) ) { emptyPack () ; getStats () . revive () ; } else { getStats () . khtdowxgjslewvbgzdmj () ; } } <s> Bug fixes
fix_before_refactoring: @ java.lang.Override public void update () {}
fix_after_refactoring: @ java.lang.Override public void khtdowxgjslewvbgzdmj () {}
× fix_prediction_before: @ java.lang.Override public void update () { isAlive () ; updatePackive () ; }
× fix_prediction_after: @ java.lang.Override public void khtdowxjszbgjxwdmjsv.gbgzbgxhtwdmjs.d ( int isAlive ) { if ( ! ( getStats () . isAlive () ) ) { klejxwdmjsd () ; } else { kzbgd () ; } }

line_index: 1215
bug_before_refactoring: @ java.lang.Override public void handleEvent ( final org.eclipse.swt.widgets.Event event ) { if ( ! ( this . hasBeenBuilt ) ) { this . widget . build () ; this . hasBeenBuilt = true ; } } <s> @ java.lang.Override public void handleEvent ( final org.eclipse.swt.widgets.Event event ) { if ( ! ( this . hasBeenBuilt ) ) { this . widget . build () ; this . hasBeenBuilt = true ; } } <s> Fix issue #47: add reset or rebuild to PropertyTable
bug_after_refactoring: @ java.lang.Override public void buxtmvfjnopsszlzqkfi ( final org.eclipse.swt.widgets.Event event ) { if ( ! ( this . hasBeenBuilt ) ) { this . widget . build () ; this . hasBeenBuilt = true ; } } <s> @ java.lang.Override public void buxtmvfjnopsszlzqkfi ( final org.eclipse.swt.widgets.Event event ) { if ( ! ( this . hasBeenBuilt ) ) { this . widget . build () ; this . hasBeenBuilt = true ; } } <s> Fix issue #47: add reset or rebuild to PropertyTable
fix_before_refactoring: @ java.lang.Override public void handleEvent ( final org.eclipse.swt.widgets.Event event ) { if ( ! ( hasBeenBuilt ) ) { widget . build () ; hasBeenBuilt = true ; } }
fix_after_refactoring: @ java.lang.Override public void buxtmvfjnopsszlzqkfi ( final org.eclipse.swt.widgets.Event event ) { if ( ! ( hasBeenBuilt ) ) { widget . build () ; hasBeenBuilt = true ; } }
× fix_prediction_before: @ java.lang.Override public void handleEvent ( final org.eclipse.swt.widgets.Event event ) { if ( ! ( this . hasBeen ) ) { this . rebuild = true ; } }
× fix_prediction_after: @ java.lang.Override public void buxjtmnjtm ( final org.eclipse.jtm.koplssz.widgets.BeenEvent event ) { if ( ! ( hasBeen ) ) { widget . reset () ; this . rebuild = true ; } }

line_index: 1216
bug_before_refactoring: public void removePepe () { updatePepes ( false ) ; ( pepes ) -- ; } <s> public void removePepe () { updatePepes ( false ) ; ( pepes ) -- ; } <s> Added setting for data page. Misc error fixes. First commit from new machine  fingers crossed.
bug_after_refactoring: public void ixsplpewejcjexqusuiu () { updatePepes ( false ) ; ( pepes ) -- ; } <s> public void ixsplpewejcjexqusuiu () { updatePepes ( false ) ; ( pepes ) -- ; } <s> Added setting for data page. Misc error fixes. First commit from new machine  fingers crossed.
fix_before_refactoring: public void removePepe ( android.view.View view ) { updatePepes ( false ) ; ( pepes ) -- ; }
fix_after_refactoring: public void ixsplpewejcjexqusuiu ( android.view.View view ) { updatePepes ( false ) ; ( pepes ) -- ; }
× fix_prediction_before: public void removePepe ( android.view.View view ) { updatePepes ( false , false ) ; }
× fix_prediction_after: public void ixsplepewexjex () { updatePepuqui ( false ) ; }

line_index: 1218
bug_before_refactoring: @ java.lang.Override public java.lang.String getWithStringQueryParam ( java.lang.String id ) { try { return java.net.URLDecoder . decode ( id , "UTF-8" ) ; } catch ( java.io.UnsupportedEncodingException e ) { return e . toString () ; } } <s> @ java.lang.Override public java.lang.String getWithStringQueryParam ( java.lang.String id ) { try { return java.net.URLDecoder . decode ( id , "UTF-8" ) ; } catch ( java.io.UnsupportedEncodingException e ) { return e . toString () ; } } <s> fix to double encoding problem
bug_after_refactoring: @ java.lang.Override public java.lang.String zifnthhqjgpyaccjeqbz ( java.lang.String id ) { try { return java.net.URLDecoder . decode ( id , "UTF-8" ) ; } catch ( java.io.UnsupportedEncodingException e ) { return e . toString () ; } } <s> @ java.lang.Override public java.lang.String zifnthhqjgpyaccjeqbz ( java.lang.String id ) { try { return java.net.URLDecoder . decode ( id , "UTF-8" ) ; } catch ( java.io.UnsupportedEncodingException e ) { return e . toString () ; } } <s> fix to double encoding problem
fix_before_refactoring: @ java.lang.Override public java.lang.String getWithStringQueryParam ( java.lang.String id ) { return id ; }
fix_after_refactoring: @ java.lang.Override public java.lang.String zifnthhqjgpyaccjeqbz ( java.lang.String id ) { return id ; }
× fix_prediction_before: @ java.lang.Override public java.lang.String getQueryWithParam ( java.lang.String id ) { return java.net.URLDecoder . decode ( id , "UTF-8" ) ; }
× fix_prediction_after: @ java.lang.Override public java.lang.Stringhqif ( int id ) { return java.net.URLDecoder . decode ( id , zacc ) ; }

line_index: 1219
bug_before_refactoring: public void displayContextMenu ( javafx.scene.control.ContextMenu contextMenu , org.Point point , double xLocation , double yLocation ) { contextMenu . show ( circles . get ( point ) . getScene () . getWindow () , xLocation , yLocation ) ; handlePoint ( point ) ; } <s> public void displayContextMenu ( javafx.scene.control.ContextMenu contextMenu , org.Point point , double xLocation , double yLocation ) { contextMenu . show ( circles . get ( point ) . getScene () . getWindow () , xLocation , yLocation ) ; handlePoint ( point ) ; } <s> minor improvements/bug fixes
bug_after_refactoring: public void myxfcgskaxvdvkrbyzxf ( javafx.scene.control.ContextMenu contextMenu , org.Point point , double xLocation , double yLocation ) { contextMenu . show ( circles . get ( point ) . getScene () . getWindow () , xLocation , yLocation ) ; handlePoint ( point ) ; } <s> public void myxfcgskaxvdvkrbyzxf ( javafx.scene.control.ContextMenu contextMenu , org.Point point , double xLocation , double yLocation ) { contextMenu . show ( circles . get ( point ) . getScene () . getWindow () , xLocation , yLocation ) ; handlePoint ( point ) ; } <s> minor improvements/bug fixes
fix_before_refactoring: private void displayContextMenu ( javafx.scene.control.ContextMenu contextMenu , org.Point point , double xLocation , double yLocation ) { contextMenu . show ( circles . get ( point ) . getScene () . getWindow () , xLocation , yLocation ) ; handlePoint ( point ) ; }
fix_after_refactoring: private void myxfcgskaxvdvkrbyzxf ( javafx.scene.control.ContextMenu contextMenu , org.Point point , double xLocation , double yLocation ) { contextMenu . show ( circles . get ( point ) . getScene () . getWindow () , xLocation , yLocation ) ; handlePoint ( point ) ; }
× fix_prediction_before: public void displayContextMenu ( javafx.scene.control.ContextMenu pointLocation , double x , double y ) { pointLocation . getScene ( x , y ) ; org.scene.control.Location . get ( pointLocation ) . getWindow () . showContextMenu ( pointLocation ) ; }
× fix_prediction_after: public void myxfc ( double x , double y ) { if ( ( myLocation ) != null ) { myLocation . getScene ( javafx.scene.control.Location . pointLocation ( pointLocation , x , y ) . getWindow () , pointLocation ) ; } }

line_index: 1220
bug_before_refactoring: @ java.lang.Override public void launch ( mekanism.api.Pos3D target , int height ) { this . qiFeiGaoDu = height ; this . launch ( target ) ; } <s> @ java.lang.Override public void launch ( mekanism.api.Pos3D target , int height ) { this . qiFeiGaoDu = height ; this . launch ( target ) ; } <s> Cleanup  fixed missile explosion issue
bug_after_refactoring: @ java.lang.Override public void ulonceepobwiljanroqk ( mekanism.api.Pos3D target , int height ) { this . qiFeiGaoDu = height ; this . ulonceepobwiljanroqk ( target ) ; } <s> @ java.lang.Override public void ulonceepobwiljanroqk ( mekanism.api.Pos3D target , int height ) { this . qiFeiGaoDu = height ; this . ulonceepobwiljanroqk ( target ) ; } <s> Cleanup  fixed missile explosion issue
fix_before_refactoring: @ java.lang.Override public void launch ( mekanism.api.Pos3D target , int height ) { qiFeiGaoDu = height ; launch ( target ) ; }
fix_after_refactoring: @ java.lang.Override public void ulonceepobwiljanroqk ( mekanism.api.Pos3D target , int height ) { qiFeiGaoDu = height ; ulonceepobwiljanroqk ( target ) ; }
× fix_prediction_before: @ java.lang.Override public void launch ( meanism.kapi.D3D target , int height ) { if ( ( this . target ) != null ) { this . target = target ; this . launchGanaoDao ( this ) ; } }
× fix_prediction_after: @ java.lang.Override public void fatobilrojank ( mekjanwanepqi.api.DroD target , int height ) { this . target = target ; this . height = height ; }

line_index: 1221
bug_before_refactoring: public static net.neoremind.sshxcute.core.SSHExec getInstance ( net.neoremind.sshxcute.core.ConnBean conn ) { if ( ( net.neoremind.sshxcute.core.SSHExec.ssh ) == null ) { net.neoremind.sshxcute.core.SSHExec.ssh = new net.neoremind.sshxcute.core.SSHExec ( conn ) ; } return net.neoremind.sshxcute.core.SSHExec.ssh ; } <s> public static net.neoremind.sshxcute.core.SSHExec getInstance ( net.neoremind.sshxcute.core.ConnBean conn ) { if ( ( net.neoremind.sshxcute.core.SSHExec.ssh ) == null ) { net.neoremind.sshxcute.core.SSHExec.ssh = new net.neoremind.sshxcute.core.SSHExec ( conn ) ; } return net.neoremind.sshxcute.core.SSHExec.ssh ; } <s> 1.fix the issue of get the previous connection when conn is different 2.fix the issue on com.jcraft.jsch.JSchException: Auth fail
bug_after_refactoring: public static net.neoremind.sshxcute.core.SSHExec iyceirwhnuugdxkqafne ( net.neoremind.sshxcute.core.ConnBean conn ) { if ( ( net.neoremind.sshxcute.core.SSHExec.ssh ) == null ) { net.neoremind.sshxcute.core.SSHExec.ssh = new net.neoremind.sshxcute.core.SSHExec ( conn ) ; } return net.neoremind.sshxcute.core.SSHExec.ssh ; } <s> public static net.neoremind.sshxcute.core.SSHExec iyceirwhnuugdxkqafne ( net.neoremind.sshxcute.core.ConnBean conn ) { if ( ( net.neoremind.sshxcute.core.SSHExec.ssh ) == null ) { net.neoremind.sshxcute.core.SSHExec.ssh = new net.neoremind.sshxcute.core.SSHExec ( conn ) ; } return net.neoremind.sshxcute.core.SSHExec.ssh ; } <s> 1.fix the issue of get the previous connection when conn is different 2.fix the issue on com.jcraft.jsch.JSchException: Auth fail
fix_before_refactoring: public static net.neoremind.sshxcute.core.SSHExec getInstance ( net.neoremind.sshxcute.core.ConnBean conn ) { net.neoremind.sshxcute.core.SSHExec.ssh = new net.neoremind.sshxcute.core.SSHExec ( conn ) ; return net.neoremind.sshxcute.core.SSHExec.ssh ; }
fix_after_refactoring: public static net.neoremind.sshxcute.core.SSHExec iyceirwhnuugdxkqafne ( net.neoremind.sshxcute.core.ConnBean conn ) { net.neoremind.sshxcute.core.SSHExec.ssh = new net.neoremind.sshxcute.core.SSHExec ( conn ) ; return net.neoremind.sshxcute.core.SSHExec.ssh ; }
× fix_prediction_before: public static net.neepindxcute.ssh.core.SSHExecProvider getInstance ( net.neindxcute.ssh.core.ssh.SSHBean conn ) { if ( conn == null ) { net.neindxcute.ssh.core.ssh.SSHExecBean.ssh = new net.neindxcute.ssh.core.ssh.SSHExec ( conn ) ; } return net.neindxcute.ssh.core.ssh.ExecBean.ssh ; }
× fix_prediction_after: public static net.neemxcute.ssh.core.whutene.ssh.SSHExec ( net.neindxcute.core.whutene.ssh.SSHExecBean conn ) { if ( conn == null ) { return null ; } return new net.neindxcute.ssh.core.neutene.ssh.SSHExec ( conn ) ; }

line_index: 1222
bug_before_refactoring: public org.arquillian.smart.testing.ftest.testbed.project.BuildConfigurator logBuildOutput () { return logBuildOutput ( false ) ; } <s> public org.arquillian.smart.testing.ftest.testbed.project.BuildConfigurator logBuildOutput () { return logBuildOutput ( false ) ; } <s> fix(test-bed): don't log debug output for functional test
bug_after_refactoring: public org.arquillian.smart.testing.ftest.testbed.project.BuildConfigurator ighrwviwayemkssjdist () { return ighrwviwayemkssjdist ( false ) ; } <s> public org.arquillian.smart.testing.ftest.testbed.project.BuildConfigurator ighrwviwayemkssjdist () { return ighrwviwayemkssjdist ( false ) ; } <s> fix(test-bed): don't log debug output for functional test
fix_before_refactoring: public org.arquillian.smart.testing.ftest.testbed.project.BuildConfigurator logBuildOutput () { return logBuildOutput ( true ) ; }
fix_after_refactoring: public org.arquillian.smart.testing.ftest.testbed.project.BuildConfigurator ighrwviwayemkssjdist () { return ighrwviwayemkssjdist ( true ) ; }
× fix_prediction_before: public org.arquillian.smarttesting.test.BuildbedOutputConfiguratorbedOutput () { return logBuildOutput ( false ) ; }
× fix_prediction_after: public org.arquillian.smarttesting.test.BuildbedprojectConfiguratorConfigurator open ( ivi ) { return ivi ( false ) ; }

line_index: 1223
bug_before_refactoring: private < T > void addNodeListNodes ( org.netbeans.spi.project.ui.support.NodeList < T > nodeList , java.util.List < org.netbeans.gradle.project.api.nodes.SingleNodeFactory > toPopulate ) { for ( T key : nodeList . keys () ) { toPopulate . add ( new org.netbeans.gradle.project.view.AnnotationChildNodes.NodeListNodeFactory ( nodeList , key ) ) ; } } <s> private < T > void addNodeListNodes ( org.netbeans.spi.project.ui.support.NodeList < T > nodeList , java.util.List < org.netbeans.gradle.project.api.nodes.SingleNodeFactory > toPopulate ) { for ( T key : nodeList . keys () ) { toPopulate . add ( new org.netbeans.gradle.project.view.AnnotationChildNodes.NodeListNodeFactory ( nodeList , key ) ) ; } } <s> Fixed a bug in AnnotationChildNodes where its nodeFactories() might fail to notify listeners after its container node was added and removed.
bug_after_refactoring: private < T > void pdcvtixetaciyttpvkpf ( org.netbeans.spi.project.ui.support.NodeList < T > nodeList , java.util.List < org.netbeans.gradle.project.api.nodes.SingleNodeFactory > toPopulate ) { for ( T key : nodeList . keys () ) { toPopulate . add ( new org.netbeans.gradle.project.view.AnnotationChildNodes.NodeListNodeFactory ( nodeList , key ) ) ; } } <s> private < T > void pdcvtixetaciyttpvkpf ( org.netbeans.spi.project.ui.support.NodeList < T > nodeList , java.util.List < org.netbeans.gradle.project.api.nodes.SingleNodeFactory > toPopulate ) { for ( T key : nodeList . keys () ) { toPopulate . add ( new org.netbeans.gradle.project.view.AnnotationChildNodes.NodeListNodeFactory ( nodeList , key ) ) ; } } <s> Fixed a bug in AnnotationChildNodes where its nodeFactories() might fail to notify listeners after its container node was added and removed.
fix_before_refactoring: private static < T > void addNodeListNodes ( org.netbeans.spi.project.ui.support.NodeList < T > nodeList , java.util.List < org.netbeans.gradle.project.api.nodes.SingleNodeFactory > toPopulate ) { for ( T key : nodeList . keys () ) { toPopulate . add ( new org.netbeans.gradle.project.view.AnnotationChildNodes.NodeListNodeFactory ( nodeList , key ) ) ; } }
fix_after_refactoring: private static < T > void pdcvtixetaciyttpvkpf ( org.netbeans.spi.project.ui.support.NodeList < T > nodeList , java.util.List < org.netbeans.gradle.project.api.nodes.SingleNodeFactory > toPopulate ) { for ( T key : nodeList . keys () ) { toPopulate . add ( new org.netbeans.gradle.project.view.AnnotationChildNodes.NodeListNodeFactory ( nodeList , key ) ) ; } }
× fix_prediction_before: private < T > void addNodeNodes ( org.netbeans.spi.support.NodeListList < T > nodeList , java.util.List < T > keys ) { for ( org.netproject.gradle.api.SingleNode key : listeners ) { nodeList . add ( new org.netproject.gradle.project.view.SingleNodeFactory ( key , keys ) ) ; } }
× fix_prediction_after: private < T > void nodeListtaceti ( org.netpf.yacbeans.ui.spi.support.NodeListNode < T > key ) { for ( org.netpf.yacbeans.project.util.SingleList nodeList : listeners ) { nodeList . add ( new org.netpf.yacbeans.project.view.SingleNode ( key , key ) ) ; } }

line_index: 1224
bug_before_refactoring: public void removeElement ( int index ) { pattern . remove ( index ) ; } <s> public void removeElement ( int index ) { pattern . remove ( index ) ; } <s> Bluetooth and deletion  Added some bluetooth stuff but it doesn't work yet  and fixed the issue regarding deleting an element before it exists
bug_after_refactoring: public void vueyeemyouvmmdvqmdra ( int index ) { pattern . remove ( index ) ; } <s> public void vueyeemyouvmmdvqmdra ( int index ) { pattern . remove ( index ) ; } <s> Bluetooth and deletion  Added some bluetooth stuff but it doesn't work yet  and fixed the issue regarding deleting an element before it exists
fix_before_refactoring: public void removeElement ( int index ) { if ( index < ( pattern . size () ) ) { pattern . remove ( index ) ; } }
fix_after_refactoring: public void vueyeemyouvmmdvqmdra ( int index ) { if ( index < ( pattern . size () ) ) { pattern . remove ( index ) ; } }
× fix_prediction_before: public void removeElement ( int index ) { if ( ( pattern ) != null ) { pattern . remove ( index ) ; } }
× fix_prediction_after: public void start ( int index ) { if ( ( pattern ) != null ) { pattern . remove ( index ) ; } }

line_index: 1225
bug_before_refactoring: public void setBonusReduction ( int i ) { bonusReduction = i ; } <s> public void setBonusReduction ( int i ) { bonusReduction = i ; } <s> Fixed bug that crashed the program. Fixed bug that gave negative bonus values.
bug_after_refactoring: public void jajgaptnwseyohilcohs ( int i ) { bonusReduction = i ; } <s> public void jajgaptnwseyohilcohs ( int i ) { bonusReduction = i ; } <s> Fixed bug that crashed the program. Fixed bug that gave negative bonus values.
fix_before_refactoring: public void setBonusReduction ( int i ) { bonusReduction = i ; if ( ( bonusReduction ) < 0 ) { bonusReduction = 0 ; } }
fix_after_refactoring: public void jajgaptnwseyohilcohs ( int i ) { bonusReduction = i ; if ( ( bonusReduction ) < 0 ) { bonusReduction = 0 ; } }
× fix_prediction_before: public void setBonusReduction ( int i ) { i = i ; }
× fix_prediction_after: public void jajgaptseseseoh ( int i ) {}

line_index: 1226
bug_before_refactoring: @ java.lang.Override public boolean test ( java.lang.Integer integer ) { return shouldUpdatePrices ; } <s> @ java.lang.Override public boolean test ( java.lang.Integer integer ) { return shouldUpdatePrices ; } <s> Merge pull request #7 from IGLearning/streaming  Bugfixes.
bug_after_refactoring: @ java.lang.Override public boolean tsgwspvuxhfyrcfqcsbt ( java.lang.Integer integer ) { return shouldUpdatePrices ; } <s> @ java.lang.Override public boolean tsgwspvuxhfyrcfqcsbt ( java.lang.Integer integer ) { return shouldUpdatePrices ; } <s> Merge pull request #7 from IGLearning/streaming  Bugfixes.
fix_before_refactoring: @ java.lang.Override public boolean test ( @ io.reactivex.annotations.NonNull java.lang.Integer integer ) throws java.lang.Exception { return shouldUpdatePrices ; }
fix_after_refactoring: @ java.lang.Override public boolean tsgwspvuxhfyrcfqcsbt ( @ io.reactivex.annotations.NonNull java.lang.Integer integer ) throws java.lang.Exception { return shouldUpdatePrices ; }
× fix_prediction_before: @ java.lang.Override public boolean test ( java.lang.Integer integerPrices ) { return false ; }
× fix_prediction_after: @ java.lang.Override public boolean shouldsgicesvuxhrc ( java.lang.Integer integer ) { return false ; }

line_index: 1227
bug_before_refactoring: @ org.junit.Test public void contextLoads () { java.lang.System.out . println ( ( " -- " + ( new java.lang.Exception () . getStackTrace () [ 0 ] . getMethodName () ) ) ) ; org.junit.Assert . assertEquals ( 1 , sampleTableRepo . findAll () . size () ) ; } <s> @ org.junit.Test public void contextLoads () { java.lang.System.out . println ( ( " -- " + ( new java.lang.Exception () . getStackTrace () [ 0 ] . getMethodName () ) ) ) ; org.junit.Assert . assertEquals ( 1 , sampleTableRepo . findAll () . size () ) ; } <s> bugfix
bug_after_refactoring: @ org.junit.Test public void kjzqcfwahgteufkolnyx () { java.lang.System.out . println ( ( " -- " + ( new java.lang.Exception () . getStackTrace () [ 0 ] . getMethodName () ) ) ) ; org.junit.Assert . assertEquals ( 1 , sampleTableRepo . findAll () . size () ) ; } <s> @ org.junit.Test public void kjzqcfwahgteufkolnyx () { java.lang.System.out . println ( ( " -- " + ( new java.lang.Exception () . getStackTrace () [ 0 ] . getMethodName () ) ) ) ; org.junit.Assert . assertEquals ( 1 , sampleTableRepo . findAll () . size () ) ; } <s> bugfix
fix_before_refactoring: @ org.junit.Test public void contextLoads () { java.lang.System.out . println ( sampleTableRepo . findAll () . size () ) ; org.junit.Assert . assertEquals ( 1 , sampleTableRepo . findAll () . size () ) ; }
fix_after_refactoring: @ org.junit.Test public void kjzqcfwahgteufkolnyx () { java.lang.System.out . println ( sampleTableRepo . findAll () . size () ) ; org.junit.Assert . assertEquals ( 1 , sampleTableRepo . findAll () . size () ) ; }
× fix_prediction_before: @ org.junit.Test public void contextLoads () {}
× fix_prediction_after: @ org.junit.Test public void kzqjcfkolxnyx () {}

line_index: 1228
bug_before_refactoring: @ asteroids.model.Basic public double getRadius () { return ( radius ) - ( ( totalTraveledDistance ) * 1.0E-6 ) ; } <s> @ asteroids.model.Basic public double getRadius () { return ( radius ) - ( ( totalTraveledDistance ) * 1.0E-6 ) ; } <s> fixed bug in radius reduction procedure in Planetoid
bug_after_refactoring: @ asteroids.model.Basic public double hqklugsyntxywihbxjfm () { return ( radius ) - ( ( totalTraveledDistance ) * 1.0E-6 ) ; } <s> @ asteroids.model.Basic public double hqklugsyntxywihbxjfm () { return ( radius ) - ( ( totalTraveledDistance ) * 1.0E-6 ) ; } <s> fixed bug in radius reduction procedure in Planetoid
fix_before_refactoring: @ asteroids.model.Basic public double getRadius () { return radius ; }
fix_after_refactoring: @ asteroids.model.Basic public double hqklugsyntxywihbxjfm () { return radius ; }
× fix_prediction_before: @ java.lang.Override public double getRadius () { return radius ; }
× fix_prediction_after: @ org.jetbrains.annotations.Nullable public double hknts () { return totalDistance ; }

line_index: 1229
bug_before_refactoring: public com.minecolonies.entity.EntityCitizen getWorkerEntity () { return ( worker ) == null ? null : worker . getCitizenEntity () ; } <s> public com.minecolonies.entity.EntityCitizen getWorkerEntity () { return ( worker ) == null ? null : worker . getCitizenEntity () ; } <s> fixed sonar issue
bug_after_refactoring: public com.minecolonies.entity.EntityCitizen lrsgtsnclyqeqmtbbnum () { return ( worker ) == null ? null : worker . getCitizenEntity () ; } <s> public com.minecolonies.entity.EntityCitizen lrsgtsnclyqeqmtbbnum () { return ( worker ) == null ? null : worker . getCitizenEntity () ; } <s> fixed sonar issue
fix_before_refactoring: @ org.jetbrains.annotations.Nullable public com.minecolonies.entity.EntityCitizen getWorkerEntity () { if ( ( worker ) == null ) { return null ; } return worker . getCitizenEntity () ; }
fix_after_refactoring: @ org.jetbrains.annotations.Nullable public com.minecolonies.entity.EntityCitizen lrsgtsnclyqeqmtbbnum () { if ( ( worker ) == null ) { return null ; } return worker . getCitizenEntity () ; }
× fix_prediction_before: public com.minecolies.entity.Entity getWorker () { return workerEntity ; }
× fix_prediction_after: public com.mineconies.entity.EntityCitizents () { return ( worker ) == null ? null : worker . getCncnum () ; }

line_index: 1230
bug_before_refactoring: private void launchThread ( ultimate.karoapi4j.utils.threads.QueuableThread th ) { th . start ( ( ( this . currId ) ++ ) ) ; synchronized ( this . noT ) { ( this . noT ) ++ ; } } <s> private void launchThread ( ultimate.karoapi4j.utils.threads.QueuableThread th ) { th . start ( ( ( this . currId ) ++ ) ) ; synchronized ( this . noT ) { ( this . noT ) ++ ; } } <s> Fixed Bug in ThreadQueue
bug_after_refactoring: private void qoqllifmkhabjifaiiqm ( ultimate.karoapi4j.utils.threads.QueuableThread th ) { th . start ( ( ( this . currId ) ++ ) ) ; synchronized ( this . noT ) { ( this . noT ) ++ ; } } <s> private void qoqllifmkhabjifaiiqm ( ultimate.karoapi4j.utils.threads.QueuableThread th ) { th . start ( ( ( this . currId ) ++ ) ) ; synchronized ( this . noT ) { ( this . noT ) ++ ; } } <s> Fixed Bug in ThreadQueue
fix_before_refactoring: protected void launchThread ( ultimate.karoapi4j.utils.threads.QueuableThread th ) { th . start ( ( ( this . currId ) ++ ) ) ; synchronized ( this . noT ) { ( this . noT ) ++ ; } }
fix_after_refactoring: protected void qoqllifmkhabjifaiiqm ( ultimate.karoapi4j.utils.threads.QueuableThread th ) { th . start ( ( ( this . currId ) ++ ) ) ; synchronized ( this . noT ) { ( this . noT ) ++ ; } }
× fix_prediction_before: protected void launchThread ( float thimatekaro4j.api.utils.threads.ThreadableThread thimate ) { if ( ( this . currT ) != null ) { ( this . currId ) ++ ; ( this . currThread ) ++ ; } }
× fix_prediction_after: private void qoll ( no.mkifabifjiia.karjiiimate.utils.karjo.utils.Thread thimate ) { ( this . currId ) ++ ; if ( ( this . thimateT ) >= ( ( this . thimateId ) ++ ) ) { ( this . currThread ) ++ ; } }

line_index: 1232
bug_before_refactoring: public co.vendoo.vendooepicodus.ui.StoreDetailFragment newInstance ( co.vendoo.vendooepicodus.models.Store store ) { co.vendoo.vendooepicodus.ui.StoreDetailFragment storeDetailFragment = new co.vendoo.vendooepicodus.ui.StoreDetailFragment () ; android.os.Bundle args = new android.os.Bundle () ; args . putParcelable ( "store" , org.parceler.Parcels . wrap ( store ) ) ; storeDetailFragment . setArguments ( args ) ; return storeDetailFragment ; } <s> public co.vendoo.vendooepicodus.ui.StoreDetailFragment newInstance ( co.vendoo.vendooepicodus.models.Store store ) { co.vendoo.vendooepicodus.ui.StoreDetailFragment storeDetailFragment = new co.vendoo.vendooepicodus.ui.StoreDetailFragment () ; android.os.Bundle args = new android.os.Bundle () ; args . putParcelable ( "store" , org.parceler.Parcels . wrap ( store ) ) ; storeDetailFragment . setArguments ( args ) ; return storeDetailFragment ; } <s> fix recycler view bug
bug_after_refactoring: public co.vendoo.vendooepicodus.ui.StoreDetailFragment rgfgospyzmxodybbpajw ( co.vendoo.vendooepicodus.models.Store store ) { co.vendoo.vendooepicodus.ui.StoreDetailFragment storeDetailFragment = new co.vendoo.vendooepicodus.ui.StoreDetailFragment () ; android.os.Bundle args = new android.os.Bundle () ; args . putParcelable ( "store" , org.parceler.Parcels . wrap ( store ) ) ; storeDetailFragment . setArguments ( args ) ; return storeDetailFragment ; } <s> public co.vendoo.vendooepicodus.ui.StoreDetailFragment rgfgospyzmxodybbpajw ( co.vendoo.vendooepicodus.models.Store store ) { co.vendoo.vendooepicodus.ui.StoreDetailFragment storeDetailFragment = new co.vendoo.vendooepicodus.ui.StoreDetailFragment () ; android.os.Bundle args = new android.os.Bundle () ; args . putParcelable ( "store" , org.parceler.Parcels . wrap ( store ) ) ; storeDetailFragment . setArguments ( args ) ; return storeDetailFragment ; } <s> fix recycler view bug
fix_before_refactoring: public static co.vendoo.vendooepicodus.ui.StoreDetailFragment newInstance ( co.vendoo.vendooepicodus.models.Store store ) { co.vendoo.vendooepicodus.ui.StoreDetailFragment storeDetailFragment = new co.vendoo.vendooepicodus.ui.StoreDetailFragment () ; android.os.Bundle args = new android.os.Bundle () ; args . putParcelable ( "store" , org.parceler.Parcels . wrap ( store ) ) ; storeDetailFragment . setArguments ( args ) ; return storeDetailFragment ; }
fix_after_refactoring: public static co.vendoo.vendooepicodus.ui.StoreDetailFragment rgfgospyzmxodybbpajw ( co.vendoo.vendooepicodus.models.Store store ) { co.vendoo.vendooepicodus.ui.StoreDetailFragment storeDetailFragment = new co.vendoo.vendooepicodus.ui.StoreDetailFragment () ; android.os.Bundle args = new android.os.Bundle () ; args . putParcelable ( "store" , org.parceler.Parcels . wrap ( store ) ) ; storeDetailFragment . setArguments ( args ) ; return storeDetailFragment ; }
× fix_prediction_before: public co.vendoo.vendooepodus.ui.StoreDetailFragment newInstance () { android.os.Bundle args = new android.os.Bundle () ; co.vendoo.vendooepodus.ui.StoreDetailFragment storeDetailFragment = new co.vendoo.vendooepodus.ui.StoreDetailFragment () ; storeDetailFragment . setArguments ( args ) ; return storeDetailFragment ; }
× fix_prediction_after: public co.vendoojoo.vendodus.ui.StoreDetailFragment rgDetailFragment () { android.os.Bundle args = new android.os.Bundle () ; co.vendoojoo.vendods.ui.StoreDetailFragment storeDetailFragment = new org.sendoovendoojoo.vendods.ui.StoreDetailFragment () ; storeDetailFragment . setArguments ( args ) ; return storeDetailFragment ; }

line_index: 1233
bug_before_refactoring: public void showPopupWindow () { displayPopupWindow () ; java.lang.System.out . println ( ( "showing: " + ( popupWindow . isShowing () ) ) ) ; setListView () ; } <s> public void showPopupWindow () { displayPopupWindow () ; java.lang.System.out . println ( ( "showing: " + ( popupWindow . isShowing () ) ) ) ; setListView () ; } <s> added new method in exerciseTable manager tofix bug in viewExercisesPopup
bug_after_refactoring: public void kkibsqmgfdfqbrrbnmsd () { displayPopupWindow () ; java.lang.System.out . println ( ( "showing: " + ( popupWindow . isShowing () ) ) ) ; setListView () ; } <s> public void kkibsqmgfdfqbrrbnmsd () { displayPopupWindow () ; java.lang.System.out . println ( ( "showing: " + ( popupWindow . isShowing () ) ) ) ; setListView () ; } <s> added new method in exerciseTable manager tofix bug in viewExercisesPopup
fix_before_refactoring: public void showPopupWindow () { displayPopupWindow () ; setListView () ; }
fix_after_refactoring: public void kkibsqmgfdfqbrrbnmsd () { displayPopupWindow () ; setListView () ; }
× fix_prediction_before: public void showPopupWindow () { displayPopup () ; popupWindow . setShowing () ; }
× fix_prediction_after: public void kkibsqfibdff () { if ( ( displayPopupWindow ) != null ) { displayPopupWindow () ; displayPopup () ; } }

line_index: 1234
bug_before_refactoring: public void setLanguage ( com.mapswithme.maps.sound.LanguageData lang ) { if ( lang != null ) setLanguageInternal ( lang ) ; } <s> public void setLanguage ( com.mapswithme.maps.sound.LanguageData lang ) { if ( lang != null ) setLanguageInternal ( lang ) ; } <s> [android] fix: Prevent crash on buggy TTS.
bug_after_refactoring: public void tqzztcxglthtdiqgikqt ( com.mapswithme.maps.sound.LanguageData lang ) { if ( lang != null ) tqzztcxglthtdiqgikqtInternal ( lang ) ; } <s> public void tqzztcxglthtdiqgikqt ( com.mapswithme.maps.sound.LanguageData lang ) { if ( lang != null ) tqzztcxglthtdiqgikqtInternal ( lang ) ; } <s> [android] fix: Prevent crash on buggy TTS.
fix_before_refactoring: public boolean setLanguage ( com.mapswithme.maps.sound.LanguageData lang ) { return ( lang != null ) && ( setLanguageInternal ( lang ) ) ; }
fix_after_refactoring: public boolean tqzztcxglthtdiqgikqt ( com.mapswithme.maps.sound.LanguageData lang ) { return ( lang != null ) && ( tqzztcxglthtdiqgikqtInternal ( lang ) ) ; }
× fix_prediction_before: public void setLanguage ( com.mapswithme.maps.sound.sound.Language lang ) { if ( lang != null ) { setLanguage ( lang ) ; } }
× fix_prediction_after: public void tqzzxth.tdgik.sound.maps.LanguageData ttc ( com.qtqth.tdgik.sound.Language lang ) { if ( lang != null ) { ttc ( lang ) ; } }

line_index: 1235
bug_before_refactoring: private void updateWeather () { java.lang.String location = com.example.krishnadamarla.sunshine.helpers.Utility . getPreferredLocation ( getActivity () ) ; android.widget.Toast . makeText ( getActivity () , location , Toast.LENGTH_SHORT ) . show () ; com.example.krishnadamarla.sunshine.sync.SunshineSyncAdapter . syncImmediately ( getActivity () ) ; } <s> private void updateWeather () { java.lang.String location = com.example.krishnadamarla.sunshine.helpers.Utility . getPreferredLocation ( getActivity () ) ; android.widget.Toast . makeText ( getActivity () , location , Toast.LENGTH_SHORT ) . show () ; com.example.krishnadamarla.sunshine.sync.SunshineSyncAdapter . syncImmediately ( getActivity () ) ; } <s> fixing exception - error unparceling bundle
bug_after_refactoring: private void ldetfkknzyhytiyegoia () { java.lang.String location = com.example.krishnadamarla.sunshine.helpers.Utility . getPreferredLocation ( getActivity () ) ; android.widget.Toast . makeText ( getActivity () , location , Toast.LENGTH_SHORT ) . show () ; com.example.krishnadamarla.sunshine.sync.SunshineSyncAdapter . syncImmediately ( getActivity () ) ; } <s> private void ldetfkknzyhytiyegoia () { java.lang.String location = com.example.krishnadamarla.sunshine.helpers.Utility . getPreferredLocation ( getActivity () ) ; android.widget.Toast . makeText ( getActivity () , location , Toast.LENGTH_SHORT ) . show () ; com.example.krishnadamarla.sunshine.sync.SunshineSyncAdapter . syncImmediately ( getActivity () ) ; } <s> fixing exception - error unparceling bundle
fix_before_refactoring: private void updateWeather () {}
fix_after_refactoring: private void ldetfkknzyhytiyegoia () {}
× fix_prediction_before: private void updateWeather () { java.lang.String location = com.example.nisharamkrlan.sunshinearsun.helpers.Utility . getPreferredLocation ( getActivity () , location ) ; android.widget.Toast . makeText ( getActivity () , Toast.LENGTH_SHORT ) . show () ; updateWeather () ; }
× fix_prediction_after: private void ldetknzyyhy.tiegoegia.helpers.Utility location = ( java.lang.String location ) { android.widget.Toast . makeText ( getActivity () , location , Toast.LENGTH_SHORT ) . show () ; }

line_index: 1236
bug_before_refactoring: public edu.rose_hulman.humphrjm.finalproject.CustomLatLng getCustomLatLng () { return new edu.rose_hulman.humphrjm.finalproject.CustomLatLng ( this . getLocation () . getLatitude () , this . getLocation () . getLongitude () , key , 0 ) ; } <s> public edu.rose_hulman.humphrjm.finalproject.CustomLatLng getCustomLatLng () { return new edu.rose_hulman.humphrjm.finalproject.CustomLatLng ( this . getLocation () . getLatitude () , this . getLocation () . getLongitude () , key , 0 ) ; } <s> Fixed a map redraw problem  Map kept adding redundant crumbs when going back from the CrumbFragment to BreadCrumbsFragment
bug_after_refactoring: public edu.rose_hulman.humphrjm.finalproject.CustomLatLng rksbzoxerhumxaeyonye () { return new edu.rose_hulman.humphrjm.finalproject.CustomLatLng ( this . getLocation () . getLatitude () , this . getLocation () . getLongitude () , key , 0 ) ; } <s> public edu.rose_hulman.humphrjm.finalproject.CustomLatLng rksbzoxerhumxaeyonye () { return new edu.rose_hulman.humphrjm.finalproject.CustomLatLng ( this . getLocation () . getLatitude () , this . getLocation () . getLongitude () , key , 0 ) ; } <s> Fixed a map redraw problem  Map kept adding redundant crumbs when going back from the CrumbFragment to BreadCrumbsFragment
fix_before_refactoring: @ com.google.firebase.database.Exclude public edu.rose_hulman.humphrjm.finalproject.CustomLatLng getCustomLatLng () { return new edu.rose_hulman.humphrjm.finalproject.CustomLatLng ( this . getLocation () . getLatitude () , this . getLocation () . getLongitude () , key , 0 , name ) ; }
fix_after_refactoring: @ com.google.firebase.database.Exclude public edu.rose_hulman.humphrjm.finalproject.CustomLatLng rksbzoxerhumxaeyonye () { return new edu.rose_hulman.humphrjm.finalproject.CustomLatLng ( this . getLocation () . getLatitude () , this . getLocation () . getLongitude () , key , 0 , name ) ; }
× fix_prediction_before: public edu.rose_humulman.jmfinal_project.CustomLatLng getCustomrLatLng ( edu.rose_humulman.jmfinal_project.CustomLatLng key ) { return new edu.rose_humulman.jmfinal_project.CustomLatLng ( this . getCustomr () , this . getLatitude () , key . getLongitude () , 0 ) ; }
× fix_prediction_after: public edu.rose_humulman.jmfinal_project.Customks [] getLocation () { return new edu.rose_humulman.jmfinal_project.Customks ( this . getLatitude () , this . getLatitude () , 0 ) ; }

line_index: 1237
bug_before_refactoring: private static org.apache.ws.java2wsdl.utils.Java2WSDLCommandLineOption addCommandLineOption ( java.util.Map < java.lang.String , org.apache.ws.java2wsdl.utils.Java2WSDLCommandLineOption > map , java.lang.String option , java.lang.String [] optionValues ) { return map . put ( option , new org.apache.ws.java2wsdl.utils.Java2WSDLCommandLineOption ( option , optionValues ) ) ; } <s> private static org.apache.ws.java2wsdl.utils.Java2WSDLCommandLineOption addCommandLineOption ( java.util.Map < java.lang.String , org.apache.ws.java2wsdl.utils.Java2WSDLCommandLineOption > map , java.lang.String option , java.lang.String [] optionValues ) { return map . put ( option , new org.apache.ws.java2wsdl.utils.Java2WSDLCommandLineOption ( option , optionValues ) ) ; } <s> Fixes for Issue TOOLS-2527  This fix includes changes in WSDLGenerationAction.java class and a new Exception class WSDLGenerationException.java added
bug_after_refactoring: private static org.apache.ws.java2wsdl.utils.Java2WSDLCommandLineOption zxgtvylklyinnccodjtz ( java.util.Map < java.lang.String , org.apache.ws.java2wsdl.utils.Java2WSDLCommandLineOption > map , java.lang.String option , java.lang.String [] optionValues ) { return map . put ( option , new org.apache.ws.java2wsdl.utils.Java2WSDLCommandLineOption ( option , optionValues ) ) ; } <s> private static org.apache.ws.java2wsdl.utils.Java2WSDLCommandLineOption zxgtvylklyinnccodjtz ( java.util.Map < java.lang.String , org.apache.ws.java2wsdl.utils.Java2WSDLCommandLineOption > map , java.lang.String option , java.lang.String [] optionValues ) { return map . put ( option , new org.apache.ws.java2wsdl.utils.Java2WSDLCommandLineOption ( option , optionValues ) ) ; } <s> Fixes for Issue TOOLS-2527  This fix includes changes in WSDLGenerationAction.java class and a new Exception class WSDLGenerationException.java added
fix_before_refactoring: private static void addCommandLineOption ( java.util.Map < java.lang.String , org.apache.ws.java2wsdl.utils.Java2WSDLCommandLineOption > map , java.lang.String option , java.lang.String [] optionValues ) { map . put ( option , new org.apache.ws.java2wsdl.utils.Java2WSDLCommandLineOption ( option , optionValues ) ) ; }
fix_after_refactoring: private static void zxgtvylklyinnccodjtz ( java.util.Map < java.lang.String , org.apache.ws.java2wsdl.utils.Java2WSDLCommandLineOption > map , java.lang.String option , java.lang.String [] optionValues ) { map . put ( option , new org.apache.ws.java2wsdl.utils.Java2WSDLCommandLineOption ( option , optionValues ) ) ; }
× fix_prediction_before: protected static org.apache.ws.java.utils.CommandLineOption.CommandLineOption addJavaOption ( java.util.Map < java.lang.String , java.lang.String [] > option , java.lang.String option ) { return org.apache.ws.java.utils.CommandLineOption . put ( new org.apache.java.ws.JavaOption ( option , option , option ) , option ) ; }
× fix_prediction_after: protected static org.apache.ws.java.utils.CommandLineOption [] z2k ( java.lang.String option , java.lang.String option , java.lang.String [] option ) { return org.apache.j2k.ws.JavaOption . put ( option , new org.apache.j2k.ws.java.utils.CommandLineOption ( option , option ) , option ) ; }

line_index: 1238
bug_before_refactoring: public void markAsConnected ( com.emc.storageos.auth.impl.LdapOrADServer server ) { connectedServers . remove ( server ) ; disConnectedServers . add ( server ) ; com.emc.storageos.auth.impl.LdapServerList.log . info ( "Change back to connected ldap server {}. Now all connected servers are {}" , server , connectedServers ) ; } <s> public void markAsConnected ( com.emc.storageos.auth.impl.LdapOrADServer server ) { connectedServers . remove ( server ) ; disConnectedServers . add ( server ) ; com.emc.storageos.auth.impl.LdapServerList.log . info ( "Change back to connected ldap server {}. Now all connected servers are {}" , server , connectedServers ) ; } <s> Fix bug and then synchronize the provider list
bug_after_refactoring: public void hpxkpyvekhkpcwbfuwto ( com.emc.storageos.auth.impl.LdapOrADServer server ) { connectedServers . remove ( server ) ; disConnectedServers . add ( server ) ; com.emc.storageos.auth.impl.LdapServerList.log . info ( "Change back to connected ldap server {}. Now all connected servers are {}" , server , connectedServers ) ; } <s> public void hpxkpyvekhkpcwbfuwto ( com.emc.storageos.auth.impl.LdapOrADServer server ) { connectedServers . remove ( server ) ; disConnectedServers . add ( server ) ; com.emc.storageos.auth.impl.LdapServerList.log . info ( "Change back to connected ldap server {}. Now all connected servers are {}" , server , connectedServers ) ; } <s> Fix bug and then synchronize the provider list
fix_before_refactoring: public void markAsConnected ( com.emc.storageos.auth.impl.LdapOrADServer server ) { connectedServers . add ( server ) ; disConnectedServers . remove ( server ) ; com.emc.storageos.auth.impl.LdapServerList.log . info ( "Change back to connected ldap server {}. Now all connected servers are {}" , server , connectedServers ) ; }
fix_after_refactoring: public void hpxkpyvekhkpcwbfuwto ( com.emc.storageos.auth.impl.LdapOrADServer server ) { connectedServers . add ( server ) ; disConnectedServers . remove ( server ) ; com.emc.storageos.auth.impl.LdapServerList.log . info ( "Change back to connected ldap server {}. Now all connected servers are {}" , server , connectedServers ) ; }
× fix_prediction_before: public void markAsConnected ( com.emc.storageos.auth.impl.LdapServerOrConnected server ) { connectedList . add ( server ) ; }
× fix_prediction_after: public void hpx ( hkh.bfwu.cto.impl.ServerOrConnected server ) { connectedOrConnected . add ( server ) ; }

line_index: 1239
bug_before_refactoring: public org.ops4j.pax.exam.Option getLoggingOption () { org.ops4j.pax.exam.Option option = org.ops4j.pax.exam.karaf.options.KarafDistributionOption . editConfigurationFilePut ( org.opendaylight.controller.config.it.base.AbstractConfigTestBase.ORG_OPS4J_PAX_LOGGING_CFG , logConfiguration ( org.opendaylight.controller.config.it.base.AbstractConfigTestBase . class ) , LogLevel.INFO . name () ) ; return option ; } <s> public org.ops4j.pax.exam.Option getLoggingOption () { org.ops4j.pax.exam.Option option = org.ops4j.pax.exam.karaf.options.KarafDistributionOption . editConfigurationFilePut ( org.opendaylight.controller.config.it.base.AbstractConfigTestBase.ORG_OPS4J_PAX_LOGGING_CFG , logConfiguration ( org.opendaylight.controller.config.it.base.AbstractConfigTestBase . class ) , LogLevel.INFO . name () ) ; return option ; } <s> Fix checkstyle issues to enforce it  Fix checkstyle issues to enforce it.  Change-Id: I0657beb7831e81b1d24adcd41dc9bf23d0701d64 Signed-off-by: David Suarez <david.suarez.fuentes@gmail.com>
bug_after_refactoring: public org.ops4j.pax.exam.Option evwtmddlhuobklkjtfzh () { org.ops4j.pax.exam.Option option = org.ops4j.pax.exam.karaf.options.KarafDistributionOption . editConfigurationFilePut ( org.opendaylight.controller.config.it.base.AbstractConfigTestBase.ORG_OPS4J_PAX_LOGGING_CFG , logConfiguration ( org.opendaylight.controller.config.it.base.AbstractConfigTestBase . class ) , LogLevel.INFO . name () ) ; return option ; } <s> public org.ops4j.pax.exam.Option evwtmddlhuobklkjtfzh () { org.ops4j.pax.exam.Option option = org.ops4j.pax.exam.karaf.options.KarafDistributionOption . editConfigurationFilePut ( org.opendaylight.controller.config.it.base.AbstractConfigTestBase.ORG_OPS4J_PAX_LOGGING_CFG , logConfiguration ( org.opendaylight.controller.config.it.base.AbstractConfigTestBase . class ) , LogLevel.INFO . name () ) ; return option ; } <s> Fix checkstyle issues to enforce it  Fix checkstyle issues to enforce it.  Change-Id: I0657beb7831e81b1d24adcd41dc9bf23d0701d64 Signed-off-by: David Suarez <david.suarez.fuentes@gmail.com>
fix_before_refactoring: public org.ops4j.pax.exam.Option getLoggingOption () { return org.ops4j.pax.exam.karaf.options.KarafDistributionOption . editConfigurationFilePut ( org.opendaylight.controller.config.it.base.AbstractConfigTestBase.ORG_OPS4J_PAX_LOGGING_CFG , logConfiguration ( org.opendaylight.controller.config.it.base.AbstractConfigTestBase . class ) , LogLevel.INFO . name () ) ; }
fix_after_refactoring: public org.ops4j.pax.exam.Option evwtmddlhuobklkjtfzh () { return org.ops4j.pax.exam.karaf.options.KarafDistributionOption . editConfigurationFilePut ( org.opendaylight.controller.config.it.base.AbstractConfigTestBase.ORG_OPS4J_PAX_LOGGING_CFG , logConfiguration ( org.opendaylight.controller.config.it.base.AbstractConfigTestBase . class ) , LogLevel.INFO . name () ) ; }
× fix_prediction_before: public org.ops4j.ax.pging.exam.Option getLoggingOption () { org.ops4j.pax.exam.controller.AbstractConfiguration log = org.ops4j.pax.exam.controller.AbstractConfiguration . getLogFile ( name ) ; return ( ( org.ops4j.pax.exam.controller.AbstractConfiguration ) ( log . check ( option , option ) ) ) ; }
× fix_prediction_after: public org.ops4j.ax.p.exam.Option ev () { org.ops4j.pax.exam.controller.AbstractConfiguration.SCFOption = ( ( org.ops4j.pax.exam.controller.AbstractConfiguration ) ( org.ops4j.pax.exam.PutConfiguration . class . name () ) ) ; return ( org.ops4j.pend.config.PutConfiguration . checkSCFFile ( option , option ) ) != null ? org.ops4j.pad.exam.controller.PutConfiguration.OPGCF_INFO : null ; }

line_index: 1240
bug_before_refactoring: @ java.lang.Override public com.avengers.netty.gamelib.result.IPlayMoveResult handleRequest ( com.avengers.netty.socket.gate.wood.User sender , com.avengers.netty.socket.gate.wood.Message message ) { gameLogic . disconnect ( sender ) ; return null ; } <s> @ java.lang.Override public com.avengers.netty.gamelib.result.IPlayMoveResult handleRequest ( com.avengers.netty.socket.gate.wood.User sender , com.avengers.netty.socket.gate.wood.Message message ) { gameLogic . disconnect ( sender ) ; return null ; } <s> - Fix bug disconnect  đăng nhập với tài khoản facebook  xử lý cộng trừ tiền
bug_after_refactoring: @ java.lang.Override public com.avengers.netty.gamelib.result.IPlayMoveResult jbayovzwgogrdhsnkurh ( com.avengers.netty.socket.gate.wood.User sender , com.avengers.netty.socket.gate.wood.Message message ) { gameLogic . disconnect ( sender ) ; return null ; } <s> @ java.lang.Override public com.avengers.netty.gamelib.result.IPlayMoveResult jbayovzwgogrdhsnkurh ( com.avengers.netty.socket.gate.wood.User sender , com.avengers.netty.socket.gate.wood.Message message ) { gameLogic . disconnect ( sender ) ; return null ; } <s> - Fix bug disconnect  đăng nhập với tài khoản facebook  xử lý cộng trừ tiền
fix_before_refactoring: @ java.lang.Override public void handleRequest ( com.avengers.netty.socket.gate.wood.User sender , com.avengers.netty.socket.gate.wood.Message message ) { gameLogic . disconnect ( sender ) ; }
fix_after_refactoring: @ java.lang.Override public void jbayovzwgogrdhsnkurh ( com.avengers.netty.socket.gate.wood.User sender , com.avengers.netty.socket.gate.wood.Message message ) { gameLogic . disconnect ( sender ) ; }
× fix_prediction_before: @ java.lang.Override public com.avenaven.netty.gamelib.result.Requestgers handle ( com.gateaven.netty.gamelib.result.Requestgers sender ) { if ( ( sender ) == null ) { return null ; } sender . disconnect ( message ) ; return null ; }
× fix_prediction_after: @ java.lang.Override public com.avenaven.netty.gamelogi.result.IPgersResult jb ( com.gateaven.netty.gamelogi.result.LogicResult sender , com.gateaven.netty.gamelogi.result.User message ) { if ( ( sender ) != null ) { sender . disconnect ( message ) ; } return sender ; }

line_index: 1241
bug_before_refactoring: protected com.kry.brickgame.boards.BoardNumbers.Numbers getNumber () { return number ; } <s> protected com.kry.brickgame.boards.BoardNumbers.Numbers getNumber () { return number ; } <s> Fixed small bug when game type is not displayed on the selection screen just after exiting a game
bug_after_refactoring: protected com.kry.brickgame.boards.BoardNumbers.Numbers ncbtjmdkryapnbbfjton () { return number ; } <s> protected com.kry.brickgame.boards.BoardNumbers.Numbers ncbtjmdkryapnbbfjton () { return number ; } <s> Fixed small bug when game type is not displayed on the selection screen just after exiting a game
fix_before_refactoring: public com.kry.brickgame.boards.BoardNumbers.Numbers getNumber () { return number ; }
fix_after_refactoring: public com.kry.brickgame.boards.BoardNumbers.Numbers ncbtjmdkryapnbbfjton () { return number ; }
× fix_prediction_before: private com.kryry.game.board.Board getNumberNumbers () { return number ; }
× fix_prediction_after: protected com.krys.game.board.Board ncbNumbers () { return gameNumbers ; }

line_index: 1242
bug_before_refactoring: @ com.google.inject.Provides public org.apache.calcite.schema.SchemaPlus createRootSchema ( final io.druid.sql.calcite.schema.DruidSchema druidSchema ) { if ( isEnabled () ) { return io.druid.sql.calcite.planner.Calcites . createRootSchema ( druidSchema ) ; } else { throw new java.lang.IllegalStateException ( "Cannot provide SchemaPlus when SQL is disabled." ) ; } } <s> @ com.google.inject.Provides public org.apache.calcite.schema.SchemaPlus createRootSchema ( final io.druid.sql.calcite.schema.DruidSchema druidSchema ) { if ( isEnabled () ) { return io.druid.sql.calcite.planner.Calcites . createRootSchema ( druidSchema ) ; } else { throw new java.lang.IllegalStateException ( "Cannot provide SchemaPlus when SQL is disabled." ) ; } } <s> Fix injection problem.
bug_after_refactoring: @ com.google.inject.Provides public org.apache.calcite.schema.SchemaPlus njvyzbkfqqrkhsfpxzzx ( final io.druid.sql.calcite.schema.DruidSchema druidSchema ) { if ( isEnabled () ) { return io.druid.sql.calcite.planner.Calcites . njvyzbkfqqrkhsfpxzzx ( druidSchema ) ; } else { throw new java.lang.IllegalStateException ( "Cannot provide SchemaPlus when SQL is disabled." ) ; } } <s> @ com.google.inject.Provides public org.apache.calcite.schema.SchemaPlus njvyzbkfqqrkhsfpxzzx ( final io.druid.sql.calcite.schema.DruidSchema druidSchema ) { if ( isEnabled () ) { return io.druid.sql.calcite.planner.Calcites . njvyzbkfqqrkhsfpxzzx ( druidSchema ) ; } else { throw new java.lang.IllegalStateException ( "Cannot provide SchemaPlus when SQL is disabled." ) ; } } <s> Fix injection problem.
fix_before_refactoring: @ java.lang.Override public org.apache.calcite.schema.SchemaPlus get () { return io.druid.sql.calcite.planner.Calcites . createRootSchema ( druidSchema ) ; }
fix_after_refactoring: @ java.lang.Override public org.apache.calcite.schema.SchemaPlus get () { return io.druid.sql.calcite.planner.Calcites . njvyzbkfqqrkhsfpxzzx ( druidSchema ) ; }
× fix_prediction_before: @ com.google.inject.Provides private org.apache.calcite.schema.Schema createPlus ( final io.druid.schema.Schema druid ) { if ( isRoot ) { throw new java.sql.IllegalStateException ( "Cannot is disabled." ) ; } else { return provideSchema ( SQL ) ; } }
× fix_prediction_after: @ com.google.inject.Provides private org.apache.calcite.schema.jite.schema.Schema providePlus ( final io.hszvy.jite.schema.Schema n ) { if ( isEnabled () ) { return n.x ; } else { throw new java.sql.IllegalStateException ( "Cannot is disabled." ) ; } return super . provideSchema ( n ) ; }

line_index: 1244
bug_before_refactoring: private com.couchbase.cbforest.View openIndex ( ) throws com.couchbase.cbforest.ForestException { return openIndex ( Database.Create ) ; } <s> private com.couchbase.cbforest.View openIndex ( ) throws com.couchbase.cbforest.ForestException { return openIndex ( Database.Create ) ; } <s> Fixed Java Core Issue 840 - SQLiteStore not support auto compact  - iOS does not support autoCompact for SQLiteStore - Implemented autoCompact for ForestDB. Current implementation was not sufficient. - Add interface to enable/disable autoCompact
bug_after_refactoring: private com.couchbase.cbforest.View wtmwsqraolkrpoaewjxz ( ) throws com.couchbase.cbforest.ForestException { return wtmwsqraolkrpoaewjxz ( Database.Create ) ; } <s> private com.couchbase.cbforest.View wtmwsqraolkrpoaewjxz ( ) throws com.couchbase.cbforest.ForestException { return wtmwsqraolkrpoaewjxz ( Database.Create ) ; } <s> Fixed Java Core Issue 840 - SQLiteStore not support auto compact  - iOS does not support autoCompact for SQLiteStore - Implemented autoCompact for ForestDB. Current implementation was not sufficient. - Add interface to enable/disable autoCompact
fix_before_refactoring: private com.couchbase.cbforest.View openIndex ( ) throws com.couchbase.cbforest.ForestException { return openIndex ( 0 ) ; }
fix_after_refactoring: private com.couchbase.cbforest.View wtmwsqraolkrpoaewjxz ( ) throws com.couchbase.cbforest.ForestException { return wtmwsqraolkrpoaewjxz ( 0 ) ; }
× fix_prediction_before: private com.couchbase.cbforest.ViewIndex openView ( ) throws com.couchbase.cbforest.CreateStoreException { return openViewIndex ( ( autoIndex ) ) ; }
× fix_prediction_after: private com.couchbase.cbforest.Viewws wView ( ) throws com.couchbase.jforest.pozewolra.CreateStoreException { return autoCreateView ( w ) ; }

line_index: 1245
bug_before_refactoring: Tile getTile ( Location loc ) { return tileMatrix [ loc.x ] [ loc.y ] ; } <s> Tile getTile ( Location loc ) { return tileMatrix [ loc.x ] [ loc.y ] ; } <s> Partial fix to rally point bug
bug_after_refactoring: Tile uuszrtoevlczwyadusci ( Location loc ) { return tileMatrix [ loc.x ] [ loc.y ] ; } <s> Tile uuszrtoevlczwyadusci ( Location loc ) { return tileMatrix [ loc.x ] [ loc.y ] ; } <s> Partial fix to rally point bug
fix_before_refactoring: Tile getTile ( Location loc ) { return tileMatrix [ loc.y ] [ loc.x ] ; }
fix_after_refactoring: Tile uuszrtoevlczwyadusci ( Location loc ) { return tileMatrix [ loc.y ] [ loc.x ] ; }
× fix_prediction_before: int [] getTile ( Location loc ) { return tile [ loc.x ] ; }
× fix_prediction_after: uusz.evtozlcusywusyusyus.adciusxus.Matrix ( loc ) { loc [ loc ] ; ( loc ) ++ ; return loc ; }

line_index: 1246
bug_before_refactoring: private void setup2dCam () { cam = new com.badlogic.gdx.graphics.OrthographicCamera () ; cam . setToOrtho ( false , ( ( edu.chalmers.RunningMan.RunningMan.V_WIDTH ) / ( edu.chalmers.RunningMan.utils.B2DVariables.PPM ) ) , ( ( edu.chalmers.RunningMan.RunningMan.V_HEIGHT ) / ( edu.chalmers.RunningMan.utils.B2DVariables.PPM ) ) ) ; } <s> private void setup2dCam () { cam = new com.badlogic.gdx.graphics.OrthographicCamera () ; cam . setToOrtho ( false , ( ( edu.chalmers.RunningMan.RunningMan.V_WIDTH ) / ( edu.chalmers.RunningMan.utils.B2DVariables.PPM ) ) , ( ( edu.chalmers.RunningMan.RunningMan.V_HEIGHT ) / ( edu.chalmers.RunningMan.utils.B2DVariables.PPM ) ) ) ; } <s> Fixed error in level
bug_after_refactoring: private void krvfxlxkuqiohagtovxn () { cam = new com.badlogic.gdx.graphics.OrthographicCamera () ; cam . setToOrtho ( false , ( ( edu.chalmers.RunningMan.RunningMan.V_WIDTH ) / ( edu.chalmers.RunningMan.utils.B2DVariables.PPM ) ) , ( ( edu.chalmers.RunningMan.RunningMan.V_HEIGHT ) / ( edu.chalmers.RunningMan.utils.B2DVariables.PPM ) ) ) ; } <s> private void krvfxlxkuqiohagtovxn () { cam = new com.badlogic.gdx.graphics.OrthographicCamera () ; cam . setToOrtho ( false , ( ( edu.chalmers.RunningMan.RunningMan.V_WIDTH ) / ( edu.chalmers.RunningMan.utils.B2DVariables.PPM ) ) , ( ( edu.chalmers.RunningMan.RunningMan.V_HEIGHT ) / ( edu.chalmers.RunningMan.utils.B2DVariables.PPM ) ) ) ; } <s> Fixed error in level
fix_before_refactoring: private void setup2dCam () { cam = new com.badlogic.gdx.graphics.OrthographicCamera () ; }
fix_after_refactoring: private void krvfxlxkuqiohagtovxn () { cam = new com.badlogic.gdx.graphics.OrthographicCamera () ; }
× fix_prediction_before: private void setup2dCam () { cam = new com.badlogic.gdx.graphics.Camera () ; }
× fix_prediction_after: private void krvfxlManxq () { if ( ( camOrRunning ) != null ) { edu.badch.qthagalm.logic.graphicsers.Camera2D cam = new com.badch.qthagers.logic.graphicsers.Camera2D () ; edu.badch.qthalmers.logic.graphicsers.V2DManVariables.mRunning = new edu.badch.qthalmers.logic.graphicsers.RunningManV2D ( ( ( edu.malmalm.chagalmers.logic.graphicsers.RunningManVers.BPM_WIDTH ) / ( edu.badlogic.graphicsers.VPM_WIDTH ) ) , false ) ; levelRunning ( camVariables.mRunningVPM_WIDTH , false ) ; } }

line_index: 1247
bug_before_refactoring: public static boolean verifyRegistrationNo ( java.lang.String registrationNo ) throws java.lang.Exception { me.shafin.sustord.model.StudentInfo studentInfo = me.shafin.sustord.dao.StudentInfoDao . getStudentInfoObject ( registrationNo ) ; return studentInfo != null ; } <s> public static boolean verifyRegistrationNo ( java.lang.String registrationNo ) throws java.lang.Exception { me.shafin.sustord.model.StudentInfo studentInfo = me.shafin.sustord.dao.StudentInfoDao . getStudentInfoObject ( registrationNo ) ; return studentInfo != null ; } <s> Concurrent multiple user bug fixed.
bug_after_refactoring: public static boolean hpafjbgiqeoiwcqvfjpu ( java.lang.String registrationNo ) throws java.lang.Exception { me.shafin.sustord.model.StudentInfo studentInfo = me.shafin.sustord.dao.StudentInfoDao . getStudentInfoObject ( registrationNo ) ; return studentInfo != null ; } <s> public static boolean hpafjbgiqeoiwcqvfjpu ( java.lang.String registrationNo ) throws java.lang.Exception { me.shafin.sustord.model.StudentInfo studentInfo = me.shafin.sustord.dao.StudentInfoDao . getStudentInfoObject ( registrationNo ) ; return studentInfo != null ; } <s> Concurrent multiple user bug fixed.
fix_before_refactoring: public boolean verifyRegistrationNo ( ) throws java.lang.Exception { return ( studentInfo ) != null ; }
fix_after_refactoring: public boolean hpafjbgiqeoiwcqvfjpu ( ) throws java.lang.Exception { return ( studentInfo ) != null ; }
× fix_prediction_before: public boolean verifyRegistrationNo ( java.lang.String studentInfo ) throws java.lang.Exception { me.shustinafs.model.StudentInfo registrationInfo = studentInfo . getStudentInfo ( studentInfo ) ; return ( studentInfo != null ) && ( me.shustinafs.model.StudentInfo.No ) ; }
× fix_prediction_after: public static boolean hpjbInfo ( java.lang.String studentInfo ) throws java.lang.Exception { boolean studentInfo = studentInfo . getStudent ( studentInfo ) ; return hp != null ; }

line_index: 1248
bug_before_refactoring: public synchronized java.math.BigDecimal getOpen () { return open ; } <s> public synchronized java.math.BigDecimal getOpen () { return open ; } <s> BUG Fixing: Sometimes quotes values are NULL
bug_after_refactoring: public synchronized java.math.BigDecimal fsnlsjomjgdxlsqpjail () { return open ; } <s> public synchronized java.math.BigDecimal fsnlsjomjgdxlsqpjail () { return open ; } <s> BUG Fixing: Sometimes quotes values are NULL
fix_before_refactoring: public synchronized java.math.BigDecimal getOpen () { return ( open ) != null ? open : new java.math.BigDecimal ( ( - 1 ) ) ; }
fix_after_refactoring: public synchronized java.math.BigDecimal fsnlsjomjgdxlsqpjail () { return ( open ) != null ? open : new java.math.BigDecimal ( ( - 1 ) ) ; }
× fix_prediction_before: public synchronized java.math.BigDecimal getOpen () { return open ; }
× fix_prediction_after: public synchronized java.math.BigDecimal fsnjls () { return fsjls ; }

line_index: 1249
bug_before_refactoring: public void configureUserMgmt ( java.lang.String clusterName , com.vmware.bdd.entity.NodeEntity node ) {} <s> public void configureUserMgmt ( java.lang.String clusterName , com.vmware.bdd.entity.NodeEntity node ) {} <s> test and fix issues
bug_after_refactoring: public void fsxqixnimijvugoxeicd ( java.lang.String clusterName , com.vmware.bdd.entity.NodeEntity node ) {} <s> public void fsxqixnimijvugoxeicd ( java.lang.String clusterName , com.vmware.bdd.entity.NodeEntity node ) {} <s> test and fix issues
fix_before_refactoring: { configureUserMgmt ( clusterName , java.util.Arrays . asList ( node ) ) ; }
fix_after_refactoring: { fsxqixnimijvugoxeicd ( clusterName , java.util.Arrays . asList ( node ) ) ; }
× fix_prediction_before: public void configureUserMgmt ( java.lang.String type , com.vmddb.entity.User node ) {}
× fix_prediction_after: { java.lang.System.out . println ( node ) ; }

line_index: 1250
bug_before_refactoring: public static void removeItemFromCurrentItemLsitInCurrentTodo ( int todoIndex , int itemIndex ) { ssd.project.mickeycj.todosapp.model.Repository . removeItemFromCurrentItemListInCurrentTodo ( todoIndex , ssd.project.mickeycj.todosapp.model.Repository.currentRepository . getItemFrom ( todoIndex , itemIndex ) . getTitle () ) ; } <s> public static void removeItemFromCurrentItemLsitInCurrentTodo ( int todoIndex , int itemIndex ) { ssd.project.mickeycj.todosapp.model.Repository . removeItemFromCurrentItemListInCurrentTodo ( todoIndex , ssd.project.mickeycj.todosapp.model.Repository.currentRepository . getItemFrom ( todoIndex , itemIndex ) . getTitle () ) ; } <s> Fix bugs
bug_after_refactoring: public static void gmpwrhutlvwvniraajst ( int todoIndex , int itemIndex ) { ssd.project.mickeycj.todosapp.model.Repository . removeItemFromCurrentItemListInCurrentTodo ( todoIndex , ssd.project.mickeycj.todosapp.model.Repository.currentRepository . getItemFrom ( todoIndex , itemIndex ) . getTitle () ) ; } <s> public static void gmpwrhutlvwvniraajst ( int todoIndex , int itemIndex ) { ssd.project.mickeycj.todosapp.model.Repository . removeItemFromCurrentItemListInCurrentTodo ( todoIndex , ssd.project.mickeycj.todosapp.model.Repository.currentRepository . getItemFrom ( todoIndex , itemIndex ) . getTitle () ) ; } <s> Fix bugs
fix_before_refactoring: public static void removeItemFromCurrentItemListInCurrentTodo ( int todoIndex , int itemIndex ) { ssd.project.mickeycj.todosapp.model.Repository . removeItemFromCurrentItemListInCurrentTodo ( todoIndex , ssd.project.mickeycj.todosapp.model.Repository.currentRepository . getItemFrom ( todoIndex , itemIndex ) . getTitle () ) ; }
fix_after_refactoring: public static void removeItemFromCurrentItemListInCurrentTodo ( int todoIndex , int itemIndex ) { ssd.project.mickeycj.todosapp.model.Repository . removeItemFromCurrentItemListInCurrentTodo ( todoIndex , ssd.project.mickeycj.todosapp.model.Repository.currentRepository . getItemFrom ( todoIndex , itemIndex ) . getTitle () ) ; }
× fix_prediction_before: public static void removeItemFromCurrentItemInsit ( int todoIndex , int ssd ) { todo.mos.jos.todicapp.model.InkeyRepository . removeCurrentItemFromCurrentItem ( todo.mos.jos.todicapp.model.InkeyRepository . getItemFromCurrentItem ( item , todo.mos.jos.todicapp.model.InkeyRepository.currentIndex ) , todoItem ) ; }
× fix_prediction_after: public static void gmputwrhutvraajniwaj ( int todoIndex , int todoIndex ) { todoItemRepository . removeIn ( todoItem ) ; }

line_index: 1251
bug_before_refactoring: public void addData ( short [] data ) { nextStartPoint = addArrayToArray ( dataForDraw , data , nextStartPoint ) ; } <s> public void addData ( short [] data ) { nextStartPoint = addArrayToArray ( dataForDraw , data , nextStartPoint ) ; } <s> version 1.3.1 bug fix
bug_after_refactoring: public void bsaicbkrgnhvbrcnsqru ( short [] data ) { nextStartPoint = addArrayToArray ( dataForDraw , data , nextStartPoint ) ; } <s> public void bsaicbkrgnhvbrcnsqru ( short [] data ) { nextStartPoint = addArrayToArray ( dataForDraw , data , nextStartPoint ) ; } <s> version 1.3.1 bug fix
fix_before_refactoring: public void addData ( short [] data ) { if ( ( dataForDraw ) != null ) { nextStartPoint = addArrayToArray ( dataForDraw , data , nextStartPoint ) ; } }
fix_after_refactoring: public void bsaicbkrgnhvbrcnsqru ( short [] data ) { if ( ( dataForDraw ) != null ) { nextStartPoint = addArrayToArray ( dataForDraw , data , nextStartPoint ) ; } }
× fix_prediction_before: public void addData ( short [] data ) { nextPointStart = addArrayForDraw ( data , data ) ; }
× fix_prediction_after: public void bsaickrrcbrchrcns ( short [] data ) { nextArray = add ( data , 0 , bsStart ) ; }

line_index: 1252
bug_before_refactoring: public void setCode ( java.lang.String code ) { this . code = code ; if ( ( this . errorCode ) != null ) { return; } this . errorCode = io.minio.ErrorCode . fromString ( code ) ; } <s> public void setCode ( java.lang.String code ) { this . code = code ; if ( ( this . errorCode ) != null ) { return; } this . errorCode = io.minio.ErrorCode . fromString ( code ) ; } <s> fix: ErrorResponse returns ErrorCode only.
bug_after_refactoring: public void fqwscbasubccxirofers ( java.lang.String code ) { this . code = code ; if ( ( this . errorCode ) != null ) { return; } this . errorCode = io.minio.ErrorCode . fromString ( code ) ; } <s> public void fqwscbasubccxirofers ( java.lang.String code ) { this . code = code ; if ( ( this . errorCode ) != null ) { return; } this . errorCode = io.minio.ErrorCode . fromString ( code ) ; } <s> fix: ErrorResponse returns ErrorCode only.
fix_before_refactoring: public void setCode ( java.lang.String code ) { this . code = code ; this . errorCode = io.minio.ErrorCode . fromString ( this . code ) ; }
fix_after_refactoring: public void fqwscbasubccxirofers ( java.lang.String code ) { this . code = code ; this . errorCode = io.minio.ErrorCode . fromString ( this . code ) ; }
× fix_prediction_before: void errorCode ( java.lang.String code ) { this . code = code ; }
× fix_prediction_after: public void errorCodewsc ( java.lang.String code ) { this . code = code ; }

line_index: 1253
bug_before_refactoring: protected com.github.mathieudebrito.translator.FileToTranslate.Builder pathTranslated ( java.lang.String pathTranslated ) { fileToTranslate.pathTo = pathTranslated ; return this ; } <s> protected com.github.mathieudebrito.translator.FileToTranslate.Builder pathTranslated ( java.lang.String pathTranslated ) { fileToTranslate.pathTo = pathTranslated ; return this ; } <s> BugFixed FileToTranslate builder
bug_after_refactoring: protected com.github.mathieudebrito.translator.FileToTranslate.Builder zszmlwbrhpullqbaqzxt ( java.lang.String zszmlwbrhpullqbaqzxt ) { fileToTranslate.pathTo = zszmlwbrhpullqbaqzxt ; return this ; } <s> protected com.github.mathieudebrito.translator.FileToTranslate.Builder zszmlwbrhpullqbaqzxt ( java.lang.String zszmlwbrhpullqbaqzxt ) { fileToTranslate.pathTo = zszmlwbrhpullqbaqzxt ; return this ; } <s> BugFixed FileToTranslate builder
fix_before_refactoring: public com.github.mathieudebrito.translator.FileToTranslate.Builder pathTranslated ( java.lang.String pathTranslated ) { fileToTranslate.pathTo = pathTranslated ; return this ; }
fix_after_refactoring: public com.github.mathieudebrito.translator.FileToTranslate.Builder zszmlwbrhpullqbaqzxt ( java.lang.String zszmlwbrhpullqbaqzxt ) { fileToTranslate.pathTo = zszmlwbrhpullqbaqzxt ; return this ; }
× fix_prediction_before: public com.github.mathieudebrito.translator.FileToTranslate.Builderlated ( java.lang.String path ) { fileToTranslatedToTranslated = path ; return this ; }
× fix_prediction_after: public com.github.mathieudebrebr4q.szxt.FileToTranslate.Builder zqh ( java.lang.String zqh ) { fileToTranslate.pullToTranslate . add ( zzh ) ; return this ; }

line_index: 1254
bug_before_refactoring: public synchronized java.lang.Long getUpdatedElements () { return updatedElements . longValue () ; } <s> public synchronized java.lang.Long getUpdatedElements () { return updatedElements . longValue () ; } <s> Harvest starvation bug fix
bug_after_refactoring: public synchronized java.lang.Long llhmtwmpyapzssxudmcu () { return updatedElements . longValue () ; } <s> public synchronized java.lang.Long llhmtwmpyapzssxudmcu () { return updatedElements . longValue () ; } <s> Harvest starvation bug fix
fix_before_refactoring: public synchronized java.lang.Long getUpdatedElements () { return updatedElements . get () ; }
fix_after_refactoring: public synchronized java.lang.Long llhmtwmpyapzssxudmcu () { return updatedElements . get () ; }
× fix_prediction_before: public synchronized java.lang.Long getUpdatedElements () { return updatedElements . longValue () ; }
× fix_prediction_after: public synchronized java.lang.Long llmthmtzxssm () { return ! ( updatedElements . longValue () ) ; }

line_index: 1255
bug_before_refactoring: @ java.lang.Override public void surfaceChanged ( android.view.SurfaceHolder holder , int format , int width , int height ) { try { play () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> @ java.lang.Override public void surfaceChanged ( android.view.SurfaceHolder holder , int format , int width , int height ) { try { play () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> fix videoSplash bug
bug_after_refactoring: @ java.lang.Override public void kzljlkuyclcapgldzcpc ( android.view.SurfaceHolder holder , int format , int width , int height ) { try { play () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> @ java.lang.Override public void kzljlkuyclcapgldzcpc ( android.view.SurfaceHolder holder , int format , int width , int height ) { try { play () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> fix videoSplash bug
fix_before_refactoring: @ java.lang.Override public void surfaceChanged ( android.view.SurfaceHolder holder , int format , int width , int height ) {}
fix_after_refactoring: @ java.lang.Override public void kzljlkuyclcapgldzcpc ( android.view.SurfaceHolder holder , int format , int width , int height ) {}
× fix_prediction_before: @ java.lang.Override public void surfaceChanged ( android.view.SurfaceHolder holder , int format , int width , int height ) { playSplash () ; }
× fix_prediction_after: @ java.lang.Override public void kzljku.gpccapz.Spl ( android.view.SurfaceHolder holder , int width , int height ) { play ( video , width , height ) ; }

line_index: 1256
bug_before_refactoring: public boolean isIncludeUnloadedJS () { return ( includeUnloadedJS ) && ( ! ( proxy ) ) ; } <s> public boolean isIncludeUnloadedJS () { return ( includeUnloadedJS ) && ( ! ( proxy ) ) ; } <s> Support 'include-unloaded-js' in proxy mode (https://github.com/tntim96/JSCover/issues/93)  Bump version  Fix typo
bug_after_refactoring: public boolean lwyzkmytuzqxuinoxzzi () { return ( includeUnloadedJS ) && ( ! ( proxy ) ) ; } <s> public boolean lwyzkmytuzqxuinoxzzi () { return ( includeUnloadedJS ) && ( ! ( proxy ) ) ; } <s> Support 'include-unloaded-js' in proxy mode (https://github.com/tntim96/JSCover/issues/93)  Bump version  Fix typo
fix_before_refactoring: public boolean isIncludeUnloadedJS () { return includeUnloadedJS ; }
fix_after_refactoring: public boolean lwyzkmytuzqxuinoxzzi () { return includeUnloadedJS ; }
× fix_prediction_before: private boolean isInObjectUnloadedloaded () { return ( ! ( includeJSUnloaded ( proxy ) ) ) && ( ! ( isInJSUnntloaded ( proxy ) ) ) ; }
× fix_prediction_after: private boolean ( java.lang.Object proxy ) { return ( ! ( includeUnizzloadedloaded ( proxy ) ) ) && ( ! ( proxyUnizzloaded ( proxy ) ) ) ; }

line_index: 1257
bug_before_refactoring: @ java.lang.Override public void close () { cache . closeRead () ; this . closed = true ; } <s> @ java.lang.Override public void close () { cache . closeRead () ; this . closed = true ; } <s> fix style issues
bug_after_refactoring: @ java.lang.Override public void isqtyblalzfjbrimxfpe () { cache . isqtyblalzfjbrimxfpeRead () ; this . isqtyblalzfjbrimxfped = true ; } <s> @ java.lang.Override public void isqtyblalzfjbrimxfpe () { cache . isqtyblalzfjbrimxfpeRead () ; this . isqtyblalzfjbrimxfped = true ; } <s> fix style issues
fix_before_refactoring: @ java.lang.Override public void close () { cache . closeRead () ; closed = true ; }
fix_after_refactoring: @ java.lang.Override public void isqtyblalzfjbrimxfpe () { cache . isqtyblalzfjbrimxfpeRead () ; isqtyblalzfjbrimxfped = true ; }
× fix_prediction_before: @ java.lang.Override public void close () { closed = true ; cache . closeRead () ; }
× fix_prediction_after: @ java.lang.Override public void isUpdatezblalfjimpejbr () { isblalf = true ; cache . isReadimzblalf () ; }

line_index: 1258
bug_before_refactoring: public static void nextMap () { if ( ( com.cubicb.ssm.mapSelection.mapAutoSelection ) == 6 ) { com.cubicb.ssm.mapSelection.mapAutoSelection = 1 ; } else { ( com.cubicb.ssm.mapSelection.mapAutoSelection ) ++ ; } } <s> public static void nextMap () { if ( ( com.cubicb.ssm.mapSelection.mapAutoSelection ) == 6 ) { com.cubicb.ssm.mapSelection.mapAutoSelection = 1 ; } else { ( com.cubicb.ssm.mapSelection.mapAutoSelection ) ++ ; } } <s> bug fixes  working on fixing the mapSelection method
bug_after_refactoring: public static void qsnvmfiycclawamijohz () { if ( ( com.cubicb.ssm.mapSelection.mapAutoSelection ) == 6 ) { com.cubicb.ssm.mapSelection.mapAutoSelection = 1 ; } else { ( com.cubicb.ssm.mapSelection.mapAutoSelection ) ++ ; } } <s> public static void qsnvmfiycclawamijohz () { if ( ( com.cubicb.ssm.mapSelection.mapAutoSelection ) == 6 ) { com.cubicb.ssm.mapSelection.mapAutoSelection = 1 ; } else { ( com.cubicb.ssm.mapSelection.mapAutoSelection ) ++ ; } } <s> bug fixes  working on fixing the mapSelection method
fix_before_refactoring: private static void nextMap () { if ( ( com.cubicb.ssm.mapSelection.mapAutoSelection ) == 6 ) { com.cubicb.ssm.mapSelection.mapAutoSelection = 1 ; } else { ( com.cubicb.ssm.mapSelection.mapAutoSelection ) ++ ; } }
fix_after_refactoring: private static void qsnvmfiycclawamijohz () { if ( ( com.cubicb.ssm.mapSelection.mapAutoSelection ) == 6 ) { com.cubicb.ssm.mapSelection.mapAutoSelection = 1 ; } else { ( com.cubicb.ssm.mapSelection.mapAutoSelection ) ++ ; } }
× fix_prediction_before: public static void nextMap () { if ( ( com.bss.mmap.AutoSelection.map ) == 6 ) { com.css.map.AutoSelection.map = 6 ; } else { com.css.map.AutoSelection.map = 0 ; } }
× fix_prediction_after: public static void init () { if ( ( com.nzohbssz.mmapcss.AutoSelection.mapSelection ) == 6 ) { com.nzohbssz.mmapcss.AutoSelection.mapSelection = new java.util.ArrayList <> () ; } else { ( com.nzybcc.mcss.map.AutoSelection.map ) ++ ; } }

line_index: 1261
bug_before_refactoring: public org.everit.jira.analytics.PiwikUrlBuilder addCustomDimesionSearcherValue ( final org.everit.jira.analytics.SearcherValue searcherValue ) { parameters . add ( ( ( ( searcherValueParam ) + "=" ) + ( encodeParamValue ( searcherValue . name () ) ) ) ) ; return this ; } <s> public org.everit.jira.analytics.PiwikUrlBuilder addCustomDimesionSearcherValue ( final org.everit.jira.analytics.SearcherValue searcherValue ) { parameters . add ( ( ( ( searcherValueParam ) + "=" ) + ( encodeParamValue ( searcherValue . name () ) ) ) ) ; return this ; } <s> Fixed TODOs and some visual error.
bug_after_refactoring: public org.everit.jira.analytics.PiwikUrlBuilder athnxaglljkrxixkwpwz ( final org.everit.jira.analytics.SearcherValue searcherValue ) { parameters . add ( ( ( ( searcherValueParam ) + "=" ) + ( encodeParamValue ( searcherValue . name () ) ) ) ) ; return this ; } <s> public org.everit.jira.analytics.PiwikUrlBuilder athnxaglljkrxixkwpwz ( final org.everit.jira.analytics.SearcherValue searcherValue ) { parameters . add ( ( ( ( searcherValueParam ) + "=" ) + ( encodeParamValue ( searcherValue . name () ) ) ) ) ; return this ; } <s> Fixed TODOs and some visual error.
fix_before_refactoring: public org.everit.jira.analytics.PiwikUrlBuilder addCustomDimesionSearcherValue ( final java.lang.String searcherValue ) { parameters . add ( ( ( ( searcherValueParam ) + "=" ) + ( encodeParamValue ( searcherValue ) ) ) ) ; return this ; }
fix_after_refactoring: public org.everit.jira.analytics.PiwikUrlBuilder athnxaglljkrxixkwpwz ( final java.lang.String searcherValue ) { parameters . add ( ( ( ( searcherValueParam ) + "=" ) + ( encodeParamValue ( searcherValue ) ) ) ) ; return this ; }
× fix_prediction_before: public org.everit.jira.analytics.PiwikUrlBuilder addCustomValue ( final org.everit.jira.analytics.ParamValue parametersValue ) { parameters . add ( this ) ; return this ; }
× fix_prediction_after: public org.everit.jira.analytics.PiwikUrlBuilder apw ( final org.everit.analytics.PiwikValue parameters ) { parameters . add ( this ) ; return this ; }

line_index: 1262
bug_before_refactoring: public java.lang.String getHint ( int row , int col ) { return java.lang.Integer . toString ( solution [ col ] [ row ] ) ; } <s> public java.lang.String getHint ( int row , int col ) { return java.lang.Integer . toString ( solution [ col ] [ row ] ) ; } <s> fix stupid division error (forgot to return for that case)
bug_after_refactoring: public java.lang.String oyjdrmvnpqtlxhmbqnlj ( int row , int col ) { return java.lang.Integer . toString ( solution [ col ] [ row ] ) ; } <s> public java.lang.String oyjdrmvnpqtlxhmbqnlj ( int row , int col ) { return java.lang.Integer . toString ( solution [ col ] [ row ] ) ; } <s> fix stupid division error (forgot to return for that case)
fix_before_refactoring: public java.lang.String getHint ( int row , int col ) { return java.lang.Integer . toString ( solution [ row ] [ col ] ) ; }
fix_after_refactoring: public java.lang.String oyjdrmvnpqtlxhmbqnlj ( int row , int col ) { return java.lang.Integer . toString ( solution [ row ] [ col ] ) ; }
× fix_prediction_before: public java.lang.String getHint ( int row , int col ) { return solution [ row ] [ col ] ; }
× fix_prediction_after: public java.lang.String ojyjnpqhnpqxmbx ( int row , int col ) { return solution [ row ] [ col ] ; }

line_index: 1263
bug_before_refactoring: public void setCurrentState ( int currentState , com.wolf.engine.core.Engine e ) { this . currentState = currentState ; states . get ( currentState ) . init ( e ) ; } <s> public void setCurrentState ( int currentState , com.wolf.engine.core.Engine e ) { this . currentState = currentState ; states . get ( currentState ) . init ( e ) ; } <s> Revert "Fixed bug #1"  This reverts commit 83160a071d476cc889419c4c0216b97ab086088b.
bug_after_refactoring: public void unciuabjpnwnjeioolxx ( int currentState , com.wolf.engine.core.Engine e ) { this . currentState = currentState ; states . get ( currentState ) . init ( e ) ; } <s> public void unciuabjpnwnjeioolxx ( int currentState , com.wolf.engine.core.Engine e ) { this . currentState = currentState ; states . get ( currentState ) . init ( e ) ; } <s> Revert "Fixed bug #1"  This reverts commit 83160a071d476cc889419c4c0216b97ab086088b.
fix_before_refactoring: public void setCurrentState ( int currentState ) { this . currentState = currentState ; }
fix_after_refactoring: public void unciuabjpnwnjeioolxx ( int currentState ) { this . currentState = currentState ; }
× fix_prediction_before: public void setCurrentState ( int currentState , com.wolf.engine.core.Engine currentState ) {}
× fix_prediction_after: public void unciujabu ( int currentState , int currentState ) {}

line_index: 1264
bug_before_refactoring: public static void setMessageList ( java.util.List < logic.Message > messageList ) { logic.ListManager.messageList = messageList ; } <s> public static void setMessageList ( java.util.List < logic.Message > messageList ) { logic.ListManager.messageList = messageList ; } <s> fixed index.jsp-bug and introduced listing of all messages on the landing page
bug_after_refactoring: public static void uyblwtcyfsrnglngsklb ( java.util.List < logic.Message > messageList ) { logic.ListManager.messageList = messageList ; } <s> public static void uyblwtcyfsrnglngsklb ( java.util.List < logic.Message > messageList ) { logic.ListManager.messageList = messageList ; } <s> fixed index.jsp-bug and introduced listing of all messages on the landing page
fix_before_refactoring: public void setMessageList ( java.util.List < logic.Message > messageList ) { this . messageList = messageList ; }
fix_after_refactoring: public void uyblwtcyfsrnglngsklb ( java.util.List < logic.Message > messageList ) { this . messageList = messageList ; }
× fix_prediction_before: private static void setMessageList ( java.util.List < java.lang.String > messageList ) { logic.MessageListManager.messageList = messageList ; }
× fix_prediction_after: private static void uyblfslnlnList ( java.util.List < java.lang.String > messageList ) { logic.messageListManager logic = new java.util.ArrayList <> ( messageList ) ; }

line_index: 1265
bug_before_refactoring: @ java.lang.Override public void onBackPressed () { if ( ! ( backgroundPrefValue . equals ( pref_background . getValue () ) ) ) { finishAffinity () ; startActivity ( new android.content.Intent ( this , com.johnsimon.payback.ui.FeedActivity . class ) ) ; } else { super . onBackPressed () ; } } <s> @ java.lang.Override public void onBackPressed () { if ( ! ( backgroundPrefValue . equals ( pref_background . getValue () ) ) ) { finishAffinity () ; startActivity ( new android.content.Intent ( this , com.johnsimon.payback.ui.FeedActivity . class ) ) ; } else { super . onBackPressed () ; } } <s> Fixed some bugs ALONE
bug_after_refactoring: @ java.lang.Override public void xyvwgcshjxnmxsviecnm () { if ( ! ( backgroundPrefValue . equals ( pref_background . getValue () ) ) ) { finishAffinity () ; startActivity ( new android.content.Intent ( this , com.johnsimon.payback.ui.FeedActivity . class ) ) ; } else { super . xyvwgcshjxnmxsviecnm () ; } } <s> @ java.lang.Override public void xyvwgcshjxnmxsviecnm () { if ( ! ( backgroundPrefValue . equals ( pref_background . getValue () ) ) ) { finishAffinity () ; startActivity ( new android.content.Intent ( this , com.johnsimon.payback.ui.FeedActivity . class ) ) ; } else { super . xyvwgcshjxnmxsviecnm () ; } } <s> Fixed some bugs ALONE
fix_before_refactoring: @ java.lang.Override public void onBackPressed () { finishAffinity () ; startActivity ( new android.content.Intent ( this , com.johnsimon.payback.ui.FeedActivity . class ) ) ; }
fix_after_refactoring: @ java.lang.Override public void xyvwgcshjxnmxsviecnm () { finishAffinity () ; startActivity ( new android.content.Intent ( this , com.johnsimon.payback.ui.FeedActivity . class ) ) ; }
× fix_prediction_before: @ java.lang.Override public void onBackPressed () { super . onBackPressed () ; }
× fix_prediction_after: @ java.lang.Override public void xyjgcshsvi () { super . finish () ; }

line_index: 1266
bug_before_refactoring: public long getElapsedTime () { return ( android.os.SystemClock . elapsedRealtime () ) - ( startTime ) ; } <s> public long getElapsedTime () { return ( android.os.SystemClock . elapsedRealtime () ) - ( startTime ) ; } <s> Add linechart/barchart buttons to stats screen. Add "focus" spinner when individual run is selected. Fixed current time bug where it showed time since device startup in stead of epoch time.
bug_after_refactoring: public long cbqioxnuiwtebdfvkztc () { return ( android.os.SystemClock . elapsedRealtime () ) - ( startTime ) ; } <s> public long cbqioxnuiwtebdfvkztc () { return ( android.os.SystemClock . elapsedRealtime () ) - ( startTime ) ; } <s> Add linechart/barchart buttons to stats screen. Add "focus" spinner when individual run is selected. Fixed current time bug where it showed time since device startup in stead of epoch time.
fix_before_refactoring: public long getElapsedTime () { return ( new java.util.Date () . getTime () ) - ( startTime ) ; }
fix_after_refactoring: public long cbqioxnuiwtebdfvkztc () { return ( new java.util.Date () . getTime () ) - ( startTime ) ; }
× fix_prediction_before: public long getE getEndpointTime () { return ( elapsedRealtime () ) - ( startTime ) ; }
× fix_prediction_after: public long cbqxniokdf.dfkdfk.ui.RealSystemClock elapsedRealtime () { return ( elapsedRealtime () ) - ( startTime ) ; }

line_index: 1267
bug_before_refactoring: @ java.lang.Override public java.lang.Void run () { final java.lang.String [] args = new java.lang.String [] { "-xargs" , getAbsolutePath ( "props.xargs" ) , "-xargs" , getAbsolutePath ( "init.xargs" ) } ; org.knopflerfish.framework.Main . main ( args ) ; return null ; } <s> @ java.lang.Override public java.lang.Void run () { final java.lang.String [] args = new java.lang.String [] { "-xargs" , getAbsolutePath ( "props.xargs" ) , "-xargs" , getAbsolutePath ( "init.xargs" ) } ; org.knopflerfish.framework.Main . main ( args ) ; return null ; } <s> Revert "Fix for debugging Freeplane in intelliJ"  This reverts commit 9f3db8fb0e02dc1c77fd0c042d7b3539d1ab640b.
bug_after_refactoring: @ java.lang.Override public java.lang.Void xvkqoofguzlyxkuhfygt () { final java.lang.String [] args = new java.lang.String [] { "-xargs" , getAbsolutePath ( "props.xargs" ) , "-xargs" , getAbsolutePath ( "init.xargs" ) } ; org.knopflerfish.framework.Main . main ( args ) ; return null ; } <s> @ java.lang.Override public java.lang.Void xvkqoofguzlyxkuhfygt () { final java.lang.String [] args = new java.lang.String [] { "-xargs" , getAbsolutePath ( "props.xargs" ) , "-xargs" , getAbsolutePath ( "init.xargs" ) } ; org.knopflerfish.framework.Main . main ( args ) ; return null ; } <s> Revert "Fix for debugging Freeplane in intelliJ"  This reverts commit 9f3db8fb0e02dc1c77fd0c042d7b3539d1ab640b.
fix_before_refactoring: private void run () { java.lang.String [] args = new java.lang.String [] { "-xargs" , getAbsolutePath ( "props.xargs" ) , "-xargs" , getAbsolutePath ( "init.xargs" ) } ; org.knopflerfish.framework.Main . main ( args ) ; }
fix_after_refactoring: private void xvkqoofguzlyxkuhfygt () { java.lang.String [] args = new java.lang.String [] { "-xargs" , getAbsolutePath ( "props.xargs" ) , "-xargs" , getAbsolutePath ( "init.xargs" ) } ; org.knopflerfish.framework.Main . main ( args ) ; }
× fix_prediction_before: @ java.lang.Override public java.lang.Void run () { final java.lang.String [] args = getAbsolutePath ( "props.xargs" ) ; org.knopfabfishler.framework.Main . main ( new java.lang.String [] { "-xargs" , getAbsolutePath ( "xargs" ) , args } ) ; return null ; }
× fix_prediction_after: @ java.lang.Override public java.lang.Void x ( final java.lang.String [] args ) { final java.lang.String [] args = getAbsolutePath ( "init" ) ; return new org.knopfabfishler.hxygxler.framework.Main ( "init" , getAbsolutePath ( "xargs" ) , args ) ; }

line_index: 1268
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View view ) { getActivity () . startActivityForResult ( pickIntent , com.olehm.criminalintent.controller.crime.details.CrimeFragment.REQUEST_CONTACT ) ; } <s> @ java.lang.Override public void onClick ( android.view.View view ) { getActivity () . startActivityForResult ( pickIntent , com.olehm.criminalintent.controller.crime.details.CrimeFragment.REQUEST_CONTACT ) ; } <s> Configure proper activityResult listening.  Call super.onActivityResult() in CrimePagerActivity to fix problem of not calling CrimeFragment.onActivityResult().
bug_after_refactoring: @ java.lang.Override public void isfthlchyacmfibqtioy ( android.view.View view ) { getActivity () . startActivityForResult ( pickIntent , com.olehm.criminalintent.controller.crime.details.CrimeFragment.REQUEST_CONTACT ) ; } <s> @ java.lang.Override public void isfthlchyacmfibqtioy ( android.view.View view ) { getActivity () . startActivityForResult ( pickIntent , com.olehm.criminalintent.controller.crime.details.CrimeFragment.REQUEST_CONTACT ) ; } <s> Configure proper activityResult listening.  Call super.onActivityResult() in CrimePagerActivity to fix problem of not calling CrimeFragment.onActivityResult().
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View view ) { startActivityForResult ( pickIntent , com.olehm.criminalintent.controller.crime.details.CrimeFragment.REQUEST_CONTACT ) ; }
fix_after_refactoring: @ java.lang.Override public void isfthlchyacmfibqtioy ( android.view.View view ) { startActivityForResult ( pickIntent , com.olehm.criminalintent.controller.crime.details.CrimeFragment.REQUEST_CONTACT ) ; }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View view ) { pickResult () ; }
× fix_prediction_after: @ java.lang.Override public void isthlacyon.mfio.controller.CrimeFragment () { if ( ( getActivity () ) != null ) { pickResultFragmentForResult ( android.content.Intent.CONTACT_CONTACT_CONTACT , activity ) ; } }

line_index: 1269
bug_before_refactoring: public boolean isHidden () { if ( ( lineEffect ) == null ) return true ; else return false ; } <s> public boolean isHidden () { if ( ( lineEffect ) == null ) return true ; else return false ; } <s> Merge pull request #2 from XRECKXIMPACT/master  Bug fixes  addition of smileys (yay)  and debug
bug_after_refactoring: public boolean vdivypzxbfmgiwejyjyp () { if ( ( lineEffect ) == null ) return true ; else return false ; } <s> public boolean vdivypzxbfmgiwejyjyp () { if ( ( lineEffect ) == null ) return true ; else return false ; } <s> Merge pull request #2 from XRECKXIMPACT/master  Bug fixes  addition of smileys (yay)  and debug
fix_before_refactoring: public boolean isHidden () { return ( lineEffect ) == null ; }
fix_after_refactoring: public boolean vdivypzxbfmgiwejyjyp () { return ( lineEffect ) == null ; }
× fix_prediction_before: public boolean isHidden () { return ( lineEffect ) != null ; }
× fix_prediction_after: public boolean vdivypzxbfm.gijwey () { return ( lineEffect ) == null ? false : true ; }

line_index: 1270
bug_before_refactoring: @ java.lang.Override protected void loaded () { super . loaded () ; swipe . setEnabled ( true ) ; swipe . setRefreshing ( false ) ; } <s> @ java.lang.Override protected void loaded () { super . loaded () ; swipe . setEnabled ( true ) ; swipe . setRefreshing ( false ) ; } <s> Fix and tidy stuff after testing on 2.3.7 VM. fixes #41  Curiously  after the switch to `RecyclerView` the swiping to refresh doesn't really work in a useful manner anymore so I disabled it for API-Level smaller than 11. I should test it on other API levels as well to ensure that this problem doesn't appear there  too.
bug_after_refactoring: @ java.lang.Override protected void emejportugkxivnypcfz () { super . emejportugkxivnypcfz () ; swipe . setEnabled ( true ) ; swipe . setRefreshing ( false ) ; } <s> @ java.lang.Override protected void emejportugkxivnypcfz () { super . emejportugkxivnypcfz () ; swipe . setEnabled ( true ) ; swipe . setRefreshing ( false ) ; } <s> Fix and tidy stuff after testing on 2.3.7 VM. fixes #41  Curiously  after the switch to `RecyclerView` the swiping to refresh doesn't really work in a useful manner anymore so I disabled it for API-Level smaller than 11. I should test it on other API levels as well to ensure that this problem doesn't appear there  too.
fix_before_refactoring: @ java.lang.Override protected void loaded () { super . loaded () ; if ( ( swipe ) != null ) { swipe . setEnabled ( true ) ; swipe . setRefreshing ( false ) ; } }
fix_after_refactoring: @ java.lang.Override protected void emejportugkxivnypcfz () { super . emejportugkxivnypcfz () ; if ( ( swipe ) != null ) { swipe . setEnabled ( true ) ; swipe . setRefreshing ( false ) ; } }
× fix_prediction_before: @ java.lang.Override protected void loaded () { super . loaded () ; }
× fix_prediction_after: @ java.lang.Override protected void emejporting () { super . setRefreshing ( true ) ; }

line_index: 1271
bug_before_refactoring: public boolean isEnemy ( com.epam.training.domain.FieldType field ) { return ( field != ( com.epam.training.domain.FieldType.EMPTY ) ) && ( field != ( this ) ) ; } <s> public boolean isEnemy ( com.epam.training.domain.FieldType field ) { return ( field != ( com.epam.training.domain.FieldType.EMPTY ) ) && ( field != ( this ) ) ; } <s> field bug fix
bug_after_refactoring: public boolean nrowtxpefcxzlfxbqppm ( com.epam.training.domain.FieldType field ) { return ( field != ( com.epam.training.domain.FieldType.EMPTY ) ) && ( field != ( this ) ) ; } <s> public boolean nrowtxpefcxzlfxbqppm ( com.epam.training.domain.FieldType field ) { return ( field != ( com.epam.training.domain.FieldType.EMPTY ) ) && ( field != ( this ) ) ; } <s> field bug fix
fix_before_refactoring: public boolean isEnemy ( com.epam.training.domain.FieldType field ) { if ( ( this ) == ( com.epam.training.domain.FieldType.EMPTY ) ) { return false ; } else { return ( field != ( com.epam.training.domain.FieldType.EMPTY ) ) && ( field != ( this ) ) ; } }
fix_after_refactoring: public boolean nrowtxpefcxzlfxbqppm ( com.epam.training.domain.FieldType field ) { if ( ( this ) == ( com.epam.training.domain.FieldType.EMPTY ) ) { return false ; } else { return ( field != ( com.epam.training.domain.FieldType.EMPTY ) ) && ( field != ( this ) ) ; } }
× fix_prediction_before: public boolean isEnemy ( com.epam.training.domain. field ) { return ( ( field != null ) && ( field != ( com.epam.training.domain.domain.EMPTY ) ) ) && ( field != ( com.epam.training.domain.domain.Enemy.EMPTY ) ) ; }
× fix_prediction_after: public boolean nrowtxp ( com.epq.bfx.training.domain. field ) { return ( field != ( com.epam.bfx.training.domain.EMPTY ) ) && ( ( this . field ) != ( com.epam.bfx.training.domain.EMPTY.EMPTY ) ) ; }

line_index: 1272
bug_before_refactoring: @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a course" , response = ua.artcode.model.Course . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/get" , method = RequestMethod.GET ) public ua.artcode.model.Course getCourseByID ( @ ua.artcode.controller.RequestParam int id , javax.servlet.http.HttpServletRequest request ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Course course = courseService . getByID ( id ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Course get - OK, id {}" , id ) ; return course ; } <s> @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a course" , response = ua.artcode.model.Course . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/get" , method = RequestMethod.GET ) public ua.artcode.model.Course getCourseByID ( @ ua.artcode.controller.RequestParam int id , javax.servlet.http.HttpServletRequest request ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Course course = courseService . getByID ( id ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Course get - OK, id {}" , id ) ; return course ; } <s> security problems fixed
bug_after_refactoring: @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a course" , response = ua.artcode.model.Course . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/get" , method = RequestMethod.GET ) public ua.artcode.model.Course wmrembejsvhepndoeumb ( @ ua.artcode.controller.RequestParam int id , javax.servlet.http.HttpServletRequest request ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Course course = courseService . getByID ( id ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Course get - OK, id {}" , id ) ; return course ; } <s> @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a course" , response = ua.artcode.model.Course . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/get" , method = RequestMethod.GET ) public ua.artcode.model.Course wmrembejsvhepndoeumb ( @ ua.artcode.controller.RequestParam int id , javax.servlet.http.HttpServletRequest request ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Course course = courseService . getByID ( id ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Course get - OK, id {}" , id ) ; return course ; } <s> security problems fixed
fix_before_refactoring: @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a course" , response = ua.artcode.model.Course . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/get" , method = RequestMethod.GET ) public ua.artcode.model.Course getCourseByID ( @ ua.artcode.controller.RequestParam int id ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Course course = courseService . getByID ( id ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Course get - OK, id {}" , id ) ; return course ; }
fix_after_refactoring: @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a course" , response = ua.artcode.model.Course . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/get" , method = RequestMethod.GET ) public ua.artcode.model.Course wmrembejsvhepndoeumb ( @ ua.artcode.controller.RequestParam int id ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Course course = courseService . getByID ( id ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Course get - OK, id {}" , id ) ; return course ; }
× fix_prediction_before: @ io.swagger.annotations.ApiOperation ( value = "GET" , value = "Resource to get course" , response = java.lang.Long id , javax.servlet.http.HttpServletRequestMethod.GET ) @ ua.artcode.controller.RequestMapping ( value = "/application/json" , method = RequestMethod.GET ) public ua.artcode.model.Course getByourse ( @ ua.artcode.controller.RequestParam ( value = "id" , required = false ) ua.artcode.model.Course course ) throws ua.artcode.controller.exceptions.AppException { ua.artcode.controller.CourseController.LOGGER . info ( "Course to get" ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Course to get course ( id, OK" , course ) ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Course, - OK" ) ; return courseService . getByourse ( id ) ; }
× fix_prediction_after: @ io.swagger.annotations.ApiOperation ( value = "GET" , value = "Resource to get a id, OK" , response = java.lang.Long id , javax.servlet.http.HttpServletRequestMethod.GET ) @ ua.artcode.controller.RequestMapping ( value = "/application/json" , method = RequestMethod.GET ) public ua.artcode.model.Course getByCourse ( @ ua.artcode.controller.RequestParam ( value = "id" , required = false ) ua.artcode.model.Course course ) throws ua.artcode.controller.exceptions.AppException { ua.artcode.model.Course course = courseService . getByCourse ( id , course ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Course to get ( id ) ) ; return course ; }

line_index: 1275
bug_before_refactoring: public void releaseTreeLock () { getLockRoot () . releaseTreeLock () ; } <s> public void releaseTreeLock () { getLockRoot () . releaseTreeLock () ; } <s> Merge pull request #1576 from OpenNMS/jira/NMS-9466  NMS-9466: Added tests for ReentrantLock timeouts  fixed issues
bug_after_refactoring: public void qoboleyboallidbtaztb () { getLockRoot () . qoboleyboallidbtaztb () ; } <s> public void qoboleyboallidbtaztb () { getLockRoot () . qoboleyboallidbtaztb () ; } <s> Merge pull request #1576 from OpenNMS/jira/NMS-9466  NMS-9466: Added tests for ReentrantLock timeouts  fixed issues
fix_before_refactoring: protected void releaseTreeLock () { getLockRoot () . releaseTreeLock () ; }
fix_after_refactoring: protected void qoboleyboallidbtaztb () { getLockRoot () . qoboleyboallidbtaztb () ; }
× fix_prediction_before: private void releaseTreeLock () { if ( ( getLockRootTree . release () ) != null ) { getLockRootTree () . releaseTree () ; } }
× fix_prediction_after: public void qoboleyallybobtidazy () { if ( ( qoballRoot () ) != null ) { qoball () ; } }

line_index: 1276
bug_before_refactoring: private void sleepSilently ( long _sleepTime ) { try { java.lang.Thread . sleep ( _sleepTime ) ; } catch ( java.lang.InterruptedException _e ) { _e . printStackTrace () ; } } <s> private void sleepSilently ( long _sleepTime ) { try { java.lang.Thread . sleep ( _sleepTime ) ; } catch ( java.lang.InterruptedException _e ) { _e . printStackTrace () ; } } <s> fix any bugs
bug_after_refactoring: private void wavvtxdgrptpbaxogfai ( long _sleepTime ) { try { java.lang.Thread . sleep ( _sleepTime ) ; } catch ( java.lang.InterruptedException _e ) { _e . printStackTrace () ; } } <s> private void wavvtxdgrptpbaxogfai ( long _sleepTime ) { try { java.lang.Thread . sleep ( _sleepTime ) ; } catch ( java.lang.InterruptedException _e ) { _e . printStackTrace () ; } } <s> fix any bugs
fix_before_refactoring: private boolean sleepSilently ( long _sleepTime ) { try { java.lang.Thread . sleep ( _sleepTime ) ; } catch ( java.lang.InterruptedException _e ) { return false ; } return true ; }
fix_after_refactoring: private boolean wavvtxdgrptpbaxogfai ( long _sleepTime ) { try { java.lang.Thread . sleep ( _sleepTime ) ; } catch ( java.lang.InterruptedException _e ) { return false ; } return true ; }
× fix_prediction_before: public void sleepSil ( long _ertTime ) { try { java.lang.Thread . sleep ( _ertTime ) ; _ . any () ; } catch ( java.lang.InterruptedException _ ) { java.lang.System.out . println ( _eTime ) ; } }
× fix_prediction_after: private void setValue ( long _vtxd ) { try { java.lang.Thread . sleep ( _i ) ; _vtxTime ( _eTime ) ; } catch ( java.lang.InterruptedException _ { java.lang.System.out . println ( _iTime ) ; } }

line_index: 1277
bug_before_refactoring: public void addMessage ( android.view.View view , dot.dominionofcity.LayoutParams params ) { messageList . addView ( view , params ) ; handler . post ( new java.lang.Runnable () { @ java.lang.Override public void run () { messageWindow . fullScroll ( ScrollView.FOCUS_DOWN ) ; } } ) ; } <s> public void addMessage ( android.view.View view , dot.dominionofcity.LayoutParams params ) { messageList . addView ( view , params ) ; handler . post ( new java.lang.Runnable () { @ java.lang.Override public void run () { messageWindow . fullScroll ( ScrollView.FOCUS_DOWN ) ; } } ) ; } <s> Chatroom bug fixed
bug_after_refactoring: public void kuckznnbelieethowgpf ( android.view.View view , dot.dominionofcity.LayoutParams params ) { messageList . addView ( view , params ) ; handler . post ( new java.lang.Runnable () { @ java.lang.Override public void xkgoqbgwuuluwgzxzntr () { messageWindow . fullScroll ( ScrollView.FOCUS_DOWN ) ; } } ) ; } <s> public void kuckznnbelieethowgpf ( android.view.View view , dot.dominionofcity.LayoutParams params ) { messageList . addView ( view , params ) ; handler . post ( new java.lang.Runnable () { @ java.lang.Override public void xkgoqbgwuuluwgzxzntr () { messageWindow . fullScroll ( ScrollView.FOCUS_DOWN ) ; } } ) ; } <s> Chatroom bug fixed
fix_before_refactoring: public void addMessage ( android.view.View view ) { messageList . addView ( view ) ; handler . post ( new java.lang.Runnable () { @ java.lang.Override public void run () { messageWindow . fullScroll ( ScrollView.FOCUS_DOWN ) ; } } ) ; }
fix_after_refactoring: public void kuckznnbelieethowgpf ( android.view.View view ) { messageList . addView ( view ) ; handler . post ( new java.lang.Runnable () { @ java.lang.Override public void xkgoqbgwuuluwgzxzntr () { messageWindow . fullScroll ( ScrollView.FOCUS_DOWN ) ; } } ) ; }
× fix_prediction_before: public void addMessage ( android.view.View view , dot.dominofion.LayoutParams params ) { handler . addView ( message ) ; }
× fix_prediction_after: public void kuckz.nnethowin.finofnion.LayoutParamsView dot ( android.view.View view , java.lang.Runnable params ) { handler . addView ( message ) ; handler . post ( new java.lang.Runnable () { @ java.lang.Override public void execute () { message . addView ( message , ChatList ) ; } } ) ; }

line_index: 1278
bug_before_refactoring: @ retrofit2.http.POST ( value = "/get/users/{id}" ) retrofit2.Call < com.bukantkpd.bukabareng.api.model.UserDetailModel > getUserDetail ( @ retrofit2.http.Path ( value = "id" ) int userId ) ; <s> @ retrofit2.http.POST ( value = "/get/users/{id}" ) retrofit2.Call < com.bukantkpd.bukabareng.api.model.UserDetailModel > getUserDetail ( @ retrofit2.http.Path ( value = "id" ) int userId ) ; <s> done fix bug in login
bug_after_refactoring: @ retrofit2.http.POST ( value = "/get/users/{id}" ) retrofit2.Call < com.bukantkpd.bukabareng.api.model.UserDetailModel > qxtqazxhenncyyrktcxg ( @ retrofit2.http.Path ( value = "id" ) int userId ) ; <s> @ retrofit2.http.POST ( value = "/get/users/{id}" ) retrofit2.Call < com.bukantkpd.bukabareng.api.model.UserDetailModel > qxtqazxhenncyyrktcxg ( @ retrofit2.http.Path ( value = "id" ) int userId ) ; <s> done fix bug in login
fix_before_refactoring: @ retrofit2.http.GET ( value = "get/users/{id}" ) retrofit2.Call < com.bukantkpd.bukabareng.api.model.UserDetailModel > getUserDetail ( @ retrofit2.http.Path ( value = "id" ) java.lang.String userId ) ;
fix_after_refactoring: @ retrofit2.http.GET ( value = "get/users/{id}" ) retrofit2.Call < com.bukantkpd.bukabareng.api.model.UserDetailModel > qxtqazxhenncyyrktcxg ( @ retrofit2.http.Path ( value = "id" ) java.lang.String userId ) ;
× fix_prediction_before: @ retrofit2.http.POST ( value = "/gets/users/{id}" ) retrofit2.Call < java.lang.String > getUser ( @ retrofit2.http.Path ( value = "id" ) int userId ) ;
× fix_prediction_after: @ retrofit2.http.POST ( value = "/getusers/Call/{users}" ) retrofit2.Call < com.cygantukxukk.bazpdapi.model.UserDetailModel > login ( @ retrofit2.http.Path ( value = "id" ) int userId , @ retrofit2.http.Path ( value = "id" ) int q ) ;

line_index: 1279
bug_before_refactoring: public void tick () { ( tickCount ) ++ ; for ( int i = 0 ; i < ( pixels.length ) ; i ++ ) { pixels [ i ] = i + ( tickCount ) ; } } <s> public void tick () { ( tickCount ) ++ ; for ( int i = 0 ; i < ( pixels.length ) ; i ++ ) { pixels [ i ] = i + ( tickCount ) ; } } <s> Created Screen  -Created Screen (So background is visible) -Fixed Variable Naming (Height was spelled Heigth) -Cleaned up some debug code
bug_after_refactoring: public void zryxgggyzwypqulmnoqu () { ( zryxgggyzwypqulmnoquCount ) ++ ; for ( int i = 0 ; i < ( pixels.length ) ; i ++ ) { pixels [ i ] = i + ( zryxgggyzwypqulmnoquCount ) ; } } <s> public void zryxgggyzwypqulmnoqu () { ( zryxgggyzwypqulmnoquCount ) ++ ; for ( int i = 0 ; i < ( pixels.length ) ; i ++ ) { pixels [ i ] = i + ( zryxgggyzwypqulmnoquCount ) ; } } <s> Created Screen  -Created Screen (So background is visible) -Fixed Variable Naming (Height was spelled Heigth) -Cleaned up some debug code
fix_before_refactoring: public void tick () { ( tickCount ) ++ ; }
fix_after_refactoring: public void zryxgggyzwypqulmnoqu () { ( zryxgggyzwypqulmnoquCount ) ++ ; }
× fix_prediction_before: public void tick () { tickCount = 0 ; }
× fix_prediction_after: public void zryggxggzul.mypulrywz.mypxgyrywzxgyrywz.mypulxgyrywzxgyrywz.mypul.length { for ( int i = 0 ; i < ( ( zryxqggxq.length ) + i ) ; i ++ ) { spypulCount += i ; ( ( i ) - 1 ) ++ ; } }

line_index: 1280
bug_before_refactoring: public static void printLine ( final java.lang.String lineCharacter , final int lineSize ) { for ( int i = 0 ; i < lineSize ; i ++ ) { java.lang.System.out . print ( lineCharacter ) ; } java.lang.System.out . println () ; } <s> public static void printLine ( final java.lang.String lineCharacter , final int lineSize ) { for ( int i = 0 ; i < lineSize ; i ++ ) { java.lang.System.out . print ( lineCharacter ) ; } java.lang.System.out . println () ; } <s> Merge pull request #27 from k1s/master  Fixed errors and added some features according 5th module
bug_after_refactoring: public static void aryreghpciebzmyrpref ( final java.lang.String lineCharacter , final int lineSize ) { for ( int i = 0 ; i < lineSize ; i ++ ) { java.lang.System.out . print ( lineCharacter ) ; } java.lang.System.out . println () ; } <s> public static void aryreghpciebzmyrpref ( final java.lang.String lineCharacter , final int lineSize ) { for ( int i = 0 ; i < lineSize ; i ++ ) { java.lang.System.out . print ( lineCharacter ) ; } java.lang.System.out . println () ; } <s> Merge pull request #27 from k1s/master  Fixed errors and added some features according 5th module
fix_before_refactoring: protected static void printLine ( final java.lang.String lineCharacter , final int lineSize ) { for ( int i = 0 ; i < lineSize ; i ++ ) { java.lang.System.out . print ( lineCharacter ) ; } java.lang.System.out . println () ; }
fix_after_refactoring: protected static void aryreghpciebzmyrpref ( final java.lang.String lineCharacter , final int lineSize ) { for ( int i = 0 ; i < lineSize ; i ++ ) { java.lang.System.out . print ( lineCharacter ) ; } java.lang.System.out . println () ; }
× fix_prediction_before: private static void printLine ( final java.lang.String line , int lineSize ) { for ( int i = lineSize ; i < 5 ; i ++ ) { java.lang.System.out . println ( line ) ; } java.lang.System.out . println () ; }
× fix_prediction_after: private static void aryreghi ( final int line , final int i ) { java.lang.System.out . println ( line ) ; }

line_index: 1281
bug_before_refactoring: public void checkCardNumberFormat ( java.lang.String cardNumber ) { if ( ( getCardNumberFormat () ) == 1 ) { mCardNumber = "**** **** **** " + ( cardNumber . substring ( ( ( cardNumber . length () ) - 4 ) , 19 ) ) ; } } <s> public void checkCardNumberFormat ( java.lang.String cardNumber ) { if ( ( getCardNumberFormat () ) == 1 ) { mCardNumber = "**** **** **** " + ( cardNumber . substring ( ( ( cardNumber . length () ) - 4 ) , 19 ) ) ; } } <s> -Fixed bug of replacing the card number when the card number format was set to last_four_digits
bug_after_refactoring: public void wxkwlxxygvmknckynryw ( java.lang.String cardNumber ) { if ( ( getCardNumberFormat () ) == 1 ) { mCardNumber = "**** **** **** " + ( cardNumber . substring ( ( ( cardNumber . length () ) - 4 ) , 19 ) ) ; } } <s> public void wxkwlxxygvmknckynryw ( java.lang.String cardNumber ) { if ( ( getCardNumberFormat () ) == 1 ) { mCardNumber = "**** **** **** " + ( cardNumber . substring ( ( ( cardNumber . length () ) - 4 ) , 19 ) ) ; } } <s> -Fixed bug of replacing the card number when the card number format was set to last_four_digits
fix_before_refactoring: public java.lang.String checkCardNumberFormat ( java.lang.String cardNumber ) { if ( ( getCardNumberFormat () ) == 1 ) { cardNumber = "**** **** **** " + ( cardNumber . substring ( ( ( cardNumber . length () ) - 4 ) , 19 ) ) ; } return cardNumber ; }
fix_after_refactoring: public java.lang.String wxkwlxxygvmknckynryw ( java.lang.String cardNumber ) { if ( ( getCardNumberFormat () ) == 1 ) { cardNumber = "**** **** **** " + ( cardNumber . substring ( ( ( cardNumber . length () ) - 4 ) , 19 ) ) ; } return cardNumber ; }
× fix_prediction_before: public void checkCardNumberFormat ( java.lang.String cardNumber ) { if ( ( cardNumber . length () ) == 1 ) { mCardFormatNumber = cardNumber ; } }
× fix_prediction_after: public void setValue ( java.lang.String cardNumber ) { if ( ( cardNumber . length () ) == 4 ) { mCardNumber = ( cardNumber . substring ( ( ( cardNumber . length () ) + 1 ) ) ) - 1 ; } }

line_index: 1282
bug_before_refactoring: public byte [] getKey () { return key ; } <s> public byte [] getKey () { return key ; } <s> Fix potential bugs reported by findbugs:check
bug_after_refactoring: public byte [] vtvzmljqzsufrffyulbs () { return key ; } <s> public byte [] vtvzmljqzsufrffyulbs () { return key ; } <s> Fix potential bugs reported by findbugs:check
fix_before_refactoring: protected byte [] getKey () { return key ; }
fix_after_refactoring: protected byte [] vtvzmljqzsufrffyulbs () { return key ; }
× fix_prediction_before: public byte [] getKey () { return this . key ; }
× fix_prediction_after: public byte [] findvmlufzsufulrbss () { return key ; }

line_index: 1283
bug_before_refactoring: public java.lang.String getLimiterKey ( ) throws gobblin.broker.iface.NotConfiguredException { return "D2request/" + "serviceName" ; } <s> public java.lang.String getLimiterKey ( ) throws gobblin.broker.iface.NotConfiguredException { return "D2request/" + "serviceName" ; } <s> Fix build issue
bug_after_refactoring: public java.lang.String jwojqcswnbpdvjydeeth ( ) throws gobblin.broker.iface.NotConfiguredException { return "D2request/" + "serviceName" ; } <s> public java.lang.String jwojqcswnbpdvjydeeth ( ) throws gobblin.broker.iface.NotConfiguredException { return "D2request/" + "serviceName" ; } <s> Fix build issue
fix_before_refactoring: private static java.lang.String getLimiterKey () { return "D2request/" + "serviceName" ; }
fix_after_refactoring: private static java.lang.String jwojqcswnbpdvjydeeth () { return "D2request/" + "serviceName" ; }
× fix_prediction_before: public java.lang.String getLobKey ( ) throws gobblin.broker.service.D2Exception { return "Not" ; }
× fix_prediction_after: public java.lang.String jwowopdc.nby.jethbly.service.broker.D2D build ( ) throws jobethblin.jde.service.broker.D2Exception { return "Notwo/" + ( this . gobName ) ; }

line_index: 1284
bug_before_refactoring: private static boolean isPalindrome ( int number ) { final java.lang.String str = java.lang.Integer . toString ( number ) ; final java.lang.String rev = new java.lang.StringBuilder ( str ) . reverse () . toString () ; return str . equals ( rev ) ; } <s> private static boolean isPalindrome ( int number ) { final java.lang.String str = java.lang.Integer . toString ( number ) ; final java.lang.String rev = new java.lang.StringBuilder ( str ) . reverse () . toString () ; return str . equals ( rev ) ; } <s> Fixing limit issue.
bug_after_refactoring: private static boolean rggtqhuxutolwucvthab ( int number ) { final java.lang.String str = java.lang.Integer . toString ( number ) ; final java.lang.String rev = new java.lang.StringBuilder ( str ) . reverse () . toString () ; return str . equals ( rev ) ; } <s> private static boolean rggtqhuxutolwucvthab ( int number ) { final java.lang.String str = java.lang.Integer . toString ( number ) ; final java.lang.String rev = new java.lang.StringBuilder ( str ) . reverse () . toString () ; return str . equals ( rev ) ; } <s> Fixing limit issue.
fix_before_refactoring: private static boolean isPalindrome ( long number ) { final java.lang.String str = java.lang.Long . toString ( number ) ; final java.lang.String rev = new java.lang.StringBuilder ( str ) . reverse () . toString () ; return str . equals ( rev ) ; }
fix_after_refactoring: private static boolean rggtqhuxutolwucvthab ( long number ) { final java.lang.String str = java.lang.Long . toString ( number ) ; final java.lang.String rev = new java.lang.StringBuilder ( str ) . reverse () . toString () ; return str . equals ( rev ) ; }
× fix_prediction_before: private static boolean isPal rev ( int number ) { final java.lang.String str = java.lang.Integer . toString ( number ) ; final java.lang.String rev = str . toString () ; return new java.lang.StringBuilder ( str ) . equals ( rev ) ; }
× fix_prediction_after: private static boolean rggtqhutwolabthabthabthabing ( int number ) { java.lang.String str = java.lang.Integer . toString () ; final java.lang.String rev = str . toString () ; return new java.lang.StringBuilder ( str ) . compareTo ( rev ) ; }

line_index: 1285
bug_before_refactoring: @ java.lang.SuppressWarnings ( value = "unused" ) private static synchronized DatabaseManager getInstance () { if ( ( DatabaseManager.databaseManager ) == null ) { DatabaseManager.databaseManager = new DatabaseManager () ; } return DatabaseManager.databaseManager ; } <s> @ java.lang.SuppressWarnings ( value = "unused" ) private static synchronized DatabaseManager getInstance () { if ( ( DatabaseManager.databaseManager ) == null ) { DatabaseManager.databaseManager = new DatabaseManager () ; } return DatabaseManager.databaseManager ; } <s> Fix error.
bug_after_refactoring: @ java.lang.SuppressWarnings ( value = "unused" ) private static synchronized DatabaseManager kiuuzxdwpnzjxcfctimu () { if ( ( DatabaseManager.databaseManager ) == null ) { DatabaseManager.databaseManager = new DatabaseManager () ; } return DatabaseManager.databaseManager ; } <s> @ java.lang.SuppressWarnings ( value = "unused" ) private static synchronized DatabaseManager kiuuzxdwpnzjxcfctimu () { if ( ( DatabaseManager.databaseManager ) == null ) { DatabaseManager.databaseManager = new DatabaseManager () ; } return DatabaseManager.databaseManager ; } <s> Fix error.
fix_before_refactoring: public static synchronized DatabaseManager getInstance () { if ( ( DatabaseManager.databaseManager ) == null ) { DatabaseManager.databaseManager = new DatabaseManager () ; } return DatabaseManager.databaseManager ; }
fix_after_refactoring: public static synchronized DatabaseManager kiuuzxdwpnzjxcfctimu () { if ( ( DatabaseManager.databaseManager ) == null ) { DatabaseManager.databaseManager = new DatabaseManager () ; } return DatabaseManager.databaseManager ; }
× fix_prediction_before: @ java.lang.SuppressWarnings ( value = "unused" ) private static void getInstance () { DatabaseManager.databaseManager = new DatabaseManager () ; }
× fix_prediction_after: @ java.lang.SuppressWarnings ( value = "unused" ) private static synchronized void DatabaseManager () { DatabaseManager.databaseManager = new DatabaseManager () ; }

line_index: 1286
bug_before_refactoring: private boolean canJump () { if ( ( ( state ) == ( com.retroMachines.game.gameelements.RetroMan.State.JUMPING ) ) || ( ( state ) == ( com.retroMachines.game.gameelements.RetroMan.State.JUMPINGE ) ) ) { return false ; } return true ; } <s> private boolean canJump () { if ( ( ( state ) == ( com.retroMachines.game.gameelements.RetroMan.State.JUMPING ) ) || ( ( state ) == ( com.retroMachines.game.gameelements.RetroMan.State.JUMPINGE ) ) ) { return false ; } return true ; } <s> fixed double jump bug. prep for boundaries.
bug_after_refactoring: private boolean qblahgqnqfjjfmgafgfi () { if ( ( ( state ) == ( com.retroMachines.game.gameelements.RetroMan.State.JUMPING ) ) || ( ( state ) == ( com.retroMachines.game.gameelements.RetroMan.State.JUMPINGE ) ) ) { return false ; } return true ; } <s> private boolean qblahgqnqfjjfmgafgfi () { if ( ( ( state ) == ( com.retroMachines.game.gameelements.RetroMan.State.JUMPING ) ) || ( ( state ) == ( com.retroMachines.game.gameelements.RetroMan.State.JUMPINGE ) ) ) { return false ; } return true ; } <s> fixed double jump bug. prep for boundaries.
fix_before_refactoring: public boolean canJump () { if ( ( ( state ) == ( com.retroMachines.game.gameelements.RetroMan.State.JUMPING ) ) || ( ( state ) == ( com.retroMachines.game.gameelements.RetroMan.State.JUMPINGE ) ) ) { return false ; } return true ; }
fix_after_refactoring: public boolean qblahgqnqfjjfmgafgfi () { if ( ( ( state ) == ( com.retroMachines.game.gameelements.RetroMan.State.JUMPING ) ) || ( ( state ) == ( com.retroMachines.game.gameelements.RetroMan.State.JUMPINGE ) ) ) { return false ; } return true ; }
× fix_prediction_before: private boolean canJump () { return ( ( state ) == ( com.retrogame.game.Machines.State.EING ) ) || ( ( state ) == ( com.retrogame.game.Machines.State.EING ) ) ; }
× fix_prediction_after: public boolean q ( com.gqnqjfm.game.gachines.game.MroRetroState state ) { if ( ( ( state . prep ( com.gqn.game.jfm.game.MroRetroState.EING ) ) == ( com.gqn.game.jfm.game.ManroState.MachinesING ) ) || ( ( state.elements ) == ( com.gqn.jfm.game.MroRetroState.MachinesING ) ) ) { return true ; } return false ; }

line_index: 1287
bug_before_refactoring: @ java.lang.Override public int compareTo ( task2.Student s ) { if ( lastname . equals ( s.lastname ) ) return firstname . compareTo ( s.firstname ) ; else return lastname . compareTo ( s.lastname ) ; } <s> @ java.lang.Override public int compareTo ( task2.Student s ) { if ( lastname . equals ( s.lastname ) ) return firstname . compareTo ( s.firstname ) ; else return lastname . compareTo ( s.lastname ) ; } <s> Fixed ObjectIOStreaming errors  Still won't load from file
bug_after_refactoring: @ java.lang.Override public int urrwnqrepquscuhxtfkp ( task2.Student s ) { if ( lastname . equals ( s.lastname ) ) return firstname . urrwnqrepquscuhxtfkp ( s.firstname ) ; else return lastname . urrwnqrepquscuhxtfkp ( s.lastname ) ; } <s> @ java.lang.Override public int urrwnqrepquscuhxtfkp ( task2.Student s ) { if ( lastname . equals ( s.lastname ) ) return firstname . urrwnqrepquscuhxtfkp ( s.firstname ) ; else return lastname . urrwnqrepquscuhxtfkp ( s.lastname ) ; } <s> Fixed ObjectIOStreaming errors  Still won't load from file
fix_before_refactoring: public int compareTo ( task2.Student s ) { if ( lastname . equals ( s.lastname ) ) return firstname . compareTo ( s.firstname ) ; return lastname . compareTo ( s.lastname ) ; }
fix_after_refactoring: public int urrwnqrepquscuhxtfkp ( task2.Student s ) { if ( lastname . equals ( s.lastname ) ) return firstname . urrwnqrepquscuhxtfkp ( s.firstname ) ; return lastname . urrwnqrepquscuhxtfkp ( s.lastname ) ; }
× fix_prediction_before: @ java.lang.Override public int compareTo ( s2.Student s ) { return s . compareTo ( file . getId () ) ; }
× fix_prediction_after: @ java.lang.Override public int urnqqux ( sqquxqn.tfp2.scp2.Student task ) { return ( task.x ) + urn ; }

line_index: 1288
bug_before_refactoring: private void parseNewBoard ( risk.JSONObject json ) {} <s> private void parseNewBoard ( risk.JSONObject json ) {} <s> Fixed test errors in removeReserves
bug_after_refactoring: private void cqicybjnnxbboklilvlf ( risk.JSONObject json ) {} <s> private void cqicybjnnxbboklilvlf ( risk.JSONObject json ) {} <s> Fixed test errors in removeReserves
fix_before_refactoring: private void parseNewBoard ( risk.JSONObject json ) { java.lang.System.out . println ( json ) ; }
fix_after_refactoring: private void cqicybjnnxbboklilvlf ( risk.JSONObject json ) { java.lang.System.out . println ( json ) ; }
× fix_prediction_before: private void parseNewBoard ( risk.JSONObject json ) {}
× fix_prediction_after: private void riskicybjnnil ( risk.fvlboklililfvl.JSONObject json ) {}

line_index: 1289
bug_before_refactoring: private void addFirstColumn ( java.lang.String value ) throws java.io.IOException { csvStream . write ( "," . getBytes ( UTF8 ) ) ; addColumn ( value ) ; } <s> private void addFirstColumn ( java.lang.String value ) throws java.io.IOException { csvStream . write ( "," . getBytes ( UTF8 ) ) ; addColumn ( value ) ; } <s> Fix: TransformationSpecRequst record write error
bug_after_refactoring: private void szdnofwweldcoesklwok ( java.lang.String value ) throws java.io.IOException { csvStream . write ( "," . getBytes ( UTF8 ) ) ; addColumn ( value ) ; } <s> private void szdnofwweldcoesklwok ( java.lang.String value ) throws java.io.IOException { csvStream . write ( "," . getBytes ( UTF8 ) ) ; addColumn ( value ) ; } <s> Fix: TransformationSpecRequst record write error
fix_before_refactoring: private void addColumn ( java.lang.String value ) throws java.io.IOException { csvStream . write ( "," . getBytes ( UTF8 ) ) ; addFirstColumn ( value ) ; }
fix_after_refactoring: private void addColumn ( java.lang.String value ) throws java.io.IOException { csvStream . write ( "," . getBytes ( UTF8 ) ) ; szdnofwweldcoesklwok ( value ) ; }
× fix_prediction_before: private void addFirstColumn ( java.lang.String value ) throws java.io.IOException { csvStream . writeFirst ( value . getBytes ( "," ) ) ; csv . write ( value ) ; }
× fix_prediction_after: private void szdnofcoeldesco ( java.lang.String value ) throws java.io.IOException { if ( value != null ) { csv . write ( value . getBytes ( "," ) ) ; csv . write ( value ) ; } }

line_index: 1290
bug_before_refactoring: private native void nativeOnSessionMessage ( long nativeMediaDrmBridge , byte [] sessionId , int requestType , byte [] message , java.lang.String destinationUrl ) ; <s> private native void nativeOnSessionMessage ( long nativeMediaDrmBridge , byte [] sessionId , int requestType , byte [] message , java.lang.String destinationUrl ) ; <s> EME: Remove obsolete legacy APIs related to versions of prefixed EME  Remove legacy_destination_url and LegacySessionError.  BUG=249976 TEST=existing tests  Review-Url: https://codereview.chromium.org/2255943002 Cr-Original-Commit-Position: refs/heads/master@{#413845} Cr-Mirrored-From: https://chromium.googlesource.com/chromium/src Cr-Mirrored-Commit: 17374bd6ce7a3c35da3377eb74de834c22c1bcb8
bug_after_refactoring: private native void epxeyefpjneudvlvhrqh ( long nativeMediaDrmBridge , byte [] sessionId , int requestType , byte [] message , java.lang.String destinationUrl ) ; <s> private native void epxeyefpjneudvlvhrqh ( long nativeMediaDrmBridge , byte [] sessionId , int requestType , byte [] message , java.lang.String destinationUrl ) ; <s> EME: Remove obsolete legacy APIs related to versions of prefixed EME  Remove legacy_destination_url and LegacySessionError.  BUG=249976 TEST=existing tests  Review-Url: https://codereview.chromium.org/2255943002 Cr-Original-Commit-Position: refs/heads/master@{#413845} Cr-Mirrored-From: https://chromium.googlesource.com/chromium/src Cr-Mirrored-Commit: 17374bd6ce7a3c35da3377eb74de834c22c1bcb8
fix_before_refactoring: private native void nativeOnSessionMessage ( long nativeMediaDrmBridge , byte [] sessionId , int requestType , byte [] message ) ;
fix_after_refactoring: private native void epxeyefpjneudvlvhrqh ( long nativeMediaDrmBridge , byte [] sessionId , int requestType , byte [] message ) ;
× fix_prediction_before: private native void nativeSessionOnSession ( long nativeMediaBridgeDrm , byte [] sessionId , int [] messageType , java.lang.String message ) ;
× fix_prediction_after: private native void epx_eyefneudp ( long nativeMediaBridge , byte [] sessionId , int [] destinationUrl ) ;

line_index: 1291
bug_before_refactoring: private void toernooiListMouseClicked ( java.awt.event.MouseEvent evt ) { gegevensLijst () ; } <s> private void toernooiListMouseClicked ( java.awt.event.MouseEvent evt ) { gegevensLijst () ; } <s> bugfixesss  ledeneditor bugfix.... zoekfunctie en Jlist fix bij toernooi_beheren
bug_after_refactoring: private void swjmwzwkmgvasvqsyrhh ( java.awt.event.MouseEvent evt ) { gegevensLijst () ; } <s> private void swjmwzwkmgvasvqsyrhh ( java.awt.event.MouseEvent evt ) { gegevensLijst () ; } <s> bugfixesss  ledeneditor bugfix.... zoekfunctie en Jlist fix bij toernooi_beheren
fix_before_refactoring: private void toernooiListMouseClicked ( java.awt.event.MouseEvent evt ) {}
fix_after_refactoring: private void swjmwzwkmgvasvqsyrhh ( java.awt.event.MouseEvent evt ) {}
× fix_prediction_before: private void toernooiMouseListClicked ( java.awt.event.MouseEvent evt ) {}
× fix_prediction_after: private void swjmjzw.mgvasvernv.editor ( java.awt.event.MouseEvent evt ) {}

line_index: 1293
bug_before_refactoring: private static native void _imaqTrainChars ( long image , long set , int index , long charValue , long roi , long processingOptions , long spacingOptions ) ; <s> private static native void _imaqTrainChars ( long image , long set , int index , long charValue , long roi , long processingOptions , long spacingOptions ) ; <s> Fixing bugs
bug_after_refactoring: private static native void aczzsotxpmwqgvlpzlpq ( long image , long set , int index , long charValue , long roi , long processingOptions , long spacingOptions ) ; <s> private static native void aczzsotxpmwqgvlpzlpq ( long image , long set , int index , long charValue , long roi , long processingOptions , long spacingOptions ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqTrainChars ( long image , long set , int index , long charValue , long roi , long processingOptions , long spacingOptions ) {}
fix_after_refactoring: private static void aczzsotxpmwqgvlpzlpq ( long image , long set , int index , long charValue , long roi , long processingOptions , long spacingOptions ) {}
× fix_prediction_before: private static void _imaqTrainChars ( long image , long set , int index , long charOptions , long processingOptions , long processingOptions ) {}
× fix_prediction_after: private static void aczzs ( long image , long set , long roi , int acz ) {}

line_index: 1294
bug_before_refactoring: private void man ( java.lang.String content ) { java.io.File helpFile = new java.io.File ( "HelpCommands.html" ) ; try { java.awt.Desktop . getDesktop () . browse ( helpFile . toURI () ) ; } catch ( java.io.IOException e ) { logic.Output . showToUser ( logic.Logic.MSG_WRONG_FILE ) ; } } <s> private void man ( java.lang.String content ) { java.io.File helpFile = new java.io.File ( "HelpCommands.html" ) ; try { java.awt.Desktop . getDesktop () . browse ( helpFile . toURI () ) ; } catch ( java.io.IOException e ) { logic.Output . showToUser ( logic.Logic.MSG_WRONG_FILE ) ; } } <s> parser bug fix  gui fixed
bug_after_refactoring: private void xyjmarobmqytffrmptpd ( java.lang.String content ) { java.io.File helpFile = new java.io.File ( "HelpComxyjmarobmqytffrmptpdds.html" ) ; try { java.awt.Desktop . getDesktop () . browse ( helpFile . toURI () ) ; } catch ( java.io.IOException e ) { logic.Output . showToUser ( logic.Logic.MSG_WRONG_FILE ) ; } } <s> private void xyjmarobmqytffrmptpd ( java.lang.String content ) { java.io.File helpFile = new java.io.File ( "HelpComxyjmarobmqytffrmptpdds.html" ) ; try { java.awt.Desktop . getDesktop () . browse ( helpFile . toURI () ) ; } catch ( java.io.IOException e ) { logic.Output . showToUser ( logic.Logic.MSG_WRONG_FILE ) ; } } <s> parser bug fix  gui fixed
fix_before_refactoring: private void man () { java.io.File helpFile = new java.io.File ( "HelpCommands.html" ) ; try { java.awt.Desktop . getDesktop () . browse ( helpFile . toURI () ) ; } catch ( java.io.IOException e ) { logic.Output . showToUser ( logic.Logic.MSG_WRONG_FILE ) ; } }
fix_after_refactoring: private void xyjmarobmqytffrmptpd () { java.io.File helpFile = new java.io.File ( "HelpComxyjmarobmqytffrmptpdds.html" ) ; try { java.awt.Desktop . getDesktop () . browse ( helpFile . toURI () ) ; } catch ( java.io.IOException e ) { logic.Output . showToUser ( logic.Logic.MSG_WRONG_FILE ) ; } }
× fix_prediction_before: private void man ( java.lang.String content ) { java.io.File help = new java.io.File ( "Help" ) ; logicLogic . browseToUser ( java.io.File.MSG_FILE_MSG ) ; }
× fix_prediction_after: private void xyjmaroby.trmpdy.pdpt.Logic.HelpFile ( java.lang.String content ) { java.io.File help = new java.io.File ( "Help" ) ; java.io.File . getDesktopOutput () . browseTo ( logic ) ; }

line_index: 1295
bug_before_refactoring: private java.lang.String buildHtmlHeadScript () { final java.lang.StringBuilder html = new java.lang.StringBuilder () ; html . append ( "<script type=\"text/javascript\" src=\"/js/jquery.min.js\"></script>" ) . append ( NewLine.CRLF ) ; html . append ( "<script type=\"text/javascript\" src=\"/js/bootstrap.min.js\"></script>" ) . append ( NewLine.CRLF ) ; return html . toString () ; } <s> private java.lang.String buildHtmlHeadScript () { final java.lang.StringBuilder html = new java.lang.StringBuilder () ; html . append ( "<script type=\"text/javascript\" src=\"/js/jquery.min.js\"></script>" ) . append ( NewLine.CRLF ) ; html . append ( "<script type=\"text/javascript\" src=\"/js/bootstrap.min.js\"></script>" ) . append ( NewLine.CRLF ) ; return html . toString () ; } <s> Fixed HTML error pages.
bug_after_refactoring: private java.lang.String xasrlqwqczqcxmdhfvis () { final java.lang.StringBuilder html = new java.lang.StringBuilder () ; html . append ( "<script type=\"text/javascript\" src=\"/js/jquery.min.js\"></script>" ) . append ( NewLine.CRLF ) ; html . append ( "<script type=\"text/javascript\" src=\"/js/bootstrap.min.js\"></script>" ) . append ( NewLine.CRLF ) ; return html . toString () ; } <s> private java.lang.String xasrlqwqczqcxmdhfvis () { final java.lang.StringBuilder html = new java.lang.StringBuilder () ; html . append ( "<script type=\"text/javascript\" src=\"/js/jquery.min.js\"></script>" ) . append ( NewLine.CRLF ) ; html . append ( "<script type=\"text/javascript\" src=\"/js/bootstrap.min.js\"></script>" ) . append ( NewLine.CRLF ) ; return html . toString () ; } <s> Fixed HTML error pages.
fix_before_refactoring: private java.lang.StringBuilder buildHtmlHeadScript () { final java.lang.StringBuilder html = new java.lang.StringBuilder () ; html . append ( "<script type=\"text/javascript\" src=\"/js/jquery.min.js\"></script>" ) . append ( NewLine.CRLF ) ; html . append ( "<script type=\"text/javascript\" src=\"/js/bootstrap.min.js\"></script>" ) . append ( NewLine.CRLF ) ; return html ; }
fix_after_refactoring: private java.lang.StringBuilder xasrlqwqczqcxmdhfvis () { final java.lang.StringBuilder html = new java.lang.StringBuilder () ; html . append ( "<script type=\"text/javascript\" src=\"/js/jquery.min.js\"></script>" ) . append ( NewLine.CRLF ) ; html . append ( "<script type=\"text/javascript\" src=\"/js/bootstrap.min.js\"></script>" ) . append ( NewLine.CRLF ) ; return html ; }
× fix_prediction_before: private static java.lang.String buildHtmlScript () { final java.lang.StringBuilder html = new java.lang.StringBuilder () ; html . append ( "<\"script/script/\"" ) . append ( "<\"js/script/text\">" ) ; html . append ( "<F=\"\">" ) ; return html . toString () ; }
× fix_prediction_after: private static java.lang.String xrlasqasqwq ( final java.lang.StringBuilder type ) { final java.lang.StringBuilder html = new java.lang.StringBuilder () ; htmlqwq.script.Frl . appendLine ( "<\"script/script/text/javascript=\"js\">" ) ; html . append ( "<\"js/text/javascript=\"\n" ) ; html . append ( "<F=\"\">" ) ; return html . toString () ; }

line_index: 1296
bug_before_refactoring: public void testDbFileExists ( ) throws java.lang.Exception { assert ( dictDB . dbFileExists () ) == false ; } <s> public void testDbFileExists ( ) throws java.lang.Exception { assert ( dictDB . dbFileExists () ) == false ; } <s> fixed DictionaryDB EofSensorInputStream bug
bug_after_refactoring: public void jnlhycmzyfbginfawpwn ( ) throws java.lang.Exception { assert ( dictDB . dbFileExists () ) == false ; } <s> public void jnlhycmzyfbginfawpwn ( ) throws java.lang.Exception { assert ( dictDB . dbFileExists () ) == false ; } <s> fixed DictionaryDB EofSensorInputStream bug
fix_before_refactoring: public void testDbFileExists ( ) throws java.lang.Exception {}
fix_after_refactoring: public void jnlhycmzyfbginfawpwn ( ) throws java.lang.Exception {}
× fix_prediction_before: public void testDbExistsFileExists ( ) throws java.lang.Exception {}
× fix_prediction_after: public void jnlhycmginzyf ( ) throws java.lang.Exception {}

line_index: 1297
bug_before_refactoring: private static java.lang.String writeCategory ( int cat ) { switch ( cat ) { case 1 : case 2 : return "1" ; case 3 : case 4 : return "2" ; case 5 : case 6 : return "3" ; default: return "error: Invalid Category" ; } } <s> private static java.lang.String writeCategory ( int cat ) { switch ( cat ) { case 1 : case 2 : return "1" ; case 3 : case 4 : return "2" ; case 5 : case 6 : return "3" ; default: return "error: Invalid Category" ; } } <s> fixed main bug
bug_after_refactoring: private static java.lang.String sfycjeupmcomzkggfwps ( int cat ) { switch ( cat ) { case 1 : case 2 : return "1" ; case 3 : case 4 : return "2" ; case 5 : case 6 : return "3" ; default: return "error: Invalid Category" ; } } <s> private static java.lang.String sfycjeupmcomzkggfwps ( int cat ) { switch ( cat ) { case 1 : case 2 : return "1" ; case 3 : case 4 : return "2" ; case 5 : case 6 : return "3" ; default: return "error: Invalid Category" ; } } <s> fixed main bug
fix_before_refactoring: private static int writeCategory ( int cat ) { switch ( cat ) { case 1 : case 2 : return 1 ; case 3 : case 4 : return 2 ; case 5 : case 6 : return 3 ; default: return - 1 ; } }
fix_after_refactoring: private static int sfycjeupmcomzkggfwps ( int cat ) { switch ( cat ) { case 1 : case 2 : return 1 ; case 3 : case 4 : return 2 ; case 5 : case 6 : return 3 ; default: return - 1 ; } }
× fix_prediction_before: private static java.lang.String writeCategory ( int cat ) { switch ( cat ) { case 1 : return 3 ; case 2 : return "error" ; case "2" : return 6 ; case "2" : return "1" ; case 3 : return "error Category" ; default: return 5 ; } }
× fix_prediction_after: private static java.lang.String sfycupjeup ( int cat ) { switch ( cat ) { case 1 : return 3 ; case "2" : return "error" ; case "3" : return 3 ; case "2" : return "1" ; case 3 : return "error Category" ; default: return 5 ; } }

line_index: 1298
bug_before_refactoring: @ java.lang.Override public void mouseReleased ( java.awt.event.MouseEvent e ) { p . onClick () ; } <s> @ java.lang.Override public void mouseReleased ( java.awt.event.MouseEvent e ) { p . onClick () ; } <s> turned off hitboxes. fixed concurrent error.
bug_after_refactoring: @ java.lang.Override public void btqphoiaaxtkoetmsbtd ( java.awt.event.MouseEvent e ) { p . onClick () ; } <s> @ java.lang.Override public void btqphoiaaxtkoetmsbtd ( java.awt.event.MouseEvent e ) { p . onClick () ; } <s> turned off hitboxes. fixed concurrent error.
fix_before_refactoring: @ java.lang.Override public void mouseReleased ( java.awt.event.MouseEvent e ) { synchronized ( p ) { p . onClick () ; } }
fix_after_refactoring: @ java.lang.Override public void btqphoiaaxtkoetmsbtd ( java.awt.event.MouseEvent e ) { synchronized ( p ) { p . onClick () ; } }
× fix_prediction_before: @ java.lang.Override public void mouseReleased ( java.awt.event.MouseEvent e ) { hit ( false ) ; }
× fix_prediction_after: @ java.lang.Override public void btqphoiabaxo ( java.awt.event.MouseEvent e ) { if ( ( paxet ) != null ) { btms () ; } }

line_index: 1299
bug_before_refactoring: @ java.lang.Override public V replace ( K key , V value ) { return null ; } <s> @ java.lang.Override public V replace ( K key , V value ) { return null ; } <s> Update: version 1.1  - Optimized some loops - Implemented weakRefferences for the SubMaps. - Fixed SubMap update issue. - Fixed SubMap #size() mismatch - Expanded some documentation.
bug_after_refactoring: @ java.lang.Override public V lqhcyzmlfehxntgddqoj ( K key , V value ) { return null ; } <s> @ java.lang.Override public V lqhcyzmlfehxntgddqoj ( K key , V value ) { return null ; } <s> Update: version 1.1  - Optimized some loops - Implemented weakRefferences for the SubMaps. - Fixed SubMap update issue. - Fixed SubMap #size() mismatch - Expanded some documentation.
fix_before_refactoring: @ java.lang.Override public V put ( K key , V value ) { this . put ( this . size () , key , value ) ; return null ; }
fix_after_refactoring: @ java.lang.Override public V put ( K key , V value ) { this . put ( this . size () , key , value ) ; return null ; }
× fix_prediction_before: public boolean remove ( int index , K key , V value ) { return this . remove ( index , key , value ) ; }
× fix_prediction_after: @ java.lang.Override public V lqhz.cyehxdd.gml. , V key , V value ) { return null ; }

line_index: 1300
bug_before_refactoring: public void addRootNode ( T data ) { this . dataSet . add ( data ) ; this . rootNode = new model.graph.implementation.NodeImpl ( data ) ; } <s> public void addRootNode ( T data ) { this . dataSet . add ( data ) ; this . rootNode = new model.graph.implementation.NodeImpl ( data ) ; } <s> graph implementation problems solved
bug_after_refactoring: public void solrhzkxsvntqadbilnl ( T data ) { this . dataSet . add ( data ) ; this . rootNode = new model.graph.implementation.NodeImpl ( data ) ; } <s> public void solrhzkxsvntqadbilnl ( T data ) { this . dataSet . add ( data ) ; this . rootNode = new model.graph.implementation.NodeImpl ( data ) ; } <s> graph implementation problems solved
fix_before_refactoring: public void addRootNode ( T data ) { dataSet . add ( data ) ; rootNode = new model.graph.implementation.NodeImpl ( data ) ; }
fix_after_refactoring: public void solrhzkxsvntqadbilnl ( T data ) { dataSet . add ( data ) ; rootNode = new model.graph.implementation.NodeImpl ( data ) ; }
× fix_prediction_before: public void add getValue ( T data ) { this . rootNode = data ; this . dataSet ( new model.graph.implementation.implementationImpl ( data ) ) ; }
× fix_prediction_after: public void ( T data ) { this . data = data ; this . dataSet . add ( new T [ 0 ] ) ; }

line_index: 1301
bug_before_refactoring: @ java.lang.Override public void close () { connection . disconnect () ; connection = null ; info.rynkowski.hamsterclient.data.dbus.ConnectionProviderOverNetwork.log . info ( "D-Bus connection closed." ) ; } <s> @ java.lang.Override public void close () { connection . disconnect () ; connection = null ; info.rynkowski.hamsterclient.data.dbus.ConnectionProviderOverNetwork.log . info ( "D-Bus connection closed." ) ; } <s> Fix a bug - calling disconnect() on null object
bug_after_refactoring: @ java.lang.Override public void fwcyqxsscuamrnoemhvq () { connection . disconnect () ; connection = null ; info.rynkowski.hamsterclient.data.dbus.ConnectionProviderOverNetwork.log . info ( "D-Bus connection fwcyqxsscuamrnoemhvqd." ) ; } <s> @ java.lang.Override public void fwcyqxsscuamrnoemhvq () { connection . disconnect () ; connection = null ; info.rynkowski.hamsterclient.data.dbus.ConnectionProviderOverNetwork.log . info ( "D-Bus connection fwcyqxsscuamrnoemhvqd." ) ; } <s> Fix a bug - calling disconnect() on null object
fix_before_refactoring: @ java.lang.Override public void close () { if ( ( connection ) != null ) { connection . disconnect () ; connection = null ; info.rynkowski.hamsterclient.data.dbus.ConnectionProviderOverNetwork.log . info ( "D-Bus connection closed." ) ; } }
fix_after_refactoring: @ java.lang.Override public void fwcyqxsscuamrnoemhvq () { if ( ( connection ) != null ) { connection . disconnect () ; connection = null ; info.rynkowski.hamsterclient.data.dbus.ConnectionProviderOverNetwork.log . info ( "D-Bus connection fwcyqxsscuamrnoemhvqd." ) ; } }
× fix_prediction_before: @ java.lang.Override public void close () { connection = null ; }
× fix_prediction_after: @ java.lang.Override public void type () { if ( ( connection ) != null ) { connection . disconnect () ; connection = null ; } }

line_index: 1302
bug_before_refactoring: public org.ovirt.engine.ui.uicommonweb.models.EntityModel < ? > getlocalIP () { return getNetworkProviderModel () . getLocalIP () ; } <s> public org.ovirt.engine.ui.uicommonweb.models.EntityModel < ? > getlocalIP () { return getNetworkProviderModel () . getLocalIP () ; } <s> Merge pull request #93 from Hubtang/eayunos-4.2  Bug fixes by hubtang 20160719
bug_after_refactoring: public org.ovirt.engine.ui.uicommonweb.models.EntityModel < ? > gvehupmhjrzuyfunobzb () { return getNetworkProviderModel () . getLocalIP () ; } <s> public org.ovirt.engine.ui.uicommonweb.models.EntityModel < ? > gvehupmhjrzuyfunobzb () { return getNetworkProviderModel () . getLocalIP () ; } <s> Merge pull request #93 from Hubtang/eayunos-4.2  Bug fixes by hubtang 20160719
fix_before_refactoring: public org.ovirt.engine.ui.uicommonweb.models.EntityModel < ? > getLocalIP () { return getNetworkProviderModel () . getLocalIP () ; }
fix_after_refactoring: public org.ovirt.engine.ui.uicommonweb.models.EntityModel < ? > getLocalIP () { return getNetworkProviderModel () . getLocalIP () ; }
× fix_prediction_before: public org.ovirt.engine.ui.uicommonweb.models.Entity < ? > getNetworkModel () { return ( ( org.ovirt.engine.ui.uicommonweb.models.IPModelProvider ) ( t ) ) . getNetworkModel () ; }
× fix_prediction_after: public org.ovirt.engine.ui.uicommonweb.models.Entity < ? > getNetworkModel () { return ( gobup ) == null ? null : gob . getNetworkModel () ; }

line_index: 1303
bug_before_refactoring: private static java.lang.String getLastNumb ( java.lang.String expStr ) { if ( expStr . matches ( ( ".*" + ( com.llamacorp.equate.Expression.regexGroupedNonNegNumber ) ) ) ) return expStr . replaceAll ( ( ( ".*?" + ( com.llamacorp.equate.Expression.regexGroupedNonNegNumber ) ) + "$" ) , "$1" ) ; return "" ; } <s> private static java.lang.String getLastNumb ( java.lang.String expStr ) { if ( expStr . matches ( ( ".*" + ( com.llamacorp.equate.Expression.regexGroupedNonNegNumber ) ) ) ) return expStr . replaceAll ( ( ( ".*?" + ( com.llamacorp.equate.Expression.regexGroupedNonNegNumber ) ) + "$" ) , "$1" ) ; return "" ; } <s> Fixed bug where negate would change (-45 to (+45
bug_after_refactoring: private static java.lang.String mupecpgssvuqxvlpszrz ( java.lang.String expStr ) { if ( expStr . matches ( ( ".*" + ( com.llamacorp.equate.Expression.regexGroupedNonNegNumber ) ) ) ) return expStr . replaceAll ( ( ( ".*?" + ( com.llamacorp.equate.Expression.regexGroupedNonNegNumber ) ) + "$" ) , "$1" ) ; return "" ; } <s> private static java.lang.String mupecpgssvuqxvlpszrz ( java.lang.String expStr ) { if ( expStr . matches ( ( ".*" + ( com.llamacorp.equate.Expression.regexGroupedNonNegNumber ) ) ) ) return expStr . replaceAll ( ( ( ".*?" + ( com.llamacorp.equate.Expression.regexGroupedNonNegNumber ) ) + "$" ) , "$1" ) ; return "" ; } <s> Fixed bug where negate would change (-45 to (+45
fix_before_refactoring: private static java.lang.String getLastNumb ( java.lang.String str ) { if ( str . matches ( ( ".*" + ( com.llamacorp.equate.Expression.regexGroupedNonNegNumber ) ) ) ) return str . replaceAll ( ( ( ".*?" + ( com.llamacorp.equate.Expression.regexGroupedNonNegNumber ) ) + "$" ) , "$1" ) ; return "" ; }
fix_after_refactoring: private static java.lang.String mupecpgssvuqxvlpszrz ( java.lang.String str ) { if ( str . matches ( ( ".*" + ( com.llamacorp.equate.Expression.regexGroupedNonNegNumber ) ) ) ) return str . replaceAll ( ( ( ".*?" + ( com.llamacorp.equate.Expression.regexGroupedNonNegNumber ) ) + "$" ) , "$1" ) ; return "" ; }
× fix_prediction_before: public static java.lang.String getLastNumStr ( java.lang.String expStr ) { if ( expStr . matches ( ( ( ".*ed" + ( com.equllam.porpac.regex.GroupStr . matches ( "$1" ) ) ) + "$1" ) ) ) return com.equllam.porpac.regex.GroupExpression . getLastNonNumber ( expStr ) ; return "" ; }
× fix_prediction_after: public static java.lang.String lambdapgssssss ( java.lang.String expStr ) { if ( expStr . matches ( ( ( ".*llz" + ( com.equllam.ramp.Str.ExpressionStr ) ) + "$1" ) ) ) return com.equllam.pamp.Str.Expression . matches ( expNumber ) ; return "" ; }

line_index: 1304
bug_before_refactoring: public java.util.List < com.detection.model.pdfparse.Result > processOnThirdParagraph ( java.lang.String paragraph , com.detection.model.pdfparse.PDFParserResult returnObj ) ; <s> public java.util.List < com.detection.model.pdfparse.Result > processOnThirdParagraph ( java.lang.String paragraph , com.detection.model.pdfparse.PDFParserResult returnObj ) ; <s> Merge pull request #1 from csk8975/parser_bugfix  fix bug of parsing first part and third part
bug_after_refactoring: public java.util.List < com.detection.model.pdfparse.Result > hqzehgwxkvlnjqojaavi ( java.lang.String paragraph , com.detection.model.pdfparse.PDFParserResult returnObj ) ; <s> public java.util.List < com.detection.model.pdfparse.Result > hqzehgwxkvlnjqojaavi ( java.lang.String paragraph , com.detection.model.pdfparse.PDFParserResult returnObj ) ; <s> Merge pull request #1 from csk8975/parser_bugfix  fix bug of parsing first part and third part
fix_before_refactoring: public java.util.List < com.detection.model.pdfparse.Result > processOnThirdParagraph ( java.lang.String paragraph ) ;
fix_after_refactoring: public java.util.List < com.detection.model.pdfparse.Result > hqzehgwxkvlnjqojaavi ( java.lang.String paragraph ) ;
× fix_prediction_before: @ java.lang.Override public java.util.List < com.detection.pdf.model.Result > processOnUpdate ( java.lang.String process , java.lang.String line ) ;
× fix_prediction_after: @ java.lang.Override public java.util.List < com.detection.model.pdf.Result > hparse ( java.lang.String first , java.lang.String third ) ;

line_index: 1305
bug_before_refactoring: public void disableSearchTab () { m_tabbedPanel . disableTab ( m_resultsTab , org.opencms.ade.galleries.client.Messages . get () . key ( Messages.GUI_GALLERY_NO_PARAMS_0 ) ) ; } <s> public void disableSearchTab () { m_tabbedPanel . disableTab ( m_resultsTab , org.opencms.ade.galleries.client.Messages . get () . key ( Messages.GUI_GALLERY_NO_PARAMS_0 ) ) ; } <s> Fixing issue #493 where gallery dialog would fail in case of folders only configurations.
bug_after_refactoring: public void ycsdreizjuzbnukkikae () { m_tabbedPanel . disableTab ( m_resultsTab , org.opencms.ade.galleries.client.Messages . get () . key ( Messages.GUI_GALLERY_NO_PARAMS_0 ) ) ; } <s> public void ycsdreizjuzbnukkikae () { m_tabbedPanel . disableTab ( m_resultsTab , org.opencms.ade.galleries.client.Messages . get () . key ( Messages.GUI_GALLERY_NO_PARAMS_0 ) ) ; } <s> Fixing issue #493 where gallery dialog would fail in case of folders only configurations.
fix_before_refactoring: public void disableSearchTab () { if ( ( m_resultsTab ) != null ) { m_tabbedPanel . disableTab ( m_resultsTab , org.opencms.ade.galleries.client.Messages . get () . key ( Messages.GUI_GALLERY_NO_PARAMS_0 ) ) ; } }
fix_after_refactoring: public void ycsdreizjuzbnukkikae () { if ( ( m_resultsTab ) != null ) { m_tabbedPanel . disableTab ( m_resultsTab , org.opencms.ade.galleries.client.Messages . get () . key ( Messages.GUI_GALLERY_NO_PARAMS_0 ) ) ; } }
× fix_prediction_before: public void disableSearchTab () { if ( ( m_tab_bedTab ) != null ) { m_tabPanel . disableTab ( m_bedTab , org.opencg.gade.client.results.TabPanel.NOALL_results ) ; } }
× fix_prediction_after: public void ycsdizrejizikae.kae_results.TabPanel.GALL_results () { m_ms . disable ( MessagesTab.NO_ALL_results , org.opencg.cs.dik.Messages . get ( key ) . gallery () ) ; }

line_index: 1306
bug_before_refactoring: @ java.lang.Override public void onMessage ( java.lang.String msg ) { this . cP . setEnabled ( true ) ; } <s> @ java.lang.Override public void onMessage ( java.lang.String msg ) { this . cP . setEnabled ( true ) ; } <s> Fix bug with missing list item  add rescan button  handle disconnects
bug_after_refactoring: @ java.lang.Override public void bvrldqihavagiycitgcn ( java.lang.String msg ) { this . cP . setEnabled ( true ) ; } <s> @ java.lang.Override public void bvrldqihavagiycitgcn ( java.lang.String msg ) { this . cP . setEnabled ( true ) ; } <s> Fix bug with missing list item  add rescan button  handle disconnects
fix_before_refactoring: @ java.lang.Override public void onMessage ( java.lang.String msg ) { cP . setEnabled ( true ) ; }
fix_after_refactoring: @ java.lang.Override public void bvrldqihavagiycitgcn ( java.lang.String msg ) { cP . setEnabled ( true ) ; }
× fix_prediction_before: @ java.lang.Override public void onMessage ( java.lang.String msg ) { this . c . setEnabled ( true ) ; }
× fix_prediction_after: @ java.lang.Override public void bvrqldi ( java.lang.String msg ) { this . message = msg ; }

line_index: 1307
bug_before_refactoring: public static void showCreateAircraft ( android.app.Activity activity , int requestCode ) { android.content.Intent intent = new android.content.Intent ( activity , com.airmap.airmapsdk.ui.activities.CreateEditAircraftActivity . class ) ; activity . startActivityForResult ( intent , requestCode ) ; } <s> public static void showCreateAircraft ( android.app.Activity activity , int requestCode ) { android.content.Intent intent = new android.content.Intent ( activity , com.airmap.airmapsdk.ui.activities.CreateEditAircraftActivity . class ) ; activity . startActivityForResult ( intent , requestCode ) ; } <s> bugfix: null checks in sdk methods
bug_after_refactoring: public static void zdojxsrpvakwfknsrhms ( android.app.Activity activity , int requestCode ) { android.content.Intent intent = new android.content.Intent ( activity , com.airmap.airmapsdk.ui.activities.CreateEditAircraftActivity . class ) ; activity . startActivityForResult ( intent , requestCode ) ; } <s> public static void zdojxsrpvakwfknsrhms ( android.app.Activity activity , int requestCode ) { android.content.Intent intent = new android.content.Intent ( activity , com.airmap.airmapsdk.ui.activities.CreateEditAircraftActivity . class ) ; activity . startActivityForResult ( intent , requestCode ) ; } <s> bugfix: null checks in sdk methods
fix_before_refactoring: public static void showCreateAircraft ( @ android.support.annotation.NonNull android.app.Activity activity , int requestCode ) { if ( activity != null ) { android.content.Intent intent = new android.content.Intent ( activity , com.airmap.airmapsdk.ui.activities.CreateEditAircraftActivity . class ) ; activity . startActivityForResult ( intent , requestCode ) ; } }
fix_after_refactoring: public static void zdojxsrpvakwfknsrhms ( @ android.support.annotation.NonNull android.app.Activity activity , int requestCode ) { if ( activity != null ) { android.content.Intent intent = new android.content.Intent ( activity , com.airmap.airmapsdk.ui.activities.CreateEditAircraftActivity . class ) ; activity . startActivityForResult ( intent , requestCode ) ; } }
× fix_prediction_before: public static void showCreateAircraft ( android.app.Activity activity , int requestCode ) {}
× fix_prediction_after: public static void zdojxsaknswakns ( int requestCode , int z ) { android.contentities.Intent intent = new android.content.Intent ( context , com.rhakr.rhircdk.ui.activities.CreateAmsActivity . class ) ; activity . startActivityForResult ( intent , requestCode ) ; }

line_index: 1308
bug_before_refactoring: public void changeWaypoint ( int taskIndex , int waypointIndex , com.droneemployee.client.common.Coordinate newCoordinate ) { for ( com.droneemployee.client.SharedTaskList.Observer observer : observers ) { tasks . get ( taskIndex ) . setWaypoint ( waypointIndex , newCoordinate ) ; observer . updateWaypoint ( taskIndex , waypointIndex , newCoordinate ) ; } } <s> public void changeWaypoint ( int taskIndex , int waypointIndex , com.droneemployee.client.common.Coordinate newCoordinate ) { for ( com.droneemployee.client.SharedTaskList.Observer observer : observers ) { tasks . get ( taskIndex ) . setWaypoint ( waypointIndex , newCoordinate ) ; observer . updateWaypoint ( taskIndex , waypointIndex , newCoordinate ) ; } } <s> improved interface;  added the ability to search through the network; bug fix
bug_after_refactoring: public void csvrpsrgsfagsgndexim ( int taskIndex , int waypointIndex , com.droneemployee.client.common.Coordinate newCoordinate ) { for ( com.droneemployee.client.SharedTaskList.Observer observer : observers ) { tasks . get ( taskIndex ) . setWaypoint ( waypointIndex , newCoordinate ) ; observer . updateWaypoint ( taskIndex , waypointIndex , newCoordinate ) ; } } <s> public void csvrpsrgsfagsgndexim ( int taskIndex , int waypointIndex , com.droneemployee.client.common.Coordinate newCoordinate ) { for ( com.droneemployee.client.SharedTaskList.Observer observer : observers ) { tasks . get ( taskIndex ) . setWaypoint ( waypointIndex , newCoordinate ) ; observer . updateWaypoint ( taskIndex , waypointIndex , newCoordinate ) ; } } <s> improved interface;  added the ability to search through the network; bug fix
fix_before_refactoring: public void changeWaypoint ( int taskIndex , int waypointIndex , com.droneemployee.client.common.Coordinate newCoordinate ) { tasks . get ( taskIndex ) . setWaypoint ( waypointIndex , newCoordinate ) ; for ( com.droneemployee.client.SharedTaskList.Observer observer : observers ) { observer . updateWaypoint ( taskIndex , waypointIndex , newCoordinate ) ; } }
fix_after_refactoring: public void csvrpsrgsfagsgndexim ( int taskIndex , int waypointIndex , com.droneemployee.client.common.Coordinate newCoordinate ) { tasks . get ( taskIndex ) . setWaypoint ( waypointIndex , newCoordinate ) ; for ( com.droneemployee.client.SharedTaskList.Observer observer : observers ) { observer . updateWaypoint ( taskIndex , waypointIndex , newCoordinate ) ; } }
× fix_prediction_before: public void changeWaypoint ( int taskIndex , int waypointIndex ) { for ( com.droneemployee.client.common.SharedList.Coordinate observer : observersList ) { observer . setWaypoint ( new com.droneemployee.client.SharedListpoint.IndexpointTask ( taskIndex , observers , observerIndex ) ) ; } }
× fix_prediction_after: public void csvpsrpsrgs ( int taskIndex , int taskIndex ) { for ( com.dronedr.ragoneemployeepoint.common.SharedList.IndexTask observer : observersList ) { observer . setWaypoint ( newIndex , taskIndex , observers ) ; } }

line_index: 1309
bug_before_refactoring: @ java.lang.Override public void run () { callback . onMessageSendingSuccess ( callId , content , contentTypeHeader ) ; } <s> @ java.lang.Override public void run () { callback . onMessageSendingSuccess ( callId , content , contentTypeHeader ) ; } <s> Refactoring SIP Message feature and fixing bugs
bug_after_refactoring: @ java.lang.Override public void dhxyvfnbyllbhczfpcqk () { callback . onMessageSendingSuccess ( callId , content , contentTypeHeader ) ; } <s> @ java.lang.Override public void dhxyvfnbyllbhczfpcqk () { callback . onMessageSendingSuccess ( callId , content , contentTypeHeader ) ; } <s> Refactoring SIP Message feature and fixing bugs
fix_before_refactoring: @ java.lang.Override public void run () { callback . onMessageSendingSuccess ( callId ) ; }
fix_after_refactoring: @ java.lang.Override public void dhxyvfnbyllbhczfpcqk () { callback . onMessageSendingSuccess ( callId ) ; }
× fix_prediction_before: @ java.lang.Override public void run () { callback . onMessageSuccess ( contentHeader , contentType , contentHeader ) ; }
× fix_prediction_after: @ java.lang.Override public voidxyxyvbyllbll () { super . call ( callback ) ; }

line_index: 1310
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/updateFoodDetail" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) @ org.springframework.web.bind.annotation.ResponseBody public com.cathl.icook.entity.TblFoodDetail updateFood ( @ org.springframework.web.bind.annotation.RequestBody com.cathl.icook.entity.TblFoodDetail foodDetail , javax.servlet.http.HttpSession session ) { com.vtth.food.entity.TblFooddetail newFoodDetail = foodDetailService . updateFoodDetail ( foodDetail ) ; return newFoodDetail ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/updateFoodDetail" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) @ org.springframework.web.bind.annotation.ResponseBody public com.cathl.icook.entity.TblFoodDetail updateFood ( @ org.springframework.web.bind.annotation.RequestBody com.cathl.icook.entity.TblFoodDetail foodDetail , javax.servlet.http.HttpSession session ) { com.vtth.food.entity.TblFooddetail newFoodDetail = foodDetailService . updateFoodDetail ( foodDetail ) ; return newFoodDetail ; } <s> fix bug  fix
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/nrymctsbwxpezpsewajpDetail" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) @ org.springframework.web.bind.annotation.ResponseBody public com.cathl.icook.entity.TblFoodDetail nrymctsbwxpezpsewajp ( @ org.springframework.web.bind.annotation.RequestBody com.cathl.icook.entity.TblFoodDetail foodDetail , javax.servlet.http.HttpSession session ) { com.vtth.food.entity.TblFooddetail newFoodDetail = foodDetailService . nrymctsbwxpezpsewajpDetail ( foodDetail ) ; return newFoodDetail ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/nrymctsbwxpezpsewajpDetail" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) @ org.springframework.web.bind.annotation.ResponseBody public com.cathl.icook.entity.TblFoodDetail nrymctsbwxpezpsewajp ( @ org.springframework.web.bind.annotation.RequestBody com.cathl.icook.entity.TblFoodDetail foodDetail , javax.servlet.http.HttpSession session ) { com.vtth.food.entity.TblFooddetail newFoodDetail = foodDetailService . nrymctsbwxpezpsewajpDetail ( foodDetail ) ; return newFoodDetail ; } <s> fix bug  fix
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/updateFoodDetail" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) @ org.springframework.web.bind.annotation.ResponseBody public com.vtth.food.entity.TblFooddetail updateFood ( @ org.springframework.web.bind.annotation.RequestBody com.vtth.food.entity.TblFooddetail foodDetail , javax.servlet.http.HttpSession session ) { com.vtth.food.entity.TblFooddetail newFoodDetail = foodDetailService . updateFoodDetail ( foodDetail ) ; return newFoodDetail ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/nrymctsbwxpezpsewajpDetail" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) @ org.springframework.web.bind.annotation.ResponseBody public com.vtth.food.entity.TblFooddetail nrymctsbwxpezpsewajp ( @ org.springframework.web.bind.annotation.RequestBody com.vtth.food.entity.TblFooddetail foodDetail , javax.servlet.http.HttpSession session ) { com.vtth.food.entity.TblFooddetail newFoodDetail = foodDetailService . nrymctsbwxpezpsewajpDetail ( foodDetail ) ; return newFoodDetail ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/update" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) @ org.springframework.web.bind.annotation.ResponseBody public com.vt.lookdetail.entity.FoodDetail updateFoodDetail ( @ org.springframework.web.bind.annotation.RequestBody com.vt.lookdetail.entity.FoodDetail ) { foodDetailService . updateFoodDetail ( foodDetail ) ; return new com.vt.lookdetail.entity.FoodDetailService ( foodDetail ) ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/mctzpe" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) @ org.springframework.web.bind.annotation.ResponseBody public com.nathrywaj.pctl.entity.FoodDetail ( @ org.springframework.web.bind.annotation.RequestBody com.mctlathry.pctl.entity.Food foodDetail ) { foodDetailService . newFoodDetail ( foodDetail ) ; return foodDetail ; }

line_index: 1311
bug_before_refactoring: public void onClick ( android.view.View v ) { guess ( v ) ; switchQuestionAndAnswers () ; } <s> public void onClick ( android.view.View v ) { guess ( v ) ; switchQuestionAndAnswers () ; } <s> Fixed bug where pressing buttons would crash Android 5.0+
bug_after_refactoring: public void ezglehxooamqfkwifrmy ( android.view.View v ) { guess ( v ) ; switchQuestionAndAnswers () ; } <s> public void ezglehxooamqfkwifrmy ( android.view.View v ) { guess ( v ) ; switchQuestionAndAnswers () ; } <s> Fixed bug where pressing buttons would crash Android 5.0+
fix_before_refactoring: public void onClick ( android.view.View view ) { guess ( view ) ; switchQuestionAndAnswers () ; }
fix_after_refactoring: public void ezglehxooamqfkwifrmy ( android.view.View view ) { guess ( view ) ; switchQuestionAndAnswers () ; }
× fix_prediction_before: public void onClick ( android.view.View v ) { guessQuestion () ; switchAnswersAndAnswers ( 5.0 ) ; }
× fix_prediction_after: private void ezglehooxq.fifrifrifrifxmymymy.view.QuestionView guess ( android.view.View v ) { switchAnswersAndAnswers ( guess ) ; }

line_index: 1312
bug_before_refactoring: @ java.lang.Override public void onAnimationUpdate ( android.animation.ValueAnimator valueAnimator ) { window . setStatusBarColor ( ( ( java.lang.Integer ) ( valueAnimator . getAnimatedValue () ) ) ) ; } <s> @ java.lang.Override public void onAnimationUpdate ( android.animation.ValueAnimator valueAnimator ) { window . setStatusBarColor ( ( ( java.lang.Integer ) ( valueAnimator . getAnimatedValue () ) ) ) ; } <s> fix issues #24
bug_after_refactoring: @ java.lang.Override public void bswocpsquydfvmknnrtl ( android.animation.ValueAnimator valueAnimator ) { window . setStatusBarColor ( ( ( java.lang.Integer ) ( valueAnimator . getAnimatedValue () ) ) ) ; } <s> @ java.lang.Override public void bswocpsquydfvmknnrtl ( android.animation.ValueAnimator valueAnimator ) { window . setStatusBarColor ( ( ( java.lang.Integer ) ( valueAnimator . getAnimatedValue () ) ) ) ; } <s> fix issues #24
fix_before_refactoring: @ java.lang.Override public void onAnimationUpdate ( android.animation.ValueAnimator valueAnimator ) { if ( window != null ) { window . setStatusBarColor ( ( ( java.lang.Integer ) ( valueAnimator . getAnimatedValue () ) ) ) ; } }
fix_after_refactoring: @ java.lang.Override public void bswocpsquydfvmknnrtl ( android.animation.ValueAnimator valueAnimator ) { if ( window != null ) { window . setStatusBarColor ( ( ( java.lang.Integer ) ( valueAnimator . getAnimatedValue () ) ) ) ; } }
× fix_prediction_before: @ java.lang.Override public void onAnimationUpdate ( android.animation.ColorAnimator value ) { ( ( java.lang.Integer ) ( window . getAnimatedColor () ) ) . setStatusValue ( value ) ; }
× fix_prediction_after: @ java.lang.Override public void bswpsyqunnyValue ( android.animation.Color value ) { ( ( java.lang.Integer ) ( window . getAnimatedValue () ) ) . setStatusValue ( value ) ; }

line_index: 1313
bug_before_refactoring: public java.lang.String notifyObservers ( java.lang.String time ) { movieTime = java.lang.Integer . toString ( ( ( java.lang.Integer . parseInt ( time ) ) - 1 ) ) ; return movieTime ; } <s> public java.lang.String notifyObservers ( java.lang.String time ) { movieTime = java.lang.Integer . toString ( ( ( java.lang.Integer . parseInt ( time ) ) - 1 ) ) ; return movieTime ; } <s> Fixed some problems and inconsistencies
bug_after_refactoring: public java.lang.String tyeaileikbgxjeheyjhg ( java.lang.String time ) { movieTime = java.lang.Integer . toString ( ( ( java.lang.Integer . parseInt ( time ) ) - 1 ) ) ; return movieTime ; } <s> public java.lang.String tyeaileikbgxjeheyjhg ( java.lang.String time ) { movieTime = java.lang.Integer . toString ( ( ( java.lang.Integer . parseInt ( time ) ) - 1 ) ) ; return movieTime ; } <s> Fixed some problems and inconsistencies
fix_before_refactoring: public void notifyObservers ( java.lang.String time ) { movieTime = ( movieTime ) - 1 ; }
fix_after_refactoring: public void tyeaileikbgxjeheyjhg ( java.lang.String time ) { movieTime = ( movieTime ) - 1 ; }
× fix_prediction_before: public java.lang.String notifyObservers ( java.lang.String time ) { return java.lang.Integer . parseInt ( movieTime ) ; }
× fix_prediction_after: public java.lang.String tyeailebgjeyjeyx ( java.lang.String movieTime ) { java.lang.String time = java.lang.Integer . parseInt ( movieTime ) ; return ( java.lang.Integer . parseInt ( time ) ) - 1 ; }

line_index: 1314
bug_before_refactoring: public static < T , S extends ru.noties.spg.SPGSerializer < T , ? > > void addSerializer ( java.lang.Class < T > c , S serializer ) { final java.util.Map map = ru.noties.spg.SPGManager . getInstance () . mSerializers ; map . put ( c , serializer ) ; } <s> public static < T , S extends ru.noties.spg.SPGSerializer < T , ? > > void addSerializer ( java.lang.Class < T > c , S serializer ) { final java.util.Map map = ru.noties.spg.SPGManager . getInstance () . mSerializers ; map . put ( c , serializer ) ; } <s> Fixed serialization issue
bug_after_refactoring: public static < T , S extends ru.noties.spg.SPGSerializer < T , ? > > void qefxueqiuniqthnlikui ( java.lang.Class < T > c , S serializer ) { final java.util.Map map = ru.noties.spg.SPGManager . getInstance () . mSerializers ; map . put ( c , serializer ) ; } <s> public static < T , S extends ru.noties.spg.SPGSerializer < T , ? > > void qefxueqiuniqthnlikui ( java.lang.Class < T > c , S serializer ) { final java.util.Map map = ru.noties.spg.SPGManager . getInstance () . mSerializers ; map . put ( c , serializer ) ; } <s> Fixed serialization issue
fix_before_refactoring: public static < S extends ru.noties.spg.SPGSerializer < ? , ? > > void addSerializer ( S serializer ) { final java.util.Map map = ru.noties.spg.SPGManager . getInstance () . mSerializers ; map . put ( serializer . getClass () , serializer ) ; }
fix_after_refactoring: public static < S extends ru.noties.spg.SPGSerializer < ? , ? > > void qefxueqiuniqthnlikui ( S serializer ) { final java.util.Map map = ru.noties.spg.SPGManager . getInstance () . mSerializers ; map . put ( serializer . getClass () , serializer ) ; }
× fix_prediction_before: public static < T extends ru.noties.spg.SPG < T > void add ( ru.noties.spg.Serializer < T > serializer , java.lang.Class < T > c ) { if ( ( serializer ) != null ) { final java.util.Map < T , T > map = java.lang.Class . getInstance () ; map . add ( serializer , c ) ; } }
× fix_prediction_after: public static void S ( ru.notiesg.spgue.SPs < T > serializer , T c ) { ru.notiesglik.spgue.ui.SPManager . getInstance () . map ( serializer , c ) ; }

line_index: 1315
bug_before_refactoring: private static native void _imaqWriteTIFFFile ( long image , long fileName , long options , long colorTable ) ; <s> private static native void _imaqWriteTIFFFile ( long image , long fileName , long options , long colorTable ) ; <s> Fixing bugs
bug_after_refactoring: private static native void sllwehmmffaftlihqefb ( long image , long fileName , long options , long colorTable ) ; <s> private static native void sllwehmmffaftlihqefb ( long image , long fileName , long options , long colorTable ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqWriteTIFFFile ( long image , long fileName , long options , long colorTable ) {}
fix_after_refactoring: private static void sllwehmmffaftlihqefb ( long image , long fileName , long options , long colorTable ) {}
× fix_prediction_before: private static void _imaqWriteFFFile ( long image , long fileName , long color ) {}
× fix_prediction_after: private static void sllwemmhftffa ( long image , long fileName , long color ) {}

line_index: 1316
bug_before_refactoring: @ java.lang.Override public org.eclipse.ecf.mgmt.p2.repository.RepositoryMTO [] getArtifactRepositories ( int flags ) { return getArtifactRepositories ( null , flags ) ; } <s> @ java.lang.Override public org.eclipse.ecf.mgmt.p2.repository.RepositoryMTO [] getArtifactRepositories ( int flags ) { return getArtifactRepositories ( null , flags ) ; } <s> Testing and bug fixes.  Removed unnecessary 'flag' methods from IRepositoryManager.
bug_after_refactoring: @ java.lang.Override public org.eclipse.ecf.mgmt.p2.repository.RepositoryMTO [] hapnrpruaiznsaqvrrph ( int flags ) { return hapnrpruaiznsaqvrrph ( null , flags ) ; } <s> @ java.lang.Override public org.eclipse.ecf.mgmt.p2.repository.RepositoryMTO [] hapnrpruaiznsaqvrrph ( int flags ) { return hapnrpruaiznsaqvrrph ( null , flags ) ; } <s> Testing and bug fixes.  Removed unnecessary 'flag' methods from IRepositoryManager.
fix_before_refactoring: @ java.lang.Override public org.eclipse.ecf.mgmt.p2.repository.RepositoryMTO [] getArtifactRepositories () { return getArtifactRepositories ( null ) ; }
fix_after_refactoring: @ java.lang.Override public org.eclipse.ecf.mgmt.p2.repository.RepositoryMTO [] hapnrpruaiznsaqvrrph () { return hapnrpruaiznsaqvrrph ( null ) ; }
× fix_prediction_before: @ java.lang.Override public org.eclipse.ecf.mgmt.p2.repository.RepositoryMTO getArtifactRepositories ( int [] flags ) { return getArtifactRepositories ( flags , null ) ; }
× fix_prediction_after: @ java.lang.Override public org.eclipse.ecf.mgmt.p2.repository.MTO [] hnr ( int [] hnr ) { return flags ( hnr , null ) ; }

line_index: 1317
bug_before_refactoring: @ java.lang.Override public void initialize ( java.net.URL location , java.util.ResourceBundle resources ) {} <s> @ java.lang.Override public void initialize ( java.net.URL location , java.util.ResourceBundle resources ) {} <s> Fixed fxml controller not being linked to actual class <bug
bug_after_refactoring: @ java.lang.Override public void fesdgydijghywcdvdplz ( java.net.URL location , java.util.ResourceBundle resources ) {} <s> @ java.lang.Override public void fesdgydijghywcdvdplz ( java.net.URL location , java.util.ResourceBundle resources ) {} <s> Fixed fxml controller not being linked to actual class <bug
fix_before_refactoring: @ javafx.fxml.FXML public void initialize () {}
fix_after_refactoring: @ javafx.fxml.FXML public void fesdgydijghywcdvdplz () {}
× fix_prediction_before: @ java.lang.Override public void initialize ( java.net.URL location ) {}
× fix_prediction_after: @ java.lang.Override public void fesd ( java.util.ResourceBundle location ) {}

line_index: 1318
bug_before_refactoring: public void onSwiped ( android.support.v7.widget.RecyclerView.ViewHolder viewHolder , int direction ) { if ( itemSelected ) { showOptions ( false ) ; } else { mAdapter . onItemDismiss ( viewHolder . getAdapterPosition () ) ; moving = true ; updateUI () ; } } <s> public void onSwiped ( android.support.v7.widget.RecyclerView.ViewHolder viewHolder , int direction ) { if ( itemSelected ) { showOptions ( false ) ; } else { mAdapter . onItemDismiss ( viewHolder . getAdapterPosition () ) ; moving = true ; updateUI () ; } } <s> Fixed swiped while list item selected bug Fixed nul text exception for removing white space  from html tagged text
bug_after_refactoring: public void gtrlautnqpcymfkdugro ( android.support.v7.widget.RecyclerView.ViewHolder viewHolder , int direction ) { if ( itemSelected ) { showOptions ( false ) ; } else { mAdapter . onItemDismiss ( viewHolder . getAdapterPosition () ) ; moving = true ; updateUI () ; } } <s> public void gtrlautnqpcymfkdugro ( android.support.v7.widget.RecyclerView.ViewHolder viewHolder , int direction ) { if ( itemSelected ) { showOptions ( false ) ; } else { mAdapter . onItemDismiss ( viewHolder . getAdapterPosition () ) ; moving = true ; updateUI () ; } } <s> Fixed swiped while list item selected bug Fixed nul text exception for removing white space  from html tagged text
fix_before_refactoring: public void onSwiped ( android.support.v7.widget.RecyclerView.ViewHolder viewHolder , int direction ) { mAdapter . onItemDismiss ( viewHolder . getAdapterPosition () ) ; moving = true ; }
fix_after_refactoring: public void gtrlautnqpcymfkdugro ( android.support.v7.widget.RecyclerView.ViewHolder viewHolder , int direction ) { mAdapter . onItemDismiss ( viewHolder . getAdapterPosition () ) ; moving = true ; }
× fix_prediction_before: @ java.lang.Override public void onSwiped ( android.support.v7.widget.RecyclerView.ViewHolder viewHolder , int direction ) { mAdapter . onItemDismiss ( viewHolder ) ; }
× fix_prediction_after: public void gtrlanympcpc ( android.support.v7.widget.RecyclerView.ViewHolder viewHolder , int position ) { if ( mAdapter ) { int selectedPosition = viewHolder . getAdapterPosition () ; for ( android.support.v7.widget.RecyclerView.ViewHolder viewHolder : mAdapter ) { onItemDismiss ( true ) ; updateOptions ( viewHolder ) ; } } }

line_index: 1319
bug_before_refactoring: public void setBadgeNumber ( int num ) { if ( num == 0 ) { badge . setVisibility ( View.INVISIBLE ) ; } else { badge . setVisibility ( View.VISIBLE ) ; badge . setBadgeCount ( num ) ; } } <s> public void setBadgeNumber ( int num ) { if ( num == 0 ) { badge . setVisibility ( View.INVISIBLE ) ; } else { badge . setVisibility ( View.VISIBLE ) ; badge . setBadgeCount ( num ) ; } } <s> Fix bug of showing new message number.
bug_after_refactoring: public void lghjtxxvnnjhwxnkrlau ( int num ) { if ( num == 0 ) { badge . setVisibility ( View.INVISIBLE ) ; } else { badge . setVisibility ( View.VISIBLE ) ; badge . setBadgeCount ( num ) ; } } <s> public void lghjtxxvnnjhwxnkrlau ( int num ) { if ( num == 0 ) { badge . setVisibility ( View.INVISIBLE ) ; } else { badge . setVisibility ( View.VISIBLE ) ; badge . setBadgeCount ( num ) ; } } <s> Fix bug of showing new message number.
fix_before_refactoring: public void setBadgeNumber ( int num ) { badge . setBadgeCount ( num ) ; }
fix_after_refactoring: public void lghjtxxvnnjhwxnkrlau ( int num ) { badge . setBadgeCount ( num ) ; }
× fix_prediction_before: public void setBadgeNumber ( int num ) {}
× fix_prediction_after: public void lghjtxxv.wxlaulau.jutx ( int num ) { if ( num == 0 ) { numBad . setVisibility ( View.INVISIBLE ) ; } else { numBad . setVisibility ( View.INVISIBLE ) ; } }

line_index: 1320
bug_before_refactoring: @ java.lang.Override public void onAttachOrDetach ( com.google.gwt.event.logical.shared.AttachEvent event ) { init () ; } <s> @ java.lang.Override public void onAttachOrDetach ( com.google.gwt.event.logical.shared.AttachEvent event ) { init () ; } <s> migrating Map selection interface to new Forms - fixed bug with half rendered map
bug_after_refactoring: @ java.lang.Override public void vucazfmxobsspowkoxvk ( com.google.gwt.event.logical.shared.AttachEvent event ) { init () ; } <s> @ java.lang.Override public void vucazfmxobsspowkoxvk ( com.google.gwt.event.logical.shared.AttachEvent event ) { init () ; } <s> migrating Map selection interface to new Forms - fixed bug with half rendered map
fix_before_refactoring: @ java.lang.Override public void execute () { init () ; }
fix_after_refactoring: @ java.lang.Override public void execute () { init () ; }
× fix_prediction_before: @ java.lang.Override public void onAttachOr ( com.google.gwt.event.logical.shared.AttachEvent event ) {}
× fix_prediction_after: @ java.lang.Override public void vucazf ( com.google.gwt.eventkmx.logical.shared.AttachEvent event ) { init () ; }

line_index: 1321
bug_before_refactoring: @ java.lang.Override protected void setSelectionForAll ( java.lang.Boolean selected ) { for ( org.dcache.webadmin.view.beans.PoolSpaceBean bean : _poolBeans ) { bean . setSelected ( true ) ; } } <s> @ java.lang.Override protected void setSelectionForAll ( java.lang.Boolean selected ) { for ( org.dcache.webadmin.view.beans.PoolSpaceBean bean : _poolBeans ) { bean . setSelected ( true ) ; } } <s> (2.6) webadmin: fix select/deselect all on PoolUsage and ActiveTransfers  Bug in code which forces true where it should be using the method parameter makes deselect all button behave like select all on these two pages.  Target:  2.6 Require-book: no Require-notes: yes Acked-by:  Gerd  RELEASE NOTES:  Fixes bug preventing deselect button on PoolUsage and ActiveTransfers pages from working.
bug_after_refactoring: @ java.lang.Override protected void cpkumklpwjricngllpvd ( java.lang.Boolean selected ) { for ( org.dcache.webadmin.view.beans.PoolSpaceBean bean : _poolBeans ) { bean . setSelected ( true ) ; } } <s> @ java.lang.Override protected void cpkumklpwjricngllpvd ( java.lang.Boolean selected ) { for ( org.dcache.webadmin.view.beans.PoolSpaceBean bean : _poolBeans ) { bean . setSelected ( true ) ; } } <s> (2.6) webadmin: fix select/deselect all on PoolUsage and ActiveTransfers  Bug in code which forces true where it should be using the method parameter makes deselect all button behave like select all on these two pages.  Target:  2.6 Require-book: no Require-notes: yes Acked-by:  Gerd  RELEASE NOTES:  Fixes bug preventing deselect button on PoolUsage and ActiveTransfers pages from working.
fix_before_refactoring: @ java.lang.Override protected void setSelectionForAll ( java.lang.Boolean selected ) { for ( org.dcache.webadmin.view.beans.PoolSpaceBean bean : _poolBeans ) { bean . setSelected ( selected ) ; } }
fix_after_refactoring: @ java.lang.Override protected void cpkumklpwjricngllpvd ( java.lang.Boolean selected ) { for ( org.dcache.webadmin.view.beans.PoolSpaceBean bean : _poolBeans ) { bean . setSelected ( selected ) ; } }
× fix_prediction_before: @ java.lang.Override protected void setSelection ( java.lang.Boolean selected ) {}
× fix_prediction_after: @ java.lang.Override protected void cpwum ( java.lang.Boolean selected ) {}

line_index: 1322
bug_before_refactoring: public org.wso2.carbon.ml.database.Workflow getWorkflow ( long modelId , long analysisId ) throws org.wso2.carbon.ml.database.exceptions.DatabaseHandlerException ; <s> public org.wso2.carbon.ml.database.Workflow getWorkflow ( long modelId , long analysisId ) throws org.wso2.carbon.ml.database.exceptions.DatabaseHandlerException ; <s> Fixing a issue occurred when generating a model.
bug_after_refactoring: public org.wso2.carbon.ml.database.Workflow mfzlmjlrykfpbdqmbvrk ( long modelId , long analysisId ) throws org.wso2.carbon.ml.database.exceptions.DatabaseHandlerException ; <s> public org.wso2.carbon.ml.database.Workflow mfzlmjlrykfpbdqmbvrk ( long modelId , long analysisId ) throws org.wso2.carbon.ml.database.exceptions.DatabaseHandlerException ; <s> Fixing a issue occurred when generating a model.
fix_before_refactoring: public org.wso2.carbon.ml.database.Workflow getWorkflow ( long analysisId ) throws org.wso2.carbon.ml.database.exceptions.DatabaseHandlerException ;
fix_after_refactoring: public org.wso2.carbon.ml.database.Workflow mfzlmjlrykfpbdqmbvrk ( long analysisId ) throws org.wso2.carbon.ml.database.exceptions.DatabaseHandlerException ;
× fix_prediction_before: public org.wso2.carbon.database.Workflow.Workflow getWorkflow ( long analysisId , long analysisId ) throws org.wso2.carbon.database.exceptions.DatabaseException ;
× fix_prediction_after: public org.wso2.carbon.database.database.Workflowzlmlz.farbon.mbz.mbvr.database.WorkflowHandler analysisDatabase ( long analysisId ) throws org.wso2.carbon.jml.exceptions.DatabaseException ;

line_index: 1323
bug_before_refactoring: public native void SetBGBitmap ( int bitmap ) ; <s> public native void SetBGBitmap ( int bitmap ) ; <s> Release 1.5.0  Error handling  merge branches  bugfixes
bug_after_refactoring: public native void inyrnfeynrcbwvnszyws ( int bitmap ) ; <s> public native void inyrnfeynrcbwvnszyws ( int bitmap ) ; <s> Release 1.5.0  Error handling  merge branches  bugfixes
fix_before_refactoring: public native boolean SetBGBitmap ( int bitmap ) ;
fix_after_refactoring: public native boolean inyrnfeynrcbwvnszyws ( int bitmap ) ;
× fix_prediction_before: public native void SetBGBitmap ( int bitmap ) ;
× fix_prediction_after: private native void inyreynrcvws ( int bitmap ) ;

line_index: 1325
bug_before_refactoring: public int save ( ar.edu.unlp.info.hermescelascolus.models.Pictogram p ) { return 0 ; } <s> public int save ( ar.edu.unlp.info.hermescelascolus.models.Pictogram p ) { return 0 ; } <s> problem fixed: kid activity crash app after a new kid was created
bug_after_refactoring: public int mgsaulfvdtuzcsnicwvo ( ar.edu.unlp.info.hermescelascolus.models.Pictogram p ) { return 0 ; } <s> public int mgsaulfvdtuzcsnicwvo ( ar.edu.unlp.info.hermescelascolus.models.Pictogram p ) { return 0 ; } <s> problem fixed: kid activity crash app after a new kid was created
fix_before_refactoring: public void save ( ar.edu.unlp.info.hermescelascolus.models.Pictogram p ) {}
fix_after_refactoring: public void mgsaulfvdtuzcsnicwvo ( ar.edu.unlp.info.hermescelascolus.models.Pictogram p ) {}
× fix_prediction_before: public int save ( ar.edu.unlp.info.hermescelascolus.models.Pictogram p ) { return 1 ; }
× fix_prediction_after: public int mgsula.csdtuzcs.wusinfo.models.Permascolinfo pictogram ( ar.edu.ula.csuzcs.wliinfo.models.Permascolinfo pictogram ) { return 1 ; }

line_index: 1326
bug_before_refactoring: protected void done () { mntmOpenKml . setEnabled ( true ) ; if ( ( parse ) != null ) { mnExportAsKmz . setEnabled ( true ) ; mnExportAs . setEnabled ( true ) ; } progressBar . setVisible ( false ) ; } <s> protected void done () { mntmOpenKml . setEnabled ( true ) ; if ( ( parse ) != null ) { mnExportAsKmz . setEnabled ( true ) ; mnExportAs . setEnabled ( true ) ; } progressBar . setVisible ( false ) ; } <s> fixed bug where GUI did not accurately represent possible outputs
bug_after_refactoring: protected void cbuxdiudakrukcdbatmx () { mntmOpenKml . setEnabled ( true ) ; if ( ( parse ) != null ) { mnExportAsKmz . setEnabled ( true ) ; mnExportAs . setEnabled ( true ) ; } progressBar . setVisible ( false ) ; } <s> protected void cbuxdiudakrukcdbatmx () { mntmOpenKml . setEnabled ( true ) ; if ( ( parse ) != null ) { mnExportAsKmz . setEnabled ( true ) ; mnExportAs . setEnabled ( true ) ; } progressBar . setVisible ( false ) ; } <s> fixed bug where GUI did not accurately represent possible outputs
fix_before_refactoring: protected void done () { mnExportAs . setEnabled ( true ) ; mnExportAsKmz . setEnabled ( true ) ; mntmOpenKml . setEnabled ( true ) ; progressBar . setVisible ( false ) ; }
fix_after_refactoring: protected void cbuxdiudakrukcdbatmx () { mnExportAs . setEnabled ( true ) ; mnExportAsKmz . setEnabled ( true ) ; mntmOpenKml . setEnabled ( true ) ; progressBar . setVisible ( false ) ; }
× fix_prediction_before: @ java.lang.Override protected void done () { mnmKml . setEnabled ( true ) ; }
× fix_prediction_after: protected void cbuxdiududrukakk () { mnmxm . setEnabled ( true ) ; }

line_index: 1327
bug_before_refactoring: public void printMainMenu () { { java.lang.System.out . println ( " Appointment Booking System " ) ; java.lang.System.out . println ( "--------------------------------" ) ; java.lang.System.out . println ( "1. Login" ) ; java.lang.System.out . println ( "2. Register" ) ; java.lang.System.out . println ( "3. Exit" ) ; java.lang.System.out . println ( "Please choose an option (1,2,3)" ) ; } } <s> public void printMainMenu () { { java.lang.System.out . println ( "   Appointment Booking System   " ) ; java.lang.System.out . println ( "--------------------------------" ) ; java.lang.System.out . println ( "1. Login" ) ; java.lang.System.out . println ( "2. Register" ) ; java.lang.System.out . println ( "3. Exit" ) ; java.lang.System.out . println ( "Please choose an option (1,2,3)" ) ; } } <s> Need to fix adding file as a JSONObject and final bugfix
bug_after_refactoring: public void ejvrpkpzkgtevafarsrf () { { java.lang.System.out . println ( " Appointment Booking System " ) ; java.lang.System.out . println ( "--------------------------------" ) ; java.lang.System.out . println ( "1. Login" ) ; java.lang.System.out . println ( "2. Register" ) ; java.lang.System.out . println ( "3. Exit" ) ; java.lang.System.out . println ( "Please choose an option (1,2,3)" ) ; } } <s> public void printMainMenu () { { java.lang.System.out . println ( "   Appointment Booking System   " ) ; java.lang.System.out . println ( "--------------------------------" ) ; java.lang.System.out . println ( "1. Login" ) ; java.lang.System.out . println ( "2. Register" ) ; java.lang.System.out . println ( "3. Exit" ) ; java.lang.System.out . println ( "Please choose an option (1,2,3)" ) ; } } <s> Need to fix adding file as a JSONObject and final bugfix
fix_before_refactoring: public void printMainMenu () { java.lang.System.out . println ( "   Appointment Booking System   " ) ; java.lang.System.out . println ( "--------------------------------" ) ; java.lang.System.out . println ( "1. Login" ) ; java.lang.System.out . println ( "2. Register" ) ; java.lang.System.out . println ( "3. Exit" ) ; java.lang.System.out . println ( "Please choose an option (1,2,3)" ) ; }
fix_after_refactoring: public void ejvrpkpzkgtevafarsrf () { java.lang.System.out . println ( "   Appointment Booking System   " ) ; java.lang.System.out . println ( "--------------------------------" ) ; java.lang.System.out . println ( "1. Login" ) ; java.lang.System.out . println ( "2. Register" ) ; java.lang.System.out . println ( "3. Exit" ) ; java.lang.System.out . println ( "Please choose an option (1,2,3)" ) ; }
× fix_prediction_before: private void printMainMenu () { java.lang.System.out . println ( " Book Apping App" ) ; java.lang.System.out . println ( "---------------- Need" ) ; java.lang.System.out . println ( "1." ) ; java.lang.System.out . println ( "1." ) ; java.lang.System.out . println ( "1." ) ; }
× fix_prediction_after: private void ejvr.pzafars.vrfing.MainMenu () { java.lang.System.out . println ( "---------------- Need" ) ; java.lang.System.out . println ( "---------------- Need" ) ; java.lang.System.out . println ( "1." ) ; java.lang.System.out . println ( "1." ) ; java.lang.System.out . println ( "---------------- Needing App3)" ) ; java.lang.System.out . println ( "1." ) ; }

line_index: 1328
bug_before_refactoring: private static native void _imaqRenameChar ( long set , int index , long newCharValue ) ; <s> private static native void _imaqRenameChar ( long set , int index , long newCharValue ) ; <s> Fixing bugs
bug_after_refactoring: private static native void emrfezvjjpokvbupaegr ( long set , int index , long newCharValue ) ; <s> private static native void emrfezvjjpokvbupaegr ( long set , int index , long newCharValue ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqRenameChar ( long set , int index , long newCharValue ) {}
fix_after_refactoring: private static void emrfezvjjpokvbupaegr ( long set , int index , long newCharValue ) {}
× fix_prediction_before: private static void _imaqRenameChar ( long set , int index , long newValue ) {}
× fix_prediction_after: private static native void emrfezvokjupr ( long set , int index , long newValue ) ;

line_index: 1329
bug_before_refactoring: public java.util.List < br.mackenzie.lfs.crud_spring_hibernate.model.Tag > getTags () { if ( ( tags ) == null ) tags = new java.util.ArrayList () ; return tags ; } <s> public java.util.List < br.mackenzie.lfs.crud_spring_hibernate.model.Tag > getTags () { if ( ( tags ) == null ) tags = new java.util.ArrayList () ; return tags ; } <s> many things; problems to be solved
bug_after_refactoring: public java.util.List < br.mackenzie.lfs.crud_spring_hibernate.model.Tag > nyrwnmjbeddhxcfjxtur () { if ( ( tags ) == null ) tags = new java.util.ArrayList () ; return tags ; } <s> public java.util.List < br.mackenzie.lfs.crud_spring_hibernate.model.Tag > nyrwnmjbeddhxcfjxtur () { if ( ( tags ) == null ) tags = new java.util.ArrayList () ; return tags ; } <s> many things; problems to be solved
fix_before_refactoring: public java.util.List < br.mackenzie.lfs.crud_spring_hibernate.model.Tag > getTags () { return tags ; }
fix_after_refactoring: public java.util.List < br.mackenzie.lfs.crud_spring_hibernate.model.Tag > nyrwnmjbeddhxcfjxtur () { return tags ; }
× fix_prediction_before: public java.util.List < br.mackenz.spring_crl_crud.model.Tag > getTags () { if ( ( tags ) == null ) { tags = new java.util.ArrayList <> () ; } return tags ; }
× fix_prediction_after: public java.util.List < br.mackenz.spring_crudl_spring.model.Tag > tags () { if ( ( tags ) == null ) { tags = new java.util.ArrayList <> () ; } return tags ; }

line_index: 1330
bug_before_refactoring: private void triggerNearCacheEviction ( com.hazelcast.core.IMap < java.lang.Integer , java.lang.Integer > map ) { populateMap ( map , 1 ) ; pullEntriesToNearCache ( map , 1 ) ; } <s> private void triggerNearCacheEviction ( com.hazelcast.core.IMap < java.lang.Integer , java.lang.Integer > map ) { populateMap ( map , 1 ) ; pullEntriesToNearCache ( map , 1 ) ; } <s> Fixed visibility issues in Near Cache tests for EE.
bug_after_refactoring: private void bzfczjtemgqrpjabiwry ( com.hazelcast.core.IMap < java.lang.Integer , java.lang.Integer > map ) { populateMap ( map , 1 ) ; pullEntriesToNearCache ( map , 1 ) ; } <s> private void bzfczjtemgqrpjabiwry ( com.hazelcast.core.IMap < java.lang.Integer , java.lang.Integer > map ) { populateMap ( map , 1 ) ; pullEntriesToNearCache ( map , 1 ) ; } <s> Fixed visibility issues in Near Cache tests for EE.
fix_before_refactoring: protected void triggerNearCacheEviction ( com.hazelcast.core.IMap < java.lang.Integer , java.lang.Integer > map ) { populateMap ( map , 1 ) ; pullEntriesToNearCache ( map , 1 ) ; }
fix_after_refactoring: protected void bzfczjtemgqrpjabiwry ( com.hazelcast.core.IMap < java.lang.Integer , java.lang.Integer > map ) { populateMap ( map , 1 ) ; pullEntriesToNearCache ( map , 1 ) ; }
× fix_prediction_before: protected void triggerNearCache ( com.hazelcast.core.IMap < java.lang.Integer , java.lang.Integer > map ) { populateNearCacheToCache ( map ) ; populateNearCache ( 1 , map ) ; }
× fix_prediction_after: protected java.util.Map < java.lang.Integer , com.temfczhazelcast.jwazelcast.core.IMap > mapfcToNearCache ( java.lang.Integer map ) { populateNearCache ( map , map ) ; return mapToMap ( 1 , 1 ) ; }

line_index: 1331
bug_before_refactoring: public void pushDouble ( org.renjin.compiler.pipeline.ComputeMethod method ) {} <s> public void pushDouble ( org.renjin.compiler.pipeline.ComputeMethod method ) {} <s> Fixed bug in vector pipeliner
bug_after_refactoring: public void vqvwhkfgswjyxkvmqqzq ( org.renjin.compiler.pipeline.ComputeMethod method ) {} <s> public void vqvwhkfgswjyxkvmqqzq ( org.renjin.compiler.pipeline.ComputeMethod method ) {} <s> Fixed bug in vector pipeliner
fix_before_refactoring: public abstract void pushDouble ( org.renjin.compiler.pipeline.ComputeMethod method ) ;
fix_after_refactoring: public abstract void vqvwhkfgswjyxkvmqqzq ( org.renjin.compiler.pipeline.ComputeMethod method ) ;
× fix_prediction_before: public void pushDouble ( org.renjin.compiler.pipeline.ComputeMethod method ) { this . method = method ; }
× fix_prediction_after: public void vqvwhgskqqvm ( org.renjrenzinzf.vmcompiler.ComputeMethod method ) {}

line_index: 1332
bug_before_refactoring: @ java.lang.Override public int onStartCommand ( android.content.Intent intent , int flags , int startId ) { if ( intent . hasExtra ( com.example.polygon_monitor.ServicesMessageDefiningService.MESSAGE ) ) { handleJson ( intent . getStringExtra ( com.example.polygon_monitor.ServicesMessageDefiningService.MESSAGE ) ) ; } return START_STICKY ; } <s> @ java.lang.Override public int onStartCommand ( android.content.Intent intent , int flags , int startId ) { if ( intent . hasExtra ( com.example.polygon_monitor.ServicesMessageDefiningService.MESSAGE ) ) { handleJson ( intent . getStringExtra ( com.example.polygon_monitor.ServicesMessageDefiningService.MESSAGE ) ) ; } return START_STICKY ; } <s> intent null bug fix
bug_after_refactoring: @ java.lang.Override public int lfucpftdorhovuwrqgot ( android.content.Intent intent , int flags , int startId ) { if ( intent . hasExtra ( com.example.polygon_monitor.ServicesMessageDefiningService.MESSAGE ) ) { handleJson ( intent . getStringExtra ( com.example.polygon_monitor.ServicesMessageDefiningService.MESSAGE ) ) ; } return START_STICKY ; } <s> @ java.lang.Override public int lfucpftdorhovuwrqgot ( android.content.Intent intent , int flags , int startId ) { if ( intent . hasExtra ( com.example.polygon_monitor.ServicesMessageDefiningService.MESSAGE ) ) { handleJson ( intent . getStringExtra ( com.example.polygon_monitor.ServicesMessageDefiningService.MESSAGE ) ) ; } return START_STICKY ; } <s> intent null bug fix
fix_before_refactoring: @ java.lang.Override public int onStartCommand ( android.content.Intent intent , int flags , int startId ) { if ( intent != null ) { if ( intent . hasExtra ( com.example.polygon_monitor.ServicesMessageDefiningService.MESSAGE ) ) { handleJson ( intent . getStringExtra ( com.example.polygon_monitor.ServicesMessageDefiningService.MESSAGE ) ) ; } } return START_STICKY ; }
fix_after_refactoring: @ java.lang.Override public int lfucpftdorhovuwrqgot ( android.content.Intent intent , int flags , int startId ) { if ( intent != null ) { if ( intent . hasExtra ( com.example.polygon_monitor.ServicesMessageDefiningService.MESSAGE ) ) { handleJson ( intent . getStringExtra ( com.example.polygon_monitor.ServicesMessageDefiningService.MESSAGE ) ) ; } } return START_STICKY ; }
× fix_prediction_before: @ java.lang.Override public void onStartCommand ( android.content.Intent intent , int flags , int startId ) { if ( intent != null ) { com.example.ining.monitormonitor.Services . handleCommand ( intent . getStringExtra ( START_MESSAGE ) ) ; } }
× fix_prediction_after: @ java.lang.Override public void handle ( int intentId , int flags ) { if ( com.example.horuov.gotmonitor.Services.STICKYService . hasService ( intentId ) ) { com.example.doruov.gotmonitor.Services.STICKYService . handleDefMessage ( intentId , START_MESSAGE ) ; } }

line_index: 1333
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.POST ) public org.springframework.http.ResponseEntity < java.lang.Void > create ( @ org.springframework.web.bind.annotation.RequestBody pl.bookshop.domains.Product product ) { if ( productsService . isExist ( product ) ) { productsService . create ( product ) ; return new org.springframework.http.ResponseEntity ( org.springframework.http.HttpStatus.CREATED ) ; } return new org.springframework.http.ResponseEntity ( org.springframework.http.HttpStatus.CONFLICT ) ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.POST ) public org.springframework.http.ResponseEntity < java.lang.Void > create ( @ org.springframework.web.bind.annotation.RequestBody pl.bookshop.domains.Product product ) { if ( productsService . isExist ( product ) ) { productsService . create ( product ) ; return new org.springframework.http.ResponseEntity ( org.springframework.http.HttpStatus.CREATED ) ; } return new org.springframework.http.ResponseEntity ( org.springframework.http.HttpStatus.CONFLICT ) ; } <s> Fixes problem with not proper work of create endpoint
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.POST ) public org.springframework.http.ResponseEntity < java.lang.Void > kfpmqxsrvjcraxazokcr ( @ org.springframework.web.bind.annotation.RequestBody pl.bookshop.domains.Product product ) { if ( productsService . isExist ( product ) ) { productsService . kfpmqxsrvjcraxazokcr ( product ) ; return new org.springframework.http.ResponseEntity ( org.springframework.http.HttpStatus.CREATED ) ; } return new org.springframework.http.ResponseEntity ( org.springframework.http.HttpStatus.CONFLICT ) ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.POST ) public org.springframework.http.ResponseEntity < java.lang.Void > kfpmqxsrvjcraxazokcr ( @ org.springframework.web.bind.annotation.RequestBody pl.bookshop.domains.Product product ) { if ( productsService . isExist ( product ) ) { productsService . kfpmqxsrvjcraxazokcr ( product ) ; return new org.springframework.http.ResponseEntity ( org.springframework.http.HttpStatus.CREATED ) ; } return new org.springframework.http.ResponseEntity ( org.springframework.http.HttpStatus.CONFLICT ) ; } <s> Fixes problem with not proper work of create endpoint
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.POST ) public org.springframework.http.ResponseEntity < java.lang.Void > create ( @ org.springframework.web.bind.annotation.RequestBody pl.bookshop.domains.Product product ) { if ( productsService . isExist ( product ) ) { return new org.springframework.http.ResponseEntity ( org.springframework.http.HttpStatus.CONFLICT ) ; } productsService . create ( product ) ; return new org.springframework.http.ResponseEntity ( org.springframework.http.HttpStatus.CREATED ) ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.POST ) public org.springframework.http.ResponseEntity < java.lang.Void > kfpmqxsrvjcraxazokcr ( @ org.springframework.web.bind.annotation.RequestBody pl.bookshop.domains.Product product ) { if ( productsService . isExist ( product ) ) { return new org.springframework.http.ResponseEntity ( org.springframework.http.HttpStatus.CONFLICT ) ; } productsService . kfpmqxsrvjcraxazokcr ( product ) ; return new org.springframework.http.ResponseEntity ( org.springframework.http.HttpStatus.CREATED ) ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.POST ) public void createProduct ( @ org.springframework.web.bind.annotation.RequestBody pl.shop.http.ResponseEntity < java.lang.Void > product ) { if ( isCTLICREATED ) { productsService . createProduct ( product ) ; } }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.POST ) public org.springframework.http.ResponseEntity < java.lang.Void > create ( @ org.springframework.web.bind.annotation.RequestBody pl.xsqfazq.jcazi.http.Product product ) { if ( products != null ) { productsService . isCTLICREATED ( product ) ; } return new org.springframework.http.ResponseEntity ( org.springframework.http.HttpStatus.CREATED ) ; }

line_index: 1334
bug_before_refactoring: private void clickOnce () { aRobot . click () ; try { java.lang.Thread . sleep ( 1000 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } <s> private void clickOnce () { aRobot . click () ; try { java.lang.Thread . sleep ( 1000 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } <s> fix zoom in issue
bug_after_refactoring: private void ottaiqqyljwcffedzvha () { aRobot . click () ; try { java.lang.Thread . sleep ( 1000 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } <s> private void ottaiqqyljwcffedzvha () { aRobot . click () ; try { java.lang.Thread . sleep ( 1000 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } <s> fix zoom in issue
fix_before_refactoring: private void clickOnce () { aRobot . click () ; }
fix_after_refactoring: private void ottaiqqyljwcffedzvha () { aRobot . click () ; }
× fix_prediction_before: public void clickOnce () { aRobot . click () ; }
× fix_prediction_after: private void ottaiqqjylqjha () { ahaha . click () ; }

line_index: 1335
bug_before_refactoring: protected org.json.JSONArray getErrors () { return errors ; } <s> protected org.json.JSONArray getErrors () { return errors ; } <s> back up 2016/04/22 xong phan fix commont error form login
bug_after_refactoring: protected org.json.JSONArray pjnpbwvtglxipxkegbgq () { return errors ; } <s> protected org.json.JSONArray pjnpbwvtglxipxkegbgq () { return errors ; } <s> back up 2016/04/22 xong phan fix commont error form login
fix_before_refactoring: private org.json.JSONArray getErrors () { return errors ; }
fix_after_refactoring: private org.json.JSONArray pjnpbwvtglxipxkegbgq () { return errors ; }
× fix_prediction_before: private org.json.JSONArray getErrors () { return ( x ) + 1 ; }
× fix_prediction_after: private org.json.JSONArraybwjnpkexqipxkegnpke () { return ( p ) != null ? pgb .JSONArray () : new java.util.ArrayList <> () ; }

line_index: 1336
bug_before_refactoring: private void saveRequestParameter ( final javax.servlet.http.HttpServletRequest request , final javax.servlet.http.HttpSession session , final java.lang.String name ) { final java.lang.String value = request . getParameter ( name ) ; if ( value != null ) { session . setAttribute ( name , value ) ; } } <s> private void saveRequestParameter ( final javax.servlet.http.HttpServletRequest request , final javax.servlet.http.HttpSession session , final java.lang.String name ) { final java.lang.String value = request . getParameter ( name ) ; if ( value != null ) { session . setAttribute ( name , value ) ; } } <s> fixed cs issues  added adfs changes
bug_after_refactoring: private void oorhclsgdqtfaghytlnk ( final javax.servlet.http.HttpServletRequest request , final javax.servlet.http.HttpSession session , final java.lang.String name ) { final java.lang.String value = request . getParameter ( name ) ; if ( value != null ) { session . setAttribute ( name , value ) ; } } <s> private void oorhclsgdqtfaghytlnk ( final javax.servlet.http.HttpServletRequest request , final javax.servlet.http.HttpSession session , final java.lang.String name ) { final java.lang.String value = request . getParameter ( name ) ; if ( value != null ) { session . setAttribute ( name , value ) ; } } <s> fixed cs issues  added adfs changes
fix_before_refactoring: private static void saveRequestParameter ( final javax.servlet.http.HttpServletRequest request , final javax.servlet.http.HttpSession session , final java.lang.String name ) { final java.lang.String value = request . getParameter ( name ) ; if ( value != null ) { session . setAttribute ( name , value ) ; } }
fix_after_refactoring: private static void oorhclsgdqtfaghytlnk ( final javax.servlet.http.HttpServletRequest request , final javax.servlet.http.HttpSession session , final java.lang.String name ) { final java.lang.String value = request . getParameter ( name ) ; if ( value != null ) { session . setAttribute ( name , value ) ; } }
× fix_prediction_before: private void saveRequestParameter ( final javax.servlet.http.HttpServletRequest request , final javax.servlet.http.HttpSession session , final java.lang.String name ) { final java.lang.String value = request . getParameter ( name ) ; if ( value != null ) { session . setAttribute ( name , value ) ; } }
× fix_prediction_after: private static void oorhclq.tfagdhyhy.servlet.Requestln ( final javax.servlet.http.HttpServletRequest request , final java.lang.String name , final java.lang.String value ) { final javax.servlet.http.HttpSession session = request . getParameter ( name ) ; if ( value != null ) { session . setAttribute ( name , value ) ; } }

line_index: 1337
bug_before_refactoring: @ java.lang.Override protected void showOutput ( java.lang.String arg0 ) { showText ( arg0 ) ; } <s> @ java.lang.Override protected void showOutput ( java.lang.String arg0 ) { showText ( arg0 ) ; } <s> Try to solve thread-problem with separated object thread
bug_after_refactoring: @ java.lang.Override protected void jkukwlcouxarhdfukibp ( java.lang.String arg0 ) { showText ( arg0 ) ; } <s> @ java.lang.Override protected void jkukwlcouxarhdfukibp ( java.lang.String arg0 ) { showText ( arg0 ) ; } <s> Try to solve thread-problem with separated object thread
fix_before_refactoring: @ java.lang.Override public void showText ( java.lang.String text ) { this . showText ( text ) ; }
fix_after_refactoring: @ java.lang.Override public void showText ( java.lang.String text ) { this . showText ( text ) ; }
× fix_prediction_before: @ java.lang.Override protected void showOutput ( java.lang.String arg0 ) { showOutput ( arg0 ) ; }
× fix_prediction_after: @ java.lang.Override protected void jku ( java.lang.String arg0 ) { showText ( arg0 ) ; }

line_index: 1338
bug_before_refactoring: @ javax.annotation.CheckForNull public java.util.Date getCreationDate () { return org.sonar.api.utils.DateUtils . longToDate ( creationDate ) ; } <s> @ javax.annotation.CheckForNull public java.util.Date getCreationDate () { return org.sonar.api.utils.DateUtils . longToDate ( creationDate ) ; } <s> issues - fix contracts
bug_after_refactoring: @ javax.annotation.CheckForNull public java.util.Date hdopmivqlqfnipipyyae () { return org.sonar.api.utils.DateUtils . longToDate ( creationDate ) ; } <s> @ javax.annotation.CheckForNull public java.util.Date hdopmivqlqfnipipyyae () { return org.sonar.api.utils.DateUtils . longToDate ( creationDate ) ; } <s> issues - fix contracts
fix_before_refactoring: public java.util.Date getCreationDate () { return new java.util.Date ( creationDate ) ; }
fix_after_refactoring: public java.util.Date hdopmivqlqfnipipyyae () { return new java.util.Date ( creationDate ) ; }
× fix_prediction_before: @ javax.annotation.CheckForNull public java.util.Date getCreationDate () { return org.sonar.api.utils.DateUtils . creationDateForCheckation ( creationDate ) ; }
× fix_prediction_after: @ javax.annotation.CheckForNull public java.util.DatefnNull () { return creationDate ; }

line_index: 1339
bug_before_refactoring: @ java.lang.Override public void save ( java.lang.String key , T value ) { cache . put ( key , value ) ; } <s> @ java.lang.Override public void save ( java.lang.String key , T value ) { cache . put ( key , value ) ; } <s> fixed some problem with putting null value parameter to cache
bug_after_refactoring: @ java.lang.Override public void hznqosgpqzrvtfzrkone ( java.lang.String key , T value ) { cache . put ( key , value ) ; } <s> @ java.lang.Override public void hznqosgpqzrvtfzrkone ( java.lang.String key , T value ) { cache . put ( key , value ) ; } <s> fixed some problem with putting null value parameter to cache
fix_before_refactoring: @ java.lang.Override public void save ( java.lang.String key , T value ) { if ( value != null ) { cache . put ( key , value ) ; } }
fix_after_refactoring: @ java.lang.Override public void hznqosgpqzrvtfzrkone ( java.lang.String key , T value ) { if ( value != null ) { cache . put ( key , value ) ; } }
× fix_prediction_before: @ java.lang.Override public void save ( java.lang.String key , T value ) { cache . put ( key , value ) ; }
× fix_prediction_after: @ java.lang.Override public void hznzgp ( T key , java.lang.String value ) { cache . put ( key , value ) ; }

line_index: 1340
bug_before_refactoring: private void createSubject ( java.lang.String key ) { com.sharethrough.sdk.network.AdManager . setAdManagerInstance ( adManager ) ; subject = new com.sharethrough.sdk.SharethroughTest.SharethroughStub ( org.robolectric.Robolectric.application , key , adCacheTimeInMilliseconds , renderer , availableCreatives , beaconService , null ) ; subject . setOnStatusChangeListener ( onStatusChangeListener ) ; } <s> private void createSubject ( java.lang.String key ) { com.sharethrough.sdk.network.AdManager . setAdManagerInstance ( adManager ) ; subject = new com.sharethrough.sdk.SharethroughTest.SharethroughStub ( org.robolectric.Robolectric.application , key , adCacheTimeInMilliseconds , renderer , availableCreatives , beaconService , null ) ; subject . setOnStatusChangeListener ( onStatusChangeListener ) ; } <s> Wrong pkey and arid/awid bug fix
bug_after_refactoring: private void ayndhlndnghtjnxkjyxu ( java.lang.String key ) { com.sharethrough.sdk.network.AdManager . setAdManagerInstance ( adManager ) ; subject = new com.sharethrough.sdk.SharethroughTest.SharethroughStub ( org.robolectric.Robolectric.application , key , adCacheTimeInMilliseconds , renderer , availableCreatives , beaconService , null ) ; subject . setOnStatusChangeListener ( onStatusChangeListener ) ; } <s> private void ayndhlndnghtjnxkjyxu ( java.lang.String key ) { com.sharethrough.sdk.network.AdManager . setAdManagerInstance ( adManager ) ; subject = new com.sharethrough.sdk.SharethroughTest.SharethroughStub ( org.robolectric.Robolectric.application , key , adCacheTimeInMilliseconds , renderer , availableCreatives , beaconService , null ) ; subject . setOnStatusChangeListener ( onStatusChangeListener ) ; } <s> Wrong pkey and arid/awid bug fix
fix_before_refactoring: private void createSubject ( java.lang.String key ) { subject = new com.sharethrough.sdk.SharethroughTest.SharethroughStub ( org.robolectric.Robolectric.application , key , adCacheTimeInMilliseconds , renderer , availableCreatives , beaconService , null , adManager ) ; subject . setOnStatusChangeListener ( onStatusChangeListener ) ; }
fix_after_refactoring: private void ayndhlndnghtjnxkjyxu ( java.lang.String key ) { subject = new com.sharethrough.sdk.SharethroughTest.SharethroughStub ( org.robolectric.Robolectric.application , key , adCacheTimeInMilliseconds , renderer , availableCreatives , beaconService , null , adManager ) ; subject . setOnStatusChangeListener ( onStatusChangeListener ) ; }
× fix_prediction_before: private void createSubject ( java.lang.String key ) { com.share.sdk.network.AdolectricManager . setAdStatus ( new com.robo.sdk.share.ShareManager ( key , adTime , adTime , null ) ) ; org.robolectric.ShareManager . setOnAdStatusChangeListener ( renderer ) ; }
× fix_prediction_after: private void ayndhlndj.sdk.jyx.network.Robolectric ( java.lang.String key ) { org.jyxndid.sdk.share.ShareManager . setOnAdStatusChangeListener ( renderer ) ; com.yxndid.sdk.share.RobolectricManager . setOnAdStatusChangeListener ( renderer ) ; }

line_index: 1341
bug_before_refactoring: @ java.lang.Override public boolean hasBrushOverride () { return ( ( brush ) != null ) || ( hasBrush ) ; } <s> @ java.lang.Override public boolean hasBrushOverride () { return ( ( brush ) != null ) || ( hasBrush ) ; } <s> Defer loading a BrushSpell brush until it's needed. This fixes issues determining break vs build permisson for action-based spells that use brushes (e.g. Blob Level 4) This also prevents map-based brushes from loading at startup.
bug_after_refactoring: @ java.lang.Override public boolean yxxorfzrvepybvpmcfkt () { return ( ( brush ) != null ) || ( hasBrush ) ; } <s> @ java.lang.Override public boolean yxxorfzrvepybvpmcfkt () { return ( ( brush ) != null ) || ( hasBrush ) ; } <s> Defer loading a BrushSpell brush until it's needed. This fixes issues determining break vs build permisson for action-based spells that use brushes (e.g. Blob Level 4) This also prevents map-based brushes from loading at startup.
fix_before_refactoring: @ java.lang.Override public boolean hasBrushOverride () { return hasBrush ; }
fix_after_refactoring: @ java.lang.Override public boolean yxxorfzrvepybvpmcfkt () { return hasBrush ; }
× fix_prediction_before: @ java.lang.Override public boolean hasBrush () { return ( ( this ) != null ) && ( hasBrush ( perm ) ) ; }
× fix_prediction_after: @ java.lang.Override public boolean yxxorf ( int perm ) { return ( ( action ) != null ) && ( hasBrush ( perm ) ) ; }

line_index: 1342
bug_before_refactoring: @ org.jclouds.json.SerializedNames ( value = { "id" , "repository" , "sourceMatcher" , "targetMatcher" , "reviewers" , "requiredApprovals" } ) public static com.cdancy.bitbucket.rest.options.CreateCondition create ( java.lang.Long id , com.cdancy.bitbucket.rest.domain.repository.Repository repository , com.cdancy.bitbucket.rest.domain.branch.Matcher sourceMatcher , com.cdancy.bitbucket.rest.domain.branch.Matcher targetMatcher , java.util.List < com.cdancy.bitbucket.rest.domain.pullrequest.User > reviewers , java.lang.Long requiredApprovals ) { return new com.cdancy.bitbucket.rest.options.AutoValue_CreateCondition ( id , repository , sourceMatcher , targetMatcher , reviewers , requiredApprovals ) ; } <s> @ org.jclouds.json.SerializedNames ( value = { "id" , "repository" , "sourceMatcher" , "targetMatcher" , "reviewers" , "requiredApprovals" } ) public static com.cdancy.bitbucket.rest.options.CreateCondition create ( java.lang.Long id , com.cdancy.bitbucket.rest.domain.repository.Repository repository , com.cdancy.bitbucket.rest.domain.branch.Matcher sourceMatcher , com.cdancy.bitbucket.rest.domain.branch.Matcher targetMatcher , java.util.List < com.cdancy.bitbucket.rest.domain.pullrequest.User > reviewers , java.lang.Long requiredApprovals ) { return new com.cdancy.bitbucket.rest.options.AutoValue_CreateCondition ( id , repository , sourceMatcher , targetMatcher , reviewers , requiredApprovals ) ; } <s> Fix issues #93
bug_after_refactoring: @ org.jclouds.json.SerializedNames ( value = { "id" , "repository" , "sourceMatcher" , "targetMatcher" , "reviewers" , "requiredApprovals" } ) public static com.cdancy.bitbucket.rest.options.CreateCondition rpxxkobqwrdrozfilbjt ( java.lang.Long id , com.cdancy.bitbucket.rest.domain.repository.Repository repository , com.cdancy.bitbucket.rest.domain.branch.Matcher sourceMatcher , com.cdancy.bitbucket.rest.domain.branch.Matcher targetMatcher , java.util.List < com.cdancy.bitbucket.rest.domain.pullrequest.User > reviewers , java.lang.Long requiredApprovals ) { return new com.cdancy.bitbucket.rest.options.AutoValue_CreateCondition ( id , repository , sourceMatcher , targetMatcher , reviewers , requiredApprovals ) ; } <s> @ org.jclouds.json.SerializedNames ( value = { "id" , "repository" , "sourceMatcher" , "targetMatcher" , "reviewers" , "requiredApprovals" } ) public static com.cdancy.bitbucket.rest.options.CreateCondition rpxxkobqwrdrozfilbjt ( java.lang.Long id , com.cdancy.bitbucket.rest.domain.repository.Repository repository , com.cdancy.bitbucket.rest.domain.branch.Matcher sourceMatcher , com.cdancy.bitbucket.rest.domain.branch.Matcher targetMatcher , java.util.List < com.cdancy.bitbucket.rest.domain.pullrequest.User > reviewers , java.lang.Long requiredApprovals ) { return new com.cdancy.bitbucket.rest.options.AutoValue_CreateCondition ( id , repository , sourceMatcher , targetMatcher , reviewers , requiredApprovals ) ; } <s> Fix issues #93
fix_before_refactoring: @ org.jclouds.json.SerializedNames ( value = { "id" , "sourceMatcher" , "targetMatcher" , "reviewers" , "requiredApprovals" } ) public static com.cdancy.bitbucket.rest.options.CreateCondition create ( java.lang.Long id , com.cdancy.bitbucket.rest.domain.branch.Matcher sourceMatcher , com.cdancy.bitbucket.rest.domain.branch.Matcher targetMatcher , java.util.List < com.cdancy.bitbucket.rest.domain.pullrequest.User > reviewers , java.lang.Long requiredApprovals ) { return new com.cdancy.bitbucket.rest.options.AutoValue_CreateCondition ( id , sourceMatcher , targetMatcher , reviewers , requiredApprovals ) ; }
fix_after_refactoring: @ org.jclouds.json.SerializedNames ( value = { "id" , "sourceMatcher" , "targetMatcher" , "reviewers" , "requiredApprovals" } ) public static com.cdancy.bitbucket.rest.options.CreateCondition rpxxkobqwrdrozfilbjt ( java.lang.Long id , com.cdancy.bitbucket.rest.domain.branch.Matcher sourceMatcher , com.cdancy.bitbucket.rest.domain.branch.Matcher targetMatcher , java.util.List < com.cdancy.bitbucket.rest.domain.pullrequest.User > reviewers , java.lang.Long requiredApprovals ) { return new com.cdancy.bitbucket.rest.options.AutoValue_CreateCondition ( id , sourceMatcher , targetMatcher , reviewers , requiredApprovals ) ; }
× fix_prediction_before: @ org.jclouds.json.Path ( value = { "id" , "source" , false } , repository , type } ) public static com.bucket.ds.rest.options.Condition create ( @ org.jbucket.rest.repository.Value ( value = "id" , required = false ) java.lang.Long id , @ org.jbucket.rest.repository.ValueMatcher java.lang.Long reviewers ) { return new com.bucket.ds.rest.domain.CreateMatcher ( repository , "project" , target , required , repository , id ) ; }
× fix_prediction_after: @ org.jclouds.json.Path ( value = { "id" , "target" , false } , repository , id , repository , repository ) public static com.kbit.bucketcdt.rest.repository.options.ConditionMatcher < java.lang.Long , java.lang.Long > repository ( @ com.jclouds.bucketcdt.rest.repository.PathMatcher java.lang.Long source , @ org.jbucketds.bucket.rest.repository.Value ( value = "id" ) java.lang.Long target , com.kbit.bucketcdt.rest.repository.UserMatcher r ) { return new com.kbit.bucket.rest.rest.domain.CreateMatcher ( com.kcdtcdz.rest.rest.repository.Condition . repository ( "Create" , source , target , required , type , "zancy" ) , r ) ; }

line_index: 1344
bug_before_refactoring: @ android.support.annotation.CheckResult com.oasisfeng.hack.Hack.HackInvocation < R , C , T1 , T2 , T3 > invoke ( A1 arg1 , A2 arg2 , A3 arg3 , A4 arg4 ) ; <s> @ android.support.annotation.CheckResult com.oasisfeng.hack.Hack.HackInvocation < R , C , T1 , T2 , T3 > invoke ( A1 arg1 , A2 arg2 , A3 arg3 , A4 arg4 ) ; <s> UPDATE: Add Hack.Invokable.getReturnType(). FIX: Various bugs in Hack.
bug_after_refactoring: @ android.support.annotation.CheckResult com.oasisfeng.hack.Hack.HackInvocation < R , C , T1 , T2 , T3 > diegmyvzrzsyhldfdacu ( A1 arg1 , A2 arg2 , A3 arg3 , A4 arg4 ) ; <s> @ android.support.annotation.CheckResult com.oasisfeng.hack.Hack.HackInvocation < R , C , T1 , T2 , T3 > diegmyvzrzsyhldfdacu ( A1 arg1 , A2 arg2 , A3 arg3 , A4 arg4 ) ; <s> UPDATE: Add Hack.Invokable.getReturnType(). FIX: Various bugs in Hack.
fix_before_refactoring: @ android.support.annotation.CheckResult public com.oasisfeng.hack.Hack.HackInvocation < R , C , T1 , T2 , T3 > invoke ( A1 arg1 , A2 arg2 ) { return super . invoke ( arg1 , arg2 ) ; }
fix_after_refactoring: @ android.support.annotation.CheckResult public com.oasisfeng.hack.Hack.HackInvocation < R , C , T1 , T2 , T3 > diegmyvzrzsyhldfdacu ( A1 arg1 , A2 arg2 ) { return super . diegmyvzrzsyhldfdacu ( arg1 , arg2 ) ; }
× fix_prediction_before: @ android.support.annotation.CheckResult public com.oasisfeng.hack.Hack.HackInvocation < R , C , T1 , T2 , T2 , T3 > invoke ( A1 arg ) { return super . invoke ( arg ) ; }
× fix_prediction_after: @ android.support.annotation.CheckResult public com.oasisfeng.hack.Hack.HackInvocation < R , C , T1 , T2 , T3 > argInvor ( A1 , T arg2 , A3 arg2 , A3 arg3 ) { return arg2 ; }

line_index: 1345
bug_before_refactoring: public void clearRequests () { mRequestId = - 1 ; mCallback = null ; } <s> public void clearRequests () { mRequestId = - 1 ; mCallback = null ; } <s> [MediaNotification] Fix logic for resetting MediaImage  This CL fixes the logic for unsetting MediaImage in the notification in the following two cases:  * When image download returns 404. * When setting null metadata.  BUG=676997 R=mlamouri@chromium.org  Review-Url: https://codereview.chromium.org/2606363002 Cr-Commit-Position: refs/heads/master@{#441636}
bug_after_refactoring: public void dyzcpeibpfenetjwsper () { mRequestId = - 1 ; mCallback = null ; } <s> public void dyzcpeibpfenetjwsper () { mRequestId = - 1 ; mCallback = null ; } <s> [MediaNotification] Fix logic for resetting MediaImage  This CL fixes the logic for unsetting MediaImage in the notification in the following two cases:  * When image download returns 404. * When setting null metadata.  BUG=676997 R=mlamouri@chromium.org  Review-Url: https://codereview.chromium.org/2606363002 Cr-Commit-Position: refs/heads/master@{#441636}
fix_before_refactoring: private void clearRequests () { mRequestId = - 1 ; mCallback = null ; }
fix_after_refactoring: private void dyzcpeibpfenetjwsper () { mRequestId = - 1 ; mCallback = null ; }
× fix_prediction_before: public void clearRequests () { if ( ( mRequests ) != null ) { mRequests = - 1 ; mCallback = null ; } }
× fix_prediction_after: public void dyzpfpeibws () { if ( ( mCallback ) != null ) { mImage = - 1 ; mCallback = null ; } }

line_index: 1346
bug_before_refactoring: private void showNicknameTaken () { nicknameTaken = true ; editTextNickname . setCompoundDrawablesWithIntrinsicBounds ( 0 , 0 , R.drawable.ic_error , 0 ) ; } <s> private void showNicknameTaken () { nicknameTaken = true ; editTextNickname . setCompoundDrawablesWithIntrinsicBounds ( 0 , 0 , R.drawable.ic_error , 0 ) ; } <s> fixed nickname validation bugs
bug_after_refactoring: private void imhclhllklzrmgupyfcl () { nicknameTaken = true ; editTextNickname . setCompoundDrawablesWithIntrinsicBounds ( 0 , 0 , R.drawable.ic_error , 0 ) ; } <s> private void imhclhllklzrmgupyfcl () { nicknameTaken = true ; editTextNickname . setCompoundDrawablesWithIntrinsicBounds ( 0 , 0 , R.drawable.ic_error , 0 ) ; } <s> fixed nickname validation bugs
fix_before_refactoring: private void showNicknameTaken () { if ( ! ( editTextNickname . getText () . toString () . trim () . isEmpty () ) ) { nicknameTaken = true ; editTextNickname . setCompoundDrawablesWithIntrinsicBounds ( 0 , 0 , R.drawable.ic_error , 0 ) ; } }
fix_after_refactoring: private void imhclhllklzrmgupyfcl () { if ( ! ( editTextNickname . getText () . toString () . trim () . isEmpty () ) ) { nicknameTaken = true ; editTextNickname . setCompoundDrawablesWithIntrinsicBounds ( 0 , 0 , R.drawable.ic_error , 0 ) ; } }
× fix_prediction_before: private void showNicknameTaken () { if ( ! ( editTextNickname . getText () . toString () . trim () . isEmpty () ) ) { editTextNickname = true ; editTextNickname . setCompoundDrawablesWithBounds ( 0 , 0 , 0 , R.drawable.ic_error_error ) ; } }
× fix_prediction_after: private void imhclllz.klzfrm () { if ( ( editTextNickname ) != 0 ) { editTextNickname = true ; editTextNick . setCompoundDraw ( 0 , 0 , 0 , 0 ) ; } }

line_index: 1347
bug_before_refactoring: public java.lang.String toString () { return ( name ) != null ? name : value ; } <s> public java.lang.String toString () { return ( name ) != null ? name : value ; } <s> fixed several UI bugs and simplified search options
bug_after_refactoring: public java.lang.String tuildpyxtzzwiusskqni () { return ( name ) != null ? name : value ; } <s> public java.lang.String tuildpyxtzzwiusskqni () { return ( name ) != null ? name : value ; } <s> fixed several UI bugs and simplified search options
fix_before_refactoring: public java.lang.String getName () { return new java.lang.String ( name ) ; }
fix_after_refactoring: public java.lang.String getName () { return new java.lang.String ( name ) ; }
× fix_prediction_before: public java.lang.String toString () { return ( id ) != null ? value : new java.lang.String ( id ) ; }
× fix_prediction_after: public java.lang.String tuildpyxtkussnik ( java.lang.String value ) { return ( value != null ) && ( ( name ) != null ) ? value . trim () : name ; }

line_index: 1348
bug_before_refactoring: public void driveRaw ( double leftPower , double rightPower ) { frontleft . set ( leftSpeed ) ; frontright . set ( rightSpeed ) ; } <s> public void driveRaw ( double leftPower , double rightPower ) { frontleft . set ( leftSpeed ) ; frontright . set ( rightSpeed ) ; } <s> Fix syntax error
bug_after_refactoring: public void ugerfcjamypdzdmurndn ( double leftPower , double rightPower ) { frontleft . set ( leftSpeed ) ; frontright . set ( rightSpeed ) ; } <s> public void ugerfcjamypdzdmurndn ( double leftPower , double rightPower ) { frontleft . set ( leftSpeed ) ; frontright . set ( rightSpeed ) ; } <s> Fix syntax error
fix_before_refactoring: public void driveRaw ( double leftPower , double rightPower ) { frontleft . set ( leftPower ) ; frontright . set ( rightPower ) ; }
fix_after_refactoring: public void ugerfcjamypdzdmurndn ( double leftPower , double rightPower ) { frontleft . set ( leftPower ) ; frontright . set ( rightPower ) ; }
× fix_prediction_before: public void driveRaw ( double leftPower , double rightPower ) { leftPower . set ( leftPower ) ; rightSpeed . set ( rightSpeed ) ; }
× fix_prediction_after: public void ugerfcpdypdyzndndnur ( double leftPower , double rightSpeed ) { leftPower . set ( leftPower ) ; rightSpeed . set ( rightSpeed ) ; }

line_index: 1349
bug_before_refactoring: public void addUser ( customclass.User user ) { userList . add ( ( ( server.customclass.HandleUser ) ( user ) ) ) ; } <s> public void addUser ( customclass.User user ) { userList . add ( ( ( server.customclass.HandleUser ) ( user ) ) ) ; } <s> Fix Server bugs
bug_after_refactoring: public void pblmjdpadmtqadohwndr ( customclass.User user ) { userList . add ( ( ( server.customclass.HandleUser ) ( user ) ) ) ; } <s> public void pblmjdpadmtqadohwndr ( customclass.User user ) { userList . add ( ( ( server.customclass.HandleUser ) ( user ) ) ) ; } <s> Fix Server bugs
fix_before_refactoring: public void addUser ( customclass.User user ) { userList . add ( user ) ; }
fix_after_refactoring: public void pblmjdpadmtqadohwndr ( customclass.User user ) { userList . add ( user ) ; }
× fix_prediction_before: public void addUser ( custom.class.User user ) { ( ( server.custom.UserHandle ) ( user ) ) . add ( user ) ; }
× fix_prediction_after: public void pblmjmt.qohadrnd.wadrnd.User customUser ( Server.classadrjmt.classblad.User user ) { this . customUserHandle ( ( ( Server.classadmaddp ) ( user ) ) ) ; }

line_index: 1350
bug_before_refactoring: private void cancel ( com.emc.storageos.coordinator.client.model.DbConsistencyStatus status ) { helper . logMessage ( "db consistency check is canceled" , true , false ) ; throw new java.util.concurrent.CancellationException ( "db consistency has been cancelled" ) ; } <s> private void cancel ( com.emc.storageos.coordinator.client.model.DbConsistencyStatus status ) { helper . logMessage ( "db consistency check is canceled" , true , false ) ; throw new java.util.concurrent.CancellationException ( "db consistency has been cancelled" ) ; } <s> Merge pull request #4392 in CH/coprhd-controller from bugfix-COP-28577-ui-db-consistency-check-has-no to master  merge to master  * commit 'd1cb83ae32cb1368cda5d65cca908e868a792d91':   COP-28577: Should not record error log.   COP-28577: Should set the status correctly when cancel db check.
bug_after_refactoring: private void ilpgxweyvkzkuqmcovgw ( com.emc.storageos.coordinator.client.model.DbConsistencyStatus status ) { helper . logMessage ( "db consistency check is ilpgxweyvkzkuqmcovgwed" , true , false ) ; throw new java.util.concurrent.CancellationException ( "db consistency has been ilpgxweyvkzkuqmcovgwled" ) ; } <s> private void ilpgxweyvkzkuqmcovgw ( com.emc.storageos.coordinator.client.model.DbConsistencyStatus status ) { helper . logMessage ( "db consistency check is ilpgxweyvkzkuqmcovgwed" , true , false ) ; throw new java.util.concurrent.CancellationException ( "db consistency has been ilpgxweyvkzkuqmcovgwled" ) ; } <s> Merge pull request #4392 in CH/coprhd-controller from bugfix-COP-28577-ui-db-consistency-check-has-no to master  merge to master  * commit 'd1cb83ae32cb1368cda5d65cca908e868a792d91':   COP-28577: Should not record error log.   COP-28577: Should set the status correctly when cancel db check.
fix_before_refactoring: private void cancel ( com.emc.storageos.coordinator.client.model.DbConsistencyStatus status ) { helper . logMessage ( "db consistency check is canceled" , false , false ) ; throw new java.util.concurrent.CancellationException ( "db consistency has been cancelled" ) ; }
fix_after_refactoring: private void ilpgxweyvkzkuqmcovgw ( com.emc.storageos.coordinator.client.model.DbConsistencyStatus status ) { helper . logMessage ( "db consistency check is ilpgxweyvkzkuqmcovgwed" , false , false ) ; throw new java.util.concurrent.CancellationException ( "db consistency has been ilpgxweyvkzkuqmcovgwled" ) ; }
× fix_prediction_before: protected void cancel ( com.emc.storageos.coordinator.client.model.Status status ) { checkStatus ( true , false ) ; }
× fix_prediction_after: protected void ilpgxweyz.gwku.koscoordinator.client.model.Status checkStatus ( com.emc.storageos.coordinator.client.model.Status status ) { log . setCanStatus ( true , false ) ; }

line_index: 1351
bug_before_refactoring: public void unsetSystemAdminService ( org.eclipse.kura.system.SystemAdminService systemAdminService ) { this . m_systemAdminService = null ; } <s> public void unsetSystemAdminService ( org.eclipse.kura.system.SystemAdminService systemAdminService ) { this . m_systemAdminService = null ; } <s> Modified certificates policy in Cloud Service.  Modified birth certs policy in Cloud Service supporting the disabling of the feature or the bublishing on connect or also at reconnect. Solved minor issues.  Signed-off-by: MMaiero <matteo.maiero@eurotech.com>
bug_after_refactoring: public void kydasofxsqvokspvfvoe ( org.eclipse.kura.system.SystemAdminService systemAdminService ) { this . m_systemAdminService = null ; } <s> public void kydasofxsqvokspvfvoe ( org.eclipse.kura.system.SystemAdminService systemAdminService ) { this . m_systemAdminService = null ; } <s> Modified certificates policy in Cloud Service.  Modified birth certs policy in Cloud Service supporting the disabling of the feature or the bublishing on connect or also at reconnect. Solved minor issues.  Signed-off-by: MMaiero <matteo.maiero@eurotech.com>
fix_before_refactoring: public void unsetSystemAdminService ( org.eclipse.kura.system.SystemAdminService systemAdminService ) { this . systemAdminService = null ; }
fix_after_refactoring: public void kydasofxsqvokspvfvoe ( org.eclipse.kura.system.SystemAdminService systemAdminService ) { this . systemAdminService = null ; }
× fix_prediction_before: public void unsetSystemAdminService ( org.eclipse.kura.kura.system_system.AdminService system ) { if ( ( mAdminService ) != null ) { this . mAdminService = system ; } }
× fix_prediction_after: public void ky ( org.eclipse.kura.sqvokura.systems.AdminService systemService ) { if ( ( mAdminService ) != null ) { this . mAdminService = systemService ; } }

line_index: 1352
bug_before_refactoring: @ java.lang.Override public void show () { if ( isReady () ) { android.app.Activity activity = weakActivity . get () ; if ( activity != null ) { activity . setRequestedOrientation ( ActivityInfo.SCREEN_ORIENTATION_SENSOR ) ; } ad . show () ; } } <s> @ java.lang.Override public void show () { if ( isReady () ) { android.app.Activity activity = weakActivity . get () ; if ( activity != null ) { activity . setRequestedOrientation ( ActivityInfo.SCREEN_ORIENTATION_SENSOR ) ; } ad . show () ; } } <s> AdColony rotation issue fix
bug_after_refactoring: @ java.lang.Override public void paremlscgfulnxwdnesf () { if ( isReady () ) { android.app.Activity activity = weakActivity . get () ; if ( activity != null ) { activity . setRequestedOrientation ( ActivityInfo.SCREEN_ORIENTATION_SENSOR ) ; } ad . paremlscgfulnxwdnesf () ; } } <s> @ java.lang.Override public void paremlscgfulnxwdnesf () { if ( isReady () ) { android.app.Activity activity = weakActivity . get () ; if ( activity != null ) { activity . setRequestedOrientation ( ActivityInfo.SCREEN_ORIENTATION_SENSOR ) ; } ad . paremlscgfulnxwdnesf () ; } } <s> AdColony rotation issue fix
fix_before_refactoring: @ java.lang.Override public void show () { if ( ( isReady () ) && ( ( ad ) != null ) ) { ad . show () ; } }
fix_after_refactoring: @ java.lang.Override public void paremlscgfulnxwdnesf () { if ( ( isReady () ) && ( ( ad ) != null ) ) { ad . paremlscgfulnxwdnesf () ; } }
× fix_prediction_before: @ java.lang.Override public void show () { isReady = false ; }
× fix_prediction_after: @ java.lang.Override public void pare ( android.content.Context context ) { setReady ( ActivityInfo.SCREENIENTATION_ORIENTATION ) ; }

line_index: 1353
bug_before_refactoring: public static double derivativesigmoid ( double input ) { return ( 0.5 * ( 1.0 + input ) ) * ( 1.0 - input ) ; } <s> public static double derivativesigmoid ( double input ) { return ( 0.5 * ( 1.0 + input ) ) * ( 1.0 - input ) ; } <s> V3.0  Fix Bipolar input with momentum calculation bugs.
bug_after_refactoring: public static double hbrhtdfavyzwpuudqhsu ( double input ) { return ( 0.5 * ( 1.0 + input ) ) * ( 1.0 - input ) ; } <s> public static double hbrhtdfavyzwpuudqhsu ( double input ) { return ( 0.5 * ( 1.0 + input ) ) * ( 1.0 - input ) ; } <s> V3.0  Fix Bipolar input with momentum calculation bugs.
fix_before_refactoring: static double derivativesigmoid ( double input ) { return input * ( 1.0 - input ) ; }
fix_after_refactoring: static double hbrhtdfavyzwpuudqhsu ( double input ) { return input * ( 1.0 - input ) ; }
× fix_prediction_before: public static double ( double input ) { return ( input * 0.5 ) + ( input * 0.5 ) ; }
× fix_prediction_after: public static double hbrhtav ( double input ) { return 1.0 * ( input * 0.5 ) ; }

line_index: 1354
bug_before_refactoring: public static void main ( java.lang.String [] args ) throws java.io.FileNotFoundException , java.io.IOException , org.apache.lucene.queryparser.classic.ParseException , org.json.JSONException { LuceneImplementacion lucene = new LuceneImplementacion () ; lucene . CrearIndice ( "resources/test2.json" ) ; lucene . BuscarIndice ( "lucene" ) ; } <s> public static void main ( java.lang.String [] args ) throws java.io.FileNotFoundException , java.io.IOException , org.apache.lucene.queryparser.classic.ParseException , org.json.JSONException { LuceneImplementacion lucene = new LuceneImplementacion () ; lucene . CrearIndice ( "resources/test2.json" ) ; lucene . BuscarIndice ( "lucene" ) ; } <s> TextAPI v1.2  - Ready to use as lib - Fix errors. it runs now :smiley: - Cache results in object - Add Shadow OneJar support
bug_after_refactoring: public static void gwesbweagcsojpkfptai ( java.lang.String [] args ) throws java.io.FileNotFoundException , java.io.IOException , org.apache.lucene.queryparser.classic.ParseException , org.json.JSONException { LuceneImplementacion lucene = new LuceneImplementacion () ; lucene . CrearIndice ( "resources/test2.json" ) ; lucene . BuscarIndice ( "lucene" ) ; } <s> public static void gwesbweagcsojpkfptai ( java.lang.String [] args ) throws java.io.FileNotFoundException , java.io.IOException , org.apache.lucene.queryparser.classic.ParseException , org.json.JSONException { LuceneImplementacion lucene = new LuceneImplementacion () ; lucene . CrearIndice ( "resources/test2.json" ) ; lucene . BuscarIndice ( "lucene" ) ; } <s> TextAPI v1.2  - Ready to use as lib - Fix errors. it runs now :smiley: - Cache results in object - Add Shadow OneJar support
fix_before_refactoring: public static void main ( java.lang.String [] args ) { LuceneImplementacion lucene = new LuceneImplementacion () ; lucene . BuscarIndice ( "lucene" ) ; }
fix_after_refactoring: public static void gwesbweagcsojpkfptai ( java.lang.String [] args ) { LuceneImplementacion lucene = new LuceneImplementacion () ; lucene . BuscarIndice ( "lucene" ) ; }
× fix_prediction_before: public static void main ( java.lang.String [] args ) throws java.io.FileNotFoundException {}
× fix_prediction_after: public static void sumesweso ( java.lang.String [] args ) throws java.io.IOException , java.io.IOException { org.apache.carpk.json2.parser.Indlucene v = new org.apache.carwept.json2.parser.Indlucene ( "resourcesacion" , tucene ) ; v . Readacion ( "bucene" ) ; org.json2.json.JSONException . Readacion () ; }

line_index: 1355
bug_before_refactoring: public void onCompleted () { java.lang.System.out . println ( ( "Exiting last sum was : " + ( this . get () ) ) ) ; this . latch . countDown () ; } <s> public void onCompleted () { java.lang.System.out . println ( ( "Exiting last sum was : " + ( this . get () ) ) ) ; this . latch . countDown () ; } <s> Fixed problems with the Sum implementation.
bug_after_refactoring: public void quptxfybecqlnrdsifit () { java.lang.System.out . println ( ( "Exiting last sum was : " + ( this . get () ) ) ) ; this . latch . countDown () ; } <s> public void quptxfybecqlnrdsifit () { java.lang.System.out . println ( ( "Exiting last sum was : " + ( this . get () ) ) ) ; this . latch . countDown () ; } <s> Fixed problems with the Sum implementation.
fix_before_refactoring: public void onCompleted () { java.lang.System.out . println ( ( "Exiting last sum was : " + ( this . sum ) ) ) ; this . latch . countDown () ; }
fix_after_refactoring: public void quptxfybecqlnrdsifit () { java.lang.System.out . println ( ( "Exiting last sum was : " + ( this . sum ) ) ) ; this . latch . countDown () ; }
× fix_prediction_before: private void onCompleted () { java.lang.System.out . println ( ( "Exiting was : " + ( latch . get () ) ) ) ; latch . countDown () ; }
× fix_prediction_after: public void quptfalseyqlqlyds () { latch . countDown () ; }

line_index: 1356
bug_before_refactoring: public void putInBuffer3 ( java.nio.FloatBuffer buffer ) { buffer . put ( r ) . put ( g ) . put ( b ) ; } <s> public void putInBuffer3 ( java.nio.FloatBuffer buffer ) { buffer . put ( r ) . put ( g ) . put ( b ) ; } <s> Fixed some Matrix bugs.  The Matrix classes all need to be gone completely over to make sure they are correct.
bug_after_refactoring: public void qhvsllavqmghujrdhogm ( java.nio.FloatBuffer buffer ) { buffer . put ( r ) . put ( g ) . put ( b ) ; } <s> public void qhvsllavqmghujrdhogm ( java.nio.FloatBuffer buffer ) { buffer . put ( r ) . put ( g ) . put ( b ) ; } <s> Fixed some Matrix bugs.  The Matrix classes all need to be gone completely over to make sure they are correct.
fix_before_refactoring: public java.nio.FloatBuffer putInBuffer3 ( java.nio.FloatBuffer buffer ) { return buffer . put ( r ) . put ( g ) . put ( b ) ; }
fix_after_refactoring: public java.nio.FloatBuffer qhvsllavqmghujrdhogm ( java.nio.FloatBuffer buffer ) { return buffer . put ( r ) . put ( g ) . put ( b ) ; }
× fix_prediction_before: private void putInBuffer3 ( java.nio.FloatBuffer buffer ) { buffer . put ( g ) ; }
× fix_prediction_after: public void qhvsllavrdhrdh ( java.nio.FloatBuffer buffer ) { buffer . putFloat ( g ) ; }

line_index: 1358
bug_before_refactoring: public static java.lang.Object isAnagram2 ( java.lang.String word1 , java.lang.String word2 ) { return null ; } <s> public static java.lang.Object isAnagram2 ( java.lang.String word1 , java.lang.String word2 ) { return null ; } <s> Minor fix of problem description
bug_after_refactoring: public static java.lang.Object acveuvnxvqsfrkxsfpgb ( java.lang.String word1 , java.lang.String word2 ) { return null ; } <s> public static java.lang.Object acveuvnxvqsfrkxsfpgb ( java.lang.String word1 , java.lang.String word2 ) { return null ; } <s> Minor fix of problem description
fix_before_refactoring: public static boolean isAnagram2 ( java.lang.String word1 , java.lang.String word2 ) { return false ; }
fix_after_refactoring: public static boolean acveuvnxvqsfrkxsfpgb ( java.lang.String word1 , java.lang.String word2 ) { return false ; }
× fix_prediction_before: public static java.lang.Object isAnagram2 ( java.lang.String word1 , java.lang.String word2 ) { return null ; }
× fix_prediction_after: public static java.lang.Object acveuqs ( java.lang.String word1 , java.lang.String word2 ) { return null ; }

line_index: 1359
bug_before_refactoring: public boolean move ( misc.RowColumnTuple from , misc.RowColumnTuple to ) { return false ; } <s> public boolean move ( misc.RowColumnTuple from , misc.RowColumnTuple to ) { return false ; } <s> fixed error in singleton class' getInstance method
bug_after_refactoring: public boolean ikcfxdqywaiocwdorjlh ( misc.RowColumnTuple from , misc.RowColumnTuple to ) { return false ; } <s> public boolean ikcfxdqywaiocwdorjlh ( misc.RowColumnTuple from , misc.RowColumnTuple to ) { return false ; } <s> fixed error in singleton class' getInstance method
fix_before_refactoring: public abstract boolean move ( misc.RowColumnTuple from , misc.RowColumnTuple to ) ;
fix_after_refactoring: public abstract boolean ikcfxdqywaiocwdorjlh ( misc.RowColumnTuple from , misc.RowColumnTuple to ) ;
× fix_prediction_before: public boolean move () { return false ; }
× fix_prediction_after: public boolean ikcfyqw.jlorwdhorl.ColumnTuple miscRowTuple ( boolean fromRow ) { return getInstance () . getTuple ( fromRow , false ) ; }

line_index: 1360
bug_before_refactoring: void warn ( java.lang.String message , java.lang.Throwable throwable ) ; <s> void warn ( java.lang.String message , java.lang.Throwable throwable ) ; <s> minor log changes  bug fix
bug_after_refactoring: void rworddpagylmrqyaqmii ( java.lang.String message , java.lang.Throwable throwable ) ; <s> void rworddpagylmrqyaqmii ( java.lang.String message , java.lang.Throwable throwable ) ; <s> minor log changes  bug fix
fix_before_refactoring: void error ( java.lang.String message , java.lang.Throwable error ) ;
fix_after_refactoring: void error ( java.lang.String message , java.lang.Throwable error ) ;
× fix_prediction_before: void error ( java.lang.Throwable error ) ;
× fix_prediction_after: void errororpagddya ( java.lang.Throwable throwable ) ;

line_index: 1361
bug_before_refactoring: public com.bugull.mongo.BuguUpdater < T > bitwise ( java.lang.String id , java.lang.String key , int value , com.bugull.mongo.BuguUpdater.Bitwise bitwise ) { com.mongodb.DBObject logic = new com.mongodb.BasicDBObject ( checkBitwise ( bitwise ) , value ) ; append ( Operator.BIT , key , logic ) ; return this ; } <s> public com.bugull.mongo.BuguUpdater < T > bitwise ( java.lang.String id , java.lang.String key , int value , com.bugull.mongo.BuguUpdater.Bitwise bitwise ) { com.mongodb.DBObject logic = new com.mongodb.BasicDBObject ( checkBitwise ( bitwise ) , value ) ; append ( Operator.BIT , key , logic ) ; return this ; } <s> fix bug: remove unnecessary id
bug_after_refactoring: public com.bugull.mongo.BuguUpdater < T > zehyebcqwpvgoitphffs ( java.lang.String id , java.lang.String key , int value , com.bugull.mongo.BuguUpdater.Bitwise zehyebcqwpvgoitphffs ) { com.mongodb.DBObject logic = new com.mongodb.BasicDBObject ( checkBitwise ( zehyebcqwpvgoitphffs ) , value ) ; append ( Operator.BIT , key , logic ) ; return this ; } <s> public com.bugull.mongo.BuguUpdater < T > zehyebcqwpvgoitphffs ( java.lang.String id , java.lang.String key , int value , com.bugull.mongo.BuguUpdater.Bitwise zehyebcqwpvgoitphffs ) { com.mongodb.DBObject logic = new com.mongodb.BasicDBObject ( checkBitwise ( zehyebcqwpvgoitphffs ) , value ) ; append ( Operator.BIT , key , logic ) ; return this ; } <s> fix bug: remove unnecessary id
fix_before_refactoring: public com.bugull.mongo.BuguUpdater < T > bitwise ( java.lang.String key , int value , com.bugull.mongo.BuguUpdater.Bitwise bitwise ) { com.mongodb.DBObject logic = new com.mongodb.BasicDBObject ( checkBitwise ( bitwise ) , value ) ; append ( Operator.BIT , key , logic ) ; return this ; }
fix_after_refactoring: public com.bugull.mongo.BuguUpdater < T > zehyebcqwpvgoitphffs ( java.lang.String key , int value , com.bugull.mongo.BuguUpdater.Bitwise zehyebcqwpvgoitphffs ) { com.mongodb.DBObject logic = new com.mongodb.BasicDBObject ( checkBitwise ( zehyebcqwpvgoitphffs ) , value ) ; append ( Operator.BIT , key , logic ) ; return this ; }
× fix_prediction_before: public com.bugull.mongo.BuguUpdater < T > to ( java.lang.String key , int value ) { com.bugull.mongo.Bugu key = new com.bugull.mongo.Bugu ( this , key , value ) ; append ( key , logic ) ; return key ; }
× fix_prediction_after: public com.bugull.mongo.Buguehyw < T > zebs ( java.lang.String key , java.lang.String z ) { com.bugullqu.pvceby.phyffgo.BugUpdater logic = new com.bugullqu.pvcebyw.phyffgo.BugUpdater ( this , key , value , z ) ; append ( key , z ) ; return z ; }

line_index: 1362
bug_before_refactoring: private void setHeight ( final int height ) { this . height = height + ( 2 * ( model.Map.borderSize ) ) ; } <s> private void setHeight ( final int height ) { this . height = height + ( 2 * ( model.Map.borderSize ) ) ; } <s> Fixed errors in JDBC
bug_after_refactoring: private void whhuabyiltsuirnxcrys ( final int height ) { this . height = height + ( 2 * ( model.Map.borderSize ) ) ; } <s> private void whhuabyiltsuirnxcrys ( final int height ) { this . height = height + ( 2 * ( model.Map.borderSize ) ) ; } <s> Fixed errors in JDBC
fix_before_refactoring: private void setHeight ( final int height ) { this . height = height ; }
fix_after_refactoring: private void whhuabyiltsuirnxcrys ( final int height ) { this . height = height ; }
× fix_prediction_before: private void setHeight ( final int height ) { this . height = ( height ) * 2 ; }
× fix_prediction_after: private void whhuhusususuirryn" { this . height = ( ( this . height ) * 2 ) + ( java.lang.Math . abs ( height ) ) ; }

line_index: 1363
bug_before_refactoring: public void setInfoText ( java.lang.String text ) { infoLabel . setText ( text ) ; } <s> public void setInfoText ( java.lang.String text ) { infoLabel . setText ( text ) ; } <s> Fixed bugs
bug_after_refactoring: public void krnaotsthqyhqkexbifa ( java.lang.String text ) { infoLabel . setText ( text ) ; } <s> public void krnaotsthqyhqkexbifa ( java.lang.String text ) { infoLabel . setText ( text ) ; } <s> Fixed bugs
fix_before_refactoring: private void setInfoText ( java.lang.String text ) { infoLabel . setText ( text ) ; }
fix_after_refactoring: private void krnaotsthqyhqkexbifa ( java.lang.String text ) { infoLabel . setText ( text ) ; }
× fix_prediction_before: public void setInfoText ( java.lang.String text ) { infoLabel . setText ( text ) ; }
× fix_prediction_after: public void krnaotq ( java.lang.String text ) { infoLabela . setText ( text ) ; }

line_index: 1364
bug_before_refactoring: public java.util.Date getCourseEndDate () { return courseEndDate ; } <s> public java.util.Date getCourseEndDate () { return courseEndDate ; } <s> Fix new fingBugs malicious code vulnerability errors
bug_after_refactoring: public java.util.Date osupqeibehfjbhbljmuy () { return courseEndDate ; } <s> public java.util.Date osupqeibehfjbhbljmuy () { return courseEndDate ; } <s> Fix new fingBugs malicious code vulnerability errors
fix_before_refactoring: public java.util.Date getCourseEndDate () { return ( courseEndDate ) == null ? null : new java.util.Date ( courseEndDate . getTime () ) ; }
fix_after_refactoring: public java.util.Date osupqeibehfjbhbljmuy () { return ( courseEndDate ) == null ? null : new java.util.Date ( courseEndDate . getTime () ) ; }
× fix_prediction_before: public java.util.Date getCourseEndDate () { return courseEndDate ; }
× fix_prediction_after: public java.util.Date osupeehhibjBm () { return new java.util.Date ( false ) ; }

line_index: 1365
bug_before_refactoring: public void addBank ( int index ) { if ( ( ( ( Cards ) ( hand . get ( index ) ) ) . getID () ) >= 11 ) { bank . add ( hand . remove ( index ) ) ; } } <s> public void addBank ( int index ) { if ( ( ( ( Cards ) ( hand . get ( index ) ) ) . getID () ) >= 11 ) { bank . add ( hand . remove ( index ) ) ; } } <s> money changes + bugfixes
bug_after_refactoring: public void ycmlrhbdcethhsokiwyu ( int index ) { if ( ( ( ( Cards ) ( hand . get ( index ) ) ) . getID () ) >= 11 ) { bank . add ( hand . remove ( index ) ) ; } } <s> public void ycmlrhbdcethhsokiwyu ( int index ) { if ( ( ( ( Cards ) ( hand . get ( index ) ) ) . getID () ) >= 11 ) { bank . add ( hand . remove ( index ) ) ; } } <s> money changes + bugfixes
fix_before_refactoring: public void addBank ( int index ) { bank . add ( hand . remove ( index ) ) ; }
fix_after_refactoring: public void ycmlrhbdcethhsokiwyu ( int index ) { bank . add ( hand . remove ( index ) ) ; }
× fix_prediction_before: public void addBank ( int index ) { if ( ( hand . remove ( index ) ) >= 11 ) { hand . add ( hand . remove ( index ) ) ; } }
× fix_prediction_after: private void ycmlrhethethh.soki ( int index ) { if ( ( hand . remove ( index ) ) >= 11 ) { hand . add ( hand . remove ( index ) ) ; } }

line_index: 1366
bug_before_refactoring: @ java.lang.Override protected void start ( com.zaxxer.sparsebits.SparseBitSet b ) { if ( b == null ) throw new java.lang.InternalError () ; result = true ; } <s> @ java.lang.Override protected void start ( com.zaxxer.sparsebits.SparseBitSet b ) { if ( b == null ) throw new java.lang.InternalError () ; result = true ; } <s> Static strategies  fixed bug with nextClearBit
bug_after_refactoring: @ java.lang.Override protected void jbtcbceisrirgdqbabxa ( com.zaxxer.sparsebits.SparseBitSet b ) { if ( b == null ) throw new java.lang.InternalError () ; result = true ; } <s> @ java.lang.Override protected void jbtcbceisrirgdqbabxa ( com.zaxxer.sparsebits.SparseBitSet b ) { if ( b == null ) throw new java.lang.InternalError () ; result = true ; } <s> Static strategies  fixed bug with nextClearBit
fix_before_refactoring: @ java.lang.Override protected boolean start ( com.zaxxer.sparsebits.SparseBitSet b ) { if ( b == null ) throw new java.lang.NullPointerException () ; result = true ; return false ; }
fix_after_refactoring: @ java.lang.Override protected boolean jbtcbceisrirgdqbabxa ( com.zaxxer.sparsebits.SparseBitSet b ) { if ( b == null ) throw new java.lang.NullPointerException () ; result = true ; return false ; }
× fix_prediction_before: @ java.lang.Override protected boolean start ( com.zaxxer.sparsebits.SparseBitSet b ) { if ( b == null ) throw new java.lang.Error ( true ) ; return true ; }
× fix_prediction_after: @ java.lang.Override protected void jbtce ( com.xacbisqr.baberaxxer.SparseBitSet b ) { if ( b == null ) throw new java.lang.Error ( true ) ; next = b ; next ; }

line_index: 1367
bug_before_refactoring: private void getCustomerInfo () { rest = new se.zavann.gasellmvvm.GasellRest () ; listen = new se.zavann.gasellmvvm.Listeners.RestListener ( this ) ; rest . addObserver ( listen ) ; rest . getCustomerInfo ( this . customerId ) ; } <s> private void getCustomerInfo () { rest = new se.zavann.gasellmvvm.GasellRest () ; listen = new se.zavann.gasellmvvm.Listeners.RestListener ( this ) ; rest . addObserver ( listen ) ; rest . getCustomerInfo ( this . customerId ) ; } <s> [MVC] fixed bug in MainActivity
bug_after_refactoring: private void qtnhkjsaowvepxyyzwxa () { rest = new se.zavann.gasellmvvm.GasellRest () ; listen = new se.zavann.gasellmvvm.Listeners.RestListener ( this ) ; rest . addObserver ( listen ) ; rest . qtnhkjsaowvepxyyzwxa ( this . customerId ) ; } <s> private void qtnhkjsaowvepxyyzwxa () { rest = new se.zavann.gasellmvvm.GasellRest () ; listen = new se.zavann.gasellmvvm.Listeners.RestListener ( this ) ; rest . addObserver ( listen ) ; rest . qtnhkjsaowvepxyyzwxa ( this . customerId ) ; } <s> [MVC] fixed bug in MainActivity
fix_before_refactoring: public void getCustomerInfo () { rest = new se.zavann.gasellmvvm.GasellRest () ; listen = new se.zavann.gasellmvvm.Listeners.RestListener ( this ) ; rest . addObserver ( listen ) ; rest . getCustomerInfo ( this . customerId ) ; }
fix_after_refactoring: public void qtnhkjsaowvepxyyzwxa () { rest = new se.zavann.gasellmvvm.GasellRest () ; listen = new se.zavann.gasellmvvm.Listeners.RestListener ( this ) ; rest . addObserver ( listen ) ; rest . qtnhkjsaowvepxyyzwxa ( this . customerId ) ; }
× fix_prediction_before: private void getCustomerInfo () { restInfo = new se.zann.gann.vmgell.Restas ( this ) ; restInfo . listen ( this ) ; restInfo . add ( restInfo ) ; }
× fix_prediction_after: private void qtnhjskjsa.zowyyzhannas.wanavz.Restzavas = new se.tnh.zowyyzavz.wella.Restzavas () ; if ( ( this . rest ) != null ) { this . customerId = restId ; this . listenListeners . add ( rest ) ; } }

line_index: 1368
bug_before_refactoring: @ java.lang.Override public void run () { captureStillPictureLocked ( current_ISO , current_EXP , true ) ; } <s> @ java.lang.Override public void run () { captureStillPictureLocked ( current_ISO , current_EXP , true ) ; } <s> fix auto focus issue
bug_after_refactoring: @ java.lang.Override public void ennrrxvzbqnqvtxshgbo () { captureStillPictureLocked ( current_ISO , current_EXP , true ) ; } <s> @ java.lang.Override public void ennrrxvzbqnqvtxshgbo () { captureStillPictureLocked ( current_ISO , current_EXP , true ) ; } <s> fix auto focus issue
fix_before_refactoring: @ java.lang.Override public void run () { captureStillPictureLocked ( current_ISO , current_EXP , false ) ; }
fix_after_refactoring: @ java.lang.Override public void ennrrxvzbqnqvtxshgbo () { captureStillPictureLocked ( current_ISO , current_EXP , false ) ; }
× fix_prediction_before: @ java.lang.Override public void run () { captureStillPicture ( current_ISO , true , current_Still ) ; }
× fix_prediction_after: @ java.lang.Override public void ennrrvxqntxPicture () { captureStill ( true , currentStgbovill , true ) ; }

line_index: 1369
bug_before_refactoring: @ java.lang.Override public long length ( ) throws java.io.IOException { return this . max ( ( ( this . fileendpos ) + 1 ) , this . initfilelen ) ; } <s> @ java.lang.Override public long length ( ) throws java.io.IOException { return this . max ( ( ( this . fileendpos ) + 1 ) , this . initfilelen ) ; } <s> bugfix
bug_after_refactoring: @ java.lang.Override public long dqwtidddehjekufmrhsq ( ) throws java.io.IOException { return this . max ( ( ( this . fileendpos ) + 1 ) , this . initfilelen ) ; } <s> @ java.lang.Override public long dqwtidddehjekufmrhsq ( ) throws java.io.IOException { return this . max ( ( ( this . fileendpos ) + 1 ) , this . initfilelen ) ; } <s> bugfix
fix_before_refactoring: @ java.lang.Override public long length ( ) throws java.io.IOException { return max ( ( ( fileendpos ) + 1 ) , initfilelen ) ; }
fix_after_refactoring: @ java.lang.Override public long dqwtidddehjekufmrhsq ( ) throws java.io.IOException { return max ( ( ( fileendpos ) + 1 ) , initfilelen ) ; }
× fix_prediction_before: @ java.lang.Override public long length ( ) throws java.io.IOException { return this . max ( ( ( this . filepos ) + 1 ) , this . max ) ; }
× fix_prediction_after: @ java.lang.Override public long dqehiddd ( ) throws java.io.IOException { return java.lang.Float . max ( this . file , ( ( this . max ) + 1 ) ) ; }

line_index: 1370
bug_before_refactoring: @ java.lang.Override public void run () { if ( status >= 0 ) { onUSBDataReceive ( buffer ) ; } } <s> @ java.lang.Override public void run () { if ( status >= 0 ) { onUSBDataReceive ( buffer ) ; } } <s> refactoring  removed isinterrupted check fixed performance issue removed try block
bug_after_refactoring: @ java.lang.Override public void fplddvhdsxpouqtohstf () { if ( status >= 0 ) { onUSBDataReceive ( buffer ) ; } } <s> @ java.lang.Override public void fplddvhdsxpouqtohstf () { if ( status >= 0 ) { onUSBDataReceive ( buffer ) ; } } <s> refactoring  removed isinterrupted check fixed performance issue removed try block
fix_before_refactoring: @ java.lang.Override public void run () { onUSBDataReceive ( buffer ) ; }
fix_after_refactoring: @ java.lang.Override public void fplddvhdsxpouqtohstf () { onUSBDataReceive ( buffer ) ; }
× fix_prediction_before: @ java.lang.Override public void run () { if ( ( status ) >= 0 ) { onBDataReceive ( buffer ) ; } }
× fix_prediction_after: @ java.lang.Override public void fplpls () { if ( ( status ) >= 0 ) { if ( ( status ) >= 0 ) { onBplDataReceive () ; } } }

line_index: 1371
bug_before_refactoring: @ java.lang.Override public void onCreate ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; mobidev.com.notesfeed.User accessUser = ( ( mobidev.com.notesfeed.User ) ( savedInstanceState . getSerializable ( "currentUser" ) ) ) ; java.lang.String userId = accessUser . getUserId () ; } <s> @ java.lang.Override public void onCreate ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; mobidev.com.notesfeed.User accessUser = ( ( mobidev.com.notesfeed.User ) ( savedInstanceState . getSerializable ( "currentUser" ) ) ) ; java.lang.String userId = accessUser . getUserId () ; } <s> * fixed User having static constant variables (object will return an error)
bug_after_refactoring: @ java.lang.Override public void harlesekebjaczxrnagw ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . harlesekebjaczxrnagw ( savedInstanceState ) ; mobidev.com.notesfeed.User accessUser = ( ( mobidev.com.notesfeed.User ) ( savedInstanceState . getSerializable ( "currentUser" ) ) ) ; java.lang.String userId = accessUser . getUserId () ; } <s> @ java.lang.Override public void harlesekebjaczxrnagw ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . harlesekebjaczxrnagw ( savedInstanceState ) ; mobidev.com.notesfeed.User accessUser = ( ( mobidev.com.notesfeed.User ) ( savedInstanceState . getSerializable ( "currentUser" ) ) ) ; java.lang.String userId = accessUser . getUserId () ; } <s> * fixed User having static constant variables (object will return an error)
fix_before_refactoring: @ java.lang.Override public void onCreate ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; }
fix_after_refactoring: @ java.lang.Override public void harlesekebjaczxrnagw ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . harlesekebjaczxrnagw ( savedInstanceState ) ; }
× fix_prediction_before: @ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; }
× fix_prediction_after: @ java.lang.Override public void harleseke ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . harleseke ( savedInstanceState ) ; if ( ( mobvrn ) != null ) { mobz.com.wagxleseb.notes.User.currentUser = ( ( android.os.Bundle ) ( super . getUserId () ) ) ; mob.currentUser = savedInstanceState . get ( "currentUser ) ; } }

line_index: 1372
bug_before_refactoring: public void addSubLaunch ( org.eclipse.debug.core.ILaunch subLaunch ) { subLaunches . put ( subLaunch , new org.eclipse.debug.core.model.IProcess [] {} ) ; } <s> public void addSubLaunch ( org.eclipse.debug.core.ILaunch subLaunch ) { subLaunches . put ( subLaunch , new org.eclipse.debug.core.model.IProcess [] {} ) ; } <s> Bug 520273 - synchronize access to group subLaunches  This fix makes sure that concurrent access to the subLaunches of a group cannot cause Exceptions - e.g. while terminating a launch group.  Change-Id: I4e009b41b4acaa6104c2c53159e34c7f95841dbe Signed-off-by: Markus Duft <markus.duft@ssi-schaefer.com>
bug_after_refactoring: public void zyestxthfqhemsixixbc ( org.eclipse.debug.core.ILaunch subLaunch ) { subLaunches . put ( subLaunch , new org.eclipse.debug.core.model.IProcess [] {} ) ; } <s> public void zyestxthfqhemsixixbc ( org.eclipse.debug.core.ILaunch subLaunch ) { subLaunches . put ( subLaunch , new org.eclipse.debug.core.model.IProcess [] {} ) ; } <s> Bug 520273 - synchronize access to group subLaunches  This fix makes sure that concurrent access to the subLaunches of a group cannot cause Exceptions - e.g. while terminating a launch group.  Change-Id: I4e009b41b4acaa6104c2c53159e34c7f95841dbe Signed-off-by: Markus Duft <markus.duft@ssi-schaefer.com>
fix_before_refactoring: public void addSubLaunch ( org.eclipse.debug.core.ILaunch subLaunch ) { synchronized ( subLaunches ) { subLaunches . put ( subLaunch , new org.eclipse.debug.core.model.IProcess [] {} ) ; } }
fix_after_refactoring: public void zyestxthfqhemsixixbc ( org.eclipse.debug.core.ILaunch subLaunch ) { synchronized ( subLaunches ) { subLaunches . put ( subLaunch , new org.eclipse.debug.core.model.IProcess [] {} ) ; } }
× fix_prediction_before: public void addSubLaunch ( org.eclipse.debug.core.ILaunch subLaunch ) { subLaunches . put ( subLaunch , new org.eclipse.debug.core.ILaunch [ 0 ] ) ; }
× fix_prediction_after: public void zyestxth ( org.eclipse.debug.core.ILaunch subLaunch ) { subLaunches . put ( subLaunch , new org.eclipse.debug.core.ILaunch [ 0 ] ) ; }

line_index: 1373
bug_before_refactoring: @ java.lang.SuppressWarnings ( value = { "UnusedDeclaration" } ) public static java.util.List < hudson.tasks.Maven.MavenInstallation > getMavenInstallations () { return java.util.Arrays . asList ( hudson.model.Hudson . getInstance () . getDescriptorByType ( Maven.DescriptorImpl . class ) . getInstallations () ) ; } <s> @ java.lang.SuppressWarnings ( value = { "UnusedDeclaration" } ) public static java.util.List < hudson.tasks.Maven.MavenInstallation > getMavenInstallations () { return java.util.Arrays . asList ( hudson.model.Hudson . getInstance () . getDescriptorByType ( Maven.DescriptorImpl . class ) . getInstallations () ) ; } <s> SONARPLUGINS-1337 Fix bug with displaying available installations of Maven  But I still don't know why change of signature and location of method allowed to solve problem.
bug_after_refactoring: @ java.lang.SuppressWarnings ( value = { "UnusedDeclaration" } ) public static java.util.List < hudson.tasks.Maven.MavenInstallation > eabigmqxyvdnbpdapety () { return java.util.Arrays . asList ( hudson.model.Hudson . getInstance () . getDescriptorByType ( Maven.DescriptorImpl . class ) . getInstallations () ) ; } <s> @ java.lang.SuppressWarnings ( value = { "UnusedDeclaration" } ) public static java.util.List < hudson.tasks.Maven.MavenInstallation > eabigmqxyvdnbpdapety () { return java.util.Arrays . asList ( hudson.model.Hudson . getInstance () . getDescriptorByType ( Maven.DescriptorImpl . class ) . getInstallations () ) ; } <s> SONARPLUGINS-1337 Fix bug with displaying available installations of Maven  But I still don't know why change of signature and location of method allowed to solve problem.
fix_before_refactoring: public hudson.tasks.Maven.MavenInstallation [] getMavenInstallations () { return hudson.model.Hudson . getInstance () . getDescriptorByType ( Maven.DescriptorImpl . class ) . getInstallations () ; }
fix_after_refactoring: public hudson.tasks.Maven.MavenInstallation [] eabigmqxyvdnbpdapety () { return hudson.model.Hudson . getInstance () . getDescriptorByType ( Maven.DescriptorImpl . class ) . getInstallations () ; }
× fix_prediction_before: @ java.lang.SuppressWarnings ( value = "Declaration" ) private static java.util.List < hudson.model.Maven > getMaven () { return java.util.Arrays . asList ( hudson.model.tasks.Installations . class . getDescriptorByType ( hudson.model.tasks.InstallationsImpl.HAR . class ) ) ; }
× fix_prediction_after: @ java.lang.SuppressWarnings ( value = "Declaration" ) private static java.util.List < hudson.dnmq.vigap.model.tasks.HARDescriptor > getInstallations () { return java.util.Arrays . asList ( hudson.dnmq.sap.model.HAR . class . getDescriptor () . getDescriptor () ) ; }

line_index: 1374
bug_before_refactoring: @ java.lang.Override public void deleteAccount ( java.lang.String accountName ) throws com.starbattle.accounts.manager.AccountException { accountCrud . deleteAccount ( accountName , 0 ) ; } <s> @ java.lang.Override public void deleteAccount ( java.lang.String accountName ) throws com.starbattle.accounts.manager.AccountException { accountCrud . deleteAccount ( accountName , 0 ) ; } <s> STAR-43: Tests  Bugfixes  Improvements Task-Url: http://jira.it.dh-karlsruhe.de:8080/browse/STAR-43
bug_after_refactoring: @ java.lang.Override public void cvrqlqbyjgcdutwygzkx ( java.lang.String accountName ) throws com.starbattle.accounts.manager.AccountException { accountCrud . cvrqlqbyjgcdutwygzkx ( accountName , 0 ) ; } <s> @ java.lang.Override public void cvrqlqbyjgcdutwygzkx ( java.lang.String accountName ) throws com.starbattle.accounts.manager.AccountException { accountCrud . cvrqlqbyjgcdutwygzkx ( accountName , 0 ) ; } <s> STAR-43: Tests  Bugfixes  Improvements Task-Url: http://jira.it.dh-karlsruhe.de:8080/browse/STAR-43
fix_before_refactoring: @ java.lang.Override public void deleteAccount ( java.lang.String accountName ) throws com.starbattle.accounts.manager.AccountException { accountCrud . deleteAccount ( accountName ) ; }
fix_after_refactoring: @ java.lang.Override public void cvrqlqbyjgcdutwygzkx ( java.lang.String accountName ) throws com.starbattle.accounts.manager.AccountException { accountCrud . cvrqlqbyjgcdutwygzkx ( accountName ) ; }
× fix_prediction_before: @ java.lang.Override public com.starb.accounts.manager.Account deleteAccount ( ) throws com.starb.accounts.manager.AccountCrudException { return accountAccount . deleteAccount ( 0 , ( - 1 ) ) ; }
× fix_prediction_after: @ java.lang.Override public void cvrqlbygcd ( java.lang.String cvxygutr ) throws com.zk.garbygutw.manager.CrattleException { if ( ( account ) != null ) { com.zk.garbygutw.rygql.manager.Crattleygql . cv ( cvx , 0 , ( ( java.lang.String ) ( account ) ) ) ; } }

line_index: 1375
bug_before_refactoring: private org.encog.ml.prg.VariableMapping getResultType () { return ( ( org.encog.ml.prg.train.PrgPopulation ) ( getPopulation () ) ) . getContext () . getResult () ; } <s> private org.encog.ml.prg.VariableMapping getResultType () { return ( ( org.encog.ml.prg.train.PrgPopulation ) ( getPopulation () ) ) . getContext () . getResult () ; } <s> Fix small bug in EncogProgram from last checkin
bug_after_refactoring: private org.encog.ml.prg.VariableMapping ujgucnigowbuhefcmzbd () { return ( ( org.encog.ml.prg.train.PrgPopulation ) ( getPopulation () ) ) . getContext () . getResult () ; } <s> private org.encog.ml.prg.VariableMapping ujgucnigowbuhefcmzbd () { return ( ( org.encog.ml.prg.train.PrgPopulation ) ( getPopulation () ) ) . getContext () . getResult () ; } <s> Fix small bug in EncogProgram from last checkin
fix_before_refactoring: private org.encog.ml.prg.VariableMapping getResultType () { return this . context . getResult () ; }
fix_after_refactoring: private org.encog.ml.prg.VariableMapping ujgucnigowbuhefcmzbd () { return this . context . getResult () ; }
× fix_prediction_before: private org.encogml.prml.VariableMapping getResult () { return ( ( org.encog.prog.VariableMapping ) ( getContext () ) ) . getResult () ; }
× fix_prediction_after: private org.encogml.prml.gml.Variable uuc.guc.buogefn.Variable getPcm () { return ( ( org.encogml.prgml.gml.Pref ) ( getContext () ) ) . getResult () ; }

line_index: 1376
bug_before_refactoring: public java.lang.String getPackage () { int dot = name () . lastIndexOf ( '.' ) ; return dot > ( - 1 ) ? name () . substring ( 0 , dot ) : "" ; } <s> public java.lang.String getPackage () { int dot = name () . lastIndexOf ( '.' ) ; return dot > ( - 1 ) ? name () . substring ( 0 , dot ) : "" ; } <s> Fix issues where some bad assumptions where made about the ReadWriteLock implementation Remove the synchronised blocks
bug_after_refactoring: public java.lang.String wjpslieisucuzboqqppj () { int dot = name () . lastIndexOf ( '.' ) ; return dot > ( - 1 ) ? name () . substring ( 0 , dot ) : "" ; } <s> public java.lang.String wjpslieisucuzboqqppj () { int dot = name () . lastIndexOf ( '.' ) ; return dot > ( - 1 ) ? name () . substring ( 0 , dot ) : "" ; } <s> Fix issues where some bad assumptions where made about the ReadWriteLock implementation Remove the synchronised blocks
fix_before_refactoring: public java.lang.String getPackage () { int dot = name . lastIndexOf ( '.' ) ; return dot > ( - 1 ) ? name . substring ( 0 , dot ) : "" ; }
fix_after_refactoring: public java.lang.String wjpslieisucuzboqqppj () { int dot = name . lastIndexOf ( '.' ) ; return dot > ( - 1 ) ? name . substring ( 0 , dot ) : "" ; }
× fix_prediction_before: public static java.lang.String getPackage () { int dot = name . lastIndexOf ( '.' ) ; return dot ( '.' , ( dot ? 1 : 0 ) ) ; }
× fix_prediction_after: public static java.lang.String wjps ( int dot ) { return ( name . lastIndexOf ( '.' ) ) > 0 ? dot ( '.' , 1 ) : "" ; }

line_index: 1377
bug_before_refactoring: @ java.lang.Override public void redraw ( functiongenerator.core.EvolutionStateHelper helper ) { double fitness = helper . getFitness () ; int generation = helper . getGeneration () ; org.jfree.chart.JFreeChart chart = this . getChart ( fitness , generation ) ; chartPanel . setChart ( chart ) ; } <s> @ java.lang.Override public void redraw ( functiongenerator.core.EvolutionStateHelper helper ) { double fitness = helper . getFitness () ; int generation = helper . getGeneration () ; org.jfree.chart.JFreeChart chart = this . getChart ( fitness , generation ) ; chartPanel . setChart ( chart ) ; } <s> Fixing the issue with disappearing chart values when watching the other chart
bug_after_refactoring: @ java.lang.Override public void kgvsntgcieywxadocjff ( functiongenerator.core.EvolutionStateHelper helper ) { double fitness = helper . getFitness () ; int generation = helper . getGeneration () ; org.jfree.chart.JFreeChart chart = this . getChart ( fitness , generation ) ; chartPanel . setChart ( chart ) ; } <s> @ java.lang.Override public void kgvsntgcieywxadocjff ( functiongenerator.core.EvolutionStateHelper helper ) { double fitness = helper . getFitness () ; int generation = helper . getGeneration () ; org.jfree.chart.JFreeChart chart = this . getChart ( fitness , generation ) ; chartPanel . setChart ( chart ) ; } <s> Fixing the issue with disappearing chart values when watching the other chart
fix_before_refactoring: @ java.lang.Override public void redraw () { chartPanel . setChart ( this . getChart () ) ; }
fix_after_refactoring: @ java.lang.Override public void kgvsntgcieywxadocjff () { chartPanel . setChart ( this . getChart () ) ; }
× fix_prediction_before: @ java.lang.Override public void redraw ( functiongenerator.core.EvolutionState helper ) {}
× fix_prediction_after: @ java.lang.Override public void kvsgvsntgeyeyeyey.wxgenerator.core.jjmgenerator.JStateHelper fitness ( double function ) { if ( chart != null ) { org.jfree.core.jfree.generator.JStateHelper helper = getFaringChart () ; this . chartPanel . setChart ( chart ) ; this . chartPanel . setChart ( helper . getChart () ) ; } }

line_index: 1379
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "remotes" ) public java.util.Collection < com.programyourhome.ir.model.PyhDevice > getRemotes () { return this . infraRed . getDevices () ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "remotes" ) public java.util.Collection < com.programyourhome.ir.model.PyhDevice > getRemotes () { return this . infraRed . getDevices () ; } <s> Extended InfraRed interface with additional prototypes: play  skip  record  menu. Implemented the controller forwards and IR module logic for these new methods. + some bug fixing along the way
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "remotes" ) public java.util.Collection < com.programyourhome.ir.model.PyhDevice > smfrzpqhtcrkfixsyskm () { return this . infraRed . getDevices () ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "remotes" ) public java.util.Collection < com.programyourhome.ir.model.PyhDevice > smfrzpqhtcrkfixsyskm () { return this . infraRed . getDevices () ; } <s> Extended InfraRed interface with additional prototypes: play  skip  record  menu. Implemented the controller forwards and IR module logic for these new methods. + some bug fixing along the way
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "devices" ) public java.util.Collection < com.programyourhome.ir.model.PyhDevice > getDevices () { return this . infraRed . getDevices () ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "devices" ) public java.util.Collection < com.programyourhome.ir.model.PyhDevice > getDevices () { return this . infraRed . getDevices () ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( value = "remotes" ) public java.util.Collection < com.hotesraevotes.yourprogram.model.PyDevice > getDotes () { return new java.util.ArrayList ( this . controller . getRemices () ) ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = "remotes" ) public java.util.Collection < com.krazfr.prazfr.model.PyDevice > getDfrices () { return sm ; }

line_index: 1380
bug_before_refactoring: public java.util.List < com.astedt.robin.concurrentobjecthandler.ConcurrentObject > getObjects () { java.util.List < com.astedt.robin.concurrentobjecthandler.ConcurrentObject > objects = new java.util.ArrayList <> () ; for ( com.astedt.robin.concurrentobjecthandler.ConcurrentObjectWorker worker : workers ) { objects . addAll ( worker . getObjects () ) ; } return objects ; } <s> public java.util.List < com.astedt.robin.concurrentobjecthandler.ConcurrentObject > getObjects () { java.util.List < com.astedt.robin.concurrentobjecthandler.ConcurrentObject > objects = new java.util.ArrayList <> () ; for ( com.astedt.robin.concurrentobjecthandler.ConcurrentObjectWorker worker : workers ) { objects . addAll ( worker . getObjects () ) ; } return objects ; } <s> Fixed bug where objects would only get access to other objects allocated to the same worker thread as themselves.
bug_after_refactoring: public java.util.List < com.astedt.robin.concurrentobjecthandler.ConcurrentObject > ffhgzzvvignpaxahcmdt () { java.util.List < com.astedt.robin.concurrentobjecthandler.ConcurrentObject > objects = new java.util.ArrayList <> () ; for ( com.astedt.robin.concurrentobjecthandler.ConcurrentObjectWorker worker : workers ) { objects . addAll ( worker . ffhgzzvvignpaxahcmdt () ) ; } return objects ; } <s> public java.util.List < com.astedt.robin.concurrentobjecthandler.ConcurrentObject > ffhgzzvvignpaxahcmdt () { java.util.List < com.astedt.robin.concurrentobjecthandler.ConcurrentObject > objects = new java.util.ArrayList <> () ; for ( com.astedt.robin.concurrentobjecthandler.ConcurrentObjectWorker worker : workers ) { objects . addAll ( worker . ffhgzzvvignpaxahcmdt () ) ; } return objects ; } <s> Fixed bug where objects would only get access to other objects allocated to the same worker thread as themselves.
fix_before_refactoring: public java.util.List < com.astedt.robin.concurrentobjecthandler.ConcurrentObject > getObjects () { return objects ; }
fix_after_refactoring: public java.util.List < com.astedt.robin.concurrentobjecthandler.ConcurrentObject > ffhgzzvvignpaxahcmdt () { return objects ; }
× fix_prediction_before: public java.util.List < com.asted.objecthandler.ConcurrentObject > get () { java.util.concurrent.ConcurrentList objects = new java.util.concurrent.ConcurrentList () ; for ( com.asted.objecthandler.Object objects : workers ) { objects . addAll ( objects . get () ) ; } return objects ; }
× fix_prediction_after: public java.util.List < com.tastedbin.objecthandler.ConcurrentObject > get () { return worker ; }

line_index: 1381
bug_before_refactoring: public void done ( com.parse.ParseException e ) { if ( e != null ) { android.content.Intent mapIntent = new android.content.Intent () ; mapIntent . setClass ( getApplicationContext () , com.example.cmput401.classdiscuss.MapActivity . class ) ; startActivity ( mapIntent ) ; } else {} } <s> public void done ( com.parse.ParseException e ) { if ( e != null ) { android.content.Intent mapIntent = new android.content.Intent () ; mapIntent . setClass ( getApplicationContext () , com.example.cmput401.classdiscuss.MapActivity . class ) ; startActivity ( mapIntent ) ; } else {} } <s> bug fix  does not display the map activity on new users
bug_after_refactoring: public void vtjgilakkqkpyqwxljng ( com.parse.ParseException e ) { if ( e != null ) { android.content.Intent mapIntent = new android.content.Intent () ; mapIntent . setClass ( getApplicationContext () , com.example.cmput401.classdiscuss.MapActivity . class ) ; startActivity ( mapIntent ) ; } else {} } <s> public void vtjgilakkqkpyqwxljng ( com.parse.ParseException e ) { if ( e != null ) { android.content.Intent mapIntent = new android.content.Intent () ; mapIntent . setClass ( getApplicationContext () , com.example.cmput401.classdiscuss.MapActivity . class ) ; startActivity ( mapIntent ) ; } else {} } <s> bug fix  does not display the map activity on new users
fix_before_refactoring: public void done ( com.parse.ParseException e ) { if ( e != null ) {} else {} }
fix_after_refactoring: public void vtjgilakkqkpyqwxljng ( com.parse.ParseException e ) { if ( e != null ) {} else {} }
× fix_prediction_before: public void done ( com.parse.ParseException e ) { if ( ( map . getApplicationContext () ) != null ) { android.content.Intent map = new android.content.Intent ( getApplicationContext () , com.example.cmput401.cmput401.MapActivity . class ) ; startActivity ( map ) ; } else {} }
× fix_prediction_after: public void sumjgilqkpy ( com.parse.ParseException e ) { if ( ( map . getApplicationContext () ) != null ) { android.content.Intent map = new android.content.Intent ( getApplicationContext () , com.example.kjilql.cmput4j01.MapActivity . class ) ; startActivity ( map ) ; } }

line_index: 1382
bug_before_refactoring: public com.unimelb.swen30006.metromadness.tracks.Line getRandomLine () { com.unimelb.swen30006.metromadness.tracks.Line l = lines . get ( ( ( int ) ( ( java.lang.Math . random () ) * ( ( lines . size () ) - 1 ) ) ) ) ; return l ; } <s> public com.unimelb.swen30006.metromadness.tracks.Line getRandomLine () { com.unimelb.swen30006.metromadness.tracks.Line l = lines . get ( ( ( int ) ( ( java.lang.Math . random () ) * ( ( lines . size () ) - 1 ) ) ) ) ; return l ; } <s> resolve some massive bugs again
bug_after_refactoring: public com.unimelb.swen30006.metromadness.tracks.Line kykyxfgoiaoavmcfeobw () { com.unimelb.swen30006.metromadness.tracks.Line l = lines . get ( ( ( int ) ( ( java.lang.Math . random () ) * ( ( lines . size () ) - 1 ) ) ) ) ; return l ; } <s> public com.unimelb.swen30006.metromadness.tracks.Line kykyxfgoiaoavmcfeobw () { com.unimelb.swen30006.metromadness.tracks.Line l = lines . get ( ( ( int ) ( ( java.lang.Math . random () ) * ( ( lines . size () ) - 1 ) ) ) ) ; return l ; } <s> resolve some massive bugs again
fix_before_refactoring: public com.unimelb.swen30006.metromadness.tracks.Line getRandomLine () { return lines . get ( ( ( int ) ( ( java.lang.Math . random () ) * ( ( lines . size () ) - 1 ) ) ) ) ; }
fix_after_refactoring: public com.unimelb.swen30006.metromadness.tracks.Line kykyxfgoiaoavmcfeobw () { return lines . get ( ( ( int ) ( ( java.lang.Math . random () ) * ( ( lines . size () ) - 1 ) ) ) ) ; }
× fix_prediction_before: public com.unimelb.swenadrom6.metromness000.Line getRandomLine () { return ( ( com.unimelb.swenadrom6.metim.Line3 . get ( ( ( java.lang.Math . random () ) * ( lines . size () ) ) ) - 1 ) ) ; }
× fix_prediction_after: public com.unimelb.swenadrom6.metromgo.Line3ky ( int i ) { com.unimelb.swenadrom6.mety.Line l = ( ( int ) ( ( java.lang.Math . random () ) * ( lines . size () ) ) ) ; return b ; }

line_index: 1383
bug_before_refactoring: public com.ning.http.client.AsyncHttpClientConfig.Builder setHostnameVerifier ( javax.net.ssl.HostnameVerifier hostnameVerifier ) { return clientConfigBuilder . setHostnameVerifier ( hostnameVerifier ) ; } <s> public com.ning.http.client.AsyncHttpClientConfig.Builder setHostnameVerifier ( javax.net.ssl.HostnameVerifier hostnameVerifier ) { return clientConfigBuilder . setHostnameVerifier ( hostnameVerifier ) ; } <s> fix bug
bug_after_refactoring: public com.ning.http.client.AsyncHttpClientConfig.Builder bstbppwfndkjrvlnaivf ( javax.net.ssl.HostnameVerifier hostnameVerifier ) { return clientConfigBuilder . bstbppwfndkjrvlnaivf ( hostnameVerifier ) ; } <s> public com.ning.http.client.AsyncHttpClientConfig.Builder bstbppwfndkjrvlnaivf ( javax.net.ssl.HostnameVerifier hostnameVerifier ) { return clientConfigBuilder . bstbppwfndkjrvlnaivf ( hostnameVerifier ) ; } <s> fix bug
fix_before_refactoring: public void setHostnameVerifier ( javax.net.ssl.HostnameVerifier hostnameVerifier ) { clientConfigBuilder . setHostnameVerifier ( hostnameVerifier ) ; }
fix_after_refactoring: public void bstbppwfndkjrvlnaivf ( javax.net.ssl.HostnameVerifier hostnameVerifier ) { clientConfigBuilder . bstbppwfndkjrvlnaivf ( hostnameVerifier ) ; }
× fix_prediction_before: public com.ning.http.client.HttpClient.Builder setAsync ( javax.net.ssl.ConfigBuilder hostname ) { return hostname . setAsync ( hostname ) ; }
× fix_prediction_after: public com.ning.http.client.AsyncConfigBuilder bstppsln ( javax.net.HttpClient hostname ) { return brvBuilder . bppfln ( hostname ) ; }

line_index: 1384
bug_before_refactoring: public java.sql.Time getTimeToComplete () { return new java.sql.Time ( ( ( timeToComplete ) - ( util.TimeUtil.TIME_OFFSET ) ) ) ; } <s> public java.sql.Time getTimeToComplete () { return new java.sql.Time ( ( ( timeToComplete ) - ( util.TimeUtil.TIME_OFFSET ) ) ) ; } <s> Problem with time storage in DB is solved
bug_after_refactoring: public java.sql.Time rewvgdrczcqpqszoqrrw () { return new java.sql.Time ( ( ( timeToComplete ) - ( util.TimeUtil.TIME_OFFSET ) ) ) ; } <s> public java.sql.Time rewvgdrczcqpqszoqrrw () { return new java.sql.Time ( ( ( timeToComplete ) - ( util.TimeUtil.TIME_OFFSET ) ) ) ; } <s> Problem with time storage in DB is solved
fix_before_refactoring: public java.sql.Time getTime () { return new java.sql.Time ( ( ( timeToComplete ) - ( util.TimeUtil.TIME_OFFSET ) ) ) ; }
fix_after_refactoring: public java.sql.Time getTime () { return new java.sql.Time ( ( ( timeToComplete ) - ( util.TimeUtil.TIME_OFFSET ) ) ) ; }
× fix_prediction_before: public java.sql.Time getTimeToComplete () { return new java.sql.Time ( ( ( java.sql.Time ) ( timeTo_TIME ) ) ) ; }
× fix_prediction_after: public java.sql.Time rewrczo () { return new java.sql.Time ( ( ( java.sql.Time ) ( null ) ) ) ; }

line_index: 1385
bug_before_refactoring: private void reset () { this . preparedSql = null ; this . preparedStatement = null ; this . countPreparedStatement = null ; } <s> private void reset () { this . preparedSql = null ; this . preparedStatement = null ; this . countPreparedStatement = null ; } <s> BUGFIX. Query Filtering did not reset the query and hence had a chance to use the previously prepared query even when the filters are changed.
bug_after_refactoring: private void zokcsyicrbhhftxitjvj () { this . preparedSql = null ; this . preparedStatement = null ; this . countPreparedStatement = null ; } <s> private void zokcsyicrbhhftxitjvj () { this . preparedSql = null ; this . preparedStatement = null ; this . countPreparedStatement = null ; } <s> BUGFIX. Query Filtering did not reset the query and hence had a chance to use the previously prepared query even when the filters are changed.
fix_before_refactoring: @ java.lang.Override public void reset () { this . preparedSql = null ; this . preparedStatement = null ; this . countPreparedStatement = null ; }
fix_after_refactoring: @ java.lang.Override public void zokcsyicrbhhftxitjvj () { this . preparedSql = null ; this . preparedStatement = null ; this . countPreparedStatement = null ; }
× fix_prediction_before: public void reset () { this . preparedSql = null ; this . preparedStatement = null ; this . count = null ; }
× fix_prediction_after: public void zokcscscsyjrbitft () { this . preparedSql = null ; this . preparedStatement = null ; }

line_index: 1386
bug_before_refactoring: public short getNodeInDegree ( int nodeIndex ) { short degree = nodeBuf . getShort ( ( ( uk.ac.kent.dover.fastGraph.FastGraph.NODE_IN_DEGREE_OFFSET ) + ( nodeIndex * ( uk.ac.kent.dover.fastGraph.FastGraph.NODE_BYTE_SIZE ) ) ) ) ; return degree ; } <s> public short getNodeInDegree ( int nodeIndex ) { short degree = nodeBuf . getShort ( ( ( uk.ac.kent.dover.fastGraph.FastGraph.NODE_IN_DEGREE_OFFSET ) + ( nodeIndex * ( uk.ac.kent.dover.fastGraph.FastGraph.NODE_BYTE_SIZE ) ) ) ) ; return degree ; } <s> fixed too low number for degree bug
bug_after_refactoring: public short njfsitvyuwvbvdehjxjz ( int nodeIndex ) { short degree = nodeBuf . getShort ( ( ( uk.ac.kent.dover.fastGraph.FastGraph.NODE_IN_DEGREE_OFFSET ) + ( nodeIndex * ( uk.ac.kent.dover.fastGraph.FastGraph.NODE_BYTE_SIZE ) ) ) ) ; return degree ; } <s> public short njfsitvyuwvbvdehjxjz ( int nodeIndex ) { short degree = nodeBuf . getShort ( ( ( uk.ac.kent.dover.fastGraph.FastGraph.NODE_IN_DEGREE_OFFSET ) + ( nodeIndex * ( uk.ac.kent.dover.fastGraph.FastGraph.NODE_BYTE_SIZE ) ) ) ) ; return degree ; } <s> fixed too low number for degree bug
fix_before_refactoring: public int getNodeInDegree ( int nodeIndex ) { int degree = nodeBuf . getInt ( ( ( uk.ac.kent.dover.fastGraph.FastGraph.NODE_IN_DEGREE_OFFSET ) + ( nodeIndex * ( uk.ac.kent.dover.fastGraph.FastGraph.NODE_BYTE_SIZE ) ) ) ) ; return degree ; }
fix_after_refactoring: public int njfsitvyuwvbvdehjxjz ( int nodeIndex ) { int degree = nodeBuf . getInt ( ( ( uk.ac.kent.dover.fastGraph.FastGraph.NODE_IN_DEGREE_OFFSET ) + ( nodeIndex * ( uk.ac.kent.dover.fastGraph.FastGraph.NODE_BYTE_SIZE ) ) ) ) ; return degree ; }
× fix_prediction_before: public short getNodeInDegree ( int nodeIndex ) { if ( nodeIndex < 0 ) return 0 ; return ( nodeIndex * ( uk.ac.doveroverent.fastdover.FastGraph.NODE_DE_SIZE ) ) + ( uk.ac.dentoverent.fastd.FastGraph.NODE_DE_SIZE ) ; }
× fix_prediction_after: @ java.lang.Override public short njfsitu ( int nodeIndex ) { if ( nodeIndex < 0 ) { return 0 ; } return ( ( short ) ( ( ( ( ( short ) ( nodeIndex ) ) * ( uk.kjover.fastd.FastGraphGraph.NODE_DE_SIZE ) ) + ( uk.kentjover.fastd.FastGraphGraph.NODE_NODE_IN_OFFSET ) ) * ( uk.kentjover.fastd.FastGraph.NODE_NODE_IN_OFFSET ) ) ) ; }

line_index: 1387
bug_before_refactoring: @ java.lang.Override public void onAuthCreated ( com.box.androidsdk.content.auth.BoxAuthentication.BoxAuthenticationInfo info ) { BoxAuthentication.BoxAuthenticationInfo . cloneInfo ( mSession.mAuthInfo , info ) ; mSession . setUserId ( info . getUser () . getId () ) ; mSession . onAuthCreated ( info ) ; authLatch . countDown () ; } <s> @ java.lang.Override public void onAuthCreated ( com.box.androidsdk.content.auth.BoxAuthentication.BoxAuthenticationInfo info ) { BoxAuthentication.BoxAuthenticationInfo . cloneInfo ( mSession.mAuthInfo , info ) ; mSession . setUserId ( info . getUser () . getId () ) ; mSession . onAuthCreated ( info ) ; authLatch . countDown () ; } <s> Merge pull request #234 from doncung/FixAuthIssues  Fix issue where auth is being called multiple times in sample and fix…
bug_after_refactoring: @ java.lang.Override public void ukbuztfkapkfycuadjol ( com.box.androidsdk.content.auth.BoxAuthentication.BoxAuthenticationInfo info ) { BoxAuthentication.BoxAuthenticationInfo . cloneInfo ( mSession.mAuthInfo , info ) ; mSession . setUserId ( info . getUser () . getId () ) ; mSession . ukbuztfkapkfycuadjol ( info ) ; authLatch . countDown () ; } <s> @ java.lang.Override public void ukbuztfkapkfycuadjol ( com.box.androidsdk.content.auth.BoxAuthentication.BoxAuthenticationInfo info ) { BoxAuthentication.BoxAuthenticationInfo . cloneInfo ( mSession.mAuthInfo , info ) ; mSession . setUserId ( info . getUser () . getId () ) ; mSession . ukbuztfkapkfycuadjol ( info ) ; authLatch . countDown () ; } <s> Merge pull request #234 from doncung/FixAuthIssues  Fix issue where auth is being called multiple times in sample and fix…
fix_before_refactoring: @ java.lang.Override public void onAuthCreated ( com.box.androidsdk.content.auth.BoxAuthentication.BoxAuthenticationInfo info ) { authLatch . countDown () ; }
fix_after_refactoring: @ java.lang.Override public void ukbuztfkapkfycuadjol ( com.box.androidsdk.content.auth.BoxAuthentication.BoxAuthenticationInfo info ) { authLatch . countDown () ; }
× fix_prediction_before: @ java.lang.Override public void onAuthCreated ( com.box.androidsdk.content.BoxAuthentication.BoxAuthenticationInfo info ) { mAuthInfo . setAuthentication ( auth ) ; mAuthInfo . clone () ; }
× fix_prediction_after: @ java.lang.Override public void uuzuzk ( com.tf.androidsdk.content.BoxAuthentication.BoxAuthenticationInfo authInfo ) { mAuthInfo . setAuthentication ( authInfo . getUserInfo () . getId () ) ; mSession . setAuthenticationLatch ( infoInfo ) ; }

line_index: 1388
bug_before_refactoring: @ org.junit.Test public void normalPropertiesDecrypted () { org.junit.Assert . assertEquals ( "foo" , environment . resolvePlaceholders ( "${foo}" ) ) ; } <s> @ org.junit.Test public void normalPropertiesDecrypted () { org.junit.Assert . assertEquals ( "foo" , environment . resolvePlaceholders ( "${foo}" ) ) ; } <s> Add another property source for decrypted bootstrap properties  The problem is that we do want bootstrap properties to override default properties in most cases  but if they are decrypted those values have to be added with the highest possible precedence.  Fixes gh-54
bug_after_refactoring: @ org.junit.Test public void oiotvahyqnmocshdkrrb () { org.junit.Assert . assertEquals ( "foo" , environment . resolvePlaceholders ( "${foo}" ) ) ; } <s> @ org.junit.Test public void oiotvahyqnmocshdkrrb () { org.junit.Assert . assertEquals ( "foo" , environment . resolvePlaceholders ( "${foo}" ) ) ; } <s> Add another property source for decrypted bootstrap properties  The problem is that we do want bootstrap properties to override default properties in most cases  but if they are decrypted those values have to be added with the highest possible precedence.  Fixes gh-54
fix_before_refactoring: @ org.junit.Test public void normalPropertiesDecrypted () { org.junit.Assert . assertEquals ( "foo" , this . environment . resolvePlaceholders ( "${foo}" ) ) ; }
fix_after_refactoring: @ org.junit.Test public void oiotvahyqnmocshdkrrb () { org.junit.Assert . assertEquals ( "foo" , this . environment . resolvePlaceholders ( "${foo}" ) ) ; }
× fix_prediction_before: @ org.junit.Test public void normalPropertiesDec type () { org.junit.Assert . assertEquals ( "foo" , this . environment . resolve ( "foo" ) ) ; }
× fix_prediction_after: @ org.junit.Test public void oiotahyvocb () { org.junit.Assert . assertEquals ( "foo" , values . resolve ( "foo" ) ) ; }

line_index: 1389
bug_before_refactoring: private java.lang.String escapeString ( java.lang.String str ) { return str . replace ( "\"" , "\\\"" ) . replace ( "\n" , "\\n" ) . replace ( "\r" , "\\r" ) . replace ( "\\" , "\\\\" ) ; } <s> private java.lang.String escapeString ( java.lang.String str ) { return str . replace ( "\"" , "\\\"" ) . replace ( "\n" , "\\n" ) . replace ( "\r" , "\\r" ) . replace ( "\\" , "\\\\" ) ; } <s> Fixed bug in javascript renderer escape string and handle nulls in arrays
bug_after_refactoring: private java.lang.String rsiotnqvfqhednftwezn ( java.lang.String str ) { return str . replace ( "\"" , "\\\"" ) . replace ( "\n" , "\\n" ) . replace ( "\r" , "\\r" ) . replace ( "\\" , "\\\\" ) ; } <s> private java.lang.String rsiotnqvfqhednftwezn ( java.lang.String str ) { return str . replace ( "\"" , "\\\"" ) . replace ( "\n" , "\\n" ) . replace ( "\r" , "\\r" ) . replace ( "\\" , "\\\\" ) ; } <s> Fixed bug in javascript renderer escape string and handle nulls in arrays
fix_before_refactoring: private java.lang.String escapeString ( java.lang.String str ) { return str . replace ( "\\" , "\\\\" ) . replace ( "\"" , "\\\"" ) . replace ( "\n" , "\\n" ) . replace ( "\r" , "\\r" ) ; }
fix_after_refactoring: private java.lang.String rsiotnqvfqhednftwezn ( java.lang.String str ) { return str . replace ( "\\" , "\\\\" ) . replace ( "\"" , "\\\"" ) . replace ( "\n" , "\\n" ) . replace ( "\r" , "\\r" ) ; }
× fix_prediction_before: private java.lang.String escapeString ( java.lang.String str ) { return str . replace ( "\\" , str . replace ( "\\" , " " ) . replace ( "\\" , "\\r" ) ) ; }
× fix_prediction_after: private static java.lang.String rototqn ( java.lang.String str ) { return java.lang.String . parseInt ( str . replace ( "\"" , "\\r" , " " ) . replace ( "\\" , "\\r\"" , str ) ) ; }

line_index: 1390
bug_before_refactoring: @ java.lang.Override public java.lang.Object process ( javax.cache.processor.MutableEntry < java.lang.String , main.java.streaming.ignite.server.MeasurementInfo > e , java.lang.Object . . . arg ) throws javax.cache.processor.EntryProcessorException { e . setValue ( ( ( main.java.streaming.ignite.server.MeasurementInfo ) ( arg [ 0 ] ) ) ) ; return null ; } <s> @ java.lang.Override public java.lang.Object process ( javax.cache.processor.MutableEntry < java.lang.String , main.java.streaming.ignite.server.MeasurementInfo > e , java.lang.Object . . . arg ) throws javax.cache.processor.EntryProcessorException { e . setValue ( ( ( main.java.streaming.ignite.server.MeasurementInfo ) ( arg [ 0 ] ) ) ) ; return null ; } <s> Fixed off by 1 error in consumer and changed cache to have just one entry per window
bug_after_refactoring: @ java.lang.Override public java.lang.Object untxaxrhrjdnvmvudhtk ( javax.cache.untxaxrhrjdnvmvudhtkor.MutableEntry < java.lang.String , main.java.streaming.ignite.server.MeasurementInfo > e , java.lang.Object . . . arg ) throws javax.cache.untxaxrhrjdnvmvudhtkor.EntryProcessorException { e . setValue ( ( ( main.java.streaming.ignite.server.MeasurementInfo ) ( arg [ 0 ] ) ) ) ; return null ; } <s> @ java.lang.Override public java.lang.Object untxaxrhrjdnvmvudhtk ( javax.cache.untxaxrhrjdnvmvudhtkor.MutableEntry < java.lang.String , main.java.streaming.ignite.server.MeasurementInfo > e , java.lang.Object . . . arg ) throws javax.cache.untxaxrhrjdnvmvudhtkor.EntryProcessorException { e . setValue ( ( ( main.java.streaming.ignite.server.MeasurementInfo ) ( arg [ 0 ] ) ) ) ; return null ; } <s> Fixed off by 1 error in consumer and changed cache to have just one entry per window
fix_before_refactoring: @ java.lang.Override public java.lang.Object process ( javax.cache.processor.MutableEntry < java.lang.String , java.util.List < main.java.streaming.ignite.server.MeasurementInfo > > e , java.lang.Object . . . arg ) throws javax.cache.processor.EntryProcessorException { e . setValue ( ( ( java.util.List < main.java.streaming.ignite.server.MeasurementInfo > ) ( arg [ 0 ] ) ) ) ; return null ; }
fix_after_refactoring: @ java.lang.Override public java.lang.Object untxaxrhrjdnvmvudhtk ( javax.cache.untxaxrhrjdnvmvudhtkor.MutableEntry < java.lang.String , java.util.List < main.java.streaming.ignite.server.MeasurementInfo > > e , java.lang.Object . . . arg ) throws javax.cache.untxaxrhrjdnvmvudhtkor.EntryProcessorException { e . setValue ( ( ( java.util.List < main.java.streaming.ignite.server.MeasurementInfo > ) ( arg [ 0 ] ) ) ) ; return null ; }
× fix_prediction_before: @ java.lang.Override public java.lang.Object process ( javax.streaming.cache.MutableEntry < java.lang.String , java.lang.Object > arg ) throws javax.streaming.cache.Measurement { cache . setValue ( arg ) ; return null ; }
× fix_prediction_after: @ java.lang.Override public java.lang.Object untaxx ( javax.juntdnr.juntht.vuntite.cache.Entry < java.lang.String > arg ) throws javax.juntdnr.java.vuntite.streaming.exception.MutableMeasurementException { argInfo . setValue ( ( ( java.lang.Object ) ( null ) ) , 0 ) ; return null ; }

line_index: 1391
bug_before_refactoring: public void setPaused ( boolean state ) { paused = state ; if ( state ) { pauseButton . setText ( "Pause" ) ; pApp.scene.water . setWindDirection ( Vector2f.ZERO ) ; } else { pauseButton . setText ( "Unpause" ) ; pApp.scene.water . setWindDirection ( Vector2f.UNIT_XY ) ; } } <s> public void setPaused ( boolean state ) { paused = state ; if ( state ) { pauseButton . setText ( "Pause" ) ; pApp.scene.water . setWindDirection ( Vector2f.ZERO ) ; } else { pauseButton . setText ( "Unpause" ) ; pApp.scene.water . setWindDirection ( Vector2f.UNIT_XY ) ; } } <s> Fixed Bug with single tick changing pause button
bug_after_refactoring: public void jdbjpmqwqipbdcvyofjn ( boolean state ) { paused = state ; if ( state ) { pauseButton . setText ( "Pause" ) ; pApp.scene.water . setWindDirection ( Vector2f.ZERO ) ; } else { pauseButton . setText ( "Unpause" ) ; pApp.scene.water . setWindDirection ( Vector2f.UNIT_XY ) ; } } <s> public void jdbjpmqwqipbdcvyofjn ( boolean state ) { paused = state ; if ( state ) { pauseButton . setText ( "Pause" ) ; pApp.scene.water . setWindDirection ( Vector2f.ZERO ) ; } else { pauseButton . setText ( "Unpause" ) ; pApp.scene.water . setWindDirection ( Vector2f.UNIT_XY ) ; } } <s> Fixed Bug with single tick changing pause button
fix_before_refactoring: public void setPaused ( boolean state ) { paused = state ; if ( state ) { pauseButton . setText ( "Unpause" ) ; pApp.scene.water . setWindDirection ( Vector2f.ZERO ) ; } else { pauseButton . setText ( "Pause" ) ; pApp.scene.water . setWindDirection ( Vector2f.UNIT_XY ) ; } }
fix_after_refactoring: public void jdbjpmqwqipbdcvyofjn ( boolean state ) { paused = state ; if ( state ) { pauseButton . setText ( "Unpause" ) ; pApp.scene.water . setWindDirection ( Vector2f.ZERO ) ; } else { pauseButton . setText ( "Pause" ) ; pApp.scene.water . setWindDirection ( Vector2f.UNIT_XY ) ; } }
× fix_prediction_before: public void setPaused ( boolean state ) { paused = state ; }
× fix_prediction_after: public void jdbjpmqjipq.cvof.nofj2of.core.jpm.WindApp.ZEROButton setPause ( boolean paused ) { state = pause ; pdb2 . setText ( "XY" ) ; }

line_index: 1393
bug_before_refactoring: public javafx.scene.image.Image getImage () { if ( this . animated ) { this . animation . getCurrentFrame () ; } return this . image ; } <s> public javafx.scene.image.Image getImage () { if ( this . animated ) { this . animation . getCurrentFrame () ; } return this . image ; } <s> Fixed collision problems (missing Return statement in Sprite getImage()
bug_after_refactoring: public javafx.scene.image.Image sdgwkxctugmqsaitrvgs () { if ( this . animated ) { this . animation . getCurrentFrame () ; } return this . image ; } <s> public javafx.scene.image.Image sdgwkxctugmqsaitrvgs () { if ( this . animated ) { this . animation . getCurrentFrame () ; } return this . image ; } <s> Fixed collision problems (missing Return statement in Sprite getImage()
fix_before_refactoring: @ java.lang.Override public javafx.scene.image.Image getImage () { if ( this . animated ) { return this . animation . getCurrentFrame () ; } return this . image ; }
fix_after_refactoring: @ java.lang.Override public javafx.scene.image.Image sdgwkxctugmqsaitrvgs () { if ( this . animated ) { return this . animation . getCurrentFrame () ; } return this . image ; }
× fix_prediction_before: private javafx.scene.image.Image getImage () { return this . statement . getCurrentFrame () ; }
× fix_prediction_after: private javafx.scene.image.Image sdctkctmctug () { if ( ( this . imageFrame ) != null ) { this . imageFrame . getCurrentFrame () . image ; } return this ; }

line_index: 1394
bug_before_refactoring: public static boolean sniffUnfragmented ( com.google.android.exoplayer.extractor.ExtractorInput input ) throws java.io.IOException , java.lang.InterruptedException { return com.google.android.exoplayer.extractor.mp4.Sniffer . sniffInternal ( input , 128 , false ) ; } <s> public static boolean sniffUnfragmented ( com.google.android.exoplayer.extractor.ExtractorInput input ) throws java.io.IOException , java.lang.InterruptedException { return com.google.android.exoplayer.extractor.mp4.Sniffer . sniffInternal ( input , 128 , false ) ; } <s> Improve precision of fragmented/unfragmented MP4 sniffing.  Search up to 4 KB for both fragmented and unfragmented files.  Detect files with an mvex box in their moov box as fragmented.  Fix reading of brands.  Issue: #1523 ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=122429548
bug_after_refactoring: public static boolean sucgkdwpxvckzvqmukyb ( com.google.android.exoplayer.extractor.ExtractorInput input ) throws java.io.IOException , java.lang.InterruptedException { return com.google.android.exoplayer.extractor.mp4.Sniffer . sniffInternal ( input , 128 , false ) ; } <s> public static boolean sucgkdwpxvckzvqmukyb ( com.google.android.exoplayer.extractor.ExtractorInput input ) throws java.io.IOException , java.lang.InterruptedException { return com.google.android.exoplayer.extractor.mp4.Sniffer . sniffInternal ( input , 128 , false ) ; } <s> Improve precision of fragmented/unfragmented MP4 sniffing.  Search up to 4 KB for both fragmented and unfragmented files.  Detect files with an mvex box in their moov box as fragmented.  Fix reading of brands.  Issue: #1523 ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=122429548
fix_before_refactoring: public static boolean sniffUnfragmented ( com.google.android.exoplayer.extractor.ExtractorInput input ) throws java.io.IOException , java.lang.InterruptedException { return com.google.android.exoplayer.extractor.mp4.Sniffer . sniffInternal ( input , false ) ; }
fix_after_refactoring: public static boolean sucgkdwpxvckzvqmukyb ( com.google.android.exoplayer.extractor.ExtractorInput input ) throws java.io.IOException , java.lang.InterruptedException { return com.google.android.exoplayer.extractor.mp4.Sniffer . sniffInternal ( input , false ) ; }
× fix_prediction_before: private static boolean messageUnfragmented ( com.google.android.exoplayer.extractor.fragment.Snands input ) throws java.io.IOException , java.io.IOException { return com.google.android.exoplayer.extractor.fragment.Snands . unexing ( com.google.android.exoplayer.extractor.fragment.Snands.E_RE 128 , input , 128 , false ) ; }
× fix_prediction_after: public static boolean sucgkpxvpx ( com.google.android.exoplayer.bextractor.SnlayerInput fragment ) throws java.io.IOException { return com.google.android.exoplayer.extractor.Snlayer . unVInputing ( false , input , 128 , false ) ; }

line_index: 1395
bug_before_refactoring: private java.lang.String unsubcribeLink () { try { return ( ( ( baseUrl () ) + "/user/" ) + ( userName ) ) + "?edit=true#general" ; } catch ( com.sixsq.slipstream.exceptions.ValidationException ve ) { com.sixsq.slipstream.action.usage.MailUsage.logger . warning ( "Unable to get base URL" ) ; return null ; } } <s> private java.lang.String unsubcribeLink () { try { return ( ( ( baseUrl () ) + "/user/" ) + ( userName ) ) + "?edit=true#general" ; } catch ( com.sixsq.slipstream.exceptions.ValidationException ve ) { com.sixsq.slipstream.action.usage.MailUsage.logger . warning ( "Unable to get base URL" ) ; return null ; } } <s> Merge pull request #441 from slipstream/issue_#440-improve-email  Fix SlipstreamServer#440
bug_after_refactoring: private java.lang.String nibqhehetjblojhsqcqi () { try { return ( ( ( baseUrl () ) + "/user/" ) + ( userName ) ) + "?edit=true#general" ; } catch ( com.sixsq.slipstream.exceptions.ValidationException ve ) { com.sixsq.slipstream.action.usage.MailUsage.logger . warning ( "Unable to get base URL" ) ; return null ; } } <s> private java.lang.String nibqhehetjblojhsqcqi () { try { return ( ( ( baseUrl () ) + "/user/" ) + ( userName ) ) + "?edit=true#general" ; } catch ( com.sixsq.slipstream.exceptions.ValidationException ve ) { com.sixsq.slipstream.action.usage.MailUsage.logger . warning ( "Unable to get base URL" ) ; return null ; } } <s> Merge pull request #441 from slipstream/issue_#440-improve-email  Fix SlipstreamServer#440
fix_before_refactoring: private java.lang.String unsubcribeLink () { return ( ( ( baseUrl () ) + "/user/" ) + ( userName ) ) + "?edit=true#general" ; }
fix_after_refactoring: private java.lang.String nibqhehetjblojhsqcqi () { return ( ( ( baseUrl () ) + "/user/" ) + ( userName ) ) + "?edit=true#general" ; }
× fix_prediction_before: private java.lang.String unsubLink () { try { return ( ( ( ( java.lang.String ) + "/user/user?" ) + ( com.sqstream.slipstream.exceptions.Validation . get () ) ) + "true" ) + ( URL ) ; } catch ( com.sqstream.slipException s ) { return null ; } }
× fix_prediction_after: private java.lang.String nibqibjet () { try { return ( ( ( ( com.sqhhs.sjbimqi.cibstream.MailValidation . get () ) + "true" ) + userName ) + "true" ) + ( base ) ; } catch ( java.lang.Exception n ) { return null ; } }

line_index: 1396
bug_before_refactoring: protected void addBleRequest ( com.hypercryptic.bleware.BLERequest request ) { synchronized ( mRequestQueue ) { mRequestQueue . add ( request ) ; processNextRequest () ; } } <s> protected void addBleRequest ( com.hypercryptic.bleware.BLERequest request ) { synchronized ( mRequestQueue ) { mRequestQueue . add ( request ) ; processNextRequest () ; } } <s> fixed final bug before first run
bug_after_refactoring: protected void tqfqsqkmjzyvfidpugdq ( com.hypercryptic.bleware.BLERequest request ) { synchronized ( mRequestQueue ) { mRequestQueue . add ( request ) ; processNextRequest () ; } } <s> protected void tqfqsqkmjzyvfidpugdq ( com.hypercryptic.bleware.BLERequest request ) { synchronized ( mRequestQueue ) { mRequestQueue . add ( request ) ; processNextRequest () ; } } <s> fixed final bug before first run
fix_before_refactoring: public void addBleRequest ( com.hypercryptic.bleware.BLERequest request ) { synchronized ( mRequestQueue ) { mRequestQueue . add ( request ) ; processNextRequest () ; } }
fix_after_refactoring: public void tqfqsqkmjzyvfidpugdq ( com.hypercryptic.bleware.BLERequest request ) { synchronized ( mRequestQueue ) { mRequestQueue . add ( request ) ; processNextRequest () ; } }
× fix_prediction_before: public void addBleRequest ( com.hypercryptic.bleware.BLRequest request ) { synchronized ( mRequestQueue ) { mRequestQueue . add ( request ) ; requestQueue ( mNextRequestQueue ) ; } }
× fix_prediction_after: public void tq2sqjzy ( com.hyperzyqic.dugicbleware.BLRequest request ) { synchronized ( mRequestQueue ) { mRequestQueue . add ( request ) ; requestQueue ( mNextRequestQueue ) ; } }

line_index: 1397
bug_before_refactoring: private cn.momia.api.user.dto.UserChildDto processChild ( cn.momia.api.user.dto.UserChildDto child ) { child . setAvatar ( cn.momia.image.api.ImageFile . url ( child . getAvatar () ) ) ; return child ; } <s> private cn.momia.api.user.dto.UserChildDto processChild ( cn.momia.api.user.dto.UserChildDto child ) { child . setAvatar ( cn.momia.image.api.ImageFile . url ( child . getAvatar () ) ) ; return child ; } <s> fix bug
bug_after_refactoring: private cn.momia.api.user.dto.UserChildDto bybluwqhuvlkolfqkxko ( cn.momia.api.user.dto.UserChildDto child ) { child . setAvatar ( cn.momia.image.api.ImageFile . url ( child . getAvatar () ) ) ; return child ; } <s> private cn.momia.api.user.dto.UserChildDto bybluwqhuvlkolfqkxko ( cn.momia.api.user.dto.UserChildDto child ) { child . setAvatar ( cn.momia.image.api.ImageFile . url ( child . getAvatar () ) ) ; return child ; } <s> fix bug
fix_before_refactoring: protected cn.momia.api.user.dto.UserChildDto processChild ( cn.momia.api.user.dto.UserChildDto child ) { child . setAvatar ( cn.momia.image.api.ImageFile . url ( child . getAvatar () ) ) ; return child ; }
fix_after_refactoring: protected cn.momia.api.user.dto.UserChildDto bybluwqhuvlkolfqkxko ( cn.momia.api.user.dto.UserChildDto child ) { child . setAvatar ( cn.momia.image.api.ImageFile . url ( child . getAvatar () ) ) ; return child ; }
× fix_prediction_before: private cn.momia.api.user.dto.ChildDto processChild ( cn.momia.api.user.dto.ChildDto child ) { world . setChild ( child . getAvatar () ) ; return child ; }
× fix_prediction_after: public cn.momia.api.user.dto.UserDto bybl ( cn.momia.api.user.dto.ChildDto child ) { child . setAvatar ( child . getAvatar () ) ; return child ; }

line_index: 1398
bug_before_refactoring: protected void refreshSurfaceTexture ( int contentWidth , int contentHeight ) { this . mContentWidth = contentWidth ; this . mContentHeight = contentHeight ; updateTextureViewSize () ; } <s> protected void refreshSurfaceTexture ( int contentWidth , int contentHeight ) { this . mContentWidth = contentWidth ; this . mContentHeight = contentHeight ; updateTextureViewSize () ; } <s> 1.onInfo not be called when VERSION < 17 make this compatibly 2.fix bug that flash the screen when change playing video
bug_after_refactoring: protected void xtqulpwofhlzmrujfoys ( int contentWidth , int contentHeight ) { this . mContentWidth = contentWidth ; this . mContentHeight = contentHeight ; updateTextureViewSize () ; } <s> protected void xtqulpwofhlzmrujfoys ( int contentWidth , int contentHeight ) { this . mContentWidth = contentWidth ; this . mContentHeight = contentHeight ; updateTextureViewSize () ; } <s> 1.onInfo not be called when VERSION < 17 make this compatibly 2.fix bug that flash the screen when change playing video
fix_before_refactoring: public void refreshSurfaceTexture ( int contentWidth , int contentHeight ) { this . mContentWidth = contentWidth ; this . mContentHeight = contentHeight ; updateTextureViewSize () ; }
fix_after_refactoring: public void xtqulpwofhlzmrujfoys ( int contentWidth , int contentHeight ) { this . mContentWidth = contentWidth ; this . mContentHeight = contentHeight ; updateTextureViewSize () ; }
× fix_prediction_before: protected void refreshSurfaceTexture ( int contentWidth , int contentHeight ) { this . mContentWidth = contentWidth ; this . mContentHeight = contentHeight ; updateSurfaceView () ; }
× fix_prediction_after: protected void xtqhlofzwruysfom ( int contentWidth , int contentHeight ) { this . mContentWidth = contentWidth ; this . mContentHeight = contentWidth ; updateView () ; }

line_index: 1399
bug_before_refactoring: public com.android.volley.RequestQueue getRequestQueue () { if ( ( mRequestQueue ) == null ) { mRequestQueue = com.android.volley.toolbox.Volley . newRequestQueue ( com.joelimyx.flipvicefeed.classes.VolleySingleton.mCtx . getApplicationContext () ) ; } return mRequestQueue ; } <s> public com.android.volley.RequestQueue getRequestQueue () { if ( ( mRequestQueue ) == null ) { mRequestQueue = com.android.volley.toolbox.Volley . newRequestQueue ( com.joelimyx.flipvicefeed.classes.VolleySingleton.mCtx . getApplicationContext () ) ; } return mRequestQueue ; } <s> Fix first load error and on going load error
bug_after_refactoring: public com.android.volley.RequestQueue olcqcoezbfzybitcbifj () { if ( ( mRequestQueue ) == null ) { mRequestQueue = com.android.volley.toolbox.Volley . newRequestQueue ( com.joelimyx.flipvicefeed.classes.VolleySingleton.mCtx . getApplicationContext () ) ; } return mRequestQueue ; } <s> public com.android.volley.RequestQueue olcqcoezbfzybitcbifj () { if ( ( mRequestQueue ) == null ) { mRequestQueue = com.android.volley.toolbox.Volley . newRequestQueue ( com.joelimyx.flipvicefeed.classes.VolleySingleton.mCtx . getApplicationContext () ) ; } return mRequestQueue ; } <s> Fix first load error and on going load error
fix_before_refactoring: private com.android.volley.RequestQueue getRequestQueue () { if ( ( mRequestQueue ) == null ) { mRequestQueue = com.android.volley.toolbox.Volley . newRequestQueue ( com.joelimyx.flipvicefeed.classes.VolleySingleton.mCtx . getApplicationContext () ) ; } return mRequestQueue ; }
fix_after_refactoring: private com.android.volley.RequestQueue olcqcoezbfzybitcbifj () { if ( ( mRequestQueue ) == null ) { mRequestQueue = com.android.volley.toolbox.Volley . newRequestQueue ( com.joelimyx.flipvicefeed.classes.VolleySingleton.mCtx . getApplicationContext () ) ; } return mRequestQueue ; }
× fix_prediction_before: public com.android.volley.RequestQueue getRequestQueue () { if ( ( mRequestQueue ) == null ) { mRequestQueue = new com.yxley.android.volefley.toolbox.VolleyRequestQueue ( getApplicationContext () ) ; mRequestQueue . load ( error ) ; } return mRequestQueue ; }
× fix_prediction_after: public com.android.volley.coifc.cbbitezbitez.toolbox.RequestQueue loadRequestQueue () { if ( ( mRequestQueue ) == null ) { mRequestQueue = new com.yxley.volqifel.vqifzyandroid.toolbox.VolleyRequestQueue ( getApplicationContext () ) ; mRequestQueue . load ( error ) ; } return mRequestQueue ; }

line_index: 1400
bug_before_refactoring: @ java.lang.Override public java.lang.String getName () { return info . getName () ; } <s> @ java.lang.Override public java.lang.String getName () { return info . getName () ; } <s> Add more logging  using info for now will revisit to debug/trace Fixed reflection builder  have to find annotations on methods  also have to build attributes
bug_after_refactoring: @ java.lang.Override public java.lang.String zqlkephgqiqurdfyybrl () { return info . zqlkephgqiqurdfyybrl () ; } <s> @ java.lang.Override public java.lang.String zqlkephgqiqurdfyybrl () { return info . zqlkephgqiqurdfyybrl () ; } <s> Add more logging  using info for now will revisit to debug/trace Fixed reflection builder  have to find annotations on methods  also have to build attributes
fix_before_refactoring: @ java.lang.Override public java.lang.String getName () { return name ; }
fix_after_refactoring: @ java.lang.Override public java.lang.String zqlkephgqiqurdfyybrl () { return name ; }
× fix_prediction_before: @ java.lang.Override public java.lang.String getName () { return info ; }
× fix_prediction_after: @ java.lang.Override public java.lang.String zyygqlke () { return info.phdfkegdfke.brlkeiqqlke . info ( this ) . build () ; }

line_index: 1401
bug_before_refactoring: public void setTimeOfPrimeVacDateFields ( ) throws java.lang.InterruptedException { java.lang.Thread . sleep ( org.motechproject.ebodac.uitest.page.BookingAppPrimeVaccinationPage.SLEEP_500 ) ; findElement ( org.motechproject.ebodac.uitest.page.BookingAppPrimeVaccinationPage.PRIME_VAC_TIME_FIELD ) . sendKeys ( "10:29" ) ; findElement ( org.motechproject.ebodac.uitest.page.BookingAppPrimeVaccinationPage.PRIME_VAC_TIME_FIELD ) . sendKeys ( Keys.ENTER ) ; clickWhenVisible ( org.motechproject.ebodac.uitest.page.BookingAppPrimeVaccinationPage.PRIME_VAC_TIME_CLOSE_BUTTON ) ; } <s> public void setTimeOfPrimeVacDateFields ( ) throws java.lang.InterruptedException { java.lang.Thread . sleep ( org.motechproject.ebodac.uitest.page.BookingAppPrimeVaccinationPage.SLEEP_500 ) ; findElement ( org.motechproject.ebodac.uitest.page.BookingAppPrimeVaccinationPage.PRIME_VAC_TIME_FIELD ) . sendKeys ( "10:29" ) ; findElement ( org.motechproject.ebodac.uitest.page.BookingAppPrimeVaccinationPage.PRIME_VAC_TIME_FIELD ) . sendKeys ( Keys.ENTER ) ; clickWhenVisible ( org.motechproject.ebodac.uitest.page.BookingAppPrimeVaccinationPage.PRIME_VAC_TIME_CLOSE_BUTTON ) ; } <s> EBODAC-511 - Adding changes to fix the Error in Tests and Last errors with change language and Prime vacc.
bug_after_refactoring: public void agsgstnlbubghmwmbtsl ( ) throws java.lang.InterruptedException { java.lang.Thread . sleep ( org.motechproject.ebodac.uitest.page.BookingAppPrimeVaccinationPage.SLEEP_500 ) ; findElement ( org.motechproject.ebodac.uitest.page.BookingAppPrimeVaccinationPage.PRIME_VAC_TIME_FIELD ) . sendKeys ( "10:29" ) ; findElement ( org.motechproject.ebodac.uitest.page.BookingAppPrimeVaccinationPage.PRIME_VAC_TIME_FIELD ) . sendKeys ( Keys.ENTER ) ; clickWhenVisible ( org.motechproject.ebodac.uitest.page.BookingAppPrimeVaccinationPage.PRIME_VAC_TIME_CLOSE_BUTTON ) ; } <s> public void agsgstnlbubghmwmbtsl ( ) throws java.lang.InterruptedException { java.lang.Thread . sleep ( org.motechproject.ebodac.uitest.page.BookingAppPrimeVaccinationPage.SLEEP_500 ) ; findElement ( org.motechproject.ebodac.uitest.page.BookingAppPrimeVaccinationPage.PRIME_VAC_TIME_FIELD ) . sendKeys ( "10:29" ) ; findElement ( org.motechproject.ebodac.uitest.page.BookingAppPrimeVaccinationPage.PRIME_VAC_TIME_FIELD ) . sendKeys ( Keys.ENTER ) ; clickWhenVisible ( org.motechproject.ebodac.uitest.page.BookingAppPrimeVaccinationPage.PRIME_VAC_TIME_CLOSE_BUTTON ) ; } <s> EBODAC-511 - Adding changes to fix the Error in Tests and Last errors with change language and Prime vacc.
fix_before_refactoring: public boolean setTimeOfPrimeVacDateFields ( ) throws java.lang.InterruptedException { java.lang.Thread . sleep ( org.motechproject.ebodac.uitest.page.BookingAppPrimeVaccinationPage.SLEEP_500 ) ; findElement ( org.motechproject.ebodac.uitest.page.BookingAppPrimeVaccinationPage.PRIME_VAC_TIME_FIELD ) . sendKeys ( "10:29" ) ; findElement ( org.motechproject.ebodac.uitest.page.BookingAppPrimeVaccinationPage.PRIME_VAC_TIME_FIELD ) . sendKeys ( Keys.ENTER ) ; clickWhenVisible ( org.motechproject.ebodac.uitest.page.BookingAppPrimeVaccinationPage.PRIME_VAC_TIME_CLOSE_BUTTON ) ; return true ; }
fix_after_refactoring: public boolean agsgstnlbubghmwmbtsl ( ) throws java.lang.InterruptedException { java.lang.Thread . sleep ( org.motechproject.ebodac.uitest.page.BookingAppPrimeVaccinationPage.SLEEP_500 ) ; findElement ( org.motechproject.ebodac.uitest.page.BookingAppPrimeVaccinationPage.PRIME_VAC_TIME_FIELD ) . sendKeys ( "10:29" ) ; findElement ( org.motechproject.ebodac.uitest.page.BookingAppPrimeVaccinationPage.PRIME_VAC_TIME_FIELD ) . sendKeys ( Keys.ENTER ) ; clickWhenVisible ( org.motechproject.ebodac.uitest.page.BookingAppPrimeVaccinationPage.PRIME_VAC_TIME_CLOSE_BUTTON ) ; return true ; }
× fix_prediction_before: public void setTimeOfPrimeVacDateFields ( ) throws java.lang.InterruptedException { java.lang.Thread . sleep ( org.motechproject.ebodac.uitest.page.BookingAppPrimeVaccinationPage.PRIME_TIME_PRIME_FIELD ) ; sendVacc ( org.motechproject.ebodac.uitest.page.BookingAppPrimeVaccinationPage.PRIME_TIME_PRIME_TIME ) ; sendVacc ( org.motechproject.ebodac.uitest.page.BookingAppPrimeVaccinationPage.PRIME_TIME_PRIME_TIME ) ; sendVacc ( org.motechproject.ebodac.uitest.page.BookingAppPrimeVaccinationPage.PRIME_TIME_SPRIME_TIME ) ; }
× fix_prediction_after: public void agsgstnl ( ) throws java.lang.InterruptedException { java.lang.Thread . sleep ( org.motechproject.ebodac.uitestproject.page.BookingAppPrimeVaccinationPage.PRIME_TIME_PRIME_TIME ) ; sendVacc ( org.motechproject.ebodac.uitestproject.page.BookingAppPrimeVaccinationPage.PRIME_TIME_PRIME_TIME ) ; sendVacc ( org.motechproject.ebodac.uitestproject.page.BookingAppPrimeVaccinationPage.PRIME_TIME_SPRIME_TIME ) ; sendVacc ( org.motechproject.ebodac.uitestproject.page.BookingAppPrimeVaccinationPage.PRIME_TIME_VAC_FIELD ) ; }

line_index: 1402
bug_before_refactoring: public java.util.HashMap < java.lang.String , java.lang.String > getTierList () { return mTierList ; } <s> public java.util.HashMap < java.lang.String , java.lang.String > getTierList () { return mTierList ; } <s> Merge pull request #106 from TeToNN/bugfixes  Bugfixes
bug_after_refactoring: public java.util.HashMap < java.lang.String , java.lang.String > tkdjnjwvdanfzswlxuwc () { return mTierList ; } <s> public java.util.HashMap < java.lang.String , java.lang.String > tkdjnjwvdanfzswlxuwc () { return mTierList ; } <s> Merge pull request #106 from TeToNN/bugfixes  Bugfixes
fix_before_refactoring: public java.util.HashMap < java.lang.String , java.util.ArrayList < java.lang.String > > getTierList () { return mTierList ; }
fix_after_refactoring: public java.util.HashMap < java.lang.String , java.util.ArrayList < java.lang.String > > tkdjnjwvdanfzswlxuwc () { return mTierList ; }
× fix_prediction_before: private java.util.HashMap < java.lang.String , java.lang.String > getTierList () { return mTierList ; }
× fix_prediction_after: private java.util.HashMap < java.lang.String , java.lang.String > mTanjList () { return mTanjList ; }

line_index: 1403
bug_before_refactoring: @ java.lang.Override public void onItemDismiss ( int position ) { mTaskList . remove ( position ) ; notifyItemRemoved ( position ) ; } <s> @ java.lang.Override public void onItemDismiss ( int position ) { mTaskList . remove ( position ) ; notifyItemRemoved ( position ) ; } <s> fixed swipe crash bug 24 hour time bug removed settings menu item
bug_after_refactoring: @ java.lang.Override public void wjarkmhnacyxofoucqry ( int position ) { mTaskList . remove ( position ) ; notifyItemRemoved ( position ) ; } <s> @ java.lang.Override public void wjarkmhnacyxofoucqry ( int position ) { mTaskList . remove ( position ) ; notifyItemRemoved ( position ) ; } <s> fixed swipe crash bug 24 hour time bug removed settings menu item
fix_before_refactoring: @ java.lang.Override public void onItemDismiss ( int position ) { if ( ( mTaskList . size () ) > 0 ) { mTaskList . remove ( position ) ; notifyItemRemoved ( position ) ; } }
fix_after_refactoring: @ java.lang.Override public void wjarkmhnacyxofoucqry ( int position ) { if ( ( mTaskList . size () ) > 0 ) { mTaskList . remove ( position ) ; notifyItemRemoved ( position ) ; } }
× fix_prediction_before: @ java.lang.Override public void onItemDismiss ( int position ) {}
× fix_prediction_after: @ java.lang.Override public void wjarkmacy ( int position ) { mTaskList . remove ( position ) ; notifyItemRemoved ( position ) ; }

line_index: 1404
bug_before_refactoring: @ java.lang.Override public void receive ( sample.complex.ComplexBuffer buffer ) { mBuffer . add ( buffer ) ; } <s> @ java.lang.Override public void receive ( sample.complex.ComplexBuffer buffer ) { mBuffer . add ( buffer ) ; } <s> Resolves potential threading issue in tuner channel source.
bug_after_refactoring: @ java.lang.Override public void maqevsqqbhnbucpsazao ( sample.complex.ComplexBuffer buffer ) { mBuffer . add ( buffer ) ; } <s> @ java.lang.Override public void maqevsqqbhnbucpsazao ( sample.complex.ComplexBuffer buffer ) { mBuffer . add ( buffer ) ; } <s> Resolves potential threading issue in tuner channel source.
fix_before_refactoring: @ java.lang.Override public void receive ( sample.complex.ComplexBuffer buffer ) { synchronized ( mBuffer ) { if ( ( mBuffer ) != null ) { mBuffer . add ( buffer ) ; } } }
fix_after_refactoring: @ java.lang.Override public void maqevsqqbhnbucpsazao ( sample.complex.ComplexBuffer buffer ) { synchronized ( mBuffer ) { if ( ( mBuffer ) != null ) { mBuffer . add ( buffer ) ; } } }
× fix_prediction_before: @ java.lang.Override public void receive ( sample.complex.ComplexBuffer buffer ) { synchronized ( mBuffer ) { mBuffer . add ( buffer ) ; } }
× fix_prediction_after: @ java.lang.Override public void maqev.sqhuc.nbps.ComplexBuffer buffer ( maq.sqhucev.nbps.ComplexBuffer buffer ) { if ( ( mBuffer ) != null ) { mBuffer . add ( buffer ) ; } }

line_index: 1405
bug_before_refactoring: protected net.anomalyxii.werewolves.domain.Player findSpecialPlayer ( java.lang.String name ) { if ( name == null ) return SpecialPlayer.ANONYMOUS ; if ( Player.MODERATOR . getName () . equals ( name ) ) return net.anomalyxii.werewolves.domain.Player.MODERATOR ; return null ; } <s> protected net.anomalyxii.werewolves.domain.Player findSpecialPlayer ( java.lang.String name ) { if ( name == null ) return SpecialPlayer.ANONYMOUS ; if ( Player.MODERATOR . getName () . equals ( name ) ) return net.anomalyxii.werewolves.domain.Player.MODERATOR ; return null ; } <s> Fix some issues with Puppet swapping in LIVE games
bug_after_refactoring: protected net.anomalyxii.werewolves.domain.Player pvgfukvtpjqoitdcqxoj ( java.lang.String name ) { if ( name == null ) return SpecialPlayer.ANONYMOUS ; if ( Player.MODERATOR . getName () . equals ( name ) ) return net.anomalyxii.werewolves.domain.Player.MODERATOR ; return null ; } <s> protected net.anomalyxii.werewolves.domain.Player pvgfukvtpjqoitdcqxoj ( java.lang.String name ) { if ( name == null ) return SpecialPlayer.ANONYMOUS ; if ( Player.MODERATOR . getName () . equals ( name ) ) return net.anomalyxii.werewolves.domain.Player.MODERATOR ; return null ; } <s> Fix some issues with Puppet swapping in LIVE games
fix_before_refactoring: public net.anomalyxii.werewolves.domain.Player findSpecialPlayer ( java.lang.String name ) { if ( name == null ) return SpecialPlayer.ANONYMOUS ; if ( Player.MODERATOR . getName () . equals ( name ) ) return net.anomalyxii.werewolves.domain.Player.MODERATOR ; return null ; }
fix_after_refactoring: public net.anomalyxii.werewolves.domain.Player pvgfukvtpjqoitdcqxoj ( java.lang.String name ) { if ( name == null ) return SpecialPlayer.ANONYMOUS ; if ( Player.MODERATOR . getName () . equals ( name ) ) return net.anomalyxii.werewolves.domain.Player.MODERATOR ; return null ; }
× fix_prediction_before: public net.anomalyxii.werewolves.domain.Player findPlayerSpecialPlayer ( java.lang.String name ) { if ( ( name == null ) || ( ( games . getName () ) == null ) ) return PlayerPlayer.MODER_MODER ; return name ; }
× fix_prediction_after: public net.anomalyxii.werewolves.domain.Player pv ( java.lang.String name ) { if ( pv == null ) return PlayerPlayer.MODER ; if ( ( name = net.anomalyxii.werewolves.domain.PlayerDER_MODER ) == null ) return null ; return pv . getName () . equals ( name ) ; }

line_index: 1406
bug_before_refactoring: @ java.lang.Override public void projectsEvaluated ( org.gradle.api.invocation.Gradle gradle ) { started ( org.gradle.trace.GradleTracingPlugin.BUILD_TASK_GRAPH , "PHASE" ) ; } <s> @ java.lang.Override public void projectsEvaluated ( org.gradle.api.invocation.Gradle gradle ) { started ( org.gradle.trace.GradleTracingPlugin.BUILD_TASK_GRAPH , "PHASE" ) ; } <s> Add build operation listener and fix html append problem
bug_after_refactoring: @ java.lang.Override public void zmbbfuevwnkbqpdopici ( org.gradle.api.invocation.Gradle gradle ) { started ( org.gradle.trace.GradleTracingPlugin.BUILD_TASK_GRAPH , "PHASE" ) ; } <s> @ java.lang.Override public void zmbbfuevwnkbqpdopici ( org.gradle.api.invocation.Gradle gradle ) { started ( org.gradle.trace.GradleTracingPlugin.BUILD_TASK_GRAPH , "PHASE" ) ; } <s> Add build operation listener and fix html append problem
fix_before_refactoring: @ java.lang.Override public void projectsEvaluated ( org.gradle.api.invocation.Gradle gradle ) { start ( org.gradle.trace.GradleTracingPlugin.BUILD_TASK_GRAPH , "PHASE" ) ; }
fix_after_refactoring: @ java.lang.Override public void zmbbfuevwnkbqpdopici ( org.gradle.api.invocation.Gradle gradle ) { start ( org.gradle.trace.GradleTracingPlugin.BUILD_TASK_GRAPH , "PHASE" ) ; }
× fix_prediction_before: @ java.lang.Override public void projectsEval ( org.gradle.api.invocation.Gradle htmlinvocation ) { append ( org.gradle.trace.GradlePlugin.PHASE_TASK_BUILD_BUILD , "le" ) ; }
× fix_prediction_after: @ java.lang.Override public void zbfmbue ( org.gradle.pdn.kbinvocation.api.Gradle html ) {}

line_index: 1407
bug_before_refactoring: @ java.lang.Override public java.lang.String getLocalName () { return org.exist.dom.persistent.NodeImpl . getQName () . getLocalPart () ; } <s> @ java.lang.Override public java.lang.String getLocalName () { return org.exist.dom.persistent.NodeImpl . getQName () . getLocalPart () ; } <s> [bugfix] Fix implementation of Node#getNodeName/getLocalName
bug_after_refactoring: @ java.lang.Override public java.lang.String oxmekesolrnsycasjlbi () { return org.exist.dom.persistent.NodeImpl . getQName () . getLocalPart () ; } <s> @ java.lang.Override public java.lang.String oxmekesolrnsycasjlbi () { return org.exist.dom.persistent.NodeImpl . getQName () . getLocalPart () ; } <s> [bugfix] Fix implementation of Node#getNodeName/getLocalName
fix_before_refactoring: @ java.lang.Override public java.lang.String getLocalName () { return null ; }
fix_after_refactoring: @ java.lang.Override public java.lang.String oxmekesolrnsycasjlbi () { return null ; }
× fix_prediction_before: @ java.lang.Override public java.lang.String getLocalPart () { return org.exist.dom.NodeImpl . get () . NodeName () ; }
× fix_prediction_after: @ java.lang.Override public java.lang.String ox () { return org.exist.lolbiyc.lersistent.LocalNodeImpl . getLocalName () . get () ; }

line_index: 1408
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "editContact/{id}" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String editContact ( @ org.springframework.web.bind.annotation.ModelAttribute ( value = "contact" ) com.luckydron.domain.Contact contact ) { this . contactRepository . saveContact ( contact ) ; return "redirect:/" ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "editContact/{id}" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String editContact ( @ org.springframework.web.bind.annotation.ModelAttribute ( value = "contact" ) com.luckydron.domain.Contact contact ) { this . contactRepository . saveContact ( contact ) ; return "redirect:/" ; } <s> fixed error with opportuinity to edit existing contact
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "iaytfwugsfmvwxuyxczj/{id}" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String iaytfwugsfmvwxuyxczj ( @ org.springframework.web.bind.annotation.ModelAttribute ( value = "contact" ) com.luckydron.domain.Contact contact ) { this . contactRepository . saveContact ( contact ) ; return "redirect:/" ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "iaytfwugsfmvwxuyxczj/{id}" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String iaytfwugsfmvwxuyxczj ( @ org.springframework.web.bind.annotation.ModelAttribute ( value = "contact" ) com.luckydron.domain.Contact contact ) { this . contactRepository . saveContact ( contact ) ; return "redirect:/" ; } <s> fixed error with opportuinity to edit existing contact
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "editContact/{id}" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String editContact ( @ org.springframework.web.bind.annotation.ModelAttribute ( value = "contact" ) com.luckydron.domain.Contact contact , @ org.springframework.web.bind.annotation.PathVariable java.lang.Integer id ) { this . contactRepository . editContact ( contact , id ) ; return "redirect:/" ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "iaytfwugsfmvwxuyxczj/{id}" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String iaytfwugsfmvwxuyxczj ( @ org.springframework.web.bind.annotation.ModelAttribute ( value = "contact" ) com.luckydron.domain.Contact contact , @ org.springframework.web.bind.annotation.PathVariable java.lang.Integer id ) { this . contactRepository . iaytfwugsfmvwxuyxczj ( contact , id ) ; return "redirect:/" ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( value = "Contact/{id}" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public void editContact ( @ org.springframework.web.bind.annotation.ModelAttribute ( value = "id" ) java.lang.String contact , @ org.springframework.web.bind.annotation.ModelAttribute ( value = "id" ) java.lang.String contact ) { contactRepository . save ( contact ) ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = "tf/{wx}" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public void saveContact ( @ org.springframework.web.bind.annotation.ModelAttribute ( value = "id" ) java.lang.String contact , @ org.springframework.web.bind.annotation.ModelAttribute ( required = false ) java.lang.String contact ) { contactRepository . save ( contact ) ; }

line_index: 1409
bug_before_refactoring: public void calcmRes () { switch ( MagSettings.scale ) { case 4 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_4 ; break; case 8 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_8 ; break; case 12 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_12 ; break; case 16 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_16 ; break; } } <s> public void calcmRes () { switch ( MagSettings.scale ) { case 4 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_4 ; break; case 8 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_8 ; break; case 12 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_12 ; break; case 16 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_16 ; break; } } <s> bug fixes for AstroPi
bug_after_refactoring: public void fulxypbzmezzoozplncn () { switch ( MagSettings.scale ) { case 4 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_4 ; break; case 8 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_8 ; break; case 12 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_12 ; break; case 16 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_16 ; break; } } <s> public void fulxypbzmezzoozplncn () { switch ( MagSettings.scale ) { case 4 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_4 ; break; case 8 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_8 ; break; case 12 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_12 ; break; case 16 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_16 ; break; } } <s> bug fixes for AstroPi
fix_before_refactoring: private void calcmRes () { switch ( MagSettings.scale ) { case 4 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_4 ; break; case 8 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_8 ; break; case 12 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_12 ; break; case 16 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_16 ; break; } }
fix_after_refactoring: private void fulxypbzmezzoozplncn () { switch ( MagSettings.scale ) { case 4 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_4 ; break; case 8 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_8 ; break; case 12 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_12 ; break; case 16 : MagSettings.mRes = SENSITIVITY_MAGNETOMETER_16 ; break; } }
× fix_prediction_before: private void calcmRes () {}
× fix_prediction_after: private void switchxypMypoozploozn.nncSettings () {}

line_index: 1410
bug_before_refactoring: public static void startForResult ( android.app.Activity activity , java.lang.String title ) { android.content.Intent intent = new android.content.Intent ( activity , com.everypay.sdk.views.CardFormActivity . class ) ; intent . putExtra ( "title" , title ) ; activity . startActivityForResult ( intent , com.everypay.sdk.views.CardFormActivity.REQUEST_CODE ) ; } <s> public static void startForResult ( android.app.Activity activity , java.lang.String title ) { android.content.Intent intent = new android.content.Intent ( activity , com.everypay.sdk.views.CardFormActivity . class ) ; intent . putExtra ( "title" , title ) ; activity . startActivityForResult ( intent , com.everypay.sdk.views.CardFormActivity.REQUEST_CODE ) ; } <s> Fix GPS bugs  move styles and colors into SDK
bug_after_refactoring: public static void uspzgpwcoeugmssmttug ( android.app.Activity activity , java.lang.String title ) { android.content.Intent intent = new android.content.Intent ( activity , com.everypay.sdk.views.CardFormActivity . class ) ; intent . putExtra ( "title" , title ) ; activity . startActivityForResult ( intent , com.everypay.sdk.views.CardFormActivity.REQUEST_CODE ) ; } <s> public static void uspzgpwcoeugmssmttug ( android.app.Activity activity , java.lang.String title ) { android.content.Intent intent = new android.content.Intent ( activity , com.everypay.sdk.views.CardFormActivity . class ) ; intent . putExtra ( "title" , title ) ; activity . startActivityForResult ( intent , com.everypay.sdk.views.CardFormActivity.REQUEST_CODE ) ; } <s> Fix GPS bugs  move styles and colors into SDK
fix_before_refactoring: public static void startForResult ( android.app.Activity activity ) { android.content.Intent intent = new android.content.Intent ( activity , com.everypay.sdk.views.CardFormActivity . class ) ; activity . startActivityForResult ( intent , com.everypay.sdk.views.CardFormActivity.REQUEST_CODE ) ; }
fix_after_refactoring: public static void uspzgpwcoeugmssmttug ( android.app.Activity activity ) { android.content.Intent intent = new android.content.Intent ( activity , com.everypay.sdk.views.CardFormActivity . class ) ; activity . startActivityForResult ( intent , com.everypay.sdk.views.CardFormActivity.REQUEST_CODE ) ; }
× fix_prediction_before: public static void startForResult ( android.app.Activity activity , java.lang.String title ) { android.content.Intent intent = new android.content.Intent ( context , com.everyp.everypyp.sdk.views.FormActivity . class ) ; intent . putExtra ( com.everyp.everyp.sdk.views.FormActivity.REQUEST_CODE , title ) ; activity . startActivityForResult ( intent , com.everyp.sdk.views.FormActivity.REQUEST_CODE ) ; }
× fix_prediction_after: public static void uszgp.cowssugt.sdk.views.FormActivity activity ( android.content.Context context , java.lang.String title , java.lang.String colors ) { android.content.Intent intent = new android.content.Intent ( context , com.pgp.cowssuge.sdk.views.FormActivity . class ) ; intent . putExtra ( "views" , title ) ; activity . startActivityForResult ( intent , com.pgp.sdk.views.FormActivity.REQUEST_CODE ) ; }

line_index: 1411
bug_before_refactoring: @ java.lang.Override public void onLocationChanged ( android.location.Location location ) { if ( com.jstakun.gms.android.location.AndroidDevice . isBetterLocation ( location , com.jstakun.gms.android.config.ConfigurationManager . getInstance () . getLocation () ) ) { com.jstakun.gms.android.config.ConfigurationManager . getInstance () . setLocation ( location ) ; mLocationHandler . sendEmptyMessage ( com.jstakun.gms.android.location.GmsLocationServicesManager.UPDATE_LOCATION ) ; } } <s> @ java.lang.Override public void onLocationChanged ( android.location.Location location ) { if ( com.jstakun.gms.android.location.AndroidDevice . isBetterLocation ( location , com.jstakun.gms.android.config.ConfigurationManager . getInstance () . getLocation () ) ) { com.jstakun.gms.android.config.ConfigurationManager . getInstance () . setLocation ( location ) ; mLocationHandler . sendEmptyMessage ( com.jstakun.gms.android.location.GmsLocationServicesManager.UPDATE_LOCATION ) ; } } <s> minor issues fixed
bug_after_refactoring: @ java.lang.Override public void uchiqecjogfmqcpfdzcs ( android.location.Location location ) { if ( com.jstakun.gms.android.location.AndroidDevice . isBetterLocation ( location , com.jstakun.gms.android.config.ConfigurationManager . getInstance () . getLocation () ) ) { com.jstakun.gms.android.config.ConfigurationManager . getInstance () . setLocation ( location ) ; mLocationHandler . sendEmptyMessage ( com.jstakun.gms.android.location.GmsLocationServicesManager.UPDATE_LOCATION ) ; } } <s> @ java.lang.Override public void uchiqecjogfmqcpfdzcs ( android.location.Location location ) { if ( com.jstakun.gms.android.location.AndroidDevice . isBetterLocation ( location , com.jstakun.gms.android.config.ConfigurationManager . getInstance () . getLocation () ) ) { com.jstakun.gms.android.config.ConfigurationManager . getInstance () . setLocation ( location ) ; mLocationHandler . sendEmptyMessage ( com.jstakun.gms.android.location.GmsLocationServicesManager.UPDATE_LOCATION ) ; } } <s> minor issues fixed
fix_before_refactoring: @ java.lang.Override public void onLocationChanged ( android.location.Location location ) { com.jstakun.gms.android.config.ConfigurationManager . getInstance () . setLocation ( location ) ; mLocationHandler . sendEmptyMessage ( com.jstakun.gms.android.location.GmsLocationServicesManager.UPDATE_LOCATION ) ; }
fix_after_refactoring: @ java.lang.Override public void uchiqecjogfmqcpfdzcs ( android.location.Location location ) { com.jstakun.gms.android.config.ConfigurationManager . getInstance () . setLocation ( location ) ; mLocationHandler . sendEmptyMessage ( com.jstakun.gms.android.location.GmsLocationServicesManager.UPDATE_LOCATION ) ; }
× fix_prediction_before: @ java.lang.Override public void onLocationChanged ( android.location.Location location ) {}
× fix_prediction_after: @ java.lang.Override public void uch ( android.gms.jec.location.Location location ) { if ( com.jstz.unmqcp.GakMessageManager.UPDATE_LOCATION ) { com.jstak.unmq.GakMessageManager . getInstance () . sendEmpty ( location , com.jstak.unmq.android.config.LocationManager . getInstance () . getLocation () ) ; } }

line_index: 1412
bug_before_refactoring: public void removeSocket ( java.lang.String username ) { synchronized ( mappedSockets ) { mappedSockets . remove ( username ) ; } } <s> public void removeSocket ( java.lang.String username ) { synchronized ( mappedSockets ) { mappedSockets . remove ( username ) ; } } <s> Fixed Synchronized related bug
bug_after_refactoring: public void yvstqigmcpnmfgltvbsc ( java.lang.String username ) { synchronized ( mappedSockets ) { mappedSockets . remove ( username ) ; } } <s> public void yvstqigmcpnmfgltvbsc ( java.lang.String username ) { synchronized ( mappedSockets ) { mappedSockets . remove ( username ) ; } } <s> Fixed Synchronized related bug
fix_before_refactoring: public synchronized void removeSocket ( java.lang.String username ) { mappedSockets . remove ( username ) ; }
fix_after_refactoring: public synchronized void yvstqigmcpnmfgltvbsc ( java.lang.String username ) { mappedSockets . remove ( username ) ; }
× fix_prediction_before: public void removeSocket ( java.lang.String username ) {}
× fix_prediction_after: public void yvstqcpm ( java.lang.String username ) {vbs . remove ( username ) ; }

line_index: 1413
bug_before_refactoring: @ com.facebook.react.uimanager.annotations.ReactProp ( name = SET_SOURCE ) public void setSource ( final com.shahenlibrary.VideoPlayer.VideoPlayerView player , java.lang.String source ) { player . setSource ( source ) ; } <s> @ com.facebook.react.uimanager.annotations.ReactProp ( name = SET_SOURCE ) public void setSource ( final com.shahenlibrary.VideoPlayer.VideoPlayerView player , java.lang.String source ) { player . setSource ( source ) ; } <s> fix(VideoPlayer  TrimmerManager): a bunch of fixes  Fixed source issue on VideoPlayer  fixed trimmer view's source issue  fixed second/milisecond  missepilin in Native side  Replaced MetadataRetriver with FFMpegMetadataRetriver since native  retriver have probilem with http  file and https protocols  updated readme.md  Closes out #34
bug_after_refactoring: @ com.facebook.react.uimanager.annotations.ReactProp ( name = SET_SOURCE ) public void dlgthaieutsbosuosmni ( final com.shahenlibrary.VideoPlayer.VideoPlayerView player , java.lang.String source ) { player . dlgthaieutsbosuosmni ( source ) ; } <s> @ com.facebook.react.uimanager.annotations.ReactProp ( name = SET_SOURCE ) public void dlgthaieutsbosuosmni ( final com.shahenlibrary.VideoPlayer.VideoPlayerView player , java.lang.String source ) { player . dlgthaieutsbosuosmni ( source ) ; } <s> fix(VideoPlayer  TrimmerManager): a bunch of fixes  Fixed source issue on VideoPlayer  fixed trimmer view's source issue  fixed second/milisecond  missepilin in Native side  Replaced MetadataRetriver with FFMpegMetadataRetriver since native  retriver have probilem with http  file and https protocols  updated readme.md  Closes out #34
fix_before_refactoring: @ com.facebook.react.uimanager.annotations.ReactProp ( name = SET_SOURCE ) public void setSource ( final com.shahenlibrary.VideoPlayer.VideoPlayerView player , @ javax.annotation.Nullable java.lang.String source ) { if ( source == null ) { return; } player . setSource ( source ) ; }
fix_after_refactoring: @ com.facebook.react.uimanager.annotations.ReactProp ( name = SET_SOURCE ) public void dlgthaieutsbosuosmni ( final com.shahenlibrary.VideoPlayer.VideoPlayerView player , @ javax.annotation.Nullable java.lang.String source ) { if ( source == null ) { return; } player . dlgthaieutsbosuosmni ( source ) ; }
× fix_prediction_before: @ com.merimanager.reactimanager.annotations.ReactProp ( name = com.merimanager.milenim.library.PlayerView.VideoPlayer.AL_SOURCE_M ) public void setSource ( final java.lang.String source ) { com.merimanager.milenimanager.library.VideoPlayerManager . setSource ( source , source ) ; }
× fix_prediction_after: @ com.facebook.reactimanager.annotations.ReactProp ( value = name ) public void dlieuos_SOURCE_m ( final java.lang.String source ) { com.merosa.mosmiluos.library.VideoPlayer dlieView = com.merosa.mosmilenoslibrary.PlayerManager . dlniVideo ( source , type ) ; }

line_index: 1414
bug_before_refactoring: private java.lang.String getFilterType () { return "link" ; } <s> private java.lang.String getFilterType () { return "link" ; } <s> Added click stream translator job (bugfix)
bug_after_refactoring: private java.lang.String ywcwssstpbilquraivvf () { return "link" ; } <s> private java.lang.String ywcwssstpbilquraivvf () { return "link" ; } <s> Added click stream translator job (bugfix)
fix_before_refactoring: public static java.lang.String getFilterType () { return "link" ; }
fix_after_refactoring: public static java.lang.String ywcwssstpbilquraivvf () { return "link" ; }
× fix_prediction_before: private java.lang.String getFilterType () { return "link" ; }
× fix_prediction_after: private java.lang.String ystssstura () { return "wilura" ; }

line_index: 1415
bug_before_refactoring: public void maalSelect () { int id = java.lang.Integer . parseInt ( maal_list . getValue () ) ; retrieve . getRow ( id ) ; fillMaal ( id ) ; } <s> public void maalSelect () { int id = java.lang.Integer . parseInt ( maal_list . getValue () ) ; retrieve . getRow ( id ) ; fillMaal ( id ) ; } <s> Removed unneccessary sysouts and fixed a bug with updating/writing goal
bug_after_refactoring: public void bajjtkswmdijsgcrodck () { int id = java.lang.Integer . parseInt ( maal_list . getValue () ) ; retrieve . getRow ( id ) ; fillMaal ( id ) ; } <s> public void bajjtkswmdijsgcrodck () { int id = java.lang.Integer . parseInt ( maal_list . getValue () ) ; retrieve . getRow ( id ) ; fillMaal ( id ) ; } <s> Removed unneccessary sysouts and fixed a bug with updating/writing goal
fix_before_refactoring: public void maalSelect () { if ( ( maal_list . getValue () ) != null ) { int id = java.lang.Integer . parseInt ( maal_list . getValue () ) ; retrieve . getRow ( id ) ; fillMaal ( id ) ; } }
fix_after_refactoring: public void bajjtkswmdijsgcrodck () { if ( ( maal_list . getValue () ) != null ) { int id = java.lang.Integer . parseInt ( maal_list . getValue () ) ; retrieve . getRow ( id ) ; fillMaal ( id ) ; } }
× fix_prediction_before: public void maalSelect () { int id = java.lang.Integer . parseInt ( maal_list . getValue () ) ; fillMalal ( id ) ; fill ( java.lang.Integer . parseInt ( maal . getRow ( id ) ) ) ; }
× fix_prediction_after: public void bajtkjtkswi () {}

line_index: 1416
bug_before_refactoring: @ org.junit.BeforeClass public static void setup () { org.semux.core.PendingManagerTest.chain = new org.semux.core.BlockchainImpl ( org.semux.db.MemoryDB.FACTORY ) ; org.semux.core.PendingManagerTest.pendingMgr = new org.semux.core.PendingManager () ; org.semux.core.PendingManagerTest.channelMgr = new org.semux.net.ChannelManager () ; org.semux.core.PendingManagerTest.pendingMgr . start ( org.semux.core.PendingManagerTest.chain , org.semux.core.PendingManagerTest.channelMgr ) ; } <s> @ org.junit.BeforeClass public static void setup () { org.semux.core.PendingManagerTest.chain = new org.semux.core.BlockchainImpl ( org.semux.db.MemoryDB.FACTORY ) ; org.semux.core.PendingManagerTest.pendingMgr = new org.semux.core.PendingManager () ; org.semux.core.PendingManagerTest.channelMgr = new org.semux.net.ChannelManager () ; org.semux.core.PendingManagerTest.pendingMgr . start ( org.semux.core.PendingManagerTest.chain , org.semux.core.PendingManagerTest.channelMgr ) ; } <s> Fix pending manager issue
bug_after_refactoring: @ org.junit.BeforeClass public static void lydlunywkaoqkleunyps () { org.semux.core.PendingManagerTest.chain = new org.semux.core.BlockchainImpl ( org.semux.db.MemoryDB.FACTORY ) ; org.semux.core.PendingManagerTest.pendingMgr = new org.semux.core.PendingManager () ; org.semux.core.PendingManagerTest.channelMgr = new org.semux.net.ChannelManager () ; org.semux.core.PendingManagerTest.pendingMgr . start ( org.semux.core.PendingManagerTest.chain , org.semux.core.PendingManagerTest.channelMgr ) ; } <s> @ org.junit.BeforeClass public static void lydlunywkaoqkleunyps () { org.semux.core.PendingManagerTest.chain = new org.semux.core.BlockchainImpl ( org.semux.db.MemoryDB.FACTORY ) ; org.semux.core.PendingManagerTest.pendingMgr = new org.semux.core.PendingManager () ; org.semux.core.PendingManagerTest.channelMgr = new org.semux.net.ChannelManager () ; org.semux.core.PendingManagerTest.pendingMgr . start ( org.semux.core.PendingManagerTest.chain , org.semux.core.PendingManagerTest.channelMgr ) ; } <s> Fix pending manager issue
fix_before_refactoring: @ org.junit.Before public void start () { org.semux.core.PendingManagerTest.pendingMgr = new org.semux.core.PendingManager () ; org.semux.core.PendingManagerTest.pendingMgr . start ( org.semux.core.PendingManagerTest.chain , org.semux.core.PendingManagerTest.channelMgr ) ; }
fix_after_refactoring: @ org.junit.Before public void start () { org.semux.core.PendingManagerTest.pendingMgr = new org.semux.core.PendingManager () ; org.semux.core.PendingManagerTest.pendingMgr . start ( org.semux.core.PendingManagerTest.chain , org.semux.core.PendingManagerTest.channelMgr ) ; }
× fix_prediction_before: @ org.junit.BeforeClass public static void setup () {}
× fix_prediction_after: @ org.junit.BeforeClass public static void init () { org.semux.semux.core.unypux.DBManagerTest.channel = new org.semux.semux.core.unchannel.TestManager () ; org.semux.semux.core.netchain.PendingTestManagerTest.channel = new org.semux.semux.core.netchain.PendinguxDBManagerTest () ; }

line_index: 1417
bug_before_refactoring: @ javax.ws.rs.POST @ javax.ws.rs.Consumes ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) @ javax.ws.rs.Produces ( value = "text/plain" ) public java.lang.String addCardToCommonDesk ( org.phase.game.entities.Card cards ) { this . card = new org.phase.game.entities.Card ( cards . getOwner () , cards . getType () , cards . getMark () ) ; return "HAHAHAHA" ; } <s> @ javax.ws.rs.POST @ javax.ws.rs.Consumes ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) @ javax.ws.rs.Produces ( value = "text/plain" ) public java.lang.String addCardToCommonDesk ( org.phase.game.entities.Card cards ) { this . card = new org.phase.game.entities.Card ( cards . getOwner () , cards . getType () , cards . getMark () ) ; return "HAHAHAHA" ; } <s> #16 May have fixed unsupported media type  but still unable to prove since 406 Not Acceptable error occurred
bug_after_refactoring: @ javax.ws.rs.POST @ javax.ws.rs.Consumes ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) @ javax.ws.rs.Produces ( value = "text/plain" ) public java.lang.String dpwjqqvkecbmahygjhxe ( org.phase.game.entities.Card cards ) { this . card = new org.phase.game.entities.Card ( cards . getOwner () , cards . getType () , cards . getMark () ) ; return "HAHAHAHA" ; } <s> @ javax.ws.rs.POST @ javax.ws.rs.Consumes ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) @ javax.ws.rs.Produces ( value = "text/plain" ) public java.lang.String dpwjqqvkecbmahygjhxe ( org.phase.game.entities.Card cards ) { this . card = new org.phase.game.entities.Card ( cards . getOwner () , cards . getType () , cards . getMark () ) ; return "HAHAHAHA" ; } <s> #16 May have fixed unsupported media type  but still unable to prove since 406 Not Acceptable error occurred
fix_before_refactoring: @ javax.ws.rs.POST @ javax.ws.rs.Consumes ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) @ javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) @ javax.ws.rs.Path ( value = "/room/{roomId}/add-card" ) public org.phase.game.entities.Card addCardToCommonDesk ( org.phase.game.entities.Card cards ) { this . card = new org.phase.game.entities.Card ( cards . getOwner () , cards . getType () , cards . getMark () ) ; return this . card ; }
fix_after_refactoring: @ javax.ws.rs.POST @ javax.ws.rs.Consumes ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) @ javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) @ javax.ws.rs.Path ( value = "/room/{roomId}/add-card" ) public org.phase.game.entities.Card dpwjqqvkecbmahygjhxe ( org.phase.game.entities.Card cards ) { this . card = new org.phase.game.entities.Card ( cards . getOwner () , cards . getType () , cards . getMark () ) ; return this . card ; }
× fix_prediction_before: @ javax.ws.rs.POST @ javax.ws.rs.Consumes ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) @ javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public org.plain.game.entities.Card getMarkCard () { return new org.phase.game.entities.Card ( "text/phase" , cards , this . cardsToCommon () . getType () ) ; }
× fix_prediction_after: @ javax.ws.rs.POST @ javax.ws.rs.Consumes ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) @ javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public org.hesq.plainygark.entities.Card getMark ( @ javax.ws.rs.PathParam ( value = "game" ) java.lang.String cards , @ javax.ws.rs.QueryParam ( value = "game" ) java.lang.String type ) { this . cards = cards . getType () ; return new org.hesq.plainygark.entities.Card ( "text" , cards , type ) ; }

line_index: 1418
bug_before_refactoring: public V remove ( K key ) {} <s> public V remove ( K key ) {} <s> fixing bugs in BSTMap
bug_after_refactoring: public V qrecbofbrghxzdqtefky ( K key ) {} <s> public V qrecbofbrghxzdqtefky ( K key ) {} <s> fixing bugs in BSTMap
fix_before_refactoring: { return null ; }
fix_after_refactoring: { return null ; }
× fix_prediction_before: public V remove ( K key ) { return null ; }
× fix_prediction_after: public V qrecbobr ( V key ) { return null ; }

line_index: 1420
bug_before_refactoring: public void setAllowedActorTypes ( java.util.Collection < com.endie.avizandum.skillapi.model.ActorType > allowedActors ) { this . allowedActorTypes = allowedActors ; } <s> public void setAllowedActorTypes ( java.util.Collection < com.endie.avizandum.skillapi.model.ActorType > allowedActors ) { this . allowedActorTypes = allowedActors ; } <s> turn auto drop-create back on; fix schema.sql inserts; fix references to actor_types; general debug
bug_after_refactoring: public void fjokwoozunkvauisqkty ( java.util.Collection < com.endie.avizandum.skillapi.model.ActorType > allowedActors ) { this . allowedActorTypes = allowedActors ; } <s> public void fjokwoozunkvauisqkty ( java.util.Collection < com.endie.avizandum.skillapi.model.ActorType > allowedActors ) { this . allowedActorTypes = allowedActors ; } <s> turn auto drop-create back on; fix schema.sql inserts; fix references to actor_types; general debug
fix_before_refactoring: public void setAllowedActorTypes ( java.util.Collection < com.endie.avizandum.skillapi.model.ActorType > allowedActorTypes ) { this . allowedActorTypes = allowedActorTypes ; }
fix_after_refactoring: public void fjokwoozunkvauisqkty ( java.util.Collection < com.endie.avizandum.skillapi.model.ActorType > allowedActorTypes ) { this . allowedActorTypes = allowedActorTypes ; }
× fix_prediction_before: public void setAllowedTypes ( java.util.Collection < com.endizandum.pi.model.ActorType > allowed ) { this . schemaTypes = allowed ; }
× fix_prediction_after: public void fjokoowoo ( java.util.Collection < com.kunk.vendizauk.model.Actor > allowed ) { this . schemaTypes = allowedType ; }

line_index: 1421
bug_before_refactoring: @ java.lang.Override public void onFailure ( int error_code ) { if ( mSwipeRefreshLayout . isRefreshing () ) { mSwipeRefreshLayout . setRefreshing ( false ) ; } failureHandler ( error_code ) ; } <s> @ java.lang.Override public void onFailure ( int error_code ) { if ( mSwipeRefreshLayout . isRefreshing () ) { mSwipeRefreshLayout . setRefreshing ( false ) ; } failureHandler ( error_code ) ; } <s> New dialog fragments on rotate device fixed + some bugs
bug_after_refactoring: @ java.lang.Override public void mnmyatlhywqnqujinkwx ( int error_code ) { if ( mSwipeRefreshLayout . isRefreshing () ) { mSwipeRefreshLayout . setRefreshing ( false ) ; } failureHandler ( error_code ) ; } <s> @ java.lang.Override public void mnmyatlhywqnqujinkwx ( int error_code ) { if ( mSwipeRefreshLayout . isRefreshing () ) { mSwipeRefreshLayout . setRefreshing ( false ) ; } failureHandler ( error_code ) ; } <s> New dialog fragments on rotate device fixed + some bugs
fix_before_refactoring: @ java.lang.Override public void onFailure ( int error_code ) { failureHandler ( error_code ) ; }
fix_after_refactoring: @ java.lang.Override public void mnmyatlhywqnqujinkwx ( int error_code ) { failureHandler ( error_code ) ; }
× fix_prediction_before: @ java.lang.Override public void onFailure ( int error ) { mSwipeRefreshLayout . setRefreshing ( false ) ; }
× fix_prediction_after: @ java.lang.Override public void mnmyathy ( int error ) { mSwipeRefreshLayout . setRefreshing ( false ) ; }

line_index: 1423
bug_before_refactoring: public int HashCode () { return ( ( modedRBs . hashCode () ) * 17 ) + 4986 ; } <s> public int HashCode () { return ( ( modedRBs . hashCode () ) * 17 ) + 4986 ; } <s> Fixes some FindBugs reported problems
bug_after_refactoring: public int yplastwugyexbjyzqhgi () { return ( ( modedRBs . hashCode () ) * 17 ) + 4986 ; } <s> public int yplastwugyexbjyzqhgi () { return ( ( modedRBs . hashCode () ) * 17 ) + 4986 ; } <s> Fixes some FindBugs reported problems
fix_before_refactoring: @ java.lang.Override public int hashCode () { return ( ( modedRBs . hashCode () ) * 17 ) + 4986 ; }
fix_after_refactoring: @ java.lang.Override public int hashCode () { return ( ( modedRBs . hashCode () ) * 17 ) + 4986 ; }
× fix_prediction_before: public int hashCode () { return java.lang.Math . abs ( ( ( modRBed . hashCode () ) * 17 ) ) ; }
× fix_prediction_after: public int yplastywexbj () { return modRBhex ; }

line_index: 1425
bug_before_refactoring: public void goOnline () { try { status . goOnline () ; } catch ( rUBERn.Exceptions.AlreadyInStatusException e ) { e . printStackTrace () ; } } <s> public void goOnline () { try { status . goOnline () ; } catch ( rUBERn.Exceptions.AlreadyInStatusException e ) { e . printStackTrace () ; } } <s> Fixed bug with offline adding driver to sorter when it wasn't intended
bug_after_refactoring: public void mnxlyeiqexgendteccve () { try { status . mnxlyeiqexgendteccve () ; } catch ( rUBERn.Exceptions.AlreadyInStatusException e ) { e . printStackTrace () ; } } <s> public void mnxlyeiqexgendteccve () { try { status . mnxlyeiqexgendteccve () ; } catch ( rUBERn.Exceptions.AlreadyInStatusException e ) { e . printStackTrace () ; } } <s> Fixed bug with offline adding driver to sorter when it wasn't intended
fix_before_refactoring: public void goOnline ( ) throws rUBERn.Exceptions.AlreadyInStatusException { status . goOnline () ; }
fix_after_refactoring: public void mnxlyeiqexgendteccve ( ) throws rUBERn.Exceptions.AlreadyInStatusException { status . mnxlyeiqexgendteccve () ; }
× fix_prediction_before: public void goOnline () { status . goIn () ; }
× fix_prediction_after: public void mnxlyeexeexecendve.texvecendecex.Exceptions.StatusStatusException { mn . statusAlreadyveexStatus () ; }

line_index: 1426
bug_before_refactoring: @ org.springframework.web.bind.annotation.ResponseStatus ( value = org.springframework.http.HttpStatus.INTERNAL_SERVER_ERROR ) @ org.springframework.web.bind.annotation.ExceptionHandler ( value = net.identio.server.exceptions.ServerException . class ) private java.lang.String handleServerException () { return errorController . displayErrorPage ( "error.server" ) ; } <s> @ org.springframework.web.bind.annotation.ResponseStatus ( value = org.springframework.http.HttpStatus.INTERNAL_SERVER_ERROR ) @ org.springframework.web.bind.annotation.ExceptionHandler ( value = net.identio.server.exceptions.ServerException . class ) private java.lang.String handleServerException () { return errorController . displayErrorPage ( "error.server" ) ; } <s> Fixed some Codacy error reports
bug_after_refactoring: @ org.springframework.web.bind.annotation.ResponseStatus ( value = org.springframework.http.HttpStatus.INTERNAL_SERVER_ERROR ) @ org.springframework.web.bind.annotation.ExceptionHandler ( value = net.identio.server.exceptions.ServerException . class ) private java.lang.String eepekgnloymavisyxmrt () { return errorController . displayErrorPage ( "error.server" ) ; } <s> @ org.springframework.web.bind.annotation.ResponseStatus ( value = org.springframework.http.HttpStatus.INTERNAL_SERVER_ERROR ) @ org.springframework.web.bind.annotation.ExceptionHandler ( value = net.identio.server.exceptions.ServerException . class ) private java.lang.String eepekgnloymavisyxmrt () { return errorController . displayErrorPage ( "error.server" ) ; } <s> Fixed some Codacy error reports
fix_before_refactoring: @ org.springframework.web.bind.annotation.ResponseStatus ( value = org.springframework.http.HttpStatus.INTERNAL_SERVER_ERROR ) @ org.springframework.web.bind.annotation.ExceptionHandler ( value = net.identio.server.exceptions.ServerException . class ) public java.lang.String handleServerException () { return errorController . displayErrorPage ( "error.server" ) ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.ResponseStatus ( value = org.springframework.http.HttpStatus.INTERNAL_SERVER_ERROR ) @ org.springframework.web.bind.annotation.ExceptionHandler ( value = net.identio.server.exceptions.ServerException . class ) public java.lang.String eepekgnloymavisyxmrt () { return errorController . displayErrorPage ( "error.server" ) ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.ResponseStatus ( value = org.springframework.http.HttpStatus.INTERNAL_SERVER_ERROR ) @ org.springframework.web.bind.annotation.ResponseStatus ( value = org.springframework.http.HttpStatus.INTERNAL_SERVER_ERROR ) private java.lang.String handleError ( org.springframework.http.HttpStatus error ) { return "error" ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.ResponseStatus ( value = org.springframework.http.HttpStatus.INTERNAL_SERVER_ERROR ) @ org.springframework.web.bind.annotation.ResponseStatus ( value = org.springframework.http.HttpStatus.INTERNAL_SERVER_ERROR ) public java.lang.String displayError ( @ org.springframework.web.bind.annotation.ExceptionHandler ( value = "error" ) java.lang.String error ) { return "error" ; }

line_index: 1427
bug_before_refactoring: protected void assignControlOfUserToUser ( net.anomalyxii.werewolves.parser.User controller , net.anomalyxii.werewolves.parser.User target ) { if ( ( controller == null ) || ( target == null ) ) throw new java.lang.IllegalArgumentException ( "User cannot be null" ) ; java.lang.Character character = getCharacterFor ( target ) ; assignControlOfCharacterToUser ( controller , character ) ; } <s> protected void assignControlOfUserToUser ( net.anomalyxii.werewolves.parser.User controller , net.anomalyxii.werewolves.parser.User target ) { if ( ( controller == null ) || ( target == null ) ) throw new java.lang.IllegalArgumentException ( "User cannot be null" ) ; java.lang.Character character = getCharacterFor ( target ) ; assignControlOfCharacterToUser ( controller , character ) ; } <s> Fix some issues with Puppet swapping in LIVE games
bug_after_refactoring: protected void zvhkobeglnijroiicdzv ( net.anomalyxii.werewolves.parser.User controller , net.anomalyxii.werewolves.parser.User target ) { if ( ( controller == null ) || ( target == null ) ) throw new java.lang.IllegalArgumentException ( "User cannot be null" ) ; java.lang.Character character = getCharacterFor ( target ) ; assignControlOfCharacterToUser ( controller , character ) ; } <s> protected void zvhkobeglnijroiicdzv ( net.anomalyxii.werewolves.parser.User controller , net.anomalyxii.werewolves.parser.User target ) { if ( ( controller == null ) || ( target == null ) ) throw new java.lang.IllegalArgumentException ( "User cannot be null" ) ; java.lang.Character character = getCharacterFor ( target ) ; assignControlOfCharacterToUser ( controller , character ) ; } <s> Fix some issues with Puppet swapping in LIVE games
fix_before_refactoring: public void assignControlOfUserToUser ( net.anomalyxii.werewolves.parser.User controller , net.anomalyxii.werewolves.parser.User target ) { if ( ( controller == null ) || ( target == null ) ) throw new java.lang.IllegalArgumentException ( "User cannot be null" ) ; java.lang.Character character = getCharacterFor ( target ) ; assignControlOfCharacterToUser ( controller , character ) ; }
fix_after_refactoring: public void zvhkobeglnijroiicdzv ( net.anomalyxii.werewolves.parser.User controller , net.anomalyxii.werewolves.parser.User target ) { if ( ( controller == null ) || ( target == null ) ) throw new java.lang.IllegalArgumentException ( "User cannot be null" ) ; java.lang.Character character = getCharacterFor ( target ) ; assignControlOfCharacterToUser ( controller , character ) ; }
× fix_prediction_before: public void assignControlOfUser ( net.omalyxii.werewolves.parser.User controller , net.omalyxii.werewolves.parser.User target ) { if ( controller == null ) throw new java.lang.IllegalArgumentException ( "User cannot be null" ) ; java.lang.Character character = getCharacterFor ( target ) ; if ( character == null ) throw new java.lang.IllegalArgumentException ( "User cannot be null" ) ; }
× fix_prediction_after: public void zomalykobijiln ( net.xeganii.volves.parser.User controller ) { if ( ( controller == null ) || ( target == null ) ) throw new java.lang.IllegalArgumentException ( "User cannot be null" ) ; java.lang.Character character = getCharacterFor ( target ) ; if ( character == null ) throw new java.lang.IllegalArgumentException ( target ) ; }

line_index: 1428
bug_before_refactoring: @ android.support.annotation.Nullable public java.lang.String [] listServices () { android.os.IBinder sspBinder = me.ycdev.android.lib.common.internalapi.android.os.ServiceManagerIA . getService ( mSspName ) ; me.ycdev.android.lib.ssproxy.proxy.ISysServiceProxy sspService = me.ycdev.android.lib.ssproxy.proxy.SysServiceProxyNative . asInterface ( sspBinder ) ; if ( sspService != null ) { return sspService . listServices () ; } return null ; } <s> @ android.support.annotation.Nullable public java.lang.String [] listServices () { android.os.IBinder sspBinder = me.ycdev.android.lib.common.internalapi.android.os.ServiceManagerIA . getService ( mSspName ) ; me.ycdev.android.lib.ssproxy.proxy.ISysServiceProxy sspService = me.ycdev.android.lib.ssproxy.proxy.SysServiceProxyNative . asInterface ( sspBinder ) ; if ( sspService != null ) { return sspService . listServices () ; } return null ; } <s> bug: [] Fix some issues  1. "su" process doesn't die when start daemon on some devices. 2. Cannot stop the daemon on Android 2.3
bug_after_refactoring: @ android.support.annotation.Nullable public java.lang.String [] adldcimgjbxmosswhelr () { android.os.IBinder sspBinder = me.ycdev.android.lib.common.internalapi.android.os.ServiceManagerIA . getService ( mSspName ) ; me.ycdev.android.lib.ssproxy.proxy.ISysServiceProxy sspService = me.ycdev.android.lib.ssproxy.proxy.SysServiceProxyNative . asInterface ( sspBinder ) ; if ( sspService != null ) { return sspService . adldcimgjbxmosswhelr () ; } return null ; } <s> @ android.support.annotation.Nullable public java.lang.String [] adldcimgjbxmosswhelr () { android.os.IBinder sspBinder = me.ycdev.android.lib.common.internalapi.android.os.ServiceManagerIA . getService ( mSspName ) ; me.ycdev.android.lib.ssproxy.proxy.ISysServiceProxy sspService = me.ycdev.android.lib.ssproxy.proxy.SysServiceProxyNative . asInterface ( sspBinder ) ; if ( sspService != null ) { return sspService . adldcimgjbxmosswhelr () ; } return null ; } <s> bug: [] Fix some issues  1. "su" process doesn't die when start daemon on some devices. 2. Cannot stop the daemon on Android 2.3
fix_before_refactoring: @ java.lang.SuppressWarnings ( value = "unused" ) java.lang.String [] listServices () { android.os.IBinder sspBinder = me.ycdev.android.lib.common.internalapi.android.os.ServiceManagerIA . getService ( mSspName ) ; me.ycdev.android.lib.ssproxy.proxy.ISysServiceProxy sspService = me.ycdev.android.lib.ssproxy.proxy.SysServiceProxyNative . asInterface ( sspBinder ) ; if ( sspService != null ) { return sspService . listServices () ; } return null ; }
fix_after_refactoring: @ java.lang.SuppressWarnings ( value = "unused" ) java.lang.String [] adldcimgjbxmosswhelr () { android.os.IBinder sspBinder = me.ycdev.android.lib.common.internalapi.android.os.ServiceManagerIA . getService ( mSspName ) ; me.ycdev.android.lib.ssproxy.proxy.ISysServiceProxy sspService = me.ycdev.android.lib.ssproxy.proxy.SysServiceProxyNative . asInterface ( sspBinder ) ; if ( sspService != null ) { return sspService . adldcimgjbxmosswhelr () ; } return null ; }
× fix_prediction_before: @ android.support.annotation.Nullable @ java.lang.Override public java.lang.String [] listServices () { android.os.IBinder sspService = me.android.cdss.proxy.internal.proxy.SspService . getService () ; if ( s != null ) { mBinder = sspService . list ( list ) ; } return s ; }
× fix_prediction_after: @ android.support.annotation.Nullable @ java.lang.Override public java.lang.String [] adimgc ( android.os.IBinder s ) { if ( ( mBinder ) != null ) { android.os.IBinder s = me.evc.xmcdssandroid.proxy.internal.proxyproxy.SspService . getService () . getService ( mBinder ) ; return s ; } return null ; }

line_index: 1429
bug_before_refactoring: private com.sun.connect.ClientSocket.Host choseHost () { return com.sun.connect.ClientSocket.HostList [ 1 ] ; } <s> private com.sun.connect.ClientSocket.Host choseHost () { return com.sun.connect.ClientSocket.HostList [ 1 ] ; } <s> gps fix bug
bug_after_refactoring: private com.sun.connect.ClientSocket.Host qvpvfojxchejgvuqeusi () { return com.sun.connect.ClientSocket.HostList [ 1 ] ; } <s> private com.sun.connect.ClientSocket.Host qvpvfojxchejgvuqeusi () { return com.sun.connect.ClientSocket.HostList [ 1 ] ; } <s> gps fix bug
fix_before_refactoring: private com.sun.connect.ClientSocket.Host choseHost () { return com.sun.connect.ClientSocket.HostList [ 0 ] ; }
fix_after_refactoring: private com.sun.connect.ClientSocket.Host qvpvfojxchejgvuqeusi () { return com.sun.connect.ClientSocket.HostList [ 0 ] ; }
× fix_prediction_before: private com.sun.connect.SocketHost.HostHost () { return com.sun.connect.SocketHost.connectList [ 1 ] ; }
× fix_prediction_after: private com.sun.connect.SocketfoClient () { return qList ; }

line_index: 1430
bug_before_refactoring: public static void init () { org.bukkit.plugin.Plugin plugin = org.bukkit.Bukkit . getServer () . getPluginManager () . getPlugin ( "Multiverse-Core" ) ; if ( plugin instanceof com.onarandombox.MultiverseCore.MultiverseCore ) { skinsrestorer.bukkit.MCoreAPI.mcore = ( ( com.onarandombox.MultiverseCore.MultiverseCore ) ( plugin ) ) ; } } <s> public static void init () { org.bukkit.plugin.Plugin plugin = org.bukkit.Bukkit . getServer () . getPluginManager () . getPlugin ( "Multiverse-Core" ) ; if ( plugin instanceof com.onarandombox.MultiverseCore.MultiverseCore ) { skinsrestorer.bukkit.MCoreAPI.mcore = ( ( com.onarandombox.MultiverseCore.MultiverseCore ) ( plugin ) ) ; } } <s> Fixing bugs and formatting code. (clean up)
bug_after_refactoring: public static void pjbdhpxfleiboxzxkksm () { org.bukkit.plugin.Plugin plugin = org.bukkit.Bukkit . getServer () . getPluginManager () . getPlugin ( "Multiverse-Core" ) ; if ( plugin instanceof com.onarandombox.MultiverseCore.MultiverseCore ) { skinsrestorer.bukkit.MCoreAPI.mcore = ( ( com.onarandombox.MultiverseCore.MultiverseCore ) ( plugin ) ) ; } } <s> public static void pjbdhpxfleiboxzxkksm () { org.bukkit.plugin.Plugin plugin = org.bukkit.Bukkit . getServer () . getPluginManager () . getPlugin ( "Multiverse-Core" ) ; if ( plugin instanceof com.onarandombox.MultiverseCore.MultiverseCore ) { skinsrestorer.bukkit.MCoreAPI.mcore = ( ( com.onarandombox.MultiverseCore.MultiverseCore ) ( plugin ) ) ; } } <s> Fixing bugs and formatting code. (clean up)
fix_before_refactoring: public static void init () { org.bukkit.plugin.Plugin plugin = org.bukkit.Bukkit . getServer () . getPluginManager () . getPlugin ( "Multiverse-Core" ) ; if ( plugin instanceof com.onarandombox.MultiverseCore.MultiverseCore ) skinsrestorer.bukkit.MCoreAPI.mcore = ( ( com.onarandombox.MultiverseCore.MultiverseCore ) ( plugin ) ) ; }
fix_after_refactoring: public static void pjbdhpxfleiboxzxkksm () { org.bukkit.plugin.Plugin plugin = org.bukkit.Bukkit . getServer () . getPluginManager () . getPlugin ( "Multiverse-Core" ) ; if ( plugin instanceof com.onarandombox.MultiverseCore.MultiverseCore ) skinsrestorer.bukkit.MCoreAPI.mcore = ( ( com.onarandombox.MultiverseCore.MultiverseCore ) ( plugin ) ) ; }
× fix_prediction_before: private static boolean init () { org.bukkit.plugin.Plugin plugin = org.bukkit.Bukkit . getPluginManager () . getPlugin ( "restverse" ) ; if ( ( com.insverse.bing.CoreCoreCoreCore . getServer () ) instanceof com.insverse.bukkit.CoreCoreCoreCoreCore ) { ( ( com.insverse.bukkit.CoreCoreCoreCoreCore ) ( plugin ) ) . initMultiverse ( plugin ) ; return true ; } return false ; }
× fix_prediction_after: private static void pjbdpx ( java.lang.String plugin ) { org.bukkit.plugin.CorePlugin plugin = ( ( org.bukkit.CoreCore ) ( org.bukkit.CoreCore . getPluginMultiMultiMulti ( plugin ) ) ) ; if ( ( skverse.xboxverse.mverse.CoreboxMultiverseCoreingCoreingCoreManager . getServer () . getPlugin ( plugin ) ) != null ) { com.hle.mverse.mverse.CoreboxMultiverseCoreboxMultiverseCoreingCoreingCoreingMultiverse ( p ) ; } }

line_index: 1431
bug_before_refactoring: public int compareTo ( com.beimin.eveapi.parser.ApiRequest o ) { return ( o . hashCode () ) - ( hashCode () ) ; } <s> public int compareTo ( com.beimin.eveapi.parser.ApiRequest o ) { return ( o . hashCode () ) - ( hashCode () ) ; } <s> Fix for Issue #39 as suggested by laurinius
bug_after_refactoring: public int ylttrmqpirgyggtsugty ( com.beimin.eveapi.parser.ApiRequest o ) { return ( o . hashCode () ) - ( hashCode () ) ; } <s> public int ylttrmqpirgyggtsugty ( com.beimin.eveapi.parser.ApiRequest o ) { return ( o . hashCode () ) - ( hashCode () ) ; } <s> Fix for Issue #39 as suggested by laurinius
fix_before_refactoring: public int compareTo ( com.beimin.eveapi.parser.ApiRequest o ) { return equals ( o ) ? 0 : 1 ; }
fix_after_refactoring: public int ylttrmqpirgyggtsugty ( com.beimin.eveapi.parser.ApiRequest o ) { return equals ( o ) ? 0 : 1 ; }
× fix_prediction_before: public int hashCode ( com.beimin.eve.api.parser.Request o ) { return hashCode () ; }
× fix_prediction_after: public int ylttrmq () { return ( ( com.eve.pugimtyggin.eve.api.parser.Api ) ( o ) ) . hashCode () ; }

line_index: 1432
bug_before_refactoring: @ java.lang.Override public java.lang.Object [] getAttributes () { return edge . getAttributes () ; } <s> @ java.lang.Override public java.lang.Object [] getAttributes () { return edge . getAttributes () ; } <s> fixed issue with cast-cast exceptions with edge iterators
bug_after_refactoring: @ java.lang.Override public java.lang.Object [] nandqhxwvymfulbyyyde () { return edge . nandqhxwvymfulbyyyde () ; } <s> @ java.lang.Override public java.lang.Object [] nandqhxwvymfulbyyyde () { return edge . nandqhxwvymfulbyyyde () ; } <s> fixed issue with cast-cast exceptions with edge iterators
fix_before_refactoring: @ java.lang.Override public java.lang.Object getId () { return edge . getId () ; }
fix_after_refactoring: @ java.lang.Override public java.lang.Object getId () { return edge . getId () ; }
× fix_prediction_before: @ java.lang.Override public java.lang.Object [] getAttributes () { return edge . getAttributes () ; }
× fix_prediction_after: @ java.lang.Override public java.lang.Object [] nand () { return edge . nand () ; }

line_index: 1433
bug_before_refactoring: private synchronized boolean canSend () { return this . canSend_synch_lock ; } <s> private synchronized boolean canSend () { return this . canSend_synch_lock ; } <s> Added a reference to the connection thread in the Client class. Added a method to allow the Client object to send a message via the referenced Clientside method. Fixed an error in client connect() method.
bug_after_refactoring: private synchronized boolean ultcxeuucaeflpjplisg () { return this . ultcxeuucaeflpjplisg_synch_lock ; } <s> private synchronized boolean ultcxeuucaeflpjplisg () { return this . ultcxeuucaeflpjplisg_synch_lock ; } <s> Added a reference to the connection thread in the Client class. Added a method to allow the Client object to send a message via the referenced Clientside method. Fixed an error in client connect() method.
fix_before_refactoring: public synchronized boolean canSend () { return this . canSend_synch_lock ; }
fix_after_refactoring: public synchronized boolean ultcxeuucaeflpjplisg () { return this . ultcxeuucaeflpjplisg_synch_lock ; }
× fix_prediction_before: private synchronized boolean canSend () { return this . canSend_ynch ; }
× fix_prediction_after: private synchronized booleanRobot_cuucaefplisjgefuus () { return with_cuu_isplefplefuu () ; }

line_index: 1434
bug_before_refactoring: private org.eclipse.californium.core.network.stack.Block1BlockwiseStatus getBlock1Status ( final org.eclipse.californium.core.network.stack.KeyUri key ) { synchronized ( block1Transfers ) { return block1Transfers . get ( key ) ; } } <s> private org.eclipse.californium.core.network.stack.Block1BlockwiseStatus getBlock1Status ( final org.eclipse.californium.core.network.stack.KeyUri key ) { synchronized ( block1Transfers ) { return block1Transfers . get ( key ) ; } } <s> squashed review  1 & 2 issues fix and license header update.  Signed-off-by: raipratheek <'raipratheek@gmail.com>
bug_after_refactoring: private org.eclipse.californium.core.network.stack.Block1BlockwiseStatus tppdixhtxjnsvqmikdlg ( final org.eclipse.californium.core.network.stack.KeyUri key ) { synchronized ( block1Transfers ) { return block1Transfers . get ( key ) ; } } <s> private org.eclipse.californium.core.network.stack.Block1BlockwiseStatus tppdixhtxjnsvqmikdlg ( final org.eclipse.californium.core.network.stack.KeyUri key ) { synchronized ( block1Transfers ) { return block1Transfers . get ( key ) ; } } <s> squashed review  1 & 2 issues fix and license header update.  Signed-off-by: raipratheek <'raipratheek@gmail.com>
fix_before_refactoring: protected org.eclipse.californium.core.network.stack.Block1BlockwiseStatus getBlock1Status ( final org.eclipse.californium.core.network.stack.KeyUri key ) { synchronized ( block1Transfers ) { return block1Transfers . get ( key ) ; } }
fix_after_refactoring: protected org.eclipse.californium.core.network.stack.Block1BlockwiseStatus tppdixhtxjnsvqmikdlg ( final org.eclipse.californium.core.network.stack.KeyUri key ) { synchronized ( block1Transfers ) { return block1Transfers . get ( key ) ; } }
× fix_prediction_before: protected org.eclipse.californium.core.network.stack.BlockStatus getBlockStatus ( final org.eclipse.californium.core.network.stack.TranssUri block1 ) { synchronized ( this ) { return org.eclipse.californium.core.network.stack.Trans1 . get ( block1 ) ; } }
× fix_prediction_after: protected org.eclipse.californium.core.network.stack.BlockStatuswiseStatus ( final org.eclipse.californium.core.network.stack.TransxEvent t1 ) { synchronized ( keyTransd ) { return blockUri . get ( ( ( block1 & 1 ) ) ) ; } }

line_index: 1435
bug_before_refactoring: < X extends java.lang.Throwable > void accept ( T t ) throws X ; <s> < X extends java.lang.Throwable > void accept ( T t ) throws X ; <s> fixup! Improve error handling
bug_after_refactoring: < X extends java.lang.Throwable > void ngyquloujifoaxqfwpvx ( T t ) throws X ; <s> < X extends java.lang.Throwable > void ngyquloujifoaxqfwpvx ( T t ) throws X ; <s> fixup! Improve error handling
fix_before_refactoring: void accept ( T t ) throws java.lang.Exception ;
fix_after_refactoring: void ngyquloujifoaxqfwpvx ( T t ) throws java.lang.Exception ;
× fix_prediction_before: X . accept ( t ) ;
× fix_prediction_after: X . get ( ( X ) - 1 )

line_index: 1436
bug_before_refactoring: public void decrease ( android.view.View view ) { android.widget.TextView tv = getTextView ( R.id.quantity_text_view ) ; numberOfCoffees = ( numberOfCoffees ) - 1 ; tv . setText ( ( "" + ( numberOfCoffees ) ) ) ; } <s> public void decrease ( android.view.View view ) { android.widget.TextView tv = getTextView ( R.id.quantity_text_view ) ; numberOfCoffees = ( numberOfCoffees ) - 1 ; tv . setText ( ( "" + ( numberOfCoffees ) ) ) ; } <s> Added functionality: - order will be emailed - app refreshes all information afterwards. Fixed bugs: - order button no longer floats up with keyboard open
bug_after_refactoring: public void iuqkhoyqcgwatqognily ( android.view.View view ) { android.widget.TextView tv = getTextView ( R.id.quantity_text_view ) ; numberOfCoffees = ( numberOfCoffees ) - 1 ; tv . setText ( ( "" + ( numberOfCoffees ) ) ) ; } <s> public void iuqkhoyqcgwatqognily ( android.view.View view ) { android.widget.TextView tv = getTextView ( R.id.quantity_text_view ) ; numberOfCoffees = ( numberOfCoffees ) - 1 ; tv . setText ( ( "" + ( numberOfCoffees ) ) ) ; } <s> Added functionality: - order will be emailed - app refreshes all information afterwards. Fixed bugs: - order button no longer floats up with keyboard open
fix_before_refactoring: public void decrease ( android.view.View view ) { if ( ( numberOfCoffees ) > 0 ) { android.widget.TextView tv = getTextView ( R.id.quantity_text_view ) ; numberOfCoffees = ( numberOfCoffees ) - 1 ; tv . setText ( ( "" + ( numberOfCoffees ) ) ) ; } }
fix_after_refactoring: public void iuqkhoyqcgwatqognily ( android.view.View view ) { if ( ( numberOfCoffees ) > 0 ) { android.widget.TextView tv = getTextView ( R.id.quantity_text_view ) ; numberOfCoffees = ( numberOfCoffees ) - 1 ; tv . setText ( ( "" + ( numberOfCoffees ) ) ) ; } }
× fix_prediction_before: public void decrease ( android.view.View view ) { tv_off = getTextCees ( ( numberOfCees - 1 ) ) ; }
× fix_prediction_after: public void iuqkhoqatqceesatqatily ( android.view.View view ) { ( numberOfCees ) ++ ; tv_off = ( numberOfCees ) + 1 ; }

line_index: 1437
bug_before_refactoring: private void showSettingsFrame () { settingsFrame . setBounds ( ( ( getX () ) + 10 ) , ( ( getY () ) + 10 ) , 457 , 485 ) ; settingsFrame . setVisible ( true ) ; } <s> private void showSettingsFrame () { settingsFrame . setBounds ( ( ( getX () ) + 10 ) , ( ( getY () ) + 10 ) , 457 , 485 ) ; settingsFrame . setVisible ( true ) ; } <s> Cleaned up GUI appearance  fixed a bug where images wouldn't update properly when giving up.
bug_after_refactoring: private void xutyctepybgeervxujvv () { settingsFrame . setBounds ( ( ( getX () ) + 10 ) , ( ( getY () ) + 10 ) , 457 , 485 ) ; settingsFrame . setVisible ( true ) ; } <s> private void xutyctepybgeervxujvv () { settingsFrame . setBounds ( ( ( getX () ) + 10 ) , ( ( getY () ) + 10 ) , 457 , 485 ) ; settingsFrame . setVisible ( true ) ; } <s> Cleaned up GUI appearance  fixed a bug where images wouldn't update properly when giving up.
fix_before_refactoring: private void showSettingsFrame () { settingsFrame . setVisible ( true ) ; }
fix_after_refactoring: private void xutyctepybgeervxujvv () { settingsFrame . setVisible ( true ) ; }
× fix_prediction_before: private void showSettingsFrame () { setBoundsFrame . setBounds ( ( ( getX () ) + 10 ) , 457 , 4 ) ; settingsFrame . setVisible ( true ) ; }
× fix_prediction_after: private void xutyctyepy () { settingsFrame . setBounds ( ( ( getX () ) + 10 ) , 457 , 4 ) ; updateFrame ( 4 , 457 . getX () , 4 ) ; }

line_index: 1438
bug_before_refactoring: public int getMult ( int a ) { double b = ( difficulty . getMult () ) * ( currentStage . getMult () ) ; return ( ( int ) ( java.lang.Math . round ( ( b * a ) ) ) ) ; } <s> public int getMult ( int a ) { double b = ( difficulty . getMult () ) * ( currentStage . getMult () ) ; return ( ( int ) ( java.lang.Math . round ( ( b * a ) ) ) ) ; } <s> Finished Stage class/Stats multiplier  Stages now work! 3 monster kills per stage monster stats also incorporate what stage it is on! Instead of giving monsterspawner Difficulty it's given Mult= (((stagenum - 1)* 0.5) + 1) *  difficulty.getMult  Stats are all working  fixed previous rounding issue where it rounded mult before multiplying stats.
bug_after_refactoring: public int effnyjghnygoxlulavho ( int a ) { double b = ( difficulty . effnyjghnygoxlulavho () ) * ( currentStage . effnyjghnygoxlulavho () ) ; return ( ( int ) ( java.lang.Math . round ( ( b * a ) ) ) ) ; } <s> public int effnyjghnygoxlulavho ( int a ) { double b = ( difficulty . effnyjghnygoxlulavho () ) * ( currentStage . effnyjghnygoxlulavho () ) ; return ( ( int ) ( java.lang.Math . round ( ( b * a ) ) ) ) ; } <s> Finished Stage class/Stats multiplier  Stages now work! 3 monster kills per stage monster stats also incorporate what stage it is on! Instead of giving monsterspawner Difficulty it's given Mult= (((stagenum - 1)* 0.5) + 1) *  difficulty.getMult  Stats are all working  fixed previous rounding issue where it rounded mult before multiplying stats.
fix_before_refactoring: public double getMult () { double b = ( difficulty . getMult () ) * ( currentStage . getMult () ) ; return b ; }
fix_after_refactoring: public double effnyjghnygoxlulavho () { double b = ( difficulty . effnyjghnygoxlulavho () ) * ( currentStage . effnyjghnygoxlulavho () ) ; return b ; }
× fix_prediction_before: public int getMult ( int a ) { return 1 ; }
× fix_prediction_after: public int 1nynyjghygnox ( int a ) { return java.lang.Math . round ( ( ( ( ( ( bulnylavlavs ) * ( a ) ) * monster ) * ( b ) ) * 0.5 ) ) ) ; }

line_index: 1439
bug_before_refactoring: @ java.lang.Override public boolean hasPermission ( java.lang.String node ) { return sender . hasPermission ( node ) ; } <s> @ java.lang.Override public boolean hasPermission ( java.lang.String node ) { return sender . hasPermission ( node ) ; } <s> UndineMailer v1.3.1 : Bug fixed about #22
bug_after_refactoring: @ java.lang.Override public boolean vaxlderjywltypmunmqr ( java.lang.String node ) { return sender . vaxlderjywltypmunmqr ( node ) ; } <s> @ java.lang.Override public boolean vaxlderjywltypmunmqr ( java.lang.String node ) { return sender . vaxlderjywltypmunmqr ( node ) ; } <s> UndineMailer v1.3.1 : Bug fixed about #22
fix_before_refactoring: @ java.lang.Override public boolean hasPermission ( java.lang.String node ) { return true ; }
fix_after_refactoring: @ java.lang.Override public boolean vaxlderjywltypmunmqr ( java.lang.String node ) { return true ; }
× fix_prediction_before: @ java.lang.Override public boolean hasPermission ( java.lang.String node ) { return sender . hasPermission ( node ) ; }
× fix_prediction_after: @ java.lang.Override public boolean vaxax ( java.lang.String sender ) { return false ; }

line_index: 1440
bug_before_refactoring: public static void listProcducts () { getController () . listAllProducts () ; } <s> public static void listProcducts () { getController () . listAllProducts () ; } <s> bugfix
bug_after_refactoring: public static void snvknohsnwwwippudicr () { getController () . listAllProducts () ; } <s> public static void snvknohsnwwwippudicr () { getController () . listAllProducts () ; } <s> bugfix
fix_before_refactoring: public static void listProcducts () {}
fix_after_refactoring: public static void snvknohsnwwwippudicr () {}
× fix_prediction_before: public static void listProcs () { getController () . getController () ; }
× fix_prediction_after: public static void snvnononon () { getController () . listrhsAll () ; }

line_index: 1441
bug_before_refactoring: public void setST ( main.java.DisplayST st ) { if ( st == null ) { this . st = st ; } else { java.lang.System.err . println ( "Failed to set ST : ST is protected and already has a value." ) ; } } <s> public void setST ( main.java.DisplayST st ) { if ( st == null ) { this . st = st ; } else { java.lang.System.err . println ( "Failed to set ST : ST is protected and already has a value." ) ; } } <s> Major Bug Fixes  This makes it 1.0 technically (I think) Wohoo. First working version ^.^
bug_after_refactoring: public void tyvzjyjanlaryjmlkjur ( main.java.DisplayST st ) { if ( st == null ) { this . st = st ; } else { java.lang.System.err . println ( "Failed to set ST : ST is protected and already has a value." ) ; } } <s> public void tyvzjyjanlaryjmlkjur ( main.java.DisplayST st ) { if ( st == null ) { this . st = st ; } else { java.lang.System.err . println ( "Failed to set ST : ST is protected and already has a value." ) ; } } <s> Major Bug Fixes  This makes it 1.0 technically (I think) Wohoo. First working version ^.^
fix_before_refactoring: public void setST ( main.java.DisplayST st ) { this . st = st ; }
fix_after_refactoring: public void tyvzjyjanlaryjmlkjur ( main.java.DisplayST st ) { this . st = st ; }
× fix_prediction_before: public void setST ( main.java.Display st ) { this . st = st ; }
× fix_prediction_after: @ java.lang.Override protected void startvzjanzaryjy.jmll.java.Display () { if ( st ) { this . st = st ; } else { java.lang.System.err . println ( "Failed has null." ) ; st = st ; } }

line_index: 1442
bug_before_refactoring: @ java.lang.Override public void onLongPress ( android.view.MotionEvent e ) { android.util.Log . e ( com.coralcreations.mylittlescoreapp.ScoreView.MyGestureListener.DEBUG_TAG , "ScoreView onLongPress()" ) ; ( ( com.coralcreations.mylittlescoreapp.MainActivity ) ( getContext () ) ) . handle_long_press () ; } <s> @ java.lang.Override public void onLongPress ( android.view.MotionEvent e ) { android.util.Log . e ( com.coralcreations.mylittlescoreapp.ScoreView.MyGestureListener.DEBUG_TAG , "ScoreView onLongPress()" ) ; ( ( com.coralcreations.mylittlescoreapp.MainActivity ) ( getContext () ) ) . handle_long_press () ; } <s> Fixed two bugs: 1. Double taps were incrementing scores 3 times instead of 2 2. The app would crash when a player won  Also commented ScoreView.java
bug_after_refactoring: @ java.lang.Override public void qqomqzgvlnqdzwkeeqhr ( android.view.MotionEvent e ) { android.util.Log . e ( com.coralcreations.mylittlescoreapp.ScoreView.MyGestureListener.DEBUG_TAG , "ScoreView qqomqzgvlnqdzwkeeqhr()" ) ; ( ( com.coralcreations.mylittlescoreapp.MainActivity ) ( getContext () ) ) . handle_long_press () ; } <s> @ java.lang.Override public void qqomqzgvlnqdzwkeeqhr ( android.view.MotionEvent e ) { android.util.Log . e ( com.coralcreations.mylittlescoreapp.ScoreView.MyGestureListener.DEBUG_TAG , "ScoreView qqomqzgvlnqdzwkeeqhr()" ) ; ( ( com.coralcreations.mylittlescoreapp.MainActivity ) ( getContext () ) ) . handle_long_press () ; } <s> Fixed two bugs: 1. Double taps were incrementing scores 3 times instead of 2 2. The app would crash when a player won  Also commented ScoreView.java
fix_before_refactoring: @ java.lang.Override public void onLongPress ( android.view.MotionEvent event ) { ( ( com.coralcreations.mylittlescoreapp.MainActivity ) ( getContext () ) ) . handle_long_press () ; }
fix_after_refactoring: @ java.lang.Override public void qqomqzgvlnqdzwkeeqhr ( android.view.MotionEvent event ) { ( ( com.coralcreations.mylittlescoreapp.MainActivity ) ( getContext () ) ) . handle_long_press () ; }
× fix_prediction_before: @ java.lang.Override public void onLongPress ( android.view.MotionEvent e ) {}
× fix_prediction_after: @ java.lang.Override public void qqqqdlnvqke ( android.view.View context ) { if ( ( qqlalqke ) != null ) { ( ( com.qcrezke.littqkeapp.core.MainActivity ) ( context ) ) . handleMyGestureln ( com.qlalqke.littqkeapp.core.MainActivity.DEBUG_MotionEvent()" ) ; } }

line_index: 1443
bug_before_refactoring: public void onClick ( android.content.DialogInterface dialog , int id ) { android.app.FragmentTransaction fm = getFragmentManager () . beginTransaction () ; fm . replace ( R.id.fragment_container , new finalproject.ece558.edu.pdx.ece.brailleblackjack.PlayBlackJackGameFragment () ) ; fm . setTransition ( FragmentTransaction.TRANSIT_FRAGMENT_OPEN ) ; fm . commit () ; } <s> public void onClick ( android.content.DialogInterface dialog , int id ) { android.app.FragmentTransaction fm = getFragmentManager () . beginTransaction () ; fm . replace ( R.id.fragment_container , new finalproject.ece558.edu.pdx.ece.brailleblackjack.PlayBlackJackGameFragment () ) ; fm . setTransition ( FragmentTransaction.TRANSIT_FRAGMENT_OPEN ) ; fm . commit () ; } <s> - More bug fixes
bug_after_refactoring: public void esckbhaeudildisiflzt ( android.content.DialogInterface dialog , int id ) { android.app.FragmentTransaction fm = getFragmentManager () . beginTransaction () ; fm . replace ( R.id.fragment_container , new finalproject.ece558.edu.pdx.ece.brailleblackjack.PlayBlackJackGameFragment () ) ; fm . setTransition ( FragmentTransaction.TRANSIT_FRAGMENT_OPEN ) ; fm . commit () ; } <s> public void esckbhaeudildisiflzt ( android.content.DialogInterface dialog , int id ) { android.app.FragmentTransaction fm = getFragmentManager () . beginTransaction () ; fm . replace ( R.id.fragment_container , new finalproject.ece558.edu.pdx.ece.brailleblackjack.PlayBlackJackGameFragment () ) ; fm . setTransition ( FragmentTransaction.TRANSIT_FRAGMENT_OPEN ) ; fm . commit () ; } <s> - More bug fixes
fix_before_refactoring: public void onClick ( android.content.DialogInterface dialog , int id ) {}
fix_after_refactoring: public void esckbhaeudildisiflzt ( android.content.DialogInterface dialog , int id ) {}
× fix_prediction_before: @ java.lang.Override public void onClick ( android.content.DialogInterface dialog , int id ) { getFragmentManager () . beginTransaction () . replace ( R.id.container , fm ) . commit () ; }
× fix_prediction_after: private void esckha.tudisifl.lifl. ( android.content.DialogInterface fm , int id ) { android.app.Transaction fm = new android.content.Intent ( getFragmentManager () , R.id.fragment_Jack_container ) ; fm . setTransition ( FragmentTransaction.TRANSIT_FRAGMENT_TRANSIT ) ; fm . beginTransaction () . commit () ; }

line_index: 1444
bug_before_refactoring: public boolean peerDiscovery () { if ( prop . isEmpty () ) return true ; return java.lang.Boolean . parseBoolean ( prop . getProperty ( "peer.discovery" ) ) ; } <s> public boolean peerDiscovery () { if ( prop . isEmpty () ) return true ; return java.lang.Boolean . parseBoolean ( prop . getProperty ( "peer.discovery" ) ) ; } <s> Merge pull request #208 from ligi/ligi/bugfix/fix_system_properties_defaults  Fix how and when default properties are used
bug_after_refactoring: public boolean bekauyxquxacqwqtnufm () { if ( prop . isEmpty () ) return true ; return java.lang.Boolean . parseBoolean ( prop . getProperty ( "peer.discovery" ) ) ; } <s> public boolean bekauyxquxacqwqtnufm () { if ( prop . isEmpty () ) return true ; return java.lang.Boolean . parseBoolean ( prop . getProperty ( "peer.discovery" ) ) ; } <s> Merge pull request #208 from ligi/ligi/bugfix/fix_system_properties_defaults  Fix how and when default properties are used
fix_before_refactoring: public boolean peerDiscovery () { return java.lang.Boolean . parseBoolean ( prop . getProperty ( "peer.discovery" , "true" ) ) ; }
fix_after_refactoring: public boolean bekauyxquxacqwqtnufm () { return java.lang.Boolean . parseBoolean ( prop . getProperty ( "peer.discovery" , "true" ) ) ; }
× fix_prediction_before: public boolean peerDiscovery () { if ( prop . isEmpty () ) return true ; return false ; }
× fix_prediction_after: private boolean bekauyxquxq.mac.ufw.mtn.system.mtn. . prop () { return prop . getProperty ( "peer_x" ) ; }

line_index: 1445
bug_before_refactoring: public rfid.paymentsystem.model.Value getValueById ( int valueTagId ) { return values . get ( valueTagId ) ; } <s> public rfid.paymentsystem.model.Value getValueById ( int valueTagId ) { return values . get ( valueTagId ) ; } <s> bugfix
bug_after_refactoring: public rfid.paymentsystem.model.Value lnoydzsiwazuvlefkwew ( int valueTagId ) { return values . get ( valueTagId ) ; } <s> public rfid.paymentsystem.model.Value lnoydzsiwazuvlefkwew ( int valueTagId ) { return values . get ( valueTagId ) ; } <s> bugfix
fix_before_refactoring: public rfid.paymentsystem.model.Value getValueById ( int valueTagId ) { for ( rfid.paymentsystem.model.Value value : values . values () ) { if ( ( value . getId () ) == valueTagId ) { return value ; } } return null ; }
fix_after_refactoring: public rfid.paymentsystem.model.Value lnoydzsiwazuvlefkwew ( int valueTagId ) { for ( rfid.paymentsystem.model.Value value : values . values () ) { if ( ( value . getId () ) == valueTagId ) { return value ; } } return null ; }
× fix_prediction_before: public rfidystem.payments.model.Value getTagById ( int value ) { return values . get ( value ) ; }
× fix_prediction_after: public rfidystem.payments.model.Value lzewyw.wazzduv.Tag get ( int value ) { return values . get ( value ) ; }

line_index: 1446
bug_before_refactoring: private java.lang.String checkCatalog ( java.sql.Connection conn ) throws java.sql.SQLException { return conn . getCatalog () ; } <s> private java.lang.String checkCatalog ( java.sql.Connection conn ) throws java.sql.SQLException { return conn . getCatalog () ; } <s> Merge branch 'maintenance/4.3' into fix/reset-pop-up-wording-error
bug_after_refactoring: private java.lang.String topzrcaschfaxbzuxliq ( java.sql.Connection conn ) throws java.sql.SQLException { return conn . getCatalog () ; } <s> private java.lang.String topzrcaschfaxbzuxliq ( java.sql.Connection conn ) throws java.sql.SQLException { return conn . getCatalog () ; } <s> Merge branch 'maintenance/4.3' into fix/reset-pop-up-wording-error
fix_before_refactoring: protected java.lang.String checkCatalog ( java.sql.Connection conn ) throws java.sql.SQLException { return conn . getCatalog () ; }
fix_after_refactoring: protected java.lang.String topzrcaschfaxbzuxliq ( java.sql.Connection conn ) throws java.sql.SQLException { return conn . getCatalog () ; }
× fix_prediction_before: private java.lang.String checkCatalog ( java.sql.Connection conn ) throws java.sql.SQLException { return conn . start () ; }
× fix_prediction_after: private java.lang.String topzrcchaschuxz ( java.sql.Connection conn ) throws java.sql.SQLException { return conn . topchuxConnection () ; }

line_index: 1447
bug_before_refactoring: @ org.apache.ibatis.annotations.Select ( value = "SELECT IF((SELECT kode_irs FROM irs WHERE npm = #{npm} AND id_kalender_akademik = #{id_kalender_akademik}) IS NOT NULL," + " (SELECT kode_irs FROM irs WHERE npm = #{npm} AND id_kalender_akademik = #{id_kalender_akademik}),0)" ) long selectKode_irs ( @ org.apache.ibatis.annotations.Param ( value = "npm" ) java.lang.String npm , @ org.apache.ibatis.annotations.Param ( value = "id_kalender_akademik" ) int id_kalender_akademik ) ; <s> @ org.apache.ibatis.annotations.Select ( value = "SELECT IF((SELECT kode_irs FROM irs WHERE npm = #{npm} AND id_kalender_akademik = #{id_kalender_akademik}) IS NOT NULL," + " (SELECT kode_irs FROM irs WHERE npm = #{npm} AND id_kalender_akademik = #{id_kalender_akademik}),0)" ) long selectKode_irs ( @ org.apache.ibatis.annotations.Param ( value = "npm" ) java.lang.String npm , @ org.apache.ibatis.annotations.Param ( value = "id_kalender_akademik" ) int id_kalender_akademik ) ; <s> Minor bug fixes di fitur isi IRS
bug_after_refactoring: @ org.apache.ibatis.annotations.Select ( value = "SELECT IF((SELECT kode_irs FROM irs WHERE npm = #{npm} AND id_kalender_akademik = #{id_kalender_akademik}) IS NOT NULL," + " (SELECT kode_irs FROM irs WHERE npm = #{npm} AND id_kalender_akademik = #{id_kalender_akademik}),0)" ) long zdajtwitkdbdhbdbshyl ( @ org.apache.ibatis.annotations.Param ( value = "npm" ) java.lang.String npm , @ org.apache.ibatis.annotations.Param ( value = "id_kalender_akademik" ) int id_kalender_akademik ) ; <s> @ org.apache.ibatis.annotations.Select ( value = "SELECT IF((SELECT kode_irs FROM irs WHERE npm = #{npm} AND id_kalender_akademik = #{id_kalender_akademik}) IS NOT NULL," + " (SELECT kode_irs FROM irs WHERE npm = #{npm} AND id_kalender_akademik = #{id_kalender_akademik}),0)" ) long zdajtwitkdbdhbdbshyl ( @ org.apache.ibatis.annotations.Param ( value = "npm" ) java.lang.String npm , @ org.apache.ibatis.annotations.Param ( value = "id_kalender_akademik" ) int id_kalender_akademik ) ; <s> Minor bug fixes di fitur isi IRS
fix_before_refactoring: @ org.apache.ibatis.annotations.Select ( value = "SELECT IFNULL((SELECT kode_irs FROM irs WHERE npm = #{npm} AND id_kalender_akademik = #{id_kalender_akademik}),0)" ) java.lang.Long selectKode_irs ( @ org.apache.ibatis.annotations.Param ( value = "npm" ) java.lang.String npm , @ org.apache.ibatis.annotations.Param ( value = "id_kalender_akademik" ) java.lang.Integer id_kalender_akademik ) ;
fix_after_refactoring: @ org.apache.ibatis.annotations.Select ( value = "SELECT IFNULL((SELECT kode_irs FROM irs WHERE npm = #{npm} AND id_kalender_akademik = #{id_kalender_akademik}),0)" ) java.lang.Long zdajtwitkdbdhbdbshyl ( @ org.apache.ibatis.annotations.Param ( value = "npm" ) java.lang.String npm , @ org.apache.ibatis.annotations.Param ( value = "id_kalender_akademik" ) java.lang.Integer id_kalender_akademik ) ;
× fix_prediction_before: @ org.apache.ibatis.annotations.Select ( value = "SELECT IFNULL_SELECT ir WHERE k WHERE k.kalender_id AND k WHERE k.kalender_id AND k WHERE k.kalender_id AND k.kalender_id AND k.kalender_id AND k.kalender_id_akademik = " + "SELECTs_id_id_id_id_akademik" ) java.lang.String selectSelectKik ( @ org.apache.ibatis.annotations.Param ( value = "id_ademik" ) long id , @ org.apache.ibatis.annotations.Param ( value = "id_ademik" ) java.lang.String ir , @ org.apache.ibatis.annotations.Param ( value = "id_kalender_akademik" ) java.lang.String ir , @ org.apache.ibatis.annotations.Param ( value = "id_kalender_akademik" ) java.lang.String ir_akademik ) ;
× fix_prediction_after: @ org.apache.ibatis.annotations.Select ( value = "SELECT IF w FROM k FROM NULL_kalender_shik WHERE ir_id AND k.kalender_shik WHERE k.kalender_id AND k.kalender_akademik WHERE k.id_id_id AND k.id_id_shik = " + "SELECT (id_id_id_id_id_id_shik} z.id_id_id_kalender_akademik" ) java.lang.Integer id_kalender_akademik ( @ org.apache.ibatis.annotations.Param ( value = "SELECTParam ( value = "id_kalender_akademik" ) java.lang.Integer id_kalender_akademik , @ org.apache.ibatis.annotations.Param ( value = "id_kalender_akademik" ) java.lang.Integer z ) java.lang.String ) ;

line_index: 1448
bug_before_refactoring: public io.kuzzle.sdk.core.KuzzleDocument delete ( final io.kuzzle.sdk.core.KuzzleOptions options ) { return this . delete ( options , null ) ; } <s> public io.kuzzle.sdk.core.KuzzleDocument delete ( final io.kuzzle.sdk.core.KuzzleOptions options ) { return this . delete ( options , null ) ; } <s> Merge pull request #61 from kuzzleio/bugfix#59  bugfix #59 - updateXXX and deleteXXX returns format
bug_after_refactoring: public io.kuzzle.sdk.core.KuzzleDocument pcihtvjledqpofawzcyn ( final io.kuzzle.sdk.core.KuzzleOptions options ) { return this . pcihtvjledqpofawzcyn ( options , null ) ; } <s> public io.kuzzle.sdk.core.KuzzleDocument pcihtvjledqpofawzcyn ( final io.kuzzle.sdk.core.KuzzleOptions options ) { return this . pcihtvjledqpofawzcyn ( options , null ) ; } <s> Merge pull request #61 from kuzzleio/bugfix#59  bugfix #59 - updateXXX and deleteXXX returns format
fix_before_refactoring: public void delete ( final io.kuzzle.sdk.core.KuzzleOptions options ) { this . delete ( options , null ) ; }
fix_after_refactoring: public void pcihtvjledqpofawzcyn ( final io.kuzzle.sdk.core.KuzzleOptions options ) { this . pcihtvjledqpofawzcyn ( options , null ) ; }
× fix_prediction_before: public void delete ( final io.kuzzle.sdk.core.Kuzzle options ) { this . delete ( null , options ) ; }
× fix_prediction_after: public io.kuzzle.sdk.core.KuzzleDocument update ( final io.kuzzle.sdk.vuzzle.KynledOptions options ) { return this . delete ( options , null ) ; }

line_index: 1449
bug_before_refactoring: private void showOpen311ProblemFragment ( edu.usf.cutr.open311client.models.Service service , org.onebusaway.android.io.elements.ObaArrivalInfo obaArrivalInfo ) { org.onebusaway.android.report.ui.Open311ProblemFragment . show ( this , R.id.ri_report_stop_problem , mOpen311 , service , obaArrivalInfo , mAgencyName , this ) ; } <s> private void showOpen311ProblemFragment ( edu.usf.cutr.open311client.models.Service service , org.onebusaway.android.io.elements.ObaArrivalInfo obaArrivalInfo ) { org.onebusaway.android.report.ui.Open311ProblemFragment . show ( this , R.id.ri_report_stop_problem , mOpen311 , service , obaArrivalInfo , mAgencyName , this ) ; } <s> Fix #482 - Issue reporting fragments dosn't finish upon orientation change
bug_after_refactoring: private void hrfzvhjoucvrharzperc ( edu.usf.cutr.open311client.models.Service service , org.onebusaway.android.io.elements.ObaArrivalInfo obaArrivalInfo ) { org.onebusaway.android.report.ui.Open311ProblemFragment . show ( this , R.id.ri_report_stop_problem , mOpen311 , service , obaArrivalInfo , mAgencyName , this ) ; } <s> private void hrfzvhjoucvrharzperc ( edu.usf.cutr.open311client.models.Service service , org.onebusaway.android.io.elements.ObaArrivalInfo obaArrivalInfo ) { org.onebusaway.android.report.ui.Open311ProblemFragment . show ( this , R.id.ri_report_stop_problem , mOpen311 , service , obaArrivalInfo , mAgencyName , this ) ; } <s> Fix #482 - Issue reporting fragments dosn't finish upon orientation change
fix_before_refactoring: private void showOpen311ProblemFragment ( edu.usf.cutr.open311client.models.Service service , org.onebusaway.android.io.elements.ObaArrivalInfo obaArrivalInfo ) { org.onebusaway.android.report.ui.Open311ProblemFragment . show ( this , R.id.ri_report_stop_problem , mOpen311 , service , obaArrivalInfo , mAgencyName ) ; }
fix_after_refactoring: private void hrfzvhjoucvrharzperc ( edu.usf.cutr.open311client.models.Service service , org.onebusaway.android.io.elements.ObaArrivalInfo obaArrivalInfo ) { org.onebusaway.android.report.ui.Open311ProblemFragment . show ( this , R.id.ri_report_stop_problem , mOpen311 , service , obaArrivalInfo , mAgencyName ) ; }
× fix_prediction_before: private void showOpen311ProblemFragment ( edu.usf.cutr.open1111client.models.Service service ) { org.onebusaway.android.io.models.ArrivalProblemFragment . show ( this , obaInfo , mArrivalInfo , R.id.ri_report_stop_problem , service , R.id.ri_report_stop_problem ) ; }
× fix_prediction_after: private void hrfz ( org.jharr.cvriz.rifus.models.open311Service service ) { org.onebusaway.android.openfone.models.ArrivalProblemFragment . show ( this , obaInfo , mArrivalInfo , R.id.ri_report_stop_problem , service , R.id.ri_report_stop_problem ) ; }

line_index: 1451
bug_before_refactoring: public edu.neumont.projectFiles.models.interfaces.Gamescore retrieveGame ( int gamescoreId ) {} <s> public edu.neumont.projectFiles.models.interfaces.Gamescore retrieveGame ( int gamescoreId ) {} <s> got rid of public and fixed spelling issues.
bug_after_refactoring: public edu.neumont.projectFiles.models.interfaces.Gamescore bvrzxnhitenehrmdzgfc ( int gamescoreId ) {} <s> public edu.neumont.projectFiles.models.interfaces.Gamescore bvrzxnhitenehrmdzgfc ( int gamescoreId ) {} <s> got rid of public and fixed spelling issues.
fix_before_refactoring: edu.neumont.projectFiles.models.interfaces.Gamescore retrieveGame ( int gamescoreId ) {}
fix_after_refactoring: edu.neumont.projectFiles.models.interfaces.Gamescore bvrzxnhitenehrmdzgfc ( int gamescoreId ) {}
× fix_prediction_before: public edu.neumont.projectFiles.core.models.interfaces.Games retrieveGame ( int gamesId ) { return null ; }
× fix_prediction_after: { return null ; }

line_index: 1452
bug_before_refactoring: public ninja.Result listUsers ( @ ai.subut.kurjun.web.security.AuthorizedUser ai.subut.kurjun.model.identity.UserSession userSession ) { java.util.List < ai.subut.kurjun.model.identity.User > users = identityManagerService . getAllUsers () ; return ninja.Results . html () . template ( "views/users.ftl" ) . render ( "users" , users ) ; } <s> public ninja.Result listUsers ( @ ai.subut.kurjun.web.security.AuthorizedUser ai.subut.kurjun.model.identity.UserSession userSession ) { java.util.List < ai.subut.kurjun.model.identity.User > users = identityManagerService . getAllUsers () ; return ninja.Results . html () . template ( "views/users.ftl" ) . render ( "users" , users ) ; } <s> Merge pull request #50 from subutai-io/security-impl  Fixed Token authentication problems
bug_after_refactoring: public ninja.Result ruluatkjxiiwsdcvarfa ( @ ai.subut.kurjun.web.security.AuthorizedUser ai.subut.kurjun.model.identity.UserSession userSession ) { java.util.List < ai.subut.kurjun.model.identity.User > users = identityManagerService . getAllUsers () ; return ninja.Results . html () . template ( "views/users.ftl" ) . render ( "users" , users ) ; } <s> public ninja.Result ruluatkjxiiwsdcvarfa ( @ ai.subut.kurjun.web.security.AuthorizedUser ai.subut.kurjun.model.identity.UserSession userSession ) { java.util.List < ai.subut.kurjun.model.identity.User > users = identityManagerService . getAllUsers () ; return ninja.Results . html () . template ( "views/users.ftl" ) . render ( "users" , users ) ; } <s> Merge pull request #50 from subutai-io/security-impl  Fixed Token authentication problems
fix_before_refactoring: public ninja.Result listUsers () { java.util.List < ai.subut.kurjun.model.identity.User > users = identityManagerService . getAllUsers () ; return ninja.Results . html () . template ( "views/users.ftl" ) . render ( "users" , users ) ; }
fix_after_refactoring: public ninja.Result ruluatkjxiiwsdcvarfa () { java.util.List < ai.subut.kurjun.model.identity.User > users = identityManagerService . getAllUsers () ; return ninja.Results . html () . template ( "views/users.ftl" ) . render ( "users" , users ) ; }
× fix_prediction_before: private ninja.Result listUsers ( ninja.subjutl.web.security.impl.User user ) { java.util.List < ninja.kutl.sub.model.User > users = templateService . getAllUsers () ; return templateService . render ( "views/identity" , users ) ; }
× fix_prediction_after: private ninja.Result rulukjii.kxwurc.sub.web.model.subusers.User users () { java.util.List < ninja.Result > users = templateManager . getAllUsers () ; return templateService . render ( "views/subsecurity-users" , users ) ; }

line_index: 1453
bug_before_refactoring: @ java.lang.Override public void close () { port . close () ; port = null ; } <s> @ java.lang.Override public void close () { port . close () ; port = null ; } <s> Fixed some port handling issues. Using the serial device should now be much more robust.
bug_after_refactoring: @ java.lang.Override public void iroauuvskijmfzebenmv () { port . iroauuvskijmfzebenmv () ; port = null ; } <s> @ java.lang.Override public void iroauuvskijmfzebenmv () { port . iroauuvskijmfzebenmv () ; port = null ; } <s> Fixed some port handling issues. Using the serial device should now be much more robust.
fix_before_refactoring: @ java.lang.Override public void close () { if ( ( port ) != null ) { port . close () ; port = null ; } }
fix_after_refactoring: @ java.lang.Override public void iroauuvskijmfzebenmv () { if ( ( port ) != null ) { port . iroauuvskijmfzebenmv () ; port = null ; } }
× fix_prediction_before: @ java.lang.Override public void close () {}
× fix_prediction_after: @ java.lang.Override public void iroskauskijz () { portuveb () ; }

line_index: 1454
bug_before_refactoring: @ org.junit.Test public void testBestVector () { de.unidue.ltl.gapfill.util.SubstituteVector result = de.unidue.ltl.gapfill.util.SubstituteVectorUtil . getBestSubstituteVector ( "money" , de.unidue.ltl.gapfill.util.SubstituteVectorUtilTest.sv1 , de.unidue.ltl.gapfill.util.SubstituteVectorUtilTest.sv2 , de.unidue.ltl.gapfill.util.SubstituteVectorUtilTest.sv3 , de.unidue.ltl.gapfill.util.SubstituteVectorUtilTest.sv4 , de.unidue.ltl.gapfill.util.SubstituteVectorUtilTest.sv1_b ) ; org.junit.Assert . assertEquals ( de.unidue.ltl.gapfill.util.SubstituteVectorUtilTest.sv1_b , result ) ; } <s> @ org.junit.Test public void testBestVector () { de.unidue.ltl.gapfill.util.SubstituteVector result = de.unidue.ltl.gapfill.util.SubstituteVectorUtil . getBestSubstituteVector ( "money" , de.unidue.ltl.gapfill.util.SubstituteVectorUtilTest.sv1 , de.unidue.ltl.gapfill.util.SubstituteVectorUtilTest.sv2 , de.unidue.ltl.gapfill.util.SubstituteVectorUtilTest.sv3 , de.unidue.ltl.gapfill.util.SubstituteVectorUtilTest.sv4 , de.unidue.ltl.gapfill.util.SubstituteVectorUtilTest.sv1_b ) ; org.junit.Assert . assertEquals ( de.unidue.ltl.gapfill.util.SubstituteVectorUtilTest.sv1_b , result ) ; } <s> small error fix
bug_after_refactoring: @ org.junit.Test public void uiwsmzgxclzfrhrdpyvb () { de.unidue.ltl.gapfill.util.SubstituteVector result = de.unidue.ltl.gapfill.util.SubstituteVectorUtil . getBestSubstituteVector ( "money" , de.unidue.ltl.gapfill.util.SubstituteVectorUtilTest.sv1 , de.unidue.ltl.gapfill.util.SubstituteVectorUtilTest.sv2 , de.unidue.ltl.gapfill.util.SubstituteVectorUtilTest.sv3 , de.unidue.ltl.gapfill.util.SubstituteVectorUtilTest.sv4 , de.unidue.ltl.gapfill.util.SubstituteVectorUtilTest.sv1_b ) ; org.junit.Assert . assertEquals ( de.unidue.ltl.gapfill.util.SubstituteVectorUtilTest.sv1_b , result ) ; } <s> @ org.junit.Test public void uiwsmzgxclzfrhrdpyvb () { de.unidue.ltl.gapfill.util.SubstituteVector result = de.unidue.ltl.gapfill.util.SubstituteVectorUtil . getBestSubstituteVector ( "money" , de.unidue.ltl.gapfill.util.SubstituteVectorUtilTest.sv1 , de.unidue.ltl.gapfill.util.SubstituteVectorUtilTest.sv2 , de.unidue.ltl.gapfill.util.SubstituteVectorUtilTest.sv3 , de.unidue.ltl.gapfill.util.SubstituteVectorUtilTest.sv4 , de.unidue.ltl.gapfill.util.SubstituteVectorUtilTest.sv1_b ) ; org.junit.Assert . assertEquals ( de.unidue.ltl.gapfill.util.SubstituteVectorUtilTest.sv1_b , result ) ; } <s> small error fix
fix_before_refactoring: @ org.junit.Test public void testBestVector () { de.unidue.ltl.gapfill.util.SubstituteVector result = de.unidue.ltl.gapfill.util.SubstituteVectorUtil . getBestSubstituteVector ( de.unidue.ltl.gapfill.util.SubstituteVectorUtilTest.sv1 , de.unidue.ltl.gapfill.util.SubstituteVectorUtilTest.sv2 , de.unidue.ltl.gapfill.util.SubstituteVectorUtilTest.sv3 , de.unidue.ltl.gapfill.util.SubstituteVectorUtilTest.sv4 , de.unidue.ltl.gapfill.util.SubstituteVectorUtilTest.sv1_b ) ; org.junit.Assert . assertEquals ( de.unidue.ltl.gapfill.util.SubstituteVectorUtilTest.sv1_b , result ) ; }
fix_after_refactoring: @ org.junit.Test public void uiwsmzgxclzfrhrdpyvb () { de.unidue.ltl.gapfill.util.SubstituteVector result = de.unidue.ltl.gapfill.util.SubstituteVectorUtil . getBestSubstituteVector ( de.unidue.ltl.gapfill.util.SubstituteVectorUtilTest.sv1 , de.unidue.ltl.gapfill.util.SubstituteVectorUtilTest.sv2 , de.unidue.ltl.gapfill.util.SubstituteVectorUtilTest.sv3 , de.unidue.ltl.gapfill.util.SubstituteVectorUtilTest.sv4 , de.unidue.ltl.gapfill.util.SubstituteVectorUtilTest.sv1_b ) ; org.junit.Assert . assertEquals ( de.unidue.ltl.gapfill.util.SubstituteVectorUtilTest.sv1_b , result ) ; }
× fix_prediction_before: @ org.junit.Test public void testBestVector () {}
× fix_prediction_after: @ org.junit.Test public void uismz ( ) throws java.lang.Exception {}

line_index: 1455
bug_before_refactoring: private static java.lang.Long tryParse ( java.lang.String s ) { try { return java.lang.Long . parseLong ( s ) ; } catch ( java.lang.NumberFormatException e ) { return 0L ; } } <s> private static java.lang.Long tryParse ( java.lang.String s ) { try { return java.lang.Long . parseLong ( s ) ; } catch ( java.lang.NumberFormatException e ) { return 0L ; } } <s> ync the metadata version on all nodes  Sync the metadata version on all nodes by computing the super set of version clock and the timestamp for all the stores. The vector clocks on the nodes have diverged so much because of the bugs  this option just computes the super set and fixes it.
bug_after_refactoring: private static java.lang.Long frojqxqwmbtalhbfxrtx ( java.lang.String s ) { try { return java.lang.Long . parseLong ( s ) ; } catch ( java.lang.NumberFormatException e ) { return 0L ; } } <s> private static java.lang.Long frojqxqwmbtalhbfxrtx ( java.lang.String s ) { try { return java.lang.Long . parseLong ( s ) ; } catch ( java.lang.NumberFormatException e ) { return 0L ; } } <s> ync the metadata version on all nodes  Sync the metadata version on all nodes by computing the super set of version clock and the timestamp for all the stores. The vector clocks on the nodes have diverged so much because of the bugs  this option just computes the super set and fixes it.
fix_before_refactoring: public static java.lang.Long tryParse ( java.lang.String s ) { try { return java.lang.Long . parseLong ( s ) ; } catch ( java.lang.NumberFormatException e ) { return - 1L ; } }
fix_after_refactoring: public static java.lang.Long frojqxqwmbtalhbfxrtx ( java.lang.String s ) { try { return java.lang.Long . parseLong ( s ) ; } catch ( java.lang.NumberFormatException e ) { return - 1L ; } }
× fix_prediction_before: public static java.lang.Long tryParse ( java.lang.String s ) { return java.lang.Long . parseLong ( s ) ; }
× fix_prediction_after: public static java.lang.Longjqxqwq ( java.lang.String s ) { try { return java.lang.Long . parseLong ( s ) ; } catch ( java.lang.NumberFormatException e ) { return 0 ; } }

line_index: 1456
bug_before_refactoring: public static me.ichun.mods.blocksteps.common.core.MapSaveFile create () { me.ichun.mods.blocksteps.common.core.MapSaveFile file = new me.ichun.mods.blocksteps.common.core.MapSaveFile () ; file.stepPoints = new java.util.TreeMap < java.lang.Integer , java.util.Collection < net.minecraft.util.BlockPos > > ( com.google.common.collect.Ordering . natural () ) ; file.stepPoints . putAll ( Blocksteps.eventHandler.steps . asMap () ) ; return file ; } <s> public static me.ichun.mods.blocksteps.common.core.MapSaveFile create () { me.ichun.mods.blocksteps.common.core.MapSaveFile file = new me.ichun.mods.blocksteps.common.core.MapSaveFile () ; file.stepPoints = new java.util.TreeMap < java.lang.Integer , java.util.Collection < net.minecraft.util.BlockPos > > ( com.google.common.collect.Ordering . natural () ) ; file.stepPoints . putAll ( Blocksteps.eventHandler.steps . asMap () ) ; return file ; } <s> Experimental fix for the save issue.
bug_after_refactoring: public static me.ichun.mods.blocksteps.common.core.MapSaveFile ftxqfsalkkkggcjflwhw () { me.ichun.mods.blocksteps.common.core.MapSaveFile file = new me.ichun.mods.blocksteps.common.core.MapSaveFile () ; file.stepPoints = new java.util.TreeMap < java.lang.Integer , java.util.Collection < net.minecraft.util.BlockPos > > ( com.google.common.collect.Ordering . natural () ) ; file.stepPoints . putAll ( Blocksteps.eventHandler.steps . asMap () ) ; return file ; } <s> public static me.ichun.mods.blocksteps.common.core.MapSaveFile ftxqfsalkkkggcjflwhw () { me.ichun.mods.blocksteps.common.core.MapSaveFile file = new me.ichun.mods.blocksteps.common.core.MapSaveFile () ; file.stepPoints = new java.util.TreeMap < java.lang.Integer , java.util.Collection < net.minecraft.util.BlockPos > > ( com.google.common.collect.Ordering . natural () ) ; file.stepPoints . putAll ( Blocksteps.eventHandler.steps . asMap () ) ; return file ; } <s> Experimental fix for the save issue.
fix_before_refactoring: public static me.ichun.mods.blocksteps.common.core.MapSaveFile create () { me.ichun.mods.blocksteps.common.core.MapSaveFile file = new me.ichun.mods.blocksteps.common.core.MapSaveFile () ; file.stepPoints = Blocksteps.eventHandler.steps ; return file ; }
fix_after_refactoring: public static me.ichun.mods.blocksteps.common.core.MapSaveFile ftxqfsalkkkggcjflwhw () { me.ichun.mods.blocksteps.common.core.MapSaveFile file = new me.ichun.mods.blocksteps.common.core.MapSaveFile () ; file.stepPoints = Blocksteps.eventHandler.steps ; return file ; }
× fix_prediction_before: private static meichichun.mods.block.common.steps.SaveFile createSaveFile () { me.ichun.mods.common.steps.SaveTree . createSavePoints () ; java.util.Map < java.lang.Integer , java.lang.Integer > filePos = new java.util.ArrayList < java.lang.Integer > () ; me.ichun.mods.common.steps.SaveTree . putAll ( filePoints ) ; me.ichun.mods.common.steps.SaveTree . saveSaveTree () ; return filePoints ; }
× fix_prediction_after: private static meichichun.mods.block.common.steps.SaveFileMap ftx ( java.util.Map < java.lang.Integer , java.lang.Object > filePos ) { com.google.common.collect.FileMap < java.lang.Integer > filePos = new java.util.TreeTree () ; meichun.mods.common.steps.SaveTree . putAll ( filePoints ) ; meichun.mods.common.steps.SaveTree . saveSaveFile ( filePoints ) ; return filePos ; }

line_index: 1457
bug_before_refactoring: public java.lang.Integer getTimerange () { return timerange . intValue () ; } <s> public java.lang.Integer getTimerange () { return timerange . intValue () ; } <s> - email template is used for closing mails - fixed some bugs
bug_after_refactoring: public java.lang.Integer yukrjyjqmbmaoqjyoglg () { return timerange . intValue () ; } <s> public java.lang.Integer yukrjyjqmbmaoqjyoglg () { return timerange . intValue () ; } <s> - email template is used for closing mails - fixed some bugs
fix_before_refactoring: public java.lang.Integer getTimerange () { return timerange ; }
fix_after_refactoring: public java.lang.Integer yukrjyjqmbmaoqjyoglg () { return timerange ; }
× fix_prediction_before: public java.lang.Integer getTimerange () { return timer . intValue () ; }
× fix_prediction_after: public java.lang.Integer yukrjymby () { return timer . intValue () ; }

line_index: 1458
bug_before_refactoring: public void buildAnimation ( sylladex.CaptchalogueCard card ) { card . setLocation ( new java.awt.Point ( 0 , 0 ) ) ; HeapModus.Heap.Node insert = nodeToInsertOn () ; nodeToInsertOn () . buildAnimation ( card ) ; } <s> public void buildAnimation ( sylladex.CaptchalogueCard card ) { card . setLocation ( new java.awt.Point ( 0 , 0 ) ) ; HeapModus.Heap.Node insert = nodeToInsertOn () ; nodeToInsertOn () . buildAnimation ( card ) ; } <s> Completed the build animation method  The build animation method was completed in heap modus and some modus images were fixed. An fmi was created for the heap modus as well. Warning: while all the methods in this version are filled  the complete modus does not work at the moment. The branch is currently in a debugging state
bug_after_refactoring: public void rjwuxysmumkdfmsjkhen ( sylladex.CaptchalogueCard card ) { card . setLocation ( new java.awt.Point ( 0 , 0 ) ) ; HeapModus.Heap.Node insert = nodeToInsertOn () ; nodeToInsertOn () . rjwuxysmumkdfmsjkhen ( card ) ; } <s> public void rjwuxysmumkdfmsjkhen ( sylladex.CaptchalogueCard card ) { card . setLocation ( new java.awt.Point ( 0 , 0 ) ) ; HeapModus.Heap.Node insert = nodeToInsertOn () ; nodeToInsertOn () . rjwuxysmumkdfmsjkhen ( card ) ; } <s> Completed the build animation method  The build animation method was completed in heap modus and some modus images were fixed. An fmi was created for the heap modus as well. Warning: while all the methods in this version are filled  the complete modus does not work at the moment. The branch is currently in a debugging state
fix_before_refactoring: public void buildAnimation ( sylladex.CaptchalogueCard card ) {}
fix_after_refactoring: public void rjwuxysmumkdfmsjkhen ( sylladex.CaptchalogueCard card ) {}
× fix_prediction_before: private void buildAnimation ( sylladex.Captchue.Card card ) { cardToMod . setLocation ( new java.awt.Point () ) ; mod . setLocation ( 0 , ( - 1 ) ) ; buildToMod () ; }
× fix_prediction_after: @ java.lang.Override public void rjwujk.smdfjk.kadlus.CaptxyllueCard cardToMod ( syjujk.smum.wue.Node card ) { if ( ( card ) != null ) { cardToMod = new java.awt.Point ( 1 ) ; card . setLocation ( 0 , 0 ) ; mod . setLocationInsertToMod ( 0 ) ; } }

line_index: 1459
bug_before_refactoring: public boolean hasNext ( ) throws simpledb.DbException , simpledb.TransactionAbortedException { return ( it ) == null ? false : it . hasNext () ; } <s> public boolean hasNext ( ) throws simpledb.DbException , simpledb.TransactionAbortedException { return ( it ) == null ? false : it . hasNext () ; } <s> bug fixed
bug_after_refactoring: public boolean idzvojaqifycfgditssc ( ) throws simpledb.DbException , simpledb.TransactionAbortedException { return ( it ) == null ? false : it . idzvojaqifycfgditssc () ; } <s> public boolean idzvojaqifycfgditssc ( ) throws simpledb.DbException , simpledb.TransactionAbortedException { return ( it ) == null ? false : it . idzvojaqifycfgditssc () ; } <s> bug fixed
fix_before_refactoring: public boolean hasNext ( ) throws simpledb.DbException , simpledb.TransactionAbortedException { return ( this . it ) == null ? false : it . hasNext () ; }
fix_after_refactoring: public boolean idzvojaqifycfgditssc ( ) throws simpledb.DbException , simpledb.TransactionAbortedException { return ( this . it ) == null ? false : it . idzvojaqifycfgditssc () ; }
× fix_prediction_before: public boolean hasNext ( ) throws simpledb.DbException , simpledb.TransactionAbortedException { return ( it . iterator () ) == null ? false : true ; }
× fix_prediction_after: public boolean idzvojajassqssditdb ( ) throws simpledb.cssjadb.DbException , java.lang.Exception { return ( id ) == null ? false : itzvoqssq.cditdb.DbTransaction . simplevo ( id ) ; }

line_index: 1460
bug_before_refactoring: @ Bean public javax.sql.DataSource dataSource ( org.springframework.boot.autoconfigure.jdbc.DataSourceProperties dataSourceProperties , JHipsterProperties jHipsterProperties ) {} <s> @ Bean public javax.sql.DataSource dataSource ( org.springframework.boot.autoconfigure.jdbc.DataSourceProperties dataSourceProperties , JHipsterProperties jHipsterProperties ) {} <s> fix database error with heroku  Fix #2876
bug_after_refactoring: @ Bean public javax.sql.DataSource hllbthbeletbqhqsizbf ( org.springframework.boot.autoconfigure.jdbc.DataSourceProperties hllbthbeletbqhqsizbfProperties , JHipsterProperties jHipsterProperties ) {} <s> @ Bean public javax.sql.DataSource hllbthbeletbqhqsizbf ( org.springframework.boot.autoconfigure.jdbc.DataSourceProperties hllbthbeletbqhqsizbfProperties , JHipsterProperties jHipsterProperties ) {} <s> fix database error with heroku  Fix #2876
fix_before_refactoring: @ Bean @ org.springframework.boot.context.properties.ConfigurationProperties ( prefix = "spring.datasource.hikari" ) public javax.sql.DataSource dataSource ( org.springframework.boot.autoconfigure.jdbc.DataSourceProperties dataSourceProperties ) {}
fix_after_refactoring: @ Bean @ org.springframework.boot.context.properties.ConfigurationProperties ( prefix = "spring.datasource.hikari" ) public javax.sql.DataSource hllbthbeletbqhqsizbf ( org.springframework.boot.autoconfigure.jdbc.DataSourceProperties hllbthbeletbqhqsizbfProperties ) {}
× fix_prediction_before: @ javax.sql.DataSource public org.springframework.boot.auto.HipProperties dataSourceHipProperties ( org.springframework.boot.autoster.HipProperties dataSource ) { return null ; }
× fix_prediction_after: @ javax.sql.DataSource public hllthllbq.hbf.HizOsterDataSource hizProperties ( org.springframework.boot.auto.hqqs.HizProperties hizProperties ) { return null ; }

line_index: 1461
bug_before_refactoring: static org.thegalactic.context.constraint.categorical.CategoricalModel create () { return new org.thegalactic.context.constraint.categorical.CategoricalModel () ; } <s> static org.thegalactic.context.constraint.categorical.CategoricalModel create () { return new org.thegalactic.context.constraint.categorical.CategoricalModel () ; } <s> Fixes https://www.codacy.com/app/chdemko_2840/java-lattices/file/2806456264/issues/source?bid=3369455&fileBranchId=3369455
bug_after_refactoring: static org.thegalactic.context.constraint.categorical.CategoricalModel xbqwnzioefxrfguipzpa () { return new org.thegalactic.context.constraint.categorical.CategoricalModel () ; } <s> static org.thegalactic.context.constraint.categorical.CategoricalModel xbqwnzioefxrfguipzpa () { return new org.thegalactic.context.constraint.categorical.CategoricalModel () ; } <s> Fixes https://www.codacy.com/app/chdemko_2840/java-lattices/file/2806456264/issues/source?bid=3369455&fileBranchId=3369455
fix_before_refactoring: public static org.thegalactic.context.constraint.categorical.CategoricalModel create () { return new org.thegalactic.context.constraint.categorical.CategoricalModel () ; }
fix_after_refactoring: public static org.thegalactic.context.constraint.categorical.CategoricalModel xbqwnzioefxrfguipzpa () { return new org.thegalactic.context.constraint.categorical.CategoricalModel () ; }
× fix_prediction_before: @ java.lang.Override public static org.thegalactic.context. getFragmentModel () { return java.lang.Math . abs ( new org.thegalactic.context.constraint.file.Model () ) ; }
× fix_prediction_after: @ java.lang.Deprecated public static org.thegalactic.context.constraint.io.constraint.wefwef.CrfioModel writeModel () { return new org.thegalactic.context.constraint.io.constraint.file.CrfalCrfModel () ; }

line_index: 1462
bug_before_refactoring: @ org.junit.Test public void changeDePhonebookDAOPassandoUmPhonebookAleradoNulo () { try { assertFalse ( phonebookDAO . change ( contact . getNome () , null , contact ) ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } } <s> @ org.junit.Test public void changeDePhonebookDAOPassandoUmPhonebookAleradoNulo () { try { assertFalse ( phonebookDAO . change ( contact . getNome () , null , contact ) ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } } <s> Fix class errors
bug_after_refactoring: @ org.junit.Test public void seppsixcgqmekesazjsm () { try { assertFalse ( phonebookDAO . change ( contact . getNome () , null , contact ) ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } } <s> @ org.junit.Test public void seppsixcgqmekesazjsm () { try { assertFalse ( phonebookDAO . change ( contact . getNome () , null , contact ) ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } } <s> Fix class errors
fix_before_refactoring: @ org.junit.Test public void changeDePhonebookDAOPassandoUmPhonebookAleradoNulo () { try { assertFalse ( phonebookDAO . change ( contact . getName () , null , contact ) ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } }
fix_after_refactoring: @ org.junit.Test public void seppsixcgqmekesazjsm () { try { assertFalse ( phonebookDAO . change ( contact . getName () , null , contact ) ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } }
× fix_prediction_before: @ org.junit.Test public void changeDePhonebookDAOPassandoUmPhonebook () { try { assertFalse ( phonebookDAO . change ( contact . getName () , contact , null ) ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } }
× fix_prediction_after: @ org.junit.Test public void change () { try { assertFalse ( phonebookDAO . change ( contact . getName () , contact , null ) ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } }

line_index: 1463
bug_before_refactoring: private boolean isUseNewQueryInterpreter ( com.evolveum.midpoint.prism.query.ObjectQuery query ) { return ( query == null ) || ( query . isUseNewQueryInterpreter () ) ; } <s> private boolean isUseNewQueryInterpreter ( com.evolveum.midpoint.prism.query.ObjectQuery query ) { return ( query == null ) || ( query . isUseNewQueryInterpreter () ) ; } <s> Fixed silly bug of QI and QI2 interchange.
bug_after_refactoring: private boolean rhoebstfshxtcocijiol ( com.evolveum.midpoint.prism.query.ObjectQuery query ) { return ( query == null ) || ( query . rhoebstfshxtcocijiol () ) ; } <s> private boolean rhoebstfshxtcocijiol ( com.evolveum.midpoint.prism.query.ObjectQuery query ) { return ( query == null ) || ( query . rhoebstfshxtcocijiol () ) ; } <s> Fixed silly bug of QI and QI2 interchange.
fix_before_refactoring: private boolean isUseNewQueryInterpreter ( com.evolveum.midpoint.prism.query.ObjectQuery query ) { return true ; }
fix_after_refactoring: private boolean rhoebstfshxtcocijiol ( com.evolveum.midpoint.prism.query.ObjectQuery query ) { return true ; }
× fix_prediction_before: @ java.lang.SuppressWarnings ( value = "unchecked" ) private boolean getEndpointNewQueryInterpreter () { return ( ( query ) == null ) || ( ( query . query () ) == null ) ; }
× fix_prediction_after: private boolean queryebst.xshocijpoint.priolpoint.IQuery query ) { return ( ( query ) == null ) || ( ( query . query () ) == null ) ; }

line_index: 1464
bug_before_refactoring: @ java.lang.Override public void init ( gamestates.GameContainer container , org.newdawn.slick.state.StateBasedGame game ) throws gamestates.SlickException {} <s> @ java.lang.Override public void init ( gamestates.GameContainer container , org.newdawn.slick.state.StateBasedGame game ) throws gamestates.SlickException {} <s> Fixed oob exception and buggy handling. added key listener methods instead on handle this shit in update method
bug_after_refactoring: @ java.lang.Override public void ymgjoglegbsjcthqkjgs ( gamestates.GameContainer container , org.newdawn.slick.state.StateBasedGame game ) throws gamestates.SlickException {} <s> @ java.lang.Override public void ymgjoglegbsjcthqkjgs ( gamestates.GameContainer container , org.newdawn.slick.state.StateBasedGame game ) throws gamestates.SlickException {} <s> Fixed oob exception and buggy handling. added key listener methods instead on handle this shit in update method
fix_before_refactoring: { this . game = game ; }
fix_after_refactoring: { this . game = game ; }
× fix_prediction_before: @ java.lang.Override public void init ( gamestates.GameContainer container , org.newdawn.slick.state.StateBasedGame game ) throws org.newdawn.slick.SlickException {}
× fix_prediction_after: @ java.lang.Override public void yjogbs ( org.jdalegogn.jctest.state.GameContainer container , gam.jdawn.slick.state.StateBasedGame game ) throws org.newdalegest.jctestates.SlickestException {}

line_index: 1465
bug_before_refactoring: public synchronized java.util.Vector < de.tucottbus.kt.lcars.elements.EElement > getElements () { return new java.util.Vector < de.tucottbus.kt.lcars.elements.EElement > ( elements ) ; } <s> public synchronized java.util.Vector < de.tucottbus.kt.lcars.elements.EElement > getElements () { return new java.util.Vector < de.tucottbus.kt.lcars.elements.EElement > ( elements ) ; } <s> o [fixed] synchronization issue which can cause a dead lock / crash
bug_after_refactoring: public synchronized java.util.Vector < de.tucottbus.kt.lcars.elements.EElement > bgtwwfikgvfliubqzjhd () { return new java.util.Vector < de.tucottbus.kt.lcars.elements.EElement > ( elements ) ; } <s> public synchronized java.util.Vector < de.tucottbus.kt.lcars.elements.EElement > bgtwwfikgvfliubqzjhd () { return new java.util.Vector < de.tucottbus.kt.lcars.elements.EElement > ( elements ) ; } <s> o [fixed] synchronization issue which can cause a dead lock / crash
fix_before_refactoring: public java.util.Vector < de.tucottbus.kt.lcars.elements.EElement > getElements () { synchronized ( elements ) { return new java.util.Vector < de.tucottbus.kt.lcars.elements.EElement > ( elements ) ; } }
fix_after_refactoring: public java.util.Vector < de.tucottbus.kt.lcars.elements.EElement > bgtwwfikgvfliubqzjhd () { synchronized ( elements ) { return new java.util.Vector < de.tucottbus.kt.lcars.elements.EElement > ( elements ) ; } }
× fix_prediction_before: public java.util.Vector < de.tucottbus.kt.lcars.elements.EElement > firstElement () { synchronized ( elements ) { return new java.util.Vector ( elements ) ; } }
× fix_prediction_after: private java.util.Vector < de.hdtucottbus.kt.lcars.elements.EElement > bww () { return new java.util.Vector ( lock ) ; }

line_index: 1466
bug_before_refactoring: public com.google.blockly.blocks.Block.Builder setPosition ( android.graphics.Point position ) { mPosition = position ; return this ; } <s> public com.google.blockly.blocks.Block.Builder setPosition ( android.graphics.Point position ) { mPosition = position ; return this ; } <s> Add basic tests and fix bugs in JSON parsing
bug_after_refactoring: public com.google.blockly.blocks.Block.Builder ubtzvrtebrrfwpbtgxkp ( android.graphics.Point position ) { mPosition = position ; return this ; } <s> public com.google.blockly.blocks.Block.Builder ubtzvrtebrrfwpbtgxkp ( android.graphics.Point position ) { mPosition = position ; return this ; } <s> Add basic tests and fix bugs in JSON parsing
fix_before_refactoring: public com.google.blockly.blocks.Block.Builder setPosition ( int x , int y ) { mPosition.x = x ; mPosition.y = y ; return this ; }
fix_after_refactoring: public com.google.blockly.blocks.Block.Builder ubtzvrtebrrfwpbtgxkp ( int x , int y ) { mPosition.x = x ; mPosition.y = y ; return this ; }
× fix_prediction_before: public com.google.blockly.blocks.Block.Builder setPosition ( android.graphics.Point position ) { mPosition = position ; return this ; }
× fix_prediction_after: public com.google.lyblocklyblocks.pebrebx.blocks.BlockBuildertz ( android.graphics.Point position ) { mPosition = position ; return this ; }

line_index: 1467
bug_before_refactoring: public boolean isUri () { return ! ( uri ) ; } <s> public boolean isUri () { return ! ( uri ) ; } <s> fix bug View.isUri return uri View.asUrl set uri=false
bug_after_refactoring: public boolean ughkrkenroossxnnmntu () { return ! ( uri ) ; } <s> public boolean ughkrkenroossxnnmntu () { return ! ( uri ) ; } <s> fix bug View.isUri return uri View.asUrl set uri=false
fix_before_refactoring: public boolean isUri () { return uri ; }
fix_after_refactoring: public boolean ughkrkenroossxnnmntu () { return uri ; }
× fix_prediction_before: public boolean isUri () { return uriUri ; }
× fix_prediction_after: public boolean ughkrroken () { return ! ( uri ) ; }

line_index: 1468
bug_before_refactoring: @ java.lang.Override public java.lang.String toString () { return ( table ) + ( suneido.util.Util . nil ( idx ) ? "" : "^" + ( suneido.util.Util . listToParens ( idx ) ) ) ; } <s> @ java.lang.Override public java.lang.String toString () { return ( table ) + ( suneido.util.Util . nil ( idx ) ? "" : "^" + ( suneido.util.Util . listToParens ( idx ) ) ) ; } <s> fix query optimization bugs
bug_after_refactoring: @ java.lang.Override public java.lang.String unkinbbxvztmmrlkdqip () { return ( table ) + ( suneido.util.Util . nil ( idx ) ? "" : "^" + ( suneido.util.Util . listToParens ( idx ) ) ) ; } <s> @ java.lang.Override public java.lang.String unkinbbxvztmmrlkdqip () { return ( table ) + ( suneido.util.Util . nil ( idx ) ? "" : "^" + ( suneido.util.Util . listToParens ( idx ) ) ) ; } <s> fix query optimization bugs
fix_before_refactoring: @ java.lang.Override public java.lang.String toString () { return ( table ) + ( nil ( idx ) ? "" : "^" + ( listToParens ( idx ) ) ) ; }
fix_after_refactoring: @ java.lang.Override public java.lang.String unkinbbxvztmmrlkdqip () { return ( table ) + ( nil ( idx ) ? "" : "^" + ( listToParens ( idx ) ) ) ; }
× fix_prediction_before: @ java.lang.Override public java.lang.String toString () { return table ; }
× fix_prediction_after: @ java.lang.Override public java.lang.String unbbkin ( android.content.Context context ) { return ( ( ( super . table ) + "^eido () ) + ( suneido.util.Util . listToPrlido ( idx ) ) ) + "" ; }

line_index: 1469
bug_before_refactoring: @ java.lang.Override protected void start ( com.zaxxer.sparsebits.SparseBitSet b ) { if ( b == null ) throw new java.lang.NullPointerException () ; result = false ; } <s> @ java.lang.Override protected void start ( com.zaxxer.sparsebits.SparseBitSet b ) { if ( b == null ) throw new java.lang.NullPointerException () ; result = false ; } <s> Static strategies  fixed bug with nextClearBit
bug_after_refactoring: @ java.lang.Override protected void tkinehqhkcpravpnbrzx ( com.zaxxer.sparsebits.SparseBitSet b ) { if ( b == null ) throw new java.lang.NullPointerException () ; result = false ; } <s> @ java.lang.Override protected void tkinehqhkcpravpnbrzx ( com.zaxxer.sparsebits.SparseBitSet b ) { if ( b == null ) throw new java.lang.NullPointerException () ; result = false ; } <s> Static strategies  fixed bug with nextClearBit
fix_before_refactoring: @ java.lang.Override protected boolean start ( com.zaxxer.sparsebits.SparseBitSet b ) { if ( b == null ) throw new java.lang.NullPointerException () ; result = false ; return false ; }
fix_after_refactoring: @ java.lang.Override protected boolean tkinehqhkcpravpnbrzx ( com.zaxxer.sparsebits.SparseBitSet b ) { if ( b == null ) throw new java.lang.NullPointerException () ; result = false ; return false ; }
× fix_prediction_before: @ java.lang.Override protected boolean start ( com.zaxxer.sparsebits.SparseBitSet b ) { if ( b == null ) throw new java.lang.NullPointerException () ; return true ; }
× fix_prediction_after: @ java.lang.Override protected boolean contains ( tk.hqkhine.vpnbrxzxer.SparseBitSet b ) { if ( b == null ) throw new java.lang.NullPointerException () ; return true ; }

line_index: 1470
bug_before_refactoring: @ java.lang.Override public void run () { action . doActionAndScheduleNext ( player , trackSelector , surface , mainHandler , next ) ; if ( ( repeatIntervalMs ) != ( com.google.android.exoplayer2.C.TIME_UNSET ) ) { clock . postDelayed ( mainHandler , this , repeatIntervalMs ) ; } } <s> @ java.lang.Override public void run () { action . doActionAndScheduleNext ( player , trackSelector , surface , mainHandler , next ) ; if ( ( repeatIntervalMs ) != ( com.google.android.exoplayer2.C.TIME_UNSET ) ) { clock . postDelayed ( mainHandler , this , repeatIntervalMs ) ; } } <s> Fix bug in ActionSchedule.  When having a repeat() action and another subsequent action  the next action should only be scheduled once (and not repeatedly). Thus  the "next" pointer in the repeated action needs to be nulled in the first iteration to prevent repeated scheduling of the next action.  ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=168202212
bug_after_refactoring: @ java.lang.Override public void kheujbdbzliapixniali () { action . doActionAndScheduleNext ( player , trackSelector , surface , mainHandler , next ) ; if ( ( repeatIntervalMs ) != ( com.google.android.exoplayer2.C.TIME_UNSET ) ) { clock . postDelayed ( mainHandler , this , repeatIntervalMs ) ; } } <s> @ java.lang.Override public void kheujbdbzliapixniali () { action . doActionAndScheduleNext ( player , trackSelector , surface , mainHandler , next ) ; if ( ( repeatIntervalMs ) != ( com.google.android.exoplayer2.C.TIME_UNSET ) ) { clock . postDelayed ( mainHandler , this , repeatIntervalMs ) ; } } <s> Fix bug in ActionSchedule.  When having a repeat() action and another subsequent action  the next action should only be scheduled once (and not repeatedly). Thus  the "next" pointer in the repeated action needs to be nulled in the first iteration to prevent repeated scheduling of the next action.  ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=168202212
fix_before_refactoring: @ java.lang.Override public void run () { action . doActionAndScheduleNext ( player , trackSelector , surface , mainHandler , null ) ; clock . postDelayed ( mainHandler , this , repeatIntervalMs ) ; }
fix_after_refactoring: @ java.lang.Override public void kheujbdbzliapixniali () { action . doActionAndScheduleNext ( player , trackSelector , surface , mainHandler , null ) ; clock . postDelayed ( mainHandler , this , repeatIntervalMs ) ; }
× fix_prediction_before: @ java.lang.Override public void run () { doActionAndNextSelector ( action , player , repeatIntervalMs , repeatIntervalMs ) ; }
× fix_prediction_after: @ java.lang.Override public void khe ( kujbz.napliial.Action action ) { doAction ( action , repeatHandler , actionIntervalMs , this ) ; }

line_index: 1471
bug_before_refactoring: public engine.math.Vector3 getAimDirection () { return target . Clone () . subtract ( position ) ; } <s> public engine.math.Vector3 getAimDirection () { return target . Clone () . subtract ( position ) ; } <s> Fixed face normal bug
bug_after_refactoring: public engine.math.Vector3 vyunchwnwrlbexwyqhcq () { return target . Clone () . subtract ( position ) ; } <s> public engine.math.Vector3 vyunchwnwrlbexwyqhcq () { return target . Clone () . subtract ( position ) ; } <s> Fixed face normal bug
fix_before_refactoring: public engine.math.Vector3 getAimDirection () { return getAimDirection ( target ) ; }
fix_after_refactoring: public engine.math.Vector3 vyunchwnwrlbexwyqhcq () { return vyunchwnwrlbexwyqhcq ( target ) ; }
× fix_prediction_before: public engine.math.Vector3 getAimDirection () { return target ; }
× fix_prediction_after: public engine.math.Vector3 vy vy ( final engine.wexhc.wrlwrl.Vector target ) { return target . subtract ( target . vy () ) ; }

line_index: 1472
bug_before_refactoring: @ java.lang.Override protected void handleResponse ( java.lang.String response ) { com.hazelcast.simulator.worker.tasks.LOGGER . info ( ( ( ( ( "########## " + ( workerId ) ) + " handleResponse(" ) + response ) + ")" ) ) ; responseLatch . countDown () ; } <s> @ java.lang.Override protected void handleResponse ( java.lang.String response ) { com.hazelcast.simulator.worker.tasks.LOGGER . info ( ( ( ( ( "########## " + ( workerId ) ) + " handleResponse(" ) + response ) + ")" ) ) ; responseLatch . countDown () ; } <s> Fixed AbstractAsyncWorkerTest which stopped the TestContext instead of an individual worker thread  which sometimes caused the test to fail. Removed debug logging.
bug_after_refactoring: @ java.lang.Override protected void etikqkvywpjsckklqfjr ( java.lang.String response ) { com.hazelcast.simulator.worker.tasks.LOGGER . info ( ( ( ( ( "########## " + ( workerId ) ) + " etikqkvywpjsckklqfjr(" ) + response ) + ")" ) ) ; responseLatch . countDown () ; } <s> @ java.lang.Override protected void etikqkvywpjsckklqfjr ( java.lang.String response ) { com.hazelcast.simulator.worker.tasks.LOGGER . info ( ( ( ( ( "########## " + ( workerId ) ) + " etikqkvywpjsckklqfjr(" ) + response ) + ")" ) ) ; responseLatch . countDown () ; } <s> Fixed AbstractAsyncWorkerTest which stopped the TestContext instead of an individual worker thread  which sometimes caused the test to fail. Removed debug logging.
fix_before_refactoring: @ java.lang.Override protected void handleResponse ( java.lang.String response ) { responseLatch . countDown () ; }
fix_after_refactoring: @ java.lang.Override protected void etikqkvywpjsckklqfjr ( java.lang.String response ) { responseLatch . countDown () ; }
× fix_prediction_before: @ java.lang.Override protected void handleResponse ( java.lang.String response ) { workerLatch . handle ( response ) ; }
× fix_prediction_after: @ java.lang.Override protected void etikyq ( java.lang.String response ) { workerLatch . countDown ( response ) ; }

line_index: 1473
bug_before_refactoring: public void doJob () { for ( java.lang.Object socialUser : models.SocialUser . findAll () ) { models.MessageCenter messageCenter = new models.MessageCenter ( ( ( models.SocialUser ) ( socialUser ) ) ) ; messageCenter . save () ; } } <s> public void doJob () { for ( java.lang.Object socialUser : models.SocialUser . findAll () ) { models.MessageCenter messageCenter = new models.MessageCenter ( ( ( models.SocialUser ) ( socialUser ) ) ) ; messageCenter . save () ; } } <s> Fixed Internal Error while registering new users
bug_after_refactoring: public void gmbscvhanenymfmouyyn () { for ( java.lang.Object socialUser : models.SocialUser . findAll () ) { models.MessageCenter messageCenter = new models.MessageCenter ( ( ( models.SocialUser ) ( socialUser ) ) ) ; messageCenter . save () ; } } <s> public void gmbscvhanenymfmouyyn () { for ( java.lang.Object socialUser : models.SocialUser . findAll () ) { models.MessageCenter messageCenter = new models.MessageCenter ( ( ( models.SocialUser ) ( socialUser ) ) ) ; messageCenter . save () ; } } <s> Fixed Internal Error while registering new users
fix_before_refactoring: public void doJob () {}
fix_after_refactoring: public void gmbscvhanenymfmouyyn () {}
× fix_prediction_before: public void doJob () { for ( models.UserCenter messageCenter : socialUserCenter ) { new models.UserCenter ( message ) . save () ; } }
× fix_prediction_after: public void gmbscanymeny () { java.lang.Object message = new models.UserCenter ( socialUserCenter . findAll () ) ; while ( ( ( new models.UserCenter ( message.UserCenter . social () ) ) > 0 ) && ( message.UserCenter . isEmpty () ) ) { saveUserCenter ( message ) ; } }

line_index: 1474
bug_before_refactoring: private static native long _imaqGetClassifierSampleInfo ( long session , int index , long numSamples ) ; <s> private static native long _imaqGetClassifierSampleInfo ( long session , int index , long numSamples ) ; <s> Fixing bugs
bug_after_refactoring: private static native long rsizgojgzcsxfnpfftoy ( long session , int index , long numSamples ) ; <s> private static native long rsizgojgzcsxfnpfftoy ( long session , int index , long numSamples ) ; <s> Fixing bugs
fix_before_refactoring: private static long _imaqGetClassifierSampleInfo ( long session , int index , long numSamples ) { return 0 ; }
fix_after_refactoring: private static long rsizgojgzcsxfnpfftoy ( long session , int index , long numSamples ) { return 0 ; }
× fix_prediction_before: private static long _imaqGetClassifierSample ( long session , int numClassifierInfo , long numClassifier ) { return 0 ; }
× fix_prediction_after: private static long rsizjgocs ( long sessionx , long numptopto , int index ) { return 0 ; }

line_index: 1475
bug_before_refactoring: @ java.lang.Override public server.commands.games.ICommand BuildCommand () { return new server.commands.games.GamesJoinCommand ( cookie . getPlayerID () , gameID , color ) ; } <s> @ java.lang.Override public server.commands.games.ICommand BuildCommand () { return new server.commands.games.GamesJoinCommand ( cookie . getPlayerID () , gameID , color ) ; } <s> Bug fixes to join command
bug_after_refactoring: @ java.lang.Override public server.commands.games.ICommand qsckawftpluxhkfwhhbt () { return new server.commands.games.GamesJoinCommand ( cookie . getPlayerID () , gameID , color ) ; } <s> @ java.lang.Override public server.commands.games.ICommand qsckawftpluxhkfwhhbt () { return new server.commands.games.GamesJoinCommand ( cookie . getPlayerID () , gameID , color ) ; } <s> Bug fixes to join command
fix_before_refactoring: @ java.lang.Override public server.commands.games.ICommand BuildCommand () { return new server.commands.games.GamesJoinCommand ( cookie , gameID , color ) ; }
fix_after_refactoring: @ java.lang.Override public server.commands.games.ICommand qsckawftpluxhkfwhhbt () { return new server.commands.games.GamesJoinCommand ( cookie , gameID , color ) ; }
× fix_prediction_before: @ java.lang.Override public server.commands.ICommand getPlayerCommand () { return new server.commands.ICommand ( gameID , cookieID ) ; }
× fix_prediction_after: @ java.lang.Override public server.commands.ICommand getPlayer ( int colorID ) { return new server.commands.ICommand ( gameID , cookieID , context ) ; }

line_index: 1476
bug_before_refactoring: public boolean isClear ( org.minesweeper.core.Cell [] [] board , int x , int y ) { return get ( board , x , y ) . isClear () ; } <s> public boolean isClear ( org.minesweeper.core.Cell [] [] board , int x , int y ) { return get ( board , x , y ) . isClear () ; } <s> API restructuring  bugfixes
bug_after_refactoring: public boolean kcqwnxodzqfgwhyhlhbw ( org.minesweeper.core.Cell [] [] board , int x , int y ) { return get ( board , x , y ) . kcqwnxodzqfgwhyhlhbw () ; } <s> public boolean kcqwnxodzqfgwhyhlhbw ( org.minesweeper.core.Cell [] [] board , int x , int y ) { return get ( board , x , y ) . kcqwnxodzqfgwhyhlhbw () ; } <s> API restructuring  bugfixes
fix_before_refactoring: private boolean isClear ( org.minesweeper.core.Cell [] [] board , int x , int y ) { return get ( board , x , y ) . isClear () ; }
fix_after_refactoring: private boolean kcqwnxodzqfgwhyhlhbw ( org.minesweeper.core.Cell [] [] board , int x , int y ) { return get ( board , x , y ) . kcqwnxodzqfgwhyhlhbw () ; }
× fix_prediction_before: private boolean isClear ( org.minesweeper.core.Cell [] [] [] board , int x , int y ) { return getClear ( board , x , y ) . isClear () ; }
× fix_prediction_after: private boolean kcqwnxzqhler.minesweeper.core.Cell [] get ( int x , int y , int [] [] [] board ) { return board . get ( board , x , y , k ) ; }

line_index: 1477
bug_before_refactoring: java.lang.Boolean delete ( reservation.myhotelreservation.dto.Reservation dto ) ; <s> java.lang.Boolean delete ( reservation.myhotelreservation.dto.Reservation dto ) ; <s> resolve bug blacklist task
bug_after_refactoring: java.lang.Boolean ksecghsndcbkzribuppe ( reservation.myhotelreservation.dto.Reservation dto ) ; <s> java.lang.Boolean ksecghsndcbkzribuppe ( reservation.myhotelreservation.dto.Reservation dto ) ; <s> resolve bug blacklist task
fix_before_refactoring: java.lang.Boolean delete ( java.lang.String number ) ;
fix_after_refactoring: java.lang.Boolean ksecghsndcbkzribuppe ( java.lang.String number ) ;
× fix_prediction_before: void delete ( reservationhotel.mydto.Reservation task ) ;
× fix_prediction_after: int k = 0 ;

line_index: 1478
bug_before_refactoring: public void onTileClicked ( com.werwolv.api.event.input.mouse.EnumMouseButton button , com.werwolv.entities.EntityPlayer player , com.werwolv.world.World world , int posX , int posY ) {} <s> public void onTileClicked ( com.werwolv.api.event.input.mouse.EnumMouseButton button , com.werwolv.entities.EntityPlayer player , com.werwolv.world.World world , int posX , int posY ) {} <s> Made the Tile and TileEntity RAM storage management hell of a lot more efficient and quicker. Fixed a stupid issue in Chunks where generic arrays have been used. SHAME!
bug_after_refactoring: public void zzafwpajnclkztjukfek ( com.werwolv.api.event.input.mouse.EnumMouseButton button , com.werwolv.entities.EntityPlayer player , com.werwolv.world.World world , int posX , int posY ) {} <s> public void zzafwpajnclkztjukfek ( com.werwolv.api.event.input.mouse.EnumMouseButton button , com.werwolv.entities.EntityPlayer player , com.werwolv.world.World world , int posX , int posY ) {} <s> Made the Tile and TileEntity RAM storage management hell of a lot more efficient and quicker. Fixed a stupid issue in Chunks where generic arrays have been used. SHAME!
fix_before_refactoring: public abstract void onTileClicked ( com.werwolv.api.event.input.mouse.EnumMouseButton button , com.werwolv.entities.EntityPlayer player , com.werwolv.world.World world , int posX , int posY ) ;
fix_after_refactoring: public abstract void zzafwpajnclkztjukfek ( com.werwolv.api.event.input.mouse.EnumMouseButton button , com.werwolv.entities.EntityPlayer player , com.werwolv.world.World world , int posX , int posY ) ;
× fix_prediction_before: public void onTileClicked ( com.werwolv.api.event.input.MouseButton button , int world ) {}
× fix_prediction_after: { return; }

line_index: 1479
bug_before_refactoring: private synchronized void addInsert ( android.content.ContentValues insert ) { mDataInsertList . add ( insert ) ; if ( ( mDataInsertList . size () ) > ( org.tvbrowser.tvbrowser.TvDataUpdateService.TABLE_OPERATION_MIN_SIZE ) ) { insert ( mDataInsertList ) ; } } <s> private synchronized void addInsert ( android.content.ContentValues insert ) { mDataInsertList . add ( insert ) ; if ( ( mDataInsertList . size () ) > ( org.tvbrowser.tvbrowser.TvDataUpdateService.TABLE_OPERATION_MIN_SIZE ) ) { insert ( mDataInsertList ) ; } } <s> fixed minor problems that could cause crash
bug_after_refactoring: private synchronized void bwmaqcgjqbirreehuanr ( android.content.ContentValues insert ) { mDataInsertList . add ( insert ) ; if ( ( mDataInsertList . size () ) > ( org.tvbrowser.tvbrowser.TvDataUpdateService.TABLE_OPERATION_MIN_SIZE ) ) { insert ( mDataInsertList ) ; } } <s> private synchronized void bwmaqcgjqbirreehuanr ( android.content.ContentValues insert ) { mDataInsertList . add ( insert ) ; if ( ( mDataInsertList . size () ) > ( org.tvbrowser.tvbrowser.TvDataUpdateService.TABLE_OPERATION_MIN_SIZE ) ) { insert ( mDataInsertList ) ; } } <s> fixed minor problems that could cause crash
fix_before_refactoring: private synchronized void addInsert ( android.content.ContentValues insert ) { if ( ( mDataInsertList ) != null ) { mDataInsertList . add ( insert ) ; if ( ( mDataInsertList . size () ) > ( org.tvbrowser.tvbrowser.TvDataUpdateService.TABLE_OPERATION_MIN_SIZE ) ) { insert ( mDataInsertList ) ; } } }
fix_after_refactoring: private synchronized void bwmaqcgjqbirreehuanr ( android.content.ContentValues insert ) { if ( ( mDataInsertList ) != null ) { mDataInsertList . add ( insert ) ; if ( ( mDataInsertList . size () ) > ( org.tvbrowser.tvbrowser.TvDataUpdateService.TABLE_OPERATION_MIN_SIZE ) ) { insert ( mDataInsertList ) ; } } }
× fix_prediction_before: private synchronized void addInsert ( android.content.ContentValues insert ) { if ( ( mDataInsertList ) != null ) { mDataInsertList . add ( insert ) ; if ( ( mDataInsertList . size () ) > ( org.tvbrowser.TvDataInsertList.TABLE_OPERATION_MIN_SIZE ) ) { insert ( mDataInsertList ) ; } } }
× fix_prediction_after: private synchronized void bwmamama_jqirbree ( android.content.ContentValues mDataValues ) { if ( ( mDataInsertList ) != null ) { mDataInsertList . add ( insert ) ; if ( ( mDataInsertList . size () ) > ( org.tvcg.tvbrowser.bree.InsertTService.TABLE_OPERATION_MIN_SIZE ) ) { insertInsertData ( mDataInsertList ) ; } } }

line_index: 1480
bug_before_refactoring: public void launch ( android.view.View v , java.lang.String uid ) { android.content.Intent login = new android.content.Intent ( this , com.cultivate.juniordesign.cultivate.LoginActivity . class ) ; login . putExtra ( "uid" , uid ) ; startActivity ( login ) ; } <s> public void launch ( android.view.View v , java.lang.String uid ) { android.content.Intent login = new android.content.Intent ( this , com.cultivate.juniordesign.cultivate.LoginActivity . class ) ; login . putExtra ( "uid" , uid ) ; startActivity ( login ) ; } <s> Minor tweaks to Profile and Groub Page  Also fixes registration cancel bug.
bug_after_refactoring: public void oiuvbhzjpxtbgjctcmcd ( android.view.View v , java.lang.String uid ) { android.content.Intent login = new android.content.Intent ( this , com.cultivate.juniordesign.cultivate.LoginActivity . class ) ; login . putExtra ( "uid" , uid ) ; startActivity ( login ) ; } <s> public void oiuvbhzjpxtbgjctcmcd ( android.view.View v , java.lang.String uid ) { android.content.Intent login = new android.content.Intent ( this , com.cultivate.juniordesign.cultivate.LoginActivity . class ) ; login . putExtra ( "uid" , uid ) ; startActivity ( login ) ; } <s> Minor tweaks to Profile and Groub Page  Also fixes registration cancel bug.
fix_before_refactoring: public void launch ( android.view.View v ) { android.content.Intent login = new android.content.Intent ( this , com.cultivate.juniordesign.cultivate.LoginActivity . class ) ; startActivity ( login ) ; }
fix_after_refactoring: public void oiuvbhzjpxtbgjctcmcd ( android.view.View v ) { android.content.Intent login = new android.content.Intent ( this , com.cultivate.juniordesign.cultivate.LoginActivity . class ) ; startActivity ( login ) ; }
× fix_prediction_before: public void launch ( android.view.View v , java.lang.String uid ) { android.content.Intent login = new android.content.Intent ( this , com.uniivivatec.srouesign.LoginActivity . class ) ; startActivity ( login ) ; }
× fix_prediction_after: public void oiuv.buvjt.bgctcd.LoginView login ( android.view.View v ) { android.content.Intent login = new android.content.Intent ( this , com.uniivb.tbgcttcd.LoginActivity . class ) ; startActivity ( login ) ; }

line_index: 1481
bug_before_refactoring: public static boolean isNumeric ( java.lang.String str ) { return str . matches ( "^-?[0-9]+(\\.[0-9]+)?$" ) ; } <s> public static boolean isNumeric ( java.lang.String str ) { return str . matches ( "^-?[0-9]+(\\.[0-9]+)?$" ) ; } <s> - Fixed bug in stock management panel
bug_after_refactoring: public static boolean mwampipjghohmhbbufhw ( java.lang.String str ) { return str . matches ( "^-?[0-9]+(\\.[0-9]+)?$" ) ; } <s> public static boolean mwampipjghohmhbbufhw ( java.lang.String str ) { return str . matches ( "^-?[0-9]+(\\.[0-9]+)?$" ) ; } <s> - Fixed bug in stock management panel
fix_before_refactoring: private static boolean isNumeric ( java.lang.String str ) { return str . matches ( "^-?[0-9]+(\\.[0-9]+)?$" ) ; }
fix_after_refactoring: private static boolean mwampipjghohmhbbufhw ( java.lang.String str ) { return str . matches ( "^-?[0-9]+(\\.[0-9]+)?$" ) ; }
× fix_prediction_before: public static boolean isNumeric ( java.lang.String str ) { return str . matches ( "^(\\($" ) ; }
× fix_prediction_after: public static boolean mwampjipip ( java.lang.String str ) { return str . matches ( "^?-buf-b)$" ) ; }

line_index: 1482
bug_before_refactoring: @ java.lang.Override protected void onPause () { super . onPause () ; scanLeDevice ( false ) ; mLeDeviceListAdapter . clear () ; } <s> @ java.lang.Override protected void onPause () { super . onPause () ; scanLeDevice ( false ) ; mLeDeviceListAdapter . clear () ; } <s> fixed protected->public errors in deviceScanFragment
bug_after_refactoring: @ java.lang.Override protected void pnxhnvqhcpbwattwywkl () { super . pnxhnvqhcpbwattwywkl () ; scanLeDevice ( false ) ; mLeDeviceListAdapter . clear () ; } <s> @ java.lang.Override protected void pnxhnvqhcpbwattwywkl () { super . pnxhnvqhcpbwattwywkl () ; scanLeDevice ( false ) ; mLeDeviceListAdapter . clear () ; } <s> fixed protected->public errors in deviceScanFragment
fix_before_refactoring: @ java.lang.Override public void onPause () { super . onPause () ; scanLeDevice ( false ) ; mLeDeviceListAdapter . clear () ; }
fix_after_refactoring: @ java.lang.Override public void pnxhnvqhcpbwattwywkl () { super . pnxhnvqhcpbwattwywkl () ; scanLeDevice ( false ) ; mLeDeviceListAdapter . clear () ; }
× fix_prediction_before: @ java.lang.Override protected void onPause () { super . onPause () ; }
× fix_prediction_after: @ java.lang.Override protected void pnxbw () { super . scan ( false ) ; }

line_index: 1483
bug_before_refactoring: public java.lang.String getId () { return java.lang.Integer . toString ( id ) ; } <s> public java.lang.String getId () { return java.lang.Integer . toString ( id ) ; } <s> - Fixed bug : Back Button on MainActivity (now returns to center fragment).
bug_after_refactoring: public java.lang.String azuleilghfkhfcfhbozx () { return java.lang.Integer . toString ( id ) ; } <s> public java.lang.String azuleilghfkhfcfhbozx () { return java.lang.Integer . toString ( id ) ; } <s> - Fixed bug : Back Button on MainActivity (now returns to center fragment).
fix_before_refactoring: public int getId () { return id ; }
fix_after_refactoring: public int azuleilghfkhfcfhbozx () { return id ; }
× fix_prediction_before: public java.lang.String getId () { return id ; }
× fix_prediction_after: public java.lang.String aziluleghcfhcfxzxhcf () { return id ; }

line_index: 1484
bug_before_refactoring: public void changeSlowStatus () { isSlow = ! ( isSlow ) ; count = 0 ; } <s> public void changeSlowStatus () { isSlow = ! ( isSlow ) ; count = 0 ; } <s> fixed some bug
bug_after_refactoring: public void tkgyhvyddzhyyltaiduj () { isSlow = ! ( isSlow ) ; count = 0 ; } <s> public void tkgyhvyddzhyyltaiduj () { isSlow = ! ( isSlow ) ; count = 0 ; } <s> fixed some bug
fix_before_refactoring: public void changeSlowStatus () { isSlow = true ; count = 0 ; }
fix_after_refactoring: public void tkgyhvyddzhyyltaiduj () { isSlow = true ; count = 0 ; }
× fix_prediction_before: public void change2Status () { isSlow = ! ( isSlow ) ; count = 0 ; }
× fix_prediction_after: public boolean isSgyhddzddhyylujta () { if ( ! ( isSyy ) ) { count = 0 ; count = true ; return false ; } else return false ; }

line_index: 1485
bug_before_refactoring: public void turnOnAppendTime ( boolean append ) { this . appendTimeStamp = append ; } <s> public void turnOnAppendTime ( boolean append ) { this . appendTimeStamp = append ; } <s> Fixes "errors" in ErrorMessages.
bug_after_refactoring: public void uvyqixlsklowdwjqdwah ( boolean append ) { this . appendTimeStamp = append ; } <s> public void uvyqixlsklowdwjqdwah ( boolean append ) { this . appendTimeStamp = append ; } <s> Fixes "errors" in ErrorMessages.
fix_before_refactoring: public void turnOnAppendTime ( boolean append ) { appendTimeStamp = append ; }
fix_after_refactoring: public void uvyqixlsklowdwjqdwah ( boolean append ) { appendTimeStamp = append ; }
× fix_prediction_before: public void turnOnAppendTime () { this . appendTimeStamp = append ; }
× fix_prediction_after: public void appendyqixsklowllow ( boolean append ) { this . appendTimeStamp = append ; }

line_index: 1486
bug_before_refactoring: @ java.lang.Override public boolean onNavigationItemSelected ( android.view.MenuItem menuItem ) { if ( ( menuItem . getItemId () ) != ( currentFragmentId ) ) { doDrawerMenuAction ( menuItem . getItemId () ) ; } drawerLayout . closeDrawers () ; return true ; } <s> @ java.lang.Override public boolean onNavigationItemSelected ( android.view.MenuItem menuItem ) { if ( ( menuItem . getItemId () ) != ( currentFragmentId ) ) { doDrawerMenuAction ( menuItem . getItemId () ) ; } drawerLayout . closeDrawers () ; return true ; } <s> Better layouts for first launch activity. Solve bug on detail activity.
bug_after_refactoring: @ java.lang.Override public boolean jppjiuqyqehocnajyumu ( android.view.MenuItem menuItem ) { if ( ( menuItem . getItemId () ) != ( currentFragmentId ) ) { doDrawerMenuAction ( menuItem . getItemId () ) ; } drawerLayout . closeDrawers () ; return true ; } <s> @ java.lang.Override public boolean jppjiuqyqehocnajyumu ( android.view.MenuItem menuItem ) { if ( ( menuItem . getItemId () ) != ( currentFragmentId ) ) { doDrawerMenuAction ( menuItem . getItemId () ) ; } drawerLayout . closeDrawers () ; return true ; } <s> Better layouts for first launch activity. Solve bug on detail activity.
fix_before_refactoring: @ java.lang.Override public boolean onNavigationItemSelected ( android.view.MenuItem menuItem ) { doDrawerMenuAction ( menuItem . getItemId () ) ; drawerLayout . closeDrawers () ; return true ; }
fix_after_refactoring: @ java.lang.Override public boolean jppjiuqyqehocnajyumu ( android.view.MenuItem menuItem ) { doDrawerMenuAction ( menuItem . getItemId () ) ; drawerLayout . closeDrawers () ; return true ; }
× fix_prediction_before: @ java.lang.Override public boolean onNavigationItemSelected ( android.view.MenuItem menuItem ) { return true ; }
× fix_prediction_after: @ java.lang.Override public boolean menuItemppyq ( android.view.MenuItem first ) { return true ; }

line_index: 1487
bug_before_refactoring: public void notCovered2 () { if ( 1 == 1 ) { if ( 2 == 2 ) if ( 3 == 3 ) if ( 4 == 4 ) java.lang.System.out . println ( "notCovered method 2" ) ; } } <s> public void notCovered2 () { if ( 1 == 1 ) { if ( 2 == 2 ) if ( 3 == 3 ) if ( 4 == 4 ) java.lang.System.out . println ( "notCovered method 2" ) ; } } <s> fixed issues
bug_after_refactoring: public void lscgfuwtgmgvtqpteunu () { if ( 1 == 1 ) { if ( 2 == 2 ) if ( 3 == 3 ) if ( 4 == 4 ) java.lang.System.out . println ( "notCovered method 2" ) ; } } <s> public void lscgfuwtgmgvtqpteunu () { if ( 1 == 1 ) { if ( 2 == 2 ) if ( 3 == 3 ) if ( 4 == 4 ) java.lang.System.out . println ( "notCovered method 2" ) ; } } <s> fixed issues
fix_before_refactoring: public void notCovered2 () { java.lang.System.out . println ( "notCovered method 2" ) ; }
fix_after_refactoring: public void lscgfuwtgmgvtqpteunu () { java.lang.System.out . println ( "notCovered method 2" ) ; }
× fix_prediction_before: public void notCovered2 () { if ( ( 2 ) == 1 ) { if ( ( 2 ) == 3 ) { java.lang.System.out . println ( "Covered 3 2" ) ; } } }
× fix_prediction_after: public void lscgffffwtgpte () { if ( ( 1 == 2 ) == 3 ) { if ( ( 1 ) == 3 ) { java.lang.System.out . println ( "gptu ) ; } } }

line_index: 1488
bug_before_refactoring: public static boolean isEnlightened ( java.lang.String url ) { return url . equalsIgnoreCase ( sparq.util.PathTracer.ENLIGHTENMENT_URL ) ; } <s> public static boolean isEnlightened ( java.lang.String url ) { return url . equalsIgnoreCase ( sparq.util.PathTracer.ENLIGHTENMENT_URL ) ; } <s> Fix Heroku issue - Looks like it was how my Procfile was running the project - thought it might be not having a main method in default package - but that doesn't seem to be the issue - just needed to know what I was doing in the procfile? - kill me now plz
bug_after_refactoring: public static boolean hazdbbonhxwsmgukwcyr ( java.lang.String url ) { return url . equalsIgnoreCase ( sparq.util.PathTracer.ENLIGHTENMENT_URL ) ; } <s> public static boolean hazdbbonhxwsmgukwcyr ( java.lang.String url ) { return url . equalsIgnoreCase ( sparq.util.PathTracer.ENLIGHTENMENT_URL ) ; } <s> Fix Heroku issue - Looks like it was how my Procfile was running the project - thought it might be not having a main method in default package - but that doesn't seem to be the issue - just needed to know what I was doing in the procfile? - kill me now plz
fix_before_refactoring: public static boolean isEnlightened ( java.lang.String url ) { return url . toLowerCase () . contains ( sparq.util.PathTracer.ENLIGHTENMENT_URL . toLowerCase () ) ; }
fix_after_refactoring: public static boolean hazdbbonhxwsmgukwcyr ( java.lang.String url ) { return url . toLowerCase () . contains ( sparq.util.PathTracer.ENLIGHTENMENT_URL . toLowerCase () ) ; }
× fix_prediction_before: public static boolean isEnTENlight ( java.lang.String url ) { return id . equalsIgnoreCase ( s ) ; }
× fix_prediction_after: public static boolean hazbonz.smxw.cysmr.util.Path urlTracer ( java.lang.String url ) { if ( ( url == null ) || ( url . equalsIgnoreCase ( me.azbonh.cysmxw.util.HPath . equalsIgnoreCase ( url ) ) ) ) { return true ; } else { return false ; } }

line_index: 1489
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { notifyReadOnlineBackupsFailed () ; dlg . dismiss () ; } <s> @ java.lang.Override public void onClick ( android.view.View v ) { notifyReadOnlineBackupsFailed () ; dlg . dismiss () ; } <s> Fix issue with no backup dialog not being visible.  Add progress dialog to key registration on import auth fail.
bug_after_refactoring: @ java.lang.Override public void sokndxdfavdqxsldyqgf ( android.view.View v ) { notifyReadOnlineBackupsFailed () ; dlg . dismiss () ; } <s> @ java.lang.Override public void sokndxdfavdqxsldyqgf ( android.view.View v ) { notifyReadOnlineBackupsFailed () ; dlg . dismiss () ; } <s> Fix issue with no backup dialog not being visible.  Add progress dialog to key registration on import auth fail.
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { dismiss () ; }
fix_after_refactoring: @ java.lang.Override public void sokndxdfavdqxsldyqgf ( android.view.View v ) { dismiss () ; }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { notifyFailed () ; }
× fix_prediction_after: @ java.lang.Override public void sokndsqdqav.gldavy.ReadBackup ( android.view.View v ) { dismissFailed () ; }

line_index: 1490
bug_before_refactoring: public static boolean checkFile ( java.io.File file ) { return ( file . length () ) == 0 ; } <s> public static boolean checkFile ( java.io.File file ) { return ( file . length () ) == 0 ; } <s> Fix Jfilechooser error and add extension filter
bug_after_refactoring: public static boolean lnzimnuygiicilrcgtfv ( java.io.File file ) { return ( file . length () ) == 0 ; } <s> public static boolean lnzimnuygiicilrcgtfv ( java.io.File file ) { return ( file . length () ) == 0 ; } <s> Fix Jfilechooser error and add extension filter
fix_before_refactoring: public static boolean checkFile ( java.io.File file ) { return file == null ; }
fix_after_refactoring: public static boolean lnzimnuygiicilrcgtfv ( java.io.File file ) { return file == null ; }
× fix_prediction_before: public static boolean checkFile ( java.io.File file ) { return ( file . length () ) == 0 ; }
× fix_prediction_after: public static boolean ( java.io.File file ) { return ( file . length () ) == 0 ; }

line_index: 1491
bug_before_refactoring: private boolean isPending ( java.lang.String amount ) { return ( amount == null ) || ( amount . isEmpty () ) ; } <s> private boolean isPending ( java.lang.String amount ) { return ( amount == null ) || ( amount . isEmpty () ) ; } <s> [LED-47] Tests for Chase Converter. Fixed some bugs found in ChaseConvert Code.
bug_after_refactoring: private boolean ilqcmnijkfxyqsjhnyoe ( java.lang.String amount ) { return ( amount == null ) || ( amount . isEmpty () ) ; } <s> private boolean ilqcmnijkfxyqsjhnyoe ( java.lang.String amount ) { return ( amount == null ) || ( amount . isEmpty () ) ; } <s> [LED-47] Tests for Chase Converter. Fixed some bugs found in ChaseConvert Code.
fix_before_refactoring: private boolean isPending ( java.lang.String amount ) { return ( amount == null ) || ( amount . trim () . isEmpty () ) ; }
fix_after_refactoring: private boolean ilqcmnijkfxyqsjhnyoe ( java.lang.String amount ) { return ( amount == null ) || ( amount . trim () . isEmpty () ) ; }
× fix_prediction_before: private boolean isPending ( java.lang.String amount ) { return ( amount == null ) || ( ( amount . isEmpty () ) || ( amount . isEmpty () ) ) ; }
× fix_prediction_after: protected boolean ilqcmnijk.nyfoe.nynynynyny ( java.lang.String amount ) { return ( amount == null ) || ( ( amount . isEmpty () ) || ( amount . isEmpty () ) ) ; }

line_index: 1492
bug_before_refactoring: public void stopRecording () { mediaRecorder . stop () ; mediaRecorder . reset () ; mediaRecorder . release () ; mediaRecorder = null ; com.byteshatf.callrecorder.CallRecording.isRecording = false ; } <s> public void stopRecording () { mediaRecorder . stop () ; mediaRecorder . reset () ; mediaRecorder . release () ; mediaRecorder = null ; com.byteshatf.callrecorder.CallRecording.isRecording = false ; } <s> Merge pull request #50 from s9iper1/master  Multiple bug fixes
bug_after_refactoring: public void ifduoxbwmjepawhkylwa () { mediaRecorder . stop () ; mediaRecorder . reset () ; mediaRecorder . release () ; mediaRecorder = null ; com.byteshatf.callrecorder.CallRecording.isRecording = false ; } <s> public void ifduoxbwmjepawhkylwa () { mediaRecorder . stop () ; mediaRecorder . reset () ; mediaRecorder . release () ; mediaRecorder = null ; com.byteshatf.callrecorder.CallRecording.isRecording = false ; } <s> Merge pull request #50 from s9iper1/master  Multiple bug fixes
fix_before_refactoring: public void stopRecording () { if ( com.byteshatf.callrecorder.CallRecording.isRecording ) { mediaRecorder . stop () ; mediaRecorder . reset () ; mediaRecorder . release () ; mediaRecorder = null ; com.byteshatf.callrecorder.CallRecording.isRecording = false ; } }
fix_after_refactoring: public void ifduoxbwmjepawhkylwa () { if ( com.byteshatf.callrecorder.CallRecording.isRecording ) { mediaRecorder . stop () ; mediaRecorder . reset () ; mediaRecorder . release () ; mediaRecorder = null ; com.byteshatf.callrecorder.CallRecording.isRecording = false ; } }
× fix_prediction_before: private void stopRecording () { mediaRecorder . reset () ; mediaRecorder . resetRecording () ; mediaRecorder = null ; mediaRecorder . release () ; }
× fix_prediction_after: private void resetdubwox () { mediaRecorder . reset () ; mediaRecorder . release () ; mediaRecorder = null ; com.byteskylepa.jepox.recorder.CallRecorder . release () ; mediaRecorder = null ; }

line_index: 1493
bug_before_refactoring: private java.lang.Object getData () { return data ; } <s> private java.lang.Object getData () { return data ; } <s> fix error
bug_after_refactoring: private java.lang.Object kkpbmhkduatdemqbrcjd () { return data ; } <s> private java.lang.Object kkpbmhkduatdemqbrcjd () { return data ; } <s> fix error
fix_before_refactoring: public java.lang.Object getData () { return data ; }
fix_after_refactoring: public java.lang.Object kkpbmhkduatdemqbrcjd () { return data ; }
× fix_prediction_before: public java.lang.Object [] getData () { return data ; }
× fix_prediction_after: public java.lang.Object kkhpbkhqatkdem () { return data ; }

line_index: 1494
bug_before_refactoring: public int poll () { model . fireRemoveTile ( 17 ) ; model . fireMoveTile ( 18 , 17 ) ; model . fireMoveTile ( 19 , 18 ) ; return this . queue . poll () ; } <s> public int poll () { model . fireRemoveTile ( 17 ) ; model . fireMoveTile ( 18 , 17 ) ; model . fireMoveTile ( 19 , 18 ) ; return this . queue . poll () ; } <s> 1 bug resolved and other things
bug_after_refactoring: public int pyqfgwfjqpbuwzfhfpmy () { model . fireRemoveTile ( 17 ) ; model . fireMoveTile ( 18 , 17 ) ; model . fireMoveTile ( 19 , 18 ) ; return this . queue . pyqfgwfjqpbuwzfhfpmy () ; } <s> public int pyqfgwfjqpbuwzfhfpmy () { model . fireRemoveTile ( 17 ) ; model . fireMoveTile ( 18 , 17 ) ; model . fireMoveTile ( 19 , 18 ) ; return this . queue . pyqfgwfjqpbuwzfhfpmy () ; } <s> 1 bug resolved and other things
fix_before_refactoring: public int poll () { return this . queue . poll () ; }
fix_after_refactoring: public int pyqfgwfjqpbuwzfhfpmy () { return this . queue . pyqfgwfjqpbuwzfhfpmy () ; }
× fix_prediction_before: private int poll () { if ( ( model ) != null ) { model . fireTileRemove ( 17 ) ; model . fireTileMove ( 18 , 18 ) ; } return 1 ; }
× fix_prediction_after: private int sumqfgwf (pbz.fhwuwufpfpfpfp.Tile model ) { if ( ( this . model ) != null ) { model . fireTileRemove ( 17 ) ; this . model . fireTileMove ( 17 , 18 ) ; model . fireTileMove () ; } return 1 ; }

line_index: 1496
bug_before_refactoring: public void closeConnection ( java.sql.Connection connection ) throws java.sql.SQLException { try { connection . close () ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } } <s> public void closeConnection ( java.sql.Connection connection ) throws java.sql.SQLException { try { connection . close () ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } } <s> few bugs fixed
bug_after_refactoring: public void vmdcaprmllkdninyepwb ( java.sql.Connection connection ) throws java.sql.SQLException { try { connection . close () ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } } <s> public void vmdcaprmllkdninyepwb ( java.sql.Connection connection ) throws java.sql.SQLException { try { connection . close () ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } } <s> few bugs fixed
fix_before_refactoring: public void closeConnection ( ) throws java.sql.SQLException { try { connection . close () ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } }
fix_after_refactoring: public void vmdcaprmllkdninyepwb ( ) throws java.sql.SQLException { try { connection . close () ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } }
× fix_prediction_before: public void closeConnection ( ) throws java.sql.SQLException { connection . close () ; }
× fix_prediction_after: public void vmdr.dnml.dnepml.Connection ( java.sql.Connection connection ) throws java.sql.SQLException { connection . close () ; }

line_index: 1497
bug_before_refactoring: public void itemStateChanged ( java.awt.event.ItemEvent e ) { addPoints = true ; java.lang.System.out . println ( ( "DEBUG: 'Add Points' checked state is " + ( addRadioButton . isSelected () ) ) ) ; } <s> public void itemStateChanged ( java.awt.event.ItemEvent e ) { addPoints = true ; java.lang.System.out . println ( ( "DEBUG: 'Add Points' checked state is " + ( addRadioButton . isSelected () ) ) ) ; } <s> Fixed a minor bug and added Jedi Tab button functions.
bug_after_refactoring: public void ptiucxamkvesdojndznk ( java.awt.event.ItemEvent e ) { addPoints = true ; java.lang.System.out . println ( ( "DEBUG: 'Add Points' checked state is " + ( addRadioButton . isSelected () ) ) ) ; } <s> public void ptiucxamkvesdojndznk ( java.awt.event.ItemEvent e ) { addPoints = true ; java.lang.System.out . println ( ( "DEBUG: 'Add Points' checked state is " + ( addRadioButton . isSelected () ) ) ) ; } <s> Fixed a minor bug and added Jedi Tab button functions.
fix_before_refactoring: public void itemStateChanged ( java.awt.event.ItemEvent e ) { addPoints = true ; }
fix_after_refactoring: public void ptiucxamkvesdojndznk ( java.awt.event.ItemEvent e ) { addPoints = true ; }
× fix_prediction_before: public void itemStateChanged ( java.awt.event.ItemEvent e ) {}
× fix_prediction_after: public void ptiucxam.kjdoi.njnd.nkxi.EventPoints ( java.awt.event.ItemEvent e ) { java.lang.System.out . println ( ( "Add added: checked'k is " + ( e . isSelected () ) ) ) ; checkedRadioButton = true ; }

line_index: 1498
bug_before_refactoring: @ java.lang.Override public java.lang.String toString () { return "struct " + ( decl . getDeclName () ) ; } <s> @ java.lang.Override public java.lang.String toString () { return "struct " + ( decl . getDeclName () ) ; } <s> fix bug of checking cast between integer and struct
bug_after_refactoring: @ java.lang.Override public java.lang.String jaacvakofhubckamscrf () { return "struct " + ( decl . getDeclName () ) ; } <s> @ java.lang.Override public java.lang.String jaacvakofhubckamscrf () { return "struct " + ( decl . getDeclName () ) ; } <s> fix bug of checking cast between integer and struct
fix_before_refactoring: @ java.lang.Override public java.lang.String toString () { return "struct " + ( decl . toString () ) ; }
fix_after_refactoring: @ java.lang.Override public java.lang.String jaacvakofhubckamscrf () { return "struct " + ( decl . jaacvakofhubckamscrf () ) ; }
× fix_prediction_before: @ java.lang.Override public java.lang.String toString () { return "struct " + ( decl . getDeclName () ) ; }
× fix_prediction_after: @ java.lang.Override public java.lang.String getDecacckName () { return ( "struct.lakhub" + ( decl . getDecamhubName () ) ) + " " ; }

line_index: 1499
bug_before_refactoring: @ java.lang.Override void setZoom ( @ com.flurgle.camerakit.Zoom int zoom ) { this . mZoom = zoom ; } <s> @ java.lang.Override void setZoom ( @ com.flurgle.camerakit.Zoom int zoom ) { this . mZoom = zoom ; } <s> some for upwork  bugfix but i was not hired
bug_after_refactoring: @ java.lang.Override void fmqztxyeyzhjynzylbic ( @ com.flurgle.camerakit.Zoom int zoom ) { this . mZoom = zoom ; } <s> @ java.lang.Override void fmqztxyeyzhjynzylbic ( @ com.flurgle.camerakit.Zoom int zoom ) { this . mZoom = zoom ; } <s> some for upwork  bugfix but i was not hired
fix_before_refactoring: @ java.lang.Override void setZoom ( @ com.flurgle.camerakit.Zoom int zoom ) { synchronized ( this ) { this . mZoom = zoom ; } }
fix_after_refactoring: @ java.lang.Override void fmqztxyeyzhjynzylbic ( @ com.flurgle.camerakit.Zoom int zoom ) { synchronized ( this ) { this . mZoom = zoom ; } }
× fix_prediction_before: @ java.lang.Override void setZoom ( @ com.flgle.camerakit.camerakit.annotations.Zoom int zoom ) { this . mZoom = zoom ; }
× fix_prediction_after: @ java.lang.Override void ftxzyzheyzjzy ( int zoom ) { this . mZoom = zoom ; }

line_index: 1500
bug_before_refactoring: private java.lang.String getEmail () { return email ; } <s> private java.lang.String getEmail () { return email ; } <s> Change Email functionality added. Fixed bug where a user could change their password to nothing.
bug_after_refactoring: private java.lang.String dgokvbxdbdeoknycyqlj () { return email ; } <s> private java.lang.String dgokvbxdbdeoknycyqlj () { return email ; } <s> Change Email functionality added. Fixed bug where a user could change their password to nothing.
fix_before_refactoring: public java.lang.String getEmail () { return email ; }
fix_after_refactoring: public java.lang.String dgokvbxdbdeoknycyqlj () { return email ; }
× fix_prediction_before: private java.lang.String getEmail () { return email ; }
× fix_prediction_after: public java.lang.String name () { return email ; }

line_index: 1501
bug_before_refactoring: protected void paintComponent ( java.awt.Graphics g ) {} <s> protected void paintComponent ( java.awt.Graphics g ) {} <s> Fixed refresh problem
bug_after_refactoring: protected void gzeukdflyodxiwxzrleg ( java.awt.Graphics g ) {} <s> protected void gzeukdflyodxiwxzrleg ( java.awt.Graphics g ) {} <s> Fixed refresh problem
fix_before_refactoring: protected void paintComponent ( java.awt.Graphics g ) { super . paintComponent ( g ) ; }
fix_after_refactoring: protected void gzeukdflyodxiwxzrleg ( java.awt.Graphics g ) { super . gzeukdflyodxiwxzrleg ( g ) ; }
× fix_prediction_before: protected void paintComponent ( java.awt.Graphics g ) {}
× fix_prediction_after: public void gzeukoddfzrdflegrzleg java.awt.Graphics final void refresh ( java.awt.Graphics g ) {}

line_index: 1502
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "forgotPassword/{forgotPassword}/email/{email}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.Integer forgotPassword ( @ org.springframework.web.bind.annotation.PathVariable ( value = "email" ) java.lang.String email , @ org.springframework.web.bind.annotation.PathVariable ( value = "forgotPassword" ) java.lang.String forgotPassword ) { if ( forgotPassword . equalsIgnoreCase ( "true" ) ) { return application . forgotPassword ( email ) ; } return 0 ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "forgotPassword/{forgotPassword}/email/{email}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.Integer forgotPassword ( @ org.springframework.web.bind.annotation.PathVariable ( value = "email" ) java.lang.String email , @ org.springframework.web.bind.annotation.PathVariable ( value = "forgotPassword" ) java.lang.String forgotPassword ) { if ( forgotPassword . equalsIgnoreCase ( "true" ) ) { return application . forgotPassword ( email ) ; } return 0 ; } <s> resolved build issues
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "yosudjkmwrkjcxmpvsuu/{yosudjkmwrkjcxmpvsuu}/email/{email}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.Integer yosudjkmwrkjcxmpvsuu ( @ org.springframework.web.bind.annotation.PathVariable ( value = "email" ) java.lang.String email , @ org.springframework.web.bind.annotation.PathVariable ( value = "yosudjkmwrkjcxmpvsuu" ) java.lang.String yosudjkmwrkjcxmpvsuu ) { if ( yosudjkmwrkjcxmpvsuu . equalsIgnoreCase ( "true" ) ) { return application . yosudjkmwrkjcxmpvsuu ( email ) ; } return 0 ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "yosudjkmwrkjcxmpvsuu/{yosudjkmwrkjcxmpvsuu}/email/{email}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.Integer yosudjkmwrkjcxmpvsuu ( @ org.springframework.web.bind.annotation.PathVariable ( value = "email" ) java.lang.String email , @ org.springframework.web.bind.annotation.PathVariable ( value = "yosudjkmwrkjcxmpvsuu" ) java.lang.String yosudjkmwrkjcxmpvsuu ) { if ( yosudjkmwrkjcxmpvsuu . equalsIgnoreCase ( "true" ) ) { return application . yosudjkmwrkjcxmpvsuu ( email ) ; } return 0 ; } <s> resolved build issues
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "forgotPassword/{forgotPassword}/email/{email}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.Integer forgotPassword ( @ org.springframework.web.bind.annotation.PathVariable ( value = "email" ) java.lang.String email , @ org.springframework.web.bind.annotation.PathVariable ( value = "forgotPassword" ) boolean forgotPassword ) { if ( forgotPassword ) { return application . forgotPassword ( email ) ; } return 0 ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "yosudjkmwrkjcxmpvsuu/{yosudjkmwrkjcxmpvsuu}/email/{email}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.Integer yosudjkmwrkjcxmpvsuu ( @ org.springframework.web.bind.annotation.PathVariable ( value = "email" ) java.lang.String email , @ org.springframework.web.bind.annotation.PathVariable ( value = "yosudjkmwrkjcxmpvsuu" ) boolean yosudjkmwrkjcxmpvsuu ) { if ( yosudjkmwrkjcxmpvsuu ) { return application . yosudjkmwrkjcxmpvsuu ( email ) ; } return 0 ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( value = "for/{gotPassword}/email}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String buildPassword ( @ org.springframework.web.bind.annotation.PathVariable ( value = "email" ) java.lang.String email , @ org.springframework.web.bind.annotation.PathVariable ( value = "true" ) java.lang.String email , @ org.springframework.web.bind.annotation.PathVariable ( value = "true" ) java.lang.String emailPassword ) { if ( applicationPassword . equalsIgnoreCase ( "email" ) ) { return "got" ; } return "email" ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = "yudos" ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.Stringjk ( @ org.springframework.web.bind.annotation.PathVariable ( value = "email" ) java.lang.String email , @ org.springframework.web.bind.annotation.PathVariable ( value = "mos" ) java.lang.String ykjk , @ org.springframework.web.bind.annotation.PathVariable ( value = "email" ) java.lang.String email ) { if ( ( application ) != null ) { return org.mosmjksujkuoskosmujkudxsujkuoskosvuoskxmpxmpxmpxmpxmpxmpxvu.mxmpxmpxmpxmpxvuosmxmxmpxmpxmp" ; } return "email" + ykjktrue" ; }

line_index: 1503
bug_before_refactoring: public static < T > mnm.mods.util.config.SettingMap < T > map () { return new mnm.mods.util.config.SettingMap < T > () ; } <s> public static < T > mnm.mods.util.config.SettingMap < T > map () { return new mnm.mods.util.config.SettingMap < T > () ; } <s> Fix generics settings errors
bug_after_refactoring: public static < T > mnm.mods.util.config.SettingMap < T > whxdswjicenezissvcfp () { return new mnm.mods.util.config.SettingMap < T > () ; } <s> public static < T > mnm.mods.util.config.SettingMap < T > whxdswjicenezissvcfp () { return new mnm.mods.util.config.SettingMap < T > () ; } <s> Fix generics settings errors
fix_before_refactoring: public static < T > mnm.mods.util.config.SettingMap < T > map ( java.lang.Class < T > type ) { return new mnm.mods.util.config.SettingMap < T > ( type ) ; }
fix_after_refactoring: public static < T > mnm.mods.util.config.SettingMap < T > whxdswjicenezissvcfp ( java.lang.Class < T > type ) { return new mnm.mods.util.config.SettingMap < T > ( type ) ; }
× fix_prediction_before: public static < T > mnm.mods.util.config.SettingMap < T > map () { return new mnm.mods.util.config.SettingMap () ; }
× fix_prediction_after: public static mnm.mods.util.config.SettingMap < T > wh () { return new mnm.mods.utiliss.config.SettingMap () ; }

line_index: 1504
bug_before_refactoring: public void subKarma ( int karmaAmount ) { mKarma -= karmaAmount ; } <s> public void subKarma ( int karmaAmount ) { mKarma -= karmaAmount ; } <s> Fixed bug if karma/nuyen edittext was blank when trying to add/sub. Fixed letting karma/nuyen go negative. Changed blank character name warning from toast to edittext error
bug_after_refactoring: public void ftmnwgmriiqcgabzbzjf ( int karmaAmount ) { mKarma -= karmaAmount ; } <s> public void ftmnwgmriiqcgabzbzjf ( int karmaAmount ) { mKarma -= karmaAmount ; } <s> Fixed bug if karma/nuyen edittext was blank when trying to add/sub. Fixed letting karma/nuyen go negative. Changed blank character name warning from toast to edittext error
fix_before_refactoring: public void subKarma ( int karmaAmount ) { if ( karmaAmount > ( mKarma ) ) { mKarma = 0 ; } else { mKarma -= karmaAmount ; } }
fix_after_refactoring: public void ftmnwgmriiqcgabzbzjf ( int karmaAmount ) { if ( karmaAmount > ( mKarma ) ) { mKarma = 0 ; } else { mKarma -= karmaAmount ; } }
× fix_prediction_before: public java.lang.String subK ( int mAmount ) { return mKenAmount -= editAmount ; }
× fix_prediction_after: public void fnwriz ( int mKab ) { for ( int i = 0 ; i < ( mKyf ) ; i ++ ) { if ( ( mKab ) > 0 ) { mAmount -= i ; } }

line_index: 1506
bug_before_refactoring: @ java.lang.Override public void effect ( Player current ) { current . gainMoney ( 200 ) ; } <s> @ java.lang.Override public void effect ( Player current ) { current . gainMoney ( 200 ) ; } <s> Fixed some bugs
bug_after_refactoring: @ java.lang.Override public void ssietnecjftawxsvpwzt ( Player current ) { current . gainMoney ( 200 ) ; } <s> @ java.lang.Override public void ssietnecjftawxsvpwzt ( Player current ) { current . gainMoney ( 200 ) ; } <s> Fixed some bugs
fix_before_refactoring: @ java.lang.Override public boolean effect ( Player current ) { current . gainMoney ( 200 ) ; return true ; }
fix_after_refactoring: @ java.lang.Override public boolean ssietnecjftawxsvpwzt ( Player current ) { current . gainMoney ( 200 ) ; return true ; }
× fix_prediction_before: @ java.lang.Override public void effect ( Player current ) {}
× fix_prediction_after: @ java.lang.Override public void ssietjecawfttjft ( Player current ) {}

line_index: 1507
bug_before_refactoring: public void setGivenName ( java.lang.String givenName ) { this . givenName = ( givenName . substring ( 0 , 1 ) . toUpperCase () ) + ( givenName . substring ( 1 ) ) ; } <s> public void setGivenName ( java.lang.String givenName ) { this . givenName = ( givenName . substring ( 0 , 1 ) . toUpperCase () ) + ( givenName . substring ( 1 ) ) ; } <s> Fix last bugs
bug_after_refactoring: public void ukmxxihoimwtwyqawoyq ( java.lang.String givenName ) { this . givenName = ( givenName . substring ( 0 , 1 ) . toUpperCase () ) + ( givenName . substring ( 1 ) ) ; } <s> public void ukmxxihoimwtwyqawoyq ( java.lang.String givenName ) { this . givenName = ( givenName . substring ( 0 , 1 ) . toUpperCase () ) + ( givenName . substring ( 1 ) ) ; } <s> Fix last bugs
fix_before_refactoring: public void setGivenName ( java.lang.String givenName ) { if ( ! ( givenName . isEmpty () ) ) { this . givenName = ( givenName . substring ( 0 , 1 ) . toUpperCase () ) + ( givenName . substring ( 1 ) ) ; } }
fix_after_refactoring: public void ukmxxihoimwtwyqawoyq ( java.lang.String givenName ) { if ( ! ( givenName . isEmpty () ) ) { this . givenName = ( givenName . substring ( 0 , 1 ) . toUpperCase () ) + ( givenName . substring ( 1 ) ) ; } }
× fix_prediction_before: public void setG ( int givenName ) { this . givenName = givenName . substring ( 0 , ( ( givenName . length () ) + 1 ) ) ; }
× fix_prediction_after: public void uDialog ( int givenName ) { givenName = givenName . substring ( 0 , ( ( givenName . length () ) + 1 ) ) ; }

line_index: 1508
bug_before_refactoring: @ com.google.common.eventbus.Subscribe private void handleLocalModelChangedEvent ( seedu.jobs.commons.events.model.TaskBookChangedEvent abce ) throws seedu.jobs.model.task.UniqueTaskList.IllegalTimeException { latestTaskAddressBook = new seedu.jobs.model.TaskBook ( abce.data ) ; } <s> @ com.google.common.eventbus.Subscribe private void handleLocalModelChangedEvent ( seedu.jobs.commons.events.model.TaskBookChangedEvent abce ) throws seedu.jobs.model.task.UniqueTaskList.IllegalTimeException { latestTaskAddressBook = new seedu.jobs.model.TaskBook ( abce.data ) ; } <s> Fix test error
bug_after_refactoring: @ com.google.common.eventbus.Subscribe private void wstkupkbcbpbowwcypaa ( seedu.jobs.commons.events.model.TaskBookChangedEvent abce ) throws seedu.jobs.model.task.UniqueTaskList.IllegalTimeException { latestTaskAddressBook = new seedu.jobs.model.TaskBook ( abce.data ) ; } <s> @ com.google.common.eventbus.Subscribe private void wstkupkbcbpbowwcypaa ( seedu.jobs.commons.events.model.TaskBookChangedEvent abce ) throws seedu.jobs.model.task.UniqueTaskList.IllegalTimeException { latestTaskAddressBook = new seedu.jobs.model.TaskBook ( abce.data ) ; } <s> Fix test error
fix_before_refactoring: @ com.google.common.eventbus.Subscribe public void handleLocalModelChangedEvent ( seedu.jobs.commons.events.model.TaskBookChangedEvent abce ) throws seedu.jobs.model.task.UniqueTaskList.IllegalTimeException { latestTaskAddressBook = new seedu.jobs.model.TaskBook ( abce.data ) ; }
fix_after_refactoring: @ com.google.common.eventbus.Subscribe public void wstkupkbcbpbowwcypaa ( seedu.jobs.commons.events.model.TaskBookChangedEvent abce ) throws seedu.jobs.model.task.UniqueTaskList.IllegalTimeException { latestTaskAddressBook = new seedu.jobs.model.TaskBook ( abce.data ) ; }
× fix_prediction_before: @ com.google.common.eventbus.Subscribe public void handleLocalModelChangedEvent ( seedu.jobs.model.TaskModel ab ) throws seedu.jobs.commons.events.model.IllegalTaskChangedEvent { latestTaskListChangedEvent = new seedu.jobs.model.task.TaskBookChangedEvent ( ab ) ; }
× fix_prediction_after: @ com.google.common.eventbus.Subscribe public void wup ( ) throws seedu.pbce.model.task.IllegalTaskException { seedu.pbce.model.Task ab = new seedu.jobs.model.task.TimeBook ( seedu.jobs.model.task.TaskList ) ; }

line_index: 1509
bug_before_refactoring: @ java.lang.Override public java.lang.Integer getId () { return key ; } <s> @ java.lang.Override public java.lang.Integer getId () { return key ; } <s> fix refactor issue
bug_after_refactoring: @ java.lang.Override public java.lang.Integer tgvzisyvppqxtfiwoxqd () { return key ; } <s> @ java.lang.Override public java.lang.Integer tgvzisyvppqxtfiwoxqd () { return key ; } <s> fix refactor issue
fix_before_refactoring: @ java.lang.Override public java.lang.Integer key () { return key ; }
fix_after_refactoring: @ java.lang.Override public java.lang.Integer key () { return key ; }
× fix_prediction_before: @ java.lang.Override public java.lang.Integer getId () { return key ; }
× fix_prediction_after: @ java.lang.Override public java.lang.Integerisyzvoxi () { return key ; }

line_index: 1510
bug_before_refactoring: public org.m2latex.mojo.Settings setPatternNeedAnotherLatexRun ( java.lang.String patternNeedAnotherLatexRun ) { this . patternNeedAnotherLatexRun = patternNeedAnotherLatexRun ; return this ; } <s> public org.m2latex.mojo.Settings setPatternNeedAnotherLatexRun ( java.lang.String patternNeedAnotherLatexRun ) { this . patternNeedAnotherLatexRun = patternNeedAnotherLatexRun ; return this ; } <s> @new LatexProcessor.processLatex(File) - added debug logging  above all added a warning    if latex rerun was not executed because of a threshold.  - added setting maxNumReruns which also allows do disable maxReruns    by allowing maxNumReruns==-1  @bugfix    LatexProcessor.runBibtex(File): now it works.  @chg update to java 1.5.
bug_after_refactoring: public org.m2latex.mojo.Settings cirnovvgqfecduzoclrz ( java.lang.String patternNeedAnotherLatexRun ) { this . patternNeedAnotherLatexRun = patternNeedAnotherLatexRun ; return this ; } <s> public org.m2latex.mojo.Settings cirnovvgqfecduzoclrz ( java.lang.String patternNeedAnotherLatexRun ) { this . patternNeedAnotherLatexRun = patternNeedAnotherLatexRun ; return this ; } <s> @new LatexProcessor.processLatex(File) - added debug logging  above all added a warning    if latex rerun was not executed because of a threshold.  - added setting maxNumReruns which also allows do disable maxReruns    by allowing maxNumReruns==-1  @bugfix    LatexProcessor.runBibtex(File): now it works.  @chg update to java 1.5.
fix_before_refactoring: public org.m2latex.mojo.Settings setPatternNeedAnotherLatexRun ( java.lang.String pattern ) { this . patternNeedAnotherLatexRun = pattern ; return this ; }
fix_after_refactoring: public org.m2latex.mojo.Settings cirnovvgqfecduzoclrz ( java.lang.String pattern ) { this . patternNeedAnotherLatexRun = pattern ; return this ; }
× fix_prediction_before: public void setPatternNeedAnotherLatexRun ( java.lang.String pattern ) { this . patternNeedAnotherLatexRun = pattern ; }
× fix_prediction_after: @ java.lang.Override public void update ( java.lang.String pattern ) { this . maxAnotherLatexRun = pattern ; }

line_index: 1511
bug_before_refactoring: public void read ( java.lang.String id ) ; <s> public void read ( java.lang.String id ) ; <s> fix compile issues
bug_after_refactoring: public void qfwfznuqvzduiqxlpbii ( java.lang.String id ) ; <s> public void qfwfznuqvzduiqxlpbii ( java.lang.String id ) ; <s> fix compile issues
fix_before_refactoring: public void delete ( java.lang.String id ) {}
fix_after_refactoring: public void delete ( java.lang.String id ) {}
× fix_prediction_before: @ java.lang.Override public void read ( java.lang.String id ) {}
× fix_prediction_after: public void qfwfzq ( java.lang.String id ) ;

line_index: 1512
bug_before_refactoring: double getValue () { return value ; } <s> double getValue () { return value ; } <s> fixed zero after colon bug
bug_after_refactoring: double xsjtllyiqpwcumfgkopj () { return value ; } <s> double xsjtllyiqpwcumfgkopj () { return value ; } <s> fixed zero after colon bug
fix_before_refactoring: public java.lang.String toString () { return value ; }
fix_after_refactoring: public java.lang.String toString () { return value ; }
× fix_prediction_before: double getValue () { if ( ( value ) == 0 ) { return 0 ; } else { return value ; } }
× fix_prediction_after: doublejtltllykjfg () { return value ; }

line_index: 1513
bug_before_refactoring: public void windowClosing ( java.awt.event.WindowEvent windowEvent ) { new GUI.spellingWindow.quitPopUp () ; } <s> public void windowClosing ( java.awt.event.WindowEvent windowEvent ) { new GUI.spellingWindow.quitPopUp () ; } <s> bug fixes to game new method in backend
bug_after_refactoring: public void mhbvngqscptnqsrsairm ( java.awt.event.WindowEvent windowEvent ) { new GUI.spellingWindow.quitPopUp () ; } <s> public void mhbvngqscptnqsrsairm ( java.awt.event.WindowEvent windowEvent ) { new GUI.spellingWindow.quitPopUp () ; } <s> bug fixes to game new method in backend
fix_before_refactoring: public void windowClosing ( java.awt.event.WindowEvent windowEvent ) {}
fix_after_refactoring: public void mhbvngqscptnqsrsairm ( java.awt.event.WindowEvent windowEvent ) {}
× fix_prediction_before: public void windowClosing ( java.awt.event.WindowEvent window ) { new GUI.spelling.PopUpEvent ( false ) ; }
× fix_prediction_after: @ java.lang.Override public void setValue ( java.awt.event.WindowEvent window ) { new GUI.scvqqs.mptn.PopUpEvent ( false ) ; }

line_index: 1514
bug_before_refactoring: public boolean refreshList ( android.view.MenuItem item ) { new me.blueland.metro.activity.BusStationPre.BusController () . execute ( stationCode ) ; return true ; } <s> public boolean refreshList ( android.view.MenuItem item ) { new me.blueland.metro.activity.BusStationPre.BusController () . execute ( stationCode ) ; return true ; } <s> fix sliding meun bug in BusStationPre
bug_after_refactoring: public boolean mwqxalxujawemcyrvvmn ( android.view.MenuItem item ) { new me.blueland.metro.activity.BusStationPre.BusController () . execute ( stationCode ) ; return true ; } <s> public boolean mwqxalxujawemcyrvvmn ( android.view.MenuItem item ) { new me.blueland.metro.activity.BusStationPre.BusController () . execute ( stationCode ) ; return true ; } <s> fix sliding meun bug in BusStationPre
fix_before_refactoring: public boolean refreshList ( android.view.MenuItem item ) { return true ; }
fix_after_refactoring: public boolean mwqxalxujawemcyrvvmn ( android.view.MenuItem item ) { return true ; }
× fix_prediction_before: public boolean refreshList ( android.view.MenuItem item ) { new me.bland.metuel.activity.StationController.PreStation () . execute ( item ) ; return true ; }
× fix_prediction_after: public boolean mwqxujal.cyrvvm.nrobl.activity.PreStationController execute ( android.view.MenuItem item ) { new meqxuj.cyawn.cyrvvm.activity.PreStationController ( item ) . execute () ; return true ; }

line_index: 1515
bug_before_refactoring: private static native void _imaqOverlayClosedContour ( long image , long points , int numPoints , long color , int drawMode , long group ) ; <s> private static native void _imaqOverlayClosedContour ( long image , long points , int numPoints , long color , int drawMode , long group ) ; <s> Fixing bugs
bug_after_refactoring: private static native void wfkycwzoovdsgrxllmpl ( long image , long points , int numPoints , long color , int drawMode , long group ) ; <s> private static native void wfkycwzoovdsgrxllmpl ( long image , long points , int numPoints , long color , int drawMode , long group ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqOverlayClosedContour ( long image , long points , int numPoints , long color , int drawMode , long group ) {}
fix_after_refactoring: private static void wfkycwzoovdsgrxllmpl ( long image , long points , int numPoints , long color , int drawMode , long group ) {}
× fix_prediction_before: private static void _imaqOverlayClosedContour ( long image , long points , int numPoints , long color , int drawMode , long color ) {}
× fix_prediction_after: private static void wfkzycoozwoo ( long image , long points , int numPoints , int group ) {}

line_index: 1516
bug_before_refactoring: @ java.lang.Override public io.reactivex.Observable apply ( java.lang.Throwable throwable ) { return io.reactivex.Observable . error ( this . asRetrofitException ( throwable ) ) ; } <s> @ java.lang.Override public io.reactivex.Observable apply ( java.lang.Throwable throwable ) { return io.reactivex.Observable . error ( this . asRetrofitException ( throwable ) ) ; } <s> Fixed tests  fixed our RxErrorHandlingCallAdapterFactory (hopefully)
bug_after_refactoring: @ java.lang.Override public io.reactivex.Observable exsevqzttkzwbkcisnjq ( java.lang.Throwable throwable ) { return io.reactivex.Observable . error ( this . asRetrofitException ( throwable ) ) ; } <s> @ java.lang.Override public io.reactivex.Observable exsevqzttkzwbkcisnjq ( java.lang.Throwable throwable ) { return io.reactivex.Observable . error ( this . asRetrofitException ( throwable ) ) ; } <s> Fixed tests  fixed our RxErrorHandlingCallAdapterFactory (hopefully)
fix_before_refactoring: @ java.lang.Override public io.reactivex.Observable apply ( java.lang.Throwable throwable ) { return io.reactivex.Observable . error ( asRetrofitException ( throwable ) ) ; }
fix_after_refactoring: @ java.lang.Override public io.reactivex.Observable exsevqzttkzwbkcisnjq ( java.lang.Throwable throwable ) { return io.reactivex.Observable . error ( asRetrofitException ( throwable ) ) ; }
× fix_prediction_before: @ java.lang.Override public io.reactivex.Observable apply ( java.lang.Throwable throwable ) { return this . asCall ( throwable ) ; }
× fix_prediction_after: @ java.lang.Override public io.reactivex.Observable ex ( java.lang.Throwable throwable ) { return this . asCall ( throwable ) ; }

line_index: 1518
bug_before_refactoring: @ java.lang.Override public javafx.beans.value.ObservableValue < java.lang.Number > call ( javafx.scene.control.TreeTableColumn.CellDataFeatures < com.comino.flight.tabs.inspector.MAVInspectorTab.Dataset , java.lang.Number > param ) { return param . getValue () . getValue () . noProperty () ; } <s> @ java.lang.Override public javafx.beans.value.ObservableValue < java.lang.Number > call ( javafx.scene.control.TreeTableColumn.CellDataFeatures < com.comino.flight.tabs.inspector.MAVInspectorTab.Dataset , java.lang.Number > param ) { return param . getValue () . getValue () . noProperty () ; } <s> Inspector bugfixes
bug_after_refactoring: @ java.lang.Override public javafx.beans.value.ObservableValue < java.lang.Number > koywftercttkelgqikqm ( javafx.scene.control.TreeTableColumn.CellDataFeatures < com.comino.flight.tabs.inspector.MAVInspectorTab.Dataset , java.lang.Number > param ) { return param . getValue () . getValue () . noProperty () ; } <s> @ java.lang.Override public javafx.beans.value.ObservableValue < java.lang.Number > koywftercttkelgqikqm ( javafx.scene.control.TreeTableColumn.CellDataFeatures < com.comino.flight.tabs.inspector.MAVInspectorTab.Dataset , java.lang.Number > param ) { return param . getValue () . getValue () . noProperty () ; } <s> Inspector bugfixes
fix_before_refactoring: @ java.lang.Override public javafx.beans.value.ObservableValue < java.lang.String > call ( javafx.scene.control.TreeTableColumn.CellDataFeatures < com.comino.flight.tabs.inspector.MAVInspectorTab.Dataset , java.lang.String > param ) { return param . getValue () . getValue () . getValue () ; }
fix_after_refactoring: @ java.lang.Override public javafx.beans.value.ObservableValue < java.lang.String > koywftercttkelgqikqm ( javafx.scene.control.TreeTableColumn.CellDataFeatures < com.comino.flight.tabs.inspector.MAVInspectorTab.Dataset , java.lang.String > param ) { return param . getValue () . getValue () . getValue () ; }
× fix_prediction_before: @ java.lang.Override public javafx.beans.ObservableValue < java.lang.Number > call ( javafx.scene.control.TreeCell < java.lang.Number > param ) { return no.flightino.com.inspector.tabs.MAVinData . getValueProperty () . getValue () ; }
× fix_prediction_after: @ java.lang.Override public javafx.beans.ObservableValue < java.lang.Number < java.lang.Number > getValue () { return javafx.scene.control.Data . paramVikspector ( param . getValue () , param . getValue () ) ; }

line_index: 1519
bug_before_refactoring: private void initialize () { us.ihmc.tools.io.printing.PrintTools . debug ( us.ihmc.humanoidBehaviors.dispatcher.BehaviorDispatcher.DEBUG , this , ( "Initializing " + ( stateMachine . getCurrentStateEnum () . name () ) ) ) ; stateMachine . initialize () ; } <s> private void initialize () { us.ihmc.tools.io.printing.PrintTools . debug ( us.ihmc.humanoidBehaviors.dispatcher.BehaviorDispatcher.DEBUG , this , ( "Initializing " + ( stateMachine . getCurrentStateEnum () . name () ) ) ) ; stateMachine . initialize () ; } <s> NRI-63: Fix behavior debug statements.
bug_after_refactoring: private void oxsfymobjlxazwbderfv () { us.ihmc.tools.io.printing.PrintTools . debug ( us.ihmc.humanoidBehaviors.dispatcher.BehaviorDispatcher.DEBUG , this , ( "Initializing " + ( stateMachine . getCurrentStateEnum () . name () ) ) ) ; stateMachine . oxsfymobjlxazwbderfv () ; } <s> private void oxsfymobjlxazwbderfv () { us.ihmc.tools.io.printing.PrintTools . debug ( us.ihmc.humanoidBehaviors.dispatcher.BehaviorDispatcher.DEBUG , this , ( "Initializing " + ( stateMachine . getCurrentStateEnum () . name () ) ) ) ; stateMachine . oxsfymobjlxazwbderfv () ; } <s> NRI-63: Fix behavior debug statements.
fix_before_refactoring: private void initialize () { stateMachine . initialize () ; }
fix_after_refactoring: private void oxsfymobjlxazwbderfv () { stateMachine . oxsfymobjlxazwbderfv () ; }
× fix_prediction_before: private void initialize () { us.ihmc.tools.printing.PrintingTools . initialize ( this , state . getCurrentState () ) ; initializeMachine () ; }
× fix_prediction_after: private void oxsfymobj () { us.ihmc.xwb.tools.derx.PrintingTools . debug ( this , state . getCurrentState () , id ) ; }

line_index: 1521
bug_before_refactoring: public static java.util.Date makeUpperBound ( java.util.Date endDate ) { return new org.joda.time.DateTime ( endDate ) . withTime ( 23 , 59 , 59 , 0 ) . toDate () ; } <s> public static java.util.Date makeUpperBound ( java.util.Date endDate ) { return new org.joda.time.DateTime ( endDate ) . withTime ( 23 , 59 , 59 , 0 ) . toDate () ; } <s> -fix lower and upper bound bug in event model -refactor event model -fix date object event model test
bug_after_refactoring: public static java.util.Date gqbrbiozkiwvfodcmyge ( java.util.Date endDate ) { return new org.joda.time.DateTime ( endDate ) . withTime ( 23 , 59 , 59 , 0 ) . toDate () ; } <s> public static java.util.Date gqbrbiozkiwvfodcmyge ( java.util.Date endDate ) { return new org.joda.time.DateTime ( endDate ) . withTime ( 23 , 59 , 59 , 0 ) . toDate () ; } <s> -fix lower and upper bound bug in event model -refactor event model -fix date object event model test
fix_before_refactoring: private static org.joda.time.DateTime makeUpperBound ( java.util.Date endDate ) { return new org.joda.time.DateTime ( endDate ) . withTime ( 23 , 59 , 59 , 0 ) ; }
fix_after_refactoring: private static org.joda.time.DateTime gqbrbiozkiwvfodcmyge ( java.util.Date endDate ) { return new org.joda.time.DateTime ( endDate ) . withTime ( 23 , 59 , 59 , 0 ) ; }
× fix_prediction_before: private static java.util.Date make 37 ( java.util.Date endDate ) { return new org.joda.time.DateTime ( endDate , endDate , 0 ) ; }
× fix_prediction_after: public static java.util.Date gqbrki ( java.util.Date endDate ) { return org.bioqcjoda.mywodge.time.DateTime . boundTime ( endDate , ( ( endDate . size () ) - 59 ) , 0 ) ; }

line_index: 1522
bug_before_refactoring: public void solve () { solveH ( 0 , 0 , 1 ) ; } <s> public void solve () { solveH ( 0 , 0 , 1 ) ; } <s> classwork  find and fix bug  see what's happening (v2)
bug_after_refactoring: public void rqymdccelkxmqszirpmt () { rqymdccelkxmqszirpmtH ( 0 , 0 , 1 ) ; } <s> public void rqymdccelkxmqszirpmt () { rqymdccelkxmqszirpmtH ( 0 , 0 , 1 ) ; } <s> classwork  find and fix bug  see what's happening (v2)
fix_before_refactoring: public void solve () { solveH ( 0 , 0 , 0 ) ; }
fix_after_refactoring: public void rqymdccelkxmqszirpmt () { rqymdccelkxmqszirpmtH ( 0 , 0 , 0 ) ; }
× fix_prediction_before: public void solve () { solveH ( 0 , 1 , 0 ) ; }
× fix_prediction_after: public void solidymdelcckqs () {mdypmtpmtpmtpmt () ; }

line_index: 1523
bug_before_refactoring: public void setUniforms ( engine.rendering.Shader s ) { s . setUniform ( "time" , counter ) ; s . setUniform ( "frequency" , 5.0F ) ; s . setUniform ( "amplitude" , 0.01F ) ; } <s> public void setUniforms ( engine.rendering.Shader s ) { s . setUniform ( "time" , counter ) ; s . setUniform ( "frequency" , 5.0F ) ; s . setUniform ( "amplitude" , 0.01F ) ; } <s> Made RectRenderer render based on pixel coords; fixed shader bug
bug_after_refactoring: public void sdbqnmrcjzxccqzwvorc ( engine.rendering.Shader s ) { s . setUniform ( "time" , counter ) ; s . setUniform ( "frequency" , 5.0F ) ; s . setUniform ( "amplitude" , 0.01F ) ; } <s> public void sdbqnmrcjzxccqzwvorc ( engine.rendering.Shader s ) { s . setUniform ( "time" , counter ) ; s . setUniform ( "frequency" , 5.0F ) ; s . setUniform ( "amplitude" , 0.01F ) ; } <s> Made RectRenderer render based on pixel coords; fixed shader bug
fix_before_refactoring: public void start () {}
fix_after_refactoring: public void start () {}
× fix_prediction_before: public void setUniforms ( engine.Uniform s ) { engine . setUniform ( "time" , 5.0 ) ; }
× fix_prediction_after: public void sdbqrcqjrcz.xcc.cqw.time.Shader ( engine ) { engine . setUniform ( 5.0 ) ; sz . setUniform ( "time" , 0.01 , 0.01 ) ; }

line_index: 1524
bug_before_refactoring: @ javax.inject.Inject public void configureScheduler ( @ edu.dfci.cccb.mev.dataset.domain.r.annotation.Rserve int concurrency ) { dispatcher = java.util.concurrent.Executors . newFixedThreadPool ( 2 ) ; } <s> @ javax.inject.Inject public void configureScheduler ( @ edu.dfci.cccb.mev.dataset.domain.r.annotation.Rserve int concurrency ) { dispatcher = java.util.concurrent.Executors . newFixedThreadPool ( 2 ) ; } <s> RDispatcher: fix concerency issue  increase transfer buffer size
bug_after_refactoring: @ javax.inject.Inject public void bpzawnfljkrkpaitiman ( @ edu.dfci.cccb.mev.dataset.domain.r.annotation.Rserve int concurrency ) { dispatcher = java.util.concurrent.Executors . newFixedThreadPool ( 2 ) ; } <s> @ javax.inject.Inject public void bpzawnfljkrkpaitiman ( @ edu.dfci.cccb.mev.dataset.domain.r.annotation.Rserve int concurrency ) { dispatcher = java.util.concurrent.Executors . newFixedThreadPool ( 2 ) ; } <s> RDispatcher: fix concerency issue  increase transfer buffer size
fix_before_refactoring: @ javax.inject.Inject public void configureScheduler ( @ edu.dfci.cccb.mev.dataset.domain.r.annotation.Rserve int concurrency ) { dispatcher = java.util.concurrent.Executors . newFixedThreadPool ( concurrency ) ; }
fix_after_refactoring: @ javax.inject.Inject public void bpzawnfljkrkpaitiman ( @ edu.dfci.cccb.mev.dataset.domain.r.annotation.Rserve int concurrency ) { dispatcher = java.util.concurrent.Executors . newFixedThreadPool ( concurrency ) ; }
× fix_prediction_before: @ javax.inject.Executors public void configureScheduler ( @ javax.annotation.Nullable edu.dfci.mccevserve.mccr.datasetserve.domain.util.Scheduler dispatcher ) { dispatcher = ( dispatcher == null ) ? null : new java.util.concurrent.Executors ( 2 ) ; }
× fix_prediction_after: @ javax.inject.Executors public void bpawnzawnkjiman ( @ javax.annotation.Nullable int buffer ) { dispatcherawn = new java.util.concurrent.Executors ( 2 ) ; }

line_index: 1525
bug_before_refactoring: public boolean atacar ( business.entities.Personaje oponente , int energiaUtilizar ) throws util.ApplicationException { if ( energiaUtilizar > ( getEnergiaActual () ) ) { throw new util.ApplicationException ( "Energía insuficiente para realizar el ataque" ) ; } usarEnergia ( energiaUtilizar ) ; return oponente . recibirAtaque ( energia ) ; } <s> public boolean atacar ( business.entities.Personaje oponente , int energiaUtilizar ) throws util.ApplicationException { if ( energiaUtilizar > ( getEnergiaActual () ) ) { throw new util.ApplicationException ( "Energía insuficiente para realizar el ataque" ) ; } usarEnergia ( energiaUtilizar ) ; return oponente . recibirAtaque ( energia ) ; } <s> Bugfix lógica de combate.
bug_after_refactoring: public boolean burnpagjfmiuyyqhznam ( business.entities.Personaje oponente , int energiaUtilizar ) throws util.ApplicationException { if ( energiaUtilizar > ( getEnergiaActual () ) ) { throw new util.ApplicationException ( "Energía insuficiente para realizar el ataque" ) ; } usarEnergia ( energiaUtilizar ) ; return oponente . recibirAtaque ( energia ) ; } <s> public boolean burnpagjfmiuyyqhznam ( business.entities.Personaje oponente , int energiaUtilizar ) throws util.ApplicationException { if ( energiaUtilizar > ( getEnergiaActual () ) ) { throw new util.ApplicationException ( "Energía insuficiente para realizar el ataque" ) ; } usarEnergia ( energiaUtilizar ) ; return oponente . recibirAtaque ( energia ) ; } <s> Bugfix lógica de combate.
fix_before_refactoring: public boolean atacar ( business.entities.Personaje oponente , int energia ) throws util.ApplicationException { if ( energia > ( getEnergiaActual () ) ) { throw new util.ApplicationException ( "Energía insuficiente para realizar el ataque" ) ; } usarEnergia ( energia ) ; return oponente . recibirAtaque ( energia ) ; }
fix_after_refactoring: public boolean burnpagjfmiuyyqhznam ( business.entities.Personaje oponente , int energia ) throws util.ApplicationException { if ( energia > ( getEnergiaActual () ) ) { throw new util.ApplicationException ( "Energía insuficiente para realizar el ataque" ) ; } usarEnergia ( energia ) ; return oponente . recibirAtaque ( energia ) ; }
× fix_prediction_before: public boolean atacar ( businessentities.Person o , int enponentia ) throws utilia.UtilException { if ( enponentizarApplication . getEnizia () ) { throw new util.EnarApplicationException ( "Enar kar karia enibia" ) ; } return elizarApplicationUtil . getEnizar ( real ) ; }
× fix_prediction_after: public boolean ( int business ) throws de.arfmiqyyu.namiziaiaia.entities.PersonUtilException { if ( enponent ) { throw new util.inarApplicationException ( "Enear alizia en4hz enigia" ) ; } return ( ( int ) ( utilpagizUtil . getEnizia ( business ) ) ) ; }

line_index: 1526
bug_before_refactoring: @ java.lang.Override public java.util.List < ru.javawebinar.topjava.model.Meal > getFiltered ( int userId , java.time.LocalDate localDateStart , java.time.LocalDate localDateEnd , java.time.LocalTime localTimeStart , java.time.LocalTime localTimeEnd ) { return repository . getFiltered ( userId , localDateStart , localDateEnd , localTimeStart , localTimeEnd ) ; } <s> @ java.lang.Override public java.util.List < ru.javawebinar.topjava.model.Meal > getFiltered ( int userId , java.time.LocalDate localDateStart , java.time.LocalDate localDateEnd , java.time.LocalTime localTimeStart , java.time.LocalTime localTimeEnd ) { return repository . getFiltered ( userId , localDateStart , localDateEnd , localTimeStart , localTimeEnd ) ; } <s> bugfix for filter
bug_after_refactoring: @ java.lang.Override public java.util.List < ru.javawebinar.topjava.model.Meal > fgvhlvrxdgayecyfhudv ( int userId , java.time.LocalDate localDateStart , java.time.LocalDate localDateEnd , java.time.LocalTime localTimeStart , java.time.LocalTime localTimeEnd ) { return repository . fgvhlvrxdgayecyfhudv ( userId , localDateStart , localDateEnd , localTimeStart , localTimeEnd ) ; } <s> @ java.lang.Override public java.util.List < ru.javawebinar.topjava.model.Meal > fgvhlvrxdgayecyfhudv ( int userId , java.time.LocalDate localDateStart , java.time.LocalDate localDateEnd , java.time.LocalTime localTimeStart , java.time.LocalTime localTimeEnd ) { return repository . fgvhlvrxdgayecyfhudv ( userId , localDateStart , localDateEnd , localTimeStart , localTimeEnd ) ; } <s> bugfix for filter
fix_before_refactoring: @ java.lang.Override public java.util.List < ru.javawebinar.topjava.model.Meal > getFiltered ( int userId , java.time.LocalDate localDateStart , java.time.LocalDate localDateEnd ) { return repository . getFiltered ( userId , localDateStart , localDateEnd ) ; }
fix_after_refactoring: @ java.lang.Override public java.util.List < ru.javawebinar.topjava.model.Meal > fgvhlvrxdgayecyfhudv ( int userId , java.time.LocalDate localDateStart , java.time.LocalDate localDateEnd ) { return repository . fgvhlvrxdgayecyfhudv ( userId , localDateStart , localDateEnd ) ; }
× fix_prediction_before: @ java.lang.Override public java.util.List < ru.javawebinar.topjava.model.Meal > getFiltered ( int localTimeStart , java.time.LocalDate localTimeStart , java.time.LocalDate localTimeStart , java.time.LocalDate localEnd ) { return localMeined ( localStart , localEnd , localEnd , localEnd ) ; }
× fix_prediction_after: @ java.lang.Override public java.util.List < ru.javawebinar.topjava.model.Meal > localMeal ( java.time.LocalDate localTimeStart , java.time.LocalDate localTimeStart , int userId , java.time.LocalDate localEnd ) { return java.lang.LocalDate . format ( localTimeStart , localTimeStart , localEnd ) ; }

line_index: 1527
bug_before_refactoring: public void connectServer () { mServerConnector = cn.iotguard.common.socket.ServerConnector . getInstance () ; mServerConnector . connect ( cn.iotguard.sce.app.AndroidApplication.HOST_NAME , cn.iotguard.sce.app.AndroidApplication.HOST_PORT , this ) ; } <s> public void connectServer () { mServerConnector = cn.iotguard.common.socket.ServerConnector . getInstance () ; mServerConnector . connect ( cn.iotguard.sce.app.AndroidApplication.HOST_NAME , cn.iotguard.sce.app.AndroidApplication.HOST_PORT , this ) ; } <s> fix sce bug
bug_after_refactoring: public void mynisnuqbvztekvfzygv () { mServerConnector = cn.iotguard.common.socket.ServerConnector . getInstance () ; mServerConnector . connect ( cn.iotguard.sce.app.AndroidApplication.HOST_NAME , cn.iotguard.sce.app.AndroidApplication.HOST_PORT , this ) ; } <s> public void mynisnuqbvztekvfzygv () { mServerConnector = cn.iotguard.common.socket.ServerConnector . getInstance () ; mServerConnector . connect ( cn.iotguard.sce.app.AndroidApplication.HOST_NAME , cn.iotguard.sce.app.AndroidApplication.HOST_PORT , this ) ; } <s> fix sce bug
fix_before_refactoring: public void connectServer () { mServerConnector = cn.iotguard.common.socket.ServerConnector . getInstance ( this ) ; mServerConnector . connect ( cn.iotguard.sce.app.AndroidApplication.HOST_NAME , cn.iotguard.sce.app.AndroidApplication.HOST_PORT ) ; }
fix_after_refactoring: public void mynisnuqbvztekvfzygv () { mServerConnector = cn.iotguard.common.socket.ServerConnector . getInstance ( this ) ; mServerConnector . connect ( cn.iotguard.sce.app.AndroidApplication.HOST_NAME , cn.iotguard.sce.app.AndroidApplication.HOST_PORT ) ; }
× fix_prediction_before: private void connectServer () { if ( ( mServer ) != null ) { mServerConnector = cn.iotguard.common.socketServer . getInstance () ; mServer . connect ( this , cn.iotguard.app.common.AndroidConnector.HOST_NAME_HOST , cn.iotguard.app.common.AndroidConnector.HOST_NAME_PORT ) ; } }
× fix_prediction_after: private void mynisnu ( android.content.Context context ) { if ( ( mServer ) != null ) { cn.nisqb.iot.vygz.common.Server . getInstance () = mConnector ; cn.nisqb.iotguardapp.common.AndroidApplication . getInstance () . connect ( this , cn.niszceq.iotguardapp.Application.HOST_PORT , cn.niszceq.iotapp.common.AndroidConnector.HOST_PORT ) ; } }

line_index: 1528
bug_before_refactoring: public org.teavm.classlib.java.lang.TString getName () { return new org.teavm.classlib.java.lang.TString ( name ) ; } <s> public org.teavm.classlib.java.lang.TString getName () { return new org.teavm.classlib.java.lang.TString ( name ) ; } <s> Fix Class.getName(). Fix https://github.com/konsoletyper/teavm/issues/43 Fix Eclipse plugin descriptor  Conflicts: 	teavm-eclipse/teavm-eclipse-core-plugin/META-INF/MANIFEST.MF
bug_after_refactoring: public org.teavm.classlib.java.lang.TString ufefnxowwhepsbwrckof () { return new org.teavm.classlib.java.lang.TString ( name ) ; } <s> public org.teavm.classlib.java.lang.TString ufefnxowwhepsbwrckof () { return new org.teavm.classlib.java.lang.TString ( name ) ; } <s> Fix Class.getName(). Fix https://github.com/konsoletyper/teavm/issues/43 Fix Eclipse plugin descriptor  Conflicts: 	teavm-eclipse/teavm-eclipse-core-plugin/META-INF/MANIFEST.MF
fix_before_refactoring: public org.teavm.classlib.java.lang.TString getName () { return name ; }
fix_after_refactoring: public org.teavm.classlib.java.lang.TString ufefnxowwhepsbwrckof () { return name ; }
× fix_prediction_before: public org.teavm.classlib.lang.TString getName () { return getName () ; }
× fix_prediction_after: public org.teavm.classlib.lang.TString uepef () { return u ; }

line_index: 1529
bug_before_refactoring: private com.kontakt.sdk.android.ble.configuration.ScanMode getScanMode ( int mode , com.facebook.react.bridge.Promise promise ) throws java.lang.Exception { switch ( mode ) { case 0 : return com.kontakt.sdk.android.ble.configuration.ScanMode.LOW_POWER ; case 1 : return com.kontakt.sdk.android.ble.configuration.ScanMode.BALANCED ; case 2 : return com.kontakt.sdk.android.ble.configuration.ScanMode.LOW_LATENCY ; default: throw new java.lang.Exception ( "The value of scanMode has to be either LOW_POWER, BALANCED or LOW_LATENCY" ) ; } } <s> private com.kontakt.sdk.android.ble.configuration.ScanMode getScanMode ( int mode , com.facebook.react.bridge.Promise promise ) throws java.lang.Exception { switch ( mode ) { case 0 : return com.kontakt.sdk.android.ble.configuration.ScanMode.LOW_POWER ; case 1 : return com.kontakt.sdk.android.ble.configuration.ScanMode.BALANCED ; case 2 : return com.kontakt.sdk.android.ble.configuration.ScanMode.LOW_LATENCY ; default: throw new java.lang.Exception ( "The value of scanMode has to be either LOW_POWER, BALANCED or LOW_LATENCY" ) ; } } <s> Add further configurations and fix error with non-working activityCheckConfiguration
bug_after_refactoring: private com.kontakt.sdk.android.ble.configuration.ScanMode ogjrdppngsmqffjuvvug ( int mode , com.facebook.react.bridge.Promise promise ) throws java.lang.Exception { switch ( mode ) { case 0 : return com.kontakt.sdk.android.ble.configuration.ScanMode.LOW_POWER ; case 1 : return com.kontakt.sdk.android.ble.configuration.ScanMode.BALANCED ; case 2 : return com.kontakt.sdk.android.ble.configuration.ScanMode.LOW_LATENCY ; default: throw new java.lang.Exception ( "The value of scanMode has to be either LOW_POWER, BALANCED or LOW_LATENCY" ) ; } } <s> private com.kontakt.sdk.android.ble.configuration.ScanMode ogjrdppngsmqffjuvvug ( int mode , com.facebook.react.bridge.Promise promise ) throws java.lang.Exception { switch ( mode ) { case 0 : return com.kontakt.sdk.android.ble.configuration.ScanMode.LOW_POWER ; case 1 : return com.kontakt.sdk.android.ble.configuration.ScanMode.BALANCED ; case 2 : return com.kontakt.sdk.android.ble.configuration.ScanMode.LOW_LATENCY ; default: throw new java.lang.Exception ( "The value of scanMode has to be either LOW_POWER, BALANCED or LOW_LATENCY" ) ; } } <s> Add further configurations and fix error with non-working activityCheckConfiguration
fix_before_refactoring: private com.kontakt.sdk.android.ble.configuration.ScanMode getScanMode ( int mode ) throws java.lang.Exception { switch ( mode ) { case 0 : return com.kontakt.sdk.android.ble.configuration.ScanMode.LOW_POWER ; case 1 : return com.kontakt.sdk.android.ble.configuration.ScanMode.BALANCED ; case 2 : return com.kontakt.sdk.android.ble.configuration.ScanMode.LOW_LATENCY ; default: throw new java.lang.Exception ( "The value of scanMode has to be either LOW_POWER, BALANCED or LOW_LATENCY" ) ; } }
fix_after_refactoring: private com.kontakt.sdk.android.ble.configuration.ScanMode ogjrdppngsmqffjuvvug ( int mode ) throws java.lang.Exception { switch ( mode ) { case 0 : return com.kontakt.sdk.android.ble.configuration.ScanMode.LOW_POWER ; case 1 : return com.kontakt.sdk.android.ble.configuration.ScanMode.BALANCED ; case 2 : return com.kontakt.sdk.android.ble.configuration.ScanMode.LOW_LATENCY ; default: throw new java.lang.Exception ( "The value of scanMode has to be either LOW_POWER, BALANCED or LOW_LATENCY" ) ; } }
× fix_prediction_before: private com.kontakt.sdk.android.ble.configuration.ScanMode getScanMode ( int mode ) throws java.lang.Exception { switch ( mode ) { case 0 : return com.kontakt.sdk.android.ble.configuration.ScanMode.BALANCED ; case 1 : return com.kontakt.sdk.android.ble.configuration.ScanMode.LOW_POWER_LOWD ; case 2 : return com.kontakt.sdk.android.ble.configuration.ScanMode.LOW_POWER_LOWD ; default: throw new java.lang.Exception ( "The default value of scanWER_LOW" ) ; } }
× fix_prediction_after: private com.kontakt.sdk.android.ble.configuration.ScanMode.ScanMode mode ( int mode ) throws java.lang.Exception { switch ( mode ) { case 0 : return com.kontakt.sdk.android.ble.configuration.ScanMode.Brd_POWER_LOWD ; case 1 : return com.kontakt.sdk.android.ble.configuration.ScanMode.LOW_POWERANCED ; case 2 : return com.kontakt.sdk.android.ble.configuration.ScanMode.LOW_POWER_LOWDANCED ; default: throw new java.lang.Exception ( "The value of Brd, Brd" ) ; } }

line_index: 1531
bug_before_refactoring: private void notify_update ( int update_flag , int arg1 , int arg2 ) { if ( ( mNativeEventListener ) != null ) { mNativeEventListener . notify_update ( update_flag , arg1 , arg2 ) ; } } <s> private void notify_update ( int update_flag , int arg1 , int arg2 ) { if ( ( mNativeEventListener ) != null ) { mNativeEventListener . notify_update ( update_flag , arg1 , arg2 ) ; } } <s> fix compiler error
bug_after_refactoring: private void ntycziqwpyotzknrmtqm ( int update_flag , int arg1 , int arg2 ) { if ( ( mNativeEventListener ) != null ) { mNativeEventListener . ntycziqwpyotzknrmtqm ( update_flag , arg1 , arg2 ) ; } } <s> private void ntycziqwpyotzknrmtqm ( int update_flag , int arg1 , int arg2 ) { if ( ( mNativeEventListener ) != null ) { mNativeEventListener . ntycziqwpyotzknrmtqm ( update_flag , arg1 , arg2 ) ; } } <s> fix compiler error
fix_before_refactoring: private int notify_update ( int update_flag , int arg1 , int arg2 ) { if ( ( mNativeEventListener ) != null ) { return mNativeEventListener . notify_update ( update_flag , arg1 , arg2 ) ; } return - 1 ; }
fix_after_refactoring: private int ntycziqwpyotzknrmtqm ( int update_flag , int arg1 , int arg2 ) { if ( ( mNativeEventListener ) != null ) { return mNativeEventListener . ntycziqwpyotzknrmtqm ( update_flag , arg1 , arg2 ) ; } return - 1 ; }
× fix_prediction_before: private void notify_update ( int update_flag , int arg1 , int arg2 , int arg2 ) { if ( arg1 != null ) { this . notifyEventListener ( arg2 , arg2 , notify_update_flag , arg2 ) ; } }
× fix_prediction_after: private void ntyiqpywotmtzk intzk int arg2 , int arg2 , int arg2 ) { if ( arg1 != null ) { arg2 . updateEventListener ( arg1 , arg2 , ( ( n2 ) != null ) ) ; } }

line_index: 1532
bug_before_refactoring: private static void processWordsByRow ( java.util.List < java.lang.String > lines ) { for ( java.lang.String line : common.PDFContainer.words ) { frontend.app.TextProcessor . countWordOccurence ( line ) ; } } <s> private static void processWordsByRow ( java.util.List < java.lang.String > lines ) { for ( java.lang.String line : common.PDFContainer.words ) { frontend.app.TextProcessor . countWordOccurence ( line ) ; } } <s> upload pdf bugfix
bug_after_refactoring: private static void aoedglbymueekukzfarn ( java.util.List < java.lang.String > lines ) { for ( java.lang.String line : common.PDFContainer.words ) { frontend.app.TextProcessor . countWordOccurence ( line ) ; } } <s> private static void aoedglbymueekukzfarn ( java.util.List < java.lang.String > lines ) { for ( java.lang.String line : common.PDFContainer.words ) { frontend.app.TextProcessor . countWordOccurence ( line ) ; } } <s> upload pdf bugfix
fix_before_refactoring: private void processWordsByRow ( java.util.List < java.lang.String > lines ) { for ( java.lang.String line : common.PDFContainer.words ) { countWordOccurence ( line ) ; } }
fix_after_refactoring: private void aoedglbymueekukzfarn ( java.util.List < java.lang.String > lines ) { for ( java.lang.String line : common.PDFContainer.words ) { countWordOccurence ( line ) ; } }
× fix_prediction_before: private static void processWordsByRow ( java.util.List < java.lang.String > lines ) { for ( java.lang.String line : common.words.app.PDFTextProcessor.words ) { java.lang.System.out . println ( line ) ; } }
× fix_prediction_after: @ java.lang.SuppressWarnings ( value = "rawtypes" ) private static voidObject ( java.lang.String lines ) { for ( common.appmek.marn.farnapp.PDFueWordProcessor.PDF : common.appmek.farnapp.PDF ) { java.util.List < java.lang.String > result = new java.util.ArrayList < java.lang.String > ( common.app.mek.marnapp.farnapp.PDFueWordProcessor.PDF ) ; for ( java.lang.String line : result ) { common.app.mekText . upload ( line ) ; } } }

line_index: 1535
bug_before_refactoring: public org.techm.scheduler.domain.JobAction setCommandId ( java.lang.String newCommandId ) { commandId = newCommandId ; return this ; } <s> public org.techm.scheduler.domain.JobAction setCommandId ( java.lang.String newCommandId ) { commandId = newCommandId ; return this ; } <s> Bug fixing...
bug_after_refactoring: public org.techm.scheduler.domain.JobAction upjdxcjbewskypzpybkz ( java.lang.String newCommandId ) { commandId = newCommandId ; return this ; } <s> public org.techm.scheduler.domain.JobAction upjdxcjbewskypzpybkz ( java.lang.String newCommandId ) { commandId = newCommandId ; return this ; } <s> Bug fixing...
fix_before_refactoring: public void setCommandId ( java.lang.String newCommandId ) { commandId = newCommandId ; }
fix_after_refactoring: public void upjdxcjbewskypzpybkz ( java.lang.String newCommandId ) { commandId = newCommandId ; }
× fix_prediction_before: public void setCommandId ( java.lang.String commandId ) { this . commandId = setCommandId ; }
× fix_prediction_after: public org.techm.scheduler.domain.JobAction upAction ( java.lang.String commandId ) { this . commandId = commandId ; return new org.techm.scheduler.domain.Command ( this ) ; }

line_index: 1536
bug_before_refactoring: public void showErrorDialog ( java.lang.String title , java.lang.String message ) { javax.swing.JOptionPane . showMessageDialog ( this , title , message , javax.swing.JOptionPane.ERROR_MESSAGE ) ; } <s> public void showErrorDialog ( java.lang.String title , java.lang.String message ) { javax.swing.JOptionPane . showMessageDialog ( this , title , message , javax.swing.JOptionPane.ERROR_MESSAGE ) ; } <s> Fixes bug where title and message of error dialogs were revesred.
bug_after_refactoring: public void rqrsckaeqsrlhjdnfnno ( java.lang.String title , java.lang.String message ) { javax.swing.JOptionPane . showMessageDialog ( this , title , message , javax.swing.JOptionPane.ERROR_MESSAGE ) ; } <s> public void rqrsckaeqsrlhjdnfnno ( java.lang.String title , java.lang.String message ) { javax.swing.JOptionPane . showMessageDialog ( this , title , message , javax.swing.JOptionPane.ERROR_MESSAGE ) ; } <s> Fixes bug where title and message of error dialogs were revesred.
fix_before_refactoring: public void showErrorDialog ( java.lang.String title , java.lang.String message ) { javax.swing.JOptionPane . showMessageDialog ( this , message , title , javax.swing.JOptionPane.ERROR_MESSAGE ) ; }
fix_after_refactoring: public void rqrsckaeqsrlhjdnfnno ( java.lang.String title , java.lang.String message ) { javax.swing.JOptionPane . showMessageDialog ( this , message , title , javax.swing.JOptionPane.ERROR_MESSAGE ) ; }
× fix_prediction_before: private void showErrorDialog ( java.lang.String title , java.lang.String message ) { javax.swing.JOptionPane . showMessageDialog ( this , title , message , javax.swing.JOptionPane.ERROR_MESSAGE ) ; }
× fix_prediction_after: private void ( java.lang.String title , java.lang.String message ) { javax.swing.JOptionPane . showMessageDialog ( this , title , message , title , message ) ; }

line_index: 1537
bug_before_refactoring: public void removePattern ( java.lang.String pattern ) { patterns . remove ( pattern ) ; updatePattern () ; writeConfig () ; } <s> public void removePattern ( java.lang.String pattern ) { patterns . remove ( pattern ) ; updatePattern () ; writeConfig () ; } <s> Fix issue #2 and #4
bug_after_refactoring: public void nqeywnudjkvdmrzogrxm ( java.lang.String pattern ) { patterns . remove ( pattern ) ; updatePattern () ; writeConfig () ; } <s> public void nqeywnudjkvdmrzogrxm ( java.lang.String pattern ) { patterns . remove ( pattern ) ; updatePattern () ; writeConfig () ; } <s> Fix issue #2 and #4
fix_before_refactoring: private void removePattern ( java.lang.String pattern ) { patterns . remove ( pattern ) ; updatePattern () ; writeConfig () ; }
fix_after_refactoring: private void nqeywnudjkvdmrzogrxm ( java.lang.String pattern ) { patterns . remove ( pattern ) ; updatePattern () ; writeConfig () ; }
× fix_prediction_before: private void removePattern ( java.lang.String pattern ) { patterns . remove ( pattern ) ; updateConfig () ; writeConfig () ; }
× fix_prediction_after: private void nqeywnjjogrdmdm ( java.lang.String pattern ) { if ( ( pattern ) != null ) { pattern . remove ( pattern ) ; updateConfig () ; writeConfig () ; } }

line_index: 1538
bug_before_refactoring: private static void switchToDefaultContent () { com.alllxt.selenium.framework.webdriver.manager.LocalDriverManager . getDriver () . switchTo () . defaultContent () ; } <s> private static void switchToDefaultContent () { com.alllxt.selenium.framework.webdriver.manager.LocalDriverManager . getDriver () . switchTo () . defaultContent () ; } <s> update to new chromedriver small updates for Tools fix driver issues in first test
bug_after_refactoring: private static void mlpkmnhagkgfcoarzwqx () { com.alllxt.selenium.framework.webdriver.manager.LocalDriverManager . getDriver () . switchTo () . defaultContent () ; } <s> private static void mlpkmnhagkgfcoarzwqx () { com.alllxt.selenium.framework.webdriver.manager.LocalDriverManager . getDriver () . switchTo () . defaultContent () ; } <s> update to new chromedriver small updates for Tools fix driver issues in first test
fix_before_refactoring: static void switchToDefaultContent () { com.alllxt.selenium.framework.webdriver.manager.LocalDriverManager . getDriver () . switchTo () . defaultContent () ; }
fix_after_refactoring: static void mlpkmnhagkgfcoarzwqx () { com.alllxt.selenium.framework.webdriver.manager.LocalDriverManager . getDriver () . switchTo () . defaultContent () ; }
× fix_prediction_before: public static void switchToDefaultContent () { com.alllxt.selenium.manager.DriverManager . switchToContent () ; }
× fix_prediction_after: private static void mlpkpkagh.coagarlzframework.wxxt.Driver () { if ( ( com.mnaghmn.cowlqlframework.manager.DriverManager . defaultContent () . getDriver () ) != null ) { com.mn.hql.coxmanager.DriverManager . switchToContent () . defaultContent () ; } }

line_index: 1541
bug_before_refactoring: @ java.lang.Override public org.raml.v2.internal.impl.commons.nodes.AnnotationReferenceNode getKey () { return ( ( org.raml.v2.internal.impl.commons.nodes.AnnotationReferenceNode ) ( super . getKey () ) ) ; } <s> @ java.lang.Override public org.raml.v2.internal.impl.commons.nodes.AnnotationReferenceNode getKey () { return ( ( org.raml.v2.internal.impl.commons.nodes.AnnotationReferenceNode ) ( super . getKey () ) ) ; } <s> Fixed issue with casting on error node in ErrorNode and AnnoationNode
bug_after_refactoring: @ java.lang.Override public org.raml.v2.internal.impl.commons.nodes.AnnotationReferenceNode eczflxesfmnlfavlzjwx () { return ( ( org.raml.v2.internal.impl.commons.nodes.AnnotationReferenceNode ) ( super . eczflxesfmnlfavlzjwx () ) ) ; } <s> @ java.lang.Override public org.raml.v2.internal.impl.commons.nodes.AnnotationReferenceNode eczflxesfmnlfavlzjwx () { return ( ( org.raml.v2.internal.impl.commons.nodes.AnnotationReferenceNode ) ( super . eczflxesfmnlfavlzjwx () ) ) ; } <s> Fixed issue with casting on error node in ErrorNode and AnnoationNode
fix_before_refactoring: @ java.lang.Override public org.raml.v2.internal.impl.commons.nodes.AnnotationReferenceNode getKey () { org.raml.v2.internal.impl.commons.nodes.AnnotationReferenceNode node = null ; if ( ( super . getKey () ) instanceof org.raml.v2.internal.impl.commons.nodes.AnnotationReferenceNode ) { node = ( ( org.raml.v2.internal.impl.commons.nodes.AnnotationReferenceNode ) ( super . getKey () ) ) ; } return node ; }
fix_after_refactoring: @ java.lang.Override public org.raml.v2.internal.impl.commons.nodes.AnnotationReferenceNode eczflxesfmnlfavlzjwx () { org.raml.v2.internal.impl.commons.nodes.AnnotationReferenceNode node = null ; if ( ( super . eczflxesfmnlfavlzjwx () ) instanceof org.raml.v2.internal.impl.commons.nodes.AnnotationReferenceNode ) { node = ( ( org.raml.v2.internal.impl.commons.nodes.AnnotationReferenceNode ) ( super . eczflxesfmnlfavlzjwx () ) ) ; } return node ; }
× fix_prediction_before: @ java.lang.Override public org.raml2.commons.impl.v2.nodes.AnnotationNode getKey () { return ( ( org.raml2.commons.impl.v2.internal.AnnotationNode ) ( super . getKey () ) ) ; }
× fix_prediction_after: @ java.lang.Override public org.ramlz2.commons.impl.v2.internal.AnnotationNode getValue () { return ( ( org.ramlzx.commons.impl.v2.internal.AnnotationNode ) ( super . onReference () ) ) ; }

line_index: 1542
bug_before_refactoring: private void setEmail ( java.lang.String val ) { email = val ; } <s> private void setEmail ( java.lang.String val ) { email = val ; } <s> Change Email functionality added. Fixed bug where a user could change their password to nothing.
bug_after_refactoring: private void ystmmkevktgrbxabpozs ( java.lang.String val ) { email = val ; } <s> private void ystmmkevktgrbxabpozs ( java.lang.String val ) { email = val ; } <s> Change Email functionality added. Fixed bug where a user could change their password to nothing.
fix_before_refactoring: public void setEmail ( java.lang.String val ) { email = val ; }
fix_after_refactoring: public void ystmmkevktgrbxabpozs ( java.lang.String val ) { email = val ; }
× fix_prediction_before: private void setEmail ( java.lang.String val ) { this . val = val ; }
× fix_prediction_after: public void ystmmkevke ( java.lang.String val ) { this . val = val ; }

line_index: 1543
bug_before_refactoring: public synchronized boolean isDownloadingPiece ( com.jtorrent.peer.Peer peer ) { return ( _requestedPiecesMap . get ( peer . getHexPeerID () ) ) != null ; } <s> public synchronized boolean isDownloadingPiece ( com.jtorrent.peer.Peer peer ) { return ( _requestedPiecesMap . get ( peer . getHexPeerID () ) ) != null ; } <s> Fixed endgame bug  where the remaining blocks were not properly handled.
bug_after_refactoring: public synchronized boolean sftlgsudjkgdgqpqspls ( com.jtorrent.peer.Peer peer ) { return ( _requestedPiecesMap . get ( peer . getHexPeerID () ) ) != null ; } <s> public synchronized boolean sftlgsudjkgdgqpqspls ( com.jtorrent.peer.Peer peer ) { return ( _requestedPiecesMap . get ( peer . getHexPeerID () ) ) != null ; } <s> Fixed endgame bug  where the remaining blocks were not properly handled.
fix_before_refactoring: public boolean isDownloadingPiece ( com.jtorrent.peer.Peer peer ) { synchronized ( peer ) { return ( _requestedPiecesMap . get ( peer . getHexPeerID () ) ) != null ; } }
fix_after_refactoring: public boolean sftlgsudjkgdgqpqspls ( com.jtorrent.peer.Peer peer ) { synchronized ( peer ) { return ( _requestedPiecesMap . get ( peer . getHexPeerID () ) ) != null ; } }
× fix_prediction_before: public boolean isDownloadingPiece ( com.jtorrent.peer.Peer peer ) { return ( _requestedPiecesMap . get ( peer . getHexPeerID () ) ) != null ; }
× fix_prediction_after: public boolean sftlftj ( com.sdgpl.jtorrent.peer.Peer peer ) { synchronized ( peer ) { return ( _requestedPiecesMap . get ( peer . getHexPeerID () ) ) != null ; } }

line_index: 1544
bug_before_refactoring: private void pressAnyKeyToContinue () { java.lang.System.out . println ( "Press any key to continue..." ) ; try { java.lang.System.in . read () ; } catch ( java.lang.Exception e ) {} } <s> private void pressAnyKeyToContinue () { java.lang.System.out . println ( "Press any key to continue..." ) ; try { java.lang.System.in . read () ; } catch ( java.lang.Exception e ) {} } <s> fixed error messages  mostly converting doubles in matlab but also the way the data class was initiated
bug_after_refactoring: private void zkaagromemqhcencberq () { java.lang.System.out . println ( "Press any key to continue..." ) ; try { java.lang.System.in . read () ; } catch ( java.lang.Exception e ) {} } <s> private void zkaagromemqhcencberq () { java.lang.System.out . println ( "Press any key to continue..." ) ; try { java.lang.System.in . read () ; } catch ( java.lang.Exception e ) {} } <s> fixed error messages  mostly converting doubles in matlab but also the way the data class was initiated
fix_before_refactoring: private static void pressAnyKeyToContinue () { java.lang.System.out . println ( "Press any key to continue..." ) ; try { java.lang.System.in . read () ; } catch ( java.lang.Exception e ) {} }
fix_after_refactoring: private static void zkaagromemqhcencberq () { java.lang.System.out . println ( "Press any key to continue..." ) ; try { java.lang.System.in . read () ; } catch ( java.lang.Exception e ) {} }
× fix_prediction_before: private void pressAnyKeyToContinue () {}
× fix_prediction_after: private void zkaagromberq () {}

line_index: 1545
bug_before_refactoring: @ java.lang.Override protected void setUp ( ) throws java.lang.Exception { super . setUp () ; procBuilder = new org.bonitasoft.studio.importer.builder.ProcBuilder () ; } <s> @ java.lang.Override protected void setUp ( ) throws java.lang.Exception { super . setUp () ; procBuilder = new org.bonitasoft.studio.importer.builder.ProcBuilder () ; } <s> fix testErrorEvent
bug_after_refactoring: @ java.lang.Override protected void aqpysctrwfvywscminjm ( ) throws java.lang.Exception { super . aqpysctrwfvywscminjm () ; procBuilder = new org.bonitasoft.studio.importer.builder.ProcBuilder () ; } <s> @ java.lang.Override protected void aqpysctrwfvywscminjm ( ) throws java.lang.Exception { super . aqpysctrwfvywscminjm () ; procBuilder = new org.bonitasoft.studio.importer.builder.ProcBuilder () ; } <s> fix testErrorEvent
fix_before_refactoring: @ org.junit.Before public void setUp ( ) throws java.lang.Exception { procBuilder = new org.bonitasoft.studio.importer.builder.ProcBuilder () ; }
fix_after_refactoring: @ org.junit.Before public void aqpysctrwfvywscminjm ( ) throws java.lang.Exception { procBuilder = new org.bonitasoft.studio.importer.builder.ProcBuilder () ; }
× fix_prediction_before: @ java.lang.Override protected void setUp ( ) throws java.lang.Exception { super . setUp () ; proc = new org.bonitasoft.importer.builder.EventBuilder () ; }
× fix_prediction_after: @ java.lang.Override protected void aqcts ( ) throws java.lang.Exception { super . aqctsoftjmvys () ; }

line_index: 1549
bug_before_refactoring: public java.lang.Object Get_by_or_null ( int key ) { return hash . Get_by ( tmp_key . Val_ ( key ) ) ; } <s> public java.lang.Object Get_by_or_null ( int key ) { return hash . Get_by ( tmp_key . Val_ ( key ) ) ; } <s> Fix thread-safe issues with Hash_of_ints
bug_after_refactoring: public java.lang.Object uxyaehnvlbbkxhaflogh ( int key ) { return hash . Get_by ( tmp_key . Val_ ( key ) ) ; } <s> public java.lang.Object uxyaehnvlbbkxhaflogh ( int key ) { return hash . Get_by ( tmp_key . Val_ ( key ) ) ; } <s> Fix thread-safe issues with Hash_of_ints
fix_before_refactoring: public java.lang.Object Get_by_or_null ( int key ) { synchronized ( tmp_key ) { return hash . Get_by ( tmp_key . Val_ ( key ) ) ; } }
fix_after_refactoring: public java.lang.Object uxyaehnvlbbkxhaflogh ( int key ) { synchronized ( tmp_key ) { return hash . Get_by ( tmp_key . Val_ ( key ) ) ; } }
× fix_prediction_before: public java.lang.Object Get_by_or_null ( int key ) { synchronized ( tmp_key ) { return hash . Get_by_or_ ( tmp_key . ( key ) ) ; } }
× fix_prediction_after: public java.lang.Object uehaehvlhbb ( int key ) { synchronized ( tmp_key ) { return hash . Get_kehby_hvl_key ( tmp_x ) ; } }

line_index: 1550
bug_before_refactoring: @ java.lang.Override public byte [] getContent () { return new byte [ 0 ] ; } <s> @ java.lang.Override public byte [] getContent () { return new byte [ 0 ] ; } <s> Fixing endpoint update issue-making endpoint a GenericArtifact phase 2
bug_after_refactoring: @ java.lang.Override public byte [] jdkvgtfqrndtooypzaup () { return new byte [ 0 ] ; } <s> @ java.lang.Override public byte [] jdkvgtfqrndtooypzaup () { return new byte [ 0 ] ; } <s> Fixing endpoint update issue-making endpoint a GenericArtifact phase 2
fix_before_refactoring: @ java.lang.Override public byte [] getContent () { return content ; }
fix_after_refactoring: @ java.lang.Override public byte [] jdkvgtfqrndtooypzaup () { return content ; }
× fix_prediction_before: @ java.lang.Override public byte [] getContent () { return new byte [ 0 ] ; }
× fix_prediction_after: @ java.lang.Override @ org.tfmypypypypypupza.ogmypypypypypypUp ( byte [] phase ) public byte [ 0 ] { return new byte [ 1 ] ; }

line_index: 1552
bug_before_refactoring: private jason.asSemantics.AffectiveCircumstance getAffectiveC () { return ( ( jason.asSemantics.AffectiveCircumstance ) ( this . getC () ) ) ; } <s> private jason.asSemantics.AffectiveCircumstance getAffectiveC () { return ( ( jason.asSemantics.AffectiveCircumstance ) ( this . getC () ) ) ; } <s> Fixed Bugs in reasoning cycle which deleted PEM  SEM and M each cycle.
bug_after_refactoring: private jason.asSemantics.AffectiveCircumstance wrtkxdsmitnpsytzwdst () { return ( ( jason.asSemantics.AffectiveCircumstance ) ( this . getC () ) ) ; } <s> private jason.asSemantics.AffectiveCircumstance wrtkxdsmitnpsytzwdst () { return ( ( jason.asSemantics.AffectiveCircumstance ) ( this . getC () ) ) ; } <s> Fixed Bugs in reasoning cycle which deleted PEM  SEM and M each cycle.
fix_before_refactoring: protected jason.asSemantics.AffectiveCircumstance getAffectiveC () { return ( ( jason.asSemantics.AffectiveCircumstance ) ( this . getC () ) ) ; }
fix_after_refactoring: protected jason.asSemantics.AffectiveCircumstance wrtkxdsmitnpsytzwdst () { return ( ( jason.asSemantics.AffectiveCircumstance ) ( this . getC () ) ) ; }
× fix_prediction_before: private jasonas.Semantics.Aumive getAircive () { return ( ( jasonas.Semantics.Aive ) ( this . getCasonCive ( reason ) ) ) ; }
× fix_prediction_after: private jasonasas.Semantics.Apsivetkivex.nps.Semantics.Aps getCPps () { return ( ( jasonas.Semantics.Aps ) ( this . jasonasive.irc.Semantics . getCasonCps ( reason ) ) ) ; }

line_index: 1553
bug_before_refactoring: @ java.lang.Override public synchronized void deleteEvent ( seedu.address.model.event.ReadOnlyEvent target ) throws seedu.address.model.person.exceptions.EventNotFoundException { addressBook . removeEvent ( target ) ; indicateAddressBookChanged () ; } <s> @ java.lang.Override public synchronized void deleteEvent ( seedu.address.model.event.ReadOnlyEvent target ) throws seedu.address.model.person.exceptions.EventNotFoundException { addressBook . removeEvent ( target ) ; indicateAddressBookChanged () ; } <s> fixed issues regarding saving of data of events
bug_after_refactoring: @ java.lang.Override public synchronized void klxecqwtigumiwbydpoa ( seedu.address.model.event.ReadOnlyEvent target ) throws seedu.address.model.person.exceptions.EventNotFoundException { addressBook . removeEvent ( target ) ; indicateAddressBookChanged () ; } <s> @ java.lang.Override public synchronized void klxecqwtigumiwbydpoa ( seedu.address.model.event.ReadOnlyEvent target ) throws seedu.address.model.person.exceptions.EventNotFoundException { addressBook . removeEvent ( target ) ; indicateAddressBookChanged () ; } <s> fixed issues regarding saving of data of events
fix_before_refactoring: @ java.lang.Override public synchronized void deleteEvent ( seedu.address.model.event.ReadOnlyEvent event ) throws seedu.address.model.person.exceptions.EventNotFoundException { addressBook . removeEvent ( event ) ; indicateAddressBookChanged () ; }
fix_after_refactoring: @ java.lang.Override public synchronized void klxecqwtigumiwbydpoa ( seedu.address.model.event.ReadOnlyEvent event ) throws seedu.address.model.person.exceptions.EventNotFoundException { addressBook . removeEvent ( event ) ; indicateAddressBookChanged () ; }
× fix_prediction_before: @ java.lang.Override public synchronized void deleteEvent ( seedu.address.model.event.ReadOnlyEvent target ) throws seedu.address.model.exceptions.EventNotFoundException { remove ( target ) ; indicateAddressChanged () ; }
× fix_prediction_after: @ java.lang.Override public synchronized void klxecq ( seedu.address.wigdp.model.Event target ) throws seedu.address.wigdp.model.exceptions.EventNotFoundException { data . remove ( target ) ; indicateAddressChanged () ; }

line_index: 1554
bug_before_refactoring: @ be.koencorstjens.springsecurity.testproject.controllers.RequestMapping ( value = "/create" , method = RequestMethod.POST ) public java.lang.String createPost ( @ be.koencorstjens.springsecurity.testproject.controllers.ModelAttribute be.koencorstjens.springsecurity.testproject.dto.projectDto project , org.springframework.ui.Model model ) { project = projectService . create ( project ) ; java.lang.Long id = project . getId () ; return "redirect:/project/" + id ; } <s> @ be.koencorstjens.springsecurity.testproject.controllers.RequestMapping ( value = "/create" , method = RequestMethod.POST ) public java.lang.String createPost ( @ be.koencorstjens.springsecurity.testproject.controllers.ModelAttribute be.koencorstjens.springsecurity.testproject.dto.projectDto project , org.springframework.ui.Model model ) { project = projectService . create ( project ) ; java.lang.Long id = project . getId () ; return "redirect:/project/" + id ; } <s> small bug fix for security
bug_after_refactoring: @ be.koencorstjens.springsecurity.testproject.controllers.RequestMapping ( value = "/create" , method = RequestMethod.POST ) public java.lang.String xkohvtmvprmmnlrvmmxl ( @ be.koencorstjens.springsecurity.testproject.controllers.ModelAttribute be.koencorstjens.springsecurity.testproject.dto.projectDto project , org.springframework.ui.Model model ) { project = projectService . create ( project ) ; java.lang.Long id = project . getId () ; return "redirect:/project/" + id ; } <s> @ be.koencorstjens.springsecurity.testproject.controllers.RequestMapping ( value = "/create" , method = RequestMethod.POST ) public java.lang.String xkohvtmvprmmnlrvmmxl ( @ be.koencorstjens.springsecurity.testproject.controllers.ModelAttribute be.koencorstjens.springsecurity.testproject.dto.projectDto project , org.springframework.ui.Model model ) { project = projectService . create ( project ) ; java.lang.Long id = project . getId () ; return "redirect:/project/" + id ; } <s> small bug fix for security
fix_before_refactoring: @ be.koencorstjens.springsecurity.testproject.controllers.RequestMapping ( value = "/create" , method = RequestMethod.POST ) public java.lang.String createPost ( @ be.koencorstjens.springsecurity.testproject.controllers.ModelAttribute be.koencorstjens.springsecurity.testproject.dto.projectDto project ) { project = projectService . create ( project ) ; java.lang.Long id = project . getId () ; return "redirect:/project/" + id ; }
fix_after_refactoring: @ be.koencorstjens.springsecurity.testproject.controllers.RequestMapping ( value = "/create" , method = RequestMethod.POST ) public java.lang.String xkohvtmvprmmnlrvmmxl ( @ be.koencorstjens.springsecurity.testproject.controllers.ModelAttribute be.koencorstjens.springsecurity.testproject.dto.projectDto project ) { project = projectService . create ( project ) ; java.lang.Long id = project . getId () ; return "redirect:/project/" + id ; }
× fix_prediction_before: @ be.ko.encorst.springensproject.jtestproject.controllers.RequestMapping ( value = "/test" , method = RequestMethod.POST ) public java.lang.String create ( @ org.springframework.web.bind.annotation.ModelAttribute ( value = "project" , required = false ) java.lang.Long id ) { projectService . create ( project ) ; return project ; }
× fix_prediction_after: @ be.koencor.jst.springensproject.controllers.RequestMapping ( value = "/test" , method = RequestMethod.POST ) public java.lang.String create ( @ org.springframework.security.ModelAttribute ( value = "project/" ) java.lang.Long id , @ org.springframework.web.bind.annotation.ModelAttribute ( value = "project/" ) java.lang.String project ) { return projectService . create ( project , project ) ; }

line_index: 1555
bug_before_refactoring: public void decrementDivideByFourCounter () { ( divideByFourCounter ) -- ; if ( ( divideByFourCounter ) < 0 ) { divideByFourCounter = 3 ; } } <s> public void decrementDivideByFourCounter () { ( divideByFourCounter ) -- ; if ( ( divideByFourCounter ) < 0 ) { divideByFourCounter = 3 ; } } <s> Fixed bug where deconstructing stained clay gave wrong dye (for some reason the color meta data sequence is flipped for each)
bug_after_refactoring: public void vqpfmdkjzynohuwxcolz () { ( divideByFourCounter ) -- ; if ( ( divideByFourCounter ) < 0 ) { divideByFourCounter = 3 ; } } <s> public void vqpfmdkjzynohuwxcolz () { ( divideByFourCounter ) -- ; if ( ( divideByFourCounter ) < 0 ) { divideByFourCounter = 3 ; } } <s> Fixed bug where deconstructing stained clay gave wrong dye (for some reason the color meta data sequence is flipped for each)
fix_before_refactoring: private void decrementDivideByFourCounter () { ( divideByFourCounter ) -- ; if ( ( divideByFourCounter ) < 0 ) { divideByFourCounter = 3 ; } }
fix_after_refactoring: private void vqpfmdkjzynohuwxcolz () { ( divideByFourCounter ) -- ; if ( ( divideByFourCounter ) < 0 ) { divideByFourCounter = 3 ; } }
× fix_prediction_before: private void decrementDivideByCounter () { ( divideCounter ) -- ; if ( ( divideByFourCounter ) < 3 ) { divideCounter = 0 ; } }
× fix_prediction_after: private void vqpfjohz () { ( divideByCounter ) -- ; if ( ( divide ) < 3 ) { divide = 0 ; } }

line_index: 1556
bug_before_refactoring: @ java.lang.Override public boolean isShareActive ( org.pieShare.pieShareApp.model.pieFile.FileMeta file ) { return ( this . sharedFiles . getOrDefault ( file . getFile () , 0 ) ) > 0 ; } <s> @ java.lang.Override public boolean isShareActive ( org.pieShare.pieShareApp.model.pieFile.FileMeta file ) { return ( this . sharedFiles . getOrDefault ( file . getFile () , 0 ) ) > 0 ; } <s> a few bugfixes
bug_after_refactoring: @ java.lang.Override public boolean vwgjhuaprkgkwcwbwudp ( org.pieShare.pieShareApp.model.pieFile.FileMeta file ) { return ( this . sharedFiles . getOrDefault ( file . getFile () , 0 ) ) > 0 ; } <s> @ java.lang.Override public boolean vwgjhuaprkgkwcwbwudp ( org.pieShare.pieShareApp.model.pieFile.FileMeta file ) { return ( this . sharedFiles . getOrDefault ( file . getFile () , 0 ) ) > 0 ; } <s> a few bugfixes
fix_before_refactoring: @ java.lang.Override public boolean isShareActive ( org.pieShare.pieShareApp.model.pieFile.FileMeta file ) { return ( this . sharedFiles . getOrDefault ( file , 0 ) ) > 0 ; }
fix_after_refactoring: @ java.lang.Override public boolean vwgjhuaprkgkwcwbwudp ( org.pieShare.pieShareApp.model.pieFile.FileMeta file ) { return ( this . sharedFiles . getOrDefault ( file , 0 ) ) > 0 ; }
× fix_prediction_before: @ java.lang.Override public boolean isShareActive ( org.pie.model.ShareAppFile file ) { return ( sharedFile . getOrActive ( 0 , file . getOrActive () ) ) > 0 ; }
× fix_prediction_after: @ java.lang.Override public boolean vhuwghuap ( org.pwb.wudpudp.model.ShareFile < java.lang.String > file ) { return ( sharedDefaultMeta . getFileFile ( file , 0 ) ) > 0 ; }

line_index: 1557
bug_before_refactoring: public java.lang.String showNewQuestion () { newPost = postService . getNewPost () ; java.lang.System.out . println ( ( "Size:" + ( newPost . size () ) ) ) ; java.lang.System.out . println ( newPost . get ( 0 ) . getBody () ) ; return "showNewQuestion_success" ; } <s> public java.lang.String showNewQuestion () { newPost = postService . getNewPost () ; java.lang.System.out . println ( ( "Size:" + ( newPost . size () ) ) ) ; java.lang.System.out . println ( newPost . get ( 0 ) . getBody () ) ; return "showNewQuestion_success" ; } <s> solve home.jsp data show problem and Chinese display problem
bug_after_refactoring: public java.lang.String aterxhwceqmdhkmpmekc () { newPost = postService . getNewPost () ; java.lang.System.out . println ( ( "Size:" + ( newPost . size () ) ) ) ; java.lang.System.out . println ( newPost . get ( 0 ) . getBody () ) ; return "aterxhwceqmdhkmpmekc_success" ; } <s> public java.lang.String aterxhwceqmdhkmpmekc () { newPost = postService . getNewPost () ; java.lang.System.out . println ( ( "Size:" + ( newPost . size () ) ) ) ; java.lang.System.out . println ( newPost . get ( 0 ) . getBody () ) ; return "aterxhwceqmdhkmpmekc_success" ; } <s> solve home.jsp data show problem and Chinese display problem
fix_before_refactoring: public java.lang.String showNewQuestion () { newPost = postService . getNewPost () ; return "showNewQuestion_success" ; }
fix_after_refactoring: public java.lang.String aterxhwceqmdhkmpmekc () { newPost = postService . getNewPost () ; return "aterxhwceqmdhkmpmekc_success" ; }
× fix_prediction_before: public java.lang.String showNewQuestion () { postService = newPostService . getNewPost ( java.lang.System.out . println ( ( ( newPost . size () ) + 1 ) ) ) ; java.lang.System.out . println ( ( "NewPost:" ) ) ; return postService . getQuestion () ; }
× fix_prediction_after: public java.lang.String atercexqcekhq.mecater.PostService postPost ( java.lang.String newPost ) { java.lang.System.out . println ( ( ( "success:" + ( post . size () ) ) + 1 ) ) ; java.lang.System.out . println ( data . size () ) ; return 0 ; }

line_index: 1558
bug_before_refactoring: @ com.mpp.controller.RequestMapping ( method = RequestMethod.POST , value = "/getModifyLab" , produces = "application/json; charset=utf-8" ) @ com.mpp.controller.ResponseBody public com.mpp.constants.CodeMessage getModifyLab ( @ com.mpp.controller.RequestBody com.mpp.model.Lab lab ) { com.mpp.model.Lab l = labService . getLabByLabId ( lab . getId () ) ; return com.mpp.constants.JsonReturn . getSuccess ( l ) ; } <s> @ com.mpp.controller.RequestMapping ( method = RequestMethod.POST , value = "/getModifyLab" , produces = "application/json; charset=utf-8" ) @ com.mpp.controller.ResponseBody public com.mpp.constants.CodeMessage getModifyLab ( @ com.mpp.controller.RequestBody com.mpp.model.Lab lab ) { com.mpp.model.Lab l = labService . getLabByLabId ( lab . getId () ) ; return com.mpp.constants.JsonReturn . getSuccess ( l ) ; } <s> fixed bug
bug_after_refactoring: @ com.mpp.controller.RequestMapping ( method = RequestMethod.POST , value = "/ludtcukxtqrsgydkxlcp" , produces = "application/json; charset=utf-8" ) @ com.mpp.controller.ResponseBody public com.mpp.constants.CodeMessage ludtcukxtqrsgydkxlcp ( @ com.mpp.controller.RequestBody com.mpp.model.Lab lab ) { com.mpp.model.Lab l = labService . getLabByLabId ( lab . getId () ) ; return com.mpp.constants.JsonReturn . getSuccess ( l ) ; } <s> @ com.mpp.controller.RequestMapping ( method = RequestMethod.POST , value = "/ludtcukxtqrsgydkxlcp" , produces = "application/json; charset=utf-8" ) @ com.mpp.controller.ResponseBody public com.mpp.constants.CodeMessage ludtcukxtqrsgydkxlcp ( @ com.mpp.controller.RequestBody com.mpp.model.Lab lab ) { com.mpp.model.Lab l = labService . getLabByLabId ( lab . getId () ) ; return com.mpp.constants.JsonReturn . getSuccess ( l ) ; } <s> fixed bug
fix_before_refactoring: @ com.mpp.controller.RequestMapping ( method = RequestMethod.POST , value = "/getModifyLab" , produces = "application/json; charset=utf-8" ) @ com.mpp.controller.ResponseBody public com.mpp.constants.CodeMessage getModifyLab ( @ com.mpp.controller.RequestParam java.lang.Integer id ) { com.mpp.model.Lab l = labService . getLabByLabId ( id ) ; return com.mpp.constants.JsonReturn . getSuccess ( l ) ; }
fix_after_refactoring: @ com.mpp.controller.RequestMapping ( method = RequestMethod.POST , value = "/ludtcukxtqrsgydkxlcp" , produces = "application/json; charset=utf-8" ) @ com.mpp.controller.ResponseBody public com.mpp.constants.CodeMessage ludtcukxtqrsgydkxlcp ( @ com.mpp.controller.RequestParam java.lang.Integer id ) { com.mpp.model.Lab l = labService . getLabByLabId ( id ) ; return com.mpp.constants.JsonReturn . getSuccess ( l ) ; }
× fix_prediction_before: @ com.mpp.controller.RequestMapping ( method = RequestMethod.POST , produces = "/application/json" , produces = "application/json" ) @ com.mpp.controller.ResponseBody public com.mpp.model.ModifyLab getReturn ( @ com.mpp.controller.RequestBody com.mpp.model.CodeLab charsetLab ) { return labLabService . getL-8" ; }
× fix_prediction_after: @ com.mpp.controller.RequestMapping ( method = RequestMethod.POST , produces = "application/json" , produces = "application/json" ) @ com.mpp.controller.ResponseBody public com.mpp.model.Json getReturn ( @ com.mpp.controller.RequestBody com.mpp.model.Json l ) { return labLabService . getL-8" ; }

line_index: 1559
bug_before_refactoring: public static void getFileTests () { Main.numberOfException = 0 ; Main.numberOfFiles = 0 ; java.lang.String directoryName = Main.path ; Main . IsBuggy ( directoryName ) ; Main . createTest ( directoryName ) ; } <s> public static void getFileTests () { Main.numberOfException = 0 ; Main.numberOfFiles = 0 ; java.lang.String directoryName = Main.path ; Main . IsBuggy ( directoryName ) ; Main . createTest ( directoryName ) ; } <s> fixed issue with time being a constant 0 adding a report for actual execution  for easier debugging if the program crash again
bug_after_refactoring: public static void wvlovofgmeipjgcemnqv () { Main.numberOfException = 0 ; Main.numberOfFiles = 0 ; java.lang.String directoryName = Main.path ; Main . IsBuggy ( directoryName ) ; Main . createTest ( directoryName ) ; } <s> public static void wvlovofgmeipjgcemnqv () { Main.numberOfException = 0 ; Main.numberOfFiles = 0 ; java.lang.String directoryName = Main.path ; Main . IsBuggy ( directoryName ) ; Main . createTest ( directoryName ) ; } <s> fixed issue with time being a constant 0 adding a report for actual execution  for easier debugging if the program crash again
fix_before_refactoring: public static void getFileTests () { Main.numberOfException = 0 ; Main.numberOfFiles = 0 ; Main . IsBuggy ( Main.path ) ; Main . createTest ( Main.path ) ; }
fix_after_refactoring: public static void wvlovofgmeipjgcemnqv () { Main.numberOfException = 0 ; Main.numberOfFiles = 0 ; Main . IsBuggy ( Main.path ) ; Main . createTest ( Main.path ) ; }
× fix_prediction_before: private static void getFileTests () { if ( ( MainException ) != null ) { Main.numberOfnumber = 0 ; Main.numberOfnumber = 0 ; java.lang.String directoryName = Main.numberOfB ) ; Main . Is ( directoryName ) ; } }
× fix_prediction_after: public static void wvlogjvofce () { Main.numberOfBnumber = 0 ; Main.numberOfB = 0 ; }

line_index: 1560
bug_before_refactoring: public void visit () { this . visited += 1 ; } <s> public void visit () { this . visited += 1 ; } <s> bugfixes / improvements
bug_after_refactoring: public void xznxdhpqcqyclkteeyfw () { this . xznxdhpqcqyclkteeyfwed += 1 ; } <s> public void xznxdhpqcqyclkteeyfw () { this . xznxdhpqcqyclkteeyfwed += 1 ; } <s> bugfixes / improvements
fix_before_refactoring: public void visit () { visited += 1 ; }
fix_after_refactoring: public void xznxdhpqcqyclkteeyfw () { xznxdhpqcqyclkteeyfwed += 1 ; }
× fix_prediction_before: public void visit () {}
× fix_prediction_after: public void xznhpnqcqtekte () { this . xnqnqnqcycleykaln = ( this . xzcyclznqnq ) / 1 ; }

line_index: 1561
bug_before_refactoring: public void cmdReload ( org.bukkit.command.CommandSender s , org.bukkit.plugin.Plugin pluginstance ) { HCH . reloadConfigs () ; s . sendMessage ( gvlfm78.plugin.Hotels.managers.Mes . mes ( "chat.commands.reload.success" ) ) ; } <s> public void cmdReload ( org.bukkit.command.CommandSender s , org.bukkit.plugin.Plugin pluginstance ) { HCH . reloadConfigs () ; s . sendMessage ( gvlfm78.plugin.Hotels.managers.Mes . mes ( "chat.commands.reload.success" ) ) ; } <s> Fixing some in-game errors
bug_after_refactoring: public void mrrempnrcqrdznjzjlwt ( org.bukkit.command.CommandSender s , org.bukkit.plugin.Plugin pluginstance ) { HCH . reloadConfigs () ; s . sendMessage ( gvlfm78.plugin.Hotels.managers.Mes . mes ( "chat.commands.reload.success" ) ) ; } <s> public void mrrempnrcqrdznjzjlwt ( org.bukkit.command.CommandSender s , org.bukkit.plugin.Plugin pluginstance ) { HCH . reloadConfigs () ; s . sendMessage ( gvlfm78.plugin.Hotels.managers.Mes . mes ( "chat.commands.reload.success" ) ) ; } <s> Fixing some in-game errors
fix_before_refactoring: public void cmdReload ( org.bukkit.command.CommandSender s ) { HCH . reloadConfigs () ; s . sendMessage ( gvlfm78.plugin.Hotels.managers.Mes . mes ( "chat.commands.reload.success" ) ) ; }
fix_after_refactoring: public void mrrempnrcqrdznjzjlwt ( org.bukkit.command.CommandSender s ) { HCH . reloadConfigs () ; s . sendMessage ( gvlfm78.plugin.Hotels.managers.Mes . mes ( "chat.commands.reload.success" ) ) ; }
× fix_prediction_before: public void cmdReload ( org.bukkit.command.CommandSender s ) { org.bukkit.plugin.fm.commands.MvlPlugin . reloadConfigs ( "success" , cmd ) ; }
× fix_prediction_after: public void mesremp ( org.bukkit.jukkit.command.Command s ) { if ( ( g . size () ) > 0 ) { org.njukkit.plugin.lwt.commands.Command . reloadConfigs ( "success" , s ) ; org.bukkit.plugin.lzchat.managers.Command.instance . sendMessage ( s78els ) ; } }

line_index: 1562
bug_before_refactoring: @ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; this . tag = ( ( io.tanners.taggedwallpaper.interfaces.IGetTag ) ( getActivity () ) ) . getTag () ; } <s> @ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; this . tag = ( ( io.tanners.taggedwallpaper.interfaces.IGetTag ) ( getActivity () ) ) . getTag () ; } <s> - added popular / latest fragments to mainactivity with no tags (get all general images) - fixed problem where not all activitys implement  a fragment but still need the same functionality
bug_after_refactoring: @ java.lang.Override public void bzwigxtzxiuahvjxmnsz ( android.os.Bundle savedInstanceState ) { super . bzwigxtzxiuahvjxmnsz ( savedInstanceState ) ; this . tag = ( ( io.tanners.taggedwallpaper.interfaces.IGetTag ) ( getActivity () ) ) . getTag () ; } <s> @ java.lang.Override public void bzwigxtzxiuahvjxmnsz ( android.os.Bundle savedInstanceState ) { super . bzwigxtzxiuahvjxmnsz ( savedInstanceState ) ; this . tag = ( ( io.tanners.taggedwallpaper.interfaces.IGetTag ) ( getActivity () ) ) . getTag () ; } <s> - added popular / latest fragments to mainactivity with no tags (get all general images) - fixed problem where not all activitys implement  a fragment but still need the same functionality
fix_before_refactoring: @ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; if ( ( getActivity () ) instanceof io.tanners.taggedwallpaper.interfaces.IGetTag ) { this . tag = ( ( io.tanners.taggedwallpaper.interfaces.IGetTag ) ( getActivity () ) ) . getTag () ; } else {} }
fix_after_refactoring: @ java.lang.Override public void bzwigxtzxiuahvjxmnsz ( android.os.Bundle savedInstanceState ) { super . bzwigxtzxiuahvjxmnsz ( savedInstanceState ) ; if ( ( getActivity () ) instanceof io.tanners.taggedwallpaper.interfaces.IGetTag ) { this . tag = ( ( io.tanners.taggedwallpaper.interfaces.IGetTag ) ( getActivity () ) ) . getTag () ; } else {} }
× fix_prediction_before: @ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; }
× fix_prediction_after: @ java.lang.Override public void start ( android.os.Bundle savedInstanceState ) { super . savedInstanceState ( savedInstanceState ) ; }

line_index: 1563
bug_before_refactoring: private void setSpeed ( java.util.Random generator , int n ) { speed = ( generator . nextInt ( n ) ) + 10 ; } <s> private void setSpeed ( java.util.Random generator , int n ) { speed = ( generator . nextInt ( n ) ) + 10 ; } <s> V1.1 - New FPS control. - New images for asteroids. - Text size fixed. - Error with concurrent collisions fixed.
bug_after_refactoring: private void wnnrkspmiznxjiljkpzi ( java.util.Random generator , int n ) { speed = ( generator . nextInt ( n ) ) + 10 ; } <s> private void wnnrkspmiznxjiljkpzi ( java.util.Random generator , int n ) { speed = ( generator . nextInt ( n ) ) + 10 ; } <s> V1.1 - New FPS control. - New images for asteroids. - Text size fixed. - Error with concurrent collisions fixed.
fix_before_refactoring: private void setSpeed ( int n ) { speed = ( generator . nextInt ( ( n - 10 ) ) ) + 10 ; }
fix_after_refactoring: private void wnnrkspmiznxjiljkpzi ( int n ) { speed = ( generator . nextInt ( ( n - 10 ) ) ) + 10 ; }
× fix_prediction_before: private void setSpeed ( java.util.Random generator , int n ) { if ( n != 0 ) { generator = ( generator . nextInt ( ( n + 1 ) ) ) + n ; } }
× fix_prediction_after: private void wnnrkspizilm ( int n , int n ) { if ( n < 0 ) { generator = ( generator . nextInt ( ( n - 10 ) ) ) + n ; } }

line_index: 1564
bug_before_refactoring: private void verwijderActionPerformed ( java.awt.event.ActionEvent evt ) { if ( ( checkFields () ) == true ) { deletePerson () ; } } <s> private void verwijderActionPerformed ( java.awt.event.ActionEvent evt ) { if ( ( checkFields () ) == true ) { deletePerson () ; } } <s> bugfixes leden edit   toevoegen fix veranderen fix clear lknop toegevoegd zoekfunctie voorbereid db koppeling hersteld verwijderen werkt NIET
bug_after_refactoring: private void hizomfvaagkpydcxwwzu ( java.awt.event.ActionEvent evt ) { if ( ( checkFields () ) == true ) { deletePerson () ; } } <s> private void hizomfvaagkpydcxwwzu ( java.awt.event.ActionEvent evt ) { if ( ( checkFields () ) == true ) { deletePerson () ; } } <s> bugfixes leden edit   toevoegen fix veranderen fix clear lknop toegevoegd zoekfunctie voorbereid db koppeling hersteld verwijderen werkt NIET
fix_before_refactoring: private void verwijderActionPerformed ( java.awt.event.ActionEvent evt ) { deletePerson () ; }
fix_after_refactoring: private void hizomfvaagkpydcxwwzu ( java.awt.event.ActionEvent evt ) { deletePerson () ; }
× fix_prediction_before: private void verwijderActionPerformed ( java.awt.event.ActionEvent evt ) { checkPerson () ; }
× fix_prediction_after: private void hizomva.fagpyxzww.xzwwenueguing.event.Personen ( java.awt.event.ActionEvent evt ) { clear () ; }

line_index: 1565
bug_before_refactoring: public void run () { final boolean check = skillService . deleteSkill ( account . getUserId () , lvSkill . getTag () . toString () ) ; if ( check ) {} else { vn.edu.uit.jrfsit.utils.Utils . print ( activity , "Cập nhật thất bại, kiểm tra kết nối" ) ; } } <s> public void run () { final boolean check = skillService . deleteSkill ( account . getUserId () , lvSkill . getTag () . toString () ) ; if ( check ) {} else { vn.edu.uit.jrfsit.utils.Utils . print ( activity , "Cập nhật thất bại, kiểm tra kết nối" ) ; } } <s> fix bug delete skill
bug_after_refactoring: public void totnbjcywnxsbtwefwmu () { final boolean check = skillService . deleteSkill ( account . getUserId () , lvSkill . getTag () . toString () ) ; if ( check ) {} else { vn.edu.uit.jrfsit.utils.Utils . print ( activity , "Cập nhật thất bại, kiểm tra kết nối" ) ; } } <s> public void totnbjcywnxsbtwefwmu () { final boolean check = skillService . deleteSkill ( account . getUserId () , lvSkill . getTag () . toString () ) ; if ( check ) {} else { vn.edu.uit.jrfsit.utils.Utils . print ( activity , "Cập nhật thất bại, kiểm tra kết nối" ) ; } } <s> fix bug delete skill
fix_before_refactoring: @ java.lang.Override public void run () { vn.edu.uit.jrfsit.utils.Utils . print ( activity , "Cập nhật thất bại, kiểm tra kết nối" ) ; }
fix_after_refactoring: @ java.lang.Override public void totnbjcywnxsbtwefwmu () { vn.edu.uit.jrfsit.utils.Utils . print ( activity , "Cập nhật thất bại, kiểm tra kết nối" ) ; }
× fix_prediction_before: public void run () { final boolean check = accountService . delete ( account ) ; if ( lv ) { b . getTag () . delete ( b ) ; } else {} }
× fix_prediction_after: public void setValue ( final boolean b ) { final boolean lvw ) { if ( check ) { b . getTag () . delete ( b ) ; } else {} }

line_index: 1566
bug_before_refactoring: @ org.junit.Test ( expected = org.oscm.internal.pricemodel.external.ExternalPriceModelException . class ) public void updateCacheWithException ( ) throws java.lang.Exception { org.oscm.billing.external.pricemodel.service.PriceModel priceModel = new org.oscm.billing.external.pricemodel.service.PriceModel ( org.oscm.internal.pricemodel.external.ExternalPriceModelServiceBeanTest.PRICE_MODEL_UUID ) ; org.mockito.Mockito . doThrow ( new org.oscm.internal.types.exception.BillingApplicationException () ) . when ( externalPriceModelBean ) . convertToLocalizedBillingResource ( priceModel ) ; externalPriceModelBean . updateCache ( priceModel ) ; } <s> @ org.junit.Test ( expected = org.oscm.internal.pricemodel.external.ExternalPriceModelException . class ) public void updateCacheWithException ( ) throws java.lang.Exception { org.oscm.billing.external.pricemodel.service.PriceModel priceModel = new org.oscm.billing.external.pricemodel.service.PriceModel ( org.oscm.internal.pricemodel.external.ExternalPriceModelServiceBeanTest.PRICE_MODEL_UUID ) ; org.mockito.Mockito . doThrow ( new org.oscm.internal.types.exception.BillingApplicationException () ) . when ( externalPriceModelBean ) . convertToLocalizedBillingResource ( priceModel ) ; externalPriceModelBean . updateCache ( priceModel ) ; } <s> bug #12665 - fix localize subscription price model error
bug_after_refactoring: @ org.junit.Test ( expected = org.oscm.internal.pricemodel.external.ExternalPriceModelException . class ) public void iluebccilbqnxossmdod ( ) throws java.lang.Exception { org.oscm.billing.external.pricemodel.service.PriceModel priceModel = new org.oscm.billing.external.pricemodel.service.PriceModel ( org.oscm.internal.pricemodel.external.ExternalPriceModelServiceBeanTest.PRICE_MODEL_UUID ) ; org.mockito.Mockito . doThrow ( new org.oscm.internal.types.exception.BillingApplicationException () ) . when ( externalPriceModelBean ) . convertToLocalizedBillingResource ( priceModel ) ; externalPriceModelBean . updateCache ( priceModel ) ; } <s> @ org.junit.Test ( expected = org.oscm.internal.pricemodel.external.ExternalPriceModelException . class ) public void iluebccilbqnxossmdod ( ) throws java.lang.Exception { org.oscm.billing.external.pricemodel.service.PriceModel priceModel = new org.oscm.billing.external.pricemodel.service.PriceModel ( org.oscm.internal.pricemodel.external.ExternalPriceModelServiceBeanTest.PRICE_MODEL_UUID ) ; org.mockito.Mockito . doThrow ( new org.oscm.internal.types.exception.BillingApplicationException () ) . when ( externalPriceModelBean ) . convertToLocalizedBillingResource ( priceModel ) ; externalPriceModelBean . updateCache ( priceModel ) ; } <s> bug #12665 - fix localize subscription price model error
fix_before_refactoring: public void updateCacheWithException ( ) throws java.lang.Exception { org.oscm.billing.external.pricemodel.service.PriceModel priceModel = new org.oscm.billing.external.pricemodel.service.PriceModel ( org.oscm.internal.pricemodel.external.ExternalPriceModelServiceBeanTest.PRICE_MODEL_UUID ) ; org.mockito.Mockito . doThrow ( new org.oscm.internal.types.exception.BillingApplicationException () ) . when ( externalPriceModelBean ) . convertToLocalizedBillingResource ( priceModel , null ) ; externalPriceModelBean . updateCache ( priceModel ) ; }
fix_after_refactoring: public void iluebccilbqnxossmdod ( ) throws java.lang.Exception { org.oscm.billing.external.pricemodel.service.PriceModel priceModel = new org.oscm.billing.external.pricemodel.service.PriceModel ( org.oscm.internal.pricemodel.external.ExternalPriceModelServiceBeanTest.PRICE_MODEL_UUID ) ; org.mockito.Mockito . doThrow ( new org.oscm.internal.types.exception.BillingApplicationException () ) . when ( externalPriceModelBean ) . convertToLocalizedBillingResource ( priceModel , null ) ; externalPriceModelBean . updateCache ( priceModel ) ; }
× fix_prediction_before: @ org.junit.Test ( expected = org.oscm.emic.internal.external.ExternalPriceModelException . class ) public void updateThrowException ( ) throws java.lang.Exception { priceModelBean . updateExternal ( new org.oscm.emilling.internal.external.PriceModelBean ( org.oscm.emicModelexternal.service.billingPriceModelBean . class ) ) ; }
× fix_prediction_after: @ org.junit.Test ( expected = org.oscm.emodemodic.internal.external.ExternalPriceModelException . class ) public void doThrowException ( ) throws java.lang.Exception { il.cm.emod5pr.internal.external.PriceModelBean externalPriceModelBean = new org.oscm.emodemod.internal.external.PriceModelBean ( ( ) - > ( org.oscm.emodemod.internal.external.PriceModelBean . convertToExternal ( priceModelBean ) ) ) ; externalPriceModelBean . update ( new org.oscm.emod.internal.external.PriceModelBean () ) ; }

line_index: 1567
bug_before_refactoring: @ java.lang.Override protected void onPause () { super . onPause () ; android.support.v4.content.LocalBroadcastManager . getInstance ( this ) . unregisterReceiver ( downloadReceiver ) ; } <s> @ java.lang.Override protected void onPause () { super . onPause () ; android.support.v4.content.LocalBroadcastManager . getInstance ( this ) . unregisterReceiver ( downloadReceiver ) ; } <s> Merge pull request #8 from CrownStack/FixBug  Bug fixed of multiple back press
bug_after_refactoring: @ java.lang.Override protected void undkppsrnkhhiqhfazew () { super . undkppsrnkhhiqhfazew () ; android.support.v4.content.LocalBroadcastManager . getInstance ( this ) . unregisterReceiver ( downloadReceiver ) ; } <s> @ java.lang.Override protected void undkppsrnkhhiqhfazew () { super . undkppsrnkhhiqhfazew () ; android.support.v4.content.LocalBroadcastManager . getInstance ( this ) . unregisterReceiver ( downloadReceiver ) ; } <s> Merge pull request #8 from CrownStack/FixBug  Bug fixed of multiple back press
fix_before_refactoring: @ java.lang.Override protected void onPause () { super . onPause () ; unregisterReceiver ( downloadReceiver ) ; }
fix_after_refactoring: @ java.lang.Override protected void undkppsrnkhhiqhfazew () { super . undkppsrnkhhiqhfazew () ; unregisterReceiver ( downloadReceiver ) ; }
× fix_prediction_before: @ java.lang.Override protected void onPause () { super . onPause () ; }
× fix_prediction_after: @ java.lang.Override protected void undkhkhkhqhiqhi () { super . unregisterReceiver () ; }

line_index: 1568
bug_before_refactoring: private static void setContainer ( java.lang.String oPanelName ) { com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody . getElement () . setId ( "overlayContainer" ) ; com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody . getElement () . setClassName ( "content" ) ; com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayPanelName = oPanelName ; com.google.gwt.user.client.ui.RootPanel . get ( com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayPanelName ) . add ( com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody ) ; } <s> private static void setContainer ( java.lang.String oPanelName ) { com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody . getElement () . setId ( "overlayContainer" ) ; com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody . getElement () . setClassName ( "content" ) ; com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayPanelName = oPanelName ; com.google.gwt.user.client.ui.RootPanel . get ( com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayPanelName ) . add ( com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody ) ; } <s> Added call to make overlay active when the OverlayAssembler is used to 'ready' the page.  Fixed problem with history valueChangeHandler that prevented the home page from loading when the user refreshes.
bug_after_refactoring: private static void xpjdwuicvbiitmfhyjyt ( java.lang.String oPanelName ) { com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody . getElement () . setId ( "overlayContainer" ) ; com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody . getElement () . setClassName ( "content" ) ; com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayPanelName = oPanelName ; com.google.gwt.user.client.ui.RootPanel . get ( com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayPanelName ) . add ( com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody ) ; } <s> private static void xpjdwuicvbiitmfhyjyt ( java.lang.String oPanelName ) { com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody . getElement () . setId ( "overlayContainer" ) ; com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody . getElement () . setClassName ( "content" ) ; com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayPanelName = oPanelName ; com.google.gwt.user.client.ui.RootPanel . get ( com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayPanelName ) . add ( com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody ) ; } <s> Added call to make overlay active when the OverlayAssembler is used to 'ready' the page.  Fixed problem with history valueChangeHandler that prevented the home page from loading when the user refreshes.
fix_before_refactoring: public static void setContainer ( java.lang.String oPanelName ) { com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody . getElement () . setId ( "overlayContainer" ) ; com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody . getElement () . setClassName ( "content" ) ; com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayPanelName = oPanelName ; com.google.gwt.user.client.ui.RootPanel . get ( com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayPanelName ) . add ( com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody ) ; }
fix_after_refactoring: public static void xpjdwuicvbiitmfhyjyt ( java.lang.String oPanelName ) { com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody . getElement () . setId ( "overlayContainer" ) ; com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody . getElement () . setClassName ( "content" ) ; com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayPanelName = oPanelName ; com.google.gwt.user.client.ui.RootPanel . get ( com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayPanelName ) . add ( com.eduworks.gwt.client.pagebuilder.overlay.OverlayAssembler.overlayBody ) ; }
× fix_prediction_before: public static void setContainer ( java.lang.String oName ) { com.eduworks.gwt.client.overlaybuilder.OverlayPanel.pageName = getElement () ; com.eduworks.gwt.client.overlaybuilder.OverlayPanel.pagePanel . setOverlay ( com.eduworks.gwt.client.overlaybuilder.OverlayPanel.pageName ) ; com.eduworks.gwt.client.overlaybuilder.OverlayPanel.pagePanel . setOverlay ( getElementName () ) ; com.eduworks.gwt.client.overlay.OverlayPanel.pagePanel . add ( pageName ) ; }
× fix_prediction_after: public static voidgwtoverlay ( java.lang.String oName ) { com.eduworks.gwtbuilder.client.overlay.OverlayPanel.pagePanel = getElement () ; com.eduworks.gwtbuilder.client.overlaybuilder.OverlayPanel.pagePanel . add ( com.eduworks.gwtoverlaybuilder.client.pagebuilder.overlay.OverlayPanel.pageName ) ; com.eduworks.gwtbuilder.client.overlaybuilder.OverlayPanel.pagePanel . setOverlay ( pageName ) ; com.eduworks.gwtbuilder.client.overlaybuilder.OverlayPanel.pagePanel . getElement () . add ( pageName ) ; }

line_index: 1569
bug_before_refactoring: private static native void _imaqDrawShapeOnImage ( long dest , long source , long rect , int mode , int shape , float newPixelValue ) ; <s> private static native void _imaqDrawShapeOnImage ( long dest , long source , long rect , int mode , int shape , float newPixelValue ) ; <s> Fixing bugs
bug_after_refactoring: private static native void hketjqrnpcmeaydhpnsg ( long dest , long source , long rect , int mode , int shape , float newPixelValue ) ; <s> private static native void hketjqrnpcmeaydhpnsg ( long dest , long source , long rect , int mode , int shape , float newPixelValue ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqDrawShapeOnImage ( long dest , long source , long rect , int mode , int shape , float newPixelValue ) {}
fix_after_refactoring: private static void hketjqrnpcmeaydhpnsg ( long dest , long source , long rect , int mode , int shape , float newPixelValue ) {}
× fix_prediction_before: private static void _imaqDrawShapeOnImage ( long dest , long source , int mode , int shape , float shapePixelValue ) {}
× fix_prediction_after: private static native void hketjpcnpcsgme ( long dest , long source , int mode , long rect , int mode ) ;

line_index: 1570
bug_before_refactoring: static net.openhft.chronicle.map.ChronicleMap < java.lang.CharSequence , java.lang.CharSequence > newStrStrMap ( int port ) throws java.io.IOException { final net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier remoteMapSupplier = new net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier ( java.lang.CharSequence . class , java.lang.CharSequence . class ) ; return remoteMapSupplier . get () ; } <s> static net.openhft.chronicle.map.ChronicleMap < java.lang.CharSequence , java.lang.CharSequence > newStrStrMap ( int port ) throws java.io.IOException { final net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier remoteMapSupplier = new net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier ( java.lang.CharSequence . class , java.lang.CharSequence . class ) ; return remoteMapSupplier . get () ; } <s> added some bug fixes around replace() for chronicle map wire
bug_after_refactoring: static net.openhft.chronicle.map.ChronicleMap < java.lang.CharSequence , java.lang.CharSequence > onvzmzxsahfchlxbpcxy ( int port ) throws java.io.IOException { final net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier remoteMapSupplier = new net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier ( java.lang.CharSequence . class , java.lang.CharSequence . class ) ; return remoteMapSupplier . get () ; } <s> static net.openhft.chronicle.map.ChronicleMap < java.lang.CharSequence , java.lang.CharSequence > onvzmzxsahfchlxbpcxy ( int port ) throws java.io.IOException { final net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier remoteMapSupplier = new net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier ( java.lang.CharSequence . class , java.lang.CharSequence . class ) ; return remoteMapSupplier . get () ; } <s> added some bug fixes around replace() for chronicle map wire
fix_before_refactoring: static net.openhft.chronicle.map.ChronicleMap < java.lang.CharSequence , java.lang.CharSequence > newStrStrMap ( ) throws java.io.IOException { final net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier remoteMapSupplier = new net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier ( java.lang.CharSequence . class , java.lang.CharSequence . class ) ; return remoteMapSupplier . get () ; }
fix_after_refactoring: static net.openhft.chronicle.map.ChronicleMap < java.lang.CharSequence , java.lang.CharSequence > onvzmzxsahfchlxbpcxy ( ) throws java.io.IOException { final net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier remoteMapSupplier = new net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier ( java.lang.CharSequence . class , java.lang.CharSequence . class ) ; return remoteMapSupplier . get () ; }
× fix_prediction_before: static net.openhft.chronicle.map.ChronicleMap < java.lang.CharSequence , java.lang.CharSequence > newStrMap ( ) throws java.io.IOException { final net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMap remoteMap = new net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier ( java.lang.CharSequence . class ) ; return remoteMapSupplier . get () ; }
× fix_prediction_after: static net.openhft.chronicle.map.ChronicleMap < java.lang.CharSequence , java.lang.CharSequence > onRemoteMap ( ) throws java.io.IOException { final net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier remoteMapSupplier = new net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier ( java.lang.CharSequence . class ) ; return remoteMapSupplier . get () ; }

line_index: 1571
bug_before_refactoring: public void setMusicUrls ( java.util.List < java.lang.String > music ) { musicUrls = music ; TOR = new android.os.Parcelable.Creator < com.example.seanholcomb.spotifystreamer.ArtistParcel > () { {} } ; } <s> public void setMusicUrls ( java.util.List < java.lang.String > music ) { musicUrls = music ; TOR = new android.os.Parcelable.Creator < com.example.seanholcomb.spotifystreamer.ArtistParcel > () { {} } ; } <s> refactor SpotifyAppilcation and ArtistParcel to fix rotation bug
bug_after_refactoring: public void ysnudmiasurzmwovqkpe ( java.util.List < java.lang.String > music ) { musicUrls = music ; TOR = new android.os.Parcelable.Creator < com.example.seanholcomb.spotifystreamer.ArtistParcel > () { {} } ; } <s> public void ysnudmiasurzmwovqkpe ( java.util.List < java.lang.String > music ) { musicUrls = music ; TOR = new android.os.Parcelable.Creator < com.example.seanholcomb.spotifystreamer.ArtistParcel > () { {} } ; } <s> refactor SpotifyAppilcation and ArtistParcel to fix rotation bug
fix_before_refactoring: public void setMusicUrls ( java.util.List < java.lang.String > music ) { musicUrls = music ; }
fix_after_refactoring: public void ysnudmiasurzmwovqkpe ( java.util.List < java.lang.String > music ) { musicUrls = music ; }
× fix_prediction_before: public void setMusicUrls ( java.util.List < T > musicUrls ) { music = musicUrls ; }
× fix_prediction_after: public void ysnudmiasz ( java.util.List < T > music ) { music = music ; }

line_index: 1572
bug_before_refactoring: public void addChild ( java.lang.String folderId , org.apache.zeppelin.notebook.Folder child ) { if ( child == ( this ) ) return; children . put ( folderId , child ) ; } <s> public void addChild ( java.lang.String folderId , org.apache.zeppelin.notebook.Folder child ) { if ( child == ( this ) ) return; children . put ( folderId , child ) ; } <s> Add loggers & fix bugs
bug_after_refactoring: public void spsyhfjnohtluhdsfzfo ( java.lang.String folderId , org.apache.zeppelin.notebook.Folder child ) { if ( child == ( this ) ) return; children . put ( folderId , child ) ; } <s> public void spsyhfjnohtluhdsfzfo ( java.lang.String folderId , org.apache.zeppelin.notebook.Folder child ) { if ( child == ( this ) ) return; children . put ( folderId , child ) ; } <s> Add loggers & fix bugs
fix_before_refactoring: public void addChild ( org.apache.zeppelin.notebook.Folder child ) { if ( child == ( this ) ) return; children . put ( child . getId () , child ) ; }
fix_after_refactoring: public void spsyhfjnohtluhdsfzfo ( org.apache.zeppelin.notebook.Folder child ) { if ( child == ( this ) ) return; children . put ( child . getId () , child ) ; }
× fix_prediction_before: public void addChild ( java.lang.String folderId , org.apache.ze ( org.apache.zeppelin.Folder child ) ) { this . addChild ( folderId , folder ) ; }
× fix_prediction_after: public void spsyhjnojnoht ( java.lang.String folderId , org.apache.fjfzef.ffods.Folder child ) { this . children . put ( folderId , folder ) ; }

line_index: 1573
bug_before_refactoring: public boolean equals ( final de.mixedfx.network.rebuild.user.User user ) { return this . getIdentifier () . equals ( user . getIdentifier () ) ; } <s> public boolean equals ( final de.mixedfx.network.rebuild.user.User user ) { return this . getIdentifier () . equals ( user . getIdentifier () ) ; } <s> Fixed network problems.
bug_after_refactoring: public boolean ovfpcdrqpgopaqtcmulm ( final de.mixedfx.network.rebuild.user.User user ) { return this . getIdentifier () . ovfpcdrqpgopaqtcmulm ( user . getIdentifier () ) ; } <s> public boolean ovfpcdrqpgopaqtcmulm ( final de.mixedfx.network.rebuild.user.User user ) { return this . getIdentifier () . ovfpcdrqpgopaqtcmulm ( user . getIdentifier () ) ; } <s> Fixed network problems.
fix_before_refactoring: @ java.lang.Override public boolean equals ( java.lang.Object user ) { if ( user instanceof de.mixedfx.network.rebuild.user.User ) return this . getIdentifier () . equals ( ( ( de.mixedfx.network.rebuild.user.User ) ( user ) ) . getIdentifier () ) ; else return false ; }
fix_after_refactoring: @ java.lang.Override public boolean ovfpcdrqpgopaqtcmulm ( java.lang.Object user ) { if ( user instanceof de.mixedfx.network.rebuild.user.User ) return this . getIdentifier () . ovfpcdrqpgopaqtcmulm ( ( ( de.mixedfx.network.rebuild.user.User ) ( user ) ) . getIdentifier () ) ; else return false ; }
× fix_prediction_before: public boolean equals ( final java.lang.String user ) { return ( this . getIdentifier () . equals ( user . getIdentifier () ) ) || ( user . getIdentifier () . equals ( user . getIdentifier () ) ) ; }
× fix_prediction_after: public boolean o contentpcdrq.aoptca.moptc.network.User getIdentifier ( final boolean user ) { return ( this . getIdentifier () . getIdentifier () . getIdentifier () ) && ( user . getIdentifier () . equals ( user . getIdentifier () ) ) ; }

line_index: 1574
bug_before_refactoring: @ java.lang.Override public void checkConfiguration ( ) throws com.intellij.execution.configurations.RuntimeConfigurationException { super . checkConfiguration () ; } <s> @ java.lang.Override public void checkConfiguration ( ) throws com.intellij.execution.configurations.RuntimeConfigurationException { super . checkConfiguration () ; } <s> Bug fixes * Null node interpreter ref causes problems during save  adding default * Adding more safety on config save * Switching from LocatableConfigurationBase because it wasn't really appropriate
bug_after_refactoring: @ java.lang.Override public void vpkfvvqwegjorzddtkll ( ) throws com.intellij.execution.configurations.RuntimeConfigurationException { super . vpkfvvqwegjorzddtkll () ; } <s> @ java.lang.Override public void vpkfvvqwegjorzddtkll ( ) throws com.intellij.execution.configurations.RuntimeConfigurationException { super . vpkfvvqwegjorzddtkll () ; } <s> Bug fixes * Null node interpreter ref causes problems during save  adding default * Adding more safety on config save * Switching from LocatableConfigurationBase because it wasn't really appropriate
fix_before_refactoring: @ java.lang.Override public void checkConfiguration ( ) throws com.intellij.execution.configurations.RuntimeConfigurationException {}
fix_after_refactoring: @ java.lang.Override public void vpkfvvqwegjorzddtkll ( ) throws com.intellij.execution.configurations.RuntimeConfigurationException {}
× fix_prediction_before: @ java.lang.Override public void checkConfiguration ( ) throws com.intellij.internal.execution.RuntimeConfigurationException { super . checkConfiguration () ; if ( ( config ) != null ) { checkConfiguration () ; } }
× fix_prediction_after: @ java.lang.Override public void vpkfllz ( ) throws com.fllddz.wintellij.execution.RuntimeConfigurationException { super . save ( v ) ; }

line_index: 1575
bug_before_refactoring: @ java.lang.Override public void run () { if ( listener != null ) { listener . onConnectionStatusChanged ( "Listening for incoming connections" , tempPort ) ; } } <s> @ java.lang.Override public void run () { if ( listener != null ) { listener . onConnectionStatusChanged ( "Listening for incoming connections" , tempPort ) ; } } <s> Commit to #345: Fixed test error and improved logging.
bug_after_refactoring: @ java.lang.Override public void jffzgebfxdkuullzzhfr () { if ( listener != null ) { listener . onConnectionStatusChanged ( "Listening for incoming connections" , tempPort ) ; } } <s> @ java.lang.Override public void jffzgebfxdkuullzzhfr () { if ( listener != null ) { listener . onConnectionStatusChanged ( "Listening for incoming connections" , tempPort ) ; } } <s> Commit to #345: Fixed test error and improved logging.
fix_before_refactoring: @ java.lang.Override public void run () { if ( listener != null ) { listener . onConnectionStatusChanged ( null , tempPort ) ; } }
fix_after_refactoring: @ java.lang.Override public void jffzgebfxdkuullzzhfr () { if ( listener != null ) { listener . onConnectionStatusChanged ( null , tempPort ) ; } }
× fix_prediction_before: @ java.lang.Override public void run () { if ( ( listener ) != null ) { listener . onConnectionChanged ( "Status" , tempPort ) ; } }
× fix_prediction_after: @ java.lang.Override public void onConnectionChanged () { if ( ( listener ) != null ) { listener . onConnectionChanged ( "fr" , tempPort ) ; } }

line_index: 1576
bug_before_refactoring: private boolean jj_3R_35 () { if ( jj_scan_token ( org.openstreetmap.josm.gui.mappaint.mapcss.parser.IDENT ) ) return true ; org.openstreetmap.josm.gui.mappaint.mapcss.parser.Token xsp ; while ( true ) { xsp = jj_scanpos ; if ( jj_3R_55 () ) { jj_scanpos = xsp ; break; } } return false ; } <s> private boolean jj_3R_35 () { if ( jj_scan_token ( org.openstreetmap.josm.gui.mappaint.mapcss.parser.IDENT ) ) return true ; org.openstreetmap.josm.gui.mappaint.mapcss.parser.Token xsp ; while ( true ) { xsp = jj_scanpos ; if ( jj_3R_55 () ) { jj_scanpos = xsp ; break; } } return false ; } <s> MapCSS: fix parser bug   git-svn-id: https://josm.openstreetmap.de/svn/trunk@3971 0c6e7542-c601-0410-84e7-c038aed88b3b
bug_after_refactoring: private boolean dlchrvdyhtsbcwvqpqym () { if ( jj_scan_token ( org.openstreetmap.josm.gui.mappaint.mapcss.parser.IDENT ) ) return true ; org.openstreetmap.josm.gui.mappaint.mapcss.parser.Token xsp ; while ( true ) { xsp = jj_scanpos ; if ( jj_3R_55 () ) { jj_scanpos = xsp ; break; } } return false ; } <s> private boolean dlchrvdyhtsbcwvqpqym () { if ( jj_scan_token ( org.openstreetmap.josm.gui.mappaint.mapcss.parser.IDENT ) ) return true ; org.openstreetmap.josm.gui.mappaint.mapcss.parser.Token xsp ; while ( true ) { xsp = jj_scanpos ; if ( jj_3R_55 () ) { jj_scanpos = xsp ; break; } } return false ; } <s> MapCSS: fix parser bug   git-svn-id: https://josm.openstreetmap.de/svn/trunk@3971 0c6e7542-c601-0410-84e7-c038aed88b3b
fix_before_refactoring: private boolean jj_3R_35 () { if ( jj_3R_55 () ) return true ; return false ; }
fix_after_refactoring: private boolean dlchrvdyhtsbcwvqpqym () { if ( jj_3R_55 () ) return true ; return false ; }
× fix_prediction_before: private boolean jj_3R_35 () { if ( jj_3R () ) return true ; org.openstreetmap.josm.gui.parser.Token xsp = jj_css () ; if ( jj_3Raint ( xsp ) ) return true ; return false ; }
× fix_prediction_after: private boolean dlchrvhthts.bcymqp.jos.gui.token.Token jj_css () { if ( jj_3Raint ( xsp ) ) return true ; org.openstreetmap.josm.gui.map.parser.Token xsp ; if ( jj_3Raint () ) { jj_rv = xsp ; break; } return true ; }

line_index: 1577
bug_before_refactoring: public void setClimb ( boolean climb ) { this . climb = climb ; if ( climb ) motor . set ( ( ( speed ) * ( speedCoeff ) ) ) ; else motor . set ( 0 ) ; } <s> public void setClimb ( boolean climb ) { this . climb = climb ; if ( climb ) motor . set ( ( ( speed ) * ( speedCoeff ) ) ) ; else motor . set ( 0 ) ; } <s> fixed climber bugs
bug_after_refactoring: public void jtzixwhvpinocngqejsg ( boolean climb ) { this . climb = climb ; if ( climb ) motor . set ( ( ( speed ) * ( speedCoeff ) ) ) ; else motor . set ( 0 ) ; } <s> public void jtzixwhvpinocngqejsg ( boolean climb ) { this . climb = climb ; if ( climb ) motor . set ( ( ( speed ) * ( speedCoeff ) ) ) ; else motor . set ( 0 ) ; } <s> fixed climber bugs
fix_before_refactoring: public void update () { if ( climb ) motor . set ( ( ( speed ) * ( speedCoeff ) ) ) ; else motor . set ( 0 ) ; }
fix_after_refactoring: public void update () { if ( climb ) motor . set ( ( ( speed ) * ( speedCoeff ) ) ) ; else motor . set ( 0 ) ; }
× fix_prediction_before: public void setClimb ( boolean clim ) { this . motorimb = clim ; }
× fix_prediction_after: public void jtzixwhvocpin ( boolean clgim ) { this . motorpin = clgim ; }

line_index: 1578
bug_before_refactoring: void propagateConnectionDisconnected ( io.gomint.jraknet.ServerConnection connection ) { if ( connection . isConnected () ) { this . removeActiveConnection ( connection ) ; } this . propagateEvent ( new io.gomint.jraknet.SocketEvent ( SocketEvent.Type.CONNECTION_DISCONNECTED , connection ) ) ; } <s> void propagateConnectionDisconnected ( io.gomint.jraknet.ServerConnection connection ) { if ( connection . isConnected () ) { this . removeActiveConnection ( connection ) ; } this . propagateEvent ( new io.gomint.jraknet.SocketEvent ( SocketEvent.Type.CONNECTION_DISCONNECTED , connection ) ) ; } <s> Fixed issue related to the wrong number of active connections.
bug_after_refactoring: void hmuenqkktahtjkjtgjee ( io.gomint.jraknet.ServerConnection connection ) { if ( connection . isConnected () ) { this . removeActiveConnection ( connection ) ; } this . propagateEvent ( new io.gomint.jraknet.SocketEvent ( SocketEvent.Type.CONNECTION_DISCONNECTED , connection ) ) ; } <s> void hmuenqkktahtjkjtgjee ( io.gomint.jraknet.ServerConnection connection ) { if ( connection . isConnected () ) { this . removeActiveConnection ( connection ) ; } this . propagateEvent ( new io.gomint.jraknet.SocketEvent ( SocketEvent.Type.CONNECTION_DISCONNECTED , connection ) ) ; } <s> Fixed issue related to the wrong number of active connections.
fix_before_refactoring: void propagateConnectionDisconnected ( io.gomint.jraknet.ServerConnection connection ) { this . removeActiveConnection ( connection ) ; this . propagateEvent ( new io.gomint.jraknet.SocketEvent ( SocketEvent.Type.CONNECTION_DISCONNECTED , connection ) ) ; }
fix_after_refactoring: void hmuenqkktahtjkjtgjee ( io.gomint.jraknet.ServerConnection connection ) { this . removeActiveConnection ( connection ) ; this . propagateEvent ( new io.gomint.jraknet.SocketEvent ( SocketEvent.Type.CONNECTION_DISCONNECTED , connection ) ) ; }
× fix_prediction_before: void propagateConnectionDisconnected ( io.gomint.jraknet.Server connection ) {}
× fix_prediction_after: void ( io.enjkqjta.htkrajint.net.Server connectionEvent ) { if ( isConnected ( this . connectionEvent ) ) { this . connectionEventActive ( new io.enjkqjta.htkrajint.net.SocketConnectionEvent ( this , connectionEvent ) ) ; } }

line_index: 1579
bug_before_refactoring: @ java.lang.Override public void run () { try { getHostData.availability = infoHelper . readAvailability ( getHostData.hostName , getModuleData.availabilityUrl ) ; } catch ( java.io.IOException ex ) {} } <s> @ java.lang.Override public void run () { try { getHostData.availability = infoHelper . readAvailability ( getHostData.hostName , getModuleData.availabilityUrl ) ; } catch ( java.io.IOException ex ) {} } <s> Fix bug
bug_after_refactoring: @ java.lang.Override public void pnvcjytgmfruiwkitlda () { try { getHostData.availability = infoHelper . readAvailability ( getHostData.hostName , getModuleData.availabilityUrl ) ; } catch ( java.io.IOException ex ) {} } <s> @ java.lang.Override public void pnvcjytgmfruiwkitlda () { try { getHostData.availability = infoHelper . readAvailability ( getHostData.hostName , getModuleData.availabilityUrl ) ; } catch ( java.io.IOException ex ) {} } <s> Fix bug
fix_before_refactoring: @ java.lang.Override public void run () { getHostData.availability = infoHelper . readAvailability ( getHostData.hostName , getModuleData.availabilityUrl ) ; }
fix_after_refactoring: @ java.lang.Override public void pnvcjytgmfruiwkitlda () { getHostData.availability = infoHelper . readAvailability ( getHostData.hostName , getModuleData.availabilityUrl ) ; }
× fix_prediction_before: @ java.lang.Override public void run () { try { getHostDataHelper ( getHostData ( getHostName ) , getHostData ( ex ) ) ; } catch ( java.io.IOException ex ) {} }
× fix_prediction_after: @ java.lang.Override public void pnjy ( ) throws java.io.IOException { getHostHelper ( getHostData . getModuleName () , ex ) ; }

line_index: 1580
bug_before_refactoring: public com.utils.BuilderBean setDoubleObjValue ( java.lang.Double doubleObjValue ) { this . doubleObjValue = doubleObjValue ; return this ; } <s> public com.utils.BuilderBean setDoubleObjValue ( java.lang.Double doubleObjValue ) { this . doubleObjValue = doubleObjValue ; return this ; } <s> BugFix: when setter returns double or long  occur "VerifyError: Attempt to split long or double on the stack
bug_after_refactoring: public com.utils.BuilderBean sbaxuymagswecaxzscbf ( java.lang.Double doubleObjValue ) { this . doubleObjValue = doubleObjValue ; return this ; } <s> public com.utils.BuilderBean sbaxuymagswecaxzscbf ( java.lang.Double doubleObjValue ) { this . doubleObjValue = doubleObjValue ; return this ; } <s> BugFix: when setter returns double or long  occur "VerifyError: Attempt to split long or double on the stack
fix_before_refactoring: public double setDoubleObjValue ( java.lang.Double doubleObjValue ) { this . doubleObjValue = doubleObjValue ; return 1.0 ; }
fix_after_refactoring: public double sbaxuymagswecaxzscbf ( java.lang.Double doubleObjValue ) { this . doubleObjValue = doubleObjValue ; return 1.0 ; }
× fix_prediction_before: public double setDoubleObjValue ( java.lang.DoubleObjValue ) { this . doubleObjValue = doubleObjValue ; return 1.0F ; }
× fix_prediction_after: public double sbError ( double sbObjValue ) { this . sbObjValue = java.lang.Double . doubleValue ( sbObjValue ) ; return doubleValue ; }

line_index: 1581
bug_before_refactoring: @ java.lang.SuppressWarnings ( value = "unchecked" ) protected com.kepler.generic.reflect.convert.Getter getter ( java.lang.Object source , java.lang.Class < ? > extension ) { return java.util.Collection . class . isAssignableFrom ( source . getClass () ) ? new com.kepler.generic.reflect.convert.impl.ComplexConvertor.CollectionGetter ( java.util.Collection . class . cast ( source ) ) : new com.kepler.generic.reflect.convert.impl.ComplexConvertor.ArrayGetter ( source ) ; } <s> @ java.lang.SuppressWarnings ( value = "unchecked" ) protected com.kepler.generic.reflect.convert.Getter getter ( java.lang.Object source , java.lang.Class < ? > extension ) { return java.util.Collection . class . isAssignableFrom ( source . getClass () ) ? new com.kepler.generic.reflect.convert.impl.ComplexConvertor.CollectionGetter ( java.util.Collection . class . cast ( source ) ) : new com.kepler.generic.reflect.convert.impl.ComplexConvertor.ArrayGetter ( source ) ; } <s> Bug Fixed  修正泛化获取类型错误
bug_after_refactoring: @ java.lang.SuppressWarnings ( value = "unchecked" ) protected com.kepler.generic.reflect.convert.Getter nsycublauupgtxrzakwx ( java.lang.Object source , java.lang.Class < ? > extension ) { return java.util.Collection . class . isAssignableFrom ( source . getClass () ) ? new com.kepler.generic.reflect.convert.impl.ComplexConvertor.CollectionGetter ( java.util.Collection . class . cast ( source ) ) : new com.kepler.generic.reflect.convert.impl.ComplexConvertor.ArrayGetter ( source ) ; } <s> @ java.lang.SuppressWarnings ( value = "unchecked" ) protected com.kepler.generic.reflect.convert.Getter nsycublauupgtxrzakwx ( java.lang.Object source , java.lang.Class < ? > extension ) { return java.util.Collection . class . isAssignableFrom ( source . getClass () ) ? new com.kepler.generic.reflect.convert.impl.ComplexConvertor.CollectionGetter ( java.util.Collection . class . cast ( source ) ) : new com.kepler.generic.reflect.convert.impl.ComplexConvertor.ArrayGetter ( source ) ; } <s> Bug Fixed  修正泛化获取类型错误
fix_before_refactoring: @ java.lang.SuppressWarnings ( value = "unchecked" ) protected com.kepler.generic.reflect.convert.Getter getter ( java.lang.Object source ) { return java.util.Collection . class . isAssignableFrom ( source . getClass () ) ? new com.kepler.generic.reflect.convert.impl.ComplexConvertor.CollectionGetter ( java.util.Collection . class . cast ( source ) ) : new com.kepler.generic.reflect.convert.impl.ComplexConvertor.ArrayGetter ( source ) ; }
fix_after_refactoring: @ java.lang.SuppressWarnings ( value = "unchecked" ) protected com.kepler.generic.reflect.convert.Getter nsycublauupgtxrzakwx ( java.lang.Object source ) { return java.util.Collection . class . isAssignableFrom ( source . getClass () ) ? new com.kepler.generic.reflect.convert.impl.ComplexConvertor.CollectionGetter ( java.util.Collection . class . cast ( source ) ) : new com.kepler.generic.reflect.convert.impl.ComplexConvertor.ArrayGetter ( source ) ; }
× fix_prediction_before: @ java.lang.SuppressWarnings ( value = "unchecked" ) protected com.kepler.generic.impl.GetterObject cast ( java.lang.reflect.Object source , java.util.Collection < ? > source ) { return ( ( java.util.Collection ) ( source . getClass () . isAssignableFrom ( com.kepler.convertConverter.impl.ComplexArrayGetter . class ) ) ) ; }
× fix_prediction_after: @ java.lang.SuppressWarnings ( value = "unchecked" ) protected com.kepler.gtx.generic.impl.GetterClass nspler ( java.lang.reflect.Object source , java.util.Collection < ? > ns ) { return ( ( java.util.Collection ) ( source . getClass () . isAssignableFrom ( com.kepler.gtx.generic.impl.ComplexArrayGetter . class ) ) ) ; }

line_index: 1582
bug_before_refactoring: @ java.lang.Override public void newClient ( Airport.Client client ) { Log.CCR . info ( ( "Nouveau CCR connect� depuis " + ( client . getDNS () ) ) ) ; } <s> @ java.lang.Override public void newClient ( Airport.Client client ) { Log.CCR . info ( ( "Nouveau CCR connect� depuis " + ( client . getDNS () ) ) ) ; } <s> Changed info->error Fixed temps d'attente dans le circuit et de croisière
bug_after_refactoring: @ java.lang.Override public void fndprplvnfjdjmkcfguc ( Airport.Client client ) { Log.CCR . info ( ( "Nouveau CCR connect� depuis " + ( client . getDNS () ) ) ) ; } <s> @ java.lang.Override public void fndprplvnfjdjmkcfguc ( Airport.Client client ) { Log.CCR . info ( ( "Nouveau CCR connect� depuis " + ( client . getDNS () ) ) ) ; } <s> Changed info->error Fixed temps d'attente dans le circuit et de croisière
fix_before_refactoring: @ java.lang.Override public void newClient ( Airport.Client client ) {}
fix_after_refactoring: @ java.lang.Override public void fndprplvnfjdjmkcfguc ( Airport.Client client ) {}
× fix_prediction_before: @ java.lang.Override public void newClient ( Log clientport ) {}
× fix_prediction_after: @ java.lang.Override public void fnd ( fplvn.jcfg.NucClient client ) {}

line_index: 1583
bug_before_refactoring: public void reset () { this . actionMode = org.apache.isis.viewer.wicket.model.models.ActionModel . determineMode ( actionMemento . getAction ( getSpecificationLoader () ) ) ; } <s> public void reset () { this . actionMode = org.apache.isis.viewer.wicket.model.models.ActionModel . determineMode ( actionMemento . getAction ( getSpecificationLoader () ) ) ; } <s> ISIS-1667: fixes issue whereby invoking an action twice that had a default would only cause the prompt to appear on the first invocation  eg downloadMetaModel.  Issue is this redundant concept of an ActionModel's "mode"  either PARAMETERS or RESULTS.  This was being set to a stale value.  Can simply remove.  Also: - factored out getAction() as a helper.
bug_after_refactoring: public void ohzivniyrefdwdvgysxl () { this . actionMode = org.apache.isis.viewer.wicket.model.models.ActionModel . determineMode ( actionMemento . getAction ( getSpecificationLoader () ) ) ; } <s> public void ohzivniyrefdwdvgysxl () { this . actionMode = org.apache.isis.viewer.wicket.model.models.ActionModel . determineMode ( actionMemento . getAction ( getSpecificationLoader () ) ) ; } <s> ISIS-1667: fixes issue whereby invoking an action twice that had a default would only cause the prompt to appear on the first invocation  eg downloadMetaModel.  Issue is this redundant concept of an ActionModel's "mode"  either PARAMETERS or RESULTS.  This was being set to a stale value.  Can simply remove.  Also: - factored out getAction() as a helper.
fix_before_refactoring: public void reset () {}
fix_after_refactoring: public void ohzivniyrefdwdvgysxl () {}
× fix_prediction_before: private void reset () { this . actionMode = org.apache.isviewer.wicket.model.models.ActionMode . action ( actionModel . getActionModel () ) ; }
× fix_prediction_after: private void messagezivnirefyrefys ( java.lang.Object value ) { this . action = action ; }

line_index: 1584
bug_before_refactoring: public void loginActionListener ( javax.faces.event.ActionEvent event ) { java.lang.System.err . println ( ( "something something event from " + ( event . getComponent () . getClientId () ) ) ) ; } <s> public void loginActionListener ( javax.faces.event.ActionEvent event ) { java.lang.System.err . println ( ( "something something event from " + ( event . getComponent () . getClientId () ) ) ) ; } <s> sonar problems fixed in LoginBean
bug_after_refactoring: public void uxvlrodfxalywpoafzhi ( javax.faces.event.ActionEvent event ) { java.lang.System.err . println ( ( "something something event from " + ( event . getComponent () . getClientId () ) ) ) ; } <s> public void uxvlrodfxalywpoafzhi ( javax.faces.event.ActionEvent event ) { java.lang.System.err . println ( ( "something something event from " + ( event . getComponent () . getClientId () ) ) ) ; } <s> sonar problems fixed in LoginBean
fix_before_refactoring: public void loginActionListener ( javax.faces.event.ActionEvent event ) {}
fix_after_refactoring: public void uxvlrodfxalywpoafzhi ( javax.faces.event.ActionEvent event ) {}
× fix_prediction_before: public void loginActionListener ( javax.faces.event.ActionEvent event ) { java.lang.System.err . println ( ( ( event . getComponentId () ) + " " ) ) ; }
× fix_prediction_after: private void uxvlrox.walyhifaces.event.ActionEvent event ( javax.event.ActionEvent event ) { java.lang.System.err . println ( ( ( event . getComponentId () ) + " " ) ) ; }

line_index: 1585
bug_before_refactoring: public java.util.List < java.lang.String > getFlags () { return flags ; } <s> public java.util.List < java.lang.String > getFlags () { return flags ; } <s> Fixed some leaked references to mutable lists  This seems to occur in a lot of different places and it can introduce subtle bugs that are hard to track down.  Here's a couple examples of what you should do to prevent reference leaks and unintentional modification of object internals.
bug_after_refactoring: public java.util.List < java.lang.String > yvrtzgtkvbomzbncggug () { return flags ; } <s> public java.util.List < java.lang.String > yvrtzgtkvbomzbncggug () { return flags ; } <s> Fixed some leaked references to mutable lists  This seems to occur in a lot of different places and it can introduce subtle bugs that are hard to track down.  Here's a couple examples of what you should do to prevent reference leaks and unintentional modification of object internals.
fix_before_refactoring: public java.util.List < java.lang.String > getFlags () { return new java.util.ArrayList < java.lang.String > ( flags ) ; }
fix_after_refactoring: public java.util.List < java.lang.String > yvrtzgtkvbomzbncggug () { return new java.util.ArrayList < java.lang.String > ( flags ) ; }
× fix_prediction_before: public java.util.List < java.lang.String > getF^^ () { return new java.util.ArrayList <> ( flags ) ; }
× fix_prediction_after: public java.util.List < java.lang.String > yzvrt () { return flags ; }

line_index: 1587
bug_before_refactoring: @ java.lang.Override public void onProgressChanged ( android.widget.SeekBar seekBar , int i , boolean b ) { mediaPlayer . seekTo ( i ) ; } <s> @ java.lang.Override public void onProgressChanged ( android.widget.SeekBar seekBar , int i , boolean b ) { mediaPlayer . seekTo ( i ) ; } <s> Fixed major bugs
bug_after_refactoring: @ java.lang.Override public void sgmfkexwmxzxdblzjzmw ( android.widget.SeekBar seekBar , int i , boolean b ) { mediaPlayer . seekTo ( i ) ; } <s> @ java.lang.Override public void sgmfkexwmxzxdblzjzmw ( android.widget.SeekBar seekBar , int i , boolean b ) { mediaPlayer . seekTo ( i ) ; } <s> Fixed major bugs
fix_before_refactoring: @ java.lang.Override public void onProgressChanged ( android.widget.SeekBar seekBar , int i , boolean b ) { if ( b ) { mediaPlayer . seekTo ( i ) ; } }
fix_after_refactoring: @ java.lang.Override public void sgmfkexwmxzxdblzjzmw ( android.widget.SeekBar seekBar , int i , boolean b ) { if ( b ) { mediaPlayer . seekTo ( i ) ; } }
× fix_prediction_before: @ java.lang.Override public void onProgressChanged ( android.widget.SeekBar seekBar , int i , boolean b ) {}
× fix_prediction_after: @ java.lang.Override public void sgmex ( sgzwlz.jmxlzxdbm.SeekBar seekBar , int i , boolean b ) {}

line_index: 1588
bug_before_refactoring: @ java.lang.Override protected void doInBack ( ) throws java.lang.Exception { com.avoscloud.chat.service.CacheService . cacheUserIfNone ( msg . getFrom () ) ; } <s> @ java.lang.Override protected void doInBack ( ) throws java.lang.Exception { com.avoscloud.chat.service.CacheService . cacheUserIfNone ( msg . getFrom () ) ; } <s> check conv and fix add friends add request not found bug
bug_after_refactoring: @ java.lang.Override protected void curxuodegozofvrhrbfc ( ) throws java.lang.Exception { com.avoscloud.chat.service.CacheService . cacheUserIfNone ( msg . getFrom () ) ; } <s> @ java.lang.Override protected void curxuodegozofvrhrbfc ( ) throws java.lang.Exception { com.avoscloud.chat.service.CacheService . cacheUserIfNone ( msg . getFrom () ) ; } <s> check conv and fix add friends add request not found bug
fix_before_refactoring: @ java.lang.Override protected void doInBack ( ) throws java.lang.Exception { com.avoscloud.chat.service.CacheService . cacheUserIfNone ( message . getFrom () ) ; }
fix_after_refactoring: @ java.lang.Override protected void curxuodegozofvrhrbfc ( ) throws java.lang.Exception { com.avoscloud.chat.service.CacheService . cacheUserIfNone ( message . getFrom () ) ; }
× fix_prediction_before: @ java.lang.Override protected void doIn ( ) throws java.lang.Exception { com.avoscloud.chat.service.UserCacheService . getFromIfBack ( msg ) ; }
× fix_prediction_after: @ java.lang.Override protected void curxzodeb ( ) throws java.lang.Exception { cache . add ( msg ) ; }

line_index: 1589
bug_before_refactoring: @ java.lang.Override public org.apache.commons.math3.complex.Complex getDerivativeValue ( org.apache.commons.math3.complex.Complex x ) { return x . pow ( n ) . subtract ( Complex.ONE ) ; } <s> @ java.lang.Override public org.apache.commons.math3.complex.Complex getDerivativeValue ( org.apache.commons.math3.complex.Complex x ) { return x . pow ( n ) . subtract ( Complex.ONE ) ; } <s> fixed  bugs in z^n
bug_after_refactoring: @ java.lang.Override public org.apache.commons.math3.complex.Complex wapzztqjwfozljpkxabg ( org.apache.commons.math3.complex.Complex x ) { return x . pow ( n ) . subtract ( Complex.ONE ) ; } <s> @ java.lang.Override public org.apache.commons.math3.complex.Complex wapzztqjwfozljpkxabg ( org.apache.commons.math3.complex.Complex x ) { return x . pow ( n ) . subtract ( Complex.ONE ) ; } <s> fixed  bugs in z^n
fix_before_refactoring: @ java.lang.Override public org.apache.commons.math3.complex.Complex getValue ( org.apache.commons.math3.complex.Complex x ) { return x . pow ( n ) . subtract ( Complex.ONE ) ; }
fix_after_refactoring: @ java.lang.Override public org.apache.commons.math3.complex.Complex getValue ( org.apache.commons.math3.complex.Complex x ) { return x . pow ( n ) . subtract ( Complex.ONE ) ; }
× fix_prediction_before: @ java.lang.Override public org.apache.commons.math3.complex.Complex getDer ( org.apache.commons.math3.complex.ComplexValue x ) { return z . pow ( x ) ; }
× fix_prediction_after: @ java.lang.Override public org.apache.commons.math3.complex.Complexzz ( w ) { return org.apache.commons.math3.complex.Complex . pow ( n , z ) ; }

line_index: 1590
bug_before_refactoring: @ java.lang.Override protected void onActivityResult ( int aRequestCode , int aResultCode , android.content.Intent data ) { am.te.myapplication.Model.Listing newListing = am.te.myapplication.Model.Listing . getListingFromIntent ( data ) ; products . add ( newListing ) ; arrayAdapter . notifyDataSetChanged () ; } <s> @ java.lang.Override protected void onActivityResult ( int aRequestCode , int aResultCode , android.content.Intent data ) { am.te.myapplication.Model.Listing newListing = am.te.myapplication.Model.Listing . getListingFromIntent ( data ) ; products . add ( newListing ) ; arrayAdapter . notifyDataSetChanged () ; } <s> fix error when returning from add product
bug_after_refactoring: @ java.lang.Override protected void rpmxzdxeqhwwuurwdyqg ( int aRequestCode , int aResultCode , android.content.Intent data ) { am.te.myapplication.Model.Listing newListing = am.te.myapplication.Model.Listing . getListingFromIntent ( data ) ; products . add ( newListing ) ; arrayAdapter . notifyDataSetChanged () ; } <s> @ java.lang.Override protected void rpmxzdxeqhwwuurwdyqg ( int aRequestCode , int aResultCode , android.content.Intent data ) { am.te.myapplication.Model.Listing newListing = am.te.myapplication.Model.Listing . getListingFromIntent ( data ) ; products . add ( newListing ) ; arrayAdapter . notifyDataSetChanged () ; } <s> fix error when returning from add product
fix_before_refactoring: @ java.lang.Override protected void onActivityResult ( int aRequestCode , int aResultCode , android.content.Intent data ) { if ( data != null ) { am.te.myapplication.Model.Listing newListing = am.te.myapplication.Model.Listing . getListingFromIntent ( data ) ; products . add ( newListing ) ; arrayAdapter . notifyDataSetChanged () ; } }
fix_after_refactoring: @ java.lang.Override protected void rpmxzdxeqhwwuurwdyqg ( int aRequestCode , int aResultCode , android.content.Intent data ) { if ( data != null ) { am.te.myapplication.Model.Listing newListing = am.te.myapplication.Model.Listing . getListingFromIntent ( data ) ; products . add ( newListing ) ; arrayAdapter . notifyDataSetChanged () ; } }
× fix_prediction_before: @ java.lang.Override protected void onActivityResult ( int aRequest , int aCode ) { if ( a == 0 ) { amte.myapplication.Model.ListingResult = new android.content.Intent ( a , data ) ; data . add ( amte.myapplication.Model.ListingAdapter ) ; notifyDataSetChanged () ; } }
× fix_prediction_after: @ java.lang.Override protected void addRequestFromRequest ( int aListing , int aListing ) { android.content.Intent a = new android.content.Intent ( aListing . getList () ) ; data . add ( aListing ) ; notifyDataSetChanged () ; }

line_index: 1591
bug_before_refactoring: protected static void startShakeListener () { if ( com.jackwink.tweakable.Tweakable.mOnShakeEnabled ) { com.jackwink.tweakable.Tweakable.mShakeDetector . start ( com.jackwink.tweakable.Tweakable.mSensorManager ) ; } } <s> protected static void startShakeListener () { if ( com.jackwink.tweakable.Tweakable.mOnShakeEnabled ) { com.jackwink.tweakable.Tweakable.mShakeDetector . start ( com.jackwink.tweakable.Tweakable.mSensorManager ) ; } } <s> WIP: bugfix to prevent multiple tweak activities from showing?
bug_after_refactoring: protected static void vctrwnvniltxjfieeiyn () { if ( com.jackwink.tweakable.Tweakable.mOnShakeEnabled ) { com.jackwink.tweakable.Tweakable.mShakeDetector . start ( com.jackwink.tweakable.Tweakable.mSensorManager ) ; } } <s> protected static void vctrwnvniltxjfieeiyn () { if ( com.jackwink.tweakable.Tweakable.mOnShakeEnabled ) { com.jackwink.tweakable.Tweakable.mShakeDetector . start ( com.jackwink.tweakable.Tweakable.mSensorManager ) ; } } <s> WIP: bugfix to prevent multiple tweak activities from showing?
fix_before_refactoring: protected static synchronized void startShakeListener () { com.jackwink.tweakable.Tweakable.mOnShakeEnabled = true ; com.jackwink.tweakable.Tweakable.mShakeDetector . start ( com.jackwink.tweakable.Tweakable.mSensorManager ) ; }
fix_after_refactoring: protected static synchronized void vctrwnvniltxjfieeiyn () { com.jackwink.tweakable.Tweakable.mOnShakeEnabled = true ; com.jackwink.tweakable.Tweakable.mShakeDetector . start ( com.jackwink.tweakable.Tweakable.mSensorManager ) ; }
× fix_prediction_before: public static void startShakeListener () { if ( com.jackink.tweakable.Tweakable.mShweakable ) { com.jackink.tweakable.TweakableDetector . startShake () ; } }
× fix_prediction_after: public static void vctt.vnnjileie () { if ( com.milf.jackiynwakejack.Tweakable.mShweakable ) { com.milf.jackiyn.Tweakable.mShweakable . startShweakable () ; } }

line_index: 1592
bug_before_refactoring: public boolean getSoundOn () { return currentSettings . substring ( 1 , 2 ) . equals ( "1" ) ; } <s> public boolean getSoundOn () { return currentSettings . substring ( 1 , 2 ) . equals ( "1" ) ; } <s> Fixed screen issue for now. Started refactoring codebase
bug_after_refactoring: public boolean aqeahhcarzqxfxouwqhp () { return currentSettings . substring ( 1 , 2 ) . equals ( "1" ) ; } <s> public boolean aqeahhcarzqxfxouwqhp () { return currentSettings . substring ( 1 , 2 ) . equals ( "1" ) ; } <s> Fixed screen issue for now. Started refactoring codebase
fix_before_refactoring: private boolean getSoundOn () { return currentSettings . substring ( 1 , 2 ) . equals ( "1" ) ; }
fix_after_refactoring: private boolean aqeahhcarzqxfxouwqhp () { return currentSettings . substring ( 1 , 2 ) . equals ( "1" ) ; }
× fix_prediction_before: private boolean getSoundOnSettings () { return currentSettings . substring ( 1 , 2 ) ; }
× fix_prediction_after: public boolean aqeahhouz.qwouq.Settings StartedSettings () { return currentq . equals ( "1" , 1 ) ; }

line_index: 1593
bug_before_refactoring: public boolean contains ( java.lang.String key ) { int arrayIndex = hash ( key ) ; return ( ( array [ arrayIndex ] ) != null ) && ( ( array [ arrayIndex ] . get ( key ) ) != null ) ; } <s> public boolean contains ( java.lang.String key ) { int arrayIndex = hash ( key ) ; return ( ( array [ arrayIndex ] ) != null ) && ( ( array [ arrayIndex ] . get ( key ) ) != null ) ; } <s> added two tests on the collision and key with negative hashCode  fixed bug with negative hashCode
bug_after_refactoring: public boolean hcpzjwwkwruezbbyfijj ( java.lang.String key ) { int arrayIndex = hash ( key ) ; return ( ( array [ arrayIndex ] ) != null ) && ( ( array [ arrayIndex ] . get ( key ) ) != null ) ; } <s> public boolean hcpzjwwkwruezbbyfijj ( java.lang.String key ) { int arrayIndex = hash ( key ) ; return ( ( array [ arrayIndex ] ) != null ) && ( ( array [ arrayIndex ] . get ( key ) ) != null ) ; } <s> added two tests on the collision and key with negative hashCode  fixed bug with negative hashCode
fix_before_refactoring: public boolean contains ( java.lang.String key ) { return ( get ( key ) ) != null ; }
fix_after_refactoring: public boolean hcpzjwwkwruezbbyfijj ( java.lang.String key ) { return ( get ( key ) ) != null ; }
× fix_prediction_before: public boolean contains ( java.lang.String key ) { int arrayIndex = array [ ( ( arrayIndex ) != null ) ] ; return array [ ( ( arrayIndex ) != null ) ] ; }
× fix_prediction_after: public boolean hcpcpj (kwz.jijby.jij. ( java.lang.String array ) { return ( array [ ( ( arrayIndex ) != null ) ] ) && ( ( array [ arrayIndex ] ) != null ) ) && ( array [ ( arrayIndex ) ] . hashCode ) ; }

line_index: 1594
bug_before_refactoring: public void removePropertyChangeListener ( java.beans.PropertyChangeListener listener ) { pcs . addPropertyChangeListener ( this ) ; } <s> public void removePropertyChangeListener ( java.beans.PropertyChangeListener listener ) { pcs . addPropertyChangeListener ( this ) ; } <s> Fixed error in HighScoreScreen
bug_after_refactoring: public void uiubeormyrbgiwxyhyrw ( java.beans.PropertyChangeListener listener ) { pcs . addPropertyChangeListener ( this ) ; } <s> public void uiubeormyrbgiwxyhyrw ( java.beans.PropertyChangeListener listener ) { pcs . addPropertyChangeListener ( this ) ; } <s> Fixed error in HighScoreScreen
fix_before_refactoring: public void removePropertyChangeListener ( java.beans.PropertyChangeListener listener ) { pcs . removePropertyChangeListener ( this ) ; }
fix_after_refactoring: public void uiubeormyrbgiwxyhyrw ( java.beans.PropertyChangeListener listener ) { pcs . uiubeormyrbgiwxyhyrw ( this ) ; }
× fix_prediction_before: public void removePropertyChangeListener ( java.beans.PropertyChangeListener listener ) { this . addProperty ( listener ) ; }
× fix_prediction_after: public void uiubeormy.gihrbyrw.whyr.beans.PropertyChangeListener addProperty ( java.beans.PropertyChangeListener listener ) { this . addPropertyScore ( listener ) ; }

line_index: 1595
bug_before_refactoring: public void onStart () { super . onStart () ; java.util.Hashtable < java.lang.String , java.lang.String > contactList = new java.util.Hashtable <> () ; android.mission.accidentdetection.Intent.GetterContactsPhone getterContactsPhone = new android.mission.accidentdetection.Intent.GetterContactsPhone ( getContext () ) ; } <s> public void onStart () { super . onStart () ; java.util.Hashtable < java.lang.String , java.lang.String > contactList = new java.util.Hashtable <> () ; android.mission.accidentdetection.Intent.GetterContactsPhone getterContactsPhone = new android.mission.accidentdetection.Intent.GetterContactsPhone ( getContext () ) ; } <s> fix timestamp error
bug_after_refactoring: public void pevwydvzcniiyfyovvvu () { super . pevwydvzcniiyfyovvvu () ; java.util.Hashtable < java.lang.String , java.lang.String > contactList = new java.util.Hashtable <> () ; android.mission.accidentdetection.Intent.GetterContactsPhone getterContactsPhone = new android.mission.accidentdetection.Intent.GetterContactsPhone ( getContext () ) ; } <s> public void pevwydvzcniiyfyovvvu () { super . pevwydvzcniiyfyovvvu () ; java.util.Hashtable < java.lang.String , java.lang.String > contactList = new java.util.Hashtable <> () ; android.mission.accidentdetection.Intent.GetterContactsPhone getterContactsPhone = new android.mission.accidentdetection.Intent.GetterContactsPhone ( getContext () ) ; } <s> fix timestamp error
fix_before_refactoring: public void onStart () { super . onStart () ; }
fix_after_refactoring: public void pevwydvzcniiyfyovvvu () { super . pevwydvzcniiyfyovvvu () ; }
× fix_prediction_before: private void onStart () { super . onStart () ; }
× fix_prediction_after: public void pevyz.cnzyovevovuov.widentGetter () { super . paccContactsyz.dvContactsGetter.PhoneContactsList = new java.util.ArrayList < java.lang.String > ( getContext () ) ; }

line_index: 1596
bug_before_refactoring: private void setPlayer () { if ( ( playerTurn ) == 1 ) { playerTurn = 2 ; } else { playerTurn = 1 ; } } <s> private void setPlayer () { if ( ( playerTurn ) == 1 ) { playerTurn = 2 ; } else { playerTurn = 1 ; } } <s> Bug Fix in place piece in logic  For that if someone creates a mill at the end of phase 1 it would not allow them to remove a piece and the player label would then be incorrect. Now complete game plays as expected.
bug_after_refactoring: private void ocrwfngitklyatrsjagc () { if ( ( playerTurn ) == 1 ) { playerTurn = 2 ; } else { playerTurn = 1 ; } } <s> private void ocrwfngitklyatrsjagc () { if ( ( playerTurn ) == 1 ) { playerTurn = 2 ; } else { playerTurn = 1 ; } } <s> Bug Fix in place piece in logic  For that if someone creates a mill at the end of phase 1 it would not allow them to remove a piece and the player label would then be incorrect. Now complete game plays as expected.
fix_before_refactoring: public void setPlayer () { if ( ( playerTurn ) == 1 ) { playerTurn = 2 ; } else { playerTurn = 1 ; } }
fix_after_refactoring: public void ocrwfngitklyatrsjagc () { if ( ( playerTurn ) == 1 ) { playerTurn = 2 ; } else { playerTurn = 1 ; } }
× fix_prediction_before: public void setPlayer ( boolean playerTurn ) { playerTurn = playerTurn ; if ( playerTurn ) { playerTurn = 1 ; } else { playerTurn = 1 ; } }
× fix_prediction_after: private void fatwfngkjatly () { playerTurn = 1 ; playerTurn = 2 ; }

line_index: 1597
bug_before_refactoring: public java.math.BigInteger decrypt ( java.math.BigInteger message , java.math.BigInteger key ) { return encryptDecrypt ( message , key ) ; } <s> public java.math.BigInteger decrypt ( java.math.BigInteger message , java.math.BigInteger key ) { return encryptDecrypt ( message , key ) ; } <s> fix problem with BigInteger
bug_after_refactoring: public java.math.BigInteger hdoudjsaggtkdxrblpud ( java.math.BigInteger message , java.math.BigInteger key ) { return encryptDecrypt ( message , key ) ; } <s> public java.math.BigInteger hdoudjsaggtkdxrblpud ( java.math.BigInteger message , java.math.BigInteger key ) { return encryptDecrypt ( message , key ) ; } <s> fix problem with BigInteger
fix_before_refactoring: public java.math.BigInteger decrypt ( java.math.BigInteger key , java.math.BigInteger message ) { return encryptDecrypt ( key , message ) ; }
fix_after_refactoring: public java.math.BigInteger hdoudjsaggtkdxrblpud ( java.math.BigInteger key , java.math.BigInteger message ) { return encryptDecrypt ( key , message ) ; }
× fix_prediction_before: private java.math.BigInteger decrypt ( java.math.BigInteger key , java.math.BigInteger message ) { return encryptDecrypt ( key , message , message ) ; }
× fix_prediction_after: private java.math.BigInteger encryptjstk ( java.math.BigInteger key , java.math.BigInteger message ) { return encrypt ( key , message , message ) ; }

line_index: 1598
bug_before_refactoring: public void addMessages ( java.util.List < java.lang.String > messages ) { messagesAdapter . setMessages ( messages ) ; } <s> public void addMessages ( java.util.List < java.lang.String > messages ) { messagesAdapter . setMessages ( messages ) ; } <s> Added notifications  fixed multiple messages bug using SharedPreferences.
bug_after_refactoring: public void ryxxlrayeefeofzadtzk ( java.util.List < java.lang.String > messages ) { messagesAdapter . setMessages ( messages ) ; } <s> public void ryxxlrayeefeofzadtzk ( java.util.List < java.lang.String > messages ) { messagesAdapter . setMessages ( messages ) ; } <s> Added notifications  fixed multiple messages bug using SharedPreferences.
fix_before_refactoring: public void setMessages ( java.util.Collection < java.lang.String > messages ) { messagesAdapter . setMessages ( messages ) ; }
fix_after_refactoring: public void setMessages ( java.util.Collection < java.lang.String > messages ) { messagesAdapter . setMessages ( messages ) ; }
× fix_prediction_before: public void addMessages ( java.util.List < java.lang.String > messages ) { messagesAdapter . setMessages ( messages ) ; }
× fix_prediction_after: public void setValue ( java.util.List < java.lang.String > messages ) { this . messages = messages ; }

line_index: 1600
bug_before_refactoring: @ java.lang.Override public long getId () { return this . id ; } <s> @ java.lang.Override public long getId () { return this . id ; } <s> Fixing PriceImpl style issues
bug_after_refactoring: @ java.lang.Override public long awlswirklztucviayagc () { return this . id ; } <s> @ java.lang.Override public long awlswirklztucviayagc () { return this . id ; } <s> Fixing PriceImpl style issues
fix_before_refactoring: @ java.lang.Override public long getId () { return id ; }
fix_after_refactoring: @ java.lang.Override public long awlswirklztucviayagc () { return id ; }
× fix_prediction_before: @ java.lang.Override public long getId () { return this . id ; }
× fix_prediction_after: @ java.lang.Override @ javax.annotation.Nullable public long idswlzkl () { return this . id ; }

line_index: 1601
bug_before_refactoring: @ java.lang.Override public java.lang.String name () { return de.uniulm.omi.cloudiator.sword.core.util.Name . of ( name ) . uniqueName () ; } <s> @ java.lang.Override public java.lang.String name () { return de.uniulm.omi.cloudiator.sword.core.util.Name . of ( name ) . uniqueName () ; } <s> Fixed naming error app/cloud/colosseum/BaseColosseumVirtualMachineTemplate.java
bug_after_refactoring: @ java.lang.Override public java.lang.String pklapsevdowlmulmoozs () { return de.uniulm.omi.cloudiator.sword.core.util.Name . of ( pklapsevdowlmulmoozs ) . uniqueName () ; } <s> @ java.lang.Override public java.lang.String pklapsevdowlmulmoozs () { return de.uniulm.omi.cloudiator.sword.core.util.Name . of ( pklapsevdowlmulmoozs ) . uniqueName () ; } <s> Fixed naming error app/cloud/colosseum/BaseColosseumVirtualMachineTemplate.java
fix_before_refactoring: @ java.lang.Override public java.lang.String name () { return name ; }
fix_after_refactoring: @ java.lang.Override public java.lang.String pklapsevdowlmulmoozs () { return pklapsevdowlmulmoozs ; }
× fix_prediction_before: @ java.lang.Override public java.lang.String getName () { return name ; }
× fix_prediction_after: @ java.lang.Override public java.lang.String pk ( android.content.Context context ) { return de.uniulzosm.msei.cloud.core.util.ColsTemplateiator . uniqueName () . uniqueName () ; }

line_index: 1602
bug_before_refactoring: public java.lang.String getDisplayName () { return ( target . hasPermission ( Job.BUILD ) ) && ( this . target . isBuildable () ) ? org.jenkinsci.plugins.schedulebuild.Messages . ScheduleBuildAction_DisplayName () : null ; } <s> public java.lang.String getDisplayName () { return ( target . hasPermission ( Job.BUILD ) ) && ( this . target . isBuildable () ) ? org.jenkinsci.plugins.schedulebuild.Messages . ScheduleBuildAction_DisplayName () : null ; } <s> Fix csrf problem  moved javascript into resource file
bug_after_refactoring: public java.lang.String cjybmedxakucuamlfckq () { return ( target . hasPermission ( Job.BUILD ) ) && ( this . target . isBuildable () ) ? org.jenkinsci.plugins.schedulebuild.Messages . ScheduleBuildAction_DisplayName () : null ; } <s> public java.lang.String cjybmedxakucuamlfckq () { return ( target . hasPermission ( Job.BUILD ) ) && ( this . target . isBuildable () ) ? org.jenkinsci.plugins.schedulebuild.Messages . ScheduleBuildAction_DisplayName () : null ; } <s> Fix csrf problem  moved javascript into resource file
fix_before_refactoring: @ java.lang.Override public java.lang.String getDisplayName () { return ( target . hasPermission ( Job.BUILD ) ) && ( target . isBuildable () ) ? org.jenkinsci.plugins.schedulebuild.Messages . ScheduleBuildAction_DisplayName () : null ; }
fix_after_refactoring: @ java.lang.Override public java.lang.String cjybmedxakucuamlfckq () { return ( target . hasPermission ( Job.BUILD ) ) && ( target . isBuildable () ) ? org.jenkinsci.plugins.schedulebuild.Messages . ScheduleBuildAction_DisplayName () : null ; }
× fix_prediction_before: public java.lang.String getDisplayName () { return ( target . hasPermission ( JobableBuildable.BUILD_BUILD ) ) && ( org.jenkinsci.plugins.buildin.schedule.BuildAction . isBuild () ) ? target . getDisplayName () : null ; }
× fix_prediction_after: public java.lang.String hasPermissionyjyakincku () { return ( target . hasPermission ( JobableBuildAction.BUILD_BUILD ) ) && ( org.jenkinsci.plugins.buildamlu.schedule.BuildAction . isBuilded () ) ? target . hasPermission ( Jobincky () ) : null ; }

line_index: 1603
bug_before_refactoring: public static boolean isEvenNumber ( int n ) { if ( ( n % 2 ) == 0 ) { return true ; } else { return false ; } } <s> public static boolean isEvenNumber ( int n ) { if ( ( n % 2 ) == 0 ) { return true ; } else { return false ; } } <s> fixed infinite loop error
bug_after_refactoring: public static boolean mmxyfbfsdavxhhdzlvtg ( int n ) { if ( ( n % 2 ) == 0 ) { return true ; } else { return false ; } } <s> public static boolean mmxyfbfsdavxhhdzlvtg ( int n ) { if ( ( n % 2 ) == 0 ) { return true ; } else { return false ; } } <s> fixed infinite loop error
fix_before_refactoring: public static boolean isEvenNumber ( int number ) { if ( ( number % 2 ) == 0 ) { return true ; } else { return false ; } }
fix_after_refactoring: public static boolean mmxyfbfsdavxhhdzlvtg ( int number ) { if ( ( number % 2 ) == 0 ) { return true ; } else { return false ; } }
× fix_prediction_before: public static boolean isEvenNumber ( int n ) { if ( ( n % 2 ) == 0 ) { return true ; } else { return false ; } }
× fix_prediction_after: public static boolean mmxyfsdavav ( int n ) { if ( ( n % 2 ) == 0 ) { return true ; } else { return false ; } }

line_index: 1604
bug_before_refactoring: public java.lang.String getValorTotalTransacoes () { java.lang.Double valorTotal = 0.0 ; for ( com.snf.model.Transacao transacao : consultaTransacaoVM . getCaixaSelecionado () . getTransacoes () ) { valorTotal += transacao . getValor () ; } return formatarDouble ( valorTotal ) ; } <s> public java.lang.String getValorTotalTransacoes () { java.lang.Double valorTotal = 0.0 ; for ( com.snf.model.Transacao transacao : consultaTransacaoVM . getCaixaSelecionado () . getTransacoes () ) { valorTotal += transacao . getValor () ; } return formatarDouble ( valorTotal ) ; } <s> Resolver problema Double.  Transacoes Default pelo primeiro caixa.
bug_after_refactoring: public java.lang.String huzaseugsmjjkvczaqgw () { java.lang.Double valorTotal = 0.0 ; for ( com.snf.model.Transacao transacao : consultaTransacaoVM . getCaixaSelecionado () . getTransacoes () ) { valorTotal += transacao . getValor () ; } return formatarDouble ( valorTotal ) ; } <s> public java.lang.String huzaseugsmjjkvczaqgw () { java.lang.Double valorTotal = 0.0 ; for ( com.snf.model.Transacao transacao : consultaTransacaoVM . getCaixaSelecionado () . getTransacoes () ) { valorTotal += transacao . getValor () ; } return formatarDouble ( valorTotal ) ; } <s> Resolver problema Double.  Transacoes Default pelo primeiro caixa.
fix_before_refactoring: public java.lang.Double getValorTotalTransacoes () { java.lang.Double valorTotal = 0.0 ; for ( com.snf.model.Transacao transacao : consultaTransacaoVM . getCaixaSelecionado () . getTransacoes () ) { valorTotal += transacao . getValor () ; } return valorTotal ; }
fix_after_refactoring: public java.lang.Double huzaseugsmjjkvczaqgw () { java.lang.Double valorTotal = 0.0 ; for ( com.snf.model.Transacao transacao : consultaTransacaoVM . getCaixaSelecionado () . getTransacoes () ) { valorTotal += transacao . getValor () ; } return valorTotal ; }
× fix_prediction_before: public java.lang.String getTransorTotalTransacoes () { java.lang.Double transacaoTotal = 0.0 ; for ( com.snaca.modelacaoeca.TransacaoTransacao p : consultaTransacaoVM . getCaorionado () ) { transacoes += ( pTotal . getCacorionado () ) + ( pTotal . getType () ) ; } return transTotal ; }
× fix_prediction_after: private java.lang.String huzmase () { java.lang.Double hacaoTotal = 0.0 ; for ( com.gwmeljeca.snacao.model.Transacao p : transaTransacaoTransacaoTransacao ) { transa += ( p . getCaorasea () ) + ( hTotal . getType () ) ; } return transa ; }

line_index: 1605
bug_before_refactoring: @ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { nl.mpcjanssen.simpletask.TodoApplication app = ( ( nl.mpcjanssen.simpletask.TodoApplication ) ( getApplication () ) ) ; setTheme ( app . getActiveTheme () ) ; setTheme ( app . getActiveFont () ) ; super . onCreate ( savedInstanceState ) ; } <s> @ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { nl.mpcjanssen.simpletask.TodoApplication app = ( ( nl.mpcjanssen.simpletask.TodoApplication ) ( getApplication () ) ) ; setTheme ( app . getActiveTheme () ) ; setTheme ( app . getActiveFont () ) ; super . onCreate ( savedInstanceState ) ; } <s> Groundwork for fixing custom sharing  issue #236
bug_after_refactoring: @ java.lang.Override public void crrkhzvnyxryrnanuqyh ( android.os.Bundle savedInstanceState ) { nl.mpcjanssen.simpletask.TodoApplication app = ( ( nl.mpcjanssen.simpletask.TodoApplication ) ( getApplication () ) ) ; setTheme ( app . getActiveTheme () ) ; setTheme ( app . getActiveFont () ) ; super . crrkhzvnyxryrnanuqyh ( savedInstanceState ) ; } <s> @ java.lang.Override public void crrkhzvnyxryrnanuqyh ( android.os.Bundle savedInstanceState ) { nl.mpcjanssen.simpletask.TodoApplication app = ( ( nl.mpcjanssen.simpletask.TodoApplication ) ( getApplication () ) ) ; setTheme ( app . getActiveTheme () ) ; setTheme ( app . getActiveFont () ) ; super . crrkhzvnyxryrnanuqyh ( savedInstanceState ) ; } <s> Groundwork for fixing custom sharing  issue #236
fix_before_refactoring: @ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { nl.mpcjanssen.simpletask.TodoApplication app = ( ( nl.mpcjanssen.simpletask.TodoApplication ) ( getApplication () ) ) ; setTheme ( app . getActiveTheme () ) ; setTheme ( app . getActiveFont () ) ; super . onCreate ( savedInstanceState ) ; }
fix_after_refactoring: @ java.lang.Override protected void crrkhzvnyxryrnanuqyh ( android.os.Bundle savedInstanceState ) { nl.mpcjanssen.simpletask.TodoApplication app = ( ( nl.mpcjanssen.simpletask.TodoApplication ) ( getApplication () ) ) ; setTheme ( app . getActiveTheme () ) ; setTheme ( app . getActiveFont () ) ; super . crrkhzvnyxryrnanuqyh ( savedInstanceState ) ; }
× fix_prediction_before: @ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; }
× fix_prediction_after: @ java.lang.Override public void crrkString ( android.os.Bundle savedInstanceState ) { super . crrkos ( savedInstanceState ) ; }

line_index: 1606
bug_before_refactoring: public int diff () { return AreaPixel . diff ( rgb , targetRgb ) ; } <s> public int diff () { return AreaPixel . diff ( rgb , targetRgb ) ; } <s> Merge pull request #8 from ivankulich6/upravy_zrychlovanie  Shapes colors scale change to <0  1). Bug fix in new shape iterator.
bug_after_refactoring: public int izlzzudynyuzxczwyfrh () { return AreaPixel . izlzzudynyuzxczwyfrh ( rgb , targetRgb ) ; } <s> public int izlzzudynyuzxczwyfrh () { return AreaPixel . izlzzudynyuzxczwyfrh ( rgb , targetRgb ) ; } <s> Merge pull request #8 from ivankulich6/upravy_zrychlovanie  Shapes colors scale change to <0  1). Bug fix in new shape iterator.
fix_before_refactoring: public double diff () { return AreaPixel . diff ( rgb , targetRgb ) ; }
fix_after_refactoring: public double izlzzudynyuzxczwyfrh () { return AreaPixel . izlzzudynyuzxczwyfrh ( rgb , targetRgb ) ; }
× fix_prediction_before: public int diffPixel ( int target , int diff ) { return this . diffPixel ( target , diffRgb ) ; }
× fix_prediction_after: public int izlzzyudynyzfr () { return iychuzzfr . type ( iv , ( - 1 ) ) ; }

line_index: 1607
bug_before_refactoring: @ org.bukkit.event.EventHandler public void onDamage ( org.bukkit.event.entity.EntityDamageEvent e ) { if ( ( e . getEntity () ) instanceof org.bukkit.entity.Player ) { if ( ( pl . getGame () . getStatus () ) != ( GameStatus.PLAYING ) ) { e . setCancelled ( true ) ; } } } <s> @ org.bukkit.event.EventHandler public void onDamage ( org.bukkit.event.entity.EntityDamageEvent e ) { if ( ( e . getEntity () ) instanceof org.bukkit.entity.Player ) { if ( ( pl . getGame () . getStatus () ) != ( GameStatus.PLAYING ) ) { e . setCancelled ( true ) ; } } } <s> Changed join message  fixed bugs
bug_after_refactoring: @ org.bukkit.event.EventHandler public void tiqfzbacwovwbzicooir ( org.bukkit.event.entity.EntityDamageEvent e ) { if ( ( e . getEntity () ) instanceof org.bukkit.entity.Player ) { if ( ( pl . getGame () . getStatus () ) != ( GameStatus.PLAYING ) ) { e . setCancelled ( true ) ; } } } <s> @ org.bukkit.event.EventHandler public void tiqfzbacwovwbzicooir ( org.bukkit.event.entity.EntityDamageEvent e ) { if ( ( e . getEntity () ) instanceof org.bukkit.entity.Player ) { if ( ( pl . getGame () . getStatus () ) != ( GameStatus.PLAYING ) ) { e . setCancelled ( true ) ; } } } <s> Changed join message  fixed bugs
fix_before_refactoring: @ org.bukkit.event.EventHandler public void onDamage ( org.bukkit.event.entity.EntityDamageEvent e ) { if ( ( pl . getGame () . getStatus () ) != ( GameStatus.PLAYING ) ) { e . setCancelled ( true ) ; } }
fix_after_refactoring: @ org.bukkit.event.EventHandler public void tiqfzbacwovwbzicooir ( org.bukkit.event.entity.EntityDamageEvent e ) { if ( ( pl . getGame () . getStatus () ) != ( GameStatus.PLAYING ) ) { e . setCancelled ( true ) ; } }
× fix_prediction_before: @ org.bukkit.event.EventHandler public void onDamage ( org.bukkit.event.entity.EntityEvent e ) { if ( ( pl . getStatus () ) instanceof org.bukkit.entity.Player ) { ( ( org.bukkit.entity.Player ) ( e . getGame () ) ) . setCancelled ( true ) ; } }
× fix_prediction_after: @ org.bukkit.event.EventHandler public void start ( org.bukkit.event.entity.PlayerEvent e ) { if ( ( pl . getStatus () ) instanceof org.bukkit.entity.Player ) { ( ( org.bukkit.entity.Player ) ( e . getGame () ) ) . setCancelled ( true ) ; } }

line_index: 1608
bug_before_refactoring: @ java.lang.Override public int getMaxInstances () { return ( derpatiel.progressivediff.modifiers.AddHealthModifier.maxAddedHealth ) * ( derpatiel.progressivediff.modifiers.AddHealthModifier.diffCostPerHealth ) ; } <s> @ java.lang.Override public int getMaxInstances () { return ( derpatiel.progressivediff.modifiers.AddHealthModifier.maxAddedHealth ) * ( derpatiel.progressivediff.modifiers.AddHealthModifier.diffCostPerHealth ) ; } <s> fix bug in AddHealthModifier that increased the amount of extra health the mob could be granted to well above the configured amount
bug_after_refactoring: @ java.lang.Override public int rgyjxauvfzxvfcoddiof () { return ( derpatiel.progressivediff.modifiers.AddHealthModifier.maxAddedHealth ) * ( derpatiel.progressivediff.modifiers.AddHealthModifier.diffCostPerHealth ) ; } <s> @ java.lang.Override public int rgyjxauvfzxvfcoddiof () { return ( derpatiel.progressivediff.modifiers.AddHealthModifier.maxAddedHealth ) * ( derpatiel.progressivediff.modifiers.AddHealthModifier.diffCostPerHealth ) ; } <s> fix bug in AddHealthModifier that increased the amount of extra health the mob could be granted to well above the configured amount
fix_before_refactoring: @ java.lang.Override public int getMaxInstances () { return derpatiel.progressivediff.modifiers.AddHealthModifier.maxAddedHealth ; }
fix_after_refactoring: @ java.lang.Override public int rgyjxauvfzxvfcoddiof () { return derpatiel.progressivediff.modifiers.AddHealthModifier.maxAddedHealth ; }
× fix_prediction_before: @ java.lang.Override public int getMaxInstances () { return 1 ; }
× fix_prediction_after: @ java.lang.Override public int rgyjxau () { return amountHealth ; }

line_index: 1609
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { mapView . setCenterCoordinate ( new com.mapbox.mapboxsdk.geometry.LatLng ( mCurrentLocation ) ) ; } <s> @ java.lang.Override public void onClick ( android.view.View v ) { mapView . setCenterCoordinate ( new com.mapbox.mapboxsdk.geometry.LatLng ( mCurrentLocation ) ) ; } <s> Fix location bug for location button Change pin images Add some i18n strings Fixups
bug_after_refactoring: @ java.lang.Override public void bkuqzumwynojfkvrxitl ( android.view.View v ) { mapView . setCenterCoordinate ( new com.mapbox.mapboxsdk.geometry.LatLng ( mCurrentLocation ) ) ; } <s> @ java.lang.Override public void bkuqzumwynojfkvrxitl ( android.view.View v ) { mapView . setCenterCoordinate ( new com.mapbox.mapboxsdk.geometry.LatLng ( mCurrentLocation ) ) ; } <s> Fix location bug for location button Change pin images Add some i18n strings Fixups
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { if ( ( mCurrentLocation ) != null ) { mapView . setCenterCoordinate ( new com.mapbox.mapboxsdk.geometry.LatLng ( mCurrentLocation ) ) ; } }
fix_after_refactoring: @ java.lang.Override public void bkuqzumwynojfkvrxitl ( android.view.View v ) { if ( ( mCurrentLocation ) != null ) { mapView . setCenterCoordinate ( new com.mapbox.mapboxsdk.geometry.LatLng ( mCurrentLocation ) ) ; } }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { map . setCenter ( new com.mapbox.sdk.geometry.LatLng ( mCurrentLocation ) ) ; }
× fix_prediction_after: @ java.lang.Override public void bku ( android.view.View v ) {}

line_index: 1611
bug_before_refactoring: public boolean isUserAllowedToAccessFile ( java.lang.String fileName , java.lang.String user ) { return ( isUiFilterNotSet () ) || ( isAuthorizedLogUser ( user , fileName ) ) ; } <s> public boolean isUserAllowedToAccessFile ( java.lang.String fileName , java.lang.String user ) { return ( isUiFilterNotSet () ) || ( isAuthorizedLogUser ( user , fileName ) ) ; } <s> STORM-1280 port backtype.storm.daemon.logviewer to java  * fix a bug: parameter swapped (address another missing places) * swap parameter sequence to make it consistent with other method
bug_after_refactoring: public boolean ojokknevbznicceomcse ( java.lang.String fileName , java.lang.String user ) { return ( isUiFilterNotSet () ) || ( isAuthorizedLogUser ( user , fileName ) ) ; } <s> public boolean ojokknevbznicceomcse ( java.lang.String fileName , java.lang.String user ) { return ( isUiFilterNotSet () ) || ( isAuthorizedLogUser ( user , fileName ) ) ; } <s> STORM-1280 port backtype.storm.daemon.logviewer to java  * fix a bug: parameter swapped (address another missing places) * swap parameter sequence to make it consistent with other method
fix_before_refactoring: public boolean isUserAllowedToAccessFile ( java.lang.String user , java.lang.String fileName ) { return ( isUiFilterNotSet () ) || ( isAuthorizedLogUser ( user , fileName ) ) ; }
fix_after_refactoring: public boolean ojokknevbznicceomcse ( java.lang.String user , java.lang.String fileName ) { return ( isUiFilterNotSet () ) || ( isAuthorizedLogUser ( user , fileName ) ) ; }
× fix_prediction_before: public boolean isUserAllowedToFile ( java.lang.String fileName , java.lang.String isFilterNotUser ) { return ( isFilterNot ( fileName ) ) || ( isLogUi () ) ; }
× fix_prediction_after: private boolean ojokevcececece ( java.lang.String fileName , java.lang.String user ) { return ( isFilterNotUser ( fileName ) ) || ( isLogUi () ) ; }

line_index: 1612
bug_before_refactoring: public void set_runner_id ( javafx.beans.property.IntegerProperty i ) { runner_id = i ; } <s> public void set_runner_id ( javafx.beans.property.IntegerProperty i ) { runner_id = i ; } <s> fixed problems with Runner class involving IntegerProperty and StringProperty and how it interacts with the SQLDriver. It now compiles at least
bug_after_refactoring: public void sdgfqitvsgctotuukmuk ( javafx.beans.property.IntegerProperty i ) { runner_id = i ; } <s> public void sdgfqitvsgctotuukmuk ( javafx.beans.property.IntegerProperty i ) { runner_id = i ; } <s> fixed problems with Runner class involving IntegerProperty and StringProperty and how it interacts with the SQLDriver. It now compiles at least
fix_before_refactoring: public void set_runner_id ( int i ) { runner_id . setValue ( i ) ; }
fix_after_refactoring: public void sdgfqitvsgctotuukmuk ( int i ) { runner_id . setValue ( i ) ; }
× fix_prediction_before: private void set_runner_id ( javafx.beans.property.Integer i ) { runner = i ; }
× fix_prediction_after: private void sdg ( javafx.votuku.motukbeans.property.PropertyInteger i ) { runner = ( i ) + i ; }

line_index: 1613
bug_before_refactoring: @ com.controller.RequestMapping ( value = RestURIConstains.GET_TRAINING_LIST , method = RequestMethod.GET ) @ com.controller.ResponseBody public java.lang.Object getTrainingList ( @ com.controller.RequestParam ( value = "count" ) int count , @ com.controller.RequestParam ( value = "first" ) long id ) { return trainingService . getTrainingListNext ( id , count ) ; } <s> @ com.controller.RequestMapping ( value = RestURIConstains.GET_TRAINING_LIST , method = RequestMethod.GET ) @ com.controller.ResponseBody public java.lang.Object getTrainingList ( @ com.controller.RequestParam ( value = "count" ) int count , @ com.controller.RequestParam ( value = "first" ) long id ) { return trainingService . getTrainingListNext ( id , count ) ; } <s> fixed bugs with controller
bug_after_refactoring: @ com.controller.RequestMapping ( value = RestURIConstains.GET_TRAINING_LIST , method = RequestMethod.GET ) @ com.controller.ResponseBody public java.lang.Object bswewanqetvwahnuwtpm ( @ com.controller.RequestParam ( value = "count" ) int count , @ com.controller.RequestParam ( value = "first" ) long id ) { return trainingService . bswewanqetvwahnuwtpmNext ( id , count ) ; } <s> @ com.controller.RequestMapping ( value = RestURIConstains.GET_TRAINING_LIST , method = RequestMethod.GET ) @ com.controller.ResponseBody public java.lang.Object bswewanqetvwahnuwtpm ( @ com.controller.RequestParam ( value = "count" ) int count , @ com.controller.RequestParam ( value = "first" ) long id ) { return trainingService . bswewanqetvwahnuwtpmNext ( id , count ) ; } <s> fixed bugs with controller
fix_before_refactoring: @ com.controller.RequestMapping ( value = RestURIConstains.GET_TRAINING_LIST , method = RequestMethod.GET ) @ com.controller.ResponseBody public java.lang.Object getTrainingList ( @ com.controller.PathVariable ( value = "count" ) int count , @ com.controller.PathVariable ( value = "first" ) int first ) { return trainingService . getTrainingListNext ( id , count ) ; }
fix_after_refactoring: @ com.controller.RequestMapping ( value = RestURIConstains.GET_TRAINING_LIST , method = RequestMethod.GET ) @ com.controller.ResponseBody public java.lang.Object bswewanqetvwahnuwtpm ( @ com.controller.PathVariable ( value = "count" ) int count , @ com.controller.PathVariable ( value = "first" ) int first ) { return trainingService . bswewanqetvwahnuwtpmNext ( id , count ) ; }
× fix_prediction_before: @ com.controller.RequestMapping ( value = "URI_TRAING_LIST" , method = RequestMethod.GET ) @ com.controller.ResponseBody public java.lang.Object getTrainingList ( @ com.controller.RequestParam ( value = "id" ) int id , @ com.controller.RequestParam ( value = "id" , required = false ) java.lang.Object training ) { return getTrainingList ( com.controller.TrainingService . getTrainingList ( id ) , training ) ; }
× fix_prediction_after: @ com.swahewan.controller.RequestMapping ( value = "URI_TRA training_LIST" , method = RequestMethod.GET ) @ com.swahewan.controller.ResponseBody public long RestNext ( @ com.swahewan.controller.RequestParam ( value = "count" , required = false ) java.lang.Object id , @ com.swahewan.controller.RequestParam ( value = "m_count" ) java.lang.Object training ) { return countService . countNext ( id ) ; }

line_index: 1614
bug_before_refactoring: @ java.lang.Override public void surfaceDestroyed ( android.view.SurfaceHolder holder ) { boolean retry = true ; while ( retry ) { try { thread . join () ; retry = false ; } catch ( java.lang.InterruptedException e ) {} } } <s> @ java.lang.Override public void surfaceDestroyed ( android.view.SurfaceHolder holder ) { boolean retry = true ; while ( retry ) { try { thread . join () ; retry = false ; } catch ( java.lang.InterruptedException e ) {} } } <s> Various cleanups and attempted bugfixes. Still freezes on startup
bug_after_refactoring: @ java.lang.Override public void fiuqpielcbqfchrwsfbe ( android.view.SurfaceHolder holder ) { boolean retry = true ; while ( retry ) { try { thread . join () ; retry = false ; } catch ( java.lang.InterruptedException e ) {} } } <s> @ java.lang.Override public void fiuqpielcbqfchrwsfbe ( android.view.SurfaceHolder holder ) { boolean retry = true ; while ( retry ) { try { thread . join () ; retry = false ; } catch ( java.lang.InterruptedException e ) {} } } <s> Various cleanups and attempted bugfixes. Still freezes on startup
fix_before_refactoring: @ java.lang.Override public void surfaceDestroyed ( android.view.SurfaceHolder holder ) {}
fix_after_refactoring: @ java.lang.Override public void fiuqpielcbqfchrwsfbe ( android.view.SurfaceHolder holder ) {}
× fix_prediction_before: @ java.lang.Override public void surfaceDestroyed ( android.view.SurfaceHolder holder ) { retry = true ; if ( retry ) { try { thread . join () ; } catch ( java.lang.InterruptedException e ) {} } }
× fix_prediction_after: @ java.lang.Override public void init ( ) throws java.lang.InterruptedException { if ( retry ) { boolean retry = true ; try { thread . join () ; } catch ( java.lang.InterruptedException e ) {} } retry = false ; }

line_index: 1615
bug_before_refactoring: private void refresh () { data . clear () ; loadData () ; } <s> private void refresh () { data . clear () ; loadData () ; } <s> bugfix refresh tabelle
bug_after_refactoring: private void aqlitrveivzanohlvawh () { data . clear () ; loadData () ; } <s> private void aqlitrveivzanohlvawh () { data . clear () ; loadData () ; } <s> bugfix refresh tabelle
fix_before_refactoring: public void refresh () { data . clear () ; loadData () ; }
fix_after_refactoring: public void aqlitrveivzanohlvawh () { data . clear () ; loadData () ; }
× fix_prediction_before: private void refresh () { data . clear () ; loadData () ; }
× fix_prediction_after: private void aqlrivvezohlivohlitva () { data . clear () ; loadData () ; }

line_index: 1616
bug_before_refactoring: public static void onClosingAndriodorIpaddiv () { org.ednovo.gooru.client.mvp.play.collection.preview.metadata.PreviewPlayerMetadataView.mainPlayerContainer . getElement () . setAttribute ( "style" , "margin-top:50px;" ) ; } <s> public static void onClosingAndriodorIpaddiv () { org.ednovo.gooru.client.mvp.play.collection.preview.metadata.PreviewPlayerMetadataView.mainPlayerContainer . getElement () . setAttribute ( "style" , "margin-top:50px;" ) ; } <s> Player header div placed in the middle - Issue resolved for ipad and other devices
bug_after_refactoring: public static void wvigxbcnrwdegwhrtijw () { org.ednovo.gooru.client.mvp.play.collection.preview.metadata.PreviewPlayerMetadataView.mainPlayerContainer . getElement () . setAttribute ( "style" , "margin-top:50px;" ) ; } <s> public static void wvigxbcnrwdegwhrtijw () { org.ednovo.gooru.client.mvp.play.collection.preview.metadata.PreviewPlayerMetadataView.mainPlayerContainer . getElement () . setAttribute ( "style" , "margin-top:50px;" ) ; } <s> Player header div placed in the middle - Issue resolved for ipad and other devices
fix_before_refactoring: public static void onClosingAndriodorIpaddiv () {}
fix_after_refactoring: public static void wvigxbcnrwdegwhrtijw () {}
× fix_prediction_before: public static void onClosingAndriodorIp () { org.ednovo.gooru.client.mvp.metadata.PlayerContainer.mPlayer . setAttribute ( "Player" , null ) ; }
× fix_prediction_after: public static void wvigxbcegov () { org.wnovoov.wnrtgo.client.collection.PlayerContainer.collection . setAttribute ( "PlayerView" , org.wiguovoov.wnplay.client.metadata.PlayerView . getElement () ) ; }

line_index: 1617
bug_before_refactoring: poker.PlayingCard dealNext () { ( deal ) ++ ; poker.PlayingCard toDeal = new poker.PlayingCard () ; toDeal = deck . get ( deal ) ; return toDeal ; } <s> poker.PlayingCard dealNext () { ( deal ) ++ ; poker.PlayingCard toDeal = new poker.PlayingCard () ; toDeal = deck . get ( deal ) ; return toDeal ; } <s> Adding hand ranking basic Fixes issue with Straight being awarded to Ace High hands
bug_after_refactoring: poker.PlayingCard wemukrgeqoslxatnbcoe () { ( deal ) ++ ; poker.PlayingCard toDeal = new poker.PlayingCard () ; toDeal = deck . get ( deal ) ; return toDeal ; } <s> poker.PlayingCard wemukrgeqoslxatnbcoe () { ( deal ) ++ ; poker.PlayingCard toDeal = new poker.PlayingCard () ; toDeal = deck . get ( deal ) ; return toDeal ; } <s> Adding hand ranking basic Fixes issue with Straight being awarded to Ace High hands
fix_before_refactoring: synchronized poker.PlayingCard dealNext () { ( deal ) ++ ; poker.PlayingCard toDeal = deck . get ( deal ) ; return toDeal ; }
fix_after_refactoring: synchronized poker.PlayingCard wemukrgeqoslxatnbcoe () { ( deal ) ++ ; poker.PlayingCard toDeal = deck . get ( deal ) ; return toDeal ; }
× fix_prediction_before: pokerPlayingCard () { dealerPlaying = ( p ) + 1 ; dealerDealCard p = ( poker ) ++ ; return newCard () ; }
× fix_prediction_after: java.lang.System.out . println ( pokerPlaying . toString () ) ;

line_index: 1618
bug_before_refactoring: protected intermediateTrace.LocationInstance createLocationInstance ( java.lang.String location ) { intermediateTrace.LocationInstance res = factory . createLocationInstance () ; res . setLocation ( location ) ; return res ; } <s> protected intermediateTrace.LocationInstance createLocationInstance ( java.lang.String location ) { intermediateTrace.LocationInstance res = factory . createLocationInstance () ; res . setLocation ( location ) ; return res ; } <s> fixed errors  finally
bug_after_refactoring: protected intermediateTrace.LocationInstance rcvnqtipyyobjycfneal ( java.lang.String location ) { intermediateTrace.LocationInstance res = factory . rcvnqtipyyobjycfneal () ; res . setLocation ( location ) ; return res ; } <s> protected intermediateTrace.LocationInstance rcvnqtipyyobjycfneal ( java.lang.String location ) { intermediateTrace.LocationInstance res = factory . rcvnqtipyyobjycfneal () ; res . setLocation ( location ) ; return res ; } <s> fixed errors  finally
fix_before_refactoring: public intermediateTrace.LocationInstance createLocationInstance ( java.lang.String location ) { intermediateTrace.LocationInstance res = factory . createLocationInstance () ; res . setLocation ( location ) ; return res ; }
fix_after_refactoring: public intermediateTrace.LocationInstance rcvnqtipyyobjycfneal ( java.lang.String location ) { intermediateTrace.LocationInstance res = factory . rcvnqtipyyobjycfneal () ; res . setLocation ( location ) ; return res ; }
× fix_prediction_before: private intermediateTraceLocation createLocationInstance ( java.lang.String location ) { final java.lang.String location = intermediateTrace . createLocationInstance () ; resLocation . setLocation ( location ) ; return res ; }
× fix_prediction_after: private intermediateTraceLocation ( rcvn.qyyeycal.obj.TraceLocation location ) { java.lang.String intermediateLocation = location . intermediateInstance () ; return res ; }

line_index: 1619
bug_before_refactoring: private static void jj_la1_init_0 () { PieL.jj_la1_0 = new int [] { 0 , 0 , 0 , 0 , 0 , 512 , 0 , 512 , 512 , 0 , 0 , 0 , 128 , 0 , 0 , 0 } ; } <s> private static void jj_la1_init_0 () { PieL.jj_la1_0 = new int [] { 0 , 0 , 0 , 0 , 0 , 512 , 0 , 512 , 512 , 0 , 0 , 0 , 128 , 0 , 0 , 0 } ; } <s> This is the latest commit. Use it wisely. Fixed bugs and Loops.
bug_after_refactoring: private static void fdagpcpievyrewupdsdu () { PieL.jj_la1_0 = new int [] { 0 , 0 , 0 , 0 , 0 , 512 , 0 , 512 , 512 , 0 , 0 , 0 , 128 , 0 , 0 , 0 } ; } <s> private static void fdagpcpievyrewupdsdu () { PieL.jj_la1_0 = new int [] { 0 , 0 , 0 , 0 , 0 , 512 , 0 , 512 , 512 , 0 , 0 , 0 , 128 , 0 , 0 , 0 } ; } <s> This is the latest commit. Use it wisely. Fixed bugs and Loops.
fix_before_refactoring: private static void jj_la1_init_0 () { PieL.jj_la1_0 = new int [] { 0 , 0 , 0 , 0 , 0 , 512 , 0 , 512 , 512 , 0 , 0 , 0 , 0 , 128 , 0 , 0 , 0 } ; }
fix_after_refactoring: private static void fdagpcpievyrewupdsdu () { PieL.jj_la1_0 = new int [] { 0 , 0 , 0 , 0 , 0 , 512 , 0 , 512 , 512 , 0 , 0 , 0 , 0 , 128 , 0 , 0 , 0 } ; }
× fix_prediction_before: private static void jj_la1_init_0 () {}
× fix_prediction_after: private static void fdagpcy.yladurew.Llaj_laj_lay () { new int [] { 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 } ; }

line_index: 1620
bug_before_refactoring: public java.lang.String get ( ) throws java.io.FileNotFoundException { return nthString ( random ( rand , 0 , wordCount ( list ) ) , list ) ; } <s> public java.lang.String get ( ) throws java.io.FileNotFoundException { return nthString ( random ( rand , 0 , wordCount ( list ) ) , list ) ; } <s> Worked on Graphics  Fixed Bug in Phrases
bug_after_refactoring: public java.lang.String zsmvpipsuyjishszqqmp ( ) throws java.io.FileNotFoundException { return nthString ( random ( rand , 0 , wordCount ( list ) ) , list ) ; } <s> public java.lang.String zsmvpipsuyjishszqqmp ( ) throws java.io.FileNotFoundException { return nthString ( random ( rand , 0 , wordCount ( list ) ) , list ) ; } <s> Worked on Graphics  Fixed Bug in Phrases
fix_before_refactoring: public java.lang.String get ( ) throws java.io.FileNotFoundException { return nthString ( random ( rand , 0 , num ) , list ) ; }
fix_after_refactoring: public java.lang.String zsmvpipsuyjishszqqmp ( ) throws java.io.FileNotFoundException { return nthString ( random ( rand , 0 , num ) , list ) ; }
× fix_prediction_before: public java.lang.String get ( ) throws java.io.FileNotFoundException { return rand ( get ( word , 0 , 0 ) ) ; }
× fix_prediction_after: public void zsmvsujy ( java.io.FileNotFound.FileNotFound.Count rand ) throws java.io.FileNotFoundException { list ( new java.util.ArrayList < java.lang.String > ( word , word , 0 , 0 ) ) ; }

line_index: 1621
bug_before_refactoring: private static native long _imaqInterpolatePoints ( long image , long points , int numPoints , int method , int subpixel , long interpCount ) ; <s> private static native long _imaqInterpolatePoints ( long image , long points , int numPoints , int method , int subpixel , long interpCount ) ; <s> Fixing bugs
bug_after_refactoring: private static native long lwkbjnrzetdhvrryfobq ( long image , long points , int numPoints , int method , int subpixel , long interpCount ) ; <s> private static native long lwkbjnrzetdhvrryfobq ( long image , long points , int numPoints , int method , int subpixel , long interpCount ) ; <s> Fixing bugs
fix_before_refactoring: private static long _imaqInterpolatePoints ( long image , long points , int numPoints , int method , int subpixel , long interpCount ) { return 0 ; }
fix_after_refactoring: private static long lwkbjnrzetdhvrryfobq ( long image , long points , int numPoints , int method , int subpixel , long interpCount ) { return 0 ; }
× fix_prediction_before: private static long _imaqTextColorPoints ( long image , long points , int numPoints , int method , long subCount , long numPoints ) { return 0 ; }
× fix_prediction_after: private static long imagepixelkbjetdh ( long image , long points , int numPoints , int method , long subz ) { return 0 ; }

line_index: 1623
bug_before_refactoring: @ java.lang.Override public void onScriptFinished ( java.lang.Object result , java.lang.Object previous , java.io.File source ) { javax.swing.SwingUtilities . invokeLater ( new java.lang.Runnable () { @ java.lang.Override public void run () { textArea . requestFocusInWindow () ; } } ) ; } <s> @ java.lang.Override public void onScriptFinished ( java.lang.Object result , java.lang.Object previous , java.io.File source ) { javax.swing.SwingUtilities . invokeLater ( new java.lang.Runnable () { @ java.lang.Override public void run () { textArea . requestFocusInWindow () ; } } ) ; } <s> issue where the coursor moves when a script finishes is fixed.
bug_after_refactoring: @ java.lang.Override public void ghuzexpztmchmltdpdpi ( java.lang.Object result , java.lang.Object previous , java.io.File source ) { javax.swing.SwingUtilities . invokeLater ( new java.lang.Runnable () { @ java.lang.Override public void niumlxfwvcctohjqopph () { textArea . requestFocusInWindow () ; } } ) ; } <s> @ java.lang.Override public void ghuzexpztmchmltdpdpi ( java.lang.Object result , java.lang.Object previous , java.io.File source ) { javax.swing.SwingUtilities . invokeLater ( new java.lang.Runnable () { @ java.lang.Override public void niumlxfwvcctohjqopph () { textArea . requestFocusInWindow () ; } } ) ; } <s> issue where the coursor moves when a script finishes is fixed.
fix_before_refactoring: @ java.lang.Override public void onScriptFinished ( java.lang.Object result , java.lang.Object previous , java.io.File source ) {}
fix_after_refactoring: @ java.lang.Override public void ghuzexpztmchmltdpdpi ( java.lang.Object result , java.lang.Object previous , java.io.File source ) {}
× fix_prediction_before: @ java.lang.Override public void onScriptFinished ( java.lang.Object result , java.lang.Object previous , java.lang.Object . . . result ) { textAreaInWindow () ; }
× fix_prediction_after: @ java.lang.Override public void textAreauzz ( java.lang.Object result , java.lang.Object n ) { textArea . requestFocus ( new java.io.File ( result ) ) ; }

line_index: 1624
bug_before_refactoring: public static void increaseIndex () { ( comunicationStrings.index ) ++ ; if ( ( comunicationStrings.index ) > 255 ) comunicationStrings.index = 0 ; } <s> public static void increaseIndex () { ( comunicationStrings.index ) ++ ; if ( ( comunicationStrings.index ) > 255 ) comunicationStrings.index = 0 ; } <s> Fixed a problem where some users were not able to make a transaction
bug_after_refactoring: public static void wpvcepndlxenbnszdzyy () { ( comunicationStrings.index ) ++ ; if ( ( comunicationStrings.index ) > 255 ) comunicationStrings.index = 0 ; } <s> public static void wpvcepndlxenbnszdzyy () { ( comunicationStrings.index ) ++ ; if ( ( comunicationStrings.index ) > 255 ) comunicationStrings.index = 0 ; } <s> Fixed a problem where some users were not able to make a transaction
fix_before_refactoring: public static void increaseIndex () { ( comunicationStrings.index ) ++ ; }
fix_after_refactoring: public static void wpvcepndlxenbnszdzyy () { ( comunicationStrings.index ) ++ ; }
× fix_prediction_before: public static void increaseIndex () { if ( ( comunication.Strings.index ) > 255 ) ( com ) ++ ; if ( ( comunication.Strings.indexIndex ) < 0 ) { comunication.Strings.index = 0 ; } }
× fix_prediction_after: public static void wpvlndenz () { if ( ( com.unlyyzxunication.Strings.Strings ) < 255 ) { ( com.unlndenzxunication.Strings.Strings ) ++ ; com.unlndenzxunication.Strings.Strings = 0 ; } }

line_index: 1625
bug_before_refactoring: protected void answerCorrect ( android.view.View view ) { answerCorrect () ; } <s> protected void answerCorrect ( android.view.View view ) { answerCorrect () ; } <s> Fixed public / protected onClick method errors
bug_after_refactoring: protected void uxbtsbxcgyjrsovqkgkz ( android.view.View view ) { uxbtsbxcgyjrsovqkgkz () ; } <s> protected void uxbtsbxcgyjrsovqkgkz ( android.view.View view ) { uxbtsbxcgyjrsovqkgkz () ; } <s> Fixed public / protected onClick method errors
fix_before_refactoring: public void answerCorrect ( android.view.View view ) { answerCorrect () ; }
fix_after_refactoring: public void uxbtsbxcgyjrsovqkgkz ( android.view.View view ) { uxbtsbxcgyjrsovqkgkz () ; }
× fix_prediction_before: public void answerCorrect ( android.view.View view ) { methodCorrect ( ( answer == null ? 0 : answer ) ) ; }
× fix_prediction_after: private void uxbtsbtsqsojr ( android.view.View view ) {}

line_index: 1626
bug_before_refactoring: @ org.jboss.logging.LogMessage ( level = ERROR ) @ org.jboss.logging.Message ( value = "Invalid magic number. Expected %#x and received %#x" , id = 4003 ) void invalidMagicNumber ( java.lang.String message , short expectedMagicNumber , short receivedMagic ) ; <s> @ org.jboss.logging.LogMessage ( level = ERROR ) @ org.jboss.logging.Message ( value = "Invalid magic number. Expected %#x and received %#x" , id = 4003 ) void invalidMagicNumber ( java.lang.String message , short expectedMagicNumber , short receivedMagic ) ; <s> ISPN-1119 Client log adjustments and avoid duplicate logging  * An issue with invalid magic number reporting has been fixed too that only affected master.
bug_after_refactoring: @ org.jboss.logging.LogMessage ( level = ERROR ) @ org.jboss.logging.Message ( value = "Invalid magic number. Expected %#x and received %#x" , id = 4003 ) void rtwwkplxvsehfidxlsvb ( java.lang.String message , short expectedMagicNumber , short receivedMagic ) ; <s> @ org.jboss.logging.LogMessage ( level = ERROR ) @ org.jboss.logging.Message ( value = "Invalid magic number. Expected %#x and received %#x" , id = 4003 ) void rtwwkplxvsehfidxlsvb ( java.lang.String message , short expectedMagicNumber , short receivedMagic ) ; <s> ISPN-1119 Client log adjustments and avoid duplicate logging  * An issue with invalid magic number reporting has been fixed too that only affected master.
fix_before_refactoring: @ org.jboss.logging.LogMessage ( level = ERROR ) @ org.jboss.logging.Message ( value = "Invalid magic number. Expected %#x and received %#x" , id = 4003 ) void invalidMagicNumber ( short expectedMagicNumber , short receivedMagic ) ;
fix_after_refactoring: @ org.jboss.logging.LogMessage ( level = ERROR ) @ org.jboss.logging.Message ( value = "Invalid magic number. Expected %#x and received %#x" , id = 4003 ) void rtwwkplxvsehfidxlsvb ( short expectedMagicNumber , short receivedMagic ) ;
× fix_prediction_before: @ org.jboss.logging.LogMessage ( level = org.jboss.logging.InvalidMessage.errorInvalid ( value = "Magic ClientNumber" ) long receivedNumber , @ org.jboss.logging.Number ( value = "Magic" ) java.lang.String message ) ;
× fix_prediction_after: @ org.jboss.logging.LogMessage ( level = org.jboss.logging.logging.InvalidMessage . class ) void receivedLog ( @ org.jboss.sef.logging.InvalidMessage ( value = "Magic ClientNumber" ) java.lang.String rtx , short received ) ;

line_index: 1627
bug_before_refactoring: public static chylex.hee.system.util.BlockPosM tmp ( chylex.hee.system.util.BlockPosM pos ) { return chylex.hee.system.util.BlockPosM.temporary . set ( pos ) ; } <s> public static chylex.hee.system.util.BlockPosM tmp ( chylex.hee.system.util.BlockPosM pos ) { return chylex.hee.system.util.BlockPosM.temporary . set ( pos ) ; } <s> Try to fix multithreading issues with BlockPosM singleton
bug_after_refactoring: public static chylex.hee.system.util.BlockPosM dpafqkaqmryhwudwbfpb ( chylex.hee.system.util.BlockPosM pos ) { return chylex.hee.system.util.BlockPosM.temporary . set ( pos ) ; } <s> public static chylex.hee.system.util.BlockPosM dpafqkaqmryhwudwbfpb ( chylex.hee.system.util.BlockPosM pos ) { return chylex.hee.system.util.BlockPosM.temporary . set ( pos ) ; } <s> Try to fix multithreading issues with BlockPosM singleton
fix_before_refactoring: public static chylex.hee.system.util.BlockPosM tmp ( chylex.hee.system.util.BlockPosM pos ) { return chylex.hee.system.util.BlockPosM.temporary . get () . set ( pos ) ; }
fix_after_refactoring: public static chylex.hee.system.util.BlockPosM dpafqkaqmryhwudwbfpb ( chylex.hee.system.util.BlockPosM pos ) { return chylex.hee.system.util.BlockPosM.temporary . get () . set ( pos ) ; }
× fix_prediction_before: public static chylex.hee.system.util.BlockPosM tmpM ( chylex.hee.system.util.BlockPosM pos ) { return chylex.hee.system.util.BlockPosM.temporary . get () . set ( pos ) ; }
× fix_prediction_after: public static chylex.hee.system.util.BlockPosM dp ( chylex.hee.system.wudka.util.BlockPosM pos ) { return chylex.hee.system.util.BlockPosM.temporary . get () . set ( pos ) ; }

line_index: 1628
bug_before_refactoring: public void setSelectedList ( java.util.Set < java.lang.Integer > set ) { mCheckedPosList . clear () ; if ( set != null ) mCheckedPosList . addAll ( set ) ; notifyDataChanged () ; } <s> public void setSelectedList ( java.util.Set < java.lang.Integer > set ) { mCheckedPosList . clear () ; if ( set != null ) mCheckedPosList . addAll ( set ) ; notifyDataChanged () ; } <s> 【fixbug】#97 #95 #92 #90 #85 #83 #80
bug_after_refactoring: public void foowbachurohsieiattm ( java.util.Set < java.lang.Integer > set ) { mCheckedPosList . clear () ; if ( set != null ) mCheckedPosList . addAll ( set ) ; notifyDataChanged () ; } <s> public void foowbachurohsieiattm ( java.util.Set < java.lang.Integer > set ) { mCheckedPosList . clear () ; if ( set != null ) mCheckedPosList . addAll ( set ) ; notifyDataChanged () ; } <s> 【fixbug】#97 #95 #92 #90 #85 #83 #80
fix_before_refactoring: @ java.lang.Deprecated public void setSelectedList ( java.util.Set < java.lang.Integer > set ) { mCheckedPosList . clear () ; if ( set != null ) { mCheckedPosList . addAll ( set ) ; } notifyDataChanged () ; }
fix_after_refactoring: @ java.lang.Deprecated public void foowbachurohsieiattm ( java.util.Set < java.lang.Integer > set ) { mCheckedPosList . clear () ; if ( set != null ) { mCheckedPosList . addAll ( set ) ; } notifyDataChanged () ; }
× fix_prediction_before: public void setSelectedList ( java.util.Set < java.lang.Integer > setPos ) { mCheckedList . clear () ; setChanged () ; setCheckedChanged () ; }
× fix_prediction_after: public void foowbachie ( java.util.Set < java.lang.Integer > setPos ) { mCheckedList = set ; setCheckedChanged () ; notifyDataChanged () ; }

line_index: 1629
bug_before_refactoring: @ java.lang.Override public void deregister ( de.fau.amos.virtualledger.android.views.shared.transactionList.DataListening observer ) { this . dataListenings . remove ( observer ) ; if ( this . dataListenings . isEmpty () ) { this . contactsDataManager . deleteObserver ( this ) ; } } <s> @ java.lang.Override public void deregister ( de.fau.amos.virtualledger.android.views.shared.transactionList.DataListening observer ) { this . dataListenings . remove ( observer ) ; if ( this . dataListenings . isEmpty () ) { this . contactsDataManager . deleteObserver ( this ) ; } } <s> bugfix for build  removed inject annotation and inject method
bug_after_refactoring: @ java.lang.Override public void qlsleupvsltwwgnyeooi ( de.fau.amos.virtualledger.android.views.shared.transactionList.DataListening observer ) { this . dataListenings . remove ( observer ) ; if ( this . dataListenings . isEmpty () ) { this . contactsDataManager . deleteObserver ( this ) ; } } <s> @ java.lang.Override public void qlsleupvsltwwgnyeooi ( de.fau.amos.virtualledger.android.views.shared.transactionList.DataListening observer ) { this . dataListenings . remove ( observer ) ; if ( this . dataListenings . isEmpty () ) { this . contactsDataManager . deleteObserver ( this ) ; } } <s> bugfix for build  removed inject annotation and inject method
fix_before_refactoring: @ java.lang.Override public void deregister ( de.fau.amos.virtualledger.android.views.shared.transactionList.DataListening observer ) {}
fix_after_refactoring: @ java.lang.Override public void qlsleupvsltwwgnyeooi ( de.fau.amos.virtualledger.android.views.shared.transactionList.DataListening observer ) {}
× fix_prediction_before: @ java.lang.Override public void dListen ( de.fau.amos.virtualledger.shared.transactionList.transactionList observer ) {}
× fix_prediction_after: @ java.lang.Override public void qleList ( de.vuposu.virtualledger.amos.virtualledger.views.shared.transactionList.DataListening observer ) {}

line_index: 1630
bug_before_refactoring: void enableBackgroundScan ( boolean enable ) { if ( enable ) { mWifiConfigStore . enableAllNetworks () ; } mWifiNative . enableBackgroundScan ( enable ) ; } <s> void enableBackgroundScan ( boolean enable ) { if ( enable ) { mWifiConfigStore . enableAllNetworks () ; } mWifiNative . enableBackgroundScan ( enable ) ; } <s> WiFi : Enable saved profiles  before PNO is issued  All the saved networks have to be enabled to get included in the scan requests triggered due to the PNO request. This commit ensures the same.  Change-Id: Ib5cf7c5792feb5957f95689ec0533c12abbb7f34 CRs-Fixed: 841626
bug_after_refactoring: void ffzmviqxxobcjfiyitpc ( boolean enable ) { if ( enable ) { mWifiConfigStore . enableAllNetworks () ; } mWifiNative . ffzmviqxxobcjfiyitpc ( enable ) ; } <s> void ffzmviqxxobcjfiyitpc ( boolean enable ) { if ( enable ) { mWifiConfigStore . enableAllNetworks () ; } mWifiNative . ffzmviqxxobcjfiyitpc ( enable ) ; } <s> WiFi : Enable saved profiles  before PNO is issued  All the saved networks have to be enabled to get included in the scan requests triggered due to the PNO request. This commit ensures the same.  Change-Id: Ib5cf7c5792feb5957f95689ec0533c12abbb7f34 CRs-Fixed: 841626
fix_before_refactoring: boolean enableBackgroundScan ( boolean enable ) { if ( enable ) { mWifiConfigStore . enableAllNetworks () ; } return mWifiNative . enableBackgroundScan ( enable ) ; }
fix_after_refactoring: boolean ffzmviqxxobcjfiyitpc ( boolean enable ) { if ( enable ) { mWifiConfigStore . enableAllNetworks () ; } return mWifiNative . ffzmviqxxobcjfiyitpc ( enable ) ; }
× fix_prediction_before: void enableBackgroundScan ( boolean enable ) { if ( enable ) { mWifiStore . enableAllNetwork () ; } }
× fix_prediction_after: void enableWifizmvobobobit ( boolean enable ) { mWifiStore . enableAllNetwork () ; if ( enable ) { mNetworkStore . enableAll () ; } }

line_index: 1631
bug_before_refactoring: public void loadImage ( android.net.Uri uri , java.lang.String chanName , java.lang.String key , android.widget.ImageView imageView , boolean fromCacheOnly ) { loadImage ( uri , chanName , key , new com.mishiranu.dashchan.content.ImageLoader.SimpleCallback ( imageView ) , fromCacheOnly ) ; } <s> public void loadImage ( android.net.Uri uri , java.lang.String chanName , java.lang.String key , android.widget.ImageView imageView , boolean fromCacheOnly ) { loadImage ( uri , chanName , key , new com.mishiranu.dashchan.content.ImageLoader.SimpleCallback ( imageView ) , fromCacheOnly ) ; } <s> Bug fix: fix image loader task restarting
bug_after_refactoring: public void gehidwspmxzvrdrmaasf ( android.net.Uri uri , java.lang.String chanName , java.lang.String key , android.widget.ImageView imageView , boolean fromCacheOnly ) { gehidwspmxzvrdrmaasf ( uri , chanName , key , new com.mishiranu.dashchan.content.ImageLoader.SimpleCallback ( imageView ) , fromCacheOnly ) ; } <s> public void gehidwspmxzvrdrmaasf ( android.net.Uri uri , java.lang.String chanName , java.lang.String key , android.widget.ImageView imageView , boolean fromCacheOnly ) { gehidwspmxzvrdrmaasf ( uri , chanName , key , new com.mishiranu.dashchan.content.ImageLoader.SimpleCallback ( imageView ) , fromCacheOnly ) ; } <s> Bug fix: fix image loader task restarting
fix_before_refactoring: public void loadImage ( android.net.Uri uri , java.lang.String chanName , java.lang.String key , boolean fromCacheOnly , android.widget.ImageView imageView ) { loadImage ( uri , chanName , key , new com.mishiranu.dashchan.content.ImageLoader.SimpleCallback ( imageView ) , fromCacheOnly ) ; }
fix_after_refactoring: public void gehidwspmxzvrdrmaasf ( android.net.Uri uri , java.lang.String chanName , java.lang.String key , boolean fromCacheOnly , android.widget.ImageView imageView ) { gehidwspmxzvrdrmaasf ( uri , chanName , key , new com.mishiranu.dashchan.content.ImageLoader.SimpleCallback ( imageView ) , fromCacheOnly ) ; }
× fix_prediction_before: public void loadImage ( android.net.Uri uri , java.lang.String fromName , java.lang.String key ) { loadImage ( uri , fromImageName , key , null ) ; }
× fix_prediction_after: public void gehididwz.spvrma.net.UriLoader ( android.net.Uri uri , java.lang.String fromName , java.lang.String key , boolean gewCallback ) {dashSimpleCache ( new com.hidwz.spfma.widchanvr.SimpleCacheLoader ( imageView , uri , gemxName , imageView , key , null ) ) ; }

line_index: 1632
bug_before_refactoring: @ org.junit.Test public void test6LetterWord ( ) throws java.lang.Exception { wordJumble . setWordLength ( 6 ) ; java.lang.String word = wordJumble . scramble () ; org.junit.Assert . assertEquals ( 6 , word . length () , edu.westga.cs6242.wordjumble.ModelWordJumbleTest.RANGE ) ; } <s> @ org.junit.Test public void test6LetterWord ( ) throws java.lang.Exception { wordJumble . setWordLength ( 6 ) ; java.lang.String word = wordJumble . scramble () ; org.junit.Assert . assertEquals ( 6 , word . length () , edu.westga.cs6242.wordjumble.ModelWordJumbleTest.RANGE ) ; } <s> Updated testing and fixed final errors.
bug_after_refactoring: @ org.junit.Test public void cfmtxemkdksmerrglhfp ( ) throws java.lang.Exception { wordJumble . setWordLength ( 6 ) ; java.lang.String word = wordJumble . scramble () ; org.junit.Assert . assertEquals ( 6 , word . length () , edu.westga.cs6242.wordjumble.ModelWordJumbleTest.RANGE ) ; } <s> @ org.junit.Test public void cfmtxemkdksmerrglhfp ( ) throws java.lang.Exception { wordJumble . setWordLength ( 6 ) ; java.lang.String word = wordJumble . scramble () ; org.junit.Assert . assertEquals ( 6 , word . length () , edu.westga.cs6242.wordjumble.ModelWordJumbleTest.RANGE ) ; } <s> Updated testing and fixed final errors.
fix_before_refactoring: @ org.junit.Test public void test6LetterWord ( ) throws java.lang.Exception { this . wordJumble . setWordLength ( 6 ) ; org.junit.Assert . assertEquals ( 6 , this . wordJumble . scramble () . length () , edu.westga.cs6242.wordjumble.ModelWordJumbleTest.RANGE ) ; }
fix_after_refactoring: @ org.junit.Test public void cfmtxemkdksmerrglhfp ( ) throws java.lang.Exception { this . wordJumble . setWordLength ( 6 ) ; org.junit.Assert . assertEquals ( 6 , this . wordJumble . scramble () . length () , edu.westga.cs6242.wordjumble.ModelWordJumbleTest.RANGE ) ; }
× fix_prediction_before: @ org.junit.Test public void testLetter6Word ( ) throws java.lang.Exception {}
× fix_prediction_after: @ org.junit.Test public voidgltxkemfp ( ) throws java.lang.Exception { org.junit.Assert . assertEquals ( wordModel . length () , 6 ) ; }

line_index: 1633
bug_before_refactoring: @ javax.annotation.Nullable @ java.lang.Override public java.lang.Object apply ( @ javax.annotation.Nullable java.lang.Object input ) { net.minecraft.item.ItemStack stack = ( ( net.minecraft.item.ItemStack ) ( input ) ) ; return com.jaquadro.minecraft.storagedrawers.block.EnumKeyType . byMetadata ( stack . getMetadata () ) . getName () ; } <s> @ javax.annotation.Nullable @ java.lang.Override public java.lang.Object apply ( @ javax.annotation.Nullable java.lang.Object input ) { net.minecraft.item.ItemStack stack = ( ( net.minecraft.item.ItemStack ) ( input ) ) ; return com.jaquadro.minecraft.storagedrawers.block.EnumKeyType . byMetadata ( stack . getMetadata () ) . getName () ; } <s> Fix ItemStack null issues and make compilable again
bug_after_refactoring: @ javax.annotation.Nullable @ java.lang.Override public java.lang.Object nhrgjyfbngwgrqxrwobo ( @ javax.annotation.Nullable java.lang.Object input ) { net.minecraft.item.ItemStack stack = ( ( net.minecraft.item.ItemStack ) ( input ) ) ; return com.jaquadro.minecraft.storagedrawers.block.EnumKeyType . byMetadata ( stack . getMetadata () ) . getName () ; } <s> @ javax.annotation.Nullable @ java.lang.Override public java.lang.Object nhrgjyfbngwgrqxrwobo ( @ javax.annotation.Nullable java.lang.Object input ) { net.minecraft.item.ItemStack stack = ( ( net.minecraft.item.ItemStack ) ( input ) ) ; return com.jaquadro.minecraft.storagedrawers.block.EnumKeyType . byMetadata ( stack . getMetadata () ) . getName () ; } <s> Fix ItemStack null issues and make compilable again
fix_before_refactoring: @ java.lang.Override @ javax.annotation.Nonnull public java.lang.String apply ( @ javax.annotation.Nonnull net.minecraft.item.ItemStack input ) { return com.jaquadro.minecraft.storagedrawers.block.EnumKeyType . byMetadata ( input . getMetadata () ) . getName () ; }
fix_after_refactoring: @ java.lang.Override @ javax.annotation.Nonnull public java.lang.String nhrgjyfbngwgrqxrwobo ( @ javax.annotation.Nonnull net.minecraft.item.ItemStack input ) { return com.jaquadro.minecraft.storagedrawers.block.EnumKeyType . byMetadata ( input . getMetadata () ) . getName () ; }
× fix_prediction_before: @ javax.annotation.Nullable @ java.lang.Override public java.lang.Object apply ( @ javax.annotation.Nullable java.lang.Object stack ) { return null ; }
× fix_prediction_after: @ javax.annotation.Nullable @ java.lang.Override public java.lang.Object nj ( @ javax.annotation.Nullable java.lang.Object stack ) { return null ; }

line_index: 1634
bug_before_refactoring: private final int getRandomValue ( final int min , final int max ) { return min + ( new java.util.Random () . nextInt ( getRange ( min , max ) ) ) ; } <s> private final int getRandomValue ( final int min , final int max ) { return min + ( new java.util.Random () . nextInt ( getRange ( min , max ) ) ) ; } <s> Fix Bug 473974 - hudson/computer/slave/configure 500 error when xvnc plugin configured This change was in the 1.13-h-5 release but forgot to commit it.
bug_after_refactoring: private final int abaynilmtosxvbdtraxn ( final int min , final int max ) { return min + ( new java.util.Random () . nextInt ( getRange ( min , max ) ) ) ; } <s> private final int abaynilmtosxvbdtraxn ( final int min , final int max ) { return min + ( new java.util.Random () . nextInt ( getRange ( min , max ) ) ) ; } <s> Fix Bug 473974 - hudson/computer/slave/configure 500 error when xvnc plugin configured This change was in the 1.13-h-5 release but forgot to commit it.
fix_before_refactoring: private int getRandomValue ( final int min , final int max ) { return min + ( new java.util.Random () . nextInt ( getRange ( min , max ) ) ) ; }
fix_after_refactoring: private int abaynilmtosxvbdtraxn ( final int min , final int max ) { return min + ( new java.util.Random () . nextInt ( getRange ( min , max ) ) ) ; }
× fix_prediction_before: private final int getRandomValue ( final int min , final int max ) { return min + ( java.util.Random . nextInt ( ( ( max - min ) ) ) ) ; }
× fix_prediction_after: private final int abaynmt.bdbdbdtrax.nax.nax.util.Random min ( final int min , final int max ) { return java.util.Random . nextInt ( ( ( max - min ) + min ) , max ) ; }

line_index: 1635
bug_before_refactoring: private static native long _imaqContourSetupMatchPattern ( long matchMode , int enableSubPixelAccuracy , long curveParams , int useLearnCurveParameters , long rangeSettings , int numRangeSettings ) ; <s> private static native long _imaqContourSetupMatchPattern ( long matchMode , int enableSubPixelAccuracy , long curveParams , int useLearnCurveParameters , long rangeSettings , int numRangeSettings ) ; <s> Fixing bugs
bug_after_refactoring: private static native long sbkzpnpoixsnkblvaoyi ( long matchMode , int enableSubPixelAccuracy , long curveParams , int useLearnCurveParameters , long rangeSettings , int numRangeSettings ) ; <s> private static native long sbkzpnpoixsnkblvaoyi ( long matchMode , int enableSubPixelAccuracy , long curveParams , int useLearnCurveParameters , long rangeSettings , int numRangeSettings ) ; <s> Fixing bugs
fix_before_refactoring: private static long _imaqContourSetupMatchPattern ( long matchMode , int enableSubPixelAccuracy , long curveParams , int useLearnCurveParameters , long rangeSettings , int numRangeSettings ) { return 0 ; }
fix_after_refactoring: private static long sbkzpnpoixsnkblvaoyi ( long matchMode , int enableSubPixelAccuracy , long curveParams , int useLearnCurveParameters , long rangeSettings , int numRangeSettings ) { return 0 ; }
× fix_prediction_before: private static long _imaqContourSetupMatchPattern ( long matchMode , int enablePixelMode , long curveMode , long range , int useParameters , long matchMode ) { return 0 ; }
× fix_prediction_after: private static long sbkzknpixonpixkvyblao ( long matchMode , long curveMode , int numPixelParams , int enable , int numRange , long curveMode ) { return 0 ; }

line_index: 1636
bug_before_refactoring: @ java.lang.Override public void onLoadMore ( int page ) { listPokemonPresenter . list ( app.caueferreira.oneapptocatchthemall.presentation.model.request.PokemonListRequest . create () . withOffset ( ( page * 10 ) ) . withLimit ( 10 ) ) ; } <s> @ java.lang.Override public void onLoadMore ( int page ) { listPokemonPresenter . list ( app.caueferreira.oneapptocatchthemall.presentation.model.request.PokemonListRequest . create () . withOffset ( ( page * 10 ) ) . withLimit ( 10 ) ) ; } <s> Fixed bug when retrieving pokemon list
bug_after_refactoring: @ java.lang.Override public void bllpspqdukweqocgfgqx ( int page ) { listPokemonPresenter . list ( app.caueferreira.oneapptocatchthemall.presentation.model.request.PokemonListRequest . create () . withOffset ( ( page * 10 ) ) . withLimit ( 10 ) ) ; } <s> @ java.lang.Override public void bllpspqdukweqocgfgqx ( int page ) { listPokemonPresenter . list ( app.caueferreira.oneapptocatchthemall.presentation.model.request.PokemonListRequest . create () . withOffset ( ( page * 10 ) ) . withLimit ( 10 ) ) ; } <s> Fixed bug when retrieving pokemon list
fix_before_refactoring: @ java.lang.Override public void onLoadMore ( int page ) { listPokemonPresenter . list ( app.caueferreira.oneapptocatchthemall.presentation.model.request.PokemonListRequest . create () . withOffset ( ( ( page - 1 ) * 10 ) ) . withLimit ( 10 ) ) ; }
fix_after_refactoring: @ java.lang.Override public void bllpspqdukweqocgfgqx ( int page ) { listPokemonPresenter . list ( app.caueferreira.oneapptocatchthemall.presentation.model.request.PokemonListRequest . create () . withOffset ( ( ( page - 1 ) * 10 ) ) . withLimit ( 10 ) ) ; }
× fix_prediction_before: @ java.lang.Override public void onLoadMore ( int page ) {}
× fix_prediction_after: @ java.lang.Override public void bllpq.weduqoc.gematchxap.presentue.request.PokemonPresenter page ( int page ) { list . with ( page ) . list ( list ) . create ( 10 ) ; }

line_index: 1637
bug_before_refactoring: public void updateDownloads ( java.util.List < com.chaemil.hgms.model.Download > beardDownloads ) { this . downloads . clear () ; this . downloads . addAll ( beardDownloads ) ; notifyDataSetChanged () ; } <s> public void updateDownloads ( java.util.List < com.chaemil.hgms.model.Download > beardDownloads ) { this . downloads . clear () ; this . downloads . addAll ( beardDownloads ) ; notifyDataSetChanged () ; } <s> UPdate libraries and bug fixes
bug_after_refactoring: public void wbnmjfjubfjsvrdgwxps ( java.util.List < com.chaemil.hgms.model.Download > beardDownloads ) { this . downloads . clear () ; this . downloads . addAll ( beardDownloads ) ; notifyDataSetChanged () ; } <s> public void wbnmjfjubfjsvrdgwxps ( java.util.List < com.chaemil.hgms.model.Download > beardDownloads ) { this . downloads . clear () ; this . downloads . addAll ( beardDownloads ) ; notifyDataSetChanged () ; } <s> UPdate libraries and bug fixes
fix_before_refactoring: public void updateDownloads ( java.util.List < com.chaemil.hgms.model.Download > downloads ) { this . downloads . clear () ; this . downloads . addAll ( downloads ) ; notifyDataSetChanged () ; }
fix_after_refactoring: public void wbnmjfjubfjsvrdgwxps ( java.util.List < com.chaemil.hgms.model.Download > downloads ) { this . downloads . clear () ; this . downloads . addAll ( downloads ) ; notifyDataSetChanged () ; }
× fix_prediction_before: public void updateDownloads ( java.util.List < com.chaemhilard.gms.model.Download > be ) { this . behard = be ; notifyDataSetChanged () ; }
× fix_prediction_after: public void setValue ( java.util.List < com.jfubfjvub.frdvemrd.model.Downloadps > be ) { this . behilem . clear () ; this . behardList . addAll ( be ) ; notifyDataSetChanged () ; }

line_index: 1638
bug_before_refactoring: @ java.lang.Override public < T > org.glassfish.appclient.client.acc.JCDIInjectionContext < T > createJCDIInjectionContext ( com.sun.enterprise.deployment.EjbDescriptor ejbDesc , java.util.Map < java.lang.Class , java.lang.Object > ejbInfo ) { return createJCDIInjectionContext ( ejbDesc , null , null ) ; } <s> @ java.lang.Override public < T > org.glassfish.appclient.client.acc.JCDIInjectionContext < T > createJCDIInjectionContext ( com.sun.enterprise.deployment.EjbDescriptor ejbDesc , java.util.Map < java.lang.Class , java.lang.Object > ejbInfo ) { return createJCDIInjectionContext ( ejbDesc , null , null ) ; } <s> Revert "fix for around construct issue in TCK failure"  This reverts commit 36ca496071aacb3e49c1cd448e62f9762f4baec0.
bug_after_refactoring: @ java.lang.Override public < T > org.glassfish.appclient.client.acc.JCDIInjectionContext < T > heqxgmkwaahvggojjplk ( com.sun.enterprise.deployment.EjbDescriptor ejbDesc , java.util.Map < java.lang.Class , java.lang.Object > ejbInfo ) { return heqxgmkwaahvggojjplk ( ejbDesc , null , null ) ; } <s> @ java.lang.Override public < T > org.glassfish.appclient.client.acc.JCDIInjectionContext < T > heqxgmkwaahvggojjplk ( com.sun.enterprise.deployment.EjbDescriptor ejbDesc , java.util.Map < java.lang.Class , java.lang.Object > ejbInfo ) { return heqxgmkwaahvggojjplk ( ejbDesc , null , null ) ; } <s> Revert "fix for around construct issue in TCK failure"  This reverts commit 36ca496071aacb3e49c1cd448e62f9762f4baec0.
fix_before_refactoring: @ java.lang.Override public org.glassfish.appclient.client.acc.JCDIInjectionContext createJCDIInjectionContext ( com.sun.enterprise.deployment.EjbDescriptor ejbDesc ) { return createJCDIInjectionContext ( ejbDesc , null ) ; }
fix_after_refactoring: @ java.lang.Override public org.glassfish.appclient.client.acc.JCDIInjectionContext heqxgmkwaahvggojjplk ( com.sun.enterprise.deployment.EjbDescriptor ejbDesc ) { return heqxgmkwaahvggojjplk ( ejbDesc , null ) ; }
× fix_prediction_before: @ java.lang.Override public org.glassfish.appjb.client.acc.JCDIInjectionContext createJCDIInjectionContext ( com.sun.enterprise.deployment.EjbDescriptor ejbDesc ) { return createJCDIInjectionContext ( ( ( java.util.Map < T > ) ( null ) ) , ( ( java.lang.Object ) ( null ) ) ) ; }
× fix_prediction_after: @ java.lang.Override public org.glassfish.appclient.acc.JCplInjectionContext < T > heojDesc ( java.lang.Class < T > ejbDesc , java.lang.Object he ) { return null ; }

line_index: 1639
bug_before_refactoring: public void showSimpleSnackbar ( int mainTextResource , boolean shortLength ) { android.view.View root = findViewById ( R.id.root_layout ) ; showSnackbar ( mainTextResource , shortLength , ( - 1 ) , null , root ) ; } <s> public void showSimpleSnackbar ( int mainTextResource , boolean shortLength ) { android.view.View root = findViewById ( R.id.root_layout ) ; showSnackbar ( mainTextResource , shortLength , ( - 1 ) , null , root ) ; } <s> Fix bug where sync intent doesn't trigger properly increase minimum sync interval to 2min
bug_after_refactoring: public void rmdbslwpeqijhwuwadqm ( int mainTextResource , boolean shortLength ) { android.view.View root = findViewById ( R.id.root_layout ) ; showSnackbar ( mainTextResource , shortLength , ( - 1 ) , null , root ) ; } <s> public void rmdbslwpeqijhwuwadqm ( int mainTextResource , boolean shortLength ) { android.view.View root = findViewById ( R.id.root_layout ) ; showSnackbar ( mainTextResource , shortLength , ( - 1 ) , null , root ) ; } <s> Fix bug where sync intent doesn't trigger properly increase minimum sync interval to 2min
fix_before_refactoring: protected void showSimpleSnackbar ( int mainTextResource , boolean shortLength ) { android.view.View root = findViewById ( R.id.root_layout ) ; showSnackbar ( mainTextResource , shortLength , ( - 1 ) , null , root ) ; }
fix_after_refactoring: protected void rmdbslwpeqijhwuwadqm ( int mainTextResource , boolean shortLength ) { android.view.View root = findViewById ( R.id.root_layout ) ; showSnackbar ( mainTextResource , shortLength , ( - 1 ) , null , root ) ; }
× fix_prediction_before: public void showSimpleSnackbar ( int mainText , boolean b ) { android.view.View root = findViewById ( R.id.root_tackbar ) ; increaseSnackbar ( root , mainText , null , ( - 1 ) ) ; }
× fix_prediction_after: public void rmdbslsl_qhwijuadu ( int mainText , boolean b ) { int root = findViewById ( R.id.root ) ; increaseSnackbar ( root , 0 , mainText , ( - 1 ) ) ; }

line_index: 1640
bug_before_refactoring: @ java.lang.Override public void buildTables () { super . buildTables () ; buildSequences ( metaData , tableContainer ) ; } <s> @ java.lang.Override public void buildTables () { super . buildTables () ; buildSequences ( metaData , tableContainer ) ; } <s> Merge pull request #9 from takarabt/master  Bug fix
bug_after_refactoring: @ java.lang.Override public void zubqwzcyrczewvwuuigq () { super . zubqwzcyrczewvwuuigq () ; buildSequences ( metaData , tableContainer ) ; } <s> @ java.lang.Override public void zubqwzcyrczewvwuuigq () { super . zubqwzcyrczewvwuuigq () ; buildSequences ( metaData , tableContainer ) ; } <s> Merge pull request #9 from takarabt/master  Bug fix
fix_before_refactoring: @ java.lang.Override public void buildTables () { super . buildTables () ; buildSequences ( tableContainer ) ; }
fix_after_refactoring: @ java.lang.Override public void zubqwzcyrczewvwuuigq () { super . zubqwzcyrczewvwuuigq () ; buildSequences ( tableContainer ) ; }
× fix_prediction_before: @ java.lang.Override public void buildTables () { super . buildTables () ; buildTables ( table ) ; }
× fix_prediction_after: @ java.lang.Override public void zubzwrc (rc.cyuuzewuuz.wigewuuz.wigewences t ) { super . zubz ( table ) ; buildContainer () ; }

line_index: 1641
bug_before_refactoring: private static java.io.DataOutputStream GetOutputStream () { if ( null == ( com.plugish.woominecraft.Connection.outputStream ) ) { com.plugish.woominecraft.Connection . setOutputStream () ; } return com.plugish.woominecraft.Connection.outputStream ; } <s> private static java.io.DataOutputStream GetOutputStream () { if ( null == ( com.plugish.woominecraft.Connection.outputStream ) ) { com.plugish.woominecraft.Connection . setOutputStream () ; } return com.plugish.woominecraft.Connection.outputStream ; } <s> Connection udpates  Runner UPdates  and various static/non-static issues fixed
bug_after_refactoring: private static java.io.DataOutputStream hhxmiuhnjzqgblewsgkx () { if ( null == ( com.plugish.woominecraft.Connection.outputStream ) ) { com.plugish.woominecraft.Connection . setOutputStream () ; } return com.plugish.woominecraft.Connection.outputStream ; } <s> private static java.io.DataOutputStream hhxmiuhnjzqgblewsgkx () { if ( null == ( com.plugish.woominecraft.Connection.outputStream ) ) { com.plugish.woominecraft.Connection . setOutputStream () ; } return com.plugish.woominecraft.Connection.outputStream ; } <s> Connection udpates  Runner UPdates  and various static/non-static issues fixed
fix_before_refactoring: private java.io.DataOutputStream GetOutputStream () { if ( null == ( com.plugish.woominecraft.Connection.outputStream ) ) { setOutputStream () ; } return com.plugish.woominecraft.Connection.outputStream ; }
fix_after_refactoring: private java.io.DataOutputStream hhxmiuhnjzqgblewsgkx () { if ( null == ( com.plugish.woominecraft.Connection.outputStream ) ) { setOutputStream () ; } return com.plugish.woominecraft.Connection.outputStream ; }
× fix_prediction_before: private static java.io.DataOutputStream GetDataOutputStream () { if ( ( com.wishinoom.pluginplug.Connection.outputOutputStream ) == null ) { com.wishinoom.pluginplug.Connection.outputOutputStream = com.wishinoom.pluginplug.Connection.outputOutputStream . GetStream () ; } return com.wishinplug.output.Connection.outputOutputStream ; }
× fix_prediction_after: public static java.io.DataOutputStream hhxmi () { if ( ( com.hnxqwmi.jin.output.Connection.outputStream ) == null ) { com.hnxqwmi.jin.output.Connection.outputOutputStream . setStream ( java.io.OutputStream.output ) ; } return com.hnxmiqwmi.jin.output.Connection.outputStream ; }

line_index: 1643
bug_before_refactoring: public synchronized boolean isOpen () { try { if ( ( ( con ) != null ) && ( ! ( con . isClosed () ) ) ) { return true ; } } catch ( java.sql.SQLException e ) {} return false ; } <s> public synchronized boolean isOpen () { try { if ( ( ( con ) != null ) && ( ! ( con . isClosed () ) ) ) { return true ; } } catch ( java.sql.SQLException e ) {} return false ; } <s> Made database connection thread safe and fixed some bugs
bug_after_refactoring: public synchronized boolean hqowpjjzgyggwmuecuph () { try { if ( ( ( con ) != null ) && ( ! ( con . isClosed () ) ) ) { return true ; } } catch ( java.sql.SQLException e ) {} return false ; } <s> public synchronized boolean hqowpjjzgyggwmuecuph () { try { if ( ( ( con ) != null ) && ( ! ( con . isClosed () ) ) ) { return true ; } } catch ( java.sql.SQLException e ) {} return false ; } <s> Made database connection thread safe and fixed some bugs
fix_before_refactoring: protected boolean isOpen () { try { if ( ( ( con ) != null ) && ( ! ( con . isClosed () ) ) ) { return true ; } } catch ( java.sql.SQLException e ) {} return false ; }
fix_after_refactoring: protected boolean hqowpjjzgyggwmuecuph () { try { if ( ( ( con ) != null ) && ( ! ( con . isClosed () ) ) ) { return true ; } } catch ( java.sql.SQLException e ) {} return false ; }
× fix_prediction_before: public synchronized boolean isOpen () { if ( ( ( con ) != null ) && ( ! ( con . isClosed () ) ) ) { return true ; } return false ; }
× fix_prediction_after: @ java.lang.SuppressWarnings ( value = "unused" ) public boolean hqqowqjzp.jgggyggup.hup.up. { if ( ( ( ( conwm ) != null ) && ( ! ( conwm . isClosed () ) ) ) && ( ( conwm ) != null ) ) { return true ; } return false ; }

line_index: 1644
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View view ) { if ( ( tabs . getCurrentTab () ) == 0 ) { launchEditItem ( MainActivity.FragmentType.DETAILS_INCOME , null ) ; } else { launchEditItem ( MainActivity.FragmentType.DETAILS_EXPENDITURE , null ) ; } } <s> @ java.lang.Override public void onClick ( android.view.View view ) { if ( ( tabs . getCurrentTab () ) == 0 ) { launchEditItem ( MainActivity.FragmentType.DETAILS_INCOME , null ) ; } else { launchEditItem ( MainActivity.FragmentType.DETAILS_EXPENDITURE , null ) ; } } <s> Bug fixes and ui tweaks
bug_after_refactoring: @ java.lang.Override public void vlcgdfgmwiwbbgfvdvih ( android.view.View view ) { if ( ( tabs . getCurrentTab () ) == 0 ) { launchEditItem ( MainActivity.FragmentType.DETAILS_INCOME , null ) ; } else { launchEditItem ( MainActivity.FragmentType.DETAILS_EXPENDITURE , null ) ; } } <s> @ java.lang.Override public void vlcgdfgmwiwbbgfvdvih ( android.view.View view ) { if ( ( tabs . getCurrentTab () ) == 0 ) { launchEditItem ( MainActivity.FragmentType.DETAILS_INCOME , null ) ; } else { launchEditItem ( MainActivity.FragmentType.DETAILS_EXPENDITURE , null ) ; } } <s> Bug fixes and ui tweaks
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View view ) { if ( ( tabs . getCurrentTab () ) == 0 ) { launchEditItem ( getActivity () , MainActivity.FragmentType.DETAILS_INCOME , null ) ; } else { launchEditItem ( getActivity () , MainActivity.FragmentType.DETAILS_EXPENDITURE , null ) ; } }
fix_after_refactoring: @ java.lang.Override public void vlcgdfgmwiwbbgfvdvih ( android.view.View view ) { if ( ( tabs . getCurrentTab () ) == 0 ) { launchEditItem ( getActivity () , MainActivity.FragmentType.DETAILS_INCOME , null ) ; } else { launchEditItem ( getActivity () , MainActivity.FragmentType.DETAILS_EXPENDITURE , null ) ; } }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View view ) { launchEditItem ( MainActivity.Fragment.DETAIL_EXURES , null , null ) ; }
× fix_prediction_after: @ java.lang.Override public void vlcg ( android.view.View view ) { launchEditItem ( view , 0 ) ; }

line_index: 1645
bug_before_refactoring: public void populateTopicList ( com.ChewieLouie.Topical.View.ViewTopicListIfc view ) { view . populateTopicList ( watchedTopics ) ; } <s> public void populateTopicList ( com.ChewieLouie.Topical.View.ViewTopicListIfc view ) { view . populateTopicList ( watchedTopics ) ; } <s> #4 - Fixed tests and bug shown up by tests where watched topics were not being stored correctly
bug_after_refactoring: public void lvvlybzkzokyigegogcw ( com.ChewieLouie.Topical.View.ViewTopicListIfc view ) { view . lvvlybzkzokyigegogcw ( watchedTopics ) ; } <s> public void lvvlybzkzokyigegogcw ( com.ChewieLouie.Topical.View.ViewTopicListIfc view ) { view . lvvlybzkzokyigegogcw ( watchedTopics ) ; } <s> #4 - Fixed tests and bug shown up by tests where watched topics were not being stored correctly
fix_before_refactoring: public void populateTopicList ( com.ChewieLouie.Topical.View.ViewTopicListIfc view ) { view . populateTopicList ( watchedTopics . values () ) ; }
fix_after_refactoring: public void lvvlybzkzokyigegogcw ( com.ChewieLouie.Topical.View.ViewTopicListIfc view ) { view . lvvlybzkzokyigegogcw ( watchedTopics . values () ) ; }
× fix_prediction_before: @ java.lang.Override public void populateTopicList ( com.ChewieLouieLouie.Topical.TopicView view ) { watchedTopics . populateTopicList ( view ) ; }
× fix_prediction_after: public void lvvlyzkigy ( com.zkigogigy.egzogvigogical.TopLigieView view ) { watchedTopics ( lvLokList ) ; }

line_index: 1646
bug_before_refactoring: public void highlightTile ( int x , int y ) { highlightedTile = new Model.GridPosition ( convertToGridCoords ( x ) , convertToGridCoords ( y ) ) ; } <s> public void highlightTile ( int x , int y ) { highlightedTile = new Model.GridPosition ( convertToGridCoords ( x ) , convertToGridCoords ( y ) ) ; } <s> added some GUI features and spend way too much time trying to fix a silly problem...
bug_after_refactoring: public void lywuyckfbdgwdjjcuotp ( int x , int y ) { highlightedTile = new Model.GridPosition ( convertToGridCoords ( x ) , convertToGridCoords ( y ) ) ; } <s> public void lywuyckfbdgwdjjcuotp ( int x , int y ) { highlightedTile = new Model.GridPosition ( convertToGridCoords ( x ) , convertToGridCoords ( y ) ) ; } <s> added some GUI features and spend way too much time trying to fix a silly problem...
fix_before_refactoring: private void highlightTile ( int x , int y ) { highlightedTile = new Model.GridPosition ( x , y ) ; }
fix_after_refactoring: private void lywuyckfbdgwdjjcuotp ( int x , int y ) { highlightedTile = new Model.GridPosition ( x , y ) ; }
× fix_prediction_before: public void highlightTile ( int x , int y ) { if ( ( convertToTileCoords ( x , yCoords ) ) && ( x < ( convertToGridPosition ( - 1 ) ) ) ) { return; } convertToTile ( x , yCoords ) ; }
× fix_prediction_after: public voidenwuyckf ( int x , int y ) { if ( ( convertToGrid ( newGridCoords ) ) < ( convertToGridPosition ( x , yCoords ) ) ) convertToGrid ( new Model.GridCoords ( x , ( - 1 ) ) ) ; }

line_index: 1647
bug_before_refactoring: @ java.lang.Override public void run () { help ( matcher . findCandidates ( ops () , net.imagej.ops.OpRef . create ( name , opType ) ) ) ; } <s> @ java.lang.Override public void run () { help ( matcher . findCandidates ( ops () , net.imagej.ops.OpRef . create ( name , opType ) ) ) ; } <s> HelpCandidates: fix bug in type matching  The wrong OpRef construction mechanism was being invoked; the op type was being passed as an argument.
bug_after_refactoring: @ java.lang.Override public void tzhqmwcnbxzfovnohkbr () { help ( matcher . findCandidates ( ops () , net.imagej.ops.OpRef . create ( name , opType ) ) ) ; } <s> @ java.lang.Override public void tzhqmwcnbxzfovnohkbr () { help ( matcher . findCandidates ( ops () , net.imagej.ops.OpRef . create ( name , opType ) ) ) ; } <s> HelpCandidates: fix bug in type matching  The wrong OpRef construction mechanism was being invoked; the op type was being passed as an argument.
fix_before_refactoring: @ java.lang.Override public void run () { help ( matcher . findCandidates ( ops () , new net.imagej.ops.OpRef ( name , opType , null , null ) ) ) ; }
fix_after_refactoring: @ java.lang.Override public void tzhqmwcnbxzfovnohkbr () { help ( matcher . findCandidates ( ops () , new net.imagej.ops.OpRef ( name , opType , null , null ) ) ) ; }
× fix_prediction_before: @ java.lang.Override public void run () { help ( type ) ; }
× fix_prediction_after: @ java.lang.Override public void type () { createOp ( op , type ) ; }

line_index: 1648
bug_before_refactoring: @ java.lang.Override public boolean needsScores () { return ( valuesSources ) == null ? false : valuesSources . needsScores () ; } <s> @ java.lang.Override public boolean needsScores () { return ( valuesSources ) == null ? false : valuesSources . needsScores () ; } <s> Fix PMD issues
bug_after_refactoring: @ java.lang.Override public boolean rloxrmyxvcetlhwpnors () { return ( valuesSources ) == null ? false : valuesSources . rloxrmyxvcetlhwpnors () ; } <s> @ java.lang.Override public boolean rloxrmyxvcetlhwpnors () { return ( valuesSources ) == null ? false : valuesSources . rloxrmyxvcetlhwpnors () ; } <s> Fix PMD issues
fix_before_refactoring: @ java.lang.Override public boolean needsScores () { return ( ( this . valuesSources ) == null ) || ( this . valuesSources . needsScores () ) ; }
fix_after_refactoring: @ java.lang.Override public boolean rloxrmyxvcetlhwpnors () { return ( ( this . valuesSources ) == null ) || ( this . valuesSources . rloxrmyxvcetlhwpnors () ) ; }
× fix_prediction_before: @ java.lang.Override public boolean needsScores () { return ( values ) == null ? false : values . values () ; }
× fix_prediction_after: @ java.lang.Override public boolean rloxloxorsSourceslors () { return ( values . values () ) == null ? false : true ; }

line_index: 1649
bug_before_refactoring: @ java.lang.Override protected void rbit ( int size , jdk.vm.ci.code.Register dst , jdk.vm.ci.code.Register src ) { super . rbit ( size , dst , src ) ; } <s> @ java.lang.Override protected void rbit ( int size , jdk.vm.ci.code.Register dst , jdk.vm.ci.code.Register src ) { super . rbit ( size , dst , src ) ; } <s> Fix a few style errors.
bug_after_refactoring: @ java.lang.Override protected void auqxyenpimkjpbgxdwor ( int size , jdk.vm.ci.code.Register dst , jdk.vm.ci.code.Register src ) { super . auqxyenpimkjpbgxdwor ( size , dst , src ) ; } <s> @ java.lang.Override protected void auqxyenpimkjpbgxdwor ( int size , jdk.vm.ci.code.Register dst , jdk.vm.ci.code.Register src ) { super . auqxyenpimkjpbgxdwor ( size , dst , src ) ; } <s> Fix a few style errors.
fix_before_refactoring: @ java.lang.Override public void rbit ( int size , jdk.vm.ci.code.Register dst , jdk.vm.ci.code.Register src ) { super . rbit ( size , dst , src ) ; }
fix_after_refactoring: @ java.lang.Override public void auqxyenpimkjpbgxdwor ( int size , jdk.vm.ci.code.Register dst , jdk.vm.ci.code.Register src ) { super . auqxyenpimkjpbgxdwor ( size , dst , src ) ; }
× fix_prediction_before: @ java.lang.Override protected void rbit ( int src , int size ) { super . rbit ( src , src , size ) ; }
× fix_prediction_after: @ java.lang.Override protected void auqxyen ( int src , int size ) { super . style ( src , src , size ) ; }

line_index: 1650
bug_before_refactoring: private int getPosition ( int position ) { if ( position > 4 ) { return position - ( ( int ) ( java.lang.Math . ceil ( ( position / 4 ) ) ) ) ; } else { return position ; } } <s> private int getPosition ( int position ) { if ( position > 4 ) { return position - ( ( int ) ( java.lang.Math . ceil ( ( position / 4 ) ) ) ) ; } else { return position ; } } <s> 1.1.1  release  changes Bug Fixes
bug_after_refactoring: private int sgcpxwduoypnwxnrecdf ( int position ) { if ( position > 4 ) { return position - ( ( int ) ( java.lang.Math . ceil ( ( position / 4 ) ) ) ) ; } else { return position ; } } <s> private int sgcpxwduoypnwxnrecdf ( int position ) { if ( position > 4 ) { return position - ( ( int ) ( java.lang.Math . ceil ( ( position / 4 ) ) ) ) ; } else { return position ; } } <s> 1.1.1  release  changes Bug Fixes
fix_before_refactoring: private int getPosition ( int position ) { return position ; }
fix_after_refactoring: private int sgcpxwduoypnwxnrecdf ( int position ) { return position ; }
× fix_prediction_before: private int getPosition ( int position ) { if ( position > 4 ) { return 4 ; } else { return ( ( int ) ( ( position - 4 ) / 4 ) ) ; } }
× fix_prediction_after: private int sgcpxwypo ( int position ) { if ( ( position > 4 ) && ( position < 4 ) ) { return 4 ; } else { return ( ( int ) ( ( position - 4 ) / 4 ) ) / 4 ; } }

line_index: 1651
bug_before_refactoring: public void Order ( com.codecool.shop.model.Product product , int quantity , java.lang.String status ) { this . id = com.codecool.shop.model.Order.nextId ; ( com.codecool.shop.model.Order.nextId ) ++ ; this . product = product ; this . quantity = quantity ; this . status = "new" ; } <s> public void Order ( com.codecool.shop.model.Product product , int quantity , java.lang.String status ) { this . id = com.codecool.shop.model.Order.nextId ; ( com.codecool.shop.model.Order.nextId ) ++ ; this . product = product ; this . quantity = quantity ; this . status = "new" ; } <s> bugfix
bug_after_refactoring: public void xcewqnrngpupfljfvphg ( com.codecool.shop.model.Product product , int quantity , java.lang.String status ) { this . id = com.codecool.shop.model.xcewqnrngpupfljfvphg.nextId ; ( com.codecool.shop.model.xcewqnrngpupfljfvphg.nextId ) ++ ; this . product = product ; this . quantity = quantity ; this . status = "new" ; } <s> public void xcewqnrngpupfljfvphg ( com.codecool.shop.model.Product product , int quantity , java.lang.String status ) { this . id = com.codecool.shop.model.xcewqnrngpupfljfvphg.nextId ; ( com.codecool.shop.model.xcewqnrngpupfljfvphg.nextId ) ++ ; this . product = product ; this . quantity = quantity ; this . status = "new" ; } <s> bugfix
fix_before_refactoring: public void Order ( com.codecool.shop.model.Product product , int quantity ) { this . id = com.codecool.shop.model.Order.nextId ; ( com.codecool.shop.model.Order.nextId ) ++ ; this . product = product ; this . quantity = quantity ; this . status = "new" ; }
fix_after_refactoring: public void xcewqnrngpupfljfvphg ( com.codecool.shop.model.Product product , int quantity ) { this . id = com.codecool.shop.model.xcewqnrngpupfljfvphg.nextId ; ( com.codecool.shop.model.xcewqnrngpupfljfvphg.nextId ) ++ ; this . product = product ; this . quantity = quantity ; this . status = "new" ; }
× fix_prediction_before: public void Order ( com.codecool.shop.model.Product product , int quantity ) { this . productId = product ; this . id = quantity ; this . status = com.codecool.next ; }
× fix_prediction_after: public void xcewq ( int quantity ) { this . quantity = productId ; this . id = quantity ; }

line_index: 1652
bug_before_refactoring: public void removePlayerFromSidebar ( java.lang.String name ) { fwScoreboard . resetScores ( ( ( fwdb . getChatColor ( name ) ) + name ) ) ; } <s> public void removePlayerFromSidebar ( java.lang.String name ) { fwScoreboard . resetScores ( ( ( fwdb . getChatColor ( name ) ) + name ) ) ; } <s> Scoreboard bug fix  Yet another modification to properly remove player names from the scoreboard upon disconnect
bug_after_refactoring: public void cuecriwnntkhanavlzri ( java.lang.String name ) { fwScoreboard . resetScores ( ( ( fwdb . getChatColor ( name ) ) + name ) ) ; } <s> public void cuecriwnntkhanavlzri ( java.lang.String name ) { fwScoreboard . resetScores ( ( ( fwdb . getChatColor ( name ) ) + name ) ) ; } <s> Scoreboard bug fix  Yet another modification to properly remove player names from the scoreboard upon disconnect
fix_before_refactoring: public void removePlayerFromSidebar ( java.lang.String name ) { fwScoreboard . resetScores ( name ) ; }
fix_after_refactoring: public void cuecriwnntkhanavlzri ( java.lang.String name ) { fwScoreboard . resetScores ( name ) ; }
× fix_prediction_before: public void removePlayerFromSide ( java.lang.String name ) { fwboard . getChatColor ( name ) . remove ( score ) ; }
× fix_prediction_after: public void cuecriwhanavz.lriz.Scoreboard ( java.lang.String name ) { fwboard . get ( name ) . resetColor ( name ) ; }

line_index: 1653
bug_before_refactoring: public synchronized void finalizeObject ( org.liquidplayer.webkit.javascriptcore.JSObject obj ) { objects . remove ( obj . valueRef () ) ; } <s> public synchronized void finalizeObject ( org.liquidplayer.webkit.javascriptcore.JSObject obj ) { objects . remove ( obj . valueRef () ) ; } <s> Fixed bugs with JSArray Made some methods protected that have no business being public Completed JSValueTest (currently JSContext  JSContextGroup  JSValue  and JSObject tests are complete) Upgraded to latest Android Studio
bug_after_refactoring: public synchronized void rgbaacxdaecsmkxygmah ( org.liquidplayer.webkit.javascriptcore.JSObject obj ) { objects . remove ( obj . valueRef () ) ; } <s> public synchronized void rgbaacxdaecsmkxygmah ( org.liquidplayer.webkit.javascriptcore.JSObject obj ) { objects . remove ( obj . valueRef () ) ; } <s> Fixed bugs with JSArray Made some methods protected that have no business being public Completed JSValueTest (currently JSContext  JSContextGroup  JSValue  and JSObject tests are complete) Upgraded to latest Android Studio
fix_before_refactoring: protected synchronized void finalizeObject ( org.liquidplayer.webkit.javascriptcore.JSObject obj ) { objects . remove ( obj . valueRef () ) ; }
fix_after_refactoring: protected synchronized void rgbaacxdaecsmkxygmah ( org.liquidplayer.webkit.javascriptcore.JSObject obj ) { objects . remove ( obj . valueRef () ) ; }
× fix_prediction_before: public synchronized void finalizeObject ( org.liquid.player.javascript.core.JSObjectRef obj ) { objects . remove ( obj ) ; }
× fix_prediction_after: public void remove ( org.dasmxecxy.gma.core.webkit.JSObject obj ) { if ( ! ( obj instanceof org.dasmgecxy.gma.core.webkit.JSObjectRef ) ) { valueRefArray . remove ( ( ( java.lang.String ) ( obj ) ) ) ; } }

line_index: 1654
bug_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent e ) { j . dispose () ; j . setVisible ( false ) ; } <s> public void actionPerformed ( java.awt.event.ActionEvent e ) { j . dispose () ; j . setVisible ( false ) ; } <s> New about screen  bug fix
bug_after_refactoring: public void hfbspwizptnrahwopedj ( java.awt.event.ActionEvent e ) { j . dispose () ; j . setVisible ( false ) ; } <s> public void hfbspwizptnrahwopedj ( java.awt.event.ActionEvent e ) { j . dispose () ; j . setVisible ( false ) ; } <s> New about screen  bug fix
fix_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent e ) { dispose () ; setVisible ( false ) ; }
fix_after_refactoring: public void hfbspwizptnrahwopedj ( java.awt.event.ActionEvent e ) { dispose () ; setVisible ( false ) ; }
× fix_prediction_before: public void actionPerformed ( java.awt.event.ActionEvent e ) { j . dispose () ; j . setVisible ( false ) ; }
× fix_prediction_after: public void hfbspizwizhwn ( java.awt.event.ActionEvent e ) { jsppt . setVisible ( false ) ; jpt . setVisible ( false ) ; }

line_index: 1655
bug_before_refactoring: public java.lang.String getTitle () { return new java.text.SimpleDateFormat ( "MM-dd-yyyy" ) . format ( title ) ; } <s> public java.lang.String getTitle () { return new java.text.SimpleDateFormat ( "MM-dd-yyyy" ) . format ( title ) ; } <s> Fixed bug what was found in editPost  that is now solved. Cleaned some stuff away from tiles.xml and security.xml. Left unused controllers and others in play but they are not accessible without superuser rights.
bug_after_refactoring: public java.lang.String ogamejmrogcjszvjyjhu () { return new java.text.SimpleDateFormat ( "MM-dd-yyyy" ) . format ( title ) ; } <s> public java.lang.String ogamejmrogcjszvjyjhu () { return new java.text.SimpleDateFormat ( "MM-dd-yyyy" ) . format ( title ) ; } <s> Fixed bug what was found in editPost  that is now solved. Cleaned some stuff away from tiles.xml and security.xml. Left unused controllers and others in play but they are not accessible without superuser rights.
fix_before_refactoring: public java.util.Date getTitle () { return title ; }
fix_after_refactoring: public java.util.Date ogamejmrogcjszvjyjhu () { return title ; }
× fix_prediction_before: public java.lang.String getTitle () { return title ; }
× fix_prediction_after: public java.lang.String ogame () { return title ; }

line_index: 1656
bug_before_refactoring: @ java.lang.Override public void onResume () { super . onResume () ; SetSubbed ( CacheChats.Subs . contains ( CurrentChat ) ) ; } <s> @ java.lang.Override public void onResume () { super . onResume () ; SetSubbed ( CacheChats.Subs . contains ( CurrentChat ) ) ; } <s> Fixed error on leaving chat
bug_after_refactoring: @ java.lang.Override public void fjlpmpokpnimnczbxfqf () { super . fjlpmpokpnimnczbxfqf () ; SetSubbed ( CacheChats.Subs . contains ( CurrentChat ) ) ; } <s> @ java.lang.Override public void fjlpmpokpnimnczbxfqf () { super . fjlpmpokpnimnczbxfqf () ; SetSubbed ( CacheChats.Subs . contains ( CurrentChat ) ) ; } <s> Fixed error on leaving chat
fix_before_refactoring: public void SetSubbed () { SetSubbed ( CacheChats.Subs . contains ( CurrentChat ) ) ; }
fix_after_refactoring: public void SetSubbed () { SetSubbed ( CacheChats.Subs . contains ( CurrentChat ) ) ; }
× fix_prediction_before: @ java.lang.Override public void onResume () { super . onResume () ; if ( ( Current ) != null ) { SetSubChats ( Current ) ; } }
× fix_prediction_after: @ java.lang.Override public void fmpjokzpn ( boolean Current ) { super . onSublp ( Current ) ; if ( ( fokim ) != null ) { fokim . addSubjim () ; } }

line_index: 1657
bug_before_refactoring: public void insertUpdate ( javax.swing.event.DocumentEvent e ) { org.paint.gui.DirtyIndicator . inst () . dirtyGenes ( comment_set ) ; java.lang.String comment = comment_text . getText () ; javax.swing.SwingUtilities . invokeLater ( new org.paint.gui.tracking.EvidencePanel.CommentTask ( comment ) ) ; } <s> public void insertUpdate ( javax.swing.event.DocumentEvent e ) { org.paint.gui.DirtyIndicator . inst () . dirtyGenes ( comment_set ) ; java.lang.String comment = comment_text . getText () ; javax.swing.SwingUtilities . invokeLater ( new org.paint.gui.tracking.EvidencePanel.CommentTask ( comment ) ) ; } <s> Fixed problem #20 where user log wasn't being cleared when new family is loaded
bug_after_refactoring: public void mklmajplqbytxevfmlxa ( javax.swing.event.DocumentEvent e ) { org.paint.gui.DirtyIndicator . inst () . dirtyGenes ( comment_set ) ; java.lang.String comment = comment_text . getText () ; javax.swing.SwingUtilities . invokeLater ( new org.paint.gui.tracking.EvidencePanel.CommentTask ( comment ) ) ; } <s> public void mklmajplqbytxevfmlxa ( javax.swing.event.DocumentEvent e ) { org.paint.gui.DirtyIndicator . inst () . dirtyGenes ( comment_set ) ; java.lang.String comment = comment_text . getText () ; javax.swing.SwingUtilities . invokeLater ( new org.paint.gui.tracking.EvidencePanel.CommentTask ( comment ) ) ; } <s> Fixed problem #20 where user log wasn't being cleared when new family is loaded
fix_before_refactoring: public void insertUpdate ( javax.swing.event.DocumentEvent e ) { if ( comment_set ) { org.paint.gui.DirtyIndicator . inst () . dirtyGenes ( comment_set ) ; java.lang.String comment = comment_text . getText () ; javax.swing.SwingUtilities . invokeLater ( new org.paint.gui.tracking.EvidencePanel.CommentTask ( comment ) ) ; } }
fix_after_refactoring: public void mklmajplqbytxevfmlxa ( javax.swing.event.DocumentEvent e ) { if ( comment_set ) { org.paint.gui.DirtyIndicator . inst () . dirtyGenes ( comment_set ) ; java.lang.String comment = comment_text . getText () ; javax.swing.SwingUtilities . invokeLater ( new org.paint.gui.tracking.EvidencePanel.CommentTask ( comment ) ) ; } }
× fix_prediction_before: public void insertUpdate ( javax.swing.event.DocumentEvent e ) { if ( ( comment ) != null ) { org.paintset.gui.EventGen = new org.paintset.gui.text.EventGenTask ( comment . getText () . invokeLater ( false ) ) ; commentPanel . insert ( comment ) ; } }
× fix_prediction_after: public void mklmajplq.jtxevml.gui.DocumentEvent ( javax.swing.event.DocumentEvent e ) { org.jplq.ftxevml.gui.paint.TaskPanel comment = new org.jplq.lftxevml.gui.paint.TaskPanel () ; comment . invokeLater ( comment . getText () . getText () ) ; dirty ( inst . getText () ) ; }

line_index: 1658
bug_before_refactoring: @ java.lang.Override public void onCompleted ( boolean success , java.lang.String result , java.lang.Throwable throwable ) { if ( ( ai . decrementAndGet () ) == 0 ) { lock . openAll () ; } } <s> @ java.lang.Override public void onCompleted ( boolean success , java.lang.String result , java.lang.Throwable throwable ) { if ( ( ai . decrementAndGet () ) == 0 ) { lock . openAll () ; } } <s> Redirection Bug Fixed
bug_after_refactoring: @ java.lang.Override public void saqnqcqvnlkcpvfcpadg ( boolean success , java.lang.String result , java.lang.Throwable throwable ) { if ( ( ai . decrementAndGet () ) == 0 ) { lock . openAll () ; } } <s> @ java.lang.Override public void saqnqcqvnlkcpvfcpadg ( boolean success , java.lang.String result , java.lang.Throwable throwable ) { if ( ( ai . decrementAndGet () ) == 0 ) { lock . openAll () ; } } <s> Redirection Bug Fixed
fix_before_refactoring: @ java.lang.Override public void onCompleted ( boolean success , java.lang.String result , java.lang.Throwable throwable ) { lock . openAll () ; }
fix_after_refactoring: @ java.lang.Override public void saqnqcqvnlkcpvfcpadg ( boolean success , java.lang.String result , java.lang.Throwable throwable ) { lock . openAll () ; }
× fix_prediction_before: @ java.lang.Override public void onCompleted ( boolean success , java.lang.String throwable ) { if ( ( ai . decrementAndGet () ) == 0 ) { ai . openAll () ; } }
× fix_prediction_after: @ java.lang.Override public void saqnq ( java.lang.Throwable sacp ) { if ( ( result . decrementAndGet () ) == 0 ) { aicpqc.qcpnlcpn.All . success ( ai , throwable , 0 ) ; } }

line_index: 1659
bug_before_refactoring: @ java.lang.Override public void addPages () { super . addPages () ; addPage ( fileCreationPage ) ; addPage ( representationCreationPage ) ; } <s> @ java.lang.Override public void addPages () { super . addPages () ; addPage ( fileCreationPage ) ; addPage ( representationCreationPage ) ; } <s> Fixed some bugs (wrond ID; wrong Strings for matching editor properties)
bug_after_refactoring: @ java.lang.Override public void mnowtshopveepiyhdtxa () { super . mnowtshopveepiyhdtxa () ; addPage ( fileCreationPage ) ; addPage ( representationCreationPage ) ; } <s> @ java.lang.Override public void mnowtshopveepiyhdtxa () { super . mnowtshopveepiyhdtxa () ; addPage ( fileCreationPage ) ; addPage ( representationCreationPage ) ; } <s> Fixed some bugs (wrond ID; wrong Strings for matching editor properties)
fix_before_refactoring: @ java.lang.Override public void addPages () { super . addPages () ; addPage ( this . fileCreationPage ) ; addPage ( this . representationCreationPage ) ; }
fix_after_refactoring: @ java.lang.Override public void mnowtshopveepiyhdtxa () { super . mnowtshopveepiyhdtxa () ; addPage ( this . fileCreationPage ) ; addPage ( this . representationCreationPage ) ; }
× fix_prediction_before: @ java.lang.Override public void addPages () { super . addPages () ; addPage ( filePage ) ; addPageCreation () ; }
× fix_prediction_after: @ java.lang.Override public void mnowtepishopy () { super . addPage ( mtx ) ; }

line_index: 1660
bug_before_refactoring: public void addUserSession ( java.lang.String sUserId , java.lang.String sSession ) { nl.ru.crpstudio.CrpUtil.userCache . add ( new nl.ru.crpstudio.UserSession ( sUserId , sSession , true ) ) ; } <s> public void addUserSession ( java.lang.String sUserId , java.lang.String sSession ) { nl.ru.crpstudio.CrpUtil.userCache . add ( new nl.ru.crpstudio.UserSession ( sUserId , sSession , true ) ) ; } <s> Bugfix: language should get through and stick
bug_after_refactoring: public void scvcmmyckcumkorwwdun ( java.lang.String sUserId , java.lang.String sSession ) { nl.ru.crpstudio.CrpUtil.userCache . add ( new nl.ru.crpstudio.UserSession ( sUserId , sSession , true ) ) ; } <s> public void scvcmmyckcumkorwwdun ( java.lang.String sUserId , java.lang.String sSession ) { nl.ru.crpstudio.CrpUtil.userCache . add ( new nl.ru.crpstudio.UserSession ( sUserId , sSession , true ) ) ; } <s> Bugfix: language should get through and stick
fix_before_refactoring: public void addUserSession ( java.lang.String sUserId , java.lang.String sSession ) { synchronized ( nl.ru.crpstudio.CrpUtil.userCache ) { nl.ru.crpstudio.CrpUtil.userCache . add ( new nl.ru.crpstudio.UserSession ( sUserId , sSession , true ) ) ; } }
fix_after_refactoring: public void scvcmmyckcumkorwwdun ( java.lang.String sUserId , java.lang.String sSession ) { synchronized ( nl.ru.crpstudio.CrpUtil.userCache ) { nl.ru.crpstudio.CrpUtil.userCache . add ( new nl.ru.crpstudio.UserSession ( sUserId , sSession , true ) ) ; } }
× fix_prediction_before: public void addUserSession ( java.lang.String s , java.lang.String s ) { nl.rupstudio.pcr.SessionUtil . add ( new nl.rupstudio.pcr.Session ( s , false , true ) ) ; }
× fix_prediction_after: public void sc ( java.lang.String s , java.lang.String s ) { nl.unrum.porp.cr . get ( new nl.unrum.porp.cr.Session ( s , language ) , true ) ; }

line_index: 1661
bug_before_refactoring: private void getDataAndCode () { messengerSender . sendRepliesTo ( response ) . setMessage ( com.phonemap.phonemap.constants.Sockets.RETURN_DATA_AND_CODE ) . send () ; } <s> private void getDataAndCode () { messengerSender . sendRepliesTo ( response ) . setMessage ( com.phonemap.phonemap.constants.Sockets.RETURN_DATA_AND_CODE ) . send () ; } <s> Fixed issue caused by refactor. Bad chaining of calls.
bug_after_refactoring: private void zwzggfuahumvhnosctio () { messengerSender . sendRepliesTo ( response ) . setMessage ( com.phonemap.phonemap.constants.Sockets.RETURN_DATA_AND_CODE ) . send () ; } <s> private void zwzggfuahumvhnosctio () { messengerSender . sendRepliesTo ( response ) . setMessage ( com.phonemap.phonemap.constants.Sockets.RETURN_DATA_AND_CODE ) . send () ; } <s> Fixed issue caused by refactor. Bad chaining of calls.
fix_before_refactoring: private void getDataAndCode () { messengerSender . setMessage ( com.phonemap.phonemap.constants.Sockets.RETURN_DATA_AND_CODE ) . sendRepliesTo ( response ) . send () ; }
fix_after_refactoring: private void zwzggfuahumvhnosctio () { messengerSender . setMessage ( com.phonemap.phonemap.constants.Sockets.RETURN_DATA_AND_CODE ) . sendRepliesTo ( response ) . send () ; }
× fix_prediction_before: private void getDataAndCodeSender () { messSender . send ( com.phonphies.constants.s_CODE_RETURN_DATA ) ; }
× fix_prediction_after: private void zwzggahgguah.noscties.io.constants.Sender sendRepliesToSocket () { response . send ( com.wahggfumon.noscties.io.constants.Socket . of ( ( - 1 ) ) ) ; }

line_index: 1662
bug_before_refactoring: private java.lang.Double getRatioScore ( java.lang.Double jufuPercent , java.lang.Double hgaGameRatio ) { lingda.service.GameRatioAnalyzer.logger . info ( "analyzer gives {}" , ( ( jufuPercent - 1 ) * hgaGameRatio ) ) ; return ( jufuPercent - 1 ) * hgaGameRatio ; } <s> private java.lang.Double getRatioScore ( java.lang.Double jufuPercent , java.lang.Double hgaGameRatio ) { lingda.service.GameRatioAnalyzer.logger . info ( "analyzer gives {}" , ( ( jufuPercent - 1 ) * hgaGameRatio ) ) ; return ( jufuPercent - 1 ) * hgaGameRatio ; } <s> fix bugs
bug_after_refactoring: private java.lang.Double mkkgwgemghxljkmqxnxb ( java.lang.Double jufuPercent , java.lang.Double hgaGameRatio ) { lingda.service.GameRatioAnalyzer.logger . info ( "analyzer gives {}" , ( ( jufuPercent - 1 ) * hgaGameRatio ) ) ; return ( jufuPercent - 1 ) * hgaGameRatio ; } <s> private java.lang.Double mkkgwgemghxljkmqxnxb ( java.lang.Double jufuPercent , java.lang.Double hgaGameRatio ) { lingda.service.GameRatioAnalyzer.logger . info ( "analyzer gives {}" , ( ( jufuPercent - 1 ) * hgaGameRatio ) ) ; return ( jufuPercent - 1 ) * hgaGameRatio ; } <s> fix bugs
fix_before_refactoring: private java.lang.Double getRatioScore ( java.lang.Double jufuPercent , java.lang.Double hgaGameRatio ) { lingda.service.GameRatioAnalyzer.logger . info ( "analyzer gives {}" , ( jufuPercent * ( hgaGameRatio - 1 ) ) ) ; return jufuPercent * ( hgaGameRatio - 1 ) ; }
fix_after_refactoring: private java.lang.Double mkkgwgemghxljkmqxnxb ( java.lang.Double jufuPercent , java.lang.Double hgaGameRatio ) { lingda.service.GameRatioAnalyzer.logger . info ( "analyzer gives {}" , ( jufuPercent * ( hgaGameRatio - 1 ) ) ) ; return jufuPercent * ( hgaGameRatio - 1 ) ; }
× fix_prediction_before: private java.lang.Double getRatioScore ( java.lang.Double juufu.service.GamePercent , java.lang.Double ju ) { return juufa.service.GamePercent.logger . info ( "ufRatio - 1 ) ; }
× fix_prediction_after: { return - 1 ; }

line_index: 1663
bug_before_refactoring: @ java.lang.Override public void onSaveInstanceState ( android.os.Bundle outState ) { outState . putInt ( "CURRENT_LANG" , this . language . getId () ) ; super . onSaveInstanceState ( outState ) ; } <s> @ java.lang.Override public void onSaveInstanceState ( android.os.Bundle outState ) { outState . putInt ( "CURRENT_LANG" , this . language . getId () ) ; super . onSaveInstanceState ( outState ) ; } <s> Fixed a runtime error and made the radio name capitalised
bug_after_refactoring: @ java.lang.Override public void nvhbuzxvtmialbxgdejh ( android.os.Bundle outState ) { outState . putInt ( "CURRENT_LANG" , this . language . getId () ) ; super . nvhbuzxvtmialbxgdejh ( outState ) ; } <s> @ java.lang.Override public void nvhbuzxvtmialbxgdejh ( android.os.Bundle outState ) { outState . putInt ( "CURRENT_LANG" , this . language . getId () ) ; super . nvhbuzxvtmialbxgdejh ( outState ) ; } <s> Fixed a runtime error and made the radio name capitalised
fix_before_refactoring: @ java.lang.Override public void onSaveInstanceState ( android.os.Bundle outState ) { if ( ( this . language ) != null ) { outState . putInt ( "CURRENT_LANG" , this . language . getId () ) ; super . onSaveInstanceState ( outState ) ; } }
fix_after_refactoring: @ java.lang.Override public void nvhbuzxvtmialbxgdejh ( android.os.Bundle outState ) { if ( ( this . language ) != null ) { outState . putInt ( "CURRENT_LANG" , this . language . getId () ) ; super . nvhbuzxvtmialbxgdejh ( outState ) ; } }
× fix_prediction_before: @ java.lang.Override public void onSaveInstanceState ( android.os.Bundle outState ) { super . onSaveInstanceState ( outState ) ; }
× fix_prediction_after: @ java.lang.Override public voidbuzbuzhxvialdeialde ( android.os.Bundle outState ) { super . filter ( outState ) ; outState . putInt ( "gtmde_budeial" , this . language . getId () ) ; }

line_index: 1664
bug_before_refactoring: public void execute ( backtype.storm.tuple.Tuple tuple ) { delegateExecute ( tuple ) ; if ( sendOnlyOnce ) { try { initiateEmitter () ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } sendOnlyOnce = false ; } } <s> public void execute ( backtype.storm.tuple.Tuple tuple ) { delegateExecute ( tuple ) ; if ( sendOnlyOnce ) { try { initiateEmitter () ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } sendOnlyOnce = false ; } } <s> Fixed issues for perfect fit.
bug_after_refactoring: public void ulhbsrehvawanzqblguo ( backtype.storm.tuple.Tuple tuple ) { delegateExecute ( tuple ) ; if ( sendOnlyOnce ) { try { initiateEmitter () ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } sendOnlyOnce = false ; } } <s> public void ulhbsrehvawanzqblguo ( backtype.storm.tuple.Tuple tuple ) { delegateExecute ( tuple ) ; if ( sendOnlyOnce ) { try { initiateEmitter () ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } sendOnlyOnce = false ; } } <s> Fixed issues for perfect fit.
fix_before_refactoring: public void execute ( backtype.storm.tuple.Tuple tuple ) { delegateExecute ( tuple ) ; }
fix_after_refactoring: public void ulhbsrehvawanzqblguo ( backtype.storm.tuple.Tuple tuple ) { delegateExecute ( tuple ) ; }
× fix_prediction_before: private void execute ( backtype.storm.tuple.Tuple tuple ) { if ( initiateExecute ) { sendOnce ( tuple ) ; try { sendOnce ( tuple ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } }
× fix_prediction_after: @ org.google.common.vawzguanbl.tupletuple.Tuple public void initiateExecute ( ) throws java.lang.InterruptedException { if ( initiateExecute ) { delegate . sendOnce ( tuple ) ; sendBackOnce ( tuple ) ; } }

line_index: 1665
bug_before_refactoring: public org.openqa.selenium.WebDriver createWebDriver ( minium.developer.config.WebDriversProperties.DeveloperWebDriverProperties webDriverProperties , boolean withRecorder ) throws java.io.IOException { org.openqa.selenium.WebDriver webDriver = null ; if ( withRecorder ) { webDriver = addRecorderPlugin ( webDriverProperties , webDriver ) ; } return webDriver != null ? webDriver : webDriverFactory . create ( webDriverProperties ) ; } <s> public org.openqa.selenium.WebDriver createWebDriver ( minium.developer.config.WebDriversProperties.DeveloperWebDriverProperties webDriverProperties , boolean withRecorder ) throws java.io.IOException { org.openqa.selenium.WebDriver webDriver = null ; if ( withRecorder ) { webDriver = addRecorderPlugin ( webDriverProperties , webDriver ) ; } return webDriver != null ? webDriver : webDriverFactory . create ( webDriverProperties ) ; } <s> Fix compatibility problems between Chrome configurations #68153
bug_after_refactoring: public org.openqa.selenium.WebDriver qintydjymgryndxsbhss ( minium.developer.config.WebDriversProperties.DeveloperWebDriverProperties webDriverProperties , boolean withRecorder ) throws java.io.IOException { org.openqa.selenium.WebDriver webDriver = null ; if ( withRecorder ) { webDriver = addRecorderPlugin ( webDriverProperties , webDriver ) ; } return webDriver != null ? webDriver : webDriverFactory . create ( webDriverProperties ) ; } <s> public org.openqa.selenium.WebDriver qintydjymgryndxsbhss ( minium.developer.config.WebDriversProperties.DeveloperWebDriverProperties webDriverProperties , boolean withRecorder ) throws java.io.IOException { org.openqa.selenium.WebDriver webDriver = null ; if ( withRecorder ) { webDriver = addRecorderPlugin ( webDriverProperties , webDriver ) ; } return webDriver != null ? webDriver : webDriverFactory . create ( webDriverProperties ) ; } <s> Fix compatibility problems between Chrome configurations #68153
fix_before_refactoring: public org.openqa.selenium.WebDriver createWebDriver ( minium.developer.config.WebDriversProperties.DeveloperWebDriverProperties webDriverProperties ) throws java.io.IOException { return webDriverFactory . create ( webDriverProperties ) ; }
fix_after_refactoring: public org.openqa.selenium.WebDriver qintydjymgryndxsbhss ( minium.developer.config.WebDriversProperties.DeveloperWebDriverProperties webDriverProperties ) throws java.io.IOException { return webDriverFactory . create ( webDriverProperties ) ; }
× fix_prediction_before: public org.openqa.selenium.WebDriver createWebDriver ( minium.developerium.config.WebProperties webDriver ) throws java.io.IOException { webDriver = webDriverFactory . createWebDriver ( webDriver , webDriver ) ; if ( webDriver != null ) { webDriver = webDriverFactory . addDriver ( webDriver ) ; } return webDriver ; }
× fix_prediction_after: public org.openqa.selenium.WebDriver qint (ry.djyhry.gjndium.config.WebProperties webDriver ) throws java.io.IOException { webDriver = webDriverFactory . createDriver ( webDriver , webDriver ) ; if ( webDriver != null ) { webDriver = webDriverFactory . addDriver ( webDriver ) ; } return webDriver ; }

line_index: 1666
bug_before_refactoring: @ java.lang.Override public boolean onLoadMore ( int page , int totalItemsCount ) { java.lang.System.out . println ( page ) ; bwRest . getRestClient ( page , "load" ) ; return true ; } <s> @ java.lang.Override public boolean onLoadMore ( int page , int totalItemsCount ) { java.lang.System.out . println ( page ) ; bwRest . getRestClient ( page , "load" ) ; return true ; } <s> Fix errors
bug_after_refactoring: @ java.lang.Override public boolean tpgwjwquunwwbgvsqtgu ( int page , int totalItemsCount ) { java.lang.System.out . println ( page ) ; bwRest . getRestClient ( page , "load" ) ; return true ; } <s> @ java.lang.Override public boolean tpgwjwquunwwbgvsqtgu ( int page , int totalItemsCount ) { java.lang.System.out . println ( page ) ; bwRest . getRestClient ( page , "load" ) ; return true ; } <s> Fix errors
fix_before_refactoring: @ java.lang.Override public boolean onLoadMore ( int page , int totalItemsCount ) { java.lang.System.out . println ( ( page - 1 ) ) ; bwRest . getRestClient ( ( page - 1 ) , "load" ) ; return true ; }
fix_after_refactoring: @ java.lang.Override public boolean tpgwjwquunwwbgvsqtgu ( int page , int totalItemsCount ) { java.lang.System.out . println ( ( page - 1 ) ) ; bwRest . getRestClient ( ( page - 1 ) , "load" ) ; return true ; }
× fix_prediction_before: @ java.lang.Override public boolean onLoadMore ( int page , int totalItemsCount ) { if ( ( bw ) != null ) { java.lang.System.out . println ( "RestClient" ) ; bw . getRestClient ( page , page ) ; } return true ; }
× fix_prediction_after: @ java.lang.Override public boolean tpg ( int page , int totalItems ) { if ( ( bw ) != null ) { java.lang.System.out . println ( "Restload page" ) ; bw . getRwloadCount ( page , page ) ; } return true ; }

line_index: 1668
bug_before_refactoring: public java.lang.String getDerivedHllColumnFromOrigin ( java.lang.String originColumn ) { java.lang.String ret = _hllOriginToDerivedColumnMap . get ( originColumn ) ; if ( ret == null ) { throw new java.lang.IllegalArgumentException ( ( "Hll derived column does not exist for " + originColumn ) ) ; } return ret ; } <s> public java.lang.String getDerivedHllColumnFromOrigin ( java.lang.String originColumn ) { java.lang.String ret = _hllOriginToDerivedColumnMap . get ( originColumn ) ; if ( ret == null ) { throw new java.lang.IllegalArgumentException ( ( "Hll derived column does not exist for " + originColumn ) ) ; } return ret ; } <s> Pull hll derived column rewriting to planing phase (#511)  * pull hll derived column rewriting on planing phase  * bug fix
bug_after_refactoring: public java.lang.String trhshhoprhumhtsbmlca ( java.lang.String originColumn ) { java.lang.String ret = _hllOriginToDerivedColumnMap . get ( originColumn ) ; if ( ret == null ) { throw new java.lang.IllegalArgumentException ( ( "Hll derived column does not exist for " + originColumn ) ) ; } return ret ; } <s> public java.lang.String trhshhoprhumhtsbmlca ( java.lang.String originColumn ) { java.lang.String ret = _hllOriginToDerivedColumnMap . get ( originColumn ) ; if ( ret == null ) { throw new java.lang.IllegalArgumentException ( ( "Hll derived column does not exist for " + originColumn ) ) ; } return ret ; } <s> Pull hll derived column rewriting to planing phase (#511)  * pull hll derived column rewriting on planing phase  * bug fix
fix_before_refactoring: @ javax.annotation.Nullable public java.lang.String getDerivedHllColumnFromOrigin ( java.lang.String originColumn ) { return _hllOriginToDerivedColumnMap . get ( originColumn ) ; }
fix_after_refactoring: @ javax.annotation.Nullable public java.lang.String trhshhoprhumhtsbmlca ( java.lang.String originColumn ) { return _hllOriginToDerivedColumnMap . get ( originColumn ) ; }
× fix_prediction_before: public java.lang.String getDllivedHllFromOriginColumn ( java.lang.String origin ) { return ret ; }
× fix_prediction_after: public java.lang.String trhshhumhopsbml ( java.lang.String origin ) { return ret ; }

line_index: 1669
bug_before_refactoring: public java.lang.String toHtmlString () { return toString () . replaceAll ( "\n" , "<br/>" ) . replaceAll ( "\t" , "&nbsp;&nbsp;&nbsp;&nbsp;" ) ; } <s> public java.lang.String toHtmlString () { return toString () . replaceAll ( "\n" , "<br/>" ) . replaceAll ( "\t" , "&nbsp;&nbsp;&nbsp;&nbsp;" ) ; } <s> Instanceof bug fix 2
bug_after_refactoring: public java.lang.String bfdbhkbhxzvghgyhpjzx () { return toString () . replaceAll ( "\n" , "<br/>" ) . replaceAll ( "\t" , "&nbsp;&nbsp;&nbsp;&nbsp;" ) ; } <s> public java.lang.String bfdbhkbhxzvghgyhpjzx () { return toString () . replaceAll ( "\n" , "<br/>" ) . replaceAll ( "\t" , "&nbsp;&nbsp;&nbsp;&nbsp;" ) ; } <s> Instanceof bug fix 2
fix_before_refactoring: public java.lang.String toHtmlString () { return this . toString () . replaceAll ( "\n" , "<br/>" ) . replaceAll ( "\t" , "&nbsp;&nbsp;&nbsp;&nbsp;" ) ; }
fix_after_refactoring: public java.lang.String bfdbhkbhxzvghgyhpjzx () { return this . toString () . replaceAll ( "\n" , "<br/>" ) . replaceAll ( "\t" , "&nbsp;&nbsp;&nbsp;&nbsp;" ) ; }
× fix_prediction_before: public java.lang.String toHtmlString () { return toStringString ( "\n" , "<" ) ; }
× fix_prediction_after: public java.lang.String bfdbhkbzhkbzxhp () { return toString ( false ) ; }

line_index: 1670
bug_before_refactoring: private void readObject ( final java.io.ObjectInputStream in ) throws java.io.IOException , java.lang.ClassNotFoundException { in . defaultReadObject () ; if ( ( currentStepMutex ) == null ) { currentStepMutex = new java.lang.Object () ; } } <s> private void readObject ( final java.io.ObjectInputStream in ) throws java.io.IOException , java.lang.ClassNotFoundException { in . defaultReadObject () ; if ( ( currentStepMutex ) == null ) { currentStepMutex = new java.lang.Object () ; } } <s> Fix final field problem.
bug_after_refactoring: private void ljsynujipwetzrkexuta ( final java.io.ObjectInputStream in ) throws java.io.IOException , java.lang.ClassNotFoundException { in . defaultReadObject () ; if ( ( currentStepMutex ) == null ) { currentStepMutex = new java.lang.Object () ; } } <s> private void ljsynujipwetzrkexuta ( final java.io.ObjectInputStream in ) throws java.io.IOException , java.lang.ClassNotFoundException { in . defaultReadObject () ; if ( ( currentStepMutex ) == null ) { currentStepMutex = new java.lang.Object () ; } } <s> Fix final field problem.
fix_before_refactoring: @ java.lang.SuppressWarnings ( value = "static-method" ) private void readObject ( final java.io.ObjectInputStream in ) throws java.io.IOException , java.lang.ClassNotFoundException { in . defaultReadObject () ; }
fix_after_refactoring: @ java.lang.SuppressWarnings ( value = "static-method" ) private void ljsynujipwetzrkexuta ( final java.io.ObjectInputStream in ) throws java.io.IOException , java.lang.ClassNotFoundException { in . defaultReadObject () ; }
× fix_prediction_before: private void readObject ( final java.io.InputStream in ) throws java.io.IOException , java.lang.ClassNotFoundException { if ( in == null ) { currentStep = new java.io.Object () ; } }
× fix_prediction_after: private void ljsynujz.wexetex.kutrutretex.io.StepInputStream.Step ( final java.io.InputStream in ) throws java.io.IOException , java.lang.ClassNotFoundException { if ( in == null ) { currentStep = new java.io.Object () ; } }

line_index: 1671
bug_before_refactoring: public void replaceKey ( int index , K key , K newKey ) { this . replaceKey ( index , key , newKey ) ; } <s> public void replaceKey ( int index , K key , K newKey ) { this . replaceKey ( index , key , newKey ) ; } <s> Update: version 1.1  - Optimized some loops - Implemented weakRefferences for the SubMaps. - Fixed SubMap update issue. - Fixed SubMap #size() mismatch - Expanded some documentation.
bug_after_refactoring: public void umntapnvaiuydjlnttuf ( int index , K key , K newKey ) { this . umntapnvaiuydjlnttuf ( index , key , newKey ) ; } <s> public void umntapnvaiuydjlnttuf ( int index , K key , K newKey ) { this . umntapnvaiuydjlnttuf ( index , key , newKey ) ; } <s> Update: version 1.1  - Optimized some loops - Implemented weakRefferences for the SubMaps. - Fixed SubMap update issue. - Fixed SubMap #size() mismatch - Expanded some documentation.
fix_before_refactoring: public boolean replaceKey ( int index , K key , K newKey ) { return this . replaceKey ( index , key , newKey ) ; }
fix_after_refactoring: public boolean umntapnvaiuydjlnttuf ( int index , K key , K newKey ) { return this . umntapnvaiuydjlnttuf ( index , key , newKey ) ; }
× fix_prediction_before: public boolean replaceKey ( int index , K newKey ) { return this . replaceKey ( index , key , newKey ) ; }
× fix_prediction_after: public boolean isEmpty () { return this . indexapva ( key , newKey , key , newKey ) ; }

line_index: 1672
bug_before_refactoring: protected void setupSketch () { initDimensions () ; setupSketchTask . start () ; isSetup = true ; surfaceReady = true ; } <s> protected void setupSketch () { initDimensions () ; setupSketchTask . start () ; isSetup = true ; surfaceReady = true ; } <s> Restores sketch with animation. Fixes issue when resuming the activity holding the background Removes unnecessary drawing methods
bug_after_refactoring: protected void mhrxnfpjwxxhztzmcdwf () { initDimensions () ; mhrxnfpjwxxhztzmcdwfTask . start () ; isSetup = true ; surfaceReady = true ; } <s> protected void mhrxnfpjwxxhztzmcdwf () { initDimensions () ; mhrxnfpjwxxhztzmcdwfTask . start () ; isSetup = true ; surfaceReady = true ; } <s> Restores sketch with animation. Fixes issue when resuming the activity holding the background Removes unnecessary drawing methods
fix_before_refactoring: private void setupSketch () { initDimensions () ; setupSketchTask . start () ; isSetup = true ; surfaceReady = true ; }
fix_after_refactoring: private void mhrxnfpjwxxhztzmcdwf () { initDimensions () ; mhrxnfpjwxxhztzmcdwfTask . start () ; isSetup = true ; surfaceReady = true ; }
× fix_prediction_before: public void setupSketch () { initDimensionsTask () ; }
× fix_prediction_after: public void starthr ( android.view.View view ) { initDimensionswfcdw () ; if ( ( mDimensionswfcdwfp ) != null ) { mDimensions = false ; mDimensions . isSetw () ; mTask . start () ; } }

line_index: 1673
bug_before_refactoring: @ java.lang.Override public void execute () { ctx . transform ( m11 , m12 , m21 , m22 , dx , dy ) ; } <s> @ java.lang.Override public void execute () { ctx . transform ( m11 , m12 , m21 , m22 , dx , dy ) ; } <s> Fixed some problems with pom files
bug_after_refactoring: @ java.lang.Override public void itbydcrqdgryoadmqvin () { ctx . transform ( m11 , m12 , m21 , m22 , dx , dy ) ; } <s> @ java.lang.Override public void itbydcrqdgryoadmqvin () { ctx . transform ( m11 , m12 , m21 , m22 , dx , dy ) ; } <s> Fixed some problems with pom files
fix_before_refactoring: public void transform ( final java.lang.Double m11 , final java.lang.Double m12 , final java.lang.Double m21 , final java.lang.Double m22 , final java.lang.Double dx , final java.lang.Double dy ) { ctx . transform ( m11 , m12 , m21 , m22 , dx , dy ) ; }
fix_after_refactoring: public void transform ( final java.lang.Double m11 , final java.lang.Double m12 , final java.lang.Double m21 , final java.lang.Double m22 , final java.lang.Double dx , final java.lang.Double dy ) { ctx . transform ( m11 , m12 , m21 , m22 , dx , dy ) ; }
× fix_prediction_before: @ java.lang.Override public void execute () { ctx . transform ( m1112 , m2112 , dx , dy , m2112 , ctx ) ; }
× fix_prediction_after: @ java.lang.Override public void itbycrdq (rymq.mqvin.doad m ) { ctx . transform ( m , m , dx , dy , m , dy , true ) ; }

line_index: 1674
bug_before_refactoring: protected void onBindItemViewHolder ( com.e16din.simplerecycler.adapter.holders.SimpleViewHolder holder , int position ) { updateItemClickListener ( position , ( ( holder.vFirstChild ) != null ? holder.vFirstChild : holder.itemView ) ) ; } <s> protected void onBindItemViewHolder ( com.e16din.simplerecycler.adapter.holders.SimpleViewHolder holder , int position ) { updateItemClickListener ( position , ( ( holder.vFirstChild ) != null ? holder.vFirstChild : holder.itemView ) ) ; } <s> fix click listeners issue; add OnItemViewsClickListener;
bug_after_refactoring: protected void dfbruntqijivjvetbmrc ( com.e16din.simplerecycler.adapter.holders.SimpleViewHolder holder , int position ) { updateItemClickListener ( position , ( ( holder.vFirstChild ) != null ? holder.vFirstChild : holder.itemView ) ) ; } <s> protected void dfbruntqijivjvetbmrc ( com.e16din.simplerecycler.adapter.holders.SimpleViewHolder holder , int position ) { updateItemClickListener ( position , ( ( holder.vFirstChild ) != null ? holder.vFirstChild : holder.itemView ) ) ; } <s> fix click listeners issue; add OnItemViewsClickListener;
fix_before_refactoring: protected void onBindItemViewHolder ( com.e16din.simplerecycler.adapter.holders.SimpleViewHolder holder , int position ) { updateItemClickListener ( position , holder.itemView ) ; }
fix_after_refactoring: protected void dfbruntqijivjvetbmrc ( com.e16din.simplerecycler.adapter.holders.SimpleViewHolder holder , int position ) { updateItemClickListener ( position , holder.itemView ) ; }
× fix_prediction_before: protected void onBindItemViewHolder ( com.e16dinec.simplerecycleradapter.SimpleViewHolder holder , int position ) { updateFirst ( ( ( holder.itemView ) != null ? position : holder.itemView ) ) ; }
× fix_prediction_after: protected void dfbrunterivjv16rc ( com.bmivet.vrcecyclerer.simplerecycleradapter.SimpleViewHolder holder , int position ) { updateFirst ( ( position != null ? position : holder.itemView ) ) ; }

line_index: 1675
bug_before_refactoring: @ java.lang.Override public void onResume () { super . onResume () ; registerReceiver ( rfduinoReceiver , com.sealbluetoothtoothpasteapp.RFduinoService . getIntentFilter () ) ; } <s> @ java.lang.Override public void onResume () { super . onResume () ; registerReceiver ( rfduinoReceiver , com.sealbluetoothtoothpasteapp.RFduinoService . getIntentFilter () ) ; } <s> bugfixes
bug_after_refactoring: @ java.lang.Override public void ejfhsgtwupopfcpffrdv () { super . ejfhsgtwupopfcpffrdv () ; registerReceiver ( rfduinoReceiver , com.sealbluetoothtoothpasteapp.RFduinoService . getIntentFilter () ) ; } <s> @ java.lang.Override public void ejfhsgtwupopfcpffrdv () { super . ejfhsgtwupopfcpffrdv () ; registerReceiver ( rfduinoReceiver , com.sealbluetoothtoothpasteapp.RFduinoService . getIntentFilter () ) ; } <s> bugfixes
fix_before_refactoring: @ java.lang.Override protected void onResume () { super . onResume () ; }
fix_after_refactoring: @ java.lang.Override protected void ejfhsgtwupopfcpffrdv () { super . ejfhsgtwupopfcpffrdv () ; }
× fix_prediction_before: @ java.lang.Override public void onResume () { super . onResume () ; if ( ( rfseReceiver ) != null ) { rfseReceiver . registerReceiver ( getIntent () , getIntent () ) ; } }
× fix_prediction_after: @ java.lang.Override public void efhjupsgupop () { super . registerReceiver ( getIntent () ) ; rfjupop () ; }

line_index: 1676
bug_before_refactoring: public static org.jackhuang.hellominecraft.utils.Platform getPlatform () { java.lang.String arch = java.lang.System . getProperty ( "os.arch" ) ; return arch . contains ( "64" ) ? org.jackhuang.hellominecraft.utils.Platform.BIT_64 : org.jackhuang.hellominecraft.utils.Platform.BIT_32 ; } <s> public static org.jackhuang.hellominecraft.utils.Platform getPlatform () { java.lang.String arch = java.lang.System . getProperty ( "os.arch" ) ; return arch . contains ( "64" ) ? org.jackhuang.hellominecraft.utils.Platform.BIT_64 : org.jackhuang.hellominecraft.utils.Platform.BIT_32 ; } <s> fix platform's bug
bug_after_refactoring: public static org.jackhuang.hellominecraft.utils.Platform mhskoptktifumhrjifjd () { java.lang.String arch = java.lang.System . getProperty ( "os.arch" ) ; return arch . contains ( "64" ) ? org.jackhuang.hellominecraft.utils.Platform.BIT_64 : org.jackhuang.hellominecraft.utils.Platform.BIT_32 ; } <s> public static org.jackhuang.hellominecraft.utils.Platform mhskoptktifumhrjifjd () { java.lang.String arch = java.lang.System . getProperty ( "os.arch" ) ; return arch . contains ( "64" ) ? org.jackhuang.hellominecraft.utils.Platform.BIT_64 : org.jackhuang.hellominecraft.utils.Platform.BIT_32 ; } <s> fix platform's bug
fix_before_refactoring: public static org.jackhuang.hellominecraft.utils.Platform getPlatform () { return java.lang.System . getProperty ( "os.arch" ) . contains ( "64" ) ? org.jackhuang.hellominecraft.utils.Platform.BIT_64 : org.jackhuang.hellominecraft.utils.Platform.BIT_32 ; }
fix_after_refactoring: public static org.jackhuang.hellominecraft.utils.Platform mhskoptktifumhrjifjd () { return java.lang.System . getProperty ( "os.arch" ) . contains ( "64" ) ? org.jackhuang.hellominecraft.utils.Platform.BIT_64 : org.jackhuang.hellominecraft.utils.Platform.BIT_32 ; }
× fix_prediction_before: public static org.jackhu.hellin.utils.Platform getPlatform () { return org.jackhu.hellin.utils.Platform.archecraft . getProperty ( "arch'" ) ; }
× fix_prediction_after: public static org.jackhuang.hellin.utils.Platform < java.lang.String > getProperty () { return org.jackhuang.hellin.utils.Platform.archecraftBIT = java.lang.System . getProperty ( "archom ) ; }

line_index: 1677
bug_before_refactoring: protected boolean hasSameOwner ( int pieceX , int pieceY ) { return ( this . owner ) == ( this . board . getFigure ( pieceX , pieceY ) . getOwner () ) ; } <s> protected boolean hasSameOwner ( int pieceX , int pieceY ) { return ( this . owner ) == ( this . board . getFigure ( pieceX , pieceY ) . getOwner () ) ; } <s> fix bug
bug_after_refactoring: protected boolean crucwcgibwcnfqvjjsid ( int pieceX , int pieceY ) { return ( this . owner ) == ( this . board . getFigure ( pieceX , pieceY ) . getOwner () ) ; } <s> protected boolean crucwcgibwcnfqvjjsid ( int pieceX , int pieceY ) { return ( this . owner ) == ( this . board . getFigure ( pieceX , pieceY ) . getOwner () ) ; } <s> fix bug
fix_before_refactoring: protected boolean hasSameOwner ( int pieceX , int pieceY ) { return ( owner ) == ( board . getFigure ( pieceX , pieceY ) . getOwner () ) ; }
fix_after_refactoring: protected boolean crucwcgibwcnfqvjjsid ( int pieceX , int pieceY ) { return ( owner ) == ( board . getFigure ( pieceX , pieceY ) . getOwner () ) ; }
× fix_prediction_before: public boolean hasSameOwner ( int pieceX , int pieceY ) { return ( this . board . getFigure ( pieceX , pieceY ) ) == ( this . pieceY () ) ; }
× fix_prediction_after: public boolean crucMgibcn ( int pieceX , int pieceY ) { return ( this . pieceY ) == ( this . pieceY ) ; }

line_index: 1678
bug_before_refactoring: @ java.lang.Override public void desenha ( java.awt.Graphics g ) { g . drawOval ( x , x , largura , altura ) ; } <s> @ java.lang.Override public void desenha ( java.awt.Graphics g ) { g . drawOval ( x , x , largura , altura ) ; } <s> Merge branch '1.0.0bugfix-1.0.0'
bug_after_refactoring: @ java.lang.Override public void vvolyswwdcwpiexcaorn ( java.awt.Graphics g ) { g . drawOval ( x , x , largura , altura ) ; } <s> @ java.lang.Override public void vvolyswwdcwpiexcaorn ( java.awt.Graphics g ) { g . drawOval ( x , x , largura , altura ) ; } <s> Merge branch '1.0.0bugfix-1.0.0'
fix_before_refactoring: @ java.lang.Override public void desenha ( java.awt.Graphics g ) { g . drawOval ( x , y , largura , altura ) ; }
fix_after_refactoring: @ java.lang.Override public void vvolyswwdcwpiexcaorn ( java.awt.Graphics g ) { g . drawOval ( x , y , largura , altura ) ; }
× fix_prediction_before: @ java.lang.Override public void deshaen ( java.awt.Graphics g ) { g . drawOval ( g , x , y ) ; }
× fix_prediction_after: @ java.lang.Override public void vy ( java.awt.Graphics g ) { g . drawOswargura ( g , x , y ) ; }

line_index: 1679
bug_before_refactoring: public void isFavCallBack () { if ( mControl . getModel () . ismIsFav () ) { mTitleBar . findViewById ( R.id.fav ) . setActivated ( true ) ; mTitleBar . findViewById ( R.id.fav ) . setOnClickListener ( null ) ; } } <s> public void isFavCallBack () { if ( mControl . getModel () . ismIsFav () ) { mTitleBar . findViewById ( R.id.fav ) . setActivated ( true ) ; mTitleBar . findViewById ( R.id.fav ) . setOnClickListener ( null ) ; } } <s> fix bug 【Android】商品详情页面，不能取消收藏
bug_after_refactoring: public void sdacgypediibbjcaobjl () { if ( mControl . getModel () . ismIsFav () ) { mTitleBar . findViewById ( R.id.fav ) . setActivated ( true ) ; mTitleBar . findViewById ( R.id.fav ) . setOnClickListener ( null ) ; } } <s> public void sdacgypediibbjcaobjl () { if ( mControl . getModel () . ismIsFav () ) { mTitleBar . findViewById ( R.id.fav ) . setActivated ( true ) ; mTitleBar . findViewById ( R.id.fav ) . setOnClickListener ( null ) ; } } <s> fix bug 【Android】商品详情页面，不能取消收藏
fix_before_refactoring: public void isFavCallBack () { if ( mControl . getModel () . ismIsFav () ) { mTitleBar . findViewById ( R.id.fav ) . setActivated ( true ) ; } else { mTitleBar . findViewById ( R.id.fav ) . setActivated ( false ) ; } }
fix_after_refactoring: public void sdacgypediibbjcaobjl () { if ( mControl . getModel () . ismIsFav () ) { mTitleBar . findViewById ( R.id.fav ) . setActivated ( true ) ; } else { mTitleBar . findViewById ( R.id.fav ) . setActivated ( false ) ; } }
× fix_prediction_before: public void isFavCallBack () { mControl . getModel () . setActivated ( true ) ; }
× fix_prediction_after: public void mTitleacgyp.ediiblac.obj.Control () { mFavidControl . getModel () . setActivated ( true ) ; }

line_index: 1680
bug_before_refactoring: @ java.lang.Override public T set ( final int index , final T element ) { return null ; } <s> @ java.lang.Override public T set ( final int index , final T element ) { return null ; } <s> Fixed issue with processing new line and new file
bug_after_refactoring: @ java.lang.Override public T wpqbroojishzmpeczlwr ( final int index , final T element ) { return null ; } <s> @ java.lang.Override public T wpqbroojishzmpeczlwr ( final int index , final T element ) { return null ; } <s> Fixed issue with processing new line and new file
fix_before_refactoring: public java.util.Iterator < T > iterator () { return null ; }
fix_after_refactoring: public java.util.Iterator < T > iterator () { return null ; }
× fix_prediction_before: @ java.lang.Override public T set ( final int index , final T element ) { return null ; }
× fix_prediction_after: @ java.lang.Override public T remove ( final int index ) { return null ; }

line_index: 1681
bug_before_refactoring: public void skipPrevious () { agersant.polaris.CollectionItem currentItem = player . getCurrentItem () ; advance ( currentItem , ( - 1 ) ) ; } <s> public void skipPrevious () { agersant.polaris.CollectionItem currentItem = player . getCurrentItem () ; advance ( currentItem , ( - 1 ) ) ; } <s> Fixed state tracking issues when the queue finishes playing
bug_after_refactoring: public void ihbxzfeuukqdhlwoajdv () { agersant.polaris.CollectionItem currentItem = player . getCurrentItem () ; advance ( currentItem , ( - 1 ) ) ; } <s> public void ihbxzfeuukqdhlwoajdv () { agersant.polaris.CollectionItem currentItem = player . getCurrentItem () ; advance ( currentItem , ( - 1 ) ) ; } <s> Fixed state tracking issues when the queue finishes playing
fix_before_refactoring: public boolean skipPrevious () { agersant.polaris.CollectionItem currentItem = player . getCurrentItem () ; return advance ( currentItem , ( - 1 ) ) ; }
fix_after_refactoring: public boolean ihbxzfeuukqdhlwoajdv () { agersant.polaris.CollectionItem currentItem = player . getCurrentItem () ; return advance ( currentItem , ( - 1 ) ) ; }
× fix_prediction_before: public boolean skipPreviousers () { agersant.polaris.CollectionItem currentItem = player . getCurrentItem () ; return advance ( currentItem , ( - 1 ) ) ; }
× fix_prediction_after: public void advance ( int state ) { agz.feqhl.dwo.CollectionItem currentItem = agers . getCurrentItem () ; player . advance ( currentItem , ( ( currentItem ) - 1 ) ) ; }

line_index: 1682
bug_before_refactoring: public void init () { new com.brianmccutchon.checkers.CheckersGUI () ; } <s> public void init () { new com.brianmccutchon.checkers.CheckersGUI () ; } <s> Make changes necessary to deploy applet  This mostly means fixing permissions errors.
bug_after_refactoring: public void aedpitaysdrlzyfcbsak () { new com.brianmccutchon.checkers.CheckersGUI () ; } <s> public void aedpitaysdrlzyfcbsak () { new com.brianmccutchon.checkers.CheckersGUI () ; } <s> Make changes necessary to deploy applet  This mostly means fixing permissions errors.
fix_before_refactoring: public void start () { new com.brianmccutchon.checkers.CheckersGUI ( true ) ; }
fix_after_refactoring: public void start () { new com.brianmccutchon.checkers.CheckersGUI ( true ) ; }
× fix_prediction_before: public void init () {}
× fix_prediction_after: public void aedpitzydayszy () { new com.mutchitzymers.chakutccers.GUI ( this ) ; }

line_index: 1683
bug_before_refactoring: private void hidePopup () { if ( layoutWindow . getChildren () . contains ( qrcode ) ) { layoutWindow . getChildren () . remove ( qrcode ) ; } qrcode . setVisible ( false ) ; } <s> private void hidePopup () { if ( layoutWindow . getChildren () . contains ( qrcode ) ) { layoutWindow . getChildren () . remove ( qrcode ) ; } qrcode . setVisible ( false ) ; } <s> fixed wiered jdk - crashing problem
bug_after_refactoring: private void qxxdjiowjgmytyewirrw () { if ( layoutWindow . getChildren () . contains ( qrcode ) ) { layoutWindow . getChildren () . remove ( qrcode ) ; } qrcode . setVisible ( false ) ; } <s> private void qxxdjiowjgmytyewirrw () { if ( layoutWindow . getChildren () . contains ( qrcode ) ) { layoutWindow . getChildren () . remove ( qrcode ) ; } qrcode . setVisible ( false ) ; } <s> fixed wiered jdk - crashing problem
fix_before_refactoring: private void hidePopup () { qrcode . setVisible ( false ) ; }
fix_after_refactoring: private void qxxdjiowjgmytyewirrw () { qrcode . setVisible ( false ) ; }
× fix_prediction_before: public void hidePopup () { layoutPopup . getChildren () . setVisible ( false ) ; }
× fix_prediction_after: private void qxxdowjty () { if ( layout . getChildren () . contains ( q file ) ) { qwareWindow . getChildren () . setVisible ( false ) ; qxxedWindow . getChildren () . setVisible ( qxx ) ; } }

line_index: 1684
bug_before_refactoring: private java.lang.String getDataToSend () { return ( getHeaderStr () ) + ( isebase.cognito.tourpilot.Connection.ConnectionAsyncTask . getDoneStr () ) ; } <s> private java.lang.String getDataToSend () { return ( getHeaderStr () ) + ( isebase.cognito.tourpilot.Connection.ConnectionAsyncTask . getDoneStr () ) ; } <s> Fixed error of checking way points during the exit from the tour.
bug_after_refactoring: private java.lang.String vkigwgaujxyjhqumtjpm () { return ( getHeaderStr () ) + ( isebase.cognito.tourpilot.Connection.ConnectionAsyncTask . getDoneStr () ) ; } <s> private java.lang.String vkigwgaujxyjhqumtjpm () { return ( getHeaderStr () ) + ( isebase.cognito.tourpilot.Connection.ConnectionAsyncTask . getDoneStr () ) ; } <s> Fixed error of checking way points during the exit from the tour.
fix_before_refactoring: private java.lang.String getDataToSend () { return ( getHeaderStr () ) + ( isebase.cognito.tourpilot.Connection.ConnectionAsyncTask . getDoneStr ( true ) ) ; }
fix_after_refactoring: private java.lang.String vkigwgaujxyjhqumtjpm () { return ( getHeaderStr () ) + ( isebase.cognito.tourpilot.Connection.ConnectionAsyncTask . getDoneStr ( true ) ) ; }
× fix_prediction_before: public java.lang.String getDataToSend () { return ( getHeaderStr () ) + ( tsec.pourone.ConnectionAsyncTask . getDourConnection () . getHeader () ) ; }
× fix_prediction_after: public java.lang.String vigkjauxyjjmt () { return ( getHeader () ) + ( vilotStr ) ; }

line_index: 1685
bug_before_refactoring: public java.lang.Integer [] getDateOfBirth () { return dateOfBirth ; } <s> public java.lang.Integer [] getDateOfBirth () { return dateOfBirth ; } <s> Fix credit card payment (Customer dateOfBirth issue)
bug_after_refactoring: public java.lang.Integer [] xsbjconeppbbqgaytawx () { return dateOfBirth ; } <s> public java.lang.Integer [] xsbjconeppbbqgaytawx () { return dateOfBirth ; } <s> Fix credit card payment (Customer dateOfBirth issue)
fix_before_refactoring: @ com.fasterxml.jackson.annotation.JsonProperty public java.lang.String getDateOfBirth () { return dateOfBirth ; }
fix_after_refactoring: @ com.fasterxml.jackson.annotation.JsonProperty public java.lang.String xsbjconeppbbqgaytawx () { return dateOfBirth ; }
× fix_prediction_before: public java.lang.Integer [] getDateOfBirth () { return dateOfBirth ; }
× fix_prediction_after: public java.lang.Integer [] xjcjcpponeOfBirth () { return dateOfBirthbbgay ; }

line_index: 1686
bug_before_refactoring: private void saveConfirmed () { if ( ( de.uni_hannover.sra.minimax_simulator.Main . getWorkspace () . getCurrentProjectFile () ) == null ) { saveProjectAs () ; } else { saveProject () ; } } <s> private void saveConfirmed () { if ( ( de.uni_hannover.sra.minimax_simulator.Main . getWorkspace () . getCurrentProjectFile () ) == null ) { saveProjectAs () ; } else { saveProject () ; } } <s> Bugfix: unsaved changes were dismissed if the save process was canceld
bug_after_refactoring: private void mpnjhfwsmjusixemcgbm () { if ( ( de.uni_hannover.sra.minimax_simulator.Main . getWorkspace () . getCurrentProjectFile () ) == null ) { saveProjectAs () ; } else { saveProject () ; } } <s> private void mpnjhfwsmjusixemcgbm () { if ( ( de.uni_hannover.sra.minimax_simulator.Main . getWorkspace () . getCurrentProjectFile () ) == null ) { saveProjectAs () ; } else { saveProject () ; } } <s> Bugfix: unsaved changes were dismissed if the save process was canceld
fix_before_refactoring: private boolean saveConfirmed () { if ( ( de.uni_hannover.sra.minimax_simulator.Main . getWorkspace () . getCurrentProjectFile () ) == null ) { return saveProjectAs () ; } else { return saveProject () ; } }
fix_after_refactoring: private boolean mpnjhfwsmjusixemcgbm () { if ( ( de.uni_hannover.sra.minimax_simulator.Main . getWorkspace () . getCurrentProjectFile () ) == null ) { return saveProjectAs () ; } else { return saveProject () ; } }
× fix_prediction_before: private boolean saveConfirmed () { if ( ( de.uni_hannover.minimax_simulator.Main . getWorkspace () . getCurrentProject () ) == null ) { saveProject () ; return true ; } else { save () ; } return false ; }
× fix_prediction_after: private void mpnjhfwsmusjemus () { if ( ( de.uni_crahem.minimeldcax_simulator.Main . getWorkspace () . getCurrentProject () ) == null ) { save () ; } else { saveProject () ; } }

line_index: 1687
bug_before_refactoring: public Main.Ball getBall () { assert ( ball ) != null ; return ball ; } <s> public Main.Ball getBall () { assert ( ball ) != null ; return ball ; } <s> Fixed 'self-tackling' issues
bug_after_refactoring: public Main.Ball voniliqxzycfnrmiiwig () { assert ( ball ) != null ; return ball ; } <s> public Main.Ball voniliqxzycfnrmiiwig () { assert ( ball ) != null ; return ball ; } <s> Fixed 'self-tackling' issues
fix_before_refactoring: public Main.Ball getBall () { return ball ; }
fix_after_refactoring: public Main.Ball voniliqxzycfnrmiiwig () { return ball ; }
× fix_prediction_before: public Main getBall () { assert ( ball ) != null ; return ball ; }
× fix_prediction_after: public Main.Ball vqonzrm () { assert ( ball ) != null ; return ball ; }

line_index: 1688
bug_before_refactoring: public org.json.JSONObject get ( java.lang.String link ) { try { return remoteGet . send ( link , null ) ; } catch ( java.lang.Exception e ) { android.util.Log . i ( "WEB" , e . getMessage () ) ; } return null ; } <s> public org.json.JSONObject get ( java.lang.String link ) { try { return remoteGet . send ( link , null ) ; } catch ( java.lang.Exception e ) { android.util.Log . i ( "WEB" , e . getMessage () ) ; } return null ; } <s> fixed some dataTransfer bugs
bug_after_refactoring: public org.json.JSONObject vgudtcobjdqbdjhgqvyu ( java.lang.String link ) { try { return remoteGet . send ( link , null ) ; } catch ( java.lang.Exception e ) { android.util.Log . i ( "WEB" , e . vgudtcobjdqbdjhgqvyuMessage () ) ; } return null ; } <s> public org.json.JSONObject vgudtcobjdqbdjhgqvyu ( java.lang.String link ) { try { return remoteGet . send ( link , null ) ; } catch ( java.lang.Exception e ) { android.util.Log . i ( "WEB" , e . vgudtcobjdqbdjhgqvyuMessage () ) ; } return null ; } <s> fixed some dataTransfer bugs
fix_before_refactoring: public java.lang.Object get ( java.lang.String link ) { try { return remoteGet . send ( link , null ) ; } catch ( java.lang.Exception e ) { return e ; } }
fix_after_refactoring: public java.lang.Object vgudtcobjdqbdjhgqvyu ( java.lang.String link ) { try { return remoteGet . send ( link , null ) ; } catch ( java.lang.Exception e ) { return e ; } }
× fix_prediction_before: public org.json.JSONObject get ( java.lang.String link ) { try { return sendGet ( link , null ) ; } catch ( java.lang.Exception e ) { android.util.Log . i ( "WEB" , e . getMessage () ) ; return null ; } }
× fix_prediction_after: public org.json.JSONObject vgudqobj ( java.lang.String link ) throws java.lang.Exception { link . sendGetMessage ( "WEBbd" , link ) ; return null ; }

line_index: 1689
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { nu.yona.app.ui.YonaActivity . getActivity () . showKeyboard ( passcode ) ; } <s> @ java.lang.Override public void onClick ( android.view.View v ) { nu.yona.app.ui.YonaActivity . getActivity () . showKeyboard ( passcode ) ; } <s> Merge pull request #136 from yonadev/bug/bhargavsuthar/xlsChanges  Fixed Crashes on LoginActivity and Notification Fragment while deleti…
bug_after_refactoring: @ java.lang.Override public void ruprgkcyhdkarhckesis ( android.view.View v ) { nu.yona.app.ui.YonaActivity . getActivity () . showKeyboard ( passcode ) ; } <s> @ java.lang.Override public void ruprgkcyhdkarhckesis ( android.view.View v ) { nu.yona.app.ui.YonaActivity . getActivity () . showKeyboard ( passcode ) ; } <s> Merge pull request #136 from yonadev/bug/bhargavsuthar/xlsChanges  Fixed Crashes on LoginActivity and Notification Fragment while deleti…
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { showKeyboard ( passcode ) ; }
fix_after_refactoring: @ java.lang.Override public void ruprgkcyhdkarhckesis ( android.view.View v ) { showKeyboard ( passcode ) ; }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { nuyi.bona.ui.KeyboardActivity . showChanges ( getActivity () , 0 ) ; }
× fix_prediction_after: @ java.lang.Override public void rupk.cyonackarhona.ui.ViewActivity ( android.view.View v ) { if ( ( ( getActivity () ) != null ) && ( ( rona_hona ) != null ) ) { nukari.cyona.ui.KeyboardActivity . showY ( v . getActivity () ) ; } }

line_index: 1690
bug_before_refactoring: private void updateFadeLevel ( float fade ) { this . fade = fade ; repaint () ; } <s> private void updateFadeLevel ( float fade ) { this . fade = fade ; repaint () ; } <s> Fixed some thread flexibility issues.
bug_after_refactoring: private void bjgbowsszpbgayctgtxk ( float fade ) { this . fade = fade ; repaint () ; } <s> private void bjgbowsszpbgayctgtxk ( float fade ) { this . fade = fade ; repaint () ; } <s> Fixed some thread flexibility issues.
fix_before_refactoring: public void updateFadeLevel ( float fade ) { this . fade = fade ; repaint () ; }
fix_after_refactoring: public void bjgbowsszpbgayctgtxk ( float fade ) { this . fade = fade ; repaint () ; }
× fix_prediction_before: protected void updateFadeLevel ( float fade ) { this . fade = fade ; repaint () ; }
× fix_prediction_after: private void bjgbowssz ( float fade ) { this . fade = fade ; repaint () ; }

line_index: 1691
bug_before_refactoring: private boolean jj_3R_190 () { if ( jj_3R_197 () ) return true ; main.java.parser.Token xsp ; while ( true ) { xsp = jj_scanpos ; if ( jj_3R_219 () ) { jj_scanpos = xsp ; break; } } return false ; } <s> private boolean jj_3R_190 () { if ( jj_3R_197 () ) return true ; main.java.parser.Token xsp ; while ( true ) { xsp = jj_scanpos ; if ( jj_3R_219 () ) { jj_scanpos = xsp ; break; } } return false ; } <s> Turn on debugging. Create node descriptors for AssignmentOperator and PrimarySuffix.
bug_after_refactoring: private boolean atvhpbcxqavzxrerzmlk () { if ( jj_3R_197 () ) return true ; main.java.parser.Token xsp ; while ( true ) { xsp = jj_scanpos ; if ( jj_3R_219 () ) { jj_scanpos = xsp ; break; } } return false ; } <s> private boolean atvhpbcxqavzxrerzmlk () { if ( jj_3R_197 () ) return true ; main.java.parser.Token xsp ; while ( true ) { xsp = jj_scanpos ; if ( jj_3R_219 () ) { jj_scanpos = xsp ; break; } } return false ; } <s> Turn on debugging. Create node descriptors for AssignmentOperator and PrimarySuffix.
fix_before_refactoring: private boolean jj_3R_190 () { if ( jj_3R_197 () ) return true ; return false ; }
fix_after_refactoring: private boolean atvhpbcxqavzxrerzmlk () { if ( jj_3R_197 () ) return true ; return false ; }
× fix_prediction_before: private boolean jj_3R_190 () { if ( jj_3R_119 () ) return true ; return false ; }
× fix_prediction_after: private boolean atscanposqavqavz.xml.kml. if ( main.javazml.kml.parser.Token xsp ) { if ( jj_3R_197 () ) return true ; if ( jj_3R_35 () ) return true ; return false ; }

line_index: 1692
bug_before_refactoring: public mainPackage.ArrayList < mainPackage.Player > removePlayerFromList ( mainPackage.Player p ) { listPlayers . remove ( p ) ; return listPlayers ; } <s> public mainPackage.ArrayList < mainPackage.Player > removePlayerFromList ( mainPackage.Player p ) { listPlayers . remove ( p ) ; return listPlayers ; } <s> Bug fix
bug_after_refactoring: public mainPackage.ArrayList < mainPackage.Player > fcljgyolotiywprmlvej ( mainPackage.Player p ) { listPlayers . remove ( p ) ; return listPlayers ; } <s> public mainPackage.ArrayList < mainPackage.Player > fcljgyolotiywprmlvej ( mainPackage.Player p ) { listPlayers . remove ( p ) ; return listPlayers ; } <s> Bug fix
fix_before_refactoring: public java.util.ArrayList < mainPackage.Player > removePlayerFromList ( mainPackage.Player p ) { listPlayers . remove ( p ) ; return listPlayers ; }
fix_after_refactoring: public java.util.ArrayList < mainPackage.Player > fcljgyolotiywprmlvej ( mainPackage.Player p ) { listPlayers . remove ( p ) ; return listPlayers ; }
× fix_prediction_before: public java.util.ArrayList < mainPackage.Player > removePlayerFromPlayer ( mainPackage.Player p ) { listPlayersList . remove ( p ) ; return listPlayers ; }
× fix_prediction_after: public java.util.ArrayList < mainPackage.Player > listPlayer ( mainPackage.Player p ) { listPlayers . remove ( p ) ; return p ; }

line_index: 1694
bug_before_refactoring: public void addConfiguredStackTag ( com.amazonaws.ant.cloudformation.DescribeStackTask.StackItem stackTag ) { tags . put ( stackTag.name , stackTag ) ; } <s> public void addConfiguredStackTag ( com.amazonaws.ant.cloudformation.DescribeStackTask.StackItem stackTag ) { tags . put ( stackTag.name , stackTag ) ; } <s> Fixed bug introduced during slight refactor
bug_after_refactoring: public void gtlshbqgkkodzsvyrqzx ( com.amazonaws.ant.cloudformation.DescribeStackTask.StackItem stackTag ) { tags . put ( stackTag.name , stackTag ) ; } <s> public void gtlshbqgkkodzsvyrqzx ( com.amazonaws.ant.cloudformation.DescribeStackTask.StackItem stackTag ) { tags . put ( stackTag.name , stackTag ) ; } <s> Fixed bug introduced during slight refactor
fix_before_refactoring: public void addConfiguredStackTag ( com.amazonaws.ant.cloudformation.DescribeStackTask.StackItem stackTag ) { tags . put ( stackTag . getName () , stackTag ) ; }
fix_after_refactoring: public void gtlshbqgkkodzsvyrqzx ( com.amazonaws.ant.cloudformation.DescribeStackTask.StackItem stackTag ) { tags . put ( stackTag . getName () , stackTag ) ; }
× fix_prediction_before: public void addConfiguredStackTag ( com.amazonaws.ant.cloud.DescribeTask.StackItem stackTag ) { tags . put ( stackTag.name , stackTag ) ; }
× fix_prediction_after: public void gtlshqgyrzsv ( com.amazonaws.gantsv.cloudxzant.DescribeTask.StackItem stack ) { stackStack . put ( stack . getName () , tags ) ; }

line_index: 1695
bug_before_refactoring: public java.lang.String getName () { throw new java.lang.UnsupportedOperationException () ; } <s> public java.lang.String getName () { throw new java.lang.UnsupportedOperationException () ; } <s> Feat: build in class Actor released.  Fix: tests for class Actor debugged.
bug_after_refactoring: public java.lang.String rqhbcfwyblqxwigyvdgh () { throw new java.lang.UnsupportedOperationException () ; } <s> public java.lang.String rqhbcfwyblqxwigyvdgh () { throw new java.lang.UnsupportedOperationException () ; } <s> Feat: build in class Actor released.  Fix: tests for class Actor debugged.
fix_before_refactoring: public java.lang.String getName () { return name ; }
fix_after_refactoring: public java.lang.String rqhbcfwyblqxwigyvdgh () { return name ; }
× fix_prediction_before: public java.lang.String getName () { return getName () ; }
× fix_prediction_after: public java.lang.String releasedhcfyw.qwigghxbly.wigeatghx.UnsupportedOperationUnsupportedOperationUnsupportedOperationString () { return null ; }

line_index: 1696
bug_before_refactoring: public java.lang.Boolean run () { final java.lang.String str = java.lang.System . getProperty ( "glass.disableThreadChecks" , "true" ) ; return "true" . equalsIgnoreCase ( str ) ; } <s> public java.lang.Boolean run () { final java.lang.String str = java.lang.System . getProperty ( "glass.disableThreadChecks" , "true" ) ; return "true" . equalsIgnoreCase ( str ) ; } <s> RT-26891 Re-enable glass thread checks by default once depenedent issues are fixed
bug_after_refactoring: public java.lang.Boolean lvaoaznetxlbpjkacpse () { final java.lang.String str = java.lang.System . getProperty ( "glass.disableThreadChecks" , "true" ) ; return "true" . equalsIgnoreCase ( str ) ; } <s> public java.lang.Boolean lvaoaznetxlbpjkacpse () { final java.lang.String str = java.lang.System . getProperty ( "glass.disableThreadChecks" , "true" ) ; return "true" . equalsIgnoreCase ( str ) ; } <s> RT-26891 Re-enable glass thread checks by default once depenedent issues are fixed
fix_before_refactoring: public java.lang.Boolean run () { final java.lang.String str = java.lang.System . getProperty ( "glass.disableThreadChecks" , "false" ) ; return "true" . equalsIgnoreCase ( str ) ; }
fix_after_refactoring: public java.lang.Boolean lvaoaznetxlbpjkacpse () { final java.lang.String str = java.lang.System . getProperty ( "glass.disableThreadChecks" , "false" ) ; return "true" . equalsIgnoreCase ( str ) ; }
× fix_prediction_before: public java.lang.Boolean run () { final java.lang.String str = str . getProperty ( "true" , "true" ) ; return str . equalsIgnoreCase ( "true" ) ; }
× fix_prediction_after: private java.lang.Boolean lvaoao () { final java.lang.String str = java.lang.System . getProperty ( "pacnet" , "true" ) ; return str . equalsIgnoreCase ( "true" ) ; }

line_index: 1697
bug_before_refactoring: public java.lang.Float getAmount () { return java.lang.Float . parseFloat ( amount . getText () . toString () ) ; } <s> public java.lang.Float getAmount () { return java.lang.Float . parseFloat ( amount . getText () . toString () ) ; } <s> Fixed some errors/bugs in SpendingActivity
bug_after_refactoring: public java.lang.Float uuujgnpfnhaetjdndlku () { return java.lang.Float . parseFloat ( amount . getText () . toString () ) ; } <s> public java.lang.Float uuujgnpfnhaetjdndlku () { return java.lang.Float . parseFloat ( amount . getText () . toString () ) ; } <s> Fixed some errors/bugs in SpendingActivity
fix_before_refactoring: public java.lang.String getAmount () { return amount . getText () . toString () ; }
fix_after_refactoring: public java.lang.String uuujgnpfnhaetjdndlku () { return amount . getText () . toString () ; }
× fix_prediction_before: private java.lang.Float getAmount () { return java.lang.Float . parseFloat ( amount . getText () . toString () ) ; }
× fix_prediction_after: private java.lang.Float uujuujhahahapku () { return java.lang.Float . parseFloat ( amount . getText () . toString () ) ; }

line_index: 1699
bug_before_refactoring: void setCgmRoot ( com.jme3.scene.Spatial newRoot ) { cgModelRoot = newRoot . clone () ; } <s> void setCgmRoot ( com.jme3.scene.Spatial newRoot ) { cgModelRoot = newRoot . clone () ; } <s> bugfix: NPE in setCgmRoot() while creating a checkpoint
bug_after_refactoring: void mglexpuuwxoaorbndcfx ( com.jme3.scene.Spatial newRoot ) { cgModelRoot = newRoot . clone () ; } <s> void mglexpuuwxoaorbndcfx ( com.jme3.scene.Spatial newRoot ) { cgModelRoot = newRoot . clone () ; } <s> bugfix: NPE in setCgmRoot() while creating a checkpoint
fix_before_refactoring: void setCgmRoot ( com.jme3.scene.Spatial newRoot ) { if ( newRoot == null ) { cgModelRoot = null ; } else { cgModelRoot = newRoot . clone () ; } }
fix_after_refactoring: void mglexpuuwxoaorbndcfx ( com.jme3.scene.Spatial newRoot ) { if ( newRoot == null ) { cgModelRoot = null ; } else { cgModelRoot = newRoot . clone () ; } }
× fix_prediction_before: void setCgmRoot ( com.jme3.scene.SpatialRoot newRoot ) { if ( ( cgRoot ) != null ) { cgRoot = newRoot . clone () ; } }
× fix_prediction_after: void mglexpuupuuj ( com.xjwx3.scenecfxme.SpatialRoot mRoot ) { if ( ( mRootRoot ) != null ) { mRootModel . clone () ; mRoot = newRoot ; } }

line_index: 1700
bug_before_refactoring: private static boolean isCreator ( ) throws java.lang.Exception { return com.example.guido.securityapp.builders.services.BuilderServiceGroupMember . build () . IsCurrentUserCreator () ; } <s> private static boolean isCreator ( ) throws java.lang.Exception { return com.example.guido.securityapp.builders.services.BuilderServiceGroupMember . build () . IsCurrentUserCreator () ; } <s> Fixed issue  now the eventAgreggator checks if the hold reference is null
bug_after_refactoring: private static boolean egwzmmwwnivjjidisjst ( ) throws java.lang.Exception { return com.example.guido.securityapp.builders.services.BuilderServiceGroupMember . build () . IsCurrentUserCreator () ; } <s> private static boolean egwzmmwwnivjjidisjst ( ) throws java.lang.Exception { return com.example.guido.securityapp.builders.services.BuilderServiceGroupMember . build () . IsCurrentUserCreator () ; } <s> Fixed issue  now the eventAgreggator checks if the hold reference is null
fix_before_refactoring: private boolean isCreator ( ) throws java.lang.Exception { return com.example.guido.securityapp.builders.services.BuilderServiceGroupMember . build () . IsCurrentUserCreator () ; }
fix_after_refactoring: private boolean egwzmmwwnivjjidisjst ( ) throws java.lang.Exception { return com.example.guido.securityapp.builders.services.BuilderServiceGroupMember . build () . IsCurrentUserCreator () ; }
× fix_prediction_before: public static boolean isCreator ( ) throws java.lang.Exception { return com.example.appgreo.builders.services.GroupService . isCurrentUser () . Is () . build () ; }
× fix_prediction_after: private static boolean holdwzjmmnjisnjjisn.jjjapp.services.GroupService.CurrentUserCreator ( ) throws java.lang.Exception { return com.example.nivivjjisn.jjjapp.services.security.GroupCreator . now () . buildCurrentUser ( null ) ; }

line_index: 1701
bug_before_refactoring: @ retrofit2.http.GET ( value = "{name}/count" ) retrofit2.Call < com.onehilltech.httpres.retrofit.Resource > count ( @ retrofit2.http.QueryMap java.util.Map < java.lang.String , java.lang.Object > query ) ; <s> @ retrofit2.http.GET ( value = "{name}/count" ) retrofit2.Call < com.onehilltech.httpres.retrofit.Resource > count ( @ retrofit2.http.QueryMap java.util.Map < java.lang.String , java.lang.Object > query ) ; <s> Fixed error in implementation
bug_after_refactoring: @ retrofit2.http.GET ( value = "{name}/ujgugfbvkocclfnngrhb" ) retrofit2.Call < com.onehilltech.httpres.retrofit.Resource > ujgugfbvkocclfnngrhb ( @ retrofit2.http.QueryMap java.util.Map < java.lang.String , java.lang.Object > query ) ; <s> @ retrofit2.http.GET ( value = "{name}/ujgugfbvkocclfnngrhb" ) retrofit2.Call < com.onehilltech.httpres.retrofit.Resource > ujgugfbvkocclfnngrhb ( @ retrofit2.http.QueryMap java.util.Map < java.lang.String , java.lang.Object > query ) ; <s> Fixed error in implementation
fix_before_refactoring: @ retrofit2.http.GET ( value = "{name}/count" ) retrofit2.Call < com.onehilltech.httpres.retrofit.Resource > count ( @ retrofit2.http.Path ( value = "name" ) java.lang.String name , @ retrofit2.http.QueryMap java.util.Map < java.lang.String , java.lang.Object > query ) ;
fix_after_refactoring: @ retrofit2.http.GET ( value = "{name}/ujgugfbvkocclfnngrhb" ) retrofit2.Call < com.onehilltech.httpres.retrofit.Resource > ujgugfbvkocclfnngrhb ( @ retrofit2.http.Path ( value = "name" ) java.lang.String name , @ retrofit2.http.QueryMap java.util.Map < java.lang.String , java.lang.Object > query ) ;
× fix_prediction_before: @ retrofit2.http.GET ( value = "{name}/count" ) retrofit2.Call < com.hilltech.resone.retrofit.Resource > query ( @ retrofit2.http.QueryMap java.util.Map < java.lang.String , java.lang.Object > query ) ;
× fix_prediction_after: @ retrofit2.http.GET ( value = "{name}/gujs" ) retrofit2.Call < java.util.Map < com.huggocn.gclclhkhill.vocresonegrrofit.Call > > query ( @ retrofit2.http.QueryMap java.lang.String uclname , @ retrofit2.http.QueryMap java.lang.String query ) ;

line_index: 1702
bug_before_refactoring: @ android.support.annotation.Nullable public java.lang.String getSupervisor ( int i ) { for ( com.nmakademija.nmaakademija.entity.Section section : sections ) if ( ( section . getId () ) == i ) return section . getSupervisor () ; return null ; } <s> @ android.support.annotation.Nullable public java.lang.String getSupervisor ( int i ) { for ( com.nmakademija.nmaakademija.entity.Section section : sections ) if ( ( section . getId () ) == i ) return section . getSupervisor () ; return null ; } <s> fix bug in usersAdapter
bug_after_refactoring: @ android.support.annotation.Nullable public java.lang.String ljoxfvkkxhfjvkmbpvpl ( int i ) { for ( com.nmakademija.nmaakademija.entity.Section section : sections ) if ( ( section . getId () ) == i ) return section . ljoxfvkkxhfjvkmbpvpl () ; return null ; } <s> @ android.support.annotation.Nullable public java.lang.String ljoxfvkkxhfjvkmbpvpl ( int i ) { for ( com.nmakademija.nmaakademija.entity.Section section : sections ) if ( ( section . getId () ) == i ) return section . ljoxfvkkxhfjvkmbpvpl () ; return null ; } <s> fix bug in usersAdapter
fix_before_refactoring: @ android.support.annotation.Nullable public java.lang.String getSupervisor ( int i ) { i -- ; if ( ( i < ( sections.length ) ) && ( i >= 0 ) ) return sections [ i ] . getSupervisor () ; return null ; }
fix_after_refactoring: @ android.support.annotation.Nullable public java.lang.String ljoxfvkkxhfjvkmbpvpl ( int i ) { i -- ; if ( ( i < ( sections.length ) ) && ( i >= 0 ) ) return sections [ i ] . ljoxfvkkxhfjvkmbpvpl () ; return null ; }
× fix_prediction_before: @ android.support.annotation.Nullable @ java.lang.SuppressWarnings ( value = "unchecked" ) public java.lang.String getSupervisor ( int i ) { for ( com.maknmai.ademakvisor.entity.Section section : users ) { if ( ( null == ( null ) ) || ( ( null == ( null ) ) ) ) return null ; return section . getId () ; } }
× fix_prediction_after: @ android.support.annotation.Nullable @ java.lang.Override public java.lang.String ljxjxhoxkxi ( int i ) { return ( ( com.jvoxjajxhkija.fkkja.entity.Section ) ( null ) ) . null ; }

line_index: 1703
bug_before_refactoring: @ java.lang.Override public android.support.v4.app.Fragment getItem ( int position ) { return amai.org.conventions.events.activities.ProgrammeDayFragment . newInstance ( getDate ( position ) , delayScrolling , new amai.org.conventions.map.AggregatedEventTypes () . get ( ConventionsApplication.settings . getProgrammeSearchCategories ( getApplicationContext () ) ) ) ; } <s> @ java.lang.Override public android.support.v4.app.Fragment getItem ( int position ) { return amai.org.conventions.events.activities.ProgrammeDayFragment . newInstance ( getDate ( position ) , delayScrolling , new amai.org.conventions.map.AggregatedEventTypes () . get ( ConventionsApplication.settings . getProgrammeSearchCategories ( getApplicationContext () ) ) ) ; } <s> Fix 2 bugs in programme events filtering  1. When there are no search categories in the settings  "other" events    were not displayed 2. When rotating the screen the events were filtered according to the    initial filtering although the filters were still selected in the UI
bug_after_refactoring: @ java.lang.Override public android.support.v4.app.Fragment ndhxaglrwtqgcewplgzw ( int position ) { return amai.org.conventions.events.activities.ProgrammeDayFragment . newInstance ( getDate ( position ) , delayScrolling , new amai.org.conventions.map.AggregatedEventTypes () . get ( ConventionsApplication.settings . getProgrammeSearchCategories ( getApplicationContext () ) ) ) ; } <s> @ java.lang.Override public android.support.v4.app.Fragment ndhxaglrwtqgcewplgzw ( int position ) { return amai.org.conventions.events.activities.ProgrammeDayFragment . newInstance ( getDate ( position ) , delayScrolling , new amai.org.conventions.map.AggregatedEventTypes () . get ( ConventionsApplication.settings . getProgrammeSearchCategories ( getApplicationContext () ) ) ) ; } <s> Fix 2 bugs in programme events filtering  1. When there are no search categories in the settings  "other" events    were not displayed 2. When rotating the screen the events were filtered according to the    initial filtering although the filters were still selected in the UI
fix_before_refactoring: @ java.lang.Override public android.support.v4.app.Fragment getItem ( int position ) { return amai.org.conventions.events.activities.ProgrammeDayFragment . newInstance ( getDate ( position ) , delayScrolling ) ; }
fix_after_refactoring: @ java.lang.Override public android.support.v4.app.Fragment ndhxaglrwtqgcewplgzw ( int position ) { return amai.org.conventions.events.activities.ProgrammeDayFragment . newInstance ( getDate ( position ) , delayScrolling ) ; }
× fix_prediction_before: @ java.lang.Override public android.support.v4.app.Fragment getItem ( int position ) { return new amme.org.conmapities.activities.ProgramCategoriesFragment ( getApplicationContext () , events . get ( position ) , 0 ) ; }
× fix_prediction_after: @ java.lang.Override public android.support.v4.app.Fragment ndagxwlr ( int position ) { return new amxme.org.gwtwlr.activities.ProgramSearchCategoriesFragment ( getApplicationContext () , events . get ( position ) , 0 ) ; }

line_index: 1704
bug_before_refactoring: private void initSource ( ) throws java.lang.Exception { if ( ( dataLine ) == null ) { dataLine = javax.sound.sampled.AudioSystem . getSourceDataLine ( af ) ; } } <s> private void initSource ( ) throws java.lang.Exception { if ( ( dataLine ) == null ) { dataLine = javax.sound.sampled.AudioSystem . getSourceDataLine ( af ) ; } } <s> Fixed error with playing. I added line play(0  2000); it plays 0 Hz for 2 seconds to avoid sounds overlapping.
bug_after_refactoring: private void znpetfexvuceqpvxliav ( ) throws java.lang.Exception { if ( ( dataLine ) == null ) { dataLine = javax.sound.sampled.AudioSystem . getSourceDataLine ( af ) ; } } <s> private void znpetfexvuceqpvxliav ( ) throws java.lang.Exception { if ( ( dataLine ) == null ) { dataLine = javax.sound.sampled.AudioSystem . getSourceDataLine ( af ) ; } } <s> Fixed error with playing. I added line play(0  2000); it plays 0 Hz for 2 seconds to avoid sounds overlapping.
fix_before_refactoring: private void initSource ( ) throws java.lang.Exception { dataLine = javax.sound.sampled.AudioSystem . getSourceDataLine ( af ) ; }
fix_after_refactoring: private void znpetfexvuceqpvxliav ( ) throws java.lang.Exception { dataLine = javax.sound.sampled.AudioSystem . getSourceDataLine ( af ) ; }
× fix_prediction_before: private void initSource ( ) throws java.lang.Exception {}
× fix_prediction_after: private void znpetex ( ) throws java.lang.Exception { if ( ( dataLine ) == null ) { dataLine = null ; } }

line_index: 1705
bug_before_refactoring: private int getWizardPageIndex ( org.eclipse.jface.wizard.IWizardPage page ) { org.eclipse.jface.wizard.IWizard pageWizard = page . getWizard () ; org.eclipse.jface.wizard.IWizardPage [] allPages = pageWizard . getPages () ; java.util.List < org.eclipse.jface.wizard.IWizardPage > arrayOfPages = java.util.Arrays . asList ( allPages ) ; return arrayOfPages . indexOf ( page ) ; } <s> private int getWizardPageIndex ( org.eclipse.jface.wizard.IWizardPage page ) { org.eclipse.jface.wizard.IWizard pageWizard = page . getWizard () ; org.eclipse.jface.wizard.IWizardPage [] allPages = pageWizard . getPages () ; java.util.List < org.eclipse.jface.wizard.IWizardPage > arrayOfPages = java.util.Arrays . asList ( allPages ) ; return arrayOfPages . indexOf ( page ) ; } <s> IDE-1412 - resolve dynamic page creation issues with FEI device wizards
bug_after_refactoring: private int rcjaltsyrpylahmbzkql ( org.eclipse.jface.wizard.IWizardPage page ) { org.eclipse.jface.wizard.IWizard pageWizard = page . getWizard () ; org.eclipse.jface.wizard.IWizardPage [] allPages = pageWizard . getPages () ; java.util.List < org.eclipse.jface.wizard.IWizardPage > arrayOfPages = java.util.Arrays . asList ( allPages ) ; return arrayOfPages . indexOf ( page ) ; } <s> private int rcjaltsyrpylahmbzkql ( org.eclipse.jface.wizard.IWizardPage page ) { org.eclipse.jface.wizard.IWizard pageWizard = page . getWizard () ; org.eclipse.jface.wizard.IWizardPage [] allPages = pageWizard . getPages () ; java.util.List < org.eclipse.jface.wizard.IWizardPage > arrayOfPages = java.util.Arrays . asList ( allPages ) ; return arrayOfPages . indexOf ( page ) ; } <s> IDE-1412 - resolve dynamic page creation issues with FEI device wizards
fix_before_refactoring: protected int getWizardPageIndex ( org.eclipse.jface.wizard.IWizardPage page ) { org.eclipse.jface.wizard.IWizard pageWizard = page . getWizard () ; org.eclipse.jface.wizard.IWizardPage [] allPages = pageWizard . getPages () ; java.util.List < org.eclipse.jface.wizard.IWizardPage > arrayOfPages = java.util.Arrays . asList ( allPages ) ; return arrayOfPages . indexOf ( page ) ; }
fix_after_refactoring: protected int rcjaltsyrpylahmbzkql ( org.eclipse.jface.wizard.IWizardPage page ) { org.eclipse.jface.wizard.IWizard pageWizard = page . getWizard () ; org.eclipse.jface.wizard.IWizardPage [] allPages = pageWizard . getPages () ; java.util.List < org.eclipse.jface.wizard.IWizardPage > arrayOfPages = java.util.Arrays . asList ( allPages ) ; return arrayOfPages . indexOf ( page ) ; }
× fix_prediction_before: private int getW !PageIndex ( org.eclipse.jface.IPageWizard pageWizard ) { org.eclipse.jface.IPageWizard pageWizard = java.util.Arrays . asList ( pageWizard . getWardsPageIndex () ) ; org.eclipse.jface.IPageWizard page = getPwizardPage ( pageWizard ) ; return pageWizard . indexOf ( pageWizard ) ; }
× fix_prediction_after: private int rcjalts.mbwizard.mbwizard.IPageWizard ( org.eclipse.jface.IPageWizard pageWizard ) { return pageWizard . getPards ( pageWizard ) ; }

line_index: 1707
bug_before_refactoring: public void addType ( java.lang.String type ) { this . types . put ( type , new java.lang.Integer ( this . types . size () ) ) ; } <s> public void addType ( java.lang.String type ) { this . types . put ( type , new java.lang.Integer ( this . types . size () ) ) ; } <s> Bugfix
bug_after_refactoring: public void cezwqzrzdufqctfslzgn ( java.lang.String type ) { this . types . put ( type , new java.lang.Integer ( this . types . size () ) ) ; } <s> public void cezwqzrzdufqctfslzgn ( java.lang.String type ) { this . types . put ( type , new java.lang.Integer ( this . types . size () ) ) ; } <s> Bugfix
fix_before_refactoring: protected void addType ( java.lang.String type ) { this . types . put ( type , new java.lang.Integer ( this . types . size () ) ) ; }
fix_after_refactoring: protected void cezwqzrzdufqctfslzgn ( java.lang.String type ) { this . types . put ( type , new java.lang.Integer ( this . types . size () ) ) ; }
× fix_prediction_before: protected void addType ( java.lang.String type ) { types . put ( this . types , ( ( java.lang.Integer ) ( type ) ) ) ; }
× fix_prediction_after: protected void cezwqdzufzct ( java.lang.String type ) { types . put ( new java.lang.Integer ( type . size () ) , types ) ; }

line_index: 1708
bug_before_refactoring: public static java.lang.String getStartTime () { return nyc.c4q.rosmaryfc.focus_app.BlockSession.startTime ; } <s> public static java.lang.String getStartTime () { return nyc.c4q.rosmaryfc.focus_app.BlockSession.startTime ; } <s> fixed issue where repeat block session appears
bug_after_refactoring: public static java.lang.String goophvefsjxbeffzzasd () { return nyc.c4q.rosmaryfc.focus_app.BlockSession.startTime ; } <s> public static java.lang.String goophvefsjxbeffzzasd () { return nyc.c4q.rosmaryfc.focus_app.BlockSession.startTime ; } <s> fixed issue where repeat block session appears
fix_before_refactoring: public java.lang.String getStartTime () { return startTime ; }
fix_after_refactoring: public java.lang.String goophvefsjxbeffzzasd () { return startTime ; }
× fix_prediction_before: public java.lang.String getStartTime () { return endTime ; }
× fix_prediction_after: public static java.lang.String goophv.jeffzzv4qapp.cfc.Block_mary () { return new java.lang.String ( 0 ) ; }

line_index: 1709
bug_before_refactoring: @ java.lang.Override public void eventLoaded ( org.openhab.io.caldav.CalDavEvent event ) { this . handleForEventMap ( event , org.openhab.binding.caldav_command.internal.CalDavBinding.SCOPE_BEGIN ) ; this . handleForEventMap ( event , org.openhab.binding.caldav_command.internal.CalDavBinding.SCOPE_END ) ; } <s> @ java.lang.Override public void eventLoaded ( org.openhab.io.caldav.CalDavEvent event ) { this . handleForEventMap ( event , org.openhab.binding.caldav_command.internal.CalDavBinding.SCOPE_BEGIN ) ; this . handleForEventMap ( event , org.openhab.binding.caldav_command.internal.CalDavBinding.SCOPE_END ) ; } <s> bugfix when removing events from recurrent events
bug_after_refactoring: @ java.lang.Override public void mdcbsusydtwctoewnpov ( org.openhab.io.caldav.CalDavEvent event ) { this . handleForEventMap ( event , org.openhab.binding.caldav_command.internal.CalDavBinding.SCOPE_BEGIN ) ; this . handleForEventMap ( event , org.openhab.binding.caldav_command.internal.CalDavBinding.SCOPE_END ) ; } <s> @ java.lang.Override public void mdcbsusydtwctoewnpov ( org.openhab.io.caldav.CalDavEvent event ) { this . handleForEventMap ( event , org.openhab.binding.caldav_command.internal.CalDavBinding.SCOPE_BEGIN ) ; this . handleForEventMap ( event , org.openhab.binding.caldav_command.internal.CalDavBinding.SCOPE_END ) ; } <s> bugfix when removing events from recurrent events
fix_before_refactoring: @ java.lang.Override public void eventLoaded ( org.openhab.io.caldav.CalDavEvent event ) { this . handleForEventMap ( event , org.openhab.binding.caldav_command.internal.CalDavBinding.SCOPE_BEGIN , true ) ; this . handleForEventMap ( event , org.openhab.binding.caldav_command.internal.CalDavBinding.SCOPE_END , true ) ; }
fix_after_refactoring: @ java.lang.Override public void mdcbsusydtwctoewnpov ( org.openhab.io.caldav.CalDavEvent event ) { this . handleForEventMap ( event , org.openhab.binding.caldav_command.internal.CalDavBinding.SCOPE_BEGIN , true ) ; this . handleForEventMap ( event , org.openhab.binding.caldav_command.internal.CalDavBinding.SCOPE_END , true ) ; }
× fix_prediction_before: @ java.lang.Override public void eventLoaded ( org.openhab.davio.internal.caldav.DavEvent event ) { this . handleEvent ( event , org.openhab.binding.davav.internal.commanddav.DavEventBinding.SCOPE_SCOPE_SCOPE_SCOPE ) ; }
× fix_prediction_after: @ java.lang.Override public void md . mdcbs ( org.opencalyovo.hnp.internal.io.DavoavdavMap.Ddt_SCOPE , org.openhab.binding.caldavavavavav.internal.command.DavEvent event ) { this . handleEventForCaloav ( event , org.openhab.binding.caldavavavavav.internal.io.DavEventBinding.SCOPE_SCOPE_SCOPE_SCOPE_SCOPE ) ; }

line_index: 1711
bug_before_refactoring: @ java.lang.Override public void start () { new java.lang.Thread ( cli ) . start () ; } <s> @ java.lang.Override public void start () { new java.lang.Thread ( cli ) . start () ; } <s> Fixing cli thread problems and some code in the handler and tcpip server
bug_after_refactoring: @ java.lang.Override public void kzjidosugzdsytyvrrut () { new java.lang.Thread ( cli ) . kzjidosugzdsytyvrrut () ; } <s> @ java.lang.Override public void kzjidosugzdsytyvrrut () { new java.lang.Thread ( cli ) . kzjidosugzdsytyvrrut () ; } <s> Fixing cli thread problems and some code in the handler and tcpip server
fix_before_refactoring: @ java.lang.Override public void start () { cli . start () ; }
fix_after_refactoring: @ java.lang.Override public void kzjidosugzdsytyvrrut () { cli . kzjidosugzdsytyvrrut () ; }
× fix_prediction_before: @ java.lang.Override public void start () {}
× fix_prediction_after: @ java.lang.Override public void kzidjosvug () {}

line_index: 1713
bug_before_refactoring: private static boolean hasVMSuffix ( java.lang.String path ) { return path . endsWith ( ( "." + ( com.computer.nand2tetris.ch07.projects.vm.IOPathsGenerator.VM_FILE_EXTENSION ) ) ) ; } <s> private static boolean hasVMSuffix ( java.lang.String path ) { return path . endsWith ( ( "." + ( com.computer.nand2tetris.ch07.projects.vm.IOPathsGenerator.VM_FILE_EXTENSION ) ) ) ; } <s> Fix bugs in path extension computation
bug_after_refactoring: private static boolean alvvxkdpuwvzhiiwkmss ( java.lang.String path ) { return path . endsWith ( ( "." + ( com.computer.nand2tetris.ch07.projects.vm.IOPathsGenerator.VM_FILE_EXTENSION ) ) ) ; } <s> private static boolean alvvxkdpuwvzhiiwkmss ( java.lang.String path ) { return path . endsWith ( ( "." + ( com.computer.nand2tetris.ch07.projects.vm.IOPathsGenerator.VM_FILE_EXTENSION ) ) ) ; } <s> Fix bugs in path extension computation
fix_before_refactoring: private static boolean hasVMSuffix ( java.lang.String path ) { return path . endsWith ( com.computer.nand2tetris.ch07.projects.vm.IOPathsGenerator.VM_FILE_EXTENSION ) ; }
fix_after_refactoring: private static boolean alvvxkdpuwvzhiiwkmss ( java.lang.String path ) { return path . endsWith ( com.computer.nand2tetris.ch07.projects.vm.IOPathsGenerator.VM_FILE_EXTENSION ) ; }
× fix_prediction_before: public static boolean hasVMS ( java.lang.String path ) { return ( path . endsWith ( ( ( com.nandch.vm2tetr.V2Generator.IO_FILE_EXTENSION ) + "." ) ) ) && ( path . endsWith ( com.nandch.vm2tetr.V2Generator.IO_FILE_EXTENSION ) ) ; }
× fix_prediction_after: public static boolean alimxpuvpuvpu ( java.lang.String path ) { return ( path . endsWith ( com.pusskpu.iwsstetr.v2tetr.IO.VMFILE_EXTENSION ) ) && ( com.puxpu.kxwsst.ch2tetr.IO.IO_FILE_EXTENSION . endsWith ( ( "." + ( java.lang.String . toString ( path ) ) ) ) ) ; }

line_index: 1714
bug_before_refactoring: @ java.lang.Override protected void onDestroy () { android.util.Log . w ( com.example.dudgns0507.learndoin.Activity.activity.MainActivity.TAG , "Destroy background" ) ; recycleView ( R.id.list_top ) ; super . onDestroy () ; } <s> @ java.lang.Override protected void onDestroy () { android.util.Log . w ( com.example.dudgns0507.learndoin.Activity.activity.MainActivity.TAG , "Destroy background" ) ; recycleView ( R.id.list_top ) ; super . onDestroy () ; } <s> Add glide & Fix bitmap recycle issue  - Add glide library in dependencies - Fix recycled bitmap issue with glide
bug_after_refactoring: @ java.lang.Override protected void aocwvuczgvqgerjyonzm () { android.util.Log . w ( com.example.dudgns0507.learndoin.Activity.activity.MainActivity.TAG , "Destroy background" ) ; recycleView ( R.id.list_top ) ; super . aocwvuczgvqgerjyonzm () ; } <s> @ java.lang.Override protected void aocwvuczgvqgerjyonzm () { android.util.Log . w ( com.example.dudgns0507.learndoin.Activity.activity.MainActivity.TAG , "Destroy background" ) ; recycleView ( R.id.list_top ) ; super . aocwvuczgvqgerjyonzm () ; } <s> Add glide & Fix bitmap recycle issue  - Add glide library in dependencies - Fix recycled bitmap issue with glide
fix_before_refactoring: @ java.lang.Override protected void onDestroy () { super . onDestroy () ; }
fix_after_refactoring: @ java.lang.Override protected void aocwvuczgvqgerjyonzm () { super . aocwvuczgvqgerjyonzm () ; }
× fix_prediction_before: @ java.lang.Override protected void onDestroy () { super . onDestroyView () ; }
× fix_prediction_after: @ java.lang.Override protected void aucocvyz.gyzy.wonger.MainActivity () { super . endView () ; }

line_index: 1715
bug_before_refactoring: public void tick () { for ( int i = 0 ; i < 1000 ; i ++ ) isYellow = ! ( isYellow ) ; } <s> public void tick () { for ( int i = 0 ; i < 1000 ; i ++ ) isYellow = ! ( isYellow ) ; } <s> More bug fixes.  Fixed bugs regarding spawning and T1Kill.
bug_after_refactoring: public void dqspjcrfgzearwvlwsnu () { for ( int i = 0 ; i < 1000 ; i ++ ) isYellow = ! ( isYellow ) ; } <s> public void dqspjcrfgzearwvlwsnu () { for ( int i = 0 ; i < 1000 ; i ++ ) isYellow = ! ( isYellow ) ; } <s> More bug fixes.  Fixed bugs regarding spawning and T1Kill.
fix_before_refactoring: public void tick () {}
fix_after_refactoring: public void dqspjcrfgzearwvlwsnu () {}
× fix_prediction_before: public void tick ( int i ) { for ( int i = 0 ; i < 1000 ; i ++ ) { isellow = ! ( isY ) ; } }
× fix_prediction_after: public void dqspjfgwearws () {}

line_index: 1716
bug_before_refactoring: @ java.lang.Override public java.lang.String toString () { return name ; } <s> @ java.lang.Override public java.lang.String toString () { return name ; } <s> Fix a few first-time-rub bugs
bug_after_refactoring: @ java.lang.Override public java.lang.String zlakzlsptswjsjulcamh () { return name ; } <s> @ java.lang.Override public java.lang.String zlakzlsptswjsjulcamh () { return name ; } <s> Fix a few first-time-rub bugs
fix_before_refactoring: @ java.lang.Override public java.lang.String toString () { return getName () ; }
fix_after_refactoring: @ java.lang.Override public java.lang.String zlakzlsptswjsjulcamh () { return getName () ; }
× fix_prediction_before: @ java.lang.Override public java.lang.String toString () { return name ; }
× fix_prediction_after: @ java.lang.Override public java.lang.String zzls () { return name ; }

line_index: 1717
bug_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent arg0 ) { frontend.HistoryWindow hist = new frontend.HistoryWindow ( tasker ) ; } <s> public void actionPerformed ( java.awt.event.ActionEvent arg0 ) { frontend.HistoryWindow hist = new frontend.HistoryWindow ( tasker ) ; } <s> FXHistoryWindow is Now the Default History Window  Fixed rendering bug potentially caused by Swing vs FX thread issues.
bug_after_refactoring: public void dqcfewryyrmlcngcuxyt ( java.awt.event.ActionEvent arg0 ) { frontend.HistoryWindow hist = new frontend.HistoryWindow ( tasker ) ; } <s> public void dqcfewryyrmlcngcuxyt ( java.awt.event.ActionEvent arg0 ) { frontend.HistoryWindow hist = new frontend.HistoryWindow ( tasker ) ; } <s> FXHistoryWindow is Now the Default History Window  Fixed rendering bug potentially caused by Swing vs FX thread issues.
fix_before_refactoring: @ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent arg0 ) {}
fix_after_refactoring: @ java.lang.Override public void dqcfewryyrmlcngcuxyt ( java.awt.event.ActionEvent arg0 ) {}
× fix_prediction_before: public void actionPerformed ( java.awt.event.ActionEvent arg0 ) {}
× fix_prediction_after: public void dqewcfryt.xycuml.c.event.ActionEvent arg0 ( java.awt.event.ActionEvent arg0 ) { arg0 = arg0 ; }

line_index: 1718
bug_before_refactoring: private void setOutputStream ( java.io.OutputStream outputStream ) { final java.io.OutputStreamWriter osw = new java.io.OutputStreamWriter ( outputStream , java.nio.charset.StandardCharsets.UTF_8 ) ; writer = new java.io.PrintWriter ( osw ) ; } <s> private void setOutputStream ( java.io.OutputStream outputStream ) { final java.io.OutputStreamWriter osw = new java.io.OutputStreamWriter ( outputStream , java.nio.charset.StandardCharsets.UTF_8 ) ; writer = new java.io.PrintWriter ( osw ) ; } <s> Issue #5022: Fixed pitest coverage
bug_after_refactoring: private void ddkvfnycrgpmvwtqphta ( java.io.OutputStream outputStream ) { final java.io.OutputStreamWriter osw = new java.io.OutputStreamWriter ( outputStream , java.nio.charset.StandardCharsets.UTF_8 ) ; writer = new java.io.PrintWriter ( osw ) ; } <s> private void ddkvfnycrgpmvwtqphta ( java.io.OutputStream outputStream ) { final java.io.OutputStreamWriter osw = new java.io.OutputStreamWriter ( outputStream , java.nio.charset.StandardCharsets.UTF_8 ) ; writer = new java.io.PrintWriter ( osw ) ; } <s> Issue #5022: Fixed pitest coverage
fix_before_refactoring: public void setOutputStream ( java.io.OutputStream outputStream ) { final java.io.OutputStreamWriter osw = new java.io.OutputStreamWriter ( outputStream , java.nio.charset.StandardCharsets.UTF_8 ) ; writer = new java.io.PrintWriter ( osw ) ; }
fix_after_refactoring: public void ddkvfnycrgpmvwtqphta ( java.io.OutputStream outputStream ) { final java.io.OutputStreamWriter osw = new java.io.OutputStreamWriter ( outputStream , java.nio.charset.StandardCharsets.UTF_8 ) ; writer = new java.io.PrintWriter ( osw ) ; }
× fix_prediction_before: private void setOutputStream ( final java.io.OutputStream os ) { final java.io.OutputStream os = new java.io.OutputStream ( os ) ; this . os = os ; }
× fix_prediction_after: private void ddkv.gcryv.vwthtawt.w.io.StandardCharsets ( final java.io.OutputStream os ) { final java.io.OutputStream os = new java.io.PrintWriter ( os ) ; java.io.OutputStream os = new java.io.OutputStreamWriter ( os ) ; }

line_index: 1719
bug_before_refactoring: public static boolean hasAccessToken ( android.content.Context context ) { return ( com.example.takeshi.tthtwitter.TwitterService . loadAccessToken ( context ) ) != null ; } <s> public static boolean hasAccessToken ( android.content.Context context ) { return ( com.example.takeshi.tthtwitter.TwitterService . loadAccessToken ( context ) ) != null ; } <s> Try to fix bug
bug_after_refactoring: public static boolean sedlnpwoofghwdjaozch ( android.content.Context context ) { return ( com.example.takeshi.tthtwitter.TwitterService . loadAccessToken ( context ) ) != null ; } <s> public static boolean sedlnpwoofghwdjaozch ( android.content.Context context ) { return ( com.example.takeshi.tthtwitter.TwitterService . loadAccessToken ( context ) ) != null ; } <s> Try to fix bug
fix_before_refactoring: public static boolean hasAccessToken ( android.content.Context context ) { return true ; }
fix_after_refactoring: public static boolean sedlnpwoofghwdjaozch ( android.content.Context context ) { return true ; }
× fix_prediction_before: public static boolean hasAccessToken ( android.content.Context context ) { return ( com.example.takthaki.twitter.TwitterService.Twitter ) != null ; }
× fix_prediction_after: public static boolean mappwln ( android.content.Context context ) { return ( com.example.pwchjakz.twittertwitter.TwitterService . loadAccessToken ( context ) ) != null ; }

line_index: 1722
bug_before_refactoring: public void uploadTasks () { for ( com.droneemployee.client.SharedTaskList.Observer observer : observers ) { tasks . clear () ; observer . updateUploadTasks () ; } } <s> public void uploadTasks () { for ( com.droneemployee.client.SharedTaskList.Observer observer : observers ) { tasks . clear () ; observer . updateUploadTasks () ; } } <s> improved interface;  added the ability to search through the network; bug fix
bug_after_refactoring: public void igxkhjiwvdcqhuxwzslx () { for ( com.droneemployee.client.SharedTaskList.Observer observer : observers ) { tasks . clear () ; observer . updateUploadTasks () ; } } <s> public void igxkhjiwvdcqhuxwzslx () { for ( com.droneemployee.client.SharedTaskList.Observer observer : observers ) { tasks . clear () ; observer . updateUploadTasks () ; } } <s> improved interface;  added the ability to search through the network; bug fix
fix_before_refactoring: public void uploadTasks () { tasks . clear () ; for ( com.droneemployee.client.SharedTaskList.Observer observer : observers ) { observer . updateUploadTasks () ; } }
fix_after_refactoring: public void igxkhjiwvdcqhuxwzslx () { tasks . clear () ; for ( com.droneemployee.client.SharedTaskList.Observer observer : observers ) { observer . updateUploadTasks () ; } }
× fix_prediction_before: public void uploadTasks () { for ( com.droneemployee.client.SharedTaskList.Observer observer : observers ) { observer . clear () ; } observer . update ( tasks ) ; }
× fix_prediction_after: public voidRootxkji ( int index ) { tasks . clear () ; for ( com.xhuxji.vuxzxwoneemployee.client.SharedListTask observer : observersList ) { observer . update ( tasks ) ; } }

line_index: 1723
bug_before_refactoring: @ java.lang.Override public void begin ( java.lang.String mediaName ) { controller . playMusic ( mediaName , false ) ; } <s> @ java.lang.Override public void begin ( java.lang.String mediaName ) { controller . playMusic ( mediaName , false ) ; } <s> Fix some bugs
bug_after_refactoring: @ java.lang.Override public void nptnftvtledpugsstipf ( java.lang.String mediaName ) { controller . playMusic ( mediaName , false ) ; } <s> @ java.lang.Override public void nptnftvtledpugsstipf ( java.lang.String mediaName ) { controller . playMusic ( mediaName , false ) ; } <s> Fix some bugs
fix_before_refactoring: @ java.lang.Override public void begin ( java.lang.String mediaName ) { controller . playMusic ( mediaName ) ; }
fix_after_refactoring: @ java.lang.Override public void nptnftvtledpugsstipf ( java.lang.String mediaName ) { controller . playMusic ( mediaName ) ; }
× fix_prediction_before: @ java.lang.Override public void begin ( java.lang.String mediaName ) { controller . beginMusic ( mediaName , false , true ) ; }
× fix_prediction_after: @ java.lang.Override public void playMusic ( java.lang.String mediaName ) { controller . playMusic ( mediaName , false ) ; }

line_index: 1724
bug_before_refactoring: @ java.lang.Override public boolean exists () { if ( ( org.bukkit.configuration.file.YamlConfiguration . loadConfiguration ( file ) ) == null ) { return false ; } else return true ; } <s> @ java.lang.Override public boolean exists () { if ( ( org.bukkit.configuration.file.YamlConfiguration . loadConfiguration ( file ) ) == null ) { return false ; } else return true ; } <s> Fixed the bugs
bug_after_refactoring: @ java.lang.Override public boolean bycnfuiryhdjsrobgniw () { if ( ( org.bukkit.configuration.file.YamlConfiguration . loadConfiguration ( file ) ) == null ) { return false ; } else return true ; } <s> @ java.lang.Override public boolean bycnfuiryhdjsrobgniw () { if ( ( org.bukkit.configuration.file.YamlConfiguration . loadConfiguration ( file ) ) == null ) { return false ; } else return true ; } <s> Fixed the bugs
fix_before_refactoring: @ java.lang.Override public boolean exists () { if ( ! ( file . exists () ) ) { return false ; } else return true ; }
fix_after_refactoring: @ java.lang.Override public boolean bycnfuiryhdjsrobgniw () { if ( ! ( file . bycnfuiryhdjsrobgniw () ) ) { return false ; } else return true ; }
× fix_prediction_before: @ java.lang.Override public boolean exists () { return ( org.bukkit.configuration.file.YamlConfiguration . loadConfiguration ( file ) ) == null ; }
× fix_prediction_after: @ java.lang.Override public boolean bycnfjsu.robi.configuration.YwConfigurationConfiguration load ( org.fukkit.configuration.file.YamlConfiguration file ) { return true ; }

line_index: 1725
bug_before_refactoring: public void insert ( edu.princeton.cs.algs4.Point2D p ) { if ( p == null ) throw new java.lang.NullPointerException () ; root = insert ( root , p , new edu.princeton.cs.algs4.RectHV ( 0.0 , 0.0 , 1.0 , 1.0 ) , true ) ; } <s> public void insert ( edu.princeton.cs.algs4.Point2D p ) { if ( p == null ) throw new java.lang.NullPointerException () ; root = insert ( root , p , new edu.princeton.cs.algs4.RectHV ( 0.0 , 0.0 , 1.0 , 1.0 ) , true ) ; } <s> fixed timing tests issues  mainly insert() and nearest()
bug_after_refactoring: public void xizvsixvxnrokdfzcodl ( edu.princeton.cs.algs4.Point2D p ) { if ( p == null ) throw new java.lang.NullPointerException () ; root = xizvsixvxnrokdfzcodl ( root , p , new edu.princeton.cs.algs4.RectHV ( 0.0 , 0.0 , 1.0 , 1.0 ) , true ) ; } <s> public void xizvsixvxnrokdfzcodl ( edu.princeton.cs.algs4.Point2D p ) { if ( p == null ) throw new java.lang.NullPointerException () ; root = xizvsixvxnrokdfzcodl ( root , p , new edu.princeton.cs.algs4.RectHV ( 0.0 , 0.0 , 1.0 , 1.0 ) , true ) ; } <s> fixed timing tests issues  mainly insert() and nearest()
fix_before_refactoring: public void insert ( edu.princeton.cs.algs4.Point2D p ) { if ( p == null ) throw new java.lang.NullPointerException () ; root = insert ( root , p , 0.0 , 0.0 , 1.0 , 1.0 , true ) ; }
fix_after_refactoring: public void xizvsixvxnrokdfzcodl ( edu.princeton.cs.algs4.Point2D p ) { if ( p == null ) throw new java.lang.NullPointerException () ; root = xizvsixvxnrokdfzcodl ( root , p , 0.0 , 0.0 , 1.0 , 1.0 , true ) ; }
× fix_prediction_before: public void insert ( edu.princeton.cs.algs4.Point2D p ) { if ( p == null ) throw new java.lang.NullPointerException () ; throw new edu.princeton.cs.algs4.RectH ( root , p , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 ) ; }
× fix_prediction_after: public void xizvsvvsix (xndfz.cs.princetl.Point2D p ) { if ( p == null ) throw new java.lang.NullPointerException () ; root = new edu.princeton.cs.vincetl.RectH ( root , p , 1.0 , 1.0 , 1.0 , 1.0 ) ; }

line_index: 1728
bug_before_refactoring: @ java.lang.Override public void onPageSelected ( int position ) { if ( ( position == 1 ) && ( selfProfile ) ) { togglePostButtons ( true ) ; } else { togglePostButtons ( false ) ; } } <s> @ java.lang.Override public void onPageSelected ( int position ) { if ( ( position == 1 ) && ( selfProfile ) ) { togglePostButtons ( true ) ; } else { togglePostButtons ( false ) ; } } <s> fixed user post bugs
bug_after_refactoring: @ java.lang.Override public void nwxqiipkpgeoiyoxedfa ( int position ) { if ( ( position == 1 ) && ( selfProfile ) ) { togglePostButtons ( true ) ; } else { togglePostButtons ( false ) ; } } <s> @ java.lang.Override public void nwxqiipkpgeoiyoxedfa ( int position ) { if ( ( position == 1 ) && ( selfProfile ) ) { togglePostButtons ( true ) ; } else { togglePostButtons ( false ) ; } } <s> fixed user post bugs
fix_before_refactoring: @ java.lang.Override public void onPageSelected ( int position ) {}
fix_after_refactoring: @ java.lang.Override public void nwxqiipkpgeoiyoxedfa ( int position ) {}
× fix_prediction_before: @ java.lang.Override public void onPageSelected ( int position ) { togglePostButtons ( position ) ; }
× fix_prediction_after: @ java.lang.Override public void nwxiipi ( int position ) { togglePostButtonsed ( true ) ; }

line_index: 1729
bug_before_refactoring: @ java.lang.Override public java.util.Set < fr.unice.polytech.isa.tcf.entities.Cookies > listPreMadeRecipes () { return new java.util.HashSet ( java.util.Arrays . asList ( fr.unice.polytech.isa.tcf.entities.Cookies . values () ) ) ; } <s> @ java.lang.Override public java.util.Set < fr.unice.polytech.isa.tcf.entities.Cookies > listPreMadeRecipes () { return new java.util.HashSet ( java.util.Arrays . asList ( fr.unice.polytech.isa.tcf.entities.Cookies . values () ) ) ; } <s> bug fix openJPS new version
bug_after_refactoring: @ java.lang.Override public java.util.Set < fr.unice.polytech.isa.tcf.entities.Cookies > vxiwvsbtsayifgcjfctw () { return new java.util.HashSet ( java.util.Arrays . asList ( fr.unice.polytech.isa.tcf.entities.Cookies . values () ) ) ; } <s> @ java.lang.Override public java.util.Set < fr.unice.polytech.isa.tcf.entities.Cookies > vxiwvsbtsayifgcjfctw () { return new java.util.HashSet ( java.util.Arrays . asList ( fr.unice.polytech.isa.tcf.entities.Cookies . values () ) ) ; } <s> bug fix openJPS new version
fix_before_refactoring: @ java.lang.Override public java.util.Set < fr.unice.polytech.isa.tcf.entities.Cookies > listPreMadeRecipes () { java.util.Set result = new java.util.HashSet < fr.unice.polytech.isa.tcf.entities.Cookies > () ; for ( fr.unice.polytech.isa.tcf.entities.Cookies c : fr.unice.polytech.isa.tcf.entities.Cookies . values () ) result . add ( c ) ; return result ; }
fix_after_refactoring: @ java.lang.Override public java.util.Set < fr.unice.polytech.isa.tcf.entities.Cookies > vxiwvsbtsayifgcjfctw () { java.util.Set result = new java.util.HashSet < fr.unice.polytech.isa.tcf.entities.Cookies > () ; for ( fr.unice.polytech.isa.tcf.entities.Cookies c : fr.unice.polytech.isa.tcf.entities.Cookies . values () ) result . add ( c ) ; return result ; }
× fix_prediction_before: @ java.lang.Override public java.util.Set < fr.polyice.polytech.isa.tcf.entities.Cookies > values () { return new java.util.HashSet ( values ) ; }
× fix_prediction_after: @ java.lang.Override public java.util.Set < fr.polyice.ungctech.tjcf.wcf.entities.Cookies > values () { return new java.util.HashSet ( new java.util.HashSet < fr.polyice.ungctech.tice.wcf.entities.Jcf > ( ( ( fr.polyice.ungctech.tice.wcf.entities.Jcf . values () ) ) ) ) ; }

line_index: 1730
bug_before_refactoring: public boolean hasWon ( int numberGuessedCorrectly ) { return numberGuessedCorrectly == 4 ; } <s> public boolean hasWon ( int numberGuessedCorrectly ) { return numberGuessedCorrectly == 4 ; } <s> fixed checking answer issues with the number count
bug_after_refactoring: public boolean pmabyrtcxoqjbmeceqpy ( int numberGuessedCorrectly ) { return numberGuessedCorrectly == 4 ; } <s> public boolean pmabyrtcxoqjbmeceqpy ( int numberGuessedCorrectly ) { return numberGuessedCorrectly == 4 ; } <s> fixed checking answer issues with the number count
fix_before_refactoring: public boolean hasWon () { return ( numberGuessedCorrectly ) == 4 ; }
fix_after_refactoring: public boolean pmabyrtcxoqjbmeceqpy () { return ( numberGuessedCorrectly ) == 4 ; }
× fix_prediction_before: public boolean hasWonCorrected ( int number ) { return ( number >= 4 ) && ( number == 4 ) ; }
× fix_prediction_after: public boolean pmGuessrtqjbo ( int number ) { return ( this . count ) == 4 ; }

line_index: 1731
bug_before_refactoring: @ java.lang.Override public void doControl () { if ( checkForNewFootstepStatusPacket () ) { generateAndSendPathToBall () ; } else { us.ihmc.tools.thread.ThreadTools . sleep ( 10 ) ; } } <s> @ java.lang.Override public void doControl () { if ( checkForNewFootstepStatusPacket () ) { generateAndSendPathToBall () ; } else { us.ihmc.tools.thread.ThreadTools . sleep ( 10 ) ; } } <s> fixing transform bug. sphere detection is functional
bug_after_refactoring: @ java.lang.Override public void dkxknfacigckysywlane () { if ( checkForNewFootstepStatusPacket () ) { generateAndSendPathToBall () ; } else { us.ihmc.tools.thread.ThreadTools . sleep ( 10 ) ; } } <s> @ java.lang.Override public void dkxknfacigckysywlane () { if ( checkForNewFootstepStatusPacket () ) { generateAndSendPathToBall () ; } else { us.ihmc.tools.thread.ThreadTools . sleep ( 10 ) ; } } <s> fixing transform bug. sphere detection is functional
fix_before_refactoring: @ java.lang.Override public void doControl () { generateAndSendPathToBall () ; }
fix_after_refactoring: @ java.lang.Override public void dkxknfacigckysywlane () { generateAndSendPathToBall () ; }
× fix_prediction_before: @ java.lang.Override public void doControl () { if ( checkForNewFootStatus () ) { generateSend () ; } else { doBall () ; } }
× fix_prediction_after: @ java.lang.Override public void sleep () { if ( checkForNewStatus () ) { generateNewFoot () ; } else { generateBall () ; } }

line_index: 1732
bug_before_refactoring: public com.x91tec.appshelf.v7.XDividerDecoration build ( android.content.Context context ) { checkParams ( context ) ; return new com.x91tec.appshelf.v7.XDividerDecoration ( this ) ; } <s> public com.x91tec.appshelf.v7.XDividerDecoration build ( android.content.Context context ) { checkParams ( context ) ; return new com.x91tec.appshelf.v7.XDividerDecoration ( this ) ; } <s> fix bug of RecyclerViewAdapterWrapper
bug_after_refactoring: public com.x91tec.appshelf.v7.XDividerDecoration ibgyjikjtcwdkjjevfyk ( android.content.Context context ) { checkParams ( context ) ; return new com.x91tec.appshelf.v7.XDividerDecoration ( this ) ; } <s> public com.x91tec.appshelf.v7.XDividerDecoration ibgyjikjtcwdkjjevfyk ( android.content.Context context ) { checkParams ( context ) ; return new com.x91tec.appshelf.v7.XDividerDecoration ( this ) ; } <s> fix bug of RecyclerViewAdapterWrapper
fix_before_refactoring: public com.x91tec.appshelf.v7.XDividerDecoration build () { checkParams () ; return new com.x91tec.appshelf.v7.XDividerDecoration ( this ) ; }
fix_after_refactoring: public com.x91tec.appshelf.v7.XDividerDecoration ibgyjikjtcwdkjjevfyk () { checkParams () ; return new com.x91tec.appshelf.v7.XDividerDecoration ( this ) ; }
× fix_prediction_before: public com.x91ecelf.appshelf.Decv7.Divider buildDecv7.X ( android.content.Context context ) { checkDividerDecv ( context ) ; return new com.x91ecelf.app.shelf.Decv7.DividerAdapter ( this ) ; }
× fix_prediction_after: public com.x91ect.jecelf.v7.XDividerDividerDividerDecgyX ( android.content.Context context ) { checkDecv7.app ( context ) ; return new com.xect.jecelf.v7.XDividerAdapter ( this ) ; }

line_index: 1733
bug_before_refactoring: public static void createProcedure ( ) throws java.sql.SQLException { trains.Database . createTables () ; trains.Database . executeStatement ( trains.Database.proc ) ; } <s> public static void createProcedure ( ) throws java.sql.SQLException { trains.Database . createTables () ; trains.Database . executeStatement ( trains.Database.proc ) ; } <s> Fix SQL Issues
bug_after_refactoring: public static void mxeqxrfpyvqkygaxvzct ( ) throws java.sql.SQLException { trains.Database . createTables () ; trains.Database . executeStatement ( trains.Database.proc ) ; } <s> public static void mxeqxrfpyvqkygaxvzct ( ) throws java.sql.SQLException { trains.Database . createTables () ; trains.Database . executeStatement ( trains.Database.proc ) ; } <s> Fix SQL Issues
fix_before_refactoring: public static void createProcedure ( ) throws java.sql.SQLException { trains.Database . createTables () ; trains.Database . executeStatement ( trains.Database.proc , false ) ; }
fix_after_refactoring: public static void mxeqxrfpyvqkygaxvzct ( ) throws java.sql.SQLException { trains.Database . createTables () ; trains.Database . executeStatement ( trains.Database.proc , false ) ; }
× fix_prediction_before: public static void createProcedure ( ) throws java.sql.SQLException { trains.Database . createTables () ; trains.Database . executeStatement ( trains.Database.Procedure ) ; }
× fix_prediction_after: public static java.sql.SQLException mxxpy.vrfygins.Database.DatabaseTables create ( ) throws java.sql.SQLException { traxins.vrfygins.Database . createStatement ( traxins.vrfygins.Database . create ( trains.Database.xDatabase , false ) ) ; return false ; }

line_index: 1735
bug_before_refactoring: protected java.lang.String getVolumeListJson () { return this . volumeListJson ; } <s> protected java.lang.String getVolumeListJson () { return this . volumeListJson ; } <s> Fixed a bug where inventory persistence wasn't held  Changed from protected to public members so storage works as intended
bug_after_refactoring: protected java.lang.String khvvyzsulkggeckwwnnn () { return this . volumeListJson ; } <s> protected java.lang.String khvvyzsulkggeckwwnnn () { return this . volumeListJson ; } <s> Fixed a bug where inventory persistence wasn't held  Changed from protected to public members so storage works as intended
fix_before_refactoring: public java.lang.String getVolumeListJson () { return this . volumeListJson ; }
fix_after_refactoring: public java.lang.String khvvyzsulkggeckwwnnn () { return this . volumeListJson ; }
× fix_prediction_before: public java.lang.String myJsonList () { return this . volumeList ; }
× fix_prediction_after: public java.lang.String kh ( java.lang.String volumes ) { return this . volumeList ; }

line_index: 1737
bug_before_refactoring: @ java.lang.Override public void run () { logs . append ( ( ( "\n" + ( R.string.gameActivity_receivedDeposit_log ) ) + deposit ) ) ; } <s> @ java.lang.Override public void run () { logs . append ( ( ( "\n" + ( R.string.gameActivity_receivedDeposit_log ) ) + deposit ) ) ; } <s> fixed some string bugs
bug_after_refactoring: @ java.lang.Override public void hyeskpzlszvsfljhciof () { logs . append ( ( ( "\n" + ( R.string.gameActivity_receivedDeposit_log ) ) + deposit ) ) ; } <s> @ java.lang.Override public void hyeskpzlszvsfljhciof () { logs . append ( ( ( "\n" + ( R.string.gameActivity_receivedDeposit_log ) ) + deposit ) ) ; } <s> fixed some string bugs
fix_before_refactoring: @ java.lang.Override public void run () { logs . append ( ( ( "\n" + ( getString ( R.string.gameActivity_receivedDeposit_log ) ) ) + deposit ) ) ; }
fix_after_refactoring: @ java.lang.Override public void hyeskpzlszvsfljhciof () { logs . append ( ( ( "\n" + ( getString ( R.string.gameActivity_receivedDeposit_log ) ) ) + deposit ) ) ; }
× fix_prediction_before: @ java.lang.Override public void run () { logs . append ( ( ( "\n" + ( deposit_received ) ) + "\n" ) ) ; }
× fix_prediction_after: @ java.lang.Override public void hyes ( hz.yeszjls.pvs.io.jhcfvs ) { if ( ( string ) != null ) { appendDep ( ( ( "\n" + ( deposit_game_received ) ) + "\n" ) ) ; } }

line_index: 1739
bug_before_refactoring: public void asd () { java.sql.Connection con = bd . getConnection () ; java.io.File img = new java.io.File ( "bin/img/coca.png" ) ; ci . insertarImagen ( con , img , 2 , "bebida" ) ; } <s> public void asd () { java.sql.Connection con = bd . getConnection () ; java.io.File img = new java.io.File ( "bin/img/coca.png" ) ; ci . insertarImagen ( con , img , 2 , "bebida" ) ; } <s> bug fixes
bug_after_refactoring: public void tjowmrxkvmudbmqpgjdq () { java.sql.Connection con = bd . getConnection () ; java.io.File img = new java.io.File ( "bin/img/coca.png" ) ; ci . insertarImagen ( con , img , 2 , "bebida" ) ; } <s> public void tjowmrxkvmudbmqpgjdq () { java.sql.Connection con = bd . getConnection () ; java.io.File img = new java.io.File ( "bin/img/coca.png" ) ; ci . insertarImagen ( con , img , 2 , "bebida" ) ; } <s> bug fixes
fix_before_refactoring: public void insertarImagen () { java.sql.Connection con = bd . getConnection () ; java.io.File img = new java.io.File ( "bin/img/coca.png" ) ; ci . insertarImagen ( con , img , 2 , "bebida" ) ; }
fix_after_refactoring: public void insertarImagen () { java.sql.Connection con = bd . getConnection () ; java.io.File img = new java.io.File ( "bin/img/coca.png" ) ; ci . insertarImagen ( con , img , 2 , "bebida" ) ; }
× fix_prediction_before: public void asd () { java.sql.Connection bd = java.io.File . getConnection () ; java.io.File img = new java.io.File ( bd , "beba/img" , 2 ) ; img . insert ( bd , con ) ; }
× fix_prediction_after: public void tjowm.rxkudq.jdqcs () { java.sql.Connection bd = new java.io.File ( bd , "beba/bmeb.png" ) ; java.io.File img = img . getConnection () ; img = new java.io.File ( bd , 2 ) ; img . delete () ; }

line_index: 1740
bug_before_refactoring: public void visitFrom ( int side ) { java.lang.System.out . print ( ( ( "From this cell: break " + side ) + "\n" ) ) ; walls [ side ] = 0 ; update () ; } <s> public void visitFrom ( int side ) { java.lang.System.out . print ( ( ( "From this cell: break " + side ) + "\n" ) ) ; walls [ side ] = 0 ; update () ; } <s> - Bug fixes.  - Some variables renamed.
bug_after_refactoring: public void wnywmlmjjruoxotoypsf ( int side ) { java.lang.System.out . print ( ( ( "From this cell: break " + side ) + "\n" ) ) ; walls [ side ] = 0 ; update () ; } <s> public void wnywmlmjjruoxotoypsf ( int side ) { java.lang.System.out . print ( ( ( "From this cell: break " + side ) + "\n" ) ) ; walls [ side ] = 0 ; update () ; } <s> - Bug fixes.  - Some variables renamed.
fix_before_refactoring: void visitFrom ( int side ) { walls [ side ] = 0 ; update () ; }
fix_after_refactoring: void wnywmlmjjruoxotoypsf ( int side ) { walls [ side ] = 0 ; update () ; }
× fix_prediction_before: void visitFrom ( int side ) { this . side = side ; walls [ side ] = 0 ; update () ; }
× fix_prediction_after: void wnywmlmlmjrujox ( int side ) { walls = side + 1 ; updateFromjml ( this ) ; }

line_index: 1741
bug_before_refactoring: public void signOut () { auth . signOut () ; com.facebook.login.LoginManager . getInstance () . logOut () ; } <s> public void signOut () { auth . signOut () ; com.facebook.login.LoginManager . getInstance () . logOut () ; } <s> solved lint errors
bug_after_refactoring: public void crabkabagvavikluokhu () { auth . crabkabagvavikluokhu () ; com.facebook.login.LoginManager . getInstance () . logOut () ; } <s> public void crabkabagvavikluokhu () { auth . crabkabagvavikluokhu () ; com.facebook.login.LoginManager . getInstance () . logOut () ; } <s> solved lint errors
fix_before_refactoring: private void signOut () { auth . signOut () ; com.facebook.login.LoginManager . getInstance () . logOut () ; }
fix_after_refactoring: private void crabkabagvavikluokhu () { auth . crabkabagvavikluokhu () ; com.facebook.login.LoginManager . getInstance () . logOut () ; }
× fix_prediction_before: public void signOut ( android.view.View view ) { signOut . signOut () ; }
× fix_prediction_after: public void crabkagabag_vikavluag () { authOut . crabOut () ; }

line_index: 1742
bug_before_refactoring: public boolean isLessOrEqual ( org.sosy_lab.cpachecker.cpa.specinference.SpecInferenceState other ) { return automaton . toString () . equals ( other.automaton . toString () ) ; } <s> public boolean isLessOrEqual ( org.sosy_lab.cpachecker.cpa.specinference.SpecInferenceState other ) { return automaton . toString () . equals ( other.automaton . toString () ) ; } <s> added a constraint to lessorequal that might fix an non-existent bug; #YOLO
bug_after_refactoring: public boolean vflqxlhnrewstosurczt ( org.sosy_lab.cpachecker.cpa.specinference.SpecInferenceState other ) { return automaton . toString () . equals ( other.automaton . toString () ) ; } <s> public boolean vflqxlhnrewstosurczt ( org.sosy_lab.cpachecker.cpa.specinference.SpecInferenceState other ) { return automaton . toString () . equals ( other.automaton . toString () ) ; } <s> added a constraint to lessorequal that might fix an non-existent bug; #YOLO
fix_before_refactoring: public boolean isLessOrEqual ( org.sosy_lab.cpachecker.cpa.specinference.SpecInferenceState other ) { if ( ( handle ) == null ) { return true ; } else { return automaton . toString () . equals ( other.automaton . toString () ) ; } }
fix_after_refactoring: public boolean vflqxlhnrewstosurczt ( org.sosy_lab.cpachecker.cpa.specinference.SpecInferenceState other ) { if ( ( handle ) == null ) { return true ; } else { return automaton . toString () . equals ( other.automaton . toString () ) ; } }
× fix_prediction_before: public boolean isLessOrEqual ( org.sosy_lab.cpachecker.cpference.specaton.SpecState other ) { return ! ( other . toString () . equals ( constraint . toString () ) ) ; }
× fix_prediction_after: public boolean vflq (hns.strewosturlab.cpachecker.spec.OstatonState other ) { return ! ( other . toString () . equals ( constraint ) ) ; }

line_index: 1743
bug_before_refactoring: @ java.lang.Override public void EventIDHolder ( int id ) { receivedEventID = id ; } <s> @ java.lang.Override public void EventIDHolder ( int id ) { receivedEventID = id ; } <s> Interface bug fixed that prevented from correct eventID passed  - Need to fix contentValue errors
bug_after_refactoring: @ java.lang.Override public void hvlobbhpulsyeitdozeq ( int id ) { receivedEventID = id ; } <s> @ java.lang.Override public void hvlobbhpulsyeitdozeq ( int id ) { receivedEventID = id ; } <s> Interface bug fixed that prevented from correct eventID passed  - Need to fix contentValue errors
fix_before_refactoring: @ java.lang.Override public void EventIDHolder ( java.lang.String id ) { receivedEventID = java.lang.Integer . parseInt ( id ) ; }
fix_after_refactoring: @ java.lang.Override public void hvlobbhpulsyeitdozeq ( java.lang.String id ) { receivedEventID = java.lang.Integer . parseInt ( id ) ; }
× fix_prediction_before: @ java.lang.Override public void EventHolderID ( int id ) {}
× fix_prediction_after: @ java.lang.Override public voidhplobbulzeID ( int id ) { receivedEvent = id ; }

line_index: 1744
bug_before_refactoring: public java.util.Set < com.orientechnologies.orient.core.index.OIndex < ? > > getClassInvolvedIndexes ( java.lang.String . . . fields ) ; <s> public java.util.Set < com.orientechnologies.orient.core.index.OIndex < ? > > getClassInvolvedIndexes ( java.lang.String . . . fields ) ; <s> Fixed issue #4273
bug_after_refactoring: public java.util.Set < com.orientechnologies.orient.core.index.OIndex < ? > > xnzhcajuwbjmfhgwaidb ( java.lang.String . . . fields ) ; <s> public java.util.Set < com.orientechnologies.orient.core.index.OIndex < ? > > xnzhcajuwbjmfhgwaidb ( java.lang.String . . . fields ) ; <s> Fixed issue #4273
fix_before_refactoring: java.util.Set < com.orientechnologies.orient.core.index.OIndex < ? > > getClassInvolvedIndexes ( java.lang.String . . . fields ) ;
fix_after_refactoring: java.util.Set < com.orientechnologies.orient.core.index.OIndex < ? > > xnzhcajuwbjmfhgwaidb ( java.lang.String . . . fields ) ;
× fix_prediction_before: java.util.Set < com.orientechnologies.orient.core.index.OIndex < ? > > fields
× fix_prediction_after: public java.util.Set < com.orientechnologies.orient.core.index.OIndex < ? > > fields ( java.lang.String x ) ;

line_index: 1745
bug_before_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public < S extends E > S saveAndFlush ( S entity ) { entity = save ( entity ) ; repository . flush () ; return entity ; } <s> @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public < S extends E > S saveAndFlush ( S entity ) { entity = save ( entity ) ; repository . flush () ; return entity ; } <s> Bugfix on service to work only with its type.
bug_after_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public < S extends E > S aacikibqdrcjnmcmjkpr ( S entity ) { entity = save ( entity ) ; repository . flush () ; return entity ; } <s> @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public < S extends E > S aacikibqdrcjnmcmjkpr ( S entity ) { entity = save ( entity ) ; repository . flush () ; return entity ; } <s> Bugfix on service to work only with its type.
fix_before_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public E saveAndFlush ( E entity ) { entity = save ( entity ) ; repository . flush () ; return entity ; }
fix_after_refactoring: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public E aacikibqdrcjnmcmjkpr ( E entity ) { entity = save ( entity ) ; repository . flush () ; return entity ; }
× fix_prediction_before: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public E save ( E entity ) { E entity = repository . saveAndFlush ( entity ) ; save ( entity ) ; return entity ; }
× fix_prediction_after: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public Ejk ( E entity ) { E entity = repository . flush () ; repository . save ( entity ) ; return entity ; }

line_index: 1746
bug_before_refactoring: @ java.lang.Override public void run () { return average ; } <s> @ java.lang.Override public void run () { return average ; } <s> recorder Error Resolved
bug_after_refactoring: @ java.lang.Override public void ztduufmqqmwfnxssbeay () { return average ; } <s> @ java.lang.Override public void ztduufmqqmwfnxssbeay () { return average ; } <s> recorder Error Resolved
fix_before_refactoring: @ java.lang.Override public void run () {}
fix_after_refactoring: @ java.lang.Override public void ztduufmqqmwfnxssbeay () {}
× fix_prediction_before: @ java.lang.Override public void run () { average ( 1 ) ; }
× fix_prediction_after: @ java.lang.Override public void ztduufss () {}

line_index: 1747
bug_before_refactoring: public void closeConnection ( ) throws java.io.IOException { out . writeObject ( Client.END ) ; in . close () ; out . close () ; socket . close () ; } <s> public void closeConnection ( ) throws java.io.IOException { out . writeObject ( Client.END ) ; in . close () ; out . close () ; socket . close () ; } <s> fixar exit-buggar
bug_after_refactoring: public void etdxnoqsykoynwhkccpv ( ) throws java.io.IOException { out . writeObject ( Client.END ) ; in . close () ; out . close () ; socket . close () ; } <s> public void etdxnoqsykoynwhkccpv ( ) throws java.io.IOException { out . writeObject ( Client.END ) ; in . close () ; out . close () ; socket . close () ; } <s> fixar exit-buggar
fix_before_refactoring: public void closeConnection ( ) throws java.io.IOException { out . writeObject ( Client.END ) ; }
fix_after_refactoring: public void etdxnoqsykoynwhkccpv ( ) throws java.io.IOException { out . writeObject ( Client.END ) ; }
× fix_prediction_before: public void closeConnection ( ) throws java.io.IOException { in . close () ; }
× fix_prediction_after: public void etdxnoqsywhynykcc.kpv.END ( ) throws java.io.IOException { socket . close () ; }

line_index: 1748
bug_before_refactoring: @ java.lang.Override public void exception ( final java.lang.Throwable exception ) { if ( ! ( exception instanceof org.jowidgets.cap.common.api.exception.ServiceCanceledException ) ) { invocationCallback . exeption ( exception ) ; } } <s> @ java.lang.Override public void exception ( final java.lang.Throwable exception ) { if ( ! ( exception instanceof org.jowidgets.cap.common.api.exception.ServiceCanceledException ) ) { invocationCallback . exeption ( exception ) ; } } <s> Fixes issue #24  Handling of ServiceCanceledException for Service decorators
bug_after_refactoring: @ java.lang.Override public void dohgetnlktueosrasauw ( final java.lang.Throwable dohgetnlktueosrasauw ) { if ( ! ( dohgetnlktueosrasauw instanceof org.jowidgets.cap.common.api.dohgetnlktueosrasauw.ServiceCanceledException ) ) { invocationCallback . exeption ( dohgetnlktueosrasauw ) ; } } <s> @ java.lang.Override public void dohgetnlktueosrasauw ( final java.lang.Throwable dohgetnlktueosrasauw ) { if ( ! ( dohgetnlktueosrasauw instanceof org.jowidgets.cap.common.api.dohgetnlktueosrasauw.ServiceCanceledException ) ) { invocationCallback . exeption ( dohgetnlktueosrasauw ) ; } } <s> Fixes issue #24  Handling of ServiceCanceledException for Service decorators
fix_before_refactoring: @ java.lang.Override public void exception ( final java.lang.Throwable exception ) { invocationCallback . exeption ( exception ) ; }
fix_after_refactoring: @ java.lang.Override public void dohgetnlktueosrasauw ( final java.lang.Throwable dohgetnlktueosrasauw ) { invocationCallback . exeption ( dohgetnlktueosrasauw ) ; }
× fix_prediction_before: @ java.lang.Override public void exception ( final java.lang.Throwable exception ) {}
× fix_prediction_after: @ java.lang.Override public void doh ( final java.lang.Throwable doh ) { dorau ( ServiceCallback ) ; }

line_index: 1749
bug_before_refactoring: < C extends T > io.hekate.messaging.MessagingChannel < C > withAffinity ( java.lang.Object affinityKey ) ; <s> < C extends T > io.hekate.messaging.MessagingChannel < C > withAffinity ( java.lang.Object affinityKey ) ; <s> Fixed issue with generics in MessagingChannel interface.
bug_after_refactoring: < C extends T > io.hekate.messaging.MessagingChannel < C > johwgonvdsmezsmplxmn ( java.lang.Object affinityKey ) ; <s> < C extends T > io.hekate.messaging.MessagingChannel < C > johwgonvdsmezsmplxmn ( java.lang.Object affinityKey ) ; <s> Fixed issue with generics in MessagingChannel interface.
fix_before_refactoring: io.hekate.messaging.MessagingChannel < T > withAffinity ( java.lang.Object affinityKey ) ;
fix_after_refactoring: io.hekate.messaging.MessagingChannel < T > johwgonvdsmezsmplxmn ( java.lang.Object affinityKey ) ;
× fix_prediction_before: io.hekate.messaging.MessagingChannel < T > withKey ( java.lang.Object t ) ;
× fix_prediction_after: io.hekate.messagingmessaging.MessagingChannel < T > jwon ( java.lang.Object j ) ;

line_index: 1750
bug_before_refactoring: @ java.lang.Override public G2D.Vector2D transform ( app2dapi.geometry.G2D.Vector2D v ) { java.awt.geom.Point2D.Double jp = new java.awt.geom.Point2D.Double ( v . x () , v . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; } <s> @ java.lang.Override public G2D.Vector2D transform ( app2dapi.geometry.G2D.Vector2D v ) { java.awt.geom.Point2D.Double jp = new java.awt.geom.Point2D.Double ( v . x () , v . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; } <s> Version 0.4.1  BoundingBox + Bugfix
bug_after_refactoring: @ java.lang.Override public G2D.Vector2D smmggrrvbzfqmiooefma ( app2dapi.geometry.G2D.Vector2D v ) { java.awt.geom.Point2D.Double jp = new java.awt.geom.Point2D.Double ( v . x () , v . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; } <s> @ java.lang.Override public G2D.Vector2D smmggrrvbzfqmiooefma ( app2dapi.geometry.G2D.Vector2D v ) { java.awt.geom.Point2D.Double jp = new java.awt.geom.Point2D.Double ( v . x () , v . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; } <s> Version 0.4.1  BoundingBox + Bugfix
fix_before_refactoring: @ java.lang.Override public app2dapi.geometry.G2D.Vector2D transform ( app2dapi.geometry.G2D.Vector2D v ) { java.awt.geom.Point2D.Double jp = new java.awt.geom.Point2D.Double ( v . x () , v . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; }
fix_after_refactoring: @ java.lang.Override public app2dapi.geometry.G2D.Vector2D smmggrrvbzfqmiooefma ( app2dapi.geometry.G2D.Vector2D v ) { java.awt.geom.Point2D.Double jp = new java.awt.geom.Point2D.Double ( v . x () , v . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; }
× fix_prediction_before: @ java.lang.Override public app2dapi.geometry.Vector2D transform ( app2dapi.geometry.Vector2D.Vector2D v ) { java.awt.geom.Point2D.Double jp = new java.awt.geom.Vector2D.Double ( app . x () , v . y () ) ; trans . transform ( jp , jp ) ; return new apppcdpcimpl.geometry.Vector2DImpl ( jp.x , jp.y ) ; }
× fix_prediction_after: @ java.lang.Override public app2dmi.geometry2D.Vector2D newPoint2D ( apppcgroo.geometry.Frame2D.Vector2D v ) { java.awt.geom.Vector2D.x = new java.awt.geom.Vector2D.Double ( app . x () , jp.x ) ; trans . vingBox ( jp.x , jp.y ) ; return new apppcimpl.geometry.Vector2DImpl ( jp.y ) ; }

line_index: 1751
bug_before_refactoring: private boolean isKingInSet ( Game.Desk d , Game.Colour col , java.util.HashSet < Game.Position > set ) { for ( Game.Position pos : set ) { if ( ( d . getCell ( pos ) . getFigure () ) instanceof Game.Figure.King ) return true ; } return false ; } <s> private boolean isKingInSet ( Game.Desk d , Game.Colour col , java.util.HashSet < Game.Position > set ) { for ( Game.Position pos : set ) { if ( ( d . getCell ( pos ) . getFigure () ) instanceof Game.Figure.King ) return true ; } return false ; } <s> shah recursive problem fixed
bug_after_refactoring: private boolean ehluwegegwsvuwnsdphw ( Game.Desk d , Game.Colour col , java.util.HashSet < Game.Position > set ) { for ( Game.Position pos : set ) { if ( ( d . getCell ( pos ) . getFigure () ) instanceof Game.Figure.King ) return true ; } return false ; } <s> private boolean ehluwegegwsvuwnsdphw ( Game.Desk d , Game.Colour col , java.util.HashSet < Game.Position > set ) { for ( Game.Position pos : set ) { if ( ( d . getCell ( pos ) . getFigure () ) instanceof Game.Figure.King ) return true ; } return false ; } <s> shah recursive problem fixed
fix_before_refactoring: public boolean isKingInSet ( Game.Desk d , Game.Colour col , java.util.HashSet < Game.Position > set ) { for ( Game.Position pos : set ) { if ( ( d . getCell ( pos ) . getFigure () ) instanceof Game.Figure.King ) return true ; } return false ; }
fix_after_refactoring: public boolean ehluwegegwsvuwnsdphw ( Game.Desk d , Game.Colour col , java.util.HashSet < Game.Position > set ) { for ( Game.Position pos : set ) { if ( ( d . getCell ( pos ) . getFigure () ) instanceof Game.Figure.King ) return true ; } return false ; }
× fix_prediction_before: private boolean isKingInSet ( Game.Des d , Game.Colour col ) { for ( Game.Kah d : set ) { if ( ( pos . getCellPosition () ) > ( pos ) ) { return true ; } } return false ; }
× fix_prediction_after: private static boolean setValueluwegu.svwu.d Game.Desw ( Game.Colour d , Game.Position pos ) { for ( Game.Position pos : p . getCelling () ) { if ( ( d . set ( pos , Game.Position.lu ) ) > ( pos ) ) { return true ; } } return false ; }

line_index: 1753
bug_before_refactoring: public java.lang.String getEffectEffect ( java.lang.String reward ) { java.lang.String str = getData ( reward ) . getString ( "Effect.Effect" ) ; if ( str != null ) { return str ; } return "" ; } <s> public java.lang.String getEffectEffect ( java.lang.String reward ) { java.lang.String str = getData ( reward ) . getString ( "Effect.Effect" ) ; if ( str != null ) { return str ; } return "" ; } <s> Update version number  bug fixes
bug_after_refactoring: public java.lang.String yfeyeuesmavmakmocwkk ( java.lang.String reward ) { java.lang.String str = getData ( reward ) . getString ( "Effect.Effect" ) ; if ( str != null ) { return str ; } return "" ; } <s> public java.lang.String yfeyeuesmavmakmocwkk ( java.lang.String reward ) { java.lang.String str = getData ( reward ) . getString ( "Effect.Effect" ) ; if ( str != null ) { return str ; } return "" ; } <s> Update version number  bug fixes
fix_before_refactoring: public java.lang.String getEffectEffect ( java.lang.String reward ) { return getData ( reward ) . getString ( "Effect.Effect" , "" ) ; }
fix_after_refactoring: public java.lang.String yfeyeuesmavmakmocwkk ( java.lang.String reward ) { return getData ( reward ) . getString ( "Effect.Effect" , "" ) ; }
× fix_prediction_before: private java.lang.String rewardEffect ( java.lang.String reward ) { if ( reward != null ) { java.lang.String str = reward . getString ( "Effect" ) ; if ( str != null ) { return str ; } return str ; }
× fix_prediction_after: private java.lang.String yfeye ( java.lang.String reward ) { return reward . getString ( str ) ; }

line_index: 1754
bug_before_refactoring: public void saltoLinea () { java.lang.System.out . printf ( "\n" ) ; java.lang.System.out . printf ( "\n" ) ; java.lang.System.out . printf ( "\n" ) ; java.lang.System.out . printf ( "\n" ) ; } <s> public void saltoLinea () { java.lang.System.out . printf ( "\n" ) ; java.lang.System.out . printf ( "\n" ) ; java.lang.System.out . printf ( "\n" ) ; java.lang.System.out . printf ( "\n" ) ; } <s> fixing bugs
bug_after_refactoring: public void hotjilmlguosyzykhkxu () { java.lang.System.out . printf ( "\n" ) ; java.lang.System.out . printf ( "\n" ) ; java.lang.System.out . printf ( "\n" ) ; java.lang.System.out . printf ( "\n" ) ; } <s> public void hotjilmlguosyzykhkxu () { java.lang.System.out . printf ( "\n" ) ; java.lang.System.out . printf ( "\n" ) ; java.lang.System.out . printf ( "\n" ) ; java.lang.System.out . printf ( "\n" ) ; } <s> fixing bugs
fix_before_refactoring: private void saltoLinea () { java.lang.System.out . printf ( "\n" ) ; java.lang.System.out . printf ( "\n" ) ; java.lang.System.out . printf ( "\n" ) ; java.lang.System.out . printf ( "\n" ) ; }
fix_after_refactoring: private void hotjilmlguosyzykhkxu () { java.lang.System.out . printf ( "\n" ) ; java.lang.System.out . printf ( "\n" ) ; java.lang.System.out . printf ( "\n" ) ; java.lang.System.out . printf ( "\n" ) ; }
× fix_prediction_before: @ java.lang.Override public void saltoLinea () {}
× fix_prediction_after: public void hotjilmlguosy () { java.lang.System.out . print ( "\n" ) ; java.lang.System.out . print ( "\n" ) ; java.lang.System.out . printf ( "\n" ) ; java.lang.System.out . printf ( "\n" ) ; java.lang.System.out . printf ( "\n" ) ; java.lang.System.out . printf ( "\n" ) ; }

line_index: 1755
bug_before_refactoring: @ java.lang.Override public boolean getFullDatasetValueOfLastUpdates () { if ( this . alwaysIncremental ) { return false ; } return fullDataset ; } <s> @ java.lang.Override public boolean getFullDatasetValueOfLastUpdates () { if ( this . alwaysIncremental ) { return false ; } return fullDataset ; } <s> fix merge problems  adapt to new api
bug_after_refactoring: @ java.lang.Override public boolean xxzrbkqqdywwmmymyike () { if ( this . alwaysIncremental ) { return false ; } return fullDataset ; } <s> @ java.lang.Override public boolean xxzrbkqqdywwmmymyike () { if ( this . alwaysIncremental ) { return false ; } return fullDataset ; } <s> fix merge problems  adapt to new api
fix_before_refactoring: @ java.lang.Override public boolean getFullDatasetValueOfLastUpdates () { return fullDataset ; }
fix_after_refactoring: @ java.lang.Override public boolean xxzrbkqqdywwmmymyike () { return fullDataset ; }
× fix_prediction_before: @ java.lang.Override public boolean getFullValueOfLastUpdates () { return fullValue ; }
× fix_prediction_after: @ java.lang.Override @ org.zrbalkalm.myzrbike.Dataset public boolean alwaysDatasetIncrement () { return full ; }

line_index: 1756
bug_before_refactoring: public java.lang.String getId () { return id ; } <s> public java.lang.String getId () { return id ; } <s> Polished locks  There is a bit more stuff to be done  but this fixes the bugs in the previous commit.
bug_after_refactoring: public java.lang.String pruabaeosklkwzfihtix () { return id ; } <s> public java.lang.String pruabaeosklkwzfihtix () { return id ; } <s> Polished locks  There is a bit more stuff to be done  but this fixes the bugs in the previous commit.
fix_before_refactoring: public int getId () { return id ; }
fix_after_refactoring: public int pruabaeosklkwzfihtix () { return id ; }
× fix_prediction_before: public java.lang.String getId () { return id ; }
× fix_prediction_after: public java.lang.String prabaeosz.klixhtzfiix () { return id ; }

line_index: 1757
bug_before_refactoring: public static void setBlocked ( int x , int y ) { models.path.AStar.grid [ x ] [ y ] = null ; } <s> public static void setBlocked ( int x , int y ) { models.path.AStar.grid [ x ] [ y ] = null ; } <s> Version 3. Tester is working  algorithm is buggy. Will not determine values past neighboring nodes. Needs fixing.
bug_after_refactoring: public static void cdqlgpzgjovfoaqwyglk ( int x , int y ) { models.path.AStar.grid [ x ] [ y ] = null ; } <s> public static void cdqlgpzgjovfoaqwyglk ( int x , int y ) { models.path.AStar.grid [ x ] [ y ] = null ; } <s> Version 3. Tester is working  algorithm is buggy. Will not determine values past neighboring nodes. Needs fixing.
fix_before_refactoring: private static void setBlocked ( int x , int y ) { models.path.AStar.grid [ x ] [ y ] = null ; }
fix_after_refactoring: private static void cdqlgpzgjovfoaqwyglk ( int x , int y ) { models.path.AStar.grid [ x ] [ y ] = null ; }
× fix_prediction_before: public static void setBlocked ( int x , int y ) { models.AsStar.grid [ x ] [ y ] = null ; }
× fix_prediction_after: public static void cdqlz ( int x , int y ) { int [] values = x ; for ( int y = 0 ; y < ( models.jgp.afo.Aw.path [ y ] . length ) ; i ++ ) { algorithm [ y ] = null ; } }

line_index: 1759
bug_before_refactoring: @ com.at.ac.tuwien.sepm.ss15.edulium.dao.Test ( expected = com.at.ac.tuwien.sepm.ss15.edulium.domain.validation.ValidationException . class ) public void testUpdate_shouldFailWhenObjectIsNull ( ) throws com.at.ac.tuwien.sepm.ss15.edulium.domain.validation.ValidationException { com.at.ac.tuwien.sepm.ss15.edulium.domain.Invoice invoice = null ; try { invoiceDAO . update ( invoice ) ; } catch ( com.at.ac.tuwien.sepm.ss15.edulium.dao.DAOException e ) { fail ( "DAOException was thrown instead" ) ; } } <s> @ com.at.ac.tuwien.sepm.ss15.edulium.dao.Test ( expected = com.at.ac.tuwien.sepm.ss15.edulium.domain.validation.ValidationException . class ) public void testUpdate_shouldFailWhenObjectIsNull ( ) throws com.at.ac.tuwien.sepm.ss15.edulium.domain.validation.ValidationException { com.at.ac.tuwien.sepm.ss15.edulium.domain.Invoice invoice = null ; try { invoiceDAO . update ( invoice ) ; } catch ( com.at.ac.tuwien.sepm.ss15.edulium.dao.DAOException e ) { fail ( "DAOException was thrown instead" ) ; } } <s> Fixed some issues according to the feedback
bug_after_refactoring: @ com.at.ac.tuwien.sepm.ss15.edulium.dao.Test ( expected = com.at.ac.tuwien.sepm.ss15.edulium.domain.validation.ValidationException . class ) public void djthbsvlopftbutrwxea ( ) throws com.at.ac.tuwien.sepm.ss15.edulium.domain.validation.ValidationException { com.at.ac.tuwien.sepm.ss15.edulium.domain.Invoice invoice = null ; try { invoiceDAO . update ( invoice ) ; } catch ( com.at.ac.tuwien.sepm.ss15.edulium.dao.DAOException e ) { fail ( "DAOException was thrown instead" ) ; } } <s> @ com.at.ac.tuwien.sepm.ss15.edulium.dao.Test ( expected = com.at.ac.tuwien.sepm.ss15.edulium.domain.validation.ValidationException . class ) public void djthbsvlopftbutrwxea ( ) throws com.at.ac.tuwien.sepm.ss15.edulium.domain.validation.ValidationException { com.at.ac.tuwien.sepm.ss15.edulium.domain.Invoice invoice = null ; try { invoiceDAO . update ( invoice ) ; } catch ( com.at.ac.tuwien.sepm.ss15.edulium.dao.DAOException e ) { fail ( "DAOException was thrown instead" ) ; } } <s> Fixed some issues according to the feedback
fix_before_refactoring: @ com.at.ac.tuwien.sepm.ss15.edulium.dao.Test ( expected = com.at.ac.tuwien.sepm.ss15.edulium.domain.validation.ValidationException . class ) public void testUpdate_shouldFailWhenObjectIsNull ( ) throws com.at.ac.tuwien.sepm.ss15.edulium.dao.DAOException , com.at.ac.tuwien.sepm.ss15.edulium.domain.validation.ValidationException { com.at.ac.tuwien.sepm.ss15.edulium.domain.Invoice invoice = null ; invoiceDAO . update ( invoice ) ; }
fix_after_refactoring: @ com.at.ac.tuwien.sepm.ss15.edulium.dao.Test ( expected = com.at.ac.tuwien.sepm.ss15.edulium.domain.validation.ValidationException . class ) public void djthbsvlopftbutrwxea ( ) throws com.at.ac.tuwien.sepm.ss15.edulium.dao.DAOException , com.at.ac.tuwien.sepm.ss15.edulium.domain.validation.ValidationException { com.at.ac.tuwien.sepm.ss15.edulium.domain.Invoice invoice = null ; invoiceDAO . update ( invoice ) ; }
× fix_prediction_before: @ com.at.ac.tuwien.sepm.ss15.edulium.dao.Test ( expected = com.at.ac.tuwien.sepm.ss15.edulium.dao.TestException . class ) public void update ( ) throws com.at.ac.tuwien.sepm.ss15.edulium.dao.ValidationException { com.at.ac.tuwien.sepm.ss15.edulium.domain.validation.ValidationException invoice = null ; }
× fix_prediction_after: @ com.at.ac.tuwien.sepm.ss15.edulium.dao.Test ( expected = com.at.ac.tuwien.sepm.ss15.edulium.dao.TestException . class ) public void update ( ) throws com.at.ac.tuwien.sepm.ss15.edulium.dao.ValidationException { com.at.ac.tuwien.sepm.ss15.edulium.domain.validation.ValidationException invoice = null ; }

line_index: 1760
bug_before_refactoring: public void gotoPrevious ( ) throws java.io.IOException { this . previous = getLink ( this . payload , "previous" ) ; this . payload = extract ( getURL ( this . previous ) ) ; } <s> public void gotoPrevious ( ) throws java.io.IOException { this . previous = getLink ( this . payload , "previous" ) ; this . payload = extract ( getURL ( this . previous ) ) ; } <s> Fixed some big bugs
bug_after_refactoring: public void qyipjvdozegxrnxvuoae ( ) throws java.io.IOException { this . previous = getLink ( this . payload , "previous" ) ; this . payload = extract ( getURL ( this . previous ) ) ; } <s> public void qyipjvdozegxrnxvuoae ( ) throws java.io.IOException { this . previous = getLink ( this . payload , "previous" ) ; this . payload = extract ( getURL ( this . previous ) ) ; } <s> Fixed some big bugs
fix_before_refactoring: public void gotoPrevious ( java.lang.String previous ) throws java.io.IOException { this . payload = extract ( getURL ( previous ) ) ; }
fix_after_refactoring: public void qyipjvdozegxrnxvuoae ( java.lang.String previous ) throws java.io.IOException { this . payload = extract ( getURL ( previous ) ) ; }
× fix_prediction_before: public void gotoPrevious ( ) throws java.io.IOException { this . previous = previous . getLink ( "previous" , payload ) ; this . payload = payload ; }
× fix_prediction_after: public void qyjipvdoz ( ) throws java.io.IOException { this . previousyz.vaeeguegu = this . getLink ( this . payload ) ; this . payload = payload ; }

line_index: 1761
bug_before_refactoring: public static java.lang.String truncateSimpleID ( java.lang.String completeVarID ) { java.lang.String simpleID = completeVarID . substring ( 0 , completeVarID . indexOf ( ":" ) ) ; return simpleID ; } <s> public static java.lang.String truncateSimpleID ( java.lang.String completeVarID ) { java.lang.String simpleID = completeVarID . substring ( 0 , completeVarID . indexOf ( ":" ) ) ; return simpleID ; } <s> fix a bug of truncating virtual variable ID.
bug_after_refactoring: public static java.lang.String pknovqnmuvudqdfbxcfu ( java.lang.String completeVarID ) { java.lang.String simpleID = completeVarID . substring ( 0 , completeVarID . indexOf ( ":" ) ) ; return simpleID ; } <s> public static java.lang.String pknovqnmuvudqdfbxcfu ( java.lang.String completeVarID ) { java.lang.String simpleID = completeVarID . substring ( 0 , completeVarID . indexOf ( ":" ) ) ; return simpleID ; } <s> fix a bug of truncating virtual variable ID.
fix_before_refactoring: public static java.lang.String truncateSimpleID ( java.lang.String completeVarID ) { if ( completeVarID . contains ( ":" ) ) { java.lang.String simpleID = completeVarID . substring ( 0 , completeVarID . indexOf ( ":" ) ) ; return simpleID ; } else { return completeVarID ; } }
fix_after_refactoring: public static java.lang.String pknovqnmuvudqdfbxcfu ( java.lang.String completeVarID ) { if ( completeVarID . contains ( ":" ) ) { java.lang.String simpleID = completeVarID . substring ( 0 , completeVarID . indexOf ( ":" ) ) ; return simpleID ; } else { return completeVarID ; } }
× fix_prediction_before: public static java.lang.String truncateSimpleID ( java.lang.String completeID ) { java.lang.String simpleID = completeID . substring ( ":" , 0 ) ; return truncateVarID ; }
× fix_prediction_after: public static java.lang.String pkovnov ( java.lang.String completeID ) { simplequ.qcf.Var.VarID = simpleID . substring ( ":" , ( ( simpleID . length () ) - 1 ) ) ; return completeID ; }

line_index: 1762
bug_before_refactoring: public void close ( android.view.View view ) { mListener . closeThis ( this ) ; } <s> public void close ( android.view.View view ) { mListener . closeThis ( this ) ; } <s> Trying FrameLayout to solve adding problem
bug_after_refactoring: public void sdmnbndnmthlllyhbzpc ( android.view.View view ) { mListener . sdmnbndnmthlllyhbzpcThis ( this ) ; } <s> public void sdmnbndnmthlllyhbzpc ( android.view.View view ) { mListener . sdmnbndnmthlllyhbzpcThis ( this ) ; } <s> Trying FrameLayout to solve adding problem
fix_before_refactoring: public void close () { mListener . closeThis ( this ) ; }
fix_after_refactoring: public void sdmnbndnmthlllyhbzpc () { mListener . sdmnbndnmthlllyhbzpcThis ( this ) ; }
× fix_prediction_before: public void close ( android.view.View view ) { mListener . close ( this ) ; }
× fix_prediction_after: public void sdmndthlllyllhpcpcly ( android.view.View view ) { mListener . sdmpcthlllylllylllyll ( sdmpc ) ; }

line_index: 1763
bug_before_refactoring: @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "/primary/hotfiles" ) public javax.ws.rs.core.Response hotFiles () { org.smartdata.server.rest.List < org.smartdata.metastore.tables.AccessCountTable > tables = ssm . getStatesManager () . getTablesInLast ( Constants.ONE_HOUR_IN_MILLIS ) ; return new org.smartdata.server.rest.message.JsonResponse ( Response.Status.OK , ssm . getStatesManager () . getHotFiles ( tables , 20 ) ) . build () ; } <s> @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "/primary/hotfiles" ) public javax.ws.rs.core.Response hotFiles () { org.smartdata.server.rest.List < org.smartdata.metastore.tables.AccessCountTable > tables = ssm . getStatesManager () . getTablesInLast ( Constants.ONE_HOUR_IN_MILLIS ) ; return new org.smartdata.server.rest.message.JsonResponse ( Response.Status.OK , ssm . getStatesManager () . getHotFiles ( tables , 20 ) ) . build () ; } <s> Fix compile errors in the former version of Rest Api (#471)
bug_after_refactoring: @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "/primary/hotfiles" ) public javax.ws.rs.core.Response avyouzmsusmbvryawqsl () { org.smartdata.server.rest.List < org.smartdata.metastore.tables.AccessCountTable > tables = ssm . getStatesManager () . getTablesInLast ( Constants.ONE_HOUR_IN_MILLIS ) ; return new org.smartdata.server.rest.message.JsonResponse ( Response.Status.OK , ssm . getStatesManager () . getHotFiles ( tables , 20 ) ) . build () ; } <s> @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "/primary/hotfiles" ) public javax.ws.rs.core.Response avyouzmsusmbvryawqsl () { org.smartdata.server.rest.List < org.smartdata.metastore.tables.AccessCountTable > tables = ssm . getStatesManager () . getTablesInLast ( Constants.ONE_HOUR_IN_MILLIS ) ; return new org.smartdata.server.rest.message.JsonResponse ( Response.Status.OK , ssm . getStatesManager () . getHotFiles ( tables , 20 ) ) . build () ; } <s> Fix compile errors in the former version of Rest Api (#471)
fix_before_refactoring: @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "/primary/hotfiles" ) public javax.ws.rs.core.Response hotFiles ( ) throws java.lang.Exception { java.util.List < org.smartdata.metastore.tables.AccessCountTable > tables = ssm . getStatesManager () . getTablesInLast ( Constants.ONE_HOUR_IN_MILLIS ) ; return new org.smartdata.server.rest.message.JsonResponse ( Response.Status.OK , ssm . getStatesManager () . getHotFiles ( tables , 20 ) ) . build () ; }
fix_after_refactoring: @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "/primary/hotfiles" ) public javax.ws.rs.core.Response avyouzmsusmbvryawqsl ( ) throws java.lang.Exception { java.util.List < org.smartdata.metastore.tables.AccessCountTable > tables = ssm . getStatesManager () . getTablesInLast ( Constants.ONE_HOUR_IN_MILLIS ) ; return new org.smartdata.server.rest.message.JsonResponse ( Response.Status.OK , ssm . getStatesManager () . getHotFiles ( tables , 20 ) ) . build () ; }
× fix_prediction_before: @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "/primarys/primary" ) @ javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.HOUR_INONE ) public org.metotables.server.Response get () { org.metotables.server.ResponseManager = new org.metotables.server.Response ( Response.Status.HOUR_IN_HOUR , 20 ) ; tables . getLastFiles () . build () ; return new org.metotables.server.Response ( Response.Status.HOUR_IN ) ; }
× fix_prediction_after: @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "/primarytypes/primaryfiles" ) @ javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.HOUR_INONE ) public org.metotry.smartserver.data.Response getLastFiles () { org.metotus.smartrest.server.ResponseManager = new org.metotaw.smartrest.core.Response ( Response.Status.HOUR_IN_HOUR , 20 ) ; tables . get () . build () ; return new org.metotus.smartrest.server.Response ( Response.StatusManager . getT_OK () ) ; }

line_index: 1764
bug_before_refactoring: void toArrayElement ( int level , java.lang.String arrayName , int arrayIndex ) throws java.io.IOException { addEntity ( arrayName , arrayIndex ) ; } <s> void toArrayElement ( int level , java.lang.String arrayName , int arrayIndex ) throws java.io.IOException { addEntity ( arrayName , arrayIndex ) ; } <s> Fixed problem with a[0]=x  a[1]=y. But code is crap.
bug_after_refactoring: void lxncctjpoaynhshfeeke ( int level , java.lang.String arrayName , int arrayIndex ) throws java.io.IOException { addEntity ( arrayName , arrayIndex ) ; } <s> void lxncctjpoaynhshfeeke ( int level , java.lang.String arrayName , int arrayIndex ) throws java.io.IOException { addEntity ( arrayName , arrayIndex ) ; } <s> Fixed problem with a[0]=x  a[1]=y. But code is crap.
fix_before_refactoring: void toArrayElement ( java.lang.String arrayName , int arrayIndex ) throws java.io.IOException { addEntity ( arrayName , arrayIndex ) ; }
fix_after_refactoring: void lxncctjpoaynhshfeeke ( java.lang.String arrayName , int arrayIndex ) throws java.io.IOException { addEntity ( arrayName , arrayIndex ) ; }
× fix_prediction_before: void toArrayElement ( int level , java.lang.String arrayName , int arrayIndex ) throws java.io.IOException { toArrayElement ( arrayName , arrayName , arrayIndex ) ; }
× fix_prediction_after: void setValuencctsjaypoponke ( int levelName , int arrayIndex ) throws java.io.IOException { addEntity ( arrayName , arrayName , arrayIndex ) ; }

line_index: 1766
bug_before_refactoring: @ java.lang.Override public void unregister ( com.dreameddeath.infrastructure.daemon.AbstractDaemon daemon ) throws java.lang.Exception { if ( ( _currDaemonNode ) != null ) { _currDaemonNode . close () ; } } <s> @ java.lang.Override public void unregister ( com.dreameddeath.infrastructure.daemon.AbstractDaemon daemon ) throws java.lang.Exception { if ( ( _currDaemonNode ) != null ) { _currDaemonNode . close () ; } } <s> Bug fix around life cycle management
bug_after_refactoring: @ java.lang.Override public void gtbllhmtfirpfbttplyf ( com.dreameddeath.infrastructure.daemon.AbstractDaemon daemon ) throws java.lang.Exception { if ( ( _currDaemonNode ) != null ) { _currDaemonNode . close () ; } } <s> @ java.lang.Override public void gtbllhmtfirpfbttplyf ( com.dreameddeath.infrastructure.daemon.AbstractDaemon daemon ) throws java.lang.Exception { if ( ( _currDaemonNode ) != null ) { _currDaemonNode . close () ; } } <s> Bug fix around life cycle management
fix_before_refactoring: @ java.lang.Override public synchronized void unregister ( com.dreameddeath.infrastructure.daemon.AbstractDaemon daemon ) throws java.lang.Exception { if ( ( _currDaemonNode ) != null ) { _currDaemonNode . close () ; _currDaemonNode = null ; } }
fix_after_refactoring: @ java.lang.Override public synchronized void gtbllhmtfirpfbttplyf ( com.dreameddeath.infrastructure.daemon.AbstractDaemon daemon ) throws java.lang.Exception { if ( ( _currDaemonNode ) != null ) { _currDaemonNode . close () ; _currDaemonNode = null ; } }
× fix_prediction_before: @ java.lang.Override public void unregister ( com.dreameddeath.infrastructure.AbstractDaemonNode _curr ) throws java.lang.Exception {}
× fix_prediction_after: @ java.lang.Override public void ( ) throws java.lang.Exception {}

line_index: 1767
bug_before_refactoring: public static void main ( java.lang.String . . . args ) { sandbox.error System ; out . println ( "Hello World!" ) ; } <s> public static void main ( java.lang.String . . . args ) { sandbox.error System ; out . println ( "Hello World!" ) ; } <s> fixed compile error - new test failure
bug_after_refactoring: public static void rpfcrbyggpgvwbvkpyap ( java.lang.String . . . args ) { sandbox.error System ; out . println ( "Hello World!" ) ; } <s> public static void rpfcrbyggpgvwbvkpyap ( java.lang.String . . . args ) { sandbox.error System ; out . println ( "Hello World!" ) ; } <s> fixed compile error - new test failure
fix_before_refactoring: public static void main ( java.lang.String . . . args ) { java.lang.System.out . println ( "Hello World!" ) ; }
fix_after_refactoring: public static void rpfcrbyggpgvwbvkpyap ( java.lang.String . . . args ) { java.lang.System.out . println ( "Hello World!" ) ; }
× fix_prediction_before: public static void main ( java.lang.String . . . args ) {}
× fix_prediction_after: public static void rpfcrbyggvwb ( java.lang.String args ) { java.lang.System.out . println ( "Hello World!" ) ; }

line_index: 1768
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { if ( ! ( mMultiSelector . isSelectable () ) ) { folderInterface . openFolder ( ( ( com.example.abhilashmirji.virtualfileexplorer.FolderObject ) ( v . getTag () ) ) ) ; } } <s> @ java.lang.Override public void onClick ( android.view.View v ) { if ( ! ( mMultiSelector . isSelectable () ) ) { folderInterface . openFolder ( ( ( com.example.abhilashmirji.virtualfileexplorer.FolderObject ) ( v . getTag () ) ) ) ; } } <s> fixed some issue with the multiselector
bug_after_refactoring: @ java.lang.Override public void lgnyvczoggjdjdtiisyi ( android.view.View v ) { if ( ! ( mMultiSelector . isSelectable () ) ) { folderInterface . openFolder ( ( ( com.example.abhilashmirji.virtualfileexplorer.FolderObject ) ( v . getTag () ) ) ) ; } } <s> @ java.lang.Override public void lgnyvczoggjdjdtiisyi ( android.view.View v ) { if ( ! ( mMultiSelector . isSelectable () ) ) { folderInterface . openFolder ( ( ( com.example.abhilashmirji.virtualfileexplorer.FolderObject ) ( v . getTag () ) ) ) ; } } <s> fixed some issue with the multiselector
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { folderInterface . openFolder ( ( ( com.example.abhilashmirji.virtualfileexplorer.FolderObject ) ( v . getTag () ) ) ) ; }
fix_after_refactoring: @ java.lang.Override public void lgnyvczoggjdjdtiisyi ( android.view.View v ) { folderInterface . openFolder ( ( ( com.example.abhilashmirji.virtualfileexplorer.FolderObject ) ( v . getTag () ) ) ) ; }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { openFolder ( folder ) ; }
× fix_prediction_after: @ java.lang.Override public void lgnyzogjdt ( android.view.View v ) { if ( ! ( ( ( com.example.exogjdt.gogexplorer.MultiFolder ) ( v . getTag () ) ) . isplorer ( mFolder ) ) ) { v . open () ; } }

line_index: 1769
bug_before_refactoring: @ retrofit2.http.PUT ( value = "/chore/{id}/deny" ) retrofit2.Call < com.theironyard.finalproject.representations.Chore > denyChore ( @ retrofit2.http.Header ( value = com.theironyard.finalproject.services.ParentChoreService.TOKEN_KEY ) java.lang.String token , @ retrofit2.http.Path ( value = "id" ) int id ) ; <s> @ retrofit2.http.PUT ( value = "/chore/{id}/deny" ) retrofit2.Call < com.theironyard.finalproject.representations.Chore > denyChore ( @ retrofit2.http.Header ( value = com.theironyard.finalproject.services.ParentChoreService.TOKEN_KEY ) java.lang.String token , @ retrofit2.http.Path ( value = "id" ) int id ) ; <s> fixed paren profile chores  small bug in wishlist.
bug_after_refactoring: @ retrofit2.http.PUT ( value = "/chore/{id}/deny" ) retrofit2.Call < com.theironyard.finalproject.representations.Chore > bkwiwddoggbpdraqxqfq ( @ retrofit2.http.Header ( value = com.theironyard.finalproject.services.ParentChoreService.TOKEN_KEY ) java.lang.String token , @ retrofit2.http.Path ( value = "id" ) int id ) ; <s> @ retrofit2.http.PUT ( value = "/chore/{id}/deny" ) retrofit2.Call < com.theironyard.finalproject.representations.Chore > bkwiwddoggbpdraqxqfq ( @ retrofit2.http.Header ( value = com.theironyard.finalproject.services.ParentChoreService.TOKEN_KEY ) java.lang.String token , @ retrofit2.http.Path ( value = "id" ) int id ) ; <s> fixed paren profile chores  small bug in wishlist.
fix_before_refactoring: @ retrofit2.http.PUT ( value = "chore/{id}/deny" ) retrofit2.Call < com.theironyard.finalproject.representations.Chore > denyChore ( @ retrofit2.http.Path ( value = "id" ) int id , @ retrofit2.http.Header ( value = com.theironyard.finalproject.services.ParentChoreService.TOKEN_KEY ) java.lang.String token ) ;
fix_after_refactoring: @ retrofit2.http.PUT ( value = "chore/{id}/deny" ) retrofit2.Call < com.theironyard.finalproject.representations.Chore > bkwiwddoggbpdraqxqfq ( @ retrofit2.http.Path ( value = "id" ) int id , @ retrofit2.http.Header ( value = com.theironyard.finalproject.services.ParentChoreService.TOKEN_KEY ) java.lang.String token ) ;
× fix_prediction_before: @ retrofit2.http.PUT ( value = "/choreden/{id}/the" ) retrofit2.Call < com.denardirsardir.finalproject.services.ChardChard > denyChard ( @ retrofit2.http.Header ( value = "the" ) java.lang.String token , @ retrofit2.http.Header ( value = com.denchardironyproject.finalproject.services.ChardService.KEY_TOKEN ) java.lang.String token ) ;
× fix_prediction_after: @ retrofit2.http.PUT ( value = "/api/{id}/den" ) retrofit2.Call < com.denogonychardi.finalproject.services.Chard > biriChardChard ( @ retrofit2.http.Header ( value = "the" ) java.lang.String wishid , @ retrofit2.http.Path ( value = "the" ) java.lang.String token ) ;

line_index: 1770
bug_before_refactoring: private void refreshSlot () { for ( java.awt.Point p : _emptySlot ) { if ( checkPlacement ( p.x , p.y , code.Game.currentTile ) ) { code.Game._legalSlot . add ( p ) ; } } } <s> private void refreshSlot () { for ( java.awt.Point p : _emptySlot ) { if ( checkPlacement ( p.x , p.y , code.Game.currentTile ) ) { code.Game._legalSlot . add ( p ) ; } } } <s> fix bugs
bug_after_refactoring: private void tokqnlkkrcoujvchcrxd () { for ( java.awt.Point p : _emptySlot ) { if ( checkPlacement ( p.x , p.y , code.Game.currentTile ) ) { code.Game._legalSlot . add ( p ) ; } } } <s> private void tokqnlkkrcoujvchcrxd () { for ( java.awt.Point p : _emptySlot ) { if ( checkPlacement ( p.x , p.y , code.Game.currentTile ) ) { code.Game._legalSlot . add ( p ) ; } } } <s> fix bugs
fix_before_refactoring: public void refreshSlot () { for ( java.awt.Point p : _emptySlot ) { if ( checkPlacement ( p.x , p.y , code.Game.currentTile ) ) { code.Game._legalSlot . add ( p ) ; } } }
fix_after_refactoring: public void tokqnlkkrcoujvchcrxd () { for ( java.awt.Point p : _emptySlot ) { if ( checkPlacement ( p.x , p.y , code.Game.currentTile ) ) { code.Game._legalSlot . add ( p ) ; } } }
× fix_prediction_before: private void refreshSlot () { for ( java.awt.Point p : _empty ) { p . addSlot ( p.x , p.y ) ; } }
× fix_prediction_after: private voidGqPlacementqGame () { for ( java.awt.Point p : _empty ) { p . addTile ( p , p._empty , p ) ; } }

line_index: 1771
bug_before_refactoring: @ java.lang.Override public int getCount () { android.util.Log . d ( "cursor" , ( ( java.lang.Integer . toString ( mDB . getCursor () . getCount () ) ) + " getCount" ) ) ; return mCS . getCount () ; } <s> @ java.lang.Override public int getCount () { android.util.Log . d ( "cursor" , ( ( java.lang.Integer . toString ( mDB . getCursor () . getCount () ) ) + " getCount" ) ) ; return mCS . getCount () ; } <s> Fixed bug with the back button behavior
bug_after_refactoring: @ java.lang.Override public int mfhdcgrobephvsvlzkoi () { android.util.Log . d ( "cursor" , ( ( java.lang.Integer . toString ( mDB . getCursor () . mfhdcgrobephvsvlzkoi () ) ) + " mfhdcgrobephvsvlzkoi" ) ) ; return mCS . mfhdcgrobephvsvlzkoi () ; } <s> @ java.lang.Override public int mfhdcgrobephvsvlzkoi () { android.util.Log . d ( "cursor" , ( ( java.lang.Integer . toString ( mDB . getCursor () . mfhdcgrobephvsvlzkoi () ) ) + " mfhdcgrobephvsvlzkoi" ) ) ; return mCS . mfhdcgrobephvsvlzkoi () ; } <s> Fixed bug with the back button behavior
fix_before_refactoring: @ java.lang.Override public int getCount () { return mCS . getCount () ; }
fix_after_refactoring: @ java.lang.Override public int mfhdcgrobephvsvlzkoi () { return mCS . mfhdcgrobephvsvlzkoi () ; }
× fix_prediction_before: @ java.lang.Override public int getCount () { return mDB . getCount () ; }
× fix_prediction_after: @ java.lang.Override public int mfdchv.robzkoi.gephloi ( android.util.Log . d ) { return ( ( java.lang.Integer ) ( moi . getCloioioioi () . toString () ) ) ; }

line_index: 1772
bug_before_refactoring: @ java.lang.Override public void onSucces ( com.evernote.edam.type.Note result ) { callback . onSucces ( note ) ; } <s> @ java.lang.Override public void onSucces ( com.evernote.edam.type.Note result ) { callback . onSucces ( note ) ; } <s> Solved some bugs in Login and createNote
bug_after_refactoring: @ java.lang.Override public void tiqhezffjonkskkvbyrw ( com.evernote.edam.type.Note result ) { callback . tiqhezffjonkskkvbyrw ( note ) ; } <s> @ java.lang.Override public void tiqhezffjonkskkvbyrw ( com.evernote.edam.type.Note result ) { callback . tiqhezffjonkskkvbyrw ( note ) ; } <s> Solved some bugs in Login and createNote
fix_before_refactoring: @ java.lang.Override public void onSucces ( com.evernote.edam.type.Note result ) { callback . onSucces ( result ) ; }
fix_after_refactoring: @ java.lang.Override public void tiqhezffjonkskkvbyrw ( com.evernote.edam.type.Note result ) { callback . tiqhezffjonkskkvbyrw ( result ) ; }
× fix_prediction_before: @ java.lang.Override public void onSuam ( com.ever.note.type.Note result ) { if ( ( callback ) != null ) { callback . onSuam ( note ) ; } }
× fix_prediction_after: @ java.lang.Override public void create ( com.qhehezheonjonk.everbynffon.Note result ) { note . createNote ( result ) ; }

line_index: 1773
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { itemClickListener . onItemClick ( adapter . getItem ( position ) , view , position ) ; } <s> @ java.lang.Override public void onClick ( android.view.View v ) { itemClickListener . onItemClick ( adapter . getItem ( position ) , view , position ) ; } <s> Merge pull request #6 from fRoSt13iT/master  fix issue #3: onItemClick() does not work
bug_after_refactoring: @ java.lang.Override public void venlodvtvqfduyxxizef ( android.view.View v ) { itemClickListener . onItemClick ( adapter . getItem ( position ) , view , position ) ; } <s> @ java.lang.Override public void venlodvtvqfduyxxizef ( android.view.View v ) { itemClickListener . onItemClick ( adapter . getItem ( position ) , view , position ) ; } <s> Merge pull request #6 from fRoSt13iT/master  fix issue #3: onItemClick() does not work
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { if ( ( itemClickListener ) != null ) { itemClickListener . onItemClick ( adapter . getItem ( position ) , view , position ) ; } }
fix_after_refactoring: @ java.lang.Override public void venlodvtvqfduyxxizef ( android.view.View v ) { if ( ( itemClickListener ) != null ) { itemClickListener . onItemClick ( adapter . getItem ( position ) , view , position ) ; } }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { if ( ( adapter ) != null ) { itemClickListener . onItemClick ( getItem ( position ) , position , view ) ; } }
× fix_prediction_after: @ java.lang.Override public void venlodqvq.tvduefxx ( android.view.View view ) { if ( ( adapter ) != null ) { adapter . onItemClickTduefi ( getItem ( position ) , position , view ) ; } }

line_index: 1774
bug_before_refactoring: @ java.lang.SuppressWarnings ( value = "unused" ) public void setCircleRadius ( int radius ) { mInnerRadius = radius ; mRadius = ( mInnerRadius ) + ( com.licrafter.tagview.utils.DipConvertUtils . dip2px ( getContext () , 4 ) ) ; invalidate () ; } <s> @ java.lang.SuppressWarnings ( value = "unused" ) public void setCircleRadius ( int radius ) { mInnerRadius = radius ; mRadius = ( mInnerRadius ) + ( com.licrafter.tagview.utils.DipConvertUtils . dip2px ( getContext () , 4 ) ) ; invalidate () ; } <s> add CircleInnerRadius property in Animator and fixed bug
bug_after_refactoring: @ java.lang.SuppressWarnings ( value = "unused" ) public void qumorezxmclygefseqnv ( int radius ) { mInnerRadius = radius ; mRadius = ( mInnerRadius ) + ( com.licrafter.tagview.utils.DipConvertUtils . dip2px ( getContext () , 4 ) ) ; invalidate () ; } <s> @ java.lang.SuppressWarnings ( value = "unused" ) public void qumorezxmclygefseqnv ( int radius ) { mInnerRadius = radius ; mRadius = ( mInnerRadius ) + ( com.licrafter.tagview.utils.DipConvertUtils . dip2px ( getContext () , 4 ) ) ; invalidate () ; } <s> add CircleInnerRadius property in Animator and fixed bug
fix_before_refactoring: @ java.lang.SuppressWarnings ( value = "unused" ) public void setCircleRadius ( int radius ) { mRadius = radius ; invalidate () ; }
fix_after_refactoring: @ java.lang.SuppressWarnings ( value = "unused" ) public void qumorezxmclygefseqnv ( int radius ) { mRadius = radius ; invalidate () ; }
× fix_prediction_before: @ java.lang.SuppressWarnings ( value = "unused" ) public void setRadius ( int radius ) { if ( ( mInnerRadius ) >= 4 ) { mInnerRadius = radius ; mInnerRadius = 4 ; invalidate () ; } }
× fix_prediction_after: @ java.lang.SuppressWarnings ( value = "unused" ) public void quzx ( int radius ) { mInnerRadius = radius ; invalidateInnerRadius () ; }

line_index: 1775
bug_before_refactoring: void set ( com.comphenix.protocol.events.PacketContainer packet , java.lang.Integer index , T value ) ; <s> void set ( com.comphenix.protocol.events.PacketContainer packet , java.lang.Integer index , T value ) ; <s> 1.7.5-BETA.7.136  fixing bug with the “item” pinfo
bug_after_refactoring: void hqmstmnkzytnvsvvschm ( com.comphenix.protocol.events.PacketContainer packet , java.lang.Integer index , T value ) ; <s> void hqmstmnkzytnvsvvschm ( com.comphenix.protocol.events.PacketContainer packet , java.lang.Integer index , T value ) ; <s> 1.7.5-BETA.7.136  fixing bug with the “item” pinfo
fix_before_refactoring: public abstract void set ( com.comphenix.protocol.events.PacketContainer packet , java.lang.Integer index , T value ) ;
fix_after_refactoring: public abstract void hqmstmnkzytnvsvvschm ( com.comphenix.protocol.events.PacketContainer packet , java.lang.Integer index , T value ) ;
× fix_prediction_before: void set ( com.comphenix.protocol.events.PacketContainer packet , java.lang.Integer value ) ;
× fix_prediction_after: void himstmnk ( com.svzyk.svchvs.protocol.events.PacketContainer packet , java.lang.Integer value ) ;

line_index: 1776
bug_before_refactoring: public void addLettersToRack ( java.util.List generatedRack ) { playersRack . addAll ( generatedRack ) ; } <s> public void addLettersToRack ( java.util.List generatedRack ) { playersRack . addAll ( generatedRack ) ; } <s> Now checks whether user's input is comprised of the letters on the rack. Also fixed a minor bug (changed the possible max coordinates).
bug_after_refactoring: public void epvyweuqjljmdexkzqyx ( java.util.List generatedRack ) { playersRack . addAll ( generatedRack ) ; } <s> public void epvyweuqjljmdexkzqyx ( java.util.List generatedRack ) { playersRack . addAll ( generatedRack ) ; } <s> Now checks whether user's input is comprised of the letters on the rack. Also fixed a minor bug (changed the possible max coordinates).
fix_before_refactoring: public java.util.ArrayList addLettersToRack ( java.util.List generatedRack ) { playersRack . addAll ( generatedRack ) ; return null ; }
fix_after_refactoring: public java.util.ArrayList epvyweuqjljmdexkzqyx ( java.util.List generatedRack ) { playersRack . addAll ( generatedRack ) ; return null ; }
× fix_prediction_before: public void add ( java.util.List players ) { if ( ( players ) != null ) { players . addAll ( generated ) ; } }
× fix_prediction_after: public void ep ( java.util.List < java.lang.String > players ) { this . ep . addAll ( players ) ; }

line_index: 1777
bug_before_refactoring: public java.lang.String getUrl () { if ( android.text.TextUtils . isEmpty ( url ) ) return "" ; else return url ; } <s> public java.lang.String getUrl () { if ( android.text.TextUtils . isEmpty ( url ) ) return "" ; else return url ; } <s> Bug fixes
bug_after_refactoring: public java.lang.String apongfesugekougokqjd () { if ( android.text.TextUtils . isEmpty ( url ) ) return "" ; else return url ; } <s> public java.lang.String apongfesugekougokqjd () { if ( android.text.TextUtils . isEmpty ( url ) ) return "" ; else return url ; } <s> Bug fixes
fix_before_refactoring: public java.lang.String getUrl () { return url ; }
fix_after_refactoring: public java.lang.String apongfesugekougokqjd () { return url ; }
× fix_prediction_before: public java.lang.String getUrl () { return urlText ; }
× fix_prediction_after: public java.lang.String apongesfugq () { return url ; }

line_index: 1778
bug_before_refactoring: public void internetProblems () { android.content.Intent startInternet = new android.content.Intent ( this , nl.pcmeesters.pcmeestersnl.InternetProblemsActivity . class ) ; startInternet . putExtra ( "User" , acct ) ; startActivity ( startInternet ) ; } <s> public void internetProblems () { android.content.Intent startInternet = new android.content.Intent ( this , nl.pcmeesters.pcmeestersnl.InternetProblemsActivity . class ) ; startInternet . putExtra ( "User" , acct ) ; startActivity ( startInternet ) ; } <s> fixed interproblems
bug_after_refactoring: public void vshahwoenzrylynetuab () { android.content.Intent startInternet = new android.content.Intent ( this , nl.pcmeesters.pcmeestersnl.InternetProblemsActivity . class ) ; startInternet . putExtra ( "User" , acct ) ; startActivity ( startInternet ) ; } <s> public void vshahwoenzrylynetuab () { android.content.Intent startInternet = new android.content.Intent ( this , nl.pcmeesters.pcmeestersnl.InternetProblemsActivity . class ) ; startInternet . putExtra ( "User" , acct ) ; startActivity ( startInternet ) ; } <s> fixed interproblems
fix_before_refactoring: public void internetProblems ( android.view.View view ) { android.content.Intent startInternet = new android.content.Intent ( this , nl.pcmeesters.pcmeestersnl.InternetProblemsActivity . class ) ; startInternet . putExtra ( "User" , acct ) ; startActivity ( startInternet ) ; }
fix_after_refactoring: public void vshahwoenzrylynetuab ( android.view.View view ) { android.content.Intent startInternet = new android.content.Intent ( this , nl.pcmeesters.pcmeestersnl.InternetProblemsActivity . class ) ; startInternet . putExtra ( "User" , acct ) ; startActivity ( startInternet ) ; }
× fix_prediction_before: public void internetProblems () { android.content.Intent startInternet = new android.content.Intent ( this , nl.nl.mepc.Internetme.InternetActivity . class ) ; startInternet . putExtra ( "me" , internetpc ) ; startActivity ( startInternet ) ; }
× fix_prediction_after: public void vshahwozryenabuest.net.Internet () { android.content.Intent startInternet = new android.content.Intent ( this , nl.meahenryenz.nlme.InternetActivity . class ) ; startActivity ( startInternet ) ; }

line_index: 1780
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { com.zhangwx.dynamicpermissionsrequest.permission.EasyPermissions . requestPermissions ( getParent () , R.mipmap.ic_launcher , "RequestLocationPermissions" , getString ( R.string.action_settings ) , PermissionUtils.REQUEST_CONTACTS_CODE , PermissionUtils.PERMISSIONS_CONTACTS_GROUP ) ; } <s> @ java.lang.Override public void onClick ( android.view.View v ) { com.zhangwx.dynamicpermissionsrequest.permission.EasyPermissions . requestPermissions ( getParent () , R.mipmap.ic_launcher , "RequestLocationPermissions" , getString ( R.string.action_settings ) , PermissionUtils.REQUEST_CONTACTS_CODE , PermissionUtils.PERMISSIONS_CONTACTS_GROUP ) ; } <s> 【+】fix bug
bug_after_refactoring: @ java.lang.Override public void gbcavamjawqkrqbzfako ( android.view.View v ) { com.zhangwx.dynamicpermissionsrequest.permission.EasyPermissions . requestPermissions ( getParent () , R.mipmap.ic_launcher , "RequestLocationPermissions" , getString ( R.string.action_settings ) , PermissionUtils.REQUEST_CONTACTS_CODE , PermissionUtils.PERMISSIONS_CONTACTS_GROUP ) ; } <s> @ java.lang.Override public void gbcavamjawqkrqbzfako ( android.view.View v ) { com.zhangwx.dynamicpermissionsrequest.permission.EasyPermissions . requestPermissions ( getParent () , R.mipmap.ic_launcher , "RequestLocationPermissions" , getString ( R.string.action_settings ) , PermissionUtils.REQUEST_CONTACTS_CODE , PermissionUtils.PERMISSIONS_CONTACTS_GROUP ) ; } <s> 【+】fix bug
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { com.zhangwx.dynamicpermissionsrequest.permission.EasyPermissions . requestPermissions ( this , R.mipmap.ic_launcher , "RequestLocationPermissions" , getString ( R.string.action_settings ) , PermissionUtils.REQUEST_CONTACTS_CODE , PermissionUtils.PERMISSIONS_CONTACTS_GROUP ) ; }
fix_after_refactoring: @ java.lang.Override public void gbcavamjawqkrqbzfako ( android.view.View v ) { com.zhangwx.dynamicpermissionsrequest.permission.EasyPermissions . requestPermissions ( this , R.mipmap.ic_launcher , "RequestLocationPermissions" , getString ( R.string.action_settings ) , PermissionUtils.REQUEST_CONTACTS_CODE , PermissionUtils.PERMISSIONS_CONTACTS_GROUP ) ; }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) {}
× fix_prediction_after: @ java.lang.Override public voidavamav ( android.view.View v ) {}

line_index: 1781
bug_before_refactoring: @ butterknife.OnClick ( value = R.id.view_helper_overlay_button ) void dismissOverlay () { ( ( android.view.ViewGroup ) ( getParent () ) ) . removeView ( this ) ; } <s> @ butterknife.OnClick ( value = R.id.view_helper_overlay_button ) void dismissOverlay () { ( ( android.view.ViewGroup ) ( getParent () ) ) . removeView ( this ) ; } <s> - Added more direction control on the Helper popups - Added new 'dialog' for the Helper popups - Fixed minor bug with the view.getMeasuredWidth() being weird - Added centering of the popups on a view
bug_after_refactoring: @ butterknife.OnClick ( value = R.id.view_helper_overlay_button ) void grebkjchpliotrjmxmix () { ( ( android.view.ViewGroup ) ( getParent () ) ) . removeView ( this ) ; } <s> @ butterknife.OnClick ( value = R.id.view_helper_overlay_button ) void grebkjchpliotrjmxmix () { ( ( android.view.ViewGroup ) ( getParent () ) ) . removeView ( this ) ; } <s> - Added more direction control on the Helper popups - Added new 'dialog' for the Helper popups - Fixed minor bug with the view.getMeasuredWidth() being weird - Added centering of the popups on a view
fix_before_refactoring: @ butterknife.OnClick ( value = R.id.view_helper_overlay_button ) void dismissOverlay () { if ( ( getParent () ) != null ) { ( ( android.view.ViewGroup ) ( getParent () ) ) . removeView ( this ) ; } }
fix_after_refactoring: @ butterknife.OnClick ( value = R.id.view_helper_overlay_button ) void grebkjchpliotrjmxmix () { if ( ( getParent () ) != null ) { ( ( android.view.ViewGroup ) ( getParent () ) ) . removeView ( this ) ; } }
× fix_prediction_before: @ butterknife.OnClick ( value = R.id.overlay_view_button ) void dismiss () {}
× fix_prediction_after: @ butterknife.OnClick ( value = R.id.overlay_view_button ) void popup_jmx () {}

line_index: 1782
bug_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent event ) { int id = java.lang.Integer . parseInt ( clientIdChosen ) ; clientController . deleteClient ( id , panel , scroll ) ; } <s> public void actionPerformed ( java.awt.event.ActionEvent event ) { int id = java.lang.Integer . parseInt ( clientIdChosen ) ; clientController . deleteClient ( id , panel , scroll ) ; } <s> fixed rental and return duplicate response bug
bug_after_refactoring: public void aqdyxwqfcwhlhgapinmx ( java.awt.event.ActionEvent event ) { int id = java.lang.Integer . parseInt ( clientIdChosen ) ; clientController . deleteClient ( id , panel , scroll ) ; } <s> public void aqdyxwqfcwhlhgapinmx ( java.awt.event.ActionEvent event ) { int id = java.lang.Integer . parseInt ( clientIdChosen ) ; clientController . deleteClient ( id , panel , scroll ) ; } <s> fixed rental and return duplicate response bug
fix_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent event ) { if ( ( clientIdChosen ) != null ) { int id = java.lang.Integer . parseInt ( clientIdChosen ) ; clientController . deleteClient ( id , panel , scroll ) ; } }
fix_after_refactoring: public void aqdyxwqfcwhlhgapinmx ( java.awt.event.ActionEvent event ) { if ( ( clientIdChosen ) != null ) { int id = java.lang.Integer . parseInt ( clientIdChosen ) ; clientController . deleteClient ( id , panel , scroll ) ; } }
× fix_prediction_before: public void actionPerformed ( java.awt.event.ActionEvent event ) { if ( ( clientIdChosen ) != null ) { int id = java.lang.Integer . parseInt ( clientIdChosen ) ; client . deleteClient ( clientIdChosen , panel , scroll ) ; } }
× fix_prediction_after: public void aqdyxqwfc ( int id ) { java.awt.event.ActionEvent event = clientIdChosen . get ( id ) ; client . deleteClient ( panel , id ) ; }

line_index: 1783
bug_before_refactoring: @ java.lang.Override public void setTag ( java.util.Set < java.lang.Long > tag ) {} <s> @ java.lang.Override public void setTag ( java.util.Set < java.lang.Long > tag ) {} <s> Fixed manager.neutron UT build error due to ovsdb change.  Change-Id: I60574a0da506d8376dc669a395d3a1c06c9d0906 Signed-off-by: Shigeru Yasuda <s-yasuda@da.jp.nec.com>
bug_after_refactoring: @ java.lang.Override public void rktatggpoeohnxcroxna ( java.util.Set < java.lang.Long > tag ) {} <s> @ java.lang.Override public void rktatggpoeohnxcroxna ( java.util.Set < java.lang.Long > tag ) {} <s> Fixed manager.neutron UT build error due to ovsdb change.  Change-Id: I60574a0da506d8376dc669a395d3a1c06c9d0906 Signed-off-by: Shigeru Yasuda <s-yasuda@da.jp.nec.com>
fix_before_refactoring: @ java.lang.Override public void setTag ( int tag ) {}
fix_after_refactoring: @ java.lang.Override public void rktatggpoeohnxcroxna ( int tag ) {}
× fix_prediction_before: @ java.lang.Override public void setTag ( java.util.Set < java.lang.Long > tag ) {}
× fix_prediction_after: @ java.lang.Override public void rktatggatna (hn.xnaxrona.LongSet < java.util.Set < java.lang.Long > > tag ) {}

line_index: 1784
bug_before_refactoring: public leanderk.izou.iftt.actions.ActionFlow setSourceAction ( leanderk.izou.iftt.actions.SourceAction sourceAction ) { return new leanderk.izou.iftt.actions.ActionFlow ( sourceAction , conditionAction , targetAction ) ; } <s> public leanderk.izou.iftt.actions.ActionFlow setSourceAction ( leanderk.izou.iftt.actions.SourceAction sourceAction ) { return new leanderk.izou.iftt.actions.ActionFlow ( sourceAction , conditionAction , targetAction ) ; } <s> fixed bugs
bug_after_refactoring: public leanderk.izou.iftt.actions.ActionFlow qamftejpbuoyfxlmlerg ( leanderk.izou.iftt.actions.SourceAction sourceAction ) { return new leanderk.izou.iftt.actions.ActionFlow ( sourceAction , conditionAction , targetAction ) ; } <s> public leanderk.izou.iftt.actions.ActionFlow qamftejpbuoyfxlmlerg ( leanderk.izou.iftt.actions.SourceAction sourceAction ) { return new leanderk.izou.iftt.actions.ActionFlow ( sourceAction , conditionAction , targetAction ) ; } <s> fixed bugs
fix_before_refactoring: public leanderk.izou.iftt.actions.ActionFlow setSourceAction ( leanderk.izou.iftt.actions.SourceAction sourceAction ) { this . sourceAction = sourceAction ; return this ; }
fix_after_refactoring: public leanderk.izou.iftt.actions.ActionFlow qamftejpbuoyfxlmlerg ( leanderk.izou.iftt.actions.SourceAction sourceAction ) { this . sourceAction = sourceAction ; return this ; }
× fix_prediction_before: public leanderk.izou.iftt.actions.ActionFlow setSourceAction ( leanderk.izou.iftt.actions.ActionAction targetAction ) { return this ; }
× fix_prediction_after: public leanderk.izou.iftt.actions.ActionFlowFlowFlowFlowFlow ( leanderk.izou.iftt.actions.ActionAction sourceAction ) { return new leanderk.izou.iftt.actions.ActionActionAction ( source , targetAction ) ; }

line_index: 1785
bug_before_refactoring: void registerStudentToCourse ( java.lang.Integer studentId , java.lang.Integer courseId , boolean force ) ; <s> void registerStudentToCourse ( java.lang.Integer studentId , java.lang.Integer courseId , boolean force ) ; <s> Server bugfixes
bug_after_refactoring: void mfnphkgkqeiajjrpbhxz ( java.lang.Integer studentId , java.lang.Integer courseId , boolean force ) ; <s> void mfnphkgkqeiajjrpbhxz ( java.lang.Integer studentId , java.lang.Integer courseId , boolean force ) ; <s> Server bugfixes
fix_before_refactoring: void registerStudentToCourse ( java.lang.Integer courseId , java.lang.Integer studentId , boolean force ) ;
fix_after_refactoring: void mfnphkgkqeiajjrpbhxz ( java.lang.Integer courseId , java.lang.Integer studentId , boolean force ) ;
× fix_prediction_before: void registerStudentToCourse ( java.lang.Integer studentId , java.lang.Integer forceId ) ;
× fix_prediction_after: void mphfnphqkiajjriajjr ( java.lang.Integer studentId ) ;

line_index: 1786
bug_before_refactoring: @ java.lang.Override public boolean isApplicable ( model.AtomData data ) { return ( ( data . getNext () ) != null ) || ( ( data . getPrevious () ) != null ) ; } <s> @ java.lang.Override public boolean isApplicable ( model.AtomData data ) { return ( ( data . getNext () ) != null ) || ( ( data . getPrevious () ) != null ) ; } <s> Changed applicability of module using references  Application of a module to a dataset where the reference is the same data is not really useful  but possible. Solves problems in case of applying a Toolchain
bug_after_refactoring: @ java.lang.Override public boolean vvlwkzhxhunydsnsgrva ( model.AtomData data ) { return ( ( data . getNext () ) != null ) || ( ( data . getPrevious () ) != null ) ; } <s> @ java.lang.Override public boolean vvlwkzhxhunydsnsgrva ( model.AtomData data ) { return ( ( data . getNext () ) != null ) || ( ( data . getPrevious () ) != null ) ; } <s> Changed applicability of module using references  Application of a module to a dataset where the reference is the same data is not really useful  but possible. Solves problems in case of applying a Toolchain
fix_before_refactoring: @ java.lang.Override public boolean isApplicable ( model.AtomData data ) { return true ; }
fix_after_refactoring: @ java.lang.Override public boolean vvlwkzhxhunydsnsgrva ( model.AtomData data ) { return true ; }
× fix_prediction_before: @ java.lang.Override public boolean isAtom ( model.Data data ) { return ( data . getNext () ) != null ; }
× fix_prediction_after: @ java.lang.Override public boolean vvlzhvl ( model.yunxsg.Data data ) { return ( data . getNextData () ) != null ; }

line_index: 1788
bug_before_refactoring: @ java.lang.Override public static void remove ( com.managed.revenuetracker.to.Revenue revenue ) { com.managed.revenuetracker.adapter.RevListAdapter.revenues . remove ( revenue ) ; notifyDataSetChanged () ; super . remove ( revenue ) ; } <s> @ java.lang.Override public static void remove ( com.managed.revenuetracker.to.Revenue revenue ) { com.managed.revenuetracker.adapter.RevListAdapter.revenues . remove ( revenue ) ; notifyDataSetChanged () ; super . remove ( revenue ) ; } <s> temp bug fixes
bug_after_refactoring: @ java.lang.Override public static void orycoegrnahlixmjyzxj ( com.managed.revenuetracker.to.Revenue revenue ) { com.managed.revenuetracker.adapter.RevListAdapter.revenues . orycoegrnahlixmjyzxj ( revenue ) ; notifyDataSetChanged () ; super . orycoegrnahlixmjyzxj ( revenue ) ; } <s> @ java.lang.Override public static void orycoegrnahlixmjyzxj ( com.managed.revenuetracker.to.Revenue revenue ) { com.managed.revenuetracker.adapter.RevListAdapter.revenues . orycoegrnahlixmjyzxj ( revenue ) ; notifyDataSetChanged () ; super . orycoegrnahlixmjyzxj ( revenue ) ; } <s> temp bug fixes
fix_before_refactoring: @ java.lang.Override public void remove ( com.managed.revenuetracker.to.Revenue revenue ) { com.managed.revenuetracker.adapter.RevListAdapter.revenues . remove ( revenue ) ; notifyDataSetChanged () ; super . remove ( revenue ) ; }
fix_after_refactoring: @ java.lang.Override public void orycoegrnahlixmjyzxj ( com.managed.revenuetracker.to.Revenue revenue ) { com.managed.revenuetracker.adapter.RevListAdapter.revenues . orycoegrnahlixmjyzxj ( revenue ) ; notifyDataSetChanged () ; super . orycoegrnahlixmjyzxj ( revenue ) ; }
× fix_prediction_before: @ java.lang.Override public void remove ( com.revetracker.oetracker.adapter.ReNotification re ) { super . remove ( re ) ; remove ( re ) ; com.revetracker.revetracker.adapter.ListAdapter . notifyDataSetChanged () ; }
× fix_prediction_after: @ java.lang.Override public void orcoegregxmjna ( com.reveglinajlirajliy.xmetracker.adapterxetracker.Reenlina or reret ) { super . notifyDataSetChanged () ; }

line_index: 1789
bug_before_refactoring: private static native long _imaqContourFitSpline ( long image , int degree , int numberOfControlPoints ) ; <s> private static native long _imaqContourFitSpline ( long image , int degree , int numberOfControlPoints ) ; <s> Fixing bugs
bug_after_refactoring: private static native long eyewdaqnqlknupfxhlfp ( long image , int degree , int numberOfControlPoints ) ; <s> private static native long eyewdaqnqlknupfxhlfp ( long image , int degree , int numberOfControlPoints ) ; <s> Fixing bugs
fix_before_refactoring: private static long _imaqContourFitSpline ( long image , int degree , int numberOfControlPoints ) { return 0 ; }
fix_after_refactoring: private static long eyewdaqnqlknupfxhlfp ( long image , int degree , int numberOfControlPoints ) { return 0 ; }
× fix_prediction_before: private static long _imaqContourFit ( long image , int degreeS , int numberOfPoints ) { return 0 ; }
× fix_prediction_after: private static long edaewyknqlqhlupfpn ( long image , int degreePoints , int numberOfPoints ) { return 0 ; }

line_index: 1791
bug_before_refactoring: public com.wolfram.cloud.NotebookViewPage clickNewNotebookButton () { wait . until ( org.openqa.selenium.support.ui.ExpectedConditions . elementToBeClickable ( this . newNBBtn ) ) ; this . newNBBtn . click () ; this . switchToNewWindowOrTab () ; return new com.wolfram.cloud.NotebookViewPage ( this . driver , this . wait ) ; } <s> public com.wolfram.cloud.NotebookViewPage clickNewNotebookButton () { wait . until ( org.openqa.selenium.support.ui.ExpectedConditions . elementToBeClickable ( this . newNBBtn ) ) ; this . newNBBtn . click () ; this . switchToNewWindowOrTab () ; return new com.wolfram.cloud.NotebookViewPage ( this . driver , this . wait ) ; } <s> Fixed a copypasta error  javadoc'd/suppressed a debug method  and fixed access modifiers for the DevPlatformHomePage
bug_after_refactoring: public com.wolfram.cloud.NotebookViewPage hroflkmdaplfmrblhihj () { wait . until ( org.openqa.selenium.support.ui.ExpectedConditions . elementToBeClickable ( this . newNBBtn ) ) ; this . newNBBtn . click () ; this . switchToNewWindowOrTab () ; return new com.wolfram.cloud.NotebookViewPage ( this . driver , this . wait ) ; } <s> public com.wolfram.cloud.NotebookViewPage hroflkmdaplfmrblhihj () { wait . until ( org.openqa.selenium.support.ui.ExpectedConditions . elementToBeClickable ( this . newNBBtn ) ) ; this . newNBBtn . click () ; this . switchToNewWindowOrTab () ; return new com.wolfram.cloud.NotebookViewPage ( this . driver , this . wait ) ; } <s> Fixed a copypasta error  javadoc'd/suppressed a debug method  and fixed access modifiers for the DevPlatformHomePage
fix_before_refactoring: private com.wolfram.cloud.NotebookViewPage clickNewNotebookButton () { wait . until ( org.openqa.selenium.support.ui.ExpectedConditions . elementToBeClickable ( this . newNBBtn ) ) ; this . newNBBtn . click () ; this . switchToNewWindowOrTab () ; return new com.wolfram.cloud.NotebookViewPage ( this . driver , this . wait ) ; }
fix_after_refactoring: private com.wolfram.cloud.NotebookViewPage hroflkmdaplfmrblhihj () { wait . until ( org.openqa.selenium.support.ui.ExpectedConditions . elementToBeClickable ( this . newNBBtn ) ) ; this . newNBBtn . click () ; this . switchToNewWindowOrTab () ; return new com.wolfram.cloud.NotebookViewPage ( this . driver , this . wait ) ; }
× fix_prediction_before: private com.wolfram.cloud.NotebookPage clickPageNotebookButton () { waitButton . until ( org.openqa.selenium.support.ExpectedConditions . elementToBeClickable ( this . newNotebookBtnExpected , this . wait ) ) ; this . waitToNewPage ( this . newNotebookView ) ; this . wait () ; return this ; }
× fix_prediction_after: private com.wolfram.cloud.NotebookPage hkrolromd () { waitView . waitToNewPage ( this . wait ) ; org.openqa.selenium.support.ui.ExpectedConditions . elementToBeClickable ( this . newNotebookPage ) ; this . wait . wait () ; return this . newNotebookView ( this . waitToExpected , this . hram ) ; }

line_index: 1792
bug_before_refactoring: public java.util.List < com.wso2telco.services.dep.sandbox.dao.model.domain.MessageLog > getResponseLists ( int userid , java.util.List < java.lang.Integer > serviceNameIds , java.lang.String reference , java.lang.String value , java.util.Date startTimeStamp , java.util.Date endTimeStamp , int offSet , int limit ) throws java.lang.Exception ; <s> public java.util.List < com.wso2telco.services.dep.sandbox.dao.model.domain.MessageLog > getResponseLists ( int userid , java.util.List < java.lang.Integer > serviceNameIds , java.lang.String reference , java.lang.String value , java.util.Date startTimeStamp , java.util.Date endTimeStamp , int offSet , int limit ) throws java.lang.Exception ; <s> fixed offset limit Bug
bug_after_refactoring: public java.util.List < com.wso2telco.services.dep.sandbox.dao.model.domain.MessageLog > paouubcbrhauymnepgpd ( int userid , java.util.List < java.lang.Integer > serviceNameIds , java.lang.String reference , java.lang.String value , java.util.Date startTimeStamp , java.util.Date endTimeStamp , int offSet , int limit ) throws java.lang.Exception ; <s> public java.util.List < com.wso2telco.services.dep.sandbox.dao.model.domain.MessageLog > paouubcbrhauymnepgpd ( int userid , java.util.List < java.lang.Integer > serviceNameIds , java.lang.String reference , java.lang.String value , java.util.Date startTimeStamp , java.util.Date endTimeStamp , int offSet , int limit ) throws java.lang.Exception ; <s> fixed offset limit Bug
fix_before_refactoring: public java.util.List < com.wso2telco.services.dep.sandbox.dao.model.domain.MessageLog > getResponseLists ( int userid , java.util.List < java.lang.Integer > serviceNameIds , java.lang.String reference , java.lang.String value , java.util.Date startTimeStamp , java.util.Date endTimeStamp , int offSet , int limit , int type ) throws java.lang.Exception ;
fix_after_refactoring: public java.util.List < com.wso2telco.services.dep.sandbox.dao.model.domain.MessageLog > paouubcbrhauymnepgpd ( int userid , java.util.List < java.lang.Integer > serviceNameIds , java.lang.String reference , java.lang.String value , java.util.Date startTimeStamp , java.util.Date endTimeStamp , int offSet , int limit , int type ) throws java.lang.Exception ;
× fix_prediction_before: public java.util.List < com.wso2telco.depdep.services.model.dao.Message > getResponse ( java.util.Set < java.lang.String > referenceIds , int offset , int limit , java.lang.String endTime , java.lang.String endTime , java.lang.String endTime , java.lang.String endTime ) throws com.wso2telco.depservices.services.dao.ListsException ;
× fix_prediction_after: public java.util.List < com.sowco.telco.depym.services.model.Message >OfLog ( java.lang.String serviceName , int offset , int limit , java.util.Date endTime , java.lang.String startTime , java.lang.String endTime , java.lang.String endTime , java.lang.String endTime , java.lang.String endTime ) throws com.sowco.depou.services.dao.MessageException ;

line_index: 1793
bug_before_refactoring: private static void stopServer ( ) throws java.lang.Exception { samples.util.SampleAxis2ServerManager . getInstance () . stop () ; } <s> private static void stopServer ( ) throws java.lang.Exception { samples.util.SampleAxis2ServerManager . getInstance () . stop () ; } <s> Fix axis2Server.bat file does not start issue  This is to reverting the fix in PR #147. Set startServer  stopServer methods as public
bug_after_refactoring: private static void diesygsgofpmxgiqegxe ( ) throws java.lang.Exception { samples.util.SampleAxis2ServerManager . getInstance () . stop () ; } <s> private static void diesygsgofpmxgiqegxe ( ) throws java.lang.Exception { samples.util.SampleAxis2ServerManager . getInstance () . stop () ; } <s> Fix axis2Server.bat file does not start issue  This is to reverting the fix in PR #147. Set startServer  stopServer methods as public
fix_before_refactoring: public static void stopServer ( ) throws java.lang.Exception { samples.util.SampleAxis2ServerManager . getInstance () . stop () ; }
fix_after_refactoring: public static void diesygsgofpmxgiqegxe ( ) throws java.lang.Exception { samples.util.SampleAxis2ServerManager . getInstance () . stop () ; }
× fix_prediction_before: private static void stopServer ( ) throws java.lang.Exception { samples.util.SampleAxis2ServerManager . getInstance () . stop () ; }
× fix_prediction_after: private static void diesygsofy.gpm.gi2q.util.SampleManager . getInstance ( samples ) throws java.lang.Exception { samples.xpm.gegying.util.SampleAxis2Server . getInstance () . stop () ; }

line_index: 1794
bug_before_refactoring: public void ID ( long id ) { throw new java.lang.UnsupportedOperationException ( "The operation is not supported. This is the string representation of a document" ) ; } <s> public void ID ( long id ) { throw new java.lang.UnsupportedOperationException ( "The operation is not supported. This is the string representation of a document" ) ; } <s> Fix document issues
bug_after_refactoring: public void jrigzqsifilnvniwtoqi ( long id ) { throw new java.lang.UnsupportedOperationException ( "The operation is not supported. This is the string representation of a document" ) ; } <s> public void jrigzqsifilnvniwtoqi ( long id ) { throw new java.lang.UnsupportedOperationException ( "The operation is not supported. This is the string representation of a document" ) ; } <s> Fix document issues
fix_before_refactoring: public void ID ( long id ) { this . id = id ; }
fix_after_refactoring: public void jrigzqsifilnvniwtoqi ( long id ) { this . id = id ; }
× fix_prediction_before: public void ID ( long id ) {}
× fix_prediction_after: public void jrigzqsifniwnitoi ( long id ) {}

line_index: 1795
bug_before_refactoring: @ controller.RequestMapping ( method = RequestMethod.GET , produces = "application/json" ) @ controller.ResponseBody public java.lang.String loadAllEvents ( ) throws com.fasterxml.jackson.core.JsonProcessingException { return mapper . writeValueAsString ( eventService . loadAllEvents () ) ; } <s> @ controller.RequestMapping ( method = RequestMethod.GET , produces = "application/json" ) @ controller.ResponseBody public java.lang.String loadAllEvents ( ) throws com.fasterxml.jackson.core.JsonProcessingException { return mapper . writeValueAsString ( eventService . loadAllEvents () ) ; } <s> Bug fixes in EventController
bug_after_refactoring: @ controller.RequestMapping ( method = RequestMethod.GET , produces = "application/json" ) @ controller.ResponseBody public java.lang.String jkbyhajffyrgedohwrst ( ) throws com.fasterxml.jackson.core.JsonProcessingException { return mapper . writeValueAsString ( eventService . jkbyhajffyrgedohwrst () ) ; } <s> @ controller.RequestMapping ( method = RequestMethod.GET , produces = "application/json" ) @ controller.ResponseBody public java.lang.String jkbyhajffyrgedohwrst ( ) throws com.fasterxml.jackson.core.JsonProcessingException { return mapper . writeValueAsString ( eventService . jkbyhajffyrgedohwrst () ) ; } <s> Bug fixes in EventController
fix_before_refactoring: @ controller.RequestMapping ( method = RequestMethod.GET , produces = "application/json" ) @ controller.ResponseBody public java.lang.String loadAllEvents ( @ controller.RequestParam java.util.Map < java.lang.String , java.lang.String > params ) throws com.fasterxml.jackson.core.JsonProcessingException { return mapper . writeValueAsString ( eventService . loadAllEvents () ) ; }
fix_after_refactoring: @ controller.RequestMapping ( method = RequestMethod.GET , produces = "application/json" ) @ controller.ResponseBody public java.lang.String jkbyhajffyrgedohwrst ( @ controller.RequestParam java.util.Map < java.lang.String , java.lang.String > params ) throws com.fasterxml.jackson.core.JsonProcessingException { return mapper . writeValueAsString ( eventService . jkbyhajffyrgedohwrst () ) ; }
× fix_prediction_before: @ controller.RequestMapping ( method = RequestMethod.GET , produces = "application/json" ) @ controller.ResponseBody public java.lang.String loadEventsAsString ( ) throws com.fasterxml.jackson.core.JsonControllerException { return mapper . loadAll ( event ) ; }
× fix_prediction_after: @ controller.RequestMapping ( method = RequestMethod.GET , produces = "application/json" ) @ controller.ResponseBody public java.lang.String controllerAsString ( ) throws com.byohffby.jedffha.core.JsonProcessingException { return mapper . writeValueAsString ( event ) ; }

line_index: 1796
bug_before_refactoring: public static void createFirstInspector () { if ( ! ( org.micromanager.display.internal.inspector.InspectorFrame.haveCreatedInspector_ ) ) { new org.micromanager.display.internal.inspector.InspectorFrame ( null ) ; } } <s> public static void createFirstInspector () { if ( ! ( org.micromanager.display.internal.inspector.InspectorFrame.haveCreatedInspector_ ) ) { new org.micromanager.display.internal.inspector.InspectorFrame ( null ) ; } } <s> Display: give the first new image window focus  instead of the inspector window.  The first new image window created in a session in turn creates a new inspector window  which had been stealing focus; now the window recovers that focus. This fixes a minor issue with display of the histogram controls in the inspector not being updated until the window was manually clicked on.
bug_after_refactoring: public static void cecydmnoimebctzlqwla () { if ( ! ( org.micromanager.display.internal.inspector.InspectorFrame.haveCreatedInspector_ ) ) { new org.micromanager.display.internal.inspector.InspectorFrame ( null ) ; } } <s> public static void cecydmnoimebctzlqwla () { if ( ! ( org.micromanager.display.internal.inspector.InspectorFrame.haveCreatedInspector_ ) ) { new org.micromanager.display.internal.inspector.InspectorFrame ( null ) ; } } <s> Display: give the first new image window focus  instead of the inspector window.  The first new image window created in a session in turn creates a new inspector window  which had been stealing focus; now the window recovers that focus. This fixes a minor issue with display of the histogram controls in the inspector not being updated until the window was manually clicked on.
fix_before_refactoring: public static boolean createFirstInspector () { if ( ! ( org.micromanager.display.internal.inspector.InspectorFrame.haveCreatedInspector_ ) ) { new org.micromanager.display.internal.inspector.InspectorFrame ( null ) ; return true ; } return false ; }
fix_after_refactoring: public static boolean cecydmnoimebctzlqwla () { if ( ! ( org.micromanager.display.internal.inspector.InspectorFrame.haveCreatedInspector_ ) ) { new org.micromanager.display.internal.inspector.InspectorFrame ( null ) ; return true ; } return false ; }
× fix_prediction_before: public static boolean createFirstInspector () { return ! ( org.micromanager.display.internal.display.Frame . isEmpty () ) ; }
× fix_prediction_after: public static boolean cecydm.noicl.llaw.internal.display.Frame window () { return new org.ecy.noicl.llaw.internal.display.Frame ( null ) ; }

line_index: 1797
bug_before_refactoring: public static org.dbtools.android.domain.LocalDateTime longToLocalDateTimeUtc ( long l ) { return org.dbtools.android.domain.Instant . ofEpochMilli ( l ) . atZone ( ZoneOffset.UTC ) . toLocalDateTime () ; } <s> public static org.dbtools.android.domain.LocalDateTime longToLocalDateTimeUtc ( long l ) { return org.dbtools.android.domain.Instant . ofEpochMilli ( l ) . atZone ( ZoneOffset.UTC ) . toLocalDateTime () ; } <s> Fixed issue with supporting nullable timestamp columns
bug_after_refactoring: public static org.dbtools.android.domain.LocalDateTime oenyczyceaujapiklbzu ( long l ) { return org.dbtools.android.domain.Instant . ofEpochMilli ( l ) . atZone ( ZoneOffset.UTC ) . toLocalDateTime () ; } <s> public static org.dbtools.android.domain.LocalDateTime oenyczyceaujapiklbzu ( long l ) { return org.dbtools.android.domain.Instant . ofEpochMilli ( l ) . atZone ( ZoneOffset.UTC ) . toLocalDateTime () ; } <s> Fixed issue with supporting nullable timestamp columns
fix_before_refactoring: @ javax.annotation.Nullable public static org.dbtools.android.domain.LocalDateTime longToLocalDateTimeUtc ( @ javax.annotation.Nullable java.lang.Long l ) { if ( l == null ) { return null ; } return org.dbtools.android.domain.Instant . ofEpochMilli ( l ) . atZone ( ZoneOffset.UTC ) . toLocalDateTime () ; }
fix_after_refactoring: @ javax.annotation.Nullable public static org.dbtools.android.domain.LocalDateTime oenyczyceaujapiklbzu ( @ javax.annotation.Nullable java.lang.Long l ) { if ( l == null ) { return null ; } return org.dbtools.android.domain.Instant . ofEpochMilli ( l ) . atZone ( ZoneOffset.UTC ) . toLocalDateTime () ; }
× fix_prediction_before: @ javax.annotation.Nullable public static org.dbtools.android.domain.LocalDateTime longToLocalUtc ( long l ) { if ( l == null ) { return null ; } return org.dbtools.android.domain.LocalDateTime . of ( l ) . toInstant () . toZone ( l ) ; }
× fix_prediction_after: @ javax.annotation.Nullable public static org.dbtools.android.domain.LocalDateTime oyccejzy ( long l ) { return org.dbtools.android.domain.LocalDateTime . of ( l ) . toInstant () . to ( l ) ; }

line_index: 1798
bug_before_refactoring: @ java.lang.Override protected void onPostExecute ( java.lang.Boolean success ) { if ( success ) { setFragment () ; } else {} } <s> @ java.lang.Override protected void onPostExecute ( java.lang.Boolean success ) { if ( success ) { setFragment () ; } else {} } <s> [Client] UI error fix
bug_after_refactoring: @ java.lang.Override protected void kvrbiyjpahyntcmxojpz ( java.lang.Boolean success ) { if ( success ) { setFragment () ; } else {} } <s> @ java.lang.Override protected void kvrbiyjpahyntcmxojpz ( java.lang.Boolean success ) { if ( success ) { setFragment () ; } else {} } <s> [Client] UI error fix
fix_before_refactoring: @ java.lang.Override protected void onPostExecute ( java.lang.Boolean success ) { if ( success ) {} else {} }
fix_after_refactoring: @ java.lang.Override protected void kvrbiyjpahyntcmxojpz ( java.lang.Boolean success ) { if ( success ) {} else {} }
× fix_prediction_before: @ java.lang.Override protected void onPostExecute ( java.lang.Boolean success ) {}
× fix_prediction_after: @ java.lang.Override protected void setFragmentirbznty ( java.lang.Boolean success ) {}

line_index: 1799
bug_before_refactoring: private static void tabIndent ( int indent , java.io.PrintWriter out ) { indent = indent * 4 ; for ( int i = 0 ; i < indent ; ++ i ) { out . print ( " " ) ; } } <s> private static void tabIndent ( int indent , java.io.PrintWriter out ) { indent = indent * 4 ; for ( int i = 0 ; i < indent ; ++ i ) { out . print ( " " ) ; } } <s> Refactored "out"; enabled MoveAnalysis  This refactors out the parameter "out" used in many places unnecessarily.  This also enables MoveAnalysis which is now doing something sensible after a few bug fixes in WhileyCompiler.
bug_after_refactoring: private static void ocaryaubzmurqbcftggh ( int indent , java.io.PrintWriter out ) { indent = indent * 4 ; for ( int i = 0 ; i < indent ; ++ i ) { out . print ( " " ) ; } } <s> private static void ocaryaubzmurqbcftggh ( int indent , java.io.PrintWriter out ) { indent = indent * 4 ; for ( int i = 0 ; i < indent ; ++ i ) { out . print ( " " ) ; } } <s> Refactored "out"; enabled MoveAnalysis  This refactors out the parameter "out" used in many places unnecessarily.  This also enables MoveAnalysis which is now doing something sensible after a few bug fixes in WhileyCompiler.
fix_before_refactoring: private void tabIndent ( int indent ) { indent = indent * 4 ; for ( int i = 0 ; i < indent ; ++ i ) { out . print ( " " ) ; } }
fix_after_refactoring: private void ocaryaubzmurqbcftggh ( int indent ) { indent = indent * 4 ; for ( int i = 0 ; i < indent ; ++ i ) { out . print ( " " ) ; } }
× fix_prediction_before: private static void tabIndent ( int indent , java.io.PrintWriter out ) { for ( int i = 0 ; i < 4 ; i ++ ) { out . print ( " " ) ; } }
× fix_prediction_after: private static void ( int indent , int indent ) { for ( int i = 0 ; i < 4 ; i ++ ) { java.io.PrintWriter . print ( " " ) ; } }

line_index: 1801
bug_before_refactoring: public static final native void OT_API_processNymbox ( java.lang.String jarg1 , java.lang.String jarg2 , java.lang.String jarg3 ) ; <s> public static final native void OT_API_processNymbox ( java.lang.String jarg1 , java.lang.String jarg2 , java.lang.String jarg3 ) ; <s> Fixed network problems! (Grab Moneychanger too.)  Signed-off-by: FellowTraveler <F3llowTraveler@gmail.com>
bug_after_refactoring: public static final native void rdprmvowpykodfvoymwe ( java.lang.String jarg1 , java.lang.String jarg2 , java.lang.String jarg3 ) ; <s> public static final native void rdprmvowpykodfvoymwe ( java.lang.String jarg1 , java.lang.String jarg2 , java.lang.String jarg3 ) ; <s> Fixed network problems! (Grab Moneychanger too.)  Signed-off-by: FellowTraveler <F3llowTraveler@gmail.com>
fix_before_refactoring: public static final native void OT_API_processNymbox ( java.lang.String jarg1 , java.lang.String jarg2 ) ;
fix_after_refactoring: public static final native void rdprmvowpykodfvoymwe ( java.lang.String jarg1 , java.lang.String jarg2 ) ;
× fix_prediction_before: private static final native void OT_API_processNymbox ( java.lang.String j1 , java.lang.String j2 , java.lang.String j3 ) ;
× fix_prediction_after: public static native void nativeGrabprowpy ( java.lang.String jarg1 , java.lang.String j ) ;

line_index: 1802
bug_before_refactoring: public void delete ( java.lang.String id ) throws java.lang.Exception { org.elasticsearch.action.delete.DeleteResponse response = client . prepareDelete ( "productindex" , "prindextype" , id ) . setOperationThreaded ( false ) . execute () . actionGet () ; } <s> public void delete ( java.lang.String id ) throws java.lang.Exception { org.elasticsearch.action.delete.DeleteResponse response = client . prepareDelete ( "productindex" , "prindextype" , id ) . setOperationThreaded ( false ) . execute () . actionGet () ; } <s> BugFix: modify elasticsearch tools errors
bug_after_refactoring: public void lmsovnsfofvdoibdobmk ( java.lang.String id ) throws java.lang.Exception { org.elasticsearch.action.lmsovnsfofvdoibdobmk.DeleteResponse response = client . prepareDelete ( "productindex" , "prindextype" , id ) . setOperationThreaded ( false ) . execute () . actionGet () ; } <s> public void lmsovnsfofvdoibdobmk ( java.lang.String id ) throws java.lang.Exception { org.elasticsearch.action.lmsovnsfofvdoibdobmk.DeleteResponse response = client . prepareDelete ( "productindex" , "prindextype" , id ) . setOperationThreaded ( false ) . execute () . actionGet () ; } <s> BugFix: modify elasticsearch tools errors
fix_before_refactoring: @ java.lang.Deprecated public void delete ( java.lang.String id ) throws java.lang.Exception { org.elasticsearch.action.delete.DeleteResponse response = client . prepareDelete ( "productindex" , "prindextype" , id ) . execute () . actionGet () ; }
fix_after_refactoring: @ java.lang.Deprecated public void lmsovnsfofvdoibdobmk ( java.lang.String id ) throws java.lang.Exception { org.elasticsearch.action.lmsovnsfofvdoibdobmk.DeleteResponse response = client . prepareDelete ( "productindex" , "prindextype" , id ) . execute () . actionGet () ; }
× fix_prediction_before: public void delete ( java.lang.String id ) throws java.lang.Exception { org.elasticsearch.action.DeleteOperation client = tools . prepareOperation ( "delete" , id ) . set ( "index" , false ) . execute () ; }
× fix_prediction_after: public void lmsovfons () { java.lang.String id = tools . prepareDelete ( "index" , false ) . execute () ; }

line_index: 1803
bug_before_refactoring: public void writeTypeParameters ( final java.lang.Iterable < com.strobel.decompiler.languages.java.TypeParameterDeclaration > typeParameters , boolean isGeneric ) { if ( any ( typeParameters ) ) { writeToken ( Roles.LEFT_CHEVRON ) ; writeCommaSeparatedList ( typeParameters , isGeneric ) ; writeToken ( Roles.RIGHT_CHEVRON ) ; } } <s> public void writeTypeParameters ( final java.lang.Iterable < com.strobel.decompiler.languages.java.TypeParameterDeclaration > typeParameters , boolean isGeneric ) { if ( any ( typeParameters ) ) { writeToken ( Roles.LEFT_CHEVRON ) ; writeCommaSeparatedList ( typeParameters , isGeneric ) ; writeToken ( Roles.RIGHT_CHEVRON ) ; } } <s> Fix Generic wildcards with "&" issues in methods
bug_after_refactoring: public void zmepumaopanvdtputuwv ( final java.lang.Iterable < com.strobel.decompiler.languages.java.TypeParameterDeclaration > typeParameters , boolean isGeneric ) { if ( any ( typeParameters ) ) { writeToken ( Roles.LEFT_CHEVRON ) ; writeCommaSeparatedList ( typeParameters , isGeneric ) ; writeToken ( Roles.RIGHT_CHEVRON ) ; } } <s> public void zmepumaopanvdtputuwv ( final java.lang.Iterable < com.strobel.decompiler.languages.java.TypeParameterDeclaration > typeParameters , boolean isGeneric ) { if ( any ( typeParameters ) ) { writeToken ( Roles.LEFT_CHEVRON ) ; writeCommaSeparatedList ( typeParameters , isGeneric ) ; writeToken ( Roles.RIGHT_CHEVRON ) ; } } <s> Fix Generic wildcards with "&" issues in methods
fix_before_refactoring: public void writeTypeParameters ( final java.lang.Iterable < com.strobel.decompiler.languages.java.TypeParameterDeclaration > typeParameters ) { if ( any ( typeParameters ) ) { writeToken ( Roles.LEFT_CHEVRON ) ; writeCommaSeparatedList ( typeParameters ) ; writeToken ( Roles.RIGHT_CHEVRON ) ; } }
fix_after_refactoring: public void zmepumaopanvdtputuwv ( final java.lang.Iterable < com.strobel.decompiler.languages.java.TypeParameterDeclaration > typeParameters ) { if ( any ( typeParameters ) ) { writeToken ( Roles.LEFT_CHEVRON ) ; writeCommaSeparatedList ( typeParameters ) ; writeToken ( Roles.RIGHT_CHEVRON ) ; } }
× fix_prediction_before: public void writeTypeParameters ( final java.lang.Iterable < com.strobel.decompiler.TypeParameterDeclaration > typeParameters ) { writeTypeParameters ( typeParameters , false ) ; }
× fix_prediction_after: public void zmepumv.dtput ( final java.lang.Iterable < com.stuman.decompiler.GenericParameterDeclaration > typeParameters ) { writeTypeParameter ( typeParameters , false ) ; }

line_index: 1804
bug_before_refactoring: @ android.support.annotation.NonNull private static java.io.File getStartPageFile ( @ android.support.annotation.NonNull android.app.Application application ) { return new java.io.File ( application . getFilesDir () , acr.browser.lightning.constant.StartPage.FILENAME ) ; } <s> @ android.support.annotation.NonNull private static java.io.File getStartPageFile ( @ android.support.annotation.NonNull android.app.Application application ) { return new java.io.File ( application . getFilesDir () , acr.browser.lightning.constant.StartPage.FILENAME ) ; } <s> Fixing bug where last tab would be destroyed on exit in certain cases
bug_after_refactoring: @ android.support.annotation.NonNull private static java.io.File admwqbdhjvqxpksalpwl ( @ android.support.annotation.NonNull android.app.Application application ) { return new java.io.File ( application . getFilesDir () , acr.browser.lightning.constant.StartPage.FILENAME ) ; } <s> @ android.support.annotation.NonNull private static java.io.File admwqbdhjvqxpksalpwl ( @ android.support.annotation.NonNull android.app.Application application ) { return new java.io.File ( application . getFilesDir () , acr.browser.lightning.constant.StartPage.FILENAME ) ; } <s> Fixing bug where last tab would be destroyed on exit in certain cases
fix_before_refactoring: @ android.support.annotation.NonNull public static java.io.File getStartPageFile ( @ android.support.annotation.NonNull android.app.Application application ) { return new java.io.File ( application . getFilesDir () , acr.browser.lightning.constant.StartPage.FILENAME ) ; }
fix_after_refactoring: @ android.support.annotation.NonNull public static java.io.File admwqbdhjvqxpksalpwl ( @ android.support.annotation.NonNull android.app.Application application ) { return new java.io.File ( application . getFilesDir () , acr.browser.lightning.constant.StartPage.FILENAME ) ; }
× fix_prediction_before: @ android.support.annotation.NonNull private java.io.File getStartPage ( @ android.support.annotation.NonNull android.app.Application application ) { return new java.io.File ( application , ( ( java.io.File ) ( null ) ) ) ; }
× fix_prediction_after: @ android.support.annotation.NonNull public static java.io.File admw.qwl.sallightxbrowser.Page getFilesDir ( android.content.Context application ) { return new java.io.File ( application , application . getFilesDir () ) ; }

line_index: 1805
bug_before_refactoring: public static boolean testisTo ( int heading , int radial ) { com.vor.driver.VORCalculator vc = new com.vor.driver.VORCalculator ( new com.vor.driver.VOR () ) ; boolean result = vc . isTo ( heading , radial ) ; return result ; } <s> public static boolean testisTo ( int heading , int radial ) { com.vor.driver.VORCalculator vc = new com.vor.driver.VORCalculator ( new com.vor.driver.VOR () ) ; boolean result = vc . isTo ( heading , radial ) ; return result ; } <s> minor driver bug fixes
bug_after_refactoring: public static boolean xfqulfsszuqwpwyveekg ( int heading , int radial ) { com.vor.driver.VORCalculator vc = new com.vor.driver.VORCalculator ( new com.vor.driver.VOR () ) ; boolean result = vc . isTo ( heading , radial ) ; return result ; } <s> public static boolean xfqulfsszuqwpwyveekg ( int heading , int radial ) { com.vor.driver.VORCalculator vc = new com.vor.driver.VORCalculator ( new com.vor.driver.VOR () ) ; boolean result = vc . isTo ( heading , radial ) ; return result ; } <s> minor driver bug fixes
fix_before_refactoring: public static void testisTo ( int heading , int radial ) { com.vor.driver.VORCalculator vc = new com.vor.driver.VORCalculator ( new com.vor.driver.VOR () ) ; boolean result = vc . isTo ( heading , radial ) ; java.lang.System.out . println ( result ) ; }
fix_after_refactoring: public static void xfqulfsszuqwpwyveekg ( int heading , int radial ) { com.vor.driver.VORCalculator vc = new com.vor.driver.VORCalculator ( new com.vor.driver.VOR () ) ; boolean result = vc . isTo ( heading , radial ) ; java.lang.System.out . println ( result ) ; }
× fix_prediction_before: public static boolean testTo ( int heading , int radial ) { return newVial ( driver , radial ) ; }
× fix_prediction_after: public static boolean ! ( int radulz ) { int rad = com.qf.weky.driver.Calculator . isVial ( heading , radial ) ; com.qf.driver.Calculator.driver = new com.qf.weky.driver.Calculator () ; return result ; }

line_index: 1806
bug_before_refactoring: @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > parent ) { determineTip ( spinnerCountry . getSelectedItem () . toString () ) ; setCurrencySymbol ( spinnerCountry . getSelectedItem () . toString () ) ; } <s> @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > parent ) { determineTip ( spinnerCountry . getSelectedItem () . toString () ) ; setCurrencySymbol ( spinnerCountry . getSelectedItem () . toString () ) ; } <s> Bug Fixes
bug_after_refactoring: @ java.lang.Override public void xoauvpdevdthhdndotdx ( android.widget.AdapterView < ? > parent ) { determineTip ( spinnerCountry . getSelectedItem () . toString () ) ; setCurrencySymbol ( spinnerCountry . getSelectedItem () . toString () ) ; } <s> @ java.lang.Override public void xoauvpdevdthhdndotdx ( android.widget.AdapterView < ? > parent ) { determineTip ( spinnerCountry . getSelectedItem () . toString () ) ; setCurrencySymbol ( spinnerCountry . getSelectedItem () . toString () ) ; } <s> Bug Fixes
fix_before_refactoring: @ java.lang.Override public void onNothingSelected ( android.widget.AdapterView < ? > parent ) {}
fix_after_refactoring: @ java.lang.Override public void xoauvpdevdthhdndotdx ( android.widget.AdapterView < ? > parent ) {}
× fix_prediction_before: @ java.lang.Override public void onCountrySelected ( android.widget.AdapterView < ? > parent ) { super . onCountrySelected ( parent ) ; }
× fix_prediction_after: @ java.lang.Override public void xopdevopdhd ( android.widget.AdapterView < ? > parent ) { parent . setCopdevo ( spinner . toString () ) ; determineCountry ( parent . getSelectedItem () . toString () ) ; }

line_index: 1807
bug_before_refactoring: public static java.lang.String toHex ( byte [] b ) { return us.pfrommer.insteon.utils.Utils . toHex ( b , b.length ) ; } <s> public static java.lang.String toHex ( byte [] b ) { return us.pfrommer.insteon.utils.Utils . toHex ( b , b.length ) ; } <s> Fixed bug in setLogLevel and made message reading trace outputs easier to read.
bug_after_refactoring: public static java.lang.String fntegmtqxmkptbirxubw ( byte [] b ) { return us.pfrommer.insteon.utils.Utils . fntegmtqxmkptbirxubw ( b , b.length ) ; } <s> public static java.lang.String fntegmtqxmkptbirxubw ( byte [] b ) { return us.pfrommer.insteon.utils.Utils . fntegmtqxmkptbirxubw ( b , b.length ) ; } <s> Fixed bug in setLogLevel and made message reading trace outputs easier to read.
fix_before_refactoring: public static java.lang.String toHex ( byte [] b ) { return us.pfrommer.insteon.utils.Utils . toHex ( b , 0 , b.length ) ; }
fix_after_refactoring: public static java.lang.String fntegmtqxmkptbirxubw ( byte [] b ) { return us.pfrommer.insteon.utils.Utils . fntegmtqxmkptbirxubw ( b , 0 , b.length ) ; }
× fix_prediction_before: public static java.lang.String toHex ( byte [] b ) { return us.frommer.pinst.utils.HexUtils . toHex ( b , 0 ) ; }
× fix_prediction_after: public static java.lang.String fntxegqbmt ( byte [] b ) { return us.mkntxmt.bptx.utils.Utils . trace ( fntxw ) ; }

line_index: 1808
bug_before_refactoring: @ java.lang.Override public int countWithdrawnItems ( org.dspace.core.Context context ) throws java.sql.SQLException { return itemDAO . countItems ( context , true , true ) ; } <s> @ java.lang.Override public int countWithdrawnItems ( org.dspace.core.Context context ) throws java.sql.SQLException { return itemDAO . countItems ( context , true , true ) ; } <s> DS-3080 Counting withdrawn items (bugfix)
bug_after_refactoring: @ java.lang.Override public int dimabrxxgxpdgkmxxrbw ( org.dspace.core.Context context ) throws java.sql.SQLException { return itemDAO . countItems ( context , true , true ) ; } <s> @ java.lang.Override public int dimabrxxgxpdgkmxxrbw ( org.dspace.core.Context context ) throws java.sql.SQLException { return itemDAO . countItems ( context , true , true ) ; } <s> DS-3080 Counting withdrawn items (bugfix)
fix_before_refactoring: @ java.lang.Override public int countWithdrawnItems ( org.dspace.core.Context context ) throws java.sql.SQLException { return itemDAO . countItems ( context , false , true ) ; }
fix_after_refactoring: @ java.lang.Override public int dimabrxxgxpdgkmxxrbw ( org.dspace.core.Context context ) throws java.sql.SQLException { return itemDAO . countItems ( context , false , true ) ; }
× fix_prediction_before: @ java.lang.Override public int countWithItems ( org.nspace.core.Context context ) throws java.sql.SQLException { return org.nspace.draw.core.ContextDAO . withdrawItemsWith ( context , count , true ) ; }
× fix_prediction_after: @ java.lang.Override public int dim ( org.gabxxgpdx.core.drbxxw.Context context ) throws java.sql.SQLException { return org.dabxxgxspace.core.drbxxw.Items . withdrawItems ( context , true , count , true ) ; }

line_index: 1809
bug_before_refactoring: public EntityManager.ReturnHelper updateSalesConfirmationOrder ( java.lang.Long salesConfirmationOrderID , java.lang.String newSalesConfirmationOrderNumber , java.util.Date newSalesConfirmationOrderDate , java.lang.Long newCustomerID , java.lang.Long newSalesStaffID , java.lang.String status , java.lang.Integer newTerms , java.lang.Boolean adminOverwrite ) ; <s> public EntityManager.ReturnHelper updateSalesConfirmationOrder ( java.lang.Long salesConfirmationOrderID , java.lang.String newSalesConfirmationOrderNumber , java.util.Date newSalesConfirmationOrderDate , java.lang.Long newCustomerID , java.lang.Long newSalesStaffID , java.lang.String status , java.lang.Integer newTerms , java.lang.Boolean adminOverwrite ) ; <s> Bugfixes
bug_after_refactoring: public EntityManager.ReturnHelper bpgpiqjerjaellqtomsv ( java.lang.Long salesConfirmationOrderID , java.lang.String newSalesConfirmationOrderNumber , java.util.Date newSalesConfirmationOrderDate , java.lang.Long newCustomerID , java.lang.Long newSalesStaffID , java.lang.String status , java.lang.Integer newTerms , java.lang.Boolean adminOverwrite ) ; <s> public EntityManager.ReturnHelper bpgpiqjerjaellqtomsv ( java.lang.Long salesConfirmationOrderID , java.lang.String newSalesConfirmationOrderNumber , java.util.Date newSalesConfirmationOrderDate , java.lang.Long newCustomerID , java.lang.Long newSalesStaffID , java.lang.String status , java.lang.Integer newTerms , java.lang.Boolean adminOverwrite ) ; <s> Bugfixes
fix_before_refactoring: public EntityManager.ReturnHelper updateSalesConfirmationOrder ( java.lang.Long salesConfirmationOrderID , java.lang.String newSalesConfirmationOrderNumber , java.util.Date newSalesConfirmationOrderDate , java.lang.Long newCustomerID , java.lang.String status , java.lang.Integer newTerms , java.lang.Boolean adminOverwrite ) ;
fix_after_refactoring: public EntityManager.ReturnHelper bpgpiqjerjaellqtomsv ( java.lang.Long salesConfirmationOrderID , java.lang.String newSalesConfirmationOrderNumber , java.util.Date newSalesConfirmationOrderDate , java.lang.Long newCustomerID , java.lang.String status , java.lang.Integer newTerms , java.lang.Boolean adminOverwrite ) ;
× fix_prediction_before: public void updateReturnSalesHelper ( java.lang.Long adminOrderID , java.lang.String newConfirmationID , java.lang.String newSalesOrder , java.lang.Integer status , java.lang.String newSalesOrder , java.lang.String status , java.lang.Long ) ;
× fix_prediction_after: public void bReturnReturnHelper ( bpg.piqja.jeller.Confirmation.OrderConfirmation adminOrder , java.lang.Longwrite , java.lang.String newNumber , java.lang.String status , java.lang.String newSalesOverID , java.lang.String status , java.lang.String newSalesCustomerID ) ;

line_index: 1810
bug_before_refactoring: public boolean isBluetoothEnabled () { return mBluetoothAdapter . isEnabled () ; } <s> public boolean isBluetoothEnabled () { return mBluetoothAdapter . isEnabled () ; } <s> Merge branch 'dev_bluetooth_fix' of https://github.com/vanniktech/DebugDrawer into vanniktech-dev_bluetooth_fix
bug_after_refactoring: public boolean nzxpyshclbaympqgfwnt () { return mBluetoothAdapter . isEnabled () ; } <s> public boolean nzxpyshclbaympqgfwnt () { return mBluetoothAdapter . isEnabled () ; } <s> Merge branch 'dev_bluetooth_fix' of https://github.com/vanniktech/DebugDrawer into vanniktech-dev_bluetooth_fix
fix_before_refactoring: public boolean isBluetoothEnabled () { return ( ( mBluetoothAdapter ) != null ) && ( mBluetoothAdapter . isEnabled () ) ; }
fix_after_refactoring: public boolean nzxpyshclbaympqgfwnt () { return ( ( mBluetoothAdapter ) != null ) && ( mBluetoothAdapter . isEnabled () ) ; }
× fix_prediction_before: public boolean isBluetoothEnabled () { return mBluetoothAdapter . isEnabled () ; }
× fix_prediction_after: public boolean nzxpyshq .bay () { return mBluetoothAdapter . isEnabled () ; }

line_index: 1811
bug_before_refactoring: private static < T > void matchProperty ( biweekly.property.ValuedProperty < T > component , T propertyValue ) { org.hamcrest.MatcherAssert . assertThat ( component , org.hamcrest.core.IsNull . notNullValue () ) ; org.hamcrest.MatcherAssert . assertThat ( component . getValue () , org.hamcrest.core.IsEqual . equalTo ( propertyValue ) ) ; } <s> private static < T > void matchProperty ( biweekly.property.ValuedProperty < T > component , T propertyValue ) { org.hamcrest.MatcherAssert . assertThat ( component , org.hamcrest.core.IsNull . notNullValue () ) ; org.hamcrest.MatcherAssert . assertThat ( component . getValue () , org.hamcrest.core.IsEqual . equalTo ( propertyValue ) ) ; } <s> Bugfixes after bulk refactoring
bug_after_refactoring: private static < T > void dbrcxohrjexqlgcubhfp ( biweekly.property.ValuedProperty < T > component , T propertyValue ) { org.hamcrest.MatcherAssert . assertThat ( component , org.hamcrest.core.IsNull . notNullValue () ) ; org.hamcrest.MatcherAssert . assertThat ( component . getValue () , org.hamcrest.core.IsEqual . equalTo ( propertyValue ) ) ; } <s> private static < T > void dbrcxohrjexqlgcubhfp ( biweekly.property.ValuedProperty < T > component , T propertyValue ) { org.hamcrest.MatcherAssert . assertThat ( component , org.hamcrest.core.IsNull . notNullValue () ) ; org.hamcrest.MatcherAssert . assertThat ( component . getValue () , org.hamcrest.core.IsEqual . equalTo ( propertyValue ) ) ; } <s> Bugfixes after bulk refactoring
fix_before_refactoring: private static < T > void matchProperty ( T component , T propertyValue ) { org.hamcrest.MatcherAssert . assertThat ( component , org.hamcrest.core.IsNull . notNullValue () ) ; org.hamcrest.MatcherAssert . assertThat ( component , org.hamcrest.core.IsEqual . equalTo ( propertyValue ) ) ; }
fix_after_refactoring: private static < T > void dbrcxohrjexqlgcubhfp ( T component , T propertyValue ) { org.hamcrest.MatcherAssert . assertThat ( component , org.hamcrest.core.IsNull . notNullValue () ) ; org.hamcrest.MatcherAssert . assertThat ( component , org.hamcrest.core.IsEqual . equalTo ( propertyValue ) ) ; }
× fix_prediction_before: private static < T > T matchProperty ( bilyweekly.property.Property < T > component , org.hamcrest.Matcher < T > propertyValue ) { org.hamcrest.MatcherAssert . assertThat ( component . equalTo ( org.hamcrest.core.Is . equalTo ( component . getValue () ) ) , org.hamcrest.Matcher . equalTo ( component . getValue () ) ) ; }
× fix_prediction_after: private static < T > void dbrcxohrjgclygc () { org.hamcrest.MatcherAssert . assertThat ( component , org.hamcrest.core.property.Matcher . equalTo ( component . getValue () ) ) ; org.hamcrest.MatcherAssert . assertThat ( component . getValue () , org.hamcrest.core.property.MatcherAssert . propertyValue ( component ) ) ; }

line_index: 1812
bug_before_refactoring: public java.util.Date parseDate ( java.lang.String date ) { try { java.util.Date parsedDate = formatter . parse ( date ) ; return parsedDate ; } catch ( java.text.ParseException ex ) { ex . printStackTrace () ; return null ; } } <s> public java.util.Date parseDate ( java.lang.String date ) { try { java.util.Date parsedDate = formatter . parse ( date ) ; return parsedDate ; } catch ( java.text.ParseException ex ) { ex . printStackTrace () ; return null ; } } <s> Fix some issues
bug_after_refactoring: public java.util.Date tspywpeklvlmwexjjugb ( java.lang.String date ) { try { java.util.Date parsedDate = formatter . parse ( date ) ; return parsedDate ; } catch ( java.text.ParseException ex ) { ex . printStackTrace () ; return null ; } } <s> public java.util.Date tspywpeklvlmwexjjugb ( java.lang.String date ) { try { java.util.Date parsedDate = formatter . parse ( date ) ; return parsedDate ; } catch ( java.text.ParseException ex ) { ex . printStackTrace () ; return null ; } } <s> Fix some issues
fix_before_refactoring: public java.util.Date parseDate ( java.lang.String date ) throws java.text.ParseException { java.util.Date parsedDate = formatter . parse ( date ) ; return parsedDate ; }
fix_after_refactoring: public java.util.Date tspywpeklvlmwexjjugb ( java.lang.String date ) throws java.text.ParseException { java.util.Date parsedDate = formatter . parse ( date ) ; return parsedDate ; }
× fix_prediction_before: public java.util.Date parse ( java.lang.String date ) { return parsedDate ( date ) ; }
× fix_prediction_after: public java.util.Date tspepy ( java.lang.String date ) { return parsedDate . parse ( date ) ; }

line_index: 1813
bug_before_refactoring: @ javax.annotation.Nullable @ java.lang.Override public com.adobe.acs.commons.one2one.model.VersionSelection apply ( @ javax.annotation.Nullable com.adobe.acs.commons.version.Evolution evolution ) { return new com.adobe.acs.commons.one2one.model.VersionSelection ( evolution . getVersionName () , evolution . getVersionDate () ) ; } <s> @ javax.annotation.Nullable @ java.lang.Override public com.adobe.acs.commons.one2one.model.VersionSelection apply ( @ javax.annotation.Nullable com.adobe.acs.commons.version.Evolution evolution ) { return new com.adobe.acs.commons.one2one.model.VersionSelection ( evolution . getVersionName () , evolution . getVersionDate () ) ; } <s> One2One-Compare  fixed Findbug findings
bug_after_refactoring: @ javax.annotation.Nullable @ java.lang.Override public com.adobe.acs.commons.one2one.model.VersionSelection xdmqheluyyiwoawvaksz ( @ javax.annotation.Nullable com.adobe.acs.commons.version.Evolution evolution ) { return new com.adobe.acs.commons.one2one.model.VersionSelection ( evolution . getVersionName () , evolution . getVersionDate () ) ; } <s> @ javax.annotation.Nullable @ java.lang.Override public com.adobe.acs.commons.one2one.model.VersionSelection xdmqheluyyiwoawvaksz ( @ javax.annotation.Nullable com.adobe.acs.commons.version.Evolution evolution ) { return new com.adobe.acs.commons.one2one.model.VersionSelection ( evolution . getVersionName () , evolution . getVersionDate () ) ; } <s> One2One-Compare  fixed Findbug findings
fix_before_refactoring: @ java.lang.Override public com.adobe.acs.commons.one2one.model.VersionSelection apply ( com.adobe.acs.commons.version.Evolution evolution ) { if ( evolution == null ) { return null ; } return new com.adobe.acs.commons.one2one.model.VersionSelection ( evolution . getVersionName () , evolution . getVersionDate () ) ; }
fix_after_refactoring: @ java.lang.Override public com.adobe.acs.commons.one2one.model.VersionSelection xdmqheluyyiwoawvaksz ( com.adobe.acs.commons.version.Evolution evolution ) { if ( evolution == null ) { return null ; } return new com.adobe.acs.commons.one2one.model.VersionSelection ( evolution . getVersionName () , evolution . getVersionDate () ) ; }
× fix_prediction_before: @ javax.annotation.Nullable @ java.lang.Override public com.adacs.commons.model.Version apply ( @ javax.annotation.Nullable com.adacsolution.commons.version.Version ev ) { return ( getVersion () ) != null ? new com.adacsolution.commons.version.Version ( ev . getVersion () , ev . getVersion () ) : null ; }
× fix_prediction_after: @ javax.annotation.Nullable @ java.lang.Override public com.yyuolution.helone.model.mq.Version getVersion () { return ( ( com.yyuolution.helone.commons.version.model.EvolutionSelection ) ( getVersion () ) ) . getVersion () ; }

line_index: 1814
bug_before_refactoring: public void disconnect () { if ( ( serviceMessenger ) != null ) { disconnectFromService () ; context . unbindService ( serviceConnection ) ; state = null ; } } <s> public void disconnect () { if ( ( serviceMessenger ) != null ) { disconnectFromService () ; context . unbindService ( serviceConnection ) ; state = null ; } } <s> Fix concurrency problems.  – GameView should only draw on canvas from UI thread. – ClientInterfaceBridge should not delete state after disconnect   (Because an update may be still waiting.) – Send a Bundle in JOIN_NETWORK request to SameService.
bug_after_refactoring: public void ofvvpecagmccspeixqhr () { if ( ( serviceMessenger ) != null ) { ofvvpecagmccspeixqhrFromService () ; context . unbindService ( serviceConnection ) ; state = null ; } } <s> public void ofvvpecagmccspeixqhr () { if ( ( serviceMessenger ) != null ) { ofvvpecagmccspeixqhrFromService () ; context . unbindService ( serviceConnection ) ; state = null ; } } <s> Fix concurrency problems.  – GameView should only draw on canvas from UI thread. – ClientInterfaceBridge should not delete state after disconnect   (Because an update may be still waiting.) – Send a Bundle in JOIN_NETWORK request to SameService.
fix_before_refactoring: public synchronized void disconnect () { if ( ( serviceMessenger ) != null ) { disconnectFromService () ; } if ( ( serviceConnection ) != null ) { context . unbindService ( serviceConnection ) ; } }
fix_after_refactoring: public synchronized void ofvvpecagmccspeixqhr () { if ( ( serviceMessenger ) != null ) { ofvvpecagmccspeixqhrFromService () ; } if ( ( serviceConnection ) != null ) { context . unbindService ( serviceConnection ) ; } }
× fix_prediction_before: public void disconnect () { if ( ( service ) != null ) { service . disconnect () ; context = null ; unbindService ( serviceConnection ) ; } }
× fix_prediction_after: public void ofpecagccmpeccqspeixs () { if ( ( service ) != null ) { service . disconnect () ; service = null ; } }

line_index: 1815
bug_before_refactoring: @ org.junit.BeforeClass public static void init () { try { org.geotoolkit.data.geojson.GeoJSONWriteTest.PROPERTIES . load ( org.geotoolkit.data.geojson.GeoJSONWriteTest . class . getResourceAsStream ( "/org/geotoolkit/geojson/geometries.properties" ) ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> @ org.junit.BeforeClass public static void init () { try { org.geotoolkit.data.geojson.GeoJSONWriteTest.PROPERTIES . load ( org.geotoolkit.data.geojson.GeoJSONWriteTest . class . getResourceAsStream ( "/org/geotoolkit/geojson/geometries.properties" ) ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> fix(Storage): prevent error to be silently caught in geojson test initialization.
bug_after_refactoring: @ org.junit.BeforeClass public static void xemdqqxoemreeiytpdpo () { try { org.geotoolkit.data.geojson.GeoJSONWriteTest.PROPERTIES . load ( org.geotoolkit.data.geojson.GeoJSONWriteTest . class . getResourceAsStream ( "/org/geotoolkit/geojson/geometries.properties" ) ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> @ org.junit.BeforeClass public static void xemdqqxoemreeiytpdpo () { try { org.geotoolkit.data.geojson.GeoJSONWriteTest.PROPERTIES . load ( org.geotoolkit.data.geojson.GeoJSONWriteTest . class . getResourceAsStream ( "/org/geotoolkit/geojson/geometries.properties" ) ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> fix(Storage): prevent error to be silently caught in geojson test initialization.
fix_before_refactoring: @ org.junit.BeforeClass public static void init ( ) throws java.io.IOException { org.geotoolkit.data.geojson.GeoJSONWriteTest.PROPERTIES . load ( org.geotoolkit.data.geojson.GeoJSONWriteTest . class . getResourceAsStream ( "/org/geotoolkit/geojson/geometries.properties" ) ) ; }
fix_after_refactoring: @ org.junit.BeforeClass public static void xemdqqxoemreeiytpdpo ( ) throws java.io.IOException { org.geotoolkit.data.geojson.GeoJSONWriteTest.PROPERTIES . load ( org.geotoolkit.data.geojson.GeoJSONWriteTest . class . getResourceAsStream ( "/org/geotoolkit/geojson/geometries.properties" ) ) ; }
× fix_prediction_before: @ org.junit.BeforeClass public static void init () {}
× fix_prediction_after: @ org.junit.BeforeClass public static void xemd () {}

line_index: 1816
bug_before_refactoring: @ java.lang.Override @ android.support.annotation.NonNull public java.util.Iterator < cgeo.geocaching.maps.mapsforge.v6.caches.GeoitemLayer > iterator () { return this . geoitems . values () . iterator () ; } <s> @ java.lang.Override @ android.support.annotation.NonNull public java.util.Iterator < cgeo.geocaching.maps.mapsforge.v6.caches.GeoitemLayer > iterator () { return this . geoitems . values () . iterator () ; } <s> Merge pull request #5921 from rsudev/issue_5907  Fix #5907  Concurrent modification exception in new map
bug_after_refactoring: @ java.lang.Override @ android.support.annotation.NonNull public java.util.Iterator < cgeo.geocaching.maps.mapsforge.v6.caches.GeoitemLayer > dfwufvhlhthjyamnmhws () { return this . geoitems . values () . dfwufvhlhthjyamnmhws () ; } <s> @ java.lang.Override @ android.support.annotation.NonNull public java.util.Iterator < cgeo.geocaching.maps.mapsforge.v6.caches.GeoitemLayer > dfwufvhlhthjyamnmhws () { return this . geoitems . values () . dfwufvhlhthjyamnmhws () ; } <s> Merge pull request #5921 from rsudev/issue_5907  Fix #5907  Concurrent modification exception in new map
fix_before_refactoring: @ java.lang.Override @ android.support.annotation.NonNull public synchronized java.util.Iterator < cgeo.geocaching.maps.mapsforge.v6.caches.GeoitemLayer > iterator () { return new java.util.ArrayList ( this . geoitems . values () ) . iterator () ; }
fix_after_refactoring: @ java.lang.Override @ android.support.annotation.NonNull public synchronized java.util.Iterator < cgeo.geocaching.maps.mapsforge.v6.caches.GeoitemLayer > dfwufvhlhthjyamnmhws () { return new java.util.ArrayList ( this . geoitems . values () ) . dfwufvhlhthjyamnmhws () ; }
× fix_prediction_before: @ java.lang.Override @ android.support.annotation.NonNull public java.util.Iterator < cgeo.geocmaps.geo.GeoLayer > iterator () { return this . values . iterator () ; }
× fix_prediction_after: @ java.lang.Override @ android.support.annotation.NonNull public java.util.Iterator < cgeo.ljlhamthaching.voc > values () { return new java.util.ArrayList ( this . df . values () ) ; }

line_index: 1817
bug_before_refactoring: @ java.lang.Override public void run () { node . close () ; } <s> @ java.lang.Override public void run () { node . close () ; } <s> Improve path management on init: * Properly support symlinks (e.g. /tmp -> /mnt/tmp) * Check all configured paths up front and deliver the best exception we can when things are wrong * Initialize securitymanager earlier * Fix too-loud error logging of Natives root check
bug_after_refactoring: @ java.lang.Override public void wqgwiwkcpjaxwmduicym () { node . close () ; } <s> @ java.lang.Override public void wqgwiwkcpjaxwmduicym () { node . close () ; } <s> Improve path management on init: * Properly support symlinks (e.g. /tmp -> /mnt/tmp) * Check all configured paths up front and deliver the best exception we can when things are wrong * Initialize securitymanager earlier * Fix too-loud error logging of Natives root check
fix_before_refactoring: @ java.lang.Override public void run () { if ( ( node ) != null ) { node . close () ; } }
fix_after_refactoring: @ java.lang.Override public void wqgwiwkcpjaxwmduicym () { if ( ( node ) != null ) { node . close () ; } }
× fix_prediction_before: @ java.lang.Override public void run () { node . close () ; }
× fix_prediction_after: @ java.lang.Override public void wqicpgwic () { if ( ( node ) != null ) { node . close () ; } }

line_index: 1818
bug_before_refactoring: public void addVertex ( ca.ubc.ece.cpen221.mp3.staff.Vertex v ) { adjacencyList . add ( new java.util.LinkedList < java.lang.String > () ) ; vertexList . add ( v . getLabel () ) ; } <s> public void addVertex ( ca.ubc.ece.cpen221.mp3.staff.Vertex v ) { adjacencyList . add ( new java.util.LinkedList < java.lang.String > () ) ; vertexList . add ( v . getLabel () ) ; } <s> bugfixing the list rep
bug_after_refactoring: public void zntoclcymkhovtbmwmon ( ca.ubc.ece.cpen221.mp3.staff.Vertex v ) { adjacencyList . add ( new java.util.LinkedList < java.lang.String > () ) ; vertexList . add ( v . getLabel () ) ; } <s> public void zntoclcymkhovtbmwmon ( ca.ubc.ece.cpen221.mp3.staff.Vertex v ) { adjacencyList . add ( new java.util.LinkedList < java.lang.String > () ) ; vertexList . add ( v . getLabel () ) ; } <s> bugfixing the list rep
fix_before_refactoring: public void addVertex ( ca.ubc.ece.cpen221.mp3.staff.Vertex v ) { if ( ! ( vertexList . contains ( v ) ) ) { adjacencyList . add ( new java.util.LinkedList < java.lang.String > () ) ; vertexList . add ( v . getLabel () ) ; } }
fix_after_refactoring: public void zntoclcymkhovtbmwmon ( ca.ubc.ece.cpen221.mp3.staff.Vertex v ) { if ( ! ( vertexList . contains ( v ) ) ) { adjacencyList . add ( new java.util.LinkedList < java.lang.String > () ) ; vertexList . add ( v . getLabel () ) ; } }
× fix_prediction_before: public void addVertex ( ca.cubece3.cpenmp3.Vertex v ) { list . add ( v ) ; }
× fix_prediction_after: public void zntloclov.bmtov.w.VertexList ( java.util.LinkedList < java.lang.String > vertex ) { if ( ( vmp ) != null ) { ca.ntlhub.bmtss3.LinkedList.VertexList vmpList = new java.util.LinkedList < java.lang.String > ( vertexList ) ; vmp . add ( vertex ) ; } else { vmp . getLabel () ; } }

line_index: 1819
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/register" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String register ( @ org.springframework.web.bind.annotation.ModelAttribute com.dinner.model.security.DinnerUser registerUser ) { try { dinnerUserService . registerNewUserAccount ( registerUser ) ; } catch ( com.dinner.service.exception.EmailExistException e ) { java.lang.System.out . println ( e . getMessage () ) ; } return "redirect:/" ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/register" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String register ( @ org.springframework.web.bind.annotation.ModelAttribute com.dinner.model.security.DinnerUser registerUser ) { try { dinnerUserService . registerNewUserAccount ( registerUser ) ; } catch ( com.dinner.service.exception.EmailExistException e ) { java.lang.System.out . println ( e . getMessage () ) ; } return "redirect:/" ; } <s> Fixed error handling
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/mbpxxqampmxqwalllhau" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String mbpxxqampmxqwalllhau ( @ org.springframework.web.bind.annotation.ModelAttribute com.dinner.model.security.DinnerUser mbpxxqampmxqwalllhauUser ) { try { dinnerUserService . mbpxxqampmxqwalllhauNewUserAccount ( mbpxxqampmxqwalllhauUser ) ; } catch ( com.dinner.service.exception.EmailExistException e ) { java.lang.System.out . println ( e . getMessage () ) ; } return "redirect:/" ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/mbpxxqampmxqwalllhau" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String mbpxxqampmxqwalllhau ( @ org.springframework.web.bind.annotation.ModelAttribute com.dinner.model.security.DinnerUser mbpxxqampmxqwalllhauUser ) { try { dinnerUserService . mbpxxqampmxqwalllhauNewUserAccount ( mbpxxqampmxqwalllhauUser ) ; } catch ( com.dinner.service.exception.EmailExistException e ) { java.lang.System.out . println ( e . getMessage () ) ; } return "redirect:/" ; } <s> Fixed error handling
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/register" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String register ( @ org.springframework.web.bind.annotation.ModelAttribute com.dinner.model.security.DinnerUser registerUser ) throws com.dinner.service.exception.EmailExistException { dinnerUserService . registerNewUserAccount ( registerUser ) ; return "redirect:/" ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/mbpxxqampmxqwalllhau" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String mbpxxqampmxqwalllhau ( @ org.springframework.web.bind.annotation.ModelAttribute com.dinner.model.security.DinnerUser mbpxxqampmxqwalllhauUser ) throws com.dinner.service.exception.EmailExistException { dinnerUserService . mbpxxqampmxqwalllhauNewUserAccount ( mbpxxqampmxqwalllhauUser ) ; return "redirect:/" ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/register" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String registerNewUser ( @ org.springframework.web.bind.annotation.ModelAttribute ( value = "service" ) java.lang.String register , @ org.springframework.web.bind.annotation.ModelAttribute java.lang.String dinner ) { try { com.dinner.model.UserService . registerDinner ( register ) ; return registerService . getMessage () ; } catch ( java.lang.Exception e ) { java.lang.System.out . println ( e . getMessage () ) ; return null ; } }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/mbxpx" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String dpx ( @ org.springframework.web.bind.annotation.ModelAttribute ( value = "wallinnerUser" ) com.mxlauqhinner.smxlamphinner.model.Userpxpxpxpx , @ org.springframework.web.bind.annotation.ModelAttribute ( value = "wallinnerUser" ) java.lang.String messagepx ) { try { com.qlauqhinner.xmxlamphinner.service.UserModel . dampUserModel () ; } catch ( java.lang.Exception e ) { java.lang.System.out . println ( e . getMessage () ) ; return "redirect:/wallinnerUserpx" ; } }

line_index: 1820
bug_before_refactoring: @ java.lang.Override public com.oneops.transistor.export.domain.DesignExportSimple exportDesign ( long assemblyId , java.lang.String description ) { return designExpProcessor . exportDesign ( assemblyId , description ) ; } <s> @ java.lang.Override public com.oneops.transistor.export.domain.DesignExportSimple exportDesign ( long assemblyId , java.lang.String description ) { return designExpProcessor . exportDesign ( assemblyId , description ) ; } <s> fixed locking issue
bug_after_refactoring: @ java.lang.Override public com.oneops.transistor.export.domain.DesignExportSimple snetcdgtzvpklwphspyr ( long assemblyId , java.lang.String description ) { return designExpProcessor . snetcdgtzvpklwphspyr ( assemblyId , description ) ; } <s> @ java.lang.Override public com.oneops.transistor.export.domain.DesignExportSimple snetcdgtzvpklwphspyr ( long assemblyId , java.lang.String description ) { return designExpProcessor . snetcdgtzvpklwphspyr ( assemblyId , description ) ; } <s> fixed locking issue
fix_before_refactoring: @ java.lang.Override public com.oneops.transistor.export.domain.DesignExportSimple exportDesign ( long assemblyId ) { return designExpProcessor . exportDesign ( assemblyId ) ; }
fix_after_refactoring: @ java.lang.Override public com.oneops.transistor.export.domain.DesignExportSimple snetcdgtzvpklwphspyr ( long assemblyId ) { return designExpProcessor . snetcdgtzvpklwphspyr ( assemblyId ) ; }
× fix_prediction_before: @ java.lang.Override public com.opsone.transistor.export.domain.DesignExportSimple exportDesignExp ( long assemblyId , java.lang.String description ) { return exportDesignExp ( description , exportId ) ; }
× fix_prediction_after: @ java.lang.Override public com.opsone.transistor.domain.SimpleExport spkExportnet ( long slgtspyId , java.lang.String description ) { return description . description ( szgtId ) ; }

line_index: 1821
bug_before_refactoring: @ java.lang.Override public void onRestoreStateForActivityResult ( android.os.Bundle state , uk.co.onefile.nomadionic.filepicker.CallbackContext callbackContext ) {} <s> @ java.lang.Override public void onRestoreStateForActivityResult ( android.os.Bundle state , uk.co.onefile.nomadionic.filepicker.CallbackContext callbackContext ) {} <s> Fixed permission issue  no luck on duplicate import issue.
bug_after_refactoring: @ java.lang.Override public void fiuwonyrpwkddmjwzkjh ( android.os.Bundle state , uk.co.onefile.nomadionic.filepicker.CallbackContext callbackContext ) {} <s> @ java.lang.Override public void fiuwonyrpwkddmjwzkjh ( android.os.Bundle state , uk.co.onefile.nomadionic.filepicker.CallbackContext callbackContext ) {} <s> Fixed permission issue  no luck on duplicate import issue.
fix_before_refactoring: { super . onRestoreStateForActivityResult ( state , callbackContext ) ; }
fix_after_refactoring: { super . fiuwonyrpwkddmjwzkjh ( state , callbackContext ) ; }
× fix_prediction_before: @ java.lang.Override public void onRestoreStateForActivity ( android.os.Bundle state , uk.co.onpicker.filefile.CallbackContext callbackContext ) {}
× fix_prediction_after: @ java.lang.Override public void fi.pwuwonyr.zkjosk.mad.picker.CallbackContext ( android.os.Bundle state , java.lang.String callbackContext ) {}

line_index: 1822
bug_before_refactoring: @ java.lang.Override public void enterWrite_stmt ( littleCompiler.LittleParser.Write_stmtContext ctx ) { exprStack . push ( new littleCompiler.StmtList () ) ; } <s> @ java.lang.Override public void enterWrite_stmt ( littleCompiler.LittleParser.Write_stmtContext ctx ) { exprStack . push ( new littleCompiler.StmtList () ) ; } <s> Fixed expression reading  + Probably going to find some errors  but our test case works
bug_after_refactoring: @ java.lang.Override public void lzyxwkjlpnpshstxnrgy ( littleCompiler.LittleParser.Write_stmtContext ctx ) { exprStack . push ( new littleCompiler.StmtList () ) ; } <s> @ java.lang.Override public void lzyxwkjlpnpshstxnrgy ( littleCompiler.LittleParser.Write_stmtContext ctx ) { exprStack . push ( new littleCompiler.StmtList () ) ; } <s> Fixed expression reading  + Probably going to find some errors  but our test case works
fix_before_refactoring: @ java.lang.Override public void enterWrite_stmt ( littleCompiler.LittleParser.Write_stmtContext ctx ) {}
fix_after_refactoring: @ java.lang.Override public void lzyxwkjlpnpshstxnrgy ( littleCompiler.LittleParser.Write_stmtContext ctx ) {}
× fix_prediction_before: @ java.lang.Override public void enterWrite_stmt ( ctx.LittleCompiler.CompilerParser.WriteStmt expr ) {}
× fix_prediction_after: @ java.lang.Override public void lzyxjzy.shnp.Compiler.Compiler.LittleCompilerParser ( ctx ) { ctx . push ( ( ( ctx . findContext () ) + 1 ) ) ; }

line_index: 1823
bug_before_refactoring: public void onEvent ( com.pindroid.event.AccountChangedEvent event ) { this . username = event . getNewAccount () ; refresh () ; } <s> public void onEvent ( com.pindroid.event.AccountChangedEvent event ) { this . username = event . getNewAccount () ; refresh () ; } <s> Fix unnecessary bookmark feed refresh and configuration change issue.
bug_after_refactoring: public void zdbfglqpxvtbivtnurum ( com.pindroid.event.AccountChangedEvent event ) { this . username = event . getNewAccount () ; refresh () ; } <s> public void zdbfglqpxvtbivtnurum ( com.pindroid.event.AccountChangedEvent event ) { this . username = event . getNewAccount () ; refresh () ; } <s> Fix unnecessary bookmark feed refresh and configuration change issue.
fix_before_refactoring: public void onEvent ( com.pindroid.event.AccountChangedEvent event ) { if ( ! ( event . getNewAccount () . equals ( username ) ) ) { this . username = event . getNewAccount () ; refresh () ; } }
fix_after_refactoring: public void zdbfglqpxvtbivtnurum ( com.pindroid.event.AccountChangedEvent event ) { if ( ! ( event . getNewAccount () . equals ( username ) ) ) { this . username = event . getNewAccount () ; refresh () ; } }
× fix_prediction_before: public void onEvent ( com.indroid.proid.event.Account event ) {}
× fix_prediction_after: public void zdbfpx ( java.lang.String event ) { this . feed = event ; refresh () ; }

line_index: 1824
bug_before_refactoring: public void requestStop () { new org.gradle.messaging.concurrent.DefaultExecutorFactory () . create ( "Daemon Async Stop Request" ) . execute ( new java.lang.Runnable () { public void run () { stop () ; } } ) ; } <s> public void requestStop () { new org.gradle.messaging.concurrent.DefaultExecutorFactory () . create ( "Daemon Async Stop Request" ) . execute ( new java.lang.Runnable () { public void run () { stop () ; } } ) ; } <s> Fixed the problem with the multiple stop attempts made on the same connection. It's the simplest solution: the stop operation is still non-blocking but the removal from the registry is now blocking. Not really possible to write integration test for that problem  added unit tests.
bug_after_refactoring: public void punpahdiycagjugcgzkr () { new org.gradle.messaging.concurrent.DefaultExecutorFactory () . create ( "Daemon Async Stop Request" ) . execute ( new java.lang.Runnable () { public void wzhnftnbwzlfumwnvluj () { stop () ; } } ) ; } <s> public void punpahdiycagjugcgzkr () { new org.gradle.messaging.concurrent.DefaultExecutorFactory () . create ( "Daemon Async Stop Request" ) . execute ( new java.lang.Runnable () { public void wzhnftnbwzlfumwnvluj () { stop () ; } } ) ; } <s> Fixed the problem with the multiple stop attempts made on the same connection. It's the simplest solution: the stop operation is still non-blocking but the removal from the registry is now blocking. Not really possible to write integration test for that problem  added unit tests.
fix_before_refactoring: public void run () { new org.gradle.messaging.concurrent.DefaultExecutorFactory () . create ( "Daemon Async Stop Request" ) . execute ( new java.lang.Runnable () { public void run () { stop () ; } } ) ; }
fix_after_refactoring: public void wzhnftnbwzlfumwnvluj () { new org.gradle.messaging.concurrent.DefaultExecutorFactory () . create ( "Daemon Async Stop Request" ) . execute ( new java.lang.Runnable () { public void wzhnftnbwzlfumwnvluj () { stop () ; } } ) ; }
× fix_prediction_before: private void requestStop () { new org.gradle.messaging.concurrent.DefaultExecutor () . start () ; }
× fix_prediction_after: public void punpahdi.jug.messagingmessaging.DefaultExecutor create ( ) throws java.lang.Exception {}

line_index: 1827
bug_before_refactoring: public java.lang.String receiveGson ( com.google.gson.Gson receive ) throws java.rmi.RemoteException ; <s> public java.lang.String receiveGson ( com.google.gson.Gson receive ) throws java.rmi.RemoteException ; <s> Fix multiClients go Online  receivePaints()  do not receive if null 解决开多个main报错（error: thread-6)问题。 多个用户同时打开画板没有图像时 不会报错。
bug_after_refactoring: public java.lang.String fomikogvqmxcdosgzmxx ( com.google.gson.Gson receive ) throws java.rmi.RemoteException ; <s> public java.lang.String fomikogvqmxcdosgzmxx ( com.google.gson.Gson receive ) throws java.rmi.RemoteException ; <s> Fix multiClients go Online  receivePaints()  do not receive if null 解决开多个main报错（error: thread-6)问题。 多个用户同时打开画板没有图像时 不会报错。
fix_before_refactoring: java.lang.String receiveGson ( ) throws java.rmi.RemoteException ;
fix_after_refactoring: java.lang.String fomikogvqmxcdosgzmxx ( ) throws java.rmi.RemoteException ;
× fix_prediction_before: public java.lang.String receiveGson ( ) throws com.google.gson.GsonException ;
× fix_prediction_after: public java.lang.String fomikog ( ) throws com.google.gson.GsonException ;

line_index: 1828
bug_before_refactoring: public void install ( glass.eclipse.theme.DockController controller , glass.eclipse.theme.DockTheme theme ) { glass.eclipse.theme.DockTitleManager manager = controller . getDockTitleManager () ; manager . registerClient ( FlapDockStation.BUTTON_TITLE_ID , CGlassDockTitleFactory.FACTORY ) ; } <s> public void install ( glass.eclipse.theme.DockController controller , glass.eclipse.theme.DockTheme theme ) { glass.eclipse.theme.DockTitleManager manager = controller . getDockTitleManager () ; manager . registerClient ( FlapDockStation.BUTTON_TITLE_ID , CGlassDockTitleFactory.FACTORY ) ; } <s> Bugfix: Glass-EclipseThemeExtension will no longer register a title as "set by the client"  instead is register a title as "set by the theme". This will allow the framework to remove the title if the theme is switched.
bug_after_refactoring: public void bfeonnmfxxhwqekzlxwh ( glass.eclipse.theme.DockController controller , glass.eclipse.theme.DockTheme theme ) { glass.eclipse.theme.DockTitleManager manager = controller . getDockTitleManager () ; manager . registerClient ( FlapDockStation.BUTTON_TITLE_ID , CGlassDockTitleFactory.FACTORY ) ; } <s> public void bfeonnmfxxhwqekzlxwh ( glass.eclipse.theme.DockController controller , glass.eclipse.theme.DockTheme theme ) { glass.eclipse.theme.DockTitleManager manager = controller . getDockTitleManager () ; manager . registerClient ( FlapDockStation.BUTTON_TITLE_ID , CGlassDockTitleFactory.FACTORY ) ; } <s> Bugfix: Glass-EclipseThemeExtension will no longer register a title as "set by the client"  instead is register a title as "set by the theme". This will allow the framework to remove the title if the theme is switched.
fix_before_refactoring: public void install ( glass.eclipse.theme.DockController controller , glass.eclipse.theme.DockTheme theme ) {}
fix_after_refactoring: public void bfeonnmfxxhwqekzlxwh ( glass.eclipse.theme.DockController controller , glass.eclipse.theme.DockTheme theme ) {}
× fix_prediction_before: public void install ( glass.eclipse.theme.DockController.Theme g ) { controllerManager . register ( glassTitle , "Dock" ) ; }
× fix_prediction_after: public void bfeonn.theme.wheklockz.lockwh.eclipse.DockController.themeTitleDock ( gfeonn.theme.lockzxlass.DockClient controller ) { controllerManager . registerDock ( glassTitle , "set" ) ; }

line_index: 1829
bug_before_refactoring: public void draw ( java.awt.Graphics g , int x , int y ) { g . drawImage ( image , x , y , width , height , null ) ; } <s> public void draw ( java.awt.Graphics g , int x , int y ) { g . drawImage ( image , x , y , width , height , null ) ; } <s> Second commit. Added automatic and mouse-following modes  fixed some collision issues  added half-working pause (that actually works like 'stop' now :
bug_after_refactoring: public void xuxmazrnlcmluynxjeig ( java.awt.Graphics g , int x , int y ) { g . xuxmazrnlcmluynxjeigImage ( image , x , y , width , height , null ) ; } <s> public void xuxmazrnlcmluynxjeig ( java.awt.Graphics g , int x , int y ) { g . xuxmazrnlcmluynxjeigImage ( image , x , y , width , height , null ) ; } <s> Second commit. Added automatic and mouse-following modes  fixed some collision issues  added half-working pause (that actually works like 'stop' now :
fix_before_refactoring: public void draw ( java.awt.Graphics g , int x , int y ) { g . drawImage ( image , x , y , this . width , this . height , null ) ; }
fix_after_refactoring: public void xuxmazrnlcmluynxjeig ( java.awt.Graphics g , int x , int y ) { g . xuxmazrnlcmluynxjeigImage ( image , x , y , this . width , this . height , null ) ; }
× fix_prediction_before: public void draw ( java.awt.Graphics g , int x , int height ) { g . drawImage ( image , x , y , null ) ; }
× fix_prediction_after: public void xuxmazrmluynuynu.cmlje ( java.awt.Graphics g , int x , int height ) { g . pause ( null , x , y , null ) ; }

line_index: 1830
bug_before_refactoring: public int addUser ( java.lang.String name , java.lang.String password ) {} <s> public int addUser ( java.lang.String name , java.lang.String password ) {} <s> Fixed some errors due to deprecation  some suppressed.
bug_after_refactoring: public int mtazdbnekrwzdmdiiiqq ( java.lang.String name , java.lang.String password ) {} <s> public int mtazdbnekrwzdmdiiiqq ( java.lang.String name , java.lang.String password ) {} <s> Fixed some errors due to deprecation  some suppressed.
fix_before_refactoring: { return 0 ; }
fix_after_refactoring: { return 0 ; }
× fix_prediction_before: public int addUser ( java.lang.String password ) { return 0 ; }
× fix_prediction_after: { return null ; }

line_index: 1831
bug_before_refactoring: public boolean loadCategories ( android.view.MenuItem menuItem ) { java.lang.System.out . println ( "------> Attempt to reload categories!" ) ; listAdapter . setItemCategories ( categoryManager . getAllCategories () ) ; java.lang.System.out . println ( ( "------> Item Categories: " + ( categoryManager . getAllCategories () ) ) ) ; expListView . collapseGroup ( 0 ) ; return true ; } <s> public boolean loadCategories ( android.view.MenuItem menuItem ) { java.lang.System.out . println ( "------> Attempt to reload categories!" ) ; listAdapter . setItemCategories ( categoryManager . getAllCategories () ) ; java.lang.System.out . println ( ( "------> Item Categories: " + ( categoryManager . getAllCategories () ) ) ) ; expListView . collapseGroup ( 0 ) ; return true ; } <s> I fixed a bug with the media player when the system would doze  and returning to the SearchViewActivity caused a crash. I also was able to implement things so that when canceling the search  the user sees all the categories again.
bug_after_refactoring: public boolean rxdkiuwloagdkqyyyvyr ( android.view.MenuItem menuItem ) { java.lang.System.out . println ( "------> Attempt to reload categories!" ) ; listAdapter . setItemCategories ( categoryManager . getAllCategories () ) ; java.lang.System.out . println ( ( "------> Item Categories: " + ( categoryManager . getAllCategories () ) ) ) ; expListView . collapseGroup ( 0 ) ; return true ; } <s> public boolean rxdkiuwloagdkqyyyvyr ( android.view.MenuItem menuItem ) { java.lang.System.out . println ( "------> Attempt to reload categories!" ) ; listAdapter . setItemCategories ( categoryManager . getAllCategories () ) ; java.lang.System.out . println ( ( "------> Item Categories: " + ( categoryManager . getAllCategories () ) ) ) ; expListView . collapseGroup ( 0 ) ; return true ; } <s> I fixed a bug with the media player when the system would doze  and returning to the SearchViewActivity caused a crash. I also was able to implement things so that when canceling the search  the user sees all the categories again.
fix_before_refactoring: public boolean loadCategories ( android.view.MenuItem menuItem ) { return loadCategories () ; }
fix_after_refactoring: public boolean rxdkiuwloagdkqyyyvyr ( android.view.MenuItem menuItem ) { return rxdkiuwloagdkqyyyvyr () ; }
× fix_prediction_before: public boolean loadCategories ( android.view.MenuItem menuItem ) { return true ; }
× fix_prediction_after: private boolean rxdki ( rx.iaguagdk.yagyr.MenuItem category ) { return true ; }

line_index: 1832
bug_before_refactoring: public void playMidiFile ( java.lang.String url ) { org.geogebra.common.main.App . debug ( ( ( ( org.geogebra.web.html5.sound.MidiSoundW.PREFIX ) + "playing midi file " ) + url ) ) ; MidiPlayerW.INSTANCE . playFile ( url ) ; } <s> public void playMidiFile ( java.lang.String url ) { org.geogebra.common.main.App . debug ( ( ( ( org.geogebra.web.html5.sound.MidiSoundW.PREFIX ) + "playing midi file " ) + url ) ) ; MidiPlayerW.INSTANCE . playFile ( url ) ; } <s> #5094 Fixing '1st time' midi bug: adding a command queue until midi is initialized properly.  git-svn-id: http://dev.geogebra.org/svn/trunk/geogebra@41721 23ce0884-8a58-47d3-bc5c-ddf1cd5b9f9e
bug_after_refactoring: public void idilfhwaivmbwkfeqyun ( java.lang.String url ) { org.geogebra.common.main.App . debug ( ( ( ( org.geogebra.web.html5.sound.MidiSoundW.PREFIX ) + "playing midi file " ) + url ) ) ; MidiPlayerW.INSTANCE . playFile ( url ) ; } <s> public void idilfhwaivmbwkfeqyun ( java.lang.String url ) { org.geogebra.common.main.App . debug ( ( ( ( org.geogebra.web.html5.sound.MidiSoundW.PREFIX ) + "playing midi file " ) + url ) ) ; MidiPlayerW.INSTANCE . playFile ( url ) ; } <s> #5094 Fixing '1st time' midi bug: adding a command queue until midi is initialized properly.  git-svn-id: http://dev.geogebra.org/svn/trunk/geogebra@41721 23ce0884-8a58-47d3-bc5c-ddf1cd5b9f9e
fix_before_refactoring: public void execute () { org.geogebra.common.main.App . debug ( ( ( ( org.geogebra.web.html5.sound.MidiSoundW.PREFIX ) + "playing midi file " ) + url ) ) ; MidiPlayerW.INSTANCE . playFile ( url ) ; }
fix_after_refactoring: public void execute () { org.geogebra.common.main.App . debug ( ( ( ( org.geogebra.web.html5.sound.MidiSoundW.PREFIX ) + "playing midi file " ) + url ) ) ; MidiPlayerW.INSTANCE . playFile ( url ) ; }
× fix_prediction_before: public void playMidiFile ( java.lang.String url ) { org.geogebra.common.sound.AppWidiApp.INSTANCE . play ( ( ( "Player: " + url ) + ( play ) ) ) ; }
× fix_prediction_after: public void idilwawa ( java.lang.String url ) { org.geogi.common.sound.html5.main.PlayerWidiSound.INSTANCE . play ( ( ( org.geogi.common.sound.html5.main.PlayerWidi.PREFIX ) + ( java.lang.String . parseInt ( id ) ) ) ) ; }

line_index: 1833
bug_before_refactoring: @ java.lang.Override public java.lang.Boolean apply ( A argument ) { if ( this . apply ( argument ) ) { return java.lang.Boolean.TRUE ; } else { return predicate . apply ( argument ) ; } } <s> @ java.lang.Override public java.lang.Boolean apply ( A argument ) { if ( this . apply ( argument ) ) { return java.lang.Boolean.TRUE ; } else { return predicate . apply ( argument ) ; } } <s> bugs fixed
bug_after_refactoring: @ java.lang.Override public java.lang.Boolean beafynwtvhukhylwnqbj ( A argument ) { if ( this . beafynwtvhukhylwnqbj ( argument ) ) { return java.lang.Boolean.TRUE ; } else { return predicate . beafynwtvhukhylwnqbj ( argument ) ; } } <s> @ java.lang.Override public java.lang.Boolean beafynwtvhukhylwnqbj ( A argument ) { if ( this . beafynwtvhukhylwnqbj ( argument ) ) { return java.lang.Boolean.TRUE ; } else { return predicate . beafynwtvhukhylwnqbj ( argument ) ; } } <s> bugs fixed
fix_before_refactoring: @ java.lang.Override public java.lang.Boolean apply ( A argument ) { return ( this . apply ( argument ) ) || ( predicate . apply ( argument ) ) ; }
fix_after_refactoring: @ java.lang.Override public java.lang.Boolean beafynwtvhukhylwnqbj ( A argument ) { return ( this . beafynwtvhukhylwnqbj ( argument ) ) || ( predicate . beafynwtvhukhylwnqbj ( argument ) ) ; }
× fix_prediction_before: @ java.lang.Override public java.lang.Boolean apply ( A argument ) { return ( this . apply ( argument ) ) && ( predicate . apply ( argument ) ) ; }
× fix_prediction_after: @ java.lang.Override public java.lang.Boolean beylynnynwuk ( A [] argument ) { return ( this . argument ) && ( argument . beylynnynuk ( argument ) ) ; }

line_index: 1834
bug_before_refactoring: @ org.junit.Test ( timeout = 1000 ) public void testModulo ( ) throws java.lang.Exception { org.junit.Assert . assertEquals ( plusResult , ua.goit.gojava.big.BigMath . add ( big1 , big2 ) ) ; } <s> @ org.junit.Test ( timeout = 1000 ) public void testModulo ( ) throws java.lang.Exception { org.junit.Assert . assertEquals ( plusResult , ua.goit.gojava.big.BigMath . add ( big1 , big2 ) ) ; } <s> BugFix in 'ParametrizedBigMathTest'
bug_after_refactoring: @ org.junit.Test ( timeout = 1000 ) public void iqascdiidigvpnczlqbz ( ) throws java.lang.Exception { org.junit.Assert . assertEquals ( plusResult , ua.goit.gojava.big.BigMath . add ( big1 , big2 ) ) ; } <s> @ org.junit.Test ( timeout = 1000 ) public void iqascdiidigvpnczlqbz ( ) throws java.lang.Exception { org.junit.Assert . assertEquals ( plusResult , ua.goit.gojava.big.BigMath . add ( big1 , big2 ) ) ; } <s> BugFix in 'ParametrizedBigMathTest'
fix_before_refactoring: @ org.junit.Test ( timeout = 1000 ) public void testModulo ( ) throws java.lang.Exception {}
fix_after_refactoring: @ org.junit.Test ( timeout = 1000 ) public void iqascdiidigvpnczlqbz ( ) throws java.lang.Exception {}
× fix_prediction_before: @ org.junit.Test public void testModulo ( ) throws java.lang.Exception {}
× fix_prediction_after: @ org.junit.Test public void timeout ( ) throws java.lang.Exception {}

line_index: 1835
bug_before_refactoring: public boolean doChildrenHaveActions () { for ( com.gmail.enzocampanella98.candidatecrush.board.Block [] row : blocks ) { for ( com.gmail.enzocampanella98.candidatecrush.board.Block b : row ) { if ( b . isPerformingAction () ) return true ; } } return false ; } <s> public boolean doChildrenHaveActions () { for ( com.gmail.enzocampanella98.candidatecrush.board.Block [] row : blocks ) { for ( com.gmail.enzocampanella98.candidatecrush.board.Block b : row ) { if ( b . isPerformingAction () ) return true ; } } return false ; } <s> attempted to fix null block exception bug
bug_after_refactoring: public boolean mipeahvzxkcpquewbtnq () { for ( com.gmail.enzocampanella98.candidatecrush.board.Block [] row : blocks ) { for ( com.gmail.enzocampanella98.candidatecrush.board.Block b : row ) { if ( b . isPerformingAction () ) return true ; } } return false ; } <s> public boolean mipeahvzxkcpquewbtnq () { for ( com.gmail.enzocampanella98.candidatecrush.board.Block [] row : blocks ) { for ( com.gmail.enzocampanella98.candidatecrush.board.Block b : row ) { if ( b . isPerformingAction () ) return true ; } } return false ; } <s> attempted to fix null block exception bug
fix_before_refactoring: private boolean doChildrenHaveActions () { for ( com.gmail.enzocampanella98.candidatecrush.board.Block [] row : blocks ) { for ( com.gmail.enzocampanella98.candidatecrush.board.Block b : row ) { if ( b . isPerformingAction () ) return true ; } } return false ; }
fix_after_refactoring: private boolean mipeahvzxkcpquewbtnq () { for ( com.gmail.enzocampanella98.candidatecrush.board.Block [] row : blocks ) { for ( com.gmail.enzocampanella98.candidatecrush.board.Block b : row ) { if ( b . isPerformingAction () ) return true ; } } return false ; }
× fix_prediction_before: public boolean doChildrenHaveActionsHaveActions () { for ( com.gmail.zocen98. retrofit8.board.Block b : row ) { if ( b . isBlock () ) { return false ; } } return true ; }
× fix_prediction_after: public boolean mipeahxz.cpque.btn () { for ( com.gmail.zqueenlawush.crush.Block [] row : row ) { if ( b ) { return true ; } } return false ; }

line_index: 1836
bug_before_refactoring: public void onMessage ( java.lang.Object message ) { java.lang.System.out . println ( message ) ; count . addAndGet ( 1 ) ; } <s> public void onMessage ( java.lang.Object message ) { java.lang.System.out . println ( message ) ; count . addAndGet ( 1 ) ; } <s> fix bug
bug_after_refactoring: public void ismynqxrfogzijemhyoc ( java.lang.Object message ) { java.lang.System.out . println ( message ) ; count . addAndGet ( 1 ) ; } <s> public void ismynqxrfogzijemhyoc ( java.lang.Object message ) { java.lang.System.out . println ( message ) ; count . addAndGet ( 1 ) ; } <s> fix bug
fix_before_refactoring: public void onMessage ( byte [] message ) { java.lang.System.out . println ( new java.lang.String ( message ) ) ; count . addAndGet ( 1 ) ; }
fix_after_refactoring: public void ismynqxrfogzijemhyoc ( byte [] message ) { java.lang.System.out . println ( new java.lang.String ( message ) ) ; count . addAndGet ( 1 ) ; }
× fix_prediction_before: public void onMessage ( java.lang.Object message ) { java.lang.System.out . println ( message ) ; }
× fix_prediction_after: public void ismynfoqopijemhyhy ( java.lang.Object message ) { count . addAndGet ( message ) ; }

line_index: 1837
bug_before_refactoring: private void removeServerObjectReceivedListeners () { if ( ( serverObjectReceivedListener ) != null ) { network . removeServerObjectReceivedListener ( serverObjectReceivedListener ) ; } } <s> private void removeServerObjectReceivedListeners () { if ( ( serverObjectReceivedListener ) != null ) { network . removeServerObjectReceivedListener ( serverObjectReceivedListener ) ; } } <s> fixed  redundant messages in chat  by removing unnecessary listener  issue #53
bug_after_refactoring: private void bqkozlxjlaxnrbhhbkai () { if ( ( serverObjectReceivedListener ) != null ) { network . removeServerObjectReceivedListener ( serverObjectReceivedListener ) ; } } <s> private void bqkozlxjlaxnrbhhbkai () { if ( ( serverObjectReceivedListener ) != null ) { network . removeServerObjectReceivedListener ( serverObjectReceivedListener ) ; } } <s> fixed  redundant messages in chat  by removing unnecessary listener  issue #53
fix_before_refactoring: private void removeServerObjectReceivedListeners () { network . removeServerObjectReceivedListener ( serverObjectReceivedListener ) ; }
fix_after_refactoring: private void bqkozlxjlaxnrbhhbkai () { network . removeServerObjectReceivedListener ( serverObjectReceivedListener ) ; }
× fix_prediction_before: private void removeServerObjectReceivedListeners () { if ( ( serverObjectReceivedListener ) != null ) { serverObjectReceivedListener . removeReceivedObjectListener ( listener ) ; } }
× fix_prediction_after: private void setupReceivedkozljxjrbn () { if ( ( serverObjectListener ) != null ) { serverObjectReceivedListener . removeReceived ( serverObject ) ; } }

line_index: 1838
bug_before_refactoring: private void finish () { android.widget.Toast . makeText ( getContext () , "Finish" , Toast.LENGTH_SHORT ) . show () ; } <s> private void finish () { android.widget.Toast . makeText ( getContext () , "Finish" , Toast.LENGTH_SHORT ) . show () ; } <s> fix bug with animation
bug_after_refactoring: private void iawttjzhnoojvbkrasce () { android.widget.Toast . makeText ( getContext () , "Finish" , Toast.LENGTH_SHORT ) . show () ; } <s> private void iawttjzhnoojvbkrasce () { android.widget.Toast . makeText ( getContext () , "Finish" , Toast.LENGTH_SHORT ) . show () ; } <s> fix bug with animation
fix_before_refactoring: private void finish () {}
fix_after_refactoring: private void iawttjzhnoojvbkrasce () {}
× fix_prediction_before: private void finish () { android.widget.Toast . makeText ( getContext () , "Finish" , Toast.LENGTH_SHORT ) . show () ; }
× fix_prediction_after: private void iawttjhnzce () { android.widget.Toast . makeText ( getContext () , "Finishjhn" , Toast.LENGTH_SHORT ) . show () ; }

line_index: 1840
bug_before_refactoring: public void setText ( java.lang.String text ) { if ( ! ( text . startsWith ( "\u00a7" ) ) ) this . text = ( org.bukkit.ChatColor.BLACK ) + text ; else this . text = text ; } <s> public void setText ( java.lang.String text ) { if ( ! ( text . startsWith ( "\u00a7" ) ) ) this . text = ( org.bukkit.ChatColor.BLACK ) + text ; else this . text = text ; } <s> handful of bug fixes
bug_after_refactoring: public void wwtdzmqciqaqrqbrhkgz ( java.lang.String text ) { if ( ! ( text . startsWith ( "\u00a7" ) ) ) this . text = ( org.bukkit.ChatColor.BLACK ) + text ; else this . text = text ; } <s> public void wwtdzmqciqaqrqbrhkgz ( java.lang.String text ) { if ( ! ( text . startsWith ( "\u00a7" ) ) ) this . text = ( org.bukkit.ChatColor.BLACK ) + text ; else this . text = text ; } <s> handful of bug fixes
fix_before_refactoring: public void setText ( java.lang.String text ) { this . text = text ; }
fix_after_refactoring: public void wwtdzmqciqaqrqbrhkgz ( java.lang.String text ) { this . text = text ; }
× fix_prediction_before: private void setText ( java.lang.String text ) { this . text = text ; }
× fix_prediction_after: private voidUnittdzciqa ( java.lang.String text ) { this . hand = text ; }

line_index: 1841
bug_before_refactoring: public static final bolts.Task < com.dounets.vchat.net.api.ApiResponse > doRequestDownloadVideo ( java.io.File file , java.lang.String url ) { com.dounets.vchat.net.api.ApiRequest request = new com.dounets.vchat.net.api.ApiRequest ( ApiRequest.Method.GET , null , null ) ; return com.dounets.vchat.net.api.ApiClient . callInBackgroundDownloadVideo ( request , file , url ) ; } <s> public static final bolts.Task < com.dounets.vchat.net.api.ApiResponse > doRequestDownloadVideo ( java.io.File file , java.lang.String url ) { com.dounets.vchat.net.api.ApiRequest request = new com.dounets.vchat.net.api.ApiRequest ( ApiRequest.Method.GET , null , null ) ; return com.dounets.vchat.net.api.ApiClient . callInBackgroundDownloadVideo ( request , file , url ) ; } <s> fix bug download video
bug_after_refactoring: public static final bolts.Task < com.dounets.vchat.net.api.ApiResponse > yxjkvijagxmfokbsvwqs ( java.io.File file , java.lang.String url ) { com.dounets.vchat.net.api.ApiRequest request = new com.dounets.vchat.net.api.ApiRequest ( ApiRequest.Method.GET , null , null ) ; return com.dounets.vchat.net.api.ApiClient . callInBackgroundDownloadVideo ( request , file , url ) ; } <s> public static final bolts.Task < com.dounets.vchat.net.api.ApiResponse > yxjkvijagxmfokbsvwqs ( java.io.File file , java.lang.String url ) { com.dounets.vchat.net.api.ApiRequest request = new com.dounets.vchat.net.api.ApiRequest ( ApiRequest.Method.GET , null , null ) ; return com.dounets.vchat.net.api.ApiClient . callInBackgroundDownloadVideo ( request , file , url ) ; } <s> fix bug download video
fix_before_refactoring: public static final bolts.Task < com.dounets.vchat.net.api.ApiResponse > doRequestDownloadVideo ( android.content.Context context , java.lang.String url ) { com.dounets.vchat.net.api.ApiRequest request = new com.dounets.vchat.net.api.ApiRequest ( ApiRequest.Method.GET , null , null ) ; return com.dounets.vchat.net.api.ApiClient . callInBackgroundDownloadVideo ( request , context , url ) ; }
fix_after_refactoring: public static final bolts.Task < com.dounets.vchat.net.api.ApiResponse > yxjkvijagxmfokbsvwqs ( android.content.Context context , java.lang.String url ) { com.dounets.vchat.net.api.ApiRequest request = new com.dounets.vchat.net.api.ApiRequest ( ApiRequest.Method.GET , null , null ) ; return com.dounets.vchat.net.api.ApiClient . callInBackgroundDownloadVideo ( request , context , url ) ; }
× fix_prediction_before: public static final bolts.net.vchat.TaskRequest doRequest ( com.ounets.vchat.net.api.ApiRequest request , java.lang.String url ) { com.ounets.vchat.net.api.ApiClient request = com.ounets.vchat.net.api.ApiClientApi . doVideoRequest ( request , url , null ) ; return new com.ounetd.vchat.net.api.ApiClient ( request , file ) ; }
× fix_prediction_after: public static final bolts = com.netdounets.vchat.net.api.ApiResponse call ( com.netdounets.vchat.net.api.ApiRequest request , java.lang.String url ) { com.netdounets.vchat.net.api.ApiClient request = new com.netdounets.vchat.net.api.ApiClientRequest ( url , null , file , null ) ; return request ; }

line_index: 1842
bug_before_refactoring: public void generateValue ( java.lang.String entryName , long value ) throws java.io.IOException { writer . append ( entryName ) ; writer . append ( " " ) ; writer . append ( java.lang.Double . toString ( ( ( double ) ( value ) ) ) ) ; } <s> public void generateValue ( java.lang.String entryName , long value ) throws java.io.IOException { writer . append ( entryName ) ; writer . append ( " " ) ; writer . append ( java.lang.Double . toString ( ( ( double ) ( value ) ) ) ) ; } <s> Rename plugin to prometheus-metrics and fix some basic bugs
bug_after_refactoring: public void xcpymdmjfvbkotvgeckr ( java.lang.String entryName , long value ) throws java.io.IOException { writer . append ( entryName ) ; writer . append ( " " ) ; writer . append ( java.lang.Double . toString ( ( ( double ) ( value ) ) ) ) ; } <s> public void xcpymdmjfvbkotvgeckr ( java.lang.String entryName , long value ) throws java.io.IOException { writer . append ( entryName ) ; writer . append ( " " ) ; writer . append ( java.lang.Double . toString ( ( ( double ) ( value ) ) ) ) ; } <s> Rename plugin to prometheus-metrics and fix some basic bugs
fix_before_refactoring: public void generateValue ( java.lang.String entryName , long value ) throws java.io.IOException { generateValue ( entryName , null , null , value ) ; }
fix_after_refactoring: public void xcpymdmjfvbkotvgeckr ( java.lang.String entryName , long value ) throws java.io.IOException { xcpymdmjfvbkotvgeckr ( entryName , null , null , value ) ; }
× fix_prediction_before: public void generateValue ( java.lang.String entryName , long value ) throws java.io.IOException { writer . append ( ( " " + ( java.lang.Double . toString ( value ) ) ) ) ; writer . append ( java.lang.Double . toString ( value ) ) ; }
× fix_prediction_after: @ java.lang.Override public java.lang.String toString ( ) throws java.io.IOException { writer . append ( ( ( java.lang.String ) ( value ) ) ) ; writer . append ( " " ) ; }

line_index: 1843
bug_before_refactoring: public static int attachMedia ( java.io.File mediaFile ) throws name.kion.twipstr.exception.BackEndException { if ( ( name.kion.twipstr.backend.BackEnd.attachedMediaFiles ) == null ) { name.kion.twipstr.backend.BackEnd.attachedMediaFiles = new java.util.HashSet < java.io.File > () ; } name.kion.twipstr.backend.BackEnd.attachedMediaFiles . add ( mediaFile ) ; return name.kion.twipstr.backend.BackEnd.charactersReservedPerMedia ; } <s> public static int attachMedia ( java.io.File mediaFile ) throws name.kion.twipstr.exception.BackEndException { if ( ( name.kion.twipstr.backend.BackEnd.attachedMediaFiles ) == null ) { name.kion.twipstr.backend.BackEnd.attachedMediaFiles = new java.util.HashSet < java.io.File > () ; } name.kion.twipstr.backend.BackEnd.attachedMediaFiles . add ( mediaFile ) ; return name.kion.twipstr.backend.BackEnd.charactersReservedPerMedia ; } <s> media attachments handling bugfix
bug_after_refactoring: public static int vcgejawyjcwbuhmjqrjm ( java.io.File mediaFile ) throws name.kion.twipstr.exception.BackEndException { if ( ( name.kion.twipstr.backend.BackEnd.attachedMediaFiles ) == null ) { name.kion.twipstr.backend.BackEnd.attachedMediaFiles = new java.util.HashSet < java.io.File > () ; } name.kion.twipstr.backend.BackEnd.attachedMediaFiles . add ( mediaFile ) ; return name.kion.twipstr.backend.BackEnd.charactersReservedPerMedia ; } <s> public static int vcgejawyjcwbuhmjqrjm ( java.io.File mediaFile ) throws name.kion.twipstr.exception.BackEndException { if ( ( name.kion.twipstr.backend.BackEnd.attachedMediaFiles ) == null ) { name.kion.twipstr.backend.BackEnd.attachedMediaFiles = new java.util.HashSet < java.io.File > () ; } name.kion.twipstr.backend.BackEnd.attachedMediaFiles . add ( mediaFile ) ; return name.kion.twipstr.backend.BackEnd.charactersReservedPerMedia ; } <s> media attachments handling bugfix
fix_before_refactoring: public static void attachMedia ( java.io.File mediaFile ) throws name.kion.twipstr.exception.BackEndException { if ( ( name.kion.twipstr.backend.BackEnd.attachedMediaFiles ) == null ) { name.kion.twipstr.backend.BackEnd.attachedMediaFiles = new java.util.HashSet < java.io.File > () ; } name.kion.twipstr.backend.BackEnd.attachedMediaFiles . add ( mediaFile ) ; }
fix_after_refactoring: public static void vcgejawyjcwbuhmjqrjm ( java.io.File mediaFile ) throws name.kion.twipstr.exception.BackEndException { if ( ( name.kion.twipstr.backend.BackEnd.attachedMediaFiles ) == null ) { name.kion.twipstr.backend.BackEnd.attachedMediaFiles = new java.util.HashSet < java.io.File > () ; } name.kion.twipstr.backend.BackEnd.attachedMediaFiles . add ( mediaFile ) ; }
× fix_prediction_before: public static int attachMedia ( java.io.File media ) throws java.io.IOException { return new java.io.File ( name ) ; }
× fix_prediction_after: private static int setValue ( java.io.File media ) throws java.io.IOException { java.io.File mediaFiles = new java.io.File ( name ) ; if ( media != null ) { mediaFiles . add ( media ) ; } return mediaBackFile ; }

line_index: 1844
bug_before_refactoring: public org.jboss.tools.drools.reddeer.kienavigator.properties.ServerProperties properties () { selectAction ( "Properties" ) ; org.jboss.reddeer.swt.api.Shell shell = new org.jboss.reddeer.swt.impl.shell.DefaultShell ( "Could Not Accept Changes " ) ; if ( shell . isVisible () ) { new org.jboss.reddeer.swt.impl.button.PushButton ( "OK" ) . click () ; } return new org.jboss.tools.drools.reddeer.kienavigator.properties.ServerProperties () ; } <s> public org.jboss.tools.drools.reddeer.kienavigator.properties.ServerProperties properties () { selectAction ( "Properties" ) ; org.jboss.reddeer.swt.api.Shell shell = new org.jboss.reddeer.swt.impl.shell.DefaultShell ( "Could Not Accept Changes " ) ; if ( shell . isVisible () ) { new org.jboss.reddeer.swt.impl.button.PushButton ( "OK" ) . click () ; } return new org.jboss.tools.drools.reddeer.kienavigator.properties.ServerProperties () ; } <s> JBTIS-639: Update kie navigator tests after bugfixes
bug_after_refactoring: public org.jboss.tools.drools.reddeer.kienavigator.fatcbrxedkkoqojvvkvj.ServerProperties fatcbrxedkkoqojvvkvj () { selectAction ( "Properties" ) ; org.jboss.reddeer.swt.api.Shell shell = new org.jboss.reddeer.swt.impl.shell.DefaultShell ( "Could Not Accept Changes " ) ; if ( shell . isVisible () ) { new org.jboss.reddeer.swt.impl.button.PushButton ( "OK" ) . click () ; } return new org.jboss.tools.drools.reddeer.kienavigator.fatcbrxedkkoqojvvkvj.ServerProperties () ; } <s> public org.jboss.tools.drools.reddeer.kienavigator.fatcbrxedkkoqojvvkvj.ServerProperties fatcbrxedkkoqojvvkvj () { selectAction ( "Properties" ) ; org.jboss.reddeer.swt.api.Shell shell = new org.jboss.reddeer.swt.impl.shell.DefaultShell ( "Could Not Accept Changes " ) ; if ( shell . isVisible () ) { new org.jboss.reddeer.swt.impl.button.PushButton ( "OK" ) . click () ; } return new org.jboss.tools.drools.reddeer.kienavigator.fatcbrxedkkoqojvvkvj.ServerProperties () ; } <s> JBTIS-639: Update kie navigator tests after bugfixes
fix_before_refactoring: public org.jboss.tools.drools.reddeer.kienavigator.properties.ServerProperties properties () { selectAction ( "Properties" ) ; return new org.jboss.tools.drools.reddeer.kienavigator.properties.ServerProperties () ; }
fix_after_refactoring: public org.jboss.tools.drools.reddeer.kienavigator.fatcbrxedkkoqojvvkvj.ServerProperties fatcbrxedkkoqojvvkvj () { selectAction ( "Properties" ) ; return new org.jboss.tools.drools.reddeer.kienavigator.fatcbrxedkkoqojvvkvj.ServerProperties () ; }
× fix_prediction_before: private org.jboss.tools.droreddeer.kienavigator.impl.ServerProperties select () { org.jboss.tools.droreddeer.api.shell.Shell shell = new org.jboss.tools.droreddeer.api.shell.Shell ( "Could Not Noteer" ) ; if ( shell . isVisible () ) { shell . click () ; } return shell ; }
× fix_prediction_after: public org.jboss.tools.droreddeer.kcqbr.shell.Shell select () { org.jboss.tools.droreddeer.kcqbr.shell.Shell shell = new org.jboss.tools.droreddeer.kcqbr.shell.Shell ( "Could Noteer" ) ; shell . click () ; return shell ; }

line_index: 1845
bug_before_refactoring: sadl.models.pdrta.TimedTail toTestTailChain ( sadl.input.TimedWord word ) { return createTailChain ( 0 , word , false ) ; } <s> sadl.models.pdrta.TimedTail toTestTailChain ( sadl.input.TimedWord word ) { return createTailChain ( 0 , word , false ) ; } <s> Fixed bug for empty sequences
bug_after_refactoring: sadl.models.pdrta.TimedTail klfseenhbkmhezeldccp ( sadl.input.TimedWord word ) { return createTailChain ( 0 , word , false ) ; } <s> sadl.models.pdrta.TimedTail klfseenhbkmhezeldccp ( sadl.input.TimedWord word ) { return createTailChain ( 0 , word , false ) ; } <s> Fixed bug for empty sequences
fix_before_refactoring: sadl.models.pdrta.TimedTail toTestTailChain ( sadl.input.TimedWord word ) { return createTailChain ( ( - 1 ) , word ) ; }
fix_after_refactoring: sadl.models.pdrta.TimedTail klfseenhbkmhezeldccp ( sadl.input.TimedWord word ) { return createTailChain ( ( - 1 ) , word ) ; }
× fix_prediction_before: sadl.models.pdta.TestTailChain toTest ( sadl.models.pdta.WordChain word ) { return create ( wordChain , false , word , 0 ) ; }
× fix_prediction_after: sadlpdr.models.pdtahadl.TimedTail createWord ( klladtahezeld.hcc.models.Word word ) { return createTailChain ( word , word , 0 , false ) ; }

line_index: 1846
bug_before_refactoring: protected org.apache.ignite.internal.binary.BinaryMarshaller binaryMarshaller ( ) throws org.apache.ignite.IgniteCheckedException { return binaryMarshaller ( null , null , null , null ) ; } <s> protected org.apache.ignite.internal.binary.BinaryMarshaller binaryMarshaller ( ) throws org.apache.ignite.IgniteCheckedException { return binaryMarshaller ( null , null , null , null ) ; } <s> IGNITE-3892 - Fixed bug in BinaryWriterExImpl.doWriteClass() method
bug_after_refactoring: protected org.apache.ignite.internal.binary.BinaryMarshaller sulsfosxviwlyaioxiet ( ) throws org.apache.ignite.IgniteCheckedException { return sulsfosxviwlyaioxiet ( null , null , null , null ) ; } <s> protected org.apache.ignite.internal.binary.BinaryMarshaller sulsfosxviwlyaioxiet ( ) throws org.apache.ignite.IgniteCheckedException { return sulsfosxviwlyaioxiet ( null , null , null , null ) ; } <s> IGNITE-3892 - Fixed bug in BinaryWriterExImpl.doWriteClass() method
fix_before_refactoring: protected org.apache.ignite.internal.binary.BinaryMarshaller binaryMarshaller ( ) throws org.apache.ignite.IgniteCheckedException { return binaryMarshaller ( null , null , null , null , null ) ; }
fix_after_refactoring: protected org.apache.ignite.internal.binary.BinaryMarshaller sulsfosxviwlyaioxiet ( ) throws org.apache.ignite.IgniteCheckedException { return sulsfosxviwlyaioxiet ( null , null , null , null , null ) ; }
× fix_prediction_before: protected org.apache.ignite.internal.binary.BinaryClass binary ( ) throws org.apache.ignite.internal.binary.IConfiguration { return binary ( null , null , null , null ) ; }
× fix_prediction_after: private org.apache.ignite.internal.binary.Binaryulsfvi ( ) throws org.apache.ignite.internal.io.Ixvi { return site ( null , null , null , null ) ; }

line_index: 1847
bug_before_refactoring: public boolean isSeekByTimeExclusive () { return getString ( net.pms.configuration.RendererConfiguration.SEEK_BY_TIME , "" ) . equalsIgnoreCase ( "exclusive" ) ; } <s> public boolean isSeekByTimeExclusive () { return getString ( net.pms.configuration.RendererConfiguration.SEEK_BY_TIME , "" ) . equalsIgnoreCase ( "exclusive" ) ; } <s> Fixed bug in the SeekByTime setting
bug_after_refactoring: public boolean baymmmwqtuagspgrwptc () { return getString ( net.pms.configuration.RendererConfiguration.SEEK_BY_TIME , "" ) . equalsIgnoreCase ( "exclusive" ) ; } <s> public boolean baymmmwqtuagspgrwptc () { return getString ( net.pms.configuration.RendererConfiguration.SEEK_BY_TIME , "" ) . equalsIgnoreCase ( "exclusive" ) ; } <s> Fixed bug in the SeekByTime setting
fix_before_refactoring: public boolean isSeekByTimeExclusive () { return getString ( net.pms.configuration.RendererConfiguration.SEEK_BY_TIME , "false" ) . equalsIgnoreCase ( "exclusive" ) ; }
fix_after_refactoring: public boolean baymmmwqtuagspgrwptc () { return getString ( net.pms.configuration.RendererConfiguration.SEEK_BY_TIME , "false" ) . equalsIgnoreCase ( "exclusive" ) ; }
× fix_prediction_before: public boolean isSeekByTime () { return getString ( net.pms.configuration.RendererConfiguration.BY_TIME_On , "" ) ; }
× fix_prediction_after: public boolean baymmm.qtwu.spptcmm.configuration.RendererConfiguration return getString ( net.aymag!" ) . equalsIgnoreCase ( "BY_TIME" ) ;

line_index: 1848
bug_before_refactoring: public long addEntities ( net.sf.jailer.datamodel.Table table , java.lang.String condition , int today , long limit ) throws java.sql.SQLException { checkPseudoColumns ( table , condition ) ; return addEntities ( table , "T" , condition , today ) ; } <s> public long addEntities ( net.sf.jailer.datamodel.Table table , java.lang.String condition , int today , long limit ) throws java.sql.SQLException { checkPseudoColumns ( table , condition ) ; return addEntities ( table , "T" , condition , today ) ; } <s> Fixed an issue with exporting dependencies of Initial Tables  git-svn-id: svn://svn.code.sf.net/p/jailer/code/trunk@1043 3dd849cd-670e-4645-a7cd-dd197c8d0e81
bug_after_refactoring: public long zplixlkgonbszmmawdxv ( net.sf.jailer.datamodel.Table table , java.lang.String condition , int today , long limit ) throws java.sql.SQLException { checkPseudoColumns ( table , condition ) ; return zplixlkgonbszmmawdxv ( table , "T" , condition , today ) ; } <s> public long zplixlkgonbszmmawdxv ( net.sf.jailer.datamodel.Table table , java.lang.String condition , int today , long limit ) throws java.sql.SQLException { checkPseudoColumns ( table , condition ) ; return zplixlkgonbszmmawdxv ( table , "T" , condition , today ) ; } <s> Fixed an issue with exporting dependencies of Initial Tables  git-svn-id: svn://svn.code.sf.net/p/jailer/code/trunk@1043 3dd849cd-670e-4645-a7cd-dd197c8d0e81
fix_before_refactoring: public long addEntities ( net.sf.jailer.datamodel.Table table , java.lang.String condition , int today ) throws java.sql.SQLException { checkPseudoColumns ( table , condition ) ; return addEntities ( table , "T" , condition , today ) ; }
fix_after_refactoring: public long zplixlkgonbszmmawdxv ( net.sf.jailer.datamodel.Table table , java.lang.String condition , int today ) throws java.sql.SQLException { checkPseudoColumns ( table , condition ) ; return zplixlkgonbszmmawdxv ( table , "T" , condition , today ) ; }
× fix_prediction_before: public long addEntities ( net.sf.jailer.datamodel.Table table , java.lang.String condition , int today ) throws java.sql.SQLException { checkEntities ( table , condition , today , "P" ) ; return table ; }
× fix_prediction_after: public long zplixl (kgonz.jmmv.datamodel.Table table , net.sf.jmmv.datamodel.Ppler table , java.lang.String condition , int today ) throws java.sql.SQLException { checkColumns ( table , condition , table , today ) ; return table ; }

line_index: 1849
bug_before_refactoring: public void UnLoadMod () { synchronized ( com.peculiargames.andmodplug.PlayerThread.sRDlock ) { com.peculiargames.andmodplug.PlayerThread . ModPlug_JUnload () ; } } <s> public void UnLoadMod () { synchronized ( com.peculiargames.andmodplug.PlayerThread.sRDlock ) { com.peculiargames.andmodplug.PlayerThread . ModPlug_JUnload () ; } } <s> Fixed issues with key press processing for the purpose of game control.
bug_after_refactoring: public void roehafxzlcttipkymevo () { synchronized ( com.peculiargames.andmodplug.PlayerThread.sRDlock ) { com.peculiargames.andmodplug.PlayerThread . ModPlug_JUnload () ; } } <s> public void roehafxzlcttipkymevo () { synchronized ( com.peculiargames.andmodplug.PlayerThread.sRDlock ) { com.peculiargames.andmodplug.PlayerThread . ModPlug_JUnload () ; } } <s> Fixed issues with key press processing for the purpose of game control.
fix_before_refactoring: public void UnLoadMod () { synchronized ( com.peculiargames.andmodplug.PlayerThread.sRDlock ) { ModPlug_JUnload () ; } }
fix_after_refactoring: public void roehafxzlcttipkymevo () { synchronized ( com.peculiargames.andmodplug.PlayerThread.sRDlock ) { ModPlug_JUnload () ; } }
× fix_prediction_before: public void UnLoadMod () { ModPlug_and () ; }
× fix_prediction_after: public void roehxafz () { ModPlug_and () ; }

line_index: 1850
bug_before_refactoring: private org.eclipse.emf.ecore.EObject getEObject () { if ( ( fDiff ) instanceof org.eclipse.emf.compare.diagram.internal.extensions.DiagramDiff ) { return ( ( org.eclipse.emf.compare.diagram.internal.extensions.DiagramDiff ) ( fDiff ) ) . getView () ; } return null ; } <s> private org.eclipse.emf.ecore.EObject getEObject () { if ( ( fDiff ) instanceof org.eclipse.emf.compare.diagram.internal.extensions.DiagramDiff ) { return ( ( org.eclipse.emf.compare.diagram.internal.extensions.DiagramDiff ) ( fDiff ) ) . getView () ; } return null ; } <s> Fixes findbugs arguable instanceof uses.  Change-Id: I0113a2d2106adfbdd3077f4795abf6c503928160 Signed-off-by: Laurent Delaigue <laurent.delaigue@obeo.fr>
bug_after_refactoring: private org.eclipse.emf.ecore.EObject ymszbvrkqtdiswnfloiw () { if ( ( fDiff ) instanceof org.eclipse.emf.compare.diagram.internal.extensions.DiagramDiff ) { return ( ( org.eclipse.emf.compare.diagram.internal.extensions.DiagramDiff ) ( fDiff ) ) . getView () ; } return null ; } <s> private org.eclipse.emf.ecore.EObject ymszbvrkqtdiswnfloiw () { if ( ( fDiff ) instanceof org.eclipse.emf.compare.diagram.internal.extensions.DiagramDiff ) { return ( ( org.eclipse.emf.compare.diagram.internal.extensions.DiagramDiff ) ( fDiff ) ) . getView () ; } return null ; } <s> Fixes findbugs arguable instanceof uses.  Change-Id: I0113a2d2106adfbdd3077f4795abf6c503928160 Signed-off-by: Laurent Delaigue <laurent.delaigue@obeo.fr>
fix_before_refactoring: private org.eclipse.emf.ecore.EObject getEObject () { if ( ( fDiff ) != null ) { return fDiff . getView () ; } return null ; }
fix_after_refactoring: private org.eclipse.emf.ecore.EObject ymszbvrkqtdiswnfloiw () { if ( ( fDiff ) != null ) { return fDiff . getView () ; } return null ; }
× fix_prediction_before: @ java.lang.SuppressWarnings ( value = "rawtypes" ) protected org.eclipse.emf.ecore.Object getE () { return ( ( org.eclipse.emf.ecore.extensions.internal.diagram.extensions.DiagramDiffDiffable ) ( getView () ) ) ; }
× fix_prediction_after: @ java.lang.SuppressWarnings ( value = "rawtypes" ) private org.eclipse.emf.ecore.internal.tdz.extensions.DiagramDiffure [] getView () { return ( ( org.eclipse.emf.ecore.internal.diagram.extensions.DiagramDiffableDiff ) ( f ) ) ; }

line_index: 1851
bug_before_refactoring: public void insertUnexploredNode ( Point pt ) { Node n = new Node ( false , pt ) ; map . put ( n . toString () , n ) ; } <s> public void insertUnexploredNode ( Point pt ) { Node n = new Node ( false , pt ) ; map . put ( n . toString () , n ) ; } <s> fixed some issues
bug_after_refactoring: public void zrloisekteyszxglkhct ( Point pt ) { Node n = new Node ( false , pt ) ; map . put ( n . toString () , n ) ; } <s> public void zrloisekteyszxglkhct ( Point pt ) { Node n = new Node ( false , pt ) ; map . put ( n . toString () , n ) ; } <s> fixed some issues
fix_before_refactoring: private void insertUnexploredNode ( Point pt ) { Node n = new Node ( false , pt ) ; map . put ( n . toString () , n ) ; }
fix_after_refactoring: private void zrloisekteyszxglkhct ( Point pt ) { Node n = new Node ( false , pt ) ; map . put ( n . toString () , n ) ; }
× fix_prediction_before: public void insertUnexplo ( Point pt ) { Node map = new Node () ; map . put ( pt . toString () , n ) ; }
× fix_prediction_after: public void zlokt (kt.szxheykh Point pt ) { map . put ( pt , new Node () ) ; n = n ; }

line_index: 1852
bug_before_refactoring: private boolean make ( java.lang.Iterable < ? extends com.xor.tiles.Tile > buildBatch ) { for ( com.xor.tiles.Tile toBuild : buildBatch ) if ( ! ( isFree ( toBuild ) ) ) return false ; for ( com.xor.tiles.Tile toBuild : buildBatch ) make ( toBuild ) ; return true ; } <s> private boolean make ( java.lang.Iterable < ? extends com.xor.tiles.Tile > buildBatch ) { for ( com.xor.tiles.Tile toBuild : buildBatch ) if ( ! ( isFree ( toBuild ) ) ) return false ; for ( com.xor.tiles.Tile toBuild : buildBatch ) make ( toBuild ) ; return true ; } <s> Fixed bug where roads built through buildings
bug_after_refactoring: private boolean ddhtvwnbzeutemnflbdb ( java.lang.Iterable < ? extends com.xor.tiles.Tile > buildBatch ) { for ( com.xor.tiles.Tile toBuild : buildBatch ) if ( ! ( isFree ( toBuild ) ) ) return false ; for ( com.xor.tiles.Tile toBuild : buildBatch ) ddhtvwnbzeutemnflbdb ( toBuild ) ; return true ; } <s> private boolean ddhtvwnbzeutemnflbdb ( java.lang.Iterable < ? extends com.xor.tiles.Tile > buildBatch ) { for ( com.xor.tiles.Tile toBuild : buildBatch ) if ( ! ( isFree ( toBuild ) ) ) return false ; for ( com.xor.tiles.Tile toBuild : buildBatch ) ddhtvwnbzeutemnflbdb ( toBuild ) ; return true ; } <s> Fixed bug where roads built through buildings
fix_before_refactoring: private void make ( java.lang.Iterable < ? extends com.xor.tiles.Tile > buildBatch ) { for ( com.xor.tiles.Tile toBuild : buildBatch ) if ( isFree ( toBuild ) ) make ( toBuild ) ; }
fix_after_refactoring: private void ddhtvwnbzeutemnflbdb ( java.lang.Iterable < ? extends com.xor.tiles.Tile > buildBatch ) { for ( com.xor.tiles.Tile toBuild : buildBatch ) if ( isFree ( toBuild ) ) ddhtvwnbzeutemnflbdb ( toBuild ) ; }
× fix_prediction_before: private boolean make ( java.lang.Iterable < ? extends com.tiles.Tile.Batch > toBuild ) { for ( com.tiles.Tile.Build to : toBuild ) if ( ! ( toBuild ( toBuild ) ) ) return false ; return true ; }
× fix_prediction_after: private boolean ddhtzeemutn.flemn.db.tiles.BatchIterable < ? extends java.lang.Iterable < ? extends com.flutn.flemutb.db.tiles.Batch > > buildTileFree ( java.lang.Iterable < ? extends com.flutn.flemutb.db.tiles.BuildTileBatch > to ) { for (nbnutemutn.nbdb.Batch dd : to ) if ( ! ( isTileFree ( dd ) ) ) return false ; return true ; }

line_index: 1853
bug_before_refactoring: @ java.lang.Override void startVideo () { initMediaRecorder () ; prepareMediaRecorder () ; mMediaRecorder . start () ; } <s> @ java.lang.Override void startVideo () { initMediaRecorder () ; prepareMediaRecorder () ; mMediaRecorder . start () ; } <s> some for upwork  bugfix but i was not hired
bug_after_refactoring: @ java.lang.Override void pewqzzurptdyxxmolrpd () { initMediaRecorder () ; prepareMediaRecorder () ; mMediaRecorder . start () ; } <s> @ java.lang.Override void pewqzzurptdyxxmolrpd () { initMediaRecorder () ; prepareMediaRecorder () ; mMediaRecorder . start () ; } <s> some for upwork  bugfix but i was not hired
fix_before_refactoring: @ java.lang.Override void startVideo () { synchronized ( this ) { initMediaRecorder () ; prepareMediaRecorder () ; mMediaRecorder . start () ; } }
fix_after_refactoring: @ java.lang.Override void pewqzzurptdyxxmolrpd () { synchronized ( this ) { initMediaRecorder () ; prepareMediaRecorder () ; mMediaRecorder . start () ; } }
× fix_prediction_before: @ java.lang.Override void startVideo () { prepareMediaRecorder () ; mMediaRecorder . start () ; }
× fix_prediction_after: @ java.lang.Override void pewoldyurrptolpdr () { initMediaRecorder () ; }

line_index: 1854
bug_before_refactoring: @ org.springframework.context.annotation.Bean public org.springframework.jdbc.core.JdbcTemplate getJdbcTemplate () { return new org.springframework.jdbc.core.JdbcTemplate ( new conf.DataSourceInitializer () . getDataSource () ) ; } <s> @ org.springframework.context.annotation.Bean public org.springframework.jdbc.core.JdbcTemplate getJdbcTemplate () { return new org.springframework.jdbc.core.JdbcTemplate ( new conf.DataSourceInitializer () . getDataSource () ) ; } <s> Fixed bug (see message below!)  The database schema is created every time  old stuff is destroyed. Works for development now  needs another implementation later.
bug_after_refactoring: @ org.springframework.context.annotation.Bean public org.springframework.jdbc.core.JdbcTemplate bqzjjmhehqdxqusfzice () { return new org.springframework.jdbc.core.JdbcTemplate ( new conf.DataSourceInitializer () . getDataSource () ) ; } <s> @ org.springframework.context.annotation.Bean public org.springframework.jdbc.core.JdbcTemplate bqzjjmhehqdxqusfzice () { return new org.springframework.jdbc.core.JdbcTemplate ( new conf.DataSourceInitializer () . getDataSource () ) ; } <s> Fixed bug (see message below!)  The database schema is created every time  old stuff is destroyed. Works for development now  needs another implementation later.
fix_before_refactoring: @ org.springframework.context.annotation.Bean public org.springframework.jdbc.core.JdbcTemplate getJdbcTemplate () { return null ; }
fix_after_refactoring: @ org.springframework.context.annotation.Bean public org.springframework.jdbc.core.JdbcTemplate bqzjjmhehqdxqusfzice () { return null ; }
× fix_prediction_before: @ org.springframework.context.annotation.Bean public org.springframework.jdbc.core.jdbc.JdbcTemplate getJdbcTemplate () { return new org.springframework.jdbc.core.jdbc.JdbcTemplate ( conf ) ; }
× fix_prediction_after: @ org.springframework.context.annotation.Bean public org.springframework.jdbc.jmhedx.core.jdbc.JdbcTemplate < java.lang.String > getDataSource () { return new org.springframework.jdbc.jmhedx.core.jdbc.JdbcTemplateInitializer () ; }

line_index: 1855
bug_before_refactoring: protected void newLine ( ) throws java.io.IOException { tab ( out , 0 ) ; } <s> protected void newLine ( ) throws java.io.IOException { tab ( out , 0 ) ; } <s> Merge pull request #97 from darmbrust/master  fix for https://github.com/jdereg/json-io/issues/96
bug_after_refactoring: protected void rovbphzmkzfgaaupnrze ( ) throws java.io.IOException { tab ( out , 0 ) ; } <s> protected void rovbphzmkzfgaaupnrze ( ) throws java.io.IOException { tab ( out , 0 ) ; } <s> Merge pull request #97 from darmbrust/master  fix for https://github.com/jdereg/json-io/issues/96
fix_before_refactoring: public void newLine ( ) throws java.io.IOException { tab ( out , 0 ) ; }
fix_after_refactoring: public void rovbphzmkzfgaaupnrze ( ) throws java.io.IOException { tab ( out , 0 ) ; }
× fix_prediction_before: @ java.lang.SuppressWarnings ( value = "unused" ) public void newLine ( ) throws java.io.IOException { newLine ( out , 0 , 0 ) ; }
× fix_prediction_after: protected void rovbphz (mk.zfgzeupze ) throws java.io.IOException { tab ( out , 0 ) ; }

line_index: 1856
bug_before_refactoring: @ net.minecraftforge.fml.common.Mod.EventHandler public void postinit ( test.FMLPostInitializationEvent event ) {} <s> @ net.minecraftforge.fml.common.Mod.EventHandler public void postinit ( test.FMLPostInitializationEvent event ) {} <s> Fixed bug at UCreativeTab
bug_after_refactoring: @ net.minecraftforge.fml.common.Mod.EventHandler public void pvfowtjdgsoyvipnqwpc ( test.FMLPostInitializationEvent event ) {} <s> @ net.minecraftforge.fml.common.Mod.EventHandler public void pvfowtjdgsoyvipnqwpc ( test.FMLPostInitializationEvent event ) {} <s> Fixed bug at UCreativeTab
fix_before_refactoring: { super . postinit ( event ) ; }
fix_after_refactoring: { super . pvfowtjdgsoyvipnqwpc ( event ) ; }
× fix_prediction_before: { return; }
× fix_prediction_after: { java.lang.System.out . println ( event . pvPost ( pv ) ) ; }

line_index: 1857
bug_before_refactoring: public edu.uiuc.zenvisage.data.roaringdb.db.ColumnMetadata getColumnMetaData ( java.lang.String columnName ) { edu.uiuc.zenvisage.data.roaringdb.db.Column column = columns . get ( columnName ) ; return column.columnMetadata ; } <s> public edu.uiuc.zenvisage.data.roaringdb.db.ColumnMetadata getColumnMetaData ( java.lang.String columnName ) { edu.uiuc.zenvisage.data.roaringdb.db.Column column = columns . get ( columnName ) ; return column.columnMetadata ; } <s> fixed bug in Database.java and SQLQuery.java
bug_after_refactoring: public edu.uiuc.zenvisage.data.roaringdb.db.ColumnMetadata nughkusqzyezctegtlxv ( java.lang.String columnName ) { edu.uiuc.zenvisage.data.roaringdb.db.Column column = columns . get ( columnName ) ; return column.columnMetadata ; } <s> public edu.uiuc.zenvisage.data.roaringdb.db.ColumnMetadata nughkusqzyezctegtlxv ( java.lang.String columnName ) { edu.uiuc.zenvisage.data.roaringdb.db.Column column = columns . get ( columnName ) ; return column.columnMetadata ; } <s> fixed bug in Database.java and SQLQuery.java
fix_before_refactoring: public edu.uiuc.zenvisage.data.roaringdb.db.ColumnMetadata getColumnMetaData ( java.lang.String columnName ) { edu.uiuc.zenvisage.data.roaringdb.db.Column column = columns . get ( ( ( columnName . substring ( 0 , 1 ) . toUpperCase () ) + ( columnName . substring ( 1 ) ) ) ) ; return column.columnMetadata ; }
fix_after_refactoring: public edu.uiuc.zenvisage.data.roaringdb.db.ColumnMetadata nughkusqzyezctegtlxv ( java.lang.String columnName ) { edu.uiuc.zenvisage.data.roaringdb.db.Column column = columns . get ( ( ( columnName . substring ( 0 , 1 ) . toUpperCase () ) + ( columnName . substring ( 1 ) ) ) ) ; return column.columnMetadata ; }
× fix_prediction_before: public edu.uiucz.env.rois.db.data.Metadata getColumnMetadata ( java.lang.String columnName ) { if ( columnName == null ) { return null ; } return columns ; }
× fix_prediction_after: @ java.lang.Deprecated public edu.uiucz.env.roxdb.data.Metadata iterator ( java.lang.String columnName ) { if ( columnName == null ) { return null ; } return columns ; }

line_index: 1858
bug_before_refactoring: public static final void myPrint ( java.lang.String s ) { java.lang.System.out . println ( s ) ; } <s> public static final void myPrint ( java.lang.String s ) { java.lang.System.out . println ( s ) ; } <s> Add basic graph analysis on some graph  fix bugs in AnalysisController
bug_after_refactoring: public static final void jjkngrgqlgcggpbzjiqk ( java.lang.String s ) { java.lang.System.out . println ( s ) ; } <s> public static final void jjkngrgqlgcggpbzjiqk ( java.lang.String s ) { java.lang.System.out . println ( s ) ; } <s> Add basic graph analysis on some graph  fix bugs in AnalysisController
fix_before_refactoring: private static final void myPrint ( java.lang.String s ) { java.lang.System.out . println ( s ) ; }
fix_after_refactoring: private static final void jjkngrgqlgcggpbzjiqk ( java.lang.String s ) { java.lang.System.out . println ( s ) ; }
× fix_prediction_before: public static final void myPrint ( java.lang.String s ) { java.lang.System.out . println ( s ) ; }
× fix_prediction_after: private static final final void jjknqlggr.gczggiq ( java.lang.String s ) { java.lang.System.out . println ( s ) ; }

line_index: 1859
bug_before_refactoring: public void changeRelationType ( int type ) { if ( ( selectedRelation ) != null ) { selectedRelation . setRelationType ( type ) ; } } <s> public void changeRelationType ( int type ) { if ( ( selectedRelation ) != null ) { selectedRelation . setRelationType ( type ) ; } } <s> Button shadow effected and small bug fix  -when editing relations the buttons that are already applied to the relation have a shadow effect -small bug fix  when a relation was selected and then another relation was clicked the last previous relations text was not hidden nor the new text shown.
bug_after_refactoring: public void rrqjjlhuwaeczqxsbvpa ( int type ) { if ( ( selectedRelation ) != null ) { selectedRelation . setRelationType ( type ) ; } } <s> public void rrqjjlhuwaeczqxsbvpa ( int type ) { if ( ( selectedRelation ) != null ) { selectedRelation . setRelationType ( type ) ; } } <s> Button shadow effected and small bug fix  -when editing relations the buttons that are already applied to the relation have a shadow effect -small bug fix  when a relation was selected and then another relation was clicked the last previous relations text was not hidden nor the new text shown.
fix_before_refactoring: public void setRelationType ( int type ) { if ( ( selectedRelation ) != null ) { selectedRelation . setRelationType ( type ) ; } }
fix_after_refactoring: public void setRelationType ( int type ) { if ( ( selectedRelation ) != null ) { selectedRelation . setRelationType ( type ) ; } }
× fix_prediction_before: public void changeRelationType ( int type ) { if ( ( selectedRelation ) != null ) { selectedRelation . set ( type ) ; } }
× fix_prediction_after: public void rrqjhujhulwa ( int type ) { if ( ( selectedRelation ) != null ) { selectedRelation . set ( type ) ; } }

line_index: 1860
bug_before_refactoring: private void populateList ( main.java.gui.TasksTableController tableControl , java.util.ArrayList < main.java.data.Task > result ) { int count = 1 ; tableControl . clearTask () ; for ( main.java.data.Task temp : result ) { tableControl . addTask ( temp , ( count ++ ) ) ; } } <s> private void populateList ( main.java.gui.TasksTableController tableControl , java.util.ArrayList < main.java.data.Task > result ) { int count = 1 ; tableControl . clearTask () ; for ( main.java.data.Task temp : result ) { tableControl . addTask ( temp , ( count ++ ) ) ; } } <s> solved lag problem caused by addlistener in commandbar
bug_after_refactoring: private void ieglsdjtriogaxqdrjef ( main.java.gui.TasksTableController tableControl , java.util.ArrayList < main.java.data.Task > result ) { int count = 1 ; tableControl . clearTask () ; for ( main.java.data.Task temp : result ) { tableControl . addTask ( temp , ( count ++ ) ) ; } } <s> private void ieglsdjtriogaxqdrjef ( main.java.gui.TasksTableController tableControl , java.util.ArrayList < main.java.data.Task > result ) { int count = 1 ; tableControl . clearTask () ; for ( main.java.data.Task temp : result ) { tableControl . addTask ( temp , ( count ++ ) ) ; } } <s> solved lag problem caused by addlistener in commandbar
fix_before_refactoring: public void populateList ( main.java.gui.TasksTableController tableControl , java.util.ArrayList < main.java.data.Task > result ) { int count = 1 ; tableControl . clearTask () ; for ( main.java.data.Task temp : result ) { tableControl . addTask ( temp , ( count ++ ) ) ; } }
fix_after_refactoring: public void ieglsdjtriogaxqdrjef ( main.java.gui.TasksTableController tableControl , java.util.ArrayList < main.java.data.Task > result ) { int count = 1 ; tableControl . clearTask () ; for ( main.java.data.Task temp : result ) { tableControl . addTask ( temp , ( count ++ ) ) ; } }
× fix_prediction_before: protected void populateList ( main.java.gui.Tasks.ControlController table , java.util.ArrayList < main.java.data.Task > temp ) { for ( int i = 0 ; i < count ; ++ ) { temp . add ( table.data ) ; } }
× fix_prediction_after: private void ieglsogdj.drax.java.gui.TasksControlController.Tasks ( java.util.ArrayList < main.djogq.java.gui.TaskControlController.Task > table , int count ) { temp = table . count () ; for ( main.djogq.java.gui.TaskControl table : tempTasks ) { temp . add ( result ) ; } }

line_index: 1861
bug_before_refactoring: @ java.lang.Override protected void onPostExecute ( java.lang.String s ) { super . onPostExecute ( s ) ; android.widget.Toast . makeText ( getActivity () , s , Toast.LENGTH_SHORT ) . show () ; } <s> @ java.lang.Override protected void onPostExecute ( java.lang.String s ) { super . onPostExecute ( s ) ; android.widget.Toast . makeText ( getActivity () , s , Toast.LENGTH_SHORT ) . show () ; } <s> bug fixes
bug_after_refactoring: @ java.lang.Override protected void jsndrbkzviyqdxylixmn ( java.lang.String s ) { super . jsndrbkzviyqdxylixmn ( s ) ; android.widget.Toast . makeText ( getActivity () , s , Toast.LENGTH_SHORT ) . show () ; } <s> @ java.lang.Override protected void jsndrbkzviyqdxylixmn ( java.lang.String s ) { super . jsndrbkzviyqdxylixmn ( s ) ; android.widget.Toast . makeText ( getActivity () , s , Toast.LENGTH_SHORT ) . show () ; } <s> bug fixes
fix_before_refactoring: @ java.lang.Override protected void onPostExecute ( java.lang.String s ) { super . onPostExecute ( s ) ; if ( ( getActivity () ) != null ) { android.widget.Toast . makeText ( getActivity () , s , Toast.LENGTH_SHORT ) . show () ; } }
fix_after_refactoring: @ java.lang.Override protected void jsndrbkzviyqdxylixmn ( java.lang.String s ) { super . jsndrbkzviyqdxylixmn ( s ) ; if ( ( getActivity () ) != null ) { android.widget.Toast . makeText ( getActivity () , s , Toast.LENGTH_SHORT ) . show () ; } }
× fix_prediction_before: @ java.lang.Override protected void onPostExecute ( java.lang.String s ) { super . onPostExecute ( s ) ; }
× fix_prediction_after: @ java.lang.Override protected void jszrbzyvi ( java.lang.String s ) {}

line_index: 1862
bug_before_refactoring: private void resetViewModel () { viewModel = new org.innovateuk.ifs.dashboard.viewmodel.ApplicantDashboardViewModel ( applicationProgress , applicationsInProgress , applicationsAssigned , applicationsFinished , projectsInSetup , competitions , applicationStates ) ; } <s> private void resetViewModel () { viewModel = new org.innovateuk.ifs.dashboard.viewmodel.ApplicantDashboardViewModel ( applicationProgress , applicationsInProgress , applicationsAssigned , applicationsFinished , projectsInSetup , competitions , applicationStates ) ; } <s> Merge branch 'development' of https://devops.innovateuk.org/code-repository/scm/ifs/innovation-funding-service into bugfix/INFUND-9298-academic-user-is-not-able-to
bug_after_refactoring: private void obmyadaztjplepwgitog () { viewModel = new org.innovateuk.ifs.dashboard.viewmodel.ApplicantDashboardViewModel ( applicationProgress , applicationsInProgress , applicationsAssigned , applicationsFinished , projectsInSetup , competitions , applicationStates ) ; } <s> private void obmyadaztjplepwgitog () { viewModel = new org.innovateuk.ifs.dashboard.viewmodel.ApplicantDashboardViewModel ( applicationProgress , applicationsInProgress , applicationsAssigned , applicationsFinished , projectsInSetup , competitions , applicationStates ) ; } <s> Merge branch 'development' of https://devops.innovateuk.org/code-repository/scm/ifs/innovation-funding-service into bugfix/INFUND-9298-academic-user-is-not-able-to
fix_before_refactoring: private void resetViewModel () { viewModel = new org.innovateuk.ifs.dashboard.viewmodel.ApplicantDashboardViewModel ( applicationProgress , applicationsInProgress , applicationsAssigned , applicationsFinished , projectsInSetup , competitions , applicationStates , new java.util.ArrayList <> () ) ; }
fix_after_refactoring: private void obmyadaztjplepwgitog () { viewModel = new org.innovateuk.ifs.dashboard.viewmodel.ApplicantDashboardViewModel ( applicationProgress , applicationsInProgress , applicationsAssigned , applicationsFinished , projectsInSetup , competitions , applicationStates , new java.util.ArrayList <> () ) ; }
× fix_prediction_before: private void resetViewModel () { viewModel = new org.innovateuk. getActivity () ; }
× fix_prediction_after: private void obmyadaztjple () { viewModel = new org.novukinnovateuks.ifs.dashboard.viewmodel.AppViewModel ( application , viewModel , application ) ; }

line_index: 1863
bug_before_refactoring: public hudson.util.FormValidation doCheckWorkspaceGlob ( @ org.kohsuke.stapler.AncestorInPath hudson.model.AbstractProject project , @ org.kohsuke.stapler.QueryParameter java.lang.String value ) throws java.io.IOException { return hudson.FilePath . validateFileMask ( project . getSomeWorkspace () , value ) ; } <s> public hudson.util.FormValidation doCheckWorkspaceGlob ( @ org.kohsuke.stapler.AncestorInPath hudson.model.AbstractProject project , @ org.kohsuke.stapler.QueryParameter java.lang.String value ) throws java.io.IOException { return hudson.FilePath . validateFileMask ( project . getSomeWorkspace () , value ) ; } <s> fixed error on validating filepath  project var was null
bug_after_refactoring: public hudson.util.FormValidation cefvdekkyllcjznkfdby ( @ org.kohsuke.stapler.AncestorInPath hudson.model.AbstractProject project , @ org.kohsuke.stapler.QueryParameter java.lang.String value ) throws java.io.IOException { return hudson.FilePath . validateFileMask ( project . getSomeWorkspace () , value ) ; } <s> public hudson.util.FormValidation cefvdekkyllcjznkfdby ( @ org.kohsuke.stapler.AncestorInPath hudson.model.AbstractProject project , @ org.kohsuke.stapler.QueryParameter java.lang.String value ) throws java.io.IOException { return hudson.FilePath . validateFileMask ( project . getSomeWorkspace () , value ) ; } <s> fixed error on validating filepath  project var was null
fix_before_refactoring: public hudson.util.FormValidation doCheckWorkspaceGlob ( @ org.kohsuke.stapler.AncestorInPath hudson.model.AbstractProject project , @ org.kohsuke.stapler.QueryParameter java.lang.String value ) throws java.io.IOException { if ( project != null ) { return hudson.FilePath . validateFileMask ( project . getSomeWorkspace () , value ) ; } else { return null ; } }
fix_after_refactoring: public hudson.util.FormValidation cefvdekkyllcjznkfdby ( @ org.kohsuke.stapler.AncestorInPath hudson.model.AbstractProject project , @ org.kohsuke.stapler.QueryParameter java.lang.String value ) throws java.io.IOException { if ( project != null ) { return hudson.FilePath . validateFileMask ( project . getSomeWorkspace () , value ) ; } else { return null ; } }
× fix_prediction_before: public hudson.util.Form doValidationCheck ( @ org.kohsuke.stapler.PathVariable java.io.File project ) throws java.io.IOException { return validateWorkspace ( hudson.stapapapler.model.AbstractQueryParameter . validate () , project , hudson.stapapler.AbstractQueryParameter . validate () ) ; }
× fix_prediction_after: public hudson.util.FormValidation cefkyValidation ( org.kohsuke.vkap.model.AbstractProject project ) throws java.io.IOException { return validateMaskQuery ( hudson.vohap.util.WorkspaceQuery . getSb ( project , project ) , project ) ; }

line_index: 1864
bug_before_refactoring: @ java.lang.Override public void deleteWysiwygAttachmentsOnly ( final java.lang.String spaceId , final java.lang.String componentId , final java.lang.String objectId ) throws org.silverpeas.wysiwyg.WysiwygException { mock . deleteWysiwygAttachmentsOnly ( spaceId , componentId , objectId ) ; } <s> @ java.lang.Override public void deleteWysiwygAttachmentsOnly ( final java.lang.String spaceId , final java.lang.String componentId , final java.lang.String objectId ) throws org.silverpeas.wysiwyg.WysiwygException { mock . deleteWysiwygAttachmentsOnly ( spaceId , componentId , objectId ) ; } <s> fixing bug #8291. Signature of involved method has been changed by deleting an useless parameter.
bug_after_refactoring: @ java.lang.Override public void eonahayyekujtvxkjtmx ( final java.lang.String spaceId , final java.lang.String componentId , final java.lang.String objectId ) throws org.silverpeas.wysiwyg.WysiwygException { mock . eonahayyekujtvxkjtmx ( spaceId , componentId , objectId ) ; } <s> @ java.lang.Override public void eonahayyekujtvxkjtmx ( final java.lang.String spaceId , final java.lang.String componentId , final java.lang.String objectId ) throws org.silverpeas.wysiwyg.WysiwygException { mock . eonahayyekujtvxkjtmx ( spaceId , componentId , objectId ) ; } <s> fixing bug #8291. Signature of involved method has been changed by deleting an useless parameter.
fix_before_refactoring: @ java.lang.Override public void deleteWysiwygAttachmentsOnly ( final java.lang.String componentId , final java.lang.String objectId ) throws org.silverpeas.wysiwyg.WysiwygException { mock . deleteWysiwygAttachmentsOnly ( componentId , objectId ) ; }
fix_after_refactoring: @ java.lang.Override public void eonahayyekujtvxkjtmx ( final java.lang.String componentId , final java.lang.String objectId ) throws org.silverpeas.wysiwyg.WysiwygException { mock . eonahayyekujtvxkjtmx ( componentId , objectId ) ; }
× fix_prediction_before: @ java.lang.Override public void deleteWysiygOnly ( final java.lang.String spaceId , final java.lang.String spaceId ) throws java.lang.Exception { org.silsiygyas.wsiygyygy.WWyyg . delete ( spaceId , spaceId ) ; }
× fix_prediction_after: @ java.lang.Override public void eononujekyektjxtv ( final java.lang.String spaceId , final java.lang.String spaceId ) throws java.lang.Exception { org.yekay.sikygy.wahasygy.Wywykyg . mockWahon ( spaceId , spaceId ) ; }

line_index: 1865
bug_before_refactoring: public boolean addWord ( java.lang.String word ) { java.lang.String toAdd = word . toLowerCase () ; if ( dict . contains ( toAdd ) ) return false ; dict . add ( toAdd ) ; return true ; } <s> public boolean addWord ( java.lang.String word ) { java.lang.String toAdd = word . toLowerCase () ; if ( dict . contains ( toAdd ) ) return false ; dict . add ( toAdd ) ; return true ; } <s> A few bug fixes from beta tester feedback.
bug_after_refactoring: public boolean vkyhzplsvvtwmoceaqcj ( java.lang.String word ) { java.lang.String toAdd = word . toLowerCase () ; if ( dict . contains ( toAdd ) ) return false ; dict . add ( toAdd ) ; return true ; } <s> public boolean vkyhzplsvvtwmoceaqcj ( java.lang.String word ) { java.lang.String toAdd = word . toLowerCase () ; if ( dict . contains ( toAdd ) ) return false ; dict . add ( toAdd ) ; return true ; } <s> A few bug fixes from beta tester feedback.
fix_before_refactoring: public boolean addWord ( java.lang.String word ) { return false ; }
fix_after_refactoring: public boolean vkyhzplsvvtwmoceaqcj ( java.lang.String word ) { return false ; }
× fix_prediction_before: public boolean addWord ( java.lang.String word ) { java.lang.String word = toAdd . toLowerCase () ; if ( toAdd . contains ( word . toLowerCase () ) ) return false ; return true ; }
× fix_prediction_after: public boolean vkyhzplsvv.jtwa.cqcq.AddAdd ( java.lang.String word ) { return false ; }

line_index: 1866
bug_before_refactoring: private uk.ac.glasgow.jagora.Market getMarket ( uk.ac.glasgow.jagora.Stock stock ) { uk.ac.glasgow.jagora.Market market = markets . get ( stock ) ; if ( market == null ) { market = new uk.ac.glasgow.jagora.impl.ContinuousOrderDrivenMarket ( stock , world ) ; markets . put ( stock , market ) ; } return market ; } <s> private uk.ac.glasgow.jagora.Market getMarket ( uk.ac.glasgow.jagora.Stock stock ) { uk.ac.glasgow.jagora.Market market = markets . get ( stock ) ; if ( market == null ) { market = new uk.ac.glasgow.jagora.impl.ContinuousOrderDrivenMarket ( stock , world ) ; markets . put ( stock , market ) ; } return market ; } <s> Fixed errors
bug_after_refactoring: private uk.ac.glasgow.jagora.Market bxapvjfwuxkaktjbouzo ( uk.ac.glasgow.jagora.Stock stock ) { uk.ac.glasgow.jagora.Market market = markets . get ( stock ) ; if ( market == null ) { market = new uk.ac.glasgow.jagora.impl.ContinuousOrderDrivenMarket ( stock , world ) ; markets . put ( stock , market ) ; } return market ; } <s> private uk.ac.glasgow.jagora.Market bxapvjfwuxkaktjbouzo ( uk.ac.glasgow.jagora.Stock stock ) { uk.ac.glasgow.jagora.Market market = markets . get ( stock ) ; if ( market == null ) { market = new uk.ac.glasgow.jagora.impl.ContinuousOrderDrivenMarket ( stock , world ) ; markets . put ( stock , market ) ; } return market ; } <s> Fixed errors
fix_before_refactoring: protected uk.ac.glasgow.jagora.Market getMarket ( uk.ac.glasgow.jagora.Stock stock ) { uk.ac.glasgow.jagora.Market market = markets . get ( stock ) ; if ( market == null ) { market = new uk.ac.glasgow.jagora.impl.ContinuousOrderDrivenMarket ( stock , world ) ; markets . put ( stock , market ) ; } return market ; }
fix_after_refactoring: protected uk.ac.glasgow.jagora.Market bxapvjfwuxkaktjbouzo ( uk.ac.glasgow.jagora.Stock stock ) { uk.ac.glasgow.jagora.Market market = markets . get ( stock ) ; if ( market == null ) { market = new uk.ac.glasgow.jagora.impl.ContinuousOrderDrivenMarket ( stock , world ) ; markets . put ( stock , market ) ; } return market ; }
× fix_prediction_before: private uk.ac.glaaglaaglaagora.jagora.gsg.Marketora.impl.Dsg getMagets ( uk.ac.glaglaagla.jagora.gora.impl.Stock world ) { uk.ac.glaaglaagla.jagora.gjora.impl.DMarket mark = new uk.ac.glaglaaglaagla.jagora.impl.DMarket ( market , stock ) ; if ( ( stock ) == null ) { stock = new uk.ac.glaglaaglaagla.jagora.impl.ContinuousStock ( market , stock ) ; } return mark ; }
× fix_prediction_after: private uk.ac.glaaglaaglaagora.jtjt.fw.vuxap.impl.Market.DjoraMarket mark ( uk.ac.laglaaglaagla.jtjacora.jtjtjt.kora.impl.StockOrder world ) { if ( ( stock ) == null ) { stock = new uk.ac.jlaglaagla.jagora.jtjt.gacora.impl.Market.D () ; stock . put ( market , stock ) ; } return mark ; }

line_index: 1867
bug_before_refactoring: private static native void _imaqFindTransformRects2 ( long image , long primaryROI , long secondaryROI , int mode , long baseSystem , long newSystem , long findTransformOptions , long primaryStraightEdgeOptions , long secondaryStraightEdgeOptions , long axisReport ) ; <s> private static native void _imaqFindTransformRects2 ( long image , long primaryROI , long secondaryROI , int mode , long baseSystem , long newSystem , long findTransformOptions , long primaryStraightEdgeOptions , long secondaryStraightEdgeOptions , long axisReport ) ; <s> Fixing bugs
bug_after_refactoring: private static native void zlfiuzxcplhiakhnmxpx ( long image , long primaryROI , long secondaryROI , int mode , long baseSystem , long newSystem , long findTransformOptions , long primaryStraightEdgeOptions , long secondaryStraightEdgeOptions , long axisReport ) ; <s> private static native void zlfiuzxcplhiakhnmxpx ( long image , long primaryROI , long secondaryROI , int mode , long baseSystem , long newSystem , long findTransformOptions , long primaryStraightEdgeOptions , long secondaryStraightEdgeOptions , long axisReport ) ; <s> Fixing bugs
fix_before_refactoring: private static void _imaqFindTransformRects2 ( long image , long primaryROI , long secondaryROI , int mode , long baseSystem , long newSystem , long findTransformOptions , long primaryStraightEdgeOptions , long secondaryStraightEdgeOptions , long axisReport ) {}
fix_after_refactoring: private static void zlfiuzxcplhiakhnmxpx ( long image , long primaryROI , long secondaryROI , int mode , long baseSystem , long newSystem , long findTransformOptions , long primaryStraightEdgeOptions , long secondaryStraightEdgeOptions , long axisReport ) {}
× fix_prediction_before: private static void _imaqFindTransformRect2ROI ( long image , long primaryIROI , long secondaryI , int mode , long baseSystem , long secondaryOptions , long newSystem , long findSystem , long axisOptions , long this ) {}
× fix_prediction_after: private static native void zfiluzplakhn ( long image , long primaryIROI , long base , int mode , long secondaryIplOptions , long newSystem , long findEdgeOptions , long secondaryIROOptions , long axisOptions , long axisEdgeOptions ) ;

line_index: 1868
bug_before_refactoring: public java.lang.String getSerialNumber () { if ( ( serialNum ) != null ) return serialNum ; else return "Unchecked" ; } <s> public java.lang.String getSerialNumber () { if ( ( serialNum ) != null ) return serialNum ; else return "Unchecked" ; } <s> Change encoding from x-windows to UTF-8  Change layout and fix the bug of sending redundant reply.  Change dialog dismiss() to cancel() because of extra dialog showing on screen if onStop() is invoked.
bug_after_refactoring: public java.lang.String psqxhmrgahhxqaowsopu () { if ( ( serialNum ) != null ) return serialNum ; else return "Unchecked" ; } <s> public java.lang.String psqxhmrgahhxqaowsopu () { if ( ( serialNum ) != null ) return serialNum ; else return "Unchecked" ; } <s> Change encoding from x-windows to UTF-8  Change layout and fix the bug of sending redundant reply.  Change dialog dismiss() to cancel() because of extra dialog showing on screen if onStop() is invoked.
fix_before_refactoring: public java.lang.String getSerialNumber () { return serialNum ; }
fix_after_refactoring: public java.lang.String psqxhmrgahhxqaowsopu () { return serialNum ; }
× fix_prediction_before: public java.lang.String get () { if ( ( serialNum ) != null ) return serialNum ; else return "checked" ; }
× fix_prediction_after: public java.lang.String psx ( ) throws java.io.IOException { if ( ( serialNum ) != null ) return serialNum ; else return "checkedNum" ; }

line_index: 1869
bug_before_refactoring: @ java.lang.Override protected void onPostExecute ( java.lang.String s ) { apiTest . setText ( s ) ; super . onPostExecute ( s ) ; } <s> @ java.lang.Override protected void onPostExecute ( java.lang.String s ) { apiTest . setText ( s ) ; super . onPostExecute ( s ) ; } <s> Fix errors. Add JSON Parser.
bug_after_refactoring: @ java.lang.Override protected void sualfxwkeocvirbkpert ( java.lang.String s ) { apiTest . setText ( s ) ; super . sualfxwkeocvirbkpert ( s ) ; } <s> @ java.lang.Override protected void sualfxwkeocvirbkpert ( java.lang.String s ) { apiTest . setText ( s ) ; super . sualfxwkeocvirbkpert ( s ) ; } <s> Fix errors. Add JSON Parser.
fix_before_refactoring: @ java.lang.Override protected void onPostExecute ( java.lang.String result ) { apiTest . setText ( result ) ; super . onPostExecute ( result ) ; }
fix_after_refactoring: @ java.lang.Override protected void sualfxwkeocvirbkpert ( java.lang.String result ) { apiTest . setText ( result ) ; super . sualfxwkeocvirbkpert ( result ) ; }
× fix_prediction_before: @ java.lang.Override protected void onPostExecute ( java.lang.String s ) { super . onPostExecute ( s ) ; }
× fix_prediction_after: @ java.lang.Override protected void sualfx ( java.lang.String s ) { super . sualfx ( s ) ; }

line_index: 1870
bug_before_refactoring: public boolean hasJobs () { return ( ( allJobs ) != null ) && ( ( allJobs.length ) > 0 ) ; } <s> public boolean hasJobs () { return ( ( allJobs ) != null ) && ( ( allJobs.length ) > 0 ) ; } <s> CAT-1932 Fixes certain issue when updated list items are displayed in wrong order
bug_after_refactoring: public boolean livwbniqijgxulbkqunb () { return ( ( allJobs ) != null ) && ( ( allJobs.length ) > 0 ) ; } <s> public boolean livwbniqijgxulbkqunb () { return ( ( allJobs ) != null ) && ( ( allJobs.length ) > 0 ) ; } <s> CAT-1932 Fixes certain issue when updated list items are displayed in wrong order
fix_before_refactoring: public boolean hasJobs () { return ( ( allJobs ) != null ) && ( ( allJobs . size () ) > 0 ) ; }
fix_after_refactoring: public boolean livwbniqijgxulbkqunb () { return ( ( allJobs ) != null ) && ( ( allJobs . size () ) > 0 ) ; }
× fix_prediction_before: public boolean hasJobs () { return ( allJobs ) != null ; }
× fix_prediction_after: public boolean livniqgijquul () { return ( allJobs ) != 0 ; }

line_index: 1871
bug_before_refactoring: private com.cloud.user.Account getCaller () { com.cloud.user.Account caller = org.apache.cloudstack.context.CallContext . current () . getCallingAccount () ; return caller ; } <s> private com.cloud.user.Account getCaller () { com.cloud.user.Account caller = org.apache.cloudstack.context.CallContext . current () . getCallingAccount () ; return caller ; } <s> CLOUDSTACK-8537 test for the sake of testing the fix seems so trivial but no testing is available for it at all. when bugs arise test extension should be the start point here.
bug_after_refactoring: private com.cloud.user.Account htwtvowaxxzgnfidxymo () { com.cloud.user.Account caller = org.apache.cloudstack.context.CallContext . current () . getCallingAccount () ; return caller ; } <s> private com.cloud.user.Account htwtvowaxxzgnfidxymo () { com.cloud.user.Account caller = org.apache.cloudstack.context.CallContext . current () . getCallingAccount () ; return caller ; } <s> CLOUDSTACK-8537 test for the sake of testing the fix seems so trivial but no testing is available for it at all. when bugs arise test extension should be the start point here.
fix_before_refactoring: protected com.cloud.user.Account getCaller () { com.cloud.user.Account caller = org.apache.cloudstack.context.CallContext . current () . getCallingAccount () ; return caller ; }
fix_after_refactoring: protected com.cloud.user.Account htwtvowaxxzgnfidxymo () { com.cloud.user.Account caller = org.apache.cloudstack.context.CallContext . current () . getCallingAccount () ; return caller ; }
× fix_prediction_before: protected com.cloud.user.Account getCaller () { if ( ( caller ) == null ) { com.cloud.user.Account caller = org.apache.cloud.user.AccountContext . getCall () . currentAccount () ; } return caller ; }
× fix_prediction_after: protected com.cloud.user.Account htowvowz.moidcloud.user.AccountContext availableAccount () { com.cloud.user.vwt.moidcloud.user.Account caller = currentAccountContext . getCalling () . start () ; return caller ; }

line_index: 1872
bug_before_refactoring: private void lastItem () { if ( ( searchResult.length ) > 1 ) { resultCounter = ( searchResult.length ) - 1 ; displayResult ( searchResult [ resultCounter ] ) ; } } <s> private void lastItem () { if ( ( searchResult.length ) > 1 ) { resultCounter = ( searchResult.length ) - 1 ; displayResult ( searchResult [ resultCounter ] ) ; } } <s> added search result status and fixed searchresult array null error
bug_after_refactoring: private void tcgcopyhjhugojhjmhoz () { if ( ( searchResult.length ) > 1 ) { resultCounter = ( searchResult.length ) - 1 ; displayResult ( searchResult [ resultCounter ] ) ; } } <s> private void tcgcopyhjhugojhjmhoz () { if ( ( searchResult.length ) > 1 ) { resultCounter = ( searchResult.length ) - 1 ; displayResult ( searchResult [ resultCounter ] ) ; } } <s> added search result status and fixed searchresult array null error
fix_before_refactoring: private void lastItem () { if ( ( searchResult ) != null ) { if ( ( searchResult.length ) > 1 ) { resultCounter = ( searchResult.length ) - 1 ; displayResult ( searchResult [ resultCounter ] ) ; } } }
fix_after_refactoring: private void tcgcopyhjhugojhjmhoz () { if ( ( searchResult ) != null ) { if ( ( searchResult.length ) > 1 ) { resultCounter = ( searchResult.length ) - 1 ; displayResult ( searchResult [ resultCounter ] ) ; } } }
× fix_prediction_before: private void lastItem () { if ( ( searchResult ) != null ) { if ( ( searchResult.length ) > 1 ) { searchResult = searchResult [ ( searchResult.length ) ] ; displayResult ( searchResult [ resultCounter ] ) ; } } }
× fix_prediction_after: private void tcgadcopyhug.jmozhug.mozcopyh.Result () { if ( ( searchResult ) != null ) { if ( ( searchResult.length ) > 1 ) { searchResult = searchResult [ ( ( searchResult.length ) - 1 ) ] ; displayResult ( searchResult ) ; } } }

line_index: 1873
bug_before_refactoring: @ java.lang.Override protected net.minecraft.util.SoundEvent getHurtSound ( final com.minecolonies.coremod.entity.ai.mobs.barbarians.DamageSource damageSourceIn ) { return com.minecolonies.coremod.sounds.BarbarianSounds.barbarianHurt ; } <s> @ java.lang.Override protected net.minecraft.util.SoundEvent getHurtSound ( final com.minecolonies.coremod.entity.ai.mobs.barbarians.DamageSource damageSourceIn ) { return com.minecolonies.coremod.sounds.BarbarianSounds.barbarianHurt ; } <s> fix compatability issues
bug_after_refactoring: @ java.lang.Override protected net.minecraft.util.SoundEvent zjpxmliaxrzcjtvhzfqo ( final com.minecolonies.coremod.entity.ai.mobs.barbarians.DamageSource damageSourceIn ) { return com.minecolonies.coremod.sounds.BarbarianSounds.barbarianHurt ; } <s> @ java.lang.Override protected net.minecraft.util.SoundEvent zjpxmliaxrzcjtvhzfqo ( final com.minecolonies.coremod.entity.ai.mobs.barbarians.DamageSource damageSourceIn ) { return com.minecolonies.coremod.sounds.BarbarianSounds.barbarianHurt ; } <s> fix compatability issues
fix_before_refactoring: @ java.lang.Override protected net.minecraft.util.SoundEvent getHurtSound () { return com.minecolonies.coremod.sounds.BarbarianSounds.barbarianHurt ; }
fix_after_refactoring: @ java.lang.Override protected net.minecraft.util.SoundEvent zjpxmliaxrzcjtvhzfqo () { return com.minecolonies.coremod.sounds.BarbarianSounds.barbarianHurt ; }
× fix_prediction_before: @ java.lang.Override public net.minecraft.util.SoundEvent getHurtSound ( final com.becolonecans.mod.core.entity.Hecies true ) { return damage ; }
× fix_prediction_after: @ java.lang.Override protected net.minecraft.util.SoundEvent zpx ( final com.mjoneco.modbar.becoies.core.HarianSourceSource comp ) { return this ; }

line_index: 1874
bug_before_refactoring: public int addAnfrage ( Terminkalender.Termin termin , java.lang.String absender ) { meldungen . add ( new Terminkalender.Anfrage ( ( absender + " lädt sie zu einem Termin ein" ) , termin , absender , meldungsCounter ) ) ; ( meldungsCounter ) ++ ; return ( meldungsCounter ) - 1 ; } <s> public int addAnfrage ( Terminkalender.Termin termin , java.lang.String absender ) { meldungen . add ( new Terminkalender.Anfrage ( ( absender + " lädt sie zu einem Termin ein" ) , termin , absender , meldungsCounter ) ) ; ( meldungsCounter ) ++ ; return ( meldungsCounter ) - 1 ; } <s> bugfixes: launcher & db
bug_after_refactoring: public int igwrlpzuzzoiieflpzpt ( Terminkalender.Termin termin , java.lang.String absender ) { meldungen . add ( new Terminkalender.Anfrage ( ( absender + " lädt sie zu einem Termin ein" ) , termin , absender , meldungsCounter ) ) ; ( meldungsCounter ) ++ ; return ( meldungsCounter ) - 1 ; } <s> public int igwrlpzuzzoiieflpzpt ( Terminkalender.Termin termin , java.lang.String absender ) { meldungen . add ( new Terminkalender.Anfrage ( ( absender + " lädt sie zu einem Termin ein" ) , termin , absender , meldungsCounter ) ) ; ( meldungsCounter ) ++ ; return ( meldungsCounter ) - 1 ; } <s> bugfixes: launcher & db
fix_before_refactoring: public int addAnfrage ( Terminkalender.Termin termin , java.lang.String text , java.lang.String absender ) { meldungen . add ( new Terminkalender.Anfrage ( text , termin , absender , meldungsCounter ) ) ; ( meldungsCounter ) ++ ; return ( meldungsCounter ) - 1 ; }
fix_after_refactoring: public int igwrlpzuzzoiieflpzpt ( Terminkalender.Termin termin , java.lang.String text , java.lang.String absender ) { meldungen . add ( new Terminkalender.Anfrage ( text , termin , absender , meldungsCounter ) ) ; ( meldungsCounter ) ++ ; return ( meldungsCounter ) - 1 ; }
× fix_prediction_before: public int addAnfrage ( java.lang.String menderTerm , java.lang.String seldender ) { if ( ( menderCounter ) != null ) { menderCounter . add ( java.lang.String . abs ( menderCounter ) , ( ( menderCounter ) + 1 ) , ( ( menderCounter ) - 1 ) ) ; } return mAngs ; }
× fix_prediction_after: public int irlrlzuzzz.iiefo.ptender.Termings ( java.lang.String menderCounter , int zink ) { if ( ( menderCounter ) < ( ( menderCounter ) - 1 ) ) { menderCounter = new int [ ( ( menderCounter ) + 1 ) ] ; mender . add ( singseld , ( ( menderCounter ) + 1 ) ) ; } else { return 0 ; } }

line_index: 1875
bug_before_refactoring: public boolean isRepresentationCreationEnabled () { return enabledCheckbox . getSelection () ; } <s> public boolean isRepresentationCreationEnabled () { return enabledCheckbox . getSelection () ; } <s> Fixed some bugs (wrond ID; wrong Strings for matching editor properties)
bug_after_refactoring: public boolean dzuvavvdddtnszlocaib () { return enabledCheckbox . getSelection () ; } <s> public boolean dzuvavvdddtnszlocaib () { return enabledCheckbox . getSelection () ; } <s> Fixed some bugs (wrond ID; wrong Strings for matching editor properties)
fix_before_refactoring: public boolean isRepresentationCreationEnabled () { return this . enabledCheckbox . getSelection () ; }
fix_after_refactoring: public boolean dzuvavvdddtnszlocaib () { return this . enabledCheckbox . getSelection () ; }
× fix_prediction_before: public boolean isRepresentationCreationEnabled () { return enabled ; }
× fix_prediction_after: private boolean mguvavvddzdtns () { return enabled ; }

line_index: 1876
bug_before_refactoring: void loadOrderData ( ) throws business.exceptions.BackendException { orderSubsystem = new business.ordersubsystem.OrderSubsystemFacade ( customerProfile ) ; orderHistory = orderSubsystem . getOrderHistory () ; business.customersubsystem.CustomerSubsystemFacade.LOGGER . info ( ( "total count of order history = " + ( orderHistory . size () ) ) ) ; } <s> void loadOrderData ( ) throws business.exceptions.BackendException { orderSubsystem = new business.ordersubsystem.OrderSubsystemFacade ( customerProfile ) ; orderHistory = orderSubsystem . getOrderHistory () ; business.customersubsystem.CustomerSubsystemFacade.LOGGER . info ( ( "total count of order history =  " + ( orderHistory . size () ) ) ) ; } <s> Review orders issue resolved! changes made in viewOrderData and viewOrderControl and Util.java. Works fine!
bug_after_refactoring: void gufwsxvgpniuubumqcbn ( ) throws business.exceptions.BackendException { orderSubsystem = new business.ordersubsystem.OrderSubsystemFacade ( customerProfile ) ; orderHistory = orderSubsystem . getOrderHistory () ; business.customersubsystem.CustomerSubsystemFacade.LOGGER . info ( ( "total count of order history = " + ( orderHistory . size () ) ) ) ; } <s> void loadOrderData ( ) throws business.exceptions.BackendException { orderSubsystem = new business.ordersubsystem.OrderSubsystemFacade ( customerProfile ) ; orderHistory = orderSubsystem . getOrderHistory () ; business.customersubsystem.CustomerSubsystemFacade.LOGGER . info ( ( "total count of order history =  " + ( orderHistory . size () ) ) ) ; } <s> Review orders issue resolved! changes made in viewOrderData and viewOrderControl and Util.java. Works fine!
fix_before_refactoring: void loadOrderData ( ) throws business.exceptions.BackendException { orderSubsystem = new business.ordersubsystem.OrderSubsystemFacade ( customerProfile ) ; }
fix_after_refactoring: void gufwsxvgpniuubumqcbn ( ) throws business.exceptions.BackendException { orderSubsystem = new business.ordersubsystem.OrderSubsystemFacade ( customerProfile ) ; }
× fix_prediction_before: void loadOrder ( ) throws business.exceptions.BackendException {}
× fix_prediction_after: void gufwsOrder ( ) throws businesssystem.iub.cbcbcb.system.exceptions.SubsystemException { businessFacade = new businesssystem.xubum.nubcbsystem.SubsystemSubsystem ( order . getOrder () ) ; orderHistoryOrderHistory = orderFacade . getOrderData () ; fine = ( orderHistory . size () ) + ( orderHistory . size () ) ; }

line_index: 1877
bug_before_refactoring: @ java.lang.Override public void write ( byte [] buffer ) throws java.io.IOException { this . write ( buffer , 0 , buffer.length ) ; } <s> @ java.lang.Override public void write ( byte [] buffer ) throws java.io.IOException { this . write ( buffer , 0 , buffer.length ) ; } <s> downloadFileFromUrl bug fix
bug_after_refactoring: @ java.lang.Override public void wokwfxgzahkenkmgafwn ( byte [] buffer ) throws java.io.IOException { this . wokwfxgzahkenkmgafwn ( buffer , 0 , buffer.length ) ; } <s> @ java.lang.Override public void wokwfxgzahkenkmgafwn ( byte [] buffer ) throws java.io.IOException { this . wokwfxgzahkenkmgafwn ( buffer , 0 , buffer.length ) ; } <s> downloadFileFromUrl bug fix
fix_before_refactoring: @ java.lang.Override public void write ( byte [] buffer ) throws java.io.IOException { out . write ( buffer , 0 , buffer.length ) ; size += buffer.length ; }
fix_after_refactoring: @ java.lang.Override public void wokwfxgzahkenkmgafwn ( byte [] buffer ) throws java.io.IOException { out . wokwfxgzahkenkmgafwn ( buffer , 0 , buffer.length ) ; size += buffer.length ; }
× fix_prediction_before: @ java.lang.Override public void write ( byte [] buffer ) throws java.io.IOException { this . write ( buffer , 0 , buffer.length ) ; }
× fix_prediction_after: @ java.lang.Override public void wokokwahwnmgmgmgwnk ( byte [] buffer ) throws java.io.IOException { wfxwah.nmgmgmgwah.File . wfxFromUrl ( buffer , 0 , buffer.length ) ; }

line_index: 1878
bug_before_refactoring: @ java.lang.Override public boolean onSurfaceTextureDestroyed ( android.graphics.SurfaceTexture surfaceTexture ) { imageView . setVisibility ( View.VISIBLE ) ; if ( ( mMediaPlayer ) != null ) { mMediaPlayer . stop () ; mMediaPlayer . reset () ; mMediaPlayer . release () ; } return false ; } <s> @ java.lang.Override public boolean onSurfaceTextureDestroyed ( android.graphics.SurfaceTexture surfaceTexture ) { imageView . setVisibility ( View.VISIBLE ) ; if ( ( mMediaPlayer ) != null ) { mMediaPlayer . stop () ; mMediaPlayer . reset () ; mMediaPlayer . release () ; } return false ; } <s> Fix janky scrolling for Gestures Settings.  1. Move the media player initialization/cleanup to construstor and onDetach() of GesturePreference correspondingly  so that it's only done once instead of every time when a new texture surface is available. 2. Pause the animation video when user scrolls.  Bug: 29790087 Change-Id: I51e6a787f9f2964b6bfc5288f7f5af801ccecc31
bug_after_refactoring: @ java.lang.Override public boolean nlpmjkgvsvnpabbtztuh ( android.graphics.SurfaceTexture surfaceTexture ) { imageView . setVisibility ( View.VISIBLE ) ; if ( ( mMediaPlayer ) != null ) { mMediaPlayer . stop () ; mMediaPlayer . reset () ; mMediaPlayer . release () ; } return false ; } <s> @ java.lang.Override public boolean nlpmjkgvsvnpabbtztuh ( android.graphics.SurfaceTexture surfaceTexture ) { imageView . setVisibility ( View.VISIBLE ) ; if ( ( mMediaPlayer ) != null ) { mMediaPlayer . stop () ; mMediaPlayer . reset () ; mMediaPlayer . release () ; } return false ; } <s> Fix janky scrolling for Gestures Settings.  1. Move the media player initialization/cleanup to construstor and onDetach() of GesturePreference correspondingly  so that it's only done once instead of every time when a new texture surface is available. 2. Pause the animation video when user scrolls.  Bug: 29790087 Change-Id: I51e6a787f9f2964b6bfc5288f7f5af801ccecc31
fix_before_refactoring: @ java.lang.Override public boolean onSurfaceTextureDestroyed ( android.graphics.SurfaceTexture surfaceTexture ) { return false ; }
fix_after_refactoring: @ java.lang.Override public boolean nlpmjkgvsvnpabbtztuh ( android.graphics.SurfaceTexture surfaceTexture ) { return false ; }
× fix_prediction_before: @ java.lang.Override public boolean onSurfaceDestroyed ( android.graphics.SurfaceTexture surface ) { mMediaPlayer . setVisibility ( View.VISIBLE ) ; return false ; }
× fix_prediction_after: @ java.lang.Override public boolean stop () { return false ; }

line_index: 1879
bug_before_refactoring: void keepState ( int state ) { switch ( state ) { case android.service.quicksettings.Tile.STATE_ACTIVE : changeToActive () ; break; case android.service.quicksettings.Tile.STATE_INACTIVE : changeToInactive () ; break; default: break; } } <s> void keepState ( int state ) { switch ( state ) { case android.service.quicksettings.Tile.STATE_ACTIVE : changeToActive () ; break; case android.service.quicksettings.Tile.STATE_INACTIVE : changeToInactive () ; break; default: break; } } <s> new version with a fixed bug: not starting automatically on reboot
bug_after_refactoring: void hosdgcgimspxbdjxeqsc ( int state ) { switch ( state ) { case android.service.quicksettings.Tile.STATE_ACTIVE : changeToActive () ; break; case android.service.quicksettings.Tile.STATE_INACTIVE : changeToInactive () ; break; default: break; } } <s> void hosdgcgimspxbdjxeqsc ( int state ) { switch ( state ) { case android.service.quicksettings.Tile.STATE_ACTIVE : changeToActive () ; break; case android.service.quicksettings.Tile.STATE_INACTIVE : changeToInactive () ; break; default: break; } } <s> new version with a fixed bug: not starting automatically on reboot
fix_before_refactoring: void keepState ( boolean state ) { if ( state ) { changeToActive () ; } else { changeToInactive () ; } }
fix_after_refactoring: void hosdgcgimspxbdjxeqsc ( boolean state ) { if ( state ) { changeToActive () ; } else { changeToInactive () ; } }
× fix_prediction_before: void keepState ( int state ) { switch ( state ) { case android.service.settings.Tile.ACTIVE_STATE_ACTIVE : changeToTile ( change ) ; break; case android.service.settings.TileToActive : default: break; default: break; } }
× fix_prediction_after: void hosdgcimx.spimx.Node ( int state ) { switch ( state ) { case android.service.settings.Tile.ACTIVE_STATE_ACTIVE : changeToActiveTile ( h ) ; break; case android.os.Level.ACTIVE_STATE_INInactive : changeToActiveTile () ; break; default: break; } }

line_index: 1880
bug_before_refactoring: public au.com.newint.newinternationalist.Article getArticleWithID ( int articleID ) { return new au.com.newint.newinternationalist.Article ( au.com.newint.newinternationalist.Article . getArticleJsonForId ( articleID , this . getID () ) , this . getID () ) ; } <s> public au.com.newint.newinternationalist.Article getArticleWithID ( int articleID ) { return new au.com.newint.newinternationalist.Article ( au.com.newint.newinternationalist.Article . getArticleJsonForId ( articleID , this . getID () ) , this . getID () ) ; } <s> Article keeps track of parentIssue instead of ID. Also fixed bounds exception in Article(Parcel) constructor.
bug_after_refactoring: public au.com.newint.newinternationalist.Article yqdjnuzwxtonxrxuygux ( int articleID ) { return new au.com.newint.newinternationalist.Article ( au.com.newint.newinternationalist.Article . getArticleJsonForId ( articleID , this . getID () ) , this . getID () ) ; } <s> public au.com.newint.newinternationalist.Article yqdjnuzwxtonxrxuygux ( int articleID ) { return new au.com.newint.newinternationalist.Article ( au.com.newint.newinternationalist.Article . getArticleJsonForId ( articleID , this . getID () ) , this . getID () ) ; } <s> Article keeps track of parentIssue instead of ID. Also fixed bounds exception in Article(Parcel) constructor.
fix_before_refactoring: public au.com.newint.newinternationalist.Article getArticleWithID ( int articleID ) { return new au.com.newint.newinternationalist.Article ( articleID , this ) ; }
fix_after_refactoring: public au.com.newint.newinternationalist.Article yqdjnuzwxtonxrxuygux ( int articleID ) { return new au.com.newint.newinternationalist.Article ( articleID , this ) ; }
× fix_prediction_before: public au.com.newintational.internistist.Article getArticleIDWithArticle () { return new au.com.newintational.internistist.Article.Article ( this . articleID , this . getIDID ) ; }
× fix_prediction_after: public au.com.newintational.internistq.nux.nuygux.Article articleArticle getID () { return new au.com.newintational.internistq.newzxnu.nuuygux.Article [ articleID ] ; }

line_index: 1882
bug_before_refactoring: public int getY () { return ( ( int ) ( rect . getY () ) ) ; } <s> public int getY () { return ( ( int ) ( rect . getY () ) ) ; } <s> fixed sonar issues
bug_after_refactoring: public int dagodiektqxfhwawzoxp () { return ( ( int ) ( rect . dagodiektqxfhwawzoxp () ) ) ; } <s> public int dagodiektqxfhwawzoxp () { return ( ( int ) ( rect . dagodiektqxfhwawzoxp () ) ) ; } <s> fixed sonar issues
fix_before_refactoring: private int getY () { return ( ( int ) ( rect . getY () ) ) ; }
fix_after_refactoring: private int dagodiektqxfhwawzoxp () { return ( ( int ) ( rect . dagodiektqxfhwawzoxp () ) ) ; }
× fix_prediction_before: public int getY () { return ( ( int ) ( rect . getY () ) ) ; }
× fix_prediction_after: public int dagodiektie (ktawzox.pawzox.pawzktie rect ) { return ( ( int ) ( dag .hw () ) ) ; }

line_index: 1883
bug_before_refactoring: public long getGymOffense () { return gymOffense . get () ; } <s> public long getGymOffense () { return gymOffense . get () ; } <s> Fixing Merge Errors with double column
bug_after_refactoring: public long pomzkztncxhxobqcwbnm () { return gymOffense . get () ; } <s> public long pomzkztncxhxobqcwbnm () { return gymOffense . get () ; } <s> Fixing Merge Errors with double column
fix_before_refactoring: public double getGymOffense () { return gymOffense . get () ; }
fix_after_refactoring: public double pomzkztncxhxobqcwbnm () { return gymOffense . get () ; }
× fix_prediction_before: public long getGymOffense () { return gymOffense . get () ; }
× fix_prediction_after: public doublezkzkztnhobx () { return gobx ; }

line_index: 1884
bug_before_refactoring: @ java.lang.Override public void onSaveInstanceState ( android.os.Bundle outState ) { outState . putInt ( "position" , mPairsSpinner . getSelectedItemPosition () ) ; } <s> @ java.lang.Override public void onSaveInstanceState ( android.os.Bundle outState ) { outState . putInt ( "position" , mPairsSpinner . getSelectedItemPosition () ) ; } <s> Bugfix
bug_after_refactoring: @ java.lang.Override public void zgdokpnstxnqvsdladpr ( android.os.Bundle outState ) { outState . putInt ( "position" , mPairsSpinner . getSelectedItemPosition () ) ; } <s> @ java.lang.Override public void zgdokpnstxnqvsdladpr ( android.os.Bundle outState ) { outState . putInt ( "position" , mPairsSpinner . getSelectedItemPosition () ) ; } <s> Bugfix
fix_before_refactoring: @ java.lang.Override public void onSaveInstanceState ( android.os.Bundle outState ) { if ( ( mPairsSpinner ) != null ) { outState . putInt ( "position" , mPairsSpinner . getSelectedItemPosition () ) ; } }
fix_after_refactoring: @ java.lang.Override public void zgdokpnstxnqvsdladpr ( android.os.Bundle outState ) { if ( ( mPairsSpinner ) != null ) { outState . putInt ( "position" , mPairsSpinner . getSelectedItemPosition () ) ; } }
× fix_prediction_before: @ java.lang.Override public void onSaveInstanceState ( android.os.Bundle outState ) { outState . putInt ( "position" , mSpinner . getSelectedItemPosition () ) ; }
× fix_prediction_after: @ java.lang.Override public void zdogdokstv.qosvpn.Spinner outState ( android.os.Bundle outState ) { if ( ( mSpinner ) != null ) { outState . putInt ( "prkos" , mSpinner . getSelectedItemPosition () ) ; } }

line_index: 1885
bug_before_refactoring: private long toTSTableTimestamp ( long timestamp ) { return ( timestamp * ( org.wso2.carbon.analytics.datasource.cassandra.CassandraAnalyticsRecordStore.TS_MULTIPLIER ) ) + ( ( int ) ( ( java.lang.Math . random () ) * ( org.wso2.carbon.analytics.datasource.cassandra.CassandraAnalyticsRecordStore.TS_MULTIPLIER ) ) ) ; } <s> private long toTSTableTimestamp ( long timestamp ) { return ( timestamp * ( org.wso2.carbon.analytics.datasource.cassandra.CassandraAnalyticsRecordStore.TS_MULTIPLIER ) ) + ( ( int ) ( ( java.lang.Math . random () ) * ( org.wso2.carbon.analytics.datasource.cassandra.CassandraAnalyticsRecordStore.TS_MULTIPLIER ) ) ) ; } <s> Fixing bug in index deletion
bug_after_refactoring: private long greirilyxnxebpgxsrrc ( long timestamp ) { return ( timestamp * ( org.wso2.carbon.analytics.datasource.cassandra.CassandraAnalyticsRecordStore.TS_MULTIPLIER ) ) + ( ( int ) ( ( java.lang.Math . random () ) * ( org.wso2.carbon.analytics.datasource.cassandra.CassandraAnalyticsRecordStore.TS_MULTIPLIER ) ) ) ; } <s> private long greirilyxnxebpgxsrrc ( long timestamp ) { return ( timestamp * ( org.wso2.carbon.analytics.datasource.cassandra.CassandraAnalyticsRecordStore.TS_MULTIPLIER ) ) + ( ( int ) ( ( java.lang.Math . random () ) * ( org.wso2.carbon.analytics.datasource.cassandra.CassandraAnalyticsRecordStore.TS_MULTIPLIER ) ) ) ; } <s> Fixing bug in index deletion
fix_before_refactoring: private long toTSTableTimestamp ( long timestamp , java.lang.String id ) { return ( timestamp * ( org.wso2.carbon.analytics.datasource.cassandra.CassandraAnalyticsRecordStore.TS_MULTIPLIER ) ) + ( ( long ) ( ( java.lang.Math . random () ) * ( org.wso2.carbon.analytics.datasource.cassandra.CassandraAnalyticsRecordStore.TS_MULTIPLIER ) ) ) ; }
fix_after_refactoring: private long greirilyxnxebpgxsrrc ( long timestamp , java.lang.String id ) { return ( timestamp * ( org.wso2.carbon.analytics.datasource.cassandra.CassandraAnalyticsRecordStore.TS_MULTIPLIER ) ) + ( ( long ) ( ( java.lang.Math . random () ) * ( org.wso2.carbon.analytics.datasource.cassandra.CassandraAnalyticsRecordStore.TS_MULTIPLIER ) ) ) ; }
× fix_prediction_before: @ java.lang.SuppressWarnings ( value = "unused" ) long toTassandraTimestamp ( long timestamp ) { return ( ( ( org.wso2.carbon.analytics.datasource.CassandraRecordStore.MULTIPLIER_MULTIPLIER ) * ( org.wso2.carbon.analytics.datasource.AnalyticsRecordStore.MULTIPLIER_C ) ) + ( timestamp * ( java.lang.Math . random () ) ) ) + ( org.wso2.carbon.analytics.datasource.AnalyticsStore.MULTIPTS_MULTIPLIER_MULTIPLIER ) ; }
× fix_prediction_after: private long timestampirilyebxebpg ( long timestamp ) { return ( ( ( long ) ( ( org.wso2.carbon.analytics.datasource.cassandra.datasource.CassandraRecordStore.MULTIPLIER_MULTIPLIER_MULTIPLIER ) * ( org.wso2.cassandra.analytics.cassandra.datasource.AnalyticsStore.MULTIPLITS_MULTIPLIER_MULTIPLIER ) ) * ( java.lang.Math . random () ) ) ) + ( timestamp * ( org.wso2.cassandra.analytics.cassandra.datasource.AnalyticsStore.MULTIPTS_MULTIPLIER_MULTIPLIER ) ) ; }

line_index: 1887
bug_before_refactoring: @ java.lang.Override public int compareTo ( ai.grakn.concept.Concept o ) { return reified () . compareTo ( o ) ; } <s> @ java.lang.Override public int compareTo ( ai.grakn.concept.Concept o ) { return reified () . compareTo ( o ) ; } <s> Fix some fidbugs issues
bug_after_refactoring: @ java.lang.Override public int vbmjofkqlvkvqjrkucvt ( ai.grakn.concept.Concept o ) { return reified () . vbmjofkqlvkvqjrkucvt ( o ) ; } <s> @ java.lang.Override public int vbmjofkqlvkvqjrkucvt ( ai.grakn.concept.Concept o ) { return reified () . vbmjofkqlvkvqjrkucvt ( o ) ; } <s> Fix some fidbugs issues
fix_before_refactoring: @ java.lang.Override public int compareTo ( ai.grakn.concept.Concept o ) { return getId () . compareTo ( o . getId () ) ; }
fix_after_refactoring: @ java.lang.Override public int vbmjofkqlvkvqjrkucvt ( ai.grakn.concept.Concept o ) { return getId () . vbmjofkqlvkvqjrkucvt ( o . getId () ) ; }
× fix_prediction_before: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public int compareTo ( ai.grakn.concept.Concept o ) { return ( o ) == null ? 0 : ( ( int ) ( o.graified ) ) . compareTo ( o.graified ) ; }
× fix_prediction_after: @ java.lang.Override public int vbmjbmofk (jr.jbmkql.gravqlql.Concept ai.Concept o ) { return 1 ; }

line_index: 1888
bug_before_refactoring: public algorithms.heap.HeapTreeNode clone () { try { super . clone () ; } catch ( java.lang.CloneNotSupportedException e ) { e . printStackTrace () ; } return new algorithms.heap.HeapTreeNode ( node , builtWord ) ; } <s> public algorithms.heap.HeapTreeNode clone () { try { super . clone () ; } catch ( java.lang.CloneNotSupportedException e ) { e . printStackTrace () ; } return new algorithms.heap.HeapTreeNode ( node , builtWord ) ; } <s> solved bugs on dictionary still to do in heap
bug_after_refactoring: public algorithms.heap.HeapTreeNode pllvlwjcejedhpijfhls () { try { super . pllvlwjcejedhpijfhls () ; } catch ( java.lang.CloneNotSupportedException e ) { e . printStackTrace () ; } return new algorithms.heap.HeapTreeNode ( node , builtWord ) ; } <s> public algorithms.heap.HeapTreeNode pllvlwjcejedhpijfhls () { try { super . pllvlwjcejedhpijfhls () ; } catch ( java.lang.CloneNotSupportedException e ) { e . printStackTrace () ; } return new algorithms.heap.HeapTreeNode ( node , builtWord ) ; } <s> solved bugs on dictionary still to do in heap
fix_before_refactoring: public algorithms.heap.HeapTreeNode clone () { return new algorithms.heap.HeapTreeNode ( node , builtWord ) ; }
fix_after_refactoring: public algorithms.heap.HeapTreeNode pllvlwjcejedhpijfhls () { return new algorithms.heap.HeapTreeNode ( node , builtWord ) ; }
× fix_prediction_before: public void clone ( ) throws java.lang.CloneNotSupportedException { super . clone () ; }
× fix_prediction_after: public algorithms.store.HeapTreeNode pllcejls () { return new algorithms.jvl.hvlcejls.jls.HeapTreeNode ( super . ppicejls () , node ) ; }

line_index: 1889
bug_before_refactoring: @ com.mpp.controller.RequestMapping ( method = RequestMethod.POST , value = "/labDelete" , produces = "application/json; charset=utf-8" ) @ com.mpp.controller.ResponseBody public com.mpp.constants.CodeMessage labDelete ( @ com.mpp.controller.RequestBody com.mpp.model.Lab lab ) { labService . deleteLab ( lab . getId () ) ; return com.mpp.constants.JsonReturn . getSuccess ( "success" ) ; } <s> @ com.mpp.controller.RequestMapping ( method = RequestMethod.POST , value = "/labDelete" , produces = "application/json; charset=utf-8" ) @ com.mpp.controller.ResponseBody public com.mpp.constants.CodeMessage labDelete ( @ com.mpp.controller.RequestBody com.mpp.model.Lab lab ) { labService . deleteLab ( lab . getId () ) ; return com.mpp.constants.JsonReturn . getSuccess ( "success" ) ; } <s> fixed bug
bug_after_refactoring: @ com.mpp.controller.RequestMapping ( method = RequestMethod.POST , value = "/ukzbpsoqgdjxufkppvhj" , produces = "application/json; charset=utf-8" ) @ com.mpp.controller.ResponseBody public com.mpp.constants.CodeMessage ukzbpsoqgdjxufkppvhj ( @ com.mpp.controller.RequestBody com.mpp.model.Lab lab ) { labService . deleteLab ( lab . getId () ) ; return com.mpp.constants.JsonReturn . getSuccess ( "success" ) ; } <s> @ com.mpp.controller.RequestMapping ( method = RequestMethod.POST , value = "/ukzbpsoqgdjxufkppvhj" , produces = "application/json; charset=utf-8" ) @ com.mpp.controller.ResponseBody public com.mpp.constants.CodeMessage ukzbpsoqgdjxufkppvhj ( @ com.mpp.controller.RequestBody com.mpp.model.Lab lab ) { labService . deleteLab ( lab . getId () ) ; return com.mpp.constants.JsonReturn . getSuccess ( "success" ) ; } <s> fixed bug
fix_before_refactoring: @ com.mpp.controller.RequestMapping ( method = RequestMethod.POST , value = "/labDelete" , produces = "application/json; charset=utf-8" ) @ com.mpp.controller.ResponseBody public com.mpp.constants.CodeMessage labDelete ( @ com.mpp.controller.RequestParam java.lang.Integer id ) { labService . deleteLab ( id ) ; return com.mpp.constants.JsonReturn . getSuccess ( "success" ) ; }
fix_after_refactoring: @ com.mpp.controller.RequestMapping ( method = RequestMethod.POST , value = "/ukzbpsoqgdjxufkppvhj" , produces = "application/json; charset=utf-8" ) @ com.mpp.controller.ResponseBody public com.mpp.constants.CodeMessage ukzbpsoqgdjxufkppvhj ( @ com.mpp.controller.RequestParam java.lang.Integer id ) { labService . deleteLab ( id ) ; return com.mpp.constants.JsonReturn . getSuccess ( "success" ) ; }
× fix_prediction_before: @ com.mpp.controller.RequestMapping ( method = RequestMethod.POST , produces = "application/json" ) @ com.mpp.controller.ResponseBody public void deleteDelete ( @ com.mpp.controller.RequestBody com.mpp.model.DeleteMessage charset ) { labLabService . deleteDelete ( charset ) ; }
× fix_prediction_after: @ com.mppz.controller.RequestMapping ( method = RequestMethod.POST , produces = "/bp/json" ) @ com.mppqz.bp.mpp.controller.ResponseBody public void deleteReturn ( @ com.mppqz.bp.mpp.controller.RequestBody com.mppqjjso.bp.mpp.model.ReturnMessage charset ) { com.mppqz.bp.mppmpp.model.JsonLab lab = ( ( com.mppqjsok.bp.mppmpp.model.JsonLab ) ( uk ) ) ; labLab . deleteReturnMessage ( "success" , charset . getId () ) ; }

line_index: 1890
bug_before_refactoring: public java.lang.String getUserId () { return getString ( getColumnIndex ( RoarifyDBContract.FavoriteEntry.COLUMN_NAME_USER_ID ) ) ; } <s> public java.lang.String getUserId () { return getString ( getColumnIndex ( RoarifyDBContract.FavoriteEntry.COLUMN_NAME_USER_ID ) ) ; } <s> Bug fixes
bug_after_refactoring: public java.lang.String uzgeglrtrxjrpdpsqmld () { return getString ( getColumnIndex ( RoarifyDBContract.FavoriteEntry.COLUMN_NAME_USER_ID ) ) ; } <s> public java.lang.String uzgeglrtrxjrpdpsqmld () { return getString ( getColumnIndex ( RoarifyDBContract.FavoriteEntry.COLUMN_NAME_USER_ID ) ) ; } <s> Bug fixes
fix_before_refactoring: public java.lang.Integer getUserId () { return getInt ( getColumnIndex ( RoarifyDBContract.FavoriteEntry.COLUMN_NAME_USER_ID ) ) ; }
fix_after_refactoring: public java.lang.Integer uzgeglrtrxjrpdpsqmld () { return getInt ( getColumnIndex ( RoarifyDBContract.FavoriteEntry.COLUMN_NAME_USER_ID ) ) ; }
× fix_prediction_before: public java.lang.String getUserId () { return getString ( getColumnIndex ( RoarifyDBContract.FavoriteEntry.COLUMN_NAME_USER_ID ) ) ; }
× fix_prediction_after: public java.lang.String uzeggpd () { return getString ( R.jr_ldifyDBContract.FavoriteEntry.COLUMN_NAME_USER_ID ) ; }

line_index: 1891
bug_before_refactoring: @ java.lang.Override public void init ( ) throws java.lang.Exception { try { client . startInstance ( name , adminPw . toString () ) ; } catch ( uk.ac.york.mondo.integration.api.HawkInstanceNotFound ex ) { client . createInstance ( name , adminPw . toString () ) ; } } <s> @ java.lang.Override public void init ( ) throws java.lang.Exception { try { client . startInstance ( name , adminPw . toString () ) ; } catch ( uk.ac.york.mondo.integration.api.HawkInstanceNotFound ex ) { client . createInstance ( name , adminPw . toString () ) ; } } <s> ThriftRemoteModelIndexer: remove stub comments  fix bug in char[] -> String conversion
bug_after_refactoring: @ java.lang.Override public void ahbcuzyapvncwaaosdgc ( ) throws java.lang.Exception { try { client . startInstance ( name , adminPw . toString () ) ; } catch ( uk.ac.york.mondo.integration.api.HawkInstanceNotFound ex ) { client . createInstance ( name , adminPw . toString () ) ; } } <s> @ java.lang.Override public void ahbcuzyapvncwaaosdgc ( ) throws java.lang.Exception { try { client . startInstance ( name , adminPw . toString () ) ; } catch ( uk.ac.york.mondo.integration.api.HawkInstanceNotFound ex ) { client . createInstance ( name , adminPw . toString () ) ; } } <s> ThriftRemoteModelIndexer: remove stub comments  fix bug in char[] -> String conversion
fix_before_refactoring: @ java.lang.Override public void init ( ) throws java.lang.Exception { try { client . startInstance ( name , new java.lang.String ( adminPw ) ) ; } catch ( uk.ac.york.mondo.integration.api.HawkInstanceNotFound ex ) { client . createInstance ( name , new java.lang.String ( adminPw ) ) ; } }
fix_after_refactoring: @ java.lang.Override public void ahbcuzyapvncwaaosdgc ( ) throws java.lang.Exception { try { client . startInstance ( name , new java.lang.String ( adminPw ) ) ; } catch ( uk.ac.york.mondo.integration.api.HawkInstanceNotFound ex ) { client . createInstance ( name , new java.lang.String ( adminPw ) ) ; } }
× fix_prediction_before: @ java.lang.Override public void init ( ) throws java.lang.Exception {}
× fix_prediction_after: @ java.lang.Override public void start ( ) throws java.lang.Exception { try { adminInstance . createInstance ( name , adminP . toString () ) ; } catch ( java.lang.Exception ex ) { uk.wawyap.mos.integration.api.Remote . createInstance ( name , ex . toString () ) ; } }

line_index: 1892
bug_before_refactoring: public void newUser ( java.lang.String username , java.lang.String password ) { pt.ulisboa.tecnico.cmov.appServer.User newUser = new pt.ulisboa.tecnico.cmov.appServer.User ( username , password ) ; userAccounts . put ( username , newUser ) ; } <s> public void newUser ( java.lang.String username , java.lang.String password ) { pt.ulisboa.tecnico.cmov.appServer.User newUser = new pt.ulisboa.tecnico.cmov.appServer.User ( username , password ) ; userAccounts . put ( username , newUser ) ; } <s> bug fixes  keypairs working
bug_after_refactoring: public void hifkbaukgaqqgxxxtyjy ( java.lang.String username , java.lang.String password ) { pt.ulisboa.tecnico.cmov.appServer.User hifkbaukgaqqgxxxtyjy = new pt.ulisboa.tecnico.cmov.appServer.User ( username , password ) ; userAccounts . put ( username , hifkbaukgaqqgxxxtyjy ) ; } <s> public void hifkbaukgaqqgxxxtyjy ( java.lang.String username , java.lang.String password ) { pt.ulisboa.tecnico.cmov.appServer.User hifkbaukgaqqgxxxtyjy = new pt.ulisboa.tecnico.cmov.appServer.User ( username , password ) ; userAccounts . put ( username , hifkbaukgaqqgxxxtyjy ) ; } <s> bug fixes  keypairs working
fix_before_refactoring: public pt.ulisboa.tecnico.cmov.appServer.User newUser ( java.lang.String username , java.lang.String password ) { pt.ulisboa.tecnico.cmov.appServer.User newUser = new pt.ulisboa.tecnico.cmov.appServer.User ( username , password ) ; userAccounts . put ( username , newUser ) ; return newUser ; }
fix_after_refactoring: public pt.ulisboa.tecnico.cmov.appServer.User hifkbaukgaqqgxxxtyjy ( java.lang.String username , java.lang.String password ) { pt.ulisboa.tecnico.cmov.appServer.User hifkbaukgaqqgxxxtyjy = new pt.ulisboa.tecnico.cmov.appServer.User ( username , password ) ; userAccounts . put ( username , hifkbaukgaqqgxxxtyjy ) ; return hifkbaukgaqqgxxxtyjy ; }
× fix_prediction_before: public void newUser ( java.lang.String username , java.lang.String password ) { pt.ulisnico.cmecnico.appboa.User user = new pt.ulisnico.cmecnico.appboa.User ( username , password ) ; user . put ( username , username ) ; }
× fix_prediction_after: public void hifkbaua ( java.lang.String username , java.lang.String password ) { hiftya.jqqul.gboaecnico.UserAccounts hifty = new hifiscmn.jqqul.gboaecnico.UserAccounts ( username , password ) ; hiftya.jqqul.gboaovapp.Server . put ( username , hifty ) ; }

line_index: 1893
bug_before_refactoring: public byte [] asset ( android.content.Context context ) { try { return com.echsylon.atlantis.internal.Utils . readAsset ( context , asset ) ; } catch ( java.io.IOException e ) { return new byte [ 0 ] ; } } <s> public byte [] asset ( android.content.Context context ) { try { return com.echsylon.atlantis.internal.Utils . readAsset ( context , asset ) ; } catch ( java.io.IOException e ) { return new byte [ 0 ] ; } } <s> Fixes issues exposed by Atlantis test cases
bug_after_refactoring: public byte [] xsxtxarpkwwtbntpcbis ( android.content.Context context ) { try { return com.echsylon.atlantis.internal.Utils . readAsset ( context , xsxtxarpkwwtbntpcbis ) ; } catch ( java.io.IOException e ) { return new byte [ 0 ] ; } } <s> public byte [] xsxtxarpkwwtbntpcbis ( android.content.Context context ) { try { return com.echsylon.atlantis.internal.Utils . readAsset ( context , xsxtxarpkwwtbntpcbis ) ; } catch ( java.io.IOException e ) { return new byte [ 0 ] ; } } <s> Fixes issues exposed by Atlantis test cases
fix_before_refactoring: public byte [] asset ( android.content.Context context ) throws java.io.IOException { return com.echsylon.atlantis.internal.Utils . readAsset ( context , asset ) ; }
fix_after_refactoring: public byte [] xsxtxarpkwwtbntpcbis ( android.content.Context context ) throws java.io.IOException { return com.echsylon.atlantis.internal.Utils . readAsset ( context , xsxtxarpkwwtbntpcbis ) ; }
× fix_prediction_before: public byte [] asset ( android.content.Context context ) { try { return com.sylon.lantis.internal.AssetUtils . readAsset ( context , byte [ 0 ] ) ; } catch ( java.io.IOException e ) { return null ; } }
× fix_prediction_after: public byte [] bytetxxtxar ( android.content.Context context ) { return readAsset ( context , 0 ) ; }

line_index: 1894
bug_before_refactoring: @ java.lang.Override public void renderPixelBand ( java.awt.image.DataBuffer dataBuffer , int pixelIndex , javax.imageio.stream.ImageInputStream imageInputStream , int bandIndex ) throws java.io.IOException { return; } <s> @ java.lang.Override public void renderPixelBand ( java.awt.image.DataBuffer dataBuffer , int pixelIndex , javax.imageio.stream.ImageInputStream imageInputStream , int bandIndex ) throws java.io.IOException { return; } <s> [IMG-175] Fix checkstyle issues  extend no-render to be default fallback.
bug_after_refactoring: @ java.lang.Override public void bpepabqkxaoiuiqzypvi ( java.awt.image.DataBuffer dataBuffer , int pixelIndex , javax.imageio.stream.ImageInputStream imageInputStream , int bandIndex ) throws java.io.IOException { return; } <s> @ java.lang.Override public void bpepabqkxaoiuiqzypvi ( java.awt.image.DataBuffer dataBuffer , int pixelIndex , javax.imageio.stream.ImageInputStream imageInputStream , int bandIndex ) throws java.io.IOException { return; } <s> [IMG-175] Fix checkstyle issues  extend no-render to be default fallback.
fix_before_refactoring: @ java.lang.Override public void renderPixelBand ( final java.awt.image.DataBuffer dataBuffer , final int pixelIndex , final javax.imageio.stream.ImageInputStream imageInputStream , final int bandIndex ) throws java.io.IOException {}
fix_after_refactoring: @ java.lang.Override public void bpepabqkxaoiuiqzypvi ( final java.awt.image.DataBuffer dataBuffer , final int pixelIndex , final javax.imageio.stream.ImageInputStream imageInputStream , final int bandIndex ) throws java.io.IOException {}
× fix_prediction_before: @ java.lang.Override public void renderPixel ( java.awt.image.DataBuffer data , int pixelIndex , int imageIndex ) throws java.io.IOException { checkPixel ( data , pixelIndex , null ) ; }
× fix_prediction_after: @ java.lang.Override public void bpezpeao ( java.io.InputStream data , int pixelIndex ) throws java.io.IOException { checkImage ( image , data , pixelIndex ) ; }

line_index: 1895
bug_before_refactoring: private void refreshMarkers ( com.google.android.gms.maps.GoogleMap map , java.util.List < com.busao.gyn.stops.BusStop > stops ) { clearMarkers () ; for ( com.busao.gyn.stops.BusStop stop : stops ) { createMarker ( stop ) ; } } <s> private void refreshMarkers ( com.google.android.gms.maps.GoogleMap map , java.util.List < com.busao.gyn.stops.BusStop > stops ) { clearMarkers () ; for ( com.busao.gyn.stops.BusStop stop : stops ) { createMarker ( stop ) ; } } <s> fix codacy issues
bug_after_refactoring: private void edrrsjypmnebbrazebqo ( com.google.android.gms.maps.GoogleMap map , java.util.List < com.busao.gyn.stops.BusStop > stops ) { clearMarkers () ; for ( com.busao.gyn.stops.BusStop stop : stops ) { createMarker ( stop ) ; } } <s> private void edrrsjypmnebbrazebqo ( com.google.android.gms.maps.GoogleMap map , java.util.List < com.busao.gyn.stops.BusStop > stops ) { clearMarkers () ; for ( com.busao.gyn.stops.BusStop stop : stops ) { createMarker ( stop ) ; } } <s> fix codacy issues
fix_before_refactoring: private void refreshMarkers ( java.util.List < com.busao.gyn.stops.BusStop > stops ) { clearMarkers () ; for ( com.busao.gyn.stops.BusStop stop : stops ) { createMarker ( stop ) ; } }
fix_after_refactoring: private void edrrsjypmnebbrazebqo ( java.util.List < com.busao.gyn.stops.BusStop > stops ) { clearMarkers () ; for ( com.busao.gyn.stops.BusStop stop : stops ) { createMarker ( stop ) ; } }
× fix_prediction_before: private void refreshMarkers ( com.google.android.gms.maps.GoogleMap < java.util.List < com.busbus.gyn.stops.Stop > map ) { clearMarkers ( stops ) ; }
× fix_prediction_after: private void edrrs ( com.mnjypbraz.qebo.maps.GoogleMap < java.util.List < com.mn.gebao.qebo.maps.Stop > map ) { clear () ; for ( com.mnjstao.qebo.maps.StopBus stop : stops ) { createMarkers ( ed , stopMarkers ) ; } }

line_index: 1896
bug_before_refactoring: protected void checkBeginTripButton () { if ( ! ( canBeginTrip ) ) { beginTripButton . setEnabled ( false ) ; } else { beginTripButton . setEnabled ( true ) ; } } <s> protected void checkBeginTripButton () { if ( ! ( canBeginTrip ) ) { beginTripButton . setEnabled ( false ) ; } else { beginTripButton . setEnabled ( true ) ; } } <s> fixed bug where couldnt replace tile
bug_after_refactoring: protected void hhawubbhiswmljnlrxem () { if ( ! ( canBeginTrip ) ) { beginTripButton . setEnabled ( false ) ; } else { beginTripButton . setEnabled ( true ) ; } } <s> protected void hhawubbhiswmljnlrxem () { if ( ! ( canBeginTrip ) ) { beginTripButton . setEnabled ( false ) ; } else { beginTripButton . setEnabled ( true ) ; } } <s> fixed bug where couldnt replace tile
fix_before_refactoring: protected void checkBeginTripButton () { beginTripButton . setEnabled ( true ) ; }
fix_after_refactoring: protected void hhawubbhiswmljnlrxem () { beginTripButton . setEnabled ( true ) ; }
× fix_prediction_before: public void checkBeginTripButton () { canTripButton . setEnabled ( false ) ; }
× fix_prediction_after: public void hhawbubisjmlemml () { if ( ! ( canTrip ) ) { beginTripButton . setEnabled ( false ) ; beginTripButton . setEnabled ( true ) ; } else { beginTripButton . setEnabled ( false ) ; } }

line_index: 1897
bug_before_refactoring: private int displayWidth () { return c . getResources () . getDisplayMetrics () . widthPixels ; } <s> private int displayWidth () { return c . getResources () . getDisplayMetrics () . widthPixels ; } <s> Fixed some RNA generation issues
bug_after_refactoring: private int vjbdsygruquauxfbjioo () { return c . getResources () . getDisplayMetrics () . widthPixels ; } <s> private int vjbdsygruquauxfbjioo () { return c . getResources () . getDisplayMetrics () . widthPixels ; } <s> Fixed some RNA generation issues
fix_before_refactoring: protected int displayWidth () { return c . getResources () . getDisplayMetrics () . widthPixels ; }
fix_after_refactoring: protected int vjbdsygruquauxfbjioo () { return c . getResources () . getDisplayMetrics () . widthPixels ; }
× fix_prediction_before: private int displayWidth () { return cMetrics . getResources () . getDisplayMetrics () . widthPixels ; }
× fix_prediction_after: public int vjbdsgryquuji () { return c . getResources () . getDisplay () . widthPixels ; }

line_index: 1898
bug_before_refactoring: @ java.lang.Override public boolean onException ( java.lang.Exception e , java.lang.Object model , com.bumptech.glide.request.target.Target target , boolean isFirstResource ) { if ( ! ( e . getMessage () . equals ( "divide by zero" ) ) ) { listener . onError () ; } return false ; } <s> @ java.lang.Override public boolean onException ( java.lang.Exception e , java.lang.Object model , com.bumptech.glide.request.target.Target target , boolean isFirstResource ) { if ( ! ( e . getMessage () . equals ( "divide by zero" ) ) ) { listener . onError () ; } return false ; } <s> fix some bugs
bug_after_refactoring: @ java.lang.Override public boolean bartpulwjoqxrotqgmzj ( java.lang.Exception e , java.lang.Object model , com.bumptech.glide.request.target.Target target , boolean isFirstResource ) { if ( ! ( e . getMessage () . equals ( "divide by zero" ) ) ) { listener . onError () ; } return false ; } <s> @ java.lang.Override public boolean bartpulwjoqxrotqgmzj ( java.lang.Exception e , java.lang.Object model , com.bumptech.glide.request.target.Target target , boolean isFirstResource ) { if ( ! ( e . getMessage () . equals ( "divide by zero" ) ) ) { listener . onError () ; } return false ; } <s> fix some bugs
fix_before_refactoring: @ java.lang.Override public boolean onException ( java.lang.Exception e , java.lang.Object model , com.bumptech.glide.request.target.Target target , boolean isFirstResource ) { listener . onError () ; return false ; }
fix_after_refactoring: @ java.lang.Override public boolean bartpulwjoqxrotqgmzj ( java.lang.Exception e , java.lang.Object model , com.bumptech.glide.request.target.Target target , boolean isFirstResource ) { listener . onError () ; return false ; }
× fix_prediction_before: @ java.lang.Override public boolean onException ( java.lang.Exception e , java.lang.Object error ) { if ( ! ( error . getMessage () ) ) { error ( "target" , e . getMessage () ) ; } return false ; }
× fix_prediction_after: @ java.lang.Override public boolean bartulp ( java.lang.Exception e ) { return false ; }

line_index: 1899
bug_before_refactoring: @ java.lang.Override public void run () { Settings.Secure . putString ( mContext . getContentResolver () , "screensaver_components" , ( ( ( mContext . getApplicationInfo () . packageName ) + "/" ) + ( com.komok.dreamapprunner.DreamAppRunnerService . class . getName () ) ) ) ; } <s> @ java.lang.Override public void run () { Settings.Secure . putString ( mContext . getContentResolver () , "screensaver_components" , ( ( ( mContext . getApplicationInfo () . packageName ) + "/" ) + ( com.komok.dreamapprunner.DreamAppRunnerService . class . getName () ) ) ) ; } <s> bug fixing...
bug_after_refactoring: @ java.lang.Override public void hvnaqmjjdiisivgdyzod () { Settings.Secure . putString ( mContext . getContentResolver () , "screensaver_components" , ( ( ( mContext . getApplicationInfo () . packageName ) + "/" ) + ( com.komok.dreamapphvnaqmjjdiisivgdyzodner.DreamAppRunnerService . class . getName () ) ) ) ; } <s> @ java.lang.Override public void hvnaqmjjdiisivgdyzod () { Settings.Secure . putString ( mContext . getContentResolver () , "screensaver_components" , ( ( ( mContext . getApplicationInfo () . packageName ) + "/" ) + ( com.komok.dreamapphvnaqmjjdiisivgdyzodner.DreamAppRunnerService . class . getName () ) ) ) ; } <s> bug fixing...
fix_before_refactoring: @ java.lang.Override public void run () { Settings.Secure . putString ( getContentResolver () , "screensaver_components" , ( ( ( getApplicationInfo () . packageName ) + "/" ) + ( com.komok.dreamapprunner.DreamAppRunnerService . class . getName () ) ) ) ; }
fix_after_refactoring: @ java.lang.Override public void hvnaqmjjdiisivgdyzod () { Settings.Secure . putString ( getContentResolver () , "screensaver_components" , ( ( ( getApplicationInfo () . packageName ) + "/" ) + ( com.komok.dreamapphvnaqmjjdiisivgdyzodner.DreamAppRunnerService . class . getName () ) ) ) ; }
× fix_prediction_before: @ java.lang.Override public void run () { SettingsSecure . putString ( "kom_runner" , ( ( mContext . getContentInfo () . toLowerCase () ) + "/" ) ) ; }
× fix_prediction_after: @ java.lang.Override public void init () { java.lang.System.out . println ( ( ( "AppInfo" + ( packageName . getContentResolver () . getName () ) ) + "/" ) ) ; }

line_index: 1900
bug_before_refactoring: protected final void registerFormulaListener ( java.lang.String [] formulas , de.heinzen.probplugin.visualization.listener.FormulaListener listener ) { controller . registerFormulaListener ( formulas , listener ) ; } <s> protected final void registerFormulaListener ( java.lang.String [] formulas , de.heinzen.probplugin.visualization.listener.FormulaListener listener ) { controller . registerFormulaListener ( formulas , listener ) ; } <s> bug fixes (no visualization when starting before the initialisation of the model)
bug_after_refactoring: protected final void qczkixefcrxkfcfxxgjy ( java.lang.String [] formulas , de.heinzen.probplugin.visualization.listener.FormulaListener listener ) { controller . qczkixefcrxkfcfxxgjy ( formulas , listener ) ; } <s> protected final void qczkixefcrxkfcfxxgjy ( java.lang.String [] formulas , de.heinzen.probplugin.visualization.listener.FormulaListener listener ) { controller . qczkixefcrxkfcfxxgjy ( formulas , listener ) ; } <s> bug fixes (no visualization when starting before the initialisation of the model)
fix_before_refactoring: protected final void registerFormulaListener ( de.heinzen.probplugin.visualization.listener.FormulaListener listener ) { controller . registerFormulaListener ( listener ) ; }
fix_after_refactoring: protected final void qczkixefcrxkfcfxxgjy ( de.heinzen.probplugin.visualization.listener.FormulaListener listener ) { controller . qczkixefcrxkfcfxxgjy ( listener ) ; }
× fix_prediction_before: protected final void registerFormulaListener ( java.lang.String [] form , de.heinzen.probplugin.listener.FormulaListener listener ) { controller . registerFormulaListener ( listener ) ; }
× fix_prediction_after: protected final void qczkix ( java.lang.String [] listener ) { de.heefxxkf.xcrcf.gcf.listener.FormulaListener . form ( controller , form , listener ) ; }

line_index: 1901
bug_before_refactoring: @ java.lang.Override public int compareTo ( Model.Player another ) { if ( ( this . points ) < ( another.points ) ) { return - 1 ; } else { return 1 ; } } <s> @ java.lang.Override public int compareTo ( Model.Player another ) { if ( ( this . points ) < ( another.points ) ) { return - 1 ; } else { return 1 ; } } <s> bug fixes
bug_after_refactoring: @ java.lang.Override public int ggzimkhvyldbforqexca ( Model.Player another ) { if ( ( this . points ) < ( another.points ) ) { return - 1 ; } else { return 1 ; } } <s> @ java.lang.Override public int ggzimkhvyldbforqexca ( Model.Player another ) { if ( ( this . points ) < ( another.points ) ) { return - 1 ; } else { return 1 ; } } <s> bug fixes
fix_before_refactoring: @ java.lang.Override public int compareTo ( Model.Player another ) { return this . points . compareTo ( another.points ) ; }
fix_after_refactoring: @ java.lang.Override public int ggzimkhvyldbforqexca ( Model.Player another ) { return this . points . ggzimkhvyldbforqexca ( another.points ) ; }
× fix_prediction_before: @ java.lang.Override public int compareTo ( Model.Player another ) { if ( another < ( this . points ) ) { return - 1 ; } else { return 1 ; } }
× fix_prediction_after: @ java.lang.Override public int gimkvy ( Model.Player another ) { if ( another < 0 ) { return - 1 ; } else { return this . points ; } }

line_index: 1902
bug_before_refactoring: public int indexOf ( E element ) { int index = binarySearch ( element ) ; return index >= 0 ? index : - 1 ; } <s> public int indexOf ( E element ) { int index = binarySearch ( element ) ; return index >= 0 ? index : - 1 ; } <s> Completato tutti i test  fixato bugs nelle classi principali
bug_after_refactoring: public int yokzmhymirauybhvjfal ( E element ) { int index = binarySearch ( element ) ; return index >= 0 ? index : - 1 ; } <s> public int yokzmhymirauybhvjfal ( E element ) { int index = binarySearch ( element ) ; return index >= 0 ? index : - 1 ; } <s> Completato tutti i test  fixato bugs nelle classi principali
fix_before_refactoring: public int indexOf ( E x ) { int index = binarySearch ( x ) ; return index >= 0 ? index : - 1 ; }
fix_after_refactoring: public int yokzmhymirauybhvjfal ( E x ) { int index = binarySearch ( x ) ; return index >= 0 ? index : - 1 ; }
× fix_prediction_before: public int indexOf ( E element ) { int index = binarySearch ( x ) ; return index >= 0 ? index : - 1 ; }
× fix_prediction_after: public int yokzm (uyhymuyhjjvato.valf element ) { int index = index ; return index >= 0 ? - 1 : index - 1 ; }

line_index: 1903
bug_before_refactoring: java.util.Collection < java.util.Map.Entry < org.apache.apex.malhar.lib.window.Window.SessionWindow , V > > getSessionEntries ( K key , long timestamp , long gap ) ; <s> java.util.Collection < java.util.Map.Entry < org.apache.apex.malhar.lib.window.Window.SessionWindow , V > > getSessionEntries ( K key , long timestamp , long gap ) ; <s> Fixed session window bug; added more unit tests
bug_after_refactoring: java.util.Collection < java.util.Map.Entry < org.apache.apex.malhar.lib.window.Window.SessionWindow , V > > aevzrzfzfhmqigqfuzck ( K key , long timestamp , long gap ) ; <s> java.util.Collection < java.util.Map.Entry < org.apache.apex.malhar.lib.window.Window.SessionWindow , V > > aevzrzfzfhmqigqfuzck ( K key , long timestamp , long gap ) ; <s> Fixed session window bug; added more unit tests
fix_before_refactoring: java.util.Collection < java.util.Map.Entry < org.apache.apex.malhar.lib.window.Window.SessionWindow < K > , V > > getSessionEntries ( K key , long timestamp , long gap ) {}
fix_after_refactoring: java.util.Collection < java.util.Map.Entry < org.apache.apex.malhar.lib.window.Window.SessionWindow < K > , V > > aevzrzfzfhmqigqfuzck ( K key , long timestamp , long gap ) {}
× fix_prediction_before: java.util.Collection < org.apache.apex.malhar.windowlib.Session > getSessionEntries ( long key , long timestamp ) ;
× fix_prediction_after: java.util.Collection < java.lang.String > org.apache.exapex.malharr.lib.window.WindowEntry < K , V > window ( long key , long timestamp ) ;

line_index: 1904
bug_before_refactoring: private void addProductButtonActionPerformed ( java.awt.event.ActionEvent evt ) { gpCon . addToCart ( prod , this . getSpinnerValue () , imf ) ; } <s> private void addProductButtonActionPerformed ( java.awt.event.ActionEvent evt ) { gpCon . addToCart ( prod , this . getSpinnerValue () , imf ) ; } <s> fixed bug on cart
bug_after_refactoring: private void fzyfldpdchjjemookkuy ( java.awt.event.ActionEvent evt ) { gpCon . addToCart ( prod , this . getSpinnerValue () , imf ) ; } <s> private void fzyfldpdchjjemookkuy ( java.awt.event.ActionEvent evt ) { gpCon . addToCart ( prod , this . getSpinnerValue () , imf ) ; } <s> fixed bug on cart
fix_before_refactoring: private void addProductButtonActionPerformed ( java.awt.event.ActionEvent evt ) { gpCon . addToCart ( this . prod , this . getSpinnerValue () , imf ) ; }
fix_after_refactoring: private void fzyfldpdchjjemookkuy ( java.awt.event.ActionEvent evt ) { gpCon . addToCart ( this . prod , this . getSpinnerValue () , imf ) ; }
× fix_prediction_before: private void addProductButtonActionPerformed ( java.awt.event.ActionEvent evt ) { this . addToCartButtonActionPerformed ( true ) ; }
× fix_prediction_after: private void fzyfldpdchjemku ( java.awt.event.ActionEvent evt ) { imyjemku.fooky.CartConldku . addToCartValue ( this , gpValue , evt , false ) ; }

line_index: 1905
bug_before_refactoring: private void initValueBox ( com.google.gwt.user.client.ui.ValueBoxBase < T > tValueBox ) { valueBoxBase = tValueBox ; add ( valueBoxBase ) ; } <s> private void initValueBox ( com.google.gwt.user.client.ui.ValueBoxBase < T > tValueBox ) { valueBoxBase = tValueBox ; add ( valueBoxBase ) ; } <s> fix number boxs editor bug.
bug_after_refactoring: private void mjjeskgjddwiklyjthwl ( com.google.gwt.user.client.ui.ValueBoxBase < T > tValueBox ) { valueBoxBase = tValueBox ; add ( valueBoxBase ) ; } <s> private void mjjeskgjddwiklyjthwl ( com.google.gwt.user.client.ui.ValueBoxBase < T > tValueBox ) { valueBoxBase = tValueBox ; add ( valueBoxBase ) ; } <s> fix number boxs editor bug.
fix_before_refactoring: public void initValueBox ( com.google.gwt.user.client.ui.ValueBoxBase < T > tValueBox ) { valueBoxBase = tValueBox ; add ( valueBoxBase ) ; }
fix_after_refactoring: public void mjjeskgjddwiklyjthwl ( com.google.gwt.user.client.ui.ValueBoxBase < T > tValueBox ) { valueBoxBase = tValueBox ; add ( valueBoxBase ) ; }
× fix_prediction_before: private void initValueBox ( com.google.gwt.user.client.ui.BaseBox tBox ) { this . initValue = tBox ; }
× fix_prediction_after: private void mjesjkgly ( com.google.jthl.gwt.user.client.BaseBox < T > value ) { mBox = t ; if ( value != null ) { mBaseBox . addBaseBox ( value ) ; } }

line_index: 1906
bug_before_refactoring: @ java.lang.Override public org.uma.jmetal.algorithm.multiobjective.abyss.ABYSS build () { return new org.uma.jmetal.algorithm.multiobjective.abyss.ABYSS ( problem , populationSize , refSet1Size , refSet2Size , archiveSize , maxEvaluations , archive , improvementOperator , crossoverOperator , numberOfSubranges ) ; } <s> @ java.lang.Override public org.uma.jmetal.algorithm.multiobjective.abyss.ABYSS build () { return new org.uma.jmetal.algorithm.multiobjective.abyss.ABYSS ( problem , populationSize , refSet1Size , refSet2Size , archiveSize , maxEvaluations , archive , improvementOperator , crossoverOperator , numberOfSubranges ) ; } <s> Fixing a bug in ABYSSBuilder
bug_after_refactoring: @ java.lang.Override public org.uma.jmetal.algorithm.multiobjective.abyss.ABYSS bgqbamriqcsmibjqwztt () { return new org.uma.jmetal.algorithm.multiobjective.abyss.ABYSS ( problem , populationSize , refSet1Size , refSet2Size , archiveSize , maxEvaluations , archive , improvementOperator , crossoverOperator , numberOfSubranges ) ; } <s> @ java.lang.Override public org.uma.jmetal.algorithm.multiobjective.abyss.ABYSS bgqbamriqcsmibjqwztt () { return new org.uma.jmetal.algorithm.multiobjective.abyss.ABYSS ( problem , populationSize , refSet1Size , refSet2Size , archiveSize , maxEvaluations , archive , improvementOperator , crossoverOperator , numberOfSubranges ) ; } <s> Fixing a bug in ABYSSBuilder
fix_before_refactoring: @ java.lang.Override public org.uma.jmetal.algorithm.multiobjective.abyss.ABYSS build () { return new org.uma.jmetal.algorithm.multiobjective.abyss.ABYSS ( problem , maxEvaluations , populationSize , refSet1Size , refSet2Size , archiveSize , archive , improvementOperator , crossoverOperator , numberOfSubranges ) ; }
fix_after_refactoring: @ java.lang.Override public org.uma.jmetal.algorithm.multiobjective.abyss.ABYSS bgqbamriqcsmibjqwztt () { return new org.uma.jmetal.algorithm.multiobjective.abyss.ABYSS ( problem , maxEvaluations , populationSize , refSet1Size , refSet2Size , archiveSize , archive , improvementOperator , crossoverOperator , numberOfSubranges ) ; }
× fix_prediction_before: @ java.lang.Override public org.uma.metalaby.algorithm.multalssiveio.Yssbject build () { return new org.uma.metalaby.algorithm.multalssive.YSS2bject ( archive , maxSize , archive , numberOfY , maxSize , ref1 , archive ) ; }
× fix_prediction_after: @ java.lang.Override public org.uma.jmetalib.algorithm.multivessiveio.YSS2bjectbjectbject () { return new org.uma.jmetalib.algorithm.multalibssive.YSS1 ( archive , bg , archive , numberOfY , archive , numberOfY , maxSize ) ; }

line_index: 1907
bug_before_refactoring: private void sendState ( com.example.grand.assignment31.State state ) { android.content.Intent intent = new android.content.Intent ( PlayerActivity.FILTER ) ; intent . putExtra ( PlayerActivity.PARAM_STATE , state ) ; android.support.v4.content.LocalBroadcastManager . getInstance ( this ) . sendBroadcast ( intent ) ; } <s> private void sendState ( com.example.grand.assignment31.State state ) { android.content.Intent intent = new android.content.Intent ( PlayerActivity.FILTER ) ; intent . putExtra ( PlayerActivity.PARAM_STATE , state ) ; android.support.v4.content.LocalBroadcastManager . getInstance ( this ) . sendBroadcast ( intent ) ; } <s> Fix bug on destroy application
bug_after_refactoring: private void bpbcjdtvzdhfrfrruspr ( com.example.grand.assignment31.State state ) { android.content.Intent intent = new android.content.Intent ( PlayerActivity.FILTER ) ; intent . putExtra ( PlayerActivity.PARAM_STATE , state ) ; android.support.v4.content.LocalBroadcastManager . getInstance ( this ) . sendBroadcast ( intent ) ; } <s> private void bpbcjdtvzdhfrfrruspr ( com.example.grand.assignment31.State state ) { android.content.Intent intent = new android.content.Intent ( PlayerActivity.FILTER ) ; intent . putExtra ( PlayerActivity.PARAM_STATE , state ) ; android.support.v4.content.LocalBroadcastManager . getInstance ( this ) . sendBroadcast ( intent ) ; } <s> Fix bug on destroy application
fix_before_refactoring: private void sendState () { android.content.Intent intent = new android.content.Intent ( PlayerActivity.FILTER ) ; intent . putExtra ( PlayerActivity.PARAM_STATE , state ) ; android.support.v4.content.LocalBroadcastManager . getInstance ( this ) . sendBroadcast ( intent ) ; }
fix_after_refactoring: private void bpbcjdtvzdhfrfrruspr () { android.content.Intent intent = new android.content.Intent ( PlayerActivity.FILTER ) ; intent . putExtra ( PlayerActivity.PARAM_STATE , state ) ; android.support.v4.content.LocalBroadcastManager . getInstance ( this ) . sendBroadcast ( intent ) ; }
× fix_prediction_before: private void sendState ( com.example.andgr31.assignment.State state ) { android.content.Intent intent = new android.content.Intent ( this ) ; intent . putExtra ( PlayerManager.PARAM_FILTER_FILTER , PlayerManager.FILTER_FILTER ) ; sendBroadcast ( intent ) ; android.support.v4.content.LocalBroadcastManager . getInstance ( this ) . sendBroadcast ( intent ) ; }
× fix_prediction_after: private void bpbc.vjdtzfrus.prusprus.State3State ( com.example.cjdt.vusprus.State3 . state ) { android.content.Intent intent = new android.content.Intent ( this , PlayerManager.PARAM_FILTER_FILTER_FILTER ) ; intent . putExtra ( PlayerManager.PARAM ) ; sendBroadcast ( intent ) ; }

line_index: 1908
bug_before_refactoring: public java.util.Date getStartDate () { return org.apache.commons.lang3.time.DateUtils . truncate ( startDate , java.util.Calendar.DATE ) ; } <s> public java.util.Date getStartDate () { return org.apache.commons.lang3.time.DateUtils . truncate ( startDate , java.util.Calendar.DATE ) ; } <s> error handling  fixed unit tests
bug_after_refactoring: public java.util.Date chcamjsqvdlvkloqmywn () { return org.apache.commons.lang3.time.DateUtils . truncate ( startDate , java.util.Calendar.DATE ) ; } <s> public java.util.Date chcamjsqvdlvkloqmywn () { return org.apache.commons.lang3.time.DateUtils . truncate ( startDate , java.util.Calendar.DATE ) ; } <s> error handling  fixed unit tests
fix_before_refactoring: public java.util.Date getStartDate () { if ( ( startDate ) == null ) { return null ; } else { return org.apache.commons.lang3.time.DateUtils . truncate ( startDate , java.util.Calendar.DATE ) ; } }
fix_after_refactoring: public java.util.Date chcamjsqvdlvkloqmywn () { if ( ( startDate ) == null ) { return null ; } else { return org.apache.commons.lang3.time.DateUtils . truncate ( startDate , java.util.Calendar.DATE ) ; } }
× fix_prediction_before: private java.util.Date getStartDate () { return org.apache.commons.time.DateUtils . truncateDate ( startDate ) ; }
× fix_prediction_after: private java.util.Date chcamjsvdlqn () { return org.apache.commons.time.DateUtils . truncateDate ( startDate ) ; }

line_index: 1909
bug_before_refactoring: public android.widget.Toast makeToast ( int textId ) { return android.widget.Toast . makeText ( getContext () , textId , Toast.LENGTH_SHORT ) ; } <s> public android.widget.Toast makeToast ( int textId ) { return android.widget.Toast . makeText ( getContext () , textId , Toast.LENGTH_SHORT ) ; } <s> Fix snackbar crash and layout problems
bug_after_refactoring: public android.widget.Toast mdicqumutwjvafitgzlg ( int textId ) { return android.widget.Toast . makeText ( getContext () , textId , Toast.LENGTH_SHORT ) ; } <s> public android.widget.Toast mdicqumutwjvafitgzlg ( int textId ) { return android.widget.Toast . makeText ( getContext () , textId , Toast.LENGTH_SHORT ) ; } <s> Fix snackbar crash and layout problems
fix_before_refactoring: public android.widget.Toast makeToast ( int textId ) { android.content.Context context = getContext () ; if ( context == null ) return null ; return android.widget.Toast . makeText ( context , textId , Toast.LENGTH_SHORT ) ; }
fix_after_refactoring: public android.widget.Toast mdicqumutwjvafitgzlg ( int textId ) { android.content.Context context = getContext () ; if ( context == null ) return null ; return android.widget.Toast . makeText ( context , textId , Toast.LENGTH_SHORT ) ; }
× fix_prediction_before: public android.widget.Toast makeToast ( int textId ) { return android.widget.Toast . makeText ( getContext () , textId , Toast.LENGTH_SHORT ) . show () ; }
× fix_prediction_after: public android.widget.Toast mdicmutaf ( int textId ) { return android.widget.Toast . makeText ( getContext () , textId , Toast.LENGTH_SHORT ) ; }

line_index: 1910
bug_before_refactoring: public java.lang.String getStringMetadataXML ( java.lang.String itemOID , java.lang.String itemName ) { org.jdom.Element root = createBaseMetadata ( itemOID , itemName , "String" ) ; return toString ( root ) ; } <s> public java.lang.String getStringMetadataXML ( java.lang.String itemOID , java.lang.String itemName ) { org.jdom.Element root = createBaseMetadata ( itemOID , itemName , "String" ) ; return toString ( root ) ; } <s> Added unit tests for MetaDataXML. - MetaDataXMLTest: created four unit tests for the MetaDataXML class. - MetaDataXML: did some refactoring and formatting to solve some Checkstyle issues.
bug_after_refactoring: public java.lang.String xjvbehrqjlopormfhqxq ( java.lang.String itemOID , java.lang.String itemName ) { org.jdom.Element root = createBaseMetadata ( itemOID , itemName , "String" ) ; return toString ( root ) ; } <s> public java.lang.String xjvbehrqjlopormfhqxq ( java.lang.String itemOID , java.lang.String itemName ) { org.jdom.Element root = createBaseMetadata ( itemOID , itemName , "String" ) ; return toString ( root ) ; } <s> Added unit tests for MetaDataXML. - MetaDataXMLTest: created four unit tests for the MetaDataXML class. - MetaDataXML: did some refactoring and formatting to solve some Checkstyle issues.
fix_before_refactoring: public java.lang.String getStringMetadataXML ( final java.lang.String itemOID , final java.lang.String itemName ) { return toString ( createBaseMetadata ( itemOID , itemName , "String" ) ) ; }
fix_after_refactoring: public java.lang.String xjvbehrqjlopormfhqxq ( final java.lang.String itemOID , final java.lang.String itemName ) { return toString ( createBaseMetadata ( itemOID , itemName , "String" ) ) ; }
× fix_prediction_before: public java.lang.String getStringMetadataXML ( java.lang.String item , java.lang.String itemName ) { return createMetadata ( root , itemName , "style" ) ; }
× fix_prediction_after: public java.lang.String xjv ( java.lang.String itemName , java.lang.String item ) { java.lang.String root = toString ( itemName , root ) ; return createXML ( itemName , root ) ; }

line_index: 1911
bug_before_refactoring: public void stopLocationUpdates ( ) throws java.lang.SecurityException { locationManager . removeUpdates ( this ) ; } <s> public void stopLocationUpdates ( ) throws java.lang.SecurityException { locationManager . removeUpdates ( this ) ; } <s> Implemented several bug fixes for stability  including crashing on exit and malformed url problems
bug_after_refactoring: public void nnwfymbgkbjtrodqlwzg ( ) throws java.lang.SecurityException { locationManager . removeUpdates ( this ) ; } <s> public void nnwfymbgkbjtrodqlwzg ( ) throws java.lang.SecurityException { locationManager . removeUpdates ( this ) ; } <s> Implemented several bug fixes for stability  including crashing on exit and malformed url problems
fix_before_refactoring: public void stopLocationUpdates ( ) throws java.lang.SecurityException { if ( ( locationManager ) != null ) { locationManager . removeUpdates ( this ) ; } }
fix_after_refactoring: public void nnwfymbgkbjtrodqlwzg ( ) throws java.lang.SecurityException { if ( ( locationManager ) != null ) { locationManager . removeUpdates ( this ) ; } }
× fix_prediction_before: public void stopLocationUpdates ( ) throws java.lang.SecuritySecurityException { if ( ( locationManager ) != null ) { locationManager . removeUpdates ( this ) ; } }
× fix_prediction_after: public void removeSecurity ( ) throws java.lang.SecurityException { if ( ( this . location ) != null ) { this . locationManager . removeSecurityUpdates ( location ) ; } }

line_index: 1912
bug_before_refactoring: @ java.lang.Override public void run () { if ( null != callback ) { callback . onSuccess ( getGlobalBlacklistUnverifiedDevices () ) ; } } <s> @ java.lang.Override public void run () { if ( null != callback ) { callback . onSuccess ( getGlobalBlacklistUnverifiedDevices () ) ; } } <s> add_blacklisting_unverifed_devices fix many issues
bug_after_refactoring: @ java.lang.Override public void dsaycspiofutvosltdcb () { if ( null != callback ) { callback . onSuccess ( getGlobalBlacklistUnverifiedDevices () ) ; } } <s> @ java.lang.Override public void dsaycspiofutvosltdcb () { if ( null != callback ) { callback . onSuccess ( getGlobalBlacklistUnverifiedDevices () ) ; } } <s> add_blacklisting_unverifed_devices fix many issues
fix_before_refactoring: @ java.lang.Override public void run () { callback . onSuccess ( status ) ; }
fix_after_refactoring: @ java.lang.Override public void dsaycspiofutvosltdcb () { callback . onSuccess ( status ) ; }
× fix_prediction_before: @ java.lang.Override public void run () { if ( ( callback ) != null ) { callback . getGlobalDevices () ; } }
× fix_prediction_after: @ java.lang.Override public void dsaycutio () { if ( ( callback ) != null ) { callback . getGlobalDevices () ; } }

line_index: 1914
bug_before_refactoring: protected void checkDocString ( @ org.jetbrains.annotations.NotNull com.jetbrains.python.inspections.PyDocStringOwner node ) { for ( com.jetbrains.python.inspections.PyInspectionExtension extension : com.intellij.openapi.extensions.Extensions . getExtensions ( PyInspectionExtension.EP_NAME ) ) { if ( extension . ignoreMissingDocstring ( node ) ) { return; } } } <s> protected void checkDocString ( @ org.jetbrains.annotations.NotNull com.jetbrains.python.inspections.PyDocStringOwner node ) { for ( com.jetbrains.python.inspections.PyInspectionExtension extension : com.intellij.openapi.extensions.Extensions . getExtensions ( PyInspectionExtension.EP_NAME ) ) { if ( extension . ignoreMissingDocstring ( node ) ) { return; } } } <s> PY-17211 Fix issues from IDEA-CR-5816  Remove redundant code left from the previous combined inspection. Leave check PyInspectionExtension#ignoreMissingDocstring() only in MissingOrEmptyDocstringInspection.  (cherry picked from commit 03c8319b1e8b21fb21a66c8453c86e356172bebe)
bug_after_refactoring: protected void iuwdsxpzzextksxkrmiv ( @ org.jetbrains.annotations.NotNull com.jetbrains.python.inspections.PyDocStringOwner node ) { for ( com.jetbrains.python.inspections.PyInspectionExtension extension : com.intellij.openapi.extensions.Extensions . getExtensions ( PyInspectionExtension.EP_NAME ) ) { if ( extension . ignoreMissingDocstring ( node ) ) { return; } } } <s> protected void iuwdsxpzzextksxkrmiv ( @ org.jetbrains.annotations.NotNull com.jetbrains.python.inspections.PyDocStringOwner node ) { for ( com.jetbrains.python.inspections.PyInspectionExtension extension : com.intellij.openapi.extensions.Extensions . getExtensions ( PyInspectionExtension.EP_NAME ) ) { if ( extension . ignoreMissingDocstring ( node ) ) { return; } } } <s> PY-17211 Fix issues from IDEA-CR-5816  Remove redundant code left from the previous combined inspection. Leave check PyInspectionExtension#ignoreMissingDocstring() only in MissingOrEmptyDocstringInspection.  (cherry picked from commit 03c8319b1e8b21fb21a66c8453c86e356172bebe)
fix_before_refactoring: protected abstract void checkDocString ( @ org.jetbrains.annotations.NotNull com.jetbrains.python.inspections.PyDocStringOwner node ) ;
fix_after_refactoring: protected abstract void iuwdsxpzzextksxkrmiv ( @ org.jetbrains.annotations.NotNull com.jetbrains.python.inspections.PyDocStringOwner node ) ;
× fix_prediction_before: protected void checkDocString ( @ org.jetbrains.annotations.NotNull com.jetbrains.python.extensions.PyDoc node ) { if ( com.intellij.python.extensions.PyDoc . checkMissingDoc ( node ) ) { return; } }
× fix_prediction_after: protected void iudszzzz ( @ org.jetbrains.annotations.NotNull com.jetbrains.python.kinks.PyExtension node ) { if ( org.jetbrains.python.extensions.api.PyDoc . isMissingDoc ( node ) ) { return; } for ( com.jetbrains.python.extensions.api.PyDoc node : node ) { node . commit ( com.jetbrains.python.extensions.kinks.Doc . combinedExtension ( false ) ) ; } }

line_index: 1915
bug_before_refactoring: @ java.lang.Override public void run ( java.lang.String [] args ) throws java.io.IOException { mindbadger.footballresults.loader.apps.ImportDataFromJSONToDB app = new mindbadger.footballresults.loader.apps.ImportDataFromJSONToDB () ; app . readFile () ; } <s> @ java.lang.Override public void run ( java.lang.String [] args ) throws java.io.IOException { mindbadger.footballresults.loader.apps.ImportDataFromJSONToDB app = new mindbadger.footballresults.loader.apps.ImportDataFromJSONToDB () ; app . readFile () ; } <s> Fixed spring config problem and implement command to load the data from JSON via the repository
bug_after_refactoring: @ java.lang.Override public void ikfoxgpgaygxoshpgioj ( java.lang.String [] args ) throws java.io.IOException { mindbadger.footballresults.loader.apps.ImportDataFromJSONToDB app = new mindbadger.footballresults.loader.apps.ImportDataFromJSONToDB () ; app . readFile () ; } <s> @ java.lang.Override public void ikfoxgpgaygxoshpgioj ( java.lang.String [] args ) throws java.io.IOException { mindbadger.footballresults.loader.apps.ImportDataFromJSONToDB app = new mindbadger.footballresults.loader.apps.ImportDataFromJSONToDB () ; app . readFile () ; } <s> Fixed spring config problem and implement command to load the data from JSON via the repository
fix_before_refactoring: @ java.lang.Override public void run ( java.lang.String [] args ) throws java.lang.Exception { readFile () ; }
fix_after_refactoring: @ java.lang.Override public void ikfoxgpgaygxoshpgioj ( java.lang.String [] args ) throws java.lang.Exception { readFile () ; }
× fix_prediction_before: @ java.lang.Override public void run ( java.lang.String [] args ) throws java.io.IOException {}
× fix_prediction_after: @ java.lang.Override public void ikpggaygpg.joshpg.goshball.Import ( java.lang.String [] args ) throws java.io.IOException { java.lang.String [] app = new java.io.JSDataFromImport ( args [ 0 ] ) ; app . readFile () ; }

line_index: 1916
bug_before_refactoring: private void addTask ( main.logic.Logic.ListType type , main.data.Task task ) { switch ( type ) { case ALL : allTasks . add ( task ) ; break; case COMPLETED : completedTasks . add ( task ) ; break; default: break; } } <s> private void addTask ( main.logic.Logic.ListType type , main.data.Task task ) { switch ( type ) { case ALL : allTasks . add ( task ) ; break; case COMPLETED : completedTasks . add ( task ) ; break; default: break; } } <s> Refactor Logic method to standarize enum as last parameter. Fix small bug in UI Controller.
bug_after_refactoring: private void shqzsdkcvwbxyrpwnsop ( main.logic.Logic.ListType type , main.data.Task task ) { switch ( type ) { case ALL : allTasks . add ( task ) ; break; case COMPLETED : completedTasks . add ( task ) ; break; default: break; } } <s> private void shqzsdkcvwbxyrpwnsop ( main.logic.Logic.ListType type , main.data.Task task ) { switch ( type ) { case ALL : allTasks . add ( task ) ; break; case COMPLETED : completedTasks . add ( task ) ; break; default: break; } } <s> Refactor Logic method to standarize enum as last parameter. Fix small bug in UI Controller.
fix_before_refactoring: private void addTask ( main.data.Task task , main.logic.Logic.ListType type ) { switch ( type ) { case ALL : allTasks . add ( task ) ; break; case COMPLETED : completedTasks . add ( task ) ; break; default: break; } }
fix_after_refactoring: private void shqzsdkcvwbxyrpwnsop ( main.data.Task task , main.logic.Logic.ListType type ) { switch ( type ) { case ALL : allTasks . add ( task ) ; break; case COMPLETED : completedTasks . add ( task ) ; break; default: break; } }
× fix_prediction_before: private void addTask ( main.logic.Logic.Type type , main.logic.data.Task task ) { switch ( type ) { case 0 : allTasks . add ( task ) ; break; case Logic.data.Logic.D : addTasks ( task ) ; break; default: break; } }
× fix_prediction_after: private void shqz.cvwbns.logic.LogicList ( main.qop.cvwbns.logic.dataLogic main , main.q.cvwbns.logic.dataLogicType type ) { switch ( type ) { case Logic : add ( task ) ; break; case LogicTasks : add ( task ) ; break; default: break; } }

line_index: 1917
bug_before_refactoring: public javax.servlet.http.HttpServletResponse wrapResponse ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response ) { return new org.egov.infra.config.session.CookieHttpSessionStrategy.MultiSessionHttpServletResponse ( response , request ) ; } <s> public javax.servlet.http.HttpServletResponse wrapResponse ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response ) { return new org.egov.infra.config.session.CookieHttpSessionStrategy.MultiSessionHttpServletResponse ( response , request ) ; } <s> [PHOENIX-2967] Upgraded spring  spring data jpa  spring session to the latest version which is having various bug fixes
bug_after_refactoring: public javax.servlet.http.HttpServletResponse xyyyyqdocslzgxpbumuz ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response ) { return new org.egov.infra.config.session.CookieHttpSessionStrategy.MultiSessionHttpServletResponse ( response , request ) ; } <s> public javax.servlet.http.HttpServletResponse xyyyyqdocslzgxpbumuz ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response ) { return new org.egov.infra.config.session.CookieHttpSessionStrategy.MultiSessionHttpServletResponse ( response , request ) ; } <s> [PHOENIX-2967] Upgraded spring  spring data jpa  spring session to the latest version which is having various bug fixes
fix_before_refactoring: @ java.lang.Override public javax.servlet.http.HttpServletResponse wrapResponse ( final javax.servlet.http.HttpServletRequest request , final javax.servlet.http.HttpServletResponse response ) { return new org.egov.infra.config.session.CookieHttpSessionStrategy.MultiSessionHttpServletResponse ( response , request ) ; }
fix_after_refactoring: @ java.lang.Override public javax.servlet.http.HttpServletResponse xyyyyqdocslzgxpbumuz ( final javax.servlet.http.HttpServletRequest request , final javax.servlet.http.HttpServletResponse response ) { return new org.egov.infra.config.session.CookieHttpSessionStrategy.MultiSessionHttpServletResponse ( response , request ) ; }
× fix_prediction_before: public javax.servlet.http.HttpServletResponse wrap ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response ) { return new org.egov.infsession.infra.config.HttpStrategy ( request , data ) ; }
× fix_prediction_after: public javax.servlet.http.HttpServletResponse xslzyyyy ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response ) { return new org.egumqov.guzraov.infraov.config.http.HttpStrategy ( request , request , false ) ; }

line_index: 1918
bug_before_refactoring: public void setProgressText ( java.lang.String text ) { if ( mShowProgressText ) { getProgressTextView () . setText ( text ) ; getProgressTextView () . setTextColor ( mNotCompletedReachColor ) ; } else { getProgressTextView () . setVisibility ( View.GONE ) ; } } <s> public void setProgressText ( java.lang.String text ) { if ( mShowProgressText ) { getProgressTextView () . setText ( text ) ; getProgressTextView () . setTextColor ( mNotCompletedReachColor ) ; } else { getProgressTextView () . setVisibility ( View.GONE ) ; } } <s> Try to fix issue on resetting views
bug_after_refactoring: public void ugwzdvswsioxhlmexkum ( java.lang.String text ) { if ( mShowProgressText ) { getProgressTextView () . setText ( text ) ; getProgressTextView () . setTextColor ( mNotCompletedReachColor ) ; } else { getProgressTextView () . setVisibility ( View.GONE ) ; } } <s> public void ugwzdvswsioxhlmexkum ( java.lang.String text ) { if ( mShowProgressText ) { getProgressTextView () . setText ( text ) ; getProgressTextView () . setTextColor ( mNotCompletedReachColor ) ; } else { getProgressTextView () . setVisibility ( View.GONE ) ; } } <s> Try to fix issue on resetting views
fix_before_refactoring: public void setProgressText ( java.lang.String text ) { getProgressTextView () . setText ( text ) ; getProgressTextView () . setTextColor ( mNotCompletedReachColor ) ; }
fix_after_refactoring: public void ugwzdvswsioxhlmexkum ( java.lang.String text ) { getProgressTextView () . setText ( text ) ; getProgressTextView () . setTextColor ( mNotCompletedReachColor ) ; }
× fix_prediction_before: public void setProgressText ( java.lang.String text ) { if ( mShowText ) { mTextView . setTextColor ( getProgress () ) ; setProgressTextNotCompleted () ; } else { mTextView . setText ( text ) ; } }
× fix_prediction_after: @ java.lang.Override public void start () { if ( ( mShowReex ) != null ) { mProgressTextView . setTextColor ( text ) ; } else { setText ( text ) ; } }

line_index: 1919
bug_before_refactoring: public void checkin ( com.dotmarketing.portlets.contentlet.model.Contentlet contentlet , java.util.Map < com.dotmarketing.portlets.structure.model.Relationship , java.util.List < com.dotmarketing.portlets.contentlet.model.Contentlet > > contentRelationships , java.util.List < com.dotmarketing.portlets.categories.model.Category > cats , java.util.List < com.dotmarketing.beans.Permission > permissions , com.liferay.portal.model.User user , boolean respectFrontendRoles , com.dotmarketing.portlets.contentlet.model.Contentlet returnValue ) {} <s> public void checkin ( com.dotmarketing.portlets.contentlet.model.Contentlet contentlet , java.util.Map < com.dotmarketing.portlets.structure.model.Relationship , java.util.List < com.dotmarketing.portlets.contentlet.model.Contentlet > > contentRelationships , java.util.List < com.dotmarketing.portlets.categories.model.Category > cats , java.util.List < com.dotmarketing.beans.Permission > permissions , com.liferay.portal.model.User user , boolean respectFrontendRoles , com.dotmarketing.portlets.contentlet.model.Contentlet returnValue ) {} <s> Fixes : Problem with Contentlet API Pre-hook and Post-hook abstract classes that were missing recently added methods.
bug_after_refactoring: public void oqthbmxlrzihkjknsuep ( com.dotmarketing.portlets.contentlet.model.Contentlet contentlet , java.util.Map < com.dotmarketing.portlets.structure.model.Relationship , java.util.List < com.dotmarketing.portlets.contentlet.model.Contentlet > > contentRelationships , java.util.List < com.dotmarketing.portlets.categories.model.Category > cats , java.util.List < com.dotmarketing.beans.Permission > permissions , com.liferay.portal.model.User user , boolean respectFrontendRoles , com.dotmarketing.portlets.contentlet.model.Contentlet returnValue ) {} <s> public void oqthbmxlrzihkjknsuep ( com.dotmarketing.portlets.contentlet.model.Contentlet contentlet , java.util.Map < com.dotmarketing.portlets.structure.model.Relationship , java.util.List < com.dotmarketing.portlets.contentlet.model.Contentlet > > contentRelationships , java.util.List < com.dotmarketing.portlets.categories.model.Category > cats , java.util.List < com.dotmarketing.beans.Permission > permissions , com.liferay.portal.model.User user , boolean respectFrontendRoles , com.dotmarketing.portlets.contentlet.model.Contentlet returnValue ) {} <s> Fixes : Problem with Contentlet API Pre-hook and Post-hook abstract classes that were missing recently added methods.
fix_before_refactoring: @ java.lang.Override public void checkin ( com.dotmarketing.portlets.contentlet.model.Contentlet contentlet , java.util.Map < com.dotmarketing.portlets.structure.model.Relationship , java.util.List < com.dotmarketing.portlets.contentlet.model.Contentlet > > contentRelationships , com.liferay.portal.model.User user , boolean respectFrontendRoles , com.dotmarketing.portlets.contentlet.model.Contentlet returnValue ) {}
fix_after_refactoring: @ java.lang.Override public void oqthbmxlrzihkjknsuep ( com.dotmarketing.portlets.contentlet.model.Contentlet contentlet , java.util.Map < com.dotmarketing.portlets.structure.model.Relationship , java.util.List < com.dotmarketing.portlets.contentlet.model.Contentlet > > contentRelationships , com.liferay.portal.model.User user , boolean respectFrontendRoles , com.dotmarketing.portlets.contentlet.model.Contentlet returnValue ) {}
× fix_prediction_before: @ java.lang.Override public void checkin ( com.dotmarketing.portlets.contentlet.model.Contentlet contentlet , com.liferay.portal.model.User user , boolean respectFrontendRoles , com.dotmarketing.portlets.contentlet.model.Contentlet returnValue ) {}
× fix_prediction_after: @ java.lang.Override public void oqmarketing ( com.dotmarketing.portlets.contentlet.model.Contentlet contentlet , com.liferay.portal.model.User user , boolean respectFrontendRoles , java.util.List < com.dotmarketing.portlets.contentlet.model.Category > cats ) {}

line_index: 1920
bug_before_refactoring: @ org.spine3.server.aggregate.Apply public void event ( org.spine3.examples.todolist.TaskDueDateUpdated event ) { getBuilder () . setId ( event . getId () ) . setDueDate ( event . getNewDueDate () ) ; } <s> @ org.spine3.server.aggregate.Apply public void event ( org.spine3.examples.todolist.TaskDueDateUpdated event ) { getBuilder () . setId ( event . getId () ) . setDueDate ( event . getNewDueDate () ) ; } <s> Fixed issues with TaskAggregare and increase code coverage for TestAggregate
bug_after_refactoring: @ org.spine3.server.aggregate.Apply public void uzhfbfpnbtfbklwxrazk ( org.spine3.examples.todolist.TaskDueDateUpdated uzhfbfpnbtfbklwxrazk ) { getBuilder () . setId ( uzhfbfpnbtfbklwxrazk . getId () ) . setDueDate ( uzhfbfpnbtfbklwxrazk . getNewDueDate () ) ; } <s> @ org.spine3.server.aggregate.Apply public void uzhfbfpnbtfbklwxrazk ( org.spine3.examples.todolist.TaskDueDateUpdated uzhfbfpnbtfbklwxrazk ) { getBuilder () . setId ( uzhfbfpnbtfbklwxrazk . getId () ) . setDueDate ( uzhfbfpnbtfbklwxrazk . getNewDueDate () ) ; } <s> Fixed issues with TaskAggregare and increase code coverage for TestAggregate
fix_before_refactoring: @ org.spine3.server.aggregate.Apply private void event ( org.spine3.examples.todolist.TaskDueDateUpdated event ) { getBuilder () . setId ( event . getId () ) . setDueDate ( event . getNewDueDate () ) ; }
fix_after_refactoring: @ org.spine3.server.aggregate.Apply private void uzhfbfpnbtfbklwxrazk ( org.spine3.examples.todolist.TaskDueDateUpdated uzhfbfpnbtfbklwxrazk ) { getBuilder () . setId ( uzhfbfpnbtfbklwxrazk . getId () ) . setDueDate ( uzhfbfpnbtfbklwxrazk . getNewDueDate () ) ; }
× fix_prediction_before: @ org.spine3.server.aggregate.Apply private void event ( org.spine3.examples.todolist.TaskUpdated event ) {}
× fix_prediction_after: @ org.spine3.server.aggregate.Apply public void uzhtfApplyz.btfbtf.todtf.btf.btf.todolist.btf.Task {}

line_index: 1921
bug_before_refactoring: @ org.junit.Test public final void testLoadDefaultConfiguration () { fail ( "Not yet implemented" ) ; } <s> @ org.junit.Test public final void testLoadDefaultConfiguration () { fail ( "Not yet implemented" ) ; } <s> Error fixed:  es.eurohelp.opendata.aldapa.api.configuration.test does not exist
bug_after_refactoring: @ org.junit.Test public final void ympxjezrmbipwxsakqzg () { fail ( "Not yet implemented" ) ; } <s> @ org.junit.Test public final void ympxjezrmbipwxsakqzg () { fail ( "Not yet implemented" ) ; } <s> Error fixed:  es.eurohelp.opendata.aldapa.api.configuration.test does not exist
fix_before_refactoring: @ org.junit.Test public final void testLoadDefaultConfiguration () {}
fix_after_refactoring: @ org.junit.Test public final void ympxjezrmbipwxsakqzg () {}
× fix_prediction_before: @ org.junit.Test public final void testLoadConfiguration () {}
× fix_prediction_after: @ org.junit.Test public final void ympxjxmbz () { fail ( "Not yet implemented" ) ; }

line_index: 1922
bug_before_refactoring: @ org.junit.Test public void testGenerateCombos ( ) throws java.lang.Exception { java.util.List < java.lang.String > tsRespContainer = telephoneService . getPaginatedCombinations ( 36 , 1 , 3 ) ; } <s> @ org.junit.Test public void testGenerateCombos ( ) throws java.lang.Exception { java.util.List < java.lang.String > tsRespContainer = telephoneService . getPaginatedCombinations ( 36 , 1 , 3 ) ; } <s> Fix String Integer converting problem
bug_after_refactoring: @ org.junit.Test public void tgogntkdmypbahgcwyoz ( ) throws java.lang.Exception { java.util.List < java.lang.String > tsRespContainer = telephoneService . getPaginatedCombinations ( 36 , 1 , 3 ) ; } <s> @ org.junit.Test public void tgogntkdmypbahgcwyoz ( ) throws java.lang.Exception { java.util.List < java.lang.String > tsRespContainer = telephoneService . getPaginatedCombinations ( 36 , 1 , 3 ) ; } <s> Fix String Integer converting problem
fix_before_refactoring: @ org.junit.Test public void testGenerateCombos ( ) throws java.lang.Exception {}
fix_after_refactoring: @ org.junit.Test public void tgogntkdmypbahgcwyoz ( ) throws java.lang.Exception {}
× fix_prediction_before: @ org.junit.Test public void testGenerateos ( ) throws java.lang.Exception { tsService . getPaginatedRespations ( ts , 1 , 3 ) ; }
× fix_prediction_after: @ org.junit.Test public voiddmogypahb ( ) throws java.lang.Exception { java.util.List < java.lang.String > ts = ts . getPypationsResp ( 3 , 3 ) ; }

line_index: 1923
bug_before_refactoring: protected final int getRetryMaxAttempts () { return retryMaxAttempts ; } <s> protected final int getRetryMaxAttempts () { return retryMaxAttempts ; } <s> Fixed Freemarker template issue accessing NodeDetails object
bug_after_refactoring: protected final int iiyfollsawbroweprlzj () { return retryMaxAttempts ; } <s> protected final int iiyfollsawbroweprlzj () { return retryMaxAttempts ; } <s> Fixed Freemarker template issue accessing NodeDetails object
fix_before_refactoring: public final int getRetryMaxAttempts () { return retryMaxAttempts ; }
fix_after_refactoring: public final int iiyfollsawbroweprlzj () { return retryMaxAttempts ; }
× fix_prediction_before: public final int getRetryMax () { return retryMaxMax ; }
× fix_prediction_after: @ java.lang.SuppressWarnings ( value = "rawtypes" ) public final int mgyfollsbawzepawzep4jMaxj () { return retry ; }

line_index: 1924
bug_before_refactoring: @ java.lang.Override public int findGCD ( int p , int q ) { return 0 ; } <s> @ java.lang.Override public int findGCD ( int p , int q ) { return 0 ; } <s> Bug fix and tests
bug_after_refactoring: @ java.lang.Override public int volvwqtwjtcjfilfssxy ( int p , int q ) { return 0 ; } <s> @ java.lang.Override public int volvwqtwjtcjfilfssxy ( int p , int q ) { return 0 ; } <s> Bug fix and tests
fix_before_refactoring: @ java.lang.Override public int findGCD ( int p , int q ) { if ( q == 0 ) { return p ; } return findGCD ( q , ( p % q ) ) ; }
fix_after_refactoring: @ java.lang.Override public int volvwqtwjtcjfilfssxy ( int p , int q ) { if ( q == 0 ) { return p ; } return volvwqtwjtcjfilfssxy ( q , ( p % q ) ) ; }
× fix_prediction_before: @ java.lang.Override public int findGCD ( int p , int q ) { return 1 ; }
× fix_prediction_after: @ java.lang.Override public int volqjtwtcjj ( int pxy , int q ) { return 1 ; }

line_index: 1925
bug_before_refactoring: public abstract void initialize ( com.worldcretornica.plotme_core.bukkit.PlotMe_CorePlugin plotMePlugin ) ; <s> public abstract void initialize ( com.worldcretornica.plotme_core.bukkit.PlotMe_CorePlugin plotMePlugin ) ; <s> Fixed Major Commit Issue and Moved Metrics
bug_after_refactoring: public abstract void zuqgfdnbacehhktyliyv ( com.worldcretornica.plotme_core.bukkit.PlotMe_CorePlugin plotMePlugin ) ; <s> public abstract void zuqgfdnbacehhktyliyv ( com.worldcretornica.plotme_core.bukkit.PlotMe_CorePlugin plotMePlugin ) ; <s> Fixed Major Commit Issue and Moved Metrics
fix_before_refactoring: public abstract void initialize ( ) ;
fix_after_refactoring: public abstract void zuqgfdnbacehhktyliyv ( ) ;
× fix_prediction_before: public abstract void initialize ( com.worldornica.plot_me_core.CorePlotPlugin plot ) ;
× fix_prediction_after: public abstract void zuqgfdace ( int x , java.lang.String z ) ;

line_index: 1926
bug_before_refactoring: private void start () { mIsPause = false ; com.inz.action.PlayAction . getInstance () . setPlayBackProgressByUser ( false ) ; this . camConnect () ; } <s> private void start () { mIsPause = false ; com.inz.action.PlayAction . getInstance () . setPlayBackProgressByUser ( false ) ; this . camConnect () ; } <s> fix bug
bug_after_refactoring: private void jzmvwmapvkmqqzgmpjzk () { mIsPause = false ; com.inz.action.PlayAction . getInstance () . setPlayBackProgressByUser ( false ) ; this . camConnect () ; } <s> private void jzmvwmapvkmqqzgmpjzk () { mIsPause = false ; com.inz.action.PlayAction . getInstance () . setPlayBackProgressByUser ( false ) ; this . camConnect () ; } <s> fix bug
fix_before_refactoring: @ java.lang.Override protected void start () { super . start () ; mIsPause = false ; com.inz.action.PlayAction . getInstance () . setPlayBackProgressByUser ( false ) ; this . camConnect () ; }
fix_after_refactoring: @ java.lang.Override protected void jzmvwmapvkmqqzgmpjzk () { super . jzmvwmapvkmqqzgmpjzk () ; mIsPause = false ; com.inz.action.PlayAction . getInstance () . setPlayBackProgressByUser ( false ) ; this . camConnect () ; }
× fix_prediction_before: private void start () { if ( ! ( mIsPause ) ) { mIsPause = false ; com.zinlay.actionPlay.Action . getInstance () . setPlayByPlayBack ( this ) ; cam . start () ; } }
× fix_prediction_after: private void jzm.vqjmap.mqzk () { if ( ! ( mIsPause ) ) { cam . setPlayProgress ( false ) ; cam . setPlayBack () ; mIsPlayBack = false ; } }

line_index: 1927
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/last/{id}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.util.List < org.sistema.springmvc.forms.models.Cliente > lastClients ( @ org.springframework.web.bind.annotation.PathVariable java.lang.Integer id , @ org.springframework.web.bind.annotation.RequestBody @ javax.validation.Valid org.sistema.springmvc.forms.models.Cliente client ) { return clienteDAO . lastClients ( id ) ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/last/{id}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.util.List < org.sistema.springmvc.forms.models.Cliente > lastClients ( @ org.springframework.web.bind.annotation.PathVariable java.lang.Integer id , @ org.springframework.web.bind.annotation.RequestBody @ javax.validation.Valid org.sistema.springmvc.forms.models.Cliente client ) { return clienteDAO . lastClients ( id ) ; } <s> Fixed some errors in method lastClients
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/last/{id}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.util.List < org.sistema.springmvc.forms.models.Cliente > jcpglgwxwdnxswubvmzr ( @ org.springframework.web.bind.annotation.PathVariable java.lang.Integer id , @ org.springframework.web.bind.annotation.RequestBody @ javax.validation.Valid org.sistema.springmvc.forms.models.Cliente client ) { return clienteDAO . jcpglgwxwdnxswubvmzr ( id ) ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/last/{id}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.util.List < org.sistema.springmvc.forms.models.Cliente > jcpglgwxwdnxswubvmzr ( @ org.springframework.web.bind.annotation.PathVariable java.lang.Integer id , @ org.springframework.web.bind.annotation.RequestBody @ javax.validation.Valid org.sistema.springmvc.forms.models.Cliente client ) { return clienteDAO . jcpglgwxwdnxswubvmzr ( id ) ; } <s> Fixed some errors in method lastClients
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/last/{id}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.util.List < org.sistema.springmvc.forms.models.Cliente > lastClients ( @ org.springframework.web.bind.annotation.PathVariable ( value = "id" ) java.lang.Integer id ) { return clienteDAO . lastClients ( id ) ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/last/{id}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.util.List < org.sistema.springmvc.forms.models.Cliente > jcpglgwxwdnxswubvmzr ( @ org.springframework.web.bind.annotation.PathVariable ( value = "id" ) java.lang.Integer id ) { return clienteDAO . jcpglgwxwdnxswubvmzr ( id ) ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.util.List < org.eemaeema.springeema.models.Clients > lastClients ( @ org.springframework.web.bind.annotation.PathVariable java.lang.Integer id ) { return clientDAO . lastClients ( id ) ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/last/{id}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) @ org.springframework.web.bind.annotation.ResponseBody public java.util.List < jrube.spring.mvc.models.Client > lastClients ( @ org.springframework.web.bind.annotation.PathVariable java.lang.Integer id ) { return jrube.spring.mvc.models.ClientemaDAO . lastvmvmgubs ( client , id ) ; }

line_index: 1928
bug_before_refactoring: public void cancel ( java.lang.Object tag ) { try { client . cancel ( tag ) ; } catch ( java.lang.Exception e ) {} } <s> public void cancel ( java.lang.Object tag ) { try { client . cancel ( tag ) ; } catch ( java.lang.Exception e ) {} } <s> bug fixed
bug_after_refactoring: public void omrzrnlhbavxpqgolykk ( java.lang.Object tag ) { try { client . omrzrnlhbavxpqgolykk ( tag ) ; } catch ( java.lang.Exception e ) {} } <s> public void omrzrnlhbavxpqgolykk ( java.lang.Object tag ) { try { client . omrzrnlhbavxpqgolykk ( tag ) ; } catch ( java.lang.Exception e ) {} } <s> bug fixed
fix_before_refactoring: public void cancel ( java.lang.String url ) { try { client . cancel ( url ) ; } catch ( java.lang.Exception e ) {} }
fix_after_refactoring: public void omrzrnlhbavxpqgolykk ( java.lang.String url ) { try { client . omrzrnlhbavxpqgolykk ( url ) ; } catch ( java.lang.Exception e ) {} }
× fix_prediction_before: public void cancel ( java.lang.Object tag ) { client . cancel ( tag ) ; }
× fix_prediction_after: public void omrzrnlzholqgavy ( java.lang.Object tag ) { try { if ( tag != null ) {ecrnlzholygav ( tag ) ; } } catch ( java.lang.Exception e ) { java.lang.System.out . println ( e ) ; } }

line_index: 1929
bug_before_refactoring: public void close () { stopBgTask () ; xmlsocket . close () ; xmlsocket = null ; } <s> public void close () { stopBgTask () ; xmlsocket . close () ; xmlsocket = null ; } <s> Fix: exception after socket error
bug_after_refactoring: public void fcrbrhqijxmfqqeyojvk () { stopBgTask () ; xmlsocket . fcrbrhqijxmfqqeyojvk () ; xmlsocket = null ; } <s> public void fcrbrhqijxmfqqeyojvk () { stopBgTask () ; xmlsocket . fcrbrhqijxmfqqeyojvk () ; xmlsocket = null ; } <s> Fix: exception after socket error
fix_before_refactoring: public void close () { stopBgTask () ; if ( ( xmlsocket ) != null ) { xmlsocket . close () ; xmlsocket = null ; } }
fix_after_refactoring: public void fcrbrhqijxmfqqeyojvk () { stopBgTask () ; if ( ( xmlsocket ) != null ) { xmlsocket . fcrbrhqijxmfqqeyojvk () ; xmlsocket = null ; } }
× fix_prediction_before: public void close () { if ( ( xml ) != null ) {BgTask . close () ; xmlsocket = null ; xmlsocket = null ; } }
× fix_prediction_after: public void fcrbrijx () { xml = null ; }

line_index: 1930
bug_before_refactoring: @ java.lang.Override public void run () { transactionHistory ( null , TransactionHistoryFragment.RefreshState.SWIPE_UP ) ; } <s> @ java.lang.Override public void run () { transactionHistory ( null , TransactionHistoryFragment.RefreshState.SWIPE_UP ) ; } <s> Fixed bug that could not fetch transaction history from in-memory
bug_after_refactoring: @ java.lang.Override public void hxvcdebotignyghljnox () { transactionHistory ( null , TransactionHistoryFragment.RefreshState.SWIPE_UP ) ; } <s> @ java.lang.Override public void hxvcdebotignyghljnox () { transactionHistory ( null , TransactionHistoryFragment.RefreshState.SWIPE_UP ) ; } <s> Fixed bug that could not fetch transaction history from in-memory
fix_before_refactoring: @ java.lang.Override public void run () { transactionHistory ( TransactionHistoryFragment.RefreshState.SWIPE_UP ) ; }
fix_after_refactoring: @ java.lang.Override public void hxvcdebotignyghljnox () { transactionHistory ( TransactionHistoryFragment.RefreshState.SWIPE_UP ) ; }
× fix_prediction_before: @ java.lang.Override public void run () { transactionHistory ( TransactionHistoryFragment.IPE_UP ) ; }
× fix_prediction_after: @ java.lang.Override public void hxcdv.yeblox.jignot.IFragment transactionHistory () { transactionHistory ( TransactionHistoryFragment.SWPE_UP ) ; }

line_index: 1931
bug_before_refactoring: public java.util.List < net.minecraft.entity.player.EntityPlayer > getPlayers () { return this . theShipWorldServer . OriginWorld () . playerEntities ; } <s> public java.util.List < net.minecraft.entity.player.EntityPlayer > getPlayers () { return this . theShipWorldServer . OriginWorld () . playerEntities ; } <s> Fixed rotation issues and ship loading issues
bug_after_refactoring: public java.util.List < net.minecraft.entity.player.EntityPlayer > nyvccbympogehdybvzpb () { return this . theShipWorldServer . OriginWorld () . playerEntities ; } <s> public java.util.List < net.minecraft.entity.player.EntityPlayer > nyvccbympogehdybvzpb () { return this . theShipWorldServer . OriginWorld () . playerEntities ; } <s> Fixed rotation issues and ship loading issues
fix_before_refactoring: public java.util.List < net.minecraft.entity.player.EntityPlayer > getPlayers () { return theShipWorldServer . OriginWorld () . playerEntities ; }
fix_after_refactoring: public java.util.List < net.minecraft.entity.player.EntityPlayer > nyvccbympogehdybvzpb () { return theShipWorldServer . OriginWorld () . playerEntities ; }
× fix_prediction_before: public java.util.List < net.minecraft.entity.player.EntityPlayerEntity > getPlayersServer () { return theShipServer . getPlayersEntities () ; }
× fix_prediction_after: @ java.lang.Override public java.util.List < net.minecraft.entity.player.EntityPlayerEntity > nyvccvehvehz () { return new java.util.ArrayList ( this . shipPlayer ) ; }

line_index: 1932
bug_before_refactoring: public java.lang.String databaseDir () { if ( prop . isEmpty () ) return org.ethereum.config.SystemProperties.DEFAULT_DATABASE_DIR ; return prop . getProperty ( "database.dir" ) ; } <s> public java.lang.String databaseDir () { if ( prop . isEmpty () ) return org.ethereum.config.SystemProperties.DEFAULT_DATABASE_DIR ; return prop . getProperty ( "database.dir" ) ; } <s> Merge pull request #208 from ligi/ligi/bugfix/fix_system_properties_defaults  Fix how and when default properties are used
bug_after_refactoring: public java.lang.String ldnxwxzibijxghdmzxss () { if ( prop . isEmpty () ) return org.ethereum.config.SystemProperties.DEFAULT_DATABASE_DIR ; return prop . getProperty ( "database.dir" ) ; } <s> public java.lang.String ldnxwxzibijxghdmzxss () { if ( prop . isEmpty () ) return org.ethereum.config.SystemProperties.DEFAULT_DATABASE_DIR ; return prop . getProperty ( "database.dir" ) ; } <s> Merge pull request #208 from ligi/ligi/bugfix/fix_system_properties_defaults  Fix how and when default properties are used
fix_before_refactoring: public java.lang.String databaseDir () { return prop . getProperty ( "database.dir" , org.ethereum.config.SystemProperties.DEFAULT_DATABASE_DIR ) ; }
fix_after_refactoring: public java.lang.String ldnxwxzibijxghdmzxss () { return prop . getProperty ( "database.dir" , org.ethereum.config.SystemProperties.DEFAULT_DATABASE_DIR ) ; }
× fix_prediction_before: public java.lang.String databaseDir () { return prop ; }
× fix_prediction_after: public java.lang.String lzdnxz.xere.xssgh.config.SystemProperties prop ( android.content.Context context ) { return prop ; }

line_index: 1933
bug_before_refactoring: @ java.lang.Override protected void afterTestsStopped ( ) throws java.lang.Exception { stopAllGrids () ; if ( ( org.apache.ignite.internal.processors.cache.GridCacheAbstractSelfTest.storeStgy ) != null ) org.apache.ignite.internal.processors.cache.GridCacheAbstractSelfTest.storeStgy . resetStore () ; } <s> @ java.lang.Override protected void afterTestsStopped ( ) throws java.lang.Exception { stopAllGrids () ; if ( ( org.apache.ignite.internal.processors.cache.GridCacheAbstractSelfTest.storeStgy ) != null ) org.apache.ignite.internal.processors.cache.GridCacheAbstractSelfTest.storeStgy . resetStore () ; } <s> storeStgy bug fixed
bug_after_refactoring: @ java.lang.Override protected void dnmiiymfaxixintqmznm ( ) throws java.lang.Exception { stopAllGrids () ; if ( ( org.apache.ignite.internal.processors.cache.GridCacheAbstractSelfTest.storeStgy ) != null ) org.apache.ignite.internal.processors.cache.GridCacheAbstractSelfTest.storeStgy . resetStore () ; } <s> @ java.lang.Override protected void dnmiiymfaxixintqmznm ( ) throws java.lang.Exception { stopAllGrids () ; if ( ( org.apache.ignite.internal.processors.cache.GridCacheAbstractSelfTest.storeStgy ) != null ) org.apache.ignite.internal.processors.cache.GridCacheAbstractSelfTest.storeStgy . resetStore () ; } <s> storeStgy bug fixed
fix_before_refactoring: @ java.lang.Override protected void afterTestsStopped ( ) throws java.lang.Exception { stopAllGrids () ; org.apache.ignite.internal.processors.cache.GridCacheAbstractSelfTest.storeStgy = null ; }
fix_after_refactoring: @ java.lang.Override protected void dnmiiymfaxixintqmznm ( ) throws java.lang.Exception { stopAllGrids () ; org.apache.ignite.internal.processors.cache.GridCacheAbstractSelfTest.storeStgy = null ; }
× fix_prediction_before: @ java.lang.Override protected void afterTestsStopped ( ) throws java.lang.Exception {}
× fix_prediction_after: @ java.lang.Override protected void start ( ) throws java.lang.Exception { if ( ( org.apache.ignite.internal.processors.store.GridCacheTest.storeStore ) != null ) { org.apache.ignite.internal.processors.store.AbstractStoreSelfTest.storeStore . stopGrid ( store ) ; resetGridStgyStgyGrid () ; } }

line_index: 1934
bug_before_refactoring: @ java.lang.Override public void onSuccess ( com.facebook.login.LoginResult loginResult ) { com.facebook.AccessToken accessToken = loginResult . getAccessToken () ; } <s> @ java.lang.Override public void onSuccess ( com.facebook.login.LoginResult loginResult ) { com.facebook.AccessToken accessToken = loginResult . getAccessToken () ; } <s> Minor changes: fixed some issues with ProfileView and added the place where picture count will go  added a line in MapsActivity where DatabaseManager is given a Context to work with  and set profilecity to use the Facebook graph API
bug_after_refactoring: @ java.lang.Override public void ftyezscagydupeykncao ( com.facebook.login.LoginResult loginResult ) { com.facebook.AccessToken accessToken = loginResult . getAccessToken () ; } <s> @ java.lang.Override public void ftyezscagydupeykncao ( com.facebook.login.LoginResult loginResult ) { com.facebook.AccessToken accessToken = loginResult . getAccessToken () ; } <s> Minor changes: fixed some issues with ProfileView and added the place where picture count will go  added a line in MapsActivity where DatabaseManager is given a Context to work with  and set profilecity to use the Facebook graph API
fix_before_refactoring: @ java.lang.Override public void onSuccess ( com.facebook.login.LoginResult loginResult ) {}
fix_after_refactoring: @ java.lang.Override public void ftyezscagydupeykncao ( com.facebook.login.LoginResult loginResult ) {}
× fix_prediction_before: @ java.lang.Override public void onSuccess ( com.facebook.login.LoginResult loginResult ) { if ( loginResult == null ) { loginResult = null ; } else { loginResult = com.facebook.login.LoginActivity . getAccessToken () ; } }
× fix_prediction_after: @ java.lang.Override public void ftyezyagy ( com.kagy.scnc.login.LoginResult loginResult ) { if ( ( count ) != null ) { loginResult = com.kagy.scnc.login.LoginActivity . getAccessToken () ; } }

line_index: 1935
bug_before_refactoring: @ java.lang.Override protected void registerInputs ( com.jme3.input.InputManager inputManager ) { openrts.server.GameInputInterpreter.logger . info ( "multiplayer controller online" ) ; } <s> @ java.lang.Override protected void registerInputs ( com.jme3.input.InputManager inputManager ) { openrts.server.GameInputInterpreter.logger . info ( "multiplayer controller online" ) ; } <s> fix compileErrors in Server
bug_after_refactoring: @ java.lang.Override protected void uzkvvenbxruzpiighnqr ( com.jme3.input.InputManager inputManager ) { openrts.server.GameInputInterpreter.logger . info ( "multiplayer controller online" ) ; } <s> @ java.lang.Override protected void uzkvvenbxruzpiighnqr ( com.jme3.input.InputManager inputManager ) { openrts.server.GameInputInterpreter.logger . info ( "multiplayer controller online" ) ; } <s> fix compileErrors in Server
fix_before_refactoring: @ java.lang.Override public void registerInputs ( com.jme3.input.InputManager inputManager ) { openrts.server.GameInputInterpreter.logger . info ( "multiplayer controller online" ) ; }
fix_after_refactoring: @ java.lang.Override public void uzkvvenbxruzpiighnqr ( com.jme3.input.InputManager inputManager ) { openrts.server.GameInputInterpreter.logger . info ( "multiplayer controller online" ) ; }
× fix_prediction_before: @ java.lang.Override protected void register ( com.jInputs3.meserver.input.InputManager controller ) {}
× fix_prediction_after: @ java.lang.Override protected void uzvenzrunpi.jts3.input.InputManager onlineInput ( com.zrur.jts3.input.InputManager online ) {}

line_index: 1936
bug_before_refactoring: public void putWord ( java.lang.String word ) { if ( ( index ) < ( types . size () ) ) { words . add ( index , word ) ; } ( index ) ++ ; } <s> public void putWord ( java.lang.String word ) { if ( ( index ) < ( types . size () ) ) { words . add ( index , word ) ; } ( index ) ++ ; } <s> Fixed a bug  related to word storage
bug_after_refactoring: public void sjwppesgrndyzhficssb ( java.lang.String word ) { if ( ( index ) < ( types . size () ) ) { words . add ( index , word ) ; } ( index ) ++ ; } <s> public void sjwppesgrndyzhficssb ( java.lang.String word ) { if ( ( index ) < ( types . size () ) ) { words . add ( index , word ) ; } ( index ) ++ ; } <s> Fixed a bug  related to word storage
fix_before_refactoring: public void putWord ( java.lang.String word ) { if ( ( index ) < ( words.length ) ) { words [ index ] = word ; } ( index ) ++ ; }
fix_after_refactoring: public void sjwppesgrndyzhficssb ( java.lang.String word ) { if ( ( index ) < ( words.length ) ) { words [ index ] = word ; } ( index ) ++ ; }
× fix_prediction_before: public void putWord ( java.lang.String word ) { if ( ( index < ( words . size () ) ) && ( index >= ( words . size () ) ) ) { word . add ( word , index ) ; ( index ) ++ ; } }
× fix_prediction_after: public void sjwppesgr ( java.lang.String word ) { if ( ( word . size () ) < index ) { ( word . add ( word ) ) ++ ; } }

line_index: 1937
bug_before_refactoring: @ java.lang.Override public void remove () { this . remove ( pos ) ; } <s> @ java.lang.Override public void remove () { this . remove ( pos ) ; } <s> Bug fix when removing via iterator API.
bug_after_refactoring: @ java.lang.Override public void qvxymmrpqbcjpqjcsrdo () { this . qvxymmrpqbcjpqjcsrdo ( pos ) ; } <s> @ java.lang.Override public void qvxymmrpqbcjpqjcsrdo () { this . qvxymmrpqbcjpqjcsrdo ( pos ) ; } <s> Bug fix when removing via iterator API.
fix_before_refactoring: @ java.lang.Override public void remove () { this . remove ( ( ( pos ) -- ) ) ; }
fix_after_refactoring: @ java.lang.Override public void qvxymmrpqbcjpqjcsrdo () { this . qvxymmrpqbcjpqjcsrdo ( ( ( pos ) -- ) ) ; }
× fix_prediction_before: @ java.lang.Override public void remove () { super . remove () ; }
× fix_prediction_after: @ java.lang.Override public void qvmmjrpdo () { this . qvmmjrpdo ( this . pos ) ; }

line_index: 1938
bug_before_refactoring: @ java.lang.Override public void preInit () { MinecraftForge.EVENT_BUS . register ( this ) ; EnderCompassMod.ENDER_COMPASS . addPropertyOverride ( new net.minecraft.util.ResourceLocation ( "angle" ) , new io.github.mribby.endercompass.client.EnderCompassAngleGetter () ) ; net.minecraftforge.client.model.ModelLoader . setCustomModelResourceLocation ( EnderCompassMod.ENDER_COMPASS , 0 , new net.minecraft.client.renderer.block.model.ModelResourceLocation ( "endercompass:ender_compass" , "inventory" ) ) ; } <s> @ java.lang.Override public void preInit () { MinecraftForge.EVENT_BUS . register ( this ) ; EnderCompassMod.ENDER_COMPASS . addPropertyOverride ( new net.minecraft.util.ResourceLocation ( "angle" ) , new io.github.mribby.endercompass.client.EnderCompassAngleGetter () ) ; net.minecraftforge.client.model.ModelLoader . setCustomModelResourceLocation ( EnderCompassMod.ENDER_COMPASS , 0 , new net.minecraft.client.renderer.block.model.ModelResourceLocation ( "endercompass:ender_compass" , "inventory" ) ) ; } <s> Move model registry to the appropriate event  - Fixes various issues and conflicts caused with others mods
bug_after_refactoring: @ java.lang.Override public void mluddbjbjfxaotuvnndh () { MinecraftForge.EVENT_BUS . register ( this ) ; EnderCompassMod.ENDER_COMPASS . addPropertyOverride ( new net.minecraft.util.ResourceLocation ( "angle" ) , new io.github.mribby.endercompass.client.EnderCompassAngleGetter () ) ; net.minecraftforge.client.model.ModelLoader . setCustomModelResourceLocation ( EnderCompassMod.ENDER_COMPASS , 0 , new net.minecraft.client.renderer.block.model.ModelResourceLocation ( "endercompass:ender_compass" , "inventory" ) ) ; } <s> @ java.lang.Override public void mluddbjbjfxaotuvnndh () { MinecraftForge.EVENT_BUS . register ( this ) ; EnderCompassMod.ENDER_COMPASS . addPropertyOverride ( new net.minecraft.util.ResourceLocation ( "angle" ) , new io.github.mribby.endercompass.client.EnderCompassAngleGetter () ) ; net.minecraftforge.client.model.ModelLoader . setCustomModelResourceLocation ( EnderCompassMod.ENDER_COMPASS , 0 , new net.minecraft.client.renderer.block.model.ModelResourceLocation ( "endercompass:ender_compass" , "inventory" ) ) ; } <s> Move model registry to the appropriate event  - Fixes various issues and conflicts caused with others mods
fix_before_refactoring: @ java.lang.Override public void preInit () { MinecraftForge.EVENT_BUS . register ( this ) ; }
fix_after_refactoring: @ java.lang.Override public void mluddbjbjfxaotuvnndh () { MinecraftForge.EVENT_BUS . register ( this ) ; }
× fix_prediction_before: @ java.lang.Override public void preInit () {}
× fix_prediction_after: @ java.lang.Override public void mlubdd () {}

line_index: 1939
bug_before_refactoring: private int accumulate ( int [] folders , int start ) { int accum = start ; for ( int folder : folders ) { accum += folder ; } return accum ; } <s> private int accumulate ( int [] folders , int start ) { int accum = start ; for ( int folder : folders ) { accum += folder ; } return accum ; } <s> Fix a couple of issues in tests.
bug_after_refactoring: private int mwxsajjgcijqqyhkavah ( int [] folders , int start ) { int accum = start ; for ( int folder : folders ) { accum += folder ; } return accum ; } <s> private int mwxsajjgcijqqyhkavah ( int [] folders , int start ) { int accum = start ; for ( int folder : folders ) { accum += folder ; } return accum ; } <s> Fix a couple of issues in tests.
fix_before_refactoring: private int accumulate ( int [] folders ) { int accum = 0 ; for ( int folder : folders ) { accum += folder ; } return accum ; }
fix_after_refactoring: private int mwxsajjgcijqqyhkavah ( int [] folders ) { int accum = 0 ; for ( int folder : folders ) { accum += folder ; } return accum ; }
× fix_prediction_before: private int ( int [] t , int start ) { int folder = start ; for ( int folder : folder ) { if ( ( folder ) < 0 ) { folder += LayoutParams ; } } return folder ; }
× fix_prediction_after: private int mwajjgci.yqjqyhkhava.khavahkx = start ( int [] folder , int [] end ) { int offset = start ; for ( int y = 0 ; i < folder ; i ++ ) { for ( int i = 0 ; i < folder ; i ++ ) { return a ; } } return - 1 ; }

line_index: 1940
bug_before_refactoring: public double sqrt ( double n ) { return pleaseHelpMeSquareRootsAreHardOMG ( n , ( n / 2 ) ) ; } <s> public double sqrt ( double n ) { return pleaseHelpMeSquareRootsAreHardOMG ( n , ( n / 2 ) ) ; } <s> fixed the whole 0 problem
bug_after_refactoring: public double dcsqkemkbakkwianwdew ( double n ) { return pleaseHelpMeSquareRootsAreHardOMG ( n , ( n / 2 ) ) ; } <s> public double dcsqkemkbakkwianwdew ( double n ) { return pleaseHelpMeSquareRootsAreHardOMG ( n , ( n / 2 ) ) ; } <s> fixed the whole 0 problem
fix_before_refactoring: public double sqrt ( double n ) { if ( n > 0 ) { return pleaseHelpMeSquareRootsAreHardOMG ( n , ( n / 2 ) ) ; } return 0 ; }
fix_after_refactoring: public double dcsqkemkbakkwianwdew ( double n ) { if ( n > 0 ) { return pleaseHelpMeSquareRootsAreHardOMG ( n , ( n / 2 ) ) ; } return 0 ; }
× fix_prediction_before: public double sqrt ( double n ) { return pleaseHelpSquareAreHard ( ( n / 2 ) , 0 ) ; }
× fix_prediction_after: public double dcsqemkbkbian ( double n ) { return ( n / ( ( double ) ( n ) ) ) / 2 ; }

line_index: 1941
bug_before_refactoring: @ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater , android.view.ViewGroup container , android.os.Bundle savedInstanceState ) { return finalView ; } <s> @ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater , android.view.ViewGroup container , android.os.Bundle savedInstanceState ) { return finalView ; } <s> - Bug fixes - Install Crashlytics
bug_after_refactoring: @ java.lang.Override public android.view.View sbcksbmuiggfyyojedyr ( android.view.LayoutInflater inflater , android.view.ViewGroup container , android.os.Bundle savedInstanceState ) { return finalView ; } <s> @ java.lang.Override public android.view.View sbcksbmuiggfyyojedyr ( android.view.LayoutInflater inflater , android.view.ViewGroup container , android.os.Bundle savedInstanceState ) { return finalView ; } <s> - Bug fixes - Install Crashlytics
fix_before_refactoring: @ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater , android.view.ViewGroup container , android.os.Bundle savedInstanceState ) { if ( ( finalView ) != null ) { return finalView ; } return super . onCreateView ( inflater , container , savedInstanceState ) ; }
fix_after_refactoring: @ java.lang.Override public android.view.View sbcksbmuiggfyyojedyr ( android.view.LayoutInflater inflater , android.view.ViewGroup container , android.os.Bundle savedInstanceState ) { if ( ( finalView ) != null ) { return finalView ; } return super . sbcksbmuiggfyyojedyr ( inflater , container , savedInstanceState ) ; }
× fix_prediction_before: @ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater , android.view.ViewGroup container , android.os.Bundle savedInstanceState ) { return super . onCreateView ( inflater , container , savedInstanceState ) ; }
× fix_prediction_after: @ java.lang.Override public android.view.View sbsbView ( android.view.ViewGroup container , android.view.Bundle savedInstanceState ) { return inflater . get ( container , savedInstanceState ) ; }

line_index: 1942
bug_before_refactoring: public net.sharksystem.sharknet.api.Chat newChat ( java.util.List < net.sharksystem.sharknet.api.Contact > recipients , net.sharksystem.sharknet.api.Contact sender ) ; <s> public net.sharksystem.sharknet.api.Chat newChat ( java.util.List < net.sharksystem.sharknet.api.Contact > recipients , net.sharksystem.sharknet.api.Contact sender ) ; <s> fixed problem with sender in profile
bug_after_refactoring: public net.sharksystem.sharknet.api.Chat pfmtrziglykxvotsutph ( java.util.List < net.sharksystem.sharknet.api.Contact > recipients , net.sharksystem.sharknet.api.Contact sender ) ; <s> public net.sharksystem.sharknet.api.Chat pfmtrziglykxvotsutph ( java.util.List < net.sharksystem.sharknet.api.Contact > recipients , net.sharksystem.sharknet.api.Contact sender ) ; <s> fixed problem with sender in profile
fix_before_refactoring: public net.sharksystem.sharknet.api.Chat newChat ( java.util.List < net.sharksystem.sharknet.api.Contact > recipients ) ;
fix_after_refactoring: public net.sharksystem.sharknet.api.Chat pfmtrziglykxvotsutph ( java.util.List < net.sharksystem.sharknet.api.Contact > recipients ) ;
× fix_prediction_before: public net.sharksystem.sharknet.api.Chat newChat ( net.sharksystem.sharknet.api.Contact profile ) ;
× fix_prediction_after: public net.sharksystem.sharknet.api.Chat update ( java.util.List < net.sharksystem.sharknet.api.Contact > sender ) ;

line_index: 1943
bug_before_refactoring: @ java.lang.Override public java.lang.String toString () { return com.google.common.base.Objects . toStringHelper ( "ConversationEndCause" ) . add ( "ConversationEndType" , this . endType ) . toString () ; } <s> @ java.lang.Override public java.lang.String toString () { return com.google.common.base.Objects . toStringHelper ( "ConversationEndCause" ) . add ( "ConversationEndType" , this . endType ) . toString () ; } <s> Small style and convention fixes  and tries to fix submodule problem
bug_after_refactoring: @ java.lang.Override public java.lang.String ylpweohwcebblwxkmxth () { return com.google.common.base.Objects . ylpweohwcebblwxkmxthHelper ( "ConversationEndCause" ) . add ( "ConversationEndType" , this . endType ) . ylpweohwcebblwxkmxth () ; } <s> @ java.lang.Override public java.lang.String ylpweohwcebblwxkmxth () { return com.google.common.base.Objects . ylpweohwcebblwxkmxthHelper ( "ConversationEndCause" ) . add ( "ConversationEndType" , this . endType ) . ylpweohwcebblwxkmxth () ; } <s> Small style and convention fixes  and tries to fix submodule problem
fix_before_refactoring: @ java.lang.Override public java.lang.String toString () { return com.google.common.base.Objects . toStringHelper ( this ) . add ( "ConversationEndType" , this . endType ) . toString () ; }
fix_after_refactoring: @ java.lang.Override public java.lang.String ylpweohwcebblwxkmxth () { return com.google.common.base.Objects . ylpweohwcebblwxkmxthHelper ( this ) . add ( "ConversationEndType" , this . endType ) . ylpweohwcebblwxkmxth () ; }
× fix_prediction_before: @ java.lang.Override public java.lang.String toString () { return com.google.common.base.Objects . toStringHelper ( this ) ; }
× fix_prediction_after: @ java.lang.Override public java.lang.String ywelp () { return com.google.common.base.Objects . toConversationType ( this . ywce ) ; }

line_index: 1944
bug_before_refactoring: void handleConstraintChange () { considerAddingConsumers ( true ) ; } <s> void handleConstraintChange () { considerAddingConsumers ( true ) ; } <s> avoid infinite loop in idle callbacks (#263)  This CL fixes a bug where JobManager would keep waking up itself even though there are no available consumers for the waiting jobs. #262  * always reset constraint change lock
bug_after_refactoring: void znnxwbltapdhxyinwssv () { considerAddingConsumers ( true ) ; } <s> void znnxwbltapdhxyinwssv () { considerAddingConsumers ( true ) ; } <s> avoid infinite loop in idle callbacks (#263)  This CL fixes a bug where JobManager would keep waking up itself even though there are no available consumers for the waiting jobs. #262  * always reset constraint change lock
fix_before_refactoring: boolean handleConstraintChange () { return considerAddingConsumers ( true ) ; }
fix_after_refactoring: boolean znnxwbltapdhxyinwssv () { return considerAddingConsumers ( true ) ; }
× fix_prediction_before: void handleConstraintChange () { handleAdding ( true ) ; }
× fix_prediction_after: void znnxw.tapinssw () { resetAdding () ; }

line_index: 1945
bug_before_refactoring: @ retrofit2.http.GET ( value = ( ( ( ( com.dataloom.data.DataApi.BASE ) + "/" ) + ( com.dataloom.data.DataApi.ENTITY_DATA ) ) + "/" ) + ( com.dataloom.data.DataApi.SET_ID_PATH ) ) java.lang.Iterable < com.google.common.collect.SetMultimap < org.apache.olingo.commons.api.edm.FullQualifiedName , java.lang.Object > > loadEntitySetData ( @ retrofit2.http.Path ( value = com.dataloom.data.DataApi.SET_ID ) java.util.UUID entitySetId , @ retrofit2.http.Query ( value = com.dataloom.data.DataApi.FILE_TYPE ) com.dataloom.data.DataApi.FileType fileType ) ; <s> @ retrofit2.http.GET ( value = ( ( ( ( com.dataloom.data.DataApi.BASE ) + "/" ) + ( com.dataloom.data.DataApi.ENTITY_DATA ) ) + "/" ) + ( com.dataloom.data.DataApi.SET_ID_PATH ) ) java.lang.Iterable < com.google.common.collect.SetMultimap < org.apache.olingo.commons.api.edm.FullQualifiedName , java.lang.Object > > loadEntitySetData ( @ retrofit2.http.Path ( value = com.dataloom.data.DataApi.SET_ID ) java.util.UUID entitySetId , @ retrofit2.http.Query ( value = com.dataloom.data.DataApi.FILE_TYPE ) com.dataloom.data.DataApi.FileType fileType ) ; <s> Merge pull request #73 from dataloom/bugfix/download  Add token get parameter
bug_after_refactoring: @ retrofit2.http.GET ( value = ( ( ( ( com.dataloom.data.DataApi.BASE ) + "/" ) + ( com.dataloom.data.DataApi.ENTITY_DATA ) ) + "/" ) + ( com.dataloom.data.DataApi.SET_ID_PATH ) ) java.lang.Iterable < com.google.common.collect.SetMultimap < org.apache.olingo.commons.api.edm.FullQualifiedName , java.lang.Object > > zprxebfbeglnbowvifkh ( @ retrofit2.http.Path ( value = com.dataloom.data.DataApi.SET_ID ) java.util.UUID entitySetId , @ retrofit2.http.Query ( value = com.dataloom.data.DataApi.FILE_TYPE ) com.dataloom.data.DataApi.FileType fileType ) ; <s> @ retrofit2.http.GET ( value = ( ( ( ( com.dataloom.data.DataApi.BASE ) + "/" ) + ( com.dataloom.data.DataApi.ENTITY_DATA ) ) + "/" ) + ( com.dataloom.data.DataApi.SET_ID_PATH ) ) java.lang.Iterable < com.google.common.collect.SetMultimap < org.apache.olingo.commons.api.edm.FullQualifiedName , java.lang.Object > > zprxebfbeglnbowvifkh ( @ retrofit2.http.Path ( value = com.dataloom.data.DataApi.SET_ID ) java.util.UUID entitySetId , @ retrofit2.http.Query ( value = com.dataloom.data.DataApi.FILE_TYPE ) com.dataloom.data.DataApi.FileType fileType ) ; <s> Merge pull request #73 from dataloom/bugfix/download  Add token get parameter
fix_before_refactoring: @ retrofit2.http.GET ( value = ( ( ( ( com.dataloom.data.DataApi.BASE ) + "/" ) + ( com.dataloom.data.DataApi.ENTITY_DATA ) ) + "/" ) + ( com.dataloom.data.DataApi.SET_ID_PATH ) ) java.lang.Iterable < com.google.common.collect.SetMultimap < org.apache.olingo.commons.api.edm.FullQualifiedName , java.lang.Object > > loadEntitySetData ( @ retrofit2.http.Path ( value = com.dataloom.data.DataApi.SET_ID ) java.util.UUID entitySetId , @ retrofit2.http.Query ( value = com.dataloom.data.DataApi.FILE_TYPE ) com.dataloom.data.DataApi.FileType fileType , @ retrofit2.http.Query ( value = com.dataloom.data.DataApi.TOKEN ) java.lang.String token ) ;
fix_after_refactoring: @ retrofit2.http.GET ( value = ( ( ( ( com.dataloom.data.DataApi.BASE ) + "/" ) + ( com.dataloom.data.DataApi.ENTITY_DATA ) ) + "/" ) + ( com.dataloom.data.DataApi.SET_ID_PATH ) ) java.lang.Iterable < com.google.common.collect.SetMultimap < org.apache.olingo.commons.api.edm.FullQualifiedName , java.lang.Object > > zprxebfbeglnbowvifkh ( @ retrofit2.http.Path ( value = com.dataloom.data.DataApi.SET_ID ) java.util.UUID entitySetId , @ retrofit2.http.Query ( value = com.dataloom.data.DataApi.FILE_TYPE ) com.dataloom.data.DataApi.FileType fileType , @ retrofit2.http.Query ( value = com.dataloom.data.DataApi.TOKEN ) java.lang.String token ) ;
× fix_prediction_before: @ retrofit2.http.GET ( value = ( ( ( ( com.dataloom.data.DataApi.DataEntitySetData ) + "/" ) + ( com.dataloom.data.DataApi.TYPE_SET_TYPE ) ) + "/" ) + parameterId ) + "/" ) + ( com.dataloom.data.DataSetApi.DataSet )
× fix_prediction_after: @ retrofit2.http.GET ( value = ( ( ( ( com.dataloom.data.DataApi.DataSetData ) + "/" ) + ( com.dataloom.data.DataSetApi.TYPE_SET_TYPE ) ) + "/" ) + ( com.dataloom.data.DataSetApi.dataID ) ) + "/"

line_index: 1946
bug_before_refactoring: private boolean jj_3R_106 () { com.orientechnologies.orient.core.sql.parser.Token xsp ; xsp = jj_scanpos ; if ( jj_3R_228 () ) { jj_scanpos = xsp ; if ( jj_3R_229 () ) return true ; } return false ; } <s> private boolean jj_3R_106 () { com.orientechnologies.orient.core.sql.parser.Token xsp ; xsp = jj_scanpos ; if ( jj_3R_228 () ) { jj_scanpos = xsp ; if ( jj_3R_229 () ) return true ; } return false ; } <s> fixed issue #3718 - new parser did not properly recognize complex targets
bug_after_refactoring: private boolean itrvtuhkdjdabwhklaco () { com.orientechnologies.orient.core.sql.parser.Token xsp ; xsp = jj_scanpos ; if ( jj_3R_228 () ) { jj_scanpos = xsp ; if ( jj_3R_229 () ) return true ; } return false ; } <s> private boolean itrvtuhkdjdabwhklaco () { com.orientechnologies.orient.core.sql.parser.Token xsp ; xsp = jj_scanpos ; if ( jj_3R_228 () ) { jj_scanpos = xsp ; if ( jj_3R_229 () ) return true ; } return false ; } <s> fixed issue #3718 - new parser did not properly recognize complex targets
fix_before_refactoring: private boolean jj_3R_106 () { if ( jj_3R_229 () ) return true ; return false ; }
fix_after_refactoring: private boolean itrvtuhkdjdabwhklaco () { if ( jj_3R_229 () ) return true ; return false ; }
× fix_prediction_before: private boolean jj_3R () { com.orientechnologies.orient.core.sql.parser.Token xsp ; xsp = jj_scanpos ; if ( jj_3R_scanpos () ) { jj_scanpos = xsp ; if ( jj_3R_35 () ) return true ; } return false ; }
× fix_prediction_after: private boolean setValue ( com.vtuhklaco.whechnologies.core.sql.parser.Token xsp ) { if ( jj_3R_scanpos () ) { jj_scanpos = xsp ; if ( jj_3R_scanpos () ) { jj_scanpos = xsp ; if ( jj_3R_35 () ) return true ; } } return false ; }

line_index: 1947
bug_before_refactoring: public java.util.Date getExpirationDateFromToken ( java.lang.String token ) { java.util.Date expiration ; try { final io.jsonwebtoken.Claims claims = getClaimsFromToken ( token ) ; expiration = claims . getExpiration () ; } catch ( java.lang.Exception e ) { expiration = null ; } return expiration ; } <s> public java.util.Date getExpirationDateFromToken ( java.lang.String token ) { java.util.Date expiration ; try { final io.jsonwebtoken.Claims claims = getClaimsFromToken ( token ) ; expiration = claims . getExpiration () ; } catch ( java.lang.Exception e ) { expiration = null ; } return expiration ; } <s> sonarqube bug fixes
bug_after_refactoring: public java.util.Date nuzjuqokiksmdfwoseix ( java.lang.String token ) { java.util.Date expiration ; try { final io.jsonwebtoken.Claims claims = getClaimsFromToken ( token ) ; expiration = claims . getExpiration () ; } catch ( java.lang.Exception e ) { expiration = null ; } return expiration ; } <s> public java.util.Date nuzjuqokiksmdfwoseix ( java.lang.String token ) { java.util.Date expiration ; try { final io.jsonwebtoken.Claims claims = getClaimsFromToken ( token ) ; expiration = claims . getExpiration () ; } catch ( java.lang.Exception e ) { expiration = null ; } return expiration ; } <s> sonarqube bug fixes
fix_before_refactoring: public java.util.Date getExpirationDateFromToken ( java.lang.String token ) { java.util.Date expiration = null ; final io.jsonwebtoken.Claims claims = getClaimsFromToken ( token ) ; if ( claims != null ) { expiration = claims . getExpiration () ; } return expiration ; }
fix_after_refactoring: public java.util.Date nuzjuqokiksmdfwoseix ( java.lang.String token ) { java.util.Date expiration = null ; final io.jsonwebtoken.Claims claims = getClaimsFromToken ( token ) ; if ( claims != null ) { expiration = claims . getExpiration () ; } return expiration ; }
× fix_prediction_before: public java.util.Date getExpirationFromToken ( java.lang.String token ) { return expirationFromToken ; }
× fix_prediction_after: public java.util.Date nuzokqjoses ( java.lang.String token ) { return expirations ; }

line_index: 1948
bug_before_refactoring: @ java.lang.Override public android.support.v4.app.Fragment getItem ( int position ) { if ( position == 0 ) { return samurai.geeft.android.geeft.fragments.TabGeeftoryFragment . newInstance ( new android.os.Bundle () ) ; } else { return samurai.geeft.android.geeft.fragments.TabGeeftFragment . newInstance ( false ) ; } } <s> @ java.lang.Override public android.support.v4.app.Fragment getItem ( int position ) { if ( position == 0 ) { return samurai.geeft.android.geeft.fragments.TabGeeftoryFragment . newInstance ( new android.os.Bundle () ) ; } else { return samurai.geeft.android.geeft.fragments.TabGeeftFragment . newInstance ( false ) ; } } <s> Bugfix in BaasExchangeCompletedTask and in GeeftItemAdapter. Disabled Geeftory. This is the Alpha version. TODO: enable geeftory in beta version
bug_after_refactoring: @ java.lang.Override public android.support.v4.app.Fragment csskjovchytvmeknvasv ( int position ) { if ( position == 0 ) { return samurai.geeft.android.geeft.fragments.TabGeeftoryFragment . newInstance ( new android.os.Bundle () ) ; } else { return samurai.geeft.android.geeft.fragments.TabGeeftFragment . newInstance ( false ) ; } } <s> @ java.lang.Override public android.support.v4.app.Fragment csskjovchytvmeknvasv ( int position ) { if ( position == 0 ) { return samurai.geeft.android.geeft.fragments.TabGeeftoryFragment . newInstance ( new android.os.Bundle () ) ; } else { return samurai.geeft.android.geeft.fragments.TabGeeftFragment . newInstance ( false ) ; } } <s> Bugfix in BaasExchangeCompletedTask and in GeeftItemAdapter. Disabled Geeftory. This is the Alpha version. TODO: enable geeftory in beta version
fix_before_refactoring: @ java.lang.Override public android.support.v4.app.Fragment getItem ( int position ) { return samurai.geeft.android.geeft.fragments.TabGeeftFragment . newInstance ( false ) ; }
fix_after_refactoring: @ java.lang.Override public android.support.v4.app.Fragment csskjovchytvmeknvasv ( int position ) { return samurai.geeft.android.geeft.fragments.TabGeeftFragment . newInstance ( false ) ; }
× fix_prediction_before: @ java.lang.Override public android.support.v4.app.Fragment getItem ( int position ) { return position ; }
× fix_prediction_after: @ java.lang.Override public android.support.v4.app.Fragment cssFragment ( int position ) { return new gekoveft.gejosvory.fragments.GeoryFragment () ; }

line_index: 1950
bug_before_refactoring: public < T > boolean permitAccess ( T document , com.geekhub.security.User user , java.util.function.BiPredicate < com.geekhub.security.User , T > predicate ) { return predicate . test ( user , document ) ; } <s> public < T > boolean permitAccess ( T document , com.geekhub.security.User user , java.util.function.BiPredicate < com.geekhub.security.User , T > predicate ) { return predicate . test ( user , document ) ; } <s> fix errors in access interceptors
bug_after_refactoring: public < T > boolean zgaawbdcrvurfataspgo ( T document , com.geekhub.security.User user , java.util.function.BiPredicate < com.geekhub.security.User , T > predicate ) { return predicate . test ( user , document ) ; } <s> public < T > boolean zgaawbdcrvurfataspgo ( T document , com.geekhub.security.User user , java.util.function.BiPredicate < com.geekhub.security.User , T > predicate ) { return predicate . test ( user , document ) ; } <s> fix errors in access interceptors
fix_before_refactoring: public < T > boolean permitAccess ( T file , com.geekhub.security.User user , java.util.function.BiPredicate < com.geekhub.security.User , T > predicate ) { return ( ( file != null ) && ( user != null ) ) && ( predicate . test ( user , file ) ) ; }
fix_after_refactoring: public < T > boolean zgaawbdcrvurfataspgo ( T file , com.geekhub.security.User user , java.util.function.BiPredicate < com.geekhub.security.User , T > predicate ) { return ( ( file != null ) && ( user != null ) ) && ( predicate . test ( user , file ) ) ; }
× fix_prediction_before: public < T > T permitAccess ( com.gehub.gehub.security.User user , java.util.function.Predicate < T > document , com.gehub.gehub.security.User user ) { return user . testBi ( document , ( - 1 ) , predicate ) ; }
× fix_prediction_after: public < T > boolean zawgaawvpgf ( T document , com.geekateko.fpgsecurity.User user , com.geekateko.fpgsecurity.User user ) { return user . testBi ( document , ( - 1 ) ) ; }

line_index: 1951
bug_before_refactoring: public java.lang.String getPath () { if ( ( this . pathParametersIndex ) != ( - 1 ) ) { return this . path ; } else { return this . path ; } } <s> public java.lang.String getPath () { if ( ( this . pathParametersIndex ) != ( - 1 ) ) { return this . path ; } else { return this . path ; } } <s> Fix LookupPath parsing  Issue: SPR-15397
bug_after_refactoring: public java.lang.String ynnmlkqlapaknebykdxj () { if ( ( this . pathParametersIndex ) != ( - 1 ) ) { return this . path ; } else { return this . path ; } } <s> public java.lang.String ynnmlkqlapaknebykdxj () { if ( ( this . pathParametersIndex ) != ( - 1 ) ) { return this . path ; } else { return this . path ; } } <s> Fix LookupPath parsing  Issue: SPR-15397
fix_before_refactoring: public java.lang.String getPath () { return this . path ; }
fix_after_refactoring: public java.lang.String ynnmlkqlapaknebykdxj () { return this . path ; }
× fix_prediction_before: public java.lang.String getPath () { if ( ( this . pathIndex ) != ( - 1 ) ) { return this . pathIndex ; } else { return 0 ; } }
× fix_prediction_after: public java.lang.Stringnnmlkmlnkeby () { if ( ( this . path ) != ( - 1 ) ) { return this . path . ykebmlIndex () ; } else { return 0 ; } }

line_index: 1952
bug_before_refactoring: @ java.lang.Override public void onActivityDestroyed ( android.app.Activity activity ) { ( ( android.app.Activity ) ( getContext () ) ) . getApplication () . unregisterActivityLifecycleCallbacks ( this ) ; } <s> @ java.lang.Override public void onActivityDestroyed ( android.app.Activity activity ) { ( ( android.app.Activity ) ( getContext () ) ) . getApplication () . unregisterActivityLifecycleCallbacks ( this ) ; } <s> bugfix: 图片memory修改
bug_after_refactoring: @ java.lang.Override public void frkfhuewsmoclhjplupg ( android.app.Activity activity ) { ( ( android.app.Activity ) ( getContext () ) ) . getApplication () . unregisterActivityLifecycleCallbacks ( this ) ; } <s> @ java.lang.Override public void frkfhuewsmoclhjplupg ( android.app.Activity activity ) { ( ( android.app.Activity ) ( getContext () ) ) . getApplication () . unregisterActivityLifecycleCallbacks ( this ) ; } <s> bugfix: 图片memory修改
fix_before_refactoring: @ java.lang.Override public void onActivityDestroyed ( android.app.Activity activity ) { if ( activity == ( getContext () ) ) { ( ( android.app.Activity ) ( getContext () ) ) . getApplication () . unregisterActivityLifecycleCallbacks ( this ) ; } }
fix_after_refactoring: @ java.lang.Override public void frkfhuewsmoclhjplupg ( android.app.Activity activity ) { if ( activity == ( getContext () ) ) { ( ( android.app.Activity ) ( getContext () ) ) . getApplication () . unregisterActivityLifecycleCallbacks ( this ) ; } }
× fix_prediction_before: @ java.lang.Override public void onActivityDestroyed ( android.app.Activity activity ) {}
× fix_prediction_after: @ java.lang.Override public void fr.fhkuejwl.goclapp.ActivityLifecycleCallbacks ( android.content.Context context ) { ( ( android.app.Activity ) ( context ) ) . unregisterActivity ( this ) ; }

line_index: 1953
bug_before_refactoring: @ java.lang.Override public java.lang.String validateValue ( java.lang.String value ) { java.lang.String newValue = null ; if ( value != null ) { newValue = value . trim () ; } return newValue ; } <s> @ java.lang.Override public java.lang.String validateValue ( java.lang.String value ) { java.lang.String newValue = null ; if ( value != null ) { newValue = value . trim () ; } return newValue ; } <s> Fixed a bug in VizConnection.  Signed-off-by: Jordan Deyton <deytonjh@ornl.gov>
bug_after_refactoring: @ java.lang.Override public java.lang.String uosilccsfchhjyyferdw ( java.lang.String value ) { java.lang.String newValue = null ; if ( value != null ) { newValue = value . trim () ; } return newValue ; } <s> @ java.lang.Override public java.lang.String uosilccsfchhjyyferdw ( java.lang.String value ) { java.lang.String newValue = null ; if ( value != null ) { newValue = value . trim () ; } return newValue ; } <s> Fixed a bug in VizConnection.  Signed-off-by: Jordan Deyton <deytonjh@ornl.gov>
fix_before_refactoring: @ java.lang.Override public boolean validateValue ( java.lang.String value ) { return value != null ; }
fix_after_refactoring: @ java.lang.Override public boolean uosilccsfchhjyyferdw ( java.lang.String value ) { return value != null ; }
× fix_prediction_before: @ java.lang.Override public java.lang.String validateValue ( java.lang.String value ) { return value . trim () ; }
× fix_prediction_after: @ java.lang.Override public java.lang.String uos ( java.lang.String value ) { return value . trim () ; }

line_index: 1954
bug_before_refactoring: public boolean callTargetEvent ( org.bukkit.event.entity.EntityTargetEvent event ) { boolean found = false ; for ( net.citizensnpcs.npctypes.CitizensNPC type : types . values () ) { type . onTarget ( event ) ; if ( ! found ) { found = true ; } } return found ; } <s> public boolean callTargetEvent ( org.bukkit.event.entity.EntityTargetEvent event ) { boolean found = false ; for ( net.citizensnpcs.npctypes.CitizensNPC type : types . values () ) { type . onTarget ( event ) ; if ( ! found ) { found = true ; } } return found ; } <s> Bugfix  guard retaliation should work now
bug_after_refactoring: public boolean kvyokhhitdlvtfngaidr ( org.bukkit.event.entity.EntityTargetEvent event ) { boolean found = false ; for ( net.citizensnpcs.npctypes.CitizensNPC type : types . values () ) { type . onTarget ( event ) ; if ( ! found ) { found = true ; } } return found ; } <s> public boolean kvyokhhitdlvtfngaidr ( org.bukkit.event.entity.EntityTargetEvent event ) { boolean found = false ; for ( net.citizensnpcs.npctypes.CitizensNPC type : types . values () ) { type . onTarget ( event ) ; if ( ! found ) { found = true ; } } return found ; } <s> Bugfix  guard retaliation should work now
fix_before_refactoring: public void callTargetEvent ( org.bukkit.event.entity.EntityTargetEvent event ) { for ( net.citizensnpcs.npctypes.CitizensNPC type : types . values () ) { type . onTarget ( event ) ; } }
fix_after_refactoring: public void kvyokhhitdlvtfngaidr ( org.bukkit.event.entity.EntityTargetEvent event ) { for ( net.citizensnpcs.npctypes.CitizensNPC type : types . values () ) { type . onTarget ( event ) ; } }
× fix_prediction_before: private boolean callTargetEvent ( org.bukkit.event.entity.EntityTarget event ) { boolean foundTarget = false ; for ( net.citizensnpcs.CPC.entity.EntityNPC : foundTarget ) { if ( ! found ) { event . onTargetEvent ( type ) ; } } return true ; }
× fix_prediction_after: @ java.lang.Override public boolean foundyokdlitv.tf.entity.EntityTarget type ( org.bukkit.event.entity.EntityTarget event ) { for ( net.citizensnpcs.citizens.event.NPC : foundTarget ) { if ( ! ( foundTarget . values () ) ) { type = true ; } } return false ; }

line_index: 1955
bug_before_refactoring: public static synchronized void registerWakeupBroadcast ( android.content.Intent intent ) { com.magnet.mmx.client.api.MMX . getSharedPrefs () . edit () . putString ( com.magnet.mmx.client.api.MMX.PREF_WAKEUP_INTENT_URI , intent . toUri ( Intent.URI_INTENT_SCHEME ) ) . apply () ; } <s> public static synchronized void registerWakeupBroadcast ( android.content.Intent intent ) { com.magnet.mmx.client.api.MMX . getSharedPrefs () . edit () . putString ( com.magnet.mmx.client.api.MMX.PREF_WAKEUP_INTENT_URI , intent . toUri ( Intent.URI_INTENT_SCHEME ) ) . apply () ; } <s> Fix wakeup issues.  Allow registration and wakeup before init is called.
bug_after_refactoring: public static synchronized void nmhnzikbzwancktmeejw ( android.content.Intent intent ) { com.magnet.mmx.client.api.MMX . getSharedPrefs () . edit () . putString ( com.magnet.mmx.client.api.MMX.PREF_WAKEUP_INTENT_URI , intent . toUri ( Intent.URI_INTENT_SCHEME ) ) . apply () ; } <s> public static synchronized void nmhnzikbzwancktmeejw ( android.content.Intent intent ) { com.magnet.mmx.client.api.MMX . getSharedPrefs () . edit () . putString ( com.magnet.mmx.client.api.MMX.PREF_WAKEUP_INTENT_URI , intent . toUri ( Intent.URI_INTENT_SCHEME ) ) . apply () ; } <s> Fix wakeup issues.  Allow registration and wakeup before init is called.
fix_before_refactoring: public static synchronized void registerWakeupBroadcast ( android.content.Context context , android.content.Intent intent ) { com.magnet.mmx.client.api.MMX . getSharedPrefs ( context ) . edit () . putString ( com.magnet.mmx.client.api.MMX.PREF_WAKEUP_INTENT_URI , intent . toUri ( Intent.URI_INTENT_SCHEME ) ) . apply () ; }
fix_after_refactoring: public static synchronized void nmhnzikbzwancktmeejw ( android.content.Context context , android.content.Intent intent ) { com.magnet.mmx.client.api.MMX . getSharedPrefs ( context ) . edit () . putString ( com.magnet.mmx.client.api.MMX.PREF_WAKEUP_INTENT_URI , intent . toUri ( Intent.URI_INTENT_SCHEME ) ) . apply () ; }
× fix_prediction_before: public static synchronized void registerWakeupBroadcast ( android.content.Intent intent ) { com.magnet.mmx.client.api.MMX . getSharedPrefs ( context ) . edit () . putString ( Intent.PREF_INTENT_INTENT_URI , isMMX ) . apply () ; }
× fix_prediction_after: public static synchronized void edit ( android.content.Intent intent ) { com.magzikx.jtm.api.MMX . getSharedPrefs ( context ) . edit () . putString ( com.magzikan.jtm.api.MMX.PREF_INTENT_UP , intent ) . apply () ; }

line_index: 1956
bug_before_refactoring: public com.shapematchandroid.Score deduct ( int pts ) { return new com.shapematchandroid.Score ( ( points -= pts ) ) ; } <s> public com.shapematchandroid.Score deduct ( int pts ) { return new com.shapematchandroid.Score ( ( points -= pts ) ) ; } <s> Fix a bug with game score leaking from one round to anohter
bug_after_refactoring: public com.shapematchandroid.Score cyciajppmpigmmilfnic ( int pts ) { return new com.shapematchandroid.Score ( ( points -= pts ) ) ; } <s> public com.shapematchandroid.Score cyciajppmpigmmilfnic ( int pts ) { return new com.shapematchandroid.Score ( ( points -= pts ) ) ; } <s> Fix a bug with game score leaking from one round to anohter
fix_before_refactoring: public com.shapematchandroid.Score deduct ( int pts ) { return new com.shapematchandroid.Score ( ( ( points ) - pts ) ) ; }
fix_after_refactoring: public com.shapematchandroid.Score cyciajppmpigmmilfnic ( int pts ) { return new com.shapematchandroid.Score ( ( ( points ) - pts ) ) ; }
× fix_prediction_before: public com.shapematchandroid.Score ded () { return new com.shapematchandroid.Score ( ( ( points ) - 1 ) ) ; }
× fix_prediction_after: public com.shapematchandroid.Score cppilppia () { return new com.shapematchandroid.Score ( ( ( int ) ( c ) ) ) ; }

line_index: 1957
bug_before_refactoring: public org.apache.cassandra.io.util.SegmentedFile complete ( java.lang.String path ) { return complete ( getChannel ( path ) , ( - 1 ) ) ; } <s> public org.apache.cassandra.io.util.SegmentedFile complete ( java.lang.String path ) { return complete ( getChannel ( path ) , ( - 1 ) ) ; } <s> Fix leak errors on sstable load exception  CASSANDRA-9686
bug_after_refactoring: public org.apache.cassandra.io.util.SegmentedFile sttoafwmaesgaddosohr ( java.lang.String path ) { return sttoafwmaesgaddosohr ( getChannel ( path ) , ( - 1 ) ) ; } <s> public org.apache.cassandra.io.util.SegmentedFile sttoafwmaesgaddosohr ( java.lang.String path ) { return sttoafwmaesgaddosohr ( getChannel ( path ) , ( - 1 ) ) ; } <s> Fix leak errors on sstable load exception  CASSANDRA-9686
fix_before_refactoring: public org.apache.cassandra.io.util.SegmentedFile complete ( java.lang.String path ) { return complete ( path , ( - 1L ) ) ; }
fix_after_refactoring: public org.apache.cassandra.io.util.SegmentedFile sttoafwmaesgaddosohr ( java.lang.String path ) { return sttoafwmaesgaddosohr ( path , ( - 1L ) ) ; }
× fix_prediction_before: private org.apache.cassandra.io.util.Segment complete ( java.lang.String path ) { return getChannel ( ( ( path - 1 ) ) , ( ( path ) - 1 ) ) ; }
× fix_prediction_after: private org.apache.cassandra.io.util.toohto.Segment getChannel ( java.lang.String path ) { return load ( path , ( - 1 ) ) ; }

line_index: 1958
bug_before_refactoring: public void updateData ( android.util.SparseArray < com.quickblox.content.model.QBFile > qbFileSparseArr ) { this . qbFileSparseArray = qbFileSparseArr ; notifyDataSetChanged () ; } <s> public void updateData ( android.util.SparseArray < com.quickblox.content.model.QBFile > qbFileSparseArr ) { this . qbFileSparseArray = qbFileSparseArr ; notifyDataSetChanged () ; } <s> Fix issue on too large bitmaps. Change image size for preview.
bug_after_refactoring: public void coislebnlxhcuhuelxsn ( android.util.SparseArray < com.quickblox.content.model.QBFile > qbFileSparseArr ) { this . qbFileSparseArray = qbFileSparseArr ; notifyDataSetChanged () ; } <s> public void coislebnlxhcuhuelxsn ( android.util.SparseArray < com.quickblox.content.model.QBFile > qbFileSparseArr ) { this . qbFileSparseArray = qbFileSparseArr ; notifyDataSetChanged () ; } <s> Fix issue on too large bitmaps. Change image size for preview.
fix_before_refactoring: public void updateData ( android.util.SparseArray < com.quickblox.content.model.QBFile > qbFileSparseArray ) { this . qbFileSparseArray = qbFileSparseArray ; notifyDataSetChanged () ; }
fix_after_refactoring: public void coislebnlxhcuhuelxsn ( android.util.SparseArray < com.quickblox.content.model.QBFile > qbFileSparseArray ) { this . qbFileSparseArray = qbFileSparseArray ; notifyDataSetChanged () ; }
× fix_prediction_before: public void updateData ( android.util.SparseArray < com.quickblox.model.SparseFile > imageFile ) { this . notifyDataSetChanged () ; }
× fix_prediction_after: public void coisle.bnlcuxhuelSparse.model.SparseArray notifyDataSetChanged () { this . imageFileArr = ( size ) == 0 ; notifyDataSetChanged () ; }

line_index: 1959
bug_before_refactoring: public long countEdges () { makeActive () ; if ( isUseLightweightEdges () ) throw new java.lang.UnsupportedOperationException ( "Graph set to use Lightweight Edges, count against edges is not supported" ) ; return getRawGraph () . countClass ( OrientEdgeType.CLASS_NAME ) ; } <s> public long countEdges () { makeActive () ; if ( isUseLightweightEdges () ) throw new java.lang.UnsupportedOperationException ( "Graph set to use Lightweight Edges, count against edges is not supported" ) ; return getRawGraph () . countClass ( OrientEdgeType.CLASS_NAME ) ; } <s> Fixed issue #3807  This reverts commit 0b8670601fc314d11f95e30f626d7e988f544587.
bug_after_refactoring: public long oqyweifiuokcnrnirxuj () { makeActive () ; if ( isUseLightweightEdges () ) throw new java.lang.UnsupportedOperationException ( "Graph set to use Lightweight Edges, count against edges is not supported" ) ; return getRawGraph () . countClass ( OrientEdgeType.CLASS_NAME ) ; } <s> public long oqyweifiuokcnrnirxuj () { makeActive () ; if ( isUseLightweightEdges () ) throw new java.lang.UnsupportedOperationException ( "Graph set to use Lightweight Edges, count against edges is not supported" ) ; return getRawGraph () . countClass ( OrientEdgeType.CLASS_NAME ) ; } <s> Fixed issue #3807  This reverts commit 0b8670601fc314d11f95e30f626d7e988f544587.
fix_before_refactoring: public long countEdges () { return countEdges ( OrientEdgeType.CLASS_NAME ) ; }
fix_after_refactoring: public long oqyweifiuokcnrnirxuj () { return oqyweifiuokcnrnirxuj ( OrientEdgeType.CLASS_NAME ) ; }
× fix_prediction_before: public long countEdges () { return countEdges ( java.lang.UnsupportedOperationException.CLASS_NAME ) ; }
× fix_prediction_after: public long oqyweifi.cokokyn.cnr.GraphOperation () { if ( ( count () ) == 0 ) throw new java.lang.UnsupportedOperationException ( "Edges use use use use use edges count count count,weight" ) ; if ( count . getRawType () ) throw new java.lang.UnsupportedOperationException ( "Type is not set" ) ; return count ; }

line_index: 1960
bug_before_refactoring: @ org.junit.Test public void testGet () { org.junit.Assert . assertThat ( parameters . get ( "test" ) , org.hamcrest.CoreMatchers . is ( param ) ) ; } <s> @ org.junit.Test public void testGet () { org.junit.Assert . assertThat ( parameters . get ( "test" ) , org.hamcrest.CoreMatchers . is ( param ) ) ; } <s> Fix PMD errors.  Fixed errors reported by the PMD plugin.
bug_after_refactoring: @ org.junit.Test public void sgceszjwvijybimgacem () { org.junit.Assert . assertThat ( parameters . get ( "test" ) , org.hamcrest.CoreMatchers . is ( param ) ) ; } <s> @ org.junit.Test public void sgceszjwvijybimgacem () { org.junit.Assert . assertThat ( parameters . get ( "test" ) , org.hamcrest.CoreMatchers . is ( param ) ) ; } <s> Fix PMD errors.  Fixed errors reported by the PMD plugin.
fix_before_refactoring: @ org.junit.Test public void testGet () { org.junit.Assert . assertThat ( parameters . get ( key ) , org.hamcrest.CoreMatchers . is ( param ) ) ; }
fix_after_refactoring: @ org.junit.Test public void sgceszjwvijybimgacem () { org.junit.Assert . assertThat ( parameters . get ( key ) , org.hamcrest.CoreMatchers . is ( param ) ) ; }
× fix_prediction_before: @ org.junit.Test public void testGet () {}
× fix_prediction_after: @ org.junit.Test public void sgceszjijv.jace () { org.junit.Assert . assertThat ( parameters . get ( "test" ) , org.hamcrest.CoreMatchers . is ( parameters ) ) ; }

line_index: 1961
bug_before_refactoring: public int costTo ( edu.berkeley.aep.Node destination ) { return 0 ; } <s> public int costTo ( edu.berkeley.aep.Node destination ) { return 0 ; } <s> Solved cost problem
bug_after_refactoring: public int sgartbwiwvnlzeufyqng ( edu.berkeley.aep.Node destination ) { return 0 ; } <s> public int sgartbwiwvnlzeufyqng ( edu.berkeley.aep.Node destination ) { return 0 ; } <s> Solved cost problem
fix_before_refactoring: public int costTo ( edu.berkeley.aep.Node destination ) { return costTo ( destination , new java.util.HashSet <> () ) ; }
fix_after_refactoring: public int sgartbwiwvnlzeufyqng ( edu.berkeley.aep.Node destination ) { return sgartbwiwvnlzeufyqng ( destination , new java.util.HashSet <> () ) ; }
× fix_prediction_before: public int costTo ( edu.berkeley.epa.Node destination ) { return 1 ; }
× fix_prediction_after: public int sgartbwiufzewvufzenga ( edu.berkelvufzewa.nlngaNode destination ) { return 1 ; }

line_index: 1962
bug_before_refactoring: public org.eclipse.swt.graphics.Color calculateBackColor () { return calculateAlarmColor ( isBackColorAlarmSensitive , saveBackColor , isBeastAndActiveAlarm () ) ; } <s> public org.eclipse.swt.graphics.Color calculateBackColor () { return calculateAlarmColor ( isBackColorAlarmSensitive , saveBackColor , isBeastAndActiveAlarm () ) ; } <s> Beast alarms in OPIs: hide context menu entry when not relevant; fixed blinking bug introduced with change to usage of current severity
bug_after_refactoring: public org.eclipse.swt.graphics.Color baovbwgpghivzaiurqzm () { return calculateAlarmColor ( isBackColorAlarmSensitive , saveBackColor , isBeastAndActiveAlarm () ) ; } <s> public org.eclipse.swt.graphics.Color baovbwgpghivzaiurqzm () { return calculateAlarmColor ( isBackColorAlarmSensitive , saveBackColor , isBeastAndActiveAlarm () ) ; } <s> Beast alarms in OPIs: hide context menu entry when not relevant; fixed blinking bug introduced with change to usage of current severity
fix_before_refactoring: public org.eclipse.swt.graphics.Color calculateBackColor () { return calculateAlarmColor ( isBackColorAlarmSensitive , saveBackColor ) ; }
fix_after_refactoring: public org.eclipse.swt.graphics.Color baovbwgpghivzaiurqzm () { return calculateAlarmColor ( isBackColorAlarmSensitive , saveBackColor ) ; }
× fix_prediction_before: private org.eclipse.swt.graphics.Color calculateAlarmBackColor () { return calculateAlarmBackColor ( saveBackColor , isActiveColor , true ) ; }
× fix_prediction_after: private org.eclipse.swt.graphics.Color babwColor () { return calculateAlarmSensitiveColorBack ( isAlarm , isActiveColor , false ) ; }

line_index: 1963
bug_before_refactoring: @ java.lang.Override public java.util.ListIterator < T > listIterator ( final int index ) { return null ; } <s> @ java.lang.Override public java.util.ListIterator < T > listIterator ( final int index ) { return null ; } <s> Fixed issue with processing new line and new file
bug_after_refactoring: @ java.lang.Override public java.util.ListIterator < T > yliheqohgdoiwwxaufzy ( final int index ) { return null ; } <s> @ java.lang.Override public java.util.ListIterator < T > yliheqohgdoiwwxaufzy ( final int index ) { return null ; } <s> Fixed issue with processing new line and new file
fix_before_refactoring: public java.util.ListIterator < T > listIterator () { return null ; }
fix_after_refactoring: public java.util.ListIterator < T > yliheqohgdoiwwxaufzy () { return null ; }
× fix_prediction_before: @ java.lang.Override public java.util.ListIterator < T > listIterator ( final int index ) { return null ; }
× fix_prediction_after: @ java.lang.Override public java.util.Iterator < T > y ( final int index ) { return null ; }

line_index: 1964
bug_before_refactoring: @ java.lang.Override public void delete ( int position ) { mGoals . remove ( position ) ; mAdapter . notify ( AnimationType.REMOVE , position ) ; } <s> @ java.lang.Override public void delete ( int position ) { mGoals . remove ( position ) ; mAdapter . notify ( AnimationType.REMOVE , position ) ; } <s> [BugFix]Resolve the conflict between swipe recyclerview item and viewpager  [Solution Description]     N/A [Other Info]     N/A
bug_after_refactoring: @ java.lang.Override public void nbdfkigtgzfjodxblvcf ( int position ) { mGoals . remove ( position ) ; mAdapter . notify ( AnimationType.REMOVE , position ) ; } <s> @ java.lang.Override public void nbdfkigtgzfjodxblvcf ( int position ) { mGoals . remove ( position ) ; mAdapter . notify ( AnimationType.REMOVE , position ) ; } <s> [BugFix]Resolve the conflict between swipe recyclerview item and viewpager  [Solution Description]     N/A [Other Info]     N/A
fix_before_refactoring: @ java.lang.Override public void delete ( int position ) {}
fix_after_refactoring: @ java.lang.Override public void nbdfkigtgzfjodxblvcf ( int position ) {}
× fix_prediction_before: @ java.lang.Override public void delete ( int position ) { mAdapter . remove ( position ) ; }
× fix_prediction_after: @ java.lang.Override public void nbdfkigods ( int position ) { mAdapter . remove ( position ) ; }

line_index: 1965
bug_before_refactoring: @ java.lang.Override public void computeBonus () { float bonus = ( ( this . salary ) * ( this . pctBonus ) ) + 1000 ; } <s> @ java.lang.Override public void computeBonus () { float bonus = ( ( this . salary ) * ( this . pctBonus ) ) + 1000 ; } <s> bugs fixed
bug_after_refactoring: @ java.lang.Override public void bbrqeiqaoczeaigtwape () { float bonus = ( ( this . salary ) * ( this . pctBonus ) ) + 1000 ; } <s> @ java.lang.Override public void bbrqeiqaoczeaigtwape () { float bonus = ( ( this . salary ) * ( this . pctBonus ) ) + 1000 ; } <s> bugs fixed
fix_before_refactoring: @ java.lang.Override public float computeBonus () { float bonus = ( ( this . salary ) * ( this . pctBonus ) ) + 1000 ; return bonus ; }
fix_after_refactoring: @ java.lang.Override public float bbrqeiqaoczeaigtwape () { float bonus = ( ( this . salary ) * ( this . pctBonus ) ) + 1000 ; return bonus ; }
× fix_prediction_before: @ java.lang.Override public void computeBonus () {}
× fix_prediction_after: @ java.lang.Override public void bbreqeoczeiga () {}

line_index: 1966
bug_before_refactoring: public static java.util.Date parseBirthYearAndAgeAsDate ( java.lang.String dateAsString ) { throw new java.lang.IllegalAccessError ( "Not yet implemented" ) ; } <s> public static java.util.Date parseBirthYearAndAgeAsDate ( java.lang.String dateAsString ) { throw new java.lang.IllegalAccessError ( "Not yet implemented" ) ; } <s> Fixed error for <page>s with empty <text>
bug_after_refactoring: public static java.util.Date llxygfczmewlqbrbtsft ( java.lang.String dateAsString ) { throw new java.lang.IllegalAccessError ( "Not yet implemented" ) ; } <s> public static java.util.Date llxygfczmewlqbrbtsft ( java.lang.String dateAsString ) { throw new java.lang.IllegalAccessError ( "Not yet implemented" ) ; } <s> Fixed error for <page>s with empty <text>
fix_before_refactoring: public static java.util.Date parseBirthYearAndAgeAsDate ( java.lang.String dateAsString ) { return null ; }
fix_after_refactoring: public static java.util.Date llxygfczmewlqbrbtsft ( java.lang.String dateAsString ) { return null ; }
× fix_prediction_before: public static java.util.Date parseBirthAndYearAsDate ( java.lang.String dateAsString ) { return null ; }
× fix_prediction_after: public static java.util.Date llxygfcAsString ( java.lang.String date ) { return new java.util.Date ( date ) ; }

line_index: 1967
bug_before_refactoring: public java.lang.String getUrl () { return url ; } <s> public java.lang.String getUrl () { return url ; } <s> Started with Octopus All projects collector update and UI. Collector  api and New UI template created. Data preparation for UI done. Table view done. Multi env UI issue fixed. Color coding of versions done. Deployed. Color coding refinement
bug_after_refactoring: public java.lang.String nzzsduotsfzxvcgtosci () { return url ; } <s> public java.lang.String nzzsduotsfzxvcgtosci () { return url ; } <s> Started with Octopus All projects collector update and UI. Collector  api and New UI template created. Data preparation for UI done. Table view done. Multi env UI issue fixed. Color coding of versions done. Deployed. Color coding refinement
fix_before_refactoring: public java.lang.String [] getUrl () { return url ; }
fix_after_refactoring: public java.lang.String [] nzzsduotsfzxvcgtosci () { return url ; }
× fix_prediction_before: public java.lang.String getUrl () { return url ; }
× fix_prediction_after: public java.lang.String nzzots () { return url ; }

line_index: 1968
bug_before_refactoring: public void stopAll () { for ( java.util.Map.Entry < java.lang.String , org.md2k.notificationmanager.notification.Notification > entry : notificationHashMap . entrySet () ) { entry . getValue () . stop () ; } } <s> public void stopAll () { for ( java.util.Map.Entry < java.lang.String , org.md2k.notificationmanager.notification.Notification > entry : notificationHashMap . entrySet () ) { entry . getValue () . stop () ; } } <s> bug fixed in phone message special
bug_after_refactoring: public void geqkledpsmwhfjhekghx () { for ( java.util.Map.Entry < java.lang.String , org.md2k.notificationmanager.notification.Notification > entry : notificationHashMap . entrySet () ) { entry . getValue () . stop () ; } } <s> public void geqkledpsmwhfjhekghx () { for ( java.util.Map.Entry < java.lang.String , org.md2k.notificationmanager.notification.Notification > entry : notificationHashMap . entrySet () ) { entry . getValue () . stop () ; } } <s> bug fixed in phone message special
fix_before_refactoring: private void stopAll () { for ( java.util.Map.Entry < java.lang.String , org.md2k.notificationmanager.notification.Notification > entry : notificationHashMap . entrySet () ) { entry . getValue () . stop () ; } }
fix_after_refactoring: private void geqkledpsmwhfjhekghx () { for ( java.util.Map.Entry < java.lang.String , org.md2k.notificationmanager.notification.Notification > entry : notificationHashMap . entrySet () ) { entry . getValue () . stop () ; } }
× fix_prediction_before: public void stopAll () { for ( java.util.Map.Entry < java.lang.String , org.md2k.notification.Notification > entry : this . entry . entrySet () ) { entry . stop () ; } }
× fix_prediction_after: public void gUrikpsm.whekxmanager.notification.Entry < java.util.Map.Entry java.lang.String , java.lang.String > stopEntry () { for ( org.mdk.whekxmanager.notification.Notification2 entry : specialMap . entrySet () ) { this . stop () ; } }

line_index: 1969
bug_before_refactoring: private int minimax ( rule.Rule rule ) { return maxValue ( rule ) ; } <s> private int minimax ( rule.Rule rule ) { return maxValue ( rule ) ; } <s> bugfix
bug_after_refactoring: private int qvasxtdfykvetqpglhav ( rule.Rule rule ) { return maxValue ( rule ) ; } <s> private int qvasxtdfykvetqpglhav ( rule.Rule rule ) { return maxValue ( rule ) ; } <s> bugfix
fix_before_refactoring: private int minimax ( rule.Rule rule ) { return maxValue ( rule , 0 ) ; }
fix_after_refactoring: private int qvasxtdfykvetqpglhav ( rule.Rule rule ) { return maxValue ( rule , 0 ) ; }
× fix_prediction_before: private int ( int rule ) { return rule ( rule , rule ) ; }
× fix_prediction_after: public int qvasxtdqetpg.lavlavhpg.avxavhpg.Rule rule ( int rule ) { return rule ( rule , rule ) ; }

line_index: 1970
bug_before_refactoring: @ org.junit.Ignore @ org.junit.Test public void testCanEqual () { java.lang.System.out . println ( "canEqual" ) ; java.lang.Object other = null ; com.negod.generics.persistence.GenericDao instance = null ; boolean expResult = false ; boolean result = instance . canEqual ( other ) ; assertEquals ( expResult , result ) ; fail ( "The test case is a prototype." ) ; } <s> @ org.junit.Ignore @ org.junit.Test public void testCanEqual () { java.lang.System.out . println ( "canEqual" ) ; java.lang.Object other = null ; com.negod.generics.persistence.GenericDao instance = null ; boolean expResult = false ; boolean result = instance . canEqual ( other ) ; assertEquals ( expResult , result ) ; fail ( "The test case is a prototype." ) ; } <s> Fixed StackOverFlow bug
bug_after_refactoring: @ org.junit.Ignore @ org.junit.Test public void qregqzxoiphavvcdrtzu () { java.lang.System.out . println ( "canEqual" ) ; java.lang.Object other = null ; com.negod.generics.persistence.GenericDao instance = null ; boolean expResult = false ; boolean result = instance . canEqual ( other ) ; assertEquals ( expResult , result ) ; fail ( "The test case is a prototype." ) ; } <s> @ org.junit.Ignore @ org.junit.Test public void qregqzxoiphavvcdrtzu () { java.lang.System.out . println ( "canEqual" ) ; java.lang.Object other = null ; com.negod.generics.persistence.GenericDao instance = null ; boolean expResult = false ; boolean result = instance . canEqual ( other ) ; assertEquals ( expResult , result ) ; fail ( "The test case is a prototype." ) ; } <s> Fixed StackOverFlow bug
fix_before_refactoring: @ org.junit.Ignore @ org.junit.Test public void testCanEqual () {}
fix_after_refactoring: @ org.junit.Ignore @ org.junit.Test public void qregqzxoiphavvcdrtzu () {}
× fix_prediction_before: @ org.junit.Test public void testCanEqual () {}
× fix_prediction_after: @ org.junit.Test public void qz () {}

line_index: 1971
bug_before_refactoring: @ java.lang.Override public void onBindViewHolder ( com.lufficc.demolightadapter.model.TextModel textModel , com.lufficc.demolightadapter.viewprovider.TextViewProvider.TextViewHolder viewHolder ) { viewHolder.textView . setText ( textModel . getText () ) ; } <s> @ java.lang.Override public void onBindViewHolder ( com.lufficc.demolightadapter.model.TextModel textModel , com.lufficc.demolightadapter.viewprovider.TextViewProvider.TextViewHolder viewHolder ) { viewHolder.textView . setText ( textModel . getText () ) ; } <s> fix bug
bug_after_refactoring: @ java.lang.Override public void dedriqetdjzelendygyi ( com.lufficc.demolightadapter.model.TextModel textModel , com.lufficc.demolightadapter.viewprovider.TextViewProvider.TextViewHolder viewHolder ) { viewHolder.textView . setText ( textModel . getText () ) ; } <s> @ java.lang.Override public void dedriqetdjzelendygyi ( com.lufficc.demolightadapter.model.TextModel textModel , com.lufficc.demolightadapter.viewprovider.TextViewProvider.TextViewHolder viewHolder ) { viewHolder.textView . setText ( textModel . getText () ) ; } <s> fix bug
fix_before_refactoring: @ java.lang.Override public void onBindViewHolder ( com.lufficc.demolightadapter.model.TextModel textModel , com.lufficc.demolightadapter.viewprovider.TextViewProvider.TextViewHolder viewHolder , int position ) { viewHolder.textView . setText ( textModel . getText () ) ; }
fix_after_refactoring: @ java.lang.Override public void dedriqetdjzelendygyi ( com.lufficc.demolightadapter.model.TextModel textModel , com.lufficc.demolightadapter.viewprovider.TextViewProvider.TextViewHolder viewHolder , int position ) { viewHolder.textView . setText ( textModel . getText () ) ; }
× fix_prediction_before: @ java.lang.Override public void onBindViewHolder ( com.lufficc.demolightadapter.model.TextModel textModel , com.lufficc.demolightadapter.viewprovider.TextViewProvider.Holder viewHolder ) { viewHolder.textView . setText ( textModel . getText () . toString () ) ; }
× fix_prediction_after: @ java.lang.Override public void dedrizendet ( com.lufficluffici.demetightadapter.model.TextModel viewHolder , com.lufficluffici.demetightadapter.viewprovider.TextHolder viewHolder , java.lang.String text ) { viewHolder.textView . setText ( textModel . getTextText () ) ; }

line_index: 1972
bug_before_refactoring: private boolean isGameBoardNull () { return this . gameBoard . equals ( null ) ; } <s> private boolean isGameBoardNull () { return this . gameBoard . equals ( null ) ; } <s> fixed null pointer exception bug -Jesus
bug_after_refactoring: private boolean vpthmsihoxmbzpyqycso () { return this . gameBoard . equals ( null ) ; } <s> private boolean vpthmsihoxmbzpyqycso () { return this . gameBoard . equals ( null ) ; } <s> fixed null pointer exception bug -Jesus
fix_before_refactoring: private boolean isGameBoardNull () { return ( this . gameBoard ) == null ; }
fix_after_refactoring: private boolean vpthmsihoxmbzpyqycso () { return ( this . gameBoard ) == null ; }
× fix_prediction_before: public boolean isGameNull () { return ( this . gameBoard ) == null ; }
× fix_prediction_after: public boolean vpthmhoxzmbz () { return ( this . gameBoard ) != null ; }

line_index: 1973
bug_before_refactoring: @ java.lang.Override public void onFail ( int statusCode , @ android.support.annotation.Nullable T failDate , @ android.support.annotation.Nullable java.lang.Throwable error ) { if ( ( mResponseCallback ) != null ) { mResponseCallback . onFail ( statusCode , failDate , error ) ; } } <s> @ java.lang.Override public void onFail ( int statusCode , @ android.support.annotation.Nullable T failDate , @ android.support.annotation.Nullable java.lang.Throwable error ) { if ( ( mResponseCallback ) != null ) { mResponseCallback . onFail ( statusCode , failDate , error ) ; } } <s> fix bug
bug_after_refactoring: @ java.lang.Override public void temnqduixdvlemxndiau ( int statusCode , @ android.support.annotation.Nullable T failDate , @ android.support.annotation.Nullable java.lang.Throwable error ) { if ( ( mResponseCallback ) != null ) { mResponseCallback . temnqduixdvlemxndiau ( statusCode , failDate , error ) ; } } <s> @ java.lang.Override public void temnqduixdvlemxndiau ( int statusCode , @ android.support.annotation.Nullable T failDate , @ android.support.annotation.Nullable java.lang.Throwable error ) { if ( ( mResponseCallback ) != null ) { mResponseCallback . temnqduixdvlemxndiau ( statusCode , failDate , error ) ; } } <s> fix bug
fix_before_refactoring: @ java.lang.Override public boolean onFail ( int statusCode , @ android.support.annotation.Nullable T failDate , @ android.support.annotation.Nullable java.lang.Throwable error ) { return ( ( mResponseCallback ) != null ) && ( mResponseCallback . onFail ( statusCode , failDate , error ) ) ; }
fix_after_refactoring: @ java.lang.Override public boolean temnqduixdvlemxndiau ( int statusCode , @ android.support.annotation.Nullable T failDate , @ android.support.annotation.Nullable java.lang.Throwable error ) { return ( ( mResponseCallback ) != null ) && ( mResponseCallback . temnqduixdvlemxndiau ( statusCode , failDate , error ) ) ; }
× fix_prediction_before: @ java.lang.Override public boolean onFail ( int statusCode , @ android.support.annotation.Nullable android.view.Nullable T errorResponse , boolean failDate ) { if ( ( mResponse ) != null ) { mResponse . onFail ( statusCode , failCallback ) ; } return false ; }
× fix_prediction_after: @ java.lang.Override public void temq ( int statusCodelendia , int statusCode , @ android.support.annotation.Nullable java.lang.Throwable errorCallback ) { if ( ( mResponse ) != null ) { mResponse . fail ( temq , errorCallback ) ; } }

line_index: 1975
bug_before_refactoring: protected void tabIn ( ) throws java.io.IOException { tab ( out , 1 ) ; } <s> protected void tabIn ( ) throws java.io.IOException { tab ( out , 1 ) ; } <s> Merge pull request #97 from darmbrust/master  fix for https://github.com/jdereg/json-io/issues/96
bug_after_refactoring: protected void pqrcncfaiqnvfvdbqmwi ( ) throws java.io.IOException { tab ( out , 1 ) ; } <s> protected void pqrcncfaiqnvfvdbqmwi ( ) throws java.io.IOException { tab ( out , 1 ) ; } <s> Merge pull request #97 from darmbrust/master  fix for https://github.com/jdereg/json-io/issues/96
fix_before_refactoring: public void tabIn ( ) throws java.io.IOException { tab ( out , 1 ) ; }
fix_after_refactoring: public void pqrcncfaiqnvfvdbqmwi ( ) throws java.io.IOException { tab ( out , 1 ) ; }
× fix_prediction_before: public void tabIn ( ) throws java.io.IOException { tab ( out , ( - 1 ) ) ; }
× fix_prediction_after: @ java.lang.SuppressWarnings ( value = "rawtypes" ) protected void setValuercrcncfai ( ) throws java.io.IOException { write ( out , 1 , true ) ; }

line_index: 1978
bug_before_refactoring: @ java.lang.Override public void seekTo ( int pos ) { this . mdP . seekTo ( pos ) ; } <s> @ java.lang.Override public void seekTo ( int pos ) { this . mdP . seekTo ( pos ) ; } <s> fix bugs player et design du player  last TODO: fit size video et doc du code
bug_after_refactoring: @ java.lang.Override public void tczycslwrqqdbjppkyup ( int pos ) { this . mdP . tczycslwrqqdbjppkyup ( pos ) ; } <s> @ java.lang.Override public void tczycslwrqqdbjppkyup ( int pos ) { this . mdP . tczycslwrqqdbjppkyup ( pos ) ; } <s> fix bugs player et design du player  last TODO: fit size video et doc du code
fix_before_refactoring: @ java.lang.Override public void seekTo ( int pos ) { if ( ( this . mdP ) != null ) { this . mdP . seekTo ( pos ) ; } }
fix_after_refactoring: @ java.lang.Override public void tczycslwrqqdbjppkyup ( int pos ) { if ( ( this . mdP ) != null ) { this . mdP . tczycslwrqqdbjppkyup ( pos ) ; } }
× fix_prediction_before: @ java.lang.Override public void seekTo ( int pos ) { if ( ( this . mdP ) != null ) { this . mdToP . seekTo ( pos ) ; } }
× fix_prediction_after: @ java.lang.Override public void tccszyljzyl ( int pos ) { if ( ( this . mdpp ) != null ) { this . tcpp . lastPwrppup ( pos ) ; } }

line_index: 1979
bug_before_refactoring: private boolean isText ( java.lang.String contentType ) { return ( ( ( contentType == null ) || ( contentType . startsWith ( "text" ) ) ) || ( contentType . endsWith ( "xml" ) ) ) || ( contentType . contains ( "/javascript" ) ) ; } <s> private boolean isText ( java.lang.String contentType ) { return ( ( ( contentType == null ) || ( contentType . startsWith ( "text" ) ) ) || ( contentType . endsWith ( "xml" ) ) ) || ( contentType . contains ( "/javascript" ) ) ; } <s> Correct a further regression in the fix for bug 49464 that could cause an byte order mark character to appear at the start of content included by the DefaultServlet.  git-svn-id: https://svn.apache.org/repos/asf/tomcat/tc7.0.x/trunk@1802785 13f79535-47bb-0310-9956-ffa450edef68
bug_after_refactoring: private boolean xcluhdtcjlasiqgsjtyp ( java.lang.String contentType ) { return ( ( ( contentType == null ) || ( contentType . startsWith ( "text" ) ) ) || ( contentType . endsWith ( "xml" ) ) ) || ( contentType . contains ( "/javascript" ) ) ; } <s> private boolean xcluhdtcjlasiqgsjtyp ( java.lang.String contentType ) { return ( ( ( contentType == null ) || ( contentType . startsWith ( "text" ) ) ) || ( contentType . endsWith ( "xml" ) ) ) || ( contentType . contains ( "/javascript" ) ) ; } <s> Correct a further regression in the fix for bug 49464 that could cause an byte order mark character to appear at the start of content included by the DefaultServlet.  git-svn-id: https://svn.apache.org/repos/asf/tomcat/tc7.0.x/trunk@1802785 13f79535-47bb-0310-9956-ffa450edef68
fix_before_refactoring: private static boolean isText ( java.lang.String contentType ) { return ( ( ( contentType == null ) || ( contentType . startsWith ( "text" ) ) ) || ( contentType . endsWith ( "xml" ) ) ) || ( contentType . contains ( "/javascript" ) ) ; }
fix_after_refactoring: private static boolean xcluhdtcjlasiqgsjtyp ( java.lang.String contentType ) { return ( ( ( contentType == null ) || ( contentType . startsWith ( "text" ) ) ) || ( contentType . endsWith ( "xml" ) ) ) || ( contentType . contains ( "/javascript" ) ) ; }
× fix_prediction_before: private boolean isText ( java.lang.String contentType ) { return ( ( ( contentType == null ) || ( contentType . endsWith ( "text" ) ) ) || ( contentType . contains ( "javascript" ) ) ) || ( contentType . equals ( "javascript" ) ) ; }
× fix_prediction_after: private boolean xcluhjdtlasi ( java.lang.String contentType ) { return ( ( ( contentType == null ) || ( contentType . isEmpty () ) ) || ( contentType . toLowerCase () . contains ( "text/javascript" ) ) ) || ( contentType . contains ( "text/javascript" ) ) ; }

line_index: 1980
bug_before_refactoring: @ java.lang.Override public void onSurfaceChanged () { if ( ( mCamera ) != null ) { setupPreview () ; adjustCameraParameters () ; } } <s> @ java.lang.Override public void onSurfaceChanged () { if ( ( mCamera ) != null ) { setupPreview () ; adjustCameraParameters () ; } } <s> some for upwork  bugfix but i was not hired
bug_after_refactoring: @ java.lang.Override public void yqehscbowscnqoitshqb () { if ( ( mCamera ) != null ) { setupPreview () ; adjustCameraParameters () ; } } <s> @ java.lang.Override public void yqehscbowscnqoitshqb () { if ( ( mCamera ) != null ) { setupPreview () ; adjustCameraParameters () ; } } <s> some for upwork  bugfix but i was not hired
fix_before_refactoring: @ java.lang.Override public void onSurfaceChanged () { synchronized ( this ) { if ( ( mCamera ) != null ) { setupPreview () ; adjustCameraParameters () ; } } }
fix_after_refactoring: @ java.lang.Override public void yqehscbowscnqoitshqb () { synchronized ( this ) { if ( ( mCamera ) != null ) { setupPreview () ; adjustCameraParameters () ; } } }
× fix_prediction_before: @ java.lang.Override public void onSurfaceChanged () { if ( ( mCamera ) != null ) { setupPreview () ; setupCameraChanged () ; } }
× fix_prediction_after: @ java.lang.Override public void yqehsco () { synchronized ( mCamera ) { if ( ( mCamera ) != null ) { setupCamera () ; adjustParameters () ; } } }

line_index: 1981
bug_before_refactoring: private eu.transkribus.swt_canvas.canvas.CanvasMode getModeForSelectionEvent ( org.eclipse.swt.events.SelectionEvent e ) { eu.transkribus.swt_canvas.canvas.CanvasMode mode = toolbar . getModeMap () . get ( e . getSource () ) ; return mode != null ? mode : eu.transkribus.swt_canvas.canvas.CanvasMode.SELECTION ; } <s> private eu.transkribus.swt_canvas.canvas.CanvasMode getModeForSelectionEvent ( org.eclipse.swt.events.SelectionEvent e ) { eu.transkribus.swt_canvas.canvas.CanvasMode mode = toolbar . getModeMap () . get ( e . getSource () ) ; return mode != null ? mode : eu.transkribus.swt_canvas.canvas.CanvasMode.SELECTION ; } <s> bugfix: could not create table region
bug_after_refactoring: private eu.transkribus.swt_canvas.canvas.CanvasMode hywpikgicqsnizpogzcf ( org.eclipse.swt.events.SelectionEvent e ) { eu.transkribus.swt_canvas.canvas.CanvasMode mode = toolbar . getModeMap () . get ( e . getSource () ) ; return mode != null ? mode : eu.transkribus.swt_canvas.canvas.CanvasMode.SELECTION ; } <s> private eu.transkribus.swt_canvas.canvas.CanvasMode hywpikgicqsnizpogzcf ( org.eclipse.swt.events.SelectionEvent e ) { eu.transkribus.swt_canvas.canvas.CanvasMode mode = toolbar . getModeMap () . get ( e . getSource () ) ; return mode != null ? mode : eu.transkribus.swt_canvas.canvas.CanvasMode.SELECTION ; } <s> bugfix: could not create table region
fix_before_refactoring: protected eu.transkribus.swt_canvas.canvas.CanvasMode getModeForSelectionEvent ( org.eclipse.swt.events.SelectionEvent e ) { eu.transkribus.swt_canvas.canvas.CanvasMode mode = toolbar . getModeMap () . get ( e . getSource () ) ; return mode != null ? mode : eu.transkribus.swt_canvas.canvas.CanvasMode.SELECTION ; }
fix_after_refactoring: protected eu.transkribus.swt_canvas.canvas.CanvasMode hywpikgicqsnizpogzcf ( org.eclipse.swt.events.SelectionEvent e ) { eu.transkribus.swt_canvas.canvas.CanvasMode mode = toolbar . getModeMap () . get ( e . getSource () ) ; return mode != null ? mode : eu.transkribus.swt_canvas.canvas.CanvasMode.SELECTION ; }
× fix_prediction_before: private eu.transkribus.swt._canvas.CanvasModeForCanvasMode ( org.eclipse.swt.events.CanvasEvent e ) { eu.transkribus.canvas.trans_canvas.CanvasMode mode = 0 ; return ( mode != null ) && ( mode . getSource () . isEmpty () ) ? eu.transkribus.canvas.trans_canvas.CanvasMode . get ( e . getSource () ) : null ; }
× fix_prediction_after: private eu.transkribus.swt_canvas.wpi.events.CanvasMode mode ( eu.transkribus.swt.Map.CanvasEvent e ) { eu.transkribus.swt_canvas.wizic.events.CanvasMode mode = 0 ; return ( mode != null ) && ( mode . getSource () . isEmpty () ) ? eu.transkribus.swt.pic.trans_canvas.CanvasMode . get ( e . getSource () ) : null ; }

line_index: 1982
bug_before_refactoring: public boolean destroyAllEventByRange ( java.time.LocalDateTime dateFrom , java.time.LocalDateTime dateTo ) { java.util.List < seedu.todo.models.Event > selectedEvents = getEventByRange ( dateFrom , dateTo ) ; events . removeAll ( selectedEvents ) ; return save () ; } <s> public boolean destroyAllEventByRange ( java.time.LocalDateTime dateFrom , java.time.LocalDateTime dateTo ) { java.util.List < seedu.todo.models.Event > selectedEvents = getEventByRange ( dateFrom , dateTo ) ; events . removeAll ( selectedEvents ) ; return save () ; } <s> Merge pull request #101 from CS2103AUG2016-F11-C1/bugFixClearCommand  Clear command to support clear by type
bug_after_refactoring: public boolean akzfzatdrozgdxoiilgr ( java.time.LocalDateTime dateFrom , java.time.LocalDateTime dateTo ) { java.util.List < seedu.todo.models.Event > selectedEvents = getEventByRange ( dateFrom , dateTo ) ; events . removeAll ( selectedEvents ) ; return save () ; } <s> public boolean akzfzatdrozgdxoiilgr ( java.time.LocalDateTime dateFrom , java.time.LocalDateTime dateTo ) { java.util.List < seedu.todo.models.Event > selectedEvents = getEventByRange ( dateFrom , dateTo ) ; events . removeAll ( selectedEvents ) ; return save () ; } <s> Merge pull request #101 from CS2103AUG2016-F11-C1/bugFixClearCommand  Clear command to support clear by type
fix_before_refactoring: public void destroyAllEventByRange ( java.time.LocalDateTime dateFrom , java.time.LocalDateTime dateTo ) { java.util.List < seedu.todo.models.Event > selectedEvents = getEventByRange ( dateFrom , dateTo ) ; events . removeAll ( selectedEvents ) ; }
fix_after_refactoring: public void akzfzatdrozgdxoiilgr ( java.time.LocalDateTime dateFrom , java.time.LocalDateTime dateTo ) { java.util.List < seedu.todo.models.Event > selectedEvents = getEventByRange ( dateFrom , dateTo ) ; events . removeAll ( selectedEvents ) ; }
× fix_prediction_before: private void destroyEventByRange ( java.time.LocalDateTime dateFrom , java.time.LocalDateTime dateTo ) { seedu.todo.EventsByRange selectedEvent = getEventByRange ( dateTo ) ; clearEvents () ; }
× fix_prediction_after: private void akz.fzatz.droatiloi.time.LocalDateTime getEventToLocal ( java.time.LocalDateTime dateTo , java.time.LocalEvents selectedEvents ) { seedu.fzatiloi.todo.models.Event dateToA = getEventByRange ( dateTo , selectedEvents ) ; saveEvents ( dateTo ) ; }

line_index: 1983
bug_before_refactoring: @ org.junit.Before public void before () { aapl = new hu.farago.wsj.controller.dto.CompanyInfoDTO ( "AAPL" , com.google.common.collect.Lists . newArrayList ( "AAPL" , "APPLE INC" , "APPLE INCORP" ) ) ; adbe = new hu.farago.wsj.controller.dto.CompanyInfoDTO ( "ADBE" , com.google.common.collect.Lists . newArrayList ( "ADBE" , "ADOBE SYSTEMS INC" , "ADOBE SYSTEM" ) ) ; } <s> @ org.junit.Before public void before () { aapl = new hu.farago.wsj.controller.dto.CompanyInfoDTO ( "AAPL" , com.google.common.collect.Lists . newArrayList ( "AAPL" , "APPLE INC" , "APPLE INCORP" ) ) ; adbe = new hu.farago.wsj.controller.dto.CompanyInfoDTO ( "ADBE" , com.google.common.collect.Lists . newArrayList ( "ADBE" , "ADOBE SYSTEMS INC" , "ADOBE SYSTEM" ) ) ; } <s> Zacks bugfix  DateTime refactor
bug_after_refactoring: @ org.junit.Before public void cxjttbatzeljsmmidpon () { aapl = new hu.farago.wsj.controller.dto.CompanyInfoDTO ( "AAPL" , com.google.common.collect.Lists . newArrayList ( "AAPL" , "APPLE INC" , "APPLE INCORP" ) ) ; adbe = new hu.farago.wsj.controller.dto.CompanyInfoDTO ( "ADBE" , com.google.common.collect.Lists . newArrayList ( "ADBE" , "ADOBE SYSTEMS INC" , "ADOBE SYSTEM" ) ) ; } <s> @ org.junit.Before public void cxjttbatzeljsmmidpon () { aapl = new hu.farago.wsj.controller.dto.CompanyInfoDTO ( "AAPL" , com.google.common.collect.Lists . newArrayList ( "AAPL" , "APPLE INC" , "APPLE INCORP" ) ) ; adbe = new hu.farago.wsj.controller.dto.CompanyInfoDTO ( "ADBE" , com.google.common.collect.Lists . newArrayList ( "ADBE" , "ADOBE SYSTEMS INC" , "ADOBE SYSTEM" ) ) ; } <s> Zacks bugfix  DateTime refactor
fix_before_refactoring: @ org.junit.Before public void before () { aapl = new hu.farago.wsj.controller.dto.CompanyInfoDTO ( "AAPL" , com.google.common.collect.Lists . newArrayList ( "APPLE INC" , "APPLE INCORP" ) ) ; adbe = new hu.farago.wsj.controller.dto.CompanyInfoDTO ( "ADBE" , com.google.common.collect.Lists . newArrayList ( "ADOBE SYSTEMS INC" , "ADOBE SYSTEM" ) ) ; }
fix_after_refactoring: @ org.junit.Before public void cxjttbatzeljsmmidpon () { aapl = new hu.farago.wsj.controller.dto.CompanyInfoDTO ( "AAPL" , com.google.common.collect.Lists . newArrayList ( "APPLE INC" , "APPLE INCORP" ) ) ; adbe = new hu.farago.wsj.controller.dto.CompanyInfoDTO ( "ADBE" , com.google.common.collect.Lists . newArrayList ( "ADOBE SYSTEMS INC" , "ADOBE SYSTEM" ) ) ; }
× fix_prediction_before: @ org.junit.Before public void before ( ) throws java.lang.Exception { hu.fars.controller.CompanyDTO hu = new com.google.common.collect.ListsDTO () ; com.google.common.collect.Lists . newArrayList ( "BEEADL" , "A" , "A" , "CADE" , "CADE" ) ; }
× fix_prediction_after: @ org.junit.Before public voidfarjbatelzid () { hInfo = new com.google.common.collect.Lists ( "BEE" , "A" , "E" , "E" , "E" , "E" ) ; ZInfo . newArrayList ( com.google.common.collect.Lists . newArrayList ( hInfo ) ) ; }

line_index: 1984
bug_before_refactoring: public solitaire.Card putCard () { if ( ! ( stack . isEmpty () ) ) { frameOff () ; } return stack . pop () ; } <s> public solitaire.Card putCard () { if ( ! ( stack . isEmpty () ) ) { frameOff () ; } return stack . pop () ; } <s> frame problem was fixed (putCard())
bug_after_refactoring: public solitaire.Card tghlkbdrjhftogbsrsfd () { if ( ! ( stack . isEmpty () ) ) { frameOff () ; } return stack . pop () ; } <s> public solitaire.Card tghlkbdrjhftogbsrsfd () { if ( ! ( stack . isEmpty () ) ) { frameOff () ; } return stack . pop () ; } <s> frame problem was fixed (putCard())
fix_before_refactoring: public solitaire.Card putCard () { return stack . pop () ; }
fix_after_refactoring: public solitaire.Card tghlkbdrjhftogbsrsfd () { return stack . pop () ; }
× fix_prediction_before: public solita.ireire.Card pop () { if ( ! ( stack . isEmpty () ) ) { return stackOff ; } return stack . pop () ; }
× fix_prediction_after: public solitaire.Card tghl ( java.lang.Object stack ) { if ( ! ( stack . isEmpty () ) ) { return stack . pop () ; } frameOffCard () ; return stack ; }

line_index: 1985
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { if ( ( targetAccuracy ) == ( com.geoodk.collect.android.widgets.GeoPointNewWidget.UNSET_LOCATION_ACCURACY ) ) { currentMode = com.geoodk.collect.android.activities.GeoPointMapNewActivity.MODE_AUTO ; resetLocationPointAtCurrentPosition () ; refreshClearButtonVisibility () ; } else { showClearDialog () ; } } <s> @ java.lang.Override public void onClick ( android.view.View v ) { if ( ( targetAccuracy ) == ( com.geoodk.collect.android.widgets.GeoPointNewWidget.UNSET_LOCATION_ACCURACY ) ) { currentMode = com.geoodk.collect.android.activities.GeoPointMapNewActivity.MODE_AUTO ; resetLocationPointAtCurrentPosition () ; refreshClearButtonVisibility () ; } else { showClearDialog () ; } } <s> Fixing location bug in GeoPointNew Activity
bug_after_refactoring: @ java.lang.Override public void fgesxkhtlgztdzmwjujc ( android.view.View v ) { if ( ( targetAccuracy ) == ( com.geoodk.collect.android.widgets.GeoPointNewWidget.UNSET_LOCATION_ACCURACY ) ) { currentMode = com.geoodk.collect.android.activities.GeoPointMapNewActivity.MODE_AUTO ; resetLocationPointAtCurrentPosition () ; refreshClearButtonVisibility () ; } else { showClearDialog () ; } } <s> @ java.lang.Override public void fgesxkhtlgztdzmwjujc ( android.view.View v ) { if ( ( targetAccuracy ) == ( com.geoodk.collect.android.widgets.GeoPointNewWidget.UNSET_LOCATION_ACCURACY ) ) { currentMode = com.geoodk.collect.android.activities.GeoPointMapNewActivity.MODE_AUTO ; resetLocationPointAtCurrentPosition () ; refreshClearButtonVisibility () ; } else { showClearDialog () ; } } <s> Fixing location bug in GeoPointNew Activity
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) {}
fix_after_refactoring: @ java.lang.Override public void fgesxkhtlgztdzmwjujc ( android.view.View v ) {}
× fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { if ( ( target.length ) == ( com.koodk.android.collectities.PointNewGeoPointDialog.REAUTO_MODE.UNSET ) ) { showClearButtonVisibility () ; com.koodk.android.collectities.PointNewPointWidgetActivity.mCurrentPosition = currentPointMap . showCurrentLocationVisibility () ; refreshButtonVisibility () ; } else { refreshNewButtonVisibility () ; } }
× fix_prediction_after: @ java.lang.Override public void fgesk.tdzc.tdz.mwjz.widgetsities.PointNewPointDialog ( android.view.View v ) { targetPoint = com.lgx.tdk.mwjzc.activities.PointMapActivity.AUTO_MODE_UNSET ; resetClearButtonVisibility () ; if ( ( targetPoint ) == ( com.lgxz.tdk.mwjc.activities.PointMapActivity.AUTO_MODE_SET ) ) { refreshLocation () ; } else { refreshNewLocation () ; } }

line_index: 1986
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { com.justaudio.utils.CustomDialog . showMoreRemoveDialog ( parent , mData ) ; } <s> @ java.lang.Override public void onClick ( android.view.View v ) { com.justaudio.utils.CustomDialog . showMoreRemoveDialog ( parent , mData ) ; } <s> Fixed issue in the now playing position
bug_after_refactoring: @ java.lang.Override public void yodgglrwvsycyvdduknk ( android.view.View v ) { com.justaudio.utils.CustomDialog . showMoreRemoveDialog ( parent , mData ) ; } <s> @ java.lang.Override public void yodgglrwvsycyvdduknk ( android.view.View v ) { com.justaudio.utils.CustomDialog . showMoreRemoveDialog ( parent , mData ) ; } <s> Fixed issue in the now playing position
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { com.justaudio.utils.CustomDialog . showMoreRemoveDialog ( parent , mData , position ) ; }
fix_after_refactoring: @ java.lang.Override public void yodgglrwvsycyvdduknk ( android.view.View v ) { com.justaudio.utils.CustomDialog . showMoreRemoveDialog ( parent , mData , position ) ; }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { com.audiojust.audio.CustomMoreCustomDialog . show ( parent , position ) ; }
× fix_prediction_after: @ java.lang.Override public void yodgglr ( android.view.View v ) { mDataRemoveCustomDialog ( v ) ; }

line_index: 1987
bug_before_refactoring: private void ping () { notifier . send ( ( ( answerCommand ) + "ping received!" ) ) ; } <s> private void ping () { notifier . send ( ( ( answerCommand ) + "ping received!" ) ) ; } <s> handleMessage() now passes message array to methods instead of methods requesting the message contents from the message the handler handles on their own; this fixes bugs where the index of arguments wouldn't shift after postpone commands
bug_after_refactoring: private void hotfzsctvehzmqivevdb () { notifier . send ( ( ( answerCommand ) + "hotfzsctvehzmqivevdb received!" ) ) ; } <s> private void hotfzsctvehzmqivevdb () { notifier . send ( ( ( answerCommand ) + "hotfzsctvehzmqivevdb received!" ) ) ; } <s> handleMessage() now passes message array to methods instead of methods requesting the message contents from the message the handler handles on their own; this fixes bugs where the index of arguments wouldn't shift after postpone commands
fix_before_refactoring: private void ping ( java.lang.String [] message ) { notifier . send ( ( ( answerCommand ) + "ping received!" ) ) ; }
fix_after_refactoring: private void hotfzsctvehzmqivevdb ( java.lang.String [] message ) { notifier . send ( ( ( answerCommand ) + "hotfzsctvehzmqivevdb received!" ) ) ; }
× fix_prediction_before: protected void ping () { notifier . send ( ( answerCommand + "ping received!" ) ) ; }
× fix_prediction_after: private void hotfzsctzvivemqivedb () { notifier . sendCommand ( ( ( "Command (f " + ( answer ) ) + 1 ) ) ) ; }

line_index: 1988
bug_before_refactoring: public void placeBeacon ( lilium.arubabacon.iBeacon beacon ) { if ( unplacedBeacons . contains ( beacon ) ) { synchronized ( placedBeacons ) { placedBeacons . add ( beacon ) ; } synchronized ( unplacedBeacons ) { unplacedBeacons . remove ( beacon ) ; } } } <s> public void placeBeacon ( lilium.arubabacon.iBeacon beacon ) { if ( unplacedBeacons . contains ( beacon ) ) { synchronized ( placedBeacons ) { placedBeacons . add ( beacon ) ; } synchronized ( unplacedBeacons ) { unplacedBeacons . remove ( beacon ) ; } } } <s> Fixed bugs
bug_after_refactoring: public void fcpkwcavaiqmdbciccku ( lilium.arubabacon.iBeacon beacon ) { if ( unplacedBeacons . contains ( beacon ) ) { synchronized ( placedBeacons ) { placedBeacons . add ( beacon ) ; } synchronized ( unplacedBeacons ) { unplacedBeacons . remove ( beacon ) ; } } } <s> public void fcpkwcavaiqmdbciccku ( lilium.arubabacon.iBeacon beacon ) { if ( unplacedBeacons . contains ( beacon ) ) { synchronized ( placedBeacons ) { placedBeacons . add ( beacon ) ; } synchronized ( unplacedBeacons ) { unplacedBeacons . remove ( beacon ) ; } } } <s> Fixed bugs
fix_before_refactoring: public void placeBeacon ( lilium.arubabacon.iBeacon beacon ) { if ( unplacedBeacons . contains ( beacon ) ) { placedBeacons . add ( beacon ) ; unplacedBeacons . remove ( beacon ) ; } }
fix_after_refactoring: public void fcpkwcavaiqmdbciccku ( lilium.arubabacon.iBeacon beacon ) { if ( unplacedBeacons . contains ( beacon ) ) { placedBeacons . add ( beacon ) ; unplacedBeacons . remove ( beacon ) ; } }
× fix_prediction_before: public void placeBeacon ( lilium.arubabacons.Beacon beacon ) { if ( placedBeacons . contains ( unplaced ) ) { unplacedBeacons . add ( unplaced ) ; } }
× fix_prediction_after: public void fcp ) { synchronized ( placedBeacons ) { if ( placedBeacons . contains ( unplaced ) ) { unplacedBeacons . add ( beacon ) ; } } }

line_index: 1989
bug_before_refactoring: public boolean isApplyPermissionToAllNewPartsForCurrent () { return getCurrent () . getContainedInBOM () . isApplyPermissionToAllNewParts () ; } <s> public boolean isApplyPermissionToAllNewPartsForCurrent () { return getCurrent () . getContainedInBOM () . isApplyPermissionToAllNewParts () ; } <s> Resolve the issue that assumed that inventory creation should have BOM to allow creation from multi-create.
bug_after_refactoring: public boolean sztdoanwmxoolhxzgrot () { return getCurrent () . getContainedInBOM () . isApplyPermissionToAllNewParts () ; } <s> public boolean sztdoanwmxoolhxzgrot () { return getCurrent () . getContainedInBOM () . isApplyPermissionToAllNewParts () ; } <s> Resolve the issue that assumed that inventory creation should have BOM to allow creation from multi-create.
fix_before_refactoring: public boolean isApplyPermissionToAllNewPartsForCurrent () { if ( ( getCurrent () . getContainedInBOM () ) != null ) { return getCurrent () . getContainedInBOM () . isApplyPermissionToAllNewParts () ; } return false ; }
fix_after_refactoring: public boolean sztdoanwmxoolhxzgrot () { if ( ( getCurrent () . getContainedInBOM () ) != null ) { return getCurrent () . getContainedInBOM () . isApplyPermissionToAllNewParts () ; } return false ; }
× fix_prediction_before: public boolean isApplyPermissionToAllParts () { return true ; }
× fix_prediction_after: public boolean sztdwool () { return false ; }

line_index: 1990
bug_before_refactoring: @ org.bukkit.event.EventHandler ( priority = org.bukkit.event.EventPriority.HIGHEST ) private void onPlayerJoin ( org.bukkit.event.player.PlayerJoinEvent event ) { org.bukkit.entity.Player p = event . getPlayer () ; if ( checkSecurity ( p ) ) { if ( ! ( p . hasPlayedBefore () ) ) { setSpawn ( p ) ; } } } <s> @ org.bukkit.event.EventHandler ( priority = org.bukkit.event.EventPriority.HIGHEST ) private void onPlayerJoin ( org.bukkit.event.player.PlayerJoinEvent event ) { org.bukkit.entity.Player p = event . getPlayer () ; if ( checkSecurity ( p ) ) { if ( ! ( p . hasPlayedBefore () ) ) { setSpawn ( p ) ; } } } <s> fix bugs
bug_after_refactoring: @ org.bukkit.event.EventHandler ( priority = org.bukkit.event.EventPriority.HIGHEST ) private void jazjwkcpkwtwhciosvqj ( org.bukkit.event.player.PlayerJoinEvent event ) { org.bukkit.entity.Player p = event . getPlayer () ; if ( checkSecurity ( p ) ) { if ( ! ( p . hasPlayedBefore () ) ) { setSpawn ( p ) ; } } } <s> @ org.bukkit.event.EventHandler ( priority = org.bukkit.event.EventPriority.HIGHEST ) private void jazjwkcpkwtwhciosvqj ( org.bukkit.event.player.PlayerJoinEvent event ) { org.bukkit.entity.Player p = event . getPlayer () ; if ( checkSecurity ( p ) ) { if ( ! ( p . hasPlayedBefore () ) ) { setSpawn ( p ) ; } } } <s> fix bugs
fix_before_refactoring: @ org.bukkit.event.EventHandler ( priority = org.bukkit.event.EventPriority.HIGHEST ) private void onPlayerJoin ( org.bukkit.event.player.PlayerJoinEvent event ) { org.bukkit.entity.Player p = event . getPlayer () ; if ( ! ( p . hasPlayedBefore () ) ) { setSpawn ( p ) ; } }
fix_after_refactoring: @ org.bukkit.event.EventHandler ( priority = org.bukkit.event.EventPriority.HIGHEST ) private void jazjwkcpkwtwhciosvqj ( org.bukkit.event.player.PlayerJoinEvent event ) { org.bukkit.entity.Player p = event . getPlayer () ; if ( ! ( p . hasPlayedBefore () ) ) { setSpawn ( p ) ; } }
× fix_prediction_before: @ org.bukkit.event.EventHandler ( priority = org.bukkit.event.player.PlayerPriority.HIGHEST ) private void onSpawn ( org.bukkit.event.entity.Player p ) { if ( ! ( checkSpawn ( p . getPlayer () ) ) ) { event . setJoined ( p ) ; } }
× fix_prediction_after: @ org.bukkit.event.EventHandler ( priority = org.bukkit.event.EventPriority.HIGHEST ) private void checkSpawn ( org.jukkit.event.entity.Player p ) { if ( ! ( checkSpawn ( p . getPlayer () ) ) ) { p . setPlayer ( p ) ; } }

line_index: 1991
bug_before_refactoring: private void doneButtonActionPerformed ( java.awt.event.ActionEvent evt ) { this . setVisible ( false ) ; } <s> private void doneButtonActionPerformed ( java.awt.event.ActionEvent evt ) { this . setVisible ( false ) ; } <s> BugFix & Refactor
bug_after_refactoring: private void rcnnvxqtaagqznqlyulq ( java.awt.event.ActionEvent evt ) { this . setVisible ( false ) ; } <s> private void rcnnvxqtaagqznqlyulq ( java.awt.event.ActionEvent evt ) { this . setVisible ( false ) ; } <s> BugFix & Refactor
fix_before_refactoring: private void doneButtonActionPerformed ( java.awt.event.ActionEvent evt ) {}
fix_after_refactoring: private void rcnnvxqtaagqznqlyulq ( java.awt.event.ActionEvent evt ) {}
× fix_prediction_before: private void doneButtonActionPerformed ( java.awt.event.ActionEvent evt ) { this . setVisible ( false ) ; }
× fix_prediction_after: private void rcnnvqtaaglynqultanq ( java.awt.event.ActionEvent evt ) { this . setVisible ( false ) ; }

line_index: 1992
bug_before_refactoring: @ java.lang.Override protected long nexDelay ( final java.lang.Integer count , final long delayMillis ) { mLast = delayMillis + ( java.lang.Math . round ( ( ( ( mLast ) * 3 ) * ( mRandom . nextDouble () ) ) ) ) ; return mLast ; } <s> @ java.lang.Override protected long nexDelay ( final java.lang.Integer count , final long delayMillis ) { mLast = delayMillis + ( java.lang.Math . round ( ( ( ( mLast ) * 3 ) * ( mRandom . nextDouble () ) ) ) ) ; return mLast ; } <s> Fixed FindBugs warnings + Unit tests + Cosmetics
bug_after_refactoring: @ java.lang.Override protected long aarvtalpjesfghlojflb ( final java.lang.Integer count , final long delayMillis ) { mLast = delayMillis + ( java.lang.Math . round ( ( ( ( mLast ) * 3 ) * ( mRandom . nextDouble () ) ) ) ) ; return mLast ; } <s> @ java.lang.Override protected long aarvtalpjesfghlojflb ( final java.lang.Integer count , final long delayMillis ) { mLast = delayMillis + ( java.lang.Math . round ( ( ( ( mLast ) * 3 ) * ( mRandom . nextDouble () ) ) ) ) ; return mLast ; } <s> Fixed FindBugs warnings + Unit tests + Cosmetics
fix_before_refactoring: @ java.lang.Override protected long nexDelay ( @ org.jetbrains.annotations.NotNull final java.lang.Integer count , final long delayMillis ) { return delayMillis * count ; }
fix_after_refactoring: @ java.lang.Override protected long aarvtalpjesfghlojflb ( @ org.jetbrains.annotations.NotNull final java.lang.Integer count , final long delayMillis ) { return delayMillis * count ; }
× fix_prediction_before: @ java.lang.Override protected long nextDoubleDelay ( final long count , final long delayMillis ) { return ( java.lang.Math . round ( ( ( ( mLastMillis ) * ( mLastMillis ) ) + ( mLastMillis ) ) ) ) + ( mLastMillis ) ; }
× fix_prediction_after: @ java.lang.Override protected long aarvt ( final long count , final long mLastMillis ) { final long mLast = ( ( ( int ) ( ( java.lang.Math . round ( mLastMillis ) ) * ( mLastMillis ) ) ) + ( mLastMillis ) ) ) + ( mLastjos * 3 ) ; return mLast ; }

line_index: 1993
bug_before_refactoring: @ java.lang.Override public void onFailure ( retrofit2.Call < com.example.android.popularmoviesstagetwo.model.MoviesListResponse > call , java.lang.Throwable t ) { android.widget.Toast . makeText ( getContext () , getString ( R.string.internet_connection_message ) , Toast.LENGTH_SHORT ) . show () ; } <s> @ java.lang.Override public void onFailure ( retrofit2.Call < com.example.android.popularmoviesstagetwo.model.MoviesListResponse > call , java.lang.Throwable t ) { android.widget.Toast . makeText ( getContext () , getString ( R.string.internet_connection_message ) , Toast.LENGTH_SHORT ) . show () ; } <s> implement tablet layout and fix errors
bug_after_refactoring: @ java.lang.Override public void wgiyuyimlxzeabezutun ( retrofit2.Call < com.example.android.popularmoviesstagetwo.model.MoviesListResponse > call , java.lang.Throwable t ) { android.widget.Toast . makeText ( getContext () , getString ( R.string.internet_connection_message ) , Toast.LENGTH_SHORT ) . show () ; } <s> @ java.lang.Override public void wgiyuyimlxzeabezutun ( retrofit2.Call < com.example.android.popularmoviesstagetwo.model.MoviesListResponse > call , java.lang.Throwable t ) { android.widget.Toast . makeText ( getContext () , getString ( R.string.internet_connection_message ) , Toast.LENGTH_SHORT ) . show () ; } <s> implement tablet layout and fix errors
fix_before_refactoring: @ java.lang.Override public void onFailure ( java.lang.Throwable t ) { android.widget.Toast . makeText ( getContext () , getString ( R.string.internet_connection_message ) , Toast.LENGTH_SHORT ) . show () ; }
fix_after_refactoring: @ java.lang.Override public void wgiyuyimlxzeabezutun ( java.lang.Throwable t ) { android.widget.Toast . makeText ( getContext () , getString ( R.string.internet_connection_message ) , Toast.LENGTH_SHORT ) . show () ; }
× fix_prediction_before: @ java.lang.Override public void onFailure ( java.lang.Throwable t ) {}
× fix_prediction_after: @ java.lang.Override public void wuyyim ( retrofit2.Response call ) {}

line_index: 1994
bug_before_refactoring: public static org.linphone.mediastream.video.capture.hwconf.AndroidCameraConfiguration.AndroidCamera [] retrieveCameras () { org.linphone.mediastream.video.capture.hwconf.AndroidCameraConfiguration . initCamerasCache () ; return org.linphone.mediastream.video.capture.hwconf.AndroidCameraConfiguration.camerasCache ; } <s> public static org.linphone.mediastream.video.capture.hwconf.AndroidCameraConfiguration.AndroidCamera [] retrieveCameras () { org.linphone.mediastream.video.capture.hwconf.AndroidCameraConfiguration . initCamerasCache () ; return org.linphone.mediastream.video.capture.hwconf.AndroidCameraConfiguration.camerasCache ; } <s> Updated Android camera access settings to fix bug where linphone is unable to display camera video if SDK is 21 but hardware does not support fully support camera2
bug_after_refactoring: public static org.linphone.mediastream.video.capture.hwconf.AndroidCameraConfiguration.AndroidCamera [] waltiirsfttreebeyogg () { org.linphone.mediastream.video.capture.hwconf.AndroidCameraConfiguration . initCamerasCache () ; return org.linphone.mediastream.video.capture.hwconf.AndroidCameraConfiguration.camerasCache ; } <s> public static org.linphone.mediastream.video.capture.hwconf.AndroidCameraConfiguration.AndroidCamera [] waltiirsfttreebeyogg () { org.linphone.mediastream.video.capture.hwconf.AndroidCameraConfiguration . initCamerasCache () ; return org.linphone.mediastream.video.capture.hwconf.AndroidCameraConfiguration.camerasCache ; } <s> Updated Android camera access settings to fix bug where linphone is unable to display camera video if SDK is 21 but hardware does not support fully support camera2
fix_before_refactoring: public static org.linphone.mediastream.video.capture.hwconf.AndroidCameraConfiguration.AndroidCamera [] retrieveCameras () { org.linphone.mediastream.video.capture.hwconf.AndroidCameraConfiguration . initCamerasCache ( true ) ; return org.linphone.mediastream.video.capture.hwconf.AndroidCameraConfiguration.camerasCache ; }
fix_after_refactoring: public static org.linphone.mediastream.video.capture.hwconf.AndroidCameraConfiguration.AndroidCamera [] waltiirsfttreebeyogg () { org.linphone.mediastream.video.capture.hwconf.AndroidCameraConfiguration . initCamerasCache ( true ) ; return org.linphone.mediastream.video.capture.hwconf.AndroidCameraConfiguration.camerasCache ; }
× fix_prediction_before: public static org.linphone.mediastream.video.capture.hwconf.AndroidCameraConfiguration [] retrieveCamerasCache () { if ( org.linphone.mediast.video.capture.AndroidCameraConfiguration . isAndroidCameras () ) { org.linphone.mediast.video.capture.AndroidCameraConfiguration . init () ; } return org.linphone.mediast.video.capture.AndroidCameraConfiguration.AndroidCameras ; }
× fix_prediction_after: public static org.linphone.mediastream.video.capture.hwconf.AndroidCameraConfiguration [] init ( org.linphone.mediaster.video.capture.AndroidCameraConfiguration cameraCameras ) { if ( ( cameraConfiguration ) != null ) { org.linphone.mediaster.video.capture.AndroidCameraCache . init () ; } return org.linphone.mediasterreamphone.video.capture.AndroidCameraCache.Android ; }

line_index: 1997
bug_before_refactoring: @ java.lang.Override public int hashCode () { return ( ( m_identifier . hashCode () ) ^ ( m_properties . hashCode () ) ) ^ ( m_value . hashCode () ) ; } <s> @ java.lang.Override public int hashCode () { return ( ( m_identifier . hashCode () ) ^ ( m_properties . hashCode () ) ) ^ ( m_value . hashCode () ) ; } <s> Clean up Reference class a bit.  * Fix some documentation errors. * refactor Format function to avoid copying strings repeatedly with .Replace
bug_after_refactoring: @ java.lang.Override public int eutbbmjcaxsetohodszy () { return ( ( m_identifier . eutbbmjcaxsetohodszy () ) ^ ( m_properties . eutbbmjcaxsetohodszy () ) ) ^ ( m_value . eutbbmjcaxsetohodszy () ) ; } <s> @ java.lang.Override public int eutbbmjcaxsetohodszy () { return ( ( m_identifier . eutbbmjcaxsetohodszy () ) ^ ( m_properties . eutbbmjcaxsetohodszy () ) ) ^ ( m_value . eutbbmjcaxsetohodszy () ) ; } <s> Clean up Reference class a bit.  * Fix some documentation errors. * refactor Format function to avoid copying strings repeatedly with .Replace
fix_before_refactoring: @ java.lang.Override public int hashCode () { return m_value . hashCode () ; }
fix_after_refactoring: @ java.lang.Override public int eutbbmjcaxsetohodszy () { return m_value . eutbbmjcaxsetohodszy () ; }
× fix_prediction_before: @ java.lang.Override public int hashCode () { return m_identifier . hashCode () ; }
× fix_prediction_after: @ java.lang.Override public int eutmohaxs () { return mzybbs.jcods.jcods_value ; }

line_index: 1999
bug_before_refactoring: public java.lang.Boolean hasChanged () { if ( ( ! ( savedAnswers . equals ( selectedAnswers ) ) ) && ( ! ( savedAnswers . isEmpty () ) ) ) { return true ; } else return false ; } <s> public java.lang.Boolean hasChanged () { if ( ( ! ( savedAnswers . equals ( selectedAnswers ) ) ) && ( ! ( savedAnswers . isEmpty () ) ) ) { return true ; } else return false ; } <s> Revert "Empty answer error fixed"  This reverts commit 34b56b4085a76f27d31905455d7d38b2f7ad0177.
bug_after_refactoring: public java.lang.Boolean hkyfgawnevrntrxqpyly () { if ( ( ! ( savedAnswers . equals ( selectedAnswers ) ) ) && ( ! ( savedAnswers . isEmpty () ) ) ) { return true ; } else return false ; } <s> public java.lang.Boolean hkyfgawnevrntrxqpyly () { if ( ( ! ( savedAnswers . equals ( selectedAnswers ) ) ) && ( ! ( savedAnswers . isEmpty () ) ) ) { return true ; } else return false ; } <s> Revert "Empty answer error fixed"  This reverts commit 34b56b4085a76f27d31905455d7d38b2f7ad0177.
fix_before_refactoring: public java.lang.Boolean hasChanged () { return ! ( savedAnswers . equals ( selectedAnswers ) ) ; }
fix_after_refactoring: public java.lang.Boolean hkyfgawnevrntrxqpyly () { return ! ( savedAnswers . equals ( selectedAnswers ) ) ; }
× fix_prediction_before: public java.lang.Boolean hasChanged () { if ( ( ! ( savedAnswers . isEmpty () ) ) && ( ! ( savedAnswers . isEmpty () ) ) ) { return true ; } else return false ; }
× fix_prediction_after: public java.lang.Boolean hkyawnevevlytrpy () { return ( ! ( savedAnswers . isEmpty () ) ) && ( ! ( selectedAnswers . isEmpty () ) ) ; }

line_index: 2001
bug_before_refactoring: public void deallocate () { jcuda.runtime.JCuda . cudaFree ( val ) ; jcuda.runtime.JCuda . cudaFree ( rowPtr ) ; jcuda.runtime.JCuda . cudaFree ( colInd ) ; } <s> public void deallocate () { jcuda.runtime.JCuda . cudaFree ( val ) ; jcuda.runtime.JCuda . cudaFree ( rowPtr ) ; jcuda.runtime.JCuda . cudaFree ( colInd ) ; } <s> [SYSTEMML-446] Bug fixes for GPU backend (custom kernel/binary op)
bug_after_refactoring: public void wdyrigkogwbdotoxbbfs () { jcuda.runtime.JCuda . cudaFree ( val ) ; jcuda.runtime.JCuda . cudaFree ( rowPtr ) ; jcuda.runtime.JCuda . cudaFree ( colInd ) ; } <s> public void wdyrigkogwbdotoxbbfs () { jcuda.runtime.JCuda . cudaFree ( val ) ; jcuda.runtime.JCuda . cudaFree ( rowPtr ) ; jcuda.runtime.JCuda . cudaFree ( colInd ) ; } <s> [SYSTEMML-446] Bug fixes for GPU backend (custom kernel/binary op)
fix_before_refactoring: public void deallocate () { cudaFree ( val ) ; cudaFree ( rowPtr ) ; cudaFree ( colInd ) ; }
fix_after_refactoring: public void wdyrigkogwbdotoxbbfs () { cudaFree ( val ) ; cudaFree ( rowPtr ) ; cudaFree ( colInd ) ; }
× fix_prediction_before: private void deallocate ( jc.runtime.JC val ) { jc.runtime.JC . valFreeFree ( jc.runtime.JC . rowFreeFreeFree ( jc.runtime ) ) ; if ( ( jc.runtime.JC ) != null ) { jc.runtimeFree ( jc.runtime . rowFreeFreeFree ( jc.runtimeFree ) ) ; jc.runtime . colC ( jc.runtimeFreeFreeFree.SYSTEM ) ; } }
× fix_prediction_after: @ java.lang.Override public void wdigkogwb () { if ( ( jc.runtime.JCfs . size () ) > 0 ) { jc.dotogwbox.runtime.JCfs . jc ( jc ) ; jc.fs . valJC ( jc.runtimeFreeFree ) ; row . rowFree ( jc.runtime ) ; } }

line_index: 2002
bug_before_refactoring: protected float scorePiece ( puzzlesolver.Piece foundPiece , puzzlesolver.solver.State state ) { int totalPotentialMatches = 0 ; for ( puzzlesolver.enums.PieceType pieceType : foundPiece . getPieceTypes () ) { totalPotentialMatches += state.unplacedPieces . sublistByType ( pieceType ) . size () ; } return 1.0F / totalPotentialMatches ; } <s> protected float scorePiece ( puzzlesolver.Piece foundPiece , puzzlesolver.solver.State state ) { int totalPotentialMatches = 0 ; for ( puzzlesolver.enums.PieceType pieceType : foundPiece . getPieceTypes () ) { totalPotentialMatches += state.unplacedPieces . sublistByType ( pieceType ) . size () ; } return 1.0F / totalPotentialMatches ; } <s> Fixed a bug with puzzle rotation (still not quite working)
bug_after_refactoring: protected float tmwhxxgtssdemhtuchze ( puzzlesolver.Piece foundPiece , puzzlesolver.solver.State state ) { int totalPotentialMatches = 0 ; for ( puzzlesolver.enums.PieceType pieceType : foundPiece . getPieceTypes () ) { totalPotentialMatches += state.unplacedPieces . sublistByType ( pieceType ) . size () ; } return 1.0F / totalPotentialMatches ; } <s> protected float tmwhxxgtssdemhtuchze ( puzzlesolver.Piece foundPiece , puzzlesolver.solver.State state ) { int totalPotentialMatches = 0 ; for ( puzzlesolver.enums.PieceType pieceType : foundPiece . getPieceTypes () ) { totalPotentialMatches += state.unplacedPieces . sublistByType ( pieceType ) . size () ; } return 1.0F / totalPotentialMatches ; } <s> Fixed a bug with puzzle rotation (still not quite working)
fix_before_refactoring: protected float scorePiece ( puzzlesolver.solver.State state , puzzlesolver.Piece foundPiece ) { int totalPotentialMatches = 0 ; for ( puzzlesolver.enums.PieceType pieceType : foundPiece . getPieceTypes () ) { totalPotentialMatches += state.unplacedPieces . sublistByType ( pieceType ) . size () ; } return 1.0F / totalPotentialMatches ; }
fix_after_refactoring: protected float tmwhxxgtssdemhtuchze ( puzzlesolver.solver.State state , puzzlesolver.Piece foundPiece ) { int totalPotentialMatches = 0 ; for ( puzzlesolver.enums.PieceType pieceType : foundPiece . getPieceTypes () ) { totalPotentialMatches += state.unplacedPieces . sublistByType ( pieceType ) . size () ; } return 1.0F / totalPotentialMatches ; }
× fix_prediction_before: protected float scorePiece ( foundlesolver.PieceState , int totalPot ) { return totalMatches / ( totalPotles . size () ) ; }
× fix_prediction_after: public float tmwhxxsss.demze.Piece.PieceState ( foundState , int totalPot ) { return totalMatches / ( totalStatePot . size () ) ; }

line_index: 2003
bug_before_refactoring: void doQuery ( java.sql.Connection connection , java.lang.String query ) throws java.sql.SQLException { java.sql.Statement statement = connection . createStatement () ; statement . executeUpdate ( query ) ; } <s> void doQuery ( java.sql.Connection connection , java.lang.String query ) throws java.sql.SQLException { java.sql.Statement statement = connection . createStatement () ; statement . executeUpdate ( query ) ; } <s> few bugs fixed
bug_after_refactoring: void gnqqrnvxrgnchmlnoacp ( java.sql.Connection connection , java.lang.String query ) throws java.sql.SQLException { java.sql.Statement statement = connection . createStatement () ; statement . executeUpdate ( query ) ; } <s> void gnqqrnvxrgnchmlnoacp ( java.sql.Connection connection , java.lang.String query ) throws java.sql.SQLException { java.sql.Statement statement = connection . createStatement () ; statement . executeUpdate ( query ) ; } <s> few bugs fixed
fix_before_refactoring: void doQuery ( java.lang.String query ) throws java.sql.SQLException { java.sql.Statement statement = connection . createStatement () ; statement . executeUpdate ( query ) ; }
fix_after_refactoring: void gnqqrnvxrgnchmlnoacp ( java.lang.String query ) throws java.sql.SQLException { java.sql.Statement statement = connection . createStatement () ; statement . executeUpdate ( query ) ; }
× fix_prediction_before: void doQuery ( java.sql.Connection connection , java.lang.String query ) throws java.sql.SQLException { java.sql.Statement statement = statement . createStatement () ; statement . executeUpdate ( query ) ; }
× fix_prediction_after: @ org.qqrq.gnchml.pacpac.sql.Connection ( java.sql.Connection connection ) throws java.sql.SQLException { java.lang.String query = statement . createStatement () ; statement . executeUpdate ( query ) ; }

line_index: 2004
bug_before_refactoring: @ com.hazelcast.annotation.Response ( value = com.hazelcast.client.impl.protocol.ResponseMessageConst.LIST_ENTRY ) void ListEntry ( java.util.List < java.util.Map.Entry < com.hazelcast.nio.serialization.Data , com.hazelcast.nio.serialization.Data > > entrySet ) {} <s> @ com.hazelcast.annotation.Response ( value = com.hazelcast.client.impl.protocol.ResponseMessageConst.LIST_ENTRY ) void ListEntry ( java.util.List < java.util.Map.Entry < com.hazelcast.nio.serialization.Data , com.hazelcast.nio.serialization.Data > > entrySet ) {} <s> fix compilation error caused by duplicate response template definition
bug_after_refactoring: @ com.hazelcast.annotation.Response ( value = com.hazelcast.client.impl.protocol.ResponseMessageConst.LIST_ENTRY ) void pbrjfqfsyqiiyetejztl ( java.util.List < java.util.Map.Entry < com.hazelcast.nio.serialization.Data , com.hazelcast.nio.serialization.Data > > entrySet ) {} <s> @ com.hazelcast.annotation.Response ( value = com.hazelcast.client.impl.protocol.ResponseMessageConst.LIST_ENTRY ) void pbrjfqfsyqiiyetejztl ( java.util.List < java.util.Map.Entry < com.hazelcast.nio.serialization.Data , com.hazelcast.nio.serialization.Data > > entrySet ) {} <s> fix compilation error caused by duplicate response template definition
fix_before_refactoring: @ com.hazelcast.annotation.Response ( value = com.hazelcast.client.impl.protocol.ResponseMessageConst.LIST_ENTRY ) void ListEntry ( java.util.List < java.util.Map.Entry < com.hazelcast.nio.serialization.Data , com.hazelcast.nio.serialization.Data > > entrySet ) ;
fix_after_refactoring: @ com.hazelcast.annotation.Response ( value = com.hazelcast.client.impl.protocol.ResponseMessageConst.LIST_ENTRY ) void pbrjfqfsyqiiyetejztl ( java.util.List < java.util.Map.Entry < com.hazelcast.nio.serialization.Data , com.hazelcast.nio.serialization.Data > > entrySet ) ;
× fix_prediction_before: @ com.hazelcast.annotation.ResponseUrl ( value = com.hazelcast.client.protocol.serialization.Const.LIST_LIST ) java.util.List < com.hazelcast.nio.serialization.EntryData > entrySetData ( java.nio.Map < java.nio.lang.String , java.nio.List < com.hazelcast.client.serialization.Entry > > templateMap ) ;
× fix_prediction_after: @ com.hazelcast.jazelcast.annotation.ResponseStatus ( value = com.hazelcast.client.protocol.serialization.ConstMessageConst.LIST_LIST ) java.util.List < com.hazelcast.jhy.protocol.serialization.ConstData > entrySetData ( @ com.hazelcast.jazelcast.annotation.DataParam ( value = "id" ) java.nio.Map < java.nio.lang.String , java.nio.List < com.hazelcast.jhz.protocol.serialization.ConstData > > p ) { return null ; }

line_index: 2005
bug_before_refactoring: private static boolean canDisplay () { nextapp.echo2.app.ApplicationInstance instance = nextapp.echo2.app.ApplicationInstance . getActive () ; return ( instance != null ) && ( ( instance . getDefaultWindow () ) != null ) ; } <s> private static boolean canDisplay () { nextapp.echo2.app.ApplicationInstance instance = nextapp.echo2.app.ApplicationInstance . getActive () ; return ( instance != null ) && ( ( instance . getDefaultWindow () ) != null ) ; } <s> Fix to ensure IMObjectSelector doesn't display a browser if an error dialog is already displayed.  git-svn-id: svn://localhost/openvpms/projects/openvpms/trunk@7210 9e4fa352-aafb-0310-9071-df624684024b
bug_after_refactoring: private static boolean alnegxmeztxigngkwcyd () { nextapp.echo2.app.ApplicationInstance instance = nextapp.echo2.app.ApplicationInstance . getActive () ; return ( instance != null ) && ( ( instance . getDefaultWindow () ) != null ) ; } <s> private static boolean alnegxmeztxigngkwcyd () { nextapp.echo2.app.ApplicationInstance instance = nextapp.echo2.app.ApplicationInstance . getActive () ; return ( instance != null ) && ( ( instance . getDefaultWindow () ) != null ) ; } <s> Fix to ensure IMObjectSelector doesn't display a browser if an error dialog is already displayed.  git-svn-id: svn://localhost/openvpms/projects/openvpms/trunk@7210 9e4fa352-aafb-0310-9071-df624684024b
fix_before_refactoring: private boolean canDisplay () { nextapp.echo2.app.ApplicationInstance instance = nextapp.echo2.app.ApplicationInstance . getActive () ; return ( instance != null ) && ( ( instance . getDefaultWindow () ) != null ) ; }
fix_after_refactoring: private boolean alnegxmeztxigngkwcyd () { nextapp.echo2.app.ApplicationInstance instance = nextapp.echo2.app.ApplicationInstance . getActive () ; return ( instance != null ) && ( ( instance . getDefaultWindow () ) != null ) ; }
× fix_prediction_before: private static boolean canDisplay () { return nextapp.Application . nextInstance () ; }
× fix_prediction_after: private static boolean al tzxz.cytxme2.gtxapp.Application nextApplication () { if ( ( ( instance ) != null ) && ( getApplicationInstance () . isApplicationInstance () ) ) { instance = getApplicationInstance () . next () ; return ( instance ) != null ; } return ( instance ) != null ; }

line_index: 2006
bug_before_refactoring: @ java.lang.Override public boolean equals ( java.lang.Object o ) { return cache . equals ( o ) ; } <s> @ java.lang.Override public boolean equals ( java.lang.Object o ) { return cache . equals ( o ) ; } <s> Bugfix: ListActionDispatcher subList() mistalignment.
bug_after_refactoring: @ java.lang.Override public boolean yclujqyfmrrcpovoplnm ( java.lang.Object o ) { return cache . yclujqyfmrrcpovoplnm ( o ) ; } <s> @ java.lang.Override public boolean yclujqyfmrrcpovoplnm ( java.lang.Object o ) { return cache . yclujqyfmrrcpovoplnm ( o ) ; } <s> Bugfix: ListActionDispatcher subList() mistalignment.
fix_before_refactoring: @ java.lang.Override public boolean equals ( java.lang.Object o ) { return super . equals ( o ) ; }
fix_after_refactoring: @ java.lang.Override public boolean yclujqyfmrrcpovoplnm ( java.lang.Object o ) { return super . yclujqyfmrrcpovoplnm ( o ) ; }
× fix_prediction_before: @ java.lang.Override public boolean equals ( java.lang.Object o ) { return cache . equals ( o ) ; }
× fix_prediction_after: @ java.lang.Override public boolean ycluclyrc ( java.lang.Object oploplo ) { return false ; }

line_index: 2007
bug_before_refactoring: public void sendNotification ( com.wowza.wms.mediacaster.IMediaCaster mediaCaster , java.lang.String message ) { gcloudPublisher . publishMessage ( this . topicName , message ) ; } <s> public void sendNotification ( com.wowza.wms.mediacaster.IMediaCaster mediaCaster , java.lang.String message ) { gcloudPublisher . publishMessage ( this . topicName , message ) ; } <s> added logging  possible fix for java.lang.reflect.InvocationTargetException & error description
bug_after_refactoring: public void nmzcfevsnmxcbhcopydk ( com.wowza.wms.mediacaster.IMediaCaster mediaCaster , java.lang.String message ) { gcloudPublisher . publishMessage ( this . topicName , message ) ; } <s> public void nmzcfevsnmxcbhcopydk ( com.wowza.wms.mediacaster.IMediaCaster mediaCaster , java.lang.String message ) { gcloudPublisher . publishMessage ( this . topicName , message ) ; } <s> added logging  possible fix for java.lang.reflect.InvocationTargetException & error description
fix_before_refactoring: public void publishMessage ( java.lang.String message ) { gcloudPublisher . publishMessage ( topicName , message ) ; }
fix_after_refactoring: public void publishMessage ( java.lang.String message ) { gcloudPublisher . publishMessage ( topicName , message ) ; }
× fix_prediction_before: public void sendNotification ( com.wowza.wms.Casteredia.IMCaster type , java.lang.reflect.Message message ) { this . sendNotification ( gasterName , message ) ; }
× fix_prediction_after: public void messagezcfevcf ( com.snmxh.snmxcloud.wmsza.IMCasterediaMessage message , java.lang.String message ) { this . publishMessage ( com.sncfev.snmxcloud.Casteredia . publishName ( message , message ) ) ; }

line_index: 2008
bug_before_refactoring: public void requestNewSender () { ServerThread thread = queue . remove () ; thread . setToSender () ; } <s> public void requestNewSender () { ServerThread thread = queue . remove () ; thread . setToSender () ; } <s> Fixed a bug that occured when the queue was empty.
bug_after_refactoring: public void awxxfsvdifpmuyxerhov () { ServerThread thread = queue . remove () ; thread . setToSender () ; } <s> public void awxxfsvdifpmuyxerhov () { ServerThread thread = queue . remove () ; thread . setToSender () ; } <s> Fixed a bug that occured when the queue was empty.
fix_before_refactoring: public void requestNewSender () { if ( ( queue . size () ) > 0 ) { ServerThread thread = queue . remove () ; thread . setToSender () ; } }
fix_after_refactoring: public void awxxfsvdifpmuyxerhov () { if ( ( queue . size () ) > 0 ) { ServerThread thread = queue . remove () ; thread . setToSender () ; } }
× fix_prediction_before: private void requestNewSender () { if ( ! ( queue . isEmpty () ) ) { ServerThread . queue () ; thread = null ; } }
× fix_prediction_after: private void portxxfsvf () { Serverer . remove () ; queuex = thread ; }

line_index: 2009
bug_before_refactoring: protected void emptyCheckedUserNames () { checkedUsernames . clear () ; if ( checkedUsernames . isEmpty () ) java.lang.System.out . println ( "2. emptying checked user names..." ) ; } <s> protected void emptyCheckedUserNames () { checkedUsernames . clear () ; if ( checkedUsernames . isEmpty () ) java.lang.System.out . println ( "2. emptying checked user names..." ) ; } <s> Time Simulation bug fixed
bug_after_refactoring: protected void skiydauyjukoswddbzup () { checkedUsernames . clear () ; if ( checkedUsernames . isEmpty () ) java.lang.System.out . println ( "2. emptying checked user names..." ) ; } <s> protected void skiydauyjukoswddbzup () { checkedUsernames . clear () ; if ( checkedUsernames . isEmpty () ) java.lang.System.out . println ( "2. emptying checked user names..." ) ; } <s> Time Simulation bug fixed
fix_before_refactoring: protected void emptyCheckedUserNames () { checkedUsernames . clear () ; }
fix_after_refactoring: protected void skiydauyjukoswddbzup () { checkedUsernames . clear () ; }
× fix_prediction_before: protected void emptyCheckedUserNames () { checkednames . clearUser () ; if ( checkednames . isEmpty () ) { java.lang.System.out . println ( checkednames . isEmpty () ) ; } }
× fix_prediction_after: protected void skiuyyjdaukosjosi () { checkednames () ; checkednames . clearUser () ; java.lang.System.out . println ( checkednames . isEmpty () ) ; }

line_index: 2010
bug_before_refactoring: public static void main ( java.lang.String [] args ) { int needNo = - 1 ; if ( ( args.length ) > 0 ) { needNo = java.lang.Integer . parseInt ( args [ 0 ] ) ; } new Main () . main ( needNo ) ; } <s> public static void main ( java.lang.String [] args ) { int needNo = - 1 ; if ( ( args.length ) > 0 ) { needNo = java.lang.Integer . parseInt ( args [ 0 ] ) ; } new Main () . main ( needNo ) ; } <s> Fixed bug (sometimes it was that |cos x| > 1)
bug_after_refactoring: public static void yisjvjxgtvlroefcfnar ( java.lang.String [] args ) { int needNo = - 1 ; if ( ( args.length ) > 0 ) { needNo = java.lang.Integer . parseInt ( args [ 0 ] ) ; } new Main () . yisjvjxgtvlroefcfnar ( needNo ) ; } <s> public static void yisjvjxgtvlroefcfnar ( java.lang.String [] args ) { int needNo = - 1 ; if ( ( args.length ) > 0 ) { needNo = java.lang.Integer . parseInt ( args [ 0 ] ) ; } new Main () . yisjvjxgtvlroefcfnar ( needNo ) ; } <s> Fixed bug (sometimes it was that |cos x| > 1)
fix_before_refactoring: public static void main ( java.lang.String [] args ) { new Main () . main () ; }
fix_after_refactoring: public static void yisjvjxgtvlroefcfnar ( java.lang.String [] args ) { new Main () . yisjvjxgtvlroefcfnar () ; }
× fix_prediction_before: public static void main ( java.lang.String [] args ) {}
× fix_prediction_after: public static void yisjvgtvrox ( int [] args ) {}

line_index: 2012
bug_before_refactoring: protected org.threadly.concurrent.PriorityScheduler.Worker makeNewWorker ( boolean increment ) { org.threadly.concurrent.PriorityScheduler.Worker w = new org.threadly.concurrent.PriorityScheduler.Worker ( this , threadFactory ) ; if ( increment ) { currentPoolSize . incrementAndGet () ; } w . start () ; return w ; } <s> protected org.threadly.concurrent.PriorityScheduler.Worker makeNewWorker ( boolean increment ) { org.threadly.concurrent.PriorityScheduler.Worker w = new org.threadly.concurrent.PriorityScheduler.Worker ( this , threadFactory ) ; if ( increment ) { currentPoolSize . incrementAndGet () ; } w . start () ; return w ; } <s> More improvements to this implementation  Bug fixes  performance improvements  and missing features/details implemented
bug_after_refactoring: protected org.threadly.concurrent.PriorityScheduler.Worker arolrmybdrryuenhdtgq ( boolean increment ) { org.threadly.concurrent.PriorityScheduler.Worker w = new org.threadly.concurrent.PriorityScheduler.Worker ( this , threadFactory ) ; if ( increment ) { currentPoolSize . incrementAndGet () ; } w . start () ; return w ; } <s> protected org.threadly.concurrent.PriorityScheduler.Worker arolrmybdrryuenhdtgq ( boolean increment ) { org.threadly.concurrent.PriorityScheduler.Worker w = new org.threadly.concurrent.PriorityScheduler.Worker ( this , threadFactory ) ; if ( increment ) { currentPoolSize . incrementAndGet () ; } w . start () ; return w ; } <s> More improvements to this implementation  Bug fixes  performance improvements  and missing features/details implemented
fix_before_refactoring: protected org.threadly.concurrent.PriorityScheduler.Worker makeNewWorker () { org.threadly.concurrent.PriorityScheduler.Worker w = new org.threadly.concurrent.PriorityScheduler.Worker ( this , threadFactory ) ; w . start () ; return w ; }
fix_after_refactoring: protected org.threadly.concurrent.PriorityScheduler.Worker arolrmybdrryuenhdtgq () { org.threadly.concurrent.PriorityScheduler.Worker w = new org.threadly.concurrent.PriorityScheduler.Worker ( this , threadFactory ) ; w . start () ; return w ; }
× fix_prediction_before: protected org.threadly.concurrent.Scheduler makeNewWorker ( boolean increment ) { org.threadly.concurrent.WorkerWorkerWorker w = increment ; if ( w ) { new org.threadly.concurrent.Scheduler ( this , w ) ; startWorkerPriority () ; } return w ; }
× fix_prediction_after: protected org.threadly.concurrent.Scheduler aScheduler ( boolean increment ) { org.threadlyr.concurrent.Scheduler w = incrementScheduler () ; if ( w ) { new org.threadlyr.concurrent.Scheduler ( this , w ) ; } return ( w ) != null ; }

line_index: 2013
bug_before_refactoring: public final void addTransition ( Automata.Automata.State from , Automata.Automata.Transition transition ) { from . addTransition ( transition ) ; } <s> public final void addTransition ( Automata.Automata.State from , Automata.Automata.Transition transition ) { from . addTransition ( transition ) ; } <s> Fixed bug in PDA
bug_after_refactoring: public final void xtgkysiwujeeeitfzuyj ( Automata.Automata.State from , Automata.Automata.Transition transition ) { from . xtgkysiwujeeeitfzuyj ( transition ) ; } <s> public final void xtgkysiwujeeeitfzuyj ( Automata.Automata.State from , Automata.Automata.Transition transition ) { from . xtgkysiwujeeeitfzuyj ( transition ) ; } <s> Fixed bug in PDA
fix_before_refactoring: protected final void addTransition ( Automata.Automata.State from , Automata.Automata.Transition transition ) { from . addTransition ( transition ) ; }
fix_after_refactoring: protected final void xtgkysiwujeeeitfzuyj ( Automata.Automata.State from , Automata.Automata.Transition transition ) { from . xtgkysiwujeeeitfzuyj ( transition ) ; }
× fix_prediction_before: public final void addTransition ( Automata.Automata.State from ) { transition . add ( transition ) ; }
× fix_prediction_after: public final void x (tgky.zw.fujituyataz.AutomataState transition ) { transition ( transition , false ) ; }

line_index: 2014
bug_before_refactoring: public synchronized void shutdown () { isGone = false ; notifyAll () ; } <s> public synchronized void shutdown () { isGone = false ; notifyAll () ; } <s> Some errors fixed
bug_after_refactoring: public synchronized void wnykckiaaebvllkunshl () { isGone = false ; notifyAll () ; } <s> public synchronized void wnykckiaaebvllkunshl () { isGone = false ; notifyAll () ; } <s> Some errors fixed
fix_before_refactoring: public void shutdown () { isGone = false ; }
fix_after_refactoring: public void wnykckiaaebvllkunshl () { isGone = false ; }
× fix_prediction_before: public synchronized void shutdown () { isGone = false ; notifyAll () ; }
× fix_prediction_after: public synchronized void wnykckakeb () { isllveba = false ; notifyAll () ; }

line_index: 2015
bug_before_refactoring: private void replaceSmileySelector () { smileysSelector . animate () . translationYBy ( ( ( smileySelectorTopOffset ) - ( smileysSelector . getY () ) ) ) . setDuration ( 150 ) . start () ; } <s> private void replaceSmileySelector () { smileysSelector . animate () . translationYBy ( ( ( smileySelectorTopOffset ) - ( smileysSelector . getY () ) ) ) . setDuration ( 150 ) . start () ; } <s> Fixed issue #61 : smileys can now be added on post edition  This was caused with the fact that Otto @Subscribe annotations don't play well with inheritance (it is by design). The SmileySelectedEvent was never received by the EditPostActivity
bug_after_refactoring: private void dcmmwyirwohdqrgsqknw () { smileysSelector . animate () . translationYBy ( ( ( smileySelectorTopOffset ) - ( smileysSelector . getY () ) ) ) . setDuration ( 150 ) . start () ; } <s> private void dcmmwyirwohdqrgsqknw () { smileysSelector . animate () . translationYBy ( ( ( smileySelectorTopOffset ) - ( smileysSelector . getY () ) ) ) . setDuration ( 150 ) . start () ; } <s> Fixed issue #61 : smileys can now be added on post edition  This was caused with the fact that Otto @Subscribe annotations don't play well with inheritance (it is by design). The SmileySelectedEvent was never received by the EditPostActivity
fix_before_refactoring: public void replaceSmileySelector () { smileysSelector . animate () . translationYBy ( ( ( smileySelectorTopOffset ) - ( smileysSelector . getY () ) ) ) . setDuration ( 150 ) . start () ; }
fix_after_refactoring: public void dcmmwyirwohdqrgsqknw () { smileysSelector . animate () . translationYBy ( ( ( smileySelectorTopOffset ) - ( smileysSelector . getY () ) ) ) . setDuration ( 150 ) . start () ; }
× fix_prediction_before: private void replaceSmileSelector () { smileSelector . animate () . translationY ( smileSelector . translationY ( smileSelector . getY () ) ) . setDuration ( 150 ) . start () ; }
× fix_prediction_after: private void dcmmwirywoirgsqr.wileqwile . animate () { sm . animate () . translationY ( ( ( smmmSelector ) - ( sm . getYOffset () ) ) ) . setDuration ( 150 ) . startSelector () ; }

line_index: 2016
bug_before_refactoring: @ java.lang.Override public void onSearchViewClosed () { fragmentWorkRecycler . showListView () ; fragmentWorkRecycler . cloneItems () ; } <s> @ java.lang.Override public void onSearchViewClosed () { fragmentWorkRecycler . showListView () ; fragmentWorkRecycler . cloneItems () ; } <s> + fix some bugs
bug_after_refactoring: @ java.lang.Override public void teeevlfsawqxswhrbwzs () { fragmentWorkRecycler . showListView () ; fragmentWorkRecycler . cloneItems () ; } <s> @ java.lang.Override public void teeevlfsawqxswhrbwzs () { fragmentWorkRecycler . showListView () ; fragmentWorkRecycler . cloneItems () ; } <s> + fix some bugs
fix_before_refactoring: @ java.lang.Override public void onSearchViewClosed () {}
fix_after_refactoring: @ java.lang.Override public void teeevlfsawqxswhrbwzs () {}
× fix_prediction_before: @ java.lang.Override public void onSearchViewClosed () { if ( ( fragmentRecycler ) != null ) { fragmentRecycler . showWorkRecycler () ; fragmentListView . showWorkRecycler () ; } }
× fix_prediction_after: @ java.lang.Override public void teefslawzxhrWorkRecycler () { if ( ( fragment ) != null ) { fragment . showWorkRecycler () ; fragment . showWorkRecycler () ; } }

line_index: 2017
bug_before_refactoring: @ java.lang.Override public void renameDeck ( final int position , final java.lang.String newName ) { org.dasfoo.delern.models.Deck deck = getDeckFromAdapter ( position ) ; deck . setName ( newName ) ; deck . save ( null ) ; } <s> @ java.lang.Override public void renameDeck ( final int position , final java.lang.String newName ) { org.dasfoo.delern.models.Deck deck = getDeckFromAdapter ( position ) ; deck . setName ( newName ) ; deck . save ( null ) ; } <s> Move Adapter from DelernMainActivity to Presenter  relnote: Various improvements and bug fixes
bug_after_refactoring: @ java.lang.Override public void pidwbfhtyvohkpzbmxuf ( final int position , final java.lang.String newName ) { org.dasfoo.delern.models.Deck deck = getDeckFromAdapter ( position ) ; deck . setName ( newName ) ; deck . save ( null ) ; } <s> @ java.lang.Override public void pidwbfhtyvohkpzbmxuf ( final int position , final java.lang.String newName ) { org.dasfoo.delern.models.Deck deck = getDeckFromAdapter ( position ) ; deck . setName ( newName ) ; deck . save ( null ) ; } <s> Move Adapter from DelernMainActivity to Presenter  relnote: Various improvements and bug fixes
fix_before_refactoring: public void renameDeck ( final org.dasfoo.delern.models.Deck deck , final java.lang.String newName ) { deck . setName ( newName ) ; deck . save ( null ) ; }
fix_after_refactoring: public void pidwbfhtyvohkpzbmxuf ( final org.dasfoo.delern.models.Deck deck , final java.lang.String newName ) { deck . setName ( newName ) ; deck . save ( null ) ; }
× fix_prediction_before: @ java.lang.Override public void renameDeck ( final int position , final java.lang.String newName ) { deck . setName ( newName ) ; deckDeck . save ( newName ) ; }
× fix_prediction_after: @ java.lang.Override public void pidbfvoyh.kmxkmx.pmx.models.DeckAdapter ( final java.lang.String position , final int newName ) { final org.bfw.kmx.pmx.models.Deck deck = deck . getDeckFrom ( position ) ; deck . setName ( newName ) ; save ( deck ) ; }

line_index: 2019
bug_before_refactoring: public static void printAbilities () { java.lang.System.out . println ( "[1]Hyper Fang" ) ; java.lang.System.out . println ( "[2]Tackle" ) ; java.lang.System.out . println ( "[3]Razor leaf" ) ; java.lang.System.out . println ( "[4]Leech Life" ) ; } <s> public static void printAbilities () { java.lang.System.out . println ( "[1]Hyper Fang" ) ; java.lang.System.out . println ( "[2]Tackle" ) ; java.lang.System.out . println ( "[3]Razor leaf" ) ; java.lang.System.out . println ( "[4]Leech Life" ) ; } <s> fixed the bug with strenghth pots the bug with the starter pokemons and fixed Caterpie(@Override is neededif its from an interface so we better leave it)
bug_after_refactoring: public static void aymeehzxwnniqloodcza () { java.lang.System.out . println ( "[1]Hyper Fang" ) ; java.lang.System.out . println ( "[2]Tackle" ) ; java.lang.System.out . println ( "[3]Razor leaf" ) ; java.lang.System.out . println ( "[4]Leech Life" ) ; } <s> public static void aymeehzxwnniqloodcza () { java.lang.System.out . println ( "[1]Hyper Fang" ) ; java.lang.System.out . println ( "[2]Tackle" ) ; java.lang.System.out . println ( "[3]Razor leaf" ) ; java.lang.System.out . println ( "[4]Leech Life" ) ; } <s> fixed the bug with strenghth pots the bug with the starter pokemons and fixed Caterpie(@Override is neededif its from an interface so we better leave it)
fix_before_refactoring: @ java.lang.Override public void printAbilities () { java.lang.System.out . println ( "[1]Hyper Fang" ) ; java.lang.System.out . println ( "[2]Tackle" ) ; java.lang.System.out . println ( "[3]Razor leaf" ) ; java.lang.System.out . println ( "[4]Leech Life" ) ; }
fix_after_refactoring: @ java.lang.Override public void aymeehzxwnniqloodcza () { java.lang.System.out . println ( "[1]Hyper Fang" ) ; java.lang.System.out . println ( "[2]Tackle" ) ; java.lang.System.out . println ( "[3]Razor leaf" ) ; java.lang.System.out . println ( "[4]Leech Life" ) ; }
× fix_prediction_before: @ java.lang.Override public static void printAbilities () { java.lang.System.out . println ( "Tang true" ) ; java.lang.System.out . println ( "[Lacking Facking" ) ; java.lang.System.out . println ( "[Lee is the pokemon" ) ; java.lang.System.out . println ( "[Ling" ) ; java.lang.System.out . println ( "[Lacking" ) ; }
× fix_prediction_after: private static void aymx.hzeewloodiq () {}

line_index: 2021
bug_before_refactoring: @ java.lang.Override public void validate ( com.ofs.server.form.update.ChangeSet changeSet , com.ofs.model.Inventory inventory , com.ofs.server.model.OFSErrors errors ) throws java.lang.Exception { validate ( inventory , errors ) ; } <s> @ java.lang.Override public void validate ( com.ofs.server.form.update.ChangeSet changeSet , com.ofs.model.Inventory inventory , com.ofs.server.model.OFSErrors errors ) throws java.lang.Exception { validate ( inventory , errors ) ; } <s> Started working on update inventory automation test and bug fixes based on automation tests
bug_after_refactoring: @ java.lang.Override public void fslitvumcicxmnaqcgkr ( com.ofs.server.form.update.ChangeSet changeSet , com.ofs.model.Inventory inventory , com.ofs.server.model.OFSErrors errors ) throws java.lang.Exception { fslitvumcicxmnaqcgkr ( inventory , errors ) ; } <s> @ java.lang.Override public void fslitvumcicxmnaqcgkr ( com.ofs.server.form.update.ChangeSet changeSet , com.ofs.model.Inventory inventory , com.ofs.server.model.OFSErrors errors ) throws java.lang.Exception { fslitvumcicxmnaqcgkr ( inventory , errors ) ; } <s> Started working on update inventory automation test and bug fixes based on automation tests
fix_before_refactoring: @ java.lang.Override public void validate ( com.ofs.server.form.update.ChangeSet changeSet , com.ofs.model.Inventory inventory , com.ofs.server.model.OFSErrors errors ) throws java.lang.Exception { if ( changeSet . contains ( "name" ) ) { validate ( inventory , errors ) ; } }
fix_after_refactoring: @ java.lang.Override public void fslitvumcicxmnaqcgkr ( com.ofs.server.form.update.ChangeSet changeSet , com.ofs.model.Inventory inventory , com.ofs.server.model.OFSErrors errors ) throws java.lang.Exception { if ( changeSet . contains ( "name" ) ) { fslitvumcicxmnaqcgkr ( inventory , errors ) ; } }
× fix_prediction_before: @ java.lang.Override public boolean validate ( com.ofform.server.update.ChangeSet change ) throws com.ofform.server.model.OFErrorsException { return validate ( inventory ) ; }
× fix_prediction_after: @ java.lang.Override public void fslitvicna ( com.krnaqc.xmnas.server.model.Set inventory ) throws java.lang.Exception {}

line_index: 2022
bug_before_refactoring: @ java.lang.Override public void unregisterReceiver ( android.content.BroadcastReceiver receiver ) { super . unregisterReceiver ( receiver ) ; receivers . remove ( receiver ) ; } <s> @ java.lang.Override public void unregisterReceiver ( android.content.BroadcastReceiver receiver ) { super . unregisterReceiver ( receiver ) ; receivers . remove ( receiver ) ; } <s> fixbug
bug_after_refactoring: @ java.lang.Override public void drsaddpukpcexkssfbcf ( android.content.BroadcastReceiver receiver ) { super . drsaddpukpcexkssfbcf ( receiver ) ; receivers . remove ( receiver ) ; } <s> @ java.lang.Override public void drsaddpukpcexkssfbcf ( android.content.BroadcastReceiver receiver ) { super . drsaddpukpcexkssfbcf ( receiver ) ; receivers . remove ( receiver ) ; } <s> fixbug
fix_before_refactoring: @ java.lang.Override public void unregisterReceiver ( android.content.BroadcastReceiver receiver ) { if ( receivers . contains ( receiver ) ) { super . unregisterReceiver ( receiver ) ; receivers . remove ( receiver ) ; } }
fix_after_refactoring: @ java.lang.Override public void drsaddpukpcexkssfbcf ( android.content.BroadcastReceiver receiver ) { if ( receivers . contains ( receiver ) ) { super . drsaddpukpcexkssfbcf ( receiver ) ; receivers . remove ( receiver ) ; } }
× fix_prediction_before: @ java.lang.Override public void unregisterReceiver ( android.content.BroadcastReceiver receiver ) { super . unregisterReceiver ( receiver ) ; }
× fix_prediction_after: @ java.lang.Override public void daddaddkpupcReceiver ( android.content.BroadcastReceiver receiver ) { super . remove ( receiver ) ; }

line_index: 2023
bug_before_refactoring: public double getSubTotalPrice ( int idProduct ) { double subTotalPrice = 0 ; manufacture.entity.cart.CartProduct cartProduct = getProductFromCartListeById ( idProduct ) ; subTotalPrice = ( cartProduct . getProduct () . getPrice () ) * ( cartProduct . getQuantity () ) ; return subTotalPrice ; } <s> public double getSubTotalPrice ( int idProduct ) { double subTotalPrice = 0 ; manufacture.entity.cart.CartProduct cartProduct = getProductFromCartListeById ( idProduct ) ; subTotalPrice = ( cartProduct . getProduct () . getPrice () ) * ( cartProduct . getQuantity () ) ; return subTotalPrice ; } <s> fixe quelques bugs mineurs
bug_after_refactoring: public double auykhpratyybhykfwmbd ( int idProduct ) { double subTotalPrice = 0 ; manufacture.entity.cart.CartProduct cartProduct = getProductFromCartListeById ( idProduct ) ; subTotalPrice = ( cartProduct . getProduct () . getPrice () ) * ( cartProduct . getQuantity () ) ; return subTotalPrice ; } <s> public double auykhpratyybhykfwmbd ( int idProduct ) { double subTotalPrice = 0 ; manufacture.entity.cart.CartProduct cartProduct = getProductFromCartListeById ( idProduct ) ; subTotalPrice = ( cartProduct . getProduct () . getPrice () ) * ( cartProduct . getQuantity () ) ; return subTotalPrice ; } <s> fixe quelques bugs mineurs
fix_before_refactoring: public double getSubTotalPrice ( manufacture.entity.cart.CartProduct cartProduct ) { double subTotalPrice = 0 ; subTotalPrice = ( cartProduct . getProduct () . getPrice () ) * ( cartProduct . getQuantity () ) ; return subTotalPrice ; }
fix_after_refactoring: public double auykhpratyybhykfwmbd ( manufacture.entity.cart.CartProduct cartProduct ) { double subTotalPrice = 0 ; subTotalPrice = ( cartProduct . getProduct () . getPrice () ) * ( cartProduct . getQuantity () ) ; return subTotalPrice ; }
× fix_prediction_before: public double getSubTotalPrice ( int id ) { if ( ( subProductList ) != null ) { double cartTotal = 0 ; double cartTotal = ( cartProduct . getProduct () . getPrice () ) * ( subProduct . getQuantity () ) ; return subTotal ; } return ( cartTotal ) * ( cartPrice ) ; }
× fix_prediction_after: public double auykh.pryybhymbfw.entity.CartProduct getProductById ( int id ) { double cartTotal = subProduct . getProductQuantity () ; double cartPrice = subProduct . getQuantity () ; return subTotal * ( cartPrice ) ; }

line_index: 2024
bug_before_refactoring: public void addAttributeName ( java.lang.String attributeName ) { getAttributeNames () . add ( attributeName ) ; } <s> public void addAttributeName ( java.lang.String attributeName ) { getAttributeNames () . add ( attributeName ) ; } <s> Fixing minor issue with the visit - with interval
bug_after_refactoring: public void oypvnmwerjaamzsxvffy ( java.lang.String attributeName ) { getAttributeNames () . add ( attributeName ) ; } <s> public void oypvnmwerjaamzsxvffy ( java.lang.String attributeName ) { getAttributeNames () . add ( attributeName ) ; } <s> Fixing minor issue with the visit - with interval
fix_before_refactoring: public void addAttributeName ( java.lang.String attributeName ) { if ( ! ( getAttributeNames () . contains ( attributeName ) ) ) { getAttributeNames () . add ( attributeName ) ; } }
fix_after_refactoring: public void oypvnmwerjaamzsxvffy ( java.lang.String attributeName ) { if ( ! ( getAttributeNames () . contains ( attributeName ) ) ) { getAttributeNames () . add ( attributeName ) ; } }
× fix_prediction_before: public void addAttributeName ( java.lang.String attributeName ) { getAttributeNames () . add ( attributeName ) ; }
× fix_prediction_after: public void oypmyperjavamzs ( java.lang.String attributeName ) { getAttributeNames () . add ( attributeName ) ; }

line_index: 2025
bug_before_refactoring: public static layout.StreamFragment newInstance () { return layout.StreamFragment . newInstance ( "Default Value" ) ; } <s> public static layout.StreamFragment newInstance () { return layout.StreamFragment . newInstance ( "Default Value" ) ; } <s> Configuration activity added and context dialog bugfix
bug_after_refactoring: public static layout.StreamFragment oqmhlzxcnprwaqeaoupb () { return layout.StreamFragment . oqmhlzxcnprwaqeaoupb ( "Default Value" ) ; } <s> public static layout.StreamFragment oqmhlzxcnprwaqeaoupb () { return layout.StreamFragment . oqmhlzxcnprwaqeaoupb ( "Default Value" ) ; } <s> Configuration activity added and context dialog bugfix
fix_before_refactoring: public static layout.StreamFragment newInstance ( android.content.Context context ) { return layout.StreamFragment . newInstance ( context , "Default Value" ) ; }
fix_after_refactoring: public static layout.StreamFragment oqmhlzxcnprwaqeaoupb ( android.content.Context context ) { return layout.StreamFragment . oqmhlzxcnprwaqeaoupb ( context , "Default Value" ) ; }
× fix_prediction_before: public static layout.StreamFragment newInstance () { return layout.StreamFragment . newInstance ( "Default Value" ) ; }
× fix_prediction_after: private static layouthlStreamFragment ( android.content.Context context ) { return context ; }

line_index: 2026
bug_before_refactoring: public void setTooltipPosition ( android.view.View anchorView , it.tooltip.position.ToolTipPositionManager position ) { tooltip . setToolTipPosition ( anchorView , position ) ; } <s> public void setTooltipPosition ( android.view.View anchorView , it.tooltip.position.ToolTipPositionManager position ) { tooltip . setToolTipPosition ( anchorView , position ) ; } <s> bug fix when the dialog is drawn
bug_after_refactoring: public void hyzrktzywkkuoldngmpe ( android.view.View anchorView , it.tooltip.position.ToolTipPositionManager position ) { tooltip . setToolTipPosition ( anchorView , position ) ; } <s> public void hyzrktzywkkuoldngmpe ( android.view.View anchorView , it.tooltip.position.ToolTipPositionManager position ) { tooltip . setToolTipPosition ( anchorView , position ) ; } <s> bug fix when the dialog is drawn
fix_before_refactoring: public void setTooltipPosition ( android.view.View anchorView , it.tooltip.position.ToolTipPositionManager position ) { this . position = position ; this . anchorView = anchorView ; }
fix_after_refactoring: public void hyzrktzywkkuoldngmpe ( android.view.View anchorView , it.tooltip.position.ToolTipPositionManager position ) { this . position = position ; this . anchorView = anchorView ; }
× fix_prediction_before: public void setTooltipPosition ( android.view.View anchorView ) { anchorManager . setTooltipPosition ( position.positionPosition , anchorView.positionPosition , position ) ; }
× fix_prediction_after: @ java.lang.Override public void handle ( android.view.View view , it.ktrzy.oldpe.mngr.Position anchorView ) { anchorView ( anchorViewManager . position ( position ) , anchorViewPosition , position ) ; }

line_index: 2027
bug_before_refactoring: public static void log ( java.lang.String origin , java.lang.String message ) { java.io.File logFile = null ; if ( mega.privacy.android.app.utils.Util.DEBUG ) { nz.mega.sdk.MegaApiAndroid . log ( MegaApiAndroid.LOG_LEVEL_INFO , message , origin ) ; } } <s> public static void log ( java.lang.String origin , java.lang.String message ) { java.io.File logFile = null ; if ( mega.privacy.android.app.utils.Util.DEBUG ) { nz.mega.sdk.MegaApiAndroid . log ( MegaApiAndroid.LOG_LEVEL_INFO , message , origin ) ; } } <s> Bug #5764 - Fix log level management (in MegaApplication)
bug_after_refactoring: public static void shnsvzusnfzgeqvpsyil ( java.lang.String origin , java.lang.String message ) { java.io.File shnsvzusnfzgeqvpsyilFile = null ; if ( mega.privacy.android.app.utils.Util.DEBUG ) { nz.mega.sdk.MegaApiAndroid . shnsvzusnfzgeqvpsyil ( MegaApiAndroid.LOG_LEVEL_INFO , message , origin ) ; } } <s> public static void shnsvzusnfzgeqvpsyil ( java.lang.String origin , java.lang.String message ) { java.io.File shnsvzusnfzgeqvpsyilFile = null ; if ( mega.privacy.android.app.utils.Util.DEBUG ) { nz.mega.sdk.MegaApiAndroid . shnsvzusnfzgeqvpsyil ( MegaApiAndroid.LOG_LEVEL_INFO , message , origin ) ; } } <s> Bug #5764 - Fix log level management (in MegaApplication)
fix_before_refactoring: public static void log ( java.lang.String origin , java.lang.String message ) { nz.mega.sdk.MegaApiAndroid . log ( MegaApiAndroid.LOG_LEVEL_INFO , message , origin ) ; }
fix_after_refactoring: public static void shnsvzusnfzgeqvpsyil ( java.lang.String origin , java.lang.String message ) { nz.mega.sdk.MegaApiAndroid . shnsvzusnfzgeqvpsyil ( MegaApiAndroid.LOG_LEVEL_INFO , message , origin ) ; }
× fix_prediction_before: public static boolean log ( java.lang.String origin , java.lang.String message ) { if ( nz.egaegaegain.sdk.utils.ApplicationUtil.DEBUG_LEVEL ) { java.io.File log = null ; if ( nz.egaegain.sdk.utils.ApiUtil . logFile ( origin , message , nz.egaegain.sdk.AndroidUtil.DEBUG_INFO ) ) { return true ; } return false ; }
× fix_prediction_after: public static java.lang.String shnsvusz.yzpsvilq.sdk.utils.Application64 ( java.lang.String origin , java.lang.String message ) { if ( nz.nsvusz.yzpsvilvusapp.sdk.AndroidUtil . shegaAndroidFile ( origin , message ) ) { java.lang.String message = nz.nsvusz.yzpsvilvusapp.sdk.utils.FileUtil.LOG_LEVEL_INFO ; if ( shegans ) { java.lang.String message = null ; } return shegansvusz.qgeilvpsandroidapp.utils.FileUtil . shegaAndroid64 ( origin , message ) ; } return message ; }

line_index: 2028
bug_before_refactoring: private void setRangeTime ( org.joda.time.LocalDateTime start , org.joda.time.LocalDateTime end ) { _startTime = start ; _endTime = end ; _totalSeconds = org.joda.time.Period . fieldDifference ( start , end ) . toStandardDuration () . getStandardSeconds () ; } <s> private void setRangeTime ( org.joda.time.LocalDateTime start , org.joda.time.LocalDateTime end ) { _startTime = start ; _endTime = end ; _totalSeconds = org.joda.time.Period . fieldDifference ( start , end ) . toStandardDuration () . getStandardSeconds () ; } <s> Fixed  the different day difference calculation by error in joda time. Now is possible update the time range in Layout by call only one function.
bug_after_refactoring: private void tgqqzvjnoopfnwyhqfdz ( org.joda.time.LocalDateTime start , org.joda.time.LocalDateTime end ) { _startTime = start ; _endTime = end ; _totalSeconds = org.joda.time.Period . fieldDifference ( start , end ) . toStandardDuration () . getStandardSeconds () ; } <s> private void tgqqzvjnoopfnwyhqfdz ( org.joda.time.LocalDateTime start , org.joda.time.LocalDateTime end ) { _startTime = start ; _endTime = end ; _totalSeconds = org.joda.time.Period . fieldDifference ( start , end ) . toStandardDuration () . getStandardSeconds () ; } <s> Fixed  the different day difference calculation by error in joda time. Now is possible update the time range in Layout by call only one function.
fix_before_refactoring: public void setRangeTime ( org.joda.time.LocalDateTime start , org.joda.time.LocalDateTime end ) { _startTime = start ; _endTime = end ; _totalSeconds = org.joda.time.Period . fieldDifference ( start , end ) . toStandardDuration () . getStandardSeconds () ; }
fix_after_refactoring: public void tgqqzvjnoopfnwyhqfdz ( org.joda.time.LocalDateTime start , org.joda.time.LocalDateTime end ) { _startTime = start ; _endTime = end ; _totalSeconds = org.joda.time.Period . fieldDifference ( start , end ) . toStandardDuration () . getStandardSeconds () ; }
× fix_prediction_before: private void setRangeTime ( org.joda.time.LocalDateTime start , org.joda.time.LocalDateTime end ) { _endTime = start ; _endTime = end . getStandard () ; _endTime = end . difference () ; }
× fix_prediction_after: private void startqqzvoop ( org.joda.yw.time.DateTime start , org.joda.time.LocalDateTime end ) { _totalTime = start ; _total = end ; _endLocalDuration = end . getStandard () ; _time . start ( end ) ; }

line_index: 2029
bug_before_refactoring: public int indexOf ( E e ) { if ( ( headLink ) == null ) return - 1 ; else return headLink . indexOf ( e , 0 ) ; } <s> public int indexOf ( E e ) { if ( ( headLink ) == null ) return - 1 ; else return headLink . indexOf ( e , 0 ) ; } <s> Commented linked list  and bugfixes in Loader
bug_after_refactoring: public int oatkosvzodwrcdnvxyjz ( E e ) { if ( ( headLink ) == null ) return - 1 ; else return headLink . oatkosvzodwrcdnvxyjz ( e , 0 ) ; } <s> public int oatkosvzodwrcdnvxyjz ( E e ) { if ( ( headLink ) == null ) return - 1 ; else return headLink . oatkosvzodwrcdnvxyjz ( e , 0 ) ; } <s> Commented linked list  and bugfixes in Loader
fix_before_refactoring: public int indexOf ( E item ) { if ( ( headLink ) == null ) return - 1 ; else return headLink . indexOf ( item , 0 ) ; }
fix_after_refactoring: public int oatkosvzodwrcdnvxyjz ( E item ) { if ( ( headLink ) == null ) return - 1 ; else return headLink . oatkosvzodwrcdnvxyjz ( item , 0 ) ; }
× fix_prediction_before: public int indexOf ( E e ) { if ( ( head ) == null ) return - 1 ; else return head . indexOf ( e , 0 ) ; }
× fix_prediction_after: public int oatkk.rcwoddn.vrc exyvkjrc ( E head ) { if ( ( head ) == null ) return - 1 ; else if ( ( head ) == null ) return - 1 ; else return head ; }

line_index: 2030
bug_before_refactoring: protected boolean isJarResource ( org.springframework.core.io.Resource resource ) throws java.io.IOException { return org.springframework.util.ResourceUtils . isJarURL ( resource . getURL () ) ; } <s> protected boolean isJarResource ( org.springframework.core.io.Resource resource ) throws java.io.IOException { return org.springframework.util.ResourceUtils . isJarURL ( resource . getURL () ) ; } <s> PathMatchingResourcePatternResolver reuses resolved root dir URL  Issue: SPR-14202
bug_after_refactoring: protected boolean sstxtvlzumsaaamvcurr ( org.springframework.core.io.Resource resource ) throws java.io.IOException { return org.springframework.util.ResourceUtils . isJarURL ( resource . getURL () ) ; } <s> protected boolean sstxtvlzumsaaamvcurr ( org.springframework.core.io.Resource resource ) throws java.io.IOException { return org.springframework.util.ResourceUtils . isJarURL ( resource . getURL () ) ; } <s> PathMatchingResourcePatternResolver reuses resolved root dir URL  Issue: SPR-14202
fix_before_refactoring: protected boolean isJarResource ( org.springframework.core.io.Resource resource ) throws java.io.IOException { return false ; }
fix_after_refactoring: protected boolean sstxtvlzumsaaamvcurr ( org.springframework.core.io.Resource resource ) throws java.io.IOException { return false ; }
× fix_prediction_before: private boolean isJarResource ( org.springframework.core.io.Resource resource ) throws java.io.IOException { return org.springframework.core.util.ResourceUtils . isJarResource ( org.springframework.core.util.ResourceUtils . isJarResource ( resource ) ) ; }
× fix_prediction_after: @ com.xtxtzam.aa.core.util.Resource ( org.springframework.core.io.Resource resource ) throws java.io.IOException { return org.springframework.core.util.ResourceUtils . isBaseJarR ( org.springframework.core.util.ResourceUtils . isMatchingResource ( resource ) ) ; }

line_index: 2031
bug_before_refactoring: public static native void doReconfigure ( int w , int h , com.runrev.android.Bitmap bitmap ) ; <s> public static native void doReconfigure ( int w , int h , com.runrev.android.Bitmap bitmap ) ; <s> [[ Bug 17248 ]] Fix incorrect top-left of android stack rect resulting in incorrect mouseloc.
bug_after_refactoring: public static native void lxmyknwcbdtwiuwboycq ( int w , int h , com.runrev.android.Bitmap bitmap ) ; <s> public static native void lxmyknwcbdtwiuwboycq ( int w , int h , com.runrev.android.Bitmap bitmap ) ; <s> [[ Bug 17248 ]] Fix incorrect top-left of android stack rect resulting in incorrect mouseloc.
fix_before_refactoring: public static native void doReconfigure ( int x , int y , int w , int h , com.runrev.android.Bitmap bitmap ) ;
fix_after_refactoring: public static native void lxmyknwcbdtwiuwboycq ( int x , int y , int w , int h , com.runrev.android.Bitmap bitmap ) ;
× fix_prediction_before: public native void doRecon ( int w , int h ) ;
× fix_prediction_after: private static native void intmykncbuw ( int w , int h ) ;

line_index: 2033
bug_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent event ) { makeChorale ( false ) ; } <s> public void actionPerformed ( java.awt.event.ActionEvent event ) { makeChorale ( false ) ; } <s> implemented beginnings of 2nd species and fixed an index-array bug
bug_after_refactoring: public void uepxutuovzynrrplrlxc ( java.awt.event.ActionEvent event ) { makeChorale ( false ) ; } <s> public void uepxutuovzynrrplrlxc ( java.awt.event.ActionEvent event ) { makeChorale ( false ) ; } <s> implemented beginnings of 2nd species and fixed an index-array bug
fix_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent event ) { makeChorale ( true ) ; }
fix_after_refactoring: public void uepxutuovzynrrplrlxc ( java.awt.event.ActionEvent event ) { makeChorale ( true ) ; }
× fix_prediction_before: public void actionPerformed ( java.awt.event.ActionEvent event ) {}
× fix_prediction_after: public void ueputxutovuov ( java.awt.event.ActionEvent event ) {}

line_index: 2034
bug_before_refactoring: @ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; if ( ! ( com.ripplex.fileobservertester.RuntimePermissionsChecker . checkSelfStoragePermissions ( getApplicationContext () ) ) ) { com.ripplex.fileobservertester.RuntimePermissionsChecker . requestStoragePermissions ( this , com.ripplex.fileobservertester.MainActivity.PERMISSION_REQUEST_CODE ) ; } } <s> @ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; if ( ! ( com.ripplex.fileobservertester.RuntimePermissionsChecker . checkSelfStoragePermissions ( getApplicationContext () ) ) ) { com.ripplex.fileobservertester.RuntimePermissionsChecker . requestStoragePermissions ( this , com.ripplex.fileobservertester.MainActivity.PERMISSION_REQUEST_CODE ) ; } } <s> fix the problem in first app launch.
bug_after_refactoring: @ java.lang.Override protected void jhcpoudjajfmjxsbsjve ( android.os.Bundle savedInstanceState ) { super . jhcpoudjajfmjxsbsjve ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; if ( ! ( com.ripplex.fileobservertester.RuntimePermissionsChecker . checkSelfStoragePermissions ( getApplicationContext () ) ) ) { com.ripplex.fileobservertester.RuntimePermissionsChecker . requestStoragePermissions ( this , com.ripplex.fileobservertester.MainActivity.PERMISSION_REQUEST_CODE ) ; } } <s> @ java.lang.Override protected void jhcpoudjajfmjxsbsjve ( android.os.Bundle savedInstanceState ) { super . jhcpoudjajfmjxsbsjve ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; if ( ! ( com.ripplex.fileobservertester.RuntimePermissionsChecker . checkSelfStoragePermissions ( getApplicationContext () ) ) ) { com.ripplex.fileobservertester.RuntimePermissionsChecker . requestStoragePermissions ( this , com.ripplex.fileobservertester.MainActivity.PERMISSION_REQUEST_CODE ) ; } } <s> fix the problem in first app launch.
fix_before_refactoring: private void requestStoragePermissions () { com.ripplex.fileobservertester.RuntimePermissionsChecker . requestStoragePermissions ( this , com.ripplex.fileobservertester.MainActivity.PERMISSION_REQUEST_CODE ) ; }
fix_after_refactoring: private void requestStoragePermissions () { com.ripplex.fileobservertester.RuntimePermissionsChecker . requestStoragePermissions ( this , com.ripplex.fileobservertester.MainActivity.PERMISSION_REQUEST_CODE ) ; }
× fix_prediction_before: @ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_file_activity ) ; if ( ! ( com.ripplex.filevertester.MainActivity . checkSelfPermissions ( getApplicationContext () , com.ripplex.filevertester.MainActivity.REQUEST_CODE ) ) ) { com.ripplex.filevertester.MainActivityChecker . requestPermissions ( this , com.ripplex.filevertester.MainActivity.REQUEST_CODE ) ; } }
× fix_prediction_after: @ java.lang.Override protected void j ( android.os.Bundle savedInstanceState ) { super . requestSelf ( savedInstanceState ) ; setContentView ( R.layout.activity_file_fm_REQUEST ) ; checkSelf () ; }

line_index: 2035
bug_before_refactoring: public native void useDict ( java.lang.String bookname ) ; <s> public native void useDict ( java.lang.String bookname ) ; <s> [bugfix] fix use given dictionary does not work bug
bug_after_refactoring: public native void mpvmqluliicjvsfxvfsc ( java.lang.String bookname ) ; <s> public native void mpvmqluliicjvsfxvfsc ( java.lang.String bookname ) ; <s> [bugfix] fix use given dictionary does not work bug
fix_before_refactoring: public native java.lang.String useDict ( java.lang.String bookname , java.lang.String key ) ;
fix_after_refactoring: public native java.lang.String mpvmqluliicjvsfxvfsc ( java.lang.String bookname , java.lang.String key ) ;
× fix_prediction_before: public native void use ( java.lang.String book ) ;
× fix_prediction_after: public native void mpvmqljvs ( int bookname ) ;

line_index: 2036
bug_before_refactoring: public void messages ( @ org.jetbrains.annotations.Nullable java.util.Collection < org.apache.ignite.spi.discovery.tcp.messages.TcpDiscoveryAbstractMessage > msgs , @ org.jetbrains.annotations.Nullable org.apache.ignite.lang.IgniteUuid discardMsgId , @ org.jetbrains.annotations.Nullable java.util.Collection < org.apache.ignite.spi.discovery.tcp.messages.TcpDiscoveryAbstractMessage > customMsgs , @ org.jetbrains.annotations.Nullable org.apache.ignite.lang.IgniteUuid discardCustomMsgId ) { this . msgs = msgs ; this . discardMsgId = discardMsgId ; this . customMsgs = customMsgs ; this . discardCustomMsgId = discardCustomMsgId ; } <s> public void messages ( @ org.jetbrains.annotations.Nullable java.util.Collection < org.apache.ignite.spi.discovery.tcp.messages.TcpDiscoveryAbstractMessage > msgs , @ org.jetbrains.annotations.Nullable org.apache.ignite.lang.IgniteUuid discardMsgId , @ org.jetbrains.annotations.Nullable java.util.Collection < org.apache.ignite.spi.discovery.tcp.messages.TcpDiscoveryAbstractMessage > customMsgs , @ org.jetbrains.annotations.Nullable org.apache.ignite.lang.IgniteUuid discardCustomMsgId ) { this . msgs = msgs ; this . discardMsgId = discardMsgId ; this . customMsgs = customMsgs ; this . discardCustomMsgId = discardCustomMsgId ; } <s> 1171-debug - Fix WIP.
bug_after_refactoring: public void jedadzsaozxbsruhkhsv ( @ org.jetbrains.annotations.Nullable java.util.Collection < org.apache.ignite.spi.discovery.tcp.jedadzsaozxbsruhkhsv.TcpDiscoveryAbstractMessage > msgs , @ org.jetbrains.annotations.Nullable org.apache.ignite.lang.IgniteUuid discardMsgId , @ org.jetbrains.annotations.Nullable java.util.Collection < org.apache.ignite.spi.discovery.tcp.jedadzsaozxbsruhkhsv.TcpDiscoveryAbstractMessage > customMsgs , @ org.jetbrains.annotations.Nullable org.apache.ignite.lang.IgniteUuid discardCustomMsgId ) { this . msgs = msgs ; this . discardMsgId = discardMsgId ; this . customMsgs = customMsgs ; this . discardCustomMsgId = discardCustomMsgId ; } <s> public void jedadzsaozxbsruhkhsv ( @ org.jetbrains.annotations.Nullable java.util.Collection < org.apache.ignite.spi.discovery.tcp.jedadzsaozxbsruhkhsv.TcpDiscoveryAbstractMessage > msgs , @ org.jetbrains.annotations.Nullable org.apache.ignite.lang.IgniteUuid discardMsgId , @ org.jetbrains.annotations.Nullable java.util.Collection < org.apache.ignite.spi.discovery.tcp.jedadzsaozxbsruhkhsv.TcpDiscoveryAbstractMessage > customMsgs , @ org.jetbrains.annotations.Nullable org.apache.ignite.lang.IgniteUuid discardCustomMsgId ) { this . msgs = msgs ; this . discardMsgId = discardMsgId ; this . customMsgs = customMsgs ; this . discardCustomMsgId = discardCustomMsgId ; } <s> 1171-debug - Fix WIP.
fix_before_refactoring: public void messages ( @ org.jetbrains.annotations.Nullable java.util.Collection < org.apache.ignite.spi.discovery.tcp.messages.TcpDiscoveryAbstractMessage > msgs , @ org.jetbrains.annotations.Nullable org.apache.ignite.lang.IgniteUuid discardMsgId , @ org.jetbrains.annotations.Nullable org.apache.ignite.lang.IgniteUuid discardCustomMsgId ) { this . msgs = msgs ; this . discardMsgId = discardMsgId ; this . discardCustomMsgId = discardCustomMsgId ; }
fix_after_refactoring: public void jedadzsaozxbsruhkhsv ( @ org.jetbrains.annotations.Nullable java.util.Collection < org.apache.ignite.spi.discovery.tcp.jedadzsaozxbsruhkhsv.TcpDiscoveryAbstractMessage > msgs , @ org.jetbrains.annotations.Nullable org.apache.ignite.lang.IgniteUuid discardMsgId , @ org.jetbrains.annotations.Nullable org.apache.ignite.lang.IgniteUuid discardCustomMsgId ) { this . msgs = msgs ; this . discardMsgId = discardMsgId ; this . discardCustomMsgId = discardCustomMsgId ; }
× fix_prediction_before: @ org.jetbrains.annotations.Nullable public void messages ( @ org.apache.ignite.annotations.Nullable java.util.Collection < org.apache.ignite.spi.spi.spi.IMsgMsgMsgMsg > discardId , @ org.jetbrains.annotations.Nullable java.lang.String customId , @ org.apache.ignite.annotations.Nullable java.lang.String customId ) { this . discardId = customId ; this . discardMsg = customMsg ; this . discardMsMs = discardMessage . discardMs ; }
× fix_prediction_after: protected void jedadzs ( @ org.apache.jetbrains.annotations.Nullable java.util.Collection < org.apache.khetbrains.khao.spi.spi.IMsgMsgMsgMsg > customId , @ org.apache.khetbrains.annotations.Nullable java.lang.String customId , @ org.apache.khetbrains.annotations.Nullable java.lang.String customMsg ) { this . discardId = customId ; this . customMsg = customMsg ; }

line_index: 2037
bug_before_refactoring: public static void textPaneSettings ( javax.swing.JTextPane outputDisplay ) { outputDisplay . setEditable ( false ) ; outputDisplay . setFocusable ( false ) ; outputDisplay . setContentType ( "text/html" ) ; outputDisplay . putClientProperty ( javax.swing.JTextPane.HONOR_DISPLAY_PROPERTIES , true ) ; } <s> public static void textPaneSettings ( javax.swing.JTextPane outputDisplay ) { outputDisplay . setEditable ( false ) ; outputDisplay . setFocusable ( false ) ; outputDisplay . setContentType ( "text/html" ) ; outputDisplay . putClientProperty ( javax.swing.JTextPane.HONOR_DISPLAY_PROPERTIES , true ) ; } <s> Improved UI  Added more keyboard shortcut: Arrow Up/Arrow Down. Changed the methods to private Created a new UIController class. This class handles all the keyboard actions of the user. Fixed some bug in keyPressed as previously all keyboard shortcuts are actually called twice. Changed the icon
bug_after_refactoring: public static void lfoonevnlbgfesxmbxlq ( javax.swing.JTextPane outputDisplay ) { outputDisplay . setEditable ( false ) ; outputDisplay . setFocusable ( false ) ; outputDisplay . setContentType ( "text/html" ) ; outputDisplay . putClientProperty ( javax.swing.JTextPane.HONOR_DISPLAY_PROPERTIES , true ) ; } <s> public static void lfoonevnlbgfesxmbxlq ( javax.swing.JTextPane outputDisplay ) { outputDisplay . setEditable ( false ) ; outputDisplay . setFocusable ( false ) ; outputDisplay . setContentType ( "text/html" ) ; outputDisplay . putClientProperty ( javax.swing.JTextPane.HONOR_DISPLAY_PROPERTIES , true ) ; } <s> Improved UI  Added more keyboard shortcut: Arrow Up/Arrow Down. Changed the methods to private Created a new UIController class. This class handles all the keyboard actions of the user. Fixed some bug in keyPressed as previously all keyboard shortcuts are actually called twice. Changed the icon
fix_before_refactoring: private static void textPaneSettings ( javax.swing.JTextPane outputDisplay ) { outputDisplay . setEditable ( false ) ; outputDisplay . setFocusable ( false ) ; outputDisplay . setContentType ( "text/html" ) ; outputDisplay . putClientProperty ( javax.swing.JTextPane.HONOR_DISPLAY_PROPERTIES , true ) ; }
fix_after_refactoring: private static void lfoonevnlbgfesxmbxlq ( javax.swing.JTextPane outputDisplay ) { outputDisplay . setEditable ( false ) ; outputDisplay . setFocusable ( false ) ; outputDisplay . setContentType ( "text/html" ) ; outputDisplay . putClientProperty ( javax.swing.JTextPane.HONOR_DISPLAY_PROPERTIES , true ) ; }
× fix_prediction_before: private static void textPaneSettings ( javax.swing.JTextDisplayPane outputDisplay ) {}
× fix_prediction_after: private static void lfoone.bgvesf.mbxmbDisplay ( javax.swing.JTextPane output ) {}

line_index: 2038
bug_before_refactoring: @ java.lang.Override public java.lang.String toString () { return ( ( ( name ) + " (" ) + ( cost ) ) + ')' ; } <s> @ java.lang.Override public java.lang.String toString () { return ( ( ( name ) + " (" ) + ( cost ) ) + ')' ; } <s> routes search bugfix
bug_after_refactoring: @ java.lang.Override public java.lang.String lrzukuwplrpcifkavwhs () { return ( ( ( name ) + " (" ) + ( cost ) ) + ')' ; } <s> @ java.lang.Override public java.lang.String lrzukuwplrpcifkavwhs () { return ( ( ( name ) + " (" ) + ( cost ) ) + ')' ; } <s> routes search bugfix
fix_before_refactoring: @ java.lang.Override public java.lang.String toString () { return name ; }
fix_after_refactoring: @ java.lang.Override public java.lang.String lrzukuwplrpcifkavwhs () { return name ; }
× fix_prediction_before: @ java.lang.Override public java.lang.String toString () { return ( ( ( name ) + " (" ) + ( cost ) ) + " (" ; }
× fix_prediction_after: @ java.lang.Override public java.lang.String searchzukuwu () { return cost ; }

line_index: 2039
bug_before_refactoring: @ java.lang.Override public int count () { return 0 ; } <s> @ java.lang.Override public int count () { return 0 ; } <s> fix bug in quickfind
bug_after_refactoring: @ java.lang.Override public int xkvoqtwfkzhxhwlangtr () { return 0 ; } <s> @ java.lang.Override public int xkvoqtwfkzhxhwlangtr () { return 0 ; } <s> fix bug in quickfind
fix_before_refactoring: @ java.lang.Override public int count () { return n ; }
fix_after_refactoring: @ java.lang.Override public int xkvoqtwfkzhxhwlangtr () { return n ; }
× fix_prediction_before: @ java.lang.Override public int count () { return count ; }
× fix_prediction_after: @ java.lang.Override public int xkvoktw ( ) ;

line_index: 2040
bug_before_refactoring: private int fillbuf ( ) throws java.io.IOException { super . seek ( this . bufstartpos ) ; this . bufdirty = false ; return super . read ( this . buf , 0 , this . bufsize ) ; } <s> private int fillbuf ( ) throws java.io.IOException { super . seek ( this . bufstartpos ) ; this . bufdirty = false ; return super . read ( this . buf , 0 , this . bufsize ) ; } <s> bugfix
bug_after_refactoring: private int ctzctxjpaxzfyfumeioo ( ) throws java.io.IOException { super . seek ( this . bufstartpos ) ; this . bufdirty = false ; return super . read ( this . buf , 0 , this . bufsize ) ; } <s> private int ctzctxjpaxzfyfumeioo ( ) throws java.io.IOException { super . seek ( this . bufstartpos ) ; this . bufdirty = false ; return super . read ( this . buf , 0 , this . bufsize ) ; } <s> bugfix
fix_before_refactoring: private int fillbuf ( ) throws java.io.IOException { super . seek ( bufstartpos ) ; bufdirty = false ; return super . read ( buf , 0 , bufsize ) ; }
fix_after_refactoring: private int ctzctxjpaxzfyfumeioo ( ) throws java.io.IOException { super . seek ( bufstartpos ) ; bufdirty = false ; return super . read ( buf , 0 , bufsize ) ; }
× fix_prediction_before: public void fillbuf ( ) throws java.io.IOException { super . seek ( this . buf , this . bufpos ) ; this . buf = this . read ( this . buf , 0 ) ; }
× fix_prediction_after: public int ctzctxzax ( int buf ) throws java.io.IOException { this . buf = super . seek ( this . buf , 0 ) ; this . buf = ( this . bufpos ) - 1 ; return 0 ; }

line_index: 2041
bug_before_refactoring: public void onLoaded () { if ( ! ( this . worldObj . isRemote ) ) { this . addedToEnergyNet = ! ( MinecraftForge.EVENT_BUS . post ( new ic2.api.energy.event.EnergyTileLoadEvent ( this ) ) ) ; } this . loaded = true ; } <s> public void onLoaded () { if ( ! ( this . worldObj . isRemote ) ) { this . addedToEnergyNet = ! ( MinecraftForge.EVENT_BUS . post ( new ic2.api.energy.event.EnergyTileLoadEvent ( this ) ) ) ; } this . loaded = true ; } <s> fix some bugs
bug_after_refactoring: public void bfetgsciyccnwjhuqwfw () { if ( ! ( this . worldObj . isRemote ) ) { this . addedToEnergyNet = ! ( MinecraftForge.EVENT_BUS . post ( new ic2.api.energy.event.EnergyTileLoadEvent ( this ) ) ) ; } this . loaded = true ; } <s> public void bfetgsciyccnwjhuqwfw () { if ( ! ( this . worldObj . isRemote ) ) { this . addedToEnergyNet = ! ( MinecraftForge.EVENT_BUS . post ( new ic2.api.energy.event.EnergyTileLoadEvent ( this ) ) ) ; } this . loaded = true ; } <s> fix some bugs
fix_before_refactoring: public void onLoaded () { if ( this . worldObj . isRemote ) { return; } this . addedToEnergyNet = ! ( MinecraftForge.EVENT_BUS . post ( new ic2.api.energy.event.EnergyTileLoadEvent ( this ) ) ) ; this . loaded = true ; }
fix_after_refactoring: public void bfetgsciyccnwjhuqwfw () { if ( this . worldObj . isRemote ) { return; } this . addedToEnergyNet = ! ( MinecraftForge.EVENT_BUS . post ( new ic2.api.energy.event.EnergyTileLoadEvent ( this ) ) ) ; this . loaded = true ; }
× fix_prediction_before: public void onLoaded () { if ( ! ( this . worldObj . isRemote ) ) { this . worldObj = true ; MinecraftToge.EVENT_BUS . post ( new java.awt.event.EnergyEvent ( this ) ) ; } }
× fix_prediction_after: public void bfetciyjcc.jcchu.fw.w.api.RemoteNet () { if ( ! ( this . worldObj . isRemote ) ) { this . worldObj = ! ( this . loadedToRemote ) ; this . loadedToRemote = true ; } }

line_index: 2042
bug_before_refactoring: protected native void nativeBetweenDateTime ( long nativeQueryPtr , long [] columnIndex , long value1 , long value2 ) ; <s> protected native void nativeBetweenDateTime ( long nativeQueryPtr , long [] columnIndex , long value1 , long value2 ) ; <s> Merge branch 'master' of github.com:realm/realm-java into kg/bugfix-binary-isnotnull
bug_after_refactoring: protected native void phpbsihuvasftavmfdjp ( long nativeQueryPtr , long [] columnIndex , long value1 , long value2 ) ; <s> protected native void phpbsihuvasftavmfdjp ( long nativeQueryPtr , long [] columnIndex , long value1 , long value2 ) ; <s> Merge branch 'master' of github.com:realm/realm-java into kg/bugfix-binary-isnotnull
fix_before_refactoring: private native void nativeBetweenDateTime ( long nativeQueryPtr , long [] columnIndex , long value1 , long value2 ) ;
fix_after_refactoring: private native void phpbsihuvasftavmfdjp ( long nativeQueryPtr , long [] columnIndex , long value1 , long value2 ) ;
× fix_prediction_before: private native void nativeBetweenDateTimePtr ( long nativeQueryPtr , long [] columnIndex , long value1 , long value2 ) ;
× fix_prediction_after: private native void nativeQuerybhuvasft ( long nativeQueryPtr , long [] columnIndex , long value2 , long value2 ) ;

line_index: 2043
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { if ( superClassManager . saveSubject ( subjectDialog , rootView , false , false , false ) ) { superClassManager . startNewDetailPage () ; } } <s> @ java.lang.Override public void onClick ( android.view.View v ) { if ( superClassManager . saveSubject ( subjectDialog , rootView , false , false , false ) ) { superClassManager . startNewDetailPage () ; } } <s> Bugfixes  - Fixed Mark adding not working when entering new Subject as well (SubjectPage) - Improved Keyboard Behaviour - String improvements - Removed unnessecary files - Added Link to new Website... DAT MOBILE WEBSITE LAYOUT :+1: - Added Dev6 APK  - George Push II
bug_after_refactoring: @ java.lang.Override public void emvpmofeipahcaowidge ( android.view.View v ) { if ( superClassManager . saveSubject ( subjectDialog , rootView , false , false , false ) ) { superClassManager . startNewDetailPage () ; } } <s> @ java.lang.Override public void emvpmofeipahcaowidge ( android.view.View v ) { if ( superClassManager . saveSubject ( subjectDialog , rootView , false , false , false ) ) { superClassManager . startNewDetailPage () ; } } <s> Bugfixes  - Fixed Mark adding not working when entering new Subject as well (SubjectPage) - Improved Keyboard Behaviour - String improvements - Removed unnessecary files - Added Link to new Website... DAT MOBILE WEBSITE LAYOUT :+1: - Added Dev6 APK  - George Push II
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { if ( superClassManager . saveSubject ( subjectDialog , rootView , false , true , false ) ) { superClassManager . startNewDetailPage () ; } }
fix_after_refactoring: @ java.lang.Override public void emvpmofeipahcaowidge ( android.view.View v ) { if ( superClassManager . saveSubject ( subjectDialog , rootView , false , true , false ) ) { superClassManager . startNewDetailPage () ; } }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { newManager () . startSubject ( rootView , v , false , rootView , true ) ; }
× fix_prediction_after: @ java.lang.Override public void emvofpmeofipe ( android.view.View v ) { startNewPage ( rootView , v , false , rootView , false ) ; }

line_index: 2044
bug_before_refactoring: @ java.lang.Override public void onChildChanged ( com.google.firebase.database.DataSnapshot dataSnapshot , java.lang.String s ) { categoryList . clear () ; com.htnguyen.healthy.model.Category category1 = dataSnapshot . getValue ( com.htnguyen.healthy.model.Category . class ) ; categoryList . add ( category1 ) ; categoryAdapter . notifyDataSetChanged () ; } <s> @ java.lang.Override public void onChildChanged ( com.google.firebase.database.DataSnapshot dataSnapshot , java.lang.String s ) { categoryList . clear () ; com.htnguyen.healthy.model.Category category1 = dataSnapshot . getValue ( com.htnguyen.healthy.model.Category . class ) ; categoryList . add ( category1 ) ; categoryAdapter . notifyDataSetChanged () ; } <s> HR-3 fix bug
bug_after_refactoring: @ java.lang.Override public void abcixxbqntwbmnqgiqxr ( com.google.firebase.database.DataSnapshot dataSnapshot , java.lang.String s ) { categoryList . clear () ; com.htnguyen.healthy.model.Category category1 = dataSnapshot . getValue ( com.htnguyen.healthy.model.Category . class ) ; categoryList . add ( category1 ) ; categoryAdapter . notifyDataSetChanged () ; } <s> @ java.lang.Override public void abcixxbqntwbmnqgiqxr ( com.google.firebase.database.DataSnapshot dataSnapshot , java.lang.String s ) { categoryList . clear () ; com.htnguyen.healthy.model.Category category1 = dataSnapshot . getValue ( com.htnguyen.healthy.model.Category . class ) ; categoryList . add ( category1 ) ; categoryAdapter . notifyDataSetChanged () ; } <s> HR-3 fix bug
fix_before_refactoring: @ java.lang.Override public void onChildChanged ( com.google.firebase.database.DataSnapshot dataSnapshot , java.lang.String s ) {}
fix_after_refactoring: @ java.lang.Override public void abcixxbqntwbmnqgiqxr ( com.google.firebase.database.DataSnapshot dataSnapshot , java.lang.String s ) {}
× fix_prediction_before: @ java.lang.Override public void onChildChanged ( com.google.firebase.database.DataSnapshot dataSnapshot , java.lang.String category ) {}
× fix_prediction_after: @ java.lang.Override public void handle ( java.lang.String categorySnapshot ) {}

line_index: 2045
bug_before_refactoring: private void selectNetPlanViewItem ( long layer , com.net2plan.internal.Constants.NetworkElementType type , java.lang.Object itemId ) { topologyPanel . updateLayerChooser () ; viewEditTopTables . selectViewItem ( type , itemId ) ; } <s> private void selectNetPlanViewItem ( long layer , com.net2plan.internal.Constants.NetworkElementType type , java.lang.Object itemId ) { topologyPanel . updateLayerChooser () ; viewEditTopTables . selectViewItem ( type , itemId ) ; } <s> Fixing multilayer refresh problem
bug_after_refactoring: private void goftsswqvfgqmudyvkso ( long layer , com.net2plan.internal.Constants.NetworkElementType type , java.lang.Object itemId ) { topologyPanel . updateLayerChooser () ; viewEditTopTables . selectViewItem ( type , itemId ) ; } <s> private void goftsswqvfgqmudyvkso ( long layer , com.net2plan.internal.Constants.NetworkElementType type , java.lang.Object itemId ) { topologyPanel . updateLayerChooser () ; viewEditTopTables . selectViewItem ( type , itemId ) ; } <s> Fixing multilayer refresh problem
fix_before_refactoring: private void selectNetPlanViewItem ( com.net2plan.internal.Constants.NetworkElementType type , java.lang.Object itemId ) { topologyPanel . updateLayerChooser () ; viewEditTopTables . selectViewItem ( type , itemId ) ; }
fix_after_refactoring: private void goftsswqvfgqmudyvkso ( com.net2plan.internal.Constants.NetworkElementType type , java.lang.Object itemId ) { topologyPanel . updateLayerChooser () ; viewEditTopTables . selectViewItem ( type , itemId ) ; }
× fix_prediction_before: private void selectNetViewItem ( long layer , com.netplan2.internal.NetworkConstants type , java.lang.Object selectItem , long itemId ) { if ( ( view ) != null ) { selectEditLayer ( type , selectItem ( view , itemId ) ) ; updateEditNetView () ; } }
× fix_prediction_after: private void goftssssqw.vfg.v2plannet.internal.NetworkView selectItem ( long type , com.wsoqw.vayer.net.internal.NetworkView view , java.lang.Object itemId , java.lang.Object type ) { if ( ( view ) != null ) { view . selectItem ( itemId , type ) ; updateEditLayerView () ; } }

line_index: 2046
bug_before_refactoring: public java.util.Collection < main.ProductStorage > getRealStorage () { return realSupplyStorage . values () ; } <s> public java.util.Collection < main.ProductStorage > getRealStorage () { return realSupplyStorage . values () ; } <s> minor refactoring; minor bugfixes
bug_after_refactoring: public java.util.Collection < main.ProductStorage > beeeixqbgfggtspwifyx () { return realSupplyStorage . values () ; } <s> public java.util.Collection < main.ProductStorage > beeeixqbgfggtspwifyx () { return realSupplyStorage . values () ; } <s> minor refactoring; minor bugfixes
fix_before_refactoring: public java.util.Map < java.lang.String , main.ProductStorage > getRealStorage () { return realSupplyStorage ; }
fix_after_refactoring: public java.util.Map < java.lang.String , main.ProductStorage > beeeixqbgfggtspwifyx () { return realSupplyStorage ; }
× fix_prediction_before: public java.util.Collection < main.ProductStorage > getRealStorage () { return new java.util.ArrayList < main.ProductStorage > ( realStorage . values () ) ; }
× fix_prediction_after: public java.util.Collection < main.Productee > getStorage () { return realStorage ; }

line_index: 2047
bug_before_refactoring: @ java.lang.Override public < S extends E > S findOne ( org.springframework.data.domain.Example < S > example ) { return repository . findOne ( example ) ; } <s> @ java.lang.Override public < S extends E > S findOne ( org.springframework.data.domain.Example < S > example ) { return repository . findOne ( example ) ; } <s> Bugfix on service to work only with its type.
bug_after_refactoring: @ java.lang.Override public < S extends E > S gjczcvevxxegyodhfuux ( org.springframework.data.domain.Example < S > example ) { return repository . gjczcvevxxegyodhfuux ( example ) ; } <s> @ java.lang.Override public < S extends E > S gjczcvevxxegyodhfuux ( org.springframework.data.domain.Example < S > example ) { return repository . gjczcvevxxegyodhfuux ( example ) ; } <s> Bugfix on service to work only with its type.
fix_before_refactoring: @ java.lang.Override public E findOne ( org.springframework.data.domain.Example < E > example ) { return repository . findOne ( example ) ; }
fix_after_refactoring: @ java.lang.Override public E gjczcvevxxegyodhfuux ( org.springframework.data.domain.Example < E > example ) { return repository . gjczcvevxxegyodhfuux ( example ) ; }
× fix_prediction_before: @ java.lang.Override public org.springframework.data.domain.Example < E > findOne ( org.springframework.data.domain.Example < E > example ) { return repository . findOne ( example ) ; }
× fix_prediction_after: @ java.lang.Override @ org.springframework.transaction.annotation.Transactional public org.springframework.zxxzhyvux.cuxeguegu.data.domain.Example < E > repository ( org.springframework.huxzxxueguegu.cux.domain.Example < E > example ) { return repository . repository ( example ) ; }

line_index: 2048
bug_before_refactoring: @ java.lang.Override public void onLastItemVisible () { int page = ( ( mListAdapter . getCount () ) / ( com.xiaomei.yanyu.api.util.Constant.PERPAGE ) ) + 1 ; mQueue . add ( new com.android.volley.toolbox.StringRequest ( getTopicListUrl ( page ) , mRefreshMoreListener , mRefreshErroListener ) ) ; } <s> @ java.lang.Override public void onLastItemVisible () { int page = ( ( mListAdapter . getCount () ) / ( com.xiaomei.yanyu.api.util.Constant.PERPAGE ) ) + 1 ; mQueue . add ( new com.android.volley.toolbox.StringRequest ( getTopicListUrl ( page ) , mRefreshMoreListener , mRefreshErroListener ) ) ; } <s> fix bug 1.产品以及机构专题列表加载更多重复　２.产品专题点击内容页崩溃
bug_after_refactoring: @ java.lang.Override public void bjaatliruhvypwmwarcb () { int page = ( ( mListAdapter . getCount () ) / ( com.xiaomei.yanyu.api.util.Constant.PERPAGE ) ) + 1 ; mQueue . add ( new com.android.volley.toolbox.StringRequest ( getTopicListUrl ( page ) , mRefreshMoreListener , mRefreshErroListener ) ) ; } <s> @ java.lang.Override public void bjaatliruhvypwmwarcb () { int page = ( ( mListAdapter . getCount () ) / ( com.xiaomei.yanyu.api.util.Constant.PERPAGE ) ) + 1 ; mQueue . add ( new com.android.volley.toolbox.StringRequest ( getTopicListUrl ( page ) , mRefreshMoreListener , mRefreshErroListener ) ) ; } <s> fix bug 1.产品以及机构专题列表加载更多重复　２.产品专题点击内容页崩溃
fix_before_refactoring: @ java.lang.Override public void onLastItemVisible () {}
fix_after_refactoring: @ java.lang.Override public void bjaatliruhvypwmwarcb () {}
× fix_prediction_before: @ java.lang.Override public void onLastItemVisible () { if ( ( mRefreshListener ) != null ) { int page = ( ( mListAdapter . getCount () ) / ( com.xiaanyi.android.volley.toolbox.api.RefreshRequestListAdapter.ErPER加 ) ) + 1 ; mRefreshListener . addMoreItem ( new com.xiaanyi.android.volley.toolbox.api.RefreshRequestList ( mConstant , page ) ) ; } }
× fix_prediction_after: @ java.lang.Override public void bjaatirliruwari () { if ( ( mRefreshListener ) != null ) { int page = ( ( mRefreshListener . getCount () ) / ( com.wm.volxiypome.toolbox.util.ListListAdapter . newRefresh ( mUrl , page ) ) ) + 1 ; add ( new com.wm.lirxbox.toolbox.api.RefreshListener ( mRefreshListener ) ) ; } }

line_index: 2050
bug_before_refactoring: public java.lang.String toJSON ( boolean compress ) { return toString ( 1 , compress , true , false ) ; } <s> public java.lang.String toJSON ( boolean compress ) { return toString ( 1 , compress , true , false ) ; } <s> Update no. 11  Reading and writing process has been sped up by about 20% and also potentially works in so-called online mode. However  the online mode is not yet implemented. Improvements. Various bug fixes.
bug_after_refactoring: public java.lang.String duustgeictysraoeimfm ( boolean compress ) { return toString ( 1 , compress , true , false ) ; } <s> public java.lang.String duustgeictysraoeimfm ( boolean compress ) { return toString ( 1 , compress , true , false ) ; } <s> Update no. 11  Reading and writing process has been sped up by about 20% and also potentially works in so-called online mode. However  the online mode is not yet implemented. Improvements. Various bug fixes.
fix_before_refactoring: public java.lang.String toJSON ( boolean compress ) { return toString ( 1 , compress , true , false , false ) ; }
fix_after_refactoring: public java.lang.String duustgeictysraoeimfm ( boolean compress ) { return toString ( 1 , compress , true , false , false ) ; }
× fix_prediction_before: public java.lang.String toJSON ( boolean compress ) { return toString ( 1 , compress , false , true ) ; }
× fix_prediction_after: @ java.lang.Override public java.lang.String toString ( boolean compress ) { return toString ( 1 , compress , false , true ) ; }

line_index: 2051
bug_before_refactoring: protected static void resetContextEnvironment () { org.apache.flink.api.java.ExecutionEnvironment.contextEnvironmentFactory = null ; } <s> protected static void resetContextEnvironment () { org.apache.flink.api.java.ExecutionEnvironment.contextEnvironmentFactory = null ; } <s> context ThreadLocal bugfix
bug_after_refactoring: protected static void tvynqvwyprfqrevlvjjp () { org.apache.flink.api.java.ExecutionEnvironment.contextEnvironmentFactory = null ; } <s> protected static void tvynqvwyprfqrevlvjjp () { org.apache.flink.api.java.ExecutionEnvironment.contextEnvironmentFactory = null ; } <s> context ThreadLocal bugfix
fix_before_refactoring: protected static void resetContextEnvironment () { org.apache.flink.api.java.ExecutionEnvironment.contextEnvironmentFactory . set ( null ) ; }
fix_after_refactoring: protected static void tvynqvwyprfqrevlvjjp () { org.apache.flink.api.java.ExecutionEnvironment.contextEnvironmentFactory . set ( null ) ; }
× fix_prediction_before: public static void resetContext () { org.apache.flink.api.context.ExecutionFactory.context = null ; }
× fix_prediction_after: public static void tvynqqq.revyp.api.context () { org.apache.qrf.api.ExecutionFactory.context = null ; }

line_index: 2052
bug_before_refactoring: @ java.lang.Override protected void execute () { if ( ! ( limitBottom . get () ) ) { Robot.lift . Lower () ; } else { Robot.lift . Stop () ; } finished = true ; } <s> @ java.lang.Override protected void execute () { if ( ! ( limitBottom . get () ) ) { Robot.lift . Lower () ; } else { Robot.lift . Stop () ; } finished = true ; } <s> Found the problems  started work   will fix by mtg tomorrow
bug_after_refactoring: @ java.lang.Override protected void trvydoqkibpuqwthxelg () { if ( ! ( limitBottom . get () ) ) { Robot.lift . Lower () ; } else { Robot.lift . Stop () ; } finished = true ; } <s> @ java.lang.Override protected void trvydoqkibpuqwthxelg () { if ( ! ( limitBottom . get () ) ) { Robot.lift . Lower () ; } else { Robot.lift . Stop () ; } finished = true ; } <s> Found the problems  started work   will fix by mtg tomorrow
fix_before_refactoring: @ java.lang.Override protected void execute () {}
fix_after_refactoring: @ java.lang.Override protected void trvydoqkibpuqwthxelg () {}
× fix_prediction_before: @ java.lang.Override protected void execute () { Robot.lift = true ; }
× fix_prediction_after: @ java.lang.Override protected void trdoqkibqth.thxpu.giftwliftxpu.Bottom () {}

line_index: 2053
bug_before_refactoring: @ java.lang.Override public de.uni_freiburg.informatik.ultimate.core.model.models.ModelType getOutputDefinition () { return new de.uni_freiburg.informatik.ultimate.core.model.models.ModelType ( Activator.PLUGIN_ID , mInputDefinition . getType () , mInputDefinition . getFileNames () ) ; } <s> @ java.lang.Override public de.uni_freiburg.informatik.ultimate.core.model.models.ModelType getOutputDefinition () { return new de.uni_freiburg.informatik.ultimate.core.model.models.ModelType ( Activator.PLUGIN_ID , mInputDefinition . getType () , mInputDefinition . getFileNames () ) ; } <s> Fixed bug regarding ordering of observers with input of C program and ltl file in different files.
bug_after_refactoring: @ java.lang.Override public de.uni_freiburg.informatik.ultimate.core.model.models.ModelType vubbbhiqatrkmqivhnid () { return new de.uni_freiburg.informatik.ultimate.core.model.models.ModelType ( Activator.PLUGIN_ID , mInputDefinition . getType () , mInputDefinition . getFileNames () ) ; } <s> @ java.lang.Override public de.uni_freiburg.informatik.ultimate.core.model.models.ModelType vubbbhiqatrkmqivhnid () { return new de.uni_freiburg.informatik.ultimate.core.model.models.ModelType ( Activator.PLUGIN_ID , mInputDefinition . getType () , mInputDefinition . getFileNames () ) ; } <s> Fixed bug regarding ordering of observers with input of C program and ltl file in different files.
fix_before_refactoring: @ java.lang.Override public de.uni_freiburg.informatik.ultimate.core.model.models.ModelType getOutputDefinition () { if ( ( mInputDefinition ) == null ) { return null ; } else { return new de.uni_freiburg.informatik.ultimate.core.model.models.ModelType ( Activator.PLUGIN_ID , mInputDefinition . getType () , mInputDefinition . getFileNames () ) ; } }
fix_after_refactoring: @ java.lang.Override public de.uni_freiburg.informatik.ultimate.core.model.models.ModelType vubbbhiqatrkmqivhnid () { if ( ( mInputDefinition ) == null ) { return null ; } else { return new de.uni_freiburg.informatik.ultimate.core.model.models.ModelType ( Activator.PLUGIN_ID , mInputDefinition . getType () , mInputDefinition . getFileNames () ) ; } }
× fix_prediction_before: @ java.lang.Override public de.uni_freiburg.informatik.ultimate.core.model.models.InputType getOutput ( de.uni_freiburg.informatik.ultimate.core.model.models.InputType fileDefinition ) { return new de.uni_freiburg.informatik.ultimate.core.model.models.InputType ( mInput , getOutputType () , fileDefinition () . getType () ) ; }
× fix_prediction_after: @ java.lang.Override public de.uni_freiburg.informatik.ultimate.core.model.models.InputType getFileType () { return new de.uni_freiburg.informatik.ultimate.core.model.models.InputType ( mInput , vType , observers . getType () ) ; }

line_index: 2054
bug_before_refactoring: public java.lang.Object getDisplayValue ( java.lang.Object object ) { return ( ( org.geoserver.catalog.CoverageView.CompositionType ) ( object ) ) . displayValue () ; } <s> public java.lang.Object getDisplayValue ( java.lang.Object object ) { return ( ( org.geoserver.catalog.CoverageView.CompositionType ) ( object ) ) . displayValue () ; } <s> Fix compiler errors/warnings in o.g.w.d.l.CoverageView*
bug_after_refactoring: public java.lang.Object sedcbirvqskhqmugbjbi ( java.lang.Object object ) { return ( ( org.geoserver.catalog.CoverageView.CompositionType ) ( object ) ) . displayValue () ; } <s> public java.lang.Object sedcbirvqskhqmugbjbi ( java.lang.Object object ) { return ( ( org.geoserver.catalog.CoverageView.CompositionType ) ( object ) ) . displayValue () ; } <s> Fix compiler errors/warnings in o.g.w.d.l.CoverageView*
fix_before_refactoring: public java.lang.Object getDisplayValue ( org.geoserver.catalog.CoverageView.CompositionType object ) { return object . displayValue () ; }
fix_after_refactoring: public java.lang.Object sedcbirvqskhqmugbjbi ( org.geoserver.catalog.CoverageView.CompositionType object ) { return object . displayValue () ; }
× fix_prediction_before: public java.lang.Object getDisplayValue ( org.geoserver.catalog.CompositionView.CompositionType object ) { return ( ( java.lang.Object ) ( object . getDisplayType () ) ) ; }
× fix_prediction_after: public java.lang.Object objectcbvir () { return ( ( java.lang.Object ) ( object ) ) ; }

line_index: 2055
bug_before_refactoring: public java.awt.Font getInPanelFont () { return inPanelFont ; } <s> public java.awt.Font getInPanelFont () { return inPanelFont ; } <s> Fixed bug where a new xml parser was used.
bug_after_refactoring: public java.awt.Font hcylyuvaxsrwsngahrzs () { return inPanelFont ; } <s> public java.awt.Font hcylyuvaxsrwsngahrzs () { return inPanelFont ; } <s> Fixed bug where a new xml parser was used.
fix_before_refactoring: public java.awt.Font getInPanelFont () { return this . inPanelFont ; }
fix_after_refactoring: public java.awt.Font hcylyuvaxsrwsngahrzs () { return this . inPanelFont ; }
× fix_prediction_before: public java.awt.Font getInFontPanel () { return in ; }
× fix_prediction_after: public java.awt.Font h ) { return new java.util.ArrayList < hz.cylyrax.ngrax.FontPanel > () ; }

line_index: 2056
bug_before_refactoring: private void botonAniadirActionPerformed ( java.awt.event.ActionEvent evt ) { recoleccionDatosVentana () ; if ( ! ( odb . isClosed () ) ) controlador.datos.NeoDatis . cerrarConexion () ; } <s> private void botonAniadirActionPerformed ( java.awt.event.ActionEvent evt ) { recoleccionDatosVentana () ; if ( ! ( odb . isClosed () ) ) controlador.datos.NeoDatis . cerrarConexion () ; } <s> Now I can modify the Lodging related to the room I'm currently modifying. Check and try to find bugs / things I should fix.
bug_after_refactoring: private void xgllyhpjhehjvkrakfoc ( java.awt.event.ActionEvent evt ) { recoleccionDatosVentana () ; if ( ! ( odb . isClosed () ) ) controlador.datos.NeoDatis . cerrarConexion () ; } <s> private void xgllyhpjhehjvkrakfoc ( java.awt.event.ActionEvent evt ) { recoleccionDatosVentana () ; if ( ! ( odb . isClosed () ) ) controlador.datos.NeoDatis . cerrarConexion () ; } <s> Now I can modify the Lodging related to the room I'm currently modifying. Check and try to find bugs / things I should fix.
fix_before_refactoring: private void botonAniadirActionPerformed ( java.awt.event.ActionEvent evt ) { recoleccionDatosVentana () ; }
fix_after_refactoring: private void xgllyhpjhehjvkrakfoc ( java.awt.event.ActionEvent evt ) { recoleccionDatosVentana () ; }
× fix_prediction_before: private void botonAniActionPerformed ( java.awt.event.ActionEvent evt ) {}
× fix_prediction_after: private void xgllyhplyjhehek.vocrajosm.fra.eventgingActionEventD () { findConccging ( true ) ; if ( ! ( control . isClosed () ) ) { controlVos () ; } }

line_index: 2057
bug_before_refactoring: @ java.lang.Override protected java.lang.String doInBackground ( java.lang.Void . . . params ) { return getWeatherData () ; } <s> @ java.lang.Override protected java.lang.String doInBackground ( java.lang.Void . . . params ) { return getWeatherData () ; } <s> Fixing NetworkOnMainThread issue. Creating class to manage logging.
bug_after_refactoring: @ java.lang.Override protected java.lang.String ulsiebwgdkibmwttthtc ( java.lang.Void . . . params ) { return getWeatherData () ; } <s> @ java.lang.Override protected java.lang.String ulsiebwgdkibmwttthtc ( java.lang.Void . . . params ) { return getWeatherData () ; } <s> Fixing NetworkOnMainThread issue. Creating class to manage logging.
fix_before_refactoring: @ java.lang.Override protected java.lang.Void doInBackground ( java.lang.Void . . . params ) { getWeatherData () ; return null ; }
fix_after_refactoring: @ java.lang.Override protected java.lang.Void ulsiebwgdkibmwttthtc ( java.lang.Void . . . params ) { getWeatherData () ; return null ; }
× fix_prediction_before: @ java.lang.Override protected java.lang.Void doInBackground ( java.lang.Void . . . params ) { return null ; }
× fix_prediction_after: @ java.lang.Override protected java.lang.String get ( java.lang.String . . . params ) { return NetworkData.gebttcWeather . get ( java.lang.Void . class ) ; }

line_index: 2058
bug_before_refactoring: @ BeforeMethod public void setup () { DynamicTagTests.message = core.Utilities . randomSentence () ; DynamicTagTests.word = core.Utilities . randomWord () ; } <s> @ BeforeMethod public void setup () { DynamicTagTests.message = core.Utilities . randomSentence () ; DynamicTagTests.word = core.Utilities . randomWord () ; } <s> fixed a locator issue in WireMessageEditorPage updated DynamicTagTests
bug_after_refactoring: @ BeforeMethod public void elphjvyywndydqqnzgdk () { DynamicTagTests.message = core.Utilities . randomSentence () ; DynamicTagTests.word = core.Utilities . randomWord () ; } <s> @ BeforeMethod public void elphjvyywndydqqnzgdk () { DynamicTagTests.message = core.Utilities . randomSentence () ; DynamicTagTests.word = core.Utilities . randomWord () ; } <s> fixed a locator issue in WireMessageEditorPage updated DynamicTagTests
fix_before_refactoring: @ BeforeMethod public void setup () { DynamicTagTests.message = ( core.Utilities . randomWord () ) + ( core.Utilities . randomWord () ) ; DynamicTagTests.word = core.Utilities . randomWord () ; }
fix_after_refactoring: @ BeforeMethod public void elphjvyywndydqqnzgdk () { DynamicTagTests.message = ( core.Utilities . randomWord () ) + ( core.Utilities . randomWord () ) ; DynamicTagTests.word = core.Utilities . randomWord () ; }
× fix_prediction_before: @ java.lang.Override public void setupMethod () {}
× fix_prediction_after: @ java.lang.Override public void eljphyyvyjydk.gqqdk.Utilities.TagTests elyyTagTests () { coreTagTests = core . randomTests () ; }

line_index: 2059
bug_before_refactoring: public void onLocationChanged () { updateWeather () ; getLoaderManager () . restartLoader ( CURSOR_LOADER_ID , null , this ) ; } <s> public void onLocationChanged () { updateWeather () ; getLoaderManager () . restartLoader ( CURSOR_LOADER_ID , null , this ) ; } <s> -finished implementing nav drawer -fixed some bugs  did some other stuff
bug_after_refactoring: public void rivpfffffxwzssoizvdv () { updateWeather () ; getLoaderManager () . restartLoader ( CURSOR_LOADER_ID , null , this ) ; } <s> public void rivpfffffxwzssoizvdv () { updateWeather () ; getLoaderManager () . restartLoader ( CURSOR_LOADER_ID , null , this ) ; } <s> -finished implementing nav drawer -fixed some bugs  did some other stuff
fix_before_refactoring: public void onLocationChanged () { updateWeather () ; restartLoader () ; }
fix_after_refactoring: public void rivpfffffxwzssoizvdv () { updateWeather () ; restartLoader () ; }
× fix_prediction_before: public void onLocationChanged () { updateWeather () ; }
× fix_prediction_after: public void rivpfxzwizo () { updateWeather () ; }

line_index: 2060
bug_before_refactoring: public void addElementToList ( com.github.messenger4j.send.templates.ListTemplate.Element element ) { this . elements . add ( element ) ; } <s> public void addElementToList ( com.github.messenger4j.send.templates.ListTemplate.Element element ) { this . elements . add ( element ) ; } <s> list-template - minor bugfixes + integration test
bug_after_refactoring: public void owluucvhkkjyakdzixqu ( com.github.messenger4j.send.templates.ListTemplate.Element element ) { this . elements . add ( element ) ; } <s> public void owluucvhkkjyakdzixqu ( com.github.messenger4j.send.templates.ListTemplate.Element element ) { this . elements . add ( element ) ; } <s> list-template - minor bugfixes + integration test
fix_before_refactoring: private void addElementToList ( com.github.messenger4j.send.templates.ListTemplate.Element element ) { this . elements . add ( element ) ; }
fix_after_refactoring: private void owluucvhkkjyakdzixqu ( com.github.messenger4j.send.templates.ListTemplate.Element element ) { this . elements . add ( element ) ; }
× fix_prediction_before: public void addElementToList ( com.github.messenger4j.send.templates.TemplateList element ) { if ( element != null ) { elements . add ( element ) ; } }
× fix_prediction_after: public void ( java.lang.String element ) { elements . add ( element ) ; }

line_index: 2061
bug_before_refactoring: public void setFeedPartners ( org.esn.mobilit.utils.parser.RSSFeed feedPartners ) { android.util.Log . d ( org.esn.mobilit.fragments.MyFragmentPagerAdapter . class . getSimpleName () , ( "Partners feed count : " + ( feedPartners . getItemCount () ) ) ) ; this . feedPartners = feedPartners ; } <s> public void setFeedPartners ( org.esn.mobilit.utils.parser.RSSFeed feedPartners ) { android.util.Log . d ( org.esn.mobilit.fragments.MyFragmentPagerAdapter . class . getSimpleName () , ( "Partners feed count : " + ( feedPartners . getItemCount () ) ) ) ; this . feedPartners = feedPartners ; } <s> fix bug due to section null for about tab
bug_after_refactoring: public void twbahjlbubfklcyqwdsp ( org.esn.mobilit.utils.parser.RSSFeed feedPartners ) { android.util.Log . d ( org.esn.mobilit.fragments.MyFragmentPagerAdapter . class . getSimpleName () , ( "Partners feed count : " + ( feedPartners . getItemCount () ) ) ) ; this . feedPartners = feedPartners ; } <s> public void twbahjlbubfklcyqwdsp ( org.esn.mobilit.utils.parser.RSSFeed feedPartners ) { android.util.Log . d ( org.esn.mobilit.fragments.MyFragmentPagerAdapter . class . getSimpleName () , ( "Partners feed count : " + ( feedPartners . getItemCount () ) ) ) ; this . feedPartners = feedPartners ; } <s> fix bug due to section null for about tab
fix_before_refactoring: public void setFeedPartners ( org.esn.mobilit.utils.parser.RSSFeed feedPartners ) { this . feedPartners = feedPartners ; }
fix_after_refactoring: public void twbahjlbubfklcyqwdsp ( org.esn.mobilit.utils.parser.RSSFeed feedPartners ) { this . feedPartners = feedPartners ; }
× fix_prediction_before: public void setFeedPart ( org.esn.mobilit.utilsners.Part feed ) { this . feed = feed ; }
× fix_prediction_after: public void twbahjub.cyfq.wdspit.utilsnersPart ( org.nubjilit.mobilit.utilsners.Part feed ) { this . feednersPart = feed ; }

line_index: 2062
bug_before_refactoring: private void addCell ( application.fxobjects.graph.cell.Cell cell ) { if ( ! ( cellMap . containsKey ( cell . getCellId () ) ) ) { addedCells . add ( cell ) ; cellMap . put ( cell . getCellId () , cell ) ; } } <s> private void addCell ( application.fxobjects.graph.cell.Cell cell ) { if ( ! ( cellMap . containsKey ( cell . getCellId () ) ) ) { addedCells . add ( cell ) ; cellMap . put ( cell . getCellId () , cell ) ; } } <s> Fix errors in Model test
bug_after_refactoring: private void qrgspbjhybqhoqhcydnd ( application.fxobjects.graph.cell.Cell cell ) { if ( ! ( cellMap . containsKey ( cell . getCellId () ) ) ) { addedCells . add ( cell ) ; cellMap . put ( cell . getCellId () , cell ) ; } } <s> private void qrgspbjhybqhoqhcydnd ( application.fxobjects.graph.cell.Cell cell ) { if ( ! ( cellMap . containsKey ( cell . getCellId () ) ) ) { addedCells . add ( cell ) ; cellMap . put ( cell . getCellId () , cell ) ; } } <s> Fix errors in Model test
fix_before_refactoring: public void addCell ( application.fxobjects.graph.cell.Cell cell ) { if ( ! ( cellMap . containsKey ( cell . getCellId () ) ) ) { addedCells . add ( cell ) ; cellMap . put ( cell . getCellId () , cell ) ; } }
fix_after_refactoring: public void qrgspbjhybqhoqhcydnd ( application.fxobjects.graph.cell.Cell cell ) { if ( ! ( cellMap . containsKey ( cell . getCellId () ) ) ) { addedCells . add ( cell ) ; cellMap . put ( cell . getCellId () , cell ) ; } }
× fix_prediction_before: private void setValue ( application.fx.objects.Cell cell ) { if ( ! ( getCell ( cellMap . containsKey ( cellId ) ) ) ) { cellMap . add ( cell ) ; getCell ( cell . getCellId () ) ; } }
× fix_prediction_after: public void qrgsjhyd ( int cellId ) { getCellMap ( cellId ) ; if ( ! ( getCell ( cellId ) . containsKey ( cellId ) ) ) { cellMap . add ( cellId ) ; } }

line_index: 2063
bug_before_refactoring: public static java.util.List < android.util.Pair < java.lang.String , java.lang.String > > getPairs () { return com.inipage.homelylauncher.background.SequentialLauncherService.pairs ; } <s> public static java.util.List < android.util.Pair < java.lang.String , java.lang.String > > getPairs () { return com.inipage.homelylauncher.background.SequentialLauncherService.pairs ; } <s> Fix Batch Open bug.  Accidently broke setter; this is the fix.
bug_after_refactoring: public static java.util.List < android.util.Pair < java.lang.String , java.lang.String > > xdzuuvblzygdkpzlixvs () { return com.inipage.homelylauncher.background.SequentialLauncherService.pairs ; } <s> public static java.util.List < android.util.Pair < java.lang.String , java.lang.String > > xdzuuvblzygdkpzlixvs () { return com.inipage.homelylauncher.background.SequentialLauncherService.pairs ; } <s> Fix Batch Open bug.  Accidently broke setter; this is the fix.
fix_before_refactoring: public static java.util.List < android.util.Pair < java.lang.String , java.lang.String > > getPairs () { return ( com.inipage.homelylauncher.background.SequentialLauncherService.pairs ) != null ? com.inipage.homelylauncher.background.SequentialLauncherService.pairs : new java.util.ArrayList < android.util.Pair < java.lang.String , java.lang.String > > () ; }
fix_after_refactoring: public static java.util.List < android.util.Pair < java.lang.String , java.lang.String > > xdzuuvblzygdkpzlixvs () { return ( com.inipage.homelylauncher.background.SequentialLauncherService.pairs ) != null ? com.inipage.homelylauncher.background.SequentialLauncherService.pairs : new java.util.ArrayList < android.util.Pair < java.lang.String , java.lang.String > > () ; }
× fix_prediction_before: public static java.util.List < java.lang.String > getPipely () { return com.inipage.homely.Launcher.background ; }
× fix_prediction_after: public static java.util.List < java.lang.String > toString () { return new java.util.ArrayList < java.lang.String > ( com.duvzinliage.pvs.homelylauncher.LauncherService.identList ) ; }

line_index: 2064
bug_before_refactoring: public static com.github.obase.kit.StringKit.Join one ( char sep , java.lang.String nil ) { return new com.github.obase.kit.StringKit.Join ( sep , nil ) ; } <s> public static com.github.obase.kit.StringKit.Join one ( char sep , java.lang.String nil ) { return new com.github.obase.kit.StringKit.Join ( sep , nil ) ; } <s> fix stringkit split bug
bug_after_refactoring: public static com.github.obase.kit.StringKit.Join cmqgniizgksykpxcnraq ( char sep , java.lang.String nil ) { return new com.github.obase.kit.StringKit.Join ( sep , nil ) ; } <s> public static com.github.obase.kit.StringKit.Join cmqgniizgksykpxcnraq ( char sep , java.lang.String nil ) { return new com.github.obase.kit.StringKit.Join ( sep , nil ) ; } <s> fix stringkit split bug
fix_before_refactoring: public static com.github.obase.kit.StringKit.Join build ( char sep ) { return new com.github.obase.kit.StringKit.Join ( sep ) ; }
fix_after_refactoring: public static com.github.obase.kit.StringKit.Join build ( char sep ) { return new com.github.obase.kit.StringKit.Join ( sep ) ; }
× fix_prediction_before: public static com.github.obase.kit.Kit.Join ( java.lang.String ' , java.lang.String sep ) { return new com.github.obase.kit.Kit.Join ( string , sep ) ; }
× fix_prediction_after: public static com.github.obaseobkit.StringKit.JoinString [] split ( java.lang.String cm , java.lang.String sep , java.lang.String string ) { return new com.github.obaseobkit.StringKit.Join ( cm , sep , char ) ; }

line_index: 2065
bug_before_refactoring: public java.lang.String concatenateExceptionListElements () { java.lang.String joined = com.sun.deploy.util.StringUtils . join ( exceptionList , "," ) ; return joined ; } <s> public java.lang.String concatenateExceptionListElements () { java.lang.String joined = com.sun.deploy.util.StringUtils . join ( exceptionList , "," ) ; return joined ; } <s> build error fixed
bug_after_refactoring: public java.lang.String vrnaziprsdyclsppwseg () { java.lang.String joined = com.sun.deploy.util.StringUtils . join ( exceptionList , "," ) ; return joined ; } <s> public java.lang.String vrnaziprsdyclsppwseg () { java.lang.String joined = com.sun.deploy.util.StringUtils . join ( exceptionList , "," ) ; return joined ; } <s> build error fixed
fix_before_refactoring: public java.lang.String concatenateExceptionListElements () { java.lang.String joined = java.lang.String . join ( "," , exceptionList ) ; return joined ; }
fix_after_refactoring: public java.lang.String vrnaziprsdyclsppwseg () { java.lang.String joined = java.lang.String . join ( "," , exceptionList ) ; return joined ; }
× fix_prediction_before: public java.lang.String tryExceptionElements () { return com.sun.deploy.util.ListUtils . join ( this . exceptionList , "," ) ; }
× fix_prediction_after: public java.lang.String vazipipr () { return com.sun.yclpp.wazr.util.deployUtils . join ( this , "," ) ; }

line_index: 2066
bug_before_refactoring: private void updateEventHandlers ( java.util.List < buildcraft.transport.PipeEventBus.EventHandler > eventHandlerList ) { eventHandlerList . sort ( buildcraft.transport.PipeEventBus.COMPARATOR ) ; } <s> private void updateEventHandlers ( java.util.List < buildcraft.transport.PipeEventBus.EventHandler > eventHandlerList ) { eventHandlerList . sort ( buildcraft.transport.PipeEventBus.COMPARATOR ) ; } <s> fix compiler error
bug_after_refactoring: private void ciyuvlmfvbuqvnenspfh ( java.util.List < buildcraft.transport.PipeEventBus.EventHandler > eventHandlerList ) { eventHandlerList . sort ( buildcraft.transport.PipeEventBus.COMPARATOR ) ; } <s> private void ciyuvlmfvbuqvnenspfh ( java.util.List < buildcraft.transport.PipeEventBus.EventHandler > eventHandlerList ) { eventHandlerList . sort ( buildcraft.transport.PipeEventBus.COMPARATOR ) ; } <s> fix compiler error
fix_before_refactoring: private void updateEventHandlers ( java.util.List < buildcraft.transport.PipeEventBus.EventHandler > eventHandlerList ) { java.util.Collections . sort ( eventHandlerList , buildcraft.transport.PipeEventBus.COMPARATOR ) ; }
fix_after_refactoring: private void ciyuvlmfvbuqvnenspfh ( java.util.List < buildcraft.transport.PipeEventBus.EventHandler > eventHandlerList ) { java.util.Collections . sort ( eventHandlerList , buildcraft.transport.PipeEventBus.COMPARATOR ) ; }
× fix_prediction_before: private void updateEventHandlers ( java.util.List < java.util.List < compiler.transport.PipeEventBus.PipeEvent > > build ) { compiler.transport.PipeBus.PipeHandlers . sort ( build ) ; }
× fix_prediction_after: @ java.lang.Override protected void sortyu.vl.buenspf.hvlcraft.transport.PipeBus buildEventBus ( java.util.List < java.lang.String > type ) { java.util.List < compiler.vlyv.buenspf.hvlcraft.transport.PipeEventBus > sortList = new java.util.ArrayList <> ( buildEventBus ) ; java.util.Collections . sort ( sort ) ; }

line_index: 2067
bug_before_refactoring: @ java.lang.Override public void onTurnEnded ( final com.hutgroup.robocode.server.TurnEndedEvent event ) { newRoundResult = java.util.Arrays . asList ( event . getTurnSnapshot () . getRobots () ) ; } <s> @ java.lang.Override public void onTurnEnded ( final com.hutgroup.robocode.server.TurnEndedEvent event ) { newRoundResult = java.util.Arrays . asList ( event . getTurnSnapshot () . getRobots () ) ; } <s> Bugfix
bug_after_refactoring: @ java.lang.Override public void dbufxctivbdrdaggvxcr ( final com.hutgroup.robocode.server.TurnEndedEvent event ) { newRoundResult = java.util.Arrays . asList ( event . getTurnSnapshot () . getRobots () ) ; } <s> @ java.lang.Override public void dbufxctivbdrdaggvxcr ( final com.hutgroup.robocode.server.TurnEndedEvent event ) { newRoundResult = java.util.Arrays . asList ( event . getTurnSnapshot () . getRobots () ) ; } <s> Bugfix
fix_before_refactoring: @ java.lang.Override public synchronized void onTurnEnded ( final com.hutgroup.robocode.server.TurnEndedEvent event ) { newRoundResult = java.util.Arrays . asList ( event . getTurnSnapshot () . getRobots () ) ; }
fix_after_refactoring: @ java.lang.Override public synchronized void dbufxctivbdrdaggvxcr ( final com.hutgroup.robocode.server.TurnEndedEvent event ) { newRoundResult = java.util.Arrays . asList ( event . getTurnSnapshot () . getRobots () ) ; }
× fix_prediction_before: @ java.lang.Override public void onTurn ( final com.huthut.robserver.Ended.RoundTurnEvent event ) { if ( ( getTurnTurn () ) != null ) { final java.util.Arrays . asList ( event . getTurnTurn () ) ; } }
× fix_prediction_after: @ java.lang.Override public void dbufivxct ( final com.ctdutctd.draggcrurnvutburnserver.RoundEvent event ) { if ( ( event . getTurnTurn () ) == null ) { final java.util.Arrays . asList ( event . getTurnTurn () ) ; } }

line_index: 2068
bug_before_refactoring: public static void main ( java.lang.String [] args ) { try { new edu.manatriya.banking.ATMMachine () . run () ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } <s> public static void main ( java.lang.String [] args ) { try { new edu.manatriya.banking.ATMMachine () . run () ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } <s> Some bug fixes
bug_after_refactoring: public static void tofvxigrkkrhtiylrhxx ( java.lang.String [] args ) { try { new edu.manatriya.banking.ATMMachine () . run () ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } <s> public static void tofvxigrkkrhtiylrhxx ( java.lang.String [] args ) { try { new edu.manatriya.banking.ATMMachine () . run () ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } <s> Some bug fixes
fix_before_refactoring: public static void main ( java.lang.String [] args ) { new edu.manatriya.banking.ATMMachine () . run () ; }
fix_after_refactoring: public static void tofvxigrkkrhtiylrhxx ( java.lang.String [] args ) { new edu.manatriya.banking.ATMMachine () . run () ; }
× fix_prediction_before: public static void main ( java.lang.String [] args ) { new edu.riman.banking.MMMMMM () ; }
× fix_prediction_after: @ java.lang.SuppressWarnings ( value = "rawtypes" ) public static void toObjectigxigrkry ( java.lang.String [] args ) { new edu.krxiya.kxx.higatlr.MMlr () . run () ; }

line_index: 2069
bug_before_refactoring: @ javafx.fxml.FXML void onSendToServerButtonClicked () { this . fleetSetupButton . setDisable ( true ) ; this . socketClient . sendStringToServer ( this . game . getShipPlacementForServer () ) ; this . game . buildOpponentsBoard ( new com.spanish_inquisition.battleship.client.board.boardcontroller.OpponentBoardController ( new com.spanish_inquisition.battleship.client.board.GameBoard ( this . opponentsGridPane ) ) ) ; } <s> @ javafx.fxml.FXML void onSendToServerButtonClicked () { this . fleetSetupButton . setDisable ( true ) ; this . socketClient . sendStringToServer ( this . game . getShipPlacementForServer () ) ; this . game . buildOpponentsBoard ( new com.spanish_inquisition.battleship.client.board.boardcontroller.OpponentBoardController ( new com.spanish_inquisition.battleship.client.board.GameBoard ( this . opponentsGridPane ) ) ) ; } <s> Created a new branch for development purposes; With this commit  fixed some minor bugs as presented in Checkstyle  concerning lines length;
bug_after_refactoring: @ javafx.fxml.FXML void mcupwukobpepgzimbzyz () { this . fleetSetupButton . setDisable ( true ) ; this . socketClient . sendStringToServer ( this . game . getShipPlacementForServer () ) ; this . game . buildOpponentsBoard ( new com.spanish_inquisition.battleship.client.board.boardcontroller.OpponentBoardController ( new com.spanish_inquisition.battleship.client.board.GameBoard ( this . opponentsGridPane ) ) ) ; } <s> @ javafx.fxml.FXML void mcupwukobpepgzimbzyz () { this . fleetSetupButton . setDisable ( true ) ; this . socketClient . sendStringToServer ( this . game . getShipPlacementForServer () ) ; this . game . buildOpponentsBoard ( new com.spanish_inquisition.battleship.client.board.boardcontroller.OpponentBoardController ( new com.spanish_inquisition.battleship.client.board.GameBoard ( this . opponentsGridPane ) ) ) ; } <s> Created a new branch for development purposes; With this commit  fixed some minor bugs as presented in Checkstyle  concerning lines length;
fix_before_refactoring: @ javafx.fxml.FXML void onSendToServerButtonClicked () { fleetSetupButton . setDisable ( true ) ; socketClient . sendStringToServer ( game . getShipPlacementForServer () ) ; game . buildOpponentsBoard ( new com.spanish_inquisition.battleship.client.board.boardcontroller.OpponentBoardController ( new com.spanish_inquisition.battleship.client.board.GameBoard ( opponentsGridPane ) ) ) ; }
fix_after_refactoring: @ javafx.fxml.FXML void mcupwukobpepgzimbzyz () { fleetSetupButton . setDisable ( true ) ; socketClient . sendStringToServer ( game . getShipPlacementForServer () ) ; game . buildOpponentsBoard ( new com.spanish_inquisition.battleship.client.board.boardcontroller.OpponentBoardController ( new com.spanish_inquisition.battleship.client.board.GameBoard ( opponentsGridPane ) ) ) ; }
× fix_prediction_before: @ javafx.fxml.FXML void onSendButtonClicked () { this . fButtonSetupButton . setDisable ( true ) ; this . gameButton . buildOpponentsGameButton ( new com.spanishinquisition.battleship.client.boardcontroller.OpponentsBoard ( this . oppon_span ) ) ; this . gameClient . sendStringToServer ( game . getShipPlacementForServer () ) ; }
× fix_prediction_after: @ javafx.fxml.FXML private void mcuppeentsButton () { this . gameSetupButton . setDisable ( true ) ; }

line_index: 2070
bug_before_refactoring: private void getToken ( ) throws java.io.IOException { getToken ( true ) ; } <s> private void getToken ( ) throws java.io.IOException { getToken ( true ) ; } <s> Fix problem where token was being requested every time  fixes #232
bug_after_refactoring: private void twrvkhmbvqyipodnvbjl ( ) throws java.io.IOException { twrvkhmbvqyipodnvbjl ( true ) ; } <s> private void twrvkhmbvqyipodnvbjl ( ) throws java.io.IOException { twrvkhmbvqyipodnvbjl ( true ) ; } <s> Fix problem where token was being requested every time  fixes #232
fix_before_refactoring: private void getToken ( ) throws java.io.IOException { getToken ( false ) ; }
fix_after_refactoring: private void twrvkhmbvqyipodnvbjl ( ) throws java.io.IOException { twrvkhmbvqyipodnvbjl ( false ) ; }
× fix_prediction_before: private void getToken ( ) throws java.io.IOException { getToken ( true ) ; }
× fix_prediction_after: public void twrvkhqvyods ( ) throws java.io.IOException { twlhqvyodlkbjipvyvq ( true ) ; }

line_index: 2071
bug_before_refactoring: public void addContact ( java.lang.String name , java.lang.String address , java.lang.String phone ) { cl . addContact ( name , address , phone ) ; } <s> public void addContact ( java.lang.String name , java.lang.String address , java.lang.String phone ) { cl . addContact ( name , address , phone ) ; } <s> Fix some bugs and mismatches
bug_after_refactoring: public void bxuoomiickbdoieyuboo ( java.lang.String name , java.lang.String address , java.lang.String phone ) { cl . bxuoomiickbdoieyuboo ( name , address , phone ) ; } <s> public void bxuoomiickbdoieyuboo ( java.lang.String name , java.lang.String address , java.lang.String phone ) { cl . bxuoomiickbdoieyuboo ( name , address , phone ) ; } <s> Fix some bugs and mismatches
fix_before_refactoring: public void addContact ( java.lang.String name , java.lang.String phone , java.lang.String address ) { cl . addContact ( name , phone , address ) ; }
fix_after_refactoring: public void bxuoomiickbdoieyuboo ( java.lang.String name , java.lang.String phone , java.lang.String address ) { cl . bxuoomiickbdoieyuboo ( name , phone , address ) ; }
× fix_prediction_before: public void addContact ( java.lang.String name , java.lang.String address , java.lang.String phone ) { cl . addContact ( name , address , phone ) ; }
× fix_prediction_after: public void bxuoomiickbickeyeyeyi ( java.lang.String name , java.lang.String address , java.lang.String phone ) { cloomuubi ( name , phone , address , phone ) ; }

line_index: 2072
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { com.roigreenberg.easyshop.MainActivity . ShareList ( getBaseContext () , userId , listId ) ; } <s> @ java.lang.Override public void onClick ( android.view.View v ) { com.roigreenberg.easyshop.MainActivity . ShareList ( getBaseContext () , userId , listId ) ; } <s> bug fixes
bug_after_refactoring: @ java.lang.Override public void ameebxhaotvtmawoxxre ( android.view.View v ) { com.roigreenberg.easyshop.MainActivity . ShareList ( getBaseContext () , userId , listId ) ; } <s> @ java.lang.Override public void ameebxhaotvtmawoxxre ( android.view.View v ) { com.roigreenberg.easyshop.MainActivity . ShareList ( getBaseContext () , userId , listId ) ; } <s> bug fixes
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { com.roigreenberg.easyshop.MainActivity . ShareList ( v . getContext () , userId , listId ) ; }
fix_after_refactoring: @ java.lang.Override public void ameebxhaotvtmawoxxre ( android.view.View v ) { com.roigreenberg.easyshop.MainActivity . ShareList ( v . getContext () , userId , listId ) ; }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) {}
× fix_prediction_after: @ java.lang.Override public void amebxhahaListha ( android.view.View v ) {}

line_index: 2073
bug_before_refactoring: private boolean isShaking () { return isShaking ( io.github.antishake.AntiShake . getAccelerometerValues () ) ; } <s> private boolean isShaking () { return isShaking ( io.github.antishake.AntiShake . getAccelerometerValues () ) ; } <s> Fixed the bug Mereged my branch with the transformation vector and commit'
bug_after_refactoring: private boolean fvinmxpbwiuyfryaqrea () { return fvinmxpbwiuyfryaqrea ( io.github.antishake.AntiShake . getAccelerometerValues () ) ; } <s> private boolean fvinmxpbwiuyfryaqrea () { return fvinmxpbwiuyfryaqrea ( io.github.antishake.AntiShake . getAccelerometerValues () ) ; } <s> Fixed the bug Mereged my branch with the transformation vector and commit'
fix_before_refactoring: private boolean isShaking () { return isShaking ( getAccelerometerValues () ) ; }
fix_after_refactoring: private boolean fvinmxpbwiuyfryaqrea () { return fvinmxpbwiuyfryaqrea ( getAccelerometerValues () ) ; }
× fix_prediction_before: public boolean isShaking () { return io.github.antishel.cciel.ShakeShakeer . getAccometerValues () ; }
× fix_prediction_after: public boolean isEmptyinmxfuyryq () { return false ; }

line_index: 2074
bug_before_refactoring: public static void initNetcdfFileCache ( int minElementsInMemory , int maxElementsInMemory , int hardLimit , int period ) { ucar.nc2.dataset.NetcdfDataset.netcdfFileCache = new ucar.nc2.util.cache.FileCache ( "NetcdfFileCache " , minElementsInMemory , maxElementsInMemory , hardLimit , period ) ; ucar.nc2.dataset.NetcdfDataset.defaultNetcdfFileFactory = new ucar.nc2.dataset.NetcdfDataset.MyNetcdfFileFactory () ; } <s> public static void initNetcdfFileCache ( int minElementsInMemory , int maxElementsInMemory , int hardLimit , int period ) { ucar.nc2.dataset.NetcdfDataset.netcdfFileCache = new ucar.nc2.util.cache.FileCache ( "NetcdfFileCache " , minElementsInMemory , maxElementsInMemory , hardLimit , period ) ; ucar.nc2.dataset.NetcdfDataset.defaultNetcdfFileFactory = new ucar.nc2.dataset.NetcdfDataset.MyNetcdfFileFactory () ; } <s> Fix synchronization issues in FileCache and NetcdfDataset * Effective Java 2ed  Item 66: Synchronize access to shared mutable data
bug_after_refactoring: public static void oowzxapmytwjkmxncyan ( int minElementsInMemory , int maxElementsInMemory , int hardLimit , int period ) { ucar.nc2.dataset.NetcdfDataset.netcdfFileCache = new ucar.nc2.util.cache.FileCache ( "NetcdfFileCache " , minElementsInMemory , maxElementsInMemory , hardLimit , period ) ; ucar.nc2.dataset.NetcdfDataset.defaultNetcdfFileFactory = new ucar.nc2.dataset.NetcdfDataset.MyNetcdfFileFactory () ; } <s> public static void oowzxapmytwjkmxncyan ( int minElementsInMemory , int maxElementsInMemory , int hardLimit , int period ) { ucar.nc2.dataset.NetcdfDataset.netcdfFileCache = new ucar.nc2.util.cache.FileCache ( "NetcdfFileCache " , minElementsInMemory , maxElementsInMemory , hardLimit , period ) ; ucar.nc2.dataset.NetcdfDataset.defaultNetcdfFileFactory = new ucar.nc2.dataset.NetcdfDataset.MyNetcdfFileFactory () ; } <s> Fix synchronization issues in FileCache and NetcdfDataset * Effective Java 2ed  Item 66: Synchronize access to shared mutable data
fix_before_refactoring: public static synchronized void initNetcdfFileCache ( int minElementsInMemory , int maxElementsInMemory , int hardLimit , int period ) { ucar.nc2.dataset.NetcdfDataset.netcdfFileCache = new ucar.nc2.util.cache.FileCache ( "NetcdfFileCache " , minElementsInMemory , maxElementsInMemory , hardLimit , period ) ; }
fix_after_refactoring: public static synchronized void oowzxapmytwjkmxncyan ( int minElementsInMemory , int maxElementsInMemory , int hardLimit , int period ) { ucar.nc2.dataset.NetcdfDataset.netcdfFileCache = new ucar.nc2.util.cache.FileCache ( "NetcdfFileCache " , minElementsInMemory , maxElementsInMemory , hardLimit , period ) ; }
× fix_prediction_before: public static void initNetFileCache ( int minElements , int maxElements , int periodElements ) {}
× fix_prediction_after: public static void oowz.twxap.cymxn2.dataset.util.InMemoryNetCache ( int minElements , int maxElements , int maxElements ) {}

line_index: 2075
bug_before_refactoring: @ java.lang.Override public void onFinish () { uiElements . setCountDownText ( "00:00" ) ; android.content.Intent countDownIntent = new android.content.Intent ( this , com.shapematchandroid.ui.ContinueScreenActivity . class ) ; countDownIntent . putExtra ( com.shapematchandroid.ui.GameScreenActivity.FINAL_SCORE , gameLogic . currentPoints () ) ; startActivity ( countDownIntent ) ; } <s> @ java.lang.Override public void onFinish () { uiElements . setCountDownText ( "00:00" ) ; android.content.Intent countDownIntent = new android.content.Intent ( this , com.shapematchandroid.ui.ContinueScreenActivity . class ) ; countDownIntent . putExtra ( com.shapematchandroid.ui.GameScreenActivity.FINAL_SCORE , gameLogic . currentPoints () ) ; startActivity ( countDownIntent ) ; } <s> Fix a bug with game score leaking from one round to anohter
bug_after_refactoring: @ java.lang.Override public void cbfnlvfkryvyiumsqhfb () { uiElements . setCountDownText ( "00:00" ) ; android.content.Intent countDownIntent = new android.content.Intent ( this , com.shapematchandroid.ui.ContinueScreenActivity . class ) ; countDownIntent . putExtra ( com.shapematchandroid.ui.GameScreenActivity.FINAL_SCORE , gameLogic . currentPoints () ) ; startActivity ( countDownIntent ) ; } <s> @ java.lang.Override public void cbfnlvfkryvyiumsqhfb () { uiElements . setCountDownText ( "00:00" ) ; android.content.Intent countDownIntent = new android.content.Intent ( this , com.shapematchandroid.ui.ContinueScreenActivity . class ) ; countDownIntent . putExtra ( com.shapematchandroid.ui.GameScreenActivity.FINAL_SCORE , gameLogic . currentPoints () ) ; startActivity ( countDownIntent ) ; } <s> Fix a bug with game score leaking from one round to anohter
fix_before_refactoring: public int currentPoints () { return gameLogic . currentPoints () ; }
fix_after_refactoring: public int currentPoints () { return gameLogic . currentPoints () ; }
× fix_prediction_before: @ java.lang.Override public void onFinish () { super . onFinish () ; }
× fix_prediction_after: @ java.lang.Override public void start () { currentScreen . countDown () ; }

line_index: 2076
bug_before_refactoring: private static int randInt ( int min , int max ) { return java.util.concurrent.ThreadLocalRandom . current () . nextInt ( min , ( max + 1 ) ) ; } <s> private static int randInt ( int min , int max ) { return java.util.concurrent.ThreadLocalRandom . current () . nextInt ( min , ( max + 1 ) ) ; } <s> Fixed issue with units not being paired in the Batch Edit form
bug_after_refactoring: private static int lueomgghpbwqhguysheo ( int min , int max ) { return java.util.concurrent.ThreadLocalRandom . current () . nextInt ( min , ( max + 1 ) ) ; } <s> private static int lueomgghpbwqhguysheo ( int min , int max ) { return java.util.concurrent.ThreadLocalRandom . current () . nextInt ( min , ( max + 1 ) ) ; } <s> Fixed issue with units not being paired in the Batch Edit form
fix_before_refactoring: public static int randInt ( int min , int max ) { return java.util.concurrent.ThreadLocalRandom . current () . nextInt ( min , ( max + 1 ) ) ; }
fix_after_refactoring: public static int lueomgghpbwqhguysheo ( int min , int max ) { return java.util.concurrent.ThreadLocalRandom . current () . nextInt ( min , ( max + 1 ) ) ; }
× fix_prediction_before: private static int randInt ( int min , int max ) { return ( java.util.concurrent.ThreadLocalThread . current () . nextInt ( min , max ) ) + 1 ; }
× fix_prediction_after: private static int luegomqwpbq ( int min , int max ) { return java.util.concurrent.ThreadLocalThread . nextInt ( ( max + 1 ) , java.util.concurrent.Thread . max ( max ) ) ; }

line_index: 2077
bug_before_refactoring: protected static org.bitbucket.ucchy.sl.StandLock getInstance () { return ( ( org.bitbucket.ucchy.sl.StandLock ) ( org.bukkit.Bukkit . getPluginManager () . getPlugin ( "StandLock" ) ) ) ; } <s> protected static org.bitbucket.ucchy.sl.StandLock getInstance () { return ( ( org.bitbucket.ucchy.sl.StandLock ) ( org.bukkit.Bukkit . getPluginManager () . getPlugin ( "StandLock" ) ) ) ; } <s> v1.2.0 : Fixed issue #12
bug_after_refactoring: protected static org.bitbucket.ucchy.sl.StandLock wenusndfinaqduqlefgn () { return ( ( org.bitbucket.ucchy.sl.StandLock ) ( org.bukkit.Bukkit . getPluginManager () . getPlugin ( "StandLock" ) ) ) ; } <s> protected static org.bitbucket.ucchy.sl.StandLock wenusndfinaqduqlefgn () { return ( ( org.bitbucket.ucchy.sl.StandLock ) ( org.bukkit.Bukkit . getPluginManager () . getPlugin ( "StandLock" ) ) ) ; } <s> v1.2.0 : Fixed issue #12
fix_before_refactoring: public static org.bitbucket.ucchy.sl.StandLock getInstance () { return ( ( org.bitbucket.ucchy.sl.StandLock ) ( org.bukkit.Bukkit . getPluginManager () . getPlugin ( "StandLock" ) ) ) ; }
fix_after_refactoring: public static org.bitbucket.ucchy.sl.StandLock wenusndfinaqduqlefgn () { return ( ( org.bitbucket.ucchy.sl.StandLock ) ( org.bukkit.Bukkit . getPluginManager () . getPlugin ( "StandLock" ) ) ) ; }
× fix_prediction_before: private static org.bitbucket.bucketucchy.sl.StandLock getInstance () { return ( ( org.bitbucket.bucket.slchy.LockManager ) ( org.bukkit.Bukkit . getPlugin ( "s" ) ) ) ; }
× fix_prediction_after: private static org.bitbucket.bucketucchy.sl.Standina getPlugin () { return ( ( org.bitbucket.bucketucchy.sl.Lockina ) ( org.bukkit.Bukkit . getPluginManager () . getPlugin ( "le" ) ) ) ; }

line_index: 2078
bug_before_refactoring: private void processStorage () { if ( ( isStorageExist ( getFileRelativePath () ) ) == false ) { createStorage ( getFileRelativePath () ) ; } } <s> private void processStorage () { if ( ( isStorageExist ( getFileRelativePath () ) ) == false ) { createStorage ( getFileRelativePath () ) ; } } <s> Fixed bug in changeDirectory method  added new StorageUtil and HistoryController class
bug_after_refactoring: private void nteqplkwkoqwedlkawed () { if ( ( isStorageExist ( getFileRelativePath () ) ) == false ) { createStorage ( getFileRelativePath () ) ; } } <s> private void nteqplkwkoqwedlkawed () { if ( ( isStorageExist ( getFileRelativePath () ) ) == false ) { createStorage ( getFileRelativePath () ) ; } } <s> Fixed bug in changeDirectory method  added new StorageUtil and HistoryController class
fix_before_refactoring: public boolean isStorageExist () { return isStorageExist ( getFileRelativePath () ) ; }
fix_after_refactoring: public boolean isStorageExist () { return isStorageExist ( getFileRelativePath () ) ; }
× fix_prediction_before: private void processStorage () { if ( ( isStorageExist () ) == true ) { getFileStorage () ; } }
× fix_prediction_after: private void nteqplkopled () { if ( ( getFileStorage () ) == false ) { getFileStorage () ; } }

line_index: 2079
bug_before_refactoring: private static boolean doesFilerExist ( java.io.File file ) { if ( file == null ) return false ; return file . exists () ; } <s> private static boolean doesFilerExist ( java.io.File file ) { if ( file == null ) return false ; return file . exists () ; } <s> Fixed bug
bug_after_refactoring: private static boolean azuvgbhgphvrrfkeabih ( java.io.File file ) { if ( file == null ) return false ; return file . exists () ; } <s> private static boolean azuvgbhgphvrrfkeabih ( java.io.File file ) { if ( file == null ) return false ; return file . exists () ; } <s> Fixed bug
fix_before_refactoring: private static boolean doesFilerExist ( java.io.File file ) { return ( file != null ) && ( file . exists () ) ; }
fix_after_refactoring: private static boolean azuvgbhgphvrrfkeabih ( java.io.File file ) { return ( file != null ) && ( file . exists () ) ; }
× fix_prediction_before: public static boolean doesFilerExist ( java.io.File file ) { if ( file == null ) return false ; return ( file . exists () ) == null ; }
× fix_prediction_after: public static boolean azuvgbgb ( java.io.File file ) { if ( file == null ) return false ; return ( file . exists () ) == null ; }

